        /* DATA SET COMPMEMB   AT LEVEL 002 AS OF 02/02/81    */
        /* DATA SET COMPMEMB   AT LEVEL 001 AS OF 02/27/79    */
 COMPMEM: PROC OPTIONS(MAIN) REORDER; /* MATCH MERGE MEMBER LISTS */

 /*                                                                  */
 /*  PROGRAM: COMPMEMB                                               */
 /*                                                                  */
 /*  FUNCTION:  COMPARE TWO PDS DIRECTORIES.  SHOW WHETHER A MEMBER  */
 /*             EXISTS IN ONE PDS, THE OTHER PDS OR BOTH.  OPTIONALLY*/
 /*             PUT OUT A CARD WITH THE MEMBER NAME PRECEEDED AND/OR */
 /*             FOLLOWED BY A FIXED STRING FOR MEMBERS MEETING THE   */
 /*             SELECTION CRITERIA (1,2 OR BOTH LIBRARYS).           */
 /*                                                                  */
 /*  AUTHOR:  KEN TRUE   VERSION 1.0    25 FEB 1979                  */
 /*                                                                  */
 /*  V1M1 K. TRUE  2 FEB 80 - ADDED FACILITY TO COMPARE PDS:PANVALET */
 /*            AND PANVALET:PANVALET (FROM COMPPANM)                 */
 /*                                                                  */
 /*  DDNAMES USED:                                                   */
 /*     SYSPRINT - OUTPUT PRINT FILE CONTAINING LISTINGS             */
 /*                                                                  */
 /*     SYSLIB1  - INPUT  READ PDS 1/PANVALET DIRECTORY              */
 /*     SYSLIB2  - INPUT  READ PDS 2/PANVALET DIRECTORY              */
 /*                                                                  */
 /*     UT1      - OUT/IN  WORK FILE (FB,LRECL=80,BLKSIZE=XXXX)      */
 /*     UT2      - OUT/IN  WORK FILE (FB,LRECL=80,BLKSIZE=XXXX)      */
 /*                                                                  */
 /*     OUTPUT   - OUTPUT  OPTIONAL OUTPUT FOR CARDS WITH MEMBER     */
 /*                        NAMES MEETING SELECTION CRITERA(SEE BELOW)*/
 /*                        (FB,LRECL=80,BLKSIZE=XXXX)                */
 /*                                                                  */
 /*     SYSIN    - INPUT   OPTIONAL PARAMETER CARDS:                 */
 /*                                                                  */
 /*                FORMAT IS PL/I 'GET DATA' FORMAT FOR THE FOLLOWING*/
 /*                SUPPORTED NAMES:                                  */
 /*                                                                  */
 /*                LIB1P      - PREFIX TO USE IF ONLY IN SYSLIB1     */
 /*                LIB1S      - SUFFIX TO USE IF ONLY IN SYSLIB1     */
 /*                LIB1C      - COMMENT TO USE IF ONLY IN SYSLIB1    */
 /*                                                                  */
 /*                LIB2P      - PREFIX TO USE IF ONLY IN SYSLIB2     */
 /*                LIB2S      - SUFFIX TO USE IF ONLY IN SYSLIB2     */
 /*                LIB2C      - COMMENT TO USE IF ONLY IN SYSLIB2    */
 /*                                                                  */
 /*                BOTHP      - PREFIX TO USE IF ONLY ON BOTH LIBS   */
 /*                BOTHS      - SUFFIX TO USE IF ONLY ON BOTH LIBS   */
 /*                LIB1C      - COMMENT TO USE IF ONLY ON BOTH LIBS  */
 /*                                                                  */
 /*                                                                  */
1/*         NOTE: 'PREFIX' MEANS STRING UP TO 72 CHARS TO BE INSERTED*/
 /*                        BEFORE THE MEMBER NAME IN THE DDN=OUTPUT  */
 /*                        DATASET.                                  */
 /*               'SUFFIX' MEANS STRING UP TO 72 CHARS TO BE INSERTED*/
 /*                        AFTER THE MEMBER NAME IN THE DDN=OUTPUT   */
 /*                        DATASET.                                  */
 /*               'COMMENT' MEANS STRING UP TO 72 CHARS TO BE INSERTD*/
 /*                        AFTER 'PREFIX' +'SUFFIX' +11 CHARS IN THE */
 /*                        DDN=OUTPUT DATASET.                       */
 /*                        UNLIKE 'SUFFIX' THIS APPEARS IN EACH REC  */
 /*                        STARTING AT A FIXED COLUMN POSITION.      */
 /*                                                                  */
 /*                THE FORMAT OF THE OUTPUT CARD WILL BE             */
 /*                                                                  */
 /*            OUTCARD = PREFIX ×× MEMNAME ×× SUFFIX;                */
 /*                WITH COMMENT (IF ANY) APPEARING STARTING AT A     */
 /*                COLUMN= L(PREFIX)+L(SUFFIX)+11.                   */
 /*                WITH THE RESULTANT STRING TRUNCATED TO 80 CHARS.  */
 /*                                                                  */
 /*                                                                  */
 /*   EXAMPLE:  COMPARE TWO PDS'S AND FOR MEMBERS IN BOTH LIBRARIES  */
 /*             GENERATE AN IEHPROGM SCRATCH CARD FOR THE MEMBER     */
 /*             TO DELETE IT FROM SYSLIB2.                           */
 /*                                                                  */
 /*   //COMPARE  JOB  (.....                                         */
 /*   //DOIT    EXEC  PGM=COMPMEMB                                   */
 /*   //SYSPRINT  DD  SYSOUT=*                                       */
 /*   //SYSLIB1   DD  DSN=MY.DSN.LIB1,DISP=SHR    <===  PDS/PVLIB 1  */
 /*   //SYSLIB2   DD  DSN=YOUR.DSN.LIB2,DISP=SHR  <===  PDS/PVLIB 2  */
 /*   //UT1       DD  UNIT=SYSDA,SPACE=(TRK,(20,5)),                 */
 /*   //              DCB=(RECFM=FB,LRECL=80,BLKSIZE=6160)           */
 /*   //UT2       DD  UNIT=SYSDA,SPACE=(TRK,(20,5)),                 */
 /*   //              DCB=(RECFM=FB,LRECL=80,BLKSIZE=6160)           */
 /*   //OUTPUT    DD  DSN=MY.SCRATCH.DS,DISP=(,CATLG)                */
 /*   //              UNIT=SYSDA,SPACE=(TRK,(20,5),RLSE),            */
 /*   //              DCB=(RECFM=FB,LRECL=80,BLKSIZE=6160)           */
 /*   //SYSIN     DD  *                                              */
 /*   BOTHP=' SCRATCH DSNAME=YOUR.DSN.LIB2,VOL=3350=PRODXX,MEMBER='; */
 /*   /*                                                             */
 /*                                                                  */
1/*  DECLARES                                                        */
0DCL SYSPRINT          FILE PRINT;
 DCL SYSIN             FILE INPUT;

 DCL (UT1,UT2)         FILE RECORD SEQUENTIAL ENV(CONSECUTIVE);

 DCL OUTPUT   FILE  RECORD SEQUENTIAL ENV(CONSECUTIVE);

 DCL 1 INREC1,
       2 MEMBER      CHAR(10),
       2 LEVEL       PIC'999',  /* PANVALET ONLY */
       2 FILLER      CHAR(67);

 DCL 1 INREC2,
       2 MEMBER      CHAR(10),
       2 LEVEL       PIC'999',  /* PANVALET ONLY */
       2 FILLER      CHAR(67);

 DCL OUTREC          CHAR(80) INIT('');

 DCL (INCNT1,INCNT2,MATCHCNT) FIXED BIN(15,0) INIT(0);

          DCL  DSINFO ENTRY (CHAR(8),
                             1 , 2 CHAR(44) ,
                                 2 CHAR(6) ,
                                 2 BIT(32) ,
                                 2 CHAR(1) ,
                                 2 BIT(16) ,
                                 2 BIT(8) ,
                                 2 FIXED BIN(15) ,
                                 2 FIXED BIN(15) ) ;
 DCL 1 D,
       2 DSNAME  CHAR(44),
       2 VOLUME  CHAR(6),
       2 TYPE    BIT(32),
       2 DSTYPE  CHAR(1),
       2 DSORG   BIT(16),
       2 RECFM   BIT(8),
       2 LRECL   FIXED BIN(15,0),
       2 BLKSIZE FIXED BIN(15,0);

1/*  DELCARATIONS   (CONTINUED)                                      */
0DCL (POPEN,PCLOSE,PSRCH) EXTERNAL ENTRY OPTIONS(INTER,ASSEMBLER);
     /* P A M - SUBROUTINES                                        */

 DCL ACTION     FIXED BIN(31,0)  INIT(0),   /* PAM - STATUS CODES  */
     PANDDN     CHAR(8)          INIT(''),  /* PAM - DDNAME        */
     BACKUP     CHAR(8)  INIT('NO-ENTRY'),  /* PAM - PROT. FILE ACS*/
     DIRENTRY   CHAR(80)         INIT(''),  /* PAM - 0-UP FORMAT   */
     NAME1      CHAR(22) INIT('A'),         /* PAM - SUPERSET.SUBSET*/
     NAME2      CHAR(11) INIT('9999999999'),/* PAM - ENDING NAME    */
     COMMENT    CHAR(52)         INIT(''),  /* PAM - RETURN COMMENT */
     SUBSET     CHAR(27) INIT('NO-ENTRY');  /* PAM - SUBSET CNTL   */


 DCL DDNAME  CHAR(8) INIT('TESTDD');
 DCL (DSN1,DSN2) CHAR(44) INIT((44)' '),
     (TYP1,TYP2) CHAR(6)  INIT(' '),
     (VOL1,VOL2) CHAR(6)  INIT(' ');

 DCL (EOF1,EOF2,FINISHED) BIT(1) INIT('0'B);

1/*  DELCARATIONS   (CONTINUED)                                      */
0DCL PRNTDATE  PIC'99/99/99' INIT(0),
     PRNTTIME  PIC'99.99.99' INIT(0),
     PAGENO    PIC'ZZZ9'     INIT(0);

 DCL INDATE    CHAR(6)       INIT(' '),
     YY        CHAR(2) DEF(INDATE) POS(1),
     MM        CHAR(2) DEF(INDATE) POS(3),
     DD        CHAR(2) DEF(INDATE) POS(5);
 DCL (DATE,TIME,ADDR,INDEX,LENGTH,SUBSTR,UNSPEC) BUILTIN;

 DCL LIB1P     CHAR(80)  VAR  INIT(''),
     LIB1S     CHAR(80)  VAR  INIT(''),
     LIB1C     CHAR(80)  VAR  INIT('');

 DCL LIB2P     CHAR(80)  VAR  INIT(''),
     LIB2S     CHAR(80)  VAR  INIT(''),
     LIB2C     CHAR(80)  VAR  INIT('');

 DCL BOTHP     CHAR(80)  VAR  INIT(''),
     BOTHS     CHAR(80)  VAR  INIT(''),
     BOTHC     CHAR(80)  VAR  INIT('');

 DCL (DO1,DO2,DOBOTH) BIT(1) INIT('0'B);

1/*  ON ENDFILE UNITS                                                */
0ON ENDFILE(UT1)     BEGIN;
    EOF1 = '1'B;
    INREC1 = '';
    INREC1.MEMBER = '9999999999';
                     END;

 ON ENDFILE(UT2)     BEGIN;
    EOF2 = '1'B;
    INREC2 = '';
    INREC2.MEMBER = '9999999999';
                     END;

 ON ENDFILE(SYSIN) ;

1/*  INITIALIZATION OF PRINT LINE  DATE/TIME                         */
0    PRNTTIME = SUBSTR(TIME,1,6);
     INDATE = DATE;
     PRNTDATE= MM ×× DD ×× YY;


 ON ENDPAGE(SYSPRINT) BEGIN;
    PAGENO = PAGENO + 1;
    PUT FILE(SYSPRINT) PAGE EDIT
    ('COMPMEMB VER(1.1)  RUN ON: ',PRNTDATE,PRNTTIME,'PAGE ',PAGENO)
    (COL(1),A,A,X(1),A,COL(72),A,A);
    PUT FILE(SYSPRINT) SKIP(2) EDIT
    (DSN1,DSN2)
    (COL(5),A,COL(55),A,SKIP)
    (TYP1,VOL1,'BOTH LIBS',TYP2,VOL2,
     '--------','--------','--------')
    (COL(5),A,A,COL(30),A,COL(55),A,A,SKIP,
     COL(5),A,COL(30),A,COL(55),A,SKIP);

    PUT FILE(SYSPRINT) SKIP;
                      END;

 PUT FILE(SYSPRINT) EDIT
    ('COMPMEMB   -   CONTROL CARD LISTING ') (A);
 PUT FILE(SYSPRINT) SKIP(2);

 GET FILE(SYSIN) COPY DATA
      (LIB1P,LIB1S,LIB1C,LIB2P,LIB2S,LIB2C,BOTHP,BOTHS,BOTHC);

 PUT FILE(SYSPRINT) SKIP(2) EDIT
    ('COMPMEMB   -   END CONTROL CARD LISTING') (A,SKIP(2))
    (' -- PARAMETER STRINGS USED: ')    (A);

 IF LENGTH(LIB1P)+LENGTH(LIB1S)+LENGTH(LIB1C) > 0 THEN DO1='1'B;
 IF LENGTH(LIB2P)+LENGTH(LIB2S)+LENGTH(LIB2C) > 0 THEN DO2='1'B;
 IF LENGTH(BOTHP)+LENGTH(BOTHS)+LENGTH(BOTHC) > 0 THEN DOBOTH='1'B;

    PUT FILE(SYSPRINT) SKIP DATA(LIB1P,LIB1S,LIB1C);
    PUT FILE(SYSPRINT) SKIP DATA(LIB2P,LIB2S,LIB2C);
    PUT FILE(SYSPRINT) SKIP DATA(BOTHP,BOTHS,BOTHC);
    PUT FILE(SYSPRINT) SKIP(2) EDIT
       (' ABOVE VALUES WILL BE USED FOR PREFIX AND SUFFIX') (A);


1/* MAIN ROUTINE......READ EACH DIRECTORY AND PLACE RECORDS     */
 /*     INTO THE UTX FILE FOR LATER MATCH MERGE                 */

 /*  INITIALIZATION SECTION                                     */

    DDNAME='SYSLIB1 ';
    CALL INITLIB(DDNAME,UT1,DSN1,VOL1,TYP1);

    DDNAME='SYSLIB2 ';
    CALL INITLIB(DDNAME,UT2,DSN2,VOL2,TYP2);

 OPEN FILE(UT1)     INPUT,
      FILE(UT2)     INPUT,
      FILE(OUTPUT)  OUTPUT;


 CALL GETREC1;     /* INITIALIZE BY READING FIRST RECORDS */
 CALL GETREC2;
 SIGNAL ENDPAGE(SYSPRINT);

1/*  MAIN LOOP SECTION                                          */
0 FINISHED = EOF1 & EOF2;

  DO WHILE (^FINISHED);       /* MAIN LOOP TO COMPARE MEMBER NAMES */

   IF INREC1.MEMBER = INREC2.MEMBER THEN CALL MATCHED;
 ELSE
   IF INREC1.MEMBER < INREC2.MEMBER THEN CALL ONLIB1;
 ELSE
                                         CALL ONLIB2;

  FINISHED = EOF1 & EOF2;
  END;

  SIGNAL ENDPAGE(SYSPRINT);

  PUT FILE(SYSPRINT) SKIP(4) EDIT
       (INCNT1,' MEMBERS IN ',TYP1,'VOL=',VOL1,' DSN=',DSN1,
        INCNT2,' MEMBERS IN ',TYP2,'VOL=',VOL2,' DSN=',DSN2,
        MATCHCNT,' MEMBERS IN BOTH LIBARIES')
       ((2)(P'ZZZ,ZZ9',X(2),A,A,A,A,A,A,SKIP),
            P'ZZZ,ZZ9',X(2),A,SKIP );

  CLOSE FILE(UT1),
        FILE(UT2),
        FILE(OUTPUT);

 /*  ------------------END OF MAIN LINE ----------------------- */

1/*                    -----------GET A RECORD FROM SYSLIB1     */
0GETREC1: PROC;

   IF EOF1 THEN RETURN;

   READ FILE(UT1)  INTO(INREC1);
   IF EOF1 THEN RETURN;

  INCNT1 = INCNT1 + 1;

  RETURN;

 END GETREC1;

0/*                    -----------GET A RECORD FROM SYSLIB2     */
0GETREC2: PROC;

   IF EOF2 THEN RETURN;

   READ FILE(UT2)  INTO(INREC2);
   IF EOF2 THEN RETURN;

  INCNT2 = INCNT2 + 1;

  RETURN;

 END GETREC2;



1/*                    -----------MEMBER IS ON BOTH LIBRARIES   */
0MATCHED: PROC;


  IF DOBOTH THEN CALL POKE_OUT(INREC1.MEMBER,BOTHP,BOTHS,BOTHC);


  MATCHCNT = MATCHCNT + 1;

  PUT FILE(SYSPRINT) SKIP EDIT
      (INREC1.MEMBER)  (COL(30),A);



  CALL GETREC1;
  CALL GETREC2;

 RETURN;
 END;

 /*                    -----------MEMBER IS ON SYSLIB1 ONLY     */

 ONLIB1:  PROC;

  IF DO1    THEN CALL POKE_OUT(INREC1.MEMBER,LIB1P,LIB1S,LIB1C);

  PUT FILE(SYSPRINT) SKIP EDIT
      (INREC1.MEMBER)  (COL( 5),A);

  CALL GETREC1;

 RETURN;
 END;

 /*                    -----------MEMBER IS ON SYSLIB2 ONLY     */

 ONLIB2:  PROC;

  IF DO2    THEN CALL POKE_OUT(INREC2.MEMBER,LIB2P,LIB2S,LIB2C);

  PUT FILE(SYSPRINT) SKIP EDIT
      (INREC2.MEMBER)  (COL(55),A);

  CALL GETREC2;

 RETURN;
 END;
1/*  INITLIB           -----------SETUP AND INVOKE PDS/PAN READ */
 /*                               ROUTINE DEPENDING ON LIBRARY  */
 /*                               TYPE (PDS OR PAN)             */

 INITLIB: PROC(THEDD,WORKFILE,WDSN,WVOL,WTYPE);

    DCL  THEDD     CHAR(8),
         WORKFILE  FILE,
         WDSN      CHAR(44),
         WVOL      CHAR(6),
         WTYPE     CHAR(6);

    D='';
    CALL DSINFO(THEDD,D);  /* GO GET THE GOODS ON THE DDNAME  */
    WDSN = D.DSNAME;
    WVOL = D.VOLUME;

    IF  D.DSTYPE='P'   THEN
      DO;     /* INITIALIZE FOR PDS ACCESS  */
        WTYPE='PDS';
        CALL  READPDS(THEDD,WORKFILE);
      END;

    IF  D.DSTYPE='D'   THEN
      DO;     /* INITIALIZE FOR PANVALET ACCESS*/
        WTYPE='PVLIB';
        CALL  READPAN(THEDD,WORKFILE);
      END;

 RETURN;
 END;
1/*                    -----------READ PDS DIR BLOCKS AND PUT   */
 /*                               MEMBER NAMES ON UTX FILE      */
0READPDS: PROC (PDSDD,OUTFILE);

    DCL PDSDD   CHAR(8);
    DCL OUTFILE FILE ;

    DCL INPDS   FILE RECORD SEQUENTIAL
              ENV(F RECSIZE(256) BLKSIZE(256) KEYLENGTH(8));
    DCL @A      POINTER;
    DCL 1 DIRBLK,
          2 COUNT   BIT(16),
          2 ENTRIES(254) CHAR(1);
    DCL 1 ENTRY   BASED(@A),
          2 NAME    CHAR(8),
          2 TTR     CHAR(3),
          2 INDIC,
            3 ALIAS  BIT(1),
            3 TTRS   BIT(2),
            3 USERCT BIT(5),
        (LEN,PTR)  FIXED BIN(31,0);
     DCL EOF  BIT(1) INIT('0'B);

     DCL 1 OUTREC,
           2 MEMNAME  CHAR(8) INIT(' '),
           2 FILLER1  CHAR(72) INIT(' ');

     DCL EOF_MEMBER  CHAR(8),
         XFFFFFFFF   BIT(64) INIT((64)'1'B);

     UNSPEC(EOF_MEMBER) = XFFFFFFFF ×× XFFFFFFFF;

     ON ENDFILE(INPDS) EOF='1'B;

     OPEN FILE(INPDS) INPUT TITLE(PDSDD),
          FILE(OUTFILE) OUTPUT;

     READ FILE(INPDS) INTO(DIRBLK);

1    DO WHILE(^EOF);    /* PROCESS EACH MEMBER IN TURN */

        LEN=COUNT;
        PTR=1;

        DO UNTIL(PTR+2 > LEN); /* PROCESS EACH ENTRY    */

          @A = ADDR(ENTRIES(PTR)); /* ESTABLISH ADDRESS OF DIR ENTRY */
          IF NAME ^= EOF_MEMBER THEN
            DO;
              OUTREC.MEMNAME = NAME;
              WRITE FILE(OUTFILE) FROM(OUTREC);
              PTR=PTR + 12 + 2*USERCT;
            END;
           ELSE
            DO;
              PTR = LEN;     /*SIGNAL THATS ALL FOLKS */;
              EOF = '1'B;    /*SIGNAL THATS ALL FOLKS */;
            END;
        END;

        IF ^EOF THEN READ FILE(INPDS) INTO(DIRBLK);
     END;

   CLOSE FILE(INPDS),
         FILE(OUTFILE);

 END READPDS;
1/*       USE PAM - TO READ DIRECTORY ENTRIES ON PANVALET LIB   */
 /*                 AND PLACE 0-UP FORMAT ENTRIES ON UTX FILE   */
0READPAN: PROC (INPANDD,OUTFILE);

   DCL INPANDD CHAR(8);
   DCL OUTFILE FILE ;

   DCL OUTREC    CHAR(80)     INIT('');

   OPEN FILE(OUTFILE) OUTPUT;
   ACTION = 0;
   CALL POPEN(ACTION,INPANDD,BACKUP); /* OPEN PANVALET LIBRARY */

   IF ACTION ^= 0 THEN
     DO;
       PUT FILE(SYSPRINT) SKIP EDIT
           ('******* PANVALET OPEN ACTION CODE = ',ACTION,
            ' *** ON LIBRARY POINTED TO BY DDN=',INPANDD)
           (A,P'999999',A,A);
       RETURN;
     END;

1 /* PROCESS PV LIBRARY */

   ACTION = 0;
   COMMENT = '';
   CALL PSRCH(ACTION,DIRENTRY,NAME1,NAME2,COMMENT,SUBSET);
   IF ACTION ^= 0 THEN
       DO;
         PUT FILE(SYSPRINT) SKIP EDIT
             ('******* PANVALET PSRCH ACTION CODE= ',ACTION,
              ' *** ON LIBRARY POINTED TO BY DDN=',INPANDD)
             (A,P'999999',A,A);
         ACTION = 0;
         CALL PCLOSE(ACTION);
         RETURN;
       END;

   DO WHILE(SUBSTR(DIRENTRY,1,2) ^= '$*') ;    /* PROCESS ENTIRE LIB */

      OUTREC = DIRENTRY;
      WRITE FILE(OUTFILE) FROM(OUTREC);

      ACTION = 0;
      COMMENT = '';
      CALL PSRCH(ACTION,DIRENTRY,NAME1,NAME2,COMMENT,SUBSET);
      IF ACTION ^= 0 THEN
          DO;
            PUT FILE(SYSPRINT) SKIP EDIT
                ('******* PANVALET PSRCH ACTION CODE= ',ACTION,
                 ' *** ON LIBRARY POINTED TO BY DDN=',INPANDD)
                (A,P'999999',A,A);
            ACTION = 0;
            CALL PCLOSE(ACTION);
            RETURN;
          END;

   END;

   ACTION = 0;
   CALL PCLOSE(ACTION);
   CLOSE FILE(OUTFILE);
   RETURN;

 END READPAN;

1/*                    -----------WRITE OUT RECORD TO DDN=OUTPUT*/
 /*                               WITH PROPER PREFIX/SUFFIX AFTER*/
 /*                               REMOVING TRAILING BLNKS ON MEMB*/
0POKE_OUT: PROC(INMEMBER,PREFIX,SUFFIX,COMMENT);

  DCL INMEMBER   CHAR(10),
      PREFIX     CHAR(*) VAR,
      SUFFIX     CHAR(*) VAR,
      COMMENT    CHAR(*) VAR,
      MEMNAME    CHAR(10) VAR INIT(''),
      RECORD     CHAR(80) INIT(' '),
      (I,J)      FIXED BIN(15,0) INIT(0);

   I = INDEX(INMEMBER,' ');
   I = I-1;
   IF I<= 0 THEN I=10;

   MEMNAME = SUBSTR(INMEMBER,1,I);

   RECORD = PREFIX ×× MEMNAME ×× SUFFIX;

   J = LENGTH(PREFIX)+LENGTH(SUFFIX)+11;  /* FIXED OFFSET FOR COMMENT*/
   IF LENGTH(COMMENT) > 0 THEN
     DO;
       I=LENGTH(COMMENT);
       IF I+J > 80 THEN I=80-J;
       IF I> 0 THEN SUBSTR(RECORD,J,I) = SUBSTR(COMMENT,1,I);
     END;
   WRITE FILE(OUTPUT) FROM(RECORD);
   RETURN;
 END POKE_OUT;

 END COMPMEM;
