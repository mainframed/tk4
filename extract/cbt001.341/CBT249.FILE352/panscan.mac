        /* DATA SET PANSCAN    AT LEVEL 001 AS OF 01/05/83    */
 PANSCAN: PROC OPTIONS(MAIN) REORDER; /* SCAN PANVALET LIB FOR MEMBERS*/

 /*                                                                  */
 /*  PROGRAM: PANSCAN                                                */
 /*                                                                  */
 /*  FUNCTION:  READ PANVALET LIBRARIES (SELECTED MEMBERS) SEARCHING */
 /*             FOR ONE (OR MORE) CHARACTER STRINGS FOR COMPARISON.  */
 /*             INDICATE WHICH MEMBERS HAD HITS ON THE STRINGS       */
 /*             DESIRED.                                             */
 /*                                                                  */
 /*  AUTHOR:  KEN TRUE   VERSION 1.0    20 DEC 82                    */
 /*                                                                  */
 /*  DDNAMES USED:                                                   */
 /*     SYSPRINT - OUTPUT PRINT FILE CONTAINING LISTINGS             */
 /*                                                                  */
 /*     PANDD1   - INPUT  PANVALET LIBRARY TO SCAN                   */
 /*                                                                  */
 /*     SYSUT1   - WORK FILE (FB,80,6160)                            */
 /*                                                                  */
 /*     SYSIN    - INPUT  REQUIRED PARAMETER CARDS:                  */
 /*                                                                  */
 /*        SELECT <MEMBER-MASK> × * × /<LANGUAGE>                    */
 /*        FIND 'STRING1'                                            */
 /*        FIND 'STRING2'                                            */
 /*        FIND 'STRING3'   (ETC...UP TO 50 STRINGS)                 */
 /*                                                                  */
 /*  WHERE: <MEMBER-MASK> IS 1-10 CHARS TO MATCH THE MEMBER NAMES TO */
 /*                       BE SELECTED.  '*' IS A WILD CARD CHARACTER.*/
 /*                                                                  */
 /*         *             WILD CARD CHARACTER.                       */
 /*         /<LANGUAGE>   SELECTS BY LANGUAGE TYPE (I.E. /COBOL      */
 /*                       /BAL=/ASM                                  */
 /*                                                                  */
 /*                                                                  */
 /*  JCL:                                                            */
 /*                                                                  */
 /*    //PANSCAN EXEC PGM=PANSCAN                                    */
 /*    //SYSPRINT DD  SYSOUT=*                                       */
 /*    //PANDD1   DD  DSN=PANVALET.LIBRARY,DISP=SHR                  */
 /*    //SYSUT1   DD  UNIT=WORK,SPACE=(6160,(20,20))                 */
 /*    //SYSIN    DD  *                                              */
 /*    SELECT RX*                                                    */
 /*    FIND 'ORDER-QTY'                                              */
 /*    FIND 'WHAT-ME-WORRY'                                          */
 /*    SELECT /COBOL                                                 */
 /*    FIND 'JUNK-QTY'                                               */
 /*                                                                  */
 /*                                                                  */
1/*  DECLARES                                                        */
0DCL SYSPRINT          FILE PRINT;
 DCL SYSIN             FILE INPUT;
 DCL SYSUT1            FILE RECORD SEQUENTIAL
                       ENV(FB,RECSIZE(80),BLKSIZE(6160)) ;

          DCL  DSINFO ENTRY (CHAR(8),
                             1 , 2 CHAR(44) ,
                                 2 CHAR(6) ,
                                 2 BIT(32) ,
                                 2 CHAR(1) ,
                                 2 BIT(16) ,
                                 2 BIT(8) ,
                                 2 FIXED BIN(15) ,
                                 2 FIXED BIN(15) ) ;
 DCL 1 D,
       2 DSNAME  CHAR(44),
       2 VOLUME  CHAR(6),
       2 TYPE    BIT(32),
       2 DSTYPE  CHAR(1),
       2 DSORG   BIT(16),
       2 RECFM   BIT(8),
       2 LRECL   FIXED BIN(15,0),
       2 BLKSIZE FIXED BIN(15,0);

 DCL BLANK_LINE  CHAR(131) INIT(' ');
1/*  DELCARATIONS   (CONTINUED)                                      */
0DCL (POPEN,PCLOSE,PSRCH,PREAD)
      EXTERNAL ENTRY OPTIONS(INTER,ASSEMBLER);
     /* P A M - SUBROUTINES                                        */

 DCL ACTION     FIXED BIN(31,0)  INIT(0),   /* PAM - STATUS CODES  */
     PANDDN     CHAR(8)          INIT(''),  /* PAM - DDNAME        */
     BACKUP     CHAR(8)  INIT('NO-ENTRY'),  /* PAM - PROT. FILE ACS*/
     DIRENTRY   CHAR(80)         INIT(''),  /* PAM - 0-UP FORMAT   */

   1 DENT  BASED(ADDR(DIRENTRY)),
      2 DNAME    CHAR(10),  /* NAME LEFT JUSTIFIED                */
      2 DLEVEL   CHAR(3),   /* LEVEL NUMBER                       */
      2 DUSER    CHAR(4),   /* USER CODE                          */
      2 DSECURE  CHAR(1),   /* SECURITY CODE                      */
      2 DTYPE    CHAR(5),   /* LANGUAGE TYPE                      */
     /* DSTATUS  0CL3       /* 3 CHAR STATUS                      */
      2 DPRODT   CHAR(1),   /* P-PROD  T-TEST                     */
      2 DEORDD   CHAR(1),   /* E-ENABLE  D-DISABLE                */
      2 DAORDI   CHAR(1),   /* A-ACTIVE  I-INACTIVE               */
      2 DDATEM   CHAR(8),   /* DATE OF LAST MAINTENANCE MM/DD/YY  */
      2 DDATEA   CHAR(8),   /* DATE OF LAST ACCESS  MM/DD/YY      */
      2 DBLOCKS  CHAR(5),   /* NO. OF BLOCKS                      */
      2 DSTMTS   PIC'99999999', /*NUMBER OF STATEMENTS            */
      2 DLASTACT CHAR(4),   /* LAST ACTION, 1ST POS. IS * IF PROD.*/
      2 DBYTES   CHAR(2),   /* NO. BYTES PER STATMENT             */
      2 DSUBSET  CHAR(4),   /* NO. OF SUBSETS(SUPERSETS ONLY)     */
      2 DNAME2   CHAR(10),  /* NAME RIGHT JUSTIFIED               */
      2 FILL1    CHAR(1),   /* NOT USED                           */
      2 DFORM    CHAR(1),   /* N=NOFORMAT, T=TSO, ELSE BLANK      */
      2 DINC     CHAR(1),   /* I=INCLUDE BEING EXPND (EXIT ONLY)  */
      2 DVERSION CHAR(2),   /* VER. #(FOR PROTECTION FILES ONLY   */

     NAME1      CHAR(22) INIT('A'),         /* PAM - SUPERSET.SUBSET*/
     NAME2      CHAR(11) INIT('9999999999'),/* PAM - ENDING NAME    */
     COMMENT    CHAR(52) INIT('NO-ENTRY'),  /* PAM - RETURN COMMENT */
     SUBSET     CHAR(27) INIT('NO-ENTRY'),  /* PAM - SUBSET CNTL   */
     RECORD     CHAR(80) INIT(' '),         /* PAM - RECORD RETURNED*/
     INCLUDES   CHAR(8)  INIT('NO-ENTRY')   /* PAM - EXPAND MEMBERS?*/
     ;

 DCL DDNAME  CHAR(8) INIT('TESTDD');
 DCL (DSN1) CHAR(44) INIT((44)' '),
     (TYP1) CHAR(6)  INIT(' '),
     (VOL1) CHAR(6)  INIT(' ');

 DCL (EOF,FINISHED) BIT(1) INIT('0'B);

1/*  DELCARATIONS   (CONTINUED)                                      */
0DCL PRNTDATE  PIC'99/99/99' INIT(0),
     PRNTTIME  PIC'99.99.99' INIT(0),
     PAGENO    PIC'ZZZ9'     INIT(0);

 DCL INDATE    CHAR(6)       INIT(' '),
     YY        CHAR(2) DEF(INDATE) POS(1),
     MM        CHAR(2) DEF(INDATE) POS(3),
     DD        CHAR(2) DEF(INDATE) POS(5);

 DCL (DATE,TIME,ADDR,INDEX,LENGTH,SUBSTR,UNSPEC,TRANSLATE,MIN,DIM)
      BUILTIN;

 DCL (MEM_SCAN,HITS,MEM_HITS) FIXED BIN(31,0) INIT(0);
 DCL (PROCESS,FOUND_SELECT,FOUND_FIND,INHIBIT_PRINT,SHOW_LIST)
      BIT(1) INIT('0'B);

 DCL (I,J,K,L) FIXED BIN(15,0) INIT(0);
 DCL ERRMSG  CHAR(40) VAR INIT('');
 DCL MASK      CHAR(10)      INIT('**********'),
     LANGUAGE  CHAR(5)       INIT('*****');

 DCL STRINGS(50) CHAR(40) VAR INIT('');
 DCL NSTRING   FIXED BIN(15,0) INIT(0);
 DCL CARDIN    CHAR(80)      INIT(' ');

 DCL 1 ABBREV(15) CHAR(5) INIT(
       'AUTOC','ASMB ','COBOL','ANSCB','COB72',
       'FORT ','PL/1 ','RPG  ','OBJCT','JCL  ',
       'DATA ','OTHER','UNSPC','USER1','USER2' );

 ON ENDFILE(SYSIN) EOF='1'B;
 ON ENDPAGE(SYSPRINT) CALL NEWPAGE('1');

1/*  INITIALIZATION OF PRINT LINE  DATE/TIME                         */

  PRNTTIME = SUBSTR(TIME,1,6);
  INDATE = DATE;
  PRNTDATE= MM ×× DD ×× YY;

  DDNAME='PANDD1  ';
  CALL INITLIB(DDNAME,DSN1,VOL1,TYP1);

  OPEN FILE(SYSPRINT) OUTPUT STREAM PRINT
                      PAGESIZE(60) LINESIZE(131);

  CALL NEWPAGE('0');



1/*  MAIN LOOP SECTION                                          */

  CALL GETPARMS;              /* GO GET SELECT AND FIND CARDS      */

  DO WHILE (PROCESS);         /* MAIN LOOP TO COMPARE MEMBER NAMES */

    CALL LIBSCAN;             /* GO SCAN/REPORT THE LIBRARY        */
    CALL POST_TOTALS;         /* POST TOTALS FOR THIS SCAN         */
    CALL GETPARMS;            /* GO GET SELECT AND FIND CARDS      */

  END;

 /*  ------------------END OF MAIN LINE ----------------------- */

1/*  GETPARMS          -----------SETUP AND PARSE SELECT/FIND   */

 GETPARMS: PROC;

   CALL INIT_VARIABLES;

   DO WHILE(^EOF & ^PROCESS);

     IF SUBSTR(CARDIN,1,7) ='SELECT ' &
       ^FOUND_SELECT
      THEN CALL NEWPAGE('1');            /* USE THIS CONTROL CARD*/
      ELSE READ FILE(SYSIN) INTO(CARDIN);/* GET A NEW CARD       */

     IF ^EOF & ^PROCESS THEN
       DO;
         ERRMSG ='ACCEPTED AS INPUT';
         IF SUBSTR(CARDIN,1,7) ='SELECT ' THEN CALL PARSE_SELECT;
        ELSE
         IF SUBSTR(CARDIN,1,5) = 'FIND '  THEN CALL PARSE_FIND;
        ELSE
         IF SUBSTR(CARDIN,1,1) = '*'      THEN
           ERRMSG='COMMENT CARD';
        ELSE
         ERRMSG='****UNKNOWN INPUT--IGNORED****';

         IF ^INHIBIT_PRINT THEN
           PUT FILE(SYSPRINT) SKIP EDIT
             ('----->',CARDIN,'<-----',ERRMSG)
             (A,A,A,A);

         IF SUBSTR(CARDIN,1,7) = 'SELECT ' &
            FOUND_SELECT & FOUND_FIND
           THEN PROCESS='1'B;

1        IF SHOW_LIST THEN
           DO;
              PUT FILE(SYSPRINT) SKIP EDIT
                  ('NOTE: VALID LANGUAGES ARE AS FOLLOWS:') (A);
              DO I=0 TO DIM(ABBREV,1)/5 ;
                K=I*5+1;
                L=MIN(I*5+5,DIM(ABBREV,1));
                PUT FILE(SYSPRINT) SKIP EDIT
                    ((' ''',ABBREV(J),''' ' DO J=K TO L))
                    (COL(7),(5)(A,A,A));
              END;
              CALL INIT_VARIABLES;
           END;

         IF SUBSTR(CARDIN,1,7) = 'SELECT ' & ^FOUND_SELECT THEN
              SUBSTR(CARDIN,1,6)='      ';/* CLEAR OUT 'SELECT' */

       END;
     IF FOUND_SELECT & FOUND_FIND & EOF THEN PROCESS='1'B;
   END;
   RETURN;
 END GETPARMS;

1/*  INIT_VARIABLES    ----------- INITIALIZE FOR SCAN COMMAND  */
 /*                                                             */
 INIT_VARIABLES: PROC;

   PROCESS,FOUND_SELECT,FOUND_FIND,INHIBIT_PRINT,SHOW_LIST='0'B;
   MEM_SCAN =0;
   HITS=0;
   MEM_HITS=0;
   MASK='**********';
   LANGUAGE='*****';
   NAME1='A';
   NAME2='9999999999';
   STRINGS='';
   NSTRING=0;
   RETURN;
 END INIT_VARIABLES;

1/*  PARSE_SELECT      ----------- PARSE THE 'SELECT' COMMAND   */
 /*                                                             */
 PARSE_SELECT: PROC;

   IF FOUND_SELECT THEN           /* SECOND SCAN COMMAND...DO IT */
     DO;
       PROCESS='1'B;
       INHIBIT_PRINT='1'B;        /* PRINT ON NEXT PASS....      */
       RETURN;
     END;

   DO I=7 TO 72 WHILE(SUBSTR(CARDIN,I,1)=' ');
   END;

   DO J=I+1 TO 72 WHILE(SUBSTR(CARDIN,J,1)^=' ');
   END;

   IF J>=I & J-I<=10 THEN
     DO;
       MASK=SUBSTR(CARDIN,I,J-I+1);
       FOUND_SELECT='1'B;
     END;
    ELSE ERRMSG='***INVALID MASK/LANGUAGE--IGNORED';

   IF SUBSTR(MASK,1,1)='/' THEN
     DO;
       LANGUAGE=SUBSTR(MASK,2,5);
       MASK='**********';

       FOUND_SELECT=VALID_LANGUAGE;
       IF ^FOUND_SELECT THEN
            ERRMSG='**INVALID LANGUAGE-''' ×× LANGUAGE ××
                      '''-IGNORED';
     END;

   MASK=TRANSLATE(MASK,'*',' ');

   I=INDEX(MASK,'*'); /* FIND FIRST '*' CHARACTER */;
   IF I>1 THEN
     DO;
         NAME1=SUBSTR(MASK,1,I-1);
         NAME2=SUBSTR(NAME1,1,10) ;
         NAME2=TRANSLATE(NAME2,'9',' ');
         SUBSTR(NAME2,11,1)=' ';
     END;

 /*PUT FILE(SYSPRINT) SKIP DATA
       (I,J,MASK,LANGUAGE,NAME1,NAME2)*/

   RETURN;
 END PARSE_SELECT;

1/*  PARSE_FIND        ----------- PARSE THE 'FIND' COMMAND     */
 /*                                                             */
 PARSE_FIND: PROC;

   DCL MATCH_CHAR CHAR(1) INIT(' ');

   IF ^FOUND_SELECT THEN
     DO;
       ERRMSG='***''FIND'' CMD BEFORE ''SELECT'' IGNORED';
       RETURN;
     END;

   IF NSTRING<DIM(STRINGS,1) THEN
     DO;

       DO I=5 TO 72 WHILE(SUBSTR(CARDIN,I,1)=' ');
       END;

       MATCH_CHAR=SUBSTR(CARDIN,I,1);

       DO J=I+1 TO 72 WHILE(SUBSTR(CARDIN,J,1)^=MATCH_CHAR);
       END;

       IF J>I & J-I-2 <= 40 THEN
         DO;
           NSTRING=NSTRING+1;
           STRINGS(NSTRING)=SUBSTR(CARDIN,I+1,J-I-1);
         /*PUT FILE(SYSPRINT) SKIP DATA
               (I,J,MATCH_CHAR,NSTRING,STRINGS(NSTRING))*/
           FOUND_FIND='1'B;
         END;
       ELSE
         ERRMSG='**** NO END DELIMITER ON ''FIND'' STRING';
     END;
   ELSE
     DO;
       ERRMSG='***MORE THAN ' ×× DIM(STRINGS,1) ××
              '''FIND'' CMDS -- IGNORED';
     END;
   RETURN;
 END PARSE_FIND;

1/*  NEWPAGE           -----------SETUP AND PRINT PAGE HEADER   */
 /*                                                             */

 NEWPAGE: PROC(CONTROL);

    DCL CONTROL CHAR(1);

    PAGENO = PAGENO + 1;

    IF CONTROL ='1' THEN
      PUT FILE(SYSPRINT) PAGE;

    PUT FILE(SYSPRINT) EDIT
    ('PANSCAN VER(1.0)  PVLIB=')    (COL(1),A)
    (DSN1)                          (A)
    (' VOLSER=')                    (A)
    (VOL1)                          (A)
    (' RUN ON: ')                   (COL(95),A)
    (PRNTDATE)                      (A)
    (PRNTTIME)                      (X(1),A)
    ('PAGE ')                       (COL(122),A)
    (PAGENO)                        (A) ;

    PUT FILE(SYSPRINT) SKIP(2) EDIT
    ('CONTROL CARD IMAGE')          (COL(36),A)
    ('MESSAGE')                     (COL(93),A);

    PUT FILE(SYSPRINT) SKIP EDIT(BLANK_LINE) (A);
    RETURN;
 END NEWPAGE;

1/*  INITLIB           -----------SETUP AND INVOKE PDS/PAN READ */
 /*                               ROUTINE DEPENDING ON LIBRARY  */
 /*                               TYPE (PDS OR PAN)             */

 INITLIB: PROC(THEDD,WDSN,WVOL,WTYPE);

    DCL  THEDD     CHAR(8),
         WDSN      CHAR(44),
         WVOL      CHAR(6),
         WTYPE     CHAR(6);

    D='';
    CALL DSINFO(THEDD,D);  /* GO GET THE GOODS ON THE DDNAME  */
    WDSN = D.DSNAME;
    WVOL = D.VOLUME;


    IF  D.DSTYPE='D'   THEN
      DO;     /* INITIALIZE FOR PANVALET ACCESS*/
        WTYPE='PVLIB';
      END;

 RETURN;
 END;

1/*  LIBSCAN           -----------SETUP AND INVOKE PAM READ     */
 /*                               OF LIBRARY                    */
 LIBSCAN: PROC;

   DCL ENDMEM BIT(1) INIT('0'B);

   IF ^FOUND_FIND   THEN
     DO;
       PUT FILE(SYSPRINT) SKIP(2) EDIT
          ('NOTE: NO ''FIND'' COMMANDS ENTERED ') (A)
          ('NOTE: BYPASSING LIBRARY SCAN')        (SKIP,A);
       RETURN;
     END;

   ACTION = 0;
   CALL POPEN(ACTION,DDNAME,BACKUP); /* OPEN PANVALET LIBRARY */

   IF ACTION ^= 0 THEN
     DO;
       PUT FILE(SYSPRINT) SKIP(2) EDIT
           ('ERROR: PANVALET OPEN ACTION CODE = ',ACTION,
            ' *** ON LIBRARY ',DSN1)
           (A,P'999999',A,A);
       RETURN;
     END;

1 /* PROCESS PV LIBRARY */

   OPEN FILE(SYSUT1) OUTPUT RECORD;

   ACTION = 0;
   COMMENT = 'NO-ENTRY';
   SUBSET='NO-ENTRY';
   CALL PSRCH(ACTION,DIRENTRY,NAME1,NAME2,COMMENT,SUBSET);
 /*PUT FILE(SYSPRINT) SKIP EDIT(' - PSRCH:',DNAME2,'/',DTYPE)
    (A,A,A,A)*/
   IF ACTION ^= 0 THEN
       DO;
         PUT FILE(SYSPRINT) SKIP EDIT
             ('ERROR: PANVALET PSRCH ACTION CODE= ',ACTION,
              ' *** ON LIBRARY ',DSN1)
             (A,P'999999',A,A);
         ACTION = 0;
         CALL PCLOSE(ACTION);
         RETURN;
       END;

   DO WHILE(SUBSTR(DIRENTRY,1,2) ^= '$*') ;    /* PROCESS ENTIRE LIB */

      IF MASKOFF(DNAME,MASK) &
         MASKOFF(DTYPE,LANGUAGE)
        THEN WRITE FILE(SYSUT1) FROM(DIRENTRY);

      ACTION = 0;
      COMMENT = 'NO-ENTRY';
      SUBSET='NO-ENTRY';
      CALL PSRCH(ACTION,DIRENTRY,NAME1,NAME2,COMMENT,SUBSET);
   /* PUT FILE(SYSPRINT) SKIP EDIT(' - PSRCH:',DNAME2,'/',DTYPE)
       (A,A,A,A)*/
      IF ACTION ^= 0 THEN
          DO;
            PUT FILE(SYSPRINT) SKIP EDIT
                ('ERROR: PANVALET PSRCH ACTION CODE= ',ACTION,
                 ' *** ON LIBRARY ',DSN1)
                (A,P'999999',A,A);
            ACTION = 0;
            CALL PCLOSE(ACTION);
            CLOSE FILE(SYSUT1);
            RETURN;
          END;

   END;

1/*   READ BACK MEMBER LIST SELECTED AND SCAN EACH FOR THE      */
 /*   'FIND' COMMAND STRINGS                                    */
0  CLOSE FILE(SYSUT1);

   ON ENDFILE(SYSUT1) ENDMEM='1'B;

   ENDMEM='0'B;

   OPEN FILE(SYSUT1) INPUT;

   READ FILE(SYSUT1) INTO(DIRENTRY);

   DO WHILE(^ENDMEM);   /* INVOKE SCANMEMB TO LOOK FOR STRINGS */

     CALL SCANMEMB;
     READ FILE(SYSUT1) INTO(DIRENTRY);

   END;

   CLOSE FILE(SYSUT1);

   ACTION = 0;
   CALL PCLOSE(ACTION);

   RETURN;
 END LIBSCAN;

1/*  SCANMEMB          -----------READ THE MEMBER AND FIND THE  */
 /*                               STRINGS                       */
 SCANMEMB: PROC;

   DCL NAME CHAR(22) INIT(' ');
   DCL NO_ENTRY CHAR(52) INIT('NO-ENTRY');
   DCL GOTHIT BIT(1) INIT('0'B);

   IF NSTRING=0 THEN RETURN;

   NAME=DNAME;    /* GET DIRECTORY NAME   */;

   MEM_SCAN=MEM_SCAN+1;
   HITS=0;
   RECORD='';
   ACTION=0;
   INCLUDES='NO-ENTRY';
   COMMENT='NO-ENTRY';

   CALL PREAD(ACTION,RECORD,NAME,INCLUDES,COMMENT);

   IF ACTION ^= 0 THEN
       DO;
         PUT FILE(SYSPRINT) SKIP EDIT
             ('ERROR: PANVALET PREAD ACTION CODE= ',ACTION,
              ' *** ON LIBRARY ',DSN1)
             (A,P'999999',A,A);
         ACTION = 0;
         RECORD='$*';   /* FORCE END TO SCAN */
         PUT FILE(SYSPRINT) SKIP EDIT
             ('       SCAN OF MEMBER=',DNAME,' TERMINATED')
             (A,A,A);
         RETURN;
       END;

1  DO WHILE(SUBSTR(RECORD,1,2)^='$*' & ACTION=0);

     DO I=1 TO NSTRING WHILE(^GOTHIT);
       GOTHIT=INDEX(RECORD,STRINGS(I))>0;
     END;

     IF GOTHIT THEN
       DO;
         IF HITS=0
            THEN PUT FILE(SYSPRINT) SKIP EDIT(BLANK_LINE) (A);

         PUT FILE(SYSPRINT) SKIP EDIT
             ('     >',RECORD,'<     ','FOUND IN MEMBER=',DNAME)
             (A,A,A,A,A);
         HITS=HITS+1;
       END;

     GOTHIT='0'B;
     ACTION=0;
     INCLUDES='NO-ENTRY';
     COMMENT='NO-ENTRY';

     CALL PREAD(ACTION,RECORD,NAME,INCLUDES,COMMENT);

     IF ACTION ^= 0 THEN
       DO;
         PUT FILE(SYSPRINT) SKIP EDIT
             ('ERROR: PANVALET PREAD ACTION CODE= ',ACTION,
              ' *** ON LIBRARY ',DSN1)
             (A,P'999999',A,A);
         ACTION = 0;
         RECORD='$*';   /* FORCE END TO SCAN */
         PUT FILE(SYSPRINT) SKIP EDIT
             ('       SCAN OF MEMBER=',DNAME,' TERMINATED')
             (A,A,A);
         RETURN;
       END;

   END;

1  IF HITS>0
      THEN PUT FILE(SYSPRINT) SKIP EDIT(BLANK_LINE) (A);

   PUT FILE(SYSPRINT) SKIP EDIT
   ('..SELECTED ',DNAME ,':',DTYPE)       (A,A,A,A)
   (' LEVEL=',DLEVEL)                     (A,A)
   (' MAINTAINED=',DDATEM)                (A,A)
   (' ACCESSED=',DDATEA)                  (A,A)
   (' STATUS=',DPRODT,DEORDD,DAORDI)      (A,A,A,A)
   (' STMTS=',DSTMTS)                     (A,P'ZZZ,ZZ9')
   (' .. HITS=',HITS)                     (A,P'ZZZ,ZZ9');

   IF HITS > 0 THEN MEM_HITS=MEM_HITS+1;

   RETURN;
 END SCANMEMB;
1/*  MASKOFF           -----------FUNCTION: PERFORMS MASKING    */
 /*                               FOR GENERICS                  */
0 MASKOFF: PROC(INTHING,INMASK) RETURNS(BIT(1));

   DCL (INTHING,INMASK) CHAR(*);
   DCL EQUAL BIT(1) INIT('1'B);  /* ASSUME THE BEST */

   DO I=1 TO MIN(LENGTH(INTHING),LENGTH(INMASK)) WHILE(EQUAL);
   IF SUBSTR(INMASK,I,1) ^= '*'
      THEN EQUAL = SUBSTR(INTHING,I,1)=SUBSTR(INMASK,I,1);
   END;

   RETURN(EQUAL);

  END MASKOFF;
1/*  VALID_LANGUAGE    -----------VALIDATE THE LANGUAGE SELECT*/
 /*                               OF 'LANGUAGE'                 */

  VALID_LANGUAGE: PROC RETURNS(BIT(1));

    DCL VALID BIT(1) INIT('0'B);

    IF LANGUAGE='*****' THEN RETURN('1'B);

    DO I=1 TO DIM(ABBREV,1) WHILE(^VALID);
      IF LANGUAGE=ABBREV(I) THEN VALID='1'B;
    END;

    SHOW_LIST=^VALID;

    RETURN (VALID);

  END VALID_LANGUAGE;
1/*  POST_TOTALS       -----------PRINTOUT THE HIT STATISTICS */
 /*                               OF LIBRARY                    */

 POST_TOTALS: PROC;

   PUT FILE(SYSPRINT) SKIP(2) EDIT
      (MEM_SCAN,'MEMBERS SCANNED')           (P'ZZZ,ZZ9',X(1),A)
      (MEM_HITS,'MEMBERS CONTAINED ''FIND'' STRINGS')
                                        (SKIP,P'ZZZ,ZZ9',X(1),A);

   RETURN;
 END POST_TOTALS;



 END PANSCAN;
