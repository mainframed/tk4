        /* DATA SET S963P75A   AT LEVEL 001 AS OF 12/14/78    */
 P963P75: PROC OPTIONS(MAIN) REORDER;
 /******************************************************************/
 /*                                                                */
 /*    PROGRAM NAME: P963P75         - XMIT SPACE MANAGEMENT JOB   */
 /*                                                                */
 /*      WRITTEN BY: BILL WILLIAMS ................05 DEC. 1978    */
 /*                                                                */
 /* PROGRAM PURPOSE: TO CHECK DASDMON OUTLOG DATASET (INLOG-F120)  */
 /*                  FOR ANY DATASET FOUND UNCATALOG, SCRATCH,     */
 /*                  UNUSED OR PAST EXPDT ON MSVGP=XMIT. DATASETS  */
 /*                  FOUND THEN ARE MATCHED WITH INSCR (F115).     */
 /*                  IF MATCH FOUND THEN WRITE NEWSCR DATASET(F116)*/
 /*                                                                */
 /*            I/O : INLOG (FCI1.A00963.F0963.F120) CREATED IN     */
 /*                  DASDMON HAS LISTED ALL DATASETS ON DASD WITH  */
 /*                  FLAGS (UNAUTH,UNCAT,UNUSED,TOOBIG,EXPIR,      */
 /*                  OVERALL,PASTRETPD).                           */
 /*                                                                */
 /*                  INSCR (FCI2.A00963.F0963.F115) CREATED IN     */
 /*                  DASDMON HAS LISTED ALL DATASETS SELETED FOR   */
 /*                  SCRATCH.                                      */
 /*                                                                */
 /*                  NEWSCR (FCI1.A00963.F0963.F116) HAS LISTED    */
 /*                  ALL DATASETS TO BE AUTOMATICLY SCRATCHED BY   */
 /*                  C963S999.                                     */
 /*                                                                */
 /*                                                                */
 /*         COMMENT: INPUT IS CHECKED FOR ASCENDING ORDER. IF      */
 /*                  INPUT IS FOUND OUT OF ORDER ABEND IS CALLED   */
 /*                  WITH USER CODE 1024, PGM DISPLAY F120 OR F115 */
 /*                  NOT ASCENDING.                                */
 /*                  OUTPUT DATASET NEWSCR TO BE AUTO SCRATCH IN   */
 /*                  NEXT JOB STEP.                                */
 /*                                                                */
 /******************************************************************/
1/******************************************************************/
 /*                                                                */
 /*         OUTLINE:         - OPEN,SET ENDFILE,READ DATE CARD     */
 /*                  LOG     - READ F20 FIND RECORD FOR SCRACTH    */
 /*                  SCR     - MATCH RECORD 1 TO SCRATCH DATASET   */
 /*                  WRTERR  - NO FOUND WRITE TO SYSPRINT          */
 /*                  READ15  - READ IN SCRATCH CHECK ASCENDING     */
 /*                  READ20  - READ IN LOG CHECK ASCENDING         */
 /*                  EOF15   - EOF SCR IF LOG REC READ AND CHECK   */
 /*                  EOF20   - EOF LOG IF SCR REC READ AND WRITE   */
 /*                  ERRF15  - SCR FILE NOT ASCENDING - ABEND      */
 /*                  ERRF20  - LOG FILE NOT ASCENDING - ABEND      */
 /*                  ERRHEAD - NO DATE CARD ON SCR FILE - ABEND    */
 /*                  EOJ     - CLOSE AND IF ABEND CALL ABEND       */
 /*                                                                */
 /******************************************************************/

1DCL ABEND ENTRY;                         /* ABEND IF BAD DATA     */

 DCL INSCR  FILE                          /* DASDMON SCRATCH DATA  */
            RECORD
            INPUT;

 DCL INLOG  FILE                          /* DASDMON ALLOC DATASET */
            RECORD
            INPUT;

 DCL NEWSCR FILE                          /* MATCH-MERGE NEWSCR    */
            RECORD
            OUTPUT;

1DCL 1 IN_SCR,              /* DASDMON OUTSCR DATA USED FOR MATCH */
       2 IS_DSN      CHAR(44)     INIT(' '),
       2 IS_VOL      CHAR(6)      INIT(' '),
       2 IS_FLAG     CHAR(2)      INIT(' '),
       2 IS_BILLTO   CHAR(8)      INIT(' '),
       2 IS_LASTUSE  CHAR(5)      INIT(' '),
       2 IS_USER     CHAR(8)      INIT(' '),
       2 IS_DEVICE   CHAR(7)      INIT(' ');

 DCL 1 IN_LOG,              /* DASDMON OUTLOG DATA USED FOR MATCH */
       2 DSNAME      CHAR(44)         INIT(' '),
       2 MSVGP       CHAR(8)          INIT(' '),
       2 VOLUME      CHAR(6)          INIT(' '),
       2 DEVICE      CHAR(8)          INIT(' '),
       2 DISKTYPE    CHAR(1)          INIT(' '),
       2 EXTNTS      BIT(8)           INIT((8)'0'B),
       2 DSORG       CHAR(3)          INIT(' '),
       2 RECFM       CHAR(4)          INIT(' '),
       2 SALLC_TYPE  CHAR(1)          INIT(' '),
       2 SALLC_QTY   FIXED BIN(15,0)  INIT(0),
       2 LRECL       FIXED BIN(15,0)  INIT(0),
       2 BLKSIZE     FIXED BIN(15,0)  INIT(0),
       2 TRK_ALLOC   FIXED BIN(15,0)  INIT(0),
       2 TRK_USED    FIXED BIN(15,0)  INIT(0),
       2 DIR_ALLOC   FIXED BIN(15,0)  INIT(0),
       2 DIR_USED    FIXED BIN(15,0)  INIT(0),
       2 USE_COUNT   FIXED BIN(15,0)  INIT(0),
       2 DAYS_UNUSED FIXED BIN(15,0)  INIT(0),
       2 CREATED     FIXED DEC(5)     INIT(0),
       2 LAST_USED   FIXED DEC(5)     INIT(0),
       2 LAST_MOD    FIXED DEC(5)     INIT(0),
       2 LAST_MOD_TIME BIT(16)        INIT((16)'0'B),
       2 EXP_DATE    FIXED DEC(5)     INIT(0),
       2 MOD_USER    CHAR(8)          INIT(' '),
       2 BILL_TO     CHAR(8)          INIT(' '),
       2 UAUTH       CHAR(1)          INIT(' '),
       2 UCAT        CHAR(1)          INIT(' '),
       2 UUSED       CHAR(1)          INIT(' '),
       2 OTHFLAGS    CHAR(3)          INIT(' '),
       2 RETPD       CHAR(1)          INIT(' '),
       2 NOFLAG      CHAR(1)          INIT(' '),
       2 SCRFLAG     CHAR(1)          INIT(' '),
       2 PC_USED     FIXED DEC(5)     INIT(0),
       2 EXPIRES     PIC'ZZZZZZ'      INIT(0);

1DCL 1 NEW_REC,                   /* NEWSCR RECORD - MATCH FOUND   */
       2 N_DSN       CHAR(44)     INIT(' '),
       2 N_VOL       CHAR(6)      INIT(' '),
       2 N_FLAG      CHAR(2)      INIT(' '),
       2 N_BILLTO    CHAR(8)      INIT(' '),
       2 N_LASTUSE   PIC'ZZZZZ'   INIT(0),
       2 N_USER      CHAR(8)      INIT(' '),
       2 N_DEVICE    CHAR(7)      INIT(' ');


 DCL 1 SCRPARM,                 /* NEWSCR - FIRST RECORD SCR DATE  */
       2 FILL1       CHAR(9)      INIT(' '),
       2 RUN_DATE    CHAR(8)      INIT(' '),
       2 FILL2       CHAR(10)     INIT(' '),
       2 SCR_HEAD    CHAR(8)      INIT(' '),
       2 SCR_DATE    CHAR(8)      INIT(' '),
       2 FILL3       CHAR(37)     INIT(' ');

1/******************************************************************/


 DCL HIGH_VAL        CHAR(44)     INIT((44)'9');   /* ON EOF INSCR */

 DCL IS_HOLD         CHAR(44)     INIT(' '),       /* HOLD FOR CHK */
     IL_HOLD         CHAR(44)     INIT(' ');       /* HOLD FOR CHK */

 DCL DUMP          FIXED BIN(31,0) INIT(1024),     /* ABEND DUMP   */
     CODE          FIXED BIN(31,0) INIT(1024);     /* ABEND ASCEND */

 DCL ERR_CNT       FIXED BIN(15) INIT(0),          /* NO MATCH ERR */
       T_CNT       FIXED BIN(15) INIT(0);          /* NO MATCH ERR */

 DCL NO_ACEND      FIXED BIN(15) INIT(0);          /* ERR ON ASCEND*/

 /******************************************************************/
1/*----------------------------------------------------------------*/
 /*  OPEN AND CHECK FOR EOF -                                      */
 /*----------------------------------------------------------------*/
     ON ENDFILE(INLOG)   GO TO EOF20;              /* EOF F020     */
     ON ENDFILE(INSCR)   GO TO EOF15;              /* EOF F015     */
     OPEN FILE (INLOG) INPUT ,
          FILE (INSCR) INPUT ,
          FILE (NEWSCR) OUTPUT;
 /*----------------------------------------------------------------*/
 /*  READ SCRATCH HEADER - WRITE NEW SCRATCH HEADER CARD           */
 /*----------------------------------------------------------------*/
     READ FILE(INSCR)  INTO (SCRPARM);    /* READ INSCR DATE RECORD*/
     IF SCR_HEAD ^= 'SCRATCH='            /* IS THIS A HEADER CARD */
         THEN GO TO ERRHEAD;              /* NO THEN ABEND         */
      SCR_DATE = RUN_DATE            ;  /* CREATE NOW SCR DATE CARD*/
     WRITE FILE(NEWSCR) FROM(SCRPARM);  /* WRITE OUTPUT-NEWSCR DATE*/
 /*----------------------------------------------------------------*/
 /* CHECK LOG DATASET FOR OK TO SCRATCH RECORD                     */
 /*----------------------------------------------------------------*/
 LOG:
     CALL READLOG  ;                      /* READ DATASET          */

     IF  SCRFLAG  =  'S'  THEN            /* DATASET MUST BE       */
        DO;                               /*  FLAGED FOR SCRATCH   */
          IF  UCAT     =  'C'   ×        /* IS DS UNCATALOGED  OR */

              UUSED    =  'U'   ×        /* IS DS UNUSED       OR */

              RETPD    =  'R'            /* IS DS PAST RETPD  THEN*/

              THEN  GO TO SCR;           /* THEN SCRATCH IT       */
        END;
      GO TO LOG;                            /* NO GO - TRY AGAIN   */

1/*----------------------------------------------------------------*/
 /* FOUND DSNAME TO SCRATCH NOW MATCH TO IN SCRATCH DATASET        */
 /*----------------------------------------------------------------*/
 SCR:
     IF ERR_CNT  >  0   THEN              /* CHECK FOR READ ERROR  */
              ERR_CNT =  0;
      ELSE
              CALL  READSCR   ;              /* OK READ SCR        */

     IF  DSNAME     <  IS_DSN  THEN  GO  TO  WRTERR; /*NO SCR CARD */
     IF  DSNAME     =  IS_DSN                        /*SCR NOW     */
             &
         VOLUME      =  IS_VOL
            THEN  DO;
                N_DSN      =   IS_DSN     ;          /* MOVE WRITE */
                N_VOL      =   IS_VOL     ;
                N_FLAG     =   IS_FLAG    ;
                N_BILLTO   =   IS_BILLTO  ;
                N_LASTUSE  =   IS_LASTUSE ;
                N_USER     =   IS_USER    ;
                N_DEVICE   =   IS_DEVICE  ;
                WRITE FILE(NEWSCR) FROM(NEW_REC);
                GO TO LOG;                           /*DONE DID IT */
               END;
       GO TO SCR;
 /*----------------------------------------------------------------*/
 /* WRITE ERROR                                                    */
 /*----LOG SCR HAS NO MATCH ON IN-SCR CARD PUT TO SYSOUT-----------*/
 /*----------------------------------------------------------------*/
 WRTERR:

     PUT FILE(SYSPRINT) EDIT(' DSN=',DSNAME,' VOL=',
       VOLUME,' NOT FOUND IN SCRATCH CARD DATASET  F015')
           (SKIP(2),X(5),A,A(44),A,A(6),A);
       ERR_CNT = ERR_CNT + 1  ;
       T_CNT = T_CNT + 1  ;
    IF T_CNT = 20 THEN GO TO EOJ;
       GO TO LOG;                              /* LOOP TRY AGAIN  */

1/*----------------------------------------------------------------*/
 /* READ SCRATCH DATASET CHECK FOR ASCENDING ORDER                 */
 /*----------------------------------------------------------------*/
 READSCR: PROC;
 READ15:

     READ FILE(INSCR) INTO (IN_SCR);      /* READ SCRATCH  RECORD  */

     IF IS_DSN  <  IS_HOLD  THEN          /* CHECK IF ASCENDING    */
              GO  TO  ERRF15;             /* NO GO - ABEND         */

     IS_HOLD  =  IS_DSN;                  /* LOOKS GOOD            */

 END READSCR;
 /*----------------------------------------------------------------*/
 /* READ LOG DATASET CHECK FOR ASCENDING ORDER                     */
 /*----------------------------------------------------------------*/
 READLOG: PROC;
 READ20:

     READ FILE(INLOG) INTO (IN_LOG);      /* READ LOG RECORD       */

     IF DSNAME  <  IL_HOLD  THEN          /* CHECK IF ASCENDING    */
              GO  TO  ERRF20;             /* NO GO - ABEND         */

     IL_HOLD  =  DSNAME;                  /* LOOKS GOOD            */

 END READLOG;
1/*----------------------------------------------------------------*/
 /* END OF FILE INLOG - CHECK EOF INSCR - NO READ REST INSCR       */
 /*----------------------------------------------------------------*/
 EOF15:
     IF DSNAME = HIGH_VAL   THEN          /* CHECK INLOG EOF       */
           GO TO EOJ;

     IS_DSN     =  HIGH_VAL   ;           /* MOVE HIGH VALUE TO SCR*/
           GO TO WRTERR ;                 /* WRT ERROR-NO MATCH F20*/

 /*----------------------------------------------------------------*/
 /* END OF FILE INLOG - CHECK EOF INSCR - NO READ REST INSCR       */
 /*----------------------------------------------------------------*/
 EOF20:


     IF IS_DSN = HIGH_VAL   THEN          /* CHECK INSCR EOF       */
           GO TO EOJ;

     DSNAME     =  HIGH_VAL   ;
           GO TO SCR   ;              /* READ REST OF SCR CARDS */

1/*----------------------------------------------------------------*/
 /* IN SCR FILE NOT ASCENDING DISPLAY                              */
 /*----------------------------------------------------------------*/
 ERRF15:
     NO_ACEND  =  1 ;
     DISPLAY('** ABEND ******** DMPTRN01 ************* ABEND **');
     DISPLAY('                                                 ');
     DISPLAY('**** F115 SCR NOT ASCENDING - CALL SPACEMAN *****');
     DISPLAY('                                                 ');
     DISPLAY('*************************************************');
     GO TO EOJ;                                        /* GO ABEND */

 /*----------------------------------------------------------------*/
 /* IN LOG FILE NOT ASCENDING DISPLAY                              */
 /*----------------------------------------------------------------*/
 ERRF20:
     NO_ACEND  =  1 ;
     DISPLAY('** ABEND ******** DMPTRN01 ************* ABEND **');
     DISPLAY('                                                 ');
     DISPLAY('**** F120 LOG NOT ASCENDING - CALL SPACEMAN *****');
     DISPLAY('                                                 ');
     DISPLAY('*************************************************');
     GO TO EOJ;                                        /* GO ABEND */

 /*----------------------------------------------------------------*/
 /* IN SCR FILE NO HEADER DATE CARD FOUND                          */
 /*----------------------------------------------------------------*/
 ERRHEAD:
     NO_ACEND  =  1 ;
     DISPLAY('** ABEND ******** DMPTRN01 ************* ABEND **');
     DISPLAY('                                                 ');
     DISPLAY('** SCRATCH CARD HEADER NO FOUND - CALL SPACEMAN *');
     DISPLAY('                                                 ');
     DISPLAY('*************************************************');
     GO TO EOJ;                                        /* GO ABEND */

1/*----------------------------------------------------------------*/
 /* THATS IT CLOSE IT DOWN  -  CHECK CONDITION                     */
 /*----------------------------------------------------------------*/
 EOJ:

        CLOSE FILE (INSCR),
              FILE (INLOG),
              FILE (NEWSCR);

        IF  NO_ACEND  =  1  THEN                       /* IF ABEND */
              CALL ABEND(DUMP,CODE);                   /*THEN ABEND*/

 END P963P75 ;                         /* END OF MAIN PROGRAM */
