*          DATA SET S051B16    AT LEVEL 002 AS OF 05/24/78
*          DATA SET S051B16    AT LEVEL 001 AS OF 07/06/77
*          DATA SET S051B16    AT LEVEL 001 AS OF 03/09/77
*          DATA SET S051B16    AT LEVEL 007 AS OF 03/01/77
*          DATA SET CBT501     AT LEVEL 002 AS OF 12/16/75
         TITLE 'LISTSPC - DOCUMENTATION'
*.....................................................................*
*.                                                                   .*
*.   LISTSPC                                                         .*
*.                                                                   .*
*.....................................................................*
*.                                                                   .*
*.   1.0  GENERAL DESCRIPTION                                        .*
*.                                                                   .*
*.   THIS TSO COMMAND IS A MULTI-PURPOSE PROGRAM FOR LISTING         .*
*.   THE SPACE (IN TRACKS) USED BY DATASETS AND THE FREE SPACE       .*
*.   ON DISK VOLUMES.  IT CAN ALSO LIST THE EXTENTS AND VOLSER       .*
*.   OF DATASETS.                                                    .*
*.                                                                   .*
*.   FCI MODS - OBTAIN F4 DSCB ON VOL (IF NECESSARY) TO GET # TKS    .*
*.              PER CYL.  SUPPORT OF MIXED DASD.                     .*
*.            - PROVIDE SUMMARIES AT END OF LIST AND % USAGE TO USER .*
*.            - MODS BY KEN TRUE 6 JULY 76.                          .*
*.            - ALLOW VOL(PROD,..) WITH LEVEL PARAM TO ONLY SELECT  .*
*.              DATASETS ON VOLS MATCHING THE VOL TEMPLATES. KT 8/4/76*
*.                                                                   .*
*.....................................................................*
*.    REQUIRES REGEQU MACRO;    'INCLUDE (LOCINDEX)' FOR LINKEDIT    .*
*.....................................................................*
       EJECT
*.....................................................................*
*.                                                                   .*
*.   2.0  COMMAND SYNTAX                                             .*
*.                                                                   .*
*.    LISTSPC  DATASET(DSNAME-LIST) LEVEL(INDEX-STRUCTURE)           .*
*.             VOLUME(VOLUME-LIST) EXTENTS ATTRIBUTES USAGE BOTH     .*
*.                                                                   .*
*.       DATASET(DSNAME-LIST)                                        .*
*.          -  SPECIFIES A DSNAME LIST FOR WHICH YOU DESIRE TO       .*
*.             HAVE THE SPACE INFORMATION LISTED.  TSO DATASET       .*
*.             NAMING CONVENTIONS APPLY FOR THE DSNAMES.             .*
*.                                                                   .*
*.       LEVEL(INDEX-STRUCTURE)                                      .*
*.          -  SPECIFIES AN INDEX STRUCTURE FOR WHICH YOU DESIRE     .*
*.             TO HAVE THE SPACE INFORMATION LISTED FOR EACH         .*
*.             DATASET WITHIN THIS INDEX STRUCTURE.  THIS MAY        .*
*.             BE A DSNAME CONTAINING ONE EMBEDDED ASTERISK NOT      .*
*.             AS THE HIGH-LEVEL QUALIFIER OR IT MAY BE AN INDEX     .*
*.             LEVEL.                                                .*
*.                                                                   .*
*.       VOLUME(VOLUME-LIST)                                         .*
*.          -  IF USED WITH THE 'DATASET' PARAMETER, SPECIFIES THE   .*
*.             VOLUME ON WHICH THE DATASET RESIDES.  NO CATALOG      .*
*.             SEARCH WILL BE PERFORMED FOR THE DATASETS.            .*
*.          -  IF USED WITH THE 'LEVEL' PARAMETER, SPECIFIES A LIST  .*
*.             OF VOLUME SERIAL NUMBERS TO BE USED TO PRINT OR SKIP  .*
*.             THE DS ALLOCATIONS.  THE VOLSERS MAY BE PARTIAL:      .*
*.             IE VOL(PROD,WORK) ALLOWS PRINTING OF ALLOCATION FOR   .*
*.               DATASETS ON VOLUMES WITH THE FIRST 4 CHARS OF       .*
*.               'PROD' OR 'WORK'.                                   .*
*.          -  IF USED AS THE ONLY PARAMETER, SPECIFIES A LIST OF    .*
*.             VOLUMES FOR WHICH FREE SPACE INFORMATION WILL BE      .*
*.             LISTED.                                               .*
*.                                                                   .*
*.       EXTENTS                                                     .*
*.          -  SPECIFIES THAT THE VOLSER AND THE DATASET'S EXTENTS   .*
*.             (IN A HEXADECIMAL FORMAT) WILL BE LISTED FOR EACH     .*
*.             DATASET.                                              .*
*.                                                                   .*
*.     NOTE:  THE USE OF THE 'VOLUME' AND THE 'EXTENTS'              .*
*.            PARAMETERS CAN BE RESTRICTED TO CERTAIN USERIDS        .*
*.            THROUGH THE USE OF BIT 0 IN THE FIELD LABELED          .*
*.            'FLAG'.                                                .*
*.                                                                   .*
*.....................................................................*
       EJECT
*.....................................................................*
*.                                                                   .*
*.   3.0  PROGRAM STRUCTURE                                          .*
*.                                                                   .*
*.                                                                   .*
*.   3.0.1  INITIALIZATION                                           .*
*.                                                                   .*
*.   THIS SECTION BUILDS THE PARAMETER LISTS FOR PARSE AND           .*
*.   LOCINDEX.  IT CAN, IF DESIRED, CHECK THE USERID FOR             .*
*.   AUTHORIZATION AND SET BIT 0 OF THE FLAG FIELD IF THE USER       .*
*.   IS AUTHORIZED.  IT THEN LINKS TO PARSE AND DETERMINES           .*
*.   WHICH TYPE OF REQUEST IS BEING MADE.                            .*
*.                                                                   .*
*.                                                                   .*
*.   3.0.2  DATASET ROUTINE                                          .*
*.                                                                   .*
*.   THIS ROUTINE IS ENTERED IF THE 'DATASET' PARAMETER IS           .*
*.   SPECIFIED.  IF THE 'VOLUME' PARAMETER IS ALSO SPECIFIED,        .*
*.   THE 'LOCATE' IS BYPASSED.  IT THEN LINKS TO THE OBTAIN AND      .*
*.   PRINT ROUTINE.                                                  .*
*.                                                                   .*
*.                                                                   .*
*.   3.0.3  LEVEL ROUTINE                                            .*
*.                                                                   .*
*.   THIS ROUTINE IS ENTERED IF THE 'LEVEL' PARAMETER IS SPECIFIED.  .*
*.   IT LINKS TO LOCINDEX TO GET THE DSNAMES FOR THE INDEX           .*
*.   STRUCTURE AND THEN LINKS TO THE OBTAIN AND PRINT ROUTINE.       .*
*.                                                                   .*
*.                                                                   .*
*.   3.0.4  VOLUME ROUTINE                                           .*
*.                                                                   .*
*.   THIS ROUTINE IS ENTERED IF THE 'VOLUME' PARAMETER IS            .*
*.   SPECIFIED AS THE ONLY PARAMETER.  IT 'OBTAIN'S THE FORMAT 4     .*
*.   DSCB AND EXTRACTS CERTAIN FIELDS.  IT THEN 'OBTAIN'S ALL        .*
*.   OF THE FORMAT 5 DSCB RECORDS AND ACCUMULATES THE FREE           .*
*.   EXTENTS.                                                        .*
*.                                                                   .*
*.                                                                   .*
*.   3.0.5  OBTAIN AND PRINT ROUTINE                                 .*
*.                                                                   .*
*.   THIS ROUTINE 'OBTAIN'S THE FORMAT 1 DSCB AND THE FORMAT 3       .*
*.   DSCB (IF ONE EXISTS) FOR A DATASET AND ACCUMULATES THE          .*
*.   EXTENTS.  IT THEN PRINTS THE DSORG, # OF ALLOCATED TRACKS,      .*
*.   # OF UNUSED TRACKS, # OF EXTENTS, AND THE DSNAME.  IF THE       .*
*.   'EXTENTS' KEYWORD WAS SPECIFIED, IT ALSO PRINTS THE VOLSER      .*
*.   AND THE EXTENTS FOR THE DATASET.                                .*
*.                                                                   .*
*.....................................................................*
         TITLE 'LISTSPC - LIST SPACE COMMAND'
LISTSPC  START 0
         STM   R14,R12,12(R13)
         USING LISTSPC,R15
         ST    R13,SAVE+4
         LA    R13,SAVE
         B     BEGIN
SAVE     DC    18F'0'
         DROP  R15
         USING SAVE,R13
         TITLE 'LISTSPC - GETMAIN AND PARSE'
BEGIN    LR    R4,R1
         USING CPPL,R4
         LA     R0,LWORK           GET LENGTH OF WORK AREA
         AH    R0,=H'4096'         GET EXTRA 4K FOR LOCINDEX WORK
         ICM   R0,B'1000',=FL1'1'  SUBPOOL 1
         GETMAIN R,LV=(0)
         LR    R12,R1               SAVE ADDR OF WORK AREA
         USING WORKAREA,R12
         LA     R0,LOCINDXW         POINT TO LOCINDEX WORK AREA
         ST    R0,PARM+12           SAVE ADDR IN PARM LIST
         MVI   PARM+12,X'80'        INDICATE END OF PARM LIST
         MVI   WXTNT+4,X'04'
         LA    R3,WPPL             GET ADDR OF PPL
         USING PPL,R3
         L     R0,CPPLCBUF
         ST    R0,PPLCBUF          SAVE ADDR OF COMMAND BUFFER
         L     R0,CPPLUPT
         ST    R0,PPLUPT           SAVE ADDR OF UPT
         L     R0,CPPLPSCB
         LR    R10,R0              GET ADDR OF USERID FROM PSCB
         SR    R11,R11
         IC    R11,7(R10)          GET LENGTH OF USERID
         BCTR  R11,0
*        CLC   0(6,R10),=C'SYSTEM'              FCI EVERYONE ** VPI **
*        BE    AUTHRZD                              IS       ** VPI **
*        CLC   0(6,R10),=C'CONSUT'                  AUTH-    ** VPI **
*        BNE   LECT                                  ORIZED  ** VPI **
AUTHRZD  OI    FLAG,AUTHUSER                                  FCI
LECT     L     R0,CPPLECT
         ST    R0,PPLECT           SAVE ADDR OF ECT
         LA    R0,CPECB
         ST    R0,PPLECB           SAVE ADDR OF ECB
         XC    CPECB,CPECB         CLEAR ECB
         L     R0,=A(PARSLIST)
         ST    R0,PPLPCL           SAVE ADDR OF PCL
         LA    R0,WPDL
         ST    R0,PPLANS           SAVE ADDR OF PDL AREA
         XC    PPLUWA,PPLUWA       CLEAR UWA
         LR    R1,R3               PASS ADDR OF PPL TO PARSE
         LINK  EP=IKJPARS          LINK TO PARSE SERVICE ROUTINE
         LTR   R15,R15             PARSE ERROR
         BNZ   RETC                 YES
         TM    PPLANS,X'FF'        PARSE ERROR
         BO    RETC                 YES
         DROP  R3,R4
         L     R3,WPDL             GET ADDR OF PDL
         USING IKJPARMD,R3
         TM    BOTHAU+1,X'01'      'ALL' SPECED?              FCI
         BNO   TST010              NO-> TRY SOMETHING ELSE..  FCI
         OI    FLAG,DOBOTH             SAY DO BOTH            FCI
         B     DOHEAD              GO CONTINUE                FCI
TST010   TM    ATTRIB+1,X'01'      'ATTRIB' SPECED?           FCI
         BNO   TST020              NO-> ONE MORE TO TRY       FCI
         OI    FLAG,DOATTR         YES-> SAY TO DO ATTR       FCI
TST020   TM    USAGED+1,X'01'      DO USAGE INFO?             FCI
         BNO   TST030              NO-> TRY EXTENT            FCI
         OI    FLAG,DOUSAGE        YES-> SET THE FLAG         FCI
*
         TM    FLAG,DOBOTH         SET UP HEADING             FCI
         BNO   TST030              IF NOT BOTH, TRY FOR ONE   FCI
DOHEAD   MVC   MSG3(L'HEADUSAG),HEADUSAG   MOVE IN USAGE      FCI
         MVC   MSG3+L'HEADUSAG(L'HEADATTR),HEADATTR MOVE IN ATTR FCI
         B     TST050
TST030   TM    FLAG,DOATTR         HOW ABOUT ONLY ATTR        FCI
         BNO   TST040              IF NOT, TRY FOR USAGE      FCI
         MVC   MSG3+MOFFSET(L'HEADATTR),HEADATTR              FCI
         B     TST050                                         FCI
TST040   TM    FLAG,DOUSAGE        HOW ABOUUT ONLY USAGE      FCI
         BNO   TST050                                         FCI
         MVC   MSG3+MOFFSET(L'HEADUSAG),HEADUSAG              FCI
*
TST050   TM    EXTENT+1,X'01'      EXTENT SPECIFIED?          FCI
         BZ    *+8                  NO
         OI    FLAG,DOEXTNT         YES, SET FLAG BIT         FCI
         TM    DSNLIST+6,X'80'      DSNAME SPECIFIED?
         BO    DSNRTN                YES
         TM    LEV+6,X'80'          INDEX LEVEL SPECIFIED?
         BO    LEVEL                 YES
         TM    VOL+6,X'80'          VOLUME SPECIFIED?
         BO    FREEA                 YES
         B     EUSLO                NO PARMS - LISTS FOR USERID
         TITLE 'LISTSPC - DATASET NAME ROUTINE'
DSNRTN   LA    R4,DSNLIST           POINT TO DSN LIST
         LA     R0,L'MSG1
         LA     R1,MSG1
         TPUT   (1),(0),R          TPUT HEADING
         TM    FLAG,DOBOTH         ATTR OR USAGE REQUESTED?    FCI
         BZ    DSNAME              NO - SKIP HEADING           FCI
         LA     R0,L'MSG3                                      FCI
         LA     R1,MSG3                                        FCI
         TPUT   (1),(0),R          TPUT HEADING                FCI
DSNAME   L     R5,0(R4)             POINT TO DSNAME
         LH    R6,4(R4)             GET LENGTH OF DSNAME
         BCTR  R6,0
         MVI   DSN1,X'40'
         MVC   DSN1+1(43),DSN1     BLANK DSN WORK AREA
         LA    R8,DSN1              POINT TO DSN WORK AREA
         TM    6(R4),X'40'          DSNAME CONTAINED IN QUOTES?
         BO    MVCDSNAM               YES
         EX    R11,USIDMVC         MOVE USERID TO WORK AREA
         LA    R8,1(R11,R8)        BUMP PAST USERID
         MVI   0(R8),C'.'          MOVE PERIOD TO WORK AREA
         LA    R8,1(0,R8)          BUMP PAST
MVCDSNAM EX    R6,DSNMVC           MOVE DSNAME TO WORK AREA
         MVC   VOLS,BLANKS         MOVE BLANKS TO VOLSER WORK AREA
         TM    FLAG,AUTHUSER       AUTHORIZED USER?           FCI
         BZ    LOCDSN               NO
         TM    VOL+6,X'80'         VOLUME SPECIFIED?
         BZ    LOCDSN               NO, LOCATE DSN
         LA    R1,VOLS             POINT TO VOLSER WORK AREA
         L     R5,VOL              POINT TO VOLUME PARAMETER
         LH    R6,VOL+4            GET LENGTH OF VOL PARM
         BCTR  R6,0
         EX    R6,MVCVOLS          MOVE VOL PARM TO VOLSER WORK AREA
         B     BALOBTN             BYPASS LOCATE
LOCDSN   OI    FLAG,DOLOCATE                                  FCI
         LOCATE INDS
         LTR   R15,R15              DID IT FIND VOL SER
         BNZ   ERR02                 NO WRITE ERROR MSG
         NI    FLAG,RSETLOC        TURN OFF LOCATE FLAG       FCI
         MVC   VOLS(6),BUF1+6      YES - MOVE IN VOL SER
         SPACE 2
BALOBTN  BAL   R9,OBTNRTN          LINK TO OBTAIN AND PRINT ROUTINE
RETDSN   L     R4,24(R4)           GET DSN LINK POINTER
         C     R4,ENDLIST          END OF LIST?
         BE    PRNTSUM              YES                             FCI
         B     DSNAME               NO, GET NEXT DSNAME
         TITLE 'LISTSPC - LEVEL ROUTINE'
EUSLO    EQU   *
**     FOR ENTIRE USERID LOGGED ON
         MVC   USERID(7),0(R10)        MOVE IN USERID
         B     GOTUS               BRANCH TO GOT USERID
         SPACE 3
LEVEL    EQU   *
         L     R5,LEV              POINT TO INDEX STRUCTURE
         LH    R6,LEV+4            GET LENGTH OF INDEX STRUCT
         BCTR  R6,0
         LA    R8,USERID           POINT TO WORK AREA
         EX    R6,DSNMVC           MOVE INDEX STRUCTURE TO WORK AREA
GOTUS    EQU   *
         LA     R0,L'MSG1
         LA     R1,MSG1
         TPUT   (1),(0),R          TPUT HEADING
         TM    FLAG,DOBOTH         ATTR OR USAGE REQUESTED?      FCI
         BZ    CHKDODSN            NO - SKIP HEADING             FCI
         LA     R0,L'MSG3                                        FCI
         LA     R1,MSG3                                          FCI
         TPUT   (1),(0),R          TPUT HEADING                  FCI
CHKDODSN OI    FLAG,DODSNAME      SET FLAG FOR DATA SETS FOR USERIDFCI
         TM    VOL+6,X'80'         WAS VOL GIVEN?                 FCI
         BNO   LOOP                NO-> ANY VOL WILL DO           FCI
         OI    FLAG,VOLSPECD       YES-> ONLY DS ON THIS VOL SCANDFCI
LOOP     EQU   *                   LOOP FOR DATASET IN USERID
         L     R15,=V(LOCINDEX)    POINT TO EP(LOCINDEX)
         LA    R1,PARM             POINT TO PARM LIST
         BALR  R14,R15             GO TO LOCINDEX
         B     *+4(R15)            BRANCH , DEP ON RETURN CODE
         B     OK                  0-GET INFOR FOR DSN & CONT
         B     NOUSER              4-PRINT MSG & RETRUN TO SYS
         B     NOTDISK             8-PRINT MSG&CONTINUE
         B     MULTIVOL            12-PRINT MSG&CONTINUE
         B     PRNTSUM             16-FINISHED-PRINT SUMMARY    FCI
         B     RDERR               20-PRINT MSG&RETRUN TO SUS
OK       BAL   R9,OBTNRTN          LINK TO OBTAIN AND PRINT ROUTINE
         B     LOOP                GET NEXT DSNAME FROM LOCINDEX
         SPACE 3
         TITLE 'LISTSPC - VOLUME ROUTINE'
FREEA    EQU   *
** TO GET AVAILABLE SPACE ON PARTICULAR VOLUME
         TM    FLAG,AUTHUSER       AUTHORIZED USER?           FCI
         BZ    ERRF                 NO
         LA     R0,L'MSG4
         LA     R1,MSG4
         TPUT   (1),(0),R          TPUT HEADING
         SPACE 2
         LA    R4,VOL              POINT TO VOLUME LIST
VOLLOOP  ST    R4,OBTNSAVE         SAVE ADDRESS
         MVI   MSG2,X'40'
         MVC   MSG2+1(79),MSG2     BLANK MESSAGE AREA
         XC    PEXCTR,PEXCTR       CLEAR EXTENT COUNTER
         LA    R1,VOLS             POINT TO VOLSER WORK AREA
         L     R5,0(R4)            POINT TO VOLUME PARM
         LH    R6,4(R4)            GET LENGTH OF VOL PARM
         BCTR  R6,0
         EX    R6,MVCVOLS          MOVE VOL PARM TO VOLSER WORK AREA
         LA    R1,MSG2             POINT TO MESSAGE AREA
         EX    R6,MVCVOLS          MOVE VOLSER TO MESSAGE AREA
         MVI   DSN1,X'04'          MOVE 'DSN' FOR F4 DSCB...
         MVC   DSN1+1(43),DSN1     ...INTO DSN1
         OBTAIN SERCHCAM
         CLI   BUF1,X'F4'          DID IT READ OK?
         BNE   ERRF4               NO
         MVC   VOLTKCYL(2),BUF1+20 GET NUM OF TRKS/CYL
         MVC   VOLDSCTK+1(1),BUF1+30   GET NUM OF DSCBS PER TRK
         MVC   VOLF4CHR(4),BUF1+63 GET CCHH OF START OF VTOC
         MVI   VOLF4CHR+4,X'01'    F4 DSCB IS FIRST REC
         LH    RCC,VOLF4CHR        SETUP...
         LH    RHH,VOLF4CHR+2         DISK...
         SR    RR,RR                     ADDRESSING...
         IC    RR,VOLF4CHR+4
         MVC   WXTNT(4),BUF1+63    MOVE BEGIN XTNT TO WORK AREA
         UNPK  MSG2+29(9),WXTNT(5) UNPACK INTO MESSAGE AREA
         TR    MSG2+29(8),TRTBL    TRANSLATE EXTENT
         MVC   WXTNT(4),BUF1+67    MOVE END XTNT TO WORK AREA
         UNPK  MSG2+38(9),WXTNT(5) UNPACK INTO MESSAGE AREA
         TR    MSG2+38(8),TRTBL    TRANSLATE EXTENT
         SR    R9,R9
         LH    R9,BUF1+6             MOVE IN NUMBER FREE DSCB
         CVD   R9,WKD
         MVC   MSG2+6(6),MASKED        MOVE IN MASK
         ED    MSG2+6(6),WKD+5         EDIT FREE DSCB
         LH    R1,VOLNO            GET NUM VOLS PROCESSED
         LA    R1,1(R1)            BUMP
         STH   R1,VOLNO            REPLACE
         LA    RR,1(RR)            BUMP RECORD PTR
         CH    RR,VOLDSCTK         TEST FOR LAST REC ON TRK
         BNH   VBSET               GO SET VTOCCHHR
         LA    RR,1                RESET RR TO 1
         LA    RHH,1(RHH)          BUMP TRK COUNTER
         CH    RHH,VOLTKCYL        PAST END OF CYL?
         BL    VBSET               GO SET VTOCCHHR
         SR    RHH,RHH             ELSE SET RHH TO TRK 0
         LA    RCC,1(RCC)          BUMP TO NEXT CYL
VBSET    STH   RCC,VTOCCHHR        SET...
         STH   RHH,VTOCCHHR+2         UP...
         STC   RR,VTOCCHHR+4            VTOCCHHR
         SR    R4,R4               ZERO COUNTER
         SPACE 2
PFOBT    OBTAIN SEEKCAM
         LA    R2,1                INDICATE FIRST EXTENT
         LA    R3,BUF1+4           POINT TO FIRST EXTENT
PFLOOP   CLC   0(5,R3),=D'0'       LAST EXTENT?
         BE    PFGOT               EXIT IF SO
         MVC   HWK1(2),2(R3)       MOVE NUM CYLS TO HWD
         LH    R1,HWK1             LOAD
         MH    R1,VOLTKCYL         CONVERT TO TRKS
         SR    R0,R0               ZERO R0
         IC    R0,4(R3)            LOAD NUM TRKS
         AR    R1,R0               ADD TRKS
         AR    R4,R1               ACCUMULATE
         LA    R2,1(R2)            BUMP CTR
         CH    R2,=H'9'            NINTH EXTENT?
         BE    PFXT9               BRANCH IF SO
         CH    R2,=H'27'           27TH EXTNET?
         BE    PFXT27              BRANCH IF SO
         LA    R3,5(R3)            BUMP NORMALLY
         B     PFLOOP              AND CONTINUE
PFXT9    LA    R3,6(R3)            SKIP OVER F5 IF AT DSCH+44
         B     PFLOOP              AND CONTINUE
PFXT27   AH    R2,PEXCTR           ACCUM EXT TOTALS
         BCTR  R2,0
         STH   R2,PEXCTR           SAVE EXT TOTALS
         CLC   BUF1+135(5),=D'0'   PTR TO NEXT F5?
         BE    PFGOT               DONE. NO MORE F5
         MVC   VTOCCHHR(5),BUF1+135
         B     PFOBT               GO READ NEXT F5
PFGOT    EQU   *
         AH    R2,PEXCTR           ACCUM EXTENT TOTALS
         CVD   R2,WKD              CONVERT NUM EXTENTS
         MVC   MSG2+14(4),MASKED     MOVE IN MASK
         ED    MSG2+14(4),WKD+6      EDIT NUM EXTENTS
         CVD   R4,WKD              CONVERT NUM TRKS FREE
         MVC   MSG2+21(6),MASKED     MOVE IN MASK
         ED    MSG2+21(6),WKD+5      EDIT FREE TRKS
         LA    R0,L'MSG2
         LA    R1,MSG2
         TPUT  (1),(0),R           WRITE FREE INFO
VOLRET   L     R4,OBTNSAVE         LOAD POINTER TO VOLUME LIST
         L     R4,8(R4)            GET LINK POINTER
         C     R4,ENDLIST          END OF LIST
         BE    RETC                 YES
         B     VOLLOOP              NO, GET NEXT VOLUME
         TITLE 'LISTSPC - OBTAIN AND PRINT ROUTINES'
*   READ DSCB1 AND GET SPACE
OBTNRTN  STM   R2,R11,OBTNSAVE     SAVE CALLER'S REGISTERS
         TM    FLAG,VOLSPECD       CHK VOL SERS?               FCI
         BNO   OBTNRTN1            NO-> ANY VOL WILL DO        FCI
         LA    R4,VOL              POINT TO START OF VOLUME LISFCI
LOOPVCHK EQU   *                                               FCI
         L     R5,0(R4)            POINT TO VOLUME PARM        FCI
         LH    R6,4(R4)            GET LENGTH OF VOL PARM      FCI
         BCTR  R6,0                                            FCI
         EX    R6,COMPVOLS         COMPARE THIS VOL TO PATTERN FCI
         BE    OBTNRTN1            YES-> GO DO IT              FCI
         L     R4,8(R4)            NO-> GET NEXT VOL IN LIST   FCI
         C     R4,ENDLIST          IS THIS ALL?                FCI
         BNE   LOOPVCHK            NO-> TRY THE NEXT           FCI
         LM    R2,R11,OBTNSAVE     NONE OF THE ABOVE..SPLIT    FCI
         BR    R9                                              FCI
COMPVOLS CLC   0(0,R5),VOLS        EXECUTED INSTRUCTION        FCI
OBTNRTN1 EQU   *                   CONTINUE PROCESSING         FCI
         MVI   MSG2,X'40'
         MVC   MSG2+1(79),MSG2     BLANK MESSAGE AREA
         OBTAIN SERCHCAM
         LTR   R15,R15             DID OBTAIN WORK
         BNZ   ERR03               NO - WRITE ERROR MSG
         SPACE 2
         CLI   BUF1,C'1'            IS IT F1 DSCB?
         BNE   ERR01                NOT F1
         SPACE
         TM    FLAG,DOBOTH          WAS USAGE OR ATTR WANTED      FCI
         BZ    NOJUNK                                             FCI
*
         L     R15,=V(GETATTR)      CALL GETATTR TO FORMAT ATTR   FCI
         LA    R1,PARM1               AND USAGE IN MSG3 LINE      FCI
         BALR  R14,R15                                            FCI
*
NOJUNK   CLC   LASTVOL,VOLS        HAVE WE SEEN THIS VOL BEFORE    FCI
         BE    OKVOL               YES -> SKIP F4 OBTAIN           FCI
         MVC   LASTVOL,VOLS        NO->SETUP FOR OBTAIN OF F4DSCB  FCI
         OBTAIN F4CAM              GET THE FORMAT 4 DSCB           FCI
CHKOBT   LTR   R15,R15             DID IT WORK?                    FCI
         BNZ   FCIERR1             NO -> GRIPE AND CONTINUE        FCI
         MVC   VOLTKCYL(2),BUF2+20 YES-> MOVE IN # TRKS/CYL        FCI
OKVOL    LA    R9,XTNTS            POINT TO EXTENTS SAVE AREA
         LH    R6,BUF1+54          GET LAST RELATIVE TRK USED
         CLI   BUF1+56,X'00'       IS TRK UNUSED?
         BE    *+8                  YES
         LA    R6,1(R6)             NO, ANOTHER TRACK
         STH   R6,LASTTRK          SAVE LAST REL. TRK
         MVC   DSORG,BUF1+38       SAVE DSORG
         EJECT
AROUND   EQU   *
* TEST FOR TYPE OF DSORG AND MOVE TO PRINT LINE
         TM    BUF1+38,X'80'        IS IT IS                      FCI
         BZ    NIS                  NO                            FCI
         MVC   MDSORG,=C'IS'        YES - MOVE IN IS
         B     GDSO                 BRANCH TO GOT DSORG
NIS      TM    BUF1+38,X'40'        IS IT PS                      FCI
         BZ    NPS                   NO                           FCI
         MVC   MDSORG,=C'PS'         YES-MOVE IN PS
         B     GDSO                 BRANCH TO GOT DSORG
NPS      TM    BUF1+38,X'20'        IS IT DA                      FCI
         BZ    NDA                   NO                           FCI
         MVC   MDSORG,=C'DA'         YES - MOVE IN DA
         B     GDSO                 BRANCH TO GOT DSORG
NDA      TM    BUF1+38,X'02'        IS IT PO                      FCI
         BZ    GDSO                  NO                           FCI
         MVC   MDSORG,=C'PO'         YES - MOVE IN PO
GDSO     TM    BUF1+38,X'01'        IS IT UNMOVEABLE
         BZ    GDSO1                 NO                           FCI
         MVI   MDSORGU,C'U'          YES                          FCI
GDSO1    TM    BUF1+39,X'080'       IS IT VSAM?                   FCI
         BZ    GDSO1A                NO                           FCI
         MVC   MDSORG,=C'VS'         YES                          FCI
GDSO1A   SR    R2,R2                ZERO REG 2                    FCI
         IC    R2,BUF1+15           PICK UP NUMBER OF EXTENTS
         LA    R3,1                 SET EXTENT COUNTER
         SR    R4,R4                CLEAR R4 TO TRK ACCUMULATION
         LTR   R2,R2               NO XTNTS? - GDG PATTERN. DSCB
         BZ    VVALID               YES, BYPASS ACCUMULATE
         LA    R5,BUF1+61           POINT TO FIRST EXTENT
VXTLOOP  MVC   0(10,R9),0(R5)      MOVE EXTENT TO SAVE AREA
         LA    R9,10(R9)           BUMP TO NEXT SAVE AREA
         MVC   HWK1(2),6(R5)        MOVE HI-CYL TO HWD
         LH    R0,HWK1              LOAD
         MVC   HWK1(2),8(R5)        MOVE HI-TRK TO HWD
         LH    R1,HWK1              LOAD
         MVC   HWK1(2),2(R5)        MOVE LOW-CYL TO HWD
         SH    R0,HWK1              SUBTRACT
         MVC   HWK1(2),4(R5)        MOVE LOW-TRK TO HWD
         SH    R1,HWK1              SUBTRACT
         MH    R0,VOLTKCYL          CONVERT CYL TO TRK
         AR    R1,R0                GET TOTAL MINUS1
         LA    R4,1(R1,R4)          GET TOTAL AND ACCUMULATE
         CR    R3,R2                DONE LAST EXTENT?
         BE    VVALID               GO TO VVALID IF SO
         LA    R3,1(R3)             BUMP TO EXTENT COUNTER
         CH    R3,=H'4'             FOURTH EXTENT?
         BE    VXT4                   BRANCH IF SO
         CH    R3,=H'8'             EIGHTTH EXTENT?
         BE   VXT8
         LA    R5,10(R5)            ELSE BUMP EXTENT POINTER
         B     VXTLOOP              AND GO TO NEXT EXTENT
VXT4     MVC   VTOCCHHR(5),BUF1+91  POINT NEXT DSCH(F2 OR F3)
VXT4OBT  OBTAIN SEEKCAM
         CLI   BUF1+44,C'3'         IF IT F3 DSCB
         BE    VXT4F3               BRANCH IF SO
         MVC   VTOCCHHR(5),BUF1+135  ELSE ITS F2-POINT TO F3
         B     VXT4OBT
VXT4F3   LA    R5,BUF1+4            POINT TO FIRST EXTENT IN F3
         B     VXTLOOP              CONTINUE LOOP FOR SIZE
VXT8     LA    R5,BUF1+45           SKIP OVER F3 ID IN F3 DSCB
         B     VXTLOOP              CONTINUE LOOP FOR SIZE
VVALID   EQU   *
* CONVERT SPACE ALLOC AND EDIT IN PRINT LINE
         CVD   R4,WKD               CONVERT DEC. R4  #TRKS ALLOC
         MVC   MALLOC,MASKED         MOVE MASKED FIELD IN
         ED    MALLOC,WKD+5          EDIT  # TRKS MSG2+5
         LR    R1,R4                GET # TRKS INTO WORK REG       FCI
         A     R1,TRKSTOT           ACCUMULATE # TRACKS ALLOCATED  FCI
         ST    R1,TRKSTOT            AND SAVE RESULT..             FCI
         TM    DSORG,X'42'        IS IT PO OR PS
         BNZ   CVDU                  YES - BRANCH
         MVI   MUASTER,C'*'
         B     CVDX                 BRANCH TO EXTENT CONVERSION
CVDU     LH    R6,LASTTRK            GET LAST RELATIVE TRACK
         LR    R7,R4
         SR    R7,R6                 R7 CONTAINS UNUSED SPACE
         CVD   R7,WKD               CONVERT DEC R7
         MVC   MUNUSED,MASKED         MOVE IN MASKED FIELD
         ED    MUNUSED,WKD+5          EDIT # TRKD UNUSED
         A     R7,WASTETRK          ACCUMULATE NUMBER OF TRACKS     FCI
         ST    R7,WASTETRK           UNUSED (WASTED) AND SAVE...    FCI
CVDX     CVD   R2,WKD                   PICK UP # EXTENTS
         MVC   MEXTNTS,MASKED         MOVE IN MASKED FIELD
         ED    MEXTNTS,WKD+6         EDIT # EXTENTS USED
         MVC   MDSNAME,DSN1         MOVE DSN TO PRINT LINE
         LA    R0,L'MSG2
         LA    R1,MSG2
         TPUT  (1),(0),R           WRITE OUT LINE
         EJECT
         TM    FLAG,PRNTATTR       ANY ATTRIB TO PRINT?            FCI
         BNO   CHKEXTNT            NO-> SKIP THE TPUT              FCI
         LA    R0,L'MSG3                                           FCI
         LA    R1,MSG3                                             FCI
         TPUT  (1),(0),R                                           FCI
         NI    FLAG,RSETPRNT       RESET THE PRINT ATTR FLAG       FCI
*
CHKEXTNT L     R1,NUMDS            BUMP THE COUNT                  FCI
         LA    R1,1(R1)              OF THE NUMBER OF              FCI
         ST    R1,NUMDS                DATASETS SCANNED            FCI
         TM    FLAG,AUTHEXNT          AUTH AND EXTNT ?         FCI
         BNO   OBTNRET              NO
         LA    R9,XTNTS            POINT TO EXTENT SAVE AREA
         MVC   MSG2(6),VOLS        MOVE VOLSER TO MESSAGE AREA
OUTLOOP  LA    R3,3                SET LOOP CONTROL
         LA    R4,MSG2+8           POINT TO MESSAGE AREA
         MVI   MSG2+6,X'40'
         MVC   MSG2+7(69),MSG2+6   BLANK MESSAGE AREA
INLOOP   MVC   WXTNT+3(1),1(R9)    MOVE EXTENT # TO WORK AREA
         UNPK  0(2,R4),WXTNT+3(2)  UNPACK EXTENT #
         TR    0(1,R4),TRTBL       TRANSLATE EXTENT #
         MVC   WXTNT(4),2(R9)      MOVE BEGIN XTNT TO WORK AREA
         UNPK  2(9,R4),WXTNT(5)    UNPACK XTNT
         TR    2(8,R4),TRTBL       TRANSLATE EXTENT
         MVC   WXTNT(4),6(R9)      MOVE END XTNT TO WORK AREA
         UNPK  11(9,R4),WXTNT(5)   UNPACK XTNT
         TR    11(8,R4),TRTBL      TRANSLATE EXTENT
         LA    R9,10(R9)           BUMP TO NEXT EXTENT
         LA    R4,22(R4)           BUMP MESSAGE AREA POINTER
         BCTR  R2,0                DECREASE # EXTENTS
         LTR   R2,R2               ANY MORE EXTENTS
         BZ    *+8                  NO
         BCT   R3,INLOOP           CONVERT NEXT EXTENT
         LA     R0,L'MSG2
         LA     R1,MSG2
         TPUT   (1),(0),R          TPUT EXTENTS
         MVC   MSG2(6),BLANKS      BLANK VOLSER
         LTR   R2,R2               ANY MORE EXTENTS?
         BNZ   OUTLOOP              YES
OBTNRET  LM    R2,R11,OBTNSAVE     RELOAD CALLER'S REGISTERS
         BR    R9                  RETURN TO CALLER
         TITLE 'LISTSPC - EOJ AND ERROR ROUTINES'
PRNTSUM  EQU    *                  SUMMARY OF USERS LISTINGS       FCI
         MVI    MSG2,C' '          CLEAR THE MESSAGE LINE          FCI
         MVC    MSG2+1(L'MSG2-1),MSG2   WITH BLANKS                FCI
         MVC    MSG2+2(6),MASKED2  MOVE IN THE EDIT MASK           FCI
         MVC    MSG2+9(L'FCIMSG1),FCIMSG1  MOVE IN THE REST        FCI
         L      R2,NUMDS           GET NUMBER OF DATASETS          FCI
         CVD    R2,WKD             AND CONVERT TO DECIMAL          FCI
         ED     MSG2+2(6),WKD+5    EDIT THE PATTERN                FCI
         LA       R0,L'MSG2                                        FCI
         LA       R1,MSG2                                          FCI
         TPUT     (1),(0),R        PUT OUT THE LINE                FCI
         LTR    R2,R2              ANY DATASETS FOUND?             FCI
         BNP    RETC               NO-> SKIP REST OF SUMMARY       FCI
         SPACE  1                                                  FCI
         MVI    MSG2,C' '          CLEAR THE MESSAGE LINE          FCI
         MVC    MSG2+1(L'MSG2-1),MSG2   WITH BLANKS                FCI
         MVC    MSG2+2(6),MASKED2  MOVE IN THE EDIT MASK           FCI
         MVC    MSG2+9(L'FCIMSG2),FCIMSG2  MOVE IN THE REST        FCI
         L      R1,TRKSTOT         GET NUMBER TRACKS ALLOCATED     FCI
         CVD    R1,WKD             AND CONVERT TO DECIMAL          FCI
         ED     MSG2+2(6),WKD+5    EDIT THE PATTERN                FCI
         LA       R0,L'MSG2                                        FCI
         LA       R1,MSG2                                          FCI
         TPUT     (1),(0),R        PUT OUT THE LINE                FCI
         SPACE  1                                                  FCI
         MVI    MSG2,C' '          CLEAR THE MESSAGE LINE          FCI
         MVC    MSG2+1(L'MSG2-1),MSG2   WITH BLANKS                FCI
         MVC    MSG2+2(6),MASKED2  MOVE IN THE EDIT MASK           FCI
         MVC    MSG2+9(L'FCIMSG3),FCIMSG3  MOVE IN THE REST        FCI
         L      R1,WASTETRK        GET NUMBER TRACKS WASTED        FCI
         CVD    R1,WKD             AND CONVERT TO DECIMAL          FCI
         ED     MSG2+2(6),WKD+5    EDIT THE PATTERN                FCI
         LA       R0,L'MSG2                                        FCI
         LA       R1,MSG2                                          FCI
         TPUT     (1),(0),R        PUT OUT THE LINE                FCI
         SPACE  1                                                  FCI
         SR     R2,R2              CALCULATE % USED IF WE CAN      FCI
         L      R3,TRKSTOT         GET # TRACKS ALLOCATED          FCI
         LTR    R3,R3              ANYTHING TO DO?                 FCI
         BNP    RETC               SKIP IF ZERO OR NEG..           FCI
         MVI    MSG2,C' '          CLEAR THE MESSAGE LINE          FCI
         MVC    MSG2+1(L'MSG2-1),MSG2   WITH BLANKS                FCI
         MVC    MSG2+1(7),MASKED3  MOVE IN THE EDIT MASK           FCI
         S      R3,WASTETRK        (R3)=(TOT-UNUSED)               FCI
         M      R2,=F'1000'        (R3)=(TOT-UNUSED)*1000          FCI
         D      R2,TRKSTOT         (R3)=%USED*10                   FCI
         CVD    R3,WKD             AND CONVERT TO DECIMAL          FCI
         ED     MSG2+1(7),WKD+5    EDIT THE PATTERN                FCI
         MVC    MSG2+8(L'FCIMSG4),FCIMSG4  MOVE IN THE REST        FCI
         LA     R0,L'MSG2                                          FCI
         LA     R1,MSG2                                            FCI
         TPUT     (1),(0),R        PUT OUT THE LINE                FCI
         EJECT
RETC     EQU   *
         L     13,SAVE+4           LOAD R13 PREVIOUS SPACE AREA
         LM    2,12,28(13)         RELOAD REGISTERS
         L     14,12(13)           LOAD RETURN ADDRESS
         MVI   12(13),X'FF'        INDICATE CONTROL RETURN CALLING PROG
         BCR   15,14               RETURN TO CALLING PROGRAM
         SPACE 3
ERR01    EQU   *
* NO VALID COMMAND
         LA    R0,L'ERMSG1
         LA    R1,ERMSG1
         TPUT  (1),(0),R
         B     RETC                BRANCH TO RETURN CODE
ERR02    MVC   MSG2(L'ERMSG2),ERMSG2     LOCATE FAILED..NOT CATALOGED
         MVC   MSG2+L'ERMSG2(44),DSN1    MOVE IN DSNAME
         LA    R0,L'MSG2
         LA    R1,MSG2
         TPUT  (1),(0),R
         B     RETDSN
* DATASET NAME NOT FOUND
ERR03    C     R15,=F'4'                OBTAIN ERR=4(VOL NOT MNTED)?
         BNE   ERR03A                   NO-> ASSUME NOT ON VOL
         MVC   MSG2(L'ERMSG4),ERMSG4
         MVC   MSG2+ERR04VOL(6),VOLS    MOVE IN VOLSER             FCI
         MVC   MSG2+L'ERMSG4(44),DSN1
         B     ERR03P
ERR03A   MVC   MSG2(L'ERMSG9),ERMSG9
         MVC   MSG2+ERR03VOL(6),VOLS    MOVE IN VOLSER             FCI
         MVC   MSG2+L'ERMSG9(44),DSN1
ERR03P   LA     R0,L'ERMSG9+44
         LA     R1,MSG2
         TPUT   (1),(0),R
         TM    FLAG,DODSNAME                                   FCI
         BO    LOOP
         B     OBTNRET
         SPACE 3
RDERR    MVC   MSG2(L'ERMSG8),ERMSG8
         MVC   MSG2+L'ERMSG8(44),DSN1
         LA     R0,L'ERMSG8+44
         LA     R1,MSG2
         TPUT   (1),(0),R
         B     LOOP                CONTINUE THRU LOOP
         SPACE 3
NOUSER   MVC   MSG2(L'ERMSG3),ERMSG3
         MVC   MSG2+L'ERMSG3(44),USERID
         LA     R0,L'ERMSG3+44
         LA     R1,MSG2
         TPUT   (1),(0),R
         B     RETC                RETURN TO SYSTEM
         SPACE 3
NOTDISK  TM    FLAG,VOLSPECD            ONLY LOOKING FOR A DISK VOL?FCI
         BO    LOOP                     IF SO, SKIP GRIPE           FCI
         MVC   MSG2(L'ERMSG6),ERMSG6
         MVC   MSG2+ERR06VOL(6),VOLS    MOVE IN VOLSER          FCI
         MVC   MSG2+L'ERMSG6(44),DSN1
         LA     R0,L'ERMSG6+44
         LA     R1,MSG2
         TPUT   (1),(0),R
         B     LOOP                PICK UP NEXT DATASET
         SPACE 3
MULTIVOL MVC   MSG2(L'ERMSG7),ERMSG7
         MVC   MSG2+L'ERMSG7(44),DSN1
         LA     R0,L'ERMSG7+44
         LA     R1,MSG2
         TPUT   (1),(0),R
         B     LOOP                CONTINUE WITH NEXT DSN
         SPACE 3
ERRF     EQU   *
         LA    R0,L'ERMSG10
         LA    R1,ERMSG10
         TPUT  (1),(0),R
         B     RETC
ERRF4    EQU   *                   ERROR READING F4
         LA    R0,L'ERMSG11
         LA    R1,ERMSG11
         TPUT  (1),(0),R
         B     VOLRET
         SPACE
FCIERR1  MVC   MSG2(L'FERRMSG1),FERRMSG1                          FCI
         MVC   MSG2+L'FERRMSG1(6),VOLS                            FCI
         LA     R0,L'FERRMSG1+6                                   FCI
         LA     R1,MSG2                                           FCI
         TPUT   (1),(0),R                                         FCI
         B     OKVOL                                              FCI
USIDMVC  MVC   0(0,R8),0(R10)
DSNMVC   MVC   0(0,R8),0(R5)
MVCVOLS  MVC   0(0,R1),0(R5)
         TITLE 'LISTSPC - DATA AREAS'
ENDLIST  DS    0F
         DC    XL4'FF000000'
* SETUP CONSTANTS
VOLDSCTK DC    H'0'                NUM DSCH ON A TRK
VOLF4CHR DC    XL5'00'             CCHHR OF DSCB
VOLNO    DC    H'0'                NUM VOLUMES PROCESSED
PEXCTR   DC    H'0'                CTR FOR TATAL NUM FREE SPACE
LASTTRK  DC    H'0'
DSN1     DC    CL44' '              DATASET NAME
VOLS     DC    CL6' '                 VOLUME SER
USERID   DC    CL44' '              USERID
FLAG     DC    X'00'
AUTHUSER EQU   B'10000000'         AUTHORIZED USER 1=YES 0=NO     FCI
DODSNAME EQU   B'01000000'         DSNAME SPECED   1=YES 0=NO     FCI
DOEXTNT  EQU   B'00100000'         EXTENT SPECED   1=YES 0=NO     FCI
AUTHEXNT EQU   B'10100000'                                        FCI
DOLOCATE EQU   B'00010000'         LOCATE MACRO?   1=YES 0=NO     FCI
RSETLOC  EQU   B'11101111'                                        FCI
DOATTR   EQU   B'00001000'         ATTRIB SPECED   1=YES 0=NO     FCI
DOUSAGE  EQU   B'00000100'         USAGE  SPECED   1=YES 0=NO     FCI
DOBOTH   EQU   B'00001100'                                        FCI
PRNTATTR EQU   B'00000010'         ATTR/USAGE TO PRNT 1=YES 0=NO  FCI
RSETPRNT EQU   B'11111101'                                        FCI
VOLSPECD EQU   B'00000001'         LIST DS ONLY ON VOLS GIVEN     FCI
*                                                  1=YES 0=NO     FCI
*
DSORG    DC    X'00'
BLANKS   DC    CL6' '
TRKSTOT  DC    F'0'                NUMBER OF TRACKS ALLOCATED    FCI
WASTETRK DC    F'0'                NUMBER OF TRACKS UNUSED       FCI
NUMDS    DC    F'0'                NUMBER OF DATASETS SCANNED    FCI
BUF1     DS    0D
         DS    265C
BUF2     DS    0D                   BUFFER FOR F4 OBTAIN          FCI
         DS    265C                                               FCI
F4NAME   DS    CL44                 NAME OF F4 DSCB               FCI
         ORG   F4NAME                                             FCI
         DC    44X'04'                                            FCI
LASTVOL  DC    CL6' '                                             FCI
TRTBL    EQU   *-240
         DC    C'0123456789ABCDEF'
MASKED   DC    XL6'402020202020'   MASK FIELD FOR EDIT
MASKED2  DC    XL6'402020202120'   MASK FIELD FOR EDIT (PRNT 0)   FCI
MASKED3  DC    XL7'40202021204B20' MASK FIELD FOR EDIT OF %       FCI
         EJECT
* MESSAGE TO BE PRINTED
MSG1     DC    C'DSORG ALLOC UNUSED EXTENTS DSNAME'
*                  XXU.XXXXX .XXXXX  XXXX   XXXXXXXX.ETC
*                0123456789-123456789-123456789-123456789-
HEADATTR DC    C'VOL   RECFM LRECL BLKSZ SEC-ALLOC PROT'          FCI
*                XXXXXX XXXX.XXXXX.XXXXX XXX.XXXXX
HEADUSAG DC    C'LAST USE MOD DATE-TIME  MOD BY  USE CNT '         FCI
*                XX/XX/XX XX/XX/XX XX:XX XXXXXXXX XXXX
MSG2     DC    CL80' '
         ORG   MSG2+2
MDSORG   DS    CL2
MDSORGU  DS    CL1
         ORG   MSG2+5
MALLOC   DS    CL6
         ORG   MSG2+12
MUNUSED  DS    CL6
         ORG   MSG2+17
MUASTER  DS    CL1
         ORG   MSG2+20
MEXTNTS  DS    CL4
         ORG   MSG2+27
MDSNAME  DS    CL44
         ORG
MSG3     DC    CL80' '                                             FCI
MOFFSET  EQU   28                                                  FCI
MSG4     DC    C'VOLUME DSCBS EXTENTS TRACKS  VTOC'
FCIMSG1  DC    C'DATASETS LISTED'                                  FCI
FCIMSG2  DC    C'TRACKS ALLOCATED'                                 FCI
FCIMSG3  DC    C'TRACKS ALLOCATED BUT NOT USED'                    FCI
FCIMSG4  DC    C'% OF ALLOCATED TRACKS ARE USED'                   FCI
         SPACE 3
* ERROR MESSAGES
ERMSG1   DC    C'NO VALID COMMAND'
ERMSG2   DC    C'DSN IS NOT CATALOGED     - '
ERMSG3   DC    C'INVALID LEVEL - '
ERMSG4   DC    C'DISK        NOT MOUNTED  - '
ERR04VOL EQU   5
ERMSG6   DC    C'DSN ON TAPE VOL=         - '
ERR06VOL EQU   16
ERMSG7   DC    C'DSN ON MORE THAN ONE VOL - '
ERMSG8   DC    C'ERROR READING CATALOG    - '
ERMSG9   DC    C'DSN NOT ON DISK          - '
ERR03VOL EQU   16
ERMSG10  DC    C'UNSUPPORTED KEYWORD'
ERMSG11  DC    C'ERROR READING F4 DSCB'
FERRMSG1 DC    C'TRKS ALLOC/UNUSED MAY BE WRONG - CANT OBTAIN F4 DSCB OX
               N VOL -'                                           FCI
         EJECT
* CAMLST FOR DSCB3
SEEKCAM  CAMLST SEEK,VTOCCHHR,VOLS,BUF1
         SPACE 2
* CAMLST LOCATE DSN OV VOL SER
INDS     CAMLST NAME,DSN1,,BUF1
         SPACE 2
* CAMLST FOR DSCB 1
SERCHCAM CAMLST SEARCH,DSN1,VOLS,BUF1
* CAMLST FOR FORMAT 4 DSCB
F4CAM    CAMLST SEARCH,F4NAME,LASTVOL,BUF2
         EJECT
* CONSTANTS AND WORK AREAS
HWK1     DC    H'0'                HALF WORD WORK AREA
VOLTKCYL DC    H'30'               # TRKS/CYL         DEFAULT=3350 FCI
VTOCCHHR DC    XL5'0'              TRACK ADDR WORK AREA
WKD      DC    D'0'                DOUBLE WORK WORK AREA
         SPACE 3
* PARM SETUP FOR GETDSN
PARM     DC    A(USERID)           USERID ADDRESS
         DC    A(DSN1)             DSN ADDRESS
         DC    A(VOLS)             VOL SER ADDRESS
         DC    A(0)                ADDRESS FOR GETMAIN
         SPACE 3
* PARM SETUP FOR GENATTR
PARM1    DC    A(BUF1)             ADDR OF F1 DSCB
         DC    A(MSG3)             ADDR OF MSG ASSEMBLY AREA
         DC    A(FLAG)             ADDR OF OPTIONS FLAG
         DC    A(VOLS)             ADDR OF VOLSER
         SPACE 3
* EQUATE REGISTERS
         REGEQU
RCC      EQU   R8
RHH      EQU   R7
RR       EQU   R6
         TITLE 'LISTSPC - PARSE PARAMETER LIST'
         PRINT NOGEN
PARSLIST IKJPARM
DSNKYD   IKJKEYWD
         IKJNAME 'DATASET',SUBFLD=DSNSUBF,ALIAS=('DSNAME')       FCI
LEVL     IKJKEYWD
         IKJNAME 'LEVEL',SUBFLD=LVL,ALIAS=('LVL')                FCI
VOLUME   IKJKEYWD
         IKJNAME 'VOLUME',SUBFLD=VLM,ALIAS=('VOLUMES')           FCI
EXTENT   IKJKEYWD
         IKJNAME 'EXTENTS'
ATTRIB   IKJKEYWD
         IKJNAME 'ATTRIBUTES'                                    FCI
USAGED   IKJKEYWD
         IKJNAME 'USAGE'                                         FCI
BOTHAU   IKJKEYWD
         IKJNAME 'BOTH'                                          FCI
DSNSUBF  IKJSUBF
DSNLIST  IKJPOSIT DSNAME,LIST
LVL      IKJSUBF
LEV      IKJIDENT 'LEVEL',OTHER=ANY,MAXLNTH=44
VLM      IKJSUBF
VOL      IKJIDENT 'VOLUME',LIST,FIRST=ALPHANUM,OTHER=ALPHANUM,MAXLNTH=6
         IKJENDP
         PRINT GEN
         EJECT
         IKJPPL
         EJECT
         IKJCPPL
         TITLE 'LISTSPC - WORK AREA'
WORKAREA DSECT
WPPL     DS    7A
CPECB    DS    F
WPDL     DS    F
OBTNSAVE DS    10F
XTNTS    DS    16XL10
WXTNT    DS    CL5
         DS    0D
LOCINDXW EQU   *
LWORK    EQU   *-WORKAREA
         END
