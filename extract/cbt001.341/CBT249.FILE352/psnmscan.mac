*          DATA SET PSNMSCAN   AT LEVEL 002 AS OF 10/30/80
         MACRO
&TAG     PSNMSCAN  &MSG,&MSGEND,&KEYTABL,&WORK,&ERROR,&SP,             X
               &TBD=KEYDEFN,&P=KEY
.*
         LCLC  &WKC               UTILITY WORK LOCAL C
         LCLC  &MSE,&KEYT,&SPEC
         LCLB  &MSER,&KEYTR,&SPECR
         LCLB  &NOSP
         LCLA  &SX                TO ABBREV SYSNDX....
.*
&SX      SETA  &SYSNDX
.*
.*                  EDIT SELECTED INPUTS WHICH COULD BE EXPRESSED
.*                  IN REGISTER NOTATION
&MSE     SETC  '&MSGEND'          DEFAULT TO NON R-FORM
         AIF   ('&MSGEND'(1,1) NE '(').MSENDX
&MSE     SETC  '&MSGEND'(2,K'&MSGEND-2)
&MSER    SETB  1                  SHOW THE R-FORM EXISTS
.MSENDX  ANOP
.*
&KEYT    SETC  '&KEYTABL'         DEFAULT TO NON R-FORM
         AIF   ('&KEYTABL'(1,1) NE '(').KEYTX
&KEYT    SETC  '&KEYTABL'(2,K'&KEYTABL-2)
&KEYTR   SETB  1                  SHOW THE R-FORM EXISTS
.KEYTX   ANOP
.*
         AIF   (T'&SP NE 'O').SPECG AND SPECIAL EDITS POSSIBLE
&NOSP    SETB  1                  NO SPECIAL EDITS ALLOWED
         AGO   .SPECX
.SPECG   ANOP
&SPEC    SETC  '&SP'              POINTER TO SPECIAL EDITORS
         AIF   ('&SP'(1,1) NE '(').SPECX
&SPEC    SETC  '&SP'(2,K'&SP-2)
&SPECR   SETB  1
.SPECX   ANOP
.*
.*
         AIF   ('&MSG'(1,1) EQ '(').MSG1R
&TAG     LA    R15,&MSG           ADDRESS THE INPUT
         AGO   .MSG1X
.MSG1R   ANOP
&WKC     SETC  '&MSG'(2,K'&MSG-2) ADDRESS INPUT MESSAGE
&TAG     LR    R15,&WKC           ADDRESS INPUT MESSAGE
.MSG1X   ANOP
.*
         AIF   (&MSER).MSE2R
         LA    R0,&MSE            POINT TO BYTE PAST MESSAGE
         AGO   .MSE2X
.MSE2R   ANOP
         LR    R0,&MSE            POINT TO BYTE BEYOND MESSAGE
.MSE2X   ANOP
WDB&SX   EQU   0,8                DOUBLE-WORD WORK AREA
WSV&SX   EQU   8,4                START OF VALUE FIELD
WEV&SX   EQU   12,4               END OF THE VALUE FIELD
WPE&SX   EQU   16,4               END OF CURRENT BLOCK
WEM&SX   EQU   20,4               END OF THE MESSAGE POINTER
WKY&SX   EQU   24,4               POINTER TO KEYWORD ENTERED
WSP&SX   EQU   28,4               ADDRESS OF THE SPECIAL EDIT TABLE
WER&SX   EQU   32,4               ADDRESS OF THE ERROR ROUTINE
WLA&SX   EQU   36,4               LA INSTRUCTION FOR SCON RESOLUTION
WST&SX   EQU   40,1               STATUS FIELD
WLN&SX   EQU   48                 LENGTH OF USED AREA
         XC    &WORK.(WLN&SX),&WORK CLEAR THE WORKAREA COMPLETELY
         MVC   WLA&SX+&WORK,LAC&SX MODIFIED LOAD ADDRESS INSTRUCTION
         ST    R0,WEM&SX+&WORK    SAVE END MESSAGE ADDRESS
.*
.*                   STASH ADDRESS OF THE ERROR PROCESSOR
         AIF   (T'&ERROR EQ 'O').ER1X NO ERROR GIVEN
         AIF   ('&ERROR'(1,1) EQ '(').ER1R
         LA    R1,&ERROR          ERROR PROCESSING ROUTINE
         ST    R1,WER&SX+&WORK
         AGO   .ER1X
.ER1R    ANOP
&WKC     SETC  '&ERROR'(2,K'&ERROR-2)
         ST    &WKC,WER&SX+&WORK  ERROR PROCESSOR
.ER1X    ANOP
.*
.*                   HANDLE THE SPECIAL EDIT PREPROCESSING
         AIF   (&NOSP).SP1X       ONLY IF SPECIAL EDITS ARE GIVEN
         AIF   (&SPECR).SP1R      IF POINTED BY REGISTER
         LA    R1,&SPEC           SPECIAL EDITS VECTOR TABLE
         ST    R1,WSP&SX+&WORK
         AGO   .SP1X
.SP1R    ANOP
         ST    &SPEC,WSP&SX+&WORK
.SP1X    ANOP
.*
.*
SCN&SX   EQU   *
         CLI   0(R15),C' '        LOOK FOR FIRST GOOD ENTRY
         BNE   FST&SX             AND THIS IS THE ONE
         LA    R15,1(,R15)        INDEX TO THE NEXT ONE
         CR    R15,R0             BE CAREFUL ABOUT THE END
         BL    SCN&SX             STILL IN HIS BALL-PARK
         B     NON&SX             NO INPUT TO PROCESS
SCX&SX   TRT   0(0,R15),TRT&SX    EX TO FIND DATA
LAC&SX   LA    R3,0               MODIFIED WITH SCON
*
FST&SX   EQU   *                  HAVE HIT THE BEGINNING OF FIELD
         ST    R15,WKY&SX+&WORK   SAVE KEY ADDRESS
         XC    WSV&SX+&WORK.(12),WSV&SX+&WORK CLEAR THE DATA POINTERS
         LR    R1,R0              POINTER TO END OF LINE
         SR    R1,R15             COMPUTE LENGTH TO LOOK
         SR    R2,R2              RESULTS RECORDED HERE
         EX    R1,SCX&SX          FIND THE DELIMITER
         B     *+4(R2)            PROCESS BASED ON DELIMITER FOUND
         B     ALL&SX             NO DELIMITERS - ALL ONE VALUE
         B     BLNK&SX            STOPPED AT A BLANK
         B     CMA&SX             STOPPED AT A COMMA
         B     PRN&SX             AT A LEFT PARENTHESIS
         EX    R0,*               INTERNAL ERROR IN TRT TABLE - OOP
         EX    R0,*               ANOTHER INTERNAL ERROR
*
ALL&SX   EQU   *                  REMAINDER IS ALL ONE FIELD
         LR    R1,R0              POINT TO END OF FIELD
         LA    R2,4               SIMULATE A BLANK AT END
*
BLNK&SX  EQU   *                  DELIMITER IS A BLANK
CMA&SX   EQU   *                  DELIMITER IS A COMMA
         ST    R1,WPE&SX+&WORK    SAVE END OF THE KEY - AT DELIMITER
         SR    R1,R15             COMPUTE LENGTH OF THE KEY
         BCTR  R1,0               LENGTH IS -1 - FOR THE EX
         B     SRCH&SX            AND INTO THE KEY-TABLE SEARCH
*
*                    STOPPED AT A ( - MEANS A VALUE COMES NEXT.
PRN&SX   EQU   *
         CLI   1(R1),C')'         IS IT A NULL LIST
         BE    NVL2&SX            YES - SPECIAL CONSIDERATIONS
         CLI   1(R1),C''''        IS IT ENCLOSED IN QUOTES?
         BE    VQT&SX             YES - VERY SPECIAL SCAN HERE....
*                    FIND THE ) FOR A MATCHED SET.
         LA    R14,1(,R1)         POINT TO FIRST DATA BYTE
         ST    R14,WSV&SX+&WORK   AND SAVE THIS POINTER
VSR&SX   EQU   *                  LOOP THROUGH THE FIELD
         LA    R14,1(,R14)        ON TO THE NEXT CHARACTER
         CR    R14,R0             CHECK VIOLATION OF BOUNDARIES
         BH    INVL&SX            TERMINATION MISSING - WRONG!!!!!
         CLI   0(R14),C')'        IS THIS THE END OF IT
         BNE   VSR&SX             NO - KEEP TRYING
         BCTR  R14,0              BACK UP TO LAST GOOD CHARACTER
         ST    R14,WEV&SX+&WORK   SAVE END OF THE DATA
         LA    R14,2(,R14)        POINT PAST THE DELIMITER
         ST    R14,WPE&SX+&WORK   AND SAVE FOR NEXT SCAN
         SR    R1,R15             LENGTH OF THE KEY
         BCTR  R1,0               LESS ONE AS USUAL
         B     SRCH&SX            AND TO THE TABLE LOOKUP
*
*                    IF THE VALUE IS INSIDE QUOTES''''''''''
VQT&SX   EQU   *
         LA    R14,2(,R1)         PAST THE (' ALREADY CONFIRMED
         ST    R14,WSV&SX+&WORK   SAVE START OF VALUE ENTRY
*
SQT&SX   EQU   *                  SEARCH FOR THE QUOTE
         CLI   1(R14),C''''       IS THIS THE FABLED ENTRY
         BNE   NQT&SX             NOT THE ONE YET
         CLI   2(R14),C''''       IS IT THEN A DOUBLE-QUOTE
         BNE   QTX&SX             NO - MUST BE THE REAL THING
*                    DOUBLE QUOTE - MOVE IT ALL DOWN ONE
         LA    R2,2(,R14)         COMPUTE LENGTH OF MOVE
         SR    R2,R0              FROM HERE TO END OF LINE
         EX    R2,MVQ&SX          SHIFT THE BLOODY THING OVER
         BCTR  R0,0               DROP ENDING ADDRESS BY ONE, TOO.
         ST    R0,WEM&SX+&WORK    SAVE ENDING POSITION OF MSG
NQT&SX   EQU   *                  LOOK ON TO NEXT CHARACTER
         LA    R14,1(,R14)        LOOK ON TO NEXT BYTE
         CR    R14,R0             CHECK FOR EXTENT VIOLATION
         BL    SQT&SX             STILL INSIDE - KEEP LOOKING
         B     INVL&SX            REALLY NEED THAT QUOTE
MVQ&SX   MVC   2(0,R14),3(R14)    OVERLAY DOUBLE-QUOTE  (EX)
*
QTX&SX   EQU   *                  SINGLE QUOTE FOUND
         CLI   2(R14),C')'        REALLY MUST INSIST ON THE COMBO
         BNE   INVL&SX            TRULY SORRY ABOUT THAT
         ST    R14,WEV&SX+&WORK   SAVE POINTER TO LAST CHARACTER
         LA    R14,3(,R14)        PAST THE DELIMITERS
         ST    R14,WPE&SX+&WORK   AND SAVE THIS NEW POINTER
         SR    R1,R15             COMPUTE LENGTH OF THE KEY
         BNP   NVAL&SX            COULD BE NOTHING THERE.....
         BCTR  R1,0               STANDARD INTERNAL LENGTH, THAT IS
         B     SRCH&SX
*
SRCH&SX  EQU   *                  MATCH KEY TO TABLE
*                    R15 POINTS TO START OF KEYWORD INPUT
*                    R1 HAS ITS LENGTH LESS ONE.
         AIF   (&KEYTR).KEY2R     CHECK FOR REG-FORM OF KEY-TABLE
         LA    R14,&KEYT          POINT TO KEY TABLE
         AGO   .KEY2X
.KEY2R   ANOP
         LR    R14,&KEYT          POINTER TO KEY TABLE
.KEY2X   ANOP
.*
SNXT&SX  EQU   *                  SEARCH FOR KEY IN TABLE
         USING &TBD,R14           ADDRESS EACH TABLE ENTRY
         CH    R1,&P.LKEY         DO THE LENGTHS MATCH
         BNE   SMIS&SX            NO - LOOK NO FURTHER
         EX    R1,CLC&SX          DO THE VALUES MATCH
         BE    SRY&SX             SEARCH YES - THIS IS THE ONE
SMIS&SX  EQU   *                  MISS - TRY AGAIN IF ONE EXISTS
         AH    R14,&P.LENG        POINT PAST THIS ONE TO NEXT KEY
         CLC   &P.LENG,HZR&SX     IS ITS LENGTH ZERO???
         BNE   SNXT&SX            NO - CARRY STRAIGHT ON
         B     NOKY&SX            OOPS - INVALID KEY
CLC&SX   CLC   &P.KEY(0),0(R15)   EX FOR MATCH ON KEY
*
*              KEY MATCH - IS A VALUE REQUIRED AND/OR ENTERED
SRY&SX   EQU   *
         TM    &P.OPT2,&P.2VALU   IS A VALUE REQUIRED HERE
         BZ    NVR&SX             NO - STANDALONG CONTROL WORD
         CLC   WSV&SX+&WORK.(8),HZR&SX VALUE ENTERED???
         BE    NVL&SX             VALUE REQUIRED AND NOT ENTERED
         B     PROC&SX            ALL IN ORDER - PROCESS
NVR&SX   EQU   *                  NO VALUE REQUIRED BY KEY
         CLC   WSV&SX+&WORK.(8),HZR&SX WAS A VALUE ENTERED
         BNE   HVL&SX             HAVE VALUES AND NOT NEEDED.
*
PROC&SX  EQU   *                  PROCESS BASED ON TABLE ENTRY
         ST    R0,WEM&SX+&WORK    SAVE CURRENT EOL POINTER
         MVC   WLA&SX+&WORK+2(2),&P.RECV PUT SCON INTO PLACE
         EX    R0,WLA&SX+&WORK    AND DO THE INSTRUCTION - R3 HAS ADDR
         LM    R1,R2,WSV&SX+&WORK PICK UP DATA POINTERS
         SR    R2,R1              R2 HAS LENGTH-1 - R1 HAS START
         LR    R15,R14            POINT TO TABLE ENTRY WITH R15
         USING &TBD,R15           ADDRESS KEY DEFINITION WITH R15
         DROP  R14
.*
.*                   THIS PART DONE ONLY IF SPECIAL EDITS ARE
.*                   INVOLVED
         AIF   (&NOSP).SP2X       NOT IF NOT REQUIRED
         TM    &P.OPT2,&P.2SPED   SPECIAL EDIT NEEDED ON THIS
         BZ    SPX&SX             NO - SKIP IT
         LH    R0,&P.PREDT        PICK UP THE EDIT NUMBER
         LTR   R0,R0              CHECK FOR GOOD VALUE
         BNP   NRT&SX             BAD ROUTINE NUMBER - QUIT
         L     R14,WSP&SX+&WORK   ADDRESS THE SPECIALEDIT VECTOR
         C     R0,0(,R14)         CHECK FOR MAX NUMBER
         BH    NRT&SX             NO ROUTINE - REAL BAD
         STM   R15,R0,WDB&SX+&WORK SAVE THESE KEY POINTERS
         SLL   R0,2               MAKE IT A BRANCH INDEX
         AR    R14,R0             OF SORTS
         L     R14,0(,R14)        ADDRESS THE PROPER EDIT
         BALR  R14,R14            AND GO TO IT
         CH    R2,HW4&SX          HOW DID IT GO
         BE    PRX&SX             HE MOVED IT FOR US
         BH    ERS&SX             ERROR DETECTED IN SPECIAL
         LM    R15,R2,WDB&SX+&WORK
         SR    R2,R1
SPX&SX   EQU   *                  END OF SPECIAL EDIT INTERFACE
.SP2X    ANOP
.*
*
         LH    R14,&P.RTN          THE PROCESSING ROUTINE NUMBER
         LA    R0,MRX&SX          MAX NUMBER OF ROUTINES AVAILABLE
         CR    R14,R0             DOES THIS NUMBER LOOK GOOD
         BH    NRT&SX             INVALID ROUTINE ENTERED
         LTR   R14,R14            DOUBLE CHECK FOR POSITIVE
         BNP   NRT&SX             NEGATIVE ROUTINES ARE SO DEPRESSING
         SLL   R14,2              TURNED INTO A BRANCH INDEX
         BAL   R14,BTB&SX-4(R14)  GO TO PROPER PROCESSOR
         B     PRX&SX             AND COMMON RETURN TO POST-PROCESSOR
BTB&SX   B     MOV&SX             1 - MOVE WITH BLANK FILL
         B     PAK&SX             2 - PACK DATA INTO RECEIVING
         B     HLF&SX             3 - CONVERT TO A HALFWORD
         B     FUL&SX             4 - CONVERT TO A FULLWORD
         EX    R0,*               5 - STILL INVALID, TOO
         B     BON&SX             6 - TURN ON A BIT
         B     BOF&SX             7 - TURN OFF A BIT
MRX&SX   EQU   (*-BTB&SX)/4       NUMBER OF ROUTINES
*                    IF THE PROCESSING ROUTINE IS NOT PROPER
NRT&SX   EQU   *
         LA    R15,16             CODE FOR REALLY BAD TABLE
         B     EXIT&SX
*
*                    COMMON RETURN FROM PROCESSING THAT FIELD
PRX&SX   EQU   *
         L     R0,WEM&SX+&WORK    RECAPTURE END OF INPUT
         L     R15,WPE&SX+&WORK   NEXT PART OF THE MESSAGE
         LA    R15,1(,R15)        POINT PAST THE DELIMITER
*
NXF&SX   EQU   *                  FIND START OF NEXT ENTRY
         CR    R15,R0             WELL, ARE WE DONE YET
         BNL   EOL&SX             AND ABOUT TIME, TOO
         CLI   0(R15),C'-'        IS IT CONTINUED
         BNE   NX2&SX             NOPE - LOOK ON
         OI    WST&SX+&WORK,X'40' SHOW CONTINUED LINE HERE
         B     EOL&SX             AND EXIT THE SEARCH FOR THIS LINE
NX2&SX   EQU   *
         CLI   0(R15),C' '        IS THE DELIMITER A BLANK, THEN
         BNE   FST&SX             NO - RIGHT BACK INTO IT
         LA    R15,1(,R15)        LOOK ON TO NEXT ONE
         B     NXF&SX             UNTIL A NON-BLANK IS FOUND
*
*                    AND TO HANDLE THE UNFORSEEN DIFFICULTIES
NVAL&SX  EQU   *                  NO VALUE GIVEN
         LA    R0,1
         B     CERR&SX
*                    NO VALUED DETECTED WITHIN ()
NVL2&SX  EQU   *
         LA    R14,2(,R1)         UPDATE THE POINTER FOR RESCANNING
         ST    R14,WPE&SX+&WORK
         LA    R0,1
         B     CERR&SX
*              NO END TO THE VALUE GIVEN
INVL&SX  EQU   *
         ST    R14,WPE&SX+&WORK   FOR RESCANNING
         LA    R0,2               CODE FOR THIS ERROR
         B     CERR&SX
*                    KEY IS NOT IN THE TABLE
NOKY&SX  EQU   *
         LA    R0,3
         B     CERR&SX
*                    NO VALUE GIVEN, BUT ONE REQUIRED
NVL&SX   EQU   *
         LA    R0,4
         B     CERR&SX
*                    HAVE A VALUE FOR NON-VALUED KEYWORD
HVL&SX   EQU   *
         LA    R0,5
         B     CERR&SX
*                    DATA FIELD IT TOO LONG
ELN&SX   EQU   *
         LA    R0,6               ERROR CODE FOR DATA ERROR
         B     CERR&SX
*                    ERROR FOUND BY SPECIAL EDITOR
ERS&SX   EQU   *
         LA    R0,7
         B     CERR&SX            SET POINTERS TO FULL DATA FIELD
*
*                    AND THAT FABLED COMMON ERROR ROUTINE
*                    POINTERS AT ENTRY TO THIS ROUTINE
*                    R14 - RETURN ADDRESS
*                    R15 - POINT TO START OF BAD DATA
*                    R0  - TYPE OF ERROR
*                    R1  - LENGTH-1 OF THE DATA
*                    R2  - ENTRY ADDRESS OF THE ERROR ROUTINE
CERR&SX  EQU   *
         OI    WST&SX+&WORK,X'80' SHOW AN ERROR HAPPENNED
         L     R2,WER&SX+&WORK    ADDRESS THE ERROR EXIT
         LTR   R2,R2              AND IS THERE ONE
         BNZ   *+8                YES - CALL IT WITH PROBLEM
         EX    R0,*               NO - STOP IT RIGHT NOW
         L     R15,WKY&SX+&WORK   ADDRESS START OF KEY
         L     R1,WEV&SX+&WORK    END OF THE DATA
         LTR   R1,R1              ANYTHING IN DATA FIELD
         LA    R1,2(,R1)          PICK UP THE FULL THING
         BNZ   *+8                YES - USE IT
         L     R1,WPE&SX+&WORK    NO - POINT TO KEY ONLY
         SR    R1,R15             LENGTH TO REPORT
         BALR  R14,R2
         B     PRX&SX
*
         EJECT
*                    THE FAMILY OF MOVE/EDIT ROUTINES TO
*                    CHECK THE VALIDITY OF THE ENTERED DATA,
*                    AND MOVE/CONVERT IT INTO REQUESTED LOCATION.
*
*                    R14 IS THE RETURN ADDRESS
*                    R15 POINTS TO THE TABLE ENTRY
*                    R1 POINTS TO THE VALUE
*                    R2 HAS LENGTH-1 OF THE VALUE ENTERED
*                    R3 POINTS TO START OF THE RECEIVING FIELD
*
*              MOVE CHARACTER DATA WITH BLANK FILL AT RIGHT
MOV&SX   EQU   *
         CH    R2,&P.RECVL        MUST FIT IN RECEIVING FIELD
         BH    ELN&SX             TOO BIG - SET ERROR CODE
         LH    R15,&P.RECVL       SIZE OF FULL RECEIVING FIELD
         EX    R15,BFL&SX         MOVE BLANKS TO ENTIRE FIELD
         EX    R2,MVD&SX          AND MOVE IN PROVIDED DATA
         BR    R14                BACK TO THE MAIN PROCESS
BFL&SX   MVC   0(0,R3),BLK&SX     BLANK-FILL THE FIELD
MVD&SX   MVC   0(0,R3),0(R1)      MOVE DATA TO THE FIELD
*
*                    TO PACK DATA INTO A FIELD
PAK&SX   EQU   *
         SR    R0,R0              CLEAR FOR INSERTION OF 1-BYTE LENGTHS
         IC    R0,&P.RECVL        MAX SIZE OF SENDING FIELD
         CR    R2,R0              CHECK FOR THE BIGGIE
         BH    ELN&SX             OOPS - CHECK HIM OUT
         IC    R0,&P.RECVL+1      LENGTH OF THE RECEIVING FIELD
         SLL   R0,4               NEED BOTH LENGTHS IN 1 BYTE
         OR    R2,R0              NOW HAVE BOTH LENGTHS IN PLACE
         EX    R2,PKX&SX          PACK DATA INTO THE FIELD
         BR    R14                AND BACK TO NORMAL
PKX&SX   PACK  0(0,R3),0(0,R1)    A MASTERPIECE
*
*                    STORE NUMBER AS A HALFWORD
HLF&SX   EQU   *
         LA    R0,4               MAXIMUM LENGTH OF THE DATA
         CR    R2,R0
         BH    ELN&SX             OOPS - NUMBER IS TOO BIG
         EX    R2,HPK&SX          MOVE THE DATA AROUND
         CVB   R1,WDB&SX+&WORK
         STH   R1,0(,R3)          STORE THE DATA IN PLACE
         BR    R14
HPK&SX   PACK  WDB&SX+&WORK,0(0,R1) PACK DATA INTO DOUBLEWORD
*
*                    STORE NUMBER AS A FULLWORD
FUL&SX   EQU   *
         LA    R0,8               MAXIMUM LENGTH OF THE DATA
         CR    R2,R0
         BH    ELN&SX             OOPS - NUMBER IS TOO BIG
         EX    R2,FPK&SX          MOVE THE DATA AROUND
         CVB   R1,WDB&SX+&WORK
         ST    R1,0(,R3)          STORE THE DATA IN PLACE
         BR    R14
FPK&SX   PACK  WDB&SX+&WORK,0(0,R1) PACK DATA INTO DOUBLEWORD
*
*                    TO TURN ON A BIT
BON&SX   EQU   *
         OC    0(1,R3),&P.BIT     TURN ON THE GIVEN BIT
         BR    R14
*
*                    TO TURN OFF A GIVEN BIT
BOF&SX   EQU   *
         NC    0(1,R3),&P.BIT     TURN OFF THE BIT
         BR    R14
         DROP  R15
*
         EJECT
*                    CONSTANT AREAS NEEDED FOR THE SCAN/EDIT ROUTINES
TRT&SX   DC    32D'0'             ALLOW ALL TO PASS,   EXCEPT:
         ORG   TRT&SX+C' '
         DC    AL1(4)             BLANK DELIMITER
         ORG   TRT&SX+C','
         DC    AL1(8)             COMMA - ALMOST LIKE A BLANK
         ORG   TRT&SX+C'('
         DC    AL1(12)            STARTING POINT OF AN ENTERED VALUE
         ORG   TRT&SX+256
*
BLK&SX   DC    CL44' '            UTILITY BLANKS
HZR&SX   DC    XL8'00'            UTILITY HEX ZEROES
HW4&SX   DC    H'4'               MATCH AGAINST RETURN CODES
*
ZAP&SX   DC    20S(*)             PATCH AREA WITHIN SCAN ROUTINE
*
.*
.*                   VALUES RETURNED FROM THIS ROUTINE
.*                    0 - ALL INPUT PROPER
.*                    4 - NO INPUT ENTERED
.*                    8 - ENDED WITH A CONTINUATION
.*                   12 - SOME ERROR DETECTED
.*                   16 - TABLE ERROR - ROUTINE NUMBER
.*                   20 - INTERNAL SCAN ERROR
.*
NON&SX   EQU   *                  NO INPUT ENTERED
         LA    R15,4              CODE FOR NO INPUT
         B     EXIT&SX
*
EOL&SX   EQU   *                  END OF THIS INPUT REACHED
         LA    R15,12             PRESET CODE FOR AN ERROR
         TM    WST&SX+&WORK,X'80' WAS THERE A PROBLEM
         BO    EXIT&SX            YES - REPORT AND LEAVE
         LA    R15,8              CODE FOR CONTINUATION SENSED
         TM    WST&SX+&WORK,X'40'   WAS THERE A CONTINUATION
         BO    EXIT&SX            YES - CODE TO CARRY ON
         SR    R15,R15            ALL LOOKS CORRECT
*
EXIT&SX  EQU   *                  LEAVE THE SCAN
.EXIT    ANOP
         SPACE 2
         MEND
