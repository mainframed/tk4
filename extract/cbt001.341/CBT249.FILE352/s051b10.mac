*          DATA SET S051B10    AT LEVEL 001 AS OF 07/06/77
*          DATA SET S051B10    AT LEVEL 004 AS OF 03/09/77
*          DATA SET S051B10    AT LEVEL 004 AS OF 04/22/76
S051B10  CSECT
*
* THIS IS THE DATASET ENQUEUE PROCESSOR FOR TSO UNDER OS/VS2 REL 3.6
*
* ITS A MODIFICATION OF THE 'DSN' PROCESSOR FROM THE
*  SHARE MICHIGAN MODS TAPE.
*
*  ADAPTED FOR REL 3.6 OPERATION BY KEN TRUE  JAN-76
*
*  ADDED 'OLD' AND 'SHARE' ON A DS AT THE SAME TIME LOGIC..KT APR76
*
*  ADDED LOGIC TO OPERATE AS TSO CMD OR OPER STARTED TASK KT 30MAY77
*
*  ASSEMBLY REQUIRES MACROS FROM 'SYS1.AMODGEN'.
*
*
LINKREG  EQU   6                   LINK REGISTER
*
         SPACE 2
* R0     EQU   0               MACROS-WORK
* R1     EQU   1               MACROS-WORK
* R2     EQU   2
* R3     EQU   3               CVT/QCB/QEL
* R4     EQU   4
* R5     EQU   5               MSG ASSEMBLY POINTER
* R6     EQU   6               LINKREG AND RETURN REG
* R7     EQU   7
* R8     EQU   8               CVT/ASVT/ASCB
* R9     EQU   9
* R10    EQU   10
* R11    EQU   11              CPPL
* R12    EQU   12              BASE REGISTER
* R13    EQU   13              SAVE AREA POINTER
* R14    EQU   14              OS RETURN REGISTER/MACRO WORK
* R15    EQU   15              OS RETURN CODE/MACRO WORK
         EJECT
S051B10  PGM
         EJECT
REALSTRT LR    R11,R1
         USING CPPL,R11
         EXTRACT MF=(E,EXTRACT)
         L     R1,ANSWER            (R1)=ADDR OF TSO FLAG FROM EXTRACT
         MVC   TSOFLAG,0(R1)        MOVE IN THE ANSWER TO OUR FLAG
TESTTSO  TM    TSOFLAG,X'80'
         BNO   USEOPER
         SPACE
USEONLIN MVI   DSNAME,C' '             CLEAR OUT
         MVC   DSNAME+1(L'DSNAME-1),DSNAME     THE DSNAME
         L     R2,CPPLCBUF             LOAD BUFFER ADDRESS
         LR    R3,R2                   DEBUG
         LA    R3,104(R3)              DEBUG
         CLC   0(2,R2),=X'0009'        BUFFER LENGTH MUST BE
         BL    ERROR                   AT LEAST 9 BYTES AND
         CLC   2(2,R2),=X'0004'        THE OFFSET 4 BYTES
         BL    ERROR
         LH    R3,2(R2)                LOAD OFFSET
         LA    R3,4(R3)
         LH    R5,0(R2)                LOAD BUFFER LENGTH
         SR    R5,R3                   FIND OPERAND LENGTH
         AR    R3,R2                   POINT TO FIRST CHARACTER
         SPACE 2
         LR    R4,R3                   FIND LAST CHARACTER
DSN1     CLI   0(R4),X'40'             OF DSNAME
         BE    DSN2
         LA    R4,1(R4)
         BCT   R5,DSN1
         SPACE 2
DSN2     BCTR  R4,R0
         CLI   0(R3),C' '
         BE    ERROR
         CLI   0(R3),C''''             IF FIRST CHARACTER IS ',
         BNE   USERID                  DON'T ADD USERID TO DSNAME
         CLI   0(R4),C''''
         BNE   ERROR
         LA    R3,1(R3)                SKIP OVER FIRST QUOTE
DSN21    SR    R4,R3                   FIND LENGTH OF DSNAME - 1
         LTR   R4,R4                   AND CHECK FOR ERRORS
         BNP   ERROR
         LR    R8,R4
         LA    R5,44
         CR    R8,R5
         BH    ERROR
         BCTR  R4,R0
         EX    R4,MOVEFQ
         B     SEARCH
USERID   L     R7,CPPLUPT              LOAD ADDRESS OF UPT
         USING UPT,R7                  ESTABLISH ADDRESSABILITY
         SR    R8,R8
         IC    R8,UPTPREFL             LENGTH OF USERS DSNAME PREFIX
         LTR   R8,R8                   USER SET ANY PREFIX?
         BP    USERID1                 YES-CONTINUE
         LA    R4,1(R4)                PROCESS AS IF IT WERE FULLY
*                                       QUALIFIED AND WE REMOVED
         B     DSN21                    THE QUOTES.....
         SPACE
USERID1  BCTR  R8,R0
         EX    R8,MOVEU                MOVE USERID
         B     CONTINUE
         DROP  R7                        CANCEL ACCESS TO UPT
CONTINUE LA    R7,DSNAME
         AR    R7,R8
         LA    R7,1(R7)
         MVI   0(R7),C'.'
         SR    R4,R3                   DSNAME LENGTH - 1
         AR    R8,R4
         LA    R8,3(R8)
         LA    R5,44
         CR    R8,R5
         BH    ERROR
         EX    R4,MOVEDSN
         B     SEARCH
         EJECT
*.....................................................................*
*        OPER MODE.. PROMPT OPER FOR DSNAME OR EOJ                    *
*.....................................................................*
         SPACE
USEOPER  DS    0H
         MVI   DSNAME,C' '     CLEAR OUT DSNAME
         MVC   DSNAME+1(L'DSNAME-1),DSNAME
         LA    R1,WTOR1
         BAL   LINKREG,PUTGET  GO GET OPER REPLY
         CLC   =CL8' ',DSNAME  ANYTHING THERE
         BE    BOZO
         CLC   =CL4'EOJ',DSNAME HOW ABOUT EOJ?
         BE    $$EOJ
*
* MUST BE A DSNAME TO TRY....
*        GET THE LENGTH OF THE DSNAME
*
         LA    R8,DSNAME
         LA    R7,44                   FIND LAST CHARACTER
LENLOOP  CLI   0(R8),X'40'             OF DSNAME
         BE    GOTLEN
         LA    R8,1(R8)
         BCT   R7,LENLOOP
GOTLEN   S     R8,=A(DSNAME)           (R8)= LENGTH OF DSNAME
         LTR   R8,R8
         BP    SEARCH
         SPACE 2
BOZO     LA    R1,BOZOMSG
         BAL   LINKREG,PUTMSG
         B     USEOPER
         EJECT
*.....................................................................*
*        BEGIN SEARCH FOR USERS/JOBS ALLOCATED TO DSNAME              *
*                                                                     *
*    ENTER WITH (R8) = LENGTH OF DSNAME TO LOOK FOR                   *
*               (DSNAME) = DSNAME TO LOOK FOR                         *
*                                                                     *
*.....................................................................*
         SPACE
SEARCH   ST    R8,DSLEN                SAVE LENGTH OF DSNAME
         LR    R7,R8                   CONVERT DSNAME TO
         LA    R2,DSNAME               UPPER CASE
CONV     OI    0(R2),X'40'
         LA    R2,1(R2)
         BCT   R7,CONV
         MVI   MSG,C' '                INIT MESSAGE
         MVC   MSG+1(L'MSG-1),MSG
         MVC   MSGMODE,=C'SHR'
         MVI   MSGDASH,C'-'
         MVC   PSW,TSOFLAG
*
*   PSW = X'80'     TSO- NO HEADING PRINT
*   PSW = X'00'     BATCH - HEADING NOT PRINTED
*   PSW = X'FF'     BATCH - HEADING HAS BEEN PRINTED
*
         SPACE 2
* NOW BEGIN SEARCH. FIRST LOOK AT MAJOR QCB CHAIN FOR MAJNAME=SYSDSN
* THEN SEARCH ASSOCIATED MINOR QCB CHAIN FOR OUR DATASET NAME.
* THEN USE THE MINOR QCB TO POINT TO THE QELS FOR THIS ENQUEUE.
* FROM THE QELS GET THE ASID OF THE USER ENQUEUED ON THE DATASET.
* USING ASID..LOCATE ASCB FOR THIS USER, AND GET TSOUID OR JOBNAME
*  FROM ASCB......WHEW....
*
         L     R3,CVTPTR               ADDRESS OF CVT
         USING CVT,R3
         L     R3,CVTFQCB              ADDRESS OF FIRST MAJOR QCB
         DROP  R3
         USING QCB,R3
QCBNEXT  LTR   R3,R3
         BZ    NOFIND
         CLC   MAJNAME,SYSDSN
         BE    FINDDSN
         L     R3,MAJNMAJ              ADDRESS OF NEXT MAJOR QCB
         B     QCBNEXT
         SPACE 2
FINDDSN  L     R3,MAJFMIN              ADDRESS OF FIRST MINOR QCB
         SR    R4,R4
NEXTMIN  LTR   R3,R3
         BZ    NOFIND
         DROP  R3
         USING MIN,R3
         IC    R4,MINNAMEL             LENGTH OF QCB NAME
         CR    R4,R8
         BNE   INCR
         BCTR  R4,R0
         EX    R4,COMPDSN
         BE    GETQEL
INCR     L     R3,MINNMIN              ADDRESS OF NEXT MINOR QCB
         B     NEXTMIN
         EJECT
GETQEL   LA    R4,58
         LA    R2,MSG
         LA    R5,MSGUSER
         L     R3,MINFQEL              LOAD ADDRESS OF QEL
         DROP  R3
         USING QEL,R3
         B     CHKQEL         GO INTO SEARCH LOOP FOR USERS
*
* FOUND DS ENTRY..NOW CHECK QEL'S FOR ALLOC STATUS, THEN GET USER
*  WHOSE GOT THE DATASET (VIA FINDJN SUBROUTINE...)
*
         SPACE
NEXTQEL  L     R3,QELNQEL     GET NEXT QEL ADDRESS
CHKQEL   LTR   R3,R3
         BZ    OUT
         TM    QELQFLGS,QELSHARE
         BO    SHR
*
* HANDLE OLD ALLOCATION...
*
OLD      LR    R6,R5
         SR    R6,R2
         CLI   MSGUSER,C' '
         BE    OLD2                    SEE IF ANY SHARE NEEDS TO BE
         BCTR  R5,0                     DUMPED  IF SO..ERASE THE
         MVI   0(R5),C' '               TRAILING COMMA
         CLI   PSW,X'00'               ANY HEADING TO PRINT?
         BNE   OLD1                    NO-> SKIP PRINT OF HEADING
         LA    R1,WTODSN               YES-> PRINT THE DSNAME
         BAL   LINKREG,PUTMSG           INVOLVED AND
         MVI   PSW,X'FF'                SET THE PSW TO INDICATE IT.
OLD1     LA    R1,MSGWTO                 GO SHOVEL IT
         BAL   LINKREG,PUTMSG
         MVI   MSGUSER,C' '
         MVC   MSGUSER+1(L'MSGUSER-1),MSGUSER
OLD2     MVC   MSGMODE,=C'OLD'
         LA    R5,MSGUSER
         BAL   R6,FINDJN
PRINT    SR    R5,R2
         CLI   PSW,X'00'               ANY HEADING TO PRINT?
         BNE   OLD3                    NO-> SKIP PRINT OF HEADING
         LA    R1,WTODSN               YES-> PRINT THE DSNAME
         BAL   LINKREG,PUTMSG           INVOLVED AND
         MVI   PSW,X'FF'                SET THE PSW TO INDICATE IT.
OLD3     LA    R1,MSGWTO               GO PRINT THE MESSAGE
         BAL   LINKREG,PUTMSG
         MVC   MSGMODE,=C'SHR'         RESTORE SHARE STATUS..
         MVI   MSGUSER,C' '
         MVC   MSGUSER+1(L'MSGUSER-1),MSGUSER
         LA    R5,MSGUSER
         B     NEXTQEL                 GO SEE IF THERES ANY SHARE..
         EJECT
*
* HANDLE SHARE ALLOCATION
*
SHR      LR    R6,R5                  SEE IF THERE IS ROOM TO
         SR    R6,R2                    ADD THE JOB/USER TO THE LIST
         CR    R6,R4
         BL    SHR2                   IF SO..GO DOIT..IF NOT PRINT IT
         CLI   PSW,X'00'               ANY HEADING TO PRINT?
         BNE   SHR1                    NO-> SKIP PRINT OF HEADING
         LA    R1,WTODSN               YES-> PRINT THE DSNAME
         BAL   LINKREG,PUTMSG           INVOLVED AND
         MVI   PSW,X'FF'                SET THE PSW TO INDICATE IT.
SHR1     BCTR  R5,0                     REMOVE TRAILING COMMAN ON THE
         MVI   0(R5),C' '               MESSAGE
         LA    R1,MSGWTO               GO PRINT THE MESSAGE
         BAL   LINKREG,PUTMSG
         MVI   MSGUSER,C' '
         MVC   MSGUSER+1(L'MSGUSER-1),MSGUSER
         LA    R5,MSGUSER
SHR2     BAL   R6,FINDJN
         MVI   0(R5),C','
         LA    R5,1(R5)
         B     NEXTQEL
         SPACE 2
OUT      CLI   MSGUSER,C' '
         BE    RETURN
         BCTR  R5,0                   MAKE SURE SOMETHING IS THERE
         MVI   0(R5),C' '             YEP..REPLACE IT WITH A BLANK
         CLI   PSW,X'00'               ANY HEADING TO PRINT?
         BNE   OUT1                    NO-> SKIP PRINT OF HEADING
         LA    R1,WTODSN               YES-> PRINT THE DSNAME
         BAL   LINKREG,PUTMSG           INVOLVED AND
         MVI   PSW,X'FF'                SET THE PSW TO INDICATE IT.
OUT1     LA    R1,MSGWTO               GO PRINT THE LAST LINE
         BAL   LINKREG,PUTMSG
         B     RETURN
         EJECT
ERROR    MVI   MSG,C' '
         MVC   MSG+1(L'MSG-1),MSG      CLEAR OUT MESSAGE
         MVC   MSG(L'ERMSG1),ERMSG1    MOVE IN THE ERROR MESSAGE
         LA    R1,MSGWTO               GO PRINT IT
         BAL   LINKREG,PUTMSG
         B     RETURN
         SPACE 2
NOFIND   MVI   MSG,C' '
         MVC   MSG+1(L'MSG-1),MSG      CLEAR OUT MESSAGE
         MVC   MSG(L'ERMSG2),ERMSG2    MOVE IN PART 1 OF ERR MSG
         L     R1,=A(MSG+L'ERMSG2)     POINT TO START OF DSNAME
         L     R2,DSLEN
         BCTR  R2,0                    ADJUST FOR MACHINE LENGTH
         EX    R2,MVEDSN               MOVE IT INTO THE MESSAGE
         AR    R1,R2                   BUMP OVER IT
         LA    R1,1(R1)                 INCLUDE REAL LENGTH...
         LA    R2,L'ERMSG2A-1
         EX    R2,MVEMSG
         LA    R1,MSGWTO               GO PRINT IT
         BAL   LINKREG,PUTMSG
         SPACE
RETURN   TM    TSOFLAG,X'80'           IS THIS TSO?
         BO    $$EOJ                   YES-> SPLIT TO OS
         B     USEOPER                 NO-> GO PROMPT OPERATOR
         EJECT
*        FINDJN    -    FINDS THE JOB NAME AND MOVES IT
*                       TO A SPECIFIED LOCATION
*
*        UPON ENTRY     REG. 3  -  ADDRESS OF QEL
*                       REG. 5  -  LOC. TO REC. JOB NAME OR USERID
*                       REG. 6  -  RETURN REG.
*
*        UPON EXIT      REG. 5  -  CONTAINS ADDRESS FOLLOWING
*                                  THE JOB NAME OR USERID
*
*                       REG. 7  -  WORK REG.
*                       REG. 8  -  WORK REG.
*                       REG. 9  -  WORK REG.
*                       REG. 10 -  WORK REG.
         SPACE 4
FINDJN   SR    R10,R10
         LH    R10,QELASID    LOAD ASID FROM QEL
         L     R8,CVTPTR      (R8)=ADDR( CVT )
         USING CVT,R8
         L     R8,CVTASVT     (R8)=ADDR( ASVT )
         DROP  R8
         USING ASVT,R8
         LA    R8,ASVTFRST    (R8)=ADDR( STRT OF ASCB PTRS )
*                             (NOTE: ASID#1 PTR IS 4 BYTES UP FROM HERE
*                              SO THIS IS ACTUALLY 4 BYTES BELOW THE
*                              START OF THE ASVTENTY LOCATIONS.)
         SLL   R10,2          GEN WRD OFFSET FOR ASCB PTR
         AR    R8,R10         (R10)=ADDR( ASCB PTR FOR THIS ASID)
         DROP  R8
         L     R8,0(R8)       (R8)=ADDR( ASCB )
         USING ASCB,R8
*
         L     R7,ASCBJBNI    (R7)=ADDR( JOBNAME FOR INIT TASKS )
         LTR   R7,R7          IF NOT THERE, MUST BE TSO
         BZ    DOTSO          ->ITS A TSO JOB..(I HOPE)
*
         MVC   0(2,R5),=C'J=' SAY ITS A BATCH JOB
         B     MOVEIT         GO MOVE THE NAME
*
DOTSO    L     R7,ASCBJBNS    (R7)=ADDR(TSO/STRT/MOUNT JOBNAME)
         MVC   0(2,R5),=C'U=' SAY ITS A TSO USER
*
MOVEIT   LA    R5,2(R5)       BUMP MSG POINTER
         MVC   0(8,R5),0(R7)           MOVE JOB NAME
GOHOME   LA    R7,8
LOOP     CLI   0(R5),C' '
         BE    0(R6)
         LA    R5,1(R5)
         BCT   R7,LOOP
         BR    R6
         DROP  R3
         DROP  R8
         EJECT
*.....................................................................*
*        LOCAL SUBROUTINE FOR IO TO OPER/USER                         *
*.....................................................................*
         SPACE
*
* ENTER WITH WTO,WTOR LIST FORM POINTED TO BY R1
*
*    BAL  LINKREG,PUTMSG    OR
*    BAL  LINKREG,PUTGET
*
*  USES R14 FOR WORK
*
*
PUTMSG   DS    0H
         TM    TSOFLAG,X'80'       IS IT TSO?
         BO    TPUTIT              YES-> GO DO TPUT
         SVC   35                  NO-> USE WTO
         BR    LINKREG
TPUTIT   DS    0H
         LH    R0,0(,R1)           GET LENGTH OF WTO MESSAGE
         S     R0,=F'4'            SUBTRACT OFF HEADER
         LA    R1,4(,R1)           BUMP MSG ADDRESS PAST HDR
         TPUT  (1),(0),R           DO THE TPUT
         BR    LINKREG
         SPACE 2
PUTGET   DS    0H
         TM    TSOFLAG,X'80'       IS IT TSO?
         BO    TSOIT               YES-> GO USE TGET
         LR    R14,R1              NO-> USE WTOR .. SAVE MSG ADDRESS
         SVC   35                  DO THE WTOR...
         L     R1,4(,R14)          GET ADDR OF ECB
         XC    0(4,R1),0(R1)       CLEAN OUT THE ECB....
         LA    R0,1
         SVC   1                   WAIT FOR WTOR TO COMPLETE
         B     PUTRET              RETURN
TSOIT    DS    0H
         LR    R14,R1              SAVE
         LH    R0,8(,R1)           PUT LENGTH
         S     R0,=F'4'
         LA    R1,12(,R1)          PAST HDR
         TPUT  (1),(0),R
         SR    R0,R0
         IC    R0,0(,R14)          GET REPLY LENGTH
         L     R1,0(,R14)          GET REPLY ADRS
         LA    R1,0(,R1)
         ICM   R1,B'1000',=X'80'   INDICATE TGET...
         TGET  (1),(0),R
PUTRET   DS    0H
         L     R1,0(,R14)          GET REPLY ADRS
         XR    R0,R0
         IC    R0,0(,R14)          GET REPLY LENGTH
UPPER    DS    0H
         OI    0(R1),C' '          UPPER CASE
         LA    R1,1(,R1)           NXT
         BCT   R0,UPPER
         BR    LINKREG
         EJECT
*.....................................................................*
*        CONSTANTS                                                    *
*.....................................................................*
         SPACE 2
SYSDSN   DC    CL8'SYSDSN'
ERMSG1   DC    CL15'ERROR IN DSNAME'
ERMSG2   DC    C'DATA SET '''
ERMSG2A  DC    C''' NOT ALLOCATED'
         EJECT
*.....................................................................*
*        VARIABLES                                                    *
*.....................................................................*
         SPACE 2
TSOFLAG  DC    X'00'               ='80' IF TSO. '00' IF NOT TSO
PSW      DC    X'00'               ='00' BATCH PRINT HEADING
*                                  ='80' TSO - NO HEADING
*                                  ='FF' BATCH - HEADING PRINTED
ANSWER   DC    F'0'                ADDRESS POINTER FOR EXTRACT
WTORECB  DC    F'0'                ECB FOR WTOR
SAVEAREA DC    18F'0'              SAVE AREA FOR PROGRAM
DSLEN    DC    F'0'                LENGTH OF DSNAME
         SPACE 2
         EJECT
*.....................................................................*
*        LIST FORMS OF MACROS                                         *
*.....................................................................*
         SPACE 2
EXTRACT  EXTRACT ANSWER,'S',FIELDS=(TSO),MF=L
         EJECT
*.....................................................................*
*        EXECUTED INSTRUCTIONS                                        *
*.....................................................................*
         SPACE 2
         USING UPT,R7
MOVEU    MVC   DSNAME(0),UPTPREFX        MOVE USERS DSNAME PREFIX
         DROP  R7
MOVEFQ   MVC   DSNAME(0),0(R3)
MOVEDSN  MVC   1(0,R7),0(R3)
         USING MIN,R3
COMPDSN  CLC   MINNAME(*-*),DSNAME
         DROP  R3
MVEDSN   MVC   0(0,R1),DSNAME           MOVE DSNAME TO ERRMSG
MVEMSG   MVC   0(0,R1),ERMSG2A          MOVE REST OF ERRMSG TO MSG
         EJECT
*.....................................................................*
*        MESSAGES                                                     *
*.....................................................................*
         SPACE 2
MSGWTO   WTO   '123456789.123456789.123456789.123456789.123456789.12345X
               6789.123456789. ',ROUTCDE=(11),MF=L
         ORG   MSGWTO+4
MSG      DS    CL70
         ORG   MSGWTO+4
MSGMODE  DS    CL3
         DS    CL1
MSGDASH  DS    CL1
         DS    CL1
MSGUSER  DS    CL64
         ORG
WTODSN   WTO   'WHOGOT - DSNAME=XXXXXXXX.XXXXXXXX.XXXXXXXX.XXXXXXXX.XXXX
               XXXXX ',ROUTCDE=(11),MF=L
         ORG   WTODSN+20
DSNAME   DS    CL44
         ORG
WTOR1    WTOR  'WHOGOT - ENTER DSNAME OR ''EOJ''',                     X
               DSNAME,44,WTORECB,ROUTCDE=(11),MF=L
BOZOMSG  WTO   'WHOGOT - INVALID REPLY..RETRY',ROUTCDE=(11),MF=L
         EJECT
*.....................................................................*
*        LITERAL POOL                                                 *
*.....................................................................*
         SPACE 2
         LTORG
         EJECT
         IKJCPPL
         EJECT
         IKJUPT
         EJECT
CVT      DSECT
         CVT   SYS=VMS,TSO=YES
         EJECT
         IHAASVT
         EJECT
         IHAASCB
         EJECT
         IHAQCB
         EJECT
         IHAQEL
         END

