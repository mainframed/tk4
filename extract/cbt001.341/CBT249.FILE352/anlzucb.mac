        /* DATA SET ANLZUCB    AT LEVEL 006 AS OF 07/17/78    */
        /* DATA SET ANLZUCB    AT LEVEL 005 AS OF 02/01/78    */
        ANLZUCB: PROC(PARAM)  OPTIONS(MAIN) REORDER;
 /*                                                                  */
 /* ANLZUCB:  PROGRAM TO ANALYZE UCBLOG : PRODUCE UCB/WORK USAGE RPTS*/
 /*                                                                  */
 /*  THIS PROGRAM READS THE FILE PRODUCED BY UCBLOGER (P051B12L)     */
 /*     TO ANALYZE UCB USAGE FOR 3350 WORK PACKS AND 3330V UCB USAGE.*/
 /*                                                                  */
 /*  VERSION 1.1 17 JUL 78  K TRUE                                   */
 /*                                                                  */
 /*   - SUPPORT DATE SELECTION IN PARM FORMAT                        */
 /*       EXEC PGM=ANLZUCB,PARM='NR/START=YYDDD,STOP=YYDDD'          */
 /*                                                                  */
 /*       IF OMMITTED, START=01001,STOP=99365                        */
 /*                                                                  */
 /*     SUPPORT VARIABLE NUMBER OF WORK PACKS..ADJUST PLOTS DEPENDING*/
 /*       ON MAX NUMBER OF WORK PACKS MTD DURING ONE DAY CYCLE.      */
 /*                                                                  */

 DCL INPUT    FILE  INPUT  RECORD ENV(CONSECUTIVE);
 DCL SYSIN    FILE  INPUT  RECORD ENV(CONSECUTIVE);
 DCL SYSPRINT FILE STREAM OUTPUT;
 DCL PARAM    CHAR(100)   VAR;
 DCL MYPARM   CHAR(101)   VAR INIT('');
 DCL START    FIXED  DEC(5) INIT(01001),
     STOP     FIXED  DEC(5) INIT(99365);

1DCL 1 LOG,                       /* LOG RECORD PRODUCED BY P051B12L */
       2 DATE       FIXED  DEC(5),
       2 TIME       CHAR(3),
       2 VOLUME     CHAR(6),
       2 DSCBS      FIXED  BIN(15,0),
       2 EXTENTS    FIXED  BIN(15,0),
       2 AVAILCYL   FIXED  BIN(15,0),
       2 AVAILTRK   FIXED  BIN(15,0),
       2 CONTIGCYL  FIXED  BIN(15,0),
       2 CONTIGTRK  FIXED  BIN(15,0),
       2 FILL1      CHAR(3),
       2 UCBVRDEV   BIT(1),             /* UCBJBNR FOR 20 BYTES */
       2 FILL2      BIT(6),
       2 UCBMONT    BIT(1),
       2 FILL3      BIT(8),             /* +1  X'1' */
       2 UCBSTD     BIT(8),             /* +2  X'2' */
       2 UCBONLI    BIT(1),             /* +3  X'3' */
       2 UCBCHGS    BIT(1),
       2 UCBRESV    BIT(1),
       2 UCBUNLD    BIT(1),
       2 UCBALOC    BIT(1),
       2 UCBPRES    BIT(1),
       2 UCBSYSR    BIT(1),
       2 UCBDADI    BIT(1),
       2 UCBCHAN    CHAR(2),            /* +4  X'4' */
       2 UCBBSY     BIT(1),             /* +6  X'6' */
       2 UCBNRY     BIT(1),
       2 UCBPST     BIT(1),
       2 UCBPSNS    BIT(1),
       2 UCBCUB     BIT(1),
       2 UCBSAP     BIT(1),
       2 UCBACTV    BIT(1),
       2 UCBQISCE   BIT(1),
       2 UCBFLB     BIT(8),            /* +7  X'7' */
       2 UCBCHM     BIT(8),            /* +8  X'8' */
       2 UCBCNT     BIT(8),            /* +9  X'9' */
       2 UCBLCI     BIT(8),            /*+10  X'A' */
       2 UCBCPU     BIT(8),            /*+11  X'B' */
       2 UCBWGT     BIT(8),            /*+12  X'C' */
       2 UCBNAME    CHAR(3),           /*+13  X'D' */
       2 UCBTYP     BIT(32),           /*+16  X'10'*/
     /*   NOW BEGIN FIELDS FROM UCB+34 TO UCB+38   */

       2 UCBBSVL    BIT(1),            /*+34  X'22'*/
       2 UCBPGFL    BIT(1),
       2 UCBPRSRS   BIT(1),
       2 UCBBPRV    BIT(1),
       2 UCBPUB     BIT(1),
       2 UCBSTR     BIT(1),
       2 UCBSHAR    BIT(1),
       2 UCBBNUL    BIT(1),
       2 UCBMOUNT   BIT(1),            /*+35  X'23'*/
       2 UCBDMC     BIT(7),
       2 UCBSQC     BIT(8),            /*+36  X'24'*/
       2 UCBFL4     BIT(8),            /*+37  X'25'*/
       2 UCBUSER    BIT(8)   ;         /*+38  X'26'*/

1/* DEFINE ACCUMULATORS FOR HOURLY MIN-MAX       */

  DCL MIN_AVAILCYL(0:24)   FIXED BIN(31,0);
  DCL MAX_AVAILCYL(0:24)   FIXED BIN(31,0);
  DCL MIN_CONTIGCYL(0:24)  FIXED BIN(31,0);
  DCL MAX_CONTIGCYL(0:24)  FIXED BIN(31,0);
  DCL MIN_TOTSPACE(0:24)   FIXED BIN(31,0);
  DCL MAX_TOTSPACE(0:24)   FIXED BIN(31,0);
  DCL MIN_#UCBS   (0:24)   FIXED BIN(31,0);
  DCL MAX_#UCBS   (0:24)   FIXED BIN(31,0);
  DCL MIN_#ONLINE (0:24)   FIXED BIN(31,0);
  DCL MAX_#ONLINE (0:24)   FIXED BIN(31,0);
  DCL MIN_#MOUNTED(0:24)   FIXED BIN(31,0);
  DCL MAX_#MOUNTED(0:24)   FIXED BIN(31,0);
  DCL MIN_#RSERVED(0:24)   FIXED BIN(31,0);
  DCL MAX_#RSERVED(0:24)   FIXED BIN(31,0);
  DCL MIN_#WORKPACK(0:24)  FIXED BIN(31,0);
  DCL MAX_#WORKPACK(0:24)  FIXED BIN(31,0);

  DCL #SAMPLES    (0:24)   FIXED BIN(15,0);

 DCL 1 ACCUM,
       2 #WORKPACK  FIXED BIN(15,0),
       2 AVAILCYL   FIXED BIN(15,0),
       2 CONTIGCYL  FIXED BIN(15,0),
       2 TOTSPACE   FIXED BIN(31,0),
       2 #UCBS      FIXED BIN(15,0),
       2 #ONLINE    FIXED BIN(15,0),
       2 #MOUNTED   FIXED BIN(15,0),
       2 #RSERVED   FIXED BIN(15,0);

 DCL 1 MINIMUM,
       2 #WORKPACK  FIXED BIN(15,0),
       2 AVAILCYL   FIXED BIN(15,0),
       2 CONTIGCYL  FIXED BIN(15,0),
       2 TOTSPACE   FIXED BIN(31,0),
       2 #UCBS      FIXED BIN(15,0),
       2 #ONLINE    FIXED BIN(15,0),
       2 #MOUNTED   FIXED BIN(15,0),
       2 #RSERVED   FIXED BIN(15,0);

 DCL 1 MAXIMUM,
       2 #WORKPACK  FIXED BIN(15,0),
       2 AVAILCYL   FIXED BIN(15,0),
       2 CONTIGCYL  FIXED BIN(15,0),
       2 TOTSPACE   FIXED BIN(31,0),
       2 #UCBS      FIXED BIN(15,0),
       2 #ONLINE    FIXED BIN(15,0),
       2 #MOUNTED   FIXED BIN(15,0),
       2 #RSERVED   FIXED BIN(15,0);

 DCL 1 V(100),            /* MSS VOLUME STATISTICS ACCUMULATORS */
       2 VOLUME  CHAR(6),
       2 MINCNT  FIXED BIN(15,0),
       2 MAXCNT  FIXED BIN(15,0),
       2 HOUR    BIT(24),
       2 RSERVED BIT(1),  /* SET IF VOLUME IS OPER MOUNTED */
       2 FILL    BIT(7);

 DCL NVOLS  FIXED BIN(15,0) INIT(0);


 ACCUM   = 0;
 MINIMUM = 32767;
 MAXIMUM = 0;

 DCL   PRNTDATE    PIC'Z9/99/99'   INIT(0),
       PRNTTIME    PIC'Z9.99.99'   INIT(0),
       PRNTHOUR    PIC'Z9'  DEF(PRNTTIME) POS(1),
       CURENTIME   PIC'Z9.99.99'   INIT(0),
       CURENTHR    PIC'Z9'  DEF(CURENTIME) POS(1),
       HR          FIXED BIN(15,0) INIT(0),
       PACK5       PIC'99999'      INIT(0),
       PACK6       PIC'999999'     INIT(0);

 DCL   R941X12  EXTERNAL ENTRY  OPTIONS(ASSEMBLER,INTER);


 DCL   LASTDATE    FIXED DEC(5)    INIT(0),
       LASTTIME    CHAR(3)         INIT(' ');


                        /*   ×      ×       ×       ×       ×  */
                        /*   ...×...×...×...×...×...×...×...×  */
  DCL #3330V   BIT(32) INIT('00110000010110000010000000001001'B),
                        /*   ×      ×       ×       ×       ×  */
      #3350    BIT(32) INIT('00110000010100000010000000001011'B);

 DCL (I,J,K)         FIXED  BIN(15,0)  INIT(0);
 DCL  RECS_READ      FIXED  BIN(31,0)  INIT(0);
 DCL  RECS_SELECTED  FIXED  BIN(31,0)  INIT(0);

 DCL (FOUND,EOF)     BIT(1)     INIT('0'B);

1 ON ENDPAGE(SYSPRINT)  BEGIN;  /*  PAGE HEADING ROUTINE  */

     PAGENO = PAGENO + 1;

     PUT FILE(SYSPRINT) PAGE EDIT
         ('WORK WORK-3350-CYLS..TOT-TRKS')     (COL(21),A)
         ('....3330V STATUS...'   )            (COL(51),A)
         ('DATE'                   )           (SKIP,COL(3),A)
         ('TIME'                   )           (COL(13),A)
         ('VOLS  AVAIL MAX-CTG   AVAIL'  )     (COL(21),A)
         ('UCBS ONLNE MTD RSVD'   )            (COL(51),A);

                        END;


     ON ERROR BEGIN;
     ON ERROR SYSTEM;
     PUT DATA;
     END;
     ON ENDFILE(INPUT) EOF = '1'B;
     ON FINISH BEGIN ;
        CLOSE FILE (INPUT),
              FILE (SYSPRINT) ;
     END ;
     OPEN FILE (INPUT) INPUT,
          FILE (SYSPRINT) PRINT LINESIZE(131);

    IF LENGTH(PARAM) > 0 THEN
      DO;
        MYPARM = PARAM ×× ';';
        GET STRING(MYPARM) DATA(START,STOP);
      END;

1/*                                                       */
 /* READ UCBLOG RECORDS AND ACCUMULATE STATS              */
 /*                                                       */
 /*                                                       */

  SIGNAL ENDPAGE(SYSPRINT);

  CALL INIT_HOUR_COUNTERS;
  CALL GETREC;

  LASTTIME = LOG.TIME;
  LASTDATE = LOG.DATE;

  CALL TIMECNVT(LOG.TIME,CURENTIME);
  HR = CURENTHR;      /* SET INDEX TO HOUR ACCUMULATOR */

  DO WHILE(^EOF);           /*   MAIN PROGRAM LOOP      */

     IF LASTTIME ^= LOG.TIME
        THEN CALL ACCUMULATE;

     IF LASTDATE ^= LOG.DATE
        THEN CALL PLOT_STATS;


     IF UCBTYP  = #3330V THEN
       DO;
         ACCUM.#UCBS = ACCUM.#UCBS + 1;
         IF UCBONLI THEN
           DO;
             ACCUM.#ONLINE = ACCUM.#ONLINE + 1;
             IF UCBALOC × UCBBPRV × UCBPUB × UCBSTR  THEN
               DO;
                CALL VOL_STATS;
                ACCUM.#MOUNTED = ACCUM.#MOUNTED + 1;
               END;
             IF UCBRESV THEN
                ACCUM.#RSERVED = ACCUM.#RSERVED + 1;
           END;
       END;

     IF UCBTYP  = #3350  THEN
       DO;

         IF UCBSTR THEN
           ACCUM.#WORKPACK = ACCUM.#WORKPACK + 1;
         ACCUM.AVAILCYL = ACCUM.AVAILCYL + LOG.AVAILCYL;
         ACCUM.TOTSPACE = LOG.AVAILCYL * 30 + LOG.AVAILTRK +
                          ACCUM.TOTSPACE;
         ACCUM.CONTIGCYL = MAX(ACCUM.CONTIGCYL,LOG.CONTIGCYL);

       END;

     CALL GETREC;

  END;                             /*  END OF MAIN PROGRAM LOOP */

  IF RECS_SELECTED > 0 THEN
    DO;
      CALL ACCUMULATE;
      CALL PLOT_STATS;
    END;

     PUT FILE(SYSPRINT) SKIP(2) EDIT
         ('MINIMUM VALUES '        )      (COL(2), A)
         (MINIMUM.#WORKPACK        )      (COL(21),P'ZZZZ')
         (MINIMUM.AVAILCYL         )      (COL(26),P'ZZ,ZZ9')
         (MINIMUM.CONTIGCYL        )      (COL(34),P'ZZ,ZZ9')
         (MINIMUM.TOTSPACE         )      (COL(42),P'ZZZ,ZZ9')
         (MINIMUM.#UCBS            )      (COL(52),P'ZZ9')
         (MINIMUM.#ONLINE          )      (COL(57),P'ZZ9')
         (MINIMUM.#MOUNTED         )      (COL(62),P'ZZ9')
         (MINIMUM.#RSERVED         )      (COL(67),P'ZZ9');


     PUT FILE(SYSPRINT) SKIP(2) EDIT
         ('MAXIMUM VALUES '        )      (COL(2), A)
         (MAXIMUM.#WORKPACK        )      (COL(21),P'ZZZZ')
         (MAXIMUM.AVAILCYL         )      (COL(26),P'ZZ,ZZ9')
         (MAXIMUM.CONTIGCYL        )      (COL(34),P'ZZ,ZZ9')
         (MAXIMUM.TOTSPACE         )      (COL(42),P'ZZZ,ZZ9')
         (MAXIMUM.#UCBS            )      (COL(52),P'ZZ9')
         (MAXIMUM.#ONLINE          )      (COL(57),P'ZZ9')
         (MAXIMUM.#MOUNTED         )      (COL(62),P'ZZ9')
         (MAXIMUM.#RSERVED         )      (COL(67),P'ZZ9');



  PUT FILE(SYSPRINT) SKIP(2) EDIT
      (RECS_READ,    ' RECORDS READ IN',
       RECS_SELECTED,' RECORDS SELECTED FOR PROCESSING')
      ((2)(P'Z,ZZZ,ZZZ,ZZ9',A))
      ('START =',START,' STOP=',STOP,' DATES SELECTED ')
      (COL(16),(2)(A,P'99.999'),A);


  CLOSE FILE(INPUT);

  STOP;                          /*   FINISH OF MAIN PROGRAM */

1 GETREC:   PROC;

  /*                                                          */
  /* GET A LOG RECORD WITHIN THE TIME STAMP RANGE             */
  /*                                                          */

   DCL GOTONE  BIT(1) INIT('0'B);

   DO WHILE( ^EOF & ^GOTONE);  /* READ EM UNTIL WE FIND ONE   */

     READ FILE(INPUT) INTO(LOG);
       IF ^EOF THEN
         DO;
           RECS_READ = RECS_READ + 1;
           IF LOG.DATE >= START  &
              LOG.DATE <= STOP      THEN
             DO;
               RECS_SELECTED = RECS_SELECTED + 1;
               GOTONE = '1'B;
             END;
         END;

   END;

  END  GETREC;

1 TIMECNVT: PROC(INTIME,OUTTIME);

  /*                                                          */
  /*  SUBROUTINE TO CONVERT UNSIGNED PACKED TIME PRODUCED     */
  /*  BY 'TIME' MACRO INTO USABLE FORM                        */
  /*                                                          */


     DCL INTIME CHAR(3),
         OUTTIME PIC'Z9.99.99',

         WORK4  FIXED DEC(7)  INIT(0);

         UNSPEC(WORK4) = UNSPEC(INTIME) ××  '00001110'B;

         OUTTIME = WORK4 / 10;

    RETURN;

  END TIMECNVT;

1 VOL_STATS: PROC;

  /* ACCUMULATE VOLUME STATISTICS FOR MSS VOLUME FOUND MOUNTED */

  DCL (I,J,K) FIXED BIN(15,0);
  DCL FOUND   BIT(1) INIT('0'B);


  DO I = 1 TO NVOLS WHILE(^FOUND);    /* SEARCH LIST FOR VOLUME */
    FOUND = LOG.VOLUME = V.VOLUME(I);
  END;

  I = I - 1;                          /* DECREMENT TO POINT TO VOL */

  IF ^FOUND & NVOLS < 100 THEN  /* ADD THEM TO THE LIST */
    DO;
      NVOLS = NVOLS + 1;
      V.VOLUME(NVOLS) = LOG.VOLUME;
      I = NVOLS;
      FOUND = '1'B;
    END;

   IF ^FOUND THEN RETURN;    /* QUIT IF WE CANT ADD THEM TO THE LIST */

   SUBSTR(V.HOUR(I),HR+1,1) = '1'B;

   IF UCBRESV THEN V.RSERVED(I) = '1'B;

   UNSPEC(J) = '00000000'B ×× UNSPEC(UCBUSER);

   V.MINCNT(I) = MIN(V.MINCNT(I),J);
   V.MAXCNT(I) = MAX(V.MAXCNT(I),J);
   RETURN;

 END VOL_STATS;

1 ACCUMULATE: PROC;

  /*                                                          */
  /* SUBROUTINE TO ACCUMULATE MIN-MAX DATA FOR REPORTS        */
  /*  INVOKED WHEN TIME STAMP ON LOG RECORDS CHANGES.         */
  /*                                                          */

    CALL TIMECNVT(LASTTIME,PRNTTIME);
    PACK5 = LASTDATE;
    CALL R941X12(PACK5,PACK6);
    PRNTDATE = PACK6;
    I = PRNTHOUR;     /* SET INDEX TO HOUR ACCUMULATOR */

     PUT FILE(SYSPRINT) SKIP    EDIT
         (PRNTDATE                 )      (COL(1), A)
         (PRNTTIME                 )      (COL(11),A)
         (ACCUM.#WORKPACK          )      (COL(21),P'ZZZ9')
         (ACCUM.AVAILCYL           )      (COL(26),P'ZZ,ZZ9')
         (ACCUM.CONTIGCYL          )      (COL(34),P'ZZ,ZZ9')
         (ACCUM.TOTSPACE           )      (COL(42),P'ZZZ,ZZ9')
         (ACCUM.#UCBS              )      (COL(52),P'ZZ9')
         (ACCUM.#ONLINE            )      (COL(57),P'ZZ9')
         (ACCUM.#MOUNTED           )      (COL(62),P'ZZ9')
         (ACCUM.#RSERVED           )      (COL(67),P'ZZ9');


     MAXIMUM.#WORKPACK  = MAX(MAXIMUM.#WORKPACK , ACCUM.#WORKPACK);
     MAXIMUM.AVAILCYL   = MAX(MAXIMUM.AVAILCYL  , ACCUM.AVAILCYL);
     MAXIMUM.CONTIGCYL  = MAX(MAXIMUM.CONTIGCYL , ACCUM.CONTIGCYL);
     MAXIMUM.TOTSPACE   = MAX(MAXIMUM.TOTSPACE  , ACCUM.TOTSPACE);
     MAXIMUM.#UCBS      = MAX(MAXIMUM.#UCBS     , ACCUM.#UCBS   );
     MAXIMUM.#ONLINE    = MAX(MAXIMUM.#ONLINE   , ACCUM.#ONLINE );
     MAXIMUM.#MOUNTED   = MAX(MAXIMUM.#MOUNTED  , ACCUM.#MOUNTED);
     MAXIMUM.#RSERVED   = MAX(MAXIMUM.#RSERVED  , ACCUM.#RSERVED);

     MINIMUM.#WORKPACK  = MIN(MINIMUM.#WORKPACK , ACCUM.#WORKPACK);
     MINIMUM.AVAILCYL   = MIN(MINIMUM.AVAILCYL  , ACCUM.AVAILCYL);
     MINIMUM.CONTIGCYL  = MIN(MINIMUM.CONTIGCYL , ACCUM.CONTIGCYL);
     MINIMUM.TOTSPACE   = MIN(MINIMUM.TOTSPACE  , ACCUM.TOTSPACE);
     MINIMUM.#UCBS      = MIN(MINIMUM.#UCBS     , ACCUM.#UCBS   );
     MINIMUM.#ONLINE    = MIN(MINIMUM.#ONLINE   , ACCUM.#ONLINE );
     MINIMUM.#MOUNTED   = MIN(MINIMUM.#MOUNTED  , ACCUM.#MOUNTED);
     MINIMUM.#RSERVED   = MIN(MINIMUM.#RSERVED  , ACCUM.#RSERVED);

     MIN_#WORKPACK  (I) = MIN(MIN_#WORKPACK (I) , ACCUM.#WORKPACK);
     MIN_AVAILCYL   (I) = MIN(MIN_AVAILCYL  (I) , ACCUM.AVAILCYL);
     MIN_CONTIGCYL  (I) = MIN(MIN_CONTIGCYL (I) , ACCUM.CONTIGCYL);
     MIN_TOTSPACE   (I) = MIN(MIN_TOTSPACE  (I) , ACCUM.TOTSPACE);
     MIN_#UCBS      (I) = MIN(MIN_#UCBS     (I) , ACCUM.#UCBS   );
     MIN_#ONLINE    (I) = MIN(MIN_#ONLINE   (I) , ACCUM.#ONLINE );
     MIN_#MOUNTED   (I) = MIN(MIN_#MOUNTED  (I) , ACCUM.#MOUNTED);
     MIN_#RSERVED   (I) = MIN(MIN_#RSERVED  (I) , ACCUM.#RSERVED);

     MAX_#WORKPACK  (I) = MAX(MAX_#WORKPACK (I) , ACCUM.#WORKPACK);
     MAX_AVAILCYL   (I) = MAX(MAX_AVAILCYL  (I) , ACCUM.AVAILCYL);
     MAX_CONTIGCYL  (I) = MAX(MAX_CONTIGCYL (I) , ACCUM.CONTIGCYL);
     MAX_TOTSPACE   (I) = MAX(MAX_TOTSPACE  (I) , ACCUM.TOTSPACE);
     MAX_#UCBS      (I) = MAX(MAX_#UCBS     (I) , ACCUM.#UCBS   );
     MAX_#ONLINE    (I) = MAX(MAX_#ONLINE   (I) , ACCUM.#ONLINE );
     MAX_#MOUNTED   (I) = MAX(MAX_#MOUNTED  (I) , ACCUM.#MOUNTED);
     MAX_#RSERVED   (I) = MAX(MAX_#RSERVED  (I) , ACCUM.#RSERVED);

     #SAMPLES (I)       = #SAMPLES (I) + 1;

    ACCUM = 0;

    LASTTIME = LOG.TIME;


    CALL TIMECNVT(LOG.TIME,CURENTIME);
    HR = CURENTHR;    /* SET INDEX TO HOUR ACCUMULATOR */


    RETURN;
  END ACCUMULATE;

1 PLOT_STATS: PROC;

  /*                                                          */
  /*  PRODUCE PLOTS OF MIN-MAX DATA BY HOUR OVER A DAY        */
  /*                                                          */
  /*                                                          */

   DCL (I,PACKS) FIXED BIN(15,0) INIT(0);

   DO I = 0 TO 24;
     PACKS = MAX(MAX_#WORKPACK(I),PACKS);
   END;

  CALL DO_PLOT(MIN_TOTSPACE,MAX_TOTSPACE,#SAMPLES,
               'TOTAL WORKSPACE AVAILABLE IN TRACKS','TRACKS',
               16650*PACKS);

  CALL DO_PLOT(MIN_AVAILCYL,MAX_AVAILCYL,#SAMPLES,
               'TOTAL WORKSPACE CYLINDERS AVAILABLE','CYLINDERS',
               555*PACKS);

  CALL DO_PLOT(MIN_CONTIGCYL,MAX_CONTIGCYL,#SAMPLES,
               'CONTIGUOUS WORK CYLINDERS AVAILABLE','CYLINDERS',
               555);

  CALL PLOT_3330V(MIN_#UCBS,MAX_#UCBS,
                  MIN_#ONLINE,MAX_#ONLINE,
                  MIN_#MOUNTED,MAX_#MOUNTED,
                  MIN_#RSERVED,MAX_#RSERVED,
                  #SAMPLES);


  LASTDATE = LOG.DATE;

  CALL INIT_HOUR_COUNTERS;

  SIGNAL ENDPAGE(SYSPRINT);
  RETURN;


 END PLOT_STATS;


1DO_PLOT:    PROC(MINVALS,MAXVALS,INSAMP,INTITLE,INUNITS,INMAX);

  /*                                                          */
  /* GENERATE A PLOT BASED ON MIN-MAX VALUES                  */
  /*                                                          */
  /*                                                          */

   DCL MINVALS(*)   FIXED BIN(31,0),
       MAXVALS(*)   FIXED BIN(31,0),
       INSAMP (*)   FIXED BIN(15,0),
       INTITLE  CHAR(*),
       INUNITS  CHAR(*),
       INMAX    FIXED BIN(31,0);

   DCL PLOT         CHAR(101)  ;

   DCL (I,J,K,LEN)  FIXED BIN(15,0) INIT(0);

                 /*  INITIALIZE PLOT FIELD  */
   PLOT = '';

   PUT FILE(SYSPRINT) PAGE EDIT
     ('SUMMARY FOR ',PRNTDATE,INTITLE) (A,A,X(5),A)
     ('PLOT IS IN PERCENT: 100% =')    (SKIP(2),A)
     (INMAX,INUNITS,'1  # OF')         (P'ZZZ,ZZ9',X(2),A,COL(110),A)
     ((J DO J=1 TO 10),'  WORK')       (SKIP,COL(11),(10)(X(9),P'9'),A)
     ('#SAMP HR ×',(10)'----+----0')   (SKIP,A,COL(11),A(100))
     ('  VOLS')                        (A);


    DO  I = 0 TO 23;
      CALL PLOT_INIT(PLOT,I);

      IF INSAMP(I) > 0 THEN
         CALL PLOT_GEN(PLOT,MINVALS(I),MAXVALS(I),INMAX,(101)'*');

     PUT FILE(SYSPRINT) SKIP EDIT
      (INSAMP(I),I,PLOT,MAX_#WORKPACK(I))
      (P'ZZZZ',COL(7),P'99',COL(10),A(101),P'ZZZZZZ');
    END;


   PUT FILE(SYSPRINT) SKIP EDIT
     ('×',(10)'----+----×')   (COL(10),A,A(100));

    PUT FILE(SYSPRINT) SKIP(2) EDIT
       ('#SAMPLES  HOUR   MINIMUM    MAXIMUM',INTITLE) (A,X(8),A);

    DO I=0 TO 23;
      IF INSAMP(I) > 0 THEN
         PUT FILE(SYSPRINT) SKIP EDIT
           (INSAMP(I),I,MINVALS(I),MAXVALS(I))
           (COL(3),P'ZZZ',COL(12),P'99',COL(18),P'ZZZ,ZZZ',
            COL(29),P'ZZZ,ZZZ');
       ELSE
         PUT FILE(SYSPRINT) SKIP EDIT
           (I)                        (COL(12),P'99');

    END;
    RETURN;

 END DO_PLOT;
1PLOT_3330V: PROC(MINUCB,MAXUCB,MINONL,MAXONL,MINMTD,MAXMTD,
                  MINRVD,MAXRVD,SAMPLES);

  DCL  MINUCB (*)   FIXED BIN(31,0),
       MAXUCB (*)   FIXED BIN(31,0),
       MINONL (*)   FIXED BIN(31,0),
       MAXONL (*)   FIXED BIN(31,0),
       MINMTD (*)   FIXED BIN(31,0),
       MAXMTD (*)   FIXED BIN(31,0),
       MINRVD (*)   FIXED BIN(31,0),
       MAXRVD (*)   FIXED BIN(31,0),
       SAMPLES(*)   FIXED BIN(15,0);

  DCL  PLOT   CHAR(101),
       HOUR_MASK    BIT(24) INIT((24)'0'B),
       PP           PIC'99' INIT(0),
       (I,J,K,LEN)  FIXED BIN(15,0);

  DCL  MNTFLAG    CHAR(1)       INIT(' '),
       MOUNT_TIMES CHAR(45) VAR INIT('');


                 /*  INITIALIZE PLOT FIELD  */
   PLOT = '';

   PUT FILE(SYSPRINT) PAGE EDIT
     ('SUMMARY FOR ',PRNTDATE)             (A,A)
     ('3330V UCB USAGE')                 (X(5),A)
     ('Y AXIS IS COUNT OF UCBS ====>')   (COL(60),A)
     ('PLOT IS MIN-MAX RANGE FOR COUNT') (SKIP(2),A)
     (' OF UCBS','1')                    (A,COL(110),A)
     ((J DO J=1 TO 10))                  (SKIP,COL(11),(10)(X(9),P'9'))
     ('#SAMP HR ×',(10)'----+----0')     (SKIP,A,COL(11),A(100));

    DO  I = 0 TO 23;
      CALL PLOT_INIT(PLOT,I);

      IF SAMPLES(I) > 0 THEN
        DO;
          SUBSTR(HOUR_MASK,I+1,1) = '1'B;
          CALL PLOT_GEN(PLOT,MINUCB (I),MAXUCB (I),100,(101)'U');
          CALL PLOT_GEN(PLOT,MINONL (I),MAXONL (I),100,(101)'O');
          CALL PLOT_GEN(PLOT,MINMTD (I),MAXMTD (I),100,(101)'*');
          CALL PLOT_GEN(PLOT,MINRVD (I),MAXRVD (I),100,(101)'M');
        END;

     PUT FILE(SYSPRINT) SKIP EDIT
      (SAMPLES(I),I,PLOT)
      (P'ZZZZ',COL(7),P'99',COL(10),A(101));
    END;


   PUT FILE(SYSPRINT) SKIP EDIT
     ('×',(10)'----+----×')                   (COL(10),A,A(100))
     ('NOTE: ''M'' IS OPER MTD VOL COUNT')    (SKIP(2),A)
     ('''*'' IS JOB MTD VOL COUNT')           (COL(35),A)
     ('''O'' IS NUMBER OF UCBS ONLINE')       (COL(60),A)
     ('''U'' IS NUMBER OF UCBS')              (COL(90),A);


   IF NVOLS > 0 THEN
     PUT FILE(SYSPRINT) SKIP(2) EDIT
      (' VOLUME MIN MAX HOURS VOLUME FOUND MOUNTED')  (A)
      (' VOLUME MIN MAX HOURS VOLUME FOUND MOUNTED')  (COL(63),A)
      (' ------ --- --- --------------------------')  (SKIP,A)
      (' ------ --- --- --------------------------')  (COL(63),A);

   ON ENDPAGE(SYSPRINT) BEGIN;

     PUT FILE(SYSPRINT) PAGE    EDIT
      ('SUMMARY 3330V USAGE FOR ',PRNTDATE,' (CONT.)') (A,A,A)
      (' VOLUME MIN MAX HOURS VOLUME FOUND MOUNTED')  (SKIP(2),A)
      (' VOLUME MIN MAX HOURS VOLUME FOUND MOUNTED')  (COL(63),A)
      (' ------ --- --- --------------------------')  (SKIP,A)
      (' ------ --- --- --------------------------')  (COL(63),A);
     PUT FILE(SYSPRINT) SKIP;
                        END;


   DO I = 1 TO 98 BY 2 WHILE(I <= NVOLS);   /* PRINT VIRT VOL STATS */

      CALL PLOT_MOUNT(MOUNT_TIMES,V.HOUR(I),HOUR_MASK);

      IF V.RSERVED(I) = '1'B THEN MNTFLAG  = '>';
                             ELSE MNTFLAG  = '';

      PUT FILE(SYSPRINT) SKIP EDIT
         (MNTFLAG,V.VOLUME(I),V.MINCNT(I),V.MAXCNT(I),MOUNT_TIMES)
         (A,A,P'ZZZ9',P'ZZZ9',X(1),A);

      J = I + 1;
      IF J <= NVOLS THEN
       DO;

         CALL PLOT_MOUNT(MOUNT_TIMES,V.HOUR(J),HOUR_MASK);

         IF V.RSERVED(J) = '1'B THEN MNTFLAG = '>';
                                ELSE MNTFLAG = '';

         PUT FILE(SYSPRINT)      EDIT
         (MNTFLAG,V.VOLUME(J),V.MINCNT(J),V.MAXCNT(J),MOUNT_TIMES)
         (COL(63),A,A,P'ZZZ9',P'ZZZ9',X(1),A);

       END;

     END;

    IF NVOLS > 0 THEN
      PUT FILE(SYSPRINT) SKIP(2) EDIT
        ('NOTE: THE ''>'' IN FRONT OF VOLSER INDICATES') (A)
        (' THAT THE VOLUME WAS MTD ''RESERVED'' (VIA OPER MOUNT)') (A);

    REVERT ENDPAGE(SYSPRINT);

    RETURN;

 END PLOT_3330V;

1 PLOT_MOUNT: PROC(STRING,MOUNTED,MASK);

    DCL STRING CHAR(*) VAR,
        MOUNTED BIT(24),
        MASK    BIT(24),
        PP      PIC'99' INIT(0);

    DCL (I,J,K)  FIXED BIN(15,0) INIT(0);

    STRING = '';

    IF MOUNTED = MASK THEN
     DO;
       STRING = 'FOUND MTD >= 1 TIME FOR EACH SAMPLE HOUR';
       RETURN;
     END;

    DO I = 1 TO 24;
       IF SUBSTR(MOUNTED,I,1) = '1'B THEN
         DO;
           PP = I-1;
           STRING = STRING ×× PP;

           DO J = I+1 TO 24 WHILE(SUBSTR(MOUNTED,J,1) = '1'B);
           END;    /* FIND OUT HOW MANY SUCESSIVE ONES THERE ARE */

           J = J - 1;

           IF SUBSTR(MOUNTED,J,1) = '1'B  &
              J > I                        THEN
             DO;
               PP = J-1;
               I = J + 1;
               STRING = STRING ×× '-' ×× PP;
             END;
           STRING = STRING ×× ',';

         END;
    END;

    J = LENGTH(STRING);
    IF J > 1 THEN STRING = SUBSTR(STRING,1,J-1);

    RETURN;


  END PLOT_MOUNT;

1 PLOT_INIT: PROC(PLOT,I);

   DCL PLOT CHAR(*),
       I    FIXED BIN(15,0);

   PLOT = '';
   IF MOD(I+1,5) = 0 THEN PLOT = '×' ×× REPEAT('    +    ×',9);
   SUBSTR(PLOT,1,1) = '×';
   SUBSTR(PLOT,101,1) = '×';
   RETURN;

  END PLOT_INIT;

1 PLOT_GEN:  PROC(PLOT,MINVAL,MAXVAL,THEMAX,CHAR);

   DCL PLOT   CHAR(*),
       (MINVAL,MAXVAL,THEMAX) FIXED BIN(31,0),
       (J,K,LEN)  FIXED BIN(15,0),
       CHAR   CHAR(*);
      IF THEMAX = 0 THEN RETURN;
      J = (MINVAL * 100)/THEMAX;
      K = (MAXVAL * 100)/THEMAX;
      IF J<0 THEN J = 0;
      IF K>100 THEN K=100;
      J = J+1;
      K = K+1;
      LEN = K-J+1;
      IF LEN < 1 THEN LEN = 1;
      SUBSTR(PLOT,J,LEN) = SUBSTR(CHAR,1,LEN);
      RETURN;

  END PLOT_GEN;
1INIT_HOUR_COUNTERS: PROC;

  /*                                                          */
  /* INITIALIZE HOURLY MIN-MAX COUNTERS AND SAMPLE COUNTER    */
  /*                                                          */
  /*                                                          */

  MIN_#WORKPACK  =  32767;
  MIN_AVAILCYL   = 999999;
  MIN_CONTIGCYL  = 999999;
  MIN_TOTSPACE   = 999999;
  MIN_#UCBS      = 999999;
  MIN_#ONLINE    = 999999;
  MIN_#MOUNTED   = 999999;
  MIN_#RSERVED   = 999999;

  MAX_#WORKPACK  = 0;
  MAX_AVAILCYL   = 0;
  MAX_CONTIGCYL  = 0;
  MAX_TOTSPACE   = 0;
  MAX_#UCBS      = 0;
  MAX_#ONLINE    = 0;
  MAX_#MOUNTED   = 0;
  MAX_#RSERVED   = 0;

  #SAMPLES       = 0;

  V = '';           /* INITIALIZE VOLUME STATISTICS */;
  V.MINCNT = 257;
  NVOLS = 0;

  RETURN;
 END INIT_HOUR_COUNTERS;
 END ANLZUCB ; /* END OF MAIN PROGRAM */
