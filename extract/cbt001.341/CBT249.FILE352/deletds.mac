*          DATA SET DELETDS    AT LEVEL 004 AS OF 03/14/83
*          DATA SET DELETDS    AT LEVEL 003 AS OF 08/10/81
*          DATA SET DELETDS    AT LEVEL 008 AS OF 07/22/81
*          DATA SET DELETDS    AT LEVEL 007 AS OF 06/08/81
*          DATA SET DELETDS    AT LEVEL 006 AS OF 08/04/78
*          DATA SET DELETDS    AT LEVEL 005 AS OF 06/16/78
*          DATA SET DELETDS    AT LEVEL 004 AS OF 01/17/78
*          DATA SET DELETDS    AT LEVEL 003 AS OF 01/06/78
*          DATA SET DELETDS    AT LEVEL 002 AS OF 01/05/78
*          DATA SET DELETDS    AT LEVEL 001 AS OF 07/25/74
DELETDS  TITLE ' DELETE NAMED DATA SETS - NTL MODS VER 3.0'
*.....................................................................*
*                                                                     *
* DELETEDS PROGRAM - READ DSNAME CARDS FROM DDNAME=SYSIN AND          *
*                    SCRATCH/UNCATLG DATASETS (20 DSN MAX)            *
*                    FROM DASD VOLID = WORKXX ONLY.                   *
* REQIRED DDNAMES:                                                    *
*    SYSIN    - DSNAMES TO DELETE BEGINNING IN COL 1 (20 MAX)         *
*    SYSPRINT - FOR LOG OF OPERATIONS PERFORMED/ERR MSGS              *
*                                                                     *
* MODS:  MSS2.0 (5 JAN 78  T MURAI,K TRUE)                            *
*                - ADD DYNAMIC ALLOC CODE TO ALLOC MSS VOLUME,        *
*                  MISC NEATING UP OF CODE..+COMMENTS                 *
*        MSS2.1 (17JAN78   K TRUE)                                    *
*                - ADDED SYSDAV UNITYPE FOR MSS CHK AND               *
*                  CHK FOR VOL=MS.... FOR SCR ELIGIBILITY             *
*        MSS2.2 (15JUN78   K TRUE)                                    *
*                - ALLOW SCR FROM 3330V VOLS WITH VOL=WORK..          *
*                                                                     *
*        MSS2.3 ( 3AUG78   K TRUE)                                    *
*                - FIX MULTIVOL INSERT IN LIST LOGIC..S0C1 PBLM       *
*                                                                     *
*        NTL3.0 ( 08JUN81  B WILLIAMS)                                *
*                - CHANGE FCI TO NTL                                  *
*                                                                     *
*        NTL4.0 ( 22JUL81  B WILLIAMS)                                *
*                - ADD NO-SCRATCH FOR 'NTL1' AND SCRATCH OK ON 3350   *
*                  PACKS.                                             *
*                                                                     *
*        NTL5.0 ( 14MAR83  B WILLIAMS)                                *
*                - CHANGE UCB LOOK UP                                 *
*.....................................................................*
         EJECT
DELETDS  CSECT
         STM   14,12,12(13)
         BALR  12,0
         USING *,12
INITIAL  EQU   *
         USING *+4096,11
         L     11,BASE2
         ST    13,SAVE+4
         LR    2,13
         LA    13,SAVE
         ST    13,8(,2)
         L     2,0(,1)                 PARM
         LH    3,0(,2)                 COUNT
         OPEN  (OUTPUT,(OUTPUT))
         PUT   OUTPUT,SKIP
         PUT   OUTPUT,TITLE1
         PUT   OUTPUT,TITLE2
         LTR   3,3
         BZ    GOSYSIN                 BR IF NO PARM TO READ CARDS
         BCTR  3,0                     DECREMENT FOR MOVE
         CLC   2(4,2),=CL4'SYS1'
         BE    BADPARM                 REJECT DSNAME=SYS1....
         CLC   2(4,2),=CL4'SYS2'
         BE    BADPARM                 REJECT DSNAME=SYS1....
         CLC   2(4,2),=CL4'NTL1'                                 NTL4.0
         BNE   GOON                    IF PARM GOOD, USE IT
BADPARM  DS    0H
         EX    3,MOVBUF
         MVC   ACTION(14),=CL14'INVALID DSNAME'
         PUT   OUTPUT,CTL              DISPLAY REJECT MSG
         B     ENDIT                   QUIT
MOVBUF   DS    0H
         MVC   BUFFER(0),2(2)
GOON     DS    0H
         EX    3,MOVE
         B     NOSYSIN
MOVE     DS    0H
         MVC   NAMES(0),2(2)
GOSYSIN  DS    0H
         OPEN  (INPUT,(INPUT))
         LA    4,NAMES                 R4 = ADR OF NAME TABLE
         LA    5,100         LOOP CTR =100
         SLR   R10,R10                    NUMBER OF DSNS TO DO   MSS2.3
GETLOOP  DS    0H
         MVC   BUFFER,BLANKS
         GET   INPUT,BUFFER
         CLI   BUFFER,C' '             QUIT ON FIRST BLANK
         BE    NOMO
         CLC   BUFFER(4),=CL4'SYS1'
         BE    REJECT                  REJECT DSNAME=SYS1....
         CLC   BUFFER(4),=CL4'SYS2'
         BE    REJECT                  REJECT DSNAME=SYS2....
         CLC   BUFFER(4),=CL4'NTL1'                              NTL4.0
         BE    REJECT                  REJECT DSNAME=NTL1....
         MVC   ACTION(14),=CL14'ACCEPTED INPUT'
         B     ECHO
REJECT   DS    0H
         MVC   ACTION(14),=CL14'INVALID DSNAME'
         PUT   OUTPUT,CTL              DISPLAY REJECT MSG
         B     GETLOOP
ECHO     DS    0H
         PUT   OUTPUT,CTL              ECHO INPUT
         MVC   0(44,4),BUFFER
         LA    R10,1(R10)              BUMP COUNT OF # TO DO     MSS2.3
         LA    4,54(,4)                NEXT SLOT
         BCT   5,GETLOOP
         PUT   OUTPUT,MSG1             TOO MANY NAMES
NOMO     DS    0H
         CLOSE (INPUT)
         MVI   SKIP,X'09'              SPACE ONE LINE            MSS2.0
         PUT   OUTPUT,SKIP             PRINT IT                  MSS2.0
         MVI   SKIP,X'89'              RESTORE PAGE EJECT CODE   MSS2.0
NOSYSIN  DS    0H
         LR    R9,R4                 SAVE NEXT ENTRY POINTER
         LA    R4,NAMES
NAMELOOP LTR   R10,R10                 END OF LIST?              MSS2.3
         BNP   SORTROUT
         MVC   AB(44),0(4)             SETUP FOR OBTAIN
DOLOCAT  LOCATE INDAB                  FIND DATA SET IN CATALOG
CHKLOCAT LTR   15,15
         BZ    UNCAT                   UNCATALOG IF FOUND
         MVC   BUFFER,MSG2             ELSE SAY IT AIN'T CATALOGED
BADMSG   DS    0H
         MVC   BUFFER(44),AB
         MVI   0(R4),X'FF'      INDICATE BOZO TO SORT
         PUT   OUTPUT,CTL
         B     NAMUPDTE
UNCAT    DS    0H
         CATALOG REMOVE                UNCATALOG THE DATA SET
         LTR   R15,R15                 GOOD RETURN ?
         BZ    TESTDEV
         CVD   R15,DOUBLE              NO PRINT ERROR CODE
         UNPK  MSG5CODE(2),DOUBLE
         OI    MSG5CODE+1,X'F0'
         MVC   MSG5(44),0(R4)
         MVC   BUFFER(132),MSG5
         PUT   OUTPUT,CTL
         MVI   0(R4),X'FF'
         B     NAMUPDTE
TESTDEV  EQU   *
*          MSS CHANGES 12/9/77                                   MSS2.0
*                                                                MSS2.0
         LH    8,LOCAREA               GET VOL COUNT             MSS2.0
         LA    6,LOCAREA+2             ADR OF DEVICE IDENT       MSS2.0
         CLI   2(R6),X'20'             IS IT DISK DEVICE ?       MSS2.0
         BE    CHKSPLIT                                          MSS2.0
         MVC   MSG3RSON(16),=C'- NONDASD DEVICE'                 MSS2.0
         B     MSGLOOP                                           MSS2.0
CHKSPLIT EQU   *                                                 MSS2.0
         CR    R5,R8                   SEE IF RM FOR MORE DSNS   MSS2.0
         BNL   SPLIT                   YES ENOUGH                MSS2.0
         MVC   MSG3RSON(16),=C'- TABLE OVERFLOW'                 MSS2.0
MSGLOOP  MVC   MSG3(44),0(R4)          SHOW UNCATLG BUT NOT SCR  MSS2.0
         MVC   MSG3VOL(6),4(R6)        MOVE VOL SER TO MSG       MSS2.0
         MVC   BUFFER(132),MSG3                                  MSS2.0
         PUT   OUTPUT,CTL                                        MSS2.0
         LA    R6,12(R6)                                         MSS2.0
         BCT   R8,MSGLOOP              CYCLE TO GET ALL ENTRIES  MSS2.0
         MVI   0(R4),X'FF'                                       MSS2.0
         B     NAMUPDTE                                          MSS2.0
*                                                                MSS2.0
*                                                                MSS2.0
SPLIT    MVC   44(10,R4),0(R6)         SAVE DEV CODE AND VOL SER MSS2.0
         BCTR  R8,0                                              MSS2.0
RESPLIT  LTR   R8,R8                   NOW CHK FOR MORE VOLSERS  MSS2.3
         BNP   NAMUPDTE                EXIT IF ZERO OR NEGATIVE  MSS2.3
SPLITIT  BCTR  R8,0                      DECREMENT COUNT OF VOLS MSS2.3
         MVC   0(54,R9),0(R4)          MULT VOL SER SPLIT ENTR   MSS2.0
         LA    R6,12(R6)               NEXT DEV TYPE VOL ENTRY   MSS2.3
         MVC   44(10,R9),0(R6)         PUT ENTRY IN TABLE        MSS2.0
         LA    R9,54(R9)               POINT TO NXT ENTRY OF NAMES  2.0
         BCT   R5,RESPLIT              FIX ADDR PBLM   KT        MSS2.3
         LA    R6,10(R6)                                         MSS2.0
         MVC   MSG3RSON(16),=C'- TABLE OVERFLOW'                 MSS2.0
         B     MSGLOOP                                           MSS2.0
NAMUPDTE LA    R4,54(R4)               POINT TO NEXT ENTRY       MSS2.0
         BCTR  R10,0                   DECREMENT CNT TO DO       MSS2.3
         B     NAMELOOP                                          MSS2.0
*                                                                MSS2.0
SORTROUT EQU   *                                                 MSS2.0
         L     R7,SORTACON                                       MSS2.0
SORT     LA    R4,NAMES                                          MSS2.0
         LA    R5,54(R4)                                         MSS2.0
         MVI   SORTEND+1,X'F0'                                   MSS2.0
SRTONE   CLI   0(R4),X'FF'            ALREADY SORTED ?           MSS2.0
         BNE   SRTCYCLE               NO                         MSS2.0
         CLI   0(R4),X'40'            END OF NAMES TABLE ?       MSS2.0
         BE    CYCLEND                YES GET OUT                MSS2.0
         LA    R4,54(R4)              POINT TO NEXT ENTRY        MSS2.0
         LA    R5,54(R5)                                         MSS2.0
         B     SRTONE                                            MSS2.0
SRTCYCLE CLI   0(R5),X'40'            END OF TABLE ?             MSS2.0
         BE    CYCLEND                YESY GET OUT               MSS2.0
         CLI   0(R5),X'FF'            ALREADY SORTED ?           MSS2.0
         BE    SRTBUMP                YES GO GET NEXT ENTRY      MSS2.0
         MVI   SORTEND+1,X'00'     INDICATE MORE ENTRIES TO BE SORTED
         CLC   48(6,R4),48(R5)        COMPARE VOL SER            MSS2.0
         BNH   SRTBUMP                LOW OR EQUAL               MSS2.0
         LR    R4,R5                  POINTER TO LOWER ENTRY     MSS2.0
SRTBUMP  LA    R5,54(R5)              POINT TO NEXT ENTRY        MSS2.0
         B     SRTCYCLE                                          MSS2.0
         SPACE 2
CYCLEND  EQU   *                                                 MSS2.0
         MVC   0(54,R7),0(R4)         SAVE LOW ENTRY             MSS2.0
         MVI   0(R4),X'FF'            INDICATE SORTED ENTRY      MSS2.0
SORTEND  NOP   SCRATCH                AT END GO SCRATCH FUNCTION MSS2.0
         LA    R4,NAMES                                          MSS2.0
EQCYCLE  CLI   0(R4),X'40'            END OF TABLE ?             MSS2.0
         BE    EQEND                  YES END OF EQUAL SEARCH    MSS2.0
         CLI   0(R4),X'FF'            ENTRY ALREADY SORTED ?     MSS2.0
         BE    EQBUMP                 YES GET OUT OF LOOP        MSS2.0
         CLC   48(6,R4),48(R7)        IS THIS ENTRY EQUAL ?      MSS2.0
         BE    EQMOVE                                            MSS2.0
EQBUMP   LA    R4,54(R4)              BUMP TO NEXT ENTRY         MSS2.0
         B     EQCYCLE                GO LOOK FOR MORE EQUALS    MSS2.0
*                                                                MSS2.0
*                                                                MSS2.0
EQMOVE   LA    R7,54(R7)              POINT TO NEXT SLOT IN SORTED TBL
         MVC   0(54,R7),0(R4)         MOVE IN EQUAL ENTRY        MSS2.0
         MVI   0(R4),X'FF'            INDICATE SORTED            MSS2.0
         B     EQBUMP                                            MSS2.0
*                                                                MSS2.0
EQEND    LA    R7,54(R7)                                         MSS2.0
         B     SORT                   GO BACK TO SEARCH FOR MORE MSS2.0
*                                     UNSORTED ENTRIES           MSS2.0
         EJECT
*                                                                MSS2.0
SCRATCH  L     R4,SORTACON           INITIALIZE FOR SCRATCHING   MSS2.0
         LA    R6,44(R4)             POINT TO DEVICE TYPE AND VOL SER
******************************************************************
UNITEST  DS    0H                                                MSS2.0
         CLI   0(R4),X'40'             AT END OF TABLE ?         MSS2.0
         BE    ENDIT                   YES FINISHED              MSS2.0
         CLC   0(4,R6),T3330V          VIRTUAL DEVICE ?          MSS2.1
         BE    CHKALLOC                YES->GO TRY IT            MSS2.1
         CLC   0(4,R6),TSYSDAV         VIRTUAL DEVICE ?          MSS2.1
         BNE   UCBSCAN                 NO USE REAL LOGIC         MSS2.1
         SPACE
*.....................................................................*
*.       INVOKE DYNAMIC ALLOCATION TO ALLOCATE VTOC OF MSS VOLUME    .*
*.....................................................................*
         SPACE
CHKALLOC CLC   4(6,R6),SAVEVOL    HAVE WE ALREADY ALLOCATED      MSS2.1
*                                  THIS MSS VOLUME               MSS2.0
         BE    SKPALLC            YES-> SO SKIP THIS JUNK..      MSS2.0
*                                 NO -> DO THE ALLOCATE          MSS2.0
*                                                                MSS2.0
         MVC   MSSVOL,4(R6)       MOVE IN VOLSER TO S99 RB       MSS2.0
         XC    S99ERC(4),S99ERC   CLEAR OUT ALLOCATE ERC/INFO    MSS2.0
         XC    FREERC(4),FREERC   CLEAR OUT FREE     ERC/INFO    MSS2.0
         LA    R1,FREEPTR         LOAD ADDR OF SVC99 'FREE'      MSS2.0
         DYNALLOC                  AND INVOKE DYNAM ALLOCATION   MSS2.0
*                                                                MSS2.0
         LA    R1,S99RBPTR        LOAD ADDR OF SVC99 'ALLOCATE'  MSS2.0
         DYNALLOC                  GO GET VTOC OF MSSVOL         MSS2.0
*                                                                MSS2.0
         LTR   R15,R15            ANY PROBLEMS                   MSS2.0
         BNZ   CANTALLC           YES-> GO REPORT THEM           MSS2.0
         MVC   SAVEVOL,MSSVOL     NO -> SAVE THIS VOLSER         MSS2.0
         SPACE 1                                                 MSS2.0
SKPALLC  DS    0H                                                MSS2.0
* JUST PULLED THIS OUT SO THAT ALL NON-RES ONLINE REAL DASD MAY  NTL4.2
* BE CHECKED FOR SCRATCH.                                        NTL4.2
*        CLC   WORKPRFX,4(R6)     IS THIS A WORK.. VOLUME?       MSS2.2
*        BE    YESCANDO           YES-> GO SAY                   MSS2.2
*        CLC   VOLPREFX,4(R6)     IS THIS A MS.... VOLUME?       MSS2.1
*        BNE   NOCANDO            NO->  GO SAY                   MSS2.1
YESCANDO SR    R0,R0               SAY 'NO UCB ADDR' TO SCRATCH  MSS2.0
         LA    R3,1                SAY ONE VOLUME TO SCRATCH AND MSS2.0
         STH   R3,VOLIST           PUT CNT IN SCRATCH CAMLST     MSS2.0
         MVC   VOLIST+2(10),0(R6)  MOVE IN DEVICE TYPE:VOLSER    MSS2.0
         MVC   AB(44),0(R4)        MOVE IN DSNAME TO SCR         MSS2.0
         XC    VOLIST+12(2),VOLIST+12  CLEAR STATUS FIELD        MSS2.0
         SCRATCH DELAB             ZAP THE DATASET...            MSS2.0
         LTR   R15,R15             CHECK RETURN CODE...          MSS2.0
         BZ    SOK                                               MSS2.0
         B     BADSCR                 GO PRINT BAD MESSAGE       MSS2.0
UCBSCAN  DS    0H
*
         L     R3,16                   GET CVT ADDRESS           NTL5.0
         L     R9,40(,R3)              GET UCB LIST ADR IN CVT   NTL5.0
         SR    R3,R3                   CLEAR FOR THE ICM         NTL5.0
UCBLOOP  ICM   R3,B'0011',0(R9)        UCB ADDRESS               NTL5.0
         CLC   =X'FFFF',0(R9)          CHECK IF END OF UCB LIST  NTL5.0
         BE    UCBEND                  YES - END WITH ERROR MSG  NTL5.0
         LTR   R3,R3                   TEST UCB STATUS           NTL5.0
         BZ    UCBUP                   ZERO = SKIP THIS GUY
*        BM    UCBEND                  MINUS = END OF UCB LIST   NTL5.0
         CLI   18(3),X'20'             DA -- MUST BE
         BNE   UCBUP
         TM    3(3),X'80'              ONLINE -- MUST BE
         BZ    UCBUP
         TM    3(3),X'02'              SYSRES -- MUST NOT BE
         BO    UCBUP
         TM    3(3),X'20'              RESERVED -- MAY BE
         BO    VOLTST
         TM    3(3),X'04'              PERM/RESIDENT -- MAY BE
         BZ    UCBUP                   SKIP ANYTHING ELSE
VOLTST   DS    0H                      ONLY LOOK AT WORK PACKS
* DO NOT CHECK FOR WORK PACK VOLID.... JUST GOTO BLD            NTL4.0
*        CLC   28(4,3),=CL4'WORK'      3330 WORK PACK ID
*        BE    BLD
         B     BLD
         TM    28(3),X'F0'             2314 WORK PACK ID
         BO    BLD
UCBUP    DS    0H
         LA    9,2(,9)                 NEXT GUY IN UCB LIST
         B     UCBLOOP
UCBEND   EQU   *
         MVC   MSG3RSON(20),=C'- VOLUME NOT MOUNTED'
         CLC   4(4,R6),=C'WORK'        WAS SEARCH FOR WORK VOLUME ?
         BE    NONE
NOCANDO  MVC   MSG3RSON(33),=C'- VOLUME NOT ELIGIBLE FOR SCRATCH'   2.1
         B     NONE                    NO, SAY NOSCRATCH
BLD      DS    0H
         CLC   4(6,6),28(3)            VOLSER MATCH
         BNE   UCBUP                   NOMATCH, SKIP IT
         MVC   VOLIST+2(10),0(R6)
         LA    R3,1
         STH   R3,VOLIST
         XC    VOLIST+12(2),VOLIST+12
         MVC   AB(44),0(R4)            MOVE NAME IN
GOSCRTCH DS    0H
         SR    0,0
         SCRATCH DELAB                 SCRATCH THE DATA SET
         LTR   15,15                   SCRATCH SUCCESSFUL?
         BZ    SOK
BADSCR   EQU   *
         MVC   MSG3RSON(21),=C'- SCRATCH ERROR CODE '
         LH    R15,VOLIST+12
         CVD   R15,DOUBLE
         UNPK  MSG3RSON+22(2),DOUBLE
         OI    MSG3RSON+23,X'F0'
NONE     EQU   *
         MVC   MSG3(44),0(R4)
         MVC   MSG3VOL(6),4(R6)
         MVC   BUFFER(132),MSG3
         PUT   OUTPUT,CTL
         MVI   MSG3RSON,X'40'
         MVC   MSG3RSON+1(43),MSG3RSON
         B     SCRUPDTE
SOK      DS    0H
         MVC   MVOL(6),VOLIST+6        LIST FIRST VOLUME OF SCRATCH
         MVC   BUFFER,MSG4             SETUP GOOD OP MSG
         MVC   BUFFER(44),AB           PUT IN DSN
         PUT   OUTPUT,CTL
SCRUPDTE LA    R4,54(R4)
         LA    R6,44(R4)
         B     UNITEST
         SPACE 2
ENDIT    DS    0H
         CLOSE (OUTPUT)
         CLC   SAVEVOL,=CL6' '    ANY VOLUME MOUNTED?            MSS2.0
         BE    JUSTEXIT           NO-> SKIP FREE OF 'ALLOCDD'    MSS2.0
*                                 YES-> BE NEET..CLEAN UP        MSS2.0
         XC    FREERC(4),FREERC   CLEAR OUT FREE     ERC/INFO    MSS2.0
         LA    R1,FREEPTR         LOAD ADDR OF SVC99 'FREE'      MSS2.0
         DYNALLOC                  AND INVOKE DYNAM ALLOCATION   MSS2.0
*                                                                MSS2.0
JUSTEXIT L     13,SAVE+4                                         MSS2.0
         LM    14,12,12(13)
         SR    15,15
         BR    14                      G'BYE
         EJECT
*.....................................................................*
*.       FORMULATE TEXT FOR SVC99 ALLOCATE FAILURE                   .*
*.....................................................................*
         SPACE 3
CANTALLC DS    0H                                                MSS2.0
         MVC   M99VOL,MSSVOL      MOVE VOLSER INTO MESSAGE       MSS2.0
         CVD   R15,DOUBLE         CONVERT SVC 99 RETURN CODE     MSS2.0
         MVC   M99RC,=X'40202120'  TO NICE PRINTABLE DECIMAL     MSS2.0
         ED    M99RC,DOUBLE+6                                    MSS2.0
*                                                                MSS2.0
         UNPK  M99ERC(5),S99ERC(3)  CONVERT DYNAM ALLOC ERR CODE MSS2.0
         NC    M99ERC,HEXMASK        TO PRINTABLE HEXADECIMAL    MSS2.0
         TR    M99ERC,HEXTAB         AND FIX IT UP PRETTY        MSS2.0
         MVI   M99ERC+4,C' '                                     MSS2.0
*                                                                MSS2.0
         UNPK  M99INFO(5),S99INFO(3) CONVERT DYNAM ALLOC INFO    MSS2.0
         NC    M99INFO,HEXMASK       CODE TO PRNTABLE HEX        MSS2.0
         TR    M99INFO,HEXTAB        AND FIX IT UP PRETTY        MSS2.0
         MVI   M99INFO+4,C' '                                    MSS2.0
*                                                                MSS2.0
         PUT   OUTPUT,M99MSG        POKE THE MESSAGE TO THE LOG  MSS2.0
         MVC   SAVEVOL,=CL6' '        SAY NO VOLUME ALLOCATED    MSS2.0
         LA    R15,4                INDICATE UNABLE TO MOUNT     MSS2.0
         XC    VOLIST+12(2),VOLIST+12                            MSS2.0
         MVI   VOLIST+13,X'06'        BECAUSE MSS NOCAN DO       MSS2.0
         B     BADSCR                GO GRIPE...                 MSS2.0
         EJECT
*.....................................................................*
*.       DYNAMIC ALLOCATION REQUEST BLOCK TO ALLOC VTOC OF MSS VOL   .*
*.....................................................................*
         SPACE 3
         DS    0F                 GET FULLWORD BOUNDARY          MSS2.0
S99RBPTR DC    X'80',AL3(S99RB)   THE POINTER TO THE MESS..      MSS2.0
*                                                                MSS2.0
S99RB    DC    FL1'20'            LENGTH OF RB IN BYTES = 20     MSS2.0
         DC    XL1'01'            VERB CODE=X'01'..ALLOC BY DSN  MSS2.0
         DC    AL2(0)             FLAGS1..NO OPTIONS             MSS2.0
S99ERC   DC    XL2'0000'          ERROR CODE                     MSS2.0
S99INFO  DC    XL2'0000'          INFO CODE                      MSS2.0
         DC    AL4(S99TXPTR)      ADDRESS OF TEXT UNITS          MSS2.0
         DC    XL4'00'            RESERVED                       MSS2.0
         DC    XL4'00'            FLAGS2                         MSS2.0
         SPACE 1
S99TXPTR DC    AL4(DDTU)          ADDR OF DDNAME TEXT UNIT       MSS2.0
         DC    AL4(VOLTU)         ADDR OF VOLSER TEXT UNIT       MSS2.0
         DC    AL4(UNITTU)        ADDR OF UNIT NAME TEXT UNIT    MSS2.0
         DC    X'80',AL3(DISPTU)  ADDR OF DISP TEXT UNIT (LAST)  MSS2.0
         SPACE 1
DDTU     DC    X'0001',X'0001',FL2'7',C'ALLOCDD' DDNAME          MSS2.0
VOLTU    DC    X'0010',X'0001',FL2'6'                            MSS2.0
MSSVOL   DC    CL6' '                            MSS VOLUME SER  MSS2.0
UNITTU   DC    X'0015',X'0001',FL2'5',C'3330V'   MSS UNIT TYPE   MSS2.0
DISPTU   DC    X'0004',X'0001',FL2'1',X'01'      OLD             MSS2.0
         SPACE 2
*.....................................................................*
*.       DYNAMIC ALLOCATION REQUEST BLOCK TO FREE DDNAME ALLOCDD     .*
*.....................................................................*
         SPACE 2
         DS    0F                  GET FULLWORD BOUNDARY         MSS2.0
FREEPTR  DC    X'80',AL3(FREERB)   THE POINTER TO THE MESS..     MSS2.0
*                                                                MSS2.0
FREERB   DC    FL1'20'            LENGTH OF RB IN BYTES = 20     MSS2.0
         DC    XL1'02'            VERB CODE=X'02'..FREE BY DDN   MSS2.0
         DC    AL2(0)             FLAGS1..NO OPTIONS             MSS2.0
FREERC   DC    XL2'0000'          ERROR CODE                     MSS2.0
FREEINFO DC    XL2'0000'          INFO CODE                      MSS2.0
         DC    AL4(FREETXPT)      ADDRESS OF TEXT UNITS          MSS2.0
         DC    XL4'00'            RESERVED                       MSS2.0
         DC    XL4'00'            FLAGS2                         MSS2.0
         SPACE 1
FREETXPT DC    AL4(FDDNTU)        ADDR OF DSN TEXT UNIT          MSS2.0
         DC    X'80',AL3(UNALCTU) ADDR OF UNALLOC TEXT TU(LAST)  MSS2.0
         SPACE 1
FDDNTU   DC    X'0001',X'0001',FL2'7',C'ALLOCDD'  DDNAME         MSS2.0
UNALCTU  DC    X'0007',X'0000'        UNALLOC EVEN IF PERM ALLOC MSS2.0
         EJECT
*.....................................................................*
*.       VARIABLES                                                   .*
*.....................................................................*
         SPACE 3
DOUBLE   DC    D'0'               DOUBLE WORD WORK AREA          MSS2.0
SAVE     DC    18F'0'
SAVEVOL  DC    CL6' '             SAVE FOR CURRENT MSS VOLUME    MSS2.0
AB       DC    CL44' '
LOCAREA  DS    0D
         DC    265C' '
         EJECT
*.....................................................................*
*.       CONSTANTS                                                   .*
*.....................................................................*
         SPACE 3
SORTACON DC    A(SORTEDTB)
BASE2    DC    A(INITIAL+4096)
HEXTAB   DC    C'0123456789ABCDEF'                               MSS2.0
HEXMASK  DC    X'0F0F0F0F0F0F0F0F'                               MSS2.0
T3330V   DC    XL4'30582009'       UCB TYPE FOR 3330V            MSS2.1
TSYSDAV  DC    XL4'00042000'       UCB TYPE FOR SYSDAV           MSS2.1
VOLPREFX DC    CL2'MS'             VOLUME PREFIX FOR MASS STORE  MSS2.1
         DC    CL4'  '             SPARE SPACE TO SPZAP VOLSER   MSS2.1
WORKPRFX DC    CL4'WORK'           WORK VOLUMES FOR BILL WILLIAMSMSS2.2
         EJECT
*.....................................................................*
*.       LITERAL POOL                                                .*
*.....................................................................*
         SPACE 3
         LTORG
         EJECT
*.....................................................................*
*.       DCBS                                                        .*
*.....................................................................*
         SPACE 3
INPUT    DCB   DDNAME=SYSIN,DSORG=PS,MACRF=(GM),                       X
               LRECL=80,EODAD=NOMO
         SPACE 3
*
OUTPUT   DCB   DDNAME=SYSPRINT,DSORG=PS,MACRF=(PM),                    X
               RECFM=FM,LRECL=132,BLKSIZE=132
         EJECT
*.....................................................................*
*.       CAMLSTS FOR LOCATE/SCRATCH/UNCATLG                          .*
*.....................................................................*
         SPACE 3
INDAB    CAMLST NAME,AB,,LOCAREA            LOCATE DSNAME IN CATALOG
         SPACE 2
REMOVE   CAMLST UNCAT,AB                    UNCATLG DSNAME
         SPACE 2
DELAB    CAMLST SCRATCH,AB,,VOLIST,,OVRD    SCRATCH DSNAME
         EJECT
*.....................................................................*
*.       MESSAGES                                                    .*
*.....................................................................*
         SPACE 3
CTL      DC    X'09'                   PRINT AND SPACE 1
BUFFER   DC    CL132' '
         ORG   BUFFER+46
ACTION   DC    CL86' '
ENDER    DC    CL4' '
*
SKIP     DC    X'89'                   PRINT AND SKIP TO CHAN 1
BLANKS   DC    CL132' '
*
TITLE1   DC    X'11'
         DC    CL132'NTL UNCATALOG SCRATCH  ----  DELETDS  VER 3.0 (NTLX
                MODS)'                                           NTL3.0
*
TITLE2   DC    X'11'                   PRINT AND SPACE 2
         DC    CL46'DATASET NAME'
         DC    CL86'ACTION TAKEN'
*
MSG1     DC    X'09'                   PRINT AND SPACE 1
         DC    CL132'MAXIMUM INPUT -- 20 NAMES REACHED'
*
MSG2     DC    CL44' '
         DC    CL88'  CANNOT BE LOCATED'
*
MSG3     DC    CL44' '
         DC    CL37'  UNCATALOGED BUT NOT SCRATCHED FROM  '
MSG3VOL  DC    CL8' '
MSG3RSON DC    CL44' '
*
MSG4     DC    CL44' '
         DC    CL33'  UNCATALOGED AND SCRATCHED FROM '
MVOL     DC    CL55' '
*
MSG5     DC    CL44' '
         DC    CL29' NOT UNCATALOGED OR SCRATCHED'
         DC    CL14' '
         DC    CL23'- UNCATALOG ERROR CODE '
MSG5CODE DC    CL2'XX'
         DC    CL20' '
*
M99MSG   DS    0CL133                                            MSS2.0
         DS    X'09'                     PRINT 1 SPACE           MSS2.0
         DC    C'***  DYNAM ALLOCATION OF VOL '                  MSS2.0
M99VOL   DC    CL6' '                                            MSS2.0
         DC    C' FAILED: R15= '                                 MSS2.0
M99RC    DC    CL4' '                                            MSS2.0
         DC    C' , INFO= '                                      MSS2.0
M99INFO  DC    CL4' '                                            MSS2.0
         DC    C'  DARC= '                                       MSS2.0
M99ERC   DC    CL4' ' 79 CHARS TO HERE                           MSS2.0
         DC    CL54' - PLEASE NOTIFY SOFTWARE ***'               MSS2.0
*                                                                MSS2.0
         DS    0H
VOLIST   DC    20CL12' '
NAMES    DC    100CL54' '
SORTEDTB DC    100CL54' '
         EJECT
*.....................................................................*
*.       REGISTER EQUATES                                            .*
*.....................................................................*
         SPACE 3
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         END
