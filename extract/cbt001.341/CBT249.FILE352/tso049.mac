        /* DATA SET TSO049     AT LEVEL 001 AS OF 01/23/81    */
 /* PROGRAM : TSO049                                                 */
 /*                                                                  */
 /*  PURPOSE:  TO ENCIPHER OR DECIPHER A DATASET BY USING THE NBS    */
 /*            ALGORITHM (R050A90).                                  */
 /*                                                                  */
 /*  JCL:   //STEP   EXEC   PGM=TSO049,PARM='OPERATION,KEY'          */
 /*         //DATASET DD    DSN=DSN.TO.BE.WORKED.ON,DISP=OLD         */
 /*         //SYSPRINT DD   SYSOUT=*                                 */
 /*                                                                  */
 /*  THE KEY IS A 1 TO 8 BYTE KEY FOR THE OPERATION                  */
 /*  OPERATION IS 'E' FOR ENCIPHER OR 'D' FOR DECIPHER               */
 /*                                                                  */
 /*  K TRUE   22 JAN 81   V1M0                                       */
 /*                                                                  */
 TSO049: PROC (PARAM) OPTIONS(MAIN) REORDER;

   DCL DATASET  FILE   RECORD  SEQUENTIAL ENV(CONSECUTIVE);
   DCL SYSPRINT FILE   PRINT;

   DCL PARAM    CHAR(100) VAR;
   DCL PARM1    CHAR(1) INIT(''),
       PARM2    CHAR(8) INIT(''),
       PARM3    CHAR(8) INIT('');

   DCL RECIN    CHAR(255) VAR INIT('');
   DCL WORKREC  CHAR(255) INIT('');
   DCL KEY      CHAR(8)   INIT('');
   DCL OP  CHAR(12)  VAR INIT('');

   DCL RECLEN   FIXED BIN(31,0) INIT(0);
   DCL WORKLEN  FIXED BIN(31,0) INIT(0);
   DCL RECCNT   FIXED BIN(31,0) INIT(0);
   DCL SKIPCNT  FIXED BIN(31,0) INIT(0);
   DCL (I,J,K)  FIXED BIN(15,0) INIT(0);

   DCL ENDFILE  BIT(1)  INIT('0'B);
   DCL ENCIPHER BIT(1)  INIT('1'B);

   DCL SETKEY   EXTERNAL ENTRY OPTIONS(ASSEMBLER,INTER);
   DCL ENCIPH   EXTERNAL ENTRY OPTIONS(ASSEMBLER,INTER);
   DCL DECIPH   EXTERNAL ENTRY OPTIONS(ASSEMBLER,INTER);

   DCL (LENGTH,SUBSTR,VERIFY,INDEX)  BUILTIN;


1  ON ENDFILE(DATASET) ENDFILE = '1'B;

   CALL SETUP;

   OPEN FILE(DATASET) UPDATE;
   READ FILE(DATASET) INTO(RECIN);

  /*  MAIN LOOP */

   DO WHILE(^ENDFILE);
      RECCNT  = RECCNT + 1;         /*  BUMP RECORD COUNT        */
      IF RECCNT > SKIPCNT THEN
        DO;
          WORKREC = '';             /*  CLEAR OUT WORK AREA      */
          WORKREC = RECIN;          /*  MOVE RECORD TO WORK AREA */
          RECLEN = LENGTH(RECIN);   /*  SAVE LENGTH OF RECORD TOO*/
          WORKLEN = RECLEN/8 * 8;   /*  ENSURE AT LEAST 8 BYTES  */

          IF ENCIPHER THEN CALL ENCIPH(WORKREC,WORKLEN);
                      ELSE CALL DECIPH(WORKREC,WORKLEN);

          RECIN = SUBSTR(WORKREC,1,RECLEN); /* PUT RECORD BACK  */
        END;

      REWRITE FILE(DATASET) FROM(RECIN);
      READ FILE(DATASET) INTO(RECIN);
  END;

  CLOSE FILE(DATASET);
  PUT FILE(SYSPRINT) SKIP EDIT
     (OP,' OPERATION COMPLETED')       (A,A);
  PUT FILE(SYSPRINT) SKIP EDIT
     (RECCNT,' RECORDS PROCESSED')     (P'ZZ,ZZZ,ZZ9',A);

  IF SKIPCNT > 0 THEN
    PUT FILE(SYSPRINT) SKIP EDIT
     (SKIPCNT,' RECORDS SKIPPED')      (P'ZZ,ZZZ,ZZ9',A);

1/*     SUBROUTINE: SETUP                                  */
 /* EXTRACT PARM INFORMATION AND SETUP FOR PROCESSING      */

 SETUP: PROC;

                              /*                                    */
                              /*        GET PARM1 &                 */
                              /* PARM2 & PARM3 FROM EXEC PARAM      */
                              /*                                    */
    J=LENGTH(PARAM);
    IF J > 0 THEN I=INDEX(PARAM,',');
    IF I=0 × J=0
       THEN DO;
          PARM1,PARM2,PARM3= '';
       END;
       ELSE DO;
          PARM1=SUBSTR(PARAM,1,I-1);
          I=I+1;
          K=INDEX(SUBSTR(PARAM,I),',');
          IF K=0 × J = I
             THEN DO;
                PARM2,PARM3= '';
             END;
             ELSE DO;
                IF K = 0 THEN K = J + 1;
                PARM2=SUBSTR(PARAM,I,K-1);
                I=I+K;
                IF I <= J
                   THEN PARM3=SUBSTR(PARAM,I);
             END;
       END;

    IF PARM1 = 'E'  THEN ENCIPHER = '1'B;
                    ELSE ENCIPHER = '0'B;
    IF ENCIPHER THEN OP = 'ENCIPHER';
                ELSE OP = 'DECIPHER';

    KEY = PARM2;

    IF PARM3 ^= '       ' THEN /* SKIP NUMBER OF RECORDS         */
      DO;
        K = VERIFY(PARM3,'01234567890 ');
        IF K = 0 THEN
          DO;
            SKIPCNT = PARM3;
          END;
      END;
    PUT FILE(SYSPRINT) SKIP EDIT
      (OP,' USING KEY=''',KEY,''' BEGINS')
      (A,A,A,A);

    CALL SETKEY(KEY);
    RETURN;
 END;
 END TSO049;
