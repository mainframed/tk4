*          DATA SET S051B12    AT LEVEL 007 AS OF 01/04/78
*          DATA SET S051B12    AT LEVEL 006 AS OF 03/08/77
P051B12 TITLE 'DSPACE COMMAND FOR TSO/STC  VERSION 1.2'
P051B12 CSECT
*
* THIS IS THE DSPACE COMMAND FOR TSO    OS/VS2 R3.
*
* THE COMMAND WILL DISPLAY THE SPACE AVAILABLE ON ANY OR ALL MOUNTED
*  DASD VOLUMES (VIA SVC 78).  THE COMMAND SYNTAX IS:
*
*   DSPACE (VOLSER-LIST)
*
* WHERE  'VOLSER-LIST' IS A LIST OF COMPLETE OR PARTIAL VOLUME SERIAL
*       NUMBERS.  'VOLSER-LIST' MAY BE OMMITTED, IN WHICH CASE, THE
*       ONLINE DASD VOLUMES FOR TSO ARE EXAMINED. (FCITSN).  THE
*       KEYWORD ALL AS THE VOLSER-LIST WILL DISPLAY ALL MOUNTED
*       DASD VOLUMES.
*
*
* ADAPTED FROM MICHIGAN MODS 'USPACE' COMMAND FROM UNITED AIR LINES
*       TSO MODS 3-75  BY KEN TRUE  MAY76
*
*  ALSO BAGGED OBTAIN CODE FROM U.C.L.A  URLISTVO COMMAND FROM THE
*       SAME MISHMODS TAPE.  KT JUNE76.
*
*  BAGGED SORT UCB ADDRESS CODE FROM MISHMODS DDASD COMMAND
*                            KT 13JULY76
*
*  INSTALLED OPERMODS CODE TO ALLOW OPERATION AS STC OR TSO CMD
*                            KT  3JAN78
*
*
         STM   R14,R12,D12(R13)         SAVE REGISTERS
         LR    R12,R15                  PROGRAM BASE
         USING P051B12,R12              PROGRAM ADDRESSABILITY
         LR    R2,R1                    SAVE PARM POINTER
         GETMAIN R,LV=CORENEED          OBTAIN DYNAMIC CORE
         ST    R13,D4(R1)               CHAIN
         ST    R1,D8(R13)                SAVE
         LR    R13,R1                     AREAS
         LR    R11,R13                  CORE ADDR.
         USING CORE,R11
         LOAD  EP=DEVNAMET        LOAD DEVICE NAME TABLE
         ST    R0,DEVADDR         ...AND SAVE ITS ADDRESS
         MVC   EXTRACT1(EXTRACTL),EXTRACT MOVE IN EXTRACT LIST FORM
         LA    R1,ANSWER          LOAD ADDR OF ANSWER
         ST    R1,EXTRACT1          AND SAVE IT IN THE MACRO
         EXTRACT MF=(E,EXTRACT1)
         L     R1,ANSWER            (R1)=ADDR OF TSO FLAG FROM EXTRACT
         MVC   TSOFLAG,0(R1)        MOVE IN THE ANSWER TO OUR FLAG
         SPACE
         MVI   SW1,X'00'                INIT PRINT HDR SWITCH
         LR    R1,R2                    CPPL OR PARM PTR(BATCH)
         LA    R3,PPLAREA               PPL ADDR.
         USING PPL,R3                   PPL ADDRESSABILITY
TSTSETUP TM    TSOFLAG,X'80'        IS IT TSO?
         BO    SETUPTSO             YES-> SETUP FOR PARSE
*                                   NO -> INIT PPL WITH DMY TSO CB
SETUPSTC XC    DMYUPT,DMYUPT        CLEAR OUT OUR UPT
         LA    R1,DMYUPT            LOAD ADDR OF OUR UPT
         ST    R1,PPLUPT            SAVE ADDRESS
         USING UPT,R1
         MVI   UPTSWS,UPTNPRM+UPTMID+UPTWTP
         DROP  R1
         XC    DMYECT,DMYECT        CLEAR OUT OUR ECT
         LA    R1,DMYECT            LOAD ADDR OF OUR ECT
         ST    R1,PPLECT            SAVE ADDRESS
         USING ECT,R1
         MVC   ECTPCMD,=CL8'DSPACE'
         MVC   ECTSCMD,=CL8' '
         DROP  R1
         MVI   DMYCMD,C' '
         MVC   DMYCMD+1(L'DMYCMD-1),DMYCMD
         XC    DMYCMD(4),DMYCMD
         LA    R1,DMYCMD            LOAD ADDR OF OUT CMD BUFF
         ST    R1,PPLCBUF           AND SAVE ADDR IN PPL
         L     R2,0(R2)             (R2) = PTR TO PARM FIELD
         LH    R1,0(R2)             (R1) = LENGTH OF PARM FIELD
         LTR   R1,R1                ANYONE HOME?
         BZ    GENPPL                NO-> FINISH UP
         BCTR  R1,0                 COMPUTE MACHINE LENGTH
         EX    R1,MOVECMD           MOVE COMMAND IN
         AH    R1,=H'4'             SAY CMD IS LONGER BY 3
         STH   R1,DMYCMD            SAVE LENGTH OF CMD FOR PARSE
         B     GENPPL
MOVECMD  MVC   DMYCMD+4(*-*),2(R2)  EXECUTED CMD -
SETUPTSO DS    0H
         USING CPPL,R1                  CPPL ADDRESS
         MVC   PPLUPT,CPPLUPT           COPY UPT ADDR.
         MVC   PPLECT,CPPLECT           COPY ECT ADDR.
         MVC   PPLCBUF,CPPLCBUF         COPY COMMAND BUFFER ADDR.
         DROP  R1
         EJECT
GENPPL   LA    R0,ECB                   ECB ADDR.
         ST    R0,PPLECB                COPY ECB ADDR.
         MVC   PPLPCL,PCL               COPY PCL ADDR.
         LA    R0,ANS                   ANSWER AREA ADDR.
         ST    R0,PPLANS                COPY ADDR.
         XC    PPLUWA,PPLUWA            ZERO UWA POINTER
         XC    ECB(D4),ECB              CLEAR ECB
         LA    R1,PPL                   PPL ADDR.
         DROP  R3
DOPARSE  CALLTSSR  EP=IKJPARS,MF=(E,(R1))     INVOKE PARSE (FAST!)
         SPACE 2
         LTR   R15,R15                  Q/PARSE FAILURE
         BNZ   PARSFAIL                 YES
         L     R6,ANS                   DSECT ADDR.
         USING IKJPARMD,R6              DSECT ADDRESSABILITY
         LA    R6,VOLUMES               ADDR OF VOLUME LIST
         DROP  R6                       KILL DSECT ADDRESSABILITY
         EJECT
VOLUME   MVI   VOL,BLANK                CLEAR VOL
         MVC   VOL+1(L'VOL-1),VOL       PROPAGATE
         L     R7,D0(R6)                VOLUME SER ADDR.
         LH    R8,D4(R6)                VOLUME SER LENGTH
         BCTR  R8,R0                    COMPUTE MACHINE LENGTH
         LR    R5,R8
         LA    R9,VOL                   VOLUME ADDR.
         EX    R8,MOVE                  MOVE VOLUME SER
         NI    SW1,NOTFOUND             SET NOTFOUND SW FOR GRIPE MSG
         CLC   VOL,ALLVOL               SEE IF ALL OPTION DESIRED
         BNE   STARTSCN                 NO -> SKIP CLEAR OF R6
         XR    R6,R6                    YES-> INDICATE BY CLEAR OF R6
         SPACE 2
STARTSCN L     R7,CVTPTR                CVT ADDR.
         USING CVT,R7                   CVT ADDRESSABILITY
         L     R7,CVTILK2               UCB LOOKUP TABLE ADDR.
         DROP  R7                       KILL CVT ADDRESSABILITY
         USING UCBSECT,R8               SET ADDRESSAB TO UCB.
         EJECT
         XC    LCT,LCT                  CLEAR COUNT
         MVC   LMAX(2),=H'1000'         SAY ROOM FOR 500 ENTRIES
CYCLE    LH    R8,D0(R7)                UCB ADDR.
         LTR   R8,R8                    TEST UCB STATUS
         BM    NOTMNTD                  END OF TABLE
         BZ    INDEX                    PAD ENTRY
         CLI   UCBID,UCBSTND            IS UCB STANDARD?
         BNE   INDEX                    NO, ERROR
         CLI   UCBTBYT3,UCB3DACC        IS IT DIRECT ACCESS?
         BNE   INDEX                    NO
         TM    UCBSTAT,UCBONLI          IS DEVICE ON-LINE NOW?
         BNO   INDEX                    NO
         SR    R4,R4
COMPLIST CH    R4,LCT                   SEE IF WEVE SEEN THIS ONE ?
         BNL   ADDLIST                  NOPE-> GO ADDIT
         CH    R8,LIST(R4)
         BE    INDEX
         LA    R4,2(R4)
         B     COMPLIST
ADDLIST  LH    R4,LCT
         CH    R4,LMAX
         BNL   FULL
         STH   R8,LIST(R4)
         LA    R4,2(R4)
         STH   R4,LCT
FULL     EQU   *
         LTR   R6,R6                    Q/ALL VOLUMES TO BE DISPLAYED
         BZ    DISPCHK                  YES
         EX    R5,COMP
         BNE   INDEX                    NO
         SPACE
DISPCHK  TM    SW1,HEADING              HAVE WE WRITTEN THE HEADER?
         BNO   WRTFMT                   ->NO..GO WRITE IT
         SPACE
DISPLAY  MVC   MSG,WTOMSG               CLEAR OUT MESSAGE
         MVC   MSGUNIT,UCBNAME          COPY UNIT ADDRESS
         MVC   MSGVOL,UCBVOLI           COPY VOLUME SERIAL NUMBER
*
         TM    UCBSTAB,UCBBPRV          IS VOL PRIVATE?
         BNO   DISP11
         MVC   MSGUSE,VOLPRIV
         B     DSTAT2
DISP11   TM    UCBSTAB,UCBBPUB          IS VOL PUBLIC?
         BNO   DISP12
         MVC   MSGUSE,VOLPUB
         B     DSTAT2
DISP12   TM    UCBSTAB,UCBBSTR          IS VOL STORAGE?
         BNO   DSTAT2
         MVC   MSGUSE,VOLSTG
         SPACE
DSTAT2   TM    UCBSTAT,UCBRESV          IS VOLUME RESERVED ?
         BNO   DISP21
         MVC   MSGSTAT,VOLRSVD
         B     DUSECNT
DISP21   TM    UCBSTAT,UCBPRES          IS VOL PERM RESIDENT?
         BNO   DUSECNT
         MVC   MSGSTAT,VOLRESD
*
DUSECNT  XR    R10,R10                  CLEAR A REG
         IC    R10,UCBUSER              GET USE COUNT
         CVD   R10,DBLW                 CONVERT TO PRINT
         UNPK  MSGCNT,DBLW+6(2)         PLACE IT ON THE LINE
         OI    MSGCNT+2,CHARZERO        FIX SIGN BITS
         SPACE
* TYPE   XR    R10,R10                  ZERO THE REGISTER
*        IC    R10,UCBUNTYP             GET THE UNIT TYPE
*        SLA   R10,3                    MULT BY 8 FOR
*        LA    R10,UNITTYPE(R10)          ADDRESS IN TABLE
*        MVC   MSGUTYPE,0(R10)          MOVE UNIT TYPE TO PRINT LINE
***
***   USE SYSTEM DEVICE NAME TABLE
***
***
DUTYPE   L     R1,DEVADDR         ADDRESS OF DEVICE NAME TABLE
         L     R10,0(R1)          NUMBER OF ENTRIES
         LA    R1,4(R1)           ADDRESS OF FIRST ENTRY
DEVLP    CLC   UCBTYP,8(R1)       IS THIS THE DEVICE TYPE
         BE    DEVFND             YES... BR TO SAVE DEVICE TYPE
         LA    R1,12(R1)          NO... INCR TO NEXT TABLE ENTRY
         BCT   R10,DEVLP          LOOP UNTIL END OF TABLE
         MVC   MSGUTYPE,=C'????'  SAY WE DONT KNOW DEVICE TYPE
         B     NODEVFND
*
DEVFND   MVC   MSGUTYPE,0(R1)           MOVE UNIT TYPE TO PRINT LINE
*
NODEVFND TM    UCBSTAT,UCBCHGS          DEVICE CHANGING TO OFF-LINE?
         BZ    DOSVC78                  NO DO THE MAGIC SVC
         MVC   MSGERR,MSGVARY           YES, INDICATE VARY IN EFFECT
         B     DOPUT                     AND GO POKE IT
         SPACE
DOSVC78  SR    R15,R15
         SPACE
         LR    R0,R8                    COPY UCB ADDR.
         LA    R1,SVC78                 MESSAGE AREA ADDR.
         SVC   78                       ISSUE LSPACE SVC
         SPACE 1
TESTSVC  LTR   R15,R15                  ANY SPACE ERROR?
         BZ    MOVESTUF                 NO-> MOVE FIELDS FROM SVC78
         MVC   MSGERR,SVC78ERR          MOVE SVC78'S GRIPE
         B     DOPUT                    GO PUT MSG TO USER
         SPACE
MOVESTUF MVC   MSGEXTS,SVC78EXT         MOVE # EXTENTS AVAIL
         MVC   MSGFCYL,SVC78FCY         MOVE # FREE CYLS
         MVC   MSGFTRK,SVC78FTR         MOVE # FREE TRACKS
         MVC   MSGCCYL,SVC78CCY         MOVE # CONTIG CYL MAX
         MVC   MSGCTRK,SVC78CTR         MOVE # CONTIG TRK MAX
*
         EJECT
*        NOW FIND THE NUMBER OF DSCBS LEFT (FMT0 COUNT)
         SPACE 1
GETDSCBS MVC   CAML(4),=AL1(192,128,0,0) MOVE IN OPTIONS
         MVC   CAMV(6),UCBVOLI          VOLUME NAME
         LA    R0,CAMA                  CCHHR
         LA    R1,CAMV                  VOLUME LIST
         LA    R2,CAMW                  WORKAREA
         STM   R0,R2,CAML+4             SET UP CAMLIST
         XC    CAMW(60),CAMW            CLEAR DEB
         MVI   CAMW+16,X'01'            1 EXTENT
         MVI   CAMW+28,X'04'            16 BYTES PER
         ST    R8,CAMW+32               UCB ADDR TO EXTENT
         MVC   CAMW+42(6),=X'FFFFFFFF7FFF' WHOLE PACK
         STM   R0,R15,CAMW+60           SAVE REGS
         LA    R4,CAMW+60               POINT TO REGS
         LA    R1,CAMW                  DEB LOCATION
         MVC   CAMW(4),UCBVTOC          ALIGN
         L     R0,CAMW                  TTR0
         LR    R2,R1                    MBBCCHHR
         L     R15,CVTPTR               POINT TO CVT
         L     R15,CVTPCNVT-CVT(R15)    TTR CONVERT
         BALR  R14,R15                  GO CONVERT IT
         LM    R0,R14,0(R4)             RESTORE REGS
CNVTTTR  LTR   R15,R15                  ERROR?
         BNZ   DOPUT                    IF SO DON'T SHOW HIM NOTHING
         MVC   CAMA(5),CAMW+3           CCHHR TO THING
OBTAINIT OBTAIN CAML                    GET FORMAT 4 DSCB
CHKOBT   LTR   R15,R15                  DID IT WORK?
         BNZ   DOPUT                    THEN GIVE UP
         LH    R1,CAMW+50               GET NUMBER OF FMT0S
         CVD   R1,DBLW                  CONVERT IT
         UNPK  MSGDSCBS,DBLW+5(3)       AND MOVE TO THE LINE
         OI    MSGDSCBS+4,CHARZERO      FIX SIGN
         EJECT
DOPUT    LA    R10,SCANSTRT             LOAD START OF LD ZERO SCAN
         LA    R1,SCANLEN               LOAD NUMB OF CHARS TO SCAN
         NI    SW1,NOSKIP               TURN OFF SKIP SWITCH
         SPACE
ZERLOOP  CLI   D0(R10),CHARZERO         IS IT A ZERO?
         BL    RSTSW                    CHAR < C'0' -> RESET SKIP
         BH    SETSW                    CHAR > C'0' -> SET SKIP SW
         TM    SW1,SKIP                 IS SKIP SWITCH SET
         BO    BUMPZLOP                 YES -> THEN SKIP THE POKE
         CLI   D1(R10),CHARZERO         HOW ABOUT THE NEXT CHAR?
         BL    BUMPZLOP                  DONT REMOVE LAST ZERO....
         MVI   D0(R10),BLANK            POKE A BLANK INSTEAD...
         B     BUMPZLOP                 GO INCREMENT
RSTSW    NI    SW1,NOSKIP               RESET THE SWITCH
         B     BUMPZLOP                 GO INCREMENT
SETSW    OI    SW1,SKIP                 SET THE SWITCH
BUMPZLOP LA    R10,D1(R10)              BUMP POINTER
         BCT   R1,ZERLOOP               LOOP UNTIL MSG SCANNED...
         SPACE 2
         LA    R1,MSG                   MESSAGE ADDR.
         BAL   LINKREG,PUTMSG           ISSUE MESSAGE
         OI    SW1,FOUND                SAY WE FOUND A VOL...
         SPACE
INDEX    LA    R7,D2(R7)                NEXT ENTRY ADDR.
         B     CYCLE                    CONTINUE
         EJECT
WRTFMT   LA    R1,FMTMSG1               WRITE HEADERS....
         BAL   LINKREG,PUTMSG           ISSUE MESSAGE
         LA    R1,FMTMSG2
         BAL   LINKREG,PUTMSG           ISSUE MESSAGE
         OI    SW1,HEADING              SAY WE WROTE THE HEADERS
         B     DISPLAY
         SPACE 2
NOTMNTD  LTR   R6,R6                    Q/DISPLAY OF ALL VOLUMES WANTED
         BZ    RLSE                     YES, END OF LIST
         TM    SW1,FOUND                DID WE FIND ONE?
         BO    NEXTPDE                  YEP->NO GRIPE..GET NEXT PDE
         MVC   MSG,WTOMSG               INIT MESSAGE AREA
         MVC   MSGNVOL,VMSG             MOVE MESSAGE
         MVC   MSGIVOL,VOL              INSERT VOLUME SERIAL NUMBER
         LA    R1,MSG                   MESSAGE ADDR.
         BAL   LINKREG,PUTMSG           ISSUE NOT FOUND MESSAGE
         SPACE 2
NEXTPDE  L     R6,D8(R6)                NEXT PDE ADDR.
         LA    R6,D0(R6)                CLEAR BYTE
         LTR   R6,R6                    Q/ANY PDE
         BNZ   VOLUME                   YES
         SPACE 2
RLSE     IKJRLSA ANS
         LR    R1,R11                   CORE ADDR.
         L     R13,D4(R13)
         EJECT
THEEND   FREEMAIN R,LV=CORENEED,A=(1)   FREE DYNAMIC CORE
         XC    D16(D4,R13),D16(R13)
         LM    R14,R12,D12(R13)
         XR    R15,R15                  SET RC=0
         BR    R14                      RETURN
         SPACE 2
PARSFAIL LA    R1,PARSMSG               ISSUE ERROR MESSAGE
         BAL   LINKREG,PUTMSG           ISSUE NOT FOUND MESSAGE
         B     RLSE
         EJECT
*.....................................................................*
*        LOCAL SUBROUTINE FOR IO TO OPER/USER                         *
*.....................................................................*
         SPACE
*
* ENTER WITH WTO,WTOR LIST FORM POINTED TO BY R1
*
*    BAL  LINKREG,PUTMSG    OR
*    BAL  LINKREG,PUTGET
*
*  USES R14 FOR WORK
*
LINKREG  EQU   10
*
PUTMSG   DS    0H
         TM    TSOFLAG,X'80'       IS IT TSO?
         BO    TPUTIT              YES-> GO DO TPUT
         SVC   35                  NO-> USE WTO
         BR    LINKREG
TPUTIT   DS    0H
         LH    R0,0(,R1)           GET LENGTH OF WTO MESSAGE
         S     R0,=F'4'            SUBTRACT OFF HEADER
         LA    R1,4(,R1)           BUMP MSG ADDRESS PAST HDR
         TPUT  (1),(0),R           DO THE TPUT
         BR    LINKREG
         SPACE 2
PUTGET   DS    0H
         TM    TSOFLAG,X'80'       IS IT TSO?
         BO    TSOIT               YES-> GO USE TGET
         LR    R14,R1              NO-> USE WTOR .. SAVE MSG ADDRESS
         SVC   35                  DO THE WTOR...
         L     R1,4(,R14)          GET ADDR OF ECB
         XC    0(4,R1),0(R1)       CLEAN OUT THE ECB....
         LA    R0,1
         SVC   1                   WAIT FOR WTOR TO COMPLETE
         B     PUTRET              RETURN
TSOIT    DS    0H
         LR    R14,R1              SAVE
         LH    R0,8(,R1)           PUT LENGTH
         S     R0,=F'4'
         LA    R1,12(,R1)          PAST HDR
         TPUT  (1),(0),R
         SR    R0,R0
         IC    R0,0(,R14)          GET REPLY LENGTH
         L     R1,0(,R14)          GET REPLY ADRS
         LA    R1,0(,R1)
         ICM   R1,B'1000',=X'80'   INDICATE TGET...
         TGET  (1),(0),R
PUTRET   DS    0H
         L     R1,0(,R14)          GET REPLY ADRS
         XR    R0,R0
         IC    R0,0(,R14)          GET REPLY LENGTH
UPPER    DS    0H
         OI    0(R1),C' '          UPPER CASE
         LA    R1,1(,R1)           NXT
         BCT   R0,UPPER
         BR    LINKREG
         SPACE 2
         EJECT
MOVE     MVC   D0(D0,R9),D0(R7)         EXECUTED INSTRUCTION
COMP     CLC   VOL(0),UCBVOLI           EXECUTED INSTRUCTION
PCL      DC    A(PARSECL)
ALLVOL   DC    CL6'ALL'
         EJECT
*.....................................................................*
*        LIST FORMS OF MACROS                                         *
*.....................................................................*
         SPACE 2
EXTRACT  EXTRACT *-*,'S',FIELDS=(TSO),MF=L
EXTRACTL EQU   *-EXTRACT
         SPACE 2
WTOMSG   WTO   '                                                       X
                                ',ROUTCDE=(11),MF=L
WTOMSGL  EQU   *-WTOMSG
PARSMSG  WTO   'DSPACE - PARSE FAILED',ROUTCDE=(11),MF=L
FMTMSG1  WTO   '            ..TOTAL AVAILABLE... .CONTIG.. USE UNIT    X
                 UNIT',ROUTCDE=(11),MF=L
FMTMSG2  WTO   'VOLUME UNIT DSCBS EXTS CYLS TRKS CYLS TRKS CNT STATUS  X
                 TYPE',ROUTCDE=(11),MF=L
         EJECT
VMSG     DC    CL31'NO VOLUME FOUND TO MATCH       '
MSGVARY  DC    CL23'VARY OFFLINE FOR VOLUME'
VOLPRIV  DC    CL4'PVT/'
VOLPUB   DC    CL4'PUB/'
VOLSTG   DC    CL4'STG/'
*
VOLRSVD  DC    CL5'RSVED'
VOLRESD  DC    CL5'RSDNT'
UNITTYPE DC    CL8'    '      00        UNIT TYPE TABLE
         DC    CL8'2311'      01
         DC    CL8'2301'      02
         DC    CL8'2303'      03
         DC    CL8'2302'      04
         DC    CL8'2321'      05
         DC    CL8'2305'      06
         DC    CL8'    '      07
         DC    CL8'2314'      08
         DC    CL8'3330'      09
         DC    CL8'    '      10 A
         DC    CL8'3350'      11 B
         DC    CL8'    '      12 C
         DC    CL8'3330-11'   13 D
         DC    CL8'    '      14 E
         DC    CL8'    '      15 F
         EJECT
*
* PROGRAM  E Q U A T E S
*
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
*
D0       EQU   0
D1       EQU   1
D2       EQU   2
D4       EQU   4
D8       EQU   8
D12      EQU   12
D16      EQU   16
*
BLANK    EQU   C' '
HEADING  EQU   X'01'
FOUND    EQU   X'02'
NOTFOUND EQU   X'FD'
SKIP     EQU   X'80'
NOSKIP   EQU   X'7F'
CHARZERO EQU   C'0'
         EJECT
         PRINT NOGEN
PARSECL  IKJPARM
VOLUMES  IKJIDENT 'VOL',LIST,                                          X
               MAXLNTH=6,FIRST=ALPHANUM,OTHER=ALPHANUM,                X
               HELP=('VOL SERS TO SCAN FOR SPACE AVAILABLE',           X
               'VOL MAY BE COMPLETE OR GENERIC VOLUME SERIAL #'),      X
               DEFAULT='FCITS '
         IKJENDP
         PRINT GEN
         EJECT
         IKJCPPL
         SPACE 2
         IKJPPL
PPLL     EQU   *-PPL
         EJECT
         IKJECT
         EJECT
         IKJUPT
         EJECT
CVT      DSECT
         CVT       SYS=VMS,TSO=YES
         EJECT
UCBSECT  DSECT
         IEFUCBOB
         EJECT
*
* DYNAMIC WORK AREA FOR PROGRAM
*
CORE     DSECT
         DS    18F
DEVADDR  DS    F
ANS      DS    F
ECB      DS    F
PPLAREA  DS    (PPLL/4)F
MSG      DS    CL84                     DCL    1 MSG CHAR(65)
MSGL     EQU   *-MSG
MSGEND   EQU   *
*
         ORG   MSG+4
MSGVOL   DS    CL6                               2 MSGVOL CHAR(6)
         DS    CL1                               2 *      CHAR(1)
MSGUNIT  DS    CL3                               2 MSGUNIT CHAR(3)
         DS    CL2
SCANSTRT EQU   *
MSGDSCBS DS    CL5
         DS    CL1
MSGEXTS  DS    CL4
         DS    CL1
MSGFCYL  DS    CL4
         DS    CL1
MSGFTRK  DS    CL4
         DS    CL1
MSGCCYL  DS    CL4
         DS    CL1
MSGCTRK  DS    CL4
         DS    CL1
MSGCNT   DS    CL3
         DS    CL1
MSGUSE   DS    CL4
SCANLEN  EQU   *-SCANSTRT
MSGSTAT  DS    CL5
         DS    CL1
MSGUTYPE DS    CL8
*
         ORG   MSG+4                    NEW OVERLAY FOR ERROR MESSAGE
MSGNVOL  DS    CL31
         ORG   MSG+29                     FOR NO VOLUME FOUND
MSGIVOL  DS    CL6
*
         ORG   MSG+22                   OVERLAY FOR LSPACE (SVC78)
MSGERR   DS    CL23                       GRIPE MESSAGES
         ORG
*
SVC78    DS    CL30                     SPACE FOR MSG FROM LSPACE SVC
SVC78END EQU   *
         ORG   SVC78+6                  SOME USEFUL OVERLAYS...
SVC78FCY DS    CL4                        FOR THE LSPACE SVC OUTPUT
         DS    CL1
SVC78FTR DS    CL4
         DS    CL1
SVC78EXT DS    CL4
         DS    CL1
SVC78CCY DS    CL4
         DS    CL1
SVC78CTR DS    CL4
         ORG   SVC78+7
SVC78ERR DS    CL23                     FOR GRIPE MESSAGES......
         ORG   SVC78END
VOL      DS    CL6                      TO SAVE THE TARGET FOR COMPARES
SW1      DS    1C
TSOFLAG  DS    X                   ='80' IF TSO. '00' IF NOT TSO
ANSWER   DS    F                   ADDRESS POINTER FOR EXTRACT
DBLW     DS    4D
         ORG   DBLW
EXTRACT1 DS    4D
CAM      DS    0D
CAML     DS    4F                       OBTAIN LIST
CAMA     DS    2F                       CCHHR
CAMV     DS    2F                       VOL NAME
         DS    0D
CAMW     DS    350C                     WORK AREA
         DS    0D
DMYECT   DS    XL60                     DUMMY ECT FOR BATCH
         DS    0D
DMYUPT   DS    CL24                     DUMMY UPT FOR BATCH
         DS    0D
DMYCMD   DS    CL124                    DUMMY COMMAND FOR BATCH
LCT      DS    H                        TO REMEMBER COUNT
LMAX     DS    H                        TO REMEMBER UCB MAX ADDR
LIST     DS    500H                     TO REMEMBER EACH UCB ADDR
CORENEED EQU   *-CORE
*
         END
