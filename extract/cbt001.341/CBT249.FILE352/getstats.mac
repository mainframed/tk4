*          DATA SET GETSTATS   AT LEVEL 003 AS OF 03/24/81
GETSTATS TITLE 'GETSTATS SUBROUTINE - GET SPACE,DSORG,DCB INFO ON DSN'
*---------------------------------------------------------------------*
* SUBROUTINE: GETSTATS                                                *
*                                                                     *
* PURPOSE:    GET SPACE/DSORG/DCB INFO FOR DASD DATASET IN PRINTABLE  *
*             FORMAT.                                                 *
*                                                                     *
* ENTER WITH: (R1) -> ×---------------×                               *
*                     ×00 × A(DSCB1)  ×   DSCB1 CL265 - FMT1 DSCB     *
*                     ×---------------×                               *
*                     ×00 × A(VOLUME) ×   VOLUME CL6  - VOLSER        *
*                     ×---------------×                               *
*                     ×00 × A(UNITYP) ×   UNITYP XL4  - UCB UNIT TYPE *
*                     ×---------------×                               *
*                     ×80 × A(MSGOUT) ×   MSGOUT CL80 - OUTPUT MESSAGE*
*                     ×---------------×                               *
*                                                                     *
* ON RETURN:, <MSGOUT> IS FILLED IN WITH FIELDS FROM DSCB.            *
*                                                                     *
* K TRUE    19 MAR 81 (LOTS STOLEN FROM 'GETATTR' AND 'LISTSPC'       *
*                      AND PDS COMMAND (TSO041))                      *
*---------------------------------------------------------------------*
         SPACE
GETSTATS START 0
         SAVE  (14,12),,GETSTATS-&SYSDATE-&SYSTIME
         LR    R12,R15        INIT BASE
         USING GETSTATS,R12
         LA    R15,SAVEAREA   SETUP
         ST    R13,4(R15)        AND
         ST    R15,8(R13)           CHAIN
         LR    R13,R15                  SAVE AREAS
         LR    R11,R1             SAVE PARM LIST POINTER
         SPACE
         L     R10,0(R11)         (R10)= ADDR OF DSCB1
         USING DSCB1,R10            AND ESTAB. ADDRESSABILITY
         MVC   DSCBAREA(255),0(R10) MVE CALLERS FMT1 TO WORK AREA
         MVC   DSCBAREA+255(10),255(R10)    MOVE IN REST....
*
* NOTE: R10 IS USED TO ADDRESS THE CALLERS FMT1 DSCB AREA, AND
* 'DSCBAREA' IS USED BY US AS A WORK ZONE FOR POSSIBLE OBTAIN
* OF A RELATED FMT2 OR FMT3 DSCB FOR EXTRA EXTENTS..THATS WHY THE
* DUAL ADDRESSING IS USED.
*
         EJECT
         L     R1,4(R11)          (R1)= ADDR OF VOLUME
         MVC   VOLUME,0(R1)        SAVE VOLUME TOO
         L     R1,8(R11)          (R1)= ADDR OF UNIT TYPE
         MVC   UCBTYP,0(R1)        SAVE UNIT TYPE
         MVC   MSG,MSGINIT         MOVE IN MESSAGE LEGENDS
         SPACE
         CLC   LASTVOL,VOLUME      HAVE WE SEEN THIS VOL BEFORE
         BE    OKVOL               YES -> SKIP F4 OBTAIN
         MVC   LASTVOL,VOLUME      NO->SETUP FOR OBTAIN OF F4DSCB
         OBTAIN F4CAM              GET THE FORMAT 4 DSCB
         SPACE
CHKOBT   LTR   R15,R15             DID IT WORK?
         BNZ   FCIERR1             NO -> GRIPE AND CONTINUE
         MVC   VOLTKCYL(2),F4DSCB+20 YES-> MOVE IN # TRKS/CYL
         MVC   F4BLKMAX(2),F4DSCB+22 MOVE IN MAX BLKSIZE PER TRACK
         SPACE
OKVOL    LH    R6,DSCBAREA+54      GET LAST RELATIVE TRK USED
         CLI   DSCBAREA+56,X'00'   IS TRK UNUSED?
         BE    *+8                  YES
         LA    R6,1(R6)             NO, ANOTHER TRACK
         STH   R6,LASTTRK          SAVE LAST REL. TRK
         EJECT
*---------------------------------------------------------------------*
*        DECODE DSORG                                                 *
*---------------------------------------------------------------------*
         SPACE 2
         TM    DSORG,X'80'          IS IT IS
         BZ    NIS                  NO
         MVC   MDSORG,=C'IS'        YES - MOVE IN IS
         B     GDSO                 BRANCH TO GOT DSORG
NIS      TM    DSORG,X'40'          IS IT PS
         BZ    NPS                   NO
         MVC   MDSORG,=C'PS'         YES-MOVE IN PS
         B     GDSO                 BRANCH TO GOT DSORG
NPS      TM    DSORG,X'20'          IS IT DA
         BZ    NDA                   NO
         MVC   MDSORG,=C'DA'         YES - MOVE IN DA
         B     GDSO                 BRANCH TO GOT DSORG
NDA      TM    DSORG,X'02'          IS IT PO
         BZ    GDSO                  NO
         MVC   MDSORG,=C'PO'         YES - MOVE IN PO
GDSO     TM    DSORG,X'01'          IS IT UNMOVEABLE
         BZ    GDSO1                 NO
         MVI   MDSORGU,C'U'          YES
GDSO1    TM    DSORG+1,X'08'        IS IT VSAM?
         BZ    GDSO1A                NO
         MVC   MDSORG,=C'VS'         YES
         EJECT
*---------------------------------------------------------------------*
*        ACCUMULATE TRACKS USED IN DS- MAYBE OBTAIN FMT2/FMT3 DSCB TOO*
*---------------------------------------------------------------------*
         SPACE 2
GDSO1A   SR    R2,R2                ZERO REG 2
         IC    R2,DSCBAREA+15       PICK UP NUMBER OF EXTENTS
         LA    R3,1                 SET EXTENT COUNTER
         SR    R4,R4                CLEAR R4 TO TRK ACCUMULATION
         LTR   R2,R2               NO XTNTS? - GDG PATTERN. DSCB
         BZ    ENDEXTNT             YES, BYPASS ACCUMULATE
         LA    R5,DSCBAREA+61       POINT TO FIRST EXTENT
         SPACE
VXTLOOP  MVC   HWK1(2),6(R5)        MOVE HI-CYL TO HWD
         LH    R0,HWK1              LOAD
         MVC   HWK1(2),8(R5)        MOVE HI-TRK TO HWD
         LH    R1,HWK1              LOAD
         MVC   HWK1(2),2(R5)        MOVE LOW-CYL TO HWD
         SH    R0,HWK1              SUBTRACT
         MVC   HWK1(2),4(R5)        MOVE LOW-TRK TO HWD
         SH    R1,HWK1              SUBTRACT
         MH    R0,VOLTKCYL          CONVERT CYL TO TRK
         AR    R1,R0                GET TOTAL MINUS1
         LA    R4,1(R1,R4)          GET TOTAL AND ACCUMULATE
         CR    R3,R2                DONE LAST EXTENT?
         BE    ENDEXTNT             GO TO ENDEXTNT IF SO
         LA    R3,1(R3)             BUMP TO EXTENT COUNTER
         CH    R3,=H'4'             FOURTH EXTENT?
         BE    VXT4                   BRANCH IF SO
         CH    R3,=H'8'             EIGHTTH EXTENT?
         BE    VXT8
         LA    R5,10(R5)            ELSE BUMP EXTENT POINTER
         B     VXTLOOP              AND GO TO NEXT EXTENT
         SPACE
VXT4     MVC   VTOCCHHR(5),DSCBAREA+91 POINT NEXT DSCH(F2 OR F3)
VXT4OBT  OBTAIN SEEKCAM
         SPACE
         CLI   DSCBAREA+44,C'3'     IF IT F3 DSCB
         BE    VXT4F3               BRANCH IF SO
         SPACE
         MVC   VTOCCHHR(5),DSCBAREA+135 ELSE ITS F2-POINT TO F3
         B     VXT4OBT
         SPACE
VXT4F3   LA    R5,DSCBAREA+4        POINT TO FIRST EXTENT IN F3
         B     VXTLOOP              CONTINUE LOOP FOR SIZE
VXT8     LA    R5,DSCBAREA+45       SKIP OVER F3 ID IN F3 DSCB
         B     VXTLOOP              CONTINUE LOOP FOR SIZE
         EJECT
*---------------------------------------------------------------------*
*        GOT TRKS ALLOC IN R4--SEE IF NEED TO DO CYLS/BLKS CALC       *
*---------------------------------------------------------------------*
         SPACE 2
ENDEXTNT EQU   *
         SPACE 1
         TM    DSORG,X'42'        IS IT PO OR PS
         BNZ   CVDU                  YES - BRANCH
         MVC   M#UNUSED,=CL8' '      BLANK OUT LEGEND
         B     TESTSALC             PROCEED TO SECOND ALLOC ROUTINE
CVDU     LH    R6,LASTTRK            GET LAST RELATIVE TRACK
         LR    R7,R4
         SR    R7,R6                 R7 CONTAINS UNUSED SPACE
         BP    CVDU1
         MVC   M#UNUSED,=CL8' '      BLANK OUT LEGEND
         B     TESTSALC             PROCEED TO SECOND ALLOC ROUTINE
CVDU1    CVD   R7,DBLEWORD          CONVERT DEC R7
         MVC   MUNUSED,MASKED         MOVE IN MASKED FIELD
         ED    MUNUSED,DBLEWORD+5     EDIT # TRKD UNUSED
         SPACE 1
TESTSALC TM    SECALLOC,DS1CYL     SEE IF TRK/OR BLK SPECED
         BZ    DOABS               NO..ONE OF THEM GIVEN..
         BNO   TRYTRK              SOMETHING THERE..BUT NOT CYL
         MVC   MSECTYPE(3),=C'CYL' MOVE IN CYL
         SRDL  R4,32               CLEAR R4..PUT CONTENTS IN R5
         D     R4,CYLPERTK         DIVIDE BY CYL/TRACK
         LR    R4,R5               GET QUOTENT IN R4 FOR LATER CVD
         B     DOSECQTY            GO DO THE EDIT
         SPACE
TRYTRK   TM    SECALLOC,DS1TRK     IS IT IN TRACKS?
         BNO   TRYBLK              NO-> TRY BLKS
         MVC   MSECTYPE(3),=C'TRK' INDICATE TRACKS
         B     DOSECQTY              AND GO EDIT THE QUANTITY
         SPACE
TRYBLK   TM    SECALLOC,DS1BLK     IS IT IN BLKS
         BNO   SECHUH              NO..SKIP THIS JAZZ
         LH    R7,BLKSIZE          GET THE REAL BLKSIZE
         CVD   R7,DBLEWORD         CONVERT TO PACKED
         MVC   MSECTYPE,MASKED     MOVE IN EDIT MASK
         ED    MSECTYPE,DBLEWORD+5  AND EDIT IN THE BLKSIZE
         LR    R0,R4               SAVE TRKS ALLOCATED
         ST    R7,DBLEWORD         SAVE BLKSIZE FOR LATER
         SR    R4,R4               PREPARE FOR DIVIDE
         L     R5,BLKMAX           GET DEVICE MAX BLKSIZE
         D     R4,DBLEWORD         MAX BLK BY OUR BLKSIZE=BLKS/TRK
         LR    R4,R5               CLEAR FOR MULTIPLY (R5=# BLKS/TRK)
         MR    R4,R0               AND MULTIPLY BY # TRKS
         LR    R4,R5               PUT ANSWER (BLKCOUNT) FOR LATER USE
         B     DOSECQTY              AND GO EDIT THE QUANTITY
         EJECT ,
*
*  FORMAT IS (ABSTR,(QTY,TRKLOC,DIR))
*     WE WILL LEAVE R4 WITH TRKS QTY, AND PLACE IN R7, THE
*     STARTING LOC
DOABS    MVC   MSECTYPE(5),=C'ABSTR' SAY ABSTRK
         MVC   HWK1(2),DS1EXT1+2    GET CC FROM FIRST EXTENT
         LH    R0,HWK1                 AND PUT INTO REG 0
         MVC   HWK1(2),DS1EXT1+4    GET TT FROM FIRST EXTENT
         LH    R7,HWK1                 AND GET INTO REG 1
         MH    R0,VOLTKCYL          MULT CYLS BY CYL/TRK FOR DEV
         AR    R7,R0                AND ADD IN REMAINING TRACKS
         B     DOSECQT2             GO PICK UP THE EDITS
         SPACE
SECHUH   MVC   MSECTYPE(5),=C'?TRK?' SAY WE DONT KNOW THE TYPE.
DOSECQTY XC    DBLEWORD(4),DBLEWORD CLEAR OUT AREA
         MVC   DBLEWORD+1(3),SECALLOC+1 MOVE IN QUANTITY
         L     R7,DBLEWORD         GET QTY IN REG AND
DOSECQT2 CVD   R7,DBLEWORD           CONVERT TO DECIMAL
         MVC   MSECALLC,MASKED1    MOVE IN EDIT MASK
         ED    MSECALLC,DBLEWORD+5   AND EDIT THE GOODIES
         B     CNVTPRIM
CNVTPRIM CVD   R4,DBLEWORD          CONVERT DEC. R4  #TRKS ALLOC
         MVC   MALLOC,MASKED         MOVE MASKED FIELD IN
         ED    MALLOC,DBLEWORD+5     EDIT  # TRKS MSG+5
         EJECT
*---------------------------------------------------------------------*
*        DECODE RECFM                                                 *
*---------------------------------------------------------------------*
         SPACE 1
DORECFM  LA    R7,MRECFM                POINT TO START OF RECFM AREA
TRECFM   CLI   RECFM,X'00'             ANY RECFM?
         BNE   TTUNDEF                 -> YES..CONTINUE
         MVI   0(R7),C'?'               SAY I DONT KNOW..
         B     TLRECL                  AND GO CHECK LRECL
TTUNDEF  TM    RECFM,X'C0'                                UNDEFINED?
         BNO   TTFIXED                                    NO
         MVI   0(R7),C'U'
         LA    R7,1(R7)
         B     TTTRKOV
TTFIXED  TM    RECFM,X'80'                                FIXED?
         BNO   TTVARIBL                                   NO
         MVI   0(R7),C'F'
         LA    R7,1(R7)
TTVARIBL TM    RECFM,X'40'                                VARIBLE
         BNO   TTTRKOV                                    NO
         MVI   0(R7),C'V'
         LA    R7,1(R7)
TTTRKOV  TM    RECFM,X'20'                                TRKOVERFLW?
         BNO   TTBLKED                                    NO
         MVI   0(R7),C'T'
         LA    R7,1(R7)
TTBLKED  TM    RECFM,X'10'                                BLOCKED?
         BNO   TTSTDBL                                    NO
         MVI   0(R7),C'B'
         LA    R7,1(R7)
TTSTDBL  TM    RECFM,X'08'                                STANDARD?
         BNO   TTASAPC                                    NO
         MVI   0(R7),C'S'
         LA    R7,1(R7)
TTASAPC  TM    RECFM,X'04'                                ASCI CAR CNT?
         BNO   TTMACHCC                                   NO
         MVI   0(R7),C'A'
         LA    R7,1(R7)
TTMACHCC TM    RECFM,X'02'                                MCHN CAR CNT?
         BNO   TLRECL                                     NO
         MVI   0(R7),C'M'
         EJECT
*---------------------------------------------------------------------*
*        DECODE LRECL, BLKSIZE                                        *
*---------------------------------------------------------------------*
         SPACE 2
TLRECL   CLC   LRECL(2),=XL2'0000'                    ANY LRECL?
         BNE   DOLRECL                                NO
         MVC   M#LRECL,=CL8' '                        BLANK OUT LEGEND
         B     TBLKSIZE
DOLRECL  SR    R7,R7                                      PICK
         LH    R7,LRECL                                    UP
         CVD   R7,DBLEWORD                                  LRECL
         MVC   MLRECL,MASKED                          MOVE IN PATTERN
         ED    MLRECL,DBLEWORD+5
         SPACE 1
TBLKSIZE CLC   BLKSIZE(2),=XL2'0000'                  ANY BLKSIZE?
         BE    TESTPROT                               NO
         SR    R7,R7                                      PICK
         LH    R7,BLKSIZE                                  UP
         CVD   R7,DBLEWORD                                  BLKSIZE
         MVC   MBLKSIZE,MASKED                        MOVE IN PATTERN
         ED    MBLKSIZE,DBLEWORD+5
         SPACE 2
*---------------------------------------------------------------------*
*        DECODE PROTECTION R/W, R/O OR RACF                           *
*---------------------------------------------------------------------*
         SPACE 2
TESTPROT TM    DS1IND,B'00010100'  TEST PROTECT BITS
         BZ    TESTRACF            NONE-> GO DO USAGE
         MVC   MPROTECT,=C'WPWD'   SAY WRITE PROTECTED
         BO    TESTRACF            THAT WAS IT
         MVC   MPROTECT,=C'R/W '   READ/WRITE PROTECTED
TESTRACF TM    DS1IND,B'01000000'  IS IT RACF PROTECTED?
         BZ    LASTPROT
         MVC   MPROTECT,=C'RACF'   YEP...SAY ITS RACF........
         B     CHKPDS
LASTPROT TM    DS1IND,B'01010100'  ANYTHING ABOUT PROTECTION HERE? FCI*
         BNZ   CHKPDS              YEP..SOMETHING THERE ALRIGHT    FCI*
NOPROT   MVC   M#PROT,=CL8'  '     BLANK OUT PROTECTION LEGEND
*
         B     CHKPDS
         EJECT
*---------------------------------------------------------------------*
*        PDS DIRECTORY BLOCK READ ROUTINE                             *
*---------------------------------------------------------------------*
         SPACE 2
CHKPDS   TM    DSORG,X'02'          IS IT A PDS
         BZ    COMPRESS             NO .. SKIP THE SONG AND DANCE
         BAL   R14,COUNTBLK         GO READ AND COUNT DIR BLKS
         SPACE 1
         LH    R1,TOTBLOCK          GET TOTAL BLOCKS ALLOCATED
         CVD   R1,DBLEWORD          CONVERT
         MVC   MDIRBLK,MASKED       MOVE IN MASK
         ED    MDIRBLK,DBLEWORD+5    AND GEN THE NUMBER
         MVI   M#DIRBLK,C','        MOVE IN THE SEPARATOR
         CH    R1,TOTUSED           COMPARE DIR BLK ALLOCED TO USED
         BE    COMPRESS             EQUAL..SPLIT
         LH    R1,TOTUSED           GET TOT DIR USED
         CVD   R1,DBLEWORD          CONVERT TO DECIMAL
         MVC   MDIRUSD,MASKED       MAKE IT
         ED    MDIRUSD,DBLEWORD+5       NICE AND PRETTY
         MVC   M#DIRUSD,=C',DU='
         B     COMPRESS             AND SPLIT
         EJECT
*---------------------------------------------------------------------*
*        CHKPDS OUT ALL BLANKS IN MSG BEFORE RETURNING TO CALLER      *
*---------------------------------------------------------------------*
         SPACE 2
COMPRESS LA    R1,MSG              (R1)= SOURCE STRING POINTER
         LA    R2,MSG2             (R2)= DESTINATION POINTER
         LA    R3,L'MSG             R3 = BCT LOOP COUNTER
         MVI   MSG2,C' '           BLANK OUT
         MVC   MSG2+1(L'MSG2-1),MSG2    MSG2  (DESTINATION)
CMPRSIT  CLI   0(R1),C' '          CURRENT SOURCE CHAR IS BLANK?
         BE    SKIPIT
         MVC   0(1,R2),0(R1)       MOVE ONE CHAR SOURCE-DEST
         LA    R2,1(R2)            BUMP DEST POINTER
SKIPIT   LA    R1,1(R1)            BUMP SOURCE POINTER
         BCT   R3,CMPRSIT          AND LOOP OVER CHAR COUNT
         SPACE 2
*---------------------------------------------------------------------*
*        RETURN TO CALLER                                             *
*---------------------------------------------------------------------*
         SPACE 2
RETURN   L     R15,RETCD
         L     R1,12(R11)        GET ADDRESS OF MESSAGE PARM
         MVC   0(80,R1),MSG2     MOVE OUR MESSAGE BACK
         L     R13,SAVEAREA+4 RESTORE SAVE AREA POINTER
         RETURN (14,12),RC=(15)  AND RETURN
         SPACE 2
*---------------------------------------------------------------------*
*        GRIPE ABOUT THE FMT4 ON THE VOLUME BEING UNOBTAINABLE        *
*---------------------------------------------------------------------*
         SPACE 2                                                   FCI*
FCIERR1  MVC   FMT4MSGV,VOLUME
         WTO   MF=(E,FMT4WTO)
         ABEND 106,DUMP
         EJECT
*---------------------------------------------------------------------*
*        READ PDS DIRECTORY AND COUNT BLOCKS USED AND ALLOCATED       *
*---------------------------------------------------------------------*
         SPACE 2
COUNTBLK ST    R14,R14SAVE
         MVC   DCBDDNAM-IHADCB+EXCPDCB+0(2),=C'DD'  SET UP DDNAME
         MVC   DCBDDNAM-IHADCB+EXCPDCB+2(6),VOLUME    TO USE
         OPEN  (EXCPDCB,INPUT)
         SPACE
         TM    EXCPDCB+48,X'10' DID DCB OPEN?
         BO    READDIR                  CONTINUE IF YES
         MVC   WTO#DDN,DCBDDNAM-IHADCB+EXCPDCB
         WTO   MF=(E,WTODIR)
         L     R14,R14SAVE
         BR    R14
         EJECT
*---------------------------------------------------------------------*
* DIRECTORY READ SUBROUTINE FROM PDS CMD (TSO041)                     *
*---------------------------------------------------------------------*
         SPACE 2
READDIR  NI    FLAGS,255-FDIREND      END OF DIRECTORY TO COME
         SR    R0,R0                    CLEAR DIRECTORY TOTALS
         STH   R0,TOTUSED
         STH   R0,TOTBLOCK
         STH   R0,TOTMEMR               TOTAL REAL MEMBERS
         STH   R0,TOTMEMA               TOTAL ALIASES
         SPACE
*
*        INITIALIZE DIRECTORY READ SUBROUTINE
*
         SPACE
         LA    R0,X'100'                TTR OF FIRST BLOCK
         L     R1,DCBDEBAD-IHADCB+EXCPDCB
         LA    R2,MBBCCHHR
         SPACE
         L     R15,CVT
         L     R15,CVTPCNVT(,R15)       TTR TO CCHHR CONVERT ROUTINE
         STM   14,12,SAVEREGS           SAVE REGISTERS
         LR    R3,R12
         BALR  R14,R15                  CONVERT TTR
         LR    R12,R3
         LM    14,12,SAVEREGS           RESTORE REGISTERS
         SPACE 2
         MVI   IOBFLAG,X'42'
         XC    CCWS(LCCWS),CCWS
         SPACE
         LA    R14,IOBSEEK              CREATE CHANNEL PGM TO READ
         LA    R15,CCWS                 DIRECTORY BLOCKS
         LA    R0,IOBSEEK
         LA    R1,DIRBLOCK
         SPACE
         ST    R14,CCWS                 ADDR FOR SEARCH CCW
         ST    R15,CCWS+8               ADDR FOR TIC CCW
         ST    R1,CCWS+16               ADDR FOR READ DATA
         ST    R0,CCWS+24               ADDR FOR READ COUNT CCW
         SPACE
         OC    CCWS(LDIRCCWS),DIRCCWS   MERGE IN REAL CCWS
         EJECT
*---------------------------------------------------------------------*
*        NOW READ THE DIRECTORY TO COUNT THE BLOCKS                   *
*---------------------------------------------------------------------*
         SPACE 2
READDIR1 DS    0H
         MVI   IOECB,0
         EXCP  IOB
         SPACE
         WAIT  ECB=IOECB
         MVI   DCBIFLGS-IHADCB+EXCPDCB,0 CLEAR STATUS FLAGS
         SPACE
         CLI   IOECB,X'42'              EXTENT VIOLATION?
         BNE   *+8                      NO
         BAL   R14,NEWEXTNT             YES, ADJUST FOR NEW EXTENT
         SPACE
         CLI   IOECB,X'7F'              SUCESSFUL COMPLETION?
         BE    READDIR2                 YES, DELOCK DIRECTORY
         SR    R15,R15
         TM    IOBCSW+3,X'01'           END OF FILE?
         BO    READDIR4                 YES, EXIT AT END OF DIRECTORY
         SPACE
         B     READDIR5                 EXIT AS IF LAST MEMBER
         SPACE 3
READDIR2 DS    0H
         LH    R14,TOTBLOCK             JUMP TOTAL DIRECTORY
         LA    R14,1(,R14)              BLOCK COUNTER
         STH   R14,TOTBLOCK
         SPACE
         TM    FLAGS,FDIREND           END OF DIRECTORY?
         BO    READDIR1
         SPACE
         LA    R15,DIRBLOCK
         LA    R0,2
         LH    R1,DIRBLOCK
         LA    R1,DIRBLOCK-1(R1)
         STM   R15,R1,DIRPTRS
         SPACE
         LH    R14,TOTUSED
         LA    R14,1(,R14)
         STH   R14,TOTUSED              COUNT USED BLOCK
         EJECT
*---------------------------------------------------------------------*
*        GOT A FRESH DIRECTORY BLOCK..COUNT THE MEMBERS AND ALIASES   *
*---------------------------------------------------------------------*
         SPACE 2
DEBLOCK  DS    0H
         LM    R15,R1,DIRPTRS
         BXH   R15,R0,READDIR1
         STM   R15,R1,DIRPTRS
         SPACE
         CLC   FF(8),0(R15)             LAST MEMBER?
         BE    READDIR3                 YES
         SPACE
         LA    R14,X'1F'
         IC    R0,11(,R15)
         NR    R0,R14
         AR    R0,R0
         LA    R14,12
         AR    R0,R14                   LENGTH OF CURRENT ENTRY
         STM   R15,R1,DIRPTRS           SAVE RESTART POINTERS
         SPACE
         MVC   DIRNAME(74),0(R15)       COPY ENTRY TO WORK AREA
         SPACE 2
         TM    11(R15),X'80'            ENTRY AN ALIAS?
         LA    R14,TOTMEMR              ASSUME NOT
         BZ    *+8                      NO, REAL MEMBER
         LA    R14,TOTMEMA              YES, ALIAS MEMBER
         SPACE
         LH    R15,0(,R14)
         LA    R15,1(,R15)
         STH   R15,0(,R14)
         SPACE 2
         B     DEBLOCK                  YES, CONTINUE THIS BLOCK
         SPACE 2
         LA    R15,8                    EXIT OFFSET
         B     READDIR4
         EJECT
*---------------------------------------------------------------------*
*        FINISHED WITH BLOCK OR DIRECTORY PREPARE TO SPLIT            *
*---------------------------------------------------------------------*
         SPACE 2
READDIR3 OI    FLAGS,FDIREND            END OF DIRECTORY
         B     READDIR1                 CONTINUE READ TO BITTER END
         SPACE
READDIR5 LA    R15,4                    LAST MEMBER EXIT OFFSET
         SPACE 2
READDIR4 CLOSE (EXCPDCB)
         SPACE 1
         L     R14,R14SAVE
         NI    FLAGS,255-FDIREND
         BR    R14
         SPACE 2
*---------------------------------------------------------------------*
*        END OF EXTENT REACHED ON EXCP READ OF DIR BLK..TRY ANOTHER   *
*---------------------------------------------------------------------*
         SPACE 2
NEWEXTNT SR    R0,R0
         SR    R15,R15
         L     R1,DCBDEBAD-IHADCB+EXCPDCB
         IC    R15,MBBCCHHR             CURRENT EXTENT #
         IC    R0,DEBXTNT#(R1)          # EXTENTS IN DATA SET
         LA    R15,1(,R15)              ONE MORE DONE
         CR    R15,R0                   CHECK FOR END OF DATA SET
         BCR   2,R14                    YES, EXIT
         STC   R15,MBBCCHHR             NO, SAVE NEW EXTENT COUNT
         MVI   IOBSEEK+4,X'01'
         SLL   R15,4                    COMPUTE EXTENT OFFSET
         AR    R1,R15                   IN DEB
         MVC   IOBSEEK(4),DEBEXTNT+6(R1)
         MVI   IOECB,X'7F'
         BR    R14
         EJECT
*---------------------------------------------------------------------*
*        CONSTANTS AND CAMLISTS FOR DASDM SERVICES                    *
*---------------------------------------------------------------------*
         SPACE 2
* CAMLST FOR DSCB3
SEEKCAM  CAMLST SEEK,VTOCCHHR,VOLUME,DSCBAREA
         SPACE 2
* CAMLST FOR FORMAT 4 DSCB
F4CAM    CAMLST SEARCH,F4NAME,LASTVOL,F4DSCB
         SPACE 2
F4NAME   DS   0CL44                 NAME OF F4 DSCB
         DC    44X'04'
MASKED   DC    XL6'402020202020'   MASK FIELD FOR EDIT
MASKED1  DC    XL6'402020202120'                  MASK FOR EDIT OP.
         SPACE 2
         PRINT NOGEN
EXCPDCB  DCB   DSORG=PO,DEVD=DA,DDNAME=X,MACRF=E
         PRINT GEN
DIRCCWS  DS    0D
         CCW   X'31',0,X'60',5
         CCW   X'08',0,X'60',1
         CCW   X'86',0,X'60',256
         CCW   X'92',0,X'20',5
LDIRCCWS EQU   *-DIRCCWS
         DS    0F
FF       DC    8X'FF'
         EJECT
*---------------------------------------------------------------------*
*        MESSAGES                                                     *
*---------------------------------------------------------------------*
         SPACE 2
FMT4WTO  WTO   'GETSTATS - UNABLE TO OBTAIN F4 DSCB FOR VOL XXXXXX',   X
               ROUTCDE=11,MF=L
FMT4MSGV EQU   FMT4WTO+48,6
         SPACE 2
WTODIR   WTO   'GETSTATS - UNABLE TO OPEN DDNAMEXX FOR READ OF DIRECTORX
               Y BLOCKS',ROUTCDE=11,MF=L
WTO#DDN  EQU   WTODIR+30,8
         EJECT
*---------------------------------------------------------------------*
*        WORK VARIABLES                                               *
*---------------------------------------------------------------------*
         SPACE 2
DBLEWORD DC    D'0'
HWK1     EQU   DBLEWORD,2
SAVEAREA DC    18F'0'
VOLDSCTK DC    H'0'                NUM DSCH ON A TRK
VOLF4CHR DC    XL5'00'             CCHHR OF DSCB
LASTTRK  DC    H'0'
RETCD    DC    F'0'
VOLUME   DC    CL6' '                 VOLUME SER
LASTVOL  DC    CL6' '
UCBTYP   DC    XL4'00'
CYLPERTK DC    F'30'
VOLTKCYL EQU   CYLPERTK+2,2        # TRKS/CYL         DEFAULT=3350
BLKMAX   DC    F'0'
F4BLKMAX EQU   BLKMAX+2,2          MAX TRACK LENGTH (BYTES)
VTOCCHHR DC    XL5'0'              TRACK ADDR WORK AREA
*
DSCBAREA DS    0D                   BUFFER FOR F1/F2/F3
         DS    265C
F4DSCB   DS    0D                   BUFFER FOR F4 OBTAIN
         DS    265C
         SPACE  ,
FLAGS    DC    H'0'
         SPACE
TOTBLOCK DS    H
TOTUSED  DS    H
TOTMEMR  DS    H
TOTMEMA  DS    H
         SPACE
CCWS     DS    6D
LCCWS    EQU   *-CCWS
         SPACE
IOECB    DC    F'0'
IOB      DS    0F
IOBFLAG  DC    X'42000000'
IOBECB   DC    A(IOECB)
         DC    X'00'
IOBCSW   DC    XL7'00'
IOBCCW   DC    A(CCWS)
IOBDCB   DC    A(EXCPDCB)
         DC    2F'0'
MBBCCHHR DC    XL3'00'
IOBSEEK  DC    XL5'00'
         DC    4F'0'
LIOB     EQU   *-IOB
         SPACE 1
DIRPTRS  DS    3F
DIRBLOCK DS    XL256
DIRNAME  DS    CL80
SAVEREGS DS    18F
R14SAVE  DS    F
         EJECT
*---------------------------------------------------------------------*
*        MESSAGE AREA MAPPING                                         *
*---------------------------------------------------------------------*
         SPACE 2
MSG      DC    CL100' '
MSG2     DC    CL100' '             ASSEMBLY FOR BLANK REMOVAL
         SPACE 2
*                   0....×....1....×....2....×....3....×....4....×....5
MSGINIT  DC   CL100'       --S=(      ,(      ,             )),R=    ,LX
               =      ,B=      ,      ,W=                '
*              ....×....6....×....7....×....8....×....9....×....
         SPACE 2
MDSORG   EQU   MSG+04,2
MDSORGU  EQU   MSG+06,1
MSECTYPE EQU   MSG+12,6            SEC ALLOC TYPE 'TRK' 'CYL' OR 'BLK'
MALLOC   EQU   MSG+20,6
MSECALLC EQU   MSG+27,6            EDIT SECONDARY ALLOCATION HERE
M#DIRBLK EQU   MSG+33,1
MDIRBLK  EQU   MSG+34,6            DIRECTORY BLOCKS
MRECFM   EQU   MSG+45,1            POKE RECFM HERE (A BYTE AT A TIME)
M#LRECL  EQU   MSG+49,3
MLRECL   EQU   MSG+52,6
MBLKSIZE EQU   MSG+61,6
M#PROT   EQU   MSG+67,3
MPROTECT EQU   MSG+70,4
M#UNUSED EQU   MSG+74,3
MUNUSED  EQU   MSG+77,6
M#DIRUSD EQU   MSG+83,4
MDIRUSD  EQU   MSG+87,6
         EJECT
*---------------------------------------------------------------------*
*        REGISTER EQUATES                                             *
*---------------------------------------------------------------------*
         SPACE 2
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         SPACE 2
CVT      EQU   16
CVTPCNVT EQU   28
         SPACE
FDIREND  EQU   X'80'
         SPACE
DEBXTNT# EQU   16             OFFSET IN DEB FOR # OF EXTENTS
DEBEXTNT EQU   32             OFFSET IN DEB FOR D.A. EXTENT ENTRY
DEBAMLNG EQU   16             SIZE OF DIRECT ACCESS EXTENT IN DEB
         EJECT
*---------------------------------------------------------------------*
*        DSCB1 MAPPING                                                *
*---------------------------------------------------------------------*
         SPACE 2
*  DSECT TO MAP FORMAT 1 DSCB WITH ASM2 MODS IN RESERVED FIELDS
DSCB1    DSECT
         DS    CL1                 FORMAT ID =C'1'
***      DS    CL6                 DATASET SERIAL NUMBER
USEYEAR  DS    CL1                 YEAR OF LAST USE
USEJDAY  DS    CL2                 JULIAN DAY OF LAST USE
MODYEAR  DS    CL1                 YEAR OF LAST MOD (AFTER ASM2 ONLY)
MODJDAY  DS    CL2                 JULIAN DAY OF LAST MOD (AFTER ASM2)
         DS    CL2                 VOL SEQ NUMBER
***      DS    CL3                 CREATE DATE FOR DATASET
GENYEAR  DS    CL1                   CREATE YEAR FOR DATASET
GENJDAY  DS    CL2                   CREATE JUL DAY FOR DATASET
***      DS    CL3                 EXPIRE DATE FOR DATASET
EXPYEAR  DS    CL1                   EXPIRE YEAR
EXPJDAY  DS    CL2                   EXPIRE JULIAN DATE
         DS    CL1                 NUMBER OF EXTENTS ON VOLUME
         DS    CL1                 NUMB OF BYTES USED IN LAST DIR BLK
         DS    CL1                 RESERVED
***      DS    CL13                SYSTEM CODE
WHOMOD   DS    CL8                 USERID/JOBNAME LAST MODIFIED
         DS    CL5                    JUNK...
***      DS    CL7                 MORE RESERVED
         DS    CL1
USECNT   DS    CL4                 # TIMES USED
MODTIME  DS    CL2                 HHMM OF LAST MOD (POST ASM2..)
DSORG    DS    CL2                 HERE BE THE DSORG ME HEARTIES...
RECFM    DS    CL1                  DITTO THE RECORD FORMAT
         DS    CL1                 OPTION CODE
BLKSIZE  DS    CL2                 BLOCK SIZE
LRECL    DS    CL2                 LOGICAL RECORD LENGTH
KEYLEN   DS    CL1                 KEYLENGTH
RELKP    DS    CL2                 RELATIVE KEY POSITION
DS1IND   DS    CL1                 DATASET INDICATORS
SECALLOC DS    CL4                 SECONDARY ALLOCATION
DS1LSTAR DS    XL3                 LAST USED TRACK AND BLOCK ON TRK
DS1TRBAL DS    XL2                 BYTES REMAINING ON LAST TRACK
         DS    XL2                 RESERVED
DS1EXT1  DS    CL10                EXTENT DESCRIPTOR # 1
DS1EXT2  DS    CL10                EXTENT DESCRIPTOR # 2
DS1EXT3  DS    CL10                EXTENT DESCRIPTOR # 3
DS1PTRDS DS    CL5                 PTR TO POSSIBLE FMT2 OR FMT3 DSCB
         SPACE 1
DS1CYL   EQU   X'C0'               CYL ALLOCATION
DS1TRK   EQU   X'80'               TRK ALLOCATION
DS1BLK   EQU   X'40'               BLK ALLOCATION
DS1CNTIG EQU   X'08'               CONTIGUOUS ALLOCATION
DS1MAXA  EQU   X'04'               MAX AVAILABLE ALLOCATION
DS15EXT  EQU   X'02'               FIVE EXTENTS MAX
DS1ROUND EQU   X'01'               ROUND
         EJECT
*---------------------------------------------------------------------*
*        DCB DSECT MAPPING                                            *
*---------------------------------------------------------------------*
         SPACE 2
         DCBD  DSORG=PO
         END
