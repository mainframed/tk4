*          DATA SET TSO036     AT LEVEL 003 AS OF 01/24/78
*          DATA SET TSO036     AT LEVEL 002 AS OF 01/16/78
TSO036   TITLE 'SHOWASM - DISPLAY ASM PAGE/SWAP DSN STATUS     '
*.....................................................................*
*                                                                     *
*   THIS IS THE SHOWASM COMMAND FOR TSO/STC USAGE                     *
*                                                                     *
*   THIS COMMAND WILL DISPLAY THE CURRENT AUX STORAGE MGR SLOT STATUS *
*     AND STATUS FOR ALL CURRENT PAGE AND SWAP DATASETS ON THE SYSTEM *
*                                                                     *
*                                                                     *
*  REQUIRES MACROS FROM SYS1.AMODGEN (CVT)                            *
*  RUNS UNDER TSO (FOR OPER PRIVLEDGE USER) OR AS STC.                *
*.....................................................................*
         SPACE 3
***********************************************************************
*        ACCUMULATE HALF
***********************************************************************
         MACRO
&L       ACH   &F
&L       LA    R1,1                INSERT 1
         AH    R1,&F               ADD ACCUMULATOR
         STH   R1,&F               SAVE ACCUMULATOR
         MEND
         SPACE 3
***********************************************************************
*        EDITING A 3 BYTES FIELD (VIA CEH)
***********************************************************************
         MACRO
&L       CEH3  &TO,&FROM
&L       CEH   TRAN,&FROM          USE CONVERT.                  V1M0G
         TM    TRAN,X'0F'          OVERFLOW ?
         BZ    *+14                NO
         MVC   &TO,XAST9           YES, MOVE OFLOW ID
         B     *+10                BRANCH OVER
         MVC   &TO,TRAN+1          INSERT TO TAREGET
         MEND
         SPACE 3
***********************************************************************
*        CONVERT AND EDIT HALF
***********************************************************************
         MACRO
&L       CEH    &TO,&FROM
         LH    R0,&FROM            PICK UP VALUE
         LA    R1,&TO              PICK UP TARGET ADDRESS
         BAL   LINKREG,CVTERZZ     GO CONVERT VALUE
         MEND
         SPACE 2                                                 V1M0C
         GBLC  &HEADING
&HEADING SETC  'SHOWASM COMMAND - DISPLAY AUX STORAGE MANAGER - V1M2 '
         TITLE '&HEADING - PROGRAM INITIALIZATION'
         SPACE
TSO036   PGM    ,   SHOWASM
         EJECT
LINKREG  EQU   6                   LINK REGISTER
         EXTRACT MF=(E,EXTRACT)
         L     R1,ANSWER            (R1)=ADDR OF TSO FLAG FROM EXTRACT
         MVC   TSOFLAG,0(R1)        MOVE IN THE ANSWER TO OUR FLAG
         TM    TSOFLAG,X'80'        ARE WE ONLINE
         BNO   INITIAL                NO..GO GO INITIALIZE
         EXTRACT MF=(E,EXTRPSCB)      YES..CHECK FOR OPER PRIVLEDGE
         L     R1,ANSWER
         USING PSCB,R1
CHKOPER  TM    PSCBATR1,PSCBCTRL      DOES USER HAVE OPER PRIVLEDGE
         BO    INITIAL                YES..GO ALLOW OPERATION
         DROP  R1
         LA    R1,EMSG1
         BAL   LINKREG,PUTMSG
         B     $$EOJ
         EJECT
*.....................................................................*
*    GENERATE SLOT STATUS DISPLAY                                     *
*.....................................................................*
         SPACE 2
INITIAL  DS    0H
         LOAD  EP=DEVNAMET
         ST    R0,DEVADDR
         SPACE
         MVI   MESSAGE,C' '                    CLEAR OUT
         MVC   MESSAGE+1(L'MESSAGE-1),MESSAGE     MESSAGE AREA
         L     R9,CVTPTR          (R9)=ADDR CVT
         USING CVT,R9
         L     R9,CVTASMVT        (R9)= ADDR ASMVT
         DROP  R9
         USING ASMVT,R9
DOSLOTS  L     R4,ASMSLOTS        LOAD TOTAL SLOTS AVAIL
         LA    R5,M1TOTSL         LOAD PLACE TO PUT IT
         BAL   LINKREG,EDITNUMB    GO EDIT THE NUMBER
*
         L     R4,ASMBKSLT        LOAD UNRESERVED SLOTS AVAIL
         LA    R5,M1UNRSV         LOAD PLACE TO PUT IT
         BAL   LINKREG,EDITNUMB    GO EDIT THE NUMBER
*
         L     R4,ASMVSC          LOAD SLOTS ALLOC TO VIO USE
         LA    R5,M1VIO           LOAD PLACE TO PUT IT
         BAL   LINKREG,EDITNUMB    GO EDIT THE NUMBER
*
         L     R4,ASMNVSC         LOAD SLOTS ALLOC TO NON-VIO USE
         LA    R5,M1NONVIO        LOAD PLACE TO PUT IT
         BAL   LINKREG,EDITNUMB    GO EDIT THE NUMBER
*
         L     R4,ASMERRS         LOAD CNT OF BAD SLOTS ON LOCAL DS OP
         LA    R5,M1BADSL         LOAD PLACE TO PUT IT
         BAL   LINKREG,EDITNUMB    GO EDIT THE NUMBER
*
         LA    R1,HEADER1A       LOAD FIRST HEADER ADDR
         BAL   LINKREG,PUTMSG      GO PRINT IT
         LA    R1,HEADER1B       LOAD SECOND HEADER ADDR
         BAL   LINKREG,PUTMSG      GO PRINT IT
         LA    R1,WTOMSG         LOAD MESSAGE ADDR
         BAL   LINKREG,PUTMSG      GO PRINT IT
         EJECT
*.....................................................................*
*    GENERATE CORE USAGE STATUS DISPLAY                               *
*.....................................................................*
         SPACE 2
         L     R11,16             CVT
         MVC   PVTADR,356(R11)    PVT
         L     R1,16              LOAD CVT ADDRESS.              V2M0
         L     R8,X'230'(,R1)     LOAD ADDRESS OF GLOBAL DATA.   V2M0
         L     R8,8(,R8)          LOAD ADDRESS OF CSA PQE.       V2M0
         L     R6,20(,R8)         LOAD SIZE OF CSA.              V2M0
         A     R6,24(,R8)         ADD START OF CSA.              V2M0
         ST    R6,PLPASTRT        SAVE ADDRESS OF PLPA START.    V2M0
         SPACE
         MVI   MESSAGE,C' '      CLEAR OUT MESAGE
         MVC   MESSAGE+1(L'MESSAGE-1),MESSAGE
         SPACE
DOCORE   L     R1,PVTADR          RESTORE PVT PTR
         L     R5,12(,R1)         APPARENT ORIGIN OF PFT.
         SR    R7,R7              PREPARE FOR ICM.               V1M0G
         ICM   R7,B'0011',18(R1)  LAST PFTE OFFSET.              V1M0G
         ST    R7,LASTPFTE        SAVE                           V1M0G
         LH    R6,16(,R1)         OFFSET TO REAL ORIGIN OF PFT.
LOOP     LR    R2,R5              ORG OF PFT
         AR    R2,R6              + DISP TO FIRST PFTE
         SPACE 2
*
         TM    12(R2),X'04'       BAD FRAME ?
         BO    ADDBAD             YES
         TM    13(R2),X'40'       OFFLINE FRAME
         BZ    NOSTL              NO
ADDBAD   ACH   BADOFF
         B     BUMP               OUT
*
NOSTL    TM    12(R2),X'02'       ALLOCATED FOR V=R?
         BZ    NOVR               NO
         ACH   NOVRR
NOVR     DS    0H
         TM    13(R2),X'10'       IRREGULAR BIT ?
         BZ    NOVIOP             NO
         ACH   VIO                YES, SUM UP
NOVIOP   TM    14(R2),X'80'       SYSTEM OR LOCAL
         BZ    SYST               SYSTEM
         CLI   14(R2),X'80'       YES .. MEANS LOCAL
         BNE   LSQA               LOCAL SQA
         ACH   TIUS               TOTAL IN USE
*
         TM    12(R2),X'10'       IS PAGE LONG FIXED?
         BZ    SHORT              NO
         ACH   TLFX
         B     BUMP               OVER SHORT
*
SHORT    TM    9(R2),X'FF'        IS THERE A FIX COUNT?
         BZ    UICPPP             NO
         ACH   TSFX
LOWER    B     BUMP               OUT
*
UICPPP   DS    0H
         TM    12(R2),X'02'       V=R X
         BO    BUMP               YES
         XR    R11,R11            CLEAR
         IC    R11,15(,R2)        GET UIC
         CLI   15(R2),X'FF'       SPECIAL?
         BE    LUIC               YES,DO  NOT COUNT
         CH    R11,HIUICP         NEW MAX ?
         BL    LUIC               NO
         STH   R11,HIUICP         YES .. SAVE
LUIC     B     BUMP               OUT
*
LSQA     CLI   14(R2),X'84'       EQUAL MEANS LSQA
         BNE   BUMP               OUT
         ACH   TLSQ
         B     BUMP               OUT
*
SYST     CLI   14(R2),X'0C'       EQUAL SQA?
         BNE   COMM               NO
         ACH   SQA
         B     BUMP               OUT
*
COMM     CLI   14(R2),X'08'       EQUAL COMMON?
         BNE   AVAIL              NO
*
         ICM   R11,B'0011',2(R2)  LOAD VBN FROM PFTE.            V2M0
         SLL   R11,8              SHIFT TO PROPER ADDRESS.       V2M0
         CL    R11,PLPASTRT       COMPARE TO PLPA START ADDRESS. V2M0
         BL    CSAPAGE            BRANCH IF CSA PAGE.            V2M0
         ACH   PLPA
         B     COMMLBLA           BYPASS IF NOT CSA FRAME.       V2M0
CSAPAGE  ACH   CSASIZE            COUNT AS CSA FRAME.            V2M0
COMMLBLA TM    12(R2),X'10'       FIX ?
         BO    YESFIX             YES
         TM    9(R2),X'FF'        ANY FIX COUNT ?
         BZ    UICCCC             NO
YESFIX   ACH   CFIX
         B     BUMP               OUT
UICCCC   DS    0H
         XR    R11,R11            CLEAR
         IC    R11,15(,R2)        GET UIC
         CLI   15(R2),X'FF'       SPECIAL?
         BE    LUICC              YES,DO NOT COUNT
         CH    R11,HIUICC         NEW MAX ?
         BL    LUICC              NO
         STH   R11,HIUICC         YES .. SAVE
LUICC    B     BUMP
*
AVAIL    ACH   AVQ
         SPACE 3
BUMP     LA    R6,16(,R6)         NEXT PFTE
         C     R6,LASTPFTE         REACHED END ?                 V1M0G
         BNH   LOOP               NO .. LOOP
*
***********************************************************************
*        PRINT ROUTINE FOR REPORT CORE USEAGE
***********************************************************************
*
         PRINT NOGEN                                             V2M0
CEF2     CEH   PSQA,SQA
         CEH   PLSQ,TLSQ
         CEH   PPLPA,PLPA
         CEH   PUSE,TIUS
         CEH   PTLFX,TLFX
         CEH   PTSFX,TSFX
         CEH   PAVQ,AVQ
         CEH3  PVIO,VIO
         CEH3  BOFF,BADOFF
         CEH   PCFIX,CFIX
         CEH   PCSASZ,CSASIZE
         CEH3  PVR,NOVRR
         CEH3  HUICP,HIUICP
         CEH3  HUICC,HIUICC
*
         PRINT GEN                                               V2M0
*
PRNTCORE LA    R1,HEADER2A       LOAD FIRST HEADER ADDR
         BAL   LINKREG,PUTMSG      GO PRINT IT
         LA    R1,HEADER2B       LOAD SECOND HEADER ADDR
         BAL   LINKREG,PUTMSG      GO PRINT IT
         LA    R1,WTOMSG         LOAD MESSAGE ADDR
         BAL   LINKREG,PUTMSG      GO PRINT IT
         EJECT
*.....................................................................*
*    GENERATE PAGE DATASET STATUS DISPLAY                             *
*.....................................................................*
         SPACE 2
DOPARTS  LA    R1,HEADER3A       LOAD FIRST HEADER ADDR
         BAL   LINKREG,PUTMSG      GO PRINT IT
         LA    R1,HEADER3B       LOAD SECOND HEADER ADDR
         BAL   LINKREG,PUTMSG      GO PRINT IT
*
         L     R8,ASMPART        LOAD ADDRESS OF PAGE ACTVTY REF TABLE
         USING PART,R8            ESTABLISH ADDRESSABILITY
*
         L     R10,PARTEUSE      LOAD NUMBER OF PARTS TO PROCESS
         LTR   R10,R10
         BNP   PROCSART          NOTHING TO DO..GO PROCESS SART
         LA    R11,PARTENTS(R8)  LOAD ADDRESS OF FIRST PART ENTRY
         USING PARTENT,R11       GET ADDRESSABILITY
*
PARTLOOP MVI   MESSAGE,C' '      CLEAR OUT MESAGE
         MVC   MESSAGE+1(L'MESSAGE-1),MESSAGE
*
         TM    PAREFLG1,PAREDSBD  IS DATASET BAD?
         BZ    PCKINUSE           NO-> CHECK FOR NOT IN USE
         MVC   M2USAGE,=CL6'* BAD*'
         B     PDOUCB
PCKINUSE TM    PAREFLG1,PARENUSE
         BO    BUMPPART          NOBODY HOME HERE
*
PSTATUS  TM    PARETYPE,PAREPLPA    IS THIS PLPA?
         BZ    PCHK2
         MVC   M2USAGE,=CL6'PLPA'
         B     PDOUCB
PCHK2    TM    PARETYPE,PARECOMM    IS IT COMMON ?
         BZ    PCHK3
         MVC   M2USAGE,=CL6'COMMON'
         B     PDOUCB
PCHK3    TM    PARETYPE,PAREDPLX    IS THIS A DUPLEX DATASET
         BZ    PCHK4
         MVC   M2USAGE,=CL6'DUPLEX'
         B     PDOUCB
PCHK4    TM    PARETYPE,PARELOCL    IS THIS A LOCAL DATASET
         BZ    PDOUCB
         MVC   M2USAGE,=CL6'LOCAL'
         SPACE 2
PDOUCB   L     R7,PAREUCBP            GET UCB ADDRESS FOR THIS DSN
         USING UCBSECT,R7
*
         MVC   M2VOLUME,UCBVOLI     MOVE IN VOLSER
         UNPK  M2UNIT(5),UCBCHAN(3)    CONVERT CURRENT CUU
         NC    M2UNIT,HEXMASK            TO NICE PRINTABLE HEX
         TR    M2UNIT,HEXTAB             FORMAT FOR
         MVI   M2UNIT,C' '               FOR A GREAT
         MVI   M2UNIT+4,C' '             DISPLAY
*
         L     R1,DEVADDR           LOAD DEVICE NAME TABLE ADDRESS
         L     R2,0(R1)             LOAD NUMBER OF ENTRIES
         LA    R1,4(R1)               ADDRESS OF FIRST ENTRY
PDEVLOP  CLC   UCBTYP,8(R1)         COMPARE
         BE    PDEVFND               GOTIT...
         LA    R1,12(R1)             NOGOT..BUMP
         BCT   R2,PDEVLOP              AND GRIND
         MVC   M2TYPE,=CL8'????????'  NO GOT
         B     PDODSN
         DROP  R7
PDEVFND  MVC   M2TYPE,0(R1)         THIS IS IT
PDODSN   DS    0H
         LH    R5,PARENN            LOAD PARENT NUMBER
         MH    R5,=H'44'            MULTIPLY BY 44
         L     R4,PARTDSNL          LOAD START ADDRESS OF DSN LIST
         AR    R4,R5                ADD THE TWO
         MVC   M2DSNAME,0(R4)       GET THE DSNAME
*
PDOSLOTS L     R4,PARESZSL        LOAD TOTAL SLOTS IN DATASET
         LA    R5,M2TOTAL         LOAD PLACE TO PUT IT
         BAL   LINKREG,EDITNUMB    GO EDIT THE NUMBER
*
         L     R4,PARESLTA        LOAD SLOTS AVAIL FOR ALLOC
         LA    R5,M2AVAIL         LOAD PLACE TO PUT IT
         BAL   LINKREG,EDITNUMB    GO EDIT THE NUMBER
*
         L     R4,PARERRCT        LOAD NUMBER OF BAD SLOTS
         LA    R5,M2BAD           LOAD PLACE TO PUT IT
         BAL   LINKREG,EDITNUMB    GO EDIT THE NUMBER
         SPACE
         LA    R1,WTOMSG          LOAD MESSAGE ADDRESS
         BAL   LINKREG,PUTMSG       GO PUT MESSAGE
*
BUMPPART LA    R11,64(R11)        BUMP PARTENT POINTER
         BCT   R10,PARTLOOP       AND RETURN FOR MORE IF NEED BE
*
*
         DROP  R8
         DROP  R11
         EJECT
*.....................................................................*
*    GENERATE SWAP DATASET STATUS DISPLAY                             *
*.....................................................................*
         SPACE 2
PROCSART DS    0H
*
         L     R8,ASMSART        LOAD ADDRESS OF SWAP ACTVTY REF TABLE
         USING SART,R8            ESTABLISH ADDRESSABILITY
*
         L     R10,SARUSE        LOAD NUMBER OF SARTS TO PROCESS
         LTR   R10,R10
         BNP   DOFINMSG          NOTHING TO DO..GO FINISH
         LA    R11,SARENTS(R8)   LOAD ADDRESS OF FIRST SART ENTRY
         USING SARENT,R11        GET ADDRESSABILITY
*
SARTLOOP MVI   MESSAGE,C' '      CLEAR OUT MESAGE
         MVC   MESSAGE+1(L'MESSAGE-1),MESSAGE
*
         TM    SREFLG,SREDSBD    IS DATASET BAD?
         BZ    SCKINUSE           NO-> CHECK FOR NOT IN USE
         MVC   M2USAGE,=CL6'SW-BAD'
         B     SDOUCB
SCKINUSE TM    SREFLG,SRENUSE
         BO    BUMPSART          NOBODY HOME HERE
*
         MVC   M2USAGE,=CL6'SWAP'
         SPACE 2
SDOUCB   L     R7,SREUCB              GET UCB ADDRESS FOR THIS DSN
         USING UCBSECT,R7
*
         MVC   M2VOLUME,UCBVOLI     MOVE IN VOLSER
         UNPK  M2UNIT(5),UCBCHAN(3)    CONVERT CURRENT CUU
         NC    M2UNIT,HEXMASK            TO NICE PRINTABLE HEX
         TR    M2UNIT,HEXTAB             FORMAT FOR
         MVI   M2UNIT,C' '               FOR A GREAT
         MVI   M2UNIT+4,C' '             DISPLAY
*
         L     R1,DEVADDR           LOAD DEVICE NAME TABLE ADDRESS
         L     R2,0(R1)             LOAD NUMBER OF ENTRIES
         LA    R1,4(R1)               ADDRESS OF FIRST ENTRY
SDEVLOP  CLC   UCBTYP,8(R1)         COMPARE
         BE    SDEVFND               GOTIT...
         LA    R1,12(R1)             NOGOT..BUMP
         BCT   R2,SDEVLOP              AND GRIND
         MVC   M2TYPE,=CL8'????????'  NO GOT
         B     SDODSN
         DROP  R7
SDEVFND  MVC   M2TYPE,0(R1)         THIS IS IT
SDODSN   DS    0H
         LH    R5,SRENN             LOAD SARENT NUMBER
         MH    R5,=H'44'            MULTIPLY BY 44
         L     R4,SARDSNL           LOAD START ADDRESS OF DSN LIST
         AR    R4,R5                ADD THE TWO
         MVC   M2DSNAME,0(R4)       GET THE DSNAME
*
SDOSLOTS L     R4,SRETOTSL        LOAD TOTAL SLOTS IN DATASET
         LA    R5,M2TOTAL         LOAD PLACE TO PUT IT
         BAL   LINKREG,EDITNUMB    GO EDIT THE NUMBER
*
         L     R4,SREAVLSL        LOAD SLOTS AVAIL FOR ALLOC
         LA    R5,M2AVAIL         LOAD PLACE TO PUT IT
         BAL   LINKREG,EDITNUMB    GO EDIT THE NUMBER
*
         L     R4,SRERRCNT        LOAD NUMBER OF BAD SLOTS
         LA    R5,M2BAD           LOAD PLACE TO PUT IT
         BAL   LINKREG,EDITNUMB    GO EDIT THE NUMBER
         SPACE
         LA    R1,WTOMSG          LOAD MESSAGE ADDRESS
         BAL   LINKREG,PUTMSG       GO PUT MESSAGE
*
BUMPSART LA    R11,48(R11)        BUMP SARTENT POINTER
         BCT   R10,SARTLOOP       AND RETURN FOR MORE IF NEED BE
*
         DROP  R8
         DROP  R11
DOFINMSG LA    R1,FINMSG
         BAL   LINKREG,PUTMSG
         B     $$EOJ
         EJECT
*.....................................................................*
*        LOCAL SUBROUTINE TO CONVERT NUMBER TO PRINTABLE              *
*                                                                     *
*  ENTER WITH (R4) NUMBER TO CONVERT                                  *
*             (R5) = ADDR OF TARGET 6 CHAR FIELD TO RECEIVE NUMBER    *
*  BAL   LINKREG,EDITNUM                                              *
*                                                                     *
*                                                                     *
*.....................................................................*
         SPACE
EDITNUMB CVD   R4,DBLW           CONVERT NUMBER TO PACKED
         MVC   0(6,R5),EDITMASK  MOVE IN THE MASK
         ED    0(6,R5),DBLW+5    EDIT THE VALUE
         BR    LINKREG           RETURN
         SPACE
*.....................................................................*
*        CONVERT TO PRINTABLE..USED BY CEH CEH3 MACROS                *
*.....................................................................*
         SPACE
CVTERZZ  DS    0H
         C     R0,=F'9999'          IS IT TOO BIG
         BH    CVTERZZ1
         CVD   R0,DBLW
         OI    DBLW+7,X'0F'
         MVC   TRAN1,=X'402020202120'
         ED    TRAN1,DBLW+5
         MVC   0(4,R1),TRAN1+2
         BR    LINKREG
CVTERZZ1 MVC   0(4,R1),XAST9
         BR    LINKREG
         EJECT
*.....................................................................*
*        LOCAL SUBROUTINE FOR IO TO OPER/USER                         *
*.....................................................................*
         SPACE
*
* ENTER WITH WTO,WTOR LIST FORM POINTED TO BY R1
*
*    BAL  LINKREG,PUTMSG    OR
*    BAL  LINKREG,PUTGET
*
*  USES RXX FOR WORK
*
RXX      EQU   14
*
PUTMSG   DS    0H
         TM    TSOFLAG,X'80'       IS IT TSO?
         BO    TPUTIT              YES-> GO DO TPUT
         SVC   35                  NO-> USE WTO
         BR    LINKREG
TPUTIT   DS    0H
         LH    R0,0(,R1)           GET LENGTH OF WTO MESSAGE
         S     R0,=F'4'            SUBTRACT OFF HEADER
         LA    R1,4(,R1)           BUMP MSG ADDRESS PAST HDR
         TPUT  (1),(0),R           DO THE TPUT
         BR    LINKREG
         SPACE 2
PUTGET   DS    0H
         TM    TSOFLAG,X'80'       IS IT TSO?
         BO    TSOIT               YES-> GO USE TGET
         LR    RXX,R1              NO-> USE WTOR .. SAVE MSG ADDRESS
         SVC   35                  DO THE WTOR...
         L     R1,4(,RXX)          GET ADDR OF ECB
         XC    0(4,R1),0(R1)       CLEAN OUT THE ECB....
         LA    R0,1
         SVC   1                   WAIT FOR WTOR TO COMPLETE
         B     PUTRET              RETURN
TSOIT    DS    0H
         LR    RXX,R1              SAVE
         LH    R0,8(,R1)           PUT LENGTH
         S     R0,=F'4'
         LA    R1,12(,R1)          PAST HDR
         TPUT  (1),(0),R
         SR    R0,R0
         IC    R0,0(,RXX)          GET REPLY LENGTH
         L     R1,0(,RXX)          GET REPLY ADRS
         LA    R1,0(,R1)
         ICM   R1,B'1000',=X'80'   INDICATE TGET...
         TGET  (1),(0),R
PUTRET   DS    0H
         L     R1,0(,RXX)          GET REPLY ADRS
         XR    R0,R0
         IC    R0,0(,RXX)          GET REPLY LENGTH
UPPER    DS    0H
         OI    0(R1),C' '          UPPER CASE
         LA    R1,1(,R1)           NXT
         BCT   R0,UPPER
         BR    LINKREG
         EJECT
*.....................................................................*
*        MESSAGES - OPER QUERIES AND RESPONSES FOR GOOD WORK          *
*.....................................................................*
         SPACE
HEADER1A WTO   'SHOWASM - CURRENT SLOT STATUS',                        X
               ROUTCDE=(11),MF=L
         SPACE 1
HEADER1B WTO   ' TOTAL UNRSV .VIO. N-VIO .BAD.',                       X
               ROUTCDE=(11),MF=L
         SPACE 1
HEADER2A WTO   'SHOWASM - STORAGE USAGE STATUS',                       X
               ROUTCDE=(11),MF=L
         SPACE 1
HEADER2B WTO   '  SQA LSQA PLPA  CSA CFIX INUS LLFX LSFX AVAL VIO BOF VX
               =R  UICC UICP ',ROUTCDE=(11),MF=L
         EJECT
HEADER3A WTO   'SHOWASM - PAGE/SWAP DATASET STATUS',                   X
               ROUTCDE=(11),MF=L
         SPACE 1
HEADER3B WTO   ' USAGE  VOLUME UNIT DEV-TYPE TOTAL AVAIL .BAD.  DSNAME X
                ',ROUTCDE=(11),MF=L
         SPACE 1
FINMSG   WTO   'SHOWASM - DISPLAY ENDED',                              X
               ROUTCDE=(11),MF=L
         EJECT
         SPACE 1
WTOMSG   WTO   '                                                       X
                                        ',                             X
               ROUTCDE=(11),MF=L
         SPACE 2
         ORG   WTOMSG+4
MESSAGE  DS    CL80
         ORG   WTOMSG+4
M1TOTSL  DS    CL6
M1UNRSV  DS    CL6
M1VIO    DS    CL6
M1NONVIO DS    CL6
M1BADSL  DS    CL6
         ORG   WTOMSG+5
M2USAGE  DS    CL6
         DS    CL1
M2VOLUME DS    CL6
         DS    CL1
M2UNIT   DS    CL4
         DS    CL1
M2TYPE   DS    CL8
M2TOTAL  DS    CL6
M2AVAIL  DS    CL6
M2BAD    DS    CL6
         DS    CL2
M2DSNAME DS    CL32
         ORG   WTOMSG+5
PSQA     DS    CL4
         DS    CL1
PLSQ     DS    CL4
         DS    CL1
PPLPA    DS    CL4
         DS    CL1
PCSASZ   DS    CL4
         DS    CL1
PCFIX    DS    CL4
         DS    CL1
PUSE     DS    CL4
         DS    CL1
PTLFX    DS    CL4
         DS    CL1
PTSFX    DS    CL4
         DS    CL1
PAVQ     DS    CL4
         DS    CL1
PVIO     DS    CL3
         DS    CL1
BOFF     DS    CL3
         DS    CL1
PVR      DS    CL3
         DS    CL2
HUICC    DS    CL3
         DS    CL2
HUICP    DS    CL3
*
         ORG
         EJECT
*.....................................................................*
*        MESSAGES - BOZO RESPONSES                                    *
*.....................................................................*
         SPACE
EMSG1    WTO   'SORRY...SHOWASM IS ONLY AVAILABLE TO OPER PRIV USERS', X
               ROUTCDE=(11),MF=L
         SPACE
         EJECT
*.....................................................................*
*        VARIABLES                                                    *
*.....................................................................*
         SPACE
TSOFLAG  DC    X'00'               ='80' IF TSO. '00' IF NOT TSO
ANSWER   DC    F'0'                ADDRESS POINTER FOR EXTRACT
DEVADDR  DC    AL4(0)              ADDRESS OF DEVNAMET
DBLW     DC    D'0'
TRAN     DC    F'0'
TRAN1    DC    CL6' '
*
*
LASTPFTE DS    F
PVTADR   DS    F
PLPASTRT DS    F                                                V2M0
*
*
CTS      DS    0F               ACCUMULATORS FOR PAGE COUNTS
SQA      DC    H'0'
TLSQ     DC    H'0'
PLPA     DC    H'0'
AVQ      DC    H'0'
TLFX     DC    H'0'
TSFX     DC    H'0'
TIUS     DC    H'0'
BADOFF   DC    H'0'
VIO      DC    H'0'
NOVRR    DC    H'0'
CSASIZE  DC    H'0'
HIUICP   DC    H'0'
HIUICC   DC    H'0'
CFIX     DC    H'0'
         EJECT
*.....................................................................*
*        CONSTANTS                                                    *
*.....................................................................*
         SPACE 2
EDITMASK DC    X'402020202120'
HEXMASK  DC    4X'0F'
HEXTAB   DC    C'0123456789ABCDEF'
XAST9    DC    C' *****'
         EJECT
*.....................................................................*
*        LIST FORMS OF MACROS                                         *
*.....................................................................*
         SPACE 2
EXTRACT  EXTRACT ANSWER,'S',FIELDS=(TSO),MF=L
         SPACE 2
EXTRPSCB EXTRACT ANSWER,'S',FIELDS=(PSB),MF=L
         EJECT
         IKJPSCB
         EJECT
UCBSECT  DSECT
         IEFUCBOB
         EJECT
CVT      DSECT
         CVT   SYS=VMS,TSO=YES
*
         EJECT
ASMVT    DSECT
         ORG   ASMVT+4
ASMSART  DS    A                ADDR OF SWAP ACTIVITY REF TABLE
ASMPART  DS    A                ADDR OF PAGE ACTIVITY REF TABLE
         ORG   ASMVT+X'6C'
ASMBKSLT DS    F                COUNT OF UNRESVD LOCAL SLOTS
ASMSLOTS DS    F                COUNT OF TOTAL LOCAL SLOTS IN ALL
*                                 OPEN LOCAL PAGE DATASETS
ASMVSC   DS    F                COUNT OF TOTAL SLOTS ALLOC TO VIO USE
ASMNVSC  DS    F                COUNT OF TOTAL SLOTS ALLOC TO NON-VIO
ASMERRS  DS    F                COUNT OF BAD SLOTS ON LOCAL DSNS
         SPACE
PART     DSECT              PAGE ACTIVITY REFERENCE TABLE
PARTHDR  DS    XL80
         ORG   PART+4
PARTSIZE DS    F            NUMBER OF PARTENTRIES IN THIS PART
PARTEUSE DS    F            NUMBER OF PARTE IN USE
         ORG   PART+24
PARTDSNL DS    F            ADDRESS OF DSNLIST FOR THE PARTE
         ORG   PART+80
PARTENTS EQU   *-PART       START OF PART ENTRIES
         SPACE 2
PARTENT  DSECT              PART ENTRY
         ORG   PARTENT+8
PARETYPE DS    XL1         PAGE DATASET TYPE
PAREPLPA EQU   B'10000000'  PLPA
PARECOMM EQU   B'01000000'  COMMON
PAREDPLX EQU   B'00100000'  DUPLEX
PARELOCL EQU   B'00010000'  LOCAL
*
PAREFLG1 DS    XL1          PARTE FLAGS
PARENUSE EQU   B'10000000'   PARE NOT IN USE 1=NOT IN USE
PAREDSBD EQU   B'01000000'   DATASET BAD 1=YES 0=NO
         ORG   PARTENT+10
PARENN   DS    H            PART NUMBER FOR THIS PARTE
         ORG   PARTENT+16
PARESZSL DS    F            SIZE OF PAGE DATASET IN SLOTS
PARESLTA DS    F            NUMBER OF SLOTS AVAILABLE
PARERRCT DS    F            COUNT OF NUMBER OF BAD SLOTS
         ORG   PARTENT+44
PAREUCBP DS    F            POINTER TO UCB FOR PAGE DATASET
         EJECT
SART     DSECT              SWAP ACTIVITY REFERENCE TABLE
SARTHDR  DS    XL80
         ORG   SART+8
SARUSE   DS    F            NUMBER OF SARTE IN USE
         ORG   SART+24
SARDSNL  DS    F            ADDRESS OF DSNLIST FOR THE SARTE
         ORG   SART+80
SARENTS  EQU   *-SART       START OF SART ENTRIES
         SPACE 2
SARENT   DSECT              SART ENTRY
*
         ORG   SARENT+9
SREFLG   DS    XL1          SARTE FLAGS
SRENUSE  EQU   B'10000000'   SARTE NOT IN USE 1=NOT IN USE
SREDSBD  EQU   B'01000000'   DATASET BAD 1=YES 0=NO
         ORG   SARENT+10
SRENN    DS    H            SARE NUMBER FOR THIS PARTE
         ORG   SARENT+16
SRETOTSL DS    F            TOTAL NUMBER OF SWAP SETS ON THIS DSN
SREAVLSL DS    F            COUNT OF SWAP SETS AVAILABLE
SRERRCNT DS    F            COUNT OF NUMBER OF ERROR SWAP SETS
         ORG   SARENT+44
SREUCB   DS    F            POINTER TO UCB FOR SWAP DATASET
         END   TSO036
