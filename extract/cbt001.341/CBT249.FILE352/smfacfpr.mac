        /* DATA SET SMFACFPR   AT LEVEL 001 AS OF 10/05/79    */
        /* DATA SET SMFRACF    AT LEVEL 004 AS OF 02/01/79    */
 SMFACFP: PROC(PARAM)  OPTIONS(MAIN) REORDER;
 /*********************************************************************/
 /* READ MERGED ACF/GSA RECORDS AND PRINT REPORT BY GSA NAME          */
 /*********************************************************************/
 /* INPUT DATA MUST BE SORTED BY GSA,DSN,DATE,TIME                    */
 /*                                                                   */
 /* K TRUE  2 OCT 79                                                  */
 /*********************************************************************/
1DCL INPUT FILE  RECORD INPUT  ENV(CONSECUTIVE);
 DCL PRINT FILE  STREAM OUTPUT PRINT;

 DCL VERSION CHAR(17) INIT('VER 1.0 (02OCT79)');
 DCL EOFIN         BIT(1) INIT('0'B);
 DCL DATE          BUILTIN;
 DCL INDEX         BUILTIN;
 DCL TIME          BUILTIN;
 DCL NULL          BUILTIN;
 DCL ONCHAR        BUILTIN ;
 DCL (I,J,K,L)
                   FIXED BIN(15) INIT(0);

 DCL INDATE          CHAR(6) INIT(' '),
     C_YY     CHAR(2) DEF(INDATE) POS(1),
     C_MM     CHAR(2) DEF(INDATE) POS(3),
     C_DD     CHAR(2) DEF(INDATE) POS(5);

 DCL PACK5         PIC'99999'    INIT(0),
     PACK6         PIC'999999'   INIT(0),
     R941X11  EXTERNAL ENTRY OPTIONS(ASSEMBLER,INTER),
     R941X12  EXTERNAL ENTRY OPTIONS(ASSEMBLER,INTER);
              /* IN SYS2.FCILIB  */


 DCL TEMP8         BIT(8) INIT((8)'0'B);
 DCL TEMP31        FIXED BIN(31,0) INIT(0);
 DCL PARAM         CHAR(100) VAR;
1/*------------------------------------------------------*/
 /* ESTABLISH RUN PARMS FROM PARM FIELD                  */
 /*------------------------------------------------------*/
 DCL DEBUG         BIT(1) INIT('0'B);

 IF LENGTH(PARAM) > 0 THEN
    DO;
      IF INDEX(PARAM,'DEBUG') ^= 0 THEN DEBUG = '1'B;
    END;

1DCL 1 DETAIL,     /*   DETAIL OUTPUT LINE..USE HEAD1/HEAD2 FOR TITLE*/
       2 P_RCD_DATE    PIC'Z9/99/99',
       2 F3            CHAR(1),
       2 P_RCD_TIME    PIC'Z9.99.99',
       2 F4            CHAR(1),
       2 P_ACF2_EVENT  CHAR(8),
       2 P_ACF2_ACCESS CHAR(8),
       2 F5            CHAR(1),
       2 P_JOBNAME     CHAR(8),
       2 F1            CHAR(1),
       2 P_VIOLATION   CHAR(1),
       2 F6            CHAR(1),
       2 P_ACF2_LOGONID CHAR(8),
       2 F7            CHAR(1),
       2 P_TERM_ADDR   CHAR(4),
       2 F9            CHAR(1),
       2 P_RCD_REASON(5) CHAR(1),
       2 F10           CHAR(1),
       2 P_DSNPGM      CHAR(65);

 DCL PDETAIL  CHAR(131) BASED(@DETAIL);
     @DETAIL  = ADDR(P_RCD_DATE);
     DETAIL = '';

 DCL 1 DETAIL1,
       2 P_BLANKS      CHAR(46),
       2 P_DETAIL      CHAR(85);

 DCL PDETAIL1 CHAR(131) BASED(@DETAIL1);
     @DETAIL1 = ADDR(P_BLANKS);
     DETAIL1='';

 DCL DETAILV  CHAR(255) VAR INIT('');
 DCL CSTR     CHAR(1024) VAR INIT('');

1DCL 1 RECIN,            /* INPUT  RECORD FOR SUBSEQUENT PROCESSING*/
       2 JOBNAME     CHAR(8)   INIT(' '),
       2 RCD_DATE    FIXED  DEC(7)      INIT(0),
       2 RCD_TIME    FIXED  BIN(31,0)   INIT(0),
       2 ACF2_EVENT  CHAR(8)    INIT(' '),
       2 ACF2_ACCESS CHAR(8)    INIT(' '),
       2 VIOLATION   CHAR(1)    INIT(' '),
       2 RCD_REASON(5) CHAR(1)  INIT(' '),
       2 ACF2_LOGONID CHAR(8)   INIT(' '),
       2 TERM_ADDR   CHAR(4)    INIT(' '),
       2 ACF2_KEY    CHAR(8)    INIT(' '),
       2 ACF2_DSNAME CHAR(44)   INIT(' '),
       2 ACF2_MEMBER CHAR(8)    INIT(' '),
       2 ACF2_VOLUME CHAR(6)    INIT(' '),
       2 ACF2_DDNAME CHAR(8)    INIT(' '),
       2 ACF2_PGM    CHAR(8)    INIT(' '),
       2 ACF2_STEP   CHAR(8)    INIT(' '),
       2 ACF2_LIBNAM CHAR(44)   INIT(' '),
       2 ACF2_JOBID  CHAR(8)    INIT(' '),
       2 ACF2_UNAME  CHAR(20)   INIT(' '),
       2 GSA_BADGE   CHAR(5)   INIT(' '),
       2 GSA_NAME    CHAR(20)   INIT(' '),
       2 GSA_AREA    CHAR(8)   INIT(' ');

 DCL GSABADGE        CHAR(5)   INIT(' ');


1DCL (H_MAIN1,H_BLANK,H_DETAIL1,H_DETAIL2,H_SUMMARY1,H_SUMMARY2,
      RPTHEAD,TITLE1,TITLE2)
         CHAR(131)  INIT('');
 DCL SUBTITLE  CHAR(131) VAR INIT('');


 DCL RUNDATE     PIC'Z9/99/99' DEF(H_MAIN1) POS(104),
     RUNTIME     PIC'99.99.99' DEF(H_MAIN1) POS(113),
     PAGENO      PIC'ZZ9'      DEF(H_MAIN1) POS(128);

           /*          1         2         3         4         5    */
           /* ....5....0....5....0....5....0....5....0....5....0... */
 H_MAIN1   = 'SMFACFP   FAIRCHILD CAMERA & INSTRUMENT         ACF2 ' ××

           /*                                               1    1  */
           /*  5    6         7         8         9         0    0  */
           /* .5....0....5....0....5....0....5....0....5....0....5. */
             'DSN ACTIVITY REPORT    V1M0               RUN ON: MM/' ××

           /*    1         1         1                              */
           /*    1         2         3                              */
           /* ...0....5....0....5....0.                             */
             'DD/YY HH.MM.SS  PAGE XXX ';


 H_DETAIL1 = '------EVENT------                  TSO-USER V   ACF2 ' ××
             '  TERM REC.                                          ' ××
             '                        ';

 H_DETAIL2 = '..DATE.. ..TIME.. ...ACF2 EVENT... /JOBNAME _ LOGONID' ××
             '  ADDR REASN DSNAME,PGM                              ' ××
             '                         ';

 H_SUMMARY1= '                                                     ' ××
             '                                                     ' ××
             '                        ';

 H_SUMMARY2= '                                                     ' ××
             '                                                     ' ××
             '                        ';



 DCL VDSNPGM   CHAR(65) VAR INIT('');
 DCL COMMENT   CHAR(80) VAR INIT('');


 DCL (PTR,@SUMMARY,@DETAIL1,@DETAIL,@HEXPTR,@RELPTR) POINTER;


1/*     SETUP ERROR HANDLING  AND PROGRAM CLEANUP              */

     ON ERROR BEGIN;
       ON ERROR SYSTEM;
       PUT DATA(RECIN);
              END;



     ON FINISH BEGIN ;
        CLOSE FILE (INPUT),
              FILE (PRINT) ;
     END ;

     ON ENDFILE(INPUT)   EOFIN='1'B;

     ON ENDPAGE(PRINT) BEGIN;
        IF PAGENO > 0 THEN PUT FILE(PRINT) PAGE;

        PAGENO = PAGENO + 1;
        PUT FILE(PRINT)      EDIT
           (H_MAIN1)        (A)
           (RPTHEAD)        (SKIP,A)
           (H_BLANK)        (SKIP,A);

        IF TITLE1 ^= (131)' ' THEN
           PUT FILE(PRINT) EDIT
               (TITLE1)     (SKIP,A);

        IF TITLE2 ^= (131)' ' THEN
           PUT FILE(PRINT) EDIT
               (TITLE2)     (SKIP,A);
     END;

1    OPEN FILE (INPUT)  INPUT,
          FILE (PRINT) PRINT LINESIZE(131);

     INDATE = DATE;
     RUNDATE = C_MM ×× C_DD ×× C_YY;

     RUNTIME = SUBSTR(TIME,1,6);
     PAGENO = 0;

     SUBTITLE = '';
     SUBTITLE = 'SELECTION: ';

     IF DEBUG   THEN SUBTITLE = SUBTITLE ×× ' DEBUG ';
                ELSE SUBTITLE = SUBTITLE ×× ' NODEBUG ';


     RPTHEAD = '';
     I = (LENGTH(RPTHEAD) - LENGTH(SUBTITLE))/2;
     SUBSTR(RPTHEAD,I+1,LENGTH(SUBTITLE)) = SUBTITLE;



1/* MAIN LOOP....READ IN SMF RECORDS AND PROCESS                     */

     EOFIN = '0'B;
     READ FILE(INPUT) INTO(RECIN);
     IF ^EOFIN THEN
       DO;
         GSABADGE = GSA_BADGE;
       END;
     TITLE1 = H_DETAIL1;
     TITLE2 = H_DETAIL2;
     CALL REPT_BREAK;


     DO WHILE(^EOFIN);     /*  MAIN LOOP...READ AND PROCESS RECORDS */

       IF GSABADGE ^= GSA_BADGE THEN CALL REPT_BREAK;

       CALL PROCESS;
       READ FILE(INPUT) INTO(RECIN);
     END;

     CALL SUMMARY;    /* REPORT TOTALS..MINMAX..AVGS */

     STOP;

 /*   END OF MAIN PROGRAM            */
1/*------------------------------------------------------------*/
 PROCESS: PROC ;           /* GENERATE REPORT                  */
 /*------------------------------------------------------------*/
     P_JOBNAME=JOBNAME;               /* COPY JOBNAME */
     P_ACF2_LOGONID=ACF2_LOGONID;     /*COPY LOGONID*/

     P_RCD_TIME = RCD_TIME;
     PACK5 = RCD_DATE;                /* CONVERT EVENT DATE */
     CALL R941X12(PACK5,PACK6);       /* TO GREGORIAN       */
     IF PACK6 ^= 0 THEN P_RCD_DATE = PACK6;
                   ELSE P_RCD_DATE = 0;

     P_ACF2_EVENT=ACF2_EVENT;
     P_ACF2_ACCESS = ACF2_ACCESS;
     P_VIOLATION = VIOLATION;
     P_TERM_ADDR = TERM_ADDR;

     P_RCD_REASON = RCD_REASON;

     VDSNPGM=DEBLANK(ACF2_DSNAME) ×× ',PGM='
             ×× DEBLANK(ACF2_PGM) ;

     P_DSNPGM = VDSNPGM;


     PUT FILE(PRINT) SKIP EDIT     /* WRITE OUT DETAIL LINE   */
        (PDETAIL)    (A);


     RETURN ;
 END PROCESS;
1/*------------------------------------------------------------*/
  DEBLANK: PROC (INSTR) RETURNS(CHAR(255) VAR);
 /*------------------------------------------------------------*/

     DCL INSTR  CHAR(*),
         OUTSTR CHAR(255) VAR,
         I      FIXED BIN(15,0);

     I = INDEX(INSTR,' ');     /* FIND BLANK IF THERE IS ONE */
     IF I=0 THEN               /*   NO BLANK....             */
       DO;
         OUTSTR=INSTR;
         RETURN (OUTSTR);
       END;
     IF I<=1 THEN              /*   NO BLANK....             */
       DO;
         OUTSTR='';
         RETURN (OUTSTR);
       END;

     OUTSTR=SUBSTR(INSTR,1,I-1);

     RETURN (OUTSTR);
 END DEBLANK;
 /*----------------------------------------------------------*/
 SUMMARY: PROC ;       /* WRITE OUTPUT SUMMARY STATISTICS    */
 /*----------------------------------------------------------*/


     RETURN ;
 END SUMMARY ;
 /*----------------------------------------------------------*/
 REPT_BREAK: PROC;     /* WRITE NEW REPORT BREAK..........   */
 /*----------------------------------------------------------*/

    GSABADGE = GSA_BADGE;
    RPTHEAD  = 'SEQUENCE: GSA,DSN,DATE,TIME      GSA: ' ×× GSA_NAME ××
               ' BADGE: ' ×× GSA_BADGE ××
               ' AREA: ' ×× GSA_AREA;
    SIGNAL ENDPAGE(PRINT);

     RETURN ;
 END REPT_BREAK;
     END SMFACFP; /* END OF MAIN PROGRAM */
