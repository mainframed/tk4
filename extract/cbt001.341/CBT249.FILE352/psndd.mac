*          DATA SET PSNDD      AT LEVEL 002 AS OF 10/30/80
         TITLE 'PSNDD - PROCESS THE DD CARD'
PSNDD    PSNMSTRT  BASE=R12,SASIZ=WKLENG
         EJECT
*                   TO PROCESS A GIVEN DD STATEMENT
*                    BREAKING IT UP INTO ITS PARTS AND
*                    PREPARING FOR THE DD EDITOR TO TAKE
*                    OVER - THIS IS ONLY A PARSER, NOT AN
*                    EDITOR
*
         BAL   R14,BLDBLOCK       BUILD UP THE BASIC BLOCK
         USING DDBLOCK,R9
*
         LA    R7,DDBDDPTR        POINT TO VARIABLE TAIL
         USING DDBDDPTR,R7
*
         BAL   R14,UPDTBASE       UPDATE BASE INFORMATION IN IT
*
EACHWORD EQU   *                  FOR EACH KEYWORD IN THE DD STATEMENT
         L     R15,PSWSCAN        GO LOOK FOR THE WORD
         BALR  R14,R15
         LTR   R15,R15            WAS IT SUCCESSFUL
         BNZ   RETURN             NO - LOST - GIVE UP
         BAL   R14,FINDKWRD       WHAT WORD WAS IT, JOHNNIE
         LTR   R4,R15             IT WAS SOOOOOOO BAD
         BZ    CHKFEND            WE IGNORE IT COMPLETELY
         BAL   R14,MOVEDATA       CREATE THE BASIC POINTER BLOCK
         SLL   R4,2
         LA    R14,BACK           COMMON RETURN FOR ALL OF THESE
         B     *(R4)              GO TO THE PROPER ROUTINE
         PSNMDDLS  TYPE=BRTAB
*
*
*                    AS AN INTERRIM MEASURE - ALL PROCESSED
*                    COME DIRECTLY BACK TO THIS - JUST BUILD THE
*                    POINTERS AND QUIT
*
DCHARS   EQU   *
DCOPIES  EQU   *
DDDNAME  EQU   *
DDEST    EQU   *
DDUMMY   EQU   *
DFCB     EQU   *
DFREE    EQU   *
DLABEL   EQU   *
DMSVGP   EQU   *
DOUTLIM  EQU   *
DSYSOUT  EQU   *
DTERM    EQU   *
DFLASH   EQU   *
DAMP     EQU   *
DUCS     EQU   *
*
BACK     EQU   *
         LA    R7,DDBDDPLN(,R7)   INDEX TO START OF NEXT POINTER BLOCK
         LA    R1,1               COUNT NUMBER OF KEYWORD ENTRIES
         AH    R1,DDBNENT         .
         STH   R1,DDBNENT         .
         LA    R1,DDBDDPLN(,R7)   CAN ANOTHER YET BE BUILT
         C     R1,PSWADDN+4       .
         BNL   OVFLODD            NO - NEED MORE CORE OR FEWER DDS
*                    NOW CHECK IF DONE, MORE CARDS, ....
CHKFEND  EQU   *
         TM    PSWSCANI,PSWSIEND  WAS THAT THE LAST ONE
         BO    DDDDDONE
         TM    PSWSCANI,PSWSIMOR  MORE ON SAME LINE
         BO    EACHWORD           YES - CARRY ON WITH IT
READCARD EQU   *
         L     R15,PSWREAD        READ THE NEXT CARD, INSTEAD
         BALR  R14,R15
         LTR   R15,R15            HOW DID IT ALL GO
         BNZ   PROBEOF            PROBABLE EOF PASSED
         L     R1,PSWRNEXT        ADDRESS THIS CARD
         CLI   2(R1),C'*'         IS IT JUST AN IMBEDDED COMMENT
         BNE   EACHWORD           NO - CARRY STRAIGHT ON
*                    IMBEDDED COMMENT - BENIGN NEGLECT IN FORCE
         B     READCARD
*
PROBEOF  EQU   *            SOMETHING UNTOWARD IN THE READ - ASSUME EOF
         PSNMERR  ERREOF,PSWCDD
         LA    R15,4              CODE NOT TO PROCEED
         B     RETURN
*
DDDDDONE EQU   *                  ALL KEYWORDS PROCESSED
         ST    R7,PSWADDN         SHOW NEW END OF WORKAREA FOR DDS
         BAL   R14,XCORELAT       CORRELATE DATA FOR SUMMARY
         L     R15,PSWEDITD       CALL THE DD EDITOR
         BALR  R14,R15
         SR    R15,R15            LOOKS GOOD AT THIS LEVEL
         B     RETURN
*
OVFLODD  EQU   *                  OVERFLOWED THE DD TABLE
         PSNMERR  ERRTBLFL,(PSWADDN+16,8)
         LA    R15,4              PLEASE DO NOT COME BACK
         B     RETURN
         EJECT
*                    TO SET UP THE POINTERS FROM THE EXEC OR
*                    PREVIOUS DD BLOCK TO THIS ONE, AND THE
*                    PSW POINTER TO CURRENT DD BLOCK.
*
BLDBLOCK PSNMBLOK  BBK,RENT=YES
         L     R15,PSWDDTAB       OBTAIN ADDRESSED FROM THE DD TABLE
         BALR  R14,R15            ALSO LOAD THE TABLE THIS WAY
         LM    R0,R2,0(R15)       PICK UP POINTERS FROM POINTER
         STM   R0,R2,WKDDTAB      SAVE THEM FOR FUTURE REFERENCE
*                    LOCATE THIS DD BLOCK AND ENSURE ROOM
         L     R9,PSWADDN         START OF FREE DD AREA
         LA    R1,DDBBLENG+4*DDBDDPLN(,R9) PROBABLE END
         C     R1,PSWADDN+4
         BNL   BBKFULL            REALLY BAD NEWS
*                    CHAIN TO THE PREVIOUS ENTRY
         L     R1,PSWDDLST        PREVIOUS DD ENTRY FOR EXEC
         LTR   R1,R1              DOES IT REALLY EXIST
         BZ    BBKFIRST           NO - THIS IS FIRST DD OF STEP
         ST    R9,DDBNEXT-DDBLOCK(,R1) CHAIN OFF OF PREVIOUS DD
         B     BBKCHND
BBKFIRST EQU   *
         L     R1,PSWEXEND        POINTER TO LAST EXEC BLOCK
         LTR   R1,R1              WAIT - IS THERE AN EXEC BLOCK
         BZ    BBKNOEX            OOPS - THE REALLY ODDDDDD ONE
         ST    R9,EXCDDCHN-EXECBLOK(,R1) START THE DD CHAIN
BBKCHND  EQU   *
         ST    R9,PSWDDLST        THIS IS CURRENT/LAST DDBLOCK
*
         XC    DDBLOCK(DDBBLENG),DDBLOCK CLEAR THE BASE OUT
         B     BBKEXIT
*
BBKFULL  EQU   *                  DD ENTRIES HAVE OVERFLOWED
         PSNMERR  ERRTBLFL,(PSWADDN+16,8)
         LA    R15,4
         B     RETURN             AND ESCAPE THIS SITUATION
*
BBKNOEX  EQU   *                  NO EXEC ENTRY FOR THIS DD STATEMENT
         PSNMERR  ERRREQDF,BBKSTEP,PSWCPROC
         LA    R15,4
         B     RETURN             AND ESCAPE THIS SITUATION
BBKSTEP  DC    C'AN EXEC STATEMENT'
         EJECT
*                  TO UPDATE THE BASIC INFORMATION IN THE DDBLOCK
*                  SUCH AS THE DDNAME AND THE COMMENTS ENTERED JUST
*                  ABOVE THIS DD STATEMENT
*
UPDTBASE PSNMBLOK  UDB
         MVC   DDBDDNAM,PSWTNAME  NAME FROM THE TYPE PROCESSOR
         L     R1,PSWTHISC        POINTER TO COMMENT STRING
         LTR   R1,R1              ANY COMMENTS HERE
         BZ    UDBEXIT            NO - SKIP IT
         ST    R1,DDBCOMNT        SAVE THIS POINTER TO COMMENTS
         SR    R15,R15            PROPER RETURN
         ST    R15,PSWTHISC       CLEAR THE COMMENT COMMON POINTER
         ST    R15,PSWLASTC       AND ITS CHAIN BUILDER POINTER
         B     UDBEXIT
         EJECT
*                    TO FIND THE PROPER KEYWORD FROM THE SCAN
*
FINDKWRD PSNMBLOK  FKW
         LM    R15,R1,WKDDTAB     PICK UP POINTERS FROM DDTABLE
         L     R14,PSWSKEY        POINTER TO THE KEYWORD
         LH    R2,PSWSKEYL        AND ITS LENGTH
         LR    R3,R2              NEED ANOTHER LENGTH FOR THE CLC
         BCTR  R3,0               .
FKWLOOP  EQU   *
         CH    R2,10(,R15)        DO THE LENGTHS MATCH
         BNE   FKWNEXT            NO - LOOK NO FURTHER
         EX    R3,FKWMATCH        SO - DO THW WORDS MATCH
         BE    FKWHIT             THIS IS THE ONE....
FKWNEXT  EQU   *
         BXLE  R15,R0,FKWLOOP     KEEP LOOKING
         PSNMERR  ERRBADKY,((R14),(R2)),PSWCDD
         SR    R15,R15            CODE FOR NO MATCHING KEYWORD
         B     FKWEXIT
*
FKWHIT   EQU   *                  HAVE FOUND THE MAGIC MATCH
         LR    R8,R15             PASS BACK THE TABLE ENTRY ADDRESS
         LH    R15,8(,R15)        PICK UP THE ROUTINE NUMBER
         B     FKWEXIT
FKWMATCH CLC   0(0,R15),0(R14)    MATCH FOR KEYWORD
         EJECT
*                    TO MOVE THE DATA FROM THE SCAN POINTER
*                    AREA TO THE TEXT HOLDING AREA, MAKING
*                    THE SUBSTITUTIONS AS REQUIRED.
*
MOVEDATA PSNMBLOK  MD
         LA    R1,0(,R7)          POINTER TO THIS POINTER BLOCK
         SR    R1,R9              DISPLACEMENT FROM START OF DD ENTRY
         LR    R14,R4             THE KEYWORD NUMBER OF THIS ONE
         SLL   R14,1              IN NUMBER OF HALFWORDS
         LA    R15,DDBDISPL-2(R14) POINT TO PROPER POINTER
         STH   R1,0(,R15)         POINTER TO POINTERS IN OFFSET
         EX    R0,16(,R8)         TURN ON BIT IN MASK
*                    NOW SIMPLY FILL IN THE BLOCK
         XC    DDBDDPTR(DDBDDPLN),DDBDDPTR CLEAR THE BLOCK
         ZAP   DDBPCARD,PSWCARDN  THE CARD NUMBER
         MVC   DDBPCOL,PSWSCOLN   THE COLUMN NUMBER
         STH   R4,DDBPNBR         SAVE THE LOGICAL NUMBER OF IT
         L     R1,PSWSCOM         MOVE THE COMMENT POINTER OVER
         ST    R1,DDBPCOM         .
         LH    R1,PSWSCOML        .
         STC   R1,DDBPCOM         .
         TM    PSWSCANI,PSWSINOD  DID SCAN SET NO DATA AND =
         BZ    *+8                NOPE - FALSE ALARM
         OI    DDBPIND1,DDBP1NOD  YES - PASS ON TO REFORMATTER
*
*                    MOVE ORIGINAL TEXT TO ATEXT WORKAREA
         L     R15,PSWSDAT        POINT TO THAT DATA
         LTR   R15,R15            WAIT - WAS THERE ANY TEXT
         BZ    MDMOVED            NO - SKIP MOST OF THIS
         L     R5,PSWATEXT        POINTER TO RECEIVING AREA
         ST    R5,DDBPORIG        INTO THE POINTER AREA
         LH    R2,PSWSDATL        LENGTH OF THIS DATA
         LA    R3,0(R2,R5)        POINT TO END OF THE TEXT AREA
         ST    R3,PSWATEXT        AND UPDATE THAT POINTER
         STC   R2,DDBPORIG        LENGTH OF THAT ORIGINAL DATA
         MVC   DDBPSUBS(4),DDBPORIG DUPLICATE POINTER, IN CASE
         BCTR  R2,0               PREPARE TO MOVE DATA
         EX    R2,MDMOVORG        MOVE DATA FROM CARD TO WORKAREA
         L     R15,PSWTRSUB       NOW CHECK FOR SUBSTITUTION
         EX    R2,MDCKSYM         ANY & IN THE STRING
         BZ    MDMOVED            NO - THIS IS ALL NEEDED
*                    HAVE A SUBSTITUTION - CALL THE SPECIALIST
         PSNMSUBS  (R3),0
         LH    R1,PSWSYNUM        NUMBER OF SUBSTITUTIONS MADE
         STH   R1,DDBPNUMS        SAVE THIS NUMBER IN THE BLOCK
         LTR   R1,R1              WERE ANY SUBSTITUTIONS MADE
         BZ    MDMOVED            NO - SKIP THE REST
         L     R1,PSWATEXT        ADDRESS WHERE IT WAS MOVED
         ST    R1,DDBPSUBS        AND SHOW LOCATION OF SUBSTITUTION
         L     R3,PSWSYEND        SUBSTITUTE SAID THIS IS END OF IT
         ST    R3,PSWATEXT        NEW END OF TEXT AREA
         SR    R3,R1              COMPUTE LENGTH OF THIS DATA
         STC   R3,DDBPSUBS        SHOW ITS LENGTH
*
MDMOVED  EQU   *
         L     R2,PSWATEXT        PLUCK BACK THE LAST TEXT POINTER
         C     R2,PSWATEXT+4      HAVE WE OVERFLOWED THIS
         BNL   MDFULL             WELL, YES
         MVC   0(4,R2),PSWHEXZ    CLEAR SOME SPACE HERE
*
*                    BUILD MESSAGE POINTERS FOR THE PROCESSORS
         SR    R5,R5              TO PROCESS LENGTH OF DATA FIELD
         IC    R5,DDBPSUBS        THUSLY
         BCTR  R5,0               HANDY FOR EXEC PROCESSING
         L     R6,DDBPSUBS        LOOK AT THE REAL VALUE
         LA    R6,0(,R6)          CLEAR THIS POINTER OUT FIRST
         LA    R5,0(R6,R5)        POINT TO LAST GOOD CHARACTER
         ST    R6,PSWIPBEG        START OF THE INPUT FOR SUBPARSER
         ST    R5,PSWIPEND        AND THE LAST GOOD CHARACTER FOR IT
*
         SR    R15,R15
         B     MDEXIT
*
MDFULL   EQU   *                  TEXT TABLE HAS FILLED UP
         PSNMERR  ERRTBLFL,(PSWATEXT+16,8)
         LA    R15,4              CODE TO QUIT THIS PROC
         B     RETURN
*
MDMOVORG MVC   0(0,R5),0(R15)     MOVE ORIG DATA TO TEXT
MDCKSYM  TRT   0(0,R5),0(R15)     CHECK FOR POSSIBLE SUBSTITUTION
         EJECT
*                    FOR EACH OF THE KEYWORD UNIQUE ROUTINES
*                   TO FOLLOW, THE POINTERS OF NOTE ARE
*              R5 - POINTS TO LAST CHARACTER OF SUBSTITUTED TEXT
*              R6 - TO FIRST CHARACTER OF SUBSTITUTED TEXT
*              R7 - POINTS TO HIS POINTER BLOCK
*              R8 - TO THE ENTRY IN DDTBL
*              R9 - TO THE BASE DD BLOCK
*                    NO OTHER POINTERS ARE PASSED.
*
DDISP    PSNMBLOK  DDS
         L     R15,PSWSUBOP       ADDRESS THE SUBTLE PARSER
         BALR  R14,R15
         LTR   R15,R15            DID IT GO WELL
         BNZ   DDSEXIT            NO - PASS IT ON
*
         CLI   PSWIPOP1,X'00'     IS THERE A FIRST PARAMETER
         BE    DDS1X              NO PARAMETER THERE
         LA    R5,PSWIPOP1        POINT TO THE POINTER
         LM    R15,R1,DDSFIRST    POINT TO THE TABLE
         LA    R6,DDBEDISP        VALUE TO OR INTO
         BAL   R14,MATCHKEY       LOOKUP THE KEY
         LTR   R15,R15            DID YOU FIND ONE
         BNZ   DDSBADV            NO - QUIT THIS STRING
DDS1X    EQU   *
*
         CLI   PSWIPOP2,X'00'     IS THERE A NEXT PARAMETER
         BE    DDS2X              NO PARAMETER THERE
         LA    R5,PSWIPOP2        POINT TO THE POINTER
         LM    R15,R1,DDSSECND    POINT TO THE TABLE
         LA    R6,DDBEDISP        VALUE TO OR INTO
         BAL   R14,MATCHKEY       LOOKUP THE KEY
         LTR   R15,R15            DID YOU FIND ONE
         BNZ   DDSBADV            NO - QUIT THIS STRING
DDS2X    EQU   *
*
         CLI   PSWIPOP3,X'00'     IS THERE A THIRD PARAMETER
         BE    DDS3X              NO PARAMETER THERE
         LA    R5,PSWIPOP3        POINT TO THE POINTER
         LM    R15,R1,DDSTHIRD    POINT TO THE TABLE
         LA    R6,DDBEDIS3        VALUE TO OR INTO
         BAL   R14,MATCHKEY       LOOKUP THE KEY
         LTR   R15,R15            DID YOU FIND ONE
         BNZ   DDSBADV            NO - QUIT THIS STRING
DDS3X    EQU   *
         B     DDSEXIT            AND THAT IS ALL OF THAT
*
DDSBADV  EQU   *                  BAD VALUE IN THE DISP
         L     R5,0(,R5)          POINTER AND LENGTH OF VALUE
         PSNMERR  ERRVALUE,((R5)),((R8),8)
         B     DDSEXIT
*
*                    MATCHUP TABLE FOR FIRST PARAMETER
DDSFIRST DC    A(DDSFSTRT,8,DDSFLAST)
DDSFSTRT DC    AL1(2,0),CL6'NEW'               DEFAULT VALUE
         DC    AL1(2,DDBEDOLD),CL6'OLD'
         DC    AL1(2,DDBEDSHR),CL6'SHR'
DDSFLAST DC    AL1(2,DDBEDMOD),CL6'MOD'
*
*                    MATCHUP TABLE FOR SECOND PARAMETER
DDSSECND DC    A(DDS2STRT,12,DDS2LAST)
DDS2STRT DC    AL1(5,DDBEDDEL),CL10'DELETE'
         DC    AL1(3,DDBEDKEP),CL10'KEEP'
         DC    AL1(3,DDBEDPAS),CL10'PASS'
         DC    AL1(4,DDBEDCAT),CL10'CATLG'
DDS2LAST DC    AL1(6,DDBEDUNC),CL10'UNCATLG'
*
*                    MATCHUP TABLE FOR THIRD PARAMETER
DDSTHIRD DC    A(DDS3STRT,8,DDS3LAST)
DDS3STRT DC    AL1(5,DDBE3DEL),CL6'DELETE'  NO STANDARD DEFAULT
         DC    AL1(3,DDBE3KEP),CL6'KEEP'
         DC    AL1(4,DDBE3CAT),CL6'CATLG'
DDS3LAST DC    AL1(5,DDBE3UNC),CL6'UNCATL'
         EJECT
*                    TO PICK OUT CERTAIN TRAITS OF A DSNAME
*                    FOR THE PRESENT THE GENERATION NUMBER
*                    OR THE MEMBER NAME, IF EITHER EXIST
*
DDSN     PSNMBLOK  DSN
         L     R5,DDBPSUBS        POINTER TO THE DSNAME AS SUBSTITUTED
         CLI   0(R5),C'&&'        DOES DSN SAY IT IS TEMPORARY
         BNE   *+8                NO - CARRY ON
         OI    DDBIND1,DDBI1TMP   YES - FLAG IT
         SR    R3,R3              CLEAR THE ONE FOR LENGTH
         IC    R3,DDBPSUBS        LENGTH OF THAT NAME
         BCTR  R3,0               DOWN THE TRADITIONAL ONE
         L     R15,PSWTRPAR
         EX    R3,DSNSCAN         LOOK FOR SOME PARENTHESIS
         BZ    DSNEXIT            NONE OF THE ABOVE - SKIP IT
         LA    R5,1(,R1)          POINT TO THE START OF IT
         TRT   0(9,R5),0(R15)     LOOK FOR THE ENDING )
         BZ    DSNBADSC           WELL - LOOKS LIKE A LITTLE PROBLEM
         SR    R1,R5              THIS IS THE LENGTH OF IT
         BCTR  R1,0               LESS THE ONE FOR THE MOVE
         EX    R1,DSNMBGDG        MOVE MBR NAME OF GDG NUMBER
         CLI   0(R5),C'+'         CHECK FOR A GDG
         BE    DSNGDG
         CLI   0(R5),C'-'         .
         BE    DSNGDG
         CLI   0(R5),C'0'         .
         BE    DSNGDG
*                    WHAT IS LEFT MUST BE A MEMBER NAME
         OI    DDBIND1,DDBI1MBR   DSNAME INCLUDES A MEMBER NAME
         B     DSNEXIT
*
DSNGDG   EQU   *
         OI    DDBIND1,DDBI1GDG   THIS HAS A GENERATION NUMBER
         B     DSNEXIT
*
DSNSCAN  TRT   0(0,R5),0(R15)     LOOK FOR ( AND )
DSNMBGDG MVC   DDBPMBR(0),0(R5)   MOVE NUMBER OR MBR OVER
*
DSNBADSC EQU   *
         PSNMERR  ERRISCAN,((R5),9)
         B     DSNEXIT
*
         EJECT
*                    TWO OF THE KEYWORDS - DSNAME AND VOLUME
*                    HAVE FALLEN ON DISFAVOR IN LIGHT
*                    OF THEIR SHORTER EQUIVALENTS DSN AND VOL
*
DDSNAME  PSNMBLOK  DDNM
         PSNMERR  ERRDSNAM
         BAL   R14,DDSN
         B     DDNMEXIT
*
*
DVOLUME  PSNMBLOK  DVLM
         PSNMERR  ERRVOLUM
         BAL   R14,DVOL
         B     DVLMEXIT
         EJECT
*                    TO EXAMINE THE VALUES IN THE UNIT FIELD
*                    WITH AN EYE TOWARD SPECIAL SUBSTITUTIONS
*
DUNIT    PSNMBLOK  DUN
         L     R15,PSWSUBOP       ADDRESS THE SUBTLE PARSER
         BALR  R14,R15
         LTR   R15,R15            DID IT GO WELL
         BNZ   DUNEXIT            NO - PASS IT ON
*
         CLI   PSWIPOP1,X'00'     IS THERE A FIRST PARAMETER
         BE    DUN1X              NO PARAMETER THERE
         LA    R5,PSWIPOP1        POINT TO THE POINTER
         LM    R15,R1,DUNFIRST    POINT TO THE TABLE
         LA    R6,DDBUNIT         VALUE TO OR INTO
         BAL   R14,MATCHKEY       LOOKUP THE KEY
         LTR   R15,R15            DID YOU FIND ONE
         BNZ   DUNBADV            NO - QUIT THIS STRING
DUN1X    EQU   *
*                 PROCESS PARALLEL OR MULTIPLE REQUESTS
         CLI   PSWIPOP2,X'00'     IS THERE A 2ND PARAMETER
         BE    DUN2X              NO - END OF THE SECOND PARAMETER
         L     R1,PSWIPOP2        PICK UP THAT POINTER
         CLI   0(R1),C'P'         CHECK FOR PARALLEL PROCESSING
         BNE   *+12
         OI    DDBUNIT,DDBUPARA   SHOW THE PARALLEL MOUNT
         B     DUN2X
         OI    DDBIND1,DDBI1MUN   IS A MULTI-UNIT REQUEST
DUN2X    EQU   *
*
         CLI   PSWIPOP3,X'00'     IS THERE A THIRD OPERAND
         BE    DUN3X              NO - SKIP THIRD
         OI    DDBIND1,DDBI1DEF   SHOW DEFERRED MOUNT REQUEST
DUN3X    EQU   *
         B     DUNEXIT
*
DUNBADV  EQU   *
         L     R1,0(,R5)          PICK UP LENGTH AND VALUE
         PSNMERR  ERRVALUE,((R1)),((R8),8)
         B     DUNEXIT            DONE PROCESSING THIS ENTRY....
*                    MATCHUP TABLE FOR FIRST PARAMETER
DUNFLENG EQU   8                  LENGTH OF AN ENTRY
DUNFIRST DC    A(*+12,DUNFLENG,DUNFLAST)
         DC    AL1(5,DDBUSDAV),CL6'SYSDAV'
         DC    AL1(4,DDBUSYSD),CL6'SYSDA'
         DC    AL1(5,00),CL6'SYSVIO'      JUST IGNORE THIS ONE
         DC    AL1(2,00),CL6'VIO'         JUST IGNORE THIS ONE
         DC    AL1(5,DDBUTP62),CL6'TAPE62'
         DC    AL1(5,DDBUTPDD),CL6'TAPEDD'
         DC    AL1(3,DDBUTAPE),CL6'TAPE'
         DC    AL1(3,DDBUREF),CL6'REF='
         DC    AL1(3,0),CL6'AFF='           JUST FORGET ABOUT THIS
         DC    AL1(3,DDBUSYSD),CL6'PROD'                            NTL
         DC    AL1(3,DDBUHARD),CL6'TEST'                            NTL
         DC    AL1(3,DDBUSYSD),CL6'WORK'                            NTL
         DC    AL1(5,DDBUHARD),CL6'3330-1'
         DC    AL1(3,DDBUHARD),CL6'3350'
         DC    AL1(4,DDBUHARD),CL6'3330V'
         DC    AL1(3,DDBUHARD),CL6'3330'
DUNFLAST EQU   *-DUNFLENG
         EJECT
*                    TO BREAK UP THE VOLUME REQUEST JUST IN
*                    CASE SOMETHING OF INTEREST IS INCLUDED
DVOL     PSNMBLOK  DVL
         L     R15,PSWSUBOP       ADDRESS THE SUBTLE PARSER
         BALR  R14,R15
         LTR   R15,R15            DID IT GO WELL
         BNZ   DVLEXIT            NO - PASS IT ON
*
         CLI   PSWIPOP1,X'00'     IS THERE A FIRST PARAMETER
         BE    DVL1X              NO PARAMETER THERE
         L     R5,PSWIPOP1        POINT TO THE DATA FIELD
         CLC   DVLSER,0(R5)       CHECK FOR VOLUME
         BE    DVLHASER
         CLC   DVLREF,0(R5)       AND FOR REF
         BE    DVLHAREF
         OI    DDBVOL,DDBVPRIV
DVL1X    EQU   *
*
         CLI   PSWIPOP2,X'00'
         BE    DVL2X              NO PARAMETER THERE
         L     R5,PSWIPOP2        POINT TO THE DATA FIELD
         CLC   DVLSER,0(R5)       CHECK FOR VOLUME
         BE    DVLHASER
         CLC   DVLREF,0(R5)       AND FOR REF
         BE    DVLHAREF
         OI    DDBVOL,DDBVRET
DVL2X    EQU   *
*
         CLI   PSWIPOP3,X'00'
         BE    DVL3X              NO PARAMETER THERE
         L     R5,PSWIPOP3        POINT TO THE DATA FIELD
         CLC   DVLSER,0(R5)       CHECK FOR VOLUME
         BE    DVLHASER
         CLC   DVLREF,0(R5)       AND FOR REF
         BE    DVLHAREF
         OI    DDBVOL,DDBVSEQ    VOLUME SEQUENCE NUMBER GIVEN
DVL3X    EQU   *
*
         CLI   PSWIPOP4,X'00'     IS THERE A FIRST PARAMETER
         BE    DVL4X              NO PARAMETER THERE
         L     R5,PSWIPOP4        POINT TO THE DATA FIELD
         CLC   DVLSER,0(R5)       CHECK FOR VOLUME
         BE    DVLHASER
         CLC   DVLREF,0(R5)       AND FOR REF
         BE    DVLHAREF
         OI    DDBVOL,DDBVCNT     A VOLUME COUNT GIVEN  -- WOW
DVL4X    EQU   *
*
         CLI   PSWIPOP5,X'00'     IS THERE STILL ANOTHER ONE
         BE    DVLEXIT            NO PARAMETER THERE
         L     R5,PSWIPOP5        POINT TO THE DATA FIELD
         CLC   DVLSER,0(R5)       CHECK FOR VOLUME
         BE    DVLHASER
         CLC   DVLREF,0(R5)       AND FOR REF
         BE    DVLHAREF
         PSNMERR  ERRVALUE,((R5)),((R8),8)
         B     DVLEXIT            THAT WAS JUST TOO MANY ENTRIES
*
DVLHASER EQU   *                  HAVE A VOL= PARAMETER
         OI    DDBVOL,DDBVSER     SHOW THE VOLSER ENTERED
         B     DVLEXIT            WELL, THAT WIPES THAT OUT
*
DVLHAREF EQU   *                  HAVE A VOL=REF CODED
         OI    DDBVOL,DDBVREF     SO INDICATE THAT ENTRY
         B     DVLEXIT            AND QUIT - LAST ONE ALLOWED
*
DVLSER   DC    C'SER='
DVLREF   DC    C'REF='
         EJECT
*                    TO DEFINE THE SPACE REQUEST IN EDITABLE TERMS
*                    SINCE THIS IS QUITE AN INTERESTING SUBJECT
*
DSPACE   PSNMBLOK  DSP
         L     R15,PSWSUBOP       THE SUB-PARSER - VERY DETAILED
         BALR  R14,R15
         LTR   R15,R15
         BNZ   DSPEXIT            SUB-PARSER FOUND A PROBLEM
*
         LA    R5,PSWIPOP1        POINT TO THE FIRST PARAMETER
         LM    R15,R1,DSPTYPE     POINT TO OUR OWN TABLE
         LA    R6,DDBSPKEY        AND OUR INDICATOR
         BAL   R14,MATCHKEY
         LTR   R15,R15
         BZ    DSPTX              FOUND THIS ONE JUST FINE
         IC    R15,PSWIPOP1       IT MUST BE A BLOCKSIZE, THEN
         L     R14,PSWIPOP1
         BCTR  R15,0
         EX    R15,DSPPACK        AND CAPTURE THE NUMERIC DATA
         CVB   R1,WKDOUBL
         STH   R1,DDBSPBLK        AND SAVE THIS DATA
         OI    DDBSPKEY,DDBSPKBK  SHOW HOW ALLOCATED
DSPTX    EQU   *                  FIRST PARAMETER DONE
*
         LA    R5,PSWIPOP2        POSSIBLY POINT TO NEXT OPERAND
         CLI   PSWIPOP2,X'FF'     IS IT SUB-STRINGED
         BNE   *+8                NO - CARRY ON
         LA    R5,PSWIPSB1        YES - POINT TO FIRST OF SUBSTRING
         SR    R15,R15            RECLEAR THE REGISTER
         IC    R15,0(,R5)         PICK UP LENGTH OF THIS ONE
         BCTR  R15,0
         L     R14,0(,R5)         AND POINT TO THE FIELD
         EX    R15,DSPPACK        CAPTURE THE NUMERICS
         CVB   R1,WKDOUBL
         ST    R1,DDBSPPRI        THIS IS THE PRIMARY ALLOCATION
         CLI   PSWIPOP2,X'FF'     WHICH ARE WE WORKING ON, NOW
         BNE   DSPQX              SINGLE VALUE - DONE WITH QUANTITY
         CLI   PSWIPSB2,X'00'     IS THERE A SECOND PARAMETER
         BE    DSPQ2X             NO - ON TO THE THIRD
         IC    R15,PSWIPSB2       LOOK AT THE SECONDARY
         BCTR  R15,0
         L     R14,PSWIPSB2
         EX    R15,DSPPACK
         CVB   R1,WKDOUBL         HAVE SPACE IN COMPUTABLE FORMAT
         ST    R1,DDBSPSEC        AND STORED AWAY
DSPQ2X   EQU   *
*
         CLI   PSWIPSB3,X'00'     CHECK FOR DIRECTORY ALLOCATION
         BE    *+8                NO THIRD PARAMETER
         OI    DDBSPKEY,DDBSPPDS  ALLOCATED AS A PDS (OR IS)
DSPQX    EQU   *                  END OF THE QUANTITY CHECKOUT
*                   CHECK FOR POSITIONAL KEYWORDS, NOW
         CLI   PSWIPOP3,X'00'
         BE    *+8
         OI    DDBSPKEY,DDBSPKRL  RELEASE
         CLI   PSWIPOP4,X'00'
         BE    *+8
         OI    DDBSPKEY,DDBSPKCT  CONTIGUOUS
         CLI   PSWIPOP5,X'00'
         BE    *+8
         OI    DDBSPKEY,DDBSPKRD  ROUND
         B     DSPEXIT            AND THAT IS ALL OF THAT
*
DSPPACK  PACK  WKDOUBL,0(0,R14)   TO CAPTURE NUMERIC FIELDS
*                    MATCHUP TABLE FOR FIRST PARAMETER
DSPTYPE  DC    A(DSPTSTRT,8,DSPTLAST)
DSPTSTRT DC    AL1(2,DDBSPKTK),CL6'TRK'
         DC    AL1(2,DDBSPKCY),CL6'CYL'
DSPTLAST DC    AL1(4,DDBSPKAB),CL6'ABSTR'
         EJECT
*                    BREAK UP THE DCB ENTRY TO DEFINE THE
*                    CHARACTERISTICS OF THIS PROBABLY NEW FILE
*
DDCB     PSNMBLOK  DDCB
         L     R15,PSWSUBOP       ADDRESS THE SUBTLE PARSER
         BALR  R14,R15
         LTR   R15,R15            DID IT GO WELL
         BNZ   DDCBEXIT           NO - PASS IT ON
         LA    R5,PSWIPOP1        POINT TO POINTERS OF DATA
*
DDCBLOOP EQU   *
         LM    R15,R1,DDCBKEYS    LIST OF POSSIBLE KEYWORDS
         LA    R6,DDBDCB          BYTE TO CHANGE, POSSIBLY
         BAL   R14,MATCHKEY       FIND THE PROPER ENTRY
         LTR   R15,R15            CHECK - WAS IT FOUND
         BNZ   DDCBBADK           CHECK FOR MODEL DSCB....
         SR    R4,R4              PREPARE POINTERS TO THE DATA
         IC    R4,0(,R5)          LENGTH OF THIS FULL ENTRY
         IC    R15,0(,R2)         LENGTH OF THE KEYWORD PART OF IT
         SR    R4,R15             LENGTH+1 OF THE DATA OF KEYWORD
         SH    R4,PSWHALF2        LENGTH-1 OF THAT DATA
         L     R3,0(,R5)          ADDRESS THE FULL DATA
         LA    R3,1(R15,R3)       POINT TO OPERAND OF KEYWORD
*                   R3 NOW POINTS TO DATA, R4 HAS ITS LENGTH-1
         L     R15,12(,R2)        ADDRESS OF THE PROCESSING ROUTINE
         BALR  R14,R15
DDCBRETN EQU   *                  SOME ROUTINES SIMPLY COME TO HERE
         LA    R5,4(,R5)          ON TO THE NEXT KEYWORD
         CLI   0(R5),X'00'        IS THERE STILL ANOTHER
         BNE   DDCBLOOP           BACK FOR MORE
         B     DDCBEXIT           DONE WITH THE DCB ENTRY
DDCBBADK EQU   *                  KEY NOT FOUND IN TABLE
         CLC   PSWIPOP1(4),0(R5)  IS THIS THE FIRST ENTRY
         BE    DDCBMODL           YES - ASSUME IT IS MODEL DSCB NAME
         L     R1,0(,R5)          PICK UP POINTER AND LENGTH
         PSNMERR  ERRVALUE,((R1)),((R8),8)
         B     DDCBRETN           WRONG - BACK TO TRY NEXT ONE
*
DDCBMODL EQU   *
         OI    DDBDCB,DDBDMODL    SHOW IT EXISTS
         B     DDCBRETN           AND BACK FOR NEXT ONE
*
*                    THE POINTER TABLE FOR DCB KEYWORDS
DDCBKEYS DC    A(DDCBSTRT,16,DDCBLAST)
DDCBSTRT DC    AL1(7,0),CL10'BLKSIZE=  ',A(DDCBBLK)
         DC    AL1(3,0),CL10'DEN=      ',A(DDCBDEN)
         DC    AL1(5,0),CL10'DSORG=    ',A(DDCBDSOR)
         DC    AL1(5,0),CL10'LRECL=    ',A(DDCBLREC)
         DC    AL1(5,0),CL10'RECFM=    ',A(DDCBRECF)
         DC    AL1(5,0),CL10'BUFNO=    ',A(DDCBBUFN)
         DC    AL1(6,0),CL10'CYLOFL=   ',A(DDCBRETN)   IGNORE THIS ONE
         DC    AL1(6,DDBDKEYL),CL10'KEYLEN=   ',A(DDCBRETN)
         DC    AL1(5,DDBDOPTC),CL10'OPTCD=    ',A(DDCBRETN)
         DC    AL1(3,DDBDRKP),CL10'RKP=      ',A(DDCBRETN)
         DC    AL1(5,DDBDEROP),CL10'EROPT=    ',A(DDCBRETN)
DDCBLAST DC    AL1(5,DDBDTRTC),CL10'TRTCH=    ',A(DDCBRETN)
*
*                    PROCESSING ROUTINES FOR THE KEYWORDS
*                    OF DCB
*
DDCBDSOR EQU   *
         CLC   0(2,R3),=C'IS'     IS THE DSORG MARKED IS
         BNER  R14                NO - SKIP IT
         OI    DDBDCB,DDBDIS      MARK AS ISAM
         BR    R14
*
DDCBBLK  EQU   *                  PICK UP THE BLOCKSIZE
         EX    R4,DDCBPACK        PUT BLOCKSIZE INTO DOUBLE
         CVB   R1,WKDOUBL
         STH   R1,DDBBLKSZ
         BR    R14
*
DDCBBUFN EQU   *                  NUMBER OF BUFFERS
         EX    R4,DDCBPACK        PUT BLOCKSIZE INTO DOUBLE
         CVB   R1,WKDOUBL
         STH   R1,DDBBUFNO
         BR    R14
*
DDCBDEN  EQU   *                  THE DENSITY SPECIFIED
         EX    R4,DDCBPACK        PUT BLOCKSIZE INTO DOUBLE
         CVB   R1,WKDOUBL
         STC   R1,DDBDEN
         BR    R14
*
DDCBLREC EQU   *                  PICK UP THE LOGICAL RECORD LENGTH
         EX    R4,DDCBPACK        PUT BLOCKSIZE INTO DOUBLE
         CVB   R1,WKDOUBL
         STH   R1,DDBLRECL
         BR    R14
*
DDCBRECF EQU   *                  THE RECORD FORMAT
         MVC   DDBRECFM,PSWBLANK  CLEAR THE FIELD FIRST
         EX    R4,DDCBMOVO
         BR    R14
*
DDCBMOVO MVC   DDBRECFM(0),0(R3)  MOVE TO RECFM
DDCBPACK PACK  WKDOUBL,0(0,R3)    CAPTURE NUMERIC DATA
         EJECT
*                    TO CORRELATE THE DATA FROM THE INDIVIDUAL
*                    KEYWORDS TO DESCRIBE SPECIAL SITUATIONS
*
XCORELAT PSNMBLOK  XCR
         PSNMFDD   EDSN,XCRNODSN WAS A DSN ENTERED
         B     XCRDSNX
XCRNODSN EQU   *
         OI    DDBIND1,DDBI1TMP   TERM DSN - NO DSNAME
XCRDSNX  EQU   *
*
         B     XCREXIT
         EJECT
*                    THE INTERNAL LOOKUP ROUTINE CALLED BY MANY OF
*                    THE PROCESSORS TO FIND THE PROPER KEYWORD
*                    GIVEN THE PROPER POINTERS TO CHOICES
*                    R15-R1 POINT TO TABLE OF KEYWORDS
*                    R6 POINTS TO BYTE TO OI ON A HIT
*                    R5 POINTS TO WORD OF LENGTH AND POINTER
*                               TO THE FOUND WORD
*
MATCHKEY PSNMBLOK  MKEY
         SR    R2,R2              CLEAR THE LENGTH REGISTER
         L     R14,0(,R5)         PICK UP POINTER TO VALUE
         LTR   R14,R14            IS THER ONE
         BZ    MKEYMISS           NO - PASS CODE FOR A MISS
MKEYLOOP EQU   *
         IC    R2,0(,R15)         LENGTH OF THIS POSSIBILITY
         EX    R2,MKEYCLC         IS THIS THE ONE
         BE    MKEYHIT            YES - APPLAUSE
         BXLE  R15,R0,MKEYLOOP    GO BACK AND TRY AGAIN
MKEYMISS EQU   *                  NOT IN THIS LIST
         LA    R15,4              CODE FOR THE FAILURE
         B     MKEYEXIT
MKEYHIT  EQU   *
         OC    0(1,R6),1(R15)     SET THE INDICATOR
         LR    R2,R15             SAVE THE TABLE ENTRY
         SR    R15,R15
         B     MKEYEXIT
MKEYCLC  CLC   0(0,R14),2(R15)    FIND THE KEYWORD
         EJECT
         PSNMDDLS  TYPE=EQU
         EJECT
         PSNMDD
         EJECT
         PSNMEXEC
*
*
*
WORKAREA DSECT
         DS    18F
WKDOUBL  DS    D                  WORKAREA FOR THE CVB PROCESSING
WKDDTAB  DS    3F                 SAVE POINTERS TO DD TABLE
         PSNMBLOK  RENT=REGS
WKLENG   EQU   *-WORKAREA
         EJECT
         PSNMWORK
         END
