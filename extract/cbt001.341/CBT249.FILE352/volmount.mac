*          DATA SET VOLMOUNT   AT LEVEL 003 AS OF 03/24/81
*          DATA SET MSSALLOC   AT LEVEL 001 AS OF 04/27/78
VOLMOUNT TITLE 'SUBROUTINE FOR DYNAMIC ALLOCATION OF A DISK VOLUME  V1MX
               0  K TRUE   '
*.....................................................................*
*.                                                                   .*
*.  SUBROUTINE - VOLMOUNT                                            .*
*.                                                                   .*
*.  PURPOSE - TO INVOKE DYNAMIC ALLOCATION TO MOUNT A DASD VOLUME    .*
*.                                                                   .*
*.  ON ENTRY: NORMAL OS CONVENTIONS (R15)=EPA, (R13)=SAP, (R1)=PARM  .*
*.                                                                   .*
*.  (R1) -->  ×---------------×                                      .*
*.            × 00× A(VOLSER) ×     VOLSER = CL6                     .*
*.            ×---------------×                                      .*
*.            × 00× A(UNITYP) ×     UNITYP = CL4                     .*
*.            ×---------------×                                      .*
*.            × 80×A(UNITNAME)×     UNITNAME=CL8                     .*
*.            ×---------------×                                      .*
*.                                                                   .*
*.                                                                   .*
*.  ON RETURN:  (R15) =  0 -->  VOL ALLOCATED                        .*
*.                                                                   .*
*.              (R15) = 16 -->  UNABLE TO ALLOC VOLUME               .*
*.                              MESSAGE POSTED WITH WTO              .*
*.                                                                   .*
*.  ERROR OUTPUT-VIA WTO MESSAGES FOR SVC99 ERRORS                   .*
*.                                                                   .*
*.  K TRUE   V1M0   14 APR 78 - MSSALLOC                             .*
*.  K TRUE   V1M0   18 MAY 81 - VOLMOUNT  (FOR BKUPUTIL)             .*
*.....................................................................*
         SPACE 2
VOLMOUNT START 0
*
         SAVE  (14,12),,VOLMOUNT-&SYSDATE-&SYSTIME
         LR    R12,R15                 INIT BASE REG
         USING VOLMOUNT,R12
         LA    R15,SAVEAREA            INIT SAVE AREA
         ST    R13,4(R15)              BACKWARD CHAIN
         ST    R15,8(R13)              FORWARD CHAIN
         LR    R13,R15                 POINT TO CURRENT SAVE AREA
         LR    R11,R1                  SAVE PARM LIST POINTER
         EJECT
*.....................................................................*
*.       LOAD VOLSER AND       DO DYNAMIC ALLOCATION OF VOLUME       .*
*.....................................................................*
*
         LM    R4,R5,0(R11)          LOAD ADDR OF VOLSER,UNITYP
         MVC   VOLSER,0(R4)          MOVE IN VOLSER
         MVC   DDNAME+2(6),0(R4)     SAVE VOLSER IN DDNAME         FCI*
         MVC   DDNAME(2),=C'DD'      SET UP DDNAME LIKE BKUPUTIL   FCI*
*                                       WANTS TO SEE IT            FCI*
         MVC   UNITYP,0(R5)          SAVE UNIT TYPE IN OUR AREA    FCI*
         XC    S99ERC(4),S99ERC   CLEAR OUT ALLOCATE ERC/INFO
         XC    RETCD,RETCD        CLEAR OUT RETURN CODE TOO        FCI*
         SPACE
LOOKUP   L     R4,DEVNADDR        GET ADDRESS OF DEVNAMET          FCI*
         LTR   R4,R4              SEE WHATS COOKIN'                FCI*
         BP    SRCHDEV            ALREADY LOADED...PROCEED         FCI*
         BZ    LOADDEV            NOT THERE..LOAD IT               FCI*
NODEVNAM WTO   MF=(E,NODEVMSG)
         ABEND 104,DUMP                                            FCI*
LOADDEV  LOAD  EP=DEVNAMET                                         FCI*
         LTR   R15,R15            DID IT WORK?                     FCI*
         BNZ   NODEVNAM                                            FCI*
         ST    R0,DEVNADDR        YEP..SAVE ADDRESS                FCI*
         EJECT
*---------------------------------------------------------------------*
*        SEARCH THE DEVNAME TABLE FOR DEVICE TYPE                     *
*---------------------------------------------------------------------*
         SPACE 2
SRCHDEV  L     R1,DEVNADDR        GET ADDRESS OF TABLE START       FCI*
         L     R2,0(R1)           R2=NUMBER OF ENTRIES IN DEVNAMET FCI*
         LA    R1,4(R1)           (R1)= ADDR OF FIRST ENTRY        FCI*
DEVLOOP  CLC   UNITYP,8(R1)       CHECK THE TYPE                   FCI*
         BE    DEVFIND            GOTCHA....                       FCI*
         LA    R1,12(R1)          BUMP TO NEXT ENTRY               FCI*
         BCT   R2,DEVLOOP           AND GRIND THROUGH THE COMPARES FCI*
*                                                                  FCI*
         UNPK  MSGUTYP(9),UNITYP(5) MAKE UNIT TYPE                 FCI*
         NC    MSGUTYP,HEXMASK        INTO PRETTY                  FCI*
         TR    MSGUTYP,HEXTAB             HEX BEFORE WE ABEND      FCI*
         MVI   MSGUTYP+8,C' '                                      FCI*
*                                                                  FCI*
         WTO   MF=(E,NOUNTMSG)
         ABEND 105,DUMP                                            FCI*
         SPACE 1                                                   FCI*
DEVFIND  MVC   UNITNAME,0(R1)     SAVE OFF THE TYPE OF UNIT        FCI*
         L     R15,8(R11)         PICK UP ADDRESS OF USER UNITNAME FCI*
         MVC   0(8,R15),0(R1)     AND PUT IT AWAY FOR USER         FCI*
         SPACE 1                                                   FCI*
*                                                                  FCI*
* LOOK OVER TIOT TO SEE IF WE CAN GET BY WITH NOT ALLOCATING THE   FCI*
* UNIT (DONE HERE SO UNITNAME CAN ALWAYS BE RETURNED TO CALLER)    FCI*
*                                                                  FCI*
GETTIOT  L     R4,16              (R4)= ADDR CVT                   FCI*
         L     R4,0(R4)           (R4)= ADDR TCB:TCB:ASCB:ASCB     FCI*
         L     R4,4(R4)           (R4)= ADDR MY TCB                FCI*
         L     R5,12(R4)          (R5)= ADDR OF MY TIOT            FCI*
         LA    R5,24(R5)          SKIP OVER TIOT HEADER            FCI*
TIOTSRCH CLC   0(4,R5),=F'0'      END OF TIOT?                     FCI*
         BE    DOALLOC            YEP....GOT TO ALLOC IT           FCI*
         CLC   DDNAME,4(R5)       IS THIS OUR DDNAME?              FCI*
         BE    RETURN             YES....NO WORK TO DO..........   FCI*
         SR    R2,R2              RATS..GOT TO LOOK SOME MORE      FCI*
         IC    R2,0(R5)           GET LENGTH TO NEXT ENTRY         FCI*
         LA    R5,0(R2,R5)            BUMP AND                     FCI*
         B     TIOTSRCH                   GRIND                    FCI*
         EJECT
*---------------------------------------------------------------------*
*       ESTABLISH SVC99 RB WITH UNITNAME AND LENGTH..INVOKE SVC99     *
*---------------------------------------------------------------------*
         SPACE 2
DOALLOC  LA    R1,8               FIND LENGTH OF UNITNAME          FCI*
         LA    R2,UNITNAME        FOR A MAXIMUM OF 8 CHARS         FCI*
BLNKLOOP CLI   0(R2),C' '         BLANK?                           FCI*
         BE    BLNKFIND             YEP..SAVE LENGTH               FCI*
         LA    R2,1(R2)           NO..INCR POINTER                 FCI*
         BCT   R1,BLNKLOOP           AND CHK AGAIN                 FCI*
BLNKFIND LA    R1,UNITNAME        FIGURE OUT                       FCI*
         SR    R2,R1                LENGTH AND                     FCI*
         STCM  R2,B'0011',UNITLEN     POKE IT AWAY FOR DYNALLOC    FCI*
         LA    R1,S99RBPTR        LOAD ADDR OF SVC99 'ALLOCATE'
         DYNALLOC                  GO GET VTOC OF VOLSER
*
         LTR   R15,R15            ANY PROBLEMS
         BZ    RETURN             NO-> JUST QUIETLY RETURN
         EJECT
*.....................................................................*
*.       FORMULATE TEXT FOR SVC99 ALLOCATE FAILURE                   .*
*.....................................................................*
         SPACE 3
CANTALLC DS    0H
         MVC   M2VOL,VOLSER       MOVE VOLSER INTO MESSAGE
         CVD   R15,DBLWORD        CONVERT SVC 99 RETURN CODE
         MVC   M2RC,=X'40202020'   TO NICE PRINTABLE DECIMAL
         ED    M2RC,DBLWORD+6
*
         UNPK  M2ERC(5),S99ERC(3)   CONVERT DYNAM ALLOC ERR CODE
         NC    M2ERC,HEXMASK         TO PRINTABLE HEXADECIMAL
         TR    M2ERC,HEXTAB          AND FIX IT UP PRETTY
         MVI   M2ERC+4,C' '
*
         UNPK  M2INFO(5),S99INFO(3) CONVERT DYNAM ALLOC INFO
         NC    M2INFO,HEXMASK        CODE TO PRNTABLE HEX
         TR    M2INFO,HEXTAB         AND FIX IT UP PRETTY
         MVI   M2INFO+4,C' '
*
         WTO   MF=(E,EMSG2)         WRITE OUT ERROR MESSAGE
         MVC   RETCD,=F'16'         SET RETURN CODE
         SPACE 2
*.....................................................................*
*.       RETURN TO CALLING PROGRAM                                   .*
*.....................................................................*
         SPACE
RETURN   L     R15,RETCD               LOAD ADDRESS OF TIOT ENTRY
         L     R13,SAVEAREA+4          GET PRIOR SAVE AREA ADDRESS
         L     R14,12(R13)             LOAD RETURN ADDRESS
         LM    R2,R12,28(R13)          RESTORE REGS..LEAVE R1 INTACT
         BR    R14                     AND RETURN
         EJECT
*.....................................................................*
*.       VARIABLES                                                   .*
*.....................................................................*
         SPACE 2
SAVEAREA DC    18F'0'
DBLWORD  DC    D'0'               DOUBLE WORD WORK AREA
RETCD    DC    F'0'
DEVNADDR DC    F'0'                                                FCI*
UNITYP   DC    F'0'                                                FCI*
         SPACE 2
*.....................................................................*
*.       CONSTANTS                                                   .*
*.....................................................................*
         SPACE 2
HEXTAB   DC    C'0123456789ABCDEF'
HEXMASK  DC    X'0F0F0F0F0F0F0F0F'
         SPACE 2
*.....................................................................*
*.       EQUATES                                                     .*
*.....................................................................*
         SPACE 2
R0       EQU   0
R1       EQU   1             PARM LIST POINTER
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12            BASE REGISTER
R13      EQU   13            SAVE AREA
R14      EQU   14
R15      EQU   15            ON RETURN=0 OR PTR TO TIOT ENTRY
*
         EJECT
*.....................................................................*
*.       MESSAGES                                                    .*
*.....................................................................*
         SPACE 3
EMSG2    WTO   'VOLMOUNT -DYNAM ALLOC OF VOL=XXXXXX FAILED: R15= XXXX  X
                INFO= XXXX  DARC= XXXX ',                              X
               ROUTCDE=(11),MF=L
         SPACE
         ORG   EMSG2+33
M2VOL    DC    CL6' '
         ORG   EMSG2+53
M2RC     DC    CL4' '
         ORG   EMSG2+65
M2INFO   DC    CL4' '
         ORG   EMSG2+77
M2ERC    DC    CL4' '
         ORG
NODEVMSG WTO   'VOLMOUNT-DEVNAMET UNAVAILABLE--ABENDING',MF=L      FCI*
NOUNTMSG WTO   'VOLMOUNT-UNITYPE XXXXXXXX NOT FOUND --ABENDING',MF=L
MSGUTYP  EQU   NOUNTMSG+21,8                                       FCI*
*
         EJECT
*.....................................................................*
*.       DYNAMIC ALLOCATION REQUEST BLOCK TO ALLOC VTOC OF MSS VOL   .*
*.....................................................................*
         SPACE 2
         DS    0F                 GET FULLWORD BOUNDARY
S99RBPTR DC    X'80',AL3(S99RB)   THE POINTER TO THE MESS..
*
S99RB    DC    FL1'20'            LENGTH OF RB IN BYTES = 20
         DC    XL1'01'            VERB CODE=X'01'..ALLOC BY DSN
         DC    AL2(0)             FLAGS1..NO OPTIONS
S99ERC   DC    XL2'0000'          ERROR CODE
S99INFO  DC    XL2'0000'          INFO CODE
         DC    AL4(S99TXPTR)      ADDRESS OF TEXT UNITS
         DC    XL4'00'            RESERVED
         DC    XL4'00'            FLAGS2
         SPACE
S99TXPTR DC    AL4(DDTU)          ADDR OF DDNAME TEXT UNIT
         DC    AL4(VOLTU)         ADDR OF VOLSER TEXT UNIT
         DC    AL4(UNITTU)        ADDR OF UNIT NAME TEXT UNIT
         DC    X'80',AL3(DISPTU)  ADDR OF DISP    TEXT UNIT
         SPACE
DDTU     DC    X'0001',X'0001',FL2'8'
DDNAME   DC    CL8'DDVOLSER'                                       FCI*
         SPACE
VOLTU    DC    X'0010',X'0001',FL2'6'
VOLSER   DC    CL6' '                            MSS VOLUME SER
         SPACE
UNITTU   DC    X'0015',X'0001'                   MSS UNIT TYPE
UNITLEN  DC    FL2'5'                   LENGTH OF UNIT NAME
UNITNAME DC    CL8'3330V'               UNIT NAME AREA
         SPACE
DISPTU   DC    X'0004',X'0001',FL2'1',X'08'      SHR
*.....................................................................*
*.       LITERAL POOL                                                .*
*.....................................................................*
         SPACE 2
         LTORG
         END
