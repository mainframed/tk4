*          DATA SET Q3CJHIST   AT LEVEL 001 AS OF 04/01/83
CJHIST   QSTART 'QUEUE COMMAND - PRINT JOB HISTORY/SOURCE    '    UF030
         GBLB  &QSP           SP2 FLAG                            UF030
         GBLB  &QNERDC        NERDC FLAG                          UF030
         GBLB  &QACF2         ACF2 FLAG                           INTEL
         GBLC  &ACF2JCT       ACF2 3.1.3                          INTEL
         AIF   ((NOT &QACF2) OR (NOT &QSP)).$$SKP0                INTEL
         #ACFJES2   ,         ESTABLISH OFFSETS TO USE            INTEL
.$$SKP0  ANOP   ,                                                 INTEL
         USING QDISPLAY,R10   BASE REG FOR DISPLAY WORK AREA      INTEL
         L     R10,QVDSPL     LOAD BASE REG                       INTEL
         USING WORK,R13       BASE REG FOR LOCAL WORK AREA        INTEL
***********************************************************************
*                                                                 INTEL
*   PROCESS THE HISTORY COMMAND                                   INTEL
*                                                                 INTEL
*  AUTHOR: KEN TRUE, INTEL CORP                                   INTEL
*  MODS: (1) - ADDED ACF2 3.1.3 SUPPORT FOR JES2 SP1.3   2 MAR 83 INTEL
*                                                                 INTEL
***********************************************************************
STARTIT  L     R15,=V(FINDJOB) GO FIND JOB/JCT/JQE                INTEL
         BALR  R14,R15                                            INTEL
         L     R9,QCJCTA      GET ADDRESS OF JCT                  INTEL
         USING JCTSTART,R9    ADDRESSABILITY                      INTEL
         SPACE 1                                                  INTEL
         AIF   ((NOT &QACF2) OR (NOT &QSP)).$$SKP1                INTEL
         ICM   R8,15,&ACF2JCT      TEST, GET ACF2 AREA OFFSET     INTEL
         LA    R15,JCTSTART-JCTDSECT  FIND LENGTH OF BUFFER AREA  INTEL
         SR    R8,R15              DECREMENT ACF2 POINTER         INTEL
         LA    R8,0(R9,R8)         CALCULATE ADDRESS              INTEL
         USING #ACFJCTX,R8         ADDRESSING                     INTEL
.$$SKP1  ANOP  ,                                                  INTEL
         SPACE 2                                                  INTEL
FORMATIT MVC   QDHLINE,HEADER                                     INTEL
         MVC   QDMSG,QBLANK   BLANK OUT LINE                      INTEL
         BAL   R7,DISPLAY     GO DO THE DISPLAY                   INTEL
*                                                                 INTEL
LINE3    MVC   QDMSG,HEAD3    MOVE IN LINE MASK                   INTEL
         MVC   JOBNUMB,JCTJOBID     JOB ID                        INTEL
         MVC   JOBNAME,JCTJNAME     JOBNAME                       INTEL
         MVC   JOBSCE,JCTINDEV      INPUT DEVICE                  INTEL
         MVC   BIN#,JCTROOMN        BIN NUMBER                    INTEL
         MVC   JOBCLASS,JCTJCLAS    JOB CLASS FROM JOBCARD        INTEL
         MVC   MSGCLASS,JCTMCLAS    MESSAGE CLASS                 INTEL
         MVC   NOTIFY,JCTTSUID      WHO TO CONTACT                INTEL
         BAL   R7,DISPLAY           PUT OUT LINE3                 INTEL
*                                                                 INTEL
LINE4    BAL   R7,DISPBLNK       GO PUT OUT A BLANK LINE          INTEL
*                                                                 INTEL
LINE5    MVC   QDMSG,HEAD5        MOVE IN HEADING                 INTEL
         MVC   PROCDDN,JCTPROCN   PROCLIB DDNAME                  INTEL
         LA    R15,PRTDEST                                        INTEL
         LA    R1,JCTPROUT                                        INTEL
         BAL   R7,RMTORLCL       CONVERT PRT= FIELD               INTEL
         LA    R15,PUNDEST                                        INTEL
         LA    R1,JCTPUOUT                                        INTEL
         BAL   R7,RMTORLCL       CONVERT PUN= FIELD               INTEL
         LM    R0,R1,JCTRDRON    GET READER TIME/DATE             INTEL
         LTR   R1,R1             ANYBODY (DATE) HOME              INTEL
         BZ    NODATE5                                            INTEL
         BAL   R7,TIMECONV       FORMAT IT PRETTY                 INTEL
         MVC   TIMESTMP,CDAYN    MOVE IN TO RECORD                INTEL
NODATE5  BAL   R7,DISPLAY        GO SHOW IT OFF                   INTEL
*                                                                 INTEL
LINE6    MVC   QDMSG,HEAD6        MOVE IN HEADING                 INTEL
         MVC   PROGAMER,JCTPNAME  PROGRAMMER NAME                 INTEL
         LM    R0,R1,JCTXEQON    GET XEQ START TIME/DATE          INTEL
         LTR   R1,R1             ANYBODY (DATE) HOME              INTEL
         BZ    NODATE6                                            INTEL
         BAL   R7,TIMECONV       FORMAT IT PRETTY                 INTEL
         MVC   TIMESTMP,CDAYN    MOVE IN TO RECORD                INTEL
NODATE6  BAL   R7,DISPLAY        GO SHOW IT OFF                   INTEL
*                                                                 INTEL
LINE7    MVC   QDMSG,HEAD7        MOVE IN HEADING                 INTEL
         LA    R15,CARDSIN       POINT TO POSITION                INTEL
         L     R1,JCTCARDS       GET VALUE                        INTEL
         BAL   R7,FITINUM        AND PUT IT AWAY                  INTEL
         LM    R0,R1,JCTXEQOF    GET XEQ STOP TIME/DATE           INTEL
         LTR   R1,R1             ANYBODY (DATE) HOME              INTEL
         BZ    NODATE7                                            INTEL
         BAL   R7,TIMECONV       FORMAT IT PRETTY                 INTEL
         MVC   TIMESTMP,CDAYN    MOVE IN TO RECORD                INTEL
NODATE7  BAL   R7,DISPLAY        GO SHOW IT OFF                   INTEL
*                                                                 INTEL
LINE8    MVC   QDMSG,HEAD8        MOVE IN HEADING                 INTEL
         LA    R15,LINESOUT      POINT TO POSITION                INTEL
         L     R1,JCTLINES       GET VALUE                        INTEL
         BAL   R7,FITINUM        AND PUT IT AWAY                  INTEL
         LA    R15,CARDSOUT      POINT TO POSITION                INTEL
         L     R1,JCTPUNCH       GET VALUE                        INTEL
         BAL   R7,FITINUM        AND PUT IT AWAY                  INTEL
         LM    R0,R1,JCTOUTON    GET PRT/PUN START TIME/DATE      INTEL
         LTR   R1,R1             ANYBODY (DATE) HOME              INTEL
         BZ    NODATE8                                            INTEL
         BAL   R7,TIMECONV       FORMAT IT PRETTY                 INTEL
         MVC   TIMESTMP,CDAYN    MOVE IN TO RECORD                INTEL
NODATE8  BAL   R7,DISPLAY        GO SHOW IT OFF                   INTEL
*                                                                 INTEL
         AIF   (NOT &QACF2).$SKP1                                 INTEL
LINE911  MVC   QDMSG,QBLANK     BLANK IT OUT                      INTEL
         LA    R2,4             SAY DO IT 4 TIMES                 INTEL
BLNKS    BAL   R7,DISPLAY        GO SHOW IT OFF                   INTEL
         BCT   R2,BLNKS                                           INTEL
*                                                                 INTEL
LINE12   MVC   QDMSG,HEAD12       MOVE IN HEADING                 INTEL
         BAL   R7,DISPLAY        GO SHOW IT OFF                   INTEL
*                                                                 INTEL
LINE13   BAL   R7,DISPBLNK       GO PUT OUT A BLANK LINE          INTEL
*                                                                 INTEL
LINE14   MVC   QDMSG,HEAD14       MOVE IN HEADING                 INTEL
         MVC   LOGONID,LIDLID    ACF2 LOGON ID                    INTEL
         MVC   GROUP,LIDOPER     ACF2 GROUP (INTEL FIELD)         INTEL
         MVC   NAME,LIDNAME      ACF2 USER NAME/DESCRIPT          INTEL
         MVC   PHONE,LIDPHONE    ACF2 PHONE NUMBER FOR USER       INTEL
         BAL   R7,DISPLAY        GO SHOW IT OFF                   INTEL
*                                                                 INTEL
LINE15   BAL   R7,DISPBLNK       GO PUT OUT A BLANK LINE          INTEL
*                                                                 INTEL
LINE16   MVC   QDMSG,HEAD16       MOVE IN HEADING                 INTEL
         MVC   SOURCE,ACVSRCE    ACF2 LOGICAL SOURCE              INTEL
         MVC   SUBLID,ACVSLID    ACF2 SUBMITTING LID              INTEL
         MVC   SUBPROG,ACVAPROG  ACF2 SUBMITTING PROGRAM          INTEL
         MVC   SUBPATH,ACVPATH   ACF2 SUBMITTING PATH             INTEL
         BAL   R7,DISPLAY        GO SHOW IT OFF                   INTEL
.$SKP1   ANOP                                                     INTEL
         AIF   (NOT &QNERDC).QNONER                               UF030
         MVC   QDMSG,QBLANK     BLANK IT OUT                      UF030
         LA    R2,4             SAY DO IT 4 TIMES                 UF030
         BAL   R7,DISPLAY        GO SHOW IT OFF                   UF030
         BCT   R2,*-4                                             UF030
*                                                                 UF030
         MVC   QDMSG,HEAD21       MOVE IN HEADING                 UF030
         BAL   R7,DISPLAY        GO SHOW IT OFF                   UF030
*                                                                 UF030
         BAL   R7,DISPBLNK       GO PUT OUT A BLANK LINE          UF030
*                                                                 UF030
         MVC   QDMSG,HEAD22       MOVE IN HEADING                 UF030
         MVC   HNERLID,JCTNELID  ACF2 LOGON ID                    UF030
         L     R1,JCTNEACC       GET ACCESS NUMBER                UF030
         LA    R15,HNERACC#      POINT TO TARGET AREA             UF030
         BAL   R7,FITINUM        CONVERT INTO AREA                UF030
         LH    R1,JCTNESEQ       GET SEQUENCE NUMBER              UF030
         LA    R15,HNERSEQ#      POINT TO TARGET AREA             UF030
         BAL   R7,FITINUM        CONVERT INTO AREA                UF030
         MVC   HNERHEAD,JCTOUTHD OUTPUT HEADER                    UF030
         BAL   R7,DISPLAY        GO SHOW IT OFF                   UF030
*                                                                 UF030
         MVC   QDMSG,HEAD23       MOVE IN HEADING                 UF030
         MVC   HNERPROC,JCTPROC   MOVE PROCLIB DSN                UF030
         MVC   HNERPROV,JCTPROCV  MOVE PROCLIB VOLUME             UF030
         BAL   R7,DISPLAY        GO SHOW IT OFF                   UF030
.QNONER  ANOP                                                     UF030
         SPACE 2                                                  INTEL
RETURN   QSTOP                                                    INTEL
         SPACE 2                                                  INTEL
***********************************************************************
*   LOCAL SUBROUTINE TO PUT OUT LINE VIA Q DISPLAY                INTEL
***********************************************************************
DISPBLNK MVC   QDMSG,QBLANK   CLEAR OUT MESSAGE                   INTEL
*                                                                 INTEL
DISPLAY  MVC   QDMLNG,=H'80'  SET LENGTH                          INTEL
         LA    R0,QDMSG       GET ADDRESS OF MESSAGE              INTEL
         ST    R0,QDMSGA      AND SAVE ADDRESS                    INTEL
         L     R15,=V(DISPLAY) GET ADDRESS OF MODULE FOR DISPLAY  INTEL
         BALR  R14,R15        CALL THE MOTHER                     INTEL
         BR    R7             RETURN TO MAINLINE...               INTEL
         EJECT ,                                                  INTEL
***********************************************************************
*                                                                 INTEL
* FORMAT DATE TIME  HEADING   ENTER WITH BAL R7,TIMECONV          INTEL
*   R0=TIME IN 100THS OF SECOND SINCE MIDNIGHT                    INTEL
*   R1=DATE IN 00YYDDDS FORMAT                                    INTEL
*                                                                 INTEL
* RETURNS WITH CDAYN(LEN) = DDMONYY (DDD) DAY HH:MM:SS.TH         INTEL
*                E.G.       07JUL80 (189) MON 13:45:24.56         INTEL
*                           123456789.123456789.123456789         INTEL
*                                                                 INTEL
***********************************************************************
TIMECONV MVC   MONMSK(MVCLEN),XMONMSK  INIT DATE/TIME WORK AREA   INTEL
         ST    R1,DATE                 SAVE DATE FOR LATER        INTEL
         CVD   R0,DOUBLEWD            GET TIME IN DEC 100TH/SEC   INTEL
         DP    DOUBLEWD(8),DEC6000(3) /6000 : REM IS SS.TH        INTEL
         DP    DOUBLEWD(5),DEC60(2)   /60   : REM IS MM           INTEL
         MVC   EDITWORK(L'HHMASK),HHMASK   SETUP MULT EDIT MASK   INTEL
         ED    EDITWORK(L'HHMASK),DOUBLEWD EDIT HH,MM,SS          INTEL
FINTIME  MVC   CHH(2),EDITWORK+4      MOVE IN HOURS               INTEL
         MVC   CMM(2),EDITWORK+8      MOVE IN MM                  INTEL
         MVC   CSS(5),EDITWORK+12     MOVE IN SS.TH               INTEL
*                                                                 INTEL
***FORMAT THE DATE INTO THE OUTPUT MSG                            INTEL
*                                                                 INTEL
         MVC   WORKWORD(4),DATE        MOVE DATE TO WORK AREA.    INTEL
         MVO   WORKWORD+1(3),WORKWORD(2)   MAKE 00YYDDDS INTO 00000YYS.
         UNPK  CYR(2),WORKWORD+2(2)    FORMAT YEAR.               INTEL
         XC    DOUBLEWD,DOUBLEWD                                  INTEL
         MVC   DOUBLEWD+4(4),WORKWORD  CNVT YEAR TO BIN           INTEL
         CVB   R0,DOUBLEWD                                        INTEL
         ST    R0,BINYEAR              AND SAVE                   INTEL
         TM    BINYEAR+3,X'03'         LEAP YEAR?                 INTEL
         BNZ   MON1                    NO.                        INTEL
         MVI   MONMSK+10,29            YES, CORRECT               INTEL
MON1     XC    DOUBLEWD,DOUBLEWD       CNVT DAYS TO BIN           INTEL
         MVC   DOUBLEWD+6(2),DATE+2                               INTEL
         CVB   R2,DOUBLEWD                                        INTEL
         ST    R2,BINDAYS              SAVE FOR LATER             INTEL
         XR    R1,R1                                              INTEL
         LA    R15,11                                             INTEL
MON2     IC    R1,MONMSK(R15)          COMPUTE MON & DAY          INTEL
         SR    R2,R1                                              INTEL
         BNP   MONOVR                                             INTEL
         BCT   R15,MON2                                           INTEL
         B     *+6                                                INTEL
MONOVR   AR    R2,R1                   CORRECT OVERDRAW           INTEL
         CVD   R2,DOUBLEWD             FORMAT DAY                 INTEL
         UNPK  CDAYN(2),DOUBLEWD+6(2)                             INTEL
         OI    CDAYN+1,X'F0'           FIX UP SIGN                INTEL
         MH    R15,=H'3'               GET TABLE OFFSET           INTEL
         LA    R15,MONTAB(R15)         AND POINT AT MONTH         INTEL
         MVC   CMON(3),0(R15)          MOVE IT TO THE MSG         INTEL
         EJECT ,                                                  INTEL
***DAY OF WEEK                                                    INTEL
         L     R15,BINYEAR                                        INTEL
         SH    R15,=H'69'                                         INTEL
         BNP   OUTT                    MUST BE GREATER OR BAD     INTEL
         XR    R14,R14                 CLEAR DAY REG              INTEL
         D     R14,=F'4'                                          INTEL
         MH    R15,=H'5'                                          INTEL
         AR    R14,R15                                            INTEL
         A     R14,BINDAYS                                        INTEL
         SRDA  R14,32                                             INTEL
         D     R14,=F'7'               MODULO 7 FOR WEEK          INTEL
         MH    R14,=H'3'                                          INTEL
         LA    R14,DAYTAB(R14)         POINT AT TODAY             INTEL
         MVC   CDAY(3),0(R14)          INSERT IN MSG              INTEL
***                                                               INTEL
MOVEJD   MVC   JDATE-1(7),=X'4020204B202020'                      INTEL
         ED    JDATE-1(7),DATE+1                                  INTEL
         MVC   CJDAY(3),JDATE+3         MOVE DAY TO MESSAGE       INTEL
*                                                                 INTEL
*                                                                 INTEL
DATERTN  BR    R7                      RETURN TO MAINLINE         INTEL
*                                                                 INTEL
OUTT     MVC   CDAY(3),=CL3'???'                                  INTEL
         B     MOVEJD                                             INTEL
         SPACE 2                                                  INTEL
         EJECT
***********************************************************************
*                                                                 INTEL
*       CONSTANTS FOR DATE ROUTINE USAGE                          INTEL
*                                                                 INTEL
***********************************************************************
         SPACE ,
HHMASK   DC    X'40202021202022212020222120204B2020'              INTEL
DEC60    DC    X'060C'                                            INTEL
DEC6000  DC    X'06000C'                                          INTEL
DEC50    DC    X'050C'                                            INTEL
***********************************************************************
* LEAVE FIELDS TOGETHER.. INITIALIZED BY ONE MVC WITH VALUES      INTEL
*                                                                 INTEL
XMONMSK  DC    AL1(31,30,31,30,31,31,30,31,30,31,28,31)        )  INTEL
         DC    CL1' '                                          )  INTEL
         DC    C'XX.XXX'                           L           )  INTEL
*                                                  E  F        )  INTEL
         DC    CL2' '                              A  I  T     )  INTEL
         DC    CL3' '                              V  E  O  F  )  INTEL
         DC    CL2' ',C' ('                        E  L  G  O  )  INTEL
         DC    CL3' ',C') '                           D  E  R  )  INTEL
         DC    CL3' ',C' '                            S  T     )  INTEL
         DC    CL2' ',C':'                               H  I  )  INTEL
         DC    CL2' ',C':'                               E  N  )  INTEL
         DC    CL5'SS.TH'                                R  I  )  INTEL
*                                                           T  )  INTEL
MVCLEN   EQU   *-XMONMSK                                          INTEL
*                                                                 INTEL
***********************************************************************
DAYTAB   DC    C'TUEWEDTHRFRISATSUNMON'                           INTEL
MONTAB   DC    C'DECNOVOCTSEPAUGJULJUNMAYAPRMARFEBJAN'            INTEL
         EJECT
***********************************************************************
*RMTORLCL SUBROUTINE - DETERMINE REMOTE OR LOCAL DESTINATION      INTEL
* R1 POINTS TO PRTRT/PUNRT, R15 TO ASSEMBLY POINTER               INTEL
***********************************************************************
         AIF   (&QSP).QSP1                                        UF030
RMTORLCL CLI   1(R1),0        IS IT FOR REMOTE 00=LOCAL           INTEL
         AGO   .QSP2                                              UF030
.QSP1    ANOP                                                     UF030
RMTORLCL CLC   2(2,R1),=X'0000'    IS IT FOR REMOTE00 (LOCAL)     UF030
.QSP2    ANOP                                                     UF030
         BNE   RMTRMT         NO LUCK .. HAVE TO WORK FOR IT      INTEL
*                                                                 INTEL
         MVC   0(L'LOCAL,R15),LOCAL   MOVE IN LOCAL               INTEL
         LA    R15,L'LOCAL(R15)       BUMP POINTER AND            INTEL
         BR    R7                       RETURN                    INTEL
*                                                                 INTEL
RMTRMT   MVC   0(L'RMT,R15),RMT       MOVE IN 'RMT'               INTEL
         LA    R15,L'RMT(R15)  BUMP POINTER                       INTEL
         SR    R14,R14        LOAD RMT FLAGS                      INTEL
         AIF   (&QSP).QSP3A                                       UF030
         IC    R14,1(R1)      FROM PRT/PUN                        INTEL
         AGO   .QSP3B                                             UF030
.QSP3A   ANOP                                                     UF030
         ICM   R14,3,2(R1)         FROM PRT/PUN                   UF030
.QSP3B   ANOP                                                     UF030
         CVD   R14,DOUBLEWD   RMT NUMBER TO DECIMAL               INTEL
         B     FITINUM1       FIT THE NUMBER IN RMT MESSAGE       INTEL
         SPACE 2
***********************************************************************
* FITINUM SUBROUTINE - CONVERT BIN NUMBER TO NICE FORMAT          INTEL
*                                                                 INTEL
***********************************************************************
FITINUM  CVD   R1,DOUBLEWD    CONVERT TO PACKED DECIMAL           INTEL
FITINUM1 MVC   EDITWORK(L'NORMAL),NORMAL INIT THE EDIT FORMAT     INTEL
         LA    R1,EDITWORK+SIGNORM IN CASE OF ZEROES              INTEL
         EDMK  EDITWORK(L'NORMAL),DOUBLEWD+2 CONVERT TO EBCDIC    INTEL
         LA    R14,EDITWORK+L'NORMAL-1 A(END OF CONVERTED NUMBER) INTEL
         SLR   R14,R1         LENGTH OF THE CONVERTED NUMBER - 1  INTEL
         EX    R14,MVNUMBER   PUT THE NUMBER IN THE MSG           INTEL
         LA    R15,1(R14,R15) A(NEXT SPOT IN MSG)                 INTEL
         BR    R7             RETURN TO OUR CALLER                INTEL
         SPACE 3                                                  INTEL
MVNUMBER MVC   0(0,R15),0(R1) TO BE EXECUTED                      INTEL
         SPACE 2                                                  INTEL
NORMAL   DC    X'402020202020202020202120' EDIT MASK              INTEL
SIGNORM  EQU   11             OFFSET TO LAST DIGIT                INTEL
RMT      DC    C'RMT'                                             INTEL
LOCAL    DC    C'LOCAL'                                           INTEL
         EJECT ,                                                  INTEL
         LTORG                                                    INTEL
         EJECT ,                                                  INTEL
***********************************************************************
*                                                                 INTEL
* LINE MAPPINGS                                                   INTEL
*                                                                 INTEL
***********************************************************************
*                   0123456789.123456789.123456789.123456789.123456789.
*              123456789.123456789.123456789.
HEADER   DC    CL80'                           JOB HISTORY INFORMATION'
HEAD3    DC    CL80'XXXXXXXX  XXXXXXXX VIA=XXXXXXXX BIN=XXXX  CLASS=X M*
               SGCLASS=X  NOTIFY=XXXXXXX'                         INTEL
*              123456789.123456789.123456789
HEAD5    DC    CL80'PROCDDN=XXXXXXXX PRT=       PUN=        RDR TIME'
HEAD6    DC    CL80'PROGRAMMER=XXXXXXXXXXXXXXXXXXXX         XEQ START'
HEAD7    DC    CL80'CARDS  IN=                              XEQ STOP'
HEAD8    DC    CL80'LINES OUT=             CARDS OUT=       OUT START'
*
         AIF   (NOT &QACF2).$SKP2                                 INTEL
HEAD12   DC    CL80'                              ACF2 INFORMATION'
HEAD14   DC    CL80'LOGONID=XXXXXXXX GROUP=XXXXXXXX NAME=XXXXXXXXXXXXXX*
               XXXXXX PHONE=XXXXXXXXXXXX'                         INTEL
HEAD16   DC    CL80'SOURCE=XXXXXXXX SUBMITTED BY XXXXXXXX XXXXXXXX XXXX*
               XXXX'                                              INTEL
.$SKP2   ANOP  ,                                                  INTEL
         AIF   (NOT &QNERDC).NONERDC                              UF030
HEAD21   DC    CL80'                             NERDC INFORMATION'
HEAD22   DC    CL80'LOGONID=         ACCESS#=         SEQ#=    HEADER= +
                      '                                           UF030
HNERLID  EQU   QDMSG+08,8          SPACE FOR LOGON ID             UF030
HNERACC# EQU   QDMSG+25,8          SPACE FOR ACCESS NUMBER        UF030
HNERSEQ# EQU   QDMSG+39,3          SPACE FOR SEQUENCE NUMBER      UF030
HNERHEAD EQU   QDMSG+50,8          SPACE FOR OUTPUT HEADER        UF030
         SPACE 1                                                  UF030
HEAD23   DC    CL80'PROCLIB=                                           +
                 PROCVOL=      '                                  UF030
HNERPROC EQU   QDMSG+8,44          SPACE FOR PROCLIB DSN          UF030
HNERPROV EQU   QDMSG+61,6          SPACE FOR PROCLIB VOLSER       UF030
         SPACE 1                                                  UF030
.NONERDC ANOP  ,                                                  UF030
         EJECT ,                                                  INTEL
SYMDEL   DSECT ,                   KILL SYM CARD GENERATION       UF023
CJHIST   CSECT ,                                                  UF023
         DROP  ,                                                  UF023
         AIF   ((NOT &QACF2) OR (NOT &QSP)).$$SKP9                INTEL
         $BUFFER   ,                                              INTEL
         #ACFJCTX  ,       ACF2 3.1.3                             INTEL
CJHIST   CSECT ,                                                  INTEL
         AGO   .$$SKP9A                                           INTEL
.$$SKP9  ANOP  ,                                                  INTEL
BUFSTART EQU   0                                                  INTEL
BUFDSECT EQU   0                                                  INTEL
.$$SKP9A ANOP  ,                                                  INTEL
JCT      EQU   0                                                  INTEL
         $JCT                                                     INTEL
         EJECT  ,                                                 INTEL
         QCOMMON                                                  INTEL
SYMNODEL DSECT ,                   RESTORE SYM CARD GENERATION    UF023
         SPACE 2                                                  INTEL
*                            OVERLAY FOR HEAD3                    INTEL
JOBNAME  EQU   QDMSG+00,8                                         INTEL
JOBNUMB  EQU   QDMSG+10,8                                         INTEL
JOBSCE   EQU   QDMSG+23,8                                         INTEL
BIN#     EQU   QDMSG+36,4                                         INTEL
JOBCLASS EQU   QDMSG+48,1                                         INTEL
MSGCLASS EQU   QDMSG+59,1                                         INTEL
NOTIFY   EQU   QDMSG+69,7                                         INTEL
*                                                                 INTEL
*                            OVERLAY FOR HEAD5                    INTEL
PROCDDN  EQU   QDMSG+08,8                                         INTEL
PRTDEST  EQU   QDMSG+21,6                                         INTEL
PUNDEST  EQU   QDMSG+32,6                                         INTEL
TIMESTMP EQU   QDMSG+50,29     COMMON FOR READER/XEQ/PRT          INTEL
*                                                                 INTEL
*                            OVERLAY FOR HEAD6                    INTEL
PROGAMER EQU   QDMSG+11,20                                        INTEL
*                            OVERLAY FOR HEAD7                    INTEL
CARDSIN  EQU   QDMSG+10,8                                         INTEL
*                            OVERLAY FOR HEAD8                    INTEL
LINESOUT EQU   QDMSG+10,8                                         INTEL
CARDSOUT EQU   QDMSG+33,8                                         INTEL
         AIF   (NOT &QACF2).$SKP3                                 INTEL
*                            OVERLAY FOR HEAD14                   INTEL
LOGONID  EQU   QDMSG+08,8                                         INTEL
GROUP    EQU   QDMSG+23,8                                         INTEL
NAME     EQU   QDMSG+37,20                                        INTEL
PHONE    EQU   QDMSG+64,12                                        INTEL
*                            OVERLAY FOR HEAD16                   INTEL
SOURCE   EQU   QDMSG+07,8                                         INTEL
SUBLID   EQU   QDMSG+29,8                                         INTEL
SUBPROG  EQU   QDMSG+38,8                                         INTEL
SUBPATH  EQU   QDMSG+47,8                                         INTEL
.$SKP3   ANOP  ,                                                  INTEL
         EJECT ,                                                  INTEL
***********************************************************************
*                                                                 INTEL
* WORK AREA DSECT                                                 INTEL
*                                                                 INTEL
***********************************************************************
WORK     DSECT                                                    INTEL
         DS    CL72                                               INTEL
DOUBLEWD DC    D'0'                                               INTEL
BINYEAR  DC    F'0'                                               INTEL
BINDAYS  DC    F'0'                                               INTEL
DATE     DC    F'0'                                               INTEL
WORKWORD DC    2F'0'                                              INTEL
EDITWORK DC    12H'0'
***********************************************************************
* LEAVE FIELDS TOGETHER.. INITIALIZED BY ONE MVC WITH VALUES      INTEL
*                                                                 INTEL
MONMSK   DC    AL1(31,30,31,30,31,31,30,31,30,31,28,31)        )  INTEL
         DC    CL1' '                                          )  INTEL
*        0123456789.123456789.123456789.                       )  INTEL
*        DDMONYY (DDD) DAY HH:MM:SS.TH                         )  INTEL
*                                                              )  INTEL
JDATE    DC    C'XX.XXX'                           L           )  INTEL
*                                                  E  F        )  INTEL
CDAYN    DC    CL2' '                              A  I  T     )  INTEL
CMON     DC    CL3' '                              V  E  O  F  )  INTEL
CYR      DC    CL2' ',C' ('                        E  L  G  O  )  INTEL
CJDAY    DC    CL3' ',C') '                           D  E  R  )  INTEL
CDAY     DC    CL3' ',C' '                            S  T     )  INTEL
CHH      DC    CL2' ',C':'                               H  I  )  INTEL
CMM      DC    CL2' ',C':'                               E  N  )  INTEL
CSS      DC    CL5'SS.TH'                                R  I  )  INTEL
*                                                           T  )  INTEL
***********************************************************************
LEN      EQU   *-CDAYN                                            INTEL
         END  ,                                                   INTEL
