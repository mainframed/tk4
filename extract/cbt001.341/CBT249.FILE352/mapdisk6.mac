*          DATA SET MAPDISK6   AT LEVEL 002 AS OF 05/24/78
*          DATA SET FASTMAP6   AT LEVEL 001 AS OF 11/09/77
         TITLE 'ASM2DATA - DOCUMENTATION'
*.....................................................................*
*.                                                                   .*
*.   ASM2DATA                                                        .*
*.                                                                   .*
*.....................................................................*
*.                                                                   .*
*.   1.0  GENERAL DESCRIPTION                                        .*
*.                                                                   .*
*.        THIS MODULE INTREPRETS SPECIAL FIELDS IN A FMT1 DSCB       .*
*.        THAT ARE MAINTAINED BY THE ASM2 DISK MANAGER SYSTEM.       .*
*.                                                                   .*
*.        THE OUTPUT IS A 47 BYTE TEXT FIELD WITH THE INTREPRETED    .*
*.        DATA IN A PRINTABLE FORM.                                  .*
*.                                                                   .*
*.        K. M. TRUE    FAIRCHILD CAMERA AND INSTRUMENT  16 FEB 77   .*
*.                                                                   .*
*.                                                                   .*
*.....................................................................*
*.                                                                   .*
*.....................................................................*
*.                                                                   .*
*.   2.0  PARAMETER LIST AND RETURN CODE DESCRIPTION                 .*
*.                                                                   .*
*.   THE PARAMETER LIST IS A TWO  WORD LIST CONTAINING THE           .*
*.   FOLLOWING:                                                      .*
*.                                                                   .*
*.    WORD         DESCRIPTION                                       .*
*.                                                                   .*
*.      1          ADDRESS OF THE 256 BYTE BUFFER CONTAINING THE     .*
*.                 FORMAT 1 DSCB TO BE ANALYZED.                     .*
*.                  (NOTE: ACTUAL DSCB1 BEGINS 16 BYTES ABOVE ADDRESS.*
*.                   GIVEN TO ACCOUNT FOR THE CHAINING OF DSCBS BY   .*
*.                   FASTMAP0 MODULE.)                               .*
*.      2          ADDRESS OF THE 47-BYTE FIELD INTO WHICH           .*
*.                 ASM2DATA WILL PLACE USAGE DATA IN THE PRINT LINE. .*
*.                                                                   .*
*.      3          ADDRESS OF THE 16-BYTE FIELD INTO WHICH           .*
*.                 ASM2DATA WILL PLACE LAST USED DATE,LAST MOD DATE/ .*
*.                 TIME, AND MODUSER (IF LOGMOD=Y).                  .*
*.                                                                   .*
*.....................................................................*
*.                                                                   .*
         TITLE 'ASM2DATA -- REGISTER USAGE'
*.....................................................................*
*.                                                                   .*
*. R2 = PTR TO FMT 1 DSCB  (IN CHAINED FORMAT)                       .*
*. R3 = PTR TO MESSAGE AREA  (47 BYTES)                              .*
*. R4 = PTR TO LOG RECORD AREA FOR USAGE DATA (IF LOGMOD=Y)          .*
*.                                                                   .*
*. R12 = BASE                                                        .*
*. R13 = SAVE AREA POINTER                                           .*
*. OTHERS (R7,R8,R9,R10,R11) = WORK  (R1,R0) FOR MACROS              .*
*.....................................................................*
         EJECT
         MACRO
&NAME    PGM   &BASE=R12,&SAVE=$$SAVE,&START=$$START,&EOJ=$$EOJ,&RC=16
&NAME    CSECT
         B     14(0,R15)           BRANCH AROUND PROGRAM ID.
         DC    AL1(8)              CSECT NAME LENGTH.
         DC    CL8'&NAME'          CSECT IDENTIFIER.
         DC    X'FF'               FILLER.
         STM   R14,R12,12(R13)     STORE THE REGISTERS.
         BALR  &BASE,0             ESTABLISH ADDRESSABILITY.
         USING *,&BASE             TELL ASSEMBLER ABOUT BASE REGISTER.
R0       EQU   0                   REGISTER 0.
R1       EQU   1                   REGISTER 1.
R2       EQU   2                   REGISTER 2.
R3       EQU   3                   REGISTER 3.
R4       EQU   4                   REGISTER 4.
R5       EQU   5                   REGISTER 5.
R6       EQU   6                   REGISTER 6.
R7       EQU   7                   REGISTER 7.
R8       EQU   8                   REGISTER 8.
R9       EQU   9                   REGISTER 9.
R10      EQU   10                  REGISTER 10.
R11      EQU   11                  REGISTER 11.
R12      EQU   12                  REGISTER 12.
R13      EQU   13                  REGISTER 13.
R14      EQU   14                  REGISTER 14.
R15      EQU   15                  REGISTER 15.
         LA    R15,&SAVE           ADDRESS OF OUR SAVE AREA.
         ST    R13,4(R15)          BACKWARD SAVE AREA CHAIN.
         ST    R15,8(R13)          FORWARD SAVE AREA CHAIN.
         LR    R13,R15             POINT R13 TO CURRENT SAVE AREA.
         B     &START              BRANCH TO ENTRY CODE.
&EOJ     CH    R15,$$RC            IS RETURN CODE HIGHER THAN &RC?
         BNH   *+6                 YES - LETS ZERO R15.
         SR    R15,R15             ZERO OUT REGISTER 15.
         L     R13,&SAVE+4         POINT R13 TO PREVIOUS SAVE AREA.
         L     R14,12(R13)         RESTORE REGISTER 14.
         LM    R0,R12,20(R13)      RESTORE THE REGISTERS.
         BR    R14                 RETURN TO OS.
&SAVE    DS    18F                 OUR SAVE AREA.
$$RC     DC    H'&RC'              RETURN CODE.
$$START  DS    0H                  DEFAULT ENTRY POINT.
         MEND
         LCLC  &LOGMOD
&LOGMOD  SETC  'Y'            USE LOGGING? 'Y' OR 'N'
         TITLE 'ASM2DATA -- MAIN CODE'
ASM2DATA PGM
         AIF   ('&LOGMOD' NE 'Y').SKIPL1
REALSTRT LM    R2,R4,0(R1)         LOAD ADDRESSES OF PARMS       LOGMOD
         USING LOGREC,R4           ESTABLISH ADDRESSABILITY      LOGMOD
         MVC   LOGUCNT,=H'1'       INIT USE COUNT TO 1           LOGMOD
         MVC   LOGCDATE,=PL3'0'      CLEAR                       LOGMOD
         MVC   LOGUDATE,=PL3'0'        OUT                       LOGMOD
         MVC   LOGMDATE,=PL3'0'          THE                     LOGMOD
         MVC   LOGEDATE,=PL3'0'            LOG                   LOGMOD
         XC    LOGMTIME,LOGMTIME               DATES/TIMES       LOGMOD
         MVI   LOGMUSER,C' '                                     LOGMOD
         MVC   LOGMUSER+1(L'LOGMUSER-1),LOGMUSER  AND LOG USER   LOGMOD
         AGO   .SKIPL1E
.SKIPL1  ANOP
REALSTRT LM    R2,R3,0(R1)         LOAD ADDRESSES OF PARMS
.SKIPL1E ANOP
         USING DSCB1,R2             AND ESTAB. ADDRESSABILITY
         USING MSGDEF,R3
         MVI   MSG,C' '                INITIALIZE MSG WITH BLANKS
         MVC   MSG+1(L'MSG-1),MSG        TO BE NEAT..
*
         EJECT
         AIF   ('&LOGMOD' NE 'Y').SKIPL1A
         CLC   GENYEAR,=FL1'99'        OS CREATE YEAR < 99 ?     LOGMOD
         BH    NOCREAT                 NO-> GO CHK USERID        LOGMOD
         LA    R5,LOGCDATE                                       LOGMOD
         LA    R7,MUDATE                                         LOGMOD
         LA    R8,GENYEAR                                        LOGMOD
         BAL   R9,DATECONV             GO CONVERT THE DATE       LOGMOD
NOCREAT  DS    0H                                                LOGMOD
.SKIPL1A ANOP
         CLC   EXPYEAR,=FL1'99'        YEAR < 99 ?
         BH    CHKASDT                 NO -> CHK CREATE DATE
         CLC   =X'000000',EXPYEAR        ANY EXPIRE DATE THERE
         BE    CHKASDT                 NO -> CHK CREATE DATE
         AIF   ('&LOGMOD' NE 'Y').SKL$2
         LA    R5,LOGEDATE                                       LOGMOD
.SKL$2   ANOP
         LA    R7,MEDATE
         LA    R8,EXPYEAR
         BAL   R9,DATECONV             GO CONVERT THE DATE
*
CHKASDT  CLC   USEYEAR,=FL1'99'        YEAR < 99 ?
         BH    CHKOSDT                 NO -> USE OS CREATE DATE
         AIF   ('&LOGMOD' NE 'Y').SKIPL2
         LA    R5,LOGUDATE                                       LOGMOD
.SKIPL2  ANOP
         LA    R7,MUDATE
         LA    R8,USEYEAR
         BAL   R9,DATECONV             GO CONVERT THE DATE
*
         CLC   MODYEAR,=FL1'99'        MOD YEAR < 99 ?
         BNH   DOLSTMOD                YES-> DO NORMAL MOD DATE/TIME
         CLC   GENYEAR,=FL1'99'          IS THE OS CREATE DATE OK
         BH    CHKUSER                 NO-> JUST CHECK USER
         AIF   ('&LOGMOD' NE 'Y').SKIPL3
         LA    R5,LOGMDATE                                       LOGMOD
.SKIPL3  ANOP
         LA    R7,MMDATE
         LA    R8,GENYEAR
         BAL   R9,DATECONV             GO CONVERT DATE
         B     CHKUSER                 GO DO USERID..
DOLSTMOD LA    R7,MMDATE               PROCESS NORMAL MOD DATE/TIME
         LA    R8,MODYEAR
         AIF   ('&LOGMOD' NE 'Y').SKIPL4
         LA    R5,LOGMDATE                                       LOGMOD
         MVC   LOGMTIME,MODTIME        MOVE IN MOD TIME
.SKIPL4  ANOP
         BAL   R9,DATECONV             GO CONVERT THE DATE
*
         UNPK  DBLEWORD(5),MODTIME(3)  CONVERT THE TIME
         MVC   MMTIME(2),DBLEWORD      MOVE IN HH
         MVI   MMTIME+2,C':'           MOVE IN   :
         MVC   MMTIME+3(2),DBLEWORD+2  MOVE IN    MM
         B     CHKUSER                 GO TRY THE USER ID..
*
*
*
CHKOSDT  CLC   GENYEAR,=FL1'99'        OS CREATE YEAR < 99 ?
         BH    CHKUSER                 NO-> GO CHK USERID
         AIF   ('&LOGMOD' NE 'Y').SKIPL5
         LA    R5,LOGUDATE                                       LOGMOD
.SKIPL5  ANOP
         LA    R7,MUDATE
         LA    R8,GENYEAR
         BAL   R9,DATECONV             GO CONVERT THE DATE
*
CHKUSER  CLC   =C'IBMOS',WHOMOD        ANY USER GIVEN?
         BE    CHKUSECT                NO-> GO CHECK USE CNT
         AIF   ('&LOGMOD' NE 'Y').SKIPL6
         MVC   LOGMUSER,WHOMOD         MOVE IN JOBNAME/USERID    LOGMOD
.SKIPL6  ANOP
         MVC   MMUSER,WHOMOD           MOVE IN JOBNAME/USERID
CHKUSECT CLC   USECNT,=X'0070001F'     IS THIS A BOZO COUNT (E G DATE)
         BH    $$EOJ                   YES->SKIP IT
         CLC   USECNT,=FL4'999'        > 999
         BNH   DOUSECNT                NO-> CONVERT AND DISPLAY
         MVC   MUCNT,=C'>999'           SAY TOO BIG
         B     $$EOJ                    AND EXIT
DOUSECNT MVC   FULLWORD,USECNT
         L     R7,FULLWORD
         AIF   ('&LOGMOD' NE 'Y').SKIPL6A
         STH   R7,LOGUCNT              SAVE USE COUNT IN LOG RCD LOGMOD
.SKIPL6A ANOP
         CVD   R7,DBLEWORD
         MVC   MUCNT,EDMASK
         ED    MUCNT,DBLEWORD+6
         B     $$EOJ                                  RETURN
         EJECT
*
* SUBROUTINE DATECONV
*
*  ON ENTRY:  R7  POINTS TO 8 CHAR AREA TO RECEIVE DATE
*             R8  POINTS TO 3 BYTE YDD FIELD
*             R5  POINTS TO 3 BYTE FIELD TO RECEIVE PACKED YYDDD
*      BAL R9,DATECONV
*
*  REGS USED R10,R11   OTHERS PRESERVED
*  USED DBLEWORD TOO....
DATECONV DS    0H
         STM   R1,R5,SAVEREGS      SAVE REGISTERS...
         SR    R10,R10             CLEAR WORK REG
         IC    R10,0(R8)           GET YEAR
         LTR   R10,R10             ANYONE HOME?
         BNP   RTN                  NO -> KISS OFF
         CVD   R10,DBLEWORD
         AIF   ('&LOGMOD' NE 'Y').SKIPL10
         LR    R11,R10             GET YEAR IN REG11             LOGMOD
         XR    R10,R10             SET UP FOR MULTIPLY           LOGMOD
         M     R10,=F'1000'        MOVE TO YY000                 LOGMOD
*                                  LEAVE RESULT IN R11.......    LOGMOD
.SKIPL10 ANOP
         MVC   WRKC,EDMASK
         ED    WRKC,DBLEWORD+6
         MVC   6(2,R7),WRKC+2       MOVE YEAR IN
* NOW DO MONTH/DAY
*
         MVI   2(R7),C'-'
         MVI   5(R7),C'-'           MOVE IN FORMAT CHARS
         MVC   FULLWORD(2),1(R8)    GET JULIAN DAYS
         SR    R10,R10               INTO
         LH    R10,FULLWORD            R10
         AIF   ('&LOGMOD' NE 'Y').SKIPL11
         AR    R11,R10             ADD YY000 TO DDD              LOGMOD
         CVD   R11,DBLEWORD        CONVERT TO PACKED             LOGMOD
         MVC   0(3,R5),DBLEWORD+5  MOVE IT TO DESTINATION        LOGMOD
.SKIPL11 ANOP
         LA    R1,TABLE1            ASSUME NON LEAP
         TM    0(R8),X'03'          IS YEAR LEAP?
         BC    5,NOADJ
         LA    R1,TABLE2            USE LEAP YEAR TABLE
NOADJ    LA    R2,2                 INIT INDEX REG
LOOPDATE SH    R10,0(R2,R1)         SUB DAYS OF MONTH INDEXED
         BC    12,CHKD              RESULT <= 0..GO FIX
         LA    R2,2(R2)             BUMP TABLE PTR
         CH    R2,=H'26'            ERROR?
         BC    12,LOOPDATE          NO-> TRY AGAIN
         B     DATERR               YES-> DO ERROR THING
CHKD     AH    R10,0(R2,R1)         ADD BACK DAYS...
         CVD   R10,DBLEWORD          CONVERT DD TO PACKED DEC
         OI    DBLEWORD+7,X'0F'     INSERT SIGN..
         UNPK  3(2,R7),DBLEWORD+6(2) PUT IN DATE
         SRA   R2,1                 DIVIDE BY 2 TO GET MONTH
         CVD   R2,DBLEWORD          CONVERT MONTH TO PACKED DEC
         MVC   WRKC,EDMASK          MOVE IN MASK
         ED    WRKC,DBLEWORD+6      AND EDIT TO SUPPRESS LEAD ZERO
         MVC   0(2,R7),WRKC+2       AND MOVE IN MONTH
*
RTN      LM    R1,R5,SAVEREGS       RESTORE REGISTERS
         BR    R9                    AND SPLIT
*
DATERR   MVC   0(6,R7),=C'ERROR-'
         B     RTN
         EJECT
DBLEWORD DS    D
FULLWORD DS    F
SAVEREGS DS    5F
WRKC     DS    CL4
EDMASK   DC    X'40202020'                      MASK FOR EDIT OP.
TABLE1   DS    H                 TABLE OF DAYS/MONTH
         DC    H'31'
         DC    H'28'              NON LEAP
         DC    H'31'
         DC    H'30'
         DC    H'31'
         DC    H'30'
         DC    H'31'
         DC    H'31'
         DC    H'30'
         DC    H'31'
         DC    H'30'
         DC    H'31'
TABLE2   DS    H                 TABLE OF DAYS/MONTH
         DC    H'31'
         DC    H'29'              LEAP YEAR
         DC    H'31'
         DC    H'30'
         DC    H'31'
         DC    H'30'
         DC    H'31'
         DC    H'31'
         DC    H'30'
         DC    H'31'
         DC    H'30'
         DC    H'31'
         EJECT
*  DSECT TO MAP FORMAT 1 DSCB WITH ASM2 MODS IN RESERVED FIELDS
DSCB1    DSECT
         DS    CL16                POINTER STUFF FROM FASTMAP
         DS    CL44                DATASET NAME
         DS    CL1                 FORMAT ID =C'1'
***      DS    CL6                 DATASET SERIAL NUMBER
USEYEAR  DS    CL1                 YEAR OF LAST USE
USEJDAY  DS    CL2                 JULIAN DAY OF LAST USE
MODYEAR  DS    CL1                 YEAR OF LAST MOD (AFTER ASM2 ONLY)
MODJDAY  DS    CL2                 JULIAN DAY OF LAST MOD (AFTER ASM2)
         DS    CL2                 VOL SEQ NUMBER
***      DS    CL3                 CREATE DATE FOR DATASET
GENYEAR  DS    CL1                   CREATE YEAR FOR DATASET
GENJDAY  DS    CL2                   CREATE JUL DAY FOR DATASET
***      DS    CL3                 EXPIRE DATE FOR DATASET
EXPYEAR  DS    CL1                   EXPIRE YEAR
EXPJDAY  DS    CL2                   EXPIRE JULIAN DATE
         DS    CL1                 NUMBER OF EXTENTS ON VOLUME
         DS    CL1                 NUMB OF BYTES USED IN LAST DIR BLK
         DS    CL1                 RESERVED
***      DS    CL13                SYSTEM CODE
WHOMOD   DS    CL8                 USERID/JOBNAME LAST MODIFIED
         DS    CL5                    JUNK...
***      DS    CL7                 MORE RESERVED
         DS    CL1
USECNT   DS    CL4                 # TIMES USED
MODTIME  DS    CL2                 HHMM OF LAST MOD (POST ASM2..)
*
* MORE JUNK AFTER THIS, BUT WE DONT NEED IT ...
*
MSGDEF   DSECT                     , MAPPING FOR MESSAGE
MSG      DS    CL47
         ORG   MSG
*   LAST USE -----LAST MODIFIED-----  USE   EXPIRE
*     DATE     DATE   TIME  JOB/USER COUNT   DATE
*   XX/XX/XX XX/XX/XX XX:XX XXXXXXXX >XXX  XX/XX/XX
*
MUDATE   DS    CL8
         DS    CL1
MMDATE   DS    CL8
         DS    CL1
MMTIME   DS    CL5
         DS    CL1
MMUSER   DS    CL8
         DS    CL1
MUCNT    DS    CL4
         DS    CL2
MEDATE   DS    CL8
*
         AIF   ('&LOGMOD' NE 'Y').SKIP99
         EJECT
*                                                                LOGMOD
LOGREC   DSECT                                                   LOGMOD
LOGUCNT  DS    H                USE COUNT                        LOGMOD
LOGCDATE DS    PL3              CREATED DATE                     LOGMOD
LOGUDATE DS    PL3              LAST USED DATE                   LOGMOD
LOGMDATE DS    PL3              LAST MODIFIED DATE               LOGMOD
LOGMTIME DS    CL2              LAST MODIFIED TIME HHMM          LOGMOD
LOGEDATE DS    PL3              EXPIRE DATE FOR DATASET          LOGMOD
LOGMUSER DS    CL8              LAST MODIFIED BY USER/JOBNAME    LOGMOD
.SKIP99  ANOP
*
         END
