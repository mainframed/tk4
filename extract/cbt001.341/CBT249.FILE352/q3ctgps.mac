*          DATA SET Q3CTGPS    AT LEVEL 001 AS OF 04/01/83
CTGPS    QSTART 'QUEUE COMMAND - LIST JOB WITH MOST TRACK GROUPS' NE038
         GBLB  &QSP                MVS/SP OPTION
         AIF   (&QSP).SPOK
         QTILT 'TGPS COMMAND ONLY SUPPORTED UNDER SP VERSION OF QUEUE'
.SPOK    ANOP
         USING QCKPT,R10           BASE REG FOR CHECKPOINT WORK AREA
         L     R10,QVCKPT          LOAD BASE REG
         USING QDISPLAY,R9
         L     R9,QVDSPL           ADDRESSING FOR DISPLAY AREA
         USING WORK,R13            LOCAL WORK AREA
*        READ IN THE CHECKPOINT
         L     R15,=V(CKPT)        ADDR OF CKPT ROUTINE
         BALR  R14,R15             GO TO IT
*
         XC    WORKAREA(WORKLEN),WORKAREA CLEAR WORK AREA
         XC    TOTTGPS,TOTTGPS     CLEAR ACCUMULATOR
         L     R1,QCJQTL           POINT TO HCT SAVEAREA
         USING $SAVEBEG,R1         SET ADDRESSING
         LA    R3,$JQHEADS-QUENEXT POINT TO FIRST QHEAD
         LA    R4,$JQHEADL         SIZE OF EACH QHEAD
         LA    R5,$JQHEADS-QUENEXT+($JQTYPES*$JQHEADL)-1 END OF HEADS
         DROP  R1                  DROP HCT ADDRESSING
NXTQHD   LR    R6,R3               POINT TO NEXT QHEAD
         USING JQEDSECT,R6         ADDRESSING FOR JQE
JQELOOP  L     R6,JQENEXT          GET CHAIN FIELD
         N     R6,=X'00FFFFFF'     TEST FOR END
         BZ    STEPQHD             BRANCH IF END OF CHAIN
         LR    R2,R6               SAVE OFFSET FOR TEST
         A     R6,QCJQTA           CALCULATE FULL ADDRESS
***********************************************************************
*                                                                     *
*   READ JCT AND IOT                                                  *
*                                                                     *
***********************************************************************
         ST    R6,QCJQEA           SAVE THE ADDRESS
         MVC   QCTRAK,JQETRAK      DISK ADDR OF JCT
         L     R1,QCJCTA           ADDR OF IOAREA FOR JCT
         LR    R7,R1               BASE FOR JCT
         USING JCTSTART,R7         BASE REG FOR JCT
         L     R15,=V(READSPC)     ROUTINE TO READ HASPACE
         BALR  R14,R15             GO TO IT
         C     R2,JCTJQE           DOES JCT POINT TO THIS JQE?
         BNE   JQELOOP             NO, SKIP THIS JQE
         SR    R2,R2               CLEAR FOR COUNTER
         MVC   QPJOBID,JCTJBKEY    JOB IDENTIFICATION
         ICM   R15,15,JCTSPIOT     GET SPIN IOT ADDRESS
         BZ    IOTJOB              NONE, GET JOBS IOT
         USING IOTSTART,R7         ADDRESSING FOR IOT
SPIOTLP  ST    R15,QCTRAK          SET ADDRESS FOR READSPC
         BAL   R8,PROCIOT          PROCESS THE IOT
         ICM   R15,15,IOTIOTTR     POINT TO NEXT IOT
         BNZ   SPIOTLP             LOOP IF MORE IOTS
IOTJOB   L     R7,QCJCTA           RESTORE JCT ADDRESS
         USING JCTSTART,R7         AND ADDRESSING
         ICM   R15,15,JCTIOT       GET MAIN IOT ADDRESS
         BZ    TGTEST              NONE, TEST COUNT OF TGPS
         ST    R15,QCTRAK          SET ADDRESS FOR READSPC
         BAL   R8,PROCIOT          PROCESS THE IOT
TGTEST   LTR   R2,R2               TEST FOR TGPS
         BNP   JQELOOP             NONE, SKIP THIS JQE
         LR    R14,R2              NUMBER OF TRACK GROUPS
         A     R14,TOTTGPS         ADD TO ACCUMULATOR
         ST    R14,TOTTGPS         AND RESAVE
         LA    R14,WORKAREA+WORKLEN-8 POINT TO LAST ENTRY
         LA    R15,(WORKLEN/8)     NUMBER OF ENTRIES
         LA    R1,8                SIZE OF AN ENTRY
TGTST1   C     R2,4(R14)           SEE IF NEW IS BIGGER
         BNL   TGTINS              YES, INSERT IT HERE
         SR    R14,R1              BACK UP TO PREV ENTRY
         BCT   R15,TGTST1          LOOP THROUGH ELEMENTS
         B     JQELOOP             GO TRY NEXT JQE
         SPACE 1
TGTINS   BCTR  R15,0               DROP BY ONE
         SLL   R15,3               TIMES 8 (LENGTH OF ENTRY)
         BCTR  R15,0               DROP FOR EXECUTE
         LTR   R15,R15             TEST FOR VALID
         BNP   TGTNOMV             NO, JUST DO THE INSERT
         EX    R15,TGTMVC          MOVE ENTRIES DOWN
TGTNOMV  ST    R6,0(,R14)          SAVE JQE ADDRESS
         ST    R2,4(,R14)          SAVE # OF TRACK GROUPS
         B     JQELOOP             TRY NEXT JQE
         SPACE 1
TGTMVC   MVC   WORKAREA(*-*),WORKAREA+8  SLIDE ENTRIES DOWN
         SPACE 1
STEPQHD  BXLE  R3,R4,NXTQHD        STEP TO NEXT QHEAD
         DROP  R6                  DROP OLD JQE REG
         SPACE 1
         LA    R2,WORKAREA+WORKLEN-8 POINT TO LAST ENTRY
         LA    R3,(WORKLEN/8)      NUMBER OF ENTRIES
         LA    R4,8                SIZE OF EACH ENTRY
         MVC   QDHLINE,HEADING     SET HEADER LINE
         SPACE 1
PRNTJQE  L     R5,0(,R2)           JQE ADDRESS
         USING JQEDSECT,R5         ADDRESSING
         MVC   QDMSG,QBLANK        BLANK THE TEXT AREA
         LH    R0,JQEJOBNO         GET JOB NUMBER
         CVD   R0,DWORD            TO DECIMAL
         MVC   MSGJOBID,ED         SET EDIT PATTERN
         ED    MSGJOBID,DWORD+4    SET JOB ID IN MESSAGE TEXT
         MVC   MSGJNAME,JQEJNAME   MOVE JOB NAME TO MESSAGE
         L     R0,4(,R2)           NUMBER OF TRACK GROUPS
         LR    R1,R0               SAVE FOR DIVIDE
         CVD   R0,DWORD            TO DECIMAL
         MVC   MSG#TGPS,ED         SET EDIT PATTERN
         ED    MSG#TGPS,DWORD+4    SET IN MESSAGE
         L     R15,QCJQTL          POINT TO HCT SAVE AREA
         USING $SAVEBEG,R15
         LH    R15,$NUMTG          NUMBER OF TRACK GROUPS
         DROP  R15
         SR    R0,R0               CLEAR FOR DIVIDE
         MH    R1,=H'1000'
         DR    R0,R15              DIVIDE TO GET PERCENT OF TOTAL
         CVD   R1,DWORD            TO DECIMAL
         MVC   MSGTGPCT,EDPCT      SET EDIT MASK
         ED    MSGTGPCT,DWORD+6    SET PCT TO MESSAGE
         MVC   QDMLNG,=H'80'       SET MESSAGE LENGTH
         LA    R0,QDMSG            POINT TO MESSAGE AREA
         ST    R0,QDMSGA           SET IN AREA
         L     R15,=V(DISPLAY)     POINT TO OUTPUT ROUTINE
         BALR  R14,R15             LINK TO IT
         SPACE 1
         SR    R2,R4               MOVE TO NEXT ENTRY
         BCT   R3,PRNTJQE          PRINT ALL ENTRIES
         SPACE 1
         MVC   QDMSG,QBLANK        BLANK THE TEXT AREA
         MVC   MSGJNAME,=CL8'*TOTAL*'
         L     R0,TOTTGPS          TOTAL NUMBER OF TRACK GROUPS
         CVD   R0,DWORD            TO DECIMAL
         MVC   MSG#TGPS,ED         SET EDIT PATTERN
         ED    MSG#TGPS,DWORD+4    SET IN MESSAGE
         MVC   QDMLNG,=H'80'       SET MESSAGE LENGTH
         LA    R0,QDMSG            POINT TO MESSAGE AREA
         ST    R0,QDMSGA           SET IN AREA
         L     R15,=V(DISPLAY)     POINT TO OUTPUT ROUTINE
         BALR  R14,R15             LINK TO IT
         SPACE 1
STOP     QSTOP
         SPACE 1
PROCIOT  L     R1,QCIOTA           ADDR OF IOAREA FOR IOT
         LR    R7,R1               POINT TO IOT AREA
         USING IOTSTART,R7         ADDRESSING FOR AREA
         L     R15,=V(READSPC)     ROUTINE TO READ HASPACE
         BALR  R14,R15             GO TO IT
         CLC   QPJOBID,IOTJBKEY    DOES JOB ID MATCH?
         BNER  R8                  NO, SKIP THIS IOT
         TM    IOTFLAG1,IOT1ALOC   IS THIS AN ALLOCATION IOT?
         BNOR  R8                  NO, SKIP PROCESSING IT
         LA    R1,IOTTGMAP         POINT TO ALLOCATION MAP
         LA    R1,TGMAP-TGMDSECT(,R1) POINT TO TRACK GROUP MAP
         L     R15,QCJQTL          POINT TO HCT SAVE AREA
         USING $SAVEBEG,R15        SET TEMP ADDRESSING
         LH    R15,$NUMTG          GET NUMBER OF TRACK GROUPS
         DROP  R15                 DROP ADDRESSING
         LA    R15,7(,R15)         ROUND TO MULTIPLE OF 8
         SRL   R15,3               DIVIDE BY 8
         LR    R0,R15              TO R0 FOR OUR USE
         SRL   R0,2                WORDS / MAP
TGIOTC1  ICM   R15,15,0(R1)        TEST FOR ANY ALLOCATED
         BNZ   TGIOTC3             YES, SEE HOW MANY
TGIOTC2  LA    R1,4(,R1)           TO NEXT WORD
         BCT   R0,TGIOTC1          LOOP FOR ALL WORDS
         BR    R8                  RETURN TO CALLER
TGIOTC3  LA    R14,32              BITS / WORD
TGIOTC4  LTR   R15,R15             TEST SIGN BIT
         BNM   *+8                 OFF, SKIP IT
         LA    R2,1(,R2)           BUMP ACCUMULATOR
         SLL   R15,1               TRY NEXT BIT
         BCT   R14,TGIOTC4         LOOP FOR ALL BITS
         B     TGIOTC2             TRY NEXT WORD
         DROP  R7
         SPACE 1
ED       DC    X'4020202020202120' EDIT PATTERN
EDPCT    DC    X'4020214B21'       EDIT PATTERN FOR % SPOOL
*                   12345678 12345678 2345678 2345
HEADING  DC    CL80'   JOBID JOBNAME     TGPS  PCT'
         SPACE 1
         LTORG ,
         SPACE 1
WORK     DSECT
         DS    18F                 SAVE AREA
         DS    18F                 SCRATCH SPACE
DWORD    DS    D                   SCRATCH DOUBLE WORD
TOTTGPS  DS    F                   TOTAL TRACK GROUPS ALLOCATED
WORKAREA DS    20D                 20 ENTRIES (JQEADDR, #TGPS)
WORKLEN  EQU   *-WORKAREA          LENGTH TO CLEAR
SYMDEL   DSECT ,                   KILL SYM CARD GENERATION       UF023
         QCOMMON
         ORG   QDMSG               BACK UP TO MESSAGE AREA
MSGJOBID DS    CL8,X               SPACE FOR JOBID
MSGJNAME DS    CL8                 SPACE FOR JOBNAME
MSG#TGPS DS    CL(L'ED)            SPACE FOR NUMBER OF TRACK GROUPS
MSGTGPCT DS    CL(L'EDPCT)         SPACE FOR % OF TOTAL TRACK GROUPS
CTGPS    CSECT
         DROP
JCT      EQU   10
BASE1    EQU   11
SAVE     EQU   13
         GBLC  &VERSION
&VERSION SETC  '0'
$RPS     EQU   0
$MSGID   EQU   0
$PRTBOPT EQU   0
$PRIOOPT EQU   0
$PRTRANS EQU   0
$QSONDA  EQU   0
$CMBDEF  EQU   0
$JQEDEF  EQU   0
$MAXDA   EQU   32
$MAXJBNO EQU   0
$SMFDEF  EQU   0
$TGDEF   EQU   0
FF       EQU   255
        $BUFFER
        $PCE
        $JQE
        $JCT
        $CAT
        $HCT
        $TAB
        $PDDB
        $IOT
        $TGM
         DROP
SYMNODEL DSECT ,                   RESTORE SYM CARD GENERATION    UF023
         END
