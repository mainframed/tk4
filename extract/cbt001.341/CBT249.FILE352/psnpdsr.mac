*          DATA SET PSNPDSR    AT LEVEL 002 AS OF 10/30/80
         TITLE 'PSNPDSR - READ PDS DIRECTORY'
PSNPDSR  PSNMSTRT   SASIZ=WKLENG
         EJECT
*                    TO READ THE DIRECTORY OF A PDS, PASSING BACK
*                    TO THE CALLER ONE MEMBER NAME PER CALL UNTIL
*                    THE DIRECTORY IS EXHAUSTED.
*
         LA    R2,0(,R12)         IS THIS ME ALL OVER
         C     R2,PSWIDENT        CHECK AGAINST PASSED AREA
         BE    NORMAL             STILL TOGETHER
         BAL   R14,INITIALZ       OOPS - THE SPECIAL CASE
         B     READNEXT           JUMP INTO THE LOOP PROPERLY
*
NORMAL   EQU   *                  NORMAL NEXT-REQUEST PATH
*                    IS THIS THEN THE FINAL CALL
         CLI   PSWPDSFF,X'FF'     FINAL BY CHAN-PROG OR USER REQUEST
         BNE   NEXTMBR            NORMAL STILL - CARRY ON
LASTONE  EQU   *                  LAST CALL - TERMINATE AND RETURN
         BAL   R14,TERMINAT
         B     RETURN
*
NEXTMBR  EQU   *                  NORMAL CALL FOR NEXT MEMBER
         L     R8,PSWIPTRS+4      PICK UP CURRENT MBR POINTER
         IC    R1,11(,R8)         THIS IS (KINDA) THE LENGTH OF ENTRY
*                    THIS IS NUMBER OF HALF-WORDS OF TTR DATA
*                    (IN BYTES 3-7 ONLY, OF COURSE)
         N     R1,=X'0000001F'    CLEAR OUT UNNEEDED DATA
         LA    R1,12(R1,R1)       THIS IS NOW LENGTH OF ENTRY
         LA    R8,0(R1,R8)        POINT TO THE NEXT ENTRY
         C     R8,PSWIPTRS        CHECK FOR END OF BLOCK
         BL    *+8                SKIP READ IF STILL IN BLOCK
READNEXT EQU   *
         BAL   R14,READBLOK       READ IN NEXT BLOCK - RESET POINTERS
         CLI   0(R8),X'FF'        CHECK NOW FOR LAST ENTRY IN DIRECTORY
         BE    LASTONE            END OF THEM ALL - EXIT
*                    THIS IS THE ONE WANTED - MOVE OVER
* FIRST SEE IF GENERIC MATCHING IS GOOD                             NTL
*                                                                   NTL
         MVC   PSWPNAME,0(R8)     MOVE IN MEMBER ENTRY
         ST    R8,PSWIPTRS+4      SAVE FOR NEXT ENTRY
         SPACE 1                                                    NTL
         MVC   WKNAME,0(R8)       PREPARE MEMBER NAME FOR ACID TEST NTL
         OC    WKNAME,PSWMMASK    BLOT OUT THE DON'T CARES          NTL
*                                                                   NTL
         CLC   WKNAME,PSWMNAME    SEE IF ITS OUR BOY                NTL
         BNE   NEXTMBR             ..NO..GO TRY AGAIN               NTL
         SPACE 1                                                    NTL
         SR    R15,R15
         B     RETURN
         EJECT
*                    TO READ A BLOCK OF DATA FROM THE DIRECTORY
*
READBLOK PSNMBLOK RB,RENT=YES
         XC    PSWIECB,PSWIECB    CLEAR THE ECB (FOR LUCK & ACCURACY)
         EXCP  PSWIIOB
         WAIT  ECB=PSWIECB
*
         LH    R7,PSWIBUFR        PICK UP USEABLE LENGTH
         LA    R7,PSWIBUFR(R7)    POINT TO END OF USEABLE STUFF
         LA    R8,PSWIBUFR+2      POINT TO FIRST OF IT
         STM   R7,R8,PSWIPTRS     SAVE THESE POINTERS
         SR    R15,R15            PRESET GOOD RETURN, JUST NORMAL
         CLI   PSWIECB,X'7F'      CHECK FOR GOOD RETURN
         BE    RBEXIT             ALL PROPER THUS FAR
         LA    R15,8              RESET FOR IO ERROR
         CLI   PSWIECB,X'42'       CHECK FOR EXTENT VIOLATION
         BNE   RETURN             NOT EXTENT - CALL IT IO ERROR
*                    EXTENT VIOLATION - FETCH NEXT ADDRESS
         L     R2,PSWSLDIR        ADDRESS SYSLIB DIRECTORY DCB
         L     R1,DCBDEBAD-IHADCB(,R2) LOOK IN THE DEB
         SR    R15,R15            TO CAPTURE EXTENT NUMBER
         IC    R15,PSWISEKA       CURRENT EXTENT NUMBER
         LA    R15,1(,R15)        PLUS THE NORMAL ONE
         SR    R0,R0              FOR EXTRNT COUNTER FROM DEB
DEBNMEXT EQU   16                 DISPLACEMENT TO NUMBER OF EXTENTS
         IC    R0,DEBNMEXT(,R1)   CAPTURE NUMBER OF EXTENTS TOTAL
         CR    R15,R0             HOW DO THEY MATCH UP
         BH    RBEOF              LOOKS LIKE THE END OF IT
         STC   R15,PSWISEKA       INDEX TO NEXT EXTENT NUMBER
         MVI   PSWISEKA+7,X'01'   AND THE FIRST R OF NEW TRACK
         SLL   R15,4              TIME LENGTH OF A DASD ENTRY
DEBDASD  EQU   32                 OFFSET INTO DEB FOR DASD SEGMENTS
         LA    R1,DEBDASD(R15,R1) POINT TO PROPER DASD SEGMENT
         MVC   PSWISEKA+1(6),4(R1) MOVE IN NEW ADDRESS
         SR    R15,R15            PASS GOOD RETURN CODE
         B     RBEXIT             AND EXIT THE READ ROUTINE
*
RBEOF    EQU   *                  END OF THE FILE
         MVI   PSWPDSFF,X'FF'     SET EOF FOR NEXT TIME IN
         SR    R15,R15            GOOD RETURN FOR THIS TIME
         B     RBEXIT
         EJECT
*                    TO SET UP THE FIRST TIME THROUGH - GET SOME
*                    MAIN AS A PERMINANT MEMO-PAD - HOLD BUFFER
*                    EL AL BETWEEN CALLS.  BUILD THE CHANNEL PROGRAM
*                    AND GET IT ALL READY....
*
INITIALZ PSNMBLOK
         MVI   PSWPDSFF,X'00'     TURN OFF ANY PREMATURE EOF
         MVC   PSWPNAME,PSWBLANK  CLEAR THE NAME TO START
         MVC   PSWMMASK,PSWMMEMB  COPY OVER THE MASK NAME AND       NTL
         TR    PSWMMASK,TRTAB     SET UP FOR MASKING OPERATION      NTL
         MVC   PSWMNAME,PSWMMEMB  COPY OVER THE NAME AGAIN          NTL
         OC    PSWMNAME,PSWMMASK  AND MAKE READY FOR COMPARE        NTL
         LA    R2,0(,R12)         LEAVE OUR IDENTIFICATION
         ST    R2,PSWIDENT       IN THE PROVIDED ANCHOR AREA
         LR    R9,R1              ADDRESS THE CONSTANTS AREA
         L     R2,PSWSLDIR        ADDRESS OUR OWN DCB
         MVC   DCBDDNAM-IHADCB(8,R2),PSWDDSLB
         ST    R2,WKOPEN          ADDRESS FOR OPENING
         OI    WKOPEN,X'80'       FIRST AND END OF LIST
         OPEN  MF=(E,WKOPEN)
*                    OBTAIN FIRST DISK ADDRESS FROM DEB
         L     R1,DCBDEBAD-IHADCB(,R2)  THE DEB ADDRESS
         LA    R1,DEBDASD(,R1)    POINT TO THE DASD SECTION
         MVC   PSWISEKA+1(6),4(R1) MOVE IN BBCCHH
         MVI   PSWISEKA,X'00'     FIRST M
         MVI   PSWISEKA+7,X'01'   AND FIRST R
         B     INITEXIT           AND BACK TO THE PROCESS
         EJECT
*                    THE FINAL PART - TO DO JUST BEFORE RETURNING
*                    THE END-OF-FILE INDICATION
*
TERMINAT PSNMBLOK
         L     R2,PSWSLDIR        ADDRESS OUR OWN DCB ONCE AGAIN
         ST    R2,WKOPEN
         OI    WKOPEN,X'80'
         CLOSE MF=(E,WKOPEN)
         XC    PSWIPTRS,PSWIPTRS  CLEAR COMMUNICATION AREA
         LA    R15,4              SIGNAL END OF FILE
         B     TERMEXIT
*
*
TRTAB    DC    XL256'00'                                            NTL
         ORG   TRTAB+C' '                                           NTL
         DC    X'FF'                                                NTL
         ORG   TRTAB+C'*'                                           NTL
         DC    X'FF'                                                NTL
         ORG   ,                                                    NTL
         LTORG
         EJECT
*                    THE WORK AREA UNDER THE SAVE-AREA - USED
*                    FOR TRANSIENT WORK SPACE - NOT SAVED ACROSS
*                    REQUESTS
*
WORKAREA DSECT
         DS    18F
WKOPEN   DS    F                  LIST FORM OF OPEN
         PSNMBLOK RENT=REGS
WKNAME   DS    CL8                HOLDING AREA FOR MEMBER NAME      NTL
WKLENG   EQU   *-WORKAREA
         EJECT
         PSNMWORK
*
*
*
         PRINT NOGEN
         DCBD  DSORG=BS,DEVD=DA
         END
