*          DATA SET NTLM802R   AT LEVEL 001 AS OF 06/25/82
PDSDIR   TITLE 'NTLM802R - READ PDS DIRECTORY SUBROUTINE      V1M0'
*.....................................................................*
*                                                                     *
* PROGRAM: NTLM802R                                                   *
*                                                                     *
* PURPOSE: READ PDS DIRECTORY AND RETURN NEXT MEMBER NAME             *
*                                                                     *
* INVOKED BY: NTLM802 - TRANSPARENT LOADER SUBROUTINE                 *
*                                                                     *
* NTLM802 CALLING SEQUENCE (ASM):                                     *
*                                                                     *
*   CALL  NTLM802,(DDNAME,RETCODE,MBRNAME),VL=1                       *
*                                                                     *
*   WHERE:                                                            *
*   -------------------+----------------------+--------------------   *
*   DDNAME  DS  0F     ×  RETCODE    DS  F    ×  MBRNAME  DS  0F      *
*   DDN     DC  CL8' ' ×                      ×  MEMLEN   DC  H'8'    *
*   FILL1   DS  F      ×                      ×  MEMNAME  DS  CL8     *
*   FILL2   DS  F      ×                      ×                       *
*   FILL3   DS  F      ×                      ×                       *
*   -------------------+----------------------+--------------------   *
*                                                                     *
*   ON RETURN:                                                        *
*                                                                     *
*     R15, AND RETCODE=0 - NO PROBLEMS                                *
*     R15, AND RETCODE=4 - END OF DIRECTORY                           *
*     R15, AND RETCODE=8 - SERIOUS ERROR - (IO ERROR)                 *
*                                                                     *
*                                                                     *
*  KEN TRUE -  25JUN82 - BASED ON O051A802 ROUTINE BY MIKE FARMER     *
*                                                                     *
*.....................................................................*
         SPACE
         PRINT  OFF   LOCAL MACROS BE HERE --CODE STARTS ABOUT LINE 451
         MACRO
&TAG     FMSTART  &BASE=R12,&RETURN=RETURN,&RC=,&T=,&PRINT=NO,&PREF=,  X
               &GM=GMLENG,&ZAP=30,&SP=39,&SA=SAVEAREA,&LNK=,           X
               &MBR=NEEDED
         GBLC  &FMGSA,&FMGGM      COMMUNICATE TO THE WORK ENTRIES
         LCLA  &SX                ABBREVIATION OF SYSNDX
         LCLA  &X,&Y              FOR STDSUB CHAINING TO FIND GM AREA
         LCLB  &NORENT,&SUBSYS,&SVRSYS,&RENT,&STDSUB  TYPES OF GEN
         LCLB  &STDSWK            MORE GEN TYPES
&SX      SETA  &SYSNDX            TRUNCATE THE ZEROES OFF TAGS
&Y       SETA  3                  AN OBVIOUS WRONG ANSWER
         AIF   (T'&PREF EQ 'O').NOPREF NO PREFIX GIVEN - USE DEFAULT
.NOPREF  ANOP                     END OF PREFIX ROUTINE
.*
         AIF   (T'&T NE 'O').A100
&NORENT  SETB  1
         AGO   .A999
.A100    AIF   ('&T' NE 'SUBSYS').A200
         AIF   (T'&LNK NE 'O' AND T'&GM NE 'O').A110
         MNOTE  8,'NEED LNK AND GM'
         AGO   .EXIT
.A110    ANOP
&SUBSYS  SETB  1
         AGO   .A999
.A200    AIF   ('&T' NE 'SVRSYS').A300
         AIF   (T'&LNK NE 'O' AND T'&GM NE 'O'AND T'&MBR NE 'O').A210
         MNOTE  8,'NEED LNK ,GM AND MBR'
         AGO   .EXIT
.A210    ANOP
&SVRSYS  SETB  1
         AGO   .A999
.A300    AIF   ('&T' NE 'RENT').A400
         AIF   (T'&GM NE 'O').A310
         MNOTE  8,'GM FOR RENT'
         AGO   .EXIT
.A310    ANOP
&RENT    SETB  1
         AGO   .A999
.A400    AIF   ('&T' NE 'STDSUB').A500
         AIF   (T'&LNK(1) NE 'O').A410
         MNOTE 8,'NEED  NUMERICS FOR LNK WITH STDSUB'
         AGO   .EXIT
.A410    ANOP
&X       SETA  &LNK(1)
         AIF   (T'&LNK(2) EQ 'O').A420
&Y       SETA  &LNK(2)
.A420    ANOP
         AIF   (T'&GM NE 'O').A430
         MNOTE  8,'NEED GM FOR STD SUBROUTINES'
         AGO   .EXIT
.A430    ANOP
&STDSUB  SETB  1
         AGO   .A999
.A500    AIF   ('&T' NE 'STDSWK').A600
         AIF   (T'&LNK(1) NE 'O' AND T'&LNK(2) NE 'O').A510
         MNOTE 8,'NEED 2 NUMERICS FOR LNK WITH STDSWK'
         AGO   .EXIT
.A510    ANOP
&X       SETA  &LNK(1)
&Y       SETA  &LNK(2)
         AIF   (T'&GM NE 'O').A520
         MNOTE  8,'NEED GM FOR STD SUBROUTINES'
         AGO   .EXIT
.A520    ANOP
&STDSWK  SETB  1
         AGO   .A999
.*             HAVE DEFINED A PROBLEM HERE
.A600    ANOP
         MNOTE 8,'T MUST BE ONE OF THE STANDARD SET'
         AGO   .EXIT
.A999    ANOP
.*
.*
&TAG     CSECT
         B     STR&SX-&TAG.(,R15)
         USING &TAG,&BASE(1)
         DC    AL1(ZAP&SX-*-1),CL8'&TAG'   LENGTH AND ID
         FMCREDT
ZAP&SX   DC    &ZAP.S(*)          ZAP AREA
         PUSH  PRINT
         AIF   ('&PRINT' NE 'NO').NP1X
         PRINT NOGEN
.NP1X    ANOP
.*
.*
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
.*
.*                   THE CONSTANTS AS NEEDED BY VARIOUS POSSIBILITIES
         AIF   (&NORENT).INTSA
.*                   THINGS FOR ALL EXCEPT THE NON-REENTRANT ONES
&FMGSA   SETC  '&SA'              PASS DSECT NAME OF WORKAREA/SAVEAREA
&FMGGM   SETC  '&GM'              LENGTH OF GOTTEN MAIN AREA, IF ANY
         AGO   .NORX
.INTSA   ANOP
&SA      DC    9D'0'             SAVEAREA
.NORX    ANOP
.*
.*
         AIF   (NOT &RENT AND NOT &STDSUB AND NOT &STDSWK).NOGMS
GMS&SX   DC    0F'0',AL1(&SP),AL3(&GM)  GETMAIN SUBPOOL/SIZE
.NOGMS   ANOP
.*
         AIF   (NOT &SVRSYS).NOMBR
NLM&SX   DC    CL8'&MBR'          NAME OF THE WORKAREA
.NOMBR   ANOP
.*
         AIF   (N'&BASE EQ 1).BAS1X
BAS2&SX  DC    A(&TAG+4096)       FOR SECOND BASE
         AIF   (N'&BASE EQ 2).BAS1X
BAS3&SX  DC    A(&TAG+8192)       AND THE THIRD
         AIF   (N'&BASE LE 3).BAS1X
         MNOTE  8,'THREE BASES SHOULD BE ENOUGH.....'
         AGO   .EXIT
.BAS1X   ANOP
.*
         AIF   (T'&RETURN EQ 'O').ENDRT ANY RETURN LOGIC WANTED
&RETURN  DS    0H
         AIF   (T'&RC EQ 'O').RCSET
         LA    R15,&RC            INSERT PRESET RETURN CODE
.RCSET   ANOP
.*                   IF THE NORMAL NON-REENTRANT IS IN VOGUE
         AIF   (NOT &NORENT).B100
         L     R13,4(,R13)        POINT BACK ONE SAVEAREA
         AGO   .B999
.*                   SUBSYSTEM EXIT
.B100    AIF   (NOT &SUBSYS).B200
         ST    R13,&LNK.(,R11)     FREE THIS SAVEAREA
         L     R13,4(,R13)        BACK UP ONE SAVEAREA
         AGO   .B999
.*                   SUBSYSTEM SUPERVISOR EXIT
.B200    AIF   (NOT &SVRSYS).B300
         L     R13,4(,R13)        BACK OUT OF SAVE/WORK
         LR    R3,R0
         LR    R2,R15
         LA    R0,NLM&SX          NAME OF THE WORKAREA
         SVC   9                  DELETE THE LITTLE FELLA
         LR    R0,R3
         LR    R15,R2
         L     R1,24(,R13)        PICK UP ORIGINAL R1
         L     R2,&X.(,R1)        PICK UP PREDEFINED POINTER
         XC    &Y.(4,R2),&Y.(R2)  CLEAR THE GM POINTER
         AGO   .B999
.*                   STD REENTRANT - FREE THE SAVE/WORK
.B300    AIF   (NOT &RENT).B400
         LR    R3,R0              SAVE THE RETURN CODES
         LR    R2,R15             .
         L     R0,GMS&SX          LENGTH/SUBPOOL VALUE
         LR    R1,R13             START OF THE GOTTEN STUFF
         L     R13,4(,R13)        BACK OUT OF SAVE/WORK
         SVC   10                 FREE THE GOTTEN CORE
         LR    R0,R3              RESET THE RETURN CODES
         LR    R15,R2             .
         AGO   .B999
.*                  STANDARD SUBROUTINE - CONDITIONAL FREEING
.B400    AIF   (NOT &STDSUB).B500
         CLI   0(R13),X'FF'       CODE FOR ALL OVER
         BE    *+12               YES - TO SPECIAL FREEING
         L     R13,4(,R13)        NORMAL RETURN SO FAR
         B     SSBX&SX            TO STD RETURN
         L     R0,GMS&SX          FREE THE GOTTEN MAIN
         LA    R1,0(,R13)         CLEAN POINTER TO THE MAIN
         L     R13,4(,R13)        BACK OUT OF SAVE/WORK
         LR    R3,R0              SAVE THE RETURN CODES
         LR    R2,R15             .
         SVC   10                 FREE THE GOTTEN CORE
         L     R15,24(,R13)       THE ORIGINAL R1
         L     R15,&X.(,R15)      FOLLOW THE POINTER CHAIN
         AIF   (&Y EQ 3).B410
         L     R15,&Y.(,R15)      TO ITS SAVEAREA POINTER
.B410    ANOP
         XC    0(4,R15),0(R15)    CLEAR SAVE/AREA POINTER
         LR    R0,R3
         LR    R15,R2
SSBX&SX  EQU   *
         AGO   .B999
.*                   FOR THE SPECIAL SUBROUTINE TYPE - WITH SA
.B500    AIF   (NOT &STDSWK).B600
         L     R13,4(,R13)        POINT BACK ONE SAVEAREA
         AGO   .B999
.*                   WELL - SEEMS TO BE AN INTERNAL ERROR HERE
.B600    ANOP
         MNOTE  12,'NO INDICATOR SET FOR TYPE OF GEN'
         AGO   .EXIT
.*
.B999    ANOP
         L     R14,12(,R13)
         LM    R1,R12,24(R13)
         MVI   12(R13),X'FF'      EXIT INDICATOR
         BR    R14
.ENDRT   ANOP
.*
.*                                THE START OF THE ENTRY LOGIC
STR&SX   STM   R14,R12,12(R13)
         LR    &BASE(1),R15
         AIF   (N'&BASE EQ 1).BAS2X
         L     &BASE(2),BAS2&SX
         USING &TAG+4096,&BASE(2)
         AIF   (N'&BASE EQ 2).BAS2X
         L     &BASE(3),BAS3&SX
         USING &TAG+8192,&BASE(3)
.BAS2X   ANOP
.*
         AIF   (NOT &NORENT).C100
         LA    R15,&SA            POINTER TO DEFINED SAVEAREA
         XC    12(60,R15),12(R15)   CLEAR THE SAVEAREA
         ST    R13,4(,R15)
         ST    R15,8(,R13)
         LR    R13,R15
         AGO   .C999
.*                   IF THIS IS FOR A SUBSYSTEM POINTER SETUP
.C100    AIF   (NOT &SUBSYS AND NOT &SVRSYS).C200
         LR    R2,R13             SAVE CURRENT SA FOR R15/R2 RELOAD
         AIF   (&SUBSYS).C110     NORMAL TYPE - JUST RECHAIN SA
.*                   SUBSYSTEM SVR - LOAD THE WORKAREA
         LA    R0,NLM&SX          POINT TO THE MEMBER NAME
         SR    R1,R1              NO DCB ALLOWED
         SVC   8                  LOAD THE MODULE
         LR    R11,R0             ADDRESS THAT WORKAREA
.C110    ANOP                     STACK DOWN THE SAVEAREAS
         L     R15,&LNK.(,R11)    POINTER TO START OF OPEN AREA
         ST    R13,4(,R15)        CROSS-CHAIN THE SAVE-AREAS
         ST    R15,8(,R13)        .
         LR    R13,R15            HAVE THE NEW SAVE-AREA
         LA    R15,&GM+31         REQUESTED WORKAREA SIZE
         SRL   R15,5              ALIGN ON CORE-DUMP BOUNDARY
         SLL   R15,5              .
         LA    R15,0(R15,R13)     POINT TO END OF WORKAREA
         C     R15,&LNK+4(,R11)   STILL INSIDE WORKAREA
         BNH   CLR&SX+6           SO FAR, SO GOOD
         EX    R0,*               OOPS
CLR&SX   XC    12(0,R13),12(R13)
         ST    R15,&LNK.(,R11)     SHOW NEW END OF SAVEAREA
         LA    R15,&GM-13
         LA    R14,255            OTHER ALTERNATIVE CLEARING SIZE
         CR    R15,R14
         BL    *+6                SELECT THE LESSER OF TWO IEWAALSS
         LR    R15,R14
         EX    R15,CLR&SX
         USING &SA,R13            ADDRESS THE WORKAREA
         MVC   72(8,R13),5(R12)   MOVE PGM NAME TO WORKAREA
         LM    R15,R2,16(R2)      REESTABLIST THE CRITICAL POINTERS
         AGO   .C999
.*                   HOW ABOUT THE STRAIGHT REENTRANT VERSION
.C200    AIF   (NOT &RENT).C300
         L     R0,GMS&SX          SUBPOOL AND LENGTH
         BAL   R1,*+4
         SVC   10
         ST    R13,4(,R1)
         ST    R1,8(,R13)
         LR    R15,R13            SAVE THE OLD SA POINTER
         LR    R13,R1             NEW SA POINTER SET
         USING &SA,R13            ADDRESS THE WORKAREA
         MVC   72(8,R13),5(R12)   MOVE PGM NAME TO WORKAREA
         LM    R15,R1,16(R15)     RESET THE CRITICAL POINTERS
         AGO   .C999              AND ON TO FINAL GENERATION
.*                   CODE FOR STANDARD SUBROUTINE ENTRY
.C300    AIF   (NOT &STDSUB).C400
         AIF   (&Y EQ 3).C310     SPECIAL ONE-POINTER CASE
         L     R15,&X.(,R1)       HOW FAR OFF R1 IS THE POINTER
         L     R15,&Y.(,R15)      HOW FAR INTO AREA IS SAVEAREA POINTER
         LTR   R15,R15            IS THERE ANYTHING THERE
         BNZ   SSBS&SX            YES - USE IT
         L     R2,&X.(,R1)        REPOINT TO THE ENTRY
         L     R0,GMS&SX          SUBPOOL AND LENGTH
         BAL   R1,*+4             INDICATE GETMAIN
         SVC   10                 AND ISSUE THE SVC
         ST    R1,&Y.(,R2)        RECORD THIS POINTER FOR EVER
         AGO   .C320
.C310    ANOP                     FOR THE SINGLE-POINTER CASE
         L     R15,&X.(,R1)       HOW FAR OFF R1 IS THE POINTER
         LTR   R15,R15            IS THERE ANYTHING THERE
         BNZ   SSBS&SX            YES - USE IT
         LA    R2,&X.(,R1)        REPOINT TO THE ENTRY
         L     R0,GMS&SX          SUBPOOL AND LENGTH
         BAL   R1,*+4             INDICATE GETMAIN
         SVC   10                 AND ISSUE THE SVC
         ST    R1,0(,R2)          RECORD THIS POINTER FOR EVER
.C320    ANOP                     REJOIN NORMAL PATH...
         LR    R15,R1             REPOINT PROPERLY
         MVC   72(8,R15),5(R12)   MOVE PGM NAME TO WORKAREA
         LM    R0,R2,20(R13)      REESTABLISH THOSE DESTROYED REGISTERS
SSBS&SX  EQU   *
         ST    R13,4(,R15)
         ST    R15,8(,R13)
         LR    R13,R15            NEW SA POINTER SET
         MVI   0(R13),X'00'       CLEAR POSSIBLE EXIT POINTER
         USING &SA,R13            ADDRESS THE WORKAREA
         AGO   .C999
.*                   CODE FOR STANDARD SUBROUTINE WITH SAVEAREA PASSED
.C400    AIF   (NOT &STDSWK).C500
         L     R15,&X.(,R1)       HOW FAR OFF R1 IS THE POINTER
         LA    R15,&Y.(,R15)      HOW FAR INTO AREA IS SAVEAREA POINTER
         ST    R13,4(,R15)
         ST    R15,8(,R13)
         LR    R13,R15            NEW SA POINTER SET
         USING &SA,R13            ADDRESS THE WORKAREA
         MVC   72(8,R13),5(R12)   MOVE PGM NAME TO WORKAREA
         AGO   .C999
.*
.C500    ANOP                     LOOKS LIKE A PROBLEM
         MNOTE  12,'INTERNAL ERROR IN GENERATION TYPE'
         AGO   .EXIT
.C999    ANOP
.*
.*
.EXIT    ANOP
         POP   PRINT
         MEND
         MACRO
         FMCREDT
         DC    C' &SYSDATE &SYSTIME INTEL-CIS '
         MEND
         MACRO
&TAG     FMBLOCK &P,&RENT=YES
         GBLC  &FMGPREF(50)       SAVE ROOM FOR PREFIXES
         GBLA  &FMGSUB            POINTER TO NEXT PREFIX
         LCLC  &PF                THE PREFIX DECIDED UPON FOR THIS ONE
         LCLA  &WPF               USED IN GENERATING THE RENT=REGS
.*
         AIF   ('&RENT' NE 'REGS').GBLK      GENERATE NORMAL BLOCK
         AIF   (&FMGSUB NE 0).GREGS          GEN REGS IF ANY NEEDED
         MNOTE *,'       NO ENTRIES'
         AGO   .EXIT2
.GREGS   ANOP                     GENERATE THE REG SAVE-WORDS
&WPF     SETA  &WPF+1             POINT ON TO NEXT ENTRY
&PF      SETC  '&FMGPREF(&WPF)'   NAME OF THE NEXT PREFIX
&PF.R14  DS    F
         AIF   (&WPF LT &FMGSUB).GREGS AND DO THEM ALL
&FMGSUB  SETA  0                  RE-CLEAR THE VALUE
         AGO   .EXIT2             END OF RENT=REGS GENERATION
.*
.*
.GBLK    ANOP
         AIF   (T'&P EQ 'O').DEFLP DEFAULT THE PREFIX
         AIF   (K'&P LE 4).PLNOK  LENGTH OF PROVIDED IS OK
         MNOTE 8,'ONLY 4 CHARACTERS MAX FOR PREFIX'
         AGO   .EXIT
.PLNOK   ANOP
&PF      SETC  '&P'               USE PROVIDED PREFIX
         AGO   .PFSET
.DEFLP   ANOP                     BUILD DEFAULT PREFIX ID
         AIF   (K'&TAG LE 4).SMALTAG
&PF      SETC  '&TAG'(1,4)        USE FIRST FOUR CHARS OF TAG
         AGO   .PFSET
.SMALTAG ANOP                     USE FULL TAG AS PREFIX
&PF      SETC  '&TAG'
.PFSET   ANOP                     THE PREFIX IS DECIDED UPON.....
         AIF   ('&RENT' EQ 'YES').HAVRENT
         AIF   (&FMGSUB NE 0).HAVRENT
&PF.R14  DC    F'0'               HOLD RETURN ADDR
         AGO   .GENCODE
.HAVRENT ANOP
&FMGSUB  SETA  &FMGSUB+1
&FMGPREF(&FMGSUB)  SETC  '&PF'    SAVE PREFIX IN TABLE FOR LATER
.*
.GENCODE ANOP
&PF.EXIT L     R14,&PF.R14        RETURN ADDR
         MVI   &PF.R14,X'FF'      SHOW EXIT
         BR    R14                EXIT
&TAG     ST    R14,&PF.R14        SAVE RETURN
.*
.EXIT    ANOP
         SPACE 1
.EXIT2   ANOP
         MEND
         MACRO
         FMWORK1
         GBLC  &FMGSA,&FMGGM
&FMGSA   DSECT
         DS    18F                SAVEAREA
         DS    CL8                IDENTIFIER OF THE OWNER OF THIS
         FMBLOCK  RENT=REGS
         MEND
         MACRO
         FMWORK2  &ROUND
         GBLC  &FMGSA,&FMGGM
         LCLA  &RD,&SX
&RD      SETA  32                 DEFAULT AMOUNT TO ROUND
&SX      SETA  &SYSNDX            TO ABBREVIATE THE SUFFIX
         AIF   (T'&ROUND EQ 'O').RDSET
         AIF   ('&ROUND' EQ 'DUMP').RDSET   ALIGN TO DUMP SIZE
         AIF   ('&ROUND' NE 'PAGE').RDNUM
&RD      SETA  4096               SET TO PAGE SIZE
         AGO   .RDSET
.RDNUM   ANOP                     GAVE AN ACTUAL NUMBER
&RD      SETA  &ROUND
.RDSET   ANOP
ETL&SX   EQU   *-&FMGSA           LENGTH OF ALLOCATED PART
ELX&SX   EQU   &RD*(1+ETL&SX/&RD)-ETL&SX
         DS    CL(ELX&SX)         FILLER
&FMGGM   EQU   *-&FMGSA           LENGTH OF WORKAREA
         MEND
         PRINT  ON
NTLM802R FMSTART T=STDSUB,GM=WKLENG,LNK=(0,12),PRINT=YES
         EJECT
         LR    R10,R1             SAVE THE PASSED PARM AREA
         ST    R10,WKPARM         SAVE ADDRESS FOR DEBUGGING
*                    CHECK FOR FIRST-TIME CALL
         L     R9,0(,R10)         PICK UP THE FIRST PARAMETER PASSED
         USING PASSWORK,R9        AND ADDRESS IT ACCORDINGLY
         CLC   WKDDNAM,PWKDDNAM   IS THIS THE SAME DDNAME
         BE    NORMAL             YES - CARRY ON WITH IT
         BAL   R14,INITIALZ       OOPS - THE SPECIAL CASE
         B     READNEXT           JUMP INTO THE LOOP PROPERLY
*
NORMAL   EQU   *                  NORMAL NEXT-REQUEST PATH
*                    IS THIS THEN THE FINAL CALL
         CLI   PWKEOF,X'FF'        FINAL BY CHAN-PROG OR USER REQUEST
         BNE   NEXTMBR            NORMAL STILL - CARRY ON
LASTONE  EQU   *                  LAST CALL - TERMINATE AND RETURN
         BAL   R14,TERMINAT
         B     SETRC
*
NEXTMBR  EQU   *                  NORMAL CALL FOR NEXT MEMBER
         L     R8,CAPOINTS+4      PICK UP CURRENT MBR POINTER
         IC    R1,11(,R8)         THIS IS (KINDA) THE LENGTH OF ENTRY
*                    THIS IS NUMBER OF HALF-WORDS OF TTR DATA
*                    (IN BYTES 3-7 ONLY, OF COURSE)
         N     R1,=X'0000001F'    CLEAR OUT UNNEEDED DATA
         LA    R1,12(R1,R1)       THIS IS NOW LENGTH OF ENTRY
         LA    R8,0(R1,R8)        POINT TO THE NEXT ENTRY
         C     R8,CAPOINTS        CHECK FOR END OF BLOCK
         BL    *+8                SKIP READ IF STILL IN BLOCK
READNEXT EQU   *
         BAL   R14,READBLOK       READ IN NEXT BLOCK - RESET POINTERS
         CLI   0(R8),X'FF'        CHECK NOW FOR LAST ENTRY IN DIRECTORY
         BE    LASTONE            END OF THEM ALL - EXIT
*                    THIS IS THE ONE WANTED - MOVE OVER
         L     R7,8(,R10)         PICK UP POINTER TO OUTPUT AREA
         USING MBRFIELD,R7        ADDRESS THE PASSED BLOCK
         LH    R1,MBFLENG         LENGTH REQUESTED
         BCTR  R1,0
         EX    R1,MOVEMBR         PRESENT REQUESTOR WITH ANSWER
         ST    R8,CAPOINTS+4      SAVE FOR NEXT ENTRY
         SR    R15,R15
         B     SETRC
MOVEMBR  MVC   MBFMEMB(0),0(R8)    MOVE IN MEMBER ENTRY
         DROP  R7                 QUIT ADDRESSING PASSED RECEIVING AREA
         EJECT
*                    TO READ A BLOCK OF DATA FROM THE DIRECTORY
*
READBLOK FMBLOCK  RB,RENT=YES
         XC    CAIECB,CAIECB      CLEAR THE ECB (FOR LUCK & ACCURACY)
         EXCP  CAIOB
         WAIT  ECB=CAIECB
*
         LH    R7,CABUFFR         PICK UP USEABLE LENGTH
         LA    R7,CABUFFR(R7)     POINT TO END OF USEABLE STUFF
         LA    R8,CABUFFR+2       POINT TO FIRST OF IT
         STM   R7,R8,CAPOINTS     SAVE THESE POINTERS
         SR    R15,R15            PRESET GOOD RETURN, JUST NORMAL
         CLI   CAIECB,X'7F'       CHECK FOR GOOD RETURN
         BE    RBEXIT             ALL PROPER THUS FAR
         LA    R15,8              RESET FOR IO ERROR
         CLI   CAIECB,X'42'       CHECK FOR EXTENT VIOLATION
         BNE   SETRC              NOT EXTENT - CALL IT IO ERROR
*                    EXTENT VIOLATION - FETCH NEXT ADDRESS
         L     R1,DCBDEBAD-IHADCB+CADCB OBTAIN THE DEB
         SR    R15,R15            TO CAPTURE EXTENT NUMBER
         IC    R15,CAISEEKA       CURRENT EXTENT NUMBER
         LA    R15,1(,R15)        PLUS THE NORMAL ONE
         SR    R0,R0              FOR EXTRNT COUNTER FROM DEB
DEBNMEXT EQU   16                 DISPLACEMENT TO NUMBER OF EXTENTS
         IC    R0,DEBNMEXT        CAPTURE NUMBER OF EXTENTS TOTAL
         CR    R15,R0             HOW DO THEY MATCH UP
         BH    RBEOF              LOOKS LIKE THE END OF IT
         STC   R15,CAISEEKA       INDEX TO NEXT EXTENT NUMBER
         MVI   CAISEEKA+7,X'01'   AND THE FIRST R OF NEW TRACK
         SLL   R15,4              TIME LENGTH OF A DASD ENTRY
DEBDASD  EQU   32                 OFFSET INTO DEB FOR DASD SEGMENTS
         LA    R1,DEBDASD(R15,R1) POINT TO PROPER DASD SEGMENT
         MVC   CAISEEKA+1(6),4(R1) MOVE IN NEW ADDRESS
         SR    R15,R15            PASS GOOD SETRC CODE
         B     RBEXIT             AND EXIT THE READ ROUTINE
*
RBEOF    EQU   *                  END OF THE FILE
         MVI   PWKEOF,X'FF'        SET EOF FOR NEXT TIME IN
         SR    R15,R15            GOOD RETURN FOR THIS TIME
         B     RBEXIT
         EJECT
*                    TO SET UP THE FIRST TIME THROUGH - GET SOME
*                    MAIN AS A PERMINANT MEMO-PAD - HOLD BUFFER
*                    EL AL BETWEEN CALLS.  BUILD THE CHANNEL PROGRAM
*                    AND GET IT ALL READY....
*
INITIALZ FMBLOCK
         MVI   PWKEOF,X'00'        TURN OFF ANY PREMATURE EOF
         L     R7,8(,R10)         PICK UP POINTER TO OUTPUT AREA
         USING MBRFIELD,R7        ADDRESS THE PASSED BLOCK
         MVC   MBFMEMB(8),BLANKS   CLEAR THE NAME TO START
         DROP  R7                 QUIT ADDRESSING PASSED RECEIVING AREA
         MVC   CADCB(CONDCBL),CONDCB                MOVE THE DCB OVER
         MVC   WKOPEN(CONOPENL),CONOPEN             AND THE OPEN P-L
         MVC   DCBDDNAM-IHADCB+CADCB,PWKDDNAM    INSERT DD NAME
         MVC   WKDDNAM,PWKDDNAM   REMINDER OF ITS VALUE
         OPEN  (CADCB,(INPUT)),MF=(E,WKOPEN)
*                    OBTAIN FIRST DISK ADDRESS FROM DEB
         L     R1,DCBDEBAD-IHADCB+CADCB THE DEB ADDRESS
         LA    R1,DEBDASD(,R1)    POINT TO THE DASD SECTION
         MVC   CAISEEKA+1(6),4(R1) MOVE IN BBCCHH
         MVI   CAISEEKA,X'00'     FIRST M
         MVI   CAISEEKA+7,X'01'   AND FIRST R
*                    BUILD UP THE CHANNEL PROGRAM
         LA    R1,CAISEEKA+3      POINT TO CCHHR
         ST    R1,CACHANP         FOR THE SEARCH CCW
         ST    R1,CACHANP+24      FOR THE NEXT READ COUNT
         LA    R1,CACHANP         BACK TO START OF THE CHAN PROG
         ST    R1,CACHANP+8       FOR THE TIC AFTER SEARCH
         LA    R1,CABUFFR         POINT TO THE BUFFER
         ST    R1,CACHANP+16      FOR THE READ CCW
         OC    CACHANP(CONCCWSL),CONCCWS PUT IN THE CCWS
*
         MVI   CAIFLAGS,X'42'     USING CHAINING, NOT RELATED
         LA    R1,CACHANP         POINT TO CHANNEL PROGRAM
         ST    R1,CAICHANP        INTO THE IOB
         LA    R1,CAIECB          THE ECB POINTER
         ST    R1,CAIECBA         INTO THE IOB
         LA    R1,CADCB           THE DCB ADDRESS
         ST    R1,CAIDCB          INTO THE IOB, TOO
*                    THIS COMPRISES THE IOB
         B     INITEXIT           AND BACK TO THE PROCESS
         EJECT
*                    THE FINAL PART - TO DO JUST BEFORE RETURNING
*                    THE END-OF-FILE INDICATION
*
TERMINAT FMBLOCK
         CLOSE CADCB,MF=(E,WKOPEN)
         MVI   0(R13),X'FF'       KEY TO RELEASE GOTTEN MAIN
         LA    R15,4              SIGNAL END OF FILE
         B     TERMEXIT
         SPACE 2                                                    NTL
SETRC    L     R1,4(,R10)        GET ADDRESS OF RETURN CODE         NTL
         STCM  R15,B'1111',0(R1) SAVE IT IN RETURN CODE FIELD       NTL
         B     RETURN            GO EXIT AND POST CODE IN R15..     NTL
         EJECT
*                    PROGRAM CONSTANTS
CONOPEN  OPEN  (CONDCB,(INPUT)),MF=L
CONOPENL EQU   *-CONOPEN          LENGTH OF PARM LIST
*
CONCCWS  DS    0D
         CCW   X'31',0,X'60',5    SEARCH ID EQUAL
         CCW   X'08',0,X'60',1    TIC   *-8
         CCW   X'86',0,X'60',256  MT READ DATA
         CCW   X'92',0,X'20',5    MT READ COUNT (OF NEXT BLOCK)
CONCCWSL EQU   *-CONCCWS          LENGTH OF THIS CHAN PROGRAM
*
BLANKS   DC    CL8' '             UTILITY BLANKING FIELD
         LTORG
*
CONDCB   DCB   DSORG=PO,MACRF=E,DDNAME=NEEDED,DEVD=DA
CONDCBL  EQU   *-CONDCB           LENGTH OF THE DCB
*
         EJECT
*                    THE BASIC REQUEST BLOCK PASSED - HAS THE
*                    DDNAME AND A PLACE FOR THE CALLER TO REQUEST
*                    END OF PROCESSING
*                    FIRST PASSED BLOCK - INTERNAL ANCHOR FOR GOTMAIN
PASSWORK DSECT
PWKDDNAM DS    CL8                DDNAME TO BE USED
PWKEOF   DS    F                  TO INDICATE EOF, OR RECORD IT HERE
PWKWORK  DS    F                  POINTER TO OUR OWN GOTTEN MAIN
PWKRESVD DS    F                  EXTRA POINTER IF NEEDED
PWKLENG  EQU   *-PASSWORK
         EJECT
*
*
*                    THE THIRD PARAMETER PASSED - THE RECEIVING FIELD
MBRFIELD DSECT
MBFLENG  DS    H                  LENGTH OF THE MEMBER REQUESTED
MBFMEMB  DS    CL8                MEMBER NAME (OPTIONALLY REST OF ENT)
         DS    CL40               OPTION EXTRA FIELDS FROM DIRECTORY
         EJECT
*                    THE INTERNAL WORK - CONSTANT AREA
*                    ANCHORED BY PWKWORK
*
         FMWORK1
CADCB    DS    CL(CONDCBL)        ROOM FOR THE DCB
CAIECB   DS    F                  ECB FOR READ AND WAIT
CAIOB    DS    0D                 IOB FOR THE READING
CAIFLAGS DS    XL4                FLAGS SET TO 42000000
CAIECBA  DS    A                  ADDRESS OF THE ECB
         DS    X                  FLAG3
CAICSW   DS    XL7                THE CHANNEL STATUS WORD RETURNED
CAICHANP DS    A                  ADDRESS OF THE CHANNEL PROGRAM
CAIDCB   DS    A                  ADDRESS OF THE DCB
         DS    2F
CAISEEKA DS    XL8                FULL SEEK ADDRESS - MBBCCHHR
CAIOBL   EQU   *-CAIOB            LENGTH OF IOB - SB X'28' + 4 FOR ECB
*
CACHANP  DS    4D                 CHANNEL PROGRAM BUILD AREA
CAPOINTS DS    2F                 POINTERS INTO BUFFER FOR DEBLOCKING
WKDDNAM  DS    CL8                THE DDNAME OF THE FILE
*                    THE WORK AREA UNDER THE SAVE-AREA - USED
*                    FOR TRANSIENT WORK SPACE
WKOPEN   DS    CL(CONOPENL)       LIST FORM OF OPEN
WKPARM   DS    F                  SAVE FOR PARM PASSED - FIRST TIME
WKDOUBL  DS    D                  UTILITY DOUBLE-WORD WORK AREA
CABUFFR  DS    CL256              THE BUFFER FOR DIRECTORY READS
         FMWORK2    256
         EJECT
*
         PRINT NOGEN
*
         DCBD  DSORG=PS,DEVD=DA
         END
