*          DATA SET PSNRFEXC   AT LEVEL 001 AS OF 10/30/80
         TITLE 'PSNRFEXC - REFORMAT THE EXEC STATEMENT'
PSNRFEXC PSNMSTRT  SASIZ=WKLENG
         EJECT
*                    TO REFORMAT THE EXECUTE STATEMENT, BUILDING
*                    THE COMMENT BLOCK IF NEEDED, AND ALIGNING
*                    THE OPERANDS ONE TO A LINE, ELIMINATING
*                    THOSE THAT ARE NONSTANDARD.
*
         L     R9,PSWEXEND        ADDRESS THE EXEC BLOCK
         USING EXECBLOK,R9        OFFICIALLY
         BAL   R14,PUTCOMNT       PUT OUT THE HEADING COMMENT
*
         LA    R6,EXCEPGM         POINT TO THE FIRST ENTRY - REQUIRED
         LA    R5,EXCELSTG        POINT TO LAST GOOD ONE
         LA    R4,EXCNUMKW        LOAD NUMBER OF KWDS ON 1ST LINE   NTL
         BAL   R14,EXECNAME       PUT OUT THE EXEC LINE FIRST
*
NEXTWORD EQU   *
         LA    R6,EXCELENG(,R6)   POINT TO THE NEXT ENTRY
         CR    R6,R5              STILL WITHIN THE GOOD AREA
         BH    EXECBILT           DONE - THIS ONE IS BUILT
         BCTR  R4,0               DECREMENT COUNT OF 1ST LINE STUFF NTL
         CLC   0(8,R6),PSWHEXZ    IS THIS ENTRY USED
         BE    NEXTWORD           NO - CARRY STRAIGHT ON
         MVI   0(R8),C','         MORE TO COME - CONTINUE PREVIOUS
         LA    R8,1(,R8)          BUMP POINTER FOR COMMA            NTL
         CH    R4,=H'0'           SEE IF NOWS THE TIME              NTL
         BP    NEXTWRD1            TO GET A NEW LINE OR NOT         NTL
         SPACE 1                                                    NTL
         L     R15,PSWWRITE       NEW LINE TIME....
         BALR  R14,R15            PROCURE THE BUILDING AREA
         LA    R7,70(,R15)        POINT TO END OF IT
         LA    R8,15(,R15)        AND THE START OF IT
NEXTWRD1 BAL   R14,MOVEKWD        AND DO THE WORK
         B     NEXTWORD           AND GO TO WORK
*
EXECBILT EQU   *
         SR    R15,R15
         B     RETURN
         EJECT
*                    TO INSERT THE COMMENT IN THE TOP OF THE EXEC
*                    USING THE ONE THERE, OR BUILD A PATTERN FOR
*                    THEM TO BUILD ON
*
PUTCOMNT PSNMBLOK  PCM,RENT=YES
         L     R8,EXCCOMNT        ADDRESS THE COMMENT LINES OFF EXEC
         USING COMMENT,R8         AND ADDRESS IT
         LTR   R8,R8              IS THERE A COMMENT
         BZ    PCMDEFLT           NO - BUILD OUR OWN
         L     R15,PSWWRITE       BUILD THE STARS LINE
         BALR  R14,R15            REQUEST THE BUFFER
         MVI   2(R15),C'*'        PUT IN THE STANDARD PART
         MVC   3(68,R15),2(R15)   ROLL OVER THE *****'S
*
PCMBUILD EQU   *                  BUILD EACH OF THE LINES
         TM    CMTIND1,CMTI1AST   IS IT A FULL STRING OF ***
         BO    PCMNEXT            ALL STARS - IGNORE IT
         L     R15,PSWWRITE       FETCH BACK NEXT BUFFER
         BALR  R14,R15
         MVI   2(R15),C'*'         STANDARD COMMENT STARTER
         MVI   70(R15),C'*'        STANDARD BACK FRAMING
         TM    CMTIND1,CMTI1BLK   HOW ABOUT A BLANK LINE
         BO    PCMNEXT            YES - HAVE DONE THAT ALREADY
*                    PUT THE COMMENT IN ON COLUMN 12
         LH    R1,CMTLENGC        THE LENGTH OF THE TEXT
         BCTR  R1,0               FOR THE EX MOVE
         LA    R0,58              MAXIMUM LENGTH ALLOWED - THIS FORMAT
         CR    R1,R0              WILL IT FIT
         BNH   *+10               BIF IT ALL FITS
         LR    R1,R0              NO FIT - USE MAX ALLOWED
         MVI   70(R8),C'+'        SHOW WAS MORE TO COMMENT
         EX    R1,PCMMOVE         MOVE COMMENT TO LINE
*
PCMNEXT  EQU   *
         L     R8,CMTNEXT         CHECK - IS THERE ANOTHER COMMENT
         LTR   R8,R8              .
         BNZ   PCMBUILD           STILL MORE - ON WITH IT
         L     R15,PSWWRITE       BUILD THE STARS LINE
         BALR  R14,R15            REQUEST THE BUFFER
         MVI   2(R15),C'*'        PUT IN THE STANDARD PART
         MVC   3(68,R15),2(R15)   ROLL OVER THE *****'S
         B     PCMEXIT
PCMMOVE  MVC   11(0,R15),CMTTEXT   MOVE TEXT TO OUTPUT LINE
         DROP  R8
*
*                    IF NO COMMENT - PROVIDE A PATTERN
PCMDEFLT EQU   *
*
         L     R15,PSWWRITE       ADDRESS THE WRITER
         BALR  R14,R15            REQUEST THE BUFFER
         MVI   2(R15),C'*'        PUT IN THE STANDARD PREFIX
         MVC   3(68,R15),2(R15)   ROLL DOWN THE *
*
         L     R15,PSWWRITE       ADDRESS THE WRITER
         BALR  R14,R15            REQUEST THE BUFFER
         MVI   2(R15),C'*'        PUT IN THE STANDARD PREFIX
         MVI   70(R15),C'*'       END OF THE LINE FRAMING
         MVC   11(8,R15),EXCSTEP  INSERT THE PROC NAME
         MVC   19(20,R15),=C' - TITLE OF THE STEP'
*
         L     R15,PSWWRITE       ADDRESS THE WRITER
         BALR  R14,R15            REQUEST THE BUFFER
         MVI   2(R15),C'*'        PUT IN THE STANDARD PREFIX
         MVI   70(R15),C'*'       END OF THE LINE FRAMING
         MVC   11(26,R15),=C'PURPOSE  - WHAT DOES IT DO'     FILL-IN
*
         L     R15,PSWWRITE       ADDRESS THE WRITER
         BALR  R14,R15            REQUEST THE BUFFER
         MVI   2(R15),C'*'        PUT IN THE STANDARD PREFIX
         MVI   70(R15),C'*'       END OF THE LINE FRAMING
         MVC   11(29,R15),=C'RESTART  - (1) SET XXX TO (0)'  FILL-IN
*
         L     R15,PSWWRITE       ADDRESS THE WRITER
         BALR  R14,R15            REQUEST THE BUFFER
         MVI   2(R15),C'*'        PUT IN THE STANDARD PREFIX
         MVI   70(R15),C'*'       END OF THE LINE FRAMING
         MVC   11(27,R15),=C'           (2) STEP RESTART'  FILL-IN
*
         L     R15,PSWWRITE       ADDRESS THE WRITER
         BALR  R14,R15            REQUEST THE BUFFER
         MVI   2(R15),C'*'        PUT IN THE STANDARD PREFIX
         MVC   3(68,R15),2(R15)   ANOTHER START LINE FOR THE END
*
         B     PCMEXIT            THE DEFAULT BOX IS BUILT
*
         LTORG
         EJECT
*                    TO INSERT THE NAME OF THE STEP, AND THE
*                    LITERAL 'STEP' INTO THE FIRST REAL LINE
*
EXECNAME PSNMBLOK  ENM
         L     R15,PSWWRITE       PICK UP THE NEXT OUTPUT BUFFER
         BALR  R14,R15
         LR    R8,R15             ADDRESS THE BUFFER
         MVC   2(8,R8),EXCSTEP    STEP NAME INTO THE LINE
         LA    R7,70(,R8)         POINT TO END OF  LINE
         CLI   9(R8),C' '         PROPER STEP NAME? (STEPNNN)       NTL
         BE    EXECNAM1           YES..DO A DIFFERENT WAY           NTL
         MVC   11(4,R8),PSWCEXEC  INCLUDE THE LITERAL
         LA    R8,16(,R8)         POINT TO RECEIVING AREA
         B     EXECNAM2                                             NTL
EXECNAM1 MVC   10(4,R8),PSWCEXEC  INCLUDE THE LITERAL               NTL
         LA    R8,15(,R8)         POINT TO RECEIVING AREA           NTL
EXECNAM2 BAL   R14,MOVEKWD        AND MOVE IN THE SYMBOL            NTL
         B     ENMEXIT
         EJECT
*                    GIVEN R8 POINTS TO WHERE TO START THE BUILD,
*                    AND R7 POINTS TO LAST USEABLE CHARACTRER ON
*                    THE LINE, R6 POINTS TO THE WORD ENTRY;  MOVE THE
*                    VALUE, AND ITS ORIGINAL UNSUBSTITUTED VALUE TO
*                    THE PRINT LINE
*
MOVEKWD  PSNMBLOK  MKW
         USING EXCENTRY,R6        ADDRESS THE INDIVIDUAL ENTRY
         MVC   0(8,R8),EXCPKEYW    PUT IN THE VALUE ITSELF
         AH    R8,EXCPKEYL        POINT PAST THE WORD
         MVI   0(R8),C'='         PUT BACK THE DELIMITER
         LA    R8,1(,R8)          KEEP SCORE OF THE POINTER
         SR    R1,R1              CLEAR FOR INSERTION OF THE LENGTH
         IC    R1,EXCPORIG        LENGTH OF THE SUBSTITUTION VALUE
         LTR   R1,R1              IS THERE A VALUE THERE
         BNP   MKWNONE            IF NOT POSITIVE LENGTH, NO VALUE
         BCTR  R1,0
         L     R15,EXCPORIG       POINT TO THE DATA ITSELF
         LA    R0,0(,R7)          COMPUTE LENGTH LEFT FOR THIS PART
         SR    R0,R8              AS LAST COLUMN LESS CURRENT POINTER
         CR    R1,R0              AND SEE IF IT WILL FIT
         BL    *+8                YES - PLENTY OF ROOM
         BAL   R14,KW2LINE        OOPS - USE TWO LINES FOR IT
         EX    R1,MKWMOVE         MOVE IN THE VALUE ITSELF
         LA    R8,1(R1,R8)        COLUMN PAST THE VALUE, FOR LATER ,
MKWNONE  EQU   *
         L     R15,EXCPCOM        PICK UP THE COMMENT POINTER
         LTR   R15,R15            IS THERE A COMMENT
         BZ    MKWEXIT            NO - END OF THE WORD PROCESS
*
*                    PUT IN THE COMMENT - NOTE IT IS RIGHT JUSTIFIED -
*                    THERE ARE OTHER WAYS TO DO IT;  THIS WAS SIMPLY
*                    THE FIRST WAY TO TRY OUT - UNDOUBTEDLY IT WILL
*                    BE CHANGED AS THE DECISION-MAKING PROCESS
*                    CONTINUES.
*
         SR    R14,R14            TO CAPTURE THE LENGTH OF COMMENT
         IC    R14,EXCPCOM        .
         BCTR  R14,0              PREPARED FOR THE MOVE
         LA    R1,0(,R7)          BUILD POINTER TO RECEIVING AREA
         SR    R1,R14             AS END LESS COMMENT LENGTH
         CR    R8,R1              UNLESS IT OVERFLOWS, THAT IS
         BL    MKWCOMOK           ALL PROPER - IT WILL FIT
         LA    R1,1(,R8)          NEW TARGET FOR COMMENT MOVE
         LA    R14,0(,R7)         THIS IS END OF RECEIVING AREA
         SR    R14,R1             SO THIS IS LENGTH TO MOVE
         BCTR  R14,0              RECOMPUTE FOR THE EXEC, OF COURSE
         MVI   0(R7),C'+'         SHOW COMMENT WAS TRUNCATED
MKWCOMOK EQU   *                  AND MOVE IN THE COMMENT
         EX    R14,MKWMVCOM       MOVE COMMENT TO JCL LINE
         LA    R15,4              SHOW A COMMENT WENT INTO LINE
         B     MKWEXIT
         DROP  R6
*
MKWMOVE  MVC   0(0,R8),0(R15)     MOVE RAW DATA TO LINE
MKWMVCOM MVC   0(0,R1),0(R15)     MOVE COMMENT TO LINE
         EJECT
*                    GIVEN A KEYWORD VALUE IS TOO LONG FOR THE
*                    LINE - SCAN BACK FROM THE LAST GOOD POSITION
*                    TO FIND THE COMMA, MOVE THAT MUCH TO CURRENT
*                    LINE, AND SET UP TO MOVE THE REST TO THE NEW
*                    LINE.
*
KW2LINE  PSNMBLOK  K2L
K2LAGAIN EQU   *                  REENTRY IF STILL ANOTHER LINE NEEDED
         LR    R14,R0             THE LENGTH THAT CAN BE ACCOMMODATED
         LA    R14,0(R14,R15)     POINT THAT FAR INTO THE DATA
         BCTR  R14,0              LESS ONE FOR EXACTNESS
K2LSRCH  EQU   *
         CLI   0(R14),C','        IS THIS THE DELIMITER
         BE    K2LCOMA            YES - FOUND A BREAKING POINT
         BCTR  R14,0              BACK UP ONE IN THE DATA
         BCT   R0,K2LSRCH         AND INDEX BACKWORK
*                    FELL OUT WITH NO MATCH - REAL PROBLEM
         PSNMERR   ERRISCAN,((R15),(R1))
         SR    R15,R15            ASK TO KEEP GOING ANYWAY
         B     RETURN             BUT DROP THIS DD STATEMENT
K2LCOMA  EQU   *
         LA    R15,0(,R15)        CLENSE THE DATA POINTER FIELD
         SR    R14,R15            COMPUTE LENGTH OF THE FIELD
         EX    R14,K2LMOVE        AND MOVE THE DATA TO OUTPUT
         SR    R1,R14             COMPUTE LENGTH LEFT TO MOVE
         BCTR  R1,0               EXACTLY
         LA    R15,1(R14,R15)     POINT TO START OF REMAINDER
         STM   R15,R1,PSWWSCAN    SAVE THESE POINTERS
         L     R15,PSWWRITE       NOW GET ANOTHER LINE OF BUFFER
         BALR  R14,R15            .
         LA    R7,70(,R15)        POINT TO END OF IT
         LA    R8,15(,R15)        AND START OF IT
         LM    R15,R1,PSWWSCAN    RECAPTURE THE DATA POINTERS
         LA    R0,0(,R7)          COMPUTE LENGTH LEFT FOR THIS PART
         SR    R0,R8              AS LAST COLUMN LESS CURRENT POINTER
         CR    R1,R0              AND SEE IF IT WILL FIT
         BL    K2LEXIT            YES - PLENTY OF ROOM
         B     K2LAGAIN           BACK AGAIN FOR STILL ANOTHER LINE
*
K2LMOVE  MVC   0(0,R8),0(R15)     MOVE DATA TO OUTPUT
         EJECT
         PSNMEXEC
         SPACE 3
         PSNMCMT
         EJECT
WORKAREA DSECT
         DS    18F
         PSNMBLOK  RENT=REGS
WKLENG   EQU   *-WORKAREA
         EJECT
         PSNMWORK
         END
