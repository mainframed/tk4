*          DATA SET DIDOCSSP   AT LEVEL 003 AS OF 10/07/82
*          DATA SET DIDOCS     AT LEVEL 003 AS OF 01/11/82
*          DATA SET DIDOCS     AT LEVEL 006 AS OF 03/19/80
DIDOCS   TITLE 'D I D O C S - SIMULATE OS CONSOLE FOR TSO USER '
*        REAL CODE STARTS ABOUT 552 LINES DOWN FROM HERE
         PRINT OFF              INLINE MACROS BE HERE
         MACRO
&LABEL   MODESET &KEY=,&MF=,&RET=R14    ***NOTE CHANGE NAME TO MODESET
.*
.* CHANGE MACRO NAME TO FMODESET TO ALLOW USE OF REAL MODESET
.*
.* MAKE SURE TO AUTHORIZE DIDOCS IN IKJEFTE8 IF YOU DO..
.*
         LCLC    &PRINT         ******TO ALLOW USE OF MAGIC SVC  KT
&PRINT   SETC    'OFF'
         AIF     ('&MF' NE 'L').CODE
         AIF     ('&KEY' EQ 'ZERO').GOSUP
         AIF     ('&KEY' EQ 'NZERO').GOPROB
 MNOTE 8,'MODESET (FCI) OF &KEY NOT RECOGNIZED'
         MEXIT
.GOSUP   ANOP
*
&LABEL   L     0,CODE           GET MAGIC WORD
         SR    1,1              INDICATE KEY=0
         SVC   254              DOIT PLEASE
         ST    1,OLDKEY         SAVE OLD KEY...
         BR    &RET             RETURN TO MAINLINE
*
         PUSH    PRINT
         PRINT   &PRINT
         DS    0F
CODE     DC    X'ABCFEDAD'
OLDKEY   DC    F'0'
         POP     PRINT
         MEXIT
.GOPROB  ANOP
*
&LABEL   LM    0,1,CODE         RETURN TO ORIGINAL KEY
         SVC   254                IF YOU PLEASE.....
         BR    &RET             RETURN TO CALLER
*
         MEXIT
.CODE    ANOP
         AIF   ('&MF(1)' NE 'E').OOPS
&LABEL   BAL   &RET,&MF(2)      INVOKE ROUTINE
*
         MEXIT
.OOPS    ANOP
 MNOTE 12,'FCI MODESET MF NOT=L OR (E,ADDR)   MF=&MF'
         MEND
         MACRO
&NAME    PGM   &BASE=R12,&SAVE=$$SAVE,&START=$$START,&EOJ=$$EOJ,&RC=16
         LCLC  &BASE2,&BASE1
&BASE1   SETC  '&BASE(1)'
&BASE2   SETC  '&BASE(2)'
&NAME    CSECT
         SAVE  (14,12),,&NAME_&SYSDATE_&SYSTIME
         LR    &BASE1,R15          ESTABLISH ADDRESSABILITY.
         USING &NAME,&BASE1         TELL ASSEMBLER ABOUT BASE REGISTER.
         AIF   (T'&BASE(2) EQ 'O').NOBAS2
         LA    &BASE2,4095(,&BASE1)    ESTABLISH SECOND BASE
         LA    &BASE2,1(,&BASE2)       OFF OF FIRST BASE REGISTER
         USING &NAME+4096,&BASE2
.NOBAS2  ANOP
R0       EQU   0                   REGISTER 0.
R1       EQU   1                   REGISTER 1.
R2       EQU   2                   REGISTER 2.
R3       EQU   3                   REGISTER 3.
R4       EQU   4                   REGISTER 4.
R5       EQU   5                   REGISTER 5.
R6       EQU   6                   REGISTER 6.
R7       EQU   7                   REGISTER 7.
R8       EQU   8                   REGISTER 8.
R9       EQU   9                   REGISTER 9.
R10      EQU   10                  REGISTER 10.
R11      EQU   11                  REGISTER 11.
R12      EQU   12                  REGISTER 12.
R13      EQU   13                  REGISTER 13.
R14      EQU   14                  REGISTER 14.
R15      EQU   15                  REGISTER 15.
         LA    R15,&SAVE           ADDRESS OF OUR SAVE AREA.
         ST    R13,4(R15)          BACKWARD SAVE AREA CHAIN.
         ST    R15,8(R13)          FORWARD SAVE AREA CHAIN.
         LR    R13,R15             POINT R13 TO CURRENT SAVE AREA.
         B     &START              BRANCH TO ENTRY CODE.
&EOJ     CH    R15,$$RC            IS RETURN CODE HIGHER THAN &RC?
         BNH   *+6                 YES - LETS ZERO R15.
         SR    R15,R15             ZERO OUT REGISTER 15.
         L     R13,&SAVE+4         POINT R13 TO PREVIOUS SAVE AREA.
         L     R14,12(R13)         RESTORE REGISTER 14.
         LM    R0,R12,20(R13)      RESTORE THE REGISTERS.
         BR    R14                 RETURN TO OS.
&SAVE    DS    18F                 OUR SAVE AREA.
$$RC     DC    H'&RC'              RETURN CODE.
$$START  DS    0H                  DEFAULT ENTRY POINT.
         MEND
         MACRO
         IEERDCM
*     01/15/73          LEVEL=05                              MB Y02958
DCMTSRT  DSECT DCMTSPTR
DCMADTRN DS    A                   POINTER TO PAGABLE DCM
         DS    CL1                 RESERVED
DCMRFLGS DS    BL1                 FLAGS
DCMDOM   EQU   X'10'               DOM MUST BE TRIED
DCMNIPP  EQU   X'08'               DCM WAS USED BY NIP
DCMLEN   DS    H                   LENGTH OF PAGABLE DCM
DCMADKP  DS    A                   ADDRESS OF ROUTED K COMMAND
*                                   PARAMETER LIST
DCMTOPAR DS    CL1                 TOP DISPLAY AREA DEFINED
DCMTOPDS DS    CL1                 TOP DISPLAY ON SCREEN
         DS    BL1                 RESERVED
DCMDEVTY DS    BL1                 DEVICE TYPE FLAGS
DCMTY60  EQU   X'80'               USABLE FOR SD
DCMTY50  EQU   X'40'               NOT USABLE FOR SD
DCMADSDS DS    A                   POINTER TO FIRST SDS SUPPORT AREA
DCMRMS   DS    CL1                 NUMBER OF CCWS TO WRITE
DCMADRMS DS    AL3                 POINTER TO RMS CCWS
DCMWLAST DS    A                   PT CON Q ENTRY LAST OUT (O-O-L)
DCMRMSAL DS    H                   NUMBER LINES IN MSG AREA
DCMDOMKY DS    H                   CONSOLE DOM ELEMENT        MC XM5812
DCMSUBAD DS    A                   POINTER TO SUB CONTROL BLOCK
DCMADPFK DS    A                   POINTER TO RESIDENT PFK AREA
DCMINTVL DS    H                   INTERVAL FOR THIS DCM
DCMTMCTR DS    H                   TIME COUNTER FOR THIS DCM
DCMR2FLG DS    BL1                 TIMER FLAGS
DCMRXSFL EQU   X'80'               FULL SCREEN FLAG
DCMRXUNV EQU   X'40'               UNVIEWABLE MESSAGE DISPLAYED
DCMRXTMR EQU   X'20'               TIMER FLAG
DCMRXRLL EQU   X'10'               READY TO ROLL
DCMRXDEL EQU   X'08'               PENDING DELETE REQUEST
DCMRXTIM EQU   X'02'               TIMER ELAPSED FOR THIS DISPLAY
DCMR3FLG DS    BL1                 MISC FLAGS
DCMSTSWT EQU   X'80'               CHANGING STATUS OF OUTPUT ONLY CON
DCMKVIP  EQU   X'40'               ENTRY FOR K VARY COMMAND
DCMCLPR  EQU   X'20'               CLOSE IN PROCESS
DCMRXSCN EQU   X'10'               ASY ERROR MESSAGE ON SCREEN
DCMR3PKA EQU   X'08'               DA I/O COMPLETE
DCMRXHMT EQU   X'04'               FULL SCREEN SIMULATED      MC YM4102
         DS    H                   RESERVED
DCMRQDEL DS    A                   DELETE REQUEST BUFFER
         DS    A                   DELETE REQUEST BUFFER
DCMMSGSV DS    A                   POINTER TO SAVED NIP MESSAGES
DCMPACB  EQU   *                   SACB PREFIX
DCMPLN   DS    FL2                 SYSGEN LENGTH OF AREA
DCMPLNPR DS    H                   LENGTH OF SACB PREFIX-IN BYTES
DCMPRSZ  EQU   *-DCMPACB           SIZE OF PREFIX
DCMACB   EQU   *                   SACB
DCMACBNX DS    A                   POINTER TO NEXT SACB
DCMAID   DS    CL1                 AREA ID
DCMASACB DS    BL1                 SACB FLAGS
DCMAUSE  EQU   X'80'               AREA PRESENTLY DEFINED     MB Y02958
*    IF DCMAUSE IS OFF, A SYSGEND AREA HAS BEEN FREED E.G. K A,NONE
DCMAGM   EQU   X'40'               GETMAINED SACB
DCMALN   DS    FL2                 LENGTH OF AREA
DCMATOP  DS    FL1                 TOP ROW OF AREA
DCMACLR  EQU   *                   REINITIALIZED PORTION      MB Y02958
DCMAROW  DS    FL1                 ROW TO BE WRITTEN NEXT
DCMAFR   DS    H                   FRAME ON SCREEN
DCMAMJWQ DS    A                   POINTER TO CON Q ENTRY FOR MAJOR
DCMAMIN  DS    A                   POINTER TO MINOR WQE
DCMATIME DS    F                   TIME CONTROL LINE WAS WRITTEN
DCMAMT   DS    XL2                 RESERVED                   MB Y02958
DCMAFLG1 DS    XL1                 AREA FLAGS1
DCMADISP EQU   X'40'               DISPLAY IN AREA
DCMADEND EQU   X'20'               END OF DISPLAY ON SCREEN
DCMAFRPR EQU   X'10'               FRAMING IN PROGRESS
DCMAFULL EQU   X'08'               FRAME FULL
DCMABL   EQU   X'04'               BLANKING TO BE DONE
DCMAFLG2 DS    XL1                 AREA FLAGS 2
DCMALMIN EQU   X'80'               SAVED POINTER TO LAST MINOR OUTPUT
DCMAWCON EQU   X'40'               WRITE CONTROL LINE
DCMARCON EQU   X'20'               REWRITE CONTROL LINE
DCMAMJFR EQU   X'10'               MAJOR WQE HAS BEEN FOUND
DCMADFLG DS    XL1                 DYNAMIC DISPLAY FLAGS      MB Y02958
DCMADD   EQU   X'80'               TRACK IN AREA              MB Y02958
DCMAHOLD EQU   X'40'               TRACK IN HOLD MODE         MB Y02958
DCMACSIB EQU   X'20'               TRACK WITH CONTINUATION LINE IN     *
                                   SCREEN IMAGE BUFFER        MB Y02958
DCMATRCK DS    X                   TRACK REQUEST INDICATORS   MB Y02958
DCMATJOB EQU   X'80'               TRACK JOBS                 MB Y02958
DCMATJBL EQU   X'40'               TRACK JOBS,LIST            MB Y02958
DCMATTS  EQU   X'08'               TRACK TS                   MB Y02958
DCMATTSL EQU   X'04'               TRACK TS,LIST              MB Y02958
DCMATA   EQU   X'88'               TRACK A                    MB Y02958
DCMATAL  EQU   X'44'               TRACK A,LIST               MB Y02958
DCMAUTME DS    XL2                 UTME=NNN VALUE             MB Y02958
DCMATECB DS    F                   TRACK CANCEL ECB ADDRESS   MB Y02958
DCMAPAD  DS    F                   RESERVED                   MB Y02958
DCMACBND EQU   *                   SACB END
DCMCLRLN EQU   *-DCMACLR           LENGTH FOR REINITIALIZING  MB Y02958
DCMACBSZ EQU   *-DCMACB            SACB SIZE
DCMREND  DS    0C                  END OF DCM
         MEND  , */
         MACRO
         IEETDCM
*     12/15/72          LEVEL=04
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
*                         WORK AND SAVE AREAS                         *
*                                                                     *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
DCMSTRT  DSECT DCMSTPTR
         DS    0F                  FULL WORD ALIGNMENT
         DS    H                   DCM LENGTH
         DS    H                   PADDING
         SPACE 4
DCMFLG1  DS    BL1                 DCM AREA INDICATORS
         SPACE 2
DCMOUTPT EQU   X'02'               DCM UPDATED FOR OUTPUT ONLY
         SPACE 4
DCMATI   DC    X'00'               SAVED UCB ATTN INDEX      MC SA55058
         DC    AL2(0)              RESERVED                  MC SA55058
         SPACE 2
DCMWTINT DS    A                   DCMWTINT INITIAL VALUE
DCMLNCNT DS    H                   NUMBER OF LINES TO BLANK  MC SA53462
DCMLNNUM DC    X'00'               FIRST LINE TO BLANK       MC SA53462
         DC    X'00'               RESERVED                  MC SA53462
DCMPACK  DS    F                   AREA TO PLACE NUMBER FOR PACKING
DCMCVBIN DS    F                   AREA FOR CONVERSION TO BINARY
         SPACE 2
DCMTIMES DS    BL1                 TIME RTNS INDICATOR BYTE
         SPACE 2
DCMTIMER EQU   X'80'               TIME ELAPSED FOR THIS DISPLAY
DCMOPTTI EQU   X'40'               OPTIONS TO TI RTN
DCMOTTMM EQU   X'10'               OPTIONS OR TI RTNS TO MSG MODULE
DCMTASYN EQU   X'04'               TIMER SET FOR ASYNC ERROR MSG
DCMOCTTI EQU   X'02'               OPEN-CLOSE TO TI RTN
DCMRMTTI EQU   X'01'               ROLL MODE TO TIMER ROUTINE
         EJECT
         DS    XL1                 UNUSED
         SPACE 2
DCMELGN  DS    H                   ENTRY AREA LAST CHARACTER POINTER
         SPACE 2
DCMBUFAD DS    A                   POINTER TO BUFFER ADDRESS TABLE
DCMDOMPK DS    A                   ADDRESS OF FIRST DOM NUMBER
DCMAMTAB DS    A                   ADDRESS OF FIRST SCT ENTRY
DCMADSEC DS    A                   ADDRESS OF FIRST SSCT ENTRY
DCMADDRL DS    A                   ADDRESS OF LAST SCT ENTRY
DCMASCRN DS    A                   POINTER TO SCREEN IMAGE BUFFER
DCMLSCRN DS    A                   POINTER TO LAST BUFFER LINE
DCMWTBUF DS    A                   SCREEN LENGTH POINTER
DCMAINS  DS    A                   POINTER TO INSTRUCTION LINE
DCMAENTR DS    A                   POINTER TO ENTRY AREA
DCMAWARN DS    A                   POINTER TO WARNING LINE
DCMADCHP DS    A                   ADDRESS OF CHANNEL PROGRAM AREA
DCMPFKLN DS    A                   POINTER TO PFK LINE
DCMCXSVE DS    F                   CXSA SAVE AREA
DCMADOPN DS    A                   ADDRESS OF COMMAND OPERAND
DCMDSAV  DS    5F                  SAVE AND WORK AREA
         SPACE 2
*           INPUT BUFFER FOR ISSUING SVC 34 AND SVC 35                *
*           FIELDS DCMWQEXP THROUGH DCMINPUT MUST REMAIN IN ORDER     *
DCMWQEXP DS    0F                  ENSURE FULL WORD BOUNDARY
DCMINLGN DS    H                   FIELD FOR INPUT LENGTH
DCMMCSFL DS    H                   MCS FLAGS FIELD
DCMINPUT DS    32F                 INPUT MESSAGE TEXT
         SPACE 2
DCMLGNTH DS    H                   LENGTH OF A LINE
DCMBAINC DS    H                   ADDRESS TO INSERT CURSOR
DCMIRCTR DS    H                   INTERVENTION REQ'D MSG COUNTER
DCMBADLN DS    H                   BUFFER ADDR TO BEGIN MSG WRITE
DCMBYTCT DS    H                   NUMBER OF BYTES TO WRITE
DCMADNUM DS    H                   NEXT LINE NUMBER
DCMAXLGN DS    H                   MAXIMUM LINE LENGTH
DCMMSGAL DS    H                   NUMBER OF LINES IN MESSAGE AREA
DCMRMINC DS    H                   INCREMENT INTO RMI
DCMSCTCN DS    H                   LENGTH OF ONE SCT ENTRY
DCMCORLN DS    H                   LENGTH OF DCM LINE IN CORE
         DS    H                   TIME COUNTER
DCMPFKNM DS    XL1                 NUMBER OF KEY BEING PROCESSED
DCMPFKKN DS    XL1                 LIST KEY NUMBER
         EJECT
DCMDEL   DS    CL2                 DEL VALUE
DCMCON   DS    CL1                 CON VALUE
DCMSEG   DS    FL1                 SEG VALUE
DCMDL    DS    FL1                 DISPLAY AREA OPTION
DCMRNUM  DS    FL1                 ROLL NUMBER VALUE
DCMRTME  DS    H                   ROLL TIME VALUE
         SPACE 2
*  DEFAULT VALUES FOR OPTIONS
DCMSEGDF DS    FL1                 SEG DEFAULT
DCMRNUMD DS    FL1                 RNUM DEFAULT
DCMRTMED DS    H                   RTME DEFAULT
         SPACE 2
DCMASKEN DS    XL1                 ENTER MASK
DCMASKCN DS    XL1                 CANCEL MASK
DCMASKCR DS    XL1                 CURSOR MASK
DCMASKLP DS    XL1                 LIGHT PEN MASK
DCMASKPF DS    XL1                 PFK MASK
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
*                         COMMUNICATIONS AREA                         *
*                                                                     *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         SPACE 2
DCMOPTST DS    BL1                 STATUS OF SCREEN CONTROL OPTIONS
         SPACE 2
DCMOPTVR EQU   X'80'               DELETE VERIFICATION  CON=(Y=1,N=0)
DCMOPTAD EQU   X'40'               AUTOMATIC DELETION   DEL=(Y=1,N=0)
DCMOPTSG EQU   X'20'               DEFAULT SEGMENT SPECIFIED  SEG=(0=0)
DCMOPRLL EQU   X'10'               ROLL MODE  (Y=1,N=0)
         SPACE 4
DCMCS    DS    BL1                 OPEN/CLOSE REQUEST
         SPACE 2
DCMCSC   EQU   X'80'               CLOSE REQUEST
DCMCSO   EQU   X'40'               OPEN REQUEST
         SPACE 4
DCMUTILT DS    BL1                 RESERVED
         SPACE 2
DCMUTILA EQU   X'80'               THESE BITS ARE
DCMUTILB EQU   X'40'                 INITIALIZED AND USED
DCMUTILC EQU   X'20'                 SOLELY WITHIN
DCMUTILD EQU   X'10'                 EACH MODULE
DCMUTILE EQU   X'08'               THEY ARE NEVER
DCMUTILF EQU   X'04'               USED FOR INTERFACE
DCMTEST1 EQU   X'02'               FOR TESTING
DCMTEST2 EQU   X'01'               FOR TESTING
         SPACE 4
DCMDSTAT DS    BL1                 CURRENT DISPLAY STATUS
         SPACE 2
DCMDSTNM EQU   X'20'               MESSAGES ARE NUMBERED
DCMDSTNH EQU   X'10'               MSGS NUMBERED - HOLD OPTION
DCMDSINR EQU   X'08'               INTERVENTION REQ'D DELETION TRIED
DCMDSAUT EQU   X'04'               AUTOMATIC DELETION TRIED
         SPACE 4
DCMMCSST DS    BL1                 MCS INTERFACE BYTE
         SPACE 2
DCMDUSE  EQU   X'80'               OUR SUPPORT IN CONTROL
DCMOOMSS EQU   X'04'               MESSAGE STREAM ENTRY
DCMOOSDS EQU   X'01'               STATUS DISPLAY ENTRY
         SPACE 4
DCMIOUNQ DS    BL1                 UNIQUE IO BYTE
         SPACE 2
*  UNIQUE INTERFACE BITS FOR 2260
DCMIO226 EQU   X'80'               RMI PERFORMED
DCMRPCUR EQU   X'40'               ADVANCE CURSOR TO BLANKS
DCMFRSCN EQU   X'20'               PUT OUTPUT IN HOLD MODE
*  UNIQUE INTERFACE BITS FOR 2250
DCMRDARM EQU   X'10'               PERFORM READ AFTER RMI
DCMW2250 EQU   X'08'               DEVICE IS 2250
DCMINNOR EQU   X'04'               NORMAL INSTRUCTION LINE
DCMINERR EQU   X'02'               ERROR INSTRUCTION LINE
         SPACE 4
DCMIOCM1 DS    BL1                 IO COMMUNICATIONS BYTE 1
         SPACE 2
DCMDORMI EQU   X'80'               ISSUE RMI
DCMSOUND EQU   X'40'               SOUND ALARM
DCMWRWRN EQU   X'20'               WRITE WARNING LINE
DCMWRMSG EQU   X'10'               WRITE FULL MESSAGE AREA
DCMWRPAR EQU   X'08'               WRITE PARTIAL MESSAGE AREA
DCMWRINS EQU   X'04'               WRITE INSTRUCTION LINE
DCMWRENT EQU   X'02'               WRITE ENTRY AREA
DCMINSC  EQU   X'01'               INSERT CURSOR
         EJECT
DCMIOCM2 DS    BL1                 IO COMMUNICATIONS BYTE 2
         SPACE 2
DCMBLENT EQU   X'80'               BLANK ENTRY AREA
DCMBLWRL EQU   X'40'               BLANK LEFT HALF WARNING LINE
DCMBLWRR EQU   X'20'               BLANK RIGHT HALF WARNING LINE
DCMINSSH EQU   X'10'               INIT AND SHIFT INSTRUCTION LINE
DCMWINFD EQU   X'08'               WRITE INFORMATIONAL DISPLAY
DCMERASE EQU   X'04'               PERFORM ERASE
DCMIOCRD EQU   X'02'               PERFORM READ (2250,22DOC)
DCMWRASY EQU   X'01'               WRITE ASYNC ERROR MSG TO MID-SCREEN
         SPACE 4
DCMIOCM3 DS    BL1                 IO COMMUNICATIONS BYTE 3
         SPACE 2
DCMOPRMI EQU   X'80'               RMI AFTER OPEN TO UNLOCK KEYBOARD
DCMSSRG  EQU   X'40'               SUPPRESS START REGENERATION
DCMWRPFK EQU   X'10'               DCM WRITE PFK AREA
DCMPFKAT EQU   X'08'               PFK ATTENTION
DCMRDPFK EQU   X'04'               PFK AREA READ
DCMACPFK EQU   X'02'               TURN ACTIVE PFK LIGHTS ON
DCMLTPFK EQU   X'01'               TURN ALL PFK LIGHTS ON
         SPACE 4
DCMLINEN DS    XL1                 LINE NUMBER TO BEGIN WRITE
         SPACE 2
DCMCULNO DS    XL1                 LINE IN ENTRY AREA TO INSERT CURSOR
         SPACE 2
DCMPOSCU DS    XL1                 POSITION TO INSERT CURSOR
         SPACE 4
DCMASYNC DS    BL1                 ASYN ERROR COMMUNICATIONS/RETRY BYTE
         SPACE 2
DCMASDA  EQU   X'40'               RETRY BIT
DCMASIN  EQU   X'20'               RETRY BIT
DCMASBA  EQU   X'10'               RETRY BIT
DCMASLOG EQU   X'08'               LOG ASYNCHRONOUS ERROR
         EJECT
DCMCOM1  DS    BL1                 COMMUNICATIONS BYTE
         SPACE 2
DCMLPENT EQU   X'80'               ENTER BY LP OR CURSOR
DCMIOPRD EQU   X'40'               READ PERFORMED
DCMCOMRM EQU   X'20'               RMI PERFORMED
DCMCOMAU EQU   X'10'               PERFORM AUTO DELETE
DCMCOMRD EQU   X'08'               PERFORM REGULAR DELETE
DCMCOMNM EQU   X'04'               NUMBER MESSAGES
DCMCANCL EQU   X'01'               INDICATE CANCEL TO COMMAND ROUTINE
         SPACE 3
DCMCOM2  DS    BL1                 COMMUNICATIONS BYTE
         SPACE 2
DCMCM2I  EQU   X'80'               INPUT TO BE PROCESSED
DCMSPLIT EQU   X'40'               MSG TO BE SPLIT
DCMCOMAR EQU   X'20'               ACCEPTED REPLY
DCMERPF  EQU   X'08'               ERASE PERF-PROC CAN NOW CLOSE DEVICE
DCMCMIN5 EQU   X'04'               RETURN TO INTER. 5 FOR BLNK
DCMCBLNK EQU   X'02'               BLANKING REQUIRED
DCMAE    EQU   X'01'               CLEANUP FOR ASY ERROR
         SPACE 3
DCMCOM3  DS    BL1                 COMMUNICATIONS BYTE
         SPACE 2
DCMCDSP3 EQU   X'80'               DISPLAY 3 COMPLETED WORK
DCMRTPFK EQU   X'40'               RETURN TO PFK ROUTINE
DCMVLPFK EQU   X'20'               VERIFYING LAST COMMAND
DCMXINT1 EQU   X'10'               ENTRY FOR INTERFACE 1 ROUTINE
DCMOLUNV EQU   X'08'               O-O-L MSG CAUSED UNVIEW. MSG.
DCMPFKWR EQU   X'04'               WRITE PFK UPDATES TO LIB
DCMOLHLD EQU   X'02'               OUT OF LINE MESSAGES HELD  MB Y02958
DCMCMIN7 EQU   X'01'               RETURN TO INTER. 7 FOR BLANKING
         SPACE 3
DCMCMSG1 DS    BL1                 MSG MODULE COMMUNICATIONS BYTE 1
         SPACE 2
DCMMSGWT EQU   X'80'               MOVE IN MESSAGE WAITING
DCMUNMSG EQU   X'40'               MOVE IN UNVIEWABLE MESSAGE
DCMSTEX  EQU   X'20'               MOVE IN STATUS EXISTS
DCMCHOPT EQU   X'10'               MOVE IN CHANGE OPTIONS
DCMELONG EQU   X'08'               MOVE IN ENTRY TOO LONG
DCMWRCDL EQU   X'04'               MOVE IN CON=N,DEL=Y
DCMDELNT EQU   X'02'               MOVE IN DEL UNCHANGED, NO TIMER
         EJECT
DCMCMSG2 DS    BL1                 MSG MODULE COMMUNICATIONS BYTE 2
         SPACE 2
DCMDLREQ EQU   X'80'               MOVE IN DELETION REQUESTED
DCMRQINC EQU   X'40'               MOVE IN REQUEST INCONSISTENT
DCMMSGCR EQU   X'20'               MOVE IN INVALID CURSOR OPERATION
DCMINVOP EQU   X'10'               MOVE IN INVALID OPERAND
DCMCILLP EQU   X'08'               MOVE IN ILLEGAL LP OPERATION
DCMDELRI EQU   X'04'               MOVE IN DELETE REQUEST INCONSISTANT
DCMASYRT EQU   X'02'               MOVE IN ASYN ERROR RETRYABLE
DCMASYCD EQU   X'01'               MOVE IN ASYN ERROR MAYBE RETRYABLE
         SPACE 4
DCMCMSG3 DS    BL1                 MSG MODULE COMMUNICATIONS BYTE 3
         SPACE 2
DCMCMRLL EQU   X'80'               MOVE IN ROLL MODE MESSAGE
DCMCDLR1 EQU   X'40'               NO DELETABLE MESSAGES
DCMCDLR2 EQU   X'20'               INVALID RANGE
DCMCDLR3 EQU   X'10'               SEG EQU TO ZERO
DCMCDLR4 EQU   X'08'               DISPLAY NOT ON SCREEN
DCMCDLR5 EQU   X'04'               INVALID OPERAND
DCMDTBSY EQU   X'01'               COMMAND REJECTED - TASK BUSY
         SPACE 4
DCMCMSG4 DS    BL1                 MSG MODULE COMMUNICATIONS BYTE 4
         SPACE 2
DCMPFKNA EQU   X'80'               MOVE IN PFK NOT ALLOCATED FOR
DCMPFKND EQU   X'40'               MOVE IN PFK NOT DEFINED
DCMPFKNO EQU   X'20'               MOVE IN NO PFK ALLOCATION
DCMPFKIP EQU   X'10'               MOVE IN PFK IN PROCESS
         SPACE 4
DCMSVC34 DS    BL1                 SVC 34 COMMUNICATION BYTE
         SPACE 2
DCMMYCMD EQU   X'80'               COMMAND TO BE HANDLED BY THIS CONS
DCMINVLD EQU   X'40'               INVALID K COMMAND
DCMTYPE1 EQU   X'20'               K COMMAND IS NOT ROUTABLE
         SPACE 2
DCMPAD   DS    X                   RESERVED COMMUNICATION BYTE   Y02958
DCMIONDX DS    X                   INDEX FOR SELECTING THE    MB Y02958
*                                  APPROPRIATE I/O ROUTINE    MB Y02958
*                                  X'04' - M/165 CONSOLE      MB Y02958
*                                  X'08' - 2250               MB Y02958
*                                  X'0C' - 2260               MB Y02958
*                                  X'10' - 3277               MB Y02958
DCMTEST  DS    H                   RESERVED FOR TESTING       MB Y02958
         EJECT
**                                                                   **
*                        MODULE ADDRESSES                             *
**                                                                   **
         SPACE 1                                              MB Y02958
DCMIORTN DS    F                   APPROIATE I/O ROUTINE      MB Y02958
*                  NAME   TRACE ID   DESCRIPTION              MB Y02958
*                 IEECVETH    EH   3066(M/165) IO ROUTINE     MB Y02958
*                 IEECVETP    EP   2250 IO ROUTINE            MB Y02958
*                 IEECVETR    ER   2260 IO ROUTINE            MB Y02958
*                 IEECVETU    EU   3277 IO ROUTINE            MB Y02958
         SPACE 1                                              MB Y02958
*                  NAME   TRACE ID   DESCRIPTION              MB Y02958
DCMNPRZ  DS    F  IEECVFT1    F1   PROCESSOR 0 LOAD ONE       MB Y02958
DCMNPROC DS    F  IEECVET1    E1   PROCESSOR ROUTINE LOAD ONE MB Y02958
DCMNDSP1 DS    F  IEECVET2    E2   DISPLAY ROUTINE 1          MB Y02958
DCMNDSP2 DS    F  IEECVET3    E3   DISPLAY ROUTINE 2          MB Y02958
DCMNDSP3 DS    F  IEECVFT2    F2   DISPLAY ROUTINE 3          MB Y02958
DCMNCMD1 DS    F  IEECVET4    E4   COMMAND ROUTINE 1          MB Y02958
DCMNDEL1 DS    F  IEECVET6    E6   DELETE ROUTINE 1           MB Y02958
DCMNDEL2 DS    F  IEECVET7    E7   DELETE ROUTINE 2           MB Y02958
DCMNDEL3 DS    F  IEECVET8    E8   DELETE ROUTINE 3           MB Y02958
DCMNDEL4 DS    F  IEECVET9    E9   DELETE ROUTINE 4           MB Y02958
DCMNOPT1 DS    F  IEECVETA    EA   OPTIONS ROUTINE 1          MB Y02958
DCMNPFK1 DS    F  IEECVFTA    FA   PFK ROUTINE 1              MB Y02958
DCMNPFK2 DS    F  IEECVFTB    FB   PFK ROUTINE 2              MB Y02958
DCMNERRO DS    F  IEECVETC    EC   ASYNCHRONOUS ERROR ROUTINE MB Y02958
DCMNMSG1 DS    F  IEECVETD    ED   MESSAGE ROUTINE 1          MB Y02958
DCMNMSG2 DS    F  IEECVETE    EE   MESSAGE ROUTINE 2          MB Y02958
DCMNMSG3 DS    F  IEECVFTD    FD   MESSAGE ROUTINE 3          MB Y02958
DCMNLPCR DS    F  IEECVETF    EF   LIGHT PEN/CURSOR SERVICE   MB Y02958
DCMNOPCL DS    F  IEECVETG    EG   OPEN-CLOSE ROUTINE         MB Y02958
DCMNCLN  DS    F  IEECVFTG    FG   CLEANUP MODULE             MB Y02958
DCMNROLL DS    F  IEECVETJ    EJ   ROLL MODE ROUTINE          MB Y02958
DCMNTIMR DS    F  IEECVETK    EK   TIMER INTERPRETER ROUTINE  MB Y02958
DCMNINT1 DS    F  IEECVFTL    FL   INTERFACE 1 ROUTINE        MB Y02958
DCMNINT2 DS    F  IEECVFTM    FM   INTERFACE 2 ROUTINE        MB Y02958
DCMNINT3 DS    F  IEECVFTN    FN   INTERFACE 3 ROUTINE        MB Y02958
DCMNINT4 DS    F  IEECVFTO    FO   INTERFACE 4 ROUTINE        MB Y02958
DCMNINT5 DS    F  IEECVFTP    FP   INTERFACE 5 ROUTINE        MB Y02958
DCMNINT6 DS    F  IEECVFTQ    FQ   INTERFACE 6 ROUTINE        MB Y02958
DCMNINT7 DS    F  IEECVFTT    FT   INTERFACE 7 ROUTINE        MB Y02958
         SPACE 2
DCMTRACE DS    CL30                DIDOCS MODULE TRACE AREA   MB Y02958
DCMTRAC2 EQU   DCMTRACE+2          TRACE MOVE FROM-ADDRESS    MB Y02958
DCMTRLEN EQU   *-DCMTRACE          LENGTH FOR TRACE MOVE      MB Y02958
DCMTREN1 DS    C                   1ST BYTE OF TRACE ENTRY    MB Y02958
DCMTREN2 DS    C                   2ND BYTE OF TRACE ENTRY    MB Y02958
         EJECT
*  FIRST BYTE OF SCT ENTRIES
DCMMSGWR EQU   X'80'               WTOR MESSAGE DISPLAYED IN LINE
DCMMSGIN EQU   X'40'               MESSAGE DISPLAYED IN LINE
DCMMSGCN EQU   X'20'               MESSAGE CONTINUED ON NEXT LINE
DCMMSGJK EQU   X'10'               TO WRITE OUT-OF-LINE DISPLAY FROM
*                                  MAY CONTAIN JUNK (SDS INTERFACE 2)
DCMMSGAD EQU   X'08'               MESSAGE CAN BE DELETED AUTOMATICALLY
DCMMSGRD EQU   X'04'               REQUEST HAS SPECIFIED MSG BE REMOVED
DCMMSGIF EQU   X'02'               INFORMATIONAL MESSAGE IN LINE
DCMMSGST EQU   X'01'               END OF TABLE INDICATOR
         SPACE 2
*  SECOND BYTE OF SCT ENTRIES
DCMMSGAC EQU   X'80'               ACTION MESSAGE
DCMMSGC7 EQU   X'40'               DESCRIPTOR CODE 7 MESSAGE
DCMMSGDM EQU   X'20'               MESSAGE HAS BEEN DOMMED
DCMMSGAR EQU   X'10'               MESSAGE IS AN ACCEPTED REPLY
DCMMSGIR EQU   X'08'               INTERVENTION REQUIRED MESSAGE
DCMMSGCT EQU   X'04'               CONTINUATION LINE
DCMMSGPP EQU   X'02'               ISSUED BY PROBLEM PROGRAM
DCMMSGCL EQU   X'01'               CONTROL LINE OF IN LINE MLWTO
         SPACE 2
*  SECONDARY SCT ENTRIES
DCMSECCL EQU   X'80'               CONTROL LINE OF OUT OF LINE DISPLAY
DCMSECLL EQU   X'40'               LABEL LINE OF OUT OF LINE DISPLAY
DCMSECDL EQU   X'20'               DATA LINE OF OUT OF LINE DISPLAY
DCMSECBL EQU   X'10'               THIS LINE IS BLANKED
DCMSECDD EQU   X'02'               LINE RESERVED FOR DYNAMIC DISPLAY
DCMSECST EQU   X'01'               END OF TABLE INDICATOR
DCMEND   DS    0C                  END OF DCM
         MEND  , */
         PRINT ON
*.
***********************************************************************
*                                                                     *
* TSO COMMAND -  D I D O C S -                                        *
*                                                                     *
* PURPOSE: FOR TSO OPER PRIVLEDGE USERS, SIMULATE AN OS 3277 CONSOLE  *
*    AT THEIR TSO TUBE BY PEEKING AT THE DIDOCS CONSOLE MESSAGE       *
*    BUFFERS IN CSA.  DIDOCS ACCEPTS A REPLY FROM THE USER.           *
*    NON-BLANK REPLIES ARE FORMATTED INTO A CMD AND ISSUED VIA        *
*    SVC34,  BLANK REPLIES JUST CAUSE THE SCREEN TO BE UPDATED.       *
*    ANY COMMANDS ISSUED VIA SVC34 ARE ALSO LOGGED VIA A WTO SO THAT  *
*    YOUR AUDITORS AND OPERATIONS KNOW WHAT IS GOING ON.              *
*                                                                     *
* THIS CODE IS BASED ON THE DIDOCS COMMAND FROM THE SHARE DCMS SYSTEM.*
* ORIGINAL CODE GENERATED BY FRED LUDDY OF AMDAHL CORP.               *
*                                                                     *
***********************************************************************
*                                                                     *
* TO INVOKE:   TYPE  DIDOCS                                           *
*                                                                     *
* ERROR MESSAGE:                                                      *
*   NO ACCEPTABLE (3277) CONSOLES FOUND                               *
*                                                                     *
* EXIT FROM DIDOCS IS VIA  PFK3.                                      *
*                                                                     *
***********************************************************************
        EJECT  ,                                                    NTL
***********************************************************************
* MOD 1 - KEN TRUE - FAIRCHILD CAMERA AND INSTRUMENT CORP   18 MAR 80 *
*    A) ADDED MODESETS TO FIX FETCH PROT. ON MCS BUFFERS W MVS3.8B.   *
*       INTERNALIZED ALL MACROS.                                      *
*    B) REMOVED DCMS SCREEN HANDLING AND CONVERTED TO SINGLE CSECT    *
*       USING DIRECT SCREEN FORMATTING.                               *
*                                                                     *
* MOD 2 - KEN TRUE - INTEL CORP  27 MAY 81                            *
*    A) MERGED IN CODE FROM SHARE 'SPY' TO DISPLAY CONSOLE STATUS.    *
*    B) CHANGED SCREEN HANDLING TO NOT 'FLASH' VIA VTAM/3274-1D CNTLR *
*    C) ADDED SELECT FEATURE FOR OTHER CONSOLES (VIA 'CNXX' CMD)      *
*                                                                     *
* MOD 3 - KEN TRUE - INTEL CORP  10 AUG 81                            *
*    A) ADDED HIGHLIGHT FOR ACTION MESSAGES.                          *
*    B) ADDED 'END' COMMAND TO EXIT                                   *
*                                                                     *
* MOD 4 - KEN TRUE - INTEL CORP  10 JAN 82                          NTL
*    A) ADDED GTSIZE/STSIZE . SWITCH SCREEN TO 24X80 AND BACK TO    NTL
*       ORIGINAL SIZE WHEN FINISHED.                                NTL
*                                                                   NTL
* MOD 5 - KEY TRUE - INTEL CORP   7 SEP 82                          NTL
*    A) ADDED MVS/SP 1.3 SUPPORT CODE FOR CROSS MEMORY SVCS.        NTL
*       (CODE FROM NEW SPY CMD FROM CBT TAPE)                       NTL
*    B) ADDED NEW BASE REGISTER (R11)                               NTL
*    C) GENERAL CLEANUP OF CODE..REDUCE SUPERVISOR STATE CODE       NTL
*    D) ADDED &SP3 FLAG FOR ASSEMBLY (&SP3 SETB 1 FOR SP3 VERSION)  NTL
*    E) ADDED USERID AUTHORITY TABLE WITH MASKING FEATURE TO ALLOW  NTL
*       NON OPER USERS TO HAVE DIDOCS ACCESS AND CONTROL LOG/CMDS   NTL
*                                                                   NTL
*  NOTE: TO USE 'REAL' MODESET, CHANGE MACRO NAME IN 'PRINT OFF'      *
*      SECTION TO 'FMODESET' AND REASSEMBLE.                          *
*      LINK WITH 'AC(1)', AND AUTHORIZE COMMAND VIA ENTRY IN IKJEFTE8.*
*                                                                     *
*                                                                     *
***********************************************************************
         SPACE 2
         GBLB  &SP3                                                 NTL
&SP3     SETB  1      =1 FOR MVS/SP 1.3 AND UP                      NTL
*                     =0 FOR MVS/SP 1.1 AND BELOW                   NTL
*                                                                   NTL
         EJECT
DIDOCS   PGM    BASE=(R12,R11)   NON REENT CHEAP PGM                NTL
         EJECT
         BAL   R9,CHKUSER    GO CHECK FOR USER AUTHORITY            NTL
         CLI   CMDAUTH,C'E'      NO WAY JOSE?                       NTL
         BE    $$EOJ             SI..QUIETLY CREEP AWAY...          NTL
STFSMODE STFSMODE ON,INITIAL=YES   SAY..FULL SCREEN TO VTAM         NTL
         GTSIZE ,       GET TERMINAL CHARACTERISTICS                NTL
         ST    R1,#CHARS      SAVE # CHARACTERS PER LINE            NTL
         ST    R0,#LINES      SAVE # LINES PER SCREEN               NTL
         CH    R1,FULL80      IS IT 80 PER LINE?                    NTL
         BNE   SETSIZE        NO..GO RESET SIZE                     NTL
         CH    R0,FULL24      IS IT 24 LINES/PAGE?                  NTL
         BE    INITIAL1       YES..GO SETUP FULLSCREEN              NTL
SETSIZE  OI    #FLAGS,X'80'   INDICATE SCRSIZE WAS RESET            NTL
         MVI   CLRMOD,X'7E'   INDICATE FINAL CLEAR TO RESTORE       NTL
*                             ORIG SCREEN SIZE                      NTL
         STSIZE SIZELOC=FULL80,LINELOC=FULL24                       NTL
INITIAL1 DS    0H                                                   NTL
         AIF   (NOT &SP3).SP3A                                      NTL
         BAL   R14,INITAX     GO SETUP CROSS MEMORY SERVICES        NTL
*                                                                   NTL
.SP3A    ANOP  ,                                                    NTL
         BAL   R14,INITCONS        GO INITIALIZE THE UCM#TAB        NTL
         CLI   CONSOLE#,0          WAS ANYBODY FOUND?               NTL
         BE    RESTART             YES....GO DOIT TOIT..            NTL
         MVC   SCREEN(L'ERMSG),ERMSG                                NTL
         BAL   R9,WRITE                                             NTL
         B     ENDIT                                                NTL
         EJECT ,                                                    NTL
RESTART  LA    R15,UCM#TAB         GET ADDRESS OF UCM TABLE         NTL
         L     R1,CONSOLE#         GET CONSOLE # TO USE             NTL
         CH    R1,UCM#NUMS         IS IT TOO BIG?                   NTL
         BNH   GETUCM              NOPE..LOOKS GOOD                 NTL
RESETCN  L     R1,OLDCONS#         BAD STUFF..GET OLD CONSOLE #     NTL
         ST    R1,CONSOLE#         AND RESET IT                     NTL
GETUCM   SLL   R1,2                MULTIPLY BY 4                    NTL
         LA    R3,0(R1,R15)        GET ITEM ADDRESS FROM TABLE      NTL
         L     R3,0(,R3)           GET THE UCM ADDRESS IN TABLE     NTL
*                                  R3 -> TO THE UCME TO USE         NTL
         MODESET MF=(E,SUPER)
         SPACE 1                                                    NTL
         USING UCMLIST,R3
***
         L     R1,UCMUCB           DEBUGGING
         MVC   UNITXXX(3),13(R1)   ...
***
         SLR   R15,R15             CLEAR ERROR REGISTER             NTL
         TM    UCMATR,UCMUF        IS IT ACTIVE ?
         BZ    ERR1                NO.. UNUSEABLE
         L     R10,UCMXB           IS IT GRAPHICS ?
         LTR   R10,R10             ...
         BZ    ERR2                NO.. USELESS
         USING DCMTSRT,R10         POINT TO THE DCM
         L     R6,DCMADTRN         FIND  THE PAGEABLE DCM (TDCM)
         LTR   R6,R6               DOES IT EXIST ?
         BZ    ERR3                NO...
         USING DCMSTRT,R6          A LITTLE
         AIF   (NOT &SP3).SP3B                                      NTL
         BAL   R14,MOVETDCM        GO MOVE PAGABLE TDCM TO OUR AREA NTL
.SP3B    ANOP  ,                                                    NTL
         CLI   DCMIONDX,X'10'      IS IT A 3270 ?
         MVC   XUCMID,UCMID        SAVE THIS
         BE    GOTONEA             YES BY DINGLES !
         EJECT ,                                                    NTL
ERR4     MVC   EREASON,=CL24'IS NOT 3270 TYPE'                      NTL
         B     POSTERR                                              NTL
ERR3     MVC   EREASON,=CL24'HAS NO PAGABLE DCM (TDCM)'             NTL
         B     POSTERR                                              NTL
ERR2     MVC   EREASON,=CL24'IS NOT GRAPHICS TYPE'                  NTL
         B     POSTERR                                              NTL
ERR1     MVC   EREASON,=CL24'IS NOT ACTIVE'                         NTL
         SPACE 1                                                    NTL
POSTERR  MODESET MF=(E,PROBLEM)
         L     R15,CONSOLE#       GET CONSOLE NUMBER                NTL
         CVD   R15,CVTA           CONVERT TO DECIMAL IN WORK        NTL
         MVC   CVTA(4),=X'40212020' MOVE IN EDIT PATTERN            NTL
         ED    CVTA(4),CVTA+6     EDIT IN CONSOLE NUMBER            NTL
         MVC   ECONS#(2),CVTA+2   MOVE CONSOLE NUMBER INTO PLACE    NTL
         MVC   EUNIT,UNITXXX      MOVE UCB ADDRESS TO MESSAGE       NTL
         L     R14,=AL4(MODEMSG)                                    NTL
         MVC   0(L'MODEMSG,R14),ERRORMSG                            NTL
         SPACE 1                                                    NTL
         BAL   R9,WRITE            WRITE THE SCREEN
         SPACE 1                                                    NTL
         MVC   CONSOLE#,OLDCONS#   RESET CONSOLE NUMBER             NTL
         B     RESTART            AND TRY AGAIN....
         EJECT
*.....................................................................*
* A CONSOLE HAS BEEN FOUND COPY THE SCREEN AND DISPLAY IT FER THE USER*
*        R3 ->  UCME                                                  *
*        R10 -> RDCM                                                  *
*        R6 ->  TDCM                                                  *
*.....................................................................*
GOTONE   MODESET MF=(E,SUPER)
         SPACE 1                                                    NTL
GOTONEA  MVC   REPLY,LOTSBLNK                                       NTL
         LA    R8,SCREEN           OUTPUT LINE
         LH    R9,=AL2(84*19)      NUMBER  OF LINES IN MSG AREA     NTL
         L     R7,DCMASCRN         POINT TO  THE  FIRST INPUT LINE
         LA    R7,0(,R7)           CLEAR OUT HIGH ORDER BYTE        NTL
         SL    R7,#ADJUST          ADJUST FOR OFFSET (-6)           NTL
         LR    R4,R7                                                NTL
         LR    R5,R9               COPY IT TO THE OTHER REG FOR MOVENTL
         SPACE 1                                                    NTL
         AIF   (NOT &SP3).SP3C1                                     NTL
         BAL   R14,MOVESCRN        GO MOVE SCREEN FROM ASID=5       NTL
         AGO   .SP3C2                                               NTL
.SP3C1   ANOP  ,                                                    NTL
         MVCL  R8,R4               MOVE DIDOCS SCR TO OURS          NTL
.SP3C2   ANOP  ,                                                    NTL
         SPACE 1                                                    NTL
         L     R15,=A(MSGLINE)     GET ADDRESS                      NTL
         MVC   0(UNITLEN,R15),UNITMSG  MOVE IN TITLES
         BAL   R9,CONSDATA         GO SET UP WHAT TYPE OF CN THIS ISNTL
         L     R14,=AL4(MODEMSG)                                    NTL
         MVC   0(L'FAKEWARN,R14),FAKEWARN                           NTL
         MODESET MF=(E,PROBLEM)
         SPACE 1                                                    NTL
         MVC   OLDCONS#,CONSOLE#   SAVE THIS GOOD ONE...            NTL
         BAL   R9,WRITE            DOIT JACK !!!
         MVC   SVCRCM,LOTSBLNK
         MVC   NOTR15,LOTSBLNK
         OC    REPLY,LOTSBLNK      CONVERT TO UPPER CASE
         CLC   REPLY(4),=CL4'END ' END STRING?                      NTL
         BE    END1                YES...SPLIT                      NTL
         CLC   REPLY(4),=CL4'EXIT' END STRING?                      NTL
         BE    END1                YES...SPLIT                      NTL
         CLC   REPLY(2),=CL2'CN'   CONSOLE SWITCH?                  NTL
         BE    DOSWITCH            YEP..GO TRY IT OUT               NTL
         CLI   REPLY,C' '          NULL INPUT ?
         BE    GOTONE              YES..NO COMMAND..GO PEEK AND SHOW
*                                  SIGH..GOT TO ISSUE THE COMMAND
         MVC   CMNDBUF,LOTSBLNK
         MVC   CMNDBUF(79),REPLY
         MVC   LOGCMD,CMNDBUF        SAVE COMMAND AS EXECUTED
         CLI   CMDAUTH,C' '        NO LOGGING?                      NTL
         BE    NOLOGIT                                              NTL
LOGIT    WTO   MF=(E,WTOLOG)         DO THE WTO FOR POSTERITY
NOLOGIT  MODESET MF=(E,SUPER)
         LA    R1,CMND             WELL ?
         XR    R0,R0
         IC    R0,XUCMID           OUR MAN IN THE COMM TASK
         SR    R15,R15
         CLI   CMDAUTH,C' '        DO ANYTHING?                     NTL
         BE    DOCMD                                                NTL
         CLI   CMDAUTH,C'N'        JUST DISPLAY?                    NTL
         BE    NODOCMD             YEP..SKIPIT                      NTL
         CLI   CMDAUTH,C'$'        ALL BUT JES                      NTL
         BNE   DOCMD               NO..SO DOIT                      NTL
         CLI   LOGCMD,C'$'         IS IT JES2 CMD?                  NTL
         BE    NODOCMD             YEP...SKIP IT                    NTL
DOCMD    SVC   34                  FIRE HIM THRU
NODOCMD  LR    R2,R15              SAVE RETURN CODE
         MODESET MF=(E,PROBLEM)
         LTR   R15,R2
         BZ    GOTONE              FIND OUT WUTS HAPPENIN
         SPACE  1
*.....................................................................*
* SEE IF  WE ARE HERE BY A PREVIOUS MARRIAGE ... (WITH A NZERO RC)    *
*.....................................................................*
         SPACE 1
         MVC   SVCRCM(L'SVCRCM),=C' CMD RC='
         BAL   R9,CVTPRT           DO IT
         MVC   NOTR15,CVTA         MOVE IN RC
         L     R15,=A(MSGLINE)     GET ADDRESS                      NTL
         MVC   0(UNITLEN,R15),UNITMSG  MOVE IN TITLES
         BAL   R9,WRITE            ...
         MVC   REPLY,LOTSBLNK
         MVC   SVCRCM,LOTSBLNK
         MVC   NOTR15,LOTSBLNK
         B     GOTONE
         EJECT
*.....................................................................*
*    CLEANUP AND RETURN TO TSO                                        *
*.....................................................................*
         SPACE
END1     TM   #FLAGS,X'80'          WAS LINE OR SCR SIZE CHANGED    NTL
         BNO  DOCLEAR               NO..JUST SPLIT                  NTL
         STSIZE SIZELOC=#CHARS,LINELOC=#LINES                       NTL
DOCLEAR  LA   R1,CLEAR
         LA   R0,L'CLEAR
         ICM  R1,B'1000',TPUTFLG        INDICATE FULL SCREEN
         TPUT (1),(0),R
ENDIT    STFSMODE OFF               NO MORE FULL SCREEN VTAM STUFF  NTL
         AIF  (NOT &SP3).SP3D                                       NTL
         BAL  R14,ENDAX             CLOSE DOWN THE CROSS MEM SVCS   NTL
.SP3D    ANOP ,                                                     NTL
         B    $$EOJ
         SPACE
         EJECT
*.....................................................................*
*   PROCESS CNXX COMMAND (CONSOLE SWITCH REQUEST)                     *
*.....................................................................*
         SPACE
DOSWITCH XC    CVTA(8),CVTA        CLEAR OUT AN AREA                NTL
         MVZ   CVTA(2),REPLY+2     CHECK OUT CNNN FOR 2 NUMERICS    NTL
         CLC   CVTA(2),=X'F0F0'    BOTH NUMERIC                     NTL
         BE    DOSWITC1            YES..CONTINUE PLEASE             NTL
         L     R14,=AL4(MODEMSG)                                    NTL
         MVC   0(L'MODEMSG,R14),=CL79'CONSOLE SWITCH COMMAND XXXX NOT IX
               N ''CN99'' FORMAT.  CMD IGNORED'                     NTL
         MVC   23(4,R14),REPLY                                      NTL
         MVC   REPLY,LOTSBLNK                                       NTL
         BAL   R9,WRITE                                             NTL
         B     RESTART                                              NTL
DOSWITC1 PACK  CVTA,REPLY+2(2)                                      NTL
         CVB   R15,CVTA                                             NTL
         ST    R15,CONSOLE#                                         NTL
         B     RESTART                                              NTL
         SPACE 1
*.....................................................................*
*   LOCAL SUBROUTINE CONSDATA - DETERMINE WHAT TYPE OF CONSOLE THIS IS*
*.....................................................................*
         SPACE
CONSDATA MVC   CLRFLDS,LOTSBLNK   BLANK OUT CONSOLE TYPE FIELD      NTL
         TM    UCMDISP1,UCMDISPA  IS THIS A MASTER CONSOLE?         NTL
         BNO   AUTH0              NO                                NTL
         MVC   MASTER(6),=CL6'MASTER' YES                           NTL
AUTH0    TM    UCMAUTHA,UCMAUTH1  IS THIS CONSOLE SYSTEM AUTHZD?    NTL
         BNO   AUTH1              NO                                NTL
         MVC   SYS(3),=CL3'SYS'   YES                               NTL
AUTH1    TM    UCMAUTHA,UCMAUTH2  IS IT I/O AUTHOZRIZED?            NTL
         BNO   AUTH2              NO                                NTL
         MVC   IO(3),=CL3'I/O'    YES                               NTL
AUTH2    TM    UCMAUTHA,UCMAUTH3  IS IT CONS AUTHORIZED?            NTL
         BNO   AUTHDONE           NO                                NTL
         MVC   CONS(4),=CL4'CONS' YES                               NTL
AUTHDONE EQU   *                                                    NTL
         SR    R15,R15            CLEAR OUT REGISTER                NTL
         IC    R15,UCMID          GET UCIMD                         NTL
         CVD   R15,CVTA           CONVERT TO DECIMAL IN WORK        NTL
         MVC   CVTA(4),=X'40212020' MOVE IN EDIT PATTERN            NTL
         ED    CVTA(4),CVTA+6     EDIT IN CONSOLE NUMBER            NTL
         MVC   CONNUM(2),CVTA+2   MOVE CONSOLE NUMBER INTO PLACE    NTL
         BR    R9                                                   NTL
         SPACE 1
*.....................................................................*
* LOCAL SUBROUTINE TO CONVERT R15 TO PRINTABLE HEX (EBCDIC)           *
*.....................................................................*
CVTPRT   DS    0H
         ST    R15,CVTB
         UNPK  CVTA(9),CVTB(5)
         NC    CVTA(8),HEXMASK
         TR    CVTA(8),HEXTAB
         BR    R9
         EJECT ,
*.....................................................................*
* LOCAL SUBROUTINE WRITE SCREEN VIA TPUT, AND GET REPLY VIA TGET      *
*.....................................................................*
WRITE    EQU   *
         LA    R1,FULLSCRN
         LA    R0,SCRLEN
         ICM   R1,B'1000',TPUTFLG        INDICATE FULL SCREEN
PUTIT    TPUT  (1),(0),R
         MVI   STOPERAS,X'F1'      RESET ERASE/WRITE TO WRITE ORDER
         SPACE 2
GETIT    TGET  PFREPLY,L'PFREPLY,ASIS
         SPACE 2
GOTIT    CH    R15,=H'14'                IS INPUT LONGER THAN BUFFER
         BNE   SKIPCLRQ
         TCLEARQ INPUT                  FLUSH THE TRASH
SKIPCLRQ CLI   PFREPLY,X'F3'      PF 3 ENTERED?
         BE    END1                  YES...SPLIT
         CLI   PFREPLY,X'F9'      PF 9 ENTERED?                     NTL
         BNE   SCLRQ1                NO..KEEP ON TRUCKIN'           NTL
         XI    #FLAGS2,#DEBUG     TOGGLE DEBUG FLAG                 NTL
SCLRQ1   CLI   PFREPLY,X'7C'      PF 12 ENTERED?                    NTL
         BE    END1                  YES...SPLIT                    NTL
         CLI   PFREPLY,X'C3'      PF 15 ENTERED?                    NTL
         BE    END1                  YES...SPLIT                    NTL
         CLI   PFREPLY,X'4C'      PF 24 ENTERED?                    NTL
         BE    END1                  YES...SPLIT                    NTL
         CLI   PFREPLY,X'6E'      PA 2 ENTERED?
         BE    RESTART              YES...START OVER
         BR    R9
         EJECT
*.....................................................................*
*  CHKUSER - GET USER ATTRIBUTES/AUTHORITY                            *
*.....................................................................*
         SPACE
CHKUSER  EXTRACT MF=(E,EXTRPSCB)      YES..CHECK FOR OPER PRIVLEDGE NTL
         L     R1,ANSWER                                            NTL
         USING PSCB,R1                                              NTL
CHKOPER  TM    PSCBATR1,PSCBCTRL      DOES USER HAVE OPER PRIVLEDGE NTL
         MVC   LOGUSER,PSCBUSER       SET UP TO LOG THE COMMAND     NTL
         BOR   R9                     YES..GO ALLOW OPERATION       NTL
         SPACE 1                                                    NTL
*                                                                   NTL
* NOW GET USER ATTRIBUTES IN THE ATTRIBUTE TABLE                    NTL
*                                                                   NTL
         LA    R15,USERTAB            POINTER TO USER TABLE         NTL
LOOPCHK  CLC   0(7,R15),=CL7' '       BLANK....?                    NTL
         BE    SORRY                  YEP..AND STILL NOT ON THE LISTNTL
*                                                                   NTL
         MVC   MASKAREA,0(R15)        MOVE TSO USERID TO MASK       NTL
         TR    MASKAREA,TRMASK        GENERATE MASK                 NTL
         MVC   MASKNAME,0(R15)        MOVE USERID TO HOLDING AREA   NTL
         OC    MASKNAME,MASKAREA       AND MASK OFF THE DON'T CARES NTL
*                                                                   NTL
         MVC   WORKNAME,PSCBUSER      MOVE NAME FROM TABLE          NTL
         OC    WORKNAME,MASKAREA      PUT X'FF' IN DONT CARE BYTES  NTL
         CLC   MASKNAME,WORKNAME      IS THIS ONE FOUND?            NTL
         BE    LOOPFND                YES....                       NTL
         LA    R15,8(,R15)            NO..BUMP AND                  NTL
         B     LOOPCHK                            GRIND             NTL
LOOPFND  MVC   CMDAUTH,7(R15)         SAVE THE CMD AUTH CHARACTER   NTL
         BR    R9                     AND CONTINUE                  NTL
         DROP  R1                                                   NTL
SORRY    LA    R0,L'EMSG1
         LA    R1,EMSG1
         TPUT  (1),(0),R
         B     $$EOJ
         EJECT
*.....................................................................*
*   INITCONS- SEARCH FOR ALL VALID UCME..PUT IN UCM#TAB               *
*.....................................................................*
         SPACE
INITCONS ST    R14,R14SAV1
         L     R1,CVTPTR           AND IN THE BEGINNING...
         L     R1,CVTCUCB-CVT(R1)  ...
         USING UCM,R1
         USING UCMLIST,R3
         LM    R3,R5,UCMVEA        R3 -> TO THE FIRST UCME
*                                   R4 CONTAINS UCME LENGTH
*                                    R5 -> TO THE LASST UCME
         SLR   R7,R7               R7=COUNT OF UCME FOUND           NTL
         LA    R8,UCM#TAB+4        (R8)=PTR TO WHERE TO POKE UCMEAD NTL
         LA    R9,UCM#TABE         (R9)=END OF THE LINE..           NTL
         SPACE 1                                                    NTL
         MODESET MF=(E,SUPER)
INITCON0 ST    R3,0(R8)            SAVE OFF UCME ADDRESS            NTL
         LA    R8,4(R8)            BUMP POINTER TO UCM#TAB ENTRY    NTL
         LA    R7,1(R7)            BUMP COUNT OF ENTRIES FOUND      NTL
         CLI   CONSOLE#,0          SEE IF CONSOLE HAS BEEN CHOSEN?  NTL
         BE    INITCON2            YES..ALREADY GOT A LIVE ONE..    NTL
         SPACE 1                                                    NTL
INITCON1 TM    UCMATR,UCMUF        IS IT ACTIVE ?                   NTL
         BZ    INITCON2            NO.. UNUSEABLE                   NTL
         L     R10,UCMXB           IS IT GRAPHICS ?                 NTL
         LTR   R10,R10             ...                              NTL
         BZ    INITCON2            NO.. USELESS                     NTL
         USING DCMTSRT,R10         POINT TO THE DCM                 NTL
         L     R6,DCMADTRN         FIND  THE PAGEABLE DCM (TDCM)    NTL
         LTR   R6,R6               DOES IT EXIST ?                  NTL
         BZ    INITCON2            NO...                            NTL
         USING DCMSTRT,R6          A LITTLE                         NTL
         AIF   (NOT &SP3).SP3E                                      NTL
         BAL   R14,MOVETDCM        MOVE TDCM SO WE CAN LOOK AT IT   NTL
.SP3E    ANOP  ,                                                    NTL
         CLI   DCMIONDX,X'10'      IS IT A 3270 ?                   NTL
         BNE   INITCON2            NO DAMN IT..                     NTL
         SPACE 1                                                    NTL
         ST    R7,CONSOLE#    AHHHHH SAVE THIS CONSOLE AS THE       NTL
         ST    R7,OLDCONS#            PRECIOUS RESOURCE THAT IT IS  NTL
         SPACE 1                                                    NTL
INITCON2 BXLE  R3,R4,INITCON0      GET THE NEXT ENTRY
         STH   R7,UCM#NUMS         SAVE OFF COUNT FOUND.......      NTL
         SPACE 1                                                    NTL
         MODESET MF=(E,PROBLEM)
         SPACE 1                                                    NTL
         L     R14,R14SAV1                                          NTL
         BR    R14                 RETURN TO MAINLINE               NTL
         EJECT
         AIF   (NOT &SP3).SP3F     SUPPORT FOR SP3 SUBROUTINES      NTL
*.....................................................................*
*   INITIALIZE CROSS MEMORY SERVICES                                  *
*.....................................................................*
         SPACE
INITAX   STM   R0,R15,AXSAVER      SAVE EVERYTHING....              NTL
         SPACE 1                                                    NTL
         MODESET MF=(E,SUPER)      GO SUPERVISOR, KEY=0             NTL
         ESAR  R5                  GET OUR ASID                     NTL
         SPACE 1                                                    NTL
         ST    R5,OURASID          AND SAVE IT                      NTL
         AXSET AX=ONE              SET AX TO ALLOW SSAR             NTL
         GETMAIN R,LV=820          GET AREA FOR TDCM                NTL
         ST    R1,@TDCM            AND SAVE THE ADDRESS FOR LATER   NTL
         LM    R0,R15,AXSAVER      RESTORE ENVIRONMENT              NTL
         BR    R14                                                  NTL
         EJECT ,                                                    NTL
*.....................................................................*
* END CROSS MEMORY SERVICES FOR SP3                                   *
*.....................................................................*
         SPACE
ENDAX    STM   R0,R15,AXSAVER      SAVE EVERYTHING....              NTL
         SPACE 1                                                    NTL
         MODESET MF=(E,SUPER)      GO SUPERVISOR, KEY=0             NTL
         SPACE 1                                                    NTL
         L     R1,@TDCM            GET TDCM GETMAIN ADDRESS         NTL
         FREEMAIN R,LV=820,A=(1)   GIVE IT BACK                     NTL
         SPACE 1                                                    NTL
         AXSET AX=ZERO             SET AX TO DISALLOW SSAR          NTL
         MODESET MF=(E,PROBLEM)    BACK TO REAL WORLD...            NTL
         LM    R0,R15,AXSAVER      RESTORE ENVIRONMENT              NTL
         BR    R14                                                  NTL
         EJECT ,                                                    NTL
*.....................................................................*
*  MOVETDCM    - MOVE PAGABLE TDCM TO OUR AREA                        *
*.....................................................................*
         SPACE
MOVETDCM STM   R0,R15,AXSAVER      SAVE EVERYTHING....              NTL
         SPACE 1                                                    NTL
         LA    R7,CONSASID         POINT TO CONSOLE ASID            NTL
         SSAR  R7                  AND SET UP TO LOOK AT THE BUGGER NTL
         SPACE 1                                                   NTL
         L     R7,@TDCM            THE 'TO' ADDRESS                 NTL
         LA    R3,820              THE 'TO' LENGTH (OF TDCM)        NTL
         SR    R15,R15             THE 'FROM' KEY =0                NTL
         SPACE 1                                                   NTL
MOVETDC1 MVCP  0(R3,R7),0(R6),R15  MOVE FROM THEM TO US...          NTL
         SPACE 1                                                   NTL
         BZ    MOVETDC2            END?                             NTL
         LA    R6,256(,R6)         BUMP                             NTL
         LA    R7,256(,R7)          AND                             NTL
         SH    R3,=H'256'             GRIND                         NTL
         B     MOVETDC1                AGAIN AT 256 BYTES A POP..   NTL
         SPACE 1                                                    NTL
MOVETDC2 L     R5,OURASID          GET US BACK AGAIN.....           NTL
         SSAR  R5                  PLEASE..                         NTL
         SPACE 1                                                    NTL
         LM    R0,R15,AXSAVER      RESTORE ENVIRONMENT              NTL
         L     R6,@TDCM            EXCEPT FOR TDCM POINTER..OURS..  NTL
         BR    R14                                                  NTL
         EJECT ,                                                    NTL
*.....................................................................*
* MOVESCRN - MOVE IN SCREEN FROM ASID=5 SCREEN AREA                   *
*.....................................................................*
         SPACE
MOVESCRN STM   R0,R15,AXSAVER      SAVE EVERYTHING....              NTL
         SPACE 1                                                    NTL
         LA    R4,CONSASID         POINT TO CONSOLE ASID            NTL
         SSAR  R4                  AND SET UP TO LOOK AT THE BUGGER NTL
         SPACE 1                                                   NTL
*              R8 = 'TO' ADDRESS  (OUR SCREEN)                      NTL
*              R9 = 'TO' LENGTH                                     NTL
*              R7 = 'FROM' ADDRESS                                  NTL
*                                                                   NTL
         SR    R15,R15             THE 'FROM' KEY =0                NTL
         SPACE 1                                                   NTL
MOVESCR1 MVCP  0(R9,R8),0(R7),R15  MOVE FROM THEM TO US...          NTL
         SPACE 1                                                   NTL
         BZ    MOVESCR2            END?                             NTL
         LA    R8,256(,R8)         BUMP                             NTL
         LA    R7,256(,R7)          AND                             NTL
         SH    R9,=H'256'             GRIND                         NTL
         B     MOVESCR1                AGAIN AT 256 BYTES A POP..   NTL
         SPACE 1                                                    NTL
MOVESCR2 L     R5,OURASID          GET US BACK AGAIN.....           NTL
         SSAR  R5                  PLEASE..                         NTL
         SPACE 1                                                    NTL
         LM    R0,R15,AXSAVER      RESTORE ENVIRONMENT              NTL
         BR    R14                                                  NTL
         EJECT
.SP3F    ANOP  ,                                                    NTL
*.....................................................................*
*        MESSAGES                                                     *
*.....................................................................*
         SPACE
EMSG1    DC   C'SORRY...DIDOCS  IS ONLY AVAILABLE TO OPER PRIV USERS'
ERMSG    DC    C'>>> NO ACCEPTABLE (3277) CONSOLES FOUND <<<'
ERRORMSG DC   CL79'CONSOLE CN=XX UNIT=XXX XXXXX'                    NTL
ECONS#   EQU   ERRORMSG+11,2                                        NTL
EUNIT    EQU   ERRORMSG+19,3                                        NTL
EREASON  EQU   ERRORMSG+23,24                                       NTL
         SPACE 1
WTOLOG   WTO   'XXXXXXX CMD:                                           *
                                                     ',ROUTCDE=(1),MF=L
         ORG   WTOLOG+4
LOGUSER  DS    CL7
         ORG   WTOLOG+17
LOGCMD   DS    CL80
         ORG
         SPACE 1
*NITMSG  DC    X'11D9401DE8'                                        NTL
UNITMSG  DC    C'SIMULATED OPERATOR CONSOLE USING DIDOCS CONSOLE AT -'
UNITXXX  DC    CL4' '
SVCRCM   DC    CL9' '
NOTR15   DC    CL8' '
         DC    C' '
UNITLEN  EQU   *-UNITMSG
         SPACE 1
         SPACE 2
*
* TURN OFF FULL SCREEN (SPF) , CLEAR AND RESET CURSOR TO ROW1,COL1
*
CLEAR    DC    X'27F5C3115D7E1140403C40400011404013'                NTL
CLRMOD   EQU   CLEAR+1,1      F5 FOR MOD 2                          NTL
*                             7E FOR ^MOD 2                         NTL
*
TPUTFLG  DC   X'03'                   ITS FULL SCREEN TIME
         EJECT
*.....................................................................*
*        CONSTANTS                                                    *
*.....................................................................*
         SPACE
#ADJUST  DC    F'06'          ADJUST FOR SBA/ ATTRIB START          NTL
LOTSBLNK DC    CL90' '
HEXMASK  DC    XL8'0F0F0F0F0F0F0F0F'
HEXTAB   DC    C'0123456789ABCDEF'
         SPACE
TRMASK   DC    XL256'00'      USED FOR MASKING OF USERIDS           NTL
         ORG   TRMASK+C'*'                                          NTL
         DC    XL1'FF'                                              NTL
         ORG   ,                                                    NTL
         SPACE 2
*.....................................................................*
*  USER AUTH TABLE - WHO CAN DO WHAT....                              *
*.....................................................................*
         SPACE
*                                                                   NTL
* USERID IS 7 CHARS.. USE '*' TO 'WILD-CARD' MATCH ANY CHAR IN THIS NTL
*                     POSITION.                                     NTL
*                                                                   NTL
* CMDAUTH='L' DEFAULT - DO ANYTHING, BUT LOG IT                     NTL
* CMDAUTH='$' DO ONLY NON-JES2 CMDS, AND LOG IT                     NTL
* CMDAUTH=' ' DO ANYTHING, NO LOGGING                               NTL
* CMDAUTH='N' NO COMMANDS ALLOWED, PEEK ONLY..                      NTL
* CMDAUTH='E' JUST EXIT WITH NO DISPLAY.....                        NTL
*                                                                   NTL
*SERTAB  DC    CL7'S666***',C'E'   TABLE BASED ON SP3 DIDOCS CODE   NTL
*        DC    CL7'****73*',C'$'                                    NTL
*        DC    CL7'****93*',C'$'                                    NTL
*        DC    CL7'****72*',C'$'                                    NTL
*        DC    CL7'****62*',C'$'                                    NTL
*        DC    CL7'****A6*',C'L'                                    NTL
*        DC    CL7'****A3*',C'L'                                    NTL
*        DC    CL7'****03*',C' '                                    NTL
*        DC    CL7'****34*',C' '                                    NTL
*        DC    CL7'****29*',C' '                                    NTL
USERTAB  DC    CL7'       ',C' '                                    NTL
         DC    CL7'MVS#***',C'L'                                    NTL
         DC    CL7'STR#BRJ',C'N'                                    NTL
         DC    CL7'TECH   ',C'$'                                    NTL
         DC    CL7'OPR#***',C'L'                                    NTL
         DC    CL7'       ',C'L'                                    NTL
         DC    CL7'       ',C'L'                                    NTL
         DC    CL7'       ',C'L'                                    NTL
         DC    CL7'       ',C'L'                                    NTL
         DC    CL7'       ',C'L'                                    NTL
         DC    CL7'       ',C'L'                                    NTL
         DC    CL7'       ',C'L'   LAST ONE MUST BE BLANK -------   NTL
         EJECT
*.....................................................................*
*        VARIABLES                                                    *
*.....................................................................*
         SPACE
CVTA     DC    D'0',X'0'               PLUS A GARBAGE BYTE
CVTB     DC    F'0'
R14SAV1  DC    F'0'                                                 NTL
         AIF   (NOT &SP3).SP3G                                      NTL
AXSAVER  DC    16F'0'    SAVE AREA FOR AX/CROSS MEM SERVICES ROUTINSNTL
OURASID  DC    F'0'      OUR ASID FOR FROM ESAR MACRO               NTL
ONE      DC    H'1'      TO SET AX FOR 1                            NTL
ZERO     DC    H'0'      TO SET AX FOR 0                            NTL
@TDCM    DC    F'0'      POINTER TO 820 BYTES FOR TDCM COPY         NTL
CONSASID EQU   5         ASID FOR CONSOLE ADDRESS SPACE             NTL
.SP3G    ANOP  ,                                                    NTL
MASKAREA DC    CL7' '    HOLD THE MASK FOR DON'T CARES              NTL
MASKNAME DC    CL7' '    HOLD THE MASKED NAME FROM THE TABLE        NTL
WORKNAME DC    CL7' '    HOLD THE MASKED NAME FROM PSCBUSER         NTL
CMDAUTH  DC    CL1'L'    DEFAULT CMD AUTH-DOIT ALL, BUT LOGIT       NTL
         SPACE 1
CMND     DC    H'79',H'0'
CMNDBUF  DC    CL80' '
CMNDLEN  EQU   *-CMND
         SPACE 1
XUCMID   DC    X'0'
#FLAGS   DC    X'0'                FLAGS FOR FULLSCRN OPERATION     NTL
#FLAGS2  DC    X'0'                FLAGS FOR MISCELLANEOUS          NTL
#DEBUG   EQU   X'80'                  DEBUG SCREEN PROBLEMS         NTL
ANSWER   DC    F'0'                ADDRESS POINTER FOR EXTRACT
         SPACE 2
PFREPLY  DS    0CL86               AREA TO HOLD TGET REPLY
PFCODE   DC    CL6' '              AID+JUNK
REPLY    DC    CL80' '             REAL REPLY
         SPACE 2
FAKEWARN DC    CL79'IEE163I MODE= FAKE   (PF3) TO EXIT  CN=XX XXXXXX SYX
               S I/O CONS '                                         NTL
CONNUM   EQU   FAKEWARN+39,2                                        NTL
MASTER   EQU   FAKEWARN+42,6                                        NTL
SYS      EQU   FAKEWARN+49,3                                        NTL
IO       EQU   FAKEWARN+53,3                                        NTL
CONS     EQU   FAKEWARN+57,4                                        NTL
FLDLENS  EQU   *-MASTER-1                                           NTL
CLRFLDS  EQU   MASTER,FLDLENS                                       NTL
         SPACE 2                                                    NTL
UCM#TAB  DS    F              TABLE FOR UCM ADDRESSES               NTL
         DS    20F            CN=01 - CN=20 SPACE HERE              NTL
UCM#TABE EQU   *                                                    NTL
UCM#NUMS DS    H              NUMBER OF UCMS FOUND 1-20             NTL
OLDCONS# DC    F'-1'          LAST CONSOLE TO LOOK AT               NTL
CONSOLE# DC    F'-1'          CURRENT CONSOLE TO LOOK AT            NTL
         SPACE 1                                                    NTL
#CHARS   DC    F'0'           HOLD # CHARS PER LINE                 NTL
#LINES   DC    F'0'           HOLD # LINES PER PAGE OF DISPLAY      NTL
         SPACE 1                                                    NTL
FULL80   DC    F'80'          CONSTANT 80                           NTL
FULL24   DC    F'24'          CONSTANT 24                           NTL
         EJECT
*.....................................................................*
*        LIST FORMS OF MACROS                                         *
*.....................................................................*
         SPACE 2
EXTRPSCB EXTRACT ANSWER,'S',FIELDS=(PSB),MF=L
         SPACE 2
SUPER    MODESET KEY=ZERO,MF=L
         SPACE 2
PROBLEM  MODESET KEY=NZERO,MF=L
         EJECT
*.....................................................................*
*        LITERAL POOL                                                 *
*.....................................................................*
         SPACE
         LTORG
         EJECT
*.....................................................................*
*        SCREEN FORMAT                                                *
*.....................................................................*
         SPACE 2
*FULLSCRN DC    X'C1115D7F1140403C4040001DE8' SET BUFFER/CLEAR
*ULLSCRN DC    X'27F5C3115D7F1140401D60' SET BUFFER
FULLSCRN DC    X'27F5C3115D7F'           SET BUFFER
* NOTE: FIRST LINE OF DIDOCS BUFFER HAS 1140401DEX IN IT....        NTL
*                                                                   NTL
STOPERAS EQU   FULLSCRN+1,1     =F5 FOR FIRST TPUT (ERASE/WRITE)
*                               =F1 THEREAFTER     (WRITE)
         SPACE 2
SCREEN   DC    19CL84' '   DATA LINES  WITH 5 BYTES SBA, FIELD TYPE NTL
SCREENL  EQU   *-SCREEN    LENGHT OF THE DIDOCS STUFF               NTL
         DC    X'1D60',CL79' '                                      NTL
         DC    X'1DE8'           SBA TO ROW 21,COL1 .. HIGHLIGHT    NTL
MSGLINE  DC    CL79' '
         DC    X'1DC1'           SET INPUT FIELD ROW 22,COL 1
         DC    X'3C5CF000'       CLEAR TO        ROW 24,COL 1
         DC    X'115B601DF0'     END OF INPUT    ROW 23,COL 1
         SPACE 2
         DC    X'115CF01DE8'     LAST LINE       ROW 24,COL 1
MODEMSG  DC     CL79' '          FOR THE MODE MESSAGEES
         DC    X'115AD113'       SET CURSOR TO ENTRY LINE ROW 22,COL 2
SCRLEN   EQU   *-FULLSCRN
*
         EJECT
*.....................................................................*
*        DSECTS                                                       *
*.....................................................................*
         PRINT NOGEN                                                NTL
         TITLE 'MVS UCM DEFINITION'
         IEECUCM FORMAT=NEW
         TITLE 'MVS RESIDENT DCM DEFINITION (RDCM)'
         IEERDCM
         TITLE 'MVS TRANSIENT DCM DEFINITION (TDCM)'
         IEETDCM
         TITLE 'MVS CVT DEFINITION'
         CVT   DSECT=YES
         TITLE 'TSO PROTECTED STEP CONTROL BLOCK'
         IKJPSCB
         END
