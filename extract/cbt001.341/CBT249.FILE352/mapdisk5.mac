*          DATA SET MAPDISK5   AT LEVEL 001 AS OF 04/30/81
*          DATA SET MAPDISK5   AT LEVEL 002 AS OF 05/24/78
*          DATA SET FASTMAP5   AT LEVEL 001 AS OF 11/09/77
PRNT TITLE '                 FASTMAP5 -- PRNT'
* THIS ROUTINE IS CALLED BY FORMAT TO PERFORM ACTUAL OUTPUT
* TO THE SYSPRINT FILE.  IT IS CALLED BY FASTDISK FOR
* INITIALIZATION AND TERMINATION.
*
* FASTMAP5/PRNT,  GENE CZARCINSKI,  20MAY74
*
*   ADDED ASM2 SYSTEM PRINTOUT SUPPORT    K TRUE   17FEB77  FCI
*   ADDED MSS VOLUME SUPPORT              K TRUE   14FEB78  FCI
*
* NOTE: THE DCB EXIT ROUTINE SETS THE FOLLOWING DEFAULTS:
*        BLKSIZE=7294
*
         LCLC  &RELEASE,&OPENMOD,&ASM2MOD,&MSSMOD
&RELEASE SETC  'VER2.02'
&OPENMOD SETC  'Y'           TO GET 'LOCAL' MOD FOR OPEN COUNT
&ASM2MOD SETC  'Y'           TO GET ASM2 DATA PRINTED
&MSSMOD  SETC  'Y'           TO GET MSVGP FOR DYNAM MSS VOLS     MSSMOD
*                    SET TO 'Y' FOR YES
*                    SET TO 'N' FOR NO
*
FASTMAP5 START 0
         ENTRY PRNT,INITPRNT,TERMPRNT
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12            PROGRAM BASE REG
R13      EQU   13            SAVE AREA PNTR
R14      EQU   14
R15      EQU   15
 EJECT
PRNT     SAVE  (14,12),,*
         LR    R12,R15
         USING PRNT,R12
         LA    R15,SAVEAREA
         ST    R13,4(R15)
         ST    R15,8(R13)
         LR    R13,R15
         LR    R11,R0                  OPERATION CODE
         LA    R10,1
         XR    R9,R9
         IC    R9,0(R14)               LINE LEN
         LR    R2,R1                   A(OUTPUT LINE)
         B     *+4(R11)                GOTO APPROPRIATE S/R
         B     INIT1         00
         B     PRNT5         04
         B     INIT3         08
         B     PRNT1         12
         B     PRNT2         16
         B     PRNT2         20
         B     PRNT4         24
         B     PRNT6         28
 EJECT
         AIF   ('&MSSMOD' NE 'Y').M$0
INIT1    LM    R2,R5,0(R2)             GET PARMS                 MSSMOD
         AGO   .M$0E
.M$0     ANOP
INIT1    LM    R2,R4,0(R2)             GET PARMS
.M$0E    ANOP
         MVC   HEAD2V,0(R2)            VOL-SER
         MVC   HEAD2U,0(R3)            UNIT
         MVC   HEAD2D,0(R4)            DEVICE (MODEL NO.)
         AIF   ('&MSSMOD' NE 'Y').M$1                            MSSMOD
         MVC   HEAD2TX1,=CL9' '        CLEAR OUT MSVGP HEADER    MSSMOD
         MVI   HEAD2TX2,C' '                                     MSSMOD
         MVC   HEAD2MG,=CL8' '                                   MSSMOD
         CLC   0(8,R5),=CL8' '         IS MSVGP GIVEN?           MSSMOD
         BE    NOMSVGP                   NO-> SKIP HEADING MOVE  MSSMOD
         MVC   HEAD2TX1,=CL9'  (MSVGP='  YES-> RESET HEADING     MSSMOD
         MVI   HEAD2TX2,C')'               AND MOVE IN           MSSMOD
         MVC   HEAD2MG,0(R5)               THE MSVGP             MSSMOD
NOMSVGP  DS    0H                                                MSSMOD
.M$1     ANOP                                                    MSSMOD
         CALL  ZTIME,(HEAD1DT),VL      GET DATE & TIME
         MVC   A1,=A(HEAD4)
         MVC   A2,=A(HEAD5)
INIT1B   BAL   R14,PAGENUM             FORMAT PAGE NUMBER
         PUT   PRINT                   AND OUTPUT THE HEADER
         MVC   0(HEAD1L,R1),HEAD1
         PUT   PRINT
         MVC   0(HEAD2L,R1),HEAD2
         PUT   PRINT
         L     R15,A1
         LH    R14,0(R15)
         BCTR  R14,0                   MINUS ONE FOR 'EX'
         EX    R14,MVC
         MVI   LINE+1,5                INITIAL LINE COUNT OF 5
         L     R15,A2
         LTR   R15,R15                 IS THERE A LINE?
         BZ    RET                     NO, RETURN.
         MVI   LINE+1,6                YES, ONE MORE LINE.
         PUT   PRINT
         L     R15,A2
         LH    R14,0(R15)
         BCTR  R14,0                   MINUS ONE
         EX    R14,MVC
         B     RET
INIT3    XC    A2,A2
         MVC   A1,=A(HEAD3)
         B     INIT1B
 EJECT
PRNT1    MVC   SAVEDSN,0(R2)           SAVE THE DSNAME
         CLI   LINE+1,56               TEST FOR 'NEAR' END PAGE
         BL    *+8                     NO.
         LA    R10,2                   YES...TO HAVE THIS LINE AT TOP
PRNT2    BAL   R8,NEWLINE
         PUT   PRINT
         LA    R14,5(R9)
         STH   R14,RDW
         MVC   0(5,R1),RDW
         BCTR  R9,0
         EX    R9,MVC2
         B     RET
PRNT4    PUT   PRINT                   OUTPUT SUM
         MVC   0(TOTL,R1),TOT
         PUT   PRINT
         LA    R14,5(R9)
         BCTR  R9,0
         STH   R14,RDW
         MVC   0(5,R1),RDW
         EX    R9,MVC2
         LA    R10,4
         BAL   R8,NEWLINE
         PUT   PRINT
         MVC   0(MSGENDL,R1),MSGEND
         B     RET
PRNT5    XC    A1,A1
         XC    A2,A2
         LA    R10,3
         BAL   R8,NEWLINE
         PUT   PRINT
         MVC   0(MSGEND2L,R1),MSGEND2
         LA    R10,1
         BAL   R8,NEWLINE
         PUT   PRINT
         MVC   0(6,R1),RDW
         MVI   1(R1),6                 SPACE 1
         B     RET
*  TO PRINT AN ERROR MESSAGE
PRNT6    MVI   LINE+1,5                RESET AND PAGE EJECT
         BAL   R14,PAGENUM             FOR 'ERROR' MESSAGE
         PUT   PRINT
         MVC   0(HEAD1L,R1),HEAD1
         PUT   PRINT
         LA    R14,5(R9)
         STH   R14,RDW
         MVC   0(5,R1),RDW
         MVI   4(R1),C'0'              DOUBLE SPACE
         BCTR  R9,0
         EX    R9,MVC2
         B     RET
 EJECT
RET      L     R13,4(R13)              RESTORE REGS AND
         LM    R14,R12,12(R13)         RETURN
         XR    R15,R15
         MVI   12(R13),X'FF'
         B     2(R14)
*
MVC      MVC   0(0,R1),0(R15)
MVC2     MVC   5(0,R1),0(R2)
*
PAGENUM  LH    R1,PAGE                 UPDATE & FORMAT PAGE NO.
         LA    R1,1(R1)
         STH   R1,PAGE
         CVD   R1,WORK
         OI    WORK+7,X'0F'
         MVC   HEAD1P,PAT1             FOR EDIT
         ED    HEAD1P,WORK+5
         BR    R14                     RETURN
*
NEWLINE  LH    R1,LINE                 UPDATE LINE NO.
         LA    R1,0(R1,R10)
         STH   R1,LINE
         CH    R1,=H'57'               57 LINES/PAGE
         BNHR  R8                      RETURN IF NOT HIGH
         MVI   LINE+1,5                SET STD
         BAL   R14,PAGENUM
         PUT   PRINT
         MVC   0(HEAD1L,R1),HEAD1
         PUT   PRINT
         MVC   0(HEAD2L,R1),HEAD2
         L     R15,A1
         LTR   R15,R15
         BZR   R8
         PUT   PRINT
         L     R15,A1
         LH    R14,0(R15)
         BCTR  R14,0
         EX    R14,MVC
         L     R15,A2
         LTR   R15,R15                 EXTRA LINE?
         BZR   R8                      NO, RETURN.
         MVI   LINE+1,6                NOW SIX LINES
         PUT   PRINT
         L     R15,A2
         LH    R14,0(R15)
         BCTR  R14,0                   MINUS ONE
         EX    R14,MVC
         CH    R11,=H'16'              CALLED BY PRINT2?
         BNER  R8                      NO, RETURN.
         MVI   LINE+1,7                YES, OUTPUT SAVED DSN
         PUT   PRINT
         MVC   0(49,R1),OUTDSN
         BR    R8
 EJECT
INITPRNT SAVE  (14,12),,*
         LR    R12,R15
         USING INITPRNT,R12
         LA    R15,SAVEAREA
         ST    R13,4(R15)
         ST    R15,8(R13)
         LR    R13,R15
         LTR   R1,R1                   ZERO?
         BZ    *+12                    YES, USE LONG LINE.
         MVI   HEAD4+1,HEAD4L-11       NO, USE SHORT LINE
         MVI   HEAD5+1,HEAD5L-11
         OPEN  (PRINT,OUTPUT)
         TM    PRINT+(DCBOFLGS-IHADCB),X'10'
         BO    *+10                    OPEN OK.
         LA    R15,20                  OPEN ERROR...
         SVC   3                       ABORT.
         STAE  STAEXIT
         L     R13,4(R13)
         RETURN (14,12),T,RC=0
TERMPRNT SAVE  (14,12),,*
         LR    R12,R15
         USING TERMPRNT,R12
         LA    R15,SAVEAREA
         ST    R13,4(R15)
         ST    R15,8(R13)
         LR    R13,R15
         CLOSE PRINT
         FREEPOOL PRINT
         STAE  0
         L     R13,4(R13)
         RETURN (14,12),T,RC=0
STAEXIT  SAVE  (14,12),,*
         USING STAEXIT,R15
         L     R2,4(R1)                GET ABEND CODE
         SLL   R2,12                   AND FIND OUT IF SCC=X37
         SRL   R2,24
         SH    R2,=X'0037'
         BZ    STAERET
         CLOSE PRINT
STAERET  RETURN (14,12),T,RC=0
*
         USING IHADCB,R1
         USING EXIT,R15
EXIT     CLC   DCBBLKSI,=H'0'          BLKSIZE SPECIFIED?
         BNER  R14                     YES, RETURN.
         MVC   DCBBLKSI,=H'7294'       NO, USE DEFAULT.
         BR    R14                     RETURN
 EJECT
WORK     DC    D'0'
SAVEAREA DC    18F'0'
EXLST    DC    0F'0',X'85',AL3(EXIT)
PAGE     DC    H'0'
LINE     DC    H'0'
A1       DC    A(0)
A2       DC    A(0)
RDW      DC    F'0',C'  '
         LTORG
PRINT    DCB   DSORG=PS,MACRF=(PL),DDNAME=SYSPRINT,                    +
               RECFM=VBA,LRECL=125,EXLST=EXLST
 EJECT
PAT1     DC    X'402020202120'         FOR EDIT
*
OUTDSN   DC    Y(49,0),C' '
SAVEDSN  DC    CL44' '
*
HEAD1    DC    Y(HEAD1L,0),CL76'1MAPDISK/II (&RELEASE) --  INTEL CIS - +
               MAPDISK SUPPORT UTILITY'
HEAD1DT  DC    CL28' ',CL7' ',C'PAGE'
HEAD1P   DC    CL6' '
HEAD1L   EQU   *-HEAD1
*
HEAD2    DC    Y(HEAD2L,0),C'0DASD ALLOCATION MAP FOR VOLUME=SER='
HEAD2V   DC    CL6' ',CL3' ',C'UNIT='
HEAD2U   DC    CL5' ',CL3' ',C'DEVICE='
HEAD2D   DC    CL8' '                           FCIMOD
         AIF   ('&MSSMOD' NE 'Y').M$2                            MSSMOD
HEAD2TX1 DC    C'  (MSVGP='                                      MSSMOD
HEAD2MG  DC    CL8' '                                            MSSMOD
HEAD2TX2 DC    C')'                                              MSSMOD
.M$2     ANOP                                                    MSSMOD
HEAD2L   EQU   *-HEAD2
*
HEAD3    DC    Y(HEAD3L,0),C'0FIRST TRACK    LAST TRACK',CL5' '
         DC    CL11'LENGTH',CL14'EXT NO',C'DATA SET NAME'
HEAD3L   EQU   *-HEAD3
*
         AIF   ('&ASM2MOD' EQ 'Y').ASM2HDR
HEAD4    DC    Y(HEAD4L,0),CL54'0'
         AIF   ('&OPENMOD' NE 'Y').SKIP1
         DC    CL7'LAST',CL9' '
.SKIP1   DC    CL7'CREATE',CL7'PURGE',CL8'FILE',CL5'VOL'
         DC    C'---TRACK---',C'  ',C'--PDS DIR--'
HEAD4L   EQU   *-HEAD4
*
HEAD5    DC    Y(HEAD5L,0),CL16' ',CL38'DATA SET NAME'
         AIF   ('&OPENMOD' NE 'Y').SKIP2
         DC    CL6'USED',CL10'USE COUNT'
.SKIP2   DC    CL7'DATE',CL7'DATE',CL8'SERIAL',CL5'SEQ'
         DC    CL7'ALLOC',CL6'USED',CL7'ALLOC',C'USED'
HEAD5L   EQU   *-HEAD5
         AGO   .NOASM2
.ASM2HDR ANOP
HEAD4    DC    Y(HEAD4L,0),CL49'0'    ASM2 SYSTEM HEADER     FCI
         DC    CL8'LAST USE',C' ',C'-----LAST MODIFIED-----',C' '
         DC    CL5' USE',C' ',CL8' EXPIRE',C' '
         DC    C'---TRACK---',C'  ',C'--PDS DIR--'
HEAD4L   EQU   *-HEAD4
*
HEAD5    DC    Y(HEAD5L,0),CL16' ',CL33'DATA SET NAME'
         DC    CL8'  DATE ',C' ',C'  DATE   TIME  JOB/USER',C' '
         DC    CL5'COUNT',C' ',CL8'  DATE',C' '
         DC    CL7'ALLOC',CL6'USED',CL7'ALLOC',C'USED'
HEAD5L   EQU   *-HEAD5
.NOASM2  ANOP
*
MSGEND   DC    Y(MSGENDL,0),C'0*** END OF VOLUME - DASD IS MAPPED ***'
MSGENDL  EQU   *-MSGEND
*
TOT      DC    Y(TOTL,0),CL32' ',C'-----'
TOTL     EQU   *-TOT
*
MSGEND2  DC    Y(MSGEND2L,0),C'-*** END OF UTILITY ***'
MSGEND2L EQU   *-MSGEND2
 EJECT
         DCBD  DSORG=(QS),DEVD=(DA)
*
         END   ,             *** END OF FASTMAP5/PRNT ***
