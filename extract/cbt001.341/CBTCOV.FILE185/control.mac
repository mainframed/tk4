CONT     TITLE 'CONTROL (4/9/75) -- COMMENTARY'
*   THIS PROGRAM ACCEPTS INPUT DATA FROM AN EXEC CARD PARM FIELD (THE
* "SOURCE") AND COPIES IT TO A CARD IMAGE DATA SET (THE "SINK"). MOST
* CHARACTERS FROM THE SOURCE ARE COPIED AS IS, BUT SOME CHARACTERS HAVE
* SYNTATICAL MEANING AS FOLLOWS:
         SPACE 1
*        - THE SEMI-COLEN - C';'
*        THIS CHARACTER IS NOT COPIED TO THE SINK BUFFER. INSTEAD, THE
*        CURRENT CARD IMAGE IS WRITTEN OUT TO THE DATA SET, AND A NEW
*        CARD IMAGE IS STARTED.
*
*        - THE COLUMN SKIP CHARACTERS - X'01' - X'3F'
*        NO CHARACTER HAVING A BINARY VALUE LESS THAN DECIMAL 64 IS
*        COPIED TO THE SINK BUFFER. INSTEAD, THE CURRENT SINK SCANNER
*        IS ADVANCED A NUMBER OF SPACES EQUAL TO THE BINARY VALUE OF
*        THE CHARACTER.
*
*        - THE CARD DELETE CHARACTER - X'00'
*        IF A CHARACTER HAVING THE BINARY VALUE OF ZERO IS ENCOUNTERED,
*        THEN AFTER THE CURRENT CARD IMAGE IS COMPLETED IN THE SINK
*        BUFFER, IT IS DISCARDED. IT IS NOT WRITTEN TO THE OUTPUT DATA
*        SET.
*
*        - THE BACK DELETE CHARACTER - X'FB'
*        IF A CHARACTER HAVING THE VALUE X'FB' IS ENCOUNTERED, THEN THE
*        PREVIOUS CHARACTER IN THE SINK BUFFER IS DISCARDED.
*
*        - THE FORWARD DELETE CHARACTER - X'FF'
*        IF A CHARACTER HAVING THE VALUE X'FF' IS ENCOUNTERED, THEN THE
*        NEXT CHARACTER IN THE SOURCE BUFFER IS DISCARDED WITHOUT
*        EXAMINATION.
         SPACE 1
*   IF THE CURRENT CARD IMAGE IS FILLED ALL THE WAY TO COLUMN 80 BUT
* THERE IS STILL MORE INPUT DATA, THEN THE CURRENT CARD IMAGE IS
* WRITTEN TO THE OUTPUT DATA SET (OR DISCARDED IF A CARD DELETE
* CHARACTER HAD BEEN ENCOUNTERED), AND A NEW CARD IS STARTED IN COLUMN
* ONE. NOTE, THE NEW CARD IMAGE IS STARTED IN COLUMN ONE REGUARDLESS OF
* WHETHER OR NOT THE PREVIOUS CARD WAS FILLED BY AN EXCESSIVELY LARGE
* SKIP CHARACTER.
         SPACE 1
*   THIS PROGRAM ACCEPTS EITHER ONE OR TWO INPUT ARGUEMENTS. THE FIRST
* ARGUEMENT MUST EITHER BE OR LOOK LIKE A STANDARD OS PARM FIELD. THERE
* IS NO PROGRAM GENERATED LIMITATION ON THE LENGTH OF THE FIELD. THE
* SECOND ARGUEMENT, IF GIVEN, MUST BE AN EIGHT CHARACTER DDNAME TO BE
* USED WHEN THE PROGRAM REFERENCES THE OUTPUT DATA SET. THE DEFAULT
* DDNAME IS SYSPUNCH.
         SPACE 1
*   THE OUTPUT DATA SET MUST HAVE FIXED LENGTH RECORDS 80 CHARACTERS
* LONG. IT MAY ALSO BE BLOCKED. THE DEFAULT IS UNBLOCKED.
         SPACE 1
*   THIS PROGRAM IS SERIALLY REUSABLE.
         TITLE 'CONTROL (4/9/75) -- MISCELLANIOUS EQUATES'
         $REGS ,                   STANDARD REGISTER EQUATES
         TITLE 'CONTROL (4/9/75) -- MISCELLANIOUS OS DSECTS'
         PRINT NOGEN
         SPACE 3
DCB      DSECT ,
         $DCBD DSORG=QS
         SPACE 3
         PRINT GEN
         TITLE 'CONTROL (4/9/75) -- MAIN PROGRAM'
CONTROL  $ENTER ,                  STANDARD OS ENTRY LINKAGE
         MVI   RCD+1,4             RESET THE RETURN CODE
         LTR   R1,R1               ANY ARGUEMENTS?
         BZ    EXIT                NO, RETURN TO CALLER
         LM    R2,R3,0(R1)         PICK UP THE ARGUEMENTS
         LA    R0,0(,R2)           GET PURIFIED 1ST ARG PTR
         LTR   R0,R0               ANY?
         BZ    EXIT                NO, RETURN TO CALLER
         LH    R4,0(,R2)           GET THE PARM FIELD LENGTH
         LTR   R4,R4               ANY?
         BNP   EXIT                NO, RETURN TO CALLER
         XC    PUNBLKSI,PUNBLKSI   YES, CLEAR THE OUTPUT BLKSIZE
         OI    PUNRECFM,DCBRECBR   SET BLOCKED RECORDS
         MVC   PUNDDNAM,=CL8'SYSPUNCH' GET DEFAULT DDNAME
         LTR   R2,R2               IS THERE A SECOND ARGUEMENT?
         BM    DFLTDDNM            NO, KEEP DEFAULT DDNAME
         LA    R3,0(,R3)           YES, CLEAR HI BYTE
         LTR   R3,R3               IS SECOND ARG NULL?
         BZ    DFLTDDNM            YES, KEEP DEFAULT
         MVC   PUNDDNAM,0(R3)      NO, GET THE DESIRED DDNAME
DFLTDDNM OPEN  (SYSPUNCH,OUTPUT)   OPEN THE CARD DATA SET
         MVI   RCD+1,8             ASSUME THE WORST
         TM    PUNOFLGS,DCBOFOPN   WAS THE OPEN OK?
         BZ    EXIT                NO, GO RETURN TO CALLER
         MVI   RCD+1,0             YES, RESET RETURN CODE
CARDLOOP MVC   CARD,CARD-1         CLEAR THE CARD IMAGE
         LA    R1,CARD             POINT TO THE CARD
SCANLOOP BCTR  R4,0                DECRIMENT PARM REMAINDER
         LTR   R4,R4               ANY LEFT?
         BM    CARDPUN             NO, PUNCH LAST CARD
         LA    R2,1(,R2)           YES, --> NEXT PARM CHARACTER
         CLI   1(R2),C';'          END OF CARD SIGNEL?
         BE    CARDPUN             YES, GO PUNCH CURRENT CARD
         CLI   1(R2),C' '          NO, SKIP CHARACTER?
         BL    COLMSKIP            YES, GO EXPAND
         CLI   1(R2),X'FB'         NO, DELETE PREV CHAR?
         BE    BACKDLTE            YES, GO PROCESS
         CLI   1(R2),X'FF'         NO, DELETE NEXT CHAR?
         BE    FORDDLTE            YES, GO PROCESS
         C     R1,=A(CARD+L'CARD)  NO, ROOM LEFT ON CURRENT CARD?
         BNL   CARDOVFL            NO, GO PNCH CRNT & RESET 4 NEXT
         MVC   0(1,R1),1(R2)       YES, COPY CURRENT CHARACTER
         LA    R1,1(,R1)           ADVANCE SINK SCANNER
         B     SCANLOOP            LOOP FOR NEXT SOURCE
COLMSKIP SR    R0,R0               CLEAR FOR 'IC'
         IC    R0,1(,R2)           GET THE SKIP VALUE
         LTR   R0,R0               CARD SKIP INDICATER?
         BNZ   FIGRSKIP            NO, PROCEED WITH CHARACTER SKIP
         OI    CARDPUN+1,X'F0'     YES, PREVENT CARD PUNCH
FIGRSKIP AR    R1,R0               ADVANCE THE CARD SCANNER
         B     SCANLOOP            LOOP FOR NEXT PARM CHARACTER
BACKDLTE C     R1,=A(CARD)         AT START OF CARD?
         BNH   SCANLOOP            YES, IGNORE
         BCTR  R1,0                NO, BACK UP
         MVI   0(R1),C' '          CLEAR
         B     SCANLOOP            LOOP FOR NEXT SOURCE
FORDDLTE LA    R2,1(,R2)           ADVANCE SOURCE
         BCTR  R4,0                DECRIMENT REMAINDER LEN
         B     SCANLOOP            LOOP FOR NEXT
CARDOVFL BCTR  R2,0                RESET PARM SCANNER
         LA    R4,1(,R4)           RESET REMAINDER COUNT
CARDPUN  BC    *-*,CARDSKIP        TO PUNCH OR NOT TO PUNCH - ETC.
         PUT   SYSPUNCH,CARD       PUNCH THE CARD
CARDSKIP NI    CARDPUN+1,X'0F'     OPEN THE GATE
         LTR   R4,R4               ANY MORE PARM?
         BP    CARDLOOP            YES, KEEP LOOPING
         CLOSE SYSPUNCH            NO, CLOSE THE PUNCH DATA SET
EXIT     LH    R15,RCD             GET THE COMPLETION CODE
         $EXIT ((R14,R12)),RC=(R15) RETURN TO CALLER
         TITLE 'CONTROL (4/9/75) -- DCB OPEN EXIT'
         USING DCB,R1              DECLARE DCB BASE
PUNEXIT  LH    R3,DCBBLKSI         GET THE BLKSIZE
         LH    R4,DCBLRECL         GET THE LRECL
         SR    R2,R2               CLEAR FOR DEVIDE
         DR    R2,R4               GET THE BLOCKING FACTOR
         MR    R2,R4               INSURE PROPER BLKSIZE
         CR    R4,R3               ARE RCDS BLOCKED?
         BL    SETBLKSI            YES, GO STORE BLKSIZE
         BE    CLRBLKED            NO, GO CLEAR BLOCKED FLAG
         LR    R3,R4               NO, SET DEFAULT
CLRBLKED NI    DCBRECFM,255-DCBRECBR CLEAR BLOCKED FLAG
SETBLKSI STH   R3,DCBBLKSI         SET BLKSIZE
         STH   R3,DCBBUFL          SET BUFL
         BR    R14                 RETURN TO OPEN
         DROP  R1                  RELEASE DCB BASE
         TITLE 'CONTROL (4/9/75) -- DATA'
         PRINT NOGEN
         SPACE 3
SYSPUNCH DCB   DSORG=PS,MACRF=PM,RECFM=FB,LRECL=80,BLKSIZE=*-*,BUFNO=1,*
               EXLST=PUNXLIST,EROPT=ACC
         ORG   SYSPUNCH
PUN      $DCBD DSORG=QS
         SPACE 3
         PRINT GEN
         EJECT
PUNXLIST DC    0A(0),X'85',AL3(PUNEXIT)
RCD      DC    Y(0)
         DC    C' '
CARD     DS    CL80
         LTORG
         SPACE 3
         END   ,
