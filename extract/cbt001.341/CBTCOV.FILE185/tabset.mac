TABS     TITLE 'TABSET -- TRANSMIT PHYSICAL TABS TO A TERMINAL'
TABSET   START ,                   PREVENT PRIVATE CODE
         SPACE 3
         $REGS R                   DEFINE REGISTER EQUATES
         EJECT ,
         IKJCPPL ,                 COMMAND PROCESSOR PARAMETER LIST
         EJECT ,
TCTL     DSECT ,                   TERMINAL CONTROL TABLE
TCTLNMLN DS    AL1                 LENGTH OF TERMINAL NAME
TCTLTCLR DS    AL3                 ADDRESS OF CLEAR ALL TABS ROUTINE
TCTLTSET DS    AL3                 ADDRESS OF SET ONE TAB ROUTINE
TCTLHDLN EQU   *-TCTL              LENGTH OF TABLE HEADER
TCTLNAME DS    0C                  TERMINAL NAME
         EJECT ,
         $DSA  ,                   DATA STORAGE AREA
DSALEN   EQU   4095                GET ONE PAGE
DSABUFF  DS    CL(DSALEN-(*-DSA))  NICE BIG BUFFER
         EJECT ,
TABSET   $ENTER SAVTYPE=(RENT,DSALEN) STANDARD REENTRANT ENTRY LINKAGE
         USING DSA,R13             DECLARE DSA BASE
         SPACE 3
         L     R3,CPPLCBUF-CPPL(,R1) POINT TO INVOKING COMMAND BUF
         LH    R5,0(,R3)           GET BUF LENGTH
         AR    R5,R3               POINT PAST END OF BUF
         BCTR  R5,0                POINT TO END OF BUF FOR BXLE/BXH
         LA    R4,1                GET SCAN INCREMENT FOR BXLE
         AH    R3,2(,R3)           --> 1ST OPERAND - 4
         LA    R3,3(,R3)           ADJUST
MIDLBLNK BXH   R3,R4,DONE          SCAN TO NEXT CHARACTER
         CLI   0(R3),C' '          NEXT OPERAND YET?
         BE    MIDLBLNK            NO, CONTINUE
         LR    R1,R3               YES, SAVE ITS START
         SPACE 3
         BCTR  R3,0                BACK OFF THE SCANNER
NAMESCAN BXH   R3,R4,ERROR         SCAN TO NEXT CHARACTER
         OI    0(R3),C' '          UPCASE THIS CHARACTER
         CLI   0(R3),C'('          END OF DEVICE NAME YET?
         BNE   NAMESCAN            NO, KEEP SCANNING
         LR    R2,R3               YES, GET ITS END
         SR    R2,R1               GET ITS LENGTH; NULL?
         BZ    ERROR               YES, ERROR
         BCTR  R2,0                NO, CNVRT TO "MACHINE LENGTH"
         SPACE 3
         SR    R15,R15             CLEAR FOR "IC"'S
         SR    R7,R7               CLEAR
         LA    R14,TABLES-TCTLHDLN-1 INITIALIZE TABLE SCANNER
         USING TCTL,R14            DECLARE TABLE BASE
TCTLSCAN LA    R14,TCTL+TCTLHDLN+1(R15) POINT TO NEXT TABLE ENTRY
         CLI   TCTLNMLN,X'FF'      END OF TABLE?
         BE    TCTLDONE            YES, DONE HERE
         IC    R15,TCTLNMLN        NO, GET THIS ENTRY'S NAME LENGTH
         CR    R2,R15              GIVEN NAME TOO LONG?
         BH    TCTLSCAN            YES, SKIP TO NEXT ENTRY
         CLC   TCTLNAME(*-*),0(R1) (EXECUTED)
         EX    R2,*-6              NO, GIVEN NAME WITHIN THIS NTRY NME?
         BNE   TCTLSCAN            NO, SKIP TO NEXT ENTRY
         LTR   R7,R7               YES, BUT ANOTHER NTRY ALREADY FND?
         BNZ   AMBIGUUS            YES, ERROR
         LR    R7,R14              NO, SAVE THIS ENTRY'S ADDRESS
         B     TCTLSCAN            SCAN FOR AMBIGUITY
         DROP  R14                 RELEASE TABLE ENTRY BASE
TCTLDONE LTR   R7,R7               ANY ENTRY FOUND?
         BZ    NOTFOUND            NO, ERROR
         USING TCTL,R7             YES, DECLARE NEW TCTL BASE
         SPACE 3
         SR    R2,R2               GET CURRENT CARRAGE POSITION
DLMSCAN  BXH   R3,R4,DONE          SCAN TO NEXT CMD CHARACTER
         CLI   0(R3),C' '          DELIMITER?
         BE    DLMSCAN             YES, KEEP SCANNING
         CLI   0(R3),C','          MAYBE, CHECK AGAIN
         BE    DLMSCAN             YES, KEEP SCANNING
         CLI   0(R3),C'-'          MAYBE, CHECK AGAIN
         BE    DLMSCAN             YES, KEEP SCANNING
         CLI   0(R3),C')'          NO, TERMINATOR?
         BE    TRAILCHK            YES, GO CHECK TRAILER
         SPACE 3
         SR    R6,R6               NO, CLEAR DIGIT ACCUMULATOR
DIGTSCAN TM    0(R3),X'F0'         GOT A DIGIT?
         BNO   DIGTDONE            NO, SKIP OUT
         IC    R0,0(,R3)           YES, GET IT
         N     R0,=X'0000000F'     ISSOLATE IT
         MH    R6,=Y(10)           DECIMAL SHIFT THE ACCUMULATOR
         AR    R6,R0               ACCUMULATE THE DIGIT
         BXLE  R3,R4,DIGTSCAN      LOOP FOR NEXT DIGIT
         LA    R3,=C')'            EO CMD; FAKE CLOSE PARENS
         LR    R5,R3               ADJUST FOR BXLE
DIGTDONE LTR   R6,R6               IS VALUE VALID?
         BNP   ERROR               NO, ERROR
         CH    R6,=H'255'          CHECK AGAIN
         BH    ERROR               NO, ERROR
         CLI   0(R3),C' '          YES, VALID DELIMITER?
         BE    VALUECHK            YES, PROCEED
         CLI   0(R3),C','          MAYBE, CHECK AGAIN
         BE    VALUECHK            YES, PROCEED
         CLI   0(R3),C'-'          (FUCKING CLISTS.)
         BE    VALUECHK            (THEY DON'T KNOW ANYTHING.)
         CLI   0(R3),C')'          MAYBE, CHECK AGAIN
         BNE   ERROR               NO, ERROR
VALUECHK LTR   R2,R2               FIRST TAB?
         BNZ   NT1STTAB            NO, PROCEED
         ICM   R1,7,TCTLTCLR       YES, --> TAB CLEARING STRING
         SR    R15,R15             CLEAR FOR INSERT
         IC    R15,0(,R1)          GET CLEARING STRING LENGTH - 1
         MVC   DSABUFF(*-*),1(R1)  (EXECUTED)
         EX    R15,*-6             CLEAR OLD TABS
         LA    R10,DSABUFF+1(R15)  --> NEXT SLOT IN BUFFER
         LA    R9,X'0D'            1ST 'T' IS ACTUALLY "CR"
NT1STTAB SR    R6,R2               DISTANCE TO NEXT STOP
         BM    SEQUENCE            BACKWARDS; ERROR
         BZ    NOBLANKS            SAME PLACE; SKIP BLANK INSERTION
         AR    R2,R6               MOVED; GET NEW CARRAGE POSITION
         MVI   0(R10),*-*          (EXECUTED)
         EX    R9,*-4              INSERT 'T' OR "CR"
         LA    R9,C'T'             GET 'T' FOR NEXT TAB
         LA    R10,1(,R10)         ADVANCE SCANNER
         BCTR  R6,0                DECRIMENT DISTANCE
         LTR   R6,R6               ANY MORE DISTANCE?
         BNP   NOBLANKS            NO, SKIP BLANK INSERTION
BLNKINST MVI   0(R10),C' '         INSERT THE NEXT BLANK
         LA    R10,1(,R10)         ADVANCE SCANNER
         BCT   R6,BLNKINST         LOOP FOR NEXT
NOBLANKS ICM   R1,7,TCTLTSET       --> TAB SETTING STRING
         SR    R15,R15             CLEAR FOR INSERT
         IC    R15,0(,R1)          GET STRING LENGTH - 1
         MVC   0(*-*,R10),1(R1)    (EXECUTED)
         EX    R15,*-6             INSERT THE TAB SETTING STRING
         LA    R10,1(R15,R10)      ADVANCE THE SCANNER
         CLI   0(R3),C')'          END OF OPERAND?
         BNE   DLMSCAN             NO, LOOP FOR NEXT TAB POSITION
         MVC   0(3,R10),=AL1(C'T',X'0D',X'15') APPEND 'T', "CR", "LF"
         LA    R10,3(,R10)         ADVANCE THE SCANNER
         LA    R1,DSABUFF          --> THE STRING
         SR    R10,R1              GET ITS LENGTH
         TPUT  (1),(R10),CONTROL   SET THE TABS
TRAILCHK BXH   R3,R4,DONE          SCAN TO NEXT CHARACTER
         CLI   0(R3),C' '          TRAILER MUST BE BLANK
         BE    MIDLBLNK            IT IS; CONTINUE SCAN
         CLI   0(R3),C','          IT'S NOT; TRY A COMMA
         BE    MIDLBLNK            IT IS; CONTINUE SCAN
         B     ERROR               IT'S NOT; ERROR
         DROP  R7                  RELEASE TCTL BASE
         SPACE 3
DONE     SR    R2,R2               CLEAR RETURN CODE
EXIT     $EXIT ((R14,R12)),RC=(R2) RETURN TO CALLER
         EJECT ,
ERROR    LA    R1,ERRORMSG-1       POINT TO MESSAGE
         B     TPUTERRM
         SPACE 1
AMBIGUUS LA    R1,AMBIGMSG-1       POINT TO MESSAGE
         B     TPUTERM2
         SPACE 1
NOTFOUND LA    R1,NTFNDMSG-1       POINT TO MESSAGE
         B     TPUTERM2
         SPACE 1
SEQUENCE LA    R1,SEQUNMSG-1       POINT TO MESSAGE
         B     TPUTERRM
         SPACE 3
TPUTERRM LA    R11,ERREXIT         GET EXIT ADDRESS
         B     TPUTERR             GO ISSUE ERROR MSG
         SPACE 1
TPUTERM2 LA    R11,EXPLAIN         GET EXIT ADDRESS
         SPACE 1
TPUTERR  SR    R0,R0               CLEAR FOR "IC"
         IC    R0,0(,R1)           GET MESSAGE LENGTH
         TPUT  1(,R1),(0)          ISSUE ERROR MSG
         BR    R11                 EXIT
         SPACE 3
EXPLAIN  SR    R2,R2               CLEAR LENGTH
         LA    R3,TABLES-TCTLHDLN-1 --> NAME TABLES
         USING TCTL,R3             DCL BASE
XPLNLP1  MVI   DSABUFF,C' '        CLEAR
         MVC   DSABUFF+1(79),DSABUFF
         LA    R1,DSABUFF          LOAD MSG BUILDER
         LA    R0,7                LOAD MSG ELEMENT CONTROL
XPLNLP2  LA    R3,TCTL+TCTLHDLN+1(R2) --> NEXT TABLE ENTRY
         ICM   R2,1,TCTLNMLN       GET ITS LENGTH; EOT?
         BM    XPLNDONE            YES, DONE HERE
         MVC   0(*-*,R1),TCTLNAME  (EXECUTED)
         EX    R2,*-6              NO, COPY NAME TO MSG
         LA    R1,10(,R1)          ADVANCE MSG BUILDER
         BCT   R0,XPLNLP2          LOOP FOR NEXT NAME
         LA    R0,70               GET L'MSG
         LA    R1,DSABUFF          --> MSG
         TPUT  (1),(0),R           ISSUE IT
         B     XPLNLP1             LOOP TO BUILD NEXT MSG
         DROP  R3                  RELEASE TABLE BASE
XPLNDONE LR    R0,R1               --> EO-MSG
         LA    R1,DSABUFF          --> SO-MSG
         SR    R0,R1               GET L'MSG, ANY RESIDUE?
         BNP   ERREXIT             NO, SKIP
         TPUT  (1),(0),R           YES, ISSUE LAST BSG
         SPACE 3
ERREXIT  LA    R2,8                GET ERROR RETURN CODE
         B     EXIT                GO TERMINATE
         EJECT ,
TABLES   DS    0X
         SPACE 1
         DC    AL1(4)              CONCEPT 100
         DC    AL3(CC100C)
         DC    AL3(CC100S)
         DC    C'CC100'
         SPACE 1
         DC    AL1(8)              DECWRITERS
         DC    AL3(DECWRITC)
         DC    AL3(DECWRITS)
         DC    C'DECWRITER'
         SPACE 1
         DC    AL1(5)              DIABLO TYPWRITERS
         DC    AL3(DIABLOC)
         DC    AL3(DIABLOS)
         DC    C'DIABLO'
         SPACE 1
         DC    AL1(6)              IBM 3101
         DC    AL3(IBM3101C)
         DC    AL3(IBM3101S)
         DC    C'IBM3101'
         SPACE 1
         DC    AL1(3)              LA36 (DECWRITERS)
         DC    AL3(LA36C)
         DC    AL3(LA36S)
         DC    C'LA36'
         SPACE 1
         DC    AL1(4)              ONTEL CRT'S
         DC    AL3(ONTELC)
         DC    AL3(ONTELS)
         DC    C'ONTEL'
         SPACE 1
         DC    AL1(6)              TELERAYS
         DC    AL3(TELERAYC)
         DC    AL3(TELERAYS)
         DC    C'TELERAY'
         SPACE 1
         DC    AL1(3)              DIGITAL VT100, 80-COLUMN MODE
         DC    AL3(VT80C)
         DC    AL3(VT80S)
         DC    C'VT80'
         SPACE 1
         DC    AL1(4)              DIGITAL VT100, 132-COLUMN MODE
         DC    AL3(VT132C)
         DC    AL3(VT132S)
         DC    C'VT132'
         SPACE 1
         DC    AL1(1)              WU TELETYPES
         DC    AL3(WUC)
         DC    AL3(WUS)
         DC    C'WU'
         SPACE 1
         DC    X'FF'               TERMINATER
         EJECT ,
CC100C   DC    AL1(60)             STRING LENGTH - 1
         DC    X'0D'               CARRAGE-RETURN
         DC    20AL1(X'05',X'27',C'_') 20*(TAB, CLEAR-TAB)
CC100S   DC    AL1(1),X'27',C']'   SET-TAB
         SPACE 1
DECWRITC DC    AL1(1),X'27',C'2'   CLEAR-ALL-TABS
DECWRITS DC    AL1(2),X'27',C'1',X'16' SET-TAB, BACKSPACE
         SPACE 1
DIABLOC  DC    AL1(1),X'27',C'&&'  CLEAR-ALL-TABS
DIABLOS  DC    AL1(1),X'27',C'1'   SET-TAB
         SPACE 1
IBM3101C DC    AL1(60)             STRING LENGTH - 1
         DC    X'0D'               CARRAGE-RETURN
         DC    20AL1(X'05',X'27',C'1') 20*(TAB, CLEAR-TAB)
IBM3101S DC    AL1(1),X'27',C'0'   SET-TAB
         SPACE 1
LA36C    EQU   DECWRITC            ALIAS FOR DECWRITER
LA36S    EQU   DECWRITS            ALIAS FOR DECWRITER
         SPACE 1
ONTELC   DC    AL1(1),X'27',C' '   CLEAR-ALL-TABS
ONTELS   DC    AL1(1),X'27',C'0'   SET-TAB
         SPACE 1
TELERAYC DC    AL1(1),X'27',C'G'   CLEAR-ALL-TABS
TELERAYS DC    AL1(1),X'27',C'F'   SET-TAB
         SPACE 1
VT80C    DC    AL1(10)             STRING LENGTH - 1
         DC    X'27',C'<'          SET ANSI MODE
         DC    X'27',C'[?3l'       SET 80-COLUMN MODE
         DC    X'27',C'[3g'        CLEAR ALL TABS
VT80S    DC    AL1(21),X'27',C'H',20X'07' SET TAB, IDLES
         SPACE 1
VT132C   DC    AL1(10)             STRING LENGTH - 1
         DC    X'27',C'<'          SET ANSI MODE
         DC    X'27',C'[?3h'       SET 132-COLUMN MODE
         DC    X'27',C'[3g'        CLEAR ALL TABS
VT132S   DC    AL1(21),X'27',C'H',20X'07' SET TAB, IDLES
         SPACE 1
WUC      DC    AL1(1),X'27',C'2'   CLEAR-ALL-TAB
WUS      DC    AL1(1),X'27',C'1'   SET-TAB
         EJECT ,
         LTORG ,                   LITTERALS
         SPACE 3
         DC    AL1(L'AMBIGMSG)
AMBIGMSG DC    C'AMBIGUOUS TERMINAL BRAND/TYPE NAME. RECOGNIZED NAMES A*
               RE:'
         SPACE 3
         DC    AL1(L'ERRORMSG)
ERRORMSG DC    C'INVALID ARGUMENT'
         SPACE 3
         DC    AL1(L'NTFNDMSG)
NTFNDMSG DC    C'UNKNOWN TERMINAL BRAND/TYPE NAME. RECOGNIZED NAMES ARE*
               :'
         SPACE 3
         DC    AL1(L'SEQUNMSG)
SEQUNMSG DC    C'TAB LOCATIONS MUST BE GIVEN IN ASCENDING ORDER.'
         SPACE 3
         END   TABSET
