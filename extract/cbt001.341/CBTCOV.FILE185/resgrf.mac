*          DATA SET RUNGRAFR   AT LEVEL 001 AS OF 03/08/74
RUNG     TITLE 'RUNGRAFR - SYSTEM RESOURCE UTILIZATION DISPLAY MODULE'
         ENTRY RUNGRAFR,RUNGRAFP
RUNGRAFR START 0
         PRINT NOGEN
         SPACE 1
***********************************************************************
*                                                                     *
*        A MODULE TO BUILD AND PRINT GRAPHS OF SYSTEM RESOURCE USAGE  *
* LEVELS  FOR  EACH OF THE 8-HOUR SHIFTS OF A DAY.                    *
*                                                                     *
*        THIS MODULE IS CALLED ONCE FOR EACH ACTIVITY (E.G., JOB,     *
* JOB STEP, READER-INTEPRETER FOR A JOB, SYSOUT WRITER FOR A JOB)     *
* TO BE RECORDED, THEN ONCE MORE AT END-OF-JOB TO ACTUALLY PRINT THE  *
* GRAPHS.                                                             *
*                                                                     *
*        LINKAGE IS ACCORDING TO OS/360 CONVENTIONS.  REGISTER 1 MUST *
* POINT TO AN ADCON POINTING TO A PARAMETER LIST;  THE FORMAT OF THE  *
* PARAMETER LIST IS SHOWN NEAR THE END OF THIS MODULE'S PROGRAM       *
* LISTING.  ON THE END-OF-JOB CALL ONLY. THE FIRST BIT OF THIS        *
* PARAMETER LIST MUST BE SET TO 1, AND THE LIST'S ALTERNATE FORMAT    *
* USED;  ON ALL OTHER CALLS, THE FIRST BIT MUST BE ZERO, AND THE      *
* NORMAL FORMAT USED.  ON THE EOJ CALL, PRINT LINES WILL BE PASSED TO *
* EXTERNAL ROUTINE 'GRAFPRT', USING OS CONVENTIONS.                   *
*                                                                     *
*        NOTE THAT, ON ACTIVITY RECORDING CALLS, THREE PARAMETERS     *
* MUST BE PROVIDED IN ADDITION TO THE VALUES TO BE RECORED:           *
* (1) "ADJUSTED" ACTIVITY START TIME-OF-DAY;  (2) "ADJUSTED" ACTIVITY *
* END TIME-OF-DAY;  (3) ACTUAL ACITVITY ELAPSED TIME.  ALL THREE MUST *
* BE EXPRESSED IN HUNDREDTHS OF A SECOND.  "ADJUSTED" TIME-OF-DAY     *
* MEANS THAT, IF THE ACTUAL TIME WAS PRIOR TO THE DAY FOR WHICH GRAPHS*
* ARE BEING PRODUCED, ADJUSTED TIME IS 0, AND IF ACTUAL TIME WAS      *
* LATER THAN THAT DAY, ADJUSTED TIME IS 24*60*60*100.                 *
*                                                                     *
*        THIS MODULE IS SOMEWHAT PARAMETERIZED, TO MINIMIZE THE       *
* EFFORT REQUIRED TO ALTER THE CHOICE OF ITMES TO BE TRACKED.  IN     *
* GENERAL, NOTE THAT TRACKING OF A GIVEN ITEM CAN BE SUPPRESSED ON    *
* A PARTICULAR ENTRY BY PASSING A VALUE OF ZERO FOR THAT ITEM.  FOR   *
* INSTANCE, ONE MIGHT WISH TO TRACK CPU TIME, CORE USAGE, TAPE DRIVE  *
* ALLOCATION, AND I/O ACTIVITY ON INDIVIDUAL JOB STEPS, BUT TRACK     *
* LEVEL OF MULTIPROGRAMMING AND CORE REQUESTED ON JOBS AS A WHOLE     *
* ONE MIGHT TRACK READER-INTERPRETER AND/OR SYSOUT WRITER ACTIVITY    *
* ON THE CORE REQUESTED/USED GRAPHS WITHOUT CREDITING THEM TO THE     *
* MULTIPROGRAMMING FACTOR.                                            *
*                                                                     *
* DATE WRITTEN - MAY, 1972.                                           *
*                                                                     *
***********************************************************************
         EJECT
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
ANNOTATE STM   R14,R12,12(R13)     STORE CALLER'S REGISTERS
         BAL   R12,80(,R15)        BRANCH PAST LOCAL SAVE AREA
         USING *,R13               ESTABLISH R13 AS BASE REGISTER
         DS    18F
         ST    R12,8(,R13)         POINT CALLER'S SAVE AREA TO MINE
         ST    R13,4(,R12)         POINT MY SAVE AREA TO CALLER'S
         LA    R13,0(,R12)         POINT R13 TO MY SAVE AREA
         SPACE 1
         MVC   SAVELIST(8),0(R1)   SAVE PASSED ADDRESS LIST
         L     R1,0(,R1)
         MVC   PARAMS(LPARAMS),0(R1)
         LD    FR0,DW0             LOAD FLOATING-POINT CONSTANTS
         LD    FR2,D5MIN
         CLI   PARAMS,128          CHECK FIRST BYTE OF PARAMTETER LIST
         BNL   LASTTIME              FOR LAST-CALL INDICATOR
         CLC   TSTART,=A(24*60*60*100)
         BH    BADPARM
         CLC   TEND,=A(24*60*60*100)
         BH    BADPARM
FIRSTSW  B     FIRSTIME
         L     R15,TDUR
         LTR   R15,R15             IF ACTIVITY DURATION IS ZERO OR
         BNP   EXIT06                LESS, DISREGARD THIS ACTIVITY
         SR    R14,R14
         D     R14,=F'100'         COMPUTE DURATION IN SECONDS
         MVC   DOUBLEWD(4),TDUR    COMPUTE THE RATIO OF 5 MINUTES TO
         BAL   R5,CVFLOAT            THE TOTAL ACTIVITY'S DURATION
         LDR   FR6,FR2
         DDR   FR6,FR4
         STD   FR6,RATIO
         LA    R10,DITEMS
         USING ITEMS,R10
         LA    R9,USES
         LA    R8,#GRAFS
ALOOP    L     R1,0(,R9)           A-LOOP:  IF THIS QUANTITY REQUIRES
         CLI   EXTEND,C'Y'           EXTENSION BY ACTIVITY DURATION,
         BNE   *+10                  DO SO NOW.  E.G., CONVERT JOB
         MR    R0,R15                SWITCH TO JOB-SECONDS.
         ST    R1,0(R9)
         MVC   DOUBLEWD(4),0(R9)   PUT QUANTITY INTO FLOATING-POINT
         BAL   R5,CVFLOAT            REGISTER 6
         MD    FR4,RATIO           COMPUTE (PRO-RATED) 5 MINUTES' WORTH
         STE   FR4,FOR5MIN           OF RESOURCE UTILIZTION
         LA    R9,4(,R9)
         LA    R10,NEXTITEM
         BCT   R8,ALOOP
         SPACE 1
         L     R9,TSTART           NEXT, DETERMINE WHICH OF TODAY'S
         D     R8,FW5MIN             5-MINUTE INTERVALS WERE SPANNED
         LA    R12,0(,R9)            BY THIS JOB STEP
         MH    R9,FW5MIN+2
         L     R11,TEND
         MH    R12,=AL2(#GRAFS*4)
         A     R12,=A(WORKAREA)
         SPACE 1
BLOOP    A     R9,FW5MIN           B-LOOP: EXECUTED ONCE PER SPANNED
         LA    R10,DITEMS            INTERVAL.  IF STEP ENDED BEFORE
         CR    R11,R9                THE END OF THIS INTERVAL, OR
         BNH   LASTINCR              STARTED AFTER, SCALE DOWN THE
         LTR   R8,R8                 ALLOCATION;  OTHERWISED, APPLY
         BNZ   FIRSTINC              A FULL 5 MINUTES' WORTH
         SPACE 1
ADDIN    LA    R7,#GRAFS           PREPARE TO ADD PRORATED QUANTITIES
         SPACE 1
CLOOP    LE    FR6,FOR5MIN
         AE    FR6,0(R12)
         STE   FR6,0(,R12)
         LA    R12,4(,R12)
         LA    R10,NEXTITEM
         BCT   R7,CLOOP
         B     BLOOP
         SPACE 2
FIRSTINC L     R15,FW5MIN          SET UPPER LIMIT TO INCREMENT SIZE
         SPACE 1
ANYINCR  SR    R15,R8              SUBTRACT LOWER LIMIT, GIVING
         SR    R8,R8                 INCREMENT SIZE IN CENTISECONDS
         ST    R15,DOUBLEWD        COMPUTE THE RATIO OF THIS
         BAL   R5,CVFLOAT            INCREMENT TO A FULL 5 MINUTES
         DER   FR4,FR2
         LA    R7,#GRAFS
         SPACE 1
DLOOP    LER   FR6,FR4             FOR EACH RESOURCE TRACKED, MULTIPLY
         ME    FR6,FOR5MIN           5-MIN ALLOCATION BY THE ABOVE
         STE   FR6,FORLESS           RATIO, GIVING PROPER ALLOCAT'N FOR
         LA    R10,NEXTITEM          THIS LESS-THAN-5-MINUTES INCREMENT
         BCT   R7,DLOOP
         LA    R10,DITEMS+4        THEN PREPARE TO ADD PRORATED QUAN-
         B     ADDIN                 TITIES INTO THE INCREMENT'S ACCUMS
         SPACE 2
LASTINCR LR    R15,R11             FOR THE LAST INCREMENT OF THE STEP,
         SR    R15,R9                COMPUTE END TIME RELATIVE TO THE
         A     R15,FW5MIN            5-MINUTE INTERVAL START;  IF ZERO
         BP    ANYINCR               OR NEGATIVE, STEP HAS BEEN POSTED
         SPACE 1
EXIT06   L     R13,4(,R13)   ***** EXIT *****
        RETURN (14,12)
         SPACE 3
FIRSTIME MVI   FIRSTSW+1,0         FIRST TIME THIS ROUTINE IS CALLED,
         L     R1,=A(WORKAREA)       ADDRESS AN AREA WITH AN
         MVI   0(R1),0                     QUANTITY, FOR EACH 5-MINUTE
         MVC   1(#GRAFS*4-1,R1),0(R1)      INTERVAL IN A DAY.  SAVE THE
         LA    R2,24*12-1                  ADDRESS OF THIS MEMORY, AND
         MVC   #GRAFS*4(#GRAFS*4,R1),0(R1) INITIALIZE ALL THE
         LA    R1,#GRAFS*4(,R1)            ACCUMULATORS TO ZERO.
         BCT   R2,*-10
         L     R2,=X'0E000000'     SET PROGRAM MASK TO PREVENT FLOATING
         SPM   R2                    POINT SIGNIFICANCE EXCEPTIONS
         B     FIRSTSW+4
         EJECT
LASTTIME MVC   TIMEMASK+5(1),TIMEPUNC
         MVC   DKREQ+BASE-ITEMS+2(2),MEMBASE
         MVC   DKUSE+BASE-ITEMS+2(2),MEMBASE
         LH    R5,MEMINCR
         CVD   R5,DOUBLEWD
         MVC   DKREQ+LEVELIND-ITEMS(3),DOUBLEWD+5
         MVC   DKUSE+LEVELIND-ITEMS(3),DOUBLEWD+5
         ST    R5,DOUBLEWD
         BAL   R5,CVFLOAT
         ME    FR4,=E'300'
         STE   FR4,DKREQ+DIVISOR-ITEMS
         STE   FR4,DKUSE+DIVISOR-ITEMS
         LA    R11,8*2             LAST ENTRY - TIME TO PRINT GRAPHS
         L     R12,=A(WORKAREA)
         SPACE 1
SCANSHFT LA    R10,DITEMS          FOR EACH SHIFT, SCAN EACH OF THE
         LA    R9,0                  QUANTITES TRACKED
         LA    R8,#GRAFS
         SPACE 1
SCANITEM LA    R7,12*8             FOR EACH QUANTITY, DETERMINE THE
         LA    R6,0(R9,R12)          TOTAL ALLOCATED TO THE SHIFT, AND
         LER   FR4,FR0               THE MAXIMUM ALLOCATED IN ANY
         LER   FR6,FR0               5-MINUTE INTERVAL
         SPACE 1
SCANINCR LE    FR2,0(,R6)          IN EACH INTERVAL, ADD TO THE SHIFT
         AER   FR6,FR2               TOTAL, CHECK FOR NEW HI-WATER-MARK
         CER   FR4,FR2
         BNL   *+6
         LER   FR4,FR2
         LA    R6,#GRAFS*4(,R6)    ADVANCE TO NEXT 5-MINUTE INTERVAL
         BCT   R7,SCANINCR
         SPACE 1
         STE   FR4,SHMAX(R11)
         STE   FR6,SHMAX+4(R11)    AT END OF SHIFT, STORE MAX & TOTAL
         AE    FR6,DAYSUM
         STE   FR6,DAYSUM
         CE    FR4,DAYMAX
         BNH   *+8
         STE   FR4,DAYMAX
         SPACE 1
         LA    R10,NEXTITEM        ADVANCE NOW TO THE NEXT TRACKED
         LA    R9,4(,R9)             QUANTITY, UNTIL ALL HAVE BEEN
         BCT   R8,SCANITEM           COVERED FOR THIS SHIFT
         SPACE 1
         A     R12,=A(#GRAFS*4*12*8) AFTER COMPLETING ALL QUANTITIES OF
         S     R11,=F'8'             ONE SHIFT, ADVANCE TO THE NEXT
         BNM   SCANSHFT              SHIFT, UNTIL ALL 3 ARE COVERED
         SPACE 1
         LA    R10,DITEMS          NOW, SET UP TO COMPUTE GRAPH SIZE
         LA    R8,#GRAFS             FOR EACH TRACKED QUANTITY
         SPACE 1
SIZELOOP LE    FR6,DAYMAX
         DE    FR6,DIVISOR
         SE    FR6,=E'0.5'
         BP    FIGURE
         STE   FR0,DAYMAX
         B     NEXTSIZE
         SPACE 1
FIGURE   DS    0H
         BAL   R5,DEFLOAT               FOR EACH RESOURCE, THE NUMBER
         LTR   R15,R15               OF GRAPH LEVELS PROVIDED WILL
         BNZ   *+8                   BE THE SMALLEST EVEN NUMBER
         LA    R15,2                 SUFFICIENT FOR THE DAY'S
         TM    DOUBLEWD+3,1          HIGH-WATER-MARK
         BZ    *+8
         LA    R15,1(,R15)
         ST    R15,FOR5MIN
         ST    R15,DOUBLEWD
         BAL   R5,CVFLOAT
         AE    FR4,=E'0.5'
         ME    FR4,DIVISOR
         STE   FR4,FORLESS
         SPACE 1
NEXTSIZE LA    R10,NEXTITEM
         BCT   R8,SIZELOOP
         SPACE 1
         LA    R11,8*2               CHART ONE SHIFT AT A TIME
         L     R12,=A(WORKAREA)
         SPACE 1
SHOWSHFT BAL   R7,NEWPAGE
         LA    R10,CORNER          FOR A SHIFT, FIRST INITIALIZE THE
         LA    R9,9                  TIME-OF-DAY NOTES TO BE PRINTED
         B     HOURSHOW              ALONG THE HORIZONTAL SCALE
         SPACE 1
HOURADD  AP    HOUR,=P'1'
HOURSHOW UNPK  0(2,R10),HOUR
         OI    1(R10),C'0'
         LA    R10,12(,R10)
         BCT   R9,HOURADD
         SPACE 1
         LA    R10,DITEMS          NOW PREPARE TO PRINT ONE 8-HOUR
         LA    R9,0                  GRAPH FOR EACH OF THE TRACKED
         LA    R8,#GRAFS             QUANTITIES
         SPACE 1
SHOWITEM CE    FR0,DAYMAX          SKIP THIS GRAPH IF RESOURCE UNUSED
         BE    ENDITEM
         SPACE 1
         LE    FR4,SHMAX(R11)      CALL SPECIAL PROCESSOR TO DISPLAY
         LE    FR6,SHMAX+4(R11)      SUMMARY DATA FOR THIS RESOURCE
         L     R7,PROCESSR           AND THIS SHIFT
         BALR  R7,R7
         SPACE 1
BACKITEM ZAP   DOUBLEWD,LEVELIND   NOW, PREPARE TO NOTE INCREMENTS
         CVB   R3,DOUBLEWD           ALONG THE GRAPH'S VERTICAL SCALE
         M     R2,FOR5MIN
         A     R3,BASE
         CVD   R3,DOUBLEWD
         L     R2,FOR5MIN          LOAD NUMBER OF GRAPH LEVELS SHOWN
         LE    FR6,FORLESS           AND VALUE OF TOP LEVEL
         SPACE
TWOLINES BAL   R7,PUTCHAR          EMPTY THE PRINT BUFFER
         BAL   R7,QTY              NOTE INCREMENTS ALONG VERTICAL SCALE
FINDLN2  C     R2,=F'2'            ON THE NEXT-TO-LAST GRAPH LINE,
         BNE   *+10                  PRINT THE NAME OF THE GRAPH
         MVC   1(16,R1),TEXT1
         BAL   R7,SCANLINE         NOW, BUILD A GRAPH HORIZONTAL LINE
         BAL   R7,PUTCHAR            AND EMPTY THE BUFFER
         MVC   25(1,R1),VERTICAL   ODD-NUMBERED GRAPH LINES DON'T HAVE
         BCT   R2,*+4                THE VERTICAL SCALE ANNOTATED
         SP    DOUBLEWD+5(3),LEVELIND
         BAL   R7,SCANLINE
         S     R2,=F'1'            PRINT LINE PAIRS UNTIL REMAINDER = 0
         BP    TWOLINES
         SPACE 1
         BAL   R7,PUTCHAR          EMPTY PRINT BUFFER, THEN BUILD THE
         CLC   BASE,=F'0'            HORIZONTAL BORDER OF THE GRAPH
         BE    *+8
         BAL   R7,QTY
         MVC   1(16,R1),TEXT2
         MVC   25(97,R1),DASHES
         BAL   R7,PUTCHAR          EMPTY PRINT BUFFER, THEN PRODUCE
         MVC   1(16,R1),TEXT3        THE HORIZONTAL SCALE NOTATION
         MVC   24(100,R1),CORNER
         MVI   CTLCHAR,X'3C'       TRIPLE-SPACE BETWEEN GRAPHS
         SPACE 1
ENDITEM  LA    R10,NEXTITEM        ADVANCE TO NEXT TRACKED QUANTITY,
         LA    R9,4(,R9)             UNTIL ALL QUANTITIES HAVE BEEN
         BCT   R8,SHOWITEM           ENGRAPHED FOR THIS SHIFT
         SPACE
         A     R12,=A(#GRAFS*4*12*8)  ADVANCE TO NEXT SHIFT, UNTIL ALL
         S     R11,=F'8'                  SHIFTS HAVE BEEN DISPLAYED
         BNM   SHOWSHFT
         SPACE 1
         MVI   DAYSW,1             NOTE THAT WE'RE IN DAY SUMMARIZING
         BAL   R7,NEWPAGE
         BAL   R7,PUTCHAR
         MVC   1(29,R1),=C'SUMMARY OF 24 HOURS'' ACTIVITY'
         MVI   CTLCHAR,X'3C'
         LA    R10,DITEMS
         LA    R8,#GRAFS
         SPACE 1
SUMITEM  LE    FR4,DAYMAX          ON THE LAST PAGE, PRINT A SUMMARY
         LE    FR6,DAYSUM            OF 24 HOURS' ACTIVITY
         L     R7,PROCESSR
         BALR  R7,R7
         BAL   R7,PUTCHAR
         MVC   1(16,R1),TEXT1
         BAL   R7,PUTCHAR
         MVC   1(16,R1),TEXT2
         BAL   R7,PUTCHAR
         MVC   1(16,R1),TEXT3
         MVI   CTLCHAR,X'3C'
         LA    R10,NEXTITEM
         BCT   R8,SUMITEM
         SPACE 1
         BAL   R7,PUTCHAR          FINALLY, PRINT THE LAST LINE
         L     R1,SAVELIST         SET FLAG TO INDICATE THAT NO MORE
         MVI   FLAG-PARAMS(R1),C'N'  PRINTING IS REQUIRED
         B     EXIT06
         SPACE 6
PUTCHAR  NOP   PAST1ST             SIMULATE LOCATE-MODE 'PUT'
         OI    PUTCHAR+1,X'F0'
         B     PASTPUT
         SPACE 1
PAST1ST  L     R1,SAVELIST
         MVI   FLAG-PARAMS(R1),C'Y'  SET FLAG TO REQUEST RETURN TO
         STM   R2,R0,TEMPSAVE          'RUNGRAFP' AFTER PRINTING
         L     R13,4(,R13)           RETURN TO CALLER TO GET THE
        RETURN (14,12)                 JUST-BUILT LINE PRINTED
         USING *,R15
RUNGRAFP STM   R14,R12,12(R13)       ON RETURN FROM CALLER, FIRST
         L     R2,TEMPSAVE+(4*(R13-R2)) RE-ESTABLISH PROPER LINKAGE
         ST    R2,8(,R13)               CONVENTIONS
         ST    R13,4(,R2)
         LM    R2,R0,TEMPSAVE        NEXT, RESTORE THIS MODULE'S
         DROP  R15                     REGISTERS
         MVC   SAVELIST(8),0(R1)     SAVE NEWLY-PASSED ADDRESS LIST
PASTPUT  L     R1,SAVELIST+4       POINT TO NEW PRINT AREA
         MVC   0(8,R1),CTLCHAR
         MVC   8(125,R1),4(R1)
         MVI   CTLCHAR,X'1C'       RESET SPACING TO SINGLE
         BR    R7
         SPACE 3
SCANLINE LA    R6,0(R9,R12)        SCAN THE TABLE TO PRODUCE A SINGLE
         LA    R5,26(,R1)            LINE OF A GRAPH
         SE    FR6,DIVISOR
SETR4    LA    R4,12*8
         LA    R4,12*8
         SPACE 1
ONECHAR  CE    FR6,0(,R6)          PRINT AN ASTERISK FOR EACH INTERVAL
         BNL   *+8                   IN WHICH THE ACCUMULATION EXCEEDED
         MVI   0(R5),C'*'            THE CURRENT THRESHOLD
         LA    R6,#GRAFS*4(,R6)
         LA    R5,1(,R5)
         BCT   R4,ONECHAR
         BR    R7
         SPACE 6
AVG      CLI   DAYSW,0             IF THIS IS A CALL FOR END-OF-DAY
         BE    *+8                   AVERAGING, DIVIDE BY 3 TO AVOID
         DE    FR6,=E'3'             TRIPLED AVERAGES
         BAL   R5,DEFLOAT          CONVERT SUM TO FIXED-POINT
         CLI   DAYSW,0             IF END-OF-DAY CALL, RE-ACQUIRE
         BE    *+8                   THE DAY'S SUM
         LE    FR6,DAYSUM
         L     R15,DOUBLEWD        FOR A RESOURCE FOR WHICH THE AVERAGE
         SR    R14,R14               LEVEL OF UTILIZTION IS TO BE
         TM    SWITCHES,AVGUNITS     COMPUTED, DO SO, AND PUT THE
         BO    SECONDS               RESULT INTO THE "TEXT2" FIELD
         L     R0,=A(4*60*60)
         LA    R5,GENMASK
CALLEDIT LA    R4,TEXT2
         AR    R15,R0
         SLA   R0,1
         DR    R14,R0
         A     R15,BASE
         CVD   R15,DOUBLEWD
         BAL   R6,EDITOR
         TM    SWITCHES,AVGUNITS
         BO    RITECHAR
         MVC   TEXT2+13(1),CHARACTR
         SPACE 1
WHICH2   TM    SWITCHES,TIMESHOW   IF TOTAL TIME IS NOT TO BE
         BZ    SHOMAX                DISPLAYED, SHOW MAXIMUM LEVEL
         TM    SWITCHES,AVGUNITS   IF AVERAGING IS BASED ON SECONDS,
         BO    *+8                   SECONDS, DON'T DIVIDE BY 100
         DE    FR6,=E'100'         CONVERT CENTISECONDS TO SECONDS
         DE    FR6,=E'60'          CONVERT SECONDS TO MINUTES
         BAL   R5,DEFLOAT
         LA    R14,0               CONVERT MINUTES TO HOURS-AND-MINUTES
         D     R14,=F'60'
         CVD   R14,DOUBLEWD
         MVC   LOCAL,DOUBLEWD+5
         CVD   R15,DOUBLEWD
         NI    DOUBLEWD+7,C'0'
         OC    LOCAL(2),DOUBLEWD+6
         ZAP   DOUBLEWD+5(3),LOCAL      DISPLAY TIME, IN HOURS
         LA    R5,TIMEMASK                AND MINUTES
         LA    R4,TEXT3
         BAL   R6,EDITOR
         BR    R7
         SPACE 1
SECONDS  LA    R0,4*6*6            WHERE INDICATED, DO AVERAGING
         LA    R5,JOBMASK            BASED ON SECONDS RATHER THAN ON
         B     CALLEDIT              CENTISECONDS
         SPACE 1
RITECHAR MVC   TEXT2+15(1),CHARACTR
         B     WHICH2
         SPACE 2
SHOMAX   LER   FR6,FR4
         BAL   R5,DEFLOAT
         LA    R15,5*30(,R15)      COMPUTE THE MAXIMUM LEVEL OF
         LA    R14,0                 UTILIZATION SUSTAINED OVER ANY
         D     R14,=A(5*60)          FIVE-MINUTE PERIOD
         A     R15,BASE
         CVD   R15,DOUBLEWD
         MVC   TEXT3+7(7),GENMASK
         ED    TEXT3+7(7),DOUBLEWD+5
         MVC   TEXT3+13(1),CHARACTR
         MVI   TEXT3+8,C'='
         BR    R7
         SPACE 1
IOD      BAL   R5,DEFLOAT
         CVD   R15,DOUBLEWD        FOR I/O DEVICES, DISPLAY EXCP COUNT
         MVC   TEXT2(12),CTMASK      IN THE "TEST2" LINE
         ED    TEXT2(12),DOUBLEWD+3
         BR    R7
         SPACE 3
EDITOR   MVC   7(8,R4),0(R5)       EDIT, INTO THE TEXT LINE TO WHICH
         ED    7(8,R4),DOUBLEWD+5    REGISTER 4 POINTS, THE VALUE IN
         MVI   8(R4),C'='            "DOUBLEWD", USING THE MASK TO
         BR    R6                    WHICH REGISTER 5 POINTS
         SPACE 3
NEWPAGE  ST    R7,HOLDBACK
         MVI   CTLCHAR,C'P'
         BAL   R7,PUTCHAR
         MVC   1(29,R1),RUNDATE    MOVE INTO PAGE HEAD THE COMMENTS
         MVC   41(41,R1),=C'LEVELS OF UTILIZATION OF SYSTEM RESOURCES'
         AP    PAGENO,=P'1'
         MVC   129(4,R1),=X'40202120'
         ED    129(4,R1),PAGENO
         MVC   126(4,R1),=C'PAGE'
         MVI   CTLCHAR,X'3C'       TRIPLE-SPACE TO FIRST GRAPH
         L     R7,HOLDBACK
         BR    R7
         SPACE 3
QTY      TM    SWITCHES,SCALEMSK   EDIT VERTICAL SCALE INDICATION
         BO    USEMASKA              INTO PRINT LINE
         MVC   QUANTITY,MASKB
QTYED    ED    QUANTITY,DOUBLEWD+4
         CLI   CHARACTR,C'%'       FOR A PERCENTAGE ITEM, A LEVEL
         BNE   PASTPCT               INDICATOR INCREMENT OF 16IS
         CLC   QUANTITY+6(3),=C' 32' UNDERSTOOD TO MEAN SIXTEEN AND
         BNE   TEST64                TWO THIRDS
         MVI   QUANTITY+8,C'3'
         B     PASTPCT
TEST64   CLC   QUANTITY+6(3),=C' 64'
         BNE   TEST96
         MVI   QUANTITY+8,C'7'
         B     PASTPCT
TEST96   CLC   QUANTITY+6(3),=C' 96'
         BNE   PASTPCT
         MVC   QUANTITY+6(3),=C'100'
PASTPCT  DS    0H
         SP    DOUBLEWD+4(4),LEVELIND
         MVI   25(R1),C'+'
         CLI   CHARACTR,C' '
         BE    BLNKCHAR
         MVC   15(8,R1),QUANTITY+1
         MVC   23(1,R1),CHARACTR
         BR    R7
         SPACE 1
BLNKCHAR MVC   16(8,R1),QUANTITY+1
         BR    R7
         SPACE 1
USEMASKA MVC   QUANTITY,MASKA
         B     QTYED
         EJECT
DITEMS   DS    0F                         GRAPH PROCESSING PARAMETERS
DJOBS    DC    10A(0),A(AVG,000),E'00300',P'0010',BL1'111',BL2'0'
         DC    C' YMULTIPROGRAMMING  INDEX = 99.99 THRUPUT = 99:99 '
ITMSIZE  EQU   *-DITEMS
DCPUBUSY DC    10A(0),A(AVG,000),E'03000',P'0010',BL1'001',BL2'0'
         DC    C'% CPU BUSY        AVERAGE = 99%    TOTAL = 99:999 '
DKREQ    DC    10A(0),A(AVG,264),E'18600',P'0063',BL1'000',BL2'0'
         DC    C'KYMEMORY ALLOCATEDAVERAGE = 999K  MAXIMUM = 999K  '
DKUSE    DC    10A(0),A(AVG,264),E'18600',P'0063',BL1'000',BL2'0'
         DC    C'KYMEMORY USED     AVERAGE = 999K  MAXIMUM = 999K  '
DTAPEDR  DC    10A(0),A(AVG,000),E'00600',P'0002',BL1'000',BL2'0'
         DC    C' YTAPE DRIVES BUSYAVERAGE =  99   MAXIMUM =  99   '
#GRAFS   EQU   (*-DITEMS)/ITMSIZE
         SPACE 2
DOUBLEWD DC    D'0'
D5MIN    DC    D'30000'
RATIO    DC    D'0'
SAVELIST DS    2F                  HOLDER FOR PASSED ADDRESS LIST
TEMPSAVE DS    15F                 HOLDER FOR REGS 2 THROUGH 0
         SPACE  3
FR0      EQU   0                   FLOATING-POINT REGISTER NAMES
FR2      EQU   2
FR4      EQU   4
FR6      EQU   6
         SPACE 1
DW0      DC    D'0'
FLOAT    DC    AL1(72)
FLWORD   DC    AL4(0),AL3(0)
E5MIN    DC    E'30000'            5 MINUTES, IN 100THS OF A SECOND
         SPACE 1
CVFLOAT  TM    DOUBLEWD,X'80'
         BO    NEGFLOAT
         MVI   FLOAT,64+8
SAMEFLO  MVC   FLWORD,DOUBLEWD
         LD    FR4,FLOAT
         ADR   FR4,FR0             NORMALIZE BY ADDING ZERO
         BR    R5
         SPACE 1
NEGFLOAT ST    R5,DOUBLEWD+4
         L     R5,DOUBLEWD
         LCR   R5,R5
         ST    R5,DOUBLEWD
         L     R5,DOUBLEWD+4
         MVI   FLOAT,128+64+8
         B     SAMEFLO
         SPACE 2
DEFLOAT  AE    FR6,=E'0.5'         ROUNDING TO NEAREST INTEGER,
         STE   R6,DOUBLEWD           CONVERT THE SINGLE-PRECISION VALUE
         L     R15,DOUBLEWD          IN FLOATING-POINT REGISTER 6 INTO
         LA    R15,0(,R15)           A 4-BYTE BINARY NUMBER AT
         IC    R14,DOUBLEWD          "DOUBLEWORD", AND IN REG 15
         N     R14,=F'127'
         S     R14,=F'70'
         BM    LOWCHAR
         BH    HICHAR
RIGHTON  ST    R15,DOUBLEWD
         BR    R5
         SPACE 1
LOWCHAR  LPR   R14,R14
         SLL   R14,2
         SRA   R15,0(R14)
         B     RIGHTON
         SPACE 1
HICHAR   SLL   R14,2
         SLA   R15,0(R14)
         B     RIGHTON
         SPACE 3
         SPACE 1
BADPARM  DS    0H                  ABEND IF BAD PARAMETER PASSED
FW5MIN   DC    A(5*60*100)
HOLDBACK DC    F'0'
LOCAL    DC    PL3'0'
         SPACE 1
CORNER   DC    8C'XX00        ',C'XX00'
DASHES   DC    8C'+-----------',C'+'
GENMASK  DC    X'4020202021204040'
TIMEMASK DC    X'40402021207A2020'
CTMASK   DC    X'402020206B2020206B202120'
LEVLMASK EQU   GENMASK+3
JOBMASK  DC    X'40402021204B2020'
CTLCHAR  DC    CL8'1'
HOUR     DC    PL2'0'
QUANTITY DS    CL9
MASKA    DC    X'402020202021204B20'
MASKB    DC    X'404020202020202120'
DAYSW    DC    X'00'
         SPACE 1
PARAMS   DS    0F             PARAMETERS PASSED BY CALLING PROGRAM
TSTART   DS    F                   ACTIVITY START TIME (ADJUSTED)
TEND     DS    F                      "      END   "
TDUR     DS    F                      "     DURATION
USES     DS    0F                USES TO BE TRACKED & GRAPHED
JOBCT    DS    F                   JOB COUNT (1 OR 0)
CPUBUSY  DS    F                   CPU BUSY TIME (CENTISECONDS)
KREQ     DS    F                   MAIN MEMORY REQUESTED (IN K)
KUSE     DS    F                   MAIN MEMORY USED (IN K)
TAPEDR   DS    F                   TAPE DRIVES ALLOCATED
         ORG   PARAMS      ALTERNATE FORMAT OF PARAMETER LIST:
INDIC    DS    X                   ALTERNATE-FORMAT INDICATOR
RUNDATE  DS    CL29                DATE, OR OTHER CAPTIONS COMMENTS
PAGENO   DS    PL2                 HIGHEST PAGE NUMBER ALREADY USED
MEMBASE  DS    H                   VALUE OF MEMORY GRAPHS' BASELINE
MEMINCR  DS    H                   INCREMENTAL VAL OF MEMRY GRAPH LEVEL
VERTICAL DS    C                   GRAPHIC FOR PRINTING VERTICAL BAR
UNDERLIN DS    C                   GRAPHIC FOR PRINTING UNDERLINES
TIMEPUNC DS    C                   GRAPHIC FOR PUNCTUATING TIME
FLAG     DS    C                   PRINT-CONTROL FLAG
LPARAMS  EQU   *-PARAMS            LENGTH OF FINAL PARAMETER LIST
         LTORG
WORKAREA CSECT
         DS    (#GRAFS*24*12*4)C
         SPACE 2
ITEMS    DSECT ,         ITEM TRACKING CONTROL TABLE
FOR5MIN  DS    F              (SCRATCH)- PER-5-MIN USE OF RESOURCE
FORLESS  DS    F              (SCRATCH)- LESS-THAN-5-MIN USE
SHMAX    DS    6F             (EOJ SCRATCH) - MAX & SUM PER SHIFT
DAYMAX   DS    F              (EOJ) - MAXIMUM 5-MINUTE USAGE
DAYSUM   DS    F              (EOJ) - TOTAL USAGE
PROCESSR DS    A              ADDRESS OF EOJ SHIFT TEXT PROCESSOR
BASE     DS    F              VALUE OF GRAPH BASE LINE
DIVISOR  DS    F              DIVISOR FOR COMPUTING GRAPH LEVEL
LEVELIND DS    PL3            INDICATOR FOR PRINTED VERTICAL SCALE
SWITCHES DS    BL1,BL2        EDIT SELECTION SWITCHES
SCALEMSK  EQU  X'04'            1 = VERTICAL SCALE 99.99, 0 = UNITS
AVGUNITS  EQU  X'02'            1 = AVERAGE IN SECONDS, 0 = CENTISECS
TIMESHOW  EQU  X'01'            1 = SHOW TOTAL TIME, 0 = SHOW MAX LEVEL
CHARACTR DS    C              CHARACTER TO IDENTIFY QUANTITES
EXTEND   DS    C                   EXTENSION?  Y = MULTIPLY BY SEC/5MIN
TEXT1    DS    CL16                GRAPH NAME
TEXT2    DS    CL16                SUPPLEMENTARY GRAPH DATA
TEXT3    DS    CL16                SUPPLEMENTARY GRAPH DATA
NEXTITEM DS    0F
         END
