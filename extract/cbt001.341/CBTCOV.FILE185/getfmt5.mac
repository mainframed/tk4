 TITLE 'GETFMT5:  PL/I CALLABLE RETRIEVAL OF ALL FREESPACE DESCRIPTORS'
*
*        GETFMT5:  PL/I CALLABLE RETRIEVAL OF ALL FREESPACE DESCRIPTORS
*
*        DCL #DESCRIPTORS FIXED BIN INIT(/*ARBITRARY*/);
*        DCL GETFMT5 ENTRY(*);
*        DCL 1 FREESPACE_LIST CTL,
*              2 VOLUME CHAR(6),/*VOLUME FOR WHICH DESIRED*/
*              2 CCHH FIXED BIN(31),/*CCHH OF VTOC ON VOLUME*/
*              2 N FIXED BIN INIT(#DESCRIPTORS),
*              2 DESCRIPTOR(#DESCRIPTORS),
*                  3 TT FIXED BIN UNAL,/*RELATIVE TRACK ADDRESS,
*                      EXTENT BEGINNING*/
*                  3 CYL FIXED BIN UNAL,/*NUMBER OF CYLS IN EXTENT*/
*                  3 TRK BIT(8) ALIGNED;/*NO. OF ADD. TRKS IN EXTENT*/
*        ALLOCATE FREESPACE_LIST;
*        VOLUME='......';
*        CCHH=.....;
*        CALL GETFMT5(FREESPACE_LIST);
*
*        AT RETURN, N IS SET TO NUMBER FOUND.  N IS COMPLEMENTED
*              IF ERROR OCCURED.
*
*        JSA 5/16/78  LAST MOD 5/16/78
*
         PRINT NOGEN
GETFMT51 PLIXSET
GETFMT5  PLIXSENT
         L     R4,0(R1)    GET ARGUMENT ADDRESS
         L     R4,0(R4)    SKIP LOCATOR
         LH    R2,10(R4)    GET N IN R2
         SH    R2,=H'25'   DECREMENT TO A 'SAFE' LIMIT; WE ALWAYS
*                          GET 26 DESCRIPTORS AT A TIME
         LA    R10,12(R4)   R10->DATA PORTION
         MH    R2,=H'5'    COMPUTE...
         AR    R2,R10      ...LIMIT=BASE ADDR+5*COUNT
         MVC   VOL(6),0(R4)    MOVE IN VOLUME
         MVC   CCHH(4),6(R4)   MOVE IN CCHH OF VTOC
         MVI   CCHH+4,X'02'    SET CCHHR TO FIRST FMT5
         SR    R3,R3       R3 USED TO COUNT ENTRIES
LOOP     CR    R10,R2      DO WE HAVE ROOM FOR ANOTHER OBTAIN?
         BNL   OVERFLOW
         OBTAIN    FMT5    GET THE DSCB
         LTR   R15,R15     TEST FOR SUCCESS
         BNZ   OVERFLOW    USE OVERFLOW EXIT FOR ANY ERROR
         LA    R3,26(R3)   COUNT THESE ENTRIES
         MVC   0(40,R10),ANSWER+4
         MVC   40(90,R10),ANSWER+45    MOVE BOTH CRITICAL PORTIONS TO
*                                  ARRAY
         CLI   ANSWER+139,0        IS THERE A FORWARD POINTER?
         BE    ENDING          IF NOT, WE HAVE A NORMAL ENDING
         LA    R10,130(R10)    INCREMENT ARRAY POINTER
         MVC   CCHH(5),ANSWER+135 MOVE FORWARD POINTER
         B     LOOP        ITERATE
OVERFLOW LCR   R3,R3
ENDING   STH   R3,10(R4)
         PLIXEXT
FMT5     CAMLST    SEEK,CCHH,VOL,ANSWER
CCHH     DS    5C
VOL      DS    6C
ANSWER   DS    0D
         DS    140C
         PLIXSSA
         LTORG
         END
