         TITLE 'PL/I ATTENTION HANDLING ENHANCEMENTS'
*
*
         MACRO
         FUNC  &RETURN,&NEWMODE,&BRNCH
.*  THIS MACRO IS USED TO GENERATE "FUNCTION TABLE ENTRIES" (SEE BELOW)
         DC    H'&RETURN'  VALUE TO BE RETURNED
         DC    H'&NEWMODE'  NEW MODE VALUE TO STORE IN CURRMODE
         DC    A(&BRNCH)    PLACE TO BRANCH TO...DETERMINES
*                          WHETHER STAX IS ISSUED OR CANCELLED
         MEND
*
*
         PRINT NOGEN
ATTNSET1 PLIXSET
         SPACE 3
         WXTRN IBMBEATA
         ENTRY ATTNCHK
*
*
ATTNSET  PLIXDENT
*
*
*   PURPOSE....ALLOWS YOU TO SWITCH AMONG FOUR ATTENTION HANDLING
*        MODES...AS FOLLOWS:
*              MODE 0:  ATTENTIONS INTERRUPT EXECUTION, RETURN TO
*                      READY OR WHATEVER
*              MODE 1:  STANDARD PL/I ATTENTION HANDLING VIA "SHOTGUN"
*                      POLLING."  ASSUMES THAT SOME ROUTINES HAVE BEEN
*                      COMPILED WITH THE INTERRUPT OPTION.
*                      OTHERWISE, EQUIVALENT TO MODE 2.
*              MODE 2:  ATTENTION CONDITION CAN BE RAISED BY CALLING
*                      ATTNCHK ONLY.  PL/I POLLING CODE HAS NO EFFECT.
*                      USEFUL WHEN PRECISE CONTROL OVER LOCATION
*                      OF POLLING POINTS IS NEEDED.
*              MODE 3:  ATTENTION CONDITION IS RAISED PREEMPTIVELY WHEN
*                      ATTENTION IS STRUCK.  POLLING CODE NOT NEEDED OR
*                      EFFECTIVE.  IN THIS MODE, NORMAL RETURN
*                      FROM AN ATTENTION ON UNIT WILL
*                      RAISE THE ERROR CONDITION VIA
*                      SIGNAL ERROR.  ON UNITS SHOULD
*                      BE EXITED VIA GO TO.
*   NOTE:  MODE 3 EXPLOITS SVC 242, A LOCAL KLUGE.
*   TO USE ATTNSET, IT IS NOT NECESSARY TO HAVE USED THE
*   INTERRUPT OPTION AT COMPILE TIME.  IF ANY ROUTINES WERE
*   SO COMPILED, MODE 1 WILL BE IN EFFECT AT INITIALIZATION.
*   OTHERWISE, MODE 0 WILL BE IN EFFECT.
*   THE ATTNCHK ENTRY (SEE BELOW) WORKS IN MODES 1 AND 2.
*   THIS ROUTINE IS NOT REENTRANT, SINCE IT PRESERVES INFORMATION ABOUT
*   ITS OWN CALL HISTORY.  THE ASSUMPTION IS THAT IT IS CALLED ONLY
*   BY NON-MULTITASKING PROGRAMS (OR BY THE HIGHEST PL/I TASK).
*   IT SHOULD ALSO BE UNDERSTOOD THAT IF TH PL/I PROGRAM IS
*   INVOKED VIA LINK (RATHER THAN ATTACH), STAXES
*   ISSUED BY US OR PL/I WILL CANCEL OR OVERLAY THOSE IN THE CALLER
*
*
*  SYNTAX...
*        DCL ATTNSET ENTRY(FIXED BIN)RETURNS(FIXED BIN);
*        DCL OLDMODE FIXED BIN, NEWMODE FIXED BIN;
*        OLDMODE=ATTNSET(NEWMODE);
*
*
*        IF NEWMODE IS IN THE RANGE 0-3, A NEW MODE WILL BE
*        ESTABLISHED.  OLDMODE IS RETURNED SO THAT THE OLD MODE
*        MAY LATER BE RESTORED, AIDING MODULARITY.
*        IF NEWMODE IS 4, THE CURRENT MODE IS RETURNED, FOR
*        YOUR INFORMATION BUT NO CHANGE OCCURS.
*        IF NEWMODE IS ANY OTHER VALUE, 4 IS RETURNED AND THERE
*        IS NO OTHER ACTION.
*
*
*   A WORD ABOUT PL/I ATTENTION AND ERROR HANDLING
*
*
* ATTENTION HANDLING IS DONE VIA THE MODULE IBMBEAT1, WHOSE
* ENTRIES ARE IBMBEATA AND IBMBEATB.  ALL SOFTWARE INTERRUPTS
* ARE GENERATED BY CALLING IBMBERRB WITH R1 POINTING TO
* A SPECIAL CONDITION DESCRIPTOR.  ORDINARILY, PL/I CODE CALLS
* IBMBERRB VIA L  15,120(12)
*
*    WHEN ROUTINES ARE COMPILED WITH THE THE INTERRUPT OPTION THEY
*   1. INCLUDE A VCON FOR IBMBEATA AND
*   2. INCLUDE POLLING CODE OF THE FORM
*        L     15,288(12)
*        BALR  14,15
* 288(12) GENERALLY CONTAINS THE ADDRESS OF A PLACE
* IN NORMAL GOTO CODE WHERE THERE IS A BR 14 INSTRUCTION.
*
* THE INITIALIZATION ROUTINES HAVE A WXTRN FOR IBMBEATA.  WHAT
* THEY DO IS, THEY CHECK TO SEE IF IBMBEATA IS THERE, MEANING THE
* INTERRUPT OPTION WAS USED SOMEWHERE.  IN THAT CASE, THEY ISSUE
* STAX SPECIFYING IBMBEATA AS THE EXIT AND IBMBEATB AS USER DATA.
* IBMBEATA (THE NORMAL STAX EXIT) SIMPLY PUTS THE ADDRESS OF IBMBEATB
* AT 288(12).  AT THE NEXT POLL, IBMBEATB (THE ATTENTION RAISER) IS
* ENTERED.  IBMBEATB RESTORES 288(12) AND THEN CALLS IBMBERRB
* IN THE MANNER DEMONSTRATED BELOW (IN "SNEAKY" AND ATTNCHK).
* IN THIS ROUTINE, WE INCLUDE OUR OWN WXTRN FOR IBMBEATA IN ORDER
* TO CHECK WHETHER A PL/I STAX WAS ISSUED.
*
*****JOSH AUERBACH, DECEMBER 5, 1977
*****LAST ALTERATION, DECEMBER 5, 1977
         EJECT
         LM    2,3,0(1)    GET ARGUMENTS
         LH    2,0(2)  GET NEW MODE
         LTR   2,2     CAN'T BE LESS THAN ZERO
         BM    BADARG
         CH    2,=H'4' ...OR GREATER THAN 4
         BH    BADARG
         LH    4,CURRMODE  R4=CURRENT MODE
         CH    4,=H'4' IF CURRENT MODE IS STILL THE INITIAL VALUE (4),
*                      THIS MUST BE THE FIRST CALL TO US.
         BNE   NOPLSTAX    IF IT ISN'T, WE NEED NOT CHECK
*                      FOR THE PRESENCE OF THE PL/I STANDARD
*                      STAX ROUTINE.
*                      IF IT IS....
         L     5,=A(IBMBEATA)  CHECK TO SEE IF PL/I STANDARD...
         LTR   5,5     ...STAX ROUTINE WAS ISSUED.
*                  WE DO THIS BY SEEING IF OUR WXTRN FOR
*                  IBMBEATA HAS BEEN FILLED IN.  SEE EXECUTION
*                  LOGIC MANUAL FOR RATIONALE.
         BZ   NOPLSTAX
         LA    4,5     INDICATE PRESENCE OF PL/I STAX BY SETTING
*                      OLD MODE TO 5
NOPLSTAX MH    4,=H'5'
         AR    4,2     WE NOW HAVE, IN R4, A VALUE BETWEEN 0 AND
*                     29, DEPENDING ON VALUES OF OLD MODE AND NEW MODE.
         SLL   4,3     THIS VALUE WILL BE USED TO LOOKUP IN
*                  FUNCTABL (SEE BELOW).
         LH    5,FUNCTABL(4)    GET RETURN VALUE
         STH   5,0(3)  RETURN IT
         LH    5,FUNCTABL+2(4)    GET NEW CURRMODE
         STH 5,CURRMODE    SAVE IT
         L     5,FUNCTABL+4(4)    GET CONTINUATION ADDRESS
         BR    5       GO THERE
*
*  THE FOLLOWING ARE CONTINUATION POINTS FOR THIS ROUTINE
ISSUE    EQU * ISSUE STAX, POSSIBLY REPLACING PL/I STAX
         ST    12,TCAADDR  STORE TCA ADDRESS JUST IN CASE WE
*                      WILL NEED IT LATER
         STAX  OURSTAX     ISSUE STAX
         B     EXIT1
CANCEL   EQU * CANCEL ANY EXISTING STAX
         STAX
         B     EXIT1
*
BADARG   LA    5,4
         STH   5,0(3)
EXIT1    PLIXEXT
         EJECT
*    HERE'S THAT FUNCTION TABLE WE BEEN TALKIN OF
FUNCTABL DS    0F
*CALLED WHEN:              OLDMODE NEWMODE
         FUNC  0,0,EXIT1   0       0
         FUNC  0,1,ISSUE   0       1
         FUNC  0,2,ISSUE   0       2
         FUNC  0,3,ISSUE   0       3
         FUNC  0,0,EXIT1   0       4
         FUNC  1,0,CANCEL  1       0
         FUNC  1,1,EXIT1   1       1
         FUNC  1,2,EXIT1   1       2
         FUNC  1,3,EXIT1   1       3
         FUNC  1,1,EXIT1   1       4
         FUNC  2,0,CANCEL  2       0
         FUNC  2,1,EXIT1   2       1
         FUNC  2,2,EXIT1   2       2
         FUNC  2,3,EXIT1   2       3
         FUNC  2,2,EXIT1   2       4
         FUNC  3,0,CANCEL  3       0
         FUNC  3,1,EXIT1   3       1
         FUNC  3,2,EXIT1   3       2
         FUNC  3,3,EXIT1   3       3
         FUNC  3,3,EXIT1   3       4
         FUNC  0,0,EXIT1   4       0
         FUNC  0,1,ISSUE   4       1
         FUNC  0,2,ISSUE   4       2
         FUNC  0,3,ISSUE   4       3
         FUNC  0,0,EXIT1   4       4
         FUNC  1,0,CANCEL  5       0
         FUNC  1,5,EXIT1   5       1
         FUNC  1,2,ISSUE   5       2
         FUNC  1,3,ISSUE   5       3
         FUNC  1,5,EXIT1   5       4
         EJECT
*
*
**  STAX ROUTINE
*
OURSTAX  EQU   *
         DROP  11
         USING *,15
         STM   14,1,12(13) SAVE CONTROL REGS
         LH    1,CURRMODE  GET CURRENT MODE
         LTR   1,1 MUST BE POSITIVE
         BNP   ERROR
         CH    1,=H'4' AND LESS THAN FOUR
         BNL   ERROR
         BCTR  1,0
         SLL   1,2     USE TO INDEX BRANCH VECTOR
         L     1,BRNCHVEC(1)
         BR    1
BRNCHVEC DC    A(MODE1WAY)
         DC    A(MODE2WAY)
         DC    A(MODE3WAY)
ERROR    EQU *
*        IF WE END UP HERE, THINGS MUST HE SCREWED UP.  IT WOULD
*        SEEM TO BE LOGICALLY IMPOSSIBLE TO BE IN THIS STAX UNLESS
*        CURRMODE IS 1-3.
         STAX  ,   CANCEL WWHATEVER STAX GOT US HERE
         XC    CURRMODE,CURRMODE   SET CURRMODE TO ZERO
         LM    14,1,12(13)
         BR    14  RETURN TO CALLER, HOPING USER WILL BE
*              ALERT ENOUGH TO HIT ATTENTION AGAIN.
MODE1WAY L     1,=A(IBMBEATA)  GET ADDRESS OF PL/I STAX ROUTINE
         LTR   1,1 IS IT THERE?
         BZ    MODE2WAY    IF NOT, REVERT TO MODE 2
         L     14,12(13)   OTHERWISE, RESTORE REGISTERS....
         LR    15,1    ...CHANGING R15 TO ADDRESS OF PL/I STAX...
         LM    0,1,20(13)
         BR    15  ...AND ABDICATE TO PL/I STAX
MODE2WAY OI    ATTNFLAG,X'10'  SET ATTENTION FLAG
         LM    14,1,12(13)
         BR    14  RETURN TO SYSTEM
MODE3WAY LA    1,SNEAKY
         SVC   242 ARRANGE TO GET CONTROL BACK AT "SNEAKY"
         LM    14,1,12(13)
         BR    14  RETURN CONTROL TO SYSTEM....
SNEAKY   EQU   *   ....ONLY TO GET IT BACK AGAIN
*                  WE ARE NOW HOLDING A VERY HOT POTATO BECAUSE
*                  HAVE NO IDEA WHAT IS IN ANY OF THE REGISTERS
*                  PRESUMEABLY, THE REGISTERS HAVE THE CORRECT
*                  CONTENTS FOR THE INTERRUPTED ROUTINE, WHEREVER
*                  THAT IS.
         BALR  2,0 NOW WE (AT LEAST) KNOW WHATS IN R2
*                  SINCE WE KNOW WHERE WE ARE
         DROP  15
         USING *,2
         LA    1,ATTNARG
         L     12,TCAADDR      GET TCA ADDRESS IN CASE CURRENT
*                      R12 CONTENTS AREN'T VALID TCA
*                      WE WILL TAKE A CHANCE THAT R13 CONTENTS
*                      PERMIT CORRECT ERROR HANDLING.
         L     15,120(12)
         BALR  14,15   RAISE ATTENTION CONDITION
*                  NORMAL RETURN FROM ATTENTION IN MODE
*                  THREE IS DISALLOWED, SINCE WE CANNOT
*                  RELIABLY RESTART THE HALTED ROUTINE
*                  IF WE GET CONTROL BACK HERE, WE MUST
*                  SIGNAL ERROR
         LA    1,ERRARG
         L     15,120(12)
         BALR  14,15
*                  NOW, OF COURSE, CONTROL NEVER RETURNS
*                  NORMALLY AFTER ERROR, BUT JUST IN CASE
         ESTAE 0
         ABEND 99
         EJECT
*
*
ATTNCHK  EQU   *
*
*
*        THIS ENTRY IS USED IN MODE 2 TO POLL FOR AN ATTENTION.
*        IT ALSO WORKS IN MODE 1 AS A POLLING POINT IN ADDITION
*        TO THOSE ESTABLISHED BY PL/I.  THIS ALLOWS US TO ASSURE
*        POLLING POINTS IN NUMBER CRUNCHING SECTIONS.
*
*
*   SYNTAX.....
*        DCL ATTNCHK ENTRY;
*        CALL ATTNCHK;
*
         DROP 2
         USING *,15
         TM    ATTNFLAG,X'10'  TEST FOR MODE 2 ATTENTION FLAG
         BZ    PLIPOLL     IF NOT FOUND, GO TO PL/I STANDARD
*                      POLL
         NI    ATTNFLAG,X'7F'  RESET FLAG
         LA    1,ATTNARG
         L     15,120(12)
         BR    15      RAISE ATTENTION IN "ABDICATE"
*                      STYLE SO THAT OUR CALLER WILL GET
*                      CONTROL BACK IN EVENT OF NORMAL RET.
PLIPOLL  L     15,288(12)  GET USUAL PL/I POLLING ADDRESS
         BR    15      ABDICATE TO IT
*
*
*****CONSTANTS******
         DS    0F
ATTNARG  DC    X'1A200000' IBMBERRB ARGUMENT FOR ATTENTION
ERRARG   DC    X'0C000000' IBMBERRB ARGUMENT FOR SIGNAL ERROR
TCAADDR  DS    1F      STORAGE FOR SAVING TCA ADDRESS
CURRMODE DC    H'4'    CURRENT MODE...STARTS OUT AS 4
ATTNFLAG DC    X'00'  SET IN MODE2WAY, TESTED BY ATTNCHK
         END
