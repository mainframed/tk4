 TITLE 'MODCALL (MODC), CMDCALL (CMDC), TASKCALL (TASKC), CMDTASK (CT)'
*
*        THESE REENTRANT ROUTINES ARE DESIGNED TO BE USED AS TSO
*       COMMANDS TO SIMPLIFY CALLING OF MODULES FROM PRIVATE LIBRARIES.
*        MODCALL DUPLICATES FACILITIES OF THE CALL COMMAND, BUT HAS
*        SOME CONVENIENT FEATURES.  THE OTHERS PROVIDE UNIQUE SERVICES.
*
*        ALLOCATE DA(LIBNAME) FI(LINKLIB)
*        MODCALL MOD1 ARG1 ARG2 .... ARGN
*        MODC MOD2 ARG21 ARG22 .... ARG2N
*              IS EQUIVALENT TO
*        CALL LIBNAME(MOD1) 'ARG1 ARG2 .... ARGN'
*        CALL LIBNAME(MOD2) 'ARG21 ARG22 .... ARG2N'
*
*        IN OTHER WORDS, MODCALL ALLOWS CALL TO BE BY MEMBER NAME FROM
*        A PERMANENTLY ALLOCATED LIBRARY (DDNAME=LINKLIB) INSTEAD OF
*        REQUIRING A DSNAME ON EVERY CALL.  ALSO, MODCALL DOESN'T
*        REQUIRE (OR PERMIT) QUOTES ON ARG LISTS BUT MERELY PASSES THE
*        RESIDUE OF THE COMMAND LINE AS THE ARGUMENT.
*
*        CMDCALL IS LIKE MODCALL EXCEPT THAT THE MODULE GETS CONTROL
*        AS A TSO COMMAND PROCESSOR, IN THE SENSE THAT REG 1 POINTS
*        TO A CPPL INSTEAD OF AN OS PARM STRING.  THE COMMAND BUFFER
*        USED FOR THIS IS SIMPLY THE ORIGINAL COMMAND BUFFER
*        WITH ITS OFFSET ADJUSTED TO ENCOMPASS THE MODULE NAME AS
*        WELL AS THE ORIGINAL VERB.
*
*        TASKCALL AND CMDTASK ARE LIKE MODCALL AND CMDCALL,
*        RESPECTIVELY, EXCEPT THAT A PREALLOCATED TASKLIB
*        (DDNAME=TASKLIB) IS EMPLOYED, AND THE MODULE IS ATTACHED
*        INSTEAD OF CALLED.  THIS IS USEFUL WHEN RUN-TIME MODULES
*        WILL BE DYNAMICALLY LINKED BY THE MODULE AND THE
*        EQUIVALENT OF A STEPLIB COVERAGE IS DESIRED FOR THOSE
*        MODULES.
*
*        REGARDLESS OF WHETHER THE MODULE GETS CONTROL AS A TSO
*        COMMAND PROCESSOR, THE ATTEMPT HERE IS TO MAKE THE
*        ENVIRONMENT IN WHICH THE MODULE EXECUTES CONGENIAL TO
*        COMMAND PROCESSORS OR PSEUDO-COMMAND PROCESSORS.  THUS,
*        THE NAME OF THE MODULE IS ALWAYS PLACED IN THE ECTPCMD
*        FIELD OF THE ECT, TO GIVE CORRECT PROMPTS, AND SUBPOOL
*        78 IS ALWAYS SHARED WITH THE TMP.  LOAD-CALL
*        IS USED INSTEAD OF LINK, AND THE LOADED ROUTINE IS
*        NOT DELETED BY THIS MODULE: THIS ALLOWS THE TMP'S
*        STANDARD TASK TERMINATION DISCIPLINES TO CLEAN UP
*        (CLOSE DATASETS, ETC) WITHOUT IEC999 AND OTHER DETRITUS.
*        FINALLY, WE HAVE NO LOCAL STAE/STAI/ESTAE/ESTAI STRUCTURE:
*        IF THE MODULE ABENDS, CONTROL REVERTS IMMEDIATELY TO THE TMP.
*
*        ERROR RETURN CODES:
*              MODULE NOT FOUND IN LINKLIB DATASET.
*                                  RC=16
*              TASKLIB CAN'T BE OPENED.
*                                  RC=20
*              LINKLIB CAN'T BE OPENED.
*                                  RC=24
*              NO MODULE NAME SUPPLIED BY USER.
*                                  RC=28
*        OTHERWISE, THE RETURN CODES ARE SET BY THE
*        CALLED MODULE.  THERE IS NO PROTECTION HEREIN AGAINST
*        SYNAD TYPE IO ERRORS IN MODULE FETCH, OR OTHER MISCELLANEOUS
*        POSSIBILITIES.
*
*****JOSH AUERBACH
*****MARCH 16, 1978
*****LAST ALTERATION, APRIL 5, 1979--APF SUPPORT TO CIRCUMVENT 306
 TITLE 'SKELETON MAIN ROUTINES: THE GUTS FOLLOW'
         PRINT NOGEN
         YREGS
MODCALL  CSECT ,
         ENTRY MODC,TASKCALL,TASKC,CMDCALL,CMDC,CMDTASK,CT
MODC     EQU   *
         SAVE  (14,12),,*
         LR    R12,R15
         USING MODCALL,R12
         BAL   R14,SETUP
         BAL   R14,MAKEARG
         BAL   R14,CALLIT
         B     CLOSEOUT
TASKC    EQU   *
TASKCALL SAVE  (14,12),,*
         PUSH  USING
         USING TASKCALL,R15
         L     R12,=A(MODCALL)
         POP   USING
         BAL   R14,SETUP
         BAL   R14,MAKEARG
         BAL   R14,ATTACHIT
         B     CLOSEOUT
CMDC     EQU   *
CMDCALL  SAVE  (14,12),,*
         PUSH USING
         USING CMDCALL,R15
         L     R12,=A(MODCALL)
         POP   USING
         BAL   R14,SETUP
         BAL   R14,CALLIT
         B     CLOSEOUT
CT       EQU   *
CMDTASK  SAVE  (14,12),,*
         PUSH  USING
         USING CMDTASK,R15
         L     R12,=A(MODCALL)
         POP   USING
         BAL   R14,SETUP
         BAL   R14,ATTACHIT
         B     CLOSEOUT
 TITLE 'SETUP ROUTINE: GET STORAGE, GET MODULE NAME, OPEN LINKLIB'
*
SETUP    EQU   *
         LR    R3,R1   SAVE ARGUMENT REGISTER
         USING CPPL,R3     WE WILL NEED CPPL CONTENTS IN SOME PLACES
         GETMAIN   R,LV=DSLEN  GET DYNAMIC STORAGE
         ST    R13,4(R1)
         ST    R1,8(R13)
         LA    R13,0(R1)
         USING DS,R13  ESTABLISH DYNAMIC STORAGE AND SAVE AREA CHAIN
         ST    R14,LOCSAV  SAVE R14, FOR RETURN LATER
*
*        INITIALIZE DYNAMIC STORAGE, USING MVCL
*
         LA    R4,DSDATA   R4->DS AREA SUBJECT TO INITIALIZATION
         LA    R6,DSINIT   R6->INITIALIZATION CONSTANTS
         LA    R5,LDSINIT  LENGTH IN R5
         LR    R7,R5       AND R7
         MVCL  R4,R6       PERFORM INITIALIZATION
*
*        GET MODULE NAME FROM COMMAND BUFFER
*
         L     R4,0(R3)    R4->CMD BUFFER
         LH    R5,0(R4)    R5 HAS CMD BUFFER LENGTH
         LH    R6,2(R4)    R6 HAS CMD BUFFER OFFSET
         LA    R7,4(R6,R4) R7->SIGNIFICANT TEXT IN CMD BUFFER
         LA    R8,0(R5,R4) R8->LIMIT OF CMD BUFFER
         SR    R8,R7   R8 HAS LENGTH OF SIGNIFICANT TEXT
         BNP   ERROR1  MUST BE SOME, OTHERWISE NO MODULE NAME GIVEN
         BCTR  R8,0    USE R8 WITH EXECUTE INSTRUCTION
         SR    R1,R1   CLEAR R1 FOR USE WITH TRT
         EX    R8,BLNKSCAN SKIP LEADING BLANKS (EXECUTED TRT)
         BZ    ERROR1  CC MUST NOT BE ZERO; THAT WOULD INDICATE ALL
*                      BLANKS; AGAIN, NO MODULE NAME GIVEN
         SR    R1,R7   FIND NUMBER OF BLANKS SKIPPED
         BZ    NONESKIP
         LA    R7,0(R1,R7) COMPUTE NEW STARTING ADDRESS
         SR    R8,R1   COMPUTE NEW SCAN LENGTH
         BM    ERROR1  SAME ISSUE
         AR    R6,R1   NEW OFFSET FOR CMD BUFFER
NONESKIP EX    R8,NONBLANK COUNT NONBLANKS (EXECUTED TRT)
         BNZ   DELIM               IS MODULE NAME DELIMITED BY
*                                  A BLANK? IF NOT...
         LA    R1,1(R8,R7)         SIMULATE TRT RESULT AS IF IT WERE
DELIM    SR    R1,R7   COUNT IN R1
         BNP   ERROR1  BY NOW THE ISSUE SHOULD BE CLEAR
         AR    R6,R1   KEEP THAT OFFSET UP TO DATE!
         BCTR  R1,0    USE WITH EXECUTE
         EX    R1,MOVEMOD  MOVE MODULE NAME, TRANSLATING TO UPCASE,
*                      VIA EXECUTED OC
         STH   R6,2(R4)    REPLACE OFFSET FIELD IN CMD BUFFER
*
*        NOW WE OPEN LINKLIB
*
         LA    R7,LINKDCB
         OPEN  ((R7)),MF=(E,OPENLST)
         USING IHADCB,R7
         TM    DCBOFLGS,DCBOFOPN
         BZ    ERROR2
         TESTAUTH FCTN=1           ARE WE AUTHORIZED?
         LTR   R15,R15             YES?
         BNZ   NOAUTH              NO, JUST PROCEED
         MODESET KEY=ZERO          YES, FARGLE THE DEB
         L     R15,DCBDEBAD        --> DEB
         OI    DEBFLGS1-DEBBASIC(R15),DEBAPFIN SNEAKY SNEAKY
         MODESET KEY=NZERO
NOAUTH   DS    0H
*
*        BLDL THE MODULE NAME.  THIS PERMITS INTERCEPTION OF
*        806-4 ETC.
*
         BLDL  (7),BLDLIST
         LTR   R15,R15
         BNZ   ERROR4
*
*        PUT MODULE NAME IN ECT AS PRIMARY COMMAND NAME
*
         L     R2,CPPLECT
         USING ECT,R2
         MVC   ECTPCMD,MODNAME
*
*        RETURN TO (LOCAL) CALLER
*        NOTE: CONTENTS OF  (R2-R7) MAY BE NEEDED LATER
*        R2->ECT
*        R3->CPPL
*        R4->COMMAND BUFFER
*        R5=LENGTH CMDBUF
*        R6=OFFSET CMDBUF
*        R7->LINKLIB DCB
*        FOR THE MOMENT, SET R1->CPPL ALSO, FOR POSSIBLE ATTACH
*
         LR    R1,R3
         L     R14,LOCSAV
         BR    R14
*
*        CONSTANTS USED IN THIS ROUTINE (SETUP)
*
BLNKSCAN TRT   0(0,R7),BLNKTABL    EXECUTED
NONBLANK TRT   0(0,R7),NONBTABL    EXECUTED
MOVEMOD  OC    MODNAME(0),0(R7)    EXECUTED
BLNKTABL DC    64X'01',X'00',191X'01'
NONBTABL DC    64X'00',X'01',191X'00'
DSINIT   DS    0D  INITIALIZATION VALUES FOR DYNAMIC STORAGE
         DC   H'0' LENGTH OF SIMULATED PARM STRING
         DC   CL256' '  BLANK PARM STRING
         DC    H'1',H'76'  BUILD LIST HEADER
         DC    CL8' '  BLANK MODULE NAME
         DC    68X'00' REMAINDER OF BUILD LIST
         OPEN  (,INPUT),MF=L   OPEN/CLOSE PARM LIST
         ATTACH    SF=L    ATTACH CONTROL PARM LIST
         DCB   DSORG=PO,MACRF=R,DDNAME=LINKLIB LINKLIB DCB
         DCB   DSORG=PO,MACRF=R,DDNAME=TASKLIB TASKLIB DCB
         DC    4F'0'   I/O PARAMETER LIST
         PUTLINE   MF=L    PUTLINE PARAMETER BLOCK
         DC    2F'0'   ECBS FOR ATTACH AND FOR PUTLINE
LDSINIT  EQU   *-DSINIT
 TITLE 'MAKEARG: CONVERTS TSO CMD BUFFER TO OS PARM STRING'
*
MAKEARG  EQU   *
         ST    R14,LOCSAV
         LA    R8,4(R6,R4) R8->EFFECTIVE PORTION OF CMD BUFFER
         LA    R9,0(R5,R4) R9->LIMIT OF CMD BUFFER
         SR    R9,R8       R9 HAS LENGTH OF EFFECTIVE PORTION
         BNP   NOARG   MAYBE NO ARGUMENTS
         STH   R9,PARMLEN  SET LENGTH OF PARM STRING
         BCTR  R9,0    USE R9 WITH EXECUTE
         EX    R9,MOVEPARM MOVE PARM, USING EXECUTED OC
         B     MAKELIST
NOARG    SR    R9,R9   CLEAR R9 COMPLETELY
         STH   R9,PARMLEN  SET PARM LENGTH TO ZERO
MAKELIST LA    R1,PARMLEN
         ST    R1,ARGLIST  ESTABLISH OS ARGUMENT LIST
         OI    ARGLIST,X'80'   FLAG ITS SINGLE ENTRY ON
         LA    R1,ARGLIST  R1->ARGLIST INSTEAD OF ORIGINAL CPPL
         L     R14,LOCSAV
         BR    R14
*
*        CONSTANTS FOR MAKEARG
*
MOVEPARM OC    PARM(0),0(R8)   EXECUTED
 TITLE 'CALLIT: PERFORMS CALL IN SIMPLE CASE (NO TASKLIB)'
*
CALLIT   EQU   *
         ST    R14,LOCSAV
         LR    R8,R1   SAVE ARGUMENT POINTER
         LOAD  DE=MODNAME,DCB=(R7)  ACQUIRE MODULE
         LR    R15,R0  ENTRY POINT IN R15
         LR    R1,R8   ARGUMENTS IN R1
         BALR  R14,R15 CALL THE MODULE
         LR    R10,R15 SAVE RETURN CODE IN R10
         L     R14,LOCSAV
         BR    R14
 TITLE 'ATTACHIT:  PERFORMS LINKAGE WITH TASKLIB FACILITY'
*
ATTACHIT EQU   *
         ST    R14,LOCSAV
         LA    R6,TASKDCB
         LR    R8,R1   SAVE ARGUMENT POINTER
         OPEN  ((R6)),MF=(E,OPENLST)   OPEN THE TASKLIB DATASET
         DROP  R7
         USING IHADCB,R6
         TM    DCBOFLGS,DCBOFOPN   SUCCESSFUL?
         BZ    ERROR3
         TESTAUTH FCTN=1           ARE WE AUTHORIZED?
         LTR   R15,R15             YES?
         BNZ   NOAUTH1             NO, JUST PROCEED
         MODESET KEY=ZERO          YES, FARGLE THE DEB
         L     R15,DCBDEBAD        --> DEB
         OI    DEBFLGS1-DEBBASIC(R15),DEBAPFIN SNEAKY SNEAKY
         MODESET KEY=NZERO
NOAUTH1   DS    0H
         LR    R1,R8   RESTORE ARGUMENT REGISTER
         LA    R8,MODNAME  R8->DIRECTORY ENTRY
         LA    R9,ATTCHECB R9->ECB FOR ATTACH
         ATTACH    DE=(R8),ECB=(R9),DCB=(R7),TASKLIB=(R6),SHSPV=78,    X
               SF=(E,ATTCHLST)
*                      ATTACH THE MODULE
         ST    R1,TCBADDR  SAVE TCB ADDRESS
         WAIT  1,ECB=ATTCHECB  WAIT FOR COMPLETION
         L     R10,ATTCHECB    GET RETURN CODE
         LA    R10,0(R10)  CLEAR HIGH BYTE
         DETACH    TCBADDR DETACH THE MODULE
         CLOSE ((R6)),MF=(E,OPENLST)   CLOSE THE TASKLIB
         L     R14,LOCSAV
         BR    R14 RETURN TO LOCAL CALLER
 TITLE 'CLOSEOUT:  ERROR EXITS AND WHATNOT, FINAL PROCESSING'
*
ERROR4   EQU   *   MODULE NOT FOUND IN LINKLIB BY BLDL.  INFORM
*                  USER AND SPARE HIM THE 806-4.
         LA   R6,ERR4MSG     GET ERROR TEXT
         LA    R10,16    GET RETURN CODE
         B    ERREXIT
ERROR3   EQU   *   TASKLIB COULDN'T BE OPENED.
         LA    R10,20  USE RETURN CODE 20 TO INDICATE THIS
         LA   R6,ERR3MSG     GET ERROR TEXT
         B     ERREXIT
ERROR2   EQU   *   LINKLIB COULDN'T BE OPENED.
         LA    R10,24  USE RETURN CODE 24 TO INDICATE THIS
         LA   R6,ERR2MSG     GET ERROR TEXT
         B    ERREXIT
ERROR1   EQU   *   NO MODULE NAME SUPPLIED.  WE MUST ISSUE DIAGNOSTIC
         LA    R10,28  RC=28
         LA   R6,ERR1MSG
*
ERREXIT  EQU  *
*        NOTE: R3->CPPL
         L     R4,CPPLUPT
         L     R2,CPPLECT
         PUTLINE   PARM=PLIST,OUTPUT=((R6),,,DATA),                    X
               UPT=(4),ECT=(2),ECB=PUTLECB,MF=(E,IOPL)
CLOSEOUT EQU   *   STANDARD EXIT.
         DROP      R6
         USING     IHADCB,R7
         TM        DCBOFLGS,DCBOFOPN
         BZ        FASTCLOS
         CLOSE ((R7)),MF=(E,OPENLST)
FASTCLOS LR    R1,R13  RESTORE ....
         L     R13,4(R13)  SAVE AREA
         FREEMAIN  R,LV=DSLEN,A=(R1)   FREE DYNAMIC STORAGE
         LR    R15,R10 SET RETURN CODE REGISTER,
         L     R14,12(R13) RETURN REGISTER,
         LM    R2,R12,28(R13)  ...OTHER REGISTERS
         BR    R14     AND RETURN TO CALLER
*
ERR1MSG  DC   Y(4+L'MSG1)
         DC    H'0'
MSG1     DC    C'NO MODULE NAME SUPPLIED'
ERR2MSG  DC   Y(4+L'MSG2)
         DC   H'0'
MSG2    DC  C'LINKLIB FILE COULDN''T BE OPENED, PROBABLY NOT ALLOCATED'
ERR3MSG  DC   Y(4+L'MSG3)
         DC   H'0'
MSG3    DC  C'TASKLIB FILE COULDN''T BE OPENED, PROBABLY NOT ALLOCATED'
ERR4MSG  DC   Y(4+L'MSG4)
         DC   H'0'
MSG4     DC    C'MODULE NOT FOUND IN LINKLIB DATASET'
         LTORG
         DCBD  DSORG=PO,DEVD=DA
         IKJCPPL
         IKJECT
         IEZDEB
 TITLE 'DYNAMIC STORAGE MAP: DSECT DS, ADDRESSED OFF R13'
*
DS       DSECT
         DS    18F STANDARD SAVE AREA
LOCSAV   DS    1F  LOCAL SAVE AREA FOR R14, NESTED ROUTINES
ARGLIST  DS    1A  OS ARGUMENT LIST
TCBADDR  DS    1A  STORAGE FOR TCB ADDRESS, ATTACHED TASK
DSDATA   DS   0D   BEGINS AREA OF DS WHICH IS SUBJECT TO
*                      INITIALIZATION.  FOR INITIALIZATION VALUES, SEE
*                      CONSTANTS IN SETUP SECTION
PARMLEN  DS   1H   HALFWORD LENGTH FOR SIMULATE OS PARM STRING
PARM     DS   256C STORAGE FOR OS PARM STRING
BLDLIST  DS    2H  BUILD LIST OF ONE ELEMENT
MODNAME  DC    CL8' '  MODULE NAME
         DS    68X REMAINDER OF BUILD LIST
OPENLST  OPEN  (,INPUT),MF=L   OPEN/CLOSE PARAMETER LIST
ATTCHLST ATTACH    SF=L    ATTACH CONTROL PARAMETER LIST
LINKDCB  DCB   DSORG=PO,MACRF=R,DDNAME=LINKLIB
TASKDCB  DCB   DSORG=PS,MACRF=R,DDNAME=TASKLIB
IOPL     DS    4F  I/O PARAMETER LIST FOR PUTLINE
PLIST    PUTLINE   MF=L    PUTLINE PARAMETER BLOCK
ATTCHECB DS    1F  ECB FOR ATTACH
PUTLECB  DS    1F  ECB FOR PUTLINE
DSLEN    EQU   *-DS    LENGTH OF DYNAMIC STORAGE
         END
