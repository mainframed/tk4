*****************************************************************
*                                                               *
* MODULE NAME = HALFMT                                          *
*                                                               *
* DESCRIPTIVE NAME = FORMAT PROGRAM WRITTEN IN HAL              *
*                                                               *
* COPYRIGHT = NONE                                              *
*                                                               *
* STATUS = VERSION 1 LEVEL 1                                    *
*                                                               *
* LINKAGE = STANDARD OS PROGRAM LINKAGE                         *
*                                                               *
* INPUT = DDNAME SYSIN HAS ASSEMBLER PROGRAM                    *
*                                                               *
* OUTPUT = SYSPRINT LISTING OF PROGRAM WITH INDENTATION         *
*                                                               *
* NOTES =                                                       *
*                                                               *
*        THE PURPOSE OF THIS PROGRAM IS TO FURTHER DOCUMENT     *
*        HAL AND PROVIDE EXAMPLES OF ITS USE AS WELL AS         *
*        PROVIDE A USEFUL SERVICE.                              *
*                                                               *
* CHANGES = ADD "ELSEIF", SPF SOURCE NUMBERING                  *
*****************************************************************
         TITLE 'HALFMT - INCLUDE HAL MACROS'
         COPY  HAL
         TITLE 'HALFMT - INITIALIZATION AND EQUATES'
HALFMT   CSECT
         SAVE  (14,12),,*
         BALR  RBASE,0
         USING *,RBASE
         LR    R15,R13
         LA    R13,SAVEAREA
         ST    R15,4(R13)
         ST    R13,8(R15)
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
RSTCK    EQU   R9                 STACK REGISTER
RIND     EQU   R10                INDENTATION COUNT
RRETC    EQU   R11                RETURN CODE
RBASE    EQU   R12                BASE REGISTER
         SPACE 5
*        ********************************************************
*        *     PROCESS OS PARM FIELD*
*        ********************************************************
         L     R1,0(R1)
         LH    R2,0(R1)
         LA    R1,2(R1)
         IF    (R2,EQ,3),AND,(SPF,EQ,0(R1),CLC),THEN
         OI    FLGS,SPFFLG
         BEND  ,
         TITLE 'HALFMT - PROCESS DATASETS'
OPENPR   BLOCK EPILOG=YES
*        ********************************************************
*        * THIS BLOCK OPENS THE SYSPRINT DATASET. WITHIN        *
*        * THE BODY OF THIS BLOCK MESSAGES MAY BE WRITTEN ON    *
*        * SYSPRINT. THE EPILOG FOR THE BLOCK CLOSES THE        *
*        * FILE. BEFORE LEAVING THIS BLOCK, PUT A RETURN        *
*        * CODE IN REGISTER 11                                  *
*        ********************************************************
         SR    R11,R11
         OPEN  (SYSPR,(OUTPUT))
         IF    (SYSPR+DCBOFLGS-IHADCB,OFF,DCBOFOPN),THEN
         LA    R11,12             SYSPRINT NOT OPENED
         LEAVE OPENPR
         BEND
OPENIN   BLOCK EPILOG=YES
*        ********************************************************
*        * THIS BLOCK OPENS DDNAME SYSIN. WITHIN THIS           *
*        * BLOCK CARDS MAY BE READ. THE EPILOG FOR THIS         *
*        * BLOCK CLOSES THE FILE. NOTE THAT THERE IS A          *
*        * NO-STANDARD TRANSFER OF CONTROL IN THIS BLOCK        *
*        * FROM THE 'GET' TO THE LABEL 'SYSINEOD' AT END        *
*        * OF FILE.                                             *
*        ********************************************************
         OPEN  (SYSIN,(INPUT))
         IF    (SYSIN+DCBOFLGS-IHADCB,OFF,DCBOFOPN),THEN
         MVC   LINE,BLANKS
         MVC   LINE(L'MSG1),MSG1
         PUT   SYSPR,LINE
         LA    R11,8
         BEND
*        ********************************************************
*        * INITIALLY, THERE IS NO INDENTATION AND THE BLOCK     *
*        * STACK IS EMPTY                                       *
*        ********************************************************
         SR    RIND,RIND
         LA    RSTCK,STACK
         MVC   LINE,BLANKS
CARDSCAN DO    UNTIL,(OP,EQ,OPENDER,CLC)
         GET   SYSIN,CARD
OPSCAN   BLOCK
         IF    (CARD,EQ,C'*',CLI),THEN
*        ********************************************************
*        * COMMENT CARDS MAY HAVE A MACRO NAME IN COLUMNS       *
*        * 10-15 BUT THEY ARE NOT REALLY HAL CALLS              *
*        ********************************************************
         BAL   R14,PRINT
         LEAVE OPSCAN
         BEND
         IF    (OP,EQ,OPDO,CLC),OR,                                    X
               (OP,EQ,OPBLOCK,CLC),THEN
*        ********************************************************
*        * 'DO' OR 'BLOCK' BEGIN A BLOCK. THEY MUST             *
*        * INDENTED AND THE CURRENT BLOCK STACK MUST            *
*        * BE PUSHED DOWN.                                      *
*        ********************************************************
         A     RIND,INDENT
         SR    R1,R1
         BAL   R14,PUSH
         BAL   R14,PRINT
         LEAVE OPSCAN
         BEND
         IF    (OP,EQ,OPIF,CLC),THEN
*        ********************************************************
*        * IF BEGINS A BLOCK, BUT WE MUST MAKE                  *
*        * PROVISION FOR SPECIAL FORMATTING SO THE              *
*        * STATEMENTS ARE INDENTED BOTH BEFORE THE              *
*        * IF AND BEFORE THE FIRST STATEMENT OF THE             *
*        * THEN CLAUSE                                          *
*        ********************************************************
         A     RIND,INDENT
         L     R1,INDENT
         BAL   R14,PUSH
         BAL   R14,PRINT
         A     RIND,INDENT
         LEAVE OPSCAN
         BEND
         IF    (OP,EQ,OPELSE,CLC),OR,(OP,EQ,OPELIF,CLC),THEN
*        ********************************************************
*        * ELSE DOES NOT BEGIN A BLOCK. IT MUST BE UNDENTED     *
*        * FOR THIS LINE ONLY.                                  *
*        ********************************************************
         S     RIND,INDENT
         BAL   R14,PRINT
         A     RIND,INDENT
         LEAVE OPSCAN
         BEND
ISBEND   IF    (OP,EQ,OPBEND,CLC),THEN
*        ********************************************************
*        * THE BEND STATEMENT ENDS A BLOCK. NORMALLY            *
*        * THE BEND STATEMENT IS PRINTED WITH THE               *
*        * SAME INDENTATION AS THE PREVIOUS STATEMENT           *
*        * AND THEN THE NEXT STATEMENT IS UNDENTED.             *
*        * HOWEVER, WHEN ENDING AN 'IF' BLOCK THE               *
*        * BEND IS UNDENTED BOTH BEFORE AND AFTER.              *
*        ********************************************************
         IF    (RIND,LE,0),THEN
*        ********************************************************
*        * A STACK UNDERFLOW HAS OCCURRED. MORE 'BEND'          *
*        * STATEMENTS WERE ENCOUNTERED THAN BLOCKS WERE         *
*        * STARTED. SEND HIM A MESSAGE AND SKIP THIS            *
*        * CARD                                                 *
*        ********************************************************
         BAL   R14,PRINT
         MVC   LINE,BLANKS
         MVC   LINE(L'MSG2),MSG2
         PUT   SYSPR,LINE
         LA    RRETC,8
         LEAVE OPSCAN
         BEND
         S     RSTCK,WORD
         S     RIND,0(RSTCK)
         BAL   R14,PRINT
         S     RIND,INDENT
         LEAVE OPSCAN
         BEND  ISBEND
         IF    (OP,EQ,OPTITLE,CLC),THEN
*        ********************************************************
*        * ALTHOUGH TITLE STATEMENTS ARE NOT                    *
*        * REALLY PART OF HAL, IT MAKES THE LISTING             *
*        * BETTER LOOKING IF THEY ARE RECOGNIZED                *
*        ********************************************************
         MVI   LINE,C'1'
         BAL   R14,PRINT
         MVI   LINE,C' '
         LEAVE OPSCAN
         BEND
*        ********************************************************
*        * THE ONLY THING THAT IS LEFT IS A REGULAR CARD        *
*        * SO PRINT IT                                          *
*        ********************************************************
         BAL   R14,PRINT
         BEND  OPSCAN
         BEND  CARDSCAN
*        ********************************************************
*        * WE ARE AT THE END, SEE IF THINGS ARE SET UP          *
*        * CORRECTLY                                            *
*        ********************************************************
SYSINEOD IF    (RIND,NE,0),THEN
         MVC   LINE,BLANKS
         MVC   LINE(L'MSG3),MSG3
         PUT   SYSPR,LINE
         LA    RRETC,8
         BEND   SYSINEOD
         EPILOG OPENIN
*        ********************************************************
*        * CLOSE SYSIN                                          *
*        ********************************************************
         IF    (SYSIN+DCBOFLGS-IHADCB,ON,DCBOFOPN),THEN
         CLOSE (SYSIN)
         BEND
         BEND  OPENIN
         EPILOG OPENPR
*        ********************************************************
*        * CLOSE SYSPRINT                                       *
*        ********************************************************
         IF    (SYSPR+DCBOFLGS-IHADCB,ON,DCBOFOPN),THEN
         CLOSE (SYSPR)
         BEND
         BEND  OPENPR
         L     R13,4(R13)
         LR    R15,RRETC
         RETURN (14,12),RC=(15)
         TITLE 'HALFMT - INTERNAL ROUTINES'
PUSH     BLOCK
*        ********************************************************
*        * ROUTINE 'PUSH' IS CALLED WHEN A NEW BLOCK IS         *
*        * STARTED. IT ADDS A ZERO TO THE STACK FOR             *
*        * 'DO' AND 'BLOCK' BLOCKS WHICH REQUIRE ONLY           *
*        * SIMPLE INDENTATION, AND NON-ZERO INDENTATION         *
*        * VALUE FOR 'IF' BLOCKS.                               *
*        * STACK OVERFLOW IS CHECKED HERE. THE STACK IS POPPED  *
*        * IN THE 'BEND' CODE ABOVE                             *
*        ********************************************************
         LR    R5,R14
         IF    (RSTCK,EQ,STACKEND),THEN
         MVC   LINE,BLANKS
         MVC   LINE(L'MSG4),MSG4
         BAL   R14,PRINT
         LA    RRETC,8
         ELSE
         ST    R1,0(RSTCK)
         A     RSTCK,WORD
         BEND
         BR    R5
         BEND  PUSH
PRINT    BLOCK
*        ********************************************************
*        * PRINT THE CURRENT CARD ON THE OUTPUT DATASET.        *
*        * VARIOUS FIELDS ARE MOVED AROUND AND THE CURRENT      *
*        * LEVEL OF INDENTATION IS REFLECTED IN THE OUTPUT      *
*        ********************************************************
         LR    R4,R14
         MVC   LINE+1(132),BLANKS
         IF    (FLGS,ON,SPFFLG),THEN
         MVC   LINENUM,SEQN
         ELSE  ,
         MVC   LINENUM,SEQN+2
         BEND  ,
         MVC   LINENAME,CARDNAME
         LA    R2,LINETEXT
         LA    R2,0(R2,RIND)      LINE INDENTATION
         LA    R3,LINEEND
         SR    R3,R2              CALCULATE CHARS TO MOVE
         IF    (R3,GT,61),THEN       CANT MOVE MORE THAN
         LA    R3,61                 THE WHOLE CARD
         BEND
         IF    (R3,GT,0),THEN     INDENTED WHOLE CARD AWAY
         EX    R3,TEXTMOVE
         BEND
         IF    (LINENAME,EQ,STARS,CLC),AND,                            X
               (RIND,NE,0),THEN
         EX    RIND,STARMOVE      CONTINUE ASTERISK LINE
         BEND
         PUT   SYSPR,LINE
         BR    R4
         BEND  PRINT
TEXTMOVE MVC   0(*-*,R2),OP
STARMOVE MVC   LINENAME+8(*-*),LINENAME+7
         TITLE 'HALFMT - CONSTANTS AND DATA AREAS'
SAVEAREA DS    18A
CARD     DS    0CL80
CARDNAME DS    CL9
OP       DS    CL6
STMT     DS    0CL57
STMTTEXT DS    CL56
CONTINUE DS    C
SEQN     DS    CL8
LINE     DS    0CL133
CC       DS    C
LINENUM  DS    CL6
         DS    C
LINENAME DS    CL9
LINETEXT DS    CL116
LINEEND  DS    C
FLGS     DC    X'00'
SPFFLG   EQU   X'80'
BLANKS   DC    CL133' '
STARS    DC    CL9'*********'
STACK    DS    40A
STACKEND DC    A(*)
INDENT   DC    F'3'
WORD     DC    F'4'
OPDO     DC    CL6'DO'
OPBLOCK  DC    CL6'BLOCK'
OPIF     DC    CL6'IF'
OPELSE   DC    CL6'ELSE'
OPELIF   DC    CL6'ELSEIF'
OPBEND   DC    CL6'BEND'
OPTITLE  DC    CL6'TITLE'
OPENDER  DC    CL6'END'
SPF      DC    C'SPF'
MSG1     DC    C' ******UNABLE TO OPEN ''SYSIN'' DDNAME'
MSG2     DC    C' ******MORE ''BEND'' STATEMENTS THAN OPEN BLOCKS'
MSG3     DC    C' ******THERE ARE STILL UNTERMINATED BLOCKS'
MSG4     DC    C' ******BLOCKS ARE NESTED TOO DEEPLY FOR THIS PROGRAM'
         PRINT NOGEN
SYSIN    DCB   DDNAME=SYSIN,DSORG=PS,MACRF=(GM),EODAD=SYSINEOD
SYSPR    DCB   DDNAME=SYSPRINT,DSORG=PS,MACRF=(PM),                    X
               RECFM=FBA,LRECL=133,BLKSIZE=6650
         DCBD
         END   HALFMT
