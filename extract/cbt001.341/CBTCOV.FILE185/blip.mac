         TITLE 'BLIP - TSO COMMAND'
***************************************************************
*                                                             *
*  PROCEDURE:      BLIP                                       *
*                                                             *
*  FUNCTION:       TSO COMMAND                                *
*                                                             *
*  VERSION:        AUG 1978                                   *
*                                                             *
*  AUTHOR:         AL KARENKO                                 *
*                                                             *
*  PURPOSE:        BLIP WILL PROVIDE A TSO USER A MEASURE     *
*                  OF CPU CONSUMED BY A FOREGROUND PROGRAM    *
*                  WHILE IT IS EXECUTING.                     *
*                                                             *
*  SYNTAX:                                                    *
*      BLIP ON/OFF TIME(INTERVAL) CHAR(BELL/SPACE/STAR)       *
*                                                             *
*  DEFAULTS:                                                  *
*      BLIP ON TIME(10) CHAR(BELL)                            *
*                                                             *
*  ALIAS:                                                     *
*      ON:     YES                                            *
*      OFF:    NO                                             *
*      TIME:   TI,T                                           *
*      CHAR:   CH,C                                           *
*      BELL:   BEL,RING                                       *
*      SPACE:  SP,BLANK,BL                                    *
*      STAR:   ST                                             *
*                                                             *
*  DESCRIPTION:                                               *
*      BLIP USES THE IEFUTL SMF EXIT TO OUTPUT A BLIP         *
*      CHARACTER TO THE TSO USER.  THIS ROUTINE WILL          *
*      PARSE VALID PARAMETERS;  WHEN A BLIP ON REQUEST        *
*      IS INDICATED, THE TIME AND CHARACTER VALUES WILL       *
*      BE WRITTEN IN THE RESPECTIVE XASCCPUB AND              *
*      XASCBLPC FIELDS OF THE XASCB, THE ELAPSED JOB STEP     *
*      TIME (ASCBEJST) IS INCREMENTED BY THE BLIP INTERVAL    *
*      AND STORED IN THE JOB STEP TIME LIMIT (ASCBJSTL)       *
*      TO CAUSE AN INITIAL IEFUTL SMF EXIT AFTER THE BLIP     *
*      INTERVAL AMOUNT OF TIME.  IF BLIP OFF IS REQUESTED,    *
*      THE JOB STEP TIME LIMIT IS SET TO 1440 MINUTES AND     *
*      THE XASCCPUB AND XASCBLPDC FIELDS ARE RESET TO ZERO.   *
*                                                             *
***************************************************************
         EJECT
         PRINT NOGEN
BLIP     CSECT
         SAVE  (14,12),,*
         BALR  R12,0              R12 IS BASE REG
         USING *,R12
         ST    R13,BLIPSAVE+4     SAVE OLD SAVE AREA PTR
         LA    R13,BLIPSAVE       -> NEW SAVE AREA
         ST    R13,BLIPSAVE+8     SAVE NEW SAVE AREA PTR
         LR    R11,R1             -> CPPL
         USING CPPL,R11
         LA    R1,BLIPPPL         -> PPL
         USING PPL,R1
         MVC   PPLUPT,CPPLUPT     ***************
         MVC   PPLECT,CPPLECT     *
         MVC   PPLCBUF,CPPLCBUF   *      MOVE
         LA    R2,BLIPECB         *      CPPL
         ST    R2,PPLECB          *      PARMS
         L     R2,PCLADDR         *      TO
         ST    R2,PPLPCL          *      PPL
         LA    R2,BLIPANS         *      PARMS
         ST    R2,PPLANS          *
         LA    R2,BLIPUWA         *
         ST    R2,PPLUWA          ***************
         CALLTSSR  EP=IKJPARS     ALL SET - NOW PARSE IT
         DROP  R1
         LTR   R15,R15            WAS IT A GOOD PARSE?
         BNZ   BLIPEND            NO - GO TO BLIPEND
         L     R1,BLIPANS         -> IKJPARMD
         USING IKJPARMD,R1
         LH    R2,SWITCH          R2 = SWITCH KEYWORD CTR
         BCT   R2,BLIPOFF         R2 = 1?  NO - GO TO BLIPOFF
         LH    R2,CHARVAL         R2 = CHARVAL KEYWORD CTR
         BCT   R2,CHEK2           R2 = 1?  NO - GO TO CHEK2
         LA    R4,X'2F'           R4 = BELL CHARACTER
         MVC   ON2+4(4),BELL      MOVE 'BELL' TO MSG INSERT
         LA    R10,L'BELL         R10 = LENGTH OF 'BELL'
         LA    R10,4(R10)         ADD PUTLINE LENGTH FIELDS
         STH   R10,ON2            STORE IN PUTLINE INSERT LENGTH
         B     NEXTCHEK           GO TO NEXTCHEK
CHEK2    BCT   R2,CHEK3           R2 = 2?  NO - GO TO CHEK3
         LA    R4,X'40'           R4 = SPACE CHARACTER
         MVC   ON2+4(5),SPACE     MOVE 'SPACE' TO MSG INSERT
         LA    R10,L'SPACE        R10 = LENGTH OF 'SPACE'
         LA    R10,4(R10)         ADD PUTLINE LENGTH FIELDS
         STH   R10,ON2            STORE IN PUTLINE INSERT LENGTH
         B     NEXTCHEK           GO TO NEXTCHEK
CHEK3    LA    R4,X'5C'           R4 = STAR CHARACTER
         MVC   ON2+4(4),STAR      MOVE 'STAR' TO MSG INSERT
         LA    R10,L'STAR         R10 = LENGTH OF 'STAR'
         LA    R10,4(R10)         ADD PUTLINE LENGTH FIELDS
         STH   R10,ON2            STORE IN PUTLINE INSERT LENGTH
NEXTCHEK L     R3,TIMEVAL         -> TIME VALUE
         L     R3,0(R3)           R3 = TIME INCREMENT VALUE
         DROP  R1
         BAL   R14,ASCBPTRS       R5 -> ASCB; R6 -> XASCB
         USING ASCB,R5
         USING XASCB,R6
         MODESET KEY=ZERO         NOW WE'RE IN KEY ZERO
         ST    R3,XASCCPUB        SAVE TIME INCREMENT IN XASCCPUB
         STC   R4,XASCBLPC        SAVE BLIP CHARACTER IN XASCBLPC
         LR    R8,R3              R8 = TIME INCREMENT
         AL    R8,ASCBEJST        UNSIGNED ADD OF ELAPSED JOB STEP TIME
         C     R8,TIMEMAX         IS R8 <= 1440 MINUTES?
         BNH   TIMEOK             YES - GO TO TIMEOK
         L     R8,TIMEMAX         ELSE R8 = 1440 MINUTES
TIMEOK   ST    R8,ASCBJSTL        SAVE IT IN JOB STEP TIME LIMIT
         MODESET KEY=NZERO        BACK TO USER KEY
         DROP  R5,R6
         CVD   R3,PACKINT         R3 IS NOW PACKED
         EDMK  MASK,PACKINT       EDIT IT IN MASK (1ST SIG DIG IN R1)
         MVC   ON3+4(8),0(R1)     MOVE TO PUTLINE INSERT MSG
         L     R5,CPPLUPT         -> UPT
         L     R6,CPPLECT         -> ECT
         PUTLINE PARM=PUTBLOK,UPT=(5),ECT=(6),ECB=ECBADS,              X
               OUTPUT=(ONMSG),MF=(E,IOPLADS)   PUTLINE BLIP ON
         B     BLIPEND            CLEANUP AND GO HOME
BLIPOFF  BAL   R14,ASCBPTRS       R5 -> ASCB; R6 -> XASCB
         USING ASCB,R5
         USING XASCB,R6
         MODESET KEY=ZERO         NOW WE'RE IN KEY ZERO
         L     R7,TIMEMAX         R7 = 1440 MINUTES
         ST    R7,ASCBJSTL        STORE IN JOB STEP TIME LIMIT
         XR    R4,R4              CLEAR R4
         ST    R4,XASCCPUB        CLEAR BLIP INCREMENT
         STC   R4,XASCBLPC        CLEAR BLIP CHARACTER
         MODESET KEY=NZERO        BACK TO USER KEY
         DROP  R5,R6
         L     R5,CPPLUPT         -> UPT
         L     R6,CPPLECT         -> ECT
         PUTLINE PARM=PUTBLOK,UPT=(5),ECT=(6),ECB=ECBADS,              X
               OUTPUT=(OFFMSG),MF=(E,IOPLADS)  WRITE BLIP OFF
BLIPEND  L     R13,BLIPSAVE+4     R13 = OLD SAVE AREA PTR
         DROP  R11
         RETURN (14,12),RC=(15)   BACK TO DADDY
         EJECT
ASCBPTRS L      R5,PSAAOLD-PSA             -> ASCB
         LH     R7,ASCBASID-ASCB(R5)       R7 = ASID
         SLL    R7,2                       R7 = ASID * 4
         L      R6,CVTPTR                  -> CVT
         L      R6,CVTUSER-CVT(R6)         -> XCVT
         L      R6,XCVTXASV-XCVT(R6)       -> XASVT
         L      R6,XASVENTY-4-XASVT(R6,R7) -> XASCB
         BR     R14                        RETURN
         SPACE  3
***************************************************************
*                                                             *
*     TIMECHK IS A USER VALIDITY CHECK ROUTINE THAT EXITS     *
*     FROM IKJPARS (DESCRIPTION IS IN OS/VS2 TSO GUIDE TO     *
*     WRITING A TMP OR A CP  GC28-0648).  TIMECHK WILL        *
*     VERIFY THAT THE TIME VALUE IS GREATER THAN 0 AND LESS   *
*     THAN 3600 SECONDS (1 HOUR); A VIOLATION WILL CAUSE      *
*     A REPROMPT.                                             *
*                                                             *
***************************************************************
         SPACE  3
TIMECHK  SAVE   (14,12),,*                 BETTER SAVE HIS REGISTERS
         LR     R11,R15                    R11 IS BASE
         USING  TIMECHK,R11
         L      R2,0(R1)                   -> PDE
         L      R2,0(R2)                   -> TIME VALUE
         L      R2,0(R2)                   R2 = TIME VALUE
         LTR    R2,R2                      R2 <= 0?
         BNP    NGRTN                      YES - GO TO NGRTN
         LA     R3,3660                    R3 = 1 HOUR
         SR     R3,R2                      R3 = R3 - TIME VALUE
         LTR    R3,R3                      R3 <= 0?
         BNP    NGRTN                      YES - GO TO NGRTN
         RETURN (14,12),RC=0               GOOD RETURN
NGRTN    RETURN (14,12),RC=8               BAD RETURN
         DROP  R11
         EJECT
         DS    0D
PACKINT  DS    PL8
BLIPSAVE DS    18F
BLIPANS  DC    F'0'
BLIPECB  DC    F'0'
BLIPUWA  DC    F'0'
PCLADDR  DC    A(BLIPPCL)
TIMEMAX  DC    F'86400'
BLIPPPL  DS    7F
ONMSG    DC    F'3'
         DC    A(ON1)
         DC    A(ON2)
         DC    A(ON3)
OFFMSG   DC    F'1'
         DC    A(OFF1)
ON1      DC    H'36'   - TOTAL LENGTH
         DC    H'0'    - OFFSET
         DC    CL32' BLIP IN ON; VALUE IS ; TIME IS '
ON2      DC    H'9'    - TOTAL LENGTH
         DC    H'22'   - INSERT OFFSET
         DC    CL5' '
ON3      DC    H'12'   - TOTAL LENGTH
         DC    H'32'   - INSERT OFFSET
         DC    CL8' '
OFF1     DC    H'16'   - TOTAL LENGTH
         DC    H'0'    - OFFSET
         DC    CL12' BLIP IS OFF'
BELL     DC    CL4'BELL'
SPACE    DC    CL5'SPACE'
STAR     DC    CL4'STAR'
MASK     DC    XL16'40202020202020202020202020202020'
         DC    CL16' '
ECBADS   DC    F'0'          - EVENT CONTROL BLOCK
IOPLADS  DC    4F'0'         - I/O PARAMETER LIST
PUTBLOK  PUTLINE MF=L        - PUTLINE PARAMETER BLOCK
         EJECT
*******************************
*                             *
*        PARSE MACROS         *
*                             *
*******************************
         SPACE 3
BLIPPCL  IKJPARM
SWITCH   IKJKEYWD  DEFAULT='ON'
         IKJNAME   'ON',ALIAS='YES'
         IKJNAME   'OFF',ALIAS='NO'
TIME     IKJKEYWD  DEFAULT='TIME'
         IKJNAME   'TIME',SUBFLD=TIMESUB,ALIAS=('TI','T')
CHAR     IKJKEYWD  DEFAULT='CHAR'
         IKJNAME   'CHAR',SUBFLD=CHARSUB,ALIAS=('CH','C')
TIMESUB  IKJSUBF
TIMEVAL  IKJIDENT  'NUMBER',INTEG,DEFAULT='10',VALIDCK=TIMECHK
CHARSUB  IKJSUBF
CHARVAL  IKJKEYWD  DEFAULT='BELL'
         IKJNAME   'BELL',ALIAS=('BEL','RING')
         IKJNAME   'SPACE',ALIAS=('SP','BLANK','BL')
         IKJNAME   'STAR',ALIAS='ST'
         IKJENDP
         EJECT
         IKJPPL
         IKJCPPL
         IHAPSA
         CVT DSECT=YES
         XCVT
         IHAASCB
         IHAASVT
         XASVT
         XASCB
         YREGS
         SPACE 3
         END   BLIP
