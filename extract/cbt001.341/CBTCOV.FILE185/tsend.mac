TSEND    TITLE 'PROGRAM TO SEND A MESSAGE TO A SPECIFIED USER'
* TSEND IS A PL/I CALLABLE ROUTINE THAT WILL SEND A MESSAGE TO A
* SPECIFIED USER.  ON ENTRY R1 POINTS TO A PARAMETER LIST WHICH
* CONTAINS ADDRESSES FOR (1) THE MESSAGE TEXT, (2) THE USERID,
* AND (OPTIONALLY) (3) A RETURN CODE.
* THE MESSAGE TEXT IS A FIXED OR VARYING LENGTH PL/I CHARACTER STRING.
* THE USERID IS AN 8 CHARACTER FIXED LENGTH PL/I CHARACTER STRING
* (PADDED WITH BLANKS).  THE RETURN CODE (SET BY THE TPUT) IS A
* HALFWORD.  NOTE THAT THE 1ST TWO PARAMETERS ARE ACTUALLY
* PL/I LOCATOR-DESCRIPTORS FOR THE CHARACTER STRINGS (SEE THE PL/I
* EXECUTION LOGIC MANUAL FOR DETAILS).  SEE THE TSO GUIDE TO WRITING
* A TMP OR CP FOR INFORMATION ON TPUT RETURN CODES.
* PL/I GENERICALLY DETERMINES WHICH ENTRY IS USED BY THE CALLING
* PROGRAM (FIXED OR VARYING MESSAGE STRING, WITH OR W/O RETURN CODE).
* ATTRIBUTES:  REUSABLE, REFRESHABLE, REENTRANT.
* APB - 05/15/78
         SPACE 1
* TSENDC (ADDED 08/29/78) ALLOWS THE USER TO SEND TERMINAL CONTROL
* CHARACTERS TO ANOTHER USER.  TSENDC HAS THE SAME PARAMETERS AS TSEND.
* TCAM WILL BE TRANSLATING THESE CHARACTERS INTO ASCII, SO YOU SHOULD
* BE SENDING THE EBCDIC EQUIVALENTS.
* (THE TPUTS WILL BE SENT WITH HIGHP IF THE PROGRAM IS APF AUTHORIZED,
* HOWEVER, NON-AUTHORIZED DEFAULT IS LOWP).
* (BREAKIN MODE IS PROBABLY EXCESSIVE, SO WE DEFAULT TO NOBREAK).
* (HOLD MODE IS ONLY NEEDED IF WE MUST ENSURE THAT THE USER GOT OUR
* MESSAGE BEFORE CONTINUING).
* THESE ROUTINES SHOULD EVENTUALLY BE MERGED WITH THE TERMIO ROUTINES.
         EJECT
TSEND    PLIXSET
         EJECT
TSENDF   PLIXDENT                  ENTRY FOR FIXED STRING MESSAGE
         SPACE 1
         ENTRY TSENDFR             ENTRY WITH RETURN CODE
TSENDFR  EQU   TSENDF
         SPACE 2
         LR    6,1                 SAVE PARM PTR
         LM    2,3,0(1)            GET 1ST 2 PARMS
         LH    5,4(2)              LENGTH OF STRING
         L     2,0(2)              -> STRING
         L     3,0(3)              -> USERID
         B     DOIT
         EJECT
TSENDV   PLIXDENT                  ENTRY FOR VARYING STRING MESSAGE
         SPACE 1
         ENTRY TSENDVR             ENTRY WITH RETURN CODE
TSENDVR  EQU   TSENDV
         SPACE 2
         LR    6,1                 SAVE PARM PTR
         LM    2,3,0(1)            GET 1ST 2 PARMS
         L     2,0(2)              -> VARYING STRING
         LH    5,0(2)              CURRENT LENGTH OF STRING
         LA    2,2(2)              -> TEXT OF STRING
         L     3,0(3)              -> USERID
         B     DOIT
         EJECT
TSENDCF  PLIXDENT                  ENTRY FOR FIXED STRING CTL MESSAGE
         SPACE 1
         ENTRY TSNDCFR             ENTRY WITH RETURN CODE
TSNDCFR  EQU   TSENDCF
         SPACE 2
         LR    6,1                 SAVE PARM PTR
         LM    2,3,0(1)            GET 1ST 2 PARMS
         LH    5,4(2)              LENGTH OF STRING
         L     2,0(2)              -> STRING
         L     3,0(3)              -> USERID
         B     DOITC
         EJECT
TSENDCV  PLIXDENT                  ENTRY FOR VARYING STRING CTL MESSAGE
         SPACE 1
         ENTRY TSNDCVR             ENTRY WITH RETURN CODE
TSNDCVR  EQU   TSENDCV
         SPACE 2
         LR    6,1                 SAVE PARM PTR
         LM    2,3,0(1)            GET 1ST 2 PARMS
         L     2,0(2)              -> VARYING STRING
         LH    5,0(2)              CURRENT LENGTH OF STRING
         LA    2,2(2)              -> TEXT OF STRING
         L     3,0(3)              -> USERID
         B     DOITC
         EJECT
DOIT     TPUT  (2),(5),USERIDL=(3) SEND MESSAGE
         B     DONE
         SPACE 1
DOITC    TPUT  (2),(5),USERIDL=(3),CONTROL   SEND CTL MESSAGE
         SPACE 1
DONE     TM    4(6),X'80'          IS 2ND PARM LAST?
         BO    EXIT                YES
         L     4,8(6)              NO, GET PTR TO RETURN(ED) CODE
         STH   15,0(4)             SAVE RETURN CODE
         SPACE 2
EXIT     PLIXEXT
         END   TSEND
