 TITLE 'GETDASD:  PL/I CALLABLE ONLINE DASD LIST BUILDER'
*
*        GETDASD:  PL/I CALLABLE ONLINE DASD LIST BUILDER.
*        GIVEN AN EMPTY STRUCTURE OF PARTICULAR FORMAT, FILLS
*        IT IN WITH (1) VOLSER (2) CCHH OF VTOC (3) TRACKS PER
*        CYLINDER (4) USE ATTRIBUTE (MNEMONIC)
*        (5) MOUNT STATUS (MNEMONIC) OF ALL ONLINE DASD.
*        VOLUMES.
*
*        DCL GETDASD ENTRY(*);
*        DCL #DASDENTRIES FIXED BIN INIT(/*ARBITRARY*/);
*        DCL 1 DASDLIST CTL,
*              2 N FIXED BIN INIT(#DASDENTRIES),
*              2 DASDENTRY(#DASDENTRIES),
*                  3 VOLSER CHAR(6),
*                  3 VTOC_CCHH,
*                      4 (CC,HH)FIXED BIN,
*                  3 TRACKS_PER_CYL FIXED BIN,
*                  3 USE_ATTR CHAR(4) /* 'STG ','PUB ','PVT ' */,
*                  3 MOUNT_STATUS CHAR(4), /* 'PRM ','RSV ','RMV ' */
*                  3 UCBNAME  CHAR(3); /* EBCDIC UNIT ADDRESS */
*        ALLOCATE DASDLIST;
*        CALL GETDASD(DASDLIST);
*
*        AT RETURN, N WILL BE SET TO NUMBER OF ENTRIES FOUND. IF
*        AREA OVERFLOW OCCURED SO THAT LIST IS INCOMPLETE, N WILL
*        BE COMPLEMENTED.
*
*        JSA 5/16/78 LAST MOD 10/25/79 SBB
*
         PRINT NOGEN
GETDASD1 PLIXSET
GETDASD  PLIXDENT
         L     R1,0(R1)    GET ARGUMENT
         L     R1,0(R1)    SKIP LOCATOR
         LH    R2,0(R1)    GET #DASDENTRIES
         LA    R10,2(R1)    R10->DATA AREA
         USING DASDENT,R10          USE DSECT FOR STRUCTURE
         L     R4,16       R4->CVT
         USING CVT,R4
         L     R3,CVTILK2  R3->HALFWORD ADDRESS PORTION, UCB LOOKUP
         L     R4,CVTZDTAB R4->I/O DEVICE CHARACTERISTICS TABLE
         DROP  R4
         SR    R5,R5       R5 USED TO ICM HALFWORD ADDRESSES
         SR    R6,R6       R6 USED TO COUNT ENTRIES
LOOP     ICM   R5,3,0(R3)  GET UCB HALFWORD ADDRESS
         C     R5,END      TEST FOR END FLAG
         BE    ENDING
         LTR   R5,R5               TEST FOR ZERO ADDRESS
         BZ    SKIP                SKIP PROCESSING IF FOUND
         USING UCBCMSEG,R5 R5->UCB COMMON SEGMENT
         TM    UCBTBYT3,UCB3DACC   TEST FOR DIRECT ACCESS
         BZ    SKIP        SKIP PROCESSING OTHERWISE
         TM    UCBVOLI,X'80'   TEST FOR VALID EBCDIC-LOOKING VOLSER
         BZ    SKIP            SKIP PROCESSING OTHERWISE
         CR    R6,R2       DO WE HAVE ROOM TO RECORD THIS ONE?
         BH    OVERFLOW
         MVC   DEVOL,UCBVOLI     MOVE VOLSER TO STRUCTURE
         MVC   DEUNM,UCBNAME    MOVE UNIT NAME TO STRUCTURE
         TM    UCBSTAB,UCBBPRV     IS IT PRIVATE?
         BZ    NOTPRIV
         MVC   DEUSE,=C'PRV '
         B     GO1
NOTPRIV  TM    UCBSTAB,UCBBPUB     IS IT PUBLIC?
         BZ    NOTPUB
         MVC   DEUSE,=C'PUB '
         B     GO1
NOTPUB   TM    UCBSTAB,UCBBSTR     IS IT STORAGE?
         BZ    NOTSTOR
         MVC   DEUSE,=C'STG '
         B     GO1
NOTSTOR  MVC   DEUSE,=C'    '
GO1      DS    0H                   MOVE THE MOUNT STATUS
         TM    UCBSTAT,UCBPRES      IS IT PERMANENTLY RESIDENT?
         BZ    NOTPRM
         MVC   DEMST,=C'PRM '
         B     GO2
NOTPRM   DS    0H
         TM    UCBSTAT,UCBRESV      IS IT RESERVED?
         BZ    NOTRESV
         MVC   DEMST,=C'RSV '
         B     GO2
NOTRESV  DS    0H
         MVC   DEMST,=C'RMV '       MUST BE REMOVABLE
GO2      DS    0H
         SR    R7,R7       R7 USED TO IC OFFSETS IN DEVTAB
         IC    R7,UCBTBYT4 GET DEVICE CODE
         IC    R7,0(R7,R4) GET FIRST OFFSET
         LH    R7,2(R7,R4) GET TRACKS PER CYLINDER
         SR    R8,R8       CLEAR FOR DR
         LH    R9,UCBVTOC  GET VTOC TT
         DR    R8,R7       CONVERT TO CCHH: CC IN R9, HH IN R8
         STH   R9,DECC    STORE CC
         STH   R8,DEHH    STORE HH
         STH   R7,DETPC   STORE TRACKS PER CYL
         LA    R10,DELEN(R10)   INCREMENT FOR NEXT ENTRY
         LA    R6,1(R6)    COUNT ENTRY
SKIP     LA    R3,2(R3)    POINT TO NEXT UCB HALFWORD ADDRESS
         B     LOOP    ITERATE
OVERFLOW LCR   R6,R6   INDICATE OVERFLOW BY SETTING COUNT NEGATIVE
ENDING   STH   R6,0(R1) RETURN COUNT
         PLIXEXT   ,   RETURN TO CALLER
END      DS    0F
         DC    X'0000FFFF'
         LTORG
DASDENT  DSECT
DEVOL    DC    CL6'VOLSER'
DECC     DC    XL2'0000'
DEHH     DC    XL2'0000'
DETPC    DC    XL2'0000'
DEUSE    DC    CL4'USE '
DEMST    DC    CL4'MOUN'
DEUNM    DC    CL3'CUU'
DELEN    EQU   *-DASDENT            LENGTH OF ENTRY
         IECDSECS  UCB,CVT,EXPAND=YES
         END
