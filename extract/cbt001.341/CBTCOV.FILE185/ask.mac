ASK      TITLE 'ASK ---- PL/I-CALLABLE PROCEDURE TO PERFORM PUTLINE/GET*
               LINE SERVICES'
*        GARY BERGER. JULY 13, 1977.
*        FUNCTIONAL REPLACEMENT OF OLD ASK ROUTINE
*        THAT USES PUTLINE AND GETLINE INSTEAD OF TPUT AND TGET SO THAT
*        COMMAND PROCESSORS THAT FORMERLY COULD NOT RUN UNDER
*        THE TMP IN THE BATCH CAN DO SO NOW.
         SPACE
* 07 SEP 79: GETLINE OPTION CHANGED FROM ASIS TO EDIT TO CAUSE
*        AUTOMATIC SUPPRESSION OF STATION CONTROL CHARACTERS.
         SPACE
         INITIAL
ASKA    PLIXSET                   ,
         SPACE 1
ARGPTR   EQU   R10
         SPACE 1
ASK     PLIXDENT DSALEN=WORKEND-WORKSECT
         SPACE 2
*        DCL ASK ENTRY(CHAR,CHAR);
*        ARGUMENTS MAY BE VARYING OR FIXED.
*        FIRST ARGUMENT IS PRINTED AS PROMPT
*        SECOND ARGUMENT RECEIVES ANSWER
*        IF FIRST ARGUMENT OMITTED,ONLY READ OCCURS.
         SPACE 1
         LR    ARGPTR,R1           GET POINTER TO CURRENT ARG.
         USING ARGSECT,ARGPTR
         USING WORKSECT,RDSA
*        CLEAR OUR PART OF IT WITH AN MVCL
         LA    R6,WORKOURS
         LA    R7,WORKEND-WORKOURS
         SR    R9,R9
         MVCL  R6,R8
         SPACE 2
*        FILL IN CPPL
         LA    R9,WORKCPPL
         USING CPPL,R9
         GETCPPL                   ,
         DROP  R9
         SPACE 1
         KNOW  GETONLY
         EXITIF  LASTARG,T,EXIT=GETONLY
         L     R2,0(ARGPTR)        GET STRING DESCRIPTOR
         USING DESCRIP,R2
         LA    ARGPTR,4(ARGPTR)    POINT TO SECOND ARGUMENT FOR LATER
         IF    VARYING,F
         LH    R5,LENFLD           FIXED LEN
         L     R4,ADDR
         ELSE
         L     R4,ADDR
         LH    R5,0(R4)      VARYING LEN
         LA    R4,2(R4)
         FI
         DROP  R2
*        GET A BUFFER IN WHICH TO PUT THE STRING TO BE
*        PUTLINED. IT MUST HAVE A 4 BYTE HEADER, THE FIRST
*        HALFWORD OF WHICH IS THE LENGTH OF THE BUFFER.
         SPACE 1
         LA    R0,4(R5)            COMPUTE LEN FOR GETMAIN
         L     R15,PLIXGETM(,RTCA)
         BALR  R14,R15             GET THE STORAGE
         LR    R2,R1               SAVE ADDRESS OF BUFFER
         LA    R1,4(R5)            GET BUFF LEN AGAIN
         STH   R1,0(R2)            STORE IN BUFFER
         XC    2(2,R2),2(R2)       SECOND HALFWORD IS 0
         LA    R6,4(R2)            GET TARGET STRING ADDRESS
         LR    R7,R5               SAME LENGTH
         MVCL  R6,R4               AND COPY
         SPACE
*        NOW SET UP THE PUTLINE.
         LA    R5,WORKCPPL
         USING CPPL,R5
         L     R6,CPPLUPT          GET UPT
         L     R7,CPPLECT          AND GET ECT ADDRESS FOR PUTLINE
         DROP  R5
         MVC   WORKPUTP,PUTPL      MOVE PARM LIST INTO WORK AREA
         PUTLINE PARM=WORKPUTP,UPT=(R6),ECT=(R7),                      X
               ECB=WORKECB,                                            X
               OUTPUT=((R2),DATA),MF=(E,WORKIOPL)
         LH    R0,0(R2)            FREE THE BUFFER
         LR    R1,R2
         L     R15,PLIXGETM(,RTCA)
         BALR  R14,R15
         ONEXIT
         WONK  ,                   END OF GETONLY
         EJECT
         DO    BLOCK ISSUES GETLINE
         LA    R5,WORKCPPL
         USING CPPL,R5
         L     R6,CPPLUPT
         L     R7,CPPLECT
         MVC   WORKGETP,GETPL
         DROP  R5
         LA    R9,10              GIVE FOLLOWING WHLE LOOP TEN TRIES
         WHILE  HAVENT GOTTEN A LINE YET
         GETLINE PARM=WORKGETP,UPT=(R6),ECT=(R7),                      X
               INPUT=ISTACK,ECB=WORKECB,MF=(E,WORKIOPL)
         C     R15,=F'16'          SEE IF EOF ON INPUT SOURCE
         WTEST *,EQ
         BCT   R9,*+8             KEEP GOING IF NOT TEN TIMES YET
         B     TOOMUCH             ELSE EXIT
         ELIHW
TOOMUCH  DS    0H
         SPACE 2
         L     R2,0(ARGPTR)        GET STRING DESCRIPTOR
         USING DESCRIP,R2
         C     R15,=F'4'
         IF    *,LE                RETURN CODE OK FROM GETLINE...
         SPACE 1
         L     R6,WORKBUFP         ->GOTTEN BUFFER
         LH    R7,0(R6)            LEN(BUFFER)
         SH    R7,=H'4'            LEN(STRING)
         LA    R6,4(R6)            ->GOTTEN STRING
         SPACE 1
         LH    R5,LENFLD           MAX LEN OF TARGET STRING
         L     R4,ADDR             ->TARGET STRING
         IF    VARYING,T
*        ADJUST MAX LEN TO PROPER LEN,FILL IT IN STRING
         CR    R5,R7               TARGET LEN VS. GOTTEN LEN
         IF    *,GT
         LR    R5,R7               ADJUST TARGET TO GOTTEN IF < MAX
         FI
         STH   R5,0(R4)            STORE LEN IN TARGET VAR STRING
         LA    R4,2(R4)            ADJUST -> TARGET STRING
         FI    ,                   END OF CHAR VAR PROCESSING
*        DO MVCL
         LR    R0,R4               TARGET ->STRING
         LR    R1,R5               TARGET LEN
         ICM   R7,8,=C' '          PADDING CHAR IN SOURCE LEN
         MVCL  R0,R6
         SPACE 1
*        TRANSLATE GOTTEN STRING TO UPPER CASE
*        R4 IS ->START OF STRING, R5 IS LENGTH
         WHILE LENGTH > 256
         C     R5,=F'256'
         WTEST *,GT
         TR    0(256,R4),FOLD
         LA    R4,256(R4)
         S     R5,=F'256'
         ELIHW
         LTR   R5,R5               SEE IF ANY LEFT TO TRANSLATE
         IF    *,NZE
         BCTR  R5,0                ADJUST FOR EXECUTE
         TR    0(*-*,R4),FOLD   REALLY EXECUTED BELOW
         EX    R5,*-6              FOLD REMAINDER
         FI
         FI
         DROP  R2
         PLIXEXT
         OD
         EJECT
FOLD     DS    0CL256
TAB      DC    128AL1(*-TAB)
         DC    12AL1(*-TAB+64),4AL1(*-TAB)
         DC    12AL1(*-TAB+64),4AL1(*-TAB)
         DC    12AL1(*-TAB+64),4AL1(*-TAB)
         DC    12AL1(*-TAB+64),4AL1(*-TAB)
         DC    64AL1(*-TAB)
         SPACE 1
PUTPL    PUTLINE MF=L,TERMPUT=ASIS
PUTPLL   EQU   *-PUTPL
GETPL    GETLINE MF=L,TERMGET=EDIT
         LTORG
         SPACE 2
WORKSECT PLIXDSA
WORKOURS DS    0X
WORKIOPL DS    4F'0'
WORKECB  DS    F'0'
WORKPUTP DS    CL(PUTPLL)
WORKGETP DS    0D                  DOUBLEWORD FOR GET PARM LIST
WORKGET1 DS    F                   FILLED IN WITH OPTS FOR GET
WORKBUFP DS    F                   POINTER TO BUFF RETURNED BY GETLINE
WORKCPPL DS    4F
WORKEND  DS    0D
         SPACE 2
DESCRIP  DSECT ,                   PLI STRING DESCRIPTOR
ADDR     DS    A                   ADDRESS OF STRING
LENFLD   DS    H                   MAX LEN OF STRING
VARYING  DS    0BL100              VARYING OR FIXED
ARGSECT  DSECT
LASTARG  DS    0BL100
         IKJCPPL
         END
