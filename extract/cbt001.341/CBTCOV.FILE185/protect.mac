         TITLE 'PROTECT - DOCUMENTATION'
*.....................................................................*
*.                                                                   .*
*.   PROTECT                                                         .*
*.                                                                   .*
*.....................................................................*
*.                                                                   .*
*.   1.0  GENERAL DESCRIPTION                                        .*
*.                                                                   .*
*.   THIS TSO COMMAND IS A PART OF OUR ACCESS FACILITY (OAF)         .*
*.   IT  TURNS  ON OR OFF THE RACF PROTECT BIT IN THE FORMAT 1       .*
*.   DSCB OF SELECTED DISK DATASETS.                                 .*
*.   THE ORIGINAL CODE IS DERIVED  FROM "LISTSPC" ON A SPLA TAPE     .*
*.                                                                   .*
*.....................................................................*
*.                                                                   .*
*.....................................................................*
*.                                                                   .*
*.   2.0  COMMAND SYNTAX                                             .*
*.                                                                   .*
*.    PROTCT   DATASET(DSNAME-LIST) LEVEL(INDEX-STRUCTURE)           .*
*.             VOLUME(VOLUME) UNPROTECT                              .*
*.                                                                   .*
*.       DATASET(DSNAME-LIST)                                        .*
*.          -  SPECIFIES A DSNAME LIST FOR WHICH YOU DESIRE TO       .*
*.             HAVE THE SECURITY STATUS MODIFIED. TSO                .*
*.             NAMING CONVENTIONS APPLY FOR THE DSNAMES.             .*
*.                                                                   .*
*.       LEVEL(INDEX-STRUCTURE)                                      .*
*.          -  SPECIFIES AN INDEX STRUCTURE FOR WHICH YOU DESIRE     .*
*.             TO HAVE THE SECURITY STATUS CHANGED  FOR EACH         .*
*.             DATASET WITHIN THIS INDEX STRUCTURE.  THIS MAY        .*
*.             BE A DSNAME CONTAINING ONE EMBEDDED ASTERISK NOT      .*
*.             AS THE HIGH-LEVEL QUALIFIER OR IT MAY BE AN INDEX     .*
*.             LEVEL.                                                .*
*.                                                                   .*
*.       VOLUME(VOLUME-LIST)                                         .*
*.          -  IF USED WITH THE 'DATASET' PARAMETER, SPECIFIES THE   .*
*.             VOLUME ON WHICH THE DATASET RESIDES.  NO CATALOG      .*
*.             SEARCH WILL BE PERFORMED FOR THE DATASETS.            .*
*.                                                                   .*
*.....................................................................*
*.                                                                   .*
*.....................................................................*
*.                                                                   .*
*.   3.0  PROGRAM STRUCTURE                                          .*
*.                                                                   .*
*.                                                                   .*
*.   3.0.1  INITIALIZATION                                           .*
*.                                                                   .*
*.   THIS SECTION BUILDS THE PARAMETER LISTS FOR PARSE AND           .*
*.   LOCINDEX.  IT CAN, IF DESIRED, CHECK THE USERID FOR             .*
*.   AUTHORIZATION AND SET BIT 0 OF THE FLAG FIELD IF THE USER       .*
*.   IS AUTHORIZED.  IT THEN LINKS TO PARSE AND DETERMINES           .*
*.   WHICH TYPE OF REQUEST IS BEING MADE.                            .*
*.                                                                   .*
*.                                                                   .*
*.   3.0.2  DATASET ROUTINE                                          .*
*.                                                                   .*
*.   THIS ROUTINE IS ENTERED IF THE 'DATASET' PARAMETER IS           .*
*.   SPECIFIED.  IF THE 'VOLUME' PARAMETER IS ALSO SPECIFIED,        .*
*.   THE 'LOCATE' IS BYPASSED.  IT THEN LINKS TO THE OBTAIN AND      .*
*.   PRINT ROUTINE.                                                  .*
*.                                                                   .*
*.                                                                   .*
*.   3.0.3  LEVEL ROUTINE                                            .*
*.                                                                   .*
*.   THIS ROUTINE IS ENTERED IF THE 'LEVEL' PARAMETER IS SPECIFIED.  .*
*.   IT LINKS TO LOCINDEX TO GET THE DSNAMES FOR THE INDEX           .*
*.   STRUCTURE AND THEN LINKS TO THE OBTAIN AND PRINT ROUTINE.       .*
*.                                                                   .*
*.                                                                   .*
*.   3.0.4  (DELETED)                                                .*
*.   3.0.5  OBTAIN AND PRINT ROUTINE                                 .*
*.                                                                   .*
*.   THIS ROUTINE 'OBTAIN'S THE FORMAT 1 DSCB, TESTS ITS CURRENT     .*
*.   SECURITY STAUTUS, AND CHANGES IT ACCORDING TO THE               .*
*.   SETTING   OF THE "UNPROTECT  " KEYWORD.                         .*
*.                                                                   .*
*.....................................................................*
         TITLE 'PROTECT - PROTECT DATASET COMMAND'
PROTECT  START 0
         STM   R14,R12,12(R13)
         USING PROTECT,R15
         ST    R13,SAVE+4
         LA    R13,SAVE
         B     BEGIN
SAVE     DC    18F'0'
         DROP  R15
         USING SAVE,R13
         TITLE 'PROTECT - GETMAIN AND PARSE'
BEGIN    LR    R4,R1
         USING CPPL,R4
         B     NODEBUG
         LOAD  EP=DBC
         LR    R2,R0
         ESTAE (R2),CT
         DC    X'00DEAD00'
NODEBUG  DS    0H
         LA    R0,LWORK            GET LENGTH OF WORK AREA
         AH    R0,=H'4096'         GET EXTRA 4K FOR LOCINDEX WORK
         ICM   R0,B'1000',=FL1'1'  SUBPOOL 1
         GETMAIN R,LV=(0)
         LR    R12,R1               SAVE ADDR OF WORK AREA
         USING WORKAREA,R12
         LA    R0,LOCINDXW          POINT TO LOCINDEX WORK AREA
         ST    R0,PARM+12           SAVE ADDR IN PARM LIST
         MVI   PARM+12,X'80'        INDICATE END OF PARM LIST
         MVI   WXTNT+4,X'04'
         LA    R3,WPPL             GET ADDR OF PPL
         USING PPL,R3
         L     R0,CPPLCBUF
         ST    R0,PPLCBUF          SAVE ADDR OF COMMAND BUFFER
         L     R0,CPPLUPT
         ST    R0,PPLUPT           SAVE ADDR OF UPT
         L     R0,CPPLPSCB
         LR    R10,R0              GET ADDR OF USERID FROM PSCB
         SR    R11,R11
         IC    R11,7(R10)          GET LENGTH OF USERID
         BCTR  R11,0
*        CLC   0(6,R10),=C'SYSTEM'                           ** VPI **
*        BE    AUTHRZD                                       ** VPI **
*        CLC   0(6,R10),=C'CONSUT'                           ** VPI **
*        BNE   LECT                                          ** VPI **
AUTHRZD  OI    FLAG,X'80'
LECT     L     R0,CPPLECT
         ST    R0,PPLECT           SAVE ADDR OF ECT
         LA    R0,CPECB
         ST    R0,PPLECB           SAVE ADDR OF ECB
         XC    CPECB,CPECB         CLEAR ECB
         L     R0,=A(PARSLIST)
         ST    R0,PPLPCL           SAVE ADDR OF PCL
         LA    R0,WPDL
         ST    R0,PPLANS           SAVE ADDR OF PDL AREA
         XC    PPLUWA,PPLUWA       CLEAR UWA
         LR    R1,R3               PASS ADDR OF PPL TO PARSE
         LINK  EP=IKJPARS          LINK TO PARSE SERVICE ROUTINE
         LTR   R15,R15             PARSE ERROR
         BNZ   RETC                 YES
         TM    PPLANS,X'FF'        PARSE ERROR
         BO    RETC                 YES
         DROP  R3,R4
         L     R3,WPDL             GET ADDR OF PDL
         USING IKJPARMD,R3
         TM    DSNLIST+6,X'80'      DSNAME SPECIFIED?
         BO    DSNRTN                YES
         TM    LEV+6,X'80'          INDEX LEVEL SPECIFIED?
         BO    LEVEL                 YES
         B     NOUSER
         TITLE 'PROTECT - DATASET NAME ROUTINE'
DSNRTN   LA    R4,DSNLIST           POINT TO DSN LIST
DSNAME   L     R5,0(R4)             POINT TO DSNAME
         LH    R6,4(R4)             GET LENGTH OF DSNAME
         BCTR  R6,0
         MVI   DSN1,X'40'
         MVC   DSN1+1(43),DSN1     BLANK DSN WORK AREA
         LA    R8,DSN1              POINT TO DSN WORK AREA
         TM    6(R4),X'40'          DSNAME CONTAINED IN QUOTES?
         BO    MVCDSNAM               YES
         EX    R11,USIDMVC         MOVE USERID TO WORK AREA
         LA    R8,1(R11,R8)        BUMP PAST USERID
         MVI   0(R8),C'.'          MOVE PERIOD TO WORK AREA
         LA    R8,1(0,R8)          BUMP PAST
MVCDSNAM EX    R6,DSNMVC           MOVE DSNAME TO WORK AREA
         MVC   VOLS,BLANKS         MOVE BLANKS TO VOLSER WORK AREA
         TM    FLAG,X'80'          AUTHORIZED USER?
         BZ    LOCDSN               NO
         TM    VOL+6,X'80'         VOLUME SPECIFIED?
         BZ    LOCDSN               NO, LOCATE DSN
         LA    R1,VOLS             POINT TO VOLSER WORK AREA
         L     R5,VOL              POINT TO VOLUME PARAMETER
         LH    R6,VOL+4            GET LENGTH OF VOL PARM
         BCTR  R6,0
         EX    R6,MVCVOLS          MOVE VOL PARM TO VOLSER WORK AREA
         B     BALOBTN             BYPASS LOCATE
LOCDSN   OI    FLAG,X'10'
         LOCATE INDS
         LTR   R15,R15              DID IT FIND VOL SER
         BNZ   ERR03                 NO WRITE ERROR MSG
         NI    FLAG,X'EF'
         MVC   VOLS(6),BUF1+6      YES - MOVE IN VOL SER
         SPACE 2
BALOBTN  BAL   R9,OBTNRTN          LINK TO OBTAIN AND PRINT ROUTINE
RETDSN   L     R4,24(R4)           GET DSN LINK POINTER
         C     R4,ENDLIST          END OF LIST?
         BE    RETC                 YES
         B     DSNAME               NO, GET NEXT DSNAME
         TITLE 'PROTECT - LEVEL ROUTINE'
EUSLO    EQU   *
**     FOR ENTIRE USERID LOGGED ON
         MVC   USERID(7),0(R10)        MOVE IN USERID
         B     GOTUS               BRANCH TO GOT USERID
         SPACE 3
LEVEL    EQU   *
         L     R5,LEV              POINT TO INDEX STRUCTURE
         LH    R6,LEV+4            GET LENGTH OF INDEX STRUCT
         BCTR  R6,0
         LA    R8,USERID           POINT TO WORK AREA
         EX    R6,DSNMVC           MOVE INDEX STRUCTURE TO WORK AREA
GOTUS    EQU   *
         OI    FLAG,X'40'          SET FLAG FOR DATA SETS FOR USERID
LOOP     EQU   *                   LOOP FOR DATASET IN USERID
         L     R15,=V(LOCINDEX)    POINT TO EP(LOCINDEX)
         LA    R1,PARM             POINT TO PARM LIST
         BALR  R14,R15             GO TO LOCINDEX
         B     *+4(R15)            BRANCH , DEP ON RETURN CODE
         B     OK                  0-GET INFOR FOR DSN & CONT
         B     NOUSER              4-PRINT MSG & RETRUN TO SYS
*****    DELETED                                                YCC HKG
*         B     NOTDISK             8-PRINT MSG&CONTINUE
*         B     MULTIVOL            12-PRINT MSG&CONTINUE
*****    DELETED                                                YCC HKG
         B     LOOP                                             YCC HKG
         B     LOOP                                             YCC HKG
         B     RETC                16-FINISHED-RETURN TO SYS
         B     RDERR               20-PRINT MSG&RETRUN TO SUS
OK       BAL   R9,OBTNRTN          LINK TO OBTAIN AND PRINT ROUTINE
         B     LOOP                GET NEXT DSNAME FROM LOCINDEX
         SPACE 3
         TITLE 'PROTECT - OBTAIN AND PRINT ROUTINES'
*   READ DSCB1 AND GET SPACE
OBTNRTN  STM   R2,R11,OBTNSAVE     SAVE CALLER'S REGISTERS
         MVC   DSNSAVE(44),DSN1
         MVI   DSN1,X'04'          MOVE 'DSN' FOR F4 DSCB...
         MVC   DSN1+1(43),DSN1     ...INTO DSN1
         OBTAIN SERCHCAM
         CLI   BUF1,X'F4'          DID IT READ OK?
*****    DELETED                                                YCC HKG
*         BNE   ERRF4               NO
*****    DELETED                                                YCC HKG
         BNE   OBTNRET                                          YCC HKG
         MVC   VOLTKCYL(2),BUF1+20 GET NUM OF TRKS/CYL
         MVC   DSN1(44),DSNSAVE
         MVI   MSG2,X'40'
         MVC   MSG2+1(75),MSG2     BLANK MESSAGE AREA
         OBTAIN SERCHCAM
         LTR   R15,R15             DID OBTAIN WORK
*****    DELETED                                                YCC HKG
*         BNZ   ERR03               NO - WRITE ERROR MSG
*****    DELETED                                                YCC HKG
         BNZ   OBTNRET                                          YCC HKG
         SPACE 2
         CLI   BUF1,C'1'            IS IT F1 DSCB?
         BNE   ERR01                NOT F1
         LA    R9,BUF1
         USING DS1FMTID,R9
         TM    DS1DSIND,X'10'
         LA    R6,STAMSG3
         BO    STAMSG
         CLI   UNPRO+1,0
         BE    CHECKIT
UNPROTST TM    DS1DSIND,X'40'
         LA    R6,STAMSG6
         BZ    STAMSG
CHECKIT  LA    R6,STAMSG5
         RACHECK ENTITY=DSN1,CLASS='DATASET',ATTR=ALTER,DSTYPE=N
         LTR   R15,R15
         BNZ   STAMSG
         MVC   VERDATA,DS1DSIND
         MVC   REPDATA,DS1DSIND
         MVC   VERDATA2,DS1RAC
         MVC   REPDATA2,DS1RAC
         CLI   UNPRO+1,0
         BNE   TURNOFF
         OI    REPDATA,X'40'
         SR    R0,R0
         LH    R1,RDWHO
         LTR   R1,R1
         BZ    NORDWHO
         BCTR  R1,0
NORDWHO  EQU   *
         SLL   R1,DS1RSHFT
         LR    R0,R1
         LH    R1,RDNOISE
         SLL   R1,7
         OR    R0,R1
         LH    R1,RDLOG
         SLL   R1,6
         OR    R0,R1
         LH    R1,WRWHO
         LTR   R1,R1
         BZ    NOWRWHO
         BCTR  R1,0
NOWRWHO  EQU   *
         OR    R0,R1
         LH    R1,WRNOISE
         SLL   R1,3
         OR    R0,R1
         LH    R1,WRLOG
         SLL   R1,2
         OR    R0,R1
         STC   R0,REPDATA2
         B     FINDUCB
TURNOFF  NI    REPDATA,X'BF'
         MVI   REPDATA2,0
FINDUCB  L     R1,CVTPTR
         L     R1,CVTILK2-CVT(R1)
         SR    R15,R15
UCBLOOP  ICM   R15,B'0011',0(R1)
         BZ    NEXTUCB
         C     R15,ENDUCBFL
         BE    OBTNRET
         USING UCBCMSEG,R15
         CLC   VOLS,UCBVOLI
         BE    GOTIT
NEXTUCB  LA    R1,2(R1)
         B     UCBLOOP
GOTIT    ST    R15,UCBPTR
         STAX  DEFER=YES
         MODESET KEY=ZERO,MODE=SUP
         LA    R1,VTCUPDTP
         CALL  VTCUPDT
         MODESET KEY=NZERO,MODE=PROB
         STAX  DEFER=NO
         LA    R6,STAMSG1
         CLI   UNPRO+1,0
         BE    STAMSG
         LA    R6,STAMSG3
STAMSG   MVC   MSG2(L'STAMSG1),0(R6)
         MVC   MSG2+L'STAMSG1(44),DSN1
         LA    R0,L'STAMSG1+44
         LA    R1,MSG2
         SVC   93
OBTNRET  LM    R2,R11,OBTNSAVE     RELOAD CALLER'S REGISTERS
         BR    R9                  RETURN TO CALLER
         TITLE 'PROTECT - EOJ AND ERROR ROUTINES'
RETC     EQU   *
         L     13,SAVE+4           LOAD R13 PREVIOUS SPACE AREA
         LM    2,12,28(13)         RELOAD REGISTERS
         L     14,12(13)           LOAD RETURN ADDRESS
         MVI   12(13),X'FF'        INDICATE CONTROL RETURN CALLING PROG
         BCR   15,14               RETURN TO CALLING PROGRAM
         SPACE 3
ERR01    EQU   *
* NO VALID COMMAND
         TPUT  ERMSG1,18
         B     RETC                BRANCH TO RETURN CODE
* DATASET NAME NOT FOUND
ERR03    MVC   MSG2(L'ERMSG9),ERMSG9
         MVC   MSG2+L'ERMSG9(44),DSN1
         LA    R0,L'ERMSG9+44
         LA    R1,MSG2
         SVC   93
         TM    FLAG,X'40'
         BO    LOOP
         TM    FLAG,X'10'
         BO    RETDSN
         B     OBTNRET
         SPACE 3
RDERR    MVC   MSG2(L'ERMSG8),ERMSG8
         MVC   MSG2+L'ERMSG8(44),DSN1
         LA    R0,L'ERMSG8+44
         LA    R1,MSG2
         SVC   93
         B     LOOP                CONTINUE THRU LOOP
         SPACE 3
NOUSER   MVC   MSG2(L'ERMSG3),ERMSG3
         MVC   MSG2+L'ERMSG3(44),USERID
         LA    R0,L'ERMSG3+44
         LA    R1,MSG2
         SVC   93
         B     RETC                RETURN TO SYSTEM
         SPACE 3
NOTDISK  MVC   MSG2(L'ERMSG6),ERMSG6
         MVC   MSG2+L'ERMSG6(44),DSN1
         LA    R0,L'ERMSG6+44
         LA    R1,MSG2
         SVC   93
         B     LOOP                PICK UP NEXT DATASET
         SPACE 3
MULTIVOL MVC   MSG2(L'ERMSG7),ERMSG7
         MVC   MSG2+L'ERMSG7(44),DSN1
         LA    R0,L'ERMSG7+44
         LA    R1,MSG2
         SVC   93
         B     LOOP                CONTINUE WITH NEXT DSN
         SPACE 3
ERRF     EQU   *
         TPUT  ERMSG10,20
         B     RETC
USIDMVC  MVC   0(0,R8),0(R10)
DSNMVC   MVC   0(0,R8),0(R5)
MVCVOLS  MVC   0(0,R1),0(R5)
         TITLE 'PROTECT - DATA AREAS'
ENDLIST  DS    0F
         DC    XL4'FF000000'
ENDUCBFL DC    XL4'0000FFFF'
* SETUP CONSTANTS
VOLDSCTK DC    H'0'                NUM DSCH ON A TRK
VOLF4CHR DC    XL5'00'             CCHHR OF DSCB
VOLNO    DC    H'0'                NUM VOLUMES PROCESSED
PEXCTR   DC    H'0'                CTR FOR TATAL NUM FREE SPACE
LASTTRK  DC    H'0'
DSN1     DC    CL44' '              DATASET NAME
DSNSAVE  DC    CL44' '
VOLS     DC    CL6' '                 VOLUME SER
USERID   DC    CL44' '              USERID
FLAG     DC    X'00'
DSORG    DC    X'00'
BLANKS   DC    CL6' '
BUF1     DS    0D
         DS    265C
TRTBL    EQU   *-240
         DC    C'0123456789ABCDEF'
MASKED   DC    XL6'402020202020'   MASK FIELD FOR EDIT
         SPACE 3
* MESSAGE TO BE PRINTED
MSG2     DC    CL76' '
         SPACE 3
* STATUS MESSAGES
ERMSG1   DC    C'NO VALID COMMAND'
ERMSG3   DC    C'INVALID LEVEL              - '
ERMSG6   DC    C'DSN NOT ON DISK            - '
ERMSG7   DC    C'DSN ON MULTIVOLUMES        - '
ERMSG8   DC    C'ERROR READING CATALOG DSN  - '
ERMSG9   DC    C'DSN NOT FOUND              - '
ERMSG10  DC    C'UNSUPPORTED KEYWORD'
ERMSG11  DC    C'ERROR READING F4 DSCB'
STAMSG1  DC    C'DATASET NOW PROTECTED      - '
STAMSG2  DC    C'DATASET PASSWORD PROTECTED - '
STAMSG3  DC    C'DATASET NOW UNPROTECTED    - '
STAMSG4  DC    C'DATASET ALREADY PROTECTED  - '
STAMSG5  DC    C'PERMISSION REFUSED ON DSN  - '
STAMSG6  DC    C'DATASET WAS NOT  PROTECTED - '
         EJECT
* CAMLST FOR DSCB3
SEEKCAM  CAMLST SEEK,VTOCCHHR,VOLS,BUF1
         SPACE 2
* CAMLST LOCATE DSN OV VOL SER
INDS     CAMLST NAME,DSN1,,BUF1
         SPACE 2
* CAMLST FOR DSCB 1
SERCHCAM CAMLST SEARCH,DSN1,VOLS,BUF1
         EJECT
* CONSTANTS AND WORK AREAS
HWK1     DC    H'0'                HALF WORD WORK AREA
VOLTKCYL DC    H'19'               # TRKS/CYL
VTOCCHHR DC    XL5'0'              TRACK ADDR WORK AREA
WKD      DC    D'0'                DOUBLE WORK WORK AREA
         SPACE 3
* PARM SETUP FOR GETDSN
PARM     DC    A(USERID)           USERID ADDRESS
         DC    A(DSN1)             DSN ADDRESS
         DC    A(VOLS)             VOL SER ADDRESS
         DC    A(0)                ADDRESS FOR GETMAIN
         SPACE 3
VTCUPDTP DS    0F                           VTCUPDT PARAMETERS
UCBPTR   DC    A(0)                         -> UCB
         DC    A(DSN1)
         DC    AL2(DS1DSIND-DS1DSNAM)
         DC    AL2(1)
         DC    A(VERDATA)
         DC    A(REPDATA)
         DC    AL2(DS1RAC-DS1DSNAM)
         DC    AL2(1)
         DC    A(VERDATA2)
         DC    A(REPDATA2)
         DC    X'FFFF'
VERDATA  DC    C' '
REPDATA  DC    C' '
VERDATA2 DC    C' '
REPDATA2 DC    C' '
         SPACE 3
         LTORG
* EQUATE REGISTERS
         EQUATE
RCC      EQU   R8
RHH      EQU   R7
RR       EQU   R6
         TITLE 'PROTECT - PARSE PARAMETER LIST'
PARSLIST IKJPARM
DSNKYD   IKJKEYWD
         IKJNAME 'DATASET',SUBFLD=DSNSUBF
LEVL     IKJKEYWD
         IKJNAME 'LEVEL',SUBFLD=LVL
VOLUME   IKJKEYWD
         IKJNAME 'VOLUME',SUBFLD=VLM
UNPRO    IKJKEYWD
         IKJNAME 'RESET'
RDPRO    IKJKEYWD
         IKJNAME 'READ',SUBFLD=RDSUB
WRPRO    IKJKEYWD
         IKJNAME 'WRITE',SUBFLD=WRSUB
RDSUB    IKJSUBF
RDWHO    IKJKEYWD
         IKJNAME 'OWNER'
         IKJNAME 'PROJECT'
         IKJNAME 'DEPARTMENT'
         IKJNAME 'PUBLIC'
RDNOISE  IKJKEYWD
         IKJNAME 'NOISE'
RDLOG    IKJKEYWD
         IKJNAME 'LOG'
WRSUB    IKJSUBF
WRWHO    IKJKEYWD
         IKJNAME 'OWNER'
         IKJNAME 'PROJECT'
         IKJNAME 'DEPARTMENT'
         IKJNAME 'PUBLIC'
WRNOISE  IKJKEYWD
         IKJNAME 'NOISE'
WRLOG    IKJKEYWD
         IKJNAME 'LOG'
DSNSUBF  IKJSUBF
DSNLIST  IKJPOSIT DSNAME,LIST
LVL      IKJSUBF
LEV      IKJIDENT 'LEVEL',OTHER=ANY,MAXLNTH=44
VLM      IKJSUBF
VOL      IKJIDENT 'VOLUME',FIRST=ALPHANUM,OTHER=ALPHANUM,MAXLNTH=6
         IKJENDP
         IKJPPL
         IKJCPPL
         TITLE 'PROTECT - WORK AREA'
WORKAREA DSECT
WPPL     DS    7A
CPECB    DS    F
WPDL     DS    F
OBTNSAVE DS    10F
XTNTS    DS    16XL10
WXTNT    DS    CL5
         DS    0D
LOCINDXW EQU   *
LWORK    EQU   *-WORKAREA
DSCB1    DSECT
         IECSDSL1 1
         CVT   DSECT=YES
         IEFUCBOB
         END
