***********************************************************************
*                                                                     *
*        NAME:     YCCUNPRS--YCC TSO UNPARSE ROUTINE                  *
*                                                                     *
*        FUNCTION: TO REPRODUCE (IN ONE OF TWO CANONICAL FORMS)       *
*                  A PARAMETER STRING FROM THE OUTPUT OF PARSE.       *
*                                                                     *
*        ENTRY:    R1 POINTS TO A LIST OF 5 FULLWORDS WHICH           *
*                  CONTAIN POINTERS TO THE FOLLOWING:                 *
*                  WORD1->PARAMETER CONTROL LIST                      *
*                  WORD2->LAST PARAMETER CONTROL ENTRY TO BE UNPARSED *
*                         OR NULL (X'FF000000') IN WHICH CASE PROCESS *
*                         IS CONTINUED UNTIL IKJSUBF OR IKJENDP       *
*                         IS DETECTED.  NOTE:  TO OBTAIN THE ADDRESS  *
*                         OF A PCE, THE FOLLOWING INSTRUCTIONS MUST   *
*                         BE INSERTED JUST PRIOR TO IT--              *
*                         'PARMTABNAME' CSECT                         *
*                         'SYMBOL' EQU *                              *
*                         'CSECTNAME' CSECT                           *
*                         SYMBOL 'SYMBOL' CAN THEN BE REFERRED TO     *
*                         IN AN A-TYPE CONSTANT.                      *
*                  WORD3->THE 'ANSWER PLACE' (SEE DESCRIPTION OF      *
*                         PARSE PARAMETER LIST IN GUIDE TO TMP OR CP) *
*                  WORD4->FIRST PCE (SEE WORD2)                       *
*                  WORD5->FLAG BYTE                                   *
*                         IF BIT0=0 THEN OLD FORMAT IS USED FOR       *
*                         REPRESENTATION OF KEYWORD SUBPARAMETERS     *
*                         EXAMPLE: IF ONE SUBPARAMETER, THEN          *
*                            KEYWORD=VALUE                            *
*                         IF MORE THAN ONE, THEN                      *
*                            KEYWORD=(VALUE1,...VALUEN)               *
*                         ELSE IF BIT0=1, THEN NEW FORMAT--           *
*                         EXAMPLE, ANY NUMBER OF SUBPARAMETERS:       *
*                            KEYWORD(VALUE1,...VALUEN)                *
*                                                                     *
*        EXIT:     R15=0 => SUCCESSFUL COMPLETION, IN WHICH CASE      *
*                    R0=NUMBER OF PARAMETERS UNPARSED (INCLUDING      *
*                       ANY WHICH MAPPED INTO NULL STRINGS, INDICATED *
*                       BY TWO CONSECUTIVE COMMAS) OR 0, IF ALL       *
*                       PARAMETERS WERE NULL.                         *
*                    R1->PARM STRING BUFFER, IN FOLLOWING FORMAT:     *
*                       FIRST HALFWORD IS COUNT, CONTAINS LENGTH      *
*                       OF PARM STRING, WHICH IMMEDIATELY FOLLOWS.    *
*                       IF R0=0, COUNT WILL ALSO BE 0.                *
*                  R15=4 => 'LAST' POINTER WAS NOT NULL, BUT AN       *
*                    IKJENDP OR IKJSUBF WAS FOUND BEFORE THE 'LAST'   *
*                    PCE WAS REACHED.                                 *
*                  R15=8 => A PCE OF SOME OTHER TYPE THAN IKJPOSIT,   *
*                    IKJIDENT, IKJKEYWD, IKJSUBF, OR IKJENDP WAS      *
*                    ENCOUNTERED.  (NOTE: AT THIS TIME THERE ARE      *
*                    NO OTHERS EXCEPT IKJNAME).                       *
*                  R15=12 =>  WHILE SEARCHING THE LIST OF IKJNAMES    *
*                    FOLLOWING AN IKJKEYWD FOR THE NAME CORRESPONDING *
*                    TO THE VALUE FOUND IN THE PDE, THE END OF THE    *
*                    LIST OF NAMES WAS ENCOUNTERED.                   *
*                  R15=16 => AN IKJPOSIT OF A TYPE NOT CURRENTLY      *
*                    SUPPORTED WAS ENCOUNTERED.  TYPES SUPPORTED ARE  *
*                    DSNAME, DSTHING, PSTRING AND QSTRING.            *
*                                                                     *
*        FURTHER RESTRICTIONS: RANGE IS NOT SUPPORTED FOR IKJPOSIT    *
*                  OR IKJIDENT.  LIST IS NOT SUPPORTED FOR IKJPOSIT.  *
*                  THESE INVALID CONDITIONS ARE NOT CHECKED FOR.      *
*                                                                     *
*        NOTES:    IN EITHER CANONICAL FORM PARAMETERS ARE            *
*                  SEPARATED BY COMMAS.  THIS MODULE IS REENTRANT,    *
*                  AND IN FACT CALLS ITSELF RECURSIVELY.  NO OTHER    *
*                  MODULES ARE REFERRED TO.                           *
*                                                                     *
*        AUTHOR:  T. DAHLQUIST   VERSION:  1.0   DATE:  4/5/74        *
*                                                                     *
***********************************************************************
         PRINT NOGEN
         INITIAL
YCCUNPRS RSECT LENGTH=DSECTL
         USING DSECT,R13
NPRS     TITLE 'YCC TSO UNPARSE ROUTINE--INITIALIZATION'
RPDE     EQU   R11
RPCE     EQU   R10
RLNK     EQU   R9
RCOMMA   EQU   R8
RFOUND   EQU   R7
         DO    GET PARAMETERS.
         LM    R2,R6,0(R1)
         ST    R2,PCL
         ST    R3,LAST
         L     RPDE,0(,R4)    GET A(PDL).
         ST    RPDE,PDL
         LR    RPCE,R5
         MVC   FLAGS,0(R6)
         OD    PARMS FETCHED,    RPCE->FIRST PCE
         DO    SETUP FOR PARM LIST FOR POSSIBLE RECURSION.
         L     R3,=X'FF000000'     NULL POINTER.
         STM   R2,R6,PARMLIST
         OD    PARM LIST SET UP.
         KNOW  ALLDONE
         KNOW  RECURSE
         DO    SETUP PARM STRING, COUNTS.
         SR    RCOMMA,RCOMMA
         SR    RFOUND,RFOUND
         LA    R0,160
         ST    R0,LPARM
         ICM   R0,B'1000',=XL1'1'
         GETMAIN R,LV=(0)
         ST    R1,APARM     AND ADDRESS.
         MVC   REM,=F'158'    REMAINDER,
         LA    R1,2(,R1)      AND CURRENT.
         ST    R1,NEXT
         OD    PARM STRING SET UP.
         KNOW  PCEERR
         KNOW  PCETYPE
         KNOW  PDEERR
         KNOW  POSTYPE
         TITLE 'YCC TSO UNPARSE ROUTINE--GRAND LOOP THROUGH PCE''S'
         LOOP  ON PCES.
         L     R2,LAST
         LTR   R2,R2          SEE IF ANY ADDRESS GIVEN.
         IF    *,NMI          IF SO, SEE IF THERE YET.
         CR    R2,RPCE
         EXITIF *,LT,EXIT=ALLDONE
         FI
         DO    GET TYPE OF NEXT PCE.
         SR    R2,R2
         IC    R2,0(,RPCE)
         SRA   R2,5
         OD    PCE TYPE IN R2.
         L     RPDE,PDL       RESTORE THIS ADDRESS.
         GRAB  (R2),(0,1,2,4),CHECK=YES,MULT=1
         SPACE 3
*        PROCESS AN IKJSUBF OR IKJENDP PCE--END OF PROCESSING.
         CASE  0              IKJENDP OR IKJSUBF.
         L     R2,LAST
         LTR   R2,R2          WERE WE SUPPOSED TO GET SOMEWHERE?
         EXITIF *,NMI,EXIT=PCEERR ERROR IF SO.
         EXIT  ALLDONE        OK.
         SPACE 3
*        PROCESS AN IKJPOSIT--SPECIFIC TYPES OF POSITIONAL PARAMETERS.
         CASE  1              IKJPOSIT
         USING PCPOSECT,RPCE
         AH    RPDE,PCPOOFFS  ADD OFFSET TO PDE.
         SR    R5,R5
         IC    R5,PCPOTYPE    GET TYPE OF IKJPOSIT
         KNOW POSDSN
         GRAB  (R5),(5,7,8,9),CHECK=YES,MULT=1
         CASE  5              PSTRING
         USING PDSTSECT,RPDE
         IF    PSTPARM,T      IF PARM PRESENT..
         LA    RFOUND,1(,RFOUND) INCREMENT COUNT.
         LA    R2,1
         LA    R3,=C'('
         BAL   RLNK,MOVEIT
         LH    R2,PDSTLSTR
         L     R3,PDSTPSTR
         BAL   RLNK,MOVEIT
         LA    R2,1
         LA    R3,=C')'
         BAL   RLNK,MOVEIT
         FI    ON PARM PRESENCE.
         CASE  7,EXIT=POSDSN  DSNAME
         CASE  8,EXIT=POSDSN  DSTHING
         CASE  9              QSTRING
         USING PDSTSECT,RPDE
         IF    PSTPARM,T      IF PARM PRESENT..
         LA    RFOUND,1(,RFOUND)
         LA    R2,1
         LA    R3,=C''''
         BAL   RLNK,MOVEIT
         LH    R2,PDSTLSTR
         L     R3,PDSTPSTR
         BAL   RLNK,MOVEIT
         LA    R2,1
         LA    R3,=C''''
         BAL   RLNK,MOVEIT
         FI    ON PARM PRESENCE.
         CASE  ELSE,EXIT=POSTYPE
         BARG  ON POSIT TYPE.
         ONEXIT POSDSN        DSNAME OR DSTHING
         USING PDDSSECT,RPDE
         IF    PDSDSN,T       IF DSN GIVEN,
         IF    PDSQUOT,T      IF QUOTED,
         LA    R2,1
         LA    R3,=C''''
         BAL   RLNK,MOVEIT
         FI    ON DSN BEING QUOTED.
         LH    R2,PDDSLDSN
         L     R3,PDDSPDSN
         BAL   RLNK,MOVEIT
         FI    ON DSNAME PRESENCE.
         IF    PDSMNM,T       IF MEMBERNAME PRESENT,
         LA    R2,1
         LA    R3,=C'('
         BAL   RLNK,MOVEIT
         LH    R2,PDDSLMNM
         L     R3,PDDSPMNM
         BAL   RLNK,MOVEIT
         LA    R2,1
         LA    R3,=C')'
         BAL   RLNK,MOVEIT
         FI    ON MEMBER PRESENCE.
*
*        THESE NEXT INSTRUCTIONS EXEMPLIFY THE REASON THAT
*        THE SYNTAX SHOULD HAVE THE MEMBERNAME OUTSIDE OF THE QUOTES.
*
         IF    PDSDSN,T       OK, CHECK AGAIN FOR DSN,
         IF    PDSQUOT,T      AND QUOTED.
         LA    R2,1           IF BOTH TRUE,
         LA    R3,=C''''      MOVE IN THAT ENDING QUOTE.
         BAL   RLNK,MOVEIT
         FI    ON QUOTED.
         FI    ON DSN PRESENCE.
         WONK  POSDSN
         BAL   RLNK,COMMA
         AH    RPCE,PCPOLNTH  ADVANCE TO NEXT PCE.
         SPACE 3
*        PROCESS AN IKJKEYWD--KEYWORD PARAMETERS.
*        RECURSION OCCURS HERE, IF PARM HAS SUBFIELDS.
         CASE  2              IKJKEYWD
         USING PCKWSECT,RPCE
         AH    RPDE,PCKWOFFS  GET A(PDE)
         AH    RPCE,PCKWLNTH  ADVANCE TO FIRST IKJNAME
         USING PCNMSECT,RPCE
         LH    R4,0(,RPDE)    GET VALUE.
         LTR   R4,R4          ANYTHING?
         IF    *,NZE
         LA    RFOUND,1(,RFOUND)   INCREMENT COUNTER.
         WHILE LOOKING FOR THE NAME.
         BCTR  R4,0           DECREMENT
         LTR   R4,R4          AND TEST.
         WTEST *,NZE
         BAL   RLNK,SKIPNAME
         LTR   R15,R15        RUN OUT OF NAMES?
         EXITIF *,NZE,EXIT=PDEERR
         ELIHW ON NAME LOOP.
         DO    MOVE IN KEYWORD VALUE.
         SR    R2,R2
         IC    R2,PCNMLNAM
         LA    R2,1(,R2)
         LR    R5,R2
         LA    R3,PCNMNAME
         BAL   RLNK,MOVEIT
         OD    KEYWORD NAME MOVED IN.
         IF    PNMSFLD,T      SUBFIELDS?
         DO    OK, LETS RECURSE.
         LH    R2,PCNMNAME(R5)     GET OFFSET TO SUBFIELD,
         LA    R2,2(,R2)      SKIP IKJSUBF,
         A     R2,PCL         MAKE ABSOLUTE.
         ST    R2,PARMLIST+4*3
         LA    R1,PARMLIST
         L     R15,=A(YCCUNPRS)
         BALR  R14,R15
         LTR   R15,R15
         EXITIF *,NZE,EXIT=RECURSE IF ERROR SOMEWHERE, KEEP GOING.
         OD    RECURSED.
         LTR   R0,R0          ANYTHING?
         IF    *,NZE          IF SO,GET LEADING DELIMITER
         LA    R2,1
         IF    PARMNEW,T      IF NEW FORMAT PARMS,
         LA    R3,=C'('       BEGINS WITH LEFT PAREN.
         ELSE  IF OLD FORMAT,
         CH    R0,=H'1'
         IF    *,EQ           IF ONE,
         LA    R3,=C'='       HAS THIS,
         ELSE IF MORE,
         LA    R2,2
         LA    R3,=C'=('      HAS THIS.
         FI    ON ONE OR MORE.
         FI    ON TYPE OF PARMS.
         BAL   RLNK,MOVEIT    MOVE IN BEGINNING DELIMITER.
         LH    R2,0(,R1)
         LA    R3,2(,R1)
         BAL   RLNK,MOVEIT      MOVE IN SUBPARMS.
         LA    R2,1
         LA    R3,=C')'
         IF    PARMNEW,T      NOW MOVE IN ENDING DELIM.
         BAL   RLNK,MOVEIT
         ELSE  IF OLD FORMAT,
         CH    R0,=H'1'       MORE THAN ONE?
         IF    *,GT           IF SO,
         BAL   RLNK,MOVEIT    MOVE IN RT PAREN.
         FI    ON MORE THAN ONE.
         FI    ONE PARM TYPE.
         FI    ON ANYTHING.
         DO    FREE PARM BUFFER FROM RECURSION.
         LH    R0,0(,R1)
         AH    R0,=H'2'
         ICM   R0,B'1000',=XL1'1'   SP 1.
         FREEMAIN R,LV=(0),A=(1)
         OD    FREED.
         FI    ON SUBFIELDS.
         BAL   RLNK,COMMA
         FI    ON KEYWORD GIVEN.
         WHILE SKIPPING REST OF IKJNAMES.
         BAL   RLNK,SKIPNAME
         LTR   R15,R15
         WTEST *,ZE
         ELIHW NAMES SKIPPED.
         SPACE 3
*        PROCESS AN IKJIDENT--NON-SPECIFIC POSITIONAL PARAMETERS.
         CASE  4              IKJIDENT
         USING PCIDSECT,RPCE
         USING PDIDSECT,RPDE
         DO    MOVE FIRST OR ONLY.
         AH    RPDE,PCIDOFFS
         BAL   RLNK,MOVEID
         OD    MOVED.
         IF    PCILIST,T     IF LIST,
         WHILE DOING THE LIST.
         L     RPDE,PDIDSECT+PDIDL GET POINTER TO NEXT..
         LTR   RPDE,RPDE
         WTEST *,NMI
         BAL   RLNK,COMMA     PUT IN A COMMA,
         BAL   RLNK,MOVEID    AND NEXT STRING.
         ELIHW ON IDENT LIST LOOP.
         FI    ON LIST.
         BAL   RLNK,COMMA     FINISH WITH A COMMA.
         AH    RPCE,PCIDLNTH  ADVANCE TO NEXT PCE.
         CASE  ELSE,EXIT=PCETYPE    DONT KNOW WHAT IT IS.
         BARG
         POOL  ON GRAND LOOP THROUGH PCES.
         TITLE 'ERROR EXITS, RETURN'
         ONEXIT POSTYPE
         LA    R15,16
         WONK  POSTYPE
         ONEXIT PDEERR
         LA    R15,12
         WONK  PDEERR
         ONEXIT PCETYPE
         LA    R15,8
         WONK  PCETYPE
         ONEXIT PCEERR
         LA    R15,4
         WONK  PCEERR
         WONK  RECURSE
         DO    IF ERROR OCCURRED, FREE OUR BUFFER.
         L     R0,LPARM
         L     R1,APARM
         ICM   R0,B'1000',=XL1'1'
         FREEMAIN R,LV=(0),A=(1)
         OD    BUFFER FREED.
         ONEXIT ALLDONE
         SR    R15,R15
         DO    FINISH PARM STRING.
         LTR   RFOUND,RFOUND  ANY NON-NULL?
         IF    *,ZE           MAKE ZERO PROCESSED.
         SR    RCOMMA,RCOMMA
         FI
         LTR   RCOMMA,RCOMMA  ANY?
         L     R3,APARM
         IF    *,ZE           IF NO PARMS,
         STH   RCOMMA,0(,R3)  MAKE LENGTH ZERO.
         ELSE  STRIP LAST COMMA.
         L     R2,NEXT        R2: ->NEXT
         SR    R2,R3          R2: NEXT-APARM=LENGTH+2
         SH    R2,=H'3'       R2: -3=LENGTH (STRIPPING LAST COMMA)
         STH   R2,0(,R3)
         FI
         DO    FREE UNUSED PORTION OF BUFFER.
         LH    R2,0(,R3)      R2: LENGTH
         LA    R1,9(R2,R3)    R1: LENGTH+2+7+APARM
         N     R1,=X'FFFFFFF8'     R1: MOD(R1,8)
         L     R0,LPARM       R0: LPARM
         AR    R0,R3          R0: LPARM+APARM
         SR    R0,R1          R0: LPARM+(APARM-CUREND)
         ICM   R0,B'1000',=XL1'1'   R0: =L(UNUSED)
         FREEMAIN R,LV=(0),A=(1)
         OD    FREED.
         OD    PARM STRING READY.
         DO    STORE RETURN VALUES.
         L     R2,SAVEAREA+4    GET -> CALLEES SAVE,
         ST    RCOMMA,12+4*2(,R2) RCOMMA INTO R0,
         ST    R3,12+4*3(,R2)     APARM INTO R1.
         OD    READY FOR RETURN.
         WONK  ALLDONE
         RRETURN RC=(15)
         TITLE 'INTERNAL SUBROUTINES'
         DO    MOVE AN IKJIDENT PARAMETER INTO STRING.
         USING PDIDSECT,RPDE
MOVEID   DS    0H
         IF    PIDPARM,T
         LA    RFOUND,1(,RFOUND)
         LH    R2,PDIDLPAR
         L     R3,PDIDPPAR
         B     MOVEIT
         ELSE IF NO PARM,
         BR    RLNK           RETURN NOW.
         FI    ON PARM PRESENCE.
         OD
         SPACE 3
         DO    MOVE IN A COMMA.
COMMA    LA    R2,1
         LA    R3,=C','
         LA    RCOMMA,1(,RCOMMA)   COUNT.
         OD    FALL THROUGH INTO MOVEIT.
         SPACE 3
         DO    MOVE AN ARBITRARY STRING INTO BUFFER.
MOVEIT   DS    0H
         WHILE GETTING A LONG ENOUGH BUFFER.
         C     R2,REM         ENOUGH SPACE IN THIS ONE?
         WTEST *,GT
         STM   R0,R6,SAVEAREA+12
         DO    GET A LONGER BUFFER.
         L     R0,LPARM
         AH    R0,=H'80'
         ICM   R0,B'1000',=XL1'1'
         GETMAIN R,LV=(0)
         OD    GOT NEW BUFFER.
         DO    MOVE PARMS INTO IT.
         L     R14,LPARM
         L     R5,APARM
         EX    R14,MOVEPRMS
         OD    MOVED.
         DO    SWAP BUFFER INFO, FREEMAIN.
         ST    R0,LPARM
         LR    R0,R14
         LR    R15,R1
         L     R1,APARM
         ST    R15,APARM
         ICM   R0,B'1000',=XL1'1'
         FREEMAIN R,LV=(0),A=(1)
         OD    BUFFERS SWAPPED.
         DO    ADJUST PARM STRING INFO.
         L     R5,REM
         LA    R5,80(,R5)
         ST    R5,REM         R5: REM
         L     R6,APARM       R6: APARM
         L     R4,LPARM       R4: LPARM
         SR    R4,R5          R4: LPARM-REM (=LENGTH+2)
         LA    R6,0(R4,R6)    R6:+APARM=NEXT
         ST    R6,NEXT
         OD    OK, ALL ADJUSTED.
         LM    R0,R6,SAVEAREA+12
         ELIHW AND LOOP.
         DO    ADJUST REMAINDER.
         L     R15,REM
         SR    R15,R2
         ST    R15,REM
         OD    ADJUSTED.
         DO    MOVE STRING.
         BCTR  R2,0
         L     R14,NEXT
         EX    R2,MOVEARB
         LA    R14,1(R2,R14)
         ST    R14,NEXT
         OD    MOVED.
         BR    RLNK           AND BACK.
         OD    ON MOVEIT ROUTINE.
         SPACE 3
         DO    SKIP AN IKJNAME PCE.
         USING PCNMSECT,RPCE
SKIPNAME SR    R15,R15
         IC    R15,0(,RPCE)   CHECK TO SEE IF IKJNAME.
         N     R15,=XL4'E0'
         C     R15,=XL4'60'
         IF    *,NE           IF NOT,
         LA    R15,4          RETURN THIS.
         ELSE
         SR    R15,R15
         AH    RPCE,PCNMLNTH
         FI
         BR    RLNK
         OD    ON SKIPNAME.
         SPACE 3
         FINAL
         SPACE 3
MOVEPRMS MVC   0(0,R1),0(R5)
MOVEARB  MVC   0(0,R14),0(R3)
         TITLE 'DSECTS'
DSECT    DSECT
SAVEAREA DS    18F
PCL      DS    F
PDL      DS    F
LAST     DS    F
APARM    DS    F
LPARM    DS    F
NEXT     DS    F
REM      DS    F
PARMLIST DS    5F
PARMNEW  DS    0BL100
FLAGS    DS    X
DSECTL   EQU   *-DSECT
         SPACE 3
PCPOSECT DSECT
         COPY  PCPOSECT
         SPACE 3
PDSTSECT DSECT
         COPY  PDSTSECT
         SPACE 3
PCKWSECT DSECT
         COPY  PCKWSECT
         SPACE 3
PCNMSECT DSECT
         COPY  PCNMSECT
         SPACE 3
PCIDSECT DSECT
         COPY  PCIDSECT
         SPACE 3
PDIDSECT DSECT
         COPY  PDIDSECT
         SPACE 3
PDDSSECT DSECT
         COPY  PDDSSECT
         END
