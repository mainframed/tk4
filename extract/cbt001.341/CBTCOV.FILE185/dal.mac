         TITLE 'SVC 99 INTERFACE WITH FULL BUILTIN ERROR HANDLING'
*
*     JOSH AUERBACH
*     JANUARY 23, 1978
*     LAST ALTERATION JANUARY 25, 1978
*     SEE PL/I ORIENTED DOCUMENTATION IN THE PL/I INCLUDE
*     DALBASIC
         PRINT NOGEN
DAL1     PLIXSET  BASE=R2,LAST=R12    ESTABLISH PL/I RELATED EQU'S
DAL      PLIXDENT  DSALEN=DSAEND-DSA   USUAL MINIMAL PL/I ENTRY
         USING DSA,RDSA
*                  WE MUST DO ONE OR TWO OTHER THINGS BECAUSE,
*                  AS WE WILL SEE PRESENTLY, THIS DSA IS GOING TO
*                  BE SCRUTINIZED BY THE GOTO ROUTINE, AS WELL AS
*                  VARIOUS ERROR HANDLING ROUTINES
         MVI   DSA+1,0 SET SECOND FLAG BYTE OF DSA TO ZEROS
         MVC   DSA+84(2),DSA+86    SET BLOCK ENABLE CELL EQUAL TO
*                      VALUE OF CURRENT ENABLE CELL
         MVC   DSA+80(4),DSA+76    SET END OF PROLOGUE NAB EQUAL
*                      TO VALUE OF NAB
         ST    R5,DSA+88   ESTABLISH STATIC BACKCHAIN
         LA    RDSA,0(RDSA)    CLEAR HIGH BYTE OF R13--MUST DO!
         SPACE 3
         LA    R3,S99RB    R3->SVC 99 REQUEST BLOCK
         ST    R3,S99RBPTR MAKE IN-CORE POINTER TO RB
         OI    S99RBPTR,X'80'  FLAG ON
         XC    S99RB(20),S99RB CLEAR REQUEST BLOCK
         MVI   S99RBLN,20  SET LENGTH BYTE OF RB
         L     R3,0(R1)    R3->ARG1, REQUEST VERB
         LH    R3,0(R3)    R3 HAS VERB
         STC   R3,S99VERB  PUT IN RB
         LA    R3,S99TUPL  R3->TEXT UNIT POINTER LIST
         ST    R3,S99TXTPP PUT IN RB
         LA    R4,4(R1)    R4->REMAINING PORTION OF ARGLIST
GETPTR   EQU   *   WE NOW LOOP THROUGH REST OF ARGLIST, ACQUIRING
*                  TEXT UNIT POINTERS AND STOWING THEM IN OUR LIST
         L     R5,0(R4)    R5->LOCATOR, ONE TEXT UNIT
         CLC   0(4,R5),=X'FF000000' IS LOCATOR NULL POINTER?
         BE    FORM2   IF SO, WE HAVE FORM TWO OF THE ARGUMENT LIST
         MVC   0(4,R3),0(R5)   MOVE ADDRESS FROM LOCATOR TO OUR LIST
         TM    0(R4),X'80' TEST FOR LAST ARGUMENT
         BO    FLAGOUT GET OUT OF THIS LOOP, IF APPROPRIATE
         LA    R3,4(R3)    OTHERWISE, INCREASE ON OUR OWN LIST,
         LA    R4,4(R4)    AND ON THE ARGUMENT LIST,
         B     GETPTR  AND DO THE WHOLE THING AGAIN
FORM2    L     R4,4(R4)    FOR FORM2, R4->LOCATOR
         L     R4,0(R4)    R4->USER-SUPPLIED S99TUPL
         ST    R4,S99TXTPP PUT IN RB
         B     ISSUE
FLAGOUT  OI    0(R3),X'80' FLAG END OF TU POINTER LIST
ISSUE    LA    R1,S99RBPTR R1->PTR->SVC 99 RB
         DYNALLOC  ISSUE DYNALLOC SVC
         LTR   R15,R15     TEST FOR SUCCESS
         BNZ   ERROR
EXIT     PLIXEXT       ,   RETURN TO CALLER
         EJECT
*     ERROR HANDLING SECTION
ERROR    EQU   *
         ST    R15,RETCODE SAVE RETURN CODE
         L     R3,PRVADDR(RTCA)    R3->PSEUDO-REGISTER VECTOR
         A     R3,DALWRKOF R3->DALWORK PSEUDO-REGISTER
         STH   R15,0(R3)   STORE RETURN CODE IN PR
         MVC   2(4,R3),S99ERROR    PUT ERROR AND INFO CODES ALSO
*                  NOW, WE SIGNAL CONDITION(DALFAIL) SO, PERHAPS
*                  THE USER WILL HANDLE EVERYTHING.
         LA    R1,DALFIND  R1->ERROR INDICATOR FOR CONDITION(DALFAIL)
         L     R15,ERRHANDL(RTCA)  GET ERROR HANDLER ADDRESS
         BALR  R14,R15     CALL ERROR HANDLER
*                  IF WE GET CONTROL BACK, THEN EITHER USER DIDN'T
*                  HAVE A DALFAIL ON UNIT OR HE RETURNED FROM IT
*                  WE NOW ISSUE DIAGNOSTICS, AND THEN SIGNAL ERROR
*
         LA    R3,S99RB    R3->SVC 99 REQ. BLOCK
         ST    R3,DFS99RBP PLACE IN DAIRFAIL PARM LIST
         LA    R3,RETCODE  R3->FULLWORD RETURN CODE
         ST    R3,DFRCP    PLACE IN DAIRFAIL PARM LIST
         LA    R3,=F'0'    R3->FULLWORD ZERO
         ST    R3,DFJEFF02 PLACE IN DAIRFAIL PARMLIST TO INDICATE ADDR
*                  OF IKJEFF02 IS UNKNOWN
         LA    R3,DFFLAGS  R3->TWO FLAG BYTES FOR DAIRFAIL
         ST    R3,DFIDP    PLACE IN PARM LIST
         MVI   DFFLAGS+1,X'32' INDICATE SVC99 TO DAIRFAIL
*                  GET PSCB ADDRESS
         L     R3,PSATOLD  R3->TCB
         L     R3,180(R3)  R3->JSCB
         L     R3,264(R3)  R3->PSCB
         C     R3,=F'0'    IF WE DON'T HAVE A PSCB ADDRESS,
*                  THEN WE AREN'T RUNNING UNDER TMP AND MUST
*                  USE BATCH ERROR HANDLING PROCEDURE
         BE    BATCH
*                  UNDER TMP, WE WILL USE IKJEFF18 TO ANALYZE ERROR,
*                  USING THE PUTLINE OPTION TO ISSUE IT DIRECT TO USER
*
*                  FIRST, FILL IN DUMMY CPPL
         LA    R4,DMYCBUF  R4->DUMMY COMMAND BUFFER
         ST    R4,CPPLCBUF PLACE IN CPPL
         MVC   CPPLUPT,52(R3)  MOVE UPT ADDRESS FROM PSCB TO CPPL
         L     R4,48(R3)   R4->RLGB
         ST    R3,CPPLPSCB FILL IN PSCB ADDRESS
         MVC   CPPLECT,256(R4)    AND ECT ADDRESS
         LA    R3,CPPL R3->CPPL
         ST    R3,DFCPPLP  PLACE IN DAIRFAIL PARMLIST
         MVI   DFFLAGS,B'00000000' INDICATE PUTLINE, NO MESSAGE EXTR.
         OI    DFCPPLP,X'80'
         LA    R1,DFS99RBP R1->DAIRFAIL PARMS
         LINK  SF=(E,DAIRFAIL) CALL DAIRFAIL ROUTINE
         B     ERREXIT
         EJECT
*
*     BATCH ERROR HANDLING SECTION
BATCH    EQU   *
*
*                      THE LOGIC OF THIS SECTION IS AS FOLLOWS:
*                  FIRST, WE ESTABLISH AN UNDEFINEDFILE ON UNIT FOR
*                  SYSPRINT, THEN, WE CALL IBMBSIOE TO
*                  PREPARE TO PUT LIST ON SYSPRINT.  IF WE
*                  SUCCEED, WE PROCEED TO CALL IKJEFF18 TO
*                  EXTRACT THE ERROR MESSAGE(S) AND CONTINUE
*                  THE PUT LIST PROCESS TO PUT THE MESSAGES
*                  ON SYSPRINT.  ON THE OTHER HAND, IF
*                  THE UNDEFINEDFILE EXIT IS TAKEN, WE
*                  USE THE WRITE-TO-PROGRAMMER OPTION OF
*                  IKJEFF18.
         OI    DSA,X'20'   TURN ON BIT INDICATING PRESENCE OF
*                  DYNAMIC ONCB
         LA    R3,ONCB R3->ONCB FOR UNDEFINEDFILE(SYSPRINT)
         ST    R3,DSA+96   PUT IN STANDARD PLACE FOR LAST DYNAMIC
*                  ONCB
         XC    ONCB(16),ONCB   CLEAR ONCB
         L     R3,=V(SYSPINT)  R3->SYSPRINT DCLCB
         ST    R3,ONCB+4   PUT DCLCB ADDRESS IN ONCB
         LA    R3,LABCONST R3->LABEL CONSTANT FOR WTP
         ST    R3,LABVAR   STORE IN LABEL VARIABLE
         ST    RDSA,LABVAR+4   ALSO PUT DSA ADDRESS IN LAB. VAR
         LA    R3,LABVAR   R3->LABEL VARIABLE
         ST    R3,LABVARAD PUT LABEL VARIABLE ADDRESS IN A PLACE
         LA    R3,LABVARAD-DSA GET OFFSET OF LABVARAD WITHIN DSA
         ST    R3,ONCB+12  PUT OFFSET IN ONCB
         MVI   ONCB+8,X'12'    PUT UNDEFINEDFILE CODE IN ONCB
         MVI   ONCB+9,X'36'    INDICATE ENABLEMENT, ESTABLISHMENT,
*                  AND FACT THAT IT IS GOTO ONLY ONUNIT
*              ALL OF THE WEIRD STUFF WE JUST DID IS EQUIVALENT
*              TO "ON UNDEFINEDFILE(SYSPRINT)GO TO WTP;"
*
*
         LA    R3,SIOCB    R3->STREAM IO CONTROL BLOCK
         MVI   STYP,X'40'   SET CODE INDICATING PUT LIST
         ST    R3,SIOCBPTR PLACE IN THREE WORD LIST FOR IBMBSIOE
         L     R3,=V(SYSPINT)
         ST    R3,DCLCBPTR FIRST WORD POINTS TO DCLCB
         LA    R3,=F'1'
         ST    R3,WHATEVER    YOUR GUESS IS AS GOOD AS MINE
*                  AS TO WHAT'S GOING ON...COURTESY PL/I COMPILED CODE
         OI    WHATEVER,X'80'
         LA    R1,DCLCBPTR     R1->THREE WORD LIST
         L     R15,=V(IBMBSIOE)
         BALR  R14,R15
*
*                  IF WE GET CNTRL BACK HERE, THE ONUNIT WAS NOT TAKEN
*                  MEANING SYSPRINT IS KOSHER, AND WE PROCEED
         LA    R3,DFBUFS   R3->BUFFERS TO CONTAIN MESSAGES
         ST    R3,DFBUFP   PLACE IN DAIRFAIL PARM LIST
         MVI   DFFLAGS,B'01000000' ASK FOR EXTRACT MESSAGE ONLY
         OI    DFBUFP,X'80'
         LA    R1,DFS99RBP R1->DAIRFAIL PARMS
         LINK  SF=(E,DAIRFAIL)     LINK TO DAIRFAIL
         LH    R3,DFBUFL1  GET LENGTH OF FIRST BUFFER
         CH    R3,=H'0'    IS IT ZERO?
         BE    NOTHING      IF SO, NOTHING TO ISSUE
         XC    LOCATOR,LOCATOR  CLEAR LOCATOR
         SH    R3,=H'4'    SUBTRACT FOUR FROM LENGTH TO ACCOUNT
*                  FOR PREFIXES
         STH   R3,LOCATOR+4    PLACE LENGTH IN LOCATOR
         LA    R3,DFBUFT1  R3->TEXT OF FIRST BUFFER
         ST    R3,LOCATOR  PLACE IN LOCATOR
         LA    R3,LOCATOR  R3->LOCATOR
         ST    R3,SSRC PLACE IN SIOCB
         LA    R3,DED  R3->DATA ELEMENT DESCRIPTOR
         ST    R3,SSDD  PLACE IN SIOCB
         LA    R1,SIOCB
         L     R15,=V(IBMBSLOA)
         BALR  R14,R15 ISSUE A PUT LIST FOR SYSPRINT
*                  DEQUEUE, OR WHATEVER IBMBSIOT DOES
         LA    R1,SIOCB
         L     R15,=V(IBMBSIOT)
         BALR  R14,R15
*                  REPEAT SUBSTANTIALLY THE SAME SEQ. FOR 2ND MESSAGE
         LA    R1,DCLCBPTR
         L     R15,=V(IBMBSIOE)
         BALR  R14,R15
         LH    R3,DFBUFL2
         CH    R3,=H'0'
         BE    NOTHING
         SH    R3,=H'4'
         STH   R3,LOCATOR+4
         LA    R3,DFBUFT2
         ST    R3,LOCATOR
         LA    R3,LOCATOR
         ST    R3,SSRC
         LA    R1,SIOCB
         L     R15,=V(IBMBSLOA)
         BALR  R14,R15
NOTHING  LA    R1,SIOCB    FINAL DEQUEUE
         L     R15,=V(IBMBSIOT)
         BALR  R14,R15
         B     ERREXIT
         SPACE
WTP      EQU   *   HERE IS WHERE WE
*                  END UP IF SYSPRINT IS UNDEFINEDFILE
         MVI   DFFLAGS,B'10000000'  REQUEST WRITE-TO PROGRAMMER OPTION
         LA    R1,DFS99RBP R1->DAIRFAIL PARMS
         OI    DFIDP,X'80'
         LINK  SF=(E,DAIRFAIL)
         SPACE
ERREXIT  EQU   * THE LAST THING WE DO IS SIGNAL ERROR
         LA    R1,SIGERIND R1->INDICATOR FOR SIGNAL ERROR
         L     R15,ERRHANDL(RTCA)
         BALR  R14,R15  CALL ERROR HANDLER
*                  WE SHOULDN'T GET CONTROL BACK, BUT JUST IS CASE
         B     EXIT
*
*   END OF EXECUTABLE CODE FOR DAL ENTRY
         EJECT
DALDIAG  PLIXDENT  ,   THIS ENTRY ALLOWS RETRIEVAL OF RETURN CODES
         LM    R3,R5,0(R1) GET THREE ARGS
         L     R6,PRVADDR(RTCA)    R6->PRV
         A     R6,DALWRKOF R6->DALWORK PR
         MVC   0(2,R3),0(R6)
         MVC   0(2,R4),2(R6)
         MVC   0(2,R6),4(R6)   PLACE EACH CODE IN AN ARG
         PLIXEXT
         EJECT
*   CONSTANTS (STATIC)
*
DALFIND  DS    0F  INDICATOR FOR SIGNAL CONDTION(DALFAIL)
         DC    X'0F000000'
         DC    V(DALFAIL)
*
PRVADDR  EQU   4   OFFSET IN TCA OF WORD CONTAINING ADDRESS OF PRV
ERRHANDL EQU   120 OFFSET OF ERROR HANDLER ADDRESS IN TCA
PSATOLD  EQU   540 OFFSET IN PSA OF ADDRESS OF DISPATCHED TCB
DMYCBUF  DC    H'4'
         DC    H'0'    A DUMMY COMMAND BUFFER
DAIRFAIL LINK  EP=IKJEFF18,SF=L    LINK MACRO PARAMETER LIST, DAIRFAIL
LABCONST DC    A(WTP)  LABEL CONSTANT FOR GOTO
         DC    A(DAL1) NEEDS BASE REGISTER VALUE ALSO
DED      DC    X'2000' DATA ELEMENT DESCRIPTOR FOR FIXED LENGTH STRING
SIGERIND DS    0F  ERROR INDICATOR FOR SIGNAL ERROR
         DC    X'0C000000'
*        THE FOLLOWING VCONS (COURTESY PL/I COMPILED CODE) ARE
*  PROBABLY HERE TO PROMOTE WXTRNS IN LIBRARY ROUTINES
         DC    V(IBMBOCLA)
         DC    V(IBMBOCLC)
         DC    V(IBMBSPLA)
         DC    V(IBMBSIOA)
*
DALWORK  DXD   3H  PSEUDOREGISTER CONTAINING RETURN CODES
DALWRKOF DC    Q(DALWORK)  LINKAGE EDITOR WILL PUT OFFSET HERE
         LTORG ,   LITERALS
*
*   WE NEED TWO OTHER CSECTS, JUST TO MAKE SURE
SYSPINT  CSECT
         DC    X'FFFFFFFC41201000'
         DC    X'02D70F0000000000'
         DC    X'000000140008'
         DC    C'SYSPRINT'
         DC    H'0'
*  ALL OF THE ABOVE, COURTESY PL/I COMPILED CODE
DALFAIL  CSECT
         DC    X'07'
         DC    C'DALFAIL'
         EJECT
*  DSA MAPPING, CONTAINS ALL CONSTANTS AND AREAS WHICH MUST
*  NOT BE STATIC TO PRESERVE REENTRANCY
         PLIXDSA
*
*   THE FOLLOWING FIELDS ARE TAKEN FROM THE SVC99 MAPPING MACRO
*   IEFZB4D0.  THE MACRO ITSELF IS NOT USED BECAUSE ONLY
*   A FEW FIELDS ARE NEEDED AND THE DSECT STRUCTURE OF THE MACRO IS
*   RATHER RIGID
S99RBPTR DS    1A
S99RB    DS    0A
S99RBLN  DS    1C
S99VERB  DS    1C
S99FLAG1 DS    1H
S99ERROR DS    1H
S99INFO  DS    1H
S99TXTPP DS    1A
         DS    1F
S99FLAG2 DS    1F
S99TUPL  DS    32A WE LEAVE ROOM FOR UP TO 32 TEXT PTRS
*   END OF IEFZB400 FIELDS
RETCODE  DS    1F  RETURN CODE STORAGE FROM SVC99
         IKJEFFDF      ,   MAPS PARM LIST FOR DAIRFAIL
DFFLAGS  DS    1H  TWO BYTES OF FLAGS FOR DAIRFAIL
CPPL     DS    0A  COMMAND PROCESSOR PARAMETER LIST (DUMMY)
CPPLCBUF DS    1A
CPPLUPT  DS    1A
CPPLPSCB DS    1A
CPPLECT  DS    1A
ONCB     DS    4A  ONCB FOR UNDEFINEDFILE(SYSPRINT)
LABVAR   DS    2A  LABEL VARIABLE FOR GOTO ONLY ONUNIT
LABVARAD DS    1F  PLACE FOR STORAGE OF ADDRESS OF LABVAR
DCLCBPTR DS    1A  THREE WORD ARGLIST FOR IBMBSIOE
SIOCBPTR DS    1A
WHATEVER DS    1A
SIOCB    DS    0A  STREAM IO CONTROL BLOCK
SSRC     DS    1A
SSDD     DS    1A
         DS    2A
         DS    1C
STYP     DS    1C
         DS    26C
LOCATOR  DS    1D  LOCATOR FOR FIXED LENGTH CHAR STRING
DSAEND   EQU   *   ,MARKS END OF DSA
         END
