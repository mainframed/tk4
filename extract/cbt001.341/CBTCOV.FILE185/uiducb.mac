S249     TITLE 'UIDUCB -- GIVEN A USERID, FIND A UCB'
UIDUCB   CSECT ,
         SPACE 3
         YREGS
         EJECT ,
         PRINT NOGEN
         SPACE 3
CVT      DSECT ,
         CVT   ,                   COMMUNICATIONS VECTOR TABLE
         SPACE 3
         IKJTCB ,                  TASK CONTROL BLOCK
         SPACE 3
         IEZJSCB ,                 JOB STEP CONTROL BLOCK
         SPACE 3
PSCB     DSECT ,                   PROTECTED STEP CONTROL BLOCK
PSCBUSER DS    CL7                 TSO USERID
         SPACE 3
         IKJTSCVT ,                TIME SHARING COMMUNICATIONS VECTOR  *
                                   TABLE
         SPACE 3
         IKJTJB ,                  TIMESHARING JOB BLOCK
         SPACE 3
TSB      DSECT ,                   TERMINAL STATUS BLOCK
         ORG   TSB+24
TSBQCB   DS    A                   --> TCAM QCB
         SPACE 3
QCB      DSECT ,                   TCAM QUEUE CONTROL BLOCK
         ORG   QCB+32
QCBRELLN DS    0FL1                RELATIVE LINE NUMBER
QCBDCBAD DS    A                   --> LINE DCB
         SPACE 3
         IHADCB DSORG=TX           TCAM LINE GROUP DATA CONTROL BLOCK
         SPACE 3
LCB      DSECT ,                   TCAM LINE CONTROL BLOCK
         ORG   LCB+32
LCBIOB   DS    0F                  LINE IOB
         ORG   LCB+64
LCBUCBX  DS    0FL1                INDEX TO DEB UCB POINTER
         SPACE 3
         IEZDEB ,                  DATA EXTENT BLOCK
         SPACE 3
         PRINT ON,GEN,NODATA
         EJECT ,
*        INPUTS:
*              R1 - =0 ==> USE CURRENT USERID
*                   ^=0 ==> POINTS TO A USERID TO USE
*              R4 - POINTS TO THE CURRENT TCB
*              R6 - POINTS TO OUR ENTRY ADDRESS
*              R14 - POINTS TO A RETURN ADDRESS
*
*        EXITS:
*              0(,R14) - ALWAYS
*
*        OUTPUTS:
*              R0 - UNCHANGED
*              R1 - IF R15=0 THEN R1 POINTS TO THE USER'S TERMINAL UCB;
*                   OTHERWISE, R1 REMAINS UNCHANGED
*              R15 - SET TO 0 IF THE USER'S TERMINAL UCB IS FOUND;
*                    OTHERWISE, SET TO 4
         SPACE 1
UIDUCB   CSECT ,
         ENTRY IGC252
         USING IGC252,R6           LOCAL BASE
         USING TCB,R4              TCB POINTER
IGC252   LA    R15,4               PRESET ERROR RETURN CODE
         LTR   R8,R1               GET USERID PTR; ANY?
         BNZ   UIDGIVEN            YES, PROCEED
         L     R8,TCBJSCB          NO, --> JSCB
         ICM   R8,7,JSCBPSCB+1-IEZJSCB(R8) --> PSCB; ANY?
         BCR   8,R14               NO, RETURN WITH ERROR
         LA    R8,PSCBUSER-PSCB(,R8) YES, --> USERID
UIDGIVEN L     R9,CVTPTR           --> CVT
         LA    R9,CVTTSCVT-CVT(,R9) --> TSCVT
         CLM   R9,7,1(R9)          POINTER --> ITSELF?
         BCR   8,R14               YES, TSO NOT UP; RETURN WITH ERROR
         ICM   R9,7,1(R9)          NO, --> TSCVT; ANY?
         BCR   8,R14               NO, TSO NOT UP; RETURN WITH ERROR
         LH    R11,TSCVTNTJ-TSCVT(,R9) GET # INITIATED TJB'S
         LTR   R11,R11             ANY?
         BCR   12,R14              NO, RETURN WITH ERROR
         L     R9,TSCVTTJB-TSCVT(,R9) YES, --> 1ST - 1 TJB
         USING TJB,R9              DECLARE TJB BASE
TJBSCAN  LA    R9,TJBEND           --> NEXT TJB
         TM    TJBSTAT,TJBNJB      TJB IDLE?
         BNZ   TJBNEXT             YES, SKIP TO NEXT TJB
         CLC   0(7,R8),TJBUSER     NO, RIGHT TJB?
         BE    TJBFOUND            YES, BREAK OUT
TJBNEXT  BCT   R11,TJBSCAN         NO, LOOP FOR NEXT TJB (IF ANY)
         BR    R14                 USER ^ LOGGED ON; RETURN WITH ERROR
TJBFOUND ICM   R9,7,TJBTSB+1       --> TSB; ANY?
         DROP  R9                  (RELEASE TJB BASE)
         BCR   8,R14               NO, RETURN WITH ERROR
         L     R9,TSBQCB-TSB(,R9)  YES, --> TCAM QCB
         SR    R11,R11             CLEAR
         IC    R11,QCBRELLN-QCB(,R9) GET RELATIVE LINE NUMBER
         L     R9,QCBDCBAD-QCB(,R9) --> LINE DCB
         USING IHADCB,R9           DECLARE DCB BASE
         SR    R10,R10             CLEAR
         IC    R10,DCBEIOBX        GET LCB SIZE
         MR    R10,R10             GET OFFSET TO RIGHT IOB
         A     R11,DCBIOBAD        --> RIGHT IOB (WITHIN A LCB)
         IC    R10,LCBUCBX-LCBIOB(,R11) GET DEB UCB POINTR INDEX
         SLL   R10,2               CONVERT TO AN OFFSET
         A     R10,DCBDEBAD        ADD IN A BASE
         L     R1,DEBSUCBA-DEBBASIC(,R10) GET UCB POINTER (AT LAST)
         LA    R1,0(,R1)           CLEAR HI-BYTE
         SR    R15,R15             CLEAR THE RETURN CODE
         BR    R14                 RETURN TO SVC FLIH
         SPACE 3
         END   ,
