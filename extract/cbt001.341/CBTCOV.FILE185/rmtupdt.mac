$.RMT360,1                                                        U0019
&ADAPT=0A2
&CORESIZ=64                                                       U0019
$.UPDATE                                                          U0019
&NAME    L     &REG,&ADDR                                         U0019
&NAME    DS    0H                                                 U0019
&NAME    ST    &REG,&ADDR                                         U0019
         L     &WR,=A(&SOC)                                       U0019
         CLC   0(4,&WR),=F'0'                                     U0019
         L     &WR,0(0,&WR)                                       U0019
         B     *-14                                               U0019
         ST    &R,0(0,&WR)                                        U0019
         MVC   0(4,&R),=F'0'                                      U0019
./       DELET F1108000,F1108000                                  U0019
         TM    TCTECB,X'02'                                       U0019
         BO    &ERR                                               U0019
./       DELET F1112000,F1112000                                  U0019
         TM    TCTECB,X'01'     IS IT EOF                         U0019
         BO    &EOF                                               U0019
         MVC   0(4,&R),&SOC                                       U0019
         ST    &R,&SOC                                            U0019
$WTORCOM B     WTORPROC                                           U0019
         NOP   $INTRUPT                                           U0019
WTORECK  TM    WTORECB,X'40'                                      U0019
         BZ    RDRECBCK                                           U0019
         XC    WTORECB,WTORECB                                    U0019
         OI    $WTORCOM+1,X'F0'                                   U0019
RDRECBCK TM    RDRECB,X'40'                                       U0019
         BO    RDRDONE                                            U0019
PCHECBCK TM    PCHECB,X'40'                                       U0019
         BO    PCHDONE                                            U0019
PRTECBCK TM    PRTECB,X'40'                                       U0019
         BO    PRTDONE                                            U0019
ADAECBCK TM    ADAECB,X'40'                                       U0019
         BO    ADADONE                                            U0019
TIMECHK  TM    TIMECB,X'40'                                       U0019
         BO    TIMEDONE                                           U0019
ALLCHK   CLC   $START(36),$ALLOFF   ARE ALL BRANCHES NO-OPED?     U0019
         BNE   $START               IF NO GO AROUND AGAIN         U0019
         WAIT  1,ECBLIST=ECBLIST    WAIT FOR SOMEBODY             U0019
         B     WTORECK              GO FIND WHO WOKE US UP        U0019
RDRDONE  OI    $RCOMM1+1,X'F0'                                    U0019
         L     R8,RDRECB+16               LOAD IOB ADDRESS        U0019
         OC    RCTECB,12(R8)              OR IN CSW STATUS        U0019
         NI    RCTECB,X'EF'               TURN OFF BUSY           U0019
         B     PCHECBCK                                           U0019
PCHDONE  OI    $UCOMM1+1,X'F0'      OPEN GATE                     U0019
         L     R8,PCHECB+16         GET IOB ADDRESS               U0019
         OC    UCTECB,12(R8)        OR IN CSW STATUS              U0019
         NI    UCTECB,X'EF'         TURN OFF BUSY                 U0019
         B     PRTECBCK                                           U0019
PRTDONE  OI    $PCOMM1+1,X'F0'      OPEN GATE                     U0019
         L     R8,PRTECB+16         GET IOB ADDRESS               U0019
         OC    PCTECB,12(R8)        OR IN CSW STATUS              U0019
         NI    PCTECB,X'EF'       RESET BUSY FLAG                 U0019
         B     ADAECBCK                                           U0019
ADADONE  OI    $COMCOM+5,X'F0'    OPEN GATE                       U0019
         B     GOLOGIT                                            U0019
LOGITBK  XC    ADAECB,ADAECB      CLEAR ECB                       U0019
         B     TIMECHK                                            U0019
TIMEDONE XC    TIMECB,TIMECB                                      U0019
         B     $TIMBACK           GO SEND RESPONSE TO HASP        U0019
         DS    0F                                                 U0019
ECBLIST  DC    A(RDRECB)           ECBLIST                        U0019
         DC    A(PCHECB)            .     .     .                 U0019
         DC    A(TIMECB)             .     .     .                U0019
         DC    A(WTORECB)             .     .     .               U0019
         DC    A(PRTECB)               .     .     .              U0019
         DC    X'80'                    .     .     .             U0019
         DC    AL3(ADAECB)               .     .     .            U0019
$ALLOFF  NOP   $CONTROL         DUMMY COMMUTATOR                  U0019
         NOP   $TPGET               TO COMPARE FOR ALL NO-OPS     U0019
         NOP   $PCOM1                 -                           U0019
         NOP   $RCOM1                     -                       U0019
         NOP   $UCOM1                      -                      U0019
         NOP   $WCOM1                       -                     U0019
         NOP   WTORPROC                      -                    U0019
         NOP   $COMSUP                        -                   U0019
         NOP   $INTRUPT                        -                  U0019
GOLOGIT  STM   14,15,KRSAV                                        U0019
         L     R14,CBUFFER                                        U0019
         LA    R14,7(R14)                                         U0019
         BAL   R15,KLOGIT                                         U0019
         LM    R14,R15,KRSAV                                      U0019
         B     LOGITBK                                            U0019
KRSAV    DC    2F'0'                                              U0019
WTORECB  DC    F'0'                                               U0019
&GEN     SETC  'GEN'                                              U0019
./       DELET F3452000,F3452000                             YCAW U0019
./       DELET F3676000,F3770000                                  U0019
./       DELET F3860000,F3860000                                  U0019
         STM   14,12,12(13)         STANDARD                      U0019
         BALR  R3,0                      LINKAGE                  U0019
         USING *,R3,R4,R5,R6                   STUFF              U0019
         LA    R4,4095                              -             U0019
         LA    R4,1(0,R4)                            -            U0019
         LA    R5,0(R4,R4)                            -           U0019
         LA    R6,0(R4,R5)                   -                    U0019
         AR    R6,R3                          -                   U0019
         AR    R5,R3                           -                  U0019
         AR    R4,R3                            -                 U0019
         L     R1,0(R1)     GET PARM POINTER                      U0019
         LH    R2,0(R1)     LOAD PARM BYTE COUNT                  U0019
         SH    R2,=H'1'     REDUCE BY 1 FOR MOVE INST.            U0019
         STC   R2,PARMOV+1  PUT COUNT IN MOVE INST.               U0019
PARMOV   MVC   SIGNON(1),2(R1)  MOVE THE PARM TO SIGNON CARD      U0019
         OPEN  (READR)                                            U0019
         OPEN  (ADAPTR)                                           U0019
         OI    ADAPTR+44,X'0C'       NO OS ERROR RECOVERY ON ADAPTU0019
         OPEN  (PUNCH,(OUTPUT))                                   U0019
         OPEN  (P,(OUTPUT))                                       U0019
         OPEN  (PRINTR,(OUTPUT))                                  U0019
         ST    13,KSAV13        SAVE 13 FOR OS RETURN             U0019
         SR    R10,R10                                            U0019
         LH    R11,READR+62   GET BLKSIZE FROM DCB                U0019
         D     R10,=F'80'      CHECK THAT BLOCK SIZE IS           U0019
         LTR   R10,R10            A MULTIPLE OF 80                U0019
         BNZ   BADBLOCK        IF NOT GO QUIT                     U0019
         SR    R0,R0                                              U0019
         LH    R0,READR+62     GET BLKSIZE FROM DCB FOR GETMAIN   U0019
         GETMAIN R,LV=(0)                                         U0019
         ST    R1,RDRECB+12    SAVE BUFFER ADDRESS IN DECB        U0019
         B     INEWTABL                                           U0019
BADBLOCK WTO   'READER BLOCK SIZE NOT A MULTIPLE OF 80'           U0019
         B     EOJ  GO HOME SON..YOU BLEW IT                      U0019
KSAV13   DC    F'0'                                               U0019
         DS    0D                                                 U0019
TIMEXIT  STM   14,12,12(13)      SAVE TIME REGS                   U0019
         ST    13,12(15)         SAVE REG 15                      U0019
         B     30(15)            BRANCH AROUND CONSTANTS          U0019
         DC    F'0'              R15 SAVE AREA                    U0019
         DC    A(TIMECB)       TIME ECB POINTER                   U0019
         L     13,12(15)       RESTORE REGS FOR RETURN FROM TIMER U0019
         LM    14,12,12(13)      _                                U0019
         BR    14                 END OF TIME EXIT                U0019
         L     11,16(15)       LOAD POINTER TO ECB                U0019
         MVI   5(11),X'00'     CLEAR SWITCH                       U0019
         CLI   4(11),X'FF'     CHECK OTHER SWITCH                 U0019
         BE    20(15)          IF THERE HAS BEEN LINE ACTIVITY SINU0019
         LR    8,15              LAST STIMER, DONT POST..OTHERWISEU0019
         POST  (11)                 POST TIMECB TO HANDSHAKE WITH U0019
         LR    15,8       BACK TO RETURN                          U0019
         B     20(15)                                             U0019
         CNOP  0,4                                                 KEK
         WRITE PRTECB,SF,PRINTR,PRTLINE,'S',,,,,MF=L              U0019
         MVI   PRTLINE+1,C' '                CLEAR                U0019
         MVC   PRTLINE+2(131),PRTLINE+1            PRINTLINE      U0019
         LH    R9,TANKCNT                    SET NUM OF BYTES     U0019
         SH    R9,=H'1'                         INTO              U0019
         STC   R9,IOMOV+1                           MOVE INST     U0019
IOMOV    MVC   PRTLINE+1(132),TANKDATA       MOVE DATA TO PRINT   U0019
         ST    R8,TANKSV                                          U0019
./       DELET F4534000,F4534000                                  U0019
         STC   R9,PRTLINE                                         U0019
         BZ    KNOTIMM               IF NOT AN IMMEDIATE SPACE, GOU0019
         OI    PRTLINE,PCCOP         MOVE IMMEDIATE PRINT CODE IN U0019
         STM   R13,R2,IOSAV          DO IMMEDIATE                 U0019
         LA    R13,SAVEAREA               PRINT I/O               U0019
         MVI   PCTECB,X'10'          SHOW PRINT BUSY              U0019
         WRITE PRTECB,SF,PRINTR,PRTLINE,'S',,,,,MF=E              U0019
         LM    R13,R2,IOSAV                                       U0019
         $CHECK P                     WAIT FOR ECB TO BE POSTED   U0019
         STM   R13,R2,IOSAV                                       U0019
         LA    R13,SAVEAREA                                       U0019
         CHECK PRTECB          DO OS CHECK                        U0019
         LM    R13,R2,IOSAV                                       U0019
         XC    PRTECB,PRTECB    NOW CLEAR ECB                     U0019
         IC    R9,=AL1(POPCODEI)                                  U0019
KNOTIMM  STC   R9,PRTLINE              STORE CONTROL CHARACTER    U0019
         STM   R13,R2,IOSAV                                       U0019
         OI    PRTLINE,X'01'           OR IN 1 TO MAKE CTL CHAR COU0019
         LA    R13,SAVEAREA                                       U0019
         MVI   PCTECB,X'10'             SHOW PRINT BUSY           U0019
         WRITE PRTECB,SF,PRINTR,PRTLINE,'S',,,,,MF=E              U0019
         LM    R13,R2,IOSAV                                       U0019
         $CHECK P                      WAIT FOR ECB TO BE POSTED  U0019
         STM   R13,R2,IOSAV                                       U0019
         LA    R13,SAVEAREA                                       U0019
         CHECK PRTECB          DO OS CHECK FOR VOLUME SWITCH,ETC  U0019
         LM    R13,R2,IOSAV                                       U0019
         XC    PRTECB,PRTECB              DO OS CHECK             U0019
         L     R8,TANKSV                                          U0019
         B     PFREE                                              U0019
PRTLINE  DC    CL133' '                                           U0019
TANKSV   DC    F'0'                                               U0019
./       DELET F4548000,F4608000                                  U0019
         S     R8,=A(TANKDATA-TANKDSEC)                           U0019
         READ  RDRECB,SF,READR,RCTTDTA1,'S',,,,,MF=L              U0019
         USING TCTDSECT,TCTR                                      U0019
READ1    STM   R13,R2,IOSAV                                       U0019
         LA    R13,SAVEAREA                                       U0019
         MVI   RCTECB,X'10'       SHOW READER BUSY                U0019
         READ  RDRECB,SF,,,'S',,,,,MF=E                           U0019
         LM    R13,R2,IOSAV                                       U0019
RCK1     $CHECK R     WAIT FOR ECB TO BE POSTED                   U0019
         MVC   READR+33(3),=AL3(RDEOF1)  SET EOF ADDRESS          U0019
         STM   R13,R2,IOSAV                                       U0019
         LA    R13,SAVEAREA                                       U0019
         CHECK RDRECB    DO OS CHECK                              U0019
         LM    R13,R2,IOSAV                                       U0019
         CLI   RDRECB,X'7F'                                       U0019
         BE    TLEN1    IF 7F CONTINUE                            U0019
         CLI   RDRECB,X'41'                                       U0019
         MVC   RDRECB,=F'0'   CLEAR ECB                           U0019
         BNE   RDERR1       IF NOT 41 TREAT AS IO-ERR             U0019
         L     R1,RDRECB+16   GET IOB ADDRESS                     U0019
         CLC   12(2,R1),=X'0C40' TEST FOR CE DE IL IN CSW  STATUS U0019
         BNE   RDERR1    IF NOT TREAT AS IO-ERR                   U0019
TLEN1    BAL   R14,TESTLEN    GO CHECK BLOCK LENGTH               U0019
         MVC   RCTTDTA1(80),0(R8)  MOVE CURRENT REC TO IO AREA    U0019
         MVC   RCTTCT1,=H'80'     RESET LENGTH                    U0019
         MVC   RCTTCT1,=H'80'     RESET LENGTH                    U0019
         $PUT  R,RCTTANK1         SEND THE TANK TO HASP           U0019
         L     R8,RDRREC      GET RECORD POINTER                  U0019
         LA    R8,80(R8)      BUMP TO NEXT RECORD                 U0019
         ST    R8,RDRREC      SAVE IT FOR POSTERITY               U0019
         C     R8,BLOCKEND    IS IT TIME TO DO A REAL READ        U0019
         BNE   RDEBLOCK       NOPE..GO USE THIS RECORD            U0019
RDERR    STM   R13,R2,IOSAV                                       U0019
         LA    R13,SAVEAREA                                       U0019
         MVI   RCTECB,X'10'       SHOW READER BUSY                U0019
         READ  RDRECB,SF,,,'S',,,,,MF=E                           U0019
         LM    R13,R2,IOSAV                                       U0019
./       DELET F4766000,F4768000                                  U0019
RCHECK   $CHECK R            WAIT FOR ECB TO BE POSTED            U0019
         MVC   READR+33(3),=AL3(RDEOF)   SET INITIAL EOF ADDR     U0019
         STM   R13,R2,IOSAV                                       U0019
         LA    R13,SAVEAREA                                       U0019
         CHECK RDRECB    DO OS CHECK                              U0019
         LM    R13,R2,IOSAV                                       U0019
         CLI   RDRECB,X'7F'    WAS READ OK                        U0019
         BE    TSTLEN       IF 7F GO TEST LENGTH                  U0019
         CLI   RDRECB,X'41'   CHECK FOR  X'41' AND WLR            U0019
         MVC   RDRECB,=F'0'   CLEAR ECB                           U0019
         BNE   RDERR          IF NOT TREAT AS UNCORRECTIBLE ERROR U0019
         L     R1,RDRECB+16    GET IOB ADDRESS                    U0019
         CLC   12(2,R1),=X'0C40'  TEST FOR CE DE IL IN CSW STATUS U0019
         BNE   RDERR          IF NOT TREAT AS UNCORRECTIBLE ERROR U0019
TSTLEN   BAL   R14,TESTLEN     CHECK BLOCK LENGTH                 U0019
RDEBLOCK MVC   RCTTDTA1(80),0(R8)  MOVE CORRECT REC TO IOAREA     U0019
         B     RDLOOP                                             U0019
./       DELET F4772000,F4782000                                  U0019
RDEOF    LM    R13,R2,IOSAV                                       U0019
         MVC   RDRECB,=F'0'   CLEAR ECB AFTER EOF                 U0019
         MVC   RCTTCT1,=F'0'   SET END OF FILE INDICATOR          U0019
         BNZ   RDEOF2       OPEN WENT OK...CONTINUE               U0019
         MVI   $RCOMM1+1,X'00'   CLOSE GATE                       U0019
         MVI   RDRWFB,X'FF'   SHOW WAITING FOR BUFFER             U0019
         B     $RCOMM1+4      GO WAIT FOR A BUFFER                U0019
RDEOF1   EQU   *                                                  U0019
         LM    R13,R2,IOSAV   RESTORE REGS                        U0019
         MVC   RDRECB,=F'0'   CLEAR ECB                           U0019
RDEOF2   EQU   *                                                  U0019
         MVI   RDRWFB,X'00'    RESET WAITING FOR BUFFER SW        U0019
         MVI   $RCOMM1+1,X'00'      CLOSE GATE                    U0019
         STM   R13,R2,IOSAV                                       U0019
         LA    R13,SAVEAREA                                       U0019
         CLOSE (READR)                                            U0019
         LM    R13,R2,IOSAV                                       U0019
HOTONE   B     $START                HOT READER SWITCH            U0019
         STM   R13,R2,IOSAV                                       U0019
         LA    R13,SAVEAREA                                       U0019
         OPEN  (READR)              READER RE-OPENED IF HOT       U0019
         LM    R13,R2,IOSAV                                       U0019
         B     READ1                    READER WAS SPECIFIED      U0019
./       DELET F4826000,F4830000                                  U0019
RREOPEN  MVI   RDRWFB,X'FF'      SHOW WAITING FOR BUFFER          U0019
         $DELAY R,TIME=LONG,TYPE=BRANCH                           U0019
         MVI   RDRWFB,X'00'      RESET WAITING FOR BUFFER         U0019
         B     ROPEN                  GO TRY REOPEN               U0019
TESTLEN  LH    R8,READR+62     GET BLKSIZE FROM DCB               U0019
         MVC   RDRECB,=F'0'    CLEAR ECB                          U0019
         L     R1,RDRECB+16    GET IOB ADDRESS                    U0019
         LH    R9,14(R1)       GET RESIDUAL CNT FROM CSW          U0019
         SR    R8,R9           CALCULATE BYTES READ               U0019
         L     R2,RDRECB+12    GET BUFFER ADDRESS                 U0019
         ST    R2,RDRREC       SAVE FOR DEBLOCK ROUTINE           U0019
         AR    R8,R2      BUF ADDR + BYTES READ = BUFEND + 1      U0019
         ST    R8,BLOCKEND    SAVE FOR DEBLOCKING RTN             U0019
         TM    13(R1),X'40'    CHECK 2ND STATUS BYTE FOR BAD LENGTU0019
         BC    8,ITSOK         RETURN IF IT IS OK                 U0019
         LTR   R9,R9        IS RESIDUAL COUNT 0                   U0019
         BZ    BADLENTH  IF SO ITS A TOO-LONG BLOCK               U0019
         SR    R8,R8    IF RESID IS EVEN MULTIPLE OF 80,          U0019
         D     R8,=F'80'        IT IS AN OK SHORT BLOCK.          U0019
         LTR   R8,R8                                              U0019
         BNZ   BADLENTH                                           U0019
ITSOK    L     R8,RDRREC       SET UP FOR MOVE UPON RETURN        U0019
         BR    R14             RETURN TO CALLER                   U0019
BADLENTH WTO   'INCORRECT BLOCK LENGTH ON READER..READER CLOSED'  U0019
         MVI   HOTONE+1,X'F0'       NOTHOT IT                     U0019
         B     RDEOF2   CLOSE READER AND LET OTHER STUFF GO ON    U0019
RDRREC   DC    A(0)                                               U0019
BLOCKEND DC    A(0)                                               U0019
./       DELET F4906000,F4906000                                  U0019
         USING TCTDSECT,TCTR                                      U0019
         WRITE PCHECB,SF,PUNCH,PUNCHOUT,'S',,,,,MF=L              U0019
         MVI   PUNCHOUT,C' '                  CLEAR PUNCH         U0019
         MVC   PUNCHOUT+1(79),PUNCHOUT                 AREA       U0019
         LH    R9,TANKCNT                      INSERT COUNT FOR MVU0019
         SH    R9,=H'1'                                           U0019
         STC   R9,PUNMOV+1                                        U0019
PUNMOV   MVC   PUNCHOUT(80),TANKDATA     MOVE TANK TO PUNCH       U0019
./       DELET F5044000,F5044000                                  U0019
         ST    R8,UCTHOLD                                         U0019
         STM   R13,R2,IOSAV                                       U0019
         LA    R13,SAVEAREA                                       U0019
         MVI   UCTECB,X'10'              SHOW PUNCH BUSY          U0019
         WRITE PCHECB,SF,PUNCH,PUNCHOUT,'S',,,,,MF=E              U0019
         LM    R13,R2,IOSAV                                       U0019
./       DELET F5056000,F5058000                                  U0019
         $CHECK U         WAIT FOR POST                           U0019
         STM   R13,R2,IOSAV                                       U0019
         LA    R13,SAVEAREA                                       U0019
         CHECK PCHECB     DO OS CHECK                             U0019
         LM    R13,R2,IOSAV                                       U0019
         L     R8,UCTHOLD    GET TANK POINTER                     U0019
         TM    PCHECB,X'7F'                                       U0019
         MVC   PCHECB,=F'0'   CLEAR ECB                           U0019
         BNO   UOUTPUT IF NOT 7F PUNCH IT AGAIN                   U0019
./       DELET F5062000,F5062000                                  U0019
./       DELET F5066000,F5070000                                  U0019
./       DELET F5074000,F5094000                                  U0019
./       DELET F5128000,F5132000                                  U0019
PUNCHOUT DC    CL80' '                                            U0019
IOSAV    DC    6F'0'                                              U0019
SAVEAREA DC    18F'0'                                             U0019
./       DELET F5400000,F5408000                                  U0019
         MVI   $WCOMM1+1,X'00'    CLOSE THE GATE                  U0019
./       DELET F5496000,F5576000                                  U0019
         WTO   MF=(E,WBUFFCNT)                                    U0019
         B     WINIT                                              U0019
WGETTANK $GETTNK W,R8,R9,EMPTY=WAIT                               U0019
         LH    R9,TANKCNT                                         U0019
         AH    R9,=H'4'                                           U0019
         STH   R9,WTOBUF                                          U0019
         SH    R9,=H'5'                                           U0019
         STC   R9,WTOMOV+1                                        U0019
WTOMOV   MVC   WTOBUF+4(120),TANKDATA                             U0019
         WTO   MF=(E,WTOBUF)                                      U0019
         $FREE $TANKPOL,R8,ENBL                                   U0019
         B     WINIT                                              U0019
WTORPROC LA    R7,WTCT                                            U0019
         MVI   $WTORCOM+1,X'00'                                   U0019
INTRELSW B     WTOR1              SWITCH USED IF INTERLOCK REL IS U0019
         MVI   INTRELSW+1,X'F0'    RESET BRANCH                   U0019
         B     PUTITT             GO RE-PUT THE TANK              U0019
WTOR1    B     WONCE           FIRST TIME JUST ISSUE WTOR         U0019
         MVC   WCTTCT1(2),=X'0050'    SET TANK COUNT              U0019
         CLC   WCTTDTA1(3),=C'EOJ'    IS THIS EOJ???              U0019
         BE    EOJ                                                U0019
         CLC   WCTTDTA1(3),=C'NOT'  SHALL WE UNHOT THE READER     U0019
         BE    UNHOT                 YEP                          U0019
         CLC   WCTTDTA1(3),=C'HOT'    IS THIS REQUEST FOR HOT READU0019
         BE    GOHOT                YEP                           U0019
         CLI   WCTTDTA1,C'$'         DONT SEND TO HASP WITHOUT $  U0019
         BE    PUTITT             ITS OK TO SEND TO HASP          U0019
         WTO   'INVALID REQUEST...MUST HAVE $ PREFIX'             U0019
         B     WTOR2     GET OUT                                  U0019
GOHOT    MVI   HOTONE+1,X'00'      SET UP FOR HOT READER          U0019
         B     WTOR2               THEN ISSUE WTOR AGAIN          U0019
UNHOT    MVI   HOTONE+1,X'F0'      UNHOT THE READER               U0019
         B     WTOR2                                              U0019
PUTITT   $PUT  W,WCTTANK1                                         U0019
WTOR2    MVI   WCTTDTA1,C' '                                      U0019
         MVC   WCTTDTA1+1(119),WCTTDTA1                           U0019
         WTOR  'HASP RWS/OS--ENTER MESSAGE OR EOJ OR HOT',        U0019X
               WCTTDTA1,120,WTORECB                               U0019
         B     $WTORCOM+4                                         U0019
WONCE    MVI   WTOR1+1,X'00'                                      U0019
         B     WTOR2                                              U0019
WBUFFCNT DC    X'00190000'                                        U0019
WTOBUF   DC    F'0'                                               U0019
         DC    CL120' '                                           U0019
         BO    $WTORCOM+4  DIDNT GO AGAIN--LEAVE INTERLOCK REL ON U0019
         BO    WTOR2       CONSOLE GOT US HERE--GO PUT OUT WTOR   U0019
         MVI   WTOR1+1,X'F0'    SET UP FOR WTOR ONLY              U0019
         MVI   $WTORCOM+1,X'F0'    OPEN WTOR GATE                 U0019
         B     $WTORCOM+4      DONT WTOR UNTIL THIS TANK GETS OUT U0019
         MVC   RCTENTY(2),OBUFNOW     SET UP FOR REENTRY          U0019
         MVI   $RCOMM1+1,X'00'         CLOSE READER GATE          U0019
         MVI   RDRWFB,X'FF'       SET READER-WAITING-FOR-BUFFER   U0019
         B     $RCOMM1+4                                          U0019
BUFNOW   EQU   *                                                  U0019
         MVI   RDRWFB,X'00'  RESET WAIT SWITCH                    U0019
         MVI   $RCOMM1+1,X'00'      CLOSE READER GATE             U0019
         BE    OXWAIT                                             U0019
OBUFNOW  DC    S(BUFNOW)                                          U0019
RDRWFB   DC    X'00'                                              U0019
         ST    R10,OSAVR10                                        U0019
         ST    R9,OSAVR9                                          U0019
         L     R15,=F'1'                                          U0019
         A     R10,=A(TANKRCB-TANKDSEC)                           U0019
         A     R8,=A(&CCT)                                        U0019
         C     R8,OINEND                                          U0019
         S     R8,OINEND                                          U0019
         C     R8,OINEND                                          U0019
         A     R8,=A(&CCT)                                        U0019
         A     R10,=F'64'                                         U0019
         A     R11,=F'63'                                         U0019
         C     R9,=F'0'                                           U0019
         L     R8,OINADD       RESTORE TANK ADDR                  U0019
         L     R9,OSAVR9                                          U0019
         L     R10,OSAVR10                                        U0019
         A     R9,=A(BUFDATA-BUFDSECT)                            U0019
         ST    R10,OSAVR10                                        U0019
         ST    R9,OSAVR9                                          U0019
         LH    R15,(BUFCOUNT-BUFDSECT)(0,R8)                      U0019
         AR    R8,R15                                             U0019
         A     R8,=F'3'                                           U0019
         STH   R8,BUFCOUNT-BUFDSECT(0,R9)                         U0019
         CLI   RDRWFB,X'FF'    IS THE READER WAITING FOR BUFFERS  U0019
         BE    FIRERDR       IF SO FIRE HIM UP                    U0019
         TM    WCTSTAT,TCTREL    IS THE WTOR INTERLOCK ON???      U0019
         BZ    GASRET           IF NOT GO TO NORMAL EXIT          U0019
         MVI   $WTORCOM+1,X'F0'    OPEN WTOR GATE                 U0019
         MVI   INTRELSW+1,X'00'   SET UP WTOR PROC FOR RE-PUT     U0019
         B     GASRET          NORMAL EXIT                        U0019
FIRERDR  MVI   $RCOMM1+1,X'F0'   OPEN READER GATE                 U0019
GASRET   DS    0H                                                 U0019
$IOOLD   DC    F'0'                                               U0019
         DC    A($START)                                          U0019
./       DELET F7180000,F7180000                                  U0019
./       DELET F7242000,F7244000                                  U0019
$INTRUPT MVI   $COMCOM+5,X'00'                                    U0019
         CLI   RDRWFB,X'FF'    IS READER WAITING FOR BUFFERS??    U0019
         BE    FIRERDR1     IF SO START HIM UP                    U0019
         TM    WCTSTAT,TCTREL  IS WTOR INTERLOCK ON??             U0019
         BZ    CWRTNEXT    NORMAL EXIT                            U0019
         MVI   $WTORCOM+1,X'F0'    OPEN WTOR GATE                 U0019
         MVI   INTRELSW+1,X'00'    SET UP WTOR PROC FOR RE-PUT    U0019
         B     CWRTNEXT          NORMAL EXIT                      U0019
FIRERDR1 MVI   $RCOMM1+1,X'F0'    OPEN READER GATE                U0019
         CLI   TIMOUTST,X'FF'                                     U0019
         BE    $START                                             U0019
         MVI   TIMOUTST,X'FF'                                     U0019
         STM   R13,R15,STIMREGS                                   U0019
         XC    TIMECB,TIMECB                                      U0019
         MVI   TIMESW,X'00'                                       U0019
         STIMER REAL,TIMEXIT,DINTVL=TIMEINTV                      U0019
         B     $START                                             U0019
$TIMBACK LM    R13,R15,STIMREGS                                   U0019
         MVI   TIMOUTST,X'00'                                     U0019
         B     CRESPOND                                           U0019
STIMREGS DC    3F'0'                                              U0019
TIMECB   DC    F'0'                                               U0019
TIMESW   DC    X'00'                                              U0019
TIMOUTST DC    X'00'                                              U0019
         DS    0D                                                 U0019
TIMEINTV DC    C'00000250'                                        U0019
         DS    0H                                                 U0019
./       DELET F7390000,F7396000                                  U0019
         LH    R15,RELOGCNT       COUNT NUMBER OF TIMES THRU       KEK
         LA    R15,1(R15)         THIS CODING                      KEK
         STH   R15,RELOGCNT                                        KEK
         B     *+6                                                 KEK
RELOGCNT DC    H'0'                                                KEK
         L     R11,$IOOLD+4                                       U0019
         BR    R11                                                U0019
./       DELET F8014000,F8018000                                  U0019
         MVC   $LOGINFO(1),ADAIOB+2     PUT IN SENSE FROM IOB     U0019
         LH    R15,UCHKCNT        GET COUNT OF UNIT CHECKS ISSUED  KEK
         LA    R15,1(R15)         COUNT ONE                        KEK
         CH    R15,=H'30'         END PROGRAM IF MORE THAN 30      KEK
         BE    EOJ                                                 KEK
         STH   R15,UCHKCNT        ELSE CONTINUE                    KEK
         B     *+6                                                 KEK
UCHKCNT  DC    H'0'               COUNT OF TIMES THRU THIS CODE    KEK
KNOLOG   EQU   *                                                  U0019
         MVC   ADCCWA+1(3),1(R15)       MOVE CCW ADDRESS TO IOB   U0019
         STM   11,2,ADSAV                                         U0019
         MVI   TIMESW,X'FF'                                       U0019
         L     R14,CLASTCAW                                       U0019
         L     R14,0(R14)                                         U0019
         BAL   R15,KLOGIT                                         U0019
         EXCP  ADAIOB                   ADAPTER  I/O              U0019
         LM    11,2,ADSAV                                         U0019
         B     4(R15)                   BACK TO USER              U0019
./       DELET F8124000,F8144000                                  U0019
./       DELET F8262000,F8300000                                  U0019
./       DELET F8310000,F8310000                                  U0019
./       DELET F8314000,F8340000                                  U0019
./       DELET F8350000,F8350000                                  U0019
         B     YOCLOSE                                            U0019
./       DELET F8354000,F8354000                                  U0019
./       DELET F8356000,F8366000                                  U0019
YOCKRET  TM    TCTECB,X'10'          IS THE DEVICE FREE???        U0019
         BO    YOCLOSE                                            U0019
         L     R14,TCTSAV1                                        U0019
         BR    R14                                                U0019
YACN1    DC    S(YOCKRET)                                         U0019
*                                                                 U0019
*    THE FOLLOWING BR 14 IS THE SYNAD ROUTINE FOR THE BSAM        U0019
*    READER, PRINTER, AND PUNCH. IT IS SUPPOSED TO PROVIDE        U0019
*    THE SAME FACILITY AS THE QSAM ACC EROPT OPTION.              U0019
*                                                                 U0019
BR14     BR    R14                                                U0019
./       DELET F8376000,F8454000                                  U0019
./       DELET F8774000,F8780000                                  U0019
PRINTR   DCB   DDNAME=PRINTR,MACRF=(W),DSORG=PS,SYNAD=BR14,       U0019X
               DEVD=DA,RECFM=FM,LRECL=133,BLKSIZE=133             U0019
PUNCH    DCB   DDNAME=PUNCH,MACRF=(W),DSORG=PS,SYNAD=BR14,        U0019X
               DEVD=DA,RECFM=F,LRECL=80,BLKSIZE=80                U0019
READR    DCB   DDNAME=READR,MACRF=(R),DSORG=PS,EODAD=RDEOF,       U0019X
               DEVD=DA,RECFM=F,SYNAD=BR14                         U0019
P        DCB   DDNAME=SYSPRINT,MACRF=PM,DSORG=PS,RECFM=F,         U0019X
               BLKSIZE=120,LRECL=120                              U0019
KTAB     DC    C'0123456789ABCDEF'                                U0019
KSAV     DC    6F'0'                                              U0019
KLOGIT   STM   13,2,KSAV                                          U0019
         UNPK  IOLINE(15),0(8,R14)                                U0019
         TR    IOLINE(14),KTAB-240                                U0019
         UNPK  IOLINE+14(15),7(8,R14)                             U0019
         TR    IOLINE+14(14),KTAB-240                             U0019
         UNPK  IOLINE+28(15),14(8,R14)                            U0019
         TR    IOLINE+28(14),KTAB-240                             U0019
         UNPK  IOLINE+42(15),$CSW+1(8)                            U0019
         TR    IOLINE+42(14),KTAB-240                             U0019
         UNPK  IOLINE+57(7),ADAECB(4)                             U0019
         TR    IOLINE+57(6),KTAB-240                              U0019
         LA    R13,SA13                                           U0019
         PUT   P,IOLINE                                           U0019
         LM    13,2,KSAV                                          U0019
         BR    R15                                                U0019
SA13     DC    9D'0'                                              U0019
IOLINE   DC    CL120' '                                           U0019
ADAPTR   DCB   DDNAME=ADAPTR,MACRF=(E)                            U0019
ADSAV    DC    8F'0'                                              U0019
ADAIOB   DC    X'C2000000'                                        U0019
         DC    A(ADAECB)                                          U0019
$CSW     DC    2F'0'                                              U0019
ADCCWA   DC    A(CCTCCW)                                          U0019
         DC    A(ADAPTR)                                          U0019
         DC    2F'0'                                              U0019
UCBINDEX DC    2F'0'                                              U0019
         DC    C'A'                                               U0019
         DC    AL3($TCT1)               ADAPTER                   U0019
ADAECB   DC    F'0'                                               U0019
EOJ      CLOSE (PRINTR)                                           U0019
         CLOSE (PUNCH)                                            U0019
         CLOSE (ADAPTR)                                           U0019
         L     R13,KSAV13                                         U0019
         LM    14,12,12(13)                                       U0019
         BR    14                                                 U0019
BUFLN1   DC    A(BUFEND-BUFBEGIN)                                 U0019
BUFLN2   DC    A(2*(BUFEND-BUFBEGIN))                             U0019
BCOREND  DC    A(1024*&HICORE-1)                                  U0019
BONE     DC    F'1'                                               U0019
BNUMBUFS DC    F'&NUMBUFS'                                        U0019
         L     R10,P$1STBUF                                       U0019
         L     R9,BNUMBUFS                                        U0019
         A     R10,BUFLN2                                         U0019
./       DELET F8836000,F8838000                                  U0019
         S     R9,BONE                                            U0019
         S     R10,BUFLN1                                         U0019
         L     R11,0(0,R11)                                       U0019
SIGNON   DC    CL59' '       PARM IS MOVED HERE FOR SIGNON NUMBER U0019
./       DELET F8922000,F9242000                                  U0019
         WTO   'HASP REMOTE WORKSTATION/OS READY FOR DIAL-UP'     U0019
         B     ISIO                                               U0019
./       DELET F9280000,F9370000                                  U0019
         LA    R8,CCTCCW                                          U0019
         ST    R8,ADCCWA                                          U0019
         ST    R9,ADCCWA                                          U0019
         EXCP  ADAIOB                                             U0019
         WAIT  1,ECB=ADAECB                                       U0019
         CLC   ADAIOB+12(2),=X'0C00'                              U0019
         BR    R8                                                 U0019
./       DELET F9424000,F9436000                                  U0019
         DC    CL256' '                                           U0019
         DC    CL256' '                                           U0019
         DC    CL256' '                                           U0019
         DC    CL256' '                                           U0019
         DC    CL256' '                                           U0019
         DC    CL256' '                                           U0019
         DC    CL256' '                                           U0019
         DC    CL256' '                                           U0019
         DC    CL256' '                                           U0019
         DC    CL256' '                                           U0019
         DC    CL256' '                                           U0019
PATCH1   DC    CL30' '                                            U0019
PATCH2   DC    CL30' '                                            U0019
PATCH3   DC    CL30' '                                            U0019
         MVI   PATCH1,C' '                                        U0019
         MVI   PATCH2,C' '                                        U0019
         MVI   PATCH3,C' '                                        U0019
         END   HASPRJE                                            U0019
$.RMTEND
