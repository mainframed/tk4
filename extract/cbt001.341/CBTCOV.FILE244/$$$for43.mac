./ ADD NAME=$$$$DESC 0100-94110-94110-1802-00004-00004-00000-SBGCSC
      This is a collection of members, which, when added to the
      File 391 pds (or substituted for like-named members) produces
      a QUEUE install pds that will work for JES2 Release 4.3.0.
           Sam Golob  (908) 901-0943   or  (718) 403-8666
./ ADD NAME=$$JCLC   0104-93067-94104-1904-00080-00078-00018-SBGCSC
//SBGCSCQ JOB (A006,SYTM,99,99),S-GOLOB,REGION=8M,
//        CLASS=Q,MSGCLASS=V,NOTIFY=&SYSUID
/*DIST ROOM-25
//*
/*JOBPARM LINES=999
//*
//QASM   PROC  M=
//ASM    EXEC  PGM=IEV90,REGION=5500K,           (IBM ASSEMBLER H)
// PARM='DECK,RENT,NOLOAD,TEST'
//STEPLIB  DD  DISP=SHR,DSN=SBGCSC.SLACLIB      <<====  Please remove
//SYSLIB   DD  DSN=SBGCSC.Q420.PDS,DISP=SHR
//         DD  DSN=SMPEZ.MRS002.SMPMTS,DISP=SHR
//         DD  DSN=SYS1.HASPSRC,DISP=SHR
//         DD  DSN=SYS1.MACLIB,DISP=SHR
//         DD  DSN=SYS1.MODGEN,DISP=SHR
//SYSUT1   DD  SPACE=(CYL,(5,5)),UNIT=VIO
//SYSTERM  DD  SYSOUT=*
//SYSPRINT DD  SYSOUT=*
//SYSIN    DD  DISP=SHR,DSN=SBGCSC.Q420.PDS(&M)
//SYSPUNCH DD  DSN=SBGCSC.Q420.OBJ(&M),DISP=SHR
//*
//PEND   PEND
//*
//QCOMMON  EXEC QASM,M=Q0
//ACTIVE   EXEC QASM,M=ACTIVE
//ALLOCATE EXEC QASM,M=ALLOCATE
//AUTH     EXEC QASM,M=AUTH
//CDIE     EXEC QASM,M=CDIE
//CHCT     EXEC QASM,M=CHCT
//CIOT     EXEC QASM,M=CIOT
//CJCT     EXEC QASM,M=CJCT
//CJHIST   EXEC QASM,M=CJHIST
//CJOE     EXEC QASM,M=CJOE
//CJQE     EXEC QASM,M=CJQE
//CKPT     EXEC QASM,M=CKPT
//CPDDB    EXEC QASM,M=CPDDB
//CPFK     EXEC QASM,M=CPFK
//CQUIET   EXEC QASM,M=CQUIET
//CSPIN    EXEC QASM,M=CSPIN
//CTGPS    EXEC QASM,M=CTGPS
//CTSO     EXEC QASM,M=CTSO
//DDNAME   EXEC QASM,M=DDNAME
//DISPLAY  EXEC QASM,M=DISPLAY
//FINDJOB  EXEC QASM,M=FINDJOB
//FINDPDDB EXEC QASM,M=FINDPDDB
//FORMAT   EXEC QASM,M=FORMAT
//HELP     EXEC QASM,M=HELP
//HEXBLK   EXEC QASM,M=HEXBLK
//HEXDUMP  EXEC QASM,M=HEXDUMP
//INIT     EXEC QASM,M=INIT
//INITS    EXEC QASM,M=INITS
//JCL      EXEC QASM,M=JCL
//JLOG     EXEC QASM,M=JLOG
//JMSG     EXEC QASM,M=JMSG
//LIST     EXEC QASM,M=LIST
//LISTDS   EXEC QASM,M=LISTDS
//PARSE    EXEC QASM,M=PARSE
//PRINT    EXEC QASM,M=PRINT
//QUEUE    EXEC QASM,M=QUEUE
//READSPC  EXEC QASM,M=READSPC
//REPOS    EXEC QASM,M=REPOS
//SAVE     EXEC QASM,M=SAVE
//SEARCH   EXEC QASM,M=SEARCH
//SYSLOG   EXEC QASM,M=SYSLOG
//SYSOUT   EXEC QASM,M=SYSOUT
//XDS      EXEC QASM,M=XDS
//*
//*
//LKED   EXEC  PGM=IEWL,PARM='TERM,XREF,LIST,LET,TEST',
//             COND=(7,LT)
//SYSLMOD  DD  DSN=SBGCSC.A.LOAD,DISP=SHR
//SYSUT1   DD  UNIT=VIO,SPACE=(CYL,(2,1))
//SYSTERM  DD  SYSOUT=*
//SYSPRINT DD  SYSOUT=*
//SYSLIB   DD  DISP=SHR,DSN=SBGCSC.Q420.OBJ
//SYSLIN   DD  *
 INCLUDE SYSLIB(Q0)
 INCLUDE SYSLIB(QUEUE)
 ENTRY QUEUE
 NAME Q420(R)
./ ADD NAME=$JCLCP   0104-93067-94091-1203-00042-00078-00018-SBGCSC
//SBGCSCQ JOB (A006,SYTM,99,99),S-GOLOB,REGION=8M,
//        CLASS=Q,MSGCLASS=V,NOTIFY=&SYSUID
/*DIST ROOM-25
//*
/*JOBPARM LINES=999
//*
//QASM   PROC  M=
//ASM    EXEC  PGM=AEV90,REGION=5500K,           (IBM ASSEMBLER H)
// PARM='DECK,RENT,NOLOAD,TEST'
//STEPLIB  DD  DISP=SHR,DSN=SBGCSC.SLACLIB
//SYSLIB   DD  DSN=SBGCSC.Q420.PDS,DISP=SHR
//         DD  DSN=SMPEZ.MRS002.SMPMTS,DISP=SHR
//         DD  DSN=SYS1.HASPSRC,DISP=SHR
//         DD  DSN=SYS1.MACLIB,DISP=SHR
//         DD  DSN=SYS1.MODGEN,DISP=SHR
//SYSUT1   DD  SPACE=(CYL,(5,5)),UNIT=VIO
//SYSTERM  DD  SYSOUT=*
//SYSPRINT DD  SYSOUT=*
//SYSIN    DD  DISP=SHR,DSN=SBGCSC.Q420.PDS(&M)
//SYSPUNCH DD  DSN=SBGCSC.Q420.OBJ(&M),DISP=SHR
//*
//PEND   PEND
//*
//CHCT     EXEC QASM,M=CHCT
//CJHIST   EXEC QASM,M=CJHIST
//CTGPS    EXEC QASM,M=CTGPS
//INIT     EXEC QASM,M=INIT
//QUEUE    EXEC QASM,M=QUEUE
//*
//*
//LKED   EXEC  PGM=IEWL,PARM='TERM,XREF,LIST,LET,TEST',
//             COND=(7,LT)
//SYSLMOD  DD  DSN=SBGCSC.A.LOAD,DISP=SHR
//SYSUT1   DD  UNIT=VIO,SPACE=(CYL,(2,1))
//SYSTERM  DD  SYSOUT=*
//SYSPRINT DD  SYSOUT=*
//SYSLIB   DD  DISP=SHR,DSN=SBGCSC.Q420.OBJ
//SYSLIN   DD  *
 INCLUDE SYSLIB(Q0)
 INCLUDE SYSLIB(QUEUE)
 ENTRY QUEUE
 NAME Q420(R)
./ ADD NAME=CHCT     0101-93067-94091-1213-00169-00168-00000-SBGCSC
CHCT     TITLE 'QUEUE COMMAND - DUMP A HCT IN HEX'                ONL01
CHCT     QSTART ,                  START CHCT CSECT ASSEMBLY      ONL01
***********************************************************************
* HCT                                                                 *
         USING WORK,R13            BASE REG FOR LOCAL SAVE AREA   WGH
***********************************************************************
*                                                                     *
*   CALL - READ JES2 CHECKPOINT ROUTINE                               *
*                                                                     *
***********************************************************************
         L     R15,=V(CKPT)        ADDR OF CKPT ROUTINE
         BALR  R14,R15             GO TO IT
***********************************************************************
*                                                                     *
*   CALL HEXDUMP TO DUMP THE HCT CHECKPOINT AREA                      *
*                                                                     *
***********************************************************************
         L     R10,QVCKPT     BASE FOR CKPT WORK AREA
         USING QCKPT,R10      ADDRESSING FOR IT
         LH    R2,QLNG1       LENGTH OF 1ST PARM                   WGH
         LTR   R2,R2          ANYTHING THERE ?                     WGH
         BZ    JQTLR          NO... USE 1ST CHECKPOINT RECORD      WGH
         CLI   QPARM1,C'0'    IS FIRST POSITION A NUMBER ??        WGH
         BL    NAME           NO...  GET BLOCK NAME                WGH
         BCTR  R2,0           REDUCE LENGTH FOR EXECUTE            WGH
         EX    R2,PACKBLK     PACK INTO QDWORK                     WGH
         CVB   R1,QDWORK      PICK UP BLOCK NUMBER                 WGH
         LTR   R1,R1          CHECK IF ZERO                        WGH
         BP    *+8            NO... CONTINUE                       WGH
         LA    R1,1           YES.. FORCE TO 1                     WGH
*        C     R1,QCJOTL      COMPARE TO MAX                       WGH
*        BNH   *+8            OK... KEEP IT                        WGH
*        L     R1,QCJOTL      TOO BIG... USE MAX                   WGH
         BCTR  R1,0           REDUCE FOR ADDRESS CALCULATION       WGH
         MH    R1,=H'4096'    CALCULATE BUFFER OFFSET OF RECORD    WGH
         A     R1,QCJQTL      ADD TO BASE OF CKPT AREA             WGH
         B     NEXTPARM       PROCESS OFFSET                       WGH
NAME     LA    R1,CKPTABLE-6         GET BLOCK NAME                WGH
         LA    R15,(CKPTEND-CKPTABLE)/6        SIZE OF TABLE       WGH
TABLOOP  LA    R1,6(R1)       CHECK NEXT ENTRY                     WGH
         CLC   0(3,R1),QPARM1 IS THIS NAME CORRECT                 WGH
         BE    TABFIND        YES..  PROCESS NAME                  WGH
         BCT   R15,TABLOOP    NO...  TRY AGAIN                     WGH
         B     JQTLR          END OF TABLE - DEFAULT TO 1ST        WGH
TABFIND  EQU   *                                                   WGH
         MVC   LOADINW,LOADINST   MOVE IN MODEL INSTRUCTION        WGH
         MVC   LOADINW+2(2),4(R1) MOVE IN S TYPE ADDRESS           WGH
         LA    R2,0               SET OVERLAY TO 0 FOR EXECUTE     WGH
         EX    R2,LOADINW     ADDRESS OF CHECKPOINT RECORD TO R1   WGH
         B     NEXTPARM       GO PROCESS PARM2                     WGH
JQTLR    L     R1,QCJQTL      ADDRESS OF 1ST CHECKPOINT REC        WGH
NEXTPARM EQU   *              PROCESS PARM2                        WGH
         LR    R2,R1          SAVE ORIGINAL BASE                   WGH
         MVC   MSGCKPW(MSGCKPWL),MSGCKP   MOVE MSG TO WORK AREA    WGH
         S     R1,QCJQTL      CALCULATE CKPT RECORD OFFSET         WGH
         SR    R0,R0          CLEAR FOR DIVIDE                     WGH
         D     R0,=F'4096'    CALCULATE CKPT RECORD NUMBER         WGH
         MVC   MSGCKP3W,QBLANK          BLANK OUT OFFSET MSG       WGH
         LTR   R0,R0          IS THERE AN OFFSET                   WGH
         BZ    NOOFF          NO... CONTINUE                       WGH
         MVC   MSGCKP3W,MSGCKP3         YES.. MOVE IN OFFSET MSG   WGH
         MVC   MSGCKP3W+1(3),QPARM1     MOVE CONTROL BLOCK NAME    WGH
         ST    R0,QDWORK      STORE OFFSET                         WGH
         UNPK  MSGCKP4W(5),QDWORK+2(3)                             WGH
         TR    MSGCKP4W(4),TRTAB-C'0'                              WGH
         MVI   MSGCKP4W+4,C' ' CLEAR EXTRA BYTE                    WGH
NOOFF    LA    R1,1(R1)       MAKE BLOCK # RELEATIVE 1             WGH
         CVD   R1,QDWORK      CONVERT TO DECIMAL                   WGH
         ED    MSGCKP1W,QDWORK+6   INSERT NUMBER IN MSG            WGH
         L     R1,QCJOTL      GET TOTAL NUMBER OF CKPT RECORDS     WGH
         CVD   R1,QDWORK      CONVERT TO DECIMAL                   WGH
         ED    MSGCKP2W,QDWORK+6   INSERT NUMBER IN MSG            WGH
*        MVC   QDHLINE(MSGCKPWL),MSGCKPW  PUT MSG IN HEADER        WGH
         LA    R1,MSGCKPW     MESSAGE ADDRESS                      WGH
         ST    R1,QDMSGA      SAVE ADDRESS                         WGH
         LA    R1,MSGCKPWL    LENGTH                               WGH
         STH   R1,QDMLNG      SAVE FOR DISPLAY ROUTINE             WGH
         L     R15,=V(DISPLAY)                                     WGH
         BALR  R14,R15        DO IT                                WGH
         LR    R1,R2          RELOAD ORIGINAL BASE                 WGH
         LH    R15,QLNG2      LENGTH OF OFFSET PARM                WGH
         LTR   R15,R15        IS LENGTH ZERO ??                    WGH
         BNP   DOOFF          YES.. NO OFFSET                      WGH
         EX    R15,OFFTR2     NO... CONVERT TO HEX                 WGH
         EX    R15,OFFPACK    PACK INTO QDWORD                     WGH
         LH    R15,QDWORK     PICK UP OFFSET                       WGH
DOOFF    EQU   *                                                   WGH
         LR    R0,R15         SAVE OFFSET                          WGH
         AR    R1,R15         ADD OFFSET TO BASE                   WGH
         LH    R15,=H'4096'   LENGTH OF BUFFER                     WGH
         SR    R15,R0         LENGTH - OFFSET = LENGTH TO DUMP     WGH
         SLL   R0,16          MOVE OFFSET TO PROPER POSITION       WGH
         OR    R0,R15         INSERT INTO LENGTH REGISTER          WGH
*        L     R1,QCJQTL      ADDRESS OF HCT SAVEAREA
*        LA    R0,$SAVEBEG-HCT  OFFSET TO START OF AREA
*        LA    R0,0             OFFSET TO START OF AREA
*        LA    R15,$SAVELEN   LENGTH OF $SAVEAREA
*        LA    R15,4095       LENGTH TO DUMP
*        SLL   R0,16          MOVE OFFSET TO PROPER POSITION
*        OR    R0,R15         INSERT INTO LENGTH REG
         L     R15,=V(HEXDUMP) ADDRESS OF DUMP ROUTINE
         BALR  R14,R15        LINK TO IT
STOP     QSTOP
***********************************************************************
*                                                                     *
*   MISCELLANY                                                        *
*                                                                     *
***********************************************************************
LOADINST L     R1,*-*              MODEL INSTRUCTION              WGH
OFFTR1   TR    QPARM1,TABLEH-193   CONVERT TO HEX                 WGH
OFFTR2   TR    QPARM2,TABLEH-193   CONVERT TO HEX                 WGH
OFFPACK  PACK  QDWORK(3),QPARM2(1) PACK TO WORK AREA              WGH
PACKBLK  PACK  QDWORK,QPARM1(1)    PACK TO WORK AREA              WGH
TABLEH   DC    X'0A0B0C0D0E0F',CL41' ',C'0123456789',CL6' '       WGH
TRTAB    DC    C'0123456789ABCDEF'                                WGH
MSGCKP   DC    C'*** CHECKPOINT RECORD'
MSGCKP1  DC    X'40202020'
         DC    C' OF'
MSGCKP2  DC    X'40202020',C' ***   '
MSGCKP3  DC    C' XXX BEGAN AT RECORD OFFSET '
MSGCKP4  DC    CL5' '
MSGCKPL  EQU   *-MSGCKP                                           WGH
         DS    0H                  FORCE TABLE ALIGNMENT          WGH
CKPTABLE DC    CL4'HCT',S(QCJQTL)                                 WGH
         DC    CL4'DAS',S(QCTDASA)                                WGH
         DC    CL4'TGM',S(QCTGMA)                                 WGH
         DC    CL4'JIX',S(QCJIXA)                                 WGH
         DC    CL4'JQT',S(QCJQTA)                                 WGH
         DC    CL4'PST',S(QCPSTA)                                 WGH
         DC    CL4'JOT',S(QCJOTA)                                 WGH
         DC    CL4'JCT',S(QCJCTA)                                 WGH
CKPTEND  EQU   *
         LTORG
SYMDEL   DSECT ,                   KILL SYM CARD GENERATION       UF023
         QCOMMON
CHCT     CSECT
         DROP
         COPY  $HASPGBL
&MACSPLV SETC  '2'
&SYSSPLV SETC  '2'
&VERSION SETC  'SP 4.2.0'                                         WGH
&FMID    SETC  'HJE4420'                                          WGH
         QPRBGEN BEGIN             SET PRINT FOR CNTL BLOCK GEN   ONL01
        $HASPEQU
        $LMT    ,                                                 WGH42
        $XECB   ,                                                 WGH42
PDS2BLEN EQU    1                                                 WGH42
         IFGRPL
        $BUFFER
        $JCT
        $CAT
        $JQE
        $PCE
        $MIT   ,                                                  ONL11
        $HCT
        $PSV   ,                JES2 4.3
         QPRBGEN DONE              RESTORE NORMAL PRINT STATUS    ONL01
WORK     DSECT                                                     WGH
         DS     90F                 5 SAVE AREAS                   WGH
LOADINW  DS    F                    LOAD INSTRUCTION WORK AREA     WGH
MSGCKPW  DC    C'*** CHECKPOINT RECORD'
MSGCKP1W DC    X'40202020'
         DC    C' OF'
MSGCKP2W DC    X'40202020',C' ***   '
MSGCKP3W DC    C' XXX BEGAN AT RECORD OFFSET '
MSGCKP4W DC    CL5' '
MSGCKPWL EQU   *-MSGCKPW
SYMNODEL DSECT ,                   RESTORE SYM CARD GENERATION    UF023
         END
./ ADD NAME=CJHIST   0101-93067-94091-1214-00581-00580-00010-SBGCSC
CJHIST   TITLE 'QUEUE COMMAND - PRINT JOB HISTORY/SOURCE'         ONL01
CJHIST   QSTART ,                  START CJHIST CSECT ASSEMBLY    ONL01
         GBLB  &QSP           SP2 FLAG                            UF030
         GBLB  &QSP133        SP1.3.3 FLAG                        UF046
         GBLB  &QNERDC        NERDC FLAG                          UF030
         GBLB  &QONL          ONL FLAG                            ONL06
         GBLB  &QACF2         ACF2 FLAG                             NTL
         SPACE 1                                                  ONL15
         GBLC  &ACF2XIT,&ACF2DCT,&ACF2JCT,&OFFSET  ACF2 GLOBALS   ONL15
         SPACE 1                                                  ONL15
         AIF   (NOT &QACF2).$SKP1                                 ONL15
         AIF   (NOT &QSP133).$SKP1                                ONL15
         #ACFJES2 ,                SET ACF2 OPTIONS FOR JES2      ONL15
.$SKP1   ANOP  ,                                                  ONL15
         SPACE 2                                                  ONL15
         USING QDISPLAY,R10   BASE REG FOR DISPLAY WORK AREA        NTL
         L     R10,QVDSPL     LOAD BASE REG                         NTL
         USING WORK,R13       BASE REG FOR LOCAL WORK AREA          NTL
***********************************************************************
*                                                                   NTL
*   PROCESS THE HISTORY COMMAND                                     NTL
*                                                                   NTL
***********************************************************************
         SPACE 1                                                  ONL14
         L     R15,=V(FINDJOB) GO FIND JOB/JCT/JQE
         BALR  R14,R15                                              NTL
         L     R9,QCJCTA      GET ADDRESS OF JCT                    NTL
         USING JCT,R9         ADDRESSABILITY                        NTL
         SPACE 1                                                  ONL14
         TM    QFLAG1,QFLG1SDS     IS THIS A SYSTEM DATA SET JOB? ONL14
         BO    TILTSYSD            TILT IF YES                    ONL14
         SPACE 2                                                    NTL
*                                                                 ONL02
*   PERFORM AUTHORIZATION CHECK FOR JOB                           ONL02
*                                                                 ONL02
         SPACE 1                                                  ONL02
         QAUTHCK QAJHIST           PERFORM JOB AUTHORIZATION      ONL02
         SPACE 2                                                  ONL02
FORMATIT MVC   QDHLINE,HEADER                                       NTL
         MVC   QDMSG,QBLANK   BLANK OUT LINE                        NTL
         BAL   R7,DISPLAY     GO DO THE DISPLAY                     NTL
*                                                                   NTL
LINE3    MVC   QDMSG,HEAD3    MOVE IN LINE MASK                     NTL
         MVC   JOBNUMB,JCTJOBID     JOB ID                          NTL
         MVC   JOBNAME,JCTJNAME     JOBNAME                         NTL
         MVC   JOBSCE,JCTINDEV      INPUT DEVICE                    NTL
         MVC   BIN#,JCTROOMN        BIN NUMBER                      NTL
         MVC   JOBCLASS,JCTJCLAS    JOB CLASS FROM JOBCARD          NTL
         MVC   MSGCLASS,JCTMCLAS    MESSAGE CLASS                   NTL
         MVC   NOTIFY,JCTTSUID      WHO TO CONTACT                  NTL
         BAL   R7,DISPLAY           PUT OUT LINE3                   NTL
*                                                                   NTL
LINE4    BAL   R7,DISPBLNK       GO PUT OUT A BLANK LINE            NTL
*                                                                   NTL
LINE5    MVC   QDMSG,HEAD5        MOVE IN HEADING                   NTL
         MVC   PROCDDN,JCTPROCN   PROCLIB DDNAME                    NTL
         LA    R15,PRTDEST                                          NTL
         LA    R1,JCTPROUT                                          NTL
         BAL   R7,RMTORLCL       CONVERT PRT= FIELD                 NTL
         LA    R15,PUNDEST                                          NTL
         LA    R1,JCTPUOUT                                          NTL
         BAL   R7,RMTORLCL       CONVERT PUN= FIELD                 NTL
         LM    R0,R1,JCTRDRON    GET READER TIME/DATE               NTL
         LTR   R1,R1             ANYBODY (DATE) HOME                NTL
         BZ    NODATE5                                              NTL
         BAL   R7,TIMECONV       FORMAT IT PRETTY                   NTL
         MVC   TIMESTMP,CDAYN    MOVE IN TO RECORD                  NTL
NODATE5  BAL   R7,DISPLAY        GO SHOW IT OFF                     NTL
*                                                                   NTL
LINE6    MVC   QDMSG,HEAD6        MOVE IN HEADING                   NTL
         MVC   PROGAMER,JCTPNAME  PROGRAMMER NAME                   NTL
         LM    R0,R1,JCTXEQON    GET XEQ START TIME/DATE            NTL
         LTR   R1,R1             ANYBODY (DATE) HOME                NTL
         BZ    NODATE6                                              NTL
         BAL   R7,TIMECONV       FORMAT IT PRETTY                   NTL
         MVC   TIMESTMP,CDAYN    MOVE IN TO RECORD                  NTL
NODATE6  BAL   R7,DISPLAY        GO SHOW IT OFF                     NTL
*                                                                   NTL
LINE7    MVC   QDMSG,HEAD7        MOVE IN HEADING                   NTL
         LA    R15,CARDSIN       POINT TO POSITION                  NTL
         L     R1,JCTCARDS       GET VALUE                          NTL
         BAL   R7,FITINUM        AND PUT IT AWAY                    NTL
         LM    R0,R1,JCTXEQOF    GET XEQ STOP TIME/DATE             NTL
         LTR   R1,R1             ANYBODY (DATE) HOME                NTL
         BZ    NODATE7                                              NTL
         BAL   R7,TIMECONV       FORMAT IT PRETTY                   NTL
         MVC   TIMESTMP,CDAYN    MOVE IN TO RECORD                  NTL
NODATE7  BAL   R7,DISPLAY        GO SHOW IT OFF                     NTL
*                                                                   NTL
LINE8    MVC   QDMSG,HEAD8        MOVE IN HEADING                   NTL
         LA    R15,LINESOUT      POINT TO POSITION                  NTL
         L     R1,JCTLINES       GET VALUE                          NTL
         BAL   R7,FITINUM        AND PUT IT AWAY                    NTL
         LA    R15,CARDSOUT      POINT TO POSITION                  NTL
         L     R1,JCTPUNCH       GET VALUE                          NTL
         BAL   R7,FITINUM        AND PUT IT AWAY                    NTL
         LM    R0,R1,JCTOUTON    GET PRT/PUN START TIME/DATE        NTL
         LTR   R1,R1             ANYBODY (DATE) HOME                NTL
         BZ    NODATE8                                              NTL
         BAL   R7,TIMECONV       FORMAT IT PRETTY                   NTL
         MVC   TIMESTMP,CDAYN    MOVE IN TO RECORD                  NTL
NODATE8  BAL   R7,DISPLAY        GO SHOW IT OFF                     NTL
         SPACE 1                                                  ONL15
         AIF   (NOT &QACF2).$SKP2                                 ONL15
         AIF   (NOT &QSP133).$SKP3                                ONL15
         SPACE 1                                                  ONL15
         ICM   R6,B'1111',&ACF2JCT ACF2 AREA OFFSET IN JCT        ONL15
         BZ    SKIPACF2            FORGET IT IF NO ACF2 AREA      ONL15
         SPACE 1                                                  ONL15
         LA    R6,JCT(R6)          ADDR OF ACF2 AREA              ONL15
         USING #ACFJCTX,R6         NOTE #ACFJCTX ADDRESSABILITY   ONL15
         SPACE 1                                                  ONL15
         CLC   JCTACFJ,=C'ACFJ'    IS IT THE ACF2 AREA ?          ONL15
         BNE   SKIPACF2            IF NO, FORGET IT               ONL15
.$SKP3   ANOP  ,                                                  ONL15
         SPACE 1                                                  ONL15
LINE911  MVC   QDMSG,QBLANK     BLANK IT OUT                        NTL
         LA    R2,4             SAY DO IT 4 TIMES                   NTL
BLNKS    BAL   R7,DISPLAY        GO SHOW IT OFF                     NTL
         BCT   R2,BLNKS                                             NTL
*                                                                   NTL
LINE12   MVC   QDMSG,HEAD12       MOVE IN HEADING                   NTL
         BAL   R7,DISPLAY        GO SHOW IT OFF                     NTL
*                                                                   NTL
LINE13   BAL   R7,DISPBLNK       GO PUT OUT A BLANK LINE            NTL
*                                                                   NTL
         AIF   (&QONL).ONL17A                                     ONL17
LINE14   MVC   QDMSG,HEAD14       MOVE IN HEADING                   NTL
         MVC   LOGONID,LIDLID    ACF2 LOGON ID                      NTL
         MVC   GROUP,LIDOPER     ACF2 GROUP (NTL FIELD)            NTL1
         MVC   NAME,LIDNAME      ACF2 USER NAME/DESCRIPT            NTL
         MVC   PHONE,LIDPHONE    ACF2 PHONE NUMBER FOR USER         NTL
         BAL   R7,DISPLAY        GO SHOW IT OFF                     NTL
*                                                                   NTL
LINE15   BAL   R7,DISPBLNK       GO PUT OUT A BLANK LINE            NTL
*                                                                   NTL
LINE16   MVC   QDMSG,HEAD16       MOVE IN HEADING                   NTL
         MVC   SOURCE,ACVSRCE    ACF2 LOGICAL SOURCE                NTL
         MVC   SUBLID,ACVSLID    ACF2 SUBMITTING LID                NTL
         MVC   SUBPROG,ACVAPROG  ACF2 SUBMITTING PROGRAM            NTL
         MVC   SUBPATH,ACVPATH   ACF2 SUBMITTING PATH               NTL
         BAL   R7,DISPLAY        GO SHOW IT OFF                     NTL
         AGO   .ONL17B                                            ONL17
.ONL17A  ANOP  ,                                                  ONL17
         SPACE 1                                                  ONL17
LINE14   MVC   QDMSG,HEAD14        MOVE IN HEADING                ONL17
         MVC   LOGONID,LIDLID      ACF2 LOGON ID                  ONL17
         MVC   NAME,LIDNAME        ACF2 USER NAME/DESCRIPT        ONL17
         MVC   PHONE,LIDPHONE      ACF2 PHONE NUMBER FOR USER     ONL17
         BAL   R7,DISPLAY          GO SHOW IT OFF                 ONL17
         SPACE  1                                                 ONL17
LINE15   MVC   QDMSG,HEAD15        MOVE IN HEADING                ONL17
         MVC   UIDSTR,JCTAUIDB     ACF2 UID STRING                ONL17
         MVC   MAILADDR,LIDADDR    ACF2 LOCAL PLANT MAIL ADDR     ONL17
         BAL   R7,DISPLAY          GO SHOW IT OFF                 ONL17
         SPACE  1                                                 ONL17
LINE16   MVC   QDMSG,HEAD16        MOVE IN HEADING                ONL17
         MVC   SOURCE,ACVSRCE      ACF2 LOGICAL SOURCE            ONL17
         MVC   SUBLID,ACVSLID      ACF2 SUBMITTING LID            ONL17
         MVC   SUBPROG,ACVAPROG    ACF2 SUBMITTING PROGRAM        ONL17
         MVC   SUBPATH,ACVPATH     ACF2 SUBMITTING PATH           ONL17
         BAL   R7,DISPLAY          GO SHOW IT OFF                 ONL17
         SPACE 1                                                  ONL17
.ONL17B  ANOP  ,                                                  ONL17
         SPACE 1                                                  ONL15
SKIPACF2 DS    0H                  CONTINUE HERE IF NO ACF2 INFO  ONL15
         SPACE 1                                                  ONL15
         AIF   (NOT &QSPACF2).$SKP2                               ONL15
         SPACE 1                                                  ONL15
         DROP  R6                  KILL #ACFJCTX ADDRESSABILITY   ONL15
         SPACE 1                                                  ONL15
.$SKP2   ANOP  ,                                                  ONL15
         AIF   (NOT &QNERDC).QNONER                               UF030
         LA    R8,JCTNJHDR         POINT TO START OF HEADER       UF046
         USING NJH,R8              TEMP ADDRESSING                UF046
         LH    R1,NJHLEN           POINT R1 PAST END OF           UF046
         ALR   R1,R8                 JOB HEADER RECORD            UF046
         LA    R8,NJHG             POINT BASE REG TO GENERAL SECT UF046
         USING NJHU,R8             SECTION ADDRESSING             UF046
NHBFUSR  LH    R0,NJHULEN          SECTION LENGTH                 UF046
         LTR   R0,R0               TEST VALIDITY                  UF046
         BNP   RETURN              NONE, NO LOCAL SECTIONS        UF046
         ALR   R8,R0               POINT TO NEXT SECTION          UF046
         CR    R8,R1               SEE IF PAST END OF RECORD      UF046
         BH    RETURN              PAST END, ERROR                UF046
         CLI   NJHUTYPE,NTYPUSER   CHECK FOR USER SECTION         UF046
         BNE   NHBFUSR             TRY NEXT SECTION IF NOT        UF046
         CLI   NJHUMOD,C'E'        NERDC USER SECTION?            UF046
         BNE   NHBFUSR             TRY NEXT SECTION IF NOT        UF046
         CLC   NJHUCODE,=CL4'UF'   NERDC USER SECTION?            UF046
         BNE   NHBFUSR             TRY NEXT SECTION IF NOT
         SPACE 1
         MVC   QDMSG,QBLANK     BLANK IT OUT                      UF030
         LA    R2,4             SAY DO IT 4 TIMES                 UF030
         BAL   R7,DISPLAY        GO SHOW IT OFF                   UF030
         BCT   R2,*-4                                             UF030
*                                                                 UF030
         MVC   QDMSG,HEAD21       MOVE IN HEADING                 UF030
         BAL   R7,DISPLAY        GO SHOW IT OFF                   UF030
*                                                                 UF030
         BAL   R7,DISPBLNK       GO PUT OUT A BLANK LINE          UF030
*                                                                 UF030
         MVC   QDMSG,HEAD22       MOVE IN HEADING                 UF030
         MVC   HNERLID,NJHULID   ACF2 LOGON ID                    UF030
         L     R1,NJHUACC#       GET ACCESS NUMBER                UF030
         LA    R15,HNERACC#      POINT TO TARGET AREA             UF030
         BAL   R7,FITINUM        CONVERT INTO AREA                UF030
         LH    R1,NJHUSEQ#       GET SEQUENCE NUMBER              UF030
         LA    R15,HNERSEQ#      POINT TO TARGET AREA             UF030
         BAL   R7,FITINUM        CONVERT INTO AREA                UF030
         MVC   HNERHEAD,NJHUOUTH OUTPUT HEADER                    UF030
         BAL   R7,DISPLAY        GO SHOW IT OFF                   UF030
*                                                                 UF030
         MVC   QDMSG,HEAD23       MOVE IN HEADING                 UF030
         MVC   HNERPROC,JCTPROC   MOVE PROCLIB DSN                UF030
         MVC   HNERPROV,JCTPROCV  MOVE PROCLIB VOLUME             UF030
         BAL   R7,DISPLAY        GO SHOW IT OFF                   UF030
.QNONER  ANOP                                                     UF030
         SPACE 2                                                    NTL
RETURN   QSTOP                                                      NTL
         SPACE 2                                                    NTL
***********************************************************************
*   LOCAL SUBROUTINE TO PUT OUT LINE VIA Q DISPLAY                  NTL
***********************************************************************
DISPBLNK MVC   QDMSG,QBLANK   CLEAR OUT MESSAGE                     NTL
*                                                                   NTL
DISPLAY  MVC   QDMLNG,=H'80'  SET LENGTH                            NTL
         LA    R0,QDMSG       GET ADDRESS OF MESSAGE                NTL
         ST    R0,QDMSGA      AND SAVE ADDRESS                      NTL
         L     R15,=V(DISPLAY) GET ADDRESS OF MODULE FOR DISPLAY    NTL
         BALR  R14,R15        CALL THE MOTHER                       NTL
         BR    R7             RETURN TO MAINLINE...                 NTL
         EJECT ,                                                    NTL
***********************************************************************
*                                                                   NTL
* FORMAT DATE TIME  HEADING   ENTER WITH BAL R7,TIMECONV            NTL
*   R0=TIME IN 100THS OF SECOND SINCE MIDNIGHT                      NTL
*   R1=DATE IN 00YYDDDS FORMAT                                      NTL
*                                                                   NTL
* RETURNS WITH CDAYN(LEN) = DDMONYY (DDD) DAY HH:MM:SS.TH           NTL
*                E.G.       07JUL80 (189) MON 13:45:24.56           NTL
*                           123456789.123456789.123456789           NTL
*                                                                   NTL
***********************************************************************
TIMECONV MVC   MONMSK(MVCLEN),XMONMSK  INIT DATE/TIME WORK AREA     NTL
         ST    R1,DATE                 SAVE DATE FOR LATER          NTL
         CVD   R0,DOUBLEWD            GET TIME IN DEC 100TH/SEC     NTL
         DP    DOUBLEWD(8),DEC6000(3) /6000 : REM IS SS.TH          NTL
         DP    DOUBLEWD(5),DEC60(2)   /60   : REM IS MM             NTL
         MVC   EDITWORK(L'HHMASK),HHMASK   SETUP MULT EDIT MASK     NTL
         ED    EDITWORK(L'HHMASK),DOUBLEWD EDIT HH,MM,SS            NTL
FINTIME  MVC   CHH(2),EDITWORK+4      MOVE IN HOURS                 NTL
         MVC   CMM(2),EDITWORK+8      MOVE IN MM                    NTL
         MVC   CSS(5),EDITWORK+12     MOVE IN SS.TH                 NTL
*                                                                   NTL
***FORMAT THE DATE INTO THE OUTPUT MSG                              NTL
*                                                                   NTL
         MVC   WORKWORD(4),DATE        MOVE DATE TO WORK AREA.      NTL
         MVO   WORKWORD+1(3),WORKWORD(2)   MAKE 00YYDDDS INTO 00000YYS.
         UNPK  CYR(2),WORKWORD+2(2)    FORMAT YEAR.                 NTL
         XC    DOUBLEWD,DOUBLEWD                                    NTL
         MVC   DOUBLEWD+4(4),WORKWORD  CNVT YEAR TO BIN             NTL
         CVB   R0,DOUBLEWD                                          NTL
         ST    R0,BINYEAR              AND SAVE                     NTL
         TM    BINYEAR+3,X'03'         LEAP YEAR?                   NTL
         BNZ   MON1                    NO.                          NTL
         MVI   MONMSK+10,29            YES, CORRECT                 NTL
MON1     XC    DOUBLEWD,DOUBLEWD       CNVT DAYS TO BIN             NTL
         MVC   DOUBLEWD+6(2),DATE+2                                 NTL
         CVB   R2,DOUBLEWD                                          NTL
         ST    R2,BINDAYS              SAVE FOR LATER               NTL
         XR    R1,R1                                                NTL
         LA    R15,11                                               NTL
MON2     IC    R1,MONMSK(R15)          COMPUTE MON & DAY            NTL
         SR    R2,R1                                                NTL
         BNP   MONOVR                                               NTL
         BCT   R15,MON2                                             NTL
         B     *+6                                                  NTL
MONOVR   AR    R2,R1                   CORRECT OVERDRAW             NTL
         CVD   R2,DOUBLEWD             FORMAT DAY                   NTL
         UNPK  CDAYN(2),DOUBLEWD+6(2)                               NTL
         OI    CDAYN+1,X'F0'           FIX UP SIGN                  NTL
         MH    R15,=H'3'               GET TABLE OFFSET             NTL
         LA    R15,MONTAB(R15)         AND POINT AT MONTH           NTL
         MVC   CMON(3),0(R15)          MOVE IT TO THE MSG           NTL
         EJECT ,                                                    NTL
***DAY OF WEEK                                                      NTL
         L     R15,BINYEAR                                          NTL
         SH    R15,=H'69'                                           NTL
         BNP   OUTT                    MUST BE GREATER OR BAD       NTL
         XR    R14,R14                 CLEAR DAY REG                NTL
         D     R14,=F'4'                                            NTL
         MH    R15,=H'5'                                            NTL
         AR    R14,R15                                              NTL
         A     R14,BINDAYS                                          NTL
         SRDA  R14,32                                               NTL
         D     R14,=F'7'               MODULO 7 FOR WEEK            NTL
         MH    R14,=H'3'                                            NTL
         LA    R14,DAYTAB(R14)         POINT AT TODAY               NTL
         MVC   CDAY(3),0(R14)          INSERT IN MSG                NTL
***                                                                 NTL
MOVEJD   MVC   JDATE-1(7),=X'4020204B202020'                        NTL
         ED    JDATE-1(7),DATE+1                                    NTL
         MVC   CJDAY(3),JDATE+3         MOVE DAY TO MESSAGE         NTL
*                                                                   NTL
*                                                                   NTL
DATERTN  BR    R7                      RETURN TO MAINLINE           NTL
*                                                                   NTL
OUTT     MVC   CDAY(3),=CL3'???'                                    NTL
         B     MOVEJD                                               NTL
         SPACE 2                                                    NTL
         EJECT
***********************************************************************
*                                                                   NTL
*       CONSTANTS FOR DATE ROUTINE USAGE                            NTL
*                                                                   NTL
***********************************************************************
         SPACE ,
HHMASK   DC    X'40202021202022212020222120204B2020'                NTL
DEC60    DC    X'060C'                                              NTL
DEC6000  DC    X'06000C'                                            NTL
DEC50    DC    X'050C'                                              NTL
***********************************************************************
* LEAVE FIELDS TOGETHER.. INITIALIZED BY ONE MVC WITH VALUES        NTL
*                                                                   NTL
XMONMSK  DC    AL1(31,30,31,30,31,31,30,31,30,31,28,31)        )    NTL
         DC    CL1' '                                          )    NTL
         DC    C'XX.XXX'                           L           )    NTL
*                                                  E  F        )    NTL
         DC    CL2' '                              A  I  T     )    NTL
         DC    CL3' '                              V  E  O  F  )    NTL
         DC    CL2' ',C' ('                        E  L  G  O  )    NTL
         DC    CL3' ',C') '                           D  E  R  )    NTL
         DC    CL3' ',C' '                            S  T     )    NTL
         DC    CL2' ',C':'                               H  I  )    NTL
         DC    CL2' ',C':'                               E  N  )    NTL
         DC    CL5'SS.TH'                                R  I  )    NTL
*                                                           T  )    NTL
MVCLEN   EQU   *-XMONMSK                                            NTL
*                                                                   NTL
***********************************************************************
DAYTAB   DC    C'TUEWEDTHRFRISATSUNMON'                             NTL
MONTAB   DC    C'DECNOVOCTSEPAUGJULJUNMAYAPRMARFEBJAN'              NTL
         EJECT
***********************************************************************
*RMTORLCL SUBROUTINE - DETERMINE REMOTE OR LOCAL DESTINATION        NTL
* R1 POINTS TO PRTRT/PUNRT, R15 TO ASSEMBLY POINTER                 NTL
***********************************************************************
RMTORLCL CLC   2(2,R1),=X'0000'    IS IT FOR REMOTE00 (LOCAL)
         BNE   RMTRMT         NO LUCK .. HAVE TO WORK FOR IT        NTL
*                                                                   NTL
         L     R2,QCJQTL              GET HCT AREA                WGH
         USING $SAVEBEG,R2                                        WGH
         CLC   0(2,R1),$NODEID        IS THIS OUR NODE            WGH
         BE    LCLLCL                 YES.. THEN LOCAL            WGH
         DROP  R2
         MVI   0(15),C'N'             MOVE IN 'NODE'              WGH
         LA    R15,1(R15)             BUMP PTR                    WGH
         SR    R14,R14                CLEAR REG                   WGH
         ICM   R14,3,0(R1)            GET NODE NUM                WGH
         CVD   R14,DOUBLEWD   NODE NUMBER TO DECIMAL              WGH
         B     FITINUM1       FIT THE NUMBER IN MESSAGE           WGH
LCLLCL   MVC   0(L'LOCAL,R15),LOCAL   MOVE IN LOCAL                 NTL
         LA    R15,L'LOCAL(R15)       BUMP POINTER AND              NTL
         BR    R7                       RETURN                      NTL
*                                                                   NTL
RMTRMT   MVC   0(L'RMT,R15),RMT       MOVE IN 'RMT'                 NTL
         CLC   0(2,R1),=X'0000'    BR IF NOT                         CL
         BNE   *+10                 SPECIAL LOCAL                    CL
         MVC   0(L'LCL,R15),LCL    MOVE IN 'LCL'                     CL
         LA    R15,L'RMT(R15)  BUMP POINTER                         NTL
         SR    R14,R14        LOAD RMT FLAGS                        NTL
         ICM   R14,3,2(R1)         FROM PRT/PUN                   UF030
         CVD   R14,DOUBLEWD   RMT NUMBER TO DECIMAL                 NTL
         B     FITINUM1       FIT THE NUMBER IN RMT MESSAGE         NTL
         SPACE 2
***********************************************************************
* FITINUM SUBROUTINE - CONVERT BIN NUMBER TO NICE FORMAT            NTL
*                                                                   NTL
***********************************************************************
FITINUM  CVD   R1,DOUBLEWD    CONVERT TO PACKED DECIMAL             NTL
FITINUM1 MVC   EDITWORK(L'NORMAL),NORMAL INIT THE EDIT FORMAT       NTL
         LA    R1,EDITWORK+SIGNORM IN CASE OF ZEROES                NTL
         EDMK  EDITWORK(L'NORMAL),DOUBLEWD+2 CONVERT TO EBCDIC      NTL
         LA    R14,EDITWORK+L'NORMAL-1 A(END OF CONVERTED NUMBER)   NTL
         SLR   R14,R1         LENGTH OF THE CONVERTED NUMBER - 1    NTL
         EX    R14,MVNUMBER   PUT THE NUMBER IN THE MSG             NTL
         LA    R15,1(R14,R15) A(NEXT SPOT IN MSG)                   NTL
         BR    R7             RETURN TO OUR CALLER                  NTL
         SPACE 3                                                    NTL
MVNUMBER MVC   0(0,R15),0(R1) TO BE EXECUTED                        NTL
         SPACE 1                                                  ONL14
TILTSYSD QTILT '*** COMMAND INVALID FOR SYSDS TYPE JOBS ***'      ONL14
         SPACE 2                                                    NTL
NORMAL   DC    X'402020202020202020202120' EDIT MASK                NTL
SIGNORM  EQU   11             OFFSET TO LAST DIGIT                  NTL
RMT      DC    C'RMT'                                               NTL
LCL      DC    C'LCL'                                                CL
LOCAL    DC    C'LOCAL'                                             NTL
         EJECT ,                                                    NTL
         LTORG                                                      NTL
         EJECT ,                                                    NTL
SYMDEL   DSECT ,                   KILL SYM CARD GENERATION       UF023
CJHIST   CSECT ,                                                  UF023
         PUSH  PRINT
         PRINT NOGEN
         AIF   (NOT &QACF2).$SKP4                                 ONL15
         AIF   (NOT &QSP133).$SKP4                                ONL15
         #ACFJCTX ,                GEN ACF2 JCT EXTENSION DSECT   ONL15
.$SKP4   ANOP  ,                                                  ONL15
         QCOMMON                   MOVE QCOMMON BEFORE EQUATES      NTL
         COPY $HASPGBL
&MACSPLV SETC '2'
         $HASPEQU
         POP   PRINT
SYMNODEL DSECT ,                   RESTORE SYM CARD GENERATION    UF023
CJHIST   CSECT ,                                                  UF023
***********************************************************************
*                                                                   NTL
* LINE MAPPINGS                                                     NTL
*                                                                   NTL
***********************************************************************
*                   0123456789.123456789.123456789.123456789.123456789.
*              123456789.123456789.123456789.
HEADER   DC    CL80'                           JOB HISTORY INFORMATION'
HEAD3    DC    CL80'XXXXXXXX  XXXXXXXX VIA=XXXXXXXX BIN=XXXX  CLASS=X M*
               SGCLASS=X  NOTIFY=XXXXXXX'                           NTL
*              123456789.123456789.123456789
HEAD5    DC    CL80'PROCDDN=XXXXXXXX PRT=       PUN=        RDR TIME'
HEAD6    DC    CL80'PROGRAMMER=XXXXXXXXXXXXXXXXXXXX         XEQ START'
HEAD7    DC    CL80'CARDS  IN=                              XEQ STOP'
HEAD8    DC    CL80'LINES OUT=             CARDS OUT=       OUT START'
*
         AIF   (NOT &QACF2).$SKP5                                 ONL15
         AIF   (&QONL).ONL17C                                     ONL17
         SPACE 1                                                  ONL15
HEAD12   DC    CL80'                              ACF2 INFORMATION'
HEAD14   DC    CL80'LOGONID=XXXXXXXX GROUP=XXXXXXXX NAME=XXXXXXXXXXXXXX*
               XXXXXX PHONE=XXXXXXXXXXXX'                           NTL
HEAD16   DC    CL80'SOURCE=XXXXXXXX SUBMITTED BY XXXXXXXX XXXXXXXX XXXX*
               XXXX'                                                NTL
         AGO   .ONL17D                                            ONL17
.ONL17C  ANOP  ,                                                  ONL17
         SPACE 1                                                  ONL17
HEAD12   DC    CL80'                            ACF2 INFORMATION' ONL17
HEAD14   DC    CL80'LOGONID=XXXXXXXX                NAME=XXXXXXXXXXXXXXX
               XXXXXX PHONE=XXXXXXXXXXXX'                         ONL17
HEAD15   DC    CL80'UID=XXXXXXXXXXXXXXXXXXXXXXXX    ADDR=XXXXXXXXXXXXXXX
               XXXXXXXXXX'                                        ONL17
HEAD16   DC    CL80'SOURCE=XXXXXXXX SUBMITTED BY XXXXXXXX XXXXXXXX XXXXX
               XXXX'                                              ONL17
.ONL17D  ANOP  ,                                                  ONL17
.$SKP5   ANOP  ,                                                  ONL15
         AIF   (NOT &QNERDC).NONERDC                              UF030
HEAD21   DC    CL80'                             NERDC INFORMATION'
HEAD22   DC    CL80'LOGONID=         ACCESS#=         SEQ#=    HEADER= +
                      '                                           UF030
HNERLID  EQU   QDMSG+08,8          SPACE FOR LOGON ID             UF030
HNERACC# EQU   QDMSG+25,8          SPACE FOR ACCESS NUMBER        UF030
HNERSEQ# EQU   QDMSG+39,3          SPACE FOR SEQUENCE NUMBER      UF030
HNERHEAD EQU   QDMSG+50,8          SPACE FOR OUTPUT HEADER        UF030
         SPACE 1                                                  UF030
HEAD23   DC    CL80'PROCLIB=                                           +
                 PROCVOL=      '                                  UF030
HNERPROC EQU   QDMSG+8,44          SPACE FOR PROCLIB DSN          UF030
HNERPROV EQU   QDMSG+61,6          SPACE FOR PROCLIB VOLSER       UF030
         SPACE 1                                                  UF030
.NONERDC ANOP  ,                                                  UF030
         EJECT ,                                                    NTL
SYMDEL   DSECT ,                   KILL SYM CARD GENERATION       UF023
CJHIST   CSECT ,                                                  UF023
         DROP  ,                                                  UF023
         QPRBGEN BEGIN             SET PRINT FOR CNTL BLOCK GEN   ONL01
        $BUFFER ,                                                 ONL16
         IFGRPL
        $LMT   ,                                                  WGH42
        $XECB  ,                                                  WGH42
PDS2BLEN EQU   1                                                  WGH42
        $JCT   ,                                                  ONL16
        $PCE   ,                                                  WGH42
        $MIT   ,                                                  WGH42
        $HCT   ,                                                  WGH42
        $PSV   ,                JES2 4.3
         AIF   (NOT &QNERDC).NOC29A                               UF046
         $NHD                                                     UF046
.NOC29A  ANOP                                                     UF046
         QPRBGEN DONE              RESTORE NORMAL PRINT STATUS    ONL01
         EJECT  ,                                                   NTL
SYMNODEL DSECT ,                   RESTORE SYM CARD GENERATION    UF023
         SPACE 2                                                    NTL
*                            OVERLAY FOR HEAD3                      NTL
JOBNAME  EQU   QDMSG+00,8                                           NTL
JOBNUMB  EQU   QDMSG+10,8                                           NTL
JOBSCE   EQU   QDMSG+23,8                                           NTL
BIN#     EQU   QDMSG+36,4                                           NTL
JOBCLASS EQU   QDMSG+48,1                                           NTL
MSGCLASS EQU   QDMSG+59,1                                           NTL
NOTIFY   EQU   QDMSG+69,7                                           NTL
*                                                                   NTL
*                            OVERLAY FOR HEAD5                      NTL
PROCDDN  EQU   QDMSG+08,8                                           NTL
PRTDEST  EQU   QDMSG+21,6                                           NTL
PUNDEST  EQU   QDMSG+32,6                                           NTL
TIMESTMP EQU   QDMSG+50,29     COMMON FOR READER/XEQ/PRT            NTL
*                                                                   NTL
*                            OVERLAY FOR HEAD6                      NTL
PROGAMER EQU   QDMSG+11,20                                          NTL
*                            OVERLAY FOR HEAD7                      NTL
CARDSIN  EQU   QDMSG+10,8                                           NTL
*                            OVERLAY FOR HEAD8                      NTL
LINESOUT EQU   QDMSG+10,8                                           NTL
CARDSOUT EQU   QDMSG+33,8                                           NTL
         SPACE 1                                                  ONL15
         AIF   (NOT &QACF2).$SKP6                                 ONL15
         AIF   (&QONL).ONL17E                                     ONL17
         SPACE 1                                                  ONL15
*                            OVERLAY FOR HEAD14                     NTL
LOGONID  EQU   QDMSG+08,8                                           NTL
GROUP    EQU   QDMSG+23,8                                           NTL
NAME     EQU   QDMSG+37,20                                          NTL
PHONE    EQU   QDMSG+64,12                                          NTL
*                            OVERLAY FOR HEAD16                     NTL
SOURCE   EQU   QDMSG+07,8                                           NTL
SUBLID   EQU   QDMSG+29,8                                           NTL
SUBPROG  EQU   QDMSG+38,8                                           NTL
SUBPATH  EQU   QDMSG+47,8                                           NTL
         SPACE 1                                                  ONL15
         AGO   .ONL17F                                            ONL17
.ONL17E  ANOP  ,                                                  ONL17
         SPACE 1                                                  ONL17
*                            OVERLAY FOR HEAD14                   ONL17
LOGONID  EQU   QDMSG+08,8                                         ONL17
NAME     EQU   QDMSG+37,20                                        ONL17
PHONE    EQU   QDMSG+64,12                                        ONL17
*                            OVERLAY FOR HEAD15                   ONL17
UIDSTR   EQU   QDMSG+04,24                                        ONL17
MAILADDR EQU   QDMSG+37,24                                        ONL17
*                            OVERLAY FOR HEAD16                   ONL17
SOURCE   EQU   QDMSG+07,8                                         ONL17
SUBLID   EQU   QDMSG+29,8                                         ONL17
SUBPROG  EQU   QDMSG+38,8                                         ONL17
SUBPATH  EQU   QDMSG+47,8                                         ONL17
         SPACE 1                                                  ONL17
.ONL17F  ANOP  ,                                                  ONL17
.$SKP6   ANOP  ,                                                  ONL15
         EJECT ,                                                    NTL
***********************************************************************
*                                                                   NTL
* WORK AREA DSECT                                                   NTL
*                                                                   NTL
***********************************************************************
WORK     DSECT                                                      NTL
         DS    CL72                                                 NTL
DOUBLEWD DC    D'0'                                                 NTL
BINYEAR  DC    F'0'                                                 NTL
BINDAYS  DC    F'0'                                                 NTL
DATE     DC    F'0'                                                 NTL
WORKWORD DC    2F'0'                                                NTL
EDITWORK DC    12H'0'
***********************************************************************
* LEAVE FIELDS TOGETHER.. INITIALIZED BY ONE MVC WITH VALUES        NTL
*                                                                   NTL
MONMSK   DC    AL1(31,30,31,30,31,31,30,31,30,31,28,31)        )    NTL
         DC    CL1' '                                          )    NTL
*        0123456789.123456789.123456789.                       )    NTL
*        DDMONYY (DDD) DAY HH:MM:SS.TH                         )    NTL
*                                                              )    NTL
JDATE    DC    C'XX.XXX'                           L           )    NTL
*                                                  E  F        )    NTL
CDAYN    DC    CL2' '                              A  I  T     )    NTL
CMON     DC    CL3' '                              V  E  O  F  )    NTL
CYR      DC    CL2' ',C' ('                        E  L  G  O  )    NTL
CJDAY    DC    CL3' ',C') '                           D  E  R  )    NTL
CDAY     DC    CL3' ',C' '                            S  T     )    NTL
CHH      DC    CL2' ',C':'                               H  I  )    NTL
CMM      DC    CL2' ',C':'                               E  N  )    NTL
CSS      DC    CL5'SS.TH'                                R  I  )    NTL
*                                                           T  )    NTL
***********************************************************************
LEN      EQU   *-CDAYN                                              NTL
         END  ,                                                     NTL
./ ADD NAME=CTGPS    0101-93067-94091-1215-00247-00246-00002-SBGCSC
CTGPS    TITLE 'QUEUE COMMAND - LIST JOB WITH MOST TRACK GROUPS'  ONL01
CTGPS    QSTART ,                  START CTGPS CSECT ASSEMBLY     ONL01
         USING QCKPT,R10           BASE REG FOR CHECKPOINT WORK AREA
         L     R10,QVCKPT          LOAD BASE REG
         USING QDISPLAY,R9
         L     R9,QVDSPL           ADDRESSING FOR DISPLAY AREA
         USING WORK,R13            LOCAL WORK AREA
*        READ IN THE CHECKPOINT
         L     R15,=V(CKPT)        ADDR OF CKPT ROUTINE
         BALR  R14,R15             GO TO IT
*
         XC    JQEAREA(L'JQEAREA),JQEAREA CLEAR JQE AREA
         MVC   TGPSAREA,TGPSFMT    PRIME TRACK GROUPS ACCUMULATORS
         XC    TOTTGPS,TOTTGPS     CLEAR ACCUMULATOR
         XC    TOTJOBS,TOTJOBS     CLEAR ACCUMULATOR
         L     R1,QCJQTL           POINT TO HCT SAVEAREA
         USING $SAVEBEG,R1         SET ADDRESSING
         LA    R3,$JQHEADS-(JQENEXT-JQE) POINT TO FIRST QHEAD
         LA    R4,$JQHEADL         SIZE OF EACH QHEAD
         LA    R5,$JQHEADS-(JQENEXT-JQE)+($JQTYPES*$JQHEADL)-1
         DROP  R1                  DROP HCT ADDRESSING
NXTQHD   LR    R6,R3               POINT TO NEXT QHEAD
         USING JQE,R6              ADDRESSING FOR JQE
JQELOOP  L     R6,JQENEXT          GET CHAIN FIELD
         N     R6,=X'00FFFFFF'     TEST FOR END
         BZ    STEPQHD             BRANCH IF END OF CHAIN
         LR    R2,R6               SAVE OFFSET FOR TEST
         A     R6,QCJQTA           CALCULATE FULL ADDRESS
         LH    R2,JQETGNUM         NUMBER OF TRACK GROUPS            CL
         TM    JQEFLAG5,JQE5XUSD   BR IF NOT
         BNO   TGTEST               USING JQE EXTENSION
         AL    R2,QCJQEXA          COMPUTE ADDR OF EXTENSION
         LH    R2,$JEXTTGN(,R2)    TRACK GROUPS IN EXTENSION
TGTEST   LTR   R2,R2               TEST FOR TGPS
         BNP   JQELOOP             NONE, SKIP THIS JQE
         LR    R14,R2              NUMBER OF TRACK GROUPS
         A     R14,TOTTGPS         ADD TO ACCUMULATOR
         ST    R14,TOTTGPS         AND RESAVE
         LA    R14,1               BUMP TOTAL
         A     R14,TOTJOBS           NUMBER OF
         ST    R14,TOTJOBS             JOBS
         SPACE 1
         LA    R14,TGPSAREA+L'TGPSAREA-8 POINT TO LAST ENTRY
         LA    R15,(L'TGPSAREA/8)  NUMBER OF ENTRIES
         LA    R1,8                SIZE OF AN ENTRY
TGTST01  C     R2,0(R14)           COMPARE TRACK GROUPS WITH SLOT SIZE
         BNH   TGTST05             YES, INSERT IT HERE
         SR    R14,R1              BACK UP TO PREV ENTRY
         BCT   R15,TGTST01         LOOP THROUGH ELEMENTS
         B     TGTST99             NONE, SKIP INCREMENT
         SPACE 1
TGTST05  LA    R15,1               SET FOR INCREMENT
         A     R15,4(,R14)         INCREMENT COUNT
         ST    R15,4(,R14)         AND SAVE NEW COUNT
         SPACE 1
TGTST99  DS    0H
         LA    R14,JQEAREA+L'JQEAREA-8 POINT TO LAST ENTRY
         LA    R15,(L'JQEAREA/8)   NUMBER OF ENTRIES
         LA    R1,8                SIZE OF AN ENTRY
TGTST1   C     R2,4(R14)           SEE IF NEW IS BIGGER
         BNL   TGTINS              YES, INSERT IT HERE
         SR    R14,R1              BACK UP TO PREV ENTRY
         BCT   R15,TGTST1          LOOP THROUGH ELEMENTS
         B     JQELOOP             GO TRY NEXT JQE
         SPACE 1
TGTINS   BCTR  R15,0               DROP BY ONE
         SLL   R15,3               TIMES 8 (LENGTH OF ENTRY)
         BCTR  R15,0               DROP FOR EXECUTE
         LTR   R15,R15             TEST FOR VALID
         BNP   TGTNOMV             NO, JUST DO THE INSERT
         EX    R15,TGTMVC          MOVE ENTRIES DOWN
TGTNOMV  ST    R6,0(,R14)          SAVE JQE ADDRESS
         ST    R2,4(,R14)          SAVE # OF TRACK GROUPS
         B     JQELOOP             TRY NEXT JQE
         SPACE 1
TGTMVC   MVC   JQEAREA(*-*),JQEAREA+8    SLIDE ENTRIES DOWN
         SPACE 1
STEPQHD  BXLE  R3,R4,NXTQHD        STEP TO NEXT QHEAD
         DROP  R6                  DROP OLD JQE REG
         SPACE 1
         LA    R2,JQEAREA+L'JQEAREA-8 POINT TO LAST ENTRY
         LA    R3,(L'JQEAREA/8)    NUMBER OF ENTRIES
         LA    R4,8                SIZE OF EACH ENTRY
         MVC   QDHLINE,HEADING     SET HEADER LINE
         SPACE 1
PRNTJQE  L     R5,0(,R2)           JQE ADDRESS
         USING JQE,R5              ADDRESSING
         MVC   QDMSG,QBLANK        BLANK THE TEXT AREA
         LTR   R5,R5               ANY ADDRESS?                   UF046
         BZ    PRNTJQEN            NO, SKIP TRASH                 UF046
         LH    R0,JQEJOBNO         GET JOB NUMBER
         CVD   R0,DWORD            TO DECIMAL
         MVC   MSGJOBID,ED         SET EDIT PATTERN
         ED    MSGJOBID,DWORD+4    SET JOB ID IN MESSAGE TEXT
         MVC   MSGJNAME,JQEJNAME   MOVE JOB NAME TO MESSAGE
         TM    JQEFLAG1,JQE1BUSY   SKIP IF JOB                    CL009
         BZ    PRNTJQEN             NOT BUSY                      CL009
         IC    R1,JQEFLAG1         SYSTEM BUSY                    CL009
         N     R1,=A(JQE1BUSY)      INDICATOR                     CL009
         SLL   R1,3                COMPUTE OFFSET INTO QSE TABLE  CL009
         LA    R1,QSYSID(R1)       ADDR OF SYSTEM BUSY            CL009
         MVC   MSGACT,0(R1)        INSERT INTO MESSAGE            CL009
         SPACE 1                                                  CL009
PRNTJQEN DS    0H                                                 UF046
         L     R0,4(,R2)           NUMBER OF TRACK GROUPS
         LR    R1,R0               SAVE FOR DIVIDE
         CVD   R0,DWORD            TO DECIMAL
         MVC   MSG#TGPS,ED         SET EDIT PATTERN
         ED    MSG#TGPS,DWORD+4    SET IN MESSAGE
         L     R15,QCTNUMTG        NUMBER OF ACTIVE TRACK GROUPS  CL001
         SR    R0,R0               CLEAR FOR DIVIDE
         MH    R1,=H'1000'
         DR    R0,R15              DIVIDE TO GET PERCENT OF TOTAL
         CVD   R1,DWORD            TO DECIMAL
         MVC   MSGTGPCT,EDPCT      SET EDIT MASK
         ED    MSGTGPCT,DWORD+6    SET PCT TO MESSAGE
         L     R0,TGPSAREA-JQEAREA(,R2) TRACK GROUP ACCUMULATOR
         CVD   R0,DWORD            TO DECIMAL
         MVC   MSG$TGPS,ED         SET EDIT PATTERN
         ED    MSG$TGPS,DWORD+4    SET IN MESSAGE TEXT
         C     R0,TGPSFMT          IS THIS THE MAX VALUE?
         BNE   *+4+6               NO SKIP NEXT
         MVC   MSG$TGPS,=C'     MAX'  SET MORE REASONABLE VALUE
         L     R0,TGPSAREA-JQEAREA+4(,R2) NUMBER OF JOBS
         CVD   R0,DWORD            TO DECIMAL
         MVC   MSG$JOBS,ED         SET EDIT PATTERN
         ED    MSG$JOBS,DWORD+4    SET IN MESSAGE TEXT
         LR    R1,R0               SAVE FOR DIVIDE
         SR    R0,R0               CLEAR FOR DIVIDE
         MH    R1,=H'1000'
         L     R15,TOTJOBS         GET TOTAL NUMBER OF JOBS
         DR    R0,R15              DIVIDE TO GET PERCENT OF TOTAL
         CVD   R1,DWORD            TO DECIMAL
         MVC   MSG$PCT,EDPCT       SET EDIT MASK
         ED    MSG$PCT,DWORD+6     SET PCT TO MESSAGE
         MVC   QDMLNG,=H'80'       SET MESSAGE LENGTH
         LA    R0,QDMSG            POINT TO MESSAGE AREA
         ST    R0,QDMSGA           SET IN AREA
         L     R15,=V(DISPLAY)     POINT TO OUTPUT ROUTINE
         BALR  R14,R15             LINK TO IT
         SPACE 1
         SR    R2,R4               MOVE TO NEXT ENTRY
         BCT   R3,PRNTJQE          PRINT ALL ENTRIES
         SPACE 1
         MVC   QDMSG,QBLANK        BLANK THE TEXT AREA
         MVC   MSGJNAME,=CL8'*TOTAL*'
         L     R0,TOTTGPS          TOTAL NUMBER OF TRACK GROUPS
         CVD   R0,DWORD            TO DECIMAL
         MVC   MSG#TGPS,ED         SET EDIT PATTERN
         ED    MSG#TGPS,DWORD+4    SET IN MESSAGE
         L     R0,TOTJOBS          TOTAL NUMBER OF JOBS
         CVD   R0,DWORD            TO DECIMAL
         MVC   MSG$JOBS,ED         SET EDIT PATTERN
         ED    MSG$JOBS,DWORD+4    SET IN MESSAGE
         MVC   QDMLNG,=H'80'       SET MESSAGE LENGTH
         LA    R0,QDMSG            POINT TO MESSAGE AREA
         ST    R0,QDMSGA           SET IN AREA
         L     R15,=V(DISPLAY)     POINT TO OUTPUT ROUTINE
         BALR  R14,R15             LINK TO IT
         SPACE 1
STOP     QSTOP
         SPACE 1
ED       DC    X'4020202020202120' EDIT PATTERN
EDPCT    DC    X'4020214B21'       EDIT PATTERN FOR % SPOOL
*                   123456789 123456789 123456789 123456789 123456789 1
*              23456789 123456789 123456789.
*
*                   12345678 12345678 2345678 2345
*                       2345678 2345678 2345'
*
HEADING  DC    CL80'   JOBID JOBNAME     TGPS  PCT                     +
                           TGPS    JOBS  PCT'
         SPACE 1
         LTORG ,
         SPACE 1
TGPSFMT  DC    X'7FFFFFFF',F'0'
         DC    F'150',F'0'
         DC    F'100',F'0'
         DC    F'080',F'0'
         DC    F'060',F'0'
         DC    F'050',F'0'
         DC    F'040',F'0'
         DC    F'030',F'0'
         DC    F'020',F'0'
         DC    F'015',F'0'
         DC    F'010',F'0'
         DC    F'009',F'0'
         DC    F'008',F'0'
         DC    F'007',F'0'
         DC    F'006',F'0'
         DC    F'005',F'0'
         DC    F'004',F'0'
         DC    F'003',F'0'
         DC    F'002',F'0'
         DC    F'001',F'0'
         SPACE 1
WORK     DSECT
         DS    18F                 SAVE AREA
         DS    18F                 SCRATCH SPACE
DWORD    DS    D                   SCRATCH DOUBLE WORD
TOTTGPS  DS    F                   TOTAL TRACK GROUPS ALLOCATED
TOTJOBS  DS    F                   TOTAL NUMBER OF JOBS PROCESSED
JQEAREA  DS    XL(20*8)            20 ENTRIES (JQEADDR, #TGPS)
TGPSAREA DS    XL(20*8)            20 ENTRIES (# TGPS, # JOBS)
SYMDEL   DSECT ,                   KILL SYM CARD GENERATION       UF023
         QPRBGEN BEGIN             SET PRINT FOR CNTL BLOCK GEN   ONL01
         QCOMMON
         QPRBGEN DONE              RESTORE NORMAL PRINT STATUS    ONL01
         ORG   QDMSG               BACK UP TO MESSAGE AREA
MSGJOBID DS    CL8,X               SPACE FOR JOBID
MSGJNAME DS    CL8                 SPACE FOR JOBNAME
MSG#TGPS DS    CL(L'ED)            SPACE FOR NUMBER OF TRACK GROUPS
MSGTGPCT DS    CL(L'EDPCT)         SPACE FOR % OF TOTAL TRACK GROUPS
         DS    C                   FILLER                         CL009
MSGACT   DS    CL4                 ACTIVE SYSTEM NAME             CL009
         DS    CL24                FILLER                         CL009
MSG$TGPS DS    CL(L'ED)            SPACE FOR NUMBER OF TRACK GROUPS
MSG$JOBS DS    CL(L'ED)            SPACE FOR NUMBER OF JOBS W/ TGPS
MSG$PCT  DS    CL(L'EDPCT)         SPACE FOR % OF JOBS
CTGPS    CSECT
         DROP
         COPY  $HASPGBL
&VERSION SETC  'SP 4.2.0'
&MACSPLV SETC  '2'
&SYSSPLV SETC  '2'
&FMID    SETC  'HJE4420'
         QPRBGEN BEGIN             SET PRINT FOR CNTL BLOCK GEN   ONL01
        $BUFFER
        $LMT    ,                                                 WGH42
        $XECB   ,                                                 WGH42
PDS2BLEN EQU    1                                                 WGH42
         IFGRPL
        $PCE
        $JQE
        $JCT
        $CAT
        $MIT   ,                                                  ONL11
        $HCT
        $PSV   ,                JES2 4.3
        $TAB
        $PDDB
        $IOT
        $HASPEQU
         QPRBGEN DONE              RESTORE NORMAL PRINT STATUS    ONL01
         DROP
SYMNODEL DSECT ,                   RESTORE SYM CARD GENERATION    UF023
         END
./ ADD NAME=INIT     0102-93067-95213-1920-00787-00787-00000-SBGCSC
INIT     TITLE 'QUEUE COMMAND - INITIALIZATION ROUTINES'          ONL01
INIT     QSTART ,                  START INIT CSECT ASSEMBLY      ONL01
         GBLB  &QDBC          DBC    OPTION                       UF024
         GBLB  &QONL          ONL    OPTION                       ONL08
         GBLB  &LOCK          LOCKHEED OPTION                        CL
***********************************************************************
*                                                                     *
*   LOAD QCOMMON                                                      *
*                                                                     *
***********************************************************************
*
****
*******  IF YOU WANT TO CHANGE THE NAME FOR THE COMMON AREA,
****               THIS IS THE ONLY REFERENCE TO IT.
*
         AIF   (&QONL).ONL08                                      ONL08
         L     R11,=V(QCOMMON) ADDR OF QCOMMON                    UF002
         LTR   R11,R11        SEE IF LINKED IN                    UF002
         BNZ   LOADED         YES, CONTINUE                       UF002
.ONL08   ANOP  ,                                                  ONL08
         SPACE 1                                                  UF002
         LOAD  EP=QUEUECMN    QUEUE COMMON AREA
         LR    R11,R0         ADDR OF QCOMMON
         SPACE 1                                                  UF002
LOADED   DS    0H                                                 UF002
         L     R1,4(R13)      PREVIOUS SAVE AREA
         ST    R11,64(R1)     UPDATE R11 IN PREVIOUS SAVE AREA
         ST    R1,QFRSTSA     STORE ADDR OF FIRST SAVEAREA IN QCOMMON
         USING QDAIR,R10      BASE REG FOR DAIR WORK
         L     R10,QVDAIR     LOAD BASE REG
         USING QCKPT,R9       BASE REG FOR CKPT WORK
         L     R9,QVCKPT      LOAD BASE REG
         USING QDISPLAY,R8    BASE REG FOR DISPLAY WORK
         L     R8,QVDSPL      LOAD BASE REG
         SPACE 1
         L     R1,16          GET CVT ADDRESS
         USING CVT,R1
         TM    CVTDCB,X'80'   EXECUTING XA MODE
         BNO   NOTXA          NO, BR
         OI    QFLAG1,QFLG1XA SET XA MODE FLAG
         DROP  R1
         SPACE 1
         USING WORK,R13       ADDRESSING FOR SAVE/WORK AREA       UF024
         SPACE 2                                                  ONL02
******************************************************************ONL02
*                                                                 ONL02
*   VERIFY A TSO ENVIRONMENT, FIND THE ADDRRESS OF THE PROTECTED  ONL02
*   STEP CONTROL BLOCK, AND VERIFY SOME FIELDS IN THE COMMAND     ONL02
*   PROCESSOR PARAMETER LIST.                                     ONL02
*                                                                 ONL02
******************************************************************ONL02
         SPACE 1                                                  ONL02
NOTXA    LA    R3,QDWORK           ADDR FOR EXTRACT ANSWER AREA   ONL02
         LA    R4,QAEXTLST         ADDR OF EXTRACT PARAMETER LIST ONL02
         EXTRACT (R3),FIELDS=(TSO,PSB),MF=(E,(R4))  EXTRACT INFO  ONL02
         SPACE 1                                                  ONL02
         L     R1,QDWORK           PICKUP ADDR OF TSO INDICATOR   ONL02
         TM    0(R1),X'80'         IS THIS A TSO ADDRESS SPACE?   ONL02
         BO    NOTBATCH            YES... CONTINUE                WGH
         OI    QFLAG1,QFLG1BAT     NO...  SET BATCH MODE          WGH
         SPACE 1                                                  ONL02
NOTBATCH L     R1,QDWORK+4         PICKUP ADDR OF PSCB            ONL02
         LTR   R1,R1               IS PSCB AVAILABLE?             ONL02
         BZ    QAABORT             IF NOT, ABORT                  ONL02
         SPACE 1                                                  ONL02
         USING PSCB,R1             NOTE PSCB ADDRESSABILITY       ONL02
         USING CPPL,R2             NOTE CPPL ADDRESSABILITY       ONL02
         USING UPT,R15             NOTE UPT  ADDRESSABILITY       WGH02
         L     R15,PSCBUPT         ADDR OF UPT                    WGH
         SPACE 1                                                  ONL02
         CLM   R1,15,CPPLPSCB      VERIFY PSCB ADDR IN CPPL       ONL02
         BNE   QAABORT             ABORT IF ADDR'S DON'T MATCH    ONL02
         CLC   PSCBUPT,CPPLUPT     VERIFY UPT ADDR IN CPPL        ONL02
         BNE   QAABORT             ABORT IF ADDR'S DON'T MATCH    ONL02
         SPACE 2                                                  ONL02
******************************************************************ONL02
*                                                                 ONL02
*   GET THE USERID AND ITS LENGTH AND SAVE THEM IN QCOMMON        ONL02
*                                                                 ONL02
******************************************************************ONL02
         SPACE 1                                                  ONL02
         MVC   QLOGON(L'PSCBUSER),PSCBUSER  SET USERID IN QCOMMON ONL02
         SLR   R0,R0               CLEAR FOR INSERT               ONL02
         IC    R0,PSCBUSRL         PICKUP LENGTH OF USERID        ONL02
         ST    R0,QLOGONLN         SET LENGTH IN QCOMMON          ONL02
         CLI   QLOGON,C' '         IS USERID BLANK                WGH
         BNE   IDOK                NO.. USE IT                    WGH
         MVC   QLOGON(L'UPTPREFX),UPTPREFX SET PREFIX IN QCOMMON  WGH
         IC    R0,UPTPREFL         PICKUP LENGTH OF PREFIX        WGH
         ST    R0,QLOGONLN         SET LENGTH IN QCOMMON          WGH
         DROP  R15                                                WGH
IDOK     EQU   *                                                  WGH
         SPACE 2                                                  ONL02
******************************************************************ONL02
*                                                                 ONL02
*   CHECK PSCB FOR OPERATOR AUTHORITY                             ONL02
*                                                                 ONL02
******************************************************************ONL02
         SPACE 1                                                  ONL02
         TM    QFLAG1,QFLG1BAT     ARE WE IN BATCH MODE ?         WGH
         BO    SETOPER             YES.. GIVE FULL AUTH           WGH
         TM    PSCBATR1,PSCBCTRL   DOES USER HAVE OPER AUTHORITY? ONL02
         BZ    SKIPOPER            SKIP IF NO                     ONL02
SETOPER  OI    QAFLAGS,QAFXOPER    SHOW USER HAS OPER AUTHORITY   ONL02
SKIPOPER DS    0H                                                 ONL02
         SPACE 2                                                  ONL02
******************************************************************WGH
*                                                                 WGH
*   FILL IN IOPL PARAMETER LIST FROM THE CPPL                     WGH
*                                                                 WGH
******************************************************************WGH
         SPACE 1                                                  WGH
         MVC   STKIOPL,CPPLUPT     USER PROFILE TABLE             WGH
         MVC   STKIOPL+4,CPPLECT   ENVIRONMENT CNTL TABLE         WGH
         LA    R0,STKIOECB         ECB ADDRESS                    WGH
         ST    R0,STKIOPL+8        FILL IT IN                     WGH
         LA    R0,STKBLOCK         STACK   PARM BLOCK             WGH
         ST    R0,STKIOPL+12       FILL IT IN                     WGH
         SPACE 1                                                  WGH
         MVC   GETIOPL,CPPLUPT     USER PROFILE TABLE             WGH
         MVC   GETIOPL+4,CPPLECT   ENVIRONMENT CNTL TABLE         WGH
         LA    R0,GETIOECB         ECB ADDRESS                    WGH
         ST    R0,GETIOPL+8        FILL IT IN                     WGH
         LA    R0,GETBLOCK         GETLINE PARM BLOCK             WGH
         ST    R0,GETIOPL+12       FILL IT IN                     WGH
         SPACE 1                                                  WGH
         MVC   PUTIOPL,CPPLUPT     USER PROFILE TABLE             WGH
         MVC   PUTIOPL+4,CPPLECT   ENVIRONMENT CNTL TABLE         WGH
         LA    R0,PUTIOECB         ECB ADDRESS                    WGH
         ST    R0,PUTIOPL+8        FILL IT IN                     WGH
         LA    R0,PUTBLOCK         PUTLINE PARM BLOCK             WGH
         ST    R0,PUTIOPL+12       FILL IT IN                     WGH
******************************************************************ONL02
*                                                                 ONL02
*   FILL IN DAIR PARAMETER LIST FROM THE CPPL                     ONL02
*                                                                 ONL02
******************************************************************ONL02
         SPACE 1                                                  ONL02
         MVC   DAPLUPT,CPPLUPT     USER PROFILE TABLE             ONL02
         MVC   DAPLECT,CPPLECT     ENVIRONMENT CNTL TABLE         ONL02
         MVC   DAPLPSCB,CPPLPSCB   PROTECTED STORAGE CNTL BLK     ONL02
         DROP  R1                                                 CL006
         SPACE 2                                                  ONL02
         AIF   (NOT &QDBC).NODBC1 SKIP IF DBC NOT INSTALLED       UF024
******************************************************************UF024
*                                                                 UF024
*   IF USER HAS OPER AUTHORITY, ESTABLISH ESTAE ENVIRONMENT       UF024
*                                                                 UF024
******************************************************************UF024
         SPACE 1                                                  ONL02
         TM    QAFLAGS,QAFXOPER    DOES USER HAVE OPER AUTHORITY? ONL02
         BZ    NOTOPER             SKIP IF NO                     ONL02
         SPACE 1                                                  ONL02
         LOAD  EP=DBC,ERRET=NOTOPER  LOAD ESTAE ROUTINE           UF024
         LR    R3,R0          ADDR OF ROUTINE                     UF024
         MVC   WORKAREA(DBCMFLN),DBCMFL GET ESTAE PARM LIST       UF024
         ESTAE (R3),MF=(E,WORKAREA)  CREATE THE ESTAE             UF024
         OI    QFLAG1,QFLG1DBC  INDICATE NEED TO DELETE AT TERM   UF024
         B     NOTOPER        CONTINUE PROCESSING                 UF024
DBCMFL   ESTAE ,MF=L          LIST FORM OF ESTAE                  UF024
DBCMFLN  EQU   *-DBCMFL       LENGTH OF LIST FORM ESTAE           UF024
NOTOPER  DS    0H                                                 ONL02
.NODBC1  ANOP                                                     UF024
         EJECT                                                    CL006
***********************************************************************
*                                                                     *
*        SCAN COMMAND BUFFER FOR KNOWN KEYWORDS.  IF FOUND TAKE       *
*        APPROPRIATE ACTION.  IF NONE FOUND OR RECOGNIZED,            *
*        THEN PASS TO OUR PARSE ROUTINE.                              *
*                                                                     *
*        OPTIONAL KEYWORDS MUST PRECEDE 1ST COMMAND                   *
*                                                                     *
*        Q VOL(VOLSER) UNIT(TYPE) PREFIX(XXXX) 1ST CMD                *
*                                                                     *
***********************************************************************
         SPACE 2
         L     R1,CPPLCBUF     POINT TO COMMAND BUFFER            WGH
         DROP  R2              DROP CPPL USING                    WGH
         LH    R2,0(R1)        GET TOTAL LENGTH                   WGH
         SH    R2,2(R1)        ADJUST FOR CMD LENGTH              WGH
         SH    R2,=H'4'        ADJUST FOR HDR                     WGH
         AH    R1,2(R1)        ADJUST FOR CMD LENGTH              WGH
         AH    R1,=H'4'        ADJUST FOR HDR                     WGH
         LTR   R2,R2                                              WGH
         BNP   SKIP            NO PARMS                           WGH
         STC   R2,QDLINE1      SAVE LENGTH FOR TPUT ON ERROR      WGH
         BCTR  R2,0            REDUCE FOR TRANSLATE               WGH
         EX    R2,MVCBUFA      MOVE TO WORK AREA                  WGH
         LA    R1,QDLINE1+1    POINT TO WORK AREA                 WGH
         EX    R2,OCBUF        XLATE TO UPPER CASE                WGH
         LA    R2,1(R2)        TRUE LENGTH                        WGH
PARMLOOP EQU   *                                                  WGH
         CLI   0(R1),C' '      BLANK ?                            WGH
         BNE   GOTPARM         NO.. GOT SOME PARMS                WGH
         LA    R1,1(R1)        YES.. CHECK NEXT CHARACTER         WGH
         BCT   R2,PARMLOOP     CHECK FOR MORE                     WGH
         B     SKIP            NO MORE PARMS                      WGH
GOTPARM  EQU   *                                                  WGH
         CLC   =C'PREFIX(',0(R1) IS REQUEST FOR DSN PREFIX        WGH
         BE    PREFIX          YES... GO PROCESS                  WGH
         CLC   =C'UNIT(',0(R1) IS REQUEST FOR UNIT                WGH
         BE    UNIT            YES... GO PROCESS                  WGH
         CLC   =C'VOL(',0(R1)  IS REQUEST FOR VOLUME              WGH
         BE    VOLUME          YES... GO PROCESS                  WGH
         MVC   QDREPLY,QBLANK  BLANK THE REPLY LINE               WGH
         SH    R2,=H'1'        REDUCE FOR EXECUTE                 WGH
         BM    SKIP            NO MORE PARMS                      WGH
         CH    R2,=H'62'       IS LENGTH OVER 63 ?                WGH
         BNH   *+8             NO.. USE IT                        WGH
         LA    R2,62           USE MAX LENGTH                     WGH
         EX    R2,MVCBUF       MOVE THE DATA                      WGH
         LA    R2,1(R2)        TRUE LENGTH                        WGH
         STH   R2,QDRLNG       STORE REPLY LENGTH                 WGH
         B     SKIP                                               CL006
PREFIX   EQU   *                                                  WGH
         LA    R1,7(R1)        POINT AT PREFIX FIELD              WGH
         SH    R2,=H'7'        ADJUST LENGTH FIELD                WGH
         BNP   ABORT2          INVALID PARM                       WGH
         MVC   QPREFIX(8),QBLANK  BLANK THE PREFIX FIELD          WGH
         LA    R6,QPREFIX      POINT TO PREFIX FIELD              WGH
         LA    R15,8           MAX CHARS FOR FIELD                WGH
PREFIXA  CLI   0(R1),C')'      END OF FIELD ?                     WGH
         BE    PREFIXND        YES... LOOK FOR MORE               WGH
         SH    R15,=H'1'       DECREMENT MAX LENGTH               WGH
         BM    ABORT2          TOO LONG QUIT                      WGH
         MVC   0(1,R6),0(R1)   MOVE ONE BYTE OF FIELD             WGH
         LA    R6,1(R6)        ADD 1 TO RECEIVING ADDRESS         WGH
         LA    R1,1(R1)        ADD 1 TO SENDING ADDRESS           WGH
         BCT   R2,PREFIXA      BRANCH IF NOT EXHAUSTED            WGH
         B     ABORT2          INVALID PARAMETERS                 WGH
PREFIXND EQU   *                                                  WGH
         LA    R1,1(R1)        POINT PAST PAREN                   WGH
         BCT   R2,PARMLOOP     GO FOR MORE PARMS                  WGH
         B     SKIP            NO MORE PARMS                      WGH
UNIT     EQU   *                                                  WGH
         LA    R1,5(R1)        POINT AT UNIT   FIELD              WGH
         SH    R2,=H'5'        ADJUST LENGTH FIELD                WGH
         BNP   ABORT2          INVALID PARM                       WGH
         MVC   DA08UNIT(8),QBLANK BLANK THE UNIT   FIELD          WGH
         LA    R6,DA08UNIT     POINT TO UNIT   FIELD              WGH
         LA    R15,8           MAX CHARS FOR FIELD                WGH
UNITA    CLI   0(R1),C')'      END OF FIELD ?                     WGH
         BE    UNITEND         YES... LOOK FOR MORE               WGH
         SH    R15,=H'1'       DECREMENT MAX LENGTH               WGH
         BM    ABORT2          TOO LONG QUIT                      WGH
         MVC   0(1,R6),0(R1)   MOVE ONE BYTE OF FIELD             WGH
         LA    R6,1(R6)        ADD 1 TO RECEIVING ADDRESS         WGH
         LA    R1,1(R1)        ADD 1 TO SENDING ADDRESS           WGH
         BCT   R2,UNITA        BRANCH IF NOT EXHAUSTED            WGH
         B     ABORT2          INVALID PARAMETERS                 WGH
UNITEND  EQU   *                                                  WGH
         LA    R1,1(R1)        POINT PAST PAREN                   WGH
         BCT   R2,PARMLOOP     GO FOR MORE PARMS                  WGH
         B     SKIP            NO MORE PARMS                      WGH
VOLUME   EQU   *                                                  WGH
         LA    R1,4(R1)        POINT AT VOLUME FIELD              WGH
         SH    R2,=H'4'        ADJUST LENGTH FIELD                WGH
         BNP   ABORT2          INVALID PARM                       WGH
         MVC   DA08SER(8),QBLANK  BLANK THE VOLUME FIELD          WGH
         LA    R6,DA08SER      POINT TO VOLUME FIELD              WGH
         LA    R15,6           MAX CHARS FOR FIELD                WGH
VOLUMEA  CLI   0(R1),C')'      END OF FIELD ?                     WGH
         BE    VOLUMEND        YES... LOOK FOR MORE               WGH
         SH    R15,=H'1'       DECREMENT MAX LENGTH               WGH
         BM    ABORT2          TOO LONG QUIT                      WGH
         MVC   0(1,R6),0(R1)   MOVE ONE BYTE OF FIELD             WGH
         LA    R6,1(R6)        ADD 1 TO RECEIVING ADDRESS         WGH
         LA    R1,1(R1)        ADD 1 TO SENDING ADDRESS           WGH
         BCT   R2,VOLUMEA      BRANCH IF NOT EXHAUSTED            WGH
         B     ABORT2          INVALID PARAMETERS                 WGH
VOLUMEND EQU   *                                                  WGH
         LA    R1,1(R1)        POINT PAST PAREN                   WGH
         BCT   R2,PARMLOOP     GO FOR MORE PARMS                  WGH
         B     SKIP            NO MORE PARMS                      WGH
ABORT2   EQU   *
         TPUT  MESSAGE2,L'MESSAGE2,EDIT,MF=(E,QTPUT)   TELL THE USER
         SR    R0,R0           CLEAR R0                           WGH
         IC    R0,QDLINE1      GET LENGTH OF PARM                 WGH
         LA    R1,QDLINE1+1    ADDRESS OF PARM                    WGH
         TPUT  (1),(0),R
         ABEND 97             QUIT.
         SPACE 1                                                  CL006
MVCBUF   MVC   QDREPLY(*-*),0(R1)  *** EXECUTE ONLY ***           WGH
MVCBUFA  MVC   QDLINE1+1(*-*),0(R1) ** EXECUTE ONLY ***           WGH
OCBUF    OC    0(*-*,R1),QBLANK        UPPER CASE COMMAND         WGH
         SPACE 2                                                  ONL02
***********************************************************************
*                                                                     *
*   OBTAIN BLOCK ADDR TABLE FOR LISTDS                                *
*                                                                     *
***********************************************************************
         SPACE 1                                                  ONL02
SKIP     EQU   *
         MVC   QDLINE1(132),QBLANK  BLANK THE WORK LINE           WGH
         MVC   QDLINE1+132(132),QBLANK   BLANK THE WORK LINE      WGH
         GETMAIN R,LV=65536*4                                     CL006
         ST    R1,QGETA1      SAVE START ADDR OF GETMAIN
         ST    R1,QCSTART     STORE STARTING ADDR OF TABLE
         A     R1,=A(65536*4) END OF TABLE
         ST    R1,QCEND
         SPACE 2                                                  ONL02
******************************************************************ONL02
*                                                                 ONL02
*   PERFORM AUTHORIZATION CHECK FOR QUEUE COMMAND START-UP        ONL02
*                                                                 ONL02
******************************************************************ONL02
         SPACE 1                                                  ONL02
         QAUTHCK QASTART           PERFORM START-UP AUTHORIZATION ONL02
         SPACE 2                                                  ONL02
***********************************************************************
*                                                                     *
*   ALLOCATE HASPCKPT                                                 *
*                                                                     *
***********************************************************************
         SPACE 1                                                  ONL02
         MVC   DA08DDN,=CL8'HASPCKPQ' DDNAME FOR ALLOCATE         WGH
         GETMAIN R,LV=2+44         WORK AREA                      CL006
         ST    R1,DA08PDSN         SET POINTER TO DSNAME          CL006
         LA    R1,DSNCKPT          ADDR OF CHECKPOINT DSN SUFFIX  CL006
         BAL   R14,BUILDSN         GO BUILD DATA SET NAME         CL006
         MVI   DAIRFLAG,X'08' REQUEST ALLOCATE FUNCTION
         L     R15,=V(ALLOCATE) ADDR OF ALLOCATE MODULE
         BALR  R14,R15        GO TO IT
         SPACE 2                                                  ONL02
******************************************************************ONL02
*                                                                 ONL02
*   PERFORM PRE-OPEN CHECKPOINT/SPOOL AUTHORIZATION CHECK         ONL02
*                                                                 ONL02
******************************************************************ONL02
         SPACE 1                                                  ONL02
         QAUTHCK QABEFOPN          PRE-OPEN CKPT/SPOOL AUTH CHECK ONL02
         SPACE 2                                                  ONL02
***********************************************************************
*                                                                     *
*   OPEN HASPCKPT, READ FIRST BLOCK OF CHECKPOINT                     *
*                                                                     *
***********************************************************************
         SPACE 1                                                  ONL02
         OPEN  MF=(E,HOCKPT)  OPEN HASPCKPT
         L     R2,QCSTART     USE TABLE AREA FOR IOAREA
         POINT HASPCKPT,TIR3  POINT PAST SYNC RECORDS
         READ  HDECB1,SF,,(R2),MF=E READ FIRST RECORD
         CHECK HDECB1
         SPACE 1                                                  2.2.0
*                                                                 2.2.0
*        FORMAT OF CHECKPOINT MASTER RECORD                       2.2.0
*        $SAVEBEG - START OF HCT AREA                             2.2.0
*                   ($SAVELEN LONG)                               2.2.0
*        QSE1     - START OF QSE AREA                             2.2.0
*                   (QSELEN*$QSEMAX)                              2.2.0
*        $JQEEXT  - START OF JQE EXTENSION                        2.2.0
*                   ($MAXEXSZ)                                    2.2.0
*        $DASEXT  - START OF DAS EXTENSIONS                       2.2.0
*                   (DASEXLEN*$SPOLNUM)                           2.2.0
*        $KITPTR  - POINTER TO CHECKPOINT INFO TABLES             2.2.0
*                   ($KITNUM*KITLNGTH)                            2.2.0
*        $CTLB    - POINTER TO CHECKPT I/O CONTROL BYTES          2.2.0
*                                                                 2.2.0
         SPACE 1                                                  2.2.0
*                                                                 UF039
*        GETMAIN DECB WORK AREA FOR CKPT ROUTINE                  UF039
*                                                                 UF039
         SR    R0,R0          CLEAR FOR IC                        UF039
         IC    R0,DCBNCP-IHADCB+HASPCKPT  NUMBER OF CHANNEL PGMS  UF039
         MH    R0,=Y(HDECB1L) TIMES LENGTH OF A DECB              UF039
         GETMAIN R,LV=(0)     GET ENOUGH STORAGE                  UF039
         ST    R1,QCDECBPT    SAVE ADDRESS FOR CKPT ROUTINE       UF039
         USING $SAVEBEG,R2    BASE REG FOR CHECKPOINT
         CLC   =C'JES2',$HASPID    MAKE SURE IS VALID HCT         UF046
         BE    HCTOK               YES, CONTINUE                  UF046
         TPUT  MESSAGE3,L'MESSAGE3,EDIT,MF=(E,QTPUT) TELL USER    UF046
         ABEND 90,DUMP             ABORT                          UF046
HCTOK    DS    0H                                                 UF046
***********************************************************************
*                                                                     *
*   INITIALIZE SYSTEM ID'S FROM CHECKPOINT SHARED Q CONTROL ELEMENTS  *
*      - JOHN GRADY SULLIVAN - LOMA LINDA UNIVERSITY MEDICAL CENTER   *
*                                                                     *
***********************************************************************
         LH    R3,$QSEMAX     GET MAX # OF DEFINED SYSTEMS    /* JGS */
         LA    R4,QSYSID+8    => QCOMMON SYSTEM ENTRY - SID(1)/* JGS */
         LA    R5,$SAVEEND    => QSE'S IN CHECKPOINT RECORD   /* JGS */
         USING QSE,R5         ADDRESSABILITY TO QSE'S         /* JGS */
SIDLOOP  DS    0H                                             /* JGS */
         MVC   0(4,R4),QSESID SYSTEM ID TO QCOMMON            /* JGS */
         MVC   4(4,R4),QBLANK BLANK NEXT 4 BYTES              /* JGS */
         LA    R4,8(,R4)      => NEXT ENTRY IN QCOMMON        /* JGS */
         TM    QSESTAT,QSELAST   IS THIS THE LAST QSE ?       /* JGS */
         BO    SIDLOOPE       BIT=1 => YES, LAST, SO BRANCH   /* JGS */
         LA    R5,QSELEN(,R5) => NEXT QSE                     /* JGS */
         BCT   R3,SIDLOOP     LOOP FOR THE NUMBER OF SYSTEMS  /* JGS */
SIDLOOPE DS    0H                                             /* JGS */
         DROP  R5                                             /* JGS */
         EJECT ,                                                  2.2.0
***********************************************************************
*                                                                     *
*   COMPUTE SIZE OF TRACK GROUP MAPS ON CKPT                      2.2.0
*                                                                     *
***********************************************************************
         L     R5,$NUMTG      NUMBER OF TRACK GROUPS TOTAL        2.2.0
         SRL   R5,3           DIVIDE BY 8                         UF020
         LR    R1,R5          SAVE LENGTH OF TRACK GROUP MAP
         AIF   (NOT &LOCK).NOTLOCK                                   CL
         MH    R1,=H'3'            NUMBER OF BYTES * 3               CL
         AGO   .LOCK                                                 CL
.NOTLOCK SLL   R1,1                NUMBER OF BYTES * 2            UF046
.LOCK    LA    R1,BFPLEN(,R1)      ADD BUFFER PREFIX                 CL
         LA    R1,4095(,R1)        PREPARE TO ROUND
         SRL   R1,12               DIVIDE BY 4K                   UF046
         STH   R1,QCTGML           NUMBER OF BLOCKS FOR TG MAPS   UF046
***********************************************************************
*                                                                     *
*   COMPUTE HASPACE BUFFER SIZE                                       *
*                                                                     *
***********************************************************************
         LH    R5,$BUFSIZE    BLKSIZE FOR HASPACE
         STH   R5,HASPACE+62  STORE IN DCB
         STH   R5,HDECB2+6    STORE IN DECB
         LA    R5,63(R5)      PREPARE TO ROUND
         N     R5,=F'-64'     ROUND TO 64 BYTE BOUNDARY
***********************************************************************
*                                                                     *
*   OBTAIN BUFFERS FOR HASPCKPT AND HASPACE                           *
*                                                                     *
***********************************************************************
         LR    R14,R5         HASPACE BUFFER SIZE
         MH    R14,=H'3'      3 BUFFERS
         LH    R1,$CKRECN     NUMBER OF 4K RECORDS                2.2.0
         LA    R1,1(,R1)           PLUS MASTER RECORD             2.2.0
         AH    R1,$CLRECN          + NUMBER OF CHANGE LOG RECORDS 2.2.0
         ST    R1,QCJOTL      STORE RECORD COUNT
         SLL   R1,12          MULTIPLY BY 4096
         LA    R0,256(R1,R14) ADD CKPT BUFFERS, HASPACE BUFFERS, SLOP
         ST    R0,QGETL2      SAVE LENGTH OF GETMAIN AREA
         GETMAIN R,LV=(0)     OBTAIN BUFFERS
         ST    R1,QGETA2      SAVE ADDRESS OF GETMAIN AREA
         ST    R1,QCJQTL      BUFFER FOR FIRST CKPT REC
         SPACE 1                                                  2.2.0
         L     R15,=V(CKPT)        READ CKPT DATA                 2.2.0
         BALR  R14,R15                                            2.2.0
         SPACE 1                                                  2.2.0
         L     R1,QCJQTL           RESTORE BUFFER ADDRESS         2.2.0
         EJECT ,                                                  2.2.0
         LR    R14,R1              COMPUTE ADDR OF JQE EXTENSION
         LA    R14,$SAVELEN(,R14)  ACCOUNT FOR CHECKPOINTED HCT
         LA    R4,QSELEN      QSE LENGTH                          2.2.0
         MH    R4,$QSEMAX     MULTIPLY LENGTH TIMES NUM OF QSES   2.2.0
         ALR   R14,R4              ACCOUNT FOR QSE'S
         ST    R14,QCJQEXA         SAVE ADDR OF JQE EXTENSION
         AH    R1,=H'4096'    INCREMENT
*                                                                 2.2.0
         LH    R15,$CLRECN         NUMBER OF CHANGE LOG BLKS      2.2.0
         SLL   R15,12               TIMES 4K                      2.2.0
         AR    R1,R15              BUMP PAST CHANGE LOG           2.2.0
*                                                                 2.2.0
         USING HDP,R1              CONTROL BLOCK POOL HEADER      2.2.0
         SPACE 1                                                  2.2.0
         CLC   =C'**TGM  POOL**',HDPID                            2.2.0
         BE    OKTGM                                              2.2.0
         TPUT  =C'UNABLE TO LOCATE TGM POOL',25,EDIT,MF=(E,QTPUT) 2.2.0
         B     ABORT98             AND ABEND                      2.2.0
OKTGM    DS    0H                                                 2.2.0
         LA    R0,HDPLNGTH(,R1) ADD BUFFER PREFIX                 2.2.0
         ST    R0,QCTGMA           BUFFER FOR TGM BLOCKS          UF046
         ICM   R15,B'1111',HDPSIZE SIZE OF AREA                   2.2.0
         AR    R1,R15              BUMP                           2.2.0
         SPACE 1                                                  2.2.0
         CLC   =C'**JIX  POOL**',HDPID                            2.2.0
         BE    OKJIX                                              2.2.0
         TPUT  =C'UNABLE TO LOCATE JIX POOL',25,EDIT,MF=(E,QTPUT) 2.2.0
         B     ABORT98             AND ABEND                      2.2.0
OKJIX    DS    0H                                                 2.2.0
         LA    R0,HDPLNGTH(,R1) ADD BUFFER PREFIX                 2.2.0
         ST    R0,QCJIXA      BUFFER FOR JIX BLOCKS               UF020
         ICM   R15,B'1111',HDPSIZE SIZE OF AREA                   2.2.0
         AR    R1,R15              BUMP                           2.2.0
         SPACE 1                                                  2.2.0
         CLC   =C'**JQE  POOL**',HDPID                            2.2.0
         BE    OKJQE                                              2.2.0
         TPUT  =C'UNABLE TO LOCATE JQE POOL',25,EDIT,MF=(E,QTPUT) 2.2.0
         B     ABORT98             AND ABEND                      2.2.0
OKJQE    DS    0H                                                 2.2.0
         LA    R0,HDPLNGTH(,R1) ADD BUFFER PREFIX                 2.2.0
         ST    R0,QCJQTA      BUFFER FOR JQE BLOCKS
         ICM   R15,B'1111',HDPSIZE SIZE OF AREA                   2.2.0
         AR    R1,R15              BUMP                           2.2.0
         SPACE 1                                                  2.2.0
         CLC   =C'**PST  POOL**',HDPID                            2.2.0
         BE    OKPST                                              2.2.0
         TPUT  =C'UNABLE TO LOCATE PST POOL',25,EDIT,MF=(E,QTPUT) 2.2.0
         B     ABORT98             AND ABEND                      2.2.0
OKPST    DS    0H                                                 2.2.0
         LA    R0,HDPLNGTH(,R1) ADD BUFFER PREFIX                 2.2.0
         ST    R0,QCPSTA           BUFFER OF PST BLOCKS
         ICM   R15,B'1111',HDPSIZE SIZE OF AREA                   2.2.0
         AR    R1,R15              BUMP                           2.2.0
         SPACE 1                                                  2.2.0
         CLC   =C'**JOE  POOL**',HDPID                            2.2.0
         BE    OKJOE                                              2.2.0
         TPUT  =C'UNABLE TO LOCATE JOE POOL',25,EDIT,MF=(E,QTPUT) 2.2.0
         B     ABORT98             AND ABEND                      2.2.0
OKJOE    DS    0H                                                 2.2.0
         LA    R0,HDPLNGTH(,R1) ADD BUFFER PREFIX                 2.2.0
         ST    R0,QCJOTA      BUFFER FOR JOE BLOCKS
         ICM   R15,B'1111',HDPSIZE SIZE OF AREA                   2.2.0
         AR    R1,R15              BUMP                           2.2.0
         SPACE 1                                                  2.2.0
         CLC   =C'**RSO  POOL**',HDPID                            2.2.0
         BE    OKRSO                                              2.2.0
         TPUT  =C'UNABLE TO LOCATE RSO POOL',25,EDIT,MF=(E,QTPUT) 2.2.0
         B     ABORT98             AND ABEND                      2.2.0
OKRSO    DS    0H                                                 2.2.0
         LA    R0,HDPLNGTH(,R1) ADD BUFFER PREFIX                 2.2.0
         ICM   R15,B'1111',HDPSIZE SIZE OF AREA                   2.2.0
         AR    R1,R15              BUMP                           2.2.0
         SPACE 1                                                  2.2.0
         CLC   =C'**LCK  POOL**',HDPID                            2.2.0
         BE    OKLCK                                              2.2.0
         TPUT  =C'UNABLE TO LOCATE LCK POOL',25,EDIT,MF=(E,QTPUT) 2.2.0
         B     ABORT98             AND ABEND                      2.2.0
OKLCK    DS    0H                                                 2.2.0
         LA    R0,HDPLNGTH(,R1) ADD BUFFER PREFIX                 2.2.0
         ICM   R15,B'1111',HDPSIZE SIZE OF AREA                   2.2.0
         AR    R1,R15              BUMP                           2.2.0
         SPACE 1                                                  2.2.0
         CLC   =C'**DAS  POOL**',HDPID                            2.2.0
         BE    OKDAS                                              2.2.0
         TPUT  =C'UNABLE TO LOCATE DAS POOL',25,EDIT,MF=(E,QTPUT) 2.2.0
         B     ABORT98             AND ABEND                      2.2.0
OKDAS    DS    0H                                                 2.2.0
         LA    R0,HDPLNGTH(,R1) ADD BUFFER PREFIX                 2.2.0
         ST    R0,QCTDASA          BUFFER FOR DAS BLOCKS          2.2.0
         ICM   R15,B'1111',HDPSIZE SIZE OF AREA                   2.2.0
         AR    R1,R15              BUMP                           2.2.0
         SPACE 1                                                  2.2.0
         DROP  R1                                                 2.2.0
         SPACE 1                                                  2.2.0
         ST    R1,QCJCTA      BUFFER FOR JCT
         AR    R1,R5          INCREMENT
         ST    R1,QCIOTA      BUFFER FOR IOT
         AR    R1,R5          INCREMENT
         ST    R1,QCBLKA      BUFFER FOR DATA BLOCKS
         SPACE 1                                                  ONL16
         L     R1,QCJCTA           ADDR OF JCT BUFFER             ONL16
         SL    R1,=A(JCTSTART-JCT)  ADJUST FOR BUFFER PREFIX      ONL16
         ST    R1,QCJCTA           SAVE ADJUSTED JCT POINTER      ONL16
         SPACE 1                                                  ONL16
         LA    R1,$JQHEADS+$JQHEADL-$SAVEBEG OFFSET 1ST JQE HEAD  UF020
         A     R1,QCJQTL      BASE OF FIRST CKPT REC
         ST    R1,QCJQHEAD    ADDR OF FIRST JQE HEADER
***********************************************************************
*                                                                     *
*   ALLOCATE AND OPEN HASPACE                                         *
*                                                                     *
***********************************************************************
*                                                                 2.2.0
         L     R3,QCTDASA          ADDR OF DAS AREA               2.2.0
         USING DAS,R3              SET ADDRESSING                 UF046
         MVC   DA08DDN,=CL8'HASPACQ' DDNAME FOR ALLOCATE          WGH
         LA    R1,DSNSPACE         ADDR OF HASPACE DSN SUFFIX     CL006
         BAL   R14,BUILDSN         GO BUILD DATA SET NAME         CL006
         LA    R4,9           MAX POSSIBLE SPOOLS FOR QUEUE       UF020
         LA    R7,QCDCBL      LENGTH OF HASPACE DCB
         MR    R6,R4          COMPUTE LENGTH OF DCB POOL
         GETMAIN R,LV=(R7)    OBTAIN DCB POOL
         ST    R7,QGETL3      SAVE LENGTH OF GETMAIN
         ST    R1,QGETA3      SAVE ADDRESS OF GETMAIN
         LR    R7,R1          SAVE ADDR OF DCB POOL
         LA    R8,QCSPOOLS-4  ADDR OF OPEN LIST
         SR    R6,R6          ACTUAL NUMBER OF SPOOL VOLUMES
SPOOL1   LA    R5,DEVTAB      ADDR OF DEVICE CHARACTERISTICS TBL
         TM    DASFLAG,DASEXSTS    DOES VOLUME EXIST?             UF046
         BZ    SPOOL4              NO, SKIP THIS ONE              UF046
         TM    DASFLAG2,DASINACT   IS IT INACTIVE?                UF046
         BO    SPOOL4              YES, SKIP IT                   UF046
         LH    R15,DASNOTGE        NUMBER OF TRACKS IN EXTENT     CL001
         A     R15,QCTNUMTG        ACCUMULATE ACTIVE              CL001
         ST    R15,QCTNUMTG         TRACK GROUP COUNT             CL001
SPOOL2   CLI   0(R5),X'FF'    IS THIS THE END OF TABLE?
         BE    ABORT          YES. UNSUPPORTED DEVICE TYPE.
         CLC   0(1,R5),DASTYPE     IS IT A MATCH?                 UF046
         BE    SPOOL3         YES. GO WITH IT.
         LA    R5,12(R5)      NEXT TABLE ENTRY
         B     SPOOL2         TRY NEXT ENTRY
SPOOL3   MVC   QCTRKCYL-QCSPOOLS+4+2(2,R8),2(R5) SET TRK/CYL         CL
         MVC   DA08UNIT,4(R5) MOVE UNIT NAME
         MVC   DA08SER,DASVOLID LAST CHAR OF VOLSER               UF046
         LA    R6,1(R6)       INCREASE COUNT BY ONE
         STC   R6,DA08DDN+7   UPDATE DDNAME
         OI    DA08DDN+7,X'F0' MAKE IT A VALID NUMBER
         L     R15,=V(ALLOCATE) ADDR OF ALLOCATE MODULE
         BALR  R14,R15        GO TO IT
         MVC   0(QCDCBL,R7),HASPACE MOVE PATTERN DCB TO POOL
         MVC   47(1,R7),DA08DDN+7 UPDATE THE DDNAME
         ST    R7,4(R8)       STORE DCB ADDR IN OPEN LIST
         LA    R7,QCDCBL(R7)  INCREMENT TO NEXT DCB
SPOOL4   LA    R8,4(R8)       NEXT ENTRY IN OPEN LIST
         LA    R3,DASSIZ(,R3)      NEXT VOLUME                    UF046
         BCT   R4,SPOOL1      BRANCH IF MORE VOLUMES.
         L     R1,DA08PDSN         ADDR OF WORK AREA              CL006
         FREEMAIN R,LV=2+44,A=(1)  FREE WORK AREA                 CL006
         SPACE 2                                                     CL
***********************************************************************
*                                                                     *
*        OPEN ONE DCB FOR EACH ACTIVE EXTENT.                         *
*                                                                     *
***********************************************************************
         SPACE 2
         LA    R4,9                MAX POSSIBLE SPOOLS FOR QUEUEJKAUG84
         LA    R8,QCSPOOLS         ADDR OF FIRST DCB POINTER         CL
         SPACE 1                                                     CL
SPOOL5   OC    0(4,R8),0(R8)       SKIP IF THIS EXTENT               CL
         BZ    SPOOL6               IS NOT ACTIVE                    CL
         OI    0(R8),X'80'         SET END OF LIST INDICATOR         CL
         OPEN  MF=(E,(R8))         OPEN ONE EXTENT                   CL
         NI    0(R8),X'7F'         TURN OFF BIT JUST FOR NEATNESSKAUG84
SPOOL6   LA    R8,4(,R8)           BUMP TO NEXT EXTENT               CL
         BCT   R4,SPOOL5           CONTINUE IF ANY MORE              CL
         SPACE 2                                                  ONL02
******************************************************************ONL02
*                                                                 ONL02
*   PERFORM POST-OPEN CHECKPOINT/SPOOL AUTHORIZATION CHECK        ONL02
*                                                                 ONL02
******************************************************************ONL02
         SPACE 1                                                  ONL02
         QAUTHCK QAAFTOPN          POST-OPEN CKPT/SPOOL AUTH CHECKONL02
         SPACE 2                                                  ONL02
***********************************************************************
*                                                                     *
*   GO HOME                                                           *
*                                                                     *
***********************************************************************
         SPACE 1                                                  ONL02
         QSTOP
         SPACE 2                                                  ONL02
******************************************************************ONL02
*                                                                 ONL02
*   ABORT QUEUE COMMAND PROCESSING                                ONL02
*                                                                 ONL02
******************************************************************ONL02
         SPACE 1                                                  ONL02
QAABORT  DS    0H                  ABORT QUEUE COMMAND PROCESSING ONL02
         WTO   'QUEUE COMMAND ABORTED - INVALID ENVIRONMENT',     ONL02X
               ROUTCDE=(11)        TELL USER WHY                  ONL02
         SPACE 1                                                  ONL02
         ABEND 913                 ABEND U913                     ONL02
         EJECT                                                    CL006
***********************************************************************
*                                                                     *
*        CONSTRUCT DATA SET NAME FOR JES2 DISK DATA SETS.             *
*                                                                     *
*        R1 = ADDR OF DSN PREFIX                                      *
*        R14= LINK REGISTER                                           *
*                                                                     *
***********************************************************************
         SPACE 2
BUILDSN  L     R15,DA08PDSN        ADDR OF WORK AREA              CL006
         MVI   2(R15),C' '         BLANK DATA SET                 CL006
         MVC   3(43,R15),2(R15)     NAME WORK AREA                CL006
         MVC   2(8,R15),QPREFIX    SET PREFIX FROM COMMON         CL006
         LA    R15,9(R15)          ADDR OF LAST POSSIBLE CHAR     CL006
         CLI   0(R15),C' '         SKIP IF NON-BLANK              CL006
         BNE   *+8                  CHARACTER FOUND               CL006
         BCT   R15,*-8               ELSE KEEP LOOKING            CL006
         MVI   1(R15),C'.'         SET PERIOD                     CL006
         MVC   2(8,R15),0(R1)      COPY DSN SUFFIX                CL006
         LA    R15,2+7(R15)        ADDR OF LAST POSSIBLE CHAR     CL006
         CLI   0(R15),C' '         SKIP IF NON-BLANK              CL006
         BNE   *+8                  CHARACTER FOUND               CL006
         BCT   R15,*-8               ELSE KEEP LOOKING            CL006
         L     R1,DA08PDSN         ADDR OF WORK AREA              CL006
         LA    R1,1(R1)            ADDR OF FIRST BYTE OF NAME-1   CL006
         SR    R15,R1              LENGTH OF ENTIRE NAME          CL006
         L     R1,DA08PDSN         ADDR OF WORK AREA              CL006
         STH   R15,0(R1)           SET LENGTH FOR DAIR            CL006
         BR    R14                  AND RETURN                    CL006
***********************************************************************
*                                                                     *
*   UNSUPPORTED DEVICE TYPE. ABORT.                                   *
*                                                                     *
***********************************************************************
ABORT    TPUT  MESSAGE,L'MESSAGE,EDIT,MF=(E,QTPUT)   TELL THE USER
ABORT98  ABEND 98,DUMP        QUIT.                               2.2.0
***********************************************************************
*                                                                     *
*   MISCELLANY                                                        *
*                                                                     *
***********************************************************************
         LTORG
DEVTAB   DC    X'0900',H'19',CL8'3330' DEVTYPE,TRK/CYL,DEVNAME
         DC    X'0B00',H'30',CL8'3350'
         DC    X'0D00',H'19',CL8'3330-1'
         DC    X'0E00',H'15',CL8'3380'                            UF037
         DC    X'0F00',H'15',CL8'3390'                            WGH42
         DC    X'FFFF'
         DS    0F
TIR3     DC    X'00000300'    POINT PAST SYNC RECORDS
DSNCKPT  DC    CL8'HASPCKPT'                                      CL006
DSNSPACE DC    CL8'HASPACE'                                       CL006
MESSAGE  DC    C'UNSUPPORTED DEVICE TYPE SPECIFIED FOR SPOOL'
MESSAGE2 DC    C'INVALID PARAMETER SPECIFIED - '                  WGH
MESSAGE3 DC    C'INVALID HCT SAVEAREA ON CKPT'                    UF046
         EJECT                                                    CL006
***********************************************************************
*                                                                     *
*        CONSTRUCT PARSE PARAMETER LISTS                              *
*                                                                     *
***********************************************************************
         SPACE 2
PCLSTART IKJPARM DSECT=IKJPARMD                                   CL006
         SPACE 2                                                  CL006
PSTRING  IKJIDENT 'SUB-COMMAND',ASTERISK,FIRST=ALPHA,OTHER=ANY,   CL006*
               CHAR                                               CL006
         SPACE 1                                                  CL006
PPREFIX  IKJKEYWD ,                                               CL006
         SPACE 1                                                  CL006
         IKJNAME 'PREFIX',SUBFLD=SPREFIX                          CL006
         SPACE 1                                                  CL006
PUNIT    IKJKEYWD ,                                               CL006
         SPACE 1                                                  CL006
         IKJNAME 'UNIT',SUBFLD=SUNIT                              CL006
         SPACE 1                                                  CL006
PVOL     IKJKEYWD ,                                               CL006
         SPACE 1                                                  CL006
         IKJNAME 'VOL',SUBFLD=SVOL                                CL006
         SPACE 5                                                  CL006
SPREFIX  IKJSUBF ,                                                CL006
XPREFIX  IKJIDENT 'PREFIX',LIST,MAXLNTH=8,FIRST=ALPHA,            CL006*
               OTHER=ALPHANUM                                     CL006
         SPACE 1                                                  CL006
SUNIT    IKJSUBF ,                                                CL006
         SPACE 1                                                  CL006
XUNIT    IKJIDENT 'UNIT',LIST,MAXLNTH=8,OTHER=ALPHANUM,           CL006*
               FIRST=ALPHANUM                                     CL006
         SPACE 1                                                  CL006
SVOL     IKJSUBF ,                                                CL006
         SPACE 1                                                  CL006
XVOL     IKJIDENT 'VOLUME',LIST,MAXLNTH=6,FIRST=ALPHANUM,         CL006*
               OTHER=ALPHANUM                                     CL006
         SPACE 2                                                  CL006
         IKJENDP ,                                                CL006
         EJECT                                                    CL006
WORK     DSECT ,                                                  UF024
         DS    18F                 SAVEAREA PORTION               UF024
WORKAREA DS    D                   START OF SCRATCH WORK AREA     UF024
         SPACE 1                                                  UF024
SYMDEL   DSECT ,                   KILL SYM CARD GENERATION       UF023
INIT     CSECT ,                                                  UF023
         QPRBGEN BEGIN             SET PRINT FOR CNTL BLOCK GEN   ONL01
         COPY  $HASPGBL
&MACSPLV SETC  '2'
&SYSSPLV SETC  '2'
&VERSION SETC  'SP 4.2.0'
&FMID    SETC  'HJE4420'
         $DAS  ,                                                  UF046
         $MIT  ,                                                  UF046
         $PCE  ,              NEEDED FOR NJE $HCT                 UF001
         $JOE
         $JOT
NJOTPRFX EQU   (JOTJOES-JOT)/JOESIZE
         $LCK  ,                                                  UF020
         $BUFFER                                                  UF020
         $LMT   ,                                                 WGH42
         $XECB  ,                                                 WGH42
PDS2BLEN EQU    1                                                 WGH42
         IFGRPL
         $JCT  ,                                                  UF020
         $CAT  ,                                                  UF020
         $TAB
         $QSE
         $PDDB                                                    UF021
         $IOT
         $JQE
         $HCT
         $PSV  ,                JES2 4.3
         $HDP  ,                                                  2.2.0
         $HASPEQU
         IKJCPPL ,                                                ONL02
         IKJPSCB ,                                                ONL02
         IKJUPT  ,                                                WGH
*        IHADCB DSORG=PS                                          UF039
         DCBD   DSORG=PS                                          UF039
         CVT    DSECT=YES                                         CL006
         QCOMMON
         QPRBGEN DONE              RESTORE NORMAL PRINT STATUS    ONL01
SYMNODEL DSECT ,                   RESTORE SYM CARD GENERATION    UF023
         END
./ ADD NAME=INIT$    0102-93067-94091-1218-00788-00787-00000-SBGCSC
INIT     TITLE 'QUEUE COMMAND - INITIALIZATION ROUTINES'          ONL01
INIT     QSTART ,                  START INIT CSECT ASSEMBLY      ONL01
         GBLB  &QDBC          DBC    OPTION                       UF024
         GBLB  &QONL          ONL    OPTION                       ONL08
         GBLB  &LOCK          LOCKHEED OPTION                        CL
***********************************************************************
*                                                                     *
*   LOAD QCOMMON                                                      *
*                                                                     *
***********************************************************************
*
****
*******  IF YOU WANT TO CHANGE THE NAME FOR THE COMMON AREA,
****               THIS IS THE ONLY REFERENCE TO IT.
*
         AIF   (&QONL).ONL08                                      ONL08
         L     R11,=V(QCOMMON) ADDR OF QCOMMON                    UF002
         LTR   R11,R11        SEE IF LINKED IN                    UF002
         BNZ   LOADED         YES, CONTINUE                       UF002
.ONL08   ANOP  ,                                                  ONL08
         SPACE 1                                                  UF002
         LOAD  EP=QUEUECMN    QUEUE COMMON AREA
         LR    R11,R0         ADDR OF QCOMMON
         SPACE 1                                                  UF002
LOADED   DS    0H                                                 UF002
         L     R1,4(R13)      PREVIOUS SAVE AREA
         ST    R11,64(R1)     UPDATE R11 IN PREVIOUS SAVE AREA
         ST    R1,QFRSTSA     STORE ADDR OF FIRST SAVEAREA IN QCOMMON
         USING QDAIR,R10      BASE REG FOR DAIR WORK
         L     R10,QVDAIR     LOAD BASE REG
         USING QCKPT,R9       BASE REG FOR CKPT WORK
         L     R9,QVCKPT      LOAD BASE REG
         USING QDISPLAY,R8    BASE REG FOR DISPLAY WORK
         L     R8,QVDSPL      LOAD BASE REG
         SPACE 1
         L     R1,16          GET CVT ADDRESS
         USING CVT,R1
         TM    CVTDCB,X'80'   EXECUTING XA MODE
         BNO   NOTXA          NO, BR
         OI    QFLAG1,QFLG1XA SET XA MODE FLAG
         DROP  R1
         SPACE 1
         USING WORK,R13       ADDRESSING FOR SAVE/WORK AREA       UF024
         SPACE 2                                                  ONL02
******************************************************************ONL02
*                                                                 ONL02
*   VERIFY A TSO ENVIRONMENT, FIND THE ADDRRESS OF THE PROTECTED  ONL02
*   STEP CONTROL BLOCK, AND VERIFY SOME FIELDS IN THE COMMAND     ONL02
*   PROCESSOR PARAMETER LIST.                                     ONL02
*                                                                 ONL02
******************************************************************ONL02
         SPACE 1                                                  ONL02
NOTXA    LA    R3,QDWORK           ADDR FOR EXTRACT ANSWER AREA   ONL02
         LA    R4,QAEXTLST         ADDR OF EXTRACT PARAMETER LIST ONL02
         EXTRACT (R3),FIELDS=(TSO,PSB),MF=(E,(R4))  EXTRACT INFO  ONL02
         SPACE 1                                                  ONL02
         L     R1,QDWORK           PICKUP ADDR OF TSO INDICATOR   ONL02
         TM    0(R1),X'80'         IS THIS A TSO ADDRESS SPACE?   ONL02
         BO    NOTBATCH            YES... CONTINUE                WGH
         OI    QFLAG1,QFLG1BAT     NO...  SET BATCH MODE          WGH
         SPACE 1                                                  ONL02
NOTBATCH L     R1,QDWORK+4         PICKUP ADDR OF PSCB            ONL02
         LTR   R1,R1               IS PSCB AVAILABLE?             ONL02
         BZ    QAABORT             IF NOT, ABORT                  ONL02
         SPACE 1                                                  ONL02
         USING PSCB,R1             NOTE PSCB ADDRESSABILITY       ONL02
         USING CPPL,R2             NOTE CPPL ADDRESSABILITY       ONL02
         USING UPT,R15             NOTE UPT  ADDRESSABILITY       WGH02
         L     R15,PSCBUPT         ADDR OF UPT                    WGH
         SPACE 1                                                  ONL02
         CLM   R1,15,CPPLPSCB      VERIFY PSCB ADDR IN CPPL       ONL02
         BNE   QAABORT             ABORT IF ADDR'S DON'T MATCH    ONL02
         CLC   PSCBUPT,CPPLUPT     VERIFY UPT ADDR IN CPPL        ONL02
         BNE   QAABORT             ABORT IF ADDR'S DON'T MATCH    ONL02
         SPACE 2                                                  ONL02
******************************************************************ONL02
*                                                                 ONL02
*   GET THE USERID AND ITS LENGTH AND SAVE THEM IN QCOMMON        ONL02
*                                                                 ONL02
******************************************************************ONL02
         SPACE 1                                                  ONL02
         MVC   QLOGON(L'PSCBUSER),PSCBUSER  SET USERID IN QCOMMON ONL02
         SLR   R0,R0               CLEAR FOR INSERT               ONL02
         IC    R0,PSCBUSRL         PICKUP LENGTH OF USERID        ONL02
         ST    R0,QLOGONLN         SET LENGTH IN QCOMMON          ONL02
         CLI   QLOGON,C' '         IS USERID BLANK                WGH
         BNE   IDOK                NO.. USE IT                    WGH
         MVC   QLOGON(L'UPTPREFX),UPTPREFX SET PREFIX IN QCOMMON  WGH
         IC    R0,UPTPREFL         PICKUP LENGTH OF PREFIX        WGH
         ST    R0,QLOGONLN         SET LENGTH IN QCOMMON          WGH
         DROP  R15                                                WGH
IDOK     EQU   *                                                  WGH
         SPACE 2                                                  ONL02
******************************************************************ONL02
*                                                                 ONL02
*   CHECK PSCB FOR OPERATOR AUTHORITY                             ONL02
*                                                                 ONL02
******************************************************************ONL02
         SPACE 1                                                  ONL02
         TM    QFLAG1,QFLG1BAT     ARE WE IN BATCH MODE ?         WGH
         BO    SETOPER             YES.. GIVE FULL AUTH           WGH
         TM    PSCBATR1,PSCBCTRL   DOES USER HAVE OPER AUTHORITY? ONL02
         BZ    SKIPOPER            SKIP IF NO                     ONL02
SETOPER  OI    QAFLAGS,QAFXOPER    SHOW USER HAS OPER AUTHORITY   ONL02
SKIPOPER DS    0H                                                 ONL02
         SPACE 2                                                  ONL02
******************************************************************WGH
*                                                                 WGH
*   FILL IN IOPL PARAMETER LIST FROM THE CPPL                     WGH
*                                                                 WGH
******************************************************************WGH
         SPACE 1                                                  WGH
         MVC   STKIOPL,CPPLUPT     USER PROFILE TABLE             WGH
         MVC   STKIOPL+4,CPPLECT   ENVIRONMENT CNTL TABLE         WGH
         LA    R0,STKIOECB         ECB ADDRESS                    WGH
         ST    R0,STKIOPL+8        FILL IT IN                     WGH
         LA    R0,STKBLOCK         STACK   PARM BLOCK             WGH
         ST    R0,STKIOPL+12       FILL IT IN                     WGH
         SPACE 1                                                  WGH
         MVC   GETIOPL,CPPLUPT     USER PROFILE TABLE             WGH
         MVC   GETIOPL+4,CPPLECT   ENVIRONMENT CNTL TABLE         WGH
         LA    R0,GETIOECB         ECB ADDRESS                    WGH
         ST    R0,GETIOPL+8        FILL IT IN                     WGH
         LA    R0,GETBLOCK         GETLINE PARM BLOCK             WGH
         ST    R0,GETIOPL+12       FILL IT IN                     WGH
         SPACE 1                                                  WGH
         MVC   PUTIOPL,CPPLUPT     USER PROFILE TABLE             WGH
         MVC   PUTIOPL+4,CPPLECT   ENVIRONMENT CNTL TABLE         WGH
         LA    R0,PUTIOECB         ECB ADDRESS                    WGH
         ST    R0,PUTIOPL+8        FILL IT IN                     WGH
         LA    R0,PUTBLOCK         PUTLINE PARM BLOCK             WGH
         ST    R0,PUTIOPL+12       FILL IT IN                     WGH
******************************************************************ONL02
*                                                                 ONL02
*   FILL IN DAIR PARAMETER LIST FROM THE CPPL                     ONL02
*                                                                 ONL02
******************************************************************ONL02
         SPACE 1                                                  ONL02
         MVC   DAPLUPT,CPPLUPT     USER PROFILE TABLE             ONL02
         MVC   DAPLECT,CPPLECT     ENVIRONMENT CNTL TABLE         ONL02
         MVC   DAPLPSCB,CPPLPSCB   PROTECTED STORAGE CNTL BLK     ONL02
         DROP  R1                                                 CL006
         SPACE 2                                                  ONL02
         AIF   (NOT &QDBC).NODBC1 SKIP IF DBC NOT INSTALLED       UF024
******************************************************************UF024
*                                                                 UF024
*   IF USER HAS OPER AUTHORITY, ESTABLISH ESTAE ENVIRONMENT       UF024
*                                                                 UF024
******************************************************************UF024
         SPACE 1                                                  ONL02
         TM    QAFLAGS,QAFXOPER    DOES USER HAVE OPER AUTHORITY? ONL02
         BZ    NOTOPER             SKIP IF NO                     ONL02
         SPACE 1                                                  ONL02
         LOAD  EP=DBC,ERRET=NOTOPER  LOAD ESTAE ROUTINE           UF024
         LR    R3,R0          ADDR OF ROUTINE                     UF024
         MVC   WORKAREA(DBCMFLN),DBCMFL GET ESTAE PARM LIST       UF024
         ESTAE (R3),MF=(E,WORKAREA)  CREATE THE ESTAE             UF024
         OI    QFLAG1,QFLG1DBC  INDICATE NEED TO DELETE AT TERM   UF024
         B     NOTOPER        CONTINUE PROCESSING                 UF024
DBCMFL   ESTAE ,MF=L          LIST FORM OF ESTAE                  UF024
DBCMFLN  EQU   *-DBCMFL       LENGTH OF LIST FORM ESTAE           UF024
NOTOPER  DS    0H                                                 ONL02
.NODBC1  ANOP                                                     UF024
         EJECT                                                    CL006
***********************************************************************
*                                                                     *
*        SCAN COMMAND BUFFER FOR KNOWN KEYWORDS.  IF FOUND TAKE       *
*        APPROPRIATE ACTION.  IF NONE FOUND OR RECOGNIZED,            *
*        THEN PASS TO OUR PARSE ROUTINE.                              *
*                                                                     *
*        OPTIONAL KEYWORDS MUST PRECEDE 1ST COMMAND                   *
*                                                                     *
*        Q VOL(VOLSER) UNIT(TYPE) PREFIX(XXXX) 1ST CMD                *
*                                                                     *
***********************************************************************
         SPACE 2
         L     R1,CPPLCBUF     POINT TO COMMAND BUFFER            WGH
         DROP  R2              DROP CPPL USING                    WGH
         LH    R2,0(R1)        GET TOTAL LENGTH                   WGH
         SH    R2,2(R1)        ADJUST FOR CMD LENGTH              WGH
         SH    R2,=H'4'        ADJUST FOR HDR                     WGH
         AH    R1,2(R1)        ADJUST FOR CMD LENGTH              WGH
         AH    R1,=H'4'        ADJUST FOR HDR                     WGH
         LTR   R2,R2                                              WGH
         BNP   SKIP            NO PARMS                           WGH
         STC   R2,QDLINE1      SAVE LENGTH FOR TPUT ON ERROR      WGH
         BCTR  R2,0            REDUCE FOR TRANSLATE               WGH
         EX    R2,MVCBUFA      MOVE TO WORK AREA                  WGH
         LA    R1,QDLINE1+1    POINT TO WORK AREA                 WGH
         EX    R2,OCBUF        XLATE TO UPPER CASE                WGH
         LA    R2,1(R2)        TRUE LENGTH                        WGH
PARMLOOP EQU   *                                                  WGH
         CLI   0(R1),C' '      BLANK ?                            WGH
         BNE   GOTPARM         NO.. GOT SOME PARMS                WGH
         LA    R1,1(R1)        YES.. CHECK NEXT CHARACTER         WGH
         BCT   R2,PARMLOOP     CHECK FOR MORE                     WGH
         B     SKIP            NO MORE PARMS                      WGH
GOTPARM  EQU   *                                                  WGH
         CLC   =C'PREFIX(',0(R1) IS REQUEST FOR DSN PREFIX        WGH
         BE    PREFIX          YES... GO PROCESS                  WGH
         CLC   =C'UNIT(',0(R1) IS REQUEST FOR UNIT                WGH
         BE    UNIT            YES... GO PROCESS                  WGH
         CLC   =C'VOL(',0(R1)  IS REQUEST FOR VOLUME              WGH
         BE    VOLUME          YES... GO PROCESS                  WGH
         MVC   QDREPLY,QBLANK  BLANK THE REPLY LINE               WGH
         SH    R2,=H'1'        REDUCE FOR EXECUTE                 WGH
         BM    SKIP            NO MORE PARMS                      WGH
         CH    R2,=H'62'       IS LENGTH OVER 63 ?                WGH
         BNH   *+8             NO.. USE IT                        WGH
         LA    R2,62           USE MAX LENGTH                     WGH
         EX    R2,MVCBUF       MOVE THE DATA                      WGH
         LA    R2,1(R2)        TRUE LENGTH                        WGH
         STH   R2,QDRLNG       STORE REPLY LENGTH                 WGH
         B     SKIP                                               CL006
PREFIX   EQU   *                                                  WGH
         LA    R1,7(R1)        POINT AT PREFIX FIELD              WGH
         SH    R2,=H'7'        ADJUST LENGTH FIELD                WGH
         BNP   ABORT2          INVALID PARM                       WGH
         MVC   QPREFIX(8),QBLANK  BLANK THE PREFIX FIELD          WGH
         LA    R6,QPREFIX      POINT TO PREFIX FIELD              WGH
         LA    R15,8           MAX CHARS FOR FIELD                WGH
PREFIXA  CLI   0(R1),C')'      END OF FIELD ?                     WGH
         BE    PREFIXND        YES... LOOK FOR MORE               WGH
         SH    R15,=H'1'       DECREMENT MAX LENGTH               WGH
         BM    ABORT2          TOO LONG QUIT                      WGH
         MVC   0(1,R6),0(R1)   MOVE ONE BYTE OF FIELD             WGH
         LA    R6,1(R6)        ADD 1 TO RECEIVING ADDRESS         WGH
         LA    R1,1(R1)        ADD 1 TO SENDING ADDRESS           WGH
         BCT   R2,PREFIXA      BRANCH IF NOT EXHAUSTED            WGH
         B     ABORT2          INVALID PARAMETERS                 WGH
PREFIXND EQU   *                                                  WGH
         LA    R1,1(R1)        POINT PAST PAREN                   WGH
         BCT   R2,PARMLOOP     GO FOR MORE PARMS                  WGH
         B     SKIP            NO MORE PARMS                      WGH
UNIT     EQU   *                                                  WGH
         LA    R1,5(R1)        POINT AT UNIT   FIELD              WGH
         SH    R2,=H'5'        ADJUST LENGTH FIELD                WGH
         BNP   ABORT2          INVALID PARM                       WGH
         MVC   DA08UNIT(8),QBLANK BLANK THE UNIT   FIELD          WGH
         LA    R6,DA08UNIT     POINT TO UNIT   FIELD              WGH
         LA    R15,8           MAX CHARS FOR FIELD                WGH
UNITA    CLI   0(R1),C')'      END OF FIELD ?                     WGH
         BE    UNITEND         YES... LOOK FOR MORE               WGH
         SH    R15,=H'1'       DECREMENT MAX LENGTH               WGH
         BM    ABORT2          TOO LONG QUIT                      WGH
         MVC   0(1,R6),0(R1)   MOVE ONE BYTE OF FIELD             WGH
         LA    R6,1(R6)        ADD 1 TO RECEIVING ADDRESS         WGH
         LA    R1,1(R1)        ADD 1 TO SENDING ADDRESS           WGH
         BCT   R2,UNITA        BRANCH IF NOT EXHAUSTED            WGH
         B     ABORT2          INVALID PARAMETERS                 WGH
UNITEND  EQU   *                                                  WGH
         LA    R1,1(R1)        POINT PAST PAREN                   WGH
         BCT   R2,PARMLOOP     GO FOR MORE PARMS                  WGH
         B     SKIP            NO MORE PARMS                      WGH
VOLUME   EQU   *                                                  WGH
         LA    R1,4(R1)        POINT AT VOLUME FIELD              WGH
         SH    R2,=H'4'        ADJUST LENGTH FIELD                WGH
         BNP   ABORT2          INVALID PARM                       WGH
         MVC   DA08SER(8),QBLANK  BLANK THE VOLUME FIELD          WGH
         LA    R6,DA08SER      POINT TO VOLUME FIELD              WGH
         LA    R15,6           MAX CHARS FOR FIELD                WGH
VOLUMEA  CLI   0(R1),C')'      END OF FIELD ?                     WGH
         BE    VOLUMEND        YES... LOOK FOR MORE               WGH
         SH    R15,=H'1'       DECREMENT MAX LENGTH               WGH
         BM    ABORT2          TOO LONG QUIT                      WGH
         MVC   0(1,R6),0(R1)   MOVE ONE BYTE OF FIELD             WGH
         LA    R6,1(R6)        ADD 1 TO RECEIVING ADDRESS         WGH
         LA    R1,1(R1)        ADD 1 TO SENDING ADDRESS           WGH
         BCT   R2,VOLUMEA      BRANCH IF NOT EXHAUSTED            WGH
         B     ABORT2          INVALID PARAMETERS                 WGH
VOLUMEND EQU   *                                                  WGH
         LA    R1,1(R1)        POINT PAST PAREN                   WGH
         BCT   R2,PARMLOOP     GO FOR MORE PARMS                  WGH
         B     SKIP            NO MORE PARMS                      WGH
ABORT2   EQU   *
         TPUT  MESSAGE2,L'MESSAGE2,EDIT,MF=(E,QTPUT)   TELL THE USER
         SR    R0,R0           CLEAR R0                           WGH
         IC    R0,QDLINE1      GET LENGTH OF PARM                 WGH
         LA    R1,QDLINE1+1    ADDRESS OF PARM                    WGH
         TPUT  (1),(0),R
         ABEND 97             QUIT.
         SPACE 1                                                  CL006
MVCBUF   MVC   QDREPLY(*-*),0(R1)  *** EXECUTE ONLY ***           WGH
MVCBUFA  MVC   QDLINE1+1(*-*),0(R1) ** EXECUTE ONLY ***           WGH
OCBUF    OC    0(*-*,R1),QBLANK        UPPER CASE COMMAND         WGH
         SPACE 2                                                  ONL02
***********************************************************************
*                                                                     *
*   OBTAIN BLOCK ADDR TABLE FOR LISTDS                                *
*                                                                     *
***********************************************************************
         SPACE 1                                                  ONL02
SKIP     EQU   *
         MVC   QDLINE1(132),QBLANK  BLANK THE WORK LINE           WGH
         MVC   QDLINE1+132(132),QBLANK   BLANK THE WORK LINE      WGH
         GETMAIN R,LV=65536*4                                     CL006
         ST    R1,QGETA1      SAVE START ADDR OF GETMAIN
         ST    R1,QCSTART     STORE STARTING ADDR OF TABLE
         A     R1,=A(65536*4) END OF TABLE
         ST    R1,QCEND
         SPACE 2                                                  ONL02
******************************************************************ONL02
*                                                                 ONL02
*   PERFORM AUTHORIZATION CHECK FOR QUEUE COMMAND START-UP        ONL02
*                                                                 ONL02
******************************************************************ONL02
         SPACE 1                                                  ONL02
         QAUTHCK QASTART           PERFORM START-UP AUTHORIZATION ONL02
         SPACE 2                                                  ONL02
***********************************************************************
*                                                                     *
*   ALLOCATE HASPCKPT                                                 *
*                                                                     *
***********************************************************************
         SPACE 1                                                  ONL02
         MVC   DA08DDN,=CL8'HASPCKPQ' DDNAME FOR ALLOCATE         WGH
         GETMAIN R,LV=2+44         WORK AREA                      CL006
         ST    R1,DA08PDSN         SET POINTER TO DSNAME          CL006
         LA    R1,DSNCKPT          ADDR OF CHECKPOINT DSN SUFFIX  CL006
         BAL   R14,BUILDSN         GO BUILD DATA SET NAME         CL006
         MVI   DAIRFLAG,X'08' REQUEST ALLOCATE FUNCTION
         L     R15,=V(ALLOCATE) ADDR OF ALLOCATE MODULE
         BALR  R14,R15        GO TO IT
         SPACE 2                                                  ONL02
******************************************************************ONL02
*                                                                 ONL02
*   PERFORM PRE-OPEN CHECKPOINT/SPOOL AUTHORIZATION CHECK         ONL02
*                                                                 ONL02
******************************************************************ONL02
         SPACE 1                                                  ONL02
         QAUTHCK QABEFOPN          PRE-OPEN CKPT/SPOOL AUTH CHECK ONL02
         SPACE 2                                                  ONL02
***********************************************************************
*                                                                     *
*   OPEN HASPCKPT, READ FIRST BLOCK OF CHECKPOINT                     *
*                                                                     *
***********************************************************************
         SPACE 1                                                  ONL02
         OPEN  MF=(E,HOCKPT)  OPEN HASPCKPT
         L     R2,QCSTART     USE TABLE AREA FOR IOAREA
         POINT HASPCKPT,TIR3  POINT PAST SYNC RECORDS
         READ  HDECB1,SF,,(R2),MF=E READ FIRST RECORD
         CHECK HDECB1
         SPACE 1                                                  2.2.0
*                                                                 2.2.0
*        FORMAT OF CHECKPOINT MASTER RECORD                       2.2.0
*        $SAVEBEG - START OF HCT AREA                             2.2.0
*                   ($SAVELEN LONG)                               2.2.0
*        QSE1     - START OF QSE AREA                             2.2.0
*                   (QSELEN*$QSEMAX)                              2.2.0
*        $JQEEXT  - START OF JQE EXTENSION                        2.2.0
*                   ($MAXEXSZ)                                    2.2.0
*        $DASEXT  - START OF DAS EXTENSIONS                       2.2.0
*                   (DASEXLEN*$SPOLNUM)                           2.2.0
*        $KITPTR  - POINTER TO CHECKPOINT INFO TABLES             2.2.0
*                   ($KITNUM*KITLNGTH)                            2.2.0
*        $CTLB    - POINTER TO CHECKPT I/O CONTROL BYTES          2.2.0
*                                                                 2.2.0
         SPACE 1                                                  2.2.0
*                                                                 UF039
*        GETMAIN DECB WORK AREA FOR CKPT ROUTINE                  UF039
*                                                                 UF039
         SR    R0,R0          CLEAR FOR IC                        UF039
         IC    R0,DCBNCP-IHADCB+HASPCKPT  NUMBER OF CHANNEL PGMS  UF039
         MH    R0,=Y(HDECB1L) TIMES LENGTH OF A DECB              UF039
         GETMAIN R,LV=(0)     GET ENOUGH STORAGE                  UF039
         ST    R1,QCDECBPT    SAVE ADDRESS FOR CKPT ROUTINE       UF039
         USING $SAVEBEG,R2    BASE REG FOR CHECKPOINT
         CLC   =C'JES2',$HASPID    MAKE SURE IS VALID HCT         UF046
         BE    HCTOK               YES, CONTINUE                  UF046
         TPUT  MESSAGE3,L'MESSAGE3,EDIT,MF=(E,QTPUT) TELL USER    UF046
         ABEND 90,DUMP             ABORT                          UF046
HCTOK    DS    0H                                                 UF046
***********************************************************************
*                                                                     *
*   INITIALIZE SYSTEM ID'S FROM CHECKPOINT SHARED Q CONTROL ELEMENTS  *
*      - JOHN GRADY SULLIVAN - LOMA LINDA UNIVERSITY MEDICAL CENTER   *
*                                                                     *
***********************************************************************
         LH    R3,$QSEMAX     GET MAX # OF DEFINED SYSTEMS    /* JGS */
         LA    R4,QSYSID+8    => QCOMMON SYSTEM ENTRY - SID(1)/* JGS */
         LA    R5,$SAVEEND    => QSE'S IN CHECKPOINT RECORD   /* JGS */
         USING QSE,R5         ADDRESSABILITY TO QSE'S         /* JGS */
SIDLOOP  DS    0H                                             /* JGS */
         MVC   0(4,R4),QSESID SYSTEM ID TO QCOMMON            /* JGS */
         MVC   4(4,R4),QBLANK BLANK NEXT 4 BYTES              /* JGS */
         LA    R4,8(,R4)      => NEXT ENTRY IN QCOMMON        /* JGS */
         TM    QSESTAT,QSELAST   IS THIS THE LAST QSE ?       /* JGS */
         BO    SIDLOOPE       BIT=1 => YES, LAST, SO BRANCH   /* JGS */
         LA    R5,QSELEN(,R5) => NEXT QSE                     /* JGS */
         BCT   R3,SIDLOOP     LOOP FOR THE NUMBER OF SYSTEMS  /* JGS */
SIDLOOPE DS    0H                                             /* JGS */
         DROP  R5                                             /* JGS */
         EJECT ,                                                  2.2.0
***********************************************************************
*                                                                     *
*   COMPUTE SIZE OF TRACK GROUP MAPS ON CKPT                      2.2.0
*                                                                     *
***********************************************************************
         L     R5,$NUMTG      NUMBER OF TRACK GROUPS TOTAL        2.2.0
         SRL   R5,3           DIVIDE BY 8                         UF020
         LR    R1,R5          SAVE LENGTH OF TRACK GROUP MAP
         AIF   (NOT &LOCK).NOTLOCK                                   CL
         MH    R1,=H'3'            NUMBER OF BYTES * 3               CL
         AGO   .LOCK                                                 CL
.NOTLOCK SLL   R1,1                NUMBER OF BYTES * 2            UF046
.LOCK    LA    R1,BFPLEN(,R1)      ADD BUFFER PREFIX                 CL
         LA    R1,4095(,R1)        PREPARE TO ROUND
         SRL   R1,12               DIVIDE BY 4K                   UF046
         STH   R1,QCTGML           NUMBER OF BLOCKS FOR TG MAPS   UF046
***********************************************************************
*                                                                     *
*   COMPUTE HASPACE BUFFER SIZE                                       *
*                                                                     *
***********************************************************************
         LH    R5,$BUFSIZE    BLKSIZE FOR HASPACE
         STH   R5,HASPACE+62  STORE IN DCB
         STH   R5,HDECB2+6    STORE IN DECB
         LA    R5,63(R5)      PREPARE TO ROUND
         N     R5,=F'-64'     ROUND TO 64 BYTE BOUNDARY
***********************************************************************
*                                                                     *
*   OBTAIN BUFFERS FOR HASPCKPT AND HASPACE                           *
*                                                                     *
***********************************************************************
         LR    R14,R5         HASPACE BUFFER SIZE
         MH    R14,=H'3'      3 BUFFERS
         LH    R1,$CKRECN     NUMBER OF 4K RECORDS                2.2.0
         LA    R1,1(,R1)           PLUS MASTER RECORD             2.2.0
         AH    R1,$CLRECN          + NUMBER OF CHANGE LOG RECORDS 2.2.0
         ST    R1,QCJOTL      STORE RECORD COUNT
         SLL   R1,12          MULTIPLY BY 4096
         LA    R0,256(R1,R14) ADD CKPT BUFFERS, HASPACE BUFFERS, SLOP
         ST    R0,QGETL2      SAVE LENGTH OF GETMAIN AREA
         GETMAIN R,LV=(0)     OBTAIN BUFFERS
         ST    R1,QGETA2      SAVE ADDRESS OF GETMAIN AREA
         ST    R1,QCJQTL      BUFFER FOR FIRST CKPT REC
         SPACE 1                                                  2.2.0
         L     R15,=V(CKPT)        READ CKPT DATA                 2.2.0
         BALR  R14,R15                                            2.2.0
         SPACE 1                                                  2.2.0
         L     R1,QCJQTL           RESTORE BUFFER ADDRESS         2.2.0
         EJECT ,                                                  2.2.0
         LR    R14,R1              COMPUTE ADDR OF JQE EXTENSION
         LA    R14,$SAVELEN(,R14)  ACCOUNT FOR CHECKPOINTED HCT
         LA    R4,QSELEN      QSE LENGTH                          2.2.0
         MH    R4,$QSEMAX     MULTIPLY LENGTH TIMES NUM OF QSES   2.2.0
         ALR   R14,R4              ACCOUNT FOR QSE'S
         ST    R14,QCJQEXA         SAVE ADDR OF JQE EXTENSION
         AH    R1,=H'4096'    INCREMENT
*                                                                 2.2.0
         LH    R15,$CLRECN         NUMBER OF CHANGE LOG BLKS      2.2.0
         SLL   R15,12               TIMES 4K                      2.2.0
         AR    R1,R15              BUMP PAST CHANGE LOG           2.2.0
*                                                                 2.2.0
         USING HDP,R1              CONTROL BLOCK POOL HEADER      2.2.0
         SPACE 1                                                  2.2.0
         CLC   =C'**TGM  POOL**',HDPID                            2.2.0
         BE    OKTGM                                              2.2.0
         TPUT  =C'UNABLE TO LOCATE TGM POOL',25,EDIT,MF=(E,QTPUT) 2.2.0
         B     ABORT98             AND ABEND                      2.2.0
OKTGM    DS    0H                                                 2.2.0
         LA    R0,HDPLNGTH(,R1) ADD BUFFER PREFIX                 2.2.0
         ST    R0,QCTGMA           BUFFER FOR TGM BLOCKS          UF046
         ICM   R15,B'1111',HDPSIZE SIZE OF AREA                   2.2.0
         AR    R1,R15              BUMP                           2.2.0
         SPACE 1                                                  2.2.0
         CLC   =C'**JIX  POOL**',HDPID                            2.2.0
         BE    OKJIX                                              2.2.0
         TPUT  =C'UNABLE TO LOCATE JIX POOL',25,EDIT,MF=(E,QTPUT) 2.2.0
         B     ABORT98             AND ABEND                      2.2.0
OKJIX    DS    0H                                                 2.2.0
         LA    R0,HDPLNGTH(,R1) ADD BUFFER PREFIX                 2.2.0
         ST    R0,QCJIXA      BUFFER FOR JIX BLOCKS               UF020
         ICM   R15,B'1111',HDPSIZE SIZE OF AREA                   2.2.0
         AR    R1,R15              BUMP                           2.2.0
         SPACE 1                                                  2.2.0
         CLC   =C'**JQE  POOL**',HDPID                            2.2.0
         BE    OKJQE                                              2.2.0
         TPUT  =C'UNABLE TO LOCATE JQE POOL',25,EDIT,MF=(E,QTPUT) 2.2.0
         B     ABORT98             AND ABEND                      2.2.0
OKJQE    DS    0H                                                 2.2.0
         LA    R0,HDPLNGTH(,R1) ADD BUFFER PREFIX                 2.2.0
         ST    R0,QCJQTA      BUFFER FOR JQE BLOCKS
         ICM   R15,B'1111',HDPSIZE SIZE OF AREA                   2.2.0
         AR    R1,R15              BUMP                           2.2.0
         SPACE 1                                                  2.2.0
         CLC   =C'**PST  POOL**',HDPID                            2.2.0
         BE    OKPST                                              2.2.0
         TPUT  =C'UNABLE TO LOCATE PST POOL',25,EDIT,MF=(E,QTPUT) 2.2.0
         B     ABORT98             AND ABEND                      2.2.0
OKPST    DS    0H                                                 2.2.0
         LA    R0,HDPLNGTH(,R1) ADD BUFFER PREFIX                 2.2.0
         ST    R0,QCPSTA           BUFFER OF PST BLOCKS
         ICM   R15,B'1111',HDPSIZE SIZE OF AREA                   2.2.0
         AR    R1,R15              BUMP                           2.2.0
         SPACE 1                                                  2.2.0
         CLC   =C'**JOE  POOL**',HDPID                            2.2.0
         BE    OKJOE                                              2.2.0
         TPUT  =C'UNABLE TO LOCATE JOE POOL',25,EDIT,MF=(E,QTPUT) 2.2.0
         B     ABORT98             AND ABEND                      2.2.0
OKJOE    DS    0H                                                 2.2.0
         LA    R0,HDPLNGTH(,R1) ADD BUFFER PREFIX                 2.2.0
         ST    R0,QCJOTA      BUFFER FOR JOE BLOCKS
         ICM   R15,B'1111',HDPSIZE SIZE OF AREA                   2.2.0
         AR    R1,R15              BUMP                           2.2.0
         SPACE 1                                                  2.2.0
         CLC   =C'**RSO  POOL**',HDPID                            2.2.0
         BE    OKRSO                                              2.2.0
         TPUT  =C'UNABLE TO LOCATE RSO POOL',25,EDIT,MF=(E,QTPUT) 2.2.0
         B     ABORT98             AND ABEND                      2.2.0
OKRSO    DS    0H                                                 2.2.0
         LA    R0,HDPLNGTH(,R1) ADD BUFFER PREFIX                 2.2.0
         ICM   R15,B'1111',HDPSIZE SIZE OF AREA                   2.2.0
         AR    R1,R15              BUMP                           2.2.0
         SPACE 1                                                  2.2.0
         CLC   =C'**LCK  POOL**',HDPID                            2.2.0
         BE    OKLCK                                              2.2.0
         TPUT  =C'UNABLE TO LOCATE LCK POOL',25,EDIT,MF=(E,QTPUT) 2.2.0
         B     ABORT98             AND ABEND                      2.2.0
OKLCK    DS    0H                                                 2.2.0
         LA    R0,HDPLNGTH(,R1) ADD BUFFER PREFIX                 2.2.0
         ICM   R15,B'1111',HDPSIZE SIZE OF AREA                   2.2.0
         AR    R1,R15              BUMP                           2.2.0
         SPACE 1                                                  2.2.0
         CLC   =C'**DAS  POOL**',HDPID                            2.2.0
         BE    OKDAS                                              2.2.0
         TPUT  =C'UNABLE TO LOCATE DAS POOL',25,EDIT,MF=(E,QTPUT) 2.2.0
         B     ABORT98             AND ABEND                      2.2.0
OKDAS    DS    0H                                                 2.2.0
         LA    R0,HDPLNGTH(,R1) ADD BUFFER PREFIX                 2.2.0
         ST    R0,QCTDASA          BUFFER FOR DAS BLOCKS          2.2.0
         ICM   R15,B'1111',HDPSIZE SIZE OF AREA                   2.2.0
         AR    R1,R15              BUMP                           2.2.0
         SPACE 1                                                  2.2.0
         DROP  R1                                                 2.2.0
         SPACE 1                                                  2.2.0
         ST    R1,QCJCTA      BUFFER FOR JCT
         AR    R1,R5          INCREMENT
         ST    R1,QCIOTA      BUFFER FOR IOT
         AR    R1,R5          INCREMENT
         ST    R1,QCBLKA      BUFFER FOR DATA BLOCKS
         SPACE 1                                                  ONL16
         L     R1,QCJCTA           ADDR OF JCT BUFFER             ONL16
         SL    R1,=A(JCTSTART-JCT)  ADJUST FOR BUFFER PREFIX      ONL16
         ST    R1,QCJCTA           SAVE ADJUSTED JCT POINTER      ONL16
         SPACE 1                                                  ONL16
         LA    R1,$JQHEADS+$JQHEADL-$SAVEBEG OFFSET 1ST JQE HEAD  UF020
         A     R1,QCJQTL      BASE OF FIRST CKPT REC
         ST    R1,QCJQHEAD    ADDR OF FIRST JQE HEADER
***********************************************************************
*                                                                     *
*   ALLOCATE AND OPEN HASPACE                                         *
*                                                                     *
***********************************************************************
*                                                                 2.2.0
         L     R3,QCTDASA          ADDR OF DAS AREA               2.2.0
         USING DAS,R3              SET ADDRESSING                 UF046
         MVC   DA08DDN,=CL8'HASPACQ' DDNAME FOR ALLOCATE          WGH
         LA    R1,DSNSPACE         ADDR OF HASPACE DSN SUFFIX     CL006
         BAL   R14,BUILDSN         GO BUILD DATA SET NAME         CL006
         LA    R4,9           MAX POSSIBLE SPOOLS FOR QUEUE       UF020
         LA    R7,QCDCBL      LENGTH OF HASPACE DCB
         MR    R6,R4          COMPUTE LENGTH OF DCB POOL
         GETMAIN R,LV=(R7)    OBTAIN DCB POOL
         ST    R7,QGETL3      SAVE LENGTH OF GETMAIN
         ST    R1,QGETA3      SAVE ADDRESS OF GETMAIN
         LR    R7,R1          SAVE ADDR OF DCB POOL
         LA    R8,QCSPOOLS-4  ADDR OF OPEN LIST
         SR    R6,R6          ACTUAL NUMBER OF SPOOL VOLUMES
         MVC   DA08SER(5),$SPOOL PATTERN FOR VOLSER
SPOOL1   LA    R5,DEVTAB      ADDR OF DEVICE CHARACTERISTICS TBL
         TM    DASFLAG,DASEXSTS    DOES VOLUME EXIST?             UF046
         BZ    SPOOL4              NO, SKIP THIS ONE              UF046
         TM    DASFLAG2,DASINACT   IS IT INACTIVE?                UF046
         BO    SPOOL4              YES, SKIP IT                   UF046
         LH    R15,DASNOTGE        NUMBER OF TRACKS IN EXTENT     CL001
         A     R15,QCTNUMTG        ACCUMULATE ACTIVE              CL001
         ST    R15,QCTNUMTG         TRACK GROUP COUNT             CL001
SPOOL2   CLI   0(R5),X'FF'    IS THIS THE END OF TABLE?
         BE    ABORT          YES. UNSUPPORTED DEVICE TYPE.
         CLC   0(1,R5),DASTYPE     IS IT A MATCH?                 UF046
         BE    SPOOL3         YES. GO WITH IT.
         LA    R5,12(R5)      NEXT TABLE ENTRY
         B     SPOOL2         TRY NEXT ENTRY
SPOOL3   MVC   QCTRKCYL-QCSPOOLS+4+2(2,R8),2(R5) SET TRK/CYL         CL
         MVC   DA08UNIT,4(R5) MOVE UNIT NAME
         MVC   DA08SER+5(1),DASVOLID+5 LAST CHAR OF VOLSER        UF046
         LA    R6,1(R6)       INCREASE COUNT BY ONE
         STC   R6,DA08DDN+7   UPDATE DDNAME
         OI    DA08DDN+7,X'F0' MAKE IT A VALID NUMBER
         L     R15,=V(ALLOCATE) ADDR OF ALLOCATE MODULE
         BALR  R14,R15        GO TO IT
         MVC   0(QCDCBL,R7),HASPACE MOVE PATTERN DCB TO POOL
         MVC   47(1,R7),DA08DDN+7 UPDATE THE DDNAME
         ST    R7,4(R8)       STORE DCB ADDR IN OPEN LIST
         LA    R7,QCDCBL(R7)  INCREMENT TO NEXT DCB
SPOOL4   LA    R8,4(R8)       NEXT ENTRY IN OPEN LIST
         LA    R3,DASSIZ(,R3)      NEXT VOLUME                    UF046
         BCT   R4,SPOOL1      BRANCH IF MORE VOLUMES.
         L     R1,DA08PDSN         ADDR OF WORK AREA              CL006
         FREEMAIN R,LV=2+44,A=(1)  FREE WORK AREA                 CL006
         SPACE 2                                                     CL
***********************************************************************
*                                                                     *
*        OPEN ONE DCB FOR EACH ACTIVE EXTENT.                         *
*                                                                     *
***********************************************************************
         SPACE 2
         LA    R4,9                MAX POSSIBLE SPOOLS FOR QUEUEJKAUG84
         LA    R8,QCSPOOLS         ADDR OF FIRST DCB POINTER         CL
         SPACE 1                                                     CL
SPOOL5   OC    0(4,R8),0(R8)       SKIP IF THIS EXTENT               CL
         BZ    SPOOL6               IS NOT ACTIVE                    CL
         OI    0(R8),X'80'         SET END OF LIST INDICATOR         CL
         OPEN  MF=(E,(R8))         OPEN ONE EXTENT                   CL
         NI    0(R8),X'7F'         TURN OFF BIT JUST FOR NEATNESSKAUG84
SPOOL6   LA    R8,4(,R8)           BUMP TO NEXT EXTENT               CL
         BCT   R4,SPOOL5           CONTINUE IF ANY MORE              CL
         SPACE 2                                                  ONL02
******************************************************************ONL02
*                                                                 ONL02
*   PERFORM POST-OPEN CHECKPOINT/SPOOL AUTHORIZATION CHECK        ONL02
*                                                                 ONL02
******************************************************************ONL02
         SPACE 1                                                  ONL02
         QAUTHCK QAAFTOPN          POST-OPEN CKPT/SPOOL AUTH CHECKONL02
         SPACE 2                                                  ONL02
***********************************************************************
*                                                                     *
*   GO HOME                                                           *
*                                                                     *
***********************************************************************
         SPACE 1                                                  ONL02
         QSTOP
         SPACE 2                                                  ONL02
******************************************************************ONL02
*                                                                 ONL02
*   ABORT QUEUE COMMAND PROCESSING                                ONL02
*                                                                 ONL02
******************************************************************ONL02
         SPACE 1                                                  ONL02
QAABORT  DS    0H                  ABORT QUEUE COMMAND PROCESSING ONL02
         WTO   'QUEUE COMMAND ABORTED - INVALID ENVIRONMENT',     ONL02X
               ROUTCDE=(11)        TELL USER WHY                  ONL02
         SPACE 1                                                  ONL02
         ABEND 913                 ABEND U913                     ONL02
         EJECT                                                    CL006
***********************************************************************
*                                                                     *
*        CONSTRUCT DATA SET NAME FOR JES2 DISK DATA SETS.             *
*                                                                     *
*        R1 = ADDR OF DSN PREFIX                                      *
*        R14= LINK REGISTER                                           *
*                                                                     *
***********************************************************************
         SPACE 2
BUILDSN  L     R15,DA08PDSN        ADDR OF WORK AREA              CL006
         MVI   2(R15),C' '         BLANK DATA SET                 CL006
         MVC   3(43,R15),2(R15)     NAME WORK AREA                CL006
         MVC   2(8,R15),QPREFIX    SET PREFIX FROM COMMON         CL006
         LA    R15,9(R15)          ADDR OF LAST POSSIBLE CHAR     CL006
         CLI   0(R15),C' '         SKIP IF NON-BLANK              CL006
         BNE   *+8                  CHARACTER FOUND               CL006
         BCT   R15,*-8               ELSE KEEP LOOKING            CL006
         MVI   1(R15),C'.'         SET PERIOD                     CL006
         MVC   2(8,R15),0(R1)      COPY DSN SUFFIX                CL006
         LA    R15,2+7(R15)        ADDR OF LAST POSSIBLE CHAR     CL006
         CLI   0(R15),C' '         SKIP IF NON-BLANK              CL006
         BNE   *+8                  CHARACTER FOUND               CL006
         BCT   R15,*-8               ELSE KEEP LOOKING            CL006
         L     R1,DA08PDSN         ADDR OF WORK AREA              CL006
         LA    R1,1(R1)            ADDR OF FIRST BYTE OF NAME-1   CL006
         SR    R15,R1              LENGTH OF ENTIRE NAME          CL006
         L     R1,DA08PDSN         ADDR OF WORK AREA              CL006
         STH   R15,0(R1)           SET LENGTH FOR DAIR            CL006
         BR    R14                  AND RETURN                    CL006
***********************************************************************
*                                                                     *
*   UNSUPPORTED DEVICE TYPE. ABORT.                                   *
*                                                                     *
***********************************************************************
ABORT    TPUT  MESSAGE,L'MESSAGE,EDIT,MF=(E,QTPUT)   TELL THE USER
ABORT98  ABEND 98,DUMP        QUIT.                               2.2.0
***********************************************************************
*                                                                     *
*   MISCELLANY                                                        *
*                                                                     *
***********************************************************************
         LTORG
DEVTAB   DC    X'0900',H'19',CL8'3330' DEVTYPE,TRK/CYL,DEVNAME
         DC    X'0B00',H'30',CL8'3350'
         DC    X'0D00',H'19',CL8'3330-1'
         DC    X'0E00',H'15',CL8'3380'                            UF037
         DC    X'0F00',H'15',CL8'3390'                            WGH42
         DC    X'FFFF'
         DS    0F
TIR3     DC    X'00000300'    POINT PAST SYNC RECORDS
DSNCKPT  DC    CL8'HASPCKPT'                                      CL006
DSNSPACE DC    CL8'HASPACE'                                       CL006
MESSAGE  DC    C'UNSUPPORTED DEVICE TYPE SPECIFIED FOR SPOOL'
MESSAGE2 DC    C'INVALID PARAMETER SPECIFIED - '                  WGH
MESSAGE3 DC    C'INVALID HCT SAVEAREA ON CKPT'                    UF046
         EJECT                                                    CL006
***********************************************************************
*                                                                     *
*        CONSTRUCT PARSE PARAMETER LISTS                              *
*                                                                     *
***********************************************************************
         SPACE 2
PCLSTART IKJPARM DSECT=IKJPARMD                                   CL006
         SPACE 2                                                  CL006
PSTRING  IKJIDENT 'SUB-COMMAND',ASTERISK,FIRST=ALPHA,OTHER=ANY,   CL006*
               CHAR                                               CL006
         SPACE 1                                                  CL006
PPREFIX  IKJKEYWD ,                                               CL006
         SPACE 1                                                  CL006
         IKJNAME 'PREFIX',SUBFLD=SPREFIX                          CL006
         SPACE 1                                                  CL006
PUNIT    IKJKEYWD ,                                               CL006
         SPACE 1                                                  CL006
         IKJNAME 'UNIT',SUBFLD=SUNIT                              CL006
         SPACE 1                                                  CL006
PVOL     IKJKEYWD ,                                               CL006
         SPACE 1                                                  CL006
         IKJNAME 'VOL',SUBFLD=SVOL                                CL006
         SPACE 5                                                  CL006
SPREFIX  IKJSUBF ,                                                CL006
XPREFIX  IKJIDENT 'PREFIX',LIST,MAXLNTH=8,FIRST=ALPHA,            CL006*
               OTHER=ALPHANUM                                     CL006
         SPACE 1                                                  CL006
SUNIT    IKJSUBF ,                                                CL006
         SPACE 1                                                  CL006
XUNIT    IKJIDENT 'UNIT',LIST,MAXLNTH=8,OTHER=ALPHANUM,           CL006*
               FIRST=ALPHANUM                                     CL006
         SPACE 1                                                  CL006
SVOL     IKJSUBF ,                                                CL006
         SPACE 1                                                  CL006
XVOL     IKJIDENT 'VOLUME',LIST,MAXLNTH=6,FIRST=ALPHANUM,         CL006*
               OTHER=ALPHANUM                                     CL006
         SPACE 2                                                  CL006
         IKJENDP ,                                                CL006
         EJECT                                                    CL006
WORK     DSECT ,                                                  UF024
         DS    18F                 SAVEAREA PORTION               UF024
WORKAREA DS    D                   START OF SCRATCH WORK AREA     UF024
         SPACE 1                                                  UF024
SYMDEL   DSECT ,                   KILL SYM CARD GENERATION       UF023
INIT     CSECT ,                                                  UF023
         QPRBGEN BEGIN             SET PRINT FOR CNTL BLOCK GEN   ONL01
         COPY  $HASPGBL
&MACSPLV SETC  '2'
&SYSSPLV SETC  '2'
&VERSION SETC  'SP 4.2.0'
&FMID    SETC  'HJE4420'
         $DAS  ,                                                  UF046
         $MIT  ,                                                  UF046
         $PCE  ,              NEEDED FOR NJE $HCT                 UF001
         $JOE
         $JOT
NJOTPRFX EQU   (JOTJOES-JOT)/JOESIZE
         $LCK  ,                                                  UF020
         $BUFFER                                                  UF020
         $LMT   ,                                                 WGH42
         $XECB  ,                                                 WGH42
PDS2BLEN EQU    1                                                 WGH42
         IFGRPL
         $JCT  ,                                                  UF020
         $CAT  ,                                                  UF020
         $TAB
         $QSE
         $PDDB                                                    UF021
         $IOT
         $JQE
         $HCT
         $PSV  ,                JES2 4.3
         $HDP  ,                                                  2.2.0
         $HASPEQU
         IKJCPPL ,                                                ONL02
         IKJPSCB ,                                                ONL02
         IKJUPT  ,                                                WGH
*        IHADCB DSORG=PS                                          UF039
         DCBD   DSORG=PS                                          UF039
         CVT    DSECT=YES                                         CL006
         QCOMMON
         QPRBGEN DONE              RESTORE NORMAL PRINT STATUS    ONL01
SYMNODEL DSECT ,                   RESTORE SYM CARD GENERATION    UF023
         END
./ ADD NAME=QSTART   0102-93067-94091-1159-00308-00308-00013-SBGCSC
         MACRO
&NAME    QSTART &MAIN=NO,&TYPE=NORMAL                             ONL01
         GBLB  &QPFK          PF-KEY OPTION
         GBLB  &QACF2         ACF2 AUTH CHECKING                   FCI*
         GBLB  &QGEN          FORCE PRINT GEN OF MACRO EXPANSIONS UF019
         GBLB  &QBGEN         FORCE PRINT GEN OF CNTL BLOCK MACROSONL01
         GBLB  &QJTIP         JTIP PRODUCT INSTALLED              UF025
         GBLB  &QDBC          DBC  PRODUCT INSTALLED              UF024
         GBLB  &QRNB          ENABLES RNB-SPECIFIC CODE           RNB05
         GBLB  &QRACF         RACF CHECKING                       RNB03
         GBLC  &QRACUSR       NEW RACF USERID                     RNB03
         GBLB  &QNERDC        ENABLES NERDC SPECIFIC CODE         UF032
         GBLB  &QONL          ENABLES ONL SPECIFIC CODE           ONL06
         GBLB  &LOCK          ENABLES LOCKHEED SPECIFIC CODE         CL
         GBLC  &QDSPRFX       DEFINES HASPCKPT/HASPACE DSN PREFIX ONL09
         GBLC  &QCKPTV        VOLSER OF CHECKPOINT VOLUME         UF042
         GBLC  &QSIDS(7)      SMF ID'S OF SHARED CPU'S            UF042
         GBLC  &Q1CMD         DEFAULT FIRST COMMAND               UF042
         GBLC  &QPF(24)       PFK DEFINITIONS                     UF042
.*                                                                UF019
.* QPFK=0 SELECTS NO PF-KEY SUPPORT
.* QPFK=1 SELECTS PF=KEY SUPPORT
.*QACF2=0 SELECTS NO ACF2 CHECKING (SHOPS WITHOUT ACF2)            FCI*
.*QACF2=1 SELECTS ACF2 AUTH TO SYSOUT VIA DSN='SYSOUT.LID.JOBNAME' FCI*
.* QGEN=0 SELECTS PRINT NOGEN OPTION                              UF019
.* QGEN=1 SELECTS PRINT GEN OPTION                                UF019
.*QBGEN=0 SELECTS PRINT NOGEN OPTION FOR CONTROL BLOCK MACROS     ONL01
.*QBGEN=1 SELECTS PRINT GEN OPTION FOR CONTROL BLOCK MACROS       ONL01
.*QJTIP=0 SELECTS NO JTIP SUPPORT.                                UF025
.*QJTIP=1 SELECTS SHOPS WITH JTIP INSTALLED                       UF025
.* QDBC=0 SELECTS NO DBC SUPPORT.                                 UF024
.* QDBC=1 SELECTS SHOPS WITH DBC INSTALLED                        UF024
.*QRACF=0 SELECTS NO RACF SUPPORT                                 RNB03
.*QRACF=1 SELECTS RACF SUPPORT FOR ACCESS TO THE SPOOL/CHECKPOINT RNB03
.*        AND FOR THE XP AND XDS COMMANDS. DEFINE TWO RACF        RNB03
.*        RESOURCES IN CLASS(APPL): QUEUEXP WILL CONTROL THE XP   RNB03
.*        COMMAND AND QUEUEXDS WILL PROVIDE FURTHER CONTROL OVER  RNB03
.*        THE XDS COMMAND. WHEN THE RACHECK FOR THE XDS COMMAND   RNB03
.*        IS DONE, THE JOBNAME WILL BE SPECIFIED AS THE APPLID.   RNB03
.*        THUS, IF YOU SPECIFY AUDIT(ALL) FOR APPL-QUEUEXDS YOU   RNB03
.*        WILL KNOW WHAT DATA YOUR PRIVILEGED USERS HAVE BEEN     RNB03
.*        EXAMINING (AUDITORS LIKE THIS). QRACF IS NOT SUPPORTED  RNB03
.*        VIA THE SYSPARM OPTION.                                 RNB03
.*QRACUSR IS USED IF YOUR SPOOL AND CHECKPOINT ARE DEFINED TO     RNB03
.*        RACF WITH UACC=NONE. IT SPECIFIES A USERID THAT HAS     RNB03
.*        ACCESS TO THE SPOOL AND CHECKPOINT WITH READ AUTHORITY. RNB03
.*        DURING INITIALIZATION, THE SPECIFIED USERID WILL BE     RNB03
.*        SUBSTITUTED INTO THE RACF ACEE SO THE USER OF QUEUE HAS RNB03
.*        ACCESS TO THE SPOOL AND CHECKPOINT DATA SETS ONLY WHILE RNB03
.*        THE QUEUE COMMAND IS IN PROGRESS. IF QRACF=1, THEN      RNB03
.*        QRACUSR MUST BE SPECIFIED. IF YOUR SPOOL AND CHECKPOINT RNB03
.*        HAVE A UACC OF >= READ, SPECIFY QRACUSR AS NULL ('') TO RNB03
.*        BYPASS CHANGING THE ACEE USERID. QRACUSR IS NOT         RNB03
.*        SUPPORTED VIA THE SYSPARM OPTION.                       RNB03
.*                                                                UF019
&QPFK    SETB  1
&QACF2   SETB  0                                                   FCI*
&QGEN    SETB  1                                                  ONL01
&QBGEN   SETB  1                                                  ONL01
&QJTIP   SETB  0                                                  UF025
&QDBC    SETB  0                                                  UF024
&QRNB    SETB  0                                                  RNB05
&QRACF   SETB  0                                                  RNB03
&QRACUSR SETC  'QCMD'                                             RNB03
&QNERDC  SETB  0                                                  UF032
&QONL    SETB  0                                                  ONL06
&QDSPRFX SETC  'SYS1'                                             ONL09
*&QCKPTV  SETC  '      '
&QCKPTV  SETC  'JES2CA'                                           UF042
&QSIDS(1) SETC 'MVSP'                                             UF042
&QSIDS(2) SETC 'MVSW'                                             UF042
&QSIDS(3) SETC 'DOFP'                                             UF042
&QSIDS(4) SETC 'DOFD'                                             UF042
&QSIDS(5) SETC '    '                                             UF042
&QSIDS(6) SETC '    '                                             UF042
&QSIDS(7) SETC '    '                                             UF042
&Q1CMD    SETC 'ST'                                               UF042
&QPF(1)  SETC  'HELP'                                             UF043
&QPF(2)  SETC  'DA'                                               UF043
&QPF(3)  SETC  'END'                                              UF043
&QPF(4)  SETC  'PRINT'                                            UF043
&QPF(5)  SETC  'FIND'                                             UF043
&QPF(6)  SETC  'DI'                                               UF043
&QPF(7)  SETC  '-     21'                                         UF043
&QPF(8)  SETC  '+     21'                                         UF043
&QPF(9)  SETC  'DO'                                               UF043
&QPF(10) SETC  'CO    1'                                          UF043
&QPF(11) SETC  'CO    41'                                         UF043
&QPF(12) SETC  'ST'                                               UF043
.*                                                                UF019
         LCLA  &CNT,&CTR,&STRNG,&LNTH,&SUB                        UF019
         AIF   (K'&SYSPARM EQ 0).SYSPEND                          UF019
         MNOTE *,'SYSPARM IS ''&SYSPARM'' '                       UF019
         AIF   ('&SYSPARM'(1,1) EQ '(').MORE                      UF019
  MNOTE 2,'SYSPARM SYNTAX ERROR--MUST BE ENCLOSED IN PARENS'      UF019
         AGO   .SYSPEND                                           UF019
.MORE    ANOP                                                     UF019
&CNT     SETA  K'&SYSPARM                                         UF019
&CTR     SETA  1                                                  UF019
&STRNG   SETA  &CTR+1                                             UF019
.LOOP    AIF   ('&SYSPARM'(&CTR,1) EQ ',' OR &CTR EQ &CNT).FOUND  UF019
&CTR     SETA  &CTR+1                                             UF019
         AGO   .LOOP                                              UF019
.FOUND   ANOP                                                     UF019
&LNTH    SETA  &CTR-&STRNG                                        UF019
         AIF   (&LNTH EQ 0).NULL                                  UF019
         AIF   ('&SYSPARM'(&STRNG,&LNTH) NE 'PFK').SPNPFK         UF019
&QPFK    SETB  1                                                  UF019
.SPNPFK  AIF   ('&SYSPARM'(&STRNG,&LNTH) NE 'NOPFK').SPNPFK2      UF019
&QPFK    SETB  0                                                  UF019
.SPNPFK2 AIF   ('&SYSPARM'(&STRNG,&LNTH) NE 'ACF2').SPNACF        UF019
&QACF2   SETB  1                                                  UF019
.SPNACF  AIF   ('&SYSPARM'(&STRNG,&LNTH) NE 'NOACF2').SPNACF2     UF019
&QACF2   SETB  0                                                  UF019
.SPNACF2 ANOP                                                     UF019
         AIF   ('&SYSPARM'(&STRNG,&LNTH) NE 'GEN').SPNGEN         UF019
&QGEN    SETB  1                                                  UF019
.SPNGEN  AIF   ('&SYSPARM'(&STRNG,&LNTH) NE 'NOGEN').SPNGEN2      UF019
&QGEN    SETB  0                                                  UF019
.SPNGEN2 ANOP                                                     UF019
         AIF   ('&SYSPARM'(&STRNG,&LNTH) NE 'BGEN').BGENN1        ONL01
&QBGEN   SETB  1                                                  ONL01
.BGENN1  AIF   ('&SYSPARM'(&STRNG,&LNTH) NE 'NOBGEN').BGENN0      ONL01
&QBGEN   SETB  0                                                  ONL01
.BGENN0  ANOP  ,                                                  ONL01
         AIF   ('&SYSPARM'(&STRNG,&LNTH) NE 'JTIP').SPNJTIP       UF019
&QJTIP   SETB  1                                                  UF019
.SPNJTIP AIF   ('&SYSPARM'(&STRNG,&LNTH) NE 'NOJTIP').SPNJTP2     UF019
&QJTIP   SETB  0                                                  UF019
.SPNJTP2 ANOP                                                     UF019
         AIF   ('&SYSPARM'(&STRNG,&LNTH) NE 'DBC').SPNDBC         UF019
&QDBC    SETB  1                                                  UF019
.SPNDBC  AIF   ('&SYSPARM'(&STRNG,&LNTH) NE 'NODBC').SPNDBC2      UF019
&QDBC    SETB  0                                                  UF019
.SPNDBC2 ANOP                                                     UF019
         AIF   ('&SYSPARM'(&STRNG,&LNTH) NE 'NERDC').SPNNER       UF032
&QNERDC  SETB  1                                                  UF032
&QJTIP   SETB  1
&QDBC    SETB  1
&QCKPTV  SETC  'J2SPL3'
.*
&QPF(2)  SETC  'L *    +'                                         UF043
&QPF(9)  SETC  'HELP'                                             UF043
.*
.SPNNER  ANOP
&QJTIP   SETB  0                   TURN OFF JTIP CODE             UF046
.*
         AIF   ('&SYSPARM'(&STRNG,&LNTH) NE 'NONERDC').SPNNER2    UF032
&QNERDC  SETB  0                                                  UF032
.SPNNER2 ANOP                                                     UF032
         AIF   ('&SYSPARM'(&STRNG,&LNTH) NE 'ONL').ONLN1          ONL06
&QONL    SETB  1                                                  ONL06
.ONLN1   AIF   ('&SYSPARM'(&STRNG,&LNTH) NE 'NOONL').ONLN0        ONL06
&QONL    SETB  0                                                  ONL06
.ONLN0   ANOP  ,                                                  ONL06
         AIF   ('&SYSPARM'(&STRNG,&LNTH) NE 'LOCKHEED').LOCK1        CL
&LOCK    SETB  1                                                     CL
.LOCK1   ANOP                                                        CL
.NULL    ANOP                                                     UF019
         AIF   (&CTR EQ &CNT).SYSPEND                             UF019
&CTR     SETA  &CTR+1                                             UF019
&STRNG   SETA  &CTR                                               UF019
         AGO   .LOOP                                              UF019
.SYSPEND ANOP                                                     UF019
         AIF   (NOT &QONL).NOTONL                                 ONL06
&QPFK    SETB  1                   THESE                          ONL06
&QACF2   SETB  ('&NAME' EQ 'CJHIST')  PARAMETERS                  ONL06
&QGEN    SETB  1                       IF                         ONL06
&QBGEN   SETB  0                        &QONL=1                   ONL06
&QJTIP   SETB  0                         .                        ONL06
&QDBC    SETB  0                          .                       ONL06
&QRNB    SETB  0                           .                      ONL06
&QRACF   SETB  0                            .                     ONL06
&QNERDC  SETB  0                             .                    ONL06
&QDSPRFX SETC  'JES2'                         .                   ONL06
&QCKPTV  SETC  'JES2CA'                        .                  ONL06
&QSIDS(1) SETC 'MVSP'                           .                 ONL06
&QSIDS(2) SETC 'MVSW'                            .                ONL06
&QSIDS(3) SETC 'DOFP'                             .               ONL06
&QSIDS(4) SETC 'DOFD'                              .              ONL06
&QPF(2)  SETC  'L *    +'                           .             ONL06
&QPF(6)  SETC  'FA F142I'                            .            ONL06
&QPF(9)  SETC  'DD     *'                             .           ONL06
.NOTONL  ANOP  ,                                                  ONL06
         AIF   ('&TYPE'  EQ 'GLOBAL').GEN  FORCE PRINT GEN FOR QCOMMON
         AIF   (&QGEN).GEN                                        UF019
         PRINT NOGEN                                              UF019
         AGO   .START                                             UF019
.GEN     PRINT GEN                                                UF019
.START   ANOP                                                     UF019
***********************************************************************
 MNOTE *,'PFK=&QPFK, GEN=&QGEN, BGEN=&QBGEN, JTIP=&QJTIP, DBC=&QDBC'
 MNOTE *,'SPOOL=&QCKPTV, DSNPRFX=&QDSPRFX '
 MNOTE *,'NERDC=&QNERDC, ONL=&QONL, RNB=&QRNB, LOCK=&LOCK '
 MNOTE *,'ACF2=&QACF2, RACF=&QRACF, RACUSR=&QRACUSR'
***********************************************************************
         SPACE 1                                                  ONL01
&NAME    START 0
         AIF   ('&TYPE' EQ 'GLOBAL' OR '&MAIN' EQ 'YES').PRTSKP1  ONL01
         AIF   (&QBGEN).PRTSKP1                                   ONL01
         PUSH  PRINT                                              ONL01
         PRINT OFF                                                ONL01
.PRTSKP1 ANOP  ,                                                  ONL01
         SPACE 1                                                  ONL01
***********************************************************************
*                                                                     *
*   THE QUEUE COMMAND WAS WRITTEN FOR YOUR AMUSEMENT AND AMAZEMENT BY *
*     THE INTERGALACTIC MESSIANIC INDIVIDUAL GROUP THERAPY DIVISION   *
*     OF TRW SYSTEMS, 1 SPACE PARK, REDONDO BEACH, CA. 90278          *
*   THE ORIGINAL PROGRAMMING WAS DONE BY ANDY ZIDE, CHIEF PROGRAMMER  *
*     AND RESIDENT FLAKE WHO HAS SINCE DEPARTED TRW TO PLAY WITH      *
*     MICROCODE.                                                      *
*   PLEASE ADDRESS ANY COMMENTS, SUGGESTIONS, COMPLAINTS, OR THREATS  *
*     TO STEVE ANDERSON (R3/1028)   (213) 535-0682   OR               *
*        PAUL FELIX     (R3/1028)   (213) 535-0682                    *
*                                                                     *
*   STEVE ANDERSON HAS LEFT TRW.  PLEASE ADDRESS ANY COMMENTS OR      *
*   FIXES TO JACK SCHUDEL AT THE ADDRESS LISTED BELOW.                *
*                                                                     *
*   THE FOLLOWING INDIVIDUALS HAVE MADE MODIFICATIONS TO QUEUE WHICH  *
*     HAVE BEEN INCORPORATED INTO THIS CURRENT VERSION.               *
*                                                                     *
*        VILKO MACEK                                                  *
*        INSURANCE CORPORATION OF BRITISH COLUMBIA                    *
*        MODIFICATION: PFK SUPPORT                                    *
*                                                                     *
*        TRW ISD                                                      *
*        ANAHEIM, CALIFORNIA                                          *
*        MODIFICATION: DISPLAY CPU TIME FOR BATCH, STC AND TSO        *
*                      DISPLAY INITIATORS                             *
*                                                                     *
*        KEN TRUE                                                     *
*        FAIRCHILD CAMERA AND INSTRUMENT                              *
*        MOUNTAIN VIEW, CALIFORNIA                                    *
*        MODIFICATION: ACF2 SUPPORT                                   *
*                      PRINT SCREEN SUPPORT                           *
*                                                                     *
*        JACK SCHUDEL                                                 *
*        NORTHEAST REGIONAL DATA CENTER                               *
*        233 SSRB, UNIVERSITY OF FLORIDA                              *
*        GAINESVILLE, FLORIDA  32611                                  *
*        (904) 392-4601                                               *
*        MODIFICATIONS:  SEE MEMBER $UFDOC                            *
*                                                                     *
*        WALT FARRELL                                                 *
*        RAINIER NATIONAL BANK                                        *
*        P. O. BOX C34030                                             *
*        SEATTLE, WASHINGTON  98124                                   *
*        (206) 433-7467                                               *
*        MODIFICATIONS:  SEE MEMBER $RNBDOC                           *
*                                                                     *
*        ROBERT M. JINKINS                                            *
*        OAK RIDGE NATIONAL LABORATORY                                *
*        BLDG. 4500-N  MS-259                                         *
*        P.O. BOX X                                                   *
*        OAK RIDGE, TENN.  37830                                      *
*        (615) 574-7208/5300                                          *
*          FTS 624-7208/5300                                          *
*        SHARE INSTALLATION CODE:  OR                                 *
*        MODIFICATIONS:  SEE MEMBER $ONLDOC                           *
*                                                                     *
*        JOHN KINN                                                    *
*        LOCKHEED - CALIFORNIA COMPANY                                *
*        PLANT A1 BUILDING 67 DEPTMENT 8321                           *
*        P.O. BOX 551                                                 *
*        BURBANK, CALIFORNIA 91520                                    *
*        (818) 847-7492                                               *
*        SHARE INSTALLATION CODE:  CL                                 *
*        MODIFICATIONS:  SEE MEMBER $CLDOC                            *
*                                                                     *
***********************************************************************
         SPACE 2                                                  ONL01
*                                                                 ONL01
*  REGISTER EQUATES                                               ONL01
*                                                                 ONL01
         SPACE 1                                                  ONL01
         AIF   ('&TYPE' EQ 'GLOBAL' OR '&MAIN' EQ 'YES').PRTSKP2  ONL01
         AIF   (&QBGEN).PRTSKP2                                   ONL01
         SPACE 1                                                  ONL01
         POP   PRINT                                              ONL01
.PRTSKP2 ANOP  ,                                                  ONL01
         AIF   ('&TYPE' EQ 'NORMAL').GO
         MEXIT
.GO      ANOP
         SPACE 1                                                  ONL01
         USING *,R12               BASE REGISTER
         USING QCOMMON,R11         ACCESS TO COMMON VECTOR TABLE
         STM   R14,R12,12(R13)     STANDARD REGISTER SAVE
         LR    R12,R15             LOAD BASE REG
         B     *+28                BRANCH AROUND IDENTIFIER
         DC    CL8'&NAME'          MODULE IDENTIFIER
         DC    CL8'&SYSDATE'       ASSEMBLY DATE
         DC    CL8' &SYSTIME'      ASSEMBLY TIME
         AIF   ('&MAIN' EQ 'YES').MAINYES
         LR    R15,R13             RETAIN SAVE AREA ADDR
         LA    R13,72(R13)         POINT TO NEXT SAVE AREA
         AGO   .MAINNO
.MAINYES ANOP
         LR    R2,R1               SAVE PARAMETER REGISTER
         GETMAIN R,LV=4096         GET STORAGE FOR SAVEAREA
         ST    R1,8(R13)           FORWARD POINTER
         ST    R13,4(R1)           BACKWARD POINTER
         LR    R13,R1              MOVE ADDR TO R1
         MEXIT
.MAINNO  ANOP
         ST    R13,8(R15)          FORWARD POINTER
         ST    R15,4(R13)          BACKWARD POINTER
         MEND
