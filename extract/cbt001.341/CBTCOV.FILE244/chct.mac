CHCT     TITLE 'QUEUE COMMAND - DUMP A HCT IN HEX'                ONL01
CHCT     QSTART ,                  START CHCT CSECT ASSEMBLY      ONL01
***********************************************************************
* HCT                                                                 *
         USING WORK,R13            BASE REG FOR LOCAL SAVE AREA   WGH
***********************************************************************
*                                                                     *
*   CALL - READ JES2 CHECKPOINT ROUTINE                               *
*                                                                     *
***********************************************************************
         L     R15,=V(CKPT)        ADDR OF CKPT ROUTINE
         BALR  R14,R15             GO TO IT
***********************************************************************
*                                                                     *
*   CALL HEXDUMP TO DUMP THE HCT CHECKPOINT AREA                      *
*                                                                     *
***********************************************************************
         L     R10,QVCKPT     BASE FOR CKPT WORK AREA
         USING QCKPT,R10      ADDRESSING FOR IT
         LH    R2,QLNG1       LENGTH OF 1ST PARM                   WGH
         LTR   R2,R2          ANYTHING THERE ?                     WGH
         BZ    JQTLR          NO... USE 1ST CHECKPOINT RECORD      WGH
         CLI   QPARM1,C'0'    IS FIRST POSITION A NUMBER ??        WGH
         BL    NAME           NO...  GET BLOCK NAME                WGH
         BCTR  R2,0           REDUCE LENGTH FOR EXECUTE            WGH
         EX    R2,PACKBLK     PACK INTO QDWORK                     WGH
         CVB   R1,QDWORK      PICK UP BLOCK NUMBER                 WGH
         LTR   R1,R1          CHECK IF ZERO                        WGH
         BP    *+8            NO... CONTINUE                       WGH
         LA    R1,1           YES.. FORCE TO 1                     WGH
*        C     R1,QCJOTL      COMPARE TO MAX                       WGH
*        BNH   *+8            OK... KEEP IT                        WGH
*        L     R1,QCJOTL      TOO BIG... USE MAX                   WGH
         BCTR  R1,0           REDUCE FOR ADDRESS CALCULATION       WGH
         MH    R1,=H'4096'    CALCULATE BUFFER OFFSET OF RECORD    WGH
         A     R1,QCJQTL      ADD TO BASE OF CKPT AREA             WGH
         B     NEXTPARM       PROCESS OFFSET                       WGH
NAME     LA    R1,CKPTABLE-6         GET BLOCK NAME                WGH
         LA    R15,(CKPTEND-CKPTABLE)/6        SIZE OF TABLE       WGH
TABLOOP  LA    R1,6(R1)       CHECK NEXT ENTRY                     WGH
         CLC   0(3,R1),QPARM1 IS THIS NAME CORRECT                 WGH
         BE    TABFIND        YES..  PROCESS NAME                  WGH
         BCT   R15,TABLOOP    NO...  TRY AGAIN                     WGH
         B     JQTLR          END OF TABLE - DEFAULT TO 1ST        WGH
TABFIND  EQU   *                                                   WGH
         MVC   LOADINW,LOADINST   MOVE IN MODEL INSTRUCTION        WGH
         MVC   LOADINW+2(2),4(R1) MOVE IN S TYPE ADDRESS           WGH
         LA    R2,0               SET OVERLAY TO 0 FOR EXECUTE     WGH
         EX    R2,LOADINW     ADDRESS OF CHECKPOINT RECORD TO R1   WGH
         B     NEXTPARM       GO PROCESS PARM2                     WGH
JQTLR    L     R1,QCJQTL      ADDRESS OF 1ST CHECKPOINT REC        WGH
NEXTPARM EQU   *              PROCESS PARM2                        WGH
         LR    R2,R1          SAVE ORIGINAL BASE                   WGH
         MVC   MSGCKPW(MSGCKPWL),MSGCKP   MOVE MSG TO WORK AREA    WGH
         S     R1,QCJQTL      CALCULATE CKPT RECORD OFFSET         WGH
         SR    R0,R0          CLEAR FOR DIVIDE                     WGH
         D     R0,=F'4096'    CALCULATE CKPT RECORD NUMBER         WGH
         MVC   MSGCKP3W,QBLANK          BLANK OUT OFFSET MSG       WGH
         LTR   R0,R0          IS THERE AN OFFSET                   WGH
         BZ    NOOFF          NO... CONTINUE                       WGH
         MVC   MSGCKP3W,MSGCKP3         YES.. MOVE IN OFFSET MSG   WGH
         MVC   MSGCKP3W+1(3),QPARM1     MOVE CONTROL BLOCK NAME    WGH
         ST    R0,QDWORK      STORE OFFSET                         WGH
         UNPK  MSGCKP4W(5),QDWORK+2(3)                             WGH
         TR    MSGCKP4W(4),TRTAB-C'0'                              WGH
         MVI   MSGCKP4W+4,C' ' CLEAR EXTRA BYTE                    WGH
NOOFF    LA    R1,1(R1)       MAKE BLOCK # RELEATIVE 1             WGH
         CVD   R1,QDWORK      CONVERT TO DECIMAL                   WGH
         ED    MSGCKP1W,QDWORK+6   INSERT NUMBER IN MSG            WGH
         L     R1,QCJOTL      GET TOTAL NUMBER OF CKPT RECORDS     WGH
         CVD   R1,QDWORK      CONVERT TO DECIMAL                   WGH
         ED    MSGCKP2W,QDWORK+6   INSERT NUMBER IN MSG            WGH
*        MVC   QDHLINE(MSGCKPWL),MSGCKPW  PUT MSG IN HEADER        WGH
         LA    R1,MSGCKPW     MESSAGE ADDRESS                      WGH
         ST    R1,QDMSGA      SAVE ADDRESS                         WGH
         LA    R1,MSGCKPWL    LENGTH                               WGH
         STH   R1,QDMLNG      SAVE FOR DISPLAY ROUTINE             WGH
         L     R15,=V(DISPLAY)                                     WGH
         BALR  R14,R15        DO IT                                WGH
         LR    R1,R2          RELOAD ORIGINAL BASE                 WGH
         LH    R15,QLNG2      LENGTH OF OFFSET PARM                WGH
         LTR   R15,R15        IS LENGTH ZERO ??                    WGH
         BNP   DOOFF          YES.. NO OFFSET                      WGH
         EX    R15,OFFTR2     NO... CONVERT TO HEX                 WGH
         EX    R15,OFFPACK    PACK INTO QDWORD                     WGH
         LH    R15,QDWORK     PICK UP OFFSET                       WGH
DOOFF    EQU   *                                                   WGH
         LR    R0,R15         SAVE OFFSET                          WGH
         AR    R1,R15         ADD OFFSET TO BASE                   WGH
         LH    R15,=H'4096'   LENGTH OF BUFFER                     WGH
         SR    R15,R0         LENGTH - OFFSET = LENGTH TO DUMP     WGH
         SLL   R0,16          MOVE OFFSET TO PROPER POSITION       WGH
         OR    R0,R15         INSERT INTO LENGTH REGISTER          WGH
*        L     R1,QCJQTL      ADDRESS OF HCT SAVEAREA
*        LA    R0,$SAVEBEG-HCT  OFFSET TO START OF AREA
*        LA    R0,0             OFFSET TO START OF AREA
*        LA    R15,$SAVELEN   LENGTH OF $SAVEAREA
*        LA    R15,4095       LENGTH TO DUMP
*        SLL   R0,16          MOVE OFFSET TO PROPER POSITION
*        OR    R0,R15         INSERT INTO LENGTH REG
         L     R15,=V(HEXDUMP) ADDRESS OF DUMP ROUTINE
         BALR  R14,R15        LINK TO IT
STOP     QSTOP
***********************************************************************
*                                                                     *
*   MISCELLANY                                                        *
*                                                                     *
***********************************************************************
LOADINST L     R1,*-*              MODEL INSTRUCTION              WGH
OFFTR1   TR    QPARM1,TABLEH-193   CONVERT TO HEX                 WGH
OFFTR2   TR    QPARM2,TABLEH-193   CONVERT TO HEX                 WGH
OFFPACK  PACK  QDWORK(3),QPARM2(1) PACK TO WORK AREA              WGH
PACKBLK  PACK  QDWORK,QPARM1(1)    PACK TO WORK AREA              WGH
TABLEH   DC    X'0A0B0C0D0E0F',CL41' ',C'0123456789',CL6' '       WGH
TRTAB    DC    C'0123456789ABCDEF'                                WGH
MSGCKP   DC    C'*** CHECKPOINT RECORD'
MSGCKP1  DC    X'40202020'
         DC    C' OF'
MSGCKP2  DC    X'40202020',C' ***   '
MSGCKP3  DC    C' XXX BEGAN AT RECORD OFFSET '
MSGCKP4  DC    CL5' '
MSGCKPL  EQU   *-MSGCKP                                           WGH
         DS    0H                  FORCE TABLE ALIGNMENT          WGH
CKPTABLE DC    CL4'HCT',S(QCJQTL)                                 WGH
         DC    CL4'DAS',S(QCTDASA)                                WGH
         DC    CL4'TGM',S(QCTGMA)                                 WGH
         DC    CL4'JIX',S(QCJIXA)                                 WGH
         DC    CL4'JQT',S(QCJQTA)                                 WGH
         DC    CL4'PST',S(QCPSTA)                                 WGH
         DC    CL4'JOT',S(QCJOTA)                                 WGH
         DC    CL4'JCT',S(QCJCTA)                                 WGH
CKPTEND  EQU   *
         LTORG
SYMDEL   DSECT ,                   KILL SYM CARD GENERATION       UF023
         QCOMMON
CHCT     CSECT
         DROP
         COPY  $HASPGBL
&MACSPLV SETC  '2'
&SYSSPLV SETC  '2'
&VERSION SETC  'SP 4.2.0'                                         WGH
&FMID    SETC  'HJE4420'                                          WGH
         QPRBGEN BEGIN             SET PRINT FOR CNTL BLOCK GEN   ONL01
        $HASPEQU
        $LMT    ,                                                 WGH42
        $XECB   ,                                                 WGH42
PDS2BLEN EQU    1                                                 WGH42
         IFGRPL
        $BUFFER
        $JCT
        $CAT
        $JQE
        $PCE
        $MIT   ,                                                  ONL11
        $HCT
         QPRBGEN DONE              RESTORE NORMAL PRINT STATUS    ONL01
WORK     DSECT                                                     WGH
         DS     90F                 5 SAVE AREAS                   WGH
LOADINW  DS    F                    LOAD INSTRUCTION WORK AREA     WGH
MSGCKPW  DC    C'*** CHECKPOINT RECORD'
MSGCKP1W DC    X'40202020'
         DC    C' OF'
MSGCKP2W DC    X'40202020',C' ***   '
MSGCKP3W DC    C' XXX BEGAN AT RECORD OFFSET '
MSGCKP4W DC    CL5' '
MSGCKPWL EQU   *-MSGCKPW
SYMNODEL DSECT ,                   RESTORE SYM CARD GENERATION    UF023
         END
