INITS    TITLE 'QUEUE COMMAND - LIST INITIATORS COMMAND'          ONL01
INITS    QSTART ,                  START INITS CSECT ASSEMBLY     ONL01
         USING QCKPT,R9       BASE REG FOR CHECKPOINT AREA
         L     R9,QVCKPT      LOAD BASE REG
         USING WORK,R13       BASE REG FOR LOCAL WORK AREA
******************************************************************UF006
*                                                                 UF006
*   CALL - READ JES2 CHECKPOINT ROUTINE                           UF006
*                                                                 UF006
******************************************************************UF006
CALLCKPT L     R15,=V(CKPT)   ADDR OF CKPT ROUTINE                UF006
         BALR  R14,R15        GO TO IT                            UF006
         L     R8,16          POINT TO CVT
         USING CVTDSECT,R8
***********************************************************************
*                                                                     *
*        FIND THE ACTIVE MAIN SUBSYSTEM SSVT                          *
*        AND CHECK TO SEE IF XA                                       *
*                                                                     *
***********************************************************************
         L     R8,CVTJESCT    POINT TO JESCT
         DROP  R8
         USING JESCT,R8
         L     R8,JESSSCT     POINT TO SSCT
         DROP  R8
         USING SSCT,R8
         L     R8,SSCTSUS2    POINT TO HCCT                   WGH42
         DROP  R8
         USING HCCT,R8                                        WGH42
***********************************************************************
*                                                                     *
*        FIND THE ACTIVE MAIN SUBSYSTEM'S PITS                        *
*                                                                     *
***********************************************************************
         L     R7,CCTPIT      POINT TO PITTABLE               WGH42
         LTR   R6,R7          TEST IF ANY PITS
         BZ    NOPITS         NO, IGNORE COMMAND
         TM    QFLAG1,QFLG1XA TEST FOR XA PROCESSOR
         BNO   NOTXA          BR IF NOT
         SPACE 1
        $AMODE 31,PUSHR=4
NOTXA    EQU   *
         LA    R6,36          NUMBER OF CLASSES ALWAYS 36
         USING PIT,R7
         MVC   QDHLINE,INITHD MOVE IN THE HEADING
***********************************************************************
*                                                                     *
*        BUILD THE MESSAGE(S) DESCRIBING THE PITS                     *
*                                                                     *
***********************************************************************
BLDMSG   MVC   QDMSG,QBLANK   BLANK THE AREA
         MVC   INIT#(2),PITPATID MOVE IN PIT ID
         LR    R1,R6          COPY THE LENGTH
         BCTR  R1,0           SUBTRACT ONE
         EX    R1,MVCLAS      MOVE THE CLASSES
         TM    PITSTAT,PITHOLDA+PITHOLD1 TEST FOR DRAINED
         BNZ   HOLDPIT        YES
         TM    PITSTAT,PITHALTA+PITHALT1 TEST FOR HALTED
         BNZ   HALTPIT        YES
         MVC   STATUS,=CL8'ACTIVE'
         TM    PITSTAT,PITBUSY TEST FOR BUSY
         BO    ACTPIT         YES
         MVC   STATUS,=CL8'INACTIVE'
         B     NEXTPIT        END OF MESSAGE LINE.
MVCLAS   MVC   CLASSES(0),PITCLASS SET THE CLASSES
HOLDPIT  MVC   STATUS,=CL8'DRAINED' SET STATUS
         TM    PITSTAT,PITBUSY TEST FOR BUSY
         BZ    NEXTPIT        NO
         MVC   STATUS+5(3),=C'ING' SET STATUS
         B     ACTPIT         YES
HALTPIT  MVC   STATUS,=CL8'HALTED' SET STATUS
         TM    PITSTAT,PITBUSY TEST FOR BUSY
         BZ    NEXTPIT        NO
         MVC   STATUS+4(3),=C'ING' SET STATUS
ACTPIT   L     R5,PITSJB      POINT TO THE SJB
         USING SJB,R5
         L     R1,SJBJQOFF    POINT TO JOB QUEUE OFFSET
         A     R1,QCJQTA      POINT TO THE JQE
         USING JQE,R1
         CLC   JQEJNAME,SJBJOBNM TEST FOR RIGHT JOB
         BNE   NEXTPIT        RIGHT JOB, GOOD
         MVC   JOBNAME,SJBJOBNM MOVE IN JOBNAME
         LH    R0,JQEJOBNO    LOAD JOB NUMBER
         CVD   R0,CONVERT     GET THE DECIMAL VALUE
         MVC   JOBNUM,ED5     GET THE CHARACTER VALUE
         ED    JOBNUM,CONVERT+5 GET THE CHARACTER VALUE
***********************************************************************
*                                                                     *
*        SEND THE MESSAGE DESCRIBING THE PIT                          *
*                                                                     *
***********************************************************************
NEXTPIT  L     R7,PITNEXT     POINT TO NEXT PIT
         DROP  R1,R5
         MVC   QDMLNG,=H'80'  SET THE LENGTH
         LA    R0,QDMSG       GET THE ADDRESS
         ST    R0,QDMSGA      SET THE ADDRESS
         TM    QFLAG1,QFLG1XA TEST IF XA MODE
         BNO   NEXTPIT1       BR IF NOT
        $AMODE POPR=4
NEXTPIT1 L     R15,=V(DISPLAY) POINT TO THE ROUTINE
         BALR  R14,R15        CALL THE ROUTINE
         LTR   R7,R7          TEST FOR NEXT PIT
         BZ    END            NO, LETS STOP
         TM    QFLAG1,QFLG1XA TEST IF XA MODE
         BNO   BLDMSG         BR IF NOT
        $AMODE 31,PUSHR=4
         B     BLDMSG
***********************************************************************
*                                                                     *
*        END IT ALL                                                   *
*                                                                     *
***********************************************************************
END      QSTOP
NOPITS   QTILT '***** NO PITS  TO DISPLAY *****'
INITHD   DC    CL80'INIT    STATUS   JOBNAME    NUMBER    CLASSES'
ED5      DC    X'402020202120'
         LTORG
***********************************************************************
*                                                                     *
*        DESCRIBE ALL THE DSECTS NEEDED BY THIS MODULE                *
*                                                                     *
***********************************************************************
SYMDEL   DSECT ,                   KILL SYM CARD GENERATION       UF023
INITS    CSECT ,                                                  UF023
         QPRBGEN BEGIN             SET PRINT FOR CNTL BLOCK GEN   ONL01
         CVT   PREFIX=NO,DSECT=YES                                UF046
CVTDSECT EQU   CVT                                                UF046
         IEFJESCT TYPE=DSECT                                      UF046
         IEFJSCVT ,                                               UF046
INITS    CSECT ,                                                  UF046
         $PIT
         IEZDEB ,                                                 UF046
INITS    CSECT ,                                                  UF046
         $SJB
         $JQE
         $TQE
         $XECB ,                                                  UF046
         $SCAT ,                                                  UF046
         $HCCT ,                                                  WGH42
         $HFAME ,
         $HASPEQU
         QCOMMON
         QPRBGEN DONE              RESTORE NORMAL PRINT STATUS    ONL01
         ORG   QDMSG
         DS    C
INIT#    DS    CL2
         DS    CL4
STATUS   DS    CL8
         DS    CL2
JOBNAME  DS    CL8
         DS    CL3
JOBNUM   DS    CL6
         DS    CL4
CLASSES  DS    C
WORK     DSECT
         DS    CL72
CONVERT  DS    D
SYMNODEL DSECT ,                   RESTORE SYM CARD GENERATION    UF023
         END
