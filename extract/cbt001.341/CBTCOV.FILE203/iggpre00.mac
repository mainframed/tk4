         TITLE 'IGGPRE00 -DF/DS ALLOCATE PRE PROCCESSING EXIT TESTER'
*
*        ATTRIBUTES:  RENT REUS
*        REGISTER USAGE:
*        R0
*        R1    ON ENTRY, ADDRESS OF EXIT PARAMETER LIST
*        R2    EXIT PARAMETER LIST BASE REG
*        R3    JFCB DSECT BASE
*        R4    WORK
*        R5    WORK
*        R6    WORK
*        R7    WORK
*        R8    WORK
*        R9    WORK
*        R10   WORK
*        R11   WORK
*        R12   PROGRAM BASE REG
*        R13   SAVE AREA POINTER
*        R14   RETURN ADDRESS
*        R15   RETURN CODES: 0 = ALLOW ALLOCATE
*                            4 = CONDITIONAL REJECTION (THIS VOLUME)
*                            8 = UNCONDITIONAL REJECTION
*
*        MACROS:
*              SAVE
*              GETMAIN
*              FREEMAIN
*              RETURN
*              EQUATE        DELUXE REGISTER EQUATES
*              IECIEXPL      PRE/POST PARAMETER LIST MAP
*              IEFJFCBN      JFCB MAPPING
*              CVT           CVT MAPPING
*              IEFASIOT      SIOT MAPPING
*              IEFASCTB      SCT MAPPING
*              IKJTCB        TCB MAPPING
*              IEZJSCB       JSCB MAPPING
*              IHARB         RB (PRB,SVRB) MAPPING
*              IEFZB4D0      SVC 99 (DYNALLOC) PARAMETER LIST MAPPING
*              IEFZB4D2      SVC 99 (DYNALLOC) TEXT UNIT KEYS MAPPING
*
IGGPRE00 CSECT
         SAVE  (14,12),,IGGPRE00_DFDS_ALLOC_PRE_TEST_&SYSDATE_&SYSTIME
         LR    R12,R15                  PROGRAM ADDRESSABILITY
         USING IGGPRE00,R12             TELL ASSEMBLER
         LR    R2,R1                    SAVE PARM LIST ADDRESS IN R2
         USING IEXPL,R2                 TELL ASSEMBLER
         CLI   IEXFUNC,IEXALL           IS THIS ALLOCATE?
         BNE   RETURN                   QUICK RETURN
         CLI   IEXFLAG,IEXVIO           IS THIS VIO REQUEST?
         BE    RETURN                   QUICK RETURN
         L     R3,IEXPTR1               ADDRESS OF JFCB
         USING JFCBDSCT,R3              TELL ASSEMBLER
         CLI   JFCDSRG2,JFCORGAM        IS THIS VSAM?
         BE    RETURN                   ALLOW IT
         LH    R11,MAXBLKSI             MAXIMUM BLKSIZE TO R11
         CH    R11,JFCBLKSI             FOR COMPARE WITH JFCBLKSI
         BNL   RETURN                   LESS OR EQUAL MAX IS OK
         CH    R11,JFCLRECL             SEE IF LRECL IS HIGH
         BNL   CHKUNIT                  GO SEE WHAT UNIT NAME IS
         B     RETURN                   ALLOW EXCEPTION CONDITION
         DROP  R2,R3
CHKUNIT  EQU   *                        FIND OUT WHAT UNITNAME IS
         L     R0,SIZDATD               DYNAMIC AREA SIZE TO R0
         GETMAIN R,LV=(0)               GETMAIN DYNAMIC AREA
         LR    R2,R1                    DYNAMIC AREA ADDRESSABILITY
         USING DATD,R2                  TELL ASSEMBLER
         MVC   WTOE(WTOLEN),WTOLIST     PRIME WTO AREA
         L     R4,16                    ADDRESS OF CVT
         L     R4,0(R4)                 ADDRESS OF TCB ADDRESS WORDS
         L     R4,4(R4)                 ADDRESS OF CURRENT TCB
         L     R5,TCBRBP-TCB(R4)        ADDRESS OF CURRENT RB
RBLOOP   EQU   *
         LR    R6,R5                    R6 POINTS TO RBBASIC
         SL    R5,=F'2'                 POINT TO INT CODE RBBASIC-2
         CLC   0(2,R5),=X'0020'         SVC 32?
         BNE   RBBUMP                   NO GO TO NEXT RB
         L     R7,RBGRS1-RBBASIC(R6)    SAVE R1 - PTR TO SVC99 PLIST
         L     R5,RBLINK-RBBASIC(R6)    BUMP TO NEXT RB
         SL    R5,=F'2'                 POINT TO INT CODE RBBASIC-2
         CLC   0(2,R5),=X'0063'         SVC99
         BE    ISSVC99                  MUST BE A DYNALLOC
         B     NOTSVC99                 MUST NOT BE DYNALLOC
RBBUMP   EQU   *
         L     R5,RBLINK-RBBASIC(R6)    BUMP TO NEXT RB
         CLR   R4,R5                    IS IT THE TCB
         BE    NOTSVC99                 NOT DYNALLOC
         B     RBLOOP                   TRY NEXT RB
ISSVC99  EQU   *                        FIND DYNALLOC TEXT UNIT PTRS
         L     R4,S99RBPTR-S99RBP(R7)   POINT TO SVC99 RB
         L     R5,S99TXTPP-S99RB(R4)    POINT TO LIST OF TEXT UNIT PTRS
         LR    R6,R5                    R6 WILL POINT TO CURRENT TUP
         USING S99TUPL,R6               TELL ASSEMBLER
         LA    R10,DALUNIT              UNITNAME KEY FOR COMPARE
S99LOOP  EQU   *
         L     R7,S99TUPTR              ADDRESS OF TEXT UNIT
         USING S99TUNIT,R7              TELL ASSEMBLER
         LTR   R7,R7                    NULL PARAMETER?
         BZ    S99BUMP                  GO GET NEXT
         CH    R10,S99TUKEY             UNITNAME KEY?
         BNE   S99BUMP                  GO GET NEXT
         CLI   S99TUPAR,C'3'            GENERIC DISKS START WITH A "3"
         BE    RETURNF                  ALLOW ALLOCATION
         B     WTOIT                    GO FAIL THE ALLOCATION
S99BUMP  EQU   *
         TM    S99TUPTR,S99TUPLN        LAST TEXT UNIT POINTER?
         BO    RETURNF                  ALLOW ALLOCATION
         LA    R6,4(R6)                 BUMP TO NEXT POINTER
         B     S99LOOP
NOTSVC99 EQU   *                        FIND OUT WHAT UNITNAME IS
         L     R4,16                    ADDRESS OF CVT
         L     R4,CVTJESCT-CVTMAP(R4)   ADDRESS OF JESCT
         L     R4,JESEDT-JESCT(R4)      ADDRESS OF EDT
         L     R4,0(R4)                 ADDRESS OF NAME TABLE
         LM    R10,R11,0(R4)            LOAD # NAMES AND NAME LENGTH
         LA    R4,8(R4)                 POINT AT FIRST NAME
         L     R6,16                    ADDRESS OF CVT
         L     R6,0(R6)                 ADDRESS OF TCB ADDRESS WORDS
         L     R6,4(R6)                 ADDRESS OF CURRENT TCB
         L     R6,TCBJSCB-TCB(R6)       ADDRESS OF JSCB
         L     R6,JSCBACT-IEZJSCB(R6)   ADDRESS OF ACTIVE JSCB
         L     R6,JSCSCT-IEZJSCB(R6)    ADDRESS OF SCT
         LA    R6,16(R6)                PASS THE PREFIX
         L     R7,SCTFSIOT-INSMSCT(R6)  ADDRESS OF FIRST SIOT AAAZ
         SRL   R7,8                     SHIFT RIGHT ONE BYTE
         LA    R7,16(R7)                PASS THE PREFIX
         L     R8,SCTLSIOT-INSMSCT(R6) ADDRESS OF LAST SIOT AAAZ
         SRL   R8,8                     SHIFT RIGHT ONE BYTE
         LA    R8,16(R8)                PASS THE PREFIX
SIOTLOOP EQU   *
         L     R9,SCTPJFCB-INDMSIOT(R7) ADDRESS OF JFCB AAAZ
         SRL   R9,8                     SHIFT RIGHT ONE BYTE
         LA    R9,16(R9)                PASS THE PREFIX
         CLR   R3,R9                    RIGHT JFCB = RIGHT SIOT
         BNE   SIOTBUMP                 TRY ANOTHER
         B     NAMELOOP                 FIND ESOTERIC NAME
SIOTBUMP EQU   *
         CLR   R7,R8                    WAS THIS THE LAST ONE?
         BE    RETURNF                  YES GET OUT
         L     R7,SCTPSIOT-INDMSIOT(R7) GET NEXT SIOT ADDR AAAZ
         SRL   R7,8                     SHIFT RIGHT ONE BYTE
         LA    R7,16(R7)                PASS THE PREFIX
         B     SIOTLOOP                 TRY AGAIN
NAMELOOP EQU   *
         CLC   SIOTDEVT-INDMSIOT(4,R7),8(R4) IS THE DEVTYPE THE SAME
         BNE   NAMEBUMP                 NO GO GET NEXT ONE
         CLI   0(R4),C'3'               GENERIC DISKS START WITH A "3"
         BE    RETURNF                  ALLOW ALLOCATION
         MVC   WTOE+78(8),4(R7)         MOVE IN DDNAME
         B     WTOIT
NAMEBUMP LA    R4,0(R11,R4)             ADD LENGTH OF ENTRY
         BCT   R10,NAMELOOP             NOT FOUND, TRY AGAIN
         B     RETURNF
RETURN   SLR   R15,R15                  SET RC=0
RETURNX  RETURN (14,12),RC=(15)         RETURN TO CONTROL PROGRAM
RETURNF  L     R0,SIZDATD               DYNAMIC AREA SIZE TO R0
         LR    R1,R2                    DYNAMIC AREA ADDRESS TO R1
         FREEMAIN R,LV=(0),A=(1)        FREEMAIN DYNAMIC AREA
         B     RETURN                   ALLOW ALLOCATION
WTOIT    WTO   MF=(E,WTOE)
         L     R0,SIZDATD               DYNAMIC AREA SIZE TO R0
         LR    R1,R2                    DYNAMIC AREA ADDRESS TO R1
         FREEMAIN R,LV=(0),A=(1)        FREEMAIN DYNAMIC AREA
         LA    R15,8                    SET RETURN CODE 8
         LA    R15,0(R15)               CLEAR HI ORDER BIT
         B     RETURNX                  FAIL ALLOCATION
         DROP  R2
MAXBLKSI DC    H'6233'                  MAXIMUM BLKSIZE
         CNOP  0,4
TTAB     DC    240X'00'
         DC    C'0123456789ABCDEF'
WTOLIST  WTO   'DLXPRE00  ALLOCATION FAILED BY INSTALLATION EXIT - DCB +
               BLKSIZE TOO LARGE.          ',ROUTCDE=(11),DESC=(7),    +
               MCSFLAG=HRDCPY,MF=L
ENDWTOL  EQU   *
WTOLEN   EQU   ENDWTOL-WTOLIST
         CNOP  0,4
SIZDATD  DC    AL1(0)                   DYNAMIC AREA SIZE
         DC    AL3(ENDDATD-DATD)        END MINUS BEGINNING ADRESS
         LTORG
         EQUATE
DATD     DSECT                          DYNAMIC AREA
WTOE     WTO   'DLXPRE00  ALLOCATION FAILED BY INSTALLATION EXIT - DCB +
               BLKSIZE TOO LARGE.          ',ROUTCDE=(11),DESC=(7),    +
               MCSFLAG=HRDCPY,MF=L
ENDDATD  EQU   *
IEXPL    IECIEXPL DSECT=YES
JFCBDSCT DSECT
         IEFJFCBN
         IEFJESCT
         CVT
         IEFASIOT
         IEFASCTB
         IKJTCB
         IEZJSCB
         IHARB
         IEFZB4D0
         IEFZB4D2
         END   IGGPRE00
