IFG0194C CSECT
         PRINT DATA
*ZAP START
*ZAP CARD ++USERMOD(HG00003)
*ZAP CARD     /*  1.  BYPASS DATE PROTECTION IF AUTHORIZED */
*ZAP CARD     /*  2.  SKIP UPDATE OF DS1REFD IF YCC CRITERIA MET */
*ZAP CARD     /*  3.  SET LAST ALTERTATION DATE AND TIME IN DSCB */ .
*ZAP CARD ++VER(Z038) FMID(EDM1102) PRE(UZ26702) .
*ZAP CARD ++ZAP(IFG0194C) .
*ZAP CARD NAME IFG0194C
*ZAP CARD  EXPAND IFG0194C(208)
*
* THIS MOD COMBINES THREE FUNCTIONS, TWO OF WHICH USED TO BE PERFORMED
* BY MOD DC00001 TO IFG0196W PRIOR TO SU 60.
*
* THE FIRST FUNCTION ALLOWS ROUTINES WHICH HAVE BEEN
* GIVEN THE 'BYPASS PASSWORD PROTECTION' AUTHORIZATION IN THE
* PROGRAM PROPERTIES TABLE TO ALSO BYPASS EXPIRATION DATE CHECKING
* THE MOST DIRECT PURPOSE OF THIS IS TO SURPRESS UNNECESSARY IPL
* MESSAGES, BUT OTHER PROGRAMS, PARTICULARLY SMP, MIGHT BE GIVEN
* THIS ATTRIBUTE TO AVOID CONTINUOUS OPERATOR INTERVENTION DURING
* APPLY PHASES.
*
* THE SECOND FUNCTION CAUSES THE UPDATING OF THE FIELD DS1REFD
* IN THE FORMAT 1 DSCB OF DISK DATASETS BY SU 60 (THIS IS THE DATE
* OF LAST REFERENCE FOR THE DATASET) TO BE SUBJECTED TO THE FOLLOWING
* LIMITATIONS:
*    - USAGE INFORMATION IS NOT UPDATED FOR OPENS DONE
*      BY PROGRAMS WHOSE NAMES ARE LISTED IN THE TABLE
*      BELOW LABELLED YCCLQUIE.
*    - USAGE INFORMATION IS NOT UPDATED FOR OPENS DONE
*      UNDER THE CONTROL OF ANY JOB, JOBSTEP,
*      PROCSTEP, OR DD CARD WHOSE NAME STARTS WITH THE
*      CHARACTERS 'NOUSE'.
*    - USAGE INFORMATION IS NOT UPDATED FOR OPENS DONE
*      IN JOBS RUNNING UNDER THE 'YCCDM1' PROJECT.
*
* THE THIRD FUNCTION CAUSES A DATE AND TIME OF LAST ALTERATION TO
* BE STORED IN THE FIVE BYTES BEGINNING AT OFFSET 61 (X'3D') FROM
* THE BEGINNING (OFFSET 17 OR X'11' FROM THE START OF THE DATA
* PORTION) OF A FORMAT 1 DSCB.  THE INFORMATION IS STORED ONLY
* WHEN THE DATASET IS OPENED FOR OTHER THAN INPUT AND IS SUBJECT
* TO THE RESTRICTIONS LISTED ABOVE.  THE DATE IS IN BINARY JULIAN
* FORM AND THE TIME CONSISTS OF FOUR DECIMAL DIGITS IN THE FORM
* HHMM.
*
DAMV2410 EQU   IFG0194C+X'9D4'
DAMV2500 EQU   IFG0194C+X'A3E'
RACRTN   EQU   IFG0194C+X'E84'
PATCH    EQU   IFG0194C+X'1724'
PATCHEND EQU   IFG0194C+X'1798'+208   (208=EXPAND VALUE)
DSCUPD   EQU   IFG0194C+X'13E8'
DSCUP20  EQU   IFG0194C+X'1430'
DOCVTDTE EQU   IFG0194C+X'15F2'
         USING IFG0194C+2,R3
         USING FORCORE,R4
*ZAP START VER
*
*        VERIFY CONTENTS FOR FUNCTION 1
*
         ORG   DAMV2410
         TM    JFCBIND2-INFMJFCB(RD),JFCNEW
         BO    DAMV2500
         ORG   DAMV2500
         L     RF,RACRTN
         ORG   PATCH
         DC    X'0000000000000000'
*ZAP START REP
*
*        LET AUTHORIZED JOBSTEPS BYPASS DATE PROTECTION
*
         ORG   DAMV2410
         LA    RF,IFG0194C+X'1000'
         USING IFG0194C+X'1000',RF
         B     PATCH
         DROP  RF
RETADD   EQU   *
         ORG   PATCH
         TM    JFCBIND2-INFMJFCB(RD),JFCNEW
         BO    DAMV2500
         L     RF,PSATOLD-PSA
         L     RF,TCBJSCB-TCB(RF)
         TM    JSCBSWT1-IEZJSCB(RF),JSCBPASS
         BO    DAMV2500
         B     RETADD
PATCH2   EQU   *
*ZAP START VER
         DROP  R3
         ORG   DSCUPD
         USING WTG,RWTG
         USING IHADCB,RDCB
         USING DS1FMTID,RB
*
*        VERIFY CONTENTS FOR FUNCTIONS 2 AND 3
*
         L     R1,WTGPREFX
         STM   R2,RET,IECREGSV-IECPREFX(R1)
         LR    RBASE,RF
         USING DSCUPD,RBASE
         LA    RC,0
YCCLABEL TM    0(RPARC),PLISTOP1
         ORG   DSCUP20
         LTR   RC,RC
         ORG   DOCVTDTE
         L     R1,CVTPTR
*ZAP START REP
         ORG   YCCLABEL
*
*        PATCH IN CODE FOR FUNCTIONS 2 AND 3
*
         BAL   RET,PATCH2          CALL YCC 'FILTER'
         B     DSCUP20             +0: SKIP UPDATE
         BAL   RET,DOCVTDTE        +4: GET CVTDATE
         CLC   DS1REFD,DXWORK2+K1  DATE SAME?
         BE    PATCH3              YES, SKIP UPDATE
         MVC   DS1REFD,DXWORK2+K1  NO, UPDATE DATE
         LA    RC,K1               INDICATE CHANGE
         CLC   DS1EXPDT,DS1REFD    IS EXPDT LOWER?
         BNL   PATCH3              NO, DON'T CHANGE
         MVC   DS1EXPDT,DS1REFD    YES, SET
         B     PATCH3
         DC    0Y(X'7FFF'-DSCUP20+*) FLAGGED IF CODE TOO LONG
*
*        TEST: SHOULD DS1REFD BE UPDATED
*
         ORG   PATCH2
         USING UCBOB,RUCB
         TM    UCBJBNR,UCBVRDEV    VIO DEVICE?
         BOR   RET                 YES, DON'T UPDATE
         L     R1,PSATOLD-PSA      --> OUR TCB                  * DBC
         USING TCB,R1              DECLARE TCB BASE             YCC DBC
         LA    R0,0(,R1)           SAVE                         YCC DBC
*
*        TEST FOR JOBNAME, STEPNAME, PROCSTEPNAME, OR DDNAME    YCC DBC
*        STARTING WITH 'NOUSE'.                                 YCC DBC
*
         L     RF,TCBTIO           --> OUR TIOT                 YCC DBC
         USING TIOT1,RF            DECLARE TIOT BASE            YCC DBC
         CLC   =C'NOUSE',TIOCNJOB  QUIET WANTED (JOB LEVEL)     YCC DBC
         BER   RET                 YES, SKIP AGEING
         CLC   =C'NOUSE',TIOCSTEP  NO, WANTED AT STEP LEVEL?    YCC DBC
         BER   RET                 YES, SKIP AGEING
         CLC   =C'NOUSE',TIOCSTEP+8 NO, AT PROC LEVEL?          YCC DBC
         BER   RET                 YES, SKIP AGEING
         AH    RF,DCBTIOT          NO, --> RELATED DD ENTRY     YCC DBC
         DROP  RF                  RELEASE TIOT BASE            YCC DBC
         USING TIOENTRY,RF         DECLARE DD ENTRY BASE        YCC DBC
         CLC   =C'NOUSE',TIOEDDNM  QUIET WANTED?                YCC DBC
         BER   RET                 YES, SKIP AGEING
         DROP  RF                  NO, RELEASE DD ENTRY BASE    YCC DBC
*
*        TEST FOR PROJECT 'YCCDM1'.                             YCC DBC
*
         L     RF,TCBJSCB          --> CURRENT JSCB             YCC DBC
         L     RF,JSCBACT-IEZJSCB(,RF) --> P/P JSCB             YCC DBC
         L     RF,JSCBJCT-IEZJSCB(,RF) --> JCT                  YCC DBC
         ICM   RF,7,JCTACTAD-(INJMJCT-16)(RF) --> ACT           YCC DBC
         CLC   =C'YCCDM1',ACTPROJ-(ACTDSKAD-16)(RF) 'YCCDM1'?   YCC DBC
         BER   RET                 YES, SKIP AGEING
*
*        TEST FOR EXEMPT PROGRAM NAMES.                         YCC DBC
*
         L     R1,TCBRBP           --> CURRENT RB               YCC DBC
         DROP  R1                  RELEASE TCB BASE             YCC DBC
         USING RBBASIC,R1          DECLARE RB BASE              YCC DBC
YCCYRB   TM    RBSTAB1,RBFTSVRB    PRB?                         YCC DBC
         BNZ   YCCNPRB             NO, SKIP                     YCC DBC
         L     RF,RBCDE            YES, --> 1ST CDE             YCC DBC
         MVC   DXWORK1(8),CDNAME-CDENTRY(RF) SAVE PGM NAME?     YCC DBC
YCCNPRB  L     R1,RBLINK           CHAIN TO NEXT RB             YCC DBC
         LA    R1,0(,R1)           PURIFY                       YCC DBC
         CR    R1,R0               WAS PREV RB THE TOP RB?      YCC DBC
         BNE   YCCYRB              NO, NEED NME FROM TOP PRB    YCC DBC
         DROP  R1                  YES, RELEASE RB BASE         YCC DBC
         LA    R1,YCCLQUIE-8       --> QUIET OPEN PGM NME LIST  YCC DBC
YCCMQUIE LA    R1,8(,R1)           --> NEXT NAME IN LIST        YCC DBC
         CLI   0(R1),X'FF'         END OF LIST?                 YCC DBC
         BE    4(RET)              YES, RETURN AND INDICATE
         CLC   0(8,R1),DXWORK1     NO, TOP RB'S PGM NME IN LI?  YCC DBC
         BNE   YCCMQUIE            NOT YET; KEEP LOOKING        YCC DBC
         BR    RET                 SKIP AGEING
*
*        SET LAST ALTERATION DATE AND TIME WHEN APPROPRIATE
*
PATCH3   EQU   *
         TM    0(RPARC),PLISTOP1   IS THIS INPUT?
         BZ    DSCUP20             YES, DONE
         LA    RC,K1               NO, INDICATE UPDATE
         MVC   DS1MODD,DS1REFD     NO, SET LAST MOD DATE
         STCK  DXWORK2             GET CENTURY-CLOCK            YCC DBC
         LM    R0,R1,DXWORK2       LOAD IT                      YCC DBC
         SRDL  R0,12               ALIGN TO MICRO-SECONDS       YCC DBC
         D     R0,=F'60000000'     CNVRT TO MINUTES             YCC DBC
         SLR   R0,R0               CLEAR                        YCC DBC
         D     R0,=F'1440'         CNVRT TO DAYS + REMAINDER    YCC DBC
         SRDA  R0,32               GET TODAY'S MINUTES          YCC DBC
         D     R0,=F'60'           GET HH (R1) AND MM (R0)      YCC DBC
         MH    R1,=H'100'          DECIMAL SHIFT THE HH         YCC DBC
         ALR   R1,R0               GET COMBINED HHMM            YCC DBC
         MH    R1,=H'10'           DECIMAL SHIFT AGAIN          YCC DBC
         CVD   R1,DXWORK2          CNVRT TO DECIMAL (HHMM0S)    YCC DBC
         MVC   DS1MODT,DXWORK2+5    COPY LAST-MOD HHMM          YCC DBC
         B     DSCUP20             RETURN TO MAINLINE
         LTORG
YCCLQUIE DC    CL8'ADSYU000'       QUIET OPEN PROGRAM NAMES     YCC DBC
         DC    CL8'MAPDISK'                                     YCC DBC
         DC    CL8'DMSREST'                                     YCC JSA
         DC    (3*8)X'FF'
         DC    X'FF'               TERMINATOR
         DC    0Y(X'7FFF'-PATCHEND+*)  FLAGGED IF TOO LONG
*ZAP CARD  IDRDATA HG00003
*ZAP STOP
         PRINT NOGEN
         IECEQU  AOS=YES,IEZDEB=YES
         IECDSECS MAIN,JSCB,TCB,PSA,WTG,DCB,DSCB1,PREFX,CVT,TIOT,RB,   *
               UCB,CDE,EXPAND=YES
JCT      DSECT
         IEFAJCTB
ACTPROJ  EQU   ACTJNFLD+2,6
         END
