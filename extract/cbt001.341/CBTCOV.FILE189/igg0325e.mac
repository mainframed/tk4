* PUTS PROJECT ID IN F1 DSCB ON ALLOCATION OF DISK DS VS2 R2
* ANOTHER YCC ACCOUNTING MOD
IGG0325E CSECT
* IMPORTANT ADDRESSES ARE:
ADDR1    EQU   IGG0325E+X'15E'  THE OVERLAYED INSTRUCTION
ADDR2    EQU   IGG0325E+X'448'  THE PATCH AREA
PATCHEND EQU   ADDR2+200           SET ACCORDING TO EXPAND VAL  JSA
         PRINT NOGEN
*ZAP CARD ++USERMOD(HG00001)
*ZAP CARD    /*
*ZAP CARD THIS MODIFICATION IMPLIMENTS THE PACKED PROJECT ID IN
*ZAP CARD FORMAT 1 DSCB'S FOR NON-ISAM DATASETS. IT DOES NOT CHANGE
*ZAP CARD PARTIAL DSCB'S PRESENTED BY IEHMOVE, SO PROJECT INFO
*ZAP CARD IS MOVED OR COPIED. */ .
*ZAP CARD ++VER(Z038) FMID(EDM1102).
*ZAP CARD ++ZAP(IGG0325E) .
*ZAP CARD    EXPAND IGG0325E(200)  SET SAME NUMBER ON PATCHEND DEF. JSA
*ZAP CARD NAME IGG0325E
*ZAP START
* THIS MODIFICATION IMPLIMENTS THE PACKED PROJECT ID IN
* FORMAT 1 DSCB'S FOR NON-ISAM DATASETS. IT DOES NOT CHANGE
* PARTIAL DSCB'S PRESENTED BY IEHMOVE, SO PROJECT INFO
* IS MOVED OR COPIED.
* SYSTEM: OS VS2 R3.0
* REGISTER USAGE: 0,1, AND 15 ARE SAVED,USED,AND RESTORED
* THE DSNAME FIELD IN THE DSCB IS USED AS A SAVE AREA. IT
*  WILL BE CLOBBERED ANYWAY IN THE NEXT DOZEN INSTRUCTIONS.
* USES TCB,JSCB,AND JCT MAPPING MACROS.
*ZAP PAUSE
         EQUREGS
         BALR  R12,0
*ZAP START
         USING IGG0325E+2,12
*ZAP PAUSE
         L     13,=V(WKAREA)
*ZAP START
         USING WKAREA,R13
*ZAP PAUSE
         B     BRANCH
         ORG   ADDR1
*ZAP START VER
         MVC   SYSAREA,IGG0325E+X'3BC'
*ZAP PAUSE
         ORG   ADDR2
*ZAP START VER
         DC    X'0000000000000000'
*ZAP PAUSE
         ORG   ADDR1
*ZAP START REP
BRANCH   B     PATCH
         NOPR  0
RTN      EQU   *
*ZAP PAUSE
         ABEND 77
         ORG   ADDR2
*ZAP START
PATCH    EQU   *
         STM   15,1,SAVEAREA
         XC    SYSAREA,SYSAREA  ZERO MOST OF FIELD
         MVI   PROJFLD,C' '   MUST HASK 8 CHAR PROJECT WITH TRAILING
         MVC   PROJFLD+1(7),PROJFLD     BLANKS
         L     R15,16          CHAIN CVT>TCB>JSCB>JCT
         L     R15,R0(R15)
         L     R15,R0(R15)
         USING TCB,R15
         L     R15,TCBJSCB
         USING IEZJSCB,R15
* DURING INITIATION, THE JSCB POINTED TO BY THE TCB IS THE JSCB
* OF THE INITIATOR. THE JSCBACT (ACTIVE JSCB) FIELD OF THE INITATOR
* JSCB POINTS TO THE JSCB OF THE ABOUT TO BE INITIATED JOB STEP,
* WHICH CONTAINS THE INFORMATION WE NEED. DURING EXECUTION, DYNAMIC
* ALLOCATION WILL FIND THAT THE JSCBACT FIELD OF THE PROBLEM JSCB
* POINTS BACK TO ITSELF, SO THE FOLLOWING INSTRUCTION IS ALWAYS VALID.
         L     R15,JSCBACT    GET ACTIVE JSCB
         L     R15,JSCBJCT
         USING JCT,R15         PROJECT ID IS IN ACT FIELDS OF JCT
         ICM   R15,B'0111',JCTACTAD
         USING ACTDSKAD-16,R15
         SR    R1,R1               CLEAR FOR IC                 JSA
         ICM   R1,1,PROJLEN        GET LENGTH                   JSA
         BZ    NOPROJ              DON'T PROCESS IF ZERO        JSA
         CH    R1,HFWD8            TEST FOR MAX                 JSA
         BNH   USEPROJ             OK                           JSA
         LA    R1,8                OTHERWISE, TRUNCATE          JSA
USEPROJ  BCTR  R1,0                                             JSA
         MVC   PROJFLD(0),PROJCHR  (EXECUTED)                   JSA
         EX    R1,*-6                                           JSA
NOPROJ   EQU   *                                                JSA
* HASH PROJECT
         SR    R0,R0
         L     R1,PROJFLD
         M     R0,PROJFLD+4
         LR    R15,R0
         LA    R15,37(R15)      HASH IS HELD IN R15 FOR A WHILE
* CRUSH PROJECT
         ICM   R0,B'0001',PROJFLD+3
         ICM   R1,B'0001',PROJFLD+7
         SLDL  R0,2
         ICM   R0,B'0010',PROJFLD+2
         ICM   R1,B'0010',PROJFLD+6
         SLDL  R0,2
         ICM   R0,B'0100',PROJFLD+1
         ICM   R1,B'0100',PROJFLD+5
         SLDL  R0,2
         ICM   R0,B'1000',PROJFLD
         ICM   R1,B'1000',PROJFLD+4
         SLDL  R0,2
         STCM  R0,B'1110',PACKED
         ST    R1,PACKED+3
         STC   R15,HASH
RTNR     LM    15,1,SAVEAREA
         B     RTN
HFWD8    DC    H'8'
ZED      DC    XL4'00000000'
*ZAP CARD  IDRDATA HG00001
*ZAP STOP
         DS    0XL(PATCHEND+1-*)   FLAGGED IF PATCH TOO LONG    JSA
WKAREA   CSECT
         ORG   WKAREA+X'C0'
SAVEAREA DS    3A             OVERLAYS DSNAME FIELD IN DSCB
         ORG   WKAREA+X'FE'
SYSAREA  DS    0CL13
         DS    CL4
PROJFLD  DS    0CL8
HASH     DS    CL1
PACKED   DS    CL6
         DS    CL1
         IKJTCB
         IEZJSCB
JCT      DSECT
         DS    CL16
         IEFAJCTB
PROJLEN  EQU   ACTJNFLD+1
PROJCHR  EQU   ACTJNFLD+2
         END   IGG0325E
