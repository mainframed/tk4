         PRINT NOGEN
REPOS    QSTART 'QUEUE COMMAND - DATASET REPOSITIONING ROUTINES'
         USING QCKPT,R10      BASE REG FOR CKPT WORK AREA
         L     R10,QVCKPT     LOAD BASE REG
         USING QDISPLAY,R9    BASE REG FOR DISPLAY WORK AREA
         L     R9,QVDSPL      LOAD BASE REG
         USING WORK,R13       BASE REG FOR LOCAL WORK AREA
***********************************************************************
*                                                                     *
*   BRANCH TO PROPER ROUTINE                                          *
*                                                                     *
***********************************************************************
CHKID    CLC   QPDSID,=H'0'   IS THERE A VALID DATASET?
         BNE   GO             YES. GO AHEAD.
         QTILT '*** YOU ARE NOT PROCESSING A VALID DATASET ***'
GO       LH    R1,QCODEH      LOAD FUNCTION CODE
         CH    R1,=H'32'      IS THE FUNCTION SUPPORTED?
         BH    STOP           NO. RETURN.
         B     *+4(R1)        BRANCH TO ROUTINE
         B     TILT           0 OFFSET
         B     FIND           4
         B     FINDTIME       8
         B     COLUMN         12
         B     AT             16
         B     PLUS           20
         B     MINUS          24
         B     TOP            28
         B     BOTTOM         32
TILT     QTILT '*** PARAMETER IS INVALID OR OMITTED ***'
***********************************************************************
*                                                                     *
*   REPOSITION VERTICALLY                                             *
*                                                                     *
***********************************************************************
* SKIP FORWARD
PLUS     CLI   QPARM1,C' '    DEFAULT NEEDED
         BNE   PLUS010        NO
         MVI   QLNG1+1,X'01'  YES, SET LENGTH OF PARM
         MVI   QPARM1,X'F1'   SET DEFAULT TO 1
PLUS010  BAL   R4,NUMERIC     VALIDATE PARAMETER
         AP    QPREC,COUNT    ADD COUNT TO CURRENT RECORD
         B     RESUME         CALL LISTDS
* SKIP BACKWARD
MINUS    CLI   QPARM1,C' '    DEFAULT NEEDED
         BNE   MINUS010       NO
         MVI   QLNG1+1,X'01'  YES, SET LENGTH OF PARM
         MVI   QPARM1,X'F1'   SET DEFAULT TO 1
MINUS010 BAL   R4,NUMERIC     VALIDATE PARAMETER
         SP    QPREC,COUNT    SUBTRACT COUNT FROM CURRENT RECORD
         BP    RESUME         CALL LISTDS IF RESULT POSITIVE.
* TOP OF DATASET
TOP      ZAP   QPREC,=P'1'    SET CURRENT RECORD TO TOP OF DS
* RESUME AT CURRENT RECORD
RESUME   L     R15,=V(LISTDS) ADDR OF LISTDS MODULE
         BALR  R14,R15        GO TO IT
STOP     QSTOP
* BOTTOM OF DATASET
BOTTOM   ZAP   QPREC,=P'9999999' SET CURRENT RECORD TO LARGEST
         B     RESUME         CALL LISTDS
* POSITION TO THIS RECORD
AT       BAL   R4,NUMERIC     VALIDATE PARAMETER
         ZAP   QPREC,COUNT    INDICATE REPOSITION NO
         B     RESUME         CALL LISTDS
* CHECK THE PARMETER FOR VALID NUMERIC AND PACK IT
NUMERIC  LH    R2,QLNG1       LENGTH OF PARM
         SH    R2,=H'1'       IS THE COUNT FIELD ZERO?
         BM    RESUME         YES. RESUME FROM CURRENT POSITION.
         MVC   QFZONES,QFZONE INITIALIZE NUMERIC CHECK
         EX    R2,MVZ         MOVE THE ZONES FOR VALIDITY CHECK
         CLC   QFZONES,QFZONE IS THE FIELD NUMERIC?
         BNE   TILT           NO. TILT.
         EX    R2,PACK        PACK THE FIELD INTO COUNT
         CLI   QSUBNAME,C'P'  ?/PAGE FORWARD/BACKWARD SPECIFIED
         BE    FOUNDP         YES. GO PROCESS
         CLI   QSUBNAME,C'H'  ?/HALF PAGE FORWARD/BACKWARD SPECIFIED
         BNE   NEXIT          NO. GO TO EXIT
         MP    COUNT,=P'11'   YES. MULTIPLY BY HALF-PAGE SIZE(11)
         B     NEXIT
FOUNDP   MP    COUNT,=P'21'   YES. MULTIPLY BY PAGE SIZE(21)
NEXIT    BR    R4             RETURN
* EXECUTED INSTRUCTIONS
MVZ      MVZ   QFZONES(1),QPARM1 CHECK FOR NUMERIC
PACK     PACK  COUNT,QPARM1(1) PACK COUNT
***********************************************************************
*                                                                     *
*   REPOSITION HORIZONTALLY                                           *
*                                                                     *
***********************************************************************
COLUMN   CLI   QPARM1,C' '    ?/DEFAULT NEEDED
         BE    COL010         YES, GO SET IT
         CLI   QPARM1,C'0'    ?/SET COLUMN TO 1
         BNE   COL020         NO, TEST IF NUMERIC
COL010   MVI   QLNG1+1,X'01'  SET LENGTH OF PARM
         MVI   QPARM1,X'F1'   SET COLUMN TO 1
COL020   BAL   R4,NUMERIC     VALIDATE PARAMETER
         CP    COUNT,=P'255'  IS THE COUNT FIELD TOO BIG?
         BH    TILT           YES. TILT.
         SP    COUNT,=P'1'    COLUMN RELATIVE TO ZERO
         BM    TILT           INVALID. TILT.
         CVB   R5,COUNT       CONVERT TO BINARY
         STH   R5,QPOFFSET    STORE IN QPOFFSET
         B     RESUME         CALL LISTDS
***********************************************************************
*                                                                     *
*   LOCATE SPECIFIC RECORD                                            *
*                                                                     *
***********************************************************************
FIND     CLI   QSUBNAME+1,C'A' IS THE REQUEST FOR FIND ALL?
         BE    FIND2          YES. DO NOT UPDATE RECORD POINTER.
         AP    QPREC,=P'1'    START SEARCH AT NEXT RECORD
FIND2    CLI   QPARM1,C' '    IS THERE A PARAMETER?
         BE    RESUME         NO. CONTINUE WITH PREVIOUS FIND.
         LA    R2,QDREPLY+62  END OF USER REPLY
         LA    R3,61          MAXIMUM LENGTH OF PARM
         SH    R3,QOFF1       OFFSET TO FIRST PARM
LOOP     CLC   0(1,R2),QPARM1 IS THIS THE DELIMITER?
         BE    FOUND          YES. CONTINUE.
         BCTR  R2,0           TRY THE PREVIOUS BYTE
         BCT   R3,LOOP        IS THE LENGTH FIELD EXHAUSTED?
         B     TILT           YES. TILT.
FOUND    BCTR  R3,0           DECREMENT LENGTH BY 1
         LA    R2,QDREPLY+1   ADDR OF REPLY + 1
         AH    R2,QOFF1       ADDR OF FIRST BYTE OF PARM
         EX    R3,MVC         MOVE PARM TO QPFIND
         STH   R3,QPLNG       SAVE LENGTH-1 OF PARM
         B     COLTEST        TEST IF COLUMN KEYWORD IS PRESENT
MVC      MVC   QPFIND(1),0(R2) MOVE PARM TO QPFIND
***********************************************************************
*                                                                     *
*    COLUMN RANGE FOR FIND                                            *
*                                                                     *
***********************************************************************
COLTEST  XC    QOFFS,QOFFS    RESET COLUMN OFFSETS
         XC    QOFFE,QOFFE
         LA    R2,3(R2,R3)    PREPARE FOR NEXT FIELD
         LA    R3,QDREPLY+55  END OF USER REPLY
LOOP1    CLC   0(3,R2),=CL3'COL'  ?/COLUMN PARAMETER
         BE    FOUNDA         YES. GO PROCESS
         LA    R2,1(R2)       NO. LOOK AT NEXT FIELD
         CR    R2,R3          ?/END OF REPLY
         BH    RESUME         YES. EXIT
         B     LOOP1          NO. CHECK AGAIN
FOUNDA   LA    R2,3(R2)       NEXT FIELD
         CLI   0(R2),C'('     ?/LP PRESENT
         BNE   PRESUME        NO. EXIT
         LA    R2,1(R2)       NEXT FIELD
         LA    R3,QDREPLY+62  END OF REPLY
         LR    R5,R2          SAVE START OF THIS FIELD
         MVI   QDELIMIT,C','  LOOKING FOR DELIMETER = ','
         BAL   R7,CHKDEL      GO CHECK THE DELIMETER
         CVB   R6,COUNT       CONVERT START COLUMN OFFSET TO BINARY
         LTR   R6,R6          ?/USER SPECIFY OFFSET OF ZERO
         BZ    PRESUME        YES. GO INDICATE AN ERROR
         BCTR  R6,0           DECREMENT OFFSET BY 1
         STH   R6,QOFFS       SAVE START COLUMN
         LA    R2,1(R2)       NEXT FIELD
         LR    R5,R2          SAVE START OF THIS FIELD
         MVI   QDELIMIT,C')'  LOOKING FOR DELIMETER = ')'
         BAL   R7,CHKDEL      GO CHECK THE DELIMETER
         CVB   R6,COUNT       CONVERT END COLUMN OFFSET TO BINARY
         LTR   R6,R6          ?/USER SPECIFY OFFSET OF ZERO
         BZ    PRESUME        YES. GO INDICATE AN ERROR
         BCTR  R6,0           DECREMENT OFFSET BY 1
         STH   R6,QOFFE       SAVE END COLUMN
         CLC   QOFFS,QOFFE    ?/ERROR IN COLUMN SPECIFICATION
         BNL   PRESUME        YES. DISREGARD COLUMN SEARCH
         B     RESUME         NO. CONTINUE WITH NORMAL PROCESSING
CHKDEL   CLC   0(1,R2),QDELIMIT ?/DELIMITER FOUND
         BE    CHK010         YES. GO PROCESS
         LA    R2,1(R2)       NO. LOOK AT NEXT FIELD
         CR    R2,R3          ?/END OF REPLY
         BH    PRESUME        YES. EXIT
         B     CHKDEL         NO. CHECK AGAIN
CHK010   LR    R4,R2          SAVE DELIMITER ADDRESS
         SR    R4,R5          LENGTH OF SUB-PARM
         CH    R4,=H'3'       ?/LENGTH TO LONG
         BNL   PRESUME        YES. DISREGARD COLUMN SEARCH
         BCTR  R4,0           LENGTH FOR EXEC INTRUCTION
         MVC   QFZONES,QFZONE  NUMERIC TEST
         EX    R4,MVZ1
         CLC   QFZONES,QFZONE ?/FIELD NUMERIC
         BNE   TILT           NO. EXIT WITH ERROR MESSAGE
         EX    R4,PACK1
         BR    R7
PRESUME  XC    QOFFS,QOFFS    DISREGARD FIND
         XC    QOFFE,QOFFE       BY COLUMN RANGE
         QTILT ' *** ERROR IN COLUMN SPECIFICATION ***'
MVZ1     MVZ   QFZONES(1),0(R5)
PACK1    PACK  COUNT,0(1,R5)
***********************************************************************
*                                                                     *
*   REPOSITION IN SYSLOG DATASET BY TIME OF DAY                       *
*                                                                     *
***********************************************************************
FINDTIME CLI   QPARM1,C' '    IS THE PARM OMITTED?
         BE    TILT           YES. TILT.
         B     RESUME         CALL LISTDS
***********************************************************************
*                                                                     *
*   MISCELLANY                                                        *
*                                                                     *
***********************************************************************
         LTORG
         QCOMMON
WORK     DSECT
         DS    CL72
COUNT    DS    D
         END
