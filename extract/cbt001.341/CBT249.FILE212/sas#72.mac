*-------------------------------------------------------------------*
×   SMF DATA REDUCTION IN AN MVS/RMF II ENVIRONMENT                 ×
×                                                                   ×
×   THE PURPOSE OF THIS JOB IS TO UTILIZE SAS TO ACCOMPLISH         ×
×   PERFORMANCE GROUP ANALYSIS OF DATA CONTAINED WITHIN THE         ×
×   RMF TYPE 72 RECORDS.                                            ×
×                                                                   ×
×   THIS PROGRAM IS CURRENTLY RUNNING IN AN RMF II, MVS-MP          ×
×   ENVIRONMENT AND CONTAINS SOME CPU-DEPENDENT CODE.               ×
×                                                                   ×
×  THE FOLLOWING REFLECTS LINES OF CODE THAT WARRANT CONSIDERATION  ×
×  BEFORE USING THIS PROGRAM:                                       ×
×                                                                   ×
×  LINES 5700,5800        USED TO IDENTIFY DIFFERENT CPUS           ×
×  LINES 6410,6420        USED TO IDENTIFY DIFFERENT CPUS           ×
×  LINE  6910             USED TO IDENTIFY DIFFERENT CPUS           ×
×  LINES 6000,6100        RMF SERVICE FACTORS FOR A 165             ×
×  LINES 6940,6950        RMF SERVICE FACTORS FOR A 165             ×
×  LINE 6100              .0080 IS CPU FACTOR FOR A 165             ×
×  LINE 6940              .0080 IS CPU FACTOR FOR A 165             ×
×  LINES 6500,6600        RMF SERVICE FACTORS FOR A 168             ×
×  LINES 6993,6994        RMF SERVICE FACTORS FOR A 168             ×
×  LINE 6500              .0066 IS CPU FACTOR FOR A 168             ×
×  LINE 6993              .0066 IS CPU FACTOR FOR A 168             ×
×  LINE 6500              1.25 IS TO CORRECT CPU TIME TO 165 BASE   ×
×  LINE 6993              1.25 IS TO CORRECT CPU TIME TO 165 BASE   ×
×                                                                   ×
×   IT IS STRONGLY SUGGESTED THAT ONE HAVE A THOROUGH UNDERSTANDING ×
×   OF THE PROGRAM BEFORE UTILIZING IT.  BECAUSE EACH INSTALLATION  ×
×   POSSESSES ITS OWN UNIQUE REQUIREMENTS, THIS PROGRAM IS PRIMARILY×
×   INTENDED TO DEMONSTRATE THE FLEXIBILITY AND CAPABILITY OF SAS   ×
×   IN THE ANALYSIS OF SMF DATA. RATHER THAN BEING UTILIZED IN ITS  ×
×   CURRENT FORM, IT BEST SERVES AS A STARTING POINT FOR THE        ×
×   DEVELOPMENT OF FACILITIES THAT BEST SUIT THE INDIVIDUAL         ×
×   INSTALLATION                                                    ×
×                                                                   ×
×   KENNETH C. TUCKER                                               ×
×   UNION CARBIDE CORPORATION                                       ×
×   P.O. BOX 8361                                                   ×
×   SOUTH CHARLESTON, W VA. 25303                                   ×
×                                                                   ×
*-------------------------------------------------------------------*
;
   MACRO INPUTIT
   DATA
        SAS.T72 (KEEP=PGNUM CPUID TIME_REC SMF72A_S SMF72SER SMF72M_S
                      SMF72MTS SMF72ITS SMF72CTS SMF72T_S TCB_SEC
                      SMF72IO JDATE)
        ;
   INFILE SMF LENGTH=L;
   INPUT @2 ID PIB1. @;
   IF ID = 72 THEN LINK X72;
   RETURN;
X72:
INPUT @3 T1 PIB4.
      @11 CPUID $4. @;
POINTER = 15;
INPUT @ POINTER
                 COM_SIZE PIB2.
                 TIME_REC PD4.
                 JDATE PD4.
                 DURATION PD4.3
              +2 PGNUM PIB2.
                 @;
POINTER = POINTER + COM_SIZE;
INPUT @ POINTER
                 WC_SIZE PIB2.
                 NO_PG PIB2.
                 PG_SIZE PIB2.
              +2 IPS $8.
                 @;
POINTER = POINTER + WC_SIZE;
PERIOD = 1;
_72_1:
INPUT @ POINTER
                 SMF72TTX PIB4.
                 SMF72ACT PIB4.
                 SMF72SER PIB4.
                 SMF72TTM PIB4.
                 SMF72LEV PIB4.
                 SMF72MTS PIB4.
                 SMF72ITS PIB4.
                 SMF72CTS PIB4.
                 SMF72TAT PIB4.
                 SMF72SPP PIB4.
                 @;
   IF SMF72ACT=0 THEN GO TO _72_3;
   SMF72A_S=SMF72ACT*1024/1000000;
   SMF72M_S=SMF72TTM*1024/1000000;
   SMF72T_S=SMF72TAT*1024/1000000;
   IF CPUID NE '365B' AND
      CPUID NE '365F'
      THEN GO TO SYS368Z;
   TCB_SEC=(SMF72CTS/3.8)*.0080;
   SMF72IO=SMF72ITS/7.0;
   OUTPUT SAS.T72;
   GO TO _72_3;
SYS368Z:
   IF CPUID NE '368X' AND
      CPUID NE '368Z'
      THEN GO TO SYS465E;
   TCB_SEC=(SMF72CTS/1.9)*.0066*1.25; * ALSO 1.25 FACTOR TO 165 BASE;
   SMF72IO=SMF72ITS/5.0;
   OUTPUT SAS.T72;
   GO TO _72_3;
SYS465E:
   IF CPUID NE '465E'
      THEN GO TO SYS468Y;
   TCB_SEC=(SMF72CTS/10.)*.0080;
   SMF72IO=SMF72ITS/5.0;
   OUTPUT SAS.T72;
   GO TO _72_3;
SYS468Y:
   TCB_SEC=(SMF72CTS/10.)*.0066*1.25; * ALSO 1.25 FACTOR TO 165 BASE;
   SMF72IO=SMF72ITS/5.0;
   OUTPUT SAS.T72;
_72_3:
IF NO_PG = PERIOD THEN RETURN;
PERIOD = PERIOD + 1;
POINTER = POINTER + PG_SIZE;
GO TO _72_1;
   PROC SORT DATA=SAS.T72; BY CPUID PGNUM;
   %
   INPUTIT;
DATA D;
INPUT CARD $CHAR72.;
CARDS4;
TERM           DEFINITION

JDATE          JULIAN DATE OF RECORD
SMF72ACT       ACTIVE TRANSACTION TIME IN 1024-MICROSECOND UNITS
SMF72A_S       ACTIVE TRANSACTION TIME, IN SECONDS
SMF72SER       SERVICE USED, IN SERVICE UNITS
SMF72TTM       ELAPSED TIME ACCUMULATED, IN 1024-MICROSECOND UNITS
SMF72M_S       ELAPSED TIME ACCUMULATED, IN SECONDS
SMF72MTS       MAIN STORAGE TOTAL SERVICE UNITS
SMF72ITS       I/O TOTAL SERVICE UNITS
SMF72CTS       CPUT TOTAL SERVICE UNITS
SMF72TAT       TRANSACTION RESIDENCY TIME, IN 1024-MICROSECOND UNITS
SMF72T_S       TRANSACTION RESIDENCY TIME, IN SECONDS
TCB_SEC        TOTAL TCB TIME FACTORED TO 165 BASE, IN SECONDS
SMF72IO        TOTAL I/O COUNT
;;;;
   PROC PRINT;
   ID CARD;
TITLE1 LIST OF TERMINOLOGY;
   PROC MEANS DATA=SAS.T72; BY CPUID PGNUM;
   VARIABLES SMF72A_S SMF72SER SMF72M_S
             SMF72MTS SMF72ITS SMF72CTS SMF72T_S
             TCB_SEC SMF72IO;
   OUTPUT OUT=A N=NUMRECS SUM= SMF72A_S SMF72SER SMF72M_S
                               SMF72MTS SMF72ITS SMF72CTS SMF72T_S
                               TCB_SEC SMF72IO;
TITLE1 RMF PERFORMANCE GROUP STATISTICAL EVALUATION REPORT - DETAIL;
   PROC MEANS DATA=SAS.T72; BY CPUID;
   VARIABLES SMF72A_S SMF72SER SMF72M_S
             SMF72MTS SMF72ITS SMF72CTS SMF72T_S
             TCB_SEC SMF72IO;
   OUTPUT OUT=B N=NUMRECS SUM= SMF72A_S SMF72SER SMF72M_S
                               SMF72MTS SMF72ITS SMF72CTS SMF72T_S
                               TCB_SEC SMF72IO;
TITLE1 RMF PERFORMANCE GROUP STATISTICAL EVALUATION REPORT - SUMMARY;
   DATA C; SET A B;
   IF PGNUM=. THEN PGNUM=9999;
   PROC SORT; BY CPUID PGNUM;
   PROC PRINT PAGE; BY CPUID; ID PGNUM;
        VARIABLES  SMF72A_S SMF72SER SMF72M_S
                   SMF72MTS SMF72ITS SMF72CTS SMF72T_S
                   TCB_SEC SMF72IO;
   FORMAT TCB_SEC 10.;
TITLE1 RMF PERFORMANCE GROUP SUMMARY REPORT BY CPU;
   DATA D; SET A B;
   IF PGNUM=. THEN PGNUM=9999;
   PROC SORT DATA=D; BY PGNUM;
   PROC MEANS NOPRINT DATA=D; BY PGNUM;
   VARIABLES SMF72A_S SMF72SER SMF72M_S
             SMF72MTS SMF72ITS SMF72CTS SMF72T_S
             TCB_SEC SMF72IO;
   OUTPUT OUT=E N=NUMRECS SUM= SMF72A_S SMF72SER SMF72M_S
                               SMF72MTS SMF72ITS SMF72CTS SMF72T_S
                               TCB_SEC SMF72IO;
   PROC PRINT; ID PGNUM;
        VARIABLES  SMF72A_S SMF72SER SMF72M_S
                   SMF72MTS SMF72ITS SMF72CTS SMF72T_S
                   TCB_SEC SMF72IO;
   FORMAT TCB_SEC 10.;
TITLE1 RMF PERFORMANCE GROUP SUMMARY REPORT - TOTAL;
