UTIL     TITLE 'ICSA DISK UTILITY -- 28 JUNE 1974'
*
*
*** MACROS ***
*
         MACRO
&L       MSG   &R,&M
         LCLA  &N
&N       SETA  K'&M-3
&L       DC    AL1(&R.,&N),C&M
         MEND
*
         MACRO
&L       DIAG  &M,&B
&L       BAL   XRTN,DIAG
         DC    AL2(&M.-MESSGS,&B.-START)
         MEND
*
         MACRO
&L       CMD   &M
         LCLA  &N
&N       SETA  K'&M-3
&L       DC    AL1(&N),C&M
         MEND
*
*** REGISTERS ***
*
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
XRTN     EQU   2
XLL      EQU   3
XW1      EQU   4
XW2      EQU   5
XW3      EQU   6
XW4      EQU   7
XW5      EQU   8
XW6      EQU   9
XB1      EQU   10
XB2      EQU   11
XB3      EQU   12
XSV      EQU   13
*
SPACE1   EQU   1                           PRINTER CONTROL CHARS
SPACE2   EQU   2
PAGE     EQU   4
         EJECT
*
*** STARTUP ROUTINE ***
*
UTILITY  CSECT
START    STM   R14,R12,12(R13)
         LR    XW1,XSV
         USING START,15
         LM    XB1,XB3,BASES
         DROP  15
         USING START,XB1,XB2,XB3
         LA    XSV,OSSAVE
         ST    XSV,8(0,XW1)
         ST    XW1,4(0,XSV)
         OPEN  (INDCB,(INPUT),OUTDCB,(OUTPUT))
         TIME  DEC
         ST    R1,NUMBUF
         MVC   PGHDDT(7),=X'4021204B202020'
         ED    PGHDDT(7),NUMBUF+1
         ST    R0,NUMBUF
         MVC   PGHDTM(9),=X'4021207A20207A2020'
         ED    PGHDTM(9),NUMBUF
         MVI   PRTBFC,C' '
         MVC   PRTBFN(LINESZ),PRTBFC
         MVI   SPACESW,PAGE
         BAL   XRTN,PRINTA              PRINT THE PAGE HEADER
         GETMAIN R,LV=100*10      GET SPACE FOR TABLE         *RS79.124
         ST    R1,UCBTABLE        SAVE LOCATION OF TABLE      *RS79.124
         LR    R3,R1                                          *RS79.124
         LA    R6,2(,R3)                                      *RS79.124
         LR    R4,R3                                          *RS79.124
         SR    R5,R5                                          *RS79.124
         L     R2,16              FIND CVT                    *RS79.124
         L     R2,40(,R2)         FIND UCB TABLE              *RS79.124
ULOOP    LH    R3,0(,R2)          GET UCB ADDRESS             *RS79.124
         LTR   R3,R3              SKIP ZERO ENTRIES           *RS79.124
         BZ    EULOOP                                         *RS79.124
         CLI   18(R3),X'20'       IS THIS A DASD?             *RS79.124
         BNE   EULOOP             NO, SKIP THIS UCB           *RS79.124
         LR    R7,R6
         LTR   R5,R5              IS THIS THE FIRST TIME?     *RS79.124
         BZ    FIRST              YES, SKIP DUPLICATE LOOK    *RS79.124
         LR    R8,R5                                          *RS79.124
OLDLOOP  CLC   0(6,R7),28(R3)     HAVE WE SEEN THIS VOL?      *RS79.124
         BE    EULOOP             YES, DONT ADD IT AGAIN      *RS79.124
         LA    R7,10(,R7)                                     *RS79.128
         BCT   R8,OLDLOOP         LOOK THROUGH WHOLE TABLE    *RS79.124
FIRST    MVC   6(4,R7),16(R3)     BEFORE INSERTING            *RS79.124
         MVC   0(6,R7),28(R3)     VOLSER AND UCBTYP           *RS79.124
         LA    R5,1(,R5)          INCREMENT VOLUME COUNT      *RS79.124
EULOOP   LA    R2,2(,R2)          NEXT UCB ADDRESS            *RS79.124
         CLC   0(2,R2),=X'FFFF'   END OF LIST                 *79.124
         BNE   ULOOP              NO, CONTINUE                *RS79.124
         STH   R5,0(,R4)          YES, SAVE COUNT             *RS79.124
START1   MVI   DEFSW,X'01'
         MVC   DEFLEN(2),=AL2(VOLNO*18+3)                     *AB78.129
         MVC   DEFVOL(VOLNO*12+2),PUBVOL
         B     CCMNXT
BASES    DC    A(START,START+4096,START+8192)
NUMBUF   DS    D
OSSAVE   DS    18F
UCBTABLE DS    A         ADDRESS OF VOLSER/UCBTYP TABLE       *RS79.124
RETCODE  DC    H'0'
RETCODE1 DC    H'0'
RETCODE2 DC    H'0'
*
*** TERMINATION ROUTINE ***
*
STOP     LH    XW1,RETCODE
         LTR   XW1,XW1
         BZ    STOPA
         MVI   SPACESW,SPACE2              SET TO DOUBLE SPACE FOR MSG
         MVC   PRTBFN(58),=CL58'*** ERRORS OCCURED IN PROCESSING, HIGHEX
               ST RETURN CODE WAS'
         MVC   PRTBFN+59(3),=XL3'202021'   MOVE IN THE EDIT CODE
         CVD   XW1,NUMBUF          GET THE RETURN CODE IN PACKED DEC
         ED    PRTBFN+58(4),NUMBUF+6   EDIT THE NUMBER IN
         BAL   XRTN,PRINTA
STOPA    CLOSE (INDCB,,OUTDCB)
         LR    R15,XW1
         L     XSV,4(0,XSV)
         LM    R2,R12,28(XSV)
         L     R14,12(XSV)
         BR    R14
         EJECT
*
*** PRINT A LINE ***
*
PRINT    AP    LINENO(2),=P'1'
         MVC   PRTBFN(3),=X'202020'
         ED    PRTBFC(4),LINENO
PRINTA   ST    XRTN,PRINTSV
         L     R2,LINECT
         CLI   SPACESW,PAGE
         BE    PRTNPG
         CLI   SPACESW,SPACE1
         BNE   PRINTC
         MVI   PRTBFC,C'0'
PRINTB   BCT   R2,PRTNSP
         B     PRTNPG
PRINTC   CLI   SPACESW,SPACE2
         BNE   PRTNSP
         MVI   PRTBFC,C'-'
         BCT   R2,PRINTB
         B     PRTNPG
PRTNSP   BCT   R2,PRTABF
PRTNPG   MVC   PGHDPG#(3),=X'202021'
         AP    PAGENO(2),=P'1'
         ED    PGHDPG#-1(4),PAGENO
         PUT   OUTDCB,PGHEAD
         MVI   PRTBFC,C'0'
         LA    R2,PAGESZ
PRTABF   ST    R2,LINECT
         PUT   OUTDCB,PRTBFC
         MVI   PRTBFC,C' '
         MVC   PRTBFN(LINESZ),PRTBFC
         MVI   SPACESW,0
         L     XRTN,PRINTSV
         BR    XRTN
*
*** PRINT WORKAREA ***
*
PRINTSV  DS    A
PRINTSZ  EQU   121
PRTBFC   DS    CL1
PRTBFN   DS    CL5
PRTBUF   DS    (PRINTSZ-6)C
PRTBUFE  EQU   *
LINESZ   EQU   *-PRTBFN
PGHEAD   DC    C'1ICSA DISK UTILITY',CL30' '
PGHDDT   DC    X'4021204B202020',CL5' '
PGHDTM   DC    X'4021207A20207A2020'
PGHDCNT  EQU   PRINTSZ-8+PGHEAD-*
         DC    (PGHDCNT)C' '
         DC    CL5'PAGE '
PGHDPG#  DC    XL3'000000'
PGHDSZ   EQU   *-PGHEAD
*
PAGENO   DC    PL2'0'
LINENO   DC    PL2'0'
*
LINECT   DC    F'1'
PAGESZ   EQU   55
SPACESW  DC    AL1(PAGE)
         EJECT
*
*** DIAG PRINTER ***
*
DIAG     STM   R13,R2,DIAGSV
         MVC   PRTBFN(13),ERRMSG
         LH    R1,0(0,XRTN)
         A     R1,=A(MESSGS)
         MVC   *+7(1),1(R1)
         MVC   PRTBUF+11(*-*),2(R1)
         SR    R0,R0               PICK UP NEW RETURN CODE
         IC    R0,0(R1)
         LTR   R0,R0                                          *RS79.127
         BNZ   NOTWARN                                        *RS79.127
         MVC   PRTBFN(13),WARNMSG                             *RS79.127
NOTWARN  EQU   *                                              *RS79.127
         CH    R0,RETCODE          COMPARE WITH OLD ONE
         BNH   *+8                 BIF NEW SMALLER THAN OLD
         STH   R0,RETCODE          SET RETURN CODE FOR JOB STEP
         CH    R0,RETCODE1         COMPARE WITH OLD ONE FOR THIS INST
         BNH   *+8                 BIF NEW SMALLER THAN OLD
         STH   R0,RETCODE1         SET RETURN CODE FOT THIS INSTRUCTION
DIAG1    BAL   XRTN,PRINTA
         LM    R13,R2,DIAGSV
         LH    XRTN,2(0,XRTN)
         B     START(XRTN)
*
*** DIAG PRINTER WORKAREA ***
*
DIAGSV   DS    6F
ERRMSG   DC    C'*** ERROR ***'
WARNMSG  DC    C'***WARNING***'
MESSGS   EQU   *
CNFMSG   MSG   16,'COMMAND NOT FOUND'
ILSMSG   MSG   16,'ILLEGAL COMMAND SYNTAX'
INDXMSG1 MSG    4,'NOT CATALOGED: DATA SET NAME IS AN INDEX STRUCTURE' *
                                                              *KP78.137
INDXMSG2 MSG    4,'NOT CATALOGED: INDEX STRUCTURE IMPOSSIBLE' *KP78.137
TCMSG    MSG   12,'TOO MANY CONTINUATION CARDS'
DEVMSG   MSG   16,'DEVICE TYPE NOT FOUND'
TVMSG    MSG   12,'TOO MANY VOLUMES SPECIFIED'
DSNMSG   MSG   16,'DSNAME ILLEGAL SYNTAX'
MULMSG   MSG   12,'MULTIPLE VOLUME DATA SETS NOT SUPPORTED'
PIOERR1  MSG   20,'PERMANENT I/O ERROR'
PROGERR  MSG   20,'PROGRAM ERROR - SEE SYSTEM PROGRAMMER'
DSNFMSGC MSG   4,'DATA SET NOT FOUND IN CATALOG'
VNMTMSG  MSG   8,'VOLUME NOT MOUNTED: XXXXXX'
VNMTMSGA EQU   *-6
GDGMSG   MSG   8,'BAD GENERATION DATA GROUP NAME'
CFULMSG  MSG   20,'CATALOG IS FULL'
CVLMSG   MSG   8,'REQUIRED CONTROL VOLUME NOT MOUNTED'
PSWDMSG  MSG   8,'INCORRECT PASSWORD SUPPLIED FOR DATASET ON XXXXXX'
PSWDMSGA EQU   *-6
EXPMSG   MSG   8,'DATA SET NOT EXPIRED ON XXXXXX'
EXPMSGA  EQU   *-6
PIOERR2  MSG   20,'PERMANENT I/O ERROR ON XXXXXX'
PIOERR2A EQU   *-6
DSNFMSG  MSG   4,'DATASET NOT FOUND ON ANY VOLUMES SEARCHED'
NRENMSG  MSG   4,'DATASET NOT RENAMED ON ANY VOLUMES SEARCHED'
DUPMSG   MSG   8,'NEW DATASET NAME ALREADY EXISTS ON XXXXXX'
DUPMSGA  EQU   *-6
DSNIMSG1 MSG   8,'DATASET CURRENTLY IN USE'
CATUSED  MSG    4,'DSNAME ALREADY CATALOGED ON XXXXXX'     *FD78.045
ASVMSG   MSG   0,'XXXXXX ASSUMED TO BE 3330'                  *RS79.127
         EJECT
*
*** CONTROL COMMAND SCANNER ***
*
CCMNXT   LH    XW1,RETCODE         PICK UP RETURN CODE
         CH    XW1,STOPCODE        COMPARE WITH STOP VALUE
         BNL   STOP                STOP IF GREATER THAN OR EQUAL
         MVC   RETCODE2(2),RETCODE1
         XC    RETCODE1(2),RETCODE1
         BAL   XRTN,GETCM
         BAL   XRTN,SKIPB
         BE    CCMNXT         BIF CARD BLANK
         LA    XW1,CCMNAM
         LA    XW2,CCMADDR
         SR    XW3,XW3
CCMA     TM    0(XW1),X'80'
         BO    CCMNOTFD
         IC    XW3,0(0,XW1)   PICK UP LENGTH
         STC   XW3,*+5
         CLC   1(*-*,XW1),0(XLL)
         BE    CCMB
         LA    XW1,2(XW3,XW1)
         LA    XW2,4(0,XW2)
         B     CCMA
CCMB     LA    XLL,0(XW3,XLL)
CCMC     CLI   1(XLL),C' '
         LA    XLL,1(0,XLL)
         BNE   CCMC
         BAL   XRTN,SKIPB
         L     XW2,0(0,XW2)
         B     0(0,XW2)
CCMNOTFD DIAG  CNFMSG,CCMNXT
CCMILS   DIAG  ILSMSG,CCMNXT
*
*** COMMAND TABLES ***
*
CCMNAM   EQU   *
         CMD   'CAT'
         CMD   'UNC'
         CMD   'DEL'
         CMD   'QUA'
         CMD   'STO'
         CMD   'REN'
         CMD   'SEA'
         CMD   'CVO'
         CMD   'NOT'                                          *RS79.127
         DC    X'80'
CCMADDR  DC    A(CATLG,UNCAT,DELETE,QUALIFY,STOPCMD)
         DC    A(RENAME,DEFAULT,CVOL,CCMNXT)                  *RS79.127
*
*** SKIP BLANKS ***
*
SKIPB    CLI   0(XLL),C' '
         BCR   7,XRTN
         LA    XLL,1(0,XLL)
         CL    XLL,=A(CDEND)
         BNH   SKIPB
         SR    XLL,XLL
         BR    XRTN
*
*** GET NEXT CHARACTER ***
*
NCH      LA    XLL,1(0,XLL)
         CL    XLL,=A(CDEND)
         BCR   13,XRTN
         B     CCMILS                                         *RS79.129
         EJECT
*
*** GET COMMAND CARD ***
*
GETCM    STM   R13,R2,GETSV
         MVI   CDBUF,C' '
         MVC   CDBUF+1(256),CDBUF
         MVC   CDBUF+257(256),CDBUF+256
         GET   INDCB
         LR    XW6,R1
         MVC   PRTBUF(80),0(XW6)
         MVI   SPACESW,SPACE1
         BAL   XRTN,PRINT
         LA    XW4,CDBUF
GETA     SR    XW3,XW3
         LR    XW1,XW6
         LA    XW2,72(0,0)
GETB     CLC   0(3,XW1),=C' - '                               *RS79.127
         BNE   GETC
         MVI   GETFLG,X'80'
         B     GETD
GETC     LA    XW3,1(0,XW3)
         LA    XW1,1(0,XW1)
         BCT   XW2,GETB
         BCTR  XW3,0
GETD     LA    XW5,0(XW3,XW4)
         CL    XW5,=A(CDEND)
         BH    TOOLONG
         STC   XW3,*+5
         MVC   0(*-*,XW4),0(XW6)
         LR    XW4,XW5
         TM    GETFLG,X'80'
         BZ    GETRET
         GET   INDCB
         LR    XW6,R1
         MVC   PRTBUF(80),0(XW6)
         BAL   XRTN,PRINTA
         MVI   GETFLG,0
         B     GETA
GETRET   LA    XLL,CDBUF
         SR    R1,R1
         LM    R13,R2,GETSV
         BR    XRTN
TOOLONG  DIAG  TCMSG,CCMNXT
GETSV    DS    7F
GETFLG   DC    X'00'
CDBUF    DS    512C
CDEND    DS    X
         EJECT
*
*** VOLUME LIST PARSER ***
*
VLIST    STM   XSV,XRTN,VLISTSV1
         STM   XW1,XW6,VLISTSV2
         BAL   XRTN,SKIPB
         BE    CCMILS
         SR    XW1,XW1
         LA    XW2,VOLIST+2
         USING VENTRY,XW2
         CLI   0(XLL),C'('
         BE    VLISTA
         BAL   XRTN,DOVOL
VLOUT    STH   XW1,VOLIST
         S     XW2,=A(VOLIST+1)                               *AB78.129
         STH   XW2,VOLEN                                      *AB78.129
         LM    XSV,XRTN,VLISTSV1
         LM    XW1,XW6,VLISTSV2
         BR    XRTN
VLISTA   BAL   XRTN,NCH
VLISTB   BAL   XRTN,SKIPB
         BE    CCMILS
         BAL   XRTN,DOVOL
         BAL   XRTN,SKIPB
         BE    CCMILS
         CLI   0(XLL),C')'
         BE    VLOUTA
         CLI   0(XLL),C','
         BE    VLISTA
         B     VLISTB
VLOUTA   BAL   XRTN,NCH
         B     VLOUT
VOLOVER  DIAG  TVMSG,CCMNXT
*
VOLNO    EQU   (256-4)/18         MAX NUMBER OF VOLUMES       *AB78.129
VLISTSV1 DS    6A
VLISTSV2 DS    6A
VOLEN    DC    H'0'
VOLIST   DS    H
         DS    (VOLNO)XL12
VOLIMIT  DC    AL2(VOLNO)
*
*** VOLUME TABLE ENTRY DSECT ***
*
VENTRY   DSECT
VTYPE    DS    XL4
VSER     DS    CL6
VSEQ     DS    XL2
UTILITY  CSECT
         EJECT
*
*** VOLUME ENTRY PARSER ***
*
DOVOL    ST    XRTN,DOVOLSV
         MVC   VSEQ(2),=H'0'
         MVC   VSER(6),BLANKS
         LA    XW3,6(0,0)
         LA    XW4,VSER
DOVOLA   CLI   0(XLL),C'@'
         BE    DOVOLA1
         CLI   0(XLL),C'#'
         BE    DOVOLA1
         CLI   0(XLL),C'$'
         BE    DOVOLA1
         CLI   0(XLL),C'A'
         BL    DOVOLB
DOVOLA1  MVC   0(1,XW4),0(XLL)
         BAL   XRTN,NCH
         LA    XW4,1(0,XW4)
         BCT   XW3,DOVOLA
DOVOLB   CLI   0(XLL),C'/'                                    *AB78.128
         BE    DOVOLD
         CLC   VSER(6),=C'PUBLIC'
         BNE   DOVOLB1
         LH    XW3,PUBVOL               GET NUMBER OF PUBLIC VOLUMES
         LA    XW4,PUBVOL+2
DOPUB    MVC   0(12,XW2),0(XW4)
         LA    XW4,12(0,XW4)
         LA    XW2,12(0,XW2)
         LA    XW1,1(0,XW1)
         CH    XW1,VOLIMIT
         BH    VOLOVER
         BCT   XW3,DOPUB
         L     XRTN,DOVOLSV
         BR    XRTN
DOVOLB1  MVC   VTYPE(4),STDVOL
         L     XW3,UCBTABLE       FIND VOLSER/UCBTYP TABLE    *RS79.124
         LH    XW4,0(,XW3)        NUMBER OF KNOWN VOLUMES     *RS79.124
         LA    XW3,2(,XW3)        POINT TO FIRST ENTRY        *RS79.124
UCBLOOP  CLC   0(6,XW3),VSER      THIS VOLUME?                *RS79.124
         BNE   NOTUCB             NO, TRY NEXT ENTRY          *RS79.124
         MVC   VTYPE,6(XW3)       YES, INSERT UCBTYP INFO     *RS79.124
         B     DOVOLB2            AND CONTINUE                *RS79.124
NOTUCB   LA    XW3,10(,XW3)       SKIP TO NEXT ENTRY          *RS79.124
         BCT   XW4,UCBLOOP                                    *RS79.124
         MVC   ASVMSG+2(6),VSER   INSERT VOLSER               *RS79.124
         DIAG  ASVMSG,DOVOLB2     ASSUME 3330 WARNING MESSAGE *RS79.124
DOVOLB2  LA    XW2,12(0,XW2)
         LA    XW1,1(0,XW1)
         CH    XW1,VOLIMIT
         BH    VOLOVER
         CLI   0(XLL),C' '        CHECK FOR PROPER DELIMITER  *RS79.129
         BE    VOLRTN             *RS79.129
         CLI   0(XLL),C','                                    *RS79.129
         BE    VOLRTN                                         *RS79.129
         CLI   0(XLL),C')'                                    *RS79.129
         BNE   CCMILS             ELSE INV. CMD. SYNTAX       *RS79.129
VOLRTN   L     XRTN,DOVOLSV                                   *RS79.129
         BR    XRTN
DOVOLD   BAL   XRTN,NCH
         LR    XW3,XLL
         BAL   XRTN,NCH
         BAL   XRTN,NCH
         BAL   XRTN,NCH
         BAL   XRTN,NCH
         LA    XW4,DOVOLTP
DOVOLE   CLC   0(4,XW3),0(XW4)
         BE    DOVOLF
         LA    XW4,8(0,XW4)
         CLC   0(4,XW4),=F'0'
         BNE   DOVOLE
BADUNIT  DIAG  DEVMSG,CCMNXT
DOVOLF   TM    4(XW4),X'FF'       IS THIS A POINTER ENTRY?    *RS79.124
         BO    DOVOLSUB           YES, CHECK SUBTABLES        *RS79.124
NOVOLSUB MVC   VTYPE,4(XW4)       INSERT UCBTYP FROM TABLE    *RS79.124
         B     DOVOLB2            AND CONTINUE                *RS79.124
         SPACE
DOVOLSUB L     XW4,4(,XW4)        FIND SUBTABLE               *RS79.124
         CLI   0(XLL),C'-'        MODEL SPECIFIED?            *RS79.124
         BNE   NOVOLSUB           NO, TAKE DEFAULT            *RS79.124
         BAL   XRTN,NCH           MOVE OVER ONE               *RS79.124
NEXTSUB  LH    XW3,0(,XW4)        FIND COMPARE LENGTH         *RS79.127
         EX    XW3,CHKSUB         COMPARE MODEL NUMBER        *RS79.124
         BNE   BUMPSUB            IF EQUAL GO MOVE POINTER    *RS79.128
         LA    XW3,1(,XW3)        CORRECT COUNT               *RS79.128
ENDMODEL BAL   XRTN,NCH           MOVE PAST MODEL CHARS       *RS79.128
         BCT   XW3,ENDMODEL                                   *RS79.128
         CLI   0(XLL),C' '        MAKE SURE DELIMITER CORRECT *RS79.129
         BE    NOVOLSUB                                       *RS79.129
         CLI   0(XLL),C','                                    *RS79.129
         BE    NOVOLSUB                                       *RS79.129
         CLI   0(XLL),C')'                                    *RS79.129
         BNE   BADUNIT            ELSE INVALID DEVICE TYPE    *RS79.129
         B     NOVOLSUB           THEN CONTINUE PROCESSING    *RS79.128
BUMPSUB  LA    XW4,8(,XW4)        ELSE TRY NEXT ENTRY         *RS79.124
         CLC   0(4,XW4),=F'0'     (IF ANY)                    *RS79.124
         BNE   NEXTSUB                                        *RS79.127
         B     BADUNIT            IF NONE, IT'S UNKNOWN       *RS79.124
         SPACE
CHKSUB   CLC   2(*-*,XW4),0(XLL)                              *RS79.127
         DROP  XW2
*
*** VOLUME TYPE TABLES ***
*
DOVOLSV  DS    A
DOVOLTP  DC    CL4'2301',X'30402002'
         DC    CL4'2302',XL4'30002004'
         DC    CL4'2303',XL4'30002003'
         DC    CL4'2311',XL4'30002001'
         DC    CL4'2314',XL4'30C02008'
         DC    CL4'2321',XL4'30002005'
         DC    CL4'2305',X'FF',AL3(SUB2305)                   *RS79.124
         DC    CL4'3330',X'FF',AL3(SUB3330)                   *RS79.127
         DC    CL4'3350',XL4'3050200B'                        *RS79.124
         DC    XL4'00000000'
STDVOL   DC    XL4'30502009'
         SPACE
SUB2305  DC    H'0',C'1 ',X'30502006'                         *RS79.124
         DC    H'0',C'2 ',X'30502007'                         *RS79.124
         DC    XL4'0'                                         *RS79.124
SUB3330  DC    H'0',C'  ',X'30502009'                         *RS79.129
         DC    H'0',C'1 ',X'3050200D'                         *RS79.129
         DC    XL4'0'                                         *RS79.124
BLANKS   DC    CL8' '
*
*** DEFAULT PUBLIC VOLUME TABLE ***
*
PUBNO    EQU   5                                              *BA82.202
PUBVOL   DC    AL2(PUBNO)
         DC    XL4'3050200B',CL6'STOREA',H'0'                 *BA82.202
         DC    XL4'3050200B',CL6'STOREB',H'0'                 *BA82.202
         DC    XL4'3050200B',CL6'STOREC',H'0'                 *BA82.202
         DC    XL4'3050200B',CL6'STORED',H'0'                 *BA82.202
         DC    XL4'3050200B',CL6'STOREE',H'0'                 *BA82.202
         DC    XL4'3050200B',CL6'STOREF',H'0'                 *BA82.202
         DC    (VOLNO-6)XL12'00'   SPACE FOR ZAPPING IN VOLUMES
         EJECT
*
*** DCB ENTRIES ***
*
PRTBSZ   EQU   PRINTSZ*6
OUTDCB   DCB   BFTEK=S,BLKSIZE=PRTBSZ,DDNAME=SYSPRINT,                 X
               LRECL=PRINTSZ,MACRF=PM,RECFM=FBSA,DSORG=PS
INDCB    DCB   BFTEK=S,DDNAME=SYSIN,DEVD=DA,DSORG=PS,LRECL=80,         X
               EODAD=STOP,MACRF=GL
         EJECT
*
*** LIST VOLUMES ROUTINE ***
*
LVOL     STM   XRTN,XW3,LVOLSV     SAVE REGISTERS
         LH    XW1,VOLIST
         LA    XW2,VOLIST+2
         USING VENTRY,XW2
LVOLA    MVC   0(6,XW3),VSER       MOVE IN VOLUME NAME
         LA    XW2,12(0,XW2)       SKIP TO NEXT VENTRY
         LA    XW3,7(0,XW3)        SKIP TO NEWT POSITION IN OUTPUT LINE
         C     XW3,=A(PRTBUFE)     CHECK IF OFF END OF PRINT BUFFER
         BH    LVOLC               BIF SO
         BCT   XW1,LVOLA
         BAL   XRTN,PRINTA
LVOLB    LM    XRTN,XW3,LVOLSV
         BR    XRTN
LVOLC    BAL   XRTN,PRINTA         PRINT THE CURRENT LINE
         LA    XW3,PRTBUF+10       INDENT 10 SPACES FOR SECOND LINE
         BCT   XW1,LVOLA           DO NEXT VENTRY
         B     LVOLB               ELSE EXIT
LVOLSV   DS    5A
*
*** DSNAME LIST ROUTINE ***
*
DSNLIST  LH    XW1,DSNLEN          PICK UP DSN LENGTH
         STC   XW1,*+5             STORE IT IN MOVE INST
         MVC   PRTBUF(*-*),DSNBUF
         B     PRINTA              PRINT IT AND RETURN
*
*** LIST CONTROL VOLUME ROUTINE ***
*
CVOLIST  TM    CVOLSW,X'01'        CHECK FOR COL SPECIFIED
         BCR   8,XRTN              RETURN IF NOT(CC=0)
         MVC   PRTBUF+5(6),=C'CVOL ='    MOVE IN MESSAGE
         MVC   PRTBUF+12(6),CVOLBUF
         B     PRINTA
*
*** SEARCH VOL SER LIST ***
*
SVSERL   MVC   PRTBUF(20),=C'SEARCH VOL SER NOS =' MOVE IN MESSAGE
         LA    XW3,PRTBUF+21       LOAD ADDR OF FIRST VOL IN LIST
         B     LVOL                LIST VOLUMES
*
*** VOL SER LIST ROUTINE ***
*
VSERL    MVC   PRTBUF(13),=C'VOL SER NOS =' MOVE IN MESSAGE
         LA    XW3,PRTBUF+14       LOAD ADDR OF FIRST VOL IN LIST
         B     LVOL                LIST VOLUMES
         EJECT
*
*** DSNAME PARSER ***
*
DSNAM    STM   XSV,XRTN,DSNSV1
         STM   XW1,XW6,DSNSV2
         TM    QUALFLG,X'04'
         BO    DSNA3
         CLC   0(2,XLL),=C'* '
         BNE   DSNA2
         MVC   DSNBUF(46),DSN1
DSNA1    BAL   XRTN,NCH
         L     XRTN,DSNSV1+20
         BR    XRTN
DSNA2    CLC   0(3,XLL),=C'** '
         BNE   DSNA3
         BAL   XRTN,NCH
         MVC   DSNBUF(46),DSN2
         B     DSNA1
DSNA3    MVI   DSNSW,0
         MVI   DSNBUF,C' '
         MVC   DSNBUF+1(43),DSNBUF
         LA    XW1,44(0,0)
         LA    XW2,DSNBUF
         CLI   0(XLL),C''''
         BE    DSND
         CLI   0(XLL),C'"'
         BE    DSND
         TM    QUALFLG,X'01'
         BZ    DSNE
         TM    QUALFLG,X'04'
         BO    DSNE
         LH    XW3,QUAL1L
         SR    XW1,XW3
         BCTR  XW1,0
         BCTR  XW1,0
         LTR   XW1,XW1
         BNM   DSNC
         B     DSNBAD
DSNC     STC   XW3,*+5
         MVC   DSNBUF(*-*),QUAL1
         LA    XW2,1(XW3,XW2)
         MVI   0(XW2),C'.'
         LA    XW2,1(0,XW2)
         B     DSNE
DSND     BAL   XRTN,NCH
DSNE     LA    XW4,9(0,0)
         CLI   0(XLL),C'Z'
         BH    DSNBAD
DSNF     CLI   0(XLL),C''''
         BE    DSNJ
         CLI   0(XLL),C'"'
         BE    DSNJ
         CLI   0(XLL),C' '
         BE    DSNK
         CLI   0(XLL),C'/'
         BE    DSNK
         CLI   0(XLL),C'('
         BE    DSNL
         CLI   0(XLL),C'.'
         BE    DSNI
         CLI   0(XLL),C'$'
         BE    DSNG
         CLI   0(XLL),C'@'
         BE    DSNG
         CLI   0(XLL),C'#'
         BE    DSNG
         CLI   0(XLL),C'A'
         BL    CCMILS
DSNG     MVC   0(1,XW2),0(XLL)
         BAL   XRTN,NCH
         LA    XW2,1(0,XW2)
         BCT   XW4,DSNH
DSNBAD   DIAG  DSNMSG,CCMNXT
DSNH     BCT   XW1,DSNF
         B     DSNBAD
DSNI     MVI   0(XW2),C'.'
         LA    XW2,1(0,XW2)
         BAL   XRTN,NCH
         CH    XW4,=H'9'
         BNL   DSNBAD
         BCT   XW1,DSNE
         B     DSNBAD
DSNJ     BAL   XRTN,NCH
         B     DSNOUT
DSNK     TM    QUALFLG,X'02'
         BZ    DSNOUT
         CLI   QUAL2,C'('
         BE    DSNK1
         MVI   0(XW2),C'.'
         BCTR  XW1,0
         LA    XW2,1(0,XW2)
DSNK1    LH    XW3,QUAL2L
         SR    XW1,XW3
         BCTR  XW1,0
         LTR   XW1,XW1
         BM    DSNBAD
         STC   XW3,*+5
         MVC   0(*-*,XW2),QUAL2
         LA    XW2,1(XW2,XW3)              SKIP OVER POSTQUALIFIER
DSNOUT   S     XW2,=A(DSNBUF+1)
         STH   XW2,DSNLEN
         TM    QUALFLG,X'04'
         BO    DSNOUT1
         MVC   DSN2(46),DSN1
         MVC   DSN1(46),DSNBUF
DSNOUT1  LM    XSV,XRTN,DSNSV1
         LM    XW1,XW6,DSNSV2
         BR    XRTN
*
DSNL     TM    DSNSW,X'01'
         BO    DSNBAD
         MVC   GENBUF+1(7),BLANKS
         MVI   GENBUF,C'('
         BAL   XRTN,NCH
         LA    XW5,GENBUF+1
         LA    XW6,7(0,0)
         CLI   0(XLL),C')'
         BE    DSNBAD
         CLI   0(XLL),C'+'
         BE    DSNN
         CLI   0(XLL),C'-'
         BE    DSNN
DSNM     CLI   0(XLL),C')'
         BE    DSNO
         CLI   0(XLL),C'0'
         BL    DSNBAD
DSNN     MVC   0(1,XW5),0(XLL)
         BAL   XRTN,NCH
         LA    XW5,1(0,XW5)
         BCT   XW6,DSNM
         B     DSNBAD
DSNO     MVI   0(XW5),C')'
         BAL   XRTN,NCH
         MVI   DSNSW,X'01'
         S     XW5,=A(GENBUF+1)
         STH   XW5,GENLEN
         B     DSNF
*
*** DSNAME WORKAREAS ***
*
DSNSV1   DS    6A
DSNSV2   DS    6A
GENLEN   DC    H'0'
GENBUF   DC    CL8' '
DSN1     DC    CL44' '
DSN1L    DC    H'0'
DSN2     DC    CL44' '
DSN2L    DC    H'0'
DSNBUF   DC    CL44' '
DSNLEN   DC    H'0'
QUAL1    DC    CL44' '
QUAL1L   DC    H'0'
QUAL2    DC    CL44' '
QUAL2L   DC    H'0'
QUALFLG  DC    X'00'
DSNSW    DC    X'00'
         EJECT
*
*** FIX UP GENERATION DATA GROUPS ***
*
FIXGEN   STM   XSV,XRTN,DSNSV1
         STM   XW1,XW6,DSNSV2
         LH    XW1,DSNLEN
         A     XW1,=A(DSNBUF+1)
         LH    XW2,GENLEN
         STC   XW2,*+5
         MVC   0(*-*,XW1),GENBUF
         LOCATE FIXCAM
         BAL   XRTN,LOCCHK
         LA    XW1,DSNBUF+43
         LA    XW2,43(0,0)
FIXA     CLI   0(XW1),C' '
         BNE   FIXB
         BCTR  XW1,0
         BCT   XW2,FIXA
         B     DSNBAD
FIXB     STH   XW2,DSNLEN
         MVC   DSN1(46),DSNBUF
         LM    XSV,XRTN,DSNSV1
         LM    XW1,XW6,DSNSV2
         BR    XRTN
FIXCAM   CAMLST NAME,DSNBUF,,LOCAREA
         DS    0D
LOCAREA  DS    265X
         EJECT
*
*** DEFAULT PROCESSOR ***
*
DEFAULT  BE    START1
         CLI   0(XLL),C'O'         IS IT ON VOLIST
         BNE   DEFA                BIF NOT ELSE SKIP TO NEXT BLANK OR (
DEFX     BAL   XRTN,NCH            SKIP OVER THE O
         CLI   0(XLL),C' '         IS IT A BLANK?
         BE    DEFY                BIF YES
         CLI   0(XLL),C'('         IS IT AN OPEN PAREN?
         BNE   DEFX                SKIP OVER IT IF NOT
DEFY     BAL   XRTN,VLIST          GO PARSE THE VOLUME LIST
         LH    XW1,VOLEN
         STH   XW1,DEFLEN
         STC   XW1,*+5
         MVC   DEFVOL(*-*),VOLIST
         MVI   DEFSW,X'00'
         B     CCMNXT
DEFA     CLI   0(XLL),C'A'
         BE    START1
         B     CCMILS
*
DEFLEN   DC    H'0'
DEFVOL   DC    H'0'
         DC    (VOLNO)XL12'0'
DEFSW    DC    X'00'
         EJECT
*
*** QUALIFY PROCESSOR ***
*
QUALIFY  BNE   QUALA
         MVI   QUALFLG,X'00'
         B     CCMNXT
QUALA    MVI   QUALFLG,X'04'
         CLI   0(XLL),C'/'
         BE    QUALB
         BAL   XRTN,DSNAM
         TM    DSNSW,X'01'
         BO    CCMILS
         MVC   QUAL1(46),DSNBUF
         OI    QUALFLG,X'01'
         BAL   XRTN,SKIPB
         BE    QUALOUT
         CLI   0(XLL),C'/'
         BNE   QUALC
QUALB    BAL   XRTN,NCH
         BAL   XRTN,SKIPB
QUALC    BAL   XRTN,DSNAM
         TM    DSNSW,X'01'
         BZ    QUALD
         LH    XW3,DSNLEN
         LR    XW1,XW3
         A     XW1,=A(DSNBUF+1)
         LH    XW2,GENLEN
         STC   XW2,*+5
         MVC   0(*-*,XW1),GENBUF
         AR    XW3,XW2
         LA    XW3,1(0,XW3)
         STH   XW3,DSNLEN
QUALD    MVC   QUAL2(46),DSNBUF
         OI    QUALFLG,X'02'
QUALOUT  NI    QUALFLG,X'03'
         B     CCMNXT
         EJECT
*
*** CATALOG ROUTINE ***
*
         SPACE 1
CATLG    BAL   XRTN,DSNAM
         TM    DSNSW,X'01'
         BO    DSNBAD
         BAL   XRTN,DSNLIST        LIST DSNAME
         BAL   XRTN,SKIPB
         BE    CATE
         CLC   0(2,XLL),=C'AS'
         BNE   CATC
         BAL   XRTN,NCH
         BAL   XRTN,NCH
         BAL   XRTN,VLIST
         CLC   VOLIST(2),=H'1'     VOLUME COUNT IS ONE?
         BNE   NOTMULT             NO MULTIPLE VOLUMES SUPPORTED
         BAL   XRTN,VSERL          LIST VOL SER NOS
CATA     BAL   XRTN,CVOLIST        LIST CVOL IF ANY
         LA    XRTN,CATF           SET RET ADDR FROM CATCHK
         TM    CVOLSW,X'01'        IS THIS A CVOL CAMLST??
         BO    CATB
         LOCATE TRYCAM1            CHECK IF ALREADY CAT    *FD78.045
         LTR   R15,R15             DID LOCATE FIND ONE?    *FD78.045
         BNZ   DOCATA              NO, GOT NONZERO RC      *FD78.045
         MVC   CATUSED+30(6),LOCAREA+6    PUT THE VOLSER   *FD78.045
         DIAG  CATUSED,CCMNXT      PRINT OUT THE MSG       *FD78.045
DOCATA   CATALOG CATCAM1           GO AHEAD AND DO IT      *FD78.045
         B     CATCHK              CHECK IT OUT            *FD78.045
CATB     LOCATE TRYCAM2            SAME EVEN IF CVOL LST   *FD78.045
         LTR   R15,R15             WAS THERE ONE?          *FD78.045
         BNZ   DOCATB              NOPE...DO IT            *FD78.045
         MVC   CATUSED+30(6),LOCAREA+6    PUT THE VOLSER   *FD78.045
         DIAG  CATUSED,CCMNXT      PRINT MSG AND BLOW OFF  *FD78.045
DOCATB   CATALOG CATCAM2           NOW CATALOG IT          *FD78.045
         B     CATCHK
CATC     CLI   0(XLL),C'O'         IS IT ON VOLIST?
         BNE   CCMILS
CATC1    BAL   XRTN,NCH            SKIP OVER A CHARACTER
         CLI   0(XLL),C' '         IS IT A BLANK
         BE    CATC2               BIF YES
         CLI   0(XLL),C'('         IS IT AN OPEN PAREN?
         BNE   CATC1               IF NOT SKIP THE CHAR
CATC2    BAL   XRTN,VLIST          PARSE THE VOLUME LIST
CATD     BAL   XRTN,SVSERL         LIST SEARCH VOL SER NOS
         BAL   XRTN,SRCH
         LH    XW1,VOLIST
         CH    XW1,=H'1'
         BE    CATA
NOTMULT  DIAG  MULMSG,CCMNXT
CATE     LH    XW1,DEFLEN
         STC   XW1,*+5
         MVC   VOLIST(*-*),DEFVOL
         B     CATD
CATF     MVC   PRTBUF+5(12),=C'CATALOGED ON' MOVE IN MESSAGE
         LA    XW3,PRTBUF+18       LOAD PARAMETER REGISTER
         LA    XRTN,CCMNXT         LOAD RET ADDR FROM PRINT
         B     LVOL                LIST VOLUMES
CATCAM1  CAMLST CATBX,DSNBUF,,VOLIST
CATCAM2  CAMLST CATBX,DSNBUF,CVOLBUF,VOLIST
TRYCAM1  CAMLST NAME,DSNBUF,,LOCAREA
TRYCAM2  CAMLST NAME,DSNBUF,CVOLBUF,LOCAREA
         EJECT
*
*** SEARCH ROUTINE ***
*
         SPACE 1
SRCH     STM   XW1,XW6,SRCHSV1
         ST    XRTN,SRCHSV2
         LH    XW1,VOLIST
         LA    XW2,VOLIST+2
         LR    XW3,XW2
         LR    XW4,XW1
         USING VENTRY,XW2
SRCHA    MVC   VOLSER(6),VSER
         OBTAIN SRCHCAM
         B     *+4(R15)
         B     SRCHOK
         B     VNMTD
         B     SRCHBAD
         B     IOERR
         B     PERR
         B     PERR
IOERR    MVC   PIOERR2A(6),VOLSER
         DIAG  PIOERR2,CCMNXT
PERR     DIAG  PROGERR,ABE2000
VNMTD    MVC   VNMTMSGA(6),VOLSER
         DIAG  VNMTMSG,SRCHBAD
SRCHBAD  BCTR  XW1,0
         B     SRCHD
SRCHOK   MVC   0(12,XW3),0(XW2)
         LA    XW3,12(0,XW3)
SRCHD    LA    XW2,12(0,XW2)
         BCT   XW4,SRCHA
         STH   XW1,VOLIST
         LTR   XW1,XW1
         LM    XW1,XW6,SRCHSV1
         L     XRTN,SRCHSV2
         BCR   7,XRTN
         DIAG  DSNFMSG,CCMNXT
SRCHSV1  DS    6A
SRCHSV2  DS    A
VOLSER   DC    CL6' '
SRCHCAM  CAMLST SEARCH,DSNBUF,VOLSER,LOCAREA
         EJECT
*
*** CHECK LOCATE RETURN CODES ***
*
         SPACE 1
*
LOCCHK   B     *+4(R15)
         B     0(0,XRTN)
         B     CVOLNMTD
         B     DSNNOTFD
         B     DSNNOTFD
         B     DSNNOTFD                                       *KP78.137
         B     DSNBAD                                         *KP78.137
         B     CIOERR
         B     PERR
         B     PERR
         B     DSNNOTFD            DATASET NOT FOUND
CVOLNMTD DIAG  CVLMSG,CCMNXT
DSNNOTFD DIAG  DSNFMSGC,CCMNXT
CIOERR   DIAG  PIOERR1,CCMNXT
         SPACE 2
*
*** CHECK CATALOG RETURN CODES ***
*
         SPACE 1
CATCHK   B     *+4(R15)
         B     0(0,XRTN)                                      *FD78.068
         B     CATCHK3
         B     CATCHK2
         B     PERR
         B     PERR
         B     CATFULL
         B     BADGEN
         B     IOERR
CATCHK2  B     *+4(R1)                                        *KP78.137
         B     0(0,XRTN)                                      *KP78.137
         B     CVOLNMTD                                       *KP78.137
         B     PERR                                           *KP78.137
         B     INDXERR1                                       *KP78.137
         B     INDXERR2                                       *KP78.137
         B     DSNBAD                                         *KP78.137
         B     CIOERR                                         *KP78.137
         B     PERR                                           *KP78.137
         B     PERR                                           *KP78.137
INDXERR1 DIAG  INDXMSG1,CCMNXT                                *KP78.137
INDXERR2 DIAG  INDXMSG2,CCMNXT                                *KP78.137
CATCHK3  DIAG  CVLMSG,CCMNXT                                  *BA82.202
CATFULL  DIAG  CFULMSG,ABE1000
BADGEN   DIAG  GDGMSG,CCMNXT
*
*
   EJECT
*
*** FATAL ERRORS ***
*
         SPACE 1
ABE1000  BAL   XRTN,PRINTA
         ABEND 1000,DUMP
ABE2000  BAL   XRTN,PRINTA
         ABEND 2000,DUMP
         EJECT
*
*** CONTROL VOLUME PROCESSOR ***
*
         SPACE 1
CVOL     BNE   CVOLA
         MVI   CVOLSW,X'00'
         B     CCMNXT
CVOLA    CLC   0(2,XLL),=C'* '
         BNE   CVOLB
         MVI   CVOLSW,X'01'
         MVC   CVOLBUF(6),CVOL1
         B     CCMNXT
*
CVOLB    CLC   0(3,XLL),=C'** '
         BNE   CVOLC
         MVC   CVOLBUF(6),CVOL2
         MVI   CVOLSW,X'01'
         B     CCMNXT
*
CVOLC    LA    XW1,6(0,0)
         LA    XW2,CVOLBUF
CVOLD    CLI   0(XLL),C' '
         BE    CVOLE
         CLI   0(XLL),C'A'
         BL    CCMILS
         MVC   0(1,XW2),0(XLL)
         BAL   XRTN,NCH
         LA    XW2,1(0,XW2)
         BCT   XW1,CVOLD
         CLI   0(XLL),C' '
         BNE   CCMILS
CVOLE    MVC   CVOL2(6),CVOL1
         MVC   CVOL1(6),CVOLBUF
         MVI   CVOLSW,X'01'
         B     CCMNXT
*
CVOLSW   DC    X'00'
CVOLBUF  DC    CL6' '
CVOL1    DC    CL6' '
CVOL2    DC    CL6' '
         EJECT
*
*** UNCATALOG PROCESSOR ***
*
UNCAT    BAL   XRTN,DSNAM
         TM    DSNSW,X'01'
         BZ    *+8
         BAL   XRTN,FIXGEN
         BAL   XRTN,DSNLIST        LIST DSNAME
         BAL   XRTN,CVOLIST        LIST CVLO IF ANY
         BAL   XRTN,SKIPB
         BE    UNCAT2
         CLI   0(XLL),C'L'
         BNE   CCMILS
         LA    XRTN,UNCAT4
         TM    CVOLSW,X'01'
         BO    UNCAT1
         CATALOG UNCAM1
         B     UNCATCK
UNCAT1   CATALOG UNCAM2
         B     UNCATCK
UNCAT2   LA    XRTN,UNCAT4
         TM    CVOLSW,X'01'
         BO    UNCAT3
         CATALOG UNCAM3
         B     UNCATCK
UNCAT3   CATALOG UNCAM4
         B     UNCATCK
UNCAT4   MVC   PRTBUF+5(11),=C'UNCATALOGED' MOVE IN MESSAGE
         LA    XRTN,CCMNXT         LOAD RETURN ADDRESS FOR PRINT
         B     PRINTA              PRINT MESSAGE
*
UNCAM1   CAMLST UNCAT,DSNBUF
UNCAM2   CAMLST UNCAT,DSNBUF,CVOLBUF
UNCAM3   CAMLST UCATDX,DSNBUF
UNCAM4   CAMLST UCATDX,DSNBUF,CVOLBUF
   EJECT
*
*  UNCATALOG RETURN CODE CHECK
*
UNCATCK  B     *+4(R15)                                       *FD78.068
         B     0(0,XRTN)                                      *FD78.068
         B     CATCHK3                                        *FD78.068
         B     LOCCHK+4(R1)                                   *KP78.171
         B     PERR                                           *FD78.068
         B     PERR                                           *FD78.068
         B     CATFULL                                        *FD78.068
         B     BADGEN                                         *FD78.068
         B     IOERR                                          *FD78.068
         EJECT
*
*** DELETE PROCESSOR ***
*
         SPACE 1
DELETE   BAL   XRTN,DSNAM
         TM    DSNSW,X'01'
         BZ    *+8
         BAL   XRTN,FIXGEN
         MVC   DELSW(1),DEFSW
         BAL   XRTN,SKIPB
         BE    DELH
DELA     CLI   0(XLL),C'U'
         BNE   DELB
         OI    DELSW,X'08'
         NI    DELSW,X'0F'
         B     DELF
DELB     CLI   0(XLL),C'N'
         BNE   DELC
         OI    DELSW,X'10'
         NI    DELSW,X'17'
         B     DELF
DELC     CLI   0(XLL),C'P'
         BNE   DELD
         OI    DELSW,X'04'
         B     DELF
DELD     CLI   0(XLL),C'O'         IS IT ON VOLIST?
         BNE   DELE                BIF NOT
DELD1    BAL   XRTN,NCH            SKIP OVER A CHARACTER
         CLI   0(XLL),C' '         IS IT A BLANK?
         BE    DELD2               BIF YES
         CLI   0(XLL),C'('         IS IT AN OPEN PAREN?
         BNE   DELD1               IF NO, SKIP THE CHARACTER
DELD2    BAL   XRTN,VLIST          PARSE THE VOLIST
         OI    DELSW,X'02'
         NI    DELSW,X'1E'
         B     DELG
DELE     CLI   0(XLL),C'A'
         BNE   CCMILS
         OI    DELSW,X'01'
         NI    DELSW,X'1D'
DELF     BAL   XRTN,NCH
         CLI   0(XLL),C' '
         BNE   DELF
DELG     BAL   XRTN,SKIPB
         BNE   DELA
DELH     BAL   XRTN,DSNLIST        LIST DSNAMES
         TM    DELSW,X'03'
         BNZ   DELI
         LH    XW1,DEFLEN
         STH   XW1,VOLEN
         STC   XW1,*+5
         MVC   VOLIST(*-*),DEFVOL
         B     DELJ1
DELI     TM    DELSW,X'01'
         BZ    DELJ1
         TM    CVOLSW,X'01'
         BO    DELI1
         LOCATE DELCAM1
         B     DELI2
DELI1    LOCATE DELCAM2
DELI2    BAL   XRTN,LOCCHK
         LH    XW1,LOCAREA
         MH    XW1,=H'12'
         LA    XW1,1(0,XW1)
         STH   XW1,VOLEN
         STC   XW1,*+5
         MVC   VOLIST(*-*),LOCAREA
         LA    XRTN,DELJ2
         B     VSERL               LIST VOL SER NOS
DELJ1    BAL   XRTN,SVSERL         LIST SEARCH VOL SER NOS
DELJ2    MVC   VOLIST+12(2),=H'7'  MOVE IN ERROR CODE
         SR    R0,R0               CLEAR R0 FOR SCRATCH MACRO
         TM    DELSW,X'04'
         BO    DELK
         SCRATCH DELCAM3
         B     DELL
DELK     SCRATCH DELCAM4
DELL     BAL   XRTN,SCRCHK
         TM    DELSW,X'08'
         BO    DELM
         TM    DELSW,X'10'
         BO    CCMNXT
         TM    DELSW,X'01'
         BZ    CCMNXT
DELM     BAL   XRTN,CVOLIST        LIST CVOL IF ANY
         TM    CVOLSW,X'01'
         BO    DELN
         CATALOG UNCAM3
         B     DELO
DELN     CATALOG UNCAM4
DELO     BAL   XRTN,UNCATCK                                   *AB78.128
         MVC   PRTBUF+5(11),=C'UNCATALOGED'
         LA    XRTN,CCMNXT         LOAD RET ADDR FOR PRINT
         B     PRINTA
*
DELCAM1  CAMLST NAME,DSNBUF,,LOCAREA
DELCAM2  CAMLST NAME,DSNBUF,CVOLBUF,LOCAREA
DELCAM3  CAMLST SCRATCH,DSNBUF,,VOLIST
DELCAM4  CAMLST SCRATCH,DSNBUF,,VOLIST,,OVRD
DELSW    DC    X'00'
         EJECT
*
*** CHECK SCRATCH RETURN CODES ***
*
SCRCHK   ST    XRTN,SCRSV
         B     *+4(R15)
         B     SCRCHK1
         B     SCRCHK2
         B     SCRCHK2
         B     PERR
*
SCRCHK1  LH    XW1,VOLIST          LOAD NUMBER OF VOLUMES
         LA    XW2,VOLIST+2
         USING   VENTRY,XW2
SCRCHK1A MVC   PRTBUF+5(10),=C'DELETED ON'
         MVC   PRTBUF+16(6),VSER   MOVE IN VOLUME SERIAL NUMBER
         BAL   XRTN,PRINTA         PRINT MESSAGE
         LA    XW2,12(0,XW2)
         BCT   XW1,SCRCHK1A
         B     SCRC
*
SCRCHK2  LH    XW1,VOLIST
         SR    XW4,XW4
         LA    XW2,VOLIST+2
         USING   VENTRY,XW2
SCRA     LH    XW3,VSEQ
         SLL   XW3,2
         B     *+4(XW3)
         B     SCR0                DELETED ON VOLUME
         B     SCRB                NOT FOUND ON VOLUME
         B     SCR2                INCORRECT PASSWORD
         B     SCR3                UNEXPIRED DATASET
         B     SCR4                PERMANENT I/O ERROR
         B     SCR56               VOLUME NOT MOUNTED
         B     SCR56               VOLUME NOT MOUNTED
         DIAG  DSNIMSG1,CCMNXT     CURRENTLY IN USE           *BA82.202
*
SCR0     MVC   PRTBUF+5(10),=C'DELETED ON'
         MVC   PRTBUF+16(6),VSER
         LA    XRTN,SCRB1          LOAD RETURN ADDRESS FROM PRINT
         B     PRINTA              GO PRINT IT
*
SCR2     MVC   PSWDMSGA(6),VSER
         DIAG  PSWDMSG,SCRB        INCORRECT PASSWORD MESSAGE
*
SCR3     MVC   EXPMSGA(6),VSER
         DIAG  EXPMSG,SCRB         UNEXPIRED DATASET
*
SCR4     XR    R0,R0
         LA    R3,DSNBUF
SCR4B    MVC   PIOERR2A(6),VSER
         DIAG  PIOERR2,SCRB        PERMANENT I/O ERROR
*
SCR56    MVC   VNMTMSGA(6),VSER
         DIAG  VNMTMSG,SCRB        VOLUME NOT MOUNTED
*
SCRB1    LA    XW4,1(0,XW4)
SCRB     LA    XW2,12(0,XW2)
         BCT   XW1,SCRA
         LTR   XW4,XW4             TEST IF DELETED ON ANY VOLUMES
         BNZ   SCRC                BIF DELETED ON SOME
SCRC1    DIAG  DSNFMSG,SCRC        NOT SCRATCHED MESSAGE
SCRC     L     XRTN,SCRSV
         BR    XRTN
         DROP  XW2
*
SCRSV    DS    A
         EJECT
*
*** RENAME COMMAND ***
*
         SPACE 1
RENAME   BAL   XRTN,DSNAM          GET DSNAMEE1
         TM    DSNSW,X'01'         SEE IF GENERATION DATA GROUP
         BZ    *+8                 IF SO FIX IT UP
         BAL   XRTN,FIXGEN
         MVC   DSNBUF1(46),DSNBUF  STORE DSNAME
         BAL   XRTN,SKIPB          SKIP TO SECOND DSNAME
         BE    CCMILS              BIF OFFEND OF CARD
*
         BAL   XRTN,DSNAM          GET DSNAME2
         TM    DSNSW,X'01'         SEE IF GERERATION DATA GROUP
         BZ    *+8                 IF SO FIX IT UP
         BAL   XRTN,FIXGEN
         MVC   DSNBUF2(46),DSNBUF  STORE DSNAME
*
         LH    XW1,DSNBUF1L        LOAD LENGTH OF DSN1
         STC   XW1,*+5             STORE IT IN MVC INST
         MVC   PRTBUF(*-*),DSNBUF1 MOVE IN DSN1
         LA    XW2,PRTBUF+2(XW1)   SKIP PAST DSN1 IN BUFFER
         MVC   0(2,XW2),=C'->'     MOVE IN ->
         LH    XW1,DSNBUF2L        LOAD DSN2 LENGTH
         STC   XW1,*+5             STORE IT IN MVC INST
         MVC   3(*-*,XW2),DSNBUF2  MOVE IN DSN2
         BAL   XRTN,PRINTA         PRINT THE LINE
         MVC   RENSW(1),DEFSW      SET UP DEFAULTS
         BAL   XRTN,SKIPB          SKIP BLANKS
         BE    RENH                BIF NOT
*
RENA     CLI   0(XLL),C'U'         SEE IF UNCAT SPECIFIED
         BNE   RENA1               BIF NOT
         OI    RENSW,X'08'         TURN ON UNCAT
         NI    RENSW,X'0F'         TURN OFF NOCAT
         B     RENF                DO REST OF CARD
*
RENA1    CLI   0(XLL),C'R'         SEE IF RECAT SPECIFIED
         BNE   RENB                BIF NOT
         OI    RENSW,X'0C'         TURN ON UNCAT AND CAT
         NI    RENSW,X'0F'         TURN OFF NOCAT
         B     RENF                DO REST OF CARD
*
RENB     CLI   0(XLL),C'C'         SEE IF CAT SPECIFIED
         BNE   RENC                BIF NOT
         OI    RENSW,X'04'         TURN ON CAT
         NI    RENSW,X'0F'         TURN OFF NOCAT
         B     RENF                DO REST OF CARD
*
RENC     CLI   0(XLL),C'N'         SEE IF NOCAT SPECIFIED
         BNE   REND                BIF NOT
         OI    RENSW,X'10'         TURN ON NOCAT
         NI    RENSW,X'13'         TURN OFF UNCAT AND CAT
         B     RENF                DO REST OF CARD
*
REND     CLI   0(XLL),C'O'         SEE IF ON VOLIST SPECIFIED
         BNE   RENE                BIF NOT
REND1    BAL   XRTN,NCH            SKIP OVER A CHARACTER
         CLI   0(XLL),C' '         IS IT A BLANK?
         BE    REND2               BIF YES
         CLI   0(XLL),C'('         IS IT AN OPEN PAREN?
         BNE   REND1               IF NOT, SKIP THE CHARACTER
REND2    BAL   XRTN,VLIST          DO VOLIST
         OI    RENSW,X'02'         TURN ON VOLIST
         NI    RENSW,X'1E'         TURN OFF ASCAT
         B     RENG                DO REST OF CARD
*
RENE     CLI   0(XLL),C'A'         SEE IF ASCAT SPECIFIED
         BNE   CCMILS              IF NOT CARD ILLEGAL SYNTAX
         OI    RENSW,X'01'         TURN ON ASCAT
         NI    RENSW,X'1D'         TURN OFF VOLIST
RENF     BAL   XRTN,NCH            SKIP 1 CHARACTER
         CLI   0(XLL),C' '         CHECK FOR BLANK
         BNE   RENF                IF NOT LOOK FOR NEXT BLANK
RENG     BAL   XRTN,SKIPB          SKIP TO NEXT KEYWORD
         BNE   RENA                IF NOT OFFEND PARSE KEYWORD
*
RENH     MVC   DSNBUF(46),DSNBUF1  SET UP SEARCH FOR DSN1
         TM    RENSW,X'03'         CHECK WHERE TO LOOK FOR DSN
         BNZ   RENI                BIF DEFAULT VOLUMES USED
         OI    RENSW,X'02'         DUMMY IT UP AS IF ON VOLIST GIVEN
         LH    XW1,DEFLEN          PICK UP LENGTH ON VOLIST
         STH   XW1,VOLEN           STORE IT
         STC   XW1,*+5             FIX UP THE MOVE INSTRUCTION
         MVC   VOLIST(*-*),DEFVOL        MOVE THE VOLUME LIST IN
RENH1    BAL   XRTN,SVSERL         LIST SEARCH VOL SER NOS
         BAL   XRTN,SRCH           SEARCH FOR DSN ON VOLUMES
         CLC   VOLIST(2),=H'1'     CHECK IF MULTIPLE VOLUMES FOUND
         BE    RENL                BIF NOT
         B     NOTMULT             IF SO DIAGNOSE IT
*
RENI     TM    RENSW,X'01'         CHECK FOR ON SPECIFIED
         BZ    RENH1               BIF SO
*
         TM    CVOLSW,X'01'        CHECK IF CVOL USED
         BO    RENJ                BIF CVOL USED
         LOCATE RENCAM1            LOCATE IN CATALOG
         B     RENK                GO CHECK RETURN CODE
RENJ     LOCATE RENCAM2            LOCATE IN CATALOG ON CVOL
RENK     BAL   XRTN,LOCCHK         CHECK RETURN CODE FROM LOCATE
         LH    XW1,LOCAREA         PICK UP NUMBER OF VOLUMES
         MH    XW1,=H'12'          MULTIPLY BY LENGTH OF EACH ENTRY
         LA    XW1,1(0,XW1)        ACCOUNT FOR COUNT FIELD AT FIRST
         STH   XW1,VOLEN           STORE LENGTH OF VOLUME LIST
         STC   XW1,*+5             FIX UP MOVE INSTRUCTION
         MVC   VOLIST(*-*),LOCAREA
         BAL   XRTN,VSERL          LIST VOL SER NOS
*
         SPACE
RENL     XR    R0,R0
         LA    R3,DSNBUF
         TM    RENSW,X'1C'      BIF CAT,NOCAT,UNCAT OR RECAT SPECIFIED
         BNZ   RENL2
         TM    RENSW,X'02'         TEST FOR ON SPECIFIED
         BO    RENL1
         OI    RENSW,X'0C'         ASCAT -> UNCAT CAT
         B     RENL2
RENL1    OI    RENSW,X'10'         ON VOLUME LIST -> NOCAT
*
RENL2    TM    RENSW,X'08'         CHECK IF UNCAT SPECIFIED
         BZ    RENO                BIF NO UNCAT
         BAL   XRTN,CVOLIST        LIST COLTROL VOLUMES IF ANY
         TM    CVOLSW,X'01'        CHECK IF CVOL USED
         BO    RENM
         CATALOG UNCAM3            UNCATALOG IT
         B     RENN
RENM     CATALOG UNCAM4            UNCATALOG IT
RENN     BAL   XRTN,UNCATCK        CHECK CATALOG RETURN CODES *AB78.128
         BAL   XRTN,CVOLIST        LIST CONTROL VOLUME IF ANY
         MVC   PRTBUF+5(11),=C'UNCATALOGED' MOVE MSG INTO BUFFER
         LH    XW1,DSNBUF1L        LOAD DSN1 LENGTH
         STC   XW1,*+5             STORE IT IN MOVE INST
         MVC   PRTBUF+17(*-*),DSNBUF1  MOVE IN DSN1
         BAL   XRTN,PRINTA         GO PRINT IT
*
RENO     MVC   VOLIST+12(2),=H'7'  MOVE IN ERROR CODE
         SR    R0,R0               CLEAR REGISTER 0 FOR RENAME
         RENAME RENCAM3            RENAME DATASET
         BAL   XRTN,RENCHK         CHECK RENAME RETURN CODES
*
RENP     TM    RENSW,X'04'         CHECK IF CAT SPECIFIED
         BZ    CCMNXT              IF NOT GET NEXT COMMAND
         LH    XW1,VOLIST          LOAD NUMBER OF VOLUMES
         LA    XW2,VOLIST+2        SET BASE ADDRESS
         USING VENTRY,XW2
RENQ     XC    VSEQ(2),VSEQ        CLEAR SEQUENCE NUMBER FIELD
         LA    XW2,12(0,XW2)       SKIP TO NEXT VOLUME ENTRY
         BCT   XW1,RENQ            GO CLEAR NEXT SEQ FIELD IF ANY
*
         TM    CVOLSW,X'01'        CHECK IF CVOL USED
         BO    RENR                BIF SO
         LOCATE TRYCAM4            CHECK IF NEW ALREADY CAT  *FD78.128
         LTR   R15,R15             DID LOCATE FIND ONE??     *FD78.128
         BNZ   DOCATR              NO..GO CATALOG IT         *FD78.128
         MVC   CATUSED+30(6),LOCAREA+6    PUT THE VOLSER     *FD78.128
         DIAG  CATUSED,CCMNXT      PRINT MSG AND BLOW OFF    *FD78.128
DOCATR   CATALOG RENCAM4           CATALOG DSN2              *FD78.128
         B     RENS                SET UP RETURN & CATCHK    *FD78.128
RENR     LOCATE TRYCAM5            SAME IF CVOL              *FD78.128
         LTR   R15,R15             CHK RC TO SEE IF WAS ONE  *FD78.128
         BNZ   DOCATS              NO, GO CAT DSN2           *FD78.128
         MVC   CATUSED+30(6),LOCAREA+6  PUT IN VOLSER USED   *FD78.128
         DIAG  CATUSED,CCMNXT      PRINT MSG AND DO NEXT CMD *FD78.128
DOCATS   CATALOG RENCAM5           CATALOG DSN2 ON CVOL      *FD78.128
RENS     MVC   DSNBUF,DSNBUF2     COPY DSN FOR MESSAGES       *AB78.130
         BAL   XRTN,CATCHK         CHECK CATALOG RETURN CODES
*
         MVC   PRTBUF+5(9),=C'CATALOGED' MOVE IN MSG
         LH    XW1,DSNBUF2L        PICK UP DSN2 LENGTH
         STC   XW1,*+5             STORE LENGTH IN MVC INST
         MVC   PRTBUF+15(*-*),DSNBUF2
         LA    XRTN,CCMNXT         LOAD RETURN ADDRESS FOR PRINT
         B     PRINTA              GO PRINT IT
   EJECT
*
*** RENAME CAMLSTS ***
*
RENCAM1  CAMLST NAME,DSNBUF1,,LOCAREA
RENCAM2  CAMLST NAME,DSNBUF1,CVOLBUF,LOCAREA
RENCAM3  CAMLST RENAME,DSNBUF1,DSNBUF2,VOLIST
RENCAM4  CAMLST CATBX,DSNBUF2,,VOLIST
RENCAM5  CAMLST CATBX,DSNBUF2,CVOLBUF,VOLIST
TRYCAM4  CAMLST NAME,DSNBUF2,,LOCAREA                        *FD78.128
TRYCAM5  CAMLST NAME,DSNBUF2,CVOLBUF,LOCAREA                 *FD78.128
*
         DS    0H
DSNBUF1  DS    CL44
DSNBUF1L DS    H
DSNBUF2  DS    CL44
DSNBUF2L DS    H
RENSW    DS    X
         EJECT
*
*** CHECK RENAME RETURN CODES ***
*
RENCHK   ST    XRTN,RENCHSV        STORE RETURN ADDRESS
         B     *+4(R15)            BRANCH ON RETURN CODE
         B     RENCHK0             NORMAL RETURN CODE
         B     RENCHK48            NO VOLUMES MOUNTED
         B     RENCHK48            UNUSUAL CONDITION ON SOME VOLUMES
         B     PERR                PROGRAM ERROR
*
RENCHK0  LH    XW1,VOLIST          LOAD LENGTH OF VOLIST      *AB78.130
         LA    XW2,VOLIST+2        GET ADDRESS OF VOLIST
         USING VENTRY,XW2
RENCHK0A MVC   PRTBUF+5(10),=C'RENAMED ON'
         MVC   PRTBUF+16(6),VSER   MOVE IN VOL SER NO
         BAL   XRTN,PRINTA         PRINT MESSAGE
         LA    XW2,12(0,XW2)
         BCT   XW1,RENCHK0         GO DO NEXT VOLUME ENTRY
         B     RENCC
*
RENCHK48 LH    XW1,VOLIST
         LA    XW2,VOLIST+2
         USING VENTRY,XW2
         SR    XW4,XW4
RENCA    LH    XW3,VSEQ
         SLL   XW3,2
         B     *+4(XW3)
         B     RENC0               RENAMED
         B     RENCB               NOT FOUND ON VOLUME
         B     RENC2               INCORRECT PASSWORD
         B     RENC3               NEW NAME ALREADY EXISTS
         B     RENC4               PERMANENT I/O ERROR ON VOLUME
         B     RENC56              VOLUME NOT MOUNTED
         B     RENC56              VOLUME NOT MOUNTED
         DIAG  DSNIMSG1,CCMNXT     CURRENTLY IN USE          *BA82.202
*
RENC0    MVC   PRTBUF+5(10),=C'RENAMED ON'
         MVC   PRTBUF+16(6),VSER
         LA    XRTN,RENCB1
         B     PRINTA
*
RENC2    MVC   PSWDMSGA(6),VSER
         DIAG  PSWDMSG,RENCB
*
RENC3    MVC   DUPMSGA(6),VSER
         DIAG  DUPMSG,RENCB
*
RENC4    MVC   PIOERR2A(6),VSER
         DIAG  PIOERR2,RENCB
*
RENC56   MVC   VNMTMSGA(6),VSER
         DIAG  VNMTMSG,RENCB
*
RENCB1   LA    XW4,1(0,XW4)
RENCB    LA    XW2,12(0,XW2)
         BCT   XW1,RENCA
         LTR   XW4,XW4             SEE IF ANY RENAMES DONE
         BNZ   RENCC
RENCC1   DIAG  NRENMSG,CCMNXT      NOT RENAMED MESSAGE
RENCC    L     XRTN,RENCHSV
         BR    XRTN
         DROP  XW2
*
RENCHSV  DS    A
         EJECT
*
*** STOP COMMAND ***
*
         SPACE 1
STOPCMD  BE    STOPCMDA            BIF NULL STOP COMMAND
         BAL   XRTN,NUMBER         COLLECT A NUMBER
         STH   XW1,STOPCODE        STORE IT
         B     CCMNXT              DO NEXT COMMAND
STOPCMDA MVC   STOPCODE(2),=X'7FFF'    STOPCODE = INFINITY
         B     CCMNXT              DO NEXT COMMAND
*
STOPCODE DC    H'8'
         SPACE 2
*
*** NUMBER BUILD ROUTINE ***
*
         SPACE 1
NUMBER   STM   XW2,XW4,NUMBSV1     STORE REGISTERS
         ST    XRTN,NUMBSV2       STORE RETURN REGISTER
         LA    XW2,NUMB1
         LH    XW3,=H'-1'
         LA    XW4,8(0,0)
NUMA     CLI   0(XLL),C'0'
         BL    NUMB
         CLI   0(XLL),C'9'
         BH    NUMB
         MVC   0(1,XW2),0(XLL)
         LA    XW2,1(0,XW2)
         LA    XW3,1(0,XW3)
         BAL   XRTN,NCH
         BCT   XW4,NUMA
NUMB     LTR   XW3,XW3
         BM    CCMILS
         EX    XW3,PACKINST
         CVB   XW1,NUMBUF
         LM    XW2,XW4,NUMBSV1
         L     XRTN,NUMBSV2
         BR    XRTN
*
NUMBSV1  DS    3A
NUMBSV2  DS    A
NUMB1    DS    CL8
PACKINST PACK  NUMBUF(8),NUMB1(*-*)
         EJECT
         LTORG
         END   START
