1
-
      XWTO is  a macro to  generate and  modify WTO parameter  lists wit
      having to compute the offsets of message segments.   With it,  you
      write code like:
0              XWTO  (DDNAME,'SYSPRINT'),MF=(E,NOTOPEND)
                     ...
      NOTOPEND XWTO  'DDNAME ',(DDNAME,8),' FAILED TO OPEN',MF=L
0     to send a "DDNAME insert FAILED TO OPEN" message.
0     The basic syntax is:
0     label     XWTO  segment-list,
                      REPLY=(area,length),
                      ECB=ecbaddr,
                      ROUTCDE=routing-codes,
                      DESC=descriptor-codes,
                      MSGTYP=msgtype-codes,
                      MCSFLAG=mcsflag-codes,
                      MF=(mf,area,length)
0     The REPLY, ECB, ROUTCDE,  DESC,  MSGTYP and MCSFLAG parameters are
      same as for the IBM WTO(R); however, ROUTCDE, DESC, MSGTYP and MCS
      can also be supplied on the E-form macro.
0     MF supports the following forms:
0          MF=I - Generates  an inline  parm list  and issues  the SVC
                default).
0          MF=L - Generates an inline parm list.
           MF=(L,,length)  - Generates  an inline parm list  and equates
                "length" symbol to the list of the parm list.
           MF=(L,area,length)   - Generates  a  parm  list at  the  loca
                specified by "area".   If a length is present, it is equ
                to the parm list length.
0          MF=(G,area,length)   - Generates  a  parm  list at  the  loca
                specified by "area",   and issues the SVC.   If  a lengt
                present, it is equated to the parm list length.
0          MF=(M,area)  -  Modifies the  parm list  present at  the loca
                specified by "area".
0          MF=(E,area)  -  Modifies the  parm list  present at  the loca
                specified by "area", and issues the SVC.
0     Where  sensible,  addresses  and lengths  may be  specified using
      following notations:
0          (xx) - indicates the data or address in register xx
           A:xx -  indicates the  address  of location  xx,   which must
                accessed via an A-type constant (i.e.,  may not be addre
                via a register)
           S:xx -  indicates the  address  of location  xx,   which must
                accessed via a base register (i.e., may not be addressed
                an address constant)
           *:xx - indicates  the data or  address referenced by  locatio
                via indirect addressing.   When this  notation is used f
                segment length, the length should be stored as a halfwor
0     Message  segments may  be either  constant or  variable (the  cons
      forms are  allowed only  in macro  forms that  generate a  parm li
      Constant segements are merely quoted strings.   Variable segments
      the form (label,value)  or (label,value,length).   The label serve
      name a  segment,  when  generating a  parm list,   or to  identify
      segment to be modified, when modifying a parm list.   The length f
      is used in rather special situations, and is discussed later.
1
0                                                                     PA
0     The forms which "value" may assume are:
0          'xxx' - to indicate a literal character string,
           nn'xxx' - to indicate a character string of length nn
           t'xx' - to indicate a constant  of some non-character type (e
                an EDIT pattern),
           tLnn'xx' - to indicate a non-character constant of length nn,
           nn - to indicate an undefined value of length nn,
           addr - to  indicate the  address of  data to  be copied  into
                segment.   This  form can be in  any of the  address for
                described above.
0     If the  value is given  as an address,  a  length may be  specifie
      indicate the amount of data to be copied (in normal, register, or
      notation).   The  length can be  omitted only when  modifiying ano
      parameter list;  in this case,  the  length with which the segment
      generated when defined is used.
0     Note that a segement may always be  modified before it is used,  i
      an E or M form may appear before the I, L or G form which defined
