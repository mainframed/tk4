SAVE     QSTART 'QUEUE COMMAND - CREATE A COPY OF CURRENT DATASET  Q19'
         USING QCKPT,R10          BASE REG FOR CHECKPOINT WORK ARE
         L     R10,QVCKPT         LOAD BASE REG
         USING QDISPLAY,R9        BASE REG FOR DISPLAY WORK AREA
         L     R9,QVDSPL          LOAD BASE REG
         USING WORK,R13           LOCAL WORK AREA
***********************************************************************
*                                                                     *
*   ALLOCATE OUTPUT DATASET                                           *
*                                                                     *
***********************************************************************
         MVI   IDFLAG,X'FF'        SET FLAG TO PREFIX DSN WITH TSO
         CLC   QPDSID,=H'0'        IS THERE A VALID DATASET?
         BE    TILT1               NO. TELL THE USER.
         MVC   DSNAME+2(44),QBLANK BLANK THE DSNAME
         MVC   DSNAME+2(8),QPARM1  FIRST PART OF DSNAME
         LA    R1,DSNAME           ADDR OF DSNAME
         ST    R1,DA08PDSN         STORE IN PARM LIST
         LH    R2,QLNG1            LENGTH OF QPARM1
         LA    R1,2(R2,R1)         OFFSET INTO DSNAME
         LH    R3,QLNG2            LENGTH OF QPARM2
         LTR   R3,R3               ?/LENGTH ZERO
         BZ    DATA                YES. USE DATA AS DEFAULT DS TYPE
         CLC   =C'L(',QPARM2       ?/IS THIS LINE RANGE DATA
         BE    DATA                YES. DEFAULT DATASET TYPE TO 'DATA'
         MVI   0(R1),C'.'          MOVE IN DELIMITER
         MVC   1(8,R1),QPARM2      NO. SAVE POSSIBLE DS TYPE
         LA    R1,1(R3,R1)         PTR TO NEXT FREE AREA
         LA    R2,1(R3,R2)         LENGTH OF DSN
         LH    R3,QLNG3            LENGTH OF QPARM3
         LTR   R3,R3               ?/LENGTH ZERO
         BZ    SETLNGH             YES. GO CALL ALLOCATE
         CLC   =C'L(',QPARM3       ?/IS THIS LINE RANGE DATA
         BE    SETLNGH             YES. GO SET LENGTH
         MVI   IDFLAG,X'00'        RESET QUALIFIED DS FLAG
         MVI   0(R1),C'.'          MOVE IN DELIMITER
         MVC   1(8,R1),QPARM3      NO. SAVE DS TYPE
SETLNGH  LA    R1,1(R3,R2)         LENGTH OF DSNAME
         B     DSLNGH              GO SAVE LENGTH
DATA     MVC   0(5,R1),=C'.DATA'   LAST PART OF DSNAME
         LA    R1,5(R2)            LENGTH OF DSNAME
DSLNGH   STH   R1,DSNAME           STORE LENGTH OF DSNAME
         MVC   DA08DDN(72),ALCLIST REMAINDER OF PARM LIST
         TM    QFLAG1,QXOPER       IS THIS A PRIV USER
         BNO   NOPRIV              NO  LEAVE SIZE ALONE
         MVC   DA08PQTY,=F'99'     BIG PRIMARY   SIZE
         MVC   DA08SQTY,=F'99'     BIG SECONDARY SIZE
NOPRIV   DS    0H
         CLI   IDFLAG,X'00'        ?/QUALIFIED DS
         BNE   *+8                 NO. LEAVE EVERYTHING AS IS
         NI    DA08CTL,X'DF'       YES. TURN OFF FLAG
         MVI   DAIRFLAG,X'08'      INDICATE ALLOC FUNCTION
         TM    QFLAG1,QXOPEN       WAS SAVE FILE ALREADY ALLOCATED?
         BNO   *+16                NO   LEAVE AS NEW
         NI    QFLAG1,255-QXOPEN   TURN OFF FLAG
         MVI   DA08DSP1,X'01'      SHOW DISP1=OLD
         MVI   DA08DPS2,X'08'      SHOW DISP2=KEEP
         L     R15,=V(ALLOCATE)    ADDR OF DAIR MODULE
         BALR  R14,R15             GO TO IT
         MVC   QCOUT+36(1),QCRECFM MOVE IN RECORD FORMAT
         NI    QCOUT+36,X'06'      TURN OFF EVERTHING BUT CCTL
         OI    QCOUT+36,X'90'      SPECIFY FIXED BLOCKED RECORDS
         LH    R1,QCLRECL          RECORD LENGTH
         LTR   R1,R1               IS THE LRECL ZERO?
         BNZ   RECOK               NO. SKIP.
         LA    R1,133              YES. USE LRECL 133.
RECOK    STH   R1,QCOUT+82         STORE LRECL
BIGGER   LR    R2,R1               UPDATE BLKSIZE
         AH    R1,QCOUT+82         ADD LRECL TO BLKSIZE
         CH    R1,=H'4096'         IS THE BLKSIZE GREATER THAN 4096?
         BL    BIGGER              NO. MAKE IT BIGGER.
         STH   R2,QCOUT+62         STORE BLKSIZE
***********************************************************************
*                                                                     *
*   LINE RANGE FOR SAVE                                               *
*                                                                     *
***********************************************************************
         LA    R4,QDREPLY+2        START POSITION OF SCAN
         LA    R5,QDREPLY+55       END POSITION OF SCAN
LNE010   CLC   0(2,R4),=C'L('      ?/KEYWORD FOUND
         BE    LNE020              YES. CONTINUE PROCESSING
         LA    R4,1(R4)            POINT TO NEXT POSITION
         CR    R4,R5               ?/END OF SCAN
         BL    LNE010              NO. TRY AGAIN
LNE015   L     R2,=F'1'            SET LOWER BOUNDARY FOR LINE RANGE
         L     R3,=F'9999999'      SET UPPER BOUNDARY FOR LINE RANGE
         B     LNE999              CONTINUE WITH NORMARL PROCESSING
LNE020   LA    R4,2(R4)            POSITION TO DATA
         LR    R6,R4               SAVE POINTER
         MVI   QDELIMIT,C','       MOVE IN DELIMITER TO BE CHECKED
         BAL   R8,DLIMIT           GO FIND THE DELIMITER
         CVB   R2,QDWORK           CONVERT START LINE RANGE TO BINARY
         LR    R4,R7               RE-LOAD CURRENT ADDR FOR SCAN
         LR    R6,R4               SAVE ADDR
         MVI   QDELIMIT,C')'       MOVE IN DELIMITER TO BE CHECKED
         BAL   R8,DLIMIT           GO FIND THE DELIMITER
         CVB   R3,QDWORK           CONVERT END LINE RANGE TO BINARY
         CR    R2,R3               ?/LINE RANGE SPECIFICATION OK
         BNL   LNERROR             NO. ISSUE MESSAGE
         EJECT
***********************************************************************
*                                                                     *
*   REPOSITION DATASET TO TOP                                         *
*                                                                     *
***********************************************************************
LNE999   DS    0H
         OPEN  MF=(E,QCOPEN)       OPEN DATASET
         LA    R1,0                INITIALIZE RECORD COUNT
         L     R4,QCSTART          TOP OF DATASET POINTER
         L     R4,0(R4)            DISK ADDR TOP OF DATASET
         L     R5,QCBLKA           IOAREA ADDRESS
         B     FIRST               GO DO IT
         SPACE 4
***********************************************************************
*                                                                     *
*   PROCESS DATASET                                                   *
*                                                                     *
***********************************************************************
NEXTBLK  L     R4,0(R5)            DISK ADDR OF NEXT BLOCK
FIRST    LTR   R4,R4               IS THE DISK ADDR ZERO?
         BZ    END                 YES. END OF DATASET.
         BAL   R8,READ             READ A BLOCK
         CLC   QPJOBID(6),4(R5)    DOES THE JOBID MATCH?
         BNE   END                 NO. END OF DATASET.
         LA    R4,10(R5)           ADDR OF FIRST RECORD IN BLOCK
         EJECT
***********************************************************************
*                                                                     *
*   PROCESS RECORDS                                                   *
*                                                                     *
***********************************************************************
NEXTREC  CLI   0(R4),X'FF'          IS LENGTH BYTE FF?
         BE    NEXTBLK              YES. END OF BLOCK.
         TM    1(R4),X'10'          IS THIS A SPANNED RECORD?
         BO    SPAN                 YES. SKIP IT.
         SR    R6,R6                ZERO OUT REG
         IC    R6,0(R4)             INSERT LENGTH
         TM    1(R4),X'80'          IS CCTL SPECIFIED?
         BZ    NOCCTL               NO. SKIP.
         LA    R6,1(R6)             INCREMENT LENGTH FOR CCTL
NOCCTL   TM    1(R4),X'08'          IS THIS RECORD TO BE IGNORED?
         BO    SKIPREC              YES. SKIP IT.
         MVI   BUFFER,C' '          BLANK FIRST BYTE OF BUFFER
         MVC   BUFFER+1(255),BUFFER BLANK THE BUFFER
         LR    R7,R6                DO NOT DESTROY R6
         SH    R7,=H'1'             IS LENGTH ZERO?
         BM    SKIPREC              YES. SKIP RECORD.
         EX    R7,MVCREC            MOVE RECORD TO BUFFER
         LA    R1,1(R1)             UPDATE RECORD COUNT
         CR    R1,R2                ?/RECORD TO BE SAVED
         BL    SKIPREC              NO.  SKIP SAVING IT
         CR    R1,R3                ?/RECORD TO BE SAVED
         BH    END                  NO.  END PROCESSING.
         LR    R8,R1                SAVE REG 1
         PUT   QCOUT,BUFFER
         LR    R1,R8                RESTORE REG 1
SKIPREC  LA    R4,3(R6,R4)          INCREMENT TO NEXT RECORD
         B     NEXTREC              PROCESS NEXT RECORD
SPAN     LH    R6,2(R4)             SEGMENT LENGTH
         TM    1(R4),X'08'          IS THIS THE FIRST SEGMENT?
         BO    SPANFRST             YES. USE LARGER HEADER SIZE.
         LA    R4,4(R6,R4)          INCREMENT TO NEXT RECORD
         B     NEXTREC              PROCESS NEXT RECORD
SPANFRST LA    R4,6(R6,R4)          INCREMENT TO NEXT RECORD
         B     NEXTREC              PROCESS NEXT RECORD
         EJECT
***********************************************************************
*                                                                     *
*   CLOSE UP SHOP AND GO HOME                                         *
*                                                                     *
***********************************************************************
END      CLOSE MF=(E,QCOPEN)
         MVI   DAIRFLAG,X'18'       INDICATE FREE FUNCTION
         L     R15,=V(ALLOCATE)     ADDR OF DAIR MODULE
         BALR  R14,R15              GO TO IT
         L     R15,=V(LISTDS)       GO BACK TO LISTDS
         BALR  R14,R15              GO TO IT
         QSTOP
***********************************************************************
*                                                                     *
*   FIND DELIMITER                                                    *
*                                                                     *
***********************************************************************
DLIMIT   CLC   QDELIMIT,0(R4)      ?/SEPARATOR
         BE    DLMT010             YES. CONTINUE PROCESSEING
         LA    R4,1(R4)            NO.  CHECK NEXT POSITION
         CR    R4,R5               ?/END OF SCAN
         BL    DLIMIT              NO.  CONTINUE SEARCH
         B     LNERROR             YES. GO ISSUE ERROR MESSAGE
DLMT010  LA    R7,1(R4)            START OF SECOND PARAMETER
         SR    R4,R6               LENGTH OF PARAMETER
         BNP   LNERROR             BRANCH IF ERROR
         BCTR  R4,0                DROP BY 1 FOR EXECUTE INSTRUCTION
         MVC   QFZONES,QFZONE      TEST FIELD FOR NUMERIC
         EX    R4,MVZ
         CLC   QFZONES,QFZONE      ?/FIELD NUMERIC
         BNE   LNERROR             NO.  ISSUE ERROR MESSAGE
         EX    R4,PACK             YES. CONVERT TO PACKED DECIMAL
         BR    R8                  RETURN TO CALLER
MVZ      MVZ   QFZONES(1),0(R6)
PACK     PACK  QDWORK,0(1,R6)
LNERROR  EQU   *
         OI    QFLAG1,QXOPEN       TURN ON ALREADY FLAG
         QTILT ' *** ERROR IN LINE RANGE SPECIFICATION ***'
***********************************************************************
*                                                                     *
*   READ A BLOCK FROM HASPACE                                         *
*                                                                     *
***********************************************************************
READ     STM   R1,R3,SAVER123      SAVE REGS 1 - 3
         ST    R4,QCTRAK           STORE DISK ADDR
         LR    R1,R5               IOAREA ADDRESS
         L     R15,=V(READSPC)     ADDR OF ROUTINE TO READ HASPACE
         BALR  R14,R15             GO TO IT
         LM    R1,R3,SAVER123      RESTORE REGS 1 - 3
         BR    R8                  RETURN TO CALLER
         EJECT
***********************************************************************
*                                                                     *
*   MISCELLANY                                                        *
*                                                                     *
***********************************************************************
TILT1    QTILT '*** YOU ARE NOT PROCESSING A VALID DATASET ***'
         LTORG
MVCREC   MVC   BUFFER(1),3(R4)
         DS    0F
ALCLIST  DC    C'HASPSAVE',CL16' ',F'0',F'10',F'50',F'0'
         DC    CL16' ',X'040202B0',F'0',CL8' '
         QCOMMON
         ORG   QWRKSPC
DSNAME   DS    H
         DS    CL44
QDELIMIT DC    C' '
WORK     DSECT
         DS    CL80
BUFFER   DS    CL256
IDFLAG   DS    X
SAVER123 DS    3F
         END
