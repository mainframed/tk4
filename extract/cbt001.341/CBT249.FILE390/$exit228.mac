AQJ2     TITLE 'ACF2AQJ2 - ACF2 JES2 EXIT 228 MODULE FOR LINKLIB'
****************************************************************ACF314
*                                                               ACF314
* LOAD MODULE NAME = ACF2AQJ2  ATTRIBUTE = RENT  LIBRARY = LINK ACF314
*                                                               ACF314
* THIS LOAD MODULE PROVIDES JES2 EXIT CODE TO SUPPORT THE       ACF314
* FOLLOWING ACF2 FUNCTIONS:                                     ACF314
*                                                               ACF314
* CSECT ACF2AQJ2 -- HASPRDR EXIT -- EXIT 228.                   ACF314
*                   THIS EXIT WILL SAVE A PORTION OF THE JCB    ACF314
*                   FOR FURTURE USE BY THE QUEUE COMMAND.       ACF314
*                                                               ACF314
*     REGS - R0  -      - N A                                   ACF314
*            R1  -      - N A                                   ACF314
*            R2/R8      - N A                                   ACF314
*            R9  -      - JCB ADDRESS                           ACF314
*            R10 -      - JCT ADDRESS                           ACF314
*            R11 -      - HCT ADDRESS                           ACF314
*            R12 -      - N A                                   ACF314
*            R13 -      - PCE ADDRESS.                          ACF314
*            R14 -      - RETURN ADDRESS.                       ACF314
*            R15 -      - ENTRY ADDRESS.                        ACF314
*                         RETURN CODE 0= CONTINUE PROCESSING.   ACF314
*                                                               ACF314
****************************************************************ACF314
         MACRO   -- ACF2XMSG -- JES2 ACF2 PARM LIST WTO         ACF314
&NAME    ACF2XMSG   ,                                           ACF314
.*                                                              ACF314
*                                                               ACF314
*  MSG FORMATTOR FOR ACVALD PARM LIST.    OUTPUT---             ACF314
* JCBACFLG/ACVCNTL/JCBAC2F//LID/SRCE/JNAME/SLID/PATH/PGM        ACF314
*                                                               ACF314
JCBAC058 EQU   JCBACMSG+70,58    MESSAGE TEXT AREA              TR79025
         MVI   JCBAC058+0,X'91'    FIRST PART OF X'914F'        ACF314
         MVI   JCBAC058+1,X'4F'     FOR HASP914 MSG ID          ACF314
         MVI   JCBAC058+2,C'$'     SET EYECATCHER               ACF314
         UNPK  JCBAC058+3(3),JCBACFLG(2) GET THE FLOW FLAGS     ACF314
         UNPK  JCBAC058+5(3),ACVCNTL(2)  SET SVC CNTL INFO      ACF314
         UNPK  JCBAC058+7(3),JCBAC2F(2)  SET FLAG INFO          ACF314
         TR    JCBAC058+3(6),#ACRD998  TR HEX TO CHAR FORMAT    ACF314
         MVI   JCBAC058+9,C'/'     SEPARATE WITH SLASH          ACF314
         MVC   JCBAC058+10(8),ACVLID  PLANT THE LOGONID         ACF314
         MVC   JCBAC058+18(8),LIDXSRCE   MOVE INPUT SOURCE      ACF314
         MVC   JCBAC058+26(4*8),ACVJOBV  PLANT OTHER FIELDS     ACF314
*        $WTO  JCBAC058,58,JOB=YES,ROUTE=$MAIN+$UR,             ACF314
*              CLASS=$NORMAL,PRI=$HI   SEND MSG                 ACF314
         $WTO  JCBAC058,58,JOB=YES,ROUTE=$MAIN+$UR,             ACF314 X
               CLASS=$NORMAL,PRI=$HI   SEND MSG                 ACF314
         XC    JCBAC058,JCBAC058   CLEAR OUT MSG AREA           ACF314
         B     #ACRD999            CONTINUE WITH PROCESSING     ACF314
#ACRD998 DC    240X'00'            TRANSLATE TABLE.             ACF314
#ACRD997 DC    C'0123456789ABCDEF' TRANSLATE HEX TO CHAR        ACF314
#ACRD999 DS    0H  **************** END OF ACF2XMSG *********** ACF314
         SPACE 1                                                ACF314
         MEND                                                   ACF314
         TITLE 'ACF2/JES2 INPUT SERVICE SUPPORT'
         COPY  $HASPGBL            COPY HASP GLOBALS
ACF2AQJ2 $MODULE NOTICE=NONE,                                          C
               TITLE='ACF2/QUEUE SAVE JCB',                            C
               CVT,                LOCATE MVS CVT DSECT                C
               DCB,                LOCATE MVS DCB DSECT                C
               DEB,                LOCATE MVS DEB DSECT                C
               SDWA,               LOCATE MVS SDWA DSECT               C
               UCB,                LOCATE MVS UCB DSECT                C
               WPL,                LOCATE MVS WPL DSECT                C
               $BUFFER,            LOCATE HASP BUFFER DSECT            C
               $CAT,               LOCATE HASP CAT DSECT               C
               $CMB,               LOCATE HASP CMB DSECT               C
               $DCT,               LOCATE HASP DCT DSECT               C
               $ERA,               LOCATE HASP ERA DSECT               C
               $EST,               LOCATE HASP EST DSECT               C
               $EXITPL,            LOCATE HASP EXITPL DSECT            C
               $JQE,               LOCATE HASP JQE DSECT               C
               $HASPEQU,           LOCATE HASP EQUATES                 C
               $HCT,               LOCATE HASP HCT DSECT               C
               $IOT,               LOCATE HASP IOT DSECT               C
               $JCT,               LOCATE HASP JCT DSECT               C
               $JOE,               LOCATE HASP JOE DSECT               C
               $KIT,               LOCATE HASP KIT DSECT               C
               $LRC,               LOCATE HASP LRC DSECT               C
               $MIT,               LOCATE HASP MIT DSECT               C
               $MITETBL,           LOCATE HASP MITETBL DSECT           C
               $MODMAP,            LOCATE HASP MODMAP DSECT            C
               $NHD,               LOCATE HASP NHD DSECTS              C
               $NIT,               LOCATE HASP NIT DSECT               C
               $OCR,               LOCATE HASP OCR DSECT               C
               $OCT,               LOCATE HASP OCT DSECT               C
               $PCE,               LOCATE HASP PCE DSECT               C
               $PDDB,              LOCATE HASP PDDB DSECT              C
               $QSE,               LOCATE HASP QSE DSECT               C
               $RAT,               LOCATE HASP RAT DSECT               C
               $RDRWORK,           LOCATE HASP RDRWORK DSECT           C
               $SCAT,              LOCATE HASP SCAT DSECT              C
               $SCR,               LOCATE HASP SCR DSECT               C
               $SVT,               LOCATE HASP SSVT DSECT              C
               $TAB,               LOCATE HASP TAB DSECT               C
               $TGM,               LOCATE HASP TGM DSECT               C
               $XECB,              LOCATE HASP XECB DSECT              C
               $XIT                LOCATE HASP XIT DSECT
         TITLE ' #ACFJCB - ACF2 JOB CONTROL BLOCK MAP'
         #ACFJCB
         TITLE ' QACFJCB - ACF2 JOB CONTROL BLOCK MAP FOR QUEUE'
         QACFJCB
         TITLE ' ACCVT - ACF2 CVT MAP'
         ACCVT
         TITLE ' ACF2/QUEUE SAVE JCB IN JCT'
         USING  JCTDSECT,R10
ACF2QJCB $ENTRY CSECT=YES,BASE=R8  SAVE JCB ROUTINE
        $SAVE ,                    REMEMBER TO SAVE REGISTERS
         LR    R8,R15              SET BASE
         USING #ACFJCB,R9          ESTABLISH ADDRESSABILITY
         LH    R1,$BUFSIZE         GET BUFFER SIZE
         SRL   R1,3                TRUNCATE TO MULT OF DOUBLEWRD
         SLL   R1,3                ..
         LA    R0,QJCBLEN          GET ACF2 BLOCK LENGTH
         SR    R1,R0               CALC POSSIBLE OFFSET IN JCT
         BNP   ERR1                ERROR IF NEG OR ZERO
         LA    R6,0(R1,R10)        ADDRESS OF ACF2 AREA
         USING QACFJCB,R6          SET ADDRESSING
         LA    R15,JCTEND
         LA    R15,NJHGEND-NJHG(R15)
         LA    R15,NJH2END-NJH2(R15)
         LA    R15,NJHEEND-NJHE(R15)
         LA    R15,NJTGEND-NJTG(R15)
         LA    R15,NJTSEND-NJTS(R15)  JCT END + MIN NJE BLKS
         CR    R15,R6              IS JCT DATA END BEFORE ACF2 START?
         BL    SAVEDISP            YES, CONTINUE
         $WTO  A1781,L'A1781,JOB=YES,ROUTE=$LOG+$TP+$MAIN,             X
               CLASS=$ALWAYS,PRI=$ST
         B     ACFQRTN             NOW EXIT
ERR1     $WTO  A1782,L'A1782,JOB=YES,ROUTE=$LOG+$TP+$MAIN,             X
               CLASS=$ALWAYS,PRI=$ST
         B     ACFQRTN             EXIT NOW
A1781    $MSG  913,'$ACF1781 BUFSIZE CANNOT CONTAIN JCT + ACF2 AREA'
A1782    $MSG  913,'$ACF1782 BUFSIZE CANNOT CONTAIN JCT + NJE INFO + ACX
               F2 AREA'
*
SAVEDISP DS    0H
         ST    R1,JCTUSERA         SAVE DISPLACEMENT
         TM    JCBAC2F,JCBAC2FK    HAS LID BEEN READ
         BO    SAVEQ               YES  NO NEED TO READ IT AGAIN
         CLC   =C'STC',ACVSRCE     IS THIS A STARTED TASK
         BE    SAVEQ               YES  NO NEED TO READ LIDREC
         ACFINCVT R3,NONE=ACFQRTN  OBTAIN THE ACF2 CVT ADDRESS
         USING ACCVT,R3            SET CVT ADDRESSING
         LA    R0,JCBACMSG         POINT TO RETURN MSG AREA
         ST    R0,ACVMSG           PUT INTO PARM LIST
         LA    R0,LIDLID           POINT TO LID RECORD AREA
         ST    R0,ACVRECB          PUT INTO PARM LIST
         LA    R0,LIDLEN           GET RECORD LENGTH
         ST    R0,ACVRECL          PUT INTO PARM LIST
         LA    R0,JCBAUIDB         POINT TO UID STRING BUFF
         ST    R0,ACVUIDB          AND PUT INTO PARM LIST
         LA    R0,24               GET UID STRING LENGTH
         ST    R0,ACVUIDL            AND PUT INTO PARM LIST
         MVI   ACVSFCN,ACVSINFO    SHOW INFO REQUEST ONLY
         ACFSVC ACVALD,CVT=HAVE    ISSUE LID READ CALL
SAVEQ    LR    R14,R6              COPY BLOCK START ADDR
         LA    R15,QJCBLEN         GET BLOCK LENGTH
         SR    R1,R1               SET FOR ZERO FILL
         MVCL  R14,R0              AND ZERO BLOCK
         MVC   JCBACFQ,=C'QACF'    MOVE ID
         MVC   JCBSAVE,JCBACSV     MOVE SAVE AREA
         MVC   QACV(ACVLEN),ACVALD MOVE ACVALD PARM BLOCK
         MVC   QLID,LIDLID         MOVE LOGONID
         MVC   QBUNIT,LIDBUNIT     MOVE BUDGET UNIT
         MVC   QNAME,LIDNAME       MOVE PROGRAMMER NAME
         MVC   QPHONE,LIDPHONE     MOVE PHONE NUMBER
         MVC   QACFLG,JCBACFLG     MOVE JES FLOW CONTROL FLAG
         MVC   QAC2F,JCBAC2F       MOVE CONTROL FLAG
         MVC   QSOURCE,LIDXSRCE    MOVE INPUT SOURCE
         CLC   ACVSRCE(3),=C'TSO'  IS THIS A TSO LOGON
         BNE   ACFQRTN             NO  BRANCH AROUND MESSAGE
         ACF2XMSG ,                DISPLAY MESSAGE
ACFQRTN  DS    0H
         SR    R15,R15             SHOW GOOD RETURN CODE
        $RETURN RC=(R15)            AND RETURN TO CALLER
         LTORG
        $MODEND
         END
