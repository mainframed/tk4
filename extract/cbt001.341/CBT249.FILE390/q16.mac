PARSE    QSTART 'QUEUE COMMAND - COMMAND LINE PARSE ROUTINES   Q16'
         USING QDISPLAY,R10       BASE REG FOR DISPLAY WORK AREA
         L     R10,QVDSPL         LOAD BASE REG
***********************************************************************
*                                                                     *
*   PARSE SUBCOMMAND NAME                                             *
*                                                                     *
***********************************************************************
         LH    R2,QDRLNG          LENGTH OF REPLY LINE
         OC    QDREPLY,QBLANK     TRANSLATE TO UPPER CASE
         CLC   QDREPLY,QBLANK     IS THE ENTIRE REPLY BLANK?
         BE    LOOKUP             YES. DO LOOKUP.
         MVC   QDTLINE,QDREPLY    MOVE COMMAND LINE TO HEADING
         MVC   FIELD,QBLANK       BLANK THE WORK FIELD
         MVC   OFFSET(4),=F'0'    ZERO THE OFFSET AND LENGTH
         MVC   QOFF0(12),OFFSET   INITIALIZE FIRST FIELD
         MVC   QOFF1(48),QOFF0    INITIALIZE NEXT FOUR FIELDS
         LA    R6,QOFF4+12        ADDR PAST LAST FIELD
         LA    R5,QOFF0           ADDR OF FIRST SET OF FIELDS
         LA    R3,QDREPLY         FIRST BYTE OF REPLY LINE
ENCORE   LA    R4,FIELD           FIRST BYTE OF WORK FIELD
BLANK    CLI   0(R3),C' '         IS THIS BYTE BLANK?
         BNE   FIRST              NO. START OF FIELD.
         LA    R3,1(R3)           YES. SKIP IT.
         BCT   R2,BLANK           TRY NEXT BYTE
         B     EMPTY              END OF REPLY LINE.
FIRST    LH    R1,QDRLNG          REPLY LENGTH
         SR    R1,R2              COMPUTE OFFSET TO START OF FIELD
         STH   R1,OFFSET          STORE OFFSET
         LR    R1,R2              SAVE COUNT OF REMAINING BYTES
         B     CHAR               CONTINUE
LOOP     CLI   0(R3),C' '         IS THIS BYTE BLANK?
         BE    LAST               YES. END OF FIELD.
CHAR     MVC   0(1,R4),0(R3)      MOVE BYTE TO SUBNAME
         LA    R3,1(R3)           INCREMENT
         LA    R4,1(R4)           INCREMENT
         BCT   R2,LOOP            TRY NEXT BYTE
LAST     SR    R1,R2              COMPUTE FIELD LENGTH
         CH    R1,=H'8'           IS LENGTH GREATER THAN 8?
         BNH   STORE              NO. USE IT.
         LA    R1,8               YES. USE LENGTH OF EIGHT.
STORE    STH   R1,LENGTH          STORE FIELD LENGTH
EMPTY    MVC   0(12,R5),OFFSET    MOVE FIELD TO QCOMMON
         LTR   R2,R2              IS THE REMAINING LENGTH ZERO?
         BZ    LOOKUP             YES. DO THE TABLE LOOKUP.
         MVC   FIELD,QBLANK       BLANK THE WORK FIELD
         MVC   OFFSET(4),=F'0'    ZERO OUT OFFSET AND LENGTH
         LA    R5,12(R5)          INCREMENT TO NEXT FIELD
         CR    R5,R6              WAS THAT THE LAST FIELD?
         BL    ENCORE             NO. PROCESS NEXT FIELD.
         EJECT
***********************************************************************
*                                                                     *
*   LOOK UP THE MODULE ADDRESS FOR THE SUB COMMAND                    *
*                                                                     *
***********************************************************************
LOOKUP   CLI   QSUBNAME,C'X'      IS THIS A PRIVILEGED OPERATION?
         BE    SECRET             YES. CHECK FOR PASSWORD.
LOOKUP2  LA    R2,TABLE           START OF SUBCOMMAND TABLE
NEXT     CLC   0(4,R2),QSUBNAME   COMPARE FIRST FOUR CHARACTERS
         BE    FOUND              THIS IS THE ONE
         LA    R2,10(R2)          NEXT ENTRY
         CLI   0(R2),X'FF'        IS THIS THE END OF TABLE?
         BNE   NEXT               NO. TRY NEXT ENTRY.
FOUND    MVC   QCODEH(6),4(R2)    SUBCOMMAND CODE AND COMMAND ADDRESS
         CLI   QPARM1,C'*'        USER WANTS TO USE LAST JOB NUMBER
         BE    MOVELAST           BRANCH AROUND MOVE
         CLC   QPARM1,=CL8'8 '    USER OOPSED AND SAID 8 INSTEAD OF *
         BNE   MOVEIT             BRANCH AROUND MOVE
MOVELAST MVC   QLNG1(10),QLSTLEN  MOVE IN LAST JOB NUMBER & LENGTH
         B     STOP               RETURN TO CALLER
MOVEIT   EQU   *
         CLI   QPARM1,C'0'        WAS PARM1 NUMERIC
         BL    STOP               NO  RETURN TO CALLER
         LH    R2,QCODEH          LOAD QCODE
         CH    R2,=H'12'          IS MOVE TO BE IGNORED
         BNL   STOP               NO  RETURN TO CALLER
         CLC   =C'FT',QSUBNAME    IS THIS FTIME COMMAND
         BE    STOP               YES  DO NOT STORE
         MVC   QLSTLEN(10),QLNG1      MOVE LAST JOB NUMBER & LENGTH
STOP     QSTOP
***********************************************************************
*                                                                     *
*   CHECK AUTHORITY FOR X SUBCOMMANDS                                 *
*                                                                     *
***********************************************************************
SECRET   CLI   QSUBNAME+1,C'P'     IS THIS THE PASSWORD?
         BE    PASSWD              YES. CHECK IT.
         TM    QFLAG1,QXPASS       IS THIS USER AUTHORIZED?
         BO    LOOKUP2             YES. PROCESS COMMAND.
BOUNCE   LA    R2,HELPCC           NO. PRETEND IT IS INVALID.
         B     FOUND               CONTINUE
PASSWD   CLC   QPARM1,=C'PASSWORD' DID THE USER SAY PASSWORD?
         BE    ASKPASS             YES. ASK HIM FOR IT
         CLC   =C'OFF',QPARM1      TURN THE PASSWORD OFF?
         BNE   BOUNCE              NO. REJECT
         NI    QFLAG1,255-QXPASS   UNAUTHORIZE USER
         QTILT '**** PASSWORD TURNED OFF ****'
ASKPASS  TPUT  WPASS,L'WPASS,FULLSCR,MF=(E,QTPUT)
         TGET  RPASS,8,EDIT,MF=(E,QTGET)
         CLC   RPASS,=C'YES SIR!'   IS THE PASSWORD CORRECT?
         BNE   BOUNCE               NO. REJECT.
         OI    QFLAG1,QXPASS        AUTHORIZE USER
         QTILT '*** PASSWORD ACCEPTED ***'
         EJECT
***********************************************************************
*                                                                     *
*   MISCELLANY                                                        *
*                                                                     *
***********************************************************************
         LTORG
TABLE    DS    0D                      TABLE ON DOUBLE WORD BOUNDARY
         DC    C'?   ',H'0',VL4(HELP)      DISPLAY HELP SCREEN
         DC    C'AI  ',H'16',VL4(SEARCH)   DISPLAY AVAILABLE JOBS
         DC    C'AO  ',H'20',VL4(SEARCH)   DISPLAY AVAILABLE OUTPUT
         DC    C'B   ',H'32',VL4(REPOS)    SHORT FOR BOTTOM
         DC    C'BO  ',H'32',VL4(REPOS)    POSITION TO BOTTOM
         DC    C'BOT ',H'32',VL4(REPOS)    POSITION TO BOTTOM
         DC    C'CA  ',H'8',VL4(SYSOUT)    CANCEL FROM INPUT
         DC    C'CAN ',H'8',VL4(SYSOUT)    CANCEL FROM INPUT
         DC    C'CANC',H'8',VL4(SYSOUT)    CANCEL FROM INPUT
         DC    C'C   ',H'12',VL4(REPOS)    SHORT FOR COLUMN
         DC    C'CO  ',H'12',VL4(REPOS)    POSITION TO COLUMN
         DC    C'COL ',H'12',VL4(REPOS)    POSITION TO COLUMN
         DC    C'D   ',H'20',VL4(REPOS)    MOVE FORWARD IN LINES
         DC    C'DA  ',H'4',VL4(SEARCH)    DISPLAY ACTIVE
         DC    C'DB  ',H'0',VL4(ACTIVE)    DISPLAY BATCH JOBS
         DC    C'DC  ',H'0',VL4(ACTIVE)    DISPLAY ALL JOBS
         DC    C'DD  ',H'0',VL4(DDNAME)    DD SUMMARY
         DC    C'DE  ',H'0',VL4(SYSOUT)    DELETE HELD SYSOUT
         DC    C'DEL ',H'0',VL4(SYSOUT)    DELETE HELD SYSOUT
         DC    C'DELE',H'0',VL4(SYSOUT)    DELETE HELD SYSOUT
         DC    C'DF  ',H'44',VL4(SEARCH)   DISPLAY FORMS
         DC    C'DI  ',H'8',VL4(SEARCH)    DISPLAY INPUT
         DC    C'DO  ',H'12',VL4(SEARCH)   DISPLAY OUTPUT
         DC    C'DQ  ',H'40',VL4(SEARCH)   DISPLAY INPUT QUEUES
         DC    C'FA  ',H'4',VL4(REPOS)     FIND ALL STRINGS
         DC    C'FALL',H'4',VL4(REPOS)     FIND ALL STRINGS
         DC    C'F   ',H'4',VL4(REPOS)     SHORT FOR FIND
         DC    C'FI  ',H'4',VL4(REPOS)     FIND STRING
         DC    C'FIND',H'4',VL4(REPOS)     FIND STRING
         DC    C'FT  ',H'8',VL4(REPOS)     FTIME FOR SYSLOG
         DC    C'FTIM',H'8',VL4(REPOS)     FTIME FOR SYSLOG
         DC    C'HB  ',H'24',VL4(REPOS)    MOVE BACKWARD IN HALF PAGES
         DC    C'HF  ',H'20',VL4(REPOS)    MOVE FORWARD  IN HALF PAGES
         DC    C'HI  ',H'24',VL4(SEARCH)   DISPLAY HELD JOBS
         DC    C'HO  ',H'28',VL4(SEARCH)   DISPLAY HELD OUTPUT
         DC    C'JC  ',H'0',VL4(JCL)       JCL FOR JOB
         DC    C'JCL ',H'0',VL4(JCL)       JCL FOR JOB
         DC    C'JH  ',H'0',VL4(HISTORY)   JOB HISTORY
         DC    C'JL  ',H'0',VL4(JLOG)      JLOG FOR JOB
         DC    C'JLOG',H'0',VL4(JLOG)      JLOG FOR JOB
         DC    C'JM  ',H'0',VL4(JMSG)      JOB MESSAGES FOR JOB
         DC    C'JMSG',H'0',VL4(JMSG)      JOB MESSAGES FOR JOB
         DC    C'L   ',H'0',VL4(LIST)      SHORT FOR LIST
         DC    C'LI  ',H'0',VL4(LIST)      LIST JES2 DATASET
         DC    C'LIST',H'0',VL4(LIST)      LIST JES2 DATASET
         DC    C'MD  ',H'16',VL4(REPOS)    POSITION TO RECORD
         DC    C'M   ',H'36',VL4(REPOS)    MODEL                   MOD5
         DC    C'MO  ',H'36',VL4(REPOS)    MODEL                   MOD5
         DC    C'MOD ',H'36',VL4(REPOS)    MODEL                   MOD5
         DC    C'MODE',H'36',VL4(REPOS)    MODEL                   MOD5
         DC    C'OP  ',H'0',VL4(DOPTION)   OPTION                 LBDMC
         DC    C'OPT ',H'0',VL4(DOPTION)   OPTION                 LBDMC
         DC    C'PB  ',H'24',VL4(REPOS)    MOVE BACKWARD IN PAGES
         DC    C'PF  ',H'20',VL4(REPOS)    MOVE FORWARD  IN PAGES
         DC    C'RE  ',H'4',VL4(SYSOUT)    REQUEUE SYSOUT
         DC    C'REQ ',H'4',VL4(SYSOUT)    REQUEUE SYSOUT
         DC    C'ROUT',H'0',VL4(ROUTE)     REROUTES JOBS
         DC    C'SA  ',H'4',VL4(SAVE)      SAVE QUALIFIED DATASET
         DC    C'SAVE',H'4',VL4(SAVE)      SAVE QUALIFIED DATASET
         DC    C'SL  ',H'32',VL4(SYSLOG)   SYSLOG BROWSER
         DC    C'SLOG',H'32',VL4(SYSLOG)   SYSLOG BROWSER
         DC    C'ST  ',H'0',VL4(SEARCH)    STATUS
         DC    C'STAT',H'0',VL4(SEARCH)    STATUS
         DC    C'T   ',H'28',VL4(REPOS)    SHORT FOR TOP
         DC    C'TO  ',H'28',VL4(REPOS)    POSITION TO TOP
         DC    C'TOP ',H'28',VL4(REPOS)    POSITION TO TOP
         DC    C'TSO ',H'32',VL4(TSO)      ISSUE ANY TSO COMMAND
         DC    C'UP  ',H'24',VL4(REPOS)    MOVE BACKWARD IN LINES
         DC    C'XB  ',H'16',VL4(HEXBLK)   DISPLAY DISK RECORD
         DC    C'XD  ',H'0',VL4(XDS)       LIST ANY DATASET
         DC    C'XI  ',H'0',VL4(INITS)     DISPLAY INITIATORS
         DC    C'XS  ',H'36',VL4(SEARCH)   DISPLAY STARTED TASKS (DS)
         DC    C'XT  ',H'32',VL4(SEARCH)   DISPLAY ALL TSO USERS (DT)
         DC    C'XU  ',H'0',VL4(DUMP)      DUMP CONTROL BLOCK
         DC    C'@   ',H'16',VL4(REPOS)    POSITION TO RECORD
         DC    C'+   ',H'20',VL4(REPOS)    MOVE FORWARD IN LINES
         DC    C'-   ',H'24',VL4(REPOS)    MOVE BACKWARD IN LINES
HELPCC   DC    X'FF0000000000',VL4(HELP)   END OF TABLE     ***********
WPASS    DC    X'C1115D7F1140403C4040001D4C13'  *** SPF CLEAR SCREEN
         QCOMMON
         ORG   QWRKSPC
OFFSET   DS    H
LENGTH   DS    H
FIELD    DS    CL8
RPASS    DS    CL8
         END
