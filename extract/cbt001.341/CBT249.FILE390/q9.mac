HEXBLK   QSTART 'QUEUE COMMAND - HEXADECIMAL DUMP OF A BLOCK   Q9'
         USING QCKPT,R10      BASE REG FOR CKPT WORK AREA
         L     R10,QVCKPT     LOAD BASE REG
         USING QDISPLAY,R9    BASE REG FOR DISPLAY WORK AREA
         L     R9,QVDSPL      LOAD BASE REG
***********************************************************************
*                                                                     *
*   VALIDATE AND CONVERT BLOCK ADDRESS                                *
*                                                                     *
***********************************************************************
         LH    R1,QLNG1       LENGTH OF USER PARM
         LTR   R1,R1          IS THE LENGTH ZERO?
         BNP   TILT           YES. TILT.
         CH    R1,=H'8'       IS THE LENGTH TOO BIG?
         BH    TILT           YES. TILT.
         MVC   QPARM3,QPARM2  LEAVE THE ORIGINAL ALONE
         MVC   QPARM2,QPARM1  LEAVE THE ORIGINAL ALONE
         TR    QPARM2,TABLEH  CONVERT TO HEX
         EX    R1,PACK        PACK INTO QCTRAK
***********************************************************************
*                                                                     *
*   READ THE BLOCK FROM HASPACE                                       *
*                                                                     *
***********************************************************************
         L     R2,QCBLKA      BLOCK IOAREA ADDR
         LH    R1,HASPACE+62  BLKSIZE FROM DCB
         BCTR  R1,0           SUBTRACT 1
         N     R1,ROUND       ROUND TO PREVIOUS 64 BYTE BOUNDARY
         AR    R1,R2          ADD BASE OF BUFFER
         MVC   0(64,R1),QBLANK BLANK THE LAST 64 BYTES OF BUFFER
         LR    R1,R2          PARM FOR READSPC
         L     R15,=V(READSPC) ROUTINE TO READ HASPACE
         BALR  R14,R15        GO TO IT
***********************************************************************
*                                                                     *
*   PRINT THE BLOCK                                                   *
*                                                                     *
***********************************************************************
*
*** NOTE - THIS ROUTINE ASSUMES A BLOCKSIZE OF 4008
*
         L     R3,QCIOTA      USE THE IOT AREA AS A WORK AREA
         ST    R3,QDMSGA      STORE ADDR OF PRINT LINE
         MVC   QDMLNG,QDLNELEN  LENGTH OF MESSAGE
         MVC   QDHLINE,QBLANK BLANK THE TITLE LINE
         USING IN,R2          BASE REG FOR RAW BLOCK
         USING OUT,R3         BASE REG FOR PRINTABLE LINES
         SR    R4,R4          START OFFSET AT ZERO
LOOP     MVC   OLINE1,QBLANK  BLANK THE WORK AREA
         MVC   O1,I1          MOVE RECORD TO PRINT LINE
         MVC   O2,I2
         MVC   O3,I3
         MVC   O4,I4
         MVC   O5,I5
         MVC   O6,I6
         MVC   O7,I7
         MVC   O8,I8
         MVC   OLINE2,OLINE1  COPY INTO LINE2
         STH   R4,QPARM2      STORE OFFSET
         UNPK  OFFSET(5),QPARM2(3) CONVERT TO HEX
         TR    OFFSET,TABLEP  TRANSLATE TO PRINTABLE CHARACTERS
         MVI   OFFSET+4,C' '  CLEAR GARBAGE BYTE
         TR    ODATA1,TABLEU  TRANSLATE TO UPPER HEX
         TR    ODATA2,TABLEL  TRANSLATE TO LOWER HEX
         L     R15,=V(DISPLAY) ADDR OF DISPLAY MODULE
         BALR  R14,R15        GO TO IT
         LR    R1,R2          SAVE ADDR OF RECORD
SKIP     LA    R2,64(R2)      NEXT RECORD
         LA    R4,64(R4)      INCREMENT TO NEXT OFFSET
         CH    R4,HASPACE+62  IS THIS THE END?
         BNL   STOP           YES. GO HOME.
         CLC   =C'DUPS',QPARM3  WAS ALL RECORDS REQUESTED?
         BE    LOOP             YES  DISPLAY ALL OF THEM
         CLC   0(64,R1),0(R2) IS THIS RECORD THE SAME AS PREVIOUS?
         BE    SKIP           YES. SKIP IT.
         B     LOOP           PRINT NEXT RECORD
***********************************************************************
*                                                                     *
*   EXCEPTIONS AND RETURN                                             *
*                                                                     *
***********************************************************************
TILT     QTILT '*** BLOCK ADDRESS WAS OMITTED ***'
STOP     QSTOP
         EJECT
***********************************************************************
*                                                                     *
*   MISCELLANY                                                        *
*                                                                     *
***********************************************************************
PACK     PACK  QCTRAK(5),QPARM2(1)     BLOCK ADDRESS
ROUND    DC    0F'0',X'0000FFC0'
         LTORG
* TABLE FOR HEX CONVERT
TABLEH   DC    CL193' '
         DC    X'0A0B0C0D0E0F',CL41' ',C'01234567890',CL6' '
* TABLE FOR HEX UNCONVERT
TABLEP   EQU   *-240
         DC    C'0123456789ABCDEF'
* TABLE USED TO CONVERT TO UPPER HALF OF PRINTABLE HEX
TABLEU DS 0CL256
*     0123456789ABCDEF
 DC C'0000000000000000'
 DC C'1111111111111111'
 DC C'2222222222222222'
 DC C'3333333333333333'
 DC C' 4444444444.<(+×'
 DC C'&&5555555555$*);^'
 DC C'-/666666666,%_>?'
 DC C'7777777777:#@''="'
 DC C'8888888888888888'
 DC C'9999999999999999'
 DC C'AAAAAAAAAAAAAAAA'
 DC C'BBBBBBBBBBBBBBBB'
 DC C'CABCDEFGHICCCCCC'
 DC C'DJKLMNOPQRDDDDDD'
 DC C'EESTUVWXYZEEEEEE'
 DC C'0123456789FFFFFF'
* TABLE USED TO CONVERT TO LOWER HALF OF PRINTABLE HEX
TABLEL DS 0CL256
*     0123456789ABCDEF
 DC C'0123456789ABCDEF'
 DC C'0123456789ABCDEF'
 DC C'0123456789ABCDEF'
 DC C'0123456789ABCDEF'
 DC C' 123456789A     '
 DC C' 123456789A     '
 DC C'  23456789A     '
 DC C'0123456789      '
 DC C'0123456789ABCDEF'
 DC C'0123456789ABCDEF'
 DC C'0132456789ABCDEF'
 DC C'0123456789ABCDEF'
 DC C'0         ABCDEF'
 DC C'0         ABCDEF'
 DC C'01        ABCDEF'
 DC C'          ABCDEF'
         EJECT
* INPUT WORK AREA
IN       DSECT
I1       DS    CL8
I2       DS    CL8
I3       DS    CL8
I4       DS    CL8
I5       DS    CL8
I6       DS    CL8
I7       DS    CL8
I8       DS    CL8
* OUTPUT WORK AREA
OUT      DSECT
OLINE1   DS    0CL132
OFFSET   DS    CL4
         DS    CL2
ODATA1   DS    0CL126
O1       DS    CL8
         DS    C
O2       DS    CL8
         DS    CL2
O3       DS    CL8
         DS    C
O4       DS    CL8
         DS    CL2
O5       DS    CL8
         DS    C
O6       DS    CL8
         DS    CL2
O7       DS    CL8
         DS    C
O8       DS    CL8
OLINE2   DS    0CL132
         DS    CL6
ODATA2   DS    CL126
         QCOMMON
         END
