*PROCESS NAME('QRPROT0') ;
         /* QRPROT0 QUICKREF ROOTING PROCEDURE */
1/*********************************************************************/
 /*                                                                   */
 /*                           Q U I C K R E F                         */
 /*                                                                   */
 /* QUICK REFERENCE PROGRAMM FUER IBM DOKUMENTATIONEN VERSION 1 LEV.0 */
 /*                                                                   */
 /*********************************************************************/
-/*                                             DATUM 10.8.1975
-DESIGN
         F.NUSSBAUMER, GRUNDACKERSTR.31, CH-4414 FUELLINSDORF
-REALISIERUNG
         P.H. MUELLER, ALTKIRCHERSTR.34, CH-4054  BASEL
-COMPILER
         PL/1 OPTIMIZING COMPILER VERSION 1 RELEASE 2 PTF 59
-FUNKTION
         QUICKREF ERSTELLT REFERENZ-LISTEN FUER IBM-LITERATUR NACH DEN
         FOLGENDEN SORTIER-KRITERIEN:
0        FILE-NUMMER, FORM-NUMMER, STANDORT, LITERATUR-TITEL
0        DAS ERSTELLEN DIESER REFERENZLISTEN IST UEBER DEN KONTROLL-
         INPUT FREI WAEHLBAR.
0        ZUSAETZLICH ERSTELLT DAS PROGRAMM BUCH-TITELBLAETTER ZUR
         PHYSISCHEN TRENNUNG VON MANUALS, BUCH-ETIKETTEN UND
         REGISTRATUR-ETIKETTEN (FUER HAENGEMAPPEN).
1INPUT
         DER FOLGENDE DATENSATZ STELLT DEN EINZIGEN PROGRAMM-INPUT DAR:
0
         TEXTIN               DATEN- UND KONTROLLINPUT
-
         DATEN-RECORD:  80 BYTES
         01        10            24    30                            80
         .         .             .     .                             .
         FILE-NR   FORM-NR       BOOK  TEXT------------------------TEXT
-        KONTROLL-RECORD:  PL/1 DATA
0        01
         .
0        ++SELECT SELECTION 1 BIS SELEKTION N ;
0                   TAUCHT DIESE KARTE AUF, SO WIRD EIN NEUER PROGRAMM-
                    DURCHLAUF GESTARTET
0        ++LABEL
0                   FUER ALLE NACHFOLGENDEN DATENKARTEN WERDEN BUCH- UND
                    REGISTRATUR-ETIKETTEN GEDRUCKT
-SELEKTION
         ANSCHLIESSEND AN DAS ++SELECT SCHLUESSELWORT KOENNEN BIS ZUM
         NAECHSTEN STRICHPUNKT FOLGENDE PROGRAMM-SELEKTIONEN,
         GETRENNT DURCH KOMMATA, ANGEGEBEN WERDEN:
0        FILELIST=1 / 0            REFERENZLISTE NACH  FILE-NUMMER
         FORMLIST=1 / 0            REFERENZLISTE NACH  FORMNUMMER
         BOOKLIST=1 / 0            REFERENZLISTE NACH  BUCH
         TEXTLIST=1 / 0            REFERENZLISTE NACH  TEXT
0        BOOKLABEL=1 / 0           ERSTELLEN VON BUCHTITEL UND ETI-
                                   KETTEN
         FORMLABEL=1 / 0           ERSTELLEN VON REGISTRATUR-ETIKETTEN
0        LINECOUNT=NN              ANZAHL DRUCKZEILEN PRO SEITE
         TITLE='XXX'               XXX= LISTENTITEL BIS ZU 70 ZEICHEN
0        TEXT1='XXXXXXX'           KOLONNEN-UEBERSCHRIFT 1
         TEXT2='XXXXXXX'           KOLONNEN-UEBERSCHRIFT 2
         TEXT3='XXXXXXX'           KOLONNEN-UEBERSCHRIFT 3
         TEXT4='XXXXXXX'           KOLONNEN-UEBERSCHRIFT 4
1OUTPUT
         FOLGENDE DATENSAETZE WERDEN ALS OUTPUT ERSTELLT
0        SYSPRINT                  ALS PROGRAMM-KONTROLLISTE
0        TEXTOUT                   REFERENZLISTEN MIT SELEKTIERBARER
                                   ANZAHL VON ZEILEN PRO SEITE
0        LABELS                    TITELBLAETTER, BUCH- UND REGISTRATUR-
                                   ETIKETTEN
-WORK-DATENSAETZE
         DA DAS PROGRAMM MIT DEM PL/1-INTERNEN SORT  PLISRTD  ARBEITET,
         SIND FOLGENDE SORT-DATENSAETZE ZU SPEZIFIZIEREN:
0        SORTLIB                   SORT PROGRAMM BIBLIOTHEK
         SORTOUT                   SORT PROGRAMM KONTROLLLISTE
         SORTWK01 )
         SORTWK02 )>               SORT ARBEITS-DATENBEREICHE
         SORTWK03 )
1BEISPIEL
         //QUICKREF     JOB  0833,NUSSBAUMER,REGION=120K
         //STEP1        EXEC PGM=QUICKREF
         //STEPLIB      DD   DISP=SHR,DSN=SYS1.PPLIB
         //SORTLIB      DD   DISP=SHR,DSN=SYS1.SORTLIB
         //SORTWK01     DD   UNIT=SYSDA,SPACE=(CYL,(5,2),,CONTIG)
                 02
                 03
         //SYSOUT       DD   SYSOUT=A
         //SYSPRINT     DD   SYSOUT=A
         //PLIDUMP      DD   SYSOUT=A
         //LABELS       DD   SYSOUT=A
         //TEXTOUT      DD   SYSOUT=(C,,A4Q1)
         //TEXTIN       DD   *
         ++SELECT TITLE='LISTE DER VERFUEGBAREN TITEL BEI P.H.MUELLER',
                  LINECOUNT=46,FORMLABEL=0 ;
         DATEN
           ×
           ×
           ×
         ++LABEL
         DATEN
           ×
           ×
           ×
         ++SELECT TITLE='LISTE VON L.MEIER',LINECOUNT=25,FILELIST=0 ;
         DATEN
           ×
           ×
         USW.
                                                                      */
1        /* QRPROT0 QUICKREF ROOTING PROCEDURE */
0QRPROT0:      PROC OPTIONS(MAIN) ;
1/*      QRPROT0 QUICKREF ROOTING PROCEDURE                           */
 /*      PROCEDURE DESCRIPTION:
0ATTRIBUTES
         PL/I EXTERNAL MAIN PROCEDURE, SERIAL REUSABLE
0ENTRY POINT
         QRPROT0
0INPUT PARAMETER
         SPECIFIED, BUT NOT USED EXECUTE PARAMETER
0RETURN PARAMETER
         NOT USED
0EXIT
         RETURN TO CALLER
0RETURN CODES
         PROPAGATED SORT RETURN CODE
0EXTERNAL PROCEDURES
         QRPCIP0    INPUT CONTROL ROUTINE
         QRPE150    SORT EXIT E15
         QRPE350    SORT EXIT E35
0INTERNAL PROCEDURES
         NONE
0SPECIAL BUILDIN FUNCTIONS
         PLISRTD    PL/I SORT WITH INPUT AND OUTPUT EXIT
         PLIRETC    RETURN CODE FUNCTION
         PLIDUMP    DUMP ROUTINE
0MODIFICATIONS
         NONE
0FUNCTION - OPERATION
         ROOTING PROCEDURE FOR QUICKREF PROGRAM.
         THIS ROUTINE CONTROLS ALSO THE REUSABILITY OF ALL PROCEDURS  */
1        /* CONTROL INPUT PROCESSING PROCEDURE */
         DCL   QRPCIP0 ENTRY EXTERNAL RETURNS(CHAR(4)) ;
0        /* SORT INPUT EXIT E15 */
         DCL   QRPE150 ENTRY EXTERNAL RETURNS(CHAR(100)) ;
0        /* SORT OUTPUT EXIT E35 */
         DCL   QRPE350 ENTRY(CHAR(100)) ;
0              /* FILES FOR CONTROL INPUT AND OUTPUT */
0        DCL   SYSPRINT FILE EXTERNAL STREAM OUTPUT PRINT  ;
-              /* FILES FOR TEXT INPUT AND OUTPUT */
0        DCL   TEXTIN   FILE EXTERNAL STREAM INPUT ,
               TEXTOUT  FILE EXTERNAL STREAM OUTPUT PRINT ,
               LABELS   FILE EXTERNAL STREAM OUTPUT PRINT ;
-              /* INPUT TEXT STRUCTURE */
0        DCL   01 QRPREC0 EXTERNAL,
                  02 FILE CHAR(09),
                  02 FORM CHAR(14),
                  02 BOOK CHAR(06),
                  02 TEXT CHAR(51),
                  02 SORT ,
                     03 ID   BIN FIXED(15,0),
                     03 TEXT CHAR(18) ;
         DCL      SELECT CHAR(9) DEF QRPREC0.FILE ;
-              /* PROGRAM SELECTION PARAMETER */
0        DCL   01 QRPCTL0 EXTERNAL,
                  02 FILELIST  BIN FIXED(15,0) ,
                  02 FORMLIST  BIN FIXED(15,0) ,
                  02 BOOKLIST  BIN FIXED(15,0) ,
                  02 TEXTLIST  BIN FIXED(15,0) ,
                  02 BOOKLABEL BIN FIXED(15,0) ,
                  02 FORMLABEL BIN FIXED(15,0) ,
                  02 LINECOUNT BIN FIXED(15,0) ,
                  02 USECOUNT  BIN FIXED(15,0) ,
                  02 E15_START BIN FIXED(15,0) ,
                  02 E35_START BIN FIXED(15,0) ,
                  02 PAGECOUNT BIN FIXED(15,0),
                  02 TITLE     CHAR(70)        ,
                  02 TEXT1     CHAR(07)        ,
                  02 TEXT2     CHAR(07)        ,
                  02 TEXT3     CHAR(07)        ,
                  02 TEXT4     CHAR(07)        ;
0        DCL   (PLIRETC,PLISRTD) BUILTIN ;
         DCL   RETURN_CODE BIN FIXED(31,0) ;
         ON ERROR BEGIN ;
            ON ERROR SYSTEM ;
            CALL PLIDUMP('T F C H B') ;
            CALL PLIRETC(16) ;
         END ;
0        DCL   DATE BUILTIN ;
         DCL   DATUM CHAR(08) STATIC EXTERNAL ;
         DATUM=SUBSTR(DATE,5,2)××SUBSTR(DATE,3,2)××SUBSTR(DATE,1,2) ;
1        USECOUNT = 1 ;                 /* SET PROGRAM USE COUNT      */
0ROT_RETRY:    /* PROGRAM REUSABILITY                                 */
0        E15_START,E35_START = 0 ;      /* SET FIRST ENTRY SWITCHES   */
         IF QRPCIP0 = 'STOP'            /* VALIDATE CONTROL           */
            THEN GOTO ROT_STOP ;        /* AND DATA INPUT             */
         CALL PLISRTD(' SORT FIELDS=(81,20,A),FORMAT=CH ',
                      ' RECORD TYPE=F,LENGTH=(100)      ',
                        50000,         /* DYNAMIC SORT SPACE          */
                        RETURN_CODE,    /* SORT RETURN CODE           */
                        QRPE150,        /* SORT INPUT EXIT            */
                        QRPE350) ;      /* SORT OUTPUT EXIT           */
         IF USECOUNT > 0
            THEN GOTO ROT_RETRY ;
0ROT_STOP:
         CALL PLIRETC(RETURN_CODE) ;    /* PROPAGATE SORT RETURN CODE */
0   END   QRPROT0;
*PROCESS NAME('QRPE150') ;
0        /* QRPE150 SORT INPUT EXIT E15 */
0QRPE150:      PROC RETURNS(CHAR(100)) ;
1/*      QRPE150 SORT INPUT EXIT E15                                  */
 /*      PROCEDURE DESCRIPTION:
0ATTRIBUTES
         PL/I EXTERNAL PROCEDURE, SERIAL REUSABLE
0ENTRY POINT
         QRPE150
0INPUT PARAMETER
         NONE
0RETURN PARAMETER
         E15_SORT_RECORD / 100 BYTE SORT INPUT RECORD
0EXIT
         RETURN TO CALLER
0RETURN CODE
         12    PROCESS RECORD
         08    NO MORE TEXT AVAILABLE
0EXTERNAL PROCEDURES
         NONE
0INTERNAL PROCEDURES
         NONE
0MODIFICATIONS
         NONE
0MESSAGES
0FUNCTION - OPERATION
         TEXT RECORDS ARE READ FROM THE TEXTIN FILE AND DUPLICATED
         FOR SORT PROCESSING. BYTE 81-100 FROM THE SORT RECORD ARE
         USED FOR SORT FIELD.
         THE SORT FIELD IS PREPARED FOR SELECTIVE LIST PROCESSING.   */
1              /* FILES FOR CONTROL INPUT AND OUTPUT */
0        DCL   SYSPRINT FILE EXTERNAL STREAM OUTPUT PRINT  ;
-              /* FILES FOR TEXT INPUT AND OUTPUT */
0        DCL   TEXTIN   FILE EXTERNAL STREAM INPUT ,
               TEXTOUT  FILE EXTERNAL STREAM OUTPUT PRINT ,
               LABELS   FILE EXTERNAL STREAM OUTPUT PRINT ;
-              /* INPUT TEXT STRUCTURE */
0        DCL   01 QRPREC0 EXTERNAL,
                  02 FILE CHAR(09),
                  02 FORM CHAR(14),
                  02 BOOK CHAR(06),
                  02 TEXT CHAR(51),
                  02 SORT ,
                     03 ID   BIN FIXED(15,0),
                     03 TEXT CHAR(18) ;
0        DCL   SELECT CHAR(9) DEF QRPREC0.FILE ;
0        DCL   INTEXT CHAR(71) DEF QRPREC0.FORM ;
-              /* PROGRAM SELECTION PARAMETER */
0        DCL   01 QRPCTL0 EXTERNAL,
                  02 FILELIST  BIN FIXED(15,0) ,
                  02 FORMLIST  BIN FIXED(15,0) ,
                  02 BOOKLIST  BIN FIXED(15,0) ,
                  02 TEXTLIST  BIN FIXED(15,0) ,
                  02 BOOKLABEL BIN FIXED(15,0) ,
                  02 FORMLABEL BIN FIXED(15,0) ,
                  02 LINECOUNT BIN FIXED(15,0) ,
                  02 USECOUNT  BIN FIXED(15,0) ,
                  02 E15_START BIN FIXED(15,0) ,
                  02 E35_START BIN FIXED(15,0) ,
                  02 PAGECOUNT BIN FIXED(15,0),
                  02 TITLE     CHAR(70)        ,
                  02 TEXT1     CHAR(07)        ,
                  02 TEXT2     CHAR(07)        ,
                  02 TEXT3     CHAR(07)        ,
                  02 TEXT4     CHAR(07)        ;
0        DCL   E15_IN LABEL(E15_FILE,E15_FORM,E15_BOOK,E15_TEXT0,
                            E15_TEXT1)STATIC ;
0        DCL   SKIP_TEXT(05) CHAR(4) VAR STATIC
               INIT('IBM','FROM','AND','THE','FOR') ;
0        DCL   DISPL BIN FIXED(15,0) STATIC ;
0        DCL   E15_SORT_RECORD CHAR(100) BASED(P) ;
0        DCL   (I,K,L) BIN FIXED(15,0) ;
         DCL   (SUBSTR,PLIRETC) BUILTIN ;
         DCL   P  POINTER ;
         DCL   ADDR BUILTIN ;
1        ON ENDFILE(TEXTIN)
            BEGIN ;
               USECOUNT = -1 ;          /* IND NO NEXT ENTRY          */
               GOTO E15_STOP ;          /* STOP PROCESSING            */
            END ;
0        IF E15_START = 0               /* CHECK FOR FIRST            */
          THEN DO ;
            E15_START = 1 ;
            GOTO E15_FIRST ;
           END ;
                                       /* PROCEDURE ENTRY             */
-        GOTO  E15_IN ;                 /* NEXT ENTRY                 */
-E15_FILE:     /* THE TEXTIN RECORD IS READ AND VERIFIED FOR THE      */
               /* FOLLOWING CONTROL KEYWORDS:                         */
               /* ++SELECT    SORT AND START NEW PROCESSING           */
               /* ++LABEL     PROCESS LABEL PROCESSING FOR ALL        */
               /*             FOLLOWING INPUT RECORDS                 */
               /* IF FILELIST=1 IS SELECTED, THE RECORD IS PASSED     */
               /* TO THE SORT                                         */
0        GET FILE(TEXTIN) EDIT(QRPREC0.FILE)(COL(1),A(9)) ;
0E15_FIRST :
         IF QRPREC0.FILE = '++SELECT'
            THEN GOTO E15_RETURN ;      /* START SORT PROCESSING      */
0        IF QRPREC0.FILE = '++LABEL'
            THEN DO ;
                    BOOKLABEL = BOOKLABEL + 1 ;
                    FORMLABEL = FORMLABEL + 1 ;
                    GOTO E15_FILE ;
                 END ;
-        E15_IN = E15_FORM ;            /* SET NEXT ENTRY             */
         GET FILE(TEXTIN) EDIT(INTEXT)(A(71)) ;
0        IF FILELIST > 0
            THEN DO ;
           QRPREC0.SORT.TEXT = QRPREC0.FILE ;  /*FILETEXT & SORTID    */
           QRPREC0.SORT.ID   = 10  ;          /*TO SORT FIELD         */
           GOTO E15_SORT ;
                 END ;
-E15_FORM:     /* PREPARATION FOR SORT BY FORM                        */
         E15_IN = E15_BOOK;              /* SET NEXT ENTRY ->         */
         IF (FORMLIST > 0 ) × (FORMLABEL > 1)
            THEN DO ;
           QRPREC0.SORT.TEXT = QRPREC0.FORM ;  /* FORMTEXT & SORTID   */
           QRPREC0.SORT.ID   = 20 ;           /* TO SORT FIELD        */
           IF FORMLABEL > 1
              THEN QRPREC0.SORT.ID = 21 ;
                    GOTO E15_SORT ;
                 END;
-E15_BOOK:     /* PREPARATION FOR SORT BY BOOK NUMBER                 */
0        E15_IN = E15_TEXT0 ;           /* SET NEXT ENTRY             */
0        IF (BOOKLIST > 0) × (BOOKLABEL > 1)
            THEN DO ;
           QRPREC0.SORT.TEXT = QRPREC0.BOOK ; /* BOOKTEXT & SORTID    */
           QRPREC0.SORT.ID   = 30 ;          /* TO SORT FIELD         */
           IF  BOOKLABEL > 1
               THEN QRPREC0.SORT.ID = 31 ;
                    GOTO E15_SORT ;
                 END ;
-E15_TEXT0:    /* FIRST ENTRY FOR TEXT PROCESSING                     */
0        IF TEXTLIST = 0                /* CHECK FOR TEXT PROCESSING  */
            THEN GOTO E15_FILE ;        /* REQUEST                    */
         QRPREC0.SORT.ID = 40 ;       /* SET TEXT ID                  */
         DISPL = 1 ;                    /* SET START POS              */
0        E15_IN = E15_TEXT1 ;           /* SET NEXT ENTRY ->          */
0E15_TEXT1:    /* STANDARD TEXT PROCESSING                            */
         I = DISPL ;                    /* SAVE DISPLACEMENT          */
0        DO WHILE (I<49) ;              /* CHECK FOR START CHARACTER  */
0           IF (SUBSTR(QRPREC0.TEXT,I,1) ^= ' ' )
               THEN GOTO E15_TEXT2 ;
            I = I + 1 ;                 /* INCREMENT DISPLACEMENT     */
0        END ;
         GOTO E15_FILE ;                /* NO START CHARACTER FOUND   */
0E15_TEXT2:
         DISPL = I ;                    /* SET START POSITION         */
0        DO WHILE (DISPL < 52) ;          /* UP TO LAST TEXT POSITION */
            IF SUBSTR(QRPREC0.TEXT,DISPL,1) = ' '   /*VERIFY          */
               THEN GOTO E15_TEXT3 ;                /*BLANK SEPAR     */
            IF SUBSTR(QRPREC0.TEXT,DISPL,1) = ','   /*VERIFY          */
               THEN GOTO E15_TEXT3 ;                /*COMMA SEPAR     */
            DISPL = DISPL + 1 ;         /* INCREMENT TO NEXT CHARACT  */
0        END ;
0E15_TEXT3:
0        K = DISPL - I ;                /* CALCULATE KEYWORD LNGT     */
         IF K < 3                       /* CHECK IF IT HAS AT LEAST   */
            THEN GOTO E15_TEXT1 ;       /* 3 CHARACTER                */
         DO L = 1 TO 5;                 /* CHECK SKIP TEXT */
            IF SUBSTR(QRPREC0.TEXT,I,K) = SKIP_TEXT(L)
               THEN GOTO E15_TEXT1 ;    /* CHECK NEXT TEXT ENTRY      */
         END ;
         QRPREC0.SORT.TEXT = SUBSTR(QRPREC0.TEXT,I,K); /*PREP SORT FLD*/
         GOTO E15_SORT ;
-E15_SORT:
         IF QRPREC0.SORT.TEXT = ''      /* SKIP PROCESSING            */
            THEN GOTO E15_IN ;          /* IF BLANK SORT FIELD        */
0        CALL PLIRETC(12) ;             /* MORE INPUT AVAILABLE       */
0        P = ADDR(QRPREC0.FILE) ;
         RETURN(E15_SORT_RECORD) ;
-E15_STOP:     /* STOP SORT PROCESSING                                */
0        USECOUNT = -1 ;                /* DON'T RESCHEDULE           */
-E15_RETURN:   /* START SORT PROCESSING                               */
0        CALL PLIRETC(8);               /* START SORT                 */
0        P = ADDR(QRPREC0.FILE) ;
         RETURN(E15_SORT_RECORD) ;
0END     QRPE150 ;
*PROCESS NAME('QRPE350') ;
0        /* QRPE350 SORT OUTPUT EXIT */
0QRPE350:      PROC(SORTSTRING) ;
1/*      QRPE350 SORT OUTPUT EXIT E35                                 */
 /*      PROCEDURE DESCRIPTION:
0ATTRIBUTES
         PL/I EXTERNAL PROCEDURE, SERIAL REUSABLE
0ENTRY POINT
         QRPE350
0INPUT PARAMETER
         SORTREC / 100 CHARACTER SORT OUTPUT RECORD
0RETURN PARAMETER
         NOT USED
0EXIT
         RETURN TO CALLER
0RETURN CODES
         04    GET NEXT RECORD
         08    STOP PROCESSING
0EXTERNAL PROCEDURES
         NONE
0INTERNAL PROCEDURES
         NONE
0MODIFICATIONS
         NONE
0MESSAGES
0FUNCTION - OPERATION
         THE SORTED PUBLICATION REFERENCE RECORD ARE PASSED FROM THE
         PL/I INTERNAL SORT TO THIS EXIT PROCEDURE.
         THE RECORDS ARE WRITTEN TO THE TEXTOUT FILE. IF LABEL
         PROCESSING IS REQUESTED, THE LABELS ARE WRITTEN TO THE
         LABEL FILE.
                                                                      */
1              /* FILES FOR CONTROL INPUT AND OUTPUT */
0        DCL   SYSPRINT FILE EXTERNAL STREAM OUTPUT PRINT  ;
-              /* FILES FOR TEXT INPUT AND OUTPUT */
0        DCL   TEXTIN   FILE EXTERNAL STREAM INPUT ,
               TEXTOUT  FILE EXTERNAL STREAM OUTPUT PRINT ,
               LABELS   FILE EXTERNAL STREAM OUTPUT PRINT ;
-              /* INPUT TEXT STRUCTURE */
         DCL   01 SORTREC BASED(P),
                  02 FILE CHAR(09),
                  02 FORM CHAR(14),
                  02 BOOK CHAR(06),
                  02 TEXT CHAR(51),
                  02 SORT ,
                     03 ID   BIN FIXED(15,0),
                     03 TEXT CHAR(18) ;
0        DCL   01 QRPREC0 EXTERNAL,
                  02 FILE CHAR(09),
                  02 FORM CHAR(14),
                  02 BOOK CHAR(06),
                  02 TEXT CHAR(51),
                  02 SORT,
                     03 ID   BIN FIXED(15,0),
                     03 TEXT CHAR(18) ;
-              /* PROGRAM SELECTION PARAMETER */
0        DCL   01 QRPCTL0 EXTERNAL,
                  02 FILELIST  BIN FIXED(15,0) ,
                  02 FORMLIST  BIN FIXED(15,0) ,
                  02 BOOKLIST  BIN FIXED(15,0) ,
                  02 TEXTLIST  BIN FIXED(15,0) ,
                  02 BOOKLABEL BIN FIXED(15,0) ,
                  02 FORMLABEL BIN FIXED(15,0) ,
                  02 LINECOUNT BIN FIXED(15,0) ,
                  02 USECOUNT  BIN FIXED(15,0) ,
                  02 E15_START BIN FIXED(15,0) ,
                  02 E35_START BIN FIXED(15,0) ,
                  02 PAGECOUNT BIN FIXED(15,0),
                  02 TITLE     CHAR(70)        ,
                  02 TEXT1     CHAR(07)        ,
                  02 TEXT2     CHAR(07)        ,
                  02 TEXT3     CHAR(07)        ,
                  02 TEXT4     CHAR(07)        ;
0        DCL   REASON CHAR(7) STATIC ;  /* TITLE REASON               */
         DCL   DATE BUILTIN ;
         DCL   PLIRETC BUILTIN;
         DCL   DISPL BIN FIXED(15,0) STATIC ;
         DCL   P POINTER ;
         DCL   (ADDR,SUBSTR) BUILTIN ;
-        DCL   SORTSTRING CHAR(100) ;
-        P = ADDR(SORTSTRING) ;
0        DCL   DATUM CHAR(8) STATIC EXTERNAL ;
-        ON ENDPAGE(TEXTOUT) BEGIN ;
0           PUT FILE(TEXTOUT) PAGE LINE(6)
                EDIT(TITLE,'DATE ',DATUM,'PAGE ',PAGECOUNT)
                    (A(70),X(6),A(5),P'99.99.99',X(2),A(5),P'ZZZ9') ;
0           PUT FILE(TEXTOUT) SKIP(2)
                EDIT((100)'*')(A(100)) ;
0           PUT FILE(TEXTOUT) SKIP(2)
                EDIT('SORT-FIELD',TEXT1,TEXT2,TEXT3,TEXT4,
                     'SORTED BY',REASON)
                    (A(20),A(10),A(13),A(7),A(20),A(10),A(7)) ;
            PUT FILE(TEXTOUT) SKIP(1) ;
0           PAGECOUNT = PAGECOUNT + 1 ; /* INCREMENT PAGE NUMBER      */
         END ;
         IF E35_START > 0               /* SKIP IF NOT FIRST ENTRY    */
            THEN GOTO E35_BEGIN ;
             ELSE QRPREC0 = '' ;
         E35_START,PAGECOUNT,DISPL = 1 ;
0E35_BEGIN:    /* NORMAL PROCESSING                                   */
0        IF QRPREC0.SORT.ID = SORTREC.SORT.ID     /* SKIP IF NO NEW   */
            THEN GOTO E35_COUNTIG;                /* SORT IDENTIFIER  */
         IF SORTREC.SORT.ID < 40
            THEN GOTO E35_TEST2 ;
         REASON = TEXT4;
         GOTO E35_PAGE ;
0E35_TEST2:
         IF SORTREC.SORT.ID < 30
            THEN GOTO E35_TEST3 ;
         REASON = TEXT3 ;
         GOTO E35_PAGE ;
0E35_TEST3:
         IF SORTREC.SORT.ID < 20
            THEN REASON = TEXT1 ;
            ELSE REASON = TEXT2 ;
0E35_PAGE:
         QRPREC0.SORT.ID = SORTREC.SORT.ID ; /* SAVE SORT IDENTIFIER  */
         SIGNAL ENDPAGE(TEXTOUT) ;           /* WRITE NEW TITLE       */
0E35_COUNTIG:
         PUT FILE(TEXTOUT) SKIP(1)      /* WRITE TEXT LINE            */
             EDIT(SORTREC.SORT.TEXT,
                  SORTREC.FILE,
                  SORTREC.FORM,
                  SORTREC.BOOK,
                  SORTREC.TEXT)
                 (A(18),X(2),A(09),X(1),A(13),X(1),A(05),X(01),
                  A(51)) ;
         IF SORTREC.SORT.ID ^= 21      /* CHECK FOR FORM LABELS       */
            THEN GOTO E35_LABEL2 ;
0E35_LABEL1:
         DO WHILE (DISPL < 5) ;
            PUT FILE(LABELS)EDIT(SORTREC.FORM)(A(24),X(10)) ;
            DISPL = DISPL + 1 ;
            GOTO E35_RETURN ;
         END ;
         PUT FILE(LABELS)SKIP(6) ;
         DISPL = 1 ;
         GOTO E35_LABEL1 ;
0E35_LABEL2:
         IF SORTREC.SORT.ID ^= 31
            THEN GOTO E35_RETURN ;
         IF SORTREC.BOOK = QRPREC0.BOOK /* CHECK FOR SAME BOOK        */
            THEN GOTO E35_LABEL3  ;
         PUT FILE(LABELS) PAGE
             EDIT('BOOK',SORTREC.BOOK,SORTREC.BOOK)
                 (A(09),X(2),A(6),COL(90),A(6),SKIP) ;
         QRPREC0.BOOK = SORTREC.BOOK ;
0E35_LABEL3:
         PUT FILE(LABELS) SKIP(2)
             EDIT(SORTREC.FILE,SORTREC.FORM,SORTREC.TEXT,SORTREC.FORM)
                 (A(9),X(2),A(14),X(2),A(51),COL(86),A(14)) ;
0E35_RETURN:
0        CALL PLIRETC(4) ;              /* ASK FOR NEXT RECORD        */
0END     QRPE350 ;
*PROCESS NAME('QRPMSG0') ;
0        /* QRPMSG0  MESSAGE PROCESSING */
0QRPMSG0:      PROC(MSGNUMBER) ;
1/*      QRPMSG0  MESSAGE PROCESSING                                  */
 /*      PROCEDURE DESCRIPTION :
0ATTRIBUTES
         PL/I EXTERNAL PROCEDURE, SERIAL REUSABLE
0ENTRY POINT
         QRPMSG0
0INPUT PARAMETER
         MSGNUMBER BIN FIXED(31,0)
0RETURN PARAMETER
         NOT USED
0EXIT
         RETURN TO CALLER
0RETURN CODE
         NOT USED
0EXTERNAL PROCEDURE
         NONE
0INTERNAL PROCEDURE
         NONE
0MODIFICATIONS
         NONE
0FUNCTION - OPERATION
         THEN MESSAGE NUMBER SELECTED WITH THE INPUT PARAMETER IS
         WRITTEN ON SYSPRINT FILE.
         MESSAGE 001I IS THE ONLY MESSAGE TO BE DISPLAYED ON THE
         SYSTEM OPERATOR CONSOLE.                                     */
1        DCL   MESSAGE(10) STATIC CHAR(72) VAR
          INIT('QRP001I  SYSPRINT DATA DEFINITION CARD MISSING',
               'QRP002I  TEXTIN   DATA DEFINITION CARD MISSING',
               'QRP003I  TEXTOUT  DATA DEFINITION CARD MISSING',
               'QRP004I  LABELS   DATA DEFINITION CARD MISSING',
               'QRP005I  INVALID CONTROL KEYWORD FOUND',
               'QRP006I  INVALID SELECTION KEYWORD FOUND',
               'QRP007I  NO TEXTIN RECORD FOUND',
               'QRP008I  SELECTED PROGRAM FUNCTIONS:',
               'QRP009I  PROGRAM QRP00000 TERMINATED') ;
0        DCL   MSGNUMBER BIN FIXED(31,0) ;
0        IF MSGNUMBER = 1
            THEN DISPLAY(MESSAGE(1)) ;
            ELSE PUT SKIP(2) LIST(MESSAGE(MSGNUMBER)) ;
0END     QRPMSG0 ;
*PROCESS NAME('QRPCIP0') ;
0        /* QRPCIP0  CONTROL INPUT AND VERIFICATION PROCESSING        */
0QRPCIP0:      PROC RETURNS(CHAR(4)) ;
1/*      QRPCIP0  CONTROL INPUT AND VERIFICATION PROCESSING           */
 /*      PROCEDURE DESCRIPTION
0ATTRIBUTES
         PL/I EXTERNAL PROCEDURE, SERIAL REUSABLE
0ENTRY POINT
         QRPCIP0
0INPUT PARAMETER
         NONE
0RETURN PARAMETER
         'NORM'     PROCESSING CAN BE CONTINUED
         'STOP'     PROCESSING MUST BE STOPPED
0RETURN CODE
         04         INVALID KEYWORD, REPLACED BY DEFAULT
         12         MISSING DD STATEMENT
0EXTERNAL PROCEDURES
         QRPMSG0    MESSAGE MODULE
0INTERNAL PROCEDURES
         NONE
0MODIFICATIONS
         NONE
0MESSAGES
         QRP001I
         QRP002I
         WRP003I
         QRP004I
         QRP005I
         QRP006I
         QRP007I
         QRP008I
         QRP009I
0FUNCTION - OPERATION
         ALL REQUIRED DD-NAMES ARE VERIFIED.
         IF THE ++SELECT KEYWORD IS DETECTED, THE SELECTION KEYWORDS
         ARE PROCESSED WITH DATA ORIENTED STREAM PROCESSING           */
1              /* FILES FOR CONTROL INPUT AND OUTPUT */
0        DCL   SYSPRINT FILE EXTERNAL STREAM OUTPUT PRINT  ;
-              /* FILES FOR TEXT INPUT AND OUTPUT */
0        DCL   TEXTIN   FILE EXTERNAL STREAM INPUT ,
               TEXTOUT  FILE EXTERNAL STREAM OUTPUT PRINT ,
               LABELS   FILE EXTERNAL STREAM OUTPUT PRINT ;
-              /* INPUT TEXT STRUCTURE */
0        DCL   01 QRPREC0 EXTERNAL,
                  02 FILE CHAR(09),
                  02 FORM CHAR(14),
                  02 BOOK CHAR(06),
                  02 TEXT CHAR(51),
                  02 SORT ,
                     03 ID   BIN FIXED(15,0),
                     03 TEXT CHAR(18) ;
         DCL      SELECT CHAR(9) DEF QRPREC0.FILE ;
         DCL      DATAFIELD BUILTIN ;
         DCL      ONCHAR    BUILTIN ;
         DCL    PLIRETC BUILTIN ;
-              /* PROGRAM SELECTION PARAMETER */
0        DCL   01 QRPCTL0 EXTERNAL,
                  02 FILELIST  BIN FIXED(15,0) ,
                  02 FORMLIST  BIN FIXED(15,0) ,
                  02 BOOKLIST  BIN FIXED(15,0) ,
                  02 TEXTLIST  BIN FIXED(15,0) ,
                  02 BOOKLABEL BIN FIXED(15,0) ,
                  02 FORMLABEL BIN FIXED(15,0) ,
                  02 LINECOUNT BIN FIXED(15,0) ,
                  02 USECOUNT  BIN FIXED(15,0) ,
                  02 E15_START BIN FIXED(15,0) ,
                  02 E35_START BIN FIXED(15,0) ,
                  02 PAGECOUNT BIN FIXED(15,0),
                  02 TITLE     CHAR(70)        ,
                  02 TEXT1     CHAR(07)        ,
                  02 TEXT2     CHAR(07)        ,
                  02 TEXT3     CHAR(07)        ,
                  02 TEXT4     CHAR(07)        ;
-        DCL   FILELIST BIN FIXED(15,0) DEF QRPCTL0.FILELIST,
               FORMLIST BIN FIXED(15,0) DEF QRPCTL0.FORMLIST,
               BOOKLIST BIN FIXED(15,0) DEF QRPCTL0.BOOKLIST,
               TEXTLIST BIN FIXED(15,0) DEF QRPCTL0.TEXTLIST,
               BOOKLABEL BIN FIXED(15,0) DEF QRPCTL0.BOOKLABEL,
               FORMLABEL BIN FIXED(15,0) DEF QRPCTL0.FORMLABEL,
               TITLE CHAR(70) DEF QRPCTL0.TITLE,
               LINECOUNT BIN FIXED(15,0)DEF QRPCTL0.LINECOUNT,
               TEXT1     CHAR(07) DEF QRPCTL0.TEXT1 ,
               TEXT2     CHAR(07) DEF QRPCTL0.TEXT2 ,
               TEXT3     CHAR(07) DEF QRPCTL0.TEXT3 ,
               TEXT4     CHAR(07) DEF QRPCTL0.TEXT4 ;
0        /* MESSAGE PROCESSING PROCEDURE */
         DCL   QRPMSG0 ENTRY(BIN FIXED(31,0)) EXTERNAL ;
1        ON UNDF(SYSPRINT)              /* NO //SYSPRINT CARD         */
         BEGIN ;
            CALL QRPMSG0(001) ;         /* WRITE MSG 001I             */
            GOTO CIP_ERROR ;            /* ERROR RETURN               */
         END ;
-        ON UNDF(TEXTIN)                /* NO //TEXTIN FILE           */
         BEGIN ;
            CALL QRPMSG0(002) ;         /* WRITE ERROR MSG            */
            GOTO CIP_ERROR ;            /* AND RETURN                 */
         END ;
-        ON UNDF(TEXTOUT)               /* NO //TEXTOUT FILE          */
         BEGIN ;
            CALL QRPMSG0(003) ;         /* WRITE ERROR MSG            */
            GOTO CIP_ERROR ;            /* AND RETURN                 */
         END ;
-        ON UNDF(LABELS)                /* NO //LABELS FILE           */
         BEGIN ;
            CALL QRPMSG0(004) ;         /* WRITE ERROR MSG            */
            BOOKLABEL,FORMLABEL = 0 ;   /* RESET FUNCTION             */
            CALL PLIRETC(4) ;           /* SET RETURN CODE            */
            GOTO CIP_NORMAL ;           /* PROCESS                    */
         END ;
-        ON NAME(TEXTIN)              /* INVALID CONTROL KEYWORD      */
         BEGIN ;
            CALL QRPMSG0(005) ;         /* WRITE ERROR MSG            */
            PUT SKIP LIST('       ',DATAFIELD) ;
            GOTO CIP_CONTINUE ;
         END ;
-        ON CONVERSION                  /* INVALID KEYWORD PARM       */
         BEGIN ;
            CALL QRPMSG0(006) ;         /* WRITE ERROR MSG            */
            PUT SKIP LIST(DATAFIELD,ONCHAR) ;
            GOTO CIP_CONTINUE ;
         END ;
-        ON ENDFILE(TEXTIN)             /* END OF SYSIN FILE          */
         BEGIN ;
            IF USECOUNT = 0             /* FIRST ENTRY         */
               THEN DO ;
                       CALL QRPMSG0(007) ; /* YES, WRITE ERROR MSG    */
                       GOTO CIP_ERROR ;
                    END ;
               ELSE GOTO CIP_STOP ;     /* STOP PROCESSING            */
         END ;
1        IF USECOUNT < 0                /* IS IT STOP IDENTIFIER      */
            THEN GOTO CIP_STOP ;        /* YES, STOP PROCESSING       */
0        IF USECOUNT = 1                /* IS IT FIRST PROGRAM ENTRY  */
            THEN DO;                    /* YES, PERFORM INITIALISAT   */
                 OPEN FILE(SYSPRINT) OUTPUT,
                      FILE(TEXTIN)    INPUT;
                 GET  FILE(TEXTIN) EDIT(SELECT)(A(9)) ;
            END ;
0CIP_NORMAL:                        /* SET DEFAULT VALUES             */
-        FILELIST= 1 ;
         FORMLIST= 1 ;
         BOOKLIST= 1 ;
         TEXTLIST= 1 ;
         BOOKLABEL= 1 ;
         FORMLABEL = 1 ;
         TITLE = 'IBM PUBLICATION TITLES QUICK REFERENCE';
         LINECOUNT = 64 ;
         TEXT1 = 'FILE-NR' ;
         TEXT2 = 'FORM-NR' ;
         TEXT3 = 'BOOK-NR' ;
         TEXT4 = 'TEXT'    ;
0        IF SELECT = '++SELECT'         /* CHECK FOR SELECTION        */
            THEN DO;
0CIP_SELECT2:
                 GET FILE(TEXTIN) DATA  ;
                 GET FILE(TEXTIN) EDIT(SELECT)(COL(1),A(9));
                 IF SELECT = '++SELECT'
                    THEN GOTO CIP_SELECT2 ;
            END ;
0        USECOUNT = USECOUNT + 1 ;      /* INCREMENT USAGE COUNT      */
0                                       /* CHECK AND OPEN FOR LABELS  */
         IF (BOOKLABEL + FORMLABEL) > 0
            THEN OPEN FILE(LABELS) OUTPUT ;
0        CALL QRPMSG0(008) ;            /* WRITE SELECTIONS           */
         PUT SKIP DATA(TITLE) ;
         PUT SKIP DATA(FILELIST,FORMLIST,BOOKLIST,TEXTLIST) ;
         PUT SKIP DATA(BOOKLABEL,FORMLABEL,LINECOUNT) ;
0        OPEN FILE(TEXTOUT) PAGESIZE(LINECOUNT) ;
0        RETURN('NORM') ;               /* NORMAL PROCESSING          */
-CIP_CONTINUE:
         CALL PLIRETC(4) ;
         GOTO CIP_NORMAL ;
-CIP_STOP:
         USECOUNT = -1 ;
         CALL QRPMSG0(009) ;
         RETURN('STOP') ;               /* STOP PROCESSING            */
-CIP_ERROR:
         CALL PLIRETC(12) ;
         GOTO CIP_STOP ;
0END     QRPCIP0 ;
