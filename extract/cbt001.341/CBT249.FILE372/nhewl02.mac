//NHEWL02 JOB ,'LKED DSN/VOLSER ZAP',CLASS=9,TYPRUN=HOLD
/*PROCLIB NER.SP1IPO.CNTL
/*JOBPARM Q=F,I
//*
//ASM     EXEC PGM=IFOX00,REGION=256K,PARM='NODECK,NOLOAD,NOALIGN'
//SYSLIB   DD  DSN=SYS1.SMPMTS,DISP=SHR,DCB=BLKSIZE=6400,
//             VOL=SER=IPORES,UNIT=3330-1
//         DD  DSN=SYS1.AMODGEN,DISP=SHR,
//             VOL=SER=IPODLB,UNIT=3330-1
//         DD  DSN=SYS1.MACLIB,DISP=SHR,
//             VOL=SER=IPORES,UNIT=3330-1
//SYSUT1   DD  UNIT=SYSDA,SPACE=(CYL,(1,1)),DCB=BLKSIZE=1700
//SYSUT2   DD  UNIT=SYSDA,SPACE=(CYL,(1,1)),DCB=BLKSIZE=1700
//SYSUT3   DD  UNIT=SYSDA,SPACE=(CYL,(1,1)),DCB=BLKSIZE=1700
//SYSPRINT DD  DSN=&&LIST,DISP=(,PASS),UNIT=SYSDA,SPACE=(TRK,(20,20))
//SYSIN    DD  *
*ZAP CARD ++USERMOD(NHEWL02)     /*
*ZAP CARD    ADD DSN AND VOLSER INFORMATION TO LINKAGE EDITOR
*ZAP CARD    STOW MESSAGES.                */    .
*ZAP CARD ++VER(Z038) FMID(EPM1102) PRE(NHEWL01,UZ37156) .
*ZAP CARD ++ZAP(HEWLFFNL) .
*ZAP CARD  EXPAND HEWLFFNL(120)
*ZAP CARD  NAME HEWLFFNL
HEWLFFNL CSECT ,
         PRINT GEN
         PRINT DATA
         SPACE 2
TRAP     EQU   HEWLFFNL+X'046C'   TRAP INTERCEPT ADDRESS
PATCH    EQU   HEWLFFNL+X'094C'   PATCH AREA ADDRESS
PSTART   EQU   HEWLFFNL+X'0002'   BASE ADDRESS
R1       EQU   1
REG9     EQU   9
DCBADRS2 EQU   HEWLFFNL+X'0880'   POINTER TO SYSLMOD DCB
MOVE     EQU   HEWLFFNL+X'0474'   EXECUTED MOVE INSTR
MINOR    EQU   HEWLFFNL+X'0728'   POINTER TO MINOR ENQ NAME
         SPACE
         DSECT
LINE     DS    CL120              OUTPUT BUFFER
         SPACE 2
HEWLFFNL CSECT ,
         SPACE 3
         USING PSTART,12
         USING LINE,3
         EJECT ,
*ZAP START VER
         SPACE
         ORG   TRAP               VERIFY INTERCEPT
         SPACE
         EX    REG9,MOVE
RETURN   EQU   *
         SPACE 4
*ZAP START REP
         SPACE
         ORG   TRAP
         B     NEWCODE            BRANCH TO NEW CODE
         EJECT
*ZAP START VER
         SPACE
         ORG   PATCH              VERIFY PATCH AREA
         DC    96X'00'            SHOULD BE ZEROS
*ZAP START REP
         ORG   PATCH
         SPACE
NEWCODE  EQU   *                  ENTRY TO NEW CODE
         EX    REG9,MOVE          PATCHED OUT INSTRUCTION
         LA    REG9,LINE+52
         CLI   LINE+15,C'D'       '...DOES NOT EXIST...' MSG ?
         BE    MOVEDSN            YES, GO PUT IN DSN/VOLSER
         CLI   LINE+15,C'N'       '...NOW...' MSG ?
         BNE   RETURN             NO, THEN QUIT NOW
         LA    REG9,LINE+31
         CLI   LINE+19,C'R'       '...NOW RELPACED...' MSG ?
         BE    MOVEDSN            YES, GO PUT IN DSN/VOLSER
         LA    REG9,LINE+28       NO, ASSUME '...NOW ADDED...' MSG
MOVEDSN  EQU   *
         L     R1,MINOR           ADDR OF MINOR ENQ NAME
         MVC   0(44,REG9),0(R1)   MOVE DSN TO OUTPUT BUFFER
SCANDSN  EQU   *
         LA    REG9,1(,REG9)      SCAN TO END OF DSN
         CLI   0(REG9),C' '
         BNE   SCANDSN
         MVC   1(3,REG9),ONTEXT   MOVE 'ON ' TO OUTPUT BUFFER
         L     R1,DCBADRS2        R1 --> DCB
         L     R1,44(,R1)         R1 --> DEB
         L     R1,32(,R1)         R1 --> UCB
         MVC   4(6,REG9),28(R1)   MOVE VOLSER TO OUTPUT BUFFER
         B     RETURN             RETURN TO MAIN CODE
ONTEXT   EQU   *
         DC    C'ON '
         SPACE 5
*ZAP CARD  IDRDATA NHEWL02
*ZAP STOP
         END
//*
//LIST1   EXEC PGM=IEBGENER
//SYSPRINT DD  DUMMY
//SYSIN    DD  DUMMY
//SYSUT1   DD  DSN=&&LIST,DISP=(OLD,PASS)
//SYSUT2   DD  SYSOUT=A
//*
//ZAPPER  EXEC PL1XCG,TEST=
//PL1.SYSIN DD DSN=NER.SP1IPO.CNTL(ASMTOZAP),DISP=SHR
//GO.IN    DD  DSN=&&LIST,DISP=(OLD,DELETE)
//OUT      DD  DSN=&&PTFIN,DISP=(NEW,PASS),
//             SPACE=(TRK,(1,1)),UNIT=SYSDA,
//             DCB=(RECFM=FB,LRECL=80,BLKSIZE=3120)
//*
//LIST2   EXEC PGM=IEBGENER
//SYSPRINT DD  DUMMY
//SYSIN    DD  DUMMY
//SYSUT1   DD  DSN=&&PTFIN,DISP=(OLD,PASS)
//SYSUT2   DD  SYSOUT=A
//*
//ZAP     EXEC SMP4APLY
//SMPCNTL  DD *
 REJECT  S(NHEWL02) .
 RESETRC .
 RECEIVE .
 APPLY   G(NHEWL02) DIS(NO) .
//SMPPTFIN DD  DSN=&&PTFIN,DISP=(OLD,DELETE)
