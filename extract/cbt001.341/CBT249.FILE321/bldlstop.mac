BLDLSTOP TITLE 'PROGRAM TO START OR STOP DYNAMIC BLDL'
XXBLDLSW CSECT
*
*   PARM VALUE      ACTION
*
*       S         STARTS DYNAMIC BLDL, IF COUNTERS=0 THEN RESETS TIME
*       P         STOPS DYNAMIC BLDL
*       N         STOPS DYNAMIC BLDL AND RESETS COUNTERS
*
**
***      EQUATE REGISTERS AND SET UP DYNAMIC SAVEAREA
**
*
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9               POINTS TO DYNAMIC-BLDL MODULE IN NUCLEUS
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         PRINT NOGEN
         B     26(,R15)                 BRANCH AROUND ID
         DC    AL1(21),CL8'XXBLDLSW'    PROGRAM NAME
         DC    CL8'&SYSDATE'            DATE
         DC    CL5'&SYSTIME'            TIME
         STM   R14,R12,12(R13)          SAVE REGS IN HI SAVE AREA
         LR    R12,R15                  SET UP BASE
         USING XXBLDLSW,R12             OF R12
         LR    R2,R1                    SAVE PARAMS
         LR    R11,R13                   SAVE CALLERS SAVE AREA ADDR
         LA    R13,SAVE1
         ST    R11,SAVE1+4               SAVE CALLERS SAVE AREA ADDR
         ST    R13,8(R11)                SAVE OURS IN CALLERS
         SPACE 4
         L     R1,0(R2)                 POINT TO PARM FIELD
         CLI   2(R1),C'S'               IS IT START ?
         BE    START                    GO SET START
         CLI   2(R1),C'P'               IS IT STOP ?
         BE    SETSP                    YES - SET STOP
         CLI   2(R1),C'N'               IS IT STOP-RESET ?
         BNE   BADPARM
         MVI   SW2,X'01'                YES, SET RESET-SWITCH
         SPACE
SETSP    MVI   SW,X'F0'                 SET STOP SWITCH
         B     GO
         SPACE 2
START    DS    0H
         MVI   SW,X'E0'                 SET SWITCH START
GO       DS    0H
         L     R2,16                    CVT
         L     R2,X'C8'(R2)             SCVT
         L     R2,X'84'(R2)             SVCTABLE
         LA    R2,X'90'(R2)             BLDL ENTRY
         L     R10,0(R2)                BLDL CODE STARTS HERE !
         USING PGMDS,R10
         CLC   PGMID,$CHECK1            CHECK IT OUT
         BNE   BADCODE                  NO GO HOMETIME
         CLC   STATUS,=C'OKAY'          OPERATING ?
         BNE   BADSTAT                   NO, DISABLED
         L     R1,ADIS1
         CLC   1(1,R1),SW               CORRECT MODE ?
         BE    DONEBE4                  NO - ALREADY SET
         TM    SW,X'10'                 IS IT STOP
         BZ    VERSTART                 NO - GO CHECK OUR CODE
         CLC   0(2,R1),$CHECK2P         AND A BIT MORE
         BNE   BADCODE                  THIS BIT NO GOOD
         L     R1,ADIS2
         CLC   0(2,R1),$CHECK2P         AND EVEN A BIT MORE
         BNE   BADCODE                  THIS BIT NO GOOD
         B     GODIRTY                  GO OVERWRITE
VERSTART DS    0H
         CLC   0(2,R1),$CHECK2S         AND A BIT MORE
         BNE   BADCODE                  THIS BIT NO GOOD
         L     R1,ADIS2
         CLC   0(2,R1),$CHECK2S         AND A BIT MORE
         BNE   BADCODE                  THIS BIT NO GOOD
         TIME  DEC
         LR    R5,R0
GODIRTY  DS    0H
         MODESET KEY=ZERO
         LA    R15,DIRTY1               OVERWRITE CODE PART ONE
         BALR  R14,R15                  TRAMPLE TRAMPLE
         MODESET KEY=NZERO
         TM    SW,X'10'                 WAS IT STOP ?
         BZ    MSGSTART                 NO - JUST GO ISSUE MSG
         L     R2,ATAB                  R2 ==> TABLE
         LM    R3,R5,0(R2)              PICK UP R3 = START
*                                               R4 = ENTRY SIZE
*                                               R5 = LAST ENTRY
         LA    R7,12(R2)                GET ADDR OF PRESENT ENTRY
         LR    R6,R5                    SAVE LAST ENTRY PTR
         AR    R5,R4                    POINT TO END OF TABLE
         LA    R4,8                     SIZE OF INCREMENT
         SR    R5,R4                    TABLE END -8
         MODESET KEY=ZERO
         SR    R1,R1                    ZEROISE R1
         LR    R2,R1                    ALSO R2
         LA    R15,DIRTY2               OVERWRITE CODE PART TWO
         BALR  R14,R15                  TRAMPLE TRAMPLE TRAMPLE
         MODESET KEY=NZERO
         WTO   'XXBLDLSW - DYNAMBLDL STOPPED. TABLE CLEARED'
         TM    SW2,X'01'                CLEAR TOTALS ?
         BNO   NOZERO                   NO
         WTO   'XXBLDLSW - DYNAMBLDL COUNTS CLEARED'
NOZERO   EQU   *
         LA    R15,0
         SPACE 4
*
**
***      FREE DYNAMIC SAVEAREA AND RETURN
**
*
RET      DS    0H
         L     R13,4(R13)
         RETURN (14,12),RC=(15)
         SPACE 4
MSGSTART DS    0H
         WTO   'XXBLDLSW - DYNAMBLDL STARTED.'
         LA    R15,0
         B     RET
         SPACE 4
*
**
***      INCORRECT STATUS IN DYNAMIC BLDL MODULE
**
*
BADSTAT  DS    0H
         WTO   'XXBLDLSW - DYNAMIC BLDL NOT ACTIVE - BAD STATUS'
         LA    R15,8
         B     RET
*
**
***      INCORRECT PARM FIELD
**
*
BADPARM  DS    0H
         WTO   'XXBLDLSW - INCORRECT PARM FIELD'
         LA    R15,8
         B     RET
         SPACE 4
*
**
***      MODULE AT WRONG LEVEL
**
*
BADCODE  DS    0H
         WTO   'XXBLDLSW - INCORRECT CODE IN IGC018XX WRONG LEVEL'
         LA    R15,8
         B     RET
         SPACE 4
*
**
***      FUNCTION REQUESTED ALREADY EXISTS
**
*
DONEBE4  DS    0H
         TM    SW,X'10'                 IS IT STOP ?
         BZ    DONES                    NO - ITS START
         WTO   'XXBLDLSW - STOP REJECTED ALREADY STOPPED'
         LA    R15,4
         B     RET                      HOME
         SPACE 2
DONES    DS    0H
         WTO   'XXBLDLSW - START REJECTED ALREADY STARTED'
         LA    R15,4
         B     RET                      HOME
         SPACE 4
*
**
***      CODE EXECUTED IN KEY ZERO TO OVERWRITE IGC018XX
**
*
DIRTY1   DS    0H
         TM    SW,X'10'                 IS IT STOP ?
         BO    DIRTY1A                  YES, SKIP THIS PART
         L     R1,ATAB
         CLC   X'18'(4,R1),ZEROS        TOTALS ZERO ?
         BNE   DIRTY1A                  NO, SKIP TIME-RESET
         ST    R5,STTIME                STORE TIME OF RESTART
DIRTY1A  L     R1,ADIS1
         MVC   1(1,R1),SW      RESET PRE CODE
         L     R1,ADIS2
         MVC   1(1,R1),SW      RESET POST CODE
         BR    R14
         SPACE 2
DIRTY2   DS    0H
         STM   R1,R2,0(R3)              ZEROISE 8 BYTES
         BXLE  R3,R4,*-4                UP TO NEXT 8 BYTES
         ST    R6,0(R7)                 STORE LAST ENTRY AS PRESENT
         TM    SW2,X'01'                RESET TOTALS ?
         BNOR  R14                       NO, RETURN
         L     R1,ATAB
         ST    R2,X'18'(,R1)            ZERO HITS/MISSES
         STH   R2,X'14'(,R1)            ZERO SORT COUNT
         BR    R14                      BE A GOOD GUY
         SPACE 4
*
**
***      CONSTANTS THESE NEED UPDATING IF IGC018XX IS MODIFIED.
**
*
$CHECK1  DC    C'IGC018XX10-20-81'
$CHECK2P DC    X'47E0'
$CHECK2S DC    X'47F0'
         SPACE 4
ZEROS    DC    F'0'
SAVE1    DS    18F
SW       DS    X
SW2      DC    X'00'
         LTORG
         SPACE 3
*
*  DSECT DESCRIBES BEGINNING OF DYNAMIC BLDL NUCLEUS MODULE
*
DS1      DSECT
PGMDS    DS    CL4
PGMID    DS    CL16
ATAB     DS    F
ADIS1    DS    F
ADIS2    DS    F
STTIME   DS    F
STATUS   DS    F
         SPACE 2
         END
