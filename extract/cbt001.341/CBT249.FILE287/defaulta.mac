DEFAULTA TITLE 'DEFAULT ALLOCATION'
         MACRO
&NAME    NOGO  &RC,&DEST=FREEALL
         AIF   (T'&RC EQ 'N').NUMERIC
&NAME    MVI   #PDE,DFRC&RC
         AGO   .COMMON
.NUMERIC ANOP  ,
&NAME    MVI   #PDE,&RC
.COMMON  B     &DEST
         MEND
         SPACE 1                                                  *TSM*
         MACRO ,                                                  *TSM*
&L       ICSP  &REG,&SUBPOOL                                      *TSM*
.*             THIS MACRO INSERTS A SUBPOOL NUMBER INTO A REGISTER*TSM*
         GBLC  &CPU                                               *TSM*
         AIF   ('&CPU' EQ '360').S360                             *TSM*
&L       ICM   &REG,8,=AL1(&SUBPOOL)                              *TSM*
         MEXIT ,                                                  *TSM*
.S360    ANOP  ,                                                  *TSM*
&L       O     &REG,=AL1(&SUBPOOL,0,0,0)                          *TSM*
         MEND                                                     *TSM*
         SPACE 1                                                  *TSM*
******************************************************************
*
* THIS PROGRAM IS CALLED BY A PROMPTER TO ALLOCATE DATASETS
* WHEN THE COMPLETE NAME MAY, OR MAY NOT, BE SUPPLIED
*
* THE CALLER COMPLETES A LIST OF POSSIBLE QUALIFIERS
* TO AID THE ALLOCATION.
*
* EXAMPLE  QUALIFIER LIST IS ASM, DATA, CNTL
*          NAME SUPPLIED PROG
*
*          THE ORDER OF ATTEMPTS IS USERID.PROG
*                                   USERID.PROG.ASM
*                                   USERID.PROG.DATA
*                                   USERID.PROG.CNTL
*          UNTIL ONE IS FOUND
*
*          IF THE NAME IS IN APOSTROPHES, THE USERID IS
*          NOT PREFIXED
*
* SEVERAL OPTIONS MAY BE REQUESTED:
*
* 1) DFLTONLY IF NONE OF THE LIST EXIST, THE PROGRAM CAN NOT DISPLAY
*             TO THE USER WHICH QUALIFIERS DO EXIST IN HIS
*             CATALOG AND LET HIM DECIDE.
*
* 2) DFLTPO   THE DATA SET MUST HAVE DSORG=PO.
*
* 3) DFLTPS   THE DATA SET MUST HAVE DSORG=PO.
*             A PARTITIONED DATA SET (DSORG=PO) IS ACCEPTED AS PS ONLY
*             IF A MEMBER NAME IS SPECIFIED IN THE PDE OR BY DEFAULT.
*
* 4) DFLTMEMB A MEMBER NAME MUST BE SPECIFIED.
*
* 5) DFLTDDND THE DDNAMES ASSIGNED BY DAIR ARE DISPLAYED TO THE USER.
*             SINCE PUTLINE IS USED, THE MESSAGES MAY BE ROUTED EITHER
*             TO THE TERMINAL OR TO A SEQUENTIAL DATA SET.
*
* 6) DFLTNEWK IF NONE OF THE NAMES IN THE LIST EXIST, A NEW DATASET
*          CAN BE ALLOCATED. IN THIS CASE DCB DATA ETC. MUST BE GIVEN.
*          ALSO, ONLY A SINGLE PDE IS PERMITTED WITH THIS OPTION.
*
* 7) DFLTDSNR RETURN THE COMPLETED DSNAMES TO THE CALLER.
*             IF THIS OPTION IS NOT SELECTED, ONLY THE DDNAMES
*             ARE RETURNED, AND THE ANSWER AREA ENTRIES ARE SHORTER.
*
*    REGISTER USAGE
*    R15,R0,R1    SVC CALLS AND RETURN CODES
*    R2           CURRENT PDE & CPPL
*    R3        DAIR PARM BLOCK BASE
*    R4        QUALIFIER LIST BASE
*    R5        DSCB BASE, PGPB BASE
*    R6        ANSWDSCT DSECT BASE
*    R7        DCBINFO DSECT BASE
*    R8
*    R9        WORK
*    R10
*    R11        PARMLIST ON ENTRY
*    R12        PROGRAM BASE
*    R13        SAVE AREA
*    R14        INTERNAL LINKAGE
*
*    FOLLOWING (DECIMAL) RETURN CODES PASSED VIA R15
*    04     DAIR ERROR
*    08     ANSWER AREA TOO SHORT (TOO MANY PDE'S)
*    12     NO MATCH FOUND FOR QUALIFIER LIST
*    16     PO/PS CHECK FAILED, OR MEMBER NAME REQUIRED
*    20     STRUCTURE OF 'ANSWER' HEADER INCORRECT
*    24     LOCATE OR OBTAIN ERROR
*    28     NO DCB INFO SUPPLIED FOR NEW DATASET
*    32     PUTLINE ERROR
*    36     PUTGET ERROR
*    40     CATALOG ERROR
         SPACE 2                                                  *TSM*
         GBLC  &SYSTEM                                            *TSM*
         GBLB  &RETRO36                 OS/VS2 R3.6 SERVICE ROUTINES
         SPACE 2                                                  *TSM*
         MTITL 'DEFAULT ALLOCATION'
         STITL 'INITIALIZATION'
DEFAULTA SAVEM BIGZERO
         USING DFLTDSCT,R11
         USING QUALDSCT,R4
*        USING ANSWDSCT,R6
         SPACE 2                                                  *TSM*
* BUILD DAIR PARAMETER LIST, ONCE ONLY AND INITIALIZE
         USING CPPL,R2
         L     R2,DFLTCPPL
         MVC   DAPLUPT(4),CPPLUPT
         MVC   DAPLECT(4),CPPLECT
         MVC   DAPLPSCB(4),CPPLPSCB
         LA    R9,ECB
         ST    R9,DAPLECB
         ST    R9,MYECB                 INITIALIZE IOPLECB        *TSM*
         LA    R9,MYDAPB
         ST    R9,DAPLDAPB
         SPACE 1                                                  *TSM*
*              BUILD PARAMETER LIST FOR IKJEFF18 (DAIRFAIL)       *TSM*
         LA    R7,MYDAPL                POINT AT DAIR PARAM LIST  *TSM*
         ST    R7,FAILDAPL                                        *TSM*
         LA    R15,DAIRRC               POINT AT DAIR RETURN CODE *TSM*
         ST    R15,FAILRC                                         *TSM*
         LA    R15,DAIRMSWR             POINT AT IKJEFF02 ADCON   *TSM*
         ST    R15,FAILMSWR                                       *TSM*
         MVI   DAIRID+1,1               SET ID=1                  *TSM*
         LA    R15,DAIRID               POINT AT DAIR ID          *TSM*
         ST    R15,FAILID                                         *TSM*
         SPACE 1                                                  *TSM*
         MVC   MYUPT,CPPLUPT            IOPL                      *TSM*
         MVC   MYECT,CPPLECT                                      *TSM*
         MVC   MYPTPB(PUTLEND),PUTL     PUTLINE PARM BLOCK        *TSM*
         MVC   MYPGPB(PUTGETLN),PUTGET  PUTGET  PARM BLOCK        *TSM*
         SPACE 1                                                  *TSM*
*     SAVE ADDRESS OF TOP OF ANSWER AREA
         MVC   CURANSW(4),DFLTANSW
* COUNT NUMBER OF PDE'S IN CHAIN
         SR    R7,R7
         TM    DFLTFLG1,DFLTNEWK  IS NEW ALLOWED ?
         BO    NOCONCAT            YES - CAN'T BE LIST
         USING PDEDSCT,R2
         L     R2,DFLTPDE
LOOKPDE  L     R9,PDENEXT         GET ADDR OF NEXT PDE
         LTR   R9,R9              IS IT ZERO
         BNP   @DAIR0C            ALLOC SPACE FOR CONCAT BLOCK   BASTNJ
         LA    R7,1(,R7)          BUMP PDE COUNT
         LR    R2,R9             UPDATE PDE BASE
         B     LOOKPDE            ROUND AGAIN
@DAIR0C  LTR   R7,R7
         BZ    NOCONCAT           ZERO IF ONLY ONE PDE
         LA    R7,1(,R7)          LAST PDE WASN'T INCLUDED
         STH   R7,#PDE            TEMP SAVE
         SLL   R7,3               # PDE'S X 8
         LA    R7,12(,R7)         PLUS 12 = LENGTH DAIR0C BLOCK
         ST    R7,CONCATLN        STORE LENGTH
         GETMAIN R,LV=(R7)       GET STORAGE                      *TSM*
         ST    R1,CONCATPB        SAVE ADDRESS
         OI    MYFLAGS,CONCAT     SHOW CONCAT NEEDED
         LH    R7,#PDE            RESTORE # PDE'S
         B     ANSTEST            MORE CHECKS YET
         SPACE 1
* CHECK THAT LENGTH OF ANSWER AREA IS ADEQUATE
*  SECOND HALF WORD IN ANSWER AREA MUST BE ZERO
NOCONCAT LA    R7,1               ONE PDE ONLY
         STH   R7,#PDE            SAVE FOR LATER
ANSTEST  L     R8,DFLTANSW         POINT AT ANSWER AREA
         USING ANSWDSCT,R8
         XR    R9,R9
         CH    R9,ANSWLEN+2       COMPARE SECOND HALFWORD
         BE    ANS2OK             GOOD, CHECK FIRST HALFWORD
         NOGO  ANSW
ANS2OK   LA    R9,ANSWSHEL              LENGTH OF SHORT ENTRY
         TM    DFLTFLG1,DFLTDSNR        ARE DSNAMES TO BE RETURNED ?
         BZ    *+8                       NO - DON'T NEED LONG ENTRY
         LA    R9,ANSWENTL              LENGTH OF LONG ENTRY
         STH   R9,LNANSENT              SAVE LENGTH OF ENTRY
         MR    R6,R9                    R7 NOW HAS REQUIRED LENGTH
         LA    R7,4(,R7)                ADJUST FOR PREFIX
         CH    R7,ANSWLEN               COMPARE TO GIVEN
         DROP  R8
         BNH   ANS1OK                   NOT LOW, OK
         NOGO  SHRT
         STITL 'MAINLINE'                                         *TSM*
ANS1OK   L     R2,DFLTPDE         POINT AT FIRST PDE AGAIN
PDELOOP  NI    MYFLAGS,255-SECOND-NEEDMNAM-ISMEMNAM               *TSM*
         L     R7,PDEDSN                                          *TSM*
         MVC   QUALNOW(4),DFLTQUAL    INITIALIZE TO REAL QUALLIST
         MVI   DSNLEN+1,0               ZERO DSNAME LENGTH FIELD  *TSM*
         MVI   DSNVAL,C' '              BLANK DSNAME              *TSM*
         MVC   DSNVAL+1(43),DSNVAL                                *TSM*
         CLI   0(R7),C'*'         TERMINAL?
         BNE   NOTERM
         L     R3,DAPLDAPB
         TM    PDEFLG2,PDEPRES          IS MEMBER SPECIFIED ?     *TSM*
         BZ    @DAIR1C                   NO  - PROCEED WITH DAIR  *TSM*
         USING DAPB08,R3                 YES - THAT'S A NO-NO     *TSM*
         MVC   DA08CD(DA08LEN),DAIR08   SET UP FOR FAKE DAIRFAIL  *TSM*
         MVI   DSNLEN+1,1               DSN='*'                   *TSM*
         MVI   DSNVAL,C'*'                                        *TSM*
         LH    R15,PDEMEML              MEMBER NAME FROM PDE      *TSM*
         BCTR  R15,0                                              *TSM*
         L     R1,PDEMEMB
         EX    R15,MOVEMEMB                                       *TSM*
         LA    R0,DSNLEN                DA08PDSN<-L(DSN)          *TSM*
         ST    R0,DA08PDSN                                        *TSM*
         MVI   DAIRRC+3,DRRCDYNA        DAIR RETURN CODE = 0C     *TSM*
         MVC   DA08DARC,=X'0330'        MEMBER SPECIFIED          *TSM*
         LINK  SF=(E,LINKFAIL),MF=(E,FAILDAPL)                    *TSM*
         NOGO  DAIR                                               *TSM*
         SPACE 1                                                  *TSM*
         USING DAPB1C,R3
@DAIR1C  MVC   DA1CCD(DA1CLEN),DAIR1C   ADD DAIR CONSTANTS
         BAL   R14,DAIRGO         CALL DAIR
         B     ENDLOOP            GOOD RETURN
         NOGO  DAIR               BAD RETURN
NOTERM   EQU   *
*  COMPLETE THE DSN BUFFER
         TM    PDEFLG1,PDEAPST            NAME IN '' ?
         BO    CONT
         AIF   ('&SYSTEM' NE 'MVS' AND NOT &RETRO36).SVS          *TSM*
         L     R9,DAPLUPT               ADDRESS UPT               *TSM*
         USING UPT,R9                                             *TSM*
         SR    R8,R8                                              *TSM*
         IC    R8,UPTPREFL              GET AND SAVE THE LENGTH   *TSM*
         STH   R8,DSNLEN                    OF THE DEFAULT PREFIX *TSM*
         BCTR  R8,0                     LNE-1 FOR EX OF MVC       *TSM*
         LA    R5,DSNVAL                TARGET                    *TSM*
         LA    R6,UPTPREFX              SOURCE                    *TSM*
         DROP  R9                                                 *TSM*
         EX    R8,DSNMOVE               MOVE IN PREFIX            *TSM*
         AGO   .SVSMVS                                            *TSM*
.SVS     L     R9,DAPLPSCB              ADDRESS PSCB              *TSM*
         USING PSCB,R9                                            *TSM*
         SR    R8,R8
         IC    R8,PSCBUSRL              GET AND SAVE THE LENGTH   *TSM*
         STH   R8,DSNLEN                    OF THE USERID         *TSM*
         BCTR  R8,0                     LNE-1 FOR EX OF MVC       *TSM*
         LA    R5,DSNVAL                TARGET
         LA    R6,PSCBUSER              SOURCE
         DROP  R9                                                 *TSM*
         EX    R8,DSNMOVE               ZAP IN USERID
.SVSMVS  ANOP  ,                                                  *TSM*
CONT     LH    R8,PDEDSNL               LENGTH OF NAME IN PDE
         LTR   R8,R8                    ZERO ?
         BZ    LOCALIAS                  DONE - PROCESS ALIAS     *TSM*
         LA    R5,DSNVAL
         AH    R5,DSNLEN                CURRENT POINTER IN BUFFER
         TM    PDEFLG1,PDEAPST          NAME IN '' ?
         BO    NOUID                    YES
         MVI   0(R5),C'.'               ADD PERIOD
         LH    R9,DSNLEN                BUMP
         LA    R9,1(,R9)                DSNLEN
         STH   R9,DSNLEN                AND
         LA    R5,1(,R5)                POINTER IN BUFFER
NOUID    L     R6,PDEDSN                SOURCE
         LA    R3,255(,R8)              LEN-1 FOR EX OF MVC       *TSM*
         EX    R3,DSNMOVE               ADD NAME FROM PDE         *TSM*
         AH    R8,DSNLEN                UPDATE
         STH   R8,DSNLEN                DSNLEN
         SPACE 1                                                  *TSM*
         MNOTE 4,'ADD CODE TO HANDLE VSAM CATALOG'                *TSM*
         SPACE 1                                                  *TSM*
LOCALIAS MVI   CAMOPTN1,X'44'           SET FUNNY LOCATE CODE     *TSM*
         LA    R0,DSNVAL                SET DSN IN CAMLST         *TSM*
         ST    R0,CAMPTR1                                         *TSM*
         LA    R0,DSCB                  SET WORK AREA IN CAMLST   *TSM*
         ST    R0,CAMWORKP                                        *TSM*
        LOCATE CAMOPTN1                 LOCATE AND TRANSLATE      *TSM*
         CH    R15,=Y(LCRCINDX)         IS THIS INDEX OR ALIAS ?  *TSM*
         BZ    ALIASLEN                  YES - CALCULATE NEW LEN  *TSM*
         LTR   R15,R15                  IS THIS DSPE ?            *TSM*
         BNZ   @DAIR08                   NO  - NAME UNCHANGED     *TSM*
ALIASLEN LA    R0,44                    CALCULATE NEW DSN LENGTH  *TSM*
         LA    R1,DSNVAL+43                                       *TSM*
         CLI   0(R1),C' '                                         *TSM*
         BNE   *+10                                               *TSM*
         BCTR  R1,0                                               *TSM*
         BCT   R0,*-10                                            *TSM*
         STH   R0,DSNLEN                                          *TSM*
         LTR   R15,R15                  IS THIS FULL OLD DSNAME ? *TSM*
         BNZ   @DAIR08                   NO  - SKIP OBTAIN        *TSM*
         TM    DFLTFLG1,DFLTPS          DSORG CHECK REQUIRED ?    *TSM*
         BZ    @DAIR08                   NO  - OBTAIN NOT NEEDED  *TSM*
         MVI   CAMOPTN1,OBFLAG          SET CAMLST FOR OBTAIN     *TSM*
         LA    R0,DSNVAL                                          *TSM*
         ST    R0,DSNPTR                                          *TSM*
         LA    R0,VOLSER                                          *TSM*
         ST    R0,VOLPTR                                          *TSM*
         LA    R0,DS1FMTID                                        *TSM*
         ST    R0,CAMWORKP                                        *TSM*
        OBTAIN CAMLIST                                            *TSM*
         LTR   R15,R15                                            *TSM*
         BNZ   @DAIR08                                            *TSM*
         TM    DS1DSORG,NWDSPO                                    *TSM*
         BZ    @DAIR08                                            *TSM*
         OI    MYFLAGS,NEEDMNAM                                   *TSM*
         SPACE 1                                                  *TSM*
         MNOTE 0,'REWRITE USING SUBROUTINES TO REMOVE REDUNDANCY' *TSM*
         SPACE 1                                                  *TSM*
* COMPLETE THE DAIR08 PARM BLOCK
@DAIR08  L     R3,DAPLDAPB
         USING DAPB08,R3
         MVC   DA08CD(DA08LEN),DAIR08     ADD CONSTANTS
         LA    R5,DSNLEN
         ST    R5,DA08PDSN
         TM    PDEFLG2,PDEPRES            MEMBER ?
         BO    MEMB
         TM    MYFLAGS,NEEDMNAM         SHOULD THERE BE ONE ?     *TSM*
         BO    *+12                      YES - PER OBTAIN         *TSM*
         TM    DFLTFLG1,DFLTMEMB        EXPLICITLY REQUESTED ?    *TSM*
         BZ    @PASS                     NO  - NOT NEEDED         *TSM*
         MVC   DA08MNM,DFLTMEM          ASSUME DEFAULT MEMBER     *TSM*
         TM    DFLTMEM,X'3F'            IS THERE ONE ?            *TSM*
         BNZ   SETISMEM                  YES - USE IT             *TSM*
         BAL   R9,PRMPTMEM               NO  - PROMPT FOR IT      *TSM*
         B     SETISMEM                                           *TSM*
         SPACE 1                                                  *TSM*
MOVEMEMB MVC   DA08MNM(0),0(R1)                                   *TSM*
MOVEPASS MVC   DA08PSWD(0),0(R8)                                  *TSM*
MEMB     LH    R15,PDEMEML              MEMBER NAME FROM PDE      *TSM*
         BCTR  R15,0                                              *TSM*
         L     R1,PDEMEMB
         EX    R15,MOVEMEMB                                       *TSM*
SETISMEM OI    MYFLAGS,ISMEMNAM         FLAG "MEMBER SPECIFIED"   *TSM*
@PASS    TM    PDEFLG3,PDEPRES            PASSWORD?
         BZ    NOPASS
         LH    R15,PDEPASL              PASSWORD FROM PDE         *TSM*
         BCTR  R15,0                                              *TSM*
         L     R8,PDEPASS                                         *TSM*
         EX    R15,MOVEPASS                                       *TSM*
* IN CASE OF DISP=NEW, ADD DCB INFO
NOPASS   TM    MYFLAGS,ISNEW            NEW DATASET REQUIRED ?    *TSM*
         BZ    NOTNEW
         L     R7,DFLTDCB                  GET ADDRESS OF INFO
         USING NWDSDSCT,R7
         LTR   R7,R7                     SUPPLIED?
         BNZ   DCBOK
         NOGO  NODC
DCBOK    MVC   DA08BLK(16),NWDSBLK         SPACE INFO'S
         OI    DA08DSP1,DFLTNEW
         OI    DA08DPS2,DFLTCAT
         OI    DA08DPS3,DFLTCAT
         MVC   DA08CTL,NWDSFLG1           SPACE UNITS
         MVC   DA08DSO,NWDSFLG2           DSORG
         TM    MYFLAGS,ISMEMNAM           IS THERE A MEMBER NAME? *TSM*
         BZ    *+8                         NO                     *TSM*
         MVI   DA08DSO,NWDSPO              YES - FORCE DSORG=PO   *TSM*
         TM    DA08DSO,NWDSPO             DSORG=PO ?              *TSM*
         BO    *+10                        YES                    *TSM*
         XC    DA08DQTY,DA08DQTY           NO  - NO DIRECTORY     *TSM*
         B     D08GO
NOTNEW   MVC   DA08DSP1,DFLTFLG2
         MVC   DA08DPS2,DFLTFLG3
         MVC   DA08DPS3,DFLTFLG4
D08GO    BAL   R14,DAIRGO                 GO DO DAIR
         B     CHEKDSCB                  GOOD RETURN
         NOGO  DAIR                      BAD RETURN
*                                        ACCEPTABLE RETURN
         CLI   DA08CTRC+1,LCRCINDX       IS NAME INDEX LEVEL OR ALIAS ?
         BNE   TESTNEW                    NO - TEST IF NEW DS ALLOWED
         SPACE 1
* CHECK IF THIS IS SECOND TIME ROUND. IF YES CATALOG ERROR
         TM    MYFLAGS,SECOND
         BZ    DA14GO               NO, OK
         LINK  SF=(E,LINKFAIL),MF=(E,FAILDAPL)                    *TSM*
         NOGO  CTLG
DA14GO   L     R3,DAPLDAPB
         USING DAPB14,R3
         MVC   DA14CD(DA14LEN),DAIR14   SET DAIR CONSTANTS
         LA    R5,DSNLEN
         ST    R5,DA14PDSN        POINT TO DSN BUFFER
         LA    R5,DSCB            POINT TO LOCATE AREA            *TSM*
         ST    R5,DA14PRET
         XC    0(256,R5),0(R5)    DAIR14 SHOULD ZERO WORK AREA
         LA    R6,256             BUT IT DOESN'T
         SLL   R6,16              SPACE FOR 32 QUALIFIERS GIVEN
         ST    R6,CAMWORK         ZAP IN LENGTH OF AREA
         OI    MYFLAGS,SECOND     INDICATE DAIR14 DONE
         BAL   R14,DAIRGO         GO DO DAIR
         B     COMPARE            GOOD RETURN
         NOGO  DAIR               BAD RETURN
* NOW COMPARE ACTUAL QUALIFIERS TO REQUIRED LIST
COMPARE  CLI   DSCB,0                   ANY QUALIFIER IN CATALOG? *TSM*
         BE    TESTNEW                   NO  - SEE IF NEW ALLOWED *TSM*
         L     R4,QUALNOW               FIRST QUALIFIER           *TSM*
QUALOOP1 LA    R5,DSCB                  FIRST NAME FROM CATALOG   *TSM*
QUALOOP2 CLC   QUALNAME,0(R5)           QUALIFIER=NAME ?          *TSM*
         BE    @CONCAT                   YES - USE IT             *TSM*
         LA    R5,8(,R5)                NEXT NAME FROM CATALOG    *TSM*
         CLI   0(R5),0                  IS THIS END OF LIST ?     *TSM*
         BNE   QUALOOP2                  NO  - TRY AGAIN          *TSM*
         TM    QUALLEN,LAST              YES - LAST QUALIFIER ?   *TSM*
         LA    R4,10(,R4)                           (IN CASE NO)  *TSM*
         BNO   QUALOOP1                        NO  - TRY NEXT QUAL*TSM*
         SPACE 1
* IF HERE, NO MATCH WAS FOUND
         TM    DFLTFLG1,DFLTONLY        QUALIFIER LIST REQUIRED ? *TSM*
         BZ    SHOWLIST                  NO  - CHOOSE FROM CAT.   *TSM*
TESTNEW  TM    DFLTFLG1,DFLTNEWK        IS DISP=NEW ALLOWED ?     *TSM*
         BZ    NOMATCH                   NO  - SHOW ERROR         *TSM*
         L     R4,DFLTQUAL         POINT AT FIRST QUALIFIER
         OI    MYFLAGS,ISNEW            SIGNAL NEW FOR LATER      *TSM*
         B     @CONCAT              AND CHEAT
         SPACE 1                                                  *TSM*
SHOWLIST LA    R0,SEG1NXT               PTPBOPUT->SEG1            *TSM*
         ST    R0,MYOPUT                                          *TSM*
         LA    R0,SEG2NXT               SEG1NEXT->SEG2            *TSM*
         ST    R0,SEG1NXT                                         *TSM*
         LA    R0,SEG3NXT               SEG2NEXT->SEG3            *TSM*
         ST    R0,SEG1NXT                                         *TSM*
         MVC   SEG1TXT,AMBGUOUS         TSM58600I AMBIGUOUS SPEC  *TSM*
         MVC   SEG1DDN,DFLTDESC                                   *TSM*
         MVI   SEG1PFX+1,SEG1END-SEG1PFX                          *TSM*
         MVC   SEG2TXT,QUALSFOR         IKJ58600I QUALIFIERS FOR  *TSM*
         MVC   SEG2DSN(45),SEG2DSN-1                              *TSM*
         LH    R8,DSNLEN                MOVE DSNAME               *TSM*
         BCTR  R8,0                                               *TSM*
         EX    R8,SEG2MOVE                                        *TSM*
         LA    R1,SEG2DSN+2(R8)         ->DSN+L'DSN+1 (1 BL LEFT) *TSM*
         MVC   0(3,R1),=C'ARE'            '... ARE'               *TSM*
         LA    R0,SEG2DSN+5-SEG2PFX(,R8)  DSN+L'DSN+4             *TSM*
         STH   R0,SEG2PFX                                         *TSM*
         XC    SEG3NXT(8),SEG3NXT                                 *TSM*
         MVI   SEG3PFX+1,SEG3END-SEG3PFX                          *TSM*
         MVC   SEG3TXT,SEG2TXT                                    *TSM*
         LA    R5,DSCB                  FIRST NAME FROM CATALOG   *TSM*
         MVC   SEG3QUAL(SEG3END-SEG3QUAL),SEG3QUAL-1              *TSM*
SEG3LOOP LA    R3,7                     MAXIMUM QUALIFIER IN LINE *TSM*
         LA    R6,SEG3QUAL              FIRST NAME IN MESSAGE     *TSM*
SEG3NXTQ MVC   0(8,R6),0(R5)                                      *TSM*
         LA    R5,8(,R5)                                          *TSM*
         LA    R6,9(,R6)                                          *TSM*
         CLI   0(R5),0                                            *TSM*
         BE    SEG3DONE                                           *TSM*
         BCT   R3,SEG3NXTQ                                        *TSM*
         SPACE 1                                                  *TSM*
       PUTLINE PARM=MYPTPB,                                       *TSM**
               OUTPUT=(,MULTLIN,DATA),MF=(E,MYIOPL)               *TSM*
         LTR   R15,R15                                            *TSM*
         BZ    *+12                                               *TSM*
         NOGO  PTLN                                               *TSM*
         SPACE 1                                                  *TSM*
         LA    R0,SEG3NXT               SETUP PUTLINE FOR SEG3    *TSM*
         ST    R0,MYOPUT                                          *TSM*
         B     SEG3LOOP                 SHOW NEXT 7 QUALIFIERS    *TSM*
         SPACE 1                                                  *TSM*
SEG3DONE LA    R0,SEG3PFX+1             SEG3PFX=END+2-(BEGIN+1)   *TSM*
         SR    R6,R0                                              *TSM*
         STH   R6,SEG3PFX                                         *TSM*
         SPACE 1                                                  *TSM*
         PUTLINE PARM=MYPTPB,                                     *TSM**
               OUTPUT=(,MULTLIN,DATA),MF=(E,MYIOPL)               *TSM*
         LTR   R15,R15                                            *TSM*
         BZ    *+12                                               *TSM*
         NOGO  PTLN                                               *TSM*
         SPACE 1                                                  *TSM*
         MVI   OLD1NUML+3,1             PROMPT:                   *TSM*
         LA    R0,ENTQUAL                IKJ58601A ENTER QUALIFIER-
         ST    R0,OLD1SEG1                                        *TSM*
         SPACE 1                                                  *TSM*
         PUTGET PARM=MYPGPB,                                      *TSM**
               OUTPUT=OLD1NUML,MF=(E,MYIOPL)                      *TSM*
         LTR   R15,R15                                            *TSM*
         BZ    FAKEQUAL                                           *TSM*
         NOGO  PTGT                                               *TSM*
         SPACE 1                                                  *TSM*
*              BUILD A PSEUDO QUALIFIER LIST AND PASS BACK        *TSM*
FAKEQUAL L     R1,MYIBUF                MESSAGE FROM PUTGET       *TSM*
         LH    R15,0(,R1)               MESSAGE LENGTH+4          *TSM*
         LR    R0,R15                                    FOR FREE *TSM*
         SH    R15,=H'4'                              +0          *TSM*
         BZ    FMNO                     ERROR IF NO QUALIFIER     *TSM*
         STH   R15,MSGAREA                                        *TSM*
         OI    MSGAREA,LAST             SIGNAL LAST (ONLY) ENTRY  *TSM*
         BCTR  R15,0                    MESSAGE LENGTH-1 FOR EX   *TSM*
         MVI   MSGAREA+2,C' '           BLANK QUALIFIER AREA      *TSM*
         MVC   MSGAREA+3(7),MSGAREA+2                             *TSM*
         LA    R5,MSGAREA+2             MOVE QUALIFIER            *TSM*
         LA    R6,4(,R1)                                          *TSM*
         EX    R15,DSNMOVE                                        *TSM*
         EX    R15,TRAN                 TRANSLATE QUALIFIER TO UC *TSM*
         LA    R4,MSGAREA               QUALNOW->PSEUDO LIST      *TSM*
         ST    R4,QUALNOW                                         *TSM*
         LA    R5,DSCB                  RESTORE WORKAREA POINTER  *TSM*
         ICSP  R0,1                     FREE MESSAGE (SP 1)       *TSM*
      FREEMAIN R,A=(1),LV=(0)                                     *TSM*
         B     COMPARE                  BUILD FULL DSNAME         *TSM*
         SPACE 1                                                  *TSM*
FMNO     ICSP  R0,1                     FREE MESSAGE (SP 1)       *TSM*
      FREEMAIN R,A=(1),LV=(0)                FROM PUTGET          *TSM*
NOMATCH  NOGO  NONE                                               *TSM*
         SPACE 1                                                  *TSM*
*  WE NOW HAVE A DSN WITHOUT QUALIFIER AND A QUALIFIER
*  JOIN THE TWO TOGETHER AND ALLOCATE THE COMPLETED NAME
         SPACE 1
@CONCAT  LH    R3,DSNLEN                                          *TSM*
         LA    R5,DSNVAL(R3)    POINT PAST DSN BUFFER
         MVI   0(R5),C'.'       ADD PERIOD
         LA    R5,1(,R5)        TARGET
         LA    R0,X'7F'         GET LENGTH OF CHOSEN QUALIFIER
         LH    R8,QUALLEN           (BITS 1-7)
         NR    R8,R0
         BCTR  R8,0             DECREMENT
         LA    R6,QUALNAME      SOURCE
         EX    R8,DSNMOVE       CONCATENATE TO DSN
         LA    R5,2(R3,R8)      DSN+L'DSN+L'PER+(L'QUAL-1)+1
         STH   R5,DSNLEN
         B     @DAIR08          TRY AGAIN
CHEKDSCB EQU   *
*    IF NO CHECKS NEEDED, SKIP LOCATE/OBTAIN
         TM    DFLTFLG1,DFLTPO+DFLTPS
         BZ    ENDLOOP                   GOOD, LESS WORK
         LA    R5,DSCB                 ADDRESS DSECT
         MVC   CAMLIST(4),LOCFLAG         LOCATE FLAGS
         LA    R8,DSNVAL
         ST    R8,DSNPTR
         ST    R5,WORKPTR
         LOCATE CAMLIST
         LTR   R15,R15
         BZ    LOCATEOK
         L     R3,DAPLDAPB              POINT TO DAPL (DA08)      *TSM*
         USING DAPB08,R3                                          *TSM*
         STH   R15,DA08CTRC             CTRC=  XX                 *TSM*
         MVI   DA08DARC,X'17'           DARC=17YY                 *TSM*
         B     FAKEDRFL                 FAKE DAIRFAIL             *TSM*
         SPACE 1                                                  *TSM*
LOCATEOK EQU   *
*  SET UP OBTAIN
         MVI   CAMLIST,OBFLAG         OBTAIN FLAG
         LA    R8,VOLSER
         ST    R8,VOLPTR
         OBTAIN CAMLIST
         LTR   R15,R15
         BZ    OBTAINOK
         L     R3,DAPLDAPB              POINT TO DAPL (DA08)      *TSM*
         USING DAPB08,R3                                          *TSM*
         MVI   DA08DARC,X'67'           DARC=67YY                 *TSM*
FAKEDRFL MVI   DAIRRC+3,DRRCDYNA        DAIR RETURN CODE = 0C     *TSM*
         STC   R15,DA08DARC+1           DARC=X7YY                 *TSM*
         LINK  SF=(E,LINKFAIL),MF=(E,FAILDAPL)                    *TSM*
         NOGO  LCOB
         DROP  R3                                                 *TSM*
         SPACE 1                                                  *TSM*
OBTAINOK TM    DFLTFLG1,DFLTPO          DSORG=PO REQUIRED ?
         BZ    REQUIRPS                  NO - PS REQUIRED
         TM    DS1DSORG-DS1FMTID(R5),NWDSPO
         BO    ENDLOOP             OK
BUMDSORG LA    R0,OLD2                  OLD1->OLD2                *TSM*
         ST    R0,OLD1                                            *TSM*
         MVI   OLD1NUML+3,1             OLDLNUML=1 SEGMENT        *TSM*
         LA    R0,SEG2PFX               OLD1SEG1->SEG2            *TSM*
         ST    R0,OLD1SEG1                                        *TSM*
         XC    OLD2(4),OLD2             OLD2 IS LAST MESSAGE      *TSM*
         MVI   OLD2NUML+3,1             OLD2NUML=1 SEGMENT        *TSM*
         LA    R0,SEG1PFX               OLD2SEG1->SEG1            *TSM*
         ST    R0,OLD2SEG1                                        *TSM*
         MVI   SEG1PFX+1,MSORGEND-SEG1PFX                         *TSM*
         MVC   MSORGTXT,INVDSORG        TSM56002I ... MUST HAVE   *TSM*
         MVC   MSORGDDN,DFLTDESC                                  *TSM*
         MVC   MSORGTX2,INVDSOR2        MUST HAVE DSORG=PS        *TSM*
         TM    DFLTFLG1,DFLTPO                                    *TSM*
         BZ    *+8                                                *TSM*
         MVI   MSORGEND-1,C'O'                         =PO        *TSM*
         MVC   MSOR2TXT,INVDATST        IKJ56002I INVALID DATASET *TSM*
         MVC   MSOR2DSN(45),MSOR2DSN-1                            *TSM*
         LH    R8,DSNLEN                MOVE DSNAME               *TSM*
         BCTR  R8,0                                               *TSM*
         EX    R8,INVDSMOV                                        *TSM*
         LA    R1,MSOR2DSN+2(R8)        ->DSN+L'DSN+1 (1 BL LEFT) *TSM*
         MVI   0(R1),C'+'                 '+'                     *TSM*
         LA    R0,MSGMBDSN+3-SEG2PFX(,R8) DSN+L'DSN+2             *TSM*
         STH   R0,SEG2PFX                                         *TSM*
       PUTLINE PARM=MYPTPB,                                       *TSM**
               OUTPUT=(OLD1,TERM,MULTLVL),MF=(E,MYIOPL)           *TSM*
         LTR   R15,R15                  IF RETURN CODE BAD,       *TSM*
         BZ    *+12                                               *TSM*
         NOGO  PTLN                      SQUAWK                   *TSM*
         NOGO  POPS
         SPACE 1                                                  *TSM*
INVDSMOV MVC   MSOR2DSN(0),DSNVAL                                 *TSM*
         SPACE 1                                                  *TSM*
REQUIRPS TM    DS1DSORG-DS1FMTID(R5),NWDSPS+NWDSPO                *TSM*
         BZ    BUMDSORG
         TM    DS1DSORG-DS1FMTID(R5),NWDSPO
         BZ    ENDLOOP
         TM    MYFLAGS,ISMEMNAM         IS MEMBER NAME SPECIFIED? *TSM*
         BO    ENDLOOP                   YES - ACCEPT AS DSORG=PS *TSM*
         L     R3,DAPLDAPB              POINT TO DAPB08           *TSM*
         USING DAPB08,R3                                          *TSM*
         MVC   DA08MNM,DFLTMEM          IS THERE A DEFAULT MEM ?  *TSM*
         TM    DFLTMEM,X'3F'                                      *TSM*
         BNZ   ENDLOOP                   YES - ACCEPT AS DSORG=PS *TSM*
         BAL   R9,PRMPTMEM               NO  - PROMPT FOR MEMBER  *TSM*
         DROP  R3                                                 *TSM*
*        B     ENDLOOP                   YES - ACCEPT AS DSORG=PS *TSM*
ENDLOOP  TM    DFLTFLG1,DFLTNEWK  IS NEW ALLOWED ?
         BO    SUCCESS             YES - CAN'T BE LIST
         NI    MYFLAGS,255-ISNEW-SECOND LOWER FLAG                *TSM*
         L     R2,PDENEXT         POINT TO NEXT PDE
         LTR   R2,R2              IS THERE ONE?
         BP    PDELOOP            YES, BACK FOR MORE             BASTNJ
         STITL 'CONCAT AND FINAL HOUSEKEEPING'                    *TSM*
* ALL DATASETS NOW ALLOCATED
         TM    MYFLAGS,CONCAT      CONCAT NEEDED?
         BZ    SUCCESS             NO
         L     R3,CONCATPB         ALTER PARM BLOCK BASE
         ST    R3,DAPLDAPB
         USING DAPB0C,R3
         MVC   DA0CCD(DA0CLEN),DAIR0C      SET DAIR0C CONSTANTS
         LH    R5,#DSN         LOAD INDEX REG
         STH   R5,DA0CNUMB
         L     R6,DFLTANSW         POINT AT FIRST ANSWER
         USING ANSWDSCT,R6
DDLOOP   MVC   DA0CDDN(8),ANSWDDN   MOVE IN DDNAME
         LA    R3,8(,R3)           BUMP DA0C BASE
         AH    R6,LNANSENT         BUMP ANSWDSCT BASE
         BCT   R5,DDLOOP           BACK FOR MORE
         BAL   R14,DAIRGO          CALL DAIR
         B     SUCCESS             GOOD RETURN
         NOGO  DAIR                 BAD RETURN
SUCCESS  NOGO  OK,DEST=FREEAREA
FREEALL  EQU    *
*       UNDO ALL THE GOOD WORK
         LH    R5,#DSN           SET INDEX  REG
         LTR   R5,R5             ANY GOOD ALLOCATIONS?
         BZ    FREEAREA          NO
         LA    R3,MYDAPB          RESTORE
         ST    R3,DAPLDAPB
         L     R6,DFLTANSW
         USING DAPB18,R3
         MVC   DA18CD(DA18LEN),DAIR18    SET DAIR18 CONSTANTS
         LA    R8,ANSWDSNL                 POINT TO DSN BUFFER
         NI    DA18DPS2,DFLTKEEP             DISPOSITION
FREELOOP MVC   DA18DDN(8),ANSWDDN            DDN TO BE FREED
         BAL   R14,DAIRGO                GO FREE IT
         B     @BUMPPDE                  GOOD RETURN
         NOGO  DAIR,DEST=FREEAREA
@BUMPPDE AH    R6,LNANSENT          BUMP ANSWER POINTER
         BCT   R5,FREELOOP          DO NEXT
         DROP  R6
         SPACE 1
*  FREE ALL GETMAINED AREA'S
FREEAREA L     R5,CONCATPB        IS THERE A CONCAT AREA?
         LTR   R5,R5                ZERO IF NONE
         BZ    ENDUP
         L     R6,CONCATLN          GET LENGTH
         FREEMAIN R,LV=(R6),A=(R5)                                *TSM*
ENDUP    LH    R7,#DSN
         LTR   R7,R7         IF NO SUCCESSES, SKIP
         BZ    EXIT
         L     R6,DFLTANSW   ADRESS OF ANSWER AREA
         USING ANSWDSCT,R6
         MVC   ANSW#DD,#DSN         RETURN NUMBER OF DDNAMES
EXIT     XR    R15,R15       RETRIEVE RETURN CODE
         IC    R15,#PDE
         ENDM  RC=(R15)             GO HOME
         STITL 'PROMPTING FOR MEMBER NAME'                        *TSM*
*              R3 MUST POINT TO A DAPB08                          *TSM*
*              RETURN VIA R9 WITH DA08MNM SET                     *TSM*
*              TERMINATE IF PROMPT NOT SUCCESSFUL                 *TSM*
         SPACE 1                                                  *TSM*
         USING DAPB08,R3                                          *TSM*
PRMPTMEM MVC   DA08MNM,=CL8' '          BLANK MEMBER NAME         *TSM*
         LA    R0,OLD2                  OLD1->OLD2                *TSM*
         ST    R0,OLD1                                            *TSM*
         MVI   OLD1NUML+3,1             OLDLNUML=1 SEGMENT        *TSM*
         LA    R0,SEG2PFX               OLD1SEG1->SEG2            *TSM*
         ST    R0,OLD1SEG1                                        *TSM*
         XC    OLD2(4),OLD2             OLD2 IS LAST MESSAGE      *TSM*
         MVI   OLD2NUML+3,1             OLD2NUML=1 SEGMENT        *TSM*
         LA    R0,SEG1PFX               OLD2SEG1->SEG1            *TSM*
         ST    R0,OLD2SEG1                                        *TSM*
         MVC   SEG1TXT,AMBGUOUS         TSM58600I AMBIGUOUS SPEC  *TSM*
         MVC   SEG1DDN,DFLTDESC                                   *TSM*
         MVI   SEG1PFX+1,SEG1END-SEG1PFX                          *TSM*
         MVC   MSGMBTXT,MEMBSFOR        IKJ58600I SPECIFY MEMBERS *TSM*
         MVC   MSGMBDSN(45),MSGMBDSN-1                            *TSM*
         LH    R8,DSNLEN                MOVE DSNAME               *TSM*
         BCTR  R8,0                                               *TSM*
         EX    R8,MEMBMOVE                                        *TSM*
         LA    R1,MSGMBDSN+2(R8)        ->DSN+L'DSN+1 (1 BL LEFT) *TSM*
         MVC   0(2,R1),=C'+-'             ' +-'                   *TSM*
         LA    R0,MSGMBDSN+4-SEG2PFX(,R8) DSN+L'DSN+3             *TSM*
         STH   R0,SEG2PFX                                         *TSM*
REPRMEM PUTGET PARM=MYPGPB,                                       *TSM**
               OUTPUT=(OLD1,MULTLVL,PROMPT),MF=(E,MYIOPL)         *TSM*
         LTR   R15,R15                  IF RETURN CODE BAD,       *TSM*
         BZ    *+12                                               *TSM*
         NOGO  PTGT                      SQUAWK                   *TSM*
         L     R1,MYIBUF                GET REPLY BUFFER AND      *TSM*
         LH    R15,0(,R1)                   LENGTH                *TSM*
         LR    R0,R15                       LENGTH FOR FREEMAIN   *TSM*
         ICSP  R0,1                     SP1 FOR FREEMAIN          *TSM*
         SH    R15,=H'5'                IF NO MEMBER GIVEN,       *TSM*
         BM    NOMEM                     CALL IT DSORG MISMATCH   *TSM*
         CH    R15,=H'8'                 IS NAME > 8 BYTES ?      *TSM*
         BNL   INVME                      KVETCH IF SO            *TSM*
         EX    R15,MOVEMEMP              MOVE MEMBER NAME         *TSM*
         EX    R15,TRANMEMP              TRANSLATE TO UPPER CASE  *TSM*
      FREEMAIN R,A=(1),LV=(0)                                     *TSM*
         BR    R9                                                 *TSM*
         SPACE 1                                                  *TSM*
MOVEMEMP MVC   DA08MNM(0),4(R1)                                   *TSM*
TRANMEMP OC    DA08MNM(0),=CL8' '                                 *TSM*
MEMBMOVE MVC   MSGMBDSN(0),DSNVAL                                 *TSM*
         SPACE 1                                                  *TSM*
INVME FREEMAIN R,A=(1),LV=(0)                                     *TSM*
         LA    R0,INVMEM                 SQUAWK                   *TSM*
         ST    R0,OLD2SEG1                                        *TSM*
         B     REPRMEM                  REDO PROMPT               *TSM*
         SPACE 1                                                  *TSM*
NOMEM FREEMAIN R,A=(1),LV=(0)                                     *TSM*
         NOGO  POPS                      SQUAWK                   *TSM*
         STITL 'DAIR INTEREFACE AND ANALYSIS'
* ALL CALLS TO IKJDAIR FROM HERE
         SPACE 1
*              RETURN VIA R14:
*              +0                    NORMAL
*              +4                    UNANTICIPATED DAIR ERROR
*              +C                    DAIR RC 08 - LOCATE RC 08 OR 0C
         SPACE 1
DAIRGO   XC    ECB(4),ECB         ZERO ECB
         ST    R14,DAIRBACK          SAVE RETURN ADDRESS
         LINK  EP=IKJDAIR,MF=(E,MYDAPL)
         ST    R15,DAIRRC               STORE RETURN CODE         *TSM*
         LTR   R15,R15             ENDED OK?
         L     R14,DAIRBACK        RESTORE RETURN ADDRESS
         BZ    GOODDAIR
* ANALYZE DAIR ERRORS
         L     R3,DAPLDAPB    POINT TO PARM BLOCK
         CLI   1(R3),X'08'     WAS IT DAIR08 ?
         BNE   DF             NO, CONTINUE WITH DAIRFAIL
         USING DAPB08,R3
         TM    MYFLAGS,ISNEW            IS THIS ALLOC OF NEW DS ? *TSM*
         BO    DF                        YES - DO DAIRFAIL        *TSM*
         SPACE 1                                                  *TSM*
*   CHECK CAUSE OF RETURN. IF DAIRRC IS 8 AND DA08CTRC 12
*   THIS INDICATES THAT THE GIVEN NAME IS AN INDEX LEVEL
*   THEREFORE SAFE TO GO AHEAD WITH DAIR14
*   IF DA08CTRC IS 8, INDEX LEVEL MISSING, SKIP DAIR14
         CLI   DAIRRC+3,DRRCCTLG        DAIR CATALOG ERROR ?      *TSM*
         BNE   DF                        NO  - CALL DAIRFAIL      *TSM*
         CLI   DA08CTRC+1,LCRCNONE      CTLG ERR "NOT FOUND" ?    *TSM*
         BE    12(,R14)                  YES - LEGITIMATE         *TSM*
         CLI   DA08CTRC+1,LCRCINDX      CTLG ERR "NAME IS INDEX"  *TSM*
         BE    12(,R14)                  YES - LEGITIMATE         *TSM*
*        B     DF                        NO  - CALL IKJEFF18      *TSM*
         MNOTE 0,'BYPASS BUG IN DAIRFAIL'                         *TSM*
         CLI   DA08CTRC+1,LCRCDSPE      CTLG ERR "DSPE NOT LAST"  *TSM*
         BNE   DF                        NO  - DAIRFAIL OK        *TSM*
         TM    DFLTFLG1,DFLTNEWK        NEW ALLOWED ?             *TSM*
         BZ    DF                        NO  - WRITE ERRONEOUS MSG*TSM*
         MVI   DA08DSP1,DA08NEW          YES - LIE TO DAIRFAIL    *TSM*
*        B     DF                                                 *TSM*
         SPACE 1                                                  *TSM*
DF       MVI   SEG1PFX+1,MSGDREND-SEG1PFX                         *TSM*
         MVC   MSGDRTXT,DAIRFAIL        TSM56001I DAIR FAILURE FOR*TSM*
         MVC   MSGDRDDN,DFLTDESC                                  *TSM*
       PUTLINE PARM=MYPTPB,                                       *TSM**
               OUTPUT=(SEG1PFX,SINGLE,DATA),MF=(E,MYIOPL)         *TSM*
         LINK  SF=(E,LINKFAIL),MF=(E,FAILDAPL)  DO DAIRFAIL       *TSM*
         L     R14,DAIRBACK     RESTORE RETURN  ADDRESS
         B     4(,R14)            BAD RETURN
GOODDAIR EQU   *
*  ONLY IN CASE OF DAIR08/1C DO I HAVE TO STORE THE ANSWER
         L     R3,DAPLDAPB          PARM BLOCK BASE
         L     R6,CURANSW           CURRENT ANSWER BASE
         CLI   1(R3),X'08'          DAIR08?
         BE    IS08
         CLI   1(R3),X'1C'          DAIR1C?
         BE    IS1C
         BR    R14                   NEITHER, RETURN
         USING DAPB08,R3
IS08     MVC   ANSWDDN,DA08DDN     UNCONDITIONALLY RETURN DDNAME
         MVC   MSGALDDN,DA08DDN         MOVE DDNAME TO MESSAGE    *TSM*
         TM    DFLTFLG1,DFLTDSNR   IS DSN TO BE RETURNED ?
         BZ    @TELL                NO - DON'T MOVE IT IN
         MVC   ANSWDSNL(46),DSNLEN WHOLESALE MOVE OF DSN AND ITS LENGTH
         B     @TELL
         USING DAPB1C,R3
IS1C     MVC   ANSWDDN,DA1CDDN     UNCONDITIONALLY RETURN DDNAME
         MVC   MSGALDDN,DA1CDDN         MOVE DDNAME TO MESSAGE    *TSM*
         TM    DFLTFLG1,DFLTDSNR   IS DSN TO BE RETURNED ?
         BZ    @TELL                NO - DON'T MOVE IT IN
         MVI   ANSWDSN,C'*'        TERMINAL
         LA    R7,1
         STH   R7,ANSWDSNL
@TELL    AH    R6,LNANSENT          BUMP CURANSW
         ST    R6,CURANSW
         LH    R6,#DSN              UPDATE COUNT OF SUCCESSES
         LA    R6,1(,R6)
         STH   R6,#DSN
         TM    DFLTFLG1,DFLTDDND     ANNOUNCE
         BZR   R14               RETURN
* COPY GHOST PULINE PARM BLOCK
*  BUILD MESSAGE  IKJ0101I ... DDN... ALLOCATED TO ... DSN ...    *TSM*
         MVC   MSGID,=C'TSM56002I '                               *TSM*
         MVC   MSGALTXT,ALLOCATE        ' ALLOCATED TO '          *TSM*
         CLI   1(R3),X'1C'                       TERMINAL ?
         BNE   NOT1C
         MVC   MSGALDSN(L'TERMINAL),TERMINAL 'TERMINAL'           *TSM*
         LA    R8,MSGALDSN-MSGAREA+L'TERMINAL                     *TSM*
         B     MSGHEAD
NOT1C    LH    R8,DSNLEN
         BCTR  R8,0
         LA    R5,MSGALDSN              TARGET                    *TSM*
         LA    R6,DSNVAL                SOURCE                    *TSM*
         EX    R8,DSNMOVE               ADD DSNAME                *TSM*
         LA    R8,MSGALDSN-MSGAREA                                *TSM*
         AH    R8,DSNLEN
MSGHEAD  SLL   R8,16                    ADD PREFIX                *TSM*
         ST    R8,MSGPFX                                          *TSM*
         XC    ECB(4),ECB
         PUTLINE PARM=MYPTPB,UPT=DAPLUPT,ECT=DAPLECT,ECB=ECB,          X
               OUTPUT=(MSGAREA,DATA),MF=(E,MYIOPL)
         LTR   R15,R15                  OK?
         L     R14,DAIRBACK     RESTORE
         BER   R14                    RETURN
         NOGO  PTLN
         STITL  'CONSTANTS'
DSNMOVE  MVC   0(,R5),0(R6)
SEG2MOVE MVC   SEG2DSN(0),DSNVAL                                  *TSM*
DAIRFAIL DC    C'TSM56001I DAIR FAILURE FOR '                     *TSM*
TERMINAL DC    C'TERMINAL'
ALLOCATE DC    C' ALLOCATED TO '
LOCFLAG  DC    AL1(68,0,0,0)
OBFLAG   EQU   X'C1'
LAST     EQU   X'80'
DAIR08   DS    0F            DAIR08 CONSTANTS
         DC    X'0008'        ENTRY CODE
         DC    H'0'           FLAGS
         DC    H'0'           DAIR ERROR CODE
         DC    H'0'           CATALOG ERROR CODE
         DC    A(0)           DSN BUFFER
         DC    CL8' '          DDNAME
         DC    CL8' '          UNIT NAME
         DC    CL8' '          VOL SER
         DC    F'0'           BLOCK SIZE
         DC    F'0'           PRIMARY QUANTITY
         DC    F'0'           SECONDARY QUANTITY
         DC    F'0'           DIRECTORY QUANTITY
         DC    CL8' '           MEMBER NAME
         DC    CL8' '          PASSWORD
         DC    F'0'           FLAGS
         DC    AL3(0)         RESERVED
         DC    X'0'           FLAGS
         DC    CL8' '          ATTRIBUTE LIST NAME
DA08LEN  EQU   *-DAIR08
DAIR0C   DS    0F          DAIR0C CONSTANTS
         DC    X'000C'     ENTRY CODE
         DC    H'0'        FLAGS
         DC    H'0'        DAIR RETURN CODE
         DC    H'0'        RESERVED
         DC    H'0'        NUMBER OF DATASETS TO CONCAT
         DC    H'0'        RESERVED
         DC    CL8' '       FIRST DDNAME
DA0CLEN  EQU   *-DAIR0C
DAIR10   DS    0F          DAIR10 CONSTANTS
         DC    X'0010'     ENTRY CODE
         DC    H'0'        RESERVED
         DC    H'0'        DAIR RETURN CODE
         DC    H'0'        RESERVED
         DC    CL8' '       DDNAME TO DECONCAT
DA10LEN  EQU   *-DAIR10
DAIR14   DS    0F           DAIR14 CONSTANTS
         DC    X'0014'      ENTRY CODE
         DC    H'0'         FLAGS
         DC    A(0)         DSN POINTER
         DC    A(0)         WORK AREA POINTER
         DC    X'0'         FLAGS
         DC    AL3(0)       RESERVED
DA14LEN  EQU   *-DAIR14
DAIR18   DS    0F              DAIR18 CONSTANTS
         DC    X'0018'         ENTRY CODE
         DC    H'0'            FLAGS
         DC    H'0'            DAIR RETURN CODE
         DC    H'0'            CATALOG RETURN CODE
         DC    A(0)            DSN POINTER
         DC    D'0'            DDNAME
         DC    CL8' '           MEMBER NAME
         DC    2C' '           SYSOUT CLASS
         DC    H'0'            FLAGS
         DC    CL8' '           JOBNAME
DA18LEN  EQU   *-DAIR18
DAIR1C   DS    0F             DAIR1C CONSTANTS
         DC    X'001C'        ENTRY CODE
         DC    H'0'           FLAGS
         DC    H'0'           DAIR RETURN CODE
         DC    X'0'           RESERVED
         DC    X'0'           CONTROL BYTE
         DC    CL8' '          DDNAME
         DC    CL8' '          ATTRIBUTE LIST NAME
DA1CLEN  EQU   *-DAIR1C
PUTGET   PUTGET OUTPUT=(,SINGLE,PROMPT),TERMGET=(EDIT,WAIT),           *
               TERMPUT=(EDIT,WAIT,NOHOLD,NOBREAK),MF=L            *TSM*
PUTGETLN EQU    *-PUTGET
PUTL     PUTLINE TERMPUT=NOHOLD,MF=L                              *TSM*
PUTLEND  EQU   *-PUTL
         SPACE 1                                                  *TSM*
AMBGUOUS DC    C'TSM58600I AMBIGUOUS SPECIFICATION FOR '          *TSM*
QUALSFOR DC    C'IKJ58600I QUALIFIERS FOR DATA SET '              *TSM*
MEMBSFOR DC    C'TSM58600I SPECIFY MEMBER FOR '                   *TSM*
ENTQUAL  WTO   'IKJ58601A ENTER QUALIFIER- ',MF=L                 *TSM*
INVMEM   WTO   'TSM56002I INVALID MEMBER NAME+-'                  *TSM*
INVDSORG DC    C'TSM56002I '                                      *TSM*
INVDSOR2 DC    C' MUST HAVE DSORG=PS'                             *TSM*
INVDATST DC    C'TSM56002I INVALID DATASET '                      *TSM*
         SPACE 1                                                  *TSM*
LINKFAIL LINK  EP=IKJEFF18,SF=L                                   *TSM*
         SPACE 1                                                  *TSM*
*              OC INSTRUCTION TO CONVERT INPUT TO UPPER CASE      *TSM*
TRAN     OC    0(,R5),=CL8' '      OBJECT OF EXECUTE              *TSM*
         LTORG
         STITL  'CPPL/IOPL/PGPB/PTPB DSECTS'
         IKJCPPL
         IKJIOPL                                                  *TSM*
         IKJPGPB
         IKJPTPB
         STITL   'INDIVIDUAL WORK AREA'
SAVE     DSECT
* WORK AREA FOR OBTAIN/LOCATE
DSCB     DS    0D
CAMWORK  DS    265C
         ORG   CAMWORK+6
VOLSER   DS    CL6                VOLSER OF DSN AFTER LOCATE
         ORG   CAMWORK
         IECSDSL1 (1)
         ORG   CAMWORK+272
         SPACE 3
#PDE     DS    H                  NUMBER OF PDE'S
#DSN     DS    H                  COUNT GOOD ALLOCATIONS
LNANSENT DS    H                  LENGTH OF ANSWER AREA ENTRY
CURANSW  DS    A                  CURRENT POSITION IN ANSWER AREA
MYDAPL   EQU   *                   DAIR PARM LIST
DAPLUPT  DS    A
DAPLECT  DS    A
DAPLECB  DS    A
DAPLPSCB DS    A
DAPLDAPB DS    A
MYDAPB   DS    25F                DAIR PARM BLOCK
MYFLAGS  DS    X                  FLAGS
CONCAT   EQU   X'80'              MORE THAN 1 PDE, CONCAT NEEDED
PREFIX   EQU   X'20'              ADD USERID TO DSN
SECOND   EQU   X'10'              DAIR14 ALREADY DONE
NEEDMNAM EQU   X'08'              MEMBER REQUIRED DUE TO DSORG    *TSM*
ISMEMNAM EQU   X'04'              MEMBER NAME PRESENT             *TSM*
ISNEW    EQU   X'02'              ALLOCATION IS NEW               *TSM*
CONCATPB DS    A                  ADDRESS OF CONCAT PARM BLOCK
CONCATLN DS    F                  AND ITS LENGTH
         SPACE 1                                                  *TSM*
MSGAREA  DS    68C                WORK AREA FOR BUILDING MESSAGES *TSM*
         SPACE 1                                                  *TSM*
         ORG   MSGAREA                                            *TSM*
MSGPFX   DS    H,H                Y(LEN),(OFFSET=0)               *TSM*
MSGID    DS    C'TSM56002I '      MESSAGE ID                      *TSM*
MSGTEXT  DS    0C                 MESSAGE TEXT                    *TSM*
MSGALDDN DS    CL8                DDNAME IN ALLOCATION MESSAGE    *TSM*
MSGALTXT DS    C' ALLOCATED TO '  TEXT   IN ALLOCATION MESSAGE    *TSM*
MSGALDSN DS    CL44               DSNAME IN ALLOCATION MESSAGE    *TSM*
         SPACE 1                                                  *TSM*
         ORG   ,                                                  *TSM*
       CAMLSTD DSECT=NO                                           *TSM*
CAMLIST  EQU   CAMOPTN1,4,C'X'    FLAGS ETC
DSNPTR   EQU   CAMPTR1,4,C'A'
VOLPTR   EQU   CAMCVOLP,4,C'A'
WORKPTR  EQU   CAMPTR3
DSNLEN   DS    H                  CURRENT DSN LENGTH
DSNVAL   DS    CL45        DSN + GUARD BYTE
ECB      DS    F        ECB OF ATTACHED TASK
DAIRRC   DS    F        DAIR RETURN CODE
DAIRMSWR DS    A        ADDRESS OF MESSAGE WRITER (IKJEFF02)
DAIRID   DS    H        ID FOR DAIRFAIL
* DAIRFAIL PARMLIST
FAILDAPL DS    A        ->CURRENT DAPL
FAILRC   DS    A        -> RC
FAILMSWR DS    A        -> MESSAGE WRITER
FAILID   DS    A        -> ID
         SPACE 1                                                  *TSM*
SEG1NXT  DC    A(SEG2NXT)                                         *TSM*
SEG1PFX  DC    Y(SEG1END-SEG1PFX,0)                               *TSM*
SEG1TXT  DC    C'TSM58600I AMBIGUOUS SPECIFICATION FOR '          *TSM*
SEG1DDN  DS    CL8                                                *TSM*
SEG1END  EQU   *                                                  *TSM*
         SPACE 1                                                  *TSM*
         ORG   SEG1TXT                                            *TSM*
MSGDRTXT DS    C'TSM56001I DAIR FAILURE FOR '                     *TSM*
MSGDRDDN DS    CL8                DDNAME IN DAIR FAIL MESSAGE     *TSM*
MSGDREND EQU   *                                                  *TSM*
         SPACE 1                                                  *TSM*
         ORG   SEG1TXT                                            *TSM*
MSORGTXT DS    C'TSM56002I '                                      *TSM*
MSORGDDN DS    CL8                DDNAME IN BAD DSORG MESSAGE     *TSM*
MSORGTX2 DS    C' MUST HAVE DSORG=PS'                             *TSM*
MSORGEND EQU   *                                                  *TSM*
         SPACE 1                                                  *TSM*
         ORG   ,                                                  *TSM*
SEG2NXT  DC    A(SEG3NXT)                                         *TSM*
SEG2PFX  DC    Y(SEG2END-SEG2PFX,0)                               *TSM*
SEG2TXT  DC    C'IKJ58600I QUALIFIERS FOR DATA SET '              *TSM*
SEG2DSN  DS    CL44                                               *TSM*
SEG2ARE  DC    C' ARE'                                            *TSM*
SEG2END  EQU   *                                                  *TSM*
         SPACE 1                                                  *TSM*
         ORG   SEG2TXT                                            *TSM*
MSGMBTXT DS    C'TSM58600I SPECIFY MEMBER FOR '                   *TSM*
MSGMBDSN DS    CL44               DSNAME OF PDS                   *TSM*
MSGMBEND EQU   *                                                  *TSM*
         SPACE 1                                                  *TSM*
         ORG   SEG2TXT                                            *TSM*
MSOR2TXT DS    C'TSM56002I INVALID DATASET '                      *TSM*
MSOR2DSN DS    CL44               DSNAME OF DS WITH BAD DSORG     *TSM*
MSOR2END EQU   *                                                  *TSM*
         ORG   ,                                                  *TSM*
         SPACE 1                                                  *TSM*
SEG3NXT  DC    A(0)                                               *TSM*
SEG3PFX  DC    Y(SEG3END-SEG3PFX,0)                               *TSM*
SEG3TXT  DC    C'IKJ58600I '                                      *TSM*
SEG3QUAL DS    CL8,6CL9                                           *TSM*
SEG3END  EQU   *                                                  *TSM*
         SPACE 1                                                  *TSM*
OLD1     DS    A        POINT TO NEXT OUTPUT LINE DESC
OLD1NUML DS    F        # LINES TO THIS MESSAGE
OLD1SEG1 DS    A        POINT TO FIRST LINE
OLD2     DS    A        POINT TO NEXT OUTPUT LINE DESC
OLD2NUML DS    F        # LINES TO THIS MESSAGE
OLD2SEG1 DS    A        POINT TO FIRST LINE
OLD2SEG2 DS    A        POINT TO NEXT LINE
MYPGPB  PUTGET OUTPUT=(,SINGLE,PROMPT),                           *TSM**
               TERMGET=(EDIT,WAIT),                               *TSM**
               TERMPUT=(EDIT,WAIT,HOLD,NOBREAK),MF=L              *TSM*
MYIBUF   EQU   PGPBIBUF-PGPB+MYPGPB,4,C'A'                        *TSM*
MYPTPB PUTLINE OUTPUT=(SEG1NXT,TERM,MULTLIN,DATA),                *TSM**
               TERMPUT=NOHOLD,MF=L                                *TSM*
MYOPUT   EQU   PTPBOPUT-PTPB+MYPTPB,4,C'A'                        *TSM*
MYIOPL   DS    4F       I/O PARAMETER LIST FOR PUTGET/PUTLINE
MYUPT    EQU   IOPLUPT-IOPL+MYIOPL,4,C'A'                         *TSM*
MYECT    EQU   IOPLECT-IOPL+MYIOPL,4,C'A'                         *TSM*
MYECB    EQU   IOPLECB-IOPL+MYIOPL,4,C'A'                         *TSM*
DAIRBACK DS    A        RETURN ADDRESS FROM DAIRGO
QUALNOW  DS    A        ADDRESS OF CURRENT QUALLIST (REAL OR PSEUDO)
SAVEND   EQU   *
         STITL 'EQU''S FOR RETURN CODES'
      DFLTARTC ,
         STITL 'DSECTS'
         DFLTAP
         SPACE 2
         DFLTAQ
         SPACE 2
         DFLTAAN
         SPACE 2
         DFLTAPDE
         SPACE 2
         DFLTAD
         SPACE 3
         IKJDAP08
         IKJDAP0C
DA0CDDN  DS    8C              /ADDED BY DAVID HENRY
         IKJDAP10
         IKJDAP14
         IKJDAP18
         IKJDAP1C
         STITL 'PROTECTED STEP CONTROL BLOCK'
         IKJPSCB
         END
