         MACRO
&LABEL   EXIT  &FREE=,&RETCODE=,&RESTREG=,&REGNAME=,&MF=
.*
.*       THE EXIT MACRO INSTRUCTION GENERATES THE CODE NECESSARY
.*       TO RETURN CONTROL TO THE CALLER OF A MODULE USING
.*       STANDARD LINKAGE CONVENTIONS.  IT MAY BE CODED IN OPEN
.*       CODE OR MAY BE INVOKED THROUGH ANOTHER MACRO USING THE
.*       MF= OPERAND (THIS IS CURRENTLY DONE BY THE ENTER MACRO).
.*
.*       IT IS INVOKED BY CODING:
.*
.*                  --                        -- --       --
.*             EXIT ×RETCODE=VALUE × (REGISTER)× ×,MF=G × V×
.*                  --                        -- --       --
.*                  --                -- --                      --
.*                  ×,REGNAME=REGPREFIX× ×,RESTREG=((REG1),(REG2))×
.*                  --                -- --                      --
.*                  --      --                      --
.*                  ×,FREE=(×YES×NO×SIZE×(EXPRESSION)×,
.*                  --      --                      --
.*                           --           --   --     --  --
.*                           ×ADDRESS×(REG)× , ×SUBPOOL× ) ×
.*                           --           --   --     --  --
.*             VALUE IS REPLACED BY THE ACTUAL VALUE TO BE SET AS
.*                  A RETURN CODE OR A SYMBOLIC NAME FOR THE VALUE.
.*
.*             REGISTER IS REPLACED BY THE NUMBER OF THE GENERAL
.*                  REGISTER IN WHICH THE RETURN CODE MAY BE FOUND.
.*                  THE REGISTER NUMBER MUST BE IN PARENTHESIS AND
.*                  MAY NOT BE 0 OR 1.
.*
.*             REGPREFIX IS REPLACED BY A VALID ASSEMBLER LABEL
.*                  UP TO 6 CHARACTERS LONG WHICH WILL PREFIX
.*                  REGISTER NUMBERS WHERE THEY ARE USED.
.*
.*             REG1 AND REG2 ARE THE FIRST AND LAST REGISTERS IN
.*                  THE RANGE OF REGISTERS TO BE RESTORED.  IF NOT
.*                  SPECIFIED RESTREG=(14,12) IS ASSUMED.
.*                  NOTE RESTREG= OTHER THAN (14,12) IS CURRENTLY
.*                  NOT SUPPORTED.
.*
.*             YES INDICATES A FREEMAIN OF STORAGE ACQUIRED BY THE
.*                  ENTER MACRO BE PERFORMED.  THIS IS THE DEFAULT.
.*
.*             NO INDICATES NO FREEMAIN BE PERFORMED.
.*
.*             SIZE IS REPLACED BY THE ACTUAL SIZE OR SYMBOLIC
.*                  NAME FOR THE SIZE OF THE AREA TO BE FREED.
.*
.*             EXPRESSION IS REPLACED BY AN EXPRESSION REPRESENT-
.*                  ING THE SIZE OF THE AREA TO BE FREED.
.*
.*             ADDRESS IS REPLACED BY THE NAME OF A FULLWORD CON-
.*                  TAINING THE ADDRESS OF THE AREA TO BE FREED.
.*
.*             REG IS REPLACED BY THE NUMBER OF THE GENERAL REG-
.*                  ISTER CONTAINING THE ADDRESS OF THE AREA TO
.*                  BE FREED.  IF ADDRESS AND REG ARE BOTH OMITTED
.*                  THE DEFAULT IS REGISTER 13.
.*
.*             SUBPOOL IS REPLACED BY THE NUMBER OF THE SUBPOOL OF
.*                  THE STORAGE TO BE FREED.  IF NOT SPECIFIED,
.*                  ZERO OR THE ENTER MACRO SUBPOOL IS ASSUMED.
.*
.*             USE OF THE MF= OPERAND PERMITS USE OF THE EXIT
.*             MACRO INSTRUCTION AS AN INNER MACRO.  WHEN MF=V IS
.*             CODED, ONLY PARAMETER VALIDATION IS PERFORMED.
.*             ERRORS ARE INDICATED BY A 1 IN GLOBAL BINARY VAR-
.*             IABLE &EXITERR.  WHEN MF=G IS CODED THE EXIT CODE
.*             IS GENERATED FROM THE PREVIOUSLY SUPPLIED PARAMETERS
.*             STORED IN GLOBAL VARIABLES.
.*
.*             IF THE CALLING MACRO SUPPORTS A 'REGPREFIX', THE
.*             REGNAME= PARAMETER NEED NOT BE SPECIFIED IF A
.*             GLOBAL CHARACTER VARIABLE NAMED '&R' IS USED TO
.*             CONTAIN THE PREFIX.
.*
.* G L O B A L   A R I T H M E T I C   V A R I A B L E S
.*
         GBLA  &LABERR,&VREGERR
.*
.*             &LABBER IS A SWITCH USED TO INDICATE DETECTION OF
.*                  AN ERROR BY THE VALAB INNER MACRO.  '0' = THE
.*                  LABEL IS VALID.
.*
.*             &VREGERR IS A SWITCH USED TO INDICATE DETECTION OF
.*                  AN ERROR BY THE VALREG INNER MACRO.
.*
.* G L O B A L   B I N A R Y   V A R I A B L E S
.*
         GBLB  &EXITERR,&EXITVAL,&EXFREE,&RCREG,&DSAVE,&NOSAVAR
.*
.*             &EXITERR IS A SWITCH USED TO INDICATE A VALIDATION
.*                  ERROR IN THIS MACRO.  0 = OK; 1 = ERR.
.*
.*             &EXITVAL IS A SWITCH USED TO INDICATE THAT AN MF=V
.*                  INVOCATION HAS PRECEEDED AN MF=G INVOCATION.
.*
.*             &EXFREE IS A SWITCH USED TO INDICATE FREEMAIN CODE
.*                  IS TO BE GENERATED.  0 = NO; 1 = YES.
.*
.*             &RCREG IS A SWITCH USED TO INDICATE THE RETURN CODE
.*                  IS IN A REGISTER.  0 = NO; 1 = YES.
.*
.*             &DSAVE IS A SWITCH USED TO INDICATE THAT A DYNAMIC
.*                  AREA WAS OBTAINED BY THE ENTER MACRO.  0 = NO;
.*                  1 = YES.
.*
.*             &NOSAVAR IS A SWITCH USED TO INDICATE WHETHER OR NOT
.*                  A SAVE AREA AND ASSOCIATED CODE WAS PRODUCED BY
.*                  THE ENTER MACRO.  '1' = NO.  '0' = YES.
.*
.* G L O B A L   C H A R A C T E R   V A R I A B L E S
.*
         GBLC  &R,&RCVAL,&EXFRSP,&EXFRSIZ,&EXFRREG,&EXFRADR,&DSAVSP,&DS*
               AVSIZ,&VALREG,&VALREGN,&RCVALNP
.*
.*             &R IS USED TO STORE OR RECEIVE FROM A HIGHER LEVEL
.*                  MACRO THE REGISTER NAME PREFIX.
.*
.*             &RCVAL IS USED TO STORE THE RETURN CODE VALUE OR
.*                  REGISTER NUMBER.
.*
.*             &RCVALNP IS USED TO STORE THE ABSOLUTE RETURN CODE
.*                  REGISTER NUMBER.
.*
.*             &EXFRSP IS USED TO STORE THE FREEMAIN SUBPOOL.
.*
.*             &EXFRSIZ IS USED TO STORE THE FREEMAIN SIZE.
.*
.*             &EXFRREG IS USED TO STORE THE FREEMAIN ADDRESS
.*                  REGISTER NUMBER.
.*
.*             &EXFRADR IS USED TO STORE THE FREEMAIN ADDRESS
.*                  FIELD NAME.
.*
.*             &DSAVSP IS USED TO PASS THE SUBPOOL OF THE DYNAMIC
.*                  AREA OBTAINED BY ENTER, IF ANY.
.*
.*             &DSAVSIZ IS USED TO PASS THE SIZE OF THE DYNAMIC
.*                  AREA OBTAINED BY ENTER, IF ANY.
.*
.*             &VALREG IS USED TO PASS A QUALIFIED VALID REGISTER
.*                  NAME BACK FROM THE VALREG INNER MACRO.
.*
.*             &VALREGN IS USED TO PASS AN UNQUALIFIED VALID REG-
.*                  ISTER NAME BACK FROM THE VALREG INNER MACRO.
.*
.* L O C A L   A R I T H M E T I C   V A R I A B L E S
.*
         LCLA  &LENGTH,&NUMCHK
.*
.*             &LENGTH IS USED FOR SUBLIST ADDRESSING.
.*
.*             &NUMCHK IS USED TO RANGE CHECK NUMERIC PARAMETERS.
.*
.* V A L I D A T E   M F =   P A R A M E T E R
.*
.A010    ANOP
         AIF   (T'&MF EQ 'O').A040
         AIF   ('&MF' EQ 'G').A030
         AIF   ('&MF' EQ 'V').A020
         MNOTE 8,'EXIT MF= PARM MUST BE ''G'', ''V'' OR OMITTED'
&EXITERR SETB  1
.A020    ANOP
&EXITVAL SETB  1                        INDICATE VALIDATE PASS DONE
         AGO   .A050
.A030    ANOP
         AIF   (&EXITVAL EQ 1).ERR010
         MNOTE 8,'MF=G MUST BE PRECEDED BY MF=V INVOCATION OF EXIT'
&EXITERR SETB  1
         AGO   .Z010
.A040    ANOP
&EXITVAL SETB  0
.A050    ANOP
&EXFRSP  SETC  '0'
&EXFRREG SETC  ' '
&EXFREE  SETB  0
&EXFRSIZ SETC  '72'
&EXITERR SETB  0
         AGO   .B010
.*
.* V A L I D A T E   R E G N A M E =   P A R A M E T E R
.*
.B010    ANOP
         AIF   (T'&REGNAME EQ 'O').C010
         VALAB &REGNAME,6,NAME=REGNAME
         AIF   (&LABERR EQ 0).B020
&EXITERR SETB  1
         AGO   .C010
.B020    ANOP
&R       SETC  '&REGNAME'
         AGO   .C010
.*
.* V A L I D A T E   R E T C O D E =   P A R A M E T E R
.*
.C010    ANOP
         AIF   (T'&RETCODE NE 'O').C020
&RCREG   SETB  0
&RCVAL   SETC  '0'
         AGO   .D010
.C020    ANOP
         VALREG &RETCODE,(2,15),NAME=RETCODE
         AIF   (&VREGERR EQ 0).C030
         AIF   (&VREGERR EQ 1).C040
&EXITERR SETB  1
         AGO   .D010
.C030    ANOP
&RCREG   SETB  1
&RCVAL   SETC  '&VALREG'
&RCVALNP SETC  '&VALREGN'
         AGO   .D010
.C040    ANOP
&RCREG   SETB  0
&RCVAL   SETC  '&RETCODE'
         AGO   .D010
.*
.* V A L I D A T E   F R E E =   P A R A M E T E R
.*
.D010    ANOP
         AIF   (T'&FREE NE 'O').D020
         AIF   (&DSAVE EQ 0).D040
&EXFREE  SETB  1
         AGO   .D040
.D020    ANOP
         AIF   ('&FREE' EQ 'NO').E010
         AIF   ('&FREE' NE 'YES').D050
         AIF   (&DSAVE EQ 1).D030
         MNOTE 8,'EXIT FREE=YES BUT NO DYNAMIC SAVE AREA FROM ENTER'
&EXITERR SETB  1
         AGO   .E010
.D030    ANOP
&EXFREE  SETB  1
.D040    ANOP
&EXFRSIZ SETC  '&DSAVSIZ'
&EXFRSP  SETC  '&DSAVSP'
&EXFRREG SETC  '&R.13'
         AGO   .E010
.D050    ANOP
&EXFREE  SETB  1
         AIF   (T'&FREE(1) EQ 'O').D060
&EXFRSIZ SETC  '&FREE(1)'
.D060    ANOP
         AIF   (T'&FREE(3) EQ 'O').D070
&EXFRSP  SETC  '&FREE(3)'
.D070    ANOP
         AIF   (T'&FREE(2) EQ 'O').E010
         VALREG &FREE(2),NAME=FREE-ADDRESS
         AIF   (&VREGERR EQ 0).D090
         AIF   (&VREGERR EQ 1).D080
&EXITERR SETB  1
         AGO   .E010
.D080    ANOP
         VALAB &FREE(2),NAME=FREE-ADDRESS
         AIF   (&LABERR EQ 0).D085
&EXITERR SETB  1
         AGO   .E010
.D085    ANOP
&EXFRADR SETC  '&FREE(2)'
         AGO   .E010
.D090    ANOP
&EXFRREG SETC  '&VALREG'
         AGO   .E010
.*
.*
.*
.E010    ANOP
.*
.* C H E C K   F O R   V A L I D A T I O N   E R R O R S
.*
.ERR010  ANOP
         AIF   (&EXITERR EQ 1).Z010
         AIF   ('&MF' EQ 'V').Z010
.*
.* G E N E R A T E   E X I T   C O D E
.*
.* SET UP FOR FREEMAIN
.*
.GEN010  ANOP
         AIF   (T'&LABEL EQ 'O').GEN012
&LABEL   DS    0H
.GEN012  ANOP
         AIF   (&NOSAVAR EQ 1).GEN060
         AIF   (&EXFREE EQ 0).GEN050
         AIF   ('&EXFRREG' EQ ' ').GEN020
         LR    &R.1,&EXFRREG       LOAD ADDR OF AREA TO FREE
         AGO   .GEN030
.GEN020  ANOP
         L     &R.1,&EXFRADR       LOAD ADDR OF AREA TO FREE
.GEN030  ANOP
         CNOP  0,4
         B     *+8
         DC    AL1(&EXFRSP)        SUBPOOL OF AREA TO FREE
         DC    AL3(&EXFRSIZ)       SIZE OF AREA TO FREE
         L     &R.0,*-4            LOAD SIZE OF AREA TO FREE
.*       LA    &R.0,&EXFRSIZ       LOAD SIZE OF AREA TO FREE
.*       AIF   ('&EXFRSP' EQ '0').GEN040
.*       ICM   &R.0,8,=AL1(&EXFRSP) SET SUBPOOL OF AREA TO FREE
.GEN040  ANOP
         AIF   (&RCREG EQ 0).GEN050
         AIF   (('&RCVALNP' NE '14') AND ('&RCVALNP' NE '15')).GEN050
         LR    &R.2,&RCVAL         SAVE RETURN CODE
&RCVALNP SETC  '2'
&RCVAL   SETC  '&R.2'
.GEN050  ANOP
.*
.* GEN COMMON R13 RELOAD
.*
         L     &R.13,4(&R.13)      RESTORE CALLERS SAVE AREA ADDR
         XC    8(4,&R.13),8(&R.13) REMOVE OUR SAVE AREA FROM CHAIN
.*
.* GEN THE FREEMAIN
.*
         AIF   (&EXFREE EQ 0).GEN060
         FREEMAIN R,LV=(0),A=(1)
.*
.* SET RETURN CODE
.*
.GEN060  ANOP
         AIF   (&RCREG EQ 0).GEN070
         AIF   ('&RCVALNP' EQ '15').GEN080
         LR    &R.15,&RCVAL        SET RETURN CODE
         AGO   .GEN080
.GEN070  ANOP
         LA    &R.15,&RCVAL        SET RETURN CODE
.*
.* GEN RETURN
.*
.GEN080  ANOP
         RETURN (14,12),RC=(15)
.*
.* M A C R O   E X I T
.*
.Z010    MEND
         EJECT
