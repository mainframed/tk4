         MACRO
&LABEL   CLEAR &FIELD,&FILL,&LENGTH,&REG1,&REG2
.*
.*       VERSION 01.00 - J.G.KINKER - 1/79
.*
.*       CLEAR GENERATES CODE TO INITIALIZE A FIELD WITH A GIVEN
.*       CHARACTER.  IT IS CODED:
.*
.*       --   --                  --       -- --          --
.*       ×LABEL× CLEAR FIELD-NAME,×FILL-CHAR×,×FIELD-LENGTH×
.*       --   --                  --       -- --          --
.*
.*                      --  -- --  --
.*                     ,×REG1×,×REG2×
.*                      --  -- --  --
.*
.*       LABEL IS OPTIONAL AND IS REPLACED WITH A VALID ASSEMBLER
.*             LABEL IF SUPPLIED.
.*
.*       FIELD-NAME IS REPLACED BY THE SYMBOL OR REGISTER OF
.*             THE FIELD TO BE CLEARED.  IT IS REQUIRED.
.*
.*       FILL-CHAR IS REPLACED BY THE CHARACTER TO BE USED TO
.*             CLEAR THE FIELD IN 'IMMEDIATE DATA' FORMAT.  IF
.*             OMITTED IT DEFAULTS TO BLANK.
.*
.*       FIELD-LENGTH IS REPLACED BY THE LENGTH OF THE FIELD TO
.*             BE CLEARED.  IF OMITTED, THE ASSEMBLED FIELD LENGTH
.*             IS USED.  IF CODED, AN MVCL INSTRUCTION SEQUENCE IS
.*             ALWAYS GENERATED.  MAY BE ABSOLUTE, SYMBOL OR
.*             REGISTER.
.*
.*       REG1 AND REG2 ARE REPLACED BY REGISTER NUMBERS
.*             TO BE USED FOR MVCL.  EACH MUST REPRESENT
.*             THE EVEN REGISTER OF AN EVEN/ODD PAIR.  REG1
.*             DEFAULT IS ZERO; REG2 DEFAULT IS 14.
.*
.*
.* G L O B A L   A R I T H M E T I C   V A R I A B L E S
.*
         GBLA  &VREGERR,&LABERR
.*
.*             &VREGERR IS USED TO RECEIVE ERROR CODES FROM THE
.*                 VALREG MACRO.
.*
.*             &LABERR IS USED TO RECEIVE ERROR CODES FROM THE
.*                 VALAB MACRO.
.*
.*
.* L O C A L   A R I T H M E T I C   V A R I A B L E S
.*
         LCLA  &LEN,&NUM
.*
.*             &LEN AND &NUM ARE USED IN THE VALIDATION OF THE
.*                 REG1 AND REG2 PARAMETERS.
.*
.*
.* L O C A L   B I N A R Y   V A R I A B L E S
.*
         LCLB  &ERR,&SHORT,&LENSET,&PTRSET
.*
.*             &ERR IS THE VALIDATION ERROR INDICATOR.
.*
.*             &SHORT IS THE SHORT MOVE INDICATOR.  IF '1', AN
.*                  MVI, MVC SEQUENCE IS GENERATED.
.*
.*             &LENSET IF ON INDICATES THAT THE FIELD LENGTH IS
.*                  PRELOADED IN REG1.
.*
.*             &PTRSET IF ON INDICATES THAT THE FIELD ADDRESS IS
.*                  PRELOADED IN REG0.
.*
.*
.* G L O B A L   C H A R A C T E R   V A R I A B L E S
.*
         GBLC  &REGNMPX,&VALREG,&VALREGN
.*
.*             &REGNMPX IS USED TO PICKUP THE REGISTER NAME PREFIX
.*                  IF ANY ESTABLISHED BY THE ENTER MACRO.
.*
.*             &VALREG IS USED TO RECEIVE REGISTER NUMBERS FROM
.*                  THE VALREG MACRO WITH THE REGPREFIX ALREADY
.*                  APPLIED.
.*
.*             &VALREGN IS USED THE SAME AS &VALREG EXCEPT ITS
.*                  VALUE IS NOT PREFIXED.
.*
.*
.* L O C A L   C H A R A C T E R   V A R I A B L E S
.*
         LCLC  &L,&R0,&R14,&R,&DATA,&LENREG,&R1,&R15,&PTRREG
.*
.*             &L IS USED TO GENERATE THE "L'" LENGTH ATTRIBUTE
.*                  SYMBOL.
&L       SETC  'L'''
.*
.*             &R IS USED TO CONTAIN THE REGISTER NAME PREFIX. IT
.*                  IS SET FROM GLOBAL VARIABLE &REGNMPX.
&R       SETC  '&REGNMPX'
.*
.*             &DATA CONTAINS THE DATA CHARACTER TO BE USED FOR
.*                  CLEARING THE TARGET FIELD.
&DATA    SETC  'X''40'''
.*
.*             &LENREG CONTAINS THE REGISTER CONTAINING THE FIELD
.*                  LENGTH.
.*
.*             &PTRREG CONTAINS THE REGISTER CONTAINING THE FIELD
.*                  ADDRESS.
.*
.*             &R0 CONTAINS THE SYMBOLIC NAME OF THE 'A' OPERAND
.*                  REGISTER.
&R0      SETC  '&R.0'
.*
.*             &R1 CONTAINS THE SYMBOLIC NAME OF THE REGISTER
.*                  WHICH IS &R0+1.
&R1      SETC  '&R.1'
.*
.*             &R14 CONTAINS THE SYMBOLIC NAME OF THE 'B' OPERAND
.*                  REGISTER.
&R14     SETC  '&R.14'
.*
.*             &R15 CONTAINS THE SYMBOLIC NAME OF THE REGISTER
.*                  WHICH IS &R14+1.
&R15     SETC  '&R.15'
.*
.*
.* V A L I D A T E   L A B E L
.*
         AIF   (T'&LABEL EQ 'O').VAL200
         VALAB &LABEL,NAME=LABEL
         AIF   (&LABERR EQ 0).VAL200
&ERR     SETB  1
.*
.* V A L I D A T E   F I E L D   N A M E
.*
.VAL200  ANOP
         VALREG &FIELD,NAME=FIELD-NAME       SEE IF FIELD IS REG
         AIF   (&VREGERR EQ 0).VAL210        B IF YES
         AIF   (&VREGERR EQ 1).VAL220        B IF NOT IN ( )
&ERR     SETB  1
         AGO   .VAL300
.VAL210  ANOP
&PTRREG  SETC  '&VALREG'                     SAVE REG
         AIF   ('&VALREGN' NE '0').VAL300    SEE IF IT'S REG 0
&PTRSET  SETB  1                             IF YES DON'T SET REG 0
         AGO   .VAL300
.VAL220  ANOP
         VALAB &FIELD,NAME=FIELD-NAME        MAKE SURE IT'S VALID
         AIF   (&LABERR EQ 0).VAL300         B IF OK
&ERR     SETB  1
         AGO   .VAL300
.*
.* V A L I D A T E   F I E L D   L E N G T H
.*
.VAL300  ANOP
         AIF   (T'&LENGTH NE 'O').VAL310     IF SPECIFIED, USE IT
         AIF   ('&PTRREG' EQ '').VAL305
         MNOTE 8,'LENGTH MUST BE SUPPLIED WHEN FIELD IS REGISTER'
&ERR     SETB  1
         AGO   .VAL400
.VAL305  AIF   (L'&FIELD GT 256).VAL400      IF ASSEMBLED LENGTH
.*                                           > 256 GENERATE MVCL
&SHORT   SETB  1                             ELSE TURN ON SHORT
         AGO   .VAL400
.VAL310  ANOP
         VALREG &LENGTH,NAME=FIELD-LENGTH    SEE IF LENGTH IS REG
         AIF   (&VREGERR EQ 0).VAL320        B IF YES
         AIF   (&VREGERR EQ 1).VAL400        B IF NOT IN ( )
&ERR     SETB  1
         AGO   .VAL400
.VAL320  ANOP
&LENREG  SETC  '&VALREG'                     SAVE REG
         AIF   ('&VALREGN' NE '1').VAL400    SEE IF IT'S REG 1
&LENSET  SETB  1                             IF YES DON'T SET REG 1
         AGO   .VAL400
.*
.* V A L I D A T E   R E G 1   A N D   R E G 2
.*
.VAL400  ANOP
         AIF   (T'&REG1 EQ 'O').VAL505
         AIF   ('&REG1'(1,1) EQ '(').VAL410
         MNOTE 8,'REG1 MUST BE ENCLOSED IN PARENTHESIS'
&ERR     SETB  1
         AGO   .VAL500
.VAL410  ANOP
&LEN     SETA  K'&REG1
         AIF   ('&REG1'(&LEN,1) EQ ')').VAL420
         MNOTE 4,'UNBALANCED PARENTHESIS IN REG1 OPERAND, ASSUMED'
&LEN     SETA  &LEN+1
.VAL420  ANOP
&R0      SETC  '&REG1'(2,&LEN-2)
         AIF   (('&R0'(1,1) GE '0') AND ('&R0'(1,1) LE '9')).VAL430
         MNOTE 8,'REG1 MUST BE NUMERIC'
&ERR     SETB  1
         AGO   .VAL500
.VAL430  ANOP
&NUM     SETA  &R0
         AIF   ((&NUM EQ 0) OR (&NUM EQ 2) OR (&NUM EQ 4) OR (&NUM EQ 6*
               ) OR (&NUM EQ 8) OR (&NUM EQ 10) OR (&NUM EQ 12) OR (&NU*
               M EQ 14)).VAL440
         MNOTE 8,'REG1 MUST BE AN EVEN NUMBERED REGISTER'
&ERR     SETB  1
         AGO   .VAL500
.VAL440  ANOP
&NUM     SETA  &NUM+1
&R1      SETC  '&R&NUM'
&R0      SETC  '&R&R0'
.VAL500  ANOP
         AIF   ((&LENSET EQ 0) AND (&PTRSET EQ 0)).VAL505
         MNOTE 4,'FIELD LENGTH AND ADDRESS CANNOT BE PRESET'
         MNOTE 4,'  IF REG1 IS SPECIFIED; PRESET IGNORED'
&LENSET  SETB  0
&PTRSET  SETB  0
.VAL505  ANOP
         AIF   (T'&REG2 EQ 'O').VAL600
         AIF   ('&REG2'(1,1) EQ '(').VAL510
         MNOTE 8,'REG2 MUST BE ENCLOSED IN PARENTHESIS'
&ERR     SETB  1
         AGO   .VAL600
.VAL510  ANOP
&LEN     SETA  K'&REG2
         AIF   ('&REG2'(&LEN,1) EQ ')').VAL520
         MNOTE 4,'UNBALANCED PARENTHESIS IN REG2 OPERAND, ASSUMED'
&LEN     SETA  &LEN+1
.VAL520  ANOP
&R14     SETC  '&REG2'(2,&LEN-2)
         AIF   (('&R14'(1,1) GE '0') AND ('&R14'(1,1) LE '9')).VAL530
         MNOTE 8,'REG2 MUST BE NUMERIC'
&ERR     SETB  1
         AGO   .VAL600
.VAL530  ANOP
&NUM     SETA  &R14
         AIF   ((&NUM EQ 0) OR (&NUM EQ 2) OR (&NUM EQ 4) OR (&NUM EQ 6*
               ) OR (&NUM EQ 8) OR (&NUM EQ 10) OR (&NUM EQ 12) OR (&NU*
               M EQ 14)).VAL540
         MNOTE 8,'REG2 MUST BE AN EVEN NUMBERED REGISTER'
&ERR     SETB  1
         AGO   .VAL600
.VAL540  ANOP
&NUM     SETA  &NUM+1
&R15     SETC  '&R&NUM'
&R14     SETC  '&R&R14'
.VAL600  ANOP
         AIF   ('&R0' NE '&R14').VAL610
         MNOTE 8,'REG1 AND/OR REG2 OVERRIDE HAS CAUSED REG1 = REG2'
         MNOTE 8,'REG1 = &R0  REG2 = &R14'
&ERR     SETB  1
.VAL610  ANOP
.*
.* G E N E R A T E   R E Q U I R E D   C O D E
.*
.*       IF VALIDATION ERRORS,GO TO END
.*
.GEN010  ANOP
         AIF   (&ERR EQ 1).Z010
.*
.*       GENERATE LABEL IF ONE SUPPLIED
.*
         AIF   (T'&LABEL EQ '0').GEN020
&LABEL   TAG
.GEN020  ANOP
.*
.*       IF SHORT MOVE REQUIRED, GO TO IT
.*
         AIF   (&SHORT EQ 1).GENS010
.*
.* G E N E R A T E   M V C L
.*
.*
.*       SET TARGET FIELD POINTER
.*
         AIF   ('&PTRREG' EQ '').GENL010
         AIF   (&PTRSET EQ 1).GENL020
         LR    &R0,&PTRREG         SET PTR TO FIELD TO CLEAR
         AGO   .GENL020
.GENL010 ANOP
         LA    &R0,&FIELD          SET PTR TO FIELD TO CLEAR
.GENL020 ANOP
.*
.*       SET TARGET FIELD LENGTH
.*
         AIF   (T'&LENGTH EQ 'O').GENL040
         AIF   ('&LENREG' EQ '').GENL030
         AIF   (&LENSET EQ 1).GENL050
         LR    &R1,&LENREG         SET LENGTH OF FIELD TO CLEAR
         AGO   .GENL050
.GENL030 ANOP
         LA    &R1,&LENGTH         SET LENGTH OF FIELD TO CLEAR
         AGO   .GENL050
.GENL040 ANOP
         LA    &R1,&L&FIELD        SET LENGTH OF FIELD TO CLEAR
.GENL050 ANOP
.*
.*       SET PADDING CHARACTER
.*
         SLDL  &R14,63             ZERO SOURCE LENGTH AND ADDR
         AIF   (T'&FILL EQ 'O').GENL060
         ICM   &R15,B'1000',=&FILL SET PADDING CHARACTER
         AGO   .GENL070
.GENL060 ANOP
         ICM   &R15,B'1000',=&DATA SET PADDING CHARACTER
.GENL070 ANOP
         MVCL  &R0,&R14            CLEAR THE FIELD
         AGO   .Z010
.*
.* G E N E R A T E   S H O R T   M O V E
.*
.GENS010 ANOP
         AIF   (T'&FILL NE 'O').GENS020
         MVI   &FIELD,&DATA        MOVE IN CLEAR CHARACTER
         AGO   .GENS030
.GENS020 ANOP
         MVI   &FIELD,&FILL        MOVE IN CLEAR CHARACTER
.GENS030 ANOP
         MVC   &FIELD+1(&L&FIELD-1),&FIELD PROPAGATE IT
         AGO   .Z010
.*
.* E N D   O F   M A C R O
.*
.Z010    ANOP
         MEND
