         MACRO
&LABEL   PERF  &RTN,&OK,&NOTOK,&LINKREG=,&TESTREG=,&LIMCHK=
.*
.*       VERSION 01.00 - J.G.KINKER - 3/78
.*
.*       PERF GENERATES LINKAGE TO AN INTERNAL SUB-ROUTINE AND
.*       OPTIONAL CODE TO TEST ITS RETURN CODE AS FOLLOWS:
.*
.*       PERF  B010,A010  OR  PERF B010,,A010  OR PERF B010
.*       BAL   R14,B010       BAL  R14,B010       BAL  R14,B010
.*       LTR   R15,R15        LTR  R15,R15
.*       BZ    A010           BNZ  A010
.*
.*
.*       PERF  B010,A010,A020,,A030  OR PERF B010,,A010,A020,A030
.*       BAL   R14,B010                 BAL  R14,B010
.*       B     *+L'*(R15)               B    *+L'*(R15)
.*       B     A010                     B    $PERF#
.*       B     A020                     B    A010
.*       NOP   *+L'*                    B    A020
.*       B     A030                     B    A030
.*                               $PERF# EQU  *
.*
.*
.*       PERF IS CODED:
.*
.*       --   --               --     -- --         --
.*       ×LABEL× PERF SUB-ROUT,×OK-ROUT×,×NOTOK-ROUT1×,
.*       --   --               --     -- --         --
.*
.*                    --         --       --         --'
.*                    ×NOTOK-ROUT2×,.....,×NOTOK-ROUTN×
.*                    --         --       --         --  --
.*
.*                    --              -- --              --
.*                    ×,LINKREG=LINKREG× ×,TESTREG=TESTREG×
.*                    --              -- --              --
.*
.*                    --                    --
.*                    ×,LIMCHK=LIM-ROUT × YES×
.*                    --                    --
.*
.*       LABEL IS OPTIONAL AND IS REPLACED WITH A VALID ASSEMBLER
.*             LABEL IF SUPPLIED.
.*
.*       SUB-ROUT IS REPLACED BY THE VALID ASSEMBLER LABEL OF THE
.*             SUB-ROUTINE TO BE GIVEN CONTROL.  IT IS REQUIRED.
.*
.*       OK-ROUT IS REPLACED BY A VALID ASSEMBLER LABEL TO WHICH
.*             CONTROL WILL BE PASSED IF THE SUB-ROUTINE SETS A
.*             ZERO RETURN CODE.
.*
.*       NOTOK-ROUT1 IS REPLACED BY A VALID ASSEMBLER LABEL TO
.*             WHICH CONTROL WILL BE PASSED IF THE SUB-ROUTINE
.*             SETS A NON-ZERO RETURN CODE AND OK-ROUT AND OTHER
.*             NOTOK-ROUT'S ARE OMITTED.
.*
.*       IF MULTIPLE NOTOK-ROUT'S OR BOTH OK-ROUT AND NOTOK-ROUTS
.*       ARE SPECIFIED, A BRANCH LIST IS GENERATED WITH NOP'S FOR
.*       OMITTED NOTOK-ROUTS.  AN OMITTED OK-ROUT WILL CAUSE A
.*       GENERATED  OK-ROUT LABEL IMMEDIATELY FOLLOWING THE BRANCH
.*       LIST.  THE BRANCH LIST ASSUMES A RETURN CODE IN MULTIPLES
.*       OF FOUR.
.*
.*       LINKREG IS REPLACED BY THE NUMBER OR SYMBOLIC REPRESENT-
.*             ATION OF THE NUMBER OF THE REGISTER TO BE USED FOR
.*             SUB-ROUTINE LINKAGE.  IT MUST BE ENCLOSED IN
.*             PARENTHESIS AND IF OMITTED DEFAULTS TO 14.  THIS
.*             IS A GLOBAL SPECIFICATION AND REMAINS IN EFFECT
.*             UNTIL RESPECIFIED.
.*
.*       TESTREG IS REPLACED BY THE NUMBER OR SYMBOLIC REPRESENT-
.*             ATION OF THE NUMBER OF THE REGISTER TO BE TESTED
.*             FOR RETURN CODE.  IT MUST BE ENCLOSED IN PAREN-
.*             THESIS AND IF OMITTED DEFAULTS TO 15.  THIS IS
.*             ALSO A GLOBAL SPECIFICATION.
.*
.*       LIM-ROUT IS REPLACED BY THE LABEL OF THE ROUTINE TO BE
.*             GIVEN CONTROL IF THE VALUE IN THE TESTREG EXCEEDS
.*             THAT WHICH IS A VALID BRANCH INDEX FOR THE LAST
.*             NOTOK-ROUT SPECIFIED.  THIS PARAMETER CAUSES THE
.*             FOLLOWING INSTRUCTIONS TO BE GENERATED BEFORE THE
.*             INDEXED BRANCH:
.*                    CH   TESTREG,=H'INDEX-LIMIT'
.*                    BH   LIM-ROUT
.*
.*       YES   REQUESTS GENERATION OF CODE IDENTICAL TO THAT GEN-
.*             ERATED BY A LIM-ROUT REQUEST EXCEPT THAT THE BRANCH
.*             POINT IS TO A GENERATED LABEL WHICH IMMEDIATELY
.*             FOLLOWS THE GENERATED BRANCH LIST.  WHEN THIS OPT-
.*             ION IS CHOSEN, AN OK-ROUT LABEL MUST BE SUPPLIED.
.*
.*
.* G L O B A L   A R I T H M E T I C   V A R I A B L E S
.*
         GBLA  &PERFCNT,&LABERR,&VREGERR
.*
.*             &PERFCNT IS A COUNTER OF THE NUMBER OF PERF MACRO
.*                  INSTRUCTIONS AND IS USED IN LABEL GENERATION.
&PERFCNT SETA  &PERFCNT+1
.*
.*             &LABERR IS USED TO RETURN AN ERROR INDICATION FROM
.*                  THE VALAB INNER MACRO.
.*
.*             &VREGERR IS USED TO RETURN AN ERROR INDICATOR FROM
.*                  THE VALREG INNER MACRO.
.*
.*
.* G L O B A L   C H A R A C T E R   V A R I A B L E S
.*
         GBLC  &PERFLNK,&PERFTST,&VALREG,&R
.*
.*             &PERFLNK IS USED TO STORE THE LINKAGE REGISTER
.*                  NAME.
         AIF   ('&PERFLNK' NE '').A010
&PERFLNK SETC  '&R.14'
.A010    ANOP
.*
.*             &PERFTST IS USED TO STORE THE RETURN CODE REGISTER
.*                  NAME.
         AIF   ('&PERFTST' NE '').A020
&PERFTST SETC  '&R.15'
.A020    ANOP
.*
.*             &VALREG IS USED TO PASS A QUALIFIED VALID REGISTER
.*                  NUMBER FROM THE VALREG INNER MACRO.
.*
.*             &R IS USED TO RECEIVE THE THE REGISTER NAME PREFIX.
.*
.*
.* L O C A L   A R I T H M E T I C   V A R I A B L E S
.*
         LCLA  &P,&CNT,&RC,&LIMR
.*
.*             &P IS USED AS A SHORTER ALTERNATIVE TO &PERFCNT IN
.*                  LABEL GENERATION.
&P       SETA  &PERFCNT
.*
.*             &CNT IS A SUBSCRIPT FOR &SYSLIST.
.*
.*             &RC IS USED TO GENERATE THE RETURN CODE COMMENT ON
.*                  CASE BRANCH POINT STATEMENTS.
.*
.*             &LIMR IS USED TO GENERATE THE MAXIMUM RETURN CODE
.*                  ACCEPTABLE FOR LIMIT CHECKING.
.*
.*
.* L O C A L   B I N A R Y   V A R I A B L E S
.*
         LCLB  &ERR,&OKONLY,&CASE,&OKGEN
.*
.*             &ERR IS A VALIDATION ERROR INDICATOR.
.*
.*
.* L O C A L   C H A R A C T E R   V A R I A B L E S
.*
         LCLC  &LIMLAB,&T1,&T2,&T3,&T4
.*
.*             &LIMLAB IS USED TO STORE THE BRANCH LABEL USED IF
.*                  THE RETURN CODE IS OUT OF EXPECTED RANGE.
.*
.*             &T1 IS USED TO GENERATE THE RETURN CODE COMMENT ON
.*                  CASE BRANCH POINT STATEMENTS.
&T1      SETC  '        '
.*
.*             &T2 IS USED TO GENERATE THE RETURN CODE COMMENT ON
.*                  CASE BRANCH POINT STATEMENTS.
&T2      SETC  '        '
.*
.*             &T3 IS USED TO GENERATE THE RETURN CODE COMMENT ON
.*                  CASE BRANCH POINT STATEMENTS.
&T3      SETC  'RC = '
.*
.*             &T4 IS USED TO GENERATE THE RETURN CODE COMMENT ON
.*                  CASE BRANCH POINT STATEMENTS.
&T4      SETC  '       '
.*
.*
.* V A L I D A T E   L I N K R E G =
.*
         AIF   (T'&LINKREG EQ 'O').B020
         VALREG &LINKREG,NAME=LINK-REGISTER,ERR1=YES
         AIF   (&VREGERR EQ 0).B010
&ERR     SETB  1
         AGO   .B020
.B010    ANOP
&PERFLNK SETC  '&VALREG'
.B020    ANOP
.*
.* V A L I D A T E   T E S T R E G =
.*
         AIF   (T'&TESTREG EQ 'O').B040
         VALREG &TESTREG,NAME=RET-CODE-REGISTER,ERR1=YES
         AIF   (&VREGERR EQ 0).B030
&ERR     SETB  1
         AGO   .B040
.B030    ANOP
&PERFTST SETC  '&VALREG'
.B040    ANOP
.*
.* V A L I D A T E   L A B E L
.*
         AIF   (T'&LABEL EQ 'O').B050
         VALAB &LABEL,NAME=LABEL
         AIF   (&LABERR EQ 0).B050
&ERR     SETB  1
.B050    ANOP
.*
.* V A L I D A T E   R T N   L A B E L
.*
         VALAB &RTN,NAME=SUB-ROUTINE-LABEL
         AIF   (&LABERR EQ 0).B060
&ERR     SETB  1
.B060    ANOP
         AIF   (N'&SYSLIST LT 2).ERRCHK
.*
.*       IF N'SYSLIST LT 2 THEN THIS IS SIMPLEST FORM OF MACRO
.*       AND VALIDATION IS COMPLETE.  GENERATION WILL CONSIST
.*       ONLY OF THE 'BAL  R14,SUB-ROUT'.
.*
         AIF   (T'&OK EQ 'O').C010
         AIF   (N'&SYSLIST GT 2).CASE
.*
.*       IF &OK IS PRESENT AND N'&SYSLIST EQ 2 THEN THIS IS
.*       'PERF  SUB-ROUT,OK-ROUT' FORM.
.*
.* V A L I D A T E   O K   R T N   L A B E L
.*
&OKONLY  SETB  1
         VALAB &OK,NAME=OK-ROUT-LABEL
         AIF   (&LABERR EQ 0).ERRCHK
&ERR     SETB  1
         AGO   .ERRCHK
.*
.*       IF &OK WAS OMITTED BUT N'&SYSLIST GT 1 THEN WE HAVE
.*       EITHER A SINGLE NOTOK-ROUT OR A LIST OF THEM.
.*
.C010    ANOP
         AIF   (N'&SYSLIST GT 3).CASE
         AIF   (T'&NOTOK EQ 'O').ERRCHK
.*
.* V A L I D A T E   S I N G L E   N O T O K   R T N   L A B E L
.*
         VALAB &NOTOK,NAME=NOTOK-ROUT-LABEL
         AIF   (&LABERR EQ 0).ERRCHK
&ERR     SETB  1
         AGO   .ERRCHK
.*
.* V A L I D A T E   L I M C H K =
.*
.CASE    ANOP
&CASE    SETB  1
         AIF   (T'&LIMCHK EQ 'O').ERRCHK
         AIF   ('&LIMCHK' NE 'YES').CASE020
         AIF   (T'&OK NE 'O').CASE010
         MNOTE 8,'EITHER OK-ROUT OR LIMCHK= LABELS MUST BE SUPPLIED'
&ERR     SETB  1
         AGO   .ERRCHK
.CASE010 ANOP
&LIMLAB  SETC  '$PERF&P'
&OKGEN   SETB  1
         AGO   .ERRCHK
.CASE020 ANOP
         VALAB &LIMCHK,NAME=LIMIT-ERROR-LABEL
         AIF   (&LABERR EQ 0).CASE030
&ERR     SETB  1
         AGO   .ERRCHK
.CASE030 ANOP
&LIMLAB  SETC  '&LIMCHK'
         AGO   .ERRCHK
.*
.*
.*
.ERRCHK  ANOP
         AIF   (&ERR EQ 1).Z010
.*
.* G E N E R A T E   L I N K A G E
.*
&LABEL   BAL   &PERFLNK,&RTN       LINK TO SUB-ROUTINE
         AIF   (N'&SYSLIST LT 2).Z010
         AIF   (&CASE EQ 1).GENCASE
         AIF   (&OKONLY NE 0).GEN005
         AIF   (T'&NOTOK EQ 'O').Z010
.GEN005  ANOP
         LTR   &PERFTST,&PERFTST   TEST SUCCESS OF SUB-ROUTINE
         AIF   (&OKONLY EQ 0).GEN010
         BZ    &OK                 B IF OK
         AGO   .Z010
.GEN010  ANOP
         BNZ   &NOTOK              B IF NOT OK
         AGO   .Z010
.*
.* G E N E R A T E   B R A N C H   T A B L E
.*
.GENCASE ANOP
         AIF   (T'&LIMCHK EQ 'O').GENC010
&LIMR    SETA  N'&SYSLIST
&LIMR    SETA  &LIMR*4-8
         CH    &PERFTST,=H'&LIMR'  CHECK FOR MAXIMUM RETURN CODE
         BH    &LIMLAB             B IF OUT OF RANGE
.GENC010 ANOP
         B     *+L'*(&PERFTST)     B INDEXED BY RETURN CODE
         AIF   (T'&OK NE 'O').GENC020
         B     $PERF&P             RC = 0
&OKGEN   SETB  1
         AGO   .GENC030
.GENC020 ANOP
         B     &OK                 RC = 0
.GENC030 ANOP
.*
.* G E N E R A T E   N O T O K   B R A N C H E S
.*
&CNT     SETA  2
.GENC040 ANOP
&CNT     SETA  &CNT+1
&RC      SETA  &CNT*4-8
         AIF   (N'&SYSLIST LT &CNT).GENC800
         AIF   (T'&SYSLIST(&CNT) EQ 'O').GENC050
         B     &SYSLIST(&CNT)&T1&T2&T3&RC
         AGO   .GENC040
.GENC050 ANOP
         NOP   *+L'*&T1&T4&T3&RC
         AGO   .GENC040
.GENC800 ANOP
         AIF   (&OKGEN EQ 0).Z010
$PERF&P  EQU   *
.Z010    ANOP
         MEND
