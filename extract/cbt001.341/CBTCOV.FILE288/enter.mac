         MACRO
&NAME    ENTER &R,&FPR,&SAVE=,&BASE=,&SPIE=YES,&ID=YES,&BASE2=0
         LCLA  &SIZE,&SIZE1,&SIZE2
         LCLC  &BASE1,&BR(06),&HOLD,&SPIE1
.*
.*       AUTHOR - GARY R. KOENIG
.*
.*       DATE - SEPTEMBER 25, 1969
.*
.*       FUNCTION - THE ENTER MACRO IS USED IN ASSEMBLER ROUTINES TO
.*         SAVE CODING THE REGISTER EQUATES, THE SAVING OF REGISTERS,
.*         ESTABLISHING A BASE REGISTER, ESTABLISHING A NEW SAVE AREA
.*         AND CROSS-LINKING WITH THE OLD SAVE AREA.  A STATIC OR A
.*         DYNAMIC SAVE AREA CAN BE GENERATED BY THE MACRO OR THE AD-
.*         DRESS OF A SAVE AREA OUTSIDE THE MACRO CAN BE USED.  THE
.*         ENTER MACRO ALSO INSERTS THE PROGRAM IDENTIFICATION FOR THE
.*         ABEND/DUMP ROUTINE.  THE SPIE MACRO IS ALSO ISSUED TO ALLOW
.*         ASSEMBLER SUBROUTINES TO BE LINKED WITH COMPILER LEVEL
.*         LANGUAGES.
.*
.*       CODING - ENTER IS CODED INTO THE ASSEMBLER PROGRAM ACCORDING
.*         TO THE RULES OF MACRO INSERTION.  IT HAS TWO POSITIONAL
.*         PARAMETERS AND FOUR KEYWORD PARAMETERS AS FOLLOWS:
.*         1)  THE FIRST POSITIONAL PARAMETER (P/P) IS AN ALPHA-NUMERIC
.*           VARIABLE (1 TO 6 CHARACTERS LONG) USED FOR GENERAL-PURPOSE
.*           REGISTER EQUATES.  IF THIS PARAMETER IS OMITTED NO EQUATES
.*           ARE MADE.
.*         2)  THE SECOND P/P IS THE SAME AS THE FIRST AND IS USED FOR
.*           FLOATING-POINT REGISTER EQUATES.
.*         3)  THE &SAVE KEYWORD PARAMETER (K/P) CAN BE CODED &SAVE=XXX
.*           IN WHICH CASE THE ENTER MACRO WILL USE THE LOCATION AD-
.*           DRESSED BY XXX TO STORE THE REGISTERS.  IF &SAVE=RENT IS
.*           CODED, A DYNAMIC AREA WILL BE GENERATED USING A GETMAIN
.*           MACRO INSTRUCTION.  IF &SAVE IS OMITTED OR IS NULL, AN IN-
.*           TERNAL STATIC SAVE AREA WILL BE GENERATED WITH NO LABEL.
.*         4)  THE &BASE K/P IS USED TO DEFINE WHICH REGISTER IS TO BE
.*           USED FOR A BASE REGISTER.  IF &BASE IS NOT CODED AND A
.*           STATIC SAVE AREA WAS GENERATED BY THE PROGRAM, REGISTER 13
.*           WILL BE USED FOR BOTH THE ADDRESS OF THE SAVE AREA AND THE
.*           BASE REGISTER.  IF &BASE IS NOT CODED AND A STATIC SAVE
.*           AREA WAS NOT GENERATED BY THE MACRO, REGISTER 12 WILL BE
.*           USED AS THE BASE REGISTER.  IF &BASE=15 IS CODED, REGISTER
.*           15 WILL BE USED AS A BASE REGISTER, THE REGISTERS WILL BE
.*           STORED BUT NO NEW SAVE AREA WILL BE GENERATED NOR THE
.*           CROSS-LINKING OF THE SAVE AREAS UNLESS &SAVE=XXX IS EXPLI-
.*           CITLY CODED.  IF &BASE=14 IS CODED THIS WOULD CAUSE ERRORS
.*           SO REGISTER 12 OR 13 WILL BE USED ACCORDING TO THE &SAVE
.*           K/P.
.*         5)  THE &SPIE K/P IS USED TO CONTROL GENERATION OF THE SPIE
.*           MACRO.  IF &SPIE=NO IS CODED, NO SPIE MACRO WILL BE GENER-
.*           ATED.  IF &SPIE=YES IS CODED OR &SPIE IS OMITTED, THE SPIE
.*           MACRO WILL BE GENERATED FOR SYSTEM ACTION ON ALL INTER-
.*           RUPTS.  IF AN INTERRUPTION EXIT ADDRESS IS DESIRED ALONG
.*           WITH DESIGNATED INTERRUPTION TYPES, THEY SHOULD BE CODED
.*           ACCORDING TO THE RULES OF THE SPIE MACRO BUT INSERTED IN
.*           AN EXTRA SET OF PARENTHESES.
.*           EX:  &SPIE=(SPIEXIT,((7,9),15))
.*         6)  THE &ID K/P IS USED TO CONTROL GENERATION OF THE PROGRAM
.*           IDENTIFICATION FOR ABEND/DUMP ROUTINE AT OFFSET +4 FROM
.*           THE BEGINNING OF THE CSECT.  IF &ID=NO IS CODED, THE IDEN-
.*           TIFICATION WILL NOT BE GENERATED.  IF &ID=YES IS CODED OR
.*           &ID IS OMITTED, THE IDENTIFICATION WILL BE GENERATED.
&BASE1   SETC  '&BASE'
&HOLD    SETC  '&R'.'2'
&SPIE1   SETC  '&SPIE'
         AIF   ('&BASE' NE '15' AND '&BASE' NE '1').C0
&SPIE1   SETC  'NO'
         AGO   .C2
.C0      AIF   ('&BASE1' NE '2').C1
&HOLD    SETC  '&R'.'3'
         AGO   .C2
.C1      AIF  ('&BASE' NE '14' AND '&BASE' NE '0' AND '&BASE' NE '').C3
&BASE1   SETC  '13'
.C2      AIF   ('&BASE1' NE '13' OR '&SAVE' EQ '').C3
&BASE1   SETC  '12'
.C3      AIF   ('&R' EQ '').C4
         MNOTE *,'GENERAL PURPOSE REGISTER EQUATES'
         MNOTE *,'     REGISTER &BASE1 IS THE BASE'
         AIF   ('&BASE2' EQ '0').D3
         MNOTE *,'  REGISTER &BASE2 IS THE SECOND BASE'
.D3      ANOP
&R.0     EQU   0
&R.1     EQU   1
&R.2     EQU   2
&R.3     EQU   3
&R.4     EQU   4
&R.5     EQU   5
&R.6     EQU   6
&R.7     EQU   7
&R.8     EQU   8
&R.9     EQU   9
&R.10    EQU   10
&R.11    EQU   11
&R.12    EQU   12
&R.13    EQU   13
&R.14    EQU   14
&R.15    EQU   15
         SPACE 1
.C4      AIF   ('&FPR' EQ '').C5
&FPR.0   EQU   0                  FLOATING POINT REGISTER EQUATES
&FPR.2   EQU   2
&FPR.4   EQU   4
&FPR.6   EQU   6
         SPACE 1
.C5      AIF   ('&BASE1' NE '15' AND '&BASE1' NE '13').C6
         USING *,&R.15
.C6      AIF   ('&ID' EQ 'NO').C11
         AIF   ('&NAME' EQ '').C7
&BR(1)   SETC  '&NAME'
&BR(2)   SETC  ''
&SIZE    SETA  1
         AGO   .C8
.C7      AIF   ('&SYSECT' EQ '').C9
&BR(1)   SETC  '&SYSECT'
&BR(2)   SETC  ''
&SIZE    SETA  1
.C8      AIF   ('&BR(1)'(1,&SIZE) EQ '&BR(1)').C10
&SIZE    SETA  &SIZE+1
         AGO   .C8
.C9      ANOP
&BR(1)   SETC  'PRIVATE '
&BR(2)   SETC  'CODE'
&SIZE    SETA  12
.C10     ANOP
&SIZE1   SETA  ((&SIZE+2)/2)*2+4
&NAME    B     &SIZE1.(0,&R.15)   BRANCH AROUND IDENTIFIER
         DC    AL1(&SIZE)         LENGTH OF IDENTIFIER
         DC    CL&SIZE'&BR(1)&BR(2)' IDENTIFIER
         STM   &R.14,&R.12,12(&R.13)
         AGO   .C12
.C11     ANOP
&NAME    STM   &R.14,&R.12,12(&R.13)
.C12     AIF   ('&BASE1' EQ '15' OR '&BASE1' EQ '13').C13
         BALR  &R&BASE1,0
         AIF   ('&BASE2' NE '0').D12
         USING *,&R&BASE1
         AGO   .E12
.D12     USING *,&R&BASE1,&R&BASE2
.E12     AIF   ('&SAVE' NE 'RENT').C13
         LR    &HOLD,&R.1         SAVE PARAMETER ADDRESS REGISTER
         LA    &R.0,72            LOAD LENGTH
         BAL   &R.1,*+4           INDICATE GETMAIN
         SVC   10                 ISSUE GETMAIN SVC
         ST    &R.13,4(&R.1)      CROSS-LINK
         ST    &R.1,8(&R.13)      THE SAVE AREAS
         LR    &R.13,&R.1         RELOCATE ADDRESS OF NEW SAVE AREA
         AIF   ('&SPIE1' EQ 'NO').C21
         AGO   .C18
.C13     AIF   ('&SAVE' NE '').C14
         AIF   ('&BASE1' EQ '15').C22
         CNOP  2,4
         LA    &R.14,*+18         LOAD ADDRESS OF NEW SAVE AREA
         AGO   .C15
.C14     LA    &R.14,&SAVE        LOAD ADDRESS OF NEW SAVE AREA
.C15     ST    &R.13,4(&R.14)     CROSS-LINK
         ST    &R.14,8(&R.13)     THE SAVE AREAS
         LR    &R.13,&R.14        RELOCATE ADDRESS OF NEW SAVE AREA
         AIF   ('&SAVE' NE '').C17
         B     *+4+72             BRANCH AROUND SAVE AREA
         AIF   ('&BASE1' NE '13').C16
         AIF   ('&BASE2' NE '0').D15
         USING *,&R.13            USE SAVE AREA ADDRESS ALSO AS BASE
         AGO   .E15
.D15     USING *,&R.13,&R&BASE2   USE SAVE AREA ADDRESS ALSO AS BASE
.E15     DROP  &R.15              DROP THE TEMPORARY BASE REGISTER
.C16     DC    18CL4'SAVE'        REGISTER SAVE AREA
.C17     AIF   ('&SPIE1' EQ 'NO').C22
         LR    &HOLD,&R.1         SAVE PARAMETER ADDRESS REGISTER
.C18     ANOP
         CNOP  2,4
.C185    LA    &R.1,*+12          LOAD BRANCH ADDRESS
         BALR  &R.1,&R.1          BRANCH AROUND PARAMETERS
         DC    A(0)               EXIT ROUTINE ADDRESS
         DC    AL2(0)             INTERUPTION MASK
         SVC   14                 ISSUE SPIE SVC
.C20     ST    &R.1,0(&R.13)      SAVE PREVIOUS PICA
.C21     LR    &R.1,&HOLD         RESTORE PARAMETER ADDRESS REGISTER
.C22     AIF   ('&BASE2' EQ '0').C23
         LA    &R&BASE2,2048(&R&BASE1) LOAD SECOND BASE REGISTER WITH
         LA    &R&BASE2,2048(&R&BASE2) VALUE 4096 BEYOND FIRST BASE REG
.C23     MEND
