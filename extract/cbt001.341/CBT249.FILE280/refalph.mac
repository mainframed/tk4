.cm SCRIPT REFERENCE REFALPH
.ur .bx 1 &sysll
.sp;.ce SCRIPT Control Words by Function
.sp;.bx off
.se contfunc=&sysppage
.se brkind='* '
.lb SCRIPTCD
.ur .if '&reftab' eq '' ..th .tb 23 &SYSLL.RIGHT
.el .ur .tb 23 '&reftab'&SYSLL.RIGHT
.fo off;.su on
.sp
  *  INDICATES CONTROL WORD CAUSES A BREAK
.sp
.cp begin
.uc Backspace
.sp
     BackSpace	.BS <char> <H_J_O_I_N_×NOHJOIN> 	&bs
.cp end
.sp;.cp begin
.uc Boxes
.sp
  *  BoX	.BX <<v1 <v2 ... >>×OFF×DELETE> 	&bx
.cp end
.sp
.cp begin
.uc Comment
.sp
     CoMment	.CM <anything> 	&cm
     Comment	.*  <anything> 	&cm
.cp end
.sp
.cp begin
.uc Conditional Facilities
.sp
     Conditional	.CS n <<ON×OFF>×<INCLUDE×IGNORE>> 	&cs
        Section
     IF	.IF opnd <operator> opnd <line> 	&if
     THen	.TH line 	&th
     ELse	.EL line 	&el
     DO	.DO <B_E_G_I_N_×END> 	&do
.if '&type' eq ALL
     ENd "do"	.EN    	&en
     PErform	.PE <1_×n×YES×NO×DELETE> 	&pe
.sp
     see also .CC, .CP, .SK, .SP
.cp end
.sp
.cp begin
.uc Control Word Operations
.sp
     Control Word	.CW <;×char> 	&cw
        separator
     Control word	.CR <oo <ww>> 	&cr
        Replacement
     LIteral	.LI <1_×n×ON×OFF×char×line> 	&li
     Null	.   <line> 	&nl
.cp end
.sp
.cp begin
.uc EasySCRIPT
.sp
     EasySCRIPT	.EZ <ON <lastDewey>> 	&ez
               	    <OFF           >
               	    <tagval line   >
.cp end
.sp
.cp begin
.uc File Processing
.sp
     APpend	.AP Filename <args> 	&ap
     IMbed	.IM Filename <args> 	&im
     End of File	.EF <Y_E_S_×NO> 	&ef
     PUt workfile	.PU <1_×n> <line> 	&pu
  *  Quit Quickly	.QQ <Y_E_S_×NO> 	&qq
  *  QUit	.QU <Y_E_S_×NO> 	&qu
.sp
     GOto	.GO <ident×n×+n×-n> 	&go
     LaBel	.LB <ident×n> <line> 	&lb
     LaBel	... <ident×n> <line> 	&lb
.cp end
.sp
.cp begin
.uc Floating Text Blocks
.sp
     Floating Block	.FB <BEGIN×END <0_×m>> 	&fb
                   	    <DUMP <n>>
     Floating Keep	.FK <BEGIN×END <0_×m>> 	&fk
                  	    <DUMP <n>>
.cp end
.sp
.cp begin
.uc Footnotes
.sp
     FootNote	.FN <BEGIN×END> 	&fn
             	    <SET n>
             	    <SET n /s1/s2/s3/>
.cp end
.sp
.cp begin
.uc Formatting
.sp
  *  BReak	.BR <line> 	&br
  *  CEnter	.CE <1_×n×YES×NO×line> 	&ce
  *  COncatenate	.CO <Y_E_S_×NO> 	&co
  *  FOrmat	.FO <Y_E_S_×NO×LEFT×RIGHT×CENTRE> 	&fo
           	    <INSIDE×OUTSIDE×HALF>
.if '&type' eq all;.do
  *      or	.FI <Y_E_S_×NO×LEFT×RIGHT×CENTRE> 	&fi
           	    <INSIDE×OUTSIDE×HALF>
.do end
  *  JUstify	.JU <Y_E_S_×NO×LEFT×RIGHT×CENTRE> 	&ju
            	    <INSIDE×OUTSIDE×HALF>
  *  Left Adjust	.LA <1_×n×YES×NO×line> 	&la
.if '&type' eq all
  *  No Concatenate	.NC <Y_E_S_×NO> 	&nc
.if '&type' eq ALL
  *  No Format	.NF <Y_E_S_×NO> 	&nf
.if '&type' eq ALL
  *  No Justify	.NJ <Y_E_S_×NO> 	&nj
  *  Out Justify	.OJ <1_×n×YES×NO×line> 	&oj
  *  Right Adjust	.RA <1_×n×YES×NO×line> 	&ra
.if '&type' eq ALL
  *            or	.RI <1_×n×YES×NO×line> 	&ri
.cp end
.sp
.cp begin
.uc Formatting Environment Status
.sp
     REstore status	.RE    	&re
     SAve status	.SA    	&sa
.cp end
.sp
.cp begin
.uc Headnotes
.sp
     HeadNote	.HN <EVEN×ODD> <BEGIN×END> 	&hn
             	    <EVEN×ODD> <PURGE×DUMP>
.cp end
.sp
.cp begin
.uc Hyphenation Control
.sp
     HYphenation	.HY <ON×USER×OFF> 	&hy
                	    <SET THRESH <5_×n×+n×-n>>
                	    <SET MINPT <3_×n×+n×-n>>
                	    <SET ENDPT <3_×n×+n×-n>>
                	    <SET SUP   <3_×n×+n×-n>>
                	    <SUP>
                	    <ADD×DELETE×CHANGE> word-with-breaks
                	    <TEST word-without-breaks×DUMP×PURGE>
     Hyphenate Word	.HW text-line 	&hw
.cp end
.sp
.cp begin
.uc Index
.sp
     IndeX	.IX <1_×n> 'S1' <'S2' <'S3'>> <<.> <ref>>
          	    <1_×n> . <DUMP×PURGE> 	&ix
.cp end
.sp
.cp begin
.uc Line Spacing
.sp
  *  SKip	.SK <1_×n> <A> <C> 	&sk
  *  SPace	.SP <1_×n> <A> <C> 	&sp
  *  LiNe immediate	.LN <n×+n×-n> 	&ln
  *  Single Space	.SS    	&ss
  *  Double Space	.DS    	&ds
  *  Line Spacing	.LS <0_×n×+n×-n×YES×NO> 	&ls
  *  Don't Count	.DC     	&dc
     LEading space	.LE <Y_E_S_×NO> 	&le
.cp end
.sp
.cp begin
.uc Macros
.sp
     Define Macro	.DM name /line1/...linen</> 	&dm
                 	    name <BEGIN×END>
                 	    name DELETE
     Macro	.MS <ON×OFF> 	&ms
        Substitution
.cp end
.sp
.cp begin
.uc Margin Modification
.sp
  *  ADjust	.AD <EVEN×ODD> <0_×n×+n×-n> 	&ad
  *  Hanging Indent	.HI <0_×n×+n×-n×YES×NO> 	&hi
  *  INdent	.IN <0_×m×+m×-m×*> <0_×n×+n×-n×*> 	&in
  *  Indent Line	.IL <0_×n×+n×-n> 	&il
  *  OFfset	.OF <0_×n×+n×-n> 	&of
.if '&type' eq ALL
  *  Paragraph Indent	.PI <0_×n×+n×-n×YES×NO> 	&pi
  *  Paragraph start	.PP <line> 	&pp
.if '&type' eq ALL
  *  UNdent	.UN <0_×n×+n×-n> 	&un
.cp end
.sp
.cp begin
.uc Multiple Columns
.sp
     Balance Columns	.BC <O_N_×OFF> 	&bc
  *  Column Begin	.CB      	&cb
     Conditional	.CC <0_×n×BEGIN×END <0_×m>> 	&cc
        Column
  *  Column	.CD <n <d1 <d2 ... d9>>> 	&cd
        Definition
  *  Column Length	.CL <0_×n×+n×-n> 	&cl
  *  Multiple Column	.MC      	&mc
  *  Single Column	.SC      	&sc
.cp end
.sp
.cp begin
.uc Overlaying Text
.sp
     DArk output	.DA <1_×n×+n×-n×YES×NO> 	&da
     Overlay	.OC <char×ON×O_F_f_×n> <c1 ...> 	&oc
        Character	    char/<ON×OFF×n> <c1 ...>
     Output Overlay	.OO <1_×n×ON <string>> 	&oo
                   	    <OFF×DELETE>
     OVerlay on    	.OV <1_×n×ON <string>> 	&ov
        input      	    <OFF×DELETE>
.cp end
.sp
.cp begin
.uc Page Dimensions
.sp
  *  Line Length	.LL <6_0_×n×+n×-n> 	&ll
  *  Page Length	.PL <6_6_×n×+n×-n> 	&pl
.sp
  *  Top Margin	.TM <6_×n×+n×-n> 	&tm
  *  Heading Margin	.HM <1_×n×+n×-n> 	&hm
  *  Heading Space	.HS <1_×n×+n×-n> 	&hs
.sp
  *  Bottom Margin	.BM <6_×n×+n×-n> 	&bm
  *  Footing Margin	.FM <1_×n×+n×-n> 	&fm
  *  Footing Space	.FS <1_×n×+n×-n> 	&fs
.cp end
.sp
.cp begin
.uc Page Numbering
.sp
     Page Symbol	.PS <%_×Character> 	&ps
     Page Numbering	.PN <O_N_×OFF×ONOFF> 	&pn
                   	    <ARABIC×ROMAN <L_O_W_E_R_×UPPER>>
                   	    <PREFIX×SUFFIX <string>>
                   	    <FRAC×NORM>
.if '&type' eq ALL
     ARabic	.AR <L_O_W_E_R_×UPPER> 	&ar
.if '&type' eq ALL
     ROman	.RO <L_O_W_E_R_×UPPER> 	&ro
.cp end
.sp
.cp begin
.uc Page Spacing
.sp
  *  PAge eject	.PA <%_+_1_×n×+n×-n <m×+m×-m>> 	&pa
               	    <YES×NO×ODD×EVEN>
     Conditional Page	.CP <0_×n×BEGIN×END <0_×m>> 	&cp
.if '&type' eq ALL
  *  Even Page eject	.EP    	&ep
.if '&type' eq ALL
  *  Page eVen	.PV    	&pv
.if '&type' eq ALL
  *  Odd Page eject	.OP    	&op
.if '&type' eq ALL
  *  Page oDd	.PD    	&pd
     EMpty page	.EM <Y_E_S_×NO×OFFNO> 	&em
.cp end
.sp
.cp begin
.uc Page Titles
.sp
     Top Title	.TT <1_×n> /S1/S2/S3/ 	&tt
.if '&type' eq ALL
     HEading	.HE <1_×n> <S1×'S1'S2'S3'> 	&he
     Even Title	.ET <1_×n> /S1/S2/S3/ 	&et
.if '&type' eq ALL
     Heading eVen	.HV <1_×n> <S1×'S1'S2'S3'> 	&hv
     Odd Title	.OT <1_×n> /S1/S2/S3/ 	&ot
.if '&type' eq ALL
     Heading oDd	.HD <1_×n> <S1×'S1'S2'S3'> 	&hd
.sp
     Bottom Title	.BT <1_×n> /S1/S2/S3/ 	&bt
.if '&type' eq ALL
     Footing	.FE <1_×n> <S1×'S1'S2'S3'> 	&fe
     Even Bottom	.EB <1_×n> /S1/S2/S3/ 	&eb
.if '&type' eq ALL
     Footing eVen	.FV <1_×n> <S1×'S1'S2'S3'> 	&fv
     Odd Bottom	.OB <1_×n> /S1/S2/S3/ 	&ob
.if '&type' eq ALL
     Footing oDd	.FD <1_×n> <S1×'S1'S2'S3'> 	&fd
.cp end
.sp
.cp begin
.uc Reference Variables
.sp
     Read Variable	.RV symbol 	&rv
     SEt reference	.SE symbol=<'string'×expression> 	&se
     Set Reference	.SR symbol <'string'×expression> 	&sr
     SUbstitute	.SU <1_×n×ON×OFF×line> 	&su
        reference	    <U_P_P_E_R_×NOUPPER>
                 	    <TRACEON×TRACEOFF>
     Use Reference	.UR line 	&ur
.cp end
.sp
.cp begin
.uc Remotes
.sp
     ReMote	.RM <*×n×name <m×SAVE×N_O_S_A_V_E_> <S_A_V_E_×NOSA
           	    <*×n×name DELETE>
           	    <DELETE> 	&rm
     SIgnal remote	.SI <*_×n×name> <args> 	&si
.cp end
.sp
.cp begin
.uc Revision Codes
.sp
     Revision Code	.RC n <ON×OFF×ON/OFF> 	&rc
                  	    n <char×SET string>
.cp end
.sp
.cp begin
.uc System Communication
.sp
     SYstem	.SY line 	&sy
.cp end
.sp
.cp begin
.uc Tabs
.sp
  *  TaB	.TB <n1 n2 n3 ...> 	&tb
        	    <<'string'×char/>n<L_×R×C×'char'> ...>
        	    <SET <char>>
.cp end
.sp;.cp begin
.uc Tables of Contents
.sp
     Define Heading	.DH <SET m> n <<SKBF n> <SPAF n>
                   	               <TCOF n> <TCIN n>
                   	               <BR×NBR> <OJ×NOJ>
                   	               <PA×NPA> <TC×NTC>
                   	               <TO×NTO> <TS×NTS>
                   	               <UP×NUP> <US×NUS>> 	&dh
  *  Heading Level	.HL <0_×n> line 	&hl
  *     or        	.Hn line 	&h0
     Put Table of	.PT <line> 	&pt
        contents
  *  Table of	.TC <1_×n×* <C_O_N_T_E_N_T_S_×line>> 	&tc
        Contents	    <ADD <m ... >>
                	    <PURGE>
.cp end
.sp
.cp begin
.uc Terminal Input and Output
.sp
     ERror	.ER <n×*> <line> 	&er
     ReaD terminal	.RD <1_×n> 	&rd
     TErminal input	.TE <1_×n> 	&te
     TYpe on terminal	.TY <information> 	&ty
.if '&type' eq ALL
     PRint	.PR <information> 	&pr
.cp end
.sp
.cp begin
.uc Translation of Characters
.sp
     Translate on	.TI <s <s_×t>> 	&ti
        Input    	    <<s1 t1> <s2 t2> ...>
                 	    <SET <char>>
     TRanslate   	.TR <s <s_×t>> 	&tr
        on output	    <<s1 t1> <s2 t2> ...>
.cp end
.sp
.cp begin
.uc Underscoring and Uppercase
.sp
     Underscore and	.UC <line> 	&uc
        Capitalize
     Underscore	.UD <<ON×OFF> <char1 ... >> 	&ud
        Definition	    <SET×INCLUDE×IGNORE <char>>
.if '&type' eq ALL
     Underline	.UL <1_×n×ON×OFF> <line> 	&ul
     UPpercase	.UP <line> 	&up
     UnderScore	.US <line> 	&us
.cp end
.sp;.cp begin
.uc Widow Control
.sp
     WiDow	.WD <Y_E_S_×NO> 	&wd
.cp end
.fo on;.su off
.tb
.in
.cm End of REFALPH
