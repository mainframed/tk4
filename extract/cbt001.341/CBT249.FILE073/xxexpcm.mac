*              /* LEVEL=0002                                         */
*PROCESS X,A,AG,S,STG,LIST,NEST,F(I),LMSG,MAP,ESD,OPT(2),OF;
 XXEXPCM: /*CONVERTS NUMBER TO GRAPHIC FOR PLOTTING*/
   PROC(INNUMBER) REORDER RETURNS(CHAR(1)) OPTIONS(REENTRANT);
 %SKIP(4);
 /********************************************************************/
 /*   XXEXPCM CONVERTS A BINARY NUMBER INTO A CHARACTER FOR          */
 /*   PLOTTING AS FOLLOWS:         ×  THE METHOD USED IS A MODIFIED  */
 /*   0-9 MAP INTO BLANK,1,...,9   ×  BINARY SEARCH WHICH WILL       */
 /*   10-19 MAP INTO 'A'.          ×  TAKE A MAXIMUM OF 4 ATTEMPTS   */
 /*   20-39 MAP INTO 'B' ETC.      ×  TO FIND THE REQUIRED ENTRY.    */
 /********************************************************************/
 /*   LEVL(0002)  30 JAN 1979.  CHANGES:                             */
 /*   CORRECTION OF ERRORS IN VALUE LIST.                            */
 /********************************************************************/
 /*   LEVL(0001)  30 JAN 1979.  CHANGES:                             */
 /*   CORRECTION OF ERROR WHICH RESULTED IN INFINITE LOOPING         */
 /*   FOR CERTAIN HIGH ARGUMENTS.                                    */
 /********************************************************************/
 /* WRITTEN BY    JOHN H LISTER,                                     */
 /*               TECHNICAL SERVICES GROUP,                          */
 /*               DATA PROCESSING DEPARTMENT,                        */
 /*               NATIONAL WESTMINSTER BANK,                         */
 /*               GOODMANS FIELDS COMPUTER CENTRE,                   */
 /*               74 ALIE STREET, LONDON   E1 8HL.                   */
 /*                                                                  */
 /*               TELEPHONE: 01-488 0707 EXT 2766.                   */
 /********************************************************************/
 %SKIP(4);
   DEFAULT
      RANGE(*) FIXED;
 %SKIP(4);
 /*PARAMETERS*/
 %SKIP;
   DCL
      INNUMBER BIN(15);                /* ARGUMENT TO THE PROCEDURE. */
 %SKIP(4);
 /*CONSTANTS*/
 %SKIP;
   DCL
      MAXNOS(0:22) BIN(15) STATIC INIT(-32767,0,1,2,3,4,5,6,7,8,9, 19,39
       ,79,159,319,639,1279,2559,5119,10239,20479,32767), /* UPPER
                                       BOUND OF EACH VALUE RANGE */
      EXPCHARSET CHAR(22) STATIC INIT(' 123456789ABCDEFGHIJKL');/*
                                       CHARACTER SET TO RETURN VALUE
                                       RANGES */
 %SKIP(4);
 /* LOCAL VARIABLES */
 %SKIP;
   DCL
      (CURRENT,                        /* CURRENT INDEX TO MAXNOS */
      INCREMENT,                       /* CURRENT INCREMENT IN BINARY
                                       SEARCH */
      TEMPINDEX) BIN(15);              /* TEMPORARY INDEX TO MAXNOS */
 %SKIP(4);
 /* BUILT IN FUNCTIONS */
 %SKIP;
   DCL
      (MIN,
      SUBSTR) BUILTIN;
 %SKIP(2);
      CURRENT=0;                       /* FIRST SEARCH INDEX */
      INCREMENT=16;                    /* HIGHEST POWER OF TWO THAT
                                       WILL FIT */
      DO UNTIL(INCREMENT=0);
         TEMPINDEX=MIN(CURRENT+INCREMENT,22);/* MAKE SURE THAT IT WILL
                                       NOT GO OUTSIDE SUBSCRIPT RANGE */
         IF INNUMBER > MAXNOS(TEMPINDEX) THEN
            CURRENT=TEMPINDEX;         /* TOO BIG */
         ELSE
            IF INNUMBER > MAXNOS(TEMPINDEX-1) THEN
               LEAVE;                  /* IN RIGHT RANGE */
         INCREMENT=INCREMENT/2;        /* DIVIDE INCREMENT RANGE */
      END;
      RETURN(SUBSTR(EXPCHARSET,TEMPINDEX,1));
   END;                                /* OF XXEXPCM */
