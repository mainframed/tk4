* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*  THIS MODULE (FSEPRTY) IS LINKED FROM MAIN DRIVER FSE TO ALTER    *
*   THE DISPATCHING PRIORITY OF THE EXECUTING ASCB FOR INCREASED    *
*   RESPONSE TIME AND TO DECREASE SIGNIFICANCE IN IPS FOR SECOND    *
*   & THIRD PERIOD TSO. THIS FEATURE WILL BE ONLY EXECUTED UNDER    *
*   MVS, BYPASSING IT FOR OTHER OPERATING SYSTEMS (ASCB IS          *
*   VERIFIED BEFORE CHAP FUNCTION.                                  *
*                                                                   *
*  AT ENTRY REG. 2 HAS THE BINARY VALUE OF THE NEW DISPATCHING      *
*  PRIORITY, (USUALLY 240 ENTERING FSE, AND 126 LEAVING IT)         *
*  IF THE HIGH BIT IN R2 IS ON MAKES ADDR. SPACE NON-SWAPPABLE      *
*                                                                   *
*  NO FRR IS SET, BUT RATHER A SIMPLE STAE TO CONTROL ABENDS.       *
*                                                                   *
*   BRUNO LA LICATA  N.B.N.A.         8 / 14 /78                    *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
FSEPRTY  CSECT                     SET ADDRESSABILITY
*
R0       EQU  0
R1       EQU  1
R2       EQU  2
R3       EQU  3
R4       EQU  4
R5       EQU  5
R6       EQU  6
R7       EQU  7
R8       EQU  8
R9       EQU  9
R10      EQU  10
R11      EQU  11
R12      EQU  12
R13      EQU  13
R14      EQU  14
R15      EQU  15
*
         SAVE (14,12)                       SET ADDRESSABILITY
         LR   R12,R15
         USING FSEPRTY,R12                      AND
         ST  R13,SAVE+4
         LA  R5,SAVE                                 SAVE REGISTERS
         ST  R5,8(R13)
         LR  R13,R5
         LR  R10,R2
         L    2,16        A(CVT)
         L    2,0(2)      A(OLD/NEW TCB)
         L    2,4(2)      A(MY TCB)
         L    2,180(2)    A(JSCB)
         XR   0,0         CLEAR FOR IC
         IC   0,236(2)    JSCB FLAG BYTE
         STC  0,BYTE      STORE AWAY
         OI   BYTE,X'01'  TURN MODESET BIT ON
         IC   0,BYTE      IC FOR ZAP SVC
         LR   15,2        ADD OF JSCB
         LA   15,236(15)  JSCB FLAGS ADDRESS
         SVC  248         ZAP BIT ON
         MODESET KEY=ZERO,MODE=SUP
         B    SKIPBYTE    GO PROCESS
BYTE     DS   C
SKIPBYTE DS   0H
SETSTAE  EQU   *                            SET UP STAE ENVIRONMENT
          LR  R2,R10
         ST    R2,SAVER2                    USE R2 AS PARM (DPRTY)
         STH   R2,BINPRTY
         L     R3,ABENDPRM
         STM   R6,R3,SAVEREG
*        STAE  ABEND01,PARAM=ABENDPRM,PURGE=HALT
         BC   15,GETSTAT
ABENDTOP L     R4,0(R1)            THIS SECTION WILL RESET REGISTERS
         L     R4,4(R4)            IN CASE OF ABEND
         LM    R6,R3,0(R4)
RETURN   EQU   *
         MODESET KEY=NZERO,MODE=PROB   ,SET PROBLEM STATE BACK
         L    R13,SAVE+4           LOAD BACK SAVE REG
         RETURN (14,12)            RETURN TO FSE
         DS    0F
ASCBADD  DS F
         DS  0D
DOUBLE   DS  D
         DS  0H
GETSTAT  L   R10,X'220'            ASCB
         ST  R10,HISASCB           SAVE ASCB ADDRESS
         L   R11,144(R10)          OUCB ADDRESS
         NI  19(R11),X'BF'         TURN OFF APG BIT
         TM   SAVER2,X'80'         NON-SWAP REQUEST?
         BNO  PUT2A                NO, GO PUT IN RIGHT SRM CODE
         MVI  SRMCODE,X'29'        MOVE CODE
         B    PUT29                SKIP THER VALUE
PUT2A    MVI  SRMCODE,X'2A'        MOVE CODE
PUT29    EQU  *
         XR   R0,R0                CLEAR R0
         IC   R0,SRMCODE           INSERT CODE
SVC      SVC  95                   ISSUE SYSEVENT
         LTR  R1,R1                GOOD RETURN?
         BZ   CHAPP                YES, GO FINISH
         TPUT SRMMSG,16            NO, SEND ERROR MSG
CHAPP    EQU  *
DOCHAP   SR   R0,R0
         LA   R1,PARM
         LA   13,CHAPSAVE         GIVE CHAP WORK REG SPACE
         L    R6,16               ADDRESS OF CVT
         L    R15,676(R6)         ADDRESS OF CHAP ROUTINE
         BALR R14,R15             BRANCH TO IT
         LA   R13,CHAPSAVE
         B    RETURN
         DS  0F
SAVER2   DS  F
SAVE     DS    18F
CHAPSAVE DS    18F
PARM     DS   0F
         DC   X'8000'
BINPRTY  DC   H'0'
HISASCB  DS   F
SAVEREG  DS   15F
ABENDPRM DC   A(ABENDTOP,SAVEREG,SDWA)
SDWA     DS  10C
SRMMSG   DC  C'NONZERO SRM CODE'
SRMCODE  DS  X
         DS  0H
ABEND01  CSECT
         STM  14,12,12(13)       THIS IS
         BALR 12,0
         USING *,12                 A DUMMY CSECT
         ST   13,SAVE3+4
         LA   5,SAVE3                   USED TO GET
         ST   5,8(13)
         LR   13,5                          BACK TO MAIN
         L    13,4(13)
         LM   14,12,12(13)                      LINE AFTER
         LA   15,4
         L    3,0(1)                                    ABEND
         L    3,0(3)
         LR   0,3
         L    4,0(1)
         L    4,8(4)
         MVC  0(10,4),0(1)
         BR   14
       DS  0F
SAVE3    DS   18F
    END
