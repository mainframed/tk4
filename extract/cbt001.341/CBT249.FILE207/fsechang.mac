* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
*   THIS ROUTINE IS LINKED FROM MAIN DRIVER "FSE" WHEN A CHANGE
*    COMMAND IS ISSUED. IT WILL SCAN THE COMMAND BUFFER AND SET
*    VARIABLES DESCRIBING BEGIN, END ADDRESSES, LENGTHS OF NEW
*    AND OLD TEXT STRINGS ETC..
*   AN INTERNAL ROUTINE IS INVOKED EVERY TIME A LINE FOUND IN THE
*    SPECIFIED RANGE IS TO BE SCANNED FOR THE TEXT. THE DATA IN
*    EACH MODIFIED LINE IS EITHER SHORTENED OR LENGTHENED (AND
*    THEREFORE TRUNCATED) ACCORDING TO THE NEW AND OLD TEXT STRINGS.
*
*   AT ENTRY POINT, R7 POINTS TO THE COMMAND BUFFER,
*                   R4  POINTS TO THE PASSED PARAMETER LIST
*                   (DC A(TOPADD,LASTADD,SAVELREC,MODFLAG,RESPONSE,
*                         COMMAND,DATATYPE,FIXORVAR))
*
*
*    BRUNO LA LICATA           LVL 1.00       1 / 12 / 77
*    N.B.N.A.
*
*
FSECHANG CSECT
         STM  14,12,12(13)
R0       EQU  0
R1       EQU  1
R2       EQU  2
R3       EQU  3
R4       EQU  4
R5       EQU  5
R6       EQU  6
R7       EQU  7
R8       EQU  8
R9       EQU  9
R10      EQU  10
R11      EQU  11
R12      EQU  12
R13      EQU  13
R14      EQU  14
R15      EQU  15
*
         LR   R12,R15                  SET ADDRESSABILITY
         USING FSECHANG,R12              AND SAVE REGISTERS.
         ST   R13,SAVE+4
         LA   R5,SAVE
         ST   R5,8(R13)
         LR   R13,R5
         LR   R10,R4
         XC   RECORDS(4),RECORDS       INITIALIZE BUFFER AREAS
         MVI  ALLFLAG,X'00'              AND FLAG FOR "ALL" FUNCTION
         MVC  RECORD(255),BLANKS
C01      CLI  0(R7),C' '               SCAN FOR FIRST GAP
         BE   C02
         LA   R7,1(R7)
         BCT  R3,C01
         B    BADFIND1                 NO GAP FOR MAX LENGTH OF 60?
C02      CLI  0(R7),C' '                  YES, NO GOOD...
         BNE  C03                      SCAN FOR BEGGINNING OF LINE #
         LA   R7,1(R7)
         BCT  R3,C02
         B    BADFIND1                 NONE? TOO BAD...
C03      XR   R4,R4                    CLEAR FOR DIGIT COUNT
         LR   R5,R7                    SAVE BEGIN ADDRESS
C04      CLI  0(R7),C' '               SECOND GAP REACHED?
         BE   C05                      YES, GO DO IT ON SECOND LINE #
         XR   R6,R6                    CLEAR FOR DIGIT VALIDITY
         IC   R6,0(R7)
         C    R6,=F'240'               DIGIT NUMERIC?
         BL   BADFIND1                 NO, GO ISSUE MESSAGE
         LA   R4,1(R4)                 ADD 1 TO DIGIT COUNT
         LA   R7,1(R7)                 ADD 1 TO ADDRESS
         BCT  R3,C04                   GO DO IT UNTIL GAP ENDS
         B    BADFIND1                 FORMAT IS INVALID IF HERE.
C05      BCTR R4,0                     HERE, LINE NUMBER IS
         EX   R4,C06                     MADE TO BINARY
         B    *+10                       AND STORED INTO "FIRSTLIN".
C06      PACK DOUBLE(8),0(0,R5)
         CVB  R5,DOUBLE
*        LTR  R5,R5
*        BZ   BADFIND1
         ST   R5,FIRSTLIN
C07      CLI  0(R7),C' '               SCAN FOR NEXT LINE NUMBER, OR
         BNE  C08                      A SLASH (THAT INDICATES ONLY
         LA   R7,1(R7)                 1 LINE NUMBER WAS SPECIFIED)
         BCT  R3,C07
         B    BADFIND1
C08      CLI  0(R7),C'/'               SLASH FOUND: ONLY 1 LINE NUMBER
         BNE  C09                       SPECIFIED, SO MOVE MAKE LOW
         MVC  SECONDLI(4),FIRSTLIN      BOUNDARY = HIGH BOUNDARY
         B    C14                       AND SKIP SECOND LINE PROCESS.
C09      EQU  *
         XR   R4,R4                    CLEAR FOR DIGIT COUNT
         LR   R5,R7                    SAVE BEGIN ADDRESS
C10      CLI  0(R7),C' '               END OF LINE # DIGITS?
         BE   C11                      YES, GO CHECK IT
         XR   R6,R6                    CLEAR FOR IC ON DIGIT
         IC   R6,0(R7)
         C    R6,=F'240'               NUMERIC?
         BL   BADFIND1                 NO, BAD NEWS
         LA   R4,1(R4)                 ADD TO DIGIT COUNT
         LA   R7,1(R7)                 ADD TO ADDRESS
         BCT  R3,C10                   GO SCAN FOR END
         B    BADFIND1                 FORMAT INVALID IF HERE
C11      BCTR R4,0
         EX   R4,C12                   PACK LINE NUMBER
         B    *+10
C12      PACK DOUBLE(8),0(0,R5)             AND MAKE IT BINARY
         CVB  R5,DOUBLE
*        LTR  R5,R5
*        BZ   BADFIND1
         ST   R5,SECONDLI               STORE IT IN "SECONDLI"
C13      CLI  0(R7),C' '               CHECK FOR SLASH
         BNE  C14                      GO THRU GAP UNTIL NON-BLANK
         LA   R7,1(R7)
         BCT  R3,C13
         B    BADFIND1
C14      CLI  0(R7),C'/'               SLASH?
         BNE  BADFIND1                 NO, ERROR IN FORMAT
         LA   R7,1(R7)
         ST   R7,ADDR1                 STORE ADDRESS OF STRING
         XR   R5,R5                    CLEAR FOR LENGTH COUNT
C15      CLI  0(R7),C'/'               CHECK FOR END OF STRING1
         BE   C16
         LA   R7,1(R7)                 ADD TO ADDRESS
         LA   R5,1(R5)                 ADD FOR LENGTH COUNT
         BCT  R3,C15                   GO SCAN
         B    BADFIND1                 FORMAT INVALID : (NOT COMPLETE)
C16      LTR  R5,R5                    NO DATA ON STRING #1?
         BZ   BADFIND1                  NO DATA : INVALID FORMAT
         STH  R5,LEN1                  STORE LENGTH
         LA   R7,1(R7)                 SKIP SLASH
         ST   R7,ADDR2                 STORE STRING #2 ADDRESS
         XR   R5,R5                    CLEAR FOR LENGTH
C17      CLI  0(R7),C'/'               SCAN FOR LAST SLASH
         BE   C18
         LA   R7,1(R7)                 ADD TO ADDRESS
         LA   R5,1(R5)                 ADD TO COUNT
         BCT  R3,C17                   GO SCAN
         B    BADFIND1                 FORMAT INVALID
C18      STH  R5,LEN2                  END FOUND : STORE LENGTH
         CLI  1(R7),C'A'               SCAN FOR ALL SPECIFICATION
         BNE  SKIPMSG1                 NO, SKIP SET OF FLAG
         MVI  ALLFLAG,X'01'            YES, SET ALL FLAG
         BC   15,SKIPMSG1
BADFIND1 L    R9,20(R10)               THIS SECTION INITIALIZES
*        MVC  0(19,R9),=19C' '         FSE BUFFERS FOR SCREEN I/O
         L    R9,16(R10)               AND MOVES "INVALID FORMAT"
         MVC  0(22,R9),MSG1            MESSAGE.
         B    RETURN
*
MSG1     DC   C'INVALID COMMAND FORMAT'
MSG2     DC   C'LINE NOT FOUND'
MSG3     DC   C'TEXT NOT FOUND'
MSG4     EQU  *
RECS     DS   3C
         DC   C' CHANGE(S) MADE '
RECORD   DC   255C' '
BLANKS   DC   255C' '
ALLFLAG  DS   X
         DS   0D
TOPADD   DS   F
LASTADD  DS   F
RECORDS  DS   F
DOUBLE   DS   D
FIRSTLIN DS   F
SECONDLI DS   F
ADDR1    DS   F
ADDR2    DS   F
SAVE     DS   18F
LEN1     DS   H
X        DS   H
Y        DS   H
LEN2     DS   H
SAVELREC DS   H
FIXORVAR DS   X
DATATYPE DS   X
*
SKIPMSG1 EQU  *                     * * * * * * * * * * * * * * *
         L    R3,28(R10)               THIS SECTION MOVES DATA
         MVC  FIXORVAR(1),0(R3)
         L    R3,0(R10)                   FIELDS FROM FSE BUFFERS
         MVC  TOPADD(4),0(R3)
         L    R3,24(R10)                  TO FSECHANG BUFFERS
         MVC  DATATYPE(1),0(R3)
         L    R3,4(R10)
         MVC  LASTADD(4),0(R3)
         L    R3,8(R10)
         MVC  SAVELREC(2),0(R3)
*                                   * * * * * * * * * * * * * * * *
CMAIN    EQU  *                     HERE THE SYSEDIT DATA SET IN CORE
         ICM  R6,15,LASTADD         IS SCANNED RECORD BY RECORD
         ICM  R5,15,TOPADD          SEARCHING FOR THE LINE NUMBER
         AH   R6,SAVELREC           CORRESPONDING TO THE SPECIFIED
C19      CR   R5,R6                 ONE. WHEN IT IS FOUND, A LOOP
         BE   BADFIND2              IS EXECUTED FOR THE RECORDS FOUND
         TM   FIXORVAR,1            IN THE SPECIFIED RANGE (INCLUSIVE)
         BO   CVAR1                 SCANNING FOR THE TEXT IN STRING #1.
         TM   DATATYPE,X'40'        FOR EACH MATCH IN THE RECORDS
         BO   CCOBOL1               WITHIN THE RANGE, ROUTINE MOVEDATA
COTHERS1 LR   R8,R5                 IS BAL"ED TO DO THE CHANGES.
         AH   R8,SAVELREC           IF NO "ALL" WAS SPECIFIED, UPON
         SH   R8,=H'6'              COMPLETION OF 1 CHANGE, RETURN IS
         PACK DOUBLE(8),0(6,R8)     MADE TO FSE. THE NUMBER OF CHANGES
         CVB  R8,DOUBLE             MADE IS RECORDED AND PASSED TO
         B    C21                   FSE FOR DISPLAY.
CCOBOL1  PACK DOUBLE(8),0(6,R5)
         CVB  R8,DOUBLE
         B    C21
CVAR1    PACK DOUBLE(8),6(6,R5)
         CVB  R8,DOUBLE
C21      C    R8,FIRSTLIN
         BE   CFOUND1
         AH   R5,SAVELREC
         B    C19
*
BADFIND2 EQU  *                  BADFIND2 WILL CLEAR COMMAND BUFFER
         L    R3,20(R10)
*        MVC  0(19,R3),=19C' '      AND MOVE "TEXT" NOT FOUND IN
         L    R3,16(R10)
         MVC  0(14,R3),MSG2             RESPONSE FIELD OF FSE.
         B    RETURN
CFOUND1  LR   R8,R5
         LH   R3,SAVELREC
         TM   FIXORVAR,X'01'
         BNO  NOV
         SH   R3,=H'12'
         LA   R8,12(R8)
         B    GODOIT
NOV      TM   DATATYPE,X'40'
         BNO  NOC
         SH   R3,=H'6'
         LA   R8,6(R8)
         B    GODOIT
NOC      SH   R3,=H'8'
*
*
*
GODOIT   LH   R4,LEN1
         BCTR R4,0
         ICM  R2,X'0F',ADDR1
CLOOP1   CR   R5,R6
         BE   FINISH
         TM   FIXORVAR,1
         BO   CVAR2
         TM   DATATYPE,X'40'
         BO   CCOBOL2
COTHERS2 LR   R9,R5
         AH   R9,SAVELREC
         SH   R9,=H'8'
         PACK DOUBLE(8),0(8,R9)
         CVB  R9,DOUBLE
         B    C22
CCOBOL2  PACK DOUBLE(8),0(6,R5)
         CVB  R9,DOUBLE
         B    C22
CVAR2    PACK DOUBLE(8),4(8,R5)
         CVB  R9,DOUBLE
C22      C    R9,SECONDLI
         BH   FINISH
CLOOP2   EQU  *
         EX   R4,C23
         B    *+10
C23      CLC  0(0,R8),0(R2)        DATA MATCHES?
         BNE  KEEPON                     NO, GO ADD TO ADDRESS
         MVC  RECORD(255),BLANKS         INITIALIZE WORK BUFFER
         TM   FIXORVAR,X'01'             VARIABLE RECORDS?
         BNO  NOTVARIA                   NO
         MVC  0(2,R5),SAVELREC           YES, MOVE LRECL TO RECORD
NOTVARIA BAL  R14,MOVEDATA             GO CHANGE DATA
         TM   ALLFLAG,1                ALL SPECIFIED?
         BNO  FINISH                   NO, RETURN TO FSE
         LH   R11,LEN1                 YES, ADD SHORTER OF LEN 1
         CH   R11,LEN2                 OR LEN 2 TO ADDRESS AND
         BNL  MOVELEN2                           ...
         LH   R11,LEN2                           ...
MOVELEN2 AR   R8,R11                   GO SCAN AGAIN
         SR   R3,R11
         BCTR R8,0
KEEPON   LA   R8,1(R8)                 ADD 1 TO ADDRESS IN RECORD
         BCT  R3,CLOOP2
NEXTREC  AH   R5,SAVELREC              NEXT RECORD..ADD LRECL
         LH   R3,SAVELREC
         LR   R8,R5
         B    CLOOP1                   GO SCAN AGAIN IN NEXT REC
FINISH   CLC  FIRSTLIN(4),SECONDLI     RANGE > THAN 1 LINE?
         BNE  MODIFIED                 YES, GO GET # OF CHANGES MADE
         L    R3,12(R10)
         TM   0(R3),1                  ANY DATA MODIFIED?
         BO   MODIFIED                 YES, GO GET # OF RECS
         L    R3,20(R10)
         MVC  0(19,R3),=19C' '         CLEAR FSE BUFFRES
         L    R3,16(R10)
         MVC  0(14,R3),MSG3
         B    RETURN                   RETURN TO FSE
*
MODIFIED L    R3,RECORDS              "MODIFIED" ROUTINE WILL
         CVD  R3,DOUBLE                MOVE THE NUMBER OF CHANGES INTO
         UNPK RECS(3),DOUBLE(8)        FSE RESPONSE FIELD.
         OI   RECS+2,X'F0'
         L    R3,20(R10)
         MVC  0(19,R3),=19C' '
         L    R3,16(R10)
         MVC  0(19,R3),MSG4
RETURN   L    R13,4(R13)               RETURN TO FSE
         LM   R14,R12,12(R13)
         BR   R14
*
*
MOVEDATA EQU  *                      THREE ROUTINES CAN BE USED TO
         CLC  LEN1(2),LEN2           CHANGE DATA:
         BNE  NOTSAME
         L    R7,ADDR2
         EX   R4,MOVESAME
         L    R7,12(R10)
         MVI  0(R7),1
         L    R7,RECORDS
         LA   R7,1(R7)
         ST   R7,RECORDS
         BR   R14
MOVESAME MVC  0(0,R8),0(R7)
*
NOTSAME  EQU  *
         LH   R0,LEN1
         CH   R0,LEN2
         BH   MAKESMAL
MAKEBIG  LR   R9,R5
         ST   R9,SAVSTART
         CLI  FIXORVAR,X'01'
         BNE  ELSESAVE
*        MVC  SAVELINE(8),4(R9)
         B    GOAHEAD
ELSESAVE TM   DATATYPE,X'40'
         BNO  OTHRTYP
         LR   R11,R9
         AH   R11,SAVELREC
         MVC  SAVELINE(6),0(R11)
         B    GOAHEAD
OTHRTYP  EQU  *
         LR   R11,R9
         AH   R11,SAVELREC
         SH   R11,=H'8'
         MVC  SAVELINE(8),0(R11)
GOAHEAD  AH   R9,SAVELREC
         SR   R9,R8
         BCTR R9,0
         STH  R9,X
         LR   R9,R8
         AH   R9,LEN1
         MVC  RECORD(255),0(R9)
         LH   R7,LEN2
         SH   R7,LEN1
         STH  R7,Y
         LH   R7,X
         SH   R7,Y
         STH  R7,X
         LH   R7,LEN2
         CH   R7,X
         BNH  OK1
         LH   R7,X
OK1      BCTR R7,0
         L    R9,ADDR2
         EX   R7,MOVEBIG1
         B    *+10
MOVEBIG1 MVC  0(0,R8),0(R9)
         LR   R9,R8
         AH   R9,LEN2
         LH   R7,X
         SH   R7,Y
         BCTR R7,0
         TM   DATATYPE,X'40'
         BO   EXLINBEF
         TM   FIXORVAR,1
         BO   EXLINBEF
         SH   R7,=H'8'
EXLINBEF LH   R11,LEN1
         LA   R11,1(R11)
         CH   R11,LEN2
         BNE  SKIP1MOR
         BCTR R7,0
SKIP1MOR EQU  *
*
*
         EX   R7,MOVEBIG2
         B    SAVEBACK
MOVEBIG2 MVC  0(0,R9),RECORD
SAVEBACK L    R9,SAVSTART
         LR   R11,R9
         CLI  FIXORVAR,X'01'
         BNE  BACKELSE
         AH   R11,SAVELREC
         MVC  0(2,R11),SAVELREC
         BC   15,DONE
BACKELSE TM   DATATYPE,X'40'
         BNO  BACKNOCO
         LR   R11,R5
         AH   R11,SAVELREC
         MVC  0(6,R11),SAVELINE
         B    DONE
BACKNOCO AH   R11,SAVELREC
         SH   R11,=H'8'
         MVC  0(8,R11),SAVELINE
DONE     EQU  *
ADDTOREC L    R7,12(R10)
         MVI  0(R7),1
         L    R7,RECORDS
         LA   R7,1(R7)
         ST   R7,RECORDS
         BR   R14
MAKESMAL EQU  *
         LH   R7,LEN1
         SH   R7,LEN2
         STH  R7,Y
         LR   R9,R5
         AH   R9,SAVELREC
         SR   R9,R8
         SH   R9,LEN1
         STH  R9,X
         BCTR R9,0
         TM   FIXORVAR,1
         BO   DOEXEC
         TM   DATATYPE,X'40'
         BO   DOEXEC
         SH   R9,=H'9'
DOEXEC   LR   R7,R8
         AH   R7,LEN1
         EX   R9,MOVESMA1
         B    *+10
MOVESMA1 MVC  RECORD(0),0(R7)
         L    R7,ADDR2
         LH   R0,LEN2
         LTR  R0,R0
         BZ   SKIPIF0
         LH   R9,LEN2
         BCTR R9,0
         EX   R9,MOVESMA2
         B    *+10
MOVESMA2 MVC  0(0,R8),0(R7)
SKIPIF0  LR   R7,R8
         AH   R7,LEN2
         LH   R9,X
         AH   R9,Y
         BCTR R9,0
         TM   FIXORVAR,1
         BO   LINEBFRE
         TM   DATATYPE,X'40'
         BO   LINEBFRE
         SH   R9,=H'8'
LINEBFRE EX   R9,MOVESMA3
         B    ADDTOREC
MOVESMA3 MVC  0(0,R7),RECORD
*
         DS  0F
SAVSTART DS  F
SAVELINE DS  8C
         END
