*
*  WAITR: THIS PROGRAM WILL SEARCH THE QCB CHAIN TO LOCATE ALL DSN ENQS
*         THAT RELATE TO A PARTICULAR JOB OR USERID (* CAN BE USED TO
*         DENOTE THE USER ISSUING THE CP). IT WILL THEN DETERMINE IF
*         THERE ARE EXIST ANY CONFLICTS. IF THE JOB IS WAITING AS A
*         RESULT OF THIS (I.E. OLD IF ALREADY ALLOCATED OR SHR IF IT
*         IS ALLOCATED OLD), OR IF THE JOB HOLDS DATASETS THAT ANOTHER
*         JOB WANTS, IT WILL PRINT OUT THE TYPE OF ALLOCATION AND THE
*         DATASET NAME.
*
*    EXAMPLES
*         WAITR ABCDEFG         TO LOCATE ENQS FOR A JOB OR USERID
*         WAITR XXXX USER       TO LOCATE ONLY ENQS FOR A USERID
*         WAITR XXXX JOB        TO LOCATE ONLY ENQS FOR A JOB
*         WAITR *               TO LOCATE ENQS FOR A USERID ISSUING CP
*
*         WAITING SHARE FOR DSN = ABC.THIS.THAT
*         WAITING OLD   FOR DSN = XYZ.THE.OTHER.THING
*
*         JOB(S) WAITING FOR DSN = THIS.IS.A.NAME, ALLOCATED SHR
*         JOB(S) WAITING FOR DSN = THIS.IS.A.NOTHER, ALLOCATED OLD
*
*
*         RETURN CODES:
*           0  - JOB FOUND IN EXECUTION, CONFLICTS MAY OR MAY NOT HAVE
*                BEEN FOUND.
*
*           4  - JOB WAS NOT FOUND IN EXECUTION.
*
*           8  - PARSE ERROR OCCURRED
*
*           12 - COMMAND COULD NOT FIND THE DSN QCB CHAIN.
*
* CHANGE RECORD
*
*   6/83 ADDED REQLIM PARAMETER TO GQSCAN MACRO.  THIS APPARENTLY WAS
*        CHANGED WITH SP1.3.2 AS THIS WAS NOT NECESSARY WITH SP1.3.1.
*
*
* NOTE: THIS CODE HAS LOGIC THAT IS USED IN CONJUCTION WITH THE J/TIP
* PRODUCT WHICH WILL NOT WORK IN INSTALLATIONS WITHOUT IT. THESE LINES
* HAVE BEEN MARKED WITH .JTIP. IN THEM. IF YOU HAVE J/TIP CHANGE THE
* FOLLOWING GLOBAL TO 1.
         GBLB  &JTIP
&JTIP    SETB  0
*
    EJECT
WAITR    ENTER (14,12),12,(,WORKLEN)
         LR    R10,R1
         USING CPPL,R10            CPPL ADDRESSABILITY
         USING IKJPARMD,R11        PCL  ADDRESSABILITY
         USING WORKAREA,R13        WORKAREA ADDRESSABILITY
*    STUFF FOR PARSE ****
         LA    R1,PPLECBS
         ST    R1,PPLECB
         L     R1,=A(PARM)
         ST    R1,PPLPCL
         LA    R1,ANS
         ST    R1,PPLANS
         LA    R1,JOBNAME
         ST    R1,PPLUWA
         AIF   (NOT &JTIP).SKIP1
         LA    R1,USERCMDP          PASS THIS ADDRESS TO VALIDCK .JTIP.
         ST    R1,JOBNAME           SO IT CAN FIND THE USERCMDP  .JTIP.
.SKIP1   ANOP
         MVC   PPLUPT,CPPLUPT
         MVC   PPLECT,CPPLECT
         MVC   PPLCBUF,CPPLCBUF
         LA    R1,PPLUPT
         LINK  EP=IKJPARS           GO DO IT
         LTR   R15,R15              ALL GO OK???
         BNZ   PARSERR              NOPE....
         L     R11,ANS              ADDRESS THE PARSE DSECT
         MVI   RQSTUSER,NO
         MVI   RQSTJOB,NO
         AIF   (NOT &JTIP).SKIP2
         CLI   JOBNAME,C'#'         DID WE FIND A JOB??          .JTIP.
         BE    NOTFOUND                                          .JTIP.
.SKIP2   ANOP
         AIF   (&JTIP).SKIP3
         MVC   JOBNAME,=CL8' '     CLEAR JOBNAME
         L     R1,JOBN             ADDRESS OF JOBNAME
         LH    R2,JOBN+4            GET LENGTH OF JOBNAME
         BCTR  R2,0
         EX    R2,MVCJOBN
.SKIP3   ANOP
         CLI   JOBNAME,C'*'         CHECK FOR * (OR USERID THATS ON)
         BNE   SETUFLAG
         L     R1,CPPLPSCB          --> PSCB
         USING PSCB,R1
         XR    R2,R2
         IC    R2,PSCBUSRL          LENGTH OF USERID
         BCTR  R2,0                 -- (YOU KNOW!) --
         EX    R2,MVCUSER           MOVE IT IN
         MVI   RQSTUSER,YES         ONLY TAKE USER
         B     CVTSTART
MVCUSER  MVC   JOBNAME(0),PSCBUSER  ** EXECUTED ***
         DROP  R1
SETUFLAG CLI   USER+1,1             WAS USER SPECIFIED?
         BNE   SETJFLAG
         MVI   RQSTUSER,YES
SETJFLAG CLI   JOB+1,1              WAS JOB SPECIFIED?
         BNE   CVTSTART
         MVI   RQSTJOB,YES
CVTSTART LA    R2,16
         L     R2,0(R2)             --> CVT
         L     R3,556(R2)           ---> ASVT
ASLOOP   LA    R7,520(R3)           ---> ENTRY ADDS(MINUS 4)
         L     R8,516(R3)           ---> # OF ASCBS
CHKASID  LA    R7,4(R7)             ENTRY + 4
         TM    0(R7),X'80'          IN USE?????
         BO    NXTASID              NO...DON'T LOOK AT IT THEN
*   CVT-->ASVT-->ASCB-->CSCB
*   BOY WHAT FUN!!!!!!!!!
         L     R6,0(R7)             R6 ----> ASCB
CSCBCK1  L     R5,56(R6)            ----> POSSIBLE CSCB
         LTR   R5,R5                TEST FOR POSITIVE
         BNP   CSCBCK2              NO --> TRY NEXT ONE
         TM    28(R5),X'03'         TEST INDICATOR FLAGS
         BM    GOTCSCB              GO TO IT
CSCBCK2  L     R5,172(R6)           TRY NEXT ONE
         LTR   R5,R5                ONE MORE TIME
         BNP   CSCBCK3
         S     R5,=F'8'             ADJUST POINTER BACK SOME
         B     GOTCSCB
CSCBCK3  L     R5,176(R6)           ONE LAST TRY
         LTR   R5,R5                CROSS YOUR FINGERS
         BNP   NXTASID              OH WELL...TRY NEXT ASID
         S     R5,=F'16'            GOT TO ADJUST THIS ONE TOO
GOTCSCB  EQU   *                    TEST INDICATOR FLAG
         TM    28(R5),X'03'         IS THIS A USER OR JOB??
         BO    NXTASID              NO...
         CLC   8(8,R5),JOBNAME
         BNE   NXTASID
         CLI   RQSTUSER,YES         DID THEY ONLY WANT A USER?
         BNE   CHKTJOB              NO, CHECK FOR JOB ONLY
         TM    28(R5),X'01'         IS IT TSU??
         BNO   NXTASID              NO, SKIP IT EVEN THO IT COMPARED
         B     GOTASID
CHKTJOB  CLI   RQSTJOB,YES          DID THEY ONLY WANT A JOB??
         BNE   GOTASID              NO, THEN TAKE WHAT WE GOT
         TM    28(R5),X'02'         IS IT JOB
         BO    GOTASID              OTHERWISE WE GOT WHAT WE WANT
NXTASID  BCT   R8,CHKASID           GO FOR NEXT ASID
         B     NOTFOUND             JOB DOESN'T EXIST
GOTASID  EQU   *
         MVC   ASID,36(R6)          SAVE THE ASID
         XC    TOKEN,TOKEN          ASSURE TOKEN ZERO
DOGQ     EQU   *
         XC    TABLE(64),TABLE      CLEAR TABLE OUT FOR GQSCAN
         LH    R8,ASID              GET THE ASID # FOR THE JOB
         LA    R7,TABLE
         LA    R6,TOKEN
         LA    R1,TABLE
         GQSCAN AREA=((R7),12288),SCOPE=SYSTEM,SYSNAME=(0,(R8)),       X
               TOKEN=(R6),MF=(E,(1)),REQLIM=10000
         LR    R6,R1                    NUMBER OF RIBS
         LTR   R6,R6                    DID SOME DUMMY ASK IF HIS JOB
         BZ    BYEBYE                    WAS WAITING EVEN THO IT DIDN'T
*                                        ALLOCATE ANY DATASETS
         MVI   EFLAG,NO
         MVC   WAITLINE(67),PATTERN     COPY THE PATTERN
         MVC   HOLDLINE(85),HOLDPAT     COPY THE PATTERN
         MVC   HOLDALC,=C', ALLOCATED '
         LA    R7,TABLE                 FIRST RIB
         USING RIB,R7
RIBLOOP  EQU   *
         CLC   RIBQNAME,=CL8'SYSDSN'    IS THIS A DSNAME RIB??
         BNE   BUMPRIB
         CLC   RIBNTWE(8),=8X'00'       ANY TASKS WAITING
         BE    BUMPRIB                  NO, NOT EVEN ME
         MVI   EFLAG,YES                SHOW WE GOT ONE
         MVI   WAITDSN,C' '
         MVC   WAITDSN+1(L'WAITDSN-1),WAITDSN
         LH    R8,RIBVLEN               VARIABLE PORTION
         BCTR  R8,0
         EX    R8,MOVEDSN               COPY THE DSNAME
         MVC   HOLDDSN,WAITDSN            TO BOTH MESSAGES
         LA    R8,RIBEND+1(R8)          GET TO RIB RETURNED
         USING RIBE,R8
         TM    RIBERFLG,RIBETYPE        WHAT TYPE OF HOLD?
         BZ    EXCLUS
         MVC   SHRTYPE,=CL3'SHR'    TYPE OF WAIT = SHARE
         MVC   HOLDTYPE,=CL3'SHR'     OR HOLD = SHARE
         B     CHKSTAT
EXCLUS   EQU   *
         MVC   SHRTYPE,=CL3'OLD'    TYPE OF WAIT = SHARE
         MVC   HOLDTYPE,=CL3'OLD'     OR HOLD = SHARE
CHKSTAT  EQU   *
         LH    R1,RIBVLEN
         LA    R1,HOLDDSN(R1)
         MVC   0(15,R1),HOLDALC
         TM    RIBESFLG,RIBESTAT        DO I WAIT OR HOLD
         BZ    WAITING
         LA    R1,HOLDLINE
         TPUT  (1),85              AND PUT IT
         B     NEXTRIB
WAITING  EQU   *
         LA    R1,WAITLINE
         TPUT  (1),67               AND PUT IT
         B     NEXTRIB
BUMPRIB  LH    R8,RIBVLEN               VARIABLE PORTION
         LA    R8,RIBEND(R8)
NEXTRIB  EQU   *
         LA    R7,RIBEEND
         BCT   R6,RIBLOOP
         CLC   TOKEN,=F'0'           ANY MORE RIBS NOT YET SCANNED
         BNE   DOGQ
BYEBYE   EQU   *
         CLI   EFLAG,YES              WAS THERE ONE ??
         BE    LEAVE                  NO, PRINTED SOMETHING
         TPUT  NUTTIN,L'NUTTIN        TELL THEM NO WAITS..
LEAVE    LEAVE EQ,CC=0
NOFIND   TPUT  MESSAGE,L'MESSAGE
         LEAVE CC=12
NOTFOUND TPUT  NOTF,L'NOTF
         LEAVE CC=4
PARSERR  TPUT  PARS,L'PARS
         LEAVE CC=8
MOVEDSN  MVC   WAITDSN(0),RIBEND       ** EXECUTED - MOVE DSNAME **
MVCJOBN  MVC   JOBNAME(0),0(R1)       ** EXECUTED - MOVE JOBNAME **
PATTERN  DC    CL74' JOB IS WAITING XXX FOR DSN = '
HOLDPAT  DC    CL85' JOB(S) WAITING FOR DSN = '
         LTORG
MESSAGE  DC    C'SYSTEM ERROR, REENTER COMMAND'
NOTF     DC    C'JOB NOT FOUND IN EXECUTION'
PARS     DC    C'PARSE ERROR, REENTER COMMAND'
NUTTIN   DC    C'JOB IS NOT WAITING FOR DATASET(S) OR HOLDING UP ANY OTX
               HER JOBS'
PARM     IKJPARM
         AIF   (NOT &JTIP).SKIP4
*  VALIDCK=HASP# WILL CHANGE A HASP # TO A JOBNAME               .JTIP.
JOBN     IKJIDENT 'JOBNAME',FIRST=ANY,OTHER=ANY,MAXLNTH=8,             X
               VALIDCK=HASP#,PROMPT='JOBNAME OR HASP NUMBER'
.SKIP4   ANOP
         AIF   (&JTIP).SKIP5
JOB      IKJIDENT 'JOBNAME',FIRST=ANY,OTHER=ANY,MAXLNTH=8,             X
               PROMPT='JOBNAME OR HASP NUMBER'
.SKIP5   ANOP
USER     IKJKEYWD
         IKJNAME 'USER'
JOB      IKJKEYWD
         IKJNAME 'JOB'
         IKJENDP
         AIF   (NOT &JTIP).SKIP6
         EJECT
* THE HASP# CSECT IS PART LOCATES THE JOB BY NUMBER              .JTIP.
HASP#    ENTER (14,12),12,(,72)
         L     R4,0(R1)                 ADDRESS PARSE PDE
         L     R5,0(R4)                 --> ACCT NAME STRING
         L     R6,4(R1)                 --> ADDRESS OF UWA
         L     R7,0(R6)                 --> SVC PARM LIST
         USING USERCMDP,R7
         MVC   0(8,R6),=CL8' '          CLEAR AREA FIRST
         LH    R1,4(R4)                 LENGTH OF OPERAND
         BCTR  R1,0                     LENGTH FOR EXECUTE
         EX    R1,EXMVC                 EXECUTE TO MOVE IT
         TM    0(R6),X'F0'              TEST ZONE OF FIRST POSITION
         BNO   HASPEXIT                 ASSUME BY JOBNAME AND ALL DONE
         MVC   CMDBUF,=C'$DJ'           COMMAND TO ISSUE
         MVC   CMDBUF+3(4),0(R6)        COPY # TO COMMAND LINE
         MVI   USERBUF,X'FF'            SET FLAG TO TEST AT COMPLETION
         LA    R0,USERCMDL              SET UP PARAMETER LIST
         ST    R0,USERCMDP
         LA    R0,USERBUFL
         ST    R0,USERBUFP
         MVI   USERBUFP,X'80'
         L     R0,=A(L'USERBUF)
         STH   R0,USERBUFL
         MVC   USERCMDL,=H'7'
         LA    R0,1
         LA    R1,USERCMDP
         SVC   224
         CLI   USERBUF,X'FF'
         BNE   OKAYSVC
         ABEND 999
OKAYSVC  EQU   *
         CLC   USERBUF+19(4),=C'EXEC'   EXECUTING ?
         BE    YESEXEC
         MVI   0(R6),C'#'               SHOW JOB NOT FOUND
         B     HASPEXIT
YESEXEC  EQU   *
         MVC   0(8,R6),USERBUF+10       COPY JOBNAME
HASPEXIT LEAVE
EXMVC    MVC   0(0,R6),0(R5)            ** EXECUTED ONLY **
* END OF HASP# JOB NUMBER ROUTINE                                .JTIP.
         LTORG
.SKIP6   ANOP
         EJECT
WORKAREA DSECT
          DS   18F
PPLUPT    DC   A(0)
PPLECT    DC   A(0)
PPLECB    DC   A(PPLECBS)
PPLPCL    DC   A(PARM)
PPLANS    DC   A(ANS)
PPLCBUF   DC   A(0)
PPLUWA    DC   A(0)
PPLECBS   DC   A(0)
ANS       DC   A(0)
TOKEN     DS   F
JOBNAME   DS   CL8
          AIF  (NOT &JTIP).SKIP7
USERCMDP  DS   A(USERCMDL)              ****                     .JTIP.
USERBUFP  DS   A(USERBUFL)              *                        .JTIP.
USERCMDL  DS   Y(L'CMDBUF)             **   THESE DEFINITIONS ARE.JTIP.
CMDBUF    DS   CL80                    **   ORDER SENSITIVE      .JTIP.
USERBUFL  DS   Y(L'USERBUF)             *                        .JTIP.
USERBUF   DS   CL200                    ****                     .JTIP.
.SKIP7    ANOP
WAITLINE  EQU  *
          DS   CL16
SHRTYPE   DS   CL3
          DS   CL11
WAITDSN   DS   CL44
HOLDLINE  EQU  *
          DS   CL26
HOLDDSN   DS   CL44
HOLDMARK  DS   CL15      POSSIBLE END PLACE
HOLDALC   DS   CL12
HOLDTYPE  DS   CL3
FIRST     DS   C
EFLAG     DS   C
RQSTUSER  DS   C
RQSTJOB   DS   C
JFLAG     DS   C
ASID      DS   H
NO        EQU  0
YES       EQU  1
TABLE     DS   12288X
WORKLEN   EQU  *-WORKAREA
          IKJCPPL
          IKJPSCB
          ISGRIB
          END
