         MACRO
&LABEL   RNBMSG &MSG=,&ID=XXXX,&INSERTS=,&FLAGS=,&BUF1=,&BUF2=,        X
               &CALL=YES,&TEC462=TEC462,&MF=L
         GBLC  &RNBMNAM,&RNBMTYP
         LCLA  &I,&J
         LCLB  &SPCL
         LCLC  &C,&D,&FLAG1,&FLAG2,&LBL,&XBUF1,&XBUF2
         AIF   (K'&LABEL LE 7 OR '&MF' NE 'L').CONT1
         MNOTE 8,'RNBMSG LABEL LENGTH MUST BE <= 7 IF MF=L'
.CONT1   ANOP
&C       SETC  'L'''
&LBL     SETC  'RM&SYSNDX'
&XBUF1   SETC  '0'
&XBUF2   SETC  '0'
         AIF   (T'&BUF1 EQ 'O').CONT2A
&XBUF1   SETC  '&BUF1'
.CONT2A  AIF   (T'&BUF2 EQ 'O').CONT2B
&XBUF2   SETC  '&BUF2'
.CONT2B  ANOP
         AIF   ('&MF' EQ 'L').LFORM
         AIF   ('&MF'(1,1) EQ '(').EFORM
         AIF   ('&MF' EQ 'D').DFORM
         MNOTE 8,'RNBMSG: BAD VALUE, MF=&MF.. MF=L ASSUMED'
.LFORM   ANOP
         AIF   (T'&LABEL NE 'O').LFORM2
         MNOTE 8,'LABEL REQUIRED FOR MF=L'
         MEXIT
.LFORM2  ANOP
         AIF   ('&INSERTS' EQ '').LFORM4
         AIF   ('&INSERTS'(1,1) EQ '(').LFORM4
         AIF ('&INSERTS'(1,1) GE '0' AND '&INSERTS'(1,1) LE '9').LFORM3
         MNOTE 8,'RNBMSG: INVALID VALUE, INSERTS=&INSERTS'
         AGO   .LFORM4
.LFORM3  ANOP
&LABEL   DC    AL1(&INSERTS)
         AGO   .LFORM5
.LFORM4  ANOP
&I       SETA  N'&INSERTS
&LABEL   DC    AL1(&I)             NUMBER OF INSERTS
.LFORM5  ANOP
         AIF   ('&MSG'(1,1) EQ '(').STDMSG
         DC    AL3(&MSG)           ADDRESS OF MESSAGE
&SPCL    SETB  1
         AGO   .ID
.STDMSG  DC    AL3(&LBL)           ADDRESS OF MESSAGE
&SPCL    SETB  0
.ID      DC    CL4'&ID'            MESSAGE ID TO ISSUE
&FLAG1   SETC  '0'
&FLAG2   SETC  '0'
         AIF   (T'&FLAGS EQ 'O').FLAGS
&J       SETA  1
.LOOP1   ANOP
&D       SETC  '&FLAGS(&J)'
         AIF   ('&D' NE 'HEX').F2
&FLAG1   SETC  '&FLAG1.+RMHEX'
         AGO   .BUMP1
.F2      AIF   ('&D' NE 'ALLDEC').F3
&FLAG1   SETC  '&FLAG1.+RMALLDEC'
         AGO   .BUMP1
.F3      AIF   ('&D' NE 'NOXQ').F4
&FLAG1   SETC  '&FLAG1.+RMNOXQ'
         AGO   .BUMP1
.F4      AIF   ('&D' NE 'IGNTRUNC').F5
&FLAG1   SETC  '&FLAG1.+RMIGNT'
         AGO   .BUMP1
.F5      AIF   ('&D' NE 'PUTLINE').F6
&FLAG1   SETC  '&FLAG1.+RMPUTL'
         AGO   .BUMP1
.F6      AIF   ('&D' NE 'PUTGET').F7
&FLAG1   SETC  '&FLAG1.+RMPUTG'
         AGO   .BUMP1
.F7      AIF   ('&D' NE 'EXTRACT').F8
&FLAG1   SETC  '&FLAG1.+RMEXTR'
         AGO   .BUMP1
.F8      AIF   ('&D' NE 'WTO').F9
&FLAG1   SETC  '&FLAG1.+RMWTO'
         AGO   .BUMP1
.F9      AIF   ('&D' NE 'NOID').F10
&FLAG2   SETC  '&FLAG2.+RMNOID'
         AGO   .BUMP1
.F10     AIF   ('&D' NE 'WTOPUT').F11
&FLAG2   SETC  '&FLAG2.+RMWTOPUT'
         AGO   .BUMP1
.F11     AIF   ('&D' NE 'WTP').F12
&FLAG2   SETC  '&FLAG2.+RMWTP'
         AGO   .BUMP1
.F12     AIF   ('&D' NE 'JOBLOG').F13
&FLAG2   SETC  '&FLAG2.+RMJOBLOG'
         AGO   .BUMP1
.F13     AIF   ('&D' NE 'CPPL').FERR
&FLAG2   SETC  '&FLAG2.+RMCPPL'
         AGO   .BUMP1
.FERR    MNOTE 8,'BAD FLAG VALUE, &D'
.BUMP1   ANOP
&J       SETA  &J+1
         AIF   (&J LE N'&FLAGS).LOOP1
.FLAGS   DC    AL1(&FLAG1)         FIRST FLAG BYTE
         DC    AL3(&XBUF1)         FIRST BUFFER ADDRESS
         DC    AL1(&FLAG2)         SECOND FLAG BYTE
         DC    AL3(&XBUF2)         SECOND BUFFER ADDRESS
         AIF   ('&INSERTS' EQ '').INSDONE
         AIF   ('&INSERTS'(1,1) EQ '(').CONTI
         AIF ('&INSERTS'(1,1) GE '0' AND '&INSERTS'(1,1) LE '9').CONTN
         MNOTE 8,'RNBMSG: INVALID VALUE, INSERTS=&INSERTS'
         AGO   .INSDONE
.CONTN   DC    &INSERTS.AL4(0)       ROOM FOR INSERTS
         AGO   .INSDONE
.*  MESSAGE INSERT INFORMATION FOLLOWS
.CONTI   ANOP
&I       SETA  1
.LOOP2   ANOP
         RNBMSGI &INSERTS(&I)
         AIF   ('&RNBMTYP' EQ 'O').INSOM
         AIF   ('&RNBMTYP' EQ 'NUM').NUM
         DC    AL1(&C&RNBMNAM),AL3(&RNBMNAM)
         AGO   .BUMP2
.INSOM   DC    AL4(0)          ROOM FOR AN INSERT
         AGO   .BUMP2
.NUM     ANOP
         DC    AL1(128+&C&RNBMNAM),AL3(&RNBMNAM)
.BUMP2   ANOP
&I       SETA  &I+1
         AIF   (&I LE N'&INSERTS).LOOP2
.INSDONE ANOP
L&LABEL  EQU   *-&LABEL
         AIF   (&SPCL).MEND
&LBL     IKJTSMSG &MSG,&ID
         IKJTSMSG ,
         AGO   .MEND
.*
.*
.DFORM   ANOP
&LABEL   DS    XL(L&MSG)        SPACE FOR MODIFIABLE MESSAGE
         AGO   .MEND
.EFORM   ANOP
         AIF   ('&MF(1)' EQ 'E').EF00
         MNOTE 8,'RNBMSG: MF=&MF INVALID, TERMINATING GENERATION'
         AGO   .MEND
.EF00    ANOP
&LABEL   DS    0H
         AIF   (T'&MSG EQ 'O').EF1
         MVC   &MF(2)(L&MSG),&MSG      MOVE MESSAGE TO WORKING STORAGE
.EF1     LA    R15,&MF(2)
         USING RNBMSGD,R15     #####
         LR    R1,R15           PREPARE FOR CALL TO TEC462
         AIF   (T'&BUF1 EQ 'O').EF3
         LA    R0,&BUF1         POINT TO BUFFER # 1
         STCM  R0,7,RMBUF1      AND PUT IN MESSAGE
.EF3     AIF   (T'&BUF2 EQ 'O').EF4
         LA    R0,&BUF2         POINT TO BUFFER # 2
         STCM  R0,7,RMBUF2      AND PUT IN MESSAGE
.EF4     ANOP
         AIF   ('&INSERTS' EQ '').EF99
         AIF   ('&INSERTS'(1,1) EQ '(').EF5
         MNOTE 8,'RNBMSG: BAD VALUE, INSERTS=&INSERTS'
         MEXIT
.EF5     ANOP
.*  MESSAGE INSERT INFORMATION FOLLOWS
&I       SETA  1
.EFLOOP  ANOP
         RNBMSGI &INSERTS(&I)
         AIF   ('&RNBMNAM' EQ '0').EFCLEAR
         AIF   ('&RNBMTYP' EQ 'O').EFBUMP
         AIF   ('&RNBMTYP' EQ 'NUM').EFNUM
         LA    R0,&C&RNBMNAM        GET LENGTH OF INSERT &I
         STC   R0,RMINSLEN          PUT IT IN MESSAGE
         LA    R0,&RNBMNAM          GET ADDRESS OF INSERT &I
         STCM  R0,7,RMINSADR        PUT IT IN MESSAGE
         AGO   .EFBUMP
.EFNUM   ANOP
         LA    R0,&C&RNBMNAM        GET LENGTH OF INSERT &I
         STC   R0,RMINSLEN          PUT IT IN MESSAGE
         OI    RMINSLEN,RMNUMBER    INDICATE NUMERIC INSERT
         LA    R0,&RNBMNAM          GET ADDRESS OF INSERT &I
         STCM  R0,7,RMINSADR        PUT IT IN MESSAGE
         AGO   .EFBUMP
.EFCLEAR XC    RMINSERT,RMINSERT    CLEAR INSERT ADDRESS
.EFBUMP  ANOP
&I       SETA  &I+1
         AIF   (&I GT N'&INSERTS).EF99
         LA    R15,4(,R15)          BUMP TO NEXT INSERT IN MESSAGE
         AGO   .EFLOOP
.EF99    ANOP
         DROP  R15             #####
         AIF   ('&CALL' EQ 'NO').MEND
         AIF   ('&CALL' EQ 'YES').EFLINK
         AIF   ('&CALL'(1,1) EQ '(').EFREG
         L     R15,&CALL            PICK UP TEC462 ADDRESS
         BALR  R14,R15              ISSUE THE MESSAGE
         AGO   .MEND
.EFLINK  ANOP
*        LINK  EP=TEC462            LINK TO TEC462 TO ISSUE THE MESSAGE
         LINK  EP=&TEC462
         AGO   .MEND
.EFREG   LR    R15,&CALL(1)         PICK UP TEC462 ADDRESS
         BALR  R14,R15              GO ISSUE THE MESSAGE
.MEND    MEND
