TEC462   TITLE 'RNBMSG -- SIMPLE INTERFACE TO IKJEFF02 FOR WTO/PUTLINE'
***********************************************************************
*$DEL U004462                                                         *
*H U004462 S=MVS C=GX16 D=JAN82 L=050                                 *
*T   TEC462 - RNBMSG -- SIMPLE INTERFACE TO IKJEFF02 FOR WTO/PUTLINE  *
*K TEC462 RNBMSG RNBMSGD WTO PUTLINE IKJEFF02 IKJTSMSG TSO            *
*                                                                     *
*                          COPYRIGHT: 1982 RAINIER NATIONAL BANK      *
*                                     SEATTLE WASHINGTON              *
*                                     (206) 433-7467                  *
* MEMBER: TEC462                                                      *
* SMP USERMOD: N/A                                                    *
* OBTAINED FROM: N/A              (IF CBT/SHARE TAPE GIVE VERSION #)  *
*                                                                     *
* SOURCE LIB: SLICK.PROD.SOURCE                                       *
* MACRO LIBS NEEDED: TEC.SYSTEM.MACLIB                                *
*                    SYS1.AMODGEN                                     *
*                                                                     *
* LOAD LIB: SYS1.OPS.DAUTHLIB                                         *
* LINKAGE EDITOR ATTRIBUTES: RENT                                     *
*                                                                     *
* PURPOSE:                                                            *
*        TEC462 PROVIDES A SIMPLE INTERFACE TO IKJEFF02. THIS ALLOWS  *
*        A BATCH OR TSO PROGRAM TO ISSUE PUTLINE'S OR WTO'S WITH      *
*        VARIABLE MESSAGE TEXT (E.G. INSERTS) AS APPROPRIATE. USE OF  *
*        IKJEFF02 FOR BATCH JOBS PROVIDES A CLEANER WAY TO PUT INSERTS*
*        INTO A WTO THAN DIRECTLY MODIFYING THE WTO EXPANSION. USE OF *
*        TEC462 PROVIDES A MORE REASONABLE INTERFACE TO IKJEFF02 THAN *
*        THAT GIVEN IN GC28-0648, THE TSO GUIDE TO WRITING A TERMINAL *
*        MONITOR PROGRAM OR A COMMAND PROCESSOR.                      *
*                                                                     *
* USAGE:                                                              *
*        TEC462 IS INVOKED VIA A LINK OR A LOAD/CALL WITH R1 POINTING *
*        TO A FULLWORD THAT POINTS TO AN RNBMSG AREA. THE RNBMSG AREA *
*        CAN BE GENERATED BY THE RNBMSG MACRO AND IS MAPPED BY THE    *
*        RNBMSGD DSECT GENERATED BY THE RNBMSGD DSECT.                *
*                                                                     *
* RETURN CODES:                                                       *
*        0 - EVERYTHING OK                                            *
*       76 - ERROR IN IKJEFF02 PARM LIST                              *
*       84 - MSG TRUNCATED BY IKJEFF02 (CHECKED ONLY FOR EXTRACT,     *
*              WTO WITH BUF1 SUPPLIED, AND JOBLOG REQUESTS. EXTRACT   *
*              WILL HAVE BEEN DONE, OTHERS SUPPRESSED)                *
*       88 - ERROR - NO FUNCTION REQUESTED                            *
*       92 - ERROR - MULTIPLE FUNCTIONS REQUESTED                     *
*       96 - ERROR - FUNCTION NOT YET IMPLEMENTED                     *
*      100 - ERROR - CPPL NOT VALID                                   *
*      104 - ERROR - BUFFER 1 REQUIRED FOR FUNCTION                   *
*      108 - ERROR - BUFFER LENGTH INVALID                            *
*                                                                     *
* CHANGE LOG:                                                         *
*    01/08/82 -   -WBF- INITIAL VERSION                               *
*    05/10/82 -001-WBF- MODIFIED SO PUTLINE WILL ALSO WORK FOR CALLED *
*                         PROGRAMS UNDER TSO OR BACKGROUND TSO.       *
*    09/05/82 -002-WBF- MODIFIED SO TEC462 CAN ACCEPT A CPPL ADDRESS  *
*                         IN THE BUFFER2 ADDRESS.                     *
*    10/04/83 -003-WBF- MODIFIED SO TEC462 WILL FREE THE WORKAREA IT  *
*                         GETMAINS.                                   *
*$EOM                                                                 *
***********************************************************************
         EJECT
TEC462   CSECT
         SAVE  (14,12),,TEC462_&SYSDATE_&SYSTIME
         LR    R12,R15                  GET GOOD BASE
         USING TEC462,R12               #####
         LR    R11,R1                   GET BASE FOR PARMS
         USING RNBMSGD,R11              #####
         GETMAIN R,LV=WORKLEN           GET WORKING STORAGE
         ST    R1,8(,R13)               LINK SAVE AREAS
         ST    R13,4(,R1)
         LR    R13,R1                   GET BASE FOR WORKING STORAGE
         USING WORK,R13                 #####
         SR    R2,R2                    ZERO THE WORKAREA EXCEPT FOR
         SR    R3,R3                    THINGS THAT DON'T NEED TO BE
         LA    R14,WORKZERO             ZEROED
         LA    R15,WORKLEN2
         MVCL  R14,R2
         MVC   WEXTRACT,CEXTRACT
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
* DETERMINE FUNCTION TO BE PERFORMED AND GO DO IT                     *
*                                                                     *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
         TM    RMFLAG1,RMPUTL           PUTLINE DESIRED?
         BO    PUTLINE                  /YES - GO PROCESS IT
         TM    RMFLAG1,RMPUTG           PUTGET DESIRED?
         BO    PUTGET                   /YES - DO SO
         TM    RMFLAG1,RMEXTR           EXTRACT-ONLY DESIRED?
         BO    EXTRACT                  /YES - DO SO
         TM    RMFLAG1,RMWTO            WTO DESIRED?
         BO    WTO                      /YES - DO SO
         TM    RMFLAG2,RMWTOPUT         WTO OR PUTLINE, AS APPROPRIATE?
         BO    WTOPUT                   /YES - GO DECIDE
         TM    RMFLAG2,RMWTP            WTP?
         BO    WTP                      /YES - GO DO SO
         TM    RMFLAG2,RMJOBLOG         WRITE TO JES2 JOB LOG?
         BO    JOBLOG                   /YES - GO DO SO
*
         LA    R15,RMERR88              ELSE NOTHING TO DO,
         B     RETURN                   SO SET AN ERROR CODE AND LEAVE
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
* PROCESS PUTLINE REQUEST                                             *
*                                                                     *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
PUTLINE  DS    0H
         LA    R15,RMERR92              PREPARE FOR CONFLICT ERROR
         TM    RMFLAG1,RMPUTG+RMEXTR+RMWTO  ANY CONFLICTING REQUESTS?
         BNZ   RETURN                   /YES - ERROR, GOODBYE
         TM    RMFLAG2,RMWTOPUT+RMWTP+RMJOBLOG  HOW ABOUT THESE?
         BNZ   RETURN                   /YES - ERROR, GOODBYE
*                                       /NO  - CONTINUE
         OI    MTSW1,MTPUTLSW           SAY WE WANT A PUTLINE
         BAL   R14,PARMSET              SET UP BASIC IKJEFF02 PARMS
*
         BAL   R14,FINDCPPL             LOCATE CPPL                 001
         B     PUTLBAD                  /BRANCH IF BAD CPPL         001
*                                       /COME HERE IF GOOD CPPL     001
*
         BAL   R14,CALLTSSR             AND THEN CALL IKJEFF02 TO ISSUE
*                                       THE MESSAGE
         B     RETURN                   RETURN WITH IKJEFF02'S RC
*                                                                   001
PUTLBAD  LA    R15,RMERR100             NO CPPL AVAILABLE - RETURN  001
         B     RETURN                   WITH RC 100                 001
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
* PROCESS EXTRACTION REQUEST                                          *
*                                                                     *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
EXTRACT  DS    0H
         LA    R15,RMERR92              PREPARE FOR CONFLICT ERROR
         TM    RMFLAG1,RMPUTL+RMPUTG+RMWTO  ANY CONFLICTING REQUESTS?
         BNZ   RETURN                   /YES - ERROR, GOODBYE
         TM    RMFLAG2,RMWTOPUT+RMWTP+RMJOBLOG  HOW ABOUT THESE?
         BNZ   RETURN                   /YES - ERROR, GOODBYE
*                                       /NO  - CONTINUE
*
         BAL   R14,PARMSET              SET UP BASIC IKJEFF02 PARMS
         LA    R15,RMERR104             SET UP FOR NO-BUFFER ERROR
         ICM   R1,7,RMBUF1              GET BUFFER ADDRESS # 1
         BZ    RETURN                   /ERROR IF NO BUFFER
         STCM  R1,7,MTEXTRBF            ELSE SET BUFFER ADDRESS
*
         LH    R2,0(,R1)                GET BUFFER LEN FROM BUFFER
         LA    R15,RMERR108             SET UP FOR BAD-BUFFER-LENGTH
         LTR   R2,R2                    ERROR AND TEST
         BZ    RETURN                   /ERROR IF LENGTH=ZERO
         CH    R2,=H'255'               ALSO CHECK FOR MAX LENGTH
         BH    RETURN                   /ERROR IF > 255
         STC   R2,MTEXTRLN              ELSE SAVE LEN FOR IKJEFF02
*
*                                       NOW PROCESS BUFFER # 2
         ICM   R1,7,RMBUF2              GET BUFFER ADDRESS # 2
         BZ    $EXTR1                   /DONE WITH SETUP IF NONE
         STCM  R1,7,MTEXTRB2            ELSE SET BUFFER ADDRESS
*
         LH    R2,0(,R1)                GET BUFFER LEN FROM BUFFER
         LA    R15,RMERR108             SET UP FOR BAD-BUFFER-LENGTH
         LTR   R2,R2                    ERROR AND TEST
         BZ    RETURN                   /ERROR IF LENGTH=ZERO
         CH    R2,=H'255'               ALSO CHECK FOR MAX LENGTH
         BH    RETURN                   /ERROR IF > 255
         STC   R2,MTEXTRL2              ELSE SAVE LEN FOR IKJEFF02
*
$EXTR1   BAL   R14,CALLTSSR             GO CALL IKJEFF02
         LTR   R15,R15                  ANY ERRORS?
         BNZ   RETURN                   /YES - LEAVE IKJEFF02'S RC
*                                       /NO  -
         TM    RMFLAG1,RMIGNT           DOES USER CARE ABOUT TRUNC?
         BO    RETURN0                  /NO  - GIVE 0 RC ANYWAY
*                                       /YES - BETTER CHECK FOR IT
         LA    R15,RMERR84              SET UP FOR ERROR
         SR    R0,R0                    GET LENGTH OF BUFFER 1
         IC    R0,MTEXTRLN
         L     R1,MTEXTRCT              GET ADDR OF MESSAGE 1
         CH    R0,0(,R1)                COMPARE BUFFLEN:MSGLEN
         BL    RETURN                   /ERROR IF BUFFLEN LOW
         IC    R0,MTEXTRL2              GET LENGTH OF BUFFER 2
         L     R1,MTEXTRC2              GET ADDR OF MESSAGE 2
         CH    R0,0(,R1)                COMPARE BUFFLEN:MSGLEN
         BL    RETURN                   /ERROR IF BUFFLEN LOW
         B     RETURN0                  ELSE OK
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
* PROCESS WTO REQUEST                                                 *
*                                                                     *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
WTO      DS    0H
         LA    R15,RMERR92              PREPARE FOR CONFLICT ERROR
         TM    RMFLAG1,RMPUTL+RMPUTG+RMEXTR  ANY CONFLICTING REQUESTS?
         BNZ   RETURN                   /YES - ERROR, GOODBYE
         TM    RMFLAG2,RMWTOPUT+RMWTP+RMJOBLOG  HOW ABOUT THESE?
         BNZ   RETURN                   /YES - ERROR, GOODBYE
*                                       /NO  - CONTINUE
*
         BAL   R14,PARMSET              SET UP BASIC IKJEFF02 PARMS
         OI    MTSW1,MTNOIDSW           ASSUME DATA ONLY FOR WTO
*
         ICM   R1,7,RMBUF1              GET BUFFER #1 ADDRESS
         BZ    $WTOJEF2                 /LET IKJEFF02 DO WTO IF NONE
*                                       /ELSE ASSUME BUFFER IS MODEL
*                                       WTO
         MVI   MTEXTRLN,128             SET UP EXTRACT LENGTH EQUAL TO
*                                       MAX WTO LENGTH + 4
         LA    R1,WEXTRBUF              SET BUFFER ADDRESS IN PARMS
         STCM  R1,7,MTEXTRBF
         BAL   R14,CALLTSSR             GO EXTRACT THE MESSAGE
         LTR   R15,R15                  ANY ERRORS?
         BNZ   RETURN                   /YES - RETURN ERROR CODE
*                                       /NO  -
         LH    R2,WEXTRBUF              GET LENGTH OF MESSAGE
         CH    R2,=H'128'               DID IT OVERFLOW?
         BNH   $WTOBLD                  /NO  - CONTINUE
*                                       /YES -
         TM    RMFLAG1,RMIGNT           DOES USER CARE?
         BO    $WTOBLD                  /NO  - CONTINUE
         LA    R15,RMERR84              /YES - GIVE ERROR RC
         B     RETURN
*
$WTOBLD  MVC   WWTO,CWTO                SET UP A WTO
         MVI   WWTO+4,C' '              BLANK THE DUMMY MESSAGE IN
         MVC   WWTO+5(123),WWTO+4       THE MODIFIABLE WTO
         ICM   R1,7,RMBUF1              GET USER'S BUFFER (MODEL WTO)
         MVC   WWTO+2(2),2(R1)          MOVE HIS MCS FLAGS TO OUR WTO
         BCTR  R2,0                     SETUP FOR EXECUTED MSG MOVE
         MVC   WWTO+4(*-*),WEXTRBUF+4   ** EXECUTED MESSAGE MOVE **
         EX    R2,*-6                   MOVE THE MESSAGE
         TM    2(R1),X'80'              DID USER GIVE ROUT/DESC CODES?
         BZ    $WTOWTO                  /NO  - GO DO OLD FORM WTO
         LH    R2,0(,R1)                /YES - GET USER'S MSG LENGTH
         AR    R2,R1                    POINT PAST MESSAGE IN MODEL
         MVC   WWTO+128(4),0(R2)        MOVE ROUT/DESC INTO OUR WTO
*
$WTOWTO  WTO   MF=(E,WWTO)              DO THE WTO
         B     RETURN                   GO BACK WITH WTO'S RC
*
$WTOJEF2 OI    MTSW1,MTWTOSW            IF NO MODEL, TELL IKJEFF02 TO
         BAL   R14,CALLTSSR             DO THE WTO, AND CALL HIM
         B     RETURN                   GO BACK WITH IKJEFF02'S RC
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
* PROCESS WTOPUT REQUEST - DECIDE WHETHER A WTO OR PUTLINE IS NEEDED  *
* DECISION: IF THERE APPEARS TO BE A VALID CPPL, THEN DO A PUTLINE.   *
*           OTHERWISE DO A WTO OF SOME SORT (SPECIFIED IN PARMS)      *
*                                                                     *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
WTOPUT   DS    0H
         LA    R15,RMERR92              PREPARE FOR CONFLICT ERROR
         TM    RMFLAG1,RMPUTL+RMPUTG+RMEXTR ANY CONFLICTING REQUESTS?
         BNZ   RETURN                   /YES - ERROR, GOODBYE
*                                       /NO  - CONTINUE
*
         BAL   R14,FINDCPPL             TRY TO FIND CPPL
         B     $DOWTO                   /BRANCH IF NO CPPL          001
*                                       /ELSE HAVE CPPL, SO         001
         OI    MTSW1,MTPUTLSW           SAY WE WANT A PUTLINE
         BAL   R14,PARMSET              SET UP BASIC IKJEFF02 PARMS
         BAL   R14,CALLTSSR             GO TO IKJEFF02
         B     RETURN                   AND LEAVE WITH HIS RC
*
$DOWTO   NI    RMFLAG2,X'FF'-RMWTOPUT   TURN OFF WTOPUT FLAG
         TM    RMFLAG2,RMWTP            WTP DESIRED?
         BO    WTP                      /YES - GO TO IT
*                                       /NO  -
         TM    RMFLAG2,RMJOBLOG         WRITE-TO-JOBLOG DESIRED?
         BO    JOBLOG                   /YES - GO TO IT
         B     WTO                      /NO  - ASSUME ORDINARY WTO
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
* PROCESS WTP REQUEST                                                 *
*                                                                     *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
WTP      DS    0H
         LA    R15,RMERR92              PREPARE FOR CONFLICT ERROR
         TM    RMFLAG1,RMPUTL+RMPUTG+RMEXTR  ANY CONFLICTING REQUESTS?
         BNZ   RETURN                   /YES - ERROR, GOODBYE
         TM    RMFLAG2,RMWTOPUT+RMWTO+RMJOBLOG  HOW ABOUT THESE?
         BNZ   RETURN                   /YES - ERROR, GOODBYE
*                                       /NO  - CONTINUE
*
         BAL   R14,PARMSET              SET UP BASIC IKJEFF02 PARMS
         OI    MTSW1,MTNOIDSW+MTWTPSW   ASSUME DATA ONLY FOR WTP
         BAL   R14,CALLTSSR             LET IKJEFF02 DO THE WTP
         B     RETURN                   GO BACK WITH IKJEFF02'S RC
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
* PROCESS JOBLOG REQUEST (WTO WITH ROUTCDE=14)                        *
*                                                                     *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
JOBLOG   DS    0H
         LA    R15,RMERR92              PREPARE FOR CONFLICT ERROR
         TM    RMFLAG1,RMPUTL+RMPUTG+RMEXTR  ANY CONFLICTING REQUESTS?
         BNZ   RETURN                   /YES - ERROR, GOODBYE
         TM    RMFLAG2,RMWTOPUT+RMWTP+RMWTO   HOW ABOUT THESE?
         BNZ   RETURN                   /YES - ERROR, GOODBYE
*                                       /NO  - CONTINUE
*
         BAL   R14,PARMSET              SET UP BASIC IKJEFF02 PARMS
         OI    MTSW1,MTNOIDSW           ASSUME DATA ONLY FOR WTO
*
         MVI   MTEXTRLN,128             SET UP EXTRACT LENGTH EQUAL TO
*                                       MAX WTO LENGTH + 4
         LA    R1,WEXTRBUF              SET BUFFER ADDRESS IN PARMS
         STCM  R1,7,MTEXTRBF
         BAL   R14,CALLTSSR             GO EXTRACT THE MESSAGE
         LTR   R15,R15                  ANY ERRORS?
         BNZ   RETURN                   /YES - RETURN ERROR CODE
*                                       /NO  -
         LH    R2,WEXTRBUF              GET LENGTH OF MESSAGE
         SH    R2,=H'4'                 ACCOUNT FOR 4-BYTE HEADER
         CH    R2,=H'128'               DID IT OVERFLOW?
         BNH   $JBLBLD                  /NO  - CONTINUE
*                                       /YES -
         TM    RMFLAG1,RMIGNT           DOES USER CARE?
         BO    $JBLBLD                  /NO  - CONTINUE
         LA    R15,RMERR84              /YES - GIVE ERROR RC
         B     RETURN
*
$JBLBLD  MVC   WWTO,CWTO                SET UP A WTO
         MVI   WWTO+4,C' '              BLANK THE DUMMY MESSAGE IN
         MVC   WWTO+5(123),WWTO+4       THE MODIFIABLE WTO
         BCTR  R2,0                     SETUP FOR EXECUTED MSG MOVE
         MVC   WWTO+4(*-*),WEXTRBUF+4   ** EXECUTED MESSAGE MOVE **
         EX    R2,*-6                   MOVE THE MESSAGE INTO OUR WTO
*                                       (HAS ROUTCDE=14 BY DEFAULT)
         WTO   MF=(E,WWTO)              DO THE WTO
         B     RETURN                   GO BACK WITH WTO'S RC
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
* SETUP IKJEFF02 PARMS FROM RNBMSGD                                   *
*                                                                     *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
PARMSET  DS    0H
         ST    R14,WPSETSAV             SAVE RETURN ADDRESS
         LA    R1,MTCSECTP              GET ADDR OF MSG DESCRIPTION
         ST    R1,MTPLPTR               SECTION AND SAVE IN PARM LIST
*
         OI    MTHIGH,X'80'             SHOW STANDARD LINKAGE
         SR    R1,R1                    GET MESSAGE ADDRESS
         ICM   R1,7,RMMSGADR            AND PUT IT INTO THE
         ST    R1,MTCSECTP              IKJEFF02 PARM LIST
*
         TM    RMFLAG2,RMNOID           DOES MSG HAVE AN ID?
         BZ    $PS1                     /YES - BYPASS FLAG SETTING
         OI    MTSW1,MTNOIDSW           /NO  - INDICATE NO ID
$PS1     TM    RMFLAG1,RMHEX            TRANSLATE TO HEX NOT DECIMAL?
         BZ    $PS2                     /NO  - STANDARD TRANSLATION
         OI    MTSW1,MTHEXSW            /YES - TELL IKJEFF02
$PS2     TM    RMFLAG1,RMALLDEC         TRANSLATE ALL NUMERIC TO DEC?
         BZ    $PS3                     /NO  - STANDARD TRANSLATION
         OI    MTSW1,MTNHEXSW           /YES - TELL IKJEFF02
*
$PS3     TM    RMFLAG1,RMNOXQ           OMIT X'  ' AROUND HEX STUFF?
         BZ    $PS4                     /NO  - STANDARD TRANSLATION
         OI    MTSW2,MTNOXQSW           /YES - TELL IKJEFF02
*
$PS4     MVC   MTMSGID,RMID             MOVE ID OF MSG TO PARM LIST
*                                       NOW DO THE INSERTS:
         SR    R0,R0                    GET COUNT OF INSERTS
         IC    R0,RMINSCNT
         LTR   R0,R0                    ANYTHING TO INSERT?
         BZ    $PSDONE                  /NO  - ALL DONE
*                                       /YES -
         LA    R1,MTINSRT               POINT TO FIRST IKJEFF02 INSERT
         LA    R14,RMINSLEN             AND TO 1ST ONE IN OUR PARM LIST
*
$PSLOOP  MVC   0(4,R1),0(R14)           MOVE FROM OURS TO IKJEFF02'S
         LA    R1,4(,R1)                BUMP INSERT POINTERS
         LA    R14,4(,R14)
         BCT   R0,$PSLOOP               AND PROCESS ALL INSERTS
*
$PSDONE  L     R14,WPSETSAV             ALL DONE - GET RETURN ADDRESS
         BR    R14                      AND RETURN TO MAINLINE
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
* RETURN TO TEC462'S CALLER                                           *
*                                                                     *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
RETURN0  SR    R15,R15
RETURN   LR    R1,R13                   GET ADDRESS OF WORKAREA     003
         LR    R2,R15                   SAVE RETURN CODE            003
         L     R13,4(,R13)              GET POINTER TO OLD SAVE AREA
         FREEMAIN R,A=(1),LV=WORKLEN    FREE THE WORKAREA           003
         LR    R15,R2                   RESTORE RETURN CODE         003
         RETURN (14,12),RC=(15)         AND GO BACK
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
* CALL IKJEFF02                                                       *
*                                                                     *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
CALLTSSR DS    0H
         ST    R14,WTSSRSAV             SAVE RETURN ADDRESS
         CALLTSSR EP=IKJEFF02,          CALL IKJEFF02                  X
               MF=(E,MTPARML)
         L     R14,WTSSRSAV             GET RETURN ADDRESS
         BR    R14                      RETURN TO MAINLINE
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
* LOCATE CPPL IF ANY                                                  *
*                                                                     *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
FINDCPPL DS    0H
         TM    RMFLAG2,RMCPPL           WAS CPPL GIVEN TO US?       002
         BZ    FINDCPP0                 /NO  - MUST GO FIND IT      002
         ICM   R2,7,RMBUF2              /YES - IT'S IN BUF2         002
         LA    R2,0(,R2)                                            002
         ST    R2,MTCPPLP               SAVE FOR IKJEFF02           002
         B     4(R14)                                               002
*                                       GET CPPL POINTER:
FINDCPP0 L     R1,CVTPTR                 CVT                        002
         USING CVT,R1                    #####                      001
         L     R1,CVTTCBP                TCB POINTERS               001
         L     R1,4(,R1)                 CURRENT TCB                001
         USING TCB,R1                    #####                      001
         L     R1,TCBJSTCB               GET JOB STEP TCB           001
         L     R1,TCBFSA                 FIRST SAVE AREA            001
         DROP  R1                                                   001
         L     R2,16(,R1)                GET ITS ENTRY POINT (R15)  001
         CLC   =C'TEC402',5(R2)          IS IT TEC402?              001
         BNE   FINDCPP1                  /NO  - GO CHECK FOR PCF    001
         L     R1,8(,R1)                 /YES - SKIP THIS ONE       001
*                                                                   001
         L     R2,16(,R1)                GET ITS ENTRY POINT (R15)  001
FINDCPP1 CLC   =C'PCFTMP00',5(R2)        IS IT PCFTMP00?            001
         BNE   FINDCPP2                  /NO  - GO CHECK IKJEFT02   001
         L     R1,8(,R1)                 /YES - SKIP THIS ONE       001
*                                                                   001
         L     R2,16(,R1)                GET ITS ENTRY POINT (R15)  001
FINDCPP2 CLC   =C'IKJEFT02',5(R2)        IS IT IKJEFT02?            001
         BE    FINDCPP3                  /YES - FOUND RIGHT SAVEAREA001
         BR    R14                       /NO  - ERROR, CPPL UNAVAIL 001
*                                                                   001
*                                                                   001
FINDCPP3 L     R2,24(,R1)                LOAD TMP PROT WA ADDRESS   001
         L     R2,0(,R2)                 AND THEN UNPROTECTED WA    001
*                                        (1ST 4 WORDS ARE CPPL)     001
         ST    R2,MTCPPLP               AND SAVE IT FOR IKJEFF02    001
         B     4(R14)                   GO TO "FOUND" RETURN        001
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
* UNIMPLEMENTED FUNCTIONS                                             *
*                                                                     *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
PUTGET   DS    0H
         LA    R15,RMERR96
         B     RETURN
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
* CONSTANTS                                                           *
*                                                                     *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
         DS    0F                           A MODEL FOR AN
CEXTRACT EXTRACT *-*,FIELDS=(PSB),MF=L      EXTRACT INSTRUCTION
EXTRACTL EQU   *-CEXTRACT
*
         DS    0F
CWTO     WTO   '123456789A123456789B123456789C123456789D123456789E12345-
               6789F123456789G123456789H123456789I123456789J123456789K1-
               23456789L1234',ROUTCDE=(14),MF=L
CWTOL    EQU   *-CWTO
         LTORG ,
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
* EQUATES                                                             *
*                                                                     *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
RMERR84  EQU   84             ERROR - MSG TRUNCATED
RMERR88  EQU   88             ERROR - NO FUNCTION REQUESTED
RMERR92  EQU   92             ERROR - MULTIPLE FUNCTIONS
RMERR96  EQU   96             ERROR - FUNCTION NOT YET IMPLEMENTED
RMERR100 EQU   100            ERROR - CPPL REQUIRED BUT NOT VALID
RMERR104 EQU   104            ERROR - BUFFER REQUIRED, NOT SUPPLIED
RMERR108 EQU   108            ERROR - BUFFER LENGTH INVALID
         REGEQU
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
* RNBMSGD DSECT (OUR PARM LIST)                                       *
*                                                                     *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
         RNBMSGD
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
* WORK AREA DSECT                                                     *
*                                                                     *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
WORK     DSECT
         DS    18F                      SAVEAREA - MUST BE FIRST
WTSSRSAV DS    F                        R14 SAVE AREA FOR CALLTSSR
WPSETSAV DS    F                        R14 SAVE AREA FOR PARMSET
WPSB     DS    F                        EXTRACTED PSCB ADDRESS
         DS    0F                       EXTRACTED PSCB ADDRESS
WEXTRACT DS    XL(EXTRACTL)             LIST-FORM EXTRACT MACRO
         DS    0F                       EXTRACTED PSCB ADDRESS
WWTO     DS    XL(CWTOL)                A MODIFIABLE WTO
WORKZERO EQU   *                        START OF ZEROED AREA
WEXTRBUF DS    XL259                    AN EXTRACT BUFFER
         IKJEFFMT MTNINST=255           DEFINE IKJEFF02 PARMS
WORKLEN2 EQU   *-WORKZERO               LENGTH OF ZEROED AREA
WORKLEN  EQU   *-WORK                   LENGTH OF ENTIRE AREA
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
* OTHER DSECTS                                                        *
*                                                                     *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
         PRINT NOGEN
         CVT   DSECT=YES
         IKJCPPL
         IKJPSCB
         IKJTCB
         END
