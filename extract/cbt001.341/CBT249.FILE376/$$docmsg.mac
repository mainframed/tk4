DOCUMENTATION ON THE USE OF THE RNBMSG MACRO AND PROGRAM TEC462


PROGRAM TEC462 CAN BE USED TO ISSUE WTO'S OR PUTLINE'S WITH VARIABLE
TEXT (I.E. INSERTS). IT DOES THIS BY USING THE TSO MESSAGE ISSUER
IKJEFF02, BUT HAS A MUCH SIMPLER CALLING SEQUENCE AND PARAMETER LIST
THAN IKJEFF02 HAS. TO USE TEC462 DO THE FOLLOWING:

  (1) CODE YOUR MESSAGES USING THE RNBMSG MACRO. THIS WILL REQUIRE
      TEC.SYSTEM.MACLIB IN YOUR ASSEMBLY SYSLIB.
  (2) INCLUDE THE RNBMSGD MACRO IN YOUR ASSEMBLY TO GENERATE THE
      RNBMSGD DSECT THAT DESCRIBES THE RNBMSG OUTPUT, WHICH IS NOT
      SURPRISINGLY THE TEC462 INPUT.
  (3) LINK TO TEC462, PASSING IT THE ADDRESS OF THE RNBMSG MACRO IN
      R1 (CAN BE AUTOMATICALLY DONE BY THE RNBMSG MACRO WITH MF=E).

USING THE RNBMSG MACRO:

  THERE ARE THREE FORMS OF THE RNBMSG MACRO. TWO OF THEM ARE FAIRLY
  STANDARD (MF=L AND MF=E). THE THIRD (MF=D) IS NON-STANDARD, BUT
  USEFUL FOR THE WAY I CODE. BASICALLY,

     -- USE THE MF=L FORM TO BUILD YOUR MESSAGE TEXT AND OPTIONS IN
        YOUR CSECT.
     -- USE THE MF=E FORM TO MODIFY AN MF=L OR MF=D FORM AT EXECUTION
        TIME. MF=E CAN ALSO (OPTIONALLY) INVOKE TEC462 TO ISSUE THE
        THE MESSAGE AND CAN MOVE AN MF=L MESSAGE INTO A DSECT TO
        CONSERVE REENTRANCY.
     -- USE THE MF=D FORM TO RESERVE SPACE IN A DSECT IN A RE-ENTRANT
        PROGRAM.

  THE FORMAT OF THE RNBMSG MACRO IS:

    LABEL  RNBMSG  MSG=MSG-OPERAND,
                   INSERTS=(INSERT-OPERANDS),
                   FLAGS=(FLAG-OPERANDS),
                   BUF1=BUFFER1-ADDRESS,
                   BUF2=BUFFER2-ADDRESS,
                   ID=ID-OPERAND,
                   CALL=YES, × NO, × (REGISTER), × CALL-LABEL,
                   MF=MF-OPERAND

  WHERE:

  * LABEL WILL BE THE LABEL OF THE RESULTING MESSAGE PARM LIST. IF MF=L,
        LABEL MUST BE FROM 1-7 CHARACTERS LONG; FOR MF=D OR MF=D IT CAN
        BE FROM 1-8 CHARACTERS LONG. WHEN CALLING TEC462, PASS THE
        ADDRESS OF LABEL IN R1, E.G.,

                      LA    R1,LABEL
                      LINK  EP=TEC462


  * MSG-OPERAND GIVES THE MESSAGE TEXT AND LOCATIONS FOR INSERTS IF
        MF=L. FOR THE MEANING OF MSG-OPERAND FOR MF=E OR MF=D SEE THE
        DESCRIPTION OF THE MF-OPERAND.

        TO MAKE A MESSAGE WITH NO INSERTS CODE:

                            MSG=('SOME MESSAGE TEXT')

        TO SPECIFY A MESSAGE WITH AN INSERT IN THE MIDDLE CODE:
                            MSG=('FIRST PART ',,' SECOND PART')

        FOR AN INSERT AT THE BEGINNING OR END CODE:
                            MSG=(,' REST OF MESSAGE')
                        OR  MSG=('START OF MESSAGE ',)

        YOU MAY HAVE AS MANY INSERTS IN THE MESSAGE AS YOU WISH, BUT THE
        TOTAL MESSAGE LENGTH MUST BE <= 255 FOR A PUTLINE OR WTP AND
        <= 128 FOR A WTO.


  * INSERT-OPERANDS GIVES THE SPECIFICATION OF LENGTH AND LOCATION OF
        THE INSERT TEXT. CODE AS

                INSERTS=(INSERT1,INSERT2,INSERT3,...,INSERTN)

        IN AN MF=L MACRO, EACH INSERTI MUST BE THE LABEL OF AN AREA IN
        A CSECT.
        IN AN MF=E MACRO, THE INSERTS MAY BE LABELS IN A CSECT OR DSECT,
        OR MAY BE RX-SPECIFICATIONS OF THE FORM LABEL(REGISTER). NOTE
        THAT RNBMSG DOES NOT SUPPORT INSERTS OF THE FORM (R5) OR 0(R5)
        AS THE MACRO MUST BE ABLE TO DETERMINE THE LENGTH OF THE INSERT.

        THE MACRO WILL USE THE DEFINED LENGTH OF THE INSERT ITEM, E.G.
                INS1   DS  CL4'XXXX'
        WILL GENERATE CODE FOR A 4 BYTE INSERT.

        IF THE INSERT IS NUMERIC INSTEAD OF CHARACTER, CODE THE INSERTS
        IN ONE OF THE TWO FOLLOWING WAYS:

                INSERTS=(INS1,/INS2,...)
                   -OR-
                INSERTS=(INS1,(INS2,NUM),...)

        FOR AN L-FORM RNBMSG MACRO ONLY, THE FOLLOWING ADDITIONAL
        SPECIFICATIONS APPLY FOR INSERT=:

             -- INSERTS=N, WHERE N IS A NUMBER OR WILL RESERVE SPACE IN
                THE PARAMETER LIST FOR N INSERT ADDRESSES.

             -- INSERTS=(INS1,,INS3) WOULD CAUSE THE ADDRESSES FOR
                INS1 AND INS3 TO BE PUT IN THE PARM LIST, AND SPACE TO
                BE RESERVED FOR A SECOND INSERT ADDRESS. THIS CAN ALSO
                BE DONE BY CODING AS INSERTS=(INS1,0,INS3).


  * FLAG-OPERANDS GIVES THE FLAGS THAT CONTROL THE MESSAGE PROCESSING.
        SPECIFY AS

                FLAGS=(FLAG1,FLAG2,...,FLAGN)

        THE ALLOWABLE FLAGS ARE:

            HEX      - OVERRIDES THE NORMAL NUMERIC CONVERSION, SO THAT
                       ALL NUMERIC INSERTS CONVERT TO HEX.  NORMALLY,
                       NUMERIC INSERTS < 4095 CONVERT TO DECIMAL, AND
                       > 4095 CONVERT TO HEX.

            ALLDEC   - OVERRIDES THE NORMAL NUMERIC CONVERSION, SO THAT
                       ALL NUMERIC INSERTS CONVERT TO DECIMAL, EVEN
                       THOSE > 4095.

            NOXQ     - FOR HEXADECIMAL CONVERSION, OMITS THE X'  '
                       THAT WOULD NORMALLY SURROUND THE INSERT.

            IGNTRUNC - THE PROCESS OF INSERTING DATA INTO THE MESSAGE
                       COULD CAUSE IT TO EXCEED THE LIMITS ON MESSAGE
                       OR BUFFER LENGTH. SPECIFYING IGNTRUNC WILL
                       CAUSE SOME OF THOSE ERRORS TO BE IGNORED. YOU
                       WILL USUALLY NOT NEED THIS OPERAND.

            PUTLINE  - SPECIFYING THIS OPERAND WILL CAUSE THE MESSAGE
                       TO BE OUTPUT VIA PUTLINE (VALID ONLY FOR PROGRAMS
                       RUNNING UNDER TSO OR BACKGROUND TSO).

                       IF SPECIFIED, DO NOT SPECIFY EXTRACT, WTO,
                       WTOPUT, WTP, OR JOBLOG.

            EXTRACT  - CAUSES THE MESSAGE TO NOT BE OUTPUT, BUT TO ONLY
                       BE FORMATTED AND PLACED INTO YOUR BUFFER.

                       IF SPECIFIED, DO NOT SPECIFY PUTLINE, WTO,
                       WTOPUT, WTP, OR JOBLOG.

            WTO      - CAUSES THE MESSAGE TO BE OUTPUT VIA WTO.

                       IF SPECIFIED, DO NOT SPECIFY PUTLINE, EXTRACT,
                       WTOPUT, WTP, OR JOBLOG.

            NOID     - FOR MESSAGES OUTPUT VIA PUTLINE, INDICATES THAT
                       THERE IS NO MESSAGE ID AT THE FRONT OF THE
                       MESSAGE. FOR TSO USERS WITH 'PROFILE NOMSGID'
                       PUTLINE WILL STRIP THE MESSAGE ID FROM THE MSG
                       BEFORE OUTPUTTING IT UNLESS NOID IS SPECIFIED.

            WTOPUT   - FOR PROGRAMS THAT MIGHT BE INVOKED DIRECTLY AS
                       A TSO COMMAND OR DIRECTLY FROM AN EXEC JCL STMT,
                       CAUSES TEC462 TO DECIDE WHETHER TO DO A WTO OR
                       A PUTLINE.

                       IF SPECIFIED, DO NOT SPECIFY PUTLINE,
                       EXTRACT, OR WTO.

            WTP      - CAUSES MESSAGE TO BE OUTPUT VIA WTP (I.E. VIA A
                       WTO WITH ROUTCDE=(11)). NOTE THAT THE MESSAGE
                       WILL SHOW UP ON THE OPERATORS CONSOLES, TOO.

                       IF SPECIFIED, DO NOT SPECIFY PUTLINE, EXTRACT,
                       WTO, OR JOBLOG.
                       (CAN BE SPECIFIED WITH WTOPUT TO DETERMINE WHAT
                       KIND OF WTO TO USE IF ONE IS TO BE DONE).

            JOBLOG   - CAUSES MESSAGE TO BE OUTPUT VIA WTO WITH
                       ROUTCDE=(14) SO IT WILL NOT APPEAR ON THE
                       OPERATORS CONSOLES, BUT WILL APPEAR IN THE JES2
                       JOBLOG AND SYSLOG.

                       IF SPECIFIED, DO NOT SPECIFY PUTLINE, EXTRACT,
                       WTO, OR JOBLOG.
                       (CAN BE SPECIFIED WITH WTOPUT TO DETERMINE WHAT
                       KIND OF WTO TO USE IF ONE IS TO BE DONE).


  * BUFFER1-ADDRESS SPECIFIES THE ADDRESS OF AN OPTIONAL BUFFER.

        IF USED FOR AN EXTRACT OPERATION THE BUFFER MUST CONTAIN A FOUR
        BYTE HEADER FORMATTED AS LL00 WHERE LL IS THE BUFFER LENGTH + 4.

        IF USED FOR A WTO, IT SHOULD POINT TO A WTO (WHICH WILL NOT BE
        MODIFIED BY TEC462 OR THE RNBMSG MACRO) THAT CONTAINS THE
        ROUTING AND DESCRIPTOR CODES TO BE USED FOR THE WTO. THE
        TEXT-LENGTH OF THE WTO NEED NOT MATCH THAT OF THE MESSAGE TO BE
        ISSUED.

        FOR A WTO OPERATION, IF BUFFER-1 IS NOT SPECIFIED, THE WTO WILL
        BE DONE WITH ROUTCDE=(2) AND DESC=(6).  ALSO, IF BUFFER-1 IS
        SPECIFIED BUT DOES NOT CONTAIN ROUTING/DESCRIPTOR CODES, THE WTO
        WILL BE DONE WITH ROUTCDE=(14), AS THOUGH JOBLOG WERE SPECIFIED.


  * BUFFER2-ADDRESS CAN BE USED IN MORE COMPLEX CASES WHERE MULTI-LEVEL
        MESSAGES ARE BEING USED AND EXTRACT IS SPECIFIED. THIS BUFFER
        MUST ALSO HAVE THE LENGTH-DESCRIPTOR LIKE BUFFER-1. FOR MORE
        INFO ON MULTI-LEVEL MESSAGES SEE THE IKJEFF02 DESCRIPTION IN
        THE GUIDE TO WRITING A TSO TMP OR CP.

        NOTE THAT FOR MULTI-LEVEL MESSAGES, THE SECOND-LEVEL
        INSERTS MAY HAVE TO PRECEDE THE 1ST-LEVEL INSERTS. ALSO, IN
        THIS CASE THE MSG OPERAND CAN BE MSG=ADDRESS WHERE ADDRESS IS
        THE ADDRESS OF THE CSECT CREATED BY THE IKJTSMSG MACRO. ALSO,
        ID=XXXX CAN BE SPECIFIED WHERE XXXX IS THE ID OF THE MSG TO BE
        ISSUED FROM THE MESSAGE CSECT.


  * CALL-OPERAND IS USED WITH MF=E TO CONTROL WHETHER THE MACRO
        GENERATES THE LINKAGE TO TEC462 OR NOT:

          -- IF CALL=YES IS SPECIFIED OR THE OPERAND IS OMITTED, THE
             MACRO WILL GENERATE A 'LINK' MACRO TO INVOKE TEC462.

          -- IF CALL=NO IS SPECIFIED THE PROGRAMMER MUST CODE THE
             LINKAGE TO TEC462.  (FOR EASE OF CODING, THE PARAMETER
             LIST ADDRESS WILL BE PUT IN REGISTER 1 BY THE MACRO).

          -- IF CALL=(REGISTER) IS SPECIFIED, THE MACRO WILL USE
             THE REGISTER CONTENTS AS THE ADDRESS OF TEC462 AND
             WILL BRANCH TO IT. THE REGISTER CAN NOT BE R0, R1, OR
             R15.

          -- IF CALL=CALL-LABEL IS SPECIFIED, THE MACRO WILL LOAD THE
             ADDRESS OF TEC462 FROM THE SPECIFIED LABEL AND BRANCH
             TO IT.


  * MF-OPERAND IS USED TO CONTROL MACRO PROCESSING AS FOLLOWS:

        -- MF=L TEC462 PARAMETER LIST TO BE GENERATED. THE PARAMETER
           LIST HAS NO EXECUTABLE CODE IN IT. THE CALL= OPERAND SHOULD
           NOT BE SPECIFIED WITH MF=L. THE LABEL MUST BE USED. AN
           ADDITIONAL LABEL (LLABEL) WILL BE GENERATED AND EQUATED TO
           TO THE BASIC LENGTH OF THE PARM LIST.

        -- MF=D CAN BE USED IN A DSECT TO RESERVE SPACE FOR A TEC462
           PARM LIST. WHEN USING MF=D, THE ONLY OTHER OPERANDS THAT
           ARE MEANINGFUL ARE THE LABEL AND MSG=MSG-LABEL, WHERE
           MSG-LABEL IS THE LABEL ON AN L-FORM RNBMSG MACRO WHICH
           YOU INTEND TO MOVE INTO THE DSECT FOR REENTRANCY.

        -- MF=(E,MSG-LABEL2) CAN BE USED IN EXECUTABLE CODE IN REENTRANT
           PROGRAMS. THE FOLLOWING OPERANDS CAN BE USED:

               LABEL          - AS USUAL.

               MSG=MSG-LABEL1 - THE L-FORM RNBMSG MACRO DEFINED AT
                                LABEL MSG-LABEL1 WILL BE MOVED INTO
                                THE PARM LIST (WHICH CAN BE GENERATED
                                BY AN D-FORM MACRO) SPECIFIED BY
                                MSG-LABEL2 IN THE MF-OPERAND.

               INSERTS=(...)  - AS DESCRIBED ABOVE, EXCEPT THAT THE
                                INSERT LABELS CAN BE IN A CSECT OR A
                                DSECT. IF AN INSERT IS OMITTED FROM
                                THE LIST, ITS VALUE IN THE PARM LIST
                                WILL NOT BE CHANGED. TO NULLIFY AN
                                INSERT FROM THE L-FORM MACRO, CODE A
                                0 AS THE INSERT, E.G.
                                     INSERTS=(...,0,...)

               BUF1=...       - AS DESCRIBED ABOVE, EXCEPT THAT THE
                                BUFFER1-ADDRESS CAN BE FROM A CSECT OR
                                DSECT.

               BUF2=...       - AS DESCRIBED ABOVE, EXCEPT THAT THE
                                BUFFER2-ADDRESS CAN BE FROM A CSECT OR
                                DSECT.


THE RNBMSGD MACRO MUST BE INCLUDED IN ANY ASSEMBLY THAT USES THE RNBMSG
MACRO. IT PROVIDES A DSECT FOR THE TEC462 PARM LIST.

ANY PROGRAM THAT USES THE E-FORM OF RNBMSG MUST ALSO HAVE THE STANDARD
EQUATES FOR R0, R1, R14, AND R15.

**WARNING: AS WITH MANY MACROS, THE E-FORM OF RNBMSG WILL DESTROY THE**
**         PREVIOUS CONTENTS OF REGISTERS R0, R1, R14, AND R15.      **

THE RNBMSGD MACRO WILL GENERATE THE FOLLOWING DSECT:

         RNBMSGD
RNBMSGD  DSECT
RMINSCNT DS    AL1                 NUMBER OF INSERTS IN PARM LIST
RMMSGADR DS    AL3                 ADDRESS OF MESSAGE DESCRIPTOR
RMID     DS    CL4                 ID OF MESSAGE TO BE ISSUED
RMFLAG1  DS    X                   FIRST FLAG BYTE:
RMHEX    EQU   X'80'                 CONVERT NUMERIC INS TO HEX NOT DEC
RMALLDEC EQU   X'40'                 CONVERT ALL NUMERIC INS TO DEC
RMNOXQ   EQU   X'20'                 OMIT X'  ' AROUND HEX INSERTS
RMIGNT   EQU   X'10'                 IGNORE BUFFER TRUNCATION ERROR
RMPUTL   EQU   X'08'                 PERFORM PUTLINE
RMPUTG   EQU   X'04'                 PERFORM PUTGET
RMEXTR   EQU   X'02'                 EXTRACT ONLY - NO OUTPUT
RMWTO    EQU   X'01'                 PERFORM WTO OR WTOR
RMBUF1   DS    AL3                 ADDRESS OF BUFFER OR WTO # 1
RMFLAG2  DS    X                   SECOND FLAG BYTE:
RMNOID   EQU   X'80'                 FOR PUTLINE, DON'T STRIP MSGID
RMWTOPUT EQU   X'40'                 IF BATCH DO WTO; IF TSO DO PUTLINE
RMWTP    EQU   X'20'                 PERFORM WTP
RMJOBLOG EQU   X'10'                 PERFORM WTO TO JOBLOG (ROUTCDE=14)
RMBUF2   DS    AL3                 ADDRESS OF BUFFER OR WTO # 2
RMINSERT DS    0AL4                FIRST MESSAGE INSERT:     ** THESE
RMINSLEN DS    X                     LENGTH OF FIRST INSERT  ** FIELDS
RMNUMBER EQU   X'80'                 FLAG FOR NUMERIC INSERT ** WILL
RMINSADR DS    AL3                   ADDRESS OF FIRST INSERT ** REPEAT

$EOM
