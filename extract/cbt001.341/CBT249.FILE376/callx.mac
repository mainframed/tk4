         MACRO
&NAME    CALLX &SUB,               CALL A SUBROUTINE                   X
               &PRM,               DYNAMIC PARAMETER LIST              X
               &R1=,&INLINE=,      LOAD R1                             X
               &R0=,               LOAD R0                             X
               &NOSUB=,            TEST UNRESOLVED SUB                 X
               &SYNCH=NO,          LOCAL CALL VIA SYNCH SVC  ** MKH ** X
               &BNZ=,&BT=,         RETURN CODE ANALYSIS                X
               &TYPE=,             TYPE OF &SUB, OVERRIDES T'&SUB      X
               &RE=(15),&RL=(14),&RC=(15)    REG DECLARATIONS
         GBLC  &CALLMON            BAL 14,&CALLMON.  SEE-.SUBMON
         GBLB  &MODPREN,&MODPMOD   DETECT BGNSENT RENT=P  BMOD ,P
         GBLC  &CALLPLA      12/76 BGNSECT PUTS DEFAULT CALLXPL NAME
         GBLA  &CALLPLN      12/76 CALLX STORES MAX PARAM LIST WORDS
         LCLA  &NPRM,&NINLINE,&NBT      N' ATTRIBUTES
         LCLA  &X,&DISP                 SUBLIST SCAN
         LCLB  &USER0,&USER15           FOR DPL STM OPTIMIZATION
         LCLC  &TS                      T' &SUB
         LCLC  &NM                      SAME AT &NAME
         LCLC  &PCTL                    HI BYTE OF INLINE PARAMS
         LCLC  &RW                      WORK REG FOR DPL
         LCLC  &CALLPLT            TEMP FOR DEFAULT R1= FOR PARAM LIST
         LCLC  &NOSUBLB            TEMP TO GENERATE LABEL FOR  NOSUB=*
         ACTR  50+5*(N'&PRM+N'&INLINE+N'&BT)
.*   THIS MACRO IS PART OF A  BAL STRUCTURED PROGRAMMING PACKAGE
.*    WRITTEN BY  GARY S. NEMETH  OF THE CLEVELAND TRUST COMPANY
.*     DURING 1976.  ALL RIGHTS RESERVED.  ANY COMMERCIAL USE
.*      MUST BE APPROVED BY THE CLEVELAND TRUST COMPANY.
.* THIS MACRO MODIFIED AT RAINIER NATIONAL BANK
.*
.*       THE CODE GENERATED FOR EACH LINE OF PARAMS IN THE
.*       PROTOTYPE IS INDEPENDANT OF OTHER PARAMS, EXCEPT
.*
.*             IF R1 AND INLINE ARE NULL, BUT PRM IS NOT NULL,
.*               THEN  LA 1,CALLXPL IS GENERATED.
.*
         AIF   ('&RE'(1,1) NE '(' OR '&RL'(1,1) NE '('                 X
               OR '&RC'(1,1) NE '(').ERRREG
&NM      SETC  '&NAME'
&TS      SETC  T'&SUB
         AIF   ('&TYPE' EQ '' OR '&SUB' EQ '').NOFTYPE
&TS      SETC  '&TYPE'             OVERRIDE TO  TYPE=  MACRO PARAMETER
.NOFTYPE ANOP  ,
&NPRM    SETA  N'&PRM              NUMBER OF DYNAMIC PARAMETERS
&NINLINE SETA  N'&INLINE           NUMBER OF INLINE PARAMETERS
&NBT     SETA  N'&BT               NUMBER OF BRANCH TABLE ENTRIES
.*
.*             PROCESS  INLINE AND R1   -DEFAULT LOAD R1 IFF &NPRM
.*
         AIF   (&NINLINE EQ 0).NINL          NOT INLINE
         AIF   ('&R1' EQ '').INL2
         MNOTE 4,'INLINE- R1=&R1 IGNORED'
.INL2    ANOP
&X       SETA  &NINLINE
         AIF   (&NINLINE GE &NPRM).INL2N     OK, N'&PRM IS LESS
&X       SETA  &NPRM                         SET &X HIGHER N'&INLINE
.INL2N   CNOP  0,4
&NM      BAL   1,*+4+4*&X          INLINE
&NM      SETC  ''                  INDICATE &NAME GENERATED
&PCTL    SETC  '00'
&X       SETA  1
         AIF   ('&INLINE' EQ 'YES' AND &NPRM GE 1).INLFL
.INLL    AIF   (&X NE &NINLINE OR &NPRM GT &NINLINE).INL4
&PCTL    SETC  '80'                END OF PARAM LIST
.INL4    AIF   ('&INLINE(&X)' NE '').INL42
         DC    X'&PCTL',AL3(0)
         AGO   .INL44
.INL42   DC    X'&PCTL',AL3(&INLINE(&X))
.INL44   ANOP
&X       SETA  &X+1
         AIF   (&X LE &NINLINE).INLL
         AIF   (&NPRM LE &NINLINE).DPL  GO DO DYNAM PARAM LIST
.INLFL   AIF   (&X NE &NPRM).INLF4      TOP OF FILL LOOP
&PCTL    SETC  '80'                     END OF PARAM LIST
.INLF4   DC    X'&PCTL',AL3(0)
&X       SETA  &X+1
         AIF   (&X LE &NPRM).INLFL
         AGO   .DPL                     GO DO DYNAM PARAM LIST
.*                                 NO INLINE PARAM LIST
.NINL    AIF   (&NPRM EQ 0 OR '&R1' NE  '').NINL4 DONT DEFAULT R1
&CALLPLT SETC  'CALLXPL'              STANDALONE DEFAULT NAME
         AIF   ('&CALLPLA' EQ '').NCALXPL     IS THERE A GOOD BGNSECT ?
&CALLPLT SETC  '&CALLPLA'          BGNSECT NAME OF DPL
.NCALXPL AIF   (&NPRM LE &CALLPLN).NCALXPX    NOW  MAX(&CALLPLN,&NPRM)
&CALLPLN SETA  &NPRM                           &NPRM IS NEW LARGEST
.NCALXPX ANOP  ,                              NOW WORD COUNT IS SET
&NM      LA    1,&CALLPLT          DEFAULT R1 PARAMETER LIST
         AGO   .NINL6
.NINL4   AIF   ('&R1' EQ '').NINL8
&NM      INREG &R1,R=YES
.NINL6   ANOP
&NM      SETC  ''                  INDICATE &NAME GENERATED
.NINL8   ANOP
.*
.*             BUILD DYNAMIC PARAM LIST
.*
.DPL     AIF   (&NPRM EQ 0).SETR0       NO DYNAMIC PARAMS
&X       SETA  1                        SUBLIST INDEX
&DISP    SETA  0
&RW      SETC  '14'                     USE R14
&USER15  SETB  ('&SUB' NE '(15)' AND '&SUB' NE '(R15)')
&USER0   SETB  ('&R0' NE '(0)' AND '&R0' NE '(R0)')
.DPLL    AIF   ('&PRM(&X)' EQ '').DPLNULL
         AIF   (&USER15 AND '&PRM(&X+1)' NE '').DPL1415     TWO IN ROW
         AIF   ('&PRM(&X)'(1,1) EQ '(').DPLREG
&NM      INREG &PRM(&X),REG=(&RW),R=YES
         ST    &RW,&DISP.(,1)           DYNAMIC PARAM
         AGO   .DPLX
.DPLREG  ANOP
&NM      ST    &PRM(&X),&DISP.(,1)      DYNAMIC PARAM
         AGO   .DPLX
.DPL1415 AIF   (&USER0 AND '&PRM(&X+2)' NE '').DPL140  THREE IN A ROW
&NM      INREG ,,&PRM(&X+1),&PRM(&X),R=YES
         STM   14,15,&DISP.(1)          DYNAMIC PARAM
&X       SETA  &X+1
&DISP    SETA  &DISP+4
         AGO   .DPLX
.DPL140  ANOP
&NM      INREG ,&PRM(&X+2),&PRM(&X+1),&PRM(&X),R=YES
         STM   14,0,&DISP.(1)           DYNAMIC PARAM
&X       SETA  &X+2
&DISP    SETA  &DISP+8
.DPLX    ANOP
&NM      SETC  ''
.DPLNULL ANOP
&X       SETA  &X+1                     NEXT PARAM
&DISP    SETA  &DISP+4
         AIF   (&X LE &NPRM).DPLL       CONTINUE
         AIF   (&NINLINE GT &NPRM).SETR0     EOPL IND ALREADY SET
&DISP    SETA  &DISP-4                       BACK UP
         OI    &DISP.(1),X'80'               EOL INDICATOR
.*
.*             R0
.*
.SETR0   AIF   ('&R0' EQ '').SETRON
&NM      INREG ,&R0,R=YES
&NM      SETC  ''
.SETRON  ANOP
.*
.*             PROCESS SUBROUTINE CALL
.*
         AIF   ('&SUB' EQ '').RC        NO SUBROUTINE CALL
         AIF   ('&SUB'(1,1) EQ '(').SUBREG   REGISTER
         AIF   ('&TS' EQ 'V').SUBCON                   VCON
         AIF   ('&TS' EQ 'I').SUBLCL                   INSTRUCTION
         AGO   .SUBVLIT                           ELSE =V(SUB)
.SUBREG  AIF   ('&SUB' EQ '&RE' OR '&SUB' EQ '(R&RE(1))').SUBCALL
&NM      LR    &RE(1),&SUB(1)      VCON
         AGO   .SUBNM
.SUBCON  ANOP
&NM      L     &RE(1),&SUB         VCON
         AGO   .SUBNM
.SUBVLIT ANOP
&NM      L     &RE(1),=V(&SUB)     VCON
.SUBNM   ANOP
&NM      SETC  ''
.SUBCALL AIF   ('&NOSUB' EQ '').SUBCAL2           NO NOSUB, GO CALL
&NM      LTR   &RE(1),&RE(1)
&NM      SETC  ''
         AIF   ('&NOSUB' EQ '*').NOSUBA
         BZ    &NOSUB              NOSUB
         AGO   .SUBCAL2
.NOSUBA  ANOP  ,
&NOSUBLB SETC  'NOSB&SYSNDX'       ASSIGN
         BZ    &NOSUBLB            NOSUB  TO NO-OP
.SUBCAL2 AIF   ('&CALLMON' NE '').SUBMON
&NM      BALR  &RL(1),&RE(1)       CALL
         AGO   .SUBMON2
.SUBMON  ANOP
&NM      BAL   &RL(1),&CALLMON     CALL THRU &CALLMON GBLC
.SUBMON2 AIF   (NOT(&MODPREN OR &MODPMOD)).SUBLCL8    CALLX IS VALID
         MNOTE 8,'CALLX NOT VALID  IN PRIMITIVE BGNSECT/BMOD'
         MNOTE *,'CORRECTIVE ACTION-   S0C1 AFTER RETURN TO KILL LOOP'
         DC   2H'0'    CRASH S0C1
         AGO   .SUBLCL8
.SUBLCL  ANOP
         AIF   ('&SYNCH' EQ 'YES').MKH1                 ** MKH **
&NM      BAL   &RL(1),&SUB         CALL LOCAL
         AGO   .MKH2                                    ** MKH **
.MKH1    LA    &RL(1),&SUB         LOCAL-SUB EPA        ** MKH **
         SYNCH (&RL(1))                                 ** MKH **
.MKH2    ANOP                                           ** MKH **
         AIF   (NOT &MODPMOD).SUBLCL8                CALLX/M IS VALID
         MNOTE 8,'CALLX IS NOT VALID  IN A PRIMITIVE BMOD'
         MNOTE *,'CORRECTIVE ACTION-   S0C1 AFTER RETURN TO KILL LOOP'
         DC   2H'0'    CRASH S0C1
.SUBLCL8 ANOP
&NM      SETC  ''
.*
.*             PROCESS BNZ AND BT  RETURN CODE CHECKING
.*
.RC      AIF   (&NBT EQ 0 AND '&BNZ' EQ '').RCEND
         AIF   (&NBT NE 0).RCBT    BRANCH UNLESS BNZ ONLY
&NM      LTR   &RC(1),&RC(1)
&NM      SETC  ''
         BNZ   &BNZ                RC NOT ZERO
         AGO   .RCEND
.RCBT    AIF   ('&BNZ' EQ '').BTONLY    BRANCH BT ONLY
&X       SETA  4*&NBT
&NM      CH    &RC(1),=H'&X'
&NM      SETC  ''
         BH    &BNZ                RC TOO HIGH
         LCR   &RC(1),&RC(1)
         BP    &BNZ                RC WAS NEGATIVE
         AGO   .BT
.BTONLY  ANOP
&NM      LCR   &RC(1),&RC(1)
&NM      SETC  ''
.*
.*             GENERATE BRANCH TABLE
.*
.BT      ANOP
&X       SETA  &NBT
         B     *+4+4*&NBT&RC       GO THRU BT
.BTL     B     &BT(&X)             BT
&X       SETA  &X-1
         AIF   (&X GE 1).BTL
.RCEND   AIF   ('&NM' EQ '').RCEND2
&NM      DS    0H                  DEFINE LABEL
.RCEND2  AIF   ('&NOSUBLB' EQ '').RCEND4
&NOSUBLB DS    0H   DEFINE A LABEL
.RCEND4  MEXIT
.ERRREG  MNOTE 8,'THE PARAMS RE=,RL=,RC= MUST BE VALID REGISTERS'
         MEXIT
         MEND
