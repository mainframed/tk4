*          DATA SET CBT545     AT LEVEL 001 AS OF 06/02/76
EWTR2SVS CSECT
***      INSTALLATION: ELI LILLY AND COMPANY
***      AUTHOR:       E. SIERP
***      DATE:         MARCH 12, 1976
         SYMGR
WK1      EQU   R3
WK2      EQU   R4
WK3      EQU   R5
SSOBREG  EQU   R10
RETREG   EQU   R11
BASEREG  EQU   R12
         USING EWTR2SVS,BASEREG
         SAVE  (14,12)
         LR    BASEREG,R15
         ST    R13,SAVE+4
         LA    WK1,SAVE
         ST    WK1,8(R13)
         LR    R13,WK1
         OPEN  (SYSUT1,,SYSPRINT,(OUTPUT),SYSUT2,(OUTPUT))
         TM    SYSPRINT+48,X'10'     SYSPRINT OPEN?
         BZ    NOPEN1              NO
         TM    SYSUT1+48,X'10'      SYSUT1 OPEN
         BZ    NOPEN2
         L     WK1,SYSUT1+44       DEB ADDR
         L     WK1,32(WK1)         UCB ADDR FROM DEB
         TM    18(WK1),X'80'       IS INPUT ON TAPE
         BO    RJFCB               YES
         MVC   UT2UNIT(5),=C'3330,'       MUST BE 3330
         CLI   19(WK1),X'09'        IS IT MOD I
         BE    RJFCB               YES, UNIT NOW OK
         MVC   UT2UNIT+4(3),=C'-1,'     MAKE UNIT MOD II
RJFCB    EQU   *
         RDJFCB (SYSUT1)
         LA    R6,UT1JFCB
         USING INFMJFCB,R6
         MVC   UT2DSNM(44),JFCBDSNM     GET TAPE DSN
         LA    WK1,JFCBVOLS        ADDR 1ST VOL SER IN JFCB
         LA    WK2,UT2VOL          ADDR 1ST VOL SER IN DDCARD
         LA    WK3,5               MAX NUM OF VOLS IN JFCB
MOVVOL   EQU   *
         MVC   0(6,WK2),0(WK1)     GET 6 CHARS OF VOL SER
FINDEND  CLI   0(WK2),C' '         END OF VOL SER
         BE    GETNXTV             YES, GO GET NEXT VOL SER
         LA    WK2,1(WK2)          NEXT CHAR
         B     FINDEND
GETNXTV  EQU   *
         BCT   WK3,TSTNXTV         FIVE VOLUMES?
         B     MVPAREN             YES, TERMINATE WITH RIGHT PAREN
TSTNXTV  EQU   *
         CLI   6(WK1),C' '         IS THERE ANOTHER VOL SER
         BE    MVPAREN             NO
         MVI   0(WK2),C','         INSERT COMMA
         LA    WK2,1(WK2)          INCR PAST COMMA
         LA    WK1,6(WK1)          ADDR NEXT VOL SER
         B     MOVVOL
MVPAREN  EQU   *
         MVI   0(WK2),C')'
         DROP R6
         LA    WK1,UT2DSNM
DSNBLNK  CLI   0(WK1),C' '         END OF DSNAME?
         BE    DSNCOMMA            YES
         LA    WK1,1(WK1)          NEXT CHAR OF DSN
         B     DSNBLNK
DSNCOMMA MVI   0(WK1),C','         INSERT COMMA AFTER DSNAME
         BAL   RETREG,GETUT1      GO GET 1ST RECORD
         CLC   0(4,R1),EWTRHDR     IT SYOULD BE EWTR
         BNE   ERR01
MOVHDR   MVC   EWTRHDR+4(17),4(R1)  GET TIME,DATE,JFCB INFO FROM EWTR1
         BAL   RETREG,GETUT1       GO GET SSOB REC
         CLC   0(4,R1),SSOBDS      SHOULD BE SSOB
         BNE   ERR02
         MVC   OLDJOB(16),SSOBDS+SSOBJID  SAVE PREV JOBNAM AND ID
         MVC   SSOBDS+4(129),4(R1) SAVE SSOB
         LA    SSOBREG,SSOBDS
         USING SSOB,SSOBREG
ALLOC    EQU   *
         MVI   ALLOCSW,X'00'       INIT CHANGE SWITCH
         CLC   SSSOCLAS,TUSOUTCL     SAME SYSOUT CLASS
         BE    CKFORM              YES, DONT MOVE IT
         MVC   TUSOUTCL(1),SSSOCLAS     SYSOUT CLASS TO TEXT UNIT
         OI    ALLOCSW,TUCHGCLS       INDICATE CLASS CHANGE
CKFORM   EQU   *
         CLC   SSSOFORM,=C'STD.'         STANDARD FORM
         BNE   NEWFORM             NO
         CLC   TUPFORM,=F'0'
         BE    CKCOPY
         XC    TUPFORM,TUPFORM
         B     FMCHSW
NEWFORM  EQU   *
         CLC   SSSOFORM,TUFORMNO        SAME FORM
         BNE   MVFORM              NO, GO MOVE NEW FORM
         CLC   TUPFORM,=F'0'       LAST ALLOC USE FORM NUM?
         BNE   CKCOPY              YES, DONT NEED NEW ONE
MVFORM   MVC   TUFORMNO(4),SSSOFORM     PUT FORM NUM IN DYNALLOC TU
         LA    WK1,TUFORM          ADDR FORMNO TU
         ST    WK1,TUPFORM         ST IN TEXT POINTER LIST
FMCHSW   OI    ALLOCSW,TUCHGFRM       INDICATE FORM CHANGE
CKCOPY   CLC   SSSOCOPY+1(1),TUCPYS    SAME NUMBER COPIES
         BE    CKFCB               YES, DONT MOVE IT
         MVC   TUCPYS(1),SSSOCOPY+1     NUM OF COPIES IN DYNALLOC TU
         OI    ALLOCSW,TUCHGCPY       INDICATE COPIES CHANGE
CKFCB    EQU  *
         CLC  EHDRFCB(4),=C'****'    STD FCB?
         BNE  NEWFCB
         CLC  TUPFCB,=F'0'         USE FCB LAST ALLOC
         BE  CKDEST  NO
         XC  TUPFCB,TUPFCB         INDICATE DEFAULT FCB
         B  FCBCHSW
NEWFCB  EQU  *
         CLC   EHDRFCB(4),TUFCNAM      SAME FCB
         BNE   MVFCB               NO, GO MOVE NEW FCB
        CLC   TUPFCB,=F'0'         LAST ALLOC USE FCB
        BNE   CKDEST
MVFCB    MVC   TUFCNAM(4),EHDRFCB       FCB IN DYNALLOC TEXT UNIT
FCBCHSW  OI    ALLOCSW,TUCHGFCB    INDICATE FCB CHANGE
CKDEST   EQU   *
         CLC   SSSODEST,=CL8'LOCAL'     LOCAL DEST
         BNE   NEWDEST
         CLC   TUPROUTE(3),=F'0'
         BE    CKJOB
         XC    TUPROUTE(3),TUPROUTE+1
         B     DSTCHSW
NEWDEST  EQU   *
         CLC   SSSODEST(7),TUROUTNM    SAME DESTINATION
         BNE   MVDEST
         CLC   TUPROUTE,=F'0'      LAST ALLOC USE DEST
         BNE   CKJOB               YES, DONT DO ANOTHER
MVDEST   LA    WK1,SSSODEST        DESTINATION
         LA    WK2,8               MAX LNGTH+1 OF DEST NAME
CLIBLNK  CLI   0(WK1),C' '
         BE    DESTLNG
         LA    WK1,1(WK1)
         BCT   WK2,CLIBLNK
         B     BADEST
DESTLNG  LA    WK3,8
         SR    WK3,WK2             LENGTH OF DEST NAME
         STH   WK3,TUROUTLN        LENGTH IN TEXT UNIT
         MVC   TUROUTNM(7),SSSODEST  MV DEST TO TU
         MVC   TUPROUTE,=AL3(TUROUTE)
DSTCHSW  OI    ALLOCSW,TUCHGDST    INDICATE DEST CHANGE
CKJOB    CLC   SSSOJOBI,OLDJOBID      SAME JOB ID
         BE    CKANYCHG            YES, DONT FLAG IT
         OI    ALLOCSW,CHGJOBID     INDICATE NEW JOBID
CKANYCHG TM    ALLOCSW,X'FF'       DID ANYTHING CHANGE
         BZ    GET1                NO, SKIP NEW SYSOUT CARD
         MVC   DDSOUTCL,SSSOCLAS      GET SYSOUT CLASS
         AP    DDNUM,=P'1'           INCR DD CARD ID
         UNPK  DDCRDNUM,DDNUM        PUT IT IN DD CARD
         OI    DDCRDNUM+3,X'F0'
         MVC   DDFORMNO,DDCRDNUM   MOVE TO DDCARD FORM NUMBER
         MVI   HOPCOPYS,C' '
         MVC   HOPCOPYS+1(58),HOPCOPYS       BLANK /*OUTPUT CARD
         MVC   HOPNUM,DDFORMNO     TIE OUTPUT DC TO DD CD
         SR    WK1,WK1
         IC    WK1,SSSOCOPY+1      GET NUM OF COPIES
         CVD   WK1,DBLWK
         UNPK  HOPCOPYS(3),DBLWK+6(2)   NUM OF COPIES TO /*OUTPUT CARD
         OI    HOPCOPYS+2,X'F0'
         LA    WK1,HOPCOPYS+3      FIRST POS PAST COPIES
         CLC   SSSOFORM,=C'STD.'   STANDARD FORM
         BE    TSTFCB
         MVC   0(3,WK1),=C',F='    FORM KEYWORD TO /*OUTPUT
         MVC   3(4,WK1),SSSOFORM   MOVE FORM NUM
         LA    WK1,3(WK1)
FBLNK    CLI   0(WK1),C' '         END OF FORM NUM?
         BE    TSTFCB
         LA    WK1,1(WK1)
         B     FBLNK
TSTFCB   CLC   EHDRFCB,=C'****'    STD FCB?
         BE    TSTDEST             YES, DONT SPECIFY ONE
         MVC   0(3,WK1),=C',C='    FCB KEYWORD
         MVC   3(4,WK1),EHDRFCB    MOVE FCB
         LA    WK1,3(WK1)
CBLNK    CLI   0(WK1),C' '         END OF FCB ID
         BE    TSTDEST
         LA    WK1,1(WK1)
         B     CBLNK
TSTDEST  CLC   SSSODEST,=CL8'LOCAL'     LOCAL DESTINATION?
         BE    PINTRDR
         MVC   0(3,WK1),=C',D='    DEST KEYWORD
         MVC   3(8,WK1),SSSODEST   MOVE DEST TO /*OUTPUT
PINTRDR  EQU   *
INTSW    EQU   *+1
         NOP   PUTHOP
         MVC   PRTMSG(L'HEADING),HEADING
         BAL   RETREG,PUTPRT
         MVI   PRTCC,C'0'
         LA    WK1,JOBCARD
         BAL   RETREG,PUTUT2       PUT JOBCARD TO INTRDR
         MVI   PRTMSG,C' '
         MVC   PRTMSG+1(131),PRTMSG
         MVC   PRTMSG(80),JOBCARD
         BAL   RETREG,PUTPRT       GO PRINT JOBCARD
         MVI   PRTCC,C' '
         LA    WK1,ROUTCARD
         BAL   RETREG,PUTUT2       PUT ROUTCARD TO INTRDR
         MVC   PRTMSG(80),ROUTCARD
         BAL   RETREG,PUTPRT       GO PRINT ROUTCARD
         LA    WK1,EXEC
         BAL   RETREG,PUTUT2       PUT EXEC CARD
         MVC   PRTMSG(80),EXEC
         BAL   RETREG,PUTPRT       GO PRINT EXEC CARD
         LA    WK1,SYSPRT
         BAL   RETREG,PUTUT2       PUT SYSPRINT DD CARD
         MVC   PRTMSG(80),SYSPRT
         BAL   RETREG,PUTPRT       GO PRINT SYSPRINT DD CARD
         LA    WK1,UT2DD
         BAL   RETREG,PUTUT2       PUT FIRST SYSUT1 DD CARD
         MVC   PRTMSG(80),UT2DD
         BAL   RETREG,PUTPRT       GO PRINT FIRST SYSUT1 DD CARD
         LA    WK1,UT2CRD2
         BAL   RETREG,PUTUT2       PUT SECOND SYSUT1 DD CARD
         MVC   PRTMSG(80),UT2CRD2
         BAL   RETREG,PUTPRT       GO PRINT SECOND SYSUT1 DD CARD
         LA    WK1,UT2CRD3
         BAL   RETREG,PUTUT2       PUT THIRD  SYSUT1 DD CARD
         MVC   PRTMSG(80),UT2CRD3
         BAL   RETREG,PUTPRT       GO PRINT THIRD SYSUT1 DD CARD
         MVI   PRTMSG,C' '
         MVC   PRTMSG+1(131),PRTMSG     CLEAR  THE PRINT AREA
         MVI   PRTCC,C'0'          DOUBLE SPACE
         MVC   PRTMSG+15(DDHDGLNG),DDHDG
         BAL   RETREG,PUTPRT
         OI    INTSW,X'F0'         SET SW, ONLY DD CARDS AND /*OUTPUT
PUTHOP   EQU   *
         LA    WK1,HOPCARD
         BAL   RETREG,PUTUT2       PUT /*OUTPUT CARD
         MVI   PRTMSG,C' '
         MVC   PRTMSG+1(131),PRTMSG
         MVI   PRTCC,C'0'
         MVC   PRTMSG(80),HOPCARD
         BAL   RETREG,PUTPRT
         LA    WK1,DDCRD
         BAL   RETREG,PUTUT2       PUT SYSOUT DD CARD
         MVI   PRTCC,C' '
         MVC   PRTMSG(80),DDCRD
         BAL   RETREG,PUTPRT
         ZAP   RECCTR,=P'0'        INIT RECORD COUNTER
GET1     EQU   *
         BAL   RETREG,GETUT1       GET SYSOUT REC
         AP    RECCTR,=P'1'        COUNT THIS RECORD
         CLC   0(4,R1),EWTRHDR     NEW DS?
         BNE   GET1
         ST    R1,SAV1        SAVE RECORD POINTER
         SP    RECCTR,=P'1'        UNCOUNT HEADER RECORD
NEWDS    EQU   *
         MVC   DDDJNM,SSSOJOBN
         MVC   DDDJOBID,SSSOJOBI
         MVC   DDDCLS,SSSOCLAS
         MVC   DDDDEST,SSSODEST
         MVC   DDDFORM,SSSOFORM
         MVC   DDDRCNT,MASK        MASK TO EDIT RECCTR TO PRTLIN
         ED    DDDRCNT,RECCTR      PUT REC COUNT IN PRTLIN
         MVC   DDDJDSN,SSSODSN
         MVI   PRTMSG,C' '
         MVC   PRTMSG+1(131),PRTMSG      CLEAR THE PRINT AREA
         MVC   PRTMSG+15(DDDATALN),DDDATA
         BAL   RETREG,PUTPRT
         ZAP   RECCTR,=P'0'        RESET RECORD COUNTER
         L     R1,SAV1             RESTORE POINTER TO INPUT REC
EOJSW    EQU   *+1
         NOP   CLOSEM
         B     MOVHDR
ENDIP    EQU   *
         OI    EOJSW,X'F0'
         B     NEWDS
GETUT1   EQU   *
         GET   SYSUT1
         BR    RETREG
PUTUT2   EQU   *
         PUT   SYSUT2,(WK1)
         BR    RETREG
PUTPRT   EQU   *
         PUT   SYSPRINT,PRTLIN
         BR    RETREG
ERRET    MVI   RETCODE+3,X'10'     SET ERROR RETURN CODE
CLOSEM   TM    SYSUT1+48,X'10'     SYSUT1 OPEN?
         BZ    CLSUT2
         CLOSE (SYSUT1)
CLSUT2   EQU   *
         TM    SYSUT2+48,X'10'     SYSUT2 OPEN
         BZ    CLSPRT              NO
         LA    WK1,EOF
         BAL   RETREG,PUTUT2
         CLOSE (SYSUT2)
CLSPRT   EQU   *
         TM    SYSPRINT+48,X'10'   SYSPRINT OPEN
         BZ    RET
         CLOSE (SYSPRINT)
RET      L     R15,RETCODE
         L     R13,SAVE+4
         RETURN (14,12),RC=(15)
NOPEN1   EQU   *
         WTO   'UNABLE TO OPEN SYSPRINT',ROUTCDE=11
         B     ERRET
NOPEN2   EQU   *
         MVC   PRTMSG(30),OPNMSG01
         BAL   RETREG,PUTPRT
         B     ERRET
ERR01    EQU   *
         LR    WK1,R1              SAVE REC PTR
         MVC   PRTMSG(46),ERRMSG01
ERR01A   BAL   RETREG,PUTPRT
         MVI   PRTCC,C'0'          DOUBLE SPACE
         MVC   PRTMSG(132),0(WK1)  1ST 132 CHAR OF BAD REC
         BAL   RETREG,PUTPRT
         B     ERRET
ERR02    EQU   *
         LR    WK1,R1              SAVE BAD REC POINTER
         MVI   PRTCC,C'1'
         MVI   PRTMSG,C' '
         MVC   PRTMSG+1(131),PRTMSG
         MVC   PRTMSG(46),ERRMSG02
         B     ERR01A
BADEST   DC    H'0'
SAVE     DC    18F'0'
SAVR1    DC    F'0'
RETCODE  DC    F'0'
SYSUT1   DCB   DDNAME=SYSUT1,DSORG=PS,MACRF=(GL),EODAD=ENDIP,          X
               EXLST=EXITLIST
SYSUT2   DCB   DDNAME=SYSUT2,DSORG=PS,MACRF=(PM)
SYSPRINT DCB   DDNAME=SYSPRINT,DSORG=PS,MACRF=(PM),RECFM=FBA,          X
               LRECL=133,BLKSIZE=3990
EXITLIST DC    X'87'
         DC    AL3(UT1JFCB)
UT1JFCB  DC    200X'00'
DBLWK    DC    D'0'
SAV1     DC    F'0'
RECCTR   DC    PL4'0'
MASK     DC    X'4020202020202020'
PRTLIN   DS    0C
PRTCC    DC    C'1'
PRTMSG   DC    132C' '
HEADING  DC    C'E W T R 2 S V S    O U T P U T'
DDHDG    DS    0C
         DC    C'JOBNAME'
         DC    6C' '
         DC    C'JES JOBID'
         DC    4C' '
         DC    C'CLASS'
         DC    5C' '
         DC    C'DEST'
         DC    9C' '
         DC    C'FORM'
         DC    5C' '
         DC    C'REC CNT'
         DC    5C' '
         DC    C'JES DSNAME'
DDHDGLNG EQU   *-DDHDG
DDDATA   EQU   *
DDDJNM   DC    CL8' '
         DC    5C' '
DDDJOBID DC    CL8' '
         DC    7C' '
DDDCLS   DC    C' '
         DC    7C' '
DDDDEST  DC    CL8' '
         DC    5C' '
DDDFORM  DC    CL4' '
         DC    CL4' '
DDDRCNT  DC    CL8' '
         DC    5C' '
DDDJDSN  DC    CL44' '
DDDATALN EQU   *-DDDATA
OPNMSG01 DC    C'UNSUCCESSFUL OPEN FOR SYSUT1  '
ERRMSG01 DC    C'1ST SYSUT1 REC NOT EWTR - 1ST RECORD FOLLOWS'
EWTRHDR  DC    C'EWTR'
EHDRTIME DC    4C' '
EHDRDATE DC    4C' '
EHDRFCB  DC    4C' '
EHDRBLK  DC    2X'00'
EHDRLREC DC    2X'00'
EHDRRECF DC    X'00'
ERRMSG02 DC    C'EWTR NOT FOLLOWED BY SSOB -BAD RECORD FOLLOWS'
SSOBDS   DC    C'SSOB'
         DC    129X'00'
SEPFLG   DC    C'S'
         DS    0F
S99RBPTR DC    X'80'
         DC    AL3(S99RB)
***********************************************************************
***                                                                 ***
***              DYNAMIC ALLOCATION REQUEST BLOCK                   ***
***              SEE JOB MANAGEMENT SRL PAGE 31                     ***
***                                                                 ***
***********************************************************************
S99RB    EQU   *
S99RBLN  DC    AL1(20)             S99RB LENGTH
S99VERB  DC    X'01'               VERB CODE - ALLOC DSNAME
S99FLAG1 DC    B'0000000000000000' FLAGS 1, SYSOUT DATA SET
S99ERROR DC    AL2(0)              ERRORCODE
S99INFO  DC    AL2(0)              INFORMATION CODE
S99TSTPP DC    A(S99TUPL)          POINTER TO TEXT POINTERS
         DC    A(0)                RESERVED
S99FLAG2 DC    A(0)                FLAGS 2
***********************************************************************
***                                                                 ***
***            DYNAMIC ALLOCATION TEXT UNIT POINTERS                ***
***                                                                 ***
***********************************************************************
S99TUPL  DS    0F          TEXT UNIT POINTERS
TUPDDN   DC    A(TUDDN)
TUPSOUT  DC    A(TUSOUT)
TUPFORM  DC    A(0)
TUPNLLOC DC    A(TUNALLOC)
TUPCOPYS DC    A(TUCOPYS)
TUPFCB   DC    A(0)
TUPBLKSZ DC    A(TUBLKSIZ)
TUPLRECL DC    A(TULRECL)
TUPRECFM DC    A(TURECFM)
         DC    X'80'
TUPROUTE DC    AL3(0)
***********************************************************************
***                                                                 ***
***                 DYNAMIC ALLOCATION TEXT UNITS                   ***
***                                                                 ***
***********************************************************************
TUDDN    EQU   *                   DDNAME TEXT UNIT
         DC    X'0001'             KEY
         DC    AL2(1)              NUMBER OF PARMS
         DC    AL2(6)              LENGTH
         DC    C'SYSUT2'           DDNAME
***********************************************************************
TUSOUT   EQU   *                   SYSOUT TEXT UNIT
         DC    X'0018'
         DC    AL2(1)
         DC    AL2(1)
TUSOUTCL DC    X'00'               SYSOUT CLASS
***********************************************************************
TUNALLOC EQU   *                   UNALLOCATE AT CLOSE TEXT UNIT
         DC    X'001C'
         DC    AL2(0)
***********************************************************************
TUFORM   EQU   *                   SYSOUT FORM TEXT UNIT
         DC    X'001A'
         DC    AL2(1)
         DC    AL2(4)
TUFORMNO DC    4C' '               SYSOUT FORM NUMBER
***********************************************************************
TUCOPYS  EQU   *                   NUMB OF COPIES TEXT UNIT
         DC    X'001D'
         DC    AL2(1)
         DC    AL2(1)
TUCPYS   DC    X'00'               NUMBER OF COPIES
***********************************************************************
TUROUTE  EQU   *                   ROUTING TEXT UNIT
         DC    X'0058'
         DC    AL2(1)
TUROUTLN DC    AL2(0)              LNGTH OF ROUTING NAME
TUROUTNM DC    7C' '               ROUTING NAME
***********************************************************************
TUFCB    EQU   *                   FCB TEXT UNIT
         DC    X'0025'
         DC    AL2(1)
         DC    AL2(4)
TUFCNAM  DC    4C' '               FCB IDENTIFIER
***********************************************************************
ALLOCSW  DC    X'00'
TUCHGCLS EQU   X'01'
TUCHGFRM EQU   X'02'
TUCHGCPY EQU   X'04'
TUCHGFCB EQU   X'08'
TUCHGDST EQU   X'10'
CHGJOBID EQU   X'20'
CHGRECL  EQU   X'40'
CHGBLKSZ EQU   X'40'
CHGRECFM EQU   X'80'
OLDJOB   DS    0CL16
OLDJOBNM DC    8X'00'
OLDJOBID DC    8X'00'
***********************************************************************
TUBLKSIZ DC    X'0030'        DCB BLKSIZE TEXT UNIT
         DC    AL2(1)
         DC    AL2(2)
TUBLKSZP DC    AL2(0)
**********************************************************************
TULRECL  DC    X'0042'        DCB LRECL TEXT UNIT
         DC    AL2(1)
         DC    AL2(2)
TULRECLP DC    AL2(0)
**********************************************************************
TURECFM  DC    X'0049'        DCB RECFM TEXT UNIT
         DC    AL2(1)
         DC    AL2(1)
TURECFMP DC    X'00'
**********************************************************************
HOPCARD  DC    C'/*OUTPUT '
HOPNUM   DC    C'0000'
         DC    C' COPIES='
HOPCOPYS DS    59C
DDCRD    DC    C'//DD'
DDCRDNUM DC    C'0000'
         DC    C' DD SYSOUT=('
DDSOUTCL DC    C'A'
         DC    C',,'
DDFORMNO DC    C'0000'
         DC    C')'
         DC    52C' '
DDNUM    DC    X'00000C'
JOBCARD  DC    CL80'//JHEWTR JOB ,''TECH.SERV.OSSG.SIERP'',CLASS=C'
ROUTCARD DC    CL80'/*ROUTE XEQ TSO'
EXEC     DC    CL80'//SVSWTR  EXEC PGM=EWTR3SVS'
SYSPRT   DC    CL80'//SYSPRINT DD SYSOUT=A'
UT2DD    DC    C'//SYSUT1 DD DISP=(OLD,KEEP),UNIT='
UT2UNIT  DC    CL47'TAPE,'
UT2CRD2  DC    C'//          DSN='
UT2DSNM  DC    CL64' '
UT2CRD3  DC    C'//     VOL=SER=('
UT2VOL   DC    CL64' '
EOF      DC    CL80'/*EOF'
         EJECT
         IEFJSSOB (SO)
SSOBJID  EQU   SSSOJOBN-SSOB
         EJECT
IHAJFCB  DSECT
         IEFJFCBN
         END
