./       CHANGE NAME=HASPCOMM
         JE00012A 1     /* $LQ COMMAND - LIST WORK IN OUTPUT QUEUES */
         JE00012A 2     /* $LQ COMMAND - LIST WORK IN OUTPUT QUEUES */
./       ADD   NAME=JE00012A
DUMMY MEMBER TO BE REPLACED BY REPL
./       REPL  NAME=JE00012A
         MACRO
&L       JE00012A &V
.**********************************************************************
.*                                                                    *
.*       KHPRDC HASPCOMM MODIFICATION TO ADD $LQ COMMAND (LIST WORK   *
.*       IN OUTPUT QUEUES).                                           *
.*                                                                    *
.*       KAISER/PERMANENTE MEDICAL CARE PROGRAM                       *
.*       NORTHERN CALIFORNIA REGIONAL DATA CENTER                     *
.*       945 CAMELIA STREET, BERKELEY, CALIFORNIA 94710               *
.*       D. THEWLIS, JUNE 1, 1980.   (415) 428-6350                   *
.*                                                                    *
.*       MODIFICATION LEVEL:  FOR SU 825, JES2 RELEASE 4.1,           *
.*                            MSE/IPO 4.0 (3.8B) AT PTF LEVEL 8001,   *
.*                            INCL.   AZ27300 (CKPT DUPLEXING).       *
.*                                                                    *
.*       THIS MODIFICATION IS ORIGINALLY FROM AAL AND WAS TAILORED    *
.*       FROM THE SHARE JES MODS TAPE VERSION 5 MODIFICATION DM14.    *
.*       THANK YOU AAL.                                               *
.*                                                                    *
.**********************************************************************
         AIF   ('&V' EQ '1').FIRST
         AIF   ('&V' EQ '2').SECOND
         MNOTE 'INVALID PARAMETER - &V'
         MEXIT
.FIRST   ANOP
***********************************************************************
*   KHPRDC MODIFICATON TO HASPCOMM TO ADD $LQ COMMAND (LIST WORK IN   *
*   OUTPUT QUEUES).  PART 1 INSERTED AFTER LINE K1702000 ($LJ).       *
***********************************************************************
         $COMTAB LQ,HASPCLQ                                         KHP
*<-------RESUME JES2 HASPRDR VANILLA CODE AT THIS POINT --------->* KHP
***********************************************************************
         MEXIT
.SECOND  ANOP
***********************************************************************
*   KHPRDC MODIFICATON TO HASPCOMM TO ADD $LQ COMMAND (LIST WORK IN   *
*   OUTPUT QUEUES).  PART 2 INSERTED AFTER LINE K4703000.             *
***********************************************************************
         TITLE 'LIST WORK IN OUTPUT QUE BY JNBR/JNAME'              KHP
HASPCLQ  $COMGRUP LQ                                                KHP
         SPACE 2                                                    KHP
******************************************************************  KHP
*        NEW COMMAND TO LIST OUTPUT WORK BY JOBNBR/JOBNAME       *  KHP
*        WITHIN QUE AND SHOW NUMBER OF LINES TO PRINT            *  KHP
*                                                                *  KHP
*        COMMAND $LQX                                            *  KHP
*                                                                *  KHP
*        EXAMPLES--                                              *  KHP
*              $LQ       - WILL LIST ALL OUTPUT QUES             *  KHP
*                                                                *  KHP
*              $LQX      - X = A-Z OR 1-9 - THIS WILL SHOW THE   *  KHP
*                        WORK IN SPECIFIED QUE X                 *  KHP
*                                                                *  KHP
*        SAMPLE OUTPUT -                                         *  KHP
*              QUE X 0001/JOBNAME1/0000010 0002/JOBNAME2/0001000 *  KHP
*                    JNBR/JOBNAME/PRTLINES JNBR/JOBNAME/PRTLINES *  KHP
******************************************************************  KHP
         SPACE 2                                                    KHP
CLQ      DS    0H                                                   KHP
         MVI   CLQFLAG,X'00'       CLEAR FLAG                       KHP
         MVC   CLQCLAS,COMMAND+3   SAVE CLASS ID                    KHP
         LA    R2,CLQTABLE         A(QUE CLASS TABLE)               KHP
         LR    R3,R2               SAVE IT                          KHP
         CLI   CLQCLAS,C' '        WAS A QUE CLASS SPECIFIED        KHP
         BNE   CLQFIND             YES - BRANCH                     KHP
         OI    CLQFLAG,X'80'       INDICATE ALL QUES WANTED         KHP
         B     CLQRUN                                               KHP
CLQFIND  EQU   *                                                    KHP
         CLI   0(R2),X'00'         END OF TABLE                     KHP
         BNE   CLQFND2             NO - BRANCH                      KHP
         $CFINVC                   INVALID COMMAND                  KHP
CLQFND2  DS    0H                                                   KHP
         CLC   CLQCLAS,0(R2)       IS THIS THE ONE                  KHP
         BE    CLQRUN              YES - BRANCH                     KHP
         LA    R2,1(R2)            BUMP TO NEXT ENTRY               KHP
         B     CLQFIND                                              KHP
CLQRUN   EQU   *                                                    KHP
         LR    R4,R2                                                KHP
         SR    R4,R3               R4 = OFFSET INTO QUE TABLE       KHP
         SLL   R4,1                R4X2 = INDEX INTO JOTCLSQ        KHP
         L     R5,$JOTABLE         A(JOT)                           KHP
         USING JOEDSECT,R6                                          KHP
         USING JOTDSECT,R5                                          KHP
         LA    R4,JOTCLSQ(R4)      A(CLASS QUE HEAD)                KHP
         SR    R6,R6                                                KHP
         LH    R6,0(R4)            OFFSET TO CLASS WORK JOE         KHP
         LTR   R6,R6               ANY THING ON QUE                 KHP
         BZ    CLQNOWRK            NO -BRANCH                       KHP
         SLL   R6,2                MULTIPLY BY 4                    KHP
         LA    R6,0(R6,R5)         A(WORK JOE) = A(JOT) + OFFSET    KHP
         MVC   CLQCLAS,0(R2)       MOVE CLASS ID TO MSG             KHP
         MVC   CLQMSGWK+1(43),CLQMSGWK  CLEAR MSG AREA              KHP
         LA    R7,CLQMSGWK+1                                        KHP
         LA    R9,2                LOOP COUNTER                     KHP
CLQRNLP1 EQU   *                                                    KHP
         LH    R1,JOEJQE           R1 = OFFSET TO JQE               KHP
         SLL   R1,2                R1*4 = OFFSET TO JQE             KHP
         A     R1,$JOBQPTR         R1 = A(JQE)                      KHP
         USING JQEDSECT,R1                                          KHP
         LA    R0,0                                                 KHP
         ICM   R0,3,JQEJOBNO       GET JOB NUMBER                   KHP
         CVD   R0,CLQDWK                                            KHP
         UNPK  0(4,R7),CLQDWK      CONVERT TO DECIMAL               KHP
         OI    3(R7),X'F0'         INSURE PRINTABLE                 KHP
         MVI   4(R7),C'/'          SET SEPARATOR                    KHP
         MVC   5(8,R7),JQEJNAME    MOVE JOB NAME TO MSG AREA        KHP
         MVI   13(R7),C'/'         SET SEPARATOR                    KHP
         ICM   R0,15,JOERECCT      RECORD COUNT                     KHP
         CVD   R0,CLQDWK                                            KHP
         UNPK  14(7,R7),CLQDWK     CONVERT TO DECIMAL               KHP
         OI    20(R7),X'F0'        INSURE PRINTABLE                 KHP
         DROP  R1                                                   KHP
         LA    R7,22(,R7)          BUMP R7 TO NEXT MSG AREA         KHP
         BCT   R9,CLQRNLP2         BRANCH IF LINE NOT FULL          KHP
         LR    R9,WA               SAVE R2                          KHP
         $CWTO MSG=CLQMSG,L=49     PASS MSG TO OPERATOR             KHP
         LR    WA,R9               RESTORE R2                       KHP
         LA    R9,2                RESET LOOP COUNT                 KHP
         OI    CLQFLAG,X'40'       INDICATE SOMETHING FOUND         KHP
         LA    R7,CLQMSGWK+1                                        KHP
         MVC   CLQMSGWK+1(43),CLQMSGWK  CLEAR WORK AREA             KHP
CLQRNLP2 EQU   *                                                    KHP
         SR    R1,R1                                                KHP
         LH    R1,JOENEXT          OFFSET TO NEXT WORK JOE          KHP
         SLL   R1,2                R1 * 4 = OFFSET                  KHP
         LR    R6,R1                                                KHP
         LA    R6,0(R6,R5)         A(NEXT WORK JOE)                 KHP
         LTR   R1,R1               ANY MORE ON QUE                  KHP
         BNZ   CLQRNLP1            YES - BRANCH                     KHP
         LA    R1,CLQMSGWK+1                                        KHP
         SR    R7,R1               LENGTH OF WORK AREA USED         KHP
         LTR   R7,R7               ANYTHING TO PUT TO CONSOLE       KHP
         BZ    CLQNOWRK            NO - BRANCH                      KHP
         LR    R9,WA               SAVE R2                          KHP
         MVC   COMMAND(49),CLQMSG  MOVE MSG TO COMMAND AREA         KHP
         LA    R0,6(R7)            LENGTH OF COMMAND MSG            KHP
         $CWTO L=(R0)              PUT LINE TO CONSOLE              KHP
         LR    WA,R9               RESTORE R2                       KHP
         OI    CLQFLAG,X'40'                                        KHP
CLQNOWRK EQU   *                                                    KHP
         TM    CLQFLAG,X'80'       ARE ALL QUES WANTED              KHP
         BZ    CLQEXIT             NO - BRANCH                      KHP
         LA    R2,1(R2)            BUMP R2 TO NEXT TABLE ENTRY      KHP
         CLI   0(R2),X'00'         END OF TABLE                     KHP
         BNE   CLQRUN               NO - BRANCH                     KHP
CLQEXIT  EQU   *                                                    KHP
         TM    CLQFLAG,X'40'       WAS ANYTHING PUT TO CONSOLE      KHP
         BO    CLQEXIT2            YES - BRANCH                     KHP
         MVC   CLQMSGWK+1(5),CLQEMPTY                               KHP
         $CRET MSG=CLQMSG,L=11                                      KHP
CLQEXIT2 DS    0H                                                   KHP
         $CRET                     NORMAL RETURN                    KHP
CLQDWK   DC    D'0'                                                 KHP
CLQMSG   DC    C'QUE '                                              KHP
CLQCLAS  DC    C' '                                                 KHP
CLQMSGWK DC    44C' '                                               KHP
CLQEMPTY DC    C'EMPTY'                                             KHP
CLQFLAG  DC    X'00'               X'80' - ALL QUES WANTED          KHP
*                                  X'40' - ALL QUES NOT EMPTY       KHP
CLQTABLE DC    C'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'              KHP
         DC    X'00'               END OF TABLE                     KHP
         LTORG   ,                                                  KHP
         DROP  R5,R6                                                KHP
*<-------RESUME JES2 HASPPRPU VANILLA CODE AT THIS POINT -------->* KHP
***********************************************************************
         MEND
