IEFACTRT TITLE 'SMF JOB/STEP TERMINATION EXIT ROUTINE     KHPRDC'
***********************************************************************
*                                                                     *
*             MODULE NAME = IEFACTRT                                  *
*                                                                     *
*             DESCRIPTIVE NAME =  SMF JOB/STEP TERMINATION EXIT TO    *
*                PUT MESSAGES ON JOB LOG WITH STEP/JOB TERMINATION    *
*                STATUS AND LOG EXCP COUNTS TO THE SMBS.           KHP*
*                                                                     *
*             COPYRIGHT = NONE                                        *
*                                                                     *
*             STATUS = V2, M4 - MODIFIED FROM R 1.0 OF MVS-IPO.    KHP*
*                                                                     *
*             FUNCTION =                                              *
*                PUT MESSAGES VIA WTO ON JOB LOG; IEFYS ON SMBS.   KHP*
*                PASS RC/CC BACK TO JES2 AT STEP TERMINATION;     V2M3*
*                PASS CPU TIME BACK TO JES2 AT JOB TERMINATION.   V2M4*
*                                                                     *
*                OPERATION =                                          *
*                   FOR JOB STEP TERMINATION PUT STATISTICS OF STEP,  *
*                   AND PUT EXCP COUNTS TO JOB SMBS VIA IEFYS.     KHP*
*                   ALSO MARK MVS STEP CONTROL TABLE IF RC GOOD   V2M3*
*                   (IN RESERVED BYTE SCTNSMSG+1).                V2M3*
*                   FOR JOB TERMINATION PUT OUT JOB ENDED MESSAGE.    *
*                   AND PUT CPU USED IN JCTUCOM FOR JES2.         V2M4*
*                                                                     *
*              NOTES =                                                *
*                                                                     *
*                 DEPENDENCIES = CHARACTER SET IS EBCDIC.  REASSEMBLE *
*                    IF A DIFFERENT CHARACTER SET IS NEEDED.          *
*                    REQUIRES WTO EXIT ROUTINE, IEECVXIT, TO          *
*                    SUPPRESS ROUTE CODE 14 FROM CONSOLE.             *
*                                                                     *
*                 RESTRICTIONS = NONE                                 *
*                                                                     *
*                 REGISTER CONVENTIONS = STANDARD CONVENTIONS.        *
*                    REGISTERS 0 TO 1  = WORK REGISTERS               *
*                    REGISTERS 2 TO 5  = VARIOUS                      *
*                    REGISTER  6       = OUTPUT LINE REGISTER         *
*                    REGISTER  7       = COMMON PARAMETER AREA        *
*                    REGISTERS 8 TO 10 = UNUSED                    KHP*
*                    REGISTER  11      = ADDRESSABILITY TO IEFACTRT   *
*                                        CSECT                     KHP*
*                    REGISTER  12      = IEFYS WORK AREA PASSED TO    *
*                                        IEFACTRT; THENCE TO IEFYS KHP*
*                                        (NOTE: THIS IS ACTUALLY   KHP*
*                                         THE LCT FROM IEFSD162)   KHP*
*                    REGISTER  13      = ADDRESSIBILITY TO DATA DSECT *
*                    REGISTERS 14,15   = WORK REGISTERS               *
*                                                                     *
*                PATCH LABEL = PATCH (UNUSED AND INTIALIZED TO        *
*                   BINARY ZEROES)                                    *
*                                                                     *
*             MODULE TYPE = PROCEDURE                                 *
*                                                                     *
*                PROCESSOR = ASM                                      *
*                                                                     *
*                MODULE SIZE = 2416 BYTES                          KHP*
*                                                                     *
*                ATTRIBUTES = KEY 0, REENTRANT,                       *
*                   SUPERVISOR STATE, ENABLED, NO LOCKS HELD          *
*                                                                     *
*             ENTRY POINTS = IEFACTRT (ONLY ENTRY POINT)              *
*                                                                     *
*                LINKAGE =                                            *
*                                                                     *
*                                                                     *
*             INPUT = REG1 POINTS TO LIST OF FULLWORD ADDRESSES       *
*                     AS FOLLOWS.                                     *
*                 1.  PTR TO COMMON EXIT PARAMETER AREA               *
*                 2.  PTR TO STEPNAME FIELD                           *
*                 3.  PTR TO PROGRAMMER NAME FIELD                    *
*                 4.  PTR TO JOB CPU TIME FIELD                       *
*                 5.  PTR TO JOB ACCOUNTING FIELDS                    *
*                 6.  PTR TO STEP CPU TIME FIELD                      *
*                 7.  PTR TO STEP ACCOUNTING FIELDS                   *
*                 8.  PTR TO CANCEL FLAG & STEP NUMBER                *
*                 9.  PTR TO CONDITION CODE FIELD                     *
*                10.  PTR TO SMF RECORD TO BE WRITTEN                 *
*                                                                     *
*             OUTPUT = NONE                                           *
*                                                                     *
*             EXIT - NORMAL = AT PROGRAM END VIA BRANCH REGISTER 14   *
*                                                                     *
*                OUTPUT = NONE                                        *
*                                                                     *
*                RETURN CODE = ZERO                                   *
*                                                                     *
*             EXIT - ERROR = NONE                                     *
*                                                                     *
*                OUTPUT = NONE                                        *
*                                                                     *
*                RETURN CODE = ZERO                                   *
*                                                                     *
*             EXTERNAL REFERENCES =                                   *
*                                                                     *
*                ROUTINES = IEFYS                                  KHP*
*                                                                     *
*                DATA AREAS = NONE                                    *
*                                                                     *
*                CONTROL BLOCKS = LCT (R12 AT ENTRY) SCT (FROM LCT)KHP*
*                                                                     *
*             TABLES = NONE                                           *
*                                                                     *
*             MACROS = SAVE, WTO, RETURN, GETMAIN, FREEMAIN, ESTAE,   *
*                      SETRP, IFASMFR, IEFJMR, IHASDWA                *
*                      IEFALLCT, IEFASCTD                          KHP*
*                                                                     *
*             CHANGE ACTIVITY = NONE                                  *
*                                                                     *
*             MESSAGES =                                              *
*                STEP TERMINATION LINE AND JOB TERMINATION LINE.      *
*                HEADER LINES FOR ABOVE.                           KHP*
*                EXCP COUNT LINES AND HEADER/TRAILER LINES.        KHP*
*                                                                     *
*             ABEND CODES = NONE                                      *
*                                                                     *
***********************************************************************
         EJECT
*                                                                   KHP
* EXTERNAL REFERENCE TO IEFYS FOR DEVICE EXCP COUNT MESSAGES        KHP
*                                                                   KHP
         WXTRN IEFYS               EPADDR OF SMB WRITE ROUTINE      KHP
IEFACTRT CSECT ,
*
* CONSTANT ADDRESS EQAUTES
*
PSAAOLD  EQU    X'224',4    ADDRESS IN PSA OF CURRENT ASCB
ASCBJBNI EQU    X'AC',4     ADDRESS IN JOBNAME IN ASCB
CHSTEP   EQU    X'38',8     ADDRESS IN STEP NAME IN CSCB
CHPROCSN EQU    X'18',8     ADDRESS IN PROC STEP NAME IN CSCB
*
* CONSTANT EQUATES
*
K0       EQU   00                  NON-RELOCATABLE CONSTANT 00
K1       EQU   01                  NON-RELOCATABLE CONSTANT 01
K2       EQU   02                  NON-RELOCATABLE CONSTANT 02
K3       EQU   03                  NON-RELOCATABLE CONSTANT 03
K4       EQU   04                  NON-RELOCATABLE CONSTANT 04
K5       EQU   05                  NON-RELOCATABLE CONSTANT 05
K6       EQU   06                  NON-RELOCATABLE CONSTANT 06
K7       EQU   07                  NON-RELOCATABLE CONSTANT 07
K8       EQU   08                  NON-RELOCATABLE CONSTANT 08
K9       EQU   09                  NON-RELOCATABLE CONSTANT 09
KA       EQU   10                  NON-RELOCATABLE CONSTANT 10
KB       EQU   11                  NON-RELOCATABLE CONSTANT 11
KC       EQU   12                  NON-RELOCATABLE CONSTANT 12
KD       EQU   13                  NON-RELOCATABLE CONSTANT 13
KE       EQU   14                  NON-RELOCATABLE CONSTANT 14
KF       EQU   15                  NON-RELOCATABLE CONSTANT 15
*
* CONSTANT EQUATES
*
SUBPOOL  EQU   252                 USE SUBPOOL 252 FOR GETMAIN
CK       EQU   C'K'                CONSTANT CHAR 'K'
CASTR    EQU   C'*'                CONSTANT CHAR '*'
C0       EQU   C'0'                CONSTANT CHAR '0'
         IEZBITS
         EJECT                                                      KHP
*
* REGISTER EQUATES
*
R00      EQU   00                  REG 00 - WORK REG
R01      EQU   01                  REG 01 - WORK/PARMETER REG
R02      EQU   02                  REG 02 - WORK REG
R03      EQU   03                  REG 03 - WORK REG
R04      EQU   04                  REG 04 - UNUSED
R05      EQU   05                  REG 05 - UNUSED
R06      EQU   06                  REG 06 - BASE FOR OUTPUT LINE
R07      EQU   07                  REG 07 - BASE FOR COMMON PARM AREA
R08      EQU   08                  REG 08 - BASE FOR BLDL LIST
R09      EQU   09                  REG 09 - BASE FOR SMF RECORD
R10      EQU   10                  REG 10 - UNUSED
R11      EQU   11                  REG 11 - CSECT BASE REG          KHP
R12      EQU   12                  REG 12 - SYSTEM IEFYS WORK AREA  KHP
R13      EQU   13                  REG 13 - DATA DSECT BASE REG
R14      EQU   14                  REG 14 - LINKAGE REGISTER
R15      EQU   15                  REG 15 - WORK REG
         EJECT
         SAVE  (14,12),,IEFACTRT_V02.0_KHPRDC_&SYSDATE_&SYSTIME     KHP
         USING IEFACTRT,R11        SET UP CSECT ADDRESSABILITY      KHP
         LR    R11,R15             LOAD BASE REGISTER               KHP
         USING DATA,R13            SET UP DATA DSECT ADDR.
         USING JMR,R07             SET UP ADDRESSABILITY TO COMMON
         L     R07,PARMEPRM-PARMS(K0,R01) COMMON AREA ADDRESS
         TM    JMRINDC,JMRFIND     IS IT TIME SHARING USER?
         BO    QUICKOUT            YES, EXIT BEFORE GETMAIN
         L     R00,DATALEN         LOAD GETMAIN PARMS
         GETMAIN R,LV=(0)          GET STORAGE FOR DATA DSECT
         ST    R13,SAVEBK-SAVE(,R01) SAVE CALLER'S SAVE AREA ADDR
         ST    R01,SAVEFW          SAVE MY SAVE AREA ADDRESS
         LR    R15,R01             SAVE GETMAINED STORE ADDRESS
         L     R01,SAVER1          RELOAD REGISTERS AFTER GETMAIN
         L     R02,SAVER0          RELOAD REG2 WITH REG0 ENTRY  CODE
         LR    R13,R15             LOAD REGISTER 13 WITH GETMAINED ADDR
         MVC   PARMS(LPARMS),K0(R01) SAVE INPUT PARMS
*
*        SET UP RECOVERY ENVIRONMENT
*
         MVC   ESTAEW(LESTAEL),ESTAEL  MOVE IN ESTAE PARAMETER LIST
         LA    R00,RTRYRTN1            RETRY ROUTINE - NO SDWA
         ST    R00,ESTAPARM            STORE IN PARAMETER LIST
         LA    R00,RTRYRTN2            RETRY ROUTINE - WITH SDWA
         ST    R00,ESTAPARM+K4         STORE IN PARAMETER LIST
         STM   R11,R13,ESTAPARM+K8     BASE/IEFYS WORK/DATA REGS    KHP
         ESTAE RECOVERY,CT,PARAM=ESTAPARM,MF=(E,ESTAEW) SETUP RCVRY
*
*        DETERMINE REASON FOR ENTRY  STEP/JOB TERMINATION
*
         L     R09,PARMRECD        LOAD ADDRESS OF SMF RECORD
         C     R02,JOBCODE         WAS ENTRY CODE FOR JOB TERM?
         BE    JOBTERM             YES, BR TO HANDLE JOBTERM
         C     R02,STEPCODE        WAS ENTRY FOR STEP TERM?
         BNE   EXIT                NO, THEN EXIT UNKNOWN ENTRY
         EJECT
*
*        HANDLE STEP TERMINATION CONDITIONS
*
STEPTERM DS    0H                  ENTRY FROM STEP TERMINATION
         LA    R06,WTO1TXT         GET ADDRESS OF WTO TEXT AREA
         USING LINE2,R06           SET UP ADDRESSABILITY TO LINE
         L     R01,PARMINDC        LOAD ADDRESS OF STEP NO
         CLI   K1(R01),K1          IS IT STEP 1?
         BNE   NOTFIRST            NO, BR PAST HEADER LINE
         MVC   WTO1TXT,LINE3A      MOVE HEADER LINE 1 TO OUTPUT
         BAL   R14,MSGRTN          PUT OUT LINE
         MVC   WTO1TXT,LINE3       MOVE SECOND HEADER
         BAL   R14,MSGRTN          PUT IT OUT
NOTFIRST MVI   WTO1TXT,C' '        INIT OUTPUT LINE TO BLANKS
         MVC   WTO1TXT+K1(L'WTO1TXT-K1),WTO1TXT COPY BLANKS
         USING SMFD04,R09          ELSE SET RECORD TYPE 4
         L     R01,PSAAOLD         GET ADDRESS OF CURRENT ASCB
         L     R01,ASCBJBNI(K0,R01) GET ADDRESS OF JOBNAME FIELD
         CLI   CHPROCSN(R01),C' '  IS PROC STEP NAME BLANK?
         BNH   NOPROC              YES, DO NOT MOVE IT IN
         MVC   PROCSTEP,CHPROCSN(R01) MOVE IN PROC STEP NAME
NOPROC   CLI   CHSTEP(R01),C' '    IS STEP NAME BLANK?
         BNH   PUTMSG1             YES, DO NOT MOVE IT IN
         MVC   STEPNAME,CHSTEP(R01) MOVE IN STEP NAME
PUTMSG1  MVC   PROGNAME,SMF4PGMN   PROGRAM NAME TO MESSAGE          KHP
         LA    R01,SMF4STI
         SLR   R00,R00
         ICM   R00,K3,SMF4SCC      GET COND CODE
         BAL   R14,PRETCDE         CALL RETURN CODE ROUTINE
         LH    R02,SMF4RLCT        LOAD RELOC. SECT. OFFSET
         LA    R03,SMF4FLG(R02)    POINT TO RELOCATE SECTION
         USING SMF4PGIN,R03        SET UP ADDR. TO RELOCATE SECT
         L     R01,SMF4SST         SET SERVICE UNITS USED
         BAL   R14,PCOUNT          CALL CONVERT ROUTINE
         MVC   SERV,DWORD+L'DWORD-L'SERV MOVE TO OUTPUT LINE
         LH    R01,SMF4PGNO        GET PERFORMANCE GROUP NUM
         BAL   R14,PCOUNT          CALL CONVERT ROUTINE
         MVC   PG,DWORD+L'DWORD-L'PG MOVE TO OUTPUT LINE
         L     R01,SMF4NSW         GET NUMBER OF SWAPS
         BAL   R14,PCOUNT          CONVERT IT
         MVC   SWAPS,DWORD+L'DWORD-L'SWAPS MOVE IT TO OUTPUT
         L     R01,SMF4PGIN        GET NUMBER OF PAGE INS
         A     R01,SMF4PGOT        ADD NUMBER OF PAGE OUTS
         BAL   R14,PCOUNT          CONVERT COUNT
         MVC   PAGE,DWORD+L'DWORD-L'PAGE MOVE TO OUTPUT LINE
         L     R01,SMF4PSI         GET NUMBER OF SWAP PAGE INS
         A     R01,SMF4PSO         ADD NUMBER OF SWAP PAGE OUTS
         BAL   R14,PCOUNT          CONVERT COUNT
         MVC   SWAP,DWORD+L'DWORD-L'SWAP MOVE TO OUTPUT LINE
         L     R01,SMF4VPI         GET NUMBER OF VIO PAGE INS
         A     R01,SMF4VPO         ADD NUMBER OF VIO PAGE OUTS
         BAL   R14,PCOUNT          CONVERT COUNT
         MVC   VIO,DWORD+L'DWORD-L'VIO MOVE TO OUTPUT LINE
         DROP  R03                 DONE WITH RELOCATE SECTION
         SLR   R00,R00             CLEAR REG 0
         L     R01,PARMSTPC        LOAD STEP CPU TIME ADDRESS
         ICM   R01,7,K0(R01)       LOAD STEP CPU TIME
         LA    R01,K0(,R01)        ZERO HIGH ORDER BYTE
         BAL   R14,PCLOCK          CONVERT FOR OUTPUT
         MVC   CPU,PTIME+K1        MOVE TO OUTPUT LINE              KHP
         SLR   R00,R00             CLEAR REG 0
         LR    R01,R00             CLEAR REG 1
         ICM   R01,K7,SMF4SRBT     LOAD SRB TIME
         BAL   R14,PCLOCK          CONVERT IT
         MVC   SRB,PTIME+K1        MOVE TO OUTPUT LINE              KHP
         L     R00,SMF4SIT         LOAD STEP INIT TIME
         L     R01,SMF4TME         LOAD STEP TERM TIME
         BAL   R14,PCLOCK          CONVERT IT
         MVC   CLOCK,PTIME+K1      MOVE TO OUTPUT LINE              KHP
         LA    R01,SMF4LENN        GET DEVICE ENTRY ADDRESS
         BAL   R14,EXCPCNT         CALL EXCP COUNT ROUTINE
         LR    R01,R15             LOAD COUNT
         BAL   R14,PCOUNT          CALL CONVERT ROUTINE
         MVC   EXCP,DWORD+L'DWORD-L'EXCP MOVE TO OUTPUT LINE
         BAL   R14,MSGRTN          PUT LINE OUT
         B     EXIT                BR TO EPILOGUE CODE
JOBTERM  DS    0H                  ENTRY ON JOB TERMINATION
         MVC   WTO1TXT,LINE4       SET UP OUTPUT LINE
         MVC   WTO1TXT+LINE4J(L'LINE4J),JMRJOB MOVE IN JOB NAME
         L     R01,PARMPROG        LOAD ADDR OF PROGRAMMER NAME
         MVC   WTO1TXT+LINE4N(L'LINE4N),K0(R01) MOVE IN PROG NAME
         SLR   R00,R00             ZERO REG
         LR    R01,R00             ZERO REG 1
         L     R02,PARMJOBC        LOAD ADDR OF JOB CPU TIME
         ICM   R01,K7,K0(R02)      LOAD JOB CPU TIME
         STCM  R01,K7,JMRUCOM+1    STORE JOB CPU FOR JES2          V2M4
         MVI   JMRUCOM,X'77'       FLAG AS CONTAINING JOB CPU TIME V2M4
         BAL   R14,PCLOCK          CONVERT TIME FOR OUTPUT
         MVC   WTO1TXT+LINE4C(L'LINE4C),PTIME+K1                    KHP
         USING SMFD05,R09          ADDR. SMF TYPE 5 RECORD
         ICM   R00,15,SMF5JIT      GET JOB INIT TIME
         ICM   R01,15,SMF5TME      GET JOB TERM TIME
         DROP  R09                 DROP SMF RECORD
PUTMSG2  BAL   R14,PCLOCK          CONVERT TIME FOR OUTPUT
         MVC   WTO1TXT+LINE4E(L'LINE4E),PTIME+K1                    KHP
         BAL   R14,MSGRTN          PRINT LINE
*   FIND BULLETIN
         LA    R08,BLDLWORK        LOAD ADDR OF BLDL LIST
         USING BLDL,R08            SET UP ADDR. TO BLDL PARM LIST
         LA    R01,K1              LOAD A 1
         STH   R01,BLDLFF          STORE IN BLDL LIST
         LA    R01,BLDLELEN        LOAD LENGTH OF BLDL ENTRY LEN
         STH   R01,BLDLLL          STORE ENTRY LENGTH
         MVC   BLDLNAME,=CL8'BULLETIN' LOAD PROGRAM NAME
         LR    R00,R08             LOAD REG 0 WITH BLDL
         BLDL  0,(0)               ISSUE BLDL FOR MODULE
         LTR   R15,R15             WAS IT THERE?
         BNZ   EXIT                NO, BR TO EXIT EPILOGUE
         CLI   BLDLZ,K2            WAS IT OUT OF LINKLIST
         BNL   EXIT                NO, BR TO EXIT PROLOGUE
         LA    R02,BLDLNAME        GET BLDL ENTRY ADDRESS
         MVC   LINKE,LINKL         MOVE IN LINK LIST FORM
         LINK  DE=(2),SF=(E,LINKE) LINK TO BULLETIN ROUTINE
         DROP  R08                 DROP BLDL DSECT
         SPACE 3
EXIT     DS    0H                  EXIT PROLOGUE
         ESTAE 0                   CANCEL ESTAE EXIT
RTRYRTN2 DS    0H                  ESTAE RETRY ROUTINE WITH SDWA
*                                  JUST FREE STORAGE AND EXIT
         LR    R01,R13             GET FREEMAIN ADDRESS
         L     R13,SAVEBK          LOAD OLD REG 13
         L     R00,DATALEN         LOAD FREEMAIN PARM
         FREEMAIN R,LV=(0),A=(1)   FREE DATA DSECT STORAGE
QUICKOUT RETURN (14,12),RC=0       RETURN TO CALLER
         EJECT
MSGRTN   DS    0H                  MESSAGE(WTO) ROUTINE
         STM   R14,R01,SAVEAR2     SAVE A FEW REGISTERS
         LA    R01,L'WTO1TXT+K4    GET LENGTH FOR WTO
         STH   R01,WTO1LEN         STORE IN WTO PARM LIST
         MVC   WTO1MCS,MCSFLAG     MOVE IN MCSFLAG
         MVC   WTO1DESC,DESC       MOVE IN DESCRIPTOR CODES
         MVC   WTO1ROUT,ROUT       MOVE IN ROUTE CODES
         MVC   WTO1MSGT,MSGTYPJ    MOVE IN MSGTYP
         MVI   WTO1TXT,C'-'        MOVE IN MESSAGE PREFIX
         WTO   MF=(E,WTO1)         ISSUE WTO
         LM    R14,R01,SAVEAR2     RESTORE REGISTERS
         BR    R14                 RETURN TO CALLER
         EJECT
***********************************************************************
*                                                                     *
*  EXCP COUNT ROUTINE                                                 *
*        INPUT   REG 1 HAS ADDRESS OF SMF RECORD(4/34) DEVICE FIELDS  *
*        OUTPUT  REG15 HAS COUNT OF TOTAL EXCPS                       *
*                                                                     *
***********************************************************************
         PUSH   USING              SAVE USING STATUS                KHP
         USING  SMFD04,R09         ADDRESSIBILITY ON SMF HEADER     KHP
EXCPCNT  SR     R15,R15            SET R15 ZERO                     KHP
         TM     SMF4STI,BIT7       JOB STEP FLUSHED?                KHP
         BOR    R14                YES - RETURN IMMEDIATELY         KHP
*                                                                   KHP
         STM    R14,R06,EXCPSAVE   ROUTINE ENTRY                    KHP
         LH     R02,K0(R01)        GET LENGTH OF DEVICE ENTRIES
         SRL    R02,3              DIVIDE BY 8(COUNT OF ENTRIES)
         LA     R03,2(R01)         POINT TO FIRST DEVICE
         USING  SMF4DEVC,R03       ADDRESS DEVICE ENTRY IN RECORD
         SLR    R04,R04            CLEAR COUNT REG                  KHP
*                                                                   KHP
         LA     R05,ASTERSKS       PRINT ASTERISKS LINE AND         KHP
         BAL    R14,IPRINT         'I/O COUNTS' HEADER LINE         KHP
         LA     R05,AFIRST         IN SMBS VIA IEFYS                KHP
         BAL    R14,IPRINT                                          KHP
         LA     R05,IEXCPRT        SET PRINT LINE ADDRESS FOR SUBR. KHP
         MVI    IEXCPRT+K1,C' '    CLEAR EXCP COUNT PRINT LINE      KHP
         MVC    IEXCPRT+K2(LIEXCPRT-K2),IEXCPRT+K1  TO BLANKS       KHP
         MVI    IEXCPRT,CASTR      MARK FIRST AND LAST              KHP
         MVI    IEXCPEND,CASTR     CHARACTERS                       KHP
         LA     R06,IEXCPTYP       POINT TO FIRST DEV. ENTRY SLOT   KHP
         USING  IEXCPTYP,R06       ADDRESSIBILITY TO SLOT           KHP
*                                                                   KHP
         LTR    R02,R02            ARE THERE ANY DEVICE ENTRIES     KHP
         BNP    EXCLEND            IF CNT<=0 THEN BR TO EXIT        KHP
EXCLOOP  AL     R04,SMF4EXCP       ADD EXCP COUNT                   KHP
         CLC    SMF4DEVC(K2),=X'0000'   IS THIS DUMMY/JES/VIO?      KHP
         BNE    EXCLNRM            NO, SET UP NORMAL DEV PRINT      KHP
         CLC    SMF4CUAD(K2),=X'0FFF'   IS THIS VIO?                KHP
         BE     EXCLVIO            YES, GO DO VIO                   KHP
         MVC    IEXCPTYP(K5),=C'X/JES'  MARK TYPE 'DUMMY OR JES'    KHP
         MVC    IEXCPCNT+L'IEXCPCNT-K3(K3),=C'N/A' COUNT NOT APPL.  KHP
         B      EXCLOOPN           GO DO NEXT ENTRY                 KHP
EXCLVIO  MVC    IEXCPCUA,=C'VIO'   MARK TYPE VIO                    KHP
         B      EXCLCNT            GO DO COUNT                      KHP
*                                                                   KHP
EXCLNRM  MVI    IEXCPTYP+K1,C'-'   SET HYPHEN                       KHP
         MVI    IEXCPTYP,C'T'      SET TYPE = MAG TAPE              KHP
         TM     SMF4DEVC,BIT0      IS IT MAG TAPE?                  KHP
         BO     EXCLCUA            YES, LEAVE IT                    KHP
         MVI    IEXCPTYP,C'C'      SET TYPE = COMM EQUIPMENT        KHP
         TM     SMF4DEVC,BIT1      IS IT COMM EQUIPMENT?            KHP
         BO     EXCLCUA            YES, LEAVE IT                    KHP
         MVI    IEXCPTYP,C'D'      SET TYPE = DASD                  KHP
         TM     SMF4DEVC,BIT2      IS IT DASD?                      KHP
         BO     EXCLCUA            YES, LEAVE IT                    KHP
         MVI    IEXCPTYP,C'G'      SET TYPE = GRAPHICS EQUIPMENT    KHP
         TM     SMF4DEVC,BIT3      IS IT GRAPHICS EQUIPMENT?        KHP
         BO     EXCLCUA            YES, LEAVE IT                    KHP
         MVI    IEXCPTYP,C'U'      SET TYPE = UNIT RECORD           KHP
         TM     SMF4DEVC,BIT4      IS IT UNIT RECORD?               KHP
         BO     EXCLCUA            YES, LEAVE IT                    KHP
         MVI    IEXCPTYP,C'?'      /*DEVICE TYPE UNKNOWN*/          KHP
*                                                                   KHP
EXCLCUA  UNPK   DWORD(K5),SMF4CUAD(K3)  UNPACK THE CUA              KHP
         TR     DWORD+K1(K3),TRTAB-C0   CONVERT CUA TO PRINTABLE    KHP
         MVC    IEXCPCUA,DWORD+K1       CUA TO DEVICE PRT SLOT      KHP
*                                                                   KHP
EXCLCNT  L      R15,SMF4EXCP       GET EXCP COUNT FOR ENTRY         KHP
         CVD    R15,DWORD          CONVERT TO DECIMAL               KHP
         MVC    IWORK,IMASK        SET EDIT MASK                    KHP
         ED     IWORK,DWORD+3       EDIT TO PRINT LINE              KHP
         MVC    IEXCPCNT,IWORK+K1  EDIT TO PRINT LINE               KHP
*                                                                   KHP
         DROP   R06                                                 KHP
EXCLOOPN LA     R06,IEXCPL(,R06)   POINT TO NEXT PRINT LINE SLOT    KHP
         LA     R15,IEXCPRT+(5*IEXCPL)      APPROX LAST SLOT ADDR   KHP
         CR     R06,R15            IS THERE ROOM IN PRINT LINE      KHP
         BL     EXCLOOPX           YES, CONTINUE                    KHP
         BAL    R14,IPRINT         NO,  PRINT THIS LINE             KHP
         LA     R06,IEXCPTYP       RESET TO FIRST PRINT POSITION    KHP
         MVI    IEXCPRT+K1,C' '    CLEAR PRINT LINE                 KHP
         MVC    IEXCPRT+K2(LIEXCPRT-K3),IEXCPRT+K1                  KHP
EXCLOOPX DS     0H                                                  KHP
         LA     R03,K8(R03)        INCREMENT TO NEXT ENTRY
         BCT    R02,EXCLOOP        LOOP THRU ALL ENTRIES
*
EXCLEND  ST     R04,EXCPSAVE+K4    SAVE ACCUMULATED COUNT IN 'R15'  KHP
         LA     R15,IEXCPTYP       WERE ANY ENTRIES MADE IN LAST    KHP
         CR     R06,R15            PRINT LINE SET UP?               KHP
         BNH    EXCLEND1           NO - SKIP PRINT                  KHP
         BAL    R14,IPRINT         YES - PRINT                      KHP
EXCLEND1 TM     SMF4RIN,BIT6       EXCP COUNT POSSIBLY BAD?         KHP
         BNO    EXCLEND2           NO - SKIP PRINT                  KHP
         LA     R05,ATCTLINE       YES - PRINT WARNING              KHP
         BAL    R14,IPRINT         THAT EXCP COUNT MAY BE BAD       KHP
EXCLEND2 LA     R05,ASTERSKS       PRINT FINAL                      KHP
         BAL    R14,IPRINT         LINE                             KHP
*                                                                   KHP
         POP    USING              RESTORE FORMER USING STATUS      KHP
*                                                                   KHP
         LM     R14,R06,EXCPSAVE   RESTORE REGS INCLUDING R15 COUNT KHP
         BR     R14                RETURN TO CALLER                 KHP
*                                                                   KHP
* EXCP COUNT SUBROUTINE TO PASS PRINT LINE TO IEFYS                 KHP
*                                                                   KHP
IPRINT   ST     R05,36(,R12)       * IEFYS CALLING PARAMETER        KHP
         MVC    42(2,R12),IEFYSMLN * LIST FROM MVS SMF MANUAL       KHP
         L      R15,VIEFYS         ENTRY POINT ADDRESS              KHP
         BR     R15                CALL IEFYS.  RETURN WILL BE TO   KHP
*                                  CALLER OF THIS SUBR VIA R14.     KHP
         EJECT
***********************************************************************
*                                                                     *
*  COUNT CONVERSION ROUTINE: CONVERTS BINARY TO CHARACTER OUTPUT      *
*        INPUT   REG 1 HAS COUNT TO BE CONVERTED                      *
*        OUTPUT  DWORD COUNTAINS CHARACTER OUTPUT FIELD               *
*                                                                     *
***********************************************************************
PCOUNT   SAVE  (14,12)             SAVE CALLER'S REGISTERS
         CVD   R01,DWORD           CONVERT COUNT TO DECIMAL
         MVC   EDWORK2,EDMASK2     MOVE IN EDIT MASK
         ED    EDWORK2,DWORD+K2    CONVERT TO CHARACTER
         CP    DWORD,P99999        IS COUNT>99999?
         BNH   NOFLOAT             NO, BR PAST FLOAT CODE
         MVC   DWORD(L'DWORD-K1),EDWORK2+K2 SHIFT IT RIGHT 3 DEC DIGTS
         MVI   DWORD+L'DWORD-K1,CK MOVE A 'K' FOR THOUSANDS
         B     PCNTEX              BR TO RETURN
NOFLOAT  MVC   DWORD,EDWORK2+K4    MOVE IN UNFLOATED COUNT
PCNTEX   RETURN (14,12)            RETURN TO CALLER
         SPACE 2
***********************************************************************
*                                                                     *
*  CLOCK CONVERSION ROUTINE: CONVERTS BINARY TO CHARACTER OUTPUT      *
*        INPUT   REG 1 HAS FIRST TIME                                 *
*                REG 0 HAS SECOND TIME
*        OUTPUT  DWORD COUNTAINS CHARACTER OUTPUT FIELD               *
*                                                                     *
***********************************************************************
PCLOCK   SAVE  (14,12)             SAVE CALLER'S REGISTERS
         SR    R01,R00             GET TIME DIFFERENCE
         BNL   LSTH24              IF DIFFERENCE>=0 THEN SKIP
         A     R01,HR24            ELSE ADD 24 HOURS TO TIME
LSTH24   DS    0H                  SKIPPED TO HERE
         C     R01,TOVER           IF TIME<MAX THEN
         BL    NOTOVER              BR TO CONVERT IT
         MVI   PTIME,CASTR         ELSE OVERFLOW FILL WITH          KHP
         MVC   PTIME+K1(L'PTIME-K1),DWORD ********                  KHP
         B     PCLKEX              BR TO RETURN
NOTOVER  CVD   R01,DWORD           CONVERT TIME TO DECIMAL
         MVC   PTIME,EDMASK        MOVE IN EDIT MASK
         ED    PTIME,DWORD+K3      CONVERT TO CHARACTER
PCLKEX   RETURN (14,12)            RETURN TO CALLER
         SPACE 2
***********************************************************************
*                                                                     *
*  CONDITION CODE CONVERSION ROUTINE: CHARACTER OUTPUT INTO RC FIELD  *
*        INPUT   REG 0 HAS            STEP TERM CONDTION CODE         *
*                REG 1 HAS ADDRESS OF STEP TERM INDICATOR FIELD       *
*        OUTPUT  FIELD RC OF OUTPUT LINE CONTAINS RETURN CODE         *
*                                                                     *
***********************************************************************
PRETCDE  SAVE  (14,12)             SAVE CALLER'S REGISTERS
         TM    K0(R01),BIT7        WAS STEP FLUSHED
         BNO   NOFLUSH             NO,BRANCH PAST
         SPACE 1
         PUSH  USING                                               V2M3
         USING LCT,R12             'IEFYS WORK AREA' IS LCT        V2M3
         SPACE 1
         L     R01,LCTSCTAD        POINT TO STEP CONTROL TABLE     V2M3
         USING SCT,R01             'SCT' GETS PROPAGATED TO JES2   V2M3
         MVI   SCTNSMSG+1,X'00'    SHOW IEFACTRT MARKED AS FLUSHED V2M3
         POP   USING                                               V2M3
         SPACE 1
         MVC   RC,=C'FLUSH'        MOVE IN FLUSHED MESSAGE
         B     PRETEXTR            BR TO RETURN
         SPACE 1                                                   V2M2
NOFLUSH  TM    K0(R01),BIT6        DID IT ABEND?
         BO    STPABEND            YES, GO CONVERT ABEND CODE
         N     R00,=A(X'FFF')      ZERO UNUSED PORTION
         CVD   R00,RWORK           GET ADDRESS OF COND FIELD
         MVC   RC-K1(L'RC+K1),=X'402020212020' MOVE IN EDIT MASK
         ED    RC-K1(L'RC+K1),RWORK+K5 CONVERT RET CODE TO CHAR
         B     PRETEXT             BR TO RETURN
STPABEND CLM   R00,2,=X'80'        WAS IT A USER ABEND CODE?
         BL    SYSABND             NO, PROCESS SYSTEM ABEND CODE.
         N     R00,=A(X'FFF')      TURN OFF X'80' BIT
         CVD   R00,RWORK           CONVERT FOR OUTPUT
         MVC   RC-K1(L'RC+K1),=X'402120202020' MOVE IN EDIT MASK
         ED    RC-K1(L'RC+K1),RWORK+K5 CONVERT TO CHARACTER
         MVI   RC,C'U'             MOVE IN 'U' USER ABEND
         B     PRETEXT             BR TO RETURN
SYSABND  STH   R00,RWORK           STORE ABEND CODE
         UNPK  RWORK+K3(K5),RWORK(K3) ADD ZONES TO CC FIELD
         TR    RWORK+K4(K3),TRTAB-C0 TRANSLATE TO CHARACTERS
         MVC   RC+K2(L'RC-K2),RWORK+K4  MOVE TO OUTPUT LINE
         MVC   RC(K2),=C'*S'       MOVE IN S FOR SYSTEM ABEND
         SPACE 1
         PUSH  USING                                               V2M3
         USING LCT,R12             'IEFYS WORK AREA' IS LCT        V2M3
         SPACE 1
PRETEXT  L     R01,LCTSCTAD        POINT TO STEP CONTROL TABLE     V2M3
         USING SCT,R01             'SCT' GETS PROPAGATED TO JES2   V2M3
         MVI   SCTNSMSG+1,X'77'    SHOW IEFACTRT MARKED AS GOOD    V2M3
         POP   USING                                               V2M3
         SPACE 1
PRETEXTR RETURN (14,12)            RETURN TO CALLER
         EJECT
***********************************************************************
*                                                                     *
*  ESTAE EXIT ROUTINE                                                 *
*                                                                     *
***********************************************************************
RECOVERY DS    0H
         USING *,R15               SET UP ADDRESSABILITY
         LA    R04,K4              PUT 4 IN REGISTER FOR COMPARE
         CR    R00,R04             IS SDWA PRESENT?
         BNE   HAVESDWA            YES, BR TO PROCESS WITH SDWA
         L     R00,K0(R02)         LOAD RETRY ADDRESS FROM PARAM LIST
         LA    R15,K4              SET RETCODE TO RETRY ADDR IN R00
         BR    R14                 RETURN TO PROCESSOR WITH RETRY ADDR
HAVESDWA DS    0H                  ENTER HERE IF SDWA PRESENT
         ST    R14,KC(R13)         SAVE RETURN ADDRESS
         L     R02,K0(R01)         LOAD PARAM LIST ADDR FROM SDWA
         L     R02,K4(R02)         LOAD RETRY ADDRESS
         SETRP RC=4,,RETADDR=(2),RETREGS=YES,FRESDWA=YES,REGS=(14)
         DROP  R15
         SPACE 3
***********************************************************************
*                                                                     *
*  ESTAE RETRY ROUTINE WHEN NO SDWA WAS PRESENT                       *
*                                                                     *
***********************************************************************
RTRYRTN1 DS    0H                  RETRY ROUTINE WITH NO SDWA PRESENT
         LM    R11,R13,K8(R01)     LOAD REGS FOR ESTAE PARM LIST    KHP
         B     RTRYRTN2            AND GET OUT
         EJECT
*
*  OUTPUT LINE DSECT FOR STEP TERMINATION MESSAGE
*
LINE2    DSECT
         DS    C
STEPNAME DS    CL8                 STEPNAME
         DS    C
PROCSTEP DS    CL8                 PROCEDURE STEP NAME
         DS    C
PROGNAME DS    CL8                 EXEC PGM= PROGRAM NAME           KHP
         DS    C
RC       DS    XL5                 RETURN/ABEND CODE
         DS    C
EXCP     DS    XL6                 EXCP COUNT
         DS    C
CPU      DS    XL10                TCB CPU TIME                     KHP
         DS    C
SRB      DS    XL10                SRB CPU TIME                     KHP
         DS    C
CLOCK    DS    XL10                ELAPSED TIME                     KHP
         DS    C
SERV     DS    XL6                 SERVICE UNITS
         DS    C
PG       DS    XL3                 PERFORMANCE GROUP
         DS    C
PAGE     DS    XL6                 NUMBER OF PAGE-INS + PAGE OUTS
         DS    C
SWAP     DS    XL6                 NUMBER OF PAGES XFER'D ON SWAPS
         DS    C
VIO      DS    XL6                 NUMBER OF PAGES XREF'D FOR VIO
         DS    C
SWAPS    DS    XL5                 NUMBER OF SWAPS
LLINE2   EQU   *-LINE2
*
BLDL     DSECT                     BLDL PARM LIST
BLDLFF   DS   H                    TOTAL LENGTH OF PARMLIST
BLDLLL   DS   H                    LENGTH OF EACH ENTRY
BLDLNAME DS   CL8                  MEMBERNAME
BLDLTTR  DS   XL3                  TTR OF MEMBER
BLDLK    DS   X                    K FIELD
BLDLZ    DS   X                    Z FIELD
BLDLC    DS   X                    C FIELD
BLDLUSER DS   CL44                 USER DATA FIELD
BLDLELEN EQU  *-BLDLNAME
BLDLLEN  EQU  *-BLDLFF
*
IEFACTRT CSECT
LINE3    DS    0CL(LLINE2)         OUTPUT LINE HEADER
         DC    C' '
         DC    CL30'STEPNAME PROCSTEP PROGRAM'                      KHP
         DC    C'RC'
         DC    CL3' '
         DC    C'EXCP'
         DC    CL8' '                                               KHP
         DC    C'CPU'
         DC    CL8' '                                               KHP
         DC    C'SRB'
         DC    CL6' '                                               KHP
         DC    C'CLOCK'
         DC    CL3' '
         DC    C'SERV'
         DC    CL2' '
         DC    C'PG'
         DC    CL3' '
         DC    C'PAGE'
         DC    CL3' '
         DC    C'SWAP'
         DC    CL4' '
         DC    C'VIO'
         DC    CL1' '
         DC    C'SWAPS'
LLINE3   EQU   *-LINE3
         ORG   LINE3+LLINE2
*
LINE3A   DS    0CL(LLINE2)         OUTPUT LINE FIRST HEADER
         DC    C' '
         DC    CL42' <<< KHPRDC -- JOB SUMMARY STATISTICS >>> '     KHP
         DC    CL6'------'                                          KHP
         DC    C'TIMINGS (SECONDS)'                                 KHP
         DC    CL6'------'                                          KHP
         DC    CL11' '                                              KHP
         DC    CL4'----'   12
         DC    C'PAGING COUNTS'  3456
         DC    CL3'---'   789
         DC    CL6' '
         ORG   LINE3A+LLINE2
*
LINE4    DC    CL(LLINE2)' '       JOB TERMINATION MESSAGE LINE
         ORG   LINE4
         DC    C' '
         DC    C'XXXXXXXX ENDED.  NAME-XXXXXXXXXXXXXXXXXXXX TOTAL CPU TC
               IME=XXXXXXX.XX.    TOTAL ELAPSED TIME=XXXXXXX.XX.'   KHP
*                012345678901234567890123456789012345678901234567890123
*         50-> 45678901234567890123456789012345678901234567890123456789
         ORG   LINE4+LLINE2
LINE4J   EQU   1,8         OFFSET OF JOBNAME IN LINE4 TEXT
LINE4N   EQU   23,20       OFFSET OF NAME IN LINE4 TEXT
LINE4C   EQU   59,10       OFFSET OF CPU TIME IN LINE4 TEXT         KHP
LINE4E   EQU   93,10       OFFSET OF ELAPSED TIME IN LINE4 TEXT     KHP
*
JOBCODE  DC    F'16'               CODE FOR JOB ON ENTRY TO EXIT
STEPCODE DC    F'12'               CODE FOR STEP ON ENTRY TO EXIT
TOVER    DC    F'999999999'        OVERFLOW CONSTANT                KHP
HR24     DC    A(24*60*60*100)     24 HRS IN .01 SECONDS
MCSFLAG  DC    B'1001001000000000' ROUT+MSGTYPE+HRDCPY
*                0123456789ABCDEF
DESC     DC    B'0000000000000000' NO DEC CODES
*                1234567890123456
ROUT     DC    B'0000000000000100' ROUT CODE=14
*                1234567890123456
MSGTYPJ  DC    B'1000000000000000' MSGTYP=JOBNAMES
*                1234567890123456
EDMASK   DC    XL12'40202020202020214B202020'                       KHP
P99999   DC    P'99999'
EDMASK2  DC    XL12'402020202020202020202120'
IMASK    DC    XL12'402020206B2020206B202120'
TRTAB    DC    C'0123456789ABCDEF'
*                                                                   KHP
*        IEFYS MESSAGES AND CONTROL                                 KHP
*                                                                   KHP
VIEFYS   DC     V(IEFYS)           EXTRN --> SMB WRITE ROUTINE      KHP
IEFYSMLN DC     AL2(124)           LENGTH OF ALL MESSAGES           KHP
ASTERSKS DC     124C'*'            LINE OF ASTERISKS                KHP
AFIRST   DC     C'* I/O COUNTS  '  HEADER LINE FOR EXCP PRINTS      KHP
         DC     CL23'UNIT       EXCPS'                              KHP
         DC     CL23'UNIT       EXCPS'                              KHP
         DC     CL23'UNIT       EXCPS'                              KHP
         DC     CL23'UNIT       EXCPS'                              KHP
         DC     CL16'UNIT       EXCPS'                              KHP
         DC     C' *'                                               KHP
ATCTLINE DC     CL123'* WARNING: TCTIEX ON -- V=R, PARTIAL TCTIOT, OR FC
               RR INVOKED: EXCP COUNTS DISTORTED/MISSING/INVALID',C'*'
*
* DEFINE ESTAE LIST FORM
*
ESTAEL   ESTAE MF=L               CREATE MODEL ESTAE PARM LIST
LESTAEL  EQU   *-ESTAEL           NAME ITS LENGTH
*
* DEFINE LINK  LIST FORM
*
LINKL    LINK  DE=0,SF=L          CREATE MODEL LINK PARM LIST
LLINKL   EQU   *-LINKL            NAME ITS LENGTH
*
DATA     DSECT
SAVE     DS    18F              SAVE AREA FOR REGISTERS ON ENTRY
         ORG   SAVE
SAVEXX   DS    F
SAVEBK   DS    F
SAVEFW   DS    F
SAVER14  DS    F
SAVER15  DS    F
SAVER0   DS    F
SAVER1   DS    F
         DS    11F
*
DWORD    DS    D
RWORK    DS    D
PTIME    DS    CL12                                                 KHP
IWORK    DS    CL12                                                 KHP
*
LINKE    DS    XL(LLINKL)       LINK PARM LIST AREA
*
ESTAEW   DS    XL(LESTAEL)      ESTAE PARM LIST AREA
ESTAPARM DS    5F               PARAMETER LIST PASSED TO RETRY RTN  KHP
*              RETRY ROUTINE ADDRESS  NO SWDA OBTAINED
*              RETRY ROUTINE ADDRESS  SWDA OBTAINED
*              BASE REGISTER R11
*              IEFYS PARMS   R12                                    KHP
*              DATA REGISTER R13
*
SAVEAR2  DS    6F               INTERNAL SAVE REGISTER SAVE AREA
*                                                                   KHP
*   EXCP PRINT SUBROUTINE WORK AREAS - IEFYS INTERFACE              KHP
*                                                                   KHP
EXCPSAVE DS    9F                                                   KHP
IEXCPRT  DS    CL124                                                KHP
         ORG   IEXCPRT                                              KHP
         DS    CL13        '* I/O COUNTS '                          KHP
IEXCPTYP DS    CL1         X      DEVICE TYPE                       KHP
         DS    CL1         '-'                                      KHP
IEXCPCUA DS    CL3         XXX    DEVICE ADDRESS                    KHP
         DS    CL1                                                  KHP
IEXCPCNT DS    CL11        NNN,NNN,NNN   EXCP COUNT                 KHP
         DS    CL6                                                  KHP
IEXCPL   EQU   *-IEXCPTYP         LENGTH OF DEVICE ENTRY            KHP
         ORG   ,                  REORIGIN TO END OF LINE           KHP
LIEXCPRT EQU   *-IEXCPRT          LENGTH OF LINE                    KHP
         ORG   *-1                LAST POSITION IN LINE             KHP
IEXCPEND DS    CL1         '*'                                      KHP
*
PARMS    DS    0F               PARMS PASSED IN REG 1 TO ROUTINE
PARMEPRM DS    F                PTR TO COMMON EXIT PARAMETER AREA
PARMSTEP DS    F                PTR TO STEPNAME FIELD
PARMPROG DS    F                PTR TO PROGRAMMER NAME FIELD
PARMJOBC DS    F                PTR TO JOB CPU TIME FIELD
PARMACCT DS    F                PTR TO JOB ACCOUNTING FIELDS
PARMSTPC DS    F                PTR TO STEP CPU TIME FIELD
PARMSACT DS    F                PTR TO STEP ACCOUNTING FIELDS
PARMINDC DS    F                PTR TO CANCEL FLAG & STEP NUMBER
PARMCOND DS    F                PTR TO CONDITION CODE FIELD
PARMRECD DS    F                PTR TO SMF RECORD TO BE WRITTEN
LPARMS   EQU   *-PARMS
*
BLDLWORK DS    CL(BLDLLEN)
*
EDWORK   DC    XL9'00'
EDWORK2  DC    XL12'00'
*
LWTO1    EQU   LLINE2+KA
         DS    0F
WTO1     DS    0CL(LWTO1)
WTO1LEN  DS    XL2
WTO1MCS  DS    XL2
WTO1TXT  DS    CL(LLINE2)       MESSAGE TEXT
WTO1DESC DS    XL2
WTO1ROUT DS    XL2
WTO1MSGT DS    XL2
*
         EJECT
SMFD04   DSECT
         IFASMFR 4                 STEP TERMINATION RECORD
         EJECT
SMFD05   DSECT
         IFASMFR 5                 JOB TERMINATION RECORD
         EJECT
         IEFJMR                    JMR MAPS COMMON PARAMETER AREA
         EJECT
         IHASDWA DSECT=YES         SDWA FOR ESTAE/SETRP MACRO
         EJECT
LCT      DSECT                                                     V2M2
         IEFALLCT                                                  V2M2
         EJECT                                                     V2M2
SCT      DSECT                                                     V2M2
         IEFASCTB                                                  V2M2
         EJECT
DATA     DSECT
         DS    6D             RESERVE FOR ZAPS
LDATA    EQU   *-DATA
IEFACTRT CSECT
         LTORG ,
         DS    0D
DATALEN  DC    0F'0',AL1(SUBPOOL),AL3(LDATA)
MODLEN   EQU   *-IEFACTRT
LPATCH   EQU   (MODLEN+K9)/KA/K8+K1 ADD 10% FOR PATCH AREA
LPATCHL  DC    AL2(LPATCH*K8)
SPATCH   DC    S(PATCH)
PATCH    DC    (LPATCH)D'00'
         END   IEFACTRT
