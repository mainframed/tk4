./       CHANGE NAME=$SVT     /* JOB REGION / TIME MODIFICATION */  KHP
         JE00011A SVT         /* CPU FACTOR FOR TIME ADJUST     */  KHP
./       CHANGE NAME=$JCT     /* JOB REGION / TIME MODIFICATION */  KHP
         JE00011A JCT         /* CPU FACTOR & JMR TIME TO JCT   */  KHP
./       CHANGE NAME=HASPINIT /* JOB REGION / TIME MODIFICATION */  KHP
         JE00011A IDEFACT     /* INSERT DEFAULT FACTOR=1.00     */  KHP
         JE00011A IFACTOR     /* INSERT FACTOR PARM PROCESSING  */  KHP
         JE00011A IFACTBL     /* INSERT FACTOR $SCNTBL ENTRIES  */  KHP
         AGO   .JE11ID3       /* REMOVE $ESTIME $PTENT ENTRY    */  KHP
.JE11ID3 ANOP                 /* REMOVE $ESTIME $PTENT ENTRY    */  KHP
         JE00011A IESTENT     /* INSERT $ESTIME $PTENT ENTRY    */  KHP
         JE00011A IFACENT     /* INSERT FACTOR $PTENT ENTRY     */  KHP
./       CHANGE NAME=HASPMISC /* PUT FACTOR IN SMF TYPE 26 RCD  */  KHP
         JE00011A MFACI26     /* PUT FACTOR IN SMF TYPE 25 RCD  */  KHP
./       CHANGE NAME=HASPPRPU /* JOB REGION / TIME MODIFICATION */  KHP
         JE00011A PFACTIM     /* PRINT CPU FACTOR & JMR TIME    */  KHP
         AGO   .JE11PD1       /* REMOVE PXEQSTAT MESSAGE        */  KHP
.JE11PD1 ANOP                 /* REMOVE PXEQSTAT MESSAGE        */  KHP
         JE00011A PFACLIN     /* INSERT JOBLOG MESSAGES         */  KHP
./       CHANGE NAME=HASPRDR  /* JOB REGION / TIME MODIFICATION */  KHP
         JE00011A RNELD       /* INSERT OS NEL DSECT            */  KHP
         JE00011A RDEFRGP     /* SET MAX POSSIBLE REGION INCR.  */  KHP
         AGO   .JE11RD3       /* REMOVE BNE RJOBTYPR            */  KHP
.JE11RD3 ANOP                 /* REMOVE BNE RJOBTYPR            */  KHP
         JE00011A RBRREGN     /* BRANCH TO REGION/TIME CODE     */  KHP
         JE00011A RRGNTIM     /* INSERT REGION/TIME SPEC. CODE  */  KHP
         JE00011A RKEYWRD     /* INSERT REGION/TIME KEYWORDS    */  KHP
         JE00011A RDFRGTM     /* INSERT DEF. REGION/TIME CODE   */  KHP
         AGO   .JE11RD7       /* REMOVE ALR RW,R0               */  KHP
.JE11RD7 ANOP                 /* AND    SRL RW,1                */  KHP
         JE00011A RRGPRIO     /* INSERT REGION PRIORITY CALC.   */  KHP
         JE00011A RRGTABL     /* INSERT REGION PRIORITY TABLE   */  KHP
./       CHANGE NAME=HASPSSSM /* JOB REGION / TIME MODIFICATION */  KHP
         JE00011A SADJUST     /* ADJUST TIME BASED ON FACTOR    */  KHP
./       CHANGE NAME=HASPXEQ  /* JOB REGION / TIME MODIFICATION */  KHP
         AGO   .JE110D1       /* REMOVE BZ XJCLEXIT             */  KHP
.JE110D1 ANOP                 /* REPLACE WITH BZ XJOB LOGIC     */  KHP
         JE00011A XEQ1        /* INSERT BZ XJOB                 */  KHP
         AGO   .JE110D2       /* REMOVE BNE XJCLEXIT            */  KHP
.JE110D2 ANOP                 /* REPLACE WITH BNE XJOB LOGIC    */  KHP
         JE00011A XEQ2        /* INSERT BNE XJOB                */  KHP
         JE00011A XEQ3        /* INSERT CONVERTER EXIT CODE     */  KHP
         JE00011A XEQ4        /* INSERT CONVERTER EXIT KEYWORDS */  KHP
./       ADD   NAME=JE00011A  /* JOB TIME / REGION MODIFICATION */  KHP
DUMMY ENTRY TO BE REPLACED                                          KHP
./       REPL  NAME=JE00011A  /* JOB TIME / REGION MODIFICATION */  KHP
         MACRO
&L       JE00011A &V
         GBLC  &LIST          /* GLOBAL SYMBOL FOR DOC CALLS    */  KHP
.**********************************************************************
.*                                                                    *
.*       KHPRDC TIME LIMIT AND TIME/REGION ESTIMATE MODIFICATIONS.    *
.*       THIS MOD ACCOMPLISHES THE FOLLOWING:                  .      *
.*                                                                    *
.*       1) A 'FACTOR' JES2 INITIALIZATION CONTROL CARD IS DEFINED    *
.*          FOR HASPINIT TO GENERATE A NORMALIZATION FACTOR FOR       *
.*          JOB CPU TIME LIMIT FOR EACH SYSTEM IN THE COMPLEX.        *
.*          THE FORMAT OF THIS CARD IS:  FACTOR SYS=NNNN,FACTOR=NNN   *
.*          WHERE 'XXXX' IS THE SYSTEM ID AND 'NNN' IS THE CPU FACTOR *
.*          (100 = 1 MIP; 86 WOULD BE .86 MIP (158-I); 110 WOULD BE   *
.*          1.1 MIP (3031); AND SO FORTH).  (FROM MOTOROLA WESTERN    *
.*          AREA COMPUTER CENTER MODIFICATION SMSP-52.)               *
.*       2) IF TIME= SPECIFIED ON JOB CARD, IT ALSO BECOMES THE       *
.*          JOBPARM ESTIMATED CPU TIME.                               *
.*       3) IF TIME= SPECIFIED ON JOBPARM CARD, IT ALSO BECOMES THE   *
.*          JOB MAXIMUM TIME.                                         *
.*       4) IF BOTH ARE SPECIFIED, THE JOBPARM CARD TAKES PRIORITY.   *
.*       5) IF NEITHER ARE SPECIFIED, THE JOB CLASS DEFAULT FROM THE  *
.*          CONVERTER PARM FIELD BECOMES ESTIMATED CPU TIME.          *
.*       6) IF THE JOB/JOBPARM TIME IS > THAN CLASS LIMIT, THE        *
.*          CLASS LIMIT WILL APPLY AT **EXECUTION** TIME, BUT THE     *
.*          LARGER TIME WILL APPLY AT EXECUTION PRIORITIZATION.       *
.*       7) IF A REGION SIZE IS SPECIFIED ON THE JOB CARD, IT WILL    *
.*          BE USED IN THE EXECUTION PRIORITIZATION.                  *
.*       8) IF NO REGION SIZE APPEARS ON THE JOB CARD, THE JOB        *
.*          CLASS CONVERTER PARM DEFAULT REGION WILL BE USED FOR      *
.*          EXECUTION PRIORITIZATION.                                 *
.*       9) THE MESSAGES ON THE JES2 JOB LOG ARE CHANGED TO (A)       *
.*          PRINT 'ELAPSED EXEC TIME' RATHER THAN 'EXECUTION TIME'    *
.*          (SINCE THAT IS WHAT IT REALLY IS ANYHOW); PRINT THE       *
.*          JOB TIME LIMIT AS FACTORED; PRINT THE JOB CPU TIME AS     *
.*          REFACTORED BACK TO 1 MIP; PRINT THE FACTOR USED AND       *
.*          THE SYSTEM ID OF THE EXECUTION PROCESSOR.                 *
.*      10) THE FACTOR USED IS PLACED IN THE SMF TYPE 26 (JOB PURGE)  *
.*          RECORD AS A FULLWORD BINARY NUMBER, REPLACING SMF26RSV,   *
.*          A RESERVED FIELD.                                         *
.*      11) ***NOTE*** THIS MODIFICATION CHANGES THE MEANING OF       *
.*          THE JCTETIME PARAMETER.  &TIMEOPT=NO SHOULD BE SPECIFIED  *
.*          TO AVOID "EXECUTION TIMING" BY JES2 SINCE THIS MOD WILL   *
.*          TAKE THE PLACE OF THAT FACILITY AND USE THE OS TIME       *
.*          EXCESSION MECHANISMS.                                     *
.*      12) ***NOTE*** THIS MODIFICATION REQUIRES IEFACTRT TO PLACE   *
.*          THE JOB CPU TIME AT JOB END INTO JMRUCOM AND SET THE      *
.*          HIGH-ORDER BYTE TO X'77' OR THE CPU TIME LINE WILL NOT    *
.*          BE PRODUCED (MERELY THE TIME LIMIT LINE.)                 *
.*                                                                    *
.*       KAISER/PERMANENTE MEDICAL CARE PROGRAM                       *
.*       NORTHERN CALIFORNIA REGIONAL DATA CENTER                     *
.*       945 CAMELIA STREET, BERKELEY, CALIFORNIA 94710               *
.*       D. THEWLIS, JUNE 1, 1980.   (415) 428-6350                   *
.*                                                                    *
.*       MODIFICATION LEVEL:  FOR SU 825, JES2 RELEASE 4.1,           *
.*                            MSE/IPO 4.0 (3.8B) AT PTF LEVEL 8001,   *
.*                            INCL.   AZ27300 (CKPT DUPLEXING).       *
.*                                                                    *
.*                                                                    *
.*       THIS MODIFICATION WAS TAILORED FROM THE SHARE JES MODS       *
.*       TAPE VERSION 12.  MODIFICATIONS PARTICIPATING IN THIS MOD    *
.*       WERE AEP-46, SMSP-52, AND CSG-1Z.  THANK YOU AEP, MSP,       *
.*       AND CSG.                                                     *
.*                                                                    *
.**********************************************************************
         AIF   ('&V' EQ 'SVT').SVT
         AIF   ('&V' EQ 'JCT').JCT
         AIF   ('&V' EQ 'IDEFACT').IDEFACT
         AIF   ('&V' EQ 'IFACTOR').IFACTOR
         AIF   ('&V' EQ 'IFACTBL').IFACTBL
         AIF   ('&V' EQ 'IESTENT').IESTENT
         AIF   ('&V' EQ 'IFACENT').IFACENT
         AIF   ('&V' EQ 'MFACI26').MFACI26
         AIF   ('&V' EQ 'PFACTIM').PFACTIM
         AIF   ('&V' EQ 'PFACLIN').PFACLIN
         AIF   ('&V' EQ 'RNELD').RNELD
         AIF   ('&V' EQ 'RDEFRGP').RDEFRGP
         AIF   ('&V' EQ 'RBRREGN').RBRREGN
         AIF   ('&V' EQ 'RRGNTIM').RRGNTIM
         AIF   ('&V' EQ 'RKEYWRD').RKEYWRD
         AIF   ('&V' EQ 'RDFRGTM').RDFRGTM
         AIF   ('&V' EQ 'RRGPRIO').RRGPRIO
         AIF   ('&V' EQ 'RRGTABL').RRGTABL
         AIF   ('&V' EQ 'SADJUST').SADJUST
         AIF   ('&V' EQ 'XEQ1').XEQ1
         AIF   ('&V' EQ 'XEQ2').XEQ2
         AIF   ('&V' EQ 'XEQ3').XEQ3
         AIF   ('&V' EQ 'XEQ4').XEQ4
         MNOTE 12,'INVALID PARAMETER - &V'
         MEXIT
.SVT     ANOP
***********************************************************************
*   KHPRDC MODIFICATION FOR JOB TIME AND REGION CALCULATION.          *
*   $SVT MOD TO ADD CPU SPEED FACTOR. FOLLOWS LINE HN436000.          *
*   (AT HN436011 FOR JES2 MODIFICATION JE00011).                      *
***********************************************************************
$SVTCPUF DC    A(*-*)              CPU FACTOR FOR TIME ADJUST       KHP
*<-------RESUME VANILLA   $SVT  CODE AT THIS POINT--------------->* KHP
***********************************************************************
         MEXIT
.JCT     ANOP
***********************************************************************
*   KHPRDC MODIFICATION FOR JOB TIME AND REGION CALCULATION.          *
*   $JCT MOD TO ADD FIELDS FOR JMR FACTORED TIME LIMIT AND CPU        *
*   FOLLOWS LINE EB296000 AT EB296011 FOR JES2 MODIFICATION JE00011.  *
***********************************************************************
JCTEXFAC DC    A(*-*)              CPU FACTOR FOR TIME ADJUST       KHP
JCTEXJMT DC    A(*-*)              FACTORED JOB TIME LIMIT          KHP
*<-------RESUME VANILLA   $JCT  CODE AT THIS POINT--------------->* KHP
***********************************************************************
         MEXIT
.IDEFACT ANOP
***********************************************************************
*   KHPRDC MODIFICATION FOR JOB TIME AND REGION CALCULATION.          *
*   HASPINIT MOD TO SET DEFAULT CPU FACTOR TO 1.00 IN CASE NO         *
*   FACTOR TABLE ENTRY FOR THIS CPU.  LINE FOLLOWS M0454000.          *
***********************************************************************
         MVC   $SVTCPUF,=AL(L'$SVTCPUF)(100) SET FACTOR=1.00 DEF.   KHP
*<-------RESUME VANILLA   $SVT  CODE AT THIS POINT--------------->* KHP
***********************************************************************
         MEXIT
.IFACTOR ANOP
***********************************************************************
*   KHPRDC MODIFICATION FOR JOB TIME AND REGION CALCULATION.          *
*   HASPINIT MOD TO PROCESS FACTOR PARAMETER IN JESPARMS.             *
*   FACTOR HASPPARM ENTRY IS AS FOLLOWS:                              *
*   FACTOR SYS=XXXX,FACTOR=NNN     'XXXX' = SYSTEM ID (SMF/MAS)       *
*                                  'NNN'  = FACTOR (100 = 1 MIP)      *
*                                           (86 WOULD BE .86 MIP;     *
*                                           (560 WOULD BE 5.6 MIPS)   *
*   THIS CODE FOLLOWS LINE M1829500.                                  *
***********************************************************************
     TITLE 'HASP INITIALIZATION -- FACTOR PARAMETER PROCESSING'     KHP
NPLFACTR DS    0H                  PARAMETER LIBRARY FACTOR         KHP
         LA    WA,6(,WA)           POINT TO BLANK AFTER 'FACTOR'    KHP
         LA    R1,NPLDSAVE         USE SAVE AREA AS WORK            KHP
         SPACE 1                                                    KHP
         USING FCTDSECT,R1         WORK AREA ADDRESSABILITY         KHP
         SPACE 1                                                    KHP
         XC    FCT,FCT             CLEAR WORK AREA                  KHP
         L     R0,=A(NPLFCTST)     GET ADDRESS OF SCAN TABLE        KHP
         BAL   WE,NPLSSCAN         SCAN SUBPARAMETERS               KHP
         OC    FCTCPUF,FCTCPUF     CHECK IF FACTOR SUPPLIED         KHP
         BZ    NPLCOMNT            IGNORE IF NOT                    KHP
         L     WC,CVTPTR           POINT TO CVT                     KHP
         L     WC,CVTSMCA-CVTDSECT(,WC) POINT TO SMCA               KHP
         CLC   FCTSYS,SMCASID-SMCA(WC) IS THIS FOR OUR SYSTEM       KHP
         BNE   NPLCOMNT            PROCESS AS COMMENT IF NOT        KHP
         L     WC,$SSVT            POINT TO SSVT                    KHP
         USING SSVT,WC             SSVT ADDRESSABILITY              KHP
         MVC   $SVTCPUF,FCTCPUF    SET FACTOR IF FOR THIS CPU       KHP
         B     NPLCOMNT              AND PROCESS AS COMMENT         KHP
         DROP  R1,WC               DROP WORK AND SSVT               KHP
         SPACE 1                                                    KHP
FCTDSECT DSECT                                                      KHP
FCTSYS   DS    CL(L'SMCASID)       SYSTEM ID                        KHP
FCTCPUF  DS    FL(L'$SVTCPUF)      CPU SPEED FACTOR                 KHP
FCT      EQU   FCTDSECT,*-FCTDSECT FOR CLEARING AREA                KHP
HASPINIT CSECT                     RESUME CSECT                     KHP
*<-------RESUME VANILLA HASPINIT CODE AT THIS POINT-------------->* KHP
***********************************************************************
         MEXIT
.IFACTBL ANOP
         PUSH  PRINT                                                KHP
         PRINT ON,GEN                                               KHP
***********************************************************************
*   KHPRDC MODIFICATION FOR JOB TIME AND REGION CALCULATION.          *
*   HASPINIT MOD TO ADD $SCNTBL ENTRIES FOR FACTOR SCAN TABLE.        *
*   DEFINE 'SYS=' AND 'FACTOR=' OPERANDS FOR 'FACTOR' PARAMETER.      *
*   THIS CODE FOLLOWS LINE M1978000.                                  *
***********************************************************************
* NPLFCTST $SCNTBL FCTDSECT          FACTOR SCAN TABLE * COMMENTS   KHP
*          $SCNTBL SYS,L'FCTSYS,FCTSYS,NSCFLBLK        * EQUIV. TO  KHP
*          $SCNTBL FACTOR,L'FCTCPUF,FCTCPUF,NSCFLBIN   * SPECIFIED  KHP
*          $SCNTBL                   END OF SCAN TABLE * CODE       KHP
         POP   PRINT                                                KHP
NPLFCTST $SCNTBL FCTDSECT          FACTOR SCAN TABLE                KHP
         $SCNTBL SYS,L'FCTSYS,FCTSYS,NSCFLBLK                       KHP
         $SCNTBL FACTOR,L'FCTCPUF,FCTCPUF,NSCFLBIN                  KHP
         $SCNTBL                   END OF SCAN TABLE                KHP
         PUSH  PRINT                                                KHP
         PRINT ON,GEN                                               KHP
*<-------RESUME VANILLA HASPINIT CODE AT THIS POINT-------------->* KHP
***********************************************************************
         POP   PRINT                                                KHP
         MEXIT
.IESTENT ANOP
         PUSH  PRINT                                                KHP
         PRINT ON,GEN                                               KHP
***********************************************************************
*   KHPRDC MODIFICATION FOR JOB TIME AND REGION CALCULATION.          *
*   HASPINIT MOD TO CHANGE ESTIME ENTRY TO ALLOW 0 MINUTES SPECIFIED. *
*   THIS CODE REPLACES LINE M2004000.                                 *
***********************************************************************
*        $PTENT ,&&ESTIME,,,,,(0,1440)    &ESTIME STATEMENT FOLLOWS KHP
         POP   PRINT                                                KHP
         $PTENT ,&&ESTIME,,,,,(0,1440)    &ESTIME STATEMENT         KHP
         PUSH  PRINT                                                KHP
         PRINT ON,GEN                                               KHP
*<-------RESUME VANILLA HASPINIT CODE AT THIS POINT-------------->* KHP
***********************************************************************
         POP   PRINT                                                KHP
         MEXIT
.IFACENT ANOP
         PUSH  PRINT                                                KHP
         PRINT ON,GEN                                               KHP
***********************************************************************
*   KHPRDC MODIFICATION FOR JOB TIME AND REGION CALCULATION.          *
*   HASPINIT MOD TO ADD $PTENT ENTRY FOR FACTOR PARAMETER.            *
*   DEFINE 'FACTOR' PARAMETER ENTRY.                                  *
*   THIS CODE FOLLOWS LINE M2085000.                                  *
***********************************************************************
*        $PTENT 7,FACTOR,NPLFACTR  FACTOR STATMENT FOLLOWS          KHP
         POP   PRINT                                                KHP
         $PTENT 7,FACTOR,NPLFACTR  FACTOR STATMENT                  KHP
         PUSH  PRINT                                                KHP
         PRINT ON,GEN                                               KHP
*<-------RESUME VANILLA HASPINIT CODE AT THIS POINT-------------->* KHP
***********************************************************************
         POP   PRINT                                                KHP
         MEXIT
.MFACI26 ANOP
***********************************************************************
*   KHPRDC MODIFICATION FOR JOB TIME AND REGION CALCULATION.          *
*   HASPMISC MOD TO PUT CPU FACTOR VALUE INTO SMF TYPE 26 (JOB PURGE) *
*   RECORD.  REPLACES FIELD 'SMF26RSV', A RESERVED FIELD.             *
*   THIS CODE FOLLOWS LINE N0930000.                                  *
***********************************************************************
         MVC   SMF26RSV,JCTEXFAC   CPU EXECUTION FACTOR TO TYPE 26  KHP
*<-------RESUME VANILLA HASPMISC CODE AT THIS POINT-------------->* KHP
***********************************************************************
         MEXIT
.PFACTIM ANOP
***********************************************************************
*   KHPRDC MODIFICATION FOR JOB TIME AND REGION CALCULATION.          *
*   HASPPRPU MOD TO PRINT FACTORED JOB TIME LIMIT AND TIME USED,      *
*   EXECUTION CPU SPEED FACTOR, AND EXECUTION CPU ID ON JES2 JOB LOG. *
*   ***NOTE:  FOR THE FACTORED JOB TIME USED MESSAGE, A PARALLEL***   *
*   ***MODIFICATION TO SMF EXIT 'IEFACTRT' MUST PLACE THE CPU   ***   *
*   ***USED (IN .01 SECONDS) IN THE LOW-ORDER THREE BYTES OF    ***   *
*   ***THE SMF COMMON EXIT PARAMETER AREA USER COMMUNICATION    ***   *
*   ***FIELD AND SET THE HIGH-ORDER BYTE TO '77'.  NOTE THAT    ***   *
*   ***THIS FIELD IS IN FACT JCTUCOM AND IS MOVED BACK INTO THE ***   *
*   ***JES2 JCT AT JOB TERMINATION TIME BY HASPSSSM.            ***   *
*   THIS CODE FOLLOWS LINE Q3083000.                                  *
***********************************************************************
         MVC   PMESSAGE,PFACSTAT   FACTORED JOB TIME LIMIT MESSAGE  KHP
         ICM   R1,15,JCTEXJMT      GET FACTORED JCTJMRTM IN .01 SEC KHP
         CVD   R1,PCCWORK          CONVERT TO DECIMAL               KHP
         ED    PMESSAGE(10),PCCWORK+4 EDIT TO PRINT LINE            KHP
*        BAL   PL,PRCOMENT         PRINT COMMENT LINE               KHP
         L     R15,=A(PCOMMENT)    WRITE EXECUTION TIME             KHP
         BALR  R14,R15             PRINT COMMENT LINE               KHP
         CLI   JCTUCOM,X'77'       DID IEFACTRT PASS CPU TIME BACK  KHP
         BNE   JE011NFC            NO, DO NOT ISSUE CPU USED MSG    KHP
         MVC   PMESSAGE,PFACUSED   FACTORED JOB TIME USED MESSAGE   KHP
         SR    R15,R15             ZERO CONVERSION REGISTER         KHP
         ICM   R15,7,JCTUCOM+1     GET JCTJMRTM IN .01 SECONDS      KHP
         CLC   JCTEXFAC,$ZEROES    IS THERE A FACTOR?               KHP
         BNH   JE011NOF            NO, DO NOT FACTOR: /0 NOT GOOD   KHP
         LA    R14,100              SHIFT DECIMAL POINT             KHP
         MR    R14,R14               TWO PLACES                     KHP
         D     R14,JCTEXFAC         DIVIDE BY MACHINE FACTOR        KHP
JE011NOF LTR   R15,R15              IF RESULT IS ZERO               KHP
         BNZ   *+8                   GIVE A GENEROUS                KHP
         LA    R15,1                  .01 SECOND                    KHP
         CVD   R15,PCCWORK         CONVERT TO DECIMAL               KHP
         ED    PMESSAGE(10),PCCWORK+4 EDIT TO PRINT LINE            KHP
*        BAL   PL,PRCOMENT         PRINT COMMENT LINE               KHP
         L     R15,=A(PCOMMENT)    WRITE EXECUTION TIME             KHP
         BALR  R14,R15             PRINT COMMENT LINE               KHP
JE011NFC MVC   PMESSAGE,PFACSYS    FACTOR VALUE AND SYSID MESSAGE   KHP
         ICM   R1,15,JCTEXFAC      GET FACTOR FOR EXECUTION CPU     KHP
         CVD   R1,PCCWORK          CONVERT TO DECIMAL               KHP
         ED    PMESSAGE(10),PCCWORK+4 EDIT TO PRINT LINE            KHP
         MVC   PMESSAGE+33(4),JCTEXSID     GET EXECUTION SYSTEM ID  KHP
*        BAL   PL,PRCOMENT         PRINT COMMENT LINE               KHP
         L     R15,=A(PCOMMENT)    WRITE EXECUTION TIME             KHP
         BALR  R14,R15             PRINT COMMENT LINE               KHP
*<-------RESUME VANILLA HASPPRPU CODE AT THIS POINT-------------->* KHP
***********************************************************************
         MEXIT
.PFACLIN ANOP
***********************************************************************
*   KHPRDC MODIFICATION FOR JOB TIME AND REGION CALCULATION.          *
*   HASPPRPU MOD TO ADD FACTORED TIME AND FACTOR/SYSTEM MESSAGES.     *
*   FACTOR, AND EXECUTION CPU ID ON JES2 JOB LOG, AND TO CHANGE       *
*   PXEQSTAT MESSAGE TO READ 'ELAPSED TIME'.                          *
*   THIS CODE REPLACES LINE Q5127000.                                 *
***********************************************************************
PXEQSTAT DC    X'4020206B2021204B2020',CL29' MINUTES ELAPSED EXEC TIME'
PFACSTAT DC    X'4020206B2021204B2020',CL29' SECONDS FACTORED TIME LIMIC
               T'                                                   KHP
PFACUSED DC    X'4020206B2021204B2020',CL29' SECONDS FACTORED TIME USEDC
               '                                                    KHP
PFACSYS  DC    X'4020206B2021204B2020',CL29' WAS FACTOR FOR SYSTEM XXXXC
               '                                                    KHP
*<-------RESUME VANILLA HASPPRPU CODE AT THIS POINT-------------->* KHP
***********************************************************************
         MEXIT
.RNELD   ANOP
***********************************************************************
*   KHPRDC MODIFICATION FOR JOB TIME AND REGION CALCULATION.          *
*   HASPRDR MOD TO ADD OS NEL DSECT.  FOLLOWS LINE R0286000.          *
***********************************************************************
         $NEL  LIST=&LIST          GENERATE OS NEL DSECT            KHP
*<-------RESUME VANILLA HASPRDR CODE AT THIS POINT--------------->* KHP
***********************************************************************
         MEXIT
.RDEFRGP ANOP
***********************************************************************
*   KHPRDC MODIFICATION FOR JOB TIME AND REGION CALCULATION.          *
*   HASPRDR MOD TO SET DEFAULT MAX REGION VALUE (IF CLASS CONVPARM    *
*   DEFAULT REGION IS ZERO).  FOLLOWS LINE R2602000.                  *
***********************************************************************
*  NOTE: JCTOPRIO USED TO HOLD 1-BYTE REGION VALUE TILL RJOBEND.    KHP
         MVI   JCTOPRIO,X'FF'      FORCE LARGEST POSSIBLE ESTIMATE  KHP
*<-------RESUME VANILLA HASPRDR CODE AT THIS POINT--------------->* KHP
***********************************************************************
         MEXIT
.RBRREGN ANOP                                                       KHP
***********************************************************************
*   KHPRDC MODIFICATION FOR JOB TIME AND REGION CALCULATION.          *
*   HASPRDR MOD TO BRANCH TO REGION/TIME CALCULATION MOD INSTEAD OF   *
*   TYPRUN PROCESSING.  REPLACES LINE R2808000.                       *
***********************************************************************
         BNE   RJOBREG             BRANCH IF NOT 'CLASS'            KHP
*<-------RESUME VANILLA HASPRDR CODE AT THIS POINT--------------->* KHP
***********************************************************************
         MEXIT
.RRGNTIM ANOP
         EJECT                                                      KHP
***********************************************************************
*   KHPRDC MODIFICATION FOR JOB TIME AND REGION CALCULATION.          *
*   HASPRDR MOD TO (1) EXTRACT THE REGION VALUE IF SPECIFIED ON THE   *
*   JOB CARD, COMPUTES THE # OF 64K INCREMENTS REPRESENTED BY THE     *
*   REGION PARAMETER, AND SAVES IT IN JCTOPRIO; (2) EXTRACTS THE TIME *
*   VALUE IF SPECIFIED ON THE JOB CARD, ROUNDING IT UP TO THE NEXT    *
*   HIGHER MINUTE IF SECONDS ARE SPECIFIED, AND SETS JCTETIME TO THE  *
*   JOB CARD SPECIFIED TIME.  FOLLOWS LINE R2822000.                  *
***********************************************************************
RJOBREG  CLC   2(6,RW),RREGION     IS THIS REGION KEYWORD?          KHP
         BNE   RJOBTIME            NO, TEST FOR TIME KEYWORD        KHP
         LR    R9,RW               SET SECOND SCAN POINTER          KHP
RJOBINC1 CLI   9(R9),C'0'          IS THIS COLUMN A DIGIT?          KHP
         BL    RILLJOBC            NO - INVALID REGION SPECIFIED    KHP
         BXH   R9,R14,RJOBINCR     ADVANCE TO NEXT COLUMN           KHP
         CLI   9(R9),C'K'          TEST FOR DELIMITER 'K'           KHP
         BNE   RJOBINC1            NO, CHECK NEXT CHARACTER A DIGIT KHP
         SR    R9,RW               NUMBER OF DIGITS TO BE PACKED    KHP
         BCTR  R9,0                MINUS ONE FOR EXECUTE            KHP
         EX    R9,RPACK9           PACK REQUESTED REGION SIZE       KHP
         CVB   R9,RTEMP            CONVERT TO BINARY VALUE          KHP
         A     R9,=F'63'           ROUND TO NEXT MULTIPLE OF 64K    KHP
         SRL   R9,6                GET # 64K INCREMENTS FOR REGION  KHP
         STC   R9,JCTOPRIO         SAVE IN JCTOPRIO TEMPORARILY     KHP
         B     RJOBINCR            FIND NEXT KEYWORD                KHP
         SPACE 3                                                    KHP
RJOBTIME CLC   4(4,RW),RTIME       IS THIS TIME KEYWORD?            KHP
*                                  --> EXIT FROM MODIFICATION <--   KHP
         BNE   RJOBTYPR            NO, TRY TYPRUN                   KHP
         LR    R9,RW               SET SECOND SCAN POINTER          KHP
         CLI   9(R9),C'('          'TIME=(......)' SPECIFIED?       KHP
         BNE   RJOBTIM1                  NO, SIMPLE FORM            KHP
         LA    R9,1(,R9)           ADJUST PAST '('                  KHP
         CLI   9(R9),C','          'TIME=(,..)' SPECIFIED?          KHP
         BNE   RJOBTIM1            NO, GET TIME ESTIMATE            KHP
         LA    R9,1                TIME < 1 MINUTE SPECIFIED;       KHP
         ST    R9,JCTETIME         SET ESTIME = 1 MINUTE            KHP
         B     RJOBINCR            EXIT FOR NEXT KEYWORD            KHP
         SPACE 1                                                    KHP
RJOBTIM1 CLI   9(R9),C'0'          IS THIS CHARACTER A DIGIT?       KHP
         BL    RILLJOBC            NO, INVALID TIME PARAMETER       KHP
         BXH   R9,R14,RJOBINCR     ADVANCE TO NEXT COLUMN           KHP
         CLI   9(R9),C','          DELIMITED BY ',' ?               KHP
         BE    RJOBTIM2                YES, GO COMPUTE TIME         KHP
         CLI   9(R9),C' '          DELIMITED BY ' ' ?               KHP
         BE    RJOBTIM2                YES, GO COMPUTE TIME         KHP
         CLI   9(R9),C')'          DELIMITED BY ')' ?               KHP
         BNE   RJOBTIM1                NO, GO CHECK NEXT DIGIT      KHP
         SPACE 1                                                    KHP
RJOBTIM2 SR    R9,RW               NUMBER OF DIGITS TO BE PACKED    KHP
         BCTR  R9,0                MINUS ONE FOR EXECUTE            KHP
         CLI   9(RW),C'('          WAS THIS 'TIME=(......)' ?       KHP
         BE    RJOBTIM3            YES, GO PROCESS                  KHP
         EX    R9,RPACK9           PACK TIME IN MINUTES             KHP
         CVB   R9,RTEMP            CONVERT TO BINARY                KHP
         ST    R9,JCTETIME         SET JOB ESTIMATED TIME           KHP
         B     RJOBINCR            GO FIND NEXT KEYWORD             KHP
         SPACE 1                                                    KHP
RJOBTIM3 BCTR  R9,0                MINUS ONE MORE FOR LEFT PAREN.   KHP
         EX    R9,RPACK10          PACK TIME IN MINUTES             KHP
         CVB   R9,RTEMP            CONVERT TO BINARY                KHP
         LA    R9,1(,R9)           PLUS 1 FOR PARTIAL MINUTE        KHP
         ST    R9,JCTETIME         SET JOB ESTIMATED TIME           KHP
         B     RJOBINCR            GO FIND NEXT KEYWORD             KHP
         SPACE 1                                                    KHP
RPACK9   PACK  RTEMP,9(0,RW)       *** EXECUTE ONLY ***             KHP
RPACK10  PACK  RTEMP,10(0,RW)      *** EXECUTE ONLY ***             KHP
*<-------RESUME VANILLA HASPRDR CODE AT THIS POINT--------------->* KHP
***********************************************************************
         EJECT                                                      KHP
         MEXIT
.RKEYWRD ANOP
***********************************************************************
*   KHPRDC MODIFICATION FOR JOB TIME AND REGION CALCULATION.          *
*   HASPRDR MOD TO INSERT KEYWORDS FOR 'REGION' AND 'TIME' IN JOB     *
*   CARD SCAN KEYWORD TABLE.  FOLLOWS LINE R3225900.                  *
***********************************************************************
RREGION  DC    CL6'REGION'         *                                KHP
RTIME    DC    CL4'TIME'           *                                KHP
*<-------RESUME VANILLA HASPRDR CODE AT THIS POINT--------------->* KHP
***********************************************************************
         MEXIT
.RDFRGTM ANOP
***********************************************************************
*   KHPRDC MODIFICATION FOR JOB TIME AND REGION CALCULATION.          *
*   HASPRDR MOD TO SET DEFAULT REGION INCREMENT VALUE AND DEFAULT     *
*   TIME FROM CLASS ATTRIBUTE TABLE IF NOT SET ALREADY.               *
*   FOLLOWS LINE R3763500.                                            *
***********************************************************************
         IC    RW,JCTJCLAS         OBTAIN JOB CLASS                 KHP
         N     RW,=A(X'3F')        ISOLATE RELATIVE CAT ENTRY #     KHP
         SLL   RW,5                MULTIPLY BY LENGTH OF CAT ENTRY  KHP
         AL    RW,$CATABLE         ADDRESS CAT ENTRY FOR JOB CLASS  KHP
         PUSH  USING               SAVE USING STATUS                KHP
         USING CATDSECT,RW         ADDRESS CLASS ATTRIBUTE TABLE    KHP
         CLI   JCTOPRIO,X'FF'      HAS REGION PARAMETER BEEN USED   KHP
         BNE   JE11DOTM            YES, GO TO DEFAULT TIME LOGIC    KHP
CATREG   EQU   CATCONVP+(NELREG-NELPARMO)  DISPL TO DEFAULT REGION  KHP
         PACK  RTEMP,CATREG(3)     PACK DEFAULT REGION SIZE         KHP
         CVB   R9,RTEMP            CONVERT TO BINARY VALUE          KHP
         A     R9,=F'63'           ROUND TO NEXT MULTIPLE OF 64K    KHP
         SRL   R9,6                GET # 64K INCREMENTS FOR REGION  KHP
         STC   R9,JCTOPRIO         SAVE IN JCTOPRIO TEMPORARILY     KHP
         SPACE 1                                                    KHP
JE11DOTM SR    R9,R9               GET VALUE OF ZERO                KHP
         C     R9,JCTETIME         HAS ANY TIME BEEN SET?           KHP
*------->NOTE: THIS MOD REQUIRES THAT $ESTIME = 0 MINUTES           KHP
         BNE   JE11EXIT            YES, BYPASS SETTING DEFAULT      KHP
CATTIME  EQU   CATCONVP+(NELTIME-NELPARMO)  DISPL TO DEFAULT TIME   KHP
         PACK  RTEMP,CATTIME(4)    PACK DEFAULT CLASS TIME          KHP
         CVB   R9,RTEMP            CONVERT TO BINARY                KHP
         CLC   CATTIME+4(2),=C'00' ANY SECONDS ON DEFAULT TIME?     KHP
         BE    *+8                 NO, LEAVE MINUTES ALONE          KHP
         LA    R9,1(,R9)           ADJUST ESTIMATE UP ONE MINUTE    KHP
         ST    R9,JCTETIME         SET NEW ESTIMATED TIME FOR JOB   KHP
JE11EXIT DS    0H                  EXIT FROM MODIFICATION           KHP
         POP   USING               RESTORE USING STATUS             KHP
*<-------RESUME VANILLA HASPRDR CODE AT THIS POINT--------------->* KHP
***********************************************************************
         MEXIT
.RRGPRIO ANOP
***********************************************************************
*   KHPRDC MODIFICATION FOR JOB TIME AND REGION CALCULATION.          *
*   HASPRDR MOD TO SET CALCULATE PRIORITY FROM REGION INCREMENT       *
*   IN ADDITION TO TIME AND OUTPUT LINES ESTIMATED.                   *
*   REPLACES LINES R3802000 TO R3804000.                              *
***********************************************************************
         ALR   R0,RW               ADD FIRST TWO PRIORITIES         KHP
         LA    R1,RREGTAB-4        PREPARE TO SEARCH REGION TABLE   KHP
RPRISCH3 LA    R1,4(,R1)           ADVANCE TO NEXT ENTRY            KHP
         CLC   JCTOPRIO(1),3(R1)   COMPARE ESTIMATED REGION SIZE IN KHP
         BH    RPRISCH3            64K INCR. TO TABLE ENTRIES       KHP
         AH    R0,0(,R1)           ADD ASSOC. PRIORITY VALUE        KHP
         SRL   R0,2                TAKE AVERAGE OF 3 PRIORITIES     KHP
         LR    RW,R0               RESTORE WORK REGISTER            KHP
         SR    R0,R0               CLEAR REGISTER ZERO              KHP
*<-------RESUME VANILLA HASPRDR CODE AT THIS POINT--------------->* KHP
***********************************************************************
         MEXIT
.RRGTABL ANOP
***********************************************************************
*   KHPRDC MODIFICATION FOR JOB TIME AND REGION CALCULATION.          *
*   HASPRDR MOD TO INSERT REGION PRIORITY TABLE.                      *
*   FOLLOWS LINE R5270000.                                            *
***********************************************************************
RREGTAB  DS    0H                  ESTIMATED REGION PRIORITY TABLE  KHP
         DC    AL2(15),AL2(X'01')   PRTY=15, REGION=64K      64     KHP
         DC    AL2(14),AL2(X'02')   PRTY=14, REGION=128K     64     KHP
         DC    AL2(13),AL2(X'03')   PRTY=13, REGION=192K     64     KHP
         DC    AL2(12),AL2(X'04')   PRTY=12, REGION=256K     64     KHP
         DC    AL2(11),AL2(X'06')   PRTY=12, REGION=384K    128     KHP
         DC    AL2(10),AL2(X'08')   PRTY=10, REGION=512K    128     KHP
         DC    AL2(09),AL2(X'0A')   PRTY= 9, REGION=640K    128     KHP
         DC    AL2(08),AL2(X'0C')   PRTY= 8, REGION=768K    128     KHP
         DC    AL2(07),AL2(X'0E')   PRTY= 7, REGION=896K    128     KHP
         DC    AL2(06),AL2(X'10')   PRTY= 6, REGION=1024K   128     KHP
         DC    AL2(05),AL2(X'20')   PRTY= 5, REGION=2048K  1024     KHP
         DC    AL2(04),AL2(X'30')   PRTY= 4, REGION=3072K  1024     KHP
         DC    AL2(03),AL2(X'40')   PRTY= 3, REGION=4096K  1024     KHP
         DC    AL2(02),AL2(X'60')   PRTY= 2, REGION=6144K  2048     KHP
         DC    AL2(01),AL2(X'80')   PRTY= 1, REGION=8192K  2048     KHP
         DC    AL2(00),AL2(X'FFFF') PRTY= 0,REGION=16M     8192     KHP
         DC    AL4(X'FFFFFF')       END OF TABLE                    KHP
*<-------RESUME VANILLA HASPRDR CODE AT THIS POINT--------------->* KHP
***********************************************************************
         MEXIT
.SADJUST ANOP
***********************************************************************
*   KHPRDC MODIFICATION FOR JOB TIME AND REGION CALCULATION.          *
*   HASPSSSM MODIFICATION TO ADJUST JOB TIME BASED ON CPU FACTOR.     *
*   AT ENTRY WE ARE IN JOB SELECT.  JCTJMRTL WILL BE SET TO JOB TIME  *
*   LIMIT IF TIME WAS SPECIFIED ON JOB CARD AND JCTETIME WILL HAVE    *
*   BEEN SET TO SAME TIME BY RDR MODIFICATION.  IF TIME NOT SPECIFIED *
*   ON JOB CARD, JCTETIME CONTAINS TIME SPECIFIED ON JOBPARM CARD     *
*   OR (IF NONE) THE DEFAULT TIME FROM THE CONVERTER PARM FIELD.      *
*   NOTE THAT THIS SHOULD NOT HAPPEN SINCE THE XEQ MODIFICATION       *
*   ENFORCES A JOB TIME LIMIT PARAMETER.                              *
*   FOLLOWS LINE T2048500.                                            *
***********************************************************************
         TM    SJBFLG1,SJB1SJID    SELECT BY ID(STC,TSU)?           KHP
         BO    TIMEBYP             BYPASS TIME ADJUST IF SO         KHP
         L     RSDB,LCTJCTAD       PICK UP OS JCT                   KHP
         USING IEFAJCTB,RSDB       OS JCT ADDRESSABILITY            KHP
         SR    R14,R14             SET R14 ZERO FOR MULTIPLY        KHP
         L     R15,JCTETIME        USE ESTTIME IF NO JCTJMRTL.      KHP
         M     R14,=A(100)         GET ESTIME IN .01 SECONDS        KHP
         LR    R14,R15             AND SET IN R14                   KHP
         MVC   JCTEXFAC,=A(100)    DEFAULT EX CPU FACTOR = 1.00     KHP
         ICM   R15,7,JCTJMRTL      PICK UP JOB TIME                 KHP
         BZ    TIMEMAX             ZERO...USE MAX/DEFAULT           KHP
         CR    R15,R14             IS IT OVER MAX?                  KHP
         BNH   TIMEOK              NO...TIME IS OK                  KHP
TIMEMAX  LR    R15,R14             SET TIME TO MAX/DEFAULT          KHP
TIMEOK   DS    0H                  TIME IS WITHIN CLASS MAX         KHP
         C     R15,=A(1439*60*100) DO WE ADJUST FOR CPU?            KHP
         BNH   *+8                 NOT GT -- 1439...OK              KHP
         L     R15,=A(1439*60*100) SET ABSOLUTE MAXIMUM             KHP
         LA    R14,100              SHIFT DECIMAL POINT             KHP
         MR    R14,R14               TWO PLACES                     KHP
         D     R14,$SVTCPUF         DIVIDE BY MACHINE FACTOR        KHP
         MVC   JCTEXFAC,$SVTCPUF    EXECUTION CPU FACTOR FOR PRPU   KHP
         LTR   R15,R15              IF RESULT IS ZERO               KHP
         BNZ   *+8                   GIVE A GENEROUS                KHP
         LA    R15,1                  .01 SECOND                    KHP
         CL    R15,=A(1439*60*100)  IF TOO BIG                      KHP
         BNH   *+8                   GIVE 1439                      KHP
         L     R15,=A(1439*60*100)    MINUTES                       KHP
         STCM  R15,7,JCTJMRTL       MOVE IN ADJUSTED TIME           KHP
         STCM  R15,15,JCTEXJMT     SAVE JOB MAX TIME FOR PRPU       KHP
         ICM   RSDB,7,JCTSDKAD     FIRST SCT (3 BYTE ADDRESS)       KHP
         USING IEFASCTB,RSDB       SCT ADDRESSABILITY               KHP
SCTLOOP  ICM   R15,7,SCTSTIME      STEP TIME                        KHP
         BZ    SCTNEXT             NEXT SCT IF TIME=0               KHP
*        THE ADJUST OF SCT TIME IS SKIPPED IF STEP TIME IS          KHP
*        ZERO.  STEP TIME OF ZERO MEANS USE WHAT IS LEFT FROM       KHP
*        THE PRIOR STEP.  THE CONVERTER USES THIS WHEN THE          KHP
*        USER CODES "//   EXEC  PROCNAME,TIME=N".  IN THIS          KHP
*        CASE, THE FIRST STEP IS GIVEN THE FULL N MINUTES AND       KHP
*        REMAINING STEPS ARE GIVEN TIME=0.  THE REMAINING STEPS     KHP
*        WILL THUS USE WHATEVER TIME IS LEFT FROM PRIOR STEP(S)     KHP
*        IN THE PROC.  THE EFFECT IS THAT THE CODING OF A TIME      KHP
*        IN THE EXECUTION OF A PROC (USING TIME=N RATHER THAN       KHP
*        TIME.STEP=N) CAUSES THE TOTAL PROC TO GET N MINUTES.       KHP
         CL    R15,=A(1439*60*100) DO WE ADJUST?                    KHP
         BE    SCTNEXT              NO....NEXT SCT                  KHP
         BL    *+8                  YES...GO DO IT                  KHP
         L     R15,=A(1439*60*100)  SET ABSOLUTE MAXIMUM            KHP
         LA    R14,100              MULTIPLY STEP                   KHP
         MR    R14,R14                TIME BY 100                   KHP
         D     R14,$SVTCPUF         DIVIDE BY CPU FACTOR            KHP
         LTR   R15,R15              IS IT ZERO                      KHP
         BNZ   *+8                  SKIP NSI IF NOT                 KHP
         LA    R15,1                GIVE .01 SEC IF SO              KHP
         C     R15,=A(1439*60*100)  OVER MAXIMUM                    KHP
         BNH   *+8                  NO....SKIP NSI                  KHP
         L     R15,=A(1439*60*100)  YES...SET ABSOLUTE MAX          KHP
         STCM  R15,7,SCTSTIME      SET STEP ADJUSTED STEP TIME      KHP
SCTNEXT  ICM   RSDB,7,SCTANSCT     NEXT SCT (3 BYTE ADDRESS)        KHP
         BNZ   SCTLOOP             PROCESS IF MORE                  KHP
         DROP  RSDB                DROP OS JCT ADDRESSABILITY       KHP
TIMEBYP  DS    0H                  BYPASS TIME ADJUST               KHP
*<-------RESUME VANILLA HASPRDR CODE AT THIS POINT--------------->* KHP
***********************************************************************
         MEXIT
.XEQ1    ANOP
***********************************************************************
*   KHPRDC MODIFICATION FOR JOB TIME AND REGION CALCULATION.          *
*   HASPXEQ MODIFICATION TO BRANCH TO JOB TIME LIMIT CHECKING IN      *
*   CONVERTER EXIT.  REPLACES LINE U2129000.                          *
***********************************************************************
         BZ    XJOB                UNSUCCESSFUL, SCAN FOR "TIME"    KHP
*<-------RESUME VANILLA HASPXEQ CODE AT THIS POINT--------------->* KHP
***********************************************************************
         MEXIT
.XEQ2    ANOP
***********************************************************************
*   KHPRDC MODIFICATION FOR JOB TIME AND REGION CALCULATION.          *
*   HASPXEQ MODIFICATION TO BRANCH TO JOB TIME LIMIT CHECKING IN      *
*   CONVERTER EXIT.  REPLACES LINE U2132000.                          *
***********************************************************************
         BNE   XJOB                NONE, SCAN FOR "TIME"            KHP
*<-------RESUME VANILLA HASPXEQ CODE AT THIS POINT--------------->* KHP
***********************************************************************
         MEXIT
.XEQ3    ANOP                                                       KHP
         EJECT
***********************************************************************
*   KHPRDC MODIFICATION FOR JOB TIME AND REGION CALCULATION.          *
*   HASPXEQ MODIFICATION TO ADJUST JOB TIME / JOBPARM TIME VALUES     *
*   PROPERLY.  (1) IF TIME WAS SPECIFIED ON JOB CARD, RDR MOD SET     *
*   JCTETIME EQUAL TO JOB CARD TIME PARAMETER, TO ENSURE JOB WAS      *
*   PRIORITIZED PROPERLY.  (2)  IF NO TIME WAS SPECIFIED ON JOB OR    *
*   JOBPARM, RDR MOD SET JCTETIME TO CONVERTER PARM DEFAULT TIME FOR  *
*   JOB.  THE XEQ MODIFICATION DOES THE FOLLOWING:                    *
*   (A) IF A TIME WAS SPECIFIED ON THE JOB CARD (CASE 1 ABOVE) WHICH  *
*       IS GREATER THAN THE CONVPARM LIMIT FOR THE CLASS, IT IS       *
*       DELETED AND THE CLASS LIMIT USED TO SET TIME LIMIT FOR JOB.   *
*   (B) IF NO TIME WAS SPECIFIED ON THE JOB CARD, THE LESSER OF       *
*       JCTETIME OR THE CONVPARM LIMIT FOR THE CLASS WILL BE USED     *
*       TO SET THE TIME LIMIT FOR THE JOB.                            *
*   PART 3 FOLLOWS LINE U2133000.                                     *
***********************************************************************
*        GET JCTETIME (USED TO PRIORITIZE JOB) IN MINUTES           KHP
XJOB     L     WB,JCTETIME         GET ESTIMATED JOB TIME USED TO   KHP
         SR    WA,WA               PRIORITIZE JOB; DIVIDE BY 60     KHP
         D     WA,=F'60'           TO GET MINUTES                   KHP
         CVD   WA,XDOUBLE          CONVERT SECONDS TO DECIMAL       KHP
         UNPK  JCTWORK+15(3),XDOUBLE+6(2)  UNPACK IN COMPARE FIELD  KHP
         OI    JCTWORK+17,C'0'     ENSURE NUMERIC                   KHP
         CVD   WB,XDOUBLE          CONVERT MINUTES TO DECIMAL       KHP
         UNPK  JCTWORK+11(5),XDOUBLE+5(3)  UNPACK                   KHP
         OI    JCTWORK+15,C'0'     ENSURE ZONE IS NUMERIC           KHP
*        GET CAT CONVPARM TIME VALUES (MAX FOR CLASS)               KHP
         IC    WB,JCTJCLAS         JOB CLASS FROM JCT               KHP
         N     WB,=A(X'3F')        ISOLATE RELATIVE CAT ENTRY #     KHP
         SLL   WB,5                MULTIPLY BY CAT LENGTH           KHP
         AL    WB,$CATABLE         ADD ADDRESS OF FIRST CAT         KHP
         PUSH  USING               SAVE USING STATUS                KHP
         USING CATDSECT,WB         ADDRESS CLASS ATTRIBUTE TABLE    KHP
CATTIME  EQU   CATCONVP+(NELTIME-NELPARMO) DISPL TO DEFAULT TIME    KHP
*        DETERMINE IF A TIME VALUE WAS ON THE JOB CARD              KHP
XTIMFIND LA    WE,STRJKEY          POINT TO 1ST KEYWORD SEQUENCE    KHP
         ICM   R15,8,XTIMEKEY      KEYWORD FOR 'TIME='              KHP
         ST    WB,XDOUBLE          SAVE ADDRESS OF CAT ENTRY        KHP
         BAL   WD,XINTKEY          TRY TO LOCATE KEY                KHP
         L     WB,XDOUBLE          RESTORE CAT ENTRY ADDRESS        KHP
         BNZ   XJOBTIME            BR IF FOUND TIME PARAMETER.      KHP
*        NO TIME SPECIFIED.  SET JOB TIME TO LESSER OF CONVPARM     KHP
*        CLASS MAX OR JCTETIME ESTIMATED TIME.                      KHP
         MVC   0(L'XTIMETXT,WE),XTIMETXT MOVE 'TIME=' TEXT TO       KHP
*                                           END OF TEXT STRING      KHP
         LH    WD,STRLTH           GET LENGTH OF JOB TEXT STRING    KHP
         LA    WD,L'XTIMETXT-1(,WD) ADD LEN. OF NEW TEXT            KHP
*                                     (MINUS 1 FOR END KEY)         KHP
         STH   WD,STRLTH           STORE UPDATED LENGTH             KHP
         CLC   JCTWORK+12(6),CATTIME   ESTIMATED TIME > CLASS MAX?  KHP
         BH    XJOBTIM1            YES, USE CLASS MAXIMUM           KHP
         MVC   3(4,WE),JCTWORK+12  JOB TIME = JCTETIME EXPRESSED AS KHP
         MVC   8(2,WE),JCTWORK+16  MINUTES; 00 SECONDS              KHP
         B     XJCLEXIT            EXIT: JOB TIME IS SET            KHP
XJOBTIM1 MVC   3(4,WE),CATTIME     MOVE MINUTES TO 1ST OF 2 FIELDS  KHP
         MVC   8(2,WE),CATTIME+4   MOVE SECONDS TO 2ND OF 2 FIELDS  KHP
         B     XJCLEXIT            AND EXIT:  JOB TIME IS SET       KHP
*        TIME SPECIFIED ON JOB CARD.  IF GREATER THAN JCTETIME      KHP
*        OR GREATER THAN CONVPARM CLASS MAX, RESET TIME TO LESSER   KHP
*        OF ESTIME OR CONVPARM CLASS MAXIMUM.                       KHP
XJOBTIME MVC   JCTWORK+5(6),=CL6'000000' INITIALIZE TIME RCV AREA   KHP
         CLI   2(WE),0             MINUTES LENGTH ZERO?             KHP
         BNH   XJOBTIMS            YES, GO DO SECONDS               KHP
         SR    WA,WA               ZERO TARGET REGISTER             KHP
         IC    WA,2(WE)            GET LENGTH OF TIME PARAMETER     KHP
         BCTR  WA,0                DECREMENT FOR EXECUTE            KHP
         EX    WA,*+8              EXECUTE-PACK THE TIME            KHP
         B     *+10                BRANCH AROUND EXECUTED INST.     KHP
         PACK  XDOUBLE,3(0,WE)     ***EXECUTE-ONLY***               KHP
         UNPK  JCTWORK+4(5),XDOUBLE+5(3) UNPACK THE TIME LIMIT      KHP
         OI    JCTWORK+8,C'0'      ENSURE ZONE IS NUMERIC           KHP
XJOBTIMS CLI   1(WE),1             WERE ONLY MINUTES SPECIFIED?     KHP
         BNH   XJOBTIMX            YES, LEAVE SECONDS 00            KHP
         SR    WA,WA               ZERO TARGET REGISTER             KHP
         IC    WA,2(WE)            GET LENGTH OF MINUTES SUBPARAM   KHP
         LA    WD,1(WA,WE)         DISPLACE PAST MINUTES SUBPARAM   KHP
         CLI   2(WD),0             SECONDS LENGTH ZERO              KHP
         BNH   XJOBTIMX            YES, GO CHECK OUT TIMES          KHP
         IC    WA,2(WD)            GET LENGTH OF SECONDS FIELD      KHP
         BCTR  WA,0                DECREMENT FOR EXECUTE            KHP
         EX    WA,*+8              EXECUTE-PACK THE TIME            KHP
         B     *+10                BRANCH AROUND EXECUTED INST.     KHP
         PACK  XDOUBLE,3(0,WD)     ***EXECUTE-ONLY***               KHP
         UNPK  JCTWORK+9(3),XDOUBLE+6(2) UNPACK THE TIME LIMIT      KHP
         OI    JCTWORK+11,C'0'     ENSURE ZONE IS NUMERIC           KHP
         MVC   JCTWORK+9(2),JCTWORK+10 SHIFT SECONDS INTO PLACE     KHP
XJOBTIMX CLC   JCTWORK+5(6),JCTWORK+12 TIME PARAMETER GT ESTIME?    KHP
         BH    XTIMKILL            YES, RESET TIME LIMIT            KHP
         CLC   JCTWORK+5(6),CATTIME    TIME PARAMETER GT CLASS MAX? KHP
         BNH   XJCLEXIT            NO, ACCEPT IT AS TIME LIMIT      KHP
XTIMKILL SR    WA,WA               ZERO TARGET REGISTER             KHP
         IC    WA,2(WE)            LENGTH OF FIRST PARAMETER        KHP
         LA    WD,3(WA)            PARMLENGTH + L'TIMEJK + #SUBPRMS KHP
         CLI   1(WE),1             IS THERE A SECOND SUBPARAMETER?  KHP
         BNH   XTIMKIL2            NO, BYPASS LENGTH INCREMENT      KHP
         IC    WA,0(WD,WE)         GET LENGTH OF SECOND PARAMETER   KHP
         LA    WD,1(WA,WD)         WD = LENGTH OF TIME FIELD        KHP
XTIMKIL2 ST    WD,XDOUBLE          SAVE LENGTH OF TIME FIELD        KHP
         ST    WE,XDOUBLE+4        SAVE ADDRESS OF TIME FIELD       KHP
         ICM   R15,8,=AL1(ENDK)    SET UP TO FIND END OF STRING     KHP
         BAL   WD,XINTKEY          GO FIND END OF STRING            KHP
         LA    WD,1(,WE)           POINT PAST END KEY               KHP
         S     WD,XDOUBLE+4        GET LENGTH OF STRING INCL TIME   KHP
         S     WD,XDOUBLE          REMOVE LENGTH OF TIME FIELD      KHP
         L     WA,XDOUBLE+4        POINT TO TIME FIELD              KHP
         LR    WB,WA               ADDRESS OF TIME FIELD + LENGTH   KHP
         A     WB,XDOUBLE          OF TIME FIELD POINTS TO NEXT     KHP
         BCTR  WD,0                DROP FOR EXECUTE                 KHP
         EX    WD,*+8              OVERLAY TIME FIELD WITH REST OF  KHP
         B     *+10                TEXT STRING                      KHP
         MVC   0(0,WA),0(WB)       SHIFT STRING DOWN BY PROPER LGH  KHP
         LA    WA,1(WD,WA)         POINT TO NEW END OF STRING       KHP
         XC    0(10,WA),0(WA)      ZAP END OF TEXT BUFFER           KHP
         LH    WA,STRLTH           GET LENGTH OF TEXT STRING        KHP
         S     WA,XDOUBLE          DROP BY LENGTH OF REMOVED TIME   KHP
         STH   WA,STRLTH           FIELD, AND RESTORE               KHP
         B     XJOB                RECURSE THROUGH TIME SET LOGIC   KHP
         POP   USING               RESTORE R1 USING IF ANY          KHP
*<-------RESUME VANILLA HASPXEQ CODE AT THIS POINT--------------->* KHP
***********************************************************************
         MEXIT
.XEQ4    ANOP
         SPACE 1                                                    KHP
***********************************************************************
*   KHPRDC MODIFICATION FOR JOB TIME AND REGION CALCULATION.          *
*   HASPXEQ MODIFICATION TO ADD INTERNAL TEXT TIME KEY PARM.          *
*   FOLLOWS LINE U2566000.                                            *
***********************************************************************
         CNOP  0,8                                                  KHP
XTIMEKEY DC    AL1(TIMEJK)         TIME KEY FOR JOB CARD            KHP
         DC    AL1(2)              # PARAMETERS 'TIME=(MMMM,SS)'    KHP
         DC    AL1(4)              LENGTH OF FIRST PARAMETER MMMM   KHP
         DC    4X'00'              NULL 4-CHARACTER MMMM            KHP
         DC    AL1(2)              LENGTH OF SECOND PARAMETER SS    KHP
         DC    2X'00'              NULL 2-CHARACTER SS              KHP
         DC    AL1(ENDK)           END KEY FOR TEXT                 KHP
XTIMETXT EQU   XTIMEKEY,*-XTIMEKEY LABEL + LENGTH FOR ABOVE TEXT    KHP
*<-------RESUME VANILLA HASPXEQ CODE AT THIS POINT--------------->* KHP
***********************************************************************
         MEND
