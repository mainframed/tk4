IEESL03D CSECT
         LR    R12,R15
         USING IEESL03D,R12
         L     R0,SIZE             LOAD GETMAIN AREA SIZE AND SUBPOOL
         LTR   R1,R1          IS IT TSO
         BNM   *+8            NO
         ICM   R0,8,=X'00'    SP=0 FOR TSO
         GETMAIN R,LV=(0)
         LR    R13,R1
         USING WORK,R13
         ST    R14,SAVRET          SAVE RETURN ADDR
         ST    R2,XSASAVE          SAVE XSA ADDR
         USING XSA,R2
         MVI   TSOSW,X'00'
         MVI   CPUSW,0
         XC    CPUSAVE(256),CPUSAVE
         XC    CPUSAVE+256(256),CPUSAVE+256
         L     R3,XAL              PARM LIST ADDR
         LA    R3,0(0,R3)
         LTR   R3,R3               ANY PARM
         BZ    *+10                NO
         MVC   TSOSW(1),0(R3)      SAVE PARM
         MVC   WTOLIST(4),=X'00440100'
         MVI   SCANRET,C' '        SET FOUND
         SR    R8,R8               CLEAR ASID
         MVI   SCANTYPE,C'I'       SET IN QUEUE SCAN
         LA    R11,CPUSAVE    ADDR OF CPUSAVE TABLE
         ST    R11,ACPUSAVE   SAVE TABLE ADDRESS
         MVC   HDRTMP,HDRI    SAVE IN HDR
         CLI   TSOSW,C'C'     PERCENT REQ?
         BNE   BK50           NO
         MVC   HDRTMP+56(8),=CL8'CPU-PCT'
BK50     EQU   *
         LA    R1,HDRTMP
         MVC   DOUBLE(1),TSOSW  SAVE PARM VALUE
         MVI   TSOSW,0        CLEAR FOR WTO TO OCCUR
         BAL   R11,MSGRTN1
         MVC   TSOSW,DOUBLE   RESTORE PARM BYTE
         SPACE 3
         TM    XAP,X'80'      TSO?
         BO    JOBOUT         YES, BYPASS ESTAE
         LR    R10,R13             LOAD SAVE AREA ADDR
         ESTAE STAEXIT,CT,PARAM=(10) ISSUE ESTAE
         EJECT
JOBOUT   MVI   JOBMSG,C' '
         MVC   JOBMSG+1(L'JOBMSG-1),JOBMSG
         LR    R5,R8               LOAD ASID
         LTR   R5,R5               ZERO ASID
         BZ    *+6                 YES, BYPASS ADJUST
         BCTR  R5,0                ADJUST ASID
         SLL   R5,2                MULTIPLY BY 4
         L     R4,CVTPTR               CVT ADDR
         USING CVT,R4
         L     R4,CVTASVT          ASVT ADDR
         USING ASVT,R4
         L     R7,ASVTMAXU    MAX ASIDS
         LA    R7,1(,R7)      ADD 1
         LA    R4,ASVTFRST(R5)     ASCB SLOT ADDR
         B     JOBOUT4
         USING ASVTFRST,R4
         SPACE 1
JOBOUT1  L     R5,ASVTFRST         ASCB ADDR
         USING ASCB,R5        ASCB BASE
         L     R6,ASCBCSCB         CSCB ADDR
         CLI   SCANTYPE,C'I'       IN QUEUE SCAN
         BNE   JOBOUT2             NO
         TM    ASCBRCTF,ASCBOUT    ON ASCB DSP QUEUE
         BO    JOBOUT4             NO, OUT QUEUE
         B     JOBOUT3             CONTINUE
         SPACE 1
JOBOUT2  TM    ASCBRCTF,ASCBOUT    ON ASCB DSP QUEUE
         BZ    JOBOUT4             YES, IN QUEUE
         SPACE 1
JOBOUT3  L     R6,ASCBOUCB    OUCB ADDR
         BAL   R11,ASCBFORM        GO FORMAT ASCB INFO
         USING OUCB,R6        OUCB BASE
         L     R3,ASCBTSB          TSB ADDR
         USING TSB,R3
         ST    R5,ASCBADDR    SAVE CURNT ASCB ADDRESS
         L     R5,ASCBCSCB         CSCB ADDR
         BAL   R11,CSCBFORM        GO FORMAT CSCB INFO
         BAL   R11,OUCBFORM        GO FORMAT OUCB INFO
         LA    R1,WTOLIST          MSG AREA
         BAL   R11,MSGRTN          GO PRINT MSG
         BAL   R11,CPURTN     GO SEE IF CPU RTN NEEDED
         MVC   ET,=CL3' '     CLEAR FOR NEXT FORMAT
         SPACE 1
JOBOUT4  BCT   R7,JOBOUT4A    LOOP THRU ALL ASIDS
         B     JOBOUT5        AND DO OUT Q ALSO
         SPACE 2
JOBOUT4A LA    R4,ASVTFRST+4  INCR INTO ASVT
         TM    ASVTFRST,ASVTAVAL ASVT TAKEN?
         BO    JOBOUT4        NO CONTINUE SCAN
         B     JOBOUT1        YES REPORT ON IT
         SPACE 1
JOBOUT5  CLI   SCANTYPE,C'O'       OUT QUEUE SCAN
         BE    RETURN              YES, EXIT
         MVI   SCANRET,C' '        INIT OUTPUT SWITCH
         MVI   SCANTYPE,C'O'       SET OUT QUEUE SCAN NEXT
         CLI   TSOSW,C'C'     CPU REQUEST?
         BNE   JOBOUT6        NO, DO THINGS NORMALLY
         CLI   CPUSW,0        PASS 0 ?
         BE    JOBOUT         YES, NO WTO NOW
JOBOUT6  DS    0H
         MVC   DOUBLE(1),TSOSW
         MVI   TSOSW,C' '
         MVC   HDRTMP,HDRO    SAVE OUT HDR
         CLI   DOUBLE,C'C'    PERCENT REQ?
         BNE   JOBOUT7
         MVC   HDRTMP+56(8),=CL8'CPU-PCT'
JOBOUT7  EQU   *
         LA    R1,HDRTMP
         BAL   R11,MSGRTN1
         MVC   TSOSW,DOUBLE
         B     JOBOUT              NEXT PASS
         EJECT
ASCBFORM UNPK  DOUBLE(5),ASCBASID(3)
         NC    DOUBLE(4),=4X'0F'
         TR    DOUBLE(4),=C'0123456789ABCDEF'
         MVC   ASID(2),DOUBLE+2      SET ASID IN MSG
         SR    R9,R9
         UNPK  HEXWORK,ASCBDP(5)       CONVERT
         TR    HEXWORK(8),TRBINHEX-X'F0'  DISP PRIORITY
         MVC   DPRTY(2),HEXWORK  TO EBCDIC
         UNPK  HEXWORK,ASCBTCBS(5) READY TCBS FORMAT
         TR    HEXWORK(8),TRBINHEX-X'F0'
         MVC   RT(1),HEXWORK+7
         LH    R1,ASCBSEQN         DISP POSITION
         CVD   R1,DOUBLE
         UNPK  SRC(2),DOUBLE+6(2)
         OI    SRC+1,X'F0'
         MVC   EXECTIME(10),=XL10'402021204B40404B4040'
         LM    R14,R15,ASCBEJST    CPU TIME
         SRDL  R14,12         GET INTO MICROSECONDS
         D     R14,=F'1000'   GET INTO MILLISECONDS
*        LR    R9,R15              SAVE CPU TIME
*        LM    R14,R15,ASCBSRBT    SRB TIME
*        SRDL  R14,12         GET INTO MICROSECONDS
*        D     R14,=F'1000'   GET INTO MILLISECONDS
*        AR    R15,R9              CPU PLUS SRB TIME
         SR    R14,R14
         D     R14,=F'10'          HUNDREDTHS
         SR    R14,R14
         D     R14,=F'100'         SECONDS
         CVD   R14,DOUBLE          HUNDREDTHS TO PRINT
         UNPK  EXECTIME+8(2),DOUBLE+6(2)
         OI    EXECTIME+9,X'F0'
         SR    R14,R14
         D     R14,=F'60'          MINUTES
         CVD   R14,DOUBLE          SECONDS TO PRINT
         UNPK  EXECTIME+5(2),DOUBLE+6(2)
         OI    EXECTIME+6,X'F0'
         CVD   R15,DOUBLE          MINUTES TO PRINT
         ED    EXECTIME(4),DOUBLE+6
*        CLC   ASCBJBNI,=F'0'   STARTED TASK?
*        BER   R11            YES NO ET FORMAT
         USING CVT,R1         CVT BASE
         L     R1,CVTPTR      A(CVT)
         L     R1,CVTOPCTP    A(RMCT)
         USING RMCT,R1        BASE FOR RMCT
         L     R15,RMCTTOD    CURRENT TIME
         SL    R15,OUCBTMO    ELAPSED TIME IN 1.024 MILL UNITS
         SR    R14,R14
         D     R14,=A(1024*60)  ELAPSED TIME IN MINUTE     UNITS
         C     R15,=F'999'    GT 999 MINUTES?
         BH    GT999          YES, DO SPECIAL FORMAT
         CVD   R15,DOUBLE
         DROP  R1
         MVC   HEXWORK(8),=X'4020202020202021'
         ED    HEXWORK(8),DOUBLE+4
         MVC   ET,HEXWORK+5
         BR    R11
GT999    EQU   *
         SPACE
*****
*        CONVERT TIME GT 999 MIN TO HEX HOURS
*****
         SPACE
         SR    R14,R14        FIX FOR DIVIDE
         D     R14,=F'60'     ET IN HOURS
         ST    R15,DOUBLE     SAVE HOURS
         UNPK  HEXWORK,DOUBLE(5) CONVERT TO
         TR    HEXWORK(8),TRBINHEX-X'F0' EBCDIC
         MVC   ET(2),HEXWORK+6  MOVE TO PRINT LOCATION
         MVI   ET+2,C'H'      SAY HOURS
         C     R15,=F'255'    GT 255?
         BNHR  R11            NO, JUST RETURN
         MVC   ET(2),=C'**'   SHOW TOO BIG TO FORMAT
         BR    R11            AND RETURN TOO
         EJECT
         USING CHAIN,R5
CSCBFORM CLI   TSOSW,C'T'          TSO USER DISPLAY
         BNE   CSCBFRM0            NO
         CLI   CHTRKID,CHTSID      TSO USER
         BNE   JOBOUT4             NO, BYPASS
         B     CSCBFRM5
         SPACE 1
CSCBFRM0 CLI   CHTRKID,CHTSID      TSO USER
         BE    JOBOUT4             YES, DONT PROCESS
         CLI   CHTRKID,CHINITID    INIT
         BNE   CSCBFRM3            NO, GO HANDLE
         LA    R9,CHAIN            SAVE CSCB ADDR
         SR    R10,R10             INSERT
         IC    R10,CHASID
         SLL   R10,8               ASID
         IC    R10,CHASID+1
         SPACE 1
CSCBFRM1 L     R5,CHAIN            NEXT CSCB
         LA    R5,CHAIN            CLEAR HIGH ORDER
         LTR   R5,R5               END OF CSCBS
         BNZ   *+10                NO, CONTINUE
         LR    R5,R9               LOAD CSCB ADDR
         B     JOBOUT4             NO GOOD
         CR    R5,R9               SAME CSCB
         BE    JOBOUT4             YES, NO GOOD
         CH    R10,CHASID          SAME ASID
         BNE   CSCBFRM1            NO, CHECK NEXT
         SPACE 1
CSCBFRM2 MVC   JOBNAME(8),CHKEY
         MVC   STEPNAME(8),CHSTEP
         MVC   PROCNAME(8),CHPROCSN
         B     CSCBFRM4
         SPACE 1
CSCBFRM3 MVC   JOBNAME(8),CHCLS
         MVC   STEPNAME(8),CHKEY
         MVC   PROCNAME(8),CHPROCSN
         SPACE 1
CSCBFRM4 CLC   ASID(2),=C'01'
         BCR   7,R11
         MVC   JOBNAME(26),=CL26'MASTER'
         BR    R11
         SPACE 1
CSCBFRM5 MVC   JOBNAME(8),CHKEY
         MVC   STEPNAME(8),CHCLS
         UNPK  PROCNAME(5),TSBLINE(3) LINE NUMBER
         NC    PROCNAME(4),=8X'0F'
         TR    PROCNAME(4),=C'0123456789ABCDEF'
         MVC   PROCNAME+4(4),=CL4' '
         B     CSCBFRM4
         EJECT
OUCBFORM CLI   OUCBSRC,X'00'       JOB ON IN QUEUE
         BE    OUCBFRM0            YES, NO SWAP REASON
         UNPK  SRC(3),OUCBSRC(2)   SWAP REASON
         NC    SRC(2),=8X'0F'
         TR    SRC(2),=C'0123456789ABCDEF'
         MVI   SRC+2,C' '
         SPACE 1
OUCBFRM0 MVC   FLAGS(2),=CL2'NS'
         UNPK  HEXWORK,OUCBSWC(5) SWAP COUNT
         TR    HEXWORK(8),TRBINHEX-X'F0'
         MVC   SC(2),HEXWORK+2
         SR    R1,R1
         IC    R1,OUCBNPG     GET PG NUMBER
         CVD   R1,DOUBLE
         UNPK  PG-1(3),DOUBLE+6(2)
         OI    PG+1,X'F0'
         MVI   PG-1,C' '
OUCBFRMB EQU   *
         TM    OUCBSFL,OUCBNSW     NON-SWAPPABLE
         BO    OUCBFRM1
         MVC   FLAGS(2),=CL3'IN'
         CLI   SCANTYPE,C'I'       IN QUEUE SCAN
         BE    OUCBFRM1
         MVC   FLAGS(2),=CL3'OU'
         TM    OUCBQFL,OUCBGOO+OUCBGOI+OUCBGOB GOING IN/OUT
         BZ    OUCBFRM1            NO, JUST OUT
         MVC   FLAGS(2),=CL3'GO'
         TM    OUCBQFL,OUCBGOO     GOING OUT
         BO    OUCBFRM1
         MVC   FLAGS(2),=CL3'GB'
         TM    OUCBQFL,OUCBGOB     TRANSITIONING
         BO    OUCBFRM1
         MVC   FLAGS(2),=CL3'GI'
         SPACE 1
OUCBFRM1 MVC   FLAGS+2(2),=CL2'A'
         TM    OUCBYFL,OUCBAXS     AUX STORAGE SHORTAGE
         BCR   1,R11
         MVC   FLAGS+2(2),=CL2'S'
         TM    OUCBYFL,OUCBFXS     REAL STORAGE SHORTAGE
         BCR   1,R11
         MVC   FLAGS+2(2),=CL2'LW'
         TM    OUCBEFL,OUCBLWT     LONG WAIT
         BCR   1,R11
         MVC   FLAGS+2(2),=CL2'MW'
         TM    21(R6),X'01'        DETECTED WAIT
         BCR   1,R11
         MVC   FLAGS+2(2),=CL2'CP'
         TM    OUCBAFL,OUCBCPL     CPU USER
         BCR   1,R11
         MVC   FLAGS+2(2),=CL2' '
         BR    R11
         TITLE 'PROCESS #JC TO ACCUMULATE JOB CPU %'
CPURTN   DS    0H
         CLI   TSOSW,C'C'     CPU % REQUEST ?
         BNER  R11            NO, JUST EXIT
         L     R5,ASCBADDR    RESTORE ASCB ADDRESS
         USING ASCB,R5        RESET BASE
         LM    R14,R15,ASCBEJST TCB TOD CPU SECONDS
         SRDL  R14,12         MICS
         D     R14,=F'1000'   MILLS
         LR    R9,R15         SAVE TCB MILLS
         LM    R14,R15,ASCBSRBT SRB TOD CPU MILLS
         SRDL  R14,12         MICS
         D     R14,=F'1000'   MILLS
         ALR   R15,R9         TCB+SRB MILLS
         CLI   CPUSW,0        PASS 0 ?
         BNE   CPURTN11       NO, DO PASS 1 PROCESSING
         L     R10,ACPUSAVE   CURRENT CPU TABLE ADDRESS
         MVC   0(2,R10),ASCBASID
         ST    R15,2(,R10)    SAVE CPU MILLS
         LA    R10,6(,R10)    BUMP TABLE POINTER
         ST    R10,ACPUSAVE   SAVE UPDATED ADDRESS
         BR       R11   AND RETURN
         SPACE 2
CPURTN11 DS    0H
         LA    R10,CPUSAVE    BEGIN OF CPU TABLE
CPURTN12 CLC   ASCBASID,0(R10) ASID FOUND?
         BE       CPURTN22             YES, CONTINUE PROCESSING
         CLC   =XL2'00',0(R10)  END OF ENTRIES?
         BER   R11            YES, THIS AS NOT FOUND JUST RETURN
         LA    R10,6(,R10)    NEXT ENTRY
         B     CPURTN12       CONTINUE SCAN
         SPACE 2
CPURTN22 DS    0H
         S     R15,2(,R10)    GET CPU TIME USED
         BNM   CPURTN44       AND FORMAT IF NOT MINUS
         MVC   EXECTIME+5(4),=C'****' SHOW CANT FORMAT IT
         MVC   EXECTIME(10),=CL10' ' CLEAR FIELD
         B     CPURTN55       AND GO PRINT IT
         SPACE 2
CPURTN44 EQU   *
         MH    R15,=H'100'    X 100
         SR    R14,R14
         D     R14,=A(2*1000) MILLS IN 2 SECONDS
         MVC   EXECTIME(10),=X'4040402020204B212040'
         CVD   R15,DOUBLE
         ED    EXECTIME(06),DOUBLE+6 PRINTABEL FORMAT
         LR    R15,R14        SAVE REMAINDER
         MH    R15,=H'100'    X 100
         SR    R14,R14
         D     R14,=A(2*1000) GET % OF A SEC
         CVD   R15,DOUBLE
         UNPK  EXECTIME+7(2),DOUBLE+6(2)
         OI    EXECTIME+8,X'F0'
CPURTN55 EQU   *
         MVI   TSOSW,C'N'     SAY CPU REQ NOT ACTIVE
         LA    R1,WTOLIST     A(MSG)
         ST    R11,DOUBLE     SAVE OUR RETURN
         BAL   R11,MSGRTN     GO DO WTO NOW
         MVI   TSOSW,C'C'     SAY CPU REQ ACTIVE NOW
         L     R11,DOUBLE     RESTORE RETURN ADDRESS
         BR    R11            RETURN
         DROP  R5
         EJECT
         USING *,R15
STAEXIT  CH    R0,=H'12'           SDWA GOTTEN
         BE    STAEXIT1            NO, FORCE RETURN
         L     R2,=A(STAERTRY)     LOAD RETRY ADDR
         SETRP RC=4,RETADDR=(2),FRESDWA=YES,DUMP=NO
         SPACE 3
STAEXIT1 L     R0,=A(STAERTRY)     LOAD RETRY ADDR
         LA    R15,4
         BR    R14
         DROP  R15
         SPACE 3
         USING *,R15
STAERTRY L     R12,=A(IEESL03D)    LOAD ENTRY POINT ADDR
         LR    R13,R1              RELOAD WORK AREA ADDR
         DROP  R15
         LA    R1,STAEMSG          ADDRESSING ERROR
         L     R2,XSASAVE          RELOAD XSA ADDR
         LA    R11,RETURN          LOAD RET ADDR
         EJECT
MSGRTN   MVI   SCANRET,C'P'
         SPACE 1
MSGRTN1  CLI   TSOSW,C'C'     CPU REQUEST ACTIVE?
         BER   R11            YES, NO OUTPUT NOW
         TM    XAP,X'80'      IS IT TSO
         BO    TPUT           WRITE TO TSO
         SR    R0,R0
         IC    R0,XAU              INSERT MCS ID
         SVC   35                  ISSUE WTO
         BR    R11
         SPACE 3
TPUT     LH    R0,0(0,R1)          ORIG MSG LENGTH
         SH    R0,=H'4'            NEW MSG LENGTH
         LA    R1,4(0,R1)          MSG TEXT ADDR
         O     R0,XAD              ADD IN MSG LENGTH
         SVC   93                  TPUT SVC
         BR    R11            RETURN TO CALLER
         SPACE 2
RETURN   DS    0H
         CLI   TSOSW,C'C'     CPU REQUEST?
         BNE   RETURN1        NO, JUST RETURN NOW
         CLI   CPUSW,0        PASS 0?
         BNE   RETURN1        NO, RETURN ALL DONE
         MVI   CPUSW,1        SAY PASS 1 NOW IN EFFECT
         MVI   SCANTYPE,C'I'  RESET FOR FULL SCAN
         STIMER WAIT,BINTVL=WAITINTV WAIT FOR A  TIME POP
         B     JOBOUT         AND DO PASS 1
         SPACE 2
RETURN1  ESTAE 0
         CLI   SCANRET,C' '        ANY FOUND
         BE    NOTFOUND            NO, TELL OPERATOR
         L     R0,SIZE             LOAD GETMAIN SIZE AND SUBPOOL
         TM    XAP,X'80'      IS IT TSO
         BNO   *+8            NO
         ICM   R0,8,=X'00'    SP=0 FOR TSO
         LR    R1,R13              LOAD GETMAIN AREA ADDR
         L     R14,SAVRET          RETURN ADDR
         FREEMAIN R,LV=(0),A=(1)
         SR    R15,R15
         BR    R14
         SPACE 3
NOTFOUND LA    R11,RETURN
         LA    R1,NFNDMSG
         B     MSGRTN
         EJECT
         LTORG
WAITINTV DC    A(100*2)       2 SEC WAIT VALUE
         DS    0F
SIZE     DC    X'F1',AL3(WORKEND-WORKSTRT)
TRBINHEX DC    C'0123456789ABCDEF'
         SPACE 3
         DS    0F
STAEMSG  DC    X'00360100'
         DC    CL50'ERROR ENCOUNTERED IN CONTROL BLOCKS, RETRY COMMAND'
         SPACE 3
         DS    0F
NFNDMSG  DC    X'00360100'
         DC    CL50'NO JOBS ON OUT QUEUE'
         SPACE 3
HDRI     DC    Y(HDRIEND-HDRI),X'0100'
         DC    CL27'*****   IN  QUEUE   *****'
         DC    CL3'ID'
         DC    CL3'DP'
         DC    CL3'QP'
         DC    CL3'PG'
         DC    CL3'RT'
         DC    CL3'SC'
         DC    CL5'FLGS'
         DC    CL11'  TCB TIME'
         DC    CL3' ET'
HDRIEND  EQU   *
         SPACE 3
HDRO     DC    Y(HDROEND-HDRO),X'0100'
         DC    CL27'*****   OUT  QUEUE   *****'
         DC    CL3'ID'
         DC    CL3'DP'
         DC    CL3'SR'
         DC    CL3'PG'
         DC    CL3'RT'
         DC    CL3'SC'
         DC    CL5'FLGS'
         DC    CL11'  TCB TIME'
         DC    CL3' ET'
HDROEND  EQU   *
         EJECT
WORK     DSECT
WORKSTRT DS    0D
SAVRET   DS    18F
DOUBLE   DS    2F
ASCBADDR DS    F
XSASAVE  DS    F
SCANRET  DS    C
SCANTYPE DS    C
TSOSW    DS    C
CPUSW    DS    X
HEXWORK  DS    CL9
         SPACE 5
         DS    0F
WTOLIST  DS    F
JOBMSG   DS    0CL64
JOBNAME  DS    CL9
STEPNAME DS    CL9
PROCNAME DS    CL09
ASID     DS    CL3
DPRTY    DS    CL3
SRC      DS    CL3
PG       DS    CL3
RT       DS    CL3
SC       DS    CL3
FLAGS    DS    CL5
EXECTIME DS    CL11
ET       DS    CL3
ACPUSAVE DS    F              ADDR OF CURRENT CPUSAVE ENTRY
HDRTMP   DS    CL68
CPUSAVE  DS    600X           ROOM FOR 100 ASID MAPS
*ASID    DS    H
*CPUTIME DS    XL4            CPU TIME FOR AS IN MILLS
         SPACE 3
WORKEND  DS    0F
         EJECT
XSA      DSECT
XAP      DS    F
XAD      DS    F
XAX      DS    D
XAE      DS    0C
XAR      DS    F
XAN      DS    0C
XAL      DS    F
XAV      DS    D
XAS      DS    D
XAU      DS    C
         DS    C
XAJ      DS    H
         DS    F
         EJECT
         PRINT NOGEN
         IHASDWA
         IRAOUCB
         IRARMCT
IEECSCB  DSECT
         IEECHAIN
         IKJTSB
         IHAASVT
         CVT   DSECT=YES
         IHAASCB
         EJECT
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         END
