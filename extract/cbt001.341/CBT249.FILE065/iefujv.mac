         TITLE 'IEFUJV -- SFT8MV72 -- JOB VERIFY EXIT'
***********************************************************************
*                                                                     *
*                   PROGRAM: IEFUJV -- JOB VERIFY EXIT                *
*                    AUTHOR: JAMES COOK  12/17/79                     *
*                                                                     *
*     THIS EXIT PRODUCES USER SMF RECORDS TO RECORD THE NAMES OF      *
*  PROCS WHICH ARE BEING EXECUTED. THE PROGRAM RECEIVES CONTROL AND   *
*  SCANS EACH EXECUTE JCL STATEMENT. WHEN A PROC NAME IS FOUND        *
*  IT IS ADDED TO A TABLE. ONCE ALL OF THE JCL STATEMENTS HAVE        *
*  BEEN SCANED, THE RECORD IS WRITTEN. UP TO 100 PROC NAMES           *
*  CAN BE RECORDED IN EACH SMF RECORD. IF MORE THAN THAT ARE          *
*  ENCOUNTERED, MORE THAN ONE SMF RECORD IS WRITTEN FOR THE           *
*  JOB. FOR MORE INFO ABOUT IEFUJV, CONSULT SPL:SMF GC28-0706         *
***********************************************************************
         EJECT                                                        *
***********************************************************************
*   CHECK TO SEE WHAT TYPE OF SMF RECORD IS TO BE PROCESSED. TYPE 2   *
*   IS AN EXECUTE STATEMENT, AND TYPE 32 MEANS THAT ALL THE JCL HAS   *
*   BEEN SCANED. RETURN IF ANY OTHER JCL STATEMENT TYPES ARE GIVEN.   *
***********************************************************************
IEFUJV   CSECT
         STM   R14,R12,12(R13)         SAVE THE REGISTERS
         BALR  R12,0                   LOAD BASE
         USING *,R12                   DECLARE BASE
         USING CEPA,R9                 DECLARE CEPA BASE
         LM    R9,R11,0(R1)            LOAD PARAMETERS
         CLI   0(R11),16               END OF JCL SCAN?
         BE    TYPE32                  YES, WRITE RECORD IF WE NEED TO
         CLI   0(R11),2                IS IT AN EXEC JCL STATEMENT?
         BNE   TERM                    NO, SO RETURN
         SR    R1,R1                   A ZERO UID MEANS WE GOT PROBLEMS
         C     R1,CEPAUID              HAVE WE GOT PBLMS?
         BE    TERM                    YES, BETTER RETURN
         LA    R2,70(R10)              LOAD END OF JCL STATEMENT
         LA    R10,2(R10)              SKIP PAST //
***********************************************************************
*  SINCE THIS IS AN EXECUTE CARD, SCAN THE CARD FOR AN EXEC           *
*  OPERATION. ONCE FOUND FIND THE START OF THE OPERANDS AND STORE     *
*  IN R3. FIND THE END OF THE FIRST OPERAND (DENOTED BY A SPACE       *
*  OR A COMMA).                                                       *
***********************************************************************
LOOP1    EQU   *
         CLC   0(6,R10),=CL6' EXEC '   DID WE FIND EXEC YET?
         BE    FNDEXEC                 YES
         LA    R10,1(R10)              UP POINTER
         CR    R2,R10                  HAVE WE GONE TOO FAR?
         BNL   LOOP1                   NO, KEEP LOOKING
         B     TERM                    YES, SCREWED UP EXEC CARD.
FNDEXEC  EQU   *
         LA    R10,6(R10)              SKIP OVER EXEC
LOOP2    EQU   *
         CLI   0(R10),C' '             IS THIS A NON BLANK?
         BNE   FNDOPER                 YES, WE FOUND THE OPERAND
         LA    R10,1(R10)              NO, UP POINTER
         CR    R2,R10                  HAVE WE GONE TOO FAR?
         BNL   LOOP2                   NO, LOOK SOME MORE
         B     TERM                    YES, RETURN
FNDOPER  EQU   *
         LR    R3,R10                  SAVE START OF OPERAND
LOOP3    EQU   *
         LA    R10,1(R10)              UP POINTER
         CLI   0(R10),C' '             AT END OF OPERAND?
         BE    FNDEND                  YES
         CLI   0(R10),C','             AT END OF OPERAND?
         BE    FNDEND                  YES
         CR    R2,R10                  GONE TOO FAR?
         BH    LOOP3                   NO, KEEP LOOKING
         B     TERM                    YES, EXIT.
         EJECT
***********************************************************************
*  CHECK TO MAKE SURE WE ARE NOT EXECUTING A PROGRAM. (DENOTED BY     *
*  A PGM=)  IF THE PROC= OPERAND IS SPECIFIED, SKIP OVER IT. FIND     *
*  LENGTH OF OPERAND NAME AND MAKE SUER IT IS NOT GREATER THAN 8.     *
*  IF THIS IS THE FIRST TIME AROUND (AS SHOWN BY BLANKS IN CEPAUID)   *
*  ISSUE A GETMAIN SO WE CAN BUILD OUR SMF 130 RECORD. THE LOCATION   *
*  OF THE AQUIRED STORAGE IS STORED IN CEPAUID.                       *
***********************************************************************
FNDEND   EQU   *
         CLC   0(4,R3),=C'PGM='        IS IT A PROGRAM?
         BE    TERM                    YES, RETURN
         CLC   0(5,R3),=C'PROC='       DID HE SPECIFY PROC=?
         BNE   NOPROCEQ                NO, NO PROC EQUALS ON EXEC
         LA    R3,5(R3)                UP POINTER OVER PROC=
NOPROCEQ EQU   *
         SR    R10,R3                  GET LENGTH OF OPERAND
         CH    R10,=H'8'               OPERAND TOO BIG?
         BH    TERM                    YES, RETURN
         CLC   CEPAUID(4),=CL4' '      HAVE GOTTEN SOME CORE YET?
         BNE   GOTCORE                 YES WE HAVE
         GETMAIN RC,LV=SMFDSLEN,SP=230 GET REGION FOR RECORD
         LTR   R15,R15                 DID WE GET IT?
         BZ    GOTMAIN                 YES WE GOT IT
         WTO   'IEFUJV  -- GETMAIN FAILED, NOTIFY SOFTWARE'
         XC    CEPAUID(4),CEPAUID      SHOW WE GOT TROUBLE
         B     TERM                    GET OUT OF HERE
GOTMAIN  EQU   *
         LR    R11,R1                  LOAD IN ADDR OF STORAGE
         ST    R11,CEPAUID             SAVE ADDR
         USING SMFDSECT,R11            DECLARE BASE FOR USER AREA
         MVI   SMF82NUM,X'00'          MOVE IN PROC COUNTER
         B     MOVEPROC                MOVE IN THE NAME.
         EJECT
***********************************************************************
*  CHECK TO SEE IF WE HAVE ROOM TO MOVE IN THE PROC NAME. IF NOT,     *
*  WRITE OUT THE RECORD. MOVE IN THE PROCNAME AND RETURN. NOTE: WE    *
*  ARE IN KEY 1 WHEN WE ARE CALLED EXCEPT WHEN WE ARE CALLED WITH     *
*  A TYPE 32. FOR TYPE 32, WE ARE IN KEY 0. IN ORDER FOR US TO USE    *
*  THE SMFWTM, WE NEED TO BE IN KEY 0.                                *
***********************************************************************
GOTCORE  EQU   *
         L     R11,CEPAUID             LOAD GETMAINED AREA
         SR    R1,R1                   ZERO R1 FOR IC
         IC    R1,SMF82NUM             LOAD NUMBER OF PROCS SO FAR.
         CH    R1,=H'100'              DO WE HAVE 100 OF THEM
         BL    MOVEPROC                NO, MOVE IN THE PROC
         BAL   R8,SMFWRT               WRITE THE SMF RECORD
MOVEPROC EQU   *
         SR    R1,R1                   ZERO FOR INSERT CHARACTER
         IC    R1,SMF82NUM             LOAD NUM OF PROCS
         LA    R1,1(R1)                UP COUNT FOR NEXT TIME
         STC   R1,SMF82NUM             SAVE FOR THE NEXT TIME
         BCTR  R1,0                    SUBTRACT 1 FOR THIS TIME
         SLL   R1,3                    MULTIPLY BY 8 TO GET DISPLACEMNT
         LA    R1,SMF82STP(R1)         R1 <- LOCATION TO MOVE NAME
         MVC   0(8,R1),=CL8' '         BLANK OUT PLACE NAME IS GOING
         BCTR  R10,0                   SUBTRACT 1 FOR EXECUTE
         EX    R10,MOVEIT              MVC 0(0,R1),0(R3)
TERM     EQU   *
         LM    R14,R12,12(R13)         RESTORE REGISTERS
         SR    R15,R15                 ZERO RETURN CODE
         BR    R14                     RETURN
MOVEIT   MVC   0(0,R1),0(R3)           MOVE IN PROC NAME
***********************************************************************
*  A TYPE 32 RECORD TELLS US THAT WE ARE DONE. SO, WE WRITE THE REC   *
*  (IF THERE IS ONE) AND FREE THE STORAGE (IF WE DID A GETMAIN)       *
*  AND THEN RETURN.                                                   *
***********************************************************************
TYPE32   EQU   *
         CLC   CEPAUID(4),=CL4' '      DO WE NEED TO DO FREEMAIN?
         BE    TERM                    NO, SKIP IT
         L     R11,CEPAUID             LOAD R11 WITH GETMAINED AREA
         LTR   R11,R11                 IS IT ZERO?
         BZ    TERM                    YES, WE HAVE PROBLEMS, RETURN
         BAL   R8,SMFWRT               WRITE THE SMF RECORD
         FREEMAIN RC,A=(R11),LV=SMFDSLEN,SP=230
         MVC   CEPAUID(4),=CL4' '      MOVE IN SPACES
         LTR   R15,R15                 DID IT FREE UP?
         BZ    TERM                    YES, RETURN
         WTO   'IEFUJV -- FREEMAIN FAILED, NOTIFY SOFTWARE'
         B     TERM                    NOW TERMINATE
***********************************************************************
*  WRITE OUT THE SMF RECORD AND REINITIALIZE THE NUMBER OF PROCS BACK *
*  TO ZERO.                                                           *
***********************************************************************
SMFWRT   EQU   *
         XC    SMF82RES(2),SMF82RES    ZERO RESERVED AREA
         MVI   SMF82FLG,X'02'          SHOW WE'RE ON VS2
         MVI   SMF82RTY,X'82'          RECORD TYPE 130 <=> X'82'
         TIME  BIN                     GET CURRENT TIME
         ST    R0,SMF82TME             STORE THE TIME
         ST    R1,SMF82DTE             STORE THE DATE
         MVC   SMF82SID(4),CEPASID     MOVE IN SYSTEM ID
         MVC   SMF82RST(8),CEPARST     MOVE IN READER TIME AND DATE
         MVC   SMF82JBN(8),CEPAJBN     MOVE IN JOB NAME
         SR    R1,R1                   ZERO FOR IC
         IC    R1,SMF82NUM             LOAD NUMBER OF PROCS
         SLL   R1,3                    MULTIPLY BY EIGHT
         LA    R1,SMF82STP-SMF82REC(R1) R1 IS RECORD LENGTH
         STH   R1,SMF82RDW             STORE THE LENGTH
         MODESET EXTKEY=ZERO           GO TO KEY ZERO FOR SMFWTM
         SMFWTM SMF82REC               WRITE THE RECORD
         MODESET EXTKEY=JES            RETURN TO JES'S KEY
         MVI   SMF82NUM,X'00'          ZERO NUMBER OF PROCS
         LTR   R15,R15                 DID WE WRITE THE SMF OK?
         BZR   R8                      YES, RETURN
         WTO   'IEFUJV -- SMF WRITE FAILED, NOTIFY SOFTWARE'
         BR    R8                      NOW, RETURN
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         LTORG
         TITLE 'IEFUJV -- COMMON EXIT PARAMETER AREA DSECT'
CEPA     DSECT
CEPAJBN  DS    XL8
CEPARST  DS    XL4
CEPARSD  DS    XL4
CEPASID  DS    XL4
CEPAUID  DS    XL8
CEPASNUM DS    X
CEPASMFO DS    X
CEPARSIN DS    X
CEPAJBCL DS    X
CEPAUCOM DS    XL4
         TITLE 'IEFUJV -- SMF TYPE 130 (X''82'') DSECT'
SMFDSECT DSECT
         DS    XL2
SMF82REC EQU   *
SMF82RDW DS    XL2
SMF82RES DS    XL2
SMF82FLG DS    X
SMF82RTY DS    X
SMF82TME DS    XL4
SMF82DTE DS    XL4
SMF82SID DS    XL4
SMF82JBN DS    XL8
SMF82RST DS    XL4
SMF82RSD DS    XL4
SMF82NUM DS    X
SMF82STP DS    XL8
SMFDSLEN EQU   SMF82STP-SMFDSECT+800
         END
