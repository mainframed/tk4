         MACRO
&LABEL   @STCK  &TYPE
         LCLC   &L
.**********************************************************************
.****    THIS MACRO WILL PROVIDE THE DAY, DATE, AND TIME FROM
.****    THE TIME-OF-DAY CLOCK IN GREGORIAN (ENGLISH) FORMAT.
.**********************************************************************
.****    TYPE SHOULD BE: 'BOTH' - GEN CODE AND DATA AREAS.
.****                    'CODE' - GEN CODE ONLY.
.****                    'DATA' - GEN DATA AREA ONLY.
.**********************************************************************
.****    DATA AREAS ARE SHOWN BELOW:
.****
.****  STCK     DC   CL28'MM/DD/YY HH:MM:SS DOW YY.DDD'
.****
.****  STCKDATE DS   CL8    THE DATE IN MM/DD/YY FORMAT
.****
.****  STCKTIME DS   CL8    THE TIME IN HH:MM:SS FORMAT
.****
.****  STCKDOW  DS   CL3    CHAR DAY OF WEEK
.****
.****  STCKDATJ DS   CL6    YY.DDD - JULIAN DATE
.****
.****  STCKWRK1 DS   D      WORK AREA
.****  STCKWRK2 DS   D      WORK AREA
.****
.****  STCKDOWX DS   H      A BINARY NUMBER (HEX) RELATIVE TO
.****                       THE DAY OF THE WEEK AS FOLLOWS
.****                       0=MONDAY, 1=TUESDAY, 2=WEDNESDAY,
.****                       3=THURSDAY, 4=FRIDAY,
.****                       5=SATURDAY, 6=SUNDAY
.****  STCKDDDX DS   H      A BINARY NUMBER-DAY IN YEAR 1-366
.****  STCKYYX  DS   H      A BINARY NUMBER-YEAR
.****  STCKMMX  DS   H      A BINARY NUMBER-MONTH (1-12)
.****  STCKDDX  DS   H      A BINARY NUMBER-DAY-OF-MONTH (1-31)
.****
.****  STCKSTCK DS   CL8    THE STCK TO BE CONVERTED
.****
.****    NOTE THAT THE CALLER MUST PROVIDE A REGISTER SAVE AREA
.****    THAT BEGINS ON A DOUBLEWORD BOUNDARY TO BE USED AS A
.****    WORK AREA BY THIS ROUTINE (R-13 BASED).
.****
.**********************************************************************
&L       SETC  '&SYSNDX'
&LABEL   DS    0H                 STORE THE TIME-OF-DAY CLOCK
         AIF    ('&TYPE' EQ 'DATA').GEN ONLY DO DATA
         AIF    ('&TYPE' EQ 'BOTH').CODE DO CODE
         AIF    ('&TYPE' EQ 'CODE').CODE DO CODE
         MNOTE 8,'INVALID TYPE:  &TYPE , MUST BE DATA,BOTH, OR CODE'
.CODE    ANOP
*
**             GET INPUT, ADJUST TIME ZONE
*
         LM    R0,R1,STCKSTCK          LOAD INTO WORK REGS
         L     R15,16                  GET CVT ADDRESS
         A     R0,304(R15)             ADD LOCAL TIME DEVIATION
         SRDL  R0,12                   ISOLATE NUMBER OF MICROSECONDS
*              MINUTES
         D     R0,=F'60000000'         DIVIDE BY 60M (R1=MINUTES AFT EP
         LR    R15,R0                  COPY REMAINDER OF MICS TO GET SE
         SR    R14,R14                 CLEAR FOR DIVIDE
*              SECONDS
         D     R14,=F'951424'          DIVIDE TO GET REMAINING SECONDS
         LR    R14,R15                 COPY TO WORK REG
S&L.B    SL    R14,=F'60'              DECREMENT BY 60 SECONDS
         BM    S&L.S                   LESS THAN SIXTY, CONTINUE
         SL    R15,=F'60'              MORE THAN SIXTY, ADJUST FOR LEAP
         AL    R1,=F'1'                BUMP MINUTES
         B     S&L.B                   CHECK AGAIN
*
**             DISPLAYABLE TIME HH:MM:SS
*
S&L.S    CVD   R15,STCKWRK1            CONVERT SECONDS TO PACKED FORMAT
         UNPK  STCKWRK2(4),STCKWRK1    UNPACK SECONDS FOR PRINT
         OI    STCKWRK2+3,X'F0'        SET UP FOR PRINTING
         MVC   STCKTIME+6(2),STCKWRK2+2 MOVE THE SECONDS
*
         XR    R0,R0
         D     R0,=F'60'               DIVIDE INTO HOURS AND MINUTES
         CVD   R0,STCKWRK1             CONVERT MINUTES TO PACKED
         UNPK  STCKWRK2(4),STCKWRK1    UNPACK MINUTES FOR PRINT
         OI    STCKWRK2+3,X'F0'        SET UP FOR PRINTING
         MVC   STCKTIME+3(2),STCKWRK2+2 MOVE THE MINUTES
*
         XR    R0,R0                   CLEAR
         D     R0,=F'24'               R1=DAYS AND R0=HOURS
         CVD   R0,STCKWRK1             CONVERT HOURS TO PACKED
         UNPK  STCKWRK2(4),STCKWRK1    UNPACK HOURS FOR PRINT
         OI    STCKWRK2+3,X'F0'        SET UP FOR PRINTING
         MVC   STCKTIME+0(2),STCKWRK2+2 MOVE THE HOURS
*
         MVI   STCKTIME+2,C':'         ADD COLIN
         MVI   STCKTIME+5,C':'         ADD COLIN
*
**             DAY-OF-WEEK
*
         LR    R15,R1                  COPY NUMBER OF DAYS
         XR    R14,R14                 CLEAR
         D     R14,=F'7'               GET DAY INDEX
         STC   R14,STCKDOWX            SET RELATIVE DAY OF WEEK
         MH    R14,=H'3'               WEEKDAY: 0,3,..
         LA    R14,S&L.W(R14)          GET 3CHAR DAY
         MVC   STCKDOW,0(R14)          MAKE DISPLAYABLE
*
**             JULIAN
*
         XR    R0,R0                   CLEAR EVEN REG
         S     R1,=F'365'              # OF DAYS SINCE JAN 1, 1901
         D     R0,=F'1461'             # COMPLETED LEAP YRS
         SLA   R1,2                    * LEAP YEARS BY 4
         LR    R14,R1                  SAVE
         STH   R1,STCKYYX              SAVE BINARY YEAR FOR CALLER
         LR    R1,R0                   REMANDER
         SR    R0,R0                   CLEAR R0
         D     R0,=F'365'              # COMPLETED YRS (NOT INCL LEAPS)
         AR    R1,R14                  # OF LEAPS*4
         LA    R1,1(,R1)               +1 FOR 1900 ADJUST ABOVE
         LR    R14,R1                  SAVE BINARY YEAR
         AH    R0,=H'1'                JAN 1 IS XX001 NOT XX000
         LR    R15,R0                  SAVE BINARY DAY(1-366)
         STH   R0,STCKDDDX             SAVE BINARY DAY FOR CALLER
         MH    R1,=H'1000'             YY OVER 3 DIGITS
         AR    R1,R0                   ADD DAYS
         CVD   R1,STCKWRK2             DEC VERSION 0..YYDDDS
         MVC   STCKWRK1(7),=X'4021204B202020'
         ED    STCKWRK1(7),STCKWRK2+5  JULIAN
         MVC   STCKDATJ,STCKWRK1+1     KILL BLANK
*
**             GREGORIAN
*
         CVD   R14,STCKWRK1            DEC. YEAR
         UNPK  STCKDATE+6(2),STCKWRK1+6(2) UNPACK INTO OUT AREA
         LA    R1,S&L.T                LOAD ADDR OF TABLE
         N     R14,=F'3'               SEE IF MULT OF 4
         BNZ   S&L.NL                  NOT 0, BRANCH
         LA    R1,S&L.TL               LEAP YEAR
S&L.NL   LR    R0,R1                   SAVE TABLE ADDR
S&L.L    IC    R14,0(R1)               LOAD CHAR FROM TABLE
         LA    R1,1(R1)                INDEX TABLE POINTER
         SR    R15,R14                 SUBTRACT FROM WORK VALUE
         BP    S&L.L                   STILL POSITIVE, DO AGAIN
         AR    R15,R14                 ELSE, ADD IT BACK
         STH   R15,STCKDDX             SAVE BINARY DAY FOR CALLER
         CVD   R15,STCKWRK1            CONVERT TO DEC
         UNPK  STCKDATE+3(2),STCKWRK1+6(2) UNPACK DAY
         SR    R1,R0                   GET MONTH INDEX FROM TABLE
         STH   R1,STCKMMX              SAVE BINARY MONTH FOR CALLER
         CVD   R1,STCKWRK1             CONVERT TO DEC
         UNPK  STCKDATE(2),STCKWRK1+6(2)  UNPACK MONTH INTO OUT
         OI    STCKDATE+1,C'0'         INSURE NUMERICS
         OI    STCKDATE+4,C'0'         INSURE NUMERICS
         OI    STCKDATE+7,C'0'         INSURE NUMERICS
         MVI   STCKDATE+2,C'/'         ADD SLASH
         MVI   STCKDATE+5,C'/'         ADD SLASH
*
**             CONSTANTS
*
         B     S&L.E                    BR AROUND CONSTANTS
S&L.W    DC    C'MONTUEWEDTHUFRISATSUN' DAYS OF WEEK
S&L.T    DC    AL1(31,28,31,30,31,30,31,31,30,31,30,31) MONTH TABLE
S&L.TL   DC    AL1(31,29,31,30,31,30,31,31,30,31,30,31) LEAP YEAR
         AIF    ('&TYPE' EQ 'CODE').NOGEN ONLY DO CODE
.GEN     ANOP
STCK     DC    0C'MM/DD/YY HH:MM:SS DOW YY.DDD'
STCKDATE DC    C'  /  /  '             MM/DD/YY
         DC    C' '                    FILLER                  25JUN84
STCKTIME DC    C'  :  :  '             HH:MM:SS
         DC    C' '                    FILLER                  25JUN84
STCKDOW  DC    C'XXX'                  DAY OF THE WEEK
         DC    C' '                    FILLER                  25JUN84
STCKDATJ DC    C'YY.DDD'               JULIAN DATE
         DC    C' '                    FILLER                  25JUN84
STCKWRK1 DS    D                       WORK
STCKWRK2 DS    D                       WORK
STCKSTCK DS    D                       STORE CLOCK INPUT
STCKDOWX DC    H'00'                   REL. DAY OF THE WEEK
STCKDDDX DC    H'00'                   BINARY DAY IN YEAR (1-366)
STCKYYX  DC    H'00'                   BINARY YEAR
STCKMMX  DC    H'00'                   BINARY MONTH (1-12)
STCKDDX  DC    H'00'                   BINARY DAY-OF-MONTH (1-31)
.NOGEN   ANOP
S&L.E    DS    0H
         MEND
