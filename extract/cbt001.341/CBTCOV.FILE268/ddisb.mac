DDISB    CSECT
***********************************************************************
*                                                                     *
* THIS ASSEMBLER PROGRAM IS PART OF THE ABE INTERFACE TO THE PLOT79   *
* GRAPHICS PACKAGE.  CALL SEQUENCE TO DDISB SHOULD BE -               *
*                                                                     *
*   CALL DDISB(X,Y)                                                   *
*                                                                     *
* WHERE X AND Y ARE BOTH FULLWORD BINARY INTEGER VALUES INDICATING    *
* RESPECTIVELY THE ROW AND COLUMN INDICES TO THE PIXEL TO BE ASSIGNED *
* THE CURPEN VALUE (SEE DSECT ABE063I).                               *
*                                                                     *
* CAN BE ASSEMBLED WITH - %ASM PLOT79.DRIVER.FORT(DDISB) NAME(DDISB)  *
*                                                                     *
***********************************************************************
         TGSREQU
         USING *,RC
         STM   RE,RC,12(RD)
         LR    RC,RF
         L     RF,DOA
         BSM   RE,RF              SET 31-BIT ADDRESSING
         DS    0F
DOA      DC    AL1(128),AL3(DO)
RETCTL   DS    0H
         LM    RE,RC,12(RD)
         SR    RF,RF
         BSM   0,RE               RESTORE HIS ADDRESSING MODE, RETURN
DO       DS    0H
         ST    RE,12(RD)          SAVE RETURN AND ADDRESSING MODE
         LM    R2,R3,0(R1)
         L     R2,0(R2)           R2=X
         L     R4,0(R3)           R4=Y
         EXTRN DDI01
         L     R9,=A(DDI01)
         USING ABE063I,R9
         C     R2,=F'1'
         BC    4,RETCTL           BR X<1
         C     R2,MAXBTX
         BC    2,RETCTL           BR X>MAXBTX
         C     R4,=F'1'
         BC    4,RETCTL           BR Y<1
         L     R5,MAXBTY                         NEW
         SR    R5,R4              R5=MAXBTY-Y    NEW
         BCR   4,RE               BR Y>MAXBTY    NEW
         SR    R4,R4              R4=0           NEW
         M     R4,MAXBTX          R5=(Y-1)*MAXBTX
         AR    R5,R2              R5=(Y-1)*MAXBTX+X
         BCTR  R5,R0              LESS 1 FOR RELATIVE 0
         SR    R4,R4
         LH    RF,ELSIZE          RF=ELSIZE
         MR    R4,RF              R4,R5=#BITS TO ELEMENT
         D     R4,=F'8'           R4=REM=BIT OFF, R5=QUOT=BYTE OFF
         L     R8,BITMAPA
         AR    R8,R5              R8=A(BYTE TO MODIFY)
         L     R0,0(R8)           LOAD 4 BYTES
         SR    R2,R2              R2=0
         SR    R3,R3              R3=0
         IC    R2,CURPEN
         L     R6,=X'FFFFFFFF'
         SR    R7,R7
         L     R1,=F'32'          #BITS IN 4 BYTES
         SR    R1,RF              LESS ELSIZE
         SR    R1,R4              LESS BIT OFFSET
         SRDL  R6,0(R1)           SHIFT RIGHT PART OF MASK
         SRL   R7,0(RF)           MAKE ELSIZE BITS 0
         SRDL  R2,0(RF)           SHIFT CURPEN BITS INTO R3
         SRDL  R6,0(R4)           R7=BIT MASK TO TURN OFF OLD BITS
         SRL   R3,0(R4)           R3=NEW ELEMENT BITS
         NR    R0,R7              TURN OFF OLD ELEMENT BITS
         OR    R0,R3              TURN ON NEW ELEMENT BITS
         ST    R0,0(R8)           STORE 4 BYTES
         B RETCTL                 ALL DONE
         LTORG
ABE063I  DSECT
DSSIZE   DS    F
HORZNT   DS    F
IMAGE    DS    F
LINEWT   DS    F
PLSTPX   DS    F
PLSTPY   DS    F
SX       DS    F
SY       DS    F
TIMAGE   DS    16F
XMAX     DS    F
YMAX     DS    F
ZMAX     DS    F
PLXDPI   DS    F
PLYDPI   DS    F
PLMAXX   DS    F
PLMAXY   DS    F
MAXBTX   DS    F
MAXBTY   DS    F
BMD1     DS    F
BMD2     DS    F
CURPEN   DS    CL1
PENARY   DS    CL9
ELSIZE   DS    H
BITMAPA  DS    0C
         END
