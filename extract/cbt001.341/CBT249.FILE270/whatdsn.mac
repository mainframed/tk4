*
*  AUTHOR: JEFF SPREHN
*
*
* WW     WW  HH   HH      A     TTTTTTTT  DDDDD      SSSS    NN     NN
* WW     WW  HH   HH     AAA    TTTTTTTT  DD  DD    S    S   NNN    NN
* WW     WW  HH   HH    AA AA      TT     DD   DD  S         NNNN   NN
* WW     WW  HHHHHHH    AA AA      TT     DD    DD  S        NN NN  NN
* WW  W  WW  HHHHHHH   AAAAAAA     TT     DD    DD   SSSS    NN  NN NN
* WWWW WWWW  HH   HH   AA   AA     TT     DD   DD        S   NN   NNNN
* WWW   WWW  HH   HH  AA     AA    TT     DD  DD    S     S  NN     NN
* WW     WW  HH   HH  AA     AA    TT     DDDDD      SSSS    NN      N
*
*  -----------------------------------------------------------------
*  COMMAND     OPERANDS
*  -----------------------------------------------------------------
*                                --  --
*  WHATDSN     DDNAME('DDNAME') × ALL ×
*                                --  --
*  -----------------------------------------------------------------
*
*
*  OPERANDS -
*
*       REQUIRED -
*
*           DDNAME('DDNAME') --- 'DDNAME' IS THE DDNAME THAT YOU
*                                 WISH TO HAVE THE DSNAME(S) THAT
*                                 IS/ARE ASSOCIATED WITH THAT DDNAME
*
*       OPTIONAL -
*
*           ALL              ---  IF ALL IS GIVEN, THIS COMMAND WILL
*                                 RETURN ALL OF THE DSNAMES WHICH
*                                 MAY BE CONCATENATED TO THE DDNAME
*                                 IN CLIST VARIABLES &DSNAME1 THRU
*                                 &DSNAME9 AND &DSNSCNT WILL
*                                 CONTAIN THE TOTAL NUMBER OF
*                                 DSNAMES ASSOCIATED WITH THE DDNAME
*                                 (&DSNSCNT COULD POTENTIALLY CONTAIN
*                                 A VALUE GREATER THAN 9 HOWEVER)
*
*                                 IF ALL IS NOT GIVEN, THEN ONLY
*                                 THE DSNAME THAT IS CONCATENATED
*                                 "AT THE TOP OF THE STACK" IS GIVEN.
*                                 IT IS RETURNED IN &DSNAME.
         EJECT
*
*        THIS COMMAND WILL ALSO RETURN A VALUE IN REGISTER 15
*        (THE RETURN CODE) REPRESENTING THE SUCCESS OR NONSUCCESS
*        OF THIS COMMAND.
*
*        ×---------×-----------------------------------------------×
*        × &LASTCC × MEANING                                       ×
*        ×---------×-----------------------------------------------×
*        ×    0    × SUCCESSFUL COMPLETION                         ×
*        ×---------×-----------------------------------------------×
*        ×    8    × DDNAME NOT ALLOCATED                          ×
*        ×---------×-----------------------------------------------×
*        ×   12    × MORE THAN 50 DATASETS CONCATENATED TO DDNAME  ×
*        ×---------×-----------------------------------------------×
*        ×   96    × INVALID SYNTAX OF OPERAND(S)                  ×
*        ×---------×-----------------------------------------------×
         EJECT
WHATDSN ENTERR
         EJECT
********************************************************************
*                                                                  *
*      M A I N   L I N E   L O G I C   F O R   W H A T D S N       *
*                                                                  *
********************************************************************
*
         LR    R11,R1              SAVE THE PARM POINTER
         MVC   RETRNCD(4),=F'0'    SET RETRNCD = 0
         MVC   PROCESSW,=C'YES'    MOVE 'YES' TO PROCESSW
         BAL   R14,DOPARSE         PERFORM THE PARSE SERVICE ROUTINE
         CLC   PROCESSW,=C'YES'    WAS PARSE SUCCESFUL ?
         BNE   SHUTDOWN            IF NOT, BRANCH TO SHUTDOWN
         BAL   R14,LOADFLDS        PERFORM ROUTINE TO LOAD THE
*                                     PARSED FIELDS INTO
*                                     DDNAME AND ALLOFEM
         CLC   PROCESSW,=C'YES'    IS ALL OK ?
         BNE   SHUTDOWN            IF NOT, BRANCH TO SHUTDOWN
         BAL   R14,GETDSNS         PERFORM ROUTINE TO LOCATE THE
*                                     DSNAME(S) ASSOCIATED WITH
*                                     THE DDNAME
         CLC   PROCESSW,=C'YES'    IS ALL STILL OK ?
         BNE   SHUTDOWN            IF NOT, BRANCH TO SHUTDOWN
         BAL   R14,INITLIST        BUILD PARMLIST FOR IKJUPDT
         BAL   R14,SETDSN          SET CLIST VARIABLE &DSNAME
         CLC   ALLOFEM,=C'YES'     HAS ALL DSNAMES BEEN REQUESTED ?
         BNE   SHUTDOWN            IF NOT, BRANCH TO SHUTDOWN
         BAL   R14,SETEMALL        SET CLIST VARIABLES &DSNAME1
*                                     THRU &DSNAME9
         BAL   R14,STDSNCNT        SET CLIST VARIABLE &DSNSCNT
         B     SHUTDOWN            BRANCH TO SHUTDOWN
         EJECT
********************************************************************
*                                                                  *
*        P A R S E   I N P U T   C O M M A N D   B U F F E R       *
*                                                                  *
********************************************************************
*
DOPARSE  ST    R14,SAVEIT1
         KKPARSE
         LTR   R15,R15              RC = 0 ? (I.E PARSE GO OK ?)
         BNZ   PARSERR              IF NOT, BRANCH TO PARSERR
         L     R10,ANS
         USING IKJPARMD,R10
         B     EXITPARS
PARSERR  MVC   PROCESSW,=C'NO '     MOVE 'NO ' TO PROCESSW
         MVC   RETRNCD(4),=F'96'    SET RETRNCD = 96
EXITPARS L     R14,SAVEIT1
         BR    14
         EJECT
********************************************************************
*                                                                  *
*        THIS ROUTINE PROCESSES THE PARSED FIELDS AND THEN         *
*        LOADS THE DATA FIELDS DDNAME AND ALLOFEM                  *
*                                                                  *
*        DDNAME WILL CONTAIN THE DDNAME ENTERED BY THE USER IN     *
*        THE DDNAME KEYWORD                                        *
*                                                                  *
*        ALLOFEM WILL CONTAIN 'YES' IF THE USER ENTERED ALL        *
*        AS A PARAMETER OF THE COMMAND ELSE ALLOFEM WILL           *
*        CONTAIN 'NO '                                             *
*                                                                  *
********************************************************************
*
LOADFLDS ST    R14,SAVEIT2
         TM    DSTRING+6,X'80'         IS DDNAME PRESENT ?
         BNO   BADDNAME                IF NOT, BRANCH TO BADDNAME
         MVC   DDNAME,=CL8' '          MOVE SPACES TO DDNAME
         LA    R6,DDNAME               R6 ==> ADDR OF DATA FIELD DDNAME
         L     R8,DSTRING              R8 ==> ADDRESS OF THE DDNAME
         LH    R7,DSTRING+4            R7 ==> LENGTH OF THE DDNAME
         C     R7,=F'8'
         BH    BADDNAME
         S     R7,=F'1'                SUBTRACT 1 FOR EX
         SPACE 1
MOVEDDN  MVC   0(0,R6),0(R8)           MOVE THE DDNAME TO DDNAME
         EX    R7,MOVEDDN
         SPACE 1
         CLC   ALL,=XL2'0000'          WAS ALL SPECIFIED ?
         BE    NOPEALL                 IF NOT, BRANCH TO NOPEALL
         MVC   ALLOFEM,=CL3'YES'       MOVE 'YES' TO ALLOFEM
         B     EXITLOAD                BRANCH TO EXITLOAD
NOPEALL  MVC   ALLOFEM,=CL3'NO '       MOVE 'NO ' TO ALLOFEM
         B     EXITLOAD                BRANCH TO EXITLOAD
BADDNAME MVC   PROCESSW,=C'NO '        MOVE 'NO ' TO PROCESSW
         MVC   RETRNCD(4),=F'96'       SET RETRNCD = 96
EXITLOAD L     R14,SAVEIT2
         BR    14
         EJECT
*
********************************************************************
*                                                                  *
*        THIS ROUTINE IS RESPONSIBLE FOR DETERMINING WHETHER THE   *
*        DDNAME PASSED TO IT IS ALLOCATED.  IF IT IS ALLOCATED,    *
*        THEN THIS ROUTINE PASSES BACK ALL OF THE ASSOCIATED       *
*        DSNAMES (AND THEIR LENGTHS)                               *
*                                                                  *
*        BEFORE PERFORMING THIS ROUTINE, MOVE THE DDNAME TO        *
*        DDNAME                                                    *
*                                                                  *
*        IF THE DDNAME IS ALLOCATED AND THERE ARE NO MORE THAN 50  *
*        DATASETS CONCATENATED TO THE DDNAME, THEN THIS ROUTINE    *
*        LOADS THE TABLE DSNSTABL WITH ALL OF THE DSNAMES WHICH    *
*        ARE ASSOCIATED WITH THE DDNAME.  THE NUMBER OF SIGNIFICANT*
*        ENTRIES IN THAT TABLE IS IN #OFDSNS (EACH ENTRY IN THE    *
*        TABLE IS 50 BYTES LONG.  THE LENGTH OF THE DSNAME IS IN   *
*        BYTES 5-6 AND THE DSNAME IS IN BYTES 7-50)                *
*                                                                  *
*        IF THE DDNAME IS NOT ALLOCATED, THEN THIS ROUTINE DOES    *
*           THE FOLLOWING:                                         *
*                                                                  *
*                .  MOVES 'NO ' TO PROCESSW                        *
*                .  MOVES 8 TO RETRNCD                             *
*                                                                  *
*        IF THERE ARE MORE THAN 50 DATASETS CONCATENATED TO THE    *
*           DDNAME, THEN THIS ROUTINE DOES THE FOLLOWING:          *
*                                                                  *
*                .  MOVES 'NO ' TO PROCESSW                        *
*                .  MOVES 12 TO RETRNCD                            *
*                                                                  *
********************************************************************
*
GETDSNS  ST    R14,SAVEIT3             SAVE REG 14 IN SAVEIT3
         CALL  DSNTAB,(DDNAME,DSNSTABL,TABLSIZE,#OFDSNS),VL,           X
               MF=(E,LISTKALL)
         C     R15,=F'4'
         BE    NOTALLOC
         C     R15,=F'8'
         BE    TOOMANY
         B     EXITDSNS
NOTALLOC MVC   PROCESSW,=CL3'NO '      MOVE 'NO ' TO PROCESSW
         MVC   RETRNCD(4),=F'8'        SET RETRNCD = 08
         B     EXITDSNS
TOOMANY  MVC   PROCESSW,=CL3'NO '      MOVE 'NO ' TO PROCESSW
         MVC   RETRNCD(4),=F'12'       SET RETRNCD = 12
EXITDSNS L     R14,SAVEIT3
         BR    R14
         EJECT
********************************************************************
*                                                                  *
*        BUILD UPDTLIST (IKJUPDT PARM LIST)                        *
*                                                                  *
********************************************************************
*
INITLIST ST    R14,SAVEIT4
         MVC   UPDTUPT,CPPLUPT          UPT
         MVC   UPDTECT,CPPLECT          ECT
         LA    R9,ECB
         ST    R9,UPDTECB               ECB
         LA    R8,UPLIST
         ST    R8,UPDTUPL               UPLIST
         L     R14,SAVEIT4
         BR    14
         EJECT
********************************************************************
*                                                                  *
*        BUILD UPDATE PARM LIST FOR &DSNAME AND CALL IKJUPDT       *
*                                                                  *
********************************************************************
*
SETDSN   ST    R14,SAVEIT5
         LA    R9,=C'DSNAME'       R9 ==> ADDRESS OF VAR NAME
         ST    R9,LOCPTR           STORE ADDR OF VAR NAME IN LOCPTR
         MVC   LOCLEN,=F'6'        LOCLEN = LENGTH OF VAR NAME
         LA    R5,DSNSTABL+6       R5 ==> ADDRESS OF VARIABLE
         ST    R5,VALPTR           STORE ADDRESS OF VARIABLE IN VALPTR
         MVC   DSNLEN(2),DSNSTABL+4
         LH    R6,DSNLEN
         ST    R6,VALLEN           VALLEN = LENGTH OF DATA FIELD
         LA    R1,UPDTLIST         R1 ==> IKJUPDT PARM LIST
         CALL  IKJUPDT             DO THE UPDATE
         L     R14,SAVEIT5
         BR    14
         EJECT
********************************************************************
*                                                                  *
*        BUILD UPDATE PARM LIST FOR &DSNAME1 THRU &DSNAME9         *
*                                                                  *
********************************************************************
*
SETEMALL ST    R14,SAVEIT6
         LA    R9,NAMSTABL
         LA    R5,DSNSTABL+6
         LH    R7,#OFDSNS         R7==> NUMBER OF SIGNIFICANT DSNAMES
         LA    R6,0
LOOP     A     R6,=F'1'
         C     R6,=F'9'
         BH    EXITSETM
         CR    R6,R7
         BH    EXITSETM
         ST    R9,LOCPTR           STORE ADDR OF VAR NAME IN LOCPTR
         MVC   LOCLEN,=F'7'        LOCLEN = LENGTH OF VAR NAME
         ST    R5,VALPTR           STORE ADDRESS OF VARIABLE IN VALPTR
         LR    R8,R5
         S     R8,=F'2'
         MVC   VALLEN,=F'0'
         MVC   VALLEN+2(2),0(R8)
         LA    R1,UPDTLIST         R1 ==> IKJUPDT PARM LIST
         CALL  IKJUPDT             DO THE UPDATE
         A     R9,=F'7'
         A     R5,=F'50'
         B     LOOP
EXITSETM L     R14,SAVEIT6
         BR    14
         EJECT
********************************************************************
*                                                                  *
*        BUILD UPDATE PARM LIST FOR &DSNSCNT AND CALL IKJUPDT      *
*                                                                  *
********************************************************************
*
STDSNCNT ST    R14,SAVEIT7
         LH    R5,#OFDSNS
         CVD   R5,CVDOPRND
         UNPK  UNPKCNT(3),CVDOPRND+6(2)
         MVC   DSNSCNT(2),UNPKCNT+1
         OI    DSNSCNT+1,X'F0'
         LA    R9,=C'DSNSCNT'      R9 ==> ADDRESS OF VAR NAME
         ST    R9,LOCPTR           STORE ADDR OF VAR NAME IN LOCPTR
         MVC   LOCLEN,=F'7'        LOCLEN = LENGTH OF VAR NAME
         LA    R5,DSNSCNT          R5 ==> ADDRESS OF VARIABLE
         ST    R5,VALPTR           STORE ADDRESS OF VARIABLE IN VALPTR
         MVC   VALLEN,=F'2'        VALLEN = LENGTH OF DATA FIELD
         LA    R1,UPDTLIST         R1 ==> IKJUPDT PARM LIST
         CALL  IKJUPDT             DO THE UPDATE
         L     R14,SAVEIT7
         BR    14
         EJECT
********************************************************************
*                                                                  *
*        E N D   O F   J O B   R O U T I N E                       *
*                                                                  *
********************************************************************
*
SHUTDOWN L    R15,RETRNCD
         LEAVER
         EJECT
         SPACE 3
********************************************************************
*                                                                  *
*                    D A T A    A R E A S                          *
*                                                                  *
********************************************************************
*
LISTKALL CALL  ,(0,0,0,0),VL,MF=L
TABLSIZE DC    H'2500'
NAMSTABL DS    0CL63
         DC    CL7'DSNAME1'
         DC    CL7'DSNAME2'
         DC    CL7'DSNAME3'
         DC    CL7'DSNAME4'
         DC    CL7'DSNAME5'
         DC    CL7'DSNAME6'
         DC    CL7'DSNAME7'
         DC    CL7'DSNAME8'
         DC    CL7'DSNAME9'
ALLOFEM  DC    CL3'YES'
         LTORG
         EJECT
         SPACE 3
********************************************************************
*                                                                  *
*        D Y N A M I C   W O R K   A R E A                         *
*                                                                  *
********************************************************************
*
WORKAREA DSECT
SAVEAREA DS    18F
PPLA     DS    7F
ANS      DS    F
ECB      DS    F
DDNAME   DS    CL8
DSNSCNT  DS    CL2
PROCESSW DS    CL3
         DS    0D
CVDOPRND DS    D
SAVEIT1  DS    F
SAVEIT2  DS    F
SAVEIT3  DS    F
SAVEIT4  DS    F
SAVEIT5  DS    F
SAVEIT6  DS    F
SAVEIT7  DS    F
#OFDSNS  DS    H
DSNSTABL DS    50CL50
RETRNCD  DS    F
DSNLEN   DS    H
UNPKCNT  DS    CL3
*
UPDTLIST DS    0F
UPDTUPT  DS    F
UPDTECT  DS    F
UPDTECB  DS    F
UPDTUPL  DS    F
*
UPLIST   DS    0F
LOCPTR   DS    AL4
LOCLEN   DS    FL4
VALPTR   DS    AL4
VALLEN   DS    FL4
*
ACCTVAL  DS    CL9
WORKLEN  EQU   *-WORKAREA
WHATDSN CSECT
         EJECT
********************************************************************
*                                                                  *
*                   P A R S E   M A C R O S                        *
*                                                                  *
********************************************************************
*
PCL      IKJPARM
FILE     IKJKEYWD
         IKJNAME 'FILE',SUBFLD=DDNAM,ALIAS=('DDNAME')
ALL      IKJKEYWD
         IKJNAME 'ALL'
DDNAM    IKJSUBF
DSTRING  IKJPOSIT DSNAME
         IKJENDP
         END
