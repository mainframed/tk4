./ ADD NAME=$REQU                                  27JUN84 18.58.43
         MACRO
         REQU
**                           EQUATES FOR SYMBOLIC REG USAGE
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
RA       EQU   10
RB       EQU   11
RC       EQU   12
RD       EQU   13
RE       EQU   14
RF       EQU   15
         MEND
./ ADD NAME=BPPL     0106-80178-82298-1145-00032-00049-00011-KK00150
         MACRO
&LAB1    BPPL   &DSECT
         LCLC  &LAB2
*
*               PARAMETER LIST PASSED TO OPERSCAN SUBROUTINE :
*
         AIF   (T'&LAB1 NE 'O').LOK
&LAB2    SETC  'BPPL'
         AGO   .DSCK
.LOK     ANOP
&LAB2    SETC  '&LAB1'
.DSCK    AIF   ('&DSECT' EQ 'DSECT').DSL
         DS    0A
&LAB2    DS    0XL44
         AGO   .ADSL
.DSL     ANOP
&LAB2    DSECT
.ADSL    ANOP
BUFFPTR  DS    F                        BUFFER PTR (CBUF)
LENPTR   DS    F                        LENGTH PTR (CBUF LEN)
STARTPTR DS    F                        START SEARCH PTR
OPERPTR  DS    F                        NEXT OPER LOC
OPLENPTR DS    F                        NEXT OPER LEN PTR
SUBPTR   DS    F                        SUBFIELD PTR (PARENS INCLUDED)
SUBLENPT DS    F                        SUBFIELD LEN PTR
WORKPTR  DS    F                        WORK PTR (OPTIONAL 350 BYTES)
OPDESCP  DS    F                        PTR TO OPERAND DESCRIPTOR
         DS    F                        RESERVED (ZERO)
*
OPLEN    DS    H                        POINTED TO BY OPLENPTR
SUBLEN   DS    H                        POINTED TO BY SUBLENPT
         MEND
./ ADD NAME=CANDO    0103-83139-83139-1629-00022-00020-00005-KK00150
         MACRO
&L1      CANDO
         LCLA  &I,&J,&K,&L
         LCLC  &O(3)
&O(1)    SETC  'PAL'
&O(2)    SETC  'DIALOG'
&O(3)    SETC  'NOPARM'
.L1      ANOP
&I       SETA  &I+1
         AIF   (&I GT 3).MEX
&K       SETA  2*&K
&J       SETA  0
.L2      ANOP
&J       SETA  &J+1
         AIF   (&J GT N'&SYSLIST).L1
         AIF   ('&SYSLIST(&J)' NE '&O(&I)').L2
&K       SETA  &K+1
         AGO   .L1
.MEX     ANOP
&L       SETA  K'&L1
         DC    AL2(&L),AL2(&K),CL8'&L1'
.X       MEND
./ ADD NAME=DDNTU    0109-81153-81154-0924-00023-00018-00015-KK00150
         MACRO
&L1      DDNTU  &N,&NL,&MF=L
         LCLC  &TUN
         AIF   (T'&NL NE 'O').NO
&NL      SETA  L'&N
.NO      AIF   ('&MF' NE 'L').ET
&L1      DC    X'00010001',H'&NL',CL&NL'&N'
         AGO   .X
.ET      AIF   (N'&MF LE 1).X
         AIF   ('&MF(1)' NE 'E').X
&TUN     SETC  '&MF(2)'
&L1      MVC   &TUN.(4),=X'00010001'
         AIF   (T'&NL EQ 'N').NH
         MVC   &TUN+4(2),&NL
         LH    R1,&NL
         BCTR  R1,R0
M&SYSNDX MVC   &TUN+6(0),&N
         EX    R1,M&SYSNDX
         AGO   .X
.NH      ANOP
         MVC   &TUN+4(2),=H'&NL'
         MVC   &TUN+6(&NL),=C'&N'
.X       MEND
./ ADD NAME=DSNTU    0108-81153-81154-0926-00023-00020-00008-KK00150
         MACRO
&L1      DSNTU  &N,&NL,&MF=L
         LCLC  &TUN
         AIF   (T'&NL NE 'O').NO
&NL      SETA  L'&N
.NO      AIF   ('&MF' NE 'L').ET
&L1      DC    X'00020001',H'&NL',CL&NL'&N'
         AGO   .X
.ET      AIF   (N'&MF LE 1).X
         AIF   ('&MF(1)' NE 'E').X
&TUN     SETC  '&MF(2)'
&L1      MVC   &TUN.(4),=X'00020001'
         AIF   (T'&NL EQ 'N').NH
         MVC   &TUN+4(2),&NL
         LH    R1,&NL
         BCTR  R1,R0
M&SYSNDX MVC   &TUN+6(0),&N
         EX    R1,M&SYSNDX
         AGO   .X
.NH      ANOP
         MVC   &TUN+4(2),=H'&NL'
         MVC   &TUN+6(&NL),=C'&N'
.X       MEND
./ ADD NAME=DSPTU    0105-81153-81153-1719-00020-00019-00010-KK00150
         MACRO
&L1      DSPTU  &N,&MF=L
         LCLC  &TUN,&HS
         AIF   ('&N' NE 'OLD').T2
&HS      SETC  '01'
.T2      AIF   ('&N' NE 'MOD').T4
&HS      SETC  '02'
.T4      AIF   ('&N' NE 'NEW').T8
&HS      SETC  '04'
.T8      AIF   ('&N' NE 'SHR').TO
&HS      SETC  '08'
.TO      AIF   ('&MF' NE 'L').ET
&L1      DC    X'00040001',X'0001',X'&HS'
         AGO   .X
.ET      AIF   (N'&MF LE 1).X
         AIF   ('&MF(1)' NE 'E').X
&TUN     SETC  '&MF(2)'
&L1      MVC   &TUN.(6),=X'000400010001'
         MVI   &TUN+6,X'&HS'
.X       MEND
./ ADD NAME=DYNABLK  0103-81153-81153-1714-00039-00039-00006-KK00150
         MACRO
&L1      DYNABLK &TN,&MF=L
         LCLA  &I,&J
         LCLC  &LP,&RLN
&I       SETA  &TN
&J       SETA  1
         AIF   ('&MF' EQ 'L').LT
         AIF   (N'&MF LE 1).X
         AIF   ('&MF(1)' NE 'E').X
&RLN     SETC  '&MF(2)'
&LP      SETC  '&RLN'(1,4)
&L1      LA    R1,&LP.RB
         ST    R1,&RLN
         MVI   &RLN,X'80'
         MVC   &LP.RB(8),=X'1401200000000000'
         XC    &LP.TPLA(12),&LP.TPLA
         LA    R1,&LP.TPL
         ST    R1,&LP.TPLA
.STP     AIF   (&J GT &I).SEF
         LA    R1,&LP.TU&J
         ST    R1,&LP.TP&J
&J       SETA  &J+1
         AGO   .STP
.SEF     ANOP
         MVI   &LP.TP&I,X'80'
         AGO   .X
.LT      ANOP
&LP      SETC  '&L1'(1,4)
         DS    0F
&L1      DC    X'80',AL3(&LP.RB)
&LP.RB   DC    X'14',X'01',X'2000'
         DC    X'0000',X'0000'
&LP.TPLA DC    A(&LP.TPL),2F'0'
&LP.TPL  DS    0H
.TPL     AIF   (&J GT &I).X
&LP.TP&J DC    A(&LP.TU&J)
&J       SETA  &J+1
         AGO   .TPL
.X       MEND
./ ADD NAME=EDT                                    27JUN84 18.58.43
*
* COMMON NAME   -   ELIGIBLE DEVICE TABLE
* MACRO         -   EDT
* DSECT NAMES   -   EDTHEAD,LOOKSEC,GENSEC,GPTRSEC,GRPSEC
* CREATED BY    -   SYSGEN
* POINTED TO BY -   JESCT
* SERIALIZATION -   NONE
* FUNCTION      -   ASSOCIATE DEVICES WITH UNIT NAMES
*
EDT      DSECT                         ELIGIBLE DEVICE TABLE
EDTHEAD  EQU   *                       EDT HEADER
LOOKPTR  DS    A                       ->LOOKUP SECTION
         ORG   EDT
LOOKSEC  EQU   *                       LOOKUP SECTION
LOOK#ENT DS    F                       # ENTRIES
LOOKLENT DS    F                       LENGTH OF AN ENTRY
LOOKUNIT DS    CL8                     UNIT NAME
LOOKVAL  DS    F                       LOOKUP VALUE
LOOKMPTR DS    A                       ->GROUP MASK ENTRY
LOOK#GEN DS    F                       # GENERICS
LOOKGPTR DS    A                       ->GENERIC SECTION
         ORG   EDT
GENSEC   EQU   *                       GENERIC SECTION
GENDEV   DS    XL4                     GENERIC DEVICE TYPE
GEN#GRP  DS    F                       # GROUPS
GENGPTR  DS    A                       ->FIRST GROUP POINTER
         ORG   EDT
GPTRSEC  EQU   *                       GROUP POINTER TABLE
GPTRGRP  DS    A                       ->FIRST GROUP ENTRY
         ORG   EDT
GRPSEC   EQU   *                       GROUP SECTION ENTRY
GRPID    DS    F                       GROUP ID
GRP#UCB  DS    F                       # UCBS
GRPOUCB  DS    A                       ->FIRST UCB ENTRY
./ ADD NAME=ENTER                                  27JUN84 18.58.43
         MACRO
&SUBR    ENTER &REGS,&BASES,&SAVE
         GBLC  &LV,&SP,&SAVED(2)
         LCLA  &K,&N
         LCLC  &AREA,&B(16),&SUBNAME,&S
&SAVED(1) SETC '&REGS(1)'
&SAVED(2) SETC '&REGS(2)'
&SUBNAME SETC  '&SUBR'
         AIF   ('&SUBNAME' NE '').P1
&SUBNAME SETC  'MAIN'
.P1      ANOP
&SUBNAME CSECT
         AIF   ('&REGS' EQ '').PA
         SAVE  &REGS,T,*
.PA      AIF   ('&BASES(1)' EQ '15' OR '&BASES' EQ '').PC
         AIF   ('&BASES(1)' EQ '13' AND '&SAVE' NE '').PC
         LR    &BASES(1),15
.PC      CNOP  0,4
&S       SETC  '&SUBNAME'
         AIF   (N'&SAVE EQ 2).P4
         AIF   ('&SAVE' EQ '').P3
&AREA    SETC  '&SAVE'
         AIF   ('&SAVE' NE '*').P2
&AREA    SETC  'SAVEAREA'
.P2      AIF   ('&SAVE' NE '+').PB
&AREA    SETC  'SAVE'.'&SYSNDX'
.PB      AIF   ('&BASES(1)' NE '13').P4
&S       SETC  '*'
         USING &SUBNAME,15
         AIF   ('&REGS' EQ '').PD
         ST    14,&AREA+4
         LA    14,&AREA
         ST    14,8(13)
         L     14,&AREA+4
         ST    13,&AREA+4
.PD      BAL   13,*+76
         DROP  15
         AGO   .P4
.P3      AIF   ('&BASES(1)' NE '13').P4
         MNOTE 8,'*** THE CONTENTS OF REG. 13 ARE LOST. NO SAVE AREA WAX
               S ESTABLISHED.'
.P4      AIF   ('&BASES(1)' NE '14' OR '&SAVE' EQ '').P5
         MNOTE 8,'*** MACRO RESTRICTION - REG. 14 MUST NOT BE USED AS TX
               HE FIRST BASE REGISTER IF A SAVE AREA IS USED.'
.P5      AIF   ('&BASES' EQ '').P9
&N       SETA  N'&BASES
.P6      ANOP
&K       SETA  &K+1
&B(&K)   SETC  ','.'&BASES(&K)'
         AIF   (N'&SAVE EQ 1).PE
         AIF   ('&BASES(&K)' NE '13').P7
         MNOTE 8,'*** REG. 13 MAY NOT BE USED AS A BASE REGISTER FOR REX
               ENTRANT CODE.'
         AGO   .P7
.PE      AIF   ('&BASES(&K+1)' NE '13' OR '&SAVE' EQ '').P7
         MNOTE 8,'*** WHEN USING A SAVE AREA, REG. 13 MAY NOT BE USED AX
               S A SECONDARY BASE REGISTER.'
.P7      AIF   ('&BASES(&K+1)' NE '').P6
         USING &S&B(1)&B(2)&B(3)&B(4)&B(5)&B(6)&B(7)&B(8)&B(9)&B(10)&B(X
               11)&B(12)&B(13)&B(14)&B(15)&B(16)
&K       SETA  1
         AIF   ('&BASES(1)' NE '13' OR '&SAVE' EQ '').P8
&AREA    DC    18F'0'
.P8      AIF   (&K GE &N).P10
         LA    &BASES(&K+1),X'FFF'(&BASES(&K))
         LA    &BASES(&K+1),1(&BASES(&K+1))
&K       SETA  &K+1
         AGO   .P8
.P9      USING &SUBNAME,15
.P10     AIF   (N'&SAVE EQ 2).P13
         AIF   ('&SAVE' EQ '' OR '&BASES(1)' EQ '13').P12
         AIF   ('&REGS' EQ '').P11
         ST    14,&AREA+4
         LA    14,&AREA
         ST    14,8(13)
         L     14,&AREA+4
         ST    13,&AREA+4
.P11     BAL   13,*+76
&AREA    DC    18F'0'
.P12     MEXIT
.P13     ANOP
&LV      SETC  '&SAVE(2)'
&SP      SETC  '0'
         AIF   ('&SAVE(1)' EQ '').P14
&SP      SETC  '&SAVE(1)'
.P14     GETMAIN R,LV=&LV,SP=&SP
         ST    13,4(1)
         ST    1,8(13)
         LR    2,13
         LR    13,1
         LM    0,2,20(2)
         MEND
./ ADD NAME=ENTERNR  0101-77221-80274-1650-00016-00015-00003-KK00150
         MACRO
&LAB1    ENTERNR &SA=SAVEAREA,&LEVEL=
         MNOTE '        SA=&SA,LEVEL=&LEVEL'
&LAB1    START
         SAVE  (14,12),,&LAB1-&LEVEL
         LR    R12,R15            HOPE HE KNOWS WHAT HE'S DOING
         USING &LAB1,R12
         ST    R13,&SA.+4         SAVE HIS SAVEAREA PTR
         LR    R11,R13            SAVE THE SAVE POINTER
         LA    R13,&SA            R13->SAVEAREA (MINE)
         ST    R13,8(,R11)        MINE IN HIS
         B     ENTEX
&SA      DS    18F
         REGEQU
ENTEX    DS    0H
         MEND
./ ADD NAME=ENTERR   0103-83188-83188-1738-00031-00031-00005-KK00150
         MACRO
&LAB1    ENTERR  &SA=SAVEAREA,&WA=WORKAREA,&WL=WORKLEN,&LEVEL=,&R=,   XX
               &CLEAR=NO
         MNOTE ' CLEAR=&CLEAR,SA=&SA,WA=&WA,WL=&WL,LEVEL=&LEVEL'
&LAB1    CSECT
         SAVE  (14,12),,&LAB1-&LEVEL
         LR    R12,R15            HOPE HE KNOWS WHAT HE'S DOING
         USING &LAB1,R12
         LR    R10,R1             SAVE PARM PTR R10->PARM PTR
         L     R0,=A(&WL)         R0=GET LENGTH
         GETMAIN R,LV=(0)         R1->WORKAREA
         LR    R11,R13            R11->CALLERS SAVEAREA
         LR    R13,R1             R13->WORKAREA
         USING &WA.,R13
         AIF   ('&CLEAR' NE 'YES').NCLEAR
         L     R15,=A(&WL)        R0=GET LENGTH
         S     R15,=F'72'         SKIP REGS
         MOVE  72(13),(15),0,0,PAD=X'00'
.NCLEAR  ANOP
         ST    R11,&SA.+4         SAVE HIS SAVEAREA PTR
         LA    R13,&SA            R13->SAVEAREA (MINE)
         ST    R13,8(,R11)        MINE IN HIS
         LR    R11,R1             R11->WORKAREA IN CASE NOT SAME AS R13
*                       WORKAREA ADDR IS STILL R13 FOR
*                       THE ASSEMBLER - IF DIFFERENT FROM R13
*                       THEN USE: DROP R13 AND USING &WA.,R11
         LR    R1,R10             RESTORE PARM PTR PTR
         AIF   ('&R' EQ 'NO').NRE
         REGEQU
.NRE     ANOP
         MEND
./ ADD NAME=ENTERRO  0107-77221-80311-1656-00025-00021-00007-KK00150
         MACRO
&LAB1    ENTERR &SA=SAVEAREA,&WA=WORKAREA,&WL=WORKLEN,&LEVEL=,&R=
         MNOTE '             SA=&SA,WA=&WA,WL=&WL,LEVEL=&LEVEL'
&LAB1    CSECT
         SAVE  (14,12),,&LAB1-&LEVEL
         LR    R12,R15            HOPE HE KNOWS WHAT HE'S DOING
         USING &LAB1,R12
         LR    R10,R1             SAVE PARM PTR R10->PARM PTR
         L     R0,=A(&WL)         R0=GET LENGTH
         GETMAIN R,LV=(0)         R1->WORKAREA
         LR    R11,R13            R11->CALLERS SAVEAREA
         LR    R13,R1             R13->WORKAREA
         USING &WA.,R13
         ST    R11,&SA.+4         SAVE HIS SAVEAREA PTR
         LA    R13,&SA            R13->SAVEAREA (MINE)
         ST    R13,8(,R11)        MINE IN HIS
         LR    R11,R1             R11->WORKAREA IN CASE NOT SAME AS R13
*                       WORKAREA ADDR IS STILL R13 FOR
*                       THE ASSEMBLER - IF DIFFERENT FROM R13
*                       THEN USE: DROP R13 AND USING &WA.,R11
         LR    R1,R10             RESTORE PARM PTR PTR
         AIF   ('&R' EQ 'NO').NRE
         REGEQU
.NRE     ANOP
         MEND
./ ADD NAME=ENTERWW  0102-82328-83068-1125-00035-00030-00006-KK00150
         MACRO
&LAB1    ENTERWW &WC,&SA=SAVEAREA,&WA=WORKAREA,&LEVEL=,&R=
         MNOTE '             SA=&SA,WA=&WA,LEVEL=&LEVEL'
&LAB1    CSECT
         SAVE  (14,12),,&LAB1-&LEVEL
         LR    R12,R15            HOPE HE KNOWS WHAT HE'S DOING
         USING &LAB1,R12
         LR    R10,R1             SAVE PARM PTR R10->PARM PTR
         LCLA  &I
&I       SETA  1
.WL      AIF   (&I GT N'&WC).GW
         AIF   (T'&WC(&I) NE 'N').ASIS
         L     R1,4*&WC(&I)-4(,R1)
         AGO   .NSC
.ASIS    ANOP
         L     R1,&WC(&I)(,R1)
.NSC     ANOP
&I       SETA  &I+1
         AGO   .WL
.GW      ANOP
         LR    R11,R13            R11->CALLERS SAVEAREA
         LR    R13,R1             R13->WORKAREA
         USING &WA.,R13
         ST    R11,&SA.+4         SAVE HIS SAVEAREA PTR
         LA    R13,&SA            R13->SAVEAREA (MINE)
         ST    R13,8(,R11)        MINE IN HIS
         LR    R11,R1             R11->WORKAREA IN CASE NOT SAME AS R13
*                       WORKAREA ADDR IS STILL R13 FOR
*                       THE ASSEMBLER - IF DIFFERENT FROM R13
*                       THEN USE: DROP R13 AND USING &WA.,R11
         LR    R1,R10             RESTORE PARM PTR PTR
         AIF   ('&R' EQ 'NO').NRE
         REGEQU
.NRE     ANOP
         MEND
./ ADD NAME=FULLRTRN                               27JUN84 18.58.43
         MACRO
&NAME    FULLRTRN   &LV=,&SP=,&RC=0,&RENT=YES
         LCLC  &LVA,&SPA
         AIF   ('&RENT' EQ 'YES' OR '&RENT' EQ 'SPECIAL').ISRENT
         AIF   ('&RENT' EQ 'NO').NOTRENT
         MNOTE 8,'IF RENT PARAMETER IS SPECIFIED, IT MUST HAVE THE VALUX
               E ''YES'', ''NO'', OR ''SPECIAL''.'
         MEXIT
.NOTRENT AIF   (T'&LV EQ 'O').TSTSP
.LVSPMSG MNOTE 8,'IF RENT=NO, NEITHER LV NOR SP MAY BE SPECIFIED'
         MEXIT
.TSTSP   AIF   (T'&SP NE 'O').LVSPMSG
&NAME    L     13,4(13)  GET CALLER'S SAVEAREA ADDRESS
         AGO   .RETURN
.ISRENT  AIF   (T'&SP NE 'O').TSTLV
&SPA     SETC  '0'
.TSTLV   AIF   (T'&LV    NE 'O').GENER
&LVA     SETC  '72'
         AGO   .LR
.GENER   AIF   ('&LV' NE '0').LR
&NAME    SR    1,1 ZERO REGISTER TO INDICATE ENTIRE SUBPOOL BEING FREED
         AGO   .LOAD13
.LR      ANOP
&NAME    LR    1,13 LOAD CURRENT SAVEAREA ADDRESS IN REG 1
.LOAD13  L     13,4(13)  GET CALLER'S SAVEAREA ADDRESS
*              EXECUTE FREEMAIN MACRO
         AIF   ('&RENT' EQ 'SPECIAL').SPECIAL
         FREEMAIN R,LV=&LV.&LVA,SP=&SP.&SPA,A=(1)
         AGO   .RETURN
.SPECIAL FREECORE   R,LV=&LV.&LVA,SP=&SP.&SPA,A=(1)
.RETURN  ANOP
*              RETURN TO CALLER
         RETURN (14,12),T,RC=&RC
         MEND
./ ADD NAME=FULLSAVE                               27JUN84 18.58.43
*        FULLSAVE
         MACRO
&NAME    FULLSAVE &BASEREG=12,&LV=,&SP=,&RENT=YES,&AREA=,&IDENT=*
         LCLA  &LCLA
         LCLC  &C(9),&LVA,&SPA
         AIF   ('&RENT' NE 'NO').TESTYES
         AIF   (T'&LV NE 'O').MNOTE
         AIF   (T'&SP EQ 'O').SAVE
.MNOTE   MNOTE 8,'IF RENT=NO, NEITHER LV NOR SP MAY BE SPECIFIED'
         MEXIT
.TESTYES AIF   ('&RENT' EQ 'YES' OR '&RENT' EQ 'SPECIAL').ISRENT
         MNOTE 8,'IF RENT PARAMETER IS SPECIFIED, IT MUST HAVE THE VALUX
               E ''YES'', ''NO'', OR ''SPECIAL''.'
         MEXIT
.ISRENT  AIF   (T'&LV NE 'O').TSTSP
&LVA     SETC  '72'
.TSTSP   AIF   (T'&SP NE 'O').SAVE
&SPA     SETC  '0'
.SAVE    ANOP
         AIF   (N'&BASEREG LT 10).GENBASE
         MNOTE 8,'TOO MANY BASE REGISTERS SPECIFIED. MAXIMUM PERMITTED X
               IS 9.'
         MEXIT
.GENBASE ANOP
&LCLA    SETA  &LCLA+1
&C(&LCLA) SETC ','
         AIF   (&LCLA LT N'&BASEREG).GENBASE
         DS    0H   ALIGN FOR FOLLOWING USING STATEMENT
 USING *&C(1)&BASEREG(1)&C(2)&BASEREG(2)&C(3)&BASEREG(3)&C(4)&BASEREG(4X
               )&C(5)&BASEREG(5)&C(6)&BASEREG(6)&C(7)&BASEREG(7)&C(8)&BX
               ASEREG(8)&C(9)&BASEREG(9) ESTABLISH ADDRESSABILITY
*              SAVE CALLER'S REGISTERS
&NAME    SAVE  (14,12),T,&IDENT
         LR    &BASEREG(1),15 LOAD BASE REGISTER FROM INITIAL ENTRY REGX
               ISTER
         AIF   ('&RENT' EQ 'NO').NOTRENT
*              GETMAIN FOR NEW SAVEAREA
         AIF   ('&RENT' EQ 'SPECIAL').SPECIAL
         GETMAIN    R,LV=&LV.&LVA,SP=&SP.&SPA
         AGO   .STORE13
.SPECIAL GETCORE    R,LV=&LV.&LVA,SP=&SP.&SPA
         AGO   .STORE13
.NOTRENT AIF   (T'&AREA EQ 'O').DS18F
         B     LOAD&SYSNDX    SPACE OVER SAVEAREA ADCON
         DC    A(&AREA)  SAVEAREA POINTER
LOAD&SYSNDX L  1,*-4  GET ADDRESS OF NEW SAVEAREA
         AGO   .STORE13
.DS18F   B     LOAD&SYSNDX    SPACE OVER NEW SAVEAREA
         DS    18F  NEW SAVEAREA
LOAD&SYSNDX LA 1,*-72    GET ADDRESS OF NEW SAVEAREA
.STORE13 ST    13,4(1)   STORE OLD SAVEAREA ADDRESS IN NEW SAVEAREA
         ST    1,8(13)   STORE NEW SAVEAREA ADDRESS IN OLD SAVEAREA
         LR    0,1  TEMPORARILY MOVE NEW SAVEAREA ADDRESS TO REG 0
         LR    1,13 MOVE OLD SAVEAREA ADDRESS TO REG 1
         LR    13,0 MOVE NEW SAVEAREA ADDRESS TO REG 13
         AIF   (N'&BASEREG EQ 1).AIFAREA
&LCLA    SETA  1
         LA    &BASEREG(N'&BASEREG),4095 SET INCREMENT FOR ADDITIONAL BX
               ASE REGISTERS
.BASELA  LA    &BASEREG(&LCLA+1),1(&BASEREG(&LCLA),&BASEREG(N'&BASEREG)X
               ) SET NEXT BASE REGISTER
&LCLA    SETA  &LCLA+1
         AIF   (&LCLA LT N'&BASEREG).BASELA
.AIFAREA AIF   ('&AREA' EQ '').LM
         USING &AREA,13  MAKE NEW SAVEAREA ADDRESSABLE
.LM      LM    0,1,20(1) RESTORE REGISTERS 0 AND 1 FROM OLD SAVEAREA
         MEND
*        TRANSFERRED FROM HAMMER   - 09/16/70
*
./ ADD NAME=IKJCVT   0100-80025-80025-1018-00013-00013-00000-KK00150
         MACRO
&N       IKJCVT
CVTPTR   EQU   16
CVTMAP   DSECT
         ORG   CVTMAP+480
CVTSCAN  DS    F
         ORG   CVTMAP+524
CVTPARS  DS    F
         ORG   CVTMAP+732
CVTDAIR  DS    F
CVTEHDEF DS    F
CVTEHCIR DS    F
         MEND
./ ADD NAME=IKJPSCBX 0100-83124-83124-1425-00030-00030-00000-KK00150
         MACRO
&LAB1    IKJPSCBX
* PCF2 (THE GREEDY BUM) USES PSCBATR2 AND THE FIRST WORD OF PSCBU.WDPSC
*                                                                 WDPSC
* WE ARE THUS USING BITS 12-15 OF PSCBATR1 (AND LIKEWISE IN UADS) WDPSC
* FOR STATUS/CANCEL/OUTPUT EXIT FLAGS AS DESCRIBED BELOW.         WDPSC
*                                                                 WDPSC
*   IN ANTICIPATION OF IBM FURTHER ENCROACHING THESE AREAS, WE    WDPSC
* HAVE CHAINED A 'PSCBX' FROM THE SECOND WORD OF PSCBU, ALSO      WDPSC
* DESCRIBED BELOW.                                                WDPSC
*                                                                 WDPSC
* PSCBATR1 DS 0XL2                                                WDPSC
*          DS  X                                                  WDPSC
*          DS  X                                                  WDPSC
*              X'08' INIT FIELD DOES NOT NEED TO MATCH (CANCEL)   WDPSC
*              X'04' INIT FIELD DOES NOT NEED TO MATCH (OUTPUT)   WDPSC
*              X'02' SYS  FIELD DOES NOT NEED TO MATCH (OUTPUT)   WDPSC
*              X'01' SYS  FIELD DOES NOT NEED TO MATCH (CANCEL)   WDPSC
*                                                                 WDPSC
*        THE   PSCBX IS CREATED BY IKJEFLD AND CHAINED TO         WDPSC
*              THE PSCB VIA PSCBU+4                               WDPSC
*              IT IS FROM SUBPOOL 234  AND REMAINS THRU SESSION   WDPSC
PSCBX    DS   0XL80                                               WDPSC
PSCBXID  DS  CL8'PSCBX   '  BLOCK ID FIELD                        WDPSC
PSCBXPG  DS  XL32     PERFORM GROUP DATA FROM UADS                WDPSC
PSCBXLA  DS  XL2      LINE ADDR FROM TSB+82                       WDPSC
PSCBXTID DS  CL8      TERMID FROM TSB+104                         WDPSC
PSCBXAN  DS  CL8      ACCOUNT NAME FOR MULTI-ACCT USER            WDPSC
*                     (CALLED PASSWORD PRIOR TO ACF2)             WDPSC
         MEND
./ ADD NAME=IKJUPTU  0106-80267-83196-1049-00030-00018-00013-KK00150
         MACRO
&LAB1    IKJUPTU
         ORG   UPTUSER
UPTU     DS    0CL10                    WDPSC AREA                WDPSC
UPTU1    DS    X                        OUR FLAG BYTE 1           WDPSC
UPTUNF   EQU   X'80'  SUBMIT EXIT SHOULD ADD NOTIFY OPERAND       WDPSC
UPTUAF   EQU   X'40'  PAN EXIT SHOULD NOT AUDIT COMMANDS          WDPSC
UPTUAAF  EQU   X'20'  PAN WILL AUDIT ALL CMDS - IF 0,CHANGES ONLY WDPSC
UPTUPF   EQU   X'10'  LOGON EXIT WILL ADD PREFIX= TO EXEC PROD1   WDPSC
UPTUSF   EQU   X'08'  LOGON EXIT WILL ADD STEPLIB DD CARD         WDPSC
UPTUNM   EQU   X'04'  DO NOT LIST MAIL AT LOGON TIME              WDPSC
UPTUNC1  EQU   X'02'  DO NOT ADD USERCAT1 TO STEPCAT              WDPSC
UPTUDPF  EQU   X'01'  DIALOG PREFIX HAS BEEN ENCODED IN UPT       WDPSC
*                                                                 WDPSC
UPTU2    DS    X                        OUR FLAG BYTE 2           WDPSC
UPTUSPF  EQU   X'80'  LOGON WITH ISPPLIB (PANELS=)                WDPSC
UPTUSSF  EQU   X'40'  LOGON WITH ISPSLIB (SKELS=)                 WDPSC
UPTUSMF  EQU   X'20'  LOGON WITH ISPMLIB (MSGS=)                  WDPSC
UPTUSAF  EQU   X'10'  DIALOG PREFIX INCLUDES SUBAGENCY            WDPSC
*                                                                 WDPSC
UPTUDPA  DS    XL3    DIALOG PREFIX AREA FOR ISP LIB DD CARDS     WDPSC
*                                                                 WDPSC
UPTU67   DS    XL2    # OF SECONDS TO EXTEND BEFORE 322 ABENDING  WDPSC
*                     0=DEFAULT, -1=DON'T EXTEND                  WDPSC
*                                                                 WDPSC
UPTU8    DS    X      # OF USERS DEFAULT STEPCAT 0=NONE (CATTABLE)WDPSC
UPTU9    DS    X      USERS DEFAULT TIME LIMIT MINUTES            WDPSC
UPTU10   DS    X      USERS DEFAULT TIME LIMIT SECONDS            WDPSC
         ORG
         MEND
./ ADD NAME=KKPARSE  0109-77250-81119-1717-00058-00047-00047-KK00150
         MACRO
&LAB     KKPARSE &CPPL=R11,&ANS=ANS,&ECB=ECB,&PCL=PCL,&PPLA=PPLA
         MNOTE 'CPPL=&CPPL,ANS=&ANS,ECB=&ECB,PCL=&PCL,PPLA=&PPLA'
*                  DEFAULT OPERANDS :
*        KKPARSE &CPPL=R11,&ANS=ANS,&ECB=ECB,&PCL=PCL,&PPLA=PPLA
*                            CPPL IS THE REGISTER CONTAINING THE
*                                 POINTER TO THE COMMAND PROCESSOR
*                                 PARAMETER LIST.
*                            ANS  IS A FULLWORD WHERE PARSE RETURNS
*                                 THE POINTER TO HIS ANSWER (IKJPARMD).
*                            ECB  IS A FULLWORD.
*                            PCL  IS THE NAME OF THE PARSE CONTROL
*                                 LIST CSECT (IKJPARM).
*                            PPLA IS A 7 FULLWORD AREA USED FOR
*                                 THE PARSE PARAMETER LIST.
*
*        KKPARSE             USES REGS R14,R15,R1,&CPPL REG
*
         USING CPPL,&CPPL         POINTS TO CPPL (PARM LIST)
*
&LAB     LA    R1,&PPLA           R1->PPL AREA
         USING PPL,R1             TELL ASSEMBLER POINTS TO PPL AREA
*
*                         CONSTRUCT PARSE PARAMETER LIST
*                                           FOR IKJPARS :
*
         MVC   PPLUPT,CPPLUPT     UPT
         MVC   PPLECT,CPPLECT     ECT
         LA    R15,&ECB           ECB
         ST    R15,PPLECB
         L     R15,=V(&PCL.)      PCL
         ST    R15,PPLPCL
         LA    R15,&ANS           ANS
         ST    R15,PPLANS
         MVC   PPLCBUF,CPPLCBUF   CBUF
         XC    PPLUWA,PPLUWA
*
         DROP  R1
         EJECT
*        CALLTSSR EP=IKJPARS      CALL PARSE:
         CALLTSSR EP=IKJPARS      CALL PARSE:
         EJECT
*
*                        DSECTS NEEDED BY PARSE:
*
*CPPL    IKJCPPL
CPPL     IKJCPPL
*PPL     IKJPPL
PPL      IKJPPL
*
CVTMAP   DSECT
         ORG   CVTMAP+524
CVTPARS  DS    F
CVTPTR   EQU   16
*
*
&SYSECT  CSECT
         MEND
./ ADD NAME=KKPWA    0100-81119-81119-1723-00015-00015-00000-KK00150
         MACRO
&LAB     KKPWA  &ANS=ANS,&ECB=ECB,&PPLA=PPLA
         MNOTE 'ANS=&ANS,ECB=&ECB,PPLA=&PPLA'
*                            ANS  IS A FULLWORD WHERE PARSE RETURNS
*                                 THE POINTER TO HIS ANSWER (IKJPARMD).
*                            ECB  IS A FULLWORD.
*
*                            PPLA IS A 7 FULLWORD AREA USED FOR
*                                 THE PARSE PARAMETER LIST.
*
&ANS     DS    F
&ECB     DS    F
&PPLA    DS    7F
*
         MEND
./ ADD NAME=KKSCAN                                 27JUN84 18.58.43
         MACRO
&LAB     KKSCAN  &CPPL=R11,&CSOA=ACSOA,&ECB=ECB,&CSPL=ACSPL,&CSFW=CSFW,X
               &CVT='NO'
         MNOTE 'CPPL=&CPPL,CSOA=&CSOA,ECB=&ECB,CSPL=&CSPL,CSFW=&CSFW'
*                  DEFAULT OPERANDS :
*        KKSCAN CPPL=R11,ECB=ECB,CSFW=CSFW
*                            CPPL IS THE REGISTER CONTAINING THE
*                                 POINTER TO THE COMMAND PROCESSOR
*                                 PARAMETER LIST.
*                            CSOA IS A DBLWORD WHERE SCAN RETURNS
*                                 THE SCAN RESULTS
*                            ECB  IS A FULLWORD.
*                            CSFW IS A FULLWORD FLAGAREA PASSED TO SCAN
*                            CSPL IS A 6 FULLWORD AREA USED FOR
*                                 THE SCAN PARAMETER LIST.
*
*        KKSCAN              USES REGS R14,R15,R1,R0
*
         USING CPPL,&CPPL         POINTS TO CPPL (PARM LIST)
*
&LAB     LA    R1,&CSPL           R1->CSPL AREA
         USING CSPL,R1
*
*                         CONSTRUCT SCAN PARAMETER LIST
*                                           FOR IKJSCAN :
*
         MVC   CSPLUPT,CPPLUPT    UPT
         MVC   CSPLECT,CPPLECT    ECT
         LA    R15,&ECB           ECB
         ST    R15,CSPLECB         "
         L     R15,&CSFW          CSFW
         ST    R15,CSPLFLG
         LA    R15,&CSOA          ANS
         ST    R15,CSPLOA
         MVC   CSPLCBUF,CPPLCBUF  CBUF
         XC    &CSFW,&CSFW
*
         DROP  R1
         DROP  &CPPL
         EJECT
*        CALLTSSR EP=IKJSCAN      CALL SCAN:
         CALLTSSR EP=IKJSCAN      CALL SCAN:
         EJECT
*
*                        DSECTS NEEDED BY SCAN:
*
         IKJCSPL
*
         IKJCSOA
         AIF   ('&CVT' NE 'YES').SC
*
         IKJCVT
.SC      ANOP
*
&SYSECT  CSECT
         MEND
./ ADD NAME=KKSWA    0101-81131-81131-0948-00020-00020-00001-KK00150
         MACRO
&LAB     KKSWA  &CSPL=ACSPL,&CSFW=CSFW,&CSOA=ACSOA,&DSECT
         MNOTE 'CSPL=&CSPL,CSFW=&CSFW,CSOA=&CSOA'
*
*                            CSPL IS A 6 FULLWORD AREA USED FOR
*                                 THE SCAN PARAMETER LIST.
*                            CSFW IS A FULLWORD FLAG PASSED TO SCAN
*                            CSOA IS 2 FULLWORDS WHERE SCAN RETURNS
*                                 THE RESULTS OF HIS SCANNING
*
         AIF   ('&DSECT' EQ 'DSECT').DL
         AGO   .L1
.DL      ANOP
&LAB     DSECT
.L1      ANOP
&CSPL    DS    6F
&CSFW    DS    F
&CSOA    DS    2F
*
         MEND
./ ADD NAME=KPPL     0106-80017-82298-1148-00030-00027-00030-KK00150
         MACRO
&LAB1    KPPL   &DSECT
         LCLC  &LAB2
*
*               PARAMETER LIST PASSED TO KMDPARS (10 FULLWORDS):
*
         AIF   (T'&LAB1 NE 'O').LOK
&LAB2    SETC  'KPPL'
         AGO   .DSCK
.LOK     ANOP
&LAB2    SETC  '&LAB1'
.DSCK    AIF   ('&DSECT' EQ 'DSECT').DSL
         DS    0A
&LAB2    DS    0XL40
         AGO   .ADSL
.DSL     ANOP
&LAB2    DSECT
.ADSL    ANOP
CBUFPTR  DS    F                        CMDBUF TO BE PARSED
OPLSTPTR DS    F                        LIST OF OPERANDS TO FLAG
FLAGPTR  DS    F                        WHERE TO FLAG THEM
UNKNEXIT DS    F                        EXIT TO CALL IF UNKNOWN OPER
EXITPARM DS    F                        PARAMETER TO PASS EXITS (ADDR)
*                                       (R1 POINTS HERE AT EXIT ENTRY)
BPPLPASS DS    F                        BPPL PTR WHEN EXIT GETS CONTROL
WORKPASS DS    F                        OPTIONAL WORKAREA (512 BYTES)
KEYLPASS DS    F                        LIST OF KEYWORD OPERANDS
KEYWPASS DS    F                        WORKAREA FOR KEYWORD PROCESSOR
REEXPASS DS    F                        ADDRESS OF REAL UNKNOWN EXIT
         MEND
./ ADD NAME=LEAVE    0100-80120-80120-1131-00018-00018-00000-KK00150
         MACRO
&NAME    LEAVE  &EQ,&CC=
         GBLC  &LV,&SP,&SAVED(2)
&NAME    LR    2,13               SAVE CURRENT WORK/SAVE AREA
         L     13,4(13)           PICK UP LAST SAVE AREA
         STM   15,1,16(13)        STORE RETURN REGS
         AIF   ('&LV' EQ '').L1
         FREEMAIN R,LV=&LV,SP=&SP,A=(2)  FREE SAVE AREA
.L1      AIF   ('&SAVED(2)' EQ '').L2
         AIF   ('&CC' EQ '').L15       WAS CC SPECIFIED
         RETURN (&SAVED(1),&SAVED(2)),T,RC=&CC RETURN
         AGO   .L3
.L15     RETURN (&SAVED(1),&SAVED(2)),T        RETURN
         AGO   .L3
.L2      RETURN &SAVED(1),T *   RETURN TO CALLER
.L3      AIF   ('&EQ' NE 'EQ').L4
         REGISTER
.L4      MEND
./ ADD NAME=LEAVENR  0100-77291-77291-1100-00005-00005-00000-KK00150
         MACRO
&LAB     LEAVENR
&LAB     L     R13,4(R13)         GET CALLERS SAVEAREA ADDR
         RETURN (14,12),RC=(15)
         MEND
./ ADD NAME=LEAVER   0102-77256-80289-1619-00010-00008-00009-KK00150
         MACRO
&LAB     LEAVER &WR=R13,&WL=WORKLEN
&LAB     LR    R1,&WR             WORKAREA ADDR FOR FREEMAIN
         L     R0,=A(&WL)         WORKAREA LEN   "    "
         L     R13,4(R13)         GET CALLERS SAVEAREA ADDR
         LR    R11,R15            SAVE RETURN CODE
         FREEMAIN R,LV=(0),A=(1)
         LR    R15,R11            RESTORE RETURN CODE
         RETURN (14,12),RC=(15)
         MEND
./ ADD NAME=LEAVEWW  0100-82328-82328-1125-00005-00005-00000-KK00150
         MACRO
&LAB     LEAVEWW
&LAB     L     R13,4(R13)         GET CALLERS SAVEAREA ADDR
         RETURN (14,12),RC=(15)
         MEND
./ ADD NAME=LIT1                                   27JUN84 18.58.43
         MACRO
         LIT1  &NAME
&NAME    CSECT .
***********************************************************************
* PROGRAM TO COPY A LITERAL DEFINED IN THIS PROGRAM INTO A LOCATION
* DEFINED BY THE CALLING PROGRAM.  IT WAS WRITTEN TO ENABLE COBOL AND
* FORTRAN PROGRAMS TO DEFINE FULL-SCREEN 3270 MENUS.  IT CONSISTS OF
* TWO MACROS, WITH SOME USER-DEFINED CONSTANTS BETWEEN.
*
* SAMPLE CODING SEQUENCE:
*        LIT1  MENU1
*        DC    X'C3'              WCC
*        DC    X'114040'          SBA AT START OF SCREEN
*        DC    X'3C4C6000'        CLEAR THROUGH LINE 10
*        DC    X'114040'          LINE 1: TITLE
*        DC    X'1DF8',C'ADD COMMUNICATIONS LINE'
*        LIT2
*
* SAMPLE CALLING SEQUENCE:
*    CALL 'MENU1' USING MENU.
* WHERE MENU IS THE LOCATION IN THE CALLING PROGRAM WHERE THE LITERAL
* IS TO BE COPIED.
*
* KEITH NEWSOM, WDPSC, 12-77
***********************************************************************
BEGIN    B     14(0,15) .         BRANCH AROUND ID
         DC    AL1(8) .
         DC    CL8'&NAME.       ' . IDENTIFIER
         STM   14,12,12(13) .     SAVE REGISTERS
         BALR  12,0 .
         USING *,12 .
         LA    4,LIT .            SET UP "FROM" ADDRESS AND LENGTH
         L     5,LENLIT .
         L     6,0(1) .           SET UP "TO" ADDRESS AND LENGTH
         L     7,LENLIT .
         MVCL  6,4 .              MOVE LITERAL
         LM    14,12,12(13) .     RESTORE REGISTERS
         LA    15,0(0,0) .        LOAD RETURN CODE
         BR    14 .               RETURN
LIT      EQU   * .
*----------------------------------------------------------------------
* DEFINE YOUR LITERAL BETWEEN HERE . . .
*----------------------------------------------------------------------
         MEND
./ ADD NAME=LIT2                                   27JUN84 18.58.43
         MACRO
         LIT2
*----------------------------------------------------------------------
* . . . AND HERE.
*----------------------------------------------------------------------
ENDLIT   EQU   * .
LENLIT   DC    A(ENDLIT-LIT) .
         END   BEGIN .
         MEND
./ ADD NAME=LOGONXWA 0113-83138-83193-1410-00051-00029-00000-KK00150
         MACRO
&LAB     LOGONXWA &OFF=*
WDPSCPRM EQU   &OFF                                               WDPSC
*                                                                 WDPSC
*        WDPSC ADDITIONS TO IKJEFLDA PARM LIST:                   WDPSC
*                                                                 WDPSC
DESTLNG  EQU   &OFF                                               WDPSC
         DS    XL2                                                WDPSC
DESTUSID EQU   &OFF                                               WDPSC
         DS    CL8                                                WDPSC
MSGCLASS EQU   &OFF                                               WDPSC
         DS    XL2                                                WDPSC
TIMELM   EQU   &OFF                                               WDPSC
         DS    H                                                  WDPSC
TIMEM    EQU   &OFF                                               WDPSC
         DS    CL4                                                WDPSC
TIMELS   EQU   &OFF                                               WDPSC
         DS    H                                                  WDPSC
TIMES    EQU   &OFF                                               WDPSC
         DS    CL2                                                WDPSC
PROGL    EQU   &OFF                                               WDPSC
         DS    H                                                  WDPSC
PROG     EQU   &OFF                                               WDPSC
         DS    CL20                                               WDPSC
SLIBFLGS EQU   &OFF                                               WDPSC
         DS    H                                                  WDPSC
STEP     EQU   X'80'                                              WDPSC
NOSTEP   EQU   X'40'                                              WDPSC
PAL      EQU   X'20'                                              WDPSC
NOPAL    EQU   X'10'                                              WDPSC
DIALOG   EQU   X'08'                                              WDPSC
NODIALOG EQU   X'04'                                              WDPSC
VANILLA  EQU   X'02'                                              WDPSC
CHOCLATE EQU   X'01'                                              WDPSC
*                                                                 WDPSC
*              ADDED WORK AREAS FOR IKJEFLD                       WDPSC
*                                                                 WDPSC
ACF2FLG  DS    H                                                  WDPSC
WUPTPTR  DS    2H                                                 WDPSC
WLWAPTR  DS    2H                                                 WDPSC
WLWPPTR  DS    2H                                                 WDPSC
WLIPPTR  DS    2H                                                 WDPSC
WPFGPTR  DS    2H                                                 WDPSC
TIMWK1   DS    4H                                                 WDPSC
TIMWK2   DS    4H                                                 WDPSC
DESTRECK DS    H                                                  WDPSC
REGIONS  DS    CL5                                                WDPSC
DESTFORM DS    CL9                                                WDPSC
ACCTDATA DS    CL10                                               WDPSC
         DS    0F                                                 WDPSC
         MEND
./ ADD NAME=MOVE     0100-83115-83115-1254-00031-00031-00000-KK00150
         MACRO
&L1      MOVE  &TO,&TL,&FROM,&FL,&PAD=
         LCLA  &NL,&UL,&VL
         LCLC  &TO$,&TL$,&FROM$,&FL$
&TO$     SETC  '&TO'
&TL$     SETC  '&TL'
&FROM$   SETC  '&FROM'
&FL$     SETC  '&FL'
         AIF   ('&TO'(1,1) NE '(').TLC
&TO$     SETC  '0&TO'
.TLC     AIF   ('&TL'(1,1) NE '(').FC
&TL$     SETC  '0&TL'
.FC      AIF   ('&FROM'(1,1) NE '(').FLC
&FROM$   SETC  '0&FROM'
.FLC     AIF   (T'&FL EQ 'O').OO
         AIF   ('&FL'(1,1) NE '(').OO
&FL$     SETC  '0&FL'
.OO      ANOP
&L1      STM   14,12,12(13)
         LA    R2,&TO$
         LA    R3,&TL$
         LA    R4,&FROM$
         AIF   (T'&FL EQ 'O').UTL
         LA    R5,&FL$
         AGO   .PC
.UTL     LA    R5,&TL$
.PC      AIF   ('&PAD' EQ '').NPC
         ICM   R5,8,=&PAD
.NPC     MVCL  R2,R4
         LM    14,12,12(13)
         MEND
./ ADD NAME=NAMETAB  0100-83013-83013-1107-00047-00047-00000-KK00150
         MACRO
&PTL     NAMETAB &LL,&NL,&ENTRIES=0,&DSECT=DEF
         LCLA  &LC,&LN
         LCLC  &SS
*              TABLE OF PREFIX OR QUALIFIER NAMES -
*                UP TO 8 BYTES EACH, PRECEDED BY HALFWORD LENGTHS
         AIF   ('&DSECT' EQ 'YES').CD
         AIF   (T'&LL EQ 'O').ND
         AIF   ('&LL'(1,1) EQ '(').ND
.CD      AIF   ('&DSECT' EQ 'NO').ND
&PTL     DSECT
         AGO   .L1
.ND      ANOP
&PTL     DS    0H
.L1      ANOP
         AIF   (T'&LL EQ 'O').MBST
         AIF   ('&LL'(1,1) EQ '(').MBTP
&LL      DS    H                  LENGTH OF NAME - IF ZERO TABLE END
&NL      DS    CL8                NAME - UP TO 8 BYTES
         MEXIT
.MBTP    AIF   (N'&LL EQ 1).STRNG
&LC      SETA  &LC+1
&LN      SETA  K'&LL(&LC)
         DC    H'&LN',CL8'&LL(&LC)'
         AIF   (&LC LT N'&LL).MBTP
         DC    H'0',CL8' '        END OF TABLE
         MEXIT
.MBST    DS    &ENTRIES.H,&ENTRIES.CL8
         MEXIT
.STRNG   ANOP
&LC      SETA  2
&LN      SETA  0
.NC      AIF   ('&LL'(&LC,1) EQ ',').BE
         AIF   ('&LL'(&LC,1) EQ ')').BE
&LN      SETA  &LN+1
&LC      SETA  &LC+1
         AGO   .NC
.BE      ANOP
&SS      SETC  '&LL'(&LC-&LN,&LN)
         DC    H'&LN',CL8'&SS'
         AIF   ('&LL'(&LC,1) EQ ')').TE
&LN      SETA  0
&LC      SETA  &LC+1
         AGO   .NC
.TE      ANOP
         DC    H'0',CL8' '        END OF TABLE
         MEND
./ ADD NAME=OPER     0114-80035-82302-1204-00041-00017-00000-KK00150
         MACRO
&OPLB    OPER  &ON,&F,&EXIT=,&BLANK=,&MINLEN=,&KEYFLD=,&SUBFLD=
         GBLC  &XPARM
         LCLA  &I
         LCLA  &L
&OPLB    DS    0F                       FULLWORD BNDRY
         DC    &F                       FLAG LOC (SET IF OPER FOUND):
*                                       BYTE1=FLAG BIT,BYTE2=FLAG BYTE
         AIF   ('&EXIT&SUBFLD' EQ '').S1
&I       SETA  &I+8
.S1      AIF   ('&BLANK' EQ '').S2
&I       SETA  &I+4
.S2      AIF   ('&KEYFLD' EQ '').S2B
&I       SETA  &I+2
.S2B     AIF   ('&SUBFLD' EQ '').SS
&I       SETA  &I+1
.SS      DC    AL1(&I*16)        BYTE1= OPTIONS (80 = TAKE EXIT)
*              (40 = OVERLAY WITH BLANKS,20 = KEYWORD OPERAND)
*              (10 = SUBFIELD AREA OFFSET PROVIDED FOR SUBEX )
         DC    AL1(0&MINLEN)     BYTE2= MINIMUM LENGTH OF OPER TO MATCH
         AIF   ('&EXIT' EQ '').S3A
         DC    A(&EXIT)                 EXIT ADDR
         AGO   .S4
.S3A     AIF   ('&SUBFLD' EQ '').S3
         DC    A(X&SYSNDX)              EXTERNAL EXIT TRANSFER
         AGO   .S4
.S3      AIF   ('&KEYFLD' EQ '').SN    NO EXIT
         DC    A(&KEYFLD)         ADDRESS OF KEYFLD ->
*        HFWD  FIELD LEN, HFWD DATA LEN, DATA FIELD
         AGO   .S4
.SN      DC    A(0)                     NO EXIT
.S4      ANOP
&L       SETA  K'&ON                    NAME LENGTH
         DC    H'&L'                    OPERAND LENGTH (SUBFLD EXCL)
         DC    C'&ON'                   OPERAND NAME
         SPACE
         AIF   ('&SUBFLD' EQ '').SX
X&SYSNDX DC    V(SUBEX)
         DC    A(&SUBFLD-&XPARM)
         SPACE
.SX      MEND
./ ADD NAME=OPERLIST 0100-80035-80035-1625-00011-00011-00000-KK00150
         MACRO
&OPNM    OPERLIST
         LCLA  &I
&OPNM    DC    F'0'                     LIST OF KNOWN OPERANDS
.CU      ANOP
&I       SETA  &I+1
         AIF   (&I GT N'&SYSLIST).MEX
         DC    A(&SYSLIST(&I))
         AGO   .CU
.MEX     DC    F'0'                     END OF LIST
         MEND
./ ADD NAME=PARSEKMD 0108-80035-82302-1522-00057-00044-00000-KK00150
         MACRO
&ML      PARSEKMD &CBUF=CPPLCBUF,&OPLIST=OPLIST,&FLAG=FLAG,            X
               &EXIT=,&PARM=,                                          X
               &KEYLIST=,&KEYWORK=,                                    X
               &WORK=,&OPFLG=
         GBLC  &XPARM
&XPARM   SETC  '&PARM'
*
         MNOTE '*           &&CBUF=&CBUF,&&OPLIST=&OPLIST,&&FLAG=&FLAG'
         MNOTE '*           &&EXIT=&EXIT,&&PARM=&PARM'
         MNOTE '*           &&KEYLIST=&KEYLIST,&&KEYWORK=&KEYWORK'
         MNOTE '*           &&WORK=&WORK,&&OPFLG=&OPFLG'
*
*       FIRST BUILD KOMAND-PROCESSING PARAMETER LIST:
*
&ML      XC    KPPL(40),KPPL            CLEAR BUFFER PROC PARMLIST
         L     R15,&CBUF                R15 -> CBUF
         ST    R15,CBUFPTR              BUFFER PTR
         LA    R15,&OPLIST              OPERAND LIST
         ST    R15,OPLSTPTR             PASS IT
         LA    R15,&FLAG                FLAG AREA
         ST    R15,FLAGPTR              PASS IT
         AIF   ('&EXIT' EQ '').SK
         LA    R15,&EXIT                EXIT FOR OPS NOT IN MY LIST
         AIF   ('&KEYLIST' EQ '').S1A
         ST    R15,REEXPASS             PASS IT
         AGO   .SK
.S1A     ST    R15,UNKNEXIT             PASS IT
.SK      AIF   ('&KEYLIST' EQ '').S1B
         LA    R15,&KEYLIST       LIST OF KEYWORDS
         ST    R15,KEYLPASS       PASS IT
         L     R15,=V(KEYEX)      KEYWORD EXIT
         ST    R15,UNKNEXIT       PASS IT
.S1B     AIF   ('&KEYWORK' EQ '').S1
         LA    R15,&KEYWORK       SAVEAREA AND FLAGAREA FOR KEYWD EXIT
         ST    R15,KEYWPASS       PASS IT
.S1      AIF   ('&PARM' EQ '').S2
         LA    R15,&PARM                WORK AREA FOR EXIT
         ST    R15,EXITPARM             PASS IT TO THE EXIT
.S2      AIF   ('&WORK' EQ '').S3
         LA    R15,&WORK                WORK AREA FOR KMDPARS
         ST    R15,WORKPASS             LENGTH PTR RETURN AREA
.S3      AIF   ('&OPFLG' EQ '').S4
         XC    &OPFLG(1),&OPFLG         CLEAR OPERANDS PRESENT FLAG
.S4      ANOP
*
*       THEN CALL KMDPARS (PARSE SUBROUTINE):
*
         LA    R1,KPPL                  R1 -> BUFFER PROC PARMLIST
         CALL  KMDPARS                  PROCESS AN OPERAND
         AIF   ('&OPFLG' EQ '').S5
         LTR   R15,R15                  ANYTHING FOUND?
         BNZ   B&SYSNDX                 YES
         OI    &OPFLG,X'FF'
B&SYSNDX DS    0H
.S5      ANOP
         MEND
./ ADD NAME=REGEQU   0102-77040-78145-1620-00019-00016-00003-KK00150
         MACRO
         REGEQU
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         MEND
./ ADD NAME=REGS                                   27JUN84 18.58.43
         MACRO
         REGS  &A
         LCLA  &N
         SPACE 2
*        GENERATE REGISTER NAMES
.B       ANOP
&A&N     EQU   &N
&N       SETA  &N+1
         AIF   (&N NE 16).B
         MEND
./ ADD NAME=REQU                                   27JUN84 18.58.43
         MACRO
&LABEL   REQU &RF,&RL
.* MACRO TO GENERATE EQUATES FOR REGISTERS: 0(R0) TO 15(R15).
.* IF NO OPERAND IS SPECIFIED 0-15 ASSUMED.
.* TWO OPERANDS MAY BE CODED FOR A SERIES OF REGISTERS.
.* ERROR CHECKING IS FOR LESS THAN 0 OR GREATER THAN 15.
.* IN CASE OF ERROR CONDITION, 0-15 ARE GENERATED WITH MNOTE.
         LCLA  &NUM,&MAX
         AIF   (T'&RF EQ 'O').ALL
         AIF   ('&RF' LT '0' OR '&RL' GT '15').OPERR
         AIF   ('&RL' LT '&RF').OPERR
         AIF   (N'&SYSLIST NE 2).OPERR
&NUM     SETA &RF
&MAX     SETA  &RL
         AGO   .GEN
.OPERR   ANOP
         MNOTE 0,'IMPROPER REGISTER SPECIFICATION. R0-R15 GENERATED.'
.ALL     ANOP
&NUM     SETA  0
&MAX     SETA  15
.GEN     ANOP
*****   EQUATES FOR REGISTERS   *****
.LOOP    ANOP
R&NUM    EQU   &NUM
         AIF   ('&NUM' EQ '&MAX').END
&NUM     SETA  &NUM+1
         AGO   .LOOP
.END     ANOP
         SPACE 2
MASK80   EQU   X'80'
MASK40   EQU   X'40'
MASK20   EQU   X'20'
MASK10   EQU   X'10'
MASK08   EQU   X'08'
MASK04   EQU   X'04'
MASK02   EQU   X'02'
MASK01   EQU   X'01'
         EJECT
         MEXIT
         MEND
./ ADD NAME=SASCOMU  0101-82111-82111-1727-00008-00008-00001-DN00150
       MACRO
&NAME  SASCOMU
.*  THIS MACRO DEFINES A USER WORK AREA WITHIN THE SAS COMMUNICATIONS
.*  BLOCK.
WHEADER DS  CL1
*   VALUE OF X'DC' INDICATES PREVIOUS PASSAGE THROUGH G78SEPH1
.*
        MEND
./ ADD NAME=SVLNK                                  27JUN84 18.58.43
         MACRO
&NAME    SVLNK &REG1,&REG2,&REG3,&IND,&LV=
         GBLC  &EQU
         GBLC  &GM
         GBLC  &CSECT
         LCLC  &REGA
         AIF   (T'&NAME EQ 'O').NOCSECT
         AIF   ('&NAME' EQ '*').NOCSECT
&CSECT   SETC  '&NAME'
&CSECT   CSECT 
         AGO   .RST
.NOCSECT ANOP
&CSECT   SETC  '*'
         CSECT 
.RST     ANOP
         AIF   ('&EQU' EQ 'ON').NRQ
&EQU     SETC  'ON'
*
***REGISTER EQUATES***
*
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
.NRQ     ANOP
*
*******************  PROGRAM INITIALIZATION  *************************
*
         AIF   (T'&REG1 EQ 'O').NOREG
&REGA    SETC  '&REG1'
         AIF   (T'&REG2 EQ 'O').ONEREG
         USING &CSECT,&REGA,&REG2 
         AGO   .BYUSE
.NOREG   ANOP
&REGA    SETC  'R3'
.ONEREG  USING &CSECT,&REGA 
.BYUSE   ANOP
         STM   R14,R12,12(R13) :       STORE REGS IN HIGH SAVE AREA
         LR    &REGA,R15 
         AIF   (T'&REG2 EQ 'O').NOLA
         LA    &REG2,4095(&REGA) 
         LA    &REG2,1(&REG2) 
.NOLA    ANOP
         AIF   (T'&REG3 EQ 'O').NOLNK
         L     &REG3,0(R1) 
.NOLNK   ANOP
         AIF (T'&IND EQ 'O').GETIT
         CNOP  0,4
         BAL   R15,SAVEAREA+72 
SAVEAREA DS    18F 
         ST    R15,8(R13)
         ST    R13,SAVEAREA+4
         LR    R13,R15
         AGO   .NOSAVE
.GETIT   ANOP
         AIF   (T'&LV EQ 'O').GMD
&GM      SETC  '&LV'
         AGO   .DGM
.GMD     ANOP
&GM      SETC  '72'
.DGM     ANOP
*
***GET MAIN STORAGE FOR SAVE AREA***
*
         AIF   ('&GM' LT '4096').LA
         GETMAIN R,LV=&GM 
         AGO   .EGM
.LA      ANOP
         LA    R0,&GM                  GET &GM BYTES
         GETMAIN R,LV=(0)
.EGM     ANOP
*
***SET UP SAVE AREA POINTERS***
*
         ST    R1,8(R13) 
         ST    R13,4(R1) 
         LR    R13,R1 
         AIF   (T'&REG3  NE 'O').NOSAVE
         L     R1,4(R13) 
         L     R1,24(R1) 
.NOSAVE  ANOP
         AIF   ('&CSECT' EQ '*').EXIT
         B     *+12
         DC    CL8'&CSECT'  
.EXIT    ANOP
*
*********************  END INITIALIZATION  ***************************
*
         MEND
./ ADD NAME=USERADDS 0117-82147-84112-1252-00023-00010-00014-DN00150
         NAME  ZWAP,0A     DONTSWAP                    WDPSC
         NAME  TPJOBS,0B                               WDPSC
         NAME  WHERE,0C                                WDPSC
         NAME  SQA,0D                                  WDPSC
         NAME  SWAP,0E                                 WDPSC
         NAME  SETS,0F                                 WDPSC
         NAME  VTOCIX,0G                               WDPSC
         NAME  DQE,0H                                  WDPSC
*        USED        ,0I   NUCMAP                      WDPSC
         NAME  ACF2CVT,0J                              WDPSC
         NAME  RATE,0K                                 WDPSC
         NAME  LIST,0L                                 WDPSC
         NAME  TCZAP,0M                                WDPSC
         NAME  VTOCOS,0N                               WDPSC
         NAME  ACFSVC,0O                               WDPSC
         NAME  MPMCSA,0P                               WDPSC
         NAME  CTCCSA,0Q                               WDPSC
         NAME  PUBLIC,0R                               WDPSC
         NAME  SMF,0S                                  WDPSC
         NAME  PQE,0T                                  WDPSC
         NAME  TBUF,0U                                 WDPSC
         NAME  XPJOBS,0X                               WDPSC
         NAME  QUJOBS,05                               WDPSC
./ ADD NAME=USERSVC  0102-84089-84137-1605-00041-00041-00000-DN00150
***********************************************************************
*        -------------  S V C   T A B L E   --------------            *
*                                                                     *
*        SPECIFY THE NUMBER  TYPE  LOCK_HELD AUTHORIZATION            *
*
***********************************************************************
      SVCTABLE SVC-255-T1,                                             C
               SVC-254-T1,              INTERCOMM                      C
               SVC-253-T3,              JTIP                           C
               SVC-252-T3,              NCCF TCAM INTERFACE            C
               SVC-251-T3,              UCC-11 (ARTS)                  C
               SVC-250-T3,              PACE ACCOUNT LOAD              C
               SVC-249-T3,              FAVER QUICAT                   C
               SVC-248-T3,              ACF2                           C
               SVC-247-T3,              ACF2                           C
               SVC-246-T3-(L1),         ADABAS V4 PROD                 C
               SVC-245-T3,              PACE ACCOUNT LOAD              C
               SVC-244-T2,              IMS                            C
               SVC-243-T3,                                             C
               SVC-242-T3,                                             C
               SVC-241-T3,              VTAM PRINTER SUPPORT SYSTEM    C
               SVC-240-T1,                                             C
               SVC-239-T2,              CICS 1.5                       C
               SVC-238-T4,              UCC-1 (TMS)                    C
               SVC-237-T4,              UCC-1 (TMS)                    C
               SVC-236-T3,                                             C
               SVC-235-T4,              RESOLVE                        C
               SVC-234-T4,              SPF INTERACTIVE COMPRESS       C
               SVC-233-T3,              ADABAS/ACF2 INTERFACE  V4      C
               SVC-232-T3-(L1),         ADABAS V4 TEST                 C
               SVC-231-T3,              DMS ALLOCATION SVC             C
               SVC-230-T1,                                             C
               SVC-229-T4,              UCC-7                          C
               SVC-228-T4,                                             C
               SVC-227-T2,              CICS 1.6.1                     C
               SVC-226-T2,                                             C
               SVC-225-T5,                                             C
               SVC-224-T5,                                             C
               SVC-223-T5,                                             C
               SVC-222-T6,              CICS 1.5                       C
               SVC-221-T6 CICS 1.6.1 VTAM FAST PATH
./ ADD NAME=VOLMAC   0100-82299-82299-1420-00122-00122-00000-DN00150
        MACRO
        VOLMAC  &VOLUME,&USE=YES,&UNIT=3350
        GBLA   &COUNTY,&COUNTN
        LCLA   &NEXT,&NOW,&LOOP
        LCLC   &USES,&BIT1,&BIT2,&BIT3
.* THE MACRO VOLMAC IS USED TO CONSTRUCT A TABLE OF VOLUMES
.* THAT ARE ALLOCATED IN RESPONSE TO A USESR'S REQUEST FOR DEFAULT
.* VOLUME.
.* THE LIST IS IN TWO PARTS THAT ARE INTERMINGLED. EACH PART IS
.* CHAINED SEPARATELY AND A SEQUENTIAL SEARCH CAN SCAN ENTRIES.
.* PART ONE IS ELIGIBLE VOLUMES WHERE ALLOCATION WILL TAKE PLACE.
.* PART TWO IS ELIGIBLE VOLUMES BUT ALLOCATION WILL CONVERT TO PART
.* ONE.
&USES    SETC  '&USE'
       AIF (N'&VOLUME EQ 0).LASTUP
       AIF (&SYSNDX GT 1).DOIT
VOLTABLE CSECT
         DC  A(VOLY1)
         DC  A(VOLN1)
.DOIT  ANOP
       AIF ('&USES' EQ 'Y').TRY1
       AIF ('&USES' EQ 'YES').TRY1
       AIF ('&USES' EQ 'NO').TRY2
       AIF ('&USES' EQ 'N').TRY2
       MNOTE 4,'USES IS INVALID. VOLUMES ARE CONSIDERED INELIGIBLE'
       AGO   .TRY2
.TRY1  ANOP
&USES   SETC  'Y'
&COUNTY SETA &COUNTY+1
&NEXT   SETA &COUNTY+1
&NOW    SETA &COUNTY
&BIT1   SETC '1'
       AGO   .OK
.TRY2   ANOP
&USES  SETC  'N'
&COUNTN SETA &COUNTN+1
&NEXT   SETA &COUNTN+1
&NOW    SETA &COUNTN
&BIT1   SETC '0'
.OK      ANOP
       AIF ('&UNIT' EQ '').M1
       AIF ('&UNIT' EQ '3350').M1
       AIF ('&UNIT' EQ '3330-1').M2
       AIF ('&UNIT' EQ '3380').M4
       AIF ('&UNIT' EQ '3330').M2
       AIF ('&UNIT' EQ '3330-11').M2
       MNOTE 4,'INVALID UNIT TYPE, ASSUME 3350'
       AGO  .M1
.M2    ANOP
&BIT2  SETC '0'
&BIT3  SETC '0'
       AGO   .M3
.M4    ANOP
&BIT2  SETC '0'
&BIT3  SETC '1'
       AGO   .M3
.M1    ANOP
&BIT2  SETC '1'
&BIT3  SETC '0'
.M3    ANOP
       AIF (N'&VOLUME GT 1).MULTI
       AIF ('&VOLUME'(1,1) EQ '(').MULTI
       AIF (K'&VOLUME GT 6).DROP
       SPACE 1
VOL&USES&NOW DC  A(VOL&USES&NEXT)
             DC  CL6'&VOLUME'
             DC  B'&BIT1.&BIT2.&BIT3.00000',XL1'0'
        MEXIT
.MULTI  ANOP
&LOOP   SETA  1
.AGAIN  ANOP
        AIF  (&LOOP GT  N'&VOLUME).END
        AIF  (K'&VOLUME(&LOOP) GT 6).DROPM
        SPACE 1
VOL&USES&NOW DC  A(VOL&USES&NEXT)
             DC  CL6'&VOLUME(&LOOP)'
             DC  B'&BIT1.&BIT2.&BIT3.00000',XL1'0'
&NEXT   SETA &NEXT+1
&NOW    SETA &NOW+1
&LOOP   SETA &LOOP+1
        AGO  .AGAIN
.END    ANOP
        AIF  ('&USES' EQ 'N').ENDN
&COUNTY SETA &NOW-1
        MEXIT
.ENDN   ANOP
&COUNTN SETA &NOW-1
        MEXIT
.DROP   ANOP
        MNOTE 8,'&VOLUME IS LONGER THAN 6 CHARACTERS'
        AIF   ('&USES' EQ 'N').DROPN
&COUNTY SETA  &COUNTY-1
        MEXIT
.DROPN  ANOP
&COUNTN SETA  &COUNTN-1
        MEXIT
.DROPM  ANOP
        MNOTE 8,'&VOLUME(&LOOP) IS LONGER THAN 6 CHARACTERS'
&LOOP   SETA  &LOOP+1
        AGO   .AGAIN
.LASTUP ANOP
&COUNTY SETA  &COUNTY+1
&COUNTN SETA  &COUNTN+1
        AIF  (&COUNTY EQ 1).LASTA
        SPACE 1
VOLY&COUNTY DC A(VOLY1)
         DC   CL6' '
         DC   XL6'8000'
         AGO  .LASTB
.LASTA   ANOP
VOLY1    DC   A(0),CL6' ',XL6'0'
.LASTB   ANOP
        AIF  (&COUNTN EQ 1).LASTC
        SPACE 1
VOLN&COUNTN DC A(VOLN1)
         DC   CL6' '
         DC   XL6'0'
         MEXIT
.LASTC   ANOP
VOLN1    DC   A(0),CL6' ',XL6'0'
         MEXIT
        MEND
./ ADD NAME=WTP      0100-81189-81189-1634-00004-00004-00000-KK00150
         MACRO
&LAB1    WTP   &TXT
&LAB1    WTO   &TXT,ROUTCDE=(11)
         MEND
