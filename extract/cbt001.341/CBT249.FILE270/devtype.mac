*          DATA SET 764DEVTYPE AT LEVEL 003 AS OF 07/03/80
*
*
*   DDDDDDD  EEEEEEEE VV    VV TTTTTTTT YY    YY PPPPPPP  EEEEEEEE
*   DD    DD EE       VV    VV    TT    YY    YY PP    PP EE
*   DD    DD EE       VV    VV    TT     YY  YY  PPPPPPP  EE
*   DD    DD EEEEEEEE VV    VV    TT      YYYY   PP       EEEEEEEE
*   DD    DD EEEEEEEE VV    VV    TT       YY    PP       EEEEEEEE
*   DD    DD EE       VV    VV    TT       YY    PP       EE
*   DD    DD EE        VV  VV     TT       YY    PP       EE
*   DDDDDDD  EEEEEEEE    VV       TT       YY    PP       EEEEEEEE
*
*
*  -----------------------------------------------------------------
*  COMMAND     OPERANDS
*  -----------------------------------------------------------------
*  DEVTYPE     VOL('VOL SER NUMBER')
*  -----------------------------------------------------------------
*
*
*  OPERANDS -
*
*       REQUIRED -
*
*           VOL('VOL SER NUMBER') -- 'VOL SER NUMBER' IS THE VOLUME
*                                     SERIAL NUMBER OF THE DISK PACK
*                                     THAT YOU WISH TO KNOW THE DEVICE
*                                     TYPE.
*
*                                           E.G.
*
*                                        VOLUME SERIAL NUMBER 335041
*                                        WILL RETURN IN CLIST VARIABLE
*                                        &DEVTYP 3350.  VOL SER 222022
*                                        WILL RETURN IN CLIST VARIABLE
*                                        &DEVTYP 3330-1.
*
*
*
*
*        THIS COMMAND RETURNS IN CLIST VARIABLE &DEVTYP THE DEVICE
*        TYPE FOR A VOLUME SERIAL NUMBER (PROVIDED IN THE VOL KEYWORD
*        PARAMETER).  THEREFORE THE POSSIBLE VALUES FOR &DEVTYP ARE
*        AS FOLLOWS:
*
*                  '2305  '
*                  '2305-2'
*                  '3330-1'
*                  '3350  '
*                  '3380  '
*
         EJECT
*
*
*        THIS COMMAND WILL ALSO MAKE AVAILABLE TWO OTHER VARIABLES
*        THAT THE INVOKING CLIST MAY INTERROGATE.  BELOW IS A TABLE
*        OF VALUES AFTER EXECUTION OF THIS COMMAND FOR THESE TWO
*        VARIABLES &OUTMSG AND &LASTCC (RETURN CODE)
*
*        ×---------×-----------------------------------------------×
*        × &LASTCC ×                 &OUTMSG                       ×
*        ×---------×-----------------------------------------------×
*        ×    0    × SUCCESSFUL COMPLETION                         ×
*        ×---------×-----------------------------------------------×
*        ×    4    × MISSING REQUIRED PARAMETER VOL                ×
*        ×---------×-----------------------------------------------×
*        ×    8    × VOL PARAM MUST BE 5 OR 6 BYTES                ×
*        ×---------×-----------------------------------------------×
*        ×   12    × VOLUME NOT MOUNTED                            ×
*        ×---------×-----------------------------------------------×
*        ×   20    × NON RECOGNIZABLE UNIT TYPE                    ×
*        ×---------×-----------------------------------------------×
*        ×   96    × INVALID SYNTAX OF OPERAND                     ×
*        ×---------×-----------------------------------------------×
         EJECT
DEVTYPE  ENTERR
         EJECT
********************************************************************
*                                                                  *
*      M A I N   L I N E   L O G I C   F O R   D E V T Y P E       *
*                                                                  *
********************************************************************
*
         LR    R11,R1              SAVE THE PARM POINTER
         BAL   R14,DOPARSE         PERFORM THE PARSE SERVICE ROUTINE
         CLC   PROCESSW,=C'YES'    WAS PARSE SUCCESFUL ?
         BNE   INITL               IF NOT, BRANCH TO INITL
         BAL   R14,LOADVOL         PERFORM ROUTINE TO LOAD THE PARSED
*                                    FIELD INTO VOLSER
         CLC   PROCESSW,=C'YES'    IS EVERTHING STILL HONKEY DOREY ?
         BNE   INITL               IF NOT, BRANCH TO INITL
         BAL   R14,LOADDEVT        PERFORM ROUTINE TO PROCESS VOLSER
*                                    AND LOAD DATA FIELD DEVTYPE
*                                    WHICH WILL BECOME THE CLIST
*                                    VARIABLE
INITL    BAL   R14,INITLIST        BUILD PARMLIST FOR IKJUPDT
         BAL   R14,SETDEVT         SET CLIST VARIABLE DEVTYP
         BAL   R14,SETOUTMG        SET CLIST VARIABLE OUTMSG
         B     SHUTDOWN            BRANCH TO SHUTDOWN
         EJECT
********************************************************************
*                                                                  *
*        P A R S E   I N P U T   C O M M A N D   B U F F E R       *
*                                                                  *
********************************************************************
*
DOPARSE  ST    R14,SAVEIT1
         KKPARSE
         LTR   R15,R15              RC = 0 ? (I.E PARSE GO OK ?)
         BNZ   PARSERR              IF NOT, BRANCH TO PARSERR
         MVC   PROCESSW,=C'YES'     MOVE 'YES' TO PROCESSW
         L     R10,ANS
         USING IKJPARMD,R10
         B     EXITPARS
PARSERR  MVC   PROCESSW,=C'NO '     MOVE 'NO ' TO PROCESSW
         LA    R4,96                SET REG 4 = 96
         MVC   OUTMSG,MESS96        MOVE 'INVALID SYNTAX OF OPERAND'
*                                       TO OUTMSG
EXITPARS L     R14,SAVEIT1
         BR    14
         EJECT
********************************************************************
*                                                                  *
*        THIS ROUTINE PROCESSES THE PARSED FIELD AND THEN          *
*        LOADS DATA FIELD VOLSER.                                  *
*                                                                  *
********************************************************************
*
LOADVOL  ST    R14,SAVEIT2
         TM    VSTRING+6,X'80'         IS VOL SER PRESENT ?
         BNO   NOVOLSR                 IF NOT, BRANCH TO NOVOLSR
         MVC   VOLSER,=CL6' '          MOVE SPACES TO VOLSER
         LH    R7,VSTRING+4            R7 ==> LENGTH OF THE VOL SER
         C     R7,=F'6'                IS LENGTH OF VOL = 6 ?
         BE    MOVE6                   IF YES, BRANCH TO MOVE6
         C     R7,=F'5'                IS LENGTH OF VOL = 5 ?
         BE    MOVE5                   IF YES, BRANCH TO MOVE5
         B     RONGLEN                 BRANCH TO RONGLEN
MOVE6    L     R8,VSTRING              R8 ==> ADDRESS OF THE VOL SER
         MVC   VOLSER,0(R8)            MOVE THE VOL SER TO VOLSER
         MVC   PROCESSW,=C'YES'        MOVE 'YES' TO PROCESSW
         B     EXITLOAD                BRANCH TO EXITLOAD
MOVE5    L     R8,VSTRING              R8 ==> ADDRESS OF THE VOL SER
         MVC   VOLSER(5),0(R8)         MOVE THE VOL SER TO VOLSER
         MVC   PROCESSW,=C'YES'        MOVE 'YES' TO PROCESSW
         B     EXITLOAD                BRANCH TO EXITLOAD
NOVOLSR  MVC   PROCESSW,=C'NO '        MOVE 'NO ' TO PROCESSW
         LA    R4,4                    SET R4 = 4
         MVC   OUTMSG,MESS4            MOVE 'MISSING REQUIRD PARAMETER'
*                                         TO OUTMSG
         B     EXITLOAD                BRANCH TO EXITLOAD
RONGLEN  MVC   PROCESSW,=C'NO '        MOVE 'NO ' TO PROCESSW
         LA    R4,8                    SET R4 = 8
         MVC   OUTMSG,MESS8            MOVE 'VOL PARAM MUST BE 5 OR 6
*                                         BYTES' TO OUTMSG
EXITLOAD L     R14,SAVEIT2
         BR    14
         EJECT
********************************************************************
*                                                                  *
*        THIS ROUTINE IS RESPONSIBLE FOR CREATING THE DATA         *
*        ELEMENT DEVTYP WHICH WILL BECOME THE CLIST VARIABLE       *
*        &DEVTYP BY EXAMINING THE VOLUME SERIAL NUMBER MADE        *
*        AVAILABLE TO THIS ROUTINE IN VOLSER                       *
*                                                                  *
********************************************************************
*
LOADDEVT ST    R14,SAVEIT3
         MVC   VOL2DVOL,VOLSER
         CALL  VOL2DEVT,(DEVTAREA),VL
         C     R15,=F'0'              WAS VOL2DEVT SUCCESSFUL ?
         BE    MOVEDEVT               IF SO, BRANCH TO MOVEDEVT
         C     R15,=F'4'              VOLUME NOT MOUNTED ?
         BE    NOTMNTED               IF SO, BRANCH TO NOTMNTED
         LA    R4,20                  SET R4 = 20
         MVC   OUTMSG,MESS20          MOVE 'NON RECOGNIZBLE UNIT TYPE'
*                                       TO OUTMSG
         B     EXITDEVT               BRANCH TO EXITDEVT
NOTMNTED LA    R4,12                  SET R4 = 12
         MVC   OUTMSG,MESS12          MOVE 'VOLUME NOT MOUNTED'
*                                       TO OUTMSG
         B     EXITDEVT               BRANCH TO EXITDEVT
MOVEDEVT MVC   DEVTYP(6),OUTDEVT
         LA    R4,0                   SET R4 = 0
         MVC   OUTMSG,MESS0           MOVE 'SUCCESSFUL COMPLETION'
*                                       TO OUTMSG
EXITDEVT L     R14,SAVEIT3
         BR    14
         EJECT
********************************************************************
*                                                                  *
*        BUILD UPDTLIST (IKJUPDT PARM LIST)                        *
*                                                                  *
********************************************************************
*
INITLIST ST    R14,SAVEIT4
         MVC   UPDTUPT,CPPLUPT          UPT
         MVC   UPDTECT,CPPLECT          ECT
         LA    R9,ECB
         ST    R9,UPDTECB               ECB
         LA    R8,UPLIST
         ST    R8,UPDTUPL               UPLIST
         L     R14,SAVEIT4
         BR    14
         EJECT
********************************************************************
*                                                                  *
*        BUILD UPDATE PARM LIST FOR &DEVTYP AND CALL IKJUPDT       *
*                                                                  *
********************************************************************
*
SETDEVT  ST    R14,SAVEIT5
         LA    R9,=C'DEVTYP'       R9 ==> ADDRESS OF VAR NAME
         ST    R9,LOCPTR           STORE ADDR OF VAR NAME IN LOCPTR
         MVC   LOCLEN,=F'6'        LOCLEN = LENGTH OF VAR NAME
         LA    R5,DEVTYP           R5 ==> ADDRESS OF VARIABLE
         ST    R5,VALPTR           STORE ADDRESS OF VARIABLE IN VALPTR
         MVC   VALLEN,=F'0'
         MVC   VALLEN+2(2),OUTDEVLN  VALLEN = LENGTH OF DEVICE TYPE
         LA    R1,UPDTLIST         R1 ==> IKJUPDT PARM LIST
         CALL  IKJUPDT             DO THE UPDATE
         L     R14,SAVEIT5
         BR    14
         EJECT
********************************************************************
*                                                                  *
*        BUILD UPDATE PARM LIST FOR &OUTMSG AND CALL IKJUPDT       *
*                                                                  *
********************************************************************
*
SETOUTMG ST    R14,SAVEIT6
         LA    R9,=C'OUTMSG'       R9 ==> ADDRESS OF VAR NAME
         ST    R9,LOCPTR           STORE ADDR OF VAR NAME IN LOCPTR
         MVC   LOCLEN,=F'6'        LOCLEN = LENGTH OF VAR NAME
         LA    R5,OUTMSG           R5 ==> ADDRESS OF VARIABLE
         ST    R5,VALPTR           STORE ADDRESS OF VARIABLE IN VALPTR
         MVC   VALLEN,=F'30'       VALLEN = LENGTH OF DATA FIELD
         LA    R1,UPDTLIST         R1 ==> IKJUPDT PARM LIST
         CALL  IKJUPDT             DO THE UPDATE
         L     R14,SAVEIT6
         BR    14
         EJECT
********************************************************************
*                                                                  *
*        E N D   O F   J O B   R O U T I N E                       *
*                                                                  *
********************************************************************
*
SHUTDOWN LR   R15,R4
         LEAVER
         EJECT
         SPACE 3
********************************************************************
*                                                                  *
*        D A T A   A R E A   C O N S T A N T S                     *
*                                                                  *
********************************************************************
*
MESS0    DC    C'SUCCESSFUL COMPLETION         '
MESS4    DC    C'MISSING REQUIRED PARAMETER VOL'
MESS8    DC    C'VOL PARAM MUST BE 5 OR 6 BYTES'
MESS12   DC    C'VOLUME NOT MOUNTED            '
MESS16   DC    C'UCB ERROR                     '
MESS20   DC    C'NON RECOGNIZABLE UNIT TYPE    '
MESS96   DC    C'INVALID SYNTAX OF OPERAND     '
         SPACE 3
*
********************************************************************
*                                                                  *
*     V O L 2 D E V T   L I N K A G E   A R E A                    *
*                                                                  *
********************************************************************
*
DEVTAREA DS    0CL16
VOL2DVOL DS    CL6
OUTDEVT  DS    CL8
OUTDEVLN DS    CL2
         LTORG
         EJECT
         SPACE 3
********************************************************************
*                                                                  *
*        D Y N A M I C   W O R K   A R E A                         *
*                                                                  *
********************************************************************
*
WORKAREA DSECT
SAVEAREA DS    18F
PPLA     DS    7F
ANS      DS    F
ECB      DS    F
VOLSER   DS    CL6
DEVTYP   DS    CL6
OUTMSG   DS    CL30
PROCESSW DS    CL3
         DS    0D
SAVEIT1  DS    F
SAVEIT2  DS    F
SAVEIT3  DS    F
SAVEIT4  DS    F
SAVEIT5  DS    F
SAVEIT6  DS    F
*
UPDTLIST DS    0F
UPDTUPT  DS    F
UPDTECT  DS    F
UPDTECB  DS    F
UPDTUPL  DS    F
*
UPLIST   DS    0F
LOCPTR   DS    AL4
LOCLEN   DS    FL4
VALPTR   DS    AL4
VALLEN   DS    FL4
*
ACCTVAL  DS    CL9
WORKLEN  EQU   *-WORKAREA
DEVTYPE  CSECT
         EJECT
********************************************************************
*                                                                  *
*                   P A R S E   M A C R O S                        *
*                                                                  *
********************************************************************
*
PCL      IKJPARM
VOL      IKJKEYWD DEFAULT='VOL'
         IKJNAME 'VOLUME',SUBFLD=VOLSR,ALIAS=('VOLSER')
VOLSR    IKJSUBF
VSTRING  IKJPOSIT DSNAME,VOLSER
         IKJENDP
         END
