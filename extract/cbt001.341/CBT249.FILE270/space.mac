*          DATA SET 761KKSPACE AT LEVEL 001 AS OF 10/13/80
         TITLE 'SPACE - DOCUMENTATION'
         REGISTER
*.....................................................................*
*.                                                                   .*
*.   SPACE                                                           .*
*.                                                                   .*
*.....................................................................*
*.    MODIFIED JAN 20,1984 TO HANDLE 3380 DISKS - *KK2*              .*
*.    MODIFIED FEB 03,1984 TO HANDLE VOL AND SET CLIST VARIABLES-*KK3**
*.....................................................................*
*.                                                                   .*
*.   1.0  GENERAL DESCRIPTION                                        .*
*.                                                                   .*
*.   THIS TSO COMMAND WILL RETURN THE DSORG, ALLOCATION TYPE,        .*
*.   INITIAL ALLOCATION, SECONDARY ALLOCATION, EXTENTS, UNUSED       .*
*.   SPACE REMAINING - IN TRACKS, AND THE DATASET NAME.              .*
*.                                                                   .*
*.....................................................................*
*.                                                                   .*
*.....................................................................*
*.                                                                   .*
*.   2.0  COMMAND SYNTAX                                             .*
*.                                                                   .*
*.    SPACE 'NAME OF DATASET'   PREFIX ADDED IF DATASET NOT 'QUOTED' .*
*.          VOL(VOLSER)         IF NOT CATALOGED                     .*
*.          VAR(VARNAME)        IF DATA TO BE PLACED IN CLIST VARIABLE*
*.          EXTENTS             IF EACH EXTENT TO BE LISTED          .*
*.                                                                   .*
*.....................................................................*
         TITLE 'SPACE - LIST SPACE COMMAND'
SPACE    CSECT
         STM   R14,R12,12(R13)
         USING SPACE,R15
         ST    R13,SAVE+4
         LA    R13,SAVE
         B     BEGIN
SAVE     DC    18F'0'
         DROP  R15
         USING SAVE,R13
         TITLE 'SPACE - GETMAIN AND PARSE'
BEGIN    LR    R4,R1
         USING CPPL,R4
         LA    R0,LWORK            GET LENGTH OF WORK AREA
         AH    R0,=H'4096'         GET EXTRA 4K FOR LOCINDEX WORK
         ICM   R0,B'1000',=FL1'1'  SUBPOOL 1
         GETMAIN R,LV=(0)
         LR    R12,R1               SAVE ADDR OF WORK AREA
         USING WORKAREA,R12
         LA    R0,LOCINDXW          POINT TO LOCINDEX WORK AREA
         ST    R0,PARM+12           SAVE ADDR IN PARM LIST
         MVI   PARM+12,X'80'        INDICATE END OF PARM LIST
         MVI   WXTNT+4,X'04'
         LA    R3,WPPL             GET ADDR OF PPL
         USING PPL,R3
         L     R0,CPPLCBUF
         ST    R0,PPLCBUF          SAVE ADDR OF COMMAND BUFFER
         L     R0,CPPLUPT
         ST    R0,PPLUPT           SAVE ADDR OF UPT
         L     R0,CPPLPSCB
         L     R10,CPPLUPT         GET ADDR OF UPT
         LA    R10,16(,R10)             R10-> PREFIX
         SR    R11,R11
         IC    R11,7(R10)          GET LENGTH OF USERID
         BCTR  R11,0
LECT     L     R0,CPPLECT
         ST    R0,PPLECT           SAVE ADDR OF ECT
         LA    R0,CPECB
         ST    R0,PPLECB           SAVE ADDR OF ECB
         XC    CPECB,CPECB         CLEAR ECB
         L     R0,=A(PARSLIST)
         ST    R0,PPLPCL           SAVE ADDR OF PCL
         LA    R0,WPDL
         ST    R0,PPLANS           SAVE ADDR OF PDL AREA
         XC    PPLUWA,PPLUWA       CLEAR UWA
         LR    R1,R3               PASS ADDR OF PPL TO PARSE
         LINK  EP=IKJPARS          LINK TO PARSE SERVICE ROUTINE
         LTR   R15,R15             PARSE ERROR
         BNZ   RETC                 YES
         TM    PPLANS,X'FF'        PARSE ERROR
         BO    RETC                 YES
         DROP  R3
         L     R3,WPDL             GET ADDR OF PDL
         USING IKJPARMD,R3
         SPACE
*              ADDITIONAL PARMS VARIABLE(),VOL(),EXTENTS - *KK3*
         CLC   EXTENT,=H'0'       EXTENTS REQUESTED?
         BE    CHKVAR             NOPE.
         OI    FLAG,X'80'         FLAG EXTENT LIST REQ
CHKVAR   CLC   VARF,=H'0'         VAR REQ?
         BE    CHKVOL             NOPE.
         OI    FLAG,X'40'         FLAG VARIABLE REQ
         MVC   UUPT,CPPLUPT                                   *KK3*
         MVC   UECT,CPPLECT                                   *KK3*
         LH    R4,VARSF+4         R4=VAR NAME LEN
         ST    R4,VARLEN          SAVE
         L     R1,VARSF           R1->VAR NAME
         BCTR  R4,R0              R4-1
VARM     MVC   VARNAME(0),0(R1)   SAVE VAR NAME
         EX    R4,VARM            F'SHURE!
CHKVOL   CLC   VOLUME,=H'0'       VOL REQ?
         BE    DSNTST             NOPE.
         OI    FLAG,X'20'         FLAG VOL REQ
         MVC   VOLS,BLANKS         MOVE BLANKS TO VOLSER WORK AREA
         LH    R4,VOL+4           R4=VOL LEN
         BCTR  R4,R0              R4-1
         L     R1,VOL             R1->VOLSER
VOLM     MVC   VOLS(0),0(R1)      SAVE VOLSER
         EX    R4,VOLM            F'SHURE!
         SPACE
DSNTST   TM    DSNLIST+6,X'80'      DSNAME SPECIFIED?
         BO    DSNRTN                YES
         B     RETC                 NO PARMS - LISTS FOR USERID
         DROP  R4
         TITLE 'SPACE - DATASET NAME ROUTINE'
DSNRTN   LA    R4,DSNLIST           POINT TO DSN LIST
         TM    FLAG,X'40'         VARIABLE?                   *KK3*
         BO    DSNAME             YUP.                        *KK3*
         LA    R0,L'MSG1
         LA    R1,MSG1
         SVC   93                  TPUT HEADING
DSNAME   L     R5,0(R4)             POINT TO DSNAME
         LH    R6,4(R4)             GET LENGTH OF DSNAME
         BCTR  R6,0
         MVI   DSN1,X'40'
         MVC   DSN1+1(43),DSN1     BLANK DSN WORK AREA
         LA    R8,DSN1              POINT TO DSN WORK AREA
         TM    6(R4),X'40'          DSNAME CONTAINED IN QUOTES?
         BO    MVCDSNAM               YES
         EX    R11,USIDMVC         MOVE USERID TO WORK AREA
         LA    R8,1(R11,R8)        BUMP PAST USERID
         MVI   0(R8),C'.'          MOVE PERIOD TO WORK AREA
         LA    R8,1(0,R8)          BUMP PAST
MVCDSNAM EX    R6,DSNMVC           MOVE DSNAME TO WORK AREA
         TM    FLAG,X'20'         VOL SPECIFIED?              *KK3*
         BO    BALOBTN            YUP.                        *KK3*
LOCDSN   OI    FLAG,X'10'
         LOCATE INDS
         LTR   R15,R15              DID IT FIND VOL SER
         BNZ   ERR03                 NO WRITE ERROR MSG
         NI    FLAG,X'EF'
         MVC   VOLS(6),BUF1+6      YES - MOVE IN VOL SER
         SPACE 2
BALOBTN  BAL   R9,OBTNRTN          LINK TO OBTAIN AND PRINT ROUTINE
         B     RETC                 YES
         TITLE 'SPACE - OBTAIN AND PRINT ROUTINES'
*   READ DSCB1 AND GET SPACE
OBTNRTN  STM   R2,R11,OBTNSAVE     SAVE CALLER'S REGISTERS
         MVC   DSNSAVE(44),DSN1
         MVI   DSN1,X'04'          MOVE 'DSN' FOR F4 DSCB...
         MVC   DSN1+1(43),DSN1     ...INTO DSN1
         OBTAIN SERCHCAM
         CLI   BUF1,X'F4'          DID IT READ OK?
         BNE   ERRF4               NO
         MVC   VOLTKCYL(2),BUF1+20 GET NUM OF TRKS/CYL
         MVC   DSN1(44),DSNSAVE
         MVI   MSG2,X'40'
         MVC   MSG2+1(75),MSG2     BLANK MESSAGE AREA
         OBTAIN SERCHCAM
         LTR   R15,R15             DID OBTAIN WORK
         BNZ   ERR03               NO - WRITE ERROR MSG
         SPACE 2
         CLI   BUF1,C'1'            IS IT F1 DSCB?
         BNE   ERR01                NOT F1
         LA    R9,XTNTS            POINT TO EXTENTS SAVE AREA
         LH    R6,BUF1+54          GET LAST RELATIVE TRK USED
         CLI   BUF1+56,X'00'       IS TRK UNUSED?
         BE    *+8                  YES
         LA    R6,1(R6)             NO, ANOTHER TRACK
         STH   R6,LASTTRK          SAVE LAST REL. TRK
         MVC   DSORG,BUF1+38       SAVE DSORG
AROUND   EQU   *
* TEST FOR TYPE OF DSORG AND MOVE TO PRINT LINE
         CLI   BUF1+38,X'80'        IS IT IS
         BNE   NIS                  NO
         MVC   MSG2+2(2),=C'IS'     YES - MOVE IN IS
         B     GDSO                 BRANCH TO GOT DSORG
NIS      CLI   BUF1+38,X'40'        IS IT PS
         BNE   NPS                   NO
         MVC   MSG2+2(2),=C'PS'      YES-MOVE IN PS
         B     GDSO                 BRANCH TO GOT DSORG
NPS      CLI   BUF1+38,X'20'        IS IT DA
         BNE   NDA                   NO
         MVC   MSG2+2(2),=C'DA'      YES - MOVE IN DA
         B     GDSO                 BRANCH TO GOT DSORG
NDA      CLI   BUF1+38,X'02'        IS IT PO
         BNE   NPO                   NO
         MVC   MSG2+2(2),=C'PO'      YES - MOVE IN PO
         B     GDSO                 BRANCH TO DSORG
NPO      CLI   BUF1+38,X'01'        IS IT UNMOVEABLE
         MVC   MSG2+2(2),=C' U'      YES
GDSO     EQU   *
         TM    BUF1+50,X'C0'
         BM    GDSO2
         BZ    GDSO1
         MVC   MSG2+7(4),=C'CYLS'
         MVI   SWITCH,C'X'
         B     GDSO4
GDSO1    EQU   *
         MVC   MSG2+7(4),=C'ABS '
         MVI   SWITCH,C' '
         B     GDSO4
GDSO2    EQU   *
         TM    BUF1+50,X'80'
         BZ    GDSO3
         MVC   MSG2+7(4),=C'TRKS'
         MVI   SWITCH,C' '
         B     GDSO4
GDSO3    EQU   *
         MVC   MSG2+7(4),=C'BLKS'
         MVI   SWITCH,C' '
GDSO4    EQU *
         ST    R8,REGSAVE
         LH    R8,BUF1+52
         CVD   R8,WKD
         MVC   MSG2+20(4),=X'40202120'
         ED    MSG2+20(4),WKD+6
         L     R8,REGSAVE
         SR    R2,R2                ZERO REG 2
         IC    R2,BUF1+15           PICK UP NUMBER OF EXTENTS
         LA    R3,1                 SET EXTENT COUNTER
         SR    R4,R4                CLEAR R4 TO TRK ACCUMULATION
         LTR   R2,R2               NO XTNTS? - GDG PATTERN. DSCB
         BZ    VVALID               YES, BYPASS ACCUMULATE
         LA    R5,BUF1+61           POINT TO FIRST EXTENT
VXTLOOP  MVC   0(10,R9),0(R5)      MOVE EXTENT TO SAVE AREA
         LA    R9,10(R9)           BUMP TO NEXT SAVE AREA
         MVC   HWK1(2),6(R5)        MOVE HI-CYL TO HWD
         LH    R0,HWK1              LOAD
         MVC   HWK1(2),8(R5)        MOVE HI-TRK TO HWD
         LH    R1,HWK1              LOAD
         MVC   HWK1(2),2(R5)        MOVE LOW-CYL TO HWD
         SH    R0,HWK1              SUBTRACT
         MVC   HWK1(2),4(R5)        MOVE LOW-TRK TO HWD
         SH    R1,HWK1              SUBTRACT
         MH    R0,VOLTKCYL          CONVERT CYL TO TRK
         AR    R1,R0                GET TOTAL MINUS1
         LA    R4,1(R1,R4)          GET TOTAL AND ACCUMULATE
         CLI   SWITCH2,C'X'
         BE    MORE
         MVI   SWITCH2,C'X'
         CVD   R4,WKD
         MVC   TOTAL,WKD
MORE     EQU   *
         CR    R3,R2                DONE LAST EXTENT?
         BE    VVALID               GO TO VVALID IF SO
         LA    R3,1(R3)             BUMP TO EXTENT COUNTER
         CH    R3,=H'4'             FOURTH EXTENT?
         BE    VXT4                   BRANCH IF SO
         CH    R3,=H'8'             EIGHTTH EXTENT?
         BE   VXT8
         LA    R5,10(R5)            ELSE BUMP EXTENT POINTER
         B     VXTLOOP              AND GO TO NEXT EXTENT
VXT4     MVC   VTOCCHHR(5),BUF1+91  POINT NEXT DSCH(F2 OR F3)
VXT4OBT  OBTAIN SEEKCAM
         CLI   BUF1+44,C'3'         IF IT F3 DSCB
         BE    VXT4F3               BRANCH IF SO
         MVC   VTOCCHHR(5),BUF1+135  ELSE ITS F2-POINT TO F3
         B     VXT4OBT
VXT4F3   LA    R5,BUF1+4            POINT TO FIRST EXTENT IN F3
         B     VXTLOOP              CONTINUE LOOP FOR SIZE
VXT8     LA    R5,BUF1+45           SKIP OVER F3 ID IN F3 DSCB
         B     VXTLOOP              CONTINUE LOOP FOR SIZE
VVALID   EQU   *
* CONVERT SPACE ALLOC AND EDIT IN PRINT LINE
         CVD   R4,WKD
         MVC   ALLOCHLD,=X'402020202120'
         ED    ALLOCHLD(6),WKD+5    BRANCH TO EXTENT CONVERSION
CVDU     LH    R6,LASTTRK            GET LAST RELATIVE TRACK
         LR    R7,R4
         SR    R7,R6                 R7 CONTAINS UNUSED SPACE
         CVD   R7,WKD               CONVERT DEC R7
         MVC   MSG2+39(6),MASKED      MOVE IN MASKED FIELD
         ED    MSG2+39(6),WKD+5       EDIT # TRKD UNUSED
CVDX     CVD   R2,WKD                   PICK UP # EXTENTS
         MVC   MSG2+26(4),MASKED      MOVE IN MASKED FIELD
         ED    MSG2+26(4),WKD+6      EDIT # EXTENTS USED
         MVC   MSG2+47(44),DSN1     MOVE DSN TO PRINT LINE
         LH    R1,VOLTKCYL          *KK2*
         CVD   R1,PDW               *KK2*
         MVC   TYPE,PDW+6           *KK2*
TSTSWTCH EQU   *
         CLI   SWITCH,C' '
         BE    NOCHG
         DP    TOTAL,TYPE
         MVC   MSG2+14(4),=X'F0202020'
         ED    MSG2+14(4),TOTAL+6
         MVI   MSG2+15,C'-'
         MVC   MSG2+11(4),=X'40212020'
         ED    MSG2+11(4),TOTAL+4
         PACK  TOTAL,ALLOCHLD+1(5)
         DP    TOTAL,TYPE
         MVC   MSG2+33(4),=X'F0202020'
         ED    MSG2+33(4),TOTAL+6
         MVI   MSG2+34,C'-'
         MVC   MSG2+30(4),=X'40212020'
         ED    MSG2+30(4),TOTAL+4
         MVI   SWITCH,C' '
         B     PRINTIT
NOCHG    EQU   *
         DP    TOTAL,TYPE
         MVC   MSG2+14(4),=X'F0202020'
         ED    MSG2+14(4),TOTAL+6
         MVI   MSG2+15,C'-'
         MVC   MSG2+11(4),=X'40212020'
         ED    MSG2+11(4),TOTAL+4
         PACK  TOTAL,ALLOCHLD+1(5)
         DP    TOTAL,TYPE
         MVC   MSG2+33(4),=X'F0202020'
         ED    MSG2+33(4),TOTAL+6
         MVI   MSG2+34,C'-'
         MVC   MSG2+30(4),=X'40212020'
         ED    MSG2+30(4),TOTAL+4
PRINTIT  EQU   *
         CLC   MSG2+2(2),=C'IS'
         BNE   PRINTER
         MVC   MSG2+39(6),=C'      '
PRINTER  EQU   *
         MVI   SWITCH2,C' '
         BAL   R14,SETVAR         SET CLIST VAR IF REQ        *KK3*
         TM    FLAG,X'40'         WAS IT SET?                 *KK3*
         BO    TX                 YUP.                        *KK3*
         TPUT  MSG2,93             WRITE OUT LINE
TX       TM    FLAG,X'80'          AUTHORIZED USER?
         BNO   OBTNRET              NO
         LA    R9,XTNTS            POINT TO EXTENT SAVE AREA
         MVC   MSG2(6),VOLS        MOVE VOLSER TO MESSAGE AREA
OUTLOOP  LA    R3,3                SET LOOP CONTROL
         LA    R4,MSG2+8           POINT TO MESSAGE AREA
         MVI   MSG2+6,X'40'
         MVC   MSG2+7(69),MSG2+6   BLANK MESSAGE AREA
INLOOP   MVC   WXTNT+3(1),1(R9)    MOVE EXTENT # TO WORK AREA
         UNPK  0(2,R4),WXTNT+3(2)  UNPACK EXTENT #
         TR    0(1,R4),TRTBL       TRANSLATE EXTENT #
         MVC   WXTNT(4),2(R9)      MOVE BEGIN XTNT TO WORK AREA
         UNPK  2(9,R4),WXTNT(5)    UNPACK XTNT
         TR    2(8,R4),TRTBL       TRANSLATE EXTENT
         MVC   WXTNT(4),6(R9)      MOVE END XTNT TO WORK AREA
         UNPK  11(9,R4),WXTNT(5)   UNPACK XTNT
         TR    11(8,R4),TRTBL      TRANSLATE EXTENT
         LA    R9,10(R9)           BUMP TO NEXT EXTENT
         LA    R4,22(R4)           BUMP MESSAGE AREA POINTER
         BCTR  R2,0                DECREASE # EXTENTS
         LTR   R2,R2               ANY MORE EXTENTS
         BZ    *+8                  NO
         BCT   R3,INLOOP           CONVERT NEXT EXTENT
         LA    R0,L'MSG2
         LA    R1,MSG2
         SVC   93                  TPUT EXTENTS
         MVC   MSG2(6),BLANKS      BLANK VOLSER
         LTR   R2,R2               ANY MORE EXTENTS?
         BNZ   OUTLOOP              YES
OBTNRET  LM    R2,R11,OBTNSAVE     RELOAD CALLER'S REGISTERS
         BR    R9                  RETURN TO CALLER
         SPACE
*              CLIST VARIABLE SETTING ROUTINE:                *KK3*
SETVAR   TM    FLAG,X'40'         SET REQ?                    *KK3*
         BNOR  R14                NOPE.                       *KK3*
         ST    R14,L2LS                                       *KK3*
*              BUILD UPDATE CTL LIST:                         *KK3*
         LA    R1,VARNAME                                     *KK3*
         ST    R1,VARPTR                                      *KK3*
         MVC   VALLEN,=F'93'                                  *KK3*
         LA    R1,MSG2            R1->OUTPUT DATA LINE        *KK3*
         ST    R1,VALPTR                                      *KK3*
*              BUILD SETVAR PARM LIST:                        *KK3*
         LA    R1,UPLIST          R1->SETVAR PARM BLOCK       *KK3*
         ST    R1,UPPTR           PASS TO SETVAR RTN          *KK3*
         LA    R1,UECBWD                                      *KK3*
         ST    R1,UECB                                        *KK3*
*              CALL  SETVAR SUBROUTINE:                       *KK3*
         LA    R1,SETPARM                                     *KK3*
         LINK  EP=SETVAR          SET THE VARIABLE            *KK3*
         SPACE
         L     R14,L2LS                                       *KK3*
         BR    R14                                            *KK3*
         TITLE 'SPACE - EOJ AND ERROR ROUTINES'
RETC     EQU   *
         L     13,SAVE+4           LOAD R13 PREVIOUS SPACE AREA
         LM    2,12,28(13)         RELOAD REGISTERS
         L     14,12(13)           LOAD RETURN ADDRESS
         MVI   12(13),X'FF'        INDICATE CONTROL RETURN CALLING PROG
         BCR   15,14               RETURN TO CALLING PROGRAM
         SPACE 3
ERR01    EQU   *
* NO VALID COMMAND
         TPUT  ERMSG1,18
         B     RETC                BRANCH TO RETURN CODE
* DATASET NAME NOT FOUND
ERR03    MVC   MSG2(L'ERMSG9),ERMSG9
         MVC   MSG2+L'ERMSG9(44),DSN1
         LA    R0,L'ERMSG9+44
         LA    R1,MSG2
         SVC   93
         B     RETC
         SPACE 3
RDERR    MVC   MSG2(L'ERMSG8),ERMSG8
         MVC   MSG2+L'ERMSG8(44),DSN1
         LA    R0,L'ERMSG8+44
         LA    R1,MSG2
         SVC   93
         B     RETC                CONTINUE THRU LOOP
         SPACE 3
NOUSER   MVC   MSG2(L'ERMSG3),ERMSG3
         MVC   MSG2+L'ERMSG3(44),USERID
         LA    R0,L'ERMSG3+44
         LA    R1,MSG2
         SVC   93
         B     RETC                RETURN TO SYSTEM
         SPACE 3
NOTDISK  MVC   MSG2(L'ERMSG6),ERMSG6
         MVC   MSG2+L'ERMSG6(44),DSN1
         LA    R0,L'ERMSG6+44
         LA    R1,MSG2
         SVC   93
         B     RETC                PICK UP NEXT DATASET
         SPACE 3
MULTIVOL MVC   MSG2(L'ERMSG7),ERMSG7
         MVC   MSG2+L'ERMSG7(44),DSN1
         LA    R0,L'ERMSG7+44
         LA    R1,MSG2
         SVC   93
         B     RETC                CONTINUE WITH NEXT DSN
         SPACE 3
ERRF     EQU   *
         TPUT  ERMSG10,20
         B     RETC
ERRF4    EQU   *                   ERROR READING F4
         TPUT  ERMSG11,21
         B     RETC
USIDMVC  MVC   0(0,R8),0(R10)
DSNMVC   MVC   0(0,R8),0(R5)
MVCVOLS  MVC   0(0,R1),0(R5)
         TITLE 'SPACE - DATA AREAS'
         LTORG
ENDLIST  DS    0F
         DC    XL4'FF000000'
* SETUP CONSTANTS
VOLDSCTK DC    H'0'                NUM DSCH ON A TRK
VOLF4CHR DC    XL5'00'             CCHHR OF DSCB
VOLNO    DC    H'0'                NUM VOLUMES PROCESSED
PEXCTR   DC    H'0'                CTR FOR TATAL NUM FREE SPACE
LASTTRK  DC    H'0'
DSN1     DC    CL44' '              DATASET NAME
DSNSAVE  DC    CL44' '
VOLS     DC    CL6' '                 VOLUME SER
USERID   DC    CL44' '              USERID
FLAG     DC    X'00'
DSORG    DC    X'00'
BLANKS   DC    CL6' '
BUF1     DS    0D
         DS    265C
TRTBL    EQU   *-240
         DC    C'0123456789ABCDEF'
MASKED   DC    XL6'402020202020'   MASK FIELD FOR EDIT
         SPACE 3
* MESSAGE TO BE PRINTED
MSG1     DC  C'DSORG  TYPE   INIT   SEC  EXTS  TOTAL  UNUSED  DSNAME'
MSG2     DC    CL93' '
MSG4     DC    C'VOLUME DSCBS EXTENTS TRACKS  VTOC'
         SPACE 3
* ERROR MESSAGES
ERMSG1   DC    C'NO VALID COMMAND'
ERMSG3   DC    C'INVALID LEVEL - '
ERMSG6   DC    C'DSN NOT ON DISK - '
ERMSG7   DC    C'DSN ON MULTIVOLUMES - '
ERMSG8   DC    C'ERROR READING CATALOG DSN - '
ERMSG9   DC    C'DSN NOT FOUND - '
ERMSG10  DC    C'UNSUPPORTED KEYWORD'
ERMSG11  DC    C'ERROR READING F4 DSCB'
         EJECT
* CAMLST FOR DSCB3
SEEKCAM  CAMLST SEEK,VTOCCHHR,VOLS,BUF1
         SPACE 2
* CAMLST LOCATE DSN OV VOL SER
INDS     CAMLST NAME,DSN1,,BUF1
         SPACE 2
* CAMLST FOR DSCB 1
SERCHCAM CAMLST SEARCH,DSN1,VOLS,BUF1
         EJECT
* CONSTANTS AND WORK AREAS
HWK1     DC    H'0'                HALF WORD WORK AREA
VOLTKCYL DC    H'19'               # TRKS/CYL
VTOCCHHR DC    XL5'0'              TRACK ADDR WORK AREA
WKD      DC    D'0'                DOUBLE WORK WORK AREA
         SPACE 3
* PARM SETUP FOR GETDSN
PARM     DC    A(USERID)           USERID ADDRESS
         DC    A(DSN1)             DSN ADDRESS
         DC    A(VOLS)             VOL SER ADDRESS
         DC    A(0)                ADDRESS FOR GETMAIN
         SPACE 3
* EQUATE REGISTERS
*        EQUATE
RCC      EQU   R8
RHH      EQU   R7
RR       EQU   R6
         TITLE 'SPACE - PARSE PARAMETER LIST'
PARSLIST IKJPARM
DSNLIST  IKJPOSIT DSNAME,PROMPT='DATA SET NAME'
VARF     IKJKEYWD
         IKJNAME 'VARIABLE',SUBFLD=VAR
VOLUME   IKJKEYWD
         IKJNAME 'VOLUME',SUBFLD=VLM
EXTENT   IKJKEYWD
         IKJNAME 'EXTENTS'
VAR      IKJSUBF
VARSF    IKJIDENT 'VARIABLE NAME',OTHER=ANY,MAXLNTH=8
VLM      IKJSUBF
VOL      IKJIDENT 'VOLUME',FIRST=ALPHANUM,OTHER=ALPHANUM,MAXLNTH=6
         IKJENDP
         IKJPPL
         IKJCPPL
         TITLE 'SPACE - WORK AREA'
WORKAREA DSECT
WPPL     DS    7A
CPECB    DS    F
WPDL     DS    F
OBTNSAVE DS    10F
REGSAVE  DS    F
XTNTS    DS    16XL10
WXTNT    DS    CL5
ALLOCHLD DS    CL6
TOTAL    DS    CL8
SEC      DS    CL4
EXT      DS    CL4
TYPE     DS    CL2
SWITCH   DS    CL1
SWITCH2  DS    CL1
         SPACE
PDW      DS    D
L2LS     DS    F                                              *KK3*
VARNAME  DS    CL8                                            *KK3*
UECBWD   DS    F                                              *KK3*
         SPACE
SETPARM  DS    0F                 SETVAR PARM LIST:           *KK3*
UUPT     DS    F                                              *KK3*
UECT     DS    F                                              *KK3*
UECB     DS    F                                              *KK3*
UPPTR    DS    F                                              *KK3*
         SPACE
UPLIST   DS    0F                 UPDATE CTL BLOCK:           *KK3*
VARPTR   DS    A                                              *KK3*
VARLEN   DS    F                                              *KK3*
VALPTR   DS    A                                              *KK3*
VALLEN   DS    F                                              *KK3*
         SPACE
         DS    0D
LOCINDXW EQU   *
LWORK    EQU   *-WORKAREA
         END
