*
*  AUTHOR: JEFF SPREHN
*
**********************
*                    *
*  D A T E C O N V   *
*                    *
**********************
*
*  --------------------------------------------------------------------
*  COMMAND     OPERANDS
*  --------------------------------------------------------------------
*  DATECONV    ACTCODE('ACTION CODE') INDATE('INDATE')
*  --------------------------------------------------------------------
*
*
*  OPERANDS -
*
*     REQUIRED -
*
*       ACTCODE('ACTION CODE') --'ACTION CODE' IS ONE OF THE FOLLOWING:
*
*             "STA" IF THE DATE GIVEN TO THE COMMAND IS A STANDARD DATE
*             "JUL" IF THE DATE GIVEN TO THE COMMAND IS A JULIAN DATE
*             "SER" IF THE DATE GIVEN TO THE COMMAND IS A SERIAL DATE
*
*
*        INDATE('INDATE') ------- 'INDATE' IS THE DATE THAT IS GIVEN
*                                  TO THIS COMMAND FOR CONVERSION.
*
*
*        THIS COMMAND MAKES AVAILABLE TO THE CLIST THREE VARIABLES
*        &STADATE, &JULDATE, AND &SERDATE
*
*
*           &STADATE WILL CONTAIN THE STANDARD DATE
*           &JULDATE WILL CONTAIN THE JULIAN DATE
*           &SERDATE WILL CONTAIN THE SERIAL DATE
*
*
         EJECT
*
*        RETURN CODES
*        ............................................................
*
*        ×---------×------------------------------------------------×
*        ×   RC    ×                 MEANING                        ×
*        ×---------×------------------------------------------------×
*        ×    0    × DATE WAS VALID AND CONVERSIONS WERE MADE       ×
*        ×---------×------------------------------------------------×
*        ×    4    × INVALID DATE GIVEN TO THIS COMMAND             ×
*        ×---------×------------------------------------------------×
*        ×    8    × INVALID ACTION CODE GIVEN TO THIS COMMAND      ×
*        ×---------×------------------------------------------------×
*        ×    96   × INVALID SYNTAX OF ONE OR MORE OPERANDS         ×
*        ×---------×------------------------------------------------×
*
         EJECT
DATECONV ENTERR
         EJECT
********************************************************************
*                                                                  *
*      M A I N   L I N E   L O G I C   F O R   D A T E C O N V     *
*                                                                  *
********************************************************************
*
         LR    R11,R1              SAVE THE PARM POINTER
         LA    R4,0                R4==> 0
         MVC   STADATE,=CL6' '
         MVC   JULDATE,=CL5' '
         MVC   SERDATE,=CL5' '
         BAL   R14,DOPARSE         PERFORM THE PARSE SERVICE ROUTINE
         CLC   PROCESSW,=C'YES'    WAS PARSE SUCCESFUL ?
         BNE   INITL               IF NOT, BRANCH TO INITL
         BAL   R14,LOADFLDS        PERFORM ROUTINE TO LOAD THE PARSED
*                                    FIELDS INTO APPROP DATA FIELDS
         CLC   PROCESSW,=C'YES'    IS EVERTHING STILL HONKEY DOREY ?
         BNE   INITL               IF NOT, BRANCH TO INITL
         BAL   R14,MAJORTN         PERFORM ROUTINE TO DO THE CONVERSION
INITL    BAL   R14,INITLIST        BUILD PARMLIST FOR IKJUPDT
         BAL   R14,SETSTDAT        SET CLIST VARIABLE &STADATE
         BAL   R14,SETJUDAT        SET CLIST VARIABLE &JULDATE
         BAL   R14,SETSEDAT        SET CLIST VARIABLE &SERDATE
         B     SHUTDOWN            BRANCH TO SHUTDOWN
         EJECT
********************************************************************
*                                                                  *
*        P A R S E   I N P U T   C O M M A N D   B U F F E R       *
*                                                                  *
********************************************************************
*
DOPARSE  ST    R14,SAVEIT1          SAVE REG 14 CONTENTS IN SAVEIT1
         KKPARSE
         LTR   R15,R15              RC = 0 ? (I.E PARSE GO OK ?)
         BNZ   PARSERR              IF NOT, BRANCH TO PARSERR
         MVC   PROCESSW,=C'YES'     MOVE 'YES' TO PROCESSW
         L     R10,ANS
         USING IKJPARMD,R10
         B     EXITPARS
PARSERR  MVC   PROCESSW,=C'NO '     MOVE 'NO ' TO PROCESSW
         LA    R4,96                SET REG 4 = 96
EXITPARS L     R14,SAVEIT1
         BR    14
         EJECT
********************************************************************
*                                                                  *
*        THIS ROUTINE PROCESSES THE PARSED FIELDS, AND LOADS       *
*        THE TWO DATA FIELDS ACTCDIN AND DATEIN                    *
*                                                                  *
********************************************************************
*
LOADFLDS ST    R14,SAVEIT2             SAVE REG 14 CONTENTS IN SAVEIT2
         MVC   PROCESSW,=CL3'YES'      MOVE 'YES' TO PROCESSW
         TM    ACTCDSTR+6,X'80'        IS ACTION CODE PRESENT ?
         BNO   BADACTCD                IF NOT, BRANCH TO BADACTCD
         LH    R8,ACTCDSTR+4           R8==> LENGTH OF ACTION CODE
         CH    R8,=H'3'                IS LENGTH OF ACT CODE = 3 ?
         BNE   BADACTCD                IF NOT, BRANCH TO BADACTCD
         L     R8,ACTCDSTR             R8 ==> ADDRESS OF THE ACT CODE
         MVC   ACTCDIN,0(R8)           MOVE ACT CODE TO ACTCDIN
         CLC   ACTCDIN,=CL3'STA'       IS ACTION CODE = 'STA' ?
         BE    LOADDATE                IF SO, BRANCH TO LOADDATE
         CLC   ACTCDIN,=CL3'JUL'       IS ACTION CODE = 'JUL' ?
         BE    LOADDATE                IF SO, BRANCH TO LOADDATE
         CLC   ACTCDIN,=CL3'SER'       IS ACTION CODE = 'SER' ?
         BE    LOADDATE                IF SO, BRANCH TO LOADDATE
         B     BADACTCD                BRANCH TO BADACTCD
LOADDATE TM    DATSTRNG+6,X'80'        IS INDATE PRESENT ?
         BNO   BADINDAT                IF NOT, BRANCH TO BADINDAT
         LH    R8,DATSTRNG+4           R8==> LENGTH OF INDATE
         CH    R8,=H'5'                IS LENGTH OF INDATE = 5 ?
         BE    LOADLEN5                IF SO, BRANCH TO LOADLEN5
         CH    R8,=H'6'                IS LENGTH OF INDATE = 6 ?
         BE    LOADLEN6                IF SO, BRANCH TO LOADLEN6
         B     BADINDAT                BRANCH TO BADINDAT
LOADLEN5 CLC   ACTCDIN,=CL3'STA'       IS ACTION CODE = 'STA' ?
         BE    BADINDAT                IF SO, BRANCH TO BADINDAT
         MVC   DATEIN,=CL6' '
         L     R8,DATSTRNG             R8 ==> ADDRESS OF THE INDATE
         MVC   DATEIN(5),0(R8)
         B     EXITLOAD                BRANCH TO EXITLOAD
LOADLEN6 CLC   ACTCDIN,=CL3'STA'       IS ACTION CODE = 'STA' ?
         BNE   BADINDAT                IF NOT, BRANCH TO BADINDAT
         MVC   DATEIN,=CL6' '
         L     R8,DATSTRNG             R8 ==> ADDRESS OF THE INDATE
         MVC   DATEIN(6),0(R8)
         B     EXITLOAD                BRANCH TO EXITLOAD
BADACTCD MVC   PROCESSW,=CL3'NO '      MOVE 'NO ' TO PROCESSW
         LA    R4,8                    SET REG 4 = 8
         B     EXITLOAD                BRANCH TO EXITLOAD
BADINDAT MVC   PROCESSW,=CL3'NO '      MOVE 'NO ' TO PROCESSW
         LA    R4,4                    SET REG 4 = 4
EXITLOAD L     R14,SAVEIT2
         BR    R14
         EJECT
*
********************************************************************
*                                                                  *
*        THIS ROUTINE EXAMINES ACTCDIN, AND THEN PERFORMS THE      *
*        APPROPRIATE ROUTINE DEPENDING UPON WHETHER IT IS EQUAL    *
*        TO 'STA', 'JUL', OR 'SER'.                                *
*                                                                  *
********************************************************************
*
MAJORTN  ST    R14,SAVEIT3
         CLC   ACTCDIN,=CL3'STA'
         BE    DOSTADAT
         CLC   ACTCDIN,=CL3'JUL'
         BE    DOJULDAT
         BAL   R14,CNVSERDT
         B     EXITMAJR
DOSTADAT BAL   R14,CNVSTADT
         B     EXITMAJR
DOJULDAT BAL   R14,CNVJULDT
EXITMAJR L     R14,SAVEIT3
         BR    R14
         EJECT
*
********************************************************************
*                                                                  *
*        THE ROUTINE IS RESPONSIBLE FOR PROCESSING A STANDARD      *
*        DATE AND THEN CONVERTING IT TO JULIAN AND SERIAL DATES    *
*                                                                  *
********************************************************************
*
CNVSTADT ST    R14,SAVEIT4
         MVC   INSTDATE,DATEIN
         CALL  STOJCONV,(STOJAREA)
         CLC   STOJSW,=CL3'YES'
         BE    BADSTADT
         MVC   STADATE,DATEIN
         MVC   JULDATE,OUTJULDT
         MVC   SERDATE,OUTSERDT
         B     EXITSTA
BADSTADT LA    R4,4
EXITSTA  L     R14,SAVEIT4
         BR    R14
         EJECT
*
********************************************************************
*                                                                  *
*        THE ROUTINE IS RESPONSIBLE FOR PROCESSING A JULIAN        *
*        DATE AND THEN CONVERTING IT TO STANDARD AND SERIAL        *
*        DATES                                                     *
*                                                                  *
********************************************************************
*
CNVJULDT ST    R14,SAVEIT5
         MVC   INJULDAT,DATEIN
         CALL  JTOSCONV,(JTOSAREA)
         CLC   JTOSSW,=CL3'YES'
         BE    BADJULDT
         MVC   INSTDATE,OUTSTDAT
         CALL  STOJCONV,(STOJAREA)
         CLC   STOJSW,=CL3'YES'
         BE    BADJULDT
         MVC   STADATE,OUTSTDAT
         MVC   JULDATE,DATEIN
         MVC   SERDATE,OUTSERDT
         B     EXITJUL
BADJULDT LA    R4,4
EXITJUL  L     R14,SAVEIT5
         BR    R14
         EJECT
*
********************************************************************
*                                                                  *
*        THE ROUTINE IS RESPONSIBLE FOR PROCESSING A SERIAL        *
*        DATE AND THEN CONVERTING IT TO STANDARD AND JULIAN        *
*        DATES                                                     *
*                                                                  *
********************************************************************
*
CNVSERDT ST    R14,SAVEIT6
         MVC   INSERDAT,DATEIN
         CALL  SERLCONV,(SERLAREA)
         CLC   SERLSW,=CL3'YES'
         BNE   BADSERDT
         MVC   INSTDATE,OUTSDATE
         CALL  STOJCONV,(STOJAREA)
         CLC   STOJSW,=CL3'YES'
         BE    BADSERDT
         MVC   STADATE,INSTDATE
         MVC   JULDATE,OUTJULDT
         MVC   SERDATE,DATEIN
         B     EXITSER
BADSERDT LA    R4,4
EXITSER  L     R14,SAVEIT6
         BR    R14
         EJECT
********************************************************************
*                                                                  *
*        BUILD UPDTLIST (IKJUPDT PARM LIST)                        *
*                                                                  *
********************************************************************
*
INITLIST ST    R14,SAVEIT7
         MVC   UPDTUPT,CPPLUPT          UPT
         MVC   UPDTECT,CPPLECT          ECT
         LA    R9,ECB
         ST    R9,UPDTECB               ECB
         LA    R8,UPLIST
         ST    R8,UPDTUPL               UPLIST
         L     R14,SAVEIT7
         BR    14
         EJECT
********************************************************************
*                                                                  *
*        BUILD UPDATE PARM LIST FOR &STADATE AND CALL IKJUPDT      *
*                                                                  *
********************************************************************
*
SETSTDAT ST    R14,SAVEIT8
         LA    R9,=C'STADATE'      R9 ==> ADDRESS OF VAR NAME
         ST    R9,LOCPTR           STORE ADDR OF VAR NAME IN LOCPTR
         MVC   LOCLEN,=F'7'        LOCLEN = LENGTH OF VAR NAME
         LA    R5,STADATE          R5 ==> ADDRESS OF VARIABLE
         ST    R5,VALPTR           STORE ADDRESS OF VARIABLE IN VALPTR
         MVC   VALLEN,=F'6'        VALLEN = LENGTH OF DATA FIELD
         LA    R1,UPDTLIST         R1 ==> IKJUPDT PARM LIST
         CALL  IKJUPDT             DO THE UPDATE
         L     R14,SAVEIT8
         BR    14
         EJECT
********************************************************************
*                                                                  *
*        BUILD UPDATE PARM LIST FOR &JULDATE AND CALL IKJUPDT      *
*                                                                  *
********************************************************************
*
SETJUDAT ST    R14,SAVEIT9
         LA    R9,=C'JULDATE'      R9 ==> ADDRESS OF VAR NAME
         ST    R9,LOCPTR           STORE ADDR OF VAR NAME IN LOCPTR
         MVC   LOCLEN,=F'7'        LOCLEN = LENGTH OF VAR NAME
         LA    R5,JULDATE          R5 ==> ADDRESS OF VARIABLE
         ST    R5,VALPTR           STORE ADDRESS OF VARIABLE IN VALPTR
         MVC   VALLEN,=F'5'        VALLEN = LENGTH OF DATA FIELD
         LA    R1,UPDTLIST         R1 ==> IKJUPDT PARM LIST
         CALL  IKJUPDT             DO THE UPDATE
         L     R14,SAVEIT9
         BR    14
         EJECT
********************************************************************
*                                                                  *
*        BUILD UPDATE PARM LIST FOR &SERDATE AND CALL IKJUPDT      *
*                                                                  *
********************************************************************
*
SETSEDAT ST    R14,SAVEIT10
         LA    R9,=C'SERDATE'      R9 ==> ADDRESS OF VAR NAME
         ST    R9,LOCPTR           STORE ADDR OF VAR NAME IN LOCPTR
         MVC   LOCLEN,=F'7'        LOCLEN = LENGTH OF VAR NAME
         LA    R5,SERDATE          R5 ==> ADDRESS OF VARIABLE
         ST    R5,VALPTR           STORE ADDRESS OF VARIABLE IN VALPTR
         MVC   VALLEN,=F'5'        VALLEN = LENGTH OF DATA FIELD
         LA    R1,UPDTLIST         R1 ==> IKJUPDT PARM LIST
         CALL  IKJUPDT             DO THE UPDATE
         L     R14,SAVEIT10
         BR    14
         EJECT
********************************************************************
*                                                                  *
*        E N D   O F   J O B   R O U T I N E                       *
*                                                                  *
********************************************************************
*
SHUTDOWN LR   R15,R4
         LEAVER
         EJECT
         SPACE 3
********************************************************************
*                                                                  *
*        D A T A   A R E A   C O N S T A N T S                     *
*                                                                  *
********************************************************************
*
STADATE  DS    CL6
JULDATE  DS    CL5
SERDATE  DS    CL5
         EJECT
         SPACE 3
********************************************************************
*                                                                  *
*        S T O J C O N V   L I N K A G E   A R E A                 *
*                                                                  *
********************************************************************
*
STOJAREA DS    0CL27
         DS    CL8
INSTDATE DS    CL6
OUTJULDT DS    CL5
OUTSERDT DS    CL5
STOJSW   DS    CL3
         EJECT
         SPACE 3
********************************************************************
*                                                                  *
*        J T O S C O N V   L I N K A G E   A R E A                 *
*                                                                  *
********************************************************************
*
JTOSAREA DS    0CL22
         DS    CL8
OUTSTDAT DS    CL6
INJULDAT DS    CL5
JTOSSW   DS    CL3
         EJECT
         SPACE 3
********************************************************************
*                                                                  *
*        S E R L C O N V   L I N K A G E   A R E A                 *
*                                                                  *
********************************************************************
*
SERLAREA DS    0CL22
         DS    CL8
INSERDAT DS    CL5
OUTSDATE DS    CL6
SERLSW   DS    CL3
         LTORG
         EJECT
         SPACE 3
********************************************************************
*                                                                  *
*        D Y N A M I C   W O R K   A R E A                         *
*                                                                  *
********************************************************************
*
WORKAREA DSECT
SAVEAREA DS    18F
ANS      DS    F
ECB      DS    F
ACTCDIN  DS    CL3
DATEIN   DS    CL6
PPLA     DS    7F
PROCESSW DS    CL3
SAVEIT1  DS    F
SAVEIT2  DS    F
SAVEIT3  DS    F
SAVEIT4  DS    F
SAVEIT5  DS    F
SAVEIT6  DS    F
SAVEIT7  DS    F
SAVEIT8  DS    F
SAVEIT9  DS    F
SAVEIT10 DS    F
*
UPDTLIST DS    0F
UPDTUPT  DS    F
UPDTECT  DS    F
UPDTECB  DS    F
UPDTUPL  DS    F
*
UPLIST   DS    0F
LOCPTR   DS    AL4
LOCLEN   DS    FL4
VALPTR   DS    AL4
VALLEN   DS    FL4
*
WORKLEN  EQU   *-WORKAREA
DATECONV CSECT
         EJECT
********************************************************************
*                                                                  *
*                   P A R S E   M A C R O S                        *
*                                                                  *
********************************************************************
*
PCL      IKJPARM
ACTCODE  IKJKEYWD
         IKJNAME 'ACTCODE',SUBFLD=ACTCD
INDATE   IKJKEYWD
         IKJNAME 'INDATE',SUBFLD=INDAT
ACTCD    IKJSUBF
ACTCDSTR IKJIDENT 'ACT CODE',MAXLNTH=3,FIRST=ALPHA
INDAT    IKJSUBF
DATSTRNG IKJIDENT 'IN DATE',MAXLNTH=6,FIRST=NUMERIC,CHAR
         IKJENDP
         END
