* PROCESS MACRO,MAR(2,72),OPT(TIME);
 /*OMFPST2: SUMMARIZE THE 30 SECOND OMF1 RECORD                      */
 OMFPST2: PROC OPTIONS(MAIN REENTRANT);
 /********************************************************************/
 /* PROCEDURE: OMFPST2                                               */
 /* FUNCTION:                                                        */
 /*            POST PROCESSOR FOR OMF1 RECORD (30 SECOND SUMMARY)    */
 /*            WRITES A ONE LINE PRINTABLE SUMMARY FOR EACH RECORD   */
 /* ATTRIBUTES: NONE                                                 */
 /* EXTERNAL: NONE                                                   */
 /* INPUT:                                                           */
 /*     FILE SYSIN CONTAINS PARAMETERS IN OURMF FORMAT               */
 /*           START( YYDDD HHMMSS )  /* STARTING DATE AND TIME       */
 /*           END  ( YYCCC HHMMSS )  /* ENDING DATE AND TIME         */
 /*           HOURS( HHMMSS HHMMSS)  /* APPLICABLE HOURS DURING      */
 /*                                  /* THIS TIME PERIOD             */
 /*           OUTPUT( DDNAME)        /* OUTPUT FILE NAME             */
 /* DEFAULTS: SUMMARIZE ALL RECORDS, OUTPUT(SYSPRINT)                */
 /*    IF OUTPUT GOES TO SYSPRINT EACH PAGE WILL BE HEADED. IF IT    */
 /* IT GOES TO ANOTHER FILE IT IS ASSUMED THE FILE WILL BE USED      */
 /* AS INPUT TO A PACAKAGED STATISTICAL ANALYSIS ROUTINE OR TO       */
 /* APL, AND ONLY THE DATA WILL BE WRITTEN.                          */
 /* THE OUTPUT DATASET HAS LRECL=132, BLKSIZE=6336                   */
 /*                                                                  */
 /* THE OURMF OUTPUT DATA IS READ FROM DDNAME 'IN'                   */
 /*                                                                  */
 /* AUTHOR:  HOWARD GILBERT                                          */
 /*          175 WHITNEY AVE                                         */
 /*          NEW HAVEN, CT 06520                                     */
 /*          203 432-4080                                            */
 /* DISTIRBUTION                                                     */
 /*     THIS PROGRAM IS NOT RESTRICTED IN ANY WAY AND MAY BE         */
 /* MODIFIED OR DISTRIBUTED IN ANY MANNER AND FOR ANY PURPOSE.       */
 /* IT IS SUGGESTED THAT OTHER OURMF POST PROCESSORS CONSIDER        */
 /* COMPATIBLE SYNTAX AND PARAMETER SCANNING.                        */
 /*                                                                  */
 /* VERSION: JUNE 7, 1977                                            */
 /********************************************************************/
 % PAGE;
 /* THE FOLLOWING STRUCTURE WILL CONTAIN INFORMATION DERIVED FROM    */
 /* PARSING THE SYSIN PARAMETER CARDS. THE INITIAL VALUES ARE        */
 /* THE DEFAULTS FOR EACH PARAMETER                                  */
 DCL 1 OPTIONS,
         5 STARTDATE FIXED DEC(7) INIT(0),
         5 STARTHOUR FIXED DEC(7) INIT(0),
         5 ENDDATE FIXED DEC(7) INIT(99365),
         5 ENDHOUR FIXED DEC(7) INIT(240000),
         5 EARLIEST FIXED DEC(7) INIT(0),
         5 LATEST FIXED DEC(7) INIT(240000),
         5 OUTNAME CHAR(8) INIT('SYSPRINT');
 % SKIP(2);
 DCL 1 COUNTS,     /* COUNTERS FOR PSW STATES */
         5 CWAIT FIXED BIN,
         5 CSVC FIXED BIN,
         5 CSRB FIXED BIN,
         5 CUSER FIXED BIN,
         5 COTHER FIXED BIN;
 %PAGE;
 /* NOW THE THREE FORMAL INCLUDE STATEMENTS FOR THE COMMON           */
 /* POST-PROCESSOR DEFINITIONS.                                      */
 /*   % INCLUDE STATGLBL;                                            */
 /*          TO DEFINE THE DIMENSIONS OF VARIOUS ARRAYS IN THE       */
 /*          OURMF RECORDS.                                          */
 /*   % INCLUDE YCCSTART;                                            */
 /*          TO SET THE DEFAULT RANGE AND PREPROCESSOR VARIABLE      */
 /*          DEFINITIONS REQUIRED BY SOME CONVERTED PLS MACROS.      */
 /*          OMFPST2 DOES NOT USE CONVERTED PLS, BUT IT IS A         */
 /*          GOOD HABIT TO INCLUDE YCCSTART ANYWAY.                  */
 /*   % INCLUDE OURMFDEF;                                            */
 /*          TO DEFINE THE THREE OURMF RECORD TYPES.                 */
 % INCLUDE STATGLBL;
 % INCLUDE YCCSTART;
 % INCLUDE OURMFDEF;
 %PAGE;
 /* NOW FOR SOME LOCALLY DEFINED VARIABLES. 'MAXVALS' AND            */
 /* 'WORDS' ARE USED TO VALIDITY CHECK THE INPUT PARAMETERS          */
 /* AND GENERATE ERROR MESSAGES.                                     */
 DCL MAXVALS(4) FIXED BIN INIT(2,2,2,1);
 DCL WORDS(4) CHAR(8) INIT('START','END','HOURS','OURPUT');
 DCL IN INPUT FILE RECORD ENV(VB TOTAL);
 DCL OUT OUTPUT FILE STREAM ENV(FB RECSIZE(132) BLKSIZE(6336));
 DCL OUTPUT FILE VARIABLE;
 %PAGE;
 CLOSE FILE(SYSPRINT);
 OPEN FILE(SYSPRINT) LINESIZE(132);
 %SKIP(2);
 /* THIS IS THE PARAMETER INPUT PARSE BLOCK. IT USES SUBROUTINES     */
 /* INCLUDED FROM THE 'CNTLCRD' MEMBER. MOST POST PROCESSORS WILL    */
 /* PROBABLY REQUIRE THE START, END, AND HOURS KEYWORDS. ADDITIONAL  */
 /* KEYWORDS CAN BE EASILY ADDED TO THE END OF THE BLOCK REPLACING   */
 /* THE 'OUTPUT' KEYWORD.                                            */
 ON UNDEFINEDFILE(SYSIN)GO TO PROCESS;
 ON ENDFILE(SYSIN) GO TO PROCESS;
 ON CONVERSION CALL ERR('INVALID NUMBER IN '××WORDS(I));
 KEYWDLOOP: CALL KEYWORD;
 I=INDOX('START END HOURS OUTPUT',KEY);
 IF NVALS>MAXVALS(I) THEN CALL ERR('TOO MANY VALUES FOR '××WORDS(I));
 SELECT (I);
    WHEN (1)
         DO;
         STARTDATE=VAL(1);
         IF NVALS=2 THEN STARTHOUR=VAL(2);
         END;
    WHEN (2)
         DO;
         ENDDATE=VAL(1);
         IF NVALS=2 THEN ENDHOUR=VAL(2);
         END;
    WHEN (3)
         DO;
         EARLIEST=VAL(1);
         IF NVALS=2 THEN LATEST=VAL(2);
         END;
    WHEN (4)
         DO;
         IF LENGTH(VAL(1))>8 THEN
              CALL ERR('INVALID OUTPUT DDNAME');
         OUTNAME=VAL(1);
         END;
    END;
 GO TO KEYWDLOOP;
 %PAGE;
 PROCESS:
 CLOSE FILE(SYSIN);
 ON UNDEFINEDFILE(OUT)
    BEGIN;
    PUT EDIT('DDCARD NOT PROVIDED OR INVALID FOR ',
      OUTNAME)(COL(1),A,A);
    STOP;
    END;
 IF OUTNAME='SYSPRINT' THEN
    DO;
    ON ENDPAGE(SYSPRINT) PUT EDIT(
 ' DATE   TIME   UIC CPU ASM PTR  AFC POOL COMM FIXD SQA  CMFX WT  SVC S
 RB USR OTH MP RU MP RU MP RU MP RU MP RU')
    (PAGE,A);
    SIGNAL ENDPAGE(SYSPRINT);
    OUTPUT=SYSPRINT;
    END;
 ELSE
    DO;
    OUTPUT=OUT;
    OPEN FILE(OUT) TITLE(OUTNAME);
    END;
 % SKIP(2);
 /* THE NEXT 4 STATEMENTS TO AND INCLUDING THE COMPLEX IF TEST       */
 /* ARE PROBABLY FAIRLY STANDARD FOR A POST PROCESSOR. ONE READS     */
 /* IN THE NEXT RECORD AND DETERMINES IF IT IS THE CORRECT TYPE,     */
 /* AND IS IN THE TIME RANGE SELECTED BY THE USER                    */
 ON ENDFILE(IN) GO TO FINN;
 PRLOOP:
 READ FILE(IN) SET(OMFRECPTR);
 IF OMF1ID^='OMF1' THEN GO TO PRLOOP;
 IF OMF1DATE>ENDDATE ×
    (OMF1DATE=ENDDATE & OMF1TIME>ENDHOUR)
    THEN GO TO FINN;
 IF OMF1DATE<STARTDATE ×
    (OMF1DATE=STARTDATE & OMF1TIME < STARTHOUR) ×
    OMF1TIME<EARLIEST ×
    OMF1TIME>LATEST
         THEN GO TO PRLOOP;
 /* FROM HERE ON YOU ARE ON YOUR OWN. GOOD LUCK.                     */
 COUNTS=0;
    DO I=1 TO SRBINTVL;
         SELECT;
              WHEN (FLAGS(I)&WAIT) CWAIT=CWAIT+1;
              WHEN (FLAGS(I)&SRB)  CSRB=CSRB+1;
              WHEN (FLAGS(I)&SVCMD) CSVC=CSVC+1;
              WHEN ((FLAGS(I)&'10000001'B)='10000001'B)
                 CUSER=CUSER+1;
              OTHERWISE COTHER=COTHER+1;
         END;
    END;
 PUT FILE(OUTPUT) EDIT( OMF1DATE,OMF1TIME,
    UICA,CPUA/00016,ASMQ,PTR,
    AFC,POOL,CFMCT,CNTFX,SQAFX,COMFX,
    CWAIT,CSRB,CSVC,CUSER,COTHER,
    (MIN(99,MPLT(I)),RUA(I) DO I=1 TO 5))
    (COL(1), P'99999',X(1),P'99.99.99', 4 F(4), 6 F(5),
     5 F(4), 10 F(3));
 GO TO PRLOOP;
 FINN: RETURN;
 %INCLUDE CNTLCRD;
 END;
