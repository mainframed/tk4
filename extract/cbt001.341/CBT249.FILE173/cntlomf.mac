* PROCESS OPT(TIME),INCLUDE;
 CNTLOMF:PROC(OPTIONS) OPTIONS(REENTRANT) REORDER;
 /* PROCEDURE: CNTLCRD                                               */
 /* FUNCTION: GENERAL CONTROL CARD PARSER                            */
 /* ATTRIBUTES: REENTRANT                                            */
 /* EXTERNAL: READS FROM DDNAME 'SYSIN'.                             */
 /* VERSION: JUNE 1, 1977                                            */
 /* AUTHOR:    HOWARD GILBERT                                        */
 /*            YALE COMPUTER CENTER                                  */
 /*            175 WHITNEY AVE                                       */
 /*            NEW HAVEN, CT 06520                                   */
 /*            203 432-4080                                          */
 /* DISTRIBUTION:                                                    */
 /*      THIS PROGRAM MAY BE FREELY REPRODUCED AND USED FOR ANY      */
 /* PURPOSE. IT IS SUGGESTED THAT USERS OF OURMF WHO NEED SOME       */
 /* KIND OF CONTROL INFORMATION IN A POST PROCESSOR CONSIDER         */
 /* USING SOME MODIFIED VERSION OF THIS PROGRAM FOR THEIR            */
 /* CONTROL CARD SCAN.                                               */
 % SKIP(5);
    %PAGE;
    DCL 1 OPTIONS ,
         2 INTERVAL FIXED BIN ,
         2 SMF BIT ALIGNED ,
         2 CPUSUM BIT ALIGNED ,
         2 DISKSPACE FIXED BIN ,
         2 TAPEDSN CHAR(44) VAR ,
         2 TAPEUNIT CHAR(6) VAR ;
 DCL VALWD CHAR(8);
     %PAGE;
  ON ENDFILE(SYSIN) GO TO FINN;
 CCNXT: CALL KEYWORD;
  IF NVALS>1 THEN CALL ERR('MORE THAN ONE ITEM IN PARENTHESES');
  VALWD=VAL(1);
 I=INDOX('INTERVAL RECORD CPU TDSN TUNIT DISKSIZE',KEY);
 SELECT(I);
    WHEN (1)
         DO;
         IF SUBSTR(VAL(1),LENGTH(VAL(1)),1)='M' THEN
            VAL(1)=SUBSTR(VAL(1),1,LENGTH(VAL(1))-1);
         ON CONVERSION CALL ERR('INVALID INTERVAL VALUE');
         INTERVAL=VAL(1);
         ON CONVERSION SYSTEM;
         END;
    WHEN (2)
         DO;
         J=INDOX('DATASET SMF',VALWD);
         IF J=2 THEN SMF='1'B;
         END;
    WHEN (3)
         DO;
         J=INDOX('FULL SUMMARY',VALWD);
         IF J=2 THEN CPUSUM='1'B;
         END;
    WHEN (4)
         TAPEDSN=VAL(1);
    WHEN (5)
         DO;
         IF LENGTH(VAL(1))>6 THEN
         CALL ERR('INVALID LENGTH IN TAPEUNIT');
         TAPEUNIT=VAL(1);
         END;
    WHEN (6)
         DO;
         ON CONVERSION CALL ERR('INVALID NUMBER IN DISKSIZE');
         DISKSPACE=VAL(1);
         ON CONVERSION SYSTEM;
         END;
  END;
 GO TO CCNXT;
  FINN:
  CLOSE FILE(SYSIN), FILE(SYSPRINT);
 RETURN;
 % INCLUDE CNTLCRD;
 END;
