*/********************************************************************/
 /* IRAWAMT - PLI MAPPING MACRO FOR THE                              */
 /*     WORKLOAD ACTIVITY MEASUREMENT TABLE (WAMT)                   */
 /*                                                                  */
 /* METHOD OF ACCESS:                                                */
 /* THE WAMT MAY BE IN CORE OR IN THE 'OMF2' RECORD. TO ALLOW        */
 /* USE OF THIS STRUCTURE IN BOTH CASES, NO LEVEL 1 STRUCTURE        */
 /* NAME IS INCLUDED IN THIS MEMBER. DECLARE THE STRUCTURE AND       */
 /* IF YOU ARE MAPPING THE OMF2 RECORD INCLUDE ALSO THE ID AND       */
 /* TIMESTAMP FIELDS. THEN INCLUDE THIS MEMBER TO COMPLETE THE       */
 /* DECLARATION.                                                     */
 /*       DCL 1 WAMT BASED(WAMTPTR),                                 */
 /* %INCLUDE IRAWAMT                                                 */
 /* DCL WAMTPTR PTR BASED(STATPTR);                                  */
 /* CALL LOADPTR('STDEWAMT',STATPTR);                                */
 /*                                                                  */
 /* OR                                                               */
 /*                                                                  */
 /*  DCL 1 OMF1REC BASED(OMFRECPTR),                                 */
 /*          2 OMF2ID CHAR(4),                                       */
 /*          2 OMF2DATE FIXED DEC(7),                                */
 /*          2 OMF2HOUR FIXED DEC(7),                                */
 /*          2 WAMT,                                                 */
 /* %INCLUDE IRAWAMT;                                                */
*/********************************************************************/
         5 WAR PTR,               /* ADDR OF ROUTINE                 */
         5 SIZ FIXED BIN(31),     /* SIZE OF WAMT IN BYTES           */
         5 STARTIME,              /* INTERVAL START TIME             */
               9 (TMA,TMA2)       /*    IN 64 BIT TOD                */
              FIXED BIN(31),      /*    CLOCK FORMAT                 */
         5 STOPTIME,              /* INTERVAL END TIME               */
               9 (TOC,TOC2)       /*    IN 64 BIT TOD                */
              FIXED BIN(31),      /*    CLOCK FORMAT                 */
         5 ASD FIXED BIN(31),     /* MF1 ASID                        */
         5 TCB PTR,               /* MF1 TCB                         */
         5 IPS CHAR(2),           /* IPS SUFFIX                      */
         5 (CPD,                  /* COUNT OF PGP'S                  */
            SPD,                  /* LENGTH OF ONE WAMP              */
            HPG) FIXED BIN,       /* HIGHEST PG NUMBER               */
         5 (IPC,                  /* CPU COEFFICIENT                 */
            IPI,                  /* IO  COEFFICIENT                 */
            IPM) CHAR(4),         /* MSO COEFFICIENT                 */
         5 NDX(0:N REFER(HPG))    /* OFFSET TO EACH WAMP             */
              FIXED BIN(31);      /*   1 PER PGP                     */
 DCL 1 WAMP BASED(WAMPNEXT),      /* DATA FOR PGP                    */
         5 (TRN,                  /* TRANSACTIONS ENDED              */
            TAT,                  /* TRANS ACTIVE TIME               */
            SRV,                  /* TOTAL SERVICE                   */
            TET,                  /* TRANS ELAPSED TIME              */
            NWL,                  /* NORMALIZED WKLOAD               */
            CPU,                  /* CPU SERVICE                     */
            IOC,                  /* IO SERVICE                      */
            MSO,                  /* MSO SERVICE                     */
            TRR,                  /* TOTAL RESIDENT TIME             */
            SWC) FIXED BIN(31),   /* SWAP COUNT                      */
         5 (OBJ,                  /* OBJECTIVE NUMBER                */
            DMN) BIT(8) ALIGNED,  /* DOMAIN NUMBER                   */
         5 FILL CHAR(2);          /* RESERVED                        */
