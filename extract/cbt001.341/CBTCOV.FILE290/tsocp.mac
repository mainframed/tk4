TSCP     TITLE     'PL/I INTERFACE TO EXECUTE A TSO CP'
         EQUREGS
TSOCP    PRIME     BR=11,SA=SAVE
*********
*   PL/I CALLING SEQUENCE :-
*        RC = TSOCP(CBUFPTR,CC);
*   WHERE
*        RC        - FIXED BIN(15,0)
*                  - SUPPLIES THE RETURN CODE FROM BLDL
*        CC        - CHAR(*) VARYING
*                  - THE RETURN/COMPLETION CODE FROM THE CP
*        CBUFPTR   - 1 CPPLX,
*                      2 CBUFPTR   POINTER,
*                      2 UPTPTR    POINTER,
*                      2 PSCBPTR   POINTER,
*                      2 ECTPTR    POINTER,
*                  - INPUT PARAMETERS. IT IS ASSUMED THAT
*                    CBUFPTR POINTS TO A VALID CP BUFFER.
*                    SEE OS/VS2 GUIDE TO WRITING COMMAND
*                    PROCESSORS FOR A DESCRIPTION.
*********
         LM        R2,R4,0(R1)         A(CBUF,CC,RC)
         LR        R6,R2               SAVE A(CPPL)
         L         R3,0(R3)            POINT TO CC
         L         R2,0(R2)            POINT TO CBUF
         L         R5,12(R6)           A(ECT)
         LH        R7,2(R2)            LENGTH OF COMMAND NAME
         BCTR      R7,R0               SUB 1 FOR EXECUTE
         LTR       R7,R7               IS LENGTH MINUS
         BM        ERR4                YES, WE GOT A JOKER IN THE CROWD
         MVI       LST,C' '            BLANK NAME FIELD
         MVC       LST+1(7),LST
         EX        R7,MNAME            MOVE NAME
         BLDL      0,LIST              ISSUE BLDL MACRO
         LTR       R15,R15             OK?
         BNZ       ERR806              NO, GO SETUP RC
         MVC       ONAME,12(R5)        SAVE NAME OF THIS COMMAND
         MVI       12(R5),C' '         CLEAR OLD
         MVC       13(7,R5),12(R5)     NAME FIELD
         EX        R7,ENAME            PUT IN NAME OF NEW COMMAND
         LA        R7,0
         IC        R7,LST+13           GET LENGTH USER DATA
         N         R7,M1               GET RID OF BITS 0,1,2
         SLL       R7,1                X2=LEN(USER DATA) IN BYTES
         LA        R8,24               OFFSET OF APF STUFF
         LA        R10,LST+12(R7)      A(END OF ENTRY)
         CR        R7,R8               IS ENTRY NORMAL LENGTH
         BH        CKAUTH              NO, GO CHECK AUTH
         BCTR      R10,R0              YES, SUB 1 MORE
CKAUTH   CLI       1(R10),1            IS APF ON
         BNE       NOAUTH              NO, FORGET IT
*        THE PROGRAM TO BE ATTACHED IS AUTHORIZED.
*        WE MUST AUTHORIZE OURSELF BEFORE ATTACHING IT.
*        A SAMPLE SVC TO DO THIS IS SHOWN IN MEMBER AUTHSVC.
*        IF YOU WISH TO ATTACH AUTHORIZED PROGRAMS, EITHER
*        INSTALL THE SAMPLE SVC AND ACTIVATE THE FOLLOWING
*        INSTRUCTIONS OR INSERT YOUR OWN CODE AT THIS POINT
*        TO ACCOMPLISH THIS.
*        LA        R0,1                AUTHORIZE
*        LA        R1,2121             THE
*        SVC       243                 PROGRAM
NOAUTH   LR        R1,R6               A(CPPL)
         XC        ECB(4),ECB          CLEAR THE ECB
         ATTACH    DE=LST,ECB=ECB,SZERO=NO ATTACH THE CP
         LR        R9,R1               SAVE A(TCB)
         ST        R1,TCBLOC             "    "
         WAIT      ECB=ECB             WAIT FOR IT TO FINISH
         MVC       TCBCMP(4),16(R9)    SAVE COMPLETION CODE
         DETACH    TCBLOC              GET RID OF TCB
*        AUTHORIZATION NO LONGER REQUIRED. TURN IT OFF.
*        LA        R0,0                RESET
*        LA        R1,2121             AUTHORIZATION FOR
*        SVC       243                 JOB
         MVC       12(8,R5),ONAME      RESTORE NAME OF COMMAND
         CLI       TCBCMP,0            DID PROG ABEND?
         BE        NRC                 NO, IT WAS A NORMAL RETURN
         UNPK      TEMP(5),TCBCMP+1(3) UNPACK SYSTEM CC
         NC        TEMP(3),NOZ         GET RID OF ZONES
         TR        TEMP(3),TRTAB       CONVERT TO PRINTABLE
         CLC       TEMP(3),ZEROS       WAS SYSTEM CC = 0
         BE        USER                YES, MUST HAVE BEEN USER ABEND
         MVI       2(R3),C'S'          MAKE IT A SYSTEM ABEND
         MVC       3(3,R3),TEMP        MOVE IN CC
         MVI       0(R3),0             SET
         MVI       1(R3),4             LENGTH
         B         DONE                LEAVE
USER     LH        R8,TCBCMP+2         GET USER CODE
         CVD       R8,TEMP             MAKE IT DEC
         OI        TEMP+7,X'0F'        FIX UP SIGN
         MVI       2(R3),C'U'          SET USER ABEND
         UNPK      3(4,R3),TEMP        SET USER CC
         MVI       0(R3),0             SET
         MVI       1(R3),5             LENGTH
         B         DONE                LEAVE
NRC      LH        R8,TCBCMP+2         GET RETURN CODE
         CVD       R8,TEMP             MAKE IT DEC
         OI        TEMP+7,X'0F'        FIX UP SIGN
         UNPK      2(4,R3),TEMP        SET USER CC
         MVI       0(R3),0             SET
         MVI       1(R3),4             LENGTH
DONE     LA        R15,0               SET ALL OKAY
END      STH       R15,0(R4)           SAVE RETURN CODE
         TERME     RC=0                LEAVE
ERR4     LA        R15,16              SET RC
         B         END                 LEAVE
ERR806   AR        R15,R0              GET RETURN CODE FROM BLDL
         B         END                 LEAVE
MNAME    MVC       LST(*-*),4(R2)      EXECUTED ABOVE
ENAME    MVC       12(*-*,R5),4(R2)    EXECUTED ABOVE
         DS        0D
TEMP     DC        XL8'00'
TMP      DC        XL8'00'
ONAME    DC        CL8' '
TCBCMP   DC        F'0'
ECB      DC        F'0'
TCBLOC   DC        F'0'
SAVE     DC        18F'0'
TRTAB    DC        CL16'0123456789ABCDEF'
ZEROS    DC        CL4'0000'
NOZ      DC        XL4'0F0F0F0F'
M1       DC        XL4'0000001F'
LIST     DC        XL4'00010064'
LST      DC        XL100'00'
         END       TSOCP
