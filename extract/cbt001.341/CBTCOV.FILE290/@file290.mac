//***FILE 290 is from B.P. Cassidy of the University of New         *
//*           Brunswick in Canada, and contains PDUMP, a general    *
//*           purpose print utility for datasets.  PDUMP also       *
//*           has a TSO interface, which is packaged together       *
//*           with this file.                                       *
//*                                                                 *
//*      This file is from File 42 of the SHARE PL/1 Tape.          *
//*                                                                 *
//*      Summary:   PDUMP is a PL/I and BAL utility program to      *
//*      display a dataset at a terminal in dump format.  Source,   *
//*      sample JCL, documentation are provided.  This program      *
//*      requires access to supervisor state.  Also included is     *
//*      a TSO to 3270 interface.                                   *
//*                                                                 *
//*  -------------------------------------------------------------  *
//*                                                                 *
//*                    UNIVERSITY OF NEW BRUNSWICK                  *
//*                  COMPUTING CENTRE LIBRARY PROGRAM               *
//*                                                                 *
//*    AUTHOR:  B.P. CASSIDY          PROG. NAME:  PDUMP            *
//*    DEPT.:   COMPUTING CENTRE      PROG. LANG:  PL/I (OPT.)      *
//*    DATE:    JANUARY 1982          PROG. TYPE:  MAIN             *
//*                                                                 *
//*    PURPOSE:   PDUMP IS A GENERAL PURPOSE PRINT UTILITY.  THE    *
//*    INPUT DATA SET TO BE LISTED MAY BE SEQUENTIAL, INDEXED,      *
//*    REGIONAL OR VSAM (KEY SEQUENCED, ENTRY SEQUENCED OR RELATIVE *
//*    RECORD).  THERE ARE NO RESTRICTIONS ON RECORD FORMAT (RECFM) *
//*    OR RECORD LENGTH.  THE PROGRAM IS INVOKED USING THE          *
//*    PROCEDURE PDUMP.                                             *
//*                                                                 *
//*    USAGE:     THE FOLLOWING JOB CONTROL LANGUAGE IS USED TO     *
//*    EXECUTE THE UTILITY.  SYMBOLIC PARAMETER OP IS OPTIONAL.     *
//*                                                                 *
//*              //PDUMP JOB ACCOUNTING....                         *
//*              //    EXEC PDUMP,OP='OPTIONS LIST'                 *
//*              //SYSIN DD JCL DESCRIBING INPUT DATA SET           *
//*                                                                 *
//*    THE KEYWORDS IN THE FOLLOWING SUMMARY OF AVAILABLE OPTIONS   *
//*    ARE NON-POSITIONAL, I.E. THEY MAY OCCUR IN ANY ORDER WITHIN  *
//*    THE OPTIONS LIST AND SHOULD BE SEPARATED BY COMMAS.          *
//*                                                                 *
//*  -------------------------------------------------------------  *
//*                                                                 *
//*     THIS PACKAGE IS A JOINT EFFORT OF BRIAN CASSIDY AND         *
//*     BRIAN LESSER OF THE UNIVERSITY OF NEW BRUNSWICK.  DIRECT    *
//*     ENQUIRIES TO EITHER INDIVIDUAL AT THE FOLLOWING ADDRESS:    *
//*                                                                 *
//*     COMPUTING CENTRE                                            *
//*     UNIVERSITY OF NEW BRUNSWICK                                 *
//*     BOX 4400 / FREDERICTON, N.B.                                *
//*     CANADA  E3B 5A3                     PHONE (506) 453-4573    *
//*                                                                 *
//*  Contents of this file is as follows:                           *
//*                                                                 *
//*      MEMBER   DESCRIPTION                                       *
//*      ------   -------------------------------                   *
//*      ATTR     SET 3270 ATTRIBUTE BYTE                           *
//*      BATCH    MAIN PL/1 PROGRAM FOR BATCH VERSION               *
//*      BUFADD   ENCODE/DECODE 3270 CURSOR ADDRESS                 *
//*      CPPL     FINDS CPPL ADDR AND RETURNS ADDR OF               *
//*               CBUF,UPT,PSCB AND ECT                             *
//*      DSCBF1   ASSEMBLER ROUTINE TO READ A FORMAT1 DSCB          *
//*      EQUREGS  MACRO REQUIRED FOR ASSEMBLER ROUTINES             *
//*      FCBLOC   ASSEMBLER ROUTINE TO FIND THE FILE CONTROL        *
//*               BLOCK (FCB) FOR A GIVEN FILE                      *
//*      FULLSCR  TSO/VTAM ROUTINE TO SWITCH FULLSCR MODE (3270)    *
//*      HELP     HELP INFO FOR TSO HELP DATASET                    *
//*      HEXOUT   ASSEMBLER ROUTINE TO CONVERT A GIVEN CHARACTER    *
//*               STRING TO PRINTABLE HEX CHARACTERS                *
//*      INSTALL  SAMPLE INSTALLATION JCL                           *
//*      IO3270   3270 FULLSCREEN SUPPORT PACKAGE.  THIS ROUTINE    *
//*               CAN BE USED WITH BOTH TCAM AND VTAM BUT WHEN      *
//*               RUNNING UNDER TSO/TCAM THE TCAM FULLSCREEN MODS   *
//*               MUST BE INSTALLED.  IN ORDER FOR THE PAGING       *
//*               FEATURE TO BE ACTIVE, A TEMPORARY FILE MUST BE    *
//*               ALLOCATED TO FILE SYSPAGE BEFORE IO3270 IS        *
//*               INVOKED FOR THE FIRST TIME.                       *
//*               FOR MORE INFORMATION SEE MEMBER IODOC.            *
//*      PDUMP    CATALOGUED PROCEDURE FOR BATCH VERSION            *
//*      PDUMVS   MAIN PL/1 PROGRAM FOR TSO VERSION (COMMAND        *
//*               PROCESSOR) WHEN COMPILING THIS MODULE BE SURE     *
//*               TO INCLUDE THE OPTION INT.  ALSO THE TASKING      *
//*               LIBRARY IS REQUIRED DURING LINK EDIT.  THE        *
//*               NORMAL MODE OF OPERATION IS AS A TSO COMMAND      *
//*               PROCESSOR BUT IT IS ALSO EXECUTABLE IN A BATCH    *
//*               ENVIRONMENT.                                      *
//*      PRIME    MACRO REQUIRED FOR ASSEMBLER ROUTINES             *
//*      PROFILE  ASSEMBLER ROUTINE TO ISSUE GTSIZE MACRO TO        *
//*               DETERMINE TERMINAL CHARACTERISTICS. ALSO          *
//*               RETURNS THE OPERATING MODE (BATCH OR TSO).        *
//*      RDDSCB   ASSEMBLER ROUTINE TO READ A DSCB BY CCHHR         *
//*      RESTORE  SAMPLE JCL TO RESTORE DISTRIBUTION TAPE           *
//*      SCANNER  GENERAL PURPOSE COMMAND SCANNER.  IT IS USED      *
//*               EXTENSIVELY BY PDUMP TO DECODE USER COMMANDS      *
//*               AND BY THE DYNAMIC ALLOCATION ROUTINE S99VAL      *
//*               TO DECODE THE USERS ALLOCATE COMMAND.  SYNTAX     *
//*               ACCEPTED BY THE SCANNER IS ESSENTIALLY THAT OF    *
//*               THE TSO COMMAND LANGUAGE.                         *
//*      SVC99    ASSEMBLER ROUTINE TO CALL DYNAMIC                 *
//*               ALLOCATION SVC 99                                 *
//*      S99FREE  PL/1 SUBROUTINE FOR DYNAMIC UNALLOCATION          *
//*      S99VAL   PL/1 SUBROUTINE FOR DYNAMIC ALLOCATION.           *
//*      S99VCC   PL/1 SUBROUTINE FOR DYNAMIC CONCATENATION         *
//*      S99VDC   PL/1 SUBROUTINE FOR DYNAMIC DECONCATENATION       *
//*      S99VIN   PL/1 SUBROUTINE FOR DYNAMIC INFORMATION           *
//*               RETRIEVAL                                         *
//*      S99VUN   PL/1 SUBROUTINE FOR DYNAMIC UNALLOCATION BY       *
//*               DDNAME                                            *
//*      TERME    MACRO REQUIRED FOR ASSEMBLER ROUTINES             *
//*      TEST     PDUMP TESTING INSTRUCTIONS AND SAMPLE BATCH       *
//*               TEST JOBSTREAM                                    *
//*      TPUT     ASSEMBLER TPUT/TGET ROUTINE FOR IO3270            *
//*      TRANS32  ASSEMBLER ROUTINE USED BY BATCH VERSION ONLY.     *
//*               TRANSLATES OUTPUT LINES WHEN PRINTING IN ABEND    *
//*               DUMP FORMAT                                       *
//*      TSOCP    PL/1 INTERFACE TO CALL A TSO COMMAND PROCESSOR    *
//*      ZAP      SYSIN INPUT FOR ZAP TO PDUMP TSO COMMAND          *
//*               PROCESSOR.  THIS ZAP SAVES CPPL ADDRESS AND       *
//*               PASSES A PROPER OS PARM TO THE MAIN PL/1          *
//*               PROGRAM.                                          *
//*                                                                 *
