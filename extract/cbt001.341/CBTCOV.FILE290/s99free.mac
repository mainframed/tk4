 S99FREE:PROCEDURE(CBUF,RCC,S99RC,S99ERR,S99INF) REORDER;
    DECLARE
      CBUF               CHAR(*) VARYING,
      RCC                FIXED BIN(15,0),
      S99RC              FIXED BIN(15,0),
      S99ERR             FIXED BIN(15,0),
      S99INF             FIXED BIN(15,0),
      SCANNER            ENTRY(ENTRY,CHAR(*) VARYING,)
                            RETURNS(FIXED BIN(15,0)),
      SVC99              ENTRY(FIXED BIN(15,0))
                            RETURNS(FIXED BIN(15,0)),
      S99TUPL#           FIXED BIN(15,0) INIT(0),
      1 S99RB,
        2 S99VERB        FIXED BIN(15,0) INIT(5122),
        2 S99FLAG1       FIXED BIN(15,0) INIT(0),
        2 S99ERROR       FIXED BIN(15,0) INIT(0),
        2 S99INFO        FIXED BIN(15,0) INIT(0),
        2 S99TXTPP       POINTER         INIT((ADDR(S99TUPL(1)))),
        2 RESERVED       FIXED BIN(31,0) INIT(0),
        2 S99FLAG2       FIXED BIN(31,0) INIT(0),
      S99TUPL(100)       POINTER INIT((NULL())),
      1 S99TUNIT(100),
        2 KEY            FIXED BIN(15,0) INIT(0),
        2 #              FIXED BIN(15,0) INIT(0),
        2 PARM           CHAR(44) VARYING INIT(''),
      X80                BIT(8) BASED(X80PTR),
      X80PTR             POINTER,
      ALPHANUM           CHAR(36) STATIC INIT(
          'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'),
      ALPHA              CHAR(26) DEFINED ALPHANUM POS(1),
      DIG                CHAR(10) DEFINED ALPHANUM POS(27),
      (HBOUND,
       LENGTH,
       UNSPEC,
       VERIFY,
       INDEX,
       SUBSTR,
       ADDR,NULL)        BUILTIN,
      TMP                CHAR(1) VARYING INIT(' '),
      (I,RC)             FIXED BIN(15,0) INIT(0),
      MAXTUPL#           FIXED BIN(15,0) INIT(100),
      1 KWORDS STATIC,
        2 TYPE(12)       BIT(1) INIT('1'B,'1'B,(10)(1)'0'B),
        2 WORDS(12)      CHAR(3) VARYING INIT(
             'DA','DSN','F','DD',
             'KE','DEL','CA','UN',
             'SY','DES','H','NOH'),
        2 TRANS          BIT(1) INIT('1'B);
1   RCC = SCANNER(S99VFR1,CBUF,KWORDS);
    IF RCC ^= 0
       THEN RETURN;
    ELSE S99TUPL# = S99TUPL# + 1;
    CALL SETUPL(7,0,'');
    X80PTR = ADDR(S99TUPL(S99TUPL#));
    X80 = '10000000'B;
    S99RC = SVC99(S99VERB);
    S99ERR = S99ERROR;
    S99INF = S99INFO;
    %INCLUDE (SETUPL);
    %INCLUDE (S99VFR1);
 END S99FREE;
