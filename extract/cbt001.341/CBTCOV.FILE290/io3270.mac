 IO3270: PROCEDURE(LINE,OPT) RETURNS(FIXED BIN(15,0)) REORDER RECURSIVE;
    DECLARE
      TPUT               ENTRY(CHAR(*) VARYING)
                            RETURNS(FIXED BIN(15,0)),
      TGET               ENTRY(CHAR(*) VARYING)
                            RETURNS(FIXED BIN(15,0)),
      BUFADE             ENTRY(FIXED BIN(15,0),FIXED BIN(15,0))
                            RETURNS(CHAR(2)),
      BUFADD             ENTRY(FIXED BIN(15,0),FIXED BIN(15,0),
                               CHAR(*)),
      ATTR               ENTRY(FIXED BIN(15,0),FIXED BIN(15,0),
                               FIXED BIN(15,0),FIXED BIN(15,0))
                            RETURNS(CHAR(1)),
      FULLSCR            ENTRY(FIXED BIN(15,0)),
      1 IOXOPT STATIC EXTERNAL,
        2 ISTR           CHAR(30) VARYING INIT(''),
        2 PFILE          FILE VARIABLE,
        2 IFLAGS,
          3 TRANS        BIT(1) INIT('1'B),
          3 ATTN         BIT(1) INIT('0'B),
          3 IFILL        BIT(14) INIT('0'B),
        2 ROWS           FIXED BIN(15,0) INIT(24),
        2 #PAGES         FIXED BIN(15,0) INIT(100),
      UPPER              CHAR(26) STATIC INIT(
          'ABCDEFGHIJKLMNOPQRSTUVWXYZ'),
      LOWER              CHAR(26) STATIC INIT(
          'abcdefghijklmnopqrstuvwxyz'),
      BUFF               CHAR(240) STATIC VARYING INIT(''),
      SCREEN             CHAR(3120) STATIC VARYING INIT(''),
      BLANK              CHAR(79) STATIC VARYING INIT(''),
      LINE               CHAR(*) VARYING,
      OPT                FIXED BIN(15,0),
      READY(2)           LABEL INIT(INIT,START),
      GOTO               FIXED BIN(15,0) STATIC INIT(1),
      (SUBSTR,REPEAT,
       MOD,LENGTH,
       TRANSLATE,
       UNSPEC,LOW,
       INDEX)            BUILTIN,
      (I,J,LI,RC,ACT,
       ROW,COL)          FIXED BIN(15,0) INIT(0),
      ESC                CHAR(1) STATIC INIT(' '),
      SBA                CHAR(1) STATIC INIT(' '),
      IC                 CHAR(1) STATIC INIT(' '),
      SF                 CHAR(1) STATIC INIT(' '),
      RA                 CHAR(1) STATIC INIT(' '),
      EUA                CHAR(1) STATIC INIT(' '),
      CLEAR              CHAR(1) STATIC INIT('5'),
      EAU                CHAR(1) STATIC INIT('?'),
      WRITE              CHAR(1) STATIC INIT('1'),
      SYSPAGE            FILE DIRECT ENV(REGIONAL(1) F BLKSIZE(3276));
1   DECLARE
      SELSCN             CHAR(153) STATIC INIT(' '),
      APAG               CHAR(1) DEFINED SELSCN POS(69),
      APG#               CHAR(1) DEFINED SELSCN POS(75),
      SPAG#              PIC'ZZZ9' DEFINED SELSCN POS(76),
      ABACK              CHAR(1) DEFINED SELSCN POS(86),
      AFRM               CHAR(1) DEFINED SELSCN POS(97),
      SFRM#              PIC'ZZZ9' DEFINED SELSCN POS(104),
      ATO                CHAR(1) DEFINED SELSCN POS(123),
      STO#               PIC'ZZZ9' DEFINED SELSCN POS(130),
      APNG               CHAR(1) DEFINED SELSCN POS(138),
      SPAGW              CHAR(4) DEFINED SELSCN POS(146),
      RESSCNC            CHAR(118) STATIC INIT(' '),
      RPAG               CHAR(1) DEFINED RESSCNC POS(86),
      RPG#               CHAR(1) DEFINED RESSCNC POS(92),
      RPAG#              PIC'ZZZ9' DEFINED RESSCNC POS(93),
      RINP               CHAR(1) DEFINED RESSCNC POS(98),
      RSEL               CHAR(1) DEFINED RESSCNC POS(108),
      RESSCNR            CHAR(117) STATIC INIT(' '),
      EPAG               CHAR(1) DEFINED RESSCNR POS(81),
      EPG#               CHAR(1) DEFINED RESSCNR POS(87),
      EPAG#              PIC'ZZZ9' DEFINED RESSCNR POS(88),
      ESEL               CHAR(1) DEFINED RESSCNR POS(107),
      (PAI,
       FRM,
       PAR,
       TEST,
       PAH,
       UNR,
       UARM)             CHAR(1) STATIC INIT(' '),
      SINVIG             CHAR(21) STATIC INIT(' '),
      IMESS              CHAR(7) DEFINED SINVIG POS(6),
      IPG#               CHAR(1) DEFINED SINVIG POS(17),
      IPAG#              PIC'ZZZ9' DEFINED SINVIG POS(18),
      SPAGE              CHAR(23) STATIC INIT(' '),
      PPAGW              CHAR(4) DEFINED SPAGE POS(20),
      WROUT              CHAR(8) STATIC INIT(' '),
      BSELSCN            CHAR(14) STATIC INIT(' '),
      BPAG#              PIC'ZZZ9' DEFINED BSELSCN POS(11),
      OUTPUT             CHAR(123) STATIC INIT(' '),
      OSEL               CHAR(1) DEFINED OUTPUT POS(10),
      OPNG               CHAR(1) DEFINED OUTPUT POS(19),
      OPAGW              CHAR(4) DEFINED OUTPUT POS(27),
      OPAG               CHAR(1) DEFINED OUTPUT POS(106),
      OPG#               CHAR(1) DEFINED OUTPUT POS(112),
      PAG#               PIC'ZZZ9' DEFINED OUTPUT POS(113),
      PAGING(2)          CHAR(4) STATIC INIT(
          'ON','AUTO'),
      AUTO               FIXED BIN(15,0) STATIC INIT(2),
      ON                 FIXED BIN(15,0) STATIC INIT(1),
      OFF                FIXED BIN(15,0) STATIC INIT(3),
      PGSW               FIXED BIN(15,0) STATIC INIT(1),
      SCRSIZE            FIXED BIN(15,0) STATIC INIT(0),
      SROW               FIXED BIN(15,0) STATIC INIT(0),
      KEY                FIXED BIN(15,0) STATIC INIT(0),
      PAGE               BIT(1) STATIC INIT('1'B),
      INDIC              CHAR(52) STATIC INIT(' '),
      INRUN              CHAR(7) DEFINED INDIC POS(7),
      INP                CHAR(5) DEFINED INDIC POS(16),
      IMEAR              CHAR(30) DEFINED INDIC POS(22),
      INPUT              CHAR(12) STATIC INIT(' '),
      RUN                CHAR(13) STATIC INIT(' '),
      BUFADR             CHAR(2) STATIC INIT(' '),
      TESTADR            CHAR(2) STATIC INIT(' '),
      SELPAG             CHAR(25) STATIC INIT(' '),
      SELS               CHAR(1) DEFINED SELPAG POS(5),
      SELP               CHAR(1) DEFINED SELPAG POS(14),
      SELPG              CHAR(4) DEFINED SELPAG POS(22),
      SCR(39,2)          FIXED BIN(15,0) STATIC INIT((78)0),
      SIND               FIXED BIN(15,0) STATIC INIT(0),
      PICKUP             BIT(1) STATIC INIT('0'B),
      1 PBUF STATIC,
        2 PSCR(39,2)     FIXED BIN(15,0) INIT((78)0),
        2 PBUFF          CHAR(3120) INIT(' ');
-   GO TO READY(GOTO);
1INIT:
    GOTO = 2;
    UNSPEC(ESC) = '00100111'B;
    UNSPEC(EUA) = '00010010'B;
    UNSPEC(SBA) = '00010001'B;
    UNSPEC(IC ) = '00010011'B;
    UNSPEC(RA ) = '00111100'B;
    UNSPEC(SF ) = '00011101'B;
    UNSPEC(TEST)= '00000001'B;
    PAR = ATTR(1,0,1,0);
    PAI = ATTR(1,0,3,0);
    PAH = ATTR(1,0,2,0);
    UNR = ATTR(0,1,0,0);
    UARM = ATTR(0,0,0,0);
    SROW = ROWS;
    SCRSIZE = (ROWS - 4) * 80;
    OUTPUT = SBA ×× BUFADE(ROWS,1) ×× SF ×× PAH ××
             SBA ×× BUFADE(ROWS,60) ×× SF ×× PAR ××
             'SELECT ' ×× SF ×× PAR ×× 'PAGING:ON  ' ××
             SF ×× PAR ×× SBA ×× BUFADE(ROWS-3,1) ××
             SUBSTR(REPEAT('----5----0',7),1,69) ×× SF ××
             PAR ×× 'PAGE' ×× SF ×× PAR ×× '   1' ×× SF ××
             PAR ×× SBA ×× BUFADE(ROWS,80) ×× SF ×× PAR;
    SELSCN = SBA ×× BUFADE(ROWS,1) ×× SF ×× PAI ××
             SBA ×× BUFADE(ROWS,60) ×× SF ×× PAI ××
             SBA ×× BUFADE(ROWS-3,1) ×× (40)'-' ×× ' SELECT' ××
             RA ×× BUFADE(ROWS-3,70) ×× ' ' ××
             SBA ×× BUFADE(ROWS-3,70) ×× SF ×× PAR ×× 'PAGE' ××
             SF ×× UNR ×× '   0' ×× SF ×× PAR ××
             SBA ×× BUFADE(ROWS-2,59) ×× SF ×× PAR ××
             ' <<<<<   ' ×× SF ×× PAR ×× ' FROM    1' ××
             SBA ×× BUFADE(ROWS-1,59) ×× SF ×× PAR ××
             ' >>>>>   ' ×× SF ×× PAR ×× ' TO      1' ××
             SBA ×× BUFADE(ROWS,68) ×× SF ×× PAR ××
             'PAGING:ON  ' ×× SBA ×× BUFADE(ROWS-1,63) ×× IC;
    RESSCNC = SBA ×× BUFADE(1,1) ×× RA ×× BUFADE(ROWS,1) ×× ' ' ××
              SBA ×× BUFADE(ROWS,80) ×× SF ×× PAR ××
              SBA ×× BUFADE(ROWS-3,1) ××
              SUBSTR(REPEAT('----5----0',7),1,69) ×× SF ×× PAR ××
              'PAGE' ×× SF ×× PAR ×× '   1' ×× SF ×× UARM ××
              SBA ×× BUFADE(ROWS,1) ×× SF ×× PAH ×× SBA ××
              BUFADE(ROWS,60) ×× SF ×× PAR ×× SBA ×× BUFADE(ROWS-2,1) ××
              EUA ×× BUFADE(ROWS,1) ×× SBA ×× BUFADE(ROWS-2,1) ×× IC;
    RESSCNR = SBA ×× BUFADE(ROWS-3,1) ×× RA ×× BUFADE(ROWS,1) ×× ' ' ××
              SBA ×× BUFADE(ROWS-3,1) ×× SUBSTR(REPEAT('----5----0',7),
              1,69) ×× SF ×× PAR ×× 'PAGE' ×× SF ×× PAR ×× '   1' ××
              SF ×× UARM ×× SBA ×× BUFADE(ROWS,1) ×× SF ××
              PAH ×× RA ×× BUFADE(ROWS,11) ×× ' ' ××
              SBA ×× BUFADE(ROWS,60) ×× SF ×× PAR ××
              SBA ×× BUFADE(ROWS-2,1) ×× EUA ×× BUFADE(ROWS,1) ××
              SBA ×× BUFADE(ROWS-2,1) ×× IC;
    SINVIG = SBA ×× BUFADE(ROWS-3,50) ×× SF ×× PAH ××
             'INVALID' ×× SBA ×× BUFADE(ROWS-3,75) ×× SF ××
             UNR ×× '   1';
    SPAGE = SBA ×× BUFADE(ROWS,69) ×× RA ×× BUFADE(ROWS,80) ×× ' ' ××
            SBA ×× BUFADE(ROWS,68) ×× SF ×× PAR ×× 'PAGING:ON  ';
    WROUT = SBA ×× BUFADE(ROWS,80) ×× SF ×× PAR ×× SBA ×× BUFADE(1,1);
    BSELSCN = SBA ×× BUFADE(ROWS-3,50) ×× SF ×× PAI ××
              SBA ×× BUFADE(ROWS-3,75) ×× SF ×× UNR ×× '   1';
    ON UNDF(SYSPAGE) BEGIN;
       PAGE = '0'B;
       GO TO NOPAGE;
    END;
    PAGE = '1'B;
    OPEN FILE(SYSPAGE) OUTPUT;
    IF PAGE
       THEN DO;
         CLOSE FILE(SYSPAGE);
         OPEN FILE(SYSPAGE) UPDATE;
       END;
    ELSE;
 NOPAGE:
    IF ^PAGE
       THEN DO;
         APAG,APG#,ABACK = PAI;
         IPG#,AFRM,ATO,APNG = PAI;
         RPAG,RPG#,RSEL = PAI;
         EPAG,EPG#,ESEL = PAI;
         OSEL,OPNG,OPAG,OPG# = PAI;
         SELS,SELP,FRM = PAI;
       END;
    ELSE FRM = PAR;
    OPAGW = PAGING(PGSW);
    PAG# = 1;
    INDIC = SBA ×× BUFADE(ROWS,1) ×× SF ×× PAH ×× (47)' ';
    INPUT = SBA ×× BUFADE(ROWS-3,80) ×× SF ×× UARM ×× EUA ××
            BUFADE(ROWS,1) ×× SBA ×× BUFADE(ROWS-2,1) ×× IC;
    RUN = SBA ×× BUFADE(ROWS-3,80) ×× SF ×× PAR ×× RA ××
          BUFADE(ROWS,1) ×× ' ' ×× SBA ×× BUFADE(ROWS,10) ×× IC;
    TESTADR = BUFADE(ROWS-1,63);
    SELPAG = SBA ×× BUFADE(ROWS,60) ×× SF ×× PAR ×× 'SELECT ' ××
             SF ×× PAR ×× 'PAGING:ON  ';
    CALL FULLSCR(1);
1START:
    /*  FORMAT/REFORMAT THE SCREEN  */
    IF OPT = 0
       THEN DO;
         OPAGW = PAGING(PGSW);
         RC = TPUT(ESC ×× CLEAR ×× 'B' ×× OUTPUT ××
                   SCREEN ×× '-');
         RETURN(RC);
       END;
    ELSE;
    /*  TERMINATE I/O 3270 CONTROL FOR GOOD  */
    IF OPT = 2
       THEN DO;
         CALL CLRSCN(AUTO);
         CALL FULLSCR(0);
         IF PAGE
            THEN CLOSE FILE(SYSPAGE);
         ELSE;
         GOTO = 1;
         RC = TPUT(ESC ×× CLEAR ×× 'B');
         RETURN(0);
       END;
    ELSE;
    /*  WRITE TO THE SCREEN  */
    IF OPT = 1
       THEN DO;
         IF LENGTH(LINE) = 0
            THEN RETURN(0);
         ELSE;
         IF LENGTH(SCREEN) >= SCRSIZE
            THEN CALL CLRSCN(PGSW);
         ELSE;
         LI = (LENGTH(LINE) + 79) / 80;
         LI = LI * 80;
         IF LI - LENGTH(LINE) > 0
            THEN BLANK = SUBSTR((79)' ',1,LI-LENGTH(LINE));
         ELSE BLANK = '';
         SIND = SIND + 1;
         SCR(SIND,1) = 1 + LENGTH(SCREEN) / 80;
         IF LENGTH(SCREEN) + LI <= SCRSIZE
            THEN DO;
              SCREEN = SCREEN ×× LINE ×× BLANK;
              SCR(SIND,2) = LENGTH(LINE);
 WRIT:
              RC = TPUT(ESC ×× WRITE ×× 'B' ×× WROUT ××
                        SCREEN ×× '-');
              RETURN(RC);
            END;
         ELSE;
         J = SCRSIZE - LENGTH(SCREEN);
         SCR(SIND,2) = J;
         SCREEN = SCREEN ×× SUBSTR(LINE,1,J);
         RC = TPUT(ESC ×× WRITE ×× 'B' ×× WROUT ×× SCREEN);
         CALL CLRSCN(PGSW);
         SCREEN = SUBSTR(LINE,J+1) ×× BLANK;
         SIND = SIND + 1;
         SCR(SIND,1) = 1;
         SCR(SIND,2) = LENGTH(SUBSTR(LINE,J+1));
         GO TO WRIT;
       END;
    ELSE;
    /*  RELINQUISH CONTROL OF THE SCREEN TEMPORARILY  */
    IF OPT = 4
       THEN DO;
         RC = TPUT(ESC ×× CLEAR ×× 'C');
         CALL FULLSCR(0);
         RETURN(0);
       END;
    ELSE;
    /*  TAKE BACK CONTROL OF THE SCREEN  */
    IF OPT = 6
       THEN DO;
         RC = TPUT(ESC ×× WRITE ×× 'B' ×× SBA ×× BUFADE(24,1) ××
                   SF ×× PAH ×× '***' ×× SF ×× UARM ×× IC);
         RC = TGET(BUFF);
         CALL FULLSCR(1);
         OPT = 0;
         GO TO START;
       END;
    ELSE;
    /*  AT THIS POINT IF OPT ^= 3 × 5 IT'S AN ERROR  */
    IF OPT ^= 3 & OPT ^= 5
       THEN RETURN(24);
    ELSE;
    /*  DO INPUT FROM THE SCREEN  */
 READD:
    INRUN = ' ';
    INP = 'INPUT';
    IMEAR = ISTR;
    RC = TPUT(ESC ×× WRITE ×× 'B' ×× INDIC ×× INPUT);
 READ:
    BUFF = '';
    RC = TGET(BUFF);
    LINE = SUBSTR(BUFF,1,1);
    /*  PA1 (ATTN) PRESSED  */
    IF LINE = '%'
       THEN DO;
         ATTN = '1'B;
         RETURN(0);
       END;
    ELSE;
    /*  CLEAR PRESSED  */
    IF LINE = '_'
       THEN DO;
         CALL CLRSCN(AUTO);
         GO TO READ;
       END;
    ELSE;
    /*  PA2 (REFORMAT SCREEN) PRESSED */
    IF LINE = '>'
       THEN DO;
         RC = IO3270('',0);
         GO TO READD;
       END;
    ELSE;
    /*  REQUEST WAS MADE TO ENTER SELECT MODE  */
    IF (LINE = TEST × LINE = '1') & PAGE
       THEN DO;
         CALL SELECT(0);
         IF PICKUP
            THEN DO;
              PICKUP = '0'B;
              CALL PICK('',' ',BUFF,SCR,ROW,COL,2);
              GO TO READ;
            END;
         ELSE;
         IF ATTN
            THEN RETURN(0);
         ELSE;
         GO TO READ;
       END;
    ELSE;
    IF LENGTH(BUFF) <= 3 & LINE ^= ''''
       THEN GO TO PUTRUN;
    ELSE;
    CALL BUFADD(ROW,COL,SUBSTR(BUFF,2,2));
    IF ROW = SROW
       THEN DO;
         IF ^PAGE
            THEN DO;
 BADINP:
              INRUN = 'INVALID';
              RC = TPUT(ESC ×× WRITE ×× 'B' ×× INDIC ××
                        SBA ×× SUBSTR(BUFF,2,2) ×× IC);
              GO TO READ;
            END;
         ELSE;
         IF COL >= 61 & COL <= 66
            THEN DO;
              CALL SELECT(0);
              IF PICKUP
                 THEN DO;
                   PICKUP = '0'B;
                   CALL PICK('',' ',BUFF,SCR,ROW,COL,2);
                   GO TO READ;
                 END;
              ELSE;
              IF ATTN
                 THEN RETURN(0);
              ELSE;
              GO TO READ;
            END;
         ELSE GO TO BADINP;
       END;
    ELSE;
    IF ROW = SROW - 3
       THEN GO TO BADINP;
    ELSE;
    IF ROW <= SROW - 4
       THEN DO;
         CALL PICK(SCREEN,' ',BUFF,SCR,ROW,COL,1);
         GO TO READ;
       END;
    ELSE;
 PUTRUN:
    INRUN = 'RUNNING';
    IMEAR = ' ';
    INP = ' ';
    RC = TPUT(ESC ×× WRITE ×× 'C' ×× INDIC ×× RUN);
    IF LENGTH(BUFF) > 3
       THEN BUFF = SUBSTR(BUFF,4);
    ELSE BUFF = '';
    DO WHILE(LENGTH(BUFF) > 0);
       I = INDEX(BUFF,SBA);
       IF I = 0
          THEN LEAVE;
       ELSE DO;
         IF LENGTH(BUFF) >= I + 3
            THEN BUFF = SUBSTR(BUFF,I+3);
         ELSE BUFF = '';
       END;
       I = INDEX(BUFF,SBA);
       IF I = 0
          THEN LEAVE;
       ELSE LINE = LINE ×× SUBSTR(BUFF,1,I-1);
       BUFF = SUBSTR(BUFF,I);
    END;
    LINE = LINE ×× BUFF;
    /*  IF OPT = 5 A REQUEST WAS MADE TO WRITE THE INPUT BACK TO THE
        OUTPUT AREA. IT WILL BE DONE IF SOMETHING WAS IN THE INPUT
        AREA ONLY.  */
    IF OPT = 5 & LENGTH(LINE) > 1
       THEN I = IO3270(SUBSTR(LINE,2),1);
    ELSE;
    IF TRANS
       THEN LINE = TRANSLATE(LINE,UPPER,LOWER);
    ELSE;
    RETURN(RC);
    %INCLUDE CLRSCN;
    %INCLUDE SELECT;
    %INCLUDE PICK;
 END IO3270;
