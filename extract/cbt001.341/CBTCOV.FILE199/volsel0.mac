         TITLE 'VOLSEL:  COMMAND PROCEDURE TO SELECT A VOLUME FOR A DATX
               ASET RESTORE'
*---------------------------------------------------------------------*
*                                                                     *
*   PROGRAM NAME:  VOLSEL                                             *
*                                                                     *
*   TYPE:  TSO COMMAND PROCESSOR                                      *
*                                                                     *
*   FUNCTIONS:  TO SELECT A VOLUME FOR A DATASET RESTORE              *
*                                                                     *
*   CALLING SEQUENCE:  VOLSEL "VOLSER"                                *
*                                                                     *
*   ARGUMENTS:                                                        *
*                                                                     *
*      VOLSER = A 6-BYTE CLIST VARIABLE, PADDED WITH BLANKS, IF       *
*               NECESSARY, WHICH CONTAINS THE GENERIC VOLSER          *
*               DESCRIBING THE VOLUME(S) TO BE SCANNED (E.G.,         *
*               C'TEMP  ', C'PUB   ', ETC.).  THIS VARIABLE           *
*               WILL BE SET TO THE VOLSER OF THE VOLUME WHICH         *
*               HAS THE LARGEST NUMBER OF TRACKS IN ITS LARGEST       *
*               EXTENT OF FREE SPACE, OR BLANKS, IF NO VOLUME         *
*               MATCHING THE GENERIC NAME CAN BE FOUND.               *
*                                                                     *
*   OPERATION:                                                        *
*                                                                     *
*      1.  ON ENTRY, THE NUMBER OF NON-BLANK BYTES IN "VOLSER"        *
*          ARE COUNTED, AND THE RESULT IS SAVED FOR LATER             *
*          COMPARISON.                                                *
*                                                                     *
*      2.  THE UCB'S ARE SCANNED FOR ONLINE, MOUNTED DASD VOLUMES.    *
*          FOR EACH VOLUME WHOSE VOLSER MATCHES THE GENERIC TYPE      *
*          SPECIFIED IN "VOLSER", THE SIZE OF THE LARGEST CONTIGUOUS  *
*          FREE AREA IS COMPUTED.                                     *
*                                                                     *
*      3.  THE PROGRAM PLACES THE VOLUME SERIAL NUMBER OF THE VOLUME  *
*          WITH THE LARGEST CONTIGUOUS FREE SPACE INTO "VOLSER"       *
*          BEFORE RETURNING.                                          *
*                                                                     *
*---------------------------------------------------------------------*
         SPACE 3
*
*   DEFINE REGISTER EQUATES
*
R0       EQU   0                       GENERAL REGISTER 0
R1       EQU   1                       GENERAL REGISTER 1
R2       EQU   2                       GENERAL REGISTER 2
R3       EQU   3                       GENERAL REGISTER 3
R4       EQU   4                       GENERAL REGISTER 4
R5       EQU   5                       GENERAL REGISTER 5
R6       EQU   6                       GENERAL REGISTER 6
R7       EQU   7                       GENERAL REGISTER 7
R8       EQU   8                       GENERAL REGISTER 8
R9       EQU   9                       GENERAL REGISTER 9
R10      EQU   10                      GENERAL REGISTER 10
R11      EQU   11                      GENERAL REGISTER 11
R12      EQU   12                      GENERAL REGISTER 12
R13      EQU   13                      GENERAL REGISTER 13
R14      EQU   14                      GENERAL REGISTER 14
R15      EQU   15                      GENERAL REGISTER 15
         SPACE 3
*
*   INITIALIZATION:  SAVE THE INPUT REGISTERS, LOAD THE BASE REGISTER,
*   ESTABLISH PROGRAM ADDRESSABILITY AND CHAIN THE SAVE AREAS
*
VOLSEL   CSECT
         SAVE  (14,12),,*              SAVE THE INPUT REGISTERS
         LR    R12,R15                 LOAD THE BASE REGISTER
         USING VOLSEL,R12              ESTABLISH ADDRESSABILITY
         LR    R11,R13                 R11<--A(CALLER'S SAVE AREA)
         LA    R13,SAVEAREA            R13<--A(MY SAVE AREA)
         ST    R11,4(R13)              FORWARD CHAIN SAVE AREAS
         ST    R13,8(R11)              REVERSE CHAIN SAVE AREAS
         SPACE 3
*
*   GET THE GENERIC VOLSER
*
         XC    MAXTRKS(4),MAXTRKS      ZERO OUT MAX TRACKS VALUE
         MVC   VOLSER(6),=C'      '    BLANK FILL RETURN VOLSER
         CALL  GETCSV,(NAME,NAMEL,GENVOL,LENVOL,IRC)     *** TEST ***
         L     R15,IRC                 *** TEST ***
         LTR   R15,R15                 *** TEST ***
         BZ    FINDLEN                 *** TEST ***
         CVD   R15,WORK                *** TEST ***
         UNPK  MSG1+21(4),WORK(8)       *** TEST ***
         OI    MSG1+24,X'F0'            *** TEST ***
         TPUT  MSG1,L'MSG1             *** TEST ***
         ABEND 100,DUMP                *** TEST ***
MSG1     DC    C'GETCSV RETURN CODE = ....'  *** TEST ***
         DS    0H                      *** TEST ***
FINDLEN  LA    R1,GENVOL               SAVE GENERIC VOLSER
         SLR   R2,R2                   R2<--0
         LA    R3,6(0)                 R3<--6 (MAX. LENGTH)
LENLOOP  CLI   0(R1),C' '              BLANK ?
         BE    SAVELEN                 IF SO, SAVE LENGTH
         LA    R1,1(R1)                R1<--A(NEXT BYTE IN VOLSER)
         LA    R2,1(R2)                R2<--LENGTH
         BCT   R3,LENLOOP              CONTINUE SCAN
SAVELEN  ST    R2,LENVOL               SAVE LENGTH OF GENERIC VOLSER
         SPACE 3
*
*        LOCATE UCB LOOKUP TABLE IN NUCLEUS
*
LOCCVT   LA    R8,16(0)                R8<--A(CVT POINTER)
         L     R8,0(R8)                R8<--A(CVT)
         L     R8,40(R8)               R8<--A(UCB LOOKUP TABLE)
         SPACE 3
*
*        FETCH A UCB ADDRESS AND INTERROGATE IT
*
GETUCB   LH    R9,0(R8)                R9<--A(UCB)
         N     R9,HALFMASK             TURN OFF PROPOGATED SIGN BITS
         CH    R9,=H'0'                UNDEFINED UNIT ?
         BE    NEXTUCB                 SKIP IT IF IT IS
         C     R9,HALFMASK             X'0000FFFF' MARKS END OF TABLE
         BE    END                     GO FINISH UP
         CLI   18(R9),X'20'            DASD DEVICE TYPE ?
         BNE   NEXTUCB                 SKIP IF NOT DASD
         TM    3(R9),X'80'             DEVICE ONLINE ?
         BZ    NEXTUCB                 IF NOT, SKIP IT
         SPACE 3
*
*   TEST FOR A MATCH AGAINST THE GENERIC VOLSER SUPPLIED
*
T3       L     R2,LENVOL               R2<--L(GENERIC VOLSER)
         LTR   R2,R2                   ZERO ?
         BNP   VOLMATCH                IF SO, TEST ALL VOLUMES
         BCTR  R2,0                    DECREMENT LENGTH FOR CLC INSTR
T4       EX    R2,TESTVOLS             TEST VOLSERS
         BNE   NEXTUCB                 NO MATCH, SKIP IT
         CLC   28(6,R9),=C'ERDA14'     VOLSER = ERDA14 ?
         BE    NEXTUCB                 IF SO, SKIP IT
         CLC   28(6,R9),=C'ERDA16'     VOLSER = ERDA16 ?
         BE    NEXTUCB                 IF SO, SKIP IT
         SPACE 3
*
*   DETERMINE HOW MUCH FREE SPACE IS ON THE VOLUME
*
VOLMATCH MVC   IA(6),28(R9)            SAVE VOLSER
         CALL  SRO010,(IA,F1)          CALL SRO010 TO GET FREE SPACE
         LA    R0,TRKSCYL              R0<--A(TRKS/CYL TABLE)
         SLR   R1,R1                   R1<--0
         IC    R1,19(R9)               R1<--UCB TYPE
         SLL   R1,1                    MULTIPLY BY 2
         AR    R1,R0                   R1<--A(TRKS/CYL THIS VOLUME)
         L     R0,IA+20                R0<--# CYLS IN MAX FREE EXTENT
         MH    R0,0(R1)                MAKE IT TRACKS
         A     R0,IA+24                R0<--# TRKS IN MAX FREE EXTENT
         C     R0,MAXTRKS              NEW MAXIMUM VALUE ?
         BL    NEXTUCB                 IF NOT, SKIP THIS VOLUME
         ST    R0,MAXTRKS              ELSE, SAVE NEW VALUE
         MVC   VOLSER(6),28(R9)        AND SAVE CORRESPONDING VOLSER
         SPACE 3
*
*   TEST THE NEXT UCB
*
NEXTUCB  LA    R8,2(R8)                R8<--A(NEXT UCB POINTER)
         B     GETUCB                  GO TEST NEXT UCB
         SPACE 3
*
*   END OF UCB SCAN.  RETURN THE VOLSER
*
END      EQU   *
         CALL  SETCSV,(NAME,NAMEL,VOLSER,F6,IRC)      *** TEST ***
         L     R15,IRC                 *** TEST ***
         LTR   R15,R15                 *** TEST ***
         BZ    RETURN                  *** TEST ***
         CVD   R15,WORK                *** TEST ***
         UNPK  MSG2+21(4),WORK(8)       *** TEST ***
         OI    MSG2+24,X'F0'            *** TEST ***
         TPUT  MSG2,L'MSG2             *** TEST ***
         ABEND 101,DUMP                *** TEST ***
WORK     DS    D                       *** TEST ***
MSG2     DC    C'SETCSV RETURN CODE = ....'  *** TEST ***
         DS    0H                      *** TEST ***
         L     R1,AVOL                 R1<--A(VOLSER)
         MVC   0(6,R1),VOLSER          RETURN THE VOLSER
RETURN   L     R13,4(R13)              RESTORE R13
         LM    R14,R12,12(R13)         RESTORE THE OTHER REGISTERS
         SLR   R15,R15                 CLEAR THE RETURN CODE
         BR    R14                     RETURN TO CALLER
         SPACE 3
*
*   SAVE AREA, CONSTANTS, OTHER GOODIES
*
TESTVOLS CLC   GENVOL(0),28(R9)        *** EXECUTE ONLY ***
SAVEAREA DS    18F                     GENERAL REGISTER SAVE AREA
AVOL     DS    F                       A(ARGUMENT)
MAXTRKS  DS    F                       LARGEST # FREE TRKS FOUND
LENVOL   DS    F                       L(GENERIC VOLSER)
F1       DC    F'1'                    A USEFUL CONSTANT
HALFMASK DC    XL4'0000FFFF'           HALFWORD UCB ADDR MASK
ENDUCB   DC    XL2'FFFF'               END OF UCB ADDR INDICATOR
*LASTUCB DS    H
         DS    0F
IA       DS    CL28                    SRO010 WORK AREA
GENVOL   DS    CL6                     GENERIC VOLSER
VOLSER   DS    CL6                     RETURNED VOLSER
TRKSCYL  DS    0H                      TABLE OF TRKS/CYL
         DC    H'00'                   X'00' = UNKNOWN
         DC    H'00'                   X'01' = UNKNOWN
         DC    H'00'                   X'02' = UNKNOWN
         DC    H'00'                   X'03' = UNKNOWN
         DC    H'00'                   X'04' = UNKNOWN
         DC    H'00'                   X'05' = UNKNOWN
         DC    H'08'                   X'06' = 2305-1
         DC    H'08'                   X'07' = 2305-2
         DC    H'20'                   X'08' = 2314
         DC    H'19'                   X'09' = 3330
         DC    H'12'                   X'0A' = 3340
         DC    H'30'                   X'0B' = 3350
         DC    H'00'                   X'0C' = UNKNOWN
         DC    H'19'                   X'0D' = 3330-11
         DC    H'00'                   X'0E' = UNKNOWN
         DC    H'00'                   X'0F' = UNKNOWN
         DS    0F                      *** TEST ***
NAMEL    DC    F'6'                    *** TEST ***
NAME     DC    CL6'VOLSER'             *** TEST ***
F6       DC    F'6'                    *** TEST ***
IRC      DC    F'0'                    *** TEST ***
         LTORG
         END   VOLSEL
