         TITLE 'GDACINIT: SUBROUTINE TO GETMAIN AND INITIALIZE COMMON'
*---------------------------------------------------------------------*
*                                                                     *
*   SUBROUTINE NAME:  GDACINIT                                        *
*                                                                     *
*   FUNCTION:  TO GETMAIN AND INITIALIZE THE COMMON AREA              *
*                                                                     *
*   ARGUMENTS:  NONE                                                  *
*                                                                     *
*   ENTRY REGISTERS:                                                  *
*                                                                     *
*       R13 = A(SAVE AREA)                                            *
*       R14 = A(RETURN)                                               *
*       R15 = A(ENTRY POINT)                                          *
*                                                                     *
*   FUNCTION:                                                         *
*                                                                     *
*       1.  ON ENTRY, AN AREA FOR COMMON IS GETMAINED, AND THE        *
*           ADDRESS LOADED INTO REGISTER 11, WHICH IS USED AS         *
*           THE COMMON AREA BASE REGISTER THROUGHOUT GDA.             *
*                                                                     *
*       2.  A DUMMY COPY OF THE COMMON AREA IS COPIED INTO THE        *
*           GETMAINED AREA.                                           *
*                                                                     *
*       3.  CERTAIN NON-RELOCATABLE ADDRESS CONSTANTS ARE STORED      *
*           IN THE GETMAIN-ED COMMON AREA.                            *
*                                                                     *
*       4.  CONTROL IS RETURNED TO THE CALLING PROGRAM.               *
*                                                                     *
*---------------------------------------------------------------------*
         SPACE 3
*
*   DEFINE REGISTER EQUATES
*
R0       EQU   0                       GENERAL REGISTER 0
R1       EQU   1                       GENERAL REGISTER 1
R2       EQU   2                       GENERAL REGISTER 2
R3       EQU   3                       GENERAL REGISTER 3
R4       EQU   4                       GENERAL REGISTER 4
R5       EQU   5                       GENERAL REGISTER 5
R6       EQU   6                       GENERAL REGISTER 6
R7       EQU   7                       GENERAL REGISTER 7
R8       EQU   8                       GENERAL REGISTER 8
R9       EQU   9                       GENERAL REGISTER 9
R10      EQU   10                      GENERAL REGISTER 10
R11      EQU   11                      GENERAL REGISTER 11
R12      EQU   12                      GENERAL REGISTER 12
R13      EQU   13                      GENERAL REGISTER 13
R14      EQU   14                      GENERAL REGISTER 14
R15      EQU   15                      GENERAL REGISTER 15
         SPACE 3
*
*   INITIALIZATION:  SAVE THE INPUT REGISTERS, LOAD THE BASE REGISTER
*   AND ESTABLISH PROGRAM ADDRESSABILITY.
*
GDACINIT CSECT
         SAVE  (14,12),,*              SAVE THE INPUT REGISTERS
         LR    R12,R15                 LOAD THE BASE REGISTER
         USING GDACINIT,R12            ESTABLISH ADDRESSABILITY
         SPACE 3
*
*   GETMAIN STORAGE FOR THE COMMON AREA
*
         GETMAIN R,LV=LENCOMMN         GETMAIN THE STORAGE
         LR    R11,R1                  PUTS ITS ADDRESS INTO R11
         USING COMMON,R11              ADDRESSABILITY TO COMMON
         SPACE 3
*
*   COPY THE DUMMY COMMON AREA INTO THE GETMAIN-ED COMMON AREA
*
         LR    R2,R1                   R2<--A(GETMAIN-ED AREA)
         LA    R3,LENCOMMN             R3<--L(GETMAIN-ED AREA)
         L     R4,=V(GDACOMMN)         R4<--V(DUMMY COMMON AREA)
         LR    R5,R3                   R5<--L(DUMMY AREA)
         MVCL  R2,R4                   COPY DUMMY AREA INTO COMMON
         SPACE 3
*
*   INITIALIZE THE ADDRESS CONSTANTS IN THE DA1 CONTROL BLOCK
*
         LA    R1,DA1RB                R1<--A(DA1 REQUEST BLOCK)
         ST    R1,DA1                  SAVE A(DA1RB)
         MVI   DA1,X'80'               MARK END OF LIST
         LA    R1,DA1TUPL              R1<--A(DA1TUPL)
         ST    R1,DA1INFO+2            SAVE IT IN DA1
         LA    R1,DA1DDN               R1<--A(DA1 DDNAME TEXT UNIT)
         ST    R1,DA1TUPL              SAVE IT
         LA    R1,DA1UNALC             R1<--A(DA1 UNALLOC TEXT UNIT)
         ST    R1,DA1TUPL+4            SAVE IT
         MVI   DA1TUPL+4,X'80'         MARK END OF POINTER LIST
         SPACE 3
*
*   INITIALIZE THE ADDRESS CONSTANTS IN THE DA2 CONTROL BLOCK
*
         LA    R1,DA2RB                R1<--A(DA2 REQUEST BLOCK)
         ST    R1,DA2                  SAVE IT IN RB
         MVI   DA2,X'80'               MARK END OF LIST
         LA    R1,DA2TUPL              R1<--A(TEXT UNIT POINTER LIST)
         ST    R1,DA2INFO+2            SAVE IT IN DA2
         LA    R1,DA2DDN               R1<--A(DDNAME TEXT UNIT)
         ST    R1,DA2TUPL              SAVE IT IN DA2
         LA    R1,DA2DSN               R1<--A(DSN TEXT UNIT)
         ST    R1,DA2TUPL+4            SAVE IT IN DA2
         LA    R1,DA2PERM              R1<--A(PERM ALLOC TEXT UNIT)
         ST    R1,DA2TUPL+8
         LA    R1,DA2SHR               R1<--A(DISP=SHR TEXT UNIT)
         ST    R1,DA2TUPL+12           SAVE IT IN DA2
         LA    R1,DA2VOL               R1<--A(VOLSER TEXT UNIT)
         ST    R1,DA2TUPL+16           SAVE IT IN DA2
         LA    R1,DA2UNIT              R1<--A(UNIT=SYSDA TEXT UNIT)
         ST    R1,DA2TUPL+20           SAVE IT IN DA2
         MVI   DA2TUPL+16,X'80'        MARK END OF LIST
         SPACE 3
*
*   INITIALIZE THE ADDRESS CONSTANTS IN THE DA3 CONTROL BLOCK
*
         LA    R1,DA3RB                R1<--A(DA3 REQUEST BLOCK)
         ST    R1,DA3                  SAVE IT IN RB
         MVI   DA3,X'80'               MARK END OF LIST
         LA    R1,DA3TUPL              R1<--A(TEXT UNIT POINTER LIST)
         ST    R1,DA3INFO+2            SAVE IT IN DA3
         LA    R1,DA3DDN               R1<--A(DDNAME TEXT UNIT)
         ST    R1,DA3TUPL              SAVE IT IN DA3
         MVI   DA3TUPL,X'80'           MARK END OF LIST
         SPACE 3
*
*   ALL PROCESSING IS COMPLETE.  RETURN TO THE CALLING PROGRAM.
*
RETURN   ST    R11,64(R13)             SAVE R11
         LM    R14,R12,12(R13)         RESTORE THE REGISTERS
         SLR   R15,R15                 CLEAR THE RETURN CODE
         BR    R14                     RETURN TO CALLER
         LTORG
         EJECT
*
*   COMMON AREA DSECT
*
         DSECT
         $COMMON
         END   GDACINIT
