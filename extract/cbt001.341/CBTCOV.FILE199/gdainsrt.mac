         TITLE 'GDAINSRT:  SUBROUTINE TO INSERT DEFAULT DATASET NAMES IX
               NTO THE LIST'
*---------------------------------------------------------------------*
*                                                                     *
*   SUBROUTINE NAME:  GDAINSRT                                        *
*                                                                     *
*   FUNCTION:  TO INSERT ONE OR MORE DEFAULT DATASET NAMES INTO THE   *
*   LIST, BASED ON THE DDNAME BEING PROCESSED.                        *
*                                                                     *
*   OPERATION:  CSECT GDADFLTS IS SCANNED FOR THE SUBJECT DDNAME.     *
*   IF IT IS NOT FOUND, NO ACTION IS TAKEN.  IF THE DDNAME IS FOUND   *
*   IN GDADFLTS, THE DATASET NAMES, AND THEIR ASSOCIATED MEMBER       *
*   NAMES AND VOLSER, ARE INSERTED INTO THE CURRENT DATASET CON-      *
*   CATENATION LIST.                                                  *
*                                                                     *
*   THIS ROUTINE USES REGISTERS 9 AND 10, SET BY GDAMAIN.  REGISTER   *
*   9 IS USED BY GDAMAIN (AND THIS ROUTINE) AS A POINTER INTO THE     *
*   DATASET CONCATENATION LIST, AND R10 IS USED BY BOTH ROUTINES AS   *
*   THE COUNT OF THE NUMBER OF ENTRIES IN THE CONCATENATION LIST.     *
*                                                                     *
*---------------------------------------------------------------------*
         SPACE 3
*
*   DEFINE REGISTER EQUATES
*
R0       EQU   0                       GENERAL REGISTER 0
R1       EQU   1                       GENERAL REGISTER 1
R2       EQU   2                       GENERAL REGISTER 2
R3       EQU   3                       GENERAL REGISTER 3
R4       EQU   4                       GENERAL REGISTER 4
R5       EQU   5                       GENERAL REGISTER 5
R6       EQU   6                       GENERAL REGISTER 6
R7       EQU   7                       GENERAL REGISTER 7
R8       EQU   8                       GENERAL REGISTER 8
R9       EQU   9                       GENERAL REGISTER 9
R10      EQU   10                      GENERAL REGISTER 10
R11      EQU   11                      GENERAL REGISTER 11
R12      EQU   12                      GENERAL REGISTER 12
R13      EQU   13                      GENERAL REGISTER 13
R14      EQU   14                      GENERAL REGISTER 14
R15      EQU   15                      GENERAL REGISTER 15
         SPACE 3
*
*   INITIALIZATION:  SAVE THE INPUT REGISTERS, LOAD THE BASE REGISTER,
*   ESTABLISH PROGRAM, COMMON AND LIST ADDRESSABILITY.
*
GDAINSRT CSECT
         SAVE  (14,12),,*              SAVE THE INPUT REGISTERS
         LR    R12,R15                 LOAD THE BASE REGISTER
         USING GDAINSRT,R12            PROGRAM ADDRESSABILITY
         USING COMMON,R11              COMMON ADDRESSABILITY
         USING $DDN1,R9                LIST ADDRESSABILITY
         LR    R15,R13                 R15<--A(CALLER'S SAVE AREA)
         LA    R13,72(R13)             R13<--A(MY SAVE AREA)
         ST    R15,4(R13)              FORWARD CHAIN SAVE AREAS
         ST    R13,8(R15)              REVERSE CHAIN SAVE AREAS
         SPACE 3
*
*   IF THE DDNAME AT THE HEAD OF THE LIST IS ISPPROF, CALL GDAPROF
*   TO LOCATE/CREATE THE USER'S "USERID.ISPF.PROFILE" DATASET AND
*   REPLACE THE ASTERISK SPECIFICATION WITH THE APPROPRIATE DATASET
*   NAME.
*
         LA    R8,$DSNLIST             R8<--A(DSNAME LIST ORIGIN)
         CLC   0(8,R8),=C'ISPPROF '    DDNAME = ISPPROF ?
         BNE   SCANDFLT                IF NOT, BRANCH
         CALL  GDAPROF                 ELSE, CALL GDAPROF
         MVC   $MEM1(8),=C'        '   BLANK OUT THE MEMBER NAME
         MVC   $VOL1(6),$MEM1          ...AND THE VOLSER
         LTR   R10,R10                 IS THIS 1-ST ENTRY IN LIST ?
         BZ    *+10                    IF SO, SKIP NEXT INSTR
         MVC   $DDN1(8),$MEM1          ALSO BLANK OUT DDNAME
         LA    R10,1(R10)              INCREMENT DSNAME COUNT
         B     RETURN                  AND RETURN TO CALLER
         SPACE 3
*
*   SEARCH GDADFLTS FOR THE APPROPRIATE DDNAME
*
SCANDFLT L     R7,=V(GDADFLTS)         R7<--V(GDADFLTS)
DDNLOOP  CLI   0(R7),X'FF'             END OF LIST ?
         BE    RETURN                  IF SO, RETURN
         CLC   0(8,R7),0(R8)           DDNAME MATCH ?
         BE    GOTIT                   IF SO, BRANCH
         LA    R7,12(R7)               R7<--A(NEXT DDNAME)
         B     DDNLOOP                 GO CHECK NEXT DDNAME IN LIST
         SPACE 3
*
*   DDNAME HAS BEEN LOCATED.  START INSERTING THE DATASET NAMES,
*   MEMBER NAMES AND VOLSERS.
*
GOTIT    L     R8,8(R7)                R8<--A(DSNAME SUB-LIST)
         L     R7,0(R8)                R7<--COUNT OF DSNAMES
         LA    R8,4(R8)                R8<--A(1-ST DSNAME)
         LTR   R7,R7                   HOW MANY TO DO ?
         BNP   RETURN                  IF NONE, EXIT
LOOP     C     R10,=F'16'              IS THE LIST ALREADY FULL ?
         BL    ADDOK                   IF SO, ALLOW THE ADDITION
         LA    R9,$DSNLIST             ELSE, RESTORE LIST ORIGIN
         MVC   MSG16DDN(8),$DDN1       PUT DDNAME INTO ERROR MESSAGE
         TPUT  MSG16,L'MSG16           DISPLAY THE ERROR MESSAGE
         MVC   MSG17DSN(44),0(R8)      PUT DSNAME INTO ERROR MESSAGE
         TPUT  MSG17,L'MSG17           DISPLAY THE REST OF THE ERROR
         B     INCR8                   GO PROCESS REST OF MINI-LIST
ADDOK    MVC   $DSN1(44),0(R8)         COPY IN THE DSNAME
         MVC   $MEM1(8),44(R8)         COPY IN THE MEMBER NAME
         MVC   $VOL1(6),52(R8)         COPY IN THE VOLSER
         LTR   R10,R10                 IS THIS 1-ST ENTRY IN LIST ?
         BZ    *+10                    IF SO, SKIP NEXT INSTR
         MVC   $DDN1(8),=C'        '   ELSE, BLANK FILL DDNAME
         LA    R9,$NEXT                R9<--A(NEXT LIST ENTRY)
         LA    R10,1(R10)              INCREMENT LIST LENGTH
INCR8    LA    R8,58(R8)               R8<--A(NEXT DSNAME IN SUB-LIST)
         BCT   R7,LOOP                 CONTINUE SUB-LIST PROCESSING
         SPACE 3
*
*   ALL PROCESSING IS COMPLETE.  RETURN TO THE CALLER.
*
RETURN   L     R13,4(R13)              RESTORE R13
         LM    R14,R8,12(R13)          RESTORE R14 - R8
         LM    R11,R12,64(R13)         RESTORE R11 - R12
         SLR   R15,R15                 CLEAR THE RETURN CODE
         BR    R14                     RETURN TO THE CALLER
         LTORG
         EJECT
*
*   COMMON AREA DSECT
*
         DSECT
         $COMMON
         EJECT
*
*   DSNAME LIST ENTRY MAPPING MACRO
*
         DSECT
         $DSN
         END   GDAINSRT
