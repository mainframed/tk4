PSWS     TITLE 'UICC LPA PACKER - PSW SAMPLER'
*   THE ORIGINAL IDEA OF THIS PROGRAM CAME FROM THE
*   GERRARD BANK PACKER PROGRAM.
*
*   THE FUNCTIONS PERFORMED BY THIS PSW SAMPLING PROGRAM
*   ARE AS FOLLOWS:
*      1. INITIALIZATION - OPEN FILE, OBTAIN THE CSA LOWER
*         BOUND ADDRESS.
*      2. SAMPLE THE EXTERNAL OLD PSW EVERY .2 SECONDS,
*         IF IT IS GREATER THAN THE CSA LOWER BOUND ADDR,
*         THEN PLACE THE LAST 4 BYTES INTO THE BUFFER,
*         CLEAN THE HIGH ORDER BYTE OF THE ADDRESS.
*      3. WHEN THE BUFFER IS FILLED, WRITE IT OUT AND DO
*         A TCLOSE ON THE DATASET. ZERO THE BUFFER AND START
*         TO REFILL IT.
*      4. JOB WILL TERMINATE WHEN ITS STOP ECB IS POSTED WITH
*         NO LOSS OF DATA, JOB MAY BE CANCELLED AT ANY TIME BUT
*         THE CONTENTS OF THE FINAL BUFFER WILL BE LOST.
*
*    JOB SHOULD BE RUN AT DISPATCHING PRIO (15,15) FOR A LONG TIME,
*    PREFERABLY AT LEAST SEVERAL DAYS.  BE SURE THAT NO CLPA'S ARE
*    DONE WHILE THE SAMPLING OR DATA ANALYSIS IS TAKING PLACE.
*
*    JCL SHOULD SPECIFY MOD FOR THE FILE FOR RUNS AFTER THE FIRST.
*
*    THIS PROGRAM WAS WRITTEN BY:
*
*               BARRY SCHRAGER
*               COMPUTER CENTER
*               UNIVERSITY OF ILLINOIS AT CHICAGO CIRCLE
*               BOX 4348
*               CHICAGO, ILLINOIS 60680
*
*               (312) 996-2478
*
*               VERSION 1 DATED 7/22/76
*
*
*  THIS PROGRAM REQUIRES SYS1.AMODGEN TO ASSEMBLE CORRECTLY
*
PSWSAMP  CSECT   (BASED ON GERRARD BANKS PACKER PGM)
         IHAPSA
         IHAPVT
         CVT   DSECT=YES
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         EJECT
PSWSAMP  CSECT
         SAVE (14,12),,*   ENTER PGM
         LR    R12,R15   AND SET UP ADDRESSABILITY
         USING PSWSAMP,R12
         LA    R2,SAVEAREA   AND CHAIN SAVE AREAS
         ST    R2,8(,R13)
         ST    R13,4(,R2)
         LR    R13,R2
         OPEN (TAPE,(OUTPUT))  OPEN OUTPUT FILE
         LTR   R15,R15  TEST FOR GOOD OPEN
         BZ    *+6   IF OPEN WAS GOOD, SKIP ABEND
         DC    H'0'  ABEND IF BAD OPEN
         EXTRACT COMMADDR,'S',FIELDS=(COMM)  GET COMM ADDR
         L     R2,COMMADDR  GET ADDR OF CIB AND ECB
         L     R3,4(,R2)   GET START CIB ADDR
         LTR   R3,R3  ZERO MEANS NOT STARTED FROM CONS
         BNZ   *+6   IF STARTED FROM CONSOLE, SKIP ABEND
         DC    H'0'  ABEND IF NOT STARTED FROM CONSOLE
         QEDIT ORIGIN=4(R2),BLOCK=(R3)  UNCHAIN START CIB
         QEDIT ORIGIN=4(R2),CIBCTR=0  ALLOW ONLY STOP COMMANDS
         L     R11,0(,R2)   GET ECB ADDR INTO R11 FOR LATER USE
         L     R1,CVTPTR  GET THE CVT POINTER
         L     R1,CVTPVTP-CVT(R1)  GET PVT POINTER
         LH    R8,PVTLCSA-PVT(R1)  GET LOW CSA BOUND
         SLL   R8,8  MAKE INTO BYTE ADDR
         LA    R8,0(,R8)   DROP HIGH ORDER BYTE
         WTO   'PSW COLLECTOR IN PROGRESS - USE P TO STOP'
INITBUFR LA    R2,BUFFER    POINT TO BUFFER
         LA    R3,LBUFFER   GET BUFFER LENGTH
         SR    R0,R0   CLEAR R0
         LR    R1,R0   AND R1
         MVCL  R2,R0     ZERO BUFFER
         LA    R10,BUFFER  SET UP REGS FOR DATA COLLECTION
         LA    R9,LBUFFER/4   GET COUNT OF ENTRIES/BUFFER
         SR    R7,R7   CLEAR R7 FOR PSW COLLECTION
LOOP     TM    0(R11),X'40'   TEST IF STOP ECB IS POSTED
         BO    STOP    YES, STOP NOW
         STIMER WAIT,BINTVL=LOOPTIME  WAIT A WHILE
         ICM   R7,7,FLCEOPSW-PSA+5   GET EXTERNAL OLD PSW ADDR
         CR    R7,R8   TEST AGAINST LOWER CSA BOUND
         BL    LOOP   LOOP IF NOT IN LPA
         STCM  R7,7,1(R10)   STORE ADDR INTO BUFFER
         LA    R10,4(,R10)  INCREMENT BUFFER POINTER
         BCT   R9,LOOP   AND CONTINUE
STOP     WRITE DECB,SF,TAPE,BUFFER,'S'  WRITE BUFFER
         CHECK DECB
         CLOSE (TAPE),TYPE=T
         TM    0(R11),X'40'   ENTERED BECAUSE OF STOP?
         BZ    INITBUFR  NO, RE-INITIALIZE THE BUFFER
         CLOSE (TAPE)   CLOSE THE FILE
         WTO   'PSW COLLECTOR TERMINATING'
         L     R13,4(,R13)  UNCHAIN SAVE AREA
         RETURN (14,12),RC=0   AND RETURN
TAPE     DCB   DDNAME=TAPE,BUFNO=0,NCP=1,DEVD=DA,DSORG=PS,             X
               LRECL=4,BLKSIZE=LBUFFER,MACRF=WC,RECFM=FB
LOOPTIME DC    F'20'   COLLECT EVERY .2 SECONDS
COMMADDR DS    A   WORK AREA FOR EXTRACT
SAVEAREA DS    9D    SAVE AREA
BUFFER   DS    916A   3664 BYTE BUFFER
LBUFFER  EQU   *-BUFFER  BUFFER LENGTH EQUATE
         END   PSWSAMP
