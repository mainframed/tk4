* PROCESS MACRO,MAR(2,72),OPT(TIME);
 /* OMFPST4: SUPPORT FOR UICC PACKER PROGRAM      */
 OMFPST4: PROC(PARM) OPTIONS(MAIN REENTRANT);
 /********************************************************************/
 /* PROCEDURE: OMFPST4                                               */
 /* FUNCTION:                                                        */
 /*            POST PROCESSOR FOR OMF1 RECORD (30 SECOND SUMMARY)    */
 /*             SUPPORT 'PROGLOOK' OR 'PACKER' TYPE FUNCTION BY      */
 /*             SELECTING THE PSW'S BY MODULE NAME AND WRITING       */
 /*             THE RELATIVE INSTRUCTION ADDRESS TO THE OUTPUT       */
 /*             DATASET.                                             */
 /* ATTRIBUTES: NONE                                                 */
 /* EXTERNAL: NONE                                                   */
 /* INPUT:                                                           */
 /*     FILE SYSIN CONTAINS PARAMETERS IN OURMF FORMAT               */
 /*      PARM FIELD MAY BE USED AS FIRST INPUT STRING                */
 /*           START( YYDDD HHMMSS )  /* STARTING DATE AND TIME       */
 /*           END  ( YYCCC HHMMSS )  /* ENDING DATE AND TIME         */
 /*           HOURS( HHMMSS HHMMSS)  /* APPLICABLE HOURS DURING      */
 /*                                  /* THIS TIME PERIOD             */
 /*           PGM( PGMNAME)        /* CDENAME SELECTED               */
 /*              OR                                                  */
 /*           MOD(MODNAME)          LPALIB MODULE SELECTED           */
 /*              OR                                                  */
 /*             LPA(MAP)                 FOR LPA REPACKING           */
 /*    ABOVE DIDDLE (MAP IS A PHONEY OPERAND) IS REQUIRED BECAUSE    */
 /*    THE ORIGINAL AUTHOR OF THE CODE DID NOT ALLOW STAND ALONE     */
 /*    OPERANDS....                                                  */
 /* DEFAULTS:  INCLUDE ALL RECORDS IN SCAN.                          */
 /*            PGM OR MOD OR LPA MUST BE SPECIFIED                   */
 /*                                                                  */
 /* THE OURMF OUTPUT DATA IS READ FROM DDNAME 'IN'                   */
 /* IF MOD IS SPECIFIED, THE LPA DIRECTORY IS READ FROM FILE 'DIRECT'*/
 /* IF LPA IS SPECIFIED, THE LPA STATS ARE READ IN FROM FILE 'DIRECT'*/
 /*                                                                  */
 /* AUTHOR:  HOWARD GILBERT                                          */
 /*          175 WHITNEY AVE                                         */
 /*          NEW HAVEN, CT 06520                                     */
 /*          203 432-4080                                            */
 /*MODIFIED: BARRY SCHRAGER                                          */
 /*          COMPUTER CENTER                                         */
 /*          UNIVERSITY OF ILLINOIS AT CHICAGO CIRCLE                */
 /*          BOX 4348                                                */
 /*          CHICAGO, ILLINOIS 60680                                 */
 /*          312 996-2478                                            */
 /* DISTIRBUTION                                                     */
 /*     THIS PROGRAM IS NOT RESTRICTED IN ANY WAY AND MAY BE         */
 /* MODIFIED OR DISTRIBUTED IN ANY MANNER AND FOR ANY PURPOSE.       */
 /* IT IS SUGGESTED THAT OTHER OURMF POST PROCESSORS CONSIDER        */
 /* COMPATIBLE SYNTAX AND PARAMETER SCANNING.                        */
 /********************************************************************/
 DCL 1 OPTIONS,
         5 STARTDATE FIXED DEC(7) INIT(0),
         5 STARTHOUR FIXED DEC(7) INIT(0),
         5 ENDDATE FIXED DEC(7) INIT(99365),
         5 ENDHOUR FIXED DEC(7) INIT(240000),
         5 EARLIEST FIXED DEC(7) INIT(0),
         5 LATEST FIXED DEC(7) INIT(240000),
         5 PGM CHAR(8) INIT((LOW(8))),
         5 LOWRANGE BIT(32) ALIGNED,
         5 HIGHRANGE BIT(32) ALIGNED,
         5 SCTYPE FIXED BIN(31) INIT(0),
         5 MODSTART FIXED BIN(31);
 %PAGE;
 % INCLUDE STATGLBL;
 %INCLUDE YCCSTART;
 % INCLUDE OURMFDEF;
 DCL MAXVALS(6) FIXED BIN INIT(2,2,2,1,1,1);
 DCL WORDS(6) CHAR(8) INIT('START','END','HOURS','PGM','MOD','LPA');
 DCL INSADDR BIT(32) ALIGNED;
 DCL MASK BIT(32) ALIGNED INIT(((8)'0'B××(24)'1'B));
 DCL IN INPUT FILE RECORD ENV(VB TOTAL);
 DCL OUT OUTPUT FILE RECORD ENV(FB RECSIZE(4) BLKSIZE(4240));
 DCL DIRECT FILE RECORD SEQUENTIAL INPUT,
     1 DIRIN BASED(DIRPTR),
       2 NAME CHAR(8),
       2 (START,SIZE) FIXED BIN(31),
     1 DIRSTAT,
       2 (MODCOUNT,LPALOW,LPAHIGH,FILL) FIXED BIN(31);
 DCL PARM CHAR(100) VAR;
 DCL T FIXED BIN(31);
 %PAGE;
 ON UNDEFINEDFILE(SYSIN)GO TO PROCESS;
 ON ENDFILE(SYSIN) GO TO PROCESS;
 ON CONVERSION CALL ERR('INVALID NUMBER IN '××WORDS(I));
 IF LENGTH(PARM)>0 THEN DO;
   CARD=PARM;
   SUBSTR(CARD,73,8)='PARMFLD';
   PUT EDIT(CARD)(A) SKIP;
   SUBSTR(CARD,73,8)=' ';
   END;
 KEYWDLOOP: CALL KEYWORD;
 I=INDOX('START END HOURS PGM MOD LPA',KEY);
 IF NVALS>MAXVALS(I) THEN CALL ERR('TOO MANY VALUES FOR '××WORDS(I));
 SELECT (I);
    WHEN (1)
         DO;
         STARTDATE=VAL(1);
         IF NVALS=2 THEN STARTHOUR=VAL(2);
         END;
    WHEN (2)
         DO;
         ENDDATE=VAL(1);
         IF NVALS=2 THEN ENDHOUR=VAL(2);
         END;
    WHEN (3)
         DO;
         EARLIEST=VAL(1);
         IF NVALS=2 THEN LATEST=VAL(2);
         END;
    WHEN (4)
         DO;
         IF LENGTH(VAL(1))>8 THEN
              CALL ERR('INVALID PGM NAME');
         PGM=VAL(1);
         SCTYPE=1;
         END;
         WHEN (5)
              DO;
              IF LENGTH(VAL(1))>8 THEN
                 CALL ERR('INVALID MODULE NAME');
              ON UNDEFINEDFILE(DIRECT)
                 CALL ERR('DIRECT FILE REQUIRED FOR MOD KEYWORD');
              ON ENDFILE(DIRECT)
                 CALL ERR('MODULE NOT FOUND IN LPA DIRECTORY');
              PGM=VAL(1);
              READ FILE(DIRECT) SET(DIRPTR);
              DO WHILE(PGM^=DIRIN.NAME);
                 READ FILE(DIRECT) SET(DIRPTR);
              END;
              SCTYPE=2;
              LOWRANGE=UNSPEC(DIRIN.START);
              HIGHRANGE=UNSPEC(DIRIN.START+DIRIN.SIZE);
              MODSTART=DIRIN.START;
              CLOSE FILE(DIRECT);
              END;
       WHEN (6)
            DO;
            SCTYPE=2;
            ON UNDEFINEDFILE(DIRECT)
               CALL ERR('DIRECT FILE RQUIRED FOR LPA KEYWORD');
            READ FILE(DIRECT) INTO(DIRSTAT);
            LOWRANGE=UNSPEC(LPALOW);
            HIGHRANGE=UNSPEC(LPAHIGH);
            MODSTART=0;
            CLOSE FILE(DIRECT);
            END;
    END;
 GO TO KEYWDLOOP;
 %PAGE;
 PROCESS:
 CLOSE FILE(SYSIN);
 IF SCTYPE=0 THEN
     CALL ERR('NO PGM NAME MOD NAME OR LPA KEYWORD PROVIDED IN INPUT');
 ON ENDFILE(IN) GO TO FINN;
 PRLOOP:
 READ FILE(IN) SET(OMFRECPTR);
 IF OMF1ID^='OMF1' THEN GO TO PRLOOP;
 IF OMF1DATE<STARTDATE ×
    (OMF1DATE=STARTDATE & OMF1TIME < STARTHOUR) ×
    OMF1DATE>ENDDATE ×
    (OMF1DATE=ENDDATE & OMF1TIME < ENDHOUR) ×
    OMF1TIME<EARLIEST ×
    OMF1TIME>LATEST
         THEN GO TO PRLOOP;
    DO I=1 TO SRBINTVL;
    SELECT (SCTYPE);
    WHEN (1) DO;
    IF CDENAME(I)=PGM & ADDRESS(I)<0 THEN
        DO;
        INSADDR=UNSPEC(ADDRESS(I))&MASK;
        WRITE FILE(OUT) FROM(INSADDR);
        END;
    END;
    WHEN (2) DO;
    IF ADDRESS(I)>0 THEN DO;
       INSADDR=UNSPEC(ADDRESS(I))&MASK;
       IF INSADDR>LOWRANGE & INSADDR<HIGHRANGE THEN DO;
          IF MODSTART>0 THEN DO;
             UNSPEC(T)=INSADDR;
             T=T-MODSTART;
             INSADDR=UNSPEC(T);
             END;
          WRITE FILE(OUT) FROM(INSADDR);
       END;
    END;
    END;
    END;
    END;
 GO TO PRLOOP;
 FINN: RETURN;
 %INCLUDE CNTLCRD;
 END;
