*PROCESS OPT(TIME),LC(60);
 /*     R E C 7 0   ---   PROCESS SMF RECORD 70 FOR RMFRPT            */
 REC70: PROC  (REC_PTR,CPUWAIT,INREADY,TOTIN,OUTREADY,TOTTSO,
               TOTBATCH,TOTSTC,OUTWAIT);
  /*    LEVEL 1.2
        ROUTINE TO REPORT RMF DATA FROM SMF RECORD TYPE 70
        WRITTEN BY  MARTIN J. SPRINZEN  - TECH SUPPORT   */

   DEFAULT RANGE(I:N) VALUE(FIXED BIN(15)),
           RANGE(*)   STATIC;

   DCL REC_PTR POINTER,
      (CPUWAIT,INREADY,OUTREADY,TOTIN,TOTTSO,TOTBATCH,
       TOTSTC,OUTWAIT)       FLOAT DEC(6),
      (FLOAT1,FLOAT2,FLOAT3) FLOAT DEC(16),
       FLOATX FLOAT DEC(16) INIT(4.294967296E9),  /*2.0E0**32 */
       FLOATC FLOAT DEC(16) INIT(4.096E9),  /* (2.E0**12)*(1.E6) */
       NDUM FIXED BIN(31),
      (MOD,TRUNC,FLOAT) BUILTIN;

  DCL 1 SMF_RECORD BASED(REC_PTR) UNALIGNED,
        2 RMF_COMMON,   /* 34 BYTES LONG */
          3 DUM1 CHAR(2),
          3 SMF70IST FIXED DEC(7),  /* START TIME */
          3 SMF70DAT FIXED DEC(7),  /* DATE */
          3 SMF70INT FIXED DEC(7),  /* DURATION OF INTERVAL */
          3 DUM2 CHAR(4),
          3 SMF70SAM FIXED BIN(31), /* NO. OF SAMPLES */
          3 DUM3 CHAR(12),
        2 CPU_CONTROL,  /* 24 BYTES LONG */
          3 DUM4 CHAR(2),
          3 SMF70CPU FIXED BIN(15), /* NO. OF CPU DATA SECTIONS */
          3 DUM5 CHAR(20),
        2 CPU_DATA (NDUM REFER (SMF70CPU)), /* CPU DATA SECTION(S) */
          3 SMF70WAT BIT(64) ALIGNED, /* BIT 51 = 1 MICROSECOND */
          3 DUM6 CHAR(8),
        2 ASID_DATA,   /* LAST SECTION */
          3 DUM7 CHAR(4),
          3 SMF70RTT FIXED BIN(31), /* READY TOTAL VALUE OVER INT */
          3 DUM8 CHAR(68),
          3 SMF70ITT FIXED BIN(31), /* IN    TOTAL VALUE OVER INT */
          3 DUM9  CHAR(52),
          3 SMF70OTT FIXED BIN(31), /* OUT   TOTAL VALUE OVER INT */
          3 DUM10 CHAR(52),
          3 SMF70WTT FIXED BIN(31), /* WAIT  TOTAL VALUE OVER INT */
          3 DUM11 CHAR(52),
          3 SMF70BTT FIXED BIN(31), /* BATCH TOTAL VALUE OVER INT */
          3 DUM12 CHAR(52),
          3 SMF70STT FIXED BIN(31), /* STC   TOTAL VALUE OVER INT */
          3 DUM13 CHAR(52),
          3 SMF70TTT FIXED BIN(31); /* TSO USERS TOT VALUE OVER INT*/

   /* CALCULATE IN AVERAGE */
   TOTIN    = SMF70ITT / FLOAT(SMF70SAM);

   /* CALCULATE IN READY */
   INREADY  = SMF70RTT / FLOAT(SMF70SAM);

   /* CALCULATE OUT READY */
   OUTREADY  = SMF70OTT / FLOAT(SMF70SAM);

   /* CALCULATE AVG NO. TSO USERS */
   TOTTSO   = SMF70TTT / FLOAT(SMF70SAM);

   /* CALCULATE IN READY */
   OUTWAIT  = SMF70WTT / FLOAT(SMF70SAM);

   /* CALCULATE AVG NO. BATCH USERS */
   TOTBATCH  = SMF70BTT / FLOAT(SMF70SAM);

   /* CALCULATE AVG NO. STC USERS */
   TOTSTC   = SMF70STT / FLOAT(SMF70SAM);

   /* GET INTERVAL TIME IN SECONDS - DOUBLE PRECISION - MMSSTTTF */
   FLOAT1 = TRUNC(SMF70INT/1.0E5) * 60
            + MOD(SMF70INT,1.0E5) / 1.0E3;

   /* CALCULATE AVERAGE WAIT TIME IN % FOR CPU A */
   FLOAT2 = SMF70WAT(1);  /* MOVE INTO FLOAT
   /* CONVERT TO SECONDS */
   FLOAT2 = FLOAT2 / FLOATC;

   /* DO SAME FOR CPU B - IF PRESENT */
   IF (SMF70CPU = 2) THEN
     DO;
       FLOAT3 = SMF70WAT(2);
       /* CONVERT TO SECONDS */
       FLOAT3 = FLOAT3 / FLOATC;
     END;
   ELSE   FLOAT3 = 0.E0;

   /* TAKE AVERAGE OF CPU(S) */
   CPUWAIT = ((FLOAT2 + FLOAT3) / (FLOAT1 * SMF70CPU)) * 100.E0;

 END REC70;
