*PROCESS OPT(TIME),LC(60);
 /*     R E C 7 2   ---   PROCESS SMF RECORD 72 FOR RMFRPT            */
 REC72: PROC(REC_PTR, NUM_PG, NUM_PD, D72_SU_RATE,     /* V 1.01 */
             D72_NO_TRANS, D72_RESPONSE, D72_SWAPS_TRN);
0/* WRITTEN BY VERNE TICE, SCE, 11/18/77 */
 /* THE FUNCTION OF THIS PROGRAM IS TO LOOK AT SMF TYPE 72 RECORDS
    GENERATED BY RMF2 AND TO EXTRACT, COMPUTE AND RETURN THE
    REQUESTED DATA.
0   THE ARGUMENTS ARE AS FOLLOWS:
0   INPUT:
        REC_PTR              POINTER TO RMF SMF COMMON SECTION
    OUTPUT:
        NUM_PG               PERFORMANCE GROUP NUMBER
        NUM_PD               NUMBER OF PERIODS IN THIS
                             PERFORMANCE GROUP
        D72_SU_RATE(*)       SERVICE UNITS/SECOND ACCUMULATED IN THIS
                             PERIOD (SMF72SER/SMF72INT).
        D72_NO_TRANS(*)      NUMBER OF ENDED TRANSACTIONS IN THIS PERIOD
        D72_RESPONSE(*)      AVERAGE TRANSACTION RESPONSE TIME IN PERIOD
                             (IN SECONDS)
                             (SMF72TTM/(SMF72TTX*1024E-6))
                             THIS IS INEXACT DUE TO DIFFERENCE BETWEEN
                             TRANSACTIONS ACTIVE IN PERIOD AND
                             TRANSACTIONS ENDED IN PERIOD.
        D72_SWAPS_TRN(*)     SWAPS PER ENDED TRANSACTION
                             (SWAPS IN PERIOD)/(ENDED TRANS COUNT)
0   THERE ARE A MAX OF 8 PERIODS PER PERFORMANCE GROUP.
0   */
0
 DCL REC_PTR            POINTER;
 DCL NUM_PG             FIXED BIN(15);
 DCL NUM_PD             FIXED BIN(15);
 DCL D72_SU_RATE(*)     FLOAT DEC(6) CONNECTED;
 DCL D72_NO_TRANS(*)    FLOAT DEC(6) CONNECTED;
 DCL D72_RESPONSE(*)    FLOAT DEC(6) CONNECTED;
 DCL D72_SWAPS_TRN(*)   FLOAT DEC(6) CONNECTED;
0
 DCL 1 WORKLOAD_ACTIVITY          BASED(REC_PTR),
     2 COMMON_SECT,
       3 WORK_SIZ                 FIXED BIN(15),
       3 WORK_INT_START           FIXED DEC(7),          /* HHMMSS */
       3 WORK_RMF_START_DATE      FIXED DEC(7),          /* YYDDD  */
       3 WORK_INT_DUR             FIXED DEC(7,5),        /* MMSSTTT */
       3 WORK_RESV1               CHAR(2),
       3 WORK_PG_NUM              FIXED BIN(15),
       3 WORK_RESV2               CHAR(4),
       3 WORK_RMF_VERS            CHAR(2),
       3 WORK_RESV3               CHAR(2),
       3 WORK_OS_REL_LVL          CHAR(4),               /* NNLL   */
       3 WORK_RESV4               CHAR(4),
     2 WORKLOAD_CNTL_SECT,
       3 WORK_SIZ_WCSECT          FIXED BIN(15),
       3 WORK_NO_PERDS            FIXED BIN(15),
       3 WORK_SIZ_PERDSECT        FIXED BIN(15),
       3 WORK_MAX_PG              FIXED BIN(15),
       3 WORK_IPS_NAME            CHAR(8),
       3 WORK_RESV4               CHAR(24),
     2 WORK_PERDS(8),
       3 WORK_NO_TRANS            FIXED BIN(31),      /* ENDED TRANS */
       3 WORK_TRN_ACTIVE_TIME     FIXED BIN(31),      /* 1024 US     */
       3 WORK_TOTAL_SERVICE       FIXED BIN(31),
       3 WORK_TRN_ELAP_TIME       FIXED BIN(31),      /* 1024 US     */
       3 WORK_WKLD_LEVEL          FIXED BIN(31),      /* 1/256       */
       3 WORK_MISCL               CHAR(16),
       3 WORK_SWC                 FIXED BIN(31),
       3 WORK_DMN                 FIXED BIN(15),
       3 WORK_PERF_OBJ            BIT(8) ALIGNED,
       3 WORK_RESV5               CHAR(1);
0DCL TIME FLOAT DEC(6) STATIC;
 DCL PD_NO  FIXED BIN(15) STATIC;
 DCL ( TRUNC, FLOAT,
       MOD   )  BUILTIN;
0NUM_PG   = WORK_PG_NUM;
 NUM_PD   = WORK_NO_PERDS;
0TIME = WORK_INT_DUR;
 TIME = TRUNC(TIME) * 60
      + MOD( TIME, 1 ) * 1.E+2;
0DO PD_NO = 1 TO NUM_PD;
    D72_NO_TRANS(PD_NO)    = WORK_NO_TRANS(PD_NO);
    IF   WORK_NO_TRANS(PD_NO) ^= 0   THEN
         DO;
               D72_RESPONSE(PD_NO) = (WORK_TRN_ELAP_TIME(PD_NO)
                                   * 1024.E-6) / WORK_NO_TRANS(PD_NO);
               D72_SWAPS_TRN(PD_NO) = FLOAT( WORK_SWC(PD_NO) ) /
                                      WORK_NO_TRANS(PD_NO);
               END;
0   ELSE DO;
               D72_RESPONSE(PD_NO) = 0;
               D72_SWAPS_TRN(PD_NO) = 0;
               END;
0   D72_SU_RATE(PD_NO)  = WORK_TOTAL_SERVICE(PD_NO)
                        / TIME;
0   END;
0END REC72;
