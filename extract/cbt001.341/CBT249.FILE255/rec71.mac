*PROCESS OPT(TIME),LC(60);
 /*     R E C 7 1   ---   PROCESS SMF RECORD 71 FOR RMFRPT            */
 REC71: PROC  (REC_PTR,TOTPG,SWAPPG,VIOPG,DMNDPG,TOTAL_SWAP,
               TI_SWAP,TO_SWAP,LW_SWAP,DW_SWAP,UNI_SWAP,XCHG_SWAP,
               ENQ_SWAP,REQ_SWAP,ASS_SWAP,RSS_SWAP,
               COMPG,AFCMIN,AFCMAX,AFCAVG,VIOSLOTS,LPACSA_FRAMES);

  /*    ROUTINE TO REPORT RMF DATA FROM SMF RECORD TYPE 71
        V1.4          01/06/78
        WRITTEN BY  MARTIN J. SPRINZEN  - TECH SUPPORT             */

   DEFAULT RANGE(I:N) VALUE(FIXED BIN(15)),
           RANGE(*)   STATIC;

   DCL REC_PTR POINTER,
      (TOTPG,SWAPPG,VIOPG,DMNDPG,TOTAL_SWAP,
       TI_SWAP,TO_SWAP,LW_SWAP,DW_SWAP,UNI_SWAP,XCHG_SWAP,
       ENQ_SWAP,REQ_SWAP,ASS_SWAP,RSS_SWAP,
       COMPG,AFCMIN,AFCMAX,AFCAVG,VIOSLOTS,LPACSA_FRAMES) FLOAT DEC(6),
       SECONDS FLOAT DEC(6),
      (MOD,TRUNC) BUILTIN;

  DCL 1 SMF_RECORD BASED(REC_PTR),
        2 RMF_COMMON,   /* 34 BYTES LONG */
          3 DUM1 CHAR(2),
          3 SMF71IST FIXED DEC(7),  /* START TIME */
          3 SMF71DAT FIXED DEC(7),  /* DATE */
          3 SMF71INT FIXED DEC(7),  /* DURATION OF INTERVAL */
          3 DUM2 CHAR(4),
          3 SMF71SAM FIXED BIN(31), /* NO. OF SAMPLES */
          3 DUM3 CHAR(12),
        2 PAGING_CONTROL, /* 4 BYTES LONG */
          3 DUM4 CHAR(4),
        2 PAGING_DATA, /* FIRST CPU DATA SECTION */
          3 SMF71PIN  FIXED BIN(31), /* NON-VIO,NON-SWAP PAGE INS */
          3 SMF71POT  FIXED BIN(31), /*   "       "        "  OUTS*/
          3 SMF71PRC  FIXED BIN(31), /* NON-VIO PAGE RECLAIMS     */
          3 SMF71SSQ  FIXED BIN(31), /* SWAP SEQUENCES            */
          3 SMF71SIN  FIXED BIN(31), /* PAGES SWAPPED IN          */
          3 SMF71SOT  FIXED BIN(31), /*   "      "    OUT         */
          3 SMF71VIN  FIXED BIN(31), /* VIO PAGE INS              */
          3 SMF71VOT  FIXED BIN(31), /* VIO PAGE OUTS             */
          3 SMF71VRC  FIXED BIN(31), /* VIO RECLAIMS              */
          3 SMF71SNI  FIXED BIN(31), /* COM PAGE INS              */
          3 SMF71SNO  FIXED BIN(31), /* COM PAGE OUTS             */
          3 SMF71SNR  FIXED BIN(31), /* COM RECLAIMS              */
          3 DUM5 CHAR(12),
          3 SMF71AFC  FIXED BIN(31), /* PAGE FRAMES AVAIL         */
          3 SMF71TFC  FIXED BIN(31), /*   "    "    IN REAL STOR  */
          3 SMF71TSC  FIXED BIN(31), /* TOT LOCAL SLOTS           */
          3 SMF71DSC  FIXED BIN(31), /* TOT VIO SLOTS IN LOCALS   */
          3 SMF71VSC  FIXED BIN(31), /* NON-VIO   "    "   "      */
          3 SMF71NSC  FIXED BIN(31), /* SLOTS NOT ALLOC "  "      */
          3 SMF71FIN  FIXED BIN(31), /* FRAMES IN NUCLEUS         */
          3 SMF71MNF  FIXED BIN(31), /* MIN UNUSED PAGE FRAMES    */
          3 SMF71MXF  FIXED BIN(31), /* MAX   "      "    "       */
          3 SMF71AVF  FIXED BIN(31), /* AVG   "      "    "       */
          3 SMF71MNP  FIXED BIN(31), /* MIN LPACSA   "    "       */
          3 SMF71MXP  FIXED BIN(31), /* MAX   "      "    "       */
          3 SMF71AVP  FIXED BIN(31), /* AVG   "      "    "       */
          3 SMF71MNS  FIXED BIN(31), /* MIN PRIVATE  "    "       */
          3 SMF71MXS  FIXED BIN(31), /* MAX   "      "    "       */
          3 SMF71AVS  FIXED BIN(31), /* AVG   "      "    "       */
          3 DUM6  CHAR( 80),
          3 SMF71AVV  FIXED BIN(31), /* AVG VIO SLOTS ALLOC       */
          3 DUM7  CHAR( 36),
          3 SMF71TIS  FIXED BIN(31), /* TERMINAL INPUT SWAP       */
          3 SMF71LWS  FIXED BIN(31), /* USER REQUST WAIT STATE*/
          3 SMF71DWS  FIXED BIN(31), /* DETECTED WAIT - 8 SECS */
          3 SMF71ULS  FIXED BIN(31), /* UNILATERAL           */
          3 SMF71NRS  FIXED BIN(31), /* PPT INDICATES NSWP   */
          3 SMF71ASS  FIXED BIN(31), /* 70% LOCAL SLOTS ALLOC*/
          3 SMF71RSS  FIXED BIN(31), /* REAL STORAGE USAGE   */
          3 SMF71EXS  FIXED BIN(31), /* EXCHANGE             */
          3 SMF71EES  FIXED BIN(31), /* ENQUEUE              */
          3 SMF71TOS  FIXED BIN(31), /* TERMINAL OUTPUT SWAPS */
          3 SMF71RV8  CHAR(4);

   /* GET AVERAGE NUMBER LPA/CSA FRAMES */
   LPACSA_FRAMES = SMF71AVP;

   /* GET AVERG VIO SLOTS ALLOCATED */
   VIOSLOTS = SMF71AVV;

   /* GET MINIMUM NUMBER UNUSED PAGE FRAMES */
   AFCMIN = SMF71MNF;

   /* GET MAXIMUN NUMBER UNUSED PAGE FRAMES */
   AFCMAX = SMF71MXF;

   /* GET MAXIMUN NUMBER UNUSED PAGE FRAMES */
   AFCAVG = SMF71AVF;

   /* GET INTERVAL TIME IN SECONDS - DOUBLE PRECISION - MMSSTTTF */
   SECONDS = TRUNC(SMF71INT/1.0E5) * 60
            + MOD(SMF71INT,1.0E5) / 1.0E3;

   /* CALCULATE SWAP PAGING RATE */
   SWAPPG = (SMF71SIN + SMF71SOT) / SECONDS;

   /* CALCULATE VIO  PAGING RATE */
   VIOPG  = (SMF71VIN + SMF71VOT) / SECONDS;

   /* CALCULATE DEMAND PAGING RATE */
   DMNDPG = (SMF71PIN + SMF71POT) / SECONDS;

   /* CALCULATE TOTAL PAGING RATE  */
   TOTPG  =  SWAPPG + VIOPG + DMNDPG;

   /* CALCULATE COMMON PAGING RATE */
   COMPG = (SMF71SNI + SMF71SNO) / SECONDS;

   /* CALCULATE TOTAL SWAP RATE */
   TOTAL_SWAP = (SMF71TIS + SMF71LWS + SMF71DWS + SMF71ULS + SMF71NRS
              +  SMF71ASS + SMF71RSS + SMF71EXS + SMF71EES + SMF71TOS)
              /  SECONDS;

   /* CALCULATE TERMINAL INPUT SWAP RATE */
   TI_SWAP     =  SMF71TIS / SECONDS;

   /* CALCULATE LONG WAIT SWAP RATE */
   LW_SWAP     =  SMF71LWS / SECONDS;

   /* CALCULATE DETECTED WAIT SWAP RATE */
   DW_SWAP     =  SMF71DWS / SECONDS;

   /* CALCULATE UNILATERAL SWAP RATE */
   UNI_SWAP    =  SMF71ULS / SECONDS;

   /* CALCULATE REQUEST SWAP RATE - IF NON_SWAP */
   REQ_SWAP    =  SMF71NRS / SECONDS;

   /* CALCULATE AUX. STOR. SHORTAGE SWAP RATE */
   ASS_SWAP    =  SMF71ASS / SECONDS;

   /* CALCULATE REAL STORAGE SHORTAGE SWAP RATE */
   RSS_SWAP    =  SMF71RSS / SECONDS;

   /* CALCULATE EXCHANGE SWAP RATE */
   XCHG_SWAP   =  SMF71EXS / SECONDS;

   /* CALCULATE ENQUEUE SWAP RATE */
   ENQ_SWAP    =  SMF71EES / SECONDS;

   /* CALCULATE TERMINAL OUTPUT SWAP RATE */
   TO_SWAP     =  SMF71TOS / SECONDS;

 END REC71;
