*PROCESS MACRO,OPT(TIME),LC(60);
 /*     R E P O R T   ---   RMFRPT REPORT GENERATOR ROUTINE           */
 (SUBRG): REPORT: PROC /* THIS PROC GENERATES A REPORT - V1.04 */
                  (INT_PER_PAGE,INTERVAL,NO_LINES,DATEX,TIME_BEGIN,
                   TIME_END,TITLE,SMFXXSID,
                   PRNT,RESULTS,DESCRIBE_RESULTS,GRP_RESULTS,
                   DESCRIBE_GRP_RESULTS,DEV_RESULTS,
                   DESCRIBE_DEV_RESULTS,EXCEPT_VOLSER,TIME_INT_START);

   DEFAULT RANGE(I:N) VALUE(FIXED BIN(15)),
           RANGE(*)   STATIC;

 %DCL  @FIRST_GRP            FIXED;
 %DCL  @FIRST_DEV            FIXED;

 %@FIRST_GRP     =  500;    /* FIRST GROUP PARM = 500                */
 %@FIRST_DEV     =  600;    /* FIRST DEVICE PARM = 600               */

   /* FOLLOWING VARIABLES ARE PASSED TO THIS ROUTINE */
   DCL (INT_PER_PAGE,INTERVAL,NO_LINES) FIXED BIN(15),
       (TIME_BEGIN,TIME_END)  FIXED DEC(7),
        DATEX                 FIXED DEC(7),
        SMFXXSID                        CHAR(4),
        TITLE                           CHAR(71),
       1 PRNT(*),
         2 PARM             FIXED BIN(15),  /*  PARM NUMBER           */
         2 GROUP            FIXED BIN(15),  /*  GROUP NUMBER (IF ANY) */
         2 EXCEPT           FIXED BIN(15),  /*  EXCEPTION # (IF ANY)  */
         2 VOLSER           CHAR(6),        /*  VOLSER (DEVICES ONLY) */
         2 ADDR             CHAR(3),        /*  ADDR   (DEVICES ONLY) */
         2 CNTL             FIXED BIN(15),  /*  LINE CONTROL          */
         2 OFFSET           FIXED BIN(15),  /*  LINE OFFSET           */
         2 FMT              FIXED BIN(15),  /*  FORMAT F(8,FMT)       */
         2 DEVPTR           FIXED BIN(15),  /*  PTR INTO DEVICE ARRAY */
        RESULTS              ( *,*)  FLOAT DEC(6),
        DESCRIBE_RESULTS     (*)     CHAR(12),
        GRP_RESULTS          (*,*,*) FLOAT DEC(6),
        DESCRIBE_GRP_RESULTS (*,*)   CHAR(12),
        DEV_RESULTS          (*,*)   FLOAT DEC(6),
        DESCRIBE_DEV_RESULTS (*)     CHAR(12),
        EXCEPT_VOLSER        (*,*)   CHAR(6),
        TIME_INT_START       (*)     FIXED DEC(7),
        SYSPRINT              FILE;

   /* VARIABLES INTERNAL TO THIS ROUTINE */
   DCL (MOD,TRUNC,SUBSTR,CEIL,FLOAT)  BUILTIN,
       (N,J,I,II,LASTRI)   FIXED BIN(15),
       REZULT              FLOAT DEC(6);
   DCL (NLINE,NPAGE,IFMT,JOUT,ISTRT,IEND)
                     FIXED  BIN(15);
1  ISTRT = 1 - INT_PER_PAGE;  /* SO LOGIC BELOW WILL WORK     */
 /*********************************************************************/
 /*                                                                   */
 /*           MAJOR LOOP - PRINTS A PAGE OF DATA AT A TIME            */
 /*                                                                   */
 /*********************************************************************/
0  DO NPAGE = 1 TO CEIL(FLOAT(INTERVAL)/INT_PER_PAGE); /*MAX PAGES*/
     ISTRT = ISTRT + INT_PER_PAGE;
     IEND  = ISTRT + INT_PER_PAGE - 1;
     IF IEND > INTERVAL THEN IEND = INTERVAL;

     CALL HEADING;

     /* SET LAST REAL INTERVAL     */
     IF IEND = INTERVAL THEN LASTRI = IEND - 1;
     ELSE                    LASTRI = IEND;

     /* LOOP TO PRINT 1 LINE AT A TIME */
0    DO NLINE = 1 TO NO_LINES;
       /* IS PRINT CONTROLLING REQUESTED ? */
       SELECT (PRNT(NLINE).CNTL );
         WHEN (1) PUT SKIP;
         WHEN (2) CALL HEADING;
         OTHERWISE;    /* PRINT ON NEXT LINE */
       END;

       /* PRINT AN OUTPUT LINE */
       IFMT = PRNT(NLINE).FMT;
       JOUT = PRNT(NLINE).PARM;
0/*                           DEVICE PARM                             */
       IF      JOUT >= @FIRST_DEV THEN
          PUT EDIT (DESCRIBE_DEV_RESULTS(JOUT))
              (SKIP,A(15));
0/*                            GROUP PARM                             */
       ELSE IF JOUT >= @FIRST_GRP THEN
          PUT EDIT (DESCRIBE_GRP_RESULTS(JOUT,PRNT(NLINE).GROUP),
              PRNT(NLINE).GROUP)  (SKIP,A(12),F(3));
0/*                           SINGLE PARM                             */
       ELSE
          PUT EDIT (DESCRIBE_RESULTS(JOUT)) (SKIP,A(15));
0      /* IS OFFSET SPECIFIED FOR THIS LINE ? */
       IF PRNT(NLINE).OFFSET > 0 THEN
          PUT EDIT((' ' DO N = 1 TO PRNT(NLINE).OFFSET)) ((9)A);

       /* PRINT 1 COLUMN AT A TIME - UP TO INT_PER_PAGE COLUMNS */
0      DO J = ISTRT TO IEND;
0         /* EXTRACT VALUE FROM RESULTS,GRP_RESULTS OR DEV_RESULTS */
          IF J = INTERVAL & PRNT(NLINE).EXCEPT ^= 0 THEN REZULT = -.001;
          ELSE IF JOUT >= @FIRST_DEV THEN
             REZULT = DEV_RESULTS(PRNT(NLINE).DEVPTR,J);
          ELSE IF JOUT >= @FIRST_GRP THEN
             REZULT = GRP_RESULTS(JOUT,PRNT(NLINE).GROUP,J);
          ELSE
             REZULT = RESULTS(JOUT,J);
0         /* BY CONVENTION, -.001 INDICATES NO PARAMETER */
          IF REZULT < 0E0 THEN
             PUT EDIT (' ') (A(9));
          ELSE
             PUT EDIT (REZULT) (X(1),F(8,IFMT));
       END;     /* LOOP FOR PRINTING A COLUMN (INTERVAL) AT A TIME */
0/*********************************************************************/
 /*                                                                   */
 /*       FOR DEVICE PARMS, PRINT VOLSER/ADDR/EXCEPTION NUMBER        */
 /*                                                                   */
 /*********************************************************************/
       IF      JOUT >= @FIRST_DEV & PRNT(NLINE).EXCEPT = 0 THEN
          PUT EDIT(PRNT(NLINE).VOLSER,PRNT(NLINE).ADDR)
              (X( 3-PRNT(NLINE).OFFSET ),A(6),X(1),A(3));
0      ELSE IF JOUT >= @FIRST_DEV & PRNT(NLINE).EXCEPT ^= 0 THEN DO;
          PUT EDIT('*EXCPT',PRNT(NLINE).EXCEPT,'*')
              (X(2),A(6),F(3),A(1));
          PUT EDIT(' ') (SKIP,A(15));
          IF PRNT(NLINE).OFFSET > 0 THEN
             PUT EDIT((' ' DO N = 1 TO PRNT(NLINE).OFFSET)) ((9)A);
          PUT EDIT( ( EXCEPT_VOLSER(PRNT(NLINE).DEVPTR,J)
             DO J = ISTRT TO LASTRI) ) (X(3),A(6));
       END;     /* LOOP FOR PRINTING EXCEPTION VOLSERS */
0    END;       /* LOOP FOR PRINTING A FULL LINE  */
0  END;         /* MAJOR LOOP FOR PRINTING A PAGE */

1(SUBRG):HEADING: PROC;   /* PRINT 5 LINE HEADING */

    DCL HDNG                 CHAR(8),
        GREG                 CHAR(6),
        DAY_OF_WEEK          CHAR(9),
        TYPE          FIXED   BIN(31) INIT(1),
        WORK                 CHAR(6),
       (T1,T2)               CHAR(5),
        WEEKDAY       ENTRY EXTERNAL;

    /* CALL ROUTINE TO CONVERT DATE      */
    CALL WEEKDAY ( TYPE, DATEX, GREG, DAY_OF_WEEK);
    /* TYPE = 1 MEANS JULIAN DAY GIVEN AS DEC(7) - 00YYDDDF
       ROUTINE WILL RETURN: GREG AS CHAR(6)      - YYMMDD
                            DAY_OF_WEEK CHAR(9)  */

            PUT STRING (WORK )  EDIT (TIME_BEGIN) (P'999999');
            SUBSTR(T1  ,1,2) = SUBSTR(WORK,1,2);
            SUBSTR(T1  ,3,1) = ':';
            SUBSTR(T1  ,4,2) = SUBSTR(WORK,3,2);
            PUT STRING (WORK )  EDIT (TIME_END  ) (P'999999');
            SUBSTR(T2  ,1,2) = SUBSTR(WORK,1,2);
            SUBSTR(T2  ,3,1) = ':';
            SUBSTR(T2  ,4,2) = SUBSTR(WORK,3,2);

   PUT EDIT (SUBSTR(TITLE,1,71),'SYSID: ',SMFXXSID,
            DAY_OF_WEEK,SUBSTR(GREG,3,2),'/',SUBSTR(GREG,5,2),'/',
            DATEX, T1,' -> ',T2)
           (PAGE,A,X(1),(2)A,X(4),A,X(1),(4)A,P'99.999',
            X(2),(3)A);

   PUT SKIP(2) EDIT(' ') (X(3),A(12));
   DO I = ISTRT TO IEND;
     /* SETUP HEADING LINE */
     IF  I = INTERVAL  THEN HDNG = 'AVERAGES';
     ELSE DO;
            PUT STRING (WORK)  EDIT (TIME_INT_START(I)) (P'999999');
            SUBSTR(HDNG,1,2) = SUBSTR(WORK,1,2);
            SUBSTR(HDNG,3,1) = ':';
            SUBSTR(HDNG,4,2) = SUBSTR(WORK,3,2);
            SUBSTR(HDNG,6,1) = ':';
            SUBSTR(HDNG,7,2) = SUBSTR(WORK,5,2);
          END;
     PUT EDIT (HDNG)  (X(1),A(8));
   END;

   /* INDICATE MORE PAGES FOLLOW IF NOT LAST INTERVAL */
   IF IEND ^= INTERVAL THEN  PUT EDIT('+') (X(1),A);

   PUT SKIP(1) EDIT(' ') (X(3),A(12));
   PUT EDIT ((' --------' DO I = ISTRT TO IEND)) (A);
   PUT SKIP;

 END HEADING;

 END REPORT;
