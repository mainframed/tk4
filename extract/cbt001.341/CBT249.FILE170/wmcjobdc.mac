-*----------------------------------------------------------------------
 *
 *  TSO:  CLISTS WITH THE WMCJOB COMMAND
 *        Clist command to submit instream job (with symbolics replaced)
 *----------------------------------------------------------------------
0  The WMCJOB TSO command may be used in a TSO Clist to submit a batch
   job taking advantage of the clist symbolic replacing system. The JCL
   is contained within the clist and may have parameters for the clist
   included as part of the JCL or data statements. The clist may also
   build string variables to be used as JCL or data lines in the job.

0    Because of the greatly extended MVS TSO CLIST facilities, there
 are some requirements of a clist using the  WMCJOB command to
 submit a batch job from the clist.

0  If the rules outlined below are used in   the clist, the user
   may invoke the clist in the normal way (via SYSPROC and the
   clist name (implicit) or via the MVS EXEC or % methods (explicit).

   These clist rules  involve two parts:  (1) a symbol used in place
   of the "/*" two characters, and (2) the DATA-ENDDATA around
   the job to be submitted via WMCJOB.

    1) The symbol for the slash-asterick should have a different
       name from any clist parameter. It may be set to the string
       "/*" by the statment:  SET  &sym = &STR(/*)
       This must be done in the clist before the WMCJOB.

    2) The clist control statement "DATA" should be placed just
       after the WMCJOB command and the clist control statement
       "ENDDATA" should be placed at the end of the job. These
       protect the job from the clist processor. Without the
       data-enddata statements, each line of the job is
       examined by the clist processor which could result in
       error messages if the line looked like a clist statement.
       The line might look like a clist statement if it was part
       of an inline program containing an IF statement, for example.


   EXAMPLE:          (this clist is not intended to be used. it is
                      only an example for this explanation.)

        PROC 2 parm1 parm2  key1(default)
        SET  &slas = &STR(/*)
        FREE FILE(STACKOUT) /*comment - recommended in case prior error
        WMCJOB             /*  since WMCJOB uses STACKOUT
        DATA
        //#jobnam  JOB  (0000,aaaa),name,NOTIFY=&sysuid
        &slas.SETUP  TAPE  &parm2.  NORING  SL
        &slas.ROUTE  PRINT  &key1.
        //step  EXEC  PGM=&parm1.
        //sysprint DD SYSOUT=A
          ...rest of job...
        ENDDATA

  There should not be an end for WMCJOB clists.
  Note the use of &slas inplace of /* for SETUP and ROUTE cards.

  The GSTACKSTOP string as the first 10 characters on a clist line
 will still stop the WMCJOB. The clist could include multiple
 jobs with a CLIST IF statement to decide which one to do, using
 a GOTO to skip to the desired WMCJOB and its JCL.

  The CLIST STR function can be used to build entire lines of jcl
 from parameters for a WMCJOB job's JCL.

           SET &line = &STR(//RUN EXEC &parm )
           WMCJOB
           DATA
           //#.... JOB ....
           &line
           //.....

      where the &line line of the job is built in the CLIST.



