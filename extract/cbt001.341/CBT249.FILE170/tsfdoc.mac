1   The TSO GLOBAL SYMBOLIC FACILITY  TSF
0   A global symbol is a name that can be used in a TSO session
    much like a variable is used in a program in a higher level
    language. That is, you assign a value to the global symbol
    (variable) at some point, and later can use the global
    symbol in a context in which its current value is substituted
    for the symbol.

     There are three commands in the TSO global Symbolic Facility  (TSF)
     they are WMDROP, WMSET, and WMUSE.
0   ****************************
    *  Abstract of Function    *
    ****************************
0    WMSET

       The WMSET command may be used to define a global symbol name and
       to specify its value.

     WMDROP

       The WMDROP command may be used to remove a global symbol name
       definition. All global symbols are dropped at logoff.

     WMUSE

       The WMUSE command may be used to cause a global symbol name
       to be replaced by its current value and then cause the line
       to be issued as a command.  That is, the WMUSE command causes
       the symbolic value to replace the symbolic name in the command
       line.

     Details of each command and their syntax and usage follows:
1
    ***********
    * WMSET   *---------------------------------------------------------
    ***********
0    The WMSET command is used to define a symbol name and set its value
     If the symbol name already exists, its value is replaced.

   Syntax:
      WMSET symbolname   CONDCODE
                         USERID
                         TIME
                         DATE
                         Expression(arithmetic expression)
                         TO('string')
                                     SUBSTR(pos,len)
                                     PAD(char)/NOPAD/ZPAD

                     Note: some of these value types are available
                           directly in the MVS system clist variables
                           including &SYSTIME, &SYSDATE, &SYSUID, and &L
                           However, the WMSET variables are defined
                           for the session or until  WMDROP is used
                           whereas the MVS clist SET of a variable only
                           lasts for the life of the clist.


            symbolname   is the name for the symbolic variable.
                         it is limited to 8 characters and must be
                         all alphanumeric (not national).

            CONDCODE     causes the value of the symbol name to be the
                         return code set by the program run under call
                         or xcall (just before the WMSET command).

            USERID      causes the value to be the user's tso userid.

            TIME        causes the value to be the time of day in
                        HH.MM.SS.TH form

            DATE        causes the value to be set to the julian date.

            Expression  causes the value to be set to a character
                        string which is the signed value of an
                        arithmetic expression.

            TO          causes the value to be set to a character
                        string. the string should be enclosed in
                        single quotes. If a single quote is needed
                        in the string, two should be coded.  See
                        the SUBSTR and PAD/NOPAD/ZPAD operands for
                        additional string controls.

            SUBSTR      allows the user to truncate or extend a
                        symbolic value. The extension is goverened
                        by the PAD/NOPAD/ZPAD operand. The values
                        coded in the SUBSTR keyword are starting
                        position within the string and length for the
                        substring. If the length of the substring is
                        longer than the string coded, padding takes
                        place depending on the PAD/NOPAD/ZPAD option.

            PAD/NOPAD/ZPAD
                        PAD specifies the pad character for substring
                        extension if it is needed (see SUBSTR).

                        NOPAD indicates that padding is not to take
                        place ie. there will not be any extension
                        due to substring length.  NOPAD is the default.

                        ZPAD allows the used to indicate padding is
                        to be done using a value of hex '00'.

      examples:
             WMSET t TIME
             WMSET d DATE
             WMSET i USERID
             WMSET sym1 TO('this is a string')
             WMSET sub1 TO('abc') SUBSTR(1,10) pad(.)
                                   gives: abc.......
             WMSET sub1 TO('abc') SUBSTR(1,10)  NOPAD
                                   gives: abc
             WMSET sub2 TO('abcdefghijklmnop') SUBSTR(4,3)
                                   gives: def
             WMSET e1 E(2*3/2)

           The combination of SUBSTR and NOPAD allows a clist
           to insure a symbolic value is limited to a predefined
           maximum length.


    ***********
    * WMDROP  *---------------------------------------------------------
    ***********
0    The WMDROP command is used to remove a symbol name from the table
     of symbols.   Either ALL symbols or SELECTed names may be removed.
     All symbols are dropped at logoff.

   syntax:
        WMDROP ALL
        WMDROP SELECT(name1 name2 ...)
                                      default is SELECT

   example:  WMDROP S(sym1)
1

    **********
    * WMUSE  *----------------------------------------------------------
    **********
0      The WMUSE command is used to make symbolic value substitutions
       in a command line. The user must code a delimiter character.
       This delimiter character is then used to enclose symbol names
       which are to be replaced by their current value. The line is then
       invoked as a command line after all indicated symbolics are
       replaced.

   syntax:
         WMUSE dlm commandline

           dlm is any user selected delimiter character to be used to
           enclose symbolic names.

           any part of the command line may be a symbol to be
           replaced, even the command name.

      examples:
              WMUSE + TSEND +t+ +d+ +i+ +sym1+
              WMUSE + WMSET dup TO('+sym1+') SUBSTR(1,10) NOPAD

                If WMUSE is to be used to invoke a command under EDIT,
                the X subcommand may be needed twice. For example:
                   X  WMUSE + X TSEND +sym1+

                but if the WMUSE command is used under EDIT to invoke a
                subcommand, only one X is needed. For example:
                   x WMUSE + C 20 /stuff/+sym+/

                If an EDIT subcommand abbreviation and a command have
                the same name, use the full subcommand name to avoid
                the command being used. For example: the FIND EDIT
                subcommand abbreviation F is the same as the local
                command named F.

          The delimiter does not need to be separated from the first
          part of the command line (ie the blank is not needed).
                  ex:  WMUSE +tsend +sym1+

          The closing delimiter after a symbol name is required.


   ---------------------------------------------------------------------
1
       These commands may be useful in saving values from one clist
       for use in a later used clist.  An example of this is now
       available in the system clist file 'SYS2.TSOCLIST'. There are
       two clist which work together in this way:  TALKTO  and TALK.
       TALKTO accepts and saves a USERID to whom you want to send
       messages off and on during your session. The TALK clist allows
       you to send the messages without repeating that USERID each time.
       The DATE and TIME of the message are also added using MVS variabl
       The TALKTO clist only has the one positional USERID parameter. Th
       TALK clist has a keyword M for the message and optional keywords
       of WAIT and LOGON for the SEND options.

       examples:
              TALKTO  someid
              ....            other TSO commands
              TALK M('show message needs quotes') Wait
              TALK M('do not use both wait and logon') Logon


       It is also possible for the WMUSE command to invoke a clist after
       parameters are replaced from global symbols. See the
       JOBCARD and BPRINT (and BPRINT2) clists.

       It is also possible for these commands to be used in a clist
       which invokes the EDIT command to make changes to a MODEL
       dataset of JCL. After global symbols have been defined with the
       WMSET command, they could be used in change subcommands via the W
       command. Then the clist could invoke the TOBATCH subcommand to
       submit the changed job. Note that the MODEL JCL should NOT be
       saved after the changes are made.
0         For example:
                  assume the global symbols ACCT, PGMNUM, and NAME
                  have all been defined with the WMSET command. Then a
                  clist to illustrate the above idea is shown below:

                   PROC 1 dsn
                   EDIT model cntl
                   X WMUSE + C 10 /aaaa/+ACCT+/
                   X WMUSE + C 10 /0000/+PGMNUM+/
                   X WMUSE + C 10 /nnnn/+NAME+/
                   C 30 /dsthing/&dsn./
                   TOBATCH
                   END

