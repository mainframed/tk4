//JRLD4341 JOB T922,'DIAGNOSTIC FOR 4341 ',CLASS=C,NOTIFY=JRL
/*ROUTE    XEQ TEST
//*SETUP
/*ROUTE  PRINT REMOTE90
//*
//*            THIS IS JRL.SP.CNTL(DIAG4341)
//*
//S1      EXEC ASMFC,PARM.ASM='NODECK,NOOBJ,BUFSIZE(MAX)',
//             REGION=1024K
         TITLE 'SIMPLE DIAGNOSTIC FOR NEW PROCESSORS'
*
*        SO YOU SAY YOU HAVE A NEW PROCESSOR INSTALLED
*        IN YOUR SHOP AND YOUR BOSS WANTS TO RUN IT
*        AWHILE BEFORE INSTALLING IT.  JUST FOR FUN
*        YOU WRITE A DIAGNOSTIC TO EXCERSICSE MEMORY
*        AND SOME LOGIC... IBM WANTS TO RUN SOMETHING
*        AND YOUR BOSS WANTS TO SEE SOME FLASHING LIGHTS.
*        SO WHAT WE HAVE IS THE FOLLOWING...
*
*        THE BC MODE PSW WILL SHOW A NUMBER IN THE
*        INTERRUPTION CODE FIELD IN INCREASING ORDER....
*        THIS NUMBER IS SOMEWHAT BEHIND THE DATA STORED...
*        WATCH GPR 15, IT CONTAINS A COUNT OF SUCESSFUL RUNS.
*        GET A WAIT STATE AND YOU HAVE AN UNEXPECTED
*        INTERRUPT, I.E. EXTERNAL=1; SUPERVISOR=2;
*        M/C=3; AND I/O=4.
*
*        ROUTINE DESIGNED BY J.R. LEWIS
*        FOR THE 4341-2 INSTALLATION AT
*        KAISER STEEL... 10/82
DIAG     START 0
         USING *,0
         DC    X'00040000'         RESUME PSW HAS M-C
         DC    A(STARTUP)          STARTUP ADDRESS
         ORG   DIAG+X'48'          CAW LOCATION
CAW      DS    A(0)                CHANNEL ADDRESS WORD
         ORG   DIAG+X'58'          NEW PSW LOCATIONS
ENPSW    DS    0D                  EXTERNAL NEW PSW
         DC    X'00020000'         WAIT
         DC    X'00000001'         AND FLAG
SNPSW    DS    0D                  SUPERVISOR NEW PSW
         DC    X'00020000'         WAIT
         DC    X'00000002'         AND FLAG
PNPSW    DS    0D                  PROGRAM NEW PSW
         DC    X'00040000'         M-C ENABLED
         DC    A(PC)               RESUME POINT
MNPSW    DS    0D                  MACHINE-CHECK NEW PSW
         DC    X'00020000'         M-C ENABLED
         DC    X'00000003'         RESUME POINT
INPSW    DS    0D                  I/O NEW PSW
         DC    X'00020000'         WAIT
         DC    X'00000004'         AND FLAG
         EJECT
         ORG   DIAG+512
*
*        INITILIZATION
*
STARTUP  LA    DEV,X'014'          CONSOLE ADDRESS
         LA    CTR15,0             INIT SUCCESSFUL COUNTER
         LA    ONE,1               A ONE
*
*        MAIN LOOP
*
L1       LA    LOC1,1024           START LOCATION
*
L2       STC   CTR15,0(LOC1)       STORE VALUE IN MEMORY
         AR    LOC1,ONE            BUMP POINTER
         B     L2                  LOOP UNTIL PROGRAM CHECK
*
*        RETREIVE DATA
*
PC       DS    0H                  PROGRAM CHECK ENTER
*
L3       LA    LOC2,1024           START LOCATION FOR 2ND HALF
*
L4       IC    R0,0(LOC2)          GET STORED DATA
         AR    LOC2,ONE            BUMP POINTER
         CR    LOC1,LOC2           UPPER LIMIT?
         BNE   L4                  NOT YET
*
*        MAIN LOOP COMPLETED, INDICATE COUNTER
*
         AR    CTR15,ONE           SUCESSFUL LOOP
         CVD   CTR15,WORK1         WORK AREA
         UNPK  DATAREA(8),WORK1+4(4) TO DATA
         OI    DATAREA+7,X'F0'     SET BITS
*
*        DO I/O TO CONSOLE
*
         MVC   CAW(4),CCW1A        ADDRESS OF CCW
TIO      TIO   0(DEV)              CLEAR I/O
         BC    7,TIO               DO AGAIN, BUSY
         SIO   0(DEV)              PERFORM I/O
         B     L1                  START OVER
*
*        REGISTER ASSIGNMENTS
*
R0       EQU   0                   TEMPORARY DATA
LOC1     EQU   10                  FIRST LOCATION
LOC2     EQU   11                  SECOND LOCATION
DEV      EQU   14                  DEVICE ADDRESS
CTR15    EQU   15                  SUCCESSFUL LOOP COUNTER
ONE      EQU   13                  LOCATION OF A ONE
*
*        DATA AREAS
*
WORK1    DC    D'0'               WORKAREA
CCW1     CCW   X'05',DATA,0,DL    ERASE WRITE
CCW1A    DC    A(CCW1)            ADDRESS FOR CAW
DATA     DC    X'C4'              SOUND ALARM
DATAREA  DC    C'00000000'        DATA AREA FOR COUNTER
         DC    C' PASSES.'
DL       EQU   *-DATA
         END   DIAG
