VTRD     TITLE 'XVTCREAD - VTOC READING SUBROUTINE'
* STATUS:  VERSION 2, 8 MARCH 1982.
         PUNCH '  SETSSI  02082067'
         SPACE
* AUTHOR:  R. F. MORSE, MIT INSTRUMENTATION LABORATORY.
         SPACE
* FUNCTION: THIS SUBROUTINE READS THE VOLUME TABLE OF CONTENTS (VTOC)
*        FROM A DIRECT-ACCESS DEVICE AND PRESENTS IT TO THE CALLER
*        ONE RECORD (DSCB) AT A TIME.
*        ALSO, AT OPEN, IT IS DETERMINED WHETHER THIS VTOC IS INDEXED
*        OR NOT, AND PASSES A PARMATER LIST BACK TO THE CALLING PROGRAM
*        GIVING ALL THE INDEXED INFORMATION.
         SPACE
* OPERATION: THIS ROUTINE IS A SPECIALIZED SEQUENTIAL ACCESS METHOD
*        FOR VTOC'S.  ITS ADVANTAGE OVER ORDINARY BSAM IS THAT IT READS
*        AN ENTIRE TRACK IN ONE REVOLUTION, THUS SAVING CONSIDERABLE
*        TIME.  THE ROUTINE HAS THREE CALL MODES:
*
*        0 - READ.  RETURNS WITH THE CORE ADDRESS OF A DSCB IN REGISTER
*              1.  THE CORE CONSISTS OF 148 CONSECUTIVE BYTES, CONTAIN-
*              ING THE COUNT (8 BYTES), KEY (44 BYTES), AND DATA (96
*              BYTES) FOR ONE DSCB.  RETURN CODES ARE:
*                      0 - NORMAL;
*                      4 - END OF FILE, NO DATA PRESENTED;
*                      8 - PERMANENT I/O ERROR.  THE KEY AND DATA AREAS
*                          WILL BE SET TO ZEROS; THE COUNT AREA WILL
*                          CONTAIN THE CORRECT CCHHR.  SINCE READING
*                          IS DONE A TRACK AT A TIME, ALL THE DSCB'S
*                          FOR THAT TRACK WILL BE MARKED IN ERROR.
*                          READING MAY CONTINUE ON TO THE NEXT TRACK.
*
*        1 - OPEN.  REGISTER 1 SHOULD POINT TO THE ADDRESS OF THE
*              VTRDPARM (VTOC READ PARAMETER LIST).  THE FIRST 8
*              BYTES OF THE PARAMETER LIST CONTAINS THE DDNAME TO
*              BE USED IN THE DCB.  THE CORRESPONDING DD CARD
*              SHOULD SPECIFY A DISPOSITION OF (OLD,KEEP).
*              RETURN CODES:
*                      0 - NORMAL;
*                      4 - UNABLE TO OPEN (PROBABLY MISSING DD CARD);
*                      8 - DD CARD DID NOT REFER TO A DIRECT-ACCESS
*                          DEVICE, OR DEVICE TYPE UNKNOWN;
*                     12 - ERROR IN CVAF PROCESSING FOR INDEXED VTOC.
*
*        2 - CLOSE.  NO ARGUMENTS ARE REQUIRED OR RETURNED.  RETURN
*              CODE IS 0.
         SPACE
* ENTRY POINTS:  ENTRY IS ALWAYS TO 'XVTCREAD' VIA A BALR 14,15 WITH
*        REGISTER 13 SET TO A SAVE AREA.  REGISTER 0 CONTAINS A
*        BINARY INTEGER TO INDICATE THE CALL MODE AND REGISTER 1
*        POINTS TO THE ADDRESS OF THE PARAMETER LIST.
         SPACE
* DATA SETS:  READS VOLUME TABLE OF CONTENTS FROM ANY DIRECT-ACCESS
*        DEVICE.  USES EXCP TO EXECUTE A CHAINED CHANNEL PROGRAM TO
*        READ AN ENTIRE TRACK AT A TIME.
         SPACE
* EXTERNAL ROUTINES:  USES SUPERVISOR ROUTINE 'IECPCNVT' TO CONVERT
*        A RELATIVE TRACK NUMBER TO AN ABSOLUTE ADDRESS.
         SPACE
* EXITS - NORMAL:  RETURNS VIA REGISTER 14 WITH RETURN CODE IN REGISTER
*        15.  (SEE ABOVE FOR RETURN CODE VALUES.)
         SPACE
* EXITS - ERROR:  NONE.
         SPACE
* TABLES AND WORK AREAS:  DOES A GETMAIN TO OBTAIN A BUFFER LARGE
*        ENOUGH TO HOLD AN ENTIRE TRACK FROM THE DEVICE BEING READ.
*        THIS AREA MAY BE AS LARGE AS 9900 BYTES (FOR 2301 DRUM).
         SPACE
* ATTRIBUTES:  SERIALLY REUSABLE.
         EJECT
* DSECTS
         SPACE 1
XTNTDS   DSECT ,                   VOLUME FREE SPACE EXTENT DSECT
XTNTFP   DS    A                   FORWARD POINTER ADDRESS
XTNTBP   DS    A                   BACKWARD POINTER ADDRESS
XTNTCT   DS    CL1                 NUMBER OF EXTENTS IN ENTRY
XTNTINFO DS    0CL5                FREE SPACE EXTENT DESRIPTOR
XTNTRTA  DS    CL2                 STARTING RELATIVE TRACK ADDRESS
XTNTNWC  DS    CL2                 NUMBER OF WHOLE CYLINDERS IN EXTENT
XTNTNAT  DS    CL1                 NUMBER OF ADDITIONAL TRACKS
         DS    254CL5              REMAINING ENTRIES IN LIST
XTNTDSL  EQU   *-XTNTDS            EXTENT DSECT LENGTH
XTNTN    EQU   255                 NUMBER OF EXTENT ENTRIES
         SPACE 2
VTRDPARM DSECT ,                   VTOC READ PARAMETER LIST DSECT
VTRDDDNM DS    CL8                 DDNAME FOR OPEN
VTRDRCDA DS    A                   RECORD ADDRESS
VTRDXTLA DS    A                   EXTENT LIST ADDRESS
VTRDDC   DS    F                   NUMBER OF FREE DSCB S
VTRDIC   DS    F                   NUMBER OF FREE VIRS
VTRDDVTP DS    CL1                 DASD DEVICE TYPE
VTRDVT   DS    CL1                 VTOC TYPE (OS OR INDEXED)
VTRDSTAT DS    CL3                 CVAF RETURN STATUS
VTRDRC   DS    CL2                 VTOC RETURN CODE
         EJECT
* SECTION DEFINITION AND REGISTER ASSIGNMENTS:
         SPACE
XVTCREAD CSECT
         SPACE 2
         PRINT NOGEN
         REGEQU
RWA      EQU   R2
RWB      EQU   R3
RWC      EQU   R4
RPARM    EQU   R9
RRCODE   EQU   R10             RETURN CODE REGISTER
RRET     EQU   R11             LOCAL SUBROUTINE EXIT REGISTER
RBASE    EQU   R12             LOCAL BASE REGISTER
         SPACE 3
* TAGS FOR CHANNEL COMMANDS AND FLAG BITS:
         SPACE
READR0   EQU   X'16'           READ RECORD 0
READCKD  EQU   X'1E'           READ COUNT, KEY, AND DATA
         SPACE
CC       EQU   X'40'           COMMAND CHAIN FLAG
SLI      EQU   X'20'           SUPPRESS LENGTH INDICATION FLAG
SKIP     EQU   X'10'           SKIP DATA TRANSFER FLAG
         SPACE 3
* COMMUNICATION VECTOR TABLE (CVT) DEFINITIONS:
         SPACE
CVT      EQU   16              LOCATION OF CVT BASE ADDRESS
CVTPCNVT EQU   28              OFFSET TO CONVERT ROUTINE ADDRESS
         EJECT
************
* PROLOGUE *
************
         SPACE
* ENTER HERE AND PERFORM STANDARD REGISTER SAVE AREA HOUSEKEEPING.
         SPACE
         SAVE  (14,12),,XVTCREAD-02082067
         SPACE
         LR    RBASE,R15               SET LOCAL BASE REGISTER
         USING XVTCREAD,RBASE
         LR    R14,R13                 SAVE CALLER'S R13
         LA    R13,SAVEAREA            ADDRESS LOCAL SAVE AREA
         ST    R13,8(R14)              CHAIN FORWARD
         ST    R14,SAVEAREA+4          CHAIN BACKWARD
         SR    RRCODE,RRCODE           ZERO RETURN CODE REGISTER
         L     RPARM,0(,R1)        LOAD ADDRESS OF PARMLIST
         USING VTRDPARM,RPARM      ESTABLISH ADDRESSABILITY
         SPACE
* SELECT MODE FROM CONTENTS OF REGISTER 0.
         SPACE
         LA    RWA,3                   MASK FOR LOW 2 BITS
         NR    RWA,R0                  GET CALL MODE
         SLL   RWA,2                   MODE TIMES 4
         B     *+4(RWA)                BRANCH ON MODE
         SPACE
         B     GET                     MODE 0, GET A DSCB
         B     OPEN                    MODE 1, OPEN A NEW VTOC
         B     CLOSE                   MODE 2, CLOSE
         B     RETURN0                 MODE 3 NOT DEFINED, NO OP
         SPACE 3
***********
* RETURNS *
***********
         SPACE
RETURN12 LA    RRCODE,4(RRCODE)        ENTRY FOR RETURN CODE 12
RETURN8  LA    RRCODE,4(RRCODE)        ENTRY FOR RETURN CODE 8
RETURN4  LA    RRCODE,4(RRCODE)        ENTRY FOR RETURN CODE 4
RETURN0  LR    R15,RRCODE              ENTRY FOR RETURN CODE 0
         SPACE
         L     R13,SAVEAREA+4          RECOVER CALLER'S SAVE AREA
         L     R14,12(R13)             LOAD RETURN ADDRESS
         LM    R2,R12,28(R13)          RESTORE OTHER GENERAL REGISTERS
         MVI   12(R13),X'FF'           SET RETURN FLAG ON
         BR    R14                     RETURN TO CALLER
         EJECT
*********************
* MODE 0 - GET DSCB *
*********************
         SPACE
* IF END-OF-FILE WAS REACHED, RETURN AT ONCE.
         SPACE
GET      DS    0H
         TM    MODESW,EOFSW            TEST END-OF-FILE BIT
         BO    RETURN4                 RETURN CODE 4 IF ON
         SPACE
* IF CHANNEL PROGRAM HAS BEEN STARTED, GO TO CHECK IT.  OTHERWISE,
* ASSUME THERE IS AT LEAST ONE FULL BUFFER.
         SPACE
         TM    MODESW,XCPRUN           TEST IF EXCP ISSUED
         BO    XCPTEST                 BRANCH IF SO
         SPACE
* SET BUFFER ADDRESS TO NEXT DSCB AND TEST IF LAST ON TRACK.  IF NOT,
* EXIT WITH ITS ADDRESS IN R1.
         SPACE
         L     RWA,DSCBADR             LOAD BUFFER POINTER
         LA    RWA,148(RWA)            ADVANCE TO NEXT DSCB
NDXSTORE ST    RWA,DSCBADR             STORE UPDATED POINTER
         C     RWA,DSCBLIM             TEST IF LAST DSCB IN BUFFER
         BNL   LASTDSCB                BRANCH IF SO
         LR    R1,RWA                  PASS ADDRESS TO USER
GETOUT   TM    MODESW,RDERR            TEST IF ERROR ON THIS TRACK
         BZ    RETURN0                 RETURN CODE 0 IF NOT
         B     RETURN8                 RETURN CODE 8 IF ERROR
         SPACE
* IF THIS IS THE LAST DSCB, MOVE IT TO THE JFCB BUFFER AND START
* READING THE NEXT TRACK.
         SPACE
LASTDSCB MVC   JFCB(148),0(RWA)        MOVE LAST DSCB
         L     RWB,TTRN                LOAD RELATIVE TRACK NUMBER
         AL    RWB,=X'00010000'        INCREMENT TO NEXT TRACK
         ST    RWB,TTRN
         BAL   RRET,EXCP               START CHANNEL PROGRAM
         LA    R1,JFCB                 LOAD DSCB ADDRESS FOR CALLER
         B     GETOUT                  TO RETURN
         EJECT
* WAIT FOR CHANNEL PROGRAM COMPLETION AND TEST THE OUTCOME.
         SPACE
XCPTEST  WAIT  ECB=VTOCECB
         SPACE
         NI    MODESW,X'FF'-XCPRUN     TURN EXCP STARTED BIT OFF
         CLI   VTOCECB,X'7F'           TEST COMPLETION CODE
         BNE   PERMERR                 BRANCH IF ERROR
SETDSCBA L     RWA,DSCBSTRT            SET BUFFER POINTER TO 1ST DSCB
         B     NDXSTORE
         SPACE
* PERMANENT ERROR FOR THIS TRACK.  ZERO THE DSCB'S AND FILL IN THE
* CCHHR PORTIONS OF THE COUNT AREAS.
         SPACE
PERMERR  OI    MODESW,RDERR            SIGNAL READ ERROR
         NI    IOBFLAG1,X'FB'          TURN OFF BIT 5 OF IOB FLAG
         NI    DCBIFLGS,X'3F'          TURN OFF BITS 0 AND 1
         L     RWA,DSCBSTRT            LOAD ADDRESS OF FIRST DSCB
         LA    RWB,1                   LOAD RECORD NUMBER
         SPACE
DSCBELUP XC    0(148,RWA),0(RWA)       ZERO DSCB BUFFER
         MVC   0(4,RWA),IOBSEEK+3      INSERT CCHH IN COUNT FIELD
         STC   RWB,4(RWA)              INSERT R IN COUNT FIELD
         LA    RWA,148(RWA)            POINT TO NEXT BUFFER
         LA    RWB,1(RWB)              INCREMENT RECORD NUMBER
         C     RWA,DSCBLIM             TEST FOR LAST BUFFER
         BNH   DSCBELUP
         B     SETDSCBA                BRANCH TO RESET BUFFER POINTER
         EJECT
*****************
* MODE 1 - OPEN *
*****************
         SPACE
* ENTER WITH A DDNAME ADDRESSED BY REGISTER 1.  PERFORM CLOSE
* SUBROUTINE FIRST TO BE SURE EVERYTHING IS INITIALIZED.
         SPACE
OPEN     DS    0H
         BAL   RRET,CLOSESUB           CALL CLOSE SUBROUTINE
         SPACE
         MVC   DCBDDNAM(8),VTRDDDNM    INSERT DDNAME IN DCB
         SPACE
* CHECK DEVICE TYPE TO BE SURE IT IS DIRECT ACCESS.
         SPACE
         DEVTYPE  DCBDDNAM,DWORK       GET DEVICE TYPE
         LTR   R15,R15                 TEST IF IT FOUND DD CARD
         BNZ   RETURN4                 ERROR, DD CARD MISSING
         CLI   DWORK+2,X'20'           TEST DEVICE TYPE
         BNE   RETURN8                 ERROR IF NOT DIRECT ACCESS
         SPACE
         CLI   DWORK+3,MAXDVT          TEST FOR MAX DEVICE TYPE
         BH    RETURN8                 ERROR IF TOO LARGE
         MVC   VTRDDVTP,DWORK+3        MOVE DEVICE TYPE TO PARM LIST
         SR    R1,R1
         IC    R1,DWORK+3              LOAD DEVICE NUMBER
         SLL   R1,1                    MULTIPLY BY 2
         IC    R1,DVICETAB(R1)         LOAD DSCB'S/TRK FROM TABLE
         LTR   R1,R1                   ZERO IS UNDEFINED DEVICE
         BZ    RETURN8                 EXIT IF UNKNOWN
         ST    R1,NDSCBS               STORE NUMBER OF DSCB'S/TRACK
         SPACE
* READ JFCB AND INSERT DATA SET NAME OF 44 X'04'.
         SPACE
         RDJFCB  VTOCDCB
         MVI   JFCBDSNM,X'04'          GENERATE DATA SET NAME
         MVC   JFCBDSNM+1(43),JFCBDSNM
         SPACE
* OPEN THE DSCB.
         SPACE
         OPEN  (VTOCDCB,(INPUT)),TYPE=J
         TM    DCBOFLGS,OPENBIT        TEST IF OPEN WORKED
         BZ    RETURN4                 ERROR IF OPEN FAILED
         SPACE
* IF INDEXED VTOC, GET INDEXED INFORMATION
         SPACE
         MVI   VTRDVT,C'O'         INITIALIZE PARAMETER LIST
         MVC   VTRDRCDA,=A(0)
         MVC   VTRDXTLA,=A(0)
         MVC   VTRDDC,=A(0)
         MVC   VTRDIC,=A(0)
         MVC   VTRDSTAT,=C'000'
         MVC   VTRDRC,=C'00'
         MVC   CVLBL,=C'CVPL'      INITIALIZE CVPL
         LA    RWA,CVPLNGTH        LOAD LENGTH OF CVPL
         STH   RWA,CVLTH           STORE IN CVPL
         L     RWA,DCBDEBAD        GET ADDRESS OF VTOC'S DEB
         L     RWB,DEBSUCBA(,RWA)  GET ADDRESS OF VTOC'S UCB
         CVAFTST UCB=(RWB)         Q/ VTOC INDEXED
         CH    R15,=H'8'
         BNE   POSTOPEN            NO, BYPASS INDEXED PROCESSING
         MVI   VTRDVT,C'I'         INDICATE INDEXED VTOC
         CVAFDSM ACCESS=MAPDATA,MAP=INDEX,DEB=(RWA),COUNT=YES,         X
               CTAREA=VTRDIC,MF=(E,CVPL)
         LTR   R15,R15             Q/ NORMAL RETURN
         BNZ   CVAFERR             NO, GO TO CVAF ERROR PROCESSING
         CVAFDSM ACCESS=MAPDATA,MAP=VTOC,DEB=(RWA),COUNT=YES,          X
               CTAREA=VTRDDC,MF=(E,CVPL)
         LTR   R15,R15             Q/ NORMAL RETURN
         BNZ   CVAFERR             NO, GO TO CVAF ERROR PROCESSING
         SLR   RWB,RWB             ZERO WORK REGISTER
XTNTLP   DS    0H
         USING XTNTDS,RWB          ESTABLISH ADDRESSABILITY TO DSECT
         LA    R0,XTNTDSL          GET LENGTH OF XTNT DSECT
         GETMAIN R,LV=(0)          GET STORAGE FOR IT
         LTR   RWB,RWB             Q/ PREVIOUS XTNT DSECT
         BNZ   XTNTLP1             YES, GO TO XTNTLP1
         LR    RWB,R1              LOAD BASE FOR DSECT
         SLR   RWC,RWC             ZERO REGISTER
         ST    RWB,VTRDXTLA        STORE ADDRESS INTO PARAMETER LIST
         ST    RWC,XTNTFP          SET UP FORWARD LINKAGE TO ZERO
         ST    RWC,XTNTBP          SET UP BACKWARD LINKAGE TO ZERO
         STCM  RWC,3,XTNTRTA-2     SET UP STARTING RTA
         B     XTNTLP2             GO AROUND
XTNTLP1  DS    0H
         ST    R1,XTNTFP           SET UP LINKAGE
         LR    RWC,RWB             SAVE PREVIOUS DSECT ADDRESS
         LR    RWB,R1              LOAD NEW DSECT ADDRESS
         ST    RWC,XTNTBP          SET UP LINKAGE BACKWARDS
         SLR   R5,R5               ZERO REGISTERS FOR
         LR    R1,R5                  ICM INSTRUCTIONS
         LR    R0,R5               ZERO FOR MULTIPLY
         LR    R6,R5               ZERO FOR IC
         ICM   R5,3,XTNTDSL-7(RWC) GET LAST RTA FOUND
         ICM   R1,3,XTNTDSL-5(RWC) GET NUMBER OF WHOLE CYLS
         IC    R6,VTRDDVTP         GET DEVICE TYPE
         SLL   R6,1                MULTIPLY BY 2
         IC    R6,DVICETAB+1(R6)   GET NUMBER OF TRACKS PER CYLINDER
         MR    R0,R6               GET NUMBER OF TRACKS
         AR    R0,R5               ADD STARTING ADDRESS
         IC    R6,XTNTDSL-1(RWC)   GET NUMBER OF ADDITIONAL TRACKS
         AR    R6,R0               GET END OF EXTENT RTA
         LA    R6,1(,R6)           AND ADD 1
         STCM  R6,3,XTNTRTA-2      SET STARTING RTA
XTNTLP2  DS    0H
         LA    R6,XTNTN            LOAD NUMBER OF ENTRIES
         STC   R6,XTNTCT           STORE INTO DSECT
         NI    CVFL2,255-CV2CNT    RESET COUNT = YES
         CVAFDSM ACCESS=MAPDATA,MAP=VOLUME,EXTENTS=XTNTDS+8,DEB=(RWA), X
               MF=(E,CVPL)
         LTR   R15,R15             Q/ MORE EXTENTS
         BZ    XTNTLP              YES, LOOP BACK
         CH    R15,=H'4'           Q/ END OF FILE RC
         BNE   CVAFERR             NO, GO PROCESS CVAF ERROR
         CLI   CVSTAT,STAT032      Q/ END OF FILE STATUS
         BE    POSTOPEN
CVAFERR  DS    0H
         SLR   RWA,RWA             ZERO REGISTER
         IC    RWA,CVSTAT          GET STATUS
         CVD   RWA,DWORK           CONVERT TO DECIMAL
         UNPK  VTRDSTAT,DWORK      CONVERT TO DISPLAYABLE CHARS
         OI    VTRDSTAT+2,X'F0'    MAKE UNSIGNED
         CVD   R15,DWORK           CONVERT RETURN CODE TO DECIMAL
         UNPK  VTRDRC,DWORK        CONVERT TO DISPLAYABLE CHARS
         OI    VTRDRC+1,X'F0'      MAKE UNSIGNED
         SLR   R15,R15             ZERO R15
         B     RETURN12            SET RETURN CODE OF 12
         DROP  RWB
         SPACE
* OBTAIN CORE FOR CHANNEL PROGRAM AND DSCB BUFFERS.
         SPACE
POSTOPEN DS    0H
         LA    R0,156                  CORE FOR ONE DSCB AND ITS CCW
         MH    R0,NDSCBS+2             TIMES NUMBER PER TRACK
         AH    R0,=H'15'               PLUS 1 CCW AND ROUNDING
         N     R0,=X'FFFFFFF8'         ROUND TO DOUBLE-WORD MULTIPLE
         ST    R0,CBSIZE               SAVE SIZE OF GOTTEN CORE
         GETMAIN  R,LV=(0)             GET TRACK BUFFERS
         ST    R1,CBADDR               SAVE ADDRESS OF GOTTEN CORE
         OI    MODESW,CBGOT            INDICATE CORE GOTTEN
         SPACE
* GENERATE CHANNEL PROGRAM.  IT CONSISTS OF A 'READ R0' ORDER WITH
* THE SKIP FLAG ON, FOLLOWED BY A 'READ COUNT-KEY-AND-DATA' ORDER FOR
* EACH DSCB.
         SPACE
         L     RWA,NDSCBS              NUMBER OF DSCB'S
         SLL   RWA,3                   TIMES   8
         LA    RWA,8(RWA,R1)           PLUS 8 AND BASE = 1ST BUFFER ADD
         ST    RWA,DSCBSTRT            SAVE ADDRESS OF FIRST BUFFER
         SPACE
         ST    R1,IOBSTART             ADDRESS OF CHANNEL PROGRAM
         MVC   0(8,R1),INITCCW         INSERT FIRST CCW
         LA    RWB,8(R1)               PLACE FOR NEXT CCW
         LA    RWC,1                   BUFFER COUNTER
         SPACE
CCWLOOP  MVC   0(8,RWB),READCCW        INSERT READ CCW FOR ONE DSCB
         ST    RWA,0(RWB)              SET ITS BUFFER ADDRESS
         MVI   0(RWB),READCKD          RESTORE COMMAND CODE
         C     RWC,NDSCBS              TEST BUFFER COUNTER
         BNL   LASTCCW                 BRANCH IF LAST BUFFER
         LA    RWB,8(RWB)              INCREMENT CCW ADDRESS
         LA    RWA,148(RWA)            INCREMENT BUFFER ADDRESS
         LA    RWC,1(RWC)              INCREMENT BUFFER COUNTER
         B     CCWLOOP                 DO NEXT BUFFER
         SPACE
LASTCCW  NI    4(RWB),X'FF'-CC         TURN OFF COMMAND CHAIN BIT
         ST    RWA,DSCBLIM             SAVE ADDRESS OF LAST DSCB BUFFER
         SPACE
* SET OTHER THINGS AND START PROGRAM TO FILL BUFFER.
         SPACE
         SR    R0,R0
         ST    R0,TTRN                 SET RELATIVE TRACK NUMBER TO 0
         NI    MODESW,X'FF'-XCPRUN-RDERR-EOFSW   SET FLAGS OFF
         BAL   RRET,EXCP               START CHANNEL PROGRAM
         B     RETURN0                 INDICATE SUCCESSFUL OPEN
         EJECT
******************
* MODE 2 - CLOSE *
******************
         SPACE
CLOSE    BAL   RRET,CLOSESUB           CALL CLOSED CLOSE SUBROUTINE
         B     RETURN0
         SPACE 2
* IF THE CHANNEL PROGRAM IS RUNNING, WAIT FOR IT BEFORE TAKING FURTHER
* ACTION.
         SPACE
CLOSESUB DS    0H
         TM    MODESW,XCPRUN           TEST IF CHANNEL PROGRAM RUNNING
         BZ    NOEXCP                  BRANCH IF NOT
         WAIT  ECB=VTOCECB             WAIT UNTIL COMPLETE
         NI    MODESW,X'FF'-XCPRUN     TURN RUNNING SWITCH OFF
NOEXCP   DS    0H
         SPACE
* CLOSE THE DCB.
         SPACE
         TM    DCBOFLGS,OPENBIT        TEST IF DCB OPEN
         BZ    NOCLOSE                 BRANCH IF NOT
         CLOSE VTOCDCB
NOCLOSE  DS    0H
         SPACE
* RELEASE CORE OBTAINED FOR DSCB BUFFERS AND INDEX
         SPACE
         TM    MODESW,CBGOT            TEST IF CORE GOTTEN
         BZ    INDEXFRE                BRANCH IF NOT
         LM    R0,R1,CBSIZE            LOAD SIZE AND LOCATION
         FREEMAIN  R,LV=(0),A=(1)      FREE CORE
         NI    MODESW,X'FF'-CBGOT      SET CORE GOTTEN BIT OFF
INDEXFRE DS    0H
         CLI   VTRDVT,C'I'         Q/ INDEXED VTOC
         BNE   NOFREE              NO, GO TO NO FREE
         L     RWC,VTRDXTLA        LOAD ADDRESS OF EXTENT LIST
         LTR   RWC,RWC             Q/ IS THERE AN EXTENT LIST TO FREE
         BZ    NOFREE              NO, GO TO NO FREE
         MVC   VTRDXTLA,=A(0)      INDICATE NO MORE EXTENT LIST
INDEXFR1 DS    0H
         LA    R0,XTNTDSL          LOAD SIZE OF AREA
         LR    R1,RWC              LOAD ADDRESS FOR FREEMAIN
         L     RWC,0(RWC)          SAVE ADDRESS OF NEXT ONE
         FREEMAIN R,LV=(0),A=(1)   FREE CORE
         LTR   RWC,RWC             Q/ ANOTHER ONE
         BNZ   INDEXFR1            YES, LOOP BACK
NOFREE   DS    0H
         SPACE
         NI    MODESW,X'FF'-RDERR      CLEAR ERROR SWITCH
         BR    RRET
         EJECT
****************
* EXCP ROUTINE *
****************
         SPACE
* CONVERT RELATIVE TRACK ADDRESS IN 'TTRN' TO ABSOLUTE SEEK ADDRESS IN
* 'IOBSEEK', USING SUPERVISOR CONVERSION ROUTINE.
         SPACE
EXCP     DS    0H
         STM   R2,R13,EXCPSAVE         SAVE IMPORTANT REGISTERS
         L     R0,TTRN                 LOAD RELATIVE TRACK NUMBER
         L     R1,DCBDEBAD             LOAD DEB ADDRESS
         LA    R2,IOBSEEK              LOAD ADDR TO RECEIVE MBBCCHHR
         L     R15,CVT                 LOAD CVT ADDRESS
         L     R15,CVTPCNVT(R15)       LOAD ADDR OF CONVERT ROUTINE
         BALR  R14,R15                 CONVERT TTRN TO MBBCCHHR
         DROP  RBASE                   THAT CLOBBERED BASE REG
         USING *,R14                   R14 SET BY BALR ABOVE
         LM    R2,R13,EXCPSAVE         RESTORE REGISTERS
         DROP  R14
         USING XVTCREAD,RBASE          BASE REGISTER RECOVERED
         LTR   R15,R15                 TEST IF EXTENT VIOLATED (RC=4)
         BNZ   SETEOF                  IF SO, MEANS END-OF-FILE
         SPACE
* ZERO ECB AND START CHANNEL PROGRAM.
         SPACE
         SR    R0,R0
         ST    R0,VTOCECB              CLEAR ECB
         NI    MODESW,X'FF'-RDERR      RESET ERROR SWITCH
         EXCP  VTOCIOB                 START CHANNEL PROGRAM
         OI    MODESW,XCPRUN           SET 'RUNNING' FLAG
         BR    RRET
         SPACE
* WHEN EXTENT IS VIOLATED, SET END-FILE AND EXIT VIA CLOSE ROUTINE.
         SPACE
SETEOF   OI    MODESW,EOFSW            SET END-OF-FILE BIT
         B     CLOSESUB                EXIT VIA CLOSE SUBROUTINE
         EJECT
********************************
* CONSTANTS, VARIABLES, ETC... *
********************************
         SPACE
INITCCW  CCW   READR0,0,CC+SLI+SKIP,8
READCCW  CCW   READCKD,0,CC,148
         SPACE
DVICETAB DC    X'00',X'00'     TABLE OF NUMBER OF DSCB'S/TRACK
*                              AND NUMBER OF TRACKS/CYLINDER
         DC    AL1(16,10)         2311
         DC    AL1(63,8)          2301
         DC    AL1(17,10)         2303
         DC    AL1(22,46)         2302
         DC    AL1(8,20)          2321
         DC    X'00',X'00'        2305-1
         DC    AL1(34,8)          2305-2
         DC    AL1(25,20)         2314
         DC    AL1(39,19)         3330
         DC    AL1(22,12)         3340
         DC    AL1(47,30)         3350 DASD
         DC    X'00',X'00'        NON-EXISTANT
         DC    AL1(39,19)         3330 MOD 11
MAXDVT   EQU   (*-DVICETAB)/2
         SPACE
DWORK    DS    D               WORK CELL
SAVEAREA DS    19F             SAVE AREA
EXCPSAVE EQU   SAVEAREA+12
CBSIZE   DS    2F              SIZE AND LOCATION OF GOTTEN CORE
CBADDR   EQU   CBSIZE+4
NDSCBS   DS    F               NUMBER OF DSCB'S PER TRACK
DSCBSTRT DS    F               ADDRESS OF 1ST DSCB BUFFER
DSCBLIM  DS    F               ADDRESS OF LAST DSCB BUFFER
DSCBADR  DS    F               ADDRESS OF CURRENT DSCB
TTRN     DS    F               RELATIVE TRACK NUMBER
         SPACE
* MODE SWITCH AND BIT DEFINITIONS:
         SPACE
MODESW   DC    X'00'
CBGOT    EQU   X'80'           CORE GOTTEN FOR BUFFER
XCPRUN   EQU   X'40'           CHANNEL PROGRAM STARTED BUT NOT CHECKED
RDERR    EQU   X'20'           PERMANENT I/O ERROR
EOFSW    EQU   X'10'           END-OF-FILE SENSED
         SPACE
         ICVAFPL DSECT=NO
         SPACE
         LTORG
         EJECT
* DATA CONTROL BLOCK
         SPACE
VTOCDCB  DCB   DDNAME=VOLUME01,MACRF=(E),EXLST=JFCBADDR
         SPACE
DCBDDNAM EQU   VTOCDCB+40
DCBIFLGS EQU   VTOCDCB+44
DCBDEBAD EQU   VTOCDCB+44
DCBOFLGS EQU   VTOCDCB+48
DEBSUCBA EQU   X'20'
OPENBIT  EQU   X'10'
         EJECT
* IOB FOR CHANNEL PROGRAM:
         SPACE
VTOCIOB  DS    0D
IOBFLAG1 DC    X'42000000'     COMMAND CHAIN, NOT RELATED
         DC    A(VTOCECB)
         DC    2F'0'
IOBSTART DC    A(0)            CHANNEL PROGRAM BEGINNING
         DC    A(VTOCDCB)
         DC    X'03000000'
         DC    F'0'
IOBSEEK  DC    D'0'            INITIAL SEEK ADDRESS
         SPACE
* EVENT CONTROL BLOCK FOR CHANNEL PROGRAM:
         SPACE
VTOCECB  DC    F'0'            EVENT CONTROL BLOCK
         SPACE 3
* BUFFER FOR JFCB AND DCB EXIT LIST:
         SPACE
JFCBADDR DS    0F
         DC    X'87'
         DC    AL3(JFCB)
         SPACE
JFCB     DS    0D
         DS    CL176
         SPACE
JFCBDSNM EQU   JFCB            DATA SET NAME
JFCBVOLS EQU   JFCB+118        VOLUME SERIAL NUMBER
         SPACE 6
         END
