         TITLE 'M C S   EXIT  -    IEECVXIT  ( AFDSC ) '
         PRINT  GEN
**$DOC@****************************************************************
*                                                                     *
*  MODULE  -   IEECVXIT     ( MCS EXIT )       REL 4.0  27 MAY 82     *
*                                                                     *
*      THIS MCS EXIT IS BASED ON THE SOURCE FROM 'SYS1.SAMPLIB'       *
*      FROM THE IPO SYSTEM. THIS CODE CAME BY WAY OF FAIRCHILD        *
*      CAMERA CORPORATION THROUGH THE SHARE SPLA MVSMODS TAPE.        *
*                                                                     *
*      NOW THAT IS THE SIMILIARITY ENDS. WE NO ONLY WANT TO DO        *
*      THE CHANGING OF ROUTCDE'S, DESC CODES ETC.  BUT ALSO WE        *
*      WANT TO DO SOME AUTOMATIC REPLIES. WHY WAKE UP THE OPER-       *
*      ATOR ???  SO FOR THINGS LIKE WHEN VTAM IS INITIALIZED,         *
*      THEN WE ALWAYS  ' S TSO '.  THUS  'R2D2' (MODULE IEECR2D2)     *
*      IS NOW ALIVE AND DOING GOOD THINGS. EVER GET AN OPERATOR       *
*      TO REPLY 'HOLD' TO THAT NASTY ALLOCATION MESSAGE AND MAKES     *
*      YOU 3033 LOOK LIKE IT IS RUNNING OS/MVT ( Q4 IS LOCKED ).      *
*      SO THERE ARE ALL KINDS OF POSSIBILITIES. HOPEFULLY THE         *
*      DIRTY WORK IS DONE. GOOD LUCK ALL                              *
*                                                                     *
*                                                                     *
*                                JIM MARSHALL, LT, USAF               *
*                                AIR FORCE DATA SVCS CENTER           *
*                                PENTAGON - CMIS / ROOM 1C1039        *
*                                IBM OPERATING SYSTEMS SUPPORT BR     *
*                                WASHINGTON D.C.   20330              *
*                                (202) 695-1274/2478                  *
*                                                                     *
*     NOTE: 1. MODULE IS REENTRANT AND SHOULD STAY THAT WAY           *
*           2. ADDED PROBLEM LOG OF 'R2D2' IN IEECR2D2. PLSE          *
*              READ IT. (NOT SERIOUS ERRORS)                          *
*           3. MY 'GURU' (BILL GODFREY) TELLS ME OF PROBLEMS WHEN     *
*              YOU TRY TO DO SVC 35 (WTO) OUT OF THIS BEAST, THUS     *
*              'R2D2' BECOMES MORE IMPORTANT.                         *
*                                                                     *
*     INSTALLED: 5 JUN 1981                                           *
*                                                                     *
* CHANGE LOG: 12 FEB 82 ADDED MSSE MACROS TO SUPPORT MESSAGE LOG      *
*                       JOURNALLING. THE CODE NOW IS IN THIS EXIT     *
*                       AND GOTTEN BY ASSEMBLING THE CODE WITH A      *
*                       PARM='SYSPARM(MSSE)'  WHICH IS THE DEFAULT.   *
*                       FOR THOSE WITH NO IBM 3850 MSS BOX, COMPILE   *
*                       WITH PARM='SYSPARM(NONMSSE)'                  *
*                       PAUL FINDLEY, LT, AIR FORCE DATA SVCS CENTER  *
*             10 MAY 82 ADDED SOME SUPPORT TO DETECT ICB085I (MSS     *
*                       TRACE TO BE DUMPED) TO GIVE CONTROL TO 'R2D2' *
*                       TO DO THE START COMMAND. ADDED ALSO SUPPORT   *
*                       ICB326E (MSS LOG 80% FULL) TO GIVE CONTROL    *
*                       TO 'R2D2' FOR THE START COMMAND TO DUMP IT.   *
*                       RESTRUCTURED THE WAY THE ATTACH IS DONE. IN   *
*                       THIS CASE, WE WANT TO DETECT THE MSG AND      *
*                       NOT ALWAYS JUST RETURN, WE MAY WANT TO        *
*                       CONTINUE TO PROCESS THE MSG. SEE CODE AROUND  *
*                       THE ATTACH. SPECIFICALLY THE NEW 'R2D2'       *
*                       MACRO.   JIM MARSHALL, LT, AFDSC              *
*                                                                     *
*-$DOC$---------------------------------------------------------------*
         EJECT
*---------------------------------------------------------------------*
*    MACRO DEFINITIONS                                                *
*.....................................................................*
         SPACE
         GBLB  &MSSE
&MSSE    SETB  ('&SYSPARM' NE 'NONMSSE')
         MACRO
         IEECODES &ROUTCDE=13,&DESC=,&ID=IEE
         LCLC  &CD(4)
         LCLA  &I,&N
         LCLB  &B(32)
.*
.* DESCRIPTOR CODES
.*
&I       SETA  1
.DCHK    AIF   (T'&DESC EQ 'O').RCHK
&N       SETA  &DESC(&I)
&I       SETA  &I+1
         AIF   (&N GE 1 AND &N LE 16).ASSIGND
         MNOTE 8,'&DESC(&I) IS INVALID DESCRIPTOR - IGNORED'
         AGO   .NXTD
.ASSIGND ANOP
&B(&N)   SETB  1
.NXTD    AIF  (&I LE N'&DESC).DCHK
&I       SETA  1
.*
.* ROUTE CODES
.*
.RCHK    AIF   (T'&ROUTCDE EQ 'O').ASSIGNC
&N       SETA  &ROUTCDE(&I)
&I       SETA  &I+1
         AIF   (&N GE 1 AND &N LE 16).ASSIGNR
         MNOTE 8,'ROUTCDE(&I) IS INVALID ROUTE - IGNORED'
         AGO   .NXTR
.ASSIGNR ANOP
&B(&N+16) SETB  1
.NXTR    AIF   (&I LE N'&ROUTCDE).RCHK
.ASSIGNC ANOP
&I       SETA  1
&CD(&I)   SETC  '&B(1)&B(2)&B(3)&B(4)&B(5)&B(6)&B(7)&B(8)'
&CD(&I+1) SETC  '&B(9)&B(10)&B(11)&B(12)&B(13)&B(14)&B(15)&B(16)'
&CD(&I+2) SETC  '&B(17)&B(18)&B(19)&B(20)&B(21)&B(22)&B(23)&B(24)'
&CD(&I+3) SETC  '&B(25)&B(26)&B(27)&B(28)&B(29)&B(30)&B(31)&B(32)'
&ID.DESCD DC   BL2'&CD(1)&CD(2)'
&ID.ROUTC DC   BL2'&CD(3)&CD(4)'
         MEND
         MACRO
&L       CHECKMSG &CMDXX,&WHERE
         CLC   UCMMSTXT(&CMDXX.L),&CMDXX
         BE    &WHERE
         MEND
         MACRO
&LBL     R2D2  &NUM,&WHERE
         LA    R10,&WHERE
         LA    R3,&NUM
         B     ATTACH
         MEND
         EJECT
*---------------------------------------------------------------------*
*        START THE PROGRAM                                            *
*---------------------------------------------------------------------*
         SPACE
IEECVXIT CSECT
         SAVE  (14,12),,IEECVXIT_AFDSC_&SYSDATE_&SYSTIME
         LR    R12,R15                 SAVE ENTRY ADRESS
         USING IEECVXIT,R12,R11        REAL BASE ADDRESS=R12
         L     R11,BASE                SET UP SECOND BASE REG
         B     BEGIN
BASE     DC    A(IEECVXIT+4096)
BEGIN    L     R2,0(R1)                SET ADDR TO IEECUCM DSECT
         USING UCMEXIT,R2              EST. ADDR TO IEECUCM DSECT
         L     R0,CORESIZE
         GETMAIN R,LV=(0)              GET CORE FROM SP=230
         LR    R10,R1                  SAVE THE ADDRESS
         ST    R13,4(R1)              SETUP
         ST    R1,8(R13)                SAVEAREA
         LR    R13,R10                       CHAIN
         USING WKAREA,R13              GET ADDRESSABILITY
         CHECKMSG ICB085,ATTACH4       DO WE DUMP MSS TRACE ?
         CHECKMSG IST020I,ATTACH8      DO WE START TSO UP ?
         CHECKMSG ICB326,ATTACH12      DO WE DUMP MSS MSG LOG ?
         CHECKMSG CIDC,UPDROUT1        IDC PREFIXED MSG ?
         CHECKMSG CIGF,UPDROUT2        IGF PREFIXED MSG ?
         SPACE 1
*--------------------------------------------------------------------*
*        SCAN THE TABLE FOR MSGS TO BE SUPPRESSED                    *
*--------------------------------------------------------------------*
         SPACE
SUPCHK   EQU   *
         LA    R7,RMSG0                SET UP R7
         LA    R8,L'RMSG0              GET LENGTH OF MSG
         LA    R9,RMSG0END-L'RMSG0     SET END OF TABLE ADDR
         SPACE
SUPCHK0  EQU   *
         CLI   0(R7),C' '              ARE WE DONE ???
         BE    CHKMSG                  CHECK FOR ROUTCDE=13
         CLC   UCMMSTXT(L'RMSG0),0(R7)  CHECK MSG ID
         BE    UPDROUT0                GO TO UPDATE
         BXLE  R7,R8,SUPCHK0           SCAN ENTIRE TABLE
         SPACE
*--------------------------------------------------------------------*
*        SCAN THE TABLE FOR MSGS TO BE ASSIGNED ROUTE CODE = 13      *
*--------------------------------------------------------------------*
         SPACE
CHKMSG   EQU   *
         AIF     (NOT &MSSE).SKIP1         CHECK IF MSSE IS PRESENT
         LA      R8,MSSTBLE                SET R8 TO POINT TO TABLE
         LR      R10,R13                   SAVE R13 ADDRESSABILITY
         LA      R13,MSSAVE                SET R13 TO MACRO SAVEAREA
         LA      R7,UCMMSTXT               REG 7 POINTS TO MESSAGE
         ICBRECD TABADDR=(8),MSGADDR=(7)
         USING   UCMEXIT,R2                REESATBLISH ADDRESSABILITY
         LR      R13,R10                   RETURN ADDR
.SKIP1   ANOP
*                                          CHECK RETURN CODE
         SPACE 1
*----------------------------------------------------------------*
*        SCAN THE TABLE FOR MSGS THAT REQUIRE AUTOMATIC REPLIES  *
*----------------------------------------------------------------*
         SPACE
RPLYCHK  EQU   *
         LA    R7,RPLYTAB              POINT TO TABLE OF REPLIES
         LA    R8,L'RPLYTAB            GET LENGTH
         LA    R9,RPLYEND-L'RPLYTAB    SET END OF TABLE ADDR
         SPACE
RPLYCHK0 EQU   *
         CLI   0(R7),C' '              ARE WE DONE
         BE    ROLLCHK                 CONTINUE CHECKING
         CLC   UCMMSTXT(L'RPLYTAB),0(R7) CHECK THE MSG
         BE    ATTACH0                 IF SO, ATTACH SUBTASK
         BXLE  R7,R8,RPLYCHK0          SO, LOOP
         SPACE
*----------------------------------------------------------------*
*        SCAN THE TABLE FOR MSGS THAT ARE TO BE MADE             *
*        ROLLABLE. I.E. THEY WILL ROLL OFF SCREEN                *
*----------------------------------------------------------------*
         SPACE
ROLLCHK  EQU   *
         LA    R7,ROLLTAB              POINT TO TABLE OF REPLIES
         LA    R8,L'ROLLTAB            GET LENGTH
         LA    R9,ROLLEND-L'ROLLTAB    SET END OF TABLE ADDR
         SPACE
ROLLCHK0 EQU   *
         CLI   0(R7),C' '              ARE WE DONE
         BE    RETURN                  ALL MISSES SO RETURN
         CLC   UCMMSTXT(L'ROLLTAB),0(R7) CHECK THE MSG
         BE    UPDROUT3                UPDATE
         BXLE  R7,R8,ROLLCHK0          SO, LOOP
         EJECT
*----------------------------------------------------------------*
*        RETURN TO WHENCE WE CAME, JUST REMEMBER TO FREE UP      *
*        OUR GOTTEN CORE FROM SP=230                             *
*----------------------------------------------------------------*
         SPACE
RETURN   EQU   *
         LR    R1,R13                  GET AREA ADDRESS
         L     R0,CORESIZE
         L     R13,4(,R13)
         FREEMAIN R,A=(1),LV=(0)       DO FREEMAIN
         LM    R14,R12,12(R13)
         LA    R15,0(0,0)              SET RETURN CODE
         BR    R14                     BYE !!!!!!
         SPACE
*----------------------------------------------------------------*
*        SUPPRESS THE ROUTCDE BY MOVING IN 0'S                   *
*----------------------------------------------------------------*
         SPACE
UPDROUT0 EQU    *
         MVC    UCMROUTC(2),SUPPRESS      MOVE IN ROUTCDE=0
         B      RETURN
         SPACE
*---------------------------------------------------------------*
*        CHANGING ROUT AND DESC CODES                           *
*---------------------------------------------------------------*
         SPACE
UPDROUT1 EQU   *
         MVC   UCMROUTC(L'MSSROUTC),MSSROUTC   CHANGE ROUT CODE
         MVC   UCMDESCD(L'MSSDESCD),MSSDESCD   CHANGE DESC CODE
         B     RETURN                  RETURN TO CALLER
         SPACE
*---------------------------------------------------------------*
*        ADD ROUTCDE 13 TO THE MSG. GOES TO MSS CONSOLE         *
*        AND MAKE THE MESSAGE NON-ROLLABLE
*---------------------------------------------------------------*
         SPACE
UPDROUT2 EQU   *
         MVC   UCMROUTC(L'IGFROUTC),IGFROUTC    CAHNGE ROUT CODE
         MVC   UCMDESCD(L'IGFDESCD),IGFDESCD    CHANGE ROUT CODE
         B     RETURN                  RETURN TO CALLER
         SPACE
*--------------------------------------------------------------*
*        CHANGE DESC CODE TO MAKE THIS MESSAGE ROLLABLE        *
*        INSTEAD OF NON-ROLLABLE & MAKE ROUTCDE=2              *
*--------------------------------------------------------------*
         SPACE
UPDROUT3 EQU   *
         MVC   UCMROUTC(2),ROLROUTC     CHANGE ROUTCDE
         MVC   UCMDESCD(2),ROLDESCD     CHANGE DESC
         B     RETURN                  RETURN TO CALLER
         EJECT
*--------------------------------------------------------------------*
*        ATTACH THE SUBTASK   ' IEECR2D2 ' .  THERE ARE MANY REASONS *
*        YOU WANT TO ATTACH THE SUBTASK. YOU WANT THE AUTOMATIC      *
*        REPLIES DONE FOR YOU, BUT ALSO YOU WANT SOME COMMANDS       *
*        EXECUTED VIA  SVC 34. SO IF WE GO INTO IEECR2D2 AND         *
*        SPECIFY A RETURN CODE = 0, THEN WE WANT AN AUTOMATIC        *
*        REPLY. THE FOLLOWING IS A LIST OF THE RETURN CODES FOR      *
*        PLAIN OLE OPERATOR COMMANDS.                                *
*                                                                    *
*             (  R1  )          COMMAND                              *
*                                                                    *
*                0      -     ( SOME AUTO REPLY )                    *
*                4      -     S $SMITRAC            (MSS RELATED)    *
*                8      -     S TSO                                  *
*               12      -     S $SMIMSG             (MSS RELATED)    *
*                                                                    *
*--------------------------------------------------------------------*
         SPACE
ATTACH12 EQU   *
         R2D2  16,CHKMSG               WHERE TO GO
         SPACE
ATTACH8  EQU   *
         R2D2  8,RETURN                WHERE TO GO
         SPACE
ATTACH4  EQU   *
         R2D2  4,RETURN                WHERE TO GO
         SPACE
ATTACH0  EQU   *
         R2D2  0,RETURN                WHERE TO GO
         SPACE
ATTACH   EQU   *
         ATTACH EP=IEECR2D2,SM=SUPR,KEY=ZERO,MF=(E,(3))
         BR    R10                     ALL DONE
*----------------------------------------------------------------*
*        CONSTANTS,  ETC,  ETC                                   *
*----------------------------------------------------------------*
         SPACE
         DS    0F
SUPPRESS DC    H'0'        USED FOR SUPPRESSING ROUTCDE'S
CIDC     DC    C'IDC'
CIDCL    EQU   *-CIDC
CIGF     DC    C'IGF'
CIGFL    EQU   *-CIGF
ICB085   DC    C'ICB085'  MSS TRACE FULL
ICB085L  EQU   *-ICB085
ICB326   DC    C'ICB326'  MSS TRACE FULL
ICB326L  EQU   *-ICB326
IST020I  DC    C'IST020I'  VTAM INITIALIZATION COMPLETE
IST020IL EQU   *-IST020I
         SPACE
*
* DEFINE SUB-POOL AND LENGTH FOR GETMAIN/FREEMAIN
         DS    0F
CORESIZE DC    AL1(230),AL3(WKAREAL)    USED FOR GETMAIN & FREEMAIN
         SPACE
*
R0       EQU   0
R1       EQU   1                       ADDRESS OF SUPPLIED PARAMETERS
R2       EQU   2                       ADDRESS OF EXIT PARAMETERS
R3       EQU   3                       ADDRESS OF CVT
R4       EQU   4                       ADDRESS OF UCB LOOKUP TABLE
R5       EQU   5                       ADDRESS OF UCB
R7       EQU   7                       ADDRESS IN OPTIONAL MSG TABLE
R8       EQU   8                       INCREMENT FOR MSG TABLE
R9       EQU   9                       END ADDRESS OF MSG TABLE
R10      EQU   10                      WORK REGISTER
R11      EQU   11                      2ND BASE REGISTER
R12      EQU   12                      BASE REGISTER
R13      EQU   13                      SAVE AREA POINTER
R14      EQU   14                      RETURN ADDRESS
R15      EQU   15                      ENTRY ADDRESS
TWO      EQU   2                       SELF DEFINED
FOUR     EQU   4                       SELF DEFINED
EIGHT    EQU   8                       SELF DEFINED
         SPACE
*---------------------------------------------------------------*
*        MSG TO MSS CONSOLE ROUTCDE=(2,13),   MAKE MSG          *
*        DESC=4                                                 *
*---------------------------------------------------------------*
         SPACE
         IEECODES ID=MSS,ROUTCDE=(2,13),DESC=4
         SPACE
*---------------------------------------------------------------*
*        PUT MSG TO CONSOLE  (ROUTCDE=2),  MAKE MSG  DESC=4     *
*---------------------------------------------------------------*
         SPACE
         IEECODES ID=ROL,ROUTCDE=2,DESC=4
         SPACE
*---------------------------------------------------------------*
*        PUT MSG TO MASTER CONSOLE, SYSTEM INFORMATION          *
*        AND TO MSS CONSOLES (ROUTCDE=(2,13), AND MAKE          *
*        THE MSGS NON-DELETABLE FROM MASTER CONSOLE             *
*        DESC=2                                                 *
*---------------------------------------------------------------*
         SPACE
         IEECODES ID=IGF,ROUTCDE=(2,13),DESC=2
         SPACE
*----------------------------------------------------------------*
*        MSGIDS IN THIS TABLE WILL BE UPDATED TO GO TO THE MSS   *
*        CONSOLE ..  ROUTCDE=13                                  *
*----------------------------------------------------------------*
         SPACE
MSSTAB   DC    C'IEF710I'
         DC    C'IEF711I'
         DC    C'IEF712I'
         DC    C'IEF713I'
         DC    C'IEF714I'
         DC    C'IEF715I'
         DC    C'IEF716I'
         DC    C'IEF717I'
         DC    C'IEF718I'
         DC    C'       '
         DC    C'       '  <= LAST ONE MUST BE BLANK
MSSEND   EQU   *
         SPACE
*-----------------------------------------------------------------*
*        MSGIDS IN THIS TABLE WILL BE UPDATED TO BE SUPPRESSED    *
*-----------------------------------------------------------------*
RMSG0    DC    C'CMI1005'         CMIS ROTATE UTILITY
         DC    C'SFI1005'         CMIS ROTATE UTILITY
         DC    C'IEC130I'         DDN STATEMENT MISSING
         DC    C'IEF677I'         WARNING MSG ISSUED
         DC    C'ERB305I'         RMF PARAMETERS
         DC    C'IHO240I'         FORTRAN
         DC    C'       '
         DC    C'       ' <= LAST ONE MUST BE BLANK..
RMSG0END EQU   *
         SPACE
*---------------------------------------------------------------------*
*        MSGIDS FOR WHICH WE WANT TO ATTACH A SUBTASK FOR AUTOMATIC   *
*        REPLIES.                                                     *
*---------------------------------------------------------------------*
RPLYTAB  DC    C'ERB306D'
         DC    C'IKT012D'
         DC    C'ICB423D'
         DC    C'IEF433D'
         DC    C'IEF434D'
         DC    C'       '
         DC    C'       '  <= LAST ONE MUST BE BLANK
RPLYEND  EQU   *
         SPACE
*---------------------------------------------------------------------*
*        MSGIDS FOR WHICH WE WANT TO MAKE ROLLABLE. LOOK THEM UP      *
*        IN THE MSG MANUAL TO SEE WHY.                                *
*---------------------------------------------------------------------*
ROLLTAB  DC    C'IEA911E'
         DC    C'IST209A'
         DC    C'IST852I'
         DC    C'IKT108I'
         DC    C'       '
         DC    C'       '  <= LAST ONE MUST BE BLANK
ROLLEND  EQU   *
         SPACE
***********************************************************************
*        DSECTS                                                       *
*********************************************************************
         DS    0F
         SPACE
         AIF   (NOT &MSSE).SKIP2
         CNOP  0,8
MSSMSG   DS    D
         DS    0F
         EJECT
          TITLE 'EXPANSION OF THE MACRO  FOR WTO EXIT          '
         SPACE 3
***********************************************************************
*                                                                     *
*    M S S T A B L E  OF  MESSAGES FOR MSS.JOURNAL DATASET            *
*                                                                     *
***********************************************************************
         CNOP  0,8
MSSTBLE  ICBITDEF ICB302I,RTE=(2,13),DSC=4,USR='SSID ON/OFF LINE'
         ICBITDEF ICB504E,RTE=(2,13),DSC=2,USR='CHECK CASE CODES'
         ICBITDEF ICB508E,RTE=(2,13),DSC=4,USR='SEE MSS PRIN OP '
         ICBITDEF ICB096I,RTE=(1,13),DSC=2,USR='CHECK FOR HDI'
         ICBITDEF ICB098I,RTE=(2,13),DSC=4,USR='DATA REUSE OVERRIDE'
         ICBITDEF ICB099I,RTE=(2,13),DSC=4,USR='INVALID MICRO PATCH'
         ICBITDEF ICB101I,RTE=(2,13),DSC=4,USR='UNIDENTIFIABLE PCI'
         ICBITDEF ICB102E,RTE=(2,13),DSC=4,USR='UNUSABLE CARTRIDGE'
         ICBITDEF ICB194E,RTE=(1,13),DSC=2,USR='CHECK RESTART CODE'
         ICBITDEF ICB311I,RTE=(2,13),DSC=4,USR='CHECK REASON CODE'
         ICBITDEF ICB401I,RTE=(2,13),DSC=4,USR='CHECK RETURN CODE'
         ICBITDEF ICB402I,RTE=(2,13),DSC=4,USR='VERIFY VOLUME SER'
         ICBITDEF ICB403I,RTE=(2,13),DSC=4,USR='VERIFY GROUPNAME'
         ICBITDEF ICB404I,RTE=(2,13),DSC=4,USR='CHECK MSVI CPUID'
         ICBITDEF ICB405I,RTE=(1,13),DSC=2,USR='CHECK FOR HDI'
         ICBITDEF ICB407I,RTE=(2,13),DSC=4,USR='CHECK JCL'
         ICBITDEF ICB408I,RTE=(2,13),DSC=4,USR='CHECK SPACE'
         ICBITDEF ICB410I,RTE=(2,13),DSC=2,USR='CHECK MSVI'
         ICBITDEF ICB411I,RTE=(2,13),DSC=2,USR='CHECK MSVI'
         ICBITDEF ICB412I,RTE=(2,13),DSC=4,USR='CHECK MESSAGE CODE'
         ICBITDEF ICB413I,RTE=(2,13),DSC=4,USR='CHECK IO REQUEST'
         ICBITDEF ICB414I,RTE=(2,13),DSC=4,USR='CHECK VSAM CODE'
         ICBITDEF ICB421I,RTE=(1,13),DSC=2,USR='CONTACT IBM'
         ICBITDEF ICB422I,RTE=(2,13),DSC=4,USR='VERIFY MVIKEY00'
         ICBITDEF ICB441I,RTE=(2,13),DSC=4,USR='CHECK MSVI'
         ICBITDEF ICB473I,RTE=(2,13),DSC=4,USR='CHECK REASON CODE'
         ICBITDEF ICB477E,RTE=(2,13),DSC=4,USR='DISABLE MSVI'
         ICBITDEF ICB478E,RTE=(2,13),DSC=4,USR='DISABLE MSVC'
         ICBITDEF ICB500E,RTE=(2,13),DSC=4,USR='DATA RECOVERY REQD'
         ICBITDEF ICB501E,RTE=(2,13),DSC=4,USR='CHECK PREV ICB194E'
         ICBITDEF ICB502E,RTE=(2,13),DSC=4,USR='CHECK CARTRIDGE'
         ICBITDEF ICB503E,RTE=(2,13),DSC=4,USR='SEE UNIT LOSS'
         ICBITDEF ICB505A,RTE=(1,13),DSC=2,USR='CHECK EXIT PORT'
         ICBITDEF ICB507E,RTE=(2,13),DSC=2,USR='ACCESSOR UNIT LOSS'
         ICBITDEF ICB509E,RTE=(2,13),DSC=4,USR='MEDIA FAILURE   '
         ICBITDEF ICB510A,RTE=(1,13),DSC=2,USR='CHECK SSID STATUS'
         ICBITDEF ICB511E,RTE=(2,13),DSC=4,USR='WRONG MSF'
         ICBITDEF ICB512E,RTE=(2,13),DSC=4,USR='MSF IS FULL'
         ICBITDEF ICB513E,RTE=(2,13),DSC=4,USR='TABLE FULL'
         ICBITDEF ICB514E,RTE=(2,13),DSC=4,USR='CARTRIDGE LABEL BAD'
         ICBITDEF ICB515E,RTE=(2,13),DSC=4,USR='SEE UNIT LOSS'
         ICBITDEF ICB516E,RTE=(2,13),DSC=4,USR='NEED STAGE SPACE'
         ICBITDEF ICB517E,RTE=(2,13),DSC=4,USR='CHECK REASON CODE 25'
         ICBITDEF IEA000E,RTE=(2,13),DSC=4,USR='MSC/SYSTEM SWITCH'
         ICBITDEF IEF572I,RTE=(2,13),DSC=4,USR='CHECK ICB194I/IEA000I'
         ICBITDEF IEF710I,RTE=(2,13),DSC=4,USR='CHECK RETURN CODE'
         ICBITDEF IEF711I,RTE=(2,13),DSC=4,USR='VARY DEVICE OFFLINE'
         ICBITDEF ICB093E,RTE=(2,13),DSC=4,USR='CHECK STATUS CODES'
         ICBITDEF ICB506A,RTE=01,FLAG=L,DSC=2,USR='RUN COPYT'
.SKIP2   ANOP
         LTORG
WKAREA   DSECT
SAVE     DS    18F
MSSAVE   DS    21F
         DS    0D
WKAREAL  EQU   *-WKAREA
IEECUCM  DSECT
         IEECUCM  FORMAT=NEW
CVT      DSECT
         CVT
         ICBMJX
         IEZSSC
         ICBMJQUE
         ICBITMAP
         IEZBITS
         END   IEECVXIT
