EXIT255  TITLE 'JES2/SP3 EXIT #255'
*$DOC@*
* * * * * * * * * *  NOTES ON THE NEW JES2  * * ** * * * * * ** * * *
* 1.  THE JESPARMS THAT CORRESPOND TO THIS EXIT ARE:                  *
*       . . .                                                         *
*       >LOAD EXIT255                                                 *
*       >EXIT001 (EXIT255),ENABLE,TRACE=YES                           *
*       . . .                                                         *
*                                                                     *
* 2.  THE ORDER OF THE DSECTS IN THE PREAMBLE ASSEMBLY  CAN BE        *
*     SIGNIFICANT.  ALSO THE REGISTER CONTENTS ARE AS FOLLOWS UPON    *
*     ENTRY TO THIS EXIT:                                             *
*         R0 = CODE INDICATING WHETHER START, CONT., OR TRAILER       *
*              PAGE IS BEING PRINTED.                                 *
*         R1 = ADDRESS OF THE DCT.                                    *
*        R10 = ADDRESS OF THE JCT.                                    *
*        R11 = ADDRESS OF THE HCT.                                    *
*        R13 = ADDRESS OF THE PCE.                                    *
*                                                                     *
* 3.  THE EXIT IS CALLED FROM EXIT001(HASPPRPU) PRINT/PUNCH EXIT      *
*     IT IS ENVOKED TO BUILD JOB RECEIPTS. THIS EXIT CAN BE DISABLED  *
*     EITHER BY AN OPERATOR COMMAND OR BY THE JCT JOBMASK             *
*                                                                     *
*                    *   *   *   *   *                                *
*                    PAUL FINDLEY                                     *
*                    AIR FORCE DATA SERVICES CENTER                   *
*                    IBM OPERATING SYSTEMS SUPPORT BRANCH             *
*                    PENTAGON, CMIS, ROOM 1C1039                      *
*                    WASHINGTON  D.C.      20330                      *
*                    CALL: 202/695-1274                               *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*$DOC$*
         TITLE 'JES2/SP3 EXIT #255 - MIT CSECT'
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                  P R E A M B L E  -  E X I T 1                    *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
          PRINT OFF
          $SYSPARM (OFF,NOGEN,NODATA,NO,NO)  DOCUMENTATION OPTIONS
          COPY $HASPGEN                 COPY HASPGEN PARAMETERS
          PRINT ON
          $SYSPARM (ON,GEN,DATA,YES,YES)   DOCUMENTATION OPTIONS
MITABLE   $MODULE                       CREATE THE MIT CSECT
          $BUFFER DOC=YES               REQ'D BY $GETBUF, $FREEBUF,
*                                        AND MUST PRECEDE $JCT
          $JCT    DOC=YES               MUST PRECEDE $CAT
          $JQE    DOC=YES               MUST PRECEDE $HCT
          $PCE    DOC=YES               MUST PRECEDE $HCT
          $CAT    DOC=YES               MUST PRECEDE $HCT
          $DCT    DOC=YES               NORMALLY REQUIRED FOR EXIT #1
          $HCT    DOC=YES               REQ'D BY $SAVE, $RETURN...
          $PDDB   DOC=YES               MUST PRECEDE $IOT
          $TAB    DOC=YES               MUST PRECEDE $IOT
          $IOT    DOC=YES
          $JOE    DOC=YES               REQ'D TO GET SYSOUT CLASS
          $MIT    DOC=YES               REQ'D BY $MODEND
          $PPPWORK DOC=YES              REQ'D TO FIND JOE
          PRINT GEN
*  * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
EXIT255   $ENTRY CSECT=YES,BASE=R12     EXIT ROUTINE ENTRY POINT
          $SAVE
          LR      R12,R15               LOAD BASE REGISTER
          XR      R15,R15               CLEAR R15 IN CASE PUNCH
          LR      R9,R1                 SAVE INPUT PARAMETERS
          USING DCTDSECT,R9            SETUP ADDRESSABILITY
          USING JCTDSECT,R10           SETUP ADDRESSABILITY
TEST      L    R7,PWKJOE               SET UP ADDRESS OF JOE
          USING JOEDSECT,R7            SET UP ADDRESSABLITY
          CLC  JOEREMOT,=H'1'          CHECK FOR REMOTE IDS
          BL   START                   IF NO IDS THEN CREATE RECEIPT
          B    CLEAR                    ELSE DONT CREATE RECEIPT
START    $GETBUF  TYPE=HASP,FIX=YES,WAIT=YES   GET A WORK BUFFER
          LR      R3,R1                 SAVE ADDRESS OF BUFFER
          USING   BUFDSECT,R3
BODY      EQU   *
          CLI   DCTDEVTP,DCTRPR        CHECK IF REMOTE PRINTER
          BE    FINI                   IF SO GET OUT
          $TIME                        GET TIME AND DATE   - 00YYDDDF
          ST   R1,TEMP2                STORE DATE IN TEMPORARY
          UNPK INDAY,TEMP2(4)          CONVERT TO PRINT IN REPORT
          MVZ  INDAY+6(1),INDAY
          MVC    INDAY(2),=C'  '
*
          SRDL   R0,32                 SHIFT RIGHT
          D      R0,=F'+100'           CONVERT TO WHOLE SECONDS
          XR     R0,R0                 CLEAR R0
          D      R0,=F'+3600'          GET HOURS
          CVD    R1,JCTUSER0           CONVERT HRS TO
          UNPK   ITIME(2),JCTUSER0+6(2) PRINTABLE FORMAT
          OI     ITIME+1,240           FIX ZONE
          SRDL   R0,32                 MOVE REMNDR FOR DIVIDE
          D      R0,=F'+60'            GET MINUTES
          CVD    R1,JCTUSER0+8         CONVERT MINUTES
          MVI    ITIME+2,C'.'          INSERT DOT
          UNPK   ITIME+3(2),JCTUSER0+14(2) PRINT MINUTES
          OI     ITIME+4,240           FIX ZONE
          CVD    R0,JCTUSER0+16        CONVERT SECONDS
          MVI    ITIME+5,C'.'          INSERT DOT
          UNPK   ITIME+6(2),JCTUSER0+22(2) PRINT SECONDS
          OI     ITIME+7,240           FIX ZONE
*
          L      R0,JCTRDRON           LOAD INPUT TIME
          SRDL   R0,32                 SHIFT RIGHT
          D      R0,=F'+100'           CONVERT TO WHOLE SECONDS
          XR     R0,R0                 CLEAR R0
          D      R0,=F'+3600'          GET HOURS
          CVD    R1,JCTUSER0           CONVERT HRS TO
          UNPK   JTIME(2),JCTUSER0+6(2) PRINTABLE FORMAT
          OI     JTIME+1,240           FIX ZONE
          SRDL   R0,32                 MOVE REMNDR FOR DIVIDE
          D      R0,=F'+60'            GET MINUTES
          CVD    R1,JCTUSER0+8         CONVERT MINUTES
          MVI    JTIME+2,C'.'          INSERT DOT
          UNPK   JTIME+3(2),JCTUSER0+14(2) PRINT MINUTES
          OI     JTIME+4,240           FIX ZONE
          CVD    R0,JCTUSER0+16        CONVERT SECONDS
          MVI    JTIME+5,C'.'          INSERT DOT
          UNPK   JTIME+6(2),JCTUSER0+22(2) PRINT SECONDS
          OI     JTIME+7,240           FIX ZONE
*
          MVC   SCC(4),JCTJNAME         FIND SUBMITTER COST CODE
          MVC   JNAME(8),JCTJNAME       FIND JOB NAME
          MVC   JNUM(8),JCTJOBID        FIND JES JOB NUMBER
*
*
          MVC   TEMP2(4),JCTXDTON       FIND EXECUTION DATE IN
          UNPK  JDATE,TEMP2(4)
          MVZ   JDATE+6(1),JDATE
          MVC   JDATE(2),=C'  '
*
          MVC   JCLASS,JCTJCLAS         FIND  JOB CARD CLASS
*
          ICM   R6,B'1111',JOERECCT     FIND NUMBER OF LINE PRODUCED
          CVD   R6,DTEMP                CONVERT BINARY TO PRINATBLES
          MVC   EDTEMP,PATTERN          MASK
          ED    EDTEMP,DTEMP
          MVC   JLINE(5),EDTEMP+10      PRINT OUT RESULTS
*
         $WTO    MSG1,MSGL,JOB=NO,ROUTE=$ALL,CLASS=$ALWAYS,PRI=$ST
         LA      R8,2
LOOP1    $WTO    MSGB,MSGBL,JOB=NO,ROUTE=$ALL,CLASS=$ALWAYS,PRI=$ST
         BCT     R8,LOOP1
*
         $WTO    MSG2,MSG2L,JOB=NO,ROUTE=$ALL,CLASS=$ALWAYS,PRI=$ST
         LA      R8,3
LOOP2    $WTO    MSGB,MSGBL,JOB=NO,ROUTE=$ALL,CLASS=$ALWAYS,PRI=$ST
         BCT     R8,LOOP2
*
         $WTO    MSG3,MSG3L,JOB=NO,ROUTE=$ALL,CLASS=$ALWAYS,PRI=$ST
         LA      R8,3
LOOP3    $WTO    MSGB,MSGBL,JOB=NO,ROUTE=$ALL,CLASS=$ALWAYS,PRI=$ST
         BCT     R8,LOOP3
*
         $WTO    MSG4,MSG4L,JOB=NO,ROUTE=$ALL,CLASS=$ALWAYS,PRI=$ST
         LA      R8,3
LOOP4    $WTO    MSGB,MSGBL,JOB=NO,ROUTE=$ALL,CLASS=$ALWAYS,PRI=$ST
         BCT     R8,LOOP4
*
         $WTO    MSG5,MSG5L,JOB=NO,ROUTE=$ALL,CLASS=$ALWAYS,PRI=$ST
         LA      R8,2
LOOP5    $WTO    MSGB,MSGBL,JOB=NO,ROUTE=$ALL,CLASS=$ALWAYS,PRI=$ST
         BCT     R8,LOOP5
*
         $WTO    MSG6,MSG6L,JOB=NO,ROUTE=$ALL,CLASS=$ALWAYS,PRI=$ST
         LA      R8,14
LOOP6    $WTO    MSGB,MSGBL,JOB=NO,ROUTE=$ALL,CLASS=$ALWAYS,PRI=$ST
         BCT     R8,LOOP6
*
FINI     $FREEBUF (R3)                  FREE WORK BUFFER
         DROP     R3
CLEAR    LA       R15,0                 SET RETURN CODE
RETURN   $RETURN RC=(R15)               RETURN TO HASPPRPU
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                  C O N S T A N T S                                *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
MSG1     $MSG  066,'AFDSC MVS/SP XXXXXXXXX'
MSGL    EQU   *-MSG1
MSG2     $MSG  066,'SUBMITTERS COST CODE   '
SCC      DS    4C' '
MSG2L    EQU   *-MSG2
MSG3     $MSG  066,'JOBNAME  '
JNAME    DS    8C' '
         DC    C'-  '
JNUM     DS    8C' '
MSG3L    EQU   *-MSG3
MSG4     $MSG  066,'TOP SECRET  '
         DC    26C' '
INDAY    DS    CL7
         DC    C' / '
ITIME    DS    CL8
MSG4L    EQU   *-MSG4
MSG5     $MSG  066,'JOB ENTERED THE SYSTEM  '
JTIME    DS    CL8
         DC    03C' '
JDATE    DS    CL7
MSG5L    EQU   *-MSG5
MSG6     $MSG  066,'JOB CLASS  '
JCLASS   DS    C' '
         DC    C'   NUMBER OF LINES PRODUCED '
JLINE    DS    CL7
         DC    C'        OPER #____'
MSG6L    EQU   *-MSG6
MSGB     $MSG  066,'            '
         DC    54C' '
         DC    C'.'
MSGBL    EQU   *-MSGB
TEMP2    DC    F'0'
TEMP     DC    F'0'
DTEMP    DC    D'0'
EDTEMP   DS    CL16
PATTERN  DC    X'20202020202020202020202021202020'
         LTORG
         $MODEND
         END
