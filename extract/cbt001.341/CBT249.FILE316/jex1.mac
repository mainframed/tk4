         TITLE 'JES2/SP1.3 USER EXIT #1'
*---------------------------------------------------------------------*
*
*            JES2/SP1.3  USER EXIT #1
*
*  COURTESY:  JIM MARSHALL,CAPT,USAF
*             SAN ANTONIO DATA SERVICES CENTER
*             8630 BROADWAY
*             SAN ANTONIO, TX  78217
*             (512) - 828-0201/0334
*
*     A.   THIS IS THE SADSC USER EXIT #1. IT IS USED TO PRINT
*        A SEPARATOR PAGE ON THE BEGINNING AND END OF A LISTING.
*        IT IS ALSO USED FOR PUNCH. THIS IS BASED ON THE USER
*        EXIT #1 CONTAINED IN THIS FILE FROM THE AIR FORCE DATA
*        SERVICES CENTER (WHERE I CAME FROM). EXCEPT THIS ONE IS
*        RE-ENTRANT WHERE AFDSC'S WAS NOT.
*
*
*     B.   JES2PARMS FOR THIS EXIT ARE AS FOLLOWS:
*
*        . . .
*        >LOAD JEX1
*        >EXIT001  (JEX1BAN,JEX1PUN),ENABLE,TRACE=YES
*        . . .
*
*        'JEX1' IS THE LOAD MODULE NAME WHEREAS 'JEX1BAN' AND
*        'JEX1PUN' ARE USER CSECTS GENERATED IN THIS CODE. THE
*        ENTRY POINT TO THE LOAD MODULE HAS AN ADDITIONAL CSECT
*        BUILT BY THE $MODULE MACRO CALLED THE 'MODULE INTERFACE
*        TABLE.
*
*     C.   THE 'LTORG' STATEMENT MUST APPEAR IN EACH SECTION OF
*        CODE AND THE $MODEND MACRO MUST APPEAR AFTER THE LAST USER
*        ROUTINE BEFORE THE ASSEMBLER 'END' STATEMENT.
*
*     D.   THE ORDER OF DSECTS IN THE PREAMBLE ASSEMBLY CAN BE
*        SIGNIFICANT (UNDERSTATEMENT). ALSO THE REGISTER CONTENTS
*        ARE AS FOLLOWS UPON ENTRY TO THIS EXIT:
*
*        R0    - CODE INDICATING WHETHER YOU ARE CREATING:
*                0 - START-OF-JOB SEPARATOR.
*                4 - CONTINUATION SEPARATOR.
*                8 - END-OF-JOB SEPARATOR.
*        R1    - ADDR OF THE PRT OR PUN DCT.
*        R2    - N/A
*        R3    - ADDR OF FIXED BUFFER WE GET.
*        R4    - N/A
*        R5    - SADSC USES AS 'BAL' REGISTER.
*        R6    - SADSC USES AS WORK REGISTER.
*        R7    - SADSC USES AS ADDRESSABILITY TO JOE.
*        R8    - SADSC USES AS WORK REGISTER.
*        R9    - SADSC USES TO SAVE CONTENTS OF R0.
*        R10   - ADDR OF THE JOB'S JCT
*        R11   - ADDR OF THE JES2 HCT
*        R13   - ADDR OF THE PRT OR PUN PCE
*        R14   - RETURN ADDR
*        R15   - ENTRY ADDR
*
*     E. REGISTERS UPON RETURN TO WHENCE YOU CAME:
*
*        R0-14 - RESTORED TO THE SAME UPON ENTRY.
*        R15   - CONTAINS A RETURN CODE AS FOLLOWS:
*
*                0  - JES2 WILL PRODUCE A STANDARD SEPARATOR.
*                4  - JES2 WILL PRODUCE A STANDARD SEPARATOR,
*                     BUT WILL CALL NO OTHER EXIT ROUTINES.
*                8  - JES2 WILL UNCONDITIONALLY NOT PRINT A
*                     SEPARATOR (USED NATURALLY WHEN WE PRINT
*                     OUR OWN).
*               12  - JES2 WILL UNCONDITIONALLY PRINT A SEPARATOR
*                     (SEEMS DUMB ESPICALLY IF YOU PRINT YOUR OWN
*                     BUT IBM GIVES YOU FLEXIBILITY).
*
*     INSTALLED: 26 AUG 84
*
*     CHANGE LOG: 18SEP84-CHANGE USERS OF JCTUSER FIELDS TO USING
*                 PCEUSER FIELDS. SHARE 63 TAUGHT ME THAT JCTUSER
*                 COULD BE UPDATED AT THE SAME TIME IF ON 2 PRTS
*                 ON THE SAME TIME(UNLIKELY BUT POSSIBLE). BUT
*                 PCEUSER0 IS NOT ON DBLEWORD BOUNDARY, SO WE MUST
*                 USE OUR BUFFER FOR A WORK AREA AT TIMES.   JDM1
*
*---------------------------------------------------------------------*
         SPACE
         PRINT ON,NOGEN
         $SYSPARM (ON,GEN,DATA,NO,NO)  DOC OPTIONS
         COPY  $HASPGEN
         PRINT ON,NOGEN
USREXIT  $MODULE                       CREATE THE MIT
         $SYSPARM (ON,GEN,DATA,YES,YES)  DOC OPTIONS
         $BUFFER  DOC=YES              REQUIRE BY $GETBUF, $FREEBUF
*                                          MUST PRECEDE  $JCT
         $JCT     DOC=YES              MUST PRECEDE $CAT
         $JQE     DOC=YES              MUST PRECEDE $HCT
         $PCE     DOC=YES              MUST PRECEDE $HCT
         $CAT     DOC=YES              MUST PRECEDE $HCT
         $DCT     DOC=YES              WE NEED IN EXIT1
         $HCT     DOC=YES              REQ'D BY $SAVE, $RETURN
         $PDDB    DOC=YES              MUST PRECEDE $IOT
         $TAB     DOC=YES              MUST PRECEDE $IOT
         $IOT     DOC=YES
         $JOE     DOC=YES              NEED TO GET SYSOUT CLASS
         $XIT     DOC=YES              REQ'D TO GET EXIT
         $EXITPL  DOC=YES              REQ'D TO GET EXIT
         $MIT     DOC=YES              REQ'D BY $MODEND
         PRINT ON,NOGEN
         $PPPWORK DOC=YES              REQ'D TO FIND JOE
         PRINT ON,GEN
         EJECT
JEX1BAN  $ENTRY CSECT=YES,BASE=R12
         $SAVE
         LR    R12,R15                 LOAD BASE REGISTER
         XR    R15,R15                 CLEAR R15 IN CASE OF PUNCH
         TM    PCEID,PCEPUSID          IS DEVICE A PUNCH
         BO    RETURN                  RETURN IF IT IS.
         LR    R9,R0                   SAVE INPUT PARAMTERS
         L     R7,PWKJOE               GET ADDR OF WORK JOE
         USING JOEDSECT,R7             GET ADDRESSABILITY TO JOE
         SPACE
*--------------------------------------------------------------------*
*        NOW WE NEED TO GET A WORK BUFFER. WE FIX IT IN STORAGE.
*        ALSO BECAUSE OF THE LENGTH OF THE CODE WE NEED DOUBLE
*        BASE REGISTERS.
*--------------------------------------------------------------------*
         SPACE
         $GETBUF TYPE=HASP,FIX=YES,WAIT=YES
         LR    R3,R1                   SAVE THE ADDRESS
         USING BUFDSECT,R3             GET ADDRESSABILITY
         SPACE
*--------------------------------------------------------------------*
*        NOW WE MUST SEND A PDIR IN CASE WE ARE DEALING WITH A
*        SNA REMOTE. IF IT IS NOT AN SNA REMOTE THE REQUEST IS
*        IGNORED.
*--------------------------------------------------------------------*
         SPACE
         $SEPPDIR (R3)                 SEND A PDIR FOR SNA RMT
         B    L1T3                     SKIP SUBROUTINE AREA
         SPACE
*---------------------------------------------------------------------*
*        SUBROUTINES ARE DEFINED HERE,  R5 IS THE RETURN REGISTER.
*        I PLACED THESE ROUTINES AT THE END OF THE CSECT AND
*        ENCOUNTERED ADDRESSABILITY ERRORS WITH BUFSTART. SO MOVING
*        IT HERE SOLVED MY PROBLEM.
*
*        1ST SUBROUTINE PUTS OUT A LINE ON THE BANNER. IF YOU ATTEMPT
*        TO CODE MANY $PRPUT MACROS YOU WILL FIND THAT THE PGM WILL
*        GENERATE ALOT OF INSTRUCTIONS ( 16 BYTES PER $PRPUT ).
*        SO I WILL TRADE A LITTLE EFFICIENCY FOR STORAGE LOCATIONS
*        AND ALSO LATER ADDRESSABILITY PROBLEMS.
*---------------------------------------------------------------------*
         SPACE
PRTLINE  EQU   *
         LA    R1,BUFSTART             GET ADDR OF BUFFER
         L     R0,=F'132'              GET LENGTH TO PRINT
         $PRPUT DATA=(R1),LEN=(R0),COUNT=01,WAIT=YES
         MVI   BUFSTART,C' '           MOVE IN A BLANK
         MVC   BUFSTART+1(131),BUFSTART    ROLL THE BLANKS
         BR    R5
         SPACE
*---------------------------------------------------------------------*
*        SUBROUTINE TO CONVERT THE TIME TO   HH.MM.SS
*---------------------------------------------------------------------*
         SPACE
PUTTIME  EQU   *
         SRDL  R0,32                   SHIFT RIGHT 32 BITS
         D     R0,=F'+100'             CONVERT TO WHOLE SECS
         XR    R0,R0                   CLEAR R0
         D     R0,=F'+3600'            GET HRS
         CVD   R1,BUFSTART             CONVERT HRS TO            JDM1
         UNPK  BUFSTART+57(2),BUFSTART+6(2)    PRINTABLE FORMAT  JDM1
         OI    BUFSTART+58,240         FIX THE ZONE
         SRDL  R0,32                   SHIFT RIGHT 32 BITS
         D     R0,=F'+60'              CONVERT TO WHOLE MIN
         CVD   R1,BUFSTART             CONVERT HRS TO            JDM1
         MVI   BUFSTART+59,C'.'        MOVE IN PERIOD
         UNPK  BUFSTART+60(2),BUFSTART+6(2)   PRINTABLE FORMAT   JDM1
         OI    BUFSTART+61,240         FIX THE ZONE
         CVD   R0,BUFSTART             CONVERT HRS TO            JDM1
         MVI   BUFSTART+62,C'.'        MOVE IN PERIOD
         UNPK  BUFSTART+63(2),BUFSTART+6(2)   PRINTABLE FORMAT   JDM1
         OI    BUFSTART+64,240         FIX THE ZONE
         MVC   BUFSTART+66(L'TIMEZONE),TIMEZONE
         BR    R5                      RETURN WHEN WE CAME
         SPACE
*---------------------------------------------------------------------*
*        SUBROUTINE TO CONVERT DATE TO  YY.DDD  WHERE DD IS JULIAN
*---------------------------------------------------------------------*
         SPACE
PUTDATE  EQU   *
         STCM  R1,15,PCEUSER0          STORE THE DATE
         UNPK  BUFSTART+58(5),PCEUSER0+1(3)
         OI    BUFSTART+62,240         FIX THE ZONE
         MVC   BUFSTART+57(2),BUFSTART+58  MOVE DAY BACK ONE
         MVI   BUFSTART+59,C'.'        MOVE IN PERIOD
         BR    R5
*--------------------------------------------------------------------*
*        THIS SUBROUTINES DETERMINES THE CAVEAT FOR THE BANNER PAGE
*--------------------------------------------------------------------*
         SPACE
CAVEAT   EQU   *
         MVC   BUFSTART+39(L'CLASINFO),CLASINFO
         CLI   JCTPNAME+10,C'P'        PRIVACY ACT DATA ?????
         BE    DOPRIV
         CLI   JCTPNAME+10,C'O'        FOR OFFICIAL USE ONLY ????
         BE    DOFOUO
         MVC   BUFSTART(L'UNCL),UNCL   DEFAULT
         MVC   BUFSTART+112(L'UNCL),UNCL
         BR    R5
         SPACE
DOFOUO   EQU   *
         MVC   BUFSTART(L'FOUO),FOUO
         MVC   BUFSTART+104(L'FOUO),FOUO
         BR    R5
         SPACE
DOPRIV   EQU   *
         MVC   BUFSTART(L'PRIV),PRIV
         MVC   BUFSTART+109(L'PRIV),PRIV
         BR    R5
         SPACE
*--------------------------------------------------------------------*
*        NOW WE ARE GOING TO START TO BUILD THE BANNER. THE COMMENTS
*        WILL BE LENGTHY AT TIMES. IT IS ONE WAY FOR ME TO DOCUMENT
*        AND ALSO MAKE SURE I DID NOT MISS ANYTHING. I WILL BE BUILD-
*        ING A 63 LINE BANNER (START ON LINE 4) AND WILL HAVE LABELS
*        TO TELL YOU WHAT LINES I AM ON.
*--------------------------------------------------------------------*
         SPACE
L1T3     EQU   *
         BAL   R5,CAVEAT               THE CAVEAT
         BAL   R5,PRTLINE              PRINT CAVEAT LINE
         BAL   R5,PRTLINE              PRINT A LINE
         BAL   R5,PRTLINE              PRINT A LINE
L4T15    EQU   *
         LA    R0,JCTJNAME             POINT TO THE JOBNAME
         $PBLOCK BUFFER=(R3),DATA=(R0) BLOCK LETTER THE JOBNAME
         SPACE
L16      EQU   *
         MVI   BUFSTART,C' '           BLANK OUT
         MVC   BUFSTART+1(131),BUFSTART   THE BUFFER AREA
         BAL   R5,PRTLINE              PRINT A LINE
         SPACE
L17T28   EQU   *
         MVC   PCEUSER0(8),$BLANKS     BLANK PROVIDE WORK AREA
         MVC   PCEUSER0(1),JCTJOBID    GET JOB TYPE
         MVC   PCEUSER0+1(4),JCTJOBID+4    AND THE NUMBER
         MVC   PCEUSER0+6(1),JOECURCL  GET SYSOUT CLASS
         LA    R0,PCEUSER0             POINT TO FIELD
         $PBLOCK BUFFER=(R3),DATA=(R0)
         SPACE
L29      EQU   *
         MVI   BUFSTART,C' '          BLANK OUT
         MVC   BUFSTART+1(131),BUFSTART   THE BUFFER AREA
         BAL   R5,PRTLINE             PRINT A LINE
L30T31   EQU   *
         BAL   R5,CAVEAT
         BAL   R5,PRTLINE             PRINT A LINE
         BAL   R5,PRTLINE
         SPACE
L32T33   EQU   *
         MVC   BUFSTART(1),AST         MOVE IN ASTERICK
         MVC   BUFSTART+131(1),AST     MOVE IN ASTERICK
         MVI   BUFSTART+1,C'-'         MOVE IN A DASH
         MVC   BUFSTART+2(129),BUFSTART+1   ROLL THE DASH
         BAL   R5,PRTLINE             PRINT A LINE
         MVC   BUFSTART(1),AST         MOVE IN ASTERICK
         MVC   BUFSTART+131(1),AST     MOVE IN ASTERICK
         BAL   R5,PRTLINE             PRINT A LINE
         SPACE
L34      EQU   *
         MVC   BUFSTART(1),AST         MOVE IN ASTERICK
         MVC   BUFSTART+131(1),AST     MOVE IN ASTERICK
         MVC   BUFSTART+31(L'USAF),USAF
         BAL   R5,PRTLINE             PRINT A LINE
         SPACE
L35T36   EQU   *
         MVC   BUFSTART(1),AST         MOVE IN ASTERICK
         MVC   BUFSTART+131(1),AST     MOVE IN ASTERICK
         BAL   R5,PRTLINE             PRINT A LINE
         MVC   BUFSTART(1),AST         MOVE IN ASTERICK
         MVC   BUFSTART+131(1),AST     MOVE IN ASTERICK
         BAL   R5,PRTLINE             PRINT A LINE
         SPACE
L37      EQU   *
         MVC   BUFSTART(1),AST         MOVE IN ASTERICK
         MVC   BUFSTART+131(1),AST     MOVE IN ASTERICK
         MVC   BUFSTART+20(L'SADAFCC),SADAFCC
         BAL   R5,PRTLINE             PRINT A LINE
         SPACE
L38      EQU   *
         MVC   BUFSTART(1),AST         MOVE IN ASTERICK
         MVC   BUFSTART+131(1),AST     MOVE IN ASTERICK
         BAL   R5,PRTLINE             PRINT A LINE
         SPACE
L39      EQU   *
         MVC   BUFSTART(1),AST         MOVE IN ASTERICK
         MVC   BUFSTART+131(1),AST     MOVE IN ASTERICK
         BAL   R5,PRTLINE             PRINT A LINE
         SPACE
L40      EQU   *
         MVC   BUFSTART(1),AST         MOVE IN ASTERICK
         MVC   BUFSTART+131(1),AST     MOVE IN ASTERICK
         MVC   BUFSTART+5(L'RUNCLASS),RUNCLASS
         MVC   BUFSTART+18(1),JCTCLASS    MOVE IN RUN CLASS
         MVC   BUFSTART+42(L'SUBDATE),SUBDATE
         L     R1,JCTCDTON            COMPUTE THE
         BAL   R5,PUTDATE                 SUBMIT DATE
         BAL   R5,PRTLINE             PRINT A LINE
         SPACE
L41      EQU   *
         MVC   BUFSTART(1),AST         MOVE IN ASTERICK
         MVC   BUFSTART+131(1),AST     MOVE IN ASTERICK
         BAL   R5,PRTLINE             PRINT A LINE
         SPACE
L42      EQU   *
         MVC   BUFSTART+131(1),AST     MOVE IN ASTERICK
         MVC   BUFSTART+42(L'SUBTIME),SUBTIME   MOVE IN SUB TIME
         L     R0,JCTCNVON             COMPUTE SUBMIT TIME
         BAL   R5,PUTTIME
         MVC   BUFSTART(8),$BLANKS     BLANK AREA WE SCREWDUP    JDM1
         MVC   BUFSTART(1),AST         MOVE IN ASTERICK          JDM1
         MVC   BUFSTART+2(L'NETACCT),NETACCT                     JDM1
         MVC   BUFSTART+86(SA),SAD1    MOVE IN LOGO LINE
         BAL   R5,PRTLINE             PRINT A LINE
         SPACE
L43      EQU   *
         MVC   BUFSTART(1),AST         MOVE IN ASTERICK
         MVC   BUFSTART+131(1),AST     MOVE IN ASTERICK
         MVC   BUFSTART+86(SA),SAD2    MOVE IN LOGO LINE
         BAL   R5,PRTLINE             PRINT A LINE
         SPACE
L44      EQU   *
         MVC   BUFSTART(1),AST         MOVE IN ASTERICK
         MVC   BUFSTART+131(1),AST     MOVE IN ASTERICK
         MVC   BUFSTART+5(L'PROJCODE),PROJCODE MOVE IN VALUE
         MVC   BUFSTART+18(4),JCTACCTN MOVE IN 1ST 4 ACCT FIELD
         MVC   BUFSTART+43(L'STARTDTE),STARTDTE
         L     R1,JCTXDTON             COMPUTE THE
         BAL   R5,PUTDATE                   START DATE
         MVC   BUFSTART+86(SA),SAD3    MOVE IN LOGO LINE
         BAL   R5,PRTLINE             PRINT A LINE
         SPACE
L45      EQU   *
         MVC   BUFSTART(1),AST         MOVE IN ASTERICK
         MVC   BUFSTART+131(1),AST     MOVE IN ASTERICK
         MVC   BUFSTART+86(SA),SAD4    MOVE IN LOGO LINE
         BAL   R5,PRTLINE             PRINT A LINE
         SPACE
L46      EQU   *
         MVC   BUFSTART+131(1),AST     MOVE IN ASTERICK
         MVC   BUFSTART+43(L'STARTTME),STARTTME
         L     R0,JCTXEQON             COMPUTE THE
         BAL   R5,PUTTIME                 START TIME
         MVC   BUFSTART(8),$BLANKS     BLANK AREA WE SCREWDUP    JDM1
         MVC   BUFSTART(1),AST         MOVE IN ASTERICK          JDM1
         MVC   BUFSTART+6(L'DSDCODE),DSDCODE MOVE IN VALUE       JDM1
         MVC   BUFSTART+18(4),JCTROOMN MOVE IN 2ND 4 ACCT FIELD
         MVC   BUFSTART+86(SA),SAD5    MOVE IN LOGO LINE
         BAL   R5,PRTLINE             PRINT A LINE
         SPACE
L47      EQU   *
         MVC   BUFSTART(1),AST         MOVE IN ASTERICK
         MVC   BUFSTART+131(1),AST     MOVE IN ASTERICK
         BAL   R5,PRTLINE             PRINT A LINE
         SPACE
L48      EQU   *
         MVC   BUFSTART(1),AST         MOVE IN ASTERICK
         MVC   BUFSTART+131(1),AST     MOVE IN ASTERICK
         MVC   BUFSTART+3(L'PGMFLD),PGMFLD MOVE IN VALUE
         MVI   BUFSTART+18,C''''           MOVE IN 1ST  QUOTE
         MVC   BUFSTART+19(20),JCTPNAME    MOVE IN PGMNAME FLD
         MVI   BUFSTART+39,C''''           MOVE IN LAST QUOTE
         MVC   BUFSTART+45(L'ENDDATE),ENDDATE
         L     R1,JCTXDTOF            COMPUTE THE
         BAL   R5,PUTDATE                OFF EXECUTION
         BAL   R5,PRTLINE             PRINT A LINE
         SPACE
L49      EQU   *
         MVC   BUFSTART(1),AST         MOVE IN ASTERICK
         MVC   BUFSTART+131(1),AST     MOVE IN ASTERICK
         MVC   BUFSTART+83(AC),AFCC1   MOVE IN LOGO LINE
         BAL   R5,PRTLINE             PRINT A LINE
         SPACE
L50      EQU   *
         MVC   BUFSTART+131(1),AST     MOVE IN ASTERICK
         MVC   BUFSTART+18(1),JCTCPUID MOVE IN CPUID 1ST LETTER A/B
         MVC   BUFSTART+45(L'ENDTIME),ENDTIME
         L     R0,JCTXEQOF            COMPUTE THE
         BAL   R5,PUTTIME                OFF EXECUTION
         MVC   BUFSTART(8),$BLANKS     BLANK AREA WE SCREWDUP    JDM1
         MVC   BUFSTART(1),AST         MOVE IN ASTERICK          JDM1
         MVC   BUFSTART+4(L'RUNONCPU),RUNONCPU MOVE IN VALUE     JDM1
         MVC   BUFSTART+83(AC),AFCC2   MOVE IN LOGO LINE
         BAL   R5,PRTLINE             PRINT A LINE
         SPACE
L51      EQU   *
         MVC   BUFSTART(1),AST         MOVE IN ASTERICK
         MVC   BUFSTART+131(1),AST     MOVE IN ASTERICK
         MVC   BUFSTART+83(AC),AFCC3   MOVE IN LOGO LINE
         BAL   R5,PRTLINE             PRINT A LINE
         SPACE
L52      EQU   *
         MVC   BUFSTART(1),AST         MOVE IN ASTERICK
         MVC   BUFSTART+131(1),AST     MOVE IN ASTERICK
         MVC   BUFSTART+4(L'PRTEDON),PRTEDON MOVE IN VALUE
         MVC   BUFSTART+45(L'PRTDATE),PRTDATE
         $TIME
         LR    R6,R0                   SAVE TIME FOR LATER
         BAL   R5,PUTDATE              R1 HAS DATE IN IT
         MVC   BUFSTART+83(AC),AFCC4   MOVE IN LOGO LINE
         BAL   R5,PRTLINE             PRINT A LINE
         SPACE
L53      EQU   *
         MVC   BUFSTART(1),AST         MOVE IN ASTERICK
         MVC   BUFSTART+131(1),AST     MOVE IN ASTERICK
         MVC   BUFSTART+83(AC),AFCC5   MOVE IN LOGO LINE
         BAL   R5,PRTLINE             PRINT A LINE
         SPACE
L54      EQU   *
         MVC   BUFSTART+131(1),AST     MOVE IN ASTERICK
         MVC   BUFSTART+18(1),JCTCPUID MOVE IN CPU ID 1ST LETTER A/B
         MVI   BUFSTART+19,C'/'        MOVE IN SLASH
         CLC   JOEREMOT,=H'0'          ARE WE PRTING LOCAL
         BNE   L54SKP1
         MVC   BUFSTART+20(5),=C'LOCAL'
         B     L54SKP2
L54SKP1  EQU   *
         MVC   BUFSTART+20(6),=C'REMOTE'
L54SKP2  EQU   *
         MVC   BUFSTART+45(L'PRTTIME),PRTTIME
         LR    R0,R6                   RESTORE THE TIME
         BAL   R5,PUTTIME
         MVC   BUFSTART(8),$BLANKS     BLANK AREA WE SCREWDUP    JDM1
         MVC   BUFSTART(1),AST         MOVE IN ASTERICK          JDM1
         MVC   BUFSTART+5(L'CPUPRT),CPUPRT MOVE IN VALUE         JDM1
         MVC   BUFSTART+83(AC),AFCC6   MOVE IN LOGO LINE
         BAL   R5,PRTLINE             PRINT A LINE
         SPACE
L55      EQU   *
         MVC   BUFSTART(1),AST         MOVE IN ASTERICK
         MVC   BUFSTART+131(1),AST     MOVE IN ASTERICK
         MVC   BUFSTART+83(AC),AFCC7   MOVE IN LOGO LINE
         BAL   R5,PRTLINE             PRINT A LINE
         SPACE
L56      EQU   *
         MVC   BUFSTART(1),AST         MOVE IN ASTERICK
         MVC   BUFSTART+131(1),AST     MOVE IN ASTERICK
         MVC   BUFSTART+4(L'MAILCDE),MAILCDE MOVE IN VALUE
         SPACE
*---------------------------------------------------------------------*
*        THIS IS WHERE WE DETERMINE THE 'MAIL CODE' THAT THE USERS    *
*        JOB WILL BE SENT TO IF IT IS PRINTED LOCALLY. LOOK AT THE    *
*        'MAIL CODE' TABLE LATER IN THE PROGRAM FOR A DETAILED        *
*        DESCRIPTION OF THE LOGIC.                                    *
*---------------------------------------------------------------------*
         SPACE
         CLC   JOEREMOT,=H'0'          ARE WE PRINTING REMOTE
         BNE   RMTMSG                  IF SO PUT IN MSG
         CLC   JCTPNAME(2),=C'D='      USER DESIRE TO USE MAIL CODE???
         BNE   FNDEFALT                IF NOT FIND THE DEFAULT
         L     R1,=V(MAILBOX)          GET ADDR OF MAIL CODE TABLE
         SPACE
*-------------------------------------------------------------------*
*        VALIDATE THE MAIL CODE ENTRY IN PGMNAME FLD. BUT IT MAY
*        BE INVALID, SO WE MUST VALIDATE IT FOR CORRECTNESS
*-------------------------------------------------------------------*
         SPACE
MAILLOOP EQU   *
         CLI   0(R1),X'FF'             ARE WE AT END OF TABLE
         BE    FNDEFALT                YES WE NEED TO GET DEFAULT
         CLC   0(5,R1),JCTPNAME+2      IT IS THE VALUE ???
         BE    GOTCODE                 WE FOUND IT
         A     R1,FIVE                 BUMP THE POINTER
         B     MAILLOOP                GO LOOP
         SPACE
*---------------------------------------------------------------------*
*        NOW WE MUST FIND THE DEFAULT IF IT EXISTS, BASED ON
*        1ST 4 CHARS OF THE JOBNAME.
*---------------------------------------------------------------------*
         SPACE
FNDEFALT EQU   *
         L     R1,=V(MAILCODE)         GET THE ADDRESS
         SPACE
STOPLOOP EQU   *
         CLI   0(R1),X'FF'             ARE WE AT END OF TABLE
         BE    TRY2                    NO MATCH
         CLC   JCTJNAME(4),0(R1)       SEARCH ON CC OF JOBNAME
         BE    GOTDEFLT                FOUND DEFAULT
         A     R1,FIVE                 BUMP POINTER
         B     STOPLOOP                GO LOOP
         SPACE
*---------------------------------------------------------------------*
*        NOW WE MUST FIND THE DEFAULT IF IT EXISTS
*---------------------------------------------------------------------*
         SPACE
TRY2     EQU   *
         L     R1,=V(MAILCODE)         GET THE ADDRESS
         SPACE
TRY2LOOP EQU   *
         CLI   0(R1),X'FF'             ARE WE AT END OF TABLE
         BE    STOPERR
         CLI   1(R1),C'#'              ARE WE GENERIC TESTING
         BE    TSTGENL1
         CLI   2(R1),C'#'              ARE WE GENERIC TESTING
         BE    TSTGENL2
         CLI   3(R1),C'#'              ARE WE GENERIC TESTING
         BE    TSTGENL3
         B     TSTGENL2                TEST FOR LENGTH OF 2
         SPACE
TSTGENL1 EQU   *
         CLC   JCTJNAME(1),0(R1)       DOES 1ST CHAR MATCH
         BE    GOTDEFLT                YES WE HAVE IT
         B     INCRSTOP
         SPACE
TSTGENL2 EQU   *
         CLC   JCTJNAME(2),0(R1)       DOES 1ST CHAR MATCH
         BE    GOTDEFLT                YES WE HAVE IT
         B     INCRSTOP
         SPACE
TSTGENL3 EQU   *
         CLC   JCTJNAME(3),0(R1)       DOES 1ST CHAR MATCH
         BE    GOTDEFLT                YES WE HAVE IT
INCRSTOP EQU   *
         A     R1,FIVE                 BUMP POINTER
         B     TRY2LOOP
         SPACE
*---------------------------------------------------------------------*
*        THIS IS WHERE WE MOVE SOME MAIL CODE
*---------------------------------------------------------------------*
         SPACE
GOTDEFLT EQU   *
         SR    R2,R2                   CLEAR R2
         IC    R2,4(R1)                GET THE INDEX
         MH    R2,HFIVE                MULT BY 5
         L     R1,=V(MAILBOX)         GET ADDR OF TABLE
         AR    R1,R2                   ADD INTO TABLE
         MVC   BUFSTART+18(5),0(R1)    MOVE IN THE MAIL CODE
         MVC   BUFSTART+26(L'DEFLMSG),DEFLMSG
         B     LOGO56                  JUMP ERR MSG
         SPACE
STOPERR  EQU   *
         MVC   BUFSTART+18(L'STPERMSG),STPERMSG
         B     LOGO56                  JUMP ERR MSG
         SPACE
GOTCODE  EQU   *
         MVC   BUFSTART+18(5),0(R1)    MOVE IN THE MAILCODE
         B     LOGO56                  JUMP ERR MSG
         SPACE
RMTMSG   EQU   *
         MVC   BUFSTART+18(L'RMTPRT),RMTPRT  TELL RMT PRINTED
         SPACE
LOGO56   EQU   *
         MVC   BUFSTART(1),AST         MOVE IN ASTERICK
         MVC   BUFSTART+131(1),AST     MOVE IN ASTERICK
         MVC   BUFSTART+83(AC),AFCC8   MOVE IN LOGO LINE
         BAL   R5,PRTLINE             PRINT A LINE
         SPACE
L57      EQU   *
         MVC   BUFSTART(1),AST         MOVE IN ASTERICK
         MVC   BUFSTART+131(1),AST     MOVE IN ASTERICK
         MVC   BUFSTART+1(1),DASH      MOVE IN DASH
         MVC   BUFSTART+2(129),BUFSTART+1 ROLL DASHES
         BAL   R5,PRTLINE             PRINT A LINE
         SPACE
L58      EQU   *
         BAL   R5,PRTLINE             PRINT A LINE
         SPACE
L59      EQU   *
         BAL   R5,CAVEAT
         BAL   R5,PRTLINE
         SPACE
L60      EQU   *
         BAL   R5,PRTLINE
L61      EQU   *
         C     R9,ZERO                 IS IT THE START
         BH    CHKFOR4
         MVC   BUFSTART+19(L'START),START
         MVC   BUFSTART+39(L'START),START
         MVC   BUFSTART+59(L'START),START
         MVC   BUFSTART+79(L'START),START
         MVC   BUFSTART+99(L'START),START
         B     L61DONE
CHKFOR4  EQU   *
         C     R9,FOUR                 IS IT CONT
         BH    MUSTBE8
         MVC   BUFSTART+19(L'CONT),CONT
         MVC   BUFSTART+39(L'CONT),CONT
         MVC   BUFSTART+59(L'CONT),CONT
         MVC   BUFSTART+79(L'CONT),CONT
         MVC   BUFSTART+99(L'CONT),CONT
         B     L61DONE
MUSTBE8  EQU   *
         MVC   BUFSTART+19(L'END),END
         MVC   BUFSTART+39(L'END),END
         MVC   BUFSTART+59(L'END),END
         MVC   BUFSTART+79(L'END),END
         MVC   BUFSTART+99(L'END),END
L61DONE  EQU   *
         BAL   R5,PRTLINE             PRINT A LINE
L62      EQU   *
         BAL   R5,PRTLINE             PRINT A LINE
         SPACE
L63T64   EQU   *
         MVI   BUFSTART,C'$'           MOVE IN SEPARATOR CHARACTER
         MVC   BUFSTART+1(131),BUFSTART ROLL THE DOLLAR SIG
         BAL   R5,PRTLINE             PRINT A LINE
         MVI   BUFSTART,C'$'           MOVE IN SEPARATOR CHARACTER
         MVC   BUFSTART+1(131),BUFSTART ROLL THE DOLLAR SIG
         BAL   R5,PRTLINE             PRINT A LINE
         SPACE
*--------------------------------------------------------------------*
*        NOW WE ARE SET TO PRINT THE 'JESNEWS' FILE
*--------------------------------------------------------------------*
         SPACE
JESNEWS  EQU   *
         ICM   R1,15,$NEWSTTR          GET TTR OF THE NEWS
         LTR   R1,R1                   IS NEWS REALLY THERE?
         BZ    EXIT                    IF NOT, QUIT
         $RESTORE R0                   RESTORE ENTRY TYPE
         LTR   R0,R0                   IS IT FRONT BANNER
         BNZ   EXIT                    QUIT
         OI    PPFLAG,PPNEWS           SET NEWS FLAG
         ST    R1,PCEJMTTR             SET NEWS MTTR
         MVC   PCEEJRCB,=Y(HDBSTART-BUFDSECT)  SET INITIAL OFFSET
         MVC   PPKEY,=C'$$NEWS'        SET SPECIAL JOB/DS KEY
         MVC   PRLINECT,MINUSONE       SET LARGE PAGE SIZE
         SPACE
EXIT     EQU   *
         $FREEBUF (R3)                 FREE WORK BUFFER
         DROP  R3
         SPACE
*---------------------------------------------------------------------*
*        SINCE WE HAVE PRINTED OUR OWN BANNER, WE WANT TO RETURN
*        BACK TO JES2 AN EIGHT SO HE WILL NOT PRINT THE DEFAULT
*        BANNER AFTER OURS.
*---------------------------------------------------------------------*
         SPACE
         L     R15,=F'8'               SET RC=8
         SPACE
RETURN   EQU   *
         $RETURN RC=(R15)              RETURN TO HASPPRPU
         EJECT
*---------------------------------------------------------------------*
*        CONSTANTS ARE DEFINED BELOW
*---------------------------------------------------------------------*
         SPACE
STOPLEN  EQU   7                       LENGTH OF CC+MAILCODE
PPNEWS   EQU   X'01'
         DS    0F
MINUSONE DC    F'-1'
ZERO     DC    F'0'
FOUR     DC    F'4'
FIVE     DC    F'5'
HFIVE    DC    H'5'
USAF     DC    C'U  N  I  T  E  D      S  T  A  T  E  S      A  I  R   +
                  F  O  R  C  E'
         SPACE
SADAFCC  DC    C'SAN    ANTONIO    DATA    SERVICES    CENTER  /  AIR  +
                 FORCE    COMMUNICATIONS    COMMAND'
         SPACE
SUBDATE  DC    C'SUBMIT DATE -'
SUBTIME  DC    C'SUBMIT TIME -'
STARTDTE DC    C'START DATE -'
STARTTME DC    C'START TIME -'
ENDDATE  DC    C'END DATE -'
ENDTIME  DC    C'END TIME -'
PRTDATE  DC    C'PRT DATE -'
PRTTIME  DC    C'PRT TIME -'
RUNCLASS DC    C'RUN CLASS  -'
TIMEZONE DC    C'(CST)'
PROJCODE DC    C'PROJ CODE  -'
DSDCODE  DC    C'DSD CODE  -'
PGMFLD   DC    C'PGMNAME FLD  - '''
RUNONCPU DC    C'RUN ON CPU  -'
PRTEDON  DC    C'PRINTED ON'
CPUPRT   DC    C'CPU/PRTER  -'
MAILCDE  DC    C'MAIL  CODE  -'
START    DC    C'*- START -*'
CONT     DC    C'*- CONT -*'
END      DC    C'**- END -**'
AST      DC    C'*'
DASH     DC    C'-'
RMTPRT   DC    C'PRINTED AT RMT LOCATION'
DEFLMSG  DC    C'DEFAULT MAIL CODE USED'
STPERMSG DC    C'UNDETERMINABLE'
NETACCT  DC    C'NETWORK ACCT  - NONE'
PRIV     DC    C'* - PRIVACY ACT DATA - *'
UNCL     DC    C'* - UNCLASSIFIED - *'
FOUO     DC    C'* - FOR OFFICIAL USE ONLY - *'
CLASINFO DC    C'HIGHEST LEVEL CLASSIFICATION CONTAINED IN THIS DOCUMENX
               T'
         SPACE
         LTORG
         EJECT
*---------------------------------------------------------------------*
*        WE HAVE A LOGO WE WANT IN THE LOWER RIGHT HAND CORNER
*        OF THE PAGE.
*---------------------------------------------------------------------*
         SPACE
*              0        1         2         3         4         5
*              1234567890123456789012345678901234567890123456789012345
SAD1     DC  C'SSSSS     AAA     DDDD     SSSSS    CCCCC'
SAD2     DC  C'S        A   A    D   D    S        C    '
SAD3     DC  C'SSSSS    AAAAA    D   D    SSSSS    C    '
SAD4     DC  C'    S    A   A    D   D        S    C    '
SAD5     DC  C'SSSSS    A   A    DDDD     SSSSS    CCCCC'
SA       EQU SAD2-SAD1           COMPUTE LENGTH OF LOGO LINE
         SPACE
AFCC1    DC  C' AAAAAA      FFFFFFFF     CCCCCCCC     CCCCCCCC'
AFCC2    DC  C'AAAAAAAA     FFFFFFFF     CCCCCCCC     CCCCCCCC'
AFCC3    DC  C'AA    AA     FF           CC           CC      '
AFCC4    DC  C'AAAAAAAA     FFFFFFF      CC           CC      '
AFCC5    DC  C'AAAAAAAA     FFFFFFF      CC           CC      '
AFCC6    DC  C'AA    AA     FF           CC           CC      '
AFCC7    DC  C'AA    AA     FF           CCCCCCCC     CCCCCCCC'
AFCC8    DC  C'AA    AA     FF           CCCCCCCC     CCCCCCCC'
AC       EQU AFCC2-AFCC1         COMPUTE LENGTH OF LOGO LINE
         EJECT
         TITLE 'PUNCH PORTION OF EXIT #1'
*---------------------------------------------------------------------*
*        NOW WE HAVE THE PUNCH EXIT
*---------------------------------------------------------------------*
JEX1PUN  $ENTRY CSECT=YES,BASE=R12
         $SAVE
         LR    R12,R15                 LOAD THE BASE REGISTER
         L     R15,=F'0'               CLEAR R15 FOR RC=0
         SPACE
*---------------------------------------------------------------------*
*        WE MUST TEST TO SEE IF IT THE FIRST CARD, IF NOT GET OUT
*---------------------------------------------------------------------*
         SPACE
         C     R9,=F'0'                IS IT THE HEADER?
         BH    EOJ                     IF NOT, GET OUT
         SPACE
         LR    R9,R0                   SAVE INPUT PARMATERS
         L     R7,PWKJOE           ADDR OF WORK JOE
         USING JOEDSECT,R7         GET ADDRESSABILITY
         $GETBUF TYPE=HASP,FIX=YES,WAIT=YES   GET A WORK BUFFER
         LR    R3,R1               SAVE ADDR OF THE BUFFER
         USING BUFDSECT,R3         GET ADDRESSABILITY
         MVI   BUFSTART,C' '       PUT IN A BLANK
         MVC   BUFSTART+1(79),BUFSTART ROLL THE BLANKS
         MVC   BUFSTART(1),JCTJOBID MOVE IN TYPE
         MVC   BUFSTART+2(4),JCTJOBID+4  MOVE IN JOB NUMBER
         MVC   BUFSTART+7(8),JCTJNAME MOVE IN JOBNAME
         CLI   JCTPNAME+10,C'P'    PRIVACY ACT DATA?
         BE    PUNPRIV
         CLI   JCTPNAME+10,C'O'    F.O.U.O. ?
         BNE   PUNUNCL
         MVC   BUFSTART+17(L'FOUOMSG),FOUOMSG
         B     PCONT1
PUNUNCL  EQU   *
         MVC   BUFSTART+17(L'UNCLMSG),UNCLMSG
         B     PCONT1
PUNPRIV  EQU   *
         MVC   BUFSTART+17(L'PRIVMSG),PRIVMSG
PCONT1   EQU   *
         CLC   JOEREMOT,=H'0'      IS IT A REMOTE??
         BNE   PUNHEAD
         SPACE
*--------------------------------------------------------------------*
*        NO WE FIND THE MAIL CODE FOR LOCAL PUNCHING.
*--------------------------------------------------------------------*
         SPACE
         CLC   JCTPNAME(2),=C'D='  DID USER SUPPLY
         BNE   FINDEF              IF NOT, FIND DEFAULT
         L     R1,=V(MAILBOX)      MUST VALIDATE THE CODE
LOOP1    EQU   *
         CLI   0(R1),X'FF'         ARE WE AT END OF TABLE?
         BE    FINDEF              YES, SO FIND DEFAULT
         CLC   0(5,R1),JCTPNAME+2  DO WE MATCH?
         BE    GOTDEF
         A     R1,=F'5'            BUMP
         B     LOOP1
FINDEF   EQU   *
         L     R1,=V(MAILCODE)     GET ADDR OF CODES
LOOP2    EQU   *
         CLI   0(R1),X'FF'         ARE WE AT END OF TABLE?
         BE    PCONT2              YES, SO FIND DEFAULT
         CLC   0(4,R1),JCTJNAME    DO WE MATCH?
         BE    GOTDEF
         A     R1,=F'5'            BUMP
         B     LOOP2
PCONT2   EQU   *
         L     R1,=V(MAILCODE)     GET ADDR OF CODES
LOOP3    EQU   *
         CLI   0(R1),X'FF'         ARE WE AT END OF TABLE?
         BE    LOOPERR             YES, SO FIND DEFAULT
         CLI   1(R1),C'#'
         BE    PGENL1
         CLI   2(R1),C'#'
         BE    PGENL2
         CLI   3(R1),C'#'
         BE    PGENL3
         B     PGENL2
PGENL1   EQU   *
         CLC   JCTJNAME(1),0(R1)
         BE    GOTDEF
         B     LOOP3END
PGENL2   EQU   *
         CLC   JCTJNAME(2),0(R1)
         BE    GOTDEF
         B     LOOP3END
PGENL3   EQU   *
         CLC   JCTJNAME(3),0(R1)
         BE    GOTDEF
         B     LOOP3END
LOOP3END EQU   *
         A     R1,=F'5'            BUMP POINTER
         B     LOOP3               DO IT AGAIN
GOTDEF   EQU   *
         L     R2,=F'0'            ZERO R2
         IC    R2,4(R1)            GET OFFSET
         MH    R2,=H'5'            MULTIPLY BY 5
         L     R1,=V(MAILBOX)      GET BASE OF TABLE
         AR    R1,R2               ADD THE OFFSET
         MVC   BUFSTART+55(5),0(R1) MOVE IN MAILCODE
         B     PUNHEAD
LOOPERR  EQU   *
         MVC   BUFSTART+55(5),=C'?????'
PUNHEAD  EQU   *
         MVC   BUFSTART+49(6),=C'>>-->>'
         LA    R1,BUFSTART         GET THE ADDRESS
         L     R0,=F'80'           GET THE LENGTH
         $PRPUT DATA=(R1),LEN=(R0),COUNT=01,WAIT=YES
         $FREEBUF (R3)
         DROP  R3
         L     R15,=F'8'           SET RC=8
EOJ      EQU   *
         $RETURN RC=(R15)
         EJECT
*---------------------------------------------------------------------*
*        DEFINE OUR CONSTANTS HERE
*---------------------------------------------------------------------*
         SPACE
UNCLMSG  DC    C'*- UNCLASSIFIED -*'
PRIVMSG  DC    C'*- PRIVACY ACT DATA -*'
FOUOMSG  DC    C'*- FOR OFFICAL USE ONLY -*'
         SPACE
         LTORG
         $MODEND
         END
