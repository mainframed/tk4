         TITLE '   P D S P R O G M '
*$DOC@*****************************************************************
*                                                                     *
*  PDSPROGM: PDS SCRATCH/RENAME UTILITY PROGRAM  -  USERS GUIDE       *
*                                                                     *
*  'PDSPROGM' IS A UTILITY PROGRAM USED FOR DELETING OR RENAMING      *
*  ONE OR MORE MEMBERS OF A PARTITIONED DATA SET (PDS).               *
*                                                                     *
*  THE IBM UTILITY 'IEHPROGM' CAN DELETE AND RENAME MEMBERS,          *
*  BUT 'PDSPROGM' HAS THESE ADVANTAGES OVER IT:                       *
*    .  THE DATA SET NAME IS SPECIFIED ONLY IN A DD STATEMENT,        *
*    .  IF THE DATA SET IS CATALOGED, THE VOLUME AND                  *
*       UNIT TYPE NEED NOT BE SPECIFIED ANYWHERE,                     *
*    .  CONTROL STATEMENTS ARE SHORT AND SIMPLE,                      *
*    .  AN 'ALIAS' CAN BE CREATED FOR A MEMBER.                       *
*                                                                     *
*  'PDSPROGM' REQUIRES THE FOLLOWING DDNAMES:                         *
*    .  SYSPRINT - THE LOG AND MESSAGE OUTPUT,                        *
*    .  SYSIN    - THE CONTROL STATEMENT INPUT,                       *
*    .  SYSLIB   - THE PARTITIONED DATA SET CONTAINING                *
*                  THE MEMBER(S) TO BE PROCESSED.                     *
*                                                                     *
*  CONTROL STATEMENTS ARE 80-CHARACTER RECORDS, IN WHICH              *
*  ONLY THE FIRST 72 CHARACTERS ARE SCANNED.  THE LAST                *
*  8 POSITIONS ARE IGNORED, NOT LISTED ON THE LOG, AND                *
*  MAY BE USED FOR ANY PURPOSE, SUCH AS SEQUENCE NUMBERS.             *
*                                                                     *
*  A CONTROL STATEMENT CONSISTS OF AN OPERATION AND ONE               *
*  OR MORE OPERANDS.  THE OPERATION MAY BEGIN IN COLUMN 1 OR          *
*  MAY BE PRECEDED BY ONE OR MORE BLANKS.                             *
*                                                                     *
*  ONE OR MORE OPERANDS FOLLOW THE OPERATION, SEPARATED               *
*  FROM IT AND FROM EACH OTHER BY ONE OR MORE BLANKS.                 *
*  ANY COMMAS FOUND WILL BE TREATED AS BLANKS.                        *
*                                                                     *
*  STATEMENTS MAY NOT BE CONTINUED.                                   *
*                                                                     *
*  A STATEMENT CONTAINING ALL BLANKS WILL BE TREATED AS A             *
*  COMMENT AND MERELY LOGGED.  IF THE FIRST NONBLANK                  *
*  CHARACTER ON A STATEMENT IS AN ASTERISK (*), THE                   *
*  STATEMENT WILL BE TREATED AS A COMMENT AND MERELY LOGGED.          *
*                                                                     *
*  THE 'DELETE' STATEMENT CONSISTS OF THE OPERATION 'DELETE'          *
*  (OR 'DEL', 'D', 'SCRATCH', OR 'SCR') FOLLOWED BY ONE OPERAND,      *
*  THE NAME OF THE MEMBER TO BE DELETED.                              *
*                                                                     *
*  THE 'RENAME' STATEMENT CONTAINS THE OPERATION 'RENAME'             *
*  (OR 'REN' OR 'R') FOLLOWED BY TWO OPERANDS.  THE FIRST             *
*  OPERAND IS THE CURRENT NAME OF THE MEMBER, AND THE                 *
*  SECOND OPERAND IS THE NEW NAME OF THE MEMBER.                      *
*                                                                     *
***********************************************************************
         EJECT
***********************************************************************
*                                                                     *
*  THE 'ALIAS' STATEMENT CONTAINS THE OPERATION 'ALIAS'               *
*  (OR 'ALI' OR 'A') FOLLOWED BY TWO OPERANDS.  THE FIRST             *
*  OPERAND IS THE NAME OF AN EXISTING MEMBER, AND THE                 *
*  SECOND OPERAND IS THE ALIAS TO BE ASSIGNED TO IT.                  *
*                                                                     *
*  THE 'OPTION' STATEMENT CONTAINS THE OPERATION 'OPTION'             *
*  (OR 'OPT' OR 'O') FOLLOWED BY ONE TO THREE OPERANDS. THE           *
*  OPERANDS MAY BE ANY OF THE FOLLOWING KEYWORDS, IN ANY ORDER:       *
*     LOG, NOLOG, MSG, NOMSG, FLUSH, NOFLUSH.                         *
*  THESE KEYWORDS CONTROL LOGGING OF CONTROL STATEMENTS,              *
*  APPEARANCE OF NORMAL MESSAGES, AND ACTION TO BE TAKEN              *
*  IN THE EVENT OF AN ERROR.  INITIAL SETTING IS LOG, MSG, FLUSH.     *
*                                                                     *
*  THE 'FILE' STATEMENT CONTAINS THE OPERATION 'FILE'                 *
*  (OR 'FIL' OR 'F') FOLLOWED BY ONE OPERAND, WHICH IS                *
*  A DDNAME.  THIS STATEMENT CAUSES ALL SUBSEQUENT                    *
*  'RENAME', 'DELETE', AND 'ALIAS' ACTIVITY TO BE                     *
*  DIRECTED AGAINST THE PDS ASSOCIATED WITH THE                       *
*  DDNAME SPECIFIED, INSTEAD OF DDNAME 'SYSLIB'.                      *
*  THIS ALLOWS MORE THAN ONE PDS TO BE PROCESSED                      *
*  IN THE SAME JOB STEP.                                              *
*                                                                     *
*  AN EXAMPLE OF SOME JCL THAT WOULD BE USED TO RUN 'PDSPROGM'.       *
*                                                                     *
*     //STEP1   EXEC PGM=PDSPROGM                                     *
*     //SYSPRINT DD  SYSOUT=A                                         *
*     //SYSLIB   DD  DSN=DSN1,DISP=OLD                                *
*     //MYLIB    DD  DSN=DSN2,DISP=OLD                                *
*     //SYSIN    DD  *                                                *
*     DELETE BACKUP                                                   *
*     DELETE CALIAS                                                   *
*     RENAME CURRENT BACKUP                                           *
*     RENAME TESTED CURRENT                                           *
*     ALIAS CURRENT CALIAS                                            *
*     FILE MYLIB                                                      *
*     DELETE BACKUP                                                   *
*                                                                     *
*  A NOTE OF WARNING ABOUT LOAD MODULES.                              *
*  'PDSPROGM' CAN BE USED TO DELETE OR RENAME A LOAD MODULE           *
*  BUT IS NOT DESIGNED TO ASSIGN AN ALIAS TO ONE.  ONLY THE           *
*  LINKAGE EDITOR SHOULD BE USED TO ACCOMPLISH THAT PROPERLY.         *
*  EVEN RENAMING A LOAD MODULE WITH 'PDSPROGM' (OR ANYTHING           *
*  OTHER THAN THE LINKAGE EDITOR) COULD CAUSE PROBLEMS, BECAUSE       *
*  IF THE MODULE HAS AN ALIAS, THE ALIAS ENTRY CONTAINS THE           *
*  ORIGINAL NAME OF IT'S ASSOCIATED MEMBER.  RENAMING A LOAD          *
*  MODULE ALIAS COULD CAUSE PROBLEMS IF THE MODULE IS LATER           *
*  RE-LINKED, BECAUSE LOAD MODULE ALIASES ARE CLOSELY TIED            *
*  TO ENTRY-POINT NAMES CODED IN THE PROGRAMS.                        *
*                                                                     *
*$DOC$*****************************************************************
         EJECT
***********************************************************************
*                                                                     *
*        'PDSPROGM'                                                   *
*                                                                     *
***********************************************************************
         SPACE
*        WRITTEN BY. BILL GODFREY,  PLANNING RESEARCH CORPORATION.
*        INSTALLATION. PRC COMPUTER CENTER INC, MCLEAN VA.
*        DATE WRITTEN. MAY 24 1979.
*        DATE UPDATED. JUNE 16 1980.
*        ATTRIBUTES. RE-ENTRANT.
*        DESCRIPTION.
*            THIS PROGRAM SCRATCHES AND RENAMES MEMBERS OF A
*            PARTITIONED DATA SET (PDS).
*
*            OPERATIONS ARE SPECIFIED ON CONTROL STATEMENTS (SYSIN)
*            AND ARE PERFORMED AGAINST THE DIRECTORY OF THE
*            DATA SET ALLOCATED TO DDNAME SYSLIB.
*            VALID OPERATIONS ARE:
*             'DELETE' (OR 'SCRATCH'), 'RENAME', AND 'ALIAS'
*            THE OPERATION MUST BE FOLLOWED BY ONE OR MORE SPACES
*            AND THEN ONE OPERAND (FOR DELETE) OR TWO OPERANDS
*            (FOR RENAME OR ALIAS). THE FIRST OPERAND MUST BE AN
*            EXISTING MEMBER NAME.  THE SECOND OPERAND MUST BE A
*            NON-EXISTING MEMBER NAME.  THE SECOND OPERAND IS
*            SEPARATED FROM THE FIRST BY ONE OR MORE SPACES/COMMAS.
*            COLUMNS 73-80 ARE IGNORED, MAY BE USED FOR SEQUENCING.
*            STATEMENTS BEGINNING WITH AN ASTERISK ARE IGNORED.
*            AN 'OPTION' CONTROL STATEMENT ALLOWS OPTIONS TO
*            BE SET RELATING TO LOGGING, MESSAGES, AND ERRORS.
*            A 'FILE' CONTROL STATEMENT ALLOWS OPERATIONS TO
*            BE DIRECTED TO ANOTHER DDNAME. THE ONLY OPERAND
*            IS A DDNAME. 'SYSLIB' IS ALWAYS OPENED INITIALLY,
*            EVEN IF THE FIRST CONTROL STATEMENT IS A 'FILE'
*            STATEMENT.
*
*            THE PARM FIELD MAY CONTAIN THE FOLLOWING KEYWORDS:
*            NL  - CONTROL STATEMENTS WILL NOT BE LOGGED
*            NM  - NORMAL MESSAGES WILL NOT BE LOGGED, ONLY ERRORS.
*            NF  - ERRORS WILL NOT CAUSE FLUSHING OF INPUT.
*            NR  - NO RESTRICTIONS ON CHARACTERS IN A NEW MEMBER.
*            NC  - NO CAPITALIZATION WILL BE DONE.
*
*            CHANGES ...
*            RENAME AND ALIAS FEATURES ADDED 24MAY79.
*            OPTIONS, PARMS AND SPECIAL CARDS ADDED 24MAY79.
*            REPORT WRITER ADDED 14DEC79.
*            SCR, DEL, REN, ALI ADDED 14DEC79.
*            STATUS BITS ADDED 14DEC79.
*            SYSPRINT OPEN EXIT ADDED 14DEC79.
*            FILE STATEMENT ADDED. 14DEC79.
*            COMMENT CARD ADDED. 11APR80.
*            MESSAGE ID'S ADDED. ALIAS LMOD CHECKS ADDED. 16APR80.
*            SYSIN PARSE REWRITTEN. VOLSER IN HEADER. 18APR80.
*            OPTION STATEMENT ADDED. 29APR80.
*            NO CODE CHANGE. USERS GUIDE ADDED AT TOP. 16JUN80.
         SPACE
         MACRO
&NAME    PARMC &C,&B
&NAME    CLI   0(R1),C'&C'         IS CHARACTER PRESENT?
         BNE   *+20                NO, SKIP REMAINING INSTRUCTIONS
         OI    OPTIONS,&B          YES, SET BIT ON
         CLI   1(R2),C'N'          IS CHARACTER PRECEDED BY 'N'?
         BNE   *+8                 NO, SKIP NEXT INSTRUCTION
         NI    OPTIONS,255-&B      YES, SET BIT OFF
         MEND
         SPACE
PDSPROGM START
         USING *,R10,R11
         B     @PROLOG-*(,15)
         DC    AL1(11),CL11'PDSPROGM'
         DC    CL16' &SYSDATE &SYSTIME '
@SIZE    DC    0F'0',AL1(1),AL3(@DATAL)
@PROLOG  STM   14,12,12(13)
         LR    R10,15              BASE REGISTER
         LA    R15,4095
         LA    R11,1(R15,R10)      BASE REGISTER
         LR    R2,R1
         L     R0,@SIZE
         GETMAIN R,LV=(0)
         ST    13,4(,1)
         ST    1,8(,13)
         LR    13,1
         USING @DATA,R13
         SPACE 1
         SLR   R15,R15
         ST    R15,COUNTIN
         STH   R15,RC
         MVI   OPTIONS,X'BC'       CAPS,,RES,FLUSH,LOG,MSG
         L     R2,0(,R2)           PARM
         LH    R0,0(,R2)           PARM LENGTH
         LTR   R0,R0               IS PARM PRESENT
         BZ    NOPARM              NO, BRANCH
         LA    R1,2(,R2)           POINT TO PARM DATA
PARMLOOP EQU   *
         PARMC C,#C                CAPS
         SPACE
         PARMC L,#L                LOG CONTROL STATEMENTS
         SPACE
         PARMC M,#M                NORMAL MESSAGES
         SPACE
         PARMC R,#R                RESTRICTED MEMBER NAMES
         SPACE
         PARMC F,#F                FLUSH AFTER FIRST ERROR
         SPACE
         LA    R1,1(,R1)
         LA    R2,1(,R2)
         BCT   R0,PARMLOOP         CONTINUE SCAN
NOPARM   EQU   *
         MVI   UPPER,C' '
         MVC   UPPER+1(71),UPPER
         SPACE
         ZAP   REPORTPG,=P'0'      INITIAL PAGE COUNTER
         ZAP   REPORTLN,=P'0'      INITIAL LINE COUNTER
         ZAP   REPORTMX,=P'50'     INITIAL LINES PER PAGE
         MVI   REPORTO-1,X'40'     BLANK PROPOGATOR
         MVI   LINE-1,X'40'        BLANK PROPOGATOR
         MVI   STATUS,0
         EJECT
************************************************************
*                                                          *
*        OPEN THE DCB'S                                    *
*                                                          *
************************************************************
         SPACE
         MVC   PRTDCBW(PRTDCBL),PRTDCB
         MVC   CTLDCBW(CTLDCBL),CTLDCB
         MVC   LIBDCBW(LIBDCBL),LIBDCB
         LA    R3,PRTDCBW
         LA    R4,CTLDCBW
         LA    R5,LIBDCBW
         SPACE
         IC    R0,EXLST(,R3)
         LA    R14,PRTEXLST
         ST    R14,EXLST(,R3)
         STC   R0,EXLST(,R3)       SYSPRINT EXLST=PRTEXLST
         SPACE
         LA    R0,PRTEXO
         ST    R0,0(,R14)
         MVI   0(R14),X'85'        DCB EXIT
         SPACE
         IC    R0,EODAD(,R4)
         LA    R14,EODCTL
         ST    R14,EODAD(,R4)
         STC   R0,EODAD(,R4)       SYSIN EODAD=EODCTL
         SPACE
         IC    R0,EXLST(,R5)
         LA    R14,LIBEXLST
         ST    R14,EXLST(,R5)
         STC   R0,EXLST(,R5)       SYSLIB EXLST=LIBEXLST
         SPACE
         LA    R0,JFCB
         ST    R0,0(,R14)
         MVI   0(R14),X'87'        JFCB EXIT
         SPACE
         LA    R6,OPEN
         MVI   0(R6),X'80'
         SPACE
         OPEN  ((R3),OUTPUT),MF=(E,(R6))
         SPACE
         TM    OFLGS(R3),X'10'
         BO    OKPRT
         LA    R15,16
         B     EXIT
PRTEXO   CLC   BLKSI(2,R1),=H'0'
         BNER  R14
         MVC   BLKSI(2,R1),LRECL(R1)
         NI    RECFM(R1),255-X'10' CHANGE RECFM TO FA
         BR    R14
OKPRT    OI    STATUS,X'80'        SYSPRINT IS OPEN
         SPACE
         OPEN  ((R4),INPUT),MF=(E,(R6))
         SPACE
         TM    OFLGS(R4),X'10'
         BO    OKCTL
         LA    R15,16
         B     EXIT
OKCTL    OI    STATUS,X'40'        SYSIN IS OPEN
         SPACE
         OPEN  ((R5),UPDAT),MF=(E,(R6))
         SPACE
         TM    OFLGS(R5),X'10'
         BO    OKLIB
         LA    R15,16
         B     EXIT
OKLIB    OI    STATUS,X'20'        SYSLIB IS OPEN
         SPACE
         RDJFCB ((R5)),MF=(E,(R6))
         SPACE
         MVC   LINE,LINE-1
         BAL   R14,REPORT
         EJECT
************************************************************
*                                                          *
*        READ A CONTROL STATEMENT                          *
*                                                          *
************************************************************
         SPACE
READ     EQU   *
         CLI   RC+1,0
         BE    READGET
         TM    OPTIONS,#F          FLUSH
         BO    FLUSH               YES, QUIT AT FIRST ERROR
READGET  EQU   *
         GET   (R4),INREC
         SPACE
         L     R1,COUNTIN
         A     R1,=F'1'
         ST    R1,COUNTIN
         TM    OPTIONS,#C          CAPS
         BZ    *+10
         OC    INREC(72),UPPER
         MVC   LINE,LINE-1
         TM    OPTIONS,#L          LOG
         BZ    NOLOG               BRANCH IF NOLOG
         MVC   MID(6),=C'MSG000'
         MVC   TXT(72),INREC
         BAL   R14,REPORT
NOLOG    EQU   *
         SPACE
************************************************************
*                                                          *
*         PARSE THE CONTROL STATEMENT                      *
*                                                          *
************************************************************
         SPACE
         LA    R15,INREC           POINT TO COLUMN 1
         LA    R3,72-1             LENGTH CODE OF CONTROL STATEMENT
         LA    R6,ODL              POINT TO OPERAND DESCRIPTOR LIST
         XC    0(ODLL,R6),0(R6)    ZERO THE ODL
         SR    R1,R1               INSURE HI ORDER BYTE ZERO
         LA    R0,ODLL/8-1         NUMBER OF ENTRIES IN O.D.L.
*                                  MINUS 1 (LAST ODE WILL REMAIN ZERO)
         B     LOOP
TRTNONBL TRT   0(0,R15),TABNONBL   (EXECUTED)
TRTBLANK TRT   0(0,R15),TABBLANK   (EXECUTED)
LOOP     XC    0(8,R6),0(R6)       ZERO THE OPERAND DESCRIPTOR ENTRY
         EX    R3,TRTNONBL         FIND A NONBLANK
         BZ    DONE                BRANCH IF ALL BLANKS
         LR    R14,R1              GET ADDRESS OF STRING
         SR    R14,R15             GET LENGTH OF PRECEDING BLANKS
         SR    R3,R14              GET LENGTH OF REMAINING TEXT
         LR    R15,R1              GET ADDRESS OF NONBLANK
         EX    R3,TRTBLANK         FIND A BLANK
         BZ    LAST                BRANCH IF NOT FOUND
         LR    R14,R1              GET ADDRESS OF BLANK
         SR    R14,R15             GET LENGTH OF FIELD
         OI    6(R6),X'80'         OPERAND PRESENT
         ST    R15,0(,R6)          ADDRESS OF OPERAND
         STH   R14,4(,R6)          LENGTH OF OPERAND
         SR    R3,R14              GET LENGTH CODE OF REMAINING TEXT
         BZ    DONE                BRANCH IF ONE TRAILING BLANK
         LA    R6,8(,R6)           POINT TO NEXT O.D.E.
         LR    R15,R1              POINT TO BLANK
         BCT   R0,LOOP
         B     DONE
LAST     LA    R14,1(,R3)          GET LENGTH
         OI    6(R6),X'80'         OPERAND PRESENT
         ST    R15,0(,R6)          ADDRESS OF OPERAND
         STH   R14,4(,R6)          LENGTH OF OPERAND
DONE     EQU   *
         SPACE
************************************************************
*                                                          *
*         DETERMINE TYPE OF CONTROL STATEMENT              *
*                                                          *
************************************************************
         SPACE
         LA    R6,ODE1             POINT TO FIRST O.D.E.
         TM    6(R6),X'80'         ANYTHING PRESENT
         BZ    READ                BRANCH IF WHOLE STATEMENT BLANK
         L     R1,0(,R6)           POINT TO FIRST NONBLANK IN STATEMENT
         CLI   0(R1),C'*'          COMMENT CARD
         BE    READ                YES, BRANCH
         SPACE
         LA    R6,ODE2             POINT TO SECOND O.D.E.
         TM    6(R6),X'80'         IS OPERAND PRESENT ?
         BZ    NOOPND              BRANCH IF MISSING OPERAND
         MVC   MEMBER,=CL8' '
         L     R1,0(,R6)           POINT TO STRING
         LH    R15,4(,R6)          GET LENGTH OF STRING
         LA    R0,8                MAX VALID LENGTH
         CR    R15,R0              IS LENGTH VALID ?
         BH    NOOPND              BRANCH IF OPERAND TOO LONG
         BCTR  R15,0               LENGTH MINUS 1 FOR EX
         EX    R15,MVCMEM          MOVE STRING TO MEMBER
         OI    6(R6),X'40'         MARK OPERAND MOVED
NOOPND   EQU   *
         SPACE
         LA    R6,ODE1             RESTORE POINTER TO FIRST O.D.E.
         L     R1,0(,R6)           POINT TO FIRST STRING AGAIN
         LH    R15,4(,R6)          GET LENGTH OF STRING
         MVC   TYPE(1),0(R1)       SAVE FIRST CHARACTER
         LA    R0,7                MAX VALID LENGTH
         CR    R15,R0              IS STRING TOO LONG ?
         BH    ILLCARD             BRANCH IF TOO LONG
         SLL   R15,2               MULTIPLY LENGTH BY 4
         B     *(R15)              BRANCH TO ONE OF NEXT 7
         B     LEN1                1 CHAR
         B     ILLCARD             2 CHAR
         B     LEN3                3 CHAR
         B     LEN4
         B     LEN5
         B     LEN6
         B     LEN7
LEN1     CLI   0(R1),C'S'
         BE    SCRATCH
         CLI   0(R1),C'D'
         BE    SCRATCH
         CLI   0(R1),C'R'
         BE    RENAME
         CLI   0(R1),C'A'
         BE    RENAME
         CLI   0(R1),C'F'
         BE    FILE
         CLI   0(R1),C'E'
         BE    EODCTL
         CLI   0(R1),C'O'
         BE    OPTION
TYPEI    MVI   TYPE,C'I'
         B     ILLCARD
LEN3     EQU   *
         CLC   0(3,R1),=C'SCRATCH' SCR
         BE    SCRATCH
         CLC   0(3,R1),=C'DELETE'  DEL
         BE    SCRATCH
         CLC   0(3,R1),=C'RENAME'  REN
         BE    RENAME
         CLC   0(3,R1),=C'ALIAS'   ALI
         BE    RENAME
         CLC   0(3,R1),=C'END'     END
         BE    EODCTL
         CLC   0(3,R1),=C'FILE'    FIL
         BE    FILE
         CLC   0(3,R1),=C'OPTION'
         BE    OPTION
         B     TYPEI
LEN7     CLC   0(7,R1),=C'SCRATCH'
         BE    SCRATCH
         B     TYPEI
LEN6     CLC   0(6,R1),=C'DELETE'
         BE    SCRATCH
         CLC   0(6,R1),=C'RENAME'
         BE    RENAME
         CLC   0(6,R1),=C'OPTION'
         BE    OPTION
         B     TYPEI
LEN5     CLC   0(5,R1),=C'ALIAS'
         BE    RENAME
         B     TYPEI
LEN4     CLC   0(4,R1),=C'FILE'
         BE    FILE
         B     TYPEI
         SPACE
ILLCARD  EQU   *
         CLI   TYPE,C'F'
         MVI   TYPE,C'I'
         BE    FILE
         MVC   LINE,LINE-1
         TM    OPTIONS,#L          LOG
         BNZ   LOGGED              YES, BRANCH
         MVC   MID(6),=C'MSG000'
         MVC   TXT(72),INREC
         BAL   R14,REPORT
         MVC   LINE,LINE-1
LOGGED   MVC   MID(33),=C'MSG001  *** ILLEGAL STATEMENT ***'
ILLRC4   BAL   R14,REPORT
         MVI   RC+1,4
         B     READ
         SPACE
ILLPREV  MVC   MID(29),=C'MSG012  *** FILE NOT OPEN ***'
         B     ILLRC4
         SPACE
************************************************************
*                                                          *
*         CHANGE DDNAME OF LIBRARY                         *
*                                                          *
************************************************************
         SPACE
FILE     EQU   *
         ZAP   REPORTLN,=P'0'      FORCE NEW PAGE
         LA    R6,CLOSE
         MVI   0(R6),X'80'
         TM    STATUS,X'20'
         BZ    FILEC5X
         CLOSE ((R5)),MF=(E,(R6))
         NI    STATUS,255-X'20'
FILEC5X  EQU   *
         CLI   TYPE,C'I'
         BE    FILERR
         LA    R6,ODE2             POINT TO SECOND O.D.E.
         TM    6(R6),X'C0'         IS OPERAND PRESENT AND MOVED ?
         BNO   FILERR              BRANCH IF MISSING OR INVALID OPERAND
         MVC   DDNAM(8,R5),MEMBER
         LA    R6,CLOSE
         OPEN  ((R5),UPDAT),MF=(E,(R6))
         TM    OFLGS(R5),X'10'
         BO    OKFILE
         MVC   MID(35),=C'MSG011  FILE XXXXXXXX NOT AVAILABLE'
         MVC   MID+13(8),MEMBER
FILERC4  MVI   JFCB,C' '
         MVC   JFCB+1(43),JFCB
         BAL   R14,REPORT
         MVI   RC+1,4
         B     READ
OKFILE   EQU   *
         OI    STATUS,X'20'        SYSLIB FILE IS OPEN
         RDJFCB ((R5)),MF=(E,(R6))
         MVC   LINE,LINE-1
         MVC   MID(19),=C'MSG006  NEW FILE IS'
         MVC   MID+20(8),MEMBER    DDNAME
         BAL   R14,REPORT
         B     READ
         SPACE
FILERR   MVC   MID(38),=C'MSG010  *** INVALID FILE STATEMENT ***'
         B     FILERC4
         EJECT
************************************************************
*                                                          *
*        DELETE A MEMBER                                   *
*                                                          *
************************************************************
         SPACE
SCRATCH  EQU   *
         TM    STATUS,X'20'        IS SYSLIB OPEN?
         BZ    ILLPREV             NO, ERROR
         SPACE
         LA    R6,ODE2             POINT TO SECOND O.D.E.
         TM    6(R6),X'C0'         IS OPERAND PRESENT AND MOVED ?
         BNO   ILLCARD             BRANCH IF MISSING OR INVALID OPERAND
         SPACE
         MVC   LINE,LINE-1
         MVC   MID(14),=C'MSGXXX  MEMBER'
         MVC   MBR(8),MEMBER
         LA    R6,MEMBER
         SPACE
         STOW  (R5),(R6),D
         SPACE
         B     STOWDR(R15)
STOWDR   B     STOWDR00
         B     STOWDR04
         B     STOWDR08
         B     STOWDR0C
         B     STOWDR10
         B     STOWDR14
         B     STOWDR18
         SPACE
STOWDR00 TRT   MBR(9),TABBLANK
         MVC   1(7,R1),=CL7'DELETED'
         CLI   TYPE,C'S'
         BNE   *+10
         MVC   1(9,R1),=C'SCRATCHED'
         MVC   MID+3(3),=C'003'
         B     STOWCOMP
STOWDR04 MVC   RESULT(23),=CL23'STOW RC=04 (IMPOSSIBLE)'
         B     STOWCOM
STOWDR08 MVC   RESULT(09),=CL09'NOT FOUND'
         B     STOWCOM
STOWDR0C MVC   RESULT(23),=CL23'STOW RC=12 (IMPOSSIBLE)'
         B     STOWCOM
STOWDR10 MVC   RESULT(17),=CL17'*** I/O ERROR ***'
         B     STOWCOM
STOWDR14 MVC   RESULT(17),=CL17'*** DCB ERROR ***'
         B     STOWCOM
STOWDR18 MVC   RESULT(28),=CL28'*** INSUFFICIENT STORAGE ***'
         B     STOWCOM
         SPACE
STOWCOM  EQU   *
         MVI   RC+1,4
         MVC   MID+3(3),=C'007'
         B     STOWCOMW
STOWCOMP EQU   *
         TM    OPTIONS,#M          MSG
         BZ    READ
STOWCOMW EQU   *
         BAL   R14,REPORT
         B     READ
         SPACE
MVCMEM   MVC   MEMBER(0),0(R1)     (EXECUTED)
MVCNEW   MVC   NEWMEM(0),0(R1)     (EXECUTED)
         EJECT
************************************************************
*                                                          *
*        RENAME A MEMBER                                   *
*                                                          *
************************************************************
         SPACE
RENAME   EQU   *
         TM    STATUS,X'20'        IS SYSLIB OPEN?
         BZ    ILLPREV             NO, ERROR
         SPACE
         LA    R6,ODE2             POINT TO SECOND O.D.E.
         TM    6(R6),X'80'         IS OPERAND PRESENT AND MOVED ?
         BNO   ILLCARD             BRANCH IF MISSING OR INVALID OPERAND
         MVC   LINE,LINE-1
         MVC   MID(14),=C'MSGXXX  MEMBER'
         MVC   MBR(8),MEMBER
         SPACE
         LA    R6,ODE3             POINT TO THIRD O.D.E.
         TM    6(R6),X'80'         IS OPERAND PRESENT ?
         BZ    ILLCARD             BRANCH IF MISSING OPERAND
         MVC   NEWMEM,=CL8' '
         L     R1,0(,R6)           POINT TO STRING
         LH    R15,4(,R6)          GET LENGTH OF STRING
         LA    R0,8                MAX VALID LENGTH
         CR    R15,R0              IS LENGTH VALID ?
         BH    ILLCARD             BRANCH IF OPERAND TOO LONG
         BCTR  R15,0               LENGTH MINUS 1 FOR EX
         EX    R15,MVCNEW          MOVE STRING TO NEWMEM
         SPACE
         TM    OPTIONS,#R          RESTRICTING CHARACTERS
         BZ    NORES               NO, BRANCH
         TRT   NEWMEM,ALPHANUM     ARE CHARACTERS VALID
         BNZ   ILLCHAR             NO, BRANCH
         CLI   NEWMEM,C'0'         IS FIRST CHAR NUMERIC
         BNL   ILLCHAR             YES, BRANCH
         CLI   NEWMEM,C'-'         IS FIRST CHAR HYPHEN
         BE    ILLCHAR             YES, BRANCH
         CLI   NEWMEM,X'C0'        IS FIRST CHAR X'C0'
         BE    ILLCHAR             YES, BRANCH
NORES    EQU   *
         CLC   MEMBER,NEWMEM       NAMES IDENTICAL?
         BE    ILLCARD             YES, ERROR.
         CLI   TYPE,C'R'
         BNE   ALIAS
         LA    R6,MEMBER
         SPACE
         STOW  (R5),(R6),C
         SPACE
         B     STOWCR(R15)
STOWCR   B     STOWCR00
         B     STOWCR04
         B     STOWCR08
         B     STOWCR0C
         B     STOWCR10
         B     STOWCR14
         B     STOWCR18
         SPACE
STOWCR00 TRT   MBR(9),TABBLANK
         MVC   1(7,R1),=CL7'RENAMED'
         MVC   9(8,R1),NEWMEM
         MVC   MID+3(3),=C'004'
         B     STOWCOMP
STOWCR04 MVC   RESULT(35),=CL35'NOT RENAMED XXXXXXXX ALREADY EXISTS'
         MVC   RESULT+12(8),NEWMEM
         B     STOWCOM
STOWCR08 MVC   RESULT(09),=CL09'NOT FOUND'
         B     STOWCOM
STOWCR0C MVC   RESULT(34),=CL34'NOT RENAMED, NO SPACE IN DIRECTORY'
         B     STOWCOM
STOWCR10 MVC   RESULT(17),=CL17'*** I/O ERROR ***'
         B     STOWCOM
STOWCR14 MVC   RESULT(17),=CL17'*** DCB ERROR ***'
         B     STOWCOM
STOWCR18 MVC   RESULT(28),=CL28'*** INSUFFICIENT STORAGE ***'
         B     STOWCOM
ILLCHAR  MVC   RESULT(32),=CL32'NEW MEMBER NAME XXXXXXXX INVALID'
         MVC   RESULT+16(8),NEWMEM
         B     STOWCOM
         SPACE
************************************************************
*                                                          *
*        ADD AN ALIAS TO A MEMBER                          *
*                                                          *
************************************************************
         SPACE
ALIAS    EQU   *
         LA    R6,BLDL
         MVC   0(4,R6),=AL2(1,80)
         MVC   4(8,R6),MEMBER
         SPACE
         BLDL  (R5),(R6)
         SPACE
         B     BLDLRC(R15)
BLDLRC   B     BLDLRC00
         B     BLDLRC04
         B     BLDLRC08
         B     BLDLRC0C
         SPACE
BLDLRC04 MVC   RESULT(09),=CL09'NOT FOUND'
         B     STOWCOM
BLDLRC08 MVC   RESULT(17),=CL17'*** I/O ERROR ***'
         B     STOWCOM
BLDLRC0C MVC   RESULT(17),=CL17'*** DCB ERROR ***'
         B     STOWCOM
BLDLRC00 LA    R6,4(,R6)
         CLI   11(R6),0            CONCATENATION ZERO
         BNE   BLDLRC04            NO, TREAT AS NOT FOUND
         TM    36(R5),X'C0'        IS RECFM=U
         BO    LMOD                YES, ISSUE LOAD MODULE MESSAGE
ALIGO    MVC   0(8,R6),NEWMEM
         MVC   11(74-11,R6),13(R6) REMOVE 2 BLDL BYTES
         OI    11(R6),X'80'        SET ALIAS BIT
         SPACE
         STOW  (R5),(R6),A
         SPACE
         B     STOWAR(R15)
STOWAR   B     STOWAR00
         B     STOWAR04
         B     STOWAR08
         B     STOWAR0C
         B     STOWAR10
         B     STOWAR14
         B     STOWAR18
         SPACE
STOWAR00 TRT   MBR(9),TABBLANK
         MVC   1(7,R1),=CL7'ALIASED'
         MVC   9(8,R1),NEWMEM
         MVC   MID+3(3),=C'005'
         B     STOWCOMP
STOWAR04 MVC   RESULT(35),=CL35'NOT ALIASED XXXXXXXX ALREADY EXISTS'
         MVC   RESULT+12(8),NEWMEM
         B     STOWCOM
STOWAR08 MVC   RESULT(23),=CL23'STOW RC=08 (IMPOSSIBLE)'
         B     STOWCOM
STOWAR0C MVC   RESULT(34),=CL34'NOT ALIASED, NO SPACE IN DIRECTORY'
         B     STOWCOM
STOWAR10 MVC   RESULT(17),=CL17'*** I/O ERROR ***'
         B     STOWCOM
STOWAR14 MVC   RESULT(17),=CL17'*** DCB ERROR ***'
         B     STOWCOM
STOWAR18 MVC   RESULT(28),=CL28'*** INSUFFICIENT STORAGE ***'
         B     STOWCOM
LMOD     EQU   *
         TM    13(R6),X'60'        ANY TTRS IN USER DATA
         BZ    ALIGO               NO, NOT A LMOD
         LA    R6,ODE4             POINT TO FOURTH O.D.E.
         TM    6(R6),X'80'
         BZ    LMODERR
         LH    R15,4(,R6)          GET LENGTH
         L     R1,0(,R6)           POINT TO STRING
         LA    R0,5
         CR    R15,R0
         BNE   LMODERR
         CLC   0(5,R1),=C'FORCE'
         BNE   LMODERR
         LA    R6,BLDL+4
         B     ALIGO
LMODERR  MVC   RESULT(L'LMODMSG),LMODMSG
         MVI   RC+1,4
         MVC   MID+3(3),=C'007'
         B     STOWCOMW
         EJECT
************************************************************
*                                                          *
*         SET OPTIONS BY CONTROL STATEMENT                 *
*                                                          *
************************************************************
         SPACE
OPTION   EQU   *
         LA    R6,ODE2
         TM    6(R6),X'C0'
         BNO   ILLCARD
CTLSPEC  L     R1,0(,R6)           POINT TO OPERAND
         LH    R15,4(,R6)          GET LENGTH OF KEYWORD
         CH    R15,=H'7'
         BE    CTL7
         CH    R15,=H'5'
         BE    CTL5
         CH    R15,=H'3'
         BNE   ILLCARD
CTL3     CLC   0(3,R1),OPMSG+2
         BNE   *+12
         OI    OPTIONS,#M          MSG
         B     CTLNEXT
         CLC   0(3,R1),OPLOG+2
         BNE   *+12
         OI    OPTIONS,#L          LOG
         B     CTLNEXT
         B     ILLCARD
CTL5     CLC   0(5,R1),OPLOG
         BNE   *+12
         NI    OPTIONS,255-#L      NOLOG
         B     CTLNEXT
         CLC   0(5,R1),OPMSG
         BNE   *+12
         NI    OPTIONS,255-#M      NOMSG
         B     CTLNEXT
         CLC   0(5,R1),OPFLUSH+2
         BNE   *+12
         OI    OPTIONS,#F          FLUSH
         B     CTLNEXT
         B     ILLCARD
CTL7     CLC   0(7,R1),OPFLUSH
         BNE   *+12
         NI    OPTIONS,255-#F      NOFLUSH
         B     CTLNEXT
         B     ILLCARD
CTLNEXT  LA    R6,8(,R6)           POINT TO NEXT O.D.E.
         TM    6(R6),X'80'         OPERAND PRESENT?
         BO    CTLSPEC             YES, BRANCH
         B     READ
         EJECT
************************************************************
*                                                          *
*         REPORT WRITER                                    *
*                                                          *
************************************************************
         SPACE
REPORT   LA    R1,LINE
         LA    R0,121
REPORTW  STM   R14,R2,REPORTS
         LA    R3,PRTDCBW          POINT R3 TO DCB
         CP    REPORTLN,REPORTMX   IS LINECOUNT LIMIT REACHED
         BNH   *+10                NO
         ZAP   REPORTLN,=P'0'      YES, FORCE NEW PAGE
         CP    REPORTLN,=P'0'      IS NEW PAGE REQUESTED?
         BE    REPORTH             YES, GO PRINT HEADING
REPORTD  CH    R0,=H'121'          IS OUTPUT LINE LENGTH OK?
         BNL   REPORTP             YES, BRANCH
         MVC   REPORTO,REPORTO-1   BLANK THE WORK AREA
         LTR   R14,R0              COPY LENGTH
         BNP   REPORTB             BLANK LINE IF < 1
         BCTR  R14,0               LENGTH MINUS 1
         B     *+10
         MVC   REPORTO(0),0(R1)    COPY OUTPUT LINE
         EX    R14,*-6             EXECUTE MVC
REPORTB  LA    R1,REPORTO          POINT TO NEW OUTPUT LINE
REPORTP  LR    R2,R1               POINT R2 TO OUTPUT LINE
         PUT   (R3),(R2)           WRITE OUTPUT LINE
         CLI   0(R2),X'40'         CC = SINGLE SPACING
         BE    REPORTC1            YES, BRANCH
         CLI   0(R2),C'0'          CC = DOUBLE SPACING
         BE    REPORTC2            YES, BRANCH
         CLI   0(R2),C'-'          CC = TRIPLE SPACING
         BNE   REPORTX             NO, BRANCH
         AP    REPORTLN,=P'3'      INCREMENT LINE COUNTER
         B     REPORTX             EXIT
REPORTC2 AP    REPORTLN,=P'2'      INCREMENT LINE COUNTER
         B     REPORTX             EXIT
REPORTC1 AP    REPORTLN,=P'1'      INCREMENT LINE COUNTER
REPORTX  LM    R14,R2,REPORTS      RESTORE REGS
         BR    R14                 RETURN
REPORTH  AP    REPORTPG,=P'1'      INCREMENT PAGE COUNTER
         MVC   REPORTO,REPORTO-1   BLANK HEADING
         MVI   REPORTO,C'1'        CC = NEW PAGE
         MVC   REPORTO+1(L'HEAD1),HEAD1
         LA    R15,REPORTO+1+L'HEAD1
         MVC   0(44,R15),JFCB
         LA    R15,44(,R15)
APPENDV  CLI   0(R15),C' '
         BNE   *+8
         BCT   R15,APPENDV
         MVC   3(6,R15),JFCB+118  VOLUME
         LA    R1,REPORTO+100-9    RIGHT EDGE PAGE NO
         MVC   3(6,R1),=X'402020202020' EDIT MASK
         ED    3(6,R1),REPORTPG    UNPACK PAGE NO
         MVC   0(4,R1),=C'PAGE'    INSERT 'PAGE'
         PUT   (R3),REPORTO        PUT HEADING LINE 1
         MVC   REPORTO,REPORTO-1   BLANK LINE
         PUT   (R3),REPORTO        PUT HEADING LINE 2
         LM    R0,R1,REPORTS+8     RESTORE R0 AND R1
         B     REPORTD             GO PRINT DETAIL LINE
         EJECT
FLUSH    MVC   LINE,LINE-1
         MVC   MID(L'MSG002),MSG002
         BAL   R14,REPORT
         SPACE
EODCTL   EQU   *
EXITRC   LH    R15,RC
EXIT     LR    R2,R15              SAVE RETURN CODE
         LA    R6,CLOSE
         MVI   0(R6),X'80'
         TM    STATUS,X'20'        IS SYSLIB OPEN?
         BZ    EXITC5X             NO, SKIP CLOSE
         CLOSE ((R5)),MF=(E,(R6))
EXITC5X  EQU   *
         TM    STATUS,X'40'        IS SYSIN OPEN?
         BZ    EXITC4X             NO, SKIP CLOSE
         CLOSE ((R4)),MF=(E,(R6))
EXITC4X  EQU   *
         TM    STATUS,X'80'        IS SYSPRINT OPEN?
         BZ    EXITC3X             NO, SKIP CLOSE
         LA    R3,PRTDCBW          POINT R3 TO DCB
         CLOSE ((R3)),MF=(E,(R6))
EXITC3X  EQU   *
         SPACE 1
         LR    1,13
         L     R0,@SIZE
         L     13,4(,13)
         FREEMAIN R,A=(1),LV=(0)
         LR    R15,R2              RESTORE RETURN CODE
         LM    0,12,20(13)
         L     14,12(,13)
         BR    14
         EJECT
************************************************************
*                                                          *
*        CONSTANTS                                         *
*                                                          *
************************************************************
         SPACE
         LTORG
OPLOG    DC    C'NOLOG'
OPMSG    DC    C'NOMSG'
OPFLUSH  DC    C'NOFLUSH'
         SPACE
HEAD1    DC    C'PDSPROGM SCRATCH/RENAME UTILITY  -  '
         PRINT NOGEN
         SPACE
PRTDCB   DCB   DDNAME=SYSPRINT,MACRF=(PM),DSORG=PS,                    +
               RECFM=FBA,LRECL=121
PRTDCBL  EQU   *-PRTDCB
         SPACE
CTLDCB   DCB   DDNAME=SYSIN,MACRF=(GM),DSORG=PS,LRECL=80
CTLDCBL  EQU   *-CTLDCB
         SPACE
LIBDCB   DCB   DDNAME=SYSLIB,MACRF=(R,W),DSORG=PO
LIBDCBL  EQU   *-LIBDCB
         SPACE
         PRINT GEN
         SPACE
SRCCAM   CAMLST SEARCH,2,3,4
         SPACE
MSG002   DC    C'MSG002  *** ALL REMAINING STATEMENTS FLUSHED ***'
LMODMSG  DC    C'NOT ALIASED. LINKAGE EDITOR SHOULD BE USED TO ALIAS.'
         SPACE
ALPHANUM DC    0D'0',64X'FF',X'00',26X'FF'
*                            SPACE
         DC    X'00',4X'FF',X'00',26X'FF',2X'00',67X'FF',10X'00'
*                $            -              #@          X'C0' A-I
         DC    7X'FF',9X'00',8X'FF',8X'00',6X'FF',10X'00',6X'FF'
*                       J-R            S-Z            0-9
         SPACE
*              THE ABOVE TABLE CAN BE USED TO TEST FOR ALPHANUMERIC
*              (PLUS NATIONAL AND BLANK AND HYPHEN AND X'C0')
*              WITH A 'TRT' INSTRUCTION.
*              IF THE FIELD IS VALID, CONDITION CODE IS 0.
*              WARNING: 'TRT' CAN CHANGE THE LOW ORDER 8 BITS
*              OF REGISTER 2 AND LOW ORDER 24 BITS OF REG 1.
         SPACE
TABNONBL DC    64X'FF'
         DC    X'00'               BLANK
         DC    42X'FF'
         DC    X'00'               COMMA
         DC    148X'FF'
TABBLANK DC    64X'00'
         DC    X'40'               BLANK
         DC    42X'00'
         DC    X'6B'               COMMA
         DC    148X'00'
         SPACE
EODAD    EQU   32                  OFFSET INTO DCB
RECFM    EQU   36                  OFFSET INTO DCB
EXLST    EQU   36                  OFFSET INTO DCB
OFLGS    EQU   48                  OFFSET INTO DCB
DDNAM    EQU   40                  OFFSET INTO DCB
BLKSI    EQU   62                  OFFSET INTO DCB
LRECL    EQU   82                  OFFSET INTO DCB
         SPACE
#C       EQU   X'80'
#R       EQU   X'20'
#F       EQU   X'10'
#L       EQU   X'08'
#M       EQU   X'04'
#DEFAULT EQU   #C+#R+#F+#L+#M      CAPS,NOEND,RES,FLUSH,LOG,MSG
         SPACE
************************************************************
*                                                          *
*        DSECTS                                            *
*                                                          *
************************************************************
         SPACE
@DATA    DSECT
         DS    18F                 REGISTER SAVEAREA
WORK     DS    0F
DOUBLE   DS    D
OPEN     DS    F
CLOSE    EQU   OPEN
COUNTIN  DS    F
OPTIONS  DS    H
RC       DS    H
PRTDCBW  DS    0F,(PRTDCBL)X
CTLDCBW  DS    0F,(CTLDCBL)X
LIBDCBW  DS    0F,(LIBDCBL)X
LIBEXLST DS    F
PRTEXLST DS    F
JFCB     DS    196X
INREC    DS    0D,CL80
ODL      DS    0F                  OPERAND DESCRIPTOR LIST
ODE1     DS    2F                  OPERAND DESCRIPTOR ENTRY 1
ODE2     DS    2F                  OPERAND DESCRIPTOR ENTRY 2
ODE3     DS    2F                  OPERAND DESCRIPTOR ENTRY 3
ODE4     DS    2F                  OPERAND DESCRIPTOR ENTRY 4
ODE5     DS    2F                  OPERAND DESCRIPTOR ENTRY 5
ODE6     DS    2F                  OPERAND DESCRIPTOR ENTRY 6
ODLL     EQU   *-ODL
TYPE     DS    C
STATUS   DS    C
         DS    C                   LINE-1
LINE     DS    CL133
LINEH1   DS    CL133
MID      EQU   LINE+1,6
TXT      EQU   LINE+9
MBR      EQU   LINE+16,8
RESULT   EQU   LINE+25
OBTAIN14 DS    F
CAMLST   DS    4F
MEMBER   DS    D
NEWMEM   DS    D
DSNAME   DS    CL44
VOLUME   DS    CL6
BLDL     DS    0D,CL80
UPPER    DS    CL72
REPORTS  DS    6F                  REGISTER SAVE AREA
REPORTPG DS    PL3                 PAGE COUNT, INIT P'0'
REPORTLN DS    PL2                 LINE COUNT, INIT P'0'
REPORTMX DS    PL2                 LINES/PAGE, INIT P'50'
REPORTOB DS    CL1                 REPORTO-1 (INIT BLANK)
REPORTO  DS    CL133               OUTPUT AREA
@DATAL   EQU   *-@DATA
         SPACE
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         END
