EXIT001  TITLE 'JES2/SP3 EXIT #1 - COMMENTS'
*$DOC@*
* * * * * * * * * *  NOTES ON THE NEW JES2  * * ** * * * * * ** * * *
* 1.  THE JESPARMS THAT CORRESPOND TO THIS EXIT ARE:                  *
*       . . .                                                         *
*       >LOAD EXIT001                                                 *
*       >EXIT001 (BANNER,PUNCH),ENABLE,TRACE=YES                      *
*       . . .                                                         *
*     'EXIT001' IS THE LOAD MODULE NAME WHEREAS 'BANNER' AND 'PUNCH'  *
*      ARE THE USER CSECTS GENERATED FROM THIS ASSEMBLY.  THE ENTRY   *
*      POINT TO THE LOAD MODULE HAS AN ADDITIONAL CSECT BUILT BY      *
*      THE $MODULE MACRO CALLED THE MODULE INTERFACE TABLE.           *
*                                                                     *
* 2.  THE 'LTORG' STATEMENT MUST APPEAR IN EACH SECTION OF CODE AND   *
*     THE $MODEND MACRO MUST APPEAR AFTER THE LAST USER ROUTINE JUST  *
*     BEFORE THE ASSEMBLER 'END' STATEMENT.                           *
*                                                                     *
* 3.  JES2/SP3 SHOULD BE BROUGHT UP TO THE CYCLE 2 PTF LEVEL AT PUT   *
*     TAPE 8111.  PROBLEMS EXIT WITH BRINGING THE NEW JES DOWN WHEN   *
*     RUNNING AS THE PRIMARY SUBSYSTEM AT THE 8106 PUT LEVEL.  ALSO   *
*     PUT 8108 INTRODUCES CHANGES INTO CERTAIN JES2 MAPPING MACROS    *
*     ($IOT,$PSO, AND $SJB) THAT COULD AFFECT YOUR CODE.              *
*                                                                     *
* 4.  THE ORDER OF THE DSECTS IN THE PREAMBLE ASSEMBLY  CAN BE        *
*     SIGNIFICANT.  ALSO THE REGISTER CONTENTS ARE AS FOLLOWS UPON    *
*     ENTRY TO THIS EXIT:                                             *
*         R0 = CODE INDICATING WHETHER START, CONT., OR TRAILER       *
*              PAGE IS BEING PRINTED.                                 *
*         R1 = ADDRESS OF THE DCT.                                    *
*        R10 = ADDRESS OF THE JCT.                                    *
*        R11 = ADDRESS OF THE HCT.                                    *
*        R13 = ADDRESS OF THE PCE.                                    *
*                                                                     *
*                    *   *   *   *   *                                *
*                    CAPT JIM CARTER                                  *
*                    LT   PAUL FINDLEY                                *
*                    LT   RON ROBINSON                                *
*                    AIR FORCE DATA SERVICES CENTER                   *
*                    IBM OPERATING SYSTEMS SUPPORT BRANCH             *
*                    PENTAGON, CMIS, ROOM 1C1039                      *
*                    WASHINGTON  D.C.      20330                      *
*                    CALL: 202/695-1274                               *
*                                                                     *
* NOTE: THIS EXIT IS NOT RE-ENTRANT !!!!'                             *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*$DOC$*
         TITLE 'JES2/SP3 EXIT #1 - MIT CSECT'
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                  P R E A M B L E  -  E X I T 1                    *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         PRINT ON,GEN
         $SYSPARM (ON,GEN,DATA,NO,NO)   DOCUMENTATION OPTIONS
         COPY  $HASPGEN                 COPY HASPGEN PARAMETERS
         PRINT ON,GEN
         $SYSPARM (ON,GEN,DATA,YES,YES)    DOCUMENTATION OPTIONS
MITABLE  $MODULE                        CREATE THE MIT CSECT
         $BUFFER  DOC=YES               REQ'D BY $GETBUF, $FREEBUF,
*                                       AND MUST PRECEDE $JCT
         $JCT     DOC=YES               MUST PRECEDE $CAT
         $JQE     DOC=YES               MUST PRECEDE $HCT
         $PCE     DOC=YES               MUST PRECEDE $HCT
         $CAT     DOC=YES               MUST PRECEDE $HCT
         $DCT     DOC=YES               NORMALLY REQUIRED FOR EXIT #1
         $HCT     DOC=YES               REQ'D BY $SAVE, $RETURN...
         $PDDB    DOC=YES               MUST PRECEDE $IOT
         $TAB     DOC=YES               MUST PRECEDE $IOT
         $IOT     DOC=YES
         $JOE     DOC=YES               REQ'D TO GET SYSOUT CLASS
         $XIT     DOC=YES               REQ'D TO GET EXIT
         $EXITPL  DOC=YES               REQ'D TO GET EXIT
         $MIT     DOC=YES               REQ'D BY $MODEND
         PRINT ON,GEN
         $PPPWORK DOC=YES               REQ'D TO FIND JOE
         PRINT ON,GEN
         TITLE 'JES2/SP3 EXIT #1 - BANNER CSECT'
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*         BEGIN BANNER CSECT FOR HEADER/TRAILER PRINT PAGES         *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
BANNER   $ENTRY CSECT=YES,BASE=R12      EXIT ROUTINE ENTRY POINT
         $SAVE
         LR       R12,R15               LOAD BASE REGISTER
         XR       R15,R15               CLEAR R15 IN CASE PUNCH
         TM       PCEID,PCEPUSID        IS DEVICE A PUNCH
         BO       RETURN                RETURN IF YES
         LR       R9,R0                 SAVE INPUT PARAMETERS
         L        R7,PWKJOE             ADDRESS WORK JOE
         USING    JOEDSECT,R7           ACTIVATE JOE ADDRESSABILITY
         CLC      JOEREMOT,=H'1'        IS THIS DSAA'S RJE
         BNE      NOTDSAA               NOT RJE SO CONTINUE PROCESSING
         B        RETURN-4              RJE SO LEAVE EXIT, (RC=8)
NOTDSAA  $GETBUF  TYPE=HASP,FIX=YES,WAIT=YES   GET A WORK BUFFER
         LR       R3,R1                 SAVE ADDRESS OF BUFFER
         USING    BUFDSECT,R3
PDIR     $SEPPDIR (R3)                  SEND A PDIR IN CASE SNA RMT
         LA       R0,JCTJNAME           POINT TO JOB NAME
JOBNAME  $PBLOCK BUFFER=(R3),DATA=(R0),SLANT=YES
         MVC      BUFSTART(132),LINE01
         LA       R1,BUFSTART           POINT TO PRINT LINE
         LA       R0,132                LENGTH OF PRINT LINE
         $PRPUT   DATA=(R1),LEN=(R0),COUNT=02,WAIT=YES  DETAIL LINES
         MVC      PCEUSER0(8),$BLANKS   BLANK OUT BUFFER
         MVC      PCEUSER0(1),JCTJOBID  GET JOB TYPE
         MVC      PCEUSER0+1(4),JCTJOBID+4  AND NUMBER
         MVC      JOBIDNUM(4),JCTJOBID+4 GET JOB NUMBER FOR DETAIL
         MVC      JOBPF(1),JCTJOBID      GET JOB TYPE FOR DETAIL
         MVC      PCEUSER0+6(1),JOECURCL GET SYSOUT CLASS
CPU      EQU      *
         MVC      RAN+8(1),JCTCPUID+3   RECEIVE JOB ID FROM JCT
         LA       R0,PCEUSER0           POINT TO THE BLOCK PRINT LINE
JOBID    $PBLOCK BUFFER=(R3),DATA=(R0),SLANT=YES PRT JOBID & CLASS
         MVC      BUFSTART(132),LINE01
         LA       R1,BUFSTART           POINT TO PRINT LINE
         LA       R0,132                LENGTH OF PRINT LINE
         $PRPUT   DATA=(R1),LEN=(R0),COUNT=02,WAIT=YES  DETAIL LINES
         MVC      BUFSTART+27(74),LINE02
         LA       R1,BUFSTART           POINT TO PRINT LINE
         LA       R0,132                LENGTH OF PRINT LINE
         $PRPUT   DATA=(R1),LEN=(R0),COUNT=01,WAIT=YES  DETAIL LINES
         MVC      BUFSTART(132),LINE01
         MVC      BUFSTART+49(L'LINE03),LINE03
         MVI      BUFSTART+27,C'J'
         MVI      BUFSTART+100,C'J'
         LA       R1,BUFSTART           POINT TO PRINT LINE
         LA       R0,132                LENGTH OF PRINT LINE
         $PRPUT   DATA=(R1),LEN=(R0),COUNT=01,WAIT=YES  DETAIL LINES
         MVC      BUFSTART(132),LINE01
         MVC      BUFSTART+33(L'LINE04),LINE04
         MVI      BUFSTART+27,C'J'
         MVI      BUFSTART+100,C'J'
         LA       R1,BUFSTART           POINT TO PRINT LINE
         LA       R0,132                LENGTH OF PRINT LINE
         $PRPUT   DATA=(R1),LEN=(R0),COUNT=01,WAIT=YES  DETAIL LINES
         MVC      BUFSTART(132),LINE01
         MVC      BUFSTART+32(L'LINE05),LINE05
         MVI      BUFSTART+27,C'J'
         MVI      BUFSTART+100,C'J'
         LA       R1,BUFSTART           POINT TO PRINT LINE
         LA       R0,132                LENGTH OF PRINT LINE
         $PRPUT   DATA=(R1),LEN=(R0),COUNT=01,WAIT=YES  DETAIL LINES
         MVC      BUFSTART(132),LINE01
         MVC      BUFSTART+33(L'LINE06),LINE06
         MVI      BUFSTART+27,C'J'
         MVI      BUFSTART+100,C'J'
         LA       R1,BUFSTART           POINT TO PRINT LINE
         LA       R0,132                LENGTH OF PRINT LINE
         $PRPUT   DATA=(R1),LEN=(R0),COUNT=01,WAIT=YES  DETAIL LINES
         MVC      BUFSTART(132),LINE01
         MVC      BUFSTART+34(L'LINE07),LINE07
         MVI      BUFSTART+27,C'J'
         MVI      BUFSTART+100,C'J'
         LA       R1,BUFSTART           POINT TO PRINT LINE
         LA       R0,132                LENGTH OF PRINT LINE
         $PRPUT   DATA=(R1),LEN=(R0),COUNT=01,WAIT=YES  DETAIL LINES
         MVC      BUFSTART(132),LINE01
         MVC      BUFSTART+42(L'LINE08),LINE08
         MVI      BUFSTART+27,C'J'
         MVI      BUFSTART+100,C'J'
         LA       R1,BUFSTART           POINT TO PRINT LINE
         LA       R0,132                LENGTH OF PRINT LINE
         $PRPUT   DATA=(R1),LEN=(R0),COUNT=01,WAIT=YES  DETAIL LINES
         MVC      BUFSTART+27(74),LINE02
         LA       R1,BUFSTART           POINT TO PRINT LINE
         LA       R0,132                LENGTH OF PRINT LINE
         $PRPUT   DATA=(R1),LEN=(R0),COUNT=01,WAIT=YES  DETAIL LINES
         MVC      BUFSTART(132),LINE01
         LA       R1,BUFSTART           POINT TO PRINT LINE
         LA       R0,132                LENGTH OF PRINT LINE
         $PRPUT   DATA=(R1),LEN=(R0),COUNT=02,WAIT=YES  DETAIL LINES
         MVC      BUFSTART+27(74),LINE02
         LA       R1,BUFSTART           POINT TO PRINT LINE
         LA       R0,132                LENGTH OF PRINT LINE
         $PRPUT   DATA=(R1),LEN=(R0),COUNT=01,WAIT=YES  DETAIL LINES
         MVC      BUFSTART(132),LINE01
         MVI      BUFSTART+27,C'J'
         MVI      BUFSTART+100,C'J'
         LA       R1,BUFSTART           POINT TO PRINT LINE
         LA       R0,132                LENGTH OF PRINT LINE
         $PRPUT   DATA=(R1),LEN=(R0),COUNT=01,WAIT=YES  DETAIL LINES
         MVC      BUFSTART+55(L'LINE09),LINE09
         MVC      BUFSTART+106(L'LINE10),LINE10
         MVI      BUFSTART+27,C'J'
         MVI      BUFSTART+100,C'J'
         LA       R1,BUFSTART           POINT TO PRINT LINE
         LA       R0,132                LENGTH OF PRINT LINE
         $PRPUT   DATA=(R1),LEN=(R0),COUNT=01,WAIT=YES  DETAIL LINES
         MVC      BUFSTART(132),LINE01
         MVI      BUFSTART+27,C'J'
         MVI      BUFSTART+100,C'J'
         LA       R1,BUFSTART           POINT TO PRINT LINE
         LA       R0,132                LENGTH OF PRINT LINE
         $PRPUT   DATA=(R1),LEN=(R0),COUNT=01,WAIT=YES  DETAIL LINES
         MVC      BUFSTART+35(L'LINE11),LINE11
         MVC      BUFSTART+106(L'LINE12),LINE12
         MVI      BUFSTART+27,C'J'
         MVI      BUFSTART+100,C'J'
         LA       R1,BUFSTART           POINT TO PRINT LINE
         LA       R0,132                LENGTH OF PRINT LINE
         $PRPUT   DATA=(R1),LEN=(R0),COUNT=01,WAIT=YES  DETAIL LINES
         MVC      BUFSTART(132),LINE01
         MVI      BUFSTART+27,C'J'
         MVI      BUFSTART+100,C'J'
         LA       R1,BUFSTART           POINT TO PRINT LINE
         LA       R0,132                LENGTH OF PRINT LINE
         $PRPUT   DATA=(R1),LEN=(R0),COUNT=01,WAIT=YES  DETAIL LINES
         MVC      BUFSTART+50(L'LINE13),LINE13
         MVC      BUFSTART+106(L'LINE14),LINE14
         MVI      BUFSTART+27,C'J'
         MVI      BUFSTART+100,C'J'
         LA       R1,BUFSTART           POINT TO PRINT LINE
         LA       R0,132                LENGTH OF PRINT LINE
         $PRPUT   DATA=(R1),LEN=(R0),COUNT=01,WAIT=YES  DETAIL LINES
         MVC      BUFSTART(132),LINE01
         MVI      BUFSTART+27,C'J'
         MVI      BUFSTART+100,C'J'
         LA       R1,BUFSTART           POINT TO PRINT LINE
         LA       R0,132                LENGTH OF PRINT LINE
         $PRPUT   DATA=(R1),LEN=(R0),COUNT=01,WAIT=YES  DETAIL LINES
         MVC      BUFSTART+106(L'LINE15),LINE15
         LA       R1,BUFSTART           POINT TO PRINT LINE
         LA       R0,132                LENGTH OF PRINT LINE
         $PRPUT   DATA=(R1),LEN=(R0),COUNT=01,WAIT=YES  DETAIL LINES
         MVC      BUFSTART(132),LINE01
         MVI      BUFSTART+27,C'J'
         MVI      BUFSTART+100,C'J'
         LA       R1,BUFSTART           POINT TO PRINT LINE
         LA       R0,132                LENGTH OF PRINT LINE
         $PRPUT   DATA=(R1),LEN=(R0),COUNT=01,WAIT=YES  DETAIL LINES
         MVC      BUFSTART+27(74),LINE02
         LA       R1,BUFSTART           POINT TO PRINT LINE
         LA       R0,132                LENGTH OF PRINT LINE
         $PRPUT   DATA=(R1),LEN=(R0),COUNT=01,WAIT=YES  DETAIL LINES
         MVC      BUFSTART(132),LINE01
         LA       R1,BUFSTART           POINT TO PRINT LINE
         LA       R0,132                LENGTH OF PRINT LINE
         $PRPUT   DATA=(R1),LEN=(R0),COUNT=02,WAIT=YES  DETAIL LINES
         MVC      BUFSTART(19),LINE18
         MVC      BUFSTART+112(19),LINE18
TIME     $TIME
         LR       R6,R1                      MOVE DATE TO R6
         SRDL     R0,32                      SHIFT RIGHT
         D        R0,=F'+100'                CONVERT TO WHOLE SECONDS
         XR       R0,R0                      CLEAR R0
         D        R0,=F'+3600'               GET HOURS
         CVD      R1,JCTUSER0                CONVERT HRS TO
         UNPK     BUFSTART+25(2),JCTUSER0+6(2)     PRINTABLE FORMAT
         OI       BUFSTART+26,240            FIX ZONE
         SRDL     R0,32                      MOVE REMNDR FOR DIVIDE
         D        R0,=F'+60'                 GET MINUTES
         CVD      R1,JCTUSER0+8              CONVERT MINUTES
         MVI      BUFSTART+27,C'.'           MOVE DOT
         UNPK     BUFSTART+28(2),JCTUSER0+14(2)  PRINT MINUTES
         OI       BUFSTART+29,240            FIX ZONE
         CVD      R0,JCTUSER0+16             CONVERT SECONDS
         MVI      BUFSTART+30,C'.'           MOVE DOT
         UNPK     BUFSTART+31(2),JCTUSER0+22(2)  PRINT SECONDS
         OI       BUFSTART+32,240            FIX ZONE
JOBNUM   EQU      *
         MVC      BUFSTART+74(L'JOBPF),JOBPF MOVE LETTER J PREFIX
         MVC      BUFSTART+75(4),JOBIDNUM    MOVE JOBID TO DETAIL LINE
DATE     STCM     R6,15,JCTUSER0             STORE DATE
         UNPK     BUFSTART+36(5),JCTUSER0+1(3)  UNPACK DATE
         OI       BUFSTART+40,240            FIX ZONE
         MVC      BUFSTART+35(2),BUFSTART+36 MOVE DAY BACK 1
         MVI      BUFSTART+37,C'.'           MOVE DOT
         MVC      BUFSTART+45(L'RAN),RAN     RAN ON J OR L?
PAGE     C        R9,=F'+0'             HEADER PAGE?  (CODE=0)
         BH       CONT
         MVC      BUFSTART+62(7),STARTL
         B        NAME
CONT     C        R9,=F'+4'             CONTINUED PAGE?  (CODE=4)
         BH       END
         MVC      BUFSTART+58(15),CONTL
         B        NAME
END      MVC      BUFSTART+62(7),ENDL   ENDING PAGE (DEFAULTED CODE=8)
NAME     MVC      BUFSTART+83(20),JCTPNAME   MOVE NAME FIELD
         LA       R1,BUFSTART           POINT TO PRINT LINE
         LA       R0,132                LENGTH OF PRINT LINE
         CLI      PDEVBYT3,14           IS THIS THE LASER?
         DROP     R7                    THROUGH WITH JOE POINTER
         BNE      NOTLASER              NO - USE COUNT OF 13
         $PRPUT   DATA=(R1),LEN=(R0),COUNT=09,WAIT=YES  DETAIL LINES
         C        R9,=F'+8'             TRAILER PAGE?  (CODE=8)
         BL       ARND                  NO, GO TO END
         XC       BUFSTART(132),BUFSTART CLEAR PRINT LINE
         LA       R1,BUFSTART           POINT TO PRINT LINE
         LA       R0,132                LENGTH OF PRINT LINE
NOTLASER $PRPUT   DATA=(R1),LEN=(R0),COUNT=14,WAIT=YES  DETAIL LINES
         C        R9,=F'+8'             TRAILER PAGE?  (CODE=8)
         BL       ARND                  NO, GO TO END
         MVC      BUFSTART(132),LINE01   CLEAR PRINT LINE
         LA       R1,BUFSTART           POINT TO PRINT LINE
         LA       R0,133                LENGTH OF PRINT LINE
         $PRPUT   DATA=(R1),LEN=(R0),COUNT=14,WAIT=YES  PAGE SEPERATION
         C        R9,=F'+8'             CHECK IF TRAILER (CODE=8)
         BL       ARND                  IF NOT DONT WRITE RECIEPT
         $EXIT 255,JOBMASK=JCTXMASK     CALL EXIT 255
ARND     EQU      *
* * *     ACHTUNG!  THE FOLLOWING CODE MUST BE IN PLACE TO PRINT * * *
* * *               THE JESNEWS PAGE AFTER THE BANNER PAGE.   JLC* * *
* * *               REF: LABEL 'PRINTSEP' AT LINE 10759000 IN PRPU * *
         ICM      R1,15,$NEWSTTR       GET NEWS TTR
         LTR      R1,R1                BR IS NEWS NOT AVAILABLE
         BZ       EXIT
         $RESTORE R0                   RESTORE ENTRY TYPE
         LTR      R0,R0                BR IF NOT DOING START PAGE
         BNZ      EXIT
         OI       PPFLAG,PPNEWS        SET NEWS FLAG
         ST       R1,PCEJMTTR          SET NEWS MTTR
         MVC      PCEEJRCB,=Y(HDBSTART-BUFDSECT) SET INITIAL OFFSET
         MVC      PPKEY,=C'$$NEWS'     SET SPECIAL JOB/DS KEY
         MVC      PRLINECT,=F'-1'      SET LARGE PAGE SIZE
PPNEWS   EQU      X'01'                JES NEWS PROCESS (PPFLAG)
EXIT     DS       0H
* * *         END JESNEWS ENABLING CODE        * * *
         $FREEBUF (R3)                  FREE WORK BUFFER
         DROP     R3
         LA       R15,8                 SET RETURN CODE=8
RETURN   $RETURN RC=(R15)               RETURN TO HASPPRPU
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                  C O N S T A N T S                                *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
DOUBLE   DS       D
LINE01   DC       CL132' '
LINE02   DC       C'JJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJ+
               JJJJJJJJJJJJJJJJJJJJJJJ'
LINE03   DC       C'THIS HEADER SHEET IS UNCLASSIFIED'
LINE04   DC       C'WARNING--THIS DOCUMENT MAY CONTAIN "TOP SECRET" INF+
               ORMATION'
LINE05   DC       C'IF THE MAXIMUM CLASSIFICATION LEVEL OF THE INFORMAT+
               ION CONTAINED'
LINE06   DC       C'HEREIN IS LESS THAN THE ABOVE LEVEL, THIS HEADER SH+
               EET MUST BE'
LINE07   DC       C'REMOVED OR REMARKED TO SHOW THE CORRECT CLASSIFICAT+
               ION LEVEL.'
LINE08   DC       C'SEE COVER SHEET FOR ADDITIONAL INFORMATION.'
LINE09   DC       C'S Y S T E M -- J'
LINE10   DC       C'QUALITY CHECKED BY:'
LINE11   DC       C'A I R   F O R C E   D A T A   S E R V I C E S   C E+
                N T E R'
LINE12   DC       C'PRINTER OPER # ______'
LINE13   DC       C'PENTAGON / WASHINGTON  D.C.  20330'
LINE14   DC       C'P C S  OPER  # ______'
LINE15   DC       C'RECIEVED BY    ___________________'
LINE18   DC       C'T O P   S E C R E T'
RAN      DC       C'RAN ON " "'
STARTL   DC       C'>START<'
CONTL    DC       C'...CONTINUED...'
ENDL     DC       C'>>END<<'
JOBPF    DC       C' '
JOBIDNUM DS       4C
         LTORG
         TITLE 'JES2/SP3 EXIT #1 - PUNCH CSECT'
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*          BEGIN PUNCH CSECT FOR HEADER/TRAILER CARDS               *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
PUNCH    $ENTRY CSECT=YES,BASE=R12      EXIT ROUTINE ENTRY POINT
         $SAVE
         LR       R12,R15               LOAD BASE REGISTER
         XR       R15,R15               CLEAR R15 FOR RC=0
         LR       R9,R0                 SAVE INPUT PARAMETERS
         CLI      PDEVTYPE+3,12         IS THIS A 3525 PUNCH?
         BNE      FINI                  IF NOT, GET OUT!
         $GETBUF  TYPE=HASP,FIX=YES,WAIT=YES   GET A WORK BUFFER
         LR       R3,R1                 SAVE ADDRESS OF BUFFER
         USING    BUFDSECT,R3
         MVC      BUFSTART(80),BLANKS   CLEAR BUFSTART
FIRSTC   C        R9,=F'+0'             HEADER CARD?  (CODE=0)
         BH       FINI
         MVC      BUFSTART(L'FIRST),FIRST
JOBNO    MVC      BUFSTART+27(3),JCTJOBID+5 MOVE JOB NUMBER
CAVEAT@  MVC      BUFSTART+34(L'CAVEAT),CAVEAT   MOVE CAVEAT FIELD
         LA       R1,BUFSTART           POINT TO PRINT LINE
         LA       R0,80                 LENGTH OF PRINT LINE
         $PRPUT   DATA=(R1),LEN=(R0),COUNT=01,WAIT=YES  DETAIL LINES
         $FREEBUF (R3)                  FREE WORK BUFFER
         DROP     R3
         LA       R15,8                 SET RETURN CODE
FINI     $RETURN RC=(R15)               RETURN TO HASPPRPU
FIRST    DC       C'* * *  FIRST CARD FOR JOB #'
CAVEAT   DC       C'> >  T O P   S E C R E T  < <'
BLANKS   DC       CL80' '
         LTORG
         $MODEND
         END
