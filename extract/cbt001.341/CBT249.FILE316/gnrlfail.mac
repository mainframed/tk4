         MACRO
&NAME    GNRLFAIL &RET=,&TYPE=,&GFCB=,&CPPL=,&KEYN08=NO
.*
.*  THIS MACRO IS USED TO ISSUE ERROR MESSAGES FOR CERTAIN
.*  FAILURES.  IT IS ASSUMED THAT ON ENTRY R15 CONTAINS
.*  EITHER THE ERROR RETURN CODE OR ABEND CODE. THIS ROUTINE
.*  WILL DESTROY R1.
.*
         GBLC  &P
         GBLC  &GNRLF
         LCLC  &CALLID
         LCLC  &GNRLFCB
         LCLC  &LCLLBL
         LCLC  &GFBITS
         AIF   ('&TYPE' EQ '').ERR1   MUST SUPPLY TYPE
         AIF   ('&RET' EQ '').SYSLBL
&LCLLBL  SETC  '&RET'
         AGO   .CONT1
.SYSLBL  ANOP
&LCLLBL  SETC  '&P'.'&SYSNDX'
.CONT1   ANOP
         AIF   ('&GFCB' EQ '').NOGFCB
&GNRLFCB SETC  '&GFCB'
         AGO   .CONT2
.NOGFCB  ANOP
&GNRLFCB SETC  '&P'.'GNRLF'
&GNRLF   SETC  'YES'  SO CPDATA ALLOCATES CONTROL BLOCKS
.CONT2   ANOP
.*  DETERMINE THE CORRECT GFBITS SETTING BASED UPON THE
.*  GNRLFAIL TYPE REQUEST AND THE PROTECT KEY
&GFBITS  SETC  '0'
         AIF   ('&TYPE' NE 'SSREQ' OR '&KEYN08' NE 'YES').CONT4
&GFBITS  SETC  'GFKEYN08+GFSUBSYS'
         AGO   .CONT6
.CONT4   ANOP
         AIF   ('&TYPE' NE 'SSREQ').CONT5
&GFBITS  SETC  'GFSUBSYS'
         AGO   .CONT6
.CONT5   ANOP
         AIF   ('&KEYN08' NE 'YES').CONT6
&GFBITS  SETC  'GFKEYN08'
.CONT6   ANOP
         AIF   ('&NAME' EQ '').NONAME
&NAME    EQU   *
.NONAME  ANOP
         AIF   ('&TYPE' NE 'PARSE').NOPARS
         LA    R1,4           IF PARSE ERROR CODE IS 4 OR 20,
         CR    R15,R1         ERROR MESSAGE HAS BEEN ISSUED
         BE    &LCLLBL
         LA    R1,20
         CR    R15,R1
         BE    &LCLLBL
.NOPARS  ANOP
         LA    R1,&GNRLFCB+4   R1 => GNRLFAIL CONTROL BLOCK
         ST    R1,&GNRLFCB
         USING GFCBPTR,R1
         AIF   ('&TYPE' EQ 'SSREQ').SSREQT    DON'T ZERO PTR IF SSREQ
         XC    GFCBPTR,GFCBPTR  ZERO THE OPTIONAL POINTERS
         AGO   .CONT3
.SSREQT  ANOP
         ST    R0,GFCBPTR     R0 => SSOB
.CONT3   ANOP
         XC    GF02PTR,GF02PTR   ZERO PTR TO TSO MESSAGE ISSUER
         ST    R15,GFRCODE   STORE THE RETURN OR ABEND CODE
         AIF   ('&TYPE' NE 'PUTLINE').NOPUTL
&CALLID  SETC  'GFPUTL'
         AGO   .LINK
.NOPUTL  ANOP
         AIF   ('&TYPE' NE 'PARSE').NOPRS
&CALLID  SETC  'GFPARSE'
         AGO   .LINK
.NOPRS   ANOP
         AIF   ('&TYPE' NE 'ABEND').NOABND
&CALLID  SETC  'GFABEND'
         AGO   .LINK
.NOABND  ANOP
         AIF    ('&TYPE' NE 'SSREQ').ERR3
&CALLID  SETC  'GFSSREQ'
.LINK    ANOP
         LA    R15,&CALLID   SET THE FALURE CODE INTO
         STH   R15,GFCALLID   THE CONTROL BLOCK
         MVI   GFBITS,&GFBITS
         XC    GFRESV1,GFRESV1
         AIF   ('&CPPL' NE '').CPPL
         L     R15,4(R13)
         L     R15,24(R15)    R15 => CPPL
         AGO   .NOCPPL
.CPPL    ANOP
         L     R15,&CPPL      R15 => CPPL
.NOCPPL  ANOP
         ST    R15,GFCPPLP
         XC    GFDSNLEN,GFDSNLEN
         XC    GFPGMNL,GFPGMNL     ZERO THE PROGRAM NAME LENGTH
         XC    GFDSNP,GFDSNP
         XC    GFPGMNP,GFPGMNP
         XC    GFRESV2,GFRESV2
         XC    GFRESV3,GFRESV3
         DROP  R1
         LA    R1,&GNRLFCB
         LINK  EP=IKJEFF19
         AIF   ('&RET' EQ '').GENLBL
         B     &LCLLBL           GO TO ERROR LABEL
         AGO   .EXIT
.GENLBL  ANOP
         AIF   ('&TYPE' NE 'PARSE').EXIT
&LCLLBL  DS    0H
.EXIT    ANOP
         MEXIT
.ERR1    ANOP
         MNOTE 8,'TYPE PARAMETER MISSING ON GNRLFAIL'
         DC    F'0'
         MEXIT
.ERR3    ANOP
         MNOTE 8,'INVALID TYPE ON GNRLFAIL'
         DC    F'0'
         MEXIT
         MEND
