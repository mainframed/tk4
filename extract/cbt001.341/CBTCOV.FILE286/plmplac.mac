 PLMPLAC:PROC(DATE,DAY,WEEK,YEAR);
 /****************************  PLMPLAC   ******************************
 *                                                                     *
 * NAME - PLMPLAC.                                                     *
 *                                                                     *
 * DATE OF LAST MODIFICATION - 78032.                                  *
 *                                                                     *
 * AUTHORS - ANDY KNIGHT.                                              *
 *                                                                     *
 * FUNCTION.                                                           *
 *         TO RETURN THE ACCOUNTING DATE  (D,WW,YY WHERE D IS THE DAY  *
 *         OF THE WEEK - 1=MON,2=TUE,ETC., WW IS THE WEEK NUMBER - THE *
 *         FIRST COMPLETE WEEK IN THE YEAR IS WEEK 1, YY IS THE YEAR)  *
 *         WHEN SUPPLIED WITH A PL/1 FORMAT DATE.                      *
 *                                                                     *
 * BASIC  FLOW.                                                        *
 *         1. THE DATE IS VALIDATED TO TEST WHETHER IT CONTAINS        *
 *            NUMERIC CHARACTERS WHICH REPRESENT A VALID DATE.  AN     *
 *            INVALID DATE CAUSES AN ERROR TO BE SIGNALLED.            *
 *         2. THE NUMBER OF DAYS FROM THE FIRST MONDAY IN THE          *
 *            ACCOUNTING YEAR TO THE PLI DATE PASSED IS CALCULATED     *
 *            (THE RESULT MAY BE NEGATIVE).  AT THIS STAGE FEB 29TH    *
 *            19??, WHERE 19?? IS NOT A LEAP YEAR, WILL CAUSE AN ERROR *
 *            TO BE SIGNALLED.                                         *
 *         3. THE ACCOUNTING WEEK IS DERIVED FROM THE RESULT OF 2.     *
 *         4. THE ACCOUNTING DAY IS DERIVED FROM THE RESULT OF 2.      *
 *         5. THE ACCOUNTING YEAR IS DERIVED FROM THE PL/1 YEAR AND    *
 *            MONTH.                                                   *
 *                                                                     *
 * ENTERED  FROM - ANY PL/1 OPTIMISER PROGRAM.                         *
 *                                                                     *
 * INPUT.                                                              *
 *         DATE (CHAR(6))      - PL/1-FORMAT DATE.                     *
 *                                                                     *
 * OUTPUT.                                                             *
 *         DAY  (FIXED DEC(1)) - ACCOUNTING DAY,                       *
 *         WEEK (FIXED DEC(2)) - ACCOUNTING WEEK,                      *
 *         YEAR (FIXED DEC(2)) - ACCOUNTING YEAR.                      *
 *                                                                     *
 * EXTERNAL  REFERENCES.                                               *
 *         NONE.                                                       *
 *                                                                     *
 * MACROS  REFERENCED.                                                 *
 *         NONE.                                                       *
 *                                                                     *
 * TABLES  REFERENCED.                                                 *
 *         WKDAYS - USED IN CALCULATING THE NUMBER OF DAYS TO THE DATE *
 *                  PASSED (SEE STEP 2 ABOVE).                         *
 *         VAL    - USED IN VALIDATING THE DATE PASSED.                *
 *                                                                     *
 * EXITS.                                                              *
 *         NORMAL EXIT TO CALLING PROCEDURE.                           *
 *                                                                     *
 * MESSAGES.                                                           *
 *         NONE.                                                       *
 *                                                                     *
 * ERROR  HANDLING.                                                    *
 *         IF AN INVALID DATE IS ENTERED THE VALUES (DATE,0,0,0) ARE   *
 *         RETURNED TO THE CALLING PROCEDURE.                          *
 *                                                                     *
 * ENVIRONMENT - PL/1 OPTIMISER PROGRAMS (VER 1, REL 3.0, PTF 63).     *
 *                                                                     *
 * RESTRICTIONS - MAY ONLY BE ENTERED FROM PL/1 OPTIMISER PROGRAMS.    *
 *                                                                     *
 *****************************  PLMPLAC   *****************************/
 DCL (VERIFY,FLOOR,MOD) BUILTIN;
 DCL DATE    CHAR(6);
 DCL DAY     FIXED(1);
 DCL WEEK    FIXED(2);
 DCL YEAR    FIXED(2);
 DCL DD      PIC'99' DEF (DATE) POS(5);
 DCL MM      PIC'99' DEF (DATE) POS(3);
 DCL YY      PIC'99' DEF (DATE);
 DCL WKDAYS  FIXED(3);
 DCL WKMONTH FIXED(2);
 DCL A(12)   FIXED(3) STATIC
     INIT(274,305,333,0,30,61,91,122,153,183,214,244);
 DCL VAL(12) PIC'99' STATIC
     INIT('31','29','31','30','31','30','31','31','30','31','30','31');
           ON ERROR BEGIN;
                    DAY=0;
                    WEEK=0;
                    YEAR=0;
                    GOTO END;
                    END;
           IF VERIFY(DATE,'1234567890') ×
              MM>'12' × MM<'01' ×
              DD>VAL(MM) × DD<'01'
           THEN SIGNAL ERROR;
           ELSE DO;
                WKDAYS=DD;
                WKMONTH=MM;
                YEAR=YY;
                WKDAYS=A(WKMONTH)+WKDAYS-MOD(8-FLOOR(YEAR*5/4),7)-1;
                IF MOD(YEAR,4)=0
                THEN IF WKMONTH<3
                     THEN WKDAYS=WKDAYS-1;
                     ELSE;
                ELSE IF DD=29 & WKMONTH=2
                     THEN SIGNAL ERROR;
                WEEK=WKDAYS/7+1;
                DAY=MOD(WKDAYS,7)+1;
                IF WKMONTH<4
                THEN YEAR=YEAR-1;
                END;
 END:      END PLMPLAC;
