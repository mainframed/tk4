***********************************************************************
*                                                                     *
* NAME - IMSERR.                                                      *
*                                                                     *
* DATE OF LAST MODIFICATION - 1976.                                   *
*                                                                     *
* AUTHORS - GRAHAM BAKER, MIKE ROBINSON.                              *
*                                                                     *
* FUNCTION.                                                           *
*         TO PRINT THE PARAMETERS TO AN IMS CALL.                     *
*                                                                     *
* BASIC  FLOW.                                                        *
*         1. HEADING IS PRINTED CONTAINING STATUS CODE FROM PCB.      *
*         2. FOLLOWED BY THE OTHER FIELDS FROM THE PCB.               *
*         3. THEN THE IO AREA IS PRINTED.                             *
*         4. FOLLOWED BY SEGMENT SEARCH ARGUMENTS IF SUPPLIED.        *
*         5. TRUNC IS THEN ISSUED TO THE PRINT FILE.                  *
*         6. AND CONTROL RETURNED TO THE CALLING PROGRAM.             *
*                                                                     *
* ATTRIBUTES - NONE.                                                  *
*                                                                     *
* ENTERED  FROM - PL/I PROGRAM VIA CALL STATEMENT.                    *
*                                                                     *
* INPUT.                                                              *
*         1. PARAMETERS ARE PASSED BY PL/I PROGRAM.                   *
*              THEY SHOULD BE IN THE SAME FORMAT AS IN THE IMS CALL.  *
*         2. THE PCB POINTER PARAMETER SHOULD POINT TO A VALID PCB.   *
*                                                                     *
* OUTPUT.                                                             *
*         THE REPORT IS PRODUCED ON FILE IMSERRPT.                    *
*                                                                     *
* EXTERNAL  REFERENCES - NONE.                                        *
*                                                                     *
* MACROS  REFERENCED.                                                 *
*         BEGIN, PRNT, EXIT - ALL IN SOFTWARE.PGB.MACRO.              *
*                                                                     *
* TABLES  REFERENCED.                                                 *
*         IMS PCB.                                                    *
*                                                                     *
* REGISTER  USAGE.                                                    *
*         BASE - R12                                                  *
*                                                                     *
* EXITS.                                                              *
*         TO CALLING PROGRAM VIA REGISTER 14.                         *
*                                                                     *
* MESSAGES - NONE.                                                    *
*                                                                     *
* ERROR  HANDLING.                                                    *
*         NONE.                                                       *
*                                                                     *
* ENVIRONMENT - PL/I OPTIMIZING COMPILER, RELEASE 2 ONWARDS.          *
*                                                                     *
* RESTRICTIONS - NONE.                                                *
*                                                                     *
***********************************************************************
         MACRO
&N       BEGIN &BASENO=1,&BASE=12,&BASE2=11,&SAN=
         GBLB  &ZBEGIN
&N       SAVE  (14,12)
         AIF   ('&BASENO' EQ '0').B
         BALR  BASE,0
         AIF   ('&BASENO' EQ '2').A
         USING *,BASE
         AGO   .B
.A       ANOP
         USING *,BASE,BASE2
         LA    BASE2,2048(BASE)
         LA    BASE2,2048(BASE2)
.B       ANOP
         LR    R1,R13
         CNOP  0,4
         BAL   R13,*+76
&SAN     DC    18A(0)
         ST    R13,8(R1)
         ST    R1,4(R13)
         AIF   (&ZBEGIN EQ 1).C
&ZBEGIN  SETB  1
         REQU  (BASE,&BASE)
         AIF   ('&BASENO' NE '2').C
BASE2    EQU   &BASE2
.C       ANOP
         MEND
         MACRO
&N       EXIT  &RC=0,&CLOSE=YES
         GBLA  &CT
         GBLC  &NM(10)
         LCLC  &Q
&Q       SETC  '&N'
         AIF   ('&CLOSE' EQ 'NO').EX3
         AIF   (&CT EQ 0).EX3
* CLOSE ALL DCB'S OPENED IMPLICITLY
         CNOP  0,4
&Q       BAL   1,BA&SYSNDX.A
&Q       SETC  ''
.EX12    ANOP
         AIF   (&CT EQ 0).EX18
         AIF   (&CT NE 1).EX14
         DC    X'80'
         AGO   .EX16
.EX14    ANOP
         DC    X'0'
.EX16    ANOP
         DC    AL3(&NM(&CT))
&NM(&CT) SETC  ''
&CT      SETA  &CT-1
         AGO   .EX12
.EX18    ANOP
BA&SYSNDX.A CLOSE ,MF=(E,(1))
.EX3     ANOP
* RESTORE REGISTERS, SET RETURN CODE AND GO
&Q       L     R13,4(R13)
         RETURN (14,12),RC=&RC
         SPACE
         MEND
         MACRO
&N       PRNT  &CC,&ADDR,&DCBN,&OPEN=YES
         GBLA  &CT,&PRINT
         GBLC  &NM(10)
         GBLC  &LABEL,&LABEL2
         LCLA  &DC
         LCLC  &DCB
         LCLC  &A
         LCLA  &LINES
         AIF   (T'&DCBN NE 'O').PRINT1
&DCB     SETC  'SYSPRINT'
         AGO   .PRINT2
.PRINT1  ANOP
&DCB     SETC  '&DCBN'
.PRINT2  ANOP
         AIF   (T'&N EQ 'O').PRINT25
&N       DS    0H
.PRINT25 ANOP
         AIF   ('&OPEN' EQ 'NO').PRINT43
.PRINT3  ANOP
&DC      SETA  &DC+1
         AIF   ('&NM(&DC)' EQ '').PRINT4
         AIF   ('&NM(&DC)' EQ '&DCB').PRINT5
         AGO   .PRINT3
.PRINT4  ANOP
&NM(&DC) SETC  '&DCB'
&CT      SETA  &DC
         OPEN  (&DCB,(OUTPUT))
         B     BA&SYSNDX.A
&DCB     DCB   DDNAME=&DCB,DSORG=PS,MACRF=PM, .               **********
               RECFM=FBA,LRECL=133
.PRINT43 ANOP
         AIF   (&PRINT EQ 1).PRINT45
         AIF   ('&OPEN' NE 'NO').PRINT44
         B     BA&SYSNDX.A
.PRINT44 ANOP
&LABEL   SETC  'BA&SYSNDX.P'
&LABEL2  SETC  'BA&SYSNDX.L'
&LABEL2  DC    CL133' '
BA&SYSNDX.Z  DS   2F
         DS    F
&LABEL   STM   15,0,BA&SYSNDX.Z
         PUT   (1),(0)
         L     1,BA&SYSNDX.Z+4
         MVI   0(1),64
         MVC   1(132,1),0(1)
         L     15,BA&SYSNDX.Z
         BR    15
&PRINT   SETA  1
.PRINT45 ANOP
BA&SYSNDX.A  EQU   *
.PRINT5  ANOP
         AIF   (T'&CC EQ 'O').PRINT15
         AIF   ('&CC'(1,1) EQ 'C').PRINT14
         AIF   ('&CC'(1,2) NE 'NP').PRINT8
         AIF   (K'&CC EQ 3).PRINT6
         AIF   (K'&CC EQ 4).PRINT7
.PRINT55 ANOP
         MVI   &ADDR,C'1' .        SET "NEW PAGE" CHARACTER
         AGO   .PRINT15
.PRINT6  ANOP
         AIF   ('&CC' EQ 'NP0').PRINT55
&A       SETC  '&CC'(3,1)
         AGO   .PRINT75
.PRINT7  ANOP
&A       SETC  '&CC'(3,2)
.PRINT75 ANOP
&LINES   SETA  &A
&LINES   SETA  &LINES+3
         AGO   .PRINT10
.PRINT8  AIF   (&CC NE 0).PRINT9
         MVI   &ADDR,C'+' .        SET "NO SPACE" CHARACTER
         AGO   .PRINT15
.PRINT9  ANOP
&LINES   SETA  &CC
.PRINT10 ANOP
         AIF   (&LINES LT 4).PRINT1A
         AIF   (&LINES LT 6).PRINT1B
         ST    2,&LABEL-4
         LA    2,&LINES/3
.PRINT1B AIF   ('&CC'(1,2) EQ 'NP').PRINT1C
BA&SYSNDX.B MVI &LABEL2,C'-'
         AGO   .PRINT1D
.PRINT1C ANOP
         MVI   &LABEL2,C'1'
BA&SYSNDX.B EQU *
.PRINT1D ANOP
         LA    1,&DCB
         LA    0,&LABEL2
         BAL   15,&LABEL
         AIF   (&LINES LT 6).PRINT1F
         AIF   ('&CC'(1,2) NE 'NP').PRINT1E
         MVI   &LABEL2,C'-'
.PRINT1E ANOP
         BCT   2,BA&SYSNDX.B
         L     2,&LABEL-4
.PRINT1F ANOP
&LINES   SETA  &LINES-3*(&LINES/3)
.PRINT1A ANOP
         AIF   (&LINES NE 3).PRINT11
         ST    R1,4(R13)
         MVI   &ADDR,C'-'
         AGO   .PRINT15
.PRINT11 AIF   (&LINES NE 2).PRINT12
         MVI   &ADDR,C'0'
         AGO   .PRINT15
.PRINT12 AIF   (&LINES NE 1).PRINT13
         MVI   &ADDR,64
         AGO   .PRINT15
.PRINT13 ANOP
         MVI   &ADDR,C'+'
         AGO   .PRINT15
.PRINT14 ANOP
         MVI   &ADDR,&CC
.PRINT15 ANOP
         LA    1,&DCB
         LA    0,&ADDR
         BAL   15,&LABEL
         MEND
         GBLC  &LABEL2
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
BASE     EQU   12
IMSERR   CSECT
         ENTRY IMSERR0,IMSERR1,IMSERR2,IMSERR3,IMSERR4,IMSERR5,IMSERR6
IMSERR0  EQU   *
IMSERR1  EQU   *
IMSERR2  EQU   *
IMSERR3  EQU   *
IMSERR4  EQU   *
IMSERR5  EQU   *
IMSERR6  EQU   *
         BEGIN
         L     R1,24(R1)           RESTORE R1
         LR    R2,R1                    & SAVE IT IN R2
* PRINT FIRST LINE
         MVC   L+30(15),=C'DL/1 DATA PRINT'
         L     R3,8(R2)
         L     R3,0(R3)            PCB ADDRESS
         MVC   L+75(2),10(R3)      SET STATUS CODE
         MVC   L+62(13),=C'STATUS CODE "'
         MVC   L+77(1),=C'"'
A0G      EQU   *
         TIME  DEC
         ST    R1,DWK
         MVC   L+105(7),=X'4021204B202020'
         ED    L+105(7),DWK+1
         ST    R0,DWK
         MVC   L+93(9),=X'4021204B20204B2020'
         ED    L+93(9),DWK
         MVC   L+122(4),=C'PAGE'
         MVC   L+126(4),=X'40202120'
         ED    L+126(4),PAGNO
         AP    PAGNO,=P'1'
         BO    A0M
         PRNT  NP,L,IMSERRPT
         B     A0N
A0M      PRNT  NP,L,IMSERRPT
A0N      EQU   *
* PRINT 2ND LINE
         MVC   L+1(15),=C'PARAMETER COUNT'
         L     R3,0(R2)
         L     R3,0(R3)
A0R      EQU   *                                                    DC
         L     R4,8(R2)            PCB  POINTER  D_V                 DC
         L     R4,0(R4)            PCB  POINTER                      DC
         LH    R4,8(R4)            RESERVED / SEGMENT LEVEL          DC
         ZAP   LINO,=P'17'         D/B PCB                           DC
         C     R4,MASK3            BLANK ?                           DC
         BE    AMR1                DB PCB                            DC
         N     R4,MASK1            SELECT BITS 0 - 12                DC
         C     R4,MASK2            = '1111000011110' FOR DB PCB      DC
         BE    AMR1                DB  PCB                           DC
         ZAP   LINO,=P'12'         I/O PCB                           DC
         LA    R3,3                DO NOT PRINT SSA'S FOR DC PCB'S
AMR1     EQU   *                                                     DC
         C     R3,=F'18'
* EQUIVALENTS UNDER NEATH.
*         R4=LENGTH    R5=ADDRESS      R6=RETURN ADDRESS
A08      STM   R4,R5,DWK
         LTR   R4,R4
         BCR   8,R6
A09      LA    R10,3
A10      LM    R4,R5,DWK
         LA    R7,L+5
         LA    R8,14
         SLL   R10,2
A11      B     *(R10)
         B     A18
         B     A16
         B     A14
A12      LA    R7,9(R7)
         LA    R5,8(R5)
         S     R4,=F'8'
         BZ    A13
         BCT   R8,A11
         BH    A00
         LR    R5,R3
         SLL   R5,2                MAKE SURE PARAMETER
         AR    R5,R2                    COUNT & LAST PARM
         OI    0(R5),128                     INDICATOR AGREE
A00      EQU   *
         CVD   R3,DWK
         MVC   L+17(4),=X'40202120'
         ED    L+17(4),DWK+6
         MVC   L+30(18),=C'DL/1 CALL FUNCTION'
         L     R4,4(R2)
         L     R4,0(R4)
         MVC   L+52(4),0(R4)
         PRNT  2,L,IMSERRPT
* PRINT PCB CONTENTS ON NEXT NINE LINES
         MVC   L+1(12),=C'PCB CONTENTS'
         PRNT  3,L,IMSERRPT
         L     R4,8(R2)
         L     R4,0(R4)            PCB ADDRESS
         MVC   DWK(8),0(R4)
         BAL   R6,A24
         CP    LINO,=P'17'                                          DC
         BNE   A02A                                                 DC
         MVC   L+10(9),=C'DBD  NAME'
         PRNT  2,L,IMSERRPT
         MVC   L+10(13),=C'SEGMENT LEVEL'
         MVC   L+37(2),8(R4)
         PRNT  ,L,IMSERRPT
         MVC   L+10(12),=C'PROC OPTIONS'
         MVC   DWK(4),12(R4)
         MVC   DWK+4(4),=CL4' '
         BAL   R6,A24
         PRNT  ,L,IMSERRPT
         CLC   10(2,R4),=C'AI'
         BE    A01
         MVC   L+10(12),=C'SEGMENT NAME'
         B     A02
A01      MVC   L+10(6),=C'DDNAME'
A02      MVC   DWK(8),20(R4)
         BAL   R6,A24
         PRNT  ,L,IMSERRPT
         MVC   L+10(9),=C'LENGTH OF'
         PRNT  ,L,IMSERRPT
         MVC   L+13(17),=C'KEY FEEDBACK AREA'
         L     R5,28(R4)
         CVD   R5,DWK
         MVC   L+32(7),=X'4020206B202120'
         ED    L+32(7),DWK+5
         PRNT  ,L,IMSERRPT
         MVC   L+10(20),=C'# SENSITIVE SEGMENTS'
         L     R6,32(R4)
         CVD   R6,DWK
         MVC   L+35(4),=X'40202120'
         ED    L+35(4),DWK+6
         PRNT  ,L,IMSERRPT
* PRINT KEY FEEDBACK AREA
         MVC   L+1(17),=C'KEY FEEDBACK AREA'
         PRNT  3,L,IMSERRPT
         LA    R5,36(R4)
         L     R4,28(R4)
         BAL   R6,A08
         B     A02B                                                 DC
* PRINT DC TYPE PCB'S                                               DC
A02A     MVC   L+10(13),=C'TERMINAL NAME'                           DC
         PRNT  2,L,IMSERRPT                                         DC
         CP    LINO,=P'12'                                          DC
         BNE   A02B                                                 DC
         MVC   L+10(4),=C'DATE'                                     DC
         MVC   L+32(7),=X'4021204B202020'                           DC
         ED    L+32(7),13(R4)                                       DC
         PRNT  ,L,IMSERRPT                                          DC
         MVC   L+10(4),=C'TIME'                                     DC
         MVC   L+30(9),=X'4021204B20204B2020'                       DC
         ED    L+30(9),16(R4)                                       DC
         PRNT  ,L,IMSERRPT                                          DC
         MVC   L+10(13),=C'INPUT SEQ NO.'                           DC
         L     R5,20(R4)                                            DC
         CVD   R5,DWK                                               DC
         MVC   L+32(7),=X'4020206B202120'                           DC
         ED    L+32(7),DWK+5                                        DC
         PRNT  ,L,IMSERRPT                                          DC
         MVC   L+10(12),=C'MFS MOD NAME'                            DC
         MVC   DWK(8),24(R4)                                        DC
         BAL   R6,A24                                               DC
         PRNT  ,L,IMSERRPT                                          DC
A02B     TM    8(R2),128                                            DC
         BO    A07                                                  DC
* PRINT I/O AREA
         MVC   L+1(13),=C'I/O WORK AREA'
         PRNT  2,L,IMSERRPT
         AP    LINO,=P'2'
         L     R5,12(R2)
         LH    R4,4(R5)            OPTIMIZER  - 6(R5) FOR PL/I(F)
         L     R5,0(R5)
         BAL   R6,A08
* PRINT SEGMENT SEARCH ARGUMENTS IF SUPPLIED
         LA    R2,12(R2)
         SR    R3,R3
A03      TM    0(R2),128
         BO    A07
         LA    R2,4(R2)
         L     R5,0(R2)
         L     R5,0(R5)
         LA    R4,8
         LA    R6,8(R5)
         LA    R7,541              MAX LENGTH OF SSA (-8)
A04      CLI   0(R6),64
         BE    A06
         CLI   0(R6),C'('
         LA    R4,1(R4)
         LA    R6,1(R6)
         BCT   R7,*+8
         B     A06
         BNE   A04
A05      CLI   0(R6),C')'
         LA    R4,1(R4)
         LA    R6,1(R6)
         BCT   R7,*+8
         B     A06
         BNE   A05
A06      LA    R3,1(R3)
         CVD   R3,DWK
         MVC   L+1(23),=C'SEGMENT SEARCH ARGUMENT'
         MVC   L+24(4),=X'40202120'
         ED    L+24(4),DWK+6
         PRNT  2,L,IMSERRPT
         AP    LINO,=P'2'
         BAL   R6,A08
         B     A03
* TERMINATE PROGRAM
A07      TRUNC IMSERRPT
         EXIT  CLOSE=NO
* PRINT LINES OF CHARACTER DATA WITH TWO LINES OF HEXADECIMAL
A13      PRNT  ,L,IMSERRPT
         STM   R4,R5,DWK2
         SRL   R10,2
         BCT   R10,A10
         PRNT  ,L,IMSERRPT
         AP    LINO,=P'6'
         CP    LINO,=P'55'
         BL    A13A
         MVC   L+122(4),=C'PAGE'
         MVC   L+126(4),=X'40202120'
         ED    L+126(4),PAGNO
         AP    PAGNO,=P'1'
         PRNT  NP,L,IMSERRPT
         PRNT  ,L,IMSERRPT
         ZAP   LINO,=P'2'
A13A     EQU   *
         NC    DWK2(4),DWK2
         BZ    0(R6)
         MVC   DWK(8),DWK2
         B     A09
*
A14      MVI   L,C'0'
         C     R4,=F'8'
         BL    A15
         MVC   0(8,R7),0(R5)
         B     A12
A15      BCTR  R4,0
         EX    R4,MOVE1
         SR    R4,R4
         B     A13
*
A16      MVC   A23(4),A17
         MVI   L,C'0'
         B     A20
A17      SRL   R9,4
*
A18      MVC   A23(4),A19
         B     A20
A19      N     R9,=F'15'
*
A20      ST    R7,DWK2+8
         SR    R9,R9
         LA    R1,8
         C     R4,=F'8'
         BH    A21
         LR    R1,R4
A21      LR    R11,R1
A22      IC    R9,0(R5)
A23      SRL   R9,4
         STC   R9,0(R7)
         LA    R5,1(R5)
         LA    R7,1(R7)
         BCT   R1,A22
         L     R7,DWK2+8
         SR    R5,R11
         BCTR  R11,0
         EX    R11,TR
         C     R4,=F'8'
         BNL   A12
         SR    R4,R4
         B     A13
MOVE1    MVC   0(1,R7),0(R5)
TR       TR    0(1,R7),=C'0123456789ABCDEF'
*
A24      LA    R7,8
         LA    R8,L+31
         LA    R9,DWK
A25      CLI   0(R9),64
         BE    A26
         LA    R9,1(R9)
         BCT   R7,A25
A26      AR    R8,R7
         MVC   0(8,R8),DWK
         BR    R6
*
         LTORG
DWK      DS    D
DWK2     DS    3F
LINO     DC    PL2'0'
PAGNO    DC    PL2'1'
L        EQU   &LABEL2
MASK1    DC    X'0000FFF8'                                           DC
MASK2    DC    X'0000F0F0'                                           DC
MASK3    DC    X'00004040'                                           DC
         END   IMSERR
