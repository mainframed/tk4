 /****************************  VSNFIND   ******************************
 *                                                                     *
 * NAME - VSNFIND.                                                     *
 *                                                                     *
 * DATE OF LAST MODIFICATION - 1975.                                   *
 *                                                                     *
 * AUTHORS - M.ROBINSON.                                               *
 *                                                                     *
 * FUNCTION.                                                           *
 *         TO RETURN THE VOLUME SERIAL NUMBERS OCCUPIED BY A DATASET.  *
 *         TO THE PROGRAM USING THAT DATASET.                          *
 *                                                                     *
 * BASIC  FLOW.                                                        *
 *         ADDRESS X'10' IN MACHINE -> CVT                             *
 *         CVT ->TBCWORDS                                              *
 *         TCBWORDS -> TBC                                             *
 *         TCBWORDS -> TCB                                             *
 *         TCB + X'C' -> TIOT                                          *
 *         SEARCH TIOT FOR DDNAME,                                     *
 *         AND IN EACH UCB POINTED TO BY THE TIOT                      *
 *         LOCATE THE VOLUME SERIAL NUMBER.                            *
 *                                                                     *
 * ENTERED  FROM - PL/I CODE.                                          *
 *                                                                     *
 * INPUT.                                                              *
 *         DDNAME - CHARACTER, THE FIRST 8 CHARACTERS ARE USED         *
 *         AS THE DDNAME, BEING PADDED WITH BLANKS IF THE PARAMETER IS *
 *         LESS THAN 8 CHARACTERS LONG.                                *
 *                                                                     *
 * OUTPUT.                                                             *
 *         VOLSERS - CHARACTER, LONG ENOUGH TO HOLD ALL THE            *
 *         VOLUME SERIAL NUMBERS MOUNTED AT THE TIME.                  *
 *         NOTE THAT THE OUTPUT IS PLACED IN THE INPUT FIELD,          *
 *         WHICH SHOULD BE LONG ENOUGH TO HOLD ALL THE OUTPUT.         *
 *                                                                     *
 * EXTERNAL  REFERENCES - NONE.                                        *
 *                                                                     *
 * MACROS  REFERENCED - NONE.                                          *
 *                                                                     *
 * TABLES  REFERENCED.                                                 *
 *         CVT                                                         *
 *         TCBWORDS                                                    *
 *         TCB                                                         *
 *         TIOT                                                        *
 *         UCB                                                         *
 *                                                                     *
 * EXITS.                                                              *
 *         NONE                                                        *
 *                                                                     *
 * MESSAGES - NONE.                                                    *
 *                                                                     *
 * ERROR  HANDLING.                                                    *
 *         NONE                                                        *
 *         IF THE OUTPUT FIELD IS NOT LONG ENOUGH DATA WILL BE WRAPPED *
 *         AROUND, OVERWRITING EARLIER VOLUME SERIAL NUMBERS.          *
 *                                                                     *
 * ENVIRONMENT - TESTED PL/I 3.0, OS21.8D.                             *
 *                                                                     *
 * RESTRICTIONS - NONE.                                                *
 *                                                                     *
 *****************************   VSNFIND  *****************************/
* PROCESS MARGINS(2,72,1),NAME('VSNFIND');
 VSNFIND:  PROC(TAPE);
 DCL       TAPE  CHAR(*);
 DCL       ( I, J )  FIXED BIN(31) STATIC;
 DCL       ( P, Q, R )  PTR STATIC;
0DCL       @PTR  PTR STATIC;
 DCL       #PTR FIXED BIN(31) BASED(P);
           P = ADDR(@PTR);
 DCL       PTR  PTR BASED(@PTR);
0DCL       @D_PTR  PTR STATIC;
 DCL       #D_PTR  FIXED BIN(31) BASED(R);
           R = ADDR(@D_PTR);
 DCL       D_PTR  PTR BASED(@D_PTR);
0DCL       LGTH  FIXED BIN(31) STATIC INIT(0);
 DCL       1  STRUC  BASED(Q),
              2  CH3   CHAR(3),
              2  BYTE  CHAR(1);
           Q = ADDR(LGTH);
0DCL       1  TIOT  BASED(@PTR),
              2  TIOELNGH CHAR(1),
              2  CH3      CHAR(3),
              2  TIOEDDNM CHAR(8);
 DCL       EOT  BASED(@PTR) FIXED BIN(31);          /*  END-OF-TIOT  */
0DCL       1  UCB  BASED(@D_PTR),
              2  CH28     CHAR(28),
              2  SRTEVOL1 CHAR(6);
1          #PTR = 16;                 /*  ->  WORD  16  */
           @PTR = PTR;                /*  ->  CVT  */
           @PTR = PTR;                /*  ->  TCB WORDS  */
           #PTR = #PTR + 4;           /*  ->  CURRENT  TCB POINTER  */
           @PTR = PTR;                /*  ->  CURRENT  TCB  */
           #PTR = #PTR + 12;          /*  ->  TCBTIO FIELD  IN TIOT  */
           @PTR = PTR;                /*  ->  TIOT  */
           #PTR = #PTR + 24;          /*  ->  1ST  DD  ENTRY  */
           DO WHILE (EOT ^= 0);
              BYTE = TIOELNGH;
              IF TIOEDDNM = TAPE
              THEN GO TO FOUND;
              #PTR = #PTR + LGTH;
           END;
                                      /*  DD  NAME  NOT  FOUND  */
           TAPE = 'NOSUCH';
           RETURN;
 FOUND:
           TAPE = '';
           #D_PTR = #PTR + 16;        /*  ->  DD  ENTRY  IN  TIOT  */
           I = 1;
           J = 16;
 LOOP:
           @D_PTR = D_PTR;            /*  ->  UCB  */
           SUBSTR(TAPE,I,6) = SRTEVOL1;
           I = I + 12;
           IF I > LENGTH(TAPE)
           THEN I = 1;
           ELSE I = I - 6;
           J = J + 4;
           #D_PTR = #PTR + J;
           IF #PTR + LGTH > #D_PTR
           THEN GO TO LOOP;
           END;
