 /****************************   AREAD    ******************************
 *                                                                     *
 * NAME - AREAD (SUBROUTINE).                                          *
 *                                                                     *
 * DATE OF LAST MODIFICATION - ?.                                      *
 *                                                                     *
 * AUTHORS - ?.                                                        *
 *                                                                     *
 * FUNCTION.                                                           *
 *         TO READ TAPES FROM THE 1900 SERIES COMPUTERS AND ANALYZE    *
 *         THE VOL1 HEADER RECORD ON THOSE TAPES WHICH HAVE 81 BYTE    *
 *         HEADER LABELS.                                              *
 *                                                                     *
 * ENTERED  FROM - PL/1 PROGRAMS.                                      *
 *                                                                     *
 * INPUT.                                                              *
 *         FILE   - THE PL/1 FILE TO BE READ;                          *
 *         LAB    - A LABEL TO WHICH THE ROUTINE WILL RETURN WHEN THE  *
 *                  END OF THE LAST REEL IS REACHED.                   *
 *                                                                     *
 * OUTPUT.                                                             *
 *         PTR    - A POINTER TO THE RECORD IN THE BUFFER;             *
 *         SERIAL - A VARYING LENGTH CHARACTER STRING SET BY THE FIRST *
 *                  CALL TO THE SERIAL NUMBER OF THE FIRST VOLUME OF   *
 *                  THE DATA SET, AND BY THE LAST CALL TO THE          *
 *                  CONCATENATED SERIAL NUMBERS OF ALL THE VOLUMES OF  *
 *                  THE DATA SET;                                      *
 *         DSN    - A VARYING LENGTH CHARACTER STRING SET BY THE FIRST *
 *                  CALL TO THE DATA SET NAME (WHICH IS LEFT-JUSTIFIED *
 *                  AND BLANK PADDED IF LESS THAN 17 CHARACTERS, OR    *
 *                  RIGHT-JUSTIFIED AND TRUNCATED ON THE LEFT IF MORE  *
 *                  THAN 17 CHARACTERS).                               *
 *                                                                     *
 * EXAMPLE.                                                            *
 *         ...                                                         *
 *         //AHDR1  DD DISP=OLD,UNIT=2400-3,LABEL=(1,BLP),VOL=SER=1    *
 *         //ADATA1 DD DISP=OLD,UNIT=2400-3,LABEL=(2,BLP),VOL=SER=1    *
 *         //ATRL1  DD DISP=OLD,UNIT=2400-3,LABEL=(3,BLP),VOL=SER=1    *
 *         //AHDR2  DD DISP=OLD,UNIT=2400-3,LABEL=(1,BLP),VOL=SER=2    *
 *         //ADATA2 DD DISP=OLD,UNIT=2400-3,LABEL=(2,BLP),VOL=SER=2    *
 *         //ATRL2  DD DISP=OLD,UNIT=2400-3,LABEL=(3,BLP),VOL=SER=2    *
 *         ...                                                         *
 *         ...                                                         *
 *          DCL FILE FILE RECORD INPUT;                                *
 *          DCL PTR PTR;                                               *
 *          DCL LAB LABEL INIT(NOMORE);                                *
 *          DCL SERIAL CHAR(2) VAR;                                    *
 *          DCL DSN CHAR(17) VAR;                                      *
 *          DCL AREAD ENTRY;                                           *
 *         ...                                                         *
 *          CALL AREAD(FILE,PTR,LAB,SERIAL,DSN);                       *
 *         ...                                                         *
 *          NOMORE:                                                    *
 *         ...                                                         *
 *                                                                     *
 *         N.B. THE AHDR AND ADATA DD CARDS MUST BE SUPPLIED, THE ATRL *
 *         DD CARD NEED NOT BE.  THE DD NAMES MUST BE OF THE FORMAT:   *
 *                      AXXXN                                          *
 *              WHERE A   IS CONSTANT,                                 *
 *                    XXX IS EITHER 'HDR', 'DATA' OR 'TRL',            *
 *                    N   IS THE REEL NUMBER.                          *
 *                                                                     *
 * EXTERNAL  REFERENCES.                                               *
 *         NONE.                                                       *
 *                                                                     *
 * MACROS  REFERENCED.                                                 *
 *         NONE.                                                       *
 *                                                                     *
 * TABLES  REFERENCED - NONE.                                          *
 *                                                                     *
 * EXITS.                                                              *
 *         RETURNS TO STATEMENT FOLLOWING 'CALL' IN CALLING PROGRAM,   *
 *         EXCEPT FOR THE CASE IN WHICH THE END OF THE LAST REEL OF    *
 *         THE DATA SET IS REACHED, WHEN IT RETURNS TO THE LABEL       *
 *         PASSED AS A PARAMETER.                                      *
 *                                                                     *
 * MESSAGES.                                                           *
 *         IF THE SERIAL NUMBER OF THE MOUNTED TAPE IS NOT THE SAME AS *
 *         THE ONE SPECIFIED IN THE JCL, THE OPERATOR WILL BE          *
 *         REQUESTED TO MOUNT THE TAPE SPECIFIED IN THE JCL OR CANCEL  *
 *         THE JOB.                                                    *
 *                                                                     *
 * ERROR  HANDLING.                                                    *
 *         NONE.                                                       *
 *                                                                     *
 * ENVIRONMENT - PL/1 PROGRAMS.                                        *
 *                                                                     *
 * RESTRICTIONS.                                                       *
 *         NONE.                                                       *
 *                                                                     *
 *****************************   AREAD    *****************************/
1AREAD:    PROC(FILE, PTR, LAB, SERIALS, DSN);
 DCL       FILE FILE, PTR PTR, LAB LABEL;
 DCL       SERIALS CHAR(*) VAR,   DSN CHAR(*) VAR;
 DCL       SERNOS  STATIC  CHAR(100)  VAR  INIT('');
 DCL       OPEN   BIT(1)  STATIC  INIT('0'B);
 DCL       VSN   ENTRY(CHAR(8),CHAR(6));
 DCL       1  D   STATIC,
              2  CH    CHAR(5)  INIT('ADATA'),
              2  REEL  CHAR(3)  INIT('');
 DCL       DATA   CHAR(8)  DEF D;
0DCL       REEL#  CHAR(2) STATIC INIT('00');
 DCL       #REEL  PIC'99' DEF REEL#;
-
-          ON UNDF(FILE)  BEGIN;
              DISPLAY('NO ' ×× DATA ×× ' DD CARD.');
              SIGNAL ERROR;
           END;
0          ON ENDFILE(FILE) BEGIN;
              CLOSE FILE(FILE);
              CALL OPENER;
              GO TO RD;
           END;
-
-RD:
           IF OPEN
           THEN READ FILE(FILE) SET(PTR);
           ELSE DO;
              SERNOS = '';
              CALL OPENER;
              SERIALS = SERNOS;
              GO TO RD;
           END;
           RETURN;
1OPENER:   PROC;
 DCL       (HEAD       )   FILE RECORD INPUT INTERNAL
                  ENV(F RECSIZE(81) BLKSIZE(81) BUFFERS(1));
 /*  PL/I(F)      ENV(F ( 81 ) BUFFERS(1));            PL/I(F) */
 DCL       REPLY   CHAR(2)  STATIC;
 DCL       VOL1   CHAR(81)  STATIC;
 DCL       HDR1   CHAR(81)  STATIC;
 DCL       HDR2   CHAR(81)  STATIC;
0DCL       ( BLKP POS(6), RECP POS(11) ) PIC'ZZZZZ' DEF HDR2;
 DCL       ( BLKB, RECB )  FIXED BIN(31) STATIC;
 DCL       DDNAME CHAR(8)  STATIC;
 DCL       TAP   CHAR(6)  STATIC;
0DCL       1  H   STATIC,
              2  CH    CHAR(4)  INIT('AHDR'),
              2  REEL  CHAR(4)  INIT('');
 DCL       HEADER   CHAR(8)  DEF H;
-
-          ON UNDF(HEAD) BEGIN;
              SERIALS = SERNOS;
              GO TO LAB;
           END;
0          ON ENDFILE(HEAD) BEGIN;
              CLOSE FILE(HEAD);
              DISPLAY ('HEADER  READ  ERROR.');
              GO TO D2;
           END;
1
0          #REEL = #REEL + 1;
           IF #REEL > 9
           THEN H.REEL,D.REEL = REEL#;
           ELSE H.REEL,D.REEL = SUBSTR(REEL#,2,1);
0START:
           DDNAME = HEADER;
           CALL VSN(DDNAME,TAP);
           IF TAP = LOW(6)
            × TAP = '000000'
           THEN SIGNAL UNDF(HEAD);
           OPEN FILE(HEAD) TITLE(HEADER);
           READ FILE(HEAD) INTO (VOL1);
           IF SUBSTR(VOL1,5,6) ^= TAP
           THEN DO;
              DISPLAY('INCORRECT  VOLUME  MOUNTED :- MOUNT ' ×× TAP);
              SIGNAL ENDFILE(HEAD);
           END;
0          IF ^OPEN
           THEN DO;
              READ FILE(HEAD) INTO (HDR1);
              DSN = SUBSTR(HDR1,5,17);
              DSN = SUBSTR(DSN,1,INDEX(DSN,' ') - 1);
              READ FILE(HEAD) INTO(HDR2);
              BLKB = BLKP;
              RECB = RECP;
 /*           CALL  RECSIZE (FILE,BLKB,RECB);                     OPT*/
           END;
           CLOSE FILE(HEAD);
0          DDNAME = DATA;
           CALL VSN(DDNAME,TAP);
           OPEN FILE(FILE) TITLE(DATA);
           IF SUBSTR(VOL1,5,6) ^= TAP
           THEN DO;
              CLOSE FILE(FILE);
              DISPLAY('INCORRECT  VOLUME  MOUNTED :- MOUNT ' ×× TAP);
              SIGNAL ENDFILE(HEAD);
           END;
0          OPEN = '1'B;
0          IF LENGTH(SERNOS) < 91
           THEN SERNOS = SERNOS ×× SUBSTR(VOL1,5,6);
           RETURN;
1D2:       DISPLAY('CANCEL  JOB  OR  MOUNT  CORRECT  TAPE  &  REPLY'
                ×× '  GO.') REPLY(REPLY);
           IF REPLY ^= 'GO'
           THEN DO;
              DISPLAY('REPLY  WAS  NOT  ''GO''');
              GO TO D2;
           END;
           GO TO START;
           END OPENER;
           END;
