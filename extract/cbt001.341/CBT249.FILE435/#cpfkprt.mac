***********************************************************************
*                                                                     *
*              INTERNAL ROUTINE 'CPFKPRT' --- PRINT QUEUED LINES      *
*                                                                     *
***********************************************************************
         SPACE
*        ON ENTRY --  (R1) -> CPFKFN BLOCK
*
*        ON EXIT  --  CC=BOMIT   IF NOTHING LEFT TO DO
*                     CC=BPOS    IF BLOCK DONE
*                     CC=BNEG    IF FIRST BLOCK NOT DONE
         SPACE
CPFKPRT $ENTER ,
         LR    X1,R1               INPUT PARAMETER
         USING CPFKFN,X1           AND TELL THE ASSEMBLER
         L     X2,CPFKFNA          FIRST QUEUED LINE
         LTR   X2,X2               ANYTHING THERE .Q
         BZ    CFPRT02             BRANCH IF NOTHING
         USING FNQELEM,X2          LINE LOOKS SO
        $IFON  FNQFLAG,FNQSSET,CFPRT01  IF BUT ONE LINE, ALLOW IT
        $IFOFF FNQSKSP,SKSPCND,CFPRT01  BRANCH IF NOT CONDITIONAL
         XC    SKSP,SKSP           KILL ANY OUTSTANDING SPACE
         DROP  X2
CFPRT01  DS    0H
        $CALL  PRSKSPC             PUT CONDITIONAL SPACE FIRST
         SPACE
CFPRT02  DS    0H
         XC    RMTRIG,RMTRIG       DISABLE REMOTE TRIGGERS WITHIN
        $ON    CPFKFNG,CPFKSKIP    LEADING SKIP SWITCH
         SR    X3,X3               KEEP NO FIRST POINTER
        $IFOFF CPFKFNG,CPFKKEEP,CFPRT03 BRANCH IF DON'T KEEP
         L     X3,CPFKFNA          ADDR FIRST QUEUED LINE
         SPACE
CFPRT03  DS    0H
         L     X2,CPFKFNA          ADDR OF NEXT QUEUED LINE
         LTR   X2,X2               ANYTHING THERE .Q
         BZ    CFPRT14             BRANCH IF NOT
         USING FNQELEM,X2          AND TELL THE ASSEMBLER
        $IFOFF FNQFLAG,FNQTC,CFPRT04    BRANCH IF NOT TC ENTRY
         LA    R1,FNQTEXT          POINT TO USER DATA
         LNR   R1,R1               ENTER 'FIFO'
         LH    TEMP,FNQRDW         LENGTH OF RDW AND DATA
         S     TEMP,F5             LENGTH-1 OF DATA
         BM    ABCFP03             BRANCH IF NOTHING
         L     R0,DHNUMTC          CURRENT TABLE OF CONTENTS NUMBER
         LH    COUNT,FNQNUMTC      FORMER TC NUMBER WHEN DEFINED
         ST    COUNT,DHNUMTC       SET FOR ADD
        $CALL  HIDTCAD             ENTER FOR TABLE OF CONTENTS
         ST    R0,DHNUMTC          RESTORE TABLE OF CONTENTS NUMBER
         MVC   CPFKFNA,FNQFCHN     POINT TO NEXT BUFFERED LINE
         B     CFPRT10             AND CONTINUE
         SPACE
CFPRT04  DS    0H
        $IFOFF CPFKFNG,CPFKSKIP,CFPRT05 BRANCH IF NOT FIRST SKIP
         LH    COUNT,PLZ           PAGE LENGTH
         SH    COUNT,PLCT          LESS LINES LEFT
         CH    COUNT,TOPMRG        AT TOP OF PAGE .Q
         BH    CFPRT05             BRANCH IF NOT
         CLI   ICOLFLG,ICOLMC      IN MULTI-COLUMN MODE .Q
         BE    CFPRT05             BRANCH IF YES
        $IFON  FNQFLAG,FNQSSET,CFPRT05  BRANCH IF SKIP/SPACE SAVED
        $IFON  FNQSKSP,SKSPSK,CFPRT09   BRANCH IF A SKIP
         SPACE
CFPRT05  DS    0H
        $OFF   CPFKFNG,CPFKSKIP    NO LONGER THE FIRST SKIP
        $IFON  FNQFLAG,FNQOVLY,CFPRT06  BRANCH IF OVERLAY LINE
         LH    COUNT,PLCT          ACCOUNT FOR LINE WE'RE ABOUT
         BCTR  COUNT,0             TO PRINT
         LH    R1,BMMRG            BOTTOM MARGIN
         AH    R1,FNSEP            PLUS FOOTNOTE MARGIN
         CR    COUNT,R1            BELOW BOTTOM MARGIN .Q
         BL    CFPRT16             IF YES, DONE THIS PAGE
         STH   COUNT,PLCT          NO, SAVE UPDATED COUNT LEFT
         SPACE
CFPRT06  DS    0H
         LH    R1,FNQRDW           LOAD LENGTH RDW/TEXT
         S     R1,F4               LESS LENGTH OF RDW
         BM    ABCFP01             BAD TROUBLE IF NEGATIVE
         CLI   ICOLFLG,ICOLMC      DESTINED FOR MULTI-COLUMN .Q
         BNE   CFPRT07             BRANCH IF NOT
         LA    R0,FNQELEM          ADDRESS OF RECORD
         ST    R0,MCFNQAD          SAVE AWAY FOR LATER
CFPRT07  DS    0H
         LA    R0,FNQRDW           POINT TO OUTPUT RECORD
        $ON    SWITCHS,OOSWS       DISABLE OUTPUT OVERLAY
        $IFOFF FNQFLAG,FNQOVLY,CFPRT08  BRANCH IF NOT OVERLAY LINE
        $ON    SWITCHS,FOVLY       INDICATE OVERLAY
CFPRT08  DS    0H
        $CALL  IOPRINT             CAUSE LINE TO BE OUTPUT
        $OFF   SWITCHS,OOSWS       RE-ENABLE OUTPUT OVERLAY
        $OFF   SWITCHS,FOVLY       TURN OFF PRINTER OVERLAY
         SPACE
CFPRT09  DS    0H
        $IFON  FNQFLAG,FNQOVLY,CFPRT10  BRANCH IF OVERLAY LINE
         LTR   X3,X3               KEEP DATA FOR LATER .Q
         BNZ   CFPRT10             BRANCH IF YES
         L     COUNT,CPFKFNC       CURRENT NUMBER OF BUFFERED LINES
         S     COUNT,F1            DECREMENT BY ONE
         BM    ABCFP02             GONE WRONG IF NEGATIVE
         ST    COUNT,CPFKFNC       UPDATE QUEUED LINE COUNT
CFPRT10  DS    0H
         SR    COUNT,COUNT         ASSUME NOT EOB RECORD
        $IFOFF FNQFLAG,FNQEOB,CFPRT11   BRANCH IF CORRECT
         LH    COUNT,FNQNUMOP      GET USER QUALIFICATION
         LA    COUNT,1(,COUNT)     USER QUALIFICATION PLUS ONE
CFPRT11  DS    0H
        $IFOFF FNQFLAG,FNQSSET,CFPRT12  BRANCH IF NO SKIP/SPACE
         XC    SKSP,SKSP           CLEAR SPACE/SKIP
         MVC   SKSPFLG2,FNQSKSP+SKSPFLG2-SKSP     RESTORE TYPE
         MVC   SKSPCCNT,FNQSKSP+SKSPCCNT-SKSP     RESTORE COUNT
CFPRT12  DS    0H
         MVC   CPFKFNA,FNQFCHN     POINT TO NEXT BUFFERED LINE
         LTR   X3,X3               DO WE KEEP THE DATA LINES .Q
         BNZ   CFPRT13             BRANCH IF YES
         LH    R1,FNQRDW           LENGTH OF DATA AND RDW
         LA    R1,FNQOVHD(,R1)     PLUS PREFIX OVERHEAD
         LA    R0,FNQELEM          POINT TO AREA
        $CALL  FREECELL            FREE THIS ENTRY
         SPACE
CFPRT13  DS    0H
         S     COUNT,F1            USER QUALIFICATION RESTORED
         BM    CFPRT03             IF MINUS, NOT EOB
         LA    R1,CPFKFN           POINT TO ANCHOR BLOCK
        $CALL  CPFKNXT             LOOK INTO NEXT BLOCK
         BC    BOMIT,CFPRT14       RETURN IF THERE IS NO MORE
        $IFON  FNQFLAG,FNQONE,CFPRT15   BRANCH IF ONE TIME PRINT
         SPACE
         LH    TEMP,PLCT           COUNT OF LINES LEFT ON PAGE
         SR    TEMP,COUNT          LESS LENGTH+USER QUALIFICATION
         BM    CFPRT16             BRANCH IF WON'T FIT
         LH    R1,BMMRG            BOTTOM MARGIN
         AH    R1,FNSEP            PLUS FOOTNOTE MARGIN
         CR    TEMP,R1             BELOW BOTTOM MARGIN .Q
         BL    CFPRT16             BRANCH IF WON'T FIT
         B     CFPRT03             AND CONTINUE PRINTING
         DROP  X2
         SPACE
CFPRT14  DS    0H
         LA    TEMP,*+4            POINT TO FINAL RESULT
        $CC    OMIT                NOTHING LEFT TO DO
         B     CFPRT17             TAKE COMMON EXIT
CFPRT15  DS    0H
         LA    TEMP,*+4            POINT TO FINAL RESULT
        $CC    POS                 IF BLOCK IS DONE
         B     CFPRT17             TAKE COMMON EXIT
CFPRT16  DS    0H
         LA    TEMP,*+4            POINT TO FINAL RESULT
        $CC    NEG                 IF FIRST BLOCK NOT DONE
         B     CFPRT17             TAKE COMMON EXIT
         SPACE
CFPRT17  DS    0H
         LTR   X3,X3               KEEP DATA FOR LATER .Q
         BZ    CFPRT18             BRANCH IF NOT
         ST    X3,CPFKFNA          RESTORE FIRST QUEUED LINE ADDR
         DROP  X1
         SPACE
CFPRT18  DS    0H
        $CALL  RMNEXT              REENABLE AUTO REMOTE IF PRESENT
         EX    R0,0(,TEMP)         SET RETURN COND CODE
        $EXIT  RC=0                RETURN TO CALLER
         SPACE
ABCFP01  DS    0H                  NULL LINE SAVED FOR PRINT
ABCFP02  DS    0H                  NEGATIVE LINES LEFT IN KEEP
ABCFP03  DS    0H                  NULL TABLE OF CONTENTS RECORD
        $LOGERR 1007               ERROR
