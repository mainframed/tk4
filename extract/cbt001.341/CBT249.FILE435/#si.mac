***********************************************************************
*                                                                     *
*              .SI (SIGNAL REMOTE) --- CONTROL                        *
*                                                                     *
***********************************************************************
         SPACE
SI      $ENTER ,
        $CALL  SITST               GET AND TEST FIRST ARG
         BC    BNEG,SI01           ERROR IF TOO SMALL
         BC    BPOS,SI02           ERROR IF TOO BIG
        $CALL  SIS                 DO THE WORK
         B     SI03                AND GO TO COMMON EXIT
         SPACE
SI01     DS    0H
         MVI   EFLAG014,ERRSET     TOO SMALL
         B     SI03                AND GO TO COMMON EXIT
SI02     DS    0H
         MVI   EFLAG013,ERRSET     TOO BIG
SI03     DS    0H
        $EXIT  RC=0                RETURN TO CALLER
         SPACE
SIS     $ENTER ,
        $CALL  APS                 GET AND SET ANY ARGS
         BC    BNEG,SIS01          BRANCH IF ARGUMENT ERRORS
         SR    R1,R1               IDENTIFIER ALREADY ENTERED
         BCTR  R1,0                SO NEGATIVE PARM
         SPACE
         XC    APIMFLAG,APIMFLAG   CLEAR FLAGS
        $ON    APIMFLAG,(IO$RM,IO$UEOF) THIS IS WHAT I WANT
        $CALL  RMIMBED             DO THE REMOTE IMBED
        $CALL  RMNEXT              SET UP FOR NEXT AUTO REMOTE, IF ANY
         SPACE
SIS01    DS    0H
        $EXIT  RC=0                AND CONTINUE
         SPACE 2
***********************************************************************
*                                                                     *
*              SIGNAL NAME TEST --- SUBROUTINE                        *
*                                                                     *
***********************************************************************
         SPACE
*        ON EXIT  --  CC = BNEG IF ARG TOO SMALL
*                        = BPOS IF ARG TOO BIG
*                        = BDNO IF NOT FOUND
*                        = BOMIT IF SUCCESS
         SPACE
SITST   $ENTER ,
        $CALL  GETNUM              GET FIRST ARGUMENT
         BC    BOMIT,SIT04         BRANCH IF NONE FOUND
         BC    BDNO,SIT01          BRANCH IF ERROR, TRY AGAIN
         LTR   COUNT,COUNT         TEST RESULT
         BNP   SIT09               ERROR IF TOO SMALL
         C     COUNT,F32767        TEST AGAIN
         BH    SIT10               ERROR IF TOO BIG
         B     SIT05               VALID LINE NUMBER
         SPACE
SIT01    DS    0H
         ST    COUNT,ARGSTART      RESCAN FOR STRING ARG
        $ON    SWITCHS,FNOCASE     NO CASE CONVERSION
        $CALL  GETARG              GET IDENTIFIER
         LTR   TEMP,TEMP           LENGTH OF ONE .Q
         BNZ   SIT02               BRANCH IF NOT
         CLI   0(COUNT),C'*'       DEFAULT FIRST ARG .Q
         BE    SIT04               BRANCH IF YES
SIT02    DS    0H
         LA    R0,L'APIMNAME-1     MAX LENGTH-1 ALLOWED
         CR    TEMP,R0             CHECK IT
         BNH   SIT03               BRANCH IF LENGTH OK
         LR    TEMP,R0             MAX-1 WILL DO
SIT03    DS    0H
         MVC   APIMNAME,BLANKS     BLANK REMOTE NAME
         EX    TEMP,SINAMVC        MOVE IN NAME
         OC    APIMNAME,BLANKS     CONVERT NAME TO UPPER CASE
         B     SIT06               AND CONTINUE
SINAMVC  OC    APIMNAME(*-*),0(COUNT)  MOVE UPPER SIGNAL IDENTIFIER
         SPACE
SIT04    DS    0H
         LH    COUNT,TOPMRG        DEFAULT FIRST ARG
         LA    COUNT,1(,COUNT)     BUMP TO TOP MARGIN PLUS ONE
SIT05    DS    0H
         XC    APIMNAME,APIMNAME   ZERO NAME FIELD
         ST    COUNT,APIMNAME+4    ADD LINE NUMBER
         SPACE
SIT06    DS    0H
         L     X1,RMQANCH          START OF REMOTE QUEUE
         USING RMQD,X1             TELL THE ASSEMBLER
SIT07    DS    0H
         LTR   X1,X1               AT THE END .Q
         BZ    SIT11               BRANCH OUT IF YES
        $IFON  RMQFLAG,RMQDEL,SIT08     BRANCH IF REMOTE DELETED
         CLC   RMQNAME,APIMNAME    EQUAL IDENTIFIER .Q
         BH    SIT11               NOT FOUND IF HIGH
         BE    SIT12               FOUND IF EQUAL
SIT08    DS    0H
         L     X1,RMQCHN           CHAIN TO NEXT REMOTE HEADER
         B     SIT07               AROUND AGAIN
         DROP  X1
         SPACE
SIT09    DS    0H
        $CC    NEG                 TOO SMALL
         B     SIT13               GO TO RETURN
SIT10    DS    0H
        $CC    POS                 TOO BIG
         B     SIT13               GO TO RETURN
SIT11    DS    0H
        $CC    DNO                 NOT FOUND
         B     SIT13               GO TO RETURN
SIT12    DS    0H
        $CC    OMIT                SUCCESS
SIT13    DS    0H
        $EXIT  RC=0                RESTORE CALLER'S REGS
