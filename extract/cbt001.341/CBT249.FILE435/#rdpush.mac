***********************************************************************
*                                                                     *
*  THE PURPOSE OF THIS ROUTINE IS TO ADD A NEW FILE TO THE            *
*  INPUT STACK                                                        *
*                                                                     *
***********************************************************************
         SPACE
RDPUSH  $ENTER ,
         SPACE
         USING IOBLOK,RPARMPTR     POINT TO PARM BLOCK
         SPACE
         LH    R1,FILNEST          GET CURRENT FILE NEST LEVEL
         LA    R1,1(,R1)           BUMP BY ONE
         STH   R1,FILNEST          UPDATE WITH NEW NEST LEVEL
         SPACE
         LR    RA,RFILE            SAVE PTR TO CURRENT FILBLOCK
         L     RDD,NEWDD           GET POINTER TO NEW DDBLOCK
         SPACE
         LA    R1,FILBLKLN         FILBLOCK PREFACE LENGTH
        $IFOFF IOFLAG,IO$RM,PDOWN01     BRANCH IF NOT A REMOTE
         LA    R1,RMSLEN(,R1)      LENGTH OF REMOTE SAVE PORTION
PDOWN01  DS    0H
         LR    R0,RPARMPTR         RETAIN PARM POINTER
        $CALL  GETCELL             GET AREA FOR NEW FILBLOCK
         LR    RFILE,TEMP          POINT TO NEW FILBLOCK
         LR    RPARMPTR,R0         RESTORE PARM POINTER
         BC    BNEG,PDOWN024       BRANCH IF FAILED
         SPACE
*   INITIALIZE THE NEW FILBLOCK                                       *
         SPACE
         XC    FILBLOCK(FILBLKLN),FILBLOCK   CLEAR PREFACE
         ST    RA,FILPREV          LINK BLOCK ONTO CHAIN
         ST    RDD,FILDDADR        POINT TO DDBLOCK
         MVC   FILTTRK,BLDLTTRK    INITIALIZE 'FIND' DATA (USED FOR PDS
         MVC   FILLANCH,LBANCH     SAVE LABEL BLOCK ANCHOR
         XC    LBANCH,LBANCH       AND CLEAR CURRENT
         MVC   LBGOTO,IOGOTO       SET IMPLIED GOTO
         MVC   FILFLAG,IOFLAG      INITIALIZE FLAGS
         MVC   FILMAX,IOMAX        GET LAST RECORD TO BE READ
         MVC   FILMIN,IOMIN        GET FIRST RECORD TO BE READ
         MVC   FILDDNAM,DDLDDNAM   SAVE LOGICAL DDNAME
         MVC   FILMEMNM,BLDLNAME   SAVE MEMBER NAME (IF PRESENT)
         MVC   FILNUMBR,=C'00000000'    INITIALIZE DECIMAL ITEM NUMBER
         MVC   FILIFSTK,IFSTAK     SAVE IF STACK INFO
         XC    IFSTAK,IFSTAK       CLEAR CURRENT INFO
         L     R1,ASRLCL           LOCAL SYMBOL DICT
         USING SRAREA,R1           TELL THE ASSEMBLER
         MVC   FILSRAR(SRALEN),SRAREA   SAVE LOCAL SYMBOL DICT
         XC    SRAREA(SRALEN),SRAREA    PURGE WORK LOCAL DICT
         DROP  R1
         SPACE
         MVC   FILPEANC,PEANCH     SAVE PERFORM BUFFER ANCHOR
         XC    PEANCH,PEANCH       CLEAR CURRENT
         LTR   RA,RA               ANY PREVIOUS FILEBLOCK .Q
         BZ    PDOWN02             LEAVE HIDDEN BUFFER IF NOT
         MVC   FILHIDB,HIDBANCH    SAVE HIDDEN BUFFER ANCHOR
         XC    HIDBANCH,HIDBANCH   CLEAR ANCHOR
        $OFF   SWITCHS,HIDBSWS     NOTHING TO LOOK AT
         SPACE
PDOWN02  DS    0H
        $IFOFF FILFLAG,FIL$RM,PDOWN07   BRANCH IF NOT REMOTE
         LH    R1,RMNEST           GET CURRENT REMOTE NEST LEVEL
         LA    R1,1(,R1)           BUMP BY ONE
         STH   R1,RMNEST           NEW NESTED REMOTE LEVEL
        $IFOFF IOFLAG,IO$AURM,PDOWN05   BRANCH IF NOT AUTOMATIC REMOTE
         LH    R1,RMNMNEST         AUTOMATIC REMOTE NEST LEVEL
         LA    R1,1(,R1)           BUMP BY ONE
         STH   R1,RMNMNEST         NEW NESTED AUTOMATIC REMOTE LEVEL
PDOWN05  DS    0H
        $ON    FILFLAG,(FIL$NULL,FIL$NONM)   REMOTE FILE ATTRIBUTES
         LA    RB,FILBLOCK+FILBLKLN     END OF FILBLOCK
         USING RMSAVE,RB           PUT REST HERE
         MVC   RMSREG(4*16),RMIMSAV     SAVE IMBEDDER'S REGISTERS
         XC    RMIMSAV(4*16),RMIMSAV    AND CLEAR IT
         MVC   RMSOLD1,FMTOLD1     SAVE SWITCHES
         MVC   RMSOLD2,FMTOLD2     SAVE PAGE DESCRIPTORS
         MVC   RMSICOL,ICOLFLG     SAVE MULTIPLE COLUMN FORMAT
         MVC   RMSARGS,ARGSTART    SAVE CURRENT BUFFER POINTERS
         MVC   RMSBUFF2,BUFF2LGZ   SAVE CURRENT BUFFER
         MVC   RMSBUFF1,BUFF1LGZ   SAVE BUFFER ONE
         MVC   RMSOC,OCCNT         SAVE OVERLAY CHARACTER STATUS
         SPACE
         L     RRMQ,NEWRMQ         ADDRESS OF REMOTE QUEUE START
         ST    RRMQ,FILRMQAD       SAVE FILE DESCRIPTOR BLOCK ADDR
         LTR   RRMQ,RRMQ           DID ALLOCATION SUCCEED .Q
         BZ    PDOWN07             BRANCH IF NOT
         USING RMQD,RRMQ           TELL THE ASSEMBLER
         MVC   FILBUFAD,RMQAD      FIRST SAVED TEXT LINE
         MVC   FILH1AD,RMQAD       OR FIRST LEVEL HEADER
         MVC   FILRMEXT,RMQEXIT    READ EXIT ADDRESS (IF ANY)
         L     R1,RMQUSE           REMOTE USE COUNT
         A     R1,F1               PLUS ONE
         ST    R1,RMQUSE           UPDATE REMOTE USE COUNT
         MVC   FILRMFLG,RMQFLAG    SAVE REMOTE FLAG TOO
         MVC   FILENDBL,F1         END OF BLOCK GT CURRENT PTR (0)
        $ON    SWITCHS,FRMKP       ASSUME ENVIRONMENT TO BE KEPT
        $IFOFF FILFLAG,FIL$SYRM,PDOWN06 BRANCH IF NOT SYSTEM REMOTE
         NI    FILRMFLG,FF-RMQKEEP AND ENFORCE SAVING ENVIRONMENT
         B     PDOWN07             BUT NOT TOO MUCH
PDOWN06  DS    0H
         TM    FILRMFLG,RMQKEEP    IS ENVIRONMENT TO BE KEPT .Q
         BO    PDOWN07             BRANCH IF YES
        $OFF   SWITCHS,FRMKP       DO NOT KEEP ENVIRONMENT UNCHANGED
         XC    OLDCOUNT,OLDCOUNT   CLEAR LAST LINE
         LH    R1,INDL             RESET INDENT, UNDENT AND OFFSET
         AH    R1,OFFLI            ..
         STH   R1,INDL             ..
         STH   R1,RMARGIN          ..
         SR    R1,R1               ZERO WORK REGISTER
         STH   R1,UNDL             ZERO UNDENT VALUE
         STH   R1,OFFLI            ZERO OFFSET VALUE
         STH   R1,CECNT            ZERO CENTER VALUE
         STH   R1,LICNT            ZERO LITERAL VALUE
         STH   R1,OCCNT            CLEAR OVERLAY CHARACTER
         MVC   OCCHAR,OCCHAR+1     AND RESET CHARACTER
        $CALL  TBCOPY              DUPLICATE USER TAB CHAIN
         MVC   RMSTABI,TBIND       SAVE USER TAB CHARACTER
         MVC   RMSTABA,TBANCHR     SAVE CURRENT TAB
         ST    R1,TBANCHR          SAVE COPY ANCHOR
         DROP  RB
         DROP  RRMQ
         SPACE
PDOWN07  DS    0H
        $ON    FILFLAG,FIL$FIND    SIGNAL REPOSITIONING NECESSARY
        $CALL  RDGBUFF             GET A BUFFER FOR THE FILE
         SPACE
         XC    COMFILIT,COMFILIT   INITIALIZE RECORD COUNT
         MVC   COMFILNM,FILDDNAM   SET FILE NAME
         MVC   COMMEMNM,FILMEMNM   SET MEMBER NAME
         MVC   COMFILNO,FILNUMBR   SET DECIMAL ITEM NUMBER
         SPACE
PDOWN08  DS    0H
         STM   RFILE,RDD,CURFILE   UPDATE CURRENT FILE POINTERS
         MVC   NEWDD,F0            CLEAR NEXT DD BLOCK POINTER
         SPACE
        $RESTOR KEEP=(RFILE,RDD)   RESTORE CALLER'S REGISTERS
         BR    RETURN              RETURN TO CALLER
         SPACE
PDOWN024 DS    0H
         MVI   EFLAG024,ERRSET     NO STORAGE FOR FILBLOCK
         SR    RFILE,RFILE         ZERO POINTER
         B     PDOWN08             GO TO RETURN
         SPACE
         DROP  RPARMPTR
