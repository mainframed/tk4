***********************************************************************
*                                                                     *
*        INTERNAL FUNCTION 'SYMSR' -- LOCATE SET REFERENCE NAME       *
*                                                                     *
***********************************************************************
         SPACE
*        TO ENTER:   $CALL  SYMSR                                     *
*                                                                     *
*        CC=BOMIT   SYMBOL NOT FOUND (COUNT=FREE SLOT×0)              *
*        CC=BPOS    SYMBOL FOUND     (COUNT=ADDR)                     *
*        CC=BNEG    SYMBOL(0) FOUND  (COUNT=ADDR)                     *
*        CC=BDNO    SYMBOL(0) NOT FOUND (COUNT=FREE SLOT×0)           *
         SPACE
SYMSR   $ENTER ,
         L     R1,ASRWORK          DICTIONARY POINTER
         LTR   R1,R1               ANY PRESENT .Q
         BNZ   SSR02               BRANCH IF YES
         SPACE
         L     X1,CURFILE          CURRENT FILE CONTROL BLOCK
         LTR   X1,X1               ANY FILE ON READER STACK .Q
         BZ    SSR01               BRANCH IF NONE
         USING FILBLOCK,X1         FILE CONTROL BLOCK LOOKS LIKE THIS
         LA    R1,FILSRAR          LOCAL DICTIONARY DESCRIPTOR
         DROP  X1
        $CALL  SYMUSL              LOOK UP THE VARIABLE
         BC    BPOS,SSR07          BRANCH IF FOUND LOCALLY
         SPACE
SSR01    DS    0H
         L     R1,ASRGBL           GLOBAL DICTIONARY DESCRIPTOR
        $CALL  SYMUSL              LOOK UP THE VARIABLE AGAIN
         BC    BPOS,SSR07          BRANCH IF FOUND GLOBALLY
         B     SSR03               CREATE NEW VARIABLE
         SPACE
SSR02    DS    0H
        $CALL  SYMUSL              LOOK UP SYMBOL
         BC    BPOS,SSR07          BRANCH IF FOUND
SSR03    DS    0H
         LR    X1,COUNT            REMEMBER TRAILING POINTER
         LA    R1,RNLN             LENGTH OF ONE NEW ENTRY
        $CALL  GETCELL             GET NEW SPACE FOR REF
         BC    BPOS,SSR04          BRANCH IF SUCCESSFUL
         SR    COUNT,COUNT         ZERO RETURN POINTER
         B     SSR05               AND GO TO RETURN
         SPACE
SSR04    DS    0H
         XC    0(RNLN,TEMP),0(TEMP)     CLEAR AREA
         ST    TEMP,RNSCHN-RND(,X1)     SET NEW FORWARD POINTER
         L     R0,RNTBCNT          GET COUNT OF USER VARIABLES
         A     R0,F1               PLUS ONE
         ST    R0,RNTBCNT          UPDATE COUNT OF USER VARIABLES
         LR    COUNT,TEMP          RETURN NEW POINTER
SSR05    DS    0H
         OC    SRNMSUB,SRNMSUB     ANY SUBSCRIPT PRESENT .Q
         BZ    SSR06               BRANCH IF NONE
        $CC    DNO                 SYMBOL(0) NOT FOUND
         B     SSR10               GO TO RETURN
         SPACE
SSR06    DS    0H
        $CC    OMIT                SYMBOL NOT FOUND
         B     SSR10               GO TO RETURN
         SPACE
SSR07    DS    0H
         TM    SRNMFLG,SRNMALL     ONE OF THE 'ALL' VARIATIONS .Q
         BO    SSR08               BRANCH IF YES
         OC    SRNMSUB,SRNMSUB     ANY SUBSCRIPT PRESENT .Q
         BZ    SSR09               BRANCH IF NONE
SSR08    DS    0H
        $CC    NEG                 SYMBOL(0) FOUND
         B     SSR10               GO TO RETURN
         SPACE
SSR09    DS    0H
        $CC    POS                 SYMBOL FOUND
         B     SSR10               GO TO RETURN
         SPACE
SSR10    DS    0H
        $RESTOR KEEP=(COUNT)       RESTORE CALLER'S REGISTERS
         BR    RETURN              AND RETURN TO CALLER
