***********************************************************************
*                                                                     *
*        INTERNAL FUNCTION 'HEADPRT' --- PRINT HEADING OR FOOTING     *
*        INFORMATION                                                  *
*              ON ENTRY -- (X1) -> THREE HEADING/FOOTING POINTER      *
*                       -- (RETURN) -> RETURN ADDRESS                 *
*                                                                     *
***********************************************************************
         SPACE
HEADPRT $ENTER ,
         LH    COUNT,PLCT          ACCOUNT FOR HEADER LINE
         BCTR  COUNT,0             ..
         STH   COUNT,PLCT          ..
         SPACE
         L     X3,WRKBUFFA         HEADING/FOOTING WORK BUFFER ADDR
         MVC   0(L'WRKBUFF,X3),BLANKS   CLEAR BUFFER
         LA    COUNT,2             LEAD BLANK AND DATA FOR EMPTY HEADER
         LA    X2,3                SET FOR THREE HEADERS
         SR    R0,R0               ZERO WORK REGISTER
         STH   R0,HPBKCNT          ZERO GLOBAL BACKSPACE COUNT
         L     X1,0(,X1)           POINT TO HEADING DATA
         LTR   X1,X1               EMPTY .Q
         BZ    HP11                BRANCH IF YES
         BNM   HP01                BRANCH IF NOT DEFAULT TITLE
        $IFON  SWITCHS,AFIRST,HP11 BRANCH IF REAL FIRST PAGE
        $IFON  SWITCHS,PAGOFF,HP11 BRANCH IF EXTERNAL NUMBERING OFF
HP01     DS    0H
         LA    X1,0(,X1)           CLEAR HIGH BYTE
         SPACE
HP02     DS    0H
         L     R1,HDTEMPAD         INITIALIZE TEMPORARY BUFFER PTR
         SR    X3,X3               INITIALIZE LENGTH REGISTER
         IC    X3,1(,X1)           GET LENGTH OF SEGMENT
         LTR   X3,X3               EMPTY STRING .Q
         BZ    HP10                IF SO, DON'T PLAY WITH IT
         LA    TEMP,2(,X1)         ADDRESS OF FIRST TEXT CHAR
         SR    R0,R0               ZERO WORK REGISTER
         STH   R0,HPBKCNT+2        ZERO LOCAL BACKSPACE COUNT
         SPACE
HP03     DS    0H
         CLC   0(1,TEMP),PSYMBOL   PAGE NUMBER ESCAPE .Q
         BE    HP05                IF YES, SKIP
         MVC   0(1,R1),0(TEMP)     NO, COPY TEXT TO BUFFER
         LA    R1,1(,R1)           NEXT BUFFER CHARACTER
         CLI   0(TEMP),X'16'       BACKSPACE IN HEADING .Q
         BNE   HP04                BRANCH IF NOT
         LH    R0,HPBKCNT          CURRENT GLOBAL BACKSPACE COUNT
         A     R0,F2               BUMP BY TWO CHARACTERS
         STH   R0,HPBKCNT          UPDATE GLOBAL BACKSPACE COUNT
         LH    R0,HPBKCNT+2        CURRENT LOCAL BACKSPACE COUNT
         A     R0,F2               BUMP BY TWO CHARACTERS
         STH   R0,HPBKCNT+2        UPDATE LOCAL BACKSPACE COUNT
         SPACE
HP04     DS    0H
         LA    TEMP,1(,TEMP)       NEXT TEXT CHARACTER
         BCT   X3,HP03             LOOP THROUGH TEXT
         B     HP06                DONE. GO PUT IN PRINT BUFFER
         SPACE
HP05     DS    0H
        $IFON  SWITCHS,PAGOFF,HP04 DROP CHAR IF NO EXTERNAL PAGE NUMB
        $CALL  PNUMFMT             FORMAT CURRENT PAGE NUMBER
         EX    COUNT,HPMVCPG       INSERT PAGE NUMBER
         LA    R1,1(COUNT,R1)      BUMP BUFFER POINTER
         B     HP04                CONTINUE COPY
         SPACE
HP06     DS    0H
         L     TEMP,HDTEMPAD       REINITIALIZE TEMPORARY BUFFER PTR
         SR    R1,TEMP             LENGTH OF TEXT
         LR    X3,X2               DO SPECIALIZED MOVING
         SLL   X3,2                ..
         B     *(X3)               ..
         B     HP08                1 => RIGHT ADJUST
         B     HP07                2 => CENTER
         SR    R0,R0               3 => LEFT ADJUST
         B     HP09                ENTER DATA WITH ZERO OFFSET
         SPACE
HP07     DS    0H
         L     R0,LLZ              GET LINE LENGTH
         SR    R0,R1               COMPUTE REMAINDER OVER ITEM
         AH    R0,HPBKCNT+2        PLUS LOCAL BACKSPACE COUNT
         SRA   R0,1                ONE HALF IS SHIFT AMOUNT
         AH    R0,HPBKCNT          PLUS GLOBAL BACKSPACE COUNT
         SH    R0,HPBKCNT+2        LESS LOCAL BACKSPACE COUNT
         B     HP09                ENTER THE DATA
         SPACE
HP08     DS    0H
         L     R0,LLZ              GET LINE LENGTH
         SR    R0,R1               TEXT OFFSET
         AH    R0,HPBKCNT          PLUS GLOBAL BACKSPACE COUNT
         SPACE
HP09     DS    0H
         L     X3,WRKBUFFA         HEADING/FOOTING WORK BUFFER ADDR
         LA    X3,1(,X3)           LEAVE A LEADING BLANK
         AR    X3,R0               COMPUTE WITH OFFSET
         S     R1,F1               SS-TYPE COUNT
         BM    HP10                BRANCH IF NOTHING LEFT
         EX    R1,HPMVC            COPY TEXT IN
         LR    COUNT,R0            SAVE FOR LINKPUT
         LA    COUNT,2(COUNT,R1)   OFFSET+LEN-1+2=TLEN+1
         SPACE
HP10     DS    0H
         SR    X3,X3               INITIALIZE LENGTH REGISTER
         IC    X3,1(,X1)           GET LENGTH OF SEGMENT
         LA    X1,2(X3,X1)         UPDATE DATA TABLE ADDRESS
         BCT   X2,HP02             DO ALL THREE SEGMENTS
         SPACE
HP11     DS    0H
         MVC   HDPTRSAV,FMTOLD1    SAVE LINK PTRS/LOCAL SWITCHES
        $OFF   SWITCHS,JUADSWS     DISABLE JUSTIFICATION
        $ON    SWITCHS,OOSWS       DISABLE OUTPUT OVERLAY
         ST    COUNT,NOCHARS       SETUP AND CALL LINKPUT
         L     R0,WRKBUFFA         RECORD POINTER
         ST    R0,OUTPARM          IN COMMON AREA
         XC    OLDFIRST(PARMPUT-OLDFIRST),OLDFIRST  NO OLD DATA
         LA    R1,OUTPARM          COMMON DATA AREA
        $CALL  LKPUT               BUILD CHARACTER BLOCKS
         L     COUNT,NOCHARS       CURRENT CHAR COUNT
         BCTR  COUNT,0             LESS ONE
         ST    COUNT,NOCHARS       UPDATE
        $ON    SWITCHS,HDPSWS      PRINT HEADING/FOOTING ENTRY
        $CALL  PRINT               PRINT THE LINKS
        $OFF   SWITCHS,HDPSWS      ALL THROUGH
        $MVC   FMTOLD1,HDPTRSAV    RESTORE LINK PTRS/LOCAL SWITCHES
        $RESTOR ,                  RESTORE CALLER'S REGS
         BR    RETURN              AND BACK TO CALLER
         SPACE
HPMVCPG  MVC   0(*-*,R1),EBCDPAGE  INSERTS PAGE NUMBER
HPMVC    MVC   0(*-*,X3),0(TEMP)   COPIES ONE SEGMENT OF HEADING DATA
