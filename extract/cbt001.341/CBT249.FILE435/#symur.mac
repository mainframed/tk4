***********************************************************************
*                                                                     *
*        INTERNAL FUNCTION 'SYMUR' -- LOCATE USE REFERENCE NAME       *
*                                                                     *
***********************************************************************
         SPACE
*        TO ENTER  --  $CALL  SYMUR
*
*        ON EXIT   --  CC=BPOS  SYMBOL FOUND (COUNT=ADDR)
*                           OR  SYMBOL(N) FOUND (COUNT=ADDR)
*                      CC=BNEG  SYMBOL(0) FOUND (COUNT=ADDR)
         SPACE
SYMUR   $ENTER ,
         L     X1,CURFILE          CURRENT FILE CONTROL BLOCK
         LTR   X1,X1               ANY FILE ON READER STACK .Q
         BZ    SUR01               BRANCH IF NOT
         SPACE
         USING FILBLOCK,X1         FILE CONTROL BLOCK LOOKS LIKE THIS
         LA    R1,FILSRAR          LOCAL DICTIONARY DESCRIPTOR
         DROP  X1
        $CALL  SYMUSL              LOOK UP THE VARIABLE
         BC    BPOS,SUR06          BRANCH IF FOUND
         SPACE
SUR01    DS    0H
         L     R1,ASRGBL           GLOBAL DICTIONARY DESCRIPTOR
        $CALL  SYMUSL              LOOK UP VARIABLE AGAIN
         BC    BPOS,SUR06          BRANCH IF FOUND
         SPACE
         CLI   SRNM,C'$'           SYMBOL START WITH '$' .Q
         BNE   SUR03               BRANCH IF NOT
         CLC   SRNM+L'SRNM-L'SRNSYS+1(L'SRNSYS-1),BLANKS  END BLANK .Q
         BNE   SUR03               BRANCH IF NOT
         LA    COUNT,L'SRNM-L'SRNSYS    NUMBER OF CHARS TO MOVE
SUR02    DS    0H
         IC    R0,SRNM(COUNT)      GET LAST CHAR
         STC   R0,SRNM+L'SRNSYS-1(COUNT)  MOVE TO RIGHT
         BCT   COUNT,SUR02         DO ALL CHARACTERS
        $MVC   SRNM,SRNSYS         ENTER PREFIX
SUR03    DS    0H
         LM    R0,R1,SRNTBLN       PRIME SYSTEM SEARCH LOOP
         L     COUNT,SRNTBBEG      START OF SYSTEM REFERENCE TABLE
         SR    COUNT,R0            LESS ONE DUMMY START ENTRY
         B     SUR05               BRANCH TO LOOP END
SUR04    DS    0H
         USING RND,COUNT           SYMBOL ENTRY LOOKS LIKE THIS
         CLC   RNSYM,SRNM          THIS ENTRY .Q
         BNE   SUR05               IF NOT, CONTINUE
         TM    RNFLAG,RNPTR        POINTER DATA .Q
         BZ    SUR06               BRANCH BACK IF NOT
         L     X1,SRNTBBEG         START OF SYSTEM REFERENCE TABLE
         BAL   R14,RNCVAL          BRANCH TO ROUTINE
         B     SUR06               SET CONDITION CODE AND RETURN
SUR05    DS    0H
         BXLE  COUNT,R0,SUR04      NO, CHECK NEXT ENTRY
         L     COUNT,SRNTBCUR      POINT TO LAST NULL ENTRY
SUR06    DS    0H
         TM    SRNMFLG,SRNMALL     IMPLIED SUBSCRIPT .Q
         BO    SUR10               BRANCH IF YES
         CLC   SRNMSUB,F0          ANY SUBSCRIPT .Q
         BE    SUR09               BRANCH IF NONE
SUR07    DS    0H
         CLC   RNSUBS,SRNMSUB      COMPARE SUBSCRIPTS .Q
         BH    SUR08               BRANCH IF GT
         BE    SUR09               BRANCH IF FOUND
         CLC   RNSLINK,F0          AT THE END .Q
         BE    SUR08               BRANCH IF YES
         L     COUNT,RNSLINK       FETCH NEXT SUB POINTER
         B     SUR07               TRY AGAIN
         SPACE
SUR08    DS    0H
         L     COUNT,SRNTBCUR      POINT TO LAST NULL ENTRY
SUR09    DS    0H
        $CC    POS                 SET CC BPOS
         B     SUR11               AND RETURN
         SPACE
SUR10    DS    0H
        $CC    NEG                 SET CC BNEG
         SPACE
SUR11    DS    0H
        $RESTOR KEEP=(COUNT)       RESTORE CALLER'S REGS
         BR    RETURN              RETURN TO CALLER
         SPACE
SRNSYS   DC    C'SYS'              THIS PREFIX EQUIVALENT TO '$'
         DROP  COUNT
