***********************************************************************
*                                                                     *
*              SYSTEM REFERENCE SYMBOLS                               *
*                                                                     *
***********************************************************************
         SPACE
SYSREFS  CSECT ,                   SYSTEM REFERENCE SYMBOLS
         USING SYSREFS,X1          CALLER PROVIDED
        $SYSREF SYSYEAR,TYPE=CHAR,LENGTH=2,VALUE='**'
        $SYSREF SYSPYEAR,TYPE=CHAR,LENGTH=4,VALUE='19**'
        $SYSREF SYSMONTH,TYPE=CHAR,LENGTH=2,VALUE='**'
        $SYSREF SYSPMONTH,TYPE=CHAR,LENGTH=*-*,VALUE='ULLLL'
        $SYSREF SYSDAYOFY,TYPE=CHAR,LENGTH=3,VALUE='***'
        $SYSREF SYSDAYOFM,TYPE=CHAR,LENGTH=2,VALUE='**'
        $SYSREF SYSDAYOFW,TYPE=CHAR,LENGTH=1,VALUE='*'
        $SYSREF SYSPDAYOFW,TYPE=CHAR,LENGTH=*-*,VALUE='ULLLL'
        $SYSREF SYSDATE,TYPE=PTR,BRANCH=SDATE
        $SYSREF SYSHOUR,TYPE=CHAR,LENGTH=2,VALUE='**'
        $SYSREF SYSMINUTE,TYPE=CHAR,LENGTH=2,VALUE='**'
        $SYSREF SYSSECOND,TYPE=CHAR,LENGTH=2,VALUE='**'
        $SYSREF SYSTIME,TYPE=CHAR,LENGTH=8,VALUE='**:**:**'
         SPACE
        $SYSREF SYSRECNO,TYPE=PTR,BRANCH=SRECNO
        $SYSREF SYSLINE,TYPE=PTR,BRANCH=SLINE
        $SYSREF SYSFILE,TYPE=PTR,BRANCH=SFILE
        $SYSREF SYSMEMBER,TYPE=PTR,BRANCH=SMEMBER
        $SYSREF SYSSEQNO,TYPE=PTR,BRANCH=SSEQNO
        $SYSREF SYSPARM,TYPE=PTR,BRANCH=SPARM
        $SYSREF SYSCONT,TYPE=PTR,BRANCH=SCONT
        $SYSREF SYSRETCODE,TYPE=PTR,BRANCH=SRETCODE
        $SYSREF SYSRET,TYPE=PTR,BRANCH=SRET
         SPACE
        $SYSREF SYSAD,TYPE=PTR,BRANCH=SAD
        $SYSREF SYSADEVEN,TYPE=PTR,BRANCH=SADEVN
        $SYSREF SYSADODD,TYPE=PTR,BRANCH=SADODD
        $SYSREF SYSBC,TYPE=PTR,BRANCH=SBC
        $SYSREF SYSBS,TYPE=PTR,BRANCH=SBS
        $SYSREF SYSBX,TYPE=PTR,BRANCH=SBX
        $SYSREF SYSCC,TYPE=PTR,BRANCH=SCC
        $SYSREF SYSCCC,TYPE=PTR,BRANCH=SCCC
        $SYSREF SYSCD,TYPE=PTR,BRANCH=SCD
        $SYSREF SYSCL,TYPE=PTR,BRANCH=SCL
        $SYSREF SYSCPI,TYPE=PTR,BRANCH=SCPI
        $SYSREF SYSDA,TYPE=PTR,BRANCH=SDA
        $SYSREF SYSDHSET,TYPE=PTR,BRANCH=SDHSET
        $SYSREF SYSHI,TYPE=PTR,BRANCH=SHI
        $SYSREF SYSLL,TYPE=PTR,BRANCH=SLL
        $SYSREF SYSLS,TYPE=PTR,BRANCH=SLS
        $SYSREF SYSMC,TYPE=PTR,BRANCH=SMC
        $SYSREF SYSPI,TYPE=PTR,BRANCH=SPI
        $SYSREF SYSPL,TYPE=PTR,BRANCH=SPL
        $SYSREF SYSSC,TYPE=PTR,BRANCH=SSC
        $SYSREF SYSTM,TYPE=PTR,BRANCH=STM
        $SYSREF SYSBM,TYPE=PTR,BRANCH=SBM
        $SYSREF SYSHM,TYPE=PTR,BRANCH=SHM
        $SYSREF SYSHN,TYPE=PTR,BRANCH=SHN
        $SYSREF SYSHNC,TYPE=PTR,BRANCH=SHNC
        $SYSREF SYSHS,TYPE=PTR,BRANCH=SHS
        $SYSREF SYSHY,TYPE=PTR,BRANCH=SHY
        $SYSREF SYSHYC,TYPE=PTR,BRANCH=SHYC
        $SYSREF SYSFM,TYPE=PTR,BRANCH=SFM
        $SYSREF SYSCP,TYPE=PTR,BRANCH=SCP
        $SYSREF SYSCPC,TYPE=PTR,BRANCH=SCPC
        $SYSREF SYSFB,TYPE=PTR,BRANCH=SFB
        $SYSREF SYSFBC,TYPE=PTR,BRANCH=SFBC
        $SYSREF SYSFBF,TYPE=PTR,BRANCH=SFBF
        $SYSREF SYSFK,TYPE=PTR,BRANCH=SFK
        $SYSREF SYSFKC,TYPE=PTR,BRANCH=SFKC
        $SYSREF SYSFN,TYPE=PTR,BRANCH=SFN
        $SYSREF SYSFNC,TYPE=PTR,BRANCH=SFNC
        $SYSREF SYSFNCOUNT,TYPE=PTR,BRANCH=SFNCOUNT
        $SYSREF SYSFS,TYPE=PTR,BRANCH=SFS
        $SYSREF SYSPAGE,TYPE=PTR,BRANCH=SPAGE
        $SYSREF SYSDPAGE,TYPE=PTR,BRANCH=SDPAGE
        $SYSREF SYSPPAGE,TYPE=PTR,BRANCH=SPPAGE
        $SYSREF SYSIN,TYPE=PTR,BRANCH=SIN
        $SYSREF SYSINR,TYPE=PTR,BRANCH=SINR
        $SYSREF SYSIXREF,TYPE=CHAR,LENGTH=2,VALUE=', '
        $SYSREF SYSTCTB,TYPE=CHAR,LENGTH=2,VALUE='. '
        $SYSREF SYSRMNEST,TYPE=PTR,BRANCH=SRMN
        $SYSREF SYSFLNEST,TYPE=PTR,BRANCH=SFLN
        $SYSREF SYSPASSNO,TYPE=PTR,BRANCH=SPSNO
        $SYSREF SYSPASSOF,TYPE=PTR,BRANCH=SPSOF
        $SYSREF SYSWD,TYPE=PTR,BRANCH=SWD
         SPACE
        $SYSREF SYSOUT,TYPE=PTR,BRANCH=SOUT
        $SYSREF SYSONLINE,TYPE=PTR,BRANCH=SONLINE
        $SYSREF SYSOFFLINE,TYPE=PTR,BRANCH=SOFFLINE
        $SYSREF SYSSCREEN,TYPE=PTR,BRANCH=SSCREEN
         SPACE
        $SYSREF SYSBLANK,TYPE=PTR,BRANCH=SBLANK
        $SYSREF SYSVERSION,TYPE=PTR,BRANCH=SVERSN
         SPACE
        $SYSREF SYSNULL,TYPE=CHAR,LENGTH=0,VALUE=' ',LAST=0
         SPACE
        $SYSREF SYSBIN,TYPE=NUM,LENGTH=4,VALUE='****'
        $SYSREF SYSCHAR,TYPE=CHAR,LENGTH=*-*,VALUE='**'
        $SYSREF SYSNO,TYPE=CHAR,LENGTH=1,VALUE='N'
        $SYSREF SYSYES,TYPE=CHAR,LENGTH=1,VALUE='Y'
        $SYSREF SYSOFF,TYPE=CHAR,LENGTH=2,VALUE='OFF'
        $SYSREF SYSON,TYPE=CHAR,LENGTH=2,VALUE='ON'
        $SYSREF SYSUSER,TYPE=CHAR,LENGTH=4,VALUE='USER'
        $SYSREF SYSPRT,TYPE=CHAR,LENGTH=5,VALUE='PRINT'
        $SYSREF SYSTRM,TYPE=CHAR,LENGTH=4,VALUE='TERM'
         SPACE
SRECNO   DS    0H
         L     COUNT,COMFILIT      FILE ITEM NUMBER
SBINRET  DS    0H
         ST    COUNT,@BIN+RNDVAL-RND    STORE NUMERIC RESULT
         LA    COUNT,@BIN          POINT TO IT
SRETURN  DS    0H
         BR    R14                 RETURN TO CALLER
         SPACE
SLINE    DS    0H
         LH    COUNT,PLZ           GET PAGE LENGTH
         SH    COUNT,PLCT          LESS REMAINDER OF PAGE
         LA    COUNT,1(,COUNT)     PLUS ONE
         B     SBINRET             AND RETURN
         SPACE
SFILE    DS    0H
         LA    COUNT,COMFILNM      POINT TO FILE NAME
         LA    R1,8                MAX LENGTH
SCHARET  DS    0H
         AR    R1,COUNT            LAST CHAR +1
         MVI   @CHAR+RNCLEN-RND,X'00'   ASSUME NULL STRING
SCHARLP  DS    0H
         BCTR  R1,0                LAST CHAR IN STRING
         CLI   0(R1),C' '          IS IT BLANK .Q
         BE    SCHARLP             YES, TRY AGAIN
         SR    R1,COUNT            LENGTH -1 OF STRING
         BM    SCHARDN             BRANCH OUT IF NULL
         LA    R1,1(,R1)           TRUE CHARACTER LENGTH
SCHARNB  DS    0H
         STC   R1,@CHAR+RNCLEN-RND      SET TRUE LENGTH
         CLI   @CHAR+RNCLEN-RND,L'RNCVAL     LONG CHARACTER VALUE
         BNH   SCHARST             BRANCH IF SHORT
         ST    COUNT,@CHAR+RNCPTR-RND   SET CHARACTER POINTER
         B     SCHARDN             BRANCH TO RETURN
SCHARST  DS    0H
         BCTR  R1,0                LENGTH-1
         EX    R1,SCHARMV          MOVE THE STRING
SCHARDN  DS    0H
         LA    COUNT,@CHAR         POINT TO IT
         B     SRETURN             AND RETURN
         SPACE
SDATE    DS    0H
         LA    COUNT,SDATEWRK      POINT TO FORMATTED DATE
         LA    R1,L'SDATEWRK       MAX LENGTH
         B     SCHARET             ENTER THE RESULT
         SPACE
SMEMBER  DS    0H
         LA    COUNT,COMMEMNM      POINT TO MEMBER NAME
         LA    R1,8                MAX LENGTH
         B     SCHARET             ENTER RESULT
         SPACE
SSEQNO   DS    0H
         LA    COUNT,COMFILNO      POINT TO SEQUENCE NUMBER
         LA    R1,8                MAX LENGTH
         B     SCHARET             ENTER THE RESULT
         SPACE
SPARM    DS    0H
         L     COUNT,PLSTSV        GET PARM LIST ADDRESS
         L     COUNT,0(,COUNT)     GET ADDR OF ACTUAL LIST
         LH    R1,0(,COUNT)        GET LENGTH OF PARM
         LA    COUNT,2(,COUNT)     POINT TO ACTUAL PARM STRING
         B     SCHARET             AND ENTER THE RESULT
         SPACE
SCONT    DS    0H
         L     COUNT,ERCONT        COUNT OF ERRORS LEFT
         B     SBINRET             AND RETURN
SRETCODE DS    0H
         LH    COUNT,RETCODE       GET CURRENT SCRIPT RETURN CODE
         B     SBINRET             AND RETURN
SRET     DS    0H
         LH    COUNT,SYRET         GET LAST SYSTEM RETURN CODE
         B     SBINRET             AND RETURN
         SPACE
SAD      DS    0H
         LH    COUNT,ADJCNT        ADJUST VALUE
         B     SBINRET             AND RETURN
SADEVN   DS    0H
         LH    COUNT,ADJCEVN       EVEN PAGE ADJUST VALUE
         B     SBINRET             AND RETURN
SADODD   DS    0H
         LH    COUNT,ADJCODD       ODD PAGE ADJUST VALUE
         B     SBINRET             AND RETURN
         SPACE
SBC      DS    0H
         LA    COUNT,@NO           ASSUME NOT BALANCED COLUMNS
        $IFOFF SWITCHS,BCSWS,SBC01 BRANCH IF TRUE
         LA    COUNT,@YES          POINT TO YES
SBC01    DS    0H
         B     SRETURN             GO TO RETURN
         SPACE
SBS      DS    0H
         LA    COUNT,BSIND         USER BACKSPACE CHARACTER
         LA    R1,1                LENGTH OF SAME
         B     SCHARNB             REMOVE NO TRAILING BLANKS
         SPACE
SBX      DS    0H
         LA    COUNT,@NO           ASSUME NOT IN A BOX
         OC    BXPTR,BXPTR         ANY BOX POINTER .Q
         BZ    SBX01               BRANCH IF NOT
         LA    COUNT,@YES          POINT TO AFFIRMATIVE
SBX01    DS    0H
         B     SRETURN             GO TO RETURN
         SPACE
SCC      DS    0H
         LA    COUNT,@YES          ASSUME WITHIN CONDITIONAL COLUMN
         CLI   ICORFLG,ICORCC      WITHIN A CONDITIONAL COLUMN .Q
         BE    SCC01               BRANCH IF YES
         LA    COUNT,@NO           POINT TO NO
SCC01    DS    0H
         B     SRETURN             GO TO RETURN
SCCC     DS    0H
         L     COUNT,CCQCNT        GET CONDITIONAL COLUMN LINE COUNT
         B     SBINRET             AND RETURN
         SPACE
SCD      DS    0H
         L     COUNT,CDCOUNT       GET COLUMN COUNT
         B     SBINRET             AND RETURN
         SPACE
SCL      DS    0H
         L     COUNT,CLLZSAVE      GET COLUMN LENGTH
         B     SBINRET             AND RETURN
         SPACE
SCPI     DS    0H
         L     COUNT,DEFCPI+TAB3DEF     CHARACTERS PER INCH
         B     SBINRET              AND RETURN
         SPACE
SDA      DS    0H
         LH    COUNT,DARKVAL       DARK OUTPUT VALUE
         B     SBINRET             AND RETURN
         SPACE
SDHSET   DS    0H
         L     COUNT,DHNUMTC       CURRENT TABLE OF CONTENTS
         B     SBINRET             AND RETURN
         SPACE
SHI      DS    0H
         LH    COUNT,HICNT         HANGING INDENT
         B     SBINRET             AND RETURN
         SPACE
SLL      DS    0H
         L     COUNT,LLZ           LINE LENGTH
         B     SBINRET             AND RETURN
         SPACE
SLS      DS    0H
         LH    COUNT,DSCNT         CURRENT LINE SPACING
         B     SBINRET             AND RETURN
         SPACE
SMC      DS    0H
         LA    COUNT,@YES          ASSUME IN MULTIPLE COLUMN MODE
         CLI   ICOLFLG,ICOLMC      WITHIN MULTIPLE COLUMN MODE .Q
         BE    SMC01               BRANCH IF YES
         LA    COUNT,@NO           POINT TO NO
SMC01    DS    0H
         B     SRETURN             GO TO RETURN
         SPACE
SPI      DS    0H
         LH    COUNT,PICNT         PARAGRAPH INDENT
         B     SBINRET             AND RETURN
         SPACE
SPL      DS    0H
         LH    COUNT,PLZ           CURRENT PAGE LENGTH
         B     SBINRET             AND RETURN
         SPACE
SSC      DS    0H
         LA    COUNT,@YES          ASSUME IN SINGLE COLUMN MODE
         CLI   ICOLFLG,ICOLSC      WITHIN SINGLE COLUMN MODE .Q
         BE    SSC01               BRANCH IF YES
         LA    COUNT,@NO           POINT TO NO
SSC01    DS    0H
         B     SRETURN             GO TO RETURN
         SPACE
STM      DS    0H
         LH    COUNT,TOPMRG        CURRENT TOP MARGIN
         B     SBINRET             AND RETURN
         SPACE
SBM      DS    0H
         LH    COUNT,BMMRG         CURRENT BOTTOM MARGIN
         B     SBINRET             AND RETURN
         SPACE
SHM      DS    0H
         LH    COUNT,HDMRG         CURRENT HEADING MARGIN
         B     SBINRET             AND RETURN
         SPACE
SHN      DS    0H
         LA    COUNT,@YES          ASSUME WITHIN HEADNOTE DEFINITION
         CLI   ICORFLG,ICORHN      WITHIN A HEADNOTE DEFINITION .Q
         BE    SHN01               BRANCH IF YES
         LA    COUNT,@NO           POINT TO NO
SHN01    DS    0H
         B     SRETURN             GO TO RETURN
SHNC     DS    0H
         L     COUNT,HNQCNT        GET HEADNOTE LINE COUNT
         B     SBINRET             AND RETURN
         SPACE
SHS      DS    0H
         LH    COUNT,HSCNT         CURRENT HEADING SPACING
         B     SBINRET             AND RETURN
         SPACE
SHY      DS    0H
         LA    COUNT,@OFF          ASSUME HYPHENATION OFF
         LA    R1,HYNONE           THE OFF VALUE
         C     R1,HYLEVEL          IS HYPHENATION OFF .Q
         BE    SHY01               BRANCH IF YES
         LA    COUNT,@ON           ASSUME HYPHENATION ON
         LA    R1,HYAUTO           THE ON VALUE
         C     R1,HYLEVEL          IS HYPHENATION ON .Q
         BE    SHY01               BRANCH IF YES
         LA    COUNT,@USER         ELSE MUST BE USER
SHY01    DS    0H
         B     SRETURN             GO TO RETURN
SHYC     DS    0H
         L     COUNT,HYEXCNT       GET CURRENT EXCEPTION WORD COUNT
         B     SBINRET             AND RETURN
         SPACE
SFM      DS    0H
         LH    COUNT,FTMRG         CURRENT FOOTING MARGIN
         B     SBINRET             AND RETURN
         SPACE
SCP      DS    0H
         LA    COUNT,@YES          ASSUME WITHIN CONDITIONAL KEEP
         CLI   ICORFLG,ICORCP      WITHIN A CONDITIONAL KEEP .Q
         BE    SCP01               BRANCH IF YES
         LA    COUNT,@NO           POINT TO NO
SCP01    DS    0H
         B     SRETURN             GO TO RETURN
         SPACE
SCPC     DS    0H
         L     COUNT,CPQCNT        GET QUEUED CONDITIONAL KEEP COUNT
         B     SBINRET             AND RETURN
         SPACE
SFB      DS    0H
         LA    COUNT,@YES          ASSUME WITHIN FLOATING BLOCK
         CLI   ICORFLG,ICORFB      WITHIN A FLOATING BLOCK .Q
         BE    SFB01               BRANCH IF YES
         LA    COUNT,@NO           POINT TO NO
SFB01    DS    0H
         B     SRETURN             GO TO RETURN
SFBC     DS    0H
         L     COUNT,FBQCNT        GET QUEUED FLOATING BLOCK COUNT
         B     SBINRET             AND RETURN
SFBF     DS    0H
         L     COUNT,FBQCNTF       GET FIRST QUEUED BLOCK COUNT
         B     SBINRET             AND RETURN
         SPACE
SFK      DS    0H
         LA    COUNT,@YES          ASSUME WITHIN FLOATING KEEP
         CLI   ICORFLG,ICORFK      WITHIN A FLOATING KEEP .Q
         BE    SFK01               BRANCH IF YES
         LA    COUNT,@NO           POINT TO NO
SFK01    DS    0H
         B     SRETURN             GO TO RETURN
         SPACE
SFKC     DS    0H
         L     COUNT,FKQCNT        GET QUEUED FLOATING KEEP COUNT
         B     SBINRET             AND RETURN
         SPACE
SFN      DS    0H
         LA    COUNT,@YES          ASSUME WITHIN FOOTNOTE
         CLI   ICORFLG,ICORFN      WITHIN A FOOTNOTE .Q
         BE    SFN01               BRANCH IF YES
         LA    COUNT,@NO           POINT TO NO
SFN01    DS    0H
         B     SRETURN             GO TO RETURN
         SPACE
SFNC     DS    0H
         L     COUNT,FNQCNT        GET QUEUED FOOTNOTE COUNT
         B     SBINRET             AND RETURN
         SPACE
SFNCOUNT DS    0H
         LH    COUNT,SFNCNT        CURRENT FOOTNOTE NUMBER
         B     SBINRET             AND RETURN
         SPACE
SFS      DS    0H
         LH    COUNT,FSCNT         CURRENT FOOTING SPACING
         B     SBINRET             AND RETURN
         SPACE
SPAGE    DS    0H
         L     COUNT,PACNTI        CURRENT INTEGER PAGE NUMBER
         B     SBINRET             AND RETURN
         SPACE
SDPAGE   DS    0H
         L     COUNT,PACNTD        CURRENT DECIMAL PART OF PAGE NUMBER
         LTR   COUNT,COUNT         DOES IT EXIST .Q
         BNM   SBINRET             BRANCH IF YES
         LA    COUNT,@NULL         OTHERWISE POINT TO NULL
         B     SRETURN             GO TO RETURN
         SPACE
SPPAGE   DS    0H
        $CALL  PNUMFMT             FORMAT CURRENT PAGE NUMBER
         LA    COUNT,EBCDPAGE      POINT TO FORMATTED PAGE NUMBER
         LA    R1,L'EBCDPAGE       MAX LENGTH
         B     SCHARET             ENTER THE RESULT
         SPACE
SIN      DS    0H
         LH    COUNT,INDL          CURRENT INDENT
         B     SBINRET             AND RETURN
         SPACE
SINR     DS    0H
         LH    COUNT,INDENTR       CURRENT RIGHT INDENT VALUE
         B     SBINRET             AND RETURN
         SPACE
SWD      DS    0H
         LA    COUNT,@YES          ASSUME WIDOW IS ON
        $IFON  SWITCHS,WDSWS,SWD01 BRANCH IF WIDOW IS ON
         LA    COUNT,@NO           WIDOW IS OFF
SWD01    DS    0H
         B     SRETURN             GO TO RETURN
         SPACE
SRMN     DS    0H
         LH    COUNT,RMNEST        CURRENT NESTED REMOTE COUNT
         B     SBINRET             AND RETURN
         SPACE
SFLN     DS    0H
         LH    COUNT,FILNEST       CURRENT NESTED FILE COUNT
         B     SBINRET             AND RETURN
         SPACE
SPSNO    DS    0H
         L     COUNT,PASSNO        GET CURRENT PASS NUMBER
         B     SBINRET             AND RETURN
         SPACE
SPSOF    DS    0H
         L     COUNT,DEFPASOF+TAB3DEF   TOTAL NUMBER OF PASSES
         B     SBINRET             AND RETURN
         SPACE
SOUT     DS    0H
         LA    COUNT,@PRT          ASSUME OFFLINE PRINTER
        $IFOFF TTYPE,TONLINE,SOUT01     BRANCH IF NOT ONLINE
         LA    COUNT,@TRM          POINT TO ONLINE TERMINAL
SOUT01   DS    0H
         B     SRETURN             AND RETURN
         SPACE
SONLINE  DS    0H
         LA    COUNT,@NO           ASSUME NOT ONLINE
        $IFOFF TTYPE,TONLINE,SONL01     BRANCH IF NOT ONLINE
         LA    COUNT,@YES          POINT TO YES
SONL01   DS    0H
         B     SRETURN             AND RETURN
         SPACE
SOFFLINE DS    0H
         LA    COUNT,@YES          ASSUME OFFLINE
        $IFOFF TTYPE,TONLINE,SOFFL01    BRANCH IF OFFLINE
         LA    COUNT,@NO           POINT TO NO
SOFFL01  DS    0H
         B     SRETURN             AND RETURN
         SPACE
SSCREEN  DS    0H
         LA    COUNT,@YES          ASSUME SCREEN
        $IFON  TTYPE,TSCREEN,SSCRE01    BRANCH IF SCREEN
         LA    COUNT,@NO           POINT TO NO
SSCRE01  DS    0H
         B     SRETURN             AND RETURN
         SPACE
SBLANK   DS    0H
         CLC   SRNMFR,SRNMFR+L'SRNMFR   'FROM' SUBSTRING SPECIFIED .Q
         BNE   SBLANK01            BRANCH IF YES
         CLC   SRNMTO,SRNMTO+L'SRNMTO   'TO' SUBSTRING SPECIFIED .Q
         BNE   SBLANK01            BRANCH IF YES
         MVC   SRNMTO,SRNMFR       ELSE DEFAULT SUBSTRING IS ONE CHAR
SBLANK01 DS    0H
         LA    R1,L'BLANKS         MAX LENGTH OF RESULT
         LA    COUNT,BLANKS        POINT TO BLANK STRING
         B     SCHARNB             REMOVE NO TRAILING BLANKS
         SPACE
SVERSN   DS    0H
         L     COUNT,ADBASE        MAIN SCRIPT ENTRY POINT
         SR    R1,R1               ZERO LENGTH REGISTER
         IC    R1,4(,COUNT)        LENGTH OF VERSION IDENT
         LA    COUNT,5(,COUNT)     POINT TO VERSION IDENT
         B     SCHARET             AND RETURN
         SPACE
SDATEWRK DC    C'MMMMMMMMM DD, YYYY'    SYSDATE WORK AREA
         SPACE
SCHARMV  MVC   @CHAR+RNCVAL-RND(*-*),0(COUNT)     MOVE CHAR ARGUMENT
         DROP  X1
