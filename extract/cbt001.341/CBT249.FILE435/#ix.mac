***********************************************************************
*                                                                     *
*              .IX (INDEX) --- CONTROL                                *
*                                                                     *
***********************************************************************
         SPACE
IX      $ENTER ,
         SR    X1,X1               ZERO POINTER TARGET OFFSET
         XC    IXPTRS(IXPTRL),IXPTRS    INITIALIZE PARSE POINTERS
        $CALL  PNUMFMT             FORMAT CURRENT PAGE NUMBER
         LA    R0,EBCDPAGE         RESULT LIES HERE
         ST    R0,IXPARM           ENTER ADDRESS OF RESULT
         STC   COUNT,IXPARM        AND ITS LENGTH-1
        $CALL  GETNUM              GET FIRST OPTIONAL ARG
         BC    BOMIT,IXE003        ERROR IF NONE FOUND
         BC    BDNO,IX00           NOT NUMERIC, THEN BRANCH
         LTR   X3,COUNT            TEST THE RESULT
         BNP   IXE014              ERROR IF TOO SMALL
         LA    R0,IXVCNT           MAXIMUM VALUE
         CR    X3,R0               TOO BIG .Q
         BH    IXE013              ERROR IF TOO BIG
         BCTR  X3,0                OFFSET MINUS ONE
         SLL   X3,2                TIMES FOUR GIVES REAL VECTOR OFFSET
         B     IX01                PROCESS ARGS NOW
IX00     DS    0H
         ST    COUNT,ARGSTART      RESCAN FOR STRING OPERAND
         SR    X3,X3               FIRST ENTRY OF VECTOR DEFAULTS
         SPACE
IX01     DS    0H
        $ON    SWITCHS,FNOCASE     NO CASE CONVERSION PLEASE
        $CALL  GETARG              GET AN ARGUMENT
         BC    BOMIT,IX04          BRANCH IF NONE LEFT
         LA    R0,IXPTRL           MAXIMUM OFFSET TO OVERFLOW
         CR    X1,R0               TOO MANY ENTRIES .Q
         BNL   IXE005              ERROR IF YES
         LTR   TEMP,TEMP           OPERAND LENGTH-1 OF ZERO .Q
         BNZ   IX02                BRANCH IF NOT
         CLC   PERIND(1),0(COUNT)  A DIVISION OF THE WATERS .Q
         BNE   IX02                BRANCH IF NOT
         LTR   X1,X1               FIRST OPERAND .Q
         BZ    IX05                SPECIAL CASE OPERAND IF YES
         LA    X1,IXPARM-IXPTRS    NEXT ENTRY GOES HERE
         SR    R0,R0               SET NO LENGTH AND ADDRESS
         ST    R0,IXPTRS(X1)       INITIALIZE REFERENCE PARM
         B     IX01                AND SET RESULT
IX02     DS    0H
         ST    COUNT,ARGSTART      RESCAN FOR (QUOTED) STRING
        $ON    SWITCHS,FNOCASE     NO CASE CONVERSION PLEASE
        $CALL  GETQST              GET AN ARGUMENT
         CLC   QSTRING,F1          MISMATCHED QUOTES .Q
         BE    IXE015              ERROR IF YES
         S     TEMP,QSTRING        LESS STRING DELIMITERS
         BNM   IX02A               BRANCH IF NOT NULL RESULT
         LTR   X1,X1               FIRST OPERAND .Q
         BZ    IXE005              IF YES, OPERAND INVALID
         SR    COUNT,COUNT         NO ARG POINTER
         B     IX03                ENTER AND CONTINUE
IX02A    DS    0H
         CLC   QSTRING,F0          ANY DELIMITERS .Q
         BE    IX03                BRANCH IF NONE
         LA    COUNT,1(,COUNT)     START OF STRING PTR
IX03     DS    0H
         LA    R0,IXEBTXTA-1-2     MAX LENGTH-1 OF TEST AND ', '
         CR    TEMP,R0             THIS ENTRY TOO LONG .Q
         BH    IXE013              ERROR IF YES
         ST    COUNT,IXPTRS(X1)    ENTER OPERAND POINTER
         STC   TEMP,IXPTRS(X1)     AND ITS LENGTH-1
         LA    X1,L'IXPTRS(,X1)    NEXT OPERAND OFFSET
         LA    R0,IXPTRE-IXPTRS    END PARM POINTER OFFSET
         CR    R0,X1               ARE WE THERE .Q
         BNE   IX01                BRANCH IF NOT
         LA    X1,IXPARM-IXPTRS    OFFSET TO REFERENCE PARM
         B     IX01                TRY FOR NEXT OPERAND
IX04     DS    0H
         LTR   X1,X1               ANY OPERANDS FOUND .Q
         BZ    IXE003              ERROR IF NONE
         LA    R1,IXANCHV(X3)      POINT TO APPROPRIATE ANCHOR
        $CALL  IXPROC              PROCESS THE RESULT
         B     IX09                AND GO TO RETURN
         SPACE
IX05     DS    0H
        $CALL  GETYESNO            GET AND TEST ARGUMENT
         CLI   YNRESULT,YNDUMP     WAS OPERAND 'DUMP' .Q
         BE    IX06                BRANCH IF YES
         CLI   YNRESULT,YNPUR      WAS OPERAND 'PURGE' .Q
         BE    IX07                BRANCH IF YES
         B     IXE005              ELSE WE HAVE AN ERROR
IX06     DS    0H
         LA    R1,IXANCHV(X3)      POINT TO APPROPRIATE ANCHOR
        $CALL  IXDUMP              EMPTY INFORMATION COLLECTED
         B     IX09                GO TO RETURN
IX07     DS    0H
         LA    R1,IXANCHV(X3)      POINT TO APPROPRIATE ANCHOR
        $CALL  IXCLR               PURGE INFORMATION COLLECTED
         B     IX09                GO TO RETURN
         SPACE
IX09     DS    0H
        $EXIT  RC=0                AND RETURN TO CALLER
         SPACE
IXE003   DS    0H
         MVI   EFLAG003,ERRSET     OMITTED OPERAND
         B     IX09                GO TO RETURN
IXE005   DS    0H
         MVI   EFLAG005,ERRSET     INVALID OPERAND
         B     IX09                GO TO RETURN
IXE013   DS    0H
         MVI   EFLAG013,ERRSET     OPERAND TOO LONG
         B     IX09                GO TO RETURN
IXE014   DS    0H
         MVI   EFLAG014,ERRSET     OPERAND TOO SMALL
         B     IX09                GO TO RETURN
IXE015   DS    0H
         MVI   EFLAG015,ERRSET     MISMATCHED QUOTES
         B     IX09                GO TO RETURN
