***********************************************************************
*                                                                     *
*              .CS (CONDITIONAL SECTION) --- CONTROL                  *
*                                                                     *
***********************************************************************
         SPACE
CS      $ENTER ,
        $CALL  GETYESNO            GET AND TEST FIRST ARGUMENT
         BC    BOMIT,CSE003        ERROR IF OMITTED
         BC    BPOS,CS01           BRANCH IF POSITIVE
         BC    BNEG,CS02           BRANCH IF NEGATIVE
         ST    COUNT,ARGSTART      RESCAN FOR NUMERIC
        $CALL  GETNUM              GET FIRST NUMERIC ARGUMENT
         BC    BDNO,CSE005         ERROR IF INVALID
         LTR   COUNT,COUNT         ARGUMENT TOO SMALL .Q
         BNP   CSE014              ERROR IF YES
         LA    R1,L'CSTABLE        MAX VALUE +1
         CR    COUNT,R1            TOO BIG .Q
         BNL   CSE013              ERROR IF YES
         L     X1,CSTABAD          .CS TABLE ADDRESS
         AR    X1,COUNT            NTH INCLUDE ENTRY
         B     CS03                GO TO CHECK
         SPACE
CS01     DS    0H
         SR    COUNT,COUNT         DUMMY .CS 0 IGNORE/ON
         L     X1,CSTABAD          .CS TABLE ADDRESS FOR ZERO
         B     CS03                GO TO CHECK
CS02     DS    0H
         LNR   COUNT,COUNT         DUMMY .CS 0 INCLUDE/OFF
         L     X1,CSTABAD          .CS TABLE ADDRESS FOR ZERO
         SPACE
CS03     DS    0H
        $IFOFF SWITCHS,CSSWS,CS04  BRANCH IF NOT SKIPPING A SECTION
         CLI   L'CSTABLE(X1),X'FF' THIS SECTION BEING IGNORED .Q
         BNE   CS11                NO, GO AND RETURN
         SPACE
CS04     DS    0H
         LTR   COUNT,COUNT         A .CS N COMMAND .Q
         BP    CS06                BRANCH IF YES
         BM    CS05                BRANCH IF .CS INCLUDE/OFF
         SPACE
         MVI   0(X1),X'FF'         SET TO IGNORE ZEROTH ENTRY
         B     CS08                PROCESS 'ON'
         SPACE
CS05     DS    0H
         MVI   0(X1),X'00'         SET TO INCLUDE ZEROTH ENTRY
         B     CS09                PROCESS 'OFF'
         SPACE
CS06     DS    0H
        $CALL  GETYESNO            TEST FOR 'ON' OR 'OFF'
         BC    BOMIT,CSE003        ERROR IF OMITTED
         BC    BPOS,CS08           BRANCH IF 'ON'
         BC    BNEG,CS09           BRANCH IF 'OFF'
         CLI   YNRESULT,YNIGN      WAS OPERAND 'IGNORE' .Q
         BE    CS07                BRANCH IF YES
         CLI   YNRESULT,YNINC      WAS OPERAND 'INCLUDE' .Q
         BNE   CSE005              ERROR IF NOT
         SPACE
         MVI   0(X1),X'00'         SET TO INCLUDE NTH ENTRY
         B     CS11                GO AND RETURN
         SPACE
CS07     DS    0H
         MVI   0(X1),X'FF'         SET TO IGNORE NTH ENTRY
         B     CS11                GO AND RETURN
         SPACE
CS08     DS    0H
         MVC   L'CSTABLE(1,X1),0(X1)  CURRENT VAL IS INCLUDE VAL
         B    CS10                 SET CS SWITCH APPROPRIATELY
         SPACE
CS09     DS    0H
         MVI   L'CSTABLE(X1),X'00' RESET NTH CURRENTLY ON SWITCH
         SPACE
CS10     DS    0H
        $OFF   SWITCHS,CSSWS       RESET GLOBAL CS SWITCH
         L     X1,CSTABAD          RESET TABLE ADDRESS
         OC    L'CSTABLE(L'CSTABLE,X1),L'CSTABLE(X1)  ALL TO INCLUDE .Q
         BZ    CS11                RETURN NOW IF YES
        $ON    SWITCHS,CSSWS       ONE CODE SET TO IGNORE
CS11     DS    0H
        $EXIT  RC=0                RETURN TO NEXT LINE
         SPACE
CSE003   DS    0H
         MVI   EFLAG003,ERRSET     ARG OMITTED
         B     CS11                AND GO TO RETURN
CSE005   DS    0H
         MVI   EFLAG005,ERRSET     SET ERROR FLAG
         B     CS11                AND GO TO RETURN
CSE013   DS    0H
         MVI   EFLAG013,ERRSET     ARG TOO BIG FLAG
         B     CS11                AND GO TO RETURN
CSE014   DS    0H
         MVI   EFLAG014,ERRSET     ARG TOO SMALL FLAG
         B     CS11                AND GO TO RETURN
