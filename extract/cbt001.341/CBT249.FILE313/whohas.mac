*
*   WHOHAS WAS WRITTEN BY
*                             R P WENZEL
*                             OPTIMUM SYSTEMS INCORPORATED
*                             5615 FISHERS LANE
*                             ROCKVILLE, MARYLAND 20852
*                             (301) 468-1000 X232
*
*                             JUNE 4, 1976.
*
*)F FUNCTION -
*  THE WHOHAS COMMAND SHOWS WHO HAS A PARTICULAR DATA SET BY EXAMINING
*  THE QCB CHAIN.  EXCLUSIVE OR SHARED ENQ IS LISTED ALONG WITH
*  JOB- FOR JOBS, TSO- FOR TSO USERS OR STC- FOR STARTED TASKS.
*  THE MESSAGE - DATASET NOT IN USE - APPEARS IF NO JOB, TSO USER OR
*  STARTED TASK HAS ALLOCATED THE DATA SET.
*)X SYNTAX -
*         WHOHAS 'DATASET'
*  REQUIRED - 'DATASET'
*  DEFAULTS - NONE
*  ALIAS    - WH
*)O OPERANDS -
*  'DATASET' - SPECIFIES THE DATA SET NAME.
         EJECT
         MACRO
         REGS
         LCLA  &R
.R       AIF   (&R EQ 16).END
R&R      EQU   &R
&R       SETA  &R+1
         AGO   .R
.END     MEND
         EJECT
WHOHAS   CSECT
         REGS
         STM   R14,R12,12(R13)          STORE REGS
         LR    R12,R15                    SET UP PROGRAM BASE
         USING WHOHAS,R12
*
         BAL   R14,BEGIN
*
         BAL   R2,PRSE
*
         B     QCBSTART
*
RETURN   LR    R1,R13                   DYNAMIC AREA ADDRESS IN R1
         LA    R0,LDYNAMIC              SIZE OF AREA
         L     R13,4(R13)               PREVIOUS SAVE AREA
         LA    R1,0(R1)                 CLEAR TOP BYTE
         SVC   10                       FREEMAIN
         LM    R14,R12,12(R13)
         SR    R15,R15
         BR    R14
         EJECT
*  SUBROUTINE TO GET READY SET AND GO
*
BEGIN    LR    R10,R1        SAVE R1
         GETMAIN R,LV=LDYNAMIC          GET CORE
         LR    R11,R1
         USING WORKAREA,R11             SET UP ADDRESSABILITY
         LA    R9,SAVEAREA              CHAIN
         ST    R13,SAVEAREA+4             SAVE
         ST    R9,8(R13)                    AREAS
         LR    R13,R9
         LA    R2,LINE        POINT REG. 2 TO LINE
         LA    R3,1600        20 LINES OF 80 CHAR
         LA    R4,LINE        POINT REG. 2 TO LINE
         L     R5,PADCHAR     PAD CHAR IS C' '
         MVCL  R2,R4          BLANK OUT LINE
         MVC   LINE(20),=CL20'DATASET NOT IN USE'
         L     R2,16          CVT ->
         L     R2,556(R2)     ASVT->
         LA    R2,524(R2)     FIRST ASCB
         ST    R2,ASCBONE     SAVE IT
         BR    R14           RETURN
         EJECT
*  SUBROUTINE TO PARSE INPUT AND SET UP TO START
*
PRSE     EQU   *
         USING CPPL,R10
         LA    R9,PPLADDR         ADDRESSABILITY FOR PPL
         USING PPL,R9
         MVC   PPLUPT,CPPLUPT           UPT
         MVC   PPLECT,CPPLECT           ECT
         LA    R3,ECB
         ST    R3,PPLECB                ECB
         L     R3,PCLADDR
         ST    R3,PPLPCL                PCL
         LA    R3,PDLADDR               PDL ADDRESS
         ST    R3,PPLANS                ANSWER
         MVC   PPLCBUF,CPPLCBUF         CBUF
         LA    R1,PPLADDR
         LINK  EP=IKJPARS               GO PARSE
         LTR   R15,R15
         BZ    PRSE1
         TPUT  PRSERM,40
         B     RETURN
         DROP  R10
PRSE1    L     R10,PDLADDR
         USING IKJPARMD,R10
         L     R3,DSN         ADDR OF DSN
         LH    R4,DSN+4       LENGTH OF DSN
         LA    R10,LINE+16    ADDR OF LINE FOR PUTLINE
         LR    R5,R4          LENGTH OF DSN
         BCTR  R5,0           DECREMENT BY 1
         EX    R5,QCBLOCMV    MOVE DSN FOR LOCATE
         LOCATE INDAB
         LTR   R15,R15
         BZR   R2             GOOD
         TPUT  PRSELOC,16     NOTIFY
         BR    R2             AND CONTINUE
         DROP  R10
*
PRSERM   DC    CL16'PARSE ERROR'
PRSELOC  DC    CL16'CATALOG ERROR'
         EJECT
*  SUBROUTINE TO TEST IF APPROPRIATE HEADER HAS BEEN PRINTED
*             AND THEN PRINT CURRENT LINE
*
PUTLINE  LA    R6,LINE        ADDR OF LINE FOR TPUT
PUTLINE1 TPUT  (R6),80        OUTPUT LINE
         LA    R6,80(R6)      NEXT LINE
         CLI   0(R6),C' '     BLANK LINE
         BE    RETURN         YES GO HOME
         B     PUTLINE1
         EJECT
* SUBROUTINE TO FIND MAJOR QCB OF SYSDSN AND THEN
*            MINOR QCB OF DSN PASSED FROM PARSE
*            FINALLY FIND WHO HAS IT AND TELL.
*
QCBSTART L     R2,16          CVT ->
         L     R2,644(R2)     LAST MAJOR QCB FOR ENQ
         USING QCB,R2
QCBMAJLP CLC   MAJNAME,=CL8'SYSDSN' MAJOR NAME SYSDSN?
         BE    QCBMINOR      YES
         L     R2,MAJPMAJ    PREVIOUS MAJOR QCB
         B     QCBMAJLP      LOOK AGAIN
QCBMINOR L     R2,MAJLMIN    LAST MINOR QCB
         DROP  R2
         USING MIN,R2
         SR    R5,R5          CLEAR REG. 5
QCBLGCK  IC    R5,MINNAMEL    LENGTH OF MINOR NAME
         CR    R4,R5          ARE LENGTHS EQUAL
         BE    QCBCMPDS       YES
QCBMNRCK L     R2,MINPMIN     FIND PREVIOUS MINOR NAME
         LTR   R2,R2          ANY THERE
         BNZ   QCBLGCK        YES CHECK LENGTH
         B     PUTLINE        NO
QCBCMPDS BCTR  R5,0           DECREMENT BY 1 FRO CLC INST.
         EX    R5,QCBCMPRE     COMPARE DSN
         BNE   QCBMNRCK       NOT SAME GO FIND PREVIOUS MINOR NAME
         L     R4,MINFQEL     FIRST QEL ADDR
         USING QEL,R4
         MVC   LINE(20),=CL20'SHARED ENQ' MOVE DISP INTO LINE
         TM    QELQFLGS,QELSHARE DISP=SHR
         BO    QCBASID        ON GO FIND ASID
         MVC   LINE(20),=CL20'EXCLUSIVE ENQ' MOVE DISP INTO LINE
         EJECT
QCBASID  LH    R5,QELASID     ASID
         SLL   R5,2           MULT. BY 4
         A     R5,ASCBONE     OFFSET INTO ASVT
         L     R5,0(R5)       BEGINNIG OF ASCB
         USING ASCB,R5
         L     R6,ASCBJBNI    JOB NAME FOR INIT PGMS
         LTR   R6,R6          ZERO?
         BNZ   QCBJOB         YES GO TO QCBJES
         L     R6,ASCBCSCB    ASCBCSCB ->
         USING CSCB,R6
         LTR   R6,R6          ZERO?
         BZ    QCBSTC         YES SYSTEM TASK
         TM    CHPKE,CHTSID   TSO JOB?
         DROP  R6
         BO    QCBTSO         YES GO QCBTSO
QCBSTC   MVC   0(4,R10),=CL4'STC-' MOVE IN TSO
         L     R6,ASCBJBNS    MOVE ADDR INTO REG. 6
         MVC   4(8,R10),0(R6) MOVE IN JOBNAME
         LA    R10,16(R10)    INCREMENT REG. 11 BY 16
         B     QCBQELCK       SEE IF ANY MORE
QCBJOB   MVC   0(4,R10),=CL4'JOB-' MOVE IN JOB
         L     R6,ASCBJBNI    MOVE ADDR INTO REG. 6
         MVC   4(8,R10),0(R6) MOVE IN JOBNAME
         LA    R10,16(R10)    INCREMENT REG. 11 BY 16
         B     QCBQELCK       SEE IF ANY MORE
QCBTSO   MVC   0(4,R10),=CL4'TSO-' MOVE IN TSO
         L     R6,ASCBJBNS    MOVE ADDR INTO REG. 6
         MVC   4(8,R10),0(R6) MOVE IN JOBNAME
         LA    R10,16(R10)    INCREMENT REG. 11 BY 16
QCBQELCK L     R4,QELNQEL     NEXT QEL
         LTR   R4,R4          ANY MORE
         BZ    PUTLINE        NO
         B     QCBASID
*
QCBCMPRE CLC   MINNAME,0(R3) COMPARE DSNAME TO MINOR NAME
QCBLOCMV MVC   LOCDSN,0(R3) MOVE DSNAME FOR LOCATE
         EJECT
INDAB    CAMLST NAME,LOCDSN,,LOCAREA
LOCDSN   EQU   *
         DC    CL44' '
PCLADDR  DC    A(DSPPCL)
PADCHAR  DC    XL4'40000000'
         DS    0D
LOCAREA  DS    CL265
         LTORG
         EJECT
DSPPCL   IKJPARM
DSN      IKJPOSIT DSNAME,PROMPT='DATA SET NAME',USID
         IKJENDP
         EJECT
         IKJCPPL
         EJECT
         IKJPSCB
         EJECT
         IKJPPL
         EJECT
*   CSCB
CSCB     DSECT
         IEECHAIN
*   ASCB
         IHAASCB
         EJECT
*   QCB
         IHAQCB
*   QEL
         IHAQEL
         EJECT
WORKAREA DSECT
SAVEAREA DS    18F
ASCBONE  DS    A
ECB      DS    F
PDLADDR  DS    F
PPLADDR  DS    7F
LINE     DS    20CL80
LDYNAMIC EQU   *-WORKAREA
         END   WHOHAS
