 TITLE 'SUPER-LIST   UTILITY PROGRAM    MODIFIED 6/75 2/76 9/77     '
*              ********************************************************
*              *                                                      *
*              *              NOTES ON SUPERLIST UTILITY              *
*              *                                                      *
*              ********************************************************
*              *                                                      *
*              1)  DD CARDS REQUIRED                                  *
*              *   //SYSPRINT  DD  SYSOUT=A                           *
*              *   //DDN DD UNIT=DISK,DISP=OLD,VOLUME=SER=VOLSER      *
*              *    ANY NUMBER OF DD CARDS MAY BE INCLUDED DEFINING   *
*              *   SEPERATE VOLUMES.  A SEPERATE REPORT WILL BE       *
*              *   GENERATED FOR EACH VOLUME.  ANY DD NAME MAY BE     *
*              *   USED EXCEPT JOBLIB, STEPLIB, JOBCAT, STEPCAT,      *
*              *   SYSPRINT, SYSABEND, SYSUDUMP ETC. WHICH ARE        *
*              *   RESERVED FOR SPECIAL USE.                          *
*              *                                                      *
*              *------------------------------------------------------*
*              *                                                      *
*              2) PARM FIELD SCRATCH OPTION                           *
*              *   IF NO PARM IS PASSED TO THE PROGRAM, THE ENTIRE    *
*              *   VTOC WILL BE LISTED.  IF A PARM  IS PASSED, THE    *
*              *   CHARACTERS OF THE PARM WILL BE COMPARED WITH THE   *
*              *   FIRST GROUP OF THAT MANY CHARACTERS OF EACH        *
*              *   DSNAME ON EVERY VOLUME.  THOSE DSNAMES RESULTING   *
*              *   IN AN EQUAL COMPARE WILL BE SCRATCHED (EXCEPT      *
*              *    THE SYSOUT DATA SET, SYSCTLG, AND ANY SYS1. DATA  *
*              *   SETS), AND ALL WILL BE LISTED.                     *
*              *                                                      *
*              *------------------------------------------------------*
*              3) PARM FIELD 'ALL' OPTION                             *
*              *                                                      *
*              *   IF THE WORD 'ALL' IS INCLUDED IN THE PARM FIELD,   *
*              *   ALL DIRECT ACCESS VOLUMES WHICH ARE ONLINE AND     *
*              *   READY ARE SCANNED.  A SEPERATE REPORT IS GENERATED *
*              *   FOR EACH VOLUME AND THE SCRATCH OPTION, IF ALSO    *
*              *   SPECIFIED, WILL APPLY TO EVERY VOLUME.  ONLY ONE DD*
*              *   CARD NEED BE INCLUDED DEFINING A DIRECT ACCESS     *
*              *   VOLUME.  THIS DD DEFINITION IS USED AS A MODEL AND *
*              *   MODIFIED TO ALLOW OPENING TO EVERY READY VOLUME.   *
*              *                                                      *
*              *------------------------------------------------------*
*              *                                                      *
*              4) THE QUANTITIES ALLOC, USED, AND UNUSED ARE IN       *
*              *   TRACKS, AND INCLUDE ANY SECONDARY EXTENTS.  THE    *
*              *   QUANTITIES USED AND UNUSED APPLY ONLY TO           *
*              *   SEQUENTIAL OR PARTITIONED DATA SETS.  THE          *
*              *   QUANTITIES FIRST AND LAST REFER TO THE             *
*              *   RELATIVE (TO ZERO) BEGINNING AND ENDING TRACKS OF  *
*              *   ALL EXTENTS ON THE VOLUME.                         *
*              *                                                      *
*              ********************************************************
*              ********************************************************
*              ********************************************************
         EJECT
SUPRLIST CSECT
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         USING *,R12,R4,R3         INFORM ASM OF BASES
         SAVE  (14,12)             SAVE ENTRY REGSA
         LR    R12,R15             COPY FIRST BASE
         L     R4,BASECON          GET BUMP COUNT
         LR    R3,R4               COPY TO THIRD BASE
         AR    R4,R12              BUMP TO MAKE BASE2
         AR    R3,R4               BUMP TO MAKE BASE3
         BAL   R15,SKIPSAVE        AROUND SAVE AREA
SAVEAREA DC    18F'0'              SAVE AREA
BASECON  DC    A(4096)             BASE ADCON
SKIPSAVE ST    R15,8(R13)          BUMP FORWARD POINTER
         ST    R13,4(R15)          BACKWARD POINTER
         LR    R13,R15             SET SAVE REG
*
*  CHECK AND SAVE PARM INFORMATION
*
*
* THE FOLLOWING INSTRUCTIONS MAY BE REMOVED TO ELIMINATE NEED
*        FOR ANOTHER BASE REGISTER
*
         LTR   R1,R1               ANY PARM SPECIFIED
         BZ    SYSJ                IF NOT BYPASS
         L     R1,0(R1)            GET PARM ADDRESS
         LH    R10,0(R1)           GET LENGTH
         BCTR  R10,R0
         STC   R10,CMPRZ+1         SET IN COMPARE FOR SCRATCH
         LA    R10,2(R10)          INCREASE FOR MOVE TO SAVE AREA
         STC   R10,*+5             LENGTH IS PARM LENGTH PLUS 2 MINUS 1
         MVC   PARMSAV,0(R1)       SAVE PARM
         L     R1,16(R0)           LOAD ADDRESS OF CVT
         L     R1,160(0,R1)        LOAD ADDRESS OF HIGHEST PRIORITY TCB
         ST    R1,TCBADDR          STORE TCB ADDRESS
         LA    R5,PARMSAV-3        SET TO CHECK FOR 'ALL'
         AR    R5,R10              ADJUST LENGTH
         CLC   0(4,R5),=C',ALN'    ALL PACKS, NO PRINT
         BE    SETALN
         CLC   0(4,R5),=C',ALL'    ALL PACKS, PRINT ALL
         BE    SETALL
         CLC   0(4,R5),=C',NOP'    SELECTED PACKS, NO PRINT
         BNE   SYSJ                ASSUME SELECTED PACKS AND PRINT
         MVI   NOPRT,C'N'          SET NO PRINT SWITCH
         B     RESETLEN
SETALN   MVC   AN,=C'AN'           SET ALL AND NO PRINT SWITCH
         B     RESETLEN
SETALL   MVI   ALL,C'A'            SET FUNCTION ON
RESETLEN SH    R10,=H'6'           RESET COMPARE LENGTH
         STC   R10,CMPRZ+1
         LA    R10,1(R10)
         STH   R10,PARMSAV
*
*  ALL OPTION IN VS NEEDS SUPRVISOR MODE FOR TIOT MODIFICATION
*
         MODESET KEY=ZERO,MODE=SUP
*
*  READ SYSPRINT JFCB TO GET DSNAME FOR SCRATCH OPTION SAFEGUARD
*
SYSJ     OPEN  (PRTDCB,OUTPUT)     OPEN SYSOUT
         TM    PRTDCB+48,X'10'     CHECK SYSPRINT OPEN
         BZ    NOPT
*        CALL  DATETIME,(DATE1,TIME1)  CURRENT DATE AND TIME
         L     R1,16               CVT POINTER
         L     R1,40(R1)           UCB LOOKUP TABLE ADDRESS
         ST    R1,UCB              SAVE TABLE ADDRESS
         L     R1,16               CVT
         L     R1,0(R1)            TCB ADDRESSES
         L     R1,4(R1)            TCB ADDRESS THIS PARTITION
         L     R1,12(R1)           TIOT ADDRESS
         LA    R1,24(R1)           INCREMENT TO DD ENTRIES
*
*  SEARCH TIOT FOR DDNAMES DEFINING A DIRECT ACCESS DEVICE
*
         USING IHADCB,R7           ADDRESS DCB DSECT
CKTIOT   LA    R7,GODCB            ADDRESS DCB DESECT
         SR    R0,R0               CLEAR WORK REG
         IC    R0,0(R1)            GET LENGTH OF DD ENTRY
         LTR   R0,R0
         BZ    DDEND               END OF TIOT
         L     R15,16(R1)          GET UCB ADDRESS
         LA    R15,0(R15)
         LTR   R15,R15             CKECK FOR DUMMY
         BZ    INCRT               SKIP
*        USING IEFUCBOB,R15
         CLI   2(R15),X'FF'         VERIFY UCB
         BNE   DCELL
         TM    18(R15),X'20'       IS THIS D.A.S.D. ?
         BZ    INCRT
*        DROP  15
DCELL    CLC   4(8,R1),=C'SYSPRINT'  SKIP SYSPRINT DD NAME
         BE    INCRT
         CLC   4(8,R1),=CL8'JOBLIB'  SKIP THESE ENTRIES
         BE    INCRT
         CLC   4(8,R1),=CL8'JOBCAT'  SKIP THESE ENTRIES
         BE    INCRT
         CLC   4(8,R1),=CL8'STEPLIB'
         BE    INCRT
         CLC   4(8,R1),=CL8'STEPCAT'
         BE    INCRT
         CLC   4(8,R1),=C'PGM=*.DD'
         BE    INCRT
         CLC   4(8,R1),=C'SYSUDUMP'
         BE    INCRT
         CLC   4(8,R1),=C'SYSABEND'
         BE    INCRT
         ST    R1,SVCNT            SAVE POINTER
         MVC   DCBDDNAM(8),4(R1)   TAKE THIS ONE
         MVC   OUCB(2),18(R1)      SAVE UCB ADDRESS
         MVC   CURRUCB,16(R1)      SAVE CURRENT UCB POINTER
         CLI   ALL,C'A'            'ALL' FUNCTION SPECIFIED
         BE    READJFCB            YES
         AR    R1,R0               INCREMENT TO NEXT ENTRY
         ST    R1,SVCNT            SAVE
         B     READJFCB
INCRT    AR    R1,R0               INCREMENT
         B     CKTIOT              LOOP
*
*  CHECK UCBS AND MODIFY TIOT FOR 'ALL' PARM OPTION
*
UCBALL   L     R15,UCB             GET UCB TABLE CURRENT ADDRESS
         LA    R15,2(R15)          INCREMENT
         ST    R15,UCB             SAVE
         LH    R1,0(R15)           UCB ADDRESS
         LTR   R1,R1               SKIP ZERO ENTRIES
         BZ    UCBALL
         CH    R1,FFFF             END OF TABLE
         BNE   UCBA                NO
         L     R15,SVCNT           GET DD ENTRY ADDRESS
         MVC   18(2,R15),OUCB      RESTORE ORIGINAL UCB ADDRESS
         B     DDEND               ALL DONE
*        USING IEFUCBOB,R1
UCBA     CLI   2(R1),X'FF'         VERIFY UCBID
         BNE   UCBALL              SKIP
         TM    18(R1),X'20'        CHECK FOR D.A.S.D.
         BZ    UCBALL
         CLI   19(R1),X'05'        IS THIS A DATA CELL ?
         BE    UCBALL              IF SO, SKIP FOR ALL OPTION
         TM    3(R1),X'80'         IS IT OFFLINE
         BZ    UCBALL              YES, SKIP
         TM    6(R1),X'40'         IS IT NOT READY
         BNZ   UCBALL
         CLC   28(6,R1),=XL6'00'   IS A VOLUME MOUNTED
         BE    UCBALL
         MVC   JFVOLSER(6),28(R1)    SET NEW VOL-SER
         L     R15,SVCNT           GET TIOT ENTRY ADDRESS
         STH   R1,18(R15)          RESET UCB ADDRESS
         ST    R1,CURRUCB          SAVE CURRENT UCB POINTER
         B     RDJ2                GO TO OPEN
*
*  GET DDNAME, SET VTOC DSNAME, OPEN FILES
*
READJFCB RDJFCB  (GODCB)           READ IN JFCB FOR DIRECT ACCESS FILE
         CLC   JFCB(8),=C'SYSCTLG.'    IS DATA SET A CVOL
         BE    TESTDD              IF IT IS, GO TO TESTDD
         CLI   ALL,C'A'            CHECK FOR ALL OPTION
         BE    UCBALL
RDJ2     MVC   EXAMES(6),JFVOLSER  MOVE VOLUME SERIAL TO PRINT LINE
         MVC   JFCB(44),VTOCNAME   INSERT DSNAME OF VTOC INTO JFCB
         OPEN  (GODCB,INPUT),TYPE=J  NOW OPEN DCB SO AS TO READ VTOC
         LA    R7,GODCB            ADDRESS DCB DSECT
         TM    DCBOFLGS,X'10'      WAS OPEN OK (EG, WAS DDN PRESENT)
         BZ    TESTDD
*
*  GET CORE FOR EXTENT TABLE
*
ENT      EQU   68                  NUMBER OF BYTES SAVED PER EXTENT
         GETMAIN R,LV=8192         SAVE 8K FOR SYSTEM WORK
         LR    R5,R1
         GETMAIN VU,LA=ASK,A=RECEIVE  GET REMAINDER FOR ME
         LR    R1,R5
         FREEMAIN  R,LV=8192,A=(R1)  GIVE BACK 8K TO SYSTEM
         L     R5,RECEIVE          PICK UP ADDRESS OF GOTTEN CORE
         L     R6,RECEIVE+4        LENGTH OF AREA
         S     R6,=A(ENT)          DECREASE BY LENGTH OF 1 EXTENT
         S     R6,=A(ENT)          DECREASE BY LENGTH OF 1 EXTENT
*
*  SET DEVICE TYPE
*
CK2311   SR    R1,R1
         IC    R1,GODCB+17
         SH    R1,$DEVH
         MH    R1,$DEVL
         A     R1,=A(DEVTABLE)
         CLC   0(1,R1),GODCB+17
         BNE   ABEND
         MVC   CPT,2(R1)
         MVC   EXAMED(6),4(R1)     MOVE DEVICE TYPE TO PRINT
         L     R10,CURRUCB         PICK UP CURRENT UCB ADDRESS
         TM    17(R10),X'08'       CHECK FOR VIRTUAL VOLUME
         BNO   *+8                 IF NOT VIRTUAL, SKIP NEXT INST
         MVI   EXAMED+4,C'V'       MOVE V TO DEVICE TYPE
         MVC   DEVCODE,10(R1)      MOVE TYPE CODE TO DEVCODE
GONOW    BAL   R10,PRTHDR          PRINT HEADINGS
         ENQ   MF=(E,VTOCENQ)      LOCK OUT SYSTEM FOR ACCURATE VTOC
*                                  PIC
         BAL   R10,READ            READ FORMAT 4 DSCB
         CLI   NOPRT,C'N'          IS NO PRINT SWITCH ON
         BNE   FMT4
FMT1CHK  CLI   DSCBFMT,C'1'        CHECK FOR FORMAT 1 DSCB
         BE    CMPR
READIT   BAL   R10,READ            READ ANOTHER DSCB
         B     FMT1CHK
*
*   PRINT HEADINGS
*
PRTHDR   MVC   MSG(81),STRTMSX
         MVC   MSG+100(4),=C'DATE'  HEADINGS CONTAIN
         MVC   MSG+105(8),DATE1    DATE AND TIME
         MVI   MSG,C'1'            CONTAIN
         MVC   MSG+120(5),=C'PAGE '
         AP    PCTR,=P'1'
         UNPK  MSG+125(3),PCTR
         OI    MSG+127,X'F0'
         PUT   PRTDCB,MSG
         MVC   MSG+55(28),EXAMESX+11 MODIFY HEADING LINE
         MVC   MSG+100(4),=C'TIME'
         MVC   MSG+105(8),TIME1
         MVC   MSG+120(8),=C'        '  CLEAR PAGE COUNT AREA
         MVI   MSG,C' '            AND
         PUT   PRTDCB,MSG          TIME
         ZAP   LINES,=P'0'
         MVC   MSG+1(132),MSG      CLEAR MSG BUFFER
         BR    10
*
*  READ VTOC
*
READ     READ  DECB,SF,GODCB,DSCB  READ IN A DSCB
         CHECK DECB                ISSUE BSAM CHECK
         BR    10
*
*  OBTAIN DSCB USING LINK ADDRESS
*
RDLNK    CLC   DSCB+135(5),LINK    CHECK FOR LINK TO ITSELF
         BE    INVLK
         MVC   LINK,DSCB+135       SAVE LINK FIELD
         OBTAIN  OBTAIN            READ DSCB
         BR    10
*
*  SYSPRINT OUTPUT ROUTINE
*
PUT      PUT   PRTDCB,MSG
PUTC     MVI   MSG,X'40'
         MVC   MSG+1(132),MSG      CLEAR OUTPUT AREA
         AP    LINES,=P'1'
         CP    LINES,=P'55'
         BH    PUTD
         BR    10
PUTD     ST    R10,SAVE10          SAVE RETURN REG
         BAL   R10,PRTHDR          PRINT HEADINGS
         L     R10,SAVE10          RESTORE RETURN REG
         PUT   PRTDCB,MSG          PRINT BLANKS
         CLI   SHOFSWT,X'FF'       ON IF ACCT SUMARY
         BE    SHOF                PRINT SUMMARY HEADINDS
         MVC   MSG,EXAMESX         PRINT HEADER
         PUT   PRTDCB,MSG          WRITE
         MVI   MSG,C' '            CLEAR
         MVC   MSG+1(132),MSG      CLEAR MSG BUFFER
PUTE     EQU   *
         PUT   PRTDCB,MSG          PRINT BLANKS
         BR    10                  RETURN
SHOF     EQU   *                   REPEAT SUMARY HEADINS
         MVC   MSG(50),SUM
         MVC   MSG+25(32),EXAMESX+7 MODIFY HEADING LINE
         PUT   PRTDCB,MSG
         MVI   MSG,C' '
         MVC   MSG+1(132),MSG
         MVC   MSG(44),EXTNTMSG
         MVC   MSG+40(18),HEXMSG
         MVC   MSG+60(6),DS
         PUT   PRTDCB,MSG
         MVI   MSG,C' '
         MVC   MSG+1(132),MSG
         B     PUTE
SAVE10   DC    F'0'                SAVE AREA (R10)
*
*
*  CHECK FOR PARM SCRATCH OPTION
*
READDSCB CLC   PARMSAV(2),=H'0'    CHECK FOR PARM
         BE    GOGO
         CLI   DSCBFMT,C'2'        IS THIS ISAM DATA SET
         BE    REST                YES
         CLI   DSCBFMT,C'3'        IF FORMAT 3 DSCB
         BNE   CMPR
REST     LR    R1,R5               RESTORE ACTUAL DSNAME
         S     R1,=A(ENT)          DSNAME FROM SAVED EXTENTS
         MVC   DSCB(44),16(R1)
CMPR     CLC   PARM(3),=C'SYS'
         BE    CHKSYS
         CLI   PARM,X'00'
         BE    GOGO
         B     CMPRZ
CHKSYS   CLC   DSCB(3),=C'SYS'
         BNE   GOGO
         CLC   DSCB+8(2),=C'.T'
         BNE   GOGO
CMPRY    L     R1,TCBADDR          LOAD ADDRESS OF TCB
         L     R1,116(0,R1)        ADDRESS OF MASTER SCHEDULER TCB
NEXTTCB  L     R1,116(0,R1)        ADDRESS OF NEXT LOWER PRIORITY TCB
         LTR   R1,R1               IS THIS THE LAST TCB
         BZ    CMPRX               IF NO HIT ,THEN SCRATCH
         AP    CNT1,PLUS4          INITIALIZE COUNTER
         ST    R1,SAVEONE          SAVE R1
CHKTCB   TM    29(1),X'C0'         IS THE TERMINATOR ACTIVE?
         BZ    ISITLAST            BRANCH IF NOT
         CP    CNT1,PLUS0          CHECK COUNTER
         BZ    GOGO
         STIMER  WAIT,BINTVL=TIME
         SP    CNT1,MINUS1         SUBTRACT 1 FROM COUNTER
         B     CHKTCB
TIME     DC    F'0300'
PLUS4    DC    XL4'0000004C'
PLUS0    DC    XL4'0000000C'
MINUS1   DC    XL4'0000001D'
CNT1     DC    XL4'0000000C'
SAVEONE  DS    F
ISITLAST L     R1,SAVEONE          RESTORE R1
         L     R10,12(0,R1)        LOAD ADDRESS OF TIOT
         CLC   0(8,R10),DSCB+23    COMPARE JOBNAMES
         BE    GOGO                DON'T SCRATCH, JUST GET OUT
         B     NEXTTCB             GET ANOTHER TCB
CMPRZ    CLC   PARM,DSCB           COMPARE
         BNE   GOGO
CMPRX    CLC   DSCB(5),=C'SYS1.'   PROJECT SYSTEM DATE SETS
         BE    GOGO
         CLC   DSCB(7),=C'SYSCTLG'  PROTECT CATLG
         BE    GOGO
         MVC   DEVSER,JFVOLSER     MOVE IN VOL SERIAL
         ENQ   (QSYS,DSCB,,44,SYSTEM),RET=TEST  CHECK FOR OTHER USERS
         LTR   R15,R15
         BZ    SCRATCH
         CLI   3(15),X'08'         IS THIS JOB ENQUEUED ALREADY
         BNE   GOGO                YES, ALLOW SCRATCH
SCRATCH  DEQ   MF=(E,VTOCENQ)      RELEASE VTOC FOR SCRATCH
         SR    R0,R0
         SCRATCH CAMIT             SCRATCH DSCB
         ENQ   MF=(E,VTOCENQ)      GET IT BACK
         CLC   SEQ,=H'0'           SUCCESSFUL SCRATCH
         BNE   ERROR
         MVC   MSGNAM,DSCB
         MVI   MSG+1,C'*'
         MVC   RECFM(24),DELETED   MOVE IN DELETED MESSAGE
         BAL   R10,PUT
         BAL   R10,PUT             BLANK LINE
         B     RDB
*
*  DETERMINE DSCB TYPE
*
GOGO     CLC   DSCB+135(5),=XL5'00'  CHECK FOR LINK FIELD
         BE    RDB
         BAL   R10,RDLNK           READ DSCB LINKED TO
         CLI   NOPRT,C'N'          IS NO PRINT SWIRCH ON
         BE    FMT1CHK
         CLI   DSCBFMT,C'5'
         BE    TAG                 TAG FOR HEADER
         CLI   DSCBFMT,C'2'        FORMAT 2 DSCB
         BE    FMT2
         CLI   DSCBFMT,C'3'        FORMAT 3 DSCB
         BE    FMT3
         CLI   DSCBFMT,C'6'
         BE    FMT6
         B     ERROR
RDB      CLI   DSCB,C'5'           CHECK FOR TAGGED FMT5
         BNE   GET
         CLI   NOPRT,C'N'          IS NO PRINT SWITCH ON
         BE    GET
         MVC   MSG,EXAMESX         PRINT HEADING
         BAL   R10,PUT
GET      BAL   R10,READ            READ DSCB
         CLI   NOPRT,C'N'          IS NO PRINT SWITCH ON
         BE    FMT1CHK
         CLI   DSCBFMT,C'6'        FORMAT 6 DSCB
         BE    FMT6
         CLI   DSCBFMT,C'1'        IS THIS A TYPE 1 DSCB
         BNE   RDB
         BAL   R10,PUT             PRINT DATASET TOTALS
         MVI   MSG+1,C'-'        FILL LINE WITH DASHES
         MVC   MSG+2(131),MSG+1    DO IT ALL
         BAL   R10,PUT
*
*  SET RECFM, DSORG, LRECL, BLKSIZE
*
         MVC   MSGNAM,DSCB
         MVC   CATLGHLD,DSCB       SAVE DSN FOR CATALOG CHECK
         MVC   LSTBLK,LAST         SAVE NUMBER OF TRACKS USED
         MVC   ISAMSVE,DSCB+90
NOMOD    TM    DSCBORG,X'80'
         BNO   TM2
         MVC   MSGDSTY,=C'INDSEQ'
         B     DATES
TM2      TM    DSCBORG,X'40'
         BNO   TM3
         MVC   MSGDSTY,=C'SEQUEN'
         B     DATES
TM3      TM    DSCBORG,X'20'
         BNO   TM4
         MVC   MSGDSTY,=C'DIRECT'
         B     DATES
TM4      TM    DSCBORG,X'02'
         BNO   ORGERR
         MVC   MSGDSTY,=C'PARTND'
         B     DATES
ORGERR   MVC   MSGDSTY,=C'UNDEFD'
DATES    SR    R10,R10
         LA    R2,RECFM
         TM    DSCBRCFM,X'C0'      UNDEF
         BNO   XX1
         MVI   0(R2),C'U'
         LA    R2,1(R2)
         B     XX3
XX1      TM    DSCBRCFM,X'80'      FIXED
         BNO   XX2
         MVI   0(R2),C'F'
         LA    R2,1(R2)
         B     XX3
XX2      MVI   0(R2),C'V'
         LA    R2,1(R2)
XX3      TM    DSCBRCFM,X'20'      TK OVLOW
         BNO   XX4
         MVI   0(R2),C'T'
         LA    R2,1(R2)
XX4      TM    DSCBRCFM,X'10'      BLOCKED
         BNO   XX5
         MVI   0(R2),C'B'
         LA    R2,1(R2)
XX5      TM    DSCBRCFM,X'08'      STANDARD
         BNO   XX6
         MVI   0(R2),C'S'
         LA    R2,1(R2)
XX6      TM    DSCBRCFM,X'04'      ASA  CC
         BNO   XX7
         MVI   0(R2),C'A'
         LA    R2,1(R2)
XX7      TM    DSCBRCFM,X'02'      MACHINE
         BNO   XX8
         MVI   0(R2),C'M'
         LA    R2,1(R2)
XX8      C     R2,RECAD
         BE    XX9
         MVI   0(2),X'40'
         LA    R2,1(R2)
         B     XX8
XX9      XC    WK4,WK4
         MVC   WK2,LRECLD
         L     R10,WK4
         CVD   R10,PACK
         MVC   LRECL,ED6
         ED    LRECL,PACK+5
         MVC   WK2,BLKLD
         L     R10,WK4
         CVD   R10,PACK
         MVC   BLKSZ,ED6
         ED    BLKSZ,PACK+5
*
*  EXPIRATION DATE, SERIAL, SECONDARY ALLOCATION
*
DATE     SR    R10,R10
         IC    R10,DSCBCDAT
         CVD   R10,PACK
         UNPK  MSGCREA(2),PACK
         OI    MSGCREA+1,X'F0'
         MVI   MSGCREA+2,C'.'
         MVC   WK2,DSCBCDAT+1
         L     R10,WK4
         CVD   R10,PACK
         UNPK  MSGCREA+3(3),PACK
         OI    MSGCREA+5,X'F0'
         SR    R10,R10
         IC    R10,DSCBEDAT
         CVD   R10,PACK
         UNPK  MSGPURG(2),PACK
         OI    MSGPURG+1,X'F0'
         MVI   MSGPURG+2,C'.'
         MVC   WK2,DSCBEDAT+1
         L     R10,WK4
         CVD   R10,PACK
         UNPK  MSGPURG+3(3),PACK
         OI    MSGPURG+5,X'F0'
SER      MVC   SERIAL,DSCB+45      SERIAL NUMBER
CYLS     TM    SECAL,X'C0'
         BNO   BLOCKS
         MVC   TYPSEC,=C'CYLS  '
         B     WRIT
BLOCKS   TM    SECAL,X'40'
         BZ    TRKS
         MVC   TYPSEC,=C'BLOCKS'   TYPE OF SECONDARY ALLOCATION
         B     WRIT
TRKS     TM    SECAL,X'80'
         BZ    NONE
         MVC   TYPSEC,=C'TRACKS'
         B     WRIT
NONE     MVC   TYPSEC(6),=C'NONE  '
         B     WRITE
WRIT     LH    R10,SECAL+2         SECONDARY ALLOCATION
         LTR   R10,R10
         BZ    NONE
         CVD   R10,PACK
         MVC   NUMBER,ED6
         ED    NUMBER,PACK+5
WRITE    CLI   DSCBFMT,C'1'        FORMAT ONE DSCB?
         BNE   NOMDL               NO, CANT BE A MODEL
         CLI   EXT1,X'00'          ANY SPACE ASSIGNED?
         BNE   NOMDL               YES, CANT BE A MODEL DSCB
         MVC   MSG+110(22),MDLMSG  ID FOR MODEL DSCB
         BAL   R10,PUT             WRITE OUT DATA LINE
         B     READDSCB            GET NEXT DATASET
NOMDL    BAL   R10,PUT             WRITE OUT DATA LINE
         B     EXTNT               GO PROCESS DATASET EXTENTS
*
*  TRACKS ALLOCATED, USED, UNUSED, PERCENT
*
EXTNT    MVC   MSG(44),EXTNTMSG    HEADER
         BAL   R10,PUT
         CLI   DSCBFMT,C'3'        FMT3
         BNE   FT1
         LA    R8,DSCB+4
         B     NXT
FT1      LA    R8,DSCB+105
NXT      CLI   0(8),R0             NO MORE EXTENTS
         BNZ   FT4
         SP    COUNT1,COUNT1
         CLI   DSCBFMT,C'4'
         BE    GET5
PTALOC   CLC   DSCB+135(5),=XL5'00'  END OF DATA SET EXTENTS
         BNE   GOGO
         L     R9,ALCSAV           LOAD TOTAL ALLOCATED
         SR    R10,R10
         ST    R10,ALCSAV          CLEAR FOR NEXT DATA SET
         L     R10,ALLOC
         AR    R10,R9
         ST    R10,ALLOC
         CVD   R9,PACK
         MVC   MSGALLOC,ED6
         ED    MSGALLOC,PACK+5
         LH    R8,LSTBLK
         L     R10,USED
         AR    R10,R8
         ST    R10,USED
         CVD   R8,PACK
         MVC   MSGUSED,ED6
         ED    MSGUSED,PACK+5
         SR    R0,R0               CALCULATE PERC USED
         LR    R1,R8
         MH    R1,=H'100'
         LTR   R9,R9
         BZ    *+6
         DR    R0,R9
         SLL   R0,R1               DOUBLE REMAINDER
         CR    R0,R9               CHECK FOR OVER HALF
         BL    UNDR
         LA    R1,1(R1)
UNDR     CVD   R1,PACK
         MVC   MSGPCT(6),ED6
         ED    MSGPCT(6),PACK+5
         SR    R9,R8
         L     R10,UNUSED
         AR    R10,R9
         ST    R10,UNUSED
         CVD   R9,PACK
         MVC   MSGUNUS,ED6
         ED    MSGUNUS,PACK+5
*
*        SEARCH THE CATALOG FOR THE NAMED DATASET
*        INDICATE IF CATALOGED CORRECTLY OR NOT
*
         B     NOLOC          BYPASS CATALOG SEARCH *****************
         CLC   CATLGHLD(5),=C'SYS1.'  IF SYS1
         BE    LOCATEC             BYPASS NEXT TEST
         CLC   CATLGHLD(3),=C'SYS'  IF TEMPORARY DSNAME
         BE    NOLOC               BYPASS
LOCATEC  LOCATE  CKCATLG           CHECK CATALOG
         CH    R15,=H'0'           ZERO IF FOUND
         BNE   NOLOC               NOT FOUND
         CLC   EXAMESX+18(6),CATVLST+6  CATALOGED TO THIS VOLUME
         BNE   NOLOC               NO
         MVC   MSG+1(17),=C'*** CATALOGED ***'  INFORM
NOLOC    EQU   *
         B     READDSCB
GET5     BAL   R10,READ            GET FIRST FMT5
         XC    ALCSAV,ALCSAV
TAG      MVI   DSCB,C'5'           TAG FOR HEADING
         B     FMT5
FT4      CLI   DSCBFMT,C'4'        CHECK FOR VTOC
         BNE   DATA
         MVC   TYPE(4),=C'VTOC'
         B     NUMCT
DATA     TM    0(8),R1             DATA
         BZ    OVFLW
         MVC   TYPE(4),=C'DATA'
         B     NUM
OVFLW    TM    0(8),R2             OVERFLOW AREA
         BZ    INDEX
         MVC   TYPE(8),=C'OVERFLOW'
         B     NUM
INDEX    TM    0(8),R4             INDEX AREA
         BZ    NUM
         MVC   TYPE(5),=C'INDEX'
NUM      CLI   0(8),X'80'
         BNE   CONTIG
         MVC   TYPE(9),=C'SPLIT CYL'
         B     NUMCT
CONTIG   CLI   0(8),X'81'
         BNE   NUMCT
         MVC   TYPE+5(6),=C'CONTIG'
*
*  FORMAT OUT EACH EXTENT, FIRST, LAST, LENGTH, TYPE
*
NUMCT    SR    R9,R9
         IC    R9,1(R8)
         CVD   R9,PACK
         UNPK  EXTENT(2),PACK      EXTENT NUMBER
         OI    EXTENT+1,X'F0'
         CLC   EXAMED(4),=C'2321'  CHECK FOR 2321
         BNE   NOCELL
         SR    R9,R9
         SR    R10,R10
         IC    R9,2(R8)            GET SUBCELL NUMBER
         MH    R9,=H'1000'
         IC    R10,3(R8)           STRIP
         MH    R10,=H'100'
         AR    R9,R10
         SR    R10,R10
         IC    R10,4(R8)           CYL
         MH    R10,=H'20'
         AR    R9,R10
         SR    R10,R10
         IC    R10,5(R8)           HEAD
         AR    R9,R10              FIRST TRACK
         SR    R10,R10
         SR    R0,R0
         IC    R10,6(R8)           SUBCELL
         MH    R10,=H'1000'
         IC    R0,7(R8)            STRIP
         MH    R0,=H'100'
         AR    R10,R0
         SR    R0,R0
         IC    R0,8(R8)            CYL
         MH    R0,=H'20'
         AR    R10,R0
         SR    R0,R0
         IC    R0,9(R8)            HEAD
         AR    R10,R0
         B     ACEL
NOCELL   MVC   WK2,2(R8)           FIRST TRACK
         LH    R9,WK2
         MH    R9,CPT
         MVC   WK2,4(R8)
         AH    R9,WK2
         MVC   WK2,6(R8)           LAST TRACK
         LH    R10,WK2
         MH    R10,CPT
         MVC   WK2,8(R8)
         AH    R10,WK2
ACEL     CVD   R9,PACK
         MVC   FIRST(6),ED6
         ED    FIRST(6),PACK+5
         CVD   R10,PACK
         MVC   LSTK(6),ED6
         ED    LSTK(6),PACK+5
         SR    R10,R9              LENGTH IN TRACKS
         LA    R10,1(R10)
         L     R9,ALCSAV           ACCUMULATE TRACKS ALLOCATED
         AR    R9,R10
         ST    R9,ALCSAV
         CVD   R10,PACK
         MVC   LENGTH(6),ED6
         ED    LENGTH(6),PACK+5
         BAL   R10,SAVEXT          SAVE EXTENT
         BAL   R10,PUT
         CLI   DSCBFMT,C'1'
         BNE   INCR8
         CP    COUNT1,=P'2'
         BL    COUNTAD
         SP    COUNT1,COUNT1
         B     PTALOC
COUNTAD  AP    COUNT1,=P'1'
INCR8    EQU   *
         LA    R8,10(R8)           MOVE TO NEXT EXTENT
         CLI   0(8),C'3'
         BNE   *+8
         LA    R8,1(R8)            JUMP OVER ID
         B     NXT
SETUP    LTR   R8,R8               NO PRINT IF ZERO
         BZ    SETINC
         CVD   R8,PACK
         MVC   AMT(8),ED8
         ED    AMT(8),PACK+4
         MVC   FIRST(50),0(R7)     MOVE IN DESCRIPTION
         BAL   R10,PUT
SETINC   LA    R7,50(R7)
         BR    9
*
*  SET UP FORMAT 2 DSCB (ISAM)
*
FMT2     MVC   MSG+12(22),FORMAT2     DSNAME LINE
         BAL   R10,PUT
         SR    R8,R8
         LA    R7,ISAM1            POINT TO DESC LINE
         IC    R8,DSCB+45          INDEX LEVELS
         BAL   R9,SETUP
         IC    R8,DSCB+46          TRKS OF MASTER INDEX
         BAL   R9,SETUP
         IC    R8,DSCB+52          TRKS CYL OVERFLOW
         BAL   R9,SETUP
         MVC   WK2,DSCB+59         RECORDS TO BE DELETED
         LH    R8,WK2
         BAL   R9,SETUP
         MVC   WK3,DSCB+61         RANDOM REF TO OVERFLOW
         L     R8,WK4
         BAL   R9,SETUP
         LH    R8,DSCB+64          CORE BYTES TO HOLD HIGHEST INDEX
         BAL   R9,SETUP
         SR    R8,R8
         IC    R8,DSCB+66          TRKS OF HIGHEST INDEX
         BAL   R9,SETUP
         MVC   WK4,DSCB+67         RECORDS OF PRIME DATA
         L     R8,WK4
         BAL   R9,SETUP
         LH    R8,DSCB+124         RCDS LEFT ON OVERFLOW TRACK
         BAL   R9,SETUP
         LH    R8,DSCB+126         TRKS LEFT IN OVERFLOW AREA
         BAL   R9,SETUP
         LH    R8,DSCB+128         RCDS IN OVERFLOW AREA
         BAL   R9,SETUP
         LH    R8,DSCB+130         CYLS OF OVERFLOW AREA
         BAL   R9,SETUP
         SR    R8,R8
         IC    R8,ISAMSVE+1        RELATIVE KEY POSITION
         BAL   R9,SETUP
         IC    R8,ISAMSVE          KEY LENGTH
         B     PTALOC
FMT3     MVC   MSG+12(22),FORMAT3
         B     WRITE
*
*  ANALYZE FORMAT 4 DSCB (VTOC)
*
FMT4     MVC   MSG+12(22),FORMAT4
         BAL   R10,PUT             PRINT HEADER
         LH    R8,DSCB+62          NO. OF LOGICAL CYLINDERS
         CVD   R8,PACK
         MVC   NUMCYL(6),ED6
         ED    NUMCYL(6),PACK+5
         MH    R8,DSCB+64          GET TOTAL TRACKS ON VOL
         CVD   R8,PACK
         CVD   R8,PACKHLD          SAVE TOTAL FOR LATER CALC
         LH    R8,DSCB+64          TRKS. PER CYLINDER
         CVD   R8,PACK
         MVC   TRKCYL(6),ED6
         ED    TRKCYL(6),PACK+5
         LH    R8,DSCB+66          TRK LENGTH
         CVD   R8,PACK
         MVC   TRKLN(6),ED6
         ED    TRKLN(6),PACK+5
         SR    R8,R8
         IC    R8,DSCB+74          FULL DSCBS PER TRACK
         CVD   R8,PACK
         MVC   DBTRK(6),ED6
         ED    DBTRK(6),PACK+5
         IC    R8,DSCB+75          FULL DIRECTORY BLOCKS PER TRACK
         CVD   R8,PACK
         MVC   PDSTK(6),ED6
         ED    PDSTK(6),PACK+5
         LH    R8,DSCB+56          NO. AVAILABLE ALT TRACKS
         CVD   R8,PACK
         MVC   ALTTRK(6),ED6
         ED    ALTTRK(6),PACK+5
         SP    PACKHLD,PACK        GET TOTAL TRKS MINUS ALT TRKS
         UNPK  HIGHTRK(5),PACKHLD+5(R3)  STORE TRAK TOTAL
         OI    HIGHTRK+4,C'0'      CONVERT LAST CHAR TOO
         LH    R8,DSCB+50          NO. AVAILABLE FORMAT 0 DSCBS
         CVD   R8,PACK
         MVC   AVLDSCB(6),ED6
         ED    AVLDSCB(6),PACK+5
         LH    R8,DSCB+54          NEXT ALT TRK HH
         CVD   R8,PACK
         MVC   NXTALT(6),ED6
         ED    NXTALT(6),PACK+5
         LH    R8,DSCB+52          NEXT ALT TRK CC
         CVD   R8,PACK
         MVC   NXTALTC(6),ED6
         ED    NXTALTC(6),PACK+5
         MVC   MSG,FMT41
         BAL   R10,PUT
         MVC   MSG,FMT42
         BAL   R10,PUT
         B     WRITE
*
*  ANALYZE FORMAT 6 DSCB (SPLIT CYLINDER ALLOCATION)
*
FMT6     BAL   R10,PUT             SET SEPERATOR LINE
         MVI   MSG+1,C'-'        FILL LINE WITH DASHES
         MVC   MSG+2(131),MSG+1    DO IT ALL
         BAL   R10,PUT
         MVC   MSG+12(22),FORMAT6
         BAL   R10,PUT
         B     FMTP
*
*  ANALYZE FORMAT 5 DSCB (FREE SPACE)
*
FMT5     MVC   MSG+12(22),FORMAT5     DSNAME LINE
         BAL   R10,PUT
         CLC   LINK,=XL5'00'       CHECK FOR FIRST FORMAT 5
         BNE   FMTP1
FMTP     MVC   MSG(44),EXTNTMSG    HEADER
         MVC   MSG+40(32),FREESP
         CLI   DSCBFMT,C'6'
         BNE   FMTPA
         MVC   MSG+40(10),=CL10' '
         MVC   MSG+64(9),=C'DATA SETS'
FMTPA    BAL   R10,PUT
         SR    R2,R2
FMTP1    SR    R7,R7
         SR    R11,R11
         LA    R8,DSCB+4
NXT5     MVC   WK2,0(R8)           RELATIVE BEGINNING TRACK
         LH    R9,WK2
         C     R8,=A(DSCB+4)       ALWAYS ONE EXTENT
         BE    RLZ5
         LTR   R9,R9
         BZ    TOTN6               NO MORE EXTENTS
RLZ5     CVD   R9,PACK
         MVC   FIRST(6),ED6
         ED    FIRST(6),PACK+5
         MVC   WK2,2(R8)           NO. OF FULL CYLINDERS
         LH    R10,WK2
         CVD   R10,PACK
         MVC   FULLCYL(6),ED6
         ED    FULLCYL(6),PACK+5
         MH    R10,CPT
         IC    R11,4(R8)           EXTRA TRACKS
         CVD   R11,PACK
         MVC   EXTRK(6),ED6
         ED    EXTRK(6),PACK+5
         CLI   DSCBFMT,C'6'
         BE    *+6
         AR    R10,R11
         CVD   R10,PACK
         MVC   LENGTH(6),ED6       LENGTH
         ED    LENGTH(6),PACK+5
         AR    R2,R10
         AR    R9,R10              LAST TRACK
         BCTR  R9,R0
         CVD   R9,PACK
         MVC   LSTK(6),ED6
         ED    LSTK(6),PACK+5
         CVD   R7,PACK             EXTENT NO.
         UNPK  EXTENT(2),PACK
         OI    EXTENT+1,X'F0'
         LTR   R10,R10             IS IT AN EMPTY FORMAT5
         BZ    SKIP5               BRANCH IF YES
         BAL   R10,SAVEXT
         BAL   R10,PUT
SKIP5    MVI   MSG,C' '
         MVC   MSG+1(132),MSG
         LA    R7,1(R7)
         C     R7,=F'8'            SKIP BYTE IN MIDDLE
         BNE   *+8
         LA    R8,1(R8)
         LA    R8,5(R8)
         C     R7,=F'26'           END OF DSCB
         BNE   NXT5
         B     GOGO
TOTN6    CLI   DSCBFMT,C'6'
         BE    READDSCB
TOT5     CVD   R2,PACK             TOTAL FREE SPACE
         ST    R2,TOTFR            SAVE NO OF FREE TRACKS
         MVC   LENGTH(6),ED6
         ED    LENGTH(6),PACK+5
         MVC   LENGTH+10(10),=C'TOTAL TRKS'
         BAL   R10,PUT
         B     READDSCB
*
*  SAVE EXTENT INFORMATION FOR SPACE ACCOUNTING SUMMARY
*
SAVEXT   MVC   0(2,R5),EXTENT      MOVE EXTENT TO SAVE AREA
         MVC   2(5,R5),FIRST+1
         MVC   7(5,R5),LSTK+1
         MVC   12(4,R5),LENGTH+2
         MVC   60(8,R5),2(R8)      SAVE HEX CCHHCCHH
         CLI   DSCBFMT,C'1'        OTHER THAN FMT 1
         BNE   NOTONE
         MVC   16(44,R5),DSCB      MOVE IN DSNAME
         B     INDX
NOTONE   CLI   DSCBFMT,C'3'
         BNE   CK4
         LR    R1,R5
         S     R1,=A(ENT)          GET DSNAME FROM PREVIOUS EXTENT
         MVC   16(44,R5),16(R1)
         B     INDX
CK4      CLI   DSCBFMT,C'4'
         BNE   CK5
         MVC   16(22,R5),=CL22' *** VTOC'
         B     PAD
CK5      CLI   DSCBFMT,C'5'
         BNE   CK6
         MVC   16(22,R5),=CL22' *** FREE SPACE'
         B     PAD
CK6      CLI   DSCBFMT,C'6'
         BNE   0(R10)
         MVC   16(22,R5),FORMAT6
PAD      MVC   38(22,R5),=22C' '   PAD WITH BLANKS
INDX     CLC   2(5,R5),HIGHTRK     IS EXT START VALID?
         BH    INDXERR             NO, INFORM USER
         CLC   7(5,R5),HIGHTRK     IS EXT END VALID?
         BNH   INDXBUMP            YES, CONTINUE
INDXERR  ST    R10,SAVE10          SAVE RETURN REG
         BAL   R10,PUT             WRITE THE BAD EXTENT
         MVC   MSG(50),INDXMSG     MOVE ERROR MESSAGE
         BAL   R10,PUT             WRITE ERROR MESSAGE
         L     R10,SAVE10          RESTORE RETURN REG
         BR    R10                 RETURN TO CALLER
INDXBUMP LA    R5,ENT(R5)          INCREMENT AREA POINTER
         S     R6,=A(ENT)          REDUCE LENGTH COUNT
         BP    0(R10)              RETURN IF OK
         MVC   MSG(50),COREMSG     NOT ENOUGH CORE MSG
         BAL   R10,PUT
ABEND    DS    0H
         ABEND 999,DUMP
*
*  END OF VTOC, GET TOTALS USED, UNUSED, AND PER CENT
*
NOMORE   DEQ   MF=(E,VTOCENQ)      RELEASE VTOC TO SYSTEM
         CLOSE (GODCB)             NO MORE DSCB'S
         XC    LINK,LINK
         CLI   NOPRT,C'N'          IS NO PRINT SWITCH ON
         BE    DUMMYFE
         BAL   R10,PUT
         MVI   MSG+1,C'-'        FILL LINE WITH DASHES
         MVC   MSG+2(131),MSG+1    DO IT ALL
         BAL   R10,PUT             PRINT DASH LINE
         L     R10,ALLOC
         SR    R0,R0
         L     R1,TOTFR            GET TOTAL FREE TRACKS
         LTR   R1,R1               NO FREE TRACKS
         BZ    UNDRT
         AR    R1,R10              ADD TOTAL ALLOC
         ST    R1,TOTFR
         L     R1,USED
         MH    R1,=H'100'          CALC PERCENT USED
         D     R0,TOTFR
         SLL   R0,R1
         C     R0,TOTFR
         BL    UNDRT
         LA    R1,1(R1)            INC IF OVER HALF
UNDRT    CVD   R1,PACK
         MVC   TOTPCT(6),ED6
         ED    TOTPCT(6),PACK+5
         CVD   R10,PACK
         MVC   TOTALLOC,ED6
         ED    TOTALLOC,PACK+5
         L     R10,USED
         CVD   R10,PACK
         MVC   TOTUSED,ED6
         ED    TOTUSED,PACK+5
         L     R10,UNUSED
         CVD   R10,PACK
         MVC   TOTUNUS,ED6
         ED    TOTUNUS,PACK+5
         MVC   MSG,TOTLIN          PRINT TOTALS
         MVI   SHOFSWT,X'FF'       TURN ON  SPECIAL HOF SWITCH
         AP    LINES,=P'99'        FORCE EJECT
         BAL   R10,PUT
         SR    R10,R10             ZERO TOTALS
         ST    R10,ALLOC
         ST    R10,USED
         ST    R10,UNUSED
*
*  PRINT SPACE ACCOUNTING SUMMARY IN ORDER OF EXTENTS
*
*        MVC   MSG(50),SUM         ACCOUNTING SUMMARY MSG
*        MVC   MSG+25(30),EXAMESX+7
*        BAL   R10,PUT
*        MVC   MSG(44),EXTNTMSG    HEADER
*        MVC   MSG+40(18),HEXMSG
*        MVC   MSG+60(6),DS
*        MVI   SHOFSWT,X'FF'       TURN ON  SPECIAL HOF SWITCH
*        BAL   R10,PUT
*        MVC   MSG(82),VOLABEL
         BAL   R10,PUT             PRINT VOLUME LABEL EXTENT
DUMMYFE  MVC   0(10,R5),=10X'FF'   DUMMY FINAL ENTRY
         MVC   2(5,R5),HIGHTRK     GET HIGH TRK ON VALUME
         ZAP   EXTOT,=P'0'
         MVC   HIGH,=5C'0'         SET HIGH POINTER TO ZERO
TRYSORT  L     R5,RECEIVE          SET TO BEGINNING OF LIST
         MVI   SORTSW,X'00'        CLEAR SORT SW
         CLI   NOPRT,C'N'          IS NO PRINT SWITCH ON
         BE    FREEIT
SCMP     CLC   2(5,R5),ENT+2(R5)   COMPARE TWO ENTRIES
         BE    SCMPF6              SHOULD ONLY OCCUR ON FMT6
         BH    REV
SCMPND   CLI   ENT(5),X'FF'        END OF LIST
         BE    EOLIST              GO TO PRINT LIST
         LA    R5,ENT(R5)          MOVE TO NEXT ENTRY
         B     SCMP                LOOP
SCMPF6   CLC   7(5,R5),ENT+7(R5)   MAKE HIGH TO LOW IF EQUAL
         BNL   SCMPND
REV      XC    0(ENT,R5),ENT(R5)   EXCHANGE ENTRIES
         XC    ENT(ENT,R5),0(R5)
         XC    0(ENT,R5),ENT(R5)
         MVI   SORTSW,X'FF'        SORT STILL NEEDED
         B     SCMPND              RET
EOLIST   CLI   SORTSW,X'00'        IS SORT COMPLETE
         BNE   TRYSORT             TRY AGAIN
         L     R5,RECEIVE          RESET TO FRONT OF LIST
PRT1     MVC   LOWEST,2(R5)        SET INITIAL LOW
         CLI   FMT6SW,C'6'         SKIP VALIDITY CHECK SINCE
         BE    OKEXT               SPLIT ALLOCATION WILL OVERLAP
         OC    HIGH,=5C'0'         GUARANTEE NUMERIC ZONES
         OC    LOWEST,=5C'0'
         PACK  HIGH,HIGH
         PACK  LOWEST,LOWEST
         AP    HIGH,=P'1'
         CP    HIGH,LOWEST         OF NEXT EXTENT
         BE    OKEXT               NO PROBLEM
         BL    GAP
         SP    HIGH,LOWEST         OVERLAP
         MVC   ABMES+23(8),=C'-OVERLAP'
         B     ABAMT
GAP      SP    LOWEST,HIGH         CALCULATE GAP
         MVC   HIGH,LOWEST         RESET
         MVC   ABMES+23(8),=CL8' - GAP'
ABAMT    MVC   MSG(50),ABMES       PRINT OVERLAP OR GAP
         MVC   LENGTH(6),ED6
         ED    LENGTH(6),HIGH+2
         BAL   R10,PUT
OKEXT    CLC   FMT6HI(5),2(R5)     STILL UNDER FORMAT 6 EXTENT
         BNL   *+8
         MVI   FMT6SW,C'0'         NO, RESET SW
         CLI   0(5),X'FF'          END OF EXTENTS
         BE    FINISLP
         MVC   EXTENT(2),0(R5)     EXTENT
         MVC   FIRST+1(5),2(R5)    FIRST
         MVC   LSTK+1(5),7(R5)     LAST
         MVC   LENGTH+2(4),12(R5)  LENGTH
         CLI   FMT6SW,C'6'         UNDER FMT 6
         BE    TOTSK               SKIP ACCUM TOTAL
         OC    12(4,R5),=5C'0'
         CLC   16(22,R5),FORMAT6   IS THIS FROMT 6
         BNE   PACKL
         MVI   FMT6SW,C'6'         YES, SET SW
         MVC   FMT6HI,7(R5)        SET RANGE
PACKL    PACK  12(4,R5),12(4,R5)   PACK LENGTH
         AP    EXTOT,12(4,R5)      ACCUMULATE
TOTSK    MVC   MSG+60(44),16(R5)   DSNAME
         UNPK  MSG+40(9),60(5,R5)  GET HEX EXTENTS
         UNPK  MSG+49(9),64(5,R5)
         TR    MSG+40(17),TRAN-240
         MVI   MSG+48,C' '
         MVI   MSG+57,C' '
         CLC   MSG+60(6),=C' *** F'  BLANK HEX EXTENTS ON FMT6
         BNE   *+10                AND FMT5 ENTRIES
         MVC   MSG+40(17),=22C' '
         MVC   HIGH,7(R5)          RESET HIGH
         BAL   R10,PUT             PRINT EXTENT
         LA    R5,ENT(R5)          MOVE TO NEXT
         B     PRT1                LOOP
FINISLP  MVC   LENGTH-2(8),ED8
         AP    EXTOT,=PL4'1'
         ED    LENGTH-2(8),EXTOT   PRINT TOTAL
         MVC   LENGTH+10(10),=C'TOTAL TRKS'
         BAL   R10,PUT
         MVI   SHOFSWT,X'00'       TURN OFF SPECIAL HOF SWITCH
*
*  FREE SPACE USED BY EXTENT TABLE AND GO TO NEXT VTOC
*
FREEIT   FREEMAIN  V,A=RECEIVE     GIVE UP AREA
TESTDD   L     R1,SVCNT            GET CURRENT TIOT ENTRY ADDRESS
         CLI   ALL,C'A'            ALL OPTION SPECIFIED
         BE    READJFCB
         B     CKTIOT              GET NEXT DDNAME
*
*  CLOSE SYSPRINT AND RETURN
*
DDEND    MVC   MSG(26),ENDMSX      INDICATE UTILITY END
         BAL   R10,PUT
         CLOSE (PRTDCB)            CLOSE SYSOUT DCB
RET      SR    R15,R15             CLEAR RET CODE
         L     R13,4(R13)          PREVIOUS SAVE AREA
         RETURN  (14,12),RC=(15)   RETURN TO CALLER
*
*  HANDLE ERROR CONDITIONS
*
ERROR    MVC   ERRMES(44),DSCB     GET DSNAME THAT CAUSED THE ERROR
         MVC   ERRCODE(1),VOLIST+13  GET ERROR CODE
         OI    ERRCODE,C'0'        TO EBCDIC
         MVC   MSG,ERRMESX         WRITE ERROR MESSAGE OM SYSOUT
         BAL   R10,PUT
         B     RDB                 GO TO NEXT DSCB
INVLK    MVC   MSG(70),LNKLOOP     BAD LINK FIELD
         BAL   R10,PUT
         B     RDB
NOPT     WTO   'SYSPRINT COULD NOT BE OPENED'
         B     RET                 GET OUT
*
*   SYNAD SUB-ROUTINE
*
RDE      SYNADAF ACSMETH=BSAM      ANALYZE ERROR
         MVC   MSG+1(78),50(R1)    GET ERROR MESSAGE
         MVI   MSG,C'0'            SET LINE SPACING
         SYNADRLS
         BAL   R10,PUT             PUT MESSAGE ON SYSOUT
         B     NOMORE              GO TRY SUMMARY
OPENEXIT CLC   PRTDCB+62(2),=H'0'  BLKSIZE SPECIFIED?
         BNER  14                  YES, RETURN
         MVC   PRTDCB+62(2),=H'133' NO, PROVIDE DEFAULT
         BR    14                  RETURN TO OPEN
         EJECT
*
*  CONSTANTS
*
DCB      EQU   3                   *
DDCNT    EQU   7                   *
SAVE     EQU   13                  *
         SPACE
FORMAT2  DC    C' *** FORMAT 2 DSCB ***'
FORMAT3  DC    C' *** FORMAT 3 DSCB ***'
FORMAT4  DC    C' *** FORMAT 4 DSCB ***'
FORMAT5  DC    C' *** FORMAT 5 DSCB ***'
FORMAT6  DC    C' *** FORMAT 6 DSCB ***'
STRTMSX  DC    CL55'1',C'--- SUPER-LIST UTILITY ---'
FREESP   DC    C'FREE SPACE   FULL CYL   EXT TRKS'
EXTNTMSG DC    10C' ',C' EXTENT  FIRST  LAST  LENGTH  TYPE'
DELETED  DC    C'****** NOW DELETED *****'
MDLMSG   DC    C' ***  MODEL  DSCB  ***'
LNKLOOP  DC    CL70'0********** INVALID LINK FIELD -- LINKS TO SAME DSCX
               B **********'
HEXMSG   DC    C'HEX EXTENTS (CCHH)'
EXAMESX  DC    CL133'0DSNAME ON VOLUME XXXXXX -- UNIT=XXXX         CREA*
               TED EXPIRES DSORG  RECFM LRECL BLKSIZE SERIAL SEC ALLOCA*
               TION ALLOC USED UNUSED  %'
EXAMES   EQU   EXAMESX+18
EXAMED   EQU   EXAMESX+33
FMT41  DC  CL133'0NUMBR OF CYL - XXXXX          TRACK LENGTH - XXXXX   *
                      FULL DSCBS PER TRACK - XXXXX          NMBR AVL FM*
               T 0 DSCBS - XXXXX'
NUMCYL   EQU   FMT41+15
TRKLN    EQU   FMT41+45
DBTRK    EQU   FMT41+83
AVLDSCB  EQU   FMT41+121
FMT42  DC  CL133' TRKS PER CYL - XXXXX          AVL ALT TRKS - XXXXX   *
                      PDS DIR BLKS PER TRK - XXXXX          NEXT ALT TR*
               K (CC-HH) - XXXXX XXX'
TRKCYL   EQU   FMT42+15
ALTTRK   EQU   FMT42+45
PDSTK    EQU   FMT42+83
NXTALTC  EQU   FMT42+121
NXTALT   EQU   FMT42+125
ISAM1    DC    CL50' - INDEX LEVELS'
         DC    CL50' - MAX TRKS OF MASTER INDEX'
         DC    CL50' - TRKS OF CYL OVERFLOW'
         DC    CL50' - RECORDS TO BE DELETED'
         DC    CL50' - RANDOM REF TO OVERFLW'
         DC    CL50' - BYTES TO HOLD HIGHEST INDEX'
         DC    CL50' - TRKS OF HIGHEST INDEX'
         DC    CL50' - RECORDS OF PRIME DATA'
         DC    CL50' - BYTES LEFT ON CURRENT OVERFLW TRK'
         DC    CL50' - TRKS LEFT IN OVERFLW AREA'
         DC    CL50' - RCDS IN OVERFLOW AREA'
         DC    CL50' - FULL CYLS OF OVERFLOW AREA'
         DC    CL50' - RELATIVE KEY POSITION'
         DC    CL50' - KEY LENGTH'
ENDMSX   DC    C'0END OF SUPER-LIST UTILITY'
ERRMESX  DC    CL133' ABNORMAL CONDITION (X). DATA SET--'
ERRMES   EQU   ERRMESX+35
ERRCODE  EQU   ERRMESX+21
         SPACE
DEVTABLE DS    0F
         DC    XL1'21',XL1'00',H'10',CL6'2311  ',XL4'30002001'
         DC    XL1'22',XL1'00',H'08',CL6'2301  ',XL4'34402002'
         DC    XL1'23',XL1'00',H'10',CL6'2303  ',XL4'30002003'
         DC    XL1'24',XL1'00',H'46',CL6'2302  ',XL4'30002004'
         DC    XL1'25',XL1'00',H'20',CL6'2321  ',XL4'30002005'
         DC    XL1'26',XL1'00',H'00',CL6'XXXXXX',XL4'00000000'
         DC    XL1'27',XL1'00',H'00',CL6'XXXXXX',XL4'00000000'
         DC    XL1'28',XL1'00',H'20',CL6'2314  ',XL4'30C02008'
         DC    XL1'29',XL1'00',H'19',CL6'3330  ',XL4'30502009'
         DC    XL1'2A',XL1'00',H'00',CL6'XXXXXX',XL4'00000000'
         DC    XL1'2B',XL1'00',H'30',CL6'3350  ',XL4'3050200B'
         DC    XL1'2C',XL1'00',H'00',CL6'XXXXXX',XL4'00000000'
         DC    XL1'2D',XL1'00',H'19',CL6'3330-1',XL4'3050200D'
DEVL     EQU   (*-DEVTABLE)/13
$DEVL    DC    AL2(DEVL)
$DEVH    DC    X'0021'
ISAMSVE  DC    H'0'
LINES    DC    P'99'
CPT      DC    H'0'
SVCNT    DC    F'0'
ALCSAV   DC    F'0'
*
*  PRINT LINE
*
MSG      DS    0CL133              OUTPUT LINE
         DC    CL2' '
MSGNAM   DS    CL44
         DC    CL1' '
MSGCREA  DC    CL6' '
         DC    CL2'  '
MSGPURG  DC    CL6' '
         DC    CL1' '
MSGDSTY  DC    CL6' '
         DC    CL2'  '
RECFM    DC    CL4'    '
LRECL    DC    CL6' '
BLKSZ    DC    CL6' '
         DC    CL3'   '
SERIAL   DC    CL6' '
         DC    CL1' '
NUMBER   DC    CL6' '
         DC    CL1' '
TYPSEC   DC    CL6' '
MSGALLOC DC    CL6' '
MSGUSED  DC    CL6' '
MSGUNUS  DC    CL6' '
MSGPCT   EQU   MSGUNUS+4
         DC    CL20' '
AMT      EQU   MSG+8
EXTENT   EQU   MSG+13
FIRST    EQU   MSG+17
LSTK     EQU   MSG+24
LENGTH   EQU   MSG+31
TYPE     EQU   MSG+40
FULLCYL  EQU   MSG+53
EXTRK    EQU   MSG+63
DATE1    DC    CL8' '
TIME1    DC    CL8' '
*
*  TOTAL LINE
*
TOTLIN   DC    CL65'  ***** TOTALS FOR THIS VOLUME *****'
         DC    CL44' '
TOTALLOC DS    CL6
TOTUSED  DS    CL6
TOTUNUS  DS    CL6
TOTPCT   EQU   TOTUNUS+4
         DC    CL6' '
*
JFCB     DS    44F                 JFCB AREA
JFVOLSER EQU   JFCB+118
VTOCNAME DC    44X'04'             DSNAME OF A VTOC
         SPACE
VOLIST   DC    H'1'
DEVCODE  DS    CL4
DEVSER   DS    CL6
SEQ      DC    H'0'
DSCB     DS    40F                 DATA SET CONTROL BLOCK
DSCBFMT  EQU   DSCB+44
DSCBCDAT EQU   DSCB+53
DSCBEDAT EQU   DSCB+56
DSCBORG  EQU   DSCB+82
DSCBRCFM EQU   DSCB+84
BLKLD    EQU   DSCB+86
LRECLD   EQU   DSCB+88
SECAL    EQU   DSCB+94
LAST     EQU   DSCB+98
EXT1     EQU   DSCB+105
JOBFILE  DS    0F                  DCB EXIT LIST
         DC    X'87',AL3(JFCB)
WK4      DS    0F
         DC    X'00'
WK3      DS    0CL3
         DC    X'00'
WK2      DS    0CL2
         DC    X'00'
WK1      DS    0CL1
         DC    X'00'
LSTBLK   DC    H'0'
OUCB     DS    CL2
TOTFR    DC    F'0'
LINK     DC    XL5'00'
PACK     DS    D
PARMSAV  DC    50X'00'
TRAN     DC    C'0123456789ABCDEF'
AN       DS    0CL2
ALL      DC    C'0'
NOPRT    DC    C'0'
PARM     EQU   PARMSAV+2
*
*
UCB      DS    F
CURRUCB  DC    F'0'                CURRENT UCB HOLD AREA
FFFF     DC    X'FFFF'
SORTSW   DC    X'00'
FMT6SW   DC    C'0'
FMT6HI   DC    CL5' '
ED6      DC    X'402020202120'
ED8      DC    X'4020202020202120'
RECAD    DC    A(RECFM+5)
ALLOC    DC    F'0'
USED     DC    F'0'
UNUSED   DC    F'0'
HIGH     DS    CL5
EXTOT    DC    PL4'0000'
COUNT1   DC    PL1'0'
ABMES    DC    CL50' *** ABNORMAL CONDITION               ***'
COREMSG  DC    CL50' PROGRAM NEEDS MORE CORE TO SORT EXTENTS'
INDXMSG  DC    CL50' ********* THE ABOVE EXTENT IS INVALID ***********'
SUM      DC    CL50'0SPACE ACCOUNTING SUMMARY'
HIGHTRK  DC    5C'0'
PACKHLD  DC    D'0'
PCTR     DC    P'000'
SHOFSWT  DC    X'00'
VOLABEL  DC   22C' ',CL60'0      0      1   00000000 00000000    *** VOX
               LUME LABEL'
VTOCENQ  ENQ   (SYSVTOC,JFVOLSER,S,6,SYSTEM),MF=L  SCRATCH AND ALLOC
*                                  LOC
SYSVTOC  DC    CL8'SYSVTOC'        MAJOR NAME FOR SCRATCH AND
*                                  ALLOCATION ENQ
QSYS     DC    CL8'SYSDSN'         SCHEDULAR ENQ MAJOR NAME ON DS
DS       DC    C'DSNAME'
LOWEST   DC    C'00000'
OBTAIN   CAMLST  SEEK,DSCB+135,JFVOLSER,DSCB
         DS    0D
ASK      DC    F'68'
         DC    F'6800000'
RECEIVE  DS    D
CAMIT    CAMLST  SCRATCH,DSCB,,VOLIST,,OVRD
CKCATLG  CAMLST  NAME,CATLGHLD,,CATVLST
CATLGHLD DC    CL44' '
         DS    0D
CATVLST  DC    256C' '
         SPACE 2
TCBADDR  DS    F
EXLST    DC    X'85',AL3(OPENEXIT)
         LTORG
 EJECT
PRTDCB   DCB   DSORG=PS,MACRF=PM,DDNAME=SYSPRINT,EROPT=ACC,            X
               LRECL=133,RECFM=FBA,EXLST=EXLST
 EJECT
GODCB    DCB   DSORG=PS,MACRF=R,DDNAME=DD,DEVD=DA,KEYLEN=44,LRECL=96,  X
               BLKSIZE=96,RECFM=F,EODAD=NOMORE,EXLST=JOBFILE,SYNAD=RDE
 EJECT
         PRINT ON,NOGEN
         DCBD  DSORG=(PS,IS)
*EFUCBOB DSECT
*        IEFUCBOB  LIST=YES
         END
