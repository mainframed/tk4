CATC     TITLE 'CATCLEAN 1.2 --- LIST/CLEAN-UP SYSCTLG --- 07DEC78'
*
*   CATCLEAN   ---   DEVELOPED BY DONALD A WATROUS (05AUG75)
*
*   STATUS   ---   FRANK PAJERSKI, NASA/GSFC
*      1.0  13SEP77    . RE-COMMENT INTRODUCTION
*                      . ENHANCE FORMAT
*                      . REMOVE DECIMAL ARITHMETIC
*      1.1  09JUN78    . CHANGE LITERAL AT 5630 FROM -1 TO 1
*                        (THIS SHOULD CORRECT SOME 0CX ABENDS)
*                      . CHANGE PGM NAME FROM "LISTCAT" TO "CATCLEAN"
*            ---   FRANK PAJERSKI, MEMOREX
*      1.2  07DEC78    . CLEAN-UP SOURCE SOME MORE
*                      . SET LINE-COUNT DEFAULT FROM 80 TO 60
*                      . CHANGE "MAXERRS" FROM 600 TO 1000
*                      . REN 1000 1000
*
*   PURPOSE   ---
*      LIST A SPECIFIED SYSCTLG DATA SET AND IDENTIFY THE FOLLOWING
*      POSSIBLE ERRORS IN ITS CATALOG ENTRIES:
*        . INCORRECT TTR VALUE
*        . EMPTY INDEX LEVEL
*        . NON-EXISTENT DATA SET
*      OPTIONALLY, CONTROL CARDS CAN BE USED TO CORRECT THESE ERRORS.
*      ONLY CATALOG ENTRIES POINTING TO ON-LINE DASD (2314, 3330, 2305)
*      ARE CHECKED FOR POSSIBLE ERRORS.
*
*   JCL   ---
*      //CATCLEAN EXEC PGM=CATCLEAN,PARM='VOL-SER'
*      //SYSPRINT DD  SYSOUT=A   SYSCTLG LIST - CONSIDER USING 'DUMMY'
*      //SYSLIST  DD  SYSOUT=A   ENTRY ERROR LIST
*      //VOL-SER  DD  UNIT=XXXX,VOL=SER=VOL-SER,DISP=OLD  SYSCTLG DASD
*      //SYSIN    DD  *          --- OPTIONAL INPUT ---
*
*   CONTROL CARDS   ---
*      OMIT SYSIN INPUT IF NO CORRECTIVE ACTION IS DESIRED.
*      OTHERWISE, PLACE ONE KEYWORD STARTING IN CC1 PER INPUT CARD.
*        . RECAT - CORRECT INCORRECT TTR ENTRIES
*        . UNCAT - UNCATALOG NON-EXISTENT DATA SETS
*        . DELTI - DELETE EMPTY INDICIES
*        . DELTA - DELETE EMPTY INDICIES & ASSOCIATED ALIASES
*
*
CATCLEAN CSECT
         SAVE  (14,12),,CATCLEAN_1.2
         BALR  12,0
         USING *,12
         LA    14,SAVE
         ST    13,4(14)
         ST    14,8(13)
         LR    13,14
         USING SAVE,13
         LR    R2,R1              SAVE INPUT PARAMETER LIST
         L     R3,0(,R2)
         MVC   VOLID,2(R3)        INSERT VOL-SER-ID PASSED IN PARM
         OPEN  (SYSPRINT,(OUTPUT),DCBOUT,(OUTPUT))
         TM    SYSINFLG,X'0F'
         BO    SYSOK
         L     14,16                   R14=<CVT>
         L     14,0(14)                R14=<TCB WORDS>
         L     14,0(14)                R14=<THIS JOB TCB>
         L     14,12(14)               R14=<TIOT>
         LA    14,24(14)               R14=<DD ENTRY>
NEXTDD   SR    15,15                   CLEAR R15
         IC    15,0(14)                R15=LENGTH OF DD ENTRY
         LTR   15,15                   END OF TIOT?
         BZ    NOSYSIN                 YES
         CLC   4(8,14),=CL8'SYSIN'
         BE    GOTSYSIN
         LA    14,0(14,15)             GO TO NEXT DD ENTRY
         B     NEXTDD
NOSYSIN  MVI   SYSINFLG,X'0F'
         B     SYSOK
GOTSYSIN EQU   *
         OPEN  DCBIN
         MVC   SYSINOUT(26),=C'1SYSIN KEYWORDS SPECIFIED:'
         PUT   DCBOUT,SYSINOUT
         MVI   SYSINOUT,X'40'
         MVC   SYSINOUT+1(132),SYSINOUT
NEXTCARD GET   DCBIN,INPUT
         MVC   SYSINOUT+25(5),INPUT
         PUT   DCBOUT,SYSINOUT
         MVC   SYSINOUT+1(132),SYSINOUT
         CLC   INPUT(5),=C'UNCAT'
         BE    UNCATS
         CLC   INPUT(5),=C'RECAT'
         BE    RECATS
         CLC   INPUT(5),=C'DELTA'
         BE    DELTAS
         CLC   INPUT(5),=C'DELTI'
         BE    DELTIS
         MVI   CATLINE,C' '
         MVC   CATLINE+1(132),CATLINE
         MVC   CATLINE+1(10),INPUT
         MVC   CATLINE+10(16),=C' INVALID KEYWORD'
         PUT   DCBOUT,CATLINE
         B     CLOSEOUT
UNCATS   MVI   UNCFLG,X'FF'
         B     NEXTCARD
RECATS   MVI   RCTFLG,X'FF'
         B     NEXTCARD
DELTAS   MVI   DLAFLG,X'FF'
DELTIS   MVI   DLIFLG,X'FF'
         B     NEXTCARD
EOSYSIN  EQU   *
         LH    0,MAXERRS
         MH    0,=H'48'
         ST    0,ENDERR
         A     0,=X'07000004'
         GETMAIN R,LV=(0)
         LTR   15,15
         BNZ   ABEND7
         MVI   SYSINFLG,X'FF'
         ST    1,BEGERR
         ST    1,NEWERR
         MVC   0(4,1),=X'FFFFFFFF'
         A     1,ENDERR
         ST    1,ENDERR
         LH    0,MAXALIAS
         MH    0,=H'18'
         ST    0,ENDALIAS
         A     0,=X'07000004'
         GETMAIN R,LV=(0)
         LTR   15,15
         BNZ   ABEND7
         ST    1,BEGALIAS
         ST    1,NEWALIAS
         MVC   0(4,1),=C'    '
         A     1,ENDALIAS
         ST    1,ENDALIAS
SYSOK    EQU   *
         PUT   DCBOUT,TITLE1
         PUT   DCBOUT,TITLE2
         PUT   DCBOUT,ERRHEAD
         MVC   CATLINE+1(132),CATLINE
         PUT   DCBOUT,CATLINE
         LOAD  EP=DEVNAMET        LOAD FOR DEVICE TYPE
         ST    R0,DEVNAMET        SAVE FOR NAME ROUTINES
         OI    CATDEV+1,X'F0'     SET NAMETABLE SWITCH
         L     R2,0(R2)           POINT TO INPUT LIST
         LH    R3,0(R2)           GET LIST LENGTH
         LA    R3,1(R2,R3)        POINT TO END OF TEXT
         ST    R3,INPUTLIM        SAVE END OF INPUT
         LA    R1,2(,R2)          POINT TO START OF TEXT
         B     CATCLEN2           BRANCH TO SET UP VOLUME
         SPACE 2
CATCLEN1 GETMAIN R,SP=3,LV=22*BLOCKLEN  GET WORK AREAS
         ST    R1,CATAREA         SAVE ITS ADDRESS
         LR    BLOCKPTR,R1        SET UP FIRST LEVEL BLOCK
         USING BUFFSECT,BLOCKPTR  DECLARE ADDRESSABILITY
         LA    R0,22
CLEARIT  XC    0(256,R1),0(R1)
         XC    256(BLOCKLEN-256,R1),256(R1)
         LA    R1,BLOCKLEN(,R1)
         BCT   R0,CLEARIT
         MVC   BUFFLEVL(4),=X'01000001'  LEVEL 1, FIRST BLOCK
         LA    R1,CATNAME         POINT TO NAME
         ST    R1,BUFFNBEG        SAVE START OF LEVEL NAME
         B     CATENT             SKIP TO LEVEL INITIALIZATION
         SPACE 4
CATDONE  FREEMAIN R,SP=3          FREE THE WORK AREA
         L     R1,BLKTOT          GET BLOCKS IN CATALOG
         BAL   R15,EDITNUM        EDIT THE COUNT
         MVC   BLKTOTX,EDITWORK   AND PUT INTO MESSAGE
         L     R1,BLKTOT          COMPUTE NUMBER OF
         S     R1,BLKCNT           UNUSED BLOCKS
         BAL   R15,EDITNUM        EDIT THE COUNT
         MVC   BLKCNTX,EDITWORK   AND PUT INTO MESSAGE
         PUT   SYSPRINT,CATSUMRY  WRITE STATISTICS LINE
         SR    R0,R0              READY TO CLEAR COUNTERS
         ST    R0,ENTCNT          CLEAR
         ST    R0,BLKCNT           ALL
         ST    R0,BLKTOT            TOTALS
         MVC   LINECNT,=H'99'        FORCE NEW PAGE
         TM    SYSINFLG,X'FF'
         BNO   PASTFIX
         PUT   DCBOUT,TITLE1
         PUT   DCBOUT,TITLE2
         PUT   DCBOUT,=CL133'0THE FOLLOWING CORRECTIVE ACTION WAS TAKEN+
               :'
         MVC   CATLINE+1(132),CATLINE
         PUT   DCBOUT,CATLINE
         L     1,BEGERR
CHECKFIX CLC   0(4,1),=X'FFFFFFFF'
         BE    DONEFIX
         MVC   OBTDSN,4(1)
         MVC   OBTVOL,VOLID
         CLC   0(4,1),=F'0'
         ST    1,NEWERR
         BE    SCRATCH
         CLC   0(4,1),=X'FEDCBA98'
         BE    INDEX
         MVC   GOODTTR,0(1)
         LOCATE LOCCAM
         LTR   15,15
         MVC   CATLINE(10),=CL10' *LOCATE'
         BNZ   BADRC
         CATALOG RECATCAM
         LTR   15,15
         MVC   CATLINE(10),=CL10' *CATALOG'
         BNZ   BADRC
         MVC   CATLINE+1(132),CATLINE
         MVC   CATLINE+2(44),OBTDSN
         MVC   CATLINE+46(20),=C' TTR RECATALOGED AS '
         UNPK  CATLINE+66(7),GOODTTR(4)
         TR    CATLINE+66(6),HEXTAB
         MVI   CATLINE+72,C' '
         B     PUTFIX
INDEX    EQU   *
         MVI   ALIAE,X'00'
         LA    1,OBTDSN+43
CLI1     CLI   0(1),C'.'
         BE    PUT1
         SH    1,=H'1'
         B     CLI1
PUT1     MVI   0(1),C' '
         INDEX DINDEX
         LTR   15,15
         BZ    GOODDIND
         CL    15,=F'12'
         BE    CHECKALS
         MVC   CATLINE(10),=CL10' *INDEX'
         B     BADRC
CHECKALS EQU   *
         MVC   NEWALIAS,BEGALIAS
NEXALIAS L     1,NEWALIAS
         MVC   WORKAREA(9),0(1)
         MVC   ALIASN,9(1)
         LA    1,18(1)
         ST    1,NEWALIAS
         CLC   WORKAREA(4),=C'    '
         BE    NOALIAS
         CLC   WORKAREA(9),OBTDSN
         BE    GOTALIAS
         B     NEXALIAS
GOTALIAS MVI   ALIAE,X'01'
         TM    DLAFLG,X'FF'
         BNO   PRINTALS
         LA    1,ALIASN+8
CLI2     CLI   0(1),C'.'
         BE    PUT2
         SH    1,=H'1'
         B     CLI2
PUT2     MVI   0(1),C' '
         INDEX DALIAS
         LTR   15,15
         MVC   CATLINE(10),=CL10' *INDEX'
         BNZ   BADRC
         MVC   CATLINE+1(132),CATLINE
         MVC   CATLINE+31(7),=C'DELETED'
PRINTALS MVC   CATLINE+2(9),ALIASN
         MVC   CATLINE+12(8),=C'ALIAS OF'
         MVC   CATLINE+21(9),OBTDSN
         PUT   DCBOUT,CATLINE
         MVC   CATLINE+1(132),CATLINE
         B     NEXALIAS
NOALIAS  TM    DLAFLG,X'FF'
         BO    AGONE
         TM    ALIAE,X'01'
         BNO   AGONE
         MVC   CATLINE+2(9),OBTDSN
         MVC   CATLINE+12(32),=C'NOT DELETED DUE TO ABOVE ALIASES'
         B     PUTFIX
AGONE    EQU   *
         INDEX DINDEX
         LTR   15,15
         MVC   CATLINE(10),=CL10' *INDEX'
         BNZ   BADRC
GOODDIND EQU   *
         MVC   CATLINE+1(132),CATLINE
         MVC   CATLINE+2(44),OBTDSN
         MVC   CATLINE+47(11),=C'INDEX LEVEL'
         MVC   CATLINE+59(7),=C'DELETED'
         B     PUTFIX
SCRATCH  EQU   *
         CATALOG UNCCAM
         LTR   15,15
         MVC   CATLINE(10),=CL10' *CATALOG'
         BNZ   BADRC
         MVC   CATLINE+1(132),CATLINE
         MVC   CATLINE+2(44),OBTDSN
         MVC   CATLINE+46(16),=C' NOW UNCATALOGED'
PUTFIX   PUT   DCBOUT,CATLINE
         MVC   CATLINE+1(132),CATLINE
         L     1,NEWERR
         LA    1,48(1)
         B     CHECKFIX
BADRC    MVC   CATLINE+10(20),=C' ERROR, RETURN CODE='
         CVD   15,WORKAREA
         UNPK  WORKAREA+10(5),WORKAREA+6(3)
         MVC   CATLINE+30(2),WORKAREA+11
         MVC   CATLINE+32(6),=C', DSN='
         MVC   CATLINE+38(44),OBTDSN
         B     PUTFIX
DONEFIX  L     1,BEGERR
         MVC   0(4,1),=X'FFFFFFFF'
         L     1,BEGALIAS
         MVC   0(4,1),=C'    '
         MVC   NEWALIAS,BEGALIAS
         MVC   NEWERR,BEGERR
         SPACE 2
PASTFIX  EQU   *
         L     R1,INPUTAD         POINT TO PARAMETERS
         MVI   FRSTLINE,X'00'
CATCLEN2 MVC   VOLID,0(R1)        COPY NEW VOLSER
         CL    R1,INPUTLIM        SEE IF REALLY THERE
         LA    R1,7(,R1)          ASSUME SO
         ST    R1,INPUTAD         AND SAVE NEW ADDRESS
         BL    CATCLEN1           IF MORE GO TO LIST IT
         SPACE 2
CLOSEOUT EQU   *
         TM    SYSINFLG,X'FF'
         BNO   PASTFM
         FREEMAIN R,SP=7
PASTFM   EQU   *
         CLOSE (SYSPRINT)         CLOSE OUTPUT
         CLOSE DCBOUT
         L     13,4(13)
         RETURN (14,12),RC=0
         SPACE 4
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
*        CATALOG LIST SECTION - WALK THROUGH CATALOG STRUCTURE        *
*                                                                     *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         SPACE 2
         USING EMAP,ENTPTR        DECLARE THE ENTRY
CATENTER ST    R14,SAVE14         SAVE CALLER  RETURN ADDRESS
CATENTEX ST    ENTPTR,SAVEENT     SAVE POINTER TO CALLER ENTRY
         IC    R1,BUFFLEVL        GET LEVEL NUMBER
         LA    R0,1(,R1)          BUMP BY ONE
         L     R1,BUFFNEND        POINT TO END OF NAME
         LA    BLOCKPTR,BLOCKLEN(,BLOCKPTR)  GO TO NEXT BLOCK
         STC   R0,BUFFLEVL        SAVE NEW LEVEL NUMBER
         MVC   BUFFTTR,ETTR       SET BLOCK ADDRESS
         ST    R1,BUFFNBEG        SET START OF NAME
         SPACE 2
CATENT   LA    R0,X'82'           LOCATE BY BLOCK
         SLL   R0,24              MOVE TO HIGH BYTE
         LA    R1,BUFFTTR         PARAMETER 1 OF CAMLST
         LA    R2,VOLID           PARAMETER 2 OF CAMLST
         LA    R3,BUFFER          PARAMETER 3 OF CAMLST
         SR    R4,R4              NO PARAMETER 4
         MVC   DEBUG4(16),DEBUG3   <-----
         MVC   DEBUG3(16),DEBUG2   <-----
         MVC   DEBUG2(16),DEBUG1   <-----
         MVC   DEBUG1(16),CAMLST   <--- SAVE PREVIOUS ENTRY
         STM   R0,R4,CAMLST       BUILD CAMLST
         ST    R4,BUFFCNT         CLEAR LEVEL ENTRY COUNT
         BAL   R14,LOCATE         READ FIRST BLOCK
         LTR   R15,R15            TEST RETURN CODE
         BNZ   CATERR             IF NOT FOUND RETURN ERROR
         LA    ENTPTR,BUFFER+2    POINT TO START OF DATA
         CLI   ENAME,X'00'        TEST FOR (V)ICE
         BNE   CATNOICE           ERROR IF NOT
         CLI   ELEN,X'05'         SEE IF VICE
         BE    VICE               IF SO BRANCH
         B     ICE                ELSE IT IS ICE
         SPACE 2
CATNEXT  SR    R1,R1              CLEAR FOR LENGTH
         IC    R1,ELEN            GET HALFWORD COUNT
         LA    R1,12(R1,R1)       GET TOTAL LENGTH
         AR    ENTPTR,R1          POINT TO NEXT ENTRY
         CLI   ENAME,X'FF'        TEST FOR ILE ENTRY
         BNE   CATSEL             IF NOT GO CLASSIFY ENTRY
         OC    ETTR,ETTR          TEST FOR END OF LEVEL
         MVC   BUFFTTR,ETTR       MOVE TTR JUST IN CASE
         BZ    CATEXIT            IF END THEN POP UP
         BAL   R14,LOCATE         READ NEXT BLOCK
         LTR   R15,R15            SEE IF OK
         BNZ   CATERR             IF NOT EXIT
         LA    ENTPTR,BUFFER+2    POINT TO FIRST ENTRY
         SPACE 4
CATSEL   L     R1,BUFFNBEG        POINT TO NAME START
         MVC   0(8,R1),ENAME      COPY IN NAME
         MVI   8(R1),C' '         MAKE SURE OF BLANK
         TM    1(R1),X'F0'        SEE IF GDG
         BNZ   *+10               IF NOT BYPASS CONVERT
         XC    1(4,R1),=X'FFFFFFFF'  COMPLEMENT GDG NAME
         LA    R1,7(R1)           POINT P AT END OF NAME
         CLI   0(R1),C' '         IS IT BLANK
         BNE   *+8                IF NOT BREAK OUT
         BCT   R1,*-8             ELSE LOOP BACK
         LA    R1,1(R1)           POINT PAST NAME
         MVI   0(R1),C'.'         ADD SEPARATOR
         LA    R0,1(R1)           POINT PAST SEPARATOR
         ST    R0,BUFFNEND        SAVE END OF NAME
         L     R14,BUFFCNT        GET ENTRY COUNT
         LA    R14,1(,R14)        BUMP BY ONE
         ST    R14,BUFFCNT        AND SAVE IT
         SR    R14,R14            CLEAR FOR TYPE
         IC    R14,ELEN           GET LENGTH (TYPE)
         CLI   ELEN,7             SEE IF DSPE
         BL    *+8                IF NOT SKIP
         LA    R14,7              ELSE RESET TO SINGLE DSPE
         SLL   R14,2              ENTRY TYPE * 4
         L     R14,CATENTTB(R14)  GET ENTRY PROCESSOR ADDRESS
         BALR  R14,R14            CALL THE ROUTINE
         B     CATNEXT            ON RETURN DO NEXT ENTRY
         SPACE 2
CATENTTB DC    A(IPE,VCBP,GIPE,CVPO,AE,CVPE,CATNEXT,DSPE)
         SPACE 2
CATEXIT  L     R1,BUFFNBEG        POINT TO START OF NAME
         MVI   0(R1),C' '         CLEAR
         MVC   1(8,R1),0(R1)       NAME
         CLI   BUFFLEVL,1         SEE IF EXITING LEVEL 1
         BE    CATDONE            IF SO EXIT
         L     R0,BUFFCNT         GET ENTRY COUNT
         LA    R1,BLOCKLEN        GET LENGTH OF BLOCK
         SR    BLOCKPTR,R1        BACK TO PREVIOUS LEVEL
         L     R14,SAVE14         RESTORE RETURN ADDRESS
         L     ENTPTR,SAVEENT     RESTORE ENTRY ADDRESS
         LTR   R0,R0              SEE IF EMPTY LEVEL
         BCR   8,R14              IF SO RETURN
         A     R0,ENTCNT          ELSE TALLY ENTRIES
         ST    R0,ENTCNT          SAVE TALLY
         BR    R14                AND RETURN TO PREVIOUS LEVEL
         SPACE 3
*        ALIAS ENTRY - LIST TRUE NAME
         SPACE 2
AE       MVC   CATLINE+103(8),=C'ALIAS OF'
         MVC   CATLINE+112(8),ASRNAME
         B     CATLIST            LIST AND RETURN TO DO NEXT
         SPACE 3
*        CONTROL VOLUME POINTER ENTRY - LIST CVOL AND TYPE
         SPACE 2
CVPE     MVC   CATLINE+51(8),=C'CVOL PTR'
         MVC   CATLINE+71(6),CVPECVOL
         LA    R1,CVPECDEV        POINT TO DEVICE TYPE
         LA    R15,CATLIST        RETURN THROUGH LIST TO NEXT
         B     CATDEV             GO DO DEVICE TYPE
         SPACE 3
*        OLD CONTROL VOLUME POINTER ENTRY - LIST CVOL
         SPACE 2
CVPO     MVC   CATLINE+51(8),=C'CVOL PTR'
         MVC   CATLINE+71(6),CVPOCVOL
         B     CATLIST            LIST AND GO TO NEXT
         SPACE 3
*        GENERATION INDEX POINTER ENTRY - LIST ATTRIBUTES
         SPACE 2
GIPE     MVC   CATLINE+51(8),=C'GENR PTR'
         LA    R2,CATLINE+103     POINT TO INFO AREA
         TM    GIPEFLAG,GIPEEMPT  TEST FOR 'EMPTY'
         BZ    GIPE1              IF NOT BRANCH
         MVC   0(6,R2),=C'EMPTY,'  ELSE SHOW IT
         LA    R2,6(,R2)          BUMP POINTER
GIPE1    TM    GIPEFLAG,GIPEDELE  TEST FOR 'DELETE'
         BZ    GIPE2              IF NOT SKIP
         MVC   0(7,R2),=C'DELETE,'  ELSE SHOW IT
         LA    R2,7(,R2)          POINT PAST TEXT
GIPE2    MVC   0(4,R2),=C'MAX='   SHOW MAX SIZE
         SR    R1,R1              CLEAR WORK REGISTER
         IC    R1,GIPEMAXG        GET MAX SIZE
         BAL   R15,EDITNUM        CONVERT IT
         MVC   4(3,R2),0(R1)      MOVE IN VALUE
         BAL   R14,CATLIST        LIST THE INFO
         BAL   R14,CATENTER       GO DOWN ONE LEVEL
         BZ    MARKEMPT           IF NOTHING THERE BRANCH
         B     CATNEXT            ELSE GO TO NEXT
         SPACE 4
*        INDEX POINTER ENTRY - LIST AND CHASE ENTRY
         SPACE 2
IPE      MVC   CATLINE+51(9),=C'INDEX PTR'
         BAL   R14,CATLIST        LIST IT
         BAL   R14,CATENTER       GO DOWN A LEVEL
         BZ    MARKEMPT           IF NOTHING THERE BRANCH
         B     CATNEXT            ELSE GO TO NEXT
         SPACE 3
*        DATASET POINTER ENTRY - LIST VOLSER, VOLTYPE, SEQUENCE
         SPACE 2
DSPE     MVC   CATLINE+51(8),=C'DATA SET'
         CLI   DSPELEN,X'07'
         BNE   PASTTTR
         CLI   DSPEVOLE+2,X'20'
         BNE   PASTTTR
         CLC   DSPETTR,=X'000000'
         BE    PASTTTR
         MVC   CATLINE+103(9),=C'DSCB TTR='
         UNPK  CATLINE+112(7),DSPETTR(4)
         TR    CATLINE+112(6),HEXTAB
         MVI   CATLINE+118,C' '
         MVC   TTR,DSPETTR
PASTTTR  EQU   *
         MVI   0(R1),C' '         CLEAR SEPARATOR
         LA    R14,CATLIST        SET INITIAL LIST ENTRY
         LA    R2,DSPENVOL        POINT TO DSPE AS VCB
         B     VCB                AND PROCESS IT
         SPACE 3
*        VOLUME CONTROL BLOCK POINTER ENTRY - SAME AS DSPE
         SPACE 2
VCBP     MVC   CATLINE+51(8),=C'DATA SET'
         MVI   0(R1),C' '         CLEAR SEPARATOR
         B     CATLIST            JUST LIST FOR NOW
         SPACE 3
*        VOLUME INDEX CONTROL ENTRY - GET STATISTICS
         SPACE 2
VICE     SR    R1,R1              CLEAR OF BYTE
         IC    R1,VICECLIM+2      GET LAST R
         LR    R0,R1              SAVE IT
         MH    R1,VICECLIM        MULTIPLY BY TRACKS-1
         AR    R1,R0              TOTAL NUMBER OF BLOCKS
         ST    R1,BLKTOT          SAVE IT FOR STATISTICS
         B     CATNEXT            GO DO NEXT ENTRY
         SPACE 3
*        INDEX CONTROL ENTRY
         SPACE 2
ICE      EQU   CATNEXT            NO PROCESSING DONE NOW
         SPACE 4
*        ROUTINE TO PROCESS VCB/DSPE
         SPACE 2
         USING VCBEMAP,R2         MAP THE VCB/DSPE
VCB      LH    R3,VCBNCVOL        GET NUMBER OF VOLUMES
         CH    R3,*+10            SEE IF MORE THAT ONE VCB
         BNH   *+8                IF NOT BRANCH
         LA    R3,20              ELSE CORRECT TO ONE VCB
         LA    R4,VCBVOLE         POINT TO FIRST VOLUME
         USING VEMAP,R4           DECLARE IT
VCB1     MVC   CATLINE+71(6),VEVOLSER  COPY VOLSER
         CLI   VEDEV+2,X'80'      TEST FOR TAPE DEVICE
         BNE   VCB2               IF NOT SKIP SEQNO
         LH    R0,VESEQNO         GET SEQUENCE NUMBER
         CVD   R0,DWORK           AND CONVERT IT
         UNPK  CATLINE+80(7),DWORK+4(4)
         MVI   CATLINE+80,C' '    EDIT FIELD
         OI    CATLINE+86,C'0'    CORRECT SIGN
VCB2     LA    R1,VEDEV           POINT TO DEVICE TYPE
         BAL   R15,CATDEV         AND EDIT IT
         BALR  R14,R14            LIST THE LINE
         LA    R4,VENEXT          POINT TO NEXT ENTRY
         BCT   R3,VCB1            AND LIST IT
         CLI   ELEN,1             END - TEST FOR VCBPE
         BNE   CATNEXT            IF NOT DO NEXT ENTRY
         ZAP   *,*                ABEND S0C7
         SPACE 4
*        SUBROUTINE TO LIST A LINE OF THE CATALOG
         SPACE 2
CATLIST  MVC   CATLINE+2(44),CATNAME  COPY NAME FIRST TIME
CATLISTX ST    R14,CATLISTS       RE-ENTER HERE, SAVE RETURN
         LH    R14,LINECNT        GET CURRENT LINE-COUNT
         LA    R14,1(,R14)        BUMP IT
         STH   R14,LINECNT        SAVE IT
         CH    R14,=H'60'         PAGE OVERFLOW?            FJP/30NOV78
         BNH   CATLIST1           IF NOT BRANCH
         PUT   SYSPRINT,TITLE1    PRINT
         PUT   SYSPRINT,TITLE2     TITLES
         PUT   SYSPRINT,HEADER      AND HEADING
         MVC   CATLINE+1(132),CATLINE    BLANK LINE
         PUT   SYSPRINT,CATLINE          PRINT IT
         MVC   LINECNT,=H'6'      RESET LINE-COUNT
         MVC   CATLINE+2(44),CATNAME  MOVE NAME IN CASE
CATLIST1 PUT   SYSPRINT,CATLINE   WRITE OUT THE LINE
         MVC   LASTDSN,CATLINE+2
         CLC   CATLINE+103(8),=C'ALIAS OF'
         BE    ALIAS2
         CLC   CATLINE+51(8),=C'DATA SET'
         BNE   OUTOFTST
         MVC   OBTDSN,CATLINE+2
         MVC   OBTVOL,CATLINE+71
         OBTAIN OBTCAM
         LTR   15,15
         MVC   WORKAREA+81(8),CATLINE+91
         MVC   CATLINE+47(8),CATLINE+70
         MVC   CATLINE+55(17),CATLINE+102
         MVC   CATLINE+72(61),CATLINE+71
         BNZ   CLF8
         L     14,DEVNAMET
         L     15,0(14)
         LA    14,4(14)
CLDEV    CLC   WORKAREA+81(8),0(14)
         BE    GOTDEV
         LA    14,12(14)
         SH    15,=H'1'                                     FJP/24MAY78
         BNZ   CLDEV
         B     OUTOFTST
GOTDEV   CLI   10(14),X'20'
         BNE   OUTOFTST
         MVC   VOLTPC,=H'19'
         CLI   11(14),X'09'
         BE    GOTTPC
         MVC   VOLTPC,=H'8'
         CLI   11(14),X'07'
         BE    GOTTPC
         MVC   VOLTPC,=H'20'
         CLI   11(14),X'08'
         BNE   OUTOFTST
GOTTPC   EQU   *
         CLC   CATLINE+56(9),=C'DSCB TTR='
         BNE   OUTOFTST
         LH    14,WORKAREA+96
         MH    14,VOLTPC
         AH    14,WORKAREA+98
         STH   14,WORKAREA
         MVC   WORKAREA+2(1),WORKAREA+100
         CLC   TTR,WORKAREA
         BE    OUTOFTST
         MVC   CATLINE+78(13),=C'ACTUAL TTR IS'
         UNPK  CATLINE+92(7),WORKAREA(4)
         TR    CATLINE+92(6),HEXTAB
         MVI   CATLINE+98,X'40'
         B     PUTLINE
CLF8     EQU   *
         CL    15,=F'8'
         BNE   OUTOFTST
         MVC   CATLINE+78(18),=C'DATA SET NOT FOUND'
PUTLINE  PUT   DCBOUT,CATLINE
         TM    SYSINFLG,X'FF'
         BNO   OUTOFTST
         L     15,NEWERR
         CL    15,ENDERR
         BNL   TOOMANY
         CLC   CATLINE+78(18),=C'DATA SET NOT FOUND'
         BE    NODSN
         CLC   CATLINE+78(13),=C'ACTUAL TTR IS'
         BE    BADTTR
         B     OUTOFTST
NODSN    TM    UNCFLG,X'FF'
         BNO   OUTOFTST
         XC    0(4,15),0(15)
MVCDSN   MVC   4(44,15),OBTDSN
         LA    15,48(15)
         MVC   0(4,15),=X'FFFFFFFF'
         ST    15,NEWERR
         B     OUTOFTST
BADTTR   TM    RCTFLG,X'FF'
         BNO   OUTOFTST
         MVC   0(4,15),WORKAREA
         MVI   3(15),X'00'
         B     MVCDSN
TOOMANY  PUT   DCBOUT,=CL133'0MORE ERRORS WERE ENCOUNTERRED THAT ALLOWE+
               D FOR IN MAXERRS, CHANGE AND RECOMPILE'
         ABEND 0,DUMP
TO2MANY  PUT   DCBOUT,=CL133'0MORE ALIASES WERE ENCOUNTERRED THAN WERE +
               ALLOWED FOR IN MAXALIAS, CHANGE AND RECOMPILE'
         ABEND 0,DUMP
ALIAS2   EQU   *
         TM    DLIFLG,X'FF'
         BNO   OUTOFTST
         L     1,NEWALIAS
         CL    1,ENDALIAS
         BNL   TO2MANY
         MVC   0(9,1),CATLINE+112
         MVC   9(9,1),CATLINE+2
         LA    1,18(1)
         MVC   0(4,1),=C'    '
         ST    1,NEWALIAS
         B     OUTOFTST
ABEND7   ABEND 7,DUMP
OUTOFTST EQU   *
         MVC   CATLINE+1(132),CATLINE  BLANK THE LINE
         L     R14,CATLISTS       RESTORE RETURN ADDRESS
         BALR  R14,R14            RETURN AND SET UP REENTRY
         B     CATLISTX           IF HE CALLS AGAIN NO NAME
CATLISTS DC    F'0'               RETURN ADDRESS SAVE AREA
         SPACE 4
*        SUBROUTINE TO CONVERT THE DEVICE TYPE
         SPACE 3
CATDEV   NOP   DEVNAME            BRANCH TO GET DEVICE NAME
CATDEV1  UNPK  CATLINE+91(9),0(5,R1)  UNPACK CODE
         TR    CATLINE+91(8),HEXTAB  CONVERT TO HEX
         MVI   CATLINE+99,C' '    BLANK OUT GARBAGE
         BR    R15                RETURN TO CALLER
         SPACE 3
DEVNAME  L     R2,DEVNAMET        R2 --> DEVICE NAME TABLE
         L     R0,0(R2)           R0 = NUMBER OF NAMES
DEVNAME1 CLC   0(4,R1),12(R2)     SEE IF SAME DEVICE TYPE
         BE    DEVNAME2           IF SO BRANCH
         LA    R2,12(,R2)         ELSE POINT TO NEXT ENTRY
         BCT   R0,DEVNAME1        AND TRY IT ON FOR SIZE
         B     CATDEV1            IF NOT FOUND EDIT HEX
         SPACE 2
DEVNAME2 MVC   CATLINE+91(8),4(R2)  NAME FOUND - COPY IT
         CLI   3(R1),0            SEE IF GENERIC NAME
         BCR   7,R15              IF NOT RETURN TO CALLER
         MVI   CATLINE+90,C'*'    ELSE MARK GENERIC
         BR    R15                AND RETURN TO CALLER
         SPACE 4
*        SUBROUTINE TO READ A CATALOG BLOCK
         SPACE 3
LOCATE   L     R15,BLKCNT         GET CURRENT BLOCK COUNT
         LA    R15,1(,R15)        BUMP IT
         ST    R15,BLKCNT         AND STASH IT AWAY
         LOCATE CAMLST            USE CATALOG MANAGEMENT FOR NOW
         BR    R14                RETURN TO CALLER
         SPACE 4
*        SUBROUTINE TO EDIT A NUMBER
         SPACE 3
EDITNUM  CVD   R1,DWORK           GET THE NUMBER IN DECIMAL
         LA    R1,EDITWORK+5      POINT IF NO SIGNIFICANCE
         MVC   EDITWORK+1(5),=X'2020202120'
         EDMK  EDITWORK(6),DWORK+5 EDIT NO LEAD ZEROS
         BR    R15                RETURN TO CALLER
         SPACE 4
*        ROUTINE FOR EMPTY INDICES
         SPACE 2
MARKEMPT PUT   SYSPRINT,CATINDXE  ADD ASTERISK IN COLUMN 1
         TM    DLIFLG,X'FF'
         BNO   CATNEXT
         L     15,NEWERR
         CL    15,ENDERR
         BNL   TOOMANY
         MVC   0(4,15),=X'FEDCBA98'
         MVC   4(44,15),LASTDSN
         LA    15,48(15)
         MVC   0(4,15),=X'FFFFFFFF'
         ST    15,NEWERR
         B     CATNEXT            AND GO TO NEXT
         SPACE 3
*        ROUTINE FOR LOCATE ERRORS
         SPACE 2
CATERR   DC    F'0'           <------ DEBUG
*CATERR   PUT   SYSPRINT,CATIOERR  WRITE ERROR LINE
CATERRX  LH    R14,LINECNT
         LA    R14,1(,R14)        BUMP LINE-COUNT
         STH   R14,LINECNT        SAVE IT
         B     CATEXIT            AND LEAVE THE LEVEL
         SPACE 3
*        ROUTINE FOR MISSING (V)ICE
         SPACE 2
CATNOICE PUT   SYSPRINT,CATICERR  SHOW CONTROL MISSING
         B     CATERRX            AND RETURN ONE LEVEL
         EJECT
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         SPACE 3
SAVE     DC    18F'0'
DEVNAMET DC    A(*-*)             POINTER TO DEVICE NAME TABLE
CATAREA  DC    F'0'               POINTER TO ACQUIRED AREA
BLOCKPTR EQU   R11                POINTER TO CURRENT BLOCK
ENTPTR   EQU   R10                POINTER TO CURRENT ENTRY
DWORK    DC    D'0'
INPUTLIM DC    F'0'               END OF INPUT PARM
INPUTAD  DC    F'0'               CURRENT INPUT ADDRESS
EDITWORK DC    C' XXXXX     '     NUMERIC CONVERSION AREA
HEXTAB   EQU   *-C'0'             HEX CONVERSION TABLE
         DC    C'0123456789ABCDEF'
ENTCNT   DC    F'0'               TOTAL NUMBER OF ENTRIES
BLKTOT   DC    F'0'               TOTAL NUMBER OF BLOCKS IN CATALOG
BLKCNT   DC    F'0'               TOTAL NUMBER OF BLOCKS IN USE
CATNAME  DC    CL44' ',16C'*'     FULL NAME OF CURRENT ENTRY
LINECNT  DC    H'99'              HOLD CURRENT LINE-COUNT FOR SYSPRINT
         SPACE 4
         LTORG
         SPACE 4
TITLE1   DC    CL133'1'           FIRST TITLE LINE
         ORG   TITLE1+35          REMAP
         DC    C'CATCLEAN 1.2 -- LIST/CLEAN-UP SYSCTLG'
         DC    C' -- MEMOREX (&SYSDATE.)'
         ORG   ,                  DONE
         SPACE 2
TITLE2   DC    CL133'0'           SECOND TITLE LINE
         ORG   TITLE2+35          REMAP
         DC    C'CATALOG ON VOLUME=SER='
VOLID    DC    CL6'SYSFJP'
         ORG   ,                  DONE
         SPACE 2
HEADER   DC    CL133'0'           COLUMN HEADINGS
         ORG   HEADER+2           REMAP
         DC    C'DATASET OR INDEX NAME'
         ORG   HEADER+51
         DC    C'ENTRY TYPE'
         ORG   HEADER+71
         DC    C'VOL.ID.'
         ORG   HEADER+81
         DC    C'SEQ.NO.'
         ORG   HEADER+91
         DC    C'DEV.TYPE'
         ORG   HEADER+103
         DC    C'OTHER INFO'
         ORG   ,                  DONE
         SPACE 2
CATLINE  DC    CL133' '
         SPACE 2
CATINDXE DC    CL133'+*'          MARK EMPTY INDEX
         SPACE 2
CATIOERR DC    CL133' *  LOCATE ERROR - LEVEL TERMINATED'
         SPACE 2
CATICERR DC    CL133' * MISSING CONTROL ENTRY - LEVEL TERMINATED'
         SPACE 2
CATSUMRY DC    CL133'-'           SUMMARY STATISTICS
         ORG   CATSUMRY+20
BLKTOTX  DC    C' XXXXX',C' BLOCKS    '
BLKCNTX  DC    C' XXXXX',C' UNUSED'
         ORG   ,                  DONE
         SPACE 4
ERRHEAD  DC    CL133'0 THE FOLLOWING ERRORS WERE DISCOVERED:'
SYSINOUT DC    CL133' '
INPUT    DS    CL80
SYSINFLG DC    X'00'
UNCFLG   DC    X'00'
RCTFLG   DC    X'00'
FRSTLINE DC    X'00'
BEGERR   DS    F
NEWERR   DS    F
ENDERR   DS    F
MAXERRS  DC    H'1000'
         PRINT NOGEN
         SPACE 4
DCBIN    DCB   DSORG=PS,MACRF=GM,DDNAME=SYSIN,EODAD=EOSYSIN,           +
               RECFM=FB,LRECL=80
         SPACE 1
DCBOUT   DCB   DSORG=PS,MACRF=PM,DDNAME=SYSLIST,                       +
               RECFM=FBA,LRECL=133,BLKSIZE=1330
         SPACE 1
SYSPRINT DCB   DSORG=PS,MACRF=PM,DDNAME=SYSPRINT,                      +
               RECFM=FBA,LRECL=133,BLKSIZE=1330
         SPACE 4
         PRINT GEN
ALIASN   DS    CL9
         DC    C' '
ALIAE    DC    X'00'
DLAFLG   DC    X'00'
DLIFLG   DC    X'00'
BEGALIAS DS    F
NEWALIAS DS    F
ENDALIAS DS    F
LASTDSN  DS    CL44
DEBUG4   DC    4F'0'                <------------------------
DEBUG3   DC    4F'0'                <------------------------
DEBUG2   DC    4F'0'                <------------------------
DEBUG1   DC    4F'0'                <------------------------
MAXALIAS DC    H'100'
DALIAS   CAMLST DLTA,ALIASN,OBTVOL
DINDEX   CAMLST DLTX,OBTDSN,OBTVOL
LOCCAM   CAMLST NAME,OBTDSN,OBTVOL,WORKAREA
OBTCAM   CAMLST SEARCH,OBTDSN,OBTVOL,WORKAREA
UNCCAM   CAMLST UCATDX,OBTDSN,OBTVOL
RECATCAM DS    0F
         DC    X'D4020000'
         DC    A(OBTDSN)
         DC    A(OBTVOL)
         DC    A(WORKAREA)
         DC    A(GOODTTR)
GOODTTR  DS    CL3
TTR      DS    CL3
WORKAREA DS    0D
         DS    265C
OBTVOL   DS    CL6
OBTDSN   DS    CL44
VOLTPC   DS    H
         EJECT
EMAP     DSECT ,                  GENERALIZED CATALOG/DIRECTORY ENTRY
ENAME    DS    CL8                ENTRY NAME
ETTR     DS    XL3                TTR FOR OTHER DATA
ELEN     DS    X                  NUMBER OF HALFWORDS TO FOLLOW
         SPACE 3
         ORG   EMAP
VICEMAP  EQU   *                  VOLUME INDEX CONTROL ENTRY
VICENAME DS    XL8'0000000000000001'  INDICATES VICE/ICE
VICELBLK DS    XL3                TTR OF BLOCK IN INDEX
VICELEN  DS    X'05'              LENGTH
VICECLIM DS    XL3                TTR OF LAST BLOCK IN CATALOG
         DS    X'00'              FILLER
VICEFAVL DS    XL3                TTR OF FIRST AVAILABLE BLOCK
         DS    X'00'              FILLER
VICEUNUS DS    H                  NUMBER OF UNUSED BYTES LAST BLOCK
         SPACE 3
         ORG   EMAP
ICEMAP   EQU   *                  INDEX CONTROL ENTRY
ICENAME  DS    XL8'0000000000000001'  INDICATES VICE/ICE
ICELBLK  DS    XL3                TTR OF BLOCK IN INDEX
ICELEN   DS    X'03'              LENGTH
ICELLIM  DS    XL3                TTR OF THIS BLOCK
ICENUMA  DS    XL1                NUMBER OF ALIASES
ICEUNUS  DS    H                  NUMBER OF UNUSED BYTES LAST BLOCK
         SPACE 3
         ORG   EMAP
ILEMAP   EQU   *                  INDEX LINK ENTRY
ILENAME  DS    XL8'FFFFFFFFFFFFFFFF'  INDICATES ILE
ILETTR   DS    XL3                TTR OF NEXT BLOCK THIS LEVEL OR ZERO
ILELEN   DS    X'00'              LENGTH
         SPACE 3
         ORG   EMAP
IPEMAP   EQU   *                  INDEX POINTER ENTRY
IPENAME  DS    CL8                NAME OF THIS INDEX
IPETTR   DS    XL3                TTR OF ICE FOR THIS INDEX
IPELEN   DS    X'00'              LENGTH
         SPACE 3
         ORG   EMAP
DSPEMAP  EQU   *                  DATASET POINTER ENTRY
DSPENAME DS    CL8                NAME OF THE DATASET
DSPETTR  DS    XL3'000000'
DSPELEN  DS    XL1                LENGTH
DSPENVOL DS    H                  NUMBER OF VOLUME ENTRIES
DSPEVOLE EQU   *                  VOLUME ENTRIES FOLLOW HERE
         SPACE 4
         ORG   EMAP
VCBPMAP  EQU   *                  VOLUME CONTROL BLOCK POINTER ENTRY
VCBPNAME DS    CL8                NAME OF THE DATASET
VCBPTTR  DS    XL3                TTR OF FIRST VCBE
VCBPLEN  DS    X'01'              LENGTH
         DS    H'0'               FILLER
         SPACE 3
         ORG   EMAP
CVPOMAP  EQU   *                  OLD CONTROL VOLUME CONTROL ENTRY
CVPONAME DS    CL8                NAME OF INDEX
CVPOTTR  DS    XL3'000000'
CVPOLEN  DS    X'03'              LENGTH
CVPOCVOL DS    CL6                VOLSER OF CONTROL VOLUME
         SPACE 3
         ORG   EMAP
CVPEMAP  EQU   *                  CONTROL VOLUME POINTER ENTRY
CVPENAME DS    CL8                NAME OF INDEX
CVPETTR  DS    XL3'000000'
CVPELEN  DS    X'05'              LENGTH
CVPECDEV DS    XL4                DEVICE TYPE OF CVOL FROM UCB
CVPECVOL DS    CL6                VOLSER OF CONTROL VOLUME
         SPACE 3
         ORG   EMAP
AEMAP    EQU   *                  ALIAS ENTRY
AENAME   DS    CL8                NAME OF THE ENTRY
AETTR    DS    XL3                TTR OF IPE THIS LEVEL
AELEN    DS    X'04'              LENGTH
ASRNAME  DS    CL8                TRUE NAME FOR ALIAS
         SPACE 3
         ORG   EMAP
GIPEMAP  EQU   *                  GENERATION INDEX POINTER ENTRY
GIPENAME DS    CL8                NAME OF THE ENTRY
GIPETTR  DS    XL3                TTR OF IPE THIS ENTRY
GIPELEN  DS    X'02'              LENGTH
GIPEFLAG DS    X                  FLAG
GIPEEMPT EQU   X'01'              'EMPTY'
GIPEDELE EQU   X'02'              'DELETE'
GIPEEMDE EQU   X'03'              'EMPTY,DELETE'
GIPEMAXG DS    X                  MAXIMUM NUMBER OF GENERATIONS
GIPECURG DS    H                  CURRENT GENERATION COUNT
         SPACE 4
VCBEMAP  DSECT ,                  VOLUME CONTROL BLOCK ENTRY
*                                 NOT IN BLDL FORMAT
VCBNCVOL DS    H                  NUMBER OF CVOLS REMAINING
VCBVOLE  DS    20XL12             VOLUME ENTRIES - UP TO 20
VCBTTR   DS    XL3                TTR OF NEXT VCBE, IF PRESENT
         DS    X'00'              FILLER
         SPACE 3
VEMAP    DSECT ,                  VOLUME ENTRY IN VCBE OR DSPE
VEDEV    DS    XL4                DEVICE TYPE, FROM UCB
VEVOLSER DS    CL6                VOLUME SERIAL NUMBER
VESEQNO  DS    H                  POSITION OF DATASET ON TAPE
VENEXT   EQU   *                  NEXT ENTRY
         SPACE 3
BUFFSECT DSECT ,                  MAPPING CATALOG WORK AREA
BUFFLEVL DS    AL1                LEVEL NUMBER
BUFFTTR  DS    XL3                TTR OF CATALOG BLOCK
SAVE14   DS    A                  RETURN ADDRESS SAVE
SAVEENT  DS    A                  ENTRY ADDRESS SAVE
BUFFNEND DS    A                  END OF NAME
BUFFNBEG DS    A                  START OF NAME
CAMLST   DS    5A                 CAMLST AREA
BUFFER   DS    CL265              ONE BLOCK OF CATALOG
BUFFCNT  DS    F                  COUNT OF ENTRIES THIS LEVEL
         DS    0D                 ALIGNMANT ON DOUBLEWORD
BLOCKLEN EQU   *-BUFFSECT         LENGTH OF ONE LEVEL
         SPACE 4
         END   CATCLEAN
