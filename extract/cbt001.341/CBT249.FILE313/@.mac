         TITLE 'MRXPRINT - @ TSO CP (C) COPYRIGHT 1979 MEMOREX'
         $REG
         EJECT
***********************************************************************
*                                                                     *
*   MODULE - @                                                        *
*                                                                     *
*   FUNCTION -                                                        *
*                                                                     *
*            TSO COMMAND PROCESSOR TO INTERFACE WITH STARTED          *
*            BACKGROUND TASK MPWTR. THE TSO COMMAND:                  *
*                                                                     *
*                   @ STRING                                          *
*                                                                     *
*            IS SUBMITTED TO MPWTR THROUGH IEFSSREQ INTERFACE         *
*                                                                     *
*                   @STRING                                           *
*                                                                     *
*            IN ADDITION COL 56 WILL CONTAIN 8 BYTES OF DATA          *
*                                                                     *
*            COL 56    = C'@'                                         *
*            COL 57-59 = ASCB ADDRESS                                 *
*            COL 60-64 = ECB ADDRESS                                  *
*                                                                     *
*            THE ABOVE INFORMATION IS USED BY MPEXEC MODULE TO        *
*            ISSUE CROSS-MEMORY POSTS TO SYNCHRONIZE ITS TPUTS        *
*            WITH USER TERMINAL                                       *
*                                                                     *
*   NOTES -                                                           *
*                                                                     *
*            THIS MODULE MUST BE APF AUTHORIZED SINCE IT USES         *
*            MODESET MACRO TO GET INTO SUPERVISOR START FOR IEFSSREQ  *
*                                                                     *
*            THIS MODULE NEEDS MACROS FROM SYS1.AMODGEN               *
*                                                                     *
*            ASSEMBLE THIS MODULE WITH SYSPARM(TEST) TO USE THE       *
*            TEST SUBSYSTEM INTERFACE                                 *
*                                                                     *
*                                                                     *
***********************************************************************
         EJECT
***********************************************************************
*                                                                     *
*   REGISTERS ON ENTRY -                                              *
*                                                                     *
*          R0 =  IRRELEVANT                                           *
*          R1 = POINTER TO CPPL                                       *
*          R2 =  IRRELEVANT                                           *
*          R3 =  IRRELEVANT                                           *
*          R4 =  IRRELEVANT                                           *
*          R5 =  IRRELEVANT                                           *
*          R6 =  IRRELEVANT                                           *
*          R7 =  IRRELEVANT                                           *
*          R8 =  IRRELEVANT                                           *
*          R9 =  IRRELEVANT                                           *
*         R10 =  IRRELEVANT                                           *
*         R11 =  IRRELEVANT                                           *
*         R12 =  IRRELEVANT                                           *
*         R13 = POINTER TO CALLER'S SAVE AREA                         *
*         R14 = RETURN ADDRESS TO CALLER                              *
*         R15 = ENTRY POINT ADDRESS OF @ MODULE                       *
*                                                                     *
*   REGISTERS ON EXIT -                                               *
*                                                                     *
*          R0 =  SAME AS ON ENTRY                                     *
*          R1 =  SAME AS ON ENTRY                                     *
*          R2 =  SAME AS ON ENTRY                                     *
*          R3 =  SAME AS ON ENTRY                                     *
*          R4 =  SAME AS ON ENTRY                                     *
*          R5 =  SAME AS ON ENTRY                                     *
*          R6 =  SAME AS ON ENTRY                                     *
*          R7 =  SAME AS ON ENTRY                                     *
*          R8 =  SAME AS ON ENTRY                                     *
*          R9 =  SAME AS ON ENTRY                                     *
*         R10 =  SAME AS ON ENTRY                                     *
*         R11 =  SAME AS ON ENTRY                                     *
*         R12 =  SAME AS ON ENTRY                                     *
*         R13 =  SAME AS ON ENTRY                                     *
*         R14 =  SAME AS ON ENTRY                                     *
*         R15 =  RETURN CODE                                          *
*                                                                     *
***********************************************************************
         EJECT
***********************************************************************
*                                                                     *
*   REGISTER USAGE -                                                  *
*                                                                     *
*          R0 = VOLATILE                                              *
*          R1 = VOLATILE                                              *
*          R2 = VOLATILE                                              *
*          R3 = ADDRESS OF FIRST TSO CMD OPERAND                      *
*          R4 = OFFSET TO FIRST OPERAND WITHIN TSO CMD BUFFER         *
*          R5 =  UNUSED                                               *
*          R6 =  UNUSED                                               *
*          R7 =  SAME AS ON ENTRY                                     *
*          R8 =  UNUSED                                               *
*          R9 =  UNUSED                                               *
*         R10 = POINTER TO GETMAINED WORK AREA (@WRKAREA)             *
*         R11 = POINTER TO TSO COMMAND BUFFER                         *
*         R12 = BASE REGISTER                                         *
*         R13 = POINTER TO GETMAINED SAVE AREA                        *
*         R14 = VOLATILE                                              *
*         R15 = VOLATILE                                              *
*                                                                     *
***********************************************************************
         EJECT
***********************************************************************
*                                                                     *
*   MACRO USAGE -                                                     *
*                                                                     *
*         AUTH                                                        *
*         $LNKGE                                                      *
*         $REG                                                        *
*         $RETURN                                                     *
*         CVT                                                         *
*         FREEMAIN                                                    *
*         GETMAIN                                                     *
*         IEFJESCT                                                    *
*         IEFJSSIB                                                    *
*         IEFJSSOB                                                    *
*         IEFSSREQ                                                    *
*         MODESET                                                     *
*         TPUT                                                        *
*         WAIT                                                        *
*                                                                     *
***********************************************************************
         EJECT
***********************************************************************
*                                                                     *
*   MODULE DEPENDENCY -                                               *
*                                                                     *
*         MPEXEC   - COMMAND BUFFER FORMAT, ECB, ASCB, ASID           *
*         MPSSI    - SUBSYSTEM INTERFACE                              *
*         MPSSIINT - SUBSYSTEM INTERFACE                              *
*         TSO TMP  - TSO CMD BUFFER FORMAT                            *
*                                                                     *
***********************************************************************
         EJECT
@        $LNKGE BASE=12
         L     R11,0(R1)                 ADDRESS OF COMMAND BUFFER
         GETMAIN R,LV=@WRKLEN            GET WORK AREA
         LR    R10,R1                    SAVE IN R10
         MVC   0(@WRKLEN,R10),@WRKAREA   INTIALIZE WORK AREA
         USING @WRKAREA,R10              USE DYNAMIC AREA FROM NOW ON
         LH    R4,2(R11)                 OFFSET TO OPERANDS
         LH    R2,0(R11)                 COMMAND BUFFER LENGTH
         SR    R2,R4                     MINUS OFFSET TO OPERANDS
         LA    R1,4                      MINUS 4 FOR PREFIX
         SR    R2,R1                     EQUALS OPERAND LENGTH
         BZ    @RETURN                   NO OPERANDS - IGNORE COMMAND
         CH    R2,=H'51'                 CAN ONLY USE UPTO 51 CHARS
         BNH   *+8
         LA    R2,51
         BCTR  R2,0                      MINUS 1 FOR MVC
         LA    R3,4(R11,R4)              ADDR OF OPERANDS
         EX    R2,@SHIFT                 SHIFT TO UPPERCASE
         EX    R2,@MOVECMD               MOVE OPERANDS
         MVI   @WRKCMD+4,MPCHAR          INSERT PREFIX CHARACTER
         EJECT
***********************************************************************
*                                                                     *
*   SET UP IEFSSREQ AND ISSUE IEFSSREQ                                *
*                                                                     *
***********************************************************************
         LA    R2,@WRKSSIB
         ST    R2,@WRKSIBP
         LA    R2,@WRKEXT
         ST    R2,@WRKEXTP
         LA    R2,@WRKCMD
         ST    R2,@WRKCMDP
         L     R2,16                     CVT ADDR
         L     R2,0(R2)                  TCBS/ASCBS ADDR
         L     R2,12(R2)                 ASCB ADDR
         ST    R2,@WRKASCB
         MVI   @WRKASCB,MPCHAR           INDICATE ASCB PRESENT
         LH    R2,36(R2)                 ASID
         ST    R2,@WRKMCID
         OI    @WRKMCID+2,X'80'          INDICATE ASID PASSED
         LA    R2,@WRKECB
         ST    R2,@WRKECBP
         LA    R2,@WRKSSOB
         ST    R2,@WRKSOBP
         OI    @WRKSOBP,X'80'
         AUTH  ON
         MODESET KEY=ZERO,MODE=SUP
         LA    R1,@WRKSOBP
         IEFSSREQ
         LR    R2,R15
         MODESET KEY=NZERO,MODE=PROB
         AUTH  OFF
         LTR   R2,R2
         BZ    @WAIT
         TPUT  @MSG,L'@MSG
         B     @RETURN
@WAIT    WAIT  ECB=@WRKECB
@RETURN  FREEMAIN R,LV=@WRKLEN,A=(R10)   FREE WORK AREA
         $RETURN                         RETURN TO TMP
         EJECT
@SHIFT   OC    0(0,R3),@WRKCMD+4         SHIFT TO UPPER CASE
@MOVECMD MVC   @WRKCMD+05(0),0(R3)       MOVE OPERANDS
         AIF   ('&SYSPARM' EQ 'TEST').TESTMSG
@MSG     DC    C'MP999I MPWTR IS NOT UP'
         AGO   .SKIPMSG
.TESTMSG ANOP
@MSG     DC    C'MT999I MTWTR IS NOT UP'
.SKIPMSG ANOP
         LTORG
         EJECT
***********************************************************************
*                                                                     *
*   WORK AREA                                                         *
*                                                                     *
***********************************************************************
@WRKAREA DS    0D
@WRKSOBP DC    X'80',AL3(*-*)    *** FILL IN THE BLANK
@WRKSSIB DC    CL4'SSIB'
         DC    AL2(SSIBSIZE)
         DC    H'0'
         AIF   ('&SYSPARM' EQ 'TEST').TESTSSI
         DC    X'94',C'RXP'
         AGO   .SKIPSSI
.TESTSSI ANOP
         DC    X'94',C'RXT'
.SKIPSSI ANOP
         DC    CL8' '
         DC    CL8' '
         DC    F'0'
         DC    F'0'
@WRKSSOB DC    CL4'SSOB'
         DC    AL2(SSOBHSIZ)
         DC    H'10'
@WRKSIBP DC    A(@WRKSSIB)       *** FILL IN THE BLANK
@WRKRETC DC    F'0'
@WRKEXTP DC    A(@WRKEXTP)       *** FILL IN THE BLANK
@WRKEXT  DC    AL2(SSCMSIZE)
         DC    H'0'
@WRKCMDP DC    A(@WRKCMD)        *** FILL IN THE BLANK
@WRKMCID DC    F'0'
@WRKCMD  DC    H'64',H'0'
         DC    CL52' '           *** FILL IN THE BLANK
@WRKASCB DC    F'0'              *** FILL IN THE BLANK
@WRKECBP DC    A(@WRKECB)        *** FILL IN THE BLANK
@WRKECB  DC    F'0'
@WRKLEN  EQU   *-@WRKAREA
         AIF   ('&SYSPARM' EQ 'TEST').TESTCHR
MPCHAR   EQU   C'@'
         AGO   .SKIPCHR
.TESTCHR ANOP
MPCHAR   EQU   C'#'
.SKIPCHR ANOP
         EJECT
         IEFJSSOB (CM)
         EJECT
         IEFJSSIB
         EJECT
         CVT   DSECT=Y,SYS=AOS2
         EJECT
         PRINT NOGEN
         IEFJESCT
         PRINT GEN
         END
