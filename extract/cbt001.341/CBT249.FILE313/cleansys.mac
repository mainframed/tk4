         MACRO
&NAME    EXITRC
*          DATA SET EXITRC     AT LEVEL 001 AS OF 09/18/73
***********************************************************************
*                                                                     *
** EXIT WITH A RETURN CODE IN R15                                     *
*                                                                     *
***********************************************************************
*
&NAME    L     R13,4(R13)
         RETURN (14,12),T,RC=(15)
         MEND
         MACRO
         REGNAMES
*          DATA SET REGNAMES   AT LEVEL 001 AS OF 09/18/73
***********************************************************************
*                                                                     *
** REGISTER EQUATES                                                   *
*                                                                     *
***********************************************************************
*     GENERAL REGISTER NAMES
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
*     FLOATING POINT REGISTER NAMES
FR0      EQU   0
FR2      EQU   2
FR4      EQU   4
FR6      EQU   6
         EJECT
         MEND
         MACRO
         ENTRY1 &AREA
         REGNAMES
***********************************************************************
*          DATA SET ENTRY1     AT LEVEL 001 AS OF 09/18/73
** ENTRY POINT INITIALIZATION.                                        *
*                                                                     *
*   1. SAVE REGISTERS IN CALLING PROGRAMS SAVE AREA.                  *
*   2. SET R12 AS PROGRAM BASE REG.                                   *
*   3. SET R13 = POINTER TO MY SAVE AREA TO BE USED BY                *
*                MACROS AND PROGRAMS THAT THIS PROGRAM CALLS.         *
*   4. CONNECT SAVE AREA POINTERS                                     *
*                                                                     *
*                                                                     *
*                                                                     *
***********************************************************************
         USING *,12
         SAVE  (14,12),,*
         LR    R12,R15
         ST    R13,&AREA.+4
         LR    R4,R13
         LA    R13,&AREA
         ST    R13,8(R4)
         MEND
*          DATA SET CLEAN      AT LEVEL 010 AS OF 09/08/78
CLEANSYS CSECT
***********************************************************************
*                                                                     *
**       .PROGRAM NAME * CLEAN                                        *
*                                                                     *
*        .PROGRAMMER   * DON HIGGINBOTHAM                             *
*                                                                     *
*        .FUNCTION 1   * TO CLEAN ONE OR MORE DISKPACKS OF OLD, OR    *
*                        UNAUTHORIZED DATASETS, BUT YET TO PROVIDE    *
*                        PROTECTION NEEDED FOR CONCURRENT OPERATION   *
*                        OF THIS PROGRAM AND NORMAL OS MULTI-         *
*                        PROGRAMMING (BATCH AND TSO) OPERATION.       *
*                                                                     *
*                        A PACK OR CLASS OF PACKS CAN BE DEFINED      *
*                        TO HAVE A PARTICULAR USAGE. THIS PROGRAM     *
*                        CAN HELP ENFORCE THE ELIMINATION OF UN-      *
*                        AUTHORIZD USAGE.                             *
*                                                                     *
*                        ONCE A DATASET HAS BEEN SELECTED TO BE       *
*                        SCRATCHED, IT WILL BE SCRATCHED EVEN IF      *
*                        DATE PROTECTED OR PASSWORD PROTECTED.        *
*                        THE DATASET WILL ALSO BE UNCATALOGED IF IT   *
*                        WAS CATALOGED TO THE PACK IT WAS SCRATCHED   *
*                        FROM.                                        *
*                                                                     *
*                      * THIS PROGRAM WILL ALWAYS SCRATCH -           *
*                                                                     *
*                        1. STAIGHT OS TEMPORARY DATASETS OLDER       *
*                           THAN 12 HOURS. (SYSXXXXX.TXXXXX-----)     *
*                        2. PRE-ALLOCATED-TSO-TEMPORARY DATASETS      *
*                           OLDER THAN 24 HOURS.                      *
*                           * MEMOREX DEPENDENT FUNCTION *            *
*                        3. IEHMOVE CREATED DATASETS (**SYSUT1----)   *
*                           THAT WERE NOT CREATED ON THE CURRENT DATE.*
*                        4. NON-EXEMPT DATASETS OLDER THAN A RETENTION*
*                           PERIOD SPECIFIED FOR THE VOLUME.          *
*                                                                     *
*                      * IF NO PARAMETERS ARE SPECIFIED,              *
*                        THE RETENTION-PERIOD IS ZERO DAYS.           *
*                        (MEANING NON EXEMPT DATASETS ARE SCRATCHED   *
*                         IMMEDIATELY) AND THE FOLLOWING DATASETS     *
*                        ARE EXEMPT FROM BEING SCRATCHED.             *
*                                                                     *
*                        1. DSNAMES STARTING WITH Z99999              *
*                        2. DSNAMES STARTING WITH VSAM                *
*                        3. DATASETS THAT DONT REQUIRE SPACE.         *
*                           (MODEL DSCB'S FOR GENERATION DATA GROUPS) *
*                                                                     *
*        .FUNCTION 2.  * TO RESET THE 'HIGH-WATER-MARK' FORMAT 4      *
*                        POINTER TO POINT TO THE CURRENT LAST         *
*                        FORMAT4 DSCB.                                *
*                                                                     *
*        .INPUT        * OPTIONAL PARM FIELD AND                      *
*                        A '//DELETXXX DD' CARD FOR                   *
*                        1. EACH PACK TO BE CLEANED OR                *
*                        2. AN ENTIRE CLASS OF ONLINE PACKS TO        *
*                           BE CLEANED. * MEMOREX DEPENDENT FUNCTION **
*                                                                     *
*                      * THE SAME PARAMETERS MAY BE SPECIFIED IN THE  *
*                        PARM FIELD OF THE EXEC CARD OR THE DSN       *
*                        FIELD OF THE DD CARD.                        *
*                        THE EXEC-CARD-PARM-FIELD APPLIES TO ALL      *
*                        DD CARDS NOT HAVING A DSN FIELD.             *
*                        THE DD-CARD-DSN-FIELD APPLIES JUST TO THAT   *
*                        DD CARD.                                     *
*                                                                     *
*                        EXAMPLES-                                    *
*                                                                     *
*                        PARM='$VOL.PUBLC.$RTN0002'                   *
*                        DSN=$VOL.PUBLC.$RTN0002                      *
*                                                                     *
*                      * PARAMETER $PARM.S                            *
*                                                                     *
*                        MEANS SCRATCH SYSTEM DATASETS                *
*                        (THOSE PREVIOUSLY LISTED DATASETS            *
*                        NORMALLY EXEMPT).                            *
*                                                                     *
*                      * PARAMETER $RTNXXXX                           *
*                                                                     *
*                        XXXX DEFINES A RETENTION PERIOD IN DAYS.     *
*                        NON-EXEMPT DATASETS OLDER THAN XXXX DAYS     *
*                        WILL BE SCRATCHED.                           *
*                                                                     *
*                      * PARAMETER $DSN.XXXX.XXXX----                 *
*                                                                     *
*                        XXXX----  IS A DSNAME PREFIX (SUCH AS SYS2.) *
*                        WHICH DEFINES A CLASS OF DSNAMES WHICH ARE   *
*                        EXEMPT FROM BEING SCRATCHED.                 *
*                                                                     *
*                      * PARAMETER $VOL.VVVVV                         *
*                                                                     *
*                        VVVVV     IS A 1 TO 6 CHAR VOLID PREFIX      *
*                        WHICH DEFINES A CLASS OF ONLINE VOLUMES TO   *
*                        BE CLEANED.  * MEMOREX SVC USED *            *
*                        THE VOL=SER=XXXXXX ON THE DD CARD            *
*                        CAN BE ANY ONLINE DEVICE BUT THE NAME IS     *
*                        IGNORED.                                     *
*                                                                     *
*        .DELET DD CARD FORMAT                                        *
*                                                                     *
*        //DELETXXX DD UNIT=UUUU,VOL=SER=VVVVVV,DISP=OLD,             *
*        //  DSN=$------                                              *
*                                                                     *
*          XXX = ANY ACCEPTABLE CHARACTERS.                           *
*          THE DSN FIELD IS OPTIONAL AND DEFINES ONE OR MORE          *
*          PARAMETERS AS DEFINED PREVIOUSLY.                          *
*                                                                     *
*          EXAMPLE - DSN=$PARM.S.$DSN.SYS2.$RTN0001                   *
*                                                                     *
*        .OUTPUT         A LIST OF DATASETS SCRATCHED TO SYSPRINT.    *
*                                                                     *
*        .SAMPLE JCL                                                  *
*                                                                     *
*        //CLEANSYS EXEC PGM=CLEANSYS                                 *
*        //SYSPRINT DD   SYSOUT=A                                     *
*        //DELETSYS DD   UNIT=2314,VOL=SER=MEGOS1,DISP=OLD            *
*        //DELETPUB DD   UNIT=2314,VOL=SER=MEGOS1,DISP=OLD,           *
*        //              DSN=$PARM.S.$VOL.PUBLC.$RTN0002              *
*        //                                                           *
*                                                                     *
*        .SPECIAL      * STAND-ALONE OR 'IPL' RUN. - SPECIFY PARM=IPL *
*         FUNCTION.                                                   *
*                        1. ALL TEMPORARY DATASET ARE SCRATCHED       *
*                           EXCEPT SYSOUT DATASETS LESS THAN          *
*                           12 HOURS OLD.                             *
*                                                                     *
*                        2. ALL IEHMOVE UTILITY DATASETS (**SYSUT1)   *
*                           ARE SCRATCHED.                            *
*                                                                     *
*                        3. THE FATE OF OTHER DATASETS DEPEND ON      *
*                           DD CARD AND DEFAULT PARAMETERS            *
*                           PREVIOUSLY DESCRIBED.                     *
*                                                                     *
*        .MAINTENANCE    SEE EQUATES FOR SYSTEM CONTROL BLOCKS        *
*         PROGRAMMER     OFFSETS WHICH MAY BE OS RELEASE DEPENDANT.   *
*         NOTE                                                        *
*                                                                     *
***********************************************************************
         EJECT
         ENTRY1 SAVEA
         LA     R11,4094(R12)
         USING  CLEANSYS+4094,R11
         L     R2,0(R1)
*        OPEN  (SNAP,(OUTPUT))     PUT BLANK IN COL 1 FOR SNAPS
         EJECT
*
** INITIALIZE
*
GO       EQU   *
*      GET DEFAULT PARAMETERS (IF ANY)
GO010    LH    R3,0(R2)            R3=LENGTH OF PARM FIELD
         LTR   R3,R3
         BZ    GO110
         CLC   2(3,R2),=CL4'IPL'
         BNE   GO014
         MVI   $IPL,X'01'
         B     GO110
GO014    BCTR  R3,0
         STC   R3,GO020+1
GO020    MVC   PARMS(1),2(R2)
GO110    EQU   *
*      GET TIME IN PACKTIME AND DATE IN PACKDATE.
         TIME  DEC
         STM   R0,R1,PACKTIME
*      COMPUTE SYSTEM-TEMPORARY-DATASET-PREFIX   (SYSYYDDD)
         UNPK  DATE,PACKDATE
         MVC   SYSDSN+3(5),DATE+2
*      COMPUTE SYSTEM-TEMPORARY-DATASET-PREFIX FOR YESTERDAY
         ZAP   PAKDATEY,PACKDATE
         SP    PAKDATEY,=P'1'
         UNPK  DATEY,PAKDATEY
         MVZ   DATEY+6(1),DATEY
         MVC   SYSDSNY+3(5),DATEY+2
*      GET THE TIME IN EBCDIC AND STORE IT IN EBCTIME
         MVI   PACKTIME+3,X'0F'
         UNPK  EBCTIME,PACKTIME
*      COMPUTE LOWER TIME-LIMITS FOR TEMPORARY DATASETS.
         ZAP   PACKTY,=PL8'2400000'
         ZAP   PACKTD,PACKTIME     TDSNRETN=(RETENTION PERIOD)
         SP    PACKTD,TDSNRETN     PACKTD=(LOWER LIMIT FOR TODAY)
         AP    PACKTY,PACKTD       PACKTY=(LOWER LIMIT FOR YESTERDAY)
*
*      COMPUTE CURRENT DATE IN BINARY     HEX (00YY0DDD)
         XC    D(8),D
         STH   R1,D+6
         CVB   R2,D
         STH   R2,CURDATE+2             STORE (    0DDD)
         SRA   R1,12
         STH   R1,D+6
         MVN   D+7(1),=XL4'0C000000'
         CVB   R2,D
         STC   R2,CURDATE+1             STORE (00YY    )
*
         OPEN  (SYSPRINT,(OUTPUT))
*
         EJECT
*
** GET SYSTEM CONTROL BLOCK ADDRESSES.
         L     R5,16               R5=ADDRESS OF CVT
         L     R6,CVTTCBP(R5)      R6=ADDRESS OF TCB WORDS
         L     R7,4(R6)            R7=ADDRESS OF CURRENT TCB
         L     R8,TCBTIO(R7)       R8=ADDRESS OF TIOT
         LA    R9,24(R8)           R9=ADDRESS OF DUTY DD ENTRY
         STM   R7,R9,ATCB
         MVC   ALUT1(4),CVTILK2(R5)     SAVE UCB LOOKUP TABLE ENTRY
         EJECT
*
** BEGIN PROCESSING A DD CARD  (DUTY DD CARD)
*
USEPACK  EQU   *
*      GET NEXT DDNAME (THAT BEGINS WITH DELE)   FROM TIOT.
UPACK010 SR    R2,R2
         L     R3,ADDENT           R3=ADDRESS OF CURRENT DD ENTRY.
         ST    R3,ADDENT1
         IC    R2,0(R3)
         LTR   R2,R2
         BZ    FINISH              BRANCH IF END-OF-TIOT INDICATOR.
         AR    R2,R3               R2=ADDRESS OF NEXT DD ENTRY.
         ST    R2,ADDENT           SETUP ADDENT FOR NEXT TIME.
         CLC   TIOEDDNM(4,R3),=CL4'DELE'
         BNE   UPACK010
         SNAP  DCB=SNAP,ID=001,PDATA=ALL
         MVC   DCBDDNAM(8),TIOEDDNM(R3)
*     READ JOB FILE CONTROL BLOCK TO GET INTERNAL DD CARD
         RDJFCB (VTOC)
         EJECT
*      CHECK IF THIS DD CARD HAS PARAMETERS.
UPARM014 CLI   JFCBDSNM,C'$'
         BE    UPARM016            BRANCH IF YES
         MVC   JFCBDSNM(44),PARMS  NO, MOVE IN DEFAULT PARAMETERS
UPARM016 EQU   *
***********************************************************************
*                                                                     *
** PROCESS SPECIAL DD CARD 'DELETPUB' TO CLEAN ALL PUBLCX PACKS ONLINE*
*                                                                     *
         CLC   TIOEDDNM(8,R3),=CL8'DELETPUB'                          *
         BNE   *+10
         MVC   JFCBDSNM(44),DELETPUB                                  *
*                                                                     *
***********************************************************************
*                                                                     *
** PROCESS SPECIAL DD CARD 'DELETTSO' TO CLEAN ALL MEGTSX PACKS ONLINE*
*                                                                     *
         CLC   TIOEDDNM(8,R3),=CL8'DELETTSO'                          *
         BNE   *+10                                                   *
         MVC   JFCBDSNM(44),DELETTSO                                  *
*                                                                     *
***********************************************************************
         EJECT
*      COMPUTE $PARM FOR THIS DD-CARD ($PARM=S MEANS SCRATCH SYSTEM DS)
UPACK020 DS    0H
         MVI   $PARM,X'00'         INITIALIZE TO SAVE DATASETS.
         LM    R3,R5,=A(JFCBDSNM,1,JFCBDSNM+40)
UPACK022 CLC   0(7,R3),=CL8'$PARM.S'
         BNE   UPACK024
         MVI   $PARM,C'S'
         B     UPACK030
UPACK024 BXLE  R3,R4,UPACK022
UPACK030 DS    0H
*      COMPUTE DD   EXPIRATION DATE (EXPDATE=CURDATE-$RTN)
         XC    $RTN(4),$RTN
         LM    R3,R5,=A(JFCBDSNM,1,JFCBDSNM+40)
UPACK034 CLC   0(4,R3),=CL4'$RTN'  CHECK IF DD CARD HAS $RTN.
         BE    UPACK040             YES, BRANCH
         BXLE  R3,R4,UPACK034
         MVC   EXPDATE(4),CURDATE   NO,  EXPDATE=CURRENT DATE.
         B     UPACK060
UPACK040 PACK  D(8),4(4,R3)
         CVB   R4,D
         ST    R4,$RTN             STORE RETENTION PERIOD IN $RTN.
*
         LH    R2,CURDATE
         LH    R3,CURDATE+2
         SR    R3,R4
         BNM   UPACK056
UPACK050 BCTR  R2,0
         A     R3,=F'365'
         BM    UPACK050
UPACK056 STH   R2,EXPDATE
         STH   R3,EXPDATE+2
UPACK060 EQU   *
*      SETUP SAFE-DATASET-PREFIX-NAME   (SAFEDSN)
UPACK100 DS    0H
         XC    SAFEDSN(44),SAFEDSN
         LM    R3,R5,=A(JFCBDSNM,1,JFCBDSNM+43)
UPACK110 CLC   0(4,R3),=CL4'$DSN'  CHECK IF DD CARD HAS $DSN
         BE    UPACK120             YES BRANCH
         BXLE  R3,R4,UPACK110
         SR    R3,R3
         B     UPACK160
*
UPACK120 LA    R7,5(R3)            FIND STARTING POINT & LENGTH
         LA    R3,6(R3)            OF SAFE DATASET NAME AND MOVE IT
         LR    R6,R3               TO SAFEDSN
UPACK130 CLI   0(R3),C' '               *
         BE    UPACK140                 *
         CLC   0(2,R3),=C'.$'           *
         BE    UPACK140                 *
         BXLE  R3,R4,UPACK130           *
         SR    R3,R3
         B     UPACK160                 *
*                                       *
UPACK140 SR    R3,R6                    *
         STC   R3,UPACK150+1            *
UPACK150 MVC   SAFEDSN(1),0(R7)         *
UPACK160 STC   R3,UDSN050+1
         EJECT
*      DETERMINE IF ALL VOLUMES WITH A PREFIX-NAME ARE TO BE CLEANED
*      FOR THIS DD CARD.
UPACK200 DS    0H
         MVC   $VOL(6),=CL8' '
         LM    R3,R5,=A(JFCBDSNM,1,JFCBDSNM+43)
UPACK210 CLC   0(4,R3),=CL4'$VOL'  CHECK IF DD CARD HAS $VOL.
         BE    UPACK220            YES, BRANCH.
         BXLE  R3,R4,UPACK210
         B     UPACK260            NO, SKIP THIS SECTION.
*
UPACK220 LA    R7,5(R3)            FIND STARTING POINT & LENGTH
         LA    R5,10(R3)                *
         LA    R3,6(R3)            OF VOLUME-NAME-PREFIX AND MOVE IT
         LR    R6,R3               TO $VOL.
UPACK230 CLI   0(R3),C' '               *
         BE    UPACK240                 *
         CLC   0(2,R3),=C'.$'           *
         BE    UPACK240                 *
         BXLE  R3,R4,UPACK230           *
         B     UPACK260                 *
*                                       *
UPACK240 SR    R3,R6                    *
         STC   R3,UPACK250+1            *
         STC   R3,UPACK510+1            *
UPACK250 MVC   $VOL(1),0(R7)            *
UPACK260 EQU   *
         EJECT
*
** DETERMINE VOLUME TO BE CLEANED.
*
UPACK400 DS    0H
*      CHECK IF MULTIPLE VOLS ARE TO BE PROCESSED FOR THIS DD CARD.
         CLI   $VOL,X'40'
         BE    UPACK600       BRANCH IF ONLY ONE VOL PER DD CARD
         SNAP  DCB=SNAP,ID=002,PDATA=ALL
* SCAN UCB TABLE TO GET A VOLUME ONLINE HAVING A SPECIFIED PREFIX.
         MVC   ALUTE(4),ALUT1
         XC    AUCB2,AUCB2
UPACK410 L     R9,ALUTE
UPACK420 LH    R7,0(R9)       R7=ADDRESS OF A PROSPECTIVE UCB ADR.
         N     R7,MASK1
         BZ    UPACK480       BRANCH IF NOT UCB ADDRESS.
         CL    R7,MASK1
         BE    USEPACK        BRANCH IF NO MORE UCB'S.
         CLI   UCBID(R7),X'FF'
         BE    UPACK500       BRANCH IF GOOD UCB
UPACK480 LA    R9,2(R9)       BUMP TO NEXT UCB ADDRESS IN LOOKUP TABLE
         B     UPACK420
*      CHECK IF THIS VOLUME NAME STARTS WITH SPECIFIED PREFIX.
UPACK500 C     R7,AUCB2
         BNH   UPACK480            DONT CHECK 2ND PATH OF 2-CHAN-SW.
         ST    R7,AUCB2
         CLI   UCBTYP+2(R7),X'20'
         BNE   UPACK480            BRANCH IF NOT DIRECT-ACCESS-DEVICE
UPACK510 CLC   SRTEVOLI(1,R7),$VOL
         BNE   UPACK480            BRANCH IF NOT A SPECIFIED PACK.
         TM    UCBFL1(R7),X'40'
         BO    UPACK480            BRANCH IF NOT READY.
         ST    R7,AUCB             SAVE ADDRESS OF UCB.
         LA    R9,2(R9)
         ST    R9,ALUTE            SAVE ADDRESS OF LOOKUP TABLE ENTRY.
*      MODIFY DEVICE-ENTRY IN TIOT TO HAVE UCB OF DUTY VOLUME.
         L     R5,ADDENT1          R5=ADDRESS OF DD ENTRY
         LA    R6,16(R5)           R6=ADDRESS OF DEVICE ENTRY
         ST    R6,ADEVENT
         MVC   AUCB1+1(3),TIOEFSRT(R6)  SAVE DEV-ENTRY UCB ADDRESS
         MODESET KEY=ZERO          GET IN SUPRVSR STATE,PROT KEY ZERO
         MVC   TIOEFSRT(3,R6),AUCB+1    PUT UCB-ADRS IN TIOT DEV ENTRY
         MODESET KEY=NZERO
         MVC   JFCBVOLS(6),SRTEVOLI(R7) PUT VOL-ID IN JFCB.
         EJECT
*
** BEGIN PROCESSING A DUTY DISKPACK
*
UPACK600 DS    0H
         MVI   FMT0IND,0      SET OFF FORMAT-0-INDICATOR
*     GET VOLUME,ID FROM JFCB AND PRINT HEADING FOR THIS VOLUME
         MVC   VOLUME+6(6),JFCBVOLS
         MVC   HDR+26(6),VOLUME+6
         MVC   LINE+94(6),VOLUME+6
         MVC   VOLDSN+5(6),VOLUME+6
         PUT   SYSPRINT,HDR
*     SETUP DSNAME TO SPECIFY VTOC DATASET AND OPEN IT.
         MVI   JFCBDSNM,X'04'
         MVC   JFCBDSNM+1(43),JFCBDSNM
         MVI   JFCBTSDM,X'08'      DONT WRITE JFCB BACK TO JOBQ.
         OPEN  (VTOC,(UPDAT)),TYPE=J
         TM    DCBOFLGS,X'10'
         BZ    EXITBAD             BRANCH IF UNSUCCESSFUL OPEN.
         MVC   RNAME,JFCBVOLS
         ENQ   (QNAME,RNAME,E,6,SYSTEM),RET=HAVE
*     GET DEVICE TYPE TO USE WITH SCRATCH MACRO.
         L     R3,DCBDEBAD-1       GET ADDRESS OF DEB FROM DCB
         L     R4,DEBUCBAD-1(R3)   GET ADDRESS OF UCB FROM DEB
         MVC   VOLUME+2(4),UCBTYP(R4)
*
         EJECT
*
** BEGIN PROCESSING A DATASET ON THE DISKPACK     (DUTY DATASET)
*
USEDSN   EQU   *
*     GET A DSCB FROM THE VTOC DATASET
UDSN020  READ  DECBA,SF,VTOC,DSCB,MF=E
         CHECK DECBA
         EJECT
*     ATTEMPT TO SAVE THE DUTY DATASET
         CLI   DS1FMTID,X'F1'
         BNE   UDSN300             BRANCH IF NOT FORMAT 1 DSCB.
         MVI   FMT0IND,1      SET ON  FORMAT-0-INDICATOR
         MVC   FILEADDR,DCBFDAD+3       SAVE FILE ADDRESS OF DSCB
         CLC   DS1DSNAM(4),=CL4'VSAM'
         BE    UDSN020             BRANCH IF PAGE DATASET
         CLC   DS1DSNAM(6),=CL8'Z99999'
         BE    UDSN020
         CLC   DS1EXT1(10),=XL12'00'
         BE    UDSN020             BRANCH IF MODEL DATASET
UDSN040  EQU   *
         CLC   DS1DSNAM(11),VOLDSN
         BE    UDSN020             BRANCH IF VOL-DSN (ID FOR TSO)
UDSN050  CLC   DS1DSNAM(1),SAFEDSN
         BE    UDSN020             BRANCH IF DATASET SAFE
*      CHECK FOR TEMPORARY DATASETS.
         ZAP   PACKTCP,PACKTD
         CLC   DS1DSNAM(8),SYSDSN
         BE    UDSN058             BRANCH IF TEMP DS CREATED TODAY
         ZAP   PACKTCP,PACKTY
         CLC   DS1DSNAM(8),SYSDSNY
         BNE   UDSN060             BRANCH IF NOT TEMP DS CREATED YSTRD
*
** CHECK IF 'IPL' RUN
UDSN058  CLI   $IPL,X'01'
         BNE   UDSN058A            BRANCH IF NOT.
         CLI   DS1DSNAM+17,C'S'
         BE    UDSN059             SAVE OUTPUT DATASET.
         B     UDSN080              OTHERWISE GO SCRATCH DSN.
*
*      CHECK IF PRE-ALLOCATED-TSO-TEMPORARY DATASET.
UDSN058A CLI   DS1DSNAM+28,C'.'
         BNE   UDSN059             BRANCH IF NOT
         MVZ   ZONES(4),DS1DSNAM+24
         CLC   ZONES(4),=XL4'F0F0F0F0'
         BNE   UDSN059             BRANCH IF NOT
         CLC   DS1DSNAM(8),SYSDSNY
         BNE   UDSN020
         CLC   DS1DSNAM+10(6),EBCTIME
         BNL   UDSN020             BRANCH IF TSO TEMP DS .LT. 24 HRS
         B     UDSN080             GO SCRATCH IF TOO OLD
*      SAVE TEMP DATASETS .LT. 12 HRS OLD.
UDSN059  PACK  PACKTDSN(8),DS1DSNAM+10(7)
         MVI   PACKTDSN+7,X'0F'
UDSN059A CP    PACKTDSN(8),PACKTCP
         BNH   UDSN080             GO SCRATCH IF TEMP DS TOO OLD.
         B     UDSN020
UDSN060  EQU   *
         CLC   DS1DSNAM(3),SYSDSN
         BNE   UDSN062
         CLC   DS1DSNAM+8(2),=CL4'.TXX'
         BE    UDSN080             GO SCRATCH IF TEMP DS
UDSN062  EQU   *
         CLC   DS1DSNAM(8),=CL8'AAAAAAAA'
         BE    UDSN080             GO SCRATCH IF TEMP DS
         CLC   DS1CREDT(3),=XL4'00'
         BE    UDSN200             BRANCH IF CREATE DATE IS ZEROS
         CLI   DS1DSNAM,C'*'
         BE    UDSN220             BRANCH IF IEHMOVE DATASET
UDSN070  DS    0H
         CLC   DS1CREDT(3),CURDATE+1
         BH    UDSN080             GO SCRATCH IF HIGH CREATE DATE.
*
*      PROCESS TSO PACK
         CLC   VOLUME+6(5),=CL8'MEGTS'
         BNE   UDSN076
         CLI   DS1DSNAM,X'7B'
         BE    UDSN020        LOOP BACK IF #
         CLI   DS1DSNAM,X'7C'
         BE    UDSN020        LOOP BACK IF @
         CLI   DS1DSNAM,X'5B'
         BE    UDSN020       LOOP BACK IF $
*
UDSN076  CLC   DS1CREDT(3),EXPDATE+1
         BH    UDSN400        BRANCH IF DATASET NOT YET EXPIRED.
         EJECT
*     AT THIS POINT ALL ATTEMPTS TO SAVE THE DUTY DATASET HAVE FAILED
*     SO THE DATASET WILL BE SCRATCHED.
UDSN080  EQU   *
         TM    DS1DSIND,EQPRTBIT   CHECK IF PASSWORD-PROTECT BIT ON
         BZ    UDSN082              NO,  BRANCH
         NI    DS1DSIND,EQSETOFF    YES, TURN IT OFF
         WRITE DECBA,SF,VTOC,DSCB,MF=E
         CHECK DECBA
UDSN082  EQU   *
         MVC   DELDSN(44),DS1DSNAM
         LOCATE CATLGPTR
         LTR   R15,R15
         BZ    UDSN020
UDSN084  EQU   *
         MVC   LINE+65(21),=CL24'HAS BEEN DELETED FROM'
         MVC   LINE+20(44),DS1DSNAM
         PUT   SYSPRINT,LINE
*      SCRATCH THE DATASET
UDSN100  SR    R0,R0
         SCRATCH DATASET
         EJECT
*
** AT THIS POINT THE DATASET HAS ALREADY BEEN SCRATCHED,
*  SO AN ATTEMPT WILL BE MADE TO UNCATLG THE DATASET.
*
*      DONT UNCATLG IF 1. THE DSNAME IS CATLG TO A DIFFERENT VOL
*                      2. THE DEVICE TYPE IS NOT THE SAME
*
UDSN120  LOCATE CATLGPTR
         LTR   R15,R15
         BZ    UDSN128             BRANCH IF IT IS CATALOGED.
         CLC   DELDSN(3),QNAME
         BE    USEDSN              BRANCH IF SYSTEM DATASET.
         B     UDSN150
UDSN128  EQU   *
         LH    R2,VOLLIST
         LA    R3,VOLLIST+2
UDSN130  CLC   4(6,R3),VOLUME+6
         BE    UDSN150
         LA    R3,10(R3)
         BCT   R2,UDSN130
         B     USEDSN
*      UNCATLG THE DATASET
UDSN150  CATALOG DELETE
         B     USEDSN
         EJECT
*
** SPECIAL PROCESSING FOR DATASETS THAT DO NOT HAVE CREATE DATES,
*  SUCH AS THOSE CREATED BY IEHMOVE (**SYSUT1-----)
*
UDSN200  EQU   *
         CLI   $IPL,X'01'
         BE    UDSN080             GO SCRATCH IF 'IPL' RUN.
         MVC   DS1CREDT(3),CURDATE+1    MOVE CURRENT DATE INTO DATE
         WRITE DECBA,SF,VTOC,DSCB,MF=E
         CHECK DECBA
         B     UDSN020
*      PROCESS IEHMOVE DATASET THAT HAD CREATE DATE INSERTED BY
*      PREVIOUS EXECUTION OF CLEAN.
UDSN220  EQU   *
         CLI   $IPL,X'01'
         BE    UDSN080             GO SCRATCH IF 'IPL' RUN.
         CLC   DS1CREDT(3),CURDATE+1
         BE    UDSN020             BRANCH IF CREATED TODAY.
         B     UDSN080             GO SCRATCH IF NOT.
         EJECT
UDSN300  CLI  DS1FMTID,X'00'
         BNE   UDSN020                  BRANCH IF NOT FORMAT 0.
         CLI   FMT0IND,1
         BE    UDSN020                  BRANCH IF FORMAT0 NOT NEEDED.
         MVC   FILEADDR,DCBFDAD+3
         MVI   FMT0IND,1      SET ON  FORMAT-0-INDICATOR
         B     UDSN020
         EJECT
*
** SPECIAL PROCESSING FOR DATASETS HAVING PERMANENT TYPE NAMES
*  WHICH ARE NOT TO BE SCRATCHED IN THIS PASS.
*
UDSN400  DS    0H
*      CHECK IF THIS DATASET IS CURRENTLY BEING USED.
         ENQ   (QNAMEDSN,DS1DSNAM,E,44,SYSTEM),RET=TEST
         LTR   R15,R15
         BNZ   UDSN020        BRANCH IF YES, TO GET ANOTHER DATASET.
*      DATASET NOT NOW BEING USED, SO TELL SOMEBODY.
         MVC   LINE+65(21),=CL24'*** NOT BEING USED **'
         MVC   LINE+20(44),DS1DSNAM
         PUT   SYSPRINT,LINE
         B     UDSN020
         EJECT
*
*     END VOLUME
ENDVOL   EQU   *
         CLOSE (VTOC,REREAD),TYPE=T
*
         READ  DECBA,SF,VTOC,DSCB,MF=E
*
         CHECK DECBA
*
         EJECT
         MVC   DS4HPCHR(5),FILEADDR
         WRITE DECBA,SF,VTOC,DSCB,MF=E
*
         CHECK DECBA
*
DEQVTOC  DEQ   (QNAME,RNAME,6,SYSTEM),RET=HAVE
*
         CLOSE (VTOC)
*
* FINISHED WITH VOLUME, SO GET NEXT VOLUME.
         CLI   $VOL,X'40'
         BNE   UPACK410            BRANCH TO GET NEXT VOL ID FROM UCB.
         B     USEPACK             BRANCH TO GET NEXT DD CARD.
         SPACE 2
BADVOL   EQU   *
         PUT   SYSPRINT,BADLINE
         B     DEQVTOC
         EJECT
*
*     EXITBAD
EXITBAD  LA    R15,8
         SNAP  DCB=SNAP,ID=40,PDATA=ALL
         B     EXIT
*
*     FINISH
FINISH   DS    0H
         LA    R15,0
EXIT     EXITRC
         EJECT
*
** VARIABLES,CONSTANTS,SWITCHES
*
         SPACE 1
*     SCRATCH PARAMETERS
DATASET  CAMLST SCRATCH,DELDSN,,VOLUME,,OVRD
VOLUME   DC    H'1',X'30C02008',C'VOLUME',H'0'
CATLGPTR CAMLST NAME,DELDSN,,VOLLIST
VOLLIST  DC    0D'0',265C' '
DELETE   CAMLST UCATDX,DELDSN
DELDSN   DC    CL44' '
*     VARIABLES
PACKTIME DC    F'0'
PACKDATE DC    F'0'
DATE     DC    CL7'0'
PAKDATEY DC    F'0'
DATEY    DC    CL7'0'
         DS    0F
EBCTIME  DC    CL7'0'
         DS    0F
SUFFIX   DC    P'00'
         DS    0D
D        DC    2F'0'
SYSDSN   DC    CL8'SYS99360'
SYSDSNY  DC    CL8'SYS99359'
EXPDATE  DC    F'0'                EXPIRATION DATE-HEX (00YY0DDD)
CURDATE  DC    F'0'                CURRENT DATE    HEX (00YY0DDD)
$RTN     DC    F'0'                RETENTION PERIOD (BINARY)
SAFEDSN  DC    11F'0'
QNAMEDSN DC    CL8'SYSDSN'
SAVEA    DC    18A(0)
*     SYSPRINT LINES
HDR      DC    CL121'1***07***  CLEAN VOLUME = XXXXXX'
LINE     DS    0CL121
         DC    CL65' ********   DATASET'
         DC    CL56'HAS BEEN DELETED FROM VOLUME XXXXXX'
SPACE    DC    CL121' '
BADLINE  DC    CL121'******** I/O ERROR READING VTOC ********'
*      JFCB  AND DSCB
         DS    0F
LSTA     DC    X'87',AL3(JFCB)
JFCB     DS    CL176
         DS    0F
DSCB     DS    CL140
         WRITE DECBA,SF,VTOC,DSCB,MF=L
QNAME    DC    CL8'SYSVTOC '
RNAME    DS    CL6
$VOL     DC    CL6' '
FMT0IND  DC    X'00'
$PARM    DC    X'00'
PARMCODE DC    X'00'
FILEADDR DS    CL5
ZONES    DC    XL4'F0F0F0F0'
*
         DS    0D
PACKTY   DC    PL8'0'
PACKTD   DC    PL8'0'
PACKTCP  DC    PL8'0'
PACKTDSN DC    PL8'0'
TDSNRETN DC    XL8'1200000F' RETENTION PERIOD FOR TEMP DATASETS.
VOLDSN   DC    CL12'SYS1.XXXXXX'
ATCB     DC    A(0)      ADDRESS OF CURRENT TCB
ATIOT    DC    A(0)      ADDRESS OF TIOT
ADDENT   DC    A(0)      ADDRESS OF DUTY DD ENTRY
ADDENT1  DC    A(0)
PARMS    DC    CL44' '
PROGPSW1 DC    D'0'
AUCB     DC    A(0)
AUCB1    DC    A(0)
AUCB2    DC    A(0)
ADEVENT  DC    A(0)
ALUT1    DC    A(0)
ALUTE    DC    A(0)
MASK1    DC    XL4'0000FFFF'
$IPL     DC    F'0'
DELETPUB DC    CL44'$RTN0002.$VOL.PUBLC'
DELETTSO DC    CL44'$VOL.MEGTS'
         EJECT
***********************************************************************
*
VTOC     DCB   DDNAME=DELETE00,DSORG=PS,EXLST=LSTA,MACRF=R,            X
               RECFM=F,EODAD=ENDVOL,BLKSIZE=96,KEYLEN=44,SYNAD=BADVOL
         EJECT
***********************************************************************
*
SYSPRINT DCB   DDNAME=SYSPRINT,DSORG=PS,MACRF=PM,RECFM=FA,             X
               LRECL=121,BFTEK=S,EROPT=ACC,BLKSIZE=121
         EJECT
***********************************************************************
*
SNAP     DCB   BFTEK=S,DDNAME=SYSUSNAP,DSORG=PS,LRECL=125,MACRF=W,     X
               RECFM=VBA,BLKSIZE=1632
         EJECT
*
** EQUATES - NAMES CORRESPOND TO NAMES IN SYSTEM CONTROL BLOCKS MANUAL
*
EQUATES  EQU   *
         SPACE 1
*      CVT EQUATES
CVTTCBP  EQU   0
CVTILK2  EQU   40
*      TCB EQUATES
TCBTIO   EQU   12
*      TIOT EQUATES
TIOEFSRT EQU   1
TIOEDDNM EQU   4
*     DCB EQUATES
DCBFDAD  EQU   VTOC+5
DCBDDNAM EQU   VTOC+40             DDNAME
DCBOFLGS EQU   VTOC+48             OPEN FLAGS
DCBDEBAD EQU   VTOC+45             DEB ADDRESS
*     JFCB EQUATES
JFCBDSNM EQU   JFCB                DATASET NAME
JFCBTSDM EQU   JFCB+52
JFCBVOLS EQU   JFCB+118            VOLUME ID
*     DEB EQUATES
DEBUCBAD EQU   33                  UCB ADDRESS
*     DSCB EQUATES
DS1DSNAM EQU   DSCB                DATASET NAME
DS1FMTID EQU   DSCB+44             DSCB FORMAT CODE
DS4HPCHR EQU   DSCB+45
DS1CREDT EQU   DSCB+53             CREATE DATE
DS1DSIND EQU   DSCB+93
DS1EXT1  EQU   DSCB+105            UST EXTENT ID.
*     UCB EQUATES
UCBID    EQU   2
UCBFL1   EQU   6
UCBTYP   EQU   16
SRTEVOLI EQU   28
*
EQPRTBIT EQU   X'14'     PASSWORD-PROTECT-BIT
EQSETOFF EQU   X'ED'     TURN-OFF PASSWORD-PROTECT
*
*
         END   CLEANSYS
