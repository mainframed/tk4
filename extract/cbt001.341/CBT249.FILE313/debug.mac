*)S     DEBUGGER - SUBCOMMANDS:
*       <ADDR>    - DISPLAY STORAGE AROUND THE GIVEN ADDRESS
*                   EXAMPLE - 1204 - DISPLAY AROUND LOCATION 1204 (HEX)
*       ASCB      - DISPLAY THE ASCB OF THE NAMED ADDRESS SPACE
*                   EXAMPLE - ASCB'TSDWSF' - ASCB FOR TSDWSF IS LOCATED
*       C         - DISPLAY AROUND ADDRESS THAT IS COMPLEMENT OF
*                   CURRENT ADDRESS
*       CSCB      - DISPLAY THE CSCB OF THE NAMED ADDRESS SPACE
*                   EXAMPLE - CSCB'TSDWSF' - CSCB OF TSDWSF IS LOCATED
*       D         - DISPLAY AN ADDRESS IN MEMORY
*                   EXAMPLES- D01234 - DISPLAY LOCATION 1234 (HEX)
*                             DBARF  - LOC AROUND VALUE OF NAME 'BARF'
*       DELETE    - DELETE A LOAD MODULE LOADED VIA THE 'LOAD' COMMAND
*                   EXAMPLE - DELETE'IEFIIC' DELETES THE NAMED MODULE
*       END       - LEAVE DEBUGGER
*       F         - FULLWORD INDIRECT ADDRESS FROM CURRENT DISPLAY ADDR
*       H         - HALFWORD INDIRECT FROM CURRENT DISPLAY ADDR
*       HELP      - REQUEST FOR HELP TEXT (YOU'RE LOOKING AT IT)
*       LOAD      - LOAD A MODULE
*                   EXAMPLE - LOAD'IEFIIC' LOADS THE NAMED MODULE,
*                   THE CURRENT DISPLAY ADDRESS IS SET TO THE NAMED
*                   ENTRY POINT.  TO FIND OFFSET ZERO IN THE MODULE,
*                   YOU MAY USE THE '?C' COMMAND.
*       N         - AND STORAGE AT CURRENT DISPLAY ADDRESS
*                   EXAMPLE - NFE - AND CURRENT ADDR WITH  X'FE'
*       O         - OR STORAGE AT CURRENT DISPLAY ADDRESS
*                   EXAMPLE - O01 - OR CURRENT ADDR WITH X'01'
*       S         - STORE AT THE CURRENT DISPLAY ADDRESS
*                   EXAMPLE - S'CE' - STORE C'CE' AT CURRENT ADDR
*       UCB       - DISPLAY THE UCB FOR A DEVICE
*                   EXAMPLE - UCB00F - FIND UCB FOR DEVICE '00F'
*       X         - EXCLUSIVE OR AT THE CURRENT DISPLAY ADDRESS
*                   EXAMPLE - X0F - XOR CURRENT ADDR WITH X'0F'
*       X SPACE   - P.C.F. TRANSFER TO OTHER TSO COMMAND
*                   EXAMPLE - X MS - INVOKE ''MS'' COMMAND (SPACE REQ)
*                   N O T E - IF YOU ''X'' TO AN UNAUTHORIZED COMMAND,
*                             YOU WILL LOSE A.P.F. AUTHORIZATION.
*                             TO REGAIN AUTHORIZATION YOU MUST LEAVE
*                             AND RE-ENTER DEBUGGER.
*       =         - ASSIGN A NAME TO CURRENT DISPLAY ADDRESS
*                   EXAMPLE - =QQ - ASSIGN CURRENT ADDR TO NAME 'QQ'
*       %         - INVOKE AN EXEC FROM SYSPROC
*                   EXAMPLE - %CVT - INVOKE 'CVT' EXEC FROM SYSPROC
*                   N O T E - 'CONTROL LIST' IN A CLIST WILL NOT HAVE
*                             ANY EFFECT.  THE STACK WILL BE FLUSHED
*                             AT THE FIRST INVALID COMMAND.
*       <         - BACKUP IN DISPLAY TRACE TABLE
*                   EXAMPLE - <<< - BACK UP THREE ENTRIES
*       >         - FORWARD IN DISPLAY TRACE TABLE
*                   EXAMPLE - >>> - GO FORWARD THREE ENTRIES
*       ?C        - DISPLAY LOADED MODULE INFORMATION
*       ?N        - DISPLAY NAME TABLE
*       ?T        - DISPLAY TRACE TABLE
*       +         - ADD TO CURRENT DISPLAY ADDRESS AND DISPLAY
*                   EXAMPLE - +40 - ADD X'40' TO CURRENT LOCATION
*                             QQ+40 - ADD X'40' TO VALUE OF NAME 'QQ'
*                                     AND DISPLAY THAT LOCATION
*       -         - SUBTRACT FROM CURRENT DISPLAY ADDRESS AND DISPLAY
*                   EXAMPLE - -40 - SUB X'40' FROM CURRENT LOCATION
*                             QQ-40 - SUB X'40' FROM VALUE OF NAME 'QQ'
*                                     AND DISPLAY THAT LOCATION
*       ,         - SEPARATE COMMANDS
*                   EXAMPLE - 10,F,F,+4,F - FINDS CURRENT TCB
*                   N O T E - ',' CANNOT BE USED ON THE SAME INPUT
*                             LINE AS A '%' INVOCATION OF A CLIST.
*       *         - REDISPLAY CURRENT CORE ADDRESS
*       (BLANKS)  - SAME AS '*'
*       ANYTHING ELSE IS TAKEN AS AN ADDRESS TO
*                 DISPLAY (NAMES MAY BE USED AS ADDRESSES)
*)F     DEBUGGER - FUNCTION
*       THE DEBUGGER IS USED TO DISPLAY AND/OR MODIFY
*       VIRTUAL MEMORY.
*       CURRENTLY, ONLY THE VIRTUAL ADDRESS SPACE OF THE CALLER IS
*       AVAILABLE.
*       BOTH UNPROTECTED AND PROTECTED STORAGE MAY BE EXAMINED
*       AND ALTERED.
*)X     DEBUGGER - SYNTAX
*       DEBUGGER
*
*       THE DEBUGGER IS RESTRICTED TO TECHNICAL SUPPORT
*                 MAINTENANCE PERSONNEL.
*       ANY OTHER PERSON REQUESTING THE DEBUGGER WILL
*                 BE RETURNED TO READY MODE.
*
*       SPECIFYING AN ADDRESS IN EITHER HEXIDECIMAL OR DECIMAL
*       WILL CAUSE DEBUGGER TO DISPLAY STORAGE AROUND THAT ADDRESS.
*
*       EXAMPLES OF THE SYNTAX OF ADDRESS AND VALUES ARE AS FOLLOWS:
*             01234DF   -  HEXIDECIMAL SELF DEFINING TERM
*             123456.   -  DECIMAL     SELF DEFINING TERM
*             'ABCDEF'  -  CHARACTER   SELF DEFINING TERM
*
*       -- THE VALUE OF <ADDR> AND <VALUE> USED IN THE FOLLOWING
*          DISPLAYS IS DETERMINED AS FOLLOWS:
*          NUMBERS AND HEX DIGITS ENTERED WITHOUT A TRAILING '.'
*          ARE INTERPRETED IN ALL CASES TO BE 'HEX';
*          IF FOLLOWED BY A '.', IT IS INTERPRETED TO BE
*          'DECIMAL'
*                 (NOTE: FOR PURPOSES OF STORAGE ALTERING COMMANDS,
*                  THE LENGTH OF STORAGE TO BE ALTERED IS ALWAYS:
*                  1+LEN_ENTERED/2 DROPPING ANY REMAINDER FOR HEX,
*                  4 FOR DECIMAL,AND
*                  LEN_ENTERED FOR CHARACTER.
*                  THE MAXIMUM LENGTH IS:
*                  8 HEX DIGITS, OR
*                  8 CHARACTERS, OR
*                  AS MUCH AS 1 FULLWORD (DECIMAL)
*
*          FOR PURPOSES OF INTERMEDIATE COMPUTATION, ALL
*          VALUES ARE KEPT IN A FULLWORD, WITH HI ORDER BITS
*          TRUNCATED AS NECESSARY.
*                 (E.G.  D123456789 - WOULD BE INTERPRETED AS
*                        D23456789)
*
*          IF THE INPUT FOR AN <ADDR> VALUE IS INVALID,
*          I.E. CONTAINS NON-HEX CHARACTERS, IT WILL BE ASSUMED
*          TO BE A NAME.  IF IT IS NOT FOUND IN THE NAME TABLE,
*          AN ERROR MESSAGE WILL BE DISPLAYED WITH A BAR ('×') UNDER
*          THE APPROXIMATE LOCATION OF THE ERROR, IF POSSIBLE.
*
*          <VALUE> INFORMATION MUST BE ENTERED AS A SELF-DEFINING
*          TERM IN HEX, OR DECIMAL (FOLLOWED BY A '.'), OR
*          CHARACTER (STRING OF CHARACTERS SURROUNDED BY, AND
*          CONTAINING NO, SINGLE QUOTES ('))
*
*       NOTE -
*                 SINCE 'B','C',AND 'D' ARE COMMANDS, HEX NUMBERS
*                 BEGINNING WITH THESE VALUES MUST BE SPECIFIED WITH
*                 A LEADING ZERO.
*                 NAMES BEGINNING WITH THESE LETTERS SHOULD BE AVOIDED.
*)O    NO OPERANDS ARE REQUIRED ON THE DEBUGGER COMMAND.
         EJECT
         MACRO
&NAME    TRX   &A,&B
         GBLC  &X555555
         AIF   ('&NAME' EQ '').NONAME
&X555555 SETC  '&NAME'
.NONAME  ANOP
         ORG   &X555555+&A
         AIF   ('&B' EQ '').NULLB
         DC    &B
         ORG
         MEXIT
.NULLB   ANOP
         DC    &A
         ORG
         MEND
         SPACE 2
         MACRO
&NAME    TPT   &WHAT,&LEN
&NAME    LA    1,&WHAT .                GET ADDRESS OF MESSAGE
         LA    0,&LEN .                 ABSOLUTE LENGTH ONLY
         TPUT  (1),(0),R                ISSUE SVC
         MEND
DBUG     TITLE 'DEBUGGER - THE TSO DEBUGGER '
DEBUGGER TSOENTER REGS=YES,PL=(CSCAN)
         LA    R11,4095(,R12)           DEFINE SECOND BASE
         LA    R11,1(,R11)
         USING DEBUGGER+4096,R11
         TPUT  CLEAR1,L'CLEAR1,FULLSCR,HOLD
         SPACE
***********************************************************************
*                                                                     *
*        THE DEBUGGER                                                 *
*        PURPOSE: SYSTEM'S PROGRAMMERS TOOL                           *
*                                                                     *
*                                                                     *
***********************************************************************
         SPACE 2
         SPM   R13                      (I KNOW THE HI BYTE IS ZERO)
         L     R14,CVTPTR               GET CVT POINTER
         L     R14,0(,R14)              DISPATCH D-WORD
         L     R14,4(,R14)              NEW TCB
         L     R14,12(,R14)             MY TIOT
         MVC   USERID(8),0(R14)         MY NAME
         SPACE 1
         SPACE
         B     GOODUSER
         SPACE 2
*        EXIT ROUTINE
*
LEAVE    DS     0H
         TSOLEAVE ,                     LEAVE HIM HIGH AND DRY
         TITLE 'DEBUGGER - ENTRY INITIALIZATION'
GOODUSER CLC   =CL4'$SYS',USERID         TECH SUPPORT GROUP?
         BNE   LEAVE
         SPACE 1
         L     R15,CPPLPSCB             LOAD PSCB ADDRESS
         LTR   R15,R15                  TEST ADDRESS
         BNP   LEAVE                    NO GOOD, DON'T FAKE ME
         CLC   0(7,R15),USERID          SAME ID?
         BNE   LEAVE                    HE'S TRYING TO FOOL ME
         TITLE 'DEBUGGER - INITIALIZE TRACE AND NAME TABLES'
         LA    R14,NAMEINIT             LOAD RETURN ADDRESS
CLRTRACE STM   R3,R5,12(R13)            SAVE IN NON-STD
         LA    R3,@TRACE                START OF TRACE TABLE
         LA    R4,4                     LENGTH OF EACH ENTRY
         LA    R5,@TRACEND              END OF TRACE TABLE
         STM   R3,R5,@TRACECB
CLRTRAC1 XC    0(4,R3),0(R3)            CLEAR IT
         BXLE  R3,R4,CLRTRAC1           TRY AGAIN
         LM    R3,R5,12(R13)            RESTORE REGS
         BR    R14                      RETURN TO CALLER
         SPACE 3
NAMEINIT LA    R14,STARTUP              LOAD RET ADDRESS
         SPACE 1
CLRNAME  STM   R3,R5,12(R13)            SAVE REGS
         LA    R3,@NAME                 LOAD NAME TABLE
         LA    R4,12                    LENGTH OF EACH ENTRY
         LA    R5,@NAMEND               END OF TABLE
         STM   R3,R4,@NAMECB            SAVE IN TABLE
CLRNAME1 XC    0(12,R3),0(R3)           CLEAR ENTRY
         BXLE  R3,R4,CLRNAME1           TRY AGAIN
         LM    R3,R5,12(R13)            RELOAD SAVED REGS
         BR    R14                      RETURN TO CALLER
LTORG1   LTORG
         TITLE 'DEBUGGER - SUBROUTINES - CHECKNXT - FIXUP'
CHECKNXT CLI   0(R3),C' '               END?
         BE    4(,R14)                  YES
         CLI   0(R3),C','               CONTINUE
         BE    4(,R14)
         CLI   0(R3),C'+'               SPECIAL CASE
         BE    4(,R14)                  YES
         CLI   0(R3),C'-'               SPECIAL CASE
         BNER  R14                      NO
         B     4(,R14)                  RETURN NOW
         SPACE 5
         PUSH  USING
         USING FIXUP,15
FIXUP    CH    R0,=H'12'                OUT OF CORE?
         BNE   FIXUPPOS
         LR    R5,R14
         TPT   =C'ESTAE - OUT OF CORE - ENTRY CODE 12',35
         SR    R15,R15                  CONTINUE ABEND
         LR    R14,R5
         BR    R14
         SPACE 1
FIXUPPOS STM   R14,R12,12(R13)          SAVE REGS
         LR    R10,R1
         USING SDWA,R10
         BALR  R12,0
         USING *,R12,R11
         LA    R11,4095(,R12)
         LA    R11,1(,R11)
         CLC   SDWAABCC+1(2),=X'13E0'   IS DETACH?
         BE    ATTNOUT                  YES, GOING BYBY
         CLC   SDWAABCC+1(2),=X'33E0'   IS ATTN?
         BE    ATTNOUT                  YES, GOING BYBY
         SPACE 1
         CLC   SDWAABCC+1(2),=X'0470'   LOST AUTHORITY?
         BNE   ABENDED                  NO, THEN WE ABENDED
         SPACE 1
         TPT   =C'AUTHORIZATION LOST - UNABLE TO PROCESS REQUEST',46
         B     RETRY
         SPACE
ABENDED  UNPK  MSG15(9),SDWAABCC(5)     CONVERT TO HEX
         TR    MSG15(8),TRTOHEX
         MVI   MSG15+8,C' '
         SPACE 1
         TPT   MSG15,L'MSG15
         SPACE
RETRY    SETRP WKAREA=(10),REGS=(14,12),RC=4,RETADDR=FLUSH,            *
               RETREGS=YES,FRESDWA=YES
         SPACE
ATTNOUT  DS    0H
         SETRP WKAREA=(10),REGS=(14,12),RC=0
         SPACE
         LTORG
         SPACE
         POP   USING
         TITLE 'DEBUGGER - SUBROUTINES - TOHEX'
TOHEX    UNPK  HEX(9),PLACE(5)
         UNPK  HEX+8(9),PLACE+4(5)
         UNPK  HEX+16(9),PLACE+8(5)
         UNPK  HEX+24(9),PLACE+12(5)
         TR    HEX(32),TRTOHEX
         BR    R14                      RETURN
         TITLE 'DEBUGGER - SUBROUTINES - PUTTRACE'
PUTTRACE STM   R3,R5,SA1+12             SAVE REGS DESTROYED
         LM    R3,R5,@TRACECB           GET TRACE CONTROL
         MVC   1(3,R3),DPLYADDR+1       TRACE DISPLAY ADDRESS
         BXLE  R3,R4,ENDTRACE           END IT?
         LA    R3,@TRACE                LOAD START
         SPACE 1
ENDTRACE STM   R3,R5,@TRACECB           RESTORE TRACE CB
         LM    R3,R5,SA1+12             GET INFO
         BR    R14                      RETURN TO CALLER
         TITLE 'DEBUGGER - SUBROUTINES - PUTNAME'
PUTNAME  STM   R0,R5,SA1+12             SAVE WIPED REGS
         LM    R4,R5,@NAMECB+4          LOAD NAME CTL BLECHS
         LA    R3,@NAME                 LOAD FIRST ENTRY
         XR    R2,R2                    CLEAR POINTER REG
         SPACE 1
PUTNAME1 CLC   4(8,R3),CURNAME          IS IT SAME?
         BE    PUTNAME3                 YES
         OC    4(8,R3),4(R3)            TEST FOR NULL
         BNZ   PUTNAME2                 NOT IT
         LTR   R2,R2                    TEST IT
         BNZ   PUTNAME2                 FORGET IT
         LR    R2,R3                    LOAD FIRST NULL POINTER
         SPACE 1
PUTNAME2 BXLE  R3,R4,PUTNAME1           TRY AGAIN
         L     R3,@NAMECB               LOAD DEFAULT NEXT
         LTR   R2,R2                    TEST IT
         BNP   PUTNAME4                 NO NULL ENTRY
         LR    R3,R2                    DEFINE POINTER
         B     PUTNAME4                 GO TO IT
         SPACE 1
PUTNAME3 MVC   1(3,R3),WHERE+1          MOVE IN ID
         MVC   MSG04+3(8),CURNAME       MOVE IN
         LA    R1,MSG04                 LOAD MESSAGE
         LA    R0,L'MSG04               LEN
         TPUT  (1),(0),R
         B     PUTNAMEE                 DONE
         SPACE 1
PUTNAME4 BP    PUTNAME5                 IS THERE A NULL
         MVC   MSG05+3(8),4(R3)         MOVE IN REUSED
         LA    R1,MSG05                 LOAD ADDRESS
         LA    R0,L'MSG05               LENGTH
         TPUT  (1),(0),R
PUTNAME5 MVC   1(11,R3),WHERE+1         MOVE IN NAME STUFF
         BXLE  R3,R4,PUTNAMER           TRY AGAIN
         LA    R3,@NAME                 REUSE TABLE
         SPACE 1
PUTNAMER STM   R3,R5,@NAMECB            SAVE CB
PUTNAMEE LM    R0,R5,SA1+12             GET SAVE AREA
         BR    R14                      RETURN TO CALLER
         TITLE 'DEBUGGER - SUBROUTINES - FORMAT'
*
*        FUNCTION - FORMAT A LINE FOR DISPLAY
*
         SPACE 1
*
*        CALLING - R1 -> OUTPUT
*                  R0 -> INPUT ADDRESS
*
         SPACE 1
*
*        USES DPLYADDR TO DETERMINE INSERT CHAR
*
         SPACE 1
FORMAT   STM   R14,R12,12(R13)          SAVE REGS
         SRL   R0,4                     DIVIDE BY 16
         SLL   R0,4                     MULT. BY 16
         ST    R0,PLACE                 SAVE ADDRESS
         LR    R15,R0                   SAVE IT
         BAL   R14,TOHEX                CONVERT IT
         MVC   0(6,R1),HEX+2            OUTPUT FROM ROUTINE
         MVC   PLACE(16),0(R15)         MOVE IN THINGS
         BAL   R14,TOHEX                CONVERT IT
         MVI   6(R1),C' '               CLEAR OUTPUT
         MVC   7(73,R1),6(R1)           FINNISH (FISCHEY ??)
         LA    R3,8(,R1)                OUTPUT PLACE
         LA    R4,4                     NUMBER FOR EACH TIME
         LA    R5,HEX                   LOCATION
         SPACE 1
FORMAT1  MVC   0(4,R3),0(R5)            4 BYTES AT A TIME
         MVC   5(4,R3),4(R5)            WITH A BLANK
         LA    R5,8(,R5)                NEXT SET
         LA    R3,11(,R3)               OFFSET TO NEXT FIELD
         BCT   R4,FORMAT1               TRY AGAIN
         SPACE 1
         TR    PLACE(16),TRTOCHAR       MAKE DISPLAYABLE
         LA    R3,53(,R1)               OUTPUT LOC
         MVI   52(R1),C'×'              DELIMETER
         MVI   78(R1),C'×'              SAME
         LA    R6,2                     NUMBER OF TIMES
         LA    R5,PLACE                 PLACE ADDRESS
         SPACE 1
FORMAT2  LA    R4,4                     NUMBER OF TIMES
FORMAT3  MVC   0(2,R3),0(R5)            CHECK IT
         LA    R5,2(,R5)                NEXT POSITION
         LA    R3,3(,R3)                SAME HERE
         BCT   R4,FORMAT3               CONTINUE?
         LA    R3,2(,R3)                EXTRA 2 THIS TIME
         BCT   R6,FORMAT2               TRY AGAIN
         MVI   DPLYADDR,0               CLEAR HI BYTE
         C     R0,DPLYADDR              GET LIKELY ADDRESS
         BH    FORMATR                  RETURN - CAN'T BE
         L     R0,DPLYADDR              GET ADDRESS TO DISPLAY AROUND
         SRL   R0,4                     /16 FOR DISPLAY CHECK
         SLL   R0,4                     *16 FOR DISPLAY CHECK
         CR    R0,R15                   SAME ADDRESS NOW?
         LR    R15,R0                   ASSUME YES
         BNE   FORMATR                  CAN'T BE IT
         SPACE 1
*        DPLYADDR POINTS TO SOMETHING IN THIS DISPLAY
         SPACE 1
         LA    R3,7(,R1)                FIRST POSITION
         MVI   SWITCH,0                 SET > SWITCH
         LA    R6,8                     NUMBER OF TIMES IN LOOP
FORMATLP C     R15,DPLYADDR             IS THIS IT?
         BE    FORMATPT                 YES, FORMAT POINTER
         LA    R3,5(,R3)                NEXT POINTER
         LA    R15,1(,R15)              UP POSITION
         XI    SWITCH,X'FF'             FLIP IT
         C     R15,DPLYADDR             IS THIS IT?
         BE    FORMATPT                 YES
         XI    SWITCH,X'FF'             FLIP IT
         LA    R15,1(,R15)              UP ONE MORE
         C     R15,DPLYADDR             IS THIS IT, MAYBE?
         BE    FORMATPT                 YES
         XI    SWITCH,X'FF'             FLIP IT AGAIN
         LA    R3,5(,R3)                UP IT
         LA    R15,1(,R15)              MORE
         C     R15,DPLYADDR             THIS IT?
         BE    FORMATPT                 DO IT
         LA    R3,1(,R3)                UP THAT POINTER
         LA    R15,1(,R15)              SAME
         MVI   SWITCH,X'00'             RESET TO '>'
         BCT   R6,FORMATLP
         EX    0,*                      THIS CAN'T HAPPEN
FORMATPT TM    SWITCH,X'FF'             WHICH IS IT?
         LA    R15,C'>'                 ASSUME NOT (50 P.C. CHANCE)
         BE    *+8                      RIGHT
         LA    R15,C'<'                 OH, WELL
         EX    R15,MVI0R3               DO IT
         SPACE 3
FORMATR  LM    R14,R12,12(R13)          RELOAD CALLER'S REGS
         BR    R14                      RETURN TO CALLER
         SPACE 2
MVI0R3   MVI   0(R3),X'00'              <<EXECUTED>>
         TITLE 'DEBUGGER - TABLES AND CONSTANTS'
TLINE    DC    CL80' '
SCREEN   DC    20CL80' '                OUTPUT LINES
         SPACE
IOPLADS  DC    4F'0'                    GETLINE IOPL
GETPARM  GETLINE MF=L
STPB     STACK MF=L
GETECB   DC    F'0'
GETLRC   DC    X'00'                    SAVE AREA FOR GETLINE RET CODE
INPUT    DC    CL256' '                 INPUT LINE
BLANKS   DC    CL80' '
MSG02    DC    C'- INVALID INPUT OR SYNTAX, RE-ENTER - '
MSG03    DC    C'- SORRY, COMMAND NOT IMPLEMENTED - '
MSG04    DC    C'- ''XXXXXXXX'' REDEFINED - '
MSG05    DC    C'- ''XXXXXXXX'' ENTRY REUSED - '
MSG06    DC    C'- LOC '
MSG06A   DC    C'XXXXXX CHANGED FROM '
MSG06F   DC    C'                 TO '
MSG06T   DC    C'                  - '
MSG06L   EQU   *-MSG06                  MAXIMUM LENGTH
MSG07    DC    C'-  TRACE TABLE, * = CURRENT - '
MSG08    DC    C'-      END OF ? REQUEST     - '
MSG09    DC    C'-       NAME   TABLE        -'
MSG10    DC    C'- DEBUGGER - STORAGE AROUND '
MSG10A   DC    C'XXXXXXXX DISPLAYED - '
MSG10L   EQU   *-MSG10
MSG11    DC    C'-  NAME NOT FOUND -'
MSG15    DC    C'XXXXXXXX <- ABEND PREVENTED -'
         SPACE 3
@NAMECB  DC    A(@NAME,12,@NAMEND)
@NAME    DC    35XL12'00'               NAME TABLE/36 ENTRIES
@NAMEND  DC    XL12'00'
         SPACE 2
@TRACECB DC    A(@TRACE,4,@TRACEND)
@TRACE   DC    29XL4'00'                TRACE TABLE/30 ENTRIES
@TRACEND DC    XL4'00'
         SPACE 3
*SCRSAVE DC    2F'0'                    SCREEN SIZE SAVE AREA
*BIGSAVE DC    2F'0'              *BIG* SCREEN SIZE SAVE AREA
DPLYADDR DC    A(0)                     DISPLAY ADDRESS
SWITCH   DC    X'00'                    SWITCHES
SW1      DC    X'00'
SW2      DC    X'00'
SW3      DC    X'00'
CHGWTO   WTO   'TSD804I XXXXXXXX HAS CHANGED LOC AAAAAA FROM FFFFFFFFFF+
               FFFFFF    TTTTTTTTTTTTTTTT  **********',                +
               MF=L,DESC=4,ROUTCDE=(2,10),MCSFLAG=NOCPY
USERID   EQU   CHGWTO+12
CHGLOC   EQU   CHGWTO+37
CHGFROM  EQU   CHGWTO+49
CHGTO    EQU   CHGWTO+69
         EJECT
CLEAR1   DC    X'40115D7E1140403CC760003C4F40003CD660003C40400013'
TRTOCHAR DC    256C'.'                  BASIC TRANSLATE TABLE
TRTOCHAR TRX   C' '
         TRX   C'.',C'.<(+×&&'
         TRX   C'$',C'$*);^-/'
         TRX   C','
         TRX   X'6C'                    PERCENT SIGN
         TRX   C'_',C'_>?'
         TRX   C':',C':#@''='
         TRX   X'7F'                    DOUBLE QUOTE
         TRX   C'A',C'ABCDEFGHI'
         TRX   C'J',C'JKLMNOPQR'
         TRX   C'S',C'STUVWXYZ'
         TRX   C'0',C'0123456789'
         EJECT
COUNT    DC    H'0'                     CURRENT COUNT
HEX      DC    5D'0'
PLACE    DC    3D'0'
FULLWORD DC    2F'0'                    USED FOR MOVE
STOPAT   DC    A(0)                     CVTMZ00 TO A DOUBLE-WORD
MZ00     DC    A(0)                     CVTMZ00
SA1      DC    18A(0)                   SAVE AREA
SA2      DC    18A(0)                   SAVE AREA
WHERE    DC    A(0)                     CURRENT PLACE
CURNAME  DC    CL8' '                   CURRENT NAME
TRTOHEX  EQU   *-C'0'
         DC    C'0123456789ABCDEF'
         TITLE 'DEBUGGER - SOME NEEDED DSECTS'
CVT      DSECT
         PRINT NOGEN                    WE ALL KNOW WHAT A CVT IS
         CVT
         IKJTCB
         IHASDWA ,                      FOR DIAG WORK AREA (ESTAE)
         PRINT NOGEN                    BACK TO THE PAPER-WASTE
         TITLE 'DEBUGGER - NOW BACK TO THE CODE'
DEBUGGER CSECT
STARTUP  MVI   INPUT,C'0'               SET INIT COMMAND TO '0'
         SPACE 1
         ESTAE FIXUP,TERM=YES
         SPACE 1
         L     R3,CVTPTR                GET CVT
         L     R3,CVTMZ00-CVT(,R3)      GET HIGHEST MACHINE ADDRESS
         ST    R3,MZ00                  SAVE FOR ABS. CHECK
         SRL   R3,4                     /16
         SLL   R3,4                     SET BACK
         ST    R3,STOPAT
         B     PARSER
         SPACE 3
DISPLAY  CLI   GETLRC,4                 WAS LAST GETLINE FROM STACK?
         BE    TGET                     YES, THEN SKIP DISPLAY
         MVC   PLACE(4),DPLYADDR        MOVE ADDRESS
         BAL   R14,TOHEX                GIVE IT TO HIM
         MVC   MSG10A(8),HEX            GIVE HEX TO HIM
         TPT   MSG10,MSG10L             PUT OUT MESSAGE
DISPLAYA LA    R1,SCREEN                LOAD OUTPUT ADDRESS
         MVI   DPLYADDR,X'00'           CLEAR ANY HI BITS
         SPACE 1
DISPLAY1 L     R10,DPLYADDR             DISPLAY ADDRESS
         S     R10,=F'32'               BACK NUMBER
         BP    DISPLAYT                 OK, GO
         A     R10,=F'32'               ADD NUMBER
DISPLAYT L     R0,DPLYADDR              GET ADDRESS
         A     R0,=F'96'                CHECK HIGHER ADDRESS
         CL    R0,MZ00                  CHECK IT
         BNH   DISPLAY0                 OK, CONTINUE
         SL    R0,=F'96'
         CL    R0,MZ00
         BNH   DISPLAYZ                 OK, AT LEAST
         MVC   DPLYADDR(4),MZ00         MOVE IN HIGHEST
         B     ANERROR                  OOPS
         SPACE 1
DISPLAYZ L     R10,MZ00                 LOAD HIGHEST ADDRESS
         S     R10,=F'128'
         SPACE 1
DISPLAY0 MODESET  KEY=ZERO
         SPACE
         LA    R1,SCREEN
         LA    R3,20                    LOAD LINE COUNT
         MVI   DPLYADDR,X'00'           CLEAR HI BYTE HERE
DISPLAYF LR    R0,R10                   GET ADDRESS
         BAL   R14,FORMAT               FORMAT IT
         LA    R1,80(,R1)               NEXT LINE
         A     R10,=F'16'               UP NUMBER
         BCT   R3,DISPLAYF
         MODESET KEY=NZERO
         SPACE 1
         BAL   R14,PUTTRACE             TRACE THIS ENTRY
         LA    R3,SCREEN                SET UP DISPLAY
         LA    R4,80                    LENGTH
         LA    R5,SCREEN+20*80-1        END FOR SCREEN
         SPACE 1
DISPLAYQ TPUT  (R3),(R4)
         BXLE  R3,R4,DISPLAYQ
         TITLE 'DEBUGGER - INPUT AND PARSE'
TGET     L     R3,CPPLECT               FOR GETLINE
         L     R2,CPPLUPT
         GETLINE PARM=GETPARM,UPT=(2),ECT=(3),ECB=GETECB,              *
               MF=(E,IOPLADS)
         SPACE
         STC   R15,GETLRC               SAVE GETLINE RET CODE
         LTR   R15,R15
         BNZ   NOERASE
         TPUT  CLEAR1,L'CLEAR1,FULLSCR,HOLD
         SPACE
NOERASE  CLI   GETLRC,16                EOD ON INCORE LIST?
         BE    DISPLAY                  YES, GO DISPLAY
         BH    GETERR                   ELSE, GETLINE ERROR
         SPACE
         L     R1,GETPARM+4             ADDR OF RETURNED LINE
         LH    R2,0(R1)           LENGTH FROM GETLINE
         SH    R2,=H'4'           MINUS 4 FOR LENGTH
         LTR   R2,R2              EQUAL TO ZERO?
         BZ    CMPRPER            SKIP ORING OF X'40'
         LA    R3,4(R1)           POINT TO RESPONSE OF GETLINE
ORLOOP   OI    0(R3),X'40'        HOPEFULLY CHANGE TO UPPER CASE
         LA    R3,1(R3)           INCREMENT TO NEXT CHAR.
         BCT   R2,ORLOOP          CONTINUE UNTIL FINISHED
CMPRPER  CLI   4(R1),C'%'               FOR EXECS, CALL ''EXEC'' CP
         BE    CALLEXEC
         CLC   =C'HELP',4(R1)
         BE    CALLSCAN
         CLC   =C'X ',4(R1)             CHECK FOR PCF ''X''
         BNE   NOTPCFX
         SPACE
CALLSCAN ST    R1,CSPLCBUF              STORE FOR CMD SCAN
         SR    R0,R0                    ZERO FLAGS
         ST    R0,CSFLG
* NOTE CMD SCAN IS ONLY CALLED TO ALLOW THE PCF ''X'' FUNCTION
         CALLTSSR EP=IKJSCAN,MF=(E,CSPL)
         SPACE
         ICM   R1,15,CSOACNM            GET CMD NAME
         BZ    PUTMODE                  IF INVALID, CONTINUE
         CLI   0(R1),C'H'               IS IT HELP?
         BNE   PUTMODE                  IF NOT, CONTINUE
         L     R1,CSPLCBUF              LOAD CMD BUFFER ADDR
         ST    R1,CPPLCBUF              STORE IN CPPL
         LA    R1,CPPL                  ADDR OF CPPL
         LINK  EP=HELP                  INVOKE HELP
         SPACE
PUTMODE  TPT   =C'DEBUGGER',8
         B     TGET
         SPACE
CALLEXEC ST    R1,CPPLCBUF
         LA    R1,CPPL
         LINK  EP=EXEC
         B     TGET
         SPACE
NOTPCFX  MVI   INPUT,C' '               BLANK INPUT LINE
         MVC   INPUT+1(L'INPUT-1),INPUT
         LH    R2,0(R1)                 LOAD LENGTH OF LINE
         LR    R3,R2                    SAVE FOR LATER FREEMAIN
         SH    R2,=H'5'                 SUBTRACT FOR MVC
         BM    FRESP1                   IF ZERO LEN, THEN FREE BUFFER
         MVC   INPUT(0),4(R1)           * EXECUTED *
         EX    R2,*-6
         SPACE
FRESP1   FREEMAIN R,LV=(3),A=(1),SP=1
         B     PARSER
         SPACE
GETERR   TPT   MSG02,L'MSG02            ISSUE MESSAGE
         TCLEARQ INPUT                  THROW IT AWAY
         B     FLUSH                    TRY AGAIN
         SPACE
PARSER   DS    0H
         LA    R3,INPUT
         LA    R4,1                     INCREMENT
         LA    R5,L'INPUT-1(,R3)        END
         LR    R6,R3                    PLACE FOR IT
COMPRESS CLI   0(R3),C' '               NULL?
         BE    COMPRES1                 YES
         MVC   0(1,R6),0(R3)            MOVE IN CHAR
         LA    R6,1(,R6)                POINT AT NEXT
COMPRES1 BXLE  R3,R4,COMPRESS           TRY AGAIN
         MVC   0(80,R6),BLANKS          INSURE A BLANK TERMINATOR
         LA    R3,INPUT                 GET START ADDRESS
         SR    R6,R3                    GET COUNT
         TITLE 'DEBUGGER - COMMAND SCAN'
         LA    R3,INPUT                 RELOAD START
         BZ    DISPLAY                  ZERO COUNT, REDISPLAY
         CLC   =CL3'END',INPUT          END REQUEST?
         BE    LEAVE                    YES
         SPACE 1
OPSCAN   CLC   =C'DELETE''',0(R3)       DELETE A LOAD MODULE?
         BE    DELCMD
         CLI   0(R3),C'D'               DISPLAY?
         BNE   OPSCANND                 NO
         AR    R3,R4                    INCREMENT
         SR    R6,R4                    DOWN COUNT
         BNP   DISPLAY                  THAT'S IT
         B     ASSUMED                  DO IT
OPSCANND CLI   0(R3),C'S'               STORE?
         BE    STORE
         CLI   0(R3),C'X'               XOR?
         BE    XOR
         CLC   =C'ASCB''',0(R3)         ASCB ID?
         BE    ASCBSCAN
         CLC   =C'CSCB''',0(R3)         CSCB ID?
         BE    CSCBSCAN
         CLC   =C'LOAD''',0(R3)         FIND A LOAD MODULE?
         BE    LOADCMD
         CLI   0(R3),C'O'               OR?
         BE    OR
         CLI   0(R3),C'F'               FULLWORD?
         BE    FW                       YES
         CLI   0(R3),C'H'               HALFWORD?
         BE    HW                       YES
         CLI   0(R3),C'N'               AND?
         BE    AND
         CLI   0(R3),C'='               DEFINE A NAME?
         BE    DEFINE                   YES
         CLI   0(R3),C'>'               TRACE?
         BE    FORWARD
         CLI   0(R3),C'<'               TRACE?
         BE    BACK                     YES
         CLI   0(R3),C'C'               COMPLEMENT?
         BE    COMPL                    YES
         CLC   =CL3'UCB',0(R3)          UCB COMMAND?
         BE    UCB
         CLC   =CL2'?T',0(R3)           TRACE TABLE?
         BE    QT                       YES
         CLC   =CL2'?N',0(R3)           NAME TABLE?
         BE    QN                       YES
         CLC   =CL2'?C',0(R3)           CSCB LOOK?
         BE    QC                       YES
         CLI   0(R3),C'+'               ADD?
         BE    ADD
         CLI   0(R3),C'-'               SUBTRACT?
         BE    SUBTRACT                 YES
         CLI   0(R3),C' '               END?
         BE    DISPLAY                  YES
         CLI   0(R3),C','               SEPARATOR?
         BE    UPPTR                    YES
ASSUMED  BAL   R14,MAKENUM              IS THIS NUMBER?
         B     OPGETNM                  NO... TRY AGAIN
         B     UPPTR                    DO IT
OPGETNM  BAL   R14,GETNAME              SEE IF A NAME?
         B     ANERROR                  ERROR
         MVC   DPLYADDR(4),WHERE        MOVE IN ID
         SPACE 1
UPPTR    CLI   0(R3),C'+'               SPECIAL CASE
         BE    OPSCAN                   YES
         CLI   0(R3),C'-'               SPECIAL CASE?
         BE    OPSCAN                   YES
         AR    R3,R4                    INCREMENT POINTER
         SH    R6,=H'1'                 LESS ONE
         BP    OPSCAN                   TRY AGAIN
         B     DISPLAY                  DO DISPLAY THING
ADDRESS  BAL   R14,MAKENUM              GO TO ROUTINE
         B     OPGETNM                  NOT VALID NUMBER
         B     UPPTR                    UP IT
         SPACE 3
ANERROR  TPT   INPUT,80                 PUT OUT ERROR MESSAGE
         MVI   INPUT,C' '               BLANK INPUT
         MVC   INPUT+1(L'INPUT-1),INPUT
         MVI   0(R3),C'×'
         TPT   INPUT,L'INPUT
         TPT   MSG02,L'MSG02            PUT OUT ERROR MESSAGE
         SPACE
FLUSH    L     R3,CPPLECT               FOR STACK
         L     R2,CPPLUPT
         STACK PARM=STPB,UPT=(2),ECT=(3),ECB=GETECB,DELETE=ALL,        *
               MF=(E,IOPLADS)
         B     TGET
         TITLE 'DEBUGGER - MAKENUM ROUTINE'
MAKENUM  STM   R3,R15,SA2+12             SAVE USED REGS
         XR    R15,R15                  CLEAR COUNT
         MVI   COUNT+1,0                SAME
         BAL   R14,CHECKNXT             SEE IF FIRST IS IT
         B     MAKENUM1                 NOT IT
         B     CVRETRN                  YES, IMMED. RETURN
         SPACE 1
MAKENUM1 CLI   0(R3),C'*'               THIS 'HERE'?
         BE    CVRETRN                  YES... JUST RETURN
         XR    R7,R7                    TEMP
         SR    R8,R8
         XR    R9,R9
NLOOP    CLI   0(R3),C'.'               DECIMAL?
         BE    DEC                      YES
         BAL   R14,CHECKNXT             CHECK FOR DELIMETER
         B     NXTNUM                   NOT A DELIMETER
         B     NBLNK                    SIMULATE END OF STRING
NXTNUM   LA    R15,1(,R15)              UP COUNT
         IC    R7,0(R3)                 GET CHAR
         N     R7,=F'15'                STRIP ZONE
         CLI   0(R3),C'0'               A NUMBER
         BNL   PNUM                     NOT HEX
         CLI   0(R3),C'A'               CHECK IT
         BL    CVERROR                  TEMP
         CLI   0(R3),C'F'               CHECK IT
         BH    CVERROR                  TEMP
         LA    R7,9(,R7)                SCALE IT
PNUM     SLL   R9,4                     HEX BY 16
         MH    R8,=H'10'                DECIMAL
         AR    R8,R7                    ADD NUMBER TO BOTH
         AR    R9,R7                    SAME
         AR    R3,R4                    ADD ONE
         SR    R6,R4
         BP    NLOOP                    TRY AGAIN
NBLNK    ST    R9,DPLYADDR
         STH   R15,COUNT                SAVE CHAR COUNT
         B     CVRETRN
DEC      LTR   R15,R15                  TEST FOR JUST A '.'
         BNP   CVERROR                  INVALID INPUT
         MVI   COUNT+1,8                ALL DECIMAL IS 4 BYTES
         ST    R8,DPLYADDR              SAVE CONTENTS OF DEC
         SPACE 1
CVRETRN  LM    R7,R15,SA2+28             GET REGS BACK
         B     4(,R14)                  RETURN GOOD
         SPACE 1
CVERROR  LM    R3,R15,SA2+12             GET REGS BACK
         BR    R14                      RETURN TO CALLER
         TITLE 'DEBUGGER - GETNAME SUBROUTINE'
GETNAME  STM   R1,R9,08(R13)            SAVE REGS
         LM    R4,R5,@NAMECB+4          LOAD NAME CTL BLECHS
         LR    R7,R3                    SAVE POINTER
         LA    R3,@NAME                 FIRST NAME ENTRY
         SPACE 1
         LA    R8,1                     INCREMENT
         LA    R9,INPUT+L'INPUT-1       LAST POSSIBLE CHAR
         LA    R2,8                     MAXIMUM LENGTH
         MVC   CURNAME(8),BLANKS
         LA    R1,CURNAME               GET NAME
         SPACE 1
GETNAME1 CLI   0(R7),C' '               BLANK?
         BE    GETNAMEB                 YES
         CLI   0(R7),C','               TERMINATOR?
         BE    GETNAMEB                 YES
         CLI   0(R7),C'+'               SPECIAL CASE
         BE    GETNAMEB                 YES
         CLI   0(R7),C'-'               SPECIAL CASE
         BE    GETNAMEB
         CLI   0(R7),C'A'               CHECK FOR VALID
         BNL   GETNAMEN                 GET NEXT
         CLI   0(R7),C'#'
         BE    GETNAMEN
         CLI   0(R7),C'/'               FOR STRANGE NAMES
         BE    GETNAMEN                 OK, CONTINUE
         CLI   0(R7),C'@'               ANOTHER?
         BE    GETNAMEN                 YES... CONTINUE
         CLI   0(R7),C'$'
         BNE   GETNAMEE                 ERROR
         SPACE 1
GETNAMEN SH    R2,=H'1'
         BCTR  R6,0                     SUBTRACT ONE
         BM    GETNAMEE                 OOPS
         MVC   0(1,R1),0(R7)            MOVE THIS CHARACTER
         AR    R1,R8                    UP PTR BY ONE
         BXLE  R7,R8,GETNAME1           TRY AGAIN
         SPACE 1
GETNAMEB CLC   CURNAME(8),4(R3)         IS THIS IT?
         BE    GETNAMEO                 YES
         BXLE  R3,R4,GETNAMEB           TRY AGAIN
         SPACE 1
GETNAMEE MVI   WHERE,X'FF'              INDICATE ERROR
         B     GETNAMEQ
         SPACE 1
GETNAMEO MVI   0(R3),X'00'              CLEAR HI BYTE (FOR SURE..)
         MVC   WHERE(4),0(R3)           MOVE IN ADDRESS
GETNAMEQ LR    R3,R7                    GET NEXT POINTER
         L     R2,12(,R13)              RELOAD REGS
         LM    R4,R5,20(R13)
         LM    R7,R9,32(R13)            REST
         CLI   WHERE,X'FF'              ERROR?
         BER   R14                      YES
         B     4(,R14)                  RETURN GOOD
         EJECT
DOBITS   EQU   *
DOCHARS  EQU   *
NOTIMPL  TPT   MSG03,L'MSG03            PUT ERROR MESSAGE
         B     FLUSH
         TITLE 'DEBUGGER - DEFINE ROUTINE'
DEFINE   AR    R3,R4                    INCREMENT POINTER
         SR    R6,R4
         BNP   DEFCLEAR                 CLEAR IT
         CLI   0(R3),C','               CLEAR IT?
         BE    DEFCLEAR                 YES
         L     R15,DPLYADDR             LOAD CURRENT ADDRESS
         BAL   R14,GETNAME              GET IT
         B     DEFINERR                 CHECK IT, THOUGH
DEFINEDO ST    R15,WHERE                SAVE WHERE
         BAL   R14,PUTNAME              PUT IN NAME
         B     UPPTR                    CONTINUE
         SPACE 1
DEFINERR BAL   R14,CHECKNXT             CHECK DELIMETER
         B     ANERROR                  ERROR
         B     DEFINEDO                 DO IT
         SPACE 2
DEFCLEAR BAL   R14,CLRNAME              DO IT
         AR    R3,R4                    ADD IT
         SR    R6,R4
         B     OPSCAN                   NEXT
         TITLE 'DEBUGGER - NAME AND TRACE TABLE DISPLAY'
QT       STM   R0,R15,SA2+8             SAVE REGS
         LA    R1,MSG07
         LA    R0,L'MSG07
         TPUT  (1),(0),R
         LM    R4,R5,@TRACECB+4         GET THAT
         LA    R3,@TRACE                START
QT1      MVI   TLINE,C' '               CLEAR LINE
         MVC   TLINE+1(79),TLINE
         LA    R6,10                    NUMBER PER LINE
         LA    R7,TLINE                 LOAD ADDRESS
         LR    R1,R7                    SAVE IT
         SPACE 1
QT2      MVC   PLACE(4),0(R3)           MOVE IN
         BAL   R14,TOHEX                MOVE IT OUT
         MVC   1(6,R7),HEX+2            MOVE IN
         C     R3,@TRACECB              THIS IT?
         BNE   *+8                      NO
         MVI   0(R7),C'*'               POINTER
         LA    R7,8(,R7)                INCREMENT
         BXLE  R3,R4,QT4                DO NEXT
         B     QTPUTL                   LAST LINE
QT4      BCT   R6,QT2                   DO IT
         LA    R0,80                    LENGTH
         TPUT  (1),(0),R
         B     QT1                      TRY AGAIN
         SPACE 1
QTPUTL   LA    R0,80
         TPUT  (1),(0),R
         LA    R1,MSG08
         LA    R0,L'MSG08
         TPUT  (1),(0),R
         LM    R0,R15,SA2+8             CONTINUE
QT3      CLI   0(R3),C' '               UPDATE PTR
         BE    QT3R                     YES
         CLI   0(R3),C','               DETERMINATIVE?
         BE    QT3R                     YES
         AR    R3,R4                    ADD ONE
         SR    R6,R4                    SUBTRACT 1
         BP    QT3                      OK
QT3R     B     TGET                     GET NEW COMMAND
         SPACE 3
QN       STM   R0,R15,SA2+8             SAVE REGS
         LA    R1,MSG09
         LA    R0,L'MSG09
         TPUT  (1),(0),R
         LM    R4,R5,@NAMECB+4          GET NAME CTL
         LA    R3,@NAME                 GET NAME
QN1      LA    R7,TLINE                 LOAD LINE ADDRESS
         MVI   TLINE,C' '               CLEAR IT
         MVC   TLINE+1(79),TLINE
         LR    R1,R7                    SAVE ADDRESS
         LA    R6,4                     NUMBER PER LINE
QN2      OC    0(8,R7),4(R3)            NAME
         MVC   PLACE(4),0(R3)           MOVE IN ADDRESS
         BAL   R14,TOHEX                DO IT
         MVC   9(6,R7),HEX+2            MOVE IN REP
         LA    R7,20(,R7)               INCREMENT
         BXLE  R3,R4,QN4                TRY IT
         B     QTPUTL                   LAST
QN4      BCT   R6,QN2                   TRY AGAIN
         LA    R0,80                    LENGTH
         TPUT  (1),(0),R                DO IT
         B     QN1                      TRY AGAIN
         TITLE 'DEBUGGER - FORWARD AND BACK ROUTINES -(TRACE)'
FORWARD  LM    R7,R9,@TRACECB           GET TRACE CTL
         BXLE  R7,R8,FORWARD1           OK
         LA    R7,@TRACE                GET START AGAIN
FORWARD1 MVC   DPLYADDR(4),0(R7)        MOVE IN TRACE ENTRY
         STM   R7,R9,@TRACECB           RESTORE
         B     UPPTR                    INCREMENT
         SPACE 3
BACK     LM    R7,R9,@TRACECB           LOAD TRACE CTL
         LA    R14,@TRACE               LOAD ADDR OF FIRST
         SR    R7,R8                    ONE LESS TRACE
         CR    R7,R14                   BELOW FIRST?
         BNL   BACK1                    NO
         LR    R7,R9                    MAKE IT LAST
BACK1    MVC   DPLYADDR(4),0(R7)        MOVE IN TRACE ENTRY
         STM   R7,R9,@TRACECB           SAVE IT
         B     UPPTR                    DO IT
         TITLE 'DEBUGGER - UCB ROUTINE'
UCB      LA    R3,3(,R3)                POINT AFTER UCB
         SH    R6,=H'3'                 LENGTH OF 'UCB'
         BNP   ANERROR                  ERROR CONDITION
         L     R2,DPLYADDR              LOAD DISPLAY ADDRESS
         BAL   R14,MAKENUM              GET IT NUMERIC
         B     UCBBAD                   NO SUCH ANIMULE
         CLI   COUNT+1,0                SAY SOMETHING LIKE UCB. OR UCB*
         BE    UCBBAD                   YES... IT'S INVALID
         CLC   DPLYADDR(4),=X'00000FFF' MAX?
         BH    UCBBAD                   OOPS
*        ICM   R15,15,DPLYADDR          LOAD AND TEST IT
         UNPK  HEX(9),DPLYADDR(5)       MAKE EBCDIC
         TR    HEX(9),TRTOHEX           IS NOW EBCDIC
*        MUST COMPARE LEN=3 ON HEX+5
         OC    DPLYADDR(4),DPLYADDR     CHECK FOR ZERO
         ST    R2,DPLYADDR
         L     R1,CVTPTR                SO FAR, IT'S ASSUMED GOOD
         BZ    UCBBAD                   ERROR CONDITION
         L     R1,CVTILK2-CVT(,R1)      GET LOOKUP TABLE
         SPACE 1
UCBGET   SR    R14,R14
         ICM   R14,B'0011',0(R1)        GET UCB ADDRESS
         LA    R1,2(,R1)                GET NEXT MEANTIME
         BZ    UCBGET                   DUMMY, GET NEXT
         CLM   R14,B'0011',=X'FFFF'     RUN OUT OF TABLE?
         BE    ANERROR                  OOPS
         SPACE 1
         CLC   HEX+5(3),13(R14)         IS THIS IT?
         BNE   UCBGET                   NO
         ST    R14,DPLYADDR             SAVE IT AS DISPLAY ADDRESS
         B     UPPTR                    DO IT
         SPACE 1
UCBBAD   ST    R2,DPLYADDR              SAVE IT
         B     ANERROR                  ERROR MAKER
         TITLE 'DEBUGGER - ADD AND SUBTRACT'
ADD      MVI   SW1,X'00'                SET ADD FLAG
         B     ADDSUB                   GO
SUBTRACT MVI   SW1,X'FF'                SET SUBTRACT FLAG
         SPACE 1
ADDSUB   L     R2,DPLYADDR              SAVE CURRENT ADDRESS
         AR    R3,R4                    ADD ONE TO LOC CTR
         SR    R6,R4                    SUB ONE FROM COUNT
         BNP   DISPLAY                  END
         BAL   R14,MAKENUM              GET A NUMBER
         B     ADDNAME                  NOT A NUMBER
         CLI   COUNT+1,0                ANYTHING AFTER OPERATOR?
         BNE   ADDCOM                   YES
         CLI   0(R3),C'*'               HERE REQUEST?
         BNE   UPPTR                    NO, JUST FORGET THIS OPER
         B     ADDCOM                   GO DO A +/- *
         SPACE 1
ADDNAME  BAL   R14,GETNAME              SEE IF IT IS A NAME
         B     ANERROR                  ERROR CONDITION
         MVC   DPLYADDR(4),WHERE        MOVE IN RETURNED NAME
ADDCOM   CLI   SW1,X'FF'                ADD OR SUBTRACT?
         BE    ADDENDUM                 SUBTRACT
         AL    R2,DPLYADDR              ADD CURRENT TO IT
         ST    R2,DPLYADDR              SAVE IT
         B     UPPTR                    TRY NEXT
         SPACE 1
ADDENDUM SL    R2,DPLYADDR              DO ONLY LOGICAL OPERATIONS
         ST    R2,DPLYADDR              SAVE IT
         B     UPPTR                    TRY NEXT
         TITLE 'DEBUGGER - INDIRECT ADDRESSING COMMANDS'
FW       MVI   SW2,X'00'                SET SWITCH
         B     INDIR                    GO TO IT
HW       MVI   SW2,X'01'                SET SWITCH
         B     INDIR
COMPL    MVI   SW2,X'02'                SET FLAG
         SPACE 2
INDIR    AR    R3,R4                    UP LOC CTR
         SR    R6,R4                    DOWN COUNT
         BNP   INDIRDO                  RELATIVE TO HERE
         BAL   R14,MAKENUM              MAKE IT A NUMBER?
         B     INDNAME                  NAME?
         B     INDIRDO                  NO
         SPACE 1
INDNAME  BAL   R14,GETNAME              GET A NAME
         B     ANERROR                  SORRY, CHARLIE
         MVC   DPLYADDR(4),WHERE        MOVE IN RETURNED ADDR
         SPACE 2
INDIRDO  MVI   DPLYADDR,X'00'           GET HI BYTE
         CLC   DPLYADDR(4),MZ00         IN MACHINE?
         BH    DISPLAY                  SIMULATE ERROR CONDITION
         L     R2,DPLYADDR              GET ADDRESS
         LR    R1,R2                    SAVE IT
         TM    SW2,X'01'                HALFWORD?
         BO    INDIRX                   YES... OTHERS MUST BE 1F DOWN
         LA    R2,3(,R2)                END POINTER
         C     R2,MZ00                  STILL IN MACHINE?
         BH    ANERROR                  NO
         MVC   FULLWORD(4),0(R1)        MOVE IN ADDRESS
         L     R2,FULLWORD              GET IT
         TM    SW2,X'02'                COMPL?
         BNO   *+6                      NO
         LCR   R2,R2                    COMPLEMENT IT
         ST    R2,DPLYADDR              SAVE IT
         B     UPPTR                    DO IT
         SPACE 3
INDIRX   LA    R2,1(,R2)                SEE IF IN MACHINE
         C     R2,MZ00                  CHECK IT
         BH    ANERROR                  ERROR
         XC    DPLYADDR(4),DPLYADDR     CLEAR IT
         MVC   DPLYADDR+2(2),0(R1)      MOVE IN ADDRESS
         B     UPPTR
         TITLE 'DEBUGGER - THE ''STORE'' COMMANDS'
STORE    MVI   SW3,0                    BRANCH ENTRY
         B     ALTER
XOR      MVI   SW3,6                    BRANCH ENTRY
         B     ALTER
AND      MVI   SW3,12                   BRANCH ENTRY
         B     ALTER
OR       MVI   SW3,18                   BRANCH ENTRY
         SPACE 1
ALTER    MODESET KEY=ZERO               ALLOW ACCESS
         AR    R3,R4                    UP LOC CTR
         MVI   SWITCH,X'00'             SET NON-CHAR MODE
         SR    R6,R4                    SUBTRACT LEN
         BNP   CGERROR                  INVALID
         CLI   0(R3),C'/'               BIT STRING?
         BE    DOBITS                   YES
         CLI   0(R3),C''''              CHAR INFO?
         BE    DOCHARS                  YES
         L     R9,DPLYADDR              LOAD DISPLAY ADDRESS
         BAL   R14,MAKENUM              MAKE IT A NUMBER
         B     CGERROR                  FORGET IT NOW
         SPACE 1
ALTERCAT LH    R8,COUNT                 GET INPUT LEN
         LTR   R8,R8                    TEST IT
         BNP   CGERROR                  ERROR
         SR    R8,R4                    -1 FOR LATER
         SRL   R8,1                     /2 GETS EX TYPE LENGTH
         CLI   SWITCH,X'FF'             FROM CHARACTER MODE?
         BE    ALTEREGO                 YES
         CH    R8,=H'3'                 MAX EX LEN
         BH    CGERROR                  FORGET IT
         SPACE 2
ALTEREGO LR    R1,R9                    LOAD DISPLAY ADDR
         ALR   R1,R4                    ONE FOR EX INFO
         ALR   R1,R8                    GET END
         CL    R1,MZ00                  IN MACHINE?
         BH    CGERROR                  NO
         EX    R8,ALTCOPY1              COPY IT TO FULLWORD
         EX    R8,ALTCOPY2              COPY IT TO PLACE
         CLI   SWITCH,X'FF'             CHAR COPY?
         LA    R14,DPLYADDR              LOAD DEFAULT CHG PLACE
         BNE   XNOTC                    NOT CHAR
         LA    R14,HEX                   PLACE CHAR CONVERT PUTS IT
         MVI   SWITCH,X'00'             SET NOT CHAR
         B     NOADJUST                 AROUND ADJUSTMENT
         SPACE 1
XNOTC    LA    R15,3                    MAX EX LEN
         SR    R15,R8                   BYTES TO SHIFT
         L     R0,DPLYADDR              GET OUTPUT
         SLL   R15,3                    BITS TO SHIFT
         SLL   R0,0(R15)                SHIFT PROPER NUMBER
         ST    R0,DPLYADDR              RESET IT
NOADJUST XR    R15,R15                  CLEAR JUMP ADDRESS
         IC    R15,SW3                  JUMP OFFSET
         LA    R1,EXTAB(R15)            EXECUTE TABLE
         EX    R8,0(R1)                 DO IT
         BAL   R14,TOHEX                DO HEX THING
         LR    R15,R8                   GET LENGTH
         SLL   R15,1                    DOUBLE FOR DISPLAY
         AR    R15,R4                   ADD ONE FOR EX LEN
         EX    R15,MVC06F                DO THAT
         MVC   PLACE(8),FULLWORD        MOVE THE 'TO' THING
         BAL   R14,TOHEX                DO THAT
         EX    R15,MVC06T                DO THAT
         ST    R9,PLACE                 ADDRESS
         BAL   R14,TOHEX                DO IT
         MVC   MSG06A(6),HEX+2          PLACE
         MVC   CHGLOC(6),HEX+2          SAME
         MVC   CHGFROM(36),MSG06F
         WTO   MF=(E,CHGWTO)            DO IT
         MODESET KEY=ZERO
         EX    R8,MOVER
         MODESET KEY=NZERO
         TPT   MSG06,MSG06L
         ST    R9,DPLYADDR              RESTORE DISPLAY ADDRESS
         MVI   MSG06F,C' '
         MVC   MSG06F+1(15),MSG06F
         MVC   MSG06T(16),MSG06F
         B     UPPTR
         SPACE 3
ALTCOPY1 MVC   FULLWORD(0),0(R9)        <<EXECUTED>>
ALTCOPY2 MVC   PLACE(0),0(R9)           <<EXECUTED>>
EXTAB    MVC   FULLWORD(0),0(R14)       <<EXECUTED>>
         XC    FULLWORD(0),0(R14)       <<EXECUTED>>
         NC    FULLWORD(0),0(R14)       <<EXECUTED>>
         OC    FULLWORD(0),0(R14)       <<EXECUTED>>
         EX    0,*                      ERROR CONDITION
MVC06F   MVC   MSG06F(0),HEX            <<EXECUTED>>
MVC06T   MVC   MSG06T(0),HEX            <<EXECUTED>>
MOVER    MVC   0(0,R9),FULLWORD         <<EXECUTED>>
         SPACE 3
CGERROR  ST    R9,DPLYADDR              RESTORE DISPLAY ADDRESS
         B     ANERROR                  DIE
         TITLE 'DEBUGGER - ADDRESS SPACE CONTROL BLOCK ROUTINE'
ASCBSCAN AH    R3,=H'5'                 MOVE OFF - ASCB'
         SH    R6,=H'5'                 DOWN LENGTH
         BNP   ANERROR                  NOTHING LEFT? IS BAD
         BAL   R14,GETNAME              EXTRACT NAME FROM INPUT
         NOP   ANERROR
         SPACE 1
ASCBFIND STM   R0,R15,SA2+8
         L     R1,16                    FIND CVT
         L     R1,X'22C'(,R1)           FIND ASVT
         LA    R3,X'210'(,R1)           FIND FIRST ENTRY
         LA    R4,4                     LOAD ENTRY SIZE
         L     R5,X'204'(,R1)           MAX ADDR SPACES
         SLA   R5,2                     MULT BY FOUR
         LA    R5,0(R3,R5)              FIND END OF TABLE
         BCTR  R5,0
ASCBLOOP TM    0(R3),X'FF'              NULL ENTRY?
         BNZ   ASCBBXLE                 YES SKIP
         L     R2,0(,R3)                PICK UP PNTR TO ASCB
         ICM   R1,15,172(R2)            NAME OF INIT PGMS
         BZ    *+14                     SKIP IF NO NAME
         CLC   CURNAME,0(R1)            IS THIS IT?
         BE    ASCBGOT
         ICM   R1,15,176(R2)            NAME OF START/MOUNT
         BZ    *+14                     SKIP IF NO NAME
         CLC   CURNAME,0(R1)            IS THIS IT?
         BE    ASCBGOT
ASCBBXLE BXLE  R3,R4,ASCBLOOP
         B     CSCBNOTF                 USE CSCB RTN ERROR MSG CODE
         SPACE
ASCBGOT  ST    R2,DPLYADDR
         LM    R0,R15,SA2+8
         B     UPPTR
         TITLE 'DEBUGGER - LOAD MODULE DELETE ROUTINE'
DELCMD   AH    R3,=H'7'                 MOVE OFF - DELETE'
         SH    R6,=H'7'                 DOWN LENGTH
         BNP   ANERROR                  NOTHING LEFT? IS BAD
         BAL   R14,GETNAME              EXTRACT NAME FROM INPUT
         NOP   ANERROR
         SPACE 1
         DELETE EPLOC=CURNAME
         SPACE 1
         B     UPPTR                    CONTINUE
         TITLE 'DEBUGGER - LOAD MODULE DISPLAY ROUTINE'
LOADCMD  AH    R3,=H'5'                 MOVE OFF - LOAD'
         SH    R6,=H'5'                 DOWN LENGTH
         BNP   ANERROR                  NOTHING LEFT? IS BAD
         BAL   R14,GETNAME              EXTRACT NAME FROM INPUT
         NOP   ANERROR
         SPACE 1
         LOAD  EPLOC=CURNAME,ERRET=CSCBNOTF
         SPACE 1
         ST    R0,DPLYADDR
         B     UPPTR                    CONTINUE
         SPACE 5
* CDE  DISPLAY ROUTINE
         SPACE 1
QC       STM   R0,R15,SA2+8
         L     R5,X'21C'                FIND MY TCB
         ICM   R5,15,X'24'(R5)          FIND FIRST LLE
         BNZ   LLETITLE
         TPT   =C'* NO LOADED MODULES FOUND *',27
         B     TGET
         SPACE 1
LLETITLE TPT   =C'MOD NAME  EP/MAJOR  START ADR   LEN',35
LLELOOP  MVI   TLINE,C' '               BLANK LINE
         MVC   TLINE+1(79),TLINE
         SPACE
         L     R7,4(,R5)                GO TO CDE FROM LLE
         MVC   TLINE(8),8(R7)           MOVE IN NAME
         UNPK  TLINE+10(9),16(5,R7)     CONVERT ENTRY PT
         TR    TLINE+10(8),TRTOHEX
         MVI   TLINE+18,C' '            ERASE GARBAGE CHARACTER
         SPACE 1
         TM    28(R7),X'04'             IS THIS A MINOR CDE?
         BZ    C4XTNTL                  NO, CHECK FOR EXTENT LIST
         L     R6,20(,R7)               GO TO MAJOR CDE
         MVC   TLINE+20(8),8(R6)        MOVE IN MAJOR NAME
         B     NOXTNT
         SPACE
C4XTNTL  TM    29(R7),X'20'             EXTENT LIST PRES?
         BZ    NOXTNT
         SPACE
         L     R6,20(,R7)               GO TO EXTENT LIST
         UNPK  TLINE+20(9),12(5,R6)     STARTING ADDRESS
         TR    TLINE+20(8),TRTOHEX
         MVI   TLINE+28,C' '
         UNPK  TLINE+30(7),9(4,R6)      MODULE LENGTH
         TR    TLINE+30(6),TRTOHEX
         MVI   TLINE+36,C' '
         SPACE 1
NOXTNT   TPUT  TLINE,80
         ICM   R5,B'1111',0(R5)         FOLLOW LLE CHAIN
         BNZ   LLELOOP
         B     TGET
         TITLE 'DEBUGGER - CSCB DISPLAY ROUTINE'
CSCBSCAN AH    R3,=H'5'                 MOVE OFF - CSCB'
         SH    R6,=H'5'                 DOWN LENGTH
         BNP   ANERROR                  NOTHING LEFT? IS BAD
         BAL   R14,GETNAME              EXTRACT NAME FROM INPUT
         NOP   ANERROR
         SPACE 1
CSCBFIND STM   R0,R15,SA2+8
         L     R1,16                    FIND CVT
         L     R2,X'94'(,R1)            FIND MSRDA (BASEA)
CSCBLOOP ICM   R2,15,0(R2)              GO TO NEXT CSCB
         BZ    CSCBNOTF                 IF NONE
         CLC   CURNAME,8(R2)
         BE    CSCBGOT
         CLC   CURNAME,16(R2)
         BE    CSCBGOT
         B     CSCBLOOP
         SPACE
CSCBNOTF TPUT  MSG11,L'MSG11,ASIS
         TPUT  CURNAME,8
         B     FLUSH
         SPACE
CSCBGOT  ST    R2,DPLYADDR
         LM    R0,R15,SA2+8
         B     UPPTR
         SPACE 3
         LTORG
         END   DEBUGGER
