*          DATA SET ESP024     AT LEVEL 017 AS OF 02/05/19
         TITLE '*---PANPUNCH---* PUNCH PAN BACKUP/TRANSFER TAPE MEMBER'
         PRINT OFF
         MACRO
         ENTER &BASE=1,&PROGRAM=,&ROUTINE=
         GBLB  &BENTER
         LCLA  &R,&K,&REG1,&REG2
         LCLC  &X,&NAME,&ID
&X       SETC  '&SYSNDX'
         AIF   (T'&PROGRAM EQ 'O' AND T'&ROUTINE EQ 'O').ERROR
         AIF   (T'&PROGRAM EQ 'O' AND T'&ROUTINE NE 'O').GENROUT
         AIF   (T'&PROGRAM NE 'O' AND T'&ROUTINE EQ 'O').GENPROG
         MNOTE 8,'PROGRAM AND ROUTINE NAMES CANNOT BOTH BE SPECIFIED'
         MEXIT
.GENROUT ANOP
&NAME    SETC  '&ROUTINE'
&ID      SETC  'ROUT'
         AGO   .GENALL
.GENPROG ANOP
&NAME    SETC  '&PROGRAM'
&ID      SETC  'PROG'
.GENALL  ANOP
&NAME    CSECT
         AIF   (&BENTER).GENBASE
&BENTER  SETB  (1)
***
**  REGISTER EQUATES
***
R0       EQU   0             LINKAGE -- PARAMETER ADDRESS
R1       EQU   1             LINKAGE -- PARAMETER ADDRESS
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13            SAVE AREA ADDRESS/FIRST BASE REGISTER
R14      EQU   14            LINKAGE -- RETURN ADDRESS
R15      EQU   15            LINKAGE -- ENTRY ADDRESS
         SPACE 2
.GENBASE ANOP
***
**  INITIALIZATION
***
         USING *,R15                 TEMP BASE REGISTER
         STM   R14,R12,12(R13)       SAVE ENTRY REGISTERS
         LR    R14,R13               SAVE FOR CHAINING TO NEW SAVE AREA
         CNOP  4,8                   FORCE ALIGNMENT FOR LOADING BASE
         BAL   R13,ENTR&X            NEW SAVE AREA ADDRESS
         DROP  R15
.*
.GEN1    ANOP
&REG1    SETA  13-&R                 CALC BASE REGISTER
         USING *+&K*4096,R&REG1
&R       SETA  &R+1
&K       SETA  &K+1
         AIF   (&R LT &BASE).GEN1    BR IF MORE BASE REG NEEDED
.*
         DS    0D            SAVE AREA
         DC    CL4'&ID'       MODULE TYPE IDENTIFICATION
         DS    17F            REGISTER SAVE AREA
         DC    CL8'&NAME'            PROGRAM NAME
         DC    A(&NAME)              PROGRAM RELOCATION FACTOR
ENTR&X   ST    R14,4(R13)            CHAIN OLD SAVE AREA TO NEW
         ST    R13,8(R14)            CHAIN NEW SAVE AREA TO OLD
.*
         AIF   (&BASE EQ 1).GENX
         LA    R14,4095              INCREMENT TO CALC NEXT BASE VALUE
&R       SETA  1
.*
.GEN2    ANOP
&REG1    SETA  14-&R                 CALC LAST LOADED BASE
&REG2    SETA  &REG1-1               CALC NEXT BASE TO LOAD
         LA    &REG2,1(R14,&REG1)    LOAD NEXT BASE REGISTER
&R       SETA  &R+1
         AIF   (&R LT &BASE).GEN2    BR IF MORE BASE REG NEEDED
         MEXIT
.*
.ERROR   MNOTE 8,'PROGRAM OR ROUTINE NAME MUST BE SPECIFIED'
.GENX    MEND
         MACRO
&NAME    EXIT  &RC=0,&PARM=NO
.*
         AIF   ('&RC'(1,1) EQ '(').GEN2  BR IF RC IS REGISTER
         AIF   ('&PARM' EQ 'YES').GEN1   BR IF NO RESET FOR R0/R1
&NAME    L    R13,4(R13)             UNCHAIN SAVE AREAS
         LM    R14,R12,12(R13)       RESTORE ENTRY REGISTERS
         LA   R15,&RC                LOAD RETURN CODE
         BR    R14                   EXIT TO CALLING PROGRAM
         MEXIT
.*
.GEN1    ANOP
&NAME    L    R13,4(R13)             UNCHAIN SAVE AREAS
         LM    R14,R15,12(R13)       RESTORE ENTRY REGISTERS
         LM    R2,R12,28(R13)         *
         LA   R15,&RC                LOAD RETURN CODE
         BR    R14                   EXIT TO CALLING PROGRAM
         MEXIT
.*
.GEN2    AIF   ('&RC(1)' NE 'R15').ERROR
         AIF   ('&PARM' EQ 'YES').GEN3   BR IF NO RESET FOR R0/R1
&NAME    L    R13,4(R13)             UNCHAIN SAVE AREAS
         L    R14,12(R13)            RESTORE ENTRY REGISTERS
         LM    R0,R12,20(R13)         *
         BR    R14                   EXIT TO CALLING PROGRAM
         MEXIT
.*
.GEN3    ANOP
&NAME    L    R13,4(R13)             UNCHAIN SAVE AREAS
         L    R14,12(R13)            RESTORE ENTRY REGISTERS
         LM    R2,R12,28(R13)        RESTORE ENTRY REGISTERS
         BR    R14                   EXIT TO CALLING PROGRAM
         MEXIT
.ERROR   MNOTE 8,'RETURN CODE REGISTER MUST BE R15'
         MEND
         PRINT ON
***
**  PROGRAM INITIALIZATION
***
         PRINT NOGEN
         ENTER  PROGRAM=PANPUNCH
         XC    ACTION,ACTION         CLEAR PAM RETURN CODE
         CALL POPEN,(ACTION,DDNAME,BACKUP),VL  OPEN PAN FILE
         CLC   ACTION,=F'0'          Q.  ANY ERROR ON POPEN CALL
         BNE   ERROR                 YES-GO PRINT A MESSAGE
         CALL  PRINTSUB,(PROPEN,HDR1,HDRCNT),VL  OPEN PRINT FILE
         OPEN  (CONTROL,INPUT)       OPEN CONTROL CARD FILE
         OPEN  (PUNCH,OUTPUT)        OPEN PUNCH FILE
***
**  READ CONTROL CARD  AND FIND DIRECTORY ENTRY
***
READCARD BAL   R14,GETCARD           READ CONTROL CARD
         XC    ACTION,ACTION         CLEAR PAM RETURN CODE
         MVC   COMMENT(8),=C'COMMENT '  SET TO RETURN COMMENT RECORD
         CALL PSRCH,(ACTION,DIRENTRY,NAME1,NAME2,COMMENT,SUBSET),VL
         CLC   ACTION,=F'0'          Q.  ANY ERROR ON PSRCH CALL
         BNE   ERROR                 YES-GO PRINT A MESSAGE
         CLC   DIRENTRY(2),=C'$*'    Q.  END OF DIRECTORY ENTRIES
         BE    EOJ                   YES-END OF JOB
         BAL   R14,DIRECT            PRINT DIRECTORY ENTRY
***
**  PUNCH THE MEMBER
***
READ     XC    ACTION,ACTION         CLEAR PAM RETURN CODE
         MVC   NAME(10),DNAME        SET NAME OF MEMBER TO READ
         MVC   INCLUDES,=C'NO-ENTRY'   DO NOT EXPAND INCLUDES
         MVC   COMMENT(8),=C'NO-ENTRY' DO NOT RETURN COMMENT RECORD
         CALL PREAD,(ACTION,RECORD,NAME,INCLUDES,COMMENT),VL
         CLC   ACTION,=F'4'          Q.  ANY ERROR IN PREAD CALL
         BH    ERROR                 YES-GO PRINT A MESSAGE
         CLC   RECORD(2),=C'$*'      Q.  END OF MEMBER
         BE    READCARD              YES-GO GET CONTROL CARD
         BAL   R14,DETAIL            PUNCH THE MEMBER
         B     READ                  GO GET NEXT RECORD IN MEMBER
***
**  ERROR IN PAM CALL
***
ERROR    ABEND 99,DUMP
***
**  END OF JOB PROCESSING
***
EOJ      XC    ACTION,ACTION         CLEAR PAM RETURN CODE
         CALL  PCLOSE,(ACTION)       CLOSE PAN BACKUP/TRANSFER FILE
         CALL  PRINTSUB,(PRCLOSE)    CLOSE PRINT FILE
         CLOSE CONTROL               CLOSE CONTROL CARD FILE
         CLOSE PUNCH                 CLOSE THE PUNCH FILE
         EXIT  RC=0                  RETURN TO VS1
         EJECT
***
**  READ AND PRINT CONTROL CARD
***
GETCARD  ST    R14,GETCARDX          SAVE RETURN
GETCARD2 GET   CONTROL,CDRECORD      READ CONTROL CARD
         MVC   PRCARD,CDRECORD       MOVE TO PRINT ARE
         MVI   PRASA,C'0'            ASA CHARACTER = DOUBLE SPACE
         CALL  PRINTSUB,(PRPUT,PRINT)  PRINT CONTROL CARD
         CLC   =C'++PUNCH ',CDRECORD Q.  VALID CONTROL CARD
         BE    GETCARD4              YES
         MVC   PRCARD,=CL80'*** INVALID CONTROL CARD ***'
         MVI   PRASA,C'0'            ASA CHARACTER = DOUBLE SPACE
         CALL  PRINTSUB,(PRPUT,PRINT)  PRINT ERROR MESSAGE
         B     GETCARD2
*
GETCARD4 CLC   NAME1(10),CDNAME      Q.  MEMBER NAME IN SEQUENCE
         BL    GETCARD6              YES
         MVC   PRCARD,=CL80'*** MEMBER NAME SEQUENCE ERROR ***'
         MVI   PRASA,C'0'            ASA CHARACTER = DOUBLE SPACE
         CALL  PRINTSUB,(PRPUT,PRINT)  PRINT ERROR MESSAGE
         B     GETCARD2
*
GETCARD6 MVC   NAME1(10),CDNAME      SET MEMBER NAME
*
         L     R14,GETCARDX          RESTORE RETURN
         BR    R14                   EXIT
GETCARDX DS    F
***
**  PRINT DIRECTORY ENTRY
***
DIRECT   ST    R14,DIRECTX           SAVE RETURN
         MVC   PRNAME,DNAME          MEMBER NAME
         PACK  WK2,DLEVEL            LEVEL NUMBER
         MVC   PRLVL,=X'40202020'     *
         ED    PRLVL,WK2              *
         MVC   PRTYPE,DTYPE          MEMBER TYPE
         MVC   PRSTAT,DSTATUS        STATUS
         MVC   PRDATEA,DDATEA        DATE LAST ACCESSED
         MVC   PRDATEM,DDATEM        DATE LAST MAINTENANCE
         PACK  WK5,DSTMTS            NUMBER OF STATEMENTS
         MVC   PRCOUNT,=X'402020206B2020206B202120'
         ED    PRCOUNT,WK5            *
         MVC   PRCOM,COMMENT         COMMENT
         MVI   PRASA,C'0'            ASA CHARACTER = DOUBLE SPACE
         CALL  PRINTSUB,(PRPUT,PRINT)  PRINT LINE
         L     R14,DIRECTX           RESTORE RETURN
         BR    R14                   EXIT
DIRECTX  DS    F
***
**  PUNCH MEMBER LINE
***
DETAIL   ST    R14,DETAILX           SAVE RETURN
         PUT   PUNCH,RECORD          PUNCH A CARD
         L     R14,DETAILX           RESTORE RETURN
         BR    R14                   EXIT
DETAILX  DS    F
         EJECT
ACTION   DC    F'0'  RETURN CODE FRON PAN, SHOULD BE SET TO ZERO
***
**  POPEN PARAMETERS
***
DDNAME   DC     CL8'PANDD3'  DDNAME
BACKUP   DC     CL8'BACKUP'  FILE TYPE  'BACKUP' OR 'NO-ENTRY'
***
**  PSRCH PARAMETERS
***
DIRENTRY DS    0CL80               DIR ENTRY RETURNED IN 0-UP FORMAT
DNAME    DS    CL10                NAME LEFT JUSTIFIED
DLEVEL   DS    CL3                 LEVEL NUMBER
DUSER    DS    CL4                 USER CODE
DSECURE  DS    CL1                 SECURITY CODE
DTYPE    DS    CL5                 LANGUAGE TYPE
DSTATUS  DS    0CL3                3 CHAR STATUS
DPRODT   DS    CL1                 P-PROD  T-TEST
DAORDI   DS    CL1                 A-ACTIVE  I-INACTIVE
DEORDD   DS    CL1                 E-ENABLE D-DISABLE
DDATEM   DS    CL8                 DATE OF LAST MAINTENANCE MM/DD/YY
DDATEA   DS    CL8                 DATE OF LAST ACCESS  MM/DD/YY
DBLOCKS  DS    CL5                 NO. OF BLOCKS
DSTMTS   DS    CL8                 NO. OF STATEMENTS
DLASTACT DS    CL4                 LAST ACTION, 1ST POS. IS * IF PROD.
DBYTES   DS    CL2                 NO. BYTES PER STATMENT
DSUBSET  DS    CL4                 NO. OF SUBSETS(SUPERSETS ONLY)
DNAME2   DS    CL10                NAME RIGHT JUSTIFIED
         DS    CL1                 NOT USED
         DS    CL1                 N=NOFORMAT, T=TSO, ELSE BLANK
DINC     DS    CL1                 I=INCLUDE BEING EXPND (EXIT ONLY)
DVERSION DS    XL2                 VER. #(FOR PROTECTION FILES ONLY
*
*
NAME1    DC    CL22'NO-ENTRY'      SEARCH NAME1
NAME2    DC    CL11'NO-ENTRY'      SEARCH NAME2
COMMENT  DC    CL52'NO-ENTRY'      NO COMMENTS WANTED, ELSE='COMMENT'
SUBSET   DC    CL27'NO-ENTRY'      NO SUBSETS WANTED, ELSE='SUBSET'
***
**  THE FOLLOWING IS A DEFINITION OF THE SUBSET DIRECTORY ENTRY
***
SUBENTRY DS    0CL27
SUBNAME  DS    CL11                FORMAT .XXXXXXXXXX X'S = SUBSET NME
         DS    CL1                 BLANK
SUBDATE  DS    CL8                 DATE ATTACHED IN FORM MM/DD/YY
         DS    CL2                 BLANKS
SUBSTMT  DS    CL5                 # OF STMTS IN SUBSET
***
**  PREAD PARAMETERS
***
RECORD   DS    CL80                STATMENT WILL BE RETURNED HERE
NAME     DS    CL22                DATA SET TO BE READ
INCLUDES DS    CL8
***
**  REPORT PAGE HEADINGS
***
HDRCNT   DC    F'2'          NUMBER OF HEADING LINES
HDR1     DC    CL33'1SJPTPAM1'
         DC    CL100'PUNCH MEMBER FROM PAN BACKUP/TRANSFER TAPE'
HDR2     DC    CL133'0'
         ORG   HDR2+1
         DC    C'NAME        LVL  TYPE STAT ACCESSED MAINTAIN  '
         DC    C'STATEMENTS  COMMENT'
         ORG
***
**  PRINT WORK AREA
***
PRINT    DC    CL133' '
         ORG   PRINT
PRASA    DS    C             ASA CONTROL CHARACTER
PRCARD   DS    0CL80         CONTROL CARD/ERROR MESSAGE
*
PRNAME   DS    CL10          MEMBER NAME
         DS    C
PRLVL    DS    CL4           LEVEL NUMBER
         DS    CL2
PRTYPE   DS    CL5           LANGUAGE TYPE
         DS    C
PRSTAT   DS    CL3           STATUS
         DS    C
PRDATEA  DS    CL8           DATE LAST ACCESSED
         DS    C
PRDATEM  DS    CL8           DATE LAST MAINTENANCE
PRCOUNT  DS    CL12          NUMBER OF STATEMENTS
         DS    CL2
PRCOM    DS    CL52          COMMENT
         ORG
***
**  CONTROL CARD WORK AREA
***
CDRECORD DS    0CL80
         DC    CL8'++PUNCH ' REQUIRED IDENTIFIER
CDNAME   DS    CL10          MEMBER NAME TO PUNCH
         DS    CL62          UNUSED
***
**  MISC CONSTANTS AND AREAS
***
PROPEN   DC    C'O'          I/O ACTION -- OPEN FILE
PRPUT    DC    C'P'          I/O ACTION -- PUT LINE
PRCLOSE  DC    C'C'          I/O ACTION -- CLOSE FILE
WK2      DS    PL2
WK5      DS    PL5
         LTORG
***
**  I/O CONTROL BLOCKS
***
CONTROL  DCB   DSORG=PS,MACRF=GM,EODAD=EOJ,DDNAME=SYSIN,               *
               RECFM=FB,LRECL=80,BLKSIZE=80
PUNCH    DCB   DSORG=PS,MACRF=PM,DDNAME=SYSPUNCH,                      *
               RECFM=FB,LRECL=80,BLKSIZE=80
         END
