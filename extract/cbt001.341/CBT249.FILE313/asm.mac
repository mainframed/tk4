*)F   FUNCTION -
*         THE ASM COMMAND PROVIDES AN INTERFACE BETWEEN TSO AND THE
*         IBM MVS ASSEMBLER TO ALLOW ASSEMBLIES TO BE PERFORMED
*         FROM A TSO TERMINAL.
*
*         THE ASM COMMAND ALLOWS USERS TO SPECIFY THE INPUT DATA
*         SETS TO BE ASSEMBLED, THE DATA SET WHICH IS TO CONTAIN
*         THE OBJECT MODULE FROM THE ASSEMBLY, THE MACRO LIBRARY
*         DATA SETS TO BE USED BY THE ASSEMBLER, AND AN OPTIONAL
*         DATA SET TO CONTAIN THE ASSEMBLY LISTING.
*
*
*)X  SYNTAX -
*   ASM DSNAME   LOAD(DSNAME2) / NOLOAD
*                 PRINT(DSNAME3) / NOPRINT / SYSOUT(CLASS)
*                 LIB(DSNAME4)
*                 MACLIB / NOMACLIB
*                 TERM   / NOTERM
*                 NUM    / NONUM
*                 STMT   / NOSTMT
*                 TEST   / NOTEST
*                 RENT   / NORENT
*                 ESD    / NOESD
*                 RLD    / NORLD
*                 XREF   / FULLXREF   /  NOXREF
*                 LIST   / NOLIST
*                 ALGN   / NOALGN
*                 LINECNT(INTEGER)
*                 UTSPACE(NN NN)
*
*    REQUIRED -   DSNAME
*
*
*    DEFAULTS -  LOAD, TERM, MACLIB, TEST, NORENT, ALGN,
*                NUM, STMT, ESD, RLD, XREF
*                LINECNT(55), NOPRINT, UTSPACE(19 19).
*
*
*    NOTES - IF ANY OPTION IS SPECIFIED WHICH REFERS TO THE ASSEMBLY
*            LISTING, SUCH AS LIST, ESD, RLD,  XREF, ETC.,
*            THEN THE DEFAULT NOPRINT IS CHANGED TO PRINT(DSNAME).
*
*            IF EITHER PRINT(DSNAME) OR SYSOUT(CLASS) IS SPECIFIED,
*            THEN THE DEFAULTS FOR THE ASSEMBLY LISTING ARE CHANGED
*            AS FOLLOWS--
*              LIST, FULLXREF, ESD, RLD
*
*            IF PRINT(*) IS SPECIFIED, THEN 'LIST' BECOMES
*            THE DEFAULT FOR THE ASSEMBLY LISTING.
*
*            IF THE LIB OPERAND IS NOT SPECIFIED, THEN THE
*            SPNB MACRO LIBRARY, 'SYS2.MACLIB', IS USED AS A
*            DEFAULT LIBRARY.
*
*)O   OPERANDS -
*      'DSNAME' -NAME OF THE DATA SET CONTAINING THE ASSEMBLY
*                LANGUAGE SOURCE TO BE ASSEMBLED.
*                A MAXIMUM OF SIXTEEN (16) DATA SETS CAN BE ACCEPTED.
*                IF MORE THAN ONE DATA SET IS TO BE PROCESSED,
*                THEN THE LIST OF DATA SET NAMES MUST BE ENCLOSED
*                WITHIN PARENTHESIS.
*
*))LOAD('DSNAME2')  - INDICATES THAT AN OBJECT MODULE IS TO
*                     BE PRODUCED BY THE ASSEMBLER.
*                     IF 'DSNAME2' IS SPECIFIED, THEN THE OBJECT
*                     MODULE WILL BE PLACED IN THIS DATA SET.
*                     OTHERWISE A DATA SET CONFORMING TO
*                     STANDARD NAMING CONVENTIONS IS USED.
*))NOLOAD         -   INDICATES NO OBJECT MODULE IS TO BE PRODUCED.
*
*))PRINT('DSNAME3') - INDICATES THAT AN ASSEMBLY LISTING IS TO BE
*                     PRODUCED. 'DSNAME3' SPECIFIES THE NAME OF
*                     DATA SET IN WHICH THE LISTING WILL BE PLACED.
*                     IF 'DSNAME3' IS NOT SPECIFIED, THEN THE LISTING
*                     IS PRODUCED AT THE TERMINAL. IF '*' IS
*                     SPECIFIED, THEN THE LISTING IS PRODUCED AT THE
*                     TERMINAL.
*))SYSOUT(CLASS)    - INDICATES THAT THE ASSEMBLY LISTING IS TO BE
*                     PRODUCED AND PRINTED VIA A STANDARD OS WRITER.
*                     'CLASS' REPRESENTS ONE OF THE STANDARD OS OUTPUT
*                     CLASSES, A-Z OR 0-9. IF CLASS IS NOT SPECIFIED,
*                     C IS USED AS THE DEFAULT CLASS.
*))NOPRINT          - INDICATES THAT NO ASSEMBLY LISTING IS TO BE
*                     PRODUCED. THE VALUE OF THIS OPERAND IS ALSO
*                     DEPENDENT ON THE VALUES SPECIFIED FOR THE
*                     OTHER OPERANDS WHICH NORMALLY CONTROL THE
*                     FORMATING OF THE ASSEMBLY LISTING. FOR MORE
*                     INFORMATION ON THIS CONDITION, SEE THE
*                     DESCRIPTION OF THESE OPERANDS.
*
*))LIB('DSNAME4')   - INDICATES THE NAMES OF THE MACRO LIBRARIES TO
*                     BE USED FOR THIS ASSEMBLY. A MAXIMUM OF
*                     FIFTEEN (15) LIBRARIES CAN BE SPECIFIED.
*                     IF 'DSNAME4' IS NOT A FULLY QUALIFIED LIBRARY
*                     NAME, (DOES NOT END IN EITHER .ASM OR .MACLIB),
*                     THEN AN ATTEMPT WILL BE MADE TO QUALIFY THE
*                     NAME THROUGH THE SYSTEM CATALOG.
*                     IF THE NAME OF THE SYSTEM MACRO LIBRARY,
*                     'SYS3.MACLIB', IS SPECIFIED IN THIS OPERAND,
*                     THEN THE VALUE OF THE MACLIB OPERAND IS IGNORED.
*
*))MACLIB           - INDICATES THAT THE SYSTEM MACLIB IS TO BE USED
*                     IN CONJUNCTION WITH THE MACRO LIBRARIES AS
*                     SPECIFIED WITH THE LIB OPERAND.
*                     THIS LIBRARY IS REFERENCED AFTER ALL OF THE
*                     LIBRARIES SPECIFIED WITH THE LIB OPERAND HAVE
*                     PROCESSED. IF THE SYSTEM MACRO LIBRARY CONTAINS
*                     MACROS WHICH MAY BE DUPLICATED IN ANY OF THE
*                     OTHER MACRO LIBRARIES, AND THOSE IN THE SYSTEM
*                     LIBRARY SHOULD BE THE ONES USED, THEN THE NAME
*                     OF THE SYSTEM LIBRARY, 'SYS3.MACLIB', SHOULD
*                     BE SPECIFIED IN THE LIB OPERAND, BEFORE THE
*                     NAMES OF THE LIBRARIES WHICH CONTAIN THE
*                     DUPLICATED MACRO INSTRUCTIONS.
*))NOMACLIB         - INDICATES THAT THE SYSTEM MACRO LIBRARY IS NOT
*                     TO BE USED DURING THIS ASSEMBLY.
*
*))LIST             - INDICATES THAT THE STANDARD ASSEMBLY LISTING
*                     IS TO BE PRODUCED. IF THIS OPERAND IS
*                     SPECIFIED, THEN THE VALUE OF THE PRINT OPERAND
*                     IS OVERRIDEN.
*))NOLIST           - INDICATES THAT NO LISTING IS TO BE PRODUCED.
*
*))TERM             - INDICATES THAT ERROR AND STATUS MESSAGES ARE
*                     TO BE SENT TO THE TERMINAL.
*))NOTERM           - INDICATES THAT THESE MESSAGES ARE NOT TO BE
*                     SENT. 'NOTERM' WILL BE FORCED IF THE ASSEMBLY
*                     LISTING IS BEING SENT TO THE TERMINAL.
*
*))NUM              - INDICATES THAT ANY ERROR MESSAGES SENT TO THE
*                     TERMINAL, WHEN THE TERM OPTION IS USED, ARE
*                     TO CONTAIN THE SEQUENCE NUMBER OF THE SOURCE
*                     STATEMENT IN ERROR.
*))NONUM            - INDICATES THAT THE SEQUENCE NUMBER OF THE
*                     SOURCE STATEMENT IN ERROR IS NOT TO BE INCLUDED
*                     IN ANY ERROR MESSAGES.
*
*))STMT             - INDICATES THAT ANY ERROR MESSAGES SENT TO THE
*                     TERMINAL, WHEN THE TERM OPTION IS USED, ARE
*                     TO CONTAIN THE ASSEMBLY LISTING STATEMENT
*                     NUMBER OF THE STATEMENT IN ERROR.
*))NOSTMT           - INDICATES THAT STATEMENT NUMBERS ARE NOT TO
*                     BE INCLUDED IN ANY ERROR MESSAGES.
*
*))ESD              - INDICATES THAT THE EXTERNAL SYMBOL DICTIONARY
*                     IS TO BE INCLUDED IN THE ASSEMBLY LISTING.
*                     IF THIS OPTION IS SPECIFIED, THE VALUE OF THE
*                     PRINT OPERAND IS IGNORED, AND AN ASSEMBLY
*                     LISTING WILL BE GENERATED.
*                     THIS OPTION MAY BE ABBREVIATED 'ED'.
*))NOESD            - INDICATES THAT THE EXTERNAL SYMBOL DICTIONARY
*                     IS NOT TO BE INCLUDED IN THE ASSEMBLY LISTING.
*
*))RLD              - INDICATES THAT THE RELOCATION SYMBOL DICTIONARY
*                     IS TO BE INCLUDED IN THE ASSEMBLY LISTING.
*                     IF THIS OPTION IS SPECIFIED, THEN THE VALUE
*                     OF THE PRINT OPERAND IS IGNORED AND AN
*                     ASSEMBLY LISTING IS GENERATED.
*                     THIS OPTION MAY BE ABBREVIATED 'RD'.
*))NORLD            - INDICATES THAT THE RELOCATION SYMBOL DICTIONARY
*                     IS NOT TO BE INCLUDED IN THE ASSEMBLY LISTING.
*
*))XREF             - INDICATES THAT A CROSS-REFERENCE LISTING OF THE
*                     REFERENCES TO EACH SYMBOL IN THE ASSEMBLY IS TO
*                     BE PRODUCED. THE LISTING WILL ALSO CONTAIN
*                     A CROSS REFERENCE TABLE OF LITERALS USED
*                     IN THE ASSEMBLY.
*))FULLXREF         - INDICATES THAT THE CROSS-REFERENCE LISTING IS TO
*                     INCLUDE SYMBOLS THAT ARE DEFINED BUT NEVER
*                     REFERENCED. A LITERAL CROSS REFERENCE WILL ALSO
*                     BE PRODUCED.
*))NOXREF           - INDICATES THAT THE CROSS-REFERENCE LISTING IS
*                     NOT TO BE PRODUCED.
*
*))TEST             - INDICATES THAT THE ASSEMBLER IS TO INCLUDE THE
*                     INFORMATION ON THE INTERNAL SYMBOLS IN THE
*                     OBJECT MODULE PRODUCED, TO ALLOW THESE SYMBOLS
*                     TO BE KNOWN TO THE TSO TEST COMMAND. IF THIS
*                     OPTION IS NOT USED, THEN THE TEST COMMAND CAN
*                     ONLY REFER TO THE EXTERNAL SYMBOLS GENERATED
*                     BY THIS MODULE, AND RELATIVE OFFSETS WILL BE
*                     REQUIRED TO REFER TO INTERNAL SYMBOLS AND
*                     LOCATIONS WITHIN THIS PROGRAM.
*))NOTEST           - INDICATES THAT THE INFORMATION RELATING TO THE
*                     INTERNAL SYMBOLS IS NOT TO BE INCLUDED IN THE
*                     OBJECT MODULE.
*
*))RENT             - INDICATES THAT THE ASSEMBLER IS TO CHECK FOR
*                     VIOLATIONS OF CODING THAT WOULD MAKE THIS
*                     PROGRAM NOT RE-ENTRANT.
*))NORENT           - INDICATES THAT NO CHECK IS TO BE PERFORMED FOR
*                     RE-ENTERANT CODING VIOLATIONS.
*
*))ALGN             - INDICATES THAT THE ASSEMBLER IS TO CHECK FOR
*                     BOUNDARY ALIGNMENT VIOLATIONS ON INSTRUCTIONS
*                     WHICH NORMALLY REQUIRED CERTAIN ALIGNMENTS FOR
*                     PROPER EXECUTION. STATEMENTS WHICH CONTAIN
*                     AN INSTRUCTION WHICH DOES NOT HAVE PROPER
*                     BOUNDARY ALIGNMENT WILL BE FLAGGED IN ERROR.
*))NOALGN           - INDICATES THAT NO CHECK IS TO BE PERFORMED BY
*                     THE ASSEMBLER FOR INTRUCTIONS WITH INVALID
*                     BOUNDARY ALIGNMENT.
*
*
*))LINECNT('INTEGER') - INDICATES THE NUMBER OF LINES TO BE PRINTED ON
*                     EACH PAGE OF THE ASSEMBLY LISTING. THE DEFAULT
*                     IS 55.
*
*
*))UTSPACE('NN NN')  - NUMBER OF TRACKS TO BE USED AS PRIMARY AND
*                      SECONDARY SPACE QUANTITIES FOR UTILITY FILES.
*                      THIS OPTION SHOULD NOT BE USED UNLESS AN ERROR
*                      MESSAGE ISSUED BY THE ASSEMBLER INDICATES THAT
*                      THE DEFAULT VALUES ARE INSUFFICIENT.
         EJECT
ASMX     TITLE 'VS ASSEMBLER - TSO INTERFACE PROMPTER'
***********************************************************************
*                                                                     *
*                                                                     *
* TITLE -      TSO - VS ASSEMBLER PROMPTER                            *
*                                                                     *
* FUNCTION -   PROVIDE AN INTERFACE BETWEEN A TSO USER                *
*              AND THE MVS ASSEMBLER FX TO ALLOW FOR                  *
*              ASSEMBLIES IN THE FORGROUND REGION.                    *
*                                                                     *
*                                                                     *
* OPERATION -  ACCEPT FROM THE TSO USER A COMMAND                     *
*              STRING CONTAINING THE NAME OF THE DATA                 *
*              SET(S) TO BE ASSEMBLED, AND OPTIONAL                   *
*              PARAMETERS SPECIFYING ASSEMBLER OPTIONS,               *
*              AND ALTERNATE DATA SET NAMES FOR THE                   *
*              OBJECT MODULE, PRINT, AND LIBRARY FILES.               *
*                                                                     *
*                                                                     *
* INPUT -      STANDARD COMMAND PROCESSOR PARAMETER LIST              *
*              POINTED TO BY REGISTER 1                               *
*                                                                     *
*                                                                     *
* OUTPUT -     INVOCATION OF ASSEMBLER,   PASSING THE ADDRESS         *
*              OF A TWO-WORD PARAMETER LIST IN REGISTER 1.            *
*              WORD 1 - ADDRESS OF OPTION LIST.                       *
*              WORD 2 - ADDRESS OF ALTERNATE DDNAME LIST.             *
*                                                                     *
*                                                                     *
* ATTRIBUTES - REENTRANT, REUSEABLE, REFRESHABLE.                     *
*                                                                     *
* STATUS     - VERY PRIMATIVE, FEW OPTIONS SUPPORTED AS YET,          *
*              THIS IS REALLY THE ASMG PROMPTER STRIPPED.             *
*              THANKS TO T.W.SPRINGER WHO WROTE THE ASMG PRMPTR (WSF) *
*                                                                     *
***********************************************************************
         EJECT
         MACRO
&NAME    CLEAR &FIELD
         LCLC  &L
&L       SETC  'L'''
&NAME    MVI   &FIELD,C' '
         MVC   &FIELD+1(&L&FIELD-1),&FIELD
         MEND
         SPACE 3
         MACRO
&NAME    ENTER &TYPE
         AIF   ('&TYPE' NE '').A1
&NAME    CSECT
         SAVE  (14,12),,*
         LR    BASEREG1,R15
         LA    BASEREG2,4095(,BASEREG1)
         LA    BASEREG2,1(,BASEREG2)
         LA    BASEREG3,4095(,BASEREG2)
         LA    BASEREG3,1(,BASEREG3)
         USING &NAME,BASEREG1,BASEREG2,BASEREG3
         SPACE 2
         B     IHB&SYSNDX
         DC    C'DEVELOPED 1974 BY SECURITY PACIFIC NATIONAL BANK'
IHB&SYSNDX DS    0H
         MEXIT
.A1      AIF   ('&TYPE' NE 'VALCHECK').A2
&NAME    SAVE  (14,12)
         L     WORKREG,4(,R1) WORK AREA ADDRESS
         LM    BASEREG1,BASEREG3,BASES RESTORE BASE REGISTERS
         L     R8,0(R1)       PDE ADDRESS
         LA    R15,VALSAVE
         ST    R13,4(R15)
         ST    R15,8(R13)
         LR    R13,R15
         SPACE 3
         MEXIT
.A2      ANOP
         MNOTE 8,'INVALID TYPE ''&TYPE'''
         MEND
         SPACE 2
         MACRO
&NAME    EXIT  &LV=
&NAME    DS    0H
         AIF   ('&LV' EQ '').A1
         LR    R2,R13         ADDR OF THIS SAVE AREA
.A1      L     R13,4(R13)
         STM   R15,R1,16(R13) RETURN REGS 15, 0, 1
         AIF   ('&LV' EQ '').A2 NOT DYNAMIC CORE
         FREEMAIN R,LV=&LV,A=(R2)
.A2      SPACE
         RETURN (14,12),T
         MEND
         SPACE 3
         MACRO
&NAME    OPTION &OFFSET,&VALUES
         LCLA  &A,&L
&NAME    DS    0H
         DC    AL2(&OFFSET-ASMXPDL)
&A       SETA  0
.NEXT    ANOP
&A       SETA  &A+1
         AIF   (&A GT N'&VALUES).LAST
&L       SETA  K'&VALUES(&A)-1
         DC    AL1(&L),C'&VALUES(&A)'
         AGO   .NEXT
.LAST    DC    X'FF'
         MEND
         SPACE 3
         MACRO
&NAME    MSG   &TEXT
         LCLA  &A
&A       SETA  K'&TEXT-2+4
&NAME    DC    H'&A',H'0',C&TEXT
         MEND
         EJECT
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
WORKREG  EQU   9
BASEREG1 EQU   10
BASEREG2 EQU   11
BASEREG3 EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         SPACE 5
PROMPTG  ENTER
         LR    R2,R1          SAVE ADDR OF CPPL
         SPACE
         L     R3,CORESIZE
         GETMAIN R,LV=(R3)
         SPACE 2
         LR    WORKREG,R1    ADDR OF WORK AREA
         USING WORKAREA,WORKREG
         EJECT
*
*        CLEAR WORK AREA
*
         SPACE 2
         LA    R14,0(R3)      LENGTH OF AREA
         BCTR  R14,0          EXECUTED LENGTH
         LA    R15,255        LOOP FACTOR
LOOP01   CR    R14,R15        LAST PASS?
         BNH   LOOP00         YES
CLEAR1   XC    0(0,R1),0(R1)
         EX    R15,CLEAR1
         LA    R1,256(R1)
         SR    R14,R15
         BCT   R14,LOOP01     IF MORE TO CLEAR
         SPACE
LOOP00   EX    R14,CLEAR1     CLEAR LAST AREA
         SPACE 2
         STM   BASEREG1,BASEREG3,BASES SAVE BASE ADDRESSES
         SPACE 2
         CLEAR BASICDSN       CLEAR BASIC DSNAME
         SPACE 2
         CLEAR BASICMEM       CLEAR BASIC MEMBER NAME
         EJECT
*
*        ESTABLISH STAE EXIT
*
         SPACE 3
         MVC   STAEPARM(LSTAE),STAE MOVE PATTERN STAE TO WORK AREA
         STAE  STAEEXIT,CT,PARAM=WORKAREA,MF=(E,STAEPARM) ISSUE STAE
         SPACE
         LA    R15,MAINSAVE
         ST    R15,8(R13)
         ST    R13,4(R15)
         LR    R13,R15
         SPACE 3
*
*        LOAD TSO SERVICE ROUTINES
*
         SPACE 3
         USING CPPL,R2        BASE FOR COMMAND PARM LIST
         MVC   ADDRUPT,CPPLUPT ADDR OF USER PROFILE TABLE
         MVC   ADDRPSCB,CPPLPSCB
         MVC   ADDRECT,CPPLECT ADDR OF ENVIROMENT TABLE
         MVC   ADDRCBUF,CPPLCBUF
         DROP  R2
         SPACE 3
         LOAD  EPLOC=IKJDAIR  DYNAMIC ALLOCATION INTERFACE
         ST    R0,ADDRDAIR
         SPACE 3
         LOAD  EPLOC=IKJPUTL  PUTLINE SERVICE ROUTINE
         ST    R0,ADDRPUTL
         SPACE 3
*
*        MOVE DEFAULT VALUES FOR OPTIONS TO WORK AREA
*
         SPACE 2
         MVC   UTILPRI,DUTILPRI DEFAULT UTILITY FILE PRIMARY ALLOCATION
         SPACE
         MVC   UTILSEC,DUTILSEC DEFAULT UTILITY FILE SECONDARY
         SPACE
         MVC   UTILBLKL,DUTILBLK DEFAULT UTILITY FILE BLOCKSIZE
         SPACE
         MVC   UTILBUFF,DUTBUFF# DEFAULT UTILITY FILE BUFNO
         SPACE
         MVC   LINECNT#,DLINECNT DEFAULT LINE COUNT
         SPACE
         SPACE
         MVC   SPACE#,DSPACE# DEFAULT FREE SPACE VALUE
         LA    R0,L'DSPACE#
         STH   R0,SPACELEN    LENGTH OF SPACE DEFAULT
         EJECT
*
*        BUILD PARSE PARAMETER LIST AND INVOKE
*        IKJPARS TO ANALYZE COMMAND OPERANDS
*
         SPACE 3
         LA    R1,PARSELST    AREA FOR PARSE PARAMETERS
         USING PPL,R1         BASE FOR PARSE PARAMETER LIST
         SPACE 2
         MVC   PPLUPT,ADDRUPT PASS UPT ADDRESS
         MVC   PPLECT,ADDRECT AND ECT ADDRESS
         MVC   PPLCBUF,ADDRCBUF AND COMMAND BUFFER ADDR
         SPACE
         ST    WORKREG,PPLUWA ALSO WORK AREA ADDR FOR VALIDITY EXITS
         SPACE
         LA    R0,ATTNECB     ECB FOR ATTN INTERRUPTS
         MVI   ATTNECB,0      CLEAR ECB
         ST    R0,PPLECB      PASSE TO PARSE
         SPACE
         LA    R0,ADDRANSR    PASS ADDR OF WORD WHERE PARSE
         ST    R0,PPLANS      RETURNS PDL ADDRESS
         SPACE
         MVC   PPLPCL,ADDRPCL ADDRESS OF PARSE CONTROL LIST
         SPACE 3
         LINK  EPLOC=IKJPARS  INVOKE PARSE
         DROP  R1
         SPACE 2
         LA    R14,MAXPARSE   RETURN CODE LIMIT
         SPACE
         CR    R15,R14        VERIFY RETURN CODE WITHIN LIMITS
         BH    PARSEBAD       NO, ERROR
         SPACE
         B     *+4(R15)       PROCESS RETURN CODE
         SPACE
PARSERET B     PARSEOK         0- SUCESSFUL
         B     EXIT8           4- PARSE UNABLE TO PROMPT
         B     EXIT8           8- USER ENTERED ATTENTION
         B     PARSEBAD       12- INVALID PARAMETERS
         B     PARSEBAD       16- PARSE INTERNAL FAILURE
         B     EXIT8          20 - VALIDITY CHECK ERROR
MAXPARSE EQU   *-PARSERET
         SPACE 5
PARSEBAD DS    0H
         MVC   MSGTEXT2+4(L'MSGPARSE),MSGPARSE
         LA    R1,MSGTEXT2+4+L'MSGPARSE
         SPACE
         CVD   R15,DOUBLE
         OI    DOUBLE+7,X'0F'
         UNPK  0(2,R1),DOUBLE
         SPACE
         LA    R0,MSGTEXT2-2
         SR    R1,R0
         SLL   R1,16
         ST    R1,MSGTEXT2
         SPACE 2
         LA    R0,MSGTEXT2    PUT OUT 'COMMAND ERROR' MSG
         LA    R1,MSGCMDER
         SPACE
         BAL   R14,ERRORMSG
         SPACE 3
EXIT8    LA    R15,8          ERROR CODE 8
         B     RETURN
         SPACE
EXIT4    LA    R15,4
         B     RETURN
         SPACE
EXIT0    SR    R15,R15
         SPACE 3
RETURN   LTR   R2,R15         NORMAL EXIT?
         BZ    RETURN1        YES
         SPACE 2
         LA    R1,PARMLIST    AREA FOR STACK PARM LIST
         USING IOPL,R1
         SPACE
         MVC   IOPLUPT,ADDRUPT
         MVC   IOPLECT,ADDRECT
         LA    R0,ATTNECB
         MVI   ATTNECB,0
         ST    R0,IOPLECB
         SPACE 2
         STACK PARM=PARMLIST+16,DELETE=ALL,MF=(E,(1))
         SPACE 3
         TCLEARQ INPUT        CLEAR INPUT BUFFERS
         SPACE 3
RETURN1  DS    0H
         BAL   R14,FREEPDL    FREE THE PARSE STROAGE
         TM    FLAGS,FCCATLIB SYSLIB CONCATENATED?
         BZ    RETURN2        NO
         SPACE
         LA    R1,SYSLIB
         XI    FLAGS,FCCATLIB
         BAL   R14,DECONCAT
         SPACE 2
RETURN2  TM    FLAGS,FCCATINP SYSIN CONCATENATED?
         BZ    RETURN3        NO
         SPACE
         LA    R1,SYSIN
         XI    FLAGS,FCCATINP
         BAL   R14,DECONCAT
         SPACE 3
RETURN3  DS    0H
         SPACE
         DELETE EPLOC=IKJDAIR
         SPACE
         DELETE EPLOC=IKJPUTL
         SPACE 3
         STAE  0,OV           CANCEL STAE EXIT
         SPACE 3
         LR    R15,R2         RESTORE RETURN CODE
         SPACE
         L     R0,CORESIZE
         SPACE
         EXIT  LV=(0)
         EJECT
PARSEOK  DS    0H
         L     R8,ADDRANSR    ADDR OF PARSE DESCRIPTOR LIST
         USING ASMXPDL,R8     RETURNED BY PARSE
         SPACE 3
         LH    R0,OPTPRINT    EITHER PRINT OR SYSOUT REQUESTED?
         BCT   R0,*+8         YES
         B     NOTPRINT       NO
         SPACE 2
         TM    FLAGS,FPRTERM  IS PRINT TO THE TERMINAL?
         BO    SKIPPRNT       YES, DON'T REQUIRED PRINT DEFAULTS
         SPACE 2
         LA    R1,2           SET UP REGISTERS TO CHECK PRINT DEFAULTS
         LH    R0,OPTLIST     LIST OPTION SPECIFIED?
         LTR   R0,R0
         BP    *+8            YES
         STH   R1,OPTLIST     DEFAULT TO 'LIST'
         LH    R0,OPTXREF     XREF OPTION SPECIFIED?
         LTR   R0,R0
         BP    *+8            YES
         STH   R1,OPTXREF     DEFAULT TO 'FX'
         LH    R0,OPTESD      ESD OPTION SPECIFIED?
         LTR   R0,R0
         BP    *+8            YES
         STH   R1,OPTESD      DEFAULT TO 'ED'
         LH    R0,OPTRLD      RLD OPTION SPECIFIED?
         LTR   R0,R0
         BP    *+8            YES
         STH   R1,OPTRLD      DEFAULT TO 'RD'
         SPACE
         TM    FLAGS+1,FSYSOUT PRINT TO SYSOUT?
         BZ    SKIPPRNT       NO, OK
         SPACE 2
         MVC   DAIRCLS,SYSOUTID
         MVC   DAIRBLKL,PRINTBLK
         MVC   DAIRPRI,PRINTPRI
         MVC   DAIRSEC,PRINTSEC
         SPACE 2
         LA    R0,L'SYSOUTNM
         STH   R0,DSNLEN
         MVC   DSNAME,SYSOUTNM
         MVI   DAIRFLAG,FSOUT
         BAL   R14,ALLOCDS    ALLOCATE THE DATA SET
         B     EXIT8          DATA SET NOT ALLOCATED
         SPACE 2
         MVC   SYSPRINT,0(R1) SAVE SYSPRINT DDNAME
         B     SKIPPRNT
         EJECT
*
*        IF ANY OPTION WAS SPECIFIED WHICH NORMALLY REFERS
*        TO THE SYSPRINT LISTING, I.E. XREF/ESD/RLD/LREF  ETC.
*        THEN FORCE A PRINT FILE TO BE ALLOCATED.
*
         SPACE 3
NOTPRINT DS    0H
         LA    R15,1          COMPARE REGISTER
         LH    R0,OPTLIST     LIST OPTION SELECTED?
         CR    R0,R15
         BH    NEEDPRNT       YES, PRINT FILE REQUIRED
         SPACE 3
         SR    R1,R1
         SPACE 2
         LH    R0,OPTXREF     CROSS-REFERENCE OPTION
         BCTR  R0,0
         LTR   R0,R0          OPTION SPECIFIED AS WANTED?
         BNP   *+6            NO
         BALR  R1,0           INDICATE OPTION SELECTED
         SPACE 2
         LH    R0,OPTESD      ESD OPTION
         BCTR  R0,0
         LTR   R0,R0          OPTION SPECIFIED AS WANTED?
         BNP   *+6            NO
         BALR  R1,0           INDICATE OPTION SELECTED
         SPACE 2
         LH    R0,OPTRLD      RLD OPTION
         BCTR  R0,0
         LTR   R0,R0          OPTION SPECIFIED AS WANTED?
         BNP   *+6            NO
         BALR  R1,0           INDICATE OPTION SELECTED
         SPACE 2
         EJECT
*
*
*        IF NO SYSPRINT FILE IS REQUIRED BY ANY SELECTED
*        OPTION AND THE USER DID NOT SPECIFY ONE THEN
*        A NULL FILE MUST BE ALLOCATED. THIS IS NECESSARY
*        SINCE THE ASMBLR  ALWAYS REQUIRES THIS PRINT FILE.
*
*
         SPACE 3
         MVI   DAIRFLAG,FNOUSER+FOLD SET UP FOR NULL FILE
         MVI   DAIRFLAG+1,FDUMMY+FTEMP+FPATTERN
         MVC   DSNLEN(LNULLDS),NULLFILE
         SPACE 2
         LTR   R1,R1          SHOULD PRINT BE FORCED?
         BZ    NULLPRNT       NO, ALLOCATE NULL FILE
         SPACE
         LA    R0,2
         STH   R0,OPTPRINT    FORCE PRINT OPTION
         SPACE
NEEDPRNT CLEAR DSNAME
         SPACE
         LH    R15,BASICLEN   LENGTH OF BASIC DSNAME
         LTR   R15,R15        WAS NAME SPECIFIED?
         LA    R1,DSNAME
         BZ    SETPRINT       NO
         MVC   DSNAME(0),BASICDSN MOVE IN BASIC DSNAME
         EX    R15,*-6
         AR    R1,R15
         MVI   0(R1),C'.'
         LA    R1,1(R1)
         SPACE 2
SETPRINT MVC   0(L'TYPELIST,R1),TYPELIST DSNAME QUALIFIER
         LA    R1,L'TYPELIST(R1)
         LA    R0,DSNAME
         SR    R1,R0          LENGTH OF DSNAME
         SPACE 2
         STH   R1,DSNLEN
         MVI   DAIRFLAG,FOLD
         MVI   DAIRFLAG+1,FPATTERN  INDICATE JFCB TO BE UPDATED
         SPACE 2
NULLPRNT DS    0H
         CLEAR MEMBER         NO MEMBER NAME
         CLEAR PASSWORD       NO PASSWORD FOR DATA SET
         XC    DAIRBLKL,DAIRBLKL   CLEAR NEW BLOCKSIZE
         SPACE
         BAL   R14,ALLOCDS    ALLOCATE A DATA SET
         B     EXIT8          SYSPRINT DATA SET NOT ALLOCATED
         SPACE
         MVC   SYSPRINT,0(R1) YES, SAVE DDNAME
         SPACE 3
SKIPPRNT DS    0H
         LH    R0,OPTPRINT    GET PRINT OPTION
         BCT   R0,*+8         IF PRINT HAS BEEN FORCED
         B     NOPRINT        IF PRINT BYPASSED
         SPACE
         LH    R0,OPTLIST     GET LIST OPTION
         LTR   R0,R0          WAS LIST OPTION SPECIFIED?
         BNZ   NOPRINT        YES
         LA    R0,2           IF NOT, FORCE LIST
         STH   R0,OPTLIST
NOPRINT  DS    0H
         TM    FLAGS,FPRTERM  PRINT TO TERMINAL?
         BZ    SKIPTERM       NO
         SPACE
         LA    R0,1
         STH   R0,OPTTERM     YES, FORCE NOTERM
         SPACE
SKIPTERM LH    R0,OPTTERM     TERM OPTION
         BCT   R0,NEEDTERM    TERM SPECIFIED
         SPACE
         LA    R0,1           FORCE NONUM, NOSTMT WHEN NOTERM SPECIFIED
         STH   R0,OPTNUM
         STH   R0,OPTSTMT
         B     NOTTERM        NOTERM SPECIFIED
         SPACE
NEEDTERM DS    0H
         MVI   DAIRFLAG+1,FPATTERN INDICATE JFCB TO BE UPDATED
         XC    DAIRBLKL,DAIRBLKL INDICATE NO BLOCKSIZE
         BAL   R14,ALLOCTRM   ALLOCATE THE TERMINAL
         B     EXIT8          SYSTERM NOT ALLOCATED
         SPACE 2
         MVC   SYSTERM,0(R1)  SAVE THE DDNAME
         SPACE
NOTTERM  DS    0H
         LH    R0,OPTLOAD     GET SELECTED LOAD OPTION
         BCT   R0,*+8         IF LOAD OPTION SELECTED
         B     SKIPLOAD       USER REQUESTED NO LOAD
         SPACE 2
*
*
*        IF THE USER DID NOT SPECIFY A SPECIFIC LOAD
*        DATA SET, DEFAULT TO ONE WITH THE BASIC DSNAME
*
         SPACE 2
         OC    SYSGO,SYSGO    IS SYSGO ALLOCATED?
         BNZ   SKIPLOAD       YES
         SPACE 2
         CLEAR MEMBER
         SPACE 2
         CLEAR PASSWORD
         SPACE 2
         LH    R15,BASICLEN   LENGTH OF BASIC DSN
         LTR   R15,R15        ONE SPECIFIED?
         LA    R1,DSNAME
         BZ    SETLOAD        NO
         SPACE
         MVC   DSNAME(0),BASICDSN
         EX    R15,*-6
         AR    R1,R15         JUMP POINTER TO END OF NAME
         SPACE 2
         MVI   0(R1),C'.'     SEPERATOR CHARACTER
         LA    R1,1(R1)
         SPACE 2
SETLOAD  MVC   0(L'TYPELOAD,R1),TYPELOAD DSNAME QUALIFIER
         LA    R1,L'TYPELOAD(R1)
         LA    R0,DSNAME
         SR    R1,R0
         STH   R1,DSNLEN      SAVE LEN OF DSNAME
         SPACE 2
         MVI   DAIRFLAG,FOLD
         SPACE 2
         BAL   R14,ALLOCDS    ALLOCATE THE LOAD DATA SET
         B     EXIT8          EXIT - DATA SET NOT ALLOCATED
         SPACE 2
         MVC   SYSGO,0(R1)    SAVE DDNAME
         SPACE 2
SKIPLOAD DS    0H
         TM    FLAGS,FSYSMAC  ALREADY HAVE 'SYS1.MACLIB'?
         BO    SETLIBS        YES
         SPACE 2
         LH    R0,OPTMAC      MACLIB REQUEST?
         LH    R2,LIBDD#      NUMBER OF USER LIBRARIES
         BCT   R0,WANTMAC     MACLIB WAS SPECIFIED
         SPACE
         LTR   R2,R2          ANY USER LIBRARIES?
         BNZ   SETLIBS        YES, SET UP SYSLIB
         EJECT
*
*        SINCE THE ASSEMBLER ALWAYS ATTEMPTS TO OPEN
*        THE SYSLIB FILE, AND SINCE THE USER HAS BOTH
*        SPECIFIED THAT THE SYSTEM MACRO LIBRARY IS
*        NOT TO BE USED, VIA THE 'NOMACLIB' OPTION,
*        AND HAS OMITTED SPECIFING ANY PRIVATE
*        LIBRARIES, VIA THE 'LIB' OPTION, A DUMMY
*        LIBRARY MUST BE CREATED FOR USE AS 'SYSLIB'.
*
         SPACE 3
         MVI   DAIRFLAG,FNEW+FNOUSER
         MVI   DAIRFLAG+1,FLIB+FTEMP+FPATTERN
         SPACE
         CLEAR PASSWORD
         SPACE
         CLEAR MEMBER
         SPACE
         MVC   DAIRBLKL,DBLKSIZE BLKSIZE FOR DUMMY LIBRARY
         SPACE
         SPACE
         MVC   DAIRPRI,DSPACE1 PRIMARY SPACE ALLOCATIO
         SPACE
         MVC   DAIRSEC,DSPACE1 SECONDARY SPACE ALLOCATION
         SPACE
         MVC   DAIRDIRC,DDIRECT DIRECTORY ALLOCATION
         SPACE
         LA    R0,L'DUMMYMAC  LENGTH OF TEMPORARY MACRO LIBRARY NAME
         STH   R0,DSNLEN
         MVC   DSNAME,DUMMYMAC
         SPACE
         B     ALLOCMAC       ALLOCATE THE MACRO LIBRARY
         EJECT
*
*        ALLOCATE THE SYSTEM MACRO LIBRARY
*
         SPACE 3
WANTMAC  DS    0H
         SPACE
         CLEAR PASSWORD
         CLEAR MEMBER
         SPACE
         LA    R0,L'MACLIB
         STH   R0,DSNLEN
         MVC   DSNAME,MACLIB  MOVE NAME OF 'SYS1.MACLIB'
         SPACE
         MVI   DAIRFLAG,FSHR+FNOUSER SHARED DATASET, NO USERID
         MVI   DAIRFLAG+1,FLIB     LIBRARY ALLOCATION
         SPACE
ALLOCMAC BAL   R14,ALLOCDS    ALLOCATE THE DATA SET
         B     EXIT8          MACRO LIBRARY NOT ALLOCATED
         SPACE
         LA    R2,1(R2)       JUMP SYSLIB COUNTER
         STH   R2,LIBDD#      SAVE NEW COUNT
         SLL   R2,3           MULT RELATIVE DD # BY 8
         LA    R2,LIBDDNS-8(R2) ADDR FOR NEXT DDNAME
         MVC   0(8,R2),0(R1)  SAVE DDNAME
         EJECT
SETLIBS  LH    R0,LIBDD#      NUMBER OF DATA SETS FOR SYSLIB
         BCTR  R0,0
         LTR   R0,R0          ONLY ONE?
         LA    R1,LIBDDNS     ADDR OF LIBRARY DDNAMES
         BZ    NOLIBCAT       YES, SKIP CONCATENATION
         SPACE 3
*
*        INVOKE DYNAMIC ALLOCATION TO CONCATENATE THE
*        SYSLIB DATA SETS INTO ONE FILE.
*
         SPACE 3
         LH    R0,LIBDD#      NUMBER OF LIBRARIES
         SPACE 3
         OI    FLAGS,FCATLIB
         BAL   R14,CONCATDS   CONCATENATE THE DATA SETS
         B     EXIT8          CONCATENATION FAILURE
         SPACE
         OI    FLAGS,FCCATLIB INDICATE LIB DATA SETS CONCATENATED
         SPACE
NOLIBCAT MVC   SYSLIB,0(R1)   MOVE NEW DDNAME TO SYSLIB SLOT
         SPACE 3
*
*        INVOKE DYNAMIC ALLOCATION TO CONCATENATE
*        THE INPUT DATA SETS INTO ONE FILE
*
         SPACE 2
         LH    R0,INPUTDD#    NUMBER OF INPUT DATA SET NAMES
         LA    R1,INPUTDDN
         BCTR  R0,0
         LTR   R0,R0          MORE THAN ONE DATA SET?
         BZ    NOCATINP       NO
         SPACE 2
*
*        CONCATENATE THE INPUT FILES
*
         SPACE 2
         LH    R0,INPUTDD#    RESTORE DD COUNT
         OI    FLAGS,FCATINP
         BAL   R14,CONCATDS
         B     EXIT8
         SPACE
         OI    FLAGS,FCCATINP INDICATE INPUT DATA SETS CONCATENATED
         SPACE
NOCATINP MVC   SYSIN,0(R1)    MOVE DDNAME TO SYSIN SLOT
         EJECT
*
*        ALLOCATE UTILITY FILES
*
         SPACE 3
         LA    R2,SYSUT1      START OF DDNAME SLOTS
         LA    R3,UTILDSN     START OF UTILITY DSNAMES
         LA    R4,#UTILDSN    NUMBER OF UTILITY FILES
         SPACE 2
ALLOCUT  DS    0H
         CLEAR MEMBER         NO MEMBER NAME
         SPACE
         CLEAR PASSWORD       NO PASSWORD
         SPACE
         LA    R0,L'UTILDSN   LENGTH OF DSNAME
         STH   R0,DSNLEN
         MVC   DSNAME,0(R3)   MOVE IN UTILITY DSNAME
         SPACE
         MVI   DAIRFLAG,FNEW+FNOUSER DAIR INTERFACE FLAGS
         MVI   DAIRFLAG+1,FTEMP+FPATTERN+FUTIL
         SPACE
         MVC   DAIRPRI,UTILPRI UTILITY FILE PRIMARY SPACE ALLOCATION
         SPACE
         MVC   DAIRSEC,UTILSEC UTILITY FILE SECONDARY SPACE ALLOCATION
         SPACE
         MVC   DAIRBLKL,UTILBLKL
         SPACE
         BAL   R14,ALLOCDS    INVOKE DYNAMIC ALLOCATION
         B     EXIT8          UNABLE TO ALLOCATE UTILITY FILE
         SPACE 3
HAVEUT   MVC   0(8,R2),0(R1)  MOVE RETURNED DDNAME
         SPACE
         LA    R2,8(R2)
         LA    R3,L'UTILDSN(R3)
         BCT   R4,ALLOCUT     ALLOCATE NEXT UTILITY
         EJECT
*
*        BUILD THE ASSEMBLER OPTION LIST
*
         SPACE 2
         CLEAR OPTNAREA       CLEAR THE OPTION LIST
         SPACE
         MVC   OPTNAREA(L'NODECK),NODECK MOVE IN 'NODECK' OPTION
         LA    R2,OPTNAREA+L'NODECK
         SPACE 1
*
*        PROCESS CROSS-REFERENCE OPTION
*
         SPACE 1
         LA    R1,@XREF       ADDR OF XREF PCL
         BAL   R14,MOVEPARM   BUILD PARAMETER BUFFER
         SPACE 5
*
*        PROCESS EXTERNAL SYMBOL DICTIONARY OPTION
*
         SPACE 1
         LA    R1,@ESD
         BAL   R14,MOVEPARM
         SPACE 5
*
*        PROCESS RELOCATION DICTIONARY OPTION
*
         SPACE 1
         LA    R1,@RLD
         BAL   R14,MOVEPARM
         SPACE 5
*
*        PROCESS RE-ENTERANT OPTION
*
         SPACE 1
         LA    R1,@RENT
         BAL   R14,MOVEPARM
         SPACE 5
*
*        PROCESS TERMINAL OPTION
*
         SPACE 1
         LA    R1,@TERM
         BAL   R14,MOVEPARM
         SPACE 5
*
*        PROCESS TESTRAN OPTION
*
         SPACE 1
         LA    R1,@TEST
         BAL   R14,MOVEPARM
         SPACE 5
*
*        PROCESS SEQUENCE NUMBER OPTION
*
         SPACE 1
         LA    R1,@NUM
         BAL   R14,MOVEPARM
         SPACE 5
*
*        PROCESS STATEMENT OPTION
*
         SPACE 1
         LA    R1,@STMT
         BAL   R14,MOVEPARM
         SPACE 5
*
*        PROCESS ALIGNMENT OPTION
*
         SPACE 1
         LA    R1,@ALGN
         BAL   R14,MOVEPARM
*
*        PROCESS LOAD OPTION
*
         SPACE 1
         LA    R1,@LOAD
         BAL   R14,MOVEPARM
         SPACE 5
*
*        PROCESS LIST OPTION
*
         SPACE 1
         LA    R1,@LIST
         BAL   R14,MOVEPARM
         EJECT
*
*        PROCESS KEYWORD OPTIONS -
*
         SPACE 3
         MVC   0(L'LINECNT,R2),LINECNT
         MVC   L'LINECNT(L'LINECNT#,R2),LINECNT# PRINT LINE COUNT
         MVI   L'LINECNT+L'LINECNT#(R2),C')'
         LA    R2,L'LINECNT+1+L'LINECNT#(R2)
         SPACE 3
         EJECT
*
*
*        INVOKE THE ASSEMBLER, PASSING AS A PARAMETER LIST,
*        TWO WORDS. THE FIRST POINTS TO THE OPTION LIST.
*        THE SECOND POINTS TO A LIST OF ALTERNATE
*        DDNAMES TO BE USED FOR THE ASSEMBLER FILES.
*
*
         SPACE 3
         LA    R1,OPTNAREA
         SR    R2,R1          LENGTH OF OPTION LIST
         STH   R2,OPTNLEN       SET IN HEADER
         SPACE 2
         LA    R0,LDDNAMES    LENGTH OF DDNAME LIST
         STH   R0,DDLIST      SET FOR ASSEMBLER
         LA    R0,OPTNLEN     ADDRESS OF OPTION LIST
         LA    R1,DDLIST      ADDRESS OF DDNAME LIST
         SPACE
         STM   R0,R1,ASMXPARM SET IN PARM AREA
         MVI   ASMXPARM+4,X'80'
         SPACE 3
CALLASMX LA    R1,ASMXPARM    ADDRESS OF ASSEMBLER G PARAMETERS
         LINK  EPLOC=ASMNAME  INVOKE THE ASSEMBLER
         SPACE 3
         ST    R15,ASMXRCDE   SAVE RETURN CODE
         EJECT
*
*
*        CLEAN UP AFTER ASSEMBLER PROCESSING
*
*
         SPACE 2
         TM    FLAGS,FCCATLIB WERE ANY SYSLIBS CONCATENATED?
         BZ    OKLIBS         NO
         SPACE 2
         LA    R1,SYSLIB      ADDRESS OF DDNAME
         XI    FLAGS,FCCATLIB
         BAL   R14,DECONCAT   DE-CONCATENATE SYSLIBS
         SPACE 3
OKLIBS   DS    0H
         TM    FLAGS,FCCATINP WERE ANY INPUT DS CONCATENATED?
         BZ    OKSYSINS       NO
         SPACE 2
         LA    R1,SYSIN       ADDR OF SYSIN DDNAME
         XI    FLAGS,FCCATINP
         BAL   R14,DECONCAT   DE-CONCATENATE THE SYSIN FILES
         SPACE 3
OKSYSINS DS    0H
         TM    FLAGS+1,FSYSOUT SYSPRINT TO SYSOUT?
         BZ    EXITASMX       NO
         SPACE 2
         XC    DAIRBLK(LDAIRBLK),DAIRBLK
         LA    R1,DAIRBLK     ADDRESS OF DAIR PARAMETER BLOCK
         USING DAPB18,R1
         SPACE 2
         LA    R0,X'18'
         STH   R0,DA18CD      SET ENTRY CODE '18'
         SPACE 2
         CLEAR DA18MNM        NO MEMBER NAME
         SPACE
         CLEAR DA18SCLS
         SPACE
         MVC   DA18JBNM,JOBID
         SPACE
         MVC   DA18DDN,SYSPRINT UNALLOCATE 'SYSPRINT' FILE
         MVC   DA18SCLS(1),SYSOUTID OVERRIDE SYSOUT CLASS
         BAL   R14,CALLDAIR
         NOP   0
         SPACE 2
EXITASMX DS    0H
         L     R15,ASMXRCDE   ASSEMBLER RETURN CODE
         LTR   R15,R15        SUCESSFUL?
         BZ    EXIT0          YES, NORMAL EXIT
         B     EXIT4          NO, EXIT W/ ERROR
         EJECT
*
*        STAE EXIT
*
         SPACE 3
STAEEXIT DS    0H
         USING *,R15          TEMPORARY BASE
         SPACE
         CH    R0,STAECODE    IS WORK AREA PROVIDED?
         BE    STAE1          NO
         SPACE
         L     WORKREG,0(R1)  YES, GET OUR WORK AREA ADDR
         B     STAE2
         SPACE 2
STAE1    LR    WORKREG,R2     OUR WORK AREA ADDR
         SPACE 2
STAE2    DS    0H
         STM   0,15,STAEREGS
         SPACE 2
         LM    BASEREG1,BASEREG3,BASES
         DROP  R15
         SPACE
         LA    R13,STAESAVE
         SPACE 2
         TM    FLAGS,FCCATLIB SYSLIB CONCATENATED?
         BZ    STAE3          NO
         SPACE
         LA    R1,SYSLIB
         BAL   R14,DECONCAT
         SPACE
STAE3    TM    FLAGS,FCCATINP
         BZ    STAE4
         SPACE
         LA    R1,SYSIN
         BAL   R14,DECONCAT
         SPACE 2
STAE4    LM    0,15,STAEREGS
         SR    R15,R15        NO RETRY EXIT
         BR    R14
         SPACE
STAECODE DC    H'20'
         EJECT
*
*
*        INPUT DATA SET VALIDITY CHECK EXIT
*
*
         SPACE 3
VERINPUT ENTER VALCHECK
         LH    R3,INPUTDD#    RELATIVE DATA SET NUMBER
         LA    R3,1(R3)
         LA    R0,MAXINPUT    LIMIT OF INPUT DSNAMES
         CR    R3,R0          CHECK FOR LIMIT EXCEEDED
         BH    INPLIMIT       YES, ERROR
         MVI   DAIRFLAG,FSHR+FNOUSER
         SPACE
         SR    R15,R15        QUALIFIED NAME IS NULL
         TM    6(R8),X'80'    DATA SET NAME OMITTED?
         BZ    INPNQUAL       YES, MUST BE VERY BASIC NAME
         SPACE
         TM    6(R8),X'40'    DSN IN QUOTES?
         L     R1,0(R8)       ADDR OF DSN
         LH    R15,4(R8)      LENGTH OF DSN
         LR    R14,R1
         BO    INPQUOTE       QUOTED DATA SET NAME
         SPACE
         LA    R0,L'TYPEASM   LENGTH OF NAME QUALIFIER
         SR    R15,R0         CHECK FOR QUALIFIED NAME
         BM    INPQUAL0       LENGTH SHORT, NOT QUALIFIED
         BZ    INPQUAL1       SEE IS BASIC TYPE NAME
         SPACE
         BCTR  R15,0          DECREMENT CURRENT LENGTH
         AR    R1,R15         ADDR OF LAST CHAR IN NAME
         CLI   0(R1),C'.'     NAME QUALIFIED?
         BNE   INPQUAL0       NO
         SPACE
         LA    R1,1(R1)       JUMP NAME POINTER
         SPACE
INPQUAL1 CLC   TYPEASM,0(R1)  IS NAME QUALIFIED?
         BNE   INPQUAL0       NO
         STH   R15,4(R8)      LENGTH OF DSN W/O QUALIFIER
         SPACE
INPQUAL0 BCT   R3,INPNOBAS    IF NOT FIRST NAME
         MVC   BASICDSN,0(R14) SAVE DSNAME FOR BASIC NAME
         MVC   BASICLEN,4(R8) SAVE LENGTH OF BASIC NAME
INPNOBAS LA    R3,1(R3)       RESTORE DD COUNT
         SPACE 2
INPNQUAL OI    FLAGS,FQUAL    YES, INDICATE SO
         SPACE
         MVC   DSTYPE,TYPEASM MOVE IN QUALIFIER
         MVI   DSTYPEL,L'TYPEASM
         SPACE 2
         NI    DAIRFLAG,X'FF'-FNOUSER PREFIX USERID TO DSN
         SPACE
INPQUOTE DS    0H
         SPACE
         BAL   R14,SETDSNME   SET UP DATA SET NAME
         SPACE
         BAL   R14,ALLOCDS    ALLOCATE THIS DATA SET
         B     INPEXITC       FILE NOT ALLOCATED
         SPACE
         STH   R3,INPUTDD#    SAVE NEW DD COUNT
         SLL   R3,3           MULT DD# X 8 FOR INDEX
         LA    R3,INPUTDDN-8(R3) RELATIVE DDNAME ENTRY
         MVC   0(8,R3),0(R1)  SAVE RETURNED DDNAME
         SPACE 3
         SR    R15,R15
         SPACE
INPEXIT  EXIT
         SPACE 5
INPLIMIT DS    0H
         LA    R1,MSGINPUT    PRIMARY LEVEL ERROR MESSAGE
         LA    R0,MSGINPT#    SECONDARY LEVEL ERROR MSG
         BAL   R14,ERRORMSG   INFORM USER OF ERROR
         SPACE
INPEXITC LA    R15,8          ERROR CODE - PARSE TO QUIT
         B     INPEXIT
         EJECT
*
*
*        PRINT DATA SET NAME VALIDITY CHECK ROUTINE
*
*
         SPACE 3
VERPRINT ENTER VALCHECK
         MVI   DAIRFLAG,FOLD+FNOUSER+FTERM DAIR INTERFACE FLAGS
         SPACE
         TM    6(R8),X'80'    PRINT DSN SPECIFIED?
         LA    R1,BASICDSN    ADDR OF BASIC DSN
         LH    R15,BASICLEN   LENGTH OF BASIC NAME
         BZ    PRTBASIC       PRINT DSN NOT SPECIFIED
         SPACE
         TM    6(R8),X'40'    USER DSN QUOTED?
         L     R1,0(R8)       ADDR OF USER PRINT DSN
         LH    R15,4(R8)      LENGTH OF USER NAME
         BO    PRTQUOTE       QUOTED PRINT DSN
         B     PRINTDS
         SPACE 2
PRTBASIC TM    14(R8),X'80'   MEMBER SPECIFIED?
         BO    PRINTDS2       YES, NO BASIC NAME
         SPACE
         ST    R1,0(R8)       BASIC NAME IS DSN
         STH   R15,4(R8)      LEN OF DSN
         MVI   6(R8),X'80'    DSN PRESENT?
         NI    22(R8),X'7F'   NO PASSWORD FOR BASIC DSN
         LTR   R15,R15        BASIC NAME NULL?
         BNZ   PRINTDS2       NO
         XI    6(R8),X'80'    YES, INDICATE NAME NOT PRESENT
         B     PRINTDS2       DATA SET IS NOT QUALIFIED
         SPACE 2
PRINTDS  LR    R0,R15
         BCT   R0,PRINTDS1    IF NAME NOT 1 CHAR
         SPACE
         CLI   0(R1),C'*'     TERMINAL SPECIFIED?
         BNE   PRINTDS1       NO
         OI    FLAGS,FPRTERM
         MVI   DAIRFLAG+1,FPATTERN
         XC    DAIRBLKL,DAIRBLKL
         B     PRTQUOTE       ALLOCATE THE TERMINAL
         SPACE 3
PRINTDS1 DS    0H
         LA    R0,L'TYPELIST  LENGTH OF DSN QUALIFIER
         SR    R15,R0
         BM    PRINTDS2       LENGTH SHORT, NOT QUALIFIED
         BZ    PRTQUAL1       SEE IF BASIC TYPE NAME
         SPACE
         BCTR  R15,0          DECREMENT LENGTH LEFT
         AR    R1,R15         ADDR OF LAST NAME CHAR
         CLI   0(R1),C'.'     IS NAME QUALIFIED?
         BNE   PRINTDS2       NO
         LA    R1,1(R1)       JUMP POINTER
         SPACE
PRTQUAL1 CLC   TYPELIST,0(R1) QUALIFIED NAME?
         BNE   PRINTDS2       NO
         STH   R15,4(R8)      SAVE LENGTH OF UNQUALIFIED NAME
         SPACE
PRINTDS2 MVC   DSTYPE,TYPELIST QUALIFIER
         MVI   DSTYPEL,L'TYPELIST
         OI    FLAGS,FQUAL    QUALIFY DSN
         SPACE
PRTNQUAL DS    0H
         NI    DAIRFLAG,X'FF'-FNOUSER
         SPACE
PRTQUOTE DS    0H
         BAL   R14,SETDSNME   SET UP DSNAME
         SPACE
         BAL   R14,ALLOCDS    ALLOCATE DATA SET
         B     PRTEXIT8       FILE NOT ALLOCATED
         SPACE 2
         MVC   SYSPRINT,0(R1) SAVE RETURNED DDNAME
         SPACE 2
         SR    R15,R15
         SPACE
PRTEXIT  EXIT
         SPACE 2
PRTEXIT8 LA    R15,8
         B     PRTEXIT
         EJECT
*
*        SYSOUT CLASS VALIDITY CHECK ROUTINE
*
         SPACE 2
VERCLASS ENTER VALCHECK
         L     R15,0(R8)      ADDRESS OF SYSOUT CLASS ID
         MVC   SYSOUTID,0(R15) SAVE SYSOUT CLASS ID
         OI    FLAGS+1,FSYSOUT INDICATE SYSOUT SPECIFIED
         CLEAR JOBID          CLEAR JOBNAME AREA
         SPACE 2
         SR    R15,R15
         SPACE 2
CLASSOUT DS    0H
         EXIT
         EJECT
*
*        JOB ID VALIDITY CHECK FOR SYSOUT PARAMETER
*
* THIS CODE NOT SUPPORTED AS OF OS/VS2 RELEASE 2
         SPACE 2
*VERJBNAM ENTER VALCHECK
*        L     R15,0(R8)      ADDRESS OF JOB ID
*        LH    R14,4(R8)      LENGTH OF ID
*        LTR   R14,R14        PARAMETER PRESENT?
*        CLEAR JOBID          CLEAR JOBNAME AREA
*        BZ    JBNAMOUT       NO
*        BCTR  R14,0
*        MVC   JOBID(0),0(R15)
*        EX    R14,*-6
         SPACE 2
*JBNAMOUT DS    0H
*        SR    R15,R15
*        EXIT
         EJECT
*
*
*        LOAD DATA SET NAME VALIDITY CHECK ROUTINE
*
*
         SPACE 3
VERLOAD  ENTER VALCHECK
         MVI   DAIRFLAG,FOLD+FNOUSER DAIR INTERFACE FLAGS
         SPACE
         TM    6(R8),X'80'    LOAD DSN SPECIFIED?
         LA    R1,BASICDSN    ADDR OF BASIC DSN
         LH    R15,BASICLEN   LENGTH OF BASIC NAME
         BZ    PUNBASIC       LOAD DSN NOT SPECIFIED
         SPACE
         TM    6(R8),X'40'    USER DSN QUOTED?
         L     R1,0(R8)       ADDR OF USER LOAD DSN
         LH    R15,4(R8)      LENGTH OF USER NAME
         BO    PUNQUOTE       QUOTED LOAD DS
         B     PUNCHDS1
         SPACE 2
PUNBASIC TM    14(R8),X'80'   MEMBER SPECIFIED?
         BO    PUNCHDS2       YES, NO BASIC NAME
         SPACE
         ST    R1,0(R8)       BASIC NAME IS DSN
         STH   R15,4(R8)      LEN OF DSN
         MVI   6(R8),X'80'    DSN PRESENT?
         NI    22(R8),X'7F'   NO PASSWORD FOR BASIC DSN
         LTR   R15,R15        WAS BASIC NAME SPECIFIED?
         BNZ   PUNCHDS2       YES
         XI    6(R8),X'80'    NO NAME PRESENT
         B     PUNCHDS2       DATA SET IS NOT QUALIFIED
         SPACE 3
PUNCHDS1 DS    0H
         LA    R0,L'TYPELOAD  LENGTH OF DSN QUALIFIER
         SR    R15,R0
         BM    PUNNQUAL       LENGTH SHORT, NOT QUALIFIED
         BZ    PUNQUAL1       SEE IF BASIC TYPE NAME
         SPACE
         BCTR  R15,0          DECREMENT LENGTH LEFT
         AR    R1,R15         ADDR OF LAST NAME CHAR
         CLI   0(R1),C'.'     IS NAME QUALIFIED?
         BNE   PUNNQUAL       NO
         LA    R1,1(R1)
         SPACE
PUNQUAL1 CLC   TYPELOAD,0(R1) QUALIFIED NAME?
         BNE   PUNNQUAL       NO
         SPACE
         STH   R15,4(R8)      SAVE LENGTH OF UNQUALIFIED NAME
         SPACE
PUNNQUAL DS    0H
PUNCHDS2 MVC   DSTYPE,TYPELOAD QUALIFIER
         MVI   DSTYPEL,L'TYPELOAD
         OI    FLAGS,FQUAL    QUALIFY DSN
         SPACE
         NI    DAIRFLAG,X'FF'-FNOUSER
         SPACE
PUNQUOTE DS    0H
         BAL   R14,SETDSNME   SET UP DSNAME
         SPACE
         BAL   R14,ALLOCDS    ALLOCATE DATA SET
         B     PUNEXIT8       FILE NOT ALLOCATED
         SPACE 2
         MVC   SYSGO,0(R1)    SAVE RETURNED DDNAME
         SPACE 2
         SR    R15,R15
         SPACE
PUNEXIT  EXIT
         SPACE 2
PUNEXIT8 LA    R15,8
         B     PUNEXIT
         EJECT
*
*
*        NUMERIC VALUE VALIDITY CHECK SUBROUTINE
*
*
         SPACE 3
VERNUMBR ST    R14,R14SAVE
         SPACE 2
         L     R15,0(R8)      ADDR OF STRING
         LH    R14,4(R8)      LENGTH OF STRING
         BCTR  R14,0
         SPACE 2
         PACK  DOUBLE,0(,R15)
         EX    R14,*-6        GET VALUE OF PARAMETER
         SPACE
         CVB   R15,DOUBLE
         SPACE
         L     R14,R14SAVE
         BR    R14
         EJECT
*
*
*        UTILITY BLOCKSIZE VALIDITY CHECK ROUTINE
*
*
         SPACE 2
VERUTBLK ENTER VALCHECK
         BAL   R14,VERNUMBR
         SPACE
         STH   R15,UTILBLKL   SAVE BLOCKSIZE
         SPACE
         SR    R15,R15
         SPACE
         EXIT
         EJECT
*
*
*        LINE COUNT VALIDITY CHECK ROUTINE
*
*
         SPACE 3
VERLINES ENTER VALCHECK
         BAL   R14,VERNUMBR
         SPACE
         LTR   R15,R15        VALID LINE COUNT?
         BZ    LINEBAD        NO, ERROR
         SPACE
         UNPK  LINECNT#,DOUBLE     SAVE LINE COUNT
         SPACE
         SR    R15,R15
         SPACE
LINEEXIT EXIT
         SPACE 2
LINEBAD  DS    0H
         LA    R1,MSGLINES
         SR    R0,R0
         BAL   R14,ERRORMSG
         LA    R15,8
         B     LINEEXIT
         EJECT
*
*
*        UTILITY SPACE VALIDITY CHECK ROUTINE
*
*
         SPACE 3
VERUTSPC ENTER VALCHECK
         BAL   R14,VERNUMBR
         SPACE
         LTR   R15,R15        VALID SPACE?
         BZ    UTSPCBAD       NO, ERROR
         SPACE
         TM    FLAGS,FUTSPACE PRIMARY SPACE VALUE?
         LA    R1,UTILPRI     ASSUME YES
         BZ    *+8            YES
         LA    R1,UTILSEC     NO, SECONDARY VALUE
         SPACE
         OI    FLAGS,FUTSPACE
         SPACE
         STH   R15,0(R1)      SAVE SPACE VALUE
         SPACE
         SR    R15,R15
         SPACE
UTSPCEXT EXIT
         SPACE 2
UTSPCBAD LA    R1,MSGUTSPC
         SR    R0,R0
         BAL   R14,ERRORMSG
         LA    R15,8
         B     UTSPCEXT
         EJECT
*
*
*        LIBRARY VERIFICATION ROUTINE
*
*
         SPACE 3
VERLIB   ENTER VALCHECK
         LH    R3,LIBDD#      CURRENT LIBRARY NUMBER
         LA    R3,1(R3)       JUMP COUNT
         LA    R0,MAXLIBS     LIMIT OF LIBRARY DATA SETS
         CR    R3,R0          CHECK FOR LIMIT EXCEEDED
         BH    LIBLIMIT       YES, ERROR
         SPACE
         TM    6(R8),X'80'    DSNAME OMITTED?
         BZ    LIBERROR       YES, USER MUST HAVE GIVEN MEMBER NAME
         SPACE 2
         MVI   DAIRFLAG,FSHR+FNOUSER
         MVI   DAIRFLAG+1,FLIB
         SPACE
         TM    6(R8),X'40'    QUOTED DSN?
         BZ    LIBUSER        NO
         SPACE 2
         LA    R0,L'MACLIB    CHECK FOR SYSTEM MACRO
         CH    R0,4(R8)       SPECIFIED
         BNE   LIBQUOTE       IF NOT, REGULAR DATA SET
         L     R1,0(R8)
         CLC   MACLIB,0(R1)
         BNE   LIBQUOTE
         OI    FLAGS,FSYSMAC  INDICATE SYSTEM MACRO LIBRARY
         B     LIBQUOTE
LIBUSER  DS    0H
         SPACE
         LA    R0,L'TYPEASM   QUALIFIER FOR DATA SET
         MVC   DSTYPE,TYPEASM
         BAL   R14,LIBCHECK   CHECK QUALIFIER
         SPACE
         LA    R0,L'TYPELIB   SECOND QUALIFIER
         MVC   DSTYPE,TYPELIB
         BAL   R14,LIBCHECK   CHECK FOR QUALIFIER
         EJECT
*
*        LIBRARY DATA SET NOT SPECIFICALLY QUALIFIED.
*        NOW CHECK TO SEE IF THE NAME HAS LOWER LEVEL
*        INDICES WHICH MAY BE VALID QUALIFIERS.
*
         SPACE 3
         LA    R1,DAIRBLK     ADDR OF DYNAMIC PARAMETER BLOCK
         USING DAPB14,R1      BASE FOR THIS TYPE OF BLOCK
         XC    DAIRBLK(LDAIRBLK),DAIRBLK
         SPACE 2
         LA    R0,X'14'       CODE '14' - OBTAIN QUALIFIERS
         STH   R0,DA14CD
         SPACE
         LA    R0,DSNLEN      START OF DSNAME AREA
         ST    R0,DA14PDSN
         SPACE
         LA    R0,DSQUAL      RETURN AREA FOR QUALIFIERS
         ST    R0,DA14PRET
         OI    DA14CTL,DA14UID PREFIX USER ID
         DROP  R1
         SPACE 2
         LH    R15,4(R8)      LENGTH OF SPECIFIED DSNAME
         STH   R15,DSNLEN
         L     R1,0(R8)       ADDR OF SPECIFIED NAME
         MVC   DSNAME,0(R1)
         SPACE 2
         XC    DSQUAL(LDSQUAL),DSQUAL
         LA    R0,MAXQUAL     MAX QUALIFIER COUNT
         SLL   R0,16
         ST    R0,DSQUAL      SET AREA COUNT FOR DAIR
         SPACE
         BAL   R14,CALLDAIR   TO DYNAMIC ALLOCATION
         SPACE 2
         LTR   R15,R15        SUCESSFUL?
         BZ    LIBQCHK        YES
         LA    R14,36         CODE FROM CAM IF ACTUAL DSNAME
         CR    R15,R14        ACTUAL DSNAME?
         BE    LIBASIS        YES, TRY TO USE IT
         LA    R14,40         ERROR CODE FOR SHORT LIST
         CR    R15,R14        WAS LIST EXCEEDED?
         BNE   LIBNOFND       DATA SET NOT QUALIFIED
         SPACE 2
LIBQCHK  DS    0H
         MVC   DSTYPE,TYPELIB
         LA    R15,L'TYPELIB
         BAL   R14,LIBSCAN    CHECK FOR THIS QUALIFIER
         SPACE
         MVC   DSTYPE,TYPEASM
         LA    R15,L'TYPEASM
         BAL   R14,LIBSCAN    CHECK FOR THIS QUALIFIER
         SPACE
         B     LIBNOFND       DSNAME IS NOT QUALIFIED
         SPACE 3
LIBSCAN  DS    0H
         LA    R1,DSQUAL      ADDR OF FIRST QUALIFIER
         LA    R0,MAXQUAL     LIMIT OF QUALIFIERS
         STC   R15,DSTYPEL    SAVE LENGTH OF QUALIFIER
         BCTR  R15,0          LENGTH FOR EXECUTE COMPARE
         SPACE
LIBSCAN1 OC    0(8,R1),0(R1)  END OF LIST?
         BCR   8,R14          YES, THIS QUALIFIER NOT FOUND
         SPACE
         CLC   DSTYPE(0),0(R1)
         EX    R15,*-6
         BE    LIBSCAN2
         SPACE
LIBSCAN3 LA    R1,8(R1)       NEXT ENTRY
         BCT   R0,LIBSCAN1    IF MORE POSSIBLE QUALIFIERS
         BR    R14            THIS QUALIFIER NOT FOUND
         SPACE 2
LIBSCAN2 LA    R15,1(R15,R1)  POINT PAST QUALIFIER
         CLI   DSTYPEL,8      IS QUALIFIER AT MAX LENGTH
         BE    LIBQUAL        YES, THEN THIS IS A QUALIFIER
         SPACE
         CLI   0(R15),C' '    IS THIS REALLY A QUALIFIER?
         BNE   LIBSCAN3       NO
         B     LIBQUAL        YES, ACCEPT IT
         SPACE
LIBNQUAL MVC   DSTYPE,TYPELIB PRIMARY LIBRARY QUALIFIER
         MVI   DSTYPEL,L'TYPELIB
         SPACE 3
LIBQUAL  DS    0H
         OI    FLAGS,FQUAL    QUALIFY NAME
         SPACE 2
LIBASIS  DS    0H
         NI    DAIRFLAG,X'FF'-FNOUSER PREFIX USERID TO DSN
         SPACE 2
LIBQUOTE DS    0H
         BAL   R14,SETDSNME   SET UP DSNAME
         SPACE 2
         CLI   MEMBER,C' '    MEMBER NAME SPECIFIED?
         BE    LIBALLOC       NO, ALL OK
         SPACE 3
         MVC   MSGTEXT2+4(L'MSGIGNOR),MSGIGNOR
         LA    R1,MSGTEXT2+4+L'MSGIGNOR
         SPACE
         LH    R15,DSNLEN
         MVC   0(0,R1),DSNAME
         EX    R15,*-6
         AR    R1,R15
         SPACE
         LA    R0,MSGTEXT2
         SR    R1,R0
         SLL   R1,16
         ST    R1,MSGTEXT2
         SPACE
         LA    R1,MSGTEXT2
         SR    R0,R0
         BAL   R14,ERRORMSG
         SPACE 2
         CLEAR MEMBER
         SPACE 3
LIBALLOC DS    0H
         SPACE 3
         BAL   R14,ALLOCDS    ALLOCATE THE DATA SET
         B     LIBEXIT8       FILE NOT ALLOCATED
         SPACE 2
         STH   R3,LIBDD#      SAVE NEW LIB DD COUNT
         SPACE
         SLL   R3,3           MULT LIB DD # X 8
         LA    R3,LIBDDNS-8(R3) OFFSET FOR THIS DDNAME
         MVC   0(8,R3),0(R1)  SAVE RETURNED DDNAME
         SPACE 2
         SR    R15,R15        NORMAL EXIT CODE
         SPACE 2
LIBEXIT  EXIT
         EJECT
*
*        LIBRARY NAME QUALIFIER VERIFICATION SUBROUTINE
*
         SPACE 3
LIBCHECK ST    R14,R14SAVE    SAVE LINKAGE REGISTER
         SPACE
         LR    R14,R0         LENGTH OF QUALIFIER
         BCTR  R14,0          LENGTH FOR EXECUTE
         SPACE
         L     R1,0(R8)       ADDR OF LIB DSNAME
         LH    R15,4(R8)      LENGTH OF LIB DSNAME
         SPACE
         SR    R15,R0         LEN OF DSN W/O QUALIFIER
         BM    LIBCHK1        THIS TOO LONG FOR QUALIFIER
         BZ    LIBCHK0        LENGTH JUST RIGHT
         SPACE
         BCTR  R15,0          DECREMENT LENGTH
         AR    R1,R15         ADDR OF INDEX DELIMITER CHAR
         CLI   0(R1),C'.'     VALID SEPERATOR?
         BNE   LIBCHK1        NO, NAME NOT QUALIFIED
         LA    R1,1(R1)       YES, JUMP POINTER
         SPACE 2
LIBCHK0  CLC   0(0,R1),DSTYPE IS NAME QUALIFIED?
         EX    R14,*-6
         BE    LIBCHK2        MATCH, NAME QUALIFIED
         SPACE
LIBCHK1  L     R14,R14SAVE
         BR    R14            EXIT - NOT THIS QUALIFIER
         SPACE 3
LIBCHK2  STH   R15,4(R8)      SAVE LEN OF UNQUALIFIED DSN
         STC   R0,DSTYPEL     SAVE LENGTH OF QUALIFIER
         B     LIBQUAL
         SPACE 5
LIBERROR DS    0H
         LA    R1,MSGLIBNM    ERROR MSG - SYSLIB NAME REQUIRED
         SR    R0,R0          NO LEVEL 2 MSG
         BAL   R14,ERRORMSG
         LA    R15,12         PARSE TO QUIT CODE
         B     LIBEXIT
         SPACE 3
LIBLIMIT DS    0H
         LA    R1,MSGLIBS     'TOO MANY SYSLIBS'
         LA    R0,MSG#LIBS
         BAL   R14,ERRORMSG
         LA    R15,12         PARSE TO QUIT CODE
         B     LIBEXIT
         SPACE 3
LIBNOFND MVC   MSGTEXT2+4(L'MSGQUAL1),MSGQUAL1
         LA    R14,MSGTEXT2+4+L'MSGQUAL1
         L     R1,0(R8)
         LH    R15,4(R8)
         MVC   0(0,R14),0(R1)
         EX    R15,*-6
         AR    R14,R15
         MVC   0(L'MSGQUAL2,R14),MSGQUAL2
         LA    R14,L'MSGQUAL2(R14)
         LA    R1,MSGTEXT2
         SR    R14,R1
         SLL   R14,16
         ST    R14,MSGTEXT2
         LA    R0,MSGQUALS
         BAL   R14,ERRORMSG
         SPACE 3
LIBEXIT8 LA    R15,8
         B     LIBEXIT
         EJECT
*
*        SPACE PARAMETER VALIDITY CHECK SUBROUTINE
*
         SPACE 2
VERSPACE ENTER VALCHECK
         L     R1,0(R8)       ADDR OF CHARACTER STRING
         LH    R15,4(R8)      LENGTH OF STRING
         LR    R0,R15         SAVE LENGTH
         LR    R14,R1         SAVE ADDRESS
         SPACE 2
SPACE1   TM    0(R1),X'F0'    CHARACTER NUMERIC?
         BNO   SPACE2
         LA    R1,1(R1)       NEXT CHAR
         BCT   R15,SPACE1     IF MORE
         B     SPACE3
         SPACE 2
SPACE2   BCT   R15,ERRSPACE   IF NOT LAST CHAR
         CLI   0(R1),C'K'     UNITS OF 1024?
         BNE   ERRSPACE       NO, ERROR
         SR    R1,R14         ONLY 'K' SPECIFIED?
         BZ    ERRSPACE       YES
         SPACE
SPACE3   MVC   SPACE#,0(R14)  SAVE STRING
         STH   R0,SPACELEN    SAVE STRING LENGTH
         SPACE
         SR    R15,R15
         SPACE
SPCEXIT  EXIT
         SPACE 5
ERRSPACE DS    0H
         LA    R1,MSGSPACE
         SR    R0,R0
         BAL   R14,ERRORMSG
         LA    R15,8          PARSE RETRY CODE
         B     SPCEXIT
         EJECT
*
*        OPTION LIST BUILD SUBROUTINE
*
         SPACE 2
MOVEPARM DS    0H
         ST    R14,R14SAVE
         SPACE
         MVI   0(R2),C','     PARM SEPERATOR CHARACTER
         SPACE
         LH    R14,0(R1)       OFFSET TO PDE FOR OPTION
         A     R14,ADDRANSR   ADD IN STARTING ADDRESS
         SPACE
         MVC   0(2,R13),0(R14) GET OPTION VALUE
         LH    R0,0(R13)      RELATIVE OPTION NUMBER
         SR    R14,R14
         LTR   R0,R0
         BP    STARTOPT
         LA    R0,1
         B     STARTOPT
         SPACE 2
NEXTOPT  CLI   0(R1),X'FF'    END OF LIST?
         BE    EXITOPT        YES
         SPACE
STARTOPT LA    R1,2(R14,R1)   NEXT LIST ENTRY
         IC    R14,0(R1)      LEN-1 OF ENTRY
         BCT   R0,NEXTOPT     IF NOT SELECTED OPTION
         SPACE 2
         MVC   1(0,R2),1(R1)
         EX    R14,*-6        MOVE OPTION TO OPTION AREA
         LA    R2,2(R14,R2)   ADJUST AREA POINTER
         SPACE 3
EXITOPT  L     R14,R14SAVE
         BR    R14            EXIT
         EJECT
*
*        PARSE CLEANUP ROUTINE
*
         SPACE 3
FREEPDL  DS    0H
         SPACE
         ST    R14,R14SAVE
         SPACE
         L     R1,ADDRANSR    ADDR OF PDL
         LA    R1,0(R1)
         LTR   R1,R1          DOES ONE EXIST?
         BCR   8,R14          NO, EXIT
         SPACE
         IKJRLSA ADDRANSR     RELEASE THE STORAGE
         SPACE
         L     R14,R14SAVE
         BR    R14
         EJECT
*
*        DSNAME BUILD SUBROUTINE
*
         SPACE 2
SETDSNME DS    0H
         ST    R14,R14SAVE
         SPACE
         CLEAR DSNAME
         SPACE 2
         CLEAR PASSWORD
         SPACE 2
         CLEAR MEMBER
         SPACE 2
         TM    6(R8),X'80'    DSNAME SPECIFIED?
         LA    R1,DSNAME-1
         BZ    SETDSN1        NO
         SPACE
         LH    R15,4(R8)
         LTR   R15,R15        NULL DSNAME?
         BZ    SETDSN1        YES, MUST HAVE BEEN REDUCED TO NULL CASE
         L     R14,0(R8)
         MVC   DSNAME(0),0(R14)
         EX    R15,*-6
         LA    R1,DSNAME(R15)
         SPACE 2
         TM    6(R8),X'40'    DSNAME QUOTED?
         BO    SETDSN2        YES
         SPACE 2
         TM    FLAGS,FQUAL    SHOULD NAME BE QUALIFIED?
         BZ    SETDSN2        NO
         SPACE
SETDSN1  DS    0H
         MVI   0(R1),C'.'
         IC    R15,DSTYPEL    LENGTH OF QUALIFIER
         MVC   1(0,R1),DSTYPE
         EX    R15,*-6
         LA    R1,1(R15,R1)
         SPACE 2
SETDSN2  DS    0H
         LA    R0,DSNAME
         SR    R1,R0
         BNM   SETDSN3
         SR    R1,R1
         SPACE
SETDSN3  DS    0H
         STH   R1,DSNLEN
         SPACE
         TM    14(R8),X'80'   MEMBER NAME SPECIFIED?
         BZ    SETDSN4        NO
         SPACE
         LH    R15,12(R8)
         L     R14,8(R8)
         BCTR  R15,0
         MVC   MEMBER(0),0(R14)
         EX    R15,*-6
         SPACE
SETDSN4  DS    0H
         TM    22(R8),X'80'   PASSWORD SPECIFIED?
         BZ    SETDSN5        NO
         SPACE
         LH    R15,20(R8)
         L     R14,16(R8)
         BCTR  R15,0
         MVC   PASSWORD(0),0(R14)
         EX    R15,*-6
         SPACE
SETDSN5  DS    0H
         NI    FLAGS,X'FF'-FQUAL
         L     R14,R14SAVE
         BR    R14
         EJECT
*
*        DYNAMIC ALLOCATION INVOCATION SUBROUTINE
*
         SPACE 3
CALLDAIR DS    0H
         ST    R14,R14SAVE    SAVE LINKAGE REGISTER
         SPACE 2
         LA    R1,PARMLIST    BUILD DYNAMIC ALLOCATION PARAMETER LIST
         USING DAPL,R1
         SPACE
         MVC   DAPLUPT,ADDRUPT
         MVC   DAPLECT,ADDRECT
         MVC   DAPLPSCB,ADDRPSCB
         SPACE
         LA    R0,ATTNECB
         MVI   ATTNECB,0
         ST    R0,DAPLECB
         SPACE
         LA    R0,DAIRBLK
         ST    R0,DAPLDAPB
         SPACE 2
         L     R15,ADDRDAIR
         BALR  R14,R15
         SPACE 2
         L     R14,R14SAVE    RESTORE LINKAGE REGISTER
         BR    R14            EXIT
         EJECT
*
*
*        DE-CONCATENATION SUBROUTINE
*
*        DE-CONCATENATES DDNAME POINTED TO BY R1
*
         SPACE 3
DECONCAT DS    0H
         ST    R14,R14LINK    SAVE RETURN REGISTER
         LR    R15,R1         SAVE ADDR OF DDNAME
         SPACE
         LA    R1,DAIRBLK     ADDR OF DYNAMIC ALLOCATION PARAMETERS
         XC    DAIRBLK(LDAIRBLK),DAIRBLK
         SPACE
         USING DAPB10,R1
         LA    R0,X'10'       DE-CONCATENATE CODE
         STH   R0,DA10CD
         SPACE
         MVC   DA10DDN,0(R15) DDNAME TO BE DE-CONCATENATED
         SPACE
         BAL   R14,CALLDAIR   INVOKE DYNAMIC ALLOCATION
         SPACE 2
         L     R14,R14LINK
         BR    R14            EXIT
         SPACE
         DROP  R1
         EJECT
*
*
*        DATA SET CONCATENATION SUBROUTINE
*
*
*        CONCATENATES THE DDNAME LIST POINTED TO BY R1
*        R0 CONTAINS THE NUMBER OF ENTRIES IN THE LIST
*
         SPACE 3
CONCATDS DS    0H
         ST    R14,R14LINK    SAVE RETURN REGISTER
         LR    R15,R1         SAVE DDNAME LIST POINTER
         LR    R14,R0         SAVE # OF DDNAMES
         SPACE 2
         LA    R1,DAIRBLK
         XC    DAIRBLK(LDAIRBLK),DAIRBLK
         SPACE
         USING DAPB0C,R1      BASE FOR DAIR PARM BLOCK
         SPACE
         LA    R0,X'0C'       CONCATENATION CODE
         STH   R0,DA0CCD
         SPACE
         STH   R14,DA0CNUMB   SAVE DD COUNT
         SPACE
         SLL   R14,3          MULT # DDN X 8
         BCTR  R14,0          DECREMENT DDN LEN FOR MOVE
         SPACE
         MVC   DA0CDDN(0),0(R15)
         EX    R14,*-6        MOVE DDNAMES TO DAIR LIST
         SPACE 2
         BAL   R14,CALLDAIR   INVOKE DYNAMIC ALLOCATION
         LA    R1,DAIRBLK     RESTORE DAIR PARM ADDR
         SPACE 2
         LTR   R15,R15        SUCESSFUL?
         BNZ   CONCATER       NO, ERROR
         SPACE
         LA    R1,DA0CDDN     ADDR OF DDNAME UNDER WHICH THE
*                             DATA SETS ARE NOW CONCATENATED
         SPACE
         L     R14,R14LINK
         NI    FLAGS,X'FF'-FCATLIB-FCATINP
         B     4(R14)         RETURN
         SPACE 3
CONCATER DS    0H
         LH    R15,DA0CDARC   DYNAMIC ALLOC ERROR CODE
         SPACE
         TM    FLAGS,FCATLIB
         LA    R1,MSGCATLB
         BO    *+8
         LA    R1,MSGCATIN
         SPACE
         NI    FLAGS,X'FF'-FCATLIB-FCATINP
         B     DAIRFAIL
         SPACE 2
         DROP  R1
         EJECT
*
*
*        TERMINAL ALLOCATION SUBROUTINE
*
*
         SPACE 3
ALLOCTRM DS    0H
         ST    R14,R14LINK    SAVE RETURN REGISTER
         OI    DAIRFLAG+1,FTEMP    FOR ERROR MESSAGES
         SPACE
         LA    R1,DAIRBLK     ADDR OF DAIR PARM AREA
         XC    DAIRBLK(LDAIRBLK),DAIRBLK
         SPACE
         USING DAPB1C,R1      BASE FOR TERMINAL ALLOCATION BLOCK
         SPACE
         LA    R0,X'1C'       DAIR CODE FOR TERMINAL ALLOCATION
         STH   R0,DA1CCD
         SPACE
         CLEAR DA1CDDN        CLEAR DDNAME FIELD
         SPACE
         BAL   R14,CALLDAIR   INVOKE DYNAMIC ALLOCATION
         LA    R1,DAIRBLK
         SPACE
         LTR   R15,R15        DAIR SUCESSFUL?
         BNZ   ALLOCERR       NO, ERROR
         SPACE
         MVC   DOUBLE,DA1CDDN SAVE DDNAME
         USING DAPB08,R1      SWAP DSECTS
         MVC   DA08DDN,DOUBLE RESTORE DDNAME
         B     DAIREXIT       RETURN TO CALLER
         SPACE
         DROP  R1
         EJECT
*
*
*        DYNAMIC ALLOCATION INTERFACE SUBROUTINE
*
*
         SPACE 3
ALLOCDS  DS    0H
         TM    DAIRFLAG,FTERM ALLOW TERMINAL ALLOCATION?
         BZ    ALLOCDS1       NO, ONLY DATA SET ALLOCATION
         CLI   DSNAME,C'*'    REQUEST TO ALLOCATE A TERMINAL?
         BE    ALLOCTRM       YES, TO TERMINAL ALLOCATION SUBROUTINE
         SPACE 3
ALLOCDS1 DS    0H
         ST    R14,R14LINK    SAVE LINKAGE REGISTER
         SPACE 3
         LA    R1,DAIRBLK     DAIR PARAMETER BLOCK
         USING DAPB08,R1
         SPACE
         XC    DAIRBLK(LDAIRBLK),DAIRBLK
         SPACE 2
         TM    DAIRFLAG,FSOUT SYSOUT ALLOCATION?
         BO    DAIRSOUT       YES
         SPACE 3
         LA    R0,X'08'       DATA SET ALLOCATION CODE
         STH   R0,DA08CD
         SPACE 2
         LA    R0,DSNLEN      ADDR OF DSNAME FIELD
         ST    R0,DA08PDSN
         SPACE 2
         CLEAR DA08DDN
*        CLC   DSNAME(7),SYSUT1         IS IT A SYSUT DS
*        BNE   CLRUNT                   NO, NO VIO
*        MVC   DA08UNIT,SYSVIO          USE SYSVIO FOR SYSUT
*        B     CLRVOL
         SPACE 2
CLRUNT   CLEAR DA08UNIT       NO UNIT REQUESTED
         SPACE 2
CLRVOL   CLEAR DA08SER        NO VOLUME SERIAL
         SPACE 2
         MVC   DA08PSWD,PASSWORD
         SPACE 2
         MVC   DA08MNM,MEMBER
         SPACE 2
         TM    DAIRFLAG,FNEW  REQUEST FOR A 'NEW' DATA SET?
         BZ    DAIRNNEW       NO
         SPACE 2
         LH    R0,DAIRPRI     PRIMARY SPACE QUANTITY
         ST    R0,DA08PQTY
         SPACE
         LH    R0,DAIRSEC     SECONDARY SPACE QUANTITY
         ST    R0,DA08SQTY
         SPACE
         CLI   MEMBER,C' '    MEMBER NAME SPECIFIED?
         BNE   DAIRPDS        YES, SET DIRECTORY QUANTITY
         SPACE 2
         TM    DAIRFLAG+1,FLIB ALLOCATING A LIBRARY?
         BZ    DAIRNLIB       NO
         SPACE
DAIRPDS  DS    0H
         LH    R0,DAIRDIRC    DIRECTORY QUANTITY
         ST    R0,DA08DQTY
         SPACE 2
DAIRNLIB DS    0H
         SPACE
         TM    DAIRFLAG+1,FTEMP TEMPORARY DATA SET?
         MVI   DA08DSP1,DA08NEW    DISP=(NEW,DELETE,DELETE)
         MVI   DA08DPS2,DA08DEL
         MVI   DA08DPS3,DA08DELE
         BO    DAIRTEMP       DATA SET IS TEMPORARY
         SPACE 2
         MVI   DA08DPS2,DA08CAT    MAKE DISP=(NEW,CATLG,CATLG)
         MVI   DA08DPS3,DA08CATL
         SPACE 2
DAIRTEMP DS    0H
         SPACE
         TM    DAIRFLAG,FNORLSE    PROHIBIT 'RLSE'?
         MVI   DA08CTL,DA08TRKS+DA08RLSE
         BZ    DAIRRLSE       NO
         XI    DA08CTL,DA08RLSE
         SPACE
DAIRRLSE DS    0H
         B     DAIRNEW
         SPACE 3
DAIRNNEW TM    DAIRFLAG,FOLD  OLD DATA SET REQUEST?
         MVI   DA08DSP1,DA08OLD DISP=(OLD,KEEP,KEEP)
         MVI   DA08DPS2,DA08KEEP
         MVI   DA08DPS3,DA08KEP
         BO    DAIROLD
         SPACE 2
         TM    DAIRFLAG,FMOD  MOD DATA SET REQUEST?
         MVI   DA08DSP1,DA08MOD DISP=(MOD,KEEP,KEEP)
         BO    DAIRMOD
         SPACE 2
         MVI   DA08DSP1,DA08SHR DISP=(SHR,KEEP,KEEP)
         SPACE 2
DAIROLD  DS    0H
DAIRMOD  DS    0H
DAIRNEW  DS    0H
         TM    DAIRFLAG,FNOUSER    PREFIX USERID?
         BO    DAIRUSER       NO
         OI    DA08CTL,DA08UID YES
         SPACE 2
DAIRUSER DS    0H
         SPACE
         CLC   NULLFILE(LNULLDS),DSNLEN DSN=NULLFILE?
         BE    DAIRNULL       YES
         TM    DAIRFLAG+1,FDUMMY   DUMMY DATA SET?
         BZ    DAIRREAL       NO
DAIRNULL DS    0H
         OI    DA08CTL,DA08DMMY INDICATE DSN='NULLFILE'
         MVI   DA08DSP1,DA08NEW FORCE DISP=(NEW,DELETE,DELETE)
         MVI   DA08DPS2,DA08DEL
         MVI   DA08DPS3,DA08DELE
         SR    R0,R0
         ST    R0,DA08PDSN    NO DSNAME FOR DUMMY DATA SETS
         SPACE 2
DAIRREAL DS    0H
         SPACE
         SPACE
         BAL   R14,CALLDAIR   INVOKE DYNAMIC ALLOCATION
         SPACE
         LA    R1,DAIRBLK     RESTORE ADDR OF DAIR BLOCK
         L     R14,R14LINK
         ST    R15,DAIRCODE   SAVE RETURN CODE
         SPACE
         LTR   R15,R15        SUCESSFUL?
         BZ    DAIRGOOD       YES
         SPACE 2
         TM    DAIRFLAG,FOLD+FMOD REQUEST FOR EXISTING DATA SET?
         BZ    DAIRNOLD       NO
         SPACE 2
         OI    DAIRFLAG,FNEW  YES, SET UP TO RETRY REQUEST
         NI    DAIRFLAG,X'FF'-FOLD-FMOD
         SPACE
         XC    DAIRBLKL,DAIRBLKL
         MVC   DAIRPRI,DSPACEP
         MVC   DAIRSEC,DSPACES
         MVC   DAIRDIRC,DDIRECT
         B     ALLOCDS1       RE-TRY ALLOCATION
         SPACE 3
DAIRGOOD DS    0H
         TM    DAIRFLAG+1,FLIB REQUEST FOR LIBRARY ALLOCATION?
         BZ    DAIRMEM        NO, ON TO MEMBER TEST
         SPACE
         TM    DA08DSO,X'02'  IS SYSLIB A PDS?
         BO    DAIREXIT       YES
         B     DAIRLIB        NO, ERROR
         SPACE
DAIRMEM  CLI   MEMBER,C' '    MEMBER SPECIFIED?
         BNE   DAIRBLDL       YES, GOOD
         SPACE
         TM    DA08DSO,X'02'  NO, IS DSORG=PO?
         BZ    DAIREXIT       NO, ASSUME SUCESSFUL REQUEST
         SPACE 2
         CLI   BASICMEM,C' '  BASIC NAME EXIST?
         MVC   DA08MNM,BASICMEM
         BNE   DAIRBLDL       YES, USE BASIC MEMBER AS MEMBER NAME
         SPACE 2
         LA    R1,MSGTEXT1+4  CREATE MSG 'TEMPNAME ASSUMED' MSG
         MVC   0(L'MSGMEMBR,R1),MSGMEMBR
         LA    R1,L'MSGMEMBR(R1)
         SPACE
         LH    R15,DSNLEN     LENGTH OF DSNAME
         MVC   0(0,R1),DSNAME
         EX    R15,*-6
         AR    R1,R15
         SPACE 2
         LA    R0,MSGTEXT1
         SR    R1,R0
         SLL   R1,16
         ST    R1,MSGTEXT1
         LR    R1,R0
         SR    R0,R0
         BAL   R14,ERRORMSG
         SPACE
         LA    R1,DAIRBLK
         MVC   DA08MNM,TEMPNAME    USE TEMPNAME AS MEMBER NAME
         SPACE
DAIRBLDL DS    0H
         TM    DAIRFLAG,FSHR  INPUT DATA SET?
         BZ    DAIRFREE       NO, SKIP BLDL
         SPACE
         MVC   BLDLAREA(4),BLDLPARM
         MVC   BLDLNAME,DA08MNM
         SPACE
         MVC   DUMMYDCB(LBLDLDCB),BLDLDCB
         MVC   DUMMYDCB+DCBDDNAM(8),DA08DDN
         SPACE 3
         MVI   DOUBLE,X'80'
         OPEN  DUMMYDCB,MF=(E,DOUBLE)
         SPACE 2
         BLDL  DUMMYDCB,BLDLAREA
         LR    R14,R15
         SPACE 2
         CLOSE MF=(E,DOUBLE)
         SPACE 2
         LTR   R14,R14        MEMBER FOUND?
         LA    R1,DAIRBLK
         BNZ   DAIRNMEM       NO, MEMBER DOESN'T EXIST
         SPACE 2
DAIRFREE DS    0H
         CLC   MEMBER,DA08MNM RETRYING WITH NEW MEMBER?
         BE    DAIREXIT       NO, ALLOCATION GOOD
         MVC   MEMBER,DA08MNM YES, SAVE THIS NAME
         MVC   DOUBLE(8),DA08DDN
         SPACE
         XC    DAIRBLK(LDAIRBLK),DAIRBLK
         USING DAPB18,R1
         SPACE
         MVC   DA18DDN,DOUBLE
         LA    R0,X'18'
         STH   R0,DA18CD
         SPACE
         BAL   R14,CALLDAIR        UN-ALLOCATE THE DATA SET
         SPACE
         LA    R1,DAIRBLK
         USING DAPB08,R1
         LTR   R15,R15        WAS UNALLOCATION SUCESSFUL?
         L     R14,R14LINK
         BZ    ALLOCDS1       YES, RE-ALLOCATE DATA SET
         SPACE
         B     ALLOCERR
         SPACE 3
DAIREXIT DS    0H
         TM    DAIRFLAG+1,FPATTERN JFCB TO BE UPDATED?
         BZ    DAIRBACK       NO, NO JFCB UPDATE
         LA    R1,DAIRBLK
         SPACE
         LA    R0,JFCB        ADDR OF JFCB
         ST    R0,DOUBLE+4
         MVI   DOUBLE+4,X'87' CREATE JFCB EXLST ENTRY
         LA    R0,DOUBLE+4    EXLST ADDRESS
         SPACE 2
         MVC   DUMMYDCB(LDCB),DCB
         MVC   DUMMYDCB+DCBDDNAM(8),DA08DDN
         SPACE
         ST    R0,DCBEXLST+DUMMYDCB
         SPACE
         MVI   DOUBLE,X'80'
         RDJFCB DUMMYDCB,MF=(E,DOUBLE)
         SPACE
         MVI   JFCRECFM,0
         XC    JFCLRECL,JFCLRECL
         OI    JFCBMASK+4,X'80'    FORCE RE-WRITE OF JFCB
         OI    JFCBTSDM,X'02' PREVENT DCB-JFCB MERGE
         SPACE
         MVC   JFCBLKSI,DAIRBLKL  SET BLOCKSIZE
         SPACE
DAIROPEN OPEN  MF=(E,DOUBLE),TYPE=J
         CLOSE MF=(E,DOUBLE)
         SPACE 2
DAIRBACK DS    0H
         XC    DAIRBLKL,DAIRBLKL
         XC    DAIRFLAG,DAIRFLAG
         LA    R1,DAIRBLK
         L     R14,R14LINK
         LA    R1,DA08DDN     ADDRESS OF RETURNED DDNAME
         B     4(R14)         RETURN TO CALLING ROUTINE
         SPACE 3
DAIRNMEM DS    0H
         MVC   MSGTEXT1+4(L'MSGMBR),MSGMBR
         LA    R14,MSGTEXT1+4+L'MSGMBR
         MVC   0(8,R14),DA08MNM
         LA    R14,8(R14)
         MVC   0(L'MSGMBR1,R14),MSGMBR1
         LA    R14,L'MSGMBR1(R14)
         SPACE
         LH    R15,DSNLEN
         MVC   0(0,R14),DSNAME
         EX    R15,*-6
         AR    R14,R15
         SPACE
         LA    R0,MSGTEXT1
         SR    R14,R0
         SLL   R14,16
         ST    R14,MSGTEXT1
         SPACE
         SR    R0,R0
         B     ALLOCBAD
         EJECT
*
*        DAIR SYSOUT ALLOCATION INTERFACE
*
         SPACE 2
DAIRSOUT DS    0H
         USING DAPB30,R1
         LA    R0,X'30'       SYSOUT ALLOCATION CODE
         STH   R0,DA30CD
         SPACE 2
         CLEAR DA30DDN
         SPACE
         CLEAR DA30UNIT
         SPACE
         CLEAR DA30SER
         SPACE
         CLEAR DA30PGNM
         SPACE
         CLEAR DA30FORM
         SPACE
         CLEAR DA30OCLS
         SPACE 2
         LH    R0,DAIRBLKL
         ST    R0,DA30BLK
         LH    R0,DAIRPRI
         ST    R0,DA30PQTY
         LH    R0,DAIRSEC
         ST    R0,DA30SQTY
         MVI   DA30CTL,DA30TRKS
         MVI   DA30CTL,DA30TRKS
         SPACE 2
         MVC   DA30OCLS(1),DAIRCLS
         SPACE 2
         BAL   R14,CALLDAIR
         SPACE
         LA    R1,DAIRBLK
         ST    R15,DAIRCODE
         L     R14,R14LINK
         LTR   R15,R15        ALLOCATION SUCESSFUL?
         BNZ   DAIRNOLD       NO, ERROR
         SPACE 2
         LA    R1,DA30DDN     RETURN DDNAME ADDRESS IN REGISTER 1
         B     4(R14)         EXIT
         EJECT
         USING DAPB08,R1
         SPACE
DAIRNOLD DS    0H
         SPACE 2
         LA    R14,MAXDAIR
         CR    R15,R14        CHECK DAIR RETURN CODE
         BH    DAIRBAD        VERY BAD ERROR
         SPACE 3
         B     *(R15)         DAIR ERROR PROCESSING
         B     DAIRBAD        RC=04 INVALID DAIR PARAMETERS
         B     DAIRCAM        RC=08 ERROR IN CATALOG MANAGEMENT
         B     DAIRDYN        RC=12 ERROR IN DYNAMIC ALLOACTION
         B     DAIRFULL       RC=16 NO SPACE IN TIOT
MAXDAIR  EQU   16
         SPACE 3
DAIRFULL LA    R1,MSGFULL     ERROR MSG
         LA    R0,MSGFULL1    SECOND LEVEL MSG
         B     ALLOCERR
DAIRLIB  DS    0H
         LA    R1,MSGNOTPO
         LA    R0,MSGDSNPO
         B     ALLOCERR
         EJECT
*
*        PROCESS ERRORS FROM CATALOG MANAGEMENT
*
         SPACE 2
DAIRCAM  DS    0H
         SPACE
         LH    R15,DA08CTRC   GET CAM RETURN CODE
         LA    R14,MAXCAMCD   MAX CAM ERROR CODE
         CR    R15,R14
         BH    DAIRCAMX       IF DISASTER ERROR CODE
         SPACE
         B     *(R15)         PROCESS ERROR CODE
         B     CAMERR4        04 - REQUIRED VOLUME NOT MOUNTED
         B     CAMERR8        08 - INCONSISTENT CATALOG STRUCTURE
         B     CAMERR12       12 -     ''          ''       ''
         B     CAMERR16       16
         B     CAMERR20       20
MAXCAMCD EQU   20
         SPACE 3
CAMERR4  LA    R1,MSGVOL      LAST PART OF 1ST LEVEL MSG
CAMERROR SR    R0,R0          NO SECOND LEVEL MSG
         B     ALLOCERR       PUT OUT ERROR MSG
         SPACE 2
CAMERR8  TM    DAIRFLAG,FNEW  REQUEST FOR NEW DATA SET?
         LA    R1,MSGNOCAT    MSG 'DATA SET NOT CATALOGED'
         BZ    CAMERROR       NOT NEW DATA SET
CAMERR16 DS    0H
CAMERR12 LA    R1,MSGINDEX    MSG 'INCONSISTENT CATALOG STRUCTURE'
         LA    R0,MSGDSFMT
         SPACE
         B     ALLOCERR
         SPACE 2
CAMERR20 TM    DAIRFLAG,FNEW  NEW DATA SET?
         LA    R1,MSGCATFL    MSG 'CATALOG IS FULL
         BO    CAMERROR       YES
         SPACE
         LA    R1,MSGSYNTX    MSG 'INVALID DSNAME SYNTAX'
         LA    R0,MSGDSN
         B     ALLOCERR
         SPACE 3
DAIRCAMX DS    0H
         LH    R1,MSGCATER    LEN OF ERROR MSG
         SPACE
         MVC   MSGTEXT2(0),MSGCATER
         EX    R1,*-6
         SPACE
         LA    R1,MSGTEXT2(R1)
         CVD   R15,DOUBLE
         OI    DOUBLE+7,X'0F'
         UNPK  0(2,R1),DOUBLE
         LA    R1,2(R1)
         LA    R0,MSGTEXT2
         SR    R1,R0
         SLL   R1,16
         ST    R1,MSGTEXT2
         SPACE 2
         SR    R1,R1
         B     ALLOCERR
         EJECT
*
*        PROCESS ERRORS FROM DYNAMIC ALLOCATION
*
         SPACE 3
DAIRDYN  DS    0H
         LH    R15,DA08DARC   RETURN CODE FROM DYNAMIC ALLOCATION
         SPACE
         LA    R14,DYNMSGS    START OF MSG LOOKUP TABLE
         LA    R1,DYNMSGE     LAST MSG IN TABLE
         SPACE 2
DAIRDYN1 CH    R15,0(R14)     THIS ERROR CODE?
         BE    DAIRDYN2       YES
         SPACE
         TM    2(R14),X'80'   IS SECOND LEVEL MSG THERE?
         LA    R0,6           LENGTH FOR SINGLE MSG
         BZ    DAIRDYN3       NO
         LA    R0,10          LENGTH FOR 2 MSG LEVELS
         SPACE 2
DAIRDYN3 BXLE  R14,R0,DAIRDYN1
         SPACE 2
DAIRBAD  DS    0H
         SR    R1,R1          DEFAULT TO FIRST LEVEL MSG
DAIRFAIL DS    0H
         LH    R14,MSGDYNER
         MVC   MSGTEXT2(0),MSGDYNER
         EX    R14,*-6        CREATE MSG - DYNAMIC ALLOCATION FAILURE
         STH   R15,DOUBLE
         LA    R14,MSGTEXT2(R14)
         UNPK  0(5,R14),DOUBLE(3)
         TR    0(4,R14),TRTABLE
         LA    R0,MSGTEXT2-4
         SR    R14,R0
         SLL   R14,16
         ST    R14,MSGTEXT2
         LA    R0,MSGTEXT2
         B     ALLOCERR
         SPACE 3
DAIRDYN2 MVC   DOUBLE(8),2(R14) MOVE ADDR OF ERROR MSGS
         L     R1,DOUBLE      ADDR OF FIRST LEVEL MSG
         SR    R0,R0          DEFAULT - NO LEVEL 2 MSG
         LTR   R1,R1          ANY SECOND LEVEL?
         LA    R1,0(R1)       FIRST LEVEL MSG ADDR
         BNM   DAIRDYN4       ONLY LEVEL 1
         L     R0,DOUBLE+4    SECOND LEVEL MSG
DAIRDYN4 B     ALLOCERR
         SPACE 3
DYNMSGS  DS    0H
         DC    X'020C',X'80',AL3(MSG20C),AL4(MSG20CX)
         DC    X'0210',X'80',AL3(MSG210),AL4(MSG210X)
         DC    X'0214',X'80',AL3(MSG214),AL4(MSG214X)
         DC    X'0218',X'80',AL3(MSG218),AL4(MSG218X)
         DC    X'021C',X'80',AL3(MSG21C),AL4(MSG21CX)
         DC    X'0334',X'00',AL3(MSG334)
         DC    X'041C',X'80',AL3(0),AL4(MSG41CX)
         DC    X'4704',X'80',AL3(MSG4704),AL4(MSG4704X)
DYNMSGE  DS    0H
         DC    X'4714',X'80',AL3(MSG4714),AL4(MSG4714X)
         EJECT
*
*
*        ALLOCATION ERROR MESSAGE SUBROUTINE
*
*
         SPACE 3
ALLOCERR DS    0H
         LA    R15,MSGTEXT1+4  BUFFER ADDRESS
         TM    DAIRFLAG,FSOUT SYSOUT FILE?
         BO    ALOCERR1       YES
         TM    DAIRFLAG+1,FUTIL+FTEMP UTILITY DATA SET?
         BZ    ALOCERR2       NO, MOVE DSN TO BUFFER
         SPACE
         MVC   0(L'MSG2,R15),MSG2 MOVE 'UTILITY DATA SET' MSG TO BUFFER
         LA    R15,L'MSG2(R15)
         B     ALOCERR3
         SPACE 2
ALOCERR1 MVC   0(L'MSGSOUT,R15),MSGSOUT MOVE SYSOUT MESSAGE
         LA    R15,L'MSGSOUT(R15)
         B     ALOCERR3
ALOCERR2 MVC   0(L'MSG1,R15),MSG1 MOVE 'DATA SET ' MSG TO BUFFER
         LH    R14,DSNLEN     LENGTH OF DSNAME
         LA    R15,L'MSG1(R15)
         SPACE
         MVC   0(0,R15),DSNAME
         EX    R14,*-6        MOVE DSNAME TO BUFFER
         AR    R15,R14
         SPACE 2
ALOCERR3 DS    0H
         MVC   0(L'MSG3,R15),MSG3 MOVE ' NOT ALLOCATED, ' MSG TO BUFFER
         LA    R15,L'MSG3(R15)
         SPACE 2
         LTR   R1,R1          DEFAULT FIRST LEVEL MSG?
         BNZ   ALOCERR4       NO
         SPACE
         LA    R1,MSG4        YES
         SPACE
ALOCERR4 LH    R14,0(R1)      GET MSG LEN + 4
         SPACE
         MVC   0(0,R15),4(R1)
         EX    R14,*-6
         AR    R15,R14
         LA    R14,MSGTEXT1+4
         SR    R15,R14
         SLL   R15,16
         ST    R15,MSGTEXT1   STORE MESSAGE LENGTH
         SPACE
ALLOCBAD DS    0H
         LA    R1,MSGTEXT1
         BAL   R14,ERRORMSG   ISSUE THE ERROR MESSAGE
         SPACE 2
         XC    DAIRFLAG,DAIRFLAG
         XC    DAIRBLKL,DAIRBLKL
         L     R14,R14LINK    RESTORE LINKAGE REGISTER
         L     R15,DAIRCODE   RESTORE DAIR ERROR CODE
         BR    R14            EXIT WITH ERROR
         EJECT
ERRORMSG DS    0H
         ST    R14,R14SAVE    SAVE LINKAGE REGISTER
         SPACE
         LTR   R0,R0          SECOND LEVEL MSG?
         BZ    ERRORM1        NO
         SPACE
         MVC   MSGTEXT1,0(R1) INSURE MSG IN WORK AREA
         LA    R1,MSGTEXT1
         SPACE
         LH    R14,0(R1)      LENGTH OF FIRST LEVEL MSG
         LA    R15,0(R14,R1)  ADDR OF END OF MSG
         LA    R14,1(R14)     JUMP MSG LENGTH
         STH   R14,0(R1)
         MVI   0(R15),C'+'    INDICATE SECOND LEVEL MSG EXISTS
         SPACE 2
         SR    R14,R14        CLEAR CHAIN FIELD
         LA    R15,1          ONE SEGMENT IN 2ND MSG
         STM   R14,R0,PUTOLD2 CREATE SECOND-LEVEL
*                             OUTPUT LINE DESCRIPTOR ('OLD')
         LA    R0,PUTOLD2
         SPACE 3
ERRORM1  LR    R14,R0         NEXT 'OLD' ADDR OR ZERO
         LA    R15,1          ONE SEGMENT
         LR    R0,R1          MSG ADDR
         STM   R14,R0,PUTOLD1 FIRST LEVEL 'OLD'
         SPACE
         LA    R1,PARMLIST
         USING IOPL,R1
         SPACE
         MVC   IOPLECT,ADDRECT
         MVC   IOPLUPT,ADDRUPT
         SPACE
         LA    R0,ATTNECB
         ST    R0,IOPLECB
         MVI   ATTNECB,0
         SPACE 3
         L     R15,ADDRPUTL
         XC    PARMLIST+16(4),PARMLIST+16
         PUTLINE PARM=PARMLIST+16,ENTRY=(15),MF=(E,(1)),               X
               OUTPUT=(PUTOLD1,TERM,MULTLVL,INFOR)
         SPACE 3
         L     R14,R14SAVE
         BR    R14
         EJECT
*
*
*        P A R S E   C O N T R O L   L I S T
*
*
         SPACE 3
         PRINT NOGEN
PCLCSECT IKJPARM DSECT=ASMXPDL
         SPACE 2
INPUTDSN IKJPOSIT DSNAME,LIST,VALIDCK=VERINPUT,                        $
               PROMPT='INPUT DATA SET NAME(S)',                        $
               HELP=('NAME OF THE DATA SET TO BE ASSEMBLED',           $
               'UP TO 16 DATA SET NAMES')
         SPACE 2
OPTPRINT IKJKEYWD DEFAULT='NOPRINT'
         IKJNAME 'NOPRINT'
         IKJNAME 'PRINT',SUBFLD=$PRINT
         IKJNAME 'SYSOUT',SUBFLD=$SYSOUT
         SPACE 2
OPTLIB   IKJKEYWD DEFAULT='LIB'
         IKJNAME 'NOLIB'
         IKJNAME 'LIB',SUBFLD=$LIB
         SPACE 2
OPTLOAD  IKJKEYWD DEFAULT='LOAD'
         IKJNAME 'NOLOAD'
         IKJNAME 'LOAD',SUBFLD=$LOAD
         SPACE 2
OPTLIST  IKJKEYWD
         IKJNAME 'NOLIST'
         IKJNAME 'LIST'
         SPACE 2
OPTXREF  IKJKEYWD
         IKJNAME 'NOXREF'
         IKJNAME 'FULLXREF'
         IKJNAME 'XREF'
         SPACE 2
OPTESD   IKJKEYWD
         IKJNAME 'NOESD'
         IKJNAME 'ESD'
         IKJNAME 'ED'
         SPACE 2
OPTRLD   IKJKEYWD
         IKJNAME 'NORLD'
         IKJNAME 'RLD'
         IKJNAME 'RD'
         SPACE 2
OPTSPACE IKJKEYWD DEFAULT='UTSPACE'
         IKJNAME 'UTSPACE',SUBFLD=$UTSPACE
         SPACE 2
OPTTERM  IKJKEYWD DEFAULT='TERM'
         IKJNAME 'NOTERM'
         IKJNAME 'TERM'
         SPACE 2
OPTNUM   IKJKEYWD DEFAULT='NUM'
         IKJNAME 'NONUM'
         IKJNAME 'NUM'
         SPACE 2
OPTSTMT  IKJKEYWD DEFAULT='STMT'
         IKJNAME 'NOSTMT'
         IKJNAME 'STMT'
         SPACE 2
OPTALGN  IKJKEYWD DEFAULT='ALGN'
         IKJNAME 'NOALGN'
         IKJNAME 'ALGN'
         SPACE 2
OPTRENT  IKJKEYWD
         IKJNAME 'NORENT'
         IKJNAME 'RENT'
         SPACE 2
OPTTEST  IKJKEYWD DEFAULT='TEST'
         IKJNAME 'NOTEST'
         IKJNAME 'TEST'
         SPACE 2
OPTMAC   IKJKEYWD DEFAULT='MACLIB'
         IKJNAME 'NOMACLIB'
         IKJNAME 'MACLIB'
         SPACE 2
OPTLNCNT IKJKEYWD DEFAULT='LINECOUNT'
         IKJNAME 'LINECOUNT',SUBFLD=$LINECNT
         SPACE 2
$PRINT   IKJSUBF
DSNPRINT IKJPOSIT DSTHING,VALIDCK=VERPRINT,                            $
               HELP=('NAME OF THE DATA SET WHICH WILL CONTAIN THE SYSPR$
               INT LISTING FROM THE ASSEMBLER','ENTER ''*'' TO GENERATE$
                THE LISTING AT THE TERMINAL')
         SPACE 2
$SYSOUT  IKJSUBF
DSNCLASS IKJIDENT 'SYSOUT CLASS',VALIDCK=VERCLASS,                     $
               HELP=('SYSOUT CLASS FOR ASSEMBLY LISTING','VALID CLASSES$
                ARE A-Z, 0-9'),MAXLNTH=1,FIRST=ALPHANUM,               $
               DEFAULT='C'
         SPACE 2
*JOBNAME  IKJIDENT 'JOB IDENTIFER',VALIDCK=VERJBNAM,
*              HELP=('JOB NAME TO BE PLACED ON THE ASSEMBLY LISTING'),
*              MAXLNTH=8,FIRST=ALPHA,OTHER=ALPHANUM
         SPACE 2
$LOAD    IKJSUBF
DSNLOAD  IKJPOSIT DSNAME,VALIDCK=VERLOAD,                              $
               HELP=('NAME OF THE DATA SET TO CONTAIN THE OBJECT MODULE$
               ')
         SPACE 2
$LIB     IKJSUBF
DSNLIB   IKJPOSIT DSNAME,LIST,VALIDCK=VERLIB,                          $
               HELP=('NAME OF THE DATA SET(S) TO BE USED AS MACRO LIBRA$
               RIES'),                                                 $
               DEFAULT='''SYS2.MACLIB'''
         SPACE 2
$LINECNT IKJSUBF
#LINECNT IKJIDENT 'INTEGER',FIRST=NUMERIC,OTHER=NUMERIC,               $
               VALIDCK=VERLINES,MAXLNTH=2,                             $
               HELP=('NUMBER OF LINES PER ASSEMBLY LISTING PAGE')
         SPACE 2
$UTSPACE IKJSUBF
UTSPACEP IKJIDENT 'INTEGER',FIRST=NUMERIC,OTHER=NUMERIC,               $
               VALIDCK=VERUTSPC,MAXLNTH=2,                             $
               HELP=('PRIMARY SPACE QUANTITY FOR UTILITY FILES')
UTSPACES IKJIDENT 'INTEGER',FIRST=NUMERIC,OTHER=NUMERIC,               $
               VALIDCK=VERUTSPC,MAXLNTH=2,                             $
               HELP=('SECONDARY SPACE QUANTITY FOR UTILITY FILES')
         IKJENDP
         PRINT GEN
         EJECT
*
*
*        CONSTANTS
*
*
         SPACE 2
         PRINT NOGEN
         DS    0F
CORESIZE DC    AL1(1),AL3(LENWORK)
         SPACE
ADDRPCL  DC    A(PCLCSECT)    ADDR OF PARSE CONTROL LIST
         SPACE 3
TYPEASM  DC    C'ASM'         DSNAME QUALIFIER
TYPELIST DC    C'LIST'        DSNAME QUALIFIER
TYPELOAD DC    C'OBJ'         DSNAME QUALIFIER
TYPELIB  DC    C'MACLIB'      DSNAME QUALIFIER
         SPACE 2
MACLIB   DC    C'SYS1.MACLIB' SYSTEM MACRO LIBRARY
DUMMYMAC DC    C'&&MACLIB'    TEMPORARY MACRO LIBRARY NAME
SYSOUTNM DC    C'&&SYSPRINT'  DSNAME FOR SYSOUT FILE
         SPACE 2
UTILDSN  DC    C'&&SYSUT1'    UTILITY DSNAMES
         DC    C'&&SYSUT2'
         DC    C'&&SYSUT3'
#UTILDSN EQU   3              NUMBER OF UTILITY DSNAMES
SYSVIO   DC    C'SYSTS   '              UNIT NAME FOR SYSVIO
         SPACE 3
LINECNT  DC    C',LINECOUNT('
NODECK   DC    C'NODECK'
*UTBUFF   DC    C',UTBUFF='
*SPACE    DC    C',SPACE=MAX-'
         SPACE 3
ASMNAME  DC    CL8'IFOX00'    ASSEMBLER LOAD MODULE
IKJDAIR  DC    CL8'IKJDAIR'   DYNAMIC ALLOCATION INTERFACE ROUTINE
IKJPUTL  DC    CL8'IKJPUTL'   PUTLINE SERVICE ROUTINE
IKJPARS  DC    CL8'IKJPARS'   PARSE SERVICE ROUTINE
         SPACE 2
NULLFILE DC    AL2(8),C'NULLFILE'
LNULLDS  EQU   *-NULLFILE
         SPACE 3
STAE     STAE  0,CT,MF=L      PATTERN STAE EXIT
LSTAE    EQU   *-STAE
         SPACE 2
BLDLDCB  DCB   DSORG=PO,DEVD=DA,MACRF=E,DDNAME=X
LBLDLDCB EQU   *-BLDLDCB
DCB      DCB   DSORG=PS,DEVD=DA,MACRF=R,DDNAME=X,RECFM=U,BLKSIZE=1
LDCB     EQU   *-DCB
BLDLPARM DC    AL2(1,12)
         SPACE 2
TRTABLE  EQU   *-X'F0'
         DC    C'0123456789ABCDEF'
         SPACE 5
*
*        DEFAULT VALUES FOR SELECTED PARAMETERS
*
         SPACE 2
DSPACEP  DC    AL2(19)        DEFAULT PRIMARY SPACE
DSPACES  DC    AL2(19)        DEFAULT SECONDARY SPACE
DSPACE1  DC    AL2(1)
DBLKSIZE DC    AL2(80)        DEFAULT BLOCKSIZE
DDIRECT  DC    AL2(1)         DEFAULT DIRECTORY SIZE
DUTILPRI DC    AL2(19)        UTILITY FILE PRIMARY SPACE
DUTILSEC DC    AL2(19)        UTILITY FILE SECONDARY SPACE
DUTILBLK DC    AL2(3120)      UTILITY FILE BLOCKSIZE
DUTBUFF# DC    C'3'           UTILITY BUFNO
DSPACE#  DC    C'4K'
DLINECNT DC    C'55'          DEFAULT LINE COUNT
         SPACE 2
PRINTPRI DC    AL2(19)        SYSOUT FILE PRIMARY SPACE
PRINTSEC DC    AL2(19)        SYSOUT FILE SECONDARY SPACE
PRINTBLK DC    AL2(3509)      SYSOUT FILE BLOCKSIZE
         EJECT
@LOAD    OPTION OPTLOAD,(NOLOAD,LOAD)
         SPACE 2
@LIST    OPTION OPTLIST,(NOLIST,LIST)
         SPACE 2
@XREF    OPTION OPTXREF,(NOXREF,XREF(SHORT),XREF(FULL))
         SPACE 2
@ESD     OPTION OPTESD,(NOESD,ESD,ESD)
         SPACE 2
@RLD     OPTION OPTRLD,(NORLD,RLD,RLD)
         SPACE 2
@TERM    OPTION OPTTERM,(NOTERM,TERM)
         SPACE 2
@NUM     OPTION OPTNUM,(NONUM,NUM)
         SPACE 2
@STMT    OPTION OPTSTMT,(NOSTMT,STMT)
         SPACE 2
@ALGN    OPTION OPTALGN,(NOALIGN,ALIGN)
         SPACE 2
@RENT    OPTION OPTRENT,(NORENT,RENT)
         SPACE 2
@TEST    OPTION OPTTEST,(NOTEST,TEST)
         SPACE 2
*
*        PROGRAM MESSAGES
*
         SPACE 2
         PRINT NOGEN
         SPACE
MSGVOL   MSG   'REQUIRED VOLUME NOT MOUNTED'
MSGNOCAT MSG   'DATA SET IS NOT CATALOGED'
MSGINDEX MSG   'INCONSISTENT CATALOG STRUCTURE'
MSGCATFL MSG   'SYSTEM CATALOG IS FULL'
MSGCATER MSG   ' CATALOG MANAGEMENT ERROR CODE '
MSGSYNTX MSG   ' INVALID SYNTAX IN DATA SET NAME'
MSGDSFMT MSG   ' A DATA SET NAME ALREADY EXISTS AT A LOWER LEVEL'
MSGDSN   MSG   ' AN INDEX OF THE DATA SET NAME EXCEEDS 8 CHARACTERS'
MSG20C   MSG   'DATA SET IN USE, TRY AGAIN LATER'
MSG20CX  MSG   ' DATA SET IS BEING USED BY ANOTHER USER OR A BACKGROUND$
                JOB'
MSG210   EQU   MSG20C
MSG210X  EQU   MSG20CX
MSG214   MSG   'VOLUME NOT AVAILABLE'
MSG214X  MSG   ' NO UNIT AVAILABLE TO MOUNT VOLUME CONTAINING DATA SET'
MSG218   EQU   MSG214
MSG218X  EQU   MSG214X
MSG21C   EQU   MSG214
MSG21CX  MSG   ' INCORRECT UNIT INFORMATION IN USER ATTRIBUTES'
MSG334   MSG   'NAME EXCEEDS 44 CHARACTERS'
MSG41CX  MSG   ' DATA SET IS ON MORE THAN ONE VOLUME'
MSG4704  MSG   'DUPLICATE DATA SET ON VOLUME'
MSG4704X MSG   ' AN UNCATLOGED DATA SET BY THIS NAME ALREADY EXISTS'
MSG4714  MSG   'NO SPACE FOR DATA SET'
MSG4714X MSG   ' DELETE ANY DATA SETS NO LONGER REQUIRED'
MSGDYNER MSG   ' DYNAMIC ALLOCATION ERROR CODE '
MSGFULL  MSG   'TOO MANY DATA SETS'
MSGFULL1 MSG   ' FREE DATA SETS NO LONGER REQUIRED'
MSGDSNPO MSG   ' LIBRARY DATA SETS MUST BE PARTITIONED'
MSGNOTPO MSG   ' NOT MACRO LIBRARY'
MSGCMDER MSG   ' COMMAND SYSTEM ERROR'
MSGLIBNM MSG   ' LIBRARY NAME INCORRECTLY SPECIFIED'
MSGLIBS  MSG   ' MACRO LIBRARY LIMIT EXCEEDED'
MSG#LIBS MSG   ' A MAXIMUM OF 20 LIBRARIES CAN BE SPECIFIED'
MSGSPACE MSG   ' SPACE VALUE NOT OF FORM NNNK'
MSGINPUT MSG   ' TOO MANY INPUT DATA SETS SPECIFIED'
MSGINPT# MSG   ' A MAXIMUM OF 5 INPUT DATA SETS CAN BE ACCEPTED'
MSGLINES MSG   ' VALID LINE COUNT RANGES FROM 1 TO 99'
MSGUTSPC MSG   ' UTILITY SPACE ALLOCATION INVALID'
MSGCATIN MSG   ' COMMAND FAILURE CONCATENATING INPUT DATA SETS'
MSGCATLB MSG   ' COMMAND FAILURE CONCATENATING LIBRARY DATA SETS'
MSGSOUT  MSG   ' SYSOUT FILE'
MSG4     MSG   'SYSTEM ERROR'
MSGQUALS MSG   ' VALID QUALIFIERS ARE .ASM AND .MACLIB'
MSGQUAL1 DC    C' LIBRARY DATA SET '
MSGQUAL2 DC    C' NOT PROPERLY QUALIFIED NAME'
MSGMBR   DC    C' MEMBER '
MSGMBR1  DC    C' DOES NOT EXIST IN DATA SET '
MSG1     DC    C' DATA SET '
MSG2     DC    C' UTILITY DATA SET'
MSG3     DC    C' NOT ALLOCATED, '
MSGMEMBR DC    C' TEMPNAME ASSUMED AS MEMBER NAME FOR DATA SET '
TEMPNAME EQU   MSGMEMBR+1
MSGIGNOR DC    C' MEMBER NAME IGNORED FOR MACRO LIBRARY DATA SET'
MSGPARSE DC    C' PARSE ERROR CODE '
         EJECT
*
*        DYNAMIC WORK AREA
*
         SPACE 3
WORKAREA DSECT
MAINSAVE DS    18A
         SPACE
VALSAVE  DS    18A
         SPACE
PARSELST DS    5A             AREA FOR PARSE PARAMETER LIST
         SPACE
STAEREGS DS    16A
STAESAVE DS    18A
R14SAVE  DS    A
         SPACE
R14LINK  DS    A
         SPACE
BASES    DS    3A             PROGRAM BASE ADDRESSES
         SPACE
ADDRUPT  DS    A
ADDRECT  DS    A
ADDRPSCB DS    A
ADDRCBUF DS    A
         SPACE
ADDRDAIR DS    A              ADDR OF IKJDAIR
ADDRPUTL DS    A              ADDR OF IKJPUTL
         SPACE
ADDRANSR DS    A
         SPACE
DAIRCODE DS    F
         SPACE 2
ATTNECB  DS    F
         SPACE
PARMLIST DS    7A
         SPACE 2
DOUBLE   DS    D
         SPACE
STAEPARM STAE  0,CT,MF=L
         SPACE
FLAGS    DS    XL2            GENERAL STATUS FLAGS
*        FLAG BYTE 1
FCCATINP EQU   X'80'          INPUT DATA SETS CONCATENATED
FCCATLIB EQU   X'40'          LIBRARY DATA SETS CONCATENATED
FPRTERM  EQU   X'20'          SYSPRINT TO TERMINAL
FQUAL    EQU   X'10'          QUALIFY DATA SET NAME
FUTSPACE EQU   X'08'
FCATLIB  EQU   X'04'
FCATINP  EQU   X'02'
FSYSMAC  EQU   X'01'
*        FLAG BYTE 2
FSYSOUT  EQU   X'80'          SYSPRINT FILE IS TO SYSOUT
         SPACE 3
DSNLEN   DS    H
DSNAME   DS    CL44
         SPACE
BASICLEN DS    H
BASICDSN DS    CL44
         SPACE
DSTYPEL  DS    X
DSTYPE   DS    CL8
         SPACE
MEMBER   DS    CL8
BASICMEM DS    CL8
         SPACE
PASSWORD DS    CL8
         SPACE 3
DAIRFLAG DS    XL2            DYNAMIC ALLOCATION INTERFACE FLAGS
*
*        FLAG BYTE 1
*
*           BIT 0 - NEW DATA SET
*           BIT 1 - OLD DATA SET
*           BIT 2 - SHR DATA SET
*           BIT 3 - MOD DATA SET
*           BIT 4 - DO NOT PREFIX USERID
*           BIT 5 - DATA SET CAN SPECIFY TERMINAL
*           BIT 6 - PROHIBIT RELEASE OF SPACE
*           BIT 7 - SYSOUT ALLOCATION REQUESTED
         SPACE
FNEW     EQU   X'80'
FOLD     EQU   X'40'
FSHR     EQU   X'20'
FMOD     EQU   X'10'
FNOUSER  EQU   X'08'
FTERM    EQU   X'04'
FNORLSE  EQU   X'02'
FSOUT    EQU   X'01'
*
*        FLAG BYTE 2
*
*           BIT 0 - UTILITY DATA SET
*           BIT 1 - LIBRARY DATA SET
*           BIT 2 - TEMPORARY DATA SET
*           BIT 3 - DUMMY DATA SET (DSN=NULLFILE)
*           BIT 4 - JFCB UPDATE TO BE DONE
*           BIT 5 -
*           BIT 6 -
*           BIT 7 -
*
FUTIL    EQU   X'80'
FLIB     EQU   X'40'
FTEMP    EQU   X'20'
FDUMMY   EQU   X'10'
FPATTERN EQU   X'08'
*        EQU   X'04'
*        EQU   X'02'
*        EQU   X'01'
         SPACE 3
DAIRPRI  DS    H
DAIRSEC  DS    H
DAIRDIRC DS    H
DAIRBLKL DS    H
DAIRCLS  DS    X
SYSOUTID DS    X
JOBID    DS    CL8
         SPACE 3
DAIRBLK  DS    25D            SPACE FOR DAIR PARAMETER LIST
LDAIRBLK EQU   *-DAIRBLK
         SPACE 3
MAXLIBS  EQU   15             SYSLIB DSNAME LIMIT
LIBDD#   DS    H
LIBDDNS  DS    (MAXLIBS)XL8
         DS    XL8            AREA FOR 'SYS1.MACLIB' DDNAME
         SPACE 3
MAXINPUT EQU   16             INPUT DSNAME LIMIT
INPUTDD# DS    H
INPUTDDN DS    (MAXINPUT)XL8
         SPACE 3
MAXQUAL  EQU   10
         DS    0F
DSQUAL   DS    (MAXQUAL)XL8
LDSQUAL  EQU   *-DSQUAL
         SPACE 3
DDLIST   DS    H
DDNAMES  DS    0XL8
         DS    XL8            RESERVED DD SLOT
         DS    XL8            RESERVED DD SLOT
         DS    XL8            RESERVED
SYSLIB   DS    XL8            SYSLIB DD SLOT
SYSIN    DS    XL8            SYSIN DD SLOT
SYSPRINT DS    XL8            SYSPRINT DD SLOT
SYSPUNCH DS    XL8            SYSPUNCH - NOT USED
SYSUT1   DS    XL8            SYSUT1 DD SLOT
SYSUT2   DS    XL8            SYSUT2 DD SLOT
SYSUT3   DS    XL8            SYSUT3 DD SLOT
SYSGO    DS    XL8            SYSGO  DD SLOT
SYSTERM  DS    XL8            SYSTERM DD SLOT
LDDNAMES EQU   *-DDNAMES      LENGTH OF DDNAME LIST
         SPACE 3
ASMXPARM DS    2A             PARAMETER LIST FOR THE ASSEMBLER
         SPACE 2
OPTNLEN  DS    H              LENGTH OF FOLLOWING OPTION LIST
OPTNAREA DS    CL160          AREA FOR ASSEMBLER OPTION LIST
         SPACE 3
UTILPRI  DS    H
UTILSEC  DS    H
UTILBLKL DS    H
SPACELEN DS    H
SPACE#   DS    CL8
UTILBUFF DS    C
LINECNT# DS    CL2
         SPACE 3
         DS    0F
MSGTEXT1 DS    XL124
MSGTEXT2 DS    XL124
         SPACE 3
PUTOLD1  DS    3F
PUTOLD2  DS    3F
         SPACE 3
DUMMYDCB DCB   DSORG=PS,MACRF=R,DEVD=DA,DDNAME=X
DCBDDNAM EQU   40
DCBEXLST EQU   36
         SPACE 2
ASMXRCDE DS    F
         SPACE
BLDLAREA DS    F
BLDLNAME DS    CL8,XL4
         SPACE 2
JFCB     DS    XL176
         ORG   JFCB+52
JFCBTSDM DS    X
         ORG   JFCB+72
JFCBMASK DS    XL8
         ORG   JFCB+100
JFCRECFM DS    X
         ORG   JFCB+102
JFCBLKSI DS    H
         ORG   JFCB+104
JFCLRECL DS    H
         ORG
         SPACE 3
         DS    0D
LENWORK  EQU   *-WORKAREA
         PRINT GEN
         EJECT
         IKJPPL
         EJECT
         IKJIOPL
         EJECT
         IKJPSCB
         EJECT
         IKJECT
         EJECT
         IKJCPPL
         EJECT
         IKJDAPL
         EJECT
         IKJDAP00
         EJECT
         IKJDAP04
         EJECT
         IKJDAP08
         EJECT
         IKJDAP0C
DA0CDDN  DS    XL8 START OF DDNAME LIST
         EJECT
         IKJDAP10
         EJECT
         IKJDAP14
         EJECT
         IKJDAP18
         EJECT
         IKJDAP1C
         EJECT
         IKJDAP24
         EJECT
         IKJDAP28
         EJECT
         IKJDAP2C
         EJECT
         IKJDAP30
         SPACE 5
         END
