DYNBLDL  TITLE 'DYNAMIC BLDL FRONT END FOR IGC018'
***********************************************************************
*                                                                     *
*        THIS CSECT IS A FRONT END FOR THE IBM SUPPLIED BLDL          *
*        MODULE (IGC018).  IT PROVIDES FOR A DYNAMIC BLDL LIST.       *
*                                                                     *
*        THE NUCLEUS MUST BE ALTERED IN ORDER FOR THE DYNAMIC         *
*        BLDL FUNCTION TO WORK.  THE NORMAL CSECT IGC018              *
*        MUST HAVE ITS CSECT NAME CHANGED TO IGC018A.                 *
*        THIS MODULE HAS A CSECT NAMED IGC018 AND EFFECTIVELY         *
*        TAKES THE PLACE OF THE NORMAL ENTRY TO BLDL.                 *
*                                                                     *
*        UPON FIRST ENTRY TO BLDL, THIS MODULE INSTALLS TWO           *
*        "HOOKS" INTO THE REAL BLDL MODULE.  A COMPARE IS             *
*        MADE TO INSURE THAT MAINTENANCE TO BLDL HAS NOT              *
*        INVALIDATED THE "HOOKS".  IF SO, THE HOOKS ARE NOT           *
*        INSTALLED, AND BLDL WORKS AS IT ALWAYS HAS.                  *
*        AFTER INSTALLING THE "HOOKS", CONTROL IS PASSED TO           *
*        THE BLDL MODULE.                                             *
*                                                                     *
*        THE "HOOKS" MAY BE FOUND IN THE BLDL MODULE AT LABELS        *
*        "READ" AND "DFOUND".  THEIR OFFSETS, ACTUAL CODE, AND        *
*        RETURN POINT ARE MAINTENANCE SENSITIVE.  THE SENSITIVE       *
*        INSTRUCTIONS IN THIS MODULE ARE FLAGGED WITH THE PTF         *
*        NUMBER OF THE LEVEL OF IGC018 THAT THEY CORRESPOND TO IN     *
*        COLUMNS 65-71.  THE CURRENT PTF LEVEL THAT THIS MODULE       *
*        CORRESPONDS TO IS NOTED BELOW.                               *
*                                                                     *
*        THE DYNAMIC BLDL FUNCTION CAN BE DISABLED BY ALTERING        *
*        THE BLDLSWIT BYTE TO X'00'.  THE ADDRESS OF THIS BYTE        *
*        IS CONTAINED IN THE WORD AT OFFSET X'24' IN THE MODULE.      *
*        IT CAN BE RE-ENABLED BY ALTERING THIS BYTE BACK TO A         *
*        NON-ZERO VALUE.  THIS CAN BE DONE WITH THE EXTERNAL          *
*        PROGRAM BLDLSWIT.                                            *
*                                                                     *
*        THE DYNAMIC BLDL VECTOR TABLE IS POINTED TO BY THE WORD      *
*        AT OFFSET X'28' INTO THIS MODULE.  THE DYNAMIC BLDL          *
*        TABLE CAN BE DISPLAYED USING THE EXTERNAL PROGRAM BLDLSTAT.  *
*                                                                     *
*        THIS VERSION OF DYNAMIC BLDL IS ESSENTIALLY THE DYNAMIC      *
*        BLDL ON THE SHARE CBT MODS TAPE.  IT HAS BEEN CHANGED TO     *
*        REDUCE ITS SYSTEM AND EXTERNAL PROGAM DEPENDANCIES.          *
*                                                                     *
*        TO INSTALL THIS MODIFICATION,  THE CSECT NAME OF             *
*        BLDL, IGC018, SHOULD BE CHANGED TO IGC018A.  THIS            *
*        MODULE MUST BE ADDED TO THE NUCLEUS.  THE SYSGEN MACRO       *
*        SGIEC3FB, WHICH INCLUDES THE IGC018 MODULE FROM AOSD0        *
*        SHOULD BE CHANGED TO PERFORM THE INCLUDE FOR THIS MODULE     *
*        AND THE CHANGE TO IGC018.                                    *
*                                                                     *
*        SPECIAL CODING CONVENTION                                    *
*        *************************                                    *
*        ANY REFERENCE TO REGISTERS THAT CONTAIN VALUES               *
*        ESTABLISHED BY THE REAL BLDL MODULE ARE WITH EQUATES         *
*        X0-X15, RATHER THAN R0-R15.                                  *
*                                                                     *
*        CURRENT PTF MAINTENANCE LEVEL                                *
*        *****************************                                *
*        UPDATED:  20MAR81, WILLIAM SMITH, MEMOREX CORPORATION        *
*           . UZ32516 - PTF LEVEL 8009 (27AUG80/PTF FICHE CARD #193)  *
*           . SYSTEM PRODUCT RELEASE 1                                *
*           . ADDITIONAL DOCUMENTATION REGARDING INSTALLATION         *
*             PROCEDURES                                              *
*           . THE ADDITION OF &SYSDATE & &SYSTIME DC'S CAUSE THE      *
*             SWITCH & TABLE DISPLACEMENTS TO CHANGE.  THE DISPLAY    *
*             AND CONTROL PROGRAMS BLDLSTAT AND BLDLSWIT HAVE BEEN    *
*             ADJUSTED ACCORDINGLY.                                   *
*                                                                     *
***********************************************************************
*
         EJECT
***********************************************************************
*                                                                     *
*        BLDL ENTRY POINT                                             *
*        ----------------                                             *
*        BLDL IS ENTERED FROM THE SVC INTERRUPT HANDLER AT            *
*        ENTRY POINT IGC018.                                          *
*                                                                     *
*        THIS FIRST TIME THIS ENTRY IS MADE, THE "HOOKS" ARE          *
*        INSTALLED INTO THE BLDL MODULE.                              *
*                                                                     *
*        IGC018 IS ENTERED IN KEY ZERO.                               *
*                                                                     *
*        NOTE:  USING TRUE BASE IN REG 12                 WJS/13MAR81 *
*                                                                     *
***********************************************************************
*
DYNBLDL  CSECT
IGC018   DS    0H                  ENTRY POINT
         ENTRY IGC018              BLDL ENTRY POINT
         ENTRY DYNBLDL1            "READ" HOOK ENTRY POINT
         ENTRY DYNBLDL2            "DFOUND" HOOK ENTRY POINT
         USING DYNBLDL,R6          ENTRY BASE
ST01     B     ST02                BYPASS MODULE ID/VECTOR TABLE
*
MODULEID DC    CL8'DYNBLDL'        MODULE ID
MODULEDT DC    CL8'03-20-81'       MODULE DATE OF LAST UPDATE
MODULEAD DC    CL8'&SYSDATE'       MODULE DATE OF LAST ASSEMBLY
MODULEAT DC    CL8'&SYSTIME'       MODULE TIME OF LAST ASSEMBLY
MODULEVT DS    0F                  VECTOR OF INTERESTING ADDRESSES
         DC    A(BLDLSWIT)         ADDRESS OF ENABLE/DISABLE SWITCH
         DC    A(LINKTAB)          ADDRESS OF DYNAMIC BLDL TABLE
*
ST02     MVI   ST01+3,ST03-ST01    BYPASS INITIALIZATION IN THE FUTURE
*
         L     R12,IGC018AD        ADDR BLDL MODULE
         CLC   X'634'(12,R12),READ VERIFY BEFORE CHANGING       UZ32516
         BNE   ST03                INCORRECT  LEVEL
         CLC   X'6A0'(12,R12),DFOUND    VERIFY BEFORE CHANGING  UZ32516
         BNE   ST03                INCORRECT  LEVEL
         MVC   X'634'(12,R12),PATCH1  PRE EXCP TRAP LBL READ    UZ32516
         MVC   X'6A0'(12,R12),PATCH2  POST EXCP TRAP LBL DFOUND UZ32516
*
ST03     L     R6,IGC018AD         TRUE BLDL ADDR.
         BR    R6                  GO TO BLDL
         DROP  R6
*
         TITLE 'DYNAMIC BLDL "READ" HOOK'
***********************************************************************
*                                                                     *
*        BLDL IS ABOUT TO ISSUE AN EXCP.  THIS CODE WAS ENTERED       *
*        FROM THE "HOOK" PLACED AT LABEL "READ" IN THE REAL           *
*        BLDL MODULE.                                                 *
*                                                                     *
*        REGISTER 6 POINTS TO THE SVRB EXTENDED SAVE AREA.            *
*        REGISTER 7 POINTS TO MODULE NAME BEING BLDLED.               *
*        REGISTER 9 IS USED AS A BASE REGISTER.                       *
*        REGISTER 10 POINTS TO THE BLDL COUNT.                        *
*        REGISTER 12 IS THE BLDL MODULE BASE REGISTER.                *
*        REGISTER 13 POINTS TO THE BLDL WORK AREA.                    *
*                                                                     *
*        BYTE X'62' IN THE SVRB EXTENDED SAVE AREA IS USED BY         *
*        THIS MODULE TO CONTAIN FLAGS.                                *
*                                                                     *
*        THIS CODE IS ENTERED IN USER KEY, UNLESS THE REQUEST         *
*        IS FOR THE LINKLIB DCB.  IN THAT CASE, THE KEY IS ZERO.      *
*                                                                     *
***********************************************************************
*
DYNBLDL1 DS    0D
         USING *,R9
         CLI   BLDLSWIT,0          ARE WE ENABLED
         BE    RET1                RETURN IF WE AREN'T
*
         TM    X'61'(X6),X'A0'     Q.SYSTEM LINKLIB AND BLDL
         BNO   RET1                NO ,NOT INTERESTED
         TM    X'62'(X6),X'C0'     Q.FIRST TIME
         BNZ   RET1                NO ,LIST OR NTH CONCATENATION
         CLI   X'142'(X13),1       Q.CHECK LINKLIB
         BNE   RET1                NO ,PLAY SAFE
*
         CLC   0(2,X10),=H'1'      Q.MUTIPLE BLDL
         BNE   NOTOURS             YES,FLAG AS NOT OURS AND RETN
         TM    3(X7),X'40'         Q.NORMAL SORT OF MODULE NAME
         BNO   NOTOURS             NO ,FLAG AS NOT FOR US
*
NWB1COMM STM   X2,X7,80(X13)       SAVE WORKREGS IN BLDL SAVEAEA
         L     R0,0(X7)            1ST WORD OF MODULE NAME
         L     R5,4(X7)            2ND
         L     R4,LINKADDR         ADDR.LINKLIB LIBRARY TABLE
         USING TABHEAD,R4
*
RETRY1   LM    R1,R3,TABSTART      REGS FOR  'BXLE'
         USING ENTRY,R1
FINDMOD  C     R0,DATA             Q.1ST WORD MATCH
         BNE   BXLE                NO TRY NEXT ENTRY
         C     R5,DATA+4           Q.2ND WORD MATCH
         BE    MATCH               YES FOUND IT IN A SLOT
BXLE     BXLE  R1,R2,FINDMOD       NO ,TRY ALL THE SLOTS
*
         LA    R3,1                COUNT OF ONE
         AL    R3,MISSES           ADD OLD COUNT
         ST    R3,MISSES           STORE NEW COUNT
*
         OI    X'62'(X6),X'40'     FLAG SVRB AS NOT FOUND
         B     RESTORE1            EXIT
*
MATCH    LR    R3,R0               1ST WORD OF NAME
         X     R3,HEX40            SET TO 'LOCKED' FORMAT
SER1     CS    R0,R3,DATA          Q.SET LOCK FOR ENTRY
         BNE   RETRY1              NO ,LOST IT RE-LOOKUP
         C     R5,DATA+4           Q.CHECK REALLY OUR ENTRY
         BE    UPDATE1             YES ,USE IT
*
UNSERIA  OI    DATA+3,X'40'        NO ,LOST IT, RESET LOCK
         B     RETRY1              LOOKUP AGAIN
*
UPDATE1  LH    R3,RECENT           MAINTAIN
         LA    R3,1(,R3)           STATISTICS
         STH   R3,RECENT           ON SLOT USE
         SH    R2,=H'5'            CALC. OFFSET FOR CONCATENATION
         IC    R3,DATA(R2)         CONCAT. NO.
         STC   R3,X'141'(X13)      SAVE FOR 'BLDL'
         MVC   2(64,X13),DATA      MOVE PDS DATA TO WORKAREA
*
UNSERIB  OI    DATA+3,X'40'        RESET LOCK FOR SLOT
         OI    5(X13),X'40'        RESET NAME IN WORKAREA
         LA    R3,1                COUNT OF ONE
         AL    R3,HITS             ADD OLD COUNT
         ST    R3,HITS             STORE NEW COUNT
*
         LA    X8,2(,X13)          **BLDL** ADDR DATA IN WORKAREA
         LA    X14,31              **BLDL** SET MASK FOR CONCATN.
         B     RESTORE2            RESUME AFTER EXCP DONE IN BLDL
*
NOTOURS  OI    X'62'(X6),X'80'     FLAG AS NOT OURS
         B     RET1
*
         EJECT
RESTORE1 LM    X2,X7,80(X13)       RESTORE WORK REGISTERS
RET1     L     R9,X'74'(,X6)       RESTORE BASE REG
*
***********************************************************************
*                                                                     *
*        THIS CODE REPRESENTS THE CODE EXTRACTED FROM THE             *
*        BLDL MODULE AND OVERLAID WITH THE LINKAGE TO THIS            *
*        MODULE.                                                      *
*        NOTE:  USING BASE+2 IN REG 12                    WJS/13MAR81 *
*                                                                     *
***********************************************************************
*
READ     LA    X1,X'148'(,X13)     EXCP   IOSTDRO               UZ32516
         SVC   0                                                UZ32516
         TM    X'144'(X13),X'40'   TM  ECB,COMPLETE             UZ32516
         BO    X'64A'(,X12)        BO  BYWAIT                   UZ32516
         B     X'640'(,X12)        GO TO BLDL AT WAIT ECB=ECB   UZ32516
*
         DROP  R9
*
***********************************************************************
*                                                                     *
*        THIS CODE IS THE CODE THAT IS PLACED INTO THE BLDL           *
*        MODULE IN ORDER TO EFFECT LINKAGE TO THIS MODULE             *
*        AT ENTRY POINT DYNBLDL1.                                     *
*                                                                     *
***********************************************************************
*
         CNOP  0,4
PATCH1   BALR  X9,0                INSTANTANEOUS BASE
         L     X9,6(,X9)           LOAD ENTRY POINT
         BR    X9                  BRANCH TO ENTRYPOINT
ENTRY1   DC    A(DYNBLDL1)         ADDRESS OF ENTRY POINT
*
         TITLE 'DYNAMIC BLDL "DFOUND" HOOK'
***********************************************************************
*                                                                     *
*        BLDL HAS HAD A SUCCESSFUL SEARCH.  THIS CODE WAS ENTERED     *
*        FROM THE "HOOK" PLACED AT LABEL "DFOUND" IN THE REAL         *
*        BLDL MODULE.                                                 *
*                                                                     *
*        REGISTER 6 POINTS TO THE SVRB EXTENDED SAVE AREA.            *
*        REGISTER 8 POINTS TO THE BLDL DIRECTORY ENTRY.               *
*        REGISTER 9 IS USED AS A BASE REGISTER.                       *
*        REGISTER 12 IS THE BLDL MODULE BASE REGISTER.                *
*        REGISTER 13 POINTS TO THE BLDL WORK AREA.                    *
*                                                                     *
*        BYTE X'62' IN THE SVRB EXTENDED SAVE AREA IS USED BY         *
*        THIS MODULE TO CONTAIN FLAGS.                                *
*                                                                     *
***********************************************************************
*
DYNBLDL2 DS    0D
         USING *,R9
         CLI   BLDLSWIT,0          ARE WE ENABLED
         BE    RET2                RETURN IF WE AREN'T
*
         TM    X'62'(X6),X'40'     Q.DID WE SHOW INTEREST(NOMATCH)
         BNO   RET2                NO
         TM    X'61'(X6),X'A0'     Q.BLDL FOR MANAGED LIBRARY
         BNO   RET2                NO ,NO INTEREST
         CLI   X'142'(X13),1       Q.DOUBLE CHECK
         BNE   RET2                NO ,PLAY SAFE
*
SETSAVE  MVC   2(64,X13),0(X8)     PUT DATA TO WORKAREA START
         LA    X8,2(,X13)          TELL IGC018
         STM   X2,X7,80(X13)       WORK REGS
         L     R4,LINKADDR         ADDRESS OUR TABLE
         LA    R4,0(,R4)           DENOTE FIRST PASS
*
GETSLOT  L     R3,TABSLOTF         SCAN LIMIT ,LOW ADDR
         L     R2,TABSTART+4       ENTRY SIZE
         LCR   R2,R2               COMPLEMENT FOR   'BXH'
*
GETSLOTX L     R0,LASTSLOT         SCAN LIMIT ,HIGH ADDR
GETSLOTY SR    R5,R5               ZERO FOR    'CH'
         LR    R1,R0               INISH FOR
TESTSLOT CH    R5,RECENT           Q.SLOT AVAIL
         BE    MAYBE2              YES, PERHAPS
BXH      BXH   R1,R2,TESTSLOT      NO, TRY NEXT SLOT
*
         LTR   R4,R4               Q.IST OR 2ND PASS
         BP    SORTCNTL            1ST
         B     SORTDO              2ND
*
MAYBE2   L     R3,DATA             1ST WORD OF MODULE NAME
         LTR   R3,R3               Q.VIRGIN ENTRY
         BNZ   MAYBE2A             NO, CONTINUE
         LR    R5,R3               YES, SET UP VALUE TO GRAB IT
         BCTR  R5,0
         CS    R3,R5,DATA          Q.CAN WE GRAB IT
         BNE   GETSLOT             NO ,GET ANOTHER SLOT
         B     MAYBE2              YES , LOOP BACK TO USE IT
*
MAYBE2A  O     R3,HEX40            SETUP 'UNLOCKED' FORM
         LR    R5,R3               COPY
         X     R5,HEX40            'MANAGED' FORM
*
SER2     CS    R3,R5,DATA          Q.TRY TO MANAGE SLOT
         BE    MANAGED2            YES SUCCEEDED
         L     R3,TABSLOTF         NO ,FAILED , CONTINUE SEARCH
         SR    R5,R5               RESET REGS FIRST
         B     BXH                 TREAT AS NOT FOUND
*
MANAGED2 AR    R2,R1               ADDR. PREDECESSOR ENTRY
         C     R2,TABSLOTF         Q.IS THIS IN UPDATE AREA
         BL    OUTRANGE            NO ,SO DONT UPDATE POINTER
         CS    R0,R2,LASTSLOT      UPDATE SCAN LIMIT
*
OUTRANGE SR    R5,R5               NEW USER COUNT FORMAT
         CH    R5,RECENT           Q.CHECK WE REALLY HAVE SLOT
         BE    USESLOT             YES, USE IT
*
UNSER2A  OI    DATA+3,X'40'        NO, RELEASE 'UNLOCK' SLOT
         B     GETSLOT             TRY AGAIN
*
         EJECT
USESLOT  L     R5,=X'00010000'
         ST    R5,RECENT           SET NEW USER COUNT
         L     R3,TABSIZE          SIZE OF SLOT
         SH    R3,=H'5'            SUBTRACT HEADER
         IC    R2,X'141'(X13)      CONCAT. NO.
         LA    R5,DATA(R3)         ADDR. LOCN. TO SAVE IT
         SH    R3,=H'4'            DONT MOVE FIRST (LOCK) WORD
         EX    R3,DATAMOVE         MOVE DATA EXCEPT 1ST WORD
         STC   R2,0(,R5)           SAVE CONCAT. NO.
*
UNSER2B  MVC   DATA(4),0(X8)       1ST WORD OF NAME,RELEASE LOCK
         B     RESTORE2            EXIT
*
DATAMOVE MVC   DATA+4(*-*),4(X8)   MOVE TTR DATA TO OUR ENTRY
*
SORTCNTL ICM   R4,8,=X'FF'         SET R4 NEG. FOR 2ND PASS
         MVC   LASTSLOT,TABEND     RESET SCAN LIMIT
         B     GETSLOT             TRY AGAIN
*
SORTDO   LA    R3,0(,R4)           CLEAR TOP BYTE
         ICM   R4,8,=X'40'         SET FOR 'LOCK'    'CS'
         LA    R1,LINKADDR         POINT TO CTL WORD
*
SER3     CS    R3,R4,0(R1)         Q.OURS AND 'UNLOCKED'
         BNE   RESTORE2            NO, GIVE UP QUIETLY
*
         EJECT
         LH    R1,SORTS            MAINTAIN
         LA    R1,1(,R1)           TABLE SORT
         STH   R1,SORTS            STATISTICS
         LA    R7,X'40'            BIT PATTERN FOR LOCKING
*
SORTLOCK LM    R1,R3,TABSTART      LOCK UNLOCKED SLOTS TO US
SORTX    L     R5,DATA             PICKUP LOCK WORD
         LTR   R5,R5               Q.ENTRY A VIRGIN
         BZ    SORTFLGL            YES,ALREADY MANAGED FMT
*
         OR    R5,R7               ENSURE 'UNLOCKED' FORM
         LR    R6,R5               SAVE IT
         XR    R6,R7               SET 'LOCKED' FORM
         CS    R5,R6,DATA          Q.TRY TO LOCK SLOT
         BNE   LOCKBXLE            NO, TRY NEXT
*
SORTFLGL DS    0H
         OI    RECENT,X'80'        YES,SPECIAL FLAG FOR WE OWN
*
LOCKBXLE BXLE  R1,R2,SORTX         ENSURE ALL SLOTS TRIED FOR
*
         EJECT
         LH    R7,ENTRIES          NO. OF PAIRS IS NO. OF SLOTS-1
         LR    R6,R2               SIZE
         BCTR  R6,0                SIZE-1 FOR 'EX'
         L     R3,TABEND           LAST SLOT
*
OUTER    L     R1,TABSTART         SET START RANGE
         SR    R3,R2               DO 1 LESS PAIR EACH LOOP
*
INNER    L     R0,RECENT           COUNT -VE IF OURS
         C     R0,RECENT(R2)       Q.SHOULD WE SWAP
         BH    LOOPIN              NO, DO NOT
         LTR   R0,R0               Q.YES, IS IT 'LOCKED' TO US
         BNM   LOOPIN              NO, CAN NOT
*
         LA    R5,0(R2,R1)         YES,ADDR 2ND SLOT
         EX    R6,SWAP1            JUXTAPOSE
         EX    R6,SWAP2            OUT OF ORDER
         EX    R6,SWAP1            SLOTS
*
LOOPIN   BXLE  R1,R2,INNER         DO FOR ALL PAIRS IN SCAN
*
HOUSEKEP TM    RECENT,X'80'        Q.IS THIS OUR SLOT, AS FINISHED
         BNO   RESETUSE            NO, SKIP UNLOCK CODE
         NI    RECENT,X'7F'        YES ,REMOVE OURBIT
         OI    DATA+3,X'40'        RELEASE LOCK
*
RESETUSE LH    R0,TOTAL            PREV. COUNT
         AH    R0,RECENT           NEW COUNT
         ST    R0,RECENT           UPDATE PREV. ,ZEROISE RECENT
         LTR   R7,R7               Q.SPECIAL CASE ,TOP SLOT
         BE    SORTDONE            YES, SPECIAL HOUSEKEEPING ENTRY
         BCT   R7,OUTER            Q.NO ,CARRY ON SCANS IF ANY
         L     R1,TABSTART         NONE LEFT, RESET TO ENTRY
         B     HOUSEKEP            UPDATE 1ST ENTRY IN TABLE
*
SWAP1    XC    0(*-*,R5),0(R1)     *** EXECUTE ONLY ***
SWAP2    XC    0(*-*,R1),0(R5)     *** EXECUTE ONLY ***
*
SORTDONE MVC   LASTSLOT,TABEND     RESET SCAN LIMIT
*
LINKFREE MVI   LINKADDR,0          YES UNSERIALISE SORT WISE
         LA    R4,0(,R4)           DENOTE FIRST SCAN
*
TABFREE  B     GETSLOT             GO GET SLOT FOR OUR APPLICATION
*
         EJECT
RESTORE2 LM    X2,X7,80(X13)       WORKREGS
RET2     L     R9,X'74'(,X6)       RESTORE OUR BASE REGISTER
*
***********************************************************************
*                                                                     *
*        THIS CODE REPRESENTS THE CODE EXTRACTED FROM THE             *
*        BLDL MODULE AND OVERLAID WITH THE LINKAGE TO THIS            *
*        MODULE.                                                      *
*        NOTE:  USING BASE+2 IN REG 12                    WJS/13MAR81 *
*                                                                     *
***********************************************************************
*
DFOUND   MVC   8(3,X7),8(X8)       MVC   PDS2TTRP,PDS1TTRP      UZ32516
         IC    X4,11(,X8)          IC    RX,PDS1INDC            UZ32516
         NR    X4,X14              NR    RX,RZ                  UZ32516
         B     X'6AA'(,X12)        TO BLDL AT LA RY,PDS2USRD-   UZ32516
*
***********************************************************************
*                                                                     *
*        THIS CODE IS THE CODE THAT IS PLACED INTO THE BLDL           *
*        MODULE IN ORDER TO EFFECT LINKAGE TO THIS MODULE             *
*        AT ENTRY POINT DYNBLDL1.                                     *
*                                                                     *
***********************************************************************
*
         CNOP  0,4
PATCH2   BALR  X9,0                INSTANTANEOUS BASE
         L     X9,6(,X9)           LOAD ENTRY POINT
         BR    X9                  BRANCH TO ENTRYPOINT
ENTRY2   DC    A(DYNBLDL2)         ADDRESS OF ENTRY POINT
*
         DROP  R9
*
         TITLE 'DYNAMIC BLDL CONSTANTS AND EQUATES'
R0       EQU   0                   NORMAL
R1       EQU   1                   REGISTER
R2       EQU   2                   EQUATES
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
*
X0       EQU   0                   BLDL
X1       EQU   1                   MODULE
X2       EQU   2                   REGISTER
X3       EQU   3                   EQUATES
X4       EQU   4
X5       EQU   5
X6       EQU   6
X7       EQU   7
X8       EQU   8
X9       EQU   9
X10      EQU   10
X11      EQU   11
X12      EQU   12
X13      EQU   13
X14      EQU   14
X15      EQU   15
*
         EJECT
LINKADDR DC    A(LINKTAB)          ADDRESS OF BLDL LINK TABLE
*
IGC018AD DC    V(IGC018A)          REAL BLDL ENTRY POINT
*
HEX40    DC    X'00000040'         MASK
*
BLDLSWIT DC    X'FF'               DYNAMIC BLDL ENABLE/DISABLE
*
         LTORG
*
         TITLE 'DYNAMIC BLDL LINK TABLE'
ENT1     EQU   200                 TOTAL NUMBER OF ENTRIES
ENT1X    EQU   74                  FIXED PART(ENT1/2.71828)
*
LINKTAB  DS    0D
TABSTAT1 DC    A(START1)
TABSIZE1 DC    F'64'
TABEND1  DC    A(LASTENT1)
LASTSLT1 DC    A(LASTENT1)
TABSLOT1 DC    A(START1+ENT1X*64)
SORT1    DC    H'0'
ENTRIES1 DC    Y(ENT1)
HITS1    DC    F'0'
MISSES1  DC    F'0'
*
         DS    0D
START1   DC    ((ENT1-1)*64)X'00'
LASTENT1 DC    64X'00'
LINKEND  DS    0F
*
         TITLE 'DYNAMIC BLDL DSECTS'
TABHEAD  DSECT
TABSTART DS    F
TABSIZE  DS    F
TABEND   DS    F
LASTSLOT DS    F
TABSLOTF DS    F
SORTS    DS    H
ENTRIES  DS    H
HITS     DS    F
MISSES   DS    F
         DS    0F
TABLENG  EQU   *-TABHEAD
*
ENTRY    DSECT
RECENT   DS    H
TOTAL    DS    H
DATA     DS    0F
*
         END
