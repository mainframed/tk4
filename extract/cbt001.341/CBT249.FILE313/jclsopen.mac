SYNXOPEN START
         ENTRY SYNWRITE
         ENTRY SYNCLOSE
         GBLB  &NODCBS
*
*                         QED SYNTAX INTERFACE PROGRAM
*
*                    WRITTEN BY JOHN A. NORDTVEDT
*                               DEPARTMENT EXOKF
*                               UNITED AIR LINES
*                               P.O. BOX 66100
*                               CHICAGO, ILL. 60666
*                               (312) 952-5410
*
*                               WRITTEN 12/15/76
*
*                    THIS MODULE IS LINKED INTO QED, AND DOES AN
*                    ATTACH OF THE SYNTAX COMMAND PROCESSOR WHEN
*                    JCL IS TO BE SYNTAX CHECKED.
*
*                    IN ADDITION TO THIS INTERFACE MODULE, THE QED
*                    SUPPLIED MODULE "SUBMIT" MUST BE MODIFIED AND
*                    INSTALLED WITH THE CSECT NAME OF "SYNTAX".  THE
*                    ONLY CHANGES REQUIRED ARE TO CHANGE ALL REFERENCES
*                    OF "SUBMIT" TO "SYNTAX", ALL REFERENCES OF
*                    "SUBOPEN" TO "SYNXOPEN", ALL REFERENCES OF
*                    "SUBWRITE" TO "SYNWRITE" AND ALL REFERENCES
*                    OF "SUBCLOSE" TO "SYNCLOSE".  THIS INSTALLATION
*                    OF THE SYNTAX INTERFACE IS VERY SIMULAR TO
*                    TO THE INSTALLATION OF A SUBMIT INTERFACE AS
*                    DOCUMENTED BY TUCC IN THE QED INSTALLATION
*                    MANUAL.
*
*                    THIS MODULE IS REENTERABLE.
*
*                    THE NAME SYNTAX MUST BE IN CSECT "COMMAND" IN
*                    ORDER FOR SYNTAX TO BE INVOKED.
*
*                    THE QED MACROS ARE REQUIRED TO ASSEMBLE THIS
*                    MODULE.
*
*                    RECORDS ARE PASSED TO SYNTAX BY WAITING UNTIL
*                    SYNTAX IS READY TO RECEIVE A RECORD, AND THEN
*                    POSTING SYNTAX TO PASS THE RECORD.   THE RECORD
*                    ADDRESS IS THE COMPLETION CODE FOR THE POST.
*                    A COMPLETION CODE OF 4 IS THE END OF FILE
*                    INDICATOR, AND A CODE OF 8 IS THE TERMINATE
*                    INDICATOR.
*
WORK1    EQU   3                            WORK REGISTER
WORK2    EQU   4                            WORK REGISTER
RETURN   EQU   6                            RETURN CODE
CSPLBASE EQU   7                            BASE FOR CSPL
CSOABASE EQU   8                            BASE FOR CSOA
ECB3PTR  EQU   9                            POINTER TO ECB3
SWABASE  EQU   10                           BASE FOR SWA
SUBWBASE EQU   11                           BASE FOR SUBWRK
BASE     EQU   12                           BASE FOR PROGRAM
SAVEREG  EQU   13                           POINTER TO SAVEAREA
         SAVE  (14,12),,SYNXOPEN...QED.SYNTAX.INTERFACE.PROGRAM
         LR    BASE,R15                     ESTABLISH BASE
         USING SYNXOPEN,BASE                    *
         LR    SUBWBASE,R1                  SAVE POINTER TO SUBWRK
         USING WRKSECT,SUBWBASE                 *
         GETMAIN R,LV=WLNGTH                GET AREA FOR WORK AREA
         ST    R1,8(SAVEREG)                SET UP SAVE AREA LINKAGE
         ST    SAVEREG,4(R1)                    *
         LR    SAVEREG,R1                       *
         ST    SAVEREG,WRKUSER              SAVE WORK AREA ADDRESS
         USING WORKAREA,SAVEREG                 *
         L     SWABASE,WRKSWA               GET POINTER TO SWA
         USING SWA,SWABASE                      *
         XC    ECB1(CLNGTH),ECB1            CLEAR MOST OF WORK AREA
         ST    BASE,BASESAVE                SAVE BASE ADDR FOR LATER
*                      BUILD PSEUDO CPPL AND OTHER BLOCKS
         L     WORK1,CPPLPTR                BUILD CPPL
         MVC   MYCPPL(16),0(WORK1)               *
         LA    WORK1,ECB1                        *
         ST    WORK1,MYCPPL+16                   *   STORE FIFTH WORD
         L     WORK1,=C'QEDS'                    *   LOAD CHECK WORD
         ST    WORK1,CHECKPTR                    *
         L     CSPLBASE,CMDSCNP             LOAD ADDRESS OF CSPL
         USING CSPL,CSPLBASE                     *
         L     CSOABASE,CSPLOA              LOAD ADDRESS OF CSOA
         USING CSOA,CSOABASE                     *
         CLI   CSOAFLG,CSOAVWP              ARE THERE OPERANDS?
         BNE   BLDCBUFF                          * NO, BUILD CMD BUFF
         L     WORK1,CSPLCBUF                    * YES, USE IT
         B     STBUFPT
BLDCBUFF MVC   MYCBUFF+4(L'TEXT),TEXT       BUILD COMMAND BUFFER
         LA    WORK1,L'TEXT+4                    *
         STH   WORK1,MYCBUFF                     *
         MVI   MYCBUFF+3,8                       *
         LA    WORK1,MYCBUFF                PLACE CBUFF ADDR IN CPPL
STBUFPT  ST    WORK1,MYCPPL                      *
         OI    WRKFLAG1,FLG1SEQX            OMIT NOSEQ OPTION
         LA    WORK1,ECB1                   BUILD ECB LIST
         LA    WORK2,ECB3                        *
         STM   WORK1,WORK2,ECBLIST               *
         OI    ECBLIST+4,X'80'                   *
*
         LA    R1,MYCPPL                    ATTACH SYNTAX COMMAND
         LA    ECB3PTR,ECB3                      *
         MVC   ATCHLIST,ATCHFORM                 *
         ATTACH  EP=SYNTAX,ECB=(ECB3PTR),SF=(E,ATCHLIST)
         LTR   R15,R15                           *  WAS ATTACH OK
         BNZ   FREEMAIN                          *    *  NO
         ST    R1,SUBTASK                        *  SAVE TCB ADDR
*
         L     SAVEREG,SAVEAREA+4
         RETURN  (14,12),,RC=(15)
*
*
SYNWRITE SAVE  (14,12),,SYNWRITE
         LA    RETURN,4                     INITIALIZE RETURN CODE
         LR    SUBWBASE,R1                  ESTABLISH LINKAGES
         L     SWABASE,WRKSWA                    *
         L     WORK1,WRKUSER                     *
         LTR   WORK1,WORK1                       *  IS SYNTAX OPENED
         BZ    EXIT-SYNWRITE(R15)                *  NO
         ST    SAVEREG,4(WORK1)                  *
         ST    WORK1,8(SAVEREG)
         LR    SAVEREG,WORK1                     *
         L     BASE,BASESAVE                     *   LOAD PROGRAM BASE
*
         WAIT  1,ECBLIST=ECBLIST            WAIT UNTIL SYNTAX IS READY
*                                           FOR READ
         TM    ECB3,X'40'                   DID SYNTAX END?
         BO    DETACH                            *     YES
         XC    ECB1,ECB1                    CLEAR ECB
         MVC   BUFFER,WRKRECD               MOVE RECORD TO MY CORE
*              THIS IS THE POINT TO DO ANY RECORD EDITING IF
*              REQUIRED IN THE FUTURE.
         LA    WORK1,BUFFER                 PASS RECORD POINTER IN ECB
         POST  ECB2,(WORK1)                 TELL SYNTAX THAT RECORD IS
*                                           READY
*
         L     SAVEREG,SAVEAREA+4
         RETURN  (14,12),,RC=0
*
*
SYNCLOSE SAVE  (14,12),,SYNCLOSE
         LA    RETURN,4                     INITIALIZE RETURN CODE
         LR    SUBWBASE,R1                  ESTABLISH LINKAGES
         L     SWABASE,WRKSWA                    *
         L     WORK1,WRKUSER                     *
         LTR   WORK1,WORK1                       *  IS SYNTAX OPENED
         BZ    EXIT-SYNCLOSE(R15)                *  NO
         ST    SAVEREG,4(WORK1)                  *
         ST    WORK1,8(SAVEREG)
         LR    SAVEREG,WORK1                     *
         L     BASE,BASESAVE                     *   LOAD PROGRAM BASE
*
         WAIT  1,ECBLIST=ECBLIST            WAIT UNTIL SYNTAX IS READY
*                                           FOR READ
         TM    ECB3,X'40'                   DID SYNTAX END?
         BO    DETACH                            *     YES
CLEARECB XC    ECB1,ECB1                    CLEAR ECB1
         LA    WORK1,4                      SET CODE FOR END OF FILE
         TM    WRKFLAG1,FLG1ATTN            IS ATTENTION REQUESTED
         BZ    NORMEND                            *   NO
         LA    WORK1,8                            *   YES
NORMEND  POST  ECB2,(WORK1)                 TELL SYNTAX TO END
*
         WAIT  1,ECBLIST=ECBLIST            NOW WAIT FOR IT TO END
         TM    ECB1,X'40'                   DID SYNTAX WANT MORE
         BO    CLEARECB                        *  YES, GIVE IT AN EOF
         LA    RETURN,0                     SET RETURN CODE TO OK
DETACH   DETACH SUBTASK
*
FREEMAIN XC    WRKUSER,WRKUSER              REMOVE POINTER TO GETMAIN
         LR    R1,SAVEREG                   GET RID OF WORK AREA
         L     SAVEREG,SAVEAREA+4                 *
         FREEMAIN  R,LV=WLNGTH,A=(1)              *
         LR    R15,RETURN                   SET RETURN CODE
EXIT     RETURN  (14,12),T,RC=(15)          AND EXIT
*
*
*
*
*                    CONSTANTS
TEXT     DC    C'SYNTAX  $'
ATCHFORM ATTACH EP=SYNTAX,SF=L               FORMAT FOR ATTACH
LATTACH  EQU   *-ATCHFORM                    LENGTH OF ATTACH FORMAT
*
*                    DUMMY CONTROL SECTIONS
WORKAREA DSECT
SAVEAREA DS    18F                       REGISTER SAVE AREA
BASESAVE DS    F                         SAVE AREA FOR BASE REGISTER
ECB1     DS    F                         USED TO INDICATE THAT SYNTAX
*                                        IS READY TO GET A RECORD.
*                                        POSTED BY SYNTAX, WAITED BY
*                                        QED INTERFACE PROGRAM
ECB2     DS    F                         USED TO INDICATE THAT A RECORD
*                                        HAS MOVED TO SYNTAX.
*                                        POSTED BY INTERFACE PROGRAM,
*                                        WAITED ON BY SYNTAX.
CHECKPTR DS    F                         VERIFICATION WORD
ECB3     DS    F                         USED BY OS TO TELL QED
*                                        INTERFACE PROGRAM THAT
*                                        ATTACHED PROGRAM HAS ENDED.
*                                        POSTED BY ATTACH, WAITED ON BY
*                                        INTERFACE PROGRAM.
SUBTASK  DS    F                         USED TO STORE THE ADDRESS OF
*                                        THE ATTACHED PROGRAMS TCB.
ATCHLIST DS    CL(LATTACH)               AREA FOR LIST FORM OF ATTACH
ECBLIST  DS    A(ECB1)                   ADDRESS OF ECB1
         DS    X'80'                     LIST END INDICATOR
         DS    AL3(ECB3)                 ADDRESS OF ECB3
MYCPPL   DS    5F                        PSEUDO CPPL
         DS    0F                        BUFFER ALLIGNMENT
BUFFER   DS    CL80                      RECORD BUFFER
MYCBUFF  DS    2H
         DS    CL(L'TEXT)
WLNGTH   EQU   *-WORKAREA                LENGTH OF WORK AREA
CLNGTH   EQU   *-ECB1                    LENGTH TO BE ZEROED
*
*
*                   MAPING MACROS
         IKJCSPL
         IKJCSOA
         SUBWRK
         COPY  DEFSWA
*
         END
