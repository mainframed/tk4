         PRINT OFF
         MACRO
         EQUATE
** GENERAL PURPOSE REGISTERS
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
** FLOATING POINT REGISTERS
FR0      EQU   0
FR2      EQU   2
FR4      EQU   4
FR6      EQU   6
         MEND
DMODRDVT CSECT
         ENTRY DMODWTVT
         USING DMODRDVT,R15
         SAVE  (14,12),,DMODRDVT
         MVI   24(R13),X'00'   INDICATE READ FUNCTION
         PRINT ON
         B     START
         DROP  R15
DMODWTVT SAVE  (14,12),,DMODWTVT
         MVI   24(R13),X'FF'   INDICATE WRITE FUNCTION
START    LR    R2,R13   SAVE REGISTER 13
         BALR  R12,0   ESTABLISH A BASE
         USING *,R12
         GETMAIN R,LV=LDSECT   GET WORK AREA
         ST    R13,4(R1)   LINK SAVE AREAS
         LR    R13,R1   A(DSECT)
         USING DSECT,R13
         L     R1,24(R2)   RESTORE REGISTER 1
         LM    R10,R11,0(R1)   LOAD PARAMETER ADDRESSES
*
*  R10 - A(VOLID)
*  R11 - A(148 BYTE AREA - 1ST 44 BYTES CONTAIN THE DSNAME)
*
         OC    0(148,R11),0(R11)   VERIFY ADDR BEFORE ENTERING KEY 0
*
*  MOVE PARTIALLY FILLED CONTROL BLOCKS TO DSECT
*
         MVC   IOB(LPATTERN),PATTERN
         XC    DEBPREFX,DEBPREFX  CLEAR THE DEB PREFIX
*
*  FINISH FILLING THEM IN
*
         LTR   R1,R1   TEST FOR READ OR WRITE FUNCTION
         BNM   AECB   IT IS THE READ FUNCTION
         OI    FLAGS,X'40'   INDICATE WRITE
AECB     LA    R1,ECB
         ST    R1,IOB+4
         LA    R1,CHANPROG
         ST    R1,IOB+16
         ST    R1,CHANPROG+8
         MVI   CHANPROG+8,TIC
         LA    R1,CCW3
         ST    R1,CCW4+8
         MVI   CCW4+8,TIC
         LA    R1,DCB
         ST    R1,IOB+20
         ST    R1,DEB+24
         MVI   DEB+24,X'0F'
         LA    R1,IOBSEEK+3
         ST    R1,CHANPROG
         MVI   CHANPROG,IDEQ
         ST    R11,CCW4
         MVI   CCW4,KEYEQ
         LA    R1,44(R11)
         ST    R1,CCW6
         MVI   CCW6,RDD
         LA    R1,COUNT
         ST    R1,CCW3
         MVI   CCW3,RDC   READ COUNT
         TM    FLAGS,X'40'   TEST FOR READ OR WRITE
         BZ    CDEB   READ
         MVI   CCW6,WRTD   WRITE DATA ONLY
CDEB     LA    R1,DEB
         ST    R1,DCBDEBAD   STORE A(DEB)
         MVI   DEB+28,X'04'   INDICATE DASD
*
*  FIND THE UCB
*
FDUCB    L     R1,16   A(CVT)
         L     R1,40(R1)   A(UCB LOOKUP TABLE)
LOOP1    LH    R15,0(R1)   GET A UCB ADDR
         N     R15,=A(X'FFFF')   16-BIT ADDRESSING               P.H.H.
         BZ    CONT   THIS IS A UCB 'HOLE'                       P.H.H.
         CL    R15,=A(X'FFFF')   TEST                            P.H.H.
         BE    NOTFOUND   VOLUME IS NOT MOUNTED                  P.H.H.
         TM    18(R15),X'20'   CHECK FOR DASD
         BZ    CONT   NOT DASD
         CLC   0(6,R10),28(R15)   CHECK FOR REQUESTED VOLUME
         BNE   CONT   TRY NEXT UCB
         STH   R15,DEB+34   STORE A(UCB)
         MVC   TTR(3),24(R15)   MOVE RELATIVE VTOC ADDR          P.H.H.
         B     CONVERT
CONT     LA    R1,2(R1)   INCREMENT TO NEXT UCB
         B     LOOP1
NOTFOUND MVI   RC,4   SET RETURN CODE
         B     RETURN
*
*  CONVERT TTR FOUND IN UCB TO CCHHR - A(VTOC)
*
CONVERT  L     R1,16   LOAD A(CVT)
         L     R15,28(R1)   A(CONVERT ROUTINE)
         LA    R2,IOBSEEK   LOAD AREA FOR VTOC ADDRESS
         LA    R1,DEB
         L     R0,TTR      CURRENT A(VTOC)
         STM   R14,R12,12(R13)   CONVERT ROUTINE SCREWS UP SOME REG.
         LR    R3,R13   INCLUDING R13
         BALR  R14,R15   BRANCH TO CONVERT ROUTINE
         LR    R13,R3   RESTORE R13
         LM    R14,R12,12(R13)   RESTORE REST OF THE REGISTERS
*
*  ENTER KEY ZERO
*
         L     R3,16   A(CVT)
         L     R1,0(R3)   A(TCB DOUBLEWORD)
         L     R1,4(R1)   A(TCB)
         OC    DEB+24(1),28(R1)    MOVE TCB KEY
         MVC   DEB+29(3),21(R3)   A(SYSTEM'S AVT)
         MODESET KEY=ZERO                                        P.H.H.
*                                                                P.H.H.
*
*  SEARCH FOR CORRECT DSCB
*
EXCHP    EXCP  IOB   GET IT
         WAIT  ECB=ECB
         CLI   ECB,X'7F'   CHECK FOR NORMAL COMPLETION
         BE    RETURN
         MVI   RC,8
         CLI   CSW+4,X'0C'   CHECK FOR SEVERE ERROR
         BE    RETURN   NONE FOUND
         MVI   RC,12   ERROR IN READING VTOC
*
*  RETURN
*
RETURN   DS    0H                                                P.H.H.
         MODESET KEY=NZERO                                       P.H.H.
*                                                                P.H.H.
         XC    140(8,R11),140(R11)
         MVC   143(5,R11),COUNT   ADDRESS OF DSCB
         XR    R15,R15
         IC    R15,RC
         LR    R2,R13   SAVE DSECT ADDRESS
         L     R13,4(R13)   LOAD A(HIGHER SAVE AREA)
         ST    R15,16(R13)   STORE REGISTER 15
         FREEMAIN R,LV=LDSECT,A=(R2)
         RETURN (14,12),T
         EQUATE
IDEQ     EQU   X'31'   SEARCH ID EQUAL
TIC      EQU   X'08'   TRANSFER IN CHANNEL
RDC      EQU   X'92'   READ COUNT
RDD      EQU   X'86'   READ DATA
KEYEQ    EQU   X'A9'   SEARCH KEY EQUAL
WRTD     EQU   X'05'   WRITE DATA
*
*  THE FOLLOWING IS THE PATTERN FOR THE IOB, CCW'S, DEB, DCB, ETC.
*
         DS    0D
PATTERN  EQU   *
*  IOB
         DC    X'42000000'
         DC    11F'0'
         CCW   0,0,X'40',5
         CCW   0,0,X'40',1
         CCW   0,0,X'40',8
         CCW   0,0,X'40',44
         CCW   0,0,X'40',1
         CCW   0,0,0,96
         DC    8F'0'
         DC    X'01',AL3(0)
         DC    2F'0'
         DC    X'04',AL3(0)
         DC    X'C0',AL3(0)
         DC    F'0'
         DC    H'0',H'-1'
         DC    H'-1',X'7FFF'
         DC    4F'0'                                             P.H.H.
         DC    X'0000'                                           P.H.H.
*   DCB
         DC    6F'0'
         DC    X'0000'
         DC    X'2000'
         DC    6F'0'
LPATTERN EQU   *-PATTERN
         LTORG ,                                                 P.H.H.
         EJECT
DSECT    DSECT
SAVEAREA DS    18F
         DS    0D
*
IOB      DC    X'42000000'
         DC    A(ECB)
CSW      DC    2F'0'
         DC    A(CHANPROG)
         DC    A(DCB)
         DC    2F'0'
IOBSEEK  DC    2F'0'
*
COUNT    DC    2F'0'
*
CHANPROG CCW   IDEQ,IOBSEEK+3,X'40',5   SEARCH ID =
         CCW   TIC,*-8,X'40',1   TRY AGAIN IF NOT =
CCW3     CCW   RDC,0,X'40',8
CCW4     CCW   KEYEQ,0,X'40',44
         CCW   TIC,*-16,X'40',1
CCW6     CCW   RDD,0,0,96
*
DEBPREFX DC    4F'0'          DEB PREFIX
DEB      DC    4F'0'
         DC    X'01',AL3(0)   INDICATE 1 EXTENT
         DC    F'0'
         DC    X'0F',AL3(DCB)   INSERT PROTECT KEY LATER
         DC    X'04',AL3(0)   DASD / A(I/O APPENDAGE TABLE)
         DC    X'C0',AL3(0)   FILE MASK / A(UCB)
         DC    F'0'   BIN NO. / CYL START ADDR
         DC    H'0',H'-1'   TRK START ADDR / CYL END ADDR
         DC    H'-1',X'7FFF'   TRK END ADDR / TRKS IN THIS EXTENT
*
*
ECB      DC    F'0'
*
ENDVTOC  DC    XL8'00'   A(LAST FMT 1)
TTR      DC    F'0'
RC       DC    X'00'   RETURN CODE
*                    0  - COMPLETED TASK OK
*                    4  - VOLUME DOES NOT EXIST OR IS NOT MOUNTED
*                    8  - DATA SET NOT FOUND
*                    12 - ERROR ENCOUNTERED WHILE READING VTOC
FLAGS    DC    X'00'
*                    X'40' = DMODWTVT
DCB      DC    6F'0'
         DC    X'0000'
DCBDSORG DC    X'2000'   DIRECT DATA SET (FOR SVC 57 ONLY)
         DC    4F'0'
DCBDEBAD DC    A(DEB)
         DC    F'0'
LDSECT   EQU   *-DSECT
         END
