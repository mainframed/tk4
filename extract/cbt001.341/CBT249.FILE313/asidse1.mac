ASID TITLE 'ASID COMMAND PROCESSOR - DISPLAY ACTIVE ADDRESS SPACES'
         MACRO
         REGS
         LCLA  &R
.R       AIF   (&R EQ 16).END
R&R      EQU   &R
&R       SETA  &R+1
         AGO   .R
.END     MEND
 SPACE 4
ASID    CSECT
*
*   ASID WAS WRITTEN BY
*                             R P WENZEL
*                             OPTIMUM SYSTEMS INCORPORATED
*                             5615 FISHERS LANE
*                             ROCKVILLE, MARYLAND 20852
*                             (301) 468-1000 X232
*                             JUNE 2, 1976.
*
*   WITH MODIFICATIONS BY
*                             J R PASEUR
*                             OPTIMUM SYSTEMS INCORPORATED
*
*   MORE MODIFICATIONS BY
*                             R P WENZEL
*                             U S POSTAL SERVICE
*                             850 CHERRY AVE.
*                             SAN BRUNO, CALIFORNIA 94097
*                             (415) 876-9142
*                             FEBRUARY 1977.
*   MORE MODIFICATIONS BY
*                             R P WENZEL
*                             MEMOREX CORPORATION
*                             SAN TOMAS AT CENTRAL EXP.
*                             SANTA CLARA, CALIF. 95052
*                             (408) 987-0952
*                             APRIL 1979.
 EJECT
*)F FUNCTION -
*  THE ASID COMMAND DISPLAYS INFORMATION ON THE ADDRESS SPACES.
*)X SYNTAX -
*         ASID    'ASID#'/*  STC/JOBS/TS/ALL HOLES GROUP('N1')
*                 PERIOD('N2') DOMAIN('N3') IN/OUT/BOTH
*  REQUIRED - NONE
*  DEFAULTS - ASID ALL,BOTH
*  ALIAS    - AS
*  NOTE     - ASID OUTPUT HAS THE FOLLOWING FORMAT :
*ID  DP JOB  STEP  FLAGS CPUTIME REAL WORK  G/P/D  SRC SC SERV TRC SERV
*WHERE
*        ID - ASID NUMBER
*        DP - DISPATCHING PRIORITY
*       JOB - JOBNAME
*      STEP - STEPNAME
*     FLAGS - XXXYY
*       XXX - APG - AUTOMATIC-PRIORITY-GROUP APPLIES
*             AXS - AUX SHORTAGE FORCED SWAP
*             ENQ - TEMPORARILY NON-SWAPPABLE DUE TO ENQ
*             GOB - CURRENTLY CHANGING STATUS
*             GOI - IN PROCESS OF BEING SWAPPED IN
*             GOO - IN PROCESS OF BEING SWAPPED OUT
*             IN  - IN CORE, SWAPPED IN (DEFAULT IF NONE OF THE BELOW)
*             LSW - LOGICALLY SWAPPED
*             NSW - NON-SWAPPABLE
*             OUT - SWAPPED OUT
*             PVL - PRIVILEDGED (NON-SWAPPABLE EXCEPT FOR LONG WAIT)
*             RPG - RPGNS ARE PRESENT
*        YY - CP  - SIGINIFICANT CPU USER (SET BY IRARMCPM)
*             LW  - EXPLICIT LONG WAIT
*             MW  - LONG WAIT STATUS DETECTED BY MSO (MS6)
*             NW  - NON-SWAPPABLE WAIT
*             OW  - OUTPUT TERMINAL WAIT
*             TW  - TERMINAL WAIT
*   CPUTIME - STEP CPU TIME IN HOURS:MINUTES:SECONDS
*      REAL - AMOUNT OF REAL CORE AT LAST PAGE-IN
*      WORK - WORKING SET SIZE AT LAST SWAPIN
*     G/P/D - PERFORMANCE GROUP/PERFORMANCE GROUP PERIOD/DOMAIN
*       SRC - SWAP OUT REASON CODES
*             ASS - AUXILIARY STORAGE SHORTAGE
*             ERV - EXCHANGE OF RECOMMENDATION VALUE
*              DW - DETECTED WAIT
*              EE - ENQ EXCHANGE
*             ITW - INPUT TERMINAL WAIT
*              LW - LONGWAIT
*             OTW - OUTPUT TERMINAL WAIT
*              RS - REQUESTED SWAP
*             RSS - REAL PAGEABLE STORAGE SHORTAGE
*               U - UNILATERAL
*        SC - NUMBER OF SWAPS FOR CURRENT TRANSACTION
*      SERV - SERVICE UNITS ACCUMALATED FOR CURRENT TRANSACTION
*       TRC - NUMBER OF TRANSACTIONS DURING SESSION
*      SERV - SERVICE UNITS ACCUMALATED DURING SESSION
*)O OPERANDS -
*  'ASID#'      - ADDRESS SPACE IDENTIFICATION NUMBER.  AN ASTERISK (*)
*                 INDICATES CURRENT TSO USER.
*))STC          - DISPLAY STARTED OR SYSTEM TASKS.
*))JOBS         - DISPLAY JOBS ON JES INITIATORS.
*))TS           - DISPLAY TSO USERS.
*))ALL          - PERFORM SYSTEM, INITIATOR AND TSO FUNCTIONS.
*))HOLES        - DISPLAY ASIDS WITHOUT JOBNAMES.
*))GROUP('N1')  - DISPLAY ASIDS IN A PARTICULAR PERFORMANCE GROUP.
*        'N1'   - PERFORMANCE GROUP NUMBER FROM 0 TO 99.
*))PERIOD('N2') - DISPLAY ASIDS IN A PARTICULAR PERIOD.
*         'N2'  - PERIOD RANGES FROM 0 TO 9.
*))DOMAIN('N3') - DISPLAY ASIDS IN A PARTICULAR DOMAIN.
*         'N3'  - DOMAIN RANGES FROM 0 TO 99.
*))IN           - DISPLAY ASIDS IN CORE.
*))OUT          - DISPLAY ASIDS OUT OF CORE.
*))BOTH         - DISPLAY ASIDS BOTH IN AND OUT OF CORE.
 EJECT
ASID     CSECT
         REGS
         SAVE  (14,12)
         LR    R12,R15                    SET UP PROGRAM BASE
         USING ASID,R12
         USING ASCB,R5
*
         BAL   R14,BEGIN
*
         B     PRSE
*
RETURN   LR    R1,R13                   DYNAMIC AREA ADDRESS IN R1
         LA    R0,LDYNAMIC              SIZE OF AREA
         L     R13,4(R13)               PREVIOUS SAVE AREA
         LA    R1,0(R1)                 CLEAR TOP BYTE
         SVC   10                       FREEMAIN
         LM    R14,R12,12(R13)
         SR    R15,R15
         BR    R14
 EJECT
*  SUBROUTINE TO GET READY SET AND GO
*
BEGIN    LR    R10,R1        SAVE R1
         GETMAIN R,LV=LDYNAMIC          GET CORE
         LR    R11,R1
         USING WORKAREA,R11             SET UP ADDRESSABILITY
         LA    R9,SAVEAREA              CHAIN
         ST    R13,SAVEAREA+4             SAVE
         ST    R9,8(R13)                    AREAS
         LR    R13,R9
         MVI   LINE,C' '      BLANK LINE
         MVC   LINE+1(79),LINE
         MVC   CMPRGRP(2),=CL2'  '
         MVI   CMPRPRD,C' '
         MVC   CMPRDMN(2),=CL2'  '
         MVI   ASIDFLAG,OFF   BLANK FLAG
         MVI   SWGRP,OFF      BLANK SWITCH
         MVI   SWPRD,OFF      BLANK SWITCH
         MVI   SWDMN,OFF      BLANK SWITCH
         L     R2,16          CVT ->
         L     R2,556(R2)     ASVT ->
         LA    R2,516(R2)     ADDR OF ASVTMAXU
         L     R3,0(R2)       ASVTMAXU
         ST    R3,ASCBMAX     SAVE MAX ASCB'S
         LA    R2,8(R2)       ADDR OF ASVTENTY
         ST    R2,ASCBONE     FIRST ASCB
         BR    R14
 EJECT
*  SUBROUTINE TO FORMAT ASID NUMBER
*             DISPATCHING PRIORITY
*             OUCB STATUS FLAGS
*             STEP TIME
*             AMOUNT OF REAL STORAGE
*             CORE AT LAST SWAP IN
*             PERFORMANCE GROUP AND PERIOD
*
COMN     CVD   R3,WORK        CONVERT TO DECIMAL
         MVC   CHAR,EDMSK1    MOVE EDIT MASK TO CHAR
         ED    CHAR,WORK+4    EDIT TO EBCDIC
         MVC   LINEASID,CHAR+5 MOVE THREE CHARS TO LINE
         USING OUCB,R7
         L     R7,ASCBOUCB
COMNFRST SR    R8,R8          CLEAR R8
         IC    R8,OUCBNDP     NEW ASCB DISPATCHING PRIORITY
         SRL   R8,4           LEFT CHAR
         AH    R8,=H'240'     ADD X'F0'
         CH    R8,=H'249'     LESS THAN X'F9'
         BH    COMNFST1       NO
         STC   R8,LINEDPRT    SAVE CHAR
         B     COMNSCND       RETURN
COMNFST1 SH    R8,=H'57'      SUB X'39'
         STC   R8,LINEDPRT    SAVE CHAR
COMNSCND SR    R8,R8          CLEAR R8
         IC    R8,ASCBDP      DPRTY
         LA    R9,240         X'F0'
         OR    R8,R9          AND REGS.
         CH    R8,=H'249'     LESS THAN X'F9'
         BH    COMSCND1       NO
         STC   R8,LINEDPRT+1  SAVE CHAR
         B     COMN1          CONTINUE
COMSCND1 SH    R8,=H'57'      SUB X'39'
         STC   R8,LINEDPRT+1  SAVE CHAR
 EJECT
COMN1    MVC   LINESTAT,=C'FAIL '  DEFAULT STATUS - FAILED
         TM    ASCBDSP1,ASCBFAIL   TEST FOR FAILED ADDRSPC
         BO    COMN3               BR IF ADDRESS SPACE DEAD
         MVC   LINESTAT,=C'IN   '  DEFAULT - WLM ALGORITHM IN EFFECT
         LA    R8,COMNMVE1    MOVE STATEMENT
TESTOUT  LA    R9,=C'LSW'          LOGICALLY SWAPPED
         TM    OUCBQFL,OUCBLSW
         BOR   R8
         LA    R9,=C'OUT'          SWAPPED OUT
         TM    ASCBRCTF,ASCBOUT    TEST ASCB FOR THIS
         BOR   R8
         LA    R9,=C'ENQ'          NONSWAPPABLE DUE TO ENQ
         TM    OUCBSFL,OUCBENQ
         BOR   R8
         LA    R9,=C'NSW'          NON-SWAPPABLE
         TM    OUCBSFL,OUCBNSW
         BOR   R8
         LA    R9,=C'PVL'          PRIVELEGED STATUS
         TM    OUCBSFL,OUCBPVL
         BOR   R8
         LA    R9,=C'AXS'          AUX SHORTAGE FORCED SWAP
         TM    OUCBYFL,OUCBAXS
         BOR   R8
         LA    R9,=C'GOO'          GOING OUT
         TM    OUCBQFL,OUCBGOO
         BOR   R8
         LA    R9,=C'GOI'          GOING IN
         TM    OUCBQFL,OUCBGOI
         BOR   R8
         LA    R9,=C'GOB'          CHANGING STATUS
         TM    OUCBQFL,OUCBGOB
         BOR   R8
         LA    R9,=C'APG'          APG ALGORITM APPLICABLE
         TM    OUCBAFL,OUCBAPG
         BOR   R8
         LA    R9,=C'RPG'          RPGNS ARE PRESENT
*        TM    OUCBAFL,OUCBREPT                      -- SE2--  FJP
*        BOR   R8                                    -- SE2--  FJP
         B     COMN2               ACCEPT DEFAULT STATUS
COMNMVE1 MVC   LINESTA1,0(R9) MOVE COMN1
         SPACE 3
COMN2    LA    R8,COMNMVE2    MOVE COMMENT
         LA    R9,=C'TW'           TERMINAL WAIT
         TM    OUCBEFL,OUCBTRM
         BOR   R8
         LA    R9,=C'MW'           MSO-DETECTED WAIT
         TM    OUCBEFL,OUCBMWT
         BOR   R8
         LA    R9,=C'LW'           LONG WAIT
         TM    OUCBEFL,OUCBLWT
         BOR   R8
         LA    R9,=C'OW'           OUTPUT WAIT
         TM    OUCBEFL,OUCBOWT
         BOR   R8
         LA    R9,=C'NW'           NON-SWAPPABLE WAIT
         TM    OUCBAFL,OUCBNWT
         BOR   R8
         LA    R9,=C'CP'           SIGNIFICANT CPU USER
         TM    OUCBAFL,OUCBCPL
         BOR   R8
         B     COMN3
COMNMVE2 MVC   LINESTA2,0(R9) MOVE COMN2
 EJECT
COMN3    LM    R8,R9,ASCBEJST           PICK UP CPU TIME
         SRDL  R8,12                    MOVE TO ODD REG
         D     R8,=A(1000000)
         BAL   R7,TIMECNVT    CHANGE SEC. TO HH:MM:SS
         SPACE 3
         LH    R8,ASCBFMCT    ALLOCATED PAGE FRAME COUNT
         SLL   R8,2           MULT. BY 4
         CVD   R8,WORK        CONVERT TO DECIMAL
         MVC   CHAR,EDMSK1    MOVE EDIT MASK TO CHAR
         ED    CHAR,WORK+4    EDIT TO EBCDIC
         MVC   LINEFMCT,CHAR+4 MOVE FOUR CHARS TO LINE
         MVI   LINEFMCT+4,C'K' MOVE C'K' TO PRINT LINE
         SPACE 3
         L     R7,ASCBOUCB
         USING OUCB,R7
         LH    R8,OUCBWSS     WORKING SET SIZE AT SWAP-IN
         SLL   R8,2           MULT. BY 4
         CVD   R8,WORK        CONVERT TO DECIMAL
         MVC   CHAR,EDMSK1    MOVE EDIT MASK TO CHAR
         ED    CHAR,WORK+4    EDIT TO EBCDIC
         MVC   LINEWSS,CHAR+4 MOVE FOUR CHARS TO LINE
         MVI   LINEWSS+4,C'K' MOVE C'K' TO PRINT LINE
         SPACE 3
         SR    R8,R8          CLEAR REG. 8
*        LH    R8,OUCBNPG     NEW PERFORMANCE GROUP NUMBER  --SE2--
         IC    R8,OUCBNPG     NEW PERFORMANCE GROUP NUMBER  --SE1--
         CVD   R8,WORK        CONVERT TO DECIMAL
         MVC   CHAR,EDMSK1    MOVE EDIT MASK TO CHAR
         ED    CHAR,WORK+4    EDIT TO EBCDIC
         MVC   LINENPG,CHAR+6 MOVE TWO CHARS TO LINE
         MVI   LINENPG+2,C'/' MOVE IN SLASH
         SPACE 3
         IC    R8,OUCBPGP     WMPGP OFFSET
         AH    R8,=H'4'       ADD 4 TO OFFSET, WAS 0C,1C,2C, ETC.
         SRL   R8,4           DIVIDE BY 16
         STC   R8,LINEPGP     PERFORMANCE GROUP PERIOD
         OI    LINEPGP,X'F0'  OR TO GET PRINTABLE CHAR
         MVI   LINEPGP+1,C'/' MOVE IN SLASH
         SPACE 3
         SR    R8,R8          CLEAR REG. 8
         IC    R8,OUCBDMN     DOMAIN NUMBER
         CH    R8,=H'9'       DOMAIN NUMBER GREATER THAN 9
         BH    COMN4          YES THERE ARE TWO CHARS
         STC   R8,LINEDMN     STORE CHARACTER
         OI    LINEDMN,X'F0'  MAKE NUMBER
         B     COMN5          SKIP MOVING TWO CHARACTERS
COMN4    CVD   R8,WORK        CONVERT TO DECIMAL
         MVC   CHAR,EDMSK2    MOVE EDIT MASK TO CHAR
         ED    CHAR,WORK+4    EDIT TO EBCDIC
         MVC   LINEDMN,CHAR+6 MOVE TWO CHARS TO LINE
         SPACE 3
COMN5    SR    R8,R8          CLEAR REGISTER 8
         IC    R8,OUCBSRC     SWAP REASON CODE
         LTR   R8,R8          EQUAL TO ZERO?
         BZ    COMN6          GO TO COMN6 AND FIND SWAP COUNT
         SLL   R8,2           MULT. BY 4 FOR TABLE OFFSET
         LA    R9,COMNTBLE    TABLE OF SWAP REASON CODES
         AR    R9,R8          ADD OFFSET
         MVC   LINESRC(3),0(R9) MOVE SWAP REASON CODE TO LINE
         B     COMN6          SKIP COMNTBLE
*                 0   1   2   3   4   5   6  7   8   9  10
COMNTBLE DC    C'    OTW/ITW/ LW/ASS/RSS/ DW/ RS/ EE/ERV/  U/'
         SPACE 3
COMN6    LH    R8,OUCBSWC     SWAP COUNT FOR CURRENT TRANSACTION
         LTR   R8,R8          EQUAL TO ZERO?
         BZ    COMNRTN        GO TO RETURN
         CVD   R8,WORK        CONVERT TO DECIMAL
         MVC   CHAR,EDMSK2    MOVE EDIT MASK TO CHAR
         ED    CHAR,WORK+4    EDIT TO EBCDIC
         MVC   LINESWC,CHAR+6 MOVE TWO CHARS TO LINE
         SPACE 3
COMNRTN  BR    R15
         DROP  R7
 EJECT
*  SUBROUTINE TO FIND JOBS ON JES INITIATORS
*
INIT     MVC   HEADER,INITLINE MOVE INITLINE TO HEADER
         MVI   HEADERSW,OFF   SET HEADERSW TO OFF
         L     R2,ASCBONE     FIRST ASCB ->
         LA    R3,0           SET R3 = 0
         L     R4,ASCBMAX     MAX NO. OF ASCB
         TM    ASIDFLAG,ON    WAS ASID=0
         BZ    INITLOOP       YES
         LH    R2,ASIDNMBR    NO, PICK UP ASID NUMBER
         SLL   R2,2           MULT. BY 4
         A     R2,ASCBONE     FIND CORRECT ASCB
         LH    R3,ASIDNMBR    PICK UP ASID NUMBER
         LA    R4,1           NULLIFY LOOP
INITLOOP TM    0(R2),X'80'    ASID IN USE?
         BO    INITINCR       NO
         L     R5,0(R2)       BEGINNING OF ASCB
         L     R6,ASCBJBNI    JOB NAME FOR INIT PGMS
         LTR   R6,R6          ZERO?
         BZ    INITINCR       YES
INITOUT  MVC   LINEJOBN,0(R6) MOVE JOBNAME
         MVC   LINESTEP,56(R6) MOVE STEPNAME
         BAL   R15,COMN       COMMON INFO
         BAL   R15,TSOOUXB
         BAL   R7,PUTLINE
INITINCR LA    R3,1(R3)       ADD ONE TO R3
         LA    R2,4(R2)       NEXT ASCB ENTRY
         BCT   R4,INITLOOP
         BR    R14            RETURN
 EJECT
*  SUBROUTINE TO PARSE INPUT AND TO PERFORM THE REQUESTS
*
PRSE     EQU   *
         USING CPPL,R10
*
*        REMOVE THE * IN THE FOLLOWING 5 LINES OF CODE IF
*        YOU WISH TO RESTRICT USE OF THIS COMMAND TO ONLY
*        THOSE USERS WHO HAVE OPERATOR PRIVILEDGES
*
*        L     R8,CPPLPSCB
*        USING PSCB,R8
*        TM    PSCBATR1,PSCBCTRL USER HAVE OPERATOR PRIV.
*        BZ    PRSEVLDT      TPUT MESSAGE AND QUIT
*        DROP  R8
         LA    R9,PPLADDR         ADDRESSABILITY FOR PPL
         USING PPL,R9
         MVC   PPLUPT,CPPLUPT           UPT
         MVC   PPLECT,CPPLECT           ECT
         LA    R3,ECB
         ST    R3,PPLECB                ECB
         L     R3,PCLADDR
         ST    R3,PPLPCL                PCL
         LA    R3,PDLADDR               PDL ADDRESS
         ST    R3,PPLANS                ANSWER
         MVC   PPLCBUF,CPPLCBUF         CBUF
         LA    R1,PPLADDR
         LINK  EP=IKJPARS               GO PARSE
         LTR   R15,R15
         BZ    PRSE1
         TPUT  PRSERM,40
         B     RETURN
         DROP  R9
         DROP  R10
 EJECT
*  ROUTINE FOR PARSING
PRSE1    L     R10,PDLADDR
         USING IKJPARMD,R10
PRSEGRP  CLC   GROUP,=H'1'    WAS GROUP SPECIFIED?
         BNE   PRSEPRD        NO
         MVI   SWGRP,ON       SET SWITCH
         L     R3,GROUP#      GET ADDRESS OF GROUP NUMBER
         LH    R4,GROUP#+4    LENGTH OF GROUP NUMBER
         MVC   CMPRGRP+1(1),0(R3) GET ONE CHARACTER
         CH    R4,=H'1'       WAS THERE ONLY ONE CHARACTER?
         BE    PRSEPRD        YES, GO PARSE PERIOD
         MVC   CMPRGRP(2),0(R3) NO MOVE BOTH CHARACTER
PRSEPRD  CLC   PERIOD,=H'1'   WAS PERIOD SPECIFIED?
         BNE   PRSEDMN        NO
         MVI   SWPRD,ON       SET SWITCH
         L     R3,PERIOD#     GET ADDRESS OF PERIOD NUMBER
         MVC   CMPRPRD(1),0(R3) SAVE PERIOD NUMBER
PRSEDMN  CLC   DOMAIN,=H'1'   WAS DOMAIN SPECIFIED
         BNE   PRSEASID       NO
         MVI   SWDMN,ON       SET SWITCH
         L     R3,DOMAIN#     GET ADDRESS OF DOMAIN NUMBER
         LH    R4,DOMAIN#+4   LENGTH OF DOMAIN NUMBER
         MVC   CMPRDMN(1),0(R3) GET ONE CHARACTER
         CH    R4,=H'1'       WAS THERE ONLY ONE CHARACTER?
         BE    PRSEASID       YES, GO PARSE ASID
         MVC   CMPRDMN+1(1),1(R3) NO MOVE SECOND CHARACTER
PRSEASID L     R3,ASIDNO      ADDR OF ASIDNO
         CLI   0(R3),C'*'     WANT ONLY CURRENT USER?
         BNE   PRSEASLN       NO
         L     R3,16          CVT ->
         L     R3,0(R3)       TCB CURRENT - OLD POINTER
         L     R3,8(R3)       ASCB CURRENT - OLD POINTER
         LH    R3,36(R3)      ASCBASID
         STH   R3,ASIDNMBR    SAVE ASID NUMBER
         LA    R3,4           TSO TYPE NUMBER
         STH   R3,TYPE        SAVE TYPE
         B     PSRESTFL
         SPACE 1
PRSEASLN LH    R3,ASIDNO+4    LENGTH OF ASIDNO
         BCTR  R3,0           DECREMENT BY 1
         LA    R4,X'70'       LENGTH OF WORK - 1
         OR    R3,R4          LENGTHS FOR PACK INSTR.
         L     R4,ASIDNO      ADDR OF ASIDNO
         EX    R3,PACK        PACK ASIDNO
         CVB   R3,WORK        CONVERT ASID TO BINARY
         C     R3,ASCBMAX     DOES ASIDNO EXISTS?
         BH    PRSEMXER       NO SAY SO AND QUIT
         STH   R3,ASIDNMBR    SAVE ASID NUMBER
         LTR   R3,R3          ASIDNO = 0 ?
         BZ    PRSEBRTB       YES GO TO PARSE BRANCH TABLE
PSRESTFL MVI   ASIDFLAG,ON    NO TURN ASID FLAG ON
PRSEBRTB LH    R3,TYPE        PICK UP TYPE
         SLL   R3,2           MULT. BY 4
         B     *+0(R3)        BRANCH TABLE
         B     PRSEALL        TYPE = 1
         B     PRSESTRT       TYPE = 2
         B     PRSEINIT       TYPE = 3
         B     PRSETSO        TYPE = 4
PRSEALL  BAL   R14,STRT
         BAL   R14,INIT
         BAL   R14,TSOJ
         B     RETURN
PRSETSO  BAL   R14,TSOJ
         B     RETURN
PRSEINIT BAL   R14,INIT
         B     RETURN
PRSESTRT BAL   R14,STRT
         B     RETURN
 EJECT
PRSEVLDT TPUT  PRSEVLD,40
         B     RETURN
         SPACE 3
PRSEMXER L     R3,ASCBMAX     MAX ASCB
         MVC   LINE,PRSEMXTP
         CVD   R3,WORK        CONVERT TO DECIMAL
         MVC   CHAR,EDMSK1    MOVE EDIT MASK TO CHAR
         ED    CHAR,WORK+4    EDIT TO EBCDIC
         MVC   LINE+27(4),CHAR+4 MOVE FOUR CHARS TO LINE
         LA    R3,LINE        SET UP FOR TPUT
         TPUT  (R3),80
         B     RETURN
         SPACE 3
PACK     PACK  WORK,0(0,R4)
*        DROP  R10
*
PRSERM   DC    CL40'PARSE ERROR'
PRSEVLD  DC    CL40'COMMAND NOT AUTHORIZED FOR YOUR USE'
PRSEMXTP DC    CL80'MAXIMUM NUMBER OF ASCBS IS'
 EJECT
*  SUBROUTINE TO 1 LOOK FOR GROUPS, PERIODS, DOMAINS,
*                  IN CORE USERS, OUT OF CORE USERS AND
*                  HOLES IF REQUESTED,
*                2 TEST IF APPROPRIATE HEADER HAS BEEN PRINTED,
*                3 AND THEN PRINT CURRENT LINE
*
PUTLINE  EQU   *
PUTGRP   TM    SWGRP,ON      LOOK FOR A GROUP
         BNO   PUTPRD        NO
         CLC   LINENPG(2),CMPRGRP IS THIS THE GROUP
         BNE   PUTLINE2
PUTPRD   TM    SWPRD,ON      LOOK FOR A PERIOD
         BNO   PUTDMN        NO
         CLC   LINEPGP(1),CMPRPRD IS THIS THE PERIOD
         BNE   PUTLINE2
PUTDMN   TM    SWDMN,ON      LOOK FOR A DOMAIN
         BNO   PUTIN         NO
         CLC   LINEDMN(2),CMPRDMN IS THIS THE DOMAIN
         BNE   PUTLINE2
PUTIN    CLC   REAL(2),=H'2' LOOK FOR IN CORE USERS
         BNE   PUTOUT         NO
         CLC   LINEFMCT+2(2),=C' 0'
         BE    PUTLINE2
PUTOUT   CLC   REAL(2),=H'3'  LOOK FOR OUT OF CORE USERS
         BNE   PUTHOLE        NO
         CLC   LINEFMCT+2(2),=C' 0'
         BNE   PUTLINE2
PUTHOLE  CLC   HOLES(2),=H'1' LOOK FOR HOLES ONLY
         BNE   PUTHEAD        NO
         CLC   LINEJOBN,=CL8' '
         BNE   PUTLINE2
PUTHEAD  TM    HEADERSW,ON    ALREADY TPUT HEADER
         BO    PUTLINE1       YES SKIP
         LA    R6,HEADER      ADDR OF HEADER
         TPUT  (R6),80
         MVI   HEADERSW,ON    TURN HEADER SWITCH ON
PUTLINE1 LA    R6,LINE        ADDR OF LINE FOR TPUT
         TPUT  (R6),80        OUTPUT LINE
PUTLINE2 MVI   LINE,C' '      BLANK LINE
         MVC   LINE+1(79),LINE
         BR    7              RETURN
 EJECT
*  SUBROUTINE TO FIND STARTED TASKS
*
STRT     MVC   HEADER,STRTLINE MOVE STRTLINE TO HEADER
         MVI   HEADERSW,OFF   SET HEADERSW TO OFF
         L     R2,ASCBONE     FIRST ASCB ->
         LA    R3,0           SET R3 = 0
         L     R4,ASCBMAX     MAX NO. OF ASCB
         TM    ASIDFLAG,ON    WAS ASID=0
         BZ    STRTLOOP       YES
         LH    R2,ASIDNMBR    NO, PICK UP ASID NUMBER
         SLL   R2,2           MULT. BY 4
         A     R2,ASCBONE     FIND CORRECT ASCB
         LH    R3,ASIDNMBR    PICK UP ASID NUMBER
         LA    R4,1           NULLIFY LOOP
STRTLOOP TM    0(R2),X'80'    ASID IN USE?
         BO    STRTINCR       NO
         L     R5,0(R2)       BEGINNING OF ASCB
         L     R6,ASCBJBNI    JOB NAME FOR INIT PGMS
         LTR   R6,R6          ZERO?
         BNZ   STRTINCR       NO
         L     R6,ASCBCSCB    ASCBCSCB ->
         USING CSCB,R6
         LTR   R6,R6          ZERO?
         BZ    STRTOUT        YES SYSTEM TASK
         TM    CHPKE,CHTSID   TSO JOB?
         BO    STRTINCR       YES
         DROP  R6
STRTOUT  L     R6,ASCBJBNS    JOB NAME FOR STARTED TASK
         MVC   LINEJOBN,0(R6) MOVE JOBNAME
         BAL   R15,COMN
         BAL   R7,PUTLINE
STRTINCR LA    R3,1(R3)       ADD ONE TO R3
         LA    R2,4(R2)       NEXT ASCB ENTRY
         BCT   R4,STRTLOOP
         BR    R14            RETURN
 EJECT
*  SUBROUTINE TO CONVERT TIME IN SEC TO HH:MM:SS.
*        INPUT - R9=TIME IN SEC.
*        OUTPUT - TIME IN 'LINEEJST'.
*
TIMECNVT MVC   LINEEJST,TIMECNST   SET DEFAULT LINEEJST
         LTR   R9,R9          ANY SECONDS
         BZ    TMECNV0        RETURN IF NO TIME
         SR    R8,R8          ZERO FOR DIVIDE
         D     R8,=F'3600'    GET HOURS IN R9
         CVD   R9,WORK
         UNPK  LINEEJST(2),WORK
         OI    LINEEJST+1,X'F0'
         LTR   R8,R8          ANY REMAINING SECONDS
         BZ    TMECNV0        RETURN IF NO
         LR    R9,R8          GET READY FOR DIVIDE
         SR    R8,R8
         D     R8,=F'60'      GET MINUTES IN R9
         CVD   R9,WORK
         UNPK  LINEEJST+3(2),WORK
         OI    LINEEJST+4,X'F0'
         CVD   R8,WORK        GET REMAINING SECONDS
         UNPK  LINEEJST+6(2),WORK
         OI    LINEEJST+7,X'F0'
TMECNV0  CLC   LINEEJST(7),=C'00:00:0' CLEAN UP SOME
         BNE   TMECNV1
         MVC   LINEEJST(7),=C'       '
TMECNV1  CLC   LINEEJST(6),=C'00:00:' CLEAN UP SOME MORE
         BNE   TMECNV2
         MVC   LINEEJST(6),=C'      '
TMECNV2  CLC   LINEEJST(4),=C'00:0' CLEAN UP SOME MORE
         BNE   TMECNV3
         MVC   LINEEJST(4),=C'    '
TMECNV3  CLC   LINEEJST(3),=C'00:' CLEAN UP SOME MORE
         BNE   TMECNV4
         MVC   LINEEJST(3),=C'   '
TMECNV4  CLI   LINEEJST,C'0' CLEAN UP SOME MORE
         BNER  R7              RETURN
         MVI   LINEEJST,C' '
         BR    R7             RETURN TO CALLER
*
TIMECNST DC    CL8'00:00:00'  DEFAULT TIME VALUE
 EJECT
*  SUBROUTINE TO FIND TSO USERS
*
TSOJ     MVC   HEADER,TSOJLINE MOVE TSOJLINE TO HEADER
         MVI   HEADERSW,OFF   SET HEADERSW TO OFF
         L     R2,ASCBONE     FIRST ASCB ->
         LA    R3,0           SET R3 = 0
         L     R4,ASCBMAX     MAX NO. OF ASCB
         TM    ASIDFLAG,ON    WAS ASID=0
         BZ    TSOJLOOP       YES
         LH    R2,ASIDNMBR    NO, PICK UP ASID NUMBER
         SLL   R2,2           MULT. BY 4
         A     R2,ASCBONE     FIND CORRECT ASCB
         LH    R3,ASIDNMBR    PICK UP ASID NUMBER
         LA    R4,1           NULLIFY LOOP
TSOJLOOP TM    0(R2),X'80'    ASID IN USE?
         BO    TSOJINCR       NO
         L     R5,0(R2)       BEGINNING OF ASCB
         L     R6,ASCBJBNI    JOB NAME FOR INIT PGMS
         LTR   R6,R6          ZERO?
         BNZ   TSOJINCR       NO
         L     R6,ASCBCSCB    ASCBCSCB ->
         USING CSCB,R6
         LTR   R6,R6          ZERO?
         BZ    TSOJINCR       YES SYSTEM TASK
         TM    CHPKE,CHINITID INTIT?
         BO    TSOJINCR       YES
         TM    CHPKE,CHTSID   TSO JOB?
         BNO   TSOJINCR       NO
TSOJOUT  MVC   LINEJOBN,CHKEY MOVE JOBNAME
         MVC   LINESTEP,CHCLS MOVE STEPNAME
         DROP  R6
         BAL   R15,COMN
         BAL   R15,TSOOUXB
         BAL   R7,PUTLINE
TSOJINCR LA    R3,1(R3)       ADD ONE TO R3
         LA    R2,4(R2)       NEXT ASCB ENTRY
         BCT   R4,TSOJLOOP
         BR    R14            RETURN
 EJECT
*  SUBROUTINE TO EXTRACT CURRENT TRANSACTION SERVICE UNITS
*             TO EXTRACT CURRENT TRANSACTION COUNT
*         AND TO EXTRACT SESSION SERVICE UNITS
*
TSOOUXB  L     R7,ASCBOUXB
         USING OUXB,R7
         L     R8,OUXBTRS     SERVICE UNITS
         LTR   R8,R8          EQUAL TO 0?
         BZ    TSOOUXB2       SKIP TO TRANSACTION COUNT
         C     R8,=F'9999'    GREATER THAN 9,999
         BH    TSOOUXB1       YES CHANGE TO K
         CVD   R8,WORK        CONVERT TO DECIMAL
         MVC   CHAR,EDMSK1    MOVE EDIT MASK TO CHAR
         ED    CHAR,WORK+4    EDIT TO EBCDIC
         MVC   LINETRS,CHAR+4 MOVE FOUR CHARS TO LINE
         B     TSOOUXB2       CONTINUE
TSOOUXB1 AH    R8,=H'512'     ADD .5K FOR ROUND OFF
         SRL   R8,10          DIVIDE BY1024
         CVD   R8,WORK        CONVERT TO DECIMAL
         MVC   CHAR,EDMSK1    MOVE EDIT MASK TO CHAR
         ED    CHAR,WORK+4    EDIT TO EBCDIC
         MVC   LINETRS(3),CHAR+5 MOVE THREE CHARS TO LINE
         MVI   LINETRS+3,C'K' MOVE K TO LINE
TSOOUXB2 L     R8,OUXBTRC     TRANSACTION COUNT
         CVD   R8,WORK        CONVERT TO DECIMAL
         MVC   CHAR,EDMSK1    MOVE EDIT MASK TO CHAR
         ED    CHAR,WORK+4    EDIT TO EBCDIC
         BZR   R15            RETURN
         MVC   LINETRC,CHAR+5 MOVE THREE CHARS TO LINE
         L     R8,OUXBJBS     SERVICE UNITS
         LTR   R8,R8          EQUAL TO 0?
         BZR   R15            YES, RETURN
         C     R8,=F'99999'   GREATER THAN 99,999
         BH    TSOOUXB3       YES, CHANGE TO K
         CVD   R8,WORK        CONVERT TO DECIMAL
         MVC   CHAR,EDMSK1    MOVE EDIT MASK TO CHAR
         ED    CHAR,WORK+4    EDIT TO EBCDIC
         MVC   LINEJBS,CHAR+3 MOVE FIVE CHARS TO LINE
         BR    R15            RETURN
TSOOUXB3 AH    R8,=H'512'     ADD .5K FOR ROUND OFF
         SRL   R8,10          DIVIDE BY 1024
         CVD   R8,WORK        CONVERT TO DECIMAL
         MVC   CHAR,EDMSK1    MOVE EDIT MASK TO CHAR
         ED    CHAR,WORK+4    EDIT TO EBCDIC
         MVC   LINEJBS+1(3),CHAR+5 MOVE THREE CHARS TO LINE
         MVI   LINEJBS+4,C'K' MOVE K TO LINE
         BR    R15            RETURN
 EJECT
PCLADDR  DC    A(DSPPCL)
STRTLINE DC    CL80' '
         ORG   STRTLINE            RESET ADDRESSABILITY
         DC    C' ID DP ****** STC ****** FLAGS CPUTIME'
         DC    C' REAL WORK  G/P/D  SRC/SC'
         ORG
INITLINE DC    CL80' '
         ORG   INITLINE            RESET ADDRESSABILITY
         DC    C' ID DP ****** JOB ****** FLAGS CPUTIME'
         DC    C' REAL WORK  G/P/D  SRC SC SERV TRC  SERV'
         ORG
TSOJLINE DC    CL80' '
         ORG   TSOJLINE            RESET ADDRESSABILITY
         DC    C' ID DP ****** TSU ****** FLAGS CPUTIME'
         DC    C' REAL WORK  G/P/D  SRC SC SERV TRC  SERV'
         ORG
EDMSK1   DC    XL8'4020202020202120'
EDMSK2   DC    XL8'4020202020212020'
         LTORG
 EJECT
DSPPCL   IKJPARM
ASIDNO   IKJIDENT 'ASID NUMBER',ASTERISK,                              C
               MAXLNTH=3,FIRST=NUMERIC,OTHER=NUMERIC,                  C
               DEFAULT='0'
TYPE     IKJKEYWD DEFAULT='ALL'
         IKJNAME 'ALL'
         IKJNAME 'STC'
         IKJNAME 'JOBS'
         IKJNAME 'TS'
REAL     IKJKEYWD DEFAULT='BOTH'
         IKJNAME 'BOTH'
         IKJNAME 'IN'
         IKJNAME 'OUT'
HOLES    IKJKEYWD
         IKJNAME 'HOLES'
GROUP    IKJKEYWD
         IKJNAME 'GROUP',SUBFLD=GROUPN
PERIOD   IKJKEYWD
         IKJNAME 'PERIOD',SUBFLD=PERIODN
DOMAIN   IKJKEYWD
         IKJNAME 'DOMAIN',SUBFLD=DOMAINN
GROUPN   IKJSUBF
GROUP#   IKJIDENT 'NUMBER',FIRST=NUMERIC,OTHER=NUMERIC,MAXLNTH=2,      X
               PROMPT='GROUP NUMBER'
PERIODN  IKJSUBF
PERIOD#  IKJIDENT 'NUMBER',FIRST=NUMERIC,MAXLNTH=1,                    X
               PROMPT='PERIOD NUMBER'
DOMAINN  IKJSUBF
DOMAIN#  IKJIDENT 'NUMBER',FIRST=NUMERIC,OTHER=NUMERIC,MAXLNTH=2,      X
               PROMPT='DOMAIN NUMBER'
         IKJENDP
 EJECT
         IKJCPPL
 EJECT
         IKJPSCB
 EJECT
         IKJPPL
 EJECT
*   CSCB
CSCB     DSECT
         IEECHAIN
 EJECT
*   ASCB
         IHAASCB
 EJECT
*   OUCB
         IRAOUCB
 EJECT
*   OUXB
         IHAOUXB
 EJECT
WORKAREA DSECT
SAVEAREA DS    18F
LINE     DS    CL80
         ORG   LINE+0
LINEASID DS    CL3
         ORG   LINE+4
LINEDPRT DS    CL2
         ORG   LINE+7
LINEJOBN DS    CL8
         ORG   LINE+16
LINESTEP DS    CL8
         ORG   LINE+25
LINESTAT DS    0CL5
LINESTA1 DS    CL3
LINESTA2 DS    CL2
         ORG   LINE+30
LINEEJST DS    CL8
         ORG   LINE+38
LINEFMCT DS    CL4
         ORG   LINE+43
LINEWSS  DS    CL4
         ORG   LINE+49
LINENPG  DS    CL2
         ORG   LINE+52
LINEPGP  DS    CL1
         ORG   LINE+54
LINEDMN  DS    CL2
         ORG   LINE+57
LINESRC  DS    CL3
         ORG   LINE+61
LINESWC  DS    CL2
         ORG   LINE+64
LINETRS  DS    CL4
         ORG   LINE+69
LINETRC  DS    CL3
         ORG   LINE+73
LINEJBS  DS    CL5
         ORG   LINE+80
WORK     DS    D
CHAR     DS    D
ASCBONE  DS    F
ASCBMAX  DS    F
ECB      DS    F
PDLADDR  DS    F
PPLADDR  DS    7F
ASIDNMBR DS    H
HEADER   DS    CL80
CMPRGRP  DS    CL2
CMPRPRD  DS    C
CMPRDMN  DS    CL2
ASIDFLAG DS    C
SWGRP    DS    C
SWPRD    DS    C
SWDMN    DS    C
HEADERSW DS    C
LDYNAMIC EQU   *-WORKAREA
OFF      EQU   X'00'
ON       EQU   X'01'
         END   ASID
