         MACRO
         REG
R0       EQU   0
R00      EQU   00
R1       EQU   1
R01      EQU   01
R2       EQU   2
R02      EQU   2
R3       EQU   3
R03      EQU   3
R4       EQU   4
R04      EQU   4
R5       EQU   5
R05      EQU   5
R6       EQU   6
R06      EQU   6
R7       EQU   7
R07      EQU   7
R8       EQU   8
R08      EQU   8
R9       EQU   9
R09      EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         MEND
         EJECT
         MACRO
&MOD     LNKGE &BASE=12,&SAVE=SAVE,&MF=S
*
*              STANDARD OS/VS LINKAGE
*
&MOD     CSECT
         STM   14,12,12(13)
         AIF   (&BASE EQ 13).BASE13          IS BASE =13..
         AIF   (&BASE EQ 14).ERR1      IF =14 ERROR.
         LR    &BASE,15
         USING &MOD,&BASE  ADDRESSABILITY
         AIF   ('&MF' EQ 'R').RENT
         AIF   ('&MF' NE 'S').ERR2
         LA    14,&SAVE        ADDRESS OF SAVE AREA.
         ST    14,8(13)      STORE ADDRESS OF SAVE IN CALLERS SAVE + 8
         ST    13,&SAVE+4    STORE CALLERS SAVE ADDRESS AT SAVE + 4
         LR    13,14      PUT SAVE ADDRESS IN REG 13
         B     &SAVE+72      BRANCH AROUND SAVE AREA.
         DC    C'VCU',C'&SYSDATE',C'&SYSTIME',CL8'&MOD'
&SAVE    DS    9D
         MEXIT
.RENT    ANOP
         LR    3,1
         GETMAIN R,LV=72               GET SAVE AREA
         ST    13,4(1)                 BACK CHAIN
         SR    2,2                     CLEAR REG2.
         ST    2,8(1)
         ST    1,8(13)                 FORWARD CHAIN
         LR    13,1                    SAVE ADDRESS IN R13
         LR    1,3
         B     *+28                    BRANCH AROUND VERSION ID.
         DC    C'VCU',C'&SYSDATE',C'&SYSTIME',CL8'&MOD'
         MEXIT
.BASE13  USING &MOD,15
         AIF   ('&MF' EQ 'R').ERR3
         ST    15,8(13)     STORE SAVE AREA ADDRESS IN CALLERS SAVE +8
         ST    &BASE,&MOD+4  STORE CALLERS SAVE ADDRESS IN SAVE+4
         LR    &BASE,15     PUT SAVE ADDRESS IN REG 13
         DROP  15
         USING &MOD,13                 PERMANENT ADDRESSABILITY.
         B     *+82                    GO TO NEXT EXECUTABLE CODE.
         DS    CL54      REMAINDER OF SAVE AREA.
         DC    C'VCU',C'&SYSDATE',C'&SYSTIME',CL8'&MOD'
         MEXIT
.ERR1    MNOTE 16,'REGISTER 14 IS AN INVALID BASE REGISTER'
         MEXIT
.ERR2    MNOTE 16,'LINKAGE TYPE INVALID, NEITHER S NOR R SPECIFIED'
         MEXIT
.ERR3    MNOTE 16,'TYPE R SPECIFIED AND BASE=13 INCOMPATIBLE'
         MEXIT
         MEND
         EJECT
         MACRO
&LABEL   $RETURN &RETCODE=0
         AIF   ('&RETCODE'(1,1) LT '0' AND '&RETCODE' NE '(15)').RADDR
&LABEL   L     13,4(13)
         AIF   ('&RETCODE' EQ '(15)').REG15
         LM    14,12,12(13)
         LA    15,&RETCODE.(0,0)
         BR    14
         MEXIT
.RADDR   ANOP
&LABEL   LR    15,&RETCODE
         L     13,4(13)
.REG15   L     14,12(13)
         LM    0,12,20(13)
         BR    14
         MEND
         EJECT
         REG
         TITLE 'SMFCOPY - GENERAL SMF DATA COPY ROUTINE'
***********************************************************************
*                                                                     *
*   MODULE - SMFCOPY                                                  *
*                                                                     *
*   FUNCTION -                                                        *
*                                                                     *
*            COPIES SELECTED SMF RECORDS FROM DDNAME SMFIN            *
*            TO DDNAME SMFOUT. PARM FIELD DETERMINES RECORDS          *
*            TO BE COPIED.                                            *
*                                                                     *
*            PARM='TYPE=(0-64,121,255),DATE=(78120,78121)'    11/07/78*
*                                                                     *
*            RECORD TYPES CAN INCLUDE RANGES (0-64) AND               *
*            INDIVIDUAL RECORD TYPES (255). DATE MUST BE A            *
*            RANGE OF TWO JULIAN DATES. IF TYPE= IS NOT               *
*            SPECIFIED, ALL RECORD TYPES ARE COPIED. IF DATE=         *
*            IS NOT SPECIFIED ALL DATES ARE COPIED.                   *
*                                                                     *
*            ENHANCEMENT WAS CODED TO ALLOW DATE RANGES TO BE 11/07/78*
*            SPECIFIED RELATIVE TO THE CURRENT DATE IN THE    11/07/78*
*            FORM:                                            11/07/78*
*                                                             11/07/78*
*                   DATE=(-1,-1)                              11/07/78*
*                                                             11/07/78*
*            WHERE THE MINUS INDICATES DATES RELATIVE TO THE  11/07/78*
*            CURRENT DATE. ZERO IS ALLOWED FOR SPECIFICATION  11/07/78*
*            OF THE CURRENT DATE.                             11/07/78*
*                                                             11/07/78*
*                                                                     *
*   OPERATION -                                                       *
*                                                                     *
*            PARM FIELD IS DECODED AND RECORD TYPE TABLE IS           *
*            SET TO INDICATE ALL RECORD TYPES TO BE COPIED.           *
*            DATE RANGE IS CONVERTED TO PACKED DECIMAL INTO           *
*            FIELDS 'SELDATE1' AND 'SELDATE2'. IF NO DATE=            *
*            WAS SPECIFIED 'SELDATE1' IS LEFT AT '00000F' AND         *
*            'SELDATE2' IS LEFT AT '99999F'. IF NO TYPE= WAS          *
*            SPECIFIED, THE RECORD TYPE TABLE IS SET TO INDICATE      *
*            ALL RECORDS WILL BE COPIED.                              *
*                                                                     *
*                                                                     *
*            IF INVALID PARM FIELD, A USER ABEND 1000 IS GENERATED.   *
*            IF SYSPRINT CAN'T BE OPENED, A USER ABEND 2000           *
*            IF SMFIN CAN'T BE OPENED, A USER 3000                    *
*            IF SMFOUT CAN'T BE OPENED, A USER 4000                   *
*                                                                     *
*            NEXT SMFIN AND SMFOUT DDNAMES ARE OPENED AND CHECKED     *
*            FOR SUCCESSFUL OPEN. RECORDS ARE READ AND 'RECCNTIN'     *
*            IS INCREMENTED FOR EACH RECORD READ.                     *
*                                                                     *
*            FOR EACH RECORD READ, TYPE IS DETERMINED AND             *
*            CORRESPONDING ENTRY IN 'RECCNTTB' TABLE INCREMENTED.     *
*                                                                     *
*            TWO TESTS ARE MADE TO CHECK IF RECORD SHOULD BE COPIED   *
*            TO SMFOUT:                                               *
*                                                                     *
*                     1. RECTYPTB ENTRY IS X'FF'                      *
*                     2. RECORD DATE IS WITHIN RANGE SPECIFIED        *
*                        BY SELDATE1 AND SELDATE2                     *
*                                                                     *
*            IF RECORD MEETS CRITERIA, RECCNTOT IS INCREMENTED AND    *
*            RECORD IS WRITTEN TO SMFOUT.                             *
*                                                                     *
*   AUTHOR - M.PELT                                                   *
*                                                                     *
*   DATE WRITTEN - 09/06/78                                           *
*                                                                     *
*   MACROS - STANDARD                                                 *
*                                                                     *
*                                                                     *
*                                                                     *
***********************************************************************
         EJECT
         PRINT NOGEN
SMFCOPY  LNKGE BASE=12
         LA    R11,4095(R12)       SET UP SECOND BASE REGISTER
         LA    R11,1(R11)
         USING SMFCOPY+4096,R11
         L     R2,0(R1)            SAVE PARM ADDRESS
         ST    R2,PARMAD           KEEP FOR LATER             A12/21/78
         TIME  ,                   GET CURRENT DATE           A12/21/78
         STCM  R1,B'0111',RUNDATE  SAVE RUN DATE              A12/21/78
         MVI   DECW,X'00'          CLEAR HIGH ORDER BYTE      A12/21/78
         MVC   DECW+1(3),RUNDATE   MOVE IN RUNDATE            A12/21/78
         DECODE DECW,TYPE=DATE     CONVERT RUN DATE TO EBCDIC A12/21/78
         MVC   HEADER1+2(5),=C'DATE='                         A12/21/78
         MVC   HEADER1+7(8),0(R15)
         MVC   RUNDATE2(3),RUNDATE
         SP    RUNDATE2(3),=PL3'1000'
         AP    RUNDATE2(3),=PL3'365'
         XC    DECW(8),DECW
         MVC   DECW+5(3),RUNDATE
         DP    DECW(8),=PL3'1000'
         DP    DECW(5),=PL1'4'
         CP    DECW+4(1),=PL1'0'
         BNE   NOTLEAP
         AP    RUNDATE2(3),=PL1'1'
NOTLEAP  L     R2,PARMAD
         LH    R3,0(R2)            GET PARM LENGTH
         LTR   R3,R3               TEST FOR ZERO LENGTH
         BZ    ENDPARM             NOT ZERO - HAVE A PARM FIELD
         LA    R3,2(R2)            FIRST CHARACTER OF PARM FIELD
CHEKPARM CLC   0(6,R3),=C'TYPE=('  IS IT TYPE= ?
         BE    TYPE
         CLC   0(6,R3),=C'DATE=('  IS IT DATE= ?
         BE    DATE
         CLC   0(4,R3),=C'BASE'    IS IT BASE ?               A12/21/78
         BE    BASE                                           A12/21/78
INVPARM  WTO   'SMF101I SMFCOPY - INVALID PARM FIELD',ROUTCDE=11
         ABEND 101,DUMP
NEXTPARM L     R2,PARMAD           GET PARMF FIELD ADDRESS    A12/21/78
         LH    R4,0(R2)            LENGTH OF PARM FIELD       C12/21/78
         LA    R4,2(R2,R4)         FIRST CHAR AFTER PARM FIELD
         CR    R3,R4               CHECK WITH SCAN COLUMN POINTER
         BNL   ENDPARM             SCANNED TO END OF PARM
         CLI   0(R3),C','          CHECK FOR COMMA
         BNE   INVPARM             NOPE - INVALID PARM FIELD
         LA    R3,1(R3)            BUMP OVER COMMA
         B     CHEKPARM            GO CHECK KEYWORD
         EJECT
***********************************************************************
*                                                                     *
*   DECODE TYPE= PARAMETERS                                           *
*                                                                     *
***********************************************************************
TYPE     LA    R3,6(R3)            FIRST RECORD NUMBER
         MVI   TYPESPEC,X'FF'      SET TYPE= SWITCH
TYPE1    BAL   R14,DECNUM          CONVERT FIRST NUMBER
         C     R4,=F'256'          MAKE SURE ITS LESS THAN 256
         BH    INVPARM             ELSE INVALID PARM FIELD
         CLI   0(R3),C','          IS IT A SINGLE RECORD TYPE ?
         BE    TYPESING            YIP - GO UPDATE RECTYPTB
         CLI   0(R3),C')'          IS IT A SINGLE RECORD TYPE ?
         BE    TYPESING            YIP - GO UPDATE RECTYPTB
         CLI   0(R3),C'-'          IS IT A RECORD RANGE ?
         BNE   INVPARM             NO - WHAT THE HELL IS IT ?
         EJECT
***********************************************************************
*                                                                     *
*   TYPERANG: DECODE RECORD RANGES (E.G. TYPE=(64-76,...)             *
*                                                                     *
***********************************************************************
TYPERANG LA    R3,1(R3)            SKIP OVER DASH
         LR    R5,R4               SAVE FIRST RECORD NUMBER OF RANGE
         BAL   R14,DECNUM          CONVERT SECOND NUMBER
         C     R4,=F'256'          CHECK IF LESS THAN 256
         BH    INVPARM             ELSE INVALID PARM FIELD
         CR    R5,R4               CHECK FOR VALID RANGE
         BH    INVPARM             FIRST RECORD NUMBER GREATER THAN 2ND
         SR    R4,R5               DETERMINE NUMBER OF RECORDS
         LA    R4,1(R4)            IN RANGE
         LA    R5,RECTYPTB(R5)     RECTYPTB ENTRY FOR FIRST RECORD
NXTENTRY CLI   0(R5),C' '          WAS RECORD NUMBER ALREADY SPECIFIED?
         BNE   INVPARM             YIP - INVALID PARM FIELD
         MVI   0(R5),C'*'          SET RECORD ENTRY
         LA    R5,1(R5)            BUMP TO NEXT ENTRY
         BCT   R4,NXTENTRY         AND TRY AGAIN
         B     TYPENEXT            AND SEE IF WE GOT MORE RECORD TYPES
         SPACE 3
***********************************************************************
*                                                                     *
*   TYPESING: DECODE SINGLE RECORD NUMBERS (E.G. TYPE=(5,...)         *
*                                                                     *
***********************************************************************
TYPESING LA    R5,RECTYPTB(R4)     RECORD TYPE ENTRY
         LA    R4,1                UPDATE JUST ONE ENTRY
         B     NXTENTRY
         EJECT
***********************************************************************
*                                                                     *
*   TYPENEXT: CHECK IF MORE RECORD TYPES TO GO                        *
*                                                                     *
***********************************************************************
TYPENEXT CLI   0(R3),C')'          END OF TYPE=(...) ?
         BE    TYPEND              YIP - GO CHECK FOR DATE
         CLI   0(R3),C','          MORE TO GO ?
         BNE   INVPARM             NO - INVALID PARM
         LA    R3,1(R3)            SKIP OVER COMMA
         BE    TYPE1               DECODE NEXT OPERAND
TYPEND   LA    R3,1(R3)            SKIP OVER ')'
         B     NEXTPARM            GO CHECK FOR MORE KEYWORDS
         EJECT
***********************************************************************
*                                                                     *
*   DATE: DECODE DATE= PARAMETERS                                     *
*                                                                     *
***********************************************************************
DATE     LA    R3,6(R3)            BUMP OVER DATE=(
         CLI   0(R3),C'-'          IS IT A RELATIVE DATE ?     11/07/78
         BNE   NOTMIN1             NO - GO CONVERT JULIAN DATE 11/07/78
         LA    R3,1(R3)            BUMP OVER MINUS SIGN        11/07/78
         BAL   R14,DECNUM          GO CONVERT RELATIVE DATE    11/07/78
ZERO1    MVC   SELDATE1(3),RUNDATE                             11/07/78
         CVD   R4,DECW                                         11/07/78
         CP    SELDATE1+1(2),DECW+6(2) WOULD SUBTRACT CHANGE YEARS ?
         BNL   SP1                 NO - USE RUNDATE
         MVC   SELDATE1(3),RUNDATE2 YIP - USE ADJUSTED RUN DATE
SP1      SP    SELDATE1(3),DECW(8) SUBTRACT RELATIVE DATE      11/07/78
         B     CHKCOMMA                                        11/07/78
NOTMIN1  BAL   R14,DECNUM          CONVERT FIRST DATE
         C     R4,=F'99999'        CHECK IF WITHIN RANGE
         BH    INVPARM
         LTR   R4,R4               CHECK IF ZERO DATE ?        11/07/78
         BZ    ZERO1               YIP - USE RELATIVE DATE     11/07/78
         CVD   R4,DECW             CONVERT DATE TO PACKED DECIMAL
         MVC   SELDATE1(3),DECW+5  MOVE TO SELECTION DATE
CHKCOMMA CLI   0(R3),C','          CHECK FOR RANGE             11/07/78
         BNE   INVPARM             NOT RANGE - THEN INVALID PARM
         LA    R3,1(R3)            BUMP OVER COMMA
         CLI   0(R3),C'-'          IS IT A RELATIVE DATE ?     11/07/78
         BNE   NOTMIN2             NO - GO CONVERT JULIAN DATE 11/07/78
         LA    R3,1(R3)            BUMP OVER MINUS             11/07/78
         BAL   R14,DECNUM          GO CONVERT RELATIVE DATE    11/07/78
ZERO2    MVC   SELDATE2(3),RUNDATE                             11/07/78
         CVD   R4,DECW                                         11/07/78
         CP    SELDATE2+1(2),DECW+6(2) WOULD SUBTRACT CHANGE YEARS ?
         BNL   SP2                 NO - USE RUN DATE
         MVC   SELDATE2(3),RUNDATE2 YIP - USE ADJUSTED RUN DATE
SP2      SP    SELDATE2(3),DECW(8)                             11/07/78
         B     CHKDATES                                        11/07/78
NOTMIN2  BAL   R14,DECNUM          CONVERT SECOND DATE
         LTR   R4,R4               IS IT ZERO ?                11/07/78
         BZ    ZERO2               YIP - USE RELATIVE DATE     11/07/78
         CVD   R4,DECW             CONVERT SECOND DATE TO PACKED
         MVC   SELDATE2(3),DECW+5  SAVE
CHKDATES CP    SELDATE1(3),SELDATE2(3) CHECK DATE RANGE        11/07/78
         BH    INVPARM                                         11/07/78
         CLI   0(R3),C')'          CHECK FOR END OF FIELD
         BNE   INVPARM
         LA    R3,1(R3)            BUMP OVER ')'
         ZAP   DECW(8),SELDATE1(3) CONVERT TO DAYS SINCE JANUARY 1,1900
         BAL   R14,COMPDAYS
         ST    R1,SEL1DAYS
         ZAP   DECW(8),SELDATE2(3) CONVERT TO DAYS SINCE JANUARY 1,1900
         BAL   R14,COMPDAYS
         ST    R1,SEL2DAYS
         B     NEXTPARM            CHECK FOR OTHER KEYWORDS
         EJECT
***********************************************************************
*                                                                     *
*   BASE: DECODE BASE= PARAMETER                                      *
*                                                                     *
***********************************************************************
BASE     MVI   BASESPEC,X'FF'      INDICATE BASE SPECIFIED    A12/21/78
         LA    R3,4(R3)            SKIP OVER BASE             A12/21/78
         B     NEXTPARM            GO CHECK FOR OTHER PARMS   A12/21/78
         EJECT
***********************************************************************
*                                                                     *
*   ENDPARM: CHECK IF TYPE= WAS SPECIFIED, ELSE SET RECTYPTB          *
*                                                                     *
***********************************************************************
ENDPARM  GETMAIN R,LV=32768        GET SMF RECORD AREA        A12/21/78
         ST    R1,RECAD            SAVE RECORD ADDRESS        A12/21/78
         CLI   TYPESPEC,X'FF'      WAS TYPE= SPECIFIED ?
         BE    CHEKBASE            YIP - GO OPEN FILES        C12/21/78
         MVI   RECTYPTB,C'*'       SELECT ALL RECORD TYPES
         MVC   RECTYPTB+1(255),RECTYPTB
         SPACE 3
**************************************************************C12/21/78
*                                                                     *
*   CHEKBASE: OPEN SMFOUT AND SYSPRINT. OPEN SMFIN IF NOT DATA BASE   *
*             RUN                                                     *
*                                                                     *
***********************************************************************
CHEKBASE OPEN  (SYSPRINT,OUTPUT,SMFOUT,OUTPUT)              C12/21/78
         TM    SYSPRINT+48,X'10'
         BO    PRTOPNOK
         WTO   'SMF102I SMFCOPY - OPEN FAILED FOR DDNAME=SYSPRINT',    X
               ROUTCDE=11
         ABEND 102,DUMP
PRTOPNOK TM    SMFOUT+48,X'10'                                C12/21/78
         BO    OUTOPNOK
         WTO   'SMF103I SMFCOPY - OPEN FAILED FOR DDNAME=SMFOUT',      X
               ROUTCDE=11
         ABEND 103,DUMP
OUTOPNOK CLI   BASESPEC,X'FF'      WAS BASE= SPECIFIED ?      C12/21/78
         BE    OPENBASE            YIP - GO OPEN DATA BASE    C12/21/78
**************************************************************C12/21/78
*                                                                     *
*   OPEN SMFIN AND DO STRAIGHT COPY FROM SMFIN TO SMFOUT              *
*                                                                     *
***********************************************************************
         OPEN  (SMFIN,INPUT)       NO - OPEN SMFIN            A12/21/78
         TM    SMFIN+48,X'10'                                 A12/21/78
         BO    READIN                                         A12/21/78
         WTO   'SMF104I SMFCOPY - OPEN FAILED FOR DDNAME=SMFIN',       X
               ROUTCDE=11                                     A12/21/78
         ABEND 104,DUMP                                       A12/21/78
         EJECT
***********************************************************************
*                                                                     *
*   READIN: READ SMF RECORDS FROM SMFIN                       C12/21/78
*                                                                     *
***********************************************************************
READIN   L     R10,RECAD          GET SMF RECORD ADDRESS      A12/21/78
         GET   SMFIN,(R10)        GET AN SMF RECORD           C12/21/78
         BAL   R9,PROCREC         PROCESS RECORD              A12/21/78
         B     READIN             AND GO READ ANOTHER RECORD  C12/21/78
EODIN    CLOSE (SMFIN,,SMFOUT)    CLOSE FILES AT END OF FILE  A12/21/78
         B     REPORT                                         A12/21/78
         EJECT
**************************************************************A12/21/78
*                                                                     *
*   OPENBASE: SETUP TO OPEN DATA BASE                                 *
*                                                                     *
***********************************************************************
OPENBASE OPEN  (CHECKPT,INPUT)
         TM    CHECKPT+48,X'10'
         BO    OPNCHKOK
         WTO   'SMF105I SMFCOPY - OPEN FAILED FOR DDNAME=CHECKPT',     X
               ROUTCDE=11
         ABEND 105,DUMP
OPNCHKOK GET   CHECKPT,CHECKREC
         CLOSE (CHECKPT)
         CLI   CHECKREC,C'0'
         BE    CHEKPTOK
         WTO   'SMF106I SMFCOPY - RUN SMFDUMP TO CLEAR CHECKPT',       X
               ROUTCDE=11
         ABEND 106,DUMP
CHEKPTOK ZAP   DECW(8),CHECKBAS    CONVERT BASE DATE          A12/21/78
         BAL   R14,COMPDAYS                                   A12/21/78
         ST    R1,BASEDAYS                                    A12/21/78
         MVI   DECW,X'00'
         MVC   DECW+1(3),CHECKBAS
         DECODE DECW,TYPE=DATE
         MVC   HEADER1+120(5),=C'BASE='
         MVC   HEADER1+125(8),0(R15)
         MVC   DECW+1(3),CHECKHLD
         DECODE DECW,TYPE=DATE
         MVC   HEADER1+106(5),=C'HOLD='
         MVC   HEADER1+111(8),0(R15)
         CP    SELDATE1(3),CHECKHLD IS START SELECT DATE      A12/21/78
         BNL   OPENHOLD            GREATER OR EQUAL TO HOLD ? A12/21/78
*                                  YIP - GO READ HOLD FILE    A12/21/78
         L     R5,SEL1DAYS         COMPUTE NUMBER OF DAYS     A12/21/78
         S     R5,BASEDAYS         BETWEEN BASE START DATE    A12/21/78
*                                  AND START SELECT DATE      A12/21/78
         BNM   OKSEL1              IF NEGATIVE, SELECT DATE   A12/21/78
*                                  IS BEFORE BASE START DATE  A12/21/78
         WTO   'SMF106I SMFCOPY - INVALID DATE SELECTION',             X
               ROUTCDE=11
         ABEND 106,DUMP
OKSEL1   LA    R4,0                CLEAR FOR DIVIDE           A12/21/78
         D     R4,INTERVAL         DIVIDE BY NUMBER OF DAYS   A12/21/78
*                                  PER DATA BASE TAPE         A12/21/78
         LA    R5,1(R5)            COME UP WITH FIRST         A12/21/78
         ST    R5,CURGEN           GENERATION NEEDED          A12/21/78
         SPACE 2                                              A12/21/78
         L     R5,SEL2DAYS         COMPUTE DAYS BETWEEN BASE
         S     R5,BASEDAYS         START DATE AND END SELECT DATE
         LA    R4,0                CLEAR FOR DIVIDE           A12/21/78
         D     R4,INTERVAL         DIVIDE BY NUMBER OF DAYS   A12/21/78
*                                  PER DATA BASE TAPE         A12/21/78
         LA    R5,1(R5)            COME UP WITH LAST GEN NEEDED
         C     R5,CHECKGEN         GREATER THAN LAST GEN DUMPED ?
         BNH   ENDGENOK
         L     R5,CHECKGEN         USE LAST GEN DUMPED
ENDGENOK ST    R5,ENDGEN           LAST GEN NEEDED            A12/21/78
         EJECT                                                A12/21/78
**************************************************************A12/21/78
*                                                                     *
*   READ DATA BASE JFCB AND FIND ADDRESS TO APPEND GENERATION NUMBER  *
*                                                                     *
***********************************************************************
         RDJFCB BASEIN             READ JFCB OF BASEIN DDCARD A12/21/78
         LTR    R15,R15            CHECK RDJFCB RETURN CODE   A12/21/78
         BZ     RDJFCBOK           ZERO - SKIP WTO            A12/21/78
         WTO   'SMF107I SMFCOPY - RDJFCB FAILED FOR DDNAME=BASEIN',    X
               ROUTCDE=11
         ABEND 107,DUMP
RDJFCBOK TRT   JFCB(44),FINDBLNK   FIND END OF DSNAME         A12/21/78
         ST    R1,QUALAD           SAVE ADDRESS TO PLACE      A12/21/78
*                                  GENERATION QUALIFIER       A12/21/78
         SPACE 3                                              A12/21/78
NEXTGEN  L     R1,QUALAD           GET ADDRESS TO PLACE QUALF A12/21/78
         MVC   0(9,R1),=X'F02120202020E5F0F0' EDIT MASK       A12/21/78
*                         . G 0 0 0 0 V 0 0                   A12/21/78
         L     R4,CURGEN           GET NEXT GENERATION NUMBER A12/21/78
         CVD   R4,DECW             CONVERT TO PACKED          A12/21/78
         ED    0(6,R1),DECW+5      CONVERT TO EBCDIC          A12/21/78
         MVC   0(2,R1),=C'.G'      MOVE IN REST OF QUALIFIER  A12/21/78
         LOCATE CAMLST             FIND VOLSERS FOR GENERATIONA12/21/78
*                                  FROM SYSTEM CATALOG        A12/21/78
         LTR   R15,R15             CHECK CATALOG RETURN CODE  A12/21/78
         BZ    LOCATEOK                                       A12/21/78
         WTO   'SMF108I SMFCOPY - LOCATE FAILED - NONZERO RETURN CODE',X
               ROUTCDE=11
         ABEND 108,DUMP
LOCATEOK MVC   JFCBVOL(1),CATENTRY+1 MOVE NUMBER OF VOLUMES   A12/21/78
         MVI   JFCBVOLS,C' '       CLEAR JFCB VOLUME LIST     A12/21/78
         MVC   JFCBVOLS+1(29),JFCBVOLS                        A12/21/78
         LA    R6,CATENTRY+2       START OF VOLUME ENTRIES    D12/21/78
         LA    R8,JFCBVOLS                                    A12/21/78
         LH    R7,CATENTRY         TOTAL NUMBER OF VOLUMES    A12/21/78
         CH    R7,=H'5'            CHECK FORE OVER 5 VOLUMES  A12/21/78
         BNH   MOVEVOLS
         WTO   'SMF109I SMFCOPY - OVER 5 TAPES FOR GENERATIONS',       X
               ROUTCDE=11                                     A12/21/78
         ABEND 109,DUMP
MOVEVOLS MVC   0(6,R8),4(R6)       MOVE A VOLSER TO JFCB      A12/21/78
         LA    R8,6(R8)            BUMP TO NEXT JFCB ENTRY    A12/21/78
         LA    R6,12(R6)           BUMP TO NEXT CATALOG ENTRY A12/21/78
         BCT   R7,MOVEVOLS         DO UNTIL NO MORE VOLUMES   A12/21/78
         SPACE 2                                              A12/21/78
         OPEN  (BASEIN,INPUT),TYPE=J                          A12/21/78
         TM    BASEIN+48,X'10'     CHECK IF OPENED OK ?       A12/21/78
         BO    READBASE            YIP - SKIP WTO             A12/21/78
         WTO   'SMF110I SMFCOPY - OPEN FAILED FOR DDNAME=BASEIN'       X
               ROUTCDE=11                                     A12/21/78
         ABEND 110,DUMP
READBASE L     R10,RECAD           GET SMF RECORD ADDRESS     A12/21/78
         GET   BASEIN,(R10)        READ SMF RECORD            A12/21/78
         BAL   R9,PROCREC          PROCESS RECORD             A12/21/78
         B     READBASE            AND KEEP ON READING        A12/21/78
         EJECT                                                A12/21/78
**************************************************************A12/21/78
*                                                                     *
*   EODBASE: END OF GENERATION, CLOSE FILE AND CHECK FOR MORE         *
*            GENERATIONS TO GO                                        *
*                                                                     *
***********************************************************************
EODBASE  CLOSE (BASEIN)            CLOSE CURRENT GENERATION   A12/21/78
         L     R4,CURGEN           GET CURRENT GENERATION #   A12/21/78
         LA    R4,1(R4)            INCREMENT                  A12/21/78
         ST    R4,CURGEN           SAVE NEW GEN NUMBER        A12/21/78
         C     R4,ENDGEN           CHECK IF PAST LAST GEN     A12/21/78
*                                  NUMBER NEEDED              A12/21/78
         BNH   NEXTGEN             NO - GO PROCESS NEXT GEN   A12/21/78
         SPACE 2                                              A12/21/78
CHEKHOLD CP    SELDATE2(3),CHECKHLD(3) CHECK IF DATA IN HOLD  A12/21/78
         BL    REPORT              NO - FORGET HOLD FILE      A12/21/78
         SPACE 2                                              A12/21/78
OPENHOLD OPEN  (HOLDIN,INPUT)      OPEN HOLD FILE             A12/21/78
         TM    HOLDIN+48,X'10'     CHECK FOR OPEN OK          A12/21/78
         BO    READHOLD            YIP - SKIP WTO             A12/21/78
         WTO   'SMF111I SMFCOPY - OPEN FAILED FOR DDNAME=HOLDIN',      X
               ROUTCDE=11                                     A12/21/78
         ABEND 111,DUMP                                       A12/21/78
READHOLD L     R10,RECAD           GET SMF RECORD ADDRESS     A12/21/78
         GET   HOLDIN,(R10)        READ RECORD                A12/21/78
         BAL   R9,PROCREC          PROCESS RECORD             A12/21/78
         B     READHOLD            AND KEEP ON READING        A12/21/78
         SPACE 2                                              A12/21/78
EODHOLD  CLOSE (HOLDIN)            CLOSE HOLD FILE            A12/21/78
         B     REPORT                                         A12/21/78
         EJECT                                                A12/21/78
**************************************************************A12/21/78
*                                                                     *
*   REPORT: WRITE OUT STATISTICS REPORT                               *
*                                                                     *
***********************************************************************
REPORT   L     R10,RECAD           GET RECORD ADDRESS         A12/21/78
         FREEMAIN R,LV=32768,A=(R10),SP=0 FREE RECORD AREA    A12/21/78
         PUT   SYSPRINT,HEADER1    PRINT HEADERS
         PUT   SYSPRINT,HEADER2
         LA    R6,0                INITIALIZE FOR LOOP
         LA    R7,51
NEXTLINE LA    R8,5                5 COLUMNS PER LINE
         LA    R9,PRTLINE          FIRST COLUMN ADDRESS
         LR    R10,R6              FIRST COLUMN RECORD NUMBER
NEXTCOL  CVD   R10,DECW            CONVERT RECORD NUMBER TO PACKED
         MVC   0(4,R9),=X'40202120' MOVE IN EDIT MASK
         ED    0(4,R9),DECW+6      CONVERT RECORD NUMBER TO EBCDIC
         LA    R3,RECTYPTB(R10)    ADDRESS OF RECORD TYPE ENTRY
         MVC   4(1,R9),0(R3)       SET ENTRY SELECTION FLAG
         LR    R3,R10              LOAD RECORD TYPE NUMBER
         SLL   R3,3                TIMES 8 FOR OFFSET INTO RECCNTTB
         LA    R3,RECCNTTB(R3)     ADDRESS OF RECORD ENTRY
         L     R1,0(R3)            RECORD-IN COUNT
         CVD   R1,DECW             CONVERT TO PACKED
         MVC   6(8,R9),=X'4020202020202020' MOVE EDIT MASK TO COLUMN
         ED    6(8,R9),DECW+4      CONVERT TO EBCDIC
         L     R1,4(R3)            RECORD-OUT COUNT
         CVD   R1,DECW             CONVERT TO PACKED
         MVC   15(8,R9),=X'4020202020202020' MOVE EDIT MASK TO COLUMN
         ED    15(8,R9),DECW+4     CONVERT TO EBCDIC
         LA    R10,51(R10)         SET UP FOR NEXT COLUMN
         LA    R9,25(R9)
         BCT   R8,NEXTCOL          DO UPTO FIVE COLUMNS
         PUT   SYSPRINT,PRTLINE
         LA    R6,1(R6)            NEXT RECORD NUMBER
         BCT   R7,NEXTLINE         DO UPTO 51 LINES
         MVI   PRTLINE,C' '        CLEAR PRINT LINE
         MVC   PRTLINE+1(132),PRTLINE
         MVC   PRTLINE+101(3),=C'255' DO RECORD TYPE 255 ALONE
         MVC   PRTLINE+104(1),RECTYPTB+255 SET SELECTION FLAG
         L     R1,RECCNTTB+(255*8) GET RECORD-IN COUNT
         CVD   R1,DECW             CONVERT TO PACKED
         MVC   PRTLINE+106(8),=X'4020202020202020' MOVE IN EDIT MASK
         ED    PRTLINE+106(8),DECW+4 CONVERT TO EBCDIC
         L     R1,RECCNTTB+(255*8)+4 GET RECORD-OUT COUNT
         CVD   R1,DECW             CONVERT TO PACKED
         MVC   PRTLINE+115(8),=X'4020202020202020' MOVE IN EDIT MASK
         ED    PRTLINE+115(8),DECW+4 CONVERT TO EBCDIC
         PUT   SYSPRINT,PRTLINE    PRINT LINE
         MVC   PRTLINE+1(7),=C'PARM='''''
         L     R2,PARMAD           GET PARM FIELD ADDRESS     A12/21/78
         LH    R3,0(R2)            PICK UP PARM FIELD LENGTH
         LTR   R3,R3               CHECK FOR NULL PARM
         BZ    PUTTOTAL
         BCTR  R3,0
         EX    R3,MOVEPARM         MOVE PARM FIELD
         LA    R3,PRTLINE+8(R3)    ADDRESS OF END OF PARM IN LINE
         MVI   0(R3),C''''         PUT IN ENDING QUOTE
PUTTOTAL MVC   PRTLINE+101(5),=C'TOTAL' MOVE IN TOTAL LABEL
         L     R1,RECCNTIN         GET TOTAL RECORD-IN COUNT
         CVD   R1,DECW             CONVERT TO PACKED
         MVC   PRTLINE+106(8),=X'4020202020202020' MOVE IN EDIT MASK
         ED    PRTLINE+106(8),DECW+4 CONVERT TO EBCDIC
         L     R1,RECCNTOT         GET TOTAL RECORD-OUT COUNT
         CVD   R1,DECW             CONVERT TO PACKED
         MVC   PRTLINE+115(8),=X'4020202020202020' MOVE IN EDIT MASK
         ED    PRTLINE+115(8),DECW+4 CONVERT TO EBCDIC
         PUT   SYSPRINT,PRTLINE     PRINT LINE
         CLOSE (SYSPRINT)
         $RETURN
         SPACE 3
MOVEPARM MVC   PRTLINE+7(0),2(R2)   *** EXECUTED INSTRUCTION ***
         EJECT
**************************************************************A12/21/78
*                                                                     *
*   PROCREC: PROCESS RECORD. UPDATE COUNTERS AND DECIDE WHETHER OR    *
*            NOT TO WRITE RECORD TO SMFOUT                            *
*                                                                     *
***********************************************************************
PROCREC  L     R3,RECCNTIN        INCREMENT                   C12/21/78
         LA    R3,1(R3)                     RECORD-IN
         ST    R3,RECCNTIN                            COUNT
         LA    R3,0
         L     R10,RECAD          GET RECORD ADDRESS          A12/21/78
         IC    R3,5(R10)          GET RECORD TYPE
         SLL   R3,3               TIMES 8 FOR OFFSET IN RECCNTTB
         L     R4,RECCNTTB(R3)    LOAD RECORD-IN COUNT
         LA    R4,1(R4)           INCREMENT
         ST    R4,RECCNTTB(R3)    SAVE NEW RECORD-IN COUNT ENTRY
         CP    SELDATE1(3),11(3,R10) CHECK DATE
         BH    PROCEND            OUT OF DATE RANGE
         CP    SELDATE2(3),11(3,R10) CHECK DATE
         BL    PROCEND            OUT OF DATE RANGE
         LA    R3,0
         IC    R3,5(R10)          GET RECORD TYPE
         LA    R3,RECTYPTB(R3)    ADDRESS OF RECORD TYPE ENTRY
         CLI   0(R3),C'*'         CHECK IF SELECTED
         BNE   PROCEND            NO - SKIP RECORD
         LA    R3,0
         IC    R3,5(R10)
         SLL   R3,3               TIMES 8 FOR OFFSET IN RECCNTB
         L     R4,RECCNTTB+4(R3)  LOAD RECORD-OUT COUNT
         LA    R4,1(R4)           INCREMENT
         ST    R4,RECCNTTB+4(R3)  SAVE RECORD-OUT COUNT ENTRY
         L     R4,RECCNTOT        INCREMENT
         LA    R4,1(R4)                     RECORD-OUT
         ST    R4,RECCNTOT                             COUNT
         PUT   SMFOUT,(R10)        WRITE RECORD TO SMFOUT
PROCEND  BR    R9                  RETURN TO CALLER           A12/21/78
         EJECT
***********************************************************************
*                                                                     *
*   DECNUM: CONVERTS EBCDIC INTEGER TO BINARY                         *
*                                                                     *
*           INPUT:  R3 POINTS TO FIRST DIGIT OF INTEGER               *
*                   R14 RETURN ADDRESS TO CALLER                      *
*                                                                     *
*           OUTPUT: R3 POINTS TO FIRST NON-NUMERIC CHARACTER          *
*                   R4 CONTAINS VALUE IN BINARY                       *
*                   R0,R1 AND R2 ARE CLOBBERED                        *
*                                                                     *
***********************************************************************
DECNUM   CLI   0(R3),C'0'          FIRST CHARACTER NUMERIC ?
         BL    INVPARM             NO - INVALID PARM FIELD
         LA    R4,0                SET UP REGISTERS FOR CONVERSION
         L     R2,PARMAD           GET ADDRESS OF PARM FIELD  A12/21/78
         LH    R1,0(R2)            GET PARM LENGTH            A12/21/78
         LA    R1,2(R1,R2)         COMPUTE END ADDRESS        A12/21/78
         LA    R0,0                                           C12/21/78
NXTDIGIT IC    R0,0(R3)            PICK UP NEXT DIGIT         C12/21/78
         SLL   R0,28               SHIFT OUT ZONE X'FX'       C12/21/78
         SRL   R0,28               SHIFT BACK                 C12/21/78
         MH    R4,=H'10'           10 TIMES CURRENT TOTAL
         AR    R4,R0               PLUS THIS DIGIT
         LA    R3,1(R3)            BUMP TO NEXT DIGIT
         CR    R3,R1               CHECK IF END OF PARM       A12/21/78
         BNLR  R14                 YIP - RETURN TO CALLER     A12/21/78
         CLI   0(R3),C'0'          NO - CHECK IF STILL NUMERIC
         BNL   NXTDIGIT            YIP - GO DO SOME MORE
         BR    R14                 NO - RETURN TO CALLER
         EJECT
**************************************************************A12/21/78
*                                                                     *
*   COMPDAYS: COMPUTE DAYS SINCE JANUARY 1,1900 AND DATE IN DECW      *
*                                                                     *
***********************************************************************
COMPDAYS STM   R2,R3,28(R13)       SAVE REGISTERS
         CVB   R1,DECW             CONVERT DATE TO BINARY     A12/21/78
         LA    R0,0                CLEAR FOR DIVIDE           A12/21/78
         D     R0,=F'1000'         SPLIT DAYS AND YEAR        A12/21/78
         BCTR  R1,0                YEARS MINUS ONE            A12/21/78
         LR    R3,R0               SAVE DAYS THIS YEAR        A12/21/78
         LR    R2,R1               SAVE YEARS MINUS ONE       A12/21/78
         M     R0,=F'365'          365 DAYS PER YEAR          A12/21/78
         SRA   R2,2                DIVIDED BY 4 EQUALS        A12/21/78
*                                  NUMBER OF LEAP DAYS        A12/21/78
         AR    R1,R2               ADD 365 * (YEARS-1) +      A12/21/78
         AR    R1,R3               LEAP DAYS + DAYS THIS YEAR A12/21/78
         LM    R2,R3,28(R13)       RESTORE REGISTERS
         BR    R14                 RETURN TO CALLER           A12/21/78
         EJECT
***********************************************************************
*                                                                     *
*   DATA AREAS AND CONSTANTS                                          *
*                                                                     *
***********************************************************************
DECW     DS    D
SELDATE1 DC    PL3'0'              SELECTION DATE START
SELDATE2 DC    PL3'99999'          SELECTION DATE END
RUNDATE  DC    PL3'0'              TODAY'S DATE
RUNDATE2 DC    PL3'0'              TODAY'S DATE (ADJUSTED)
SEL1DAYS DC    F'0'                DAYS BETWEEN JAN 1,1900 AND SELECT
SEL2DAYS DC    F'0'                DAYS BETWEEN JAN 1,1900 AND SELECT
BASEDAYS DC    F'0'                DAYS BETWEEN JAN 1,1900 AND BASE
PARMAD   DC    F'0'                ADDRESS OF PARMFIELD
RECAD    DC    F'0'                ADDRESS OF GETMAIN RECORD AREA
QUALAD   DC    F'0'                ADDRESS OF DSNAME QUALIFIER
INTERVAL DC    F'7'                DAYS PER GENERATION
CURGEN   DC    F'0'                CURRENT GENERATION BEING PROCESSED
ENDGEN   DC    F'0'                LAST GENERATION TO BE PROCESSED
RECTYPTB DC    256C' '             RECORD TYPE TABLE (C'*'=COPY)
RECCNTTB DC    256F'0',256F'0'     RECORD COUNT TABLE
RECCNTIN DC    F'0'                RECORDS READ FROM SMFIN
RECCNTOT DC    F'0'                RECORDS WRITTEN TO SMFOUT
BASESPEC DC    X'00'               X'FF' IF BASE= WAS SPECIFIED
TYPESPEC DC    X'00'               X'FF' IF TYPE= WAS SPECIFIED
FINDBLNK DC    (X'40')X'00',X'FF',(X'FF'-X'40'-1)X'00'
CAMLST   CAMLST NAME,JFCB,,CATENTRY
CATENTRY DC    265C' '
JFCB     DC    CL176' '
JFCBVOL  EQU   JFCB+X'75'
JFCBVOLS EQU   JFCB+X'76'
HEADER1  DC    CL133'1 MM/DD/YY                        *** SMFCOPY ***'
HEADER2  DC    C'-',5CL25'TYPE    READS   WRITES   ',CL7' '
PRTLINE  DC    CL133' '
***********************************************************************
*                                                                     *
*   CHECKPOINT RECORD                                                 *
*                                                                     *
***********************************************************************
         DS    0F
CHECKREC DC    C' '
CHECKDAT DC    PL3'0'
CHECKGEN DC    F'0'
CHECKDSN DC    CL44' '
CHECKHLD DC    PL3'0'
CHECKBAS DC    PL3'0'
         DC    CL22' '
         LTORG
         EJECT
***********************************************************************
*                                                                     *
*   DCB AREAS                                                         *
*                                                                     *
***********************************************************************
SMFIN    DCB   DDNAME=SMFIN,MACRF=GM,DSORG=PS,EODAD=EODIN
CHECKPT  DCB   DDNAME=CHECKPT,MACRF=GM,DSORG=PS,LRECL=80
BASEIN   DCB   DDNAME=BASEIN,MACRF=GM,DSORG=PS,EODAD=EODBASE,          X
               EXLST=EXLST
         DS    0F
EXLST    DC    X'87',AL3(JFCB)
HOLDIN   DCB   DDNAME=HOLDIN,MACRF=GM,DSORG=PS,EODAD=EODHOLD
SMFOUT   DCB   DDNAME=SMFOUT,MACRF=PM,DSORG=PS
SYSPRINT DCB   DDNAME=SYSPRINT,MACRF=PM,DSORG=PS,RECFM=FBA,LRECL=133,  X
               BLKSIZE=133
         END
