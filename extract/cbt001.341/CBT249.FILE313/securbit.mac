*          DATA SET VTOC1      AT LEVEL 001 AS OF 09/18/73
VTOC1    CSECT
***********************************************************************
*                                                                     *
*        .PROGRAM NAME * VTOC1                                        *
*                                                                     *
*        .PROGRAMMER   * DON HIGGINBOTHAM                             *
*                                                                     *
*        .FUNCTION     * TO INSURE THAT THE SECURITY-PROTECT-BIT      *
*                        OF  A  FORMAT1 DSCB IS SET TO THE DESIRED    *
*                        SETTING, FOR ANY OR ALL DATASETS ON THE      *
*                        DUTY PACK                                    *
*                                                                     *
*        .INPUT        * PARM FIELD ON EXEC CARD -  (OPTIONAL)        *
*                        PARM=A                                       *
*                        A = DEFAULT CODE FOR DATASETS ON DUTY VOLUME *
*                             (SEE EQUATE LIST FOR VALUES)            *
*                          = EQSETOFF   SET PROTECT-BITS OFF          *
*                          = EQSETWR    SET WRITE/READ PROTECTION     *
*                          = EQSETW     SET WRITE ONLY PROTECTION     *
*                          = ANYTHING ELSE,OR OMMITTED   NO-CHANGE    *
*                                                                     *
*                      * SAMPLE DD CARD FOR DUTY VOLUME               *
*                        //SYSUT1 DD UNIT=2314,VOL=SER=MEG110,DISP=OLD*
*                                                                     *
*                      * SAMPLE DD CARD FOR CARDIMAGE INPUT           *
*                        //SYSIN  DD *                                *
*                                                                     *
*                      * INPUT CARD(S)  (MUST BE SORTED COLS 1-44)    *
*                        COLS 01-44   DATASET PREFIX                  *
*                        COL  72      CODE - TO SET PROTECT-BIT       *
*                                            FOR THIS DATASET         *
*                                            (SEE A UNDER PARMS)      *
*        .OUTPUT       * SAMPLE DD CARD FOR CARD IMAGE OUTPUT         *
*                        //SYSPUNCH DD SYSOUT=B                       *
*                                                                     *
*                      * OUTPUT CARD                                  *
*                        FORMAT SAME AS INPUT CARD.                   *
*                        AN OUTPUT CARD IS PUT FOR EACH DATASET       *
*                        WHOSE PROTECT-BIT HAS BEEN CHANGED.          *
*                        COL 72 IS SET TO INDICATE THE ORIGINAL CODE. *
*                                                                     *
***********************************************************************
         EJECT
***********************************************************************
*                                                                     *
*        .RESULTS      * ALL DATASETS NAMED BY INPUT CARDS            *
*                        WILL HAVE THEIR PROTECT-BITS SET             *
*                        ACCORDING TO CODE IN COL 72.                 *
*                                                                     *
*                      * ALL OTHER DATASETS ON THE DUTY VOLUME        *
*                        WILL HAVE THEIR PROTECT-BITS SET             *
*                        ACCORDING TO THE DEFAULT CODE.               *
*                                                                     *
*                        NOTE 1 - CERTAIN DATASETS SUCH AS            *
*                                 TEMPORARY DATASETS WILL NOT         *
*                                 HAVE THEIR PROTECT-BITS SET ON.     *
*                                 REGARDLESS OF DEFAULT CODE          *
*                                                                     *
*                        NOTE 2 - DEFAULT CODE DESCRIBED UNDER PARM.  *
*                                                                     *
*        .SAMPLE         //GO EXEC PGM=VTOC1                          *
*                        //SYSUT1 DD UNIT=2314,VOL=SER=MEGOS1,DISP=OLD*
*                        //SYSPUNCH DD SYSOUT=A                       *
*                        //SYSIN    DD *                              *
*                        SYS1.LINKLIB                                 *
*                        SYS1.PROCLIB                                 *
*                        /*                                           *
***********************************************************************
         EJECT
         ENTRY1 SAVEA
*
** INITIALIZE VALUES FOR PROGRAM
*
         MVI   $EOF,X'00'
         MVI   $DEFAULT,C'S'
         LR    R3,R1
*
**
*        OPEN  (SNAP,(OUTPUT))
         EJECT
*
** PROCESS PARM FIELD
*
USEPARM  DS    0H
         L     R2,0(R3)
         L     R10,4(R3)
         CLI   1(R2),X'00'
         BE    UPARM50
         CLI   1(R2),X'01'
         BE    UPARM40
         BAL   R15,EXITBAD
*
UPARM40  MVC   $DEFAULT(1),2(R2)
*
         CLI   $DEFAULT,EQSETOFF
         BE    UPARM60
         CLI   $DEFAULT,EQSETW
         BE    UPARM60
         CLI   $DEFAULT,EQSETWR
         BE    UPARM60
UPARM50  EQU   *
         MVI   $DEFAULT,EQNOCHG    SET $DEFAULT TO NO-CHANGE
UPARM60  EQU   *
         EJECT
         LTR   R2,R2
         BM    USEPSWD
*      PROCESS DDNAMES FROM 2ND PARM FIELD
         USING DDNAMES,10
USEDD    DS    0H
         CLC   DDL(2),=H'40'
         BL    UDD900
         CLC   DDSYSIN(8),=XL8'00'
         BE    UDD030
         MVC   DCBIN+DCBDDNAM(8),DDSYSIN     REPLACE SYSIN DD NAME.
UDD030   CLC   DDL(2),=H'56'
         BL    UDD900
         CLC   DDSYSPCH(8),=XL8'00'
         BE    UDD040
         MVC   DCBOUT+DCBDDNAM(8),DDSYSPCH   REPLACE SYSPUNCH DD NAME.
UDD040   CLC   DDL(2),=H'64'
         BL    UDD900
         CLC   DDSYSUT1(8),=XL8'00'
         BE    UDD900
         MVC   DCBVTOC+DCBDDNAM(8),DDSYSUT1  REPLACE SYSUT1 DD NAME.
UDD900   EQU   *
         B     OPEN1
         SPACE 4
*
** USER MUST TYPE IN PASSWORD TO USE THIS PROGRAM.
USEPSWD  DS    0H
         LA    R8,2
UPSWD10  XC    ECBWTOR(4),ECBWTOR
         WTOR  'REPLY WITH PASSWORD FOR USE OF VTOC1',PSWD,8,ECBWTOR
*
         WAIT  1,ECB=ECBWTOR
*                             TEST PASSWORD SUPPLIED BY USER
         PROTECT PPB
         ST    R15,PPBRCODE
*
         LTR   R15,R15
         BZ    OPEN1          BRANCH IF PASSWORD CORRECT.
         C     R15,=F'44'
         BE    OPEN1          BRANCH IF NO PASSWORD DATASET.
*
         BCT   R8,UPSWD10
         CLC   PSWD(8),=CL8'DFHVTOC1'
         BE    OPEN1
         ABEND 1234,DUMP
         EJECT
*
** OPEN IN-DATASET,OUT-DATASET
OPEN1    DS    0H
         OPEN  (DCBIN,(INPUT),DCBOUT,(OUTPUT))
*
         TM    DCBIN+DCBOFLGS,X'10'
         BO    OPEN120
         BAL   R15,EXITBAD
OPEN120  EQU   *
         TM    DCBOUT+DCBOFLGS,X'10'
         BO    OPEN130
         BAL   R15,EXITBAD
OPEN130  EQU   *
*
         GET   DCBIN,IN+1
         B     RESET2
RESET1   CLI   $DEFAULT,EQNOCHG
         BE    CLOSE2              BRANCH TO CLOSE2 IF NO CHANGE
RESET2   MVI   ENDINX1+1,X'00'     NOP THE EOF-BRANCH-TO-RESET1
         EJECT
*
** OPEN VTOC DATASET
         RDJFCB (DCBVTOC)
         MVI   JFCB,X'04'
         MVC   JFCB+1(43),JFCB
*
         OPEN  (DCBVTOC,(UPDAT)),TYPE=J
*
         TM    DCBVTOC+DCBOFLGS,X'10'
         BO    OPEN220
         BAL   R15,EXITBAD
OPEN220  EQU   *
*
         MVC   RNAME,JFCB+118
         ENQ   (QNAME,RNAME,E,6,SYSTEM)
*
** PROCESS VTOC DATASET
READ     DS    0H
         READ  DECB1,SF,DCBVTOC,DSCBAREA,MF=E
         CHECK DECB1
*
         CLI   DS1FMTID,X'F1'
         BNE   READ
         B     USEFMT1
         EJECT
*
** PROCESS FORMAT1 DSCB
*
USEFMT1  DS    0H
         CLI   $EOF,EQEOF     CHECK IF ANY MORE IN-CARDS.
         BE    UFMT150         BRANCH IF NO.
*
** COMPARE DSNAME PREFIX (ALL LEADING NON-BLANK CHARACTERS FROM IN+1)
UFMT108  LA    R2,IN+1
UFMT110  LA    R2,1(R2)
         CLI   0(R2),C' '
         BNE   UFMT110
         LA    R3,IN+2
         SR    R2,R3
         STC   R2,UFMT120+1
UFMT120  CLC   IN+1(1),DS1DSNAM
         BNE   UFMT140
UFMT126  EQU   *
** DATASET NAMES ARE EQUAL, SETUP DUTY CARD
         MVC   CARD+1(80),IN+1
** CHECK IF COMPLETE PACK IS TO BE SCANNED FOR THIS PREFIX
         CLI   CARD+71,C'C'
         BE    UFMT130        BRANCH  IF YES
*
         GET   DCBIN,IN+1
*
** WHEN DATASET PREFIXED ARE EQUAL GET BIT-SET-SWITCH FROM IN-COL72.
UFMT130  CLI   CARD+72,EQSETOFF
         BE    SETOFF
         CLI   CARD+72,EQSETWR
         BE    SETWR
         CLI   CARD+72,EQSETW
         BE    SETW
         B     READ
*
** WHEN DATASET PREFIXES NOT EQUAL USE DEFAULT BIT-SET-SWITCH.
UFMT140  CLI   $DEFAULT,EQNOCHG
         BE    READ
*
** WHEN NO MORE IN-CARDS USE DEFAULT BIT-SET-SWITCH
UFMT150  CLI   $DEFAULT,EQSETOFF
         BE    SETOFF
         CLI   $DEFAULT,EQSETWR
         BE    SETWR
         CLI   $DEFAULT,EQSETW
         BE    SETW
         B     ENDVTOC
*
**  SETUP TO TURN OFF ALL PROTECT-BITS
SETOFF   MVI   PROTCODE,EQPOFF
         B     SETPROT
*
**  SETUP TO TURN ON WRITE/READ PROTECT-BIT
SETWR    MVI   PROTCODE,EQPWR
         B     CHEKDSN
*
**  SETUP TO TURN ON WRITE ONLY PROTECT-BITS
SETW     MVI   PROTCODE,EQPW
*
** DO NOT PROTECT GARBAGE TYPE DATASETS
CHEKDSN  DS    0H
         CLC   DS1DSNAM(3),=CL8'SYSNNNNN'
         BNE   CKDSN10
         CLC   DS1DSNAM+8(2),=CL8'.TXXXXXX'
         BE    READ                          BRANCH IF TEMP DATASET
CKDSN10  CLC   DS1DSNAM(7),=CL8'**SYSUT1'
         BE    READ                          BRANCH IF IEHMOVE DATASET
         CLC   DS1EXT1(10),=XL12'00'
         BE    READ                          BRANCH IF MODEL DATASET
         CLC   DS1DSNAM(13),=CL16'SYS1.SYSJOBQE'
         BE    READ
         BE    READ
         SPACE 2
*
** SETPROT  - INSURE PROTECT-BITS ARE SET AS DESIRED   '
*               PROTCODE=X'00' MEANS NO PROTECTION
*                       X'10' MEANS WRITE/READ PROTECTION
*                       X'14' MEANS WRITE ONLY ONLY PROTECTION
SETPROT  DS    0H
         MVC   PROTBYTE(1),DS1DSIND     CHECK IF PROTECT-BITS
         NI    PROTBYTE,EQPRTBIT         ALREADY SET AS DESIRED.
         CLC   PROTBYTE(1),PROTCODE
         BE    READ                       BRANCH IF YES
*
         NI    DS1DSIND,EQPMASK
         OC    DS1DSIND(1),PROTCODE     SET THE PROTECT-BITS
         TM    PROTBYTE,EQPRTBIT        SAVE OLD SETTING FOR OUT-CARD
         BZ    SETPROT6                      OFF
         BO    SETPROT8                      SETW
         MVI   OUT+72,EQSETWR                SETWR
         B     PUTOUT
SETPROT6 MVI   OUT+72,EQSETOFF
         B     PUTOUT
SETPROT8 MVI   OUT+72,EQSETW
*
** PUT AN OUT-CARD
PUTOUT   DS    0H
         MVC   OUT+1(44),DS1DSNAM
         PUT   DCBOUT,OUT+1
*
** WRITE THE UPDATED FORMAT1 DSCB BACK TO VTOC.
WRITEBAK DS    0H
         WRITE DECB1,SF,DCBVTOC,DSCBAREA,MF=E
         CHECK DECB1
         B     READ
         EJECT
*
** END-FILE ON IN-DATASET
ENDIN    MVI   $EOF,EQEOF
ENDINX1  B     RESET1
         B     UFMT130
*
** END OF VTOC DATASET
ENDVTOC  EQU   *
         DEQ   (QNAME,RNAME,6,SYSTEM)
*
CLOSE1   CLOSE DCBVTOC
*
CLOSE2   CLOSE (DCBIN,DISP,DCBOUT,DISP)
         EJECT
*
EXITOK   LA    R15,0
EXIT     EXITRC
*
EXITBAD  DS    0H
         SNAP  DCB=SNAP,ID=99,PDATA=ALL
         LA    R15,16
         B     EXIT
         EJECT
*
** PPB - PROTECT.PARAMETER BLOCK - PROTECT MACRO PARAMETER LIST
PPB      DS    0F
         DC    X'04',AL3(PSWDBUF)
         DC    AL1(44),AL3(PSWDDSN)
         DC    AL4(PSWD)
PPBRCODE DC    F'0'
*
PSWD     DC    CL8' '
PSWDBUF  DC    CL80' '
PSWDDSN  DC    CL44'SYS1.SVCLIB'
*
ECBWTOR  DC    F'0'
         EJECT
*
**
         WRITE DECB1,SF,DCBVTOC,DSCBAREA,MF=L
SAVEA    DS    18F
DSCBAREA DS    35F
JFCB     DS    44F
JFCBLIST DC    0F'0',X'87',AL3(JFCB)
*
QNAME    DC    CL8'SYSVTOC '
RNAME    DS    CL6
         EJECT
***********************************************************************
*
DCBVTOC  DCB   DSORG=PS,MACRF=R,DDNAME=SYSUT1,BLKSIZE=96,KEYLEN=44,    X
               RECFM=FS,EXLST=JFCBLIST,EODAD=ENDVTOC
         EJECT
IN       DS    CL81
OUT      DC    CL81' '
CARD     DS    CL81
$DEFAULT DC    X'00'
$EOF     DC    X'00'
PROTBYTE DC    X'00'          DSCB PROTECT-BYTE VALUE
PROTCODE DC    X'00'          VALUE TO SET DSCB PROTECT BYTE TO.
         DS    0F
         EJECT
***********************************************************************
*
DCBOUT   DCB   DDNAME=SYSPUNCH,DSORG=PS,MACRF=PM,RECFM=F,              X
               LRECL=80,BFTEK=S,EROPT=ACC,BLKSIZE=80
         EJECT
***********************************************************************
*
DCBIN    DCB   DDNAME=SYSIN,DSORG=PS,MACRF=GM,RECFM=FB,                X
               LRECL=80,BFTEK=S,EODAD=ENDIN
         EJECT
***********************************************************************
*
SNAP     DCB   BFTEK=S,DDNAME=SYSUSNAP,DSORG=PS,LRECL=125,MACRF=W,     X
               RECFM=VBA,BLKSIZE=1632
         EJECT
*
** EQUATES * MAINTENANCE PROGRAMMER - MANY OF THESE EQUATES ARE
*            RELEASE DEPENDANT
*
EQUATES  EQU   *
*
** DCB EQUATES
DCBDDNAM EQU   40
DCBOFLGS EQU   48
*
** DSCB EQUATES
DS1DSNAM EQU   DSCBAREA
DS1FMTID EQU   DSCBAREA+44
DS1DSIND EQU   DSCBAREA+93
DS1EXT1  EQU   DSCBAREA+105
*
**
EQEOF    EQU   1
EQSETOFF EQU   X'F0'    0     SET PROTECT-BITS OFF
EQSETW   EQU   X'F1'    1     SET WRITE-ONLY PROTECTION
EQSETWR  EQU   X'F2'    2     SET WRITE/READ PROTECTION
EQPRTBIT EQU   X'14'          PROTECT-BITS-EXTRACT MASK
EQPOFF   EQU   X'00'          PROTECT-BITS-OFF MASK
EQPW     EQU   X'14'          PROTECT-BITS-WRITE-ONLY-MASK
EQPWR    EQU   X'10'          PROTECT-BITS-WRITE/READ MASK
EQNOCHG  EQU   X'FF'          NO-CHANGE
EQPMASK  EQU   X'EB'
         EJECT
*
** LITERALS
*
LTORG    DS    0D
         LTORG
         EJECT
DDNAMES  DSECT
DDL      DS    CL2
         DS    CL8
         DS    CL8
         DS    CL8
         DS    CL8
DDSYSIN  DS    CL8            *
DDSYSPRT DS    CL8            *
DDSYSPCH DS    CL8
DDSYSUT1 DS    CL8            *
DDSYSUT2 DS    CL8
DDSYSUT3 DS    CL8
DDSYSUT4 DS    CL8
LDDNAMES EQU   *-DDL-2
LDDNAMES EQU   *-DDL-2
         END
