         PRINT OFF
         MACRO
&NAME    INIT &BASE=3,&REGS=Y,&PATCH=3,&RENT=N,&SAVE=Y
         AIF   ((&BASE LT 13) AND (&BASE GT 1)).N020
         MNOTE 12,'INVALID BASE REGISTER'
         MEXIT
.N020    ANOP
         PUSH  PRINT
         PRINT ON,GEN
         EJECT
&SYSECT  CSECT
         USING *,15
         B     BEGIN
         DC    AL1(24)
         DC    CL8'&SYSECT'
         DC    CL16'-&SYSDATE-&SYSTIME'
         AIF   ('&RENT' EQ 'Y').N004
MYSAVE   DC    18F'-1'
.N004    ANOP
         AIF   ('&PATCH' EQ '0').N005
PATCH    DC    &PATCH.CL8'*PATCH*'
.N005    ANOP
         AIF   ('&REGS' EQ 'N').N030
         AIF   ('&REGS' EQ 'Y').N010
         MNOTE 4,'REGS OPERAND INVALID. Y SUBSTITUTED'
.N010    ANOP
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
.N030    ANOP
BEGIN    DS   0H
         STM   14,12,12(13)
         LR    &BASE,15
         DROP  15
         USING &SYSECT,&BASE
         AIF   ('&SAVE' EQ 'N').N003
         AIF   ('&RENT' EQ 'Y').N002
         AIF   ('&RENT' EQ 'N').N001
         MNOTE 4,'RENT OPERAND INVALID. N SUBSTITUTED'
.N001    ANOP
         ST    13,MYSAVE+4
         LR    15,13
         LA    13,MYSAVE
         ST    13,8(15)
         AGO   .N003
.N002    ANOP
         GETMAIN R,LV=72
         ST    13,4(1)
         ST    1,8(13)
         LR    13,1
.N003    ANOP
         POP   PRINT
         EJECT
         MEND
         PRINT ON
*  MODULE NAME:         VSAMLST3     (REL. 1.1  08/10/79)
*
*  MODULE DESCRIPTION:  VSAM CATALOG LIST UTILITY - SUMMARY REPORT
*
*  RETURN LINKAGE:      RETURN (14,12),RC=0
*
*  LINKAGE TABLE:       NONE - SINGLE ENTRY
*
*  PARAMETERS:          R1 POINTS TO A PARAMETER LIST ALIGNED ON A
*                       FULL WORD BOUNDARY.
*                        WORD 1 - ADDRESS OF VSAM CATALOG NAME
*                        WORD 2 - ADDRESS OF CTLGPL-B
*                        WORD 3 - ADDRESS OF MSGFILE DCB
*                        WORD 4 - ADDRESS OF RPTFIL1 DCB
*                        WORD 5 - ADDRESS OF WORK AREA 'B'
*
*  EXIT:                RC=00 - SUCCESSFUL
*
*  MODULE FUNCTION:     NORMAL MODE - R0=00
*                        FOR EACH VSAM ENTRY SPECIFIED IN THE PARAMETER
*                        LIST, THIS MODULE FORMATS IT FOR THE VSAM
*                        CATALOG SUMMARY REPORT.  FOR ENTRIES WITHOUT
*                        ANY VOLUME INFORMATIONS, IT WILL USE THEIR
*                        ASSOCIATED 'DATA' ENTRIES'.
*                       INIT MODE - R0=04
*                        FOR THE NEW VSAM CATALOG SPECIFIED IN THE
*                        PARAMETER LIST, THIS MODULE RESETS THE TITLES
*                        AND LINE COUNTS FOR THE NEXT REPORT.
*
*  CALLER:              VSAMLST2
*
*  CALLS:               NONE
*
*  SYSTEMS SERVICES:    PUT (QSAM), SVC 26
*
*  MODULE ENVIRONMENT:  OS/VS1, OS/VS2
         TITLE 'VSAMLST3 --- VSAM CATALOG LIST UTILITY SUMMARY REPORT GX
               ENERATOR (2.1)'
*        *-----------------------------------*
*        *   R E G I S T E R   U S A G E S   *
*        *-----------------------------------*
*
*  R0  -  STANDARD LINKAGE
*  R1  -  STANDARD LINKAGE (ADDR OF PARM LIST) & TEMP WORK SPACE
*  R2  -  TEMP WORK SPACE
*  R3  -  TEMP WORK SPACE
*  R4  -  TEMP WORK SPACE
*  R5  -  TEMP WORK SPACE
*  R6  -  NOT USED
*  R7  -  BASE REG FOR DSECT NMDSECT
*  R8  -  BASE REG FOR DSECT CTVOL
*  R9  -  BASE REG FOR DSECT CTLGPLB
*  R10 -  BASE REG FOR DSECT TXTSECT
*  R11 -  RETURN ADDR FOR SUBROUTINES
*  R12 -  BASE REG FOR CSECT VSAMLST3
*  R13 -  STANDARD LINKAGE (ADDR OF SAVE AREA)
*  R14 -  STANDARD LINKAGE (ADDR TO RETURN)
*  R15 -  STANDARD LINKAGE (ADDR OF ENTRY POINT & RETURN CODE)
         SPACE 3
VSAMLST3 CSECT
         INIT  BASE=12
***********************************************************************
*                                                                     *
*  2.1    SUMMARY REPORT GENERATOR                                    *
*                                                                     *
*     FUNCTION:  IF INIT MODE, SET TITLES AND RETURN.                 *
*                ELSE PROCESS ENTRY ACCORDING TO ITS TYPE.            *
*                                                                     *
*     ERRORS:  NONE                                                   *
*                                                                     *
***********************************************************************
         SPACE 3
VCL21    EQU   *
         MVC   PARM9421(20),0(R1)       SAVE 5 FULL WORDS PARM LIST
         SPACE
         L     R9,ACTPL21               ADDR OF CTLGPL-B
         USING CTLGPLB,R9
         MVC   CTGCCAT,CTGBCAT          ADDR OF CATACB
         MVC   CTGCWKB,AWORK21          ADDR OF WORK AREA 'B'
         MVC   CTGCPSWD,CTGBPSWD        ADDR OF PASSWORD
         SPACE
         LTR   R0,R0                    IS IT AN 'INIT' CALL?
         BNZ   INIT21                   YES - SET TITLES
         SPACE
         LA    R10,LINE                 SET BASE REG FOR DSECT TXTSECT
         USING TXTSECT,R10
         SPACE
         L     R1,CTGBAFL1              ADDR OF CTGFL-B1
         L     R1,20(,R1)               ADDR OF ENTRY TYPE
         MVC   ENTYPE,0(R1)             SAVE IT FOR CHECKING
         SR    R2,R2                    INDEX FOR BRANCH TABLE
         TRT   ENTYPE,RECTBL            SEE WHICH TYPE IT IS
         BZ    TYPE0                    TYPE 0 - UNDEFINED
         SPACE
         SLL   R2,2                     DISPLACEMENT OF BRANCH TABLE
RECTYP   B     RECTYP(R2)
         B     TYPEA                    TYPE 5
         B     TYPEB                    TYPE 4
         B     TYPEC                    TYPE 3
         B     TYPED                    TYPE 2
         B     TYPEG                    TYPE 3
         B     TYPEI                    TYPE 2
         B     TYPER                    TYPE 4
         B     TYPEU                    TYPE 5
         B     TYPEV                    TYPE 1
         B     TYPEX                    TYPE 6
         EJECT
*        *---------------------------------------*
*        *  INIT MODE - SET TITLES AND HEADINGS  *
*        *---------------------------------------*
         SPACE
INIT21   EQU   *
         TIME  DEC
         SPACE
         ST    R0,WORD                  WORD = X'HHMMSSTH'
         UNPK  WORK,WORD                WORK = C'0HHMMSS*'  *=X'HT'
         MVC   TIME1(2),WORK+1          SET HOURS
         MVI   TIME1+2,C':'
         MVC   TIME1+3(2),WORK+3        SET MINUTES
         SPACE
         ST    R1,WORK                  WORK = X'00YYDDDF'
         LA    R1,WORK+1                R1 = ADDR OF YYDDD
         BAL   R11,CNVDATE              CONVERT 'YYDDD' TO 'MM/DD/YY'
         MVC   DATE1,0(R1)
         SPACE 2
         L     R1,ACATN21               SET VSAM CATALOG NAME
         MVC   CATNAME2,0(R1)
         MVC   CATYPE2,=CL6'USER'       SET VSAM CATALOG TYPE
         SPACE
         L     R1,CTGBCAT
         L     R0,0(,R1)                ADDR OF THIS CATALOG'S ACB
         L     R1,16                    ADDR OF CVT
         L     R1,256(,R1)              ADDR OF AMCBS
         L     R1,8(,R1)                ADDR OF MASTER CATALOG'S ACB
         CLR   R0,R1                    IS THIS THE MASTER CATALOG?
         BNE   USERCTLG                 NO - MUST BE USER CATALOG
         MVC   CATYPE2,=CL6'MASTER'     YES - RESET IT
         EJECT
*        *---------------------*
*        *  INIT MODE - CONT.  *
*        *---------------------*
         SPACE
USERCTLG EQU   *
         LA    R1,CIZERO                ADDR OF CI NO. 0
         ST    R1,CTGCENT               SET CTLGPL-C
         MVI   CTGCRCTP,C'D'            FOR 'DATA' ENTRY
         MVI   CTGCFLDN,X'03'           INCLUDE 'CATVOL' ALSO
         LA    R1,REQUES10              'CATVOL'
         ST    R1,CTLGFLC3+8
         LA    R1,CTLGPLC
         SVC   26
         SPACE
         LTR   R15,R15                  IS SVC SUCCESSFUL?
         BZ    SVCOK211                 YES - CONTINUE
         SPACE
         ABEND 211,DUMP
         SPACE
SVCOK211 EQU   *
         MVI   CTGCRCTP,X'00'           RESET TO ANY ENTRY
         MVI   CTGCFLDN,X'02'           AND 'ENTYPE' & 'ENTNAME' ONLY
         L     R8,CTLGFLC3+20           ADDR OF CATVOL
         USING CTVOL,R8
         SPACE
         LA    R1,CTVDEVTP              ADDR OF 4-BYTES DEVICE TYPE
         BAL   R11,CNVDVTP              MAKE IT PRINTABLE
         MVC   DEVTYPE2,0(R1)           MOVE IT IN
         MVC   VOLSER2,CTVOLSER         VOLUME SERIAL NUMBER
         SPACE
         MVI   LINECNT+1,X'FF'          INDICATE NEW VSAM CATALOG
         B     GOHOME                   RETURN NOW
         EJECT
*        *----------------------*
*        *  TYPE 0 - UNDEFINED  *
*        *----------------------*
         SPACE
TYPE0    EQU   *
         L     R1,CTGBAFL2              ADDR OF CTLGFL-B2
         L     R1,20(,R1)               ADDR OF ENTRY NAME
         MVC   TXTENTRY,0(R1)
         MVI   TXTENTYP,C'('            TRANSLATE ENTRY TYPE INTO HEX
         UNPK  TXTENTYP+1(3),ENTYPE(2)
         TR    TXTENTYP+1(2),HEXTBL
         MVI   TXTENTYP+3,C')'
         BAL   R11,PUTRPT               PRINT IT AND
         B     GOHOME                   RETURN NOW
         SPACE 2
*        *----------------*
*        *  TYPE 1 - 'V'  *
*        *----------------*
         SPACE
TYPE1    EQU   *
TYPEV    EQU   *
         L     R1,CTGBAFL2              ADDR OF CTLGFL-B2
         L     R1,20(,R1)               ADDR OF ENTRY NAME
         MVC   TXTENTRY(6),0(R1)        ONLY THE FIRST 6 CHAR FOR 'V'
         MVC   TXTENTYP(5),=CL5'SPACE'  SET ENTRY TYPE
         BAL   R11,PUTRPT               PRINT IT
         B     GOHOME                   AND RETURN
         EJECT
*        *----------------------*
*        *  TYPE 2 - 'D' & 'I'  *
*        *----------------------*
         SPACE
TYPED    EQU   *
         MVC   TXTENTYP(4),=CL4'DATA'
         MVI   ENTYPE,X'02'
         B     TYPE2
         SPACE
TYPEI    EQU   *
         MVC   TXTENTYP(5),=CL5'INDEX'
         MVI   ENTYPE,X'02'
         B     TYPE2
         SPACE 2
*        *----------------------*
*        *  TYPE 3 - 'C' & 'G'  *
*        *----------------------*
         SPACE
TYPEC    EQU   *
         MVC   TXTENTYP(7),=CL7'CLUSTER'
         MVI   ENTYPE,X'03'
         BAL   R11,CHKCLSTR             CHECK IF PAGE SPACE OR CATALOG
         LTR   R15,R15                  IS IT A SPECIAL CLUSTER?
         BZ    TYPE2                    NO - PROCESS FOR CLUSTER
         MVI   ENTYPE,X'04'             YES - GET ASSOC ENTRIES ALSO
         B     TYPE2
         SPACE
TYPEG    EQU   *
         MVC   TXTENTYP(15),=CL15'ALTERNATE INDEX'
         MVI   ENTYPE,X'03'
         B     TYPE2
         EJECT
*        *----------------------*
*        *  TYPE 4 - 'B' & 'R'  *
*        *----------------------*
         SPACE
TYPEB    EQU   *
         MVC   TXTENTYP(3),=CL3'GDG'
         MVI   ENTYPE,X'04'
         B     TYPE2
         SPACE
TYPER    EQU   *
         MVC   TXTENTYP(4),=CL4'PATH'
         MVI   ENTYPE,X'04'
         B     TYPE2
         SPACE 2
*        *----------------------*
*        *  TYPE 5 - 'A' & 'U'  *
*        *----------------------*
         SPACE
TYPEA    EQU   *
         MVC   TXTENTYP(8),=CL8'NON VSAM'
         MVI   ENTYPE,X'05'
         B     TYPE2
         SPACE
TYPEU    EQU   *
         MVC   TXTENTYP(12),=CL12'USER CATALOG'
         MVI   ENTYPE,X'05'
         B     TYPE2
         SPACE 2
*        *----------------*
*        *  TYPE 6 - 'X'  *
*        *----------------*
         SPACE
TYPEX    EQU   *
         L     R1,CTGBAFL2              ADDR OF CTLGFL-B2
         L     R1,20(,R1)               ADDR OF ENTRY NAME
         MVC   TXTENTRY,0(R1)           SET ENTRY NAME
         SPACE
         MVC   TXTENTYP(5),=CL5'ALIAS'
         LA    R0,4                     ONLY THE FIRST ASSOC
         L     R1,CTGBAFL4              ADDR OF CTLGFL-B4 (NAMEDS)
         ST    R0,16(,R1)               CHANGE IT FROM 3 NAMEDS'ES TO 1
         MVI   ENTYPE,X'06'
         B     TYPE4
         EJECT
*        *---------------------------------------------------------*
*        *  COMMON FOR ALL TYPE 2 , TYPE 3, TYPE 4 AND TYPE 5      *
*        *  SET ENTRY NAME, OWNER ID, CREATION & EXPIRATION DATES  *
*        *---------------------------------------------------------*
         SPACE
TYPE2    EQU   *
         L     R1,CTGBAFL2              ADDR OF CTLGFL-B2
         L     R1,20(,R1)               ADDR OF ENTRY NAME
         MVC   TXTENTRY,0(R1)           SET ENTRY NAME
         SPACE
CHKEXPDT EQU   *
         L     R1,CTGBAFL5              ADDR OF CTLGFL-B5
         L     R1,20(,R1)               ADDR OF EXPIRATION DATE
         CLI   0(R1),X'FF'              IS THERE ONE?
         BE    CHKCREDT                 NO - SKIP MOVE
         CLC   CIZERO(2),0(R1)          IS IT A ZERO DATE?
         BNE   CNVEXPDT                 NO - CONVERT EXPIRATION DATE
         TM    2(R1),X'F0'              IS IT A ZERO DATE?
         BZ    CHKCREDT                 YES - SKIP MOVE
CNVEXPDT EQU   *
         BAL   R11,CNVDATE              NO - CONVERT IT TO 'MM/DD/YY'
         MVC   TXTEXPDT,0(R1)           MOVE IT
         SPACE
CHKCREDT EQU   *
         L     R1,CTGBAFL6              ADDR OF CTLGFL-B6
         L     R1,20(,R1)               ADDR OF CREATION DATE
         CLI   0(R1),X'FF'              IS THERE ONE?
         BE    CHKOWNER                 NO - SKIP MOVE
         BAL   R11,CNVDATE              YES - CONVERT IT TO 'MM/DD/YY'
         MVC   TXTCREDT,0(R1)           MOVE IT
         SPACE
CHKOWNER EQU   *
         L     R1,CTGBAFL7              ADDR OF CTLGFL-B7
         L     R1,20(,R1)               ADDR OF OWNER ID
         CLI   0(R1),X'FF'              IS THERE ONE?
         BE    CHKDEVOL                 NO - SKIP MOVE
         MVC   TXTOWNER,0(R1)           MOVE IT
         EJECT
*        *------------------------------------------------*
*        *  FOR TYPE 2 AND TYPE 5 ONLY                    *
*        *  SET DEVICE TYPE, VOLUME SERIAL & VOLUME STAT  *
*        *------------------------------------------------*
         SPACE
CHKDEVOL EQU   *
         CLI   ENTYPE,X'03'             IS THIS A TYPE-3 ENTRY?
         BE    TYPE3                    YES - GET THE ASSOC RECORDS
         CLI   ENTYPE,X'04'             IS THIS A TYPE-4 ENTRY?
         BE    TYPE4                    YES - GET THE ASSOC RECORDS
         SPACE
         L     R1,CTGBAFL8              ADDR OF CTLGFL-B8 (CATVOL)
         BAL   R11,SETVOLS              FORMATS AND PRINTS
         SPACE
         CLI   ENTYPE,X'05'             IS THIS A TYPE-5 ENTRY?
         BE    TYPE5                    YES - GET THE ASSOC RECORDS
         B     GOHOME                   NO - THAT'S ALL FOR TYPE 2
         EJECT
*        *-----------------------------------------------------------*
*        *  FOR TYPE 3 ONLY                                          *
*        *  SET THE ENTRY NAME(S) OF ALL ITS ASSOCIATED NON-'D' AND  *
*        *  NON-'I' RECORDS.  NO OTHER INFO'S ARE NEEDED.            *
*        *-----------------------------------------------------------*
         SPACE
TYPE3    EQU   *
         BAL   R11,PUTRPT               PRINT PRIMARY RECORDS
         SPACE
         USING NMDSECT,R7
         L     R1,CTGBAFL4              ADDR OF CTLGFL-B4
         L     R0,16(,R1)               LENGTH OF NAMEDS(ES)
         L     R7,20(,R1)               ADDR OF NAMEDS(ES)
         AR    R0,R7                    ADDR OF END OF NAMEDS(ES)
         ST    R0,EONMDS                UPPER LIMIT
         SPACE
NEXTNMDS EQU   *
         CLI   NMDSTYP,C'D'             IS IT FOR A TYPE 'D' ENTRY?
         BE    BUMPNMDS                 YES - BUMP TO NEXT 'NAMEDS' FLD
         CLI   NMDSTYP,C'I'             IS IT FOR A TYPE 'I' ENTRY?
         BE    BUMPNMDS                 YES - BUMP TO NEXT 'NAMEDS' FLD
         SPACE
         LA    R1,NMDSCIN               ADDR OF CI NUMBER
         ST    R1,CTGCENT               SET CTLGPL-C
         MVC   CTGCRCTP,NMDSTYP         SET REC TYPE IN CTGCOPT2
         LA    R1,CTLGPLC
         SVC   26
         SPACE
         LTR   R15,R15                  IS SVC SUCCESSFUL?
         BZ    SVCOK212                 YES - CONTINUE
         SPACE
         ABEND 212,DUMP
         SPACE
SVCOK212 EQU   *
         BAL   R11,FMTASSOC             FORMAT ASSOC ENTRY AND
         BAL   R11,PUTRPT               PRINT
         SPACE
BUMPNMDS EQU   *
         LA    R7,4(,R7)                ADD LENGTH OF NAMEDS
         C     R7,EONMDS                IS IT STILL WITHIN LIMIT?
         BL    NEXTNMDS                 YES - KEEP ON KEEPING ON
         MVI   CTGCRCTP,X'00'           RESET IT TO ANY ENTRY
         B     GOHOME
         SPACE
EONMDS   DC    F'-1'
         EJECT
*        *-----------------------------------------------------------*
*        *  FOR TYPE 4 AND TYPE 6 ONLY                               *
*        *  SET THE ENTRY NAME(S) OF ALL ITS ASSOCIATED RECORDS AND  *
*        *  NO OTHER INFO'S ARE NEEDED.                              *
*        *-----------------------------------------------------------*
         SPACE
TYPE4    EQU   *
         BAL   R11,PUTRPT               PRINT PRIMARY RECORDS
         SPACE
         L     R1,CTGBAFL4              ADDR OF CTLGFL-B4
         L     R0,16(,R1)               LENGTH OF NAMEDS(ES)
         LTR   R0,R0                    IS THERE ANY?
         BZ    GOHOME                   NO - THAT'S ALL THEN
         L     R7,20(,R1)               ADDR OF NAMEDS(ES)
         AR    R0,R7                    ADDR OF END OF NAMEDS(ES)
         ST    R0,EONMDS                UPPER LIMIT
         SPACE
NXTNMDS  EQU   *
         LA    R1,NMDSCIN               ADDR OF CI NUMBER
         ST    R1,CTGCENT               SET CTLGPL-C
         MVC   CTGCRCTP,NMDSTYP         SET REC TYPE IN CTGCOPT2
         LA    R1,CTLGPLC
         SVC   26
         SPACE
         LTR   R15,R15                  IS SVC SUCCESSFUL?
         BZ    SVCOK213                 YES - CONTINUE
         SPACE
         ABEND 213,DUMP
         SPACE
SVCOK213 EQU   *
         BAL   R11,FMTASSOC             FORMAT ASSOC ENTRY AND
         BAL   R11,PUTRPT               PRINT
         SPACE
         LA    R7,4(,R7)                ADD LENGTH OF NAMEDS
         C     R7,EONMDS                IS IT STILL WITHIN LIMIT?
         BL    NXTNMDS                  YES - KEEP ON KEEPING ON
         MVI   CTGCRCTP,X'00'           RESET IT TO ANY ENTRY
         B     GOHOME
         EJECT
*        *-----------------------------------------------------------*
*        *  FOR TYPE 5 ONLY                                          *
*        *  SET THE ENTRY NAME(S) OF ALL ITS ASSOCIATED RECORDS AND  *
*        *  THE ALIAS CHAIN.                                         *
*        *-----------------------------------------------------------*
         SPACE
TYPE5    EQU   *
         L     R1,CTGBAFL4              ADDR OF CTLGFL-B4
         L     R0,16(,R1)               LENGTH OF NAMEDS(ES)
         LTR   R0,R0                    IS THERE ANY?
         BZ    GOHOME                   NO - THAT'S ALL THEN
         L     R7,20(,R1)               ADDR OF NAMEDS(ES)
         AR    R0,R7                    ADDR OF END OF NAMEDS(ES)
         ST    R0,EONMDS                UPPER LIMIT
         SPACE
NXTNAMDS EQU   *
         LA    R1,NMDSCIN               ADDR OF CI NUMBER
         ST    R1,CTGCENT               SET CTLGPL-C
         CLI   NMDSTYP,C'X'             IS THIS AN 'ALIAS' ASSOC ENTRY?
         BE    XCHAIN                   YES - MUST BE LAST ENTRY
         MVC   CTGCRCTP,NMDSTYP         SET REC TYPE IN CTGCOPT2
         LA    R1,CTLGPLC
         SVC   26
         SPACE
         LTR   R15,R15                  IS SVC SUCCESSFUL?
         BZ    SVCOK214                 YES - CONTINUE
         SPACE
         ABEND 214,DUMP
         SPACE
SVCOK214 EQU   *
         BAL   R11,FMTASSOC             FORMAT ASSOC ENTRY AND
         BAL   R11,PUTRPT               PRINT
         SPACE
         LA    R7,4(,R7)                ADD LENGTH OF NAMEDS
         C     R7,EONMDS                IS IT STILL WITHIN LIMIT?
         BL    NXTNMDS                  YES - KEEP ON KEEPING ON
         MVI   CTGCRCTP,X'00'           RESET IT TO ANY ENTRY
         B     GOHOME
         SPACE
         DROP  R7
         EJECT
*        *------------------------------------------------------------*
*        *  PRINT THE ALIAS CHAIN - EACH TYPE 'X' ENTRY HAS FOLLOWING *
*        *  THREE (3) ASSOC 'NAMEDS' ENTRIES:                         *
*        *    1.  ASSOC TYPE 'A' OR 'U'                               *
*        *    2.  NEXT  TYPE 'X' ON THE CHAIN OR ZERO IF END OF CHAIN *
*        *    3.  LAST  TYPE 'X' ON THE CHAIN OR ZERO IF FIRST ONE    *
*        *------------------------------------------------------------*
         SPACE
XCHAIN   EQU   *
         MVI   CTGCRCTP,C'X'            SET CTLGPL-C
         MVI   CTGCFLDN,X'03'           INCLUDE CTLGFLC3
         LA    R1,REQUES05              'NAMEDS'
         ST    R1,CTLGFLC3+8
         SPACE
NEXTTYPX EQU   *
         LA    R1,CTLGPLC
         SVC   26
         SPACE
         LTR   R15,R15                  IS SVC SUCCESSFUL?
         BZ    SVCOK215                 YES - CONTINUE
         SPACE
         ABEND 215,DUMP
         SPACE
SVCOK215 EQU   *
         BAL   R11,FMTASSOC             FORMAT ASSOC ENTRY AND
         BAL   R11,PUTRPT               PRINT
         SPACE
         L     R1,CTLGFLC3+20           ADDR OF 'NAMEDS' FLD'S
         CLC   CIZERO,5(R1)             IS IT THE END OF ALIAS CHAIN?
         BE    EOXCHAIN                 YES - CLEAN UP AND GO HOME
         LA    R1,5(,R1)                ADDR OF CI NO. OF NEXT ALIAS
         ST    R1,CTGCENT               SET CTLGPL-C
         B     NEXTTYPX                 AND GO GET IT
         SPACE
EOXCHAIN EQU   *
         MVI   CTGCRCTP,X'00'           RESET IT TO ANY ENTRY TYPE
         MVI   CTGCFLDN,X'02'           'ENTYPE' & 'ENTNAME' ONLY
         B     GOHOME                   AND RETURN
         EJECT
*        ***************
*        *             *
*        *   E X I T   *
*        *             *
*        ***************
         SPACE
GOHOME   EQU   *
         L     R13,MYSAVE+4
         RETURN (14,12),RC=0
         SPACE 2
         LTORG
         SPACE
         DS    0H
         EJECT
*        *------------------------------------------------*
*        *  CHECK CLUSTER TO SEE IF CATALOG OR PAGESPACE  *
*        *  IN:     CTGBAFL3, CTGBAFL4                    *
*        *  OUT:    TXTENTYP IF SPECIAL CLUSTER           *
*        *          R15=04 IF SPECIAL CLUSTER             *
*        *------------------------------------------------*
         SPACE
CHKCLSTR EQU   *
         SR    R15,R15                  CLEAR RETURN CODE
         L     R1,CTGBAFL3              ADDR OF CTLGFL-B3
         L     R1,20(,R1)               ADDR OF 'CATTR' FIELD
         CLI   0(R1),X'00'              IS THERE A CLUSTER ATTRIBUTE?
         BE    NOCATTR                  NO - GO CHECK IF CATALOG
         SPACE
         LA    R15,4                    MARK AS SPECIAL CLUSTER
         TM    0(R1),X'02'              IS IT A SWAP SPACE?
         BZ    NOTSWAP                  NO - NEXT TEST
         MVC   TXTENTYP+8(7),=CL7'/ SWSPC'
         BR    R11                      RETURN 1
         SPACE
NOTSWAP  EQU   *
         TM    0(R1),X'01'              IS IT A PAGE SPACE?
         BZ    NOTPAGE                  NO - TRANSLATE IT IN HEX
         MVC   TXTENTYP+8(7),=CL7'/ PGSPC'
         BR    R11                      RETURN 2
         SPACE
NOTPAGE  EQU   *
         MVC   TXTENTYP+8(7),=CL7'/ AT=XX'
         UNPK  TXTENTYP+13(3),0(2,R1)
         TR    TXTENTYP+13(2),HEXTBL
         MVI   TXTENTYP+15,X'40'
         BR    R11                      RETURN 3
         SPACE
NOCATTR  EQU   *
         L     R1,CTGBAFL4              ADDR OF CTLGFL-B4
         L     R1,20(,R1)               ADDR OF 'NAMEDS' FIELDS
         CLC   CIZERO,1(R1)             IS THIS ENTRY A CATALOG NAME?
         BNER  R11                      NO - RETURN 4 - NORMAL
         MVC   TXTENTYP+8(7),=CL7'/ CATLG'
         LA    R15,4                    MARK AS SPECIAL CLUSTER
         BR    R11                      RETURN 5
         SPACE 2
         LTORG
         SPACE
         DS    0H
         EJECT
*        *--------------------------------------*
*        *  FORMAT ASSOC ENTRIES FROM CTLGPL-C  *
*        *  IN:     CTLGFLC1, CTLGFLC2          *
*        *  OUT:    TXTENTRY, TXTENTYP          *
*        *--------------------------------------*
         SPACE
FMTASSOC EQU   *
         L     R1,CTLGFLC2+20           ADDR OF 'ENTNAME'
         MVI   TXTENTRY+1,C'-'
         MVC   TXTENTRY+2,0(R1)
         SPACE
         L     R1,CTLGFLC1+20           ADDR OF 'ENTYPE'
         SR    R2,R2                    INDEX FOR ENTRY TYPE TABLE
         TRT   0(1,R1),RECTBL           SEE WHICH TYPE IT IS
         BZ    BADENTP                  TYPE 0 - UNDEFINED
         SPACE
         BCTR  R2,0                     LESS ONE
         SLL   R2,4                     TIMES SIXTEEN
         LA    R1,ENTTBL(R2)            ADDR OF ENTRY TYPE
         MVC   TXTENTYP,1(R1)
         BR    R11                      RETURN 1
         SPACE
BADENTP  EQU   *
         MVI   TXTENTYP,C'('            TRANSLATE ENTRY TYPE INTO HEX
         UNPK  TXTENTYP+1(3),ENTYPE(2)
         TR    TXTENTYP+1(2),HEXTBL
         MVI   TXTENTYP+3,C')'
         BR    R11                      RETURN 2
         EJECT
*        *-----------------------------------------------------------*
*        *  VOLUME INFO'S PROCESSING ROUTINE - FORMATS & PRINTS      *
*        *  IN:     R1 = ADDR OF 'CATVOL' CTLGFL                     *
*        *  OUT:    NONE                                             *
*        *  CALLS:  CNVDVTP, PUTRPT                                  *
*        *-----------------------------------------------------------*
         SPACE
SETVOLS  EQU   *
         ST    R11,SAVER11              SAVE RETURN ADDR
         L     R0,16(,R1)               LENGTH OF CATVOL(S)
         L     R8,20(,R1)               ADDR OF CATVOL(S)
         AR    R0,R8                    ADDR OF END OF CATVOL(S)
         ST    R0,EOCTVL                UPPER LIMIT
         SPACE
NEXTVOL  EQU   *
         LA    R1,CTVDEVTP              ADDR OF DEVICE CODE
         BAL   R11,CNVDVTP              CONVERT TO PRINTABLE FORM
         MVC   TXTDEVTP,0(R1)           MOVE IT IN
         MVC   TXTVOLSR,CTVOLSER        VOLUME SERIAL NUMBER
         SPACE
TSTPRIME EQU   *
         TM    CTVOLFLG,X'80'           IS IT PRIME?
         BZ    TSTCAND                  NO - NEXT TEST
         MVC   TXTSTATS,=CL5'PRIME'
         B     PRTLN2                   PRINT IT
         SPACE
TSTCAND  EQU   *
         TM    CTVOLFLG,X'40'           IS IT CANDIDATE?
         BZ    TSTOVFL                  NO - NEXT TEST
         MVC   TXTSTATS(4),=CL4'CAND'
         B     PRTLN2                   PRINT IT
         SPACE
TSTOVFL  EQU   *
         TM    CTVOLFLG,X'20'           IS IT OVERFLOW?
         BZ    BADVFLG                  NO - BAD VOLUME FLAG
         MVC   TXTSTATS(4),=CL4'OVFL'
         B     PRTLN2                   PRINT IT
         EJECT
*        *---------------------------*
*        *  CALL PUTRPT TO PRINT IT  *
*        *---------------------------*
         SPACE
BADVFLG  EQU   *
         MVI   TXTSTATS,C'('            TRANSLATE IT INTO HEX
         UNPK  TXTSTATS+1(3),CTVOLFLG(2)
         TR    TXTSTATS+1(2),HEXTBL
         MVI   TXTSTATS+3,C')'
         SPACE
PRTLN2   EQU   *
         BAL   R11,PUTRPT               PRINT THS LINE NOW
         LA    R8,15(,R8)               BUMP TO NEXT CATVOL
         C     R8,EOCTVL                IS IT STILL WITHIN LIMIT?
         BL    NEXTVOL                  YES - KEEP ON KEEPING ON
         SPACE
         L     R11,SAVER11              RESTORE RETURN ADDR
         BR    R11                      RETURN
         SPACE 2
SAVER11  DC    F'-1'
EOCTVL   DC    F'-1'
         SPACE
         LTORG
         SPACE
         DS    0H
         EJECT
*        *-------------------------------------*
*        *  PRINT ROUTINE FOR THE REPORT FILE  *
*        *-------------------------------------*
         SPACE
PUTRPT   EQU   *
         LH    R1,LINECNT               CURRENT NUMBER OF LINES ON PAGE
         CH    R1,LINEMAX               IS IT OVER THE LIMIT?
         BL    SAMEPAGE                 NO - IT'S STILL THE SAME PAGE
         SPACE 2
         AP    PAGECNT,=P'1'            YES - TIME FOR A NEW PAGE
         MVC   PAGE1,PAT3A
         ED    PAGE1,PAGECNT            SET NEW PAGE NUMBER
         L     R1,ARPTF21
         PUT   (1),TITLE1               PRINT TITLE 1
         SPACE
         L     R1,ARPTF21
         PUT   (1),TITLE2               PRINT TITLE 2
         SPACE
         L     R1,ARPTF21
         PUT   (1),HEADING1             PRINT HEADING
         SPACE
         L     R1,ARPTF21
         PUT   (1),HEADING2             PRINT UNDERSCORE
         SPACE
         MVI   CNTL,C'0'                SKIP 2 LINES FOR THE NEXT LINE
         LA    R1,7                     WE HAVE PRINTED 7 LINES ALREADY
         SPACE 2
SAMEPAGE EQU   *
         LA    R1,1(,R1)
         STH   R1,LINECNT               BUMP LINE COUNT
         L     R1,ARPTF21
         PUT   (1),OAREA
         SPACE
         MVI   CNTL,X'40'
         MVC   LINE,CNTL
         BR    R11
         EJECT
LINECNT  DC    H'0'
LINEMAX  DC    H'60'
PAGECNT  DC    PL2'0'
PAT3A    DC    XL4'40202120'
         SPACE
OAREA    DS    0CL133
CNTL     DC    X'40'
LINE     DC    CL132' '
         SPACE
         LTORG
         EJECT
*        *-------------------------------------------*
*        *   T I T L E S   A N D   H E A D I N G S   *
*        *-------------------------------------------*
         SPACE
TITLE1   DS    0CL133
         DC    C'1',CL14'             ',CL16'              '
         DC    CL24'PGM=VSAMLIST',CL43'VSAM CATALOG SUMMARY'
         DC    CL5'DATE '
DATE1    DC    CL8'MM/DD/YY'
         DC    CL7'  TIME'
TIME1    DC    CL5'HH:MM'
         DC    CL6'  PAGE'
PAGE1    DC    CL4' 000'
         SPACE
TITLE2   DS    0CL133
         DC    C'0',CL29' CATALOG INFORMATION:  NAME='
CATNAME2 DC    CL44'VSAM.CATALOG.NAME'
         DC    CL8'  TYPE= '
CATYPE2  DC    CL6'CATYPE'
         DC    CL11'  DEVTYPE= '
DEVTYPE2 DC    CL8'3330-1'
         DC    CL9' VOLSER= '
VOLSER2  DC    CL6'123456'
         DC    CL11' '
         SPACE
HEADING1 DS    0CL133
         DC    C'-'
         DC    C'    V S A M   E N T R Y   N A M E                   '
         DC    C'  ENTRY  TYPE    OWNER ID  CRE DATE  EXP DATE  '
         DC    C'DEVTYPE  VOLSER  STAT            '
         SPACE
HEADING2 DS    0CL133
         DC    C'+'
         DC    4C' ',44C'_',4C' ',15C'_',2C' ',8C'_',2C' ',8C'_'
         DC    2C' ',8C'_',2C' ',7C'_',2C' ',6C'_',2C' ',5C'_',11C' '
         SPACE
         DS    0H
         EJECT
*        *-----------------------------------------------------------*
*        *  DATE CONVERSION ROUTINE FOR CREATION & EXPIRATION DATES  *
*        *  IN:  R1 = ADDR OF PACKED DATE (XL3'YYDDDC')              *
*        *  OUT: R1 = ADDR OF CHAR DATE (C'MM/DD/YY' OR C'YY.DDD  ') *
*        *-----------------------------------------------------------*
         SPACE
CNVDATE  EQU   *
         MVC   YEAR(3),0(R1)            SAVE PARM XL3'YYDDDC'
         OI    DAYS+1,X'0F'
         UNPK  YYDDD,WORD
         MVC   MMDDYY+6(2),YYDDD        SET YEAR
         SPACE
         XC    WORK,WORK                WORK = X'00000000 00000000'
         MVO   WORK+6(2),YEAR           WORK = X'00000000 00000YY0'
         OI    WORK+7,X'0F'             WORK = X'00000000 00000YYF'
         CVB   R4,WORK
         STC   R4,YEAR                  YEAR IN BINARY
         MVC   WORK+6(2),DAYS           WORK = X'00000000 0000DDDF'
         CVB   R4,WORK
         LTR   R4,R4                    IS IT ZERO DAYS?
         BZ    ZERODATE                 YES - SET 00/00/YY
         STH   R4,DAYS                  DAYS IN BINARY
         SPACE
         LA    R3,2                     ASSUME LEAP YEAR
         TM    YEAR,X'03'               IS YEAR A MULTIPLE OF 4?
         BZ    LEAPYEAR                 YES - THIS IS A LEAP YEAR
         LA    R3,2(,R3)                NO - THIS IS NOT A LEAP YEAR
LEAPYEAR EQU   *
         LA    R2,DTCVNTAB              ADDR OF DATE CONVERSION TABLE
         LA    R5,12                    NUMBER OF MONTHS
CMPDAYS  EQU   *
         CH    R4,6(R3,R2)              NUMBER OF DAYS UP TO NEXT MONTH
         BNH   WHICHDAY                 THIS IS THE MONTH
         LA    R2,6(,R2)                BUMP TO NEXT ENTRY
         BCT   R5,CMPDAYS               NEXT MONTH, PLEASE
         EJECT
*        *-----------------------*
*        *  SET DATE AND RETURN  *
*        *-----------------------*
         SPACE
BADYYDDD EQU   *
         MVC   BADDATE(2),YYDDD         BADDATE = C'YY.***  '
         MVC   BADDATE+3(3),YYDDD+2     BADDATE = C'YY.DDD  '
         LA    R1,BADDATE
         BR    R11
         SPACE
ZERODATE EQU   *
         MVC   MMDDYY(5),MMDD0          MMDDYY = C'00/00/YY'
         B     DATESET                  THOUGH INPUT'S ALL ZERO
         SPACE
WHICHDAY EQU   *
         SH    R4,0(R3,R2)
         CVD   R4,WORK
         OI    WORK+7,X'0F'
         UNPK  MMDDYY+3(2),WORK+6(2)    SET DAY
         MVC   MMDDYY(2),0(R2)          SET MONTH
         SPACE
DATESET  EQU   *
         LA    R1,MMDDYY
         BR    R11                      RETURN
         SPACE 2
WORK     DC    D'0'
WORD     DC    F'0'
         ORG   WORD+1
YEAR     DS    XL1
DAYS     DS    H
MMDDYY   DC    C'MM/DD/YY'
BADDATE  DC    C'YY.DDD  '
YYDDD    DC    C'YYDDD'
MMDD0    DC    C'00/00'
         SPACE
DTCVNTAB DS    0H
         DC    C'01',H'0',H'0'
         DC    C'02',H'31',H'31'
         DC    C'03',H'60',H'59'
         DC    C'04',H'91',H'90'
         DC    C'05',H'121',H'120'
         DC    C'06',H'152',H'151'
         DC    C'07',H'182',H'181'
         DC    C'08',H'213',H'212'
         DC    C'09',H'244',H'243'
         DC    C'10',H'274',H'273'
         DC    C'11',H'305',H'304'
         DC    C'12',H'335',H'334'
TOTDAYS  DC    C'13',H'366',H'365'
         EJECT
*        *----------------------------------------------------*
*        *  DEVICE TYPE LOOK-UP ROUTINE                       *
*        *  IN:  R1 = ADDR OF 4-BYTES DEVICE TYPE             *
*        *  OUT: R1 = ADDR OF 8 BYTES OF DEVICE TYPE IN CHAR  *
*        *----------------------------------------------------*
         SPACE
CNVDVTP  EQU   *
         MVC   DEVTYPE,0(R1)            SAVE INPUT
         MVI   DEVTYPC,X'40'            CLEAR DEVICE TYPE
         MVC   DEVTYPC+1(L'DEVTYPC-1),DEVTYPC
         SPACE
         CLI   DEVTYPE+2,X'20'          IS IT A DASD?
         BE    CNVDASD                  YES - CONVERT IT
         CLI   DEVTYPE+2,X'80'          IS IT A MAGNETIC TAPE DEVICS?
         BE    CNVMTD                   YES - CONVERT IT
         SPACE
BADDVTP  EQU   *
         UNPK  DEVTYPC(9),DEVTYPE(5)    TRANSLATE INTO HEX
         TR    DEVTYPC,HEXTBL
         LA    R1,DEVTYPC               ADDR OF DEV TYPE (8 BYTES)
         BR    R11                      RETURN 1
         SPACE 2
DEVTYPC  DC    CL8'DEVTYPC'
         DC    XL2'00'                  BUFFER ZONE FOR 'UNPK'
DEVTYPE  DC    XL4'00'
         SPACE 2
CNVDASD  EQU   *
         CLI   DEVTYPE+3,X'00'          IS IT AN ESOTERIC?
         BE    CNVESTR                  YES - CONVERT IT
         SR    R2,R2                    CLEAR INDEX FOR DASD TYPE TABLE
         IC    R2,DEVTYPE+3             GET DEVICE CODE
         SLL   R2,3                     MULTIPLY BY 8 FOR DISPLACEMENT
         LA    R2,TYPEDASD(R2)          R2 = ADDR OF DASD TYPE ENTRY
         LA    R1,TYPEDEND              R1 = ADDR OF END OF TABLE
         CR    R1,R2                    IS THIS A VALID ENTRY?
         BNH   BADDVTP                  NO - GO TRANSLATE IT
         CLI   0(R2),X'40'              IS THIS A VALID ENTRY?
         BE    BADDVTP                  NO - GO TRANSLATE IT
         MVC   DEVTYPC(7),1(R2)         ONLY 7 BYTES FROM TABLE
         LA    R1,DEVTYPC               ADDR OF DEV TYPE (8 BYTES)
         BR    R11                      RETURN 2
         EJECT
CNVMTD   EQU   *
         CLI   DEVTYPE+3,X'00'          IS IT AN ESOTERIC?
         BE    CNVESTR                  YES - CONVERT IT
         LA    R1,TYPEMTD               R1 = ADDR OF MTD TYPE TABLE
         LA    R2,NUMOMTD               R2 = NO. OF ENTRIES OF TABLE
CMPMTD   EQU   *
         CLC   DEVTYPE,0(R1)            IS IT IN THE TABLE?
         BE    MOVEMTD                  YES - FOUND ONE
         LA    R1,12(,R1)               NO - BUMP TO NEXT ONE
         BCT   R2,CMPMTD                KEEP TRYING UNTIL WE RUN OUT
         B     BADDVTP                  THEN JUST TRANSLATE IT IN HEX
MOVEMTD  EQU   *
         LA    R1,4(,R1)                BUMP TO MAGNETIC TAPE DEV TYPE
         BR    R11                      RETURN 3
         SPACE 2
CNVESTR  EQU   *
         CLI   DEVTYPE+1,X'00'          IS THIS A VALID INDEX?
         BE    BADDVTP                  NO - JUST TRANSLATE IT IN HEX
         SR    R2,R2                    CLEAR INDEX FOR ESOTERICS TABLE
         IC    R2,DEVTYPE+1             GET ESOTERICS INDEX
         SLL   R2,3                     MULTIPLY BY 8 FOR DISPLACEMENT
         LA    R2,TYPESTRC(R2)          R2 = ADDR OF ESOTERICS ENTRY
         LA    R1,TYPESEND              R1 = ADDR OF END OF TABLE
         CR    R1,R2                    IS THIS A VALID ENTRY?
         BNH   BADDVTP                  NO - GO TRANSLATE IT
         MVC   DEVTYPC(7),1(R2)         ONLY 7 BYTES FROM TABLE
         LA    R1,DEVTYPC               ADDR OF DEV TYPE (8 BYTES)
         BR    R11                      RETURN 4
         EJECT
*        *------------------------------------------------------------*
*        *  THIS TABLE IS INDEXED BY DASD CLASS OF UCBTYP FIELD OF    *
*        *  UCB AS DESCRIBED IN OS/VS1 SYSTEM DATA AREAS (SY28-0605). *
*        *  EACH ENTRY IS 8 BYTES LONG WITH THE FOLLOWING,            *
*        *    BYTE 0   :  DASD CLASS IN HEXADECIMAL FORMAT            *
*        *    BYTE 1-7 :  DASD TYPE IN CHARACTER FORMAT -             *
*        *                A BLANK FIRST BYTE IMPLIES ENTRY NOT USED   *
*        *------------------------------------------------------------*
         SPACE
TYPEDASD DS    0F
         DC    X'00',CL7' '             * * *   NO SUCH DEVICE   * * *
         DC    X'01',CL7'2311'          2311 DISK STORAGE DRIVE
         DC    X'02',CL7'2301'          2301 PARALLEL DRUM
         DC    X'03',CL7'2303'          2303 SERIAL DRUM
         DC    X'04',CL7'2302'          2302 DISK STORAGE
         DC    X'05',CL7'2321'          2321 DATA CELL DRIVE
         DC    X'06',CL7'2305-1'        2305 FIXED HEAD STORAGE MODEL 1
         DC    X'07',CL7'2305-2'        2305 FIXED HEAD STORAGE MODEL 2
         DC    X'08',CL7'2314'          2314/2319 DIRECT ACCESS STORAGE
         DC    X'09',CL7'3330'          3330/3333 MODEL 1 DISK STORAGE
         DC    X'0A',CL7'3340'          3340 DISK STORAGE
         DC    X'0B',CL7'3350'          3350 DIRECT ACCESS STORAGE
         DC    X'0C',CL7' '             * * *   NO SUCH DEVICE   * * *
         DC    X'0D',CL7'3330-1'        3330/3333 MODEL 11 DISK STORAGE
TYPEDEND EQU   *
         SPACE 2
*        *------------------------------------------------------------*
*        *  THIS TABLE CONTAINS ENTRIES OF ALL MAGNETIC TAPE DEVICE   *
*        *  TYPES AS GENERATED IN 'DEVMASKT' BY SYSGEN AT BANKERS.    *
*        *  EACH ENTRY IS 12 BYTES LONG WITH THE FOLLOWING,           *
*        *    BYTE 0-3  :  MTD CLASS IN HEXADECIMAL FORMAT            *
*        *    BYTE 4-11 :  MTD TYPE IN CHARACTER FORMAT               *
*        *------------------------------------------------------------*
         SPACE
TYPEMTD  DS    0F
         DC    X'34008001',CL8'2400-3'  1600 BPI
         DC    X'34008003',CL8'3400-3'  1600 BPI
         DC    X'32008003',CL8'3400-5'  6250 BPI
         DC    X'32108003',CL8'3400-6'  DUAL DENSITY (1600/6250) BPI
NUMOMTD  EQU   (*-TYPEMTD)/12
         EJECT
*        *------------------------------------------------------------*
*        *  THIS TABLE CONTAINS ENTRIES OF ALL THE ESOTERICS DEVICE   *
*        *  TYPES AS GENERATED IN 'DEVMASKT' BY SYSGEN AT BANKERS.    *
*        *  EACH ENTRY IS 8 BYTES LONG WITH THE FOLLOWING,            *
*        *    BYTE 0   :  ESOTERICS CLASS IN HEXADECIMAL FORMAT       *
*        *    BYTE 1-7 :  ESOTERICS TYPE IN CHARACTER FORMAT          *
*        *------------------------------------------------------------*
         SPACE
TYPESTRC DS    0F
         DC    X'00',CL7' '             * * *   N O T   U S E D   * * *
         DC    X'01',CL7'SYSSQ'         DASD
         DC    X'02',CL7'SYSDA'         MTD
         DC    X'03',CL7'SYSCP'         URD
         DC    X'04',CL7'SYSPR'         URD
         DC    X'05',CL7'DISK'          DASD
         DC    X'06',CL7'DISC'          DASD
         DC    X'07',CL7'TAPE'          MTD
         DC    X'08',CL7'SORT'          DASD
         DC    X'09',CL7'CICSLOG'       MTD
         DC    X'0A',CL7'T160'          MTD
         DC    X'0B',CL7'T625'          MTD
         DC    X'0C',CL7'D3350'         DASD
         DC    X'0D',CL7'SYSTS'         DASD
         DC    X'0E',CL7'VIO'           DASD
         DC    X'0F',CL7'SYS3800'       URD
TYPESEND EQU   *
         EJECT
*        *-----------------------*
*        *   C O N S T A N T S   *
*        *-----------------------*
         SPACE
CIZERO   DC    XL3'000000'              CI NO. OF 'D' REC OF CATLG 'C'
ENTYPE   DC    X'40'                    ENTRY TYPE
         SPACE 2
RECTBL   DC    256X'00'                 TYPE 0 - UNDEFINED
         ORG   RECTBL+C'A'
         DC    X'01'                    TYPE 5
         ORG   RECTBL+C'B'
         DC    X'02'                    TYPE 4
         ORG   RECTBL+C'C'
         DC    X'03'                    TYPE 3
         ORG   RECTBL+C'D'
         DC    X'04'                    TYPE 2
         ORG   RECTBL+C'G'
         DC    X'05'                    TYPE 3
         ORG   RECTBL+C'I'
         DC    X'06'                    TYPE 2
         ORG   RECTBL+C'R'
         DC    X'07'                    TYPE 4
         ORG   RECTBL+C'U'
         DC    X'08'                    TYPE 5
         ORG   RECTBL+C'V'
         DC    X'09'                    TYPE 1
         ORG   RECTBL+C'X'
         DC    X'0A'                    TYPE 6
         ORG
         EJECT
*        *-------------------------------------*
*        *   E N T R Y   T Y P E   T A B L E   *
*        *-------------------------------------*
         SPACE
ENTTBL   DS    0D
         DC    X'01',CL15'NON VSAM'
         DC    X'02',CL15'GDG'
         DC    X'03',CL15'CLUSTER'
         DC    X'04',CL15'DATA'
         DC    X'05',CL15'ALTERNATE INDEX'
         DC    X'06',CL15'INDEX'
         DC    X'07',CL15'PATH'
         DC    X'08',CL15'USER CATALOG'
         DC    X'09',CL15'SPACE'
         DC    X'0A',CL15'ALIAS'
EOENTTBL EQU   *
         SPACE 2
HEXNUM   DC    CL16'0123456789ABCDEF'
HEXTBL   EQU   HEXNUM-240
         SPACE 2
*        *-------------------------*
*        *   P A R M   L I S T S   *
*        *-------------------------*
         SPACE
PARM9421 DS    0F
ACATN21  DC    A(0)
ACTPL21  DC    A(0)
AMSGF21  DC    A(0)
ARPTF21  DC    A(0)
AWORK21  DC    A(0)
         EJECT
*        *---------------------------------------------*
*        *   C T L G P L   A N D   C T G F L   -   C   *
*        *---------------------------------------------*
         SPACE
CTLGPLC  DS    0D
CTGCOPT1 DC    X'40008108'
*  CHECK THE MASTER PASSWORD
*  A CATALOG MANAGEMENT SERVICES FUNCTION
*  THE CALL IS A VSAM CATALOG MANAGEMENT REQUEST
*  BYPASS SECURITY PROMPTING TO SYSTEM OPERATOR
*
CTGCENT  DC    A(0)                     ADDR OF CI NUMBER
CTGCCAT  DC    A(0)                     ADDR OF CATACB
CTGCWKB  DC    A(0)                     ADDR OF WORK AREA 'B'
CTGCOPT2 DC    X'20000002'
         ORG   CTGCOPT2+2
CTGCRCTP DS    CL1                      RECORD TYPE
CTGCFLDN DS    CL1                      NO. OF CTLGFLD'S
         ORG
CTGCDDNM DC    A(0)
CTGCPSWD DC    A(0)                     ADDR OF PASSWORD
CTGCFLDS DS    0F
         DC    A(CTLGFLC1)
         DC    A(CTLGFLC2)
         DC    A(CTLGFLC3)
         SPACE 2
CTGFLC   DS    0D
         SPACE
CTLGFLC1 DC    X'01',AL3(0),F'0'
         DC    A(REQUES02)              ENTYPE    (LTH = 1)
         DC    3F'0'
         SPACE
CTLGFLC2 DC    X'01',AL3(0),F'0'
         DC    A(REQUES03)              ENTNAME   (LTH = 44)
         DC    3F'0'
         SPACE
CTLGFLC3 DC    X'01',AL3(0),F'0'
         DC    A(0)                     NAMEDS / CATVOL
         DC    3F'0'
         SPACE 2
*        *---------------------------*
*        *   F I E L D   N A M E S   *
*        *---------------------------*
         SPACE
REQUES02 DC    CL8'ENTYPE'              LTH = 1
REQUES03 DC    CL8'ENTNAME'             LTH = 44
REQUES05 DC    CL8'NAMEDS'              LTH = VL: (4) / ASSOC
REQUES10 DC    CL8'CATVOL'              LTH = VL: (15) / VOL
         EJECT
*        *-------------------*
*        *   D S E C T ' S   *
*        *-------------------*
         SPACE
CTLGPLB  DSECT
CTGBOPT1 DS    XL4
CTGBENT  DS    F
CTGBCAT  DS    F
CTGBWKA  DS    F
CTGBOPT2 DS    XL4
CTGBDDNM DS    F
CTGBPSWD DS    F
CTGBFLDS DS    0F
CTGBAFL1 DS    F                        ENTYPE
CTGBAFL2 DS    F                        ENTNAME
CTGBAFL3 DS    F                        CATTR
CTGBAFL4 DS    F                        NAMEDS
CTGBAFL5 DS    F                        DSETEXDT
CTGBAFL6 DS    F                        DSETCRDT
CTGBAFL7 DS    F                        OWNERID
CTGBAFL8 DS    F                        CATVOL
         SPACE 2
NMDSECT  DSECT
NMDSTYP  DS    CL1                      ENTRY TYPE
NMDSCIN  DS    XL3                      CI NUMBER
         EJECT
CTVOL    DSECT
CTVREPNO DS    CL2                      RELATIVE REPETITION NUMBER
CTVDEVTP DS    CL4                      DEVICE TYPE
CTVOLSER DS    CL6                      VOLUME SERIAL NUMBER
CTVFILSQ DS    CL2                      FILE SEQUENCE NUMBER
CTVOLFLG DS    CL1                      VOLUME FLAGS
*                                       BIT 0    X'80' PRIME
*                                       BIT 1    X'40' CANDIDATE
*                                       BIT 2    X'20' OVERFLOW
*                                       BIT 3-7  X'1F' RESERVED
         SPACE 2
TXTSECT  DSECT
         DS    CL4
TXTENTRY DS    CL44
         DS    CL4
TXTENTYP DS    CL15
         DS    CL2
TXTOWNER DS    CL8
         DS    CL2
TXTCREDT DS    CL8
         DS    CL2
TXTEXPDT DS    CL8
         DS    CL2
TXTDEVTP DS    CL8
         DS    CL1
TXTVOLSR DS    CL6
         DS    CL2
TXTSTATS DS    CL5
         END
