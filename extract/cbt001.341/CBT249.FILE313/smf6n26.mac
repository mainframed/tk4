         MACRO
&LABEL   $RETURN &RETCODE=0
         AIF   ('&RETCODE'(1,1) LT '0' AND '&RETCODE' NE '(15)').RADDR
&LABEL   L     13,4(13)
         AIF   ('&RETCODE' EQ '(15)').REG15
         LM    14,12,12(13)
         LA    15,&RETCODE.(0,0)
         BR    14
         MEXIT
.RADDR   ANOP
&LABEL   LR    15,&RETCODE
         L     13,4(13)
.REG15   L     14,12(13)
         LM    0,12,20(13)
         BR    14
         MEND
         EJECT
         MACRO
&MOD     LNKGE &BASE=12,&SAVE=SAVE,&MF=S
*
*              STANDARD OS/VS LINKAGE
*
&MOD     CSECT
         STM   14,12,12(13)
         AIF   (&BASE EQ 13).BASE13          IS BASE =13..
         AIF   (&BASE EQ 14).ERR1      IF =14 ERROR.
         LR    &BASE,15
         USING &MOD,&BASE  ADDRESSABILITY
         AIF   ('&MF' EQ 'R').RENT
         AIF   ('&MF' NE 'S').ERR2
         LA    14,&SAVE        ADDRESS OF SAVE AREA.
         ST    14,8(13)      STORE ADDRESS OF SAVE IN CALLERS SAVE + 8
         ST    13,&SAVE+4    STORE CALLERS SAVE ADDRESS AT SAVE + 4
         LR    13,14      PUT SAVE ADDRESS IN REG 13
         B     &SAVE+72      BRANCH AROUND SAVE AREA.
         DC    C'VCU',C'&SYSDATE',C'&SYSTIME',CL8'&MOD'
&SAVE    DS    9D
         MEXIT
.RENT    ANOP
         LR    3,1
         GETMAIN R,LV=72               GET SAVE AREA
         ST    13,4(1)                 BACK CHAIN
         SR    2,2                     CLEAR REG2.
         ST    2,8(1)
         ST    1,8(13)                 FORWARD CHAIN
         LR    13,1                    SAVE ADDRESS IN R13
         LR    1,3
         B     *+28                    BRANCH AROUND VERSION ID.
         DC    C'VCU',C'&SYSDATE',C'&SYSTIME',CL8'&MOD'
         MEXIT
.BASE13  USING &MOD,15
         AIF   ('&MF' EQ 'R').ERR3
         ST    15,8(13)     STORE SAVE AREA ADDRESS IN CALLERS SAVE +8
         ST    &BASE,&MOD+4  STORE CALLERS SAVE ADDRESS IN SAVE+4
         LR    &BASE,15     PUT SAVE ADDRESS IN REG 13
         DROP  15
         USING &MOD,13                 PERMANENT ADDRESSABILITY.
         B     *+82                    GO TO NEXT EXECUTABLE CODE.
         DS    CL54      REMAINDER OF SAVE AREA.
         DC    C'VCU',C'&SYSDATE',C'&SYSTIME',CL8'&MOD'
         MEXIT
.ERR1    MNOTE 16,'REGISTER 14 IS AN INVALID BASE REGISTER'
         MEXIT
.ERR2    MNOTE 16,'LINKAGE TYPE INVALID, NEITHER S NOR R SPECIFIED'
         MEXIT
.ERR3    MNOTE 16,'TYPE R SPECIFIED AND BASE=13 INCOMPATIBLE'
         MEXIT
         MEND
         EJECT
         MACRO
         REG
R0       EQU   0
R00      EQU   00
R1       EQU   1
R01      EQU   01
R2       EQU   2
R02      EQU   2
R3       EQU   3
R03      EQU   3
R4       EQU   4
R04      EQU   4
R5       EQU   5
R05      EQU   5
R6       EQU   6
R06      EQU   6
R7       EQU   7
R07      EQU   7
R8       EQU   8
R08      EQU   8
R9       EQU   9
R09      EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         MEND
         EJECT
         REG
         PRINT NOGEN
         TITLE 'SMF6N26 - SMF RECORD CONVERSION TO HASP ACCOUNT CARDS'
***********************************************************************
*                                                                     *
*   MODULE - SMF6N26                                                  *
*                                                                     *
*   FUNCTION -                                                        *
*                                                                     *
*           READS SMF TYPE 6 AND 26 RECORDS AND BUILDS HASP           *
*           ACCOUNTING CARDS FROM THEM. THIS PROGRAM WAS INTENDED     *
*           TO ALLOW THE OLD CHARGEBACK SYSTEM AT MEMOREX CORPORATE   *
*           DATA CENTER TO RUN UNDER MVS UNTIL JAN 1,1979.            *
*                                                                     *
*   OPERATION -                                                       *
*                                                                     *
*           THE INPUT SMF DATA IS ASSUMED TO CONTAIN SMF TYPE         *
*           6 AND 26 RECORDS SORTED BY READER DATE AND TIME AND       *
*           BY SMF RECORD TYPE.                                       *
*           FOR EACH JOB , THIS PROGRAM ACCUMULATES ALL PAGE          *
*           COUNTS FOR A JOB FROM THE TYPE 6 RECORDS AND BUILDS       *
*           THE REST OF THE HASP ACCOUNTING CARD FROM THE TYPE 26     *
*           SMF RECORD.                                               *
*                                                                     *
*           PROGRAM WAS FIXED TO IGNORE SYSOUT=P PAGE COUNTS          *
*           WHICH IS DEFINED AS MICROFILM OUTPUT AT MEMOREX ISD.      *
*           UPDATED 11/06/78.                                         *
*                                                                     *
*   FJP/01APR80 - THE EXTERNAL WRITER PRODUCES "SHORT" SMF TYPE 6     *
*       RECORDS -- NO PAGE COUNT -- FOR A PRINTER ONLY.  THE EXTERNAL *
*       WRITER HAS BEEN MODIFIED (VS00058) TO PRODUCE TYPE 6 RECORDS  *
*       EVEN THO IT IS USING A TAPE DRIVE.  SMF6N26 IS MODIFIED TO    *
*       RECOGNIZE THE EXTERNAL WRITER PRODUCED TYPE 6 RECORDS, AND    *
*       THEN TO DIVIDE THE LINE-COUNT BY 45 AND USE THAT AS THE PAGE  *
*       COUNT.                                                        *
*                                                                     *
*                                                                     *
*   AUTHOR - M.PELT                                                   *
*                                                                     *
*   DATE WRITTEN - 08/31/78                                           *
*                                                                     *
*   DATE LAST UPDATED - 01APR80                                       *
*                                                                     *
***********************************************************************
         EJECT
***********************************************************************
*                                                                     *
*   INITIALIZATION - OPEN DATA SETS AND TEST FOR SUCCESSFUL OPEN      *
*                                                                     *
***********************************************************************
SMF6N26  LNKGE BASE=13
         OPEN  (SMFINPUT,INPUT,SYSPRINT,OUTPUT,HASPOUT,OUTPUT)
         TM    SYSPRINT+48,X'10'
         BO    PRTOPNOK
         WTO   'SMF6N26 PROGRAM UNABLE TO OPEN SYSPRINT',ROUTCDE=11
         ABEND 1000
PRTOPNOK TM    SMFINPUT+48,X'10'
         BO    SMFOPNOK
         PUT   SYSPRINT,MSG01
         ABEND 1000
SMFOPNOK TM    HASPOUT+48,X'10'
         BO    HSPOPNOK
         PUT   SYSPRINT,MSG02
         ABEND 1000
MSG01    DC    CL121'-UNABLE TO OPEN SMFINPUT DATA SET'
MSG02    DC    CL121'-UNABLE TO OPEN HASPOUT  DATA SET'
         EJECT
***********************************************************************
*                                                                     *
*   HSPOPNOK: GETMANIN FOR RECORD AREA                                *
*                                                                     *
***********************************************************************
HSPOPNOK GETMAIN R,LV=32768
         LR    R11,R1
         SPACE 3
***********************************************************************
*                                                                     *
*   SCAN FOR FIRST TYPE 6 OR 26 RECORD                                *
*                                                                     *
***********************************************************************
          USING SMF6,R11
SCAN1     XC    PAGECTR,PAGECTR    CLEAR PAGE COUNTER
          GET   SMFINPUT,(R11)     GET A RECORD
          CLI   SMF6RTY,6          IS IT A TYPE 6 RECORD ?
          BE    HAV6OR26           YIP - HAVE A TYPE 6 RECORD
          CLI   SMF6RTY,26         NO - CHECK FOR TYPE 26 RECORD
          BNE   SCAN1              NO - NOT 6 OR 26 GO CHECK SOME MORE
HAV6OR26  MVC   JOBTMDT(8),SMF6RST SAVE TIME AND DATE IDENTIFICATION
          CLI   SMF6RTY,26         IS IT TYPE 26 RECORD ?
          BE    HAVE26
          SPACE 3
***********************************************************************
*                                                                     *
*   HAVE TYPE 6 RECORD - ACCUMULATE PAGES UNTIL TYPE 26 OR NEXT JOB   *
*                                                                     *
***********************************************************************
HAVE6    MVC   JOBNAME(8),SMF6JBN  SAVE JOBNAME IN CASE 26 MISSING
         MVC   ID(3),SMF6JNM+1     SAVE JOBID IN CASE 26 MISSING
         CLI   SMF6OWC,C'P'        IS IT SYSOUT=P OUTPUT ?     11/06/78
         BE    GETREC              YIP - DO NOT ADD TO PAGECTR 11/06/78
         SR    R2,R2               PREPARE FOR DIVIDE       FJP/01APR80
         L     R3,SMF6PGE          LOAD TYPE-6 PAGE-COUNT   FJP/01APR80
         CLC   SMF6LN1(2),=X'0018' EXTERNAL WRITER RECORD?  FJP/01APR80
         BNE   PGECNTOK            BIF NO - ALL IS OK       FJP/01APR80
         MVC   LINECNT(4),SMF6NLR  DO THIS FOR ALIGNMENT    FJP/01APR80
         L     R3,LINECNT          ELSE, GET LINE-COUNT     FJP/01APR80
         A     R3,=F'45'           ENSURE AT LEAST 1 PAGE   FJP/01APR80
         D     R2,=F'45'           ASSUME 45 LINES PER PAGE FJP/01APR80
PGECNTOK EQU   *                                            FJP/01APR80
         A     R3,PAGECTR          ADD PREVIOUS PAGE-COUNT  FJP/01APR80
         ST    R3,PAGECTR          SAVE CUMULATIVE PAGE COUNT
GETREC   GET   SMFINPUT,(R11)      READ ANOTHER RECORD
         CLC   SMF6RST(8),JOBTMDT  SAME JOB STILL ?
         BNE   MIS26               NO - WE'RE MISSING TYPE 26 RECORD
         CLI   SMF6RTY,6           IS IT ANOTHER TYPE 6 RECORD ?
         BE    HAVE6               YIP - KEEP ACCUMULATING
         CLI   SMF6RTY,26          IS IT TYPE 26 RECORD ?
         BE    HAVE26              YIP - HAVE A TYPE 26 RECORD
         B     GETREC              NOPE - GO FIND 26 RECORD
         EJECT
***********************************************************************
*                                                                     *
*   HAVE26: FILL OUT HASP  ACCOUNTING CARD AND WRITE TO HASPOUT       *
*                                                                     *
***********************************************************************
         USING SMF26,R11
HAVE26   TM    SMF26IN2,X'80'         CHECK IF BATCH JOB
         BZ    SCAN1                  NO - SKIP THIS RECORD
         MVC   JACPNAME(20),SMF26NAM  PROGRAMMER NAME
         MVC   JACROOMN(4),SMF26ROM   ROOM NUMBER
         MVC   JACDEPTN(3),=C'   '    DEPARTMENT NUMBER
         MVC   JACACCTN(4),SMF26ACT   ACCOUNT NUMBER
         MVC   JACPRIO(1),SMF26XPS    JOB QUEUE PRIORITY
         MVC   JACINTIM(3),=X'000000' JOB INPUT TIME
         MVC   JACOUTIM(3),=X'000000' JOB OUTPUT TIME
         MVC   JACCDSIN(2),210(R11)   NUMBER OF CARDS READ
         MVC   JACLINES(3),213(R11)   NUMBER OF LINES PRINTED
         MVC   JACCARDS(2),218(R11)   NUMBER OF CARDS PUNCHED
         MVC   JACRDRTM(3),=X'000000' JOB READ TIME
         MVC   JACXEQTM(3),=X'000000' JOB EXECUTION TIME
         MVC   JACPRTTM(3),=X'000000' JOB PRINT TIME
         MVC   JACPUNTM(3),=X'000000' JOB PUNCH TIME
         MVC   JACJOBNM(8),SMF26JBN   JOB NAME
         MVC   JACPAGCT(3),PAGECTR+1  NUMBER OF PAGES PRINTED
         MVC   JACSPARE(3),=X'000000'
         MVC   JACDATE-1(6),=X'F02120202020' MOVE EDIT MASK
         ED    JACDATE-1(6),SMF26RSD+1 DATE (YYDDD)
         MVI   JACIDENT,X'FF'          IDENTIFIER
         MVC   JACJOBNO(3),SMF26JNM+1  JOB NUMBER
         PUT   HASPOUT,JACAREA
         B     SCAN1
         EJECT
***********************************************************************
*                                                                     *
*   MIS26: MISSING TYPE 26 RECORD - WRITE ERROR MESSAGE AND IGNORE    *
*                                                                     *
***********************************************************************
         USING SMF6,R11
MIS26    MVC   MSG03+32(8),JOBNAME MOVE JOB NAME TO MESSAGE
         MVC   MSG03+44(3),ID        MOVE JOB ID
         MVC   MSG03+53(6),=X'402020202120' MOVE EDIT MASK FOR PAGES
         L     R3,PAGECTR           LOAD PAGE COUNT
         CVD   R3,DECW              CONVERT TO DECIMAL
         ED    MSG03+53(6),DECW+5   CONVERT TO EBCDIC
         PUT   SYSPRINT,MSG03       PRINT MESSAGE
         B     SCAN1
         SPACE 3
MSG03    DC    CL121'-MISSING TYPE 26 RECORD FOR JOB XXXXXXXX ID XXX PA*
               GES XXXXX'
         EJECT
***********************************************************************
*                                                                     *
*   EODAD: END OF SMF INPUT - CLOSE FILES AND RETURN                  *
*                                                                     *
***********************************************************************
EODAD    CLOSE (SMFINPUT,,HASPOUT,,SYSPRINT)
         FREEMAIN R,LV=32768,SP=0,A=(R11)
         $RETURN
         EJECT
***********************************************************************
*                                                                     *
*   DATA AREAS AND CONSTANTS                                          *
*                                                                     *
***********************************************************************
SYSPRINT DCB   DDNAME=SYSPRINT,LRECL=121,RECFM=FBA,BLKSIZE=121,        *
               DSORG=PS,MACRF=(PM)
SMFINPUT DCB   DDNAME=SMFIN,RECFM=VBS,MACRF=(GM),DSORG=PS,             *
               EODAD=EODAD
HASPOUT  DCB   DDNAME=HASPOUT,LRECL=80,RECFM=FB,BLKSIZE=12960,         *
               DSORG=PS,MACRF=(PM)
         EJECT
DECW     DS    D
JOBTMDT  DS    D
PAGECTR  DS    F
LINECNT  DS    F
JOBNAME  DS    CL8
ID       DS    CL3
         EJECT
***********************************************************************
*                                                                     *
*   HASP JOB ACCOUNTING CARD                                          *
*                                                                     *
***********************************************************************
JACAREA  DS    0CL80
JACPNAME DS    CL20                PROGRAMMER NAME
JACROOMN DS    CL4                 ROOM NUMBER
JACDEPTN DS    CL3                 DEPARTMENT NUMBER
JACACCTN DS    CL4                 ACCOUNTING NUMBER
JACPRIO  DS    CL1                 JOB QUEUE PRIORITY
JACINTIM DS    CL3                 JOB INPUT TIME
JACOUTIM DS    CL3                 JOB OUTPUT TIME
JACCDSIN DS    CL2                 NUMBER OF CARDS READ
JACLINES DS    CL3                 NUMBER OF LINES PRINTED
JACCARDS DS    CL2                 NUMBER OF CARDS PUNCHED
JACRDRTM DS    CL3                 JOB READ TIME
JACXEQTM DS    CL3                 JOB EXECUTION TIME
JACPRTTM DS    CL3                 JOB PRINT TIME
JACPUNTM DS    CL3                 JOB PUNCH TIME
JACJOBNM DS    CL8                 JOB NAME
JACPAGCT DS    CL3                 NUMBER OF PAGES PRINTED
JACSPARE DS    CL3                 SPARES
JACIDENT DS    CL1                 ACCOUNTING CARD IDENTIFIER (X'FF')
JACDATE  DS    CL5                 DATE (YYDDD)
JACJOBNO DS    CL3                 JOB NUMBER
         EJECT
         LTORG
         EJECT
         PRINT GEN
SMF6     DSECT
         IFASMFR 6
         EJECT
SMF26    DSECT
         IFASMFR 26
         END
