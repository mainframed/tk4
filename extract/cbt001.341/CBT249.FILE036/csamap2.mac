CSAMAP   CSECT
*******************************************************************
*
*        THIS MODULE IS INTENDED TO BE USED AS AN EXIT TO AMDPRDMP,
*        AND WILL OPERATE AS A VERB EXIT.  THE SELECTED VERB WILL
*        CAUSE THIS EXIT TO GET CONTROL, ONCE AN ENTRY IS ADDED
*        TO AMDPRECT.  THIS ROUTINE USES STANDARD PRINTDUMP LINKAGE
*        TO FORMAT AND PRINT CONTROL BLOCKS, PRINT MESSAGES, AND
*        TO ACCESS DUMPED DATA.  IT IS INTENDED TO BE USED TO
*        AID THE PSR IN DETERMINING A PROBLEM, WHEN EITHER CSA OR
*        SQA IS DEPLETED.  THE PROGRAM DOES NOT USE A GETMAINED
*        AREA FOR ITS' WORKAREA, SO IT IS NOT RE-ENTRANT, BUT THIS
*        SHOULD NOT PRESENT A PROBLEM, IF IT IS NOT PLACED IN LPA.
*        THE EXIT CHANGES SOME DATA IN THE WORKAREA, AFTER MOVING
*        THE DATA FROM PRINTDUMPS' BUFFER, FOR EASE OF FORMATTING.
*      (RATHER THAN FORMATTING FQE'S, THE ROUTINE COLLECTS DATA FROM
*      THE FQE, AND PRINTS INFORMATION CONCERNING ALLOCATED CORE.
*      THIS IS THE MAIN DIFFERENCE BETWEEN THIS VERSION OF THE PRO-
*      GRAM, AND THE EARLIER VERSION. )
*        WORKAREA LABELS MAY HAVE TO BE CHANGED, IF THE FOLLOWING MSS
*        CONTROL BLOCKS ARE CHANGED:
*               CVT, GDA, PQE, FBQE, SPQE, DQE, OR FQE.
*        THIS ROUTINE IS NOT FORMALLY SUPPORTED IN ANY WAY, BUT
*        I WOULD BE HAPPY TO ATTEMPT ANY CORRECTIONS, ON AN 'AS
*        AVAILABLE' BASIS.
*
*        FRANK H. CONNERY, JR., REGION 9, T.A.G.
*        (312) 245-7850   (IBM TIE LINE 8-261-7850)
*        REGION 9, TECHNICAL SUPPORT GROUP  (F.E.)
*        1 IBM PLAZA  (INTERNAL ZIP  38-528)
*        CHICAGO, ILLINOIS   60611
*
*******************************************************************
         EJECT
         ENTRY CSAMAP1
CSAMAP1  SAVE (14,12),,CSAMAP             SAVE REGISTERS
         BALR  12,0                       ESTABLISH BASE REGISTER
         USING *,12
         LA    7,CMAPSAV                  POINT TO MY SAVE AREA
         ST    13,CMAPSAV+4               ESTABLISH
         ST    7,8(,13)                    SAVE AREA LINKAGE
         ST    13,SAVPTR                  SAVE SAVE POINTER
         LR    13,7
         USING ABDPL,1                    ESTABLISH PARMLIST DSECT
         L     7,ADPLBUF                  LOCATE PRINT BUFFER
         MVC   52(15,7),TITLE             MOVE '***CSA' TITLE
         BAL   11,MSGSET                  AND PRINT IT
         BAL   11,BLNKPRNT                SPACE
         SR    8,8                        CLEAR REGISTER FOR INSERT
         ICM   8,7,ADPLCVT+1              GET ADDRESS OF DUMPED CVT
         BNZ   CVTOK                      BRANCH IF GIVEN
         LA    8,76(,0)                   ELSE SET FOR CVT POINTER
         BAL   11,GETBLOK                 AND GO GET POINTER
         LTR   15,15                      RETREIEVE OK ?
         BNZ   CVTBAD                     NO, ISSUE MSG AND EXIT
         L     8,0(,8)                    GET ADDRESS OF DUMPED CVT
         B     CVTOK                      CVT POINTER IN REG 8
CVTBAD   MVC   CBNAME,CVTCB               MOVE 'CVT' INTO MSG
CBMSGEND L     7,ADPLBUF                  LOCATE BUFFER
         MVC   0(47,7),CBUNAV             MOVE ENTIRE MESSAGE
         BAL   11,MSGSET                  LINK TO PRINT IT
EXIT     L     13,SAVPTR                  PICK UP PRIOR SAVE AREA
         RETURN (14,12),,RC=0             AND EXIT
CVTOK    LA    8,560(,8)                  PICK UP GDA
         BAL   11,GETBLOK                 GO GET POINTER
         LTR   15,15                      RETRIEVE OK ?
         BNZ   GDAUNAV                    NO, BRANCH
         L     8,0(,8)                    ELSE PICK UP POINTER
         ST    8,GDAPTR                   SET POINTER
         BAL   11,GETBLOK                 AND REQUEST GDA
         LTR   15,15                      RETRIEVE OK ?
         BZ    GDAOK                      YES, BRANCH
GDAUNAV  MVC   CBNAME,GDACB               ELSE MOVE 'GDA' INTO MSG
         B     CBMSGEND                   BR TO PRINT, THEN QUIT
GDAOK    MVC   MYGDA(56),0(8)             MOVE GDA TO WORKAREA
         LA    2,MYGDA                    POINT TO MOVED GDA
         USING GDA,2
         LA    0,GDAPATN                  SET PATTERN FOR GDA
         BAL   11,FRMTPRNT                GO F/P
         B     PQEPROC                    GO PROCESS PQE
         DS    0F
GDAPATN  DC    X'1F220005'                GDA  XXXXXX       (0)
         DC    AL4(GDALBL)
         DC    AL4(GDAPTR+1)
         DC    X'1D300C12'                FLAG  XX          (12)
         DC    AL4(MYGDA)
         DC    X'1D62161F'                CSA PQE  XXXXXX   (22)
         DC    AL4(MYGDA+9)
         DC    X'1D42272E'                PSTRT  XXXXXX     (39)
         DC    AL4(MYGDA+17)
         DC    X'1D32363C'                PSZE  XXXXXX      (54)
         DC    AL4(MYGDA+21)
         DC    X'1D72444E'                SQA SPQE XXXXXX   (68)
         DC    AL4(MYGDA+25)
         DC    X'1D725660'                FREE SQA  XXXXXX  (86)
         DC    AL4(MYGDA+29)
         DC    X'1D726872'                CSA SPQE  XXXXXX  (104)
         DC    AL4(MYGDA+53)
         DC    F'0'
GDALBL   DC    C'GDAFLAGCSA PQEPSTRTPSZESQA SPQEFREE SQACSA SPQE'
         DS    0F
PQEPROC  BAL   11,BLNKPRNT                SPACE OUTPUT
         L     8,CSAPQEP                  GET CSA PQE POINTER
         ST    8,PQEPTR                   SAVE POINTER FOR OUTPUT
         BAL   11,GETBLOK                 GO GET PQE
         LTR   15,15                      RETRIEVE OK ?
         BZ    CPQEOK                     YES, BRANCH
         MVC   CBNAME,CPQECB              ELSE MOVE 'CSA PQE' TO MSG
         BAL   11,CBMSG                   AND PRINT IT
         B     SPQEPROC                   THEN GO PROCESS SPQE'S
CPQEOK   MVC   MYPQE(32),0(8)             MOVE PQE TO WORKAREA
         LA    0,PQEPATN                  PICK UP PATTERN FOR PQE
         BAL   11,FRMTPRNT                GO TO F/P
         B     FBQEPROC                   THEN GO PROCESS FBQE'S
PQEPATN  DS    0F
         DC    X'1F220005'                PQE  XXXXXX       (0)
         DC    AL4(PQELBL)
         DC    AL4(PQEPTR+1)
         DC    X'1D420D14'                CSTRT  XXXXXX     (13)
         DC    AL4(MYPQE+25)
         DC    X'1D421C23'                CSIZE  XXXXXX     (28)
         DC    AL4(MYPQE+21)
         DC    F'0'
PQELBL   DC    C'PQECSTRTCSIZE'
         DS    0F
FBQEPROC LA    7,50(,0)                   SET LOOP COUNT
FBQELOOP SR    8,8                        CLEAR ACCESS REGISTER
         ICM   8,7,MYPQE+1                GET FBQE, IF ANY
         BZ    SPQEPROC                   BRANCH IF NONE
         CLC   CSAPQEP+1(3),MYPQE+1       DOES IT POINT TO PQE ?
         BZ    SPQEPROC                   YES, GET OUT
         BAL   11,GETBLOK                 ELSE GO GET FBQE
         LTR   15,15                      RETRIEVE OK ?
         BZ    FBQECNT                    YES, BR TO CHECK COUNT
         MVC   CBNAME,CFBQECB             ELSE MOVE 'FBQE' TO MSG
         BAL   11,CBMSG                   AND PRINT MSG
         B     SPQEPROC                   THEN GO PROCESS SPQE'S
FBQECNT  BCT   7,FBQEOK                   BR, IF MAX NOT REACHED
         MVC   CBLNAME,CFBQECB            ELSE MOVE NAME TO LP MSG
         BAL   11,LOOPMSG                 AND LINK TO PRINT IT
         B     SPQEPROC                   THEN GO PROCESS SPQE'S
FBQEOK   MVC   MYFBQE(16),0(8)            MOVE FBQE TO WORKAREA
         LA    0,FBQEPATN                 PICK UP PATTERN
         BAL   11,FRMTPRNT                LINK TO F/P ROUTINE
         MVC   MYPQE+1(3),MYFBQE+1        SET UP NEXT FBQE
         B     FBQELOOP                   AND GO PROCESS NEXT
         DS    0F
FBQEPATN DC    X'1F322B31'                FBQE  XXXXXX      (43)
         DC    AL4(FBQELBL)
         DC    AL4(MYPQE+1)
         DC    X'1D32393F'                AREA  XXXXXX      (57)
         DC    AL4(MYFBQE+13)
         DC    X'1D22474C'                SZE XXXXXX        (71)
         DC    AL4(MYFBQE+9)
         DC    F'0'
FBQELBL  DC    C'FBQEAREASZE'
         DS    0F
SPQEPROC MVC   SPQEPTR,CSASPQEP           SET FIRST CSA SPQE
         MVI   SPQEPTR,X'00'              ENSURE FIRST BYTE ZERO
         L     7,ADPLBUF                  LOCATE PRINT BUFFER
         MVC   0(22,7),CMSSBLK            MOVE 'CSA MSS BLOCKS' MSG
         BAL   11,MSGSET                  LINK TO PRINT IT
         BAL   11,BLNKPRNT                SPACE OUTPUT
         BAL   7,MSSROUTN                 LINK TO FORMAT BLOCKS
         L     7,ADPLBUF                  LOCATE PRINT BUFFER
         MVC   0(22,7),SMSSBLK            MOVE 'SQA MSS BLOCKS' MSG
         BAL   11,MSGSET                  LINK TO PRINT IT
         BAL   11,BLNKPRNT                SPACE OUTPUT
         MVC   MAXSPQE(12),SQACT          CHANGE MAX CTS FOR SQA
         MVC   SPQEPTR,SQASPQEP           SET FIRST SQA SPQE
         MVI   SPQEPTR,X'00'              ENSURE HI BYTE ZERO
         BAL   7,MSSROUTN                 LINK TO FORMAT MSS BLOCKS
         BAL   11,BLNKPRNT                SPACE OUTPUT
         L     7,ADPLBUF                  LOCATE PRINT BUFFER
         MVC   0(24,7),COMPMSG            MOVE COMPLETION MSG
         BAL   11,MSGSET                  LINK TO PRINT IT
         B     EXIT                       ALL DONE, RETURN TO PRTDMP
COMPMSG  DC    C'*** CSA MAP COMPLETE ***'
         DS    0F
         EJECT
********************************************************************
*
*        SUBROUTINE TO FORMAT MSS CONTROL BLOCKS.  THIS ROUTINE WILL
*        FORMAT SPQE'S, DQE'S, AND FQE'S, AND IS CALLED FOR BOTH
*        CSA AND FOR SQA.  A PATTERN IS SET UP, DEPENDING ONTHE
*        BLOCKS ACTUALLY FOUND, AND THE FORMAT/PRINT ROUTINE (FPROUT)
*        IS CALLED.  FPROUT WILL FORMAT THE MOVED MSS BLOCKS,DE-
*        PENDING ON THE PATTERN.  PATTERN IS A BYTE, '000SDF00', TO
*        ALLOW INDEXING TO PRTDMP PATTERN. (S = SPQE, D = DQE, AND
*        F = FQE).  THIS ALLOWS A COMMAN FORMAT/PRINT ROUTINE TO PRINT
*        THE BLOCKS, REGARDLESS OF WHICH, IF ANY, ARE PRESENT
*        (IF NO BLOCKS WERE GOTTEN, INDEX WILL BE ZERO, AND FPROUT
*        WILL RETURN TO CALLER.
*
******************************************************************
         SPACE 2
MSSROUTN LM    8,10,MAXSPQE               PICK UP MAX COUNTS
         STM   8,10,SPQECT                AND INITIALIZE LOOP COUNTS
SPQELP   SR    8,8                        CLEAR REG FOR INSERT
         ICM   8,7,SPQEPTR+1              GET SPQE POINTER
         BCR   8,7                        RETURN IF NONE
         MVC   DQECT(8),MAXDQE            SET NEW MAX CTS, DQE & FQE
         MVI   PATTERN,SDFPAT             SET PATTERN TO ALL
         BAL   11,GETBLOK                 GO GET SPQE
         LTR   15,15                      RETRIEVE OK ?
         BZ    TESTSCNT                   YES, GO TEST COUNT
         MVC   CBNAME,SPQECB              ELSE MOVE 'SPQE' TO MSG
         BAL   11,CBMSG                   LINK TO PRINT IT
         BR    7                          AND RETURN
TESTSCNT L     6,SPQECT                   PICK UP REMAINING COUNT
         BCT   6,SCNTOK                   BR IF NOT EXCEEDED
         MVC   CBLNAME,SPQECB             ELSE MOVE 'SPQE' TO LP MSG
         BAL   11,LOOPMSG                 LINK TO PRINT IT
         BR    7                          AND RETURN
SCNTOK   ST    6,SPQECT                   STORE DECREMENTED COUNT
         MVC   SPQE(12),0(8)              MOVE SPQE TO WORKAREA
         TM    FLGSPQE,X'80'              SHARED ?
         BZ    DQEONE                     NO, GO TO DQE PROCESS
         MVI   PATTERN,SPAT               SET TO F/P SPQE ONLY
         BAL   11,FPROUT                  LINK TO PRINT IT
         MVC   SPQEPTR+1(3),NSPQE+1       SET UP NEXT SPQE
         B     SPQELP                     GO TO SPQE PROCESS
DQELP    MVC   FQECT,MAXFQE               NEW DQE, RESET FQE COUNT
         MVI   PATTERN,DFPAT              SAME SPQE, SO D & F ONLY
DQEONE   SR    8,8                        CLEAR FOR INSERT
         ICM   8,7,DQEPTR+1               GET DQE ADDRESS
         BNZ   DQEXIST                    BR IF ONE EXISTS
DQEBAD   NI    PATTERN,SPAT               T/F ALL BUT SPQE
         BAL   11,FPROUT                  AND LINK TO F/PRINT
         MVC   SPQEPTR+1(3),NSPQE+1       SET UP NEXT SPQE
         B     SPQELP                     AND GO PROCESS IT
DQEXIST  BAL   11,GETBLOK                 GO GET DQE
         LTR   15,15                      RETRIEVE OK ?
         BZ    TESTDCNT                   YES, BR TO CHECK COUNT
         MVC   CBNAME,DQECB               ELSE MOVE 'DQE' TO MSG
         BAL   11,CBMSG                   & LINK TO PRINT IT
         B     DQEBAD                     BR OUTPUT & GET NEXT SPQE
TESTDCNT L     6,DQECT                    PICK UP COUNT OF DQE'S
         BCT   6,DCNTOK                   BR IF COUNT NOT EXCEEDED
         MVC   CBLNAME,DQECB              ELSE PUT 'DQE' LOOP MSG
         BAL   11,LOOPMSG                 & LINK TO PRINT IT
         B     DQEBAD                     BR TO F/P & GET NXT SPQE
DCNTOK   ST    6,DQECT                    STORE DECREMENTED COUNT
         MVC   DQE(16),0(8)               MOVE DQE TO WORKAREA
         LM    8,9,HIARCH                 GET LENGTH AND ADDRESS
         AR    9,8                        GET TOP OF BLOCK
         STM   8,9,BLOCK                  SET BOUNDARIES, IF NO FQE
         MVC    BLOCK+9(3),BLKLNGTH+1     SET LENGTH
FQELP    SR    8,8                        CLEAR REG FOR INSE
         ICM   8,7,FQEPTR+1               FQE ?
         BNZ   FQEXIST                    YES, BRANCH
FQEBAD   BAL   11,FPROUT                  LINK TO F/P ANY OTHERS
         MVC   DQEPTR+1(3),NDQE+1         SET NEXT DQE, IF ANY
         B     DQELP                      AND BRANCH TO PROCESS
FQEXIST  BAL   11,GETBLOK                 GO GET FQE
         LTR   15,15                      RETRIEVE OK ?
         BZ    TESTFCNT                   YES, BR TO CHECK COUNT
         MVC   CBNAME,FQECB               ELSE PUT 'FQE' IN MSG
         BAL   11,CBMSG                   AND LINK TO PRINT IT
         B     FQEBAD                     BR F/P & GET NXT DQE
TESTFCNT L     6,FQECT                    PICK UP FQE COUNT
         BCT   6,FCNTOK                   BR IF NOT EXCEEDED
         MVC   CBLNAME,FQECB              ELSE MOVE 'FQE' TO LOOP MSG
         BAL   11,LOOPMSG                 LINK TO PRINT IT,
         B     FQEBAD                     BR TO F/P & GET NXT DQE
FCNTOK   ST    6,FQECT                    STORE DECREMENTED COUNT
         MVC   FQE(12),0(8)               MOVE FQE TO WORKAREA
SP245    CLI   SUBPOOL,X'F5'              SQA 'SHORT' FQE ?
         BNE   FQEVALCK                   NO, CK AND SET VALID
         L     8,FQEPTR                   ELSE GET FQE ADDRESS
         LA    8,8(,8)                    ADD 8 TO GET TOP
         STCM  8,7,HIADDR+1               AND SET TOP OF FREE SPACE
         B     FQEVALID                   BYPASS VALIDITY CK
FQEVALCK SR    8,8                        CLEAR REG FOR INSERT
         ICM   8,7,BLKADDR                GET BLK ADR FROM DQE
         C     8,HIADDR                   FREE SPACE BELOW BLOCK ?
         BH    FQEFINCK                   YES, CK FOR 'SHORT' FQE
         A     8,BLKLNGTH                 ELSE ADD FOR TOP OF BLK
         C     8,HIADDR                   FREE SPACE ABOVE BLK ?
         BNL   FQEVALID                   BR, NOT 'SHORT' FQE
FQEFINCK CLC   FQEPTR+1(3),BLKADDR        FQE WITHIN BLOCK ?
         BL    FQEBAD                     BR NO, INVALID FQE
         SR    8,8                        CLEAR REG FOR INSERT
         ICM   8,7,BLKADDR                GET ADDRESS OF BLOCK
         A     8,BLKLNGTH                 POINT TO TOP OF AREA
         CLM   8,7,FQEPTR+1               FQE WITHIN BLOCK ?
         BL    FQEBAD                     NO, DON'T F/P
         L     8,FQEPTR                   ELSE GET FQE ADDRESS
         LA    8,8(,8)                    BUMP FOR TOP OF FQE
         STCM  8,7,HIADDR+1               AND DUMMY UP FOR SHORT FQE
FQEVALID  CLC  BLOCK+5(3),HIADDR+1        AT TOP OF BLOCK ?
          BNE  SETALLOC                   NO, BRANCH
SETTOP    LM   8,9,FREEBYTE               GET FREE AND HIGH ADDRESS
          SR   9,8                        CALCULATE BOTTOM OF FREE
          STCM 9,7,BLOCK+5                SET TOP OF NEXT ALLOCATED
          CLM  9,7,BLKADDR                ARE WE AT BOTTOM OF BLOCK?
          BE   FQEBAD+4                   YES- DON'T PRINT -QUIT
          MVC  BLOCK+1(3),BLKADDR         SET LO IN CASE NO FQE
          LM   8,9,BLOCK                  SET LENGTH
          SR   9,8                         IN CASE
          ST   9,BLOCK+8                    NO 'NEXT' FQE
          MVC  FQEPTR+1(3),NFQE           SET UP NEXT FQE
          B    FQELP                      AND GO PROCESS
SETALLOC  MVC  BLOCK+1(3),HIADDR+1        SET LO, HI SET FROM PREV
          LM   8,9,BLOCK                  GET EXTENTS OF ALLOCATED
          SR   9,8                        CALCULATE LENGTH
          ST   9,BLOCK+8                  AND STORE IT
          BAL  11,FPROUT                  LINK TO PRINT ALLOCATED
          MVI  PATTERN,FPAT               SET PATTERN FOR SUBSEQUENT
          B    SETTOP                     GO TO FINISH UP
         EJECT
******************************************************************
*
*        FORMAT/PRINT ROUTINE. SETS UP CORRECT PATTERN FOR AMDPRDMP
*        FORMAT ROUTINE, THEN CALLS THE FORMAT ROUTINE, AND, ON
*        RETURN, CALLS THE PRINT ROUTINE OF AMDPRDMP.  THE MAIN
*        INPUT IS THE PATTERN MASK, WHICH HAS BEEN SET BY THE MSS
*        ROUTINE.  IF YOU WISH TO CHANGE THE PRINTED OUTPUT IN
*        ANY WAY, YOU MAY MODIFY THE PRINT PATTERNS.  NOTE THAT
*        THERE ARE ACTUALLY SIX PATTERNS, AS FOLLOWS:
*
*        SDFPATN--PATTERN USED TO OUTPUT SPQE, DQE, & FQE
*        DFPATN---USED ON SUBSEQUENT DQE'S (SPQE PRINTED ON FIRST)
*        FPATN----USED FOR SUBSEQUENT FQE'S
*        SDPATN---USED WHEN NO FQE'S ON FIRST DQE
*        SPATN----USED WHEN NO DQE'S ON SPQE, OR SHARED SPQE
*        DPATN----USED ON SUBSEQUENT DQE WITH NO FQE'S
*
*        TEST IS MADE FOR ZERO PATTERN, AND FPROUT WILL RETURN, IF
*        SO. (NO MSS CONTROL BLOCKS TO BE FORMATTED.)
*
******************************************************************
         SPACE  2
*        PATTERN MASK
SDFPAT   EQU   X'1C'                      SPQE, DQE, AND FQE
DFPAT    EQU   X'0C'                      DQE AND FQE
FPAT     EQU   X'04'                      FQE ONLY
SDPAT    EQU   X'18'                      SPQE AND DQE
DPAT     EQU   X'08'                      DQE ONLY
SPAT     EQU   X'10'                      SPQE ONLY
FULLPAT  EQU   X'1C'                      = SDFPAT, AT THIS TIME
         SPACE  1
*        NOTE THAT X'14' PATTERN NOT PRESENT.  SPQE AND FQE WITHOUT
*        A DQE WOULD NOT OCCUR.
         SPACE  1
FPROUT   SR    5,5                        CLEAR INDEX REG
         ICM   5,1,PATTERN                GET AND CHECK PATTERN MASK
         BCR   8,11                       RETURN IF ZERO
         LA    6,PATTAB                   POINT TO TABLE OF ADCON'S
         L     0,0(5,6)                   USE INDEX TO GET ENTRY
FRMTPRNT L     15,ADPLFRMT                GET EP PRTDMP FORMAT
         BALR   14,15                     LINK TO IT, R0 = PATTERN
BLNKPRNT L     15,ADPLPRNT                GET PRINT ROUTINE E.P.
         BALR  14,15                      LINK TO IT
         BR    11                         RETURN TO CALLER
         SPACE  2
         DS    0F
*        ADCONS TO DIFFERENT FORMAT PATTERNS
         SPACE  1
PATTAB   DC     AL4(SDFPATN)              SHOULD NEVER BE USED
         DC    AL4(FPATN)
         DC    AL4(DPATN)
         DC    AL4(DFPATN)
         DC    AL4(SPATN)
         DC    AL4(SDFPATN)               SHOULD NEVER BE USED
         DC    AL4(SDPATN)
         DC    AL4(SDFPATN)
         SPACE  3
*        THESE ARE THE ACTUAL PATTERNS USED TO FORMAT THE MSS DATA.
*        THE DATA TO BE FORMATTED WILL BE IN FIELDS IN 'MSSDATA'.
*        MSSDATA LABELS MAY HAVE TO BE CHANGED, AND/OR THE AREA
*        RECODED, IF THE CONTROL BLOCKS CHANGE.  DSECT LAYOUT WAS
*        NOT USED, AS USING STATEMENTS WOULD HAVE 'TIED UP' THE
*        REGISTERS.  EACH COMPLETE PATTERN ENDS WITH A FULL WORD OF
*        ZEROES, AND ALTERNATE LABLES ARE USED TO FORMAT PARTIAL
*        LINES.  (EXAMPLE: DFPATN)
*
*
         SPACE  2
SDFPATN  DS    0F
         DC    X'1F320006'
         DC    AL4(SPQELBL)
         DC    AL4(SPQEPTR+1)
         DC    X'1D300E14'
         DC    AL4(FLGSPQE)
         DC    X'1D10181C'
         DC    AL4(SUBPOOL)
         DC    X'15202025'
DFPATN   DC    X'1F22292E'
         DC    AL4(DQELBL)
         DC    AL4(DQEPTR+1)
         DC    X'1D22363B'
         DC    AL4(BLKADDR)
         DC    X'1D224348'
         DC    AL4(BLKLNGTH+1)
FPATN    DC    X'1F82505B'
         DC    AL4(ALLOCLBL)
         DC    AL4(BLOCK+1)
         DC    X'1D026162'
         DC    AL4(BLOCK+5)
         DC    X'1D126A6E'
         DC    AL4(BLOCK+9)
         DC    F'0'
SDPATN   DC    X'1F320006'
         DC    AL4(SPQELBL)
         DC    AL4(SPQEPTR+1)
         DC    X'1D300E14'
         DC    AL4(FLGSPQE)
         DC    X'1D10181C'
         DC    AL4(SUBPOOL)
         DC    X'15202025'
DPATN    DC    X'1F22292E'
         DC    AL4(DQELBL)
         DC    AL4(DQEPTR+1)
         DC    X'1D22363B'
         DC    AL4(BLKADDR)
         DC    X'1D224348'
         DC    AL4(BLKLNGTH+1)
         DC    F'0'
SPATN    DC    X'1F320006'
         DC    AL4(SPQELBL)
         DC    AL4(SPQEPTR+1)
         DC    X'1D300E14'
         DC    AL4(FLGSPQE)
         DC    X'1D10181C'
         DC    AL4(SUBPOOL)
         DC    X'15202025'
         DC    F'0'
         EJECT
******************************************************************
*
*        SUBROUTINE TO GET A DUMPED PAGE.  USES REGISTERS 0,8,9,
*        14, AND 15.  INPUT IN REG 8 IS THE ADDRESS OF BLOCK TO BE
*        GOTTEN.  THIS ROUTINE SETS UP FOR PAGE ACCESS, AND, ON
*        RETURN, SETS REG 8 TO CORE LOCATION OF RETRIEVED CONTROL
*        BLOCK.  RETURN CODE IS PASSED IN REG 15 TO CALLER.
*        RC = 0, IF BLOCK SUCCESSFULLY RETRIEVED.
*
******************************************************************
         SPACE  2
GETBLOK  SRDL  8,12(0)                    SET PAGE ADDRESS
         SLL   8,12(0)                     IN REGISTER 8
         SRL   9,20(0)                     DISPLACEMENT IN REG 9
         LR    0,8                        SET 0 FOR ACCESS
         L     15,ADPLMEMA                GET ACCESS ROUTINE E.P.
         BALR  14,15                      AND GO GET THE PAGE
         LR    8,0                        TRANSFER CORE LOCATION
         AR    8,9                        ADD DISPLACEMENT BACK
         BR    11                         AND RETURN, REG 8 SET
         SPACE  2
*        MESSAGE ROUTINES
         SPACE  2
LOOPMSG  L     6,ADPLBUF                   GET PRINT BUFFER
         MVC   0(25,6),CBLOOPMS           MOVE 'POSSIBLE LOOP' MSG
         B     MSGSET                     BR TO OUTPUT MSG
CBMSG    L     6,ADPLBUF                  GET PRINT BUFFER
         MVC   0(25,6),CBUNAV             MOVE 'UNAVAILABLE' MSG
MSGSET   L     15,ADPLPRNT                GET PRINT ROUTINE E.P.
         BALR  14,15                      LINK TO IT
         BR    11                         AND THEN RETURN
         SPACE  2
*        MESSAGES
         SPACE  2
TITLE    DC    C'*** CSA MAP ***'
CBUNAV   DC    C'UNABLE TO ACCESS '
CBNAME   DC    C'BLOCK   '
         DC    C'CSAMAP TERMINATING    '
CBLOOPMS DC    C'POSSIBLE LOOP IN '
CBLNAME  DC    C'BLOCK   '
CMSSBLK  DC    C'*** CSA MSS BLOCKS ***'
SMSSBLK  DC    C'*** SQA MSS BLOCKS ***'
         EJECT
MSSDATA  DS    0F
SPQEPTR  DC    F'0'
SPQE     EQU   *
NSPQE    DC    F'0'
DQEPTR   DC    F'0'
FLGSPQE  DC    XL1'00'
RSVDSPQE DC    XL1'00'
SUBPOOL  DC    XL1'00'
KEY      DC    XL1'00'
DQE      EQU   *
FQEPTR   DC    F'0'
NDQE     DC    F'0'
HIARCH   DC    XL1'00'
BLKADDR  DC    XL3'00'
BLKLNGTH DC    F'0'
FQE      EQU   *
FLGFQE   DC    XL1'00'
NFQE     DC    XL3'00'
FREEBYTE DC    F'0'
HIADDR   DC    F'0'
         SPACE  2
*        FOLLOWING IS PATTERN MASK, SET BY CALLERS OF FPROUT.
         SPACE  2
PATTERN  DC    XL1'1C'                    INITIALIZED TO SDF
         SPACE  2
*        FOLLOWING ARE LABELS FOR AMDPRDMP FORMAT ROUTINE.
SPQELBL  DC    C'SPQEFLAGSPKEY'
DQELBL   DC    C'DQEBLKLNG'
ALLOCLBL DC    C'ALLOCATED-LN'
         EJECT
*        FOLLOWING IS THE WORKAREA.
         SPACE  3
CSAWORK  DS    0F                         ALLIGN TO WORD
CMAPSAV  DS    18F
SAVPTR   DS    1F
BLOCK    DC    3F'0'
GDAPTR   DC    F'0'
MYGDA    DS    14F                        MOVED GDA
PQEPTR   DC    F'0'
MYPQE    DS    8F                         MOVED PQE (CSA)
MYFBQE   DS    4F'0'                      MOVED FBQE
MAXSPQE  DC    F'200'                     CSA SPQE MAX COUNT
MAXDQE   DC    F'200'                     CSA MAX DQE COUNT
MAXFQE   DC    F'200'                     CSA MAX FQE COUNT
SPQECT   DS    1F                         OPERATIONAL SPQE COUNT
DQECT    DS    1F                         OPERATIONAL DQE COUNT
FQECT    DS    1F                         OPERATIONAL FQE COUNT
SQACT    DC    F'5'                       SQA MAX COUNTS - SPQE
         DC    F'50'                                     - DQE
         DC    F'700'                                    - FQE
         EJECT
CVTCB    DC    CL8'CVT'                   LABELS FOR MESSAGES
GDACB    DC    CL8'GDA'
SPQECB   DC    CL8'SPQE'
DQECB    DC    CL8'DQE'
FQECB    DC    CL8'FQE'
CPQECB   DC    CL8'CSA PQE'
CFBQECB  DC    CL8'CSA FBQE'
*        DSECTS FOR LABEL REFERENCES FO ADPL AND GDA
         IHAABDPL
         IHAGDA
         END   CSAMAP1
