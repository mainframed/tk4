MERKNOW  TITLE 'SUPPORT SUBROUTINE FOR JOHNSON && JOHNSON NOW MACRO.'
*%A AMODGEN LO(WUI1.SUBLIB)
***********************************************************************
*                                                                     *
*  COPYRIGHT (C) 1976 BY JEFFREY C. VAN DOREN.  ALL RIGHTS            *
*  RESERVED EXCEPT:                                                   *
*                                                                     *
*  PARTICULAR LICENSE IS GRANTED TO DISTRIBUTE THIS PROGRAM FREE      *
*  OF CHARGE, BUT IT MUST NOT BE SOLD.  A SERVICE CHARGE FOR          *
*  HANDLING A COLLECTION OF SOFTWARE OF WHICH THIS IS A PART,         *
*  ON THE OTHER HAND, IS APPROPRIATE.                                 *
*                                                                     *
*                                  BROIDO COMPUTER CONSULTING         *
*                                  104 MILLS STREET                   *
*                                  MORRISTOWN, N.J.  07960            *
*                                                                     *
***********************************************************************
         SPACE 1
***********************************************************************
*                                                                     *
*        MODIFIED  TO  SET  STORAGE KEY TO USER'S NORMAL KEY TO       *
*        PREVENT OVERLAYS OF STORAGE IF BAD DESTINATION PARM IS       *
*        PASSED IN REG 1.                                             *
*                                                                     *
*                                  JEFFREY R. BROIDO - 21 FEB 79      *
*                                                                     *
***********************************************************************
         SPACE 1                                                   JRB
***********************************************************************
*                                                                     *
*        MACLIBS:     SYS1.AMODGEN                                 JRB*
*                     CBT.MACLIB.ASM                               JRB*
*                     SYS1.MACLIB                                  JRB*
*                                                                     *
***********************************************************************
         SPACE 2
MERKNOW  CSECT
         STM   14,12,12(13)         LINKAGE ....                   VRK
         LR    12,15                ....                           VRK
         USING MERKNOW,12           ....                           VRK
         LR    14,13                ....                           VRK
         LA    13,SAVE              ....                           VRK
         ST    13,8(,14)            ....                           VRK
         ST    14,4(,13)            .... CONVENTIONS               VRK
         LR    11,1                SAVE REGISTER 1 IN 11
         LR    8,2                 PUT R2 IN R8 FOR CONSISTENCY    VRK
         LR    3,0                 LOAD PARMS IN 0 FOR CONSISTENCY VRK
         LTR   10,0                Q. SYSTEM FUNCTION?
         BZ    SYSFUNC
EXTPRES  EQU   *
         TITLE 'SUPPORT FOR NOW MACRO                     J. VAN DOREN'
         STC   0,FUNCTION          SAVE FUNCTION
         L     1,16                POINT TO CVT.                   JRB
         L     1,0(,1)             POINT TO TCB WORDS.             JRB
         L     1,4(,1)             POINT TO CURRENT TCB.           JRB
         USING TCBFIX,1            BASE TCB.                       JRB
         USING RBPRFX,3            BASE RB.                        JRB
         LA    1,2                 TIME=STD
         SVC   11                  ISSUE TIME SVC
         LR    15,8
         TM    FUNCTION,X'80' Q    HAS DAY AND TIME BEEN PROVIDED?
         BZ    NOTPROVD            - NO
         XC    DBLWORD,DBLWORD     CLEAR WORK
         MVC   DBLWORD+1(6),0(15)  MOVE IN PROVIDED DATA
         LA    8,DBLWORD+1
         LA    7,2
         BAL   9,LOOP1
         MVI   DBLWORD+7,X'0F'
         LA    7,3
         LA    8,DBLWORD+4
         BAL   9,LOOP1
         L     1,WORD1             INSERT DAY
         L     0,WORD              INSERT TIME
NOTPROVD EQU   *
         SRL   0,4                 SHIFT TIME 0HHMMSST
         STM   0,1,TIME            SAVE THEM
         TM    FUNCTION,2          Q. NOWKDAY
         BZ    CHK2
         SH    11,=H'10'
CHK2     TM    FUNCTION,4
         BZ    CHK3
         SH    11,=H'10'
         TM    FUNCTION,2
         BNZ   CHK3
         SH    11,=H'10'
CHK3     TM    FUNCTION,8
         BO    NOTIME
         EJECT
         SPACE  3
*    REGISTER 0 CODE MEANINGS (BYTE 3)
* 100000000 R15 DAY IS TO BE USED INSTEAD OF SYSTEM DATE
* 00000001 STANDARD FORMAT
* 00000010 NO WEEKDAY IS TO BE PRINTED
* 00000100 SLASH DATE FORMAT MM/DD/YY
* 00001000 NO TIME IS TO BE PRINTED
         SPACE 3
*        STANDARD FORMAT: (41 BYTES LONG (MAX) RIGHT JUSTIFIED)
*         WWWWWWWWW MMMMMMMMM DD, 19YY, HH.MM.SS XM
* E.G.          MONDAY JANUARY 1, 1973, 10.55.00 PM
*                    FRIDAY MAY 4, 1973, 8.15.13 AM
*         WEDNESDAY SEPTEMBER 12, 1973, 12.03.00 PM
         SPACE  3
STANDARD EQU   *
         OI    TIME+3,X'0F'        FIX SIGN
         MVC   28(13,11),TIMEMASK  MOVE IN MASK
         CP    TIME,=P'120000'     Q. PAST 12
         BL    AM                  NO
         MVI   39(11),C'P'         MOVE IN P FOR PM
         SP    TIME,=P'120000'     MAKE FROM 0-12
AM       CP    TIME,=P'9999'       Q. ZERO HOUR
         BH    *+10                NO
         AP    TIME,=P'120000'     MAKE IT 12 IF 0
         ED    28(11,11),TIME      EDIT IN TIME
         MVI   0(11),C' '
         CLI   30(11),C' '         HIGH ORDER HOUR BLANK?
         BNE   *+8
         LA    11,1(11) .          BUMP TO POINTER
         MVI   28(11),C','         MOVE IN COMMA
         EJECT
         SPACE 3
*        DETERMINE MONTH
         SPACE 3
NOTIME   LA    6,MONTHS            START OF TABLE
         SRL   1,12                SHIFT TO GET YEAR
         ST    1,WORD              SAVE IT
         OI    WORD+3,X'0F'        FIX SIGN
         XC    WORD1,WORD1         CLEAR WORD
         SP    DAYS,0(2,6)         SUBTRACT NUMBER OF DAYS IN MONTH
         BNP   MONTHHIT            IF NOT POS RIGHT MONTH
         CVB   9,DBLWORD
         SR    8,8                 DETERMINE LEAP YEAR
         D     8,=F'4'
         LTR   8,8                 IF REMAINDER ZERO THIS IS LEAP YEAR
         BNZ   MONTHLP
         SP    DAYS,PACKED1        SUBRACT 1 DAY FOR LEAP YEAR
MONTHLP  LA    6,16(6)             BUMP TABLE POINTER
         SP    DAYS,0(2,6)         SUBTRACT DAYS PER MONTH
         BP    MONTHLP
MONTHHIT AP    DAYS,0(2,6)         REG 6=MONTH INDEX
         CLC   =C' 2',14(6)        FEBRUARY?                       JRB
         BNE   NOTLF               B IF NOT.                       JRB
         LTR   8,8                 LEAP YEAR?                      JRB
         BNZ   NOTLF               B IF NOT.                       JRB
         AP    DAYS,PACKED1        ADD BACK ONE DAY FOR FEB. YECH. JRB
*        I INITIAL THE ABOVE LINES RELUCTANTLY.                    JRB
NOTLF    TM    FUNCTION,4
         BZ    NOSLASH
SLASH    UNPK  26(2,11),WORD       INSERT YEAR
         OI    27(11),X'F0'        FIX SIGN
         UNPK  23(2,11),DAYS       INSERT DAYS
         OI    24(11),X'F0'        FIX SIGN
         MVC   20(2,11),14(6)      MOVE IN MONTH
         MVI   25(11),C'/'
         MVI   22(11),C'/'
         B     ENOWKDAY                                 TAR
LOOP1    EQU   *
         TM    0(8),X'80'
         BZ    OK1
         TM    0(8),X'60'
         BNZ   BADDTA
OK1      EQU   *
         TM    0(8),X'08'
         BZ    OK2
         TM    0(8),X'06'
         BNZ   BADDTA
OK2      EQU   *
         LA    8,1(8)
         BCT   7,LOOP1
         TM    0(8),X'80'
         BZ    OK3
         TM    0(8),X'60'
         BNZ   BADDTA
OK3      EQU   *
         TM    0(8),X'0F'
         BNO   BADDTA
         BR    9
BADDTA   EQU   *
         LA    15,8
         B     LAST
NOSLASH  EQU   *
         UNPK  26(2,11),WORD       PUT IN YEAR
         OI    27(11),X'F0'        FIX SIGN
         UNPK  20(2,11),DAYS       PUT IN DAY
         MVC   22(4,11),=C', 19'   MOVE IN CENTURY
         OI    21(11),X'F0'        FIX SIGN
         MVI   0(11),C' '
         CLI   20(11),C'0'
         BNE   *+8
         LA    11,1(11)
         MVI   19(11),C' '
         MVC   10(9,11),2(6)       MOVE IN MONTH
         SR    2,2
         IC    2,11(6)             SAVE LENGTH INDEX
         TM    FUNCTION,2
         BNZ   ENOWKDAY
         AP    DAYS,12(1,6)       ADD FUDGE
         EJECT
         SPACE 3
*  FORMULA FOR DAY OF WEEK
*  DOW IS REMAINDER OF (D+FUDGE+5(3+YRADJ/4)+R)/7
* YRADJ=  YEAR IF MONTH>2 OR YEAR-1 IF MONTH<3
* FUDGE IS TABLE ENTRY 4
* R=REMAINDER OF YRADJ/4
* D=DAY OF MONTH
* DOW=0=SUNDAY, 1=MONDAY, U.S.W.
         SP    WORD,13(1,6)        NORMALIZE YEAR
         XC    WORD1,WORD1
         CVB   9,DBLWORD
         SR    8,8                 CLEAR FOR DIVIDE
         D     8,=F'4'
         LA    9,3(9)              ADD 3
         MH    9,=H'5'             MULTIPLY BY 5
         ZAP   DBLWORD,DAYS
         CVB   6,DBLWORD
         LA    9,0(8,9)
         SR    8,8
         LA    9,0(6,9)
         D     8,=F'7'
         LR    15,8                DAY OF WEEK IN R15
         MVI   0(11),C' '
         MVC   1(9,11),0(11)        CLEAR IT
         AR    2,11                 INDEX FOR MOVE
         MH    8,=H'7'             DAY TABLE LENGTH
         LA    7,DAYNAMES(8)
         MVC   0(6,2),0(7)         MOVE IN DAY
         MVC   6(3,2),=C'DAY'
         SR    1,1                  CLEAR REG 1
         IC    1,6(7)
         AR    1,2                 START OF STRING IN R1
         B     LAST                RETURN
ENOWKDAY LA    1,0(2,11)
         B     RETURN
         EJECT
         SPACE 3
* MONTH TABLE IN THE FOLLOWING FORMAT:
* PL2 NUMBER OF DAYS PER MONTH
* CL9 RT JUSTIFIED MONTH NAME                                      JRB
* 1 BYTE BINARY DIFF. OF 9 AND LENGTH OF MONTH.                    JRB
* PL1 NORMAL YEAR (BASE MARCH ADJUSTMENT)
*  CL2 MONTH NUMBER
          SPACE  3
MONTHS   DC    P'31',CL9'  JANUARY',AL1(2),P'0',P'1',C' 1'
         DC    P'28',CL9' FEBRUARY',AL1(1),P'3',P'1',C' 2'
         DC    P'31',CL9'    MARCH',AL1(4),P'2',P'0',C' 3'
         DC    P'30',CL9'    APRIL',AL1(4),P'5',P'0',C' 4'
         DC    P'31',CL9'      MAY',AL1(6),P'0',P'0',C' 5'
         DC    P'30',CL9'     JUNE',AL1(5),P'3',P'0',C' 6'
         DC    P'31',CL9'     JULY',AL1(5),P'5',P'0',C' 7'
         DC    P'31',CL9'   AUGUST',AL1(3),P'1',P'0',C' 8'
         DC    P'30',CL9'SEPTEMBER',AL1(0),P'4',P'0',C' 9'
         DC    P'31',CL9'  OCTOBER',AL1(2),P'6',P'0',C'10'
         DC    P'30',CL9' NOVEMBER',AL1(1),P'2',P'0',C'11'
         DC    P'31',CL9' DECEMBER',AL1(1),P'4',P'0',C'12'
TIMEMASK DC    X'402020214B20204B202040',C'AM'
PACKED1  DC    PL2'1'
DAYNAMES DC    CL6'   SUN',AL1(3)
         DC    CL6'   MON',AL1(3)
         DC    CL6'  TUES',AL1(2)
         DC    CL6'WEDNES',AL1(0)
         DC    CL6' THURS',AL1(1)
         DC    CL6'   FRI',AL1(3)
         DC    CL6' SATUR',AL1(1)
         TITLE 'SUPPORT FOR $LOADPSW MACRO                J. VAN DOREN'
SYSFUNC  CLC   1(5,11),SYSCONST    Q. VALID LIST FOR $LOADPSW?
         BNE   BADRET              NO
         XC    17(1,6),0(11)       FLIP FLOP BITS IN PSW
         XC    0(1,11),17(6)       *
         XC    17(1,6),0(11)       *
RETURN   XR    15,15               SET RETURN CODE
         B     LAST                 BRANCH TO LAST
         SPACE 3
BADRET   LA    15,16               SET BAD RETURN CODE
LAST     L     13,4(,13)                 RESTORE CALLERS SAVE AREA VRK
         L     14,12(,13)                RESTORE R14               VRK
         LM    0,12,20(13)               RESTORE REST OF REGISTERS VRK
         BR    14                        OUT                       VRK
         SPACE 3
ENABLE   DC    X'FF'               SYSTEM MASK FOR ENABLED STATE
SYSCONST DC    C'$',X'17000AFC'    SECUTITY LIST CHECKER
SAVE     DS    18F
         LTORG
         DS    0D                  END OF MODULE
DBLWORD  DS    0D
WORD1    DS    F
WORD     DS    F
TIME     DS    F                   0HHMMSST
DAY      DS    F                   00YYDDDF
         ORG   *-2
DAYS     DS    PL2
         ORG
FUNCTION DS    C                   FUNCTION BYTE FROM R0
         IKJTCB                                                    JRB
         IHARB                                                     JRB
         END
