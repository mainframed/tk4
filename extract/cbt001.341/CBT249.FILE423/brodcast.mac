BRODCAST TITLE 'BRODCAST - LOAD ''SYS1.BRODCAST'' DATASET.  '
*%A AMODGEN PPLINK AC(1) NOTEST SUBLIB
         SPACE 1
***********************************************************************
*                                                                     *
*  COPYRIGHT (C) 1982 BY BROIDO COMPUTER CONSULTING.  ALL RIGHTS      *
*  RESERVED EXCEPT:                                                   *
*                                                                     *
*  PARTICULAR LICENSE IS GRANTED TO DISTRIBUTE THIS PROGRAM FREE      *
*  OF CHARGE, BUT IT MUST NOT BE SOLD.  A SERVICE CHARGE FOR          *
*  HANDLING A COLLECTION OF SOFTWARE OF WHICH THIS IS A PART,         *
*  ON THE OTHER HAND, IS APPROPRIATE.                                 *
*                                                                     *
*                                  BROIDO COMPUTER CONSULTING         *
*                                  104 MILLS STREET                   *
*                                  MORRISTOWN, N.J.  07960            *
*                                                                     *
***********************************************************************
         SPACE 1
         GBLC  &TSO,&QUOTE
         GBLB  &VITAL
&TSO     SETC  'VANILLA'           SET TO 'E' FOR TSO/E, IN ...
*                                  ... WHICH CASE PROGRAM MUST ...
*                                  ... BE AUTHORIZED.
&QUOTE   SETC  'SYS1.DAILY.QUOTE'  PDS CONTAINING NOTICES/QUOTATIONS.
&VITAL   SETB  (1)                 SET TO 0 TO SUPPRESS SETTING ...
*                                  ... VITAL MESSAGE BIT IN ...
*                                  ... CVTUSER. IF &VITAL IS 1, ...
*                                  ... PROGRAM MUST BE AUTHORIZED.
         SPACE 1
***********************************************************************
*                                                                     *
*   BRODCAST - PROGRAM TO LOAD NOTICES AND AN OPTIONAL QUOTE-OF-      *
*       THE-DAY FROM AN EDITABLE PDS TO 'SYS1.BRODCAST'.  THIS        *
*       PROGRAM WILL RUN EITHER AS A TSO COMMAND OR AS A STARTED      *
*       TASK.  IT IS INTENDED THAT THIS PROGRAM RUN AT LEAST ONCE     *
*       DAILY, PERHAPS AT 01:00, TO LOAD THE QUOTE-OF-THE-DAY.        *
*       THE RESULTS ARE NOT CUMULATIVE, AND ALL NOTICE/QUOTE          *
*       INFORMATION IS RE-WRITTEN EACH TIME THE PROGRAM RUNS (IT      *
*       TAKES NO MORE THAN A COUPLE OF SECONDS).                      *
*       THE PROGRAM INTERFERES IN NO WAY WITH NORMAL 'SYS1.BRODCAST'  *
*       PROCESSING, AND EITHER SEND COMMAND CAN BE USED TO ADD        *
*       NOTICES AND MAIL AS NORMAL.                                   *
*                                                                     *
*       THE SIGNIFICANT ATTRIBUTES OF THE SOURCE PDS ARE:             *
*       LRECL(92) RECFM(V B) DSORG(PO).  THE NOTICE MEMBER NAMES      *
*       ARE OF THE FORM HEAD@@@@ WHERE @@@@ IS THE SMF ID OF THE      *
*       SYSTEM THE PROGRAM IS RUNNING ON.  THUS, YOU CAN HAVE         *
*       MULTIPLE NOTICE MEMBERS FOR MULTIPLE SYSTEMS SHARING ONE      *
*       SOURCE PDS.  THE QUOTE-OF-THE-DAY MEMBER NAMES ARE OF THE     *
*       FORM QYYMMDD, WHERE YYMMDD, OBVIOUSLY, IS THE YEAR, MONTH     *
*       AND DAY.                                                      *
*                                                                     *
*       IN EITHER TYPE OF MEMBER, ONLY COLUMNS 9-76 ARE               *
*       SIGNIFICANT, ALLOWING STANDARD VARIBLE RECORD SEQUENCE        *
*       NUMBERS IN COLUMNS 1-8.  LINES WITH /* STARTING IN COLUMN     *
*       9 ARE TREATED AS COMMENDS WITH THE EXCEPTION THAT IF, IN      *
*       THE APPROPRIATE NOTICE MEMBER, THE TEXT "/*VITAL" BEGINS      *
*       ANY RECORD, THE PROGRAM WILL TURN ON THE SECOND BIT           *
*       (X'40') IN THE FIRST BYTE OF CVTUSER TO TELL A COMPANION      *
*       LOGON EXIT (IKJEFLD) THAT THE NOTICES ARE VITAL, AND NOT      *
*       TO ALLOW SUPPRESSION VIA THE LOGON KEYWORD "NONOTICES".       *
*                                                                     *
*       IN QUOTE MEMBER RECORDS, AN "@" OR "#" IN COLUMN 9            *
*       SIGNIFIES THAT THE RECORD IS PART OF THE QUOTATION'S          *
*       BACKGROUND INFORMATION, AND NOT TO BE DISPLAYED AT LOGON,     *
*       BUT ONLY IF THE TSO USER EXECUTES THE "QUOTE" COMMAND.        *
*       RECORDS STARTING WITH ANYTHING ELSE ARE PART OF THE MAIN      *
*       LOGON-TIME QUOTATION, AND ARE PLACED AFTER THE NOTICES        *
*       FROM MEMBER HEAD@@@@.  THE "#" SIGNIFIES THAT THE QUOTE       *
*       COMMMAND SHOULD STOP BEFORE DISPLAYING THE LINE(S) IN         *
*       QUESTION AND ASK IF THE USER WISHES TO SEE ANY MORE           *
*       BACKGROUND INFORMATION.  THE FOLLOWING ARE EXAMPLES OF        *
*       TWO QUOTE MEMBERS:                                            *
*                                                                     *
*   COL. 9                                                 col. 76    *
*   ×                                                            ×    *
*       THE FOLLOWING IS MEMBER Q850524:                              *
*                                                                     *
*   "The world will never have lasting peace so long as men           *
*       reserve for war the finest human qualities."                  *
*                                   John Foster Dulles (1888-1959)    *
*   @This to remind us that next Thursday, observed Monday, is        *
*   @Memorial Day.                                                    *
*   @Dr. L. J. Peter, "Peter's Quotations," first edition, P515.      *
*                                                                     *
*           A MORE GENERALLY COMPLEX EXAMPLE IS Q850626:              *
*                                                                     *
*          "And I honor the man who is willing to sink                *
*           Half his present repute for the freedom to think,         *
*           And, when he has thought, be his cause strong or weak,    *
*           Will risk t' other half for the freedom to speak."        *
*                                      James Russell Lowell (1848)    *
*   @From "A Fable for Critics."  Appropriate to the title of the     *
*   @poem is another stanza:                                          *
*   @    "Nature fits all her children with something to do,          *
*   @     He who would write and can't write, can surely review."     *
*   @John Bartlett, "Familiar Quotations," 15th ed., P567:17,19.      *
*   #Years before, in 1811, Samuel Coleridge said in a lecture,       *
*   @"Reviewers are usually people who would have been poets,         *
*   @historians, biographers, etc., if they could; they have tried    *
*   @their talents at one or at the other, and have failed;           *
*   @therfore they turn critics."                                     *
*   @John Bartlett, "Familiar Quotations," 15th ed., P436:15.         *
*   #And years later, in 1870, Benjamin Disraeli wrote in chapter     *
*   @35 of his book, "Lothair," "You know who the critics are?        *
*   @The men who have failed in literature and art."                  *
*   @John Bartlett, "Familiar Quotations," 15th ed., P502:12.         *
*                                                                     *
*        ASM SYSLIB: SYS1.MACLIB, SYS1.AMODGEN, CBT.MACLIB.ASM.       *
*        LKED SYSLIB: WUI1.SUBLIB (FOR SUBROUTINE MERKNOW).           *
*        NOT REENTRANT.                                               *
*                                                                     *
*                                  JEFFREY R. BROIDO                  *
*                                  BROIDO COMPUTER CONSULTING         *
*                                  104 MILLS STREET                   *
*                                  MORRISTOWN, NJ  07960              *
*                                                                     *
*        WRITTEN IN MARCH, 1982 BY J. R. BROIDO AT AMERICAN           *
*        INTERNATIONAL GROUP, INC., EAST ORANGE, NJ, REPLACING        *
*        A CUMBERSOME CLIST DRIVEN PROCESS DESIGNED BY THE            *
*        AUTHOR AT JOHNSON & JOHNSON, RARITAN, NJ IN 1979.            *
*                                                                     *
***********************************************************************
         SPACE 1
BRODCAST CSECT
         REGS
         USING BRODCAST,R15        (ESTABLISH TEMPORARY BASE).
         B     BEGIN               SKIP OVER HEADER.
HEAD0    DC    AL1(HEADL)          EXCLUSIVE LENGTH OF HEADER.
HEAD     DC    C'BRODCAST - &SYSDATE - &SYSTIME -'
         DC    C'COPYRIGHT (C) BROIDO COMPUTER CONSULTING '
         DC    C'1982 - '
         DC    C'ALL RIGHTS RESERVED'
HEADL    EQU   *-HEAD
         DROP  R15                 (DROP TEMPORARY BASE).
BEGIN    STM   R14,R12,12(R13)
         LR    R12,R15
         USING BRODCAST,R12
         LR    R14,R13
         LA    R13,SAVE
         ST    R14,SAVE+4
         ST    R13,8(,R14)
         SPACE 1
         L     R1,16               POINT TO CVT.
         L     R1,0(,R1)           POINT TO TCB-ASCB WORDS.
         L     R2,8(,R1)           POINT TO MY ASCB.
         USING ASCB,R2             (TELL ASSEMBLER).
         LA    R15,8               DEFAULT CC TO 8.
         CLC   =A(0),ASCBJBNI      IS THIS A TSO USER OR STARTED TASK?
         BNE   EOJNOF              B IF NOT EITHER.
         L     R2,0(,R1)           POINT TO TCB.
         USING TCB,R2              (TELL ASSEMBLER).
         L     R2,TCBJSCB          POINT TO JSCB.
         USING IEZJSCB,R2          (TELL ASSEMBLER).
         ICM   R3,X'F',JSCBPSCB    POINT TO PSCB.
         USING PSCB,R3             (TELL ASSEMBLER).
         BZ    CKALLOC             B IF THERE IS NO PSCB.  MUST BE STC.
         TM    PSCBATR1,PSCBCTRL+PSCBACCT  DOES USER HAVE ...
*                                  ... OPER AND ACCT PRIVELEGES?
         BO    CKALLOC             B IF YES.
         VTPUT 'Sorry, you are not authorized to execute this command.'
         LA    R15,8               SET CC OF 8.
         B     EOJNOF              BYE.
         DROP  R3
CKALLOC  L     R3,JSCDSABQ         POINT TO QDB FOR DSAB QUEUE.
         DROP  R2
         L     R3,12(,R3)          POINT TO FIRST DSAB.
         LA    R4,DDTAB            POINT TO DD NAME TABLE.
DDNLOOP  CLI   0(R4),0             END OF TABLE?
         BE    OPEN                B IF YES.
         LR    R2,R3               POINT TO FIRST DSAB.
DSABLOOP LTR   R2,R2               END OF DSAB CHAIN?
         BE    ALLOC               B IF YES.
         L     R1,16(,R2)          POINT TO TIOT ENTRY FOR DDNAME.
         CLC   0(8,R4),4(R1)       DDNAME MATCH MY TABLE?
         BE    DDNBUMP             B IF YES.  CK NEXT DDN IN TABLE.
         L     R2,4(,R2)           POINT TO NEXT DSAB.
         B     DSABLOOP            LOOP THROUGH DSAB QUEUE.
ALLOC    MVC   TU0001L,8(R4)       MOVE LENGTH OF DDNAME TO TU.
         MVC   DDNAME,0(R4)        MOVE DDNAME.
         LH    R1,10(,R4)          LOAD LENGTH OF DSNAME.
         STH   R1,TU0002L          SAVE DSN LENGTH IN TU0002
         BCTR  R1,*-*              GENERATE SS LENGTH.
         EX    R1,MVDSN            MOVE DSNAME TO TU0002
*      ( MVC   DSN(*-*),12(R4)   )
         LA    R1,S99RBPTR         POINT TO RB FOR DYNALLOC.
         DYNALLOC                  ALLOCATE DATASET.
         LTR   R15,R15             ALLOCATE OK?
         BNZ   ALLOCFA             B IF NOT.
DDNBUMP  LH    R1,10(,R4)          POINT TO ...
         LA    R4,12(R1,R4)        ... NEXT DD TABLE ENTRY.
         B     DDNLOOP             CHECK NEXT ENTRY IN DD TABLE.
ALLOCFA  ST    R15,D99RET          SAVE DYNALLOC RETURN CODE.
         LA    R1,DFPARM           POINT TO DAIRFAIL PARMS.
         LINK  EP=IKJEFF18         ISSUE DAIRFAIL MESSAGE.
         LA    15,8                LOAD CC OF 8.
         B     EOJNOF              EXIT
OPEN     OPEN  (SYSLBC,UPDAT,QUOTE)
         LA    R15,8               PRE-LOAD CC OF 8.
         TM    SYSLBC+48,X'10'     BRODCAST DATASET OPEN OK?
         BZ    EOJNOF              B IF NOT.
         TM    QUOTE+48,X'10'      QUOTE DATASET OPEN OK?
         BZ    EOJNOF              B IF NOT.
         LH    R2,QUOTE+X'3E'      LOAD BLOCKSIZE.
         GETMAIN RU,LV=(R2)        GET QUOTE DS BUFFER STORAGE.
         ST    R1,QBHEAD           SAVE BUFFER POINTER.
         L     R1,X'10'            POINT TO CVT.
         USING CVT,R1              (TELL ASSEMBLER).
         ICM   R1,X'F',CVTSMCA     POINT TO SMCA.
         USING SMCABASE,R1         (TELL ASSEMBLER).
         BZ    EOJ8                B IF SMF NOT PRESENT.
         MVC   SMFID,SMCASID       MOVE SMF ID
         DROP  R1
         FIND  QUOTE,MEMNAME,D     FIND MEMBER "HEADSSSS" WHERE ...
*                                  ... SSSS IS SMF ID.
         LTR   R15,R15             HEADER FOUND?
         BNZ   EOJ8                B IF NOT.
         LA    R10,QEHEAD          POINT TO FIRST EOD ROUTINE ADDRESS.
QNEBH    ENQ   (QNAME,BLOCK#,E,3,SYSTEM),RET=HAVE ENQ B'CST HEADER.
         LTR   R3,R15              ENQ OK?
         BZ    READBH              B IF YES.
         VWTPU 'LOGIC ERROR ENQ''ING BROADCAST HEADER.'
         LR    R15,R3              RESTORE CC.
         B     EOJ                 BYE.
READBH   ON    HENQFG              TURN ON HEADER ENQUEUE FLAG.
         BAL   R14,BREAD           READ BRODCAST HEADER.
         MVC   BRRN0,BDATA         SAVE HEADER.
         MVC   SYSLBC+82(2),BRRN0+10  MOVE NUMBER OF RECS. IN BRODCAST
*                                  ... DATASET TO LIMCT IN DCB.
         XC    BRRN0+123(6),BRRN0+123 CLEAR QUOTE 1ST + LAST LINE PTRS.
         ICM   R3,7,BRRN0+120      LOAD POINTER TO FIRST EXTENDED ...
*                                  ... QUOTE (KEY C'Q') RECORD.
         BZ    READDIR0            B IF THERE ARE NONE.
         XC    BRRN0+120(3),BRRN0+120 ZERO POINTER TO 'Q' RECORDS.
FQLOOP   STCM  R3,7,BLOCK#         SAVE BLOCK #.
         ENQ   (QNAME,BLOCK#,E,3,SYSTEM),RET=HAVE  ENQ ON 'Q' BLOCK.
         BAL   R14,BREAD           READ 'Q' BLOCK.
         CLI   KEY,C'Q'            IS THE KEY A PROPER 'Q'?
         BE    FQKEYOK             B IF YES.
FQERR    DEQ   (QNAME,BLOCK#,3,SYSTEM)   DEQUEUE RECORD.
         VWTPU 'ERROR IN EXTENDED (''Q'') QUOTE RECORD CHAIN.'
         B     READDIR0            CONTINUE.
FQKEYOK  MVI   KEY,X'FF'           CHANGE KEY TO MAKE THIS A FREE REC.
         L     R1,BDECB+16         POINT TO IOB.
         MVC   BDATA(1),39(R1)     MOVE RECORD NUMBER FROM IOB TO REC.
         SR    R3,R3               CLEAR INSERT REG.
         ICM   R3,7,BDATA+126      LOAD POINTER TO NEXT RECORD
         XC    BDATA+126(3),BDATA+126  ZERO CHAIN FIELD.
         BAL   R14,BWRITE          RE-WRITE RECORD.
         DEQ   (QNAME,BLOCK#,3,SYSTEM)   DEQUEUE RECORD.
         LTR   R3,R3               IS THERE ANOTHER 'Q' IN CHAIN?
         BNZ   FQLOOP              B IF YES.
READDIR0 MVC   BLOCK#,BRRN0+1      MOVE RRN OF FIRST NOTICE DIR BLK.
READDIR  BAL   R14,BREAD           READ NOTICE DIRECTORY BLOCK.
         MVC   DIRBLK,BDATA        MOVE DIRECTORY BLOCK.
         MVC   DIRBLK#,BLOCK#      SAVE CURRENT RRN.
         LM    R3,R5,DIRBXP        LOAD BXLE REGISTERS.
DIRLOOP  OI    0(R3),X'80'         DEFAULT NOTICE TO INACTIVE.
         BO    QLEN0               B IF YES.  GO WRITE BLANK REC.
         TF    EODQFG              ANY MORE QUOTE DS LINES TO READ?
         BO    DIRBUMP             BUMP INDEX AND LOOP.
         MVC   BLOCK#,2(R3)        MOVE RRN OF THIS POINTER'S NOTICE.
         MVI   BDATA,X'00'         CLEAR...
         MVC   BDATA+1(128),BDATA  ... DATA AREA.
QREC     BAL   R14,GETQ            GET A QUOTE RECORD.
         LR    R9,R1               PRESERVE LREC POINTER.
         LH    R1,0(,R9)           LOAD LENGTH OF RECORD.
         LTR   R1,R1               DATA LENGTH 0?
         BNZ   QHLENOK0            B IF NOT.
QLEN0    MVC   BDATA(3),=X'014000'   CONSTRUCT AN ...
         MVC   BDATA+3(126),BDATA+2  ... EMPTY LINE.
         B     WRTNOT              GO WRITE THE BLANK LINE.
QHLENOK0 SH    R1,=H'12'           SUBTRACT LENGTH OF RDW AND LINE #.
         BNP   QLEN0               B IF NO DATA BEYOND LINE #.
         CH    R1,=H'68'           LENGTH OVER 67?
         BNH   QHLENOK1            B IF NOT.
         LA    R1,68               TRUNCATE LENGTH TO 67.
QHLENOK1 CH    R1,=H'2'            LENGTH AT LEAST 2?
         BL    QHLENOK2            B IF NOT.
         CH    R1,=H'7'            LENGTH AT LEAST 7?
         BL    CKGROOT             B IF NOT.
         MVC   WORK(7),12(R9)      MOVE FIRST 7 CHARS OF REC.
         OC    WORK+2(5),=CL5' '   UPPERCASE.
         CLC   =C'/*VITAL',WORK    IS THIS A VITAL MESSAGE?
         BNE   CKGROOT             B IF NOT.
         ON    VITALFG             TURN ON VITAL FLAG.
         B     QREC                READ ANOTHER RECORD.
CKGROOT  CLC   =C'/*',12(R9)       GROOT?
         BE    QREC                B IF A GROOT.  IGNORE.
QHLENOK2 STC   R1,BDATA            SAVE LENGTH IN OUTPUT RECORD.
         BCTR  R1,*-*              GENERATE SS LENGTH.
         EX    R1,MOVEQ            MOVE NOTICE LINE.
         CLI   12(R9),C'@'         EXTENDED MSG?
         BE    WRTXMSG             B IF YES.
         CLI   12(R9),C'='         ALTERNATE EXTENDED MSG?
         BE    WRTXMSG             B IF YES.
         CLI   12(R9),C'#'         "MORE" FLAG?
         BE    WRTXMSG             B IF YES.
WRTNOT   NI    0(R3),X'7F'         ACTIVATE THIS NOTICE.
         MVC   BLOCK#,2(R3)        MOVE CURRENT BLOCK #.
         MVI   KEY,X'02'           MAKE RECORD TYPE "NOTICE"
         BAL   R14,BWRITE          WRITE A NOTICE RECORD.
         TF    QFG                 DID WE JUST WRITE A Q-O-T-D REC?
         BZ    DIRBUMP             B IF NOT.
         MVC   BRRN0+126(3),2(R3)  MOVE ITS RRN TO HEADER IN CASE ...
         B     DIRBUMP             ... IT IS THE LAST Q-O-T-D REC.
WRTXMSG  MVC   BDATA1,BDATA        PRESERVE 'Q' REC. TO BE WRITTEN.
WRTXMSG1 MVI   KEY,X'FF'           SET KEY TO SEARCH FOR BLANK REC.
         READ  B2DECB,DKF,MF=E     SEARCH FOR FREE RECORD.
         CHECK B2DECB              WAIT FOR I/O TO COMPLETE.
         TF    PEFG                PERMANENT ERROR?
         BZ    CKXSF               B IF NOT.
         LA    R15,16              SET CC OF 16.
         OFF   PEFG                TURN OFF PERM ERROR FLAG.
         B     EOJ                 EXIT.
CKXSF    TF    SFFG                SEARCH FOR KEY X'FF' A SUCCESS?
         BZ    ENQX                B IF YES.
         VWTPU 'BRODCAST DATASET HAS NO FREE RECORDS LEFT.'
         LA    R15,16              SET CC OF 16
         B     EOJ                 EXIT.
ENQX     ENQ   (QNAME,BLOCK#,E,3,SYSTEM),RET=HAVE ENQUEUE ON RECORD.
         BAL   R14,BREAD           RE-READ RECORD
         CLI   KEY,X'FF'           RECORD STILL FREE?
         BE    WRTXREC             B IF YES.
         DEQ   (QNAME,BLOCK#,3,SYSTEM)  DEQUEUE RECORD.
         B     WRTXMSG1            GO TRY ANOTHER RECORD.
WRTXREC  MVC   BDATA,BDATA1        MOVE RECORD TO OUTPUT AREA.
         XC    BDATA+126(3),BDATA+126  ZERO CHAIN FIELD.
         MVI   KEY,C'Q'            SET KEY TO "Q".
         BAL   R14,BWRITE          WRITE RECORD.
         DEQ   (QNAME,BLOCK#,3,SYSTEM)  DEQUEUE RECORD.
         ICM   R7,7,CHAIN#         LOAD LAST 'Q' REC. BLOCK #.
         BNZ   WRTXREC1            B IF NOT FIRST 'Q' REC.
         MVC   BRRN0+120(3),BLOCK# SAVE IN HEADER AS START-OF-CHAIN.
         MVC   CHAIN#,BLOCK#       SAVE IN LAST 'Q' REC POINTER.
         B     QREC                GET ANOTHER QUOTE MEMBER REC.
WRTXREC1 MVC   CHAIN#,BLOCK#       SAVE CURRENT BLOCK # AS LAST.
         STCM  R7,7,BLOCK#         READ LAST ...
         BAL   R14,BREAD           ... 'Q' RECORD.
         CLI   KEY,C'Q'            IS IT REALLY A 'Q' REC?
         BE    CKXCHN              B IF YES.
WRTXERR  VWTPU 'ERROR CHAINING "Q" RECORDS.'
         LA    R15,16              SET CC OF 16.
         B     EOJ                 EXIT.
CKXCHN   CLC   =XL3'00',BDATA+126  WAS LAST RECORD ON END OF CHAIN?
         BNE   WRTXERR             B IF NOT.
WRTXREC2 MVC   BDATA+126(3),CHAIN# CHAIN 'Q' RECORD TO CURRENT.
         BAL   R14,BWRITE          RE-WRITE IT.
         B     QREC                GET ANOTHER QUOTE MEMBER REC.
         SPACE 1
*        EOD FOR QUOTE DS HEADER MEMBER.
         SPACE 1
*QEHEAD  NOW   MDY,SNOTIME         FORMAT TODAY'S DATE.
         SPACE 1
* FOLLOWING IS SUBSTITUTE FOR NOW MACRO EXPANSION.
         SPACE 1
QEHEAD   LA    R1,MDY              POINT TO OUTPUT AREA.
         LA    R0,12               FORMAT: SLASH, NOTIME.
         L     R15,=V(MERKNOW)     POINT TO NOW ROUTINE.
         BALR  R14,R15             GO FORMAT DATE.
         SPACE 1
* PRECEDING IS SUBSTITUTE FOR NOW MACRO EXPANSION.
         SPACE 1
         CLI   MDY,C' '            MONTH NUMBER NEED PADDING?
         BNE   MNOPAD              B IF NOT.
         MVI   MDY,C'0'            MOVE "0" OVER BLANK IN MONTH.
MNOPAD   MVC   MEMNAME,=CL8'Q'     BUILD DATE DERIVED MEMBER ...
         MVC   MEMNAME+1(2),MDY+6  ... NAME OF ...
         MVC   MEMNAME+3(2),MDY    ... QUOTE OF ...
         MVC   MEMNAME+5(2),MDY+3  ... THE DAY.
         FIND  QUOTE,MEMNAME,D     FIND MEMBER "QYYMMDD".
         LTR   R15,R15             HAVE WE A QUOTE FOR TODAY?
         BNZ   DIRBUMP             NO.  CONTINUE FORMATING INDEX.
         MVC   BRRN0+123(3),2(R3)  MOVE RRN OF FIRST NORMAL QUOTE REC.
         OFF   EODQFG              TURN OFF EOD-HIT FLAG.
         ON    QFG                 TURN ON Q-O-T-D MEMBER FLAG.
         LA    R10,QEQUOTE         POINT TO NEW EOD ADDRESS.
         B     DIRLOOP             GO GET Q-O-T-D.
         SPACE 1
*        EOD FOR QUOTE DS Q-O-T-D MEMBER.
         SPACE 1
QEQUOTE  ON    EODQFG              TURN ON EOD-HIT FLAG.
         OFF   QFG                 TURN OFF Q-O-T-D IN PROCESS FLAG.
         B     QLEN0               GO WRITE BLANK LINE.
DIRBUMP  BXLE  R3,R4,DIRLOOP       BUMP POINTER AND LOOP.
         MVC   BLOCK#,DIRBLK#      SET BLOCK # TO LAST DIR BLK READ.
         MVC   BDATA,DIRBLK        MOVE DIR BLOCK TO OUTPUT AREA.
         MVI   KEY,X'00'           MAKE RECORD TYPE "NOTICE DIR".
         BAL   R14,BWRITE          OUTPUT NOTICE DIR BLK.
         SR    R15,R15             DEFAULT CC OF 0.
         CLC   =XL3'00',DIRBLK+126 THIS THE LAST BLOCK?
         BE    EOJ                 B IF YES.
         MVC   BLOCK#,DIRBLK+126   MOVE RRN OF NEXT DIR. BLK.
         B     READDIR             READ NEXT BLOCK.
EOJ8     LA    R15,8               SET CC OF 8.
EOJ      STH   R15,CC              SAVE CC.
         AIF   ('&TSO' NE 'E').NOTSOE
*
*        THE FOLLOWING CODE STICKS A BLANK LINE ON THE END VIA SEND
*        OF THE NOTICES TO FORCE TSO/E TO READ THE NOTICES
*        INTO CORE.  TAKE THE CODE OUT WHEN YOU FIGURE OUT
*        THE APPROPRIATE SYSEVENT.
*
*        AT THAT TIME, REMOVE THE AC(1).
*
         MODESET KEY=ZERO
         L     R0,=A(X'00008000')  SET SUPER-WHOOPEE AUTHORITY.
         LA    R1,CMD0             POINT TO SEND COMMAND.
         SVC   34                  SEND COMMAND
         MODESET KEY=NZERO
*
*
.NOTSOE  TF    HENQFG              MUST WE WRITE & DEQUEUE HEADER?
         BZ    FREEBUF             B IF NOT.
         MVC   BDATA,BRRN0         MOVE R0 TO OUTPUT AREA.
         XC    BLOCK#,BLOCK#       SET BLOCK NUMBER TO 0.
         MVI   KEY,X'04'           MAKE RECORD TYPE "HEADER"
         BAL   R14,BWRITE          RE-WRITE HEADER.
         DEQ   (QNAME,BLOCK#,3,SYSTEM)   DEQUEUE HEADER RECORD.
         OFF   HENQFG              TURN OFF FLAG.
FREEBUF  L     R3,QBHEAD           POINT TO GETMAINED AREA.
         LH    R2,QUOTE+X'3E'      LOAD BLOCKSIZE.
         FREEMAIN RU,LV=(R2),A=(R3)  FREE BUFFER STORAGE.
         TM    SYSLBC+48,X'10'     SYSLBC STILL OPEN?
         BZ    EOJ1                B IF NOT.
         CLOSE (SYSLBC)
EOJ1     TM    QUOTE+48,X'10'      QUOTE STILL OPEN?
         BZ    EOJ2                B IF NOT.
         CLOSE (QUOTE)
EOJ2     EQU   *
         AIF   (NOT &VITAL).NOVITAL
         L     R3,16               POINT TO CVT.
         LA    R3,X'CC'(,R3)       POINT TO CVTUSER.
         TM    0(R3),X'40'         IS THE CVTUSER VITAL MSG FLAG ON?
         BZ    EOJ3                B IF NOT.
         TF    VITALFG             IS IT SUPPOSED TO BE ON?
         BO    EOJ4                B IF YES.  LEAVE IT ON.
         MODESET KEY=ZERO
         NI    0(R3),255-X'40'     TURN OFF VITAL MSG BIT.
         MODESET KEY=NZERO
         B     EOJ4                CONTINUE
EOJ3     TF    VITALFG             CVT BIT OFF.  SUPPOSED TO BE ON?
         BZ    EOJ4                B IF NOT.
         MODESET KEY=ZERO
         OI    0(R3),X'40'         TURN ON VITAL MSG BIT.
         MODESET KEY=NZERO
.NOVITAL ANOP
EOJ4     LH    R15,CC              RE-LOAD CC.
EOJNOF   LTR   R8,R15              CC 0?
         BZ    EOJNOF1             B IF YES.
         VWTPU 'WARNING: BRODCAST DATASET NOT LOADED.'
         LR    R15,R8              RE-LOAD CC.
EOJNOF1  L     R13,SAVE+4
         LM    R0,R12,20(R13)
         L     R14,12(,R13)
         BR    R14
         TITLE 'BRODCAST - BRODCAST DATASET READ AND WRITE ROUTINES.'
BREAD    ST    R14,SAVE            SAVE RETURN ADDR.
         READ  BDECB,DI,MF=E       READ A BRODCAST RECORD.
         CHECK BDECB               WAIT FOR IO COMPLETION.
         LA    R15,16              PRE-SET CC OF 16
         TF    PEFG                PERM ERROR?
         BO    EOJNOF              B IF YES.
         L     R14,SAVE            RE-LOAD RETURN ADDR.
         BR    R14                 RETURN.
         SPACE 1
BWRITE   ST    R14,SAVE            SAVE RETURN ADDR.
         WRITE BDECB,DI,MF=E       WRITE A BRODCAST RECORD.
         CHECK BDECB               WAIT FOR IO COMPLETION.
         LA    R15,16              PRE-SET CC OF 16
         TF    PEFG                PERM ERROR?
         BO    EOJNOF              B IF YES.
         L     R14,SAVE            RE-LOAD RETURN ADDR.
         BR    R14                 RETURN.
         SPACE 1
         TITLE 'BRODCAST - GETQ SUBROUTINE (PSEUDO QSAM FOR QUOTE DATAS+
               T).'
GETQ     STM   R14,R12,12(R13)
         LR    R14,R13
         LA    R13,SAVE1
         ST    R14,4(,R13)
         ST    R13,8(,R14)
         L     R9,QBHEAD           POINT TO DATA IO AREA.
         ICM   R8,15,QRPTR         POINT TO LREC.
         BZ    GETQREAD            B IF POINTER ZERO (INITIAL READ).
         LH    R2,0(,R9)           LOAD LENGTH OF BLOCK.
         AR    R2,R9               POINT TO LAST BYTE+1.
         LH    R1,0(,R8)           LOAD LAST LRECL.
         AR    R1,R8               POINT TO NEXT LRECL.
         CR    R1,R2               PAST THE END OF THE BLOCK?
         BNL   GETQREAD            B IF YES.
         ST    R1,QRPTR            SAVE POINTER.
         B     GETQRET             RETURN.
GETQREAD XC    QRPTR,QRPTR         CLEAR NEXT REC PTR IN CASE EOD.
         READ  QDECB,SF,,(R9),MF=E READ A QUOTE DS RECORD.
         CHECK QDECB               WAIT FOR IO TO COMPLETE.
         LA    R1,4(,R9)           POINT TO FIRST LREC.
         ST    R1,QRPTR            SAVE POINTER.
GETQRET  L     R13,SAVE1+4
         LM    R2,R12,28(R13)
         L     R14,12(,R13)
         BR    R14
EODQUOTE ON    EODQFG              TURN ON QUOTE-AT-EOD FLAG.
         L     R13,SAVE1+4
         LM    R0,R12,20(R13)
         L     R14,12(,R13)
         BR    R10                 RETURN TO APPROPRIATE EOD ADDR.
         SPACE 1
BSYNAD   LR    R2,R0               POINT TO DECB.
         TM    1(R2),X'80'         ERROR BECAUSE RECORD NOT FOUND?
         BZ    SYNAD1              B IF THAT ISN'T IT.
         ON    SFFG                TURN ON SEARCH-FAILED FLAG.
         BR    R14                 RETURN
SYNAD1   SYNADAF ACSMETH=BDAM
         STM   R14,R12,12(R13)
         LR    R14,R13
         LA    R13,SAVE2
         ST    R14,4(,R13)
         ST    R13,8(,R14)
         ON    PEFG                TURN ON PERMANENT ERROR FLAG.
         LH    R0,0(,R1)           LOAD LENGTH OF SYNADAF MSG.
         SH    R0,=H'4'            SUBTRACT LEN OF PSEUDO RDW.
         LA    R1,4(,R1)           POINT TO SYNADAF MSG.
         TPUT  (1),(0)             OUTPUT ERROR MSG.
         L     R13,SAVE2+4
         LM    R14,R12,12(R13)
         SYNADRLS                  FREE SYSTEM SA AND MESSAGE AREA.
         BR    R14                 RETURN TO SYSTEM.
         TITLE 'STATIC DATA AREA.'
SAVE     DS    9D                  SAVE AREA.
SAVE1    DS    9D                  SAVE AREA FOR GETQ ROUTINE.
SAVE2    DS    9D                  SAVE AREA FOR SYNAD EXIT.
WORK     DS    D                   WORK AREA.
QBHEAD   DS    A                   QUOTE DS BUFFER POINTER.
QRPTR    DC    A(0)                QUOTE DS LREC POINTER.
         SPACE 1
CMD0     DC    AL2(CLEN,0)         COMMAND HEADER.
CMD      DC    C'SE '' '',SAVE'    COMMAND.
CLEN     EQU   *-CMD0              COMMAND LENGTH.
         SPACE 1
CVTFLAG  DS    X                   IMAGE OF FIRST CVTUSER BYTE.
CC       DS    H                   COND. CODE SAVE AREA.
MDY      DS    CL8                 RETURN AREA FOR NOW SUBROUTINE.
MOVEQ    MVC   BDATA+1(*-*),12(R9) ** EXECUTED **
         SPACE 1
EODQFG   EQU   *,B'10000000'       QUOTE MEMBER REACHED EOD.
HENQFG   EQU   *,B'01000000'       HEADER ENQ'D FLAG.
QFG      EQU   *,B'00100000'       READING Q-O-T-D MEMBER.
PEFG     EQU   *,B'00010000'       PERMANENT ERROR ON BRODCAST DS.
SFFG     EQU   *,B'00001000'       SEARCH FAILED FLAG.
$TSO     EQU     B'00000100'       TSO FLAG FOR VWTPU MACRO.
VITALFG  EQU   *,B'00000010'       VITAL MESSAGE FLAG.
FLAG     DC    X'00'               VARIOUS FLAGS.
         SPACE 1
KEY      DS    X                   KEY OF RECORD.
BDATA    DS    CL129               BRODCAST I/O AREA.
BDATA1   DS    CL129               ALTERNATE I/O AREA.
BRRN0    DS    CL129               BRODCAST HEADER (RRN 0).
DIRBLK   DS    CL129               CURRENT DIRECTORY BLOCK.
DIRBLK#  DS    AL3(0)              CURRENT DIRECTORY BLOCK RRN.
QNAME    DC    CL8'SYSIKJBC'       QNAME FOR BRODCAST RECORDS (RNAME
*                                  IS 3 BYTE RRN).
MEMNAME  DC    CL8'HEAD'           NAME OF HEADER MEMBER IN QUOTE DS.
         ORG   MEMNAME+4
SMFID    DS    CL4                 SMFID OF SYSTEM.
         ORG
         SPACE 1
DIRBXP   DC    A(DIRBLK)           DIRECTORY BXLE PARMS.
         DC    F'5'                DIRECTORY POINTER LEN.
         DC    A(DIRBLK+124)       ADDRESS PAST LAST POINTER.
         SPACE 1
DDTAB    DC    CL8'SYSLBC'         TABLE OF DATASET NAMES FOR DYNALLOC.
         DC    AL2(6)              LENGTH OF DDNAME.
         DC    AL2(L'DSN1)         LENGTH OF DSNAME.
DSN1     DC    C'SYS1.BRODCAST'    DSNAME
         DC    CL8'QUOTE'          DDNAME
         DC    AL2(5)              LENGTH OF DDNAME.
         DC    AL2(L'DSN2)         LENGTH OF DSNAME.
DSN2     DC    C'&QUOTE'           DSNAME.
         DC    X'00'               END OF TABLE.
         SPACE 1
DFPARM   DC    A(S99RB)            DAIRFAIL PARMS.
DFRCP    DC    A(D99RET)           DYNALLOC RETURN CODE.
         DC    A(DFKRUD)           ADDRESS OF A FULLWORD OF ZEROS.
         DC    A(DFIDP)            ADDRESS OF OPTIONS
DFCPPLP  DC    A(0)                POINTER TO CPPL (UNUSED).
DFKRUD   DC    A(0)                UNUSED.
D99RET   DC    A(0)                RETURN CODE.
DFIDP    DC    X'8032'             SAY DO WTP, PROBLEM IN SVC99.
         SPACE 1
S99RBPTR DS    0A                  DYNALLOC RB POINTER
         DC    X'80',AL3(S99RB)
         SPACE 1
S99RB    DC    AL1(20,1,0,0)       LENGTH, VERB, FLAGS.
         DC    AL2(0,0)            ERROR, INFO RETURN CODES.
S99TU    DC    A(TUPS)             TU POINTER POINTER.
         DC    A(0)                RESERVED.
         DC    A(0)                UNUSED FLAGS.
         SPACE 1
TUPS     DS    0A                  TU POINTERS.
         DC    A(TU0001)           POINTER TO DDNAME TU.
         DC    A(TU0002)           POINTER TO DSNAME TU.
         DC    X'80',AL3(TU0004)   POINTER TO STATUS TU.
         SPACE 1
TU0001   DC    AL2(1,1)            DDNAME TU.
TU0001L  DC    AL2(0)
DDNAME   DC    CL8'XXXXXXXX'
TU0002   DC    AL2(2,1)            DSNAME TU.
TU0002L  DC    AL2(0)
DSN      DC    44C'X'
TU0004   DC    AL2(4,1,1),X'08'    STATUS TU (DISP=SHR).
         SPACE 1
MVDSN    MVC   DSN(*-*),12(R4)     ** EXECUTED **
BLOCK#   DC    AL3(0)              CURRENT RELATIVE BLOCK NUMBER.
CHAIN#   DC    AL3(0)              REL BLOCK NUMBER OF LAST 'Q' REC.
         READ  BDECB,DI,SYSLBC,BDATA,'S',KEY,BLOCK#,MF=L BRDCST DECB 1.
         READ  B2DECB,DKF,SYSLBC,BDATA,'S',KEY,BLOCK#,MF=L "    "    2.
         READ  QDECB,SF,QUOTE,,'S',MF=L                QUOTE DECB.
         PRINT NOGEN
SYSLBC   DCB   DDNAME=SYSLBC,KEYLEN=1,RECFM=F,BLKSIZE=129,DSORG=DA,    +
               MACRF=(RIKC,WIC),OPTCD=REF,SYNAD=BSYNAD
QUOTE    DCB   DDNAME=QUOTE,RECFM=VB,LRECL=92,DSORG=PO,MACRF=R,        +
               EODAD=EODQUOTE
         TITLE 'MAPPING MACRO DSECTS.'
         IHAASCB
         IKJTCB
         IKJPSCB
         IEZJSCB
         CVT   DSECT=YES
         IEESMCA
         END
