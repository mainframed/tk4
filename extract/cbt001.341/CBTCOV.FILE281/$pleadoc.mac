1
0       PLEA - Programming Language Execution Analyzer
01. INTRODUCTION
           PLEA  is a  set of  programs  designed to  provide
      information  to a  user about  a program's  performance
      and,  for a  PL/I program,  can be used  as a debugging
      tool to  show which parts  of the  program's procedures
      were executed.   It acts  in a  manner which  is almost
      totally transparent to the user.
           PLEA provides a statistical  analysis of where CPU
      time is being spent during the execution of a PL/I (for
      Optimizing Compiler)  or FORTRAN  program.  It operates
      under OS/VS2 in the 370/168.  It consists of two parts:
      a  monitor  and  an   analyzer.   The  monitor  samples
      execution of  the program  at regular  preset intervals
      until the program terminates. During the monitoring run
      (when the program is executing) Monitor Data is spooled
      off into  a dataset  which is used  by the  analyzer to
      provide an analysis of the program's execution.
           The analyzer report provides the following data:
            1. Statement  number  in the  main  routine  with
                frequency count and percent  of total samples
                (PL/I only).
            2. Statement number in  subroutine with frequency
                count  and  percent of  total  samples  (PL/I
                only).
            3. Percentage of CPU time consumed on a procedure
                by  procedure (subroutine  by subroutine  for
                FORTRAN) basis.
            4. Load  module  list with  frequency  count  and
                percentage.
            5. Listing of interrupt codes  from the PL/I load
                module PSW and a frequency count for each.
            6. The sampling interval.
            7. Total number of samples by the monitor.
            8. Elapsed time of the monitoring run.
 2. USAGE
           PLEA can  be used  to monitor  existing production
      programs or programs  in a development stage.   For all
      program  executions,  the  GO step  of the  appropriate
      catalogued procedure may have a parameter which is used
      to  affect the  monitoring  environment  and/or pass  a
      character string to the user program.
           Normally the second function would be accomplished
      by coding:
0               PARM.GO='program data'.
0          In the JCL EXEC statement with PLEA, this has been
      expanded to:
0               PARM.GO='monitor data/program data'.
-
-
-

1
0       PLEA - Programming Language Execution Analyzer
0          The monitored data  consists of up to  five fields
      separated by commas.  These fields must be specified in
      the following order:
            1. Language  used.    It  must  be  one   of  the
                following:  PLI, PL1, or FORTRAN.  PLI is the
                default value
            2. Load module name,  up to  8 characters.  GO is
                the default value.
            3. Trace interval in hundredths  if a second.   2
                (corresponding to .02 seconds) is the default
                value.
            4. interrupt  count limit.   Default  value is  a
                number  large  enough to  diagnose  even  the
                longest running programs. After this limit is
                reached monitor data is no longer recorded.
            5. CPU  time limit  in  hundredths  of a  second.
                Default is in excess  of 24 hours.  Exceeding
                this  limit   terminates  execution   of  the
                program (without the normal 322 abend).
           Missing fields  in the middle of  specified fields
      (e.g.  language and trace interval  but not load module
      name) are indicated by successive commas.
 2.1 MONITORING EXISTING PROGRAMS
           To monitor an existing program with PLEA,  replace
      the EXEC PGM=...  card with the following:
0               //stepname EXEC PLEAMON,PARM.GO=...
0     where PARM.GO is as described above.
 2.2 MONITORING PROGRAMS IN DEVELOPMENT
           Programs  currently   in  development   shoule  be
      currently using one of  the standard catalog procedures
      for compilation,  linkage editing,  and execution.  The
      table below shows procdeures currently in use,  and the
      corresponding procedures  which can  be used  to invoke
      PLEA:
0               current                 for plea
+               _______                 ___ ____
                PLIXCLG                 PLIXCLM
                PLIXLG                  PLIXLM
                PL1LFCLG                PL1LFCLM
                PL1LFLG                 PL1LFLM
                FORTXCLG                FORTXCLM
                FORTXLG                 FORTXLM
0          Note  that  in  all  cases  the  final  G  in  the
      procedure name has been changed to the letter M.
           Other than the change in  the procedure name,  all
      other user job control language remains unchanged.
 3 CONSIDERATIONS
           There are several considerations  which may affect
      user programs monitored by PLEA:
           1. The region required by the  program may have to
                be increased by approximately 4K.
-
-
1
0       PLEA - Programming Language Execution Analyzer
0           2. The DD name  TRACE is reserved to  PLEA in the
                GO step since it is used by the PLEA monitor.
            3. The  trace dataset  consumes  one cylinder  of
                space for approximately every  136 seconds of
                CPU  time  with  a  sample  interval  of  .02
                seconds.     At  this   rate,   the   default
                allocation will handle up to approximately 45
                minutes of  CPU time.   If it  is anticipated
                that the GO  step will run longer  than this,
                the  space  extimate   should  be  increased.
                Similarly,   changing the  sampling  interval
                will affect space requirements e.g.  lowering
                the sampling interval to .01 seconds will use
                one cylinder of space for approximately every
                68 seconds of CPU time.
            4. As described above,  if the PARM field is used
                to the GO step, it must be modified.
-
-
-
-
-
-
-
-
-
-
-
-
-
-

