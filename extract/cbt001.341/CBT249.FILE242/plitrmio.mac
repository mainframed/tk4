  %DCL SFSTRING CHAR, SFCNT FIXED, SFCURFLG FIXED, SFLEN FIXED;
  %DCL SFGROW FIXED, SFGCOL FIXED; %SFCNT = 0;
  %SIMG : PROCEDURE RETURNS(CHAR);
  IF SFCNT ^= 0 THEN RETURN ('ERROR: ''SIMG'' OUT OF SEQUENCE');
  SFCNT = 1; SFSTRING = ''; SFCURFLG=0; SFLEN=0; SFGROW=0;
  SFGCOL = 1;  RETURN(' /*  BEGIN IMAGE DEFINITION */');
  %END SIMG;
 %FIELD: PROCEDURE(LEN,OP1,OP2,OP3,OP4,OP5,OP6,OP7,OP8,OP9)
         RETURNS(CHAR);
   DCL LEN CHAR, OP1 CHAR, OP2 CHAR, OP3 CHAR, OP4 CHAR, OP5 CHAR;
   DCL OP6 CHAR, OP7 CHAR, OP8 CHAR, OP9 CHAR;
    DCL SFTYP CHAR, SFCUR CHAR, SFROW FIXED, SFCOL FIXED, TLEN FIXED;
    DCL SFMDT CHAR, SFINT CHAR, I FIXED, SFTEMP CHAR, SFPOS FIXED;
    IF SFCNT = 0 THEN RETURN('ERROR: ''FIELD'' MUST FOLLOW ''SIMG''');
    SFTYP = '11'; SFCUR = '00'; SFROW = 0; SFCOL = 0; TLEN = LEN;
    SFMDT = '0';SFINT = '00';
    DO I = 1 TO 9;
         IF I = 1 THEN SFTEMP = OP1; ELSE
         IF I = 2 THEN SFTEMP = OP2; ELSE
         IF I = 3 THEN SFTEMP = OP3; ELSE
         IF I = 4 THEN SFTEMP = OP4; ELSE
         IF I = 5 THEN SFTEMP = OP5; ELSE
         IF I = 6 THEN SFTEMP = OP6; ELSE
         IF I = 7 THEN SFTEMP = OP7; ELSE
         IF I = 8 THEN SFTEMP = OP8; ELSE
         SFTEMP = OP9;
         SFTEMP = SFTEMP ×× '         ';
         IF SFTEMP = 'ALPHA' THEN IF I = 1 THEN SFTYP = '00';
                                       ELSE GO TO ERROR;ELSE
         IF SFTEMP = 'NUMERIC' THEN IF I = 1 THEN SFTYP = '01';
                                       ELSE GO TO ERROR; ELSE
         IF SFTEMP = 'DISPLAY' THEN IF I = 1 THEN SFTYP = '11';
              ELSE ERROR:RETURN('ERROR: ' ×× SFTEMP ××
               ' MUST BE RIGHT AFTER LENGTH');  ELSE
         IF SUBSTR(SFTEMP,1,6) = 'INTEN=' THEN DO;
           IF SUBSTR(SFTEMP,7,3)='LO' THEN SFINT = '01'; ELSE
           IF SUBSTR(SFTEMP,7,3)='HI' THEN SFINT = '10'; ELSE
           IF SUBSTR(SFTEMP,7,4)='OFF' THEN SFINT = '11'; ELSE
             GO TO SFERR;
         END; ELSE
         IF SUBSTR(SFTEMP,1,4) = 'MDT=' THEN DO;
           IF SUBSTR(SFTEMP,5,3)='ON' THEN SFMDT='1'; ELSE
           IF SUBSTR(SFTEMP,5,4)='OFF' THEN SFMDT = '0'; ELSE
             SFERR: RETURN('ERROR: INVALID PARM - '××SFTEMP);
         END; ELSE
         IF SUBSTR(SFTEMP,1,7)='CURSOR=' THEN DO;
           IF SUBSTR(SFTEMP,8,4)='YES' THEN SFCUR='10'; ELSE
           IF SUBSTR(SFTEMP,8,6)='AFTER' THEN SFCUR ='11'; ELSE
           IF SUBSTR(SFTEMP,8,3) ^= 'NO' THEN GO TO SFERR;
         END; ELSE
         IF SUBSTR(SFTEMP,1,4) = 'ROW=' THEN SFROW=SUBSTR(SFTEMP,5);
         ELSE IF SUBSTR(SFTEMP,1,7) = 'COLUMN=' THEN
               SFCOL = SUBSTR(SFTEMP,8);
         ELSE IF SFTEMP ^= '' THEN GO TO SFERR;
    END;
    IF SFINT = '00' THEN IF SFTYP = '11' THEN SFINT = '10';
                                       ELSE SFINT = '01';
    IF SFCUR ^= '00' THEN IF SFCURFLG = 0 THEN SFCURFLG = 1;
         ELSE RETURN('ERROR: ONLY ONE FIELD MAY HAVE A CURSOR');
    IF SFROW ^= 0 THEN DO;
         SFROW = SFROW-1;
         IF SFROW < SFGROW THEN RETURN('ERROR: INVALID ROW');
         IF SFCOL = 0 THEN IF SFROW = SFGROW THEN SFCOL = SFGCOL; ELSE;
             ELSE DO;
               SFCOL = SFCOL -1;
               IF SFCOL < SFGCOL THEN IF SFROW = SFGROW THEN
                  RETURN ('ERROR: INVALID COLUMN');
             END;
       END;
    ELSE DO;
         SFROW = SFGROW;
         IF SFCOL = 0 THEN SFCOL = SFGCOL;
         ELSE DO;
               SFCOL = SFCOL-1;
               IF SFCOL < SFGCOL THEN SFROW = SFROW+1;
         END;
    END;
   SFPOS = 80 *SFROW + SFCOL;
   SFSTRING=SFSTRING××SFCUR××SFTYP××SFINT××SFMDT××SFPOS××SFLEN××TLEN;
   SFCNT = SFCNT +1;
   SFLEN = SFLEN + TLEN;
   SFGCOL = SFCOL +TLEN +1;
   SFGROW = SFROW;
 SETCOL:IF SFGCOL > 79 THEN DO;
         SFGROW = SFGROW+1; SFGCOL = SFGCOL - 80; GO TO SETCOL;
     END;
   SFTEMP = ' /*  IN ROW'××SFROW+1××',COLUMN'××SFCOL+1××' */';
   RETURN( SFTEMP ×× ' CHAR('××LEN××')');
 %END;
 %SFMT:PROCEDURE(OP1,OP2,OP3,OP4,OP5) RETURNS(CHAR);
   DCL OP1 CHAR, OP2 CHAR, OP3 CHAR, OP4 CHAR, OP5 CHAR;
   DCL SFTEMP CHAR, I FIXED, BP CHAR, RR CHAR, RS CHAR;
   DCL J FIXED, T1 CHAR, BLNKS CHAR;
 BLNKS   = '                                    ';
   BLNKS = BLNKS×× BLNKS;
   IF SFCNT = 0 THEN RETURN('ERROR: SFMT OUT OF SEQUENCE');
   IF SFLEN = 0 THEN RETURN('ERROR: NO FIELDS DEFINED');
  BP = '0'; RS = '1'; RR = '1';
   DO I = 1 TO 5;
         IF I = 1 THEN SFTEMP = OP1; ELSE
         IF I = 2 THEN SFTEMP = OP2; ELSE
         IF I = 3 THEN SFTEMP = OP3; ELSE
         IF I = 4 THEN SFTEMP = OP4; ELSE
         SFTEMP = OP5;
         SFTEMP = SFTEMP ×× '         ';
         IF SUBSTR(SFTEMP,1,5) = 'BEEP=' THEN DO;
             IF SUBSTR(SFTEMP,6,4) = 'YES' THEN BP='1'; ELSE
             IF SUBSTR(SFTEMP,6,3) ^= 'NO' THEN GO TO SFERR;
         END; ELSE
         IF SUBSTR(SFTEMP,1,8) = 'RESTORE=' THEN DO;
            IF SUBSTR(SFTEMP,9,3) = 'NO' THEN RR = '0'; ELSE
            IF SUBSTR(SFTEMP,9,4) ^= 'YES' THEN GO TO SFERR;
         END; ELSE
         IF SUBSTR(SFTEMP,1,6) = 'RESET' THEN DO;
            IF SUBSTR(SFTEMP,7,3) = 'NO' THEN RS = '0';ELSE
            IF SUBSTR(SFTEMP,7,4) ^= 'YES' THEN
              SFERR:RETURN('ERROR: INVALID PARAMETER - '××SFTEMP);
         END; ELSE
         IF SFTEMP ^= '' THEN GO TO SFERR;
    END;
   I = (SFCNT - 1) * 8 +6;
   SFTEMP='STATIC  ,2 IMAGELEN FIXED BIN(15,0) INIT('××SFLEN××
     '), 2 FMTLEN FIXED BIN(15,0) INIT(' ×× I ××
     '), 2 FMTFLAGS BIT(16) INIT(''00000'××BP××RR××RS××
     '00000000''B)  ';
    J = LENGTH(SFTEMP  ) - 71*(LENGTH( SFTEMP )/71);
    SFTEMP  =  SFTEMP  ×× SUBSTR(BLNKS  ,1,71-J);
   DO I = 101 TO SFCNT +99;
         T1= I ; J = INDEX(T1,'1'); T1 = SUBSTR(T1,J+1,2);
         SFTEMP = SFTEMP ×× ', 2 FIELD'×× T1 ;
         J = LENGTH(SFTEMP) - 71*(LENGTH(SFTEMP)/71);
         SFTEMP = SFTEMP ×× SUBSTR( BLNKS ,1,71-J);
         T1 = SUBSTR(SFSTRING,1,2) ×× '000000';
         IF SUBSTR(SFSTRING,5,2) = '11' THEN T1 = T1 ×× '01';
               ELSE IF SUBSTR(SFSTRING,5,2) = '00' THEN DO;
                  IF SUBSTR(SFSTRING,7,1) = '0' THEN T1=T1××'01';
                     ELSE IF SUBSTR(SFSTRING,3,2)='10' THEN T1=T1××'01';
                          ELSE T1 = T1 ×× '11';
               END;
               ELSE T1 = T1 ×× '11';
         T1 = T1 ×× SUBSTR(SFSTRING,3,4) ××'0'×× SUBSTR(SFSTRING,7,1);
         SFTEMP = SFTEMP ×× ', 3 DCMSFA BIT(16) INIT('''××T1××'''B) ';
         J = LENGTH(SFTEMP) - 71*(LENGTH(SFTEMP)/71);
         SFTEMP = SFTEMP ×× SUBSTR( BLNKS ,1,71-J);
         SFTEMP = SFTEMP ×× ', 3 POSITION FIXED BIN(15,0) INIT(' ××
            SUBSTR(SFSTRING,8,8) ××')  ';
         J = LENGTH(SFTEMP) - 71*(LENGTH(SFTEMP)/71);
         SFTEMP = SFTEMP ×× SUBSTR(BLNKS  ,1,71-J);
         SFTEMP = SFTEMP ×× ', 3 DISPL  FIXED BIN(15,0) INIT(' ××
            SUBSTR(SFSTRING,16,8) ×× ')   ';
         J = LENGTH(SFTEMP) - 71*(LENGTH(SFTEMP)/71);
         SFTEMP = SFTEMP ×× SUBSTR( BLNKS ,1,71-J);
         SFTEMP = SFTEMP ×× ', 3 LEN FIXED BIN(15,0) INIT(' ××
            SUBSTR(SFSTRING,24,8) ×× ')   ';
         J = LENGTH(SFTEMP) - 71*(LENGTH(SFTEMP)/71);
         SFTEMP = SFTEMP ×× SUBSTR( BLNKS ,1,71-J);
         SFSTRING = SUBSTR(SFSTRING,32);
    END;
    SFCNT = 0;
    RETURN (SFTEMP);
  %END;
  %ACTIVATE SIMG; %ACTIVATE FIELD;%ACTIVATE SFMT;
  %DCL TRMIO CHAR; %TRMIO='CALL PLIOTIO#';
   DCL PLIOTIO# ENTRY OPTIONS(ASSEMBLER INTER);
