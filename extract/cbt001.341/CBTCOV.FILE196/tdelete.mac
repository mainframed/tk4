         MACRO
         TDELETE
         TITLE     'TABLE ELEMENT DELETION ROUTINE'
TDELETE  DS        0H
*********************************************************************
*
*        TABLE ELEMENT DELETION ROUTINE - ROUTINE REMOVES A
*        SPECIFIED ELEMENT FROM A TABLE - TABLE MUST BE IN UPDATE
*        MODE.
*
*        CALLING SEQUENCE:
*              THE ADDRESS OF THE TABLE TO BE MANIPULATED MUST BE IN
*              IN R7.  THE ADDRESS OF THE ELEMENT TO BE DELETED
*              MUST BE IN R2.   THE ROUTINE IS ENTERED VIA
*              'BAL R8,TDELETE'.
*
*        RETURN CODES:
*              RETURN CODES ARE IMPLEMENTED AS OFFSETS FROM R8.
*              RET. CODE   BR. BACK OFFSET   MEANING
*                  0          R8+0        ELEMENT DELETED OK
*                  4          R8+4        LOGIC ERROR
*
*********************************************************************
         USING     TABLE,R7
         TM        TABFLAGS,TABREAD   IS TABLE READ-ONLY?
         BO        4(,R8)         RC=4 - TABLE IS READ-ONLY
         LR        R15,R2         R15 NOW HAS DEL. ELEM ADDR
         LM        R0,R5,TABMAX   LOAD TABLE PARMS
         LR        R6,R1          HOLD ONTO CURR # OF ELEM
         MR        R0,R5          R1 NOW HAS OFFSET TO HIGHEST ELEM
         LA        R3,TABENTRY(R1) R3 HAS ADDR OF THIS HIGHEST ELEM
         CR        R3,R15         IS ELEMENT WITHIN TABLE?
         BE        TDELCNT        LAST ELEMENT IS ONE TO BE DELETED
         BL        4(,R8)         RC=4 - REQUESTED ELEM OUTSIDE TABLE
         LA        R0,TABENTRY(R5) IS ELEMENT WITHIN TABLE?
         CR        R0,R15         CHECK LOWER BOUND
         BH        4(,R8)         RC=4 - REQUESTED ELEM OUTSIDE TABLE
         LR        R1,R15         CALC OFFSET FROM TABLE BEGIN
         SR        R1,R0          TO ELEM-TO-BE-DELETED
         LA        R0,0           ZERO OUT R0
         DR        R0,R5          DIVIDE BY ELEMENT LENGTH
         LTR       R0,R0          IF REMAINDER=0, R15 POINTS TO ELEM
         BNZ       4(,R8)         RC=4 - R15 NOT -> ELEM BOUNDARY
         LA        R4,0(R5,R15)   CALC 'FROM' ADDRESS
         LA        R0,0           CALC # OF TIMES ELEMENT LENGTH
         LA        R1,256         GOES INTO 256
         DR        R0,R5
         MR        R0,R5          CALC LENGTH CODE FOR MVC
         S         R1,=F'1'       LENGTH -> LENGTH CODE
         BM        TDELMVCL       IF ELEM => 256, USE MVCL
TDELOOP1 EQU       *
         LA        R2,1(R1,R4)    CALC ENDING ADDR OF MVC
         CR        R3,R2          IS ONLY A PARTIAL SHIFT LEFT?
         BL        TDELSEG        BIF YES
         EX        R1,TDELMVCI    SHIFT TABLE DOWN
         LA        R15,1(R1,R15)  SKIP TO NEXT 'TO' ADDRESS
         LA        R4,1(R1,R4)    SKIP TO NEXT 'FROM' ADDRESS
         B         TDELOOP1       LOOP UNTIL NO MORE LEFT
TDELSEG  EQU       *
         CR        R3,R15         END OF SHIFT?
         BE        TDELCNT        BIF YES; REVISE # OF CURR ELEMENTS
         SR        R3,R15         CALC NEW SHIFT LENGTH CODE FOR
         BCTR      R3,R0          LAST SEGMENT
         EX        R3,TDELMVCI    MOVE LAST SEGMENT
         B         TDELCNT        NOW REVISE # OF CURR. ELEMENTS
TDELMVCI MVC       0(0,R15),0(R4) PATTERN MVC INSTR
         SPACE     1
TDELMVCL DS        0H
         LR        R0,R15         'TO' ADDR
         LR        R1,R5          LENGTH
         LR        R2,R5          LENGTH HOLD REGISTER
         SLL       R2,1           MULT BY 2
TDELOOP2 EQU       *
         MVCL      R0,R4
         LR        R1,R2          RE-ESTABLISH LENGTH
         LR        R5,R2
         CR        R0,R3          END OF STACK?
         BL        TDELOOP2       BIF NO
TDELCNT  EQU       *
         L         R0,TABCURR     GET # OF CURRENT ELEMENTS
         BCTR      R0,0           DECREASE BY 1
         ST        R0,TABCURR
         LA        R1,1           RECOMPUTE BIN. SEARCH BEGIN
TDELSUB1 EQU       *
         SRA       R0,1
         BZ        TDELEND
         SLL       R1,1
         B         TDELSUB1
TDELEND  EQU       *
         ST        R1,TABSRCST    STOW NEW SEARCH BEGIN
         B         0(,R8)         NOW LEAVE; RC=0
         DROP      R7
         MEND
