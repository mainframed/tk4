         TITLE     'IEFUSI - SMF IO STATS TABLE ELEMENT'
         SMFIOTAB
         TITLE     'IEFUSI - BINARY TABLE SEARCH CONTROL AREA'
         TABLE
         TITLE     'IEFUSI - WORK AREA'
         EXITCORE
         ECFOLLOW
         TITLE     'IEFUSI - PARAMETERS PASSED TO SUBROUTINE'
         USIPARM
         TITLE     'IEFUSI - COMMON EXIT PARAMETER AREA'
         COMMEXIT
         TITLE     'I E F U S I   --   LINKAGE CONTROL TABLE'
IEFLOT   DSECT
         IEFALLCT
         TITLE     'I E F U S I   --   STEP CONTROL TABLE'
IEFSCT   DSECT
         IEFASCTB
         TITLE     'IEFUSI - MAIN PROGRAM'
IEFUSI   CSECT
*******************************************************************
*
*        PROGRAM NAME: IEFUSI.
*        AUTHOR: D. HALBIG
*        INSTALLATION: U.S. SENATE COMPUTER CENTER
*        DATE WRITTEN: JUNE 1980.
*        FUNCTION: 1) EXTRACT NAME OF PROGRAM TO BE
*        EXECUTED IN THIS STEP.  THIS NAME IS STORED
*        IN THE WORK AREA ANCHORED IN THE USER FIELD
*        OF THE JMR.  THE NAME IS USED BY EXIT 'IEFUTL'
*        TO DECIDE ON EXTENDING AN EXPIRED TIMER (USU.
*        ABEND 322).  EXAMPLES OF PROGRAMS GRANTED
*        EXTENSIONS ARE 'IEBCOPY' AND 'IEWL' (LINKAGE
*        EDITOR) - UTILITIES WHICH MIGHT DAMAGE A PDS
*        IF CANCELLED.
*        2) FORMAT & RESET TABLE USED BY IEFU83.  TABLE
*        IS TO CONTAIN I/O AND DASD SPACE-RELATED INFO
*        FOR ANY DATA SET CLOSED WITHIN THE STEP
*
**        11/23/81 - ADD BYPASS CODE; PERMITS ALL SMF EXITS TO BE
*          BYPASSED IF BYPASS FLAG IS SET IN COMMON EXIT PARM AREA.
*          FLAG IS SET BY SMF EXIT ROUTINE IEFUJV (SEE IEFUJV FOR
*          FURTHER DETAILS).
*
*         08/13/82 - DIMINISH STEP TIME BY NORMALIZING SPEED USING
*          COEFICIENT PASSED FROM UJI (ECCPUSPD)               ABS
*
*         09/02/82(ABS) - TO PUT THIS MESS INTO PRODUCTION WE ARE
*          FIRST JUST REPORTING ADJUSTED CPU TIMES, AND NOT
*          DIMINISHING TIMES FOR S'322 S.  THE STICKEM (STCM)
*          TO SCTSTIME HAS BEEN TURNED TO A COMMENT.
*
*         10/08/82(ABS) - ENFORCE EQUIVALENT (BASE MACHINE) CPU TIMES
*          WITH A REAL STICKEM (STCM), NOT A COMMENT
*
*
*
*        REGISTER           USAGE
*           R15        ENTRY POINT/RETURN CODE/WORK REGISTER
*           R14        RETURN ADDRESS/WORK REG
*           R13        SAVE AREA/WORK AREA POINTER
*           R12        MAIN ROUTINE BASE REGISTER
*           R11        CALLED ROUTINE BASE REGISTER
*           R10        CALLED ROUTINE RETURN REGISTER
*           R9         BASE OF PARMS PASSED TO IEFUSI
*           R8         CALLED FUNCTION RETURN REGISTER
*           R7         TABLE POINTER
*           R6-R0      WORK REGS
*
*******************************************************************
         REGEQU
         SAVE      (14,12),,IEFUSI-&SYSDATE-&SYSTIME
         LR        R12,R15     ESTABLISH A BASE REGISTER
         USING     IEFUSI,R12  TELL ASSEMBLER
         LR        R9,R1       ESTAB. POINTER TO USI PARMS
         USING     USIPARM,R9  MAKE IT ADDRESSABLE
         L         R2,USICEPA  GET PTR TO COMMON EXIT PARM AREA
         USING     COMMEXIT,R2 MAKE IT ADDRESSABLE
         SR        R15,R15    SET RETURN CODE TO ZERO
         TM        CEPIDFLG,CEPIDF05 BYPASS FLAG SET?
         BO        USIEXIT    BIF YES
         L         R1,CEPUSER     GET POSS. WORK AREA ANCHOR
         LA        R1,0(,R1)      CLEAR HI-BYTE
         TM        CEPRSTOP,CEPRST04 WARM START?
         DROP      R2
         BO        USIBADAC        BIF YES; ANCHOR VALUE INVALID
         ST        R13,4(,R1)       COMPLETE S/A CHAINING
         ST        R1,8(,R13)
         LR        R13,R1
         USING     EXITCORE,R13     MAKE WORK AREA ADDRESSABLE
         L         R11,=A(PGMNRTN)  GET ADDR OF PROGRAM NAME ROUTINE
         BALR      R10,R11          PERFORM IT
         L         R11,=A(RESETRTN) GET ADDR OF RESET ROUTINE
         BALR      R10,R11          PERFORM IT
         L     R2,USICEPA    GET A(CEPA)                      ABS081382
         USING COMMEXIT,R2                                            "
         TM    CEPIDFLG,CEPIDF02 BATCH JOB ??                         "
         BZ    USIRETRN                                               "
         DROP  R2                                                     "
         L     R11,=A(SPEEDADJ) GET ADDR OF SPEED NORMALIZATION       "
         BALR  R10,R11          AND GO THERE                  ABS081382
USIRETRN EQU       *
         L         R13,SAVEAREA+4
         B         USIEXIT
USIBADAC EQU       *
         L         R1,USICEPA
         USING     COMMEXIT,R1   MAKE CEPA ADDRESSABLE
         XC       CEPUSER,CEPUSER  ENSURE AREA NEVER REUSED
         DROP     R1
USIEXIT  EQU       *
         RETURN    (14,12),RC=0
         TITLE     'IEFUSI - SELF-DEFINING CONSTANTS'
         LTORG
         TITLE     'IEFUSI - PROGRAM NAME EXTRACTION ROUTINE'
PGMNRTN  DS        0H
********************************************************************
*
*        ROUTINE TO EXTRACT PROGRAM NAME FIELD AND STOW IN
*        SMF EXIT WORK AREA
*
********************************************************************
         USING     PGMNRTN,R11  MAKE ROUTINE ADDRESSABLE
         L         R1,USIPGMN   GET ADDR OF 'PGM=' NAME
         MVC       ECPGMNAM(8),0(R1) MOVE PGM NAME TO WORK AREA
PGMNEXIT EQU       *
         BR        R10
         LTORG
         DROP      R11
         TITLE     'IEFUSI - TABLE FORMAT AND RESET ROUTINE'
RESETRTN DS        0H
********************************************************************
*
*         ROUTINE TO FORMAT AND RESET TABLE USED BY IEFU83
*
********************************************************************
          USING    RESETRTN,R11  MAKE ROUTINE ADDRESSABLE
         LA        R7,ECSMFTAB       GET ADDR OF SMF IO STAT TABLE
         USING     TABLE,R7          MAKE IT ADDRESSABLE
         L        R3,GETPARM    GET SIZE OF G/M AREA
         LA       R3,0(,R3)     CLEAR HI-BYTE
         LA       R2,ECWRKSIZ   GET SIZE OF EXIT SCRATCH PAD
         SR       R3,R2         GET SIZE OF AREA FOR IO TABLE
         SR       R2,R2
         S        R3,=A(TABENTRY-TABLE)  PROVIDE FOR TABLE CNTL AREA
         D        R2,=A(SMFELLGH)   CALC # OF ENTRIES
         BCTR     R3,0           PROVIDE FOR O'FLOW AREA
         C        R3,=A(0)       IS VALUE MESSED UP?
         BH       RESET0         BIF NOT
         SR       R3,R3          OTHERWISE, STABILIZE VALUE
RESET0   EQU      *
         ST       R3,TABMAX
         LA        R1,0
         ST        R1,TABCURR        CURRENT TABLE ELEMENT
         LA        R1,0
         ST        R1,TABOVFL        # OF OVERFLOW ELEMENTS
         LA        R1,1
         ST        R1,TABSRCST       SEARCH START NUMBER
         LA        R1,SNKEYL-1       LENGTH CODE OF COMPARAND
         ST        R1,TABLC
         LA        R1,SMFELLGH       LENGTH OF ONE ELEMENT
         ST        R1,TABELEML
         MVI       TABFLAGS,TABINARY UPDATABLE BINARY SEARCH TABLE
RESETXIT  EQU      *
          BR       R10
          LTORG
          DROP     R11
          TITLE 'I E F U S I   -   SPEED NORMALIZATION ROUTINE'
SPEEDADJ DS    0H                                             ABS081382
***********************************************************************
*                                                                     *
*         DIMINISH STEP CPU TIME ALLOWED IF WE ARE EXECUTING          *
*         ON A MACHINE FASTER THAN THE BASE MACHINE OF THE            *
*         COMPLEX.  SPEED COEFFICIENT AND LCT ADDR WERE SAVED         *
*         IN UJI.                                                     *
*                                                                     *
***********************************************************************
         USING SPEEDADJ,R11                                   ABS081382
         L     R2,ECLCTADR   R2 ---> A(LCT)                           "
         USING IEFLOT,R2                                              "
         L     R2,LCTSCTAD   R2 ---> A(SCT)                           "
         USING IEFSCT,R2                                              "
         XR    R4,R4         R4 ---> ZIP                              "
         L     R5,SCTSTIME-1 R5 ---> C(MAX STEP TIME (ALIGNED))       "
         LA    R5,0(R5)      CLEAR HI ORDER BYTE                      "
         M     R4,DEC100     MULT R4 & R5 BY 100                      "
         D     R4,ECCPUSPD   DIVIDE BY COEF FROM UJI                  "
         STCM  R5,B'0111',SCTSTIME SAVE NORMALIZED STEP TIME          "
         BR    R10           GO HOME                                  "
         DROP  R2                                                     "
         SPACE 3                                                      "
DEC100   DC    1F'100'       USED BECAUSE COEF IS *100                "
         LTORG                                                ABS081382
         END
