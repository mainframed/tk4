         MACRO
         SETDIE
SETDIE   DS        0H
***********************************************************************
*
*        THIS FUNCTION, ALONG WITH THE 'PURGEDIE' CLEANUP FUNCTION,
*        PERMITS SIMULATION OF A 'STIMER ....,ECB=' ENVIRONMENT(ONE
*        FOR WHICH IBM FAILS TO SEE THE NEED).  THE MOTIVATION IS
*        THE NEED TO WAIT ON AN EXPECTED EVENT NO LONGER THAN A
*        SPECIFIED PERIOD OF TIME.  IF THE EXPECTED EVENT DOES NOT
*        OCCUR WITHIN THE SPECIFIED TIME, CONTROL CAN BE RETURNED TO
*        THE WAITING ROUTINE.  THE ENVIRONMENT IS SET UP AS FOLLOWS:
*              L       R1,=A(NN)   SET TIME FOR NN SECS
*              BAL     R8,SETDIE   ESTABLISH THE ENVIRONMENT
*              B       DIEOK       RC=0; DIE ESTABLISHED OK
*              BAL     R14,ERRORTN RC=4; DIE NOT ESTABLISHED ON QUEUE
*
*              WAIT    ECBLIST=(YOURNAME)  WAIT ON THE EXPECTED EVENT
*                                          A-N-D THE NN-SECOND TIMER
*                                          POP (TIMER ECB IS 'DIEECB').
*              ..... USER CODE TO HANDLE VARIOUS CONDITIONS......
*              BAL     R8,PURGEDIE  CLEAN UP (MUST A-L-W-A-Y-S BE
*                                   EXECUTED)
*        SINCE THIS CODE ESTABLISHES A DIE (DISABLED INTERRUPT EXIT),
*        THE PROGRAM IN WHICH IT IS IMBEDDED MUST BE 1) SUPERVISOR
*        STATE, 2) PROTECT KEY ZERO.  NOTE BELOW HOW THE DIE ITSELF
*        IS CREATED FROM A PATTERN DIE COPIED INTO AN AREA GETMAINED
*        OUT OF SQA.
*        ON ENTRY, R1 CONTAINS WAIT TIME VALUE(IN SECONDS).
*        ON EXIT, R1 POINTS TO THE AREA GETMAINED OUT OF SQA.
*        THIS VALUE M-U-S-T BE SAVED FOR 'PURGEDIE' FUNCTION.
*
*              THIS FUNCTION USES THE FOLLOWING WORK AREAS/MACROS:
*                  IHATQE
*                  IHAPSA
*                  CVT
*                  ASCB
*                  TPC
*
***********************************************************************
         LR        R6,R1          HOLD ONTO PARM VALUE FOR A SEC
         L         R0,SDPARMS     GET SUBPOOL # & AREA SIZE
         GETMAIN   R,LV=(0)       DO GETMAIN
         LR        R2,R1          POINT R2 TO GETMAIN AREA
         L         R3,SDPARMS     TARGET SIZE
         LA        R4,DRPBEGIN    DIE WORK AREA & ROUTINE PATTERN
         LR        R5,R3          'FROM' LENGTH
         MVCL      R2,R4          MOVE PATTERN TO GETMAINED AREA
         LR        R7,R1          MAKE R7 BASE REG OF THIS COMPOSITE
         USING     TQE,R7         MAKE IT ADDRESSABLE
         SR        R0,R0         CONVERT SECONDS INTO TIMER UNITS
         LR        R1,R6          RESTORE PARM REGISTER
         M         R0,=A(1000000) MULT BY 1 MILLION
         SLDL      R0,12          MULT BY 2**12 (4096)
         STM       R0,R1,TQEVAL   STOW TIMER VALUE (CONVERTED)
         MVC       DIEASIZE,SDPARMS STOW SUBPOOL & SIZE FOR LATER
         LA        R1,DIERTN      GET ADDR OF DIE ROUTINE
         ST        R1,TQEEXIT     PUT IN TQE
         L         R1,PSAAOLD-PSA GET -> TO OUR ASCB
         USING     ASCB,R1        MAKE ASCB ADDRESSABLE
         ST        R1,DIEASCB     STOW ASCB ADDRESS FOR DIE ROUTINE
         LH        R1,ASCBASID    GET OUR ASID
         STH       R1,TQEAID      STOW IN TQE
         DROP      R1             NO LONGER NEED R1 FOR THIS
         LR        R2,R11         HOLD ONTO REGS BEFORE WE CALL SETDIE
         LR        R3,R12
         LR        R4,R13
         L         R1,16(,0)      GET CVT ADDR
         USING     CVT,R1         MAKE IT ADDRESSABLE
         L         R1,CVTTPC      GET ADDR OF TIMER SUPR. WORK AREA
         USING     TPC,R1         MAKE IT ADDRESSABLE
         L         R15,TPCSDIE    GET ADDR TO SETDIE
         DROP      R1
         LR        R1,R7          GET POINTER TO TQE, ET AL
         BALR      R14,R15        CALL IT
         LR        R11,R2         RESTORE REGS DESTROYED BY SETDIE
         LR        R12,R3
         LR        R13,R4
         BC        15,0(R15,R8)   USE RETURN CODE FROM SETDIE
         DROP      R7             NO LONGER NEED DIE RTN POINTER
*
DRPBEGIN DS        0D
***********************************************************************
*
*        PATTERN WORKAREA/ROUTINE FOR DIE ROUTINE
*
***********************************************************************
         DC        XL(TQELEN)'00'   AREA SET ASIDE FOR TQE
DRPRTN   DS        0H               PATTERN USER CODE
         PUSH      USING            SAVE CURRENT ENVIRONMENT
         USING     DRPRTN,R9        SET UP ADDRESSABILITY
         LR        R9,R15           MAKE IT LEGAL
         LA        R10,0            SET UP PARMS FOR 'POST': COMP CODE
         LA        R11,DRPECB       ADDR OF ECB WE'VE SET ASIDE
         O         R11,DRPHIBYT     SET HI-ORDER BYTE TO X'80'
         LR        R12,R14          ERROR RETURN ADDRESS
         L         R13,DRPASCB     GET ASCB ADDR OF GUY WHO ISSUED WAIT
         ST        R14,DRPBACK      SAVE RETURN ADDRESS
         L         R1,16(,0)        GET CVT ADDR
         USING     CVT,R1           MAKE IT ADDRESSABLE
         L         R15,CVT0PT01     GET ADDR OF BRANCH-ENTRY 'POST'
         DROP      R1
         BALR      R14,R15          GO DO IT
         L         R14,DRPBACK      GET OUR RETURN ADDRESS
         BR        R14              NOW LEAVE
DRPHIBYT DC        X'80000000'      PATTERN TO SET HI-BYTE OF R11
DRPRTNX  EQU       *
DRPRTNL  EQU       *-DRPRTN         LENGTH OF JUST DIE RTN
*
DRPPAD   DC        XL(DIERTNL-DRPRTNL)'00' IF ASM ERROR, FIX DIERTNL
DRPVAR   DS        0F
DRPECB   DC        A(0)             PATTERN ECB TO BE USED BY THIS RTN
DRPASCB  DC        A(0)             PATTERN AREA TO STOW CALLER'S ASCB
DRPASIZE DC        A(0)             PATTERN AREA FOR GETMAIN PARMS
DRPBACK  DC        A(0)             PATTERN AREA FOR BRANCH BACK ADDR
DRPVARL  EQU       *-DRPVAR         LENGTH OF USER-DEFINED DIE WORK ARE
DRPEND   EQU       *                END OF ENTIRE ROUTINE & WORK AREA
DRPLGTH  EQU       *-DRPBEGIN       LENGTH OF ENTIRE AREA
         DROP      R9               GET RID OF OUR LOCAL BASE REGISTER
         POP       USING            REESTABLISH PREVIOUS 'USING' ENVIR
SDPARMS  DC        AL1(245),AL3(DRPLGTH) SUBPOOL # & GETMAIN LENGTH
         MEND
