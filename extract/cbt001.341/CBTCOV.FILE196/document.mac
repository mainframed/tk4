1









                       MVS Job Scheduler/Requeuer
                              Release 5
                              March 1983



















                                                   Dave Halbig
                                                   U.S. Senate
                                                    Computer Center
                                                   400 N. Capitol Street
                                                   Ground Level
                                                   Washington, D.C.
                                                               20510
                                                   (202)224-3902
1


                    Table of Contents

                                                                   Page

 Summary of Changes                                                  1
+__________________

 Introduction                                                        2
+____________

 Installation
+____________

   . Loading files down to disk                                      3
   . Areas of potential conflict with existing exits/mods            4
   . Initial assembly of exits                                       5
   . Customization of exits                                          6
   . Optional interface to DCM feature of MSI product                8
   . Updates to SYS1.PROCLIB                                         9
   . Updates to SYS1.PARMLIB                                        10
   . Updates to ACCTLOAD input tables                               11


 Testing
+_______

   . Preparation for testing                                        12
   . IPL procedure for test system                                  13
   . Initial startup of REQUEUER                                    14
   . Execution of test job stream                                   15

 Implementation
+______________

   . Basic concepts of scheduling                                   16
   . Recommended initiator structure                                17
   . Automatic REQUEUER startup                                     18
   . Automatic ACCTLOAD startup                                     19
   . Operator training                                              20
   . User group training                                            21

 Appendices
+__________

   A) Exit error messages                                          A-1

   B) Requeuer commands                                            B-1

   C) Explanation of resource signature message                    C-1

   D) Explanation of step termination statistics display           D-1

   E) Exit architecture                                            E-1

   F) Exit Diagnostic/Bypass Facilities                            F-1

   G) Installing Scheduler Concurrent with Existing Exits          G-1

   H) Applicable MVS & JES2 PTF's                                  H-1
1                                                               Page  1
 Summary of Changes
+__________________

 Release 5 -

 . CPU time normalization - CPU time requests on the JOB or EXEC card
   are normalized to the slowest processor in the complex at the time
   a job initiates.  The facility permits jobs to receive a consistent
   level of service regardless of the processor on which the job
   initiates.

 . SMF record filtering in exits IEFU83/84 - if SMF record types 14 & 15
   are collected, IEFU83 cancels those records from temporary data sets.
   If SMF interval accounting records are collected (SMF type 30,
   subtype 2 & 3), all records are cancelled EXCEPT those associated
   with program names loaded into the Scehduler accounting tables.
   SMF Interval Accounting is useful for long-running batch jobs, system
   tasks, or TSO sessions to capture consumption information up to the
   time of a system failure or to correctly apportion consumption
   information by time of day (e.g. for CICS systems).  Since this
   accounting feature is needed only for selected workloads, interval
   accounting records for other workloads (e.g. initiators, low-use
   system tasks, short batch jobs) add unnecessary overhead to SMF
   recording and data reduction.  The filtering system implemented in
   the Scheduler permits a site to collect only those interval
   accounting records of value in accounting or capacity planning.

 . Fixes to minor bugs and rewrite of code to improve maintainability.
1                                                               Page  2
 Introduction
+____________

     The MVS Job Scheduler/Requeuer is a group of SMF exits (IEFUJV,
 IEFUJI, IEFUSI, IEFUTL, IEFU83, IEFUSO, IEFACTRT) and programs
 (ACCTLOAD, REQUEUER) designed to improve batch job throughput in
 an MVS/JES2 environment.  All levels of MVS are supported, from
 MVS 3.7 (non-SE) through MVS/SE2 to MVS/SP1.3.  No modifications
 to MVS or JES are required.  Seven features are supported:

         . Batch job account number validation;

         . Resource-sensitive batch job class scheduling;

         . Job routing (CPU affinity assignment) based on program names
           in JCL EXEC statements;

         . DSNAME conflict management, or requeuing (both batch/batch
           and batch/TSO);

         . Comprehensive step termination statistics displays;

         . SMF record filtering for record types 14, 15, and 30, subtype
           2 & 3 to reduce SMF data volume;

         . CPU time normalization to provide a consistent level of
           service regardless of processor speed.

     Most of the system is table-driven and requires no changes to the
 original source.  Other features (e.g. account validation, site
 defined esoteric unit names) will require modification and reassembly
 of exit source.

     The batch job class scheduling portion of the system requires
 sometimes massive changes to existing initiator job class assignments.
 If management support is not forthcoming on this point, the class
 scheduling feature will likely be of little benefit.

     The job routing facility is used to reduce the number (and
 therefore cost) of program product licenses by routing jobs to single
 processors where the license is current.  This facility assumes
 the product can be identified from the PGM= name on the EXEC
 statement.  The product may be invoked from a PROC, an instream PROC,
 or with no PROC at all.

     The REQUEUER feature is designed for both the uni-processor and
 loosely-coupled multi-processor environments.  If DSNAME conflict
 management is desired across all systems in a JES Shared Spool complex,
 the MSI product from Allen Services must be installed.  Additionally,
 the DCM feature of MSI must be replaced with a modified version avail-
 able from Allen Services (see page 8).

     The step termination statistics display nominally requires that
 SMF record types 4, 14, 15, and 64 be turned on.  To save on overhead,
 types 14, 15, and 64 may be turned off, but displays based on the
 contents of these records will of course not be available.

1                                                               Page 2.1

     Key to the concept of resource-sensitive job scheduling is the
 enforcement of the limits specified in the user's JCL (e.g. CPU time
 excession implies a S322 abend, line excession implies a S722 abend).
 To reduce the impact on TRUE production work, SMF exits IEFUTL and
 IEFUSO discriminate between test and production work; production
 work is extended with a warning message, test jobs are abended when
 the excession is detected.  Our site uses values in the accounting
 field to mark this attribute.
1                                                               Page  3

 Installation  - Loading files down to disk
+____________


      The system is distributed in three files on the enclosed tape.
 The volser is 'SENATE'.  File contents and format are given below:

      File       DSNAME        Contents        Format

       01        CP.JSC50LOD   Load JCL        Sequential
       02        CP.JSC50JCL   Install JCL     IEBCOPY unload
       03        CP.JSC50SRC   System source   IEBCOPY unload

    Copy file 1 to disk or punch it off.  Modify the volser reference
 from 'XXXXXX' to the volser of a PERMANENTLY RESIDENT volume.
 Approximately 9 cylinders of 3350 space are required.

1                                                               Page  4
 Installation - Areas of potential conflict with existing mods/exits
+____________

    The scheduler requires exclusive use of the following fields:

         . CVTUSER in the CVT.  The accounting code and scheduler
           resource limit tables are anchored in this field.

         . JMRUSEID field in the JMR.  This 8-byte field is used for
           flags and numeric values passed between IEFUJV and all
           subsequent exits.  It should be noted the contents of this
           field is written into the USERID field of all job-related
           SMF records (e.g., types 4, 5, 14, 15, 30, 64)  This field
           is found in the SMF Common Exit Parameter Area, offset X'14'.

         . JMRUSER field in the JMR.  This 4-byte field is used as an
           anchor for an area getmained by IEFUJI for each job and
           freemained by IEFACTRT(Jobterm) for each job.  This field is
           found in the SMF Common Exit Parameter Area, offset X'20'.
1                                                               Page  5
 Installation - Initial assembly of exits
+____________

     Member ASSEMBLE of the JCL file will assemble and link all system
 modules into the target link library.  Note the assembly for IEFUJV
 w-i-l-l result in several assembly errors like 'IFO196 Rx HAS BEEN
 PREVIOUSLY DEFINED'.  Ignore these messages - they result from an
 unfortunate clash of IBM macros.  Note the assemblies of IEFUJV,
 IEFUJI, IEFACTRT, and REQUEUER have a SYSPARM value which MUST be
 specified.  Specify the SYSPARM value appropriate for your system:

         SYSPARM value          Target system

            NONSE                 MVS, MVS/SE, MVS/SE1
            SE2                   MVS/SE2
            SP10                  MVS/SP1.0
            SP11                  MVS/SP1.1, MVS/SP1.1.1
            SP12                  MVS/SP1.2
            SP13                  MVS/SP1.3

     Make very sure the CURRENT version of HASPSRC is used during
 assembly, especially if products such as JTIP are installed.
1                                                               Page  6
 Installation - Customization of exits
+____________

    Some changes must be made to the exits to reflect the local
 environment.  Refer to the areas listed below for specific information:

 Ref   Module name  Line number range       Comments

  A    IEFUJV        897000 -  959000       Device name table
  B                  974000 - 1006000       Esoteric name table
  C                 1021000 - 1028000       DASD attribute table
  D                 1739000 - 1973000       Acct # validation routine
  E                           3457000       Picking ticket routing code
  F                           3609000       Non-ticket routing code
  G                 3650000 - 3673000       Scheduler job class assign
  H                           3718000       TYPRUN=HOLD assignment
  I                 3725000 - 3781000       SMF record 239 routine

  J    IEFUJI        406000 -  547000       CPU time normalization

  K    IEFACTRT      556000 -  591000       Device type interpret table
  L                           1666000       U. S. Senate LOGO

  M    ACCTLOAD      (entire routine)       Account validation and
                                            scheduler resource limit
                                            table load routine

 Reference A & B -
     The device name table in IEFUJV is based on the contents of the MVS
 DEVNAMET module.  After obtaining a SUPERZAP dump of your site's
 DEVNAMET, look at the structure of the table:  for generic names
 (e.g. 3330-1, 3350, 3400-6) the corresponding UCBTYP field value is
 present.  For the esoteric (site-defined names for groups of devices)
 names, the contents of the UCBTYP field are quite different.  Byte 3
 of the UCBTYP field for esoteric names has values consistent with
 generic names (i.e. X'20' = disk; X'80' = tape; X'08' = unit record),
 but the other three bytes do not.  Bytes 1 and 4 are always zero;  byte
 2 is an index value denoting the relative order the esoteric names were
 defined in the I/O gen.  (Remember IBM's admonition not to change the
 order of esoteric names in the Stage 1?)  This index value is used by
 IEFUJV to construct a valid UCBTYP field value from the esoteric name
 mask table in IEFUJV.  The technique goes as follows:

     The user's JCL contains an esoteric name; the device name table
 in IEFUJV provides a pseudo UCBTYP value containing an index value.
 The index value is used by IEFUJV to look up an esoteric name mask
 also found in IEFUJV.  The two fields are then 'exclusive OR'ed' with
 the result being a valid UCBTYP field value for a specific device.  An
 example will clear this up somewhat:

     'SYSWK' is an esoteric name defined at our site.  The table entry
 for this esoteric name, line 934000 in IEFUJV, gives a UCBTYP value of
 X'00032000'.  This UCBTYP value is copied directly out of our MVS
 DEVNAMET.  The third byte (hex value X'20') gives the device class
 of the esoteric name - DASD in this case.  The second byte (hex value
 X'03') is an index value.  It means this esoteric name is the third
 esoteric name defined in the I/O gen.  This index value is used by
 IEFUJV to locate a valid UCBTYP value.  in the case of SYSWK, its
 associated UCBTYP mask is in the esoteric name mask table at line
1                                                               Page  7

 990000 in IEFUJV.   This mask value must be 'exclusive OR'ed' against
 the UCBTYP field value gotten from the device name lookup table

         X'00032000' line 934000
         (exclusive OR)
         X'3053000D' line 990000
         -----------------------
         X'3050200D'

 to create a valid UCBTYP value for a 3330-1.  VIO entries are a special
 case: the result of the 'exclusive OR' operation must result in a valid
 UCBTYP value for bytes 3 and 4, but bytes 1 and 2 must become X'FFFF'.

 Reference C -
     The DASD attribute table will most likely not need changes unless
 you have some really off-the-wall devices in your shop.  Check it
 anyway......

 Reference D -
     The account number validation routine reflects the standards in
 effect in our shop.  The routine is table-driven using accounting
 tables loaded by ACCTLOAD.  Note this routine in IEFUJV sets a flag
 in the JMRUSRID field denoting the production or test status of a job.
 This flag is used by exits IEFUSO and IEFUTL to extend or not extend a
 job's CPU time or sysout line limit.  The approach in our shop is to
 deny extensions for all jobs otherwise qualifying  for the fast turn-
 around job classes.  (See member SP1RSLMT for details).

 Reference E & F -
     As part of the job class assignment process, IEFUJV also produces
 a resource signature message in a job's JES Job Log.  The message lists
 (among other things) the requested CPU time, print line, performance
 group, # of concurrent tape drives/step, amount of real and VIO DASD
 per step, and input queue priority.  If the job either explicitly
 requests HOLD (i.e. TYPRUN=HOLD) or qualifies for HOLD based on
 the resource signature, the resource signature message is expanded
 and the routing code is changed (from 14 to 15). It becomes a 'ticket'.
 The picking ticket size is the same as continuous-form
 tractor-feed card stock available from your IBM representative.  This
 picking ticket facility will require a dedicated output-only MCS
 console.  In addition to listing the resource summary for the job, it
 lists the number of scratch tapes the job will need and the volsers
 of specific tape volumes the job will need.

 Reference G & H -
    Since you may wish to not implement the job class assignment and
 HOLD features when the exits are first installed, these features can
 be disabled at the areas listed above.

 Reference I -
     To facilitate analysis of job resource requirements, SMF record
 239 is cut by IEFUJV.  If you don't want this facility or if the record
 number conflicts with one already in use at your shop, check the
 code noted above.

1                                                               Page 7.1

 Reference J -
     The CPU time normalization code is shipped with a default base
 machine speed of a 370/158-3. This means that the TIME value on the
 JOB or EXEC card is downsized when a job initiates such that the job
 or step CPU time limit is expressed in units of a 158.  That is, if
 TIME=10 were specified on a JOB card, only 10 minutes WORTH of 158
 CPU time could be used by the job before an ABEND S322 was scheduled.
 To change the base machine speed, the EQU statement at line 512000
 must be changed to point to the desired base machine speed (lines
 496000 -509000).  In addition, lines 529000 and lines 535000 thru
 537000 must be moved to bracket the CPUSPEED table entry referring to
 the new base machine.  They currently bracket entry 'CPU31583' which
 is the current base machine.  Finally, CPU ratio fudge factor variable
 'I11' should be removed from the CPUSPEED table entry referring to the
 new base machine. The fudge factor currently gives a job a 10% grace
 value if the job is not running on the base machine.

 The CPUSPEED table has an error in it for the 308x processors: at the
 time the code was written, the CPU ID values were not known precisely;
 vendor manuals should be consulted to confirm the CPU ID values for
 these machines.

 Reference M -
     ACCTLOAD is used to load the following tables:

        .  Application codes - identification of the project;

        .  Function codes - type of work performed by job (e.g.,
                            compile, list, update, etc);

        .  Run type codes - test, production, or rerun;

        .  Section codes - alternate organization code (currently
                           not used);

        .  User codes - charge-back centers;

        .  Job Scheduler Resource Limits - Resource limits associated
                        with each job class.  The table MUST-MUST-MUST
                        be ordered from low resource limits to high
                        resource limits.  See member SP1RSLMT for an
                        example.

        .  Job routing program names - the Scheduler permits jobs to be
                   ASSIGNED a JES2 CPU affinity based on program names
                   found in the expanded (post-conversion) JCL.  This
                   capability permits software licenses to be maintained
                   on only select machines in a complex and permits
                   jobs requiring such software to be routed to these
                   machines without explicit action by the programmer
                   or operator.

        .  SMF Interval Accounting Eligibility list - The Scheduler
                   passes through only those SMF 30 subtype 2 & 3
                   records whose associated program name is in this
                   list.  This capability permits sites to filter out
                   unwanted interval accounting data.  See member
                   SP1ACCT for examples of program names.
1                                                               Page 7.2

     Most of the features of the ACCTLOAD program can be left intact,
 even if the accounting codes (application code, user code, function
 code, run type code) sections are unnecssary.  All tables can still be
 loaded, with the unnecessary ones being ignored in IEFUJV where
 account code checking currently occurs.  To satisfy the error
 checking in ACCTLOAD, at least one entry should be left in each of
 the account code members of PARMLIB (SP1UCODE, SP1ACODE, SP1FCODE
 SP1SCODE, and SP1RCODE).

     If it is desireable to use the Scheduler's technique for account
 code validation, modification of the code will be necessary.  See
 Appendix E - Exit Architecture for some information on ACCTLOAD
 structure.

    Reassemble and relink any modules affected by local changes.
1                                                               Page  8
 Installation - Optional interface to DCM feature of MSI product
+____________


     If cross-system DSNAME conflict management is desired in a
 loosely-coupled JES2 environment, support is available through the
 DCM feature of MSI, an enqueue propagation product from Allen Services.
 (If MSI is not available, the single-CPU mode of DSNAME conflict
 management is still available for Shared Spool environments).
 If the exits are installed in an SP1.3 environment, user are
 cautioned to not assume the REQUEUER has knowledge of global ENQUEUEs.
 The author does not have access to the CTC's necessary to debug the
 global enqueue support available under GRS in SP1.3.
 To obtain the cross-system support, a modified version of module
 MSIXDCM1 must be obtained from Allen Services and installed on your
 system.  The module and necessary installation instructions are avail-
 able by calling (within the continental U.S.) (800)543-7583 or
 by calling (from elsewhere) (513)890-1200.  Ask for the modification
 to support the U.S. Senate Job Scheduler/Requeuer.


1                                                               Page  9
 Installation - Updates to SYS1.PROCLIB
+____________

   Installation of the scheduler requires changes to the local site
 JES2 and INIT procs.  The necessary changes are documented in
 members JES2 and INIT of the JCL library.

     The account table and resource limit table load program is
 designed to run as a system task at IPL, or on an as-needed basis.
 The JCL for this system task is found in member ACCTLOAD in the JCL
 library.

     The DSNAME conflict management facility requires a continuously-
 running system task to monitor and resolve DSNAME conflicts.  The JCL
 for this system task is found in member REQUEUER in the JCL library.
 Read the comments in the JCL carefully.
1                                                               Page 10
 Installation - Updates to SYS1.PARMLIB
+____________

     Member SMFPRMxx of PARMLIB should be checked to insure the
 following record types are being produced: 4, 5, 14, 15, 64.  Sites
 running MVS/SE2 or above should also check that exits IEFUJV, IEFUJI,
 IEFUSI, IEFUSO, IEFUTL, IEFU83, IEFU84, and IEFACTRT have been enabled
 for batch and TSO but, with the exception of IEFU83 and IEFU84,
 disabled for system tasks.

     Member IEAAPFxx of PARMLIB should be updated to include the
 Scheduler load module library, CP.JSC50LNK.

     Members LNKLST01, IEALPAJ1, and IEALPAJ3 should be copied from
 the scheduler JCL library to PARMLIB.  Update member LNKLST01 as
 needed.  Note the data set 'SYS1.MLPALIB' must-must-must be cataloged
 in the VSAM master catalog.

     If MSI is installed at your site and the MSINAMES member is
 in PARMLIB, add a QNAME of 'REQUEUER' to MSINAMES.
1                                                               Page 11
 Installation - Updates to ACCTLOAD input tables.
+____________

     A subset of the accounting table from our site has been shipped in
 JCL library.  Each member is responsible a specific function:

    Member name    Function
     SP1ACODE       Application code table - can be looked at as a
                      project name table

     SP1UCODE       User code table - can be looked at as an
                      organizational entity, or billing point

     SP1FCODE       Function code table - used to describe the general
                      function of the run (e.g. debug, file maint,
                      compile, etc.)

     SP1SCODE       Section code table - currently not used

     SP1RCODE       Run type code table - class of work (test, prod)

     SP1RSLMT       Resource limit table - used to assign job classes.
                      Table must be ordered low-resource to hi-resource.

     SP1JOBRT       Job routing table - used to assign CPU affinity
                      to jobs if specified program names are discovered
                      in the user JCL.

     SP1IACCT       SMF Interval Accounting Eligible Program List -
                      program names whose associated interval accounting
                      records (SMF type 30, subtype 2 & 3) will NOT
                      be cancelled.  All other interval records will be
                      cancelled.
1                                                               Page 12
 Testing - Preparation for testing
+_______

     If the target system is MVS/SE1 or below, run member MVSLINK from
 the JCL library.  If the target system is MVS/SE2 or above, run member
 SE2LINK from the JCL library.  These linkedit jobs build testable
 versions of the exits in 'SYS1.MLPALIB'.
1                                                               Page 13
 Testing - IPL procedure for test system
+_______

     If the target system is MVS/SE1 or below, reply to 'SPECIFY
 SYSTEM PARAMETERS' with 'R 0,MLPA=J1,LNK=01'.  If the target system
 is MVS/SE2 or above, reply to 'SPECIFY SYSTEM PARAMETERS' with
 'R 0,MLPA=J3,LNK=01'.
1                                                               Page 14
 Testing - Initial startup of REQUEUER
+_______

     For the first startup of the REQUEUER task, specify
 'S REQUEUER,,,FORMAT' to format the REQUEUER resource control record.
1                                                               Page 15
 Testing - Execution of test job stream
+_______

     . Execute member TESTJOB1 to test ability of scheduler to process
       keywords in JCL stream.  Some tailoring for the local site's
       esoteric name table will be necessary.

     . Execute member TESTJOB2, which allocates SYS1.MACLIB with
       DISP=OLD and leaves an operator reply pending.

     . Execute member TESTJOB3, which launches 8 jobs, each allocating
       SYS1.MACLIB.  When all the jobs are requeued, reply 'U' to the
       operator message from TESTJOB2.  Each of the 8 jobs should
       release and run in serial order.

     . Allocate SYS1.MACLIB as DISP=OLD from a TSO terminal.

     . Execute member TESTJOB3 again.  When all the jobs have been
       requeued, hit the ENTER key under TSO to receive all the
       messages sent by the REQUEUER.

     . Log off TSO.  The requeued jobs should release & run in order.
1                                                               Page 16
 Implementation - Basic concepts of scheduling
+______________

     The scheduler is based on a multi-server priority input queue
 model of batch workloads.  The intent is to improve throughput
 by:
        . Reducing covariance among the servers (initiators).  Said
          another way, one initiator should be kept from blocking
          another with such things as DSNAME enqueue conflict or
          tape drive or DASD space allocation recovery.

        . Giving priority in the input queue based on expected initiator
          transit time.  Said another way, the user should expect that
          the higher the resource estimate (CPU time, print lines,
          concurrent tape drive use), the longer the expected
          job input queue time.  This feature of the scheduler
          also creates a surprisingly strong incentive for users
          to reduce the resource estimates (and use) of larger jobs
          to ensure better turnaround.  More on this under 'User
          Group Training', below.

        . Exploiting the nature of batch workloads to repeatedly
          cluster around specific turnaround times.  By assigning
          Scheduler resource limits which force these clusters into
          specific job classes, initiators can be structured to
          optimize throughput without any further action or feedback
          from the user.

     The initiator class structure must be modified to accomodate the
 scheduler.  This may be the most difficult task of implementing the
 scheduler since many users often perceive certain initiators as
 'their's'.  Do not underestimate the difficulty of selling this.
1                                                               Page 17
 Implementation - Recommended initiator structure
+______________

     The initiator and job class structure used by a site depend on
 the objectives to be met.  Three possible objectives and the
 corresponding class structures are presented.

 Managing a Scarce Resource
+__________________________

     Some static resource, such as tape drives or temporary DASD space
 may be in short supply.  Efficient management requires prevention of
 allocation recovery if possible. For example, assume only 6 tape drives
 are available.  Further, assume the following job class limits are
 put into the Scheduler:

                Class  A    -  no tape drives allowed
                Class  B    -  maximum of 1 tape drive/step allowed
                Class  C    -  maximum of 2 tape drives/step allowed

      If the initiators were then structured as follows, allocation
 recovery for tape drives could not occur, since the maximum concurrent
 number of drives in use could never exceed 6 (2 x 1 + 2 x 2 = 6):

               I1 = A
               I2 = B
               I3 = B
               I4 = C
               I5 = C

     The technique for handling DASD space is similar, except the
 maximum amount of DASD space per step is used as the limiting factor.

 Promoting Good User Practices
+_____________________________

     By far, the largest sigle cause of poor system performance is
 inappropriate user practices (e.g., poor blocking factors,
 overallocation of temporary DASD space, improper use of VIO,
 program design incurring repetative OPENs against a file, etc).
 A resource-sensitive job class structure can help promote good
 user practices by giving good turnaround to low-resource-use jobs
 and much poorer turnaround to jobs violating site standards.  For
 example, if class A jobs are given preference over class B, where
 Class A jobs use not more than 30 seconds of CPU time and class B
 jobs use up to 2 minutes of CPU time, initiators could be structured
 to favor class A over class B.  Although this preference is a necessary
 component of promoting good practices, it is hardly sufficient.  In
 addition, a site must provide training in tuning techniques (e.g.
 use of UNIT=AFF= to reduce the # of concurrent tape drives, better
 estimation of DASD space requirements, reblocking of files), and
 must definitely provide some form of user feedback system.  In the
 case of the Scheduler, the user feedback is in the form of expanded
 step termination statistics which help the user pinpoint areas in his
 job which can benefit from tuning.

1                                                              Page 17.1
 Establishing a Natural Job Class Structure
+__________________________________________

     All batch workloads can be partitioned into natural clusters
 by such things as CPU time, number of print lines, use of temporary
 DASD, region, and the like.  Using commercially-available clustering
 products to discover these natural clusters can then be used to
 establish Scheduler resource limits and a corresponding initiator
 structure.  Experience with natural job class structures has shown a
 dramatic improvement in job turnaround time by simple exploitation
 of these structures.  No formal derivation of why natural class
 structures are so effective is given, but a sample derivation of
 a hypothetical structure is presented below:

      Assume jobs have already been clustered by expected initiator
 transit time (job execution time), and Scheduler resource limits set
 up to structure these clusters into job classes:

       JOB Class        Expected execution time   Arrival rate/hour
+      _________        _______________________   _________________

           A                  1 Minute                 120
           B                  2 Minutes                 40
           C                 10 Minutes                 10

      The number of initiators needed to service this workload is
 then derived by computing the total initiator occupancy minutes
 represented per hour by each workload.

       JOB Class    Total init occupancy time/hr       Req'd # of inits
+      _________    ____________________________       ________________

           A        (1 Min X 120 jobs/hr) = 120 min    (120/60)-->  2
           B        (2 Mins X 20 jobs/hr) =  40 min     (40/60)-->  1
           C        (10 Mins X 10 jobs/hr) = 100 min   (100/60)-->  2

     The number of initiators needed to service each class is based on
 the knowledge that 1 initiator can provide 60 initiator-minutes of
 service to the workload.  Therefore, for class A work, 120/60 = 2
 initiators.  Since a partial initiator cannot be assigned, the numbers
 are rounded up for cases involving partial initiators.

     The initiator structure for this workload would then be:

            I1 = A
            I2 = A
            I3 = B
            I4 = C
            I5 = C

1                                                              Page 17.2
     Simulation models of this kind of initiator structure have shown
 this structure can be improved upon by placing additional job classes
 on the initiator strings.  The rule for placing additional classes
 requires any second and subsequent class to service jobs with an
 expected execution time LESS than that of the primary class.  This
 would then give:

            I1 = A
            I2 = A
            I3 = BA
            I4 = CBA
            I5 = CBA

     This structure then represents an optimum for 'natural' job class
 structures.  Sites implementing this kind of structure have experienced
 aggregate turnaround time improvements of up to 30%.

     Extensive work in this area has been done by Mohr and Agrawala
 at the University of Maryland and H. Pat Artis at Morino Associates.

1                                                               Page 18
 Implementation - Automatic REQUEUER startup
+______________

    If MSI is not on the target system, specify a OS start command in
 the COMMNDxx member of PARMLIB to automatically start the REQUEUER
 at IPL.  If MSI is in the target system, specify this start command
 instead in the MSXSYNCH member of PARMLIB.
1                                                               Page 19
 Implementation - Automatic ACCTLOAD startup
+______________

    Since there are no default tables built or used by the account
 validation system if ACCTLOAD doesn't run, specify a OS start command
 in the COMMNDxx member of PARMLIB to automatically start ACCTLOAD
 at IPL.  If ACCTLOAD is not run, or not run before batch is submitted
 to the system, there is no real damage, since the validation routines
 will only issue a warning message and permit the job to continue.
1                                                               Page 20
 Implementation - Operator training
+______________

    (To be filled in later)
1                                                               Page 21
 Implementation - User group training
+______________

    (To be filled in later)
1                                                               Page A-1
 Appendix A - Exit error messages
+__________


 Message:  IEFUJI-01-W-FATAL ERROR-CALL SYSTEMS PROGRAMMING
 Cause:    The Requeuer system has detected an error which
           has caused an individual job to be failed.
 Action:   Notify Systems Programming immediately.
           Record the name and JES Job # of the failing job.

 Message:  IEFUJI-02-I-OPEN FAILED FOR SNAPDUMP DD STATEMENT
 Cause:    The SNAPDUMP DD statement is missing
           from the initiator procedure.
 Action:   Notify Systems Programming immediately.

 Message:  IEFUJI-03-I-SNAP OF DIAGNOSTIC AREAS FAILED
 Cause:    Logic error is SNAP routine.
 Action:   Notify Systems Programming immediately.

 Message:  IEFUJI-04-I REQUEUER SYSTEM SUSPENDED IN LONG-TERM WAIT
 Cause:    Logic error or difficulty with disk pack containing
           REQUEUER Resource Control file.
 Action:   Contact Systems Programming immediately.
           Note Jobname and JES Job # of failing job.

 Message:  IEFUJI-05-I-ERROR IN REQUEUER TASK
 Cause:    Probable logic error in REQUEUER system task.
 Action:   Notify Systems Programming immediately.
           Note Jobname and JES Job # of failing job.

 Message:  IEFUJI-06-I-ERROR WHILE ATTEMPTING TO REQUEUE JOB
 Cause:    Error detected in the JES IEFSSREQ interface.
 Action:   Contact Systems Programming immediately.

 Message:  IEFUJI-08-I-xxxxxxxx REQUEUED
           BECAUSE zzzzzzzz HOLDS DSN yyy_____yyy
 Cause:    Requeuer system has detected a DSNAME
           conflict and has requeued the DSNAME requestor.
 Action:   None

 Message:  REQUEUER-04-I-W-FATAL ERROR - CALL SYSTEMS PROGRAMMING
 Cause:    Logic error in REQUEUER task.
 Action:   Call Systems Programming immediately.
1                                                               Page A-2

 Message:  REQUEUER-01-I-OPEN DAILED FOR SNAPDUMP DD STATEMENT
 Cause:    The SNAPDUMP DD statement is missing.
           from the REQUEUER procedure.
 Action:   Call Systems Programming immediately.

 Message:  REQUEUER-02-I-SNAP FAILED
 Cause:    Logic error in SNAP dump routine.
 Action:   Call Systems Programming immediately.

 Message:  REQUEUER-03-I-OPEN FAILED FOR RESFILE DD STATEMENT
 Cause:    RESFILE DD statement is missing from
           the REQUEUER procedure.
 Action:   Call Systems Programming immediately.
1                                                               Page B-1
 Appendix B - Requeuer commands
+__________

    Several commands have been implemented for the REQUEUER system
 task.  The command and result are given below:

         Operator command                   Result

           S REQUEUER,,,FORMAT       Format the requeuer resource file.
                                     (Necessary only the first time
                                      the REQUEUER is brought up).
           F REQUEUER,VERIFY         Resynchronize requeuer resource
                                     file with the JES SPOOL.
                                     (Necessary only when an initiator
                                     has abended and the REQUEUER
                                     resource control file may be out of
                                     sync with the SPOOL.)
           F REQUEUER,TIME=xx        Delay traffic in the requeuer
                                     system by xx seconds (used only
                                     during product design & testing)
           F REQUEUER,DUMP           SNAP dump requeuer control blocks
                                     to a DDNAME of 'SNAPDUMP'.  The
                                     requeuer remains in operation.
           P REQUEUER                Stop the requeuer.
1                                                               Page C-1
 Appendix C - Explanation of resource signature message
+__________

     The resource identification made by the scheduler is summarized on
 the JES JOB LOG of every job.  A description of the resource
 summary is given below:

 1.   Programmer name               Programmer name, as given on the
                                    job card.

 2.   Jobname                       Jobname, as given on the job
                                    card.

 3.   Job class                     Job class as assigned by the
+                                             __________________
                                    scheduler. Based on the resource
+                                   _________
                                    estimate, the scheduler assigns
                                    a job class.

 4.   Performance group number-     performance group number, as
                                    given on the PERFORM= keyword.

 5.   CPU time                      CPU time estimate, given in
                                    hours, minutes, and seconds.
                                    The above example shows 10
                                    minutes, 0 seconds.

 6.   K - CORE                      The limit on the virtual storage
                                    to be used by the job given in
                                    K.

 7.   KLNES                         The estimate of print lines
                                    given in 1,000's of lines.

 8.   6250                          The maximum number of 6250 - bpi
                                    tape drives to be used by any
                                    one step.

 9.   1600                          The maximum number of 1600/800
                                    bpi tape drives to be used by
                                    any one step.

 10.  1K-DASD                       The maximum amount of DASD space
                                    allocated in any one step, given
                                    in 1K - block equivalents.

 11.  1K-VIO                        The maximum amount of VIO space
                                    allocated in any one step, given
                                    1K-block equivalents.

 12.  TP                            The maximum number of
                                    teleprocessing devices assigned
                                    in any one step.

 13.  DU                            The maximum number of direct
                                    unit assignments made in any one
                                    step.

 14.  UR                            The maximum number of unit
                                    record assignments made in any
                                    one step.
1                                                               Page C-2

 15.  PRTY                          The job selection priority for
                                    the job, as given on the PRTY=
                                    keyword.
1                                                               Page D-1
 Appendix D - Explanation of step termination statistics display
+__________

      In the earlier seminars on the Scheduler, it was very apparent
      the application staff needed a readily accessible and
      comprehensive summary of I/O, CPU, and Storage Activity within
      each batch job step.  Such a summary was necessary to target
      or direct tuning efforts.  With such a need in mind, an SMF
      exit (IEFACTRT) was greatly expanded and such statistics were
      produced as part of the deallocation messages in each batch
      job's JCL.

 FIELD                         MEANING
+_____                         _______


 USED
                          The maximum amount of virtual storage
                          actually used by the step; if running V=R,
                          the field will be labelled "REQUESTED',
                          and will reflect the amount of real
+                                                        ____
                          storage requested (may not actually be
                          used).

 LSQA+SWA
                          LSQA = Local System Queue Area SWA =
                          Scheduler Work Area.  The LSQA contains
                          tables and queues associated with your
                          address space.
                               It includes;

                                    .    page tables
                                    .    region control task tables
                                    .    timer queue elements

                          The LSQA is normally about 20K in length.
                          It is always 'fixed', which is significant
                          if a system is real-storage constrained.
                          The area is fixed for the duration of the
                          job step/task.

                          The SWA contains control blocks that exist
                          from task initiation to task termination.
                          It includes control blocks and tables
                          created during JCL interpretation and used
                          by the initiator during job step
                          scheduling.

 AVE W/S SIZE
                          Average Working Set Size is the average
                          size of the group of pages in real
+                                                       ____
                          storage.

 SWAP CNT
                          The number of times the task was swapped
                          out to external storage.  Swapping is the
                          mechanism used by the SRM (System Resource
                          Manager) to break bottlenecks.  Each swap
                          can be expensive: 60,000 instructions or
                          about 51 msecs on a 158-3.
1                                                               Page D-2


 PAGE-INS
                          The number of pages moved into page frames
                          in real storage.  This count reflects
                          physical I/O to move the page from
                          auxiliary storage to real storage.

 PAGE RECLAIMS
                          The count of page frames which are
                          disconnected (stolen) from an address
                          space, but are retrieved for re-use before
                          being re-allocated to another address
                          space.  Although no physical I/O is
                          reflected in this count, the 'cost' in CPU
                          resources is about the same as a page-in
                          operation.

 PRV, CSA, VIO
                          PRV - user private area - the region in
                          which your program executes.

                          CSA - Common Service Area - CSA contains
                          pageable data areas that are addressable
                          by all active virtual storage address
                          spaces.  It contains LOG, SMF, and reply
                          buffers, to name a few.

                          VIO - Virtual I/O is a mechanism used to
                          simulate real I/O that might otherwise
                          have been required for a temporary file
                          (e.g. compiler work file).  The data
                          'written' by the program (e.g. compiler)
                          is merely transferred within virtual
                          storage, and when the data is 'read' back
                          in, is again transferred within virtual
                          storage back to the program's buffer
                          areas.  The auxiliary storage manager
                          (ASM) reduces the impact of VIO by paging
                          out long-term unreferenced VIO pages when
                          under real storage stress.

 SWAP
                           The number of pages involved in all
                          swapping operations during step
                          executions.  In a non-MVS/SE environment,
                          reclaim of pages of a swapped-out address
                          space cannot occur.

 TCB TIME
                          Task Control Block Time - includes all CPU
                          time spent in

                               .    executing instructions in the
                                    problem program

                               .    executing instructions in the
                                    'front end' of SVC's (supervisor
                                    call).
1                                                               Page D-3

                          (SVC's, which perform pre - defined system
                          tasks, such as GETMAIN or ENQ, are of two
                          types: single stage and two - stage.  In
                          single stage SVC's, such as GETMAIN,
                          'front-end' refers to the entire SVC; in
                          two-stage SVC's, such as EXCP, 'front-end'
                          refers the first stage, which is
                          initiation of an action, such as issuance
                          of a SIO instruction.  The second stage
                          involves processing the interrupt when the
                          action is complete, such as when an I/O
                          interrupt occurs).

 SRB TIME
                          System Request Block Time.  SRB time
                          includes time spent in:

                               o    Page Resolution/Swap Control

                               o    I/O interrupt processing (see
                                    'two-stage SVC's above);

                               o    Timer queue element processing;

                               o    Interregion communication;

                          As a rule of thumb, most SRB time is
                          accumulated in I/O interrupt processing.

 RES TIME
                          Transaction Residency Time - Under MVS a
                          transaction represents the level at which
                          the SRM monitors and controls cumulative
                          service consumption by an address space.
                          For batch jobs, a transaction corresponds
                          to a cluster of contiguous job steps under
                          one performance group.  The transaction
                          residency time is the amount of
                          transaction elapsed time spent in a non-
                          swapped state, minus allocation and
                          deallocation elapsed time.

 ALLOC TIME
                          Allocation Time - elapsed time between
                          step initiation time and when the problem
                          program receives control.  The time is
                          spent by DADSM in locating and assigning
                          DASD space and by job management in
                          assigning exclusive-use UCB's, such as
                          tape drives.
1                                                               Page D-5

 UNRC'D TIME
                          Un-recorded time - the time reported here
                          is a computed value and is an estimate of
                          non-TCB time.  The elements which make it
                          up include time spent in:

                               .    I/O interrupt processing;
                               .    swapping;
                               .    paging.

 TCB/SRB
                          This ratio is helpful in determining if a
                          significant amount of step CPU time is
                          spend in I/O processing.

 RES/TCB
                          This ratio is helpful in determining if
                          the step, while swapped in, is being given
                          adequate access to the CPU.

 ATV/RES
                          This ratio is helpful in determining if a
                          step is suffering long elapsed times
                          primarily because of swap - outs.

 PFM GRP
                          Performance Group.  Each job or job step
                          requests a specific (or is assigned a
                          default) performance group number.  At the
                          SCC, default performance group numbers are
                          assigned by job class.  The performance
                          group characteristics are assigned by the
                          IPS (Installation Performance Standard).
                          The IPS dictates the amount of access each
                          performance group is to be given to the
                          CPU, under varying workload conditions,
                          and under varying amounts of total service
                          requested by the job or job step.

 PRTY
                          Dispatching Priority - when a task is
                          permitted to be dispatched by the SRM,
                          this value states the relative priority of
                          this task over all others currently
                          dispatched.  The value in this field may
                          have one of four values:

                          MTW(nn) - MTW is the mean-time-to-wait
                          group, which corresponds to the old (VS/1)
                          definition of DDG.

                          ROTATE - a group where all member tasks
                          are given service on a round - robin
                          basis.
1                                                              Page D-5


                          FIXED(nn) - a group with a fixed priority
                          relative to all other groups.

                          DISP(nn) - if a task is outside control of
                          the SRM, its dispatching priority is
                          shown; all other field values shown above
                          refer to dispatching priorities controlled
                          by the SRM.

 STEP NO                       Self - defining


 STEP NAME                     Self defining

 COND CODE                     Self - defining - if a step abends or is
                               not executed, the field may have the form

                               .    ABEND      Uxxx - user abend
                               .    ABEND      Sxxx - system abend
                               .    NOT EXEC  (BYP)

                          BYP means the step was not executed
                          because a condition code test or step
                          restart.

 SERVICE UNITS                 Self - defining

 I/O COUNTS
                          The I/O counts, and unit and device type
                          assignments are in the same order as the
                          DD statements for the step.  Read them one
                          column at a time.  Since the system is
+                         ______
                          generated with alternate channels, '251'
                          and '151' in the UCB field refer to the
                          same physical device.
1                                                              Page D-7


 Below the I/O statistics area are two (2) additional sections, one
 for VSAM statistics by DDNAME, the other for NON - VSAM statistics
 by DDNAME.  The header line in each case contains three (3) strings
 of numbers, given as (XXX/YYY/ZZZ) where

           XXX -          total number of slots available for
                          storing this DDNAME data.

           YYY -          total number of slots used by this step.

           ZZZ -          total number of additional slots required
                          (if any) if available slots are not
                          adequate.

 For NON - VSAM file statistics the following items are provided:

 DDNAME -                 DDNAME as it appears in the JCL.  The
                          DDNAME entries are ordered alphabetically;
                          no entry is present if the associated file
                          was never opened.

 DEVICE -                 the device type (interpreted) on which the
                          associated file resides.

 VOLSER -                 VOLSER of the associated file.

 OPNTYP -                 type of OPEN (e.g. INPUT, OUTPUT, OUTIN,
                          etc).

 OPNCNT -                 number of times the associated file was
                          opened via the DDNAME.

 BUFNO -                  DSORG,OPTCD,RECFM,LRECL,BLKSIZE, - DCB
                          characteristics of the associated file.
                          Because of shortcomings of the SMF data on
                          which these numbers are based, the BUFNO
                          value is often invalid.

 BLOCK-CNT -              total number of blocks transferred via the
                          DD statement regardless of the number of
                          OPEN's.

 EXTS -                   number of extents, if a DASD - based file.

 TRKALC -                 number of tracks allocated, if a DASD -
                          based file.

 TRKUSD -                 number of tracks used if a DASD - based
                          file.  Because of shortcomings of the SMF
                          data on which this number is based, this
                          value is sometimes not available or is
                          invalid.

 TRKRLS -                 number of tracks released from file, if a
                          DASD - based file.
1                                                              Page D-8

 For VSAM file statistics, the following items are provided:

 DDNAME -                 DDNAME as it appears in the JCL.  The
                          DDNAME entries are ordered alphabetically;
                          no entry is provided if the associated
                          file is never OPENed.

 CPNT -                   Component type - DATA or INDEX component.
                          If the VSAM KSDS is OPENed at the CLUSTER
                          level, there will be one entry each for
+                                                        ____
                          the DATA and INDEX components.

 STAT -                   Component status - the data on which the
                          VSAM statistics display is based provides
                          two (2) items of information for each
                          OPENed component:

                               CURR - cumulative information to -
                                         date, but not including the
+                                                  ___
                                         current OPEN.

                               CHNG - information on the current
                                         OPEN only.
+                                             ____

 LEVELS -                 number of levels in the index component.

 EXTENTS -                number of extents in the associated
                          component.
1                                                               Page D-8

 RECORDS -                total number of records in the associated
                          component.

 DELETES -                total number of records deleted from this
                          component.

 INSERTS -                total number of records added to this
                          component.



 UPDATES -                total number of records modified in this
                          component.

 GETS -                   total number of records retrieved from the
                          component.

 UNUS-CI -                total number of unused Control Intervals
                          in this component.

 SPLT - CI -              total number of CI - splits which have
                          occurred in this component.

 SPLT - CA -              total number of CA - splits which have
                          occurred in this component.

 BLKCNT -                 total number of EXCP's issued against this
                          component.
1                                                               Page E-1
 Appendix E - Exit architecture
+__________

     (To be filled in later)
1                                                               Page F-1
 Appendix F - Exit Diagnostic/Bypass Facilities
+__________

     All exit code can be bypassed if desired by placing the value
 '@@@SMF EXIT BYPASS@@' in the programmer name field of a JOB card.
 The bypass is valid for that job only.

     No SPIE or ESTAE environments are created within the exits; the
 MVS-established ESTAE environment is considered adequate for handling
 any abends which might occur.

     Logic errors detected by the exits are handled in a consistent way
 as far as stowing diagnostic information is concerned.  The action
 taken to then abort the exit depends on the exit.  The diagnostic
 scheme is given by example below:

         BE   FIELDOK          BRANCH IF TEST OK
         BAL  R14,SIGNLERR     OTHERWISE, SIGNAL LOGIC ERROR
              .
              .

SIGNLERR STM  R1,r15,SNAPREGS   STOW THE CONTENTS OF ALL REGS FOR DIAG
         .
         .

     Since the BAL instruction obtains the address from where the
 branch occurred, the contents of R14 can be used to indicate where
 the error occurred.  By subtracting the base register for the
 appropriate exit from the contents of R14 found in the diagnostic
 area for that exit, the offset into the exit where the error was
 detected can be obtained.  Once the diagnostic area has been built,
 the exit abort is handled as follows:

         EXIT/ROUTINE          Abort method
+        ____________          ____________

         IEFUJV                Issue SNAP macro to SNAPDUMP DD
                               found in JES2 PROC and terminate with
                               RC=4 (JOB cancel) passed back to MVS.

         IEFUJI                Force 0C1 ABEND and let MVS ESTAE trap
                               error & handle error recovery & SVC DUMP

         IEFUSI                (Currently no logic error detection)

         IEFUSO                (Currently no logic error detection)

         IEFUTL                (Currently no logic error detection)

         IEFU83/84             Force 0C3 ABEND and let MVS ESTAE trap
                               error & handle error recovery & SVC dump
1                                                               Page F-2

         IEFACTRT              Force 0C1 ABEND and let MVS ESTAE trap
                               error & handle error recovery & SVC dump

         REQUEUER              Issue SNAP macro to SNAPDUMP DD statement
                               issue WTO, and exit normally

         ACCTLOAD              Issue SNAP macro, issue WTOR requiring
                               operator confirmation of failure, and
                               exit normally.

     Selected exits and system tasks have optional diagnostics which
 permit display of pertinent control blocks while the exit is in action.
 In this case, there is no effect on the job being processed by the
 exit.

      IEFUJV has the most comprehensive facility, driven by the value
 '@@@SMF EXIT DIAG@@@@' in the programmer name field of a JOB card.
 The diagnostics are in effect for that job only.  The facility formats
 and 'SNAP's pertinent IEFUJV control blocks into the dataset pointed
 to by the SNAPDUMP DD statement in the JES2 PROC. One SNAP is issued
 at each milestone within IEFUJV processing (e.g. JOB statement
 processing, EXEC statement processing, DD statment processing,
 job class assignment, SMF record generation, etc.).  To permit easy
 identification of which milestone the control block display applies
 to, an eyecatcher value is placed in the SNAP displays (e.g. 'JOBCARD',
 'EXECCARD', 'DDCARD', etc.).  The results of the SNAP displays can
 be printed off by running a job AFTER the diagnostics job to list
 the contents of the SNAPDUMP file (use IEBPTPCH with PREFORM=M).

      ACCTLOAD accepts a PARM field value of DIAGNOSE which SNAP
 displays the accounting control blocks loaded into the CSA and
 anchored off the CVTUSER field.  There is no effect on the contents
 of the accounting control blocks.

     The REQUEUER accepts a Operator Console modify command of the
 form 'F REQUEUER,DUMP' which dumps the REQUEUER control blocks to
 the SNAPDUMP DD statement and returns control back to the REQUEUER.
 If the SNAPDUMP DD statement is coded with SYSOUT=A,FREE=CLOSE,
 the dump output is spun off for printing without shutting down the
 REQUEUER task.  Since one DD statement must be sacrificed for each
 DUMP request, several SNAPDUMP DD statments may be placed in the
 REQUEUER PROC in anticipation of issuing the DUMP command several
 times before the REQUEUER is actually shut down.

1                                                               Page G-1
 Appendix G - Installing Scheduler Concurrent with Existing Exits
+__________

     This section documents those exit interfaces required by the
 Scheduler exits over and above those documented in the IBM SPL: SMF
 manual (GC28-1030).  It is assumed any co-resident exits will pass
 parameter lists from MVS to the Scheduler exits unchanged.  In
 addition, it is assumed any co-resident exits will percolate any exit
 return codes back to MVS.

     Exits IEFUJV (Entry code 16) and IEFUJI use interfaces not
 documented in the SPL: SMF manual.  If co-resident exits exist at
 these points, either the Scheduler exits must come first, or the
 following accomodations must be made:

    IEFUJV (Entry code 16) - Register 12 must point to the Converter
    Work Area at entry.  Any existing exits between MVS and the
    Scheduler version of IEFUJV must pass the contents of register 12
    through unchanged.

    IEFUJI - if the SCP level is pre-SE2, the contents of register 10
    (pointer to the LCT) must be passed through unchanged.  If the
    SCP level is SE2 or above, the code in IEFUJI must be aware of any
    additional save area chains added by co-resident versions of IEFUJI.
1                                                               Page H-1
 Appendix H - Applicable MVS and JES2 PTF's
+__________

     With the advent of SP1.3 JES2, the job class is maintained in
 three areas: JCTJCLAS, JCTCLASS, and JQECLAS.  IN a heavily-loaded
 multi-access SPOOL environment, the potential exists that one of the
 fields, 'JQEJCLAS', will get refreshed (corrupted) after the Scheduler
 assigns a job class.  APAR OZ66698 has arrived to close this exposure.

    After APAR OZ62246, the SCOPE=LOCAL keyword is no longer permitted
 on the LIST form of the GQSCAN macro.  Sites at this maintenance level
 should delete any SCOPE=LOCAL references on list forms of the GQSCAN
 macro requests in the Scheduler source (IEFUJI, IEFACTRT, REQUEUER).
