         MACRO
         TSEQSRCH
         TITLE     'SEQUENTIAL SEARCH ROUTINE'
TSEQFULL DS        0H
**********************************************************************
*
*        SEQUENTIAL SEARCH ROUTINE - ROUTINE SEARCHES A TABLE SERIALLY
*        FROM TOP (LOW CORE) TO BOTTOM.  THERE ARE TWO ENTRY POINTS -
*        'TSEQFULL' AND 'TSEQSRCH': IF THE ROUTINE IS ENTERED @TSEQFULL
*        TABLE SEARCHES BEGIN AT THE TOP OF THE TABLE; IF THE ROUTINEIS
*        ENTERED @ TSEQSRCH, R14 MUST CONTAIN THE NUMBER OF ELEMENTS TO
*        BE SKIPPED BEFORE SEARCHING IS TO BEGIN.
*        THE ROUTINE HAS TWO MODES: UPDATE AND READ-ONLY:
*        IN UPDATE MODE, IF A HIT IS NOT MADE, THE COMPARATOR
*        IS USED TO CONSTRUCT A NEW ELEMENT @ BACK OF TABLE;
*        IN READ-ONLY MODE, IF A HIT IS NOT MADE, THE RTN
*        ISSUES AN ERROR RETURN CODE.
*        THIS ROUTINE MAY OPERATE ON BINARY SEARCH TABLES IN
*        READ-ONLY MODE.
*
*        CALLING SEQUENCE:
*              ROUTINE IS CALLED BY 'BAL R8,TSEQFULL' OR
*              'BAL R8,TSEQSRCH'.  R7 MUST CONTAIN THE ADDRESS OF
*              THE TABLE TO BE SEARCHED.  R15 MUST CONTAIN THE
*              ADDRESS OF THE COMPARATOR.  IF ENTRY POINT 'TSEQFULL'
*              IS BEING USED,  R6 MUST CONTAIN THE # OF ELEMENTS TO
*              BE SKIPPED BEFORE SEARCHING BEGINS.  THE ROUTINE
*              RETURNS THE ADDRESS OF THE FOUND ELEMENT, IF ANY,
*              IN R2.
*              ALSO, THE ELEMENT # (RELATIVE TO BEGINNING OF TABLE)
*              IS RETURNED IN R1.
*
*        RETURN CODES:
*              RETURN CODES ARE IMPLEMENTED AS BRANCH OFFSETS FROM R8.
*              RET. CODE   BR. BACK ADDR  MEANING
*                  0         R8+0       EXISTING ELEMENT FOUND
*                  4         R8+4       NEW ELEMENT BUILT @ BACK OF
*                                       TABLE (UPDATE MODE) - THIS CODE
*                                       NOT APPLICABLE TO READ-ONLY TAB
*                  8         R8+8       TABLE OVERFLOW (UPDATE MODE)
*                                       ELEMENT NOT FOUND (READ-ONLY M)
*                                       R2 WILL POINT TO OVERFLOW ELEM
*                 12         R8+12      LOGIC ERROR
*
*********************************************************************
         USING     TABLE,R7       GIVE TABLE ADDRESSABILITY
         LA        R6,1           SET SEARCH-BEGIN VALUE TO ONE
TSEQSRCH EQU       *
         LTR       R6,R6          IS SEARCH BEGIN VALUE VALID?
         BM        12(,R8)        RC=12; BIF SEARCH BEGIN VALUE INVALID
         TM        TABFLAGS,TABINARY IS TABLE A BINARY SEARCH TABLE?
         BZ        TSEQFND1       BIF NOT
         TM        TABFLAGS,TABREAD  IS TABLE READ-ONLY?
         BNO       12(,R8)        BIF NOT - RC=12
TSEQFND1 EQU       *
         LM        R0,R5,TABMAX   LOAD TABLE PARMS
         CR        R6,R1          IS SEARCH BEGIN BEYOND TABLE?
         BH        12(,R8)        RC=12;BIF SEARCH BEGIN BEYOND TABLE
         LR        R3,R0          R3 HAS MAX # OF ENTRIES PERMITTED
         MR        R0,R5          R1 NOW HAS HIGHEST CURR OFFSET
         LA        R1,TABENTRY(R1) COMPUTE HIGHEST CURR ADDRESS
         SR        R1,R5          BACK DOWN 1 ELEMENT (FOR BXLE)
         LR        R0,R5          R0 NOW HAS LENGTH OF AN ELEMENT
         LR        R3,R4          R3 NOW HAS COMPARAND LENGTH CODE
         LR        R4,R6          R4 NOW HAS SEARCH BEGIN ELEM #
         MR        R4,R4          R5 NOW HAS SEARCH BEGIN OFFSET
         LA        R2,TABENTRY(R5)  R2 NOW HAS ADDR OF 1ST ELEMENT
TSEQFND2 EQU       *
         EX        R3,TSEQCLC     COMPARAND:COMPARATOR
         BE        TSEQHIT        BIF GOT A HIT
         BXLE      R2,R0,TSEQFND2 LOOP UNTIL TABLE EXHAUSTED
         TM        TABFLAGS,TABREAD READ-ONLY?
         BZ        TSEQADD1       BIF NOT
         LA        R2,TABENTRY    IF READ-ONLY, SIGNAL 'NOT FOUND'
         B         8(,R8)         ELEMENT NOT FOUND - RC=8
TSEQCLC  CLC       0(0,R2),0(R15) PATTERN CLC INSTR
         SPACE     1
TSEQHIT  EQU       *
         LA        R1,TABENTRY    GET ADDR OF TABLE BEGIN
         AR        R1,R0          GET ADDR OF 1ST ELEMENT (PAST OVERFLOW
         LR        R3,R0          R3 NOW HAS LENGTH OF AN ELEMENT
         SR        R1,R2          R1 NOW HAS NEG. OFFSET
         LPR       R1,R1          MADE POSITIVE
         SLR       R0,R0          SET UP FOR DIVIDE
         DR        R0,R3          R1 NOW HAS REL. # OF FOUND ELEM
         B         0(,R8)         RC=0; NORMAL RETURN
TSEQADD1 EQU       *
         LA        R2,0(R5,R2)    POINT TO ENTRY AFTER LAST CURRENT ONE
         LR        R1,R0          R1 NOW HAS ELEMENT LENGTH
         MR        R0,R6          R1 NOW HAS MAXIMUM OFFSET
         LA        R0,TABENTRY(R1)  R0 NOW HAS ADDR OF LAST ELEMENT
         CR        R0,R2          ANY MORE ROOM IN TABLE?
         BNL       TSEQADD2       BIF THERE IS STILL ROOM
         LA        R2,TABENTRY    OTHERWISE POINT TO DEFAULT
         L         R1,TABOVFL     & INCR. OVERFLOW COUNTER
         LA        R1,1(,R1)
         ST        R1,TABOVFL
         SLR       R1,R1          SET R1 TO ZERO (REL. ELEM #)
         B         8(,R8)         TABLE OVERFLOW - RC=8
TSEQADD2 EQU       *
         LR        R0,R15         SET UP 'FROM' ADDR FOR MVCL
         LA        R1,1(,R3)      COMPARAND LENGTH CODE -> LENGTH
         L         R3,TABELEML    ELEMENT LENGTH
         MVCL      R2,R0          MOVE COMPARATOR & ZERO REST OF ELEM
         S         R2,TABELEML    RESTORE R2 TO VALUE PRIOR TO MVCL
         L         R1,TABCURR     GET CURR # OF ELEM
         LA        R1,1(,R1)      INCREMENT BY 1
         ST        R1,TABCURR     STOW BACK IN AREA
         B         4(,R8)         RC=4;ELEMENT ADDED
         DROP      R7
         MEND
