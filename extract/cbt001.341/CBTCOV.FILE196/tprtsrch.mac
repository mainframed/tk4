         MACRO
         TPRTSRCH
TPRTSRCH DS        0H
*********************************************************************
*
*        THIS ROUTINE IS A MODIFICATION OF THE NORMAL SERIAL
*        SEARCH: IT PERMITS THE KEY AREA OF A TABLE TO BE
*        SEARCHED W/O USING THE FULL KEY; ADDITIONALLY, IT
*        PERMITS THE SEARCH TO BEGIN @ OTHER THAN THE
*        FIRST ELEMENT IN THE TABLE.  THE REGISTERS @
*        ENTRY TO THE ROUTINE ARE AS FOLLOWS:
*        REGISTER                 USAGE
*              R0                 OFFSET OF ARG. INTO NORMAL KEY
*              R1                 LENGTH OF ARG. IN KEY
*              R2                 ADDR @ WHICH SEARCH BEGINS, OR ZERO
*              R7                 ADDR OF TABLE BEING SEARCHED
*              R15                ADDR OF COMPARAND
*
*        INSTALLED ON: 2/09/80; BY: DGH.
*
**********************************************************************
         USING     TABLE,R7       MAKE TABLE ADDRESSABLE
         L         R5,TABCURR     GET CURR # OF ELEM IN TAB
         L         R6,TABELEML    GET LENGTH OF TABLE ELEM
         LTR       R0,R0          WAS NEGATIVE OFFSET SPEC.?
         BM        8(,R8)         RC=8; LOGIC ERROR
         LTR       R1,R1          WAS NON-POSITIVE LENGTH SPEC?
         BNP       8(,R8)         RC=8; LOGIC ERROR
         LR        R3,R0          COMPUTE OFFSET + LENGTH
         AR        R3,R1
         CR        R3,R6          IS (OFFSET+LENGTH) > ELEM LENGTH?
         BH        8(,R8)         RC=8; LOGIC ERROR
         LTR       R5,R5          IS THE TABLE EMPTY?
         BNP       4(,R8)         RC=4; ELEMENT CAN'T BE FOUND
         MR        R4,R6          CALC OFFSET OF LAST ELEM
         LA        R5,TABENTRY(R5) CALC ADDR OF LAST ELEM
         LTR       R2,R2          ARE WE TO START @ TAB BEGIN?
         BM        8(,R8)         RC=8; LOGIC ERROR - NEG START
         BZ        TPS1           BIF R2=0: START @ BEGINNING
         LA        R3,TABENTRY(R6) ADDR OF 1ST ELEM
         CR        R2,R3          IS INIT PTR < 1ST ENTRY?
         BL        8(,R8)         RC=8; YES - LOGIC ERROR
         CR        R2,R5          IS INIT PTR > LAST ENTRY?
         BH        8(,R8)         RC=8; YES LOGIC ERROR
         LR        R4,R2          CHECK IF ADDR IN R2
         SR        R4,R3          IS ON ELEM BOUNDARY
         LR        R3,R5
         LR        R5,R4
         SR        R4,R4
         DR        R4,R6
         LTR       R4,R4
         BNZ       8(,R8)         IF NOT ON ELEM BOUNDARY -> ERROR
         LR        R5,R3
         B         TPS2
TPS1     EQU       *
         LA        R2,TABENTRY(R6) ADDR OF 1ST ENTRY
TPS2     EQU       *
         BCTR      R1,0           LENGTH -> LENGTH CODE
         LR        R3,R0          PUT OFFSET INTO R3
         LR        R4,R6          PUT ELEM LGTH INTO R4
TPSLOOP  EQU       *
         LA        R6,0(R3,R2)    CALC ADDR OF COMPARATOR
         EX        R1,TPSCLC COMPARATOR: COMPARAND
         BE        0(,R8)         RC=0; WE GOT A MATCH
         BXLE      R2,R4,TPSLOOP
         B         4(,R8)         RC=4; ELEM NOT FOUND
TPSCLC   CLC       0(0,R6),0(R15) PATTERN CLC INSTR
         MEND
