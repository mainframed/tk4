         TITLE '    S E T L I N E   S U B C O M M A N D '
************************************************************
*                                                          *
*        'SETLINE' SUBCOMMAND OF EDIT                      *
*                                                          *
************************************************************
         SPACE
*        WRITTEN BY. BILL GODFREY,  PLANNING RESEARCH CORPORATION.
*        INSTALLATION. PRC COMPUTER CENTER, INC.
*        DATE WRITTEN. FEBRUARY 8 1978.
*        DATE UPDATED. APRIL 9 1981.
*        ATTRIBUTES. RE-ENTRANT.
*        MACROS. GETMAIN, FREEMAIN, LINK, PUTLINE,
*         IKJEBESH, IKJEBECA,
*         IKJCPPL, UKJUPT, IKJIOPL, IKJPPL, IKJECT,
*         IKJPARM, IKJIDENT, IKJKEYWD, IKJNAME, IKJENDP
*        DESCRIPTION.
*         THIS TSO EDIT SUBCOMMAND POSITIONS THE CURRENT-LINE
*         POINTER TO A SPECIFIED LINE, THEN COPIES INFORMATION
*         ABOUT THE LINE INTO SYMBOLIC VARIABLES WHICH CAN BE
*         EXAMINED IN A CLIST.
*
*         SETLINE &LINENUM SET/NOSET CAPS/ASIS AMP
*
*         'ASIS' STRING ACCEPTED FOR 'ASIS' EDIT.
*
*         THE SUBPROGRAM 'SYMUPDT' IS CALLED TO PROCESS
*         SYMBOLIC VARIABLES.  IT IS A PROGRAM MODELLED
*         AFTER IBM'S 'IKJUPDT' MODULE (IN IKJCT433).
*
*         30MAR78 - TEST CANONUM ADDED.
*         05JUN78 - LOAD SYMUPDT ADDED.
*         14DEC78 - @SIZE SUBPOOL 1.
*         09APR81 - CHANGED TO USE SYMUPDT INSTEAD OF IKJUPDT.
         SPACE
SETLINE  START
         USING *,R12
         B     @PROLOG-*(,R15)
         DC    AL1(11),CL11'SETLINE'
         DC    CL16' &SYSDATE &SYSTIME '
@SIZE    DC    0F'0',AL1(1),AL3(@DATAL)
@PROLOG  STM   14,12,12(R13)
         LR    R12,15
         LR    R9,R1
         USING IKJEBECA,R9
         L     R0,@SIZE
         GETMAIN R,LV=(0)
         ST    R13,4(,1)
         ST    1,8(,R13)
         LR    R13,1
         USING @DATA,R13
         SPACE
         L     R2,CAPTTMP
         USING CPPL,R2
         SPACE
         SR    R7,R7               SET RC=0
         SPACE
************************************************************
*                                                          *
*        SET UP IOPL FOR PUTLINE                           *
*                                                          *
************************************************************
         SPACE
         LA    R15,MYIOPL
         USING IOPL,R15
         MVC   IOPLUPT(4),CPPLUPT
         XC    LINKAREA(8),LINKAREA
         MVC   IOPLECT(4),CPPLECT
         LA    R0,MYECB
         ST    R0,IOPLECB
         XC    MYECB,MYECB
         LA    R0,MYPTPB
         ST    R0,IOPLIOPB
         DROP  R15                 IOPL
         SPACE
************************************************************
*                                                          *
*        CHECK IF OPERANDS PRESENT                         *
*                                                          *
************************************************************
         SPACE
         MVI   LNCOUNT,C'*'        DEFAULT OPERAND
         MVI   ASISSW,0
         MVI   SETSW,0
         MVI   AMPSW,0
         TM    CASCBFFL,CAOPERND   OPERANDS SPECIFIED?
         BZ    NOPARSE
         SPACE
************************************************************
*                                                          *
*        CALL THE 'PARSE' SERVICE ROUTINE                  *
*                                                          *
************************************************************
         SPACE
         LA    R15,MYPPL
         USING PPL,R15
         MVC   PPLUPT(4),CPPLUPT
         MVC   PPLECT(4),CPPLECT
         XC    MYECB,MYECB
         LA    R0,MYECB
         ST    R0,PPLECB
         L     R0,=A(SETLPCL)
         ST    R0,PPLPCL
         LA    R0,MYANS
         ST    R0,PPLANS
         MVC   PPLCBUF(4),CAPTIBFR
         XC    PPLUWA(4),PPLUWA
         DROP  R15                 PPL
         DROP  R2                  CPPL
         SPACE
         LA    R1,MYPPL
         L     R15,16              GET ADDRESS OF CVT
         TM    520(R15),X'80'      IF HI ORDER BIT NOT ONE
         BNO   TSRLINK
         L     R15,520(,R15)       GET ADDR OF IKJPARS
         BALR  R14,R15             CALL IKJPARS
         B     TSREXIT
TSRLINK  EQU   *
         LINK  EP=IKJPARS,SF=(E,LINKAREA)
TSREXIT  EQU   *
         SPACE
************************************************************
*                                                          *
*        TEST RETURN CODE FROM PARSE                       *
*                                                          *
************************************************************
         SPACE
         LTR   R15,R15
         BNZ   ERRSYNTX
         SPACE
************************************************************
*                                                          *
*        DO SOME SYNTAX CHECKS BEFORE ANY I/O              *
*                                                          *
************************************************************
         SPACE
         L     R6,MYANS
         USING IKJPARMD,R6
         SPACE
         TM    LNUM1+6,X'80'       LINE NUM SPECIFIED?
         BZ    LNUMSTAR            NO - ASSUME ASTERISK
         LA    R14,LNUM1           R14 --> PDE ENTRY
         L     R15,0(,R14)         R15 --> DATA
         CLI   0(R15),C'*'         ASTERISK SPECIFIED?
         BE    LNUMSTAR
         MVI   LNCOUNT,0           SET OFF ASTERISK
         LH    R1,4(,R14)          R1 = LENGTH
         BCTR  R1,0
         B     *+10
         PACK  DOUBLE,0(0,R15)
         EX    R1,*-6
         CVB   R1,DOUBLE
         ST    R1,LINENUM1         STORE BINARY VALUE
LNUMSTAR EQU   *
         MVC   ASISSW,ASISKW+1     SAVE CAPS/ASIS
         MVC   SETSW,SETKW+1       SAVE SET/NOSET
         MVC   AMPSW,AMPKW+1       SAVE AMP
         DROP  R6
         SPACE
         IKJRLSA MYANS
         SPACE
NOPARSE  EQU   *
         SPACE
************************************************************
*                                                          *
*        CHECK FOR EMPTY DATASET                           *
*                                                          *
************************************************************
         SPACE
         MVI   EUTPARM,X'04'       SET CODE TO READ 1ST LINE
         MVC   EUTPARM+1(3),CAPTCDCB+1
         XC    EUTPARM+4(4),EUTPARM+4  KEYPTR=0
         LA    R1,CABFRPL
         ST    R1,EUTPARM+8
         OI    EUTPARM+8,X'80'
         BAL   R14,EBEUT
         CH    R15,=H'4'
         BH    ERRIOERR
         BE    ERREMPTY
         SPACE
************************************************************
*                                                          *
*        CHECK LINE NUMBER                                 *
*                                                          *
************************************************************
         SPACE
         CLI   LNCOUNT,C'*'        ASTERISK SPECIFIED?
         BZ    ASTSPEC             YES - ASSUME CURRENT LINE
         SPACE
************************************************************
*                                                          *
*        A LINE NUMBER WAS SPECIFIED                       *
*                                                          *
************************************************************
         SPACE
         TM    CACFLAG1,CANONUM    EDITING NONUM?
         BO    ERRNONUM            YES - ERROR
         SPACE
         LA    R1,LINENUM1
         ST    R1,EUTPARM+4
         B     READ
         SPACE
************************************************************
*                                                          *
*        ASTERISK WAS SPECIFIED (OR DEFAULTED)             *
*                                                          *
************************************************************
         SPACE
ASTSPEC  EQU   *
         LA    R1,CACURNUM         PTR TO CURRENT LINE KEY
         ST    R1,EUTPARM+4
         SPACE
************************************************************
*                                                          *
*        READ THE 1ST RECORD TO BE PROCESSED               *
*                                                          *
************************************************************
         SPACE
READ     MVI   EUTPARM,X'00'       READ CURRENT LINE BY KEY
         BAL   R14,EBEUT
         SPACE
         LTR   R15,R15
         BZ    PROCESS
         CH    R15,=H'4'
         BNE   ERRIOERR
         SPACE
************************************************************
*                                                          *
*        NOT FOUND - CHECK FOR ASTERISK/TOP                *
*                                                          *
************************************************************
         SPACE
         CLI   LNCOUNT,C'*'        WAS ASTERISK SPECIFIED?
         BNE   ERRLNOTF            NO - NOT FOUND - BRANCH
         CLC   CACURNUM,=F'0'      YES - BUT WERE WE AT 'TOP' ?
         BNE   ERRLNOTF            NO - NOTFOUND - BRANCH (EVER TAKEN?)
*              HOW CAN '*' BE NOT FOUND IF DATASET NOT EMPTY?
*              ANSWER - WE WERE AT TOP. CURRENT LINE WAS 0.
READNEXT MVI   EUTPARM,X'02'
         BAL   R14,EBEUT
         LTR   R15,R15
         BZ    PROCESS
         CH    R15,=H'4'
         BNE   ERRIOERR
         B     ERRLNOTF
         SPACE
************************************************************
*                                                          *
*        PROCESS: CHECK OTHER OPERANDS                     *
*                                                          *
************************************************************
         SPACE
PROCESS  EQU   *
         CLI   SETSW,2             NOSET?
         BE    NOSET               YES - BYPASS SYSDVAL
         SPACE
         L     R2,CAPTTMP
         USING CPPL,R2
         SPACE
         L     R15,CPPLECT
         DROP  R2                  CPPL
         USING ECT,R15
         L     R15,ECTIOWA         POINT TO IOSRL
         DROP  R15                 ECT
         L     R15,0(,R15)         POINT TO TOP ELEMENT IN STACK
         TM    0(R15),X'08'        IN A CLIST?
         BZ    NOSET               NO - BYPASS SYSDVAL
         SPACE
         L     R0,=V(SYMUPDT)      ADDRESS OF SYMUPDT
         LTR   R0,R0               IS SYMUPDT LINKEDITED WITH THIS
         BNZ   LKJUPDTX            YES, BYPASS LOAD
LKJUPDTL LA    R0,=CL8'SYMUPDT'
         LOAD  EPLOC=(0),ERRET=NOSET
LKJUPDTX ST    R0,UPDTPTR
*
*        (DO AWAY WITH SEQUENCE NUMBERS)
*
         TM    CACFLAG1,CANONUM    NONUM?
         BO    OUTSEQX             YES - BRANCH
         CLI   CALINE,1            SEQFLD IN COLUMN 1?
         BNE   OUTSEQA             NO - BRANCH
*
*        (REMOVE LEADING SEQUENCE NUMBERS)
*
         LH    R14,CABFRPL+4       GET RECLEN
         SLR   R15,R15
         IC    R15,CALENGTH        GET SEQLEN
         SLR   R14,R15             GET RECLEN-SEQLEN
         STH   R14,CABFRPL+4       RESET RECLEN
         SH    R14,=H'4'           GET DATA LENGTH
         LA    R1,CABFRPL+8        GET DATA ADDRESS
         ALR   R1,R15              GET DATA ADDRESS+SEQLEN
         LA    R15,CABFRPL+8       GET DATA ADDRESS
         BCTR  R14,0
         B     *+10
         MVC   0(0,R15),0(R1)      MOVE DATA OVER SEQFLD
         EX    R14,*-6
         B     OUTSEQX
*
*        (TRAILING SEQUENCE NUMBERS - TRUNCATE LENGTH)
*
OUTSEQA  SLR   R14,R14
         IC    R14,CALINE
         LA    R14,4-1(,R14)       SUBTRACT 1, ADD 4
         STH   R14,CABFRPL+4       RESET RECLEN=CALINE+3
OUTSEQX  EQU   *
*
*        (BLANK OUT 256 BYTES AFTER DATA)
*
         LH    R14,CABFRPL+4       GET RECLEN
         LA    R1,CABFRPL+4        GET ADDRESS OF RECORD
         ST    R1,DATAPTR
         ALR   R1,R14              GET ADDRESS AFTER DATA
         MVI   0(R1),C' '
         MVC   1(255,R1),0(R1)     CLEAR AREA
*
*        (UNLESS 'ASIS' SPECIFIED, MAKE DATA CAPS)
*
         CLI   ASISSW,2            'ASIS' SPECIFIED?
         BE    DASIS               YES - LEAVE DATA UNCHANGED
         L     R1,DATAPTR
         OC    4(255,R1),=252X'40'
DASIS    EQU   *
*
*        (UNLESS 'AMP' SPECIFIED, DOUBLE EACH AMPERSAND)
*
         CLI   AMPSW,1
         BE    AMPLEAVE
         L     R1,DATAPTR
*        TR    4(255,R1),AMPTAB
         LA    R1,4(,R1)
         LA    R15,HOLDFF
         LH    R14,CABFRPL+4
         SH    R14,=H'4'
         LR    R0,R14
AMPLOOP  CLI   0(R1),X'50'         IS IT AN AMPERSAND?
         BE    AMPFOUND            YES - BRANCH
AMPNEXT  LA    R1,1(,R1)
         BCT   R0,AMPLOOP
         B     AMPEX
AMPFOUND MVC   0(255,R15),0(R1)    HOLD AMPERSAND AND DATA AFTER IT
         MVC   1(255,R1),0(R15)    COPY IT ALL BACK ONE BYTE OVER
         LA    R14,1(,R14)         ADD 1 TO LENGTH
         LA    R1,1(,R1)           POINT PAST ADDED CHARACTER
         B     AMPNEXT             CONTINUE
AMPEX    EQU   *
         LA    R14,4(,R14)
         STH   R14,CABFRPL+4       RESET LENGTH
AMPLEAVE EQU   *
*
*        GET DATA WITHOUT SEQUENCE NUMBERS
*
         L     R1,DATAPTR          POINT TO DATA MINUS 4
         LA    R1,4(,R1)
         LH    R0,CABFRPL+4        GET RECORD LENGTH
         SH    R0,=H'4'            GET RECORD LENGTH
*
*        (CALL IKJUPDT)
*
         MVC   LCVAL,=CL8'SYSDVAL'
         LA    R14,LCVAL
         ST    R14,LCVALPTR
         MVI   LCVALPTR,1          CREATE SYMBOLIC NAME IF NECESSARY
         LA    R14,7               LENGTH OF NAME 'SYSDVAL'
         ST    R14,LCVALLEN
         ST    R1,UPVALPTR
         ST    R0,UPVALLEN
         SPACE
         LA    R1,MYIOPL
         LA    R14,UPLIST
         ST    R14,12(,R1)
         SPACE
         L     R15,UPDTPTR         ADDRESS OF IKJUPDT
         BALR  R14,R15
         SPACE
         TM    CACFLAG1,CANONUM    IS DATA SET LINE-NUMBERED?
         BO    NOLINE              NO - DONT UPDATE SYSLINE
         L     R1,CABFRPL          LINE NUMBER
         CVD   R1,DOUBLE
         UNPK  LINEWK(9),DOUBLE+3(5)
         OI    LINEWK+8,X'F0'
         LA    R1,LINEWK+1
         LA    R0,8
         LA    R15,7
ZEROSUP  CLI   0(R1),C'0'
         BNE   SETLIN
         LA    R1,1(,R1)
         BCTR  R0,0
         BCT   R15,ZEROSUP
SETLIN   EQU   *
         SPACE
         MVC   LCVAL,=CL8'SYSLINE'
         LA    R14,LCVAL
         ST    R14,LCVALPTR
         MVI   LCVALPTR,1          CREATE SYMBOLIC NAME IF NECESSARY
         LA    R14,7
         ST    R14,LCVALLEN
         ST    R1,UPVALPTR
         ST    R0,UPVALLEN
         SPACE
         LA    R1,MYIOPL
         LA    R14,UPLIST
         ST    R14,12(,R1)
         SPACE
         L     R15,UPDTPTR
         BALR  R14,R15
NOLINE   EQU   *
         SPACE
NOSET    EQU   *
*
*        (UPDATE CURRENT LINE NUMBER)
*
         L     R1,CABFRPL
         ST    R1,CACURNUM
*
         B     EXIT0
         SPACE
************************************************************
*                                                          *
*        LINE EDIT ROUTINE                                 *
*                                                          *
************************************************************
         SPACE
LINEEDIT ST    R14,PUTLINS
         IKJEBESH (COMMREG),IKJEBELE,PARAM=((COMMREG),ELEPARM),MF=(E,X)
         L     R14,PUTLINS
         BR    R14
         SPACE
************************************************************
*                                                          *
*        ERROR ROUTINES                                    *
*                                                          *
************************************************************
         SPACE
         SPACE
ERRSYNTX LA    R1,MSGSYNTX
         LA    R0,L'MSGSYNTX
         BAL   R14,PUTLINE
         B     EXIT8
         SPACE
ERREMPTY LA    R1,MSGEMPTY
         LA    R0,L'MSGEMPTY
         BAL   R14,PUTLINE
         B     EXIT8
         SPACE
ERRNONUM LA    R1,MSGNONUM
         LA    R0,L'MSGNONUM
         BAL   R14,PUTLINE
         B     EXIT8
         SPACE
ERRIOERR LA    R1,MSGIOERR
         LA    R0,L'MSGIOERR
         BAL   R14,PUTLINE
         B     EXIT8
         SPACE
ERRIOERW LA    R1,MSGIOERW
         LA    R0,L'MSGIOERW
         BAL   R14,PUTLINE
         B     EXIT8
         SPACE
ERRLNOTF LA    R1,MSGLNOTF
         LA    R0,L'MSGLNOTF
         BAL   R14,PUTLINE
         B     EXIT8
         SPACE
************************************************************
*                                                          *
*        PUTLINE ROUTINE                                   *
*                                                          *
************************************************************
         SPACE
PUTLINE  STM   R14,R1,PUTLINS
         XC    MYOLD(8),MYOLD
         XC    MYSEG1(4),MYSEG1
         MVC   MYPTPB(12),MODLPTPB
         LA    R14,1               NO. OF MESSAGE SEGMENTS
         ST    R14,MYOLD
         LA    R14,MYSEG1          POINT TO 1ST SEGMENT
         ST    R14,MYOLD+4
         LR    R14,R0              LENGTH IN R0
         LA    R14,4(,R14)         ADD 4
         LA    R15,MYSEG1+4
         CLC   0(3,R1),=C'IKJ'     IS DATA PRECEEDED BY MESSAGE ID?
         BE    *+16                YES - BRANCH
         LA    R14,1(,R14)         ADD 1 TO LENGTH
         MVI   0(R15),C' '         INSERT LEADING BLANK
         LA    R15,1(,R15)         BUMP POINTER
         STH   R14,MYSEG1
         MVI   MYSEG1+4,C' '       LEADING BLANK
         LR    R14,R0
         BCTR  R14,0
         B     *+10
         MVC   0(0,R15),0(R1)      MOVE MESSAGE IN
         EX    R14,*-6
         SPACE
         PUTLINE PARM=MYPTPB,OUTPUT=(MYOLD),MF=(E,MYIOPL)
         SPACE
         LM    R14,R1,PUTLINS
         BR    R14
************************************************************
*                                                          *
*        EBEUT                                             *
*                                                          *
************************************************************
         SPACE
EBEUT    ST    R14,PUTLINS
         IKJEBESH (COMMREG),IKJEBEUT,PARAM=((COMMREG),EUTPARM),MF=(E,X)
         ST    R1,RCDPTR
         CH    R15,=H'8'
         BNE   *+8
         LA    R7,12               SET R7=12
         L     R14,PUTLINS
         BR    R14
         SPACE
************************************************************
*                                                          *
*        EXIT - RETURN TO EDIT                             *
*                                                          *
************************************************************
         SPACE
EXIT8    LA    R15,8
         B     EXIT
EXITR7   LR    R15,R7
         B     EXIT
EXIT0    SR    15,15
EXIT     LR    1,R13
         L     R0,@SIZE
         L     R13,4(,R13)
         ST    15,16(,R13)
         FREEMAIN R,A=(1),LV=(0)
         LM    14,12,12(R13)
         BR    14
         SPACE
************************************************************
*                                                          *
*        CONSTANTS                                         *
*                                                          *
************************************************************
         SPACE
         LTORG
MODLPTPB PUTLINE OUTPUT=(1,TERM,SINGLE,INFOR),                         X
               TERMPUT=(EDIT,WAIT,NOHOLD,NOBREAK),MF=L
         SPACE
MSGSYNTX DC    C'IKJ56702I SYNTAX ERROR'
MSGEMPTY DC    C'IKJ52501I NO LINES IN DATA SET'
MSGNONUM DC    C'IKJ52502I DATA SET NOT LINE NUMBERED' IKJ52502I
MSGIOERR DC    C'IKJ52313I I/O ERROR HAS OCCURRED READING EDIT DATASET'
MSGIOERW DC    C'IKJ52313I I/O ERROR HAS OCCURRED WRITING EDIT DATASET'
MSGLNOTF DC    C'IKJ52504I LINE NUMBER NOT FOUND' IKJ52504I
MSGOVFLO DC    C'IKJ52507I LINE TRUNCATED'
MSGEODAT DC    C'IKJ52500I END OF DATA'
*        DC    0D'0'
* AMPTAB DC    256AL1(*-AMPTAB)
*        ORG   AMPTAB+C'&&'
*        DC    C'%'
*        ORG
PATCH    DC    4D'0'               PATCH AREA
         SPACE
************************************************************
*                                                          *
*        PARSE PCL                                         *
*                                                          *
************************************************************
         SPACE
         PRINT NOGEN
         SPACE
SETLPCL  IKJPARM
LNUM1    IKJIDENT 'LINE NUMBER',ASTERISK,FIRST=NUMERIC,OTHER=NUMERIC,  X
               MAXLNTH=8
ASISKW   IKJKEYWD
         IKJNAME 'CAPS'
         IKJNAME 'ASIS'
SETKW    IKJKEYWD
         IKJNAME 'SET'
         IKJNAME 'NOSET'
AMPKW    IKJKEYWD
         IKJNAME 'AMP'
         IKJENDP
         SPACE
         PRINT GEN
         SPACE
************************************************************
*                                                          *
*        DSECTS                                            *
*                                                          *
************************************************************
         SPACE
@DATA    DSECT
         DS    18F
LINKAREA DS    2F
MYPPL    DS    7F
MYANS    DS    F
MYECB    DS    F
MYIOPL   DS    4F
MYPTPB   DS    3F
MYOLD    DS    2F
MYSEG1   DS    2H,CL100
PUTLINS  DS    4F
RCDPTR   DS    F
EUTPARM  DS    4F
DEUTPARM DS    4F
ELEPARM  DS    2F
EMSPARM  DS    4F
DOUBLE   DS    D
LINENUM1 DS    F
LNCOUNT  DS    F
ASISSW   DS    XL1
SETSW    DS    XL1
AMPSW    DS    XL1
DATAPTR  DS    F
UPDTPTR  DS    F
UPLIST   DS    0F
LCVALPTR DS    F
LCVALLEN DS    F
UPVALPTR DS    F
UPVALLEN DS    F
*
LCVAL    DS    CL8
LINEWK   DS    CL9
HOLDFF   DS    CL255
         DS    0D
@DATAL   EQU   *-@DATA
         SPACE
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
COMMREG  EQU   9
RETCDREG EQU   15
RETREG   EQU   14
PARMREG0 EQU   0
PARMREG1 EQU   1
         SPACE
         IKJCPPL
         SPACE
         IKJPPL
         SPACE
         IKJUPT
         SPACE
         IKJECT
         SPACE
         IKJIOPL
         SPACE
         PRINT NOGEN
         IKJEBECA
         END
         TITLE '   S Y M U P D T   '
************************************************************
*                                                          *
*        'SYMUPDT'                                         *
*                                                          *
************************************************************
         SPACE
*        WRITTEN BY. BILL GODFREY,  PLANNING RESEARCH CORPORATION.
*        INSTALLATION. PRC COMPUTER CENTER INC, MCLEAN VA.
*        DATE WRITTEN. DECEMBER 8-12 1978.
*        DATE UPDATED. APRIL 9 1981.
*        ATTRIBUTES. RE-ENTRANT.
*        DESCRIPTION
*         THIS SUBPROGRAM, WHEN CALLED FROM A TSO COMMAND
*         EXECUTING IN A COMMAND PROCEDURE, UPDATES SYMBOLIC
*         VARIABLES IN THE PROCEDURE.  VS2/MVS ONLY.
*
*         IT IS MODELED AFTER THE 'IKJUPDT' ROUTINES IN
*         MODULE IKJCT433 (LOAD-MODULE IKJPTGT), AND WILL
*         ACCEPT THE SAME PARAMETER LIST THAT 'IKJUPDT' USES.
*
*        LOG OF CHANGES.
*         09APR81. MOVE 4 BYTES TO ALIGN INSTEAD OF 2 AT UPSAME.
*
*         INPUT PARAMETERS: REGISTER 1 POINTS TO AN IOPL,
*         WHICH IS A LIST OF 4 POINTERS:
*             WORD 1 = POINTER TO THE UPT     (NOT USED)
*             WORD 2 = POINTER TO THE ECT
*             WORD 3 = POINTER TO THE ECB     (NOT USED)
*             WORD 4 = POINTER TO THE UPDATE PARMS
*         THE UPDATE PARMS CONSIST OF 4 WORDS:
*             WORD 1 = POINTER TO THE VARIABLE NAME
*             WORD 2 = LENGTH OF THE VARIABLE NAME
*             WORD 3 = POINTER TO THE NEW VALUE
*             WORD 4 = LENGTH OF THE NEW VALUE
*
*         BEFORE THIS PROGRAM EXISTED, IT WAS NECESSARY TO
*         ADD THE ALIAS 'IKJUPDT' TO LOAD-MODULE IKJPTGT, AND
*         ISSUE A 'LINK' SVC TO IKJUPDT.
*
*         DIFFERENCES BETWEEN THIS AND IKJUPDT:
*         1) IKJUPDT WILL NOT CREATE A NEW SYMBOLIC VARIABLE.
*            SYMUPDT WILL, IF THE LEFT BYTE OF NAME PTR IS 1.
*         2) IKJUPDT DOES NOT ALLOW YOU TO UPDATE GLOBALS BY
*            POSITION (BY NAME, YES).
*            SYMUPDT RECOGNIZES A 4-BYTE NAME THAT IS A
*            SMALL FIXED BINARY NUMBER AS A GLOBAL POSITION.
*         3) IKJUPDT ASSUMES YOU ARE IN A CLIST.
*            SYMUPDT WILL GIVE YOU A RC=0 IF NOT.
*         4) IKJUPDT DOES NOT HAVE A LOCATE-ONLY OPTION.
*
*         IT IS RECOMMENDED THAT YOU DEFER ATTENTION INTERRUPTS
*         BEFORE CALLING SYMUPDT, BY ISSUING THE 'STAX DEFER=YES'
*         MACRO, THEN ISSUE 'STAX DEFER=NO' AFTER THE CALL.
         EJECT
SYMUPDT  START
         USING *,R12
         B     @PROLOG-*(,15)
         DC    AL1(11),CL11'SYMUPDT '
         DC    CL16' &SYSDATE &SYSTIME ',C'PRC '
@SIZE    DC    0F'0',AL1(1),AL3(@DATAL)
@PROLOG  STM   14,12,12(R13)       SAVE REGISTERS
         LR    R12,R15             LOAD BASE REGISTER
         LR    R2,R1               IOPL POINTER
         USING IOPL,R2
         L     R0,@SIZE            WORKAREA SUBPOOL AND LENGTH
         GETMAIN R,LV=(0)
         LR    R9,R1               INITIALIZE WORKAREA POINTER
         USING @DATA,R9
         SPACE 1
         LR    R0,R1               AREA TO BE CLEARED
         L     R1,@SIZE            LENGTH TO BE CLEARED
         SLR   R15,R15             ZERO PAD AND 'FROM' LENGTH
         MVCL  R0,R14              ZERO IT ALL
         SPACE 1
         ST    R13,4(,R9)          CHAIN OLD TO NEW
         ST    R9,8(,R13)          CHAIN NEW TO OLD
         LR    R13,R9              UPDATE SAVEAREA POINTER
         SPACE 1
         L     R1,IOPLIOPB         LOAD PTR TO PARAMETERS
         MVC   LCVALPTR(16),0(R1)  COPY PARAMETERS
         ST    R1,SAVINPUT         SAVE PTR TO CALLERS DATA
         SPACE
         L     R1,IOPLECT
         USING ECT,R1
         L     R1,ECTIOWA
         DROP  R1                  ECT
         DROP  R2                  IOPL
         L     R1,0(,R1)           IOSTELM
         TM    0(R1),X'08'         IN A CLIST?
         BZ    EXIT0               NO, CALLER SHOULD HAVE CHECKED THIS
         L     R1,0(,R1)           INSADLSD
         LA    R1,0(,R1)           ZERO HI ORDER BYTE
         USING LSD,R1
         L     R2,LSDEXEC
         USING EXECDATA,R2
         DROP  R1                  LSD
         SPACE
         L     R1,LCVALPTR
         CLI   0(R1),0             IS NAME A GLOBAL POSITION?
         BNE   GLOBPOSX            NO
         LA    R0,4                MAYBE, IF LENGTH IS 4
         C     R0,LCVALLEN         IS LENGTH 4?
         BNE   GLOBPOSX            NO
         L     R2,GEXECDAT         YES, USE GLOBAL EXECDATA
GLOBPOSX EQU   *
         SPACE
         BAL   R8,LOCATE           SET R4
         LTR   R15,R15             WAS NAME FOUND
         BNZ   EXIT                NO. 904 OR 940 OR 944 OR 312
         CLI   LCVALPTR,2          LOCATE ONLY?
         BE    LOCONLY             YES, BRANCH
         SPACE
         BAL   R8,UPDATE           UPDATE IT
         B     EXIT                RC=0 OR 300 OR 16
         SPACE
LOCONLY  EQU   *
         USING SNTELEM,R4
         L     R6,SNTVLPTR         POINT TO VALUE ELEMENT
         USING SVTELEM,R6
         MVC   ALIGN(2),SVTLNG     GET LENGTH
         LH    R1,ALIGN
         ST    R1,UPVALLEN         SET RETURN LENGTH
         ST    R1,UPVALPTR         ZERO VALUE PTR (IF LEN = 0)
         LTR   R1,R1
         BZ    LOCONRET            BRANCH IF LENGTH ZERO
         LA    R1,SVTDATA          POINT TO VALUE
         ST    R1,UPVALPTR         SET VALUE PTR
LOCONRET L     R1,SAVINPUT         POINT TO CALLERS AREA
         MVC   8(8,R1),UPVALPTR    COPY RETURNED VALUES
         B     EXIT
         DROP  R6
         DROP  R4
         EJECT
************************************************************
*                                                          *
*        LOCATE                                            *
*                                                          *
************************************************************
         SPACE
LOCATE   EQU   *
         USING EXECDATA,R2
         L     R3,SNTABFST
TABLE    EQU   *
         USING SNTAB,R3
         LA    R4,SNTELFST
ELEMENT  EQU   *
         USING SNTELEM,R4
         SPACE
         MVC   ALIGN(2),SNTLNG
         LH    R1,ALIGN
         C     R1,LCVALLEN         LENGTHS EQUAL?
         BNE   NEXTELM             NO, BRANCH
         LTR   R1,R1               LENGTH ZERO?
         BNP   NEXTELM             YES, SHOULDNT BE
         CH    R1,=H'31'           LENGTH EXCESSIVE?
         BH    NEXTELM             YES, SHOULDNT BE
         L     R15,LCVALPTR
         BCTR  R1,0
         EX    R1,COMPARE          DOES NAME MATCH?
         BE    ELMFOUND            YES, BRANCH
NEXTELM  TM    SNTFLAGS,SNTLAST    LAST NAME IN THIS TABLE?
         BO    NEXTTAB             YES, BRANCH
         LH    R1,ALIGN
         LA    R4,8(R1,R4)         ADD SNTLNG PLUS 8 TO POINTER
         B     ELEMENT
COMPARE  CLC   0(0,R15),SNTDATA
NEXTTAB  LR    R0,R3               SAVE SNTAB PTR
         L     R3,SNTABNXT
         LTR   R3,R3
         BNZ   TABLE
         LR    R3,R0               RESTORE LAST SNTAB FOR NAMEADD
         CLI   LCVALPTR,1          NAME TO BE ADDED IF NECESSARY?
         BE    NAMEADD             YES, BRANCH
         LA    R15,E904            VARIABLE NOT FOUND
         BR    R8
         SPACE
ELMFOUND EQU   *
         TM    SNTFLAGS,SNTLABEL   IS IT A LABEL?
         BO    ELMLABEL
         TM    SNTFLAGS+1,SNTGLOB  IS IT A GLOBAL?
         BO    ELMGLOB             YES, BRANCH
         SLR   R15,R15
         BR    R8
         SPACE
ELMLABEL LA    R15,E944
         BR    R8
         SPACE
ELMGLOB  MVC   SAVGVAL,SNTGVAL     SAVE GVAL
         B     GLOCATE
         SPACE
GLOCATE  EQU   *
         L     R2,GEXECDAT         GLOBAL EXECDATA
         L     R3,SNTABFST
GTABLE   EQU   *
         LA    R4,SNTELFST
GELEMENT EQU   *
         CLC   SNTLNG,=H'4'        IS LENGTH 4
         BNE   GNEXTELM            NO
         CLC   SAVGVAL,SNTDATA     IS SAVED GVAL EQ DATA?
         BE    GFOUND              YES, BRANCH
GNEXTELM TM    SNTFLAGS,SNTLAST
         BO    GNEXTTAB
         MVC   ALIGN(2),SNTLNG
         LH    R1,ALIGN
         LA    R4,8(R1,R4)
         B     GELEMENT
GNEXTTAB L     R3,SNTABNXT
         LTR   R3,R3
         BNZ   GTABLE
         LA    R15,E312            INTERNAL GLOBAL ERROR
         BR    R8
GFOUND   SLR   R15,R15
         BR    R8
         EJECT
************************************************************
*                                                          *
*        NAMEADD                                           *
*                                                          *
************************************************************
         SPACE
NAMEADD  EQU   *
         L     R1,LCVALLEN
         LA    R0,31
         CR    R1,R0               IS LENGTH .GT. 31
         BH    NA940
         LTR   R1,R1               IS LENGTH ZERO OR LESS
         BNP   NA940
         LR    R14,R1              SAVE LENGTH
         L     R15,LCVALPTR        POINT TO NAME
         TRT   0(1,R15),ALPHA      IS 1ST CHARACTER ALPHABETIC?
         BNZ   NA940               NO
         BCT   R1,NASINGLE         LENGTH OF ALL BUT 1ST BYTE
         MVC   ALPHANUM,ALPHA      COPY TABLE
         XC    ALPHANUM+240(10),ALPHANUM+240
         BCTR  R1,0                LENGTH MINUS 1 FOR EX
         EX    R1,NATRT            IS NAME ALPHANUMERIC?
         BNZ   NA940               NO, BRANCH
NASINGLE LR    R1,R14              RESTORE LENGTH
         LA    R14,8(,R1)          GET NAME LENGTH PLUS 8
         L     R15,SNTABLNG
         LR    R0,R15
         S     R15,SNTABUSE        GET SIZE OF REMAINING GAS
         CR    R14,R15             ROOM FOR NEW NAME ENTRY IN GAS?
         BNH   NACELL              YES, BRANCH
*
*          GET MAX (SNTABLNG, LCVALLEN+8+20+GAS)
*
         LA    R15,8+12+GAS
         AR    R1,R15
         CR    R1,R0
         BNL   *+6
         LR    R1,R0
         LR    R7,R1
         SPACE
         MVC   GETLISTW(GETLISTL),GETLIST
         SPACE
         GETMAIN EC,LV=(R7),SP=78,A=GETADDR,MF=(E,GETLISTW)
         SPACE
         LTR   R15,R15
         BNZ   NA16
         L     R15,GETADDR
         SLR   R0,R0
         ST    R0,SNTABNXT-SNTAB(,R15)
         ST    R7,SNTABLNG-SNTAB(,R15)
         LA    R0,12
         ST    R0,SNTABUSE-SNTAB(,R15)
         ST    R15,SNTABNXT
         LR    R3,R15              START USING NEW SNTAB
         B     NACOMMON
         SPACE
NATRT    TRT   1(0,R15),ALPHANUM
         SPACE
NACELL   NI    SNTFLAGS,255-SNTLAST
NACOMMON L     R1,SNTABUSE
         LA    R4,0(R1,R3)
         XC    SNTFLAGS(2),SNTFLAGS
         OI    SNTFLAGS,SNTKEYW+SNTLAST
         LA    R1,SVTELFST-SVTAB   OFFSET TO NULL ELEMENT
         AL    R1,SVTABFST
         ST    R1,SNTVLPTR
         L     R1,LCVALLEN
         STH   R1,SNTLNG
         BCTR  R1,0
         L     R15,LCVALPTR
         EX    R1,NAMOVE
         LA    R1,8+1(,R1)
         A     R1,SNTABUSE
         ST    R1,SNTABUSE
         SLR   R15,R15
         BR    R8
         SPACE
NAMOVE   MVC   SNTDATA(0),0(R15)
         SPACE
NA16     LA    R15,16
         BR    R8
NA940    LA    R15,E940            INVALID SYMBOLIC VARIABLE
         BR    R8
         EJECT
************************************************************
*                                                          *
*        UPDATE                                            *
*                                                          *
************************************************************
         SPACE
UPDATE   EQU   *
         ST    R4,SAVSNTEL
         TM    SNTFLAGS,SNTNAUTH   IS UPDATE PROHIBITED?
         BO    UP300
         L     R5,SVTABFST
         USING SVTAB,R5
         L     R6,SNTVLPTR
         USING SVTELEM,R6
         MVC   ALIGN(2),SVTORIG
         L     R15,UPVALLEN
         CH    R15,ALIGN           WILL NEW VALUE FIT IN OLD AREA
         BNH   UPSAME              YES, BRANCH
         LA    R14,4(,R15)
         L     R1,SVTABLNG
         S     R1,SVTABUSE
         CR    R14,R1              WILL NEW VALUE FIT IN GAS AREA?
         BNH   UPCELL              YES, BRANCH
*
*          GET MAX (SVTABLNG+UPVALLEN+GAS  (SVTABUSE-SVTABFRE)*1.5)
*
         L     R14,SVTABLNG
         AR    R14,R15
         LA    R0,GAS
         ALR   R14,R0
         SPACE
         L     R1,SVTABUSE
         S     R1,SVTABFRE
         M     R0,=F'3'
         D     R0,=F'2'
         SPACE
         CR    R1,R14
         BNL   *+6
         LR    R1,R14
         LR    R7,R1
         SPACE
         MVC   GETLISTW(GETLISTL),GETLIST
         SPACE
         GETMAIN EC,LV=(R7),SP=78,A=GETADDR,MF=(E,GETLISTW)
         SPACE
         LTR   R15,R15
         BNZ   UP16
         L     R5,GETADDR          NEW SVTAB
         L     R1,SVTABFST         OLD SVTAB FROM EXECDATA
         ST    R1,SVTABNXT         TO NEW SVTAB
         SLR   R0,R0
         ST    R0,SVTABFRE         SVTABFRE = ZERO
         ST    R7,SVTABLNG         LENGTH OF NEW SVTAB
         LA    R1,20               16 + NULL ELEMENT
         ST    R1,SVTABUSE
         ST    R0,SVTELFST         SET NULL ELEMENT
         SPACE
         ST    R5,SVTABFST         UPDATE EXECDATA
         L     R3,SNTABFST         GET FIRST NAME TABLE
         LA    R4,SNTELFST         GET FIRST NAME
         LA    R14,SVTELFST+4      POINT PAST NULL ELEMENT
*
*
*
UELEMENT C     R4,SAVSNTEL         DONT COPY THE TARGET
         BE    UNEXTELM
         TM    SNTFLAGS,SNTLABEL   LABELS DONT USE SVTAB
         BO    UNEXTELM
         TM    SNTFLAGS+1,SNTGLOB  GLOBALS DONT USE SVTAB
         BO    UNEXTELM
         L     R6,SNTVLPTR         POINT TO VALUE ELEMENT
         MVC   ALIGN(4),SVTLNG     ALIGN SVTLNG AND SVTORIG
         LH    R1,ALIGN+2          IF SVTORIG = 0
         LTR   R1,R1
         BNZ   UELEMOVE
         LA    R1,SVTELFST         POINT TO NULL ELEMENT
         ST    R1,SNTVLPTR         UPDATE SNTAB ELEMENT
         B     UNEXTELM
UELEMOVE LH    R15,ALIGN+2         MOVE-TO LENGTH SVTORIG
         ST    R14,SNTVLPTR
         LA    R0,4                               PLUS 4
         ALR   R15,R0
         LR    R0,R6               MOVE-FROM ADDRESS
         LR    R1,R15              MOVE-FROM LENGTH
         MVCL  R14,R0              MOVE A VALUE ELEMENT
*                                  AND UPDATE R14
         LH    R1,ALIGN+2          SVTORIG
         SH    R1,ALIGN            SVTORIG-SVTLNG
         A     R1,SVTABFRE
         ST    R1,SVTABFRE         UPDATE FREE COUNT
         LH    R1,ALIGN+2          SVTORIG
         LA    R0,4
         ALR   R1,R0               SVTORIG+4
         A     R1,SVTABUSE
         ST    R1,SVTABUSE         UPDATE USED COUNT
UNEXTELM TM    SNTFLAGS,SNTLAST    LAST NAME IN TABLE?
         BO    UNEXTTAB            YES, BRANCH
         MVC   ALIGN(2),SNTLNG
         LH    R1,ALIGN
         LA    R4,8(R1,R4)
         B     UELEMENT
UNEXTTAB L     R3,SNTABNXT
         LTR   R3,R3
         BZ    UCOPIED
         LA    R4,SNTELFST
         B     UELEMENT
         SPACE
UCOPIED  L     R4,SAVSNTEL
         L     R3,SNTABFST         FROM EXECDATA
         SPACE
         L     R1,SVTABNXT         POINT TO OLD SVTAB
         L     R7,SVTABLNG-SVTAB(,R1)
         MVC   FRELISTW(FRELISTL),FRELIST
         SPACE
         FREEMAIN EC,LV=(R7),SP=78,A=SVTABNXT,MF=(E,FRELISTW)
         SPACE
         SLR   R0,R0
         ST    R0,SVTABNXT
         SPACE
UPCELL   L     R1,SVTABUSE         GET USED BYTES
         LA    R6,0(R1,R5)         POINT PAST USED BYTES
         ST    R6,SNTVLPTR
         L     R1,UPVALLEN
         STH   R1,ALIGN
         STH   R1,ALIGN+2
         MVC   SVTLNG(4),ALIGN     SET SVTLNG AND SVTORIG
         LA    R0,4
         ALR   R1,R0
         A     R1,SVTABUSE
         ST    R1,SVTABUSE
         SPACE
UPSAME   LH    R1,SVTLNG
         SL    R1,UPVALLEN
         A     R1,SVTABFRE
         ST    R1,SVTABFRE
         SPACE
         L     R1,UPVALLEN
         STH   R1,SVTLNG           REPLACE CURRENT LENGTH
         SPACE
         LA    R14,SVTDATA         MOVE-TO ADDRESS
         MVC   ALIGN(4),SVTLNG     CURRENT LEN, ORIGINAL LEN  .BUGFIX.
         LH    R15,ALIGN+2         MOVE-TO LENGTH (PAD ORIG)
         L     R0,UPVALPTR
         LH    R1,ALIGN            MOVE-FROM LENGTH (UPVALLEN)
         MVCL  R14,R0
         SPACE
         SLR   R15,R15
         BR    R8
         SPACE
UP16     LA    R15,E16
         BR    R8
         SPACE
UP300    LA    R15,E300
         BR    R8
         SPACE 1
EXIT0    SR    R15,R15             RETURN CODE ZERO
EXIT     LR    R1,R13              POINT R1 TO AREA TO BE FREED
         L     R0,@SIZE            SUBPOOL AND LENGTH
         L     R13,4(,R13)         RESTORE PREVIOUS SAVEAREA
         ST    R15,16(,R13)        STORE RETURN CODE FOR LM
         FREEMAIN R,A=(1),LV=(0)
         LM    14,12,12(R13)       LOAD RETURN ADDRESS AND RC
         BR    14                  RETURN
         SPACE
************************************************************
*                                                          *
*        CONSTANTS                                         *
*                                                          *
************************************************************
         SPACE
GETLIST  GETMAIN EC,LV=888,SP=78,A=666,MF=L
GETLISTL EQU   *-GETLIST
         SPACE
FRELIST  FREEMAIN EC,LV=888,SP=78,A=666,MF=L
FRELISTL EQU   *-FRELIST
         SPACE
GAS      EQU   200
         LTORG
         DC    0D'0'
ALPHA    DC    193X'FF',9X'00',7X'FF',9X'00',8X'FF',8X'00',22X'FF'
*              THE ABOVE TABLE CAN BE USED TO TEST FOR
*              ALPHABETIC CHARACTERS WITH A 'TRT' INSTRUCTION.
*              IF THE FIELD IS ALPHABETIC, CONDITION CODE IS 0.
*              WARNING: 'TRT' CAN CHANGE THE LOW ORDER 8 BITS
*              OF REGISTER 2 AND LOW ORDER 24 BITS OF REG 1.
         SPACE
E16      EQU   16                  NOT ENOUGH VIRT STG
E300     EQU   300                 UNAUTHORIZED UPDATE
E312     EQU   312                 INTERNAL GLOBAL ERROR
E904     EQU   904                 VARIABLE NOT FOUND
E940     EQU   940                 INVALID SYMBOLIC VARIABLE
E944     EQU   944                 LABEL USED AS VARIABLE
         SPACE
************************************************************
*                                                          *
*        DSECTS                                            *
*                                                          *
************************************************************
         SPACE
@DATA    DSECT
         DS    18F                 REGISTER SAVEAREA
ALIGN    DS    D
GETLISTW DS    0F,(GETLISTL)X
GETADDR  DS    F
FRELISTW DS    0F,(FRELISTL)X
SAVINPUT DS    F
SAVGVAL  DS    CL4
SAVSNTEL DS    F
LCVALPTR DS    A
LCVALLEN DS    A
UPVALPTR DS    A
UPVALLEN DS    A
         DS    0D
ALPHANUM DS    CL256
@DATAL   EQU   *-@DATA
         SPACE
LSD      DSECT     STACK - STORAGE LIST SOURCE DESCRIPTOR
LSDADATA DS    A
LSDRCLEN DS    AL2
LSDTOTLN DS    AL2
LSDANEXT DS    A
LSDEXEC  DS    A
         SPACE
EXECDATA DSECT                     EXECDATA CONTROL BLOCK
SNTABFST DS    A
SVTABFST DS    A
GEXECDAT DS    A
LASTTSO  DS    A
         SPACE
SNTAB    DSECT
SNTABNXT DS    A                   PTR TO NEXT SNTAB
SNTABLNG DS    A                   LENGTH OF THIS SNTAB
SNTABUSE DS    A                   BYTES IN USE IN THIS SNTAB
SNTELFST DS    0C                  1ST SNTAB ELEMENT
         SPACE
SNTELEM  DSECT
SNTVLPTR DS    0A                  PTR TO SVTAB ELEMENT
SNTGVAL  DS    A                   OR INTERNAL GLOBAL NUMBER
SNTFLAGS DS    BL2                 FLAGS
SNTPOSIT EQU   X'80'      BYTE 1   POSITIONAL
SNTKEY   EQU   X'40'               KEYWORD
SNTKEYW  EQU   X'20'               KEYWORD WITH SUBFIELD
SNTLABEL EQU   X'10'               LABEL
SNTNOSCN EQU   X'08'               NOT RE-SCANNABLE
SNTNAUTH EQU   X'04'               CANNOT BE SET
SNTEVAL  EQU   X'02'               MUST BE ALWAYS RE-EVALUATED
SNTLAST  EQU   X'01'               LAST NAME IN TABLE
SNTGLOB  EQU   X'80'      BYTE 2   GLOBAL NAME
SNTLNG   DS    AL2                 LENGTH OF NAME
SNTDATA  DS    0C                  NAME OF VARIABLE
         SPACE
SVTAB    DSECT
SVTABNXT DS    A
SVTABLNG DS    A
SVTABUSE DS    A                   NUM BYTES IN USE
SVTABFRE DS    A                   NUM BYTES IN USE BUT UNUSED
SVTELFST DS    0C
         SPACE
SVTELEM  DSECT
SVTLNG   DS    H                   CURRENT LENGTH
SVTORIG  DS    H                   ORIGINAL LENGTH
SVTDATA  DS    0C                  VALUE
         SPACE
         IKJIOPL
         SPACE
         IKJECT
         SPACE
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         END
