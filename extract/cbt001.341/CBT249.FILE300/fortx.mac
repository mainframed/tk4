*************************************************************
*             LATEST UPDATE DATE
         LCLC  &DATE
&DATE    SETC  '10MAY78'
*************************************************************
FHX      TITLE '''FORTX'' -- FORTRAN IV (H EXTENDED) PROMPTER -- FIRST *
               LOAD (&DATE)'
** 'FORTX' -- FORTRAN IV (H EXTENDED) PROMPTER TO EXECUTE UNDER TSO
** AND WAS WRITTEN BY A. H. DOBYNS OF BOOLE & BABBAGE, INC.
**
** THIS VERSION IS BASED ON THE ASMG PROMPTER WRITTEN BY JOE SCHINDLER
** (CSC) AT GODDARD SPACE FLIGHT CENTER, GREENBELT, MARYLAND
**
**
** VERSION 1.3   ---   MAY 10, 1978    ---   1125 HOURS
**
**
**     COMMAND NAME -- FORTX
**
**
** ATTR - RE-ENTRANT
**
**
** THIS IS THE FIRST LOAD OF A TWO LOAD FORTX COMMAND PROCESSOR.
** THIS LOAD VERIFIES THE DATA SET NAMES, ALLOCATES, AND CONCATENATES,
** AND THEN XCTL'S TO THE SECOND LOAD. THE SECOND LOAD ATTACHES
** THE COMPILER, DECONCATENATES, AND FREE ALL THE DDNAMES ALLOCATED.
** THE PARM FIELD, DDNAMES, DAIRPL, ETC ARE PASSED TO THE SECOND LOAD
** THRU SUBPOOL 0.  BOTH LOADS ARE REENTRANT.
**
**
** DISCRIPTION OF VARIOUS VERSIONS -
**
**    1.0  -  BASIC VERSION WITH FEW FRILLS.
**
**    1.1  -  USE OF ATTRIBUTE CONTROL BLOCK ADDED FOR GENERAL USE
**            OF BUFNO=1 TO LEAVE AS MUCH FREE CORE AS POSSIBLE FOR
**            COMPILER'S TABLE SPACE.  BLOCKSIZES MUST BE DEFINED
**            IN ATRCB SO THAT COMPILER WILL NOT SET BLOCKSIZE EQUAL
**            TO LRECL.  BLOCKSIZES IN USE ARE:
**             800 FOR SYSLIN,  1922 FOR SYSPRINT,  1050 FOR SYSUT1,
**             128 FOR SYSTERM, 689 FOR SYSINDEX.
**
**    1.2  -  CODE BEING MADE RE-ENTRANT FOR BOTH LOADS.
**            SYSUT1 BLOCKSIZE CHANGED FROM 1050 TO 7245 FOR FASTER
**            RESPONSE TIME, HOPEFULLY.
**            TASKLIB/LIB KEYWORD ADDED FOR USE OF ALTERNATE VERSIONS
**            OF FORTRAN H EXTENDED COMPILER.  TASKLIB CONCATENATION
**            NOT SUPPORTED ALTHOUGH THERE ARE TWO EMPTY SLOTS IN
**            DDNAME LIST WHICH ARE NOT USED BY THE COMPILER.
**            MEMBER KEYWORD ALSO AVAILABLE IF MEMBER NAME NOT IFEAAB.
**            MESSAGES FROM FORTX TO THE TSO USER NOW APPEAR IN A
**            SEPARATE CSECT CALLED MESSAGE.  DYNAMICALLY MODIFIED
**            MESSAGES MUST BE BUILT IN MSGBUFF BEFORE CALLS TO
**            PUTLINE OR OUTMSG.
**
**    1.3  -  FIXES APPLIED TO MAKE VERSION 1.2 REALLY RE-ENTRANT.
**            DAIR ERROR MESSAGES MOVED FROM DSECT TO INSIDE DAIRERR
**              SUBSECTION.  REMEMBER: ANY CHANGE DONE TO DSECT
**              IN FORTX MUST ALSO BE DONE TO FORTXLD2.
**            OPEN AND CLOSE IN MEMTEST SUBSECTION CHANGED TO BE
**              REENTRANT.  DCB HAD TO BE COPIED TO DSECT BEFORE IT
**              COULD BE USED.
**            USE OF ATTRIBUTE CONTROL BLOCK CAUSES DCB OF EXISTING
**              DATA SETS TO BE CHANGED IF NON-ZERO VALUES ARE SPECI-
**              FIED.  LOGIC CHANGED TO HAVE DAIBLKSI=0 UNLESS DATA
**              SET TO BE ALLOCATED IS 'NEW' IN WHICH CASE A DEFAULT
**              VALUE WILL BE PROVIDED.
**
**
**
** EXTERNAL ROUTINES CALLED EITHER BY A STANDARD IBM MACRO OR BY LINK
**
**     IKJPARS -- PARSE
**     LOCATE -- USED FOR CATALOG SEARCH
**     OBTAIN -- USED TO OBTAIN THE FORMAT 1 DSCB. (THE LOCATE MACRO
**               WILL BE EXECUTED BEFORE OBTAIN.)
**     IKJEFD00 -- DAIR
**     PUTLINE AND TPUT -- USED TO OUTPUT INFO AND ERROR MESSAGES TO
**                         THE TERMINAL
**     TCLEARQ -- USED TO CLEAR INPUT QUEUE FOR TERMINAL BEFORE DOING
**     PUTGET -- USED TO PROMPT FOR DATA SET NAME AND GET THE RESPONSE
**     OPEN AND CLOSE -- USED ONLY FOR FIND MACRO
**     FIND -- USED TO DETERMINE IF A MEMBER NAME IS IN A PDS
**             (FORTRAN DATA SET ONLY)
**     CAMLST -- FOR LOCATE AND OBTAIN
**     STACK -- USED TO DELETE THE INPUT STACK IF AN ERROR IS
**              ENCOUNTERED
**
**
**  NOTE -
**    EVEN THOUGH A DDNAME LIST THAT CONSISTS OF DDNAMES ASSIGNED
**    BY DAIR IS PASSED TO FORTRAN IV (H EXTENDED), PROGRAM COMMENTS
**    REFERENCE THE STANDARD DDNAME, I. E., SYSPRINT, SYSLIN, SYSTERM,
**    SYSIN, SYSUT2, ETC.
**
**
**
**    * * * * *      W   A   R   N   I   N   G      * * * * *
**
**
**    THE SECOND LOAD CHECKS THE VERSION NUMBER AND DATE PASSED BY
**    THE FIRST LOAD.  IF THIS DOES NOT MATCH THE VERSION AND DATE
**    OF THE SECOND LOAD, THE COMMAND IS TERMINATED.
         SPACE 4
FORTX    CSECT
*                                  REGISTER DEFINITIONS
R0       EQU   0                   GENERAL USE
R1       EQU   1                   ARG LIST PTR AND FOR EX OF MVCR1R15
R2       EQU   2                   CONTAINS LENGTH OF PARAMTER STRING
R3       EQU   3                   USUALLY POINTS TO END OF PARM STRING
R4       EQU   4                   WORK REGISTER
R5       EQU   5                   WORK REGISTER
R6       EQU   6                   ADDR OF PDE FOR FORT DSNAME LISTS
R7       EQU   7                   USUALLY BASE FOR DIAR PARM BLOCK
R8       EQU   8                   BASE FOR THE PARSE DESCRIPTOR LIST
R9       EQU   9                   BASE REGISTER FOR FIRST 4K OF CODE
R10      EQU   10                  BASE REGISTER FOR SECOND 4K OF CODE
R11      EQU   11                  BASE REGISTER FOR THIRD 4K OF CODE
R12      EQU   12                  BASE REGISTER FOR FOURTH 4K OF CODE
R13      EQU   13                  SAVE AREA POINTER
R14      EQU   14                  USUALLY A RETURN REGISTER
R15      EQU   15                  CALL ADDR REG OR FOR EX OF MVCR1R15
*
**                                 FLAGS EQUATES --
SFLG     EQU   B'10000000'         SYSOUT FLAG
NOTSFLG  EQU   B'01111111'
PFLG     EQU   B'01000000'         SYSPRINT FLAG
NOTPFLG  EQU   B'10111111'
QFLG     EQU   B'00100000'         QUOTE FLAG
NOTQFLG  EQU   B'11011111'
DFLG     EQU   B'00010000'         DSN DISP FLAG
NOTDFLG  EQU   B'11101111'
TASKFLG  EQU   B'00001000'         TASKLIB WAS SPECIFIED
**
**
**
START    SAVE  (14,12),,FORTX--V1.3-&DATE
         USING START,R15
         LM    R9,R12,BASEADDR
         DROP  R15
         USING START,R9,R10,R11,R12
         B     BEGIN
BASEADDR DC    A(START)
         DC    A(START+X'1000')
         DC    A(START+X'2000')
         DC    A(START+X'3000')
SCNDLOAD DC    CL8'FORTXLD2'       DEFINE 2ND LOAD MODULE NAME FOR XCTL
THISVRSN DC    CL12'V1.3-&DATE'    DEFINE THIS VERSION FOR 2ND LOAD CHK
BEGIN    LR    R7,R1               SAVE PTR TO CPPL
         LA    R0,RENTLEN
         GETMAIN R,LV=(0)
         ST    R1,8(R13)
         ST    R13,4(R1)
         LR    R13,R1
         USING SAVE,R13
         ST    R1,MAINADDR         SAVE ADDRESS OF SUBPOOL AREA
         ST    R0,MAINLNTH         SAVE LENGTH OF SUBPOOL AREA
         MVC   FORTXID(12),THISVRSN  SET VERSION NMBR FOR 2ND LOAD CHK
**
** SET UP PARSE PARM LIST (PPL)
**
         USING CPPL,R7             BASE FOR COMMAND PROCESSOR PARM
*                                    LIST (CPPL)
         LA    R8,PARSEPL          PARSE PARM LIST
         USING PPL,R8              BASE FOR PARSE PARM LIST
         MVC   PPLUPT,CPPLUPT      USER'S PROFILE TABLE
         MVC   PPLECT,CPPLECT      ENVIRONMENT CONTROL TABLE
         LA    R2,ECB
         ST    R2,PPLECB           EVENT CONTROL BLOCK
         LA    R2,ANSWER
         ST    R2,PPLANS           ANSWER
         MVC   PPLCBUF,CPPLCBUF    COMMAND BUFFER
         XC    PPLUWA(4),PPLUWA    USER WORK AREA ADDR
         MVC   PPLPCL,=A(PPLPARM)  PARM CONTROL LIST ADDR
**
** INITIALIZE IOPL FOR PUTGET AND STACK MACRO
**
         MVC   IOPLUPT,CPPLUPT
         MVC   IOPLECT,CPPLECT
         LA    R2,ECB
         ST    R2,IOPLECB
** IOPLIOPB WILL BE INITIALIZED BY THE MACRO
**
** SET UP DAIR PARAMETER LIST
**
         LA    R8,DAIRPL           DAIR PARM LIST
         USING DAPL,R8             BASE FOR DAIR PARM LIST
         MVC   DAPLUPT,CPPLUPT
         MVC   DAPLECT,CPPLECT
         LA    R2,ECB
         ST    R2,DAPLECB
         MVC   DAPLPSCB,CPPLPSCB   PROTECTED STEP CONTROL BLOCK
         LA    R2,DAIRPB           LOAD ADDR OF DAIR PARM BLOCK
         ST    R2,DAPLDAPB         STORE ADDR IN DAIR PARM LIST
**
** STORE USERID
**
         L     R15,CPPLPSCB
         SR    R3,R3
         IC    R3,7(R15)           LOAD LENGTH OF ID
         LR    R4,R3
         BCTR  R3,R0
         LA    R1,USERID
         EX    R3,MVCR1R15         MOVE USER ID
         LA    R3,USERID+1(R3)
         MVI   0(R3),C'.'          MOVE . INTO USERID SO THAT -- ID.
         AH    R4,=H'1'            INCREMENT FOR PERIOD
         STH   R4,USERIDL
         DROP  R7,R8
**
** INITIALIZE
**
         MVI   FLAGS,0
**   FLAGS SETTINGS -
**             1... .... - INDICATES SYSOUT OUTPUT (USED BY SECOND
**                         LOAD)
**             .1.. .... - INDICATES SYSPRINT OUTPUT (TESTED BEFORE
**                         TESTING KEYWORDS THAT AFFECT THE SYSPRINT
**                         OUTPUT)
**             ..1. .... - INDICATES DSNAME INPUT IN QUOTES
**             ...1 .... - INDICATES DATA SET IS NEW
**             .... 1... - TASKLIB SPECIFIED
**             .... .XXX - NOT IN USE
**
         XC    SYSLIN(88),SYSLIN
         XC    FHXPARML,FHXPARML
         XC    FHXLISTL,FHXLISTL
         XC    ANSWER1,ANSWER1
         XC    DAIRATCB(64),DAIRATCB
**
** LINK TO PARSE
**
         XC    ECB,ECB
         LA    R1,PARSEPL
         LINK  EP=IKJPARS          LINK TO PARSE
         LTR   R15,R15             TEST FOR NORMAL COMPLETION
         BZ    PARSEOK
PARSERR  DC    0H'0'               PARSE ERROR
         CVD   R15,DTEMP
         UNPK  DTEMP(3),DTEMP+6(2)
         OI    DTEMP+2,X'F0'
         L     R0,ADMSG01
         MVC   MSGOUT+MSG01L(2),DTEMP+1
         MVC   MSGOUT(MSG01L),0(R0)
         LA    R0,MSGOUT
         BAL   R14,PUTLINE
         B     RETURN
PARSEOK  EQU   *
***********************************************************************
**
**   ALLOCATE SYSIN BASED ON THE FIRST AND ONLY POSITIONAL PARAMETER
**
**
         MVC   FHXDDNAM,=H'88'     SET LENGTH OF DDNAME LIST
         MVC   PGPB(PGPBL),PGPBX   COPY PUTGET PARMLIST FOR LATER USE
         XC    DAIBLKSI,DAIBLKSI   ZERO THE ATRCB BLOCK SIZE
         MVC   OLD(8),=X'0000000100000000'
         L     R8,ANSWER
         USING PDL,R8              BASE FOR PARSE DESCRIPTOR LIST
         LA    R2,ANSWER1          FIX UP PARSE PARM LIST FOR PARSING
         ST    R2,PARSEPL+16       NEW DSNAME
         LA    R2,TBUFL
         ST    R2,PARSEPL+20
         MVC   PARSEPL+12,=A(DSNPPL)
         LA    R6,FHXDSNA
FHXLOOP  DC    0H'0'
         NI    FLAGS,NOTQFLG       INIT QUOTE AND DSN DISP BITS
         NI    FLAGS,NOTDFLG
         MVC   FHXMEM,BLANK
         TM    14(R6),X'80'        TEST FOR MEMBER
         BZ    FHXTESTQ
         LH    R2,12(R6)           LOAD LENGTH OF MEM
         BCTR  R2,R0
         LA    R1,FHXMEM
         L     R15,8(R6)
         EX    R2,MVCR1R15
FHXTESTQ DC    0H'0'
         TM    6(R6),X'40'         TEST FOR QUOTES
         BZ    FHXTEST1
         OI    FLAGS,QFLG          FORT DSNAME INPUT IN QOUTES
FHXTEST1 L     R2,0(R6)            LOAD ADDR OF DSN
         LTR   R2,R2               TEST FOR MEMBER ONLY
         BNZ   FHXTEST2
         LA    R3,FHXDSN           LOAD ADDR OF FORT DSNAME
         MVC   0(4,R3),=C'FORT'    DSN=ID.FORT
         LH    R4,=H'4'            LENGTH OF 'FORT'
         STH   R4,FHXDSNL
         B     FHXTSTAS            BRANCH TO TEST DSN IN CATALOG
FHXTEST2 LH    R2,4(R6)            LOAD LENGTH OF DSN
         STH   R2,FHXDSNL          STORE LENGTH OF DSN
         BCTR  R2,R0
         LA    R1,FHXDSN
         L     R15,0(R6)
         EX    R2,MVCR1R15
FHXTSTAS DC    0H'0'
         LA    R1,FHXDSNL          CHECK CATALOG FOR DSN WITHOUT QUAL.
         BAL   R14,SRCHCAT
         LTR   R15,R15
         BZ    FHXTSTOB            DSNAME IN CATALOG -- GO OBTAIN
         TM    FLAGS,QFLG          TEST FOR QUOTES
         BO    FHXPUTMS
         LH    R2,FHXDSNL
         LA    R3,FHXDSN(R2)
         MVC   0(5,R3),=C'.FORT'   APPEND .FORT TO DSN
         AH    R2,=H'5'
         STH   R2,FHXDSNL
         LA    R1,FHXDSNL
         BAL   R14,SRCHCAT
         LTR   R15,R15
         BZ    FHXTSTOB            BRANCH TO BRANCH TO OBTAIN
         LH    R2,FHXDSNL
         SH    R2,=H'5'            SUBTRACT LENGTH OF .FORT FROM DSN
         STH   R2,FHXDSNL          LENGTH
FHXPUTMS DC    0H'0'
         L     R0,ADMSG02          FORTRAN DSN IS NOT IN CATALOG
         LA    R1,FHXDSNL
         BAL   R14,OUTMSG          BRANCH TO OUTPUT MESSAGE
FHXPUT   DC    0H'0'
         L     R2,ADMSG03S
         ST    R2,OLD+4
         TCLEARQ INPUT
         XC    ECB,ECB
*        PUTGET PARM=PGPB,MF=(E,IOPL)
         PUTGET PARM=PGPB,OUTPUT=(OLD,SINGLE,PROMPT),                  X
               TERMPUT=(EDIT,WAIT,NOHOLD,NOBREAK),                     X
               TERMGET=(EDIT,WAIT),MF=(E,IOPL)
         CH    R15,=H'8'           TEST FOR ERROR
         BH    PGERROR
         L     R15,PGPB+12         LOAD ADDR OF INPUT LINE
         LA    R1,TBUFL
         LH    R2,0(R15)           LOAD LENGTH OF INPUT LINE
         CH    R2,=H'64'
         BNH   FHXA
         LH    R2,=H'64'
FHXA     BCTR  R2,R0
         EX    R2,MVCR1R15         MOVE INPUT LINE TO TBUF
         LH    R0,0(R15)           LOAD LENGTH OF INPUT LINE
         O     R0,=X'01000000' SP=1
         LR    R1,R15
         FREEMAIN R,LV=(0),A=(1)
         LH    R0,TBUFL
         CH    R0,=H'4'            TEST FOR NULL LINE
         BNH   FHXENDLP
         LR    R1,R6
         BAL   R14,PARSEDSN        GO PARSE THE FORTRAN DSNAME
         B     FHXLOOP
FHXTSTOB LA    R1,FHXDSNL          DATA SET NAME IS IN CATALOG
         BAL   R14,OBTAIN          BRANCH TO OBTAIN
         CH    R15,=H'4'
         BH    FHXPUT              RC GREATER THAN 4
         BL    FHXPDS              BRANCH TO TEST PDS MEMBER
         CLI   FHXMEM,C' '         DATA SET IS PS - TEST FOR MEMBER
*                                     NAME INPUT
         BE    FHXALLOC            BRANCH TO ALLOCATE
         LH    R2,FHXDSNL          PUT (MEMBER NAME) IN FHXDSN
         LA    R3,FHXDSN(R2)
         MVI   0(R3),C'('
         MVC   1(8,R3),FHXMEM
         MVI   9(R3),C')'
         AH    R2,=H'10'
         STH   R2,FHXDSNL
         L     R0,ADMSG10
         LA    R1,FHXDSNL
         BAL   R14,OUTMSG          OUTPUT 'NOT PARTITIONED'
         B     FHXPUT
FHXPDS   CLI   FHXMEM,C' '         TEST FOR MEMBER NAME INPUT
         BNE   FHXTSTME
         MVC   FHXMEM,=C'TEMPNAME' MEMBER NAME BLANK - ASSUME TEMPNAME
         L     R0,ADMSG11
         LA    R1,FHXDSNL
         BAL   R14,OUTMSG
FHXTSTME LA    R0,FHXMEM           TEST FOR MEMBER NAME IN DATA SET
         LA    R1,FHXDSNL
         BAL   R14,MEMTEST
         CH    R15,=H'4'
         BH    FHXPUT              ERROR ENCOUNTERED
         BL    FHXALLOC            GO ALLOCATE DATA SET
         LH    R2,FHXDSNL
         LA    R3,FHXDSN(R2)
         MVI   0(R3),C'('          PUT (MEMBER NAME) IN DSN
         MVC   1(8,R3),FHXMEM
         MVI   9(R3),C')'
         AH    R2,=H'10'
         STH   R2,FHXDSNL
         L     R0,ADMSG15
         LA    R1,FHXDSNL
         BAL   R14,OUTMSG          SEND 'DOES NOT CONTAIN MEMBER NAME'
         B     FHXPUT
FHXALLOC EQU   *                   SET UP DAIR ATTR CONTROL BLOCK
         MVC   DAILRECL,=H'80'     SET LRECL = 80
         OI    DAIBUFNO,1          SET BUFNO = 1
         BAL   R14,BUILDACB
         LA    R7,DAIRPB           ALLOCATE FORT DATA SET
         USING DAPB08,R7
         MVC   DA08CD,=X'0008'
         XC    DA08FLG(6),DA08FLG  ZERO FLAG, DARC, CTRC
         LA    R3,FHXDSNL
         ST    R3,DA08PDSN         STORE ADDR OF FORT DSN
         MVI   DA08DDN,C' '
         MVC   DA08DDN+1(23),DA08DDN BLANK DDN, UNIT, AND SERIAL NO.
         XC    DA08BLK(16),DA08BLK ZERO BLK,PQTY,SQTY, AND DQTY
         MVC   DA08MNM,FHXMEM      MOVE IN MEMBER NAME
         MVC   DA08PSWD,BLANK      PASSWORD
         MVI   DA08DSP1,B'00001000' SHR
         MVI   DA08DPS2,B'00001000' KEEP
         MVI   DA08DPS3,B'00001000' KEEP
         MVI   DA08CTL,2           ATTR CONTROL BLOCK SUPPLIED
         TM    FLAGS,QFLG          TEST FOR QUOTES
         BO    *+8
         OI    DA08CTL,B'00100010' PREFIX USER ID AND SHOW DAIR ATRCB
         XC    DA08CTL+1(4),DA08CTL+1 ZERO RESERVED AND DSO
         MVC   DA08ALN,=C'ATRFORTX'  MOVE IN ATRCB NAME
         XC    ECB,ECB
         LA    R1,DAIRPL
         LINK  EP=IKJEFD00         LINK TO DAIR
         DC    X'07000700'
         LTR   R15,R15             TEST FOR ERRORS
         BZ    FHXX2
         ST    R15,SAVER15
         L     R0,ADMSG12          OUTPUT 'ALLOCATION ERROR'
         LA    R1,FHXDSNL
         BAL   R14,OUTMSG
         L     R15,SAVER15
         L     R1,DA08DARC
         BAL   R14,DAIRERR
         B     FHXPUT
FHXX2    DC    0H'0'
         LH    R2,FHXLISTL         LOAD CNT OF DSNAMES TO BE COMPILED
         LTR   R2,R2
         BNZ   FHXX21
         MVC   SYSIN,DA08DDN       PUT THE FIRST DDNAME IN LIST
         MVC   SAVEDSN(46),FHXDSNL SAVE DSN FOR OBJ AND PRINT
FHXX21   DC    0H'0'
         LA    R3,1(R2)
         STH   R3,FHXLISTL
         SLL   R2,3
         LA    R3,FHXLIST(R2)
         MVC   0(8,R3),DA08DDN     SAVE DDNAME IN LIST
         CLI   MSGKEYWD+1,1
         BNE   FHXENDLP
         CLI   FHXMEM,C' '         TEST FOR MEMBER NAME
         BE    FHXX21A
         LH    R2,FHXDSNL
         LA    R3,FHXDSN(R2)
         MVI   0(R3),C'('
         MVC   1(8,R3),FHXMEM
         MVI   9(R3),C')'
         AH    R2,=H'10'
         STH   R2,FHXDSNL
FHXX21A  L     R0,ADMSG16
         LA    R1,FHXDSNL
         BAL   R14,OUTMSG          OUTPUT 'DATA SET --- ALLOC. TO SYSIN
FHXENDLP CLI   24(R6),X'FF'        TEST FOR END OF LIST
         BE    FHXX2B
         LH    R2,FHXLISTL
         CH    R2,=H'10'
         BE    FHXX2A
         L     R6,24(R6)
         B     FHXLOOP
FHXX2A   L     R0,ADMSG29
         BAL   R14,PUTLINE
         L     R2,ADMSG30
         ST    R2,OLD+4
         TCLEARQ INPUT
         XC    ECB,ECB
*        PUTGET PARM=PGPB,MF=(E,IOPL) ENTER NULL LINE TO CONTINUE
         PUTGET PARM=PGPB,OUTPUT=(OLD,SINGLE,PROMPT),                  X
               TERMPUT=(EDIT,WAIT,NOHOLD,NOBREAK),                     X
               TERMGET=(EDIT,WAIT),MF=(E,IOPL)
         CH    R15,=H'8'
         BH    PGERROR
         L     R1,PGPB+12          LOAD ADDR OF INPUT LINE
         LH    R0,0(R1)            LOAD LENGTH OF INPUT LINE
         CH    R0,=H'4'            TEST FOR NULL LINE
         BH    RETURN              DONT WANT TO CONTINUE
         O     R0,=X'01000000' SP=1
         FREEMAIN R,LV=(0),A=(1)
         B     FHXX2C
FHXX2B   LH    R2,FHXLISTL
         LTR   R2,R2
         BNZ   FHXX2C
         L     R0,ADMSG33
         BAL   R14,PUTLINE
         B     RETURN
FHXX2C   DC    0H'0'
         LH    R2,FHXLISTL         LOAD # OF DATA SETS TO BE COMPILED
         CH    R2,=H'1'
         BE    ENDFHX
         LA    R7,DAIRPB           CONCATENATE DSN'S FOR FORT
         USING DAPB0C,R7
         MVC   DA0CCD,=X'000C'
         XC    DA0CFLG(10),DA0CFLG
         STH   R2,DA0CNUMB
         SLL   R2,3
         BCTR  R2,R0
         LA    R1,DA0CDDN
         LA    R15,FHXLIST
         EX    R2,MVCR1R15
         XC    ECB,ECB
         LA    R1,DAIRPL
         LINK  EP=IKJEFD00         GO CONCATENATE
         LTR   R15,R15
         BZ    ENDFHX
         ST    R15,SAVER15
         L     R0,ADMSG31
         BAL   R14,PUTLINE
         L     R1,DA0CDARC
         SRL   R1,16
         SLL   R1,16
         L     R15,SAVER15
         BAL   R14,DAIRERR
         B     RETURN
         DROP  R7
ENDFHX   EQU   *
***********************************************************************
**
**   ALLOCATE SYSLIN BASED ON THE OBJECT OR LOAD KEYWORD
**
**
*TBD     MVI   DAIRECFM,X'90'      SET RECFM TO FIXED BLOCKED
         MVC   DAILRECL,=H'80'     SET LRECL = 80
         XC    DAIBLKSI,DAIBLKSI   ZERO THE ATRCB BLOCK SIZE
         NI    FLAGS,NOTQFLG       INIT FLAGS
         NI    FLAGS,NOTDFLG
         CLI   OBJKEYWD+1,3
         BL    OBJX3               KEYWORD IS OBJECT OR LOAD
         LH    R2,FHXPARML         KEYWORD IS NOOBJECT OR NOLOAD --
         LTR   R2,R2                  LOAD LENGTH
         BNZ   OBJX1
         LA    R3,FHXPARM
         B     OBJX2
OBJX1    LA    R3,FHXPARM(R2)
         MVI   0(R3),C','
         AH    R2,=H'1'
         AH    R3,=H'1'
OBJX2    MVC   0(6,R3),=C'NOLOAD'
         AH    R2,=H'6'
         STH   R2,FHXPARML
         CLI   MSGKEYWD+1,1
         BNE   ENDOBJCT
         L     R0,ADMSG26
         BAL   R14,PUTLINE
         B     ENDOBJCT            BRANCH TO CHECK 'PRINT' KEYWORD
**
** 'LOAD' OR 'OBJ' KEYWORD IS SPECIFIED
**
OBJX3    NI    FLAGS,NOTQFLG       SET QUOTE AND NEW DS FLAGS
         NI    FLAGS,NOTDFLG
         MVC   OBJMEM,BLANK
         TM    OBJDSNA+14,B'10000000' TEST FOR MEMBER NAME INPUT
         BZ    OBJX4               MEMBER NOT INPUT
         L     R15,OBJDSNA+8       ADDR OF MEMBER NAME
         LH    R3,OBJDSNA+12       LOAD LENGTH OF MEMBER NAME
         BCTR  R3,R0
         LA    R1,OBJMEM
         EX    R3,MVCR1R15
OBJX4    L     R15,OBJDSNA         LOAD ADDR OF DSN
         LTR   R15,R15             TEST FOR ZERO ADDR
         BNZ   OBJX4A              OBJECT DSNAME INPUT
         CLI   OBJMEM,C' '         TEST FOR MEMBER ONLY INPUT
         BE    OBJFHXDS            MEMBER NOT INPUT EITHER ---
*                                     GO TO USE FORTRAN DSNAME
OBJDSOBJ MVC   OBJDSN(4),=C'OBJ '  FIX UP DSNAME WITH QUALIFIER ONLY
         LH    R2,=H'3'
         STH   R2,OBJDSNL
         B     OBJSRCAT
OBJX4A   LH    R3,OBJDSNA+4        LOAD LENGTH OF DSN
         STH   R3,OBJDSNL
         BCTR  R3,R0
         LA    R1,OBJDSN
         EX    R3,MVCR1R15
         TM    OBJDSNA+6,B'01000000' TEST FOR QUOTES
         BZ    OBJX5
         OI    FLAGS,QFLG          SET FLAG TO INDICATE QUOTES
         B     OBJSRCAT            GO CHECK CATALOG
OBJX5    LH    R2,OBJDSNL          LOAD LENGTH OF DSNAME
         LA    R3,OBJDSN-4(R2)     POINT AT (.) IF LAST QUAL IS 3 CHAR.
         CLC   0(4,R3),=C'.OBJ'
         BE    OBJSRCAT            LAST QUAL. IS OBJ
         CH    R2,=H'3'            IF OBJ DSNAME IS OBJ ONLY,
         BH    OBJX5A              DONT QUALIFY
         CLC   OBJDSN(3),=C'OBJ'   IS DATA SET NAME 'OBJ' ONLY?
         BE    OBJSRCAT            YES, GO SEARCH CATALOG
OBJX5A   DC    0H'0'
         LA    R3,OBJDSN(R2)
         MVC   0(5,R3),=C'.OBJ '   APPEND .OBJ QUALIFIER
         AH    R2,=H'4'
         STH   R2,OBJDSNL
OBJSRCAT LA    R1,OBJDSNL
         BAL   R14,SRCHCAT
         LTR   R15,R15             TEST FOR DATA SET IN CATALOG
         BZ    OBJOBT
         OI    FLAGS,DFLG          INDICATES NEW DATA SET
         B     OBJALLOC            BRANCH TO ALLOCATE NEW DATA SET
OBJFHXDS DC    0H'0'
         TM    FHXDSNA+6,X'80'     TEST FOR FORT DSN INPUT
         BZ    OBJOBJDS            FORT DSN NOT INPUT -- USE ID.OBJ
         TM    FHXDSNA+6,X'40'     TEST FOR FORT IN QOUTES
         BZ    OBJX6A              NO QUOTES -- USE FORT DSN
         L     R0,ADMSG25          FORT DATA SET IN QUOTES - OUTPUT MSG
         BAL   R14,PUTLINE
         B     OBJPUT              GO PROMPT FOR DATA SET NAME
OBJX6A   MVC   OBJDSNL(46),SAVEDSN MOVE LENGTH AND DSN FOR FORT TO OBJ
         LH    R2,OBJDSNL
         BCTR  R2,0                SUBTRACT ONE FOR .FORT TO .OBJ
         STH   R2,OBJDSNL          AND SAVE CORRECT LENGTH
         LA    R3,OBJDSN-4(R2)     POINT TO QUALIFIER
         CLC   0(5,R3),=C'.FORT'   TEST FOR FORT QUAL.
         BE    OBJX6B
         CH    R2,=H'3'
         BH    OBJX6A1
         CLC   OBJDSN(4),=C'FORT'
         BE    OBJDSOBJ            GO USE OBJ AS DSNAME
OBJX6A1  DC    0H'0'
         L     R0,ADMSG28          PROMPT FOR OBJ DSNAME
         BAL   R14,PUTLINE
         B     OBJPUT
OBJX6B   DC    0H'0'
         MVC   0(5,R3),=C'.OBJ '   APPEND .OBJ
         NI    FLAGS,NOTQFLG       INIT QUOTE AND DISP BIT
         NI    FLAGS,NOTDFLG
         LA    R1,OBJDSNL
         BAL   R14,SRCHCAT         BRANCH TO SEARCH CATALOG
         LTR   R15,R15             TEST FOR OBJDSN IN CATALOG
         BZ    OBJX7
         MVC   OBJMEM,BLANK OUT MEMBER NAME TO ALLOC PS DATA SET
         OI    FLAGS,DFLG          INDICATE NEW DS
         B     OBJALLOC            BRANCH TO ALLOC DATA SET
OBJX7    MVC   OBJMEM,FHXMEM       MOVE MEMBER NAME
         MVI   OBJDSNA+14,0        SET MEMBER NAME FLAG TO NO MEMBER
*                                     NAME
OBJOBT   LA    R1,OBJDSNL
         BAL   R14,OBTAIN          BRANCH TO OBTAIN
         LTR   R15,R15
         BZ    OBJPDS              PDS
         CH    R15,=H'4'
         BNE   OBJPUT              ERROR ENCOUNTER -- BRANCH TO
*                                     'ENTER INPUT'
         TM    OBJDSNA+14,B'10000000' TEST FOR MEMBER NAME INPUT
         BO    OBJX701
         MVC   OBJMEM,BLANK
         B     OBJX8
OBJX701  LH    R2,OBJDSNL          PUT (MEMNAME) IN DSN BUFFER
         LA    R3,OBJDSN(R2)
         MVI   0(R3),C'('
         MVC   1(8,R3),OBJMEM
         MVI   9(R3),C')'
         AH    R2,=H'10'
         STH   R2,OBJDSNL
         L     R0,ADMSG10
         LA    R1,OBJDSNL
         BAL   R14,OUTMSG
         B     OBJPUT
OBJPDS   CLI   OBJMEM,C' '         TEST FOR BLANK MEMBER NAME
         BNE   OBJX8               MEMBER INPUT
         L     R0,ADMSG11
         LA    R1,OBJDSNL
         BAL   R14,OUTMSG  OUTPUT 'DS -- IS PART. TEMPNAME ASSUMED'
         MVC   OBJMEM,=C'TEMPNAME'
OBJX8    NI    FLAGS,NOTDFLG       INDICATE OLD DATA SET
OBJALLOC EQU   *                   ALLOC OBJ DATA SET
         TM    FLAGS,DFLG          TEST FOR NEW DATA SET
         BZ    OBJX8A              DATA SET IS NOT NEW
         MVC   DAIBLKSI,=H'800'    SET BLOCKSIZE TO 800
         MVI   DAIRECFM,X'90'      SET RECFM TO FIXED BLOCKED
OBJX8A   BAL   R14,BUILDACB        GO BUILD ATTR CONTROL BLOCK
         LA    R7,DAIRPB
         USING DAPB08,R7
         MVC   DA08CD,=X'0008'
         XC    DA08FLG(6),DA08FLG
         LA    R2,OBJDSNL
         ST    R2,DA08PDSN
         MVI   DA08DDN,C' '
         MVC   DA08DDN+1(23),DA08DDN
         XC    DA08BLK(16),DA08BLK
         L     R4,ADMSG17S
         TM    FLAGS,DFLG          TEST FOR NEW DATA SET
         BZ    OBJX10              DATA SET IS NOT NEW
         MVC   DA08BLK,=F'800'     DEFAULT BLOCKSIZE FOR SYSLIN
*TBD     MVC   DAIBLKSI,=H'800'    SET BLOCKSIZE TO 800
*TBD     MVI   DAIRECFM,X'90'      SET RECFM TO FIXED BLOCKED
         MVI   DA08PQTY+3,X'01'    ONE CYL - PRIMARY
         MVI   DA08SQTY+3,X'01'    ONE CYL - SECONDARY
         CLI   OBJMEM,C' '         TEST FOR MEMBER NAME
         BE    OBJX9
         MVI   DA08DQTY+3,X'01'    ONE DIRECTORY BLK
OBJX9    MVI   DA08DSP1,B'00000100' NEW
         MVI   DA08DPS2,B'00000010' CATLG
         MVI   DA08DPS3,B'00000100' DELETE
         MVI   DA08CTL,B'11000000' CYLINDERS
         L     R4,ADMSG17N         SHOW DISP = NEW IN MESSAGE
         B     OBJX13
OBJX10   CLI   MODKEYWD+1,1        TEST FOR MOD KEYWORD
         BNE   OBJX11
         MVI   DA08DSP1,B'00000010' MOD
         L     R4,ADMSG17M         SHOW DISP = MOD IN MESSAGE
         B     OBJX12
OBJX11   MVI   DA08DSP1,B'00001000' SHR
OBJX12   MVI   DA08DPS2,B'00001000' KEEP
         MVI   DA08DPS3,B'00001000' KEEP
         MVI   DA08CTL,2           TELL DAIR TO USE AN ATTR CNTL BLOCK
OBJX13   MVC   DA08MNM,OBJMEM      MOVE MEMBER
         TM    FLAGS,QFLG          TEST FOR QUOTES
         BO    *+8
         OI    DA08CTL,B'00100010' PREFIX USED ID AND SHOW DAIR ATRCB
         MVC   DA08PSWD,BLANK
         XC    DA08CTL+1(4),DA08CTL
         MVC   DA08ALN,=C'ATRFORTX'  MOVE IN ATRCB NAME
         XC    ECB,ECB
         LA    R1,DAIRPL
         LINK  EP=IKJEFD00         LINK TO DAIR
         LTR   R15,R15
         BNZ   OBJDAER
         MVC   SYSLIN,DA08DDN      STORE DDNAME
         CLI   MSGKEYWD+1,1        TEST FOR OUTPUT OF DSN
         BNE   ENDOBJCT            BRANCH TO PRINT SECTION
         CLI   OBJMEM,C' '
         BE    OBJX14
         LH    R2,OBJDSNL
         LA    R3,OBJDSN(R2)
         MVI   0(R3),C'('
         MVC   1(8,R3),OBJMEM
         MVI   9(R3),C')'
         AH    R2,=H'10'
         STH   R2,OBJDSNL
OBJX14   LR    R0,R4               POINT TO CORRECT MSG17 (SHR,NEW,MOD)
         LA    R1,OBJDSNL
         BAL   R14,OUTMSG
         B     ENDOBJCT
OBJDAER  L     R0,ADMSG12
         LA    R1,OBJDSNL
         ST    R15,SAVER15
         BAL   R14,OUTMSG          OUTPUT 'ALLOC ERROR'
         L     R1,DA08DARC
         L     R15,SAVER15
         BAL   R14,DAIRERR
OBJPUT   DC    0H'0'
         L     R2,ADMSG03O
         ST    R2,OLD+4
         TCLEARQ INPUT
         XC    ECB,ECB
*        PUTGET PARM=PGPB,MF=(E,IOPL) ENTER OBJ DSNAME
         PUTGET PARM=PGPB,OUTPUT=(OLD,SINGLE,PROMPT),                  X
               TERMPUT=(EDIT,WAIT,NOHOLD,NOBREAK),                     X
               TERMGET=(EDIT,WAIT),MF=(E,IOPL)
         CH    R15,=H'8'           TEST FOR ERROR
         BH    PGERROR
         L     R15,PGPB+12         LOAD ADDRESS OF INPUT LINE
         LA    R1,TBUFL
         LH    R2,0(R15)
         CH    R2,=H'64'           COMPARE LENGTH
         BNH   OBJPUT1
         LH    R2,=H'64'
OBJPUT1  BCTR  R2,R0
         EX    R2,MVCR1R15         MOVE INPUT LINE TO TBUF
         LH    R0,0(R15)
         O     R0,=X'01000000' SP=1
         LR    R1,R15
         FREEMAIN R,LV=(0),A=(1)
         LH    R0,TBUFL
         CH    R0,=H'4'            TEST FOR NULL LINE RESPONSE
         BH    OBJX15
         BE    RETURN
OBJOBJDS NI    FLAGS,NOTQFLG       INIT QUOTE AND DSN DISP BITS
         NI    FLAGS,NOTDFLG
         MVC   OBJMEM,BLANK        MEMBER NAME
         MVI   OBJDSNA+14,0        SET MEMBER NAME FLAG
         B     OBJDSOBJ            GO FIX UP DSNAME WITH QUAL.
OBJX15   DC    0H'0'
         LA    R1,OBJDSNA
         BAL   R14,PARSEDSN
         B     OBJX3
         DROP  R7
ENDOBJCT EQU   *
***********************************************************************
**
** IF 'PRINT' IS SPECIFIED -- USE DSNAME INPUT OR GENERATE
** DSNAME FROM DSN.FORT BY REPLACING .FORT WITH .LIST
** IF 'SYSOUT' IS SPECIFIED ALLOC SYSPRINT DATA SET TO SYSOUT=A.
** IF 'NOPRINT' IS SPECIFIED -- ALLOCATE SYSPRINT TO DD DUMMY
** IF PRINT(*) IS SPECIFIED -- ALLOCATE SYSPRINT TO THE TERMINAL.
**
         MVI   DAIRECFM,X'54'      SET RECFM TO VBA
         MVC   DAILRECL,=H'137'    SET LRECL = 137
         XC    DAIBLKSI,DAIBLKSI   ZERO THE ATRCB BLOCK SIZE
         BAL   R14,BUILDACB
         NI    FLAGS,NOTSFLG       INIT SYSOUT, SYSPRINT, AND QUOTE AND
         NI    FLAGS,NOTPFLG       DSN DISP BITS
         NI    FLAGS,NOTQFLG
         NI    FLAGS,NOTDFLG
         CLI   PRNKEYWD+1,3        TEST FOR 'NOPRINT'
         BE    PRINTDUM            BRANCH IF 'NOPRINT' SPECIFIED
         L     R2,PRNTDSNA         CHECK FOR PRINT TO TERMINAL
         CLI   0(R2),C'*'
         BE    PRNT2USR
         CLI   PRNKEYWD+1,1        TEST FOR 'PRINT'
         BE    PRNTDS              'PRINT' SPECIFIED
         MVC   DAIBLKSI,=H'1922'   SET BLOCKSIZE TO 1922
         BAL   R14,BUILDACB        REBUILD ATTR CONTROL BLOCK
         LA    R7,DAIRPB           ALLOCATE SYSPRINT TO SYSOUT
         USING DAPB30,R7
         MVC   DA30CD,=X'0030'
         XC    DA30FLG(10),DA30FLG
         MVI   DA30DDN,C' '
         MVC   DA30DDN+1(23),DA30DDN
         MVC   DA30BLK,=F'1922'    DEFAULT BLOCKSIZE FOR SYSPRINT
         XC    DA30PQTY(8),DA30PQTY
         MVI   DA30PQTY+3,1        ONE CYL PRIMARY
         MVI   DA30SQTY+3,1        ONE CYL SECONDARY
         MVI   DA30PGNM,C' '
         MVC   DA30PGNM+1(11),DA30PGNM
         MVC   DA30OCLS,=C'A '     SYSOUT CLASS=A
         MVI   DA30CTL-1,0
         MVI   DA30CTL,B'11010010' CYL,RLSE AND SHOW ATTR CONTROL BLOCK
         MVC   DA30ALN,=C'ATRFORTX'  MOVE IN ATRCB NAME
         XC    ECB,ECB
         LA    R1,DAIRPL
         LINK  EP=IKJEFD00         LINK TO DAIR
         LTR   R15,R15
         BZ    PRNTX3
         ST    R15,SAVER15
         L     R0,ADMSG18A
         BAL   R14,PUTLINE
         L     R1,DA30DARC
         SRL   R1,16               SHIFT OUT BITS NOT USED
         SLL   R1,16
         L     R15,SAVER15
         BAL   R14,DAIRERR
         B     RETURN
PRNTX3   OI    FLAGS,SFLG          SET FLAG TO FREE DDN WITH SYSOUT=A
         OI    FLAGS,PFLG
**                                 INDICATE SYSPRINT OUTPUT
         MVC   SYSPRINT,DA30DDN    MOVE DDNAME TO IFEAAB LIST
         CLI   MSGKEYWD+1,1
         BNE   ENDPRINT
         L     R0,ADMSG20A
         BAL   R14,PUTLINE
         B     ENDPRINT
         DROP  R7
PRNTDS   MVC   PRNTMEM,BLANK       ALLOC SYSPRINT TO DSN
         TM    PRNTDSNA+14,B'10000000' TEST FOR MEMBER NAME INPUT
         BZ    PRNTTSDS
         LH    R2,PRNTDSNA+12
         BCTR  R2,R0
         LA    R1,PRNTMEM
         L     R15,PRNTDSNA+8
         EX    R2,MVCR1R15
PRNTTSDS L     R2,PRNTDSNA         LOAD ADDR OF PRINT DSNAME
         LTR   R2,R2               TEST FOR PRINT DSNAME INPUT
         BNZ   PRNTX5              PRINT DSNAME INPUT
         CLI   PRNTMEM,C' '        TEST FOR MEMBER INPUT ONLY
         BNE   PRNTLDS             MEMBER NAME IS INPUT - GO FIX UP
*                                      ID.LIST
         TM    FHXDSNA+6,X'80'     TEST FOR FORT DSN INPUT
         BZ    PRNTLDS             FORT DSN NOT INPUT -- USE ID.LIST
         TM    FHXDSNA+6,X'40'     TEST FOR FORT DSN INPUT IN QUOTES
         BZ    PRNTX3A             NO QOUTES -- USE FORT DSN
         L     R0,ADMSG25          FORT DS IN QUOTES -- OUTPUT MSG
         BAL   R14,PUTLINE
         B     PRNTPUT
PRNTX3A  MVC   PRNTDSNL(44),SAVEDSN  MOVE LENGTH AND DSNAME
         LH    R2,PRNTDSNL
         LA    R3,PRNTDSN-5(R2)    POINT TO .FORT
         CLC   0(5,R3),=C'.FORT'   TEST FOR FORT QUAL.
         BE    PRNTX3B
         CH    R2,=H'3'
         BNE   PRNTX3A1
         CLC   PRNTDSN(4),=C'FORT'
         BE    PRNTLDS
PRNTX3A1 L     R0,ADMSG28
         BAL   R14,PUTLINE
         B     PRNTPUT
PRNTX3B  MVC   0(5,R3),=C'.LIST'   REPLACE .FORT WITH .LIST
         STH   R2,PRNTDSNL
PRNTX3C  DC    0H'0'
         MVC   PRNTMEM,BLANK
         MVI   PRNTDSNA+14,0       SET MEMBER FLAG TO NO MEMBER INPUT
         LA    R1,PRNTDSNL
         BAL   R14,SRCHCAT         BRANCH TO TEST CATALOG
         LTR   R15,R15
         BNZ   PRNTX301
         NI    FLAGS,NOTDFLG       INDICATE OLD DATA SET
         MVC   PRNTMEM,FHXMEM
         B     PRNTOBT
PRNTX301 OI    FLAGS,DFLG          INDICATE NEW DATA SET
         MVC   PRNTMEM,BLANK
         B     PRNTALLO
PRNTLDS  MVC   PRNTDSN(4),=C'LIST' MEMBER NAME ONLY SPECIFIED
         LH    R2,=H'4'
         STH   R2,PRNTDSNL
         NI    FLAGS,NOTSFLG       INIT BITS
         NI    FLAGS,NOTPFLG
         NI    FLAGS,NOTQFLG
         NI    FLAGS,NOTDFLG
         B     PRNTCAT
PRNTX5   LH    R2,PRNTDSNA+4       LOAD LENGTH
         STH   R2,PRNTDSNL
         BCTR  R2,R0
         LA    R1,PRNTDSN
         L     R15,PRNTDSNA
         EX    R2,MVCR1R15
         TM    PRNTDSNA+6,B'01000000' TEST FOR QUOTES
         BZ    PRNTLIST
         OI    FLAGS,QFLG          SET BIT TO QUOTES
         B     PRNTCAT             GO SEARCH CATALOG
PRNTLIST LH    R2,PRNTDSNL
         LA    R3,PRNTDSN-5(R2)    POINT TO .LIST
         CLC   0(5,R3),=C'.LIST'
         BE    PRNTCAT
         CH    R2,=H'4'
         BH    PRNTLST1
         CLC   PRNTDSN(4),=C'LIST'
         BE    PRNTCAT
PRNTLST1 DC    0H'0'
         LA    R3,PRNTDSN(R2)
         MVC   0(5,R3),=C'.LIST'   APPEND .LIST
         AH    R2,=H'5'
         STH   R2,PRNTDSNL
PRNTCAT  NI    FLAGS,NOTDFLG       INDICATE OLD DATA SET
         LA    R1,PRNTDSNL
         BAL   R14,SRCHCAT         BRANCH TO SEARCH CATALOG
         LTR   R15,R15
         BZ    PRNTOBT             DATA SET IN CATALOG
         OI    FLAGS,DFLG          INDICATE NEW DATA SET
         B     PRNTALLO
PRNTOBT  LA    R1,PRNTDSNL
         BAL   R14,OBTAIN
         LTR   R15,R15             TEST DATA SET TYPE
         BNZ   PRNTX7
         CLI   PRNTMEM,C' '        TEST FOR MEMBER NAME INPUT -- PDS
         BNE   PRNTALLO
         L     R0,ADMSG11 OUTPUT 'DSN -- IS PART. TEMPNAME FOR MEMBER'
         LA    R1,PRNTDSNL
         BAL   R14,OUTMSG
         MVC   PRNTMEM,=C'TEMPNAME'
         B     PRNTALLO
PRNTX7   CH    R15,=H'4'           TEST FOR PS
         BNE   PRNTPUT
         TM    PRNTDSNA+14,B'10000000' TEST FOR MEMBER NAME INPUT
         BO    PRNTX701
         MVC   PRNTMEM,BLANK
         B     PRNTALLO
PRNTX701 LH    R2,PRNTDSNL
         LA    R3,PRNTDSN(R2)
         MVI   0(R3),C'('          FIX UP DSN WITH MEMBER NAME
         MVC   1(8,R3),PRNTMEM
         MVI   9(R3),C')'
         AH    R2,=H'10'
         STH   R2,PRNTDSNL
         L     R0,ADMSG10
         LA    R1,PRNTDSNL
         BAL   R14,OUTMSG          OUTPUT 'NOT PARTITIONED'
PRNTPUT  DC    0H'0'
         L     R2,ADMSG03P
         TCLEARQ INPUT
         XC    ECB,ECB
         ST    R2,OLD+4
*        PUTGET PARM=PGPB,MF=(E,IOPL) ENTER PRINT DSNAME
         PUTGET PARM=PGPB,OUTPUT=(OLD,SINGLE,PROMPT),                  X
               TERMPUT=(EDIT,WAIT,NOHOLD,NOBREAK),                     X
               TERMGET=(EDIT,WAIT),MF=(E,IOPL)
         CH    R15,=H'8'           TEST FOR ERROR
         BH    PGERROR
         L     R15,PGPB+12         LOAD ADDR OF INPUT LINE
         LA    R1,TBUFL
         LH    R2,0(R15)           LOAD LENGTH OF INPUT LINE
         CH    R2,=H'64'
         BNH   PRNTPUT1
         LH    R2,=H'64'
PRNTPUT1 BCTR  R2,R0
         EX    R2,MVCR1R15         MOVE INPUT LINE TO TBUF
         LH    R0,0(R15)           LOAD LENGTH OF INPUT LINE
         O     R0,=X'01000000'     SP=1
         LR    R1,R15
         FREEMAIN R,LV=(0),A=(1)
         LH    R0,TBUFL
         CH    R0,=H'4'            TEST FOR NULL LINE
         BE    RETURN
         NI    FLAGS,NOTSFLG       INIT BITS
         NI    FLAGS,NOTPFLG
         NI    FLAGS,NOTQFLG
         NI    FLAGS,NOTDFLG
         LA    R1,PRNTDSNA
         BAL   R14,PARSEDSN
         B     PRNTDS
PRINTDUM EQU   *                   ALLOCATE SYSPRINT TO DUMMY
         MVC   DAIBLKSI,=H'1922'   SET BLOCKSIZE TO 1922
         BAL   R14,BUILDACB          REBUILD ATTR CONTROL BLOCK
         LA    R7,DAIRPB
         USING DAPB08,R7
         MVC   DA08CD,=X'0008'
         XC    DA08FLG(10),DA08FLG ALLOC SYSPRINT TO DUMMY
         MVI   DA08DDN,C' '
         MVC   DA08DDN+1(23),DA08DDN
         XC    DA08BLK(16),DA08BLK
         MVI   DA08MNM,C' '
         MVC   DA08MNM+1(15),DA08MNM
         MVI   DA08DSP1,B'00000100' NEW
         XC    DA08DPS2(2),DA08DPS2
         MVI   DA08CTL,B'00000110' DUMMY AND TELL DAIR ABOUT ATRCB
         XC    DA08CTL+1(4),DA08CTL+1
         MVC   DA08ALN,=C'ATRFORTX'  MOVE IN ATRCB NAME
         XC    ECB,ECB
         LA    R1,DAIRPL
         LINK  EP=IKJEFD00         LINK TO DAIR
         MVC   SYSPRINT,DA08DDN    STORE DDNAME
         L     R0,ADMSG19A
         BAL   R14,PUTLINE
         LTR   R15,R15
         BZ    ENDPRINT
         ST    R15,SAVER15
         L     R0,ADMSG12
         LA    R1,PRNTDSNL
         BAL   R14,OUTMSG          OUTPUT 'ALLOCATION ERROR'
         L     R1,DA08DARC
         L     R15,SAVER15
         BAL   R14,DAIRERR         OUTPUT ALLOCATION ERROR
         B     PRNTPUT
PRNT2USR EQU   *                   ALLOCATE SYSPRINT TO TERMINAL
         MVC   DAIBLKSI,=H'1922'   SET BLOCKSIZE TO 1922
         BAL   R14,BUILDACB          REBUILD ATTR CONTROL BLOCK
         LA    R6,DAIRPB
         USING DAPB1C,R6
         MVC   DA1CCD,=X'001C'
         XC    DA1CFLG(5),DA1CFLG
         MVC   DA1CDDN,BLANK
         MVI   DA1CCTL,2           TELL DAIR ABOUT ATTR CONTROL BLOCK
         MVC   DA1CALN,=C'ATRFORTX'  MOVE IN ATRCB NAME
         XC    ECB,ECB
         LA    R1,DAIRPL
         LINK  EP=IKJEFD00         LINK TO DAIR
         LTR   R15,R15
         BZ    SYSPRTOK
         ST    R15,SAVER15
         L     R0,ADMSG22
         BAL   R14,PUTLINE
         L     R1,DA1CDARC
         SRL   R1,16
         SLL   R1,16
         L     R15,SAVER15
         BAL   R14,DAIRERR
         B     RETURN
SYSPRTOK MVC   SYSPRINT,DA1CDDN
         L     R0,ADMSG24A
         BAL   R14,PUTLINE
         B     ENDPRINT
         DROP  R6
PRNTALLO EQU   *                   ALLOCATE SYSPRINT TO A DATA SET
         TM    FLAGS,DFLG          TEST FOR OLD DATA SET
         BZ    PRNTX8              DATA SET IS NOT NEW
         MVC   DA08BLK,=F'1922'    DATA SET IS NEW
PRNTX8   BAL   R14,BUILDACB        REBUILD ATTR CONTROL BLOCK
         LA    R7,DAIRPB
         USING DAPB08,R7
         MVC   DA08CD,=X'0008'
         XC    DA08FLG(6),DA08FLG
         LA    R2,PRNTDSNL
         ST    R2,DA08PDSN
         MVI   DA08DDN,C' '
         MVC   DA08DDN+1(23),DA08DDN
         TM    FLAGS,DFLG          TEST FOR OLD DATA SET
         BZ    PRNTX10A            DATA SET IS NOT NEW
         MVC   DA08BLK,=F'1922'    DATA SET IS NEW
         XC    DA08PQTY(12),DA08PQTY
         MVI   DA08PQTY+3,1        ONE CYL PRIMARY SPACE
         MVI   DA08SQTY+3,1        ONE CYL SECONDARY
         CLI   PRNTMEM,C' '        TEST FOR MEMBER NAME
         BE    PRNTX10             NO MEMBER NAME
         MVI   DA08DQTY+3,1        ONE DIRECTORY BLOCK
PRNTX10  MVI   DA08DSP1,B'00000100' NEW
         MVI   DA08DPS2,B'00000010' CATLG
         MVI   DA08DPS3,B'00000100' DELETE
         MVI   DA08CTL,B'11000010' CYL AND TELL DAIR ABOUT ATRCB
         B     PRNTX12
PRNTX10A CLI   MODKEYWD+1,1        TEST FOR MOD KEYWORD
         BNE   PRNTX10B
         MVI   DA08DSP1,B'00000010' MOD
         B     PRNTX11
PRNTX10B MVI   DA08DSP1,B'00001000' SHR
PRNTX11  XC    DA08BLK(16),DA08BLK OLD DATA SET
         MVI   DA08DPS2,B'00001000' KEEP
         MVI   DA08DPS3,B'00001000' KEEP
         MVI   DA08CTL,2           TELL DAIR TO USE AN ATTR CNTL BLOCK
PRNTX12  MVC   DA08MNM,PRNTMEM
         MVC   DA08PSWD,BLANK
         TM    FLAGS,QFLG          TEST FOR QUOTES
         BO    *+8
         OI    DA08CTL,B'00100010' PREFIX USER ID AND SHOW DAIR ATRCB
         XC    DA08CTL+1(4),DA08CTL+1
         MVC   DA08ALN,=C'ATRFORTX'  MOVE IN ATRCB NAME
         XC    ECB,ECB
         LA    R1,DAIRPL
         LINK  EP=IKJEFD00         LINK TO DAIR
         LTR   R15,R15             TEST FOR ERRORS
         BZ    PRNTX13             NO ERRORS
         ST    R15,SAVER15
         L     R0,ADMSG12
         LA    R1,PRNTDSNL
         BAL   R14,OUTMSG          OUTPUT 'ALLOCATION ERROR'
         L     R1,DA08DARC
         L     R15,SAVER15
         BAL   R14,DAIRERR         OUTPUT ALLOCATION ERROR
         B     PRNTPUT
PRNTX13  MVC   SYSPRINT,DA08DDN    STORE DDNAME
         OI    FLAGS,PFLG          INDICATE SYSPRINT OUTPUT
         CLI   MSGKEYWD+1,1
         BNE   ENDPRINT
         CLI   PRNTMEM,C' '        TEST FOR MEMBER NAME
         BE    PRNTX14             NO MEMBER NAME
         LH    R2,PRNTDSNL         PUT MEMBER NAME IN DSN
         LA    R3,PRNTDSN(R2)
         MVI   0(R3),C'('
         MVC   1(8,R3),PRNTMEM
         MVI   9(R3),C')'
         AH    R2,=H'10'
         STH   R2,PRNTDSNL
PRNTX14  L     R0,ADMSG21A
         LA    R1,PRNTDSNL
         BAL   R14,OUTMSG          OUTUT 'DS -- ALLOCATED TO SYSPRINT'
         DROP  R7
ENDPRINT EQU   *
***********************************************************************
**
** PROCESS 'TERM' OPTION, THEN ALLOCATE SYSTERM BASED ON THE FOLLOWING:
** IF 'TERM' IS SPECIFIED -- USE DSNAME INPUT AND GENERATE DSNAME
** FROM DSN.FORT BY REPLACING .FORT WITH .TERM IF NEEDED.
** IF 'TERMOUT' IS SPECIFIED ALLOC SYSTERM DATA SET TO SYSOUT=A
** IF 'NOTERM' IS SPECIFIED -- FORCE SYSTERM TO DD DUMMY
** SYSTERM WILL BE ALLOCATED TO THE TERMINAL IF TERMINAL(*) SPECIFIED
** OR ALLOCATED TO TERMINAL IF TERM WITHOUT (...) SPECIFIED (DEFAULT).
**
         MVI   DAIRECFM,X'44'      SET RECFM TO VA
         MVC   DAILRECL,=H'124'    SET LRECL = 124
         XC    DAIBLKSI,DAIBLKSI   ZERO THE ATRCB BLOCK SIZE
         BAL   R14,BUILDACB
         NI    FLAGS,NOTSFLG       INIT SYSOUT, SYSTERM, AND QUOTE AND
         NI    FLAGS,NOTPFLG       DSN DISP BITS
         NI    FLAGS,NOTQFLG
         NI    FLAGS,NOTDFLG
         LH    R2,FHXPARML         LOAD LENGTH OF PARM
         LA    R3,FHXPARM(R2)
         CLI   TRMKEYWD+1,4        TEST FOR 'NOTERM' OR 'NOTERMINAL'
         BNL   NOTERMON            BRANCH IF TRUE
         LTR   R2,R2
         BZ    TERMX1
         MVI   0(R3),C','
         AH    R2,=H'1'
         AH    R3,=H'1'
TERMX1   MVC   0(4,R3),=C'TERM'    MOVE IN 'TERM' PARAMETER
         AH    R2,=H'4'
         STH   R2,FHXPARML
         B     ALLOTERM
NOTERMON LTR   R2,R2
         BZ    NOTERMX1
         MVI   0(R3),C','
         AH    R2,=H'1'
         AH    R3,=H'1'
NOTERMX1 MVC   0(6,R3),=C'NOTERM'  MOVE IN 'NOTERM' PARAMETER
         AH    R2,=H'6'
         STH   R2,FHXPARML
         B     TERMDUM             FOR 'NOTERM' ALLOCATE TO DUMMY
ALLOTERM EQU   *
         CLI   TRMKEYWD+1,3        TEST FOR 'TERMOUT'
         BE    TERMOUT             BRANCH IF 'TERMOUT' SPECIFIED
         CLI   TRMKEYWD+1,0        TEST FOR 'TERM' NOT SPECIFIED
         BE    TERM2USR            IF TRUE, ALLOCATE TO TERMINAL
TERMSEC  EQU   *
         TM    TERMDSNA+14,B'10000000'   CHECK FOR MEMBER NAME INPUT
         BO    TERMDS              IF YES, GO TO ALLOCATE SYSTERM
         LTR   R2,R2               TEST FOR TERM DSNAME INPUT
         BZ    TERM2USR            IF NONE, ALLOCATE TO TERMINAL
         L     R2,TERMDSNA
         CLI   0(R2),C'*'          CHECK FOR TERM(*) SPECIFIED
         BE    TERM2USR            IF YES, GO ALLOCATE TO TERMINAL
TERMDS   MVC   TERMMEM,BLANK       ALLOC SYSTERM TO DSNAME
         TM    TERMDSNA+14,B'10000000' TEST FOR MEMBER NAME INPUT
         BZ    TERMTSDS
         LH    R2,TERMDSNA+12
         BCTR  R2,R0
         LA    R1,TERMMEM
         L     R15,TERMDSNA+8
         EX    R2,MVCR1R15
TERMTSDS L     R2,TERMDSNA         LOAD ADDR OF TERM DSNAME
         LTR   R2,R2               TEST FOR TERM DSNAME INPUT
         BNZ   TERMX5              TERM DSNAME WAS SPECIFIED
         CLI   TERMMEM,C' '        TEST FOR MEMBER INPUT ONLY
         BNE   TERMLDS             MEMBER NAME IS INPUT - GO FIX UP
*                                      ID.TERM
         TM    FHXDSNA+6,X'80'     TEST FOR FORT DSN INPUT
         BZ    TERMLDS             FORT DSN NOT INPUT -- USE ID.TERM
         TM    FHXDSNA+6,X'40'     TEST FOR FORT DSN INPUT IN QUOTES
         BZ    TERMX3A             NO QOUTES -- USE FORT DSN
         L     R0,ADMSG25          FORT DS IN QUOTES -- OUTPUT MSG
         BAL   R14,PUTLINE
         B     TERMPUT
TERMX3A  MVC   TERMDSNL(44),SAVEDSN  MOVE LENGTH AND DSNAME
         LH    R2,TERMDSNL
         LA    R3,TERMDSN-5(R2)    POINT TO .FORT
         CLC   0(5,R3),=C'.FORT'   TEST FOR FORT QUAL.
         BE    TERMX3B
         CH    R2,=H'3'
         BNE   TERMX3A1
         CLC   TERMDSN(4),=C'FORT'
         BE    TERMLDS
TERMX3A1 DC    0H'0'
         L     R0,ADMSG28
         BAL   R14,PUTLINE
         B     TERMPUT
TERMX3B  DC    0H'0'
         MVC   0(5,R3),=C'.TERM'   REPLACE .FORT WITH .TERM
         STH   R2,TERMDSNL
TERMX3C  DC    0H'0'
         MVC   TERMMEM,BLANK
         MVI   TERMDSNA+14,0       SET MEMBER FLAG TO NO MEMBER INPUT
         LA    R1,TERMDSNL
         BAL   R14,SRCHCAT         BRANCH TO TEST CATALOG
         LTR   R15,R15
         BNZ   TERMX301
         NI    FLAGS,NOTDFLG       INDICATE OLD DATA SET
         MVC   TERMMEM,FHXMEM
         B     TERMOBT
TERMX301 OI    FLAGS,DFLG          INDICATE NEW DATA SET
         MVC   TERMMEM,BLANK
         B     TERMALLO
TERMLDS  MVC   TERMDSN(4),=C'TERM' MEMBER NAME ONLY SPECIFIED
         LH    R2,=H'4'
         STH   R2,TERMDSNL
         NI    FLAGS,NOTSFLG       INIT BITS
         NI    FLAGS,NOTPFLG
         NI    FLAGS,NOTQFLG
         NI    FLAGS,NOTDFLG
         B     TERMCAT
TERMX5   LH    R2,TERMDSNA+4       LOAD LENGTH
         STH   R2,TERMDSNL
         BCTR  R2,R0
         LA    R1,TERMDSN
         L     R15,TERMDSNA
         EX    R2,MVCR1R15
         TM    TERMDSNA+6,B'01000000' TEST FOR QUOTES
         BZ    TERMLIST
         OI    FLAGS,QFLG          SET BIT TO QUOTES
         B     TERMCAT             GO SEARCH CATALOG
TERMLIST LH    R2,TERMDSNL
         LA    R3,TERMDSN-5(R2)    POINT TO .TERM
         CLC   0(5,R3),=C'.TERM'
         BE    TERMCAT
         CH    R2,=H'4'
         BH    TERMLST1
         CLC   TERMDSN(4),=C'TERM'
         BE    TERMCAT
TERMLST1 DC    0H'0'
         LA    R3,TERMDSN(R2)
         MVC   0(5,R3),=C'.TERM'   APPEND .TERM
         AH    R2,=H'5'
         STH   R2,TERMDSNL
TERMCAT  NI    FLAGS,NOTDFLG       INDICATE OLD DATA SET
         LA    R1,TERMDSNL
         BAL   R14,SRCHCAT         BRANCH TO SEARCH CATALOG
         LTR   R15,R15
         BZ    TERMOBT             DATA SET IN CATALOG
         OI    FLAGS,DFLG          INDICATE NEW DATA SET
         B     TERMALLO
TERMOBT  LA    R1,TERMDSNL
         BAL   R14,OBTAIN
         LTR   R15,R15             TEST DATA SET TYPE
         BNZ   TERMX7
         CLI   TERMMEM,C' '        TEST FOR MEMBER NAME INPUT -- PDS
         BNE   TERMALLO
         L     R0,ADMSG11 OUTPUT 'DSN -- IS PART. TEMPNAME FOR MEMBER'
         LA    R1,TERMDSNL
         BAL   R14,OUTMSG
         MVC   TERMMEM,=C'TEMPNAME'
         B     TERMALLO
TERMX7   CH    R15,=H'4'           TEST FOR PS
         BNE   TERMPUT
         TM    TERMDSNA+14,B'10000000' TEST FOR MEMBER NAME INPUT
         BO    TERMX701
         MVC   TERMMEM,BLANK
         B     TERMALLO
TERMX701 LH    R2,TERMDSNL
         LA    R3,TERMDSN(R2)
         MVI   0(R3),C'('          FIX UP DSN WITH MEMBER NAME
         MVC   1(8,R3),TERMMEM
         MVI   9(R3),C')'
         AH    R2,=H'10'
         STH   R2,TERMDSNL
         L     R0,ADMSG10
         LA    R1,TERMDSNL
         BAL   R14,OUTMSG          OUTPUT 'NOT PARTITIONED'
TERMPUT  DC    0H'0'
         L     R2,ADMSG03T
         ST    R2,OLD+4
         TCLEARQ INPUT
         XC    ECB,ECB
*        PUTGET PARM=PGPB,MF=(E,IOPL) ENTER TERM DSNAME
         PUTGET PARM=PGPB,OUTPUT=(OLD,SINGLE,PROMPT),                  X
               TERMPUT=(EDIT,WAIT,NOHOLD,NOBREAK),                     X
               TERMGET=(EDIT,WAIT),MF=(E,IOPL)
         CH    R15,=H'8'           TEST FOR ERROR
         BH    PGERROR
         L     R15,PGPB+12         LOAD ADDR OF INPUT LINE
         LA    R1,TBUFL
         LH    R2,0(R15)           LOAD LENGTH OF INPUT LINE
         CH    R2,=H'64'
         BNH   TERMPUT1
         LH    R2,=H'64'
TERMPUT1 BCTR  R2,R0
         EX    R2,MVCR1R15         MOVE INPUT LINE TO TBUF
         LH    R0,0(R15)           LOAD LENGTH OF INPUT LINE
         O     R0,=X'01000000'     SP=1
         LR    R1,R15
         FREEMAIN R,LV=(0),A=(1)
         LH    R0,TBUFL
         CH    R0,=H'4'            TEST FOR NULL LINE
         BE    RETURN
         NI    FLAGS,NOTSFLG       INIT BITS
         NI    FLAGS,NOTPFLG
         NI    FLAGS,NOTQFLG
         NI    FLAGS,NOTDFLG
         LA    R1,TERMDSNA
         BAL   R14,PARSEDSN
         B     TERMDS
TERMOUT  EQU   *                   ALLOCATE SYSTERM TO SYSOUT
         MVC   DAIBLKSI,=H'128'    SET BLOCKSIZE TO 128
         BAL   R14,BUILDACB          REBUILD ATTR CONTROL BLOCK
         LA    R7,DAIRPB
         USING DAPB30,R7
         MVC   DA30CD,=X'0030'
         XC    DA30FLG(10),DA30FLG
         MVI   DA30DDN,C' '
         MVC   DA30DDN+1(23),DA30DDN
         MVC   DA30BLK,=F'0128'    DEFAULT BLOCKSIZE FOR SYSTERM
         XC    DA30PQTY(8),DA30PQTY
         MVI   DA30PQTY+3,1        ONE CYL PRIMARY
         MVI   DA30SQTY+3,1        ONE CYL SECONDARY
         MVI   DA30PGNM,C' '
         MVC   DA30PGNM+1(11),DA30PGNM
         MVC   DA30OCLS,=C'A '     SYSOUT CLASS=A
         MVI   DA30CTL-1,0
         MVI   DA30CTL,B'11010010' CYL,RLSE AND SHOW ATTR CONTROL BLOCK
         MVC   DA30ALN,=C'ATRFORTX'  MOVE IN ATRCB NAME
         XC    ECB,ECB
         LA    R1,DAIRPL
         LINK  EP=IKJEFD00         LINK TO DAIR
         LTR   R15,R15
         BZ    TERMX3
         ST    R15,SAVER15
         L     R0,ADMSG18B
         BAL   R14,PUTLINE
         L     R1,DA30DARC
         SRL   R1,16               SHIFT OUT BITS NOT USED
         SLL   R1,16
         L     R15,SAVER15
         BAL   R14,DAIRERR
         B     RETURN
TERMX3   OI    FLAGS,SFLG          SET FLAG TO FREE DDN WITH SYSOUT=A
         OI    FLAGS,PFLG
**                                 INDICATE SYSTERM OUTPUT
         MVC   SYSTERM,DA30DDN     MOVE DDNAME TO SYSTERM
         CLI   MSGKEYWD+1,1
         BNE   ENDTERM
         L     R0,ADMSG20B
         BAL   R14,PUTLINE
         B     ENDTERM
         DROP  R7
TERM2USR EQU   *                   ALLOCATE SYSTERM TO TERMINAL
         MVC   DAIBLKSI,=H'128'    SET BLOCKSIZE TO 128
         BAL   R14,BUILDACB          REBUILD ATTR CONTROL BLOCK
         LA    R6,DAIRPB
         USING DAPB1C,R6
         MVC   DA1CCD,=X'001C'
         XC    DA1CFLG(5),DA1CFLG
         MVC   DA1CDDN,BLANK
         MVI   DA1CCTL,2           TELL DAIR ABOUT ATTR CONTROL BLOCK
         MVC   DA1CALN,=C'ATRFORTX'  MOVE IN ATRCB NAME
         XC    ECB,ECB
         LA    R1,DAIRPL
         LINK  EP=IKJEFD00         LINK TO DAIR
         LTR   R15,R15
         BZ    SYSTRMOK
         ST    R15,SAVER15
         L     R0,ADMSG22
         BAL   R14,PUTLINE
         L     R1,DA1CDARC
         SRL   R1,16
         SLL   R1,16
         L     R15,SAVER15
         BAL   R14,DAIRERR
         B     RETURN
SYSTRMOK MVC   SYSTERM,DA1CDDN
         L     R0,ADMSG24B
         BAL   R14,PUTLINE
         B     ENDTERM
         DROP  R6
TERMDUM  EQU   *                   ALLOCATE SYSTERM TO DUMMY
         MVC   DAIBLKSI,=H'128'    SET BLOCKSIZE TO 128
         BAL   R14,BUILDACB          REBUILD ATTR CONTROL BLOCK
         LA    R7,DAIRPB
         USING DAPB08,R7
         MVC   DA08CD,=X'0008'
         XC    DA08FLG(10),DA08FLG ALLOC SYSTERM  TO DUMMY
         MVI   DA08DDN,C' '
         MVC   DA08DDN+1(23),DA08DDN
         XC    DA08BLK(16),DA08BLK
         MVI   DA08MNM,C' '
         MVC   DA08MNM+1(15),DA08MNM
         MVI   DA08DSP1,B'00000100' NEW
         XC    DA08DPS2(2),DA08DPS2
         MVI   DA08CTL,B'00000110' DUMMY AND SHOW ARRT CONTROL BLOCK
         XC    DA08CTL+1(4),DA08CTL+1
         MVC   DA08ALN,=C'ATRFORTX'  MOVE IN ATRCB NAME
         XC    ECB,ECB
         LA    R1,DAIRPL
         LINK  EP=IKJEFD00         LINK TO DAIR
         MVC   SYSTERM,DA08DDN     STORE DDNAME
         L     R0,ADMSG19B
         BAL   R14,PUTLINE
         LTR   R15,R15
         BZ    ENDTERM
         ST    R15,SAVER15
         L     R0,ADMSG12
         LA    R1,TERMDSNL
         BAL   R14,OUTMSG          OUTPUT 'ALLOCATION ERROR'
         L     R1,DA08DARC
         L     R15,SAVER15
         BAL   R14,DAIRERR         OUTPUT ALLOCATION ERROR
         B     TERMPUT
TERMALLO EQU   *                   ALLOCATE SYSTERM  TO A DATA SET
         TM    FLAGS,DFLG          TEST FOR OLD DATA SET
         BZ    TERMX9              DATA SET IS NOT NEW
         MVC   DAIBLKSI,=H'128'    SET BLOCKSIZE TO 128
TERMX9   BAL   R14,BUILDACB        REBUILD ATTR CONTROL BLOCK
         LA    R7,DAIRPB
         USING DAPB08,R7
         MVC   DA08CD,=X'0008'
         XC    DA08FLG(6),DA08FLG
         LA    R2,TERMDSNL
         ST    R2,DA08PDSN
         MVI   DA08DDN,C' '
         MVC   DA08DDN+1(23),DA08DDN
         TM    FLAGS,DFLG          TEST FOR OLD DATA SET
         BZ    TERMX10A            DATA SET IS NOT NEW
         MVC   DA08BLK,=F'0128'    DATA SET IS NEW
         XC    DA08PQTY(12),DA08PQTY
         MVI   DA08PQTY+3,1        ONE CYL PRIMARY SPACE
         MVI   DA08SQTY+3,1        ONE CYL SECONDARY
         CLI   TERMMEM,C' '        TEST FOR MEMBER NAME
         BE    TERMX10             NO MEMBER NAME
         MVI   DA08DQTY+3,1        ONE DIRECTORY BLOCK
TERMX10  MVI   DA08DSP1,B'00000100' NEW
         MVI   DA08DPS2,B'00000010' CATLG
         MVI   DA08DPS3,B'00000100' DELETE
         MVI   DA08CTL,B'11000000' CYL
         B     TERMX12
TERMX10A CLI   MODKEYWD+1,1        TEST FOR MOD KEYWORD
         BNE   TERMX10B
         MVI   DA08DSP1,B'00000010' MOD
         B     TERMX11
TERMX10B MVI   DA08DSP1,B'00001000' SHR
TERMX11  XC    DA08BLK(16),DA08BLK OLD DATA SET
         MVI   DA08DPS2,B'00001000' KEEP
         MVI   DA08DPS3,B'00001000' KEEP
         MVI   DA08CTL,2           TELL DAIR ABOUT ATTR CONTROL BLOCK
TERMX12  MVC   DA08MNM,TERMMEM
         MVC   DA08PSWD,BLANK
         TM    FLAGS,QFLG          TEST FOR QUOTES
         BO    *+8
         OI    DA08CTL,B'00100010' PREFIX USER ID AND SHOW DAIR ATRCB
         XC    DA08CTL+1(4),DA08CTL+1
         MVC   DA08ALN,=C'ATRFORTX'  MOVE IN ATRCB NAME
         XC    ECB,ECB
         LA    R1,DAIRPL
         LINK  EP=IKJEFD00         LINK TO DAIR
         LTR   R15,R15             TEST FOR ERRORS
         BZ    TERMX13             NO ERRORS
         ST    R15,SAVER15
         L     R0,ADMSG12
         LA    R1,TERMDSNL
         BAL   R14,OUTMSG          OUTPUT 'ALLOCATION ERROR'
         L     R1,DA08DARC
         L     R15,SAVER15
         BAL   R14,DAIRERR         OUTPUT ALLOCATION ERROR
         B     TERMPUT
TERMX13  MVC   SYSTERM,DA08DDN     STORE DDNAME
         OI    FLAGS,PFLG          INDICATE SYSTERM OUTPUT
         CLI   MSGKEYWD+1,1
         BNE   ENDTERM
         CLI   TERMMEM,C' '        TEST FOR MEMBER NAME
         BE    TERMX14             NO MEMBER NAME
         LH    R2,TERMDSNL         PUT MEMBER NAME IN DSN
         LA    R3,TERMDSN(R2)
         MVI   0(R3),C'('
         MVC   1(8,R3),TERMMEM
         MVI   9(R3),C')'
         AH    R2,=H'10'
         STH   R2,TERMDSNL
TERMX14  L     R0,ADMSG21B
         LA    R1,TERMDSNL
         BAL   R14,OUTMSG          OUTUT 'DS -- ALLOCATED TO SYSTERM'
         DROP  R7
ENDTERM  EQU   *
***********************************************************************
**
**   ALLOCATE SYSINDEX TO THE TERMINAL IF INDEX(*) SPECIFIED
**   OR ALLOCATE SYSINDEX TO A DATA SET IF INDEX('DSNAME')
**   OR ALLOCATE SYSINDEX TO DD DUMMY IF NOINDEX (DEFAULT)
**   OR ALLOCATE SYSINDEX TO SYSOUT=A IF INDEXOUT SPECIFIED.
**
         MVI   DAIRECFM,X'54'      SET RECFM TO VBA
         MVC   DAILRECL,=H'137'    SET LRECL = 137
         XC    DAIBLKSI,DAIBLKSI   ZERO THE ATRCB BLOCK SIZE
         BAL   R14,BUILDACB
         CLI   IDXKEYWD+1,3        TEST FOR 'NOINDEX' KEYWORD
         BE    INDEXDUM            SKIP ALLOCATION OF SYSINDEX
         L     R2,INDXDSNA
         CLI   0(R2),C'*'          CHECK FOR INDEX TO TERMINAL
         BNE   INDEXSEC
         LA    R6,DAIRPB           ALLOCATE SYSINDEX TO TERMINAL
         USING DAPB1C,R6
         MVC   DA1CCD,=X'001C'
         XC    DA1CFLG(5),DA1CFLG
         MVC   DA1CDDN,BLANK
         MVI   DA1CCTL,2           TELL DAIR ABOUT ATTR CONTROL BLOCK
         MVC   DA1CALN,=C'ATRFORTX'  MOVE IN ATRCB NAME
         XC    ECB,ECB
         LA    R1,DAIRPL
         LINK  EP=IKJEFD00         LINK TO DAIR
         LTR   R15,R15
         BZ    SYSIDXOK
         ST    R15,SAVER15
         L     R0,ADMSG23
         BAL   R14,PUTLINE
         L     R1,DA1CDARC
         SRL   R1,16
         SLL   R1,16
         L     R15,SAVER15
         BAL   R14,DAIRERR
         B     RETURN
SYSIDXOK MVC   SYSINDEX,DA1CDDN
         L     R0,ADMSG24C
         BAL   R14,PUTLINE
         B     ENDINDEX
         DROP  R6
INDEXSEC DC    0H'0'
         NI    FLAGS,NOTSFLG       INIT SYSOUT, SYSINDEX, AND QUOTE AND
         NI    FLAGS,NOTPFLG       DSN DISP BITS
         NI    FLAGS,NOTQFLG
         NI    FLAGS,NOTDFLG
         CLI   IDXKEYWD+1,1        TEST FOR 'INDEX'
         BE    INDXDS              'INDEX' DSNAME SPECIFIED
*                                  ALLOCATE SYSINDEX TO SYSOUT
         MVC   DAIBLKSI,=H'689'    SET BLOCKSIZE TO 689
         BAL   R14,BUILDACB        REBUILD ATTR CONTROL BLOCK
         LA    R7,DAIRPB
         USING DAPB30,R7
         MVC   DA30CD,=X'0030'
         XC    DA30FLG(10),DA30FLG
         MVI   DA30DDN,C' '
         MVC   DA30DDN+1(23),DA30DDN
         MVC   DA30BLK,=F'0689'    DEFAULT BLOCKSIZE FOR SYSINDEX
         XC    DA30PQTY(8),DA30PQTY
         MVI   DA30PQTY+3,1        ONE CYL PRIMARY
         MVI   DA30SQTY+3,1        ONE CYL SECONDARY
         MVI   DA30PGNM,C' '
         MVC   DA30PGNM+1(11),DA30PGNM
         MVC   DA30OCLS,=C'A '     SYSOUT CLASS=A
         MVI   DA30CTL-1,0
         MVI   DA30CTL,B'11010010' CYL,RLSE AND SHOW ATTR CONTROL BLOCK
         MVC   DA30ALN,=C'ATRFORTX'  MOVE IN ATRCB NAME
         XC    ECB,ECB
         LA    R1,DAIRPL
         LINK  EP=IKJEFD00         LINK TO DAIR
         LTR   R15,R15
         BZ    INDXX3
         ST    R15,SAVER15
         L     R0,ADMSG18C
         BAL   R14,PUTLINE
         L     R1,DA30DARC
         SRL   R1,16               SHIFT OUT BITS NOT USED
         SLL   R1,16
         L     R15,SAVER15
         BAL   R14,DAIRERR
         B     RETURN
INDXX3   OI    FLAGS,SFLG          SET FLAG TO FREE DDN WITH SYSOUT=A
         OI    FLAGS,PFLG
**                                 INDICATE SYSINDEX OUTPUT
         MVC   SYSINDEX,DA30DDN    MOVE DDNAME TO IFEAAB LIST
         CLI   MSGKEYWD+1,1
         BNE   ENDINDEX
         L     R0,ADMSG20C
         BAL   R14,PUTLINE
         B     ENDINDEX
         DROP  R7
INDXDS   MVC   INDXMEM,BLANK       ALLOC SYSINDEX TO DSNAME
         TM    INDXDSNA+14,B'10000000' TEST FOR MEMBER NAME INPUT
         BZ    INDXTSDS
         LH    R2,INDXDSNA+12
         BCTR  R2,R0
         LA    R1,INDXMEM
         L     R15,INDXDSNA+8
         EX    R2,MVCR1R15
INDXTSDS L     R2,INDXDSNA         LOAD ADDR OF INDEX DSNAME
         LTR   R2,R2               TEST FOR INDEX DSNAME INPUT
         BNZ   INDXX5              INDEX DSNAME INPUT
         CLI   INDXMEM,C' '        TEST FOR MEMBER INPUT ONLY
         BNE   INDXLDS             MEMBER NAME IS INPUT - GO FIX UP
*                                      ID.INDEX
         TM    FHXDSNA+6,X'80'     TEST FOR FORT DSN INPUT
         BZ    INDXLDS             FORT DSN NOT INPUT -- USE ID.INDEX
         TM    FHXDSNA+6,X'40'     TEST FOR FORT DSN INPUT IN QUOTES
         BZ    INDXX3A             NO QOUTES -- USE FORT DSN
         L     R0,ADMSG25          FORT DS IN QUOTES -- OUTPUT MSG
         BAL   R14,PUTLINE
         B     INDXPUT
INDXX3A  MVC   INDXDSNL(44),SAVEDSN  MOVE LENGTH AND DSNAME
         LH    R2,INDXDSNL
         LA    R3,INDXDSN-5(R2)    POINT TO .FORT
         CLC   0(5,R3),=C'.FORT'   TEST FOR FORT QUAL.
         BE    INDXX3B
         CH    R2,=H'3'
         BNE   INDXX3A1
         CLC   INDXDSN(4),=C'FORT'
         BE    INDXLDS
INDXX3A1 DC    0H'0'
         L     R0,ADMSG28
         BAL   R14,PUTLINE
         B     INDXPUT
INDXX3B  DC    0H'0'
         MVC   0(6,R3),=C'.INDEX'  REPLACE .FORT WITH .INDEX
         AH    R2,=H'1'            ADD ONE FOR EXTRA CHARACTER
         STH   R2,INDXDSNL
INDXX3C  DC    0H'0'
         MVC   INDXMEM,BLANK
         MVI   INDXDSNA+14,0       SET MEMBER FLAG TO NO MEMBER INPUT
         LA    R1,INDXDSNL
         BAL   R14,SRCHCAT         BRANCH TO TEST CATALOG
         LTR   R15,R15
         BNZ   INDXX301
         NI    FLAGS,NOTDFLG       INDICATE OLD DATA SET
         MVC   INDXMEM,FHXMEM
         B     INDXOBT
INDXX301 OI    FLAGS,DFLG          INDICATE NEW DATA SET
         MVC   INDXMEM,BLANK
         B     INDXALLO
INDXLDS  MVC   INDXDSN(5),=C'INDEX' MEMBER NAME ONLY SPECIFIED
         LH    R2,=H'5'
         STH   R2,INDXDSNL
         NI    FLAGS,NOTSFLG       INIT BITS
         NI    FLAGS,NOTPFLG
         NI    FLAGS,NOTQFLG
         NI    FLAGS,NOTDFLG
         B     INDXCAT
INDXX5   LH    R2,INDXDSNA+4       LOAD LENGTH
         STH   R2,INDXDSNL
         BCTR  R2,R0
         LA    R1,INDXDSN
         L     R15,INDXDSNA
         EX    R2,MVCR1R15
         TM    INDXDSNA+6,B'01000000' TEST FOR QUOTES
         BZ    INDXLIST
         OI    FLAGS,QFLG          SET BIT TO QUOTES
         B     INDXCAT             GO SEARCH CATALOG
INDXLIST LH    R2,INDXDSNL
         LA    R3,INDXDSN-6(R2)    POINT TO .INDEX
         CLC   0(6,R3),=C'.INDEX'
         BE    INDXCAT
         CH    R2,=H'5'
         BH    INDXLST1
         CLC   INDXDSN(5),=C'INDEX'
         BE    INDXCAT
INDXLST1 DC    0H'0'
         LA    R3,INDXDSN(R2)
         MVC   0(6,R3),=C'.INDEX'  APPEND .INDEX
         AH    R2,=H'6'
         STH   R2,INDXDSNL
INDXCAT  NI    FLAGS,NOTDFLG       INDICATE OLD DATA SET
         LA    R1,INDXDSNL
         BAL   R14,SRCHCAT         BRANCH TO SEARCH CATALOG
         LTR   R15,R15
         BZ    INDXOBT             DATA SET IN CATALOG
         OI    FLAGS,DFLG          INDICATE NEW DATA SET
         B     INDXALLO
INDXOBT  LA    R1,INDXDSNL
         BAL   R14,OBTAIN
         LTR   R15,R15             TEST DATA SET TYPE
         BNZ   INDXX7
         CLI   INDXMEM,C' '        TEST FOR MEMBER NAME INPUT -- PDS
         BNE   INDXALLO
         L     R0,ADMSG11 OUTPUT 'DSN -- IS PART. TEMPNAME FOR MEMBER'
         LA    R1,INDXDSNL
         BAL   R14,OUTMSG
         MVC   INDXMEM,=C'TEMPNAME'
         B     INDXALLO
INDXX7   CH    R15,=H'4'           TEST FOR PS
         BNE   INDXPUT
         TM    INDXDSNA+14,B'10000000' TEST FOR MEMBER NAME INPUT
         BO    INDXX701
         MVC   INDXMEM,BLANK
         B     INDXALLO
INDXX701 LH    R2,INDXDSNL
         LA    R3,INDXDSN(R2)
         MVI   0(R3),C'('          FIX UP DSN WITH MEMBER NAME
         MVC   1(8,R3),INDXMEM
         MVI   9(R3),C')'
         AH    R2,=H'10'
         STH   R2,INDXDSNL
         L     R0,ADMSG10
         LA    R1,INDXDSNL
         BAL   R14,OUTMSG          OUTPUT 'NOT PARTITIONED'
INDXPUT  DC    0H'0'
         L     R2,ADMSG03I
         ST    R2,OLD+4
         TCLEARQ INPUT
         XC    ECB,ECB
         PUTGET PARM=PGPB,MF=(E,IOPL) ENTER INDEX DSNAME
         CH    R15,=H'8'           TEST FOR ERROR
         BH    PGERROR
         L     R15,PGPB+12         LOAD ADDR OF INPUT LINE
         LA    R1,TBUFL
         LH    R2,0(R15)           LOAD LENGTH OF INPUT LINE
         CH    R2,=H'64'
         BNH   INDXPUT1
         LH    R2,=H'64'
INDXPUT1 BCTR  R2,R0
         EX    R2,MVCR1R15         MOVE INPUT LINE TO TBUF
         LH    R0,0(R15)           LOAD LENGTH OF INPUT LINE
         O     R0,=X'01000000'     SP=1
         LR    R1,R15
         FREEMAIN R,LV=(0),A=(1)
         LH    R0,TBUFL
         CH    R0,=H'4'            TEST FOR NULL LINE
         BE    RETURN
         NI    FLAGS,NOTSFLG       INIT BITS
         NI    FLAGS,NOTPFLG
         NI    FLAGS,NOTQFLG
         NI    FLAGS,NOTDFLG
         LA    R1,INDXDSNA
         BAL   R14,PARSEDSN
         B     INDXDS
INDXALLO EQU   *                   ALLOCATE SYSINDEX TO A DATA SET
         TM    FLAGS,DFLG          TEST FOR OLD DATA SET
         BZ    INDXX9              DATA SET IS NOT NEW
         MVC   DAIBLKSI,=H'689'    SET BLOCKSIZE TO 689
INDXX9   BAL   R14,BUILDACB        REBUILD ATTR CONTROL BLOCK
         LA    R7,DAIRPB
         USING DAPB08,R7
         MVC   DA08CD,=X'0008'
         XC    DA08FLG(6),DA08FLG
         LA    R2,INDXDSNL
         ST    R2,DA08PDSN
         MVI   DA08DDN,C' '
         MVC   DA08DDN+1(23),DA08DDN
         TM    FLAGS,DFLG          TEST FOR OLD DATA SET
         BZ    INDXX10A            DATA SET IS NOT NEW
         MVC   DA08BLK,=F'0689'    DATA SET IS NEW
         XC    DA08PQTY(12),DA08PQTY
         MVI   DA08PQTY+3,1        ONE CYL PRIMARY SPACE
         MVI   DA08SQTY+3,1        ONE CYL SECONDARY
         CLI   INDXMEM,C' '        TEST FOR MEMBER NAME
         BE    INDXX10             NO MEMBER NAME
         MVI   DA08DQTY+3,1        ONE DIRECTORY BLOCK
INDXX10  MVI   DA08DSP1,B'00000100' NEW
         MVI   DA08DPS2,B'00000010' CATLG
         MVI   DA08DPS3,B'00000100' DELETE
         MVI   DA08CTL,B'11000000' CYL
         B     INDXX12
INDXX10A CLI   MODKEYWD+1,1        TEST FOR MOD KEYWORD
         BNE   INDXX10B
         MVI   DA08DSP1,B'00000010' MOD
         B     INDXX11
INDXX10B MVI   DA08DSP1,B'00001000' SHR
INDXX11  XC    DA08BLK(16),DA08BLK OLD DATA SET
         MVI   DA08DPS2,B'00001000' KEEP
         MVI   DA08DPS3,B'00001000' KEEP
         MVI   DA08CTL,2           TELL DAIR ABOUT ATTR CONTROL BLOCK
INDXX12  MVC   DA08MNM,INDXMEM
         MVC   DA08PSWD,BLANK
         TM    FLAGS,QFLG          TEST FOR QUOTES
         BO    *+8
         OI    DA08CTL,B'00100010' PREFIX USER ID AND SHOW ATRCB
         XC    DA08CTL+1(4),DA08CTL+1
         MVC   DA08ALN,=C'ATRFORTX'  MOVE IN ATRCB NAME
         XC    ECB,ECB
         LA    R1,DAIRPL
         LINK  EP=IKJEFD00         LINK TO DAIR
         LTR   R15,R15             TEST FOR ERRORS
         BZ    INDXX13             NO ERRORS
         ST    R15,SAVER15
         L     R0,ADMSG12
         LA    R1,INDXDSNL
         BAL   R14,OUTMSG          OUTPUT 'ALLOCATION ERROR'
         L     R1,DA08DARC
         L     R15,SAVER15
         BAL   R14,DAIRERR         OUTPUT ALLOCATION ERROR
         B     INDXPUT
INDXX13  MVC   SYSINDEX,DA08DDN    STORE DDNAME
         OI    FLAGS,PFLG          INDICATE SYSINDEX OUTPUT
         CLI   MSGKEYWD+1,1
         BNE   ENDINDEX
         CLI   INDXMEM,C' '        TEST FOR MEMBER NAME
         BE    INDXX14             NO MEMBER NAME
         LH    R2,INDXDSNL         PUT MEMBER NAME IN DSN
         LA    R3,INDXDSN(R2)
         MVI   0(R3),C'('
         MVC   1(8,R3),INDXMEM
         MVI   9(R3),C')'
         AH    R2,=H'10'
         STH   R2,INDXDSNL
INDXX14  L     R0,ADMSG21C
         LA    R1,INDXDSNL
         BAL   R14,OUTMSG          OUTUT 'DS -- ALLOCATED TO SYSINDEX'
         B     ENDINDEX
INDEXDUM EQU   *                   ALLOCATE SYSINDEX TO DUMMY
         MVC   DAIBLKSI,=H'689'    SET BLOCKSIZE TO 689
         BAL   R14,BUILDACB        REBUILD ATTR CONTROL BLOCK
         LA    R7,DAIRPB
         USING DAPB08,R7
         MVC   DA08CD,=X'0008'
         XC    DA08FLG(10),DA08FLG ALLOC SYSINDEX TO DUMMY
         MVI   DA08DDN,C' '
         MVC   DA08DDN+1(23),DA08DDN
         XC    DA08BLK(16),DA08BLK
         MVI   DA08MNM,C' '
         MVC   DA08MNM+1(15),DA08MNM
         MVI   DA08DSP1,B'00000100' NEW
         XC    DA08DPS2(2),DA08DPS2
         MVI   DA08CTL,B'00000110' DUMMY AND SHOW ATTR CONTROL BLOCK
         XC    DA08CTL+1(4),DA08CTL+1
         MVC   DA08ALN,=C'ATRFORTX'  MOVE IN ATRCB NAME
         XC    ECB,ECB
         LA    R1,DAIRPL
         LINK  EP=IKJEFD00         LINK TO DAIR
         MVC   SYSINDEX,DA08DDN    STORE DDNAME
         L     R0,ADMSG19C
         BAL   R14,PUTLINE
         LTR   R15,R15
         BZ    ENDINDEX
         ST    R15,SAVER15
         L     R0,ADMSG12
         LA    R1,INDXDSNL
         BAL   R14,OUTMSG          OUTPUT 'ALLOCATION ERROR'
         L     R1,DA08DARC
         L     R15,SAVER15
         BAL   R14,DAIRERR         OUTPUT ALLOCATION ERROR
         B     INDXPUT
         DROP  R7
ENDINDEX EQU   *
***********************************************************************
**
** PREOCESS 'TASKLIB' OR 'LIB' KEYWORD IF SPECIFIED
**
         CLI   TASKEYWD+1,0        TEST FOR TASKLIB
         BE    ENDTSKLB
**
**INIT PARSEPL WITH DIFFERENT ANSWER ADDR AND COMMAND BUFFER IN
** CASE THE DATA SET(S) WHOSE NAMES ARE SPECIFIED BY THE TASKLIB
** KEYWORD ARE NOT IN THE CATALOG, CANT BE ALLOCATED, ETC.
**
         OI    FLAGS,TASKFLG
         LA    R2,ANSWER1
         ST    R2,PARSEPL+16
         LA    R2,CMDLEN
         ST    R2,PARSEPL+20
         MVC   PARSEPL+12,=A(DSNPPL)
         LA    R6,TASKDSNA         USE R6 AS BASE FOR DSNAME PDE
TASKLP1  DC    0H'0'
         NI    FLAGS,255-QFLG
         L     R15,0(R6)           LOAD ADDR OF DSNAME
         LTR   R15,R15             TEST FOR DSNAME
         BNZ   TASKB
**
** DATA SET NAME ERROR -- PROBABLY MEMBER NAME ONLY
**
         TM    14(R6),B'10000000'  TEST FOR MEMBER NAME
         BO    TASKA
         L     R0,ADMSG40          INVALID DSNAME
         BAL   R14,PUTLINE
         B     TASKPRMT            GO PROMPT FOR ANOTHER DSNAME
TASKA    OI    FLAGS,QFLG          SO ''( ... )'' WILL BE PRINTED
         LA    R1,CMDBUF
         MVI   0(R1),C'('
         AH    R1,=H'1'
         LH    R2,=H'1'
         LH    R3,12(R6)           LOAD LENGTH OF MEMBER NAME
         AR    R2,R3
         BCTR  R3,R0
         L     R15,8(R6)           LOAD ADDR OF MEMBER NAME
         EX    R3,MVCR1R15
         LA    R14,1(R3,R14)
         MVI   0(R14),C')'
         AH    R2,=H'1'
         STH   R2,CMDOFF
         LA    R1,CMDOFF
         L     R0,ADMSG41
         BAL   R14,OUTMSG          GO OUTPUT 'DATA SET --- INVALID'
         B     TASKPRMT            GO PROMPT FOR ANOTHER DATA SET NAME
**
** DATA SET NAME WAS SPECIFIED, IGNORE MEMBER NAME IF SPECIFIED.
**
TASKB    DC    0H'0'
         TM    6(R6),B'01000000'   TEST FOR QUOTES
         BZ    TASKC
         OI    FLAGS,QFLG          SET QUOTES FLAG
TASKC    LH    R2,4(R6)            LOAD LENGTH OF DATA SET NAME
         STH   R2,DSNLEN
         BCTR  R2,R0
         LA    R1,DSNAME           R15= ADDR OF INPUT DSNAME
         EX    R2,MVCR1R15
**
** ALLOC DSNAME
**
         LA    R7,DAIRPB
         USING DAPB08,R7
         MVC   DA08CD,=X'0008'
         XC    DA08FLG(6),DA08FLG
         LA    R2,DSNLEN
         ST    R2,DA08PDSN
         MVI   DA08DDN,C' '
         MVC   DA08DDN+1(23),DA08DDN
         XC    DA08BLK(16),DA08BLK
         MVI   DA08MNM,C' '
         MVC   DA08MNM+1(15),DA08MNM
         MVI   DA08DSP1,B'00001000' SHR
         MVI   DA08DPS2,B'00001000' KEEP
         MVI   DA08DPS3,B'00001000' KEEP
         XC    DA08CTL(5),DA08CTL
         TM    FLAGS,QFLG          TEST FOR QUOTE
         BO    *+8
         OI    DA08CTL,B'00100000' PREFIX USER ID
         XC    ECB,ECB
         LA    R1,DAIRPL
         LINK  EP=IKJEFD00         LINK TO DAIR
         LTR   R15,R15
         BZ    TESTPDS
         CH    R15,=H'8'           TEST FOR CATALOG ERROR
         BNE   TASKDAER
         CLC   DA08DARC,=X'170C'
         BNE   TASKCTER
         TM    FLAGS,QFLG          TEST FOR QUOTES
         BO    TASKDAER
**
** SINCE THE DSNAME IS NOT IN QUOTES, APPEND .LOAD AND TRY ALLOC AGAIN
**
         LH    R2,DSNLEN
         LA    R3,DSNAME(R2)
         MVC   0(5,R3),=C'.LOAD'
         AH    R2,=H'5'
         STH   R2,DSNLEN
         XC    DA08DARC(4),DA08DARC
         XC    ECB,ECB
         LA    R1,DAIRPL
         LINK  EP=IKJEFD00         LINK TO DAIR
         LTR   R15,R15
         BZ    TESTPDS
         LH    R2,DSNLEN
         SH    R2,=H'5'            FOR .LOAD
         STH   R2,DSNLEN
         CH    R15,=H'8'           TEST FOR CATALOG ERROR
         BNE   TASKDAER
TASKCTER DC    0H'0'               CATALOG ERROR
         LA    R1,DSNLEN
         L     R0,ADMSG44          DSNAME NOT IN CATALOG
         BAL   R14,OUTMSG
         B     TASKPRMT            GO PROMPT
**
** ALLOCATION ERROR
**
TASKDAER DC    0H'0'
         ST    R15,SAVER15
         LA    R0,DSNLEN
         L     R0,ADMSG47
         BAL   R14,OUTMSG
         L     R15,SAVER15
         CH    R15,=H'12'
         BH    TESTDARC
         L     R1,DA08DARC
         BAL   R14,DAIRERR
         B     RETURN
TESTDARC DC    0H'0'
         CH    R15,=H'16'
         BH    TSTDARC1
         L     R0,ADMSG48          ALLOCATIONS EXCEEDED
         BAL   R14,PUTLINE
         B     TASKPRMT
TSTDARC1 DC    0H'0'
         L     R1,DA08DARC
         BAL   R14,DAIRERR
         B     RETURN
**
** DATA SET IS ALLOCATED, TEST FOR PDS.
**
TESTPDS  TM    DA08DSO,B'00000010' TEST FOR PDS
         BO    SAVEDDN
         LA    R1,DSNLEN
         L     R0,ADMSG45
         BAL   R14,OUTMSG          DATA SET IS NOT PDS
         LA    R1,DA08DDN
         BAL   R14,FREEDDN         GO FREE DDNAME
         B     TASKPRMT
SAVEDDN  EQU   *                   SAVE ALLOCATED DDNAME
         MVC   TASKLIB,DA08DDN
         B     ENDTSKLB
**
** PROMPT FOR TASK LIBRARY DATA SET NAME
**
TASKPRMT L     R2,ADMSG42          ENTER TASKLIB DSNAME
         ST    R2,OLD+4
         TCLEARQ INPUT
         XC    ECB,ECB
TASKPRMA PUTGET PARM=PGPB,OUTPUT=(OLD,SINGLE,PROMPT),                  X
               TERMPUT=(EDIT,WAIT,NOHOLD,NOBREAK),                     X
               TERMGET=(EDIT,WAIT),MF=(E,IOPL)
         CH    R15,=H'4'
         BH    PGERROR
         L     R15,PGPB+12         LOAD ADDR OF INPUT LINE
         LH    R2,0(R15)           LOAD LENGTH
         CH    R2,=H'48'           TEST FOR MAX DSN LENGTH
         BNH   TASKPRMB
         LR    R0,R2
         O     R0,=X'01000000'     SP=1
         LR    R1,R15
         FREEMAIN R,LV=(0),A=(1)
         L     R0,ADMSG43          DSNAME TOO LONG
         BAL   R14,PUTLINE
         B     TASKPRMA
TASKPRMB BCTR  R2,R0
         LA    R1,CMDLEN
         EX    R2,MVCR1R15
         LH    R0,0(R15)
         O     R0,=X'01000000'     SP=1
         LR    R1,R15
         FREEMAIN R,LV=(0),A=(1)
         LH    R2,CMDLEN
         CH    R2,=H'4'            TEST FOR NULL LINE RESPONSE
         BNH   ENDTSKLB            GO TO END OF LOOP
         IKJRLSA ANSWER1
         XC    ECB,ECB
         LA    R1,PARSEPL
         LINK  EP=IKJPARS          PARSE DSNAME
         CH    R15,=H'8'           TEST FOR ATTN
         BE    RETURN              GO RETURN
         BH    TASKPRMC
         CH    R15,=H'4'
         BNE   TASKPRMD
TASKPRMC EQU   *                   PARSE ERROR
         CVD   R15,DTEMP
         UNPK  DTEMP(3),DTEMP+6(2)
         OI    DTEMP+2,X'F0'
         L     R0,ADMSG01
         MVC   MSGOUT+MSG01L(2),DTEMP+1
         MVC   MSGOUT(MSG01L),0(R0)
         LA    R0,MSGOUT
         BAL   R14,PUTLINE
         B     RETURN
TASKPRMD L     R15,ANSWER1
         USING DSNPDL,R15
         MVC   0(24,R6),NEWDSN     OVERLAY OLD PDE WITH NEW ONE
         B     TASKLP1
         DROP  R15
ENDTSKLB EQU   *
***********************************************************************
**
** ALLOCATE SYSUT1 AND SYSUT2
**
UTXSEC   EQU   *                   ALLOCATE SYSUT1 AND SYSUT2
         MVI   DAIRECFM,X'90'      SET RECFM TO FIXED BLOCKED
         MVC   DAILRECL,=H'105'    SET LRECL = 105
         MVC   DAIBLKSI,=H'7245'   SET BLOCKSIZE TO 7245
         BAL   R14,BUILDACB
         MVC   UTX1DSN(9),=X'000750E2E8E2E4E3F1'
         LA    R7,DAIRPB
         USING DAPB08,R7
         MVC   DA08CD,=X'0008'
         XC    DA08FLG(6),DA08FLG
         LA    R2,UTX1DSN
         ST    R2,DA08PDSN
         MVI   DA08DDN,C' '
         MVC   DA08DDN+1(23),DA08DDN
         XC    DA08BLK(16),DA08BLK
         MVI   DA08PQTY+3,1        ONE CYL PRIMARY
         MVI   DA08SQTY+3,1        ONE CYL SECONDARY
         MVC   DA08MNM,BLANK
         MVC   DA08PSWD,BLANK
         MVI   DA08DSP1,B'00000100' NEW
         MVI   DA08DPS2,B'00000100' DELETE
         MVI   DA08DPS3,B'00000100' DELETE
         MVI   DA08CTL,B'11000010' CYL AND TELL DAIR ABOUT ATRCB
         XC    DA08CTL+1(4),DA08CTL+1
         MVC   DA08ALN,=C'ATRFORTX'  MOVE IN ATRCB NAME
         XC    ECB,ECB
         LA    R1,DAIRPL
         LINK  EP=IKJEFD00         LINK TO DAIR
         LTR   R15,R15
         BZ    UTXX1
         NI    FLAGS,NOTQFLG
         ST    R15,SAVER15
         L     R0,ADMSG12
         LA    R1,UTX1DSN
         BAL   R14,OUTMSG
         L     R15,SAVER15
         L     R1,DA08DARC
         BAL   R14,DAIRERR
         B     RETURN
UTXX1    MVC   SYSUT1,DA08DDN      MOVE DDNAME TO LIST
*        MVI   DAIRECFM,X'90'      SET RECFM TO FIXED BLOCKED
*        MVC   DAILRECL,=H'105'    SET LRECL = 105
*        MVC   DAIBLKSI,=H'1050'   SET BLOCKSIZE TO 1050
*        BAL   R14,BUILDACB
         MVC   UTX2DSN(9),=X'000750E2E8E2E4E3F2'
         LA    R7,DAIRPB
         USING DAPB08,R7
         MVC   DA08CD,=X'0008'
         XC    DA08FLG(6),DA08FLG
         LA    R2,UTX2DSN
         ST    R2,DA08PDSN
         MVI   DA08DDN,C' '
         MVC   DA08DDN+1(23),DA08DDN
         XC    DA08BLK(16),DA08BLK
         MVI   DA08PQTY+3,1        ONE CYL PRIMARY
         MVI   DA08SQTY+3,1        ONE CYL SECONDARY
         MVC   DA08MNM,BLANK
         MVC   DA08PSWD,BLANK
         MVI   DA08DSP1,B'00000100' NEW
         MVI   DA08DPS2,B'00000100' DELETE
         MVI   DA08DPS3,B'00000100' DELETE
         MVI   DA08CTL,B'11000000' CYL
         XC    DA08CTL+1(4),DA08CTL+1
         MVC   DA08ALN,=C'ATRFORTX'  MOVE IN ATRCB NAME
         XC    ECB,ECB
         LA    R1,DAIRPL
         LINK  EP=IKJEFD00         LINK TO DAIR
         LTR   R15,R15
         BZ    UTXX2
         NI    FLAGS,NOTQFLG
         ST    R15,SAVER15
         L     R0,ADMSG12
         LA    R1,UTX2DSN
         BAL   R14,OUTMSG
         L     R15,SAVER15
         L     R1,DA08DARC
         BAL   R14,DAIRERR
         B     RETURN
UTXX2    MVC   SYSUT2,DA08DDN      MOVE DDNAME TO LIST
         DROP  R7
***********************************************************************
**
**    PROCESS THE COMPILER OPTIONS RECOGNIZED BY THIS PROMPTER
**
**               (SIZE AND DECK ARE NOT RECOGNIZED)
**
**    (TRACE AND DUMP ARE RECOGNIZED BUT ARE NOT SHOWN IN HELP)
**
*  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *
         CLI   SRCKEYWD+1,2        TEST FOR 'NOSOURCE' COMPILER OPTION
         BNE   ENDSORSC            SKIP IF NOT 'NOSOURCE' (DEFAULT)
         LH    R2,FHXPARML         LOAD LENGTH OF PARAMETER FIELD
         LA    R3,FHXPARM(R2)      POINT TO END OF PARAMETER LIST
         LTR   R2,R2
         BZ    SOURCEX1
         MVI   0(R3),C','
         AH    R2,=H'1'
         AH    R3,=H'1'
SOURCEX1 MVC   0(8,R3),=C'NOSOURCE'  MOVE IN 'NOSOURCE' PARAMETER
         AH    R2,=H'8'            UPDATE LENGTH COUNTER
         STH   R2,FHXPARML
ENDSORSC EQU   *
*  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *
         CLI   BCDKEYWD+1,1        TEST FOR 'BCD' COMPILER OPTION
         BNE   ENDBCD              SKIP IF 'EBCDIC' (DEFAULT)
         LH    R2,FHXPARML         LOAD LENGTH OF PARAMETER FIELD
         LA    R3,FHXPARM(R2)      POINT TO END OF PARAMETER LIST
         LTR   R2,R2
         BZ    BCDX1
         MVI   0(R3),C','
         AH    R2,=H'1'
         AH    R3,=H'1'
BCDX1    MVC   0(3,R3),=C'BCD'     MOVE IN 'BCD' PARAMETER
         AH    R2,=H'3'            UPDATE LENGTH COUNTER
         STH   R2,FHXPARML
ENDBCD   EQU   *
*  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *
         CLI   LSTKEYWD+1,1        TEST FOR 'LIST' COMPILER OPTION
         BNE   ENDLIST             SKIP IF 'NOLIST' (DEFAULT)
         LH    R2,FHXPARML         LOAD LENGTH OF PARAMETER FIELD
         LA    R3,FHXPARM(R2)      POINT TO END OF PARAMETER LIST
         LTR   R2,R2
         BZ    LISTX1
         MVI   0(R3),C','
         AH    R2,=H'1'
         AH    R3,=H'1'
LISTX1   MVC   0(4,R3),=C'LIST'    MOVE IN 'LIST' PARAMETER
         AH    R2,=H'4'            UPDATE LENGTH COUNTER
         STH   R2,FHXPARML
ENDLIST  EQU   *
*  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *
         CLI   MAPKEYWD+1,2        TEST FOR 'NOMAP' COMPILER OPTION
         BNE   ENDMAP              SKIP IF 'MAP' (DEFAULT)
         LH    R2,FHXPARML         LOAD LENGTH OF PARAMETER FIELD
         LA    R3,FHXPARM(R2)      POINT TO END OF PARAMETER LIST
         LTR   R2,R2
         BZ    MAPX1
         MVI   0(R3),C','
         AH    R2,=H'1'
         AH    R3,=H'1'
MAPX1    MVC   0(5,R3),=C'NOMAP'   MOVE IN 'NOMAP' PARAMETER
         AH    R2,=H'5'            UPDATE LENGTH COUNTER
         STH   R2,FHXPARML
ENDMAP   EQU   *
*  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *
         CLI   FMTKEYWD+1,0
         BE    ENDFORMT            SKIP IF 'NOFORMAT' NOT SPECIFIED
         CLI   FMTKEYWD+1,2        TEST FOR 'FORMAT' COMPILER OPTION
         BH    ENDFORMT            SKIP IF 'NOFORMAT' (DEFAULT)
         LH    R2,FHXPARML         LOAD LENGTH OF PARAMETER FIELD
         LA    R3,FHXPARM(R2)      POINT TO END OF PARAMETER LIST
         LTR   R2,R2
         BZ    FORMATX1
         MVI   0(R3),C','
         AH    R2,=H'1'
         AH    R3,=H'1'
FORMATX1 MVC   0(6,R3),=C'FORMAT'  MOVE IN 'FORMAT' PARAMETER
         AH    R2,=H'6'            UPDATE LENGTH COUNTER
         STH   R2,FHXPARML
ENDFORMT EQU   *
*  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *
         CLI   GOSKEYWD+1,3        TEST FOR 'NOGOSTMT' OR 'NOID' OPTION
         BL    ENDSTMT             SKIP IF 'GOSTMT' OR 'ID' (DEFAULT)
         LH    R2,FHXPARML         LOAD LENGTH OF PARAMETER FIELD
         LA    R3,FHXPARM(R2)      POINT TO END OF PARAMETER LIST
         LTR   R2,R2
         BZ    TESTX1
         MVI   0(R3),C','
         AH    R2,=H'1'
         AH    R3,=H'1'
TESTX1   MVC   0(8,R3),=C'NOGOSTMT'  MOVE IN 'NOGOSTMT' PARAMETER
         AH    R2,=H'8'            UPDATE LENGTH COUNTER
         STH   R2,FHXPARML
ENDSTMT  EQU   *
*  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *
         CLI   XRFKEYWD+1,1        TEST FOR 'XREF' COMPILER OPTION
         BNE   ENDXREF             SKIP IF 'NOXREF' (DEFAULT)
         LH    R2,FHXPARML         LOAD LENGTH OF PARAMETER FIELD
         LA    R3,FHXPARM(R2)      POINT TO END OF PARAMETER LIST
         LTR   R2,R2
         BZ    XREF1
         MVI   0(R3),C','
         AH    R2,=H'1'
         AH    R3,=H'1'
XREF1    MVC   0(4,R3),=C'XREF'    MOVE IN 'XREF' PARAMETER
         AH    R2,=H'4'            UPDATE LENGTH COUNTER
         STH   R2,FHXPARML
ENDXREF  EQU   *
*  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *
         CLI   ALCKEYWD+1,2        TEST FOR 'NOALC' COMPILER OPTION
         BNE   ENDALC              SKIP IF 'ALC' (DEFAULT)
         LH    R2,FHXPARML         LOAD LENGTH OF PARAMETER FIELD
         LA    R3,FHXPARM(R2)      POINT TO END OF PARAMETER LIST
         LTR   R2,R2
         BZ    ALCX1
         MVI   0(R3),C','
         AH    R2,=H'1'
         AH    R3,=H'1'
ALCX1    MVC   0(5,R3),=C'NOALC'   MOVE IN 'NOALC' PARAMETER
         AH    R2,=H'5'            UPDATE LENGTH COUNTER
         STH   R2,FHXPARML
ENDALC   EQU   *
*  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *
         CLI   ANSKEYWD+1,1        TEST FOR 'ANSF' COMPILER OPTION
         BNE   ENDANSF             SKIP IF 'NOANSF' (DEFAULT)
         LH    R2,FHXPARML         LOAD LENGTH OF PARAMETER FIELD
         LA    R3,FHXPARM(R2)      POINT TO END OF PARAMETER LIST
         LTR   R2,R2
         BZ    ANSFX1
         MVI   0(R3),C','
         AH    R2,=H'1'
         AH    R3,=H'1'
ANSFX1   MVC   0(4,R3),=C'ANSF'    MOVE IN 'ANSF' PARAMETER
         AH    R2,=H'4'            UPDATE LENGTH COUNTER
         STH   R2,FHXPARML
ENDANSF  EQU   *
*  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *
         CLI   XLKEYWD+1,1         TEST FOR 'XL' COMPILER OPTION
         BNE   ENDXL               SKIP IF 'NOXL' (DEFAULT)
         LH    R2,FHXPARML         LOAD LENGTH OF PARAMETER FIELD
         LA    R3,FHXPARM(R2)      POINT TO END OF PARAMETER LIST
         LTR   R2,R2
         BZ    XLX1
         MVI   0(R3),C','
         AH    R2,=H'1'
         AH    R3,=H'1'
XLX1     MVC   0(2,R3),=C'XL'      MOVE IN 'XL' PARAMETER
         AH    R2,=H'2'            UPDATE LENGTH COUNTER
         STH   R2,FHXPARML
ENDXL    EQU   *
*  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *
         CLI   DMPKEYWD+1,1        TEST FOR 'DUMP' COMPILER OPTION
         BNE   ENDDUMP             SKIP IF 'NODUMP' (DEFAULT)
         LH    R2,FHXPARML         LOAD LENGTH OF PARAMETER FIELD
         LA    R3,FHXPARM(R2)      POINT TO END OF PARAMETER LIST
         LTR   R2,R2
         BZ    DUMPX1
         MVI   0(R3),C','
         AH    R2,=H'1'
         AH    R3,=H'1'
DUMPX1   MVC   0(4,R3),=C'DUMP'    MOVE IN 'DUMP' PARAMETER
         AH    R2,=H'4'            UPDATE LENGTH COUNTER
         STH   R2,FHXPARML
ENDDUMP  EQU   *
*  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *
         CLI   NMEKEYWD+1,1        TEST FOR 'NAME' COMPILER OPTION
         BNE   ENDNAME             SKIP IF 'NAME(MAIN)' (DEFAULT)
         LH    R2,FHXPARML         LOAD LENGTH OF PARAMETER FIELD
         LA    R1,FHXPARM(R2)      POINT TO END OF PARAMETER LIST
         LTR   R2,R2
         BZ    NAMEX1
         MVI   0(R1),C','
         AH    R2,=H'1'
         AH    R1,=H'1'
NAMEX1   MVC   0(5,R1),=C'NAME('   MOVE IN 'NAME' PARAMETER
         AH    R2,=H'5'
         AH    R1,=H'5'
         LH    R3,NAMESUBA+4       LOAD LENGTH OF NEW NAME
         BCTR  R3,R0
         L     R15,NAMESUBA        LOAD ADDR OF NEW NAME FOR MAIN
         EX    R3,MVCR1R15
         LA    R1,1(R3,R1)         BUMP R1 PAST NAME VALUE
         MVI   0(R1),C')'          ADD CLOSING PARENTHESIS
         LA    R2,2(R2,R3)         UPDATE LENGTH COUNTER
         STH   R2,FHXPARML
ENDNAME  EQU   *
*  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *
         CLI   OPTKEYWD+1,0        CHECK FOR DEFAULT FOR 'OPT' PARM
         BE    ENDOPT              SKIP IF TAKING DEFAULT SETUP
         CLI   OPTKEYWD+1,2        TEST FOR 'OPT' COMPILER OPTION
         BH    ENDOPT              SKIP IF NOT SPECIFIED
         LH    R2,FHXPARML         LOAD LENGTH OF PARAMETER FIELD
         LA    R1,FHXPARM(R2)      POINT TO END OF PARAMETER LIST
         LTR   R2,R2
         BZ    OPTX1
         MVI   0(R1),C','
         AH    R2,=H'1'
         AH    R1,=H'1'
OPTX1    MVC   0(4,R1),=C'OPT('    MOVE IN 'OPT' PARAMETER
         AH    R2,=H'4'
         AH    R1,=H'4'
         LH    R3,OPTSUBA+4        LOAD LENGTH OF OPTIMIZE VALUE
         BCTR  R3,R0
         L     R15,OPTSUBA         LOAD ADDR OF OPTIMIZE VALUE
         EX    R3,MVCR1R15
         LA    R1,1(R3,R1)         BUMP R1 PAST OPT VALUE
         MVI   0(R1),C')'          ADD CLOSING PARENTHESIS
         LA    R2,2(R2,R3)         UPDATE LENGTH COUNTER
         STH   R2,FHXPARML
ENDOPT   EQU   *
*  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *
         CLI   OPTKEYWD+1,2        TEST FOR 'NOOPT' COMPILER OPTION
         BL    ENDNOOPT            EITHER 'OPT' OR DEFAULT IN EFFECT
         LH    R2,FHXPARML         LOAD LENGTH OF PARAMETER FIELD
         LA    R3,FHXPARM(R2)      POINT TO END OF PARAMETER LIST
         LTR   R2,R2
         BZ    NOOPTX1
         MVI   0(R3),C','
         AH    R2,=H'1'
         AH    R3,=H'1'
NOOPTX1  MVC   0(10,R3),=C'NOOPTIMIZE'   MOVE IN 'NOOPTIMIZE' PARM
         AH    R2,=H'10'           UPDATE LENGTH COUNTER
         STH   R2,FHXPARML
ENDNOOPT EQU   *
*  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *
         CLI   LCTKEYWD+1,0        TEST FOR 'LINECOUNT' COMPILER OPTION
         BE    ENDLINE             SKIP IF NOT SPECIFIED
         LH    R2,FHXPARML         LOAD LENGTH OF PARAMETER FIELD
         LA    R1,FHXPARM(R2)      POINT TO END OF PARAMETER LIST
         LTR   R2,R2
         BZ    LINEX3
         MVI   0(R1),C','
         AH    R2,=H'1'
         AH    R1,=H'1'
LINEX3   MVC   0(10,R1),=C'LINECOUNT('  MOVE IN 'LINECOUNT' PARAMETER
         AH    R2,=H'10'
         AH    R1,=H'10'
         LH    R3,LINECNTA+4       LOAD LENGTH OF LINECOUNT VALUE
         BCTR  R3,R0
         L     R15,LINECNTA        LOAD ADDR OF LINECOUNT VALUE
         EX    R3,MVCR1R15
         LA    R1,1(R3,R1)         BUMP R1 PAST LC VALUE
         MVI   0(R1),C')'          ADD CLOSING PARENTHESIS
         LA    R2,2(R2,R3)         UPDATE LENGTH COUNTER
         STH   R2,FHXPARML
ENDLINE  EQU   *
*  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *
         CLI   FLGKEYWD+1,1        TEST FOR 'FLAG' COMPILER OPTION
         BNE   ENDFLAG             SKIP IF 'FLAG(I)'  (DEFAULT)
         LH    R2,FHXPARML         LOAD LENGTH OF PARAMETER FIELD
         LA    R1,FHXPARM(R2)      POINT TO END OF PARAMETER LIST
         LTR   R2,R2
         BZ    FLAGX1
         MVI   0(R1),C','
         AH    R2,=H'1'
         AH    R1,=H'1'
FLAGX1   MVC   0(5,R1),=C'FLAG('   MOVE IN 'FLAG' PARAMETER
         AH    R2,=H'5'
         AH    R1,=H'5'
         LH    R3,FLAGSUBA+4       LOAD LENGTH OF FLAG VALUE
         BCTR  R3,R0
         L     R15,FLAGSUBA        LOAD ADDR OF FLAG VALUE
         EX    R3,MVCR1R15
         LA    R1,1(R3,R1)         BUMP R1 PAST FLAG VALUE
         MVI   0(R1),C')'          ADD CLOSING PARENTHESIS
         LA    R2,2(R2,R3)         UPDATE LENGTH COUNTER
         STH   R2,FHXPARML
ENDFLAG  EQU   *
*  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *
         CLI   AUTKEYWD+1,1        TEST FOR 'AUTODBL' COMPILER OPTION
         BNE   ENDAUTO             SKIP IF'AUTODBL(NONE)'  (DEFAULT)
         LH    R2,FHXPARML         LOAD LENGTH OF PARAMETER FIELD
         LA    R1,FHXPARM(R2)      POINT TO END OF PARAMETER LIST
         LTR   R2,R2
         BZ    AUTOX1
         MVI   0(R1),C','
         AH    R2,=H'1'
         AH    R1,=H'1'
AUTOX1   MVC   0(8,R1),=C'AUTODBL('     MOVE IN 'AUTODBL' PARAMETER
         AH    R2,=H'8'
         AH    R1,=H'8'
         LH    R3,AUTOSUBA+4       LOAD LENGTH OF VALUE
         BCTR  R3,R0
         L     R15,AUTOSUBA        LOAD ADDR OF FIELD
         EX    R3,MVCR1R15
         LA    R1,1(R3,R1)         BUMP R1 PAST AUTODBL VALUE
         MVI   0(R1),C')'          ADD CLOSING PARENTHESIS
         LA    R2,2(R2,R3)         UPDATE LENGTH COUNTER
         STH   R2,FHXPARML
ENDAUTO  EQU   *
*  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *
         CLI   TRAKEYWD+1,0        TEST FOR 'TRACE' COMPILER OPTION
         BE    ENDTRACE            SKIP IF NOT SPECIFIED (DEFAULT)
         LH    R2,FHXPARML         LOAD LENGTH OF PARAMETER FIELD
         LA    R1,FHXPARM(R2)      POINT TO END OF PARAMETER LIST
         LTR   R2,R2
         BZ    TRACEX1
         MVI   0(R1),C','
         AH    R2,=H'1'
         AH    R1,=H'1'
TRACEX1  MVC   0(6,R1),=C'TRACE('  MOVE IN 'TRACE' PARAMETER
         AH    R2,=H'6'
         AH    R1,=H'6'
         LH    R3,TRACSUBA+4       LOAD LENGTH OF TRACE VALUE
         BCTR  R3,R0
         L     R15,TRACSUBA        LOAD ADDR OF TRACE VALUE
         EX    R3,MVCR1R15
         LA    R1,1(R3,R1)         BUMP R1 PAST TRACE VALUE
         MVI   0(R1),C')'          ADD CLOSING PARENTHESIS
         LA    R2,2(R2,R3)         UPDATE LENGTH COUNTER
         STH   R2,FHXPARML
ENDTRACE EQU   *
*  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *
         CLI   OPNKEYWD+1,1        TEST FOR 'OPTION' KEYWORD
         BNE   ENDOPTIN
         TM    OPTIONA+6,B'10000000' TEST FOR INPUT STRING
         BZ    ENDOPTIN
         LH    R2,OPTIONA+4        LOAD LENGTH OF OPTION STRING
         LH    R3,FHXPARML         LOAD LENGTH OF PARAMETER FIELD
         LA    R4,0(R2,R3)
         CH    R4,=H'256'
         BNH   OPTIONX1
         L     R0,ADMSG99
         BAL   R14,PUTLINE
         B     RETURN
OPTIONX1 LA    R1,FHXPARM(R3)      LOAD ADDR OF PARM FIELD
         LTR   R3,R3               TEST FOR NO OTHER PARMS
         BZ    OPTIONX2            NO OTHER PARMS
         MVI   0(R1),C','          OTHER PARMS - PUT IN COMMA
         AH    R1,=H'1'            BUMP ADDR
         AH    R4,=H'1'            BUMP COUNT
OPTIONX2 BCTR  R2,R0
         L     R15,OPTIONA         MOVE "OPTION" FIELD
         EX    R2,MVCR1R15            INTO PARAMETER FIELD
         STH   R4,FHXPARML         UPDATE LENGTH COUNTER
ENDOPTIN EQU   *
*  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *
         MVC   COMPNAME(8),DEFAULT SET DEFAULT MEMBER NAME TO IFEAAB
         CLI   MBRKEYWD+1,1        TEST FOR 'MEMBER' KEYWORD SPECIFIED
         BNE   ENDMEMBR            SKIP IF NOT SPECIFIED (DEFAULT)
         LA    R1,COMPNAME
         MVI   0(R1),C' '
         MVC   1(7,R1),0(R1)       BLANK AREA FOR MEMBER NAME, THEN
         LH    R3,MBRSUBA+4        GET LENGTH OF NAME
         BCTR  R3,R0               AND
         L     R15,MBRSUBA
         EX    R3,MVCR1R15         MOVE IT INTO COMPNAME AREA
ENDMEMBR EQU   *
*  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *
         L     R0,ADMSG27          TELL USER WHAT OPTIONS ARE BEING
         BAL   R14,PUTLINE         PASSED TO THE COMPILER
         LH    R0,FHXPARML         GET LENGTH OF PARM FIELD AND
         AH    R0,=H'4'            ADD 4, THEN SAVE IF FOR
         STH   R0,PARMMSGL           PUTTING PARM FIELD TO TERMINAL
         XC    FHXPARML(2),FHXPARML  ZERO OUT ORIGINAL LENGTH FIELD
         LA    R0,PARMMSGL
         BAL   R14,PUTLINE         SHOW USER HIS PARM FIELD
         LH    R0,PARMMSGL         GET LENGTH OF MESSAGE FIELD AND
         SH    R0,=H'4'            SUBTRACT 4, THEN SAVE IF FOR
         STH   R0,FHXPARML           USE BY ATTACHED COMPILER
         BAL   R14,DELETACB        GET RID OF LAST ATTR CONTROL BLOCK
***********************************************************************
**
** AT THIS POINT WE ARE READY TO ATTACH IFEAAB. ALL DATA SETS HAVE BEEN
** ALLOCATED.  I WILL NOW MOVE THE ADDRS TO SP=0 AND XCTL TO THE SECOND
** LOAD WHICH WILL ATTACH IFEAAB , DECONCATENATE, AND FREE THE DDNAMES.
**
         IKJRLSA ANSWER            RELEASE ALL SPACE USED BY PARSE
         IKJRLSA ANSWER1
         SR    R0,R0               ZERO LENGTH FOR GETMAIN
         GETMAIN R,LV=(0)          CLEAN UP SEGMENTS
         L     R1,MAINADDR
         L     R13,SAVE+4          RESTORE OLD SAVE AREA ADDR
         LA    R3,SCNDLOAD         POINT TO 2ND LOAD'S NAME
*        XCTL  (2,12),EPLOC=(3)    CODE BELOW IS MODIFICATION OF XCTL
         LA    R15,XCTLLIST
         ST    R3,0(0,R15)         STORE IN SUP.PARAMLIST
         XC    XCTLLIST+4(4),XCTLLIST+4  ZERO OUT DCB ADDRESS
         LM    R2,R12,28(R13)      RESTORE REGISTERS
         SVC   7                   ISSUE XCTL SVC
***********************************************************************
**
** PUTEGT ERROR PROCESSING
**
PGERROR  DC    0H'0'
         CH    R15,=H'12'
         BH    PGERROR1
         L     R4,ADMSG36
         TPUT  (R4),MSG36L
         B     RETURN
PGERROR1 DC    0H'0'
         CVD   R15,DTEMP
         UNPK  DTEMP(3),DTEMP+6(2)
         OI    DTEMP+2,C'0'
         L     R0,ADMSG34
         MVC   MSGOUT+MSG34L(2),DTEMP+1
         MVC   MSGOUT(MSG34L),0(R0)
         LA    R0,MSGOUT
         BAL   R14,PUTLINE
***********************************************************************
**
** THE FOLLOWING SECTION OF MAIN LOGIC WILL BE EXECUTED IN THE
** EVENT THAT THERE ARE ERRORS ENCOUNTERED WHICH WILL PREVENT THE
** COMMAND PROCESSOR FROM CONTINUING NORMALLY.
**
RETURN   DC    0H'0'
         TCLEARQ INPUT
         XC    ECB,ECB
         STACK PARM=STAKBLOK,DELETE=ALL,MF=(E,IOPL)
         IKJRLSA ANSWER
         IKJRLSA ANSWER1
         LH    R2,FHXLISTL         TEST FOR CONCATENATED FORT DATA SETS
         CH    R2,=H'1'
         BNH   RTRNX2              ONLY ONE DDNAME
         LA    R7,DAIRPB           DECONCATENATE FORTRAN DATA SETS
         USING DAPB10,R7
         MVC   DA10CD,=X'0010'
         XC    DA10FLG(6),DA10FLG
         MVC   DA10DDN,SYSIN
         XC    ECB,ECB
         LA    R1,DAIRPL
         LINK  EP=IKJEFD00         LINK TO DAIR
         LTR   R15,R15
         BZ    RTRNX1A
         ST    R15,SAVER15
         L     R0,ADMSG32
         BAL   R14,PUTLINE
         L     R1,DA10DARC
         SRL   R1,16
         SLL   R1,16
         L     R15,SAVER15
         BAL   R14,DAIRERR
         B     RTRNLP1A
RTRNX1A  XC    SYSIN,SYSIN
RTRNLP1A LR    R3,R2               FREE ALL DDN'S CONTENATED FOR FORT
         BCTR  R3,R0
         SLL   R3,3
         LA    R1,FHXLIST(R3)
         BAL   R14,FREEDDN
         BCT   R2,RTRNLP1A
RTRNX2   LH    R2,=H'11'           FREE DDNAME LIST
RTRNLP2  LR    R3,R2
         BCTR  R3,R0
         SLL   R3,3
         LA    R1,SYSLIN(R3)
         CLI   0(R1),0             TEST FOR NO DDNAME IN LIST
         BE    RTRNELP1
         BAL   R14,FREEDDN
RTRNELP1 BCT   R2,RTRNLP2
         DC    0H'0'
         L     R13,SAVE+4
         RETURN (14,12),T,RC=16    RETURN TO SYSTEM
**
** FOR EXECUTE OPERATION
**
MVCR1R15 MVC   0(*-*,R1),0(R15)
**
**
CLCR1R15 CLC   0(*-*,R1),0(R15)
**
         DROP  R7
***********************************************************************
**
** PUTLINE SECTION
** ON ENTRY -- R0 = ADDR OF OUTPUT LINE, R14 = RETURN ADDR
**
PUTLINE  ST    R14,PTSVE14         SAVE RETURN ADDR
         XC    ECB,ECB
         XC    PTPB(4),PTPB        ZERO OUT PUTLINE OPTION BITS BEFORE:
         PUTLINE PARM=PTPB,OUTPUT=((R0),DATA),MF=(E,IOPL)
         CH    R15,=H'4'
         BE    RETURN
         BH    PTERROR
         L     R14,PTSVE14
         BR    R14
PTERROR  CVD   R15,DTEMP
         UNPK  DTEMP(3),DTEMP+6(2)
         OI    DTEMP+2,C'0'
         L     R0,ADMSG35
         MVC   MSGOUT+MSG35L(2),DTEMP+1
         MVC   MSGOUT(MSG35L),0(R0)
         LA    R4,MSGOUT
         TPUT  (R4),MSG35L
         B     RETURN
**
** END OF PUTLINE SECTION
**
***********************************************************************
**
** OUTPUT MESSAGE 'DATA SET ---'
** R0=LAST PART OF MSG, R1=ADDR OF DSN, R14=RETURN ADDR
**
OUTMSG   STM   R2,R8,MSGSVE28
         MVC   MSGOUT(4),=Y(MSGOUTL,0)
         LR    R3,R1               SAVE ADDRESS
         ST    R14,MSGSVE14
         LA    R4,MSGOUTC
         MVC   0(9,R4),=C'DATA SET '
         AH    R4,=H'9'
         TM    FLAGS,QFLG          TEST FOR QUOTES
         BZ    OUTX1
         MVC   0(2,R4),=C''''''    MOVE TWO QUOTES
         AH    R4,=H'2'
         B     OUTX2
OUTX1    MVI   0(R4),C''''         MOVE ONE QUOTE
         AH    R4,=H'1'
         LH    R2,USERIDL
         BCTR  R2,R0
         LR    R1,R4
         LA    R15,USERID
         EX    R2,MVCR1R15
         LA    R4,1(R2,R4)
OUTX2    LH    R5,0(R3)
         BCTR  R5,R0
         LA    R15,2(R3)
         LR    R1,R4
         EX    R5,MVCR1R15
         LA    R4,1(R4,R5)
         TM    FLAGS,QFLG          TEST FOR QUOTES
         BZ    OUTX3
         MVC   0(2,R4),=C''''''    MOVE TWO QUOTES
         MVI   2(R4),C' '
         AH    R4,=H'3'
         B     OUTX4
OUTX3    MVI   0(R4),C''''         MOVE ONE QUOTE
         MVI   1(R4),C' '
         AH    R4,=H'2'            INCREMENT ADDR
OUTX4    LR    R5,R0
         LH    R6,0(R5)            LOAD LENGTH OF SECOND PART
         SH    R6,=H'3'
         LR    R1,R4
         LA    R15,2(R5)
         EX    R6,MVCR1R15         MOVE LAST PART OF MSG
         LA    R4,1(R4,R6)
         LA    R1,MSGOUT
         SR    R4,R1               COMPUTE LENGTH OF MSG WITH HEADER
         STH   R4,MSGOUT
         LA    R0,MSGOUT
         BAL   R14,PUTLINE
         LM    R2,R8,MSGSVE28
         L     R14,MSGSVE14
         BR    R14
**
** END OF OUTMSG SECTION.
**
***********************************************************************
**
** THIS SECTION PARSES THE DSNAME IN TBUF, OVERLAYS THE OLD PDE WITH
** THE NEW ONE, RELEASES THE CORE, AND RETURNS.
** R1 = ADDR OF OLD PDE, R14 = RETURN ADDR
**
PARSEDSN DC    0H'0'
         ST    R1,SAVER1
         ST    R14,SAVER14
         IKJRLSA ANSWER1
         XC    ECB,ECB
         LA    R1,PARSEPL
         LINK  EP=IKJPARS          PARSE THE DSNAME
         CH    R15,=H'8'           TEST FOR ERROR
         BH    PARSERR             PARSE ERROR
         CH    R15,=H'4'
         BE    PARSERR
         L     R1,SAVER1
         L     R15,ANSWER1
         USING DSNPDL,R15
         MVC   0(24,R1),NEWDSN     OVERLAY OLD PDE
         L     R14,SAVER14
         BR    R14
         DROP  R15
**
** END OF PARSE NEW DSNAME
**
***********************************************************************
**
** MEMNAME TEST SECTION.
** R0=ADDR OF MEMBER NAME, R1=ADDR OF DSN,R14=RETURN ADDR
**
MEMTEST  STM   R2,R8,SAVER28
         ST    R14,SAVER14
         MVC   PDSDCB(PDSDCBL),PDSDCBX  COPY DCB FOR PDS TO SP 0
         LR    R5,R0
         LR    R6,R1
         LA    R7,DAIRPB           ALLOCATE DATA SET
         USING DAPB08,R7
         MVC   DA08CD,=X'0008'
         XC    DA08FLG(6),DA08FLG
         ST    R1,DA08PDSN         STORE ADDR OF DSN
         MVI   DA08DDN,C' '
         MVC   DA08DDN+1(23),DA08DDN
         XC    DA08BLK(16),DA08BLK
         MVI   DA08MNM,C' '
         MVC   DA08MNM+1(15),DA08MNM
         MVI   DA08DSP1,B'00001000' SHR
         MVI   DA08DPS2,B'00001000' KEEP
         MVI   DA08DPS3,B'00001000' KEEP
         XC    DA08CTL+1(4),DA08CTL+1
         MVI   DA08CTL,0
         TM    FLAGS,QFLG          TEST FOR QUOTES
         BO    *+8
         OI    DA08CTL,B'00100000' PREFIX USER ID
         MVC   DA08ALN,=C'ATRFORTX'  MOVE IN ATRCB NAME
         XC    ECB,ECB
         LA    R1,DAIRPL
         LINK  EP=IKJEFD00         LINK TO DAIR
         LTR   R15,R15
         BZ    MEMX1
         ST    R15,SAVER15
         L     R0,ADMSG12
         LR    R1,R6
         BAL   R14,OUTMSG          OUTPUT 'ALLOCATION ERROR'
         L     R1,DA08DARC
         L     R15,SAVER15
         BAL   R14,DAIRERR         OUTPUT DAIR ERROR
         LH    R15,=H'8'
         B     MEMRTRN
MEMX1    LA    R2,PDSDCB
         USING IHADCB,R2
         MVC   DCBDDNAM,DA08DDN    MOVE IN DDNAME
         MVC   PDSOPEN(OPENREFL),OPENREF
         LA    R1,PDSOPEN
         LA    R4,PDSDCB
         OPEN  ((4),(INPUT)),MF=(E,(1))
         TM    DCBOFLGS,B'00010000' TEST FOR OPEN
         BO    MEMX2
         L     R0,ADMSG13
         LR    R1,R6               ADDR OF DSN
         BAL   R14,OUTMSG
         LH    R15,=H'12'
         B     MEMRTRN
MEMX2    FIND  PDSDCB,(R5),D
         LR    R3,R15              SAVE RETURN CODE
         MVC   PDSCLOSE(CLOSREFL),CLOSREF
         LA    R1,PDSCLOSE
         LA    R4,PDSDCB
         CLOSE  ((4)),MF=(E,(1))
         LA    R1,DCBDDNAM
         BAL   R14,FREEDDN
         CH    R3,=H'4'
         BH    MEMRC8
         BL    MEMRC0
         LH    R15,=H'4'           RC=4  MEMBER NAME NOT IN PDS
         B     MEMRTRN
MEMRC0   SR    R15,R15             RC=0 MEMBER NAME IN PDS
         B     MEMRTRN
MEMRC8   L     R0,ADMSG14
         LR    R1,R6               ADDR OF DSN
         BAL   R14,OUTMSG
         LH    R15,=H'16'
MEMRTRN  LM    R2,R8,SAVER28
         L     R14,SAVER14
         BR    R14
         DROP  R2
         DROP  R7
**
** END OF MEMBER TEST SECTION.
**
***********************************************************************
**
** SEARCH CATALOG SECTION
**
** R1=DSNAME ADDR, R14=RETURN ADDR, R15=RC FROM LOCATE
**
SRCHCAT  STM   R2,R8,SAVER28
         ST    R14,SAVER14
         MVI   SRCHDSN,C' '        BLANK OUT DSNAME
         MVC   SRCHDSN+1(51),SRCHDSN
         LA    R3,VOLID
         LA    R4,SRCHDSN
         LA    R5,CATBLK
         MVC   CATCAM(CATCAML),CATCAMX
         MVC   OBTCAM(OBTCAML),OBTCAMX
         ST    R4,CATCAM+4
         ST    R4,OBTCAM+4
         MVC   CATCAM,=XL4'44000000'
         XC    CATCAM+8(4),CATCAM+8
         MVC   OBTCAM,=XL4'C1000000'
         ST    R5,OBTCAM+12
         ST    R5,CATCAM+12
         ST    R3,OBTCAM+8
         LR    R3,R1               SAVE ADDRESS
         LA    R1,SRCHDSN
         TM    FLAGS,QFLG          TEST FOR QUOTES
         BO    SRCHCAT1
         LH    R2,USERIDL          PREFIX USER ID
         BCTR  R2,R0
         LA    R15,USERID
         EX    R2,MVCR1R15
         LA    R1,1(R1,R2)         POINT TO 1 BEYOND .
SRCHCAT1 LH    R2,0(R3)
         BCTR  R2,R0
         LA    R15,2(R3)
         EX    R2,MVCR1R15
         LOCATE CATCAM             EXEC LOCATE MACRO
         LM    R2,R8,SAVER28
         L     R14,SAVER14
         BR    R14                 RETURN
**
** END OF SRCHCAT SECTION
**
***********************************************************************
**
** OBTAIN SECTION
**
** R1=ADDR OF DSNAME, R14=RETURN ADDR
** SRCHCAT MUST BE EXECUTED BEFORE THIS SECTION BECAUSE THE
** VOLUME SERIAL IS REQUIRED AND THE DATA SET NAME MUST BE IN SRCHDSN
**
OBTAIN   STM   R2,R8,SAVER28
         ST    R14,SAVER14
         ST    R1,SAVER1
         MVC   VOLID,VOLSER        MOVE VOL-SER FROM CATBLK
         OBTAIN OBTCAM      GET FORMAT 1 DSCB (CATBLK IS WIPED OUT NOW)
         B     OBTTAB(R15)
OBTTAB   B     OBTCOD00
         B     OBTCOD04
         B     OBTCOD08
         B     OBTCOD12
         B     OBTCODER
         B     OBTCODER
OBTCOD04 EQU   *                   RC=04 - VOL NOT MOUNTED
         L     R1,ADMSG04
         LA    R0,MSGBUFF
         MVC   0(MSG04L,R0),0(R1)
         MVC   MSG04L(6,R0),VOLID
         BAL   R14,OUTMSG
         L     R1,SAVER1
         L     R0,ADMSG05
         MVC   MSGOUT+MSG05L(6),VOLID
         MVC   MSGOUT(MSG05L),0(R0)
         LA    R0,MSGOUT
         BAL   R14,PUTLINE
         B     OBTERRTN
OBTCOD08 L     R1,ADMSG06          RC=08 - DATA SET NOT ON VOLUME
         LA    R0,MSGBUFF
         MVC   0(MSG06L,R0),0(R1)
         MVC   MSG06L(6,R0),VOLID
         L     R1,SAVER1
         BAL   R14,OUTMSG
         B     OBTERRTN
OBTCOD12 L     R1,ADMSG07          RC=12 - PERMANENT I/O ERROR
         LA    R0,MSGBUFF
         MVC   0(MSG07L,R0),0(R1)
         MVC   MSG07L(6,R0),VOLID
         L     R1,SAVER1
         BAL   R14,OUTMSG
         B     OBTERRTN
OBTCODER CVD   R15,DTEMP           RC=16 AND 20 -OBTAIN ERROR CODE XX
         UNPK  DTEMP(3),DTEMP+6(2)
         OI    DTEMP+2,X'F0'
         L     R1,ADMSG08
         LA    R0,MSGBUFF
         MVC   0(MSG08L,R0),0(R1)
         MVC   MSG08L(2,R0),DTEMP+1
         L     R1,SAVER1
         BAL   R14,OUTMSG
OBTERRTN LH    R15,=H'12'
         B     OBTRTRN
OBTCOD00 TM    DS1DSORG,B'01000000' TEST FOR PS DATA SET
         BZ    OBTTSTPO
         LH    R15,=H'4'
         B     OBTRTRN
OBTTSTPO TM    DS1DSORG,B'00000010' TEST FOR PDS
         BZ    OBTDSER
         SR    R15,R15
         B     OBTRTRN
OBTDSER  L     R0,ADMSG09          OUTPUT 'NEITHER PS NOR PDS' ERROR
         L     R1,SAVER1
         BAL   R14,OUTMSG
         LH    R15,=H'8'
OBTRTRN  LM    R2,R8,SAVER28       RETURN
         L     R14,SAVER14
         BR    R14
**
** END OF OBTAIN SECTION
**
***********************************************************************
**
** FREE DDNAME SECTION
**
** R1=ADDR OF DDNAME, R14=RETURN ADDR
**
FREEDDN  STM   R2,R9,FREESV29
         ST    R14,FREESV14
         LA    R7,DAIRPB
         USING DAPB18,R7
         MVC   DA18CD,=X'0018'
         XC    DA18FLG(10),DA18FLG
         MVC   DA18DDN,0(R1)       MOVE DDNAME
         MVC   DA18MNM,BLANK       MEMBER NAME
         MVC   DA18SCLS,BLANK      SYSOUT CLASS
         MVI   DA18DPS2,B'00001000'
         MVI   DA18CTL,X'00'       FREE PERM ALLOC
         MVC   DA18JBNM,BLANK
         XC    ECB,ECB
         LA    R1,DAIRPL
         LINK  EP=IKJEFD00         LINK TO DAIR
         LM    R2,R9,FREESV29
         L     R14,FREESV14
         BR    R14 RETURN
         DROP  R7
**
** END OF FREEDDN SECTION
**
***********************************************************************
**
** THIS SECTION CHECKS THE CODE RETURNED FROM DAIR AND OUTPUT THE
** MESSAGE CORRESPONDING TO THE TYPE. REG 1=DARC& CTRC, REG 14=RETURN
** ADDR, AND REG 15=RC FROM DAIR
**
DAIRERR  ST    R14,DAIRERRN        SAVE RETURN ADDR
         STM   R2,R5,DAIRERRO
         B     DAIRERR1(R15)
DAIRERR1 B     DAIRERRG RC=0       DAIR IS O.K. -- RETURN
         B     DAIRERR5 RC=4       PARM LIST WAS INVALID
         B     DAIRERR2 RC=8       ERROR IN CATALOG MANAGEMENT
         B     DAIRERR3 RC=12      ERROR IN DYNAMIC ALLOCATION
         B     DAIRERR4 RC=16      NO TIOT ENTRIES
         B     DAIRERR5 RC=20      DDNAME IS UNAVAILABLE
         B     DAIRERR5 RC=24      DSNAME IS MEMBER OF CONCATENATED GRP
         B     DAIRERR5 RC=28      DDNAME/DSNAME NOT CURRENTLY ALLOCATD
         B     DAIRERR5 RC=32      DISP=NEW CANNOT BE SPECIFIED
         B     DAIRERR5 RC=36      ERROR IN CATALOG INFORMATION ROUTINE
         B     DAIRERR5 RC=40      RETURN AREA FOR QUALIFIERS TOO SMALL
         B     DAIRERR5 RC=44 DISP=OLD, MOD, OR SHR WITH NO VOL-SER NO.
DAIRERR2 LR    R2,R1               (RC=8)
         LH    R5,=H'4'
         MVC   MSGBUFF(DAIRERRR),DAIRERRP
DAIRER21 SRDL  R2,4
         SRL   R3,28
         IC    R1,DAIRTAB(R3)
         STC   R1,MSGBUFF+DAIRERRR-5(R5)
         BCT   R5,DAIRER21
         LA    R0,MSGBUFF
         BAL   R14,PUTLINE
         B     DAIRERRG
DAIRERR3 SRL   R1,16               (RC=12)   SHIFT OUT CTRC
         LR    R2,R1
         LH    R5,=H'4'
         MVC   MSGBUFF(DAIRERRU),DAIRERRS
DAIRER31 SRDL  R2,4
         SRL   R3,28
         IC    R1,DAIRTAB(R3)
         STC   R1,MSGBUFF+DAIRERRU-5(R5)
         BCT   R5,DAIRER31
         LA    R0,MSGBUFF
         BAL   R14,PUTLINE
         B     DAIRERRG
DAIRERR4 LA    R0,DAIRERRV         (RC=16)
         BAL   R14,PUTLINE
         B     DAIRERRG
DAIRERR5 CVD   R15,DAIRERRM        (RC=4,20,24,28,32,36,40,44)
         UNPK  DAIRERRM(3),DAIRERRM+6(2)
         OI    DAIRERRM+2,X'F0'
         MVC   MSGBUFF(DAIRERRZ),DAIRERRX
         MVC   MSGBUFF+DAIRERRZ-2(2),DAIRERRM+1
         LA    R0,MSGBUFF
         BAL   R14,PUTLINE
DAIRERRG LM    R2,R5,DAIRERRO
         L     R14,DAIRERRN
         BR    R14
**
**   DAIR ERROR MESSAGES
**
DAIRERRP DC    Y(DAIRERRR,0)
         DC    C'CATALOG MANAGEMENT ERROR CODE '
DAIRERRQ DS    CL4
DAIRERRR EQU   *-DAIRERRP
DAIRERRS DC    Y(DAIRERRU,0)
         DC    C'DYNAMIC ALLOCATION ERROR CODE '
DAIRERRT DS    CL4
DAIRERRU EQU   *-DAIRERRS
DAIRERRV DC    Y(DAIRERRW,0)
         DC    C'UNABLE TO ALLOCATE, MAXIMUM NUMBER OF ALLOCATIONS EXCEX
               EDED'
DAIRERRW EQU   *-DAIRERRV
DAIRERRX DC    Y(DAIRERRZ,0)
         DC    C'ERROR RETURNED FROM DYNAMIC ALLOCATION CODE '
DAIRERRY DS    CL2
DAIRERRZ EQU   *-DAIRERRX
DAIRTAB  DC    C'0123456789ABCDEF'
         DC    0H'0'
**
** END OF DAIR ERROR PROCESSING
**
***********************************************************************
**
** THIS SECTION BUILDS OR DELETES AN ATTRIBUTE CONTROL BLOCK TO BE
** USED DURING ALLOCATION OF MOST COMPILER DDNAMES.
** CALLING BUILDACB AUTOMATICALLY DELETES THE PREVIOUS ATTRIBUTE
** CONTROL BLOCK, ATRFORTX, IF IT EXISTED.  CALLING DELETACB BEFORE
** CALLING BUILDACB ISN'T NECESSARY BUT ISN'T HARMFUL EITHER.
**
BUILDACB MVI   BUILDSW,X'01'       SET BUILD SWITCH ON
         B     BUILDX0
DELETACB MVI   BUILDSW,X'00'       SET BUILD SWITCH OFF
BUILDX0  ST    R14,SAVER14         SAVE RETURN ADDRESS
         LA    R7,DAIRPB
         USING DAPB34,R7
         XC    DAIRPB(20),DAIRPB   ZERO OUT ATR FIELDS BEFORE USING
         MVC   DA34CD,=X'0034'
         OI    DA34CTRL,DA34SRCH   SEARCH FOR ATTR NAME ATRFORTX
         MVC   DA34NAME,=C'ATRFORTX'
         LA    R0,DAIRATCB
         ST    R0,DA34ADDR
         XC    ECB,ECB
         LA    R1,DAIRPL
         LINK  EP=IKJEFD00         LINK TO DAIR
         LTR   R15,R15
         BZ    BUILDX1
         ST    R15,SAVER15
         L     R0,ADMSG39
         BAL   R14,PUTLINE
         L     R1,DA34DARC
         SRL   R1,16
         SLL   R1,16
         L     R15,SAVER15
         BAL   R14,DAIRERR         OUTPUT ALLOCATION ERROR
         B     RETURN
BUILDX1  EQU   *
         TM    DA34FLG,DA34FIND    WAS THE NAME FOUND?
         BZ    BUILDX2             IF ZERO, NAME NOT IN USE
         XC    DAIRPB(20),DAIRPB   ZERO OUT ATR FIELDS BEFORE USING
         MVC   DA34CD,=X'0034'
         OI    DA34CTRL,DA34UNCH   UNCHAIN ATTR NAME ATRFORTX
         MVC   DA34NAME,=C'ATRFORTX'
         LA    R0,DAIRATCB
         ST    R0,DA34ADDR
         XC    ECB,ECB
         LA    R1,DAIRPL
         LINK  EP=IKJEFD00         LINK TO DAIR
         LTR   R15,R15
         BZ    BUILDX2
         ST    R15,SAVER15
         L     R0,ADMSG38
         BAL   R14,PUTLINE
         L     R1,DA34DARC
         SRL   R1,16
         SLL   R1,16
         L     R15,SAVER15
         BAL   R14,DAIRERR         OUTPUT ALLOCATION ERROR
         B     RETURN
BUILDX2  CLI   BUILDSW,X'00'
         BE    ATRETURN
         XC    DA34FLG(6),DA34FLG  ZERO OUT FIELDS BEFORE USE
         OI    DA34CTRL,DA34CHN    BUILD AN ATRCB
         MVC   DA34NAME,=C'ATRFORTX'
         LA    R0,DAIRATCB
         ST    R0,DA34ADDR
         XC    ECB,ECB
         LA    R1,DAIRPL
         LINK  EP=IKJEFD00         LINK TO DAIR
         LTR   R15,R15
         BZ    ATRETURN
         ST    R15,SAVER15
         L     R0,ADMSG37
         BAL   R14,PUTLINE
         L     R1,DA34DARC
         SRL   R1,16
         SLL   R1,16
         L     R15,SAVER15
         BAL   R14,DAIRERR         OUTPUT ALLOCATION ERROR
         B     RETURN
         DROP  R7
ATRETURN L     R14,SAVER14
         BR    R14
**
** END OF BUILD/DELETE AN ATTRIBUTE CONTROL BLOCK CODE
**
***********************************************************************
**
** CONSTANTS, ADDRS, PARM BLOCK, PARM LISTS, AND OTHER TRIVIA
**
         DS    0F
BLANK    DC    CL8' '
DEFAULT  DC    CL8'IFEAAB  '
PGPBX    PUTGET OUTPUT=OLDX,MF=L
OLDX     DC    A(1)
         DC    A(0)                PROMPT MESSAGE ADDR
OPENREF  OPEN  (,),MF=L
OPENREFL EQU   *-OPENREF
CLOSREF  CLOSE  (,),MF=L
CLOSREFL EQU   *-CLOSREF
**
** CAM LISTS, ETC.
**
CATCAMX  CAMLST NAME,SRCHDSNX,,CATBLKX
OBTCAMX  CAMLST SEARCH,SRCHDSNX,VOLIDX,CATBLKX
SRCHDSNX DS    CL52
VOLIDX   DS    CL6
CATBLKX  DS    0D
         PRINT NOGEN
**
** DCB FOR TESTING FOR MEMBER NAME IN PDS USING FIND MACRO
**
PDSDCBX  DCB   DSORG=PO,MACRF=R,DDNAME=$$PDS
PDSDCBL  EQU   *-PDSDCBX
**
** ADDRESS CONSTANTS FOR MESSAGES CONTAINED IN THE MESSAGE CSECT
**
ADMSG01  DC    A(MSG01)
ADMSG02  DC    A(MSG02)
ADMSG03S DC    A(MSG03S)
ADMSG03O DC    A(MSG03O)
ADMSG03P DC    A(MSG03P)
ADMSG03T DC    A(MSG03T)
ADMSG03I DC    A(MSG03I)
ADMSG04  DC    A(MSG04)
ADMSG05  DC    A(MSG05)
ADMSG06  DC    A(MSG06)
ADMSG07  DC    A(MSG07)
ADMSG08  DC    A(MSG08)
ADMSG09  DC    A(MSG09)
ADMSG10  DC    A(MSG10)
ADMSG11  DC    A(MSG11)
ADMSG12  DC    A(MSG12)
ADMSG13  DC    A(MSG13)
ADMSG14  DC    A(MSG14)
ADMSG15  DC    A(MSG15)
ADMSG16  DC    A(MSG16)
ADMSG17S DC    A(MSG17S)
ADMSG17N DC    A(MSG17N)
ADMSG17M DC    A(MSG17M)
ADMSG18A DC    A(MSG18A)
ADMSG18B DC    A(MSG18B)
ADMSG18C DC    A(MSG18C)
ADMSG19A DC    A(MSG19A)
ADMSG19B DC    A(MSG19B)
ADMSG19C DC    A(MSG19C)
ADMSG20A DC    A(MSG20A)
ADMSG20B DC    A(MSG20B)
ADMSG20C DC    A(MSG20C)
ADMSG21A DC    A(MSG21A)
ADMSG21B DC    A(MSG21B)
ADMSG21C DC    A(MSG21C)
ADMSG22  DC    A(MSG22)
ADMSG23  DC    A(MSG23)
ADMSG24A DC    A(MSG24A)
ADMSG24B DC    A(MSG24B)
ADMSG24C DC    A(MSG24C)
ADMSG25  DC    A(MSG25)
ADMSG26  DC    A(MSG26)
ADMSG27  DC    A(MSG27)
ADMSG28  DC    A(MSG28)
ADMSG29  DC    A(MSG29)
ADMSG30  DC    A(MSG30)
ADMSG31  DC    A(MSG31)
ADMSG32  DC    A(MSG32)
ADMSG33  DC    A(MSG33)
ADMSG34  DC    A(MSG34)
ADMSG35  DC    A(MSG35)
ADMSG36  DC    A(MSG36)
ADMSG37  DC    A(MSG37)
ADMSG38  DC    A(MSG38)
ADMSG39  DC    A(MSG39)
ADMSG40  DC    A(MSG40)
ADMSG41  DC    A(MSG41)
ADMSG42  DC    A(MSG42)
ADMSG43  DC    A(MSG43)
ADMSG44  DC    A(MSG44)
ADMSG45  DC    A(MSG45)
ADMSG46  DC    A(MSG46)
ADMSG47  DC    A(MSG47)
ADMSG48  DC    A(MSG48)
ADMSG99  DC    A(MSG99)
         LTORG
***********************************************************************
**
**
** PARAMETER CONTROL LIST FOR PARSE
**
PPLPARM  IKJPARM DSECT=PDL
*  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *
FHXDSNA  IKJPOSIT DSNAME,LIST,PROMPT='FORTRAN DATA SET NAME'
*  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *
MODKEYWD IKJKEYWD DEFAULT='NOMOD'
         IKJNAME 'MOD'
         IKJNAME 'NOMOD'
*  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *
PRNKEYWD IKJKEYWD DEFAULT='NOPRINT'
         IKJNAME 'PRINT',SUBFLD=PRTDSNSF
         IKJNAME 'SYSOUT'
         IKJNAME 'NOPRINT'
*  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *
IDXKEYWD IKJKEYWD DEFAULT='NOINDEX'
         IKJNAME 'INDEX',SUBFLD=IDXDSNSF
         IKJNAME 'INDEXOUT'
         IKJNAME 'NOINDEX'
*  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *
MSGKEYWD IKJKEYWD DEFAULT='MSG'
         IKJNAME 'MSG'
         IKJNAME 'NOMSG'
*  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *
TASKEYWD IKJKEYWD
         IKJNAME 'TASKLIB',SUBFLD=TASKSUBF
         IKJNAME 'LIB',SUBFLD=TASKSUBF
***********************************************************************
**
**    DEFINE THE COMPILER OPTIONS RECOGNIZED BY THIS PROMPTER
**
**               (SIZE AND DECK ARE NOT RECOGNIZED)
**
**    (XL, TRACE AND DUMP ARE RECOGNIZED BUT ARE NOT SHOWN IN HELP)
**
***********************************************************************
SRCKEYWD IKJKEYWD
         IKJNAME 'SOURCE'
         IKJNAME 'NOSOURCE'
*  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *
BCDKEYWD IKJKEYWD
         IKJNAME 'BCD'
         IKJNAME 'EBCDIC'
*  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *
LSTKEYWD IKJKEYWD
         IKJNAME 'LIST'
         IKJNAME 'NOLIST'
*  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *
OBJKEYWD IKJKEYWD DEFAULT='OBJECT'
         IKJNAME 'OBJECT',SUBFLD=OBJDSNSF
         IKJNAME 'LOAD',SUBFLD=OBJDSNSF
         IKJNAME 'NOOBJECT'
         IKJNAME 'NOLOAD'
*  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *
MAPKEYWD IKJKEYWD
         IKJNAME 'MAP'
         IKJNAME 'NOMAP'
*  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *
FMTKEYWD IKJKEYWD
         IKJNAME 'FORMAT'
         IKJNAME 'EDIT'
         IKJNAME 'NOFORMAT'
         IKJNAME 'NOEDIT'
*  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *
GOSKEYWD IKJKEYWD
         IKJNAME 'GOSTMT'
         IKJNAME 'ID'
         IKJNAME 'NOGOSTMT'
         IKJNAME 'NOID'
*  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *
XRFKEYWD IKJKEYWD
         IKJNAME 'XREF'
         IKJNAME 'NOXREF'
*  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *
ALCKEYWD IKJKEYWD
         IKJNAME 'ALC'
         IKJNAME 'NOALC'
*  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *
ANSKEYWD IKJKEYWD
         IKJNAME 'ANSF'
         IKJNAME 'NOANSF'
*  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *
TRMKEYWD IKJKEYWD
         IKJNAME 'TERM',SUBFLD=TRMDSNSF
         IKJNAME 'TERMINAL',SUBFLD=TRMDSNSF
         IKJNAME 'TERMOUT'
         IKJNAME 'NOTERM'
         IKJNAME 'NOTERMINAL'
*  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *
XLKEYWD  IKJKEYWD
         IKJNAME 'XL'
         IKJNAME 'NOXL'
*  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *
DMPKEYWD IKJKEYWD
         IKJNAME 'DUMP'
         IKJNAME 'NODUMP'
*  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *
NMEKEYWD IKJKEYWD
         IKJNAME 'NAME',SUBFLD=NAMESUBF
*  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *
OPTKEYWD IKJKEYWD
         IKJNAME 'OPT',SUBFLD=OPTSUBF
         IKJNAME 'OPTIMIZE',SUBFLD=OPTSUBF
         IKJNAME 'NOOPT'
         IKJNAME 'NOOPTIMIZE'
*  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *
LCTKEYWD IKJKEYWD
         IKJNAME 'LINECOUNT',SUBFLD=LNECNTSF
         IKJNAME 'LINECNT',SUBFLD=LNECNTSF
         IKJNAME 'LC',SUBFLD=LNECNTSF
*  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *
FLGKEYWD IKJKEYWD
         IKJNAME 'FLAG',SUBFLD=FLAGSUBF
*  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *
AUTKEYWD IKJKEYWD
         IKJNAME 'AUTODBL',SUBFLD=AUTOSUBF
*  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *
TRAKEYWD IKJKEYWD
         IKJNAME 'TRACE',SUBFLD=TRACSUBF
*  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *
OPNKEYWD IKJKEYWD
         IKJNAME 'OPTION',SUBFLD=OPTIONSF
         IKJNAME 'NOOPTION'
*  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *
MBRKEYWD IKJKEYWD
         IKJNAME 'MEMBER',SUBFLD=MBRSUBF
***********************************************************************
**
**    DEFINE SUBFIELDS FOR THE FOLLOWING OPTIONS AND KEYWORDS:
**
**    KEYWORDS:  INDEX, PRINT, OPTION
**
**    OPTIONS:   NAME, OPTIMIZE, LINECOUNT, OBJECT, TERMINAL
**    OPTIONS:   FLAG, AUTODBL, TRACE
**
***********************************************************************
OBJDSNSF IKJSUBF
OBJDSNA  IKJPOSIT DSNAME
*  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *
PRTDSNSF IKJSUBF
PRNTDSNA IKJPOSIT DSTHING
*  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *
IDXDSNSF IKJSUBF
INDXDSNA IKJPOSIT DSTHING
*  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *
TRMDSNSF IKJSUBF
TERMDSNA IKJPOSIT DSTHING
*  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *
NAMESUBF IKJSUBF
NAMESUBA IKJIDENT 'NAME',MAXLNTH=6,DEFAULT='MAIN  ',FIRST=ALPHA,       X
               OTHER=ANY
*  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *
OPTSUBF  IKJSUBF
OPTSUBA  IKJIDENT 'OPT',MAXLNTH=1,FIRST=NUMERIC,DEFAULT='2'
*  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *
LNECNTSF IKJSUBF
LINECNTA IKJIDENT 'LINECOUNT VALUE',FIRST=NUMERIC,OTHER=NUMERIC,       X
               MAXLNTH=3,DEFAULT='78'
*  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *
FLAGSUBF IKJSUBF
FLAGSUBA IKJIDENT 'FLAG',MAXLNTH=1,DEFAULT='I'
*  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *
AUTOSUBF IKJSUBF
AUTOSUBA IKJIDENT 'AUTODBL',MAXLNTH=8,DEFAULT='NONE',FIRST=ANY,        X
               OTHER=ANY
*  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *
TRACSUBF IKJSUBF
TRACSUBA IKJIDENT 'TRACE VALUE',FIRST=NUMERIC,OTHER=NUMERIC,           X
               MAXLNTH=8,DEFAULT='0'
*  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *
OPTIONSF IKJSUBF
OPTIONA  IKJPOSIT QSTRING
*  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *
MBRSUBF  IKJSUBF
MBRSUBA  IKJIDENT 'MEMBER',MAXLNTH=8,DEFAULT='IFEAAB  ',FIRST=ALPHA,   X
               OTHER=ANY
*  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *
TASKSUBF IKJSUBF
TASKDSNA IKJPOSIT DSNAME,LIST,PROMPT='TASKLIB DATA SET NAME'
         IKJENDP
***********************************************************************
**
** PARSE PARM LIST FOR PROMPTED DSNAMES
**
DSNPPL   IKJPARM DSECT=DSNPDL
NEWDSN   IKJPOSIT DSNAME,PROMPT='DATA SET NAME'
         IKJENDP
         PRINT NOGEN
**
** MAPPING DSECTS
**
         IKJCPPL
         IKJPPL
         IKJDAPL
         IKJDAP04
         IKJDAP08
         IKJDAP0C
         IKJDAP10
         IKJDAP18
         IKJDAP1C
         IKJDAP30
         IKJDAP34
         PRINT NOGEN
         DCBD  DSORG=PO,DEVD=DA
***********************************************************************
**
**  DSECT FOR USE BY SECOND LOAD
**
**
RENTDSCT DSECT
         DS    0D
SAVE     DS    18F
DTEMP    DS    D
ECB      DS    F
FORTXID  DS    3F                  VERSION # TO BE CHECKED BY 2ND LOAD
PARSEPL  DS    7F                  PARSE PARAMETER LIST
ANSWER   DS    F
ANSWER1  DS    F
DAIRPB   DS    25F                 USED FOR ALL DAIR PARM BLOCKS
DAIRATCB DS    0F                  USED FOR DAIR ATTR CONTROL BLOCK
         DS    XL8
DAIMASK  DS    0XL8
         DS    XL6                 RESERVED
DAILABEL DS    XL1                 LABEL FIELD FOR INOUT OR OUTIN
         DS    XL1                 RESERVED
         DS    XL3                 RESERVED
DAIEXPDT DS    XL3                 EXPIRATION DATE
         DS    XL2                 RESERVED
DAIBUFNO DS    XL1                 NUMBER OF BUFFERS TO BE USED
DAIBFTEK DS    XL1                 BUFFER TECHNIQUE TO BE USED
DAIBUFL  DS    XL2                 MAXIMUM BUFFER LENGTH
DAIEROPT DS    XL1                 ERROR OPTION
DAIKEYLE DS    XL1                 KEY LENGTH
         DS    XL6                 RESERVED
DAIRECFM DS    XL1                 RECORD FORMAT
DAIOPTCD DS    XL1                 OPT CODE
DAIBLKSI DS    XL2                 BLOCK SIZE
DAILRECL DS    XL2                 LOGICAL RECORD LENGTH
DAINCP   DS    XL1                 NUMBER OF CHANNEL PROGRAMS BEFORE
         DS    XL17                  CHECK--REMAINDER IS RESERVED
DA0CDDN  EQU   DAIRPB+12           DA0CDDN IS NOT DEFINED IN THE DSECT
IOPL     DC    0A(0)
IOPLUPT  DS    A
IOPLECT  DS    A
IOPLECB  DS    A
IOPLIOPB DS    A
MSGSVE28 DS    7F
MSGSVE14 DS    F
SAVER28  DS    7F
SAVER14  DS    F
SAVER1   DS    F
SAVER15  DS    F
PTSVE14  DS    F
FREESV29 DS    8F
FREESV14 DS    F
USERIDL  DS    H
USERID   DS    CL9                 WILL INCLUDE PERIOD (.)
FHXDSNL  DS    H
FHXDSN   DS    CL60
TBUFL    DS    H
TBUFOFF  DS    H
TBUF     DS    CL60
FHXMEM   DS    CL8
OBJMEM   DS    CL8
OBJDSNL  DS    H
OBJDSN   DS    CL60
PRNTDSNL DS    H
PRNTDSN  DS    CL60
PRNTMEM  DS    CL8
INDXDSNL DS    H
INDXDSN  DS    CL60
INDXMEM  DS    CL8
TERMDSNL DS    H
TERMDSN  DS    CL60
TERMMEM  DS    CL8
SAVEDSN  DS    H,CL60
         DS    0F
MAINADDR DS    F                   ADDR MAIN FOR ADDRS TO BE PASSED TO
*                                     SECOND LOAD MODULE
MAINLNTH DS    F                   LENGTH OF MAIN IN SP=0
COMPNAME DC    CL8'IFEAAB  '
DAIRPL   DS    5F                  DAIR PARAMETER BLOCK
FHXDDNAM DC    H'88'
SYSLIN   DC    CL8'SYSLIN  '       OBJECT OUTPUT DDNAME
TASKLIB  DC    XL8'00000000'       RESERVED FOR 1ST TASKLIB ALLOCATION
TASKLIB2 DC    XL8'00000000'       RESERVED FOR 2ND TASKLIB ALLOCATION
TASKLIB3 DC    XL8'00000000'       RESERVED FOR 3RD TASKLIB ALLOCATION
SYSIN    DC    CL8'SYSIN   '       SOURCE INPUT DDNAME
SYSPRINT DC    CL8'SYSPRINT'       COMPILER LISTING OUTPUT DDNAME
SYSPUNCH DC    XL8'00000000'       SYSPUNCH IS NEVER ALLOCATED BY FORTX
SYSUT1   DC    CL8'SYSUT1  '       DDNAME FOR FORMAT AND/OR TERM OPTION
SYSUT2   DC    CL8'SYSUT2  '       DDNAME FOR XREF OPTION WORD DATA SET
SYSTERM  DC    CL8'SYSTERM '       DDNAME FOR TERM OPTION OUTPUT
SYSINDEX DC    CL8'SYSINDEX'       DDNAME FOR SUMMARY FEATURE
FHXLISTL DS    H
FHXLIST  DS    CL80
PARMMSGL DS    H
FHXPARML DS    H
FHXPARM  DS    CL256
         PRINT GEN
EPNAMEL  DS    H
CMDLEN   DS    H
CMDOFF   DS    H
CMDBUF   DS    CL44
DSNLEN   DS    H
DSNAME   DS    CL44
DAIRERRM DS    D
DAIRERRN DS    F                   SAVE
DAIRERRO DS    4F                  SAVE R2 THRU R5
PTPB     PUTLINE MF=L
STAKBLOK STACK MF=L
PGPB     PUTGET OUTPUT=OLD,MF=L
PGPBL    EQU   *-PGPB
OLD      DC    A(1)
         DC    A(0)                PROMPT MESSAGE ADDR
CATCAM   CAMLST NAME,SRCHDSN,,CATBLK
CATCAML  EQU   *-CATCAM
OBTCAM   CAMLST SEARCH,SRCHDSN,VOLID,CATBLK
OBTCAML  EQU   *-OBTCAM
PDSOPEN  OPEN  (,),MF=L
PDSCLOSE CLOSE (,),MF=L
PDSDCB   DCB   DSORG=PO,MACRF=R,DDNAME=$$PDS
XCTLLIST DS    F                   EPLOC OR DE PARAMETER ADDRESS
         DS    F                   DCB ADDRESS (WILL BE ZEROED)
SRCHDSN  DS    CL52
VOLID    DS    CL6
CATBLK   DS    0D
         DS    CL265
VOLSER   EQU   CATBLK+6
DS1DSORG EQU   CATBLK+38           FORMAT 1 DSCB (OBTAINED) IN CATBLK
UTX1DSN  DC    H'7',C'&&SYSUT1'
UTX2DSN  DC    H'7',C'&&SYSUT2'
MSGOUT   DC    Y(MSGOUTL,0)
MSGOUTC  DS    CL120
MSGOUTL  EQU   *-MSGOUT
MSGBUFF  DS    CL40                USED FOR DYNAMIC MESSAGES
FLAGS    DS    X
BUILDSW  DC    X'00'               BUILD ATTR CONTROL BLOCK SWITCH
RENTLEN  EQU   *-RENTDSCT          LENGTH OF WHOLE DAMN DSECT
***********************************************************************
**
** MESSAGES -- ERRORS, INFO, ETC.
**
MESSAGE  CSECT
MSG01    DC    Y(MSG01L,0)
         DC    C'PARSE ERROR CODE '
MSG01L   EQU   *-MSG01
MSG02    DC    Y(MSG02L),C'NOT IN CATALOG'
MSG02L   EQU   *-MSG02
MSG03S   DC    Y(MSG03SL,0)
         DC    C' ENTER DATA SET NAME FOR FORT- '
MSG03SL  EQU   *-MSG03S
MSG03O   DC    Y(MSG03OL,0)
         DC    C' ENTER DATA SET NAME FOR OBJECT- '
MSG03OL  EQU   *-MSG03O
MSG03P   DC    Y(MSG03PL,0)
         DC    C' ENTER DATA SET NAME FOR PRINT- '
MSG03PL  EQU   *-MSG03P
MSG03T   DC    Y(MSG03TL,0)
         DC    C' ENTER DATA SET NAME FOR TERM- '
MSG03TL  EQU   *-MSG03T
MSG03I   DC    Y(MSG03IL,0)
         DC    C' ENTER DATA SET NAME FOR INDEX- '
MSG03IL  EQU   *-MSG03I
MSG04    DC    Y(MSG04L),C'IS ON VOLUME '
MSG04L   EQU   *-MSG04
MSG05    DC    Y(MSG05L,0)
         DC    C'VOLUME NOT MOUNTED'
MSG05L   EQU   *-MSG05
MSG06    DC    Y(MSG06L),C'NOT ON VOLUME '
MSG06L   EQU   *-MSG06
MSG07    DC    Y(MSG07L),C'ON VOLUME '
MSG07C   DS    CL6
         DC    C' HAS AN I/O ERROR'
MSG07L   EQU   *-MSG07
MSG08    DC    Y(MSG08L),C'OBTAIN ERROR CODE '
MSG08L   EQU   *-MSG08
MSG09    DC    Y(MSG09L),C'IS NEITHER PS NOR PDS'
MSG09L   EQU   *-MSG09
MSG10    DC    Y(MSG10L),C'IS NOT PARTITIONED'
MSG10L   EQU   *-MSG10
MSG11    DC    Y(MSG11L),C'IS PARTITIONED -- ''TEMPNAME'' ASSUMED AS MEX
               MBER NAME'
MSG11L   EQU   *-MSG11
MSG12    DC    Y(MSG12L),C'ALLOCATION ERROR'
MSG12L   EQU   *-MSG12
MSG13    DC    Y(MSG13L),C'OPEN ERROR'
MSG13L   EQU   *-MSG13
MSG14    DC    Y(MSG14L),C'DIRECTORY I/O ERROR'
MSG14L   EQU   *-MSG14
MSG15    DC    Y(MSG15L),C'DOES NOT CONTAIN MEMBER NAME'
MSG15L   EQU   *-MSG15
MSG16    DC    Y(MSG16L),C'TO BE COMPILED'
MSG16L   EQU   *-MSG16
MSG17S   DC    Y(MSG17SL),C'TO CONTAIN OBJECT MODULE WITH DISP OF SHR'
MSG17SL  EQU   *-MSG17S
MSG17N   DC    Y(MSG17NL),C'TO CONTAIN OBJECT MODULE WITH DISP OF NEW'
MSG17NL  EQU   *-MSG17N
MSG17M   DC    Y(MSG17ML),C'TO CONTAIN OBJECT MODULE WITH DISP OF MOD'
MSG17ML  EQU   *-MSG17M
MSG18A   DC    Y(MSG18AL,0)
         DC    C'ERROR OCCURRED IN ALLOCATING ''PRINT'' TO SYSOUT'
MSG18AL  EQU   *-MSG18A
MSG18B   DC    Y(MSG18BL,0)
         DC    C'ERROR OCCURRED IN ALLOCATING ''TERM'' TO SYSOUT'
MSG18BL  EQU   *-MSG18B
MSG18C   DC    Y(MSG18CL,0)
         DC    C'ERROR OCCURRED IN ALLOCATING ''INDEX'' TO SYSOUT'
MSG18CL  EQU   *-MSG18C
MSG19A   DC    Y(MSG19AL,0)
         DC    C'''PRINT'' NOT SPECIFIED'
MSG19AL  EQU   *-MSG19A
MSG19B   DC    Y(MSG19BL,0)
         DC    C'''NOTERM'' SPECIFIED'
MSG19BL  EQU   *-MSG19B
MSG19C   DC    Y(MSG19CL,0)
         DC    C'''INDEX'' NOT SPECIFIED'
MSG19CL  EQU   *-MSG19C
MSG20A   DC    Y(MSG20AL,0)
         DC    C'''PRINT'' DATA SET ALLOCATED TO SYSOUT=A'
MSG20AL  EQU   *-MSG20A
MSG20B   DC    Y(MSG20BL,0)
         DC    C'''TERM'' DATA SET ALLOCATED TO SYSOUT=A'
MSG20BL  EQU   *-MSG20B
MSG20C   DC    Y(MSG20CL,0)
         DC    C'''INDEX'' DATA SET ALLOCATED TO SYSOUT=A'
MSG20CL  EQU   *-MSG20C
MSG21A   DC    Y(MSG21AL),C'TO CONTAIN SYSPRINT OUTPUT'
MSG21AL  EQU   *-MSG21A
MSG21B   DC    Y(MSG21BL),C'TO CONTAIN SYSTERM OUTPUT'
MSG21BL  EQU   *-MSG21B
MSG21C   DC    Y(MSG21CL),C'TO CONTAIN SYSINDEX OUTPUT'
MSG21CL  EQU   *-MSG21C
MSG22    DC    Y(MSG22L,0)
         DC    C'ERROR OCCURRED WHEN ALLOCATING SYSTERM'
MSG22L   EQU   *-MSG22
MSG23    DC    Y(MSG23L,0)
         DC    C'ERROR OCCURRED WHEN ALLOCATING SYSINDEX'
MSG23L   EQU   *-MSG23
MSG24A   DC    Y(MSG24AL,0)
         DC    C'''PRINT'' DATA SET ALLOCATED TO YOUR TERMINAL'
MSG24AL  EQU   *-MSG24A
MSG24B   DC    Y(MSG24BL,0)
         DC    C'''TERM'' DATA SET ALLOCATED TO YOUR TERMINAL'
MSG24BL  EQU   *-MSG24B
MSG24C   DC    Y(MSG24CL,0)
         DC    C'''INDEX'' DATA SET ALLOCATED TO YOUR TERMINAL'
MSG24CL  EQU   *-MSG24C
MSG25    DC    Y(MSG25L,0)
         DC    C'FORT DATA SET NAME INPUT IN QUOTES'
MSG25L   EQU   *-MSG25
MSG26    DC    Y(MSG26L,0)
         DC    C'''OBJECT'' OR ''LOAD'' NOT SPECIFIED'
MSG26L   EQU   *-MSG26
MSG27    DC    Y(MSG27L,0)
         DC    C'PARAMETERS PASSED TO THE COMPILER ARE:'
MSG27L   EQU   *-MSG27
MSG28    DC    Y(MSG28L,0)
         DC    C'DATA SET TO BE COMPILED IS NOT QUALIFIED BY ''FORT'''
MSG28L   EQU   *-MSG28
MSG29    DC    Y(MSG29L,0)
         DC    C'NO MORE THAN 10 DATA SETS CAN BE COMPILED IN ONE EXECUX
               TION OF THIS PROMPTER'
MSG29L   EQU   *-MSG29
MSG30    DC    Y(MSG30L,0)
         DC    C' ENTER NULL LINE TO CONTINUE OR NON-NULL LINE TO STOP'
MSG30L   EQU   *-MSG30
MSG31    DC    Y(MSG31L,0)
         DC    C'ERROR IN CONCATENATING DATA SETS TO BE COMPILED'
MSG31L   EQU   *-MSG31
MSG32    DC    Y(MSG32L,0)
         DC    C'ERROR IN DECONCATENATING DATA SETS TO BE COMPILED'
MSG32L   EQU   *-MSG32
MSG33    DC    Y(MSG33L,0)
         DC    C'NO DATA SETS TO BE COMPILED'
MSG33L   EQU   *-MSG33
MSG34    DC    Y(MSG34L,0)
         DC    C'PUTGET ERROR -- CODE = '
MSG34L   EQU   *-MSG34
MSG35    DC    C'PUTLINE ERROR -- CODE = '
MSG35L   EQU   *-MSG35
MSG36    DC    C'CANNOT PROMPT, EITHER YOU ARE EXECUTING A CLIST OR YOUX
               R PROFILE SPECIFIES NO PROMPTING'
MSG36L   EQU   *-MSG36
MSG37    DC    Y(MSG37L,0)
         DC    C'BUILD OF DAIR ATTRIBUTE ''ATRFORTX'' FAILED.'
MSG37L   EQU   *-MSG37
MSG38    DC    Y(MSG38L,0)
         DC    C'DELETE OF DAIR ATTRIBUTE ''ATRFORTX'' FAILED.'
MSG38L   EQU   *-MSG38
MSG39    DC    Y(MSG39L,0)
         DC    C'SEARCH OF DAIR ATTRIBUTE ''ATRFORTX'' FAILED.'
MSG39L   EQU   *-MSG39
MSG40    DC    Y(MSG40L,0)
         DC    C'INVALID TASK LIBRARY DATA SET NAME'
MSG40L   EQU   *-MSG40
MSG41    DC    Y(MSG41L)
         DC    C'IS AN INVALID TASK LIBRARY NAME'
MSG41L   EQU   *-MSG41
MSG42    DC    Y(MSG42L,0)
         DC    C' ENTER TASKLIB DATA SET NAME-'
MSG42L   EQU   *-MSG42
MSG43    DC    Y(MSG43L,0)
         DC    C'NAME LENGTH EXCEEDS 44 BYTES'
MSG43L   EQU   *-MSG43
MSG44    DC    Y(MSG44L)
         DC    C'TASK LIBRARY NOT IN CATALOG'
MSG44L   EQU   *-MSG44
MSG45    DC    Y(MSG45L)
         DC    C'IS NOT PARTITIONED'
MSG45L   EQU   *-MSG45
MSG46    DC    Y(MSG46L,0)
         DC    C'ERROR IN CONCATENATING TASK LIBRARIES'
MSG46L   EQU   *-MSG46
MSG47    DC    Y(MSG47L)
         DC    C'TASK LIBRARY ALLOCATION ERROR'
MSG47L   EQU   *-MSG47
MSG48    DC    Y(MSG48L,0)
         DC    C'MAXIMUM NUMBER OF ALLOCATIONS EXCEEDED'
MSG48L   EQU   *-MSG48
MSG99    DC    Y(MSG99L,0)
         DC    C'''OPTION'' STRING WILL CAUSE THE FORTHX PARM FIELD TO *
               EXCEED 256 BYTES'
MSG99L   EQU   *-MSG99
FORTX    CSECT
         END   FORTX
