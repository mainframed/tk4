         TITLE '   P U N C H    '
***********************************************************************
*                                                                     *
*        'PUNCH' TSO COMMAND                                          *
*                                                                     *
***********************************************************************
         SPACE
*        WRITTEN BY. BILL GODFREY, PRC (PLANNING RESEARCH CORPORATION).
*        INSTALLATION. PRC, MCLEAN VA.
*        DATE WRITTEN. JANUARY 6 1981.
*        DATE UPDATED. JANUARY 26 1982.
*        ATTRIBUTES. RE-ENTRANT.
*        EXTERNAL REFERENCE. SYSO99 SUBPROGRAM.
*        DESCRIPTION.
*         THIS TSO COMMAND PUNCHES A SEQUENTIAL DATA SET
*         OR A MEMBER OF A PDS.
*
*         SYNTAX -
*                   PUNCH  'DSNAME'  HOLD
*
*        LOG OF CHANGES.
*         02MAR81 - CHANGED O99DSECT TO CONFORM TO NEW VERSION.
*         02MAR81 - SYSOOT SUBPROGRAM RENAMED SYSO99.
*         26JAN82 - FIX MINOR BUG IN SYSO99 SUBPROGRAM.
*
*        MISCELLANEOUS.
*         ALLOCATION OF THE SYSOUT FILE IS HANDLED BY
*         A SUBPROGRAM NAMED 'SYSO99'.
*
*         IF AN UNQUALIFIED DATA SET NAME IS ENTERED, THE
*         CATALOG MUST BE READ TWICE, ONCE TO APPEND A
*         TRAILING QUALIFIER IF NECESSARY, AND AGAIN DURING
*         ALLOCATION. THE USER CAN ELIMINATE THE FIRST BY USING
*         THE FULLY QUALIFIED NAME, PREFIX AND ALL, IN QUOTES,
*         OR BY ENTERING ALL BUT THE PREFIX, WITHOUT QUOTES,
*         PLUS THE KEYWORD 'Q'. THE LATTER IS MUCH SIMPLER
*         AND GIVES THE SAME PERFORMANCE IMPROVEMENT AS A
*         FULLY QUALIFIED NAME.
*
*         THE 'FILE' KEYWORD IS USEFUL FOR PUNCHING TEMPORARY
*         DATA SETS.  IT TELLS THE COMMAND TO TREAT THE FIRST
*         OPERAND AS A FILENAME (DDNAME) INSTEAD OF A DSNAME.
*         WHATEVER DATA SET IS CURRENTLY ALLOCATED TO THE
*         FILENAME WILL BE PUNCHED (AND QUICKLY, BECAUSE
*         THE COMMAND DOESNT HAVE TO ALLOCATE ANYTHING).
*
*         NOTE - IF A NON-EXISTENT MEMBER OF A PDS IS SPECIFIED,
*         THE RESULTING 013-18 ABEND IS TRAPPED BY A DCB ABEND
*         EXIT, BUT A MESSAGE IS ISSUED BY OPEN ANYWAY. THIS
*         METHOD IS USED BECAUSE THE ADDITIONAL OVERHEAD
*         OF ALLOCATING THE PDS AND DOING A 'BLDL' WOULD
*         DEGRADE THE PERFORMANCE UNACCEPTABLY.
         SPACE
         GBLB  &MVS
&MVS     SETB  1                   1 - MVS   0 - SVS,MVT
         SPACE
PUNCH    START
         USING *,R12,R11
         B     @PROLOG-*(,R15)
         DC    AL1(11),CL11'PUNCH '
         DC    CL16' &SYSDATE &SYSTIME '
@SIZE    DC    0F'0',AL1(1),AL3(@DATAL)
@PROLOG  STM   14,12,12(13)
         LR    R12,R15             BASE
         LA    R15,1
         LA    R11,4095(R15,R12)   BASE
         LR    R2,R1
         USING CPPL,R2
         L     R0,@SIZE
         GETMAIN R,LV=(0)
         LR    R9,R1
         USING @DATA,R9
         ST    13,4(,1)            CHAIN SAVEAREA
         ST    1,8(,13)            CHAIN SAVEAREA
         LR    13,1                NEW SAVEAREA
         SPACE 1
         MVI   STATUS,0
         XC    LINKAREA(8),LINKAREA
         SLR   R15,R15
         STH   R15,RC              SET RC = 0
         ST    R15,KOUNT
         SPACE
************************************************************
*                                                          *
*        SET UP IOPL FOR PUTLINE                           *
*                                                          *
************************************************************
         SPACE
         LA    R15,MYIOPL
         USING IOPL,R15
         MVC   IOPLUPT(4),CPPLUPT
         MVC   IOPLECT(4),CPPLECT
         LA    R0,MYECB
         ST    R0,IOPLECB
         XC    MYECB,MYECB
         LA    R0,MYPTPB
         ST    R0,IOPLIOPB
         DROP  R15                 IOPL
         SPACE
         AIF   (NOT &MVS).SKIP1
         L     R15,16              LOAD CVT POINTER
         TM    444(R15),X'80'      IS PUTLINE LOADED? (VS2)
         BNO   PUTLOAD             NO - BRANCH TO LOAD
         L     R15,444(,R15)       YES - USE CVTPUTL
         B     PUTLOADX            BRANCH AROUND LOAD
.SKIP1   ANOP
PUTLOAD  LA    R0,=CL8'IKJPUTL '
         LOAD  EPLOC=(0)
         LR    R15,R0              GET ENTRY ADDRESS
         LA    R15,0(,R15)         CLEAR HI BYTE FOR DELETE ROUTINE
PUTLOADX ST    R15,MYPUTLEP        SAVE PUTLINE ENTRY ADDRESS
         SPACE
************************************************************
*                                                          *
*        SET UP PPL FOR PARSE                              *
*                                                          *
************************************************************
         SPACE
         LA    R15,MYPPL
         USING PPL,R15
         MVC   PPLUPT(4),CPPLUPT
         MVC   PPLECT(4),CPPLECT
         LA    R0,MYECB
         ST    R0,PPLECB
         XC    MYECB,MYECB
         L     R0,=A(PUNCHPCL)
         ST    R0,PPLPCL
         LA    R0,MYANS
         ST    R0,PPLANS
         XC    MYANS(4),MYANS
         MVC   PPLCBUF(4),CPPLCBUF
         ST    R9,PPLUWA
         DROP  R15                 PPL
         SPACE 1
************************************************************
*                                                          *
*        CALL THE PARSE SERVICE ROUTINE                    *
*                                                          *
************************************************************
         SPACE 1
         LR    R1,R15              POINT TO PPL
         AIF   (NOT &MVS).SKIP2
         L     R15,16              CVTPTR
         TM    524(R15),X'80'      IF HI ORDER BIT NOT ON
         BNO   PARSELNK               THEN DO LINK, NOT CALL
         L     R15,524(,R15)       CVTPARS
         BALR  R14,R15             CALL IKJPARS
         B     PARSEEXT            SKIP AROUND LINK
PARSELNK EQU   *
.SKIP2   ANOP
         LINK  EP=IKJPARS,SF=(E,LINKAREA)
PARSEEXT EQU   *
         SPACE 1
         LTR   R15,R15
         BZ    PARSEOK
         LA    R1,MSG01
         LA    R0,L'MSG01
         BAL   R14,PUTMSG
         LA    R15,12
         B     EXIT
PARSEOK  EQU   *
         SPACE
         L     R3,MYANS
         USING IKJPARMD,R3
         SPACE
************************************************************
*                                                          *
*         BUILD SYSOUT PARAMETERS                          *
*                                                          *
************************************************************
         SPACE
         XC    O99DSECT(52),O99DSECT
         MVC   O99DD,=CL8' '
         MVI   O99SO,C'B'          SYSOUT=B
         MVI   O99FC,C'C'          FREE=CLOSE
         ST    R2,O99CPPL          FOR ERROR MESSAGES VIA PUTLINE
         CLI   HOLDKW+1,1          'HOLD' SPECIFIED
         BNE   *+8                 NO
         MVI   O99HO,C'H'          YES
         SPACE
************************************************************
*                                                          *
*         QUALIFY THE DSNAME IF NECESSARY                  *
*                                                          *
************************************************************
         SPACE
         LA    R6,DSN
         TM    6(R6),X'80'         IS DATASET NAME SPECIFIED?
         BO    OKDSN               YES - BRANCH
         LA    R1,MSG05            NO - JUST MEMBER NAME
         LA    R0,L'MSG05
         BAL   R14,PUTMSG
         LA    R15,12
         B     NEXTDSN
OKDSN    EQU   *
         LA    R15,DSNAME+2
         MVI   0(R15),C' '         BLANK THE DSNAME AREA
         MVC   1(43,R15),0(R15)
         SLR   R1,R1
         STH   R1,DSNAME           ZERO DSNAME LENGTH
         TM    6(R6),X'40'         IS DSN QUOTED?
         BO    NOPREF              YES, SKIP PREFIXING
         CLI   FILEKW+1,1          DSN TO BE TREATED AS DDNAME
         BE    NOPREF              YES, SKIP PREFIXING
         AIF   (NOT &MVS).SKIPP    PREFIX WITH PREFIX
         L     R14,CPPLUPT         POINT TO UPT
         USING UPT,R14
         IC    R1,UPTPREFL         GET LENGTH OF PREFIX
         LTR   R1,R1               IS IT ZERO
         BZ    NOPREF              YES, SKIP PREFIXING
         B     *+10
         MVC   0(0,R15),UPTPREFX
         DROP  R14                 UPT
.SKIPP   AIF   (&MVS).SKIPU        PREFIX WITH USERID
         L     R14,CPPLPSCB        POINT TO PSCB
         USING PSCB,R14
         IC    R1,PSCBUSRL         GET LENGTH OF USERID
         LTR   R1,R1               IS IT ZERO
         BZ    NOPREF              YES, SKIP PREFIXING
         B     *+10
         MVC   0(0,R15),PSCBUSER
         DROP  R14                 PSCB
.SKIPU   ANOP
         EX    R1,*-6              MOVE USERID TO DSNAME AREA
         LA    R15,0(R1,R15)       POINT PAST USERID
         MVI   0(R15),C'.'         APPEND PERIOD
         LA    R15,1(,R15)         POINT PAST PERIOD
         LA    R1,1(,R1)           ADD 1 TO LENGTH
         STH   R1,DSNAME           STORE LENGTH OF USERID PLUS 1
NOPREF   EQU   *
         LH    R1,4(,R6)           GET LENGTH
         LR    R0,R1
         AH    R0,DSNAME           ADD LENGTH OF PREFIX OR ZERO
         STH   R0,DSNAME           SET COMBINED LENGTH
         L     R14,0(,R6)          POINT TO DSN VALUE
         BCTR  R1,0                LENGTH MINUS 1 FOR EX
         B     *+10                BRANCH AROUND EXECUTED MVC
         MVC   0(0,R15),0(R14)     (EXECUTED)
         EX    R1,*-6              MOVE DSN TO DSNAME (AFTER PREFIX)
         SPACE
************************************************************
*                                                          *
*        IF 'FILE' KEYWORD IS SPECIFIED,                   *
*        GET DSNAME FROM JFCB USING FILE NAME.             *
*                                                          *
************************************************************
         SPACE
         CLI   FILEKW+1,1          'FILE' SPECIFIED?
         BNE   NOFILE              NO, BRANCH
         CLI   DSNAME+1,8          IS LENGTH 8 OR LESS
         BH    FILERR1             NO, BRANCH
         DEVTYPE DSNAME+2,DEVDATA  GET DEVICE TYPE
         LTR   R15,R15             WAS FILENAME VALID
         BNZ   FILERR2             NO, BRANCH
         TM    DEVDATA+2,X'20'     DIRECT ACCESS
         BZ    FILERR3             NO, BRANCH
         LA    R4,DYNDCBW
         MVC   0(DYNDCBL,R4),DYNDCB
         LA    R0,JFCB
         LA    R1,DYNEXLST
         ST    R0,0(,R1)
         MVI   0(R1),X'87'
         ST    R1,36(,R4)          DCBEXLST
         MVC   40(8,R4),DSNAME+2   DCBDDNAM
         MVC   DDSAVE,DSNAME+2
         MVI   OPEND,X'80'
         RDJFCB ((R4)),MF=(E,OPEND)
         MVC   DSNAME+2(44),JFCB
         LA    R1,DSNAME+45        LAST CHAR OF DSNAME
         LA    R0,44               INITIAL LENGTH
FILEA    CLI   0(R1),C' '          IS THIS LAST NONBLANK
         BNE   FILEB               YES, BRANCH
         BCTR  R1,0                BACK UP 1 CHARACTER
         BCT   R0,FILEA            DECREMENT LENGTH AND BRANCH
FILEB    STH   R0,DSNAME           STORE LENGTH OF DSNAME
*        MVC   VOLUME(6),JFCB+118  GET VOLUME FROM JFCB
         B     FILESPEC
FILERR1  LA    R0,MSG14A
         B     FILERR
FILERR2  LA    R0,MSG14B
         B     FILERR
FILERR3  LA    R0,MSG14C
FILERR   MVC   MSGWK(L'MSG14),MSG14
         LA    R15,MSGWK+L'MSG14
         LA    R14,DSNAME
         LH    R1,0(,R14)
         BCTR  R1,0
         B     *+10
         MVC   MSGWK+L'MSG14(0),2(R14)
         EX    R1,*-6
         LA    R15,1(R1,R15)
         LR    R14,R0 POINT TO MSG14A, B, OR C
         MVC   0(L'MSG14A,R15),0(R14)
         LA    R0,L'MSG14+L'MSG14A+1(,R1)
         LA    R1,MSGWK
         BAL   R14,PUTMSG
         B     NEXTD12
NOFILE   EQU   *
         TM    6(R6),X'40'         IS IT QUOTED?
         BO    DEFX                YES - SKIP DEFAULT SERVICE
         CLI   QUICKW+1,1          QUICK SPECIFIED
         BE    DEFX                YES, USER ENTERED ALL BUT PREFIX
         SPACE
         LA    R15,MYIOPL
         USING IOPL,R15
         LA    R14,MYDFPB
         ST    R14,IOPLIOPB
         USING DFPB,R14
         XC    0(20,R14),0(R14)
         LA    R0,DSNAME
         ST    R0,DFPBDSN
         OI    DFPBCODE,X'04'      SEARCH CAT AND PROMPT IF MULTI
         MVC   DFPBPSCB,CPPLPSCB
*        MVI   DFPBCNTL,X'20'      PREFIX THE DSNAME
         DROP  R14                 DFPB
         SPACE
         LA    R1,MYIOPL
         SPACE
         LR    R1,R15              POINT TO IOPL
         AIF   (NOT &MVS).SKIP4
         L     R15,16              CVTPTR
         TM    736(R15),X'80'      IF HI ORDER BIT NOT ON
         BNO   EHDEFLNK               THEN DO LINK, NOT CALL
         L     R15,736(,R15)       CVTEHDEF
         BALR  R14,R15             CALL IKJEHDEF
         B     EHDEFEXT            SKIP AROUND LINK
EHDEFLNK EQU   *
.SKIP4   ANOP
         LINK  EP=IKJEHDEF,SF=(E,LINKAREA)
EHDEFEXT EQU   *
         SPACE
         B     DEFCODE(R15)
DEFCODE  B     DEF00               SUCCESS
         B     NEXTDSN              MSG ALREADY ISSUED
         B     DEF08               INVALID NAME GT 44
         B     NEXTDSN              MSG ALREADY ISUED
         B     DEF16               NOT IN CATALOG
         B     DEF20               NOT IN CATALOG
         B     DEF24               IMPOSSIBLE
         B     DEF28               COMMAND SYSTEM ERROR
         B     DEF32               IMPOSSIBLE
         B     DEF36               ?
DEF08    EQU   *
DEF16    EQU   *
         B     DEF24
DEF20    EQU   *
LOCERR   EQU   *
         MVC   MSGWK(L'MSG02),MSG02
         LA    R15,MSGWK+L'MSG02
         LA    R14,DSNAME
         LH    R1,0(,R14)
         BCTR  R1,0
         B     *+10
         MVC   MSGWK+L'MSG02(0),2(R14)
         EX    R1,*-6
         LA    R15,1(R1,R15)
         MVC   0(L'MSG02A,R15),MSG02A
         LA    R0,L'MSG02+L'MSG02A+1(,R1)
         LA    R1,MSGWK
         BAL   R14,PUTMSG
         B     NEXTDSN
DEF24    EQU   *
DEF28    EQU   *
DEF32    EQU   *
DEF36    EQU   *
         LA    R1,MSG03
         LA    R0,L'MSG03
         BAL   R14,PUTMSG
         B     NEXTDSN
         SPACE
DEF00    EQU   *
DEFX     EQU   *
         SPACE
************************************************************
*                                                          *
*        ALLOCATE THE DATASET                              *
*                                                          *
************************************************************
         SPACE
         LA    R1,MYDAPL
         USING DAPL,R1
         MVC   DAPLUPT(4),CPPLUPT
         MVC   DAPLECT(4),CPPLECT
         LA    R0,MYECB
         ST    R0,DAPLECB
         MVC   DAPLPSCB(4),CPPLPSCB
         LA    R15,MYDAPB
         ST    R15,DAPLDAPB
         DROP  R1                  DAPL
         USING DAPB08,R15
         XC    0(84,R15),0(R15)
         MVI   DA08CD+1,X'08'
         LA    R0,DSNAME
         ST    R0,DA08PDSN
         MVC   DA08DDN(8),=CL8' '
         MVC   DA08UNIT,=CL8' '
         MVC   DA08SER,=CL8' '
         MVC   DA08MNM,=CL8' '
         MVC   DA08PSWD,=CL8' '
         MVI   DA08DSP1,DA08SHR
         MVI   DA08DPS2,DA08KEEP
         MVI   DA08DPS3,DA08KEP
         TM    14(R6),X'80'        MEMBER SPECIFIED?
         BZ    MEMBX               NO - BRANCH
         LH    R1,12(,R6)          GET LENGTH OF MEMBER
         BCTR  R1,0                MINUS 1 FOR EX
         L     R14,8(,R6)          GET ADDRESS OF MEMBER NAME
         B     *+10
         MVC   DA08MNM(0),0(R14)   MOVE MEMBER NAME
         EX    R1,*-6
MEMBX    EQU   *
         TM    22(R6),X'80'        PASSWORD SPECIFIED?
         BZ    PASSX               NO - BRANCH
         LH    R1,20(,R6)          GET LENGTH OF PSWD
         BCTR  R1,0                MINUS 1 FOR EX
         L     R14,16(,R6)         GET ADDRESS OF PSWD
         B     *+10
         MVC   DA08PSWD(0),0(R14)  MOVE PSWD
         EX    R1,*-6
PASSX    EQU   *
         LA    R1,MYDAPL
         SPACE
         BAL   R14,CALLDAIR
         LTR   R15,R15
         BZ    OKDAIR
         BAL   R14,DAIRFAIL
         LA    R15,12
         B     NEXTDSN
OKDAIR   EQU   *
         OI    STATUS,STALLOC      TELL CLEANUP TO FREE IT
         LA    R15,MYDAPB
         MVC   DDSAVE,DA08DDN
         TM    DA08DSO,X'40'       IS DSORG SEQUENTIAL?
         BO    OKDSORG             YES - BRANCH
         TM    DA08DSO,X'02'       IS DSORG PARTITIONED?
         BO    OKDSORGP            YES, BRANCH
*
*              DSORG IS NEITHER PS NOR PO
*              ISAM=X'80' DA=X'20' VSAM=X'00' NONE=X'00'
*
ERRDSORG LA    R1,MSG06
         LA    R0,L'MSG06
         BAL   R14,PUTMSG
         LA    R15,12
         B     NEXTDSN
OKDSORGP EQU   *
         CLC   DA08MNM,=CL8' '     WAS MEMBER SPECIFIED?
         BNE   OKDSORG             YES - BRANCH
         LA    R1,MSG07
         LA    R0,L'MSG07
         BAL   R14,PUTMSG
         LA    R15,12
         B     NEXTDSN
OKDSORG  EQU   *
         DROP  R15                 DAPB08
         SPACE
************************************************************
*                                                          *
*        CHECK FORMAT-1 DSCB FOR EMPTY DATA SET            *
*                                                          *
************************************************************
         SPACE
         L     R1,16               CVTPTR
         L     R1,0(,R1)           TCB WORDS
         L     R1,4(,R1)           CURRENT TCB
         L     R1,12(,R1)          TIOT
         LA    R1,24(,R1)          TOIENTRY
DDLOOP   CLI   0(R1),0             END OF TIOT
         BE    NEXTDSN             YES, BRANCH (NEVER HAPPENS)
         CLC   4(8,R1),DDSAVE      DOES DDNAME MATCH
         BE    DDFOUND
         SLR   R15,R15
         IC    R15,0(,R1)
         LA    R1,0(R15,R1)
         B     DDLOOP
DDFOUND  L     R15,16(,R1)         TIOEFSRT-1
         TM    18(R15),X'20'       DIRECT ACCESS DEVICE?
         BZ    OBTX                NO, BYPASS OBTAIN
         MVC   VOLSER,28(R15)      UCBVOLI
OBTDSCB  LA    R1,OBTAINW
         MVC   0(OBTAINL,R1),OBTAIN
         LA    R0,DSNAME+2         DSN FOR OBTAIN
         ST    R0,4(,R1)
         LA    R0,VOLSER           VOLUME FOR OBTAIN
         ST    R0,8(,R1)
         LA    R0,MYDSCB           ANSWER AREA FOR OBTAIN
         ST    R0,12(,R1)
         OBTAIN (1)
         LTR   R15,R15             WAS OBTAIN SUCCESSFUL
         BZ    OKDSCB              YES, BRANCH
         SPACE
*               OBTAIN HAS FAILED. HOW CAN THAT HAPPEN WHEN
*               DYNAMIC ALLOCATION WAS SUCCESSFUL? ONE WAY IT
*               CAN HAPPEN IS IF THE DSNAME IS AN ALIAS ENTRY
*               IN A VSAM CATALOG.  IF IT IS, A 'LOCATE' WILL
*               PUT THE TRUE NAME IN THE DSNAME FIELD, SO NOW
*               WE ISSUE A LOCATE, AND TRY THE OBTAIN AGAIN.
         SPACE
         TM    STATUS,STLOCAT      HAS LOCATE BEEN TRIED ALREADY?
         BZ    ALIAS               NO, GO TRY IT
ERROBT   LA    R1,MSG09            UNABLE TO OBTAIN DSCB
         LA    R0,L'MSG09
         BAL   R14,PUTMSG
         LA    R15,12
         B     NEXTDSN
ALIAS    OI    STATUS,STLOCAT      TRIP THE SWITCH
         LA    R1,LOCATEW
         MVC   0(LOCATEL,R1),LOCATE
         LA    R0,DSNAME+2         DSNAME FOR LOCATE
         ST    R0,4(,R1)
         LA    R0,LOCBUF           ANSWER AREA FOR LOCATE
         ST    R0,12(,R1)
         LOCATE (1)
         LTR   15,15               WAS LOCATE SUCCESSFUL?
         BZ    OBTDSCB             YES, GO OBTAIN AGAIN
         B     ERROBT              NO, ISSUE MESSAGE
         SPACE
OKDSCB   NI    STATUS,255-STLOCAT  TURN OFF LOCATE SWITCH
         TM    MYDSCB-44+X'52',X'42' DSORG = PS OR PO
         BZ    ERRDSORG
*        TM    MYDSCB-44+X'54',X'C0' RECFM = U
*        BO    ERRRECFM
         CLC   MYDSCB-44+X'62'(3),=X'000000' CHECK DS1LSTAR
         BE    DYNEOD              BRANCH IF EMPTY DATA SET
OBTX     EQU   *
FILESPEC EQU   *
         SPACE
************************************************************
*                                                          *
*        ALLOCATE THE SYSOUT PUNCH                         *
*                                                          *
************************************************************
         SPACE
         LA    R1,O99PTR
         LA    R0,O99DSECT
         ST    R0,0(,R1)
         OI    0(R1),X'80'
         L     R15,=V(SYSO99)
         BALR  R14,R15
         SPACE
         LTR   R15,R15
         BNZ   NEXTD12
         SPACE
         MVC   PUNDCBW(PUNDCBL),PUNDCB
         LA    R4,PUNDCBW
         USING IHADCB,R4
         MVC   DCBDDNAM(8),O99DD
         MVI   OPEND,X'80'
         SPACE
         OPEN  ((R4),OUTPUT),MF=(E,OPEND)
         SPACE
         TM    DCBOFLGS,X'10'
         BO    OKOPSO
         LA    R1,MSG10
         LA    R0,L'MSG10
         B     DYNOPENM
OKOPSO   OI    STATUS,STOPEN2
         SPACE
************************************************************
*                                                          *
*        SET UP THE INPUT DCB                              *
*                                                          *
************************************************************
         SPACE
         MVC   DYNDCBW(DYNDCBL),DYNDCB
         LA    R4,DYNDCBW
         USING IHADCB,R4
         MVC   DCBDDNAM(8),DDSAVE
         SPACE
         LA    R15,DYNEOD
         IC    R0,DCBEODAD-1
         ST    R15,DCBEODAD-1
         STC   R0,DCBEODAD-1
         SPACE
         LA    R15,DYNSYNAD
         IC    R0,DCBSYNAD-1
         ST    R15,DCBSYNAD-1
         STC   R0,DCBSYNAD-1
         SPACE
         LA    R15,DYNEXLST
         IC    R0,DCBEXLSA-1
         ST    R15,DCBEXLSA-1
         STC   R0,DCBEXLSA-1
         LA    R1,DYNDCBEX
         ST    R1,0(,R15)
         MVI   0(R15),X'05'
         LA    R1,DYNABEND
         ST    R1,4(,R15)
         MVI   4(R15),128+X'11'    OPEN ABEND EXIT (MVS)
         SPACE
         OI    STATUS,STOPEN1      TELL CLEANUP TO CLOSE DCB
         MVI   OPEND,X'80'
         SPACE
         OPEN  ((R4),INPUT),MF=(E,OPEND)
         SPACE
         TM    DCBOFLGS,X'10'
         BO    OKOPEN
         LA    R1,MSG08
         LA    R0,L'MSG08
         TM    STATUS,STABEND      MEMBER NOT FOUND?
         BO    DYNOPENM            YES, BRANCH
         LA    R1,MSG04
         LA    R0,L'MSG04
DYNOPENM BAL   R14,PUTMSG
         LA    R15,12
         B     NEXTDSN
         SPACE
DYNDCBEX EQU   *
         TM    DCBRECFM,X'C0'      RECFM U
         BOR   R14                 YES - BRANCH
         TM    DCBRECFM,X'48'      VARIABLE SPANNED
         BNOR  R14                 NO - BRANCH
         OI    DCBBFTEK,X'60'      BFTEK=A
         BR    R14
         SPACE
DYNABEND EQU   *
         L     R8,0(,R1)           GET COMPLETION CODE
         N     R8,=A(X'FFF0FF00')
         CL    R8,=A(X'01301800')  IS IT AN 013-18 ABEND
         BE    *+10                YES, BRANCH
         MVI   4(R1),0             ABNORMALLY TERMINATE
         BR    R14
         OI    STATUS,STABEND      INDICATE MEMBER NOT FOUND
         MVI   3(R1),4             IGNORE THE ABEND
         BR    R14
         SPACE
OKOPEN   EQU   *
         TM    DCBRECFM,X'C0'
         BO    NOTFIXED
         TM    DCBRECFM,X'80'
         BZ    NOTFIXED
         CLC   DCBLRECL,=H'80'
         BE    OKRECFM
NOTFIXED LA    R1,MSG11
         LA    R0,L'MSG11
         BAL   R14,PUTMSG
         B     NEXTD12
OKRECFM  EQU   *
         SPACE
READLOOP EQU   *
         MVI   SYNADSW,0           SET SYNAD SWITCH OFF
         SPACE
         GET   (R4)
         SPACE
         CLI   SYNADSW,0           WAS SYNAD EXIT TAKEN?
         BE    OKGET               NO - BRANCH
         LA    R1,SYNADMSG
         LA    R0,78
         BAL   R14,PUTMSG
         LA    R15,12
         B     NEXTDSN
OKGET    EQU   *
         LR    R0,R1               POINT TO RECORD
         LA    R1,PUNDCBW
         PUT   (1),(0)
         LA    R1,1
         A     R1,KOUNT
         ST    R1,KOUNT
         B     READLOOP
         SPACE
DYNEOD   EQU   *
         LA    R1,MSGWK
         MVC   0(10,R1),=X'40206B2020206B202120'
         MVC   10(17,R1),=C' RECORDS PUNCHED '
         CLC   KOUNT,=F'1'
         BNE   *+10
         MVC   17(9,R1),18(R1)  CHANGE 'RECORDS' TO 'RECORD '
         L     R15,KOUNT
         CVD   R15,DOUBLE
         ED    0(10,R1),DOUBLE+4
         SPACE
SHIFLEFT CLI   0(R1),C' '       LEADING BLANK?
         BNE   SHIFTED          NO - READY TO ISSUE
         MVC   0(25,R1),1(R1)   SHIFT LEFT 1
         MVI   25(R1),C' '      BLANK LAST BYTE
         B     SHIFLEFT
SHIFTED  LA    R0,26
         BAL   R14,PUTLINE
         LA    R15,0
         B     NEXTDSN
         SPACE
NEXTD12  LA    R15,12
         SPACE
NEXTDSN  CH    R15,RC
         BNH   *+8
         STH   R15,RC              SET HIGHEST RC
         LA    R4,DYNDCBW
         TM    STATUS,STOPEN1
         BZ    NOCLOSE
         TM    DCBOFLGS,X'10'      IS IT OPEN?
         BZ    NOCLOSE             NO, BRANCH
         MVI   CLOSED,X'80'
         CLOSE ((R4)),MF=(E,CLOSED)
         NI    STATUS,255-STOPEN1  CLOSED
NOCLOSE  EQU   *
         LA    R4,PUNDCBW
         TM    STATUS,STOPEN2      IS SYSOUT FILE OPEN
         BZ    NOCLOSE2            NO, BRANCH
         TM    DCBOFLGS,X'10'      IS IT OPEN?
         BZ    NOCLOSE             NO, BRANCH
         MVI   CLOSED,X'80'
         CLOSE ((R4)),MF=(E,CLOSED)
         NI    STATUS,255-STOPEN2  CLOSED
         DROP  R4                  IHADCB
NOCLOSE2 EQU   *
         TM    STATUS,STALLOC      FREE REQUIRED?
         BZ    NOFREE
         LA    R1,MYDAPL
         LA    R15,MYDAPB
         USING DAPB18,R15
         XC    0(40,R15),0(R15)
         MVI   DA18CD+1,X'18'
         MVC   DA18DDN,DDSAVE
         MVC   DA18MNM(8),=CL8' '
         MVC   DA18SCLS(2),=CL8' '
         BAL   R14,CALLDAIR        UNALLOCATE
         NI    STATUS,255-STALLOC  UNALLOCATED
         DROP  R15                 DAPB18
NOFREE   EQU   *
         SPACE
         IKJRLSA MYANS
         SPACE
         CLI   RC+1,0              IS RC ZERO?
         BZ    STACKDX             YES, BRANCH
         MVC   MYSTPB(STACKDL),STACKD
         SPACE
         STACK DELETE=ALL,PARM=MYSTPB,MF=(E,MYIOPL)
         SPACE
         TCLEARQ
STACKDX  EQU   *
         SPACE
         LH    R15,RC
         B     EXIT
         SPACE
************************************************************
*                                                          *
*         CALL IKJDAIR SERVICE ROUTINE                     *
*                                                          *
************************************************************
          SPACE
CALLDAIR ST    R14,DAIRREGS
         AIF   (NOT &MVS).SKIP6
         L     R15,16
         TM    732(R15),X'80'     CVTDAIR
         BNO   DAIRLINK
         L     R15,732(,R15)
         BALR  R14,R15
         B     DAIRFINI
DAIRLINK EQU   *
.SKIP6   ANOP
         LINK  EP=IKJDAIR,SF=(E,LINKAREA)
DAIRFINI L     R14,DAIRREGS
         BR    R14
         SPACE
************************************************************
*                                                          *
*        DYNAMIC ALLOCATION FAILURE ROUTINE                *
*                                                          *
************************************************************
         SPACE
DAIRFAIL ST    R14,MYDFREGS
         AIF   (NOT &MVS).SKIP7
         LA    R1,MYDFPARM
         USING DFDSECTD,R1
         ST    R15,MYDFRC
         LA    R15,MYDFRC
         ST    R15,DFRCP
         LA    R15,MYDAPL
         ST    R15,DFDAPLP
         SLR   R15,R15
         ST    R15,MYJEFF02
         LA    R15,MYJEFF02
         ST    R15,DFJEFF02
         LA    R15,DFDAIR
         STH   R15,MYDFID
         LA    R15,MYDFID
         ST    R15,DFIDP
         SLR   R15,R15
         ST    R15,DFCPPLP
         LINK  EP=IKJEFF18,SF=(E,LINKAREA)
         L     R15,MYDFRC
         DROP  R1                  DFDSECTD
.SKIP7   ANOP
         AIF   (&MVS).SKIP8
         LA    R1,MSGDAIR
         LA    R0,L'MSGDAIR
         BAL   R14,PUTMSG
.SKIP8   ANOP
         L     R14,MYDFREGS
         BR    R14
         SPACE
************************************************************
*                                                          *
*        PUTMSG ROUTINE                                    *
*                                                          *
************************************************************
         SPACE
PUTMSG   STM   R14,R1,PUTLINS
         XC    MYOLD(8),MYOLD
         XC    MYSEG1(4),MYSEG1
         MVC   MYPTPB(12),MODLPTPM
         LA    R14,1               NO. OF MESSAGE SEGMENTS
         ST    R14,MYOLD
         LA    R14,MYSEG1          POINT TO 1ST SEGMENT
         ST    R14,MYOLD+4
         LR    R14,R0              LENGTH IN R0
         LA    R14,4(,R14)         ADD 4
         LA    R15,MYSEG1+4
         CLC   0(3,R1),=C'IKJ'     IS DATA PRECEEDED BY MESSAGE ID?
         BE    *+16                YES - BRANCH
         LA    R14,1(,R14)         ADD 1 TO LENGTH
         MVI   0(R15),C' '         INSERT LEADING BLANK
         LA    R15,1(,R15)         BUMP POINTER
         STH   R14,MYSEG1
         LR    R14,R0
         BCTR  R14,0
         B     *+10
         MVC   0(0,R15),0(R1)      MOVE MESSAGE IN
         EX    R14,*-6
         L     R15,MYPUTLEP
         SPACE
         PUTLINE PARM=MYPTPB,OUTPUT=(MYOLD),ENTRY=(15),MF=(E,MYIOPL)
         SPACE
         LM    R14,R1,PUTLINS
         BR    R14
         SPACE
************************************************************
*                                                          *
*        PUTLINE ROUTINE                                   *
*                                                          *
************************************************************
         SPACE
PUTLINE  STM   R14,R1,PUTLINS
         XC    MYSEG1(4),MYSEG1
         MVC   MYPTPB(12),MODLPTPB
         LR    R14,R0              LENGTH IN R0
         LA    R14,4(,R14)         ADD 4
         STH   R14,MYSEG1
         LR    R14,R0
         BCTR  R14,0
         B     *+10
         MVC   MYSEG1+4(0),0(R1)   MOVE TEXT IN
         EX    R14,*-6
         LA    R1,MYIOPL
         L     R15,MYPUTLEP
         SPACE
         PUTLINE PARM=MYPTPB,OUTPUT=(MYSEG1,DATA),ENTRY=(15),MF=(E,(1))
         SPACE
         LM    R14,R1,PUTLINS
         BR    R14
         SPACE 1
ERRRECFM LA    R1,MSGRECFM
         LA    R0,L'MSGRECFM
         BAL   R14,PUTMSG
         B     NEXTD12
         SPACE
EXIT     LR    1,13
         L     R0,@SIZE
         L     13,4(,13)
         ST    15,16(,13)
         FREEMAIN R,A=(1),LV=(0)
         LM    14,12,12(13)
         BR    14
         SPACE
************************************************************
*                                                          *
*        SYNAD EXIT                                        *
*                                                          *
************************************************************
         SPACE
*        THIS ROUTINE IS ENTERED DURING THE 'GET' MACRO
*        IF AN I/O ERROR OCCURS.
         SPACE
DYNSYNAD EQU   *
         SYNADAF ACSMETH=QSAM
         MVC   SYNADMSG(78),50(R1)
         MVI   SYNADSW,X'FF'
         SYNADRLS
         BR    R14
         SPACE
************************************************************
*                                                          *
*        CONSTANTS                                         *
*                                                          *
************************************************************
         SPACE
MODLPTPM PUTLINE OUTPUT=(1,TERM,SINGLE,INFOR),                         X
               TERMPUT=(EDIT,WAIT,NOHOLD,NOBREAK),MF=L
         SPACE
MODLPTPB PUTLINE OUTPUT=(1,TERM,SINGLE,DATA),                          X
               TERMPUT=(EDIT,WAIT,NOHOLD,NOBREAK),MF=L
         SPACE
         PRINT NOGEN
         SPACE
DYNDCB   DCB   DDNAME=DYNAM,DSORG=PS,MACRF=(GL),                       +
               EODAD=0,SYNAD=0,EROPT=ACC
DYNDCBL  EQU   *-DYNDCB
         SPACE
PUNDCB   DCB   DDNAME=DYNAM,DSORG=PS,MACRF=(PM),SYNAD=0,               +
               RECFM=FB,LRECL=80,BLKSIZE-80
PUNDCBL  EQU   *-PUNDCB
         SPACE
         PRINT GEN
         SPACE
OBTAIN   CAMLST SEARCH,2,3,4
OBTAINL  EQU   *-OBTAIN
         SPACE
LOCATE   CAMLST NAME,2,,4
LOCATEL  EQU   *-LOCATE
         SPACE
STACKD   STACK DELETE=ALL,MF=L
STACKDL  EQU   *-STACKD
         SPACE
MSG01    DC    C'ERROR IN PARSE SERVICE ROUTINE'
MSG02    DC    C'IKJ58503I DATA SET '
MSG02A   DC    C' NOT IN CATALOG'
MSG03    DC    C'ERROR IN DEFAULT SERVICE ROUTINE'
MSG04    DC    C'UNABLE TO OPEN DATASET'
MSG05    DC    C'IKJ58509I DATA SET NAME REQUIRED WHEN MEMBER IS SPECIF+
               IED'
MSG06    DC    C'ORGANIZATION OF DATA SET MUST BE PARTITIONED OR SEQUEN+
               TIAL'
MSG07    DC    C'DATA SET IS PARTITIONED, MEMBER NOT SPECIFIED'
MSG08    DC    C'SPECIFIED MEMBER NOT FOUND IN DATASET'
MSG09    DC    C'UNABLE TO OBTAIN DSCB FOR DATA SET'
MSG10    DC    C'UNABLE TO OPEN SYSOUT FILE'
MSG11    DC    C'DATA SET NOT PUNCHED - NOT FIXED LENGTH 80'
MSG14    DC    C'FILENAME '
MSG14A   DC    C' INVALID, MORE THAN 8 CHARACTERS  '
MSG14B   DC    C' IS NOT CURRENTLY ALLOCATED       '
MSG14C   DC    C' NOT ALLOCATED TO A DASD DATA SET '
MSGRECFM DC    C'RECORD FORMAT U NOT SUPPORTED'
MSGDAIR  DC    C'UNABLE TO ALLOCATE'
         LTORG
PCLADDR  DC    0D'0'               END OF CSECT
         SPACE
************************************************************
*                                                          *
*        PARSE PARAMETERS                                  *
*                                                          *
************************************************************
         SPACE
         PRINT NOGEN
PUNCHPCL IKJPARM
DSN      IKJPOSIT DSNAME,PROMPT='DATA SET NAME'
FILEKW   IKJKEYWD
         IKJNAME 'FILE'
QUICKW   IKJKEYWD
         IKJNAME 'QUICK'
HOLDKW   IKJKEYWD
         IKJNAME 'HOLD'
         IKJENDP
         PRINT GEN
         SPACE
************************************************************
*                                                          *
*        DSECTS                                            *
*                                                          *
************************************************************
         SPACE
@DATA    DSECT
         DS    18F                 REGISTER SAVEAREA
LINKAREA DS    2F
MYPPL    DS    7F
MYANS    DS    F
MYECB    DS    F                  USED BY PUTLINE ROUTINE
MYIOPL   DS    4F                 USED BY PUTLINE ROUTINE
MYPTPB   DS    3F                 USED BY PUTLINE ROUTINE
MYOLD    DS    2F                 USED BY PUTLINE ROUTINE
MYSEG1   DS    2H,CL256           USED BY PUTLINE ROUTINE
PUTLINS  DS    4F                 USED BY PUTLINE ROUTINE
MYPUTLEP DS    F                  ADDRESS OF IKJPUTL
MYSTPB   DS    0F                 5 WORDS USED BY STACK DELETE
MYDAPL   DS    5F
MYDAPB   DS    21F
MYDFPB   DS    5F
DSNAME   DS    H,CL44
VOLSER   DS    CL6
LOCATEW  DS    0F
OBTAINW  DS    4F
LOCBUF   DS    0D                  USES NEXT 265 BYTES
MYDSCB   DS    CL140               96 BYTES OF DSCB, 5 BYTES CCHHR
MSGWK    DS    CL128
STATUS   DS    X
STALLOC  EQU   X'80'
STOPEN1  EQU   X'40'
STOPEN2  EQU   X'20'
STABEND  EQU   X'10'
STLOCAT  EQU   X'08'
RC       DS    H
MYDFPARM DS    5F  USED BY DAIRFAIL
MYDFREGS DS    F   USED BY DAIRFAIL
MYDFRC   DS    F   USED BY DAIRFAIL
MYJEFF02 DS    F   USED BY DAIRFAIL
MYDFID   DS    H   USED BY DAIRFAIL
DOUBLE   DS    D
EIGHT    DS    CL8
DDSAVE   DS    CL8
DAIRREGS DS    F
OPEND    DS    0F
CLOSED   DS    F
DYNEXLST DS    2F
KOUNT    DS    F
KOUNTSP  DS    F
DYNDCBW  DS    0D,XL(DYNDCBL)
PUNDCBW  DS    0D,XL(PUNDCBL)
SYNADSW  DS    F
SYNADMSG DS    CL78
DEVDATA  DS    2F
JFCB     DS    0F,CL176
O99PTR   DS    F
O99DSECT DS    0D
O99DD    DS    CL8                 DDNAME
O99SO    DS    CL1                 SYSOUT CLASS
O99FC    DS    C                   FREE=CLOSE IF 'C'
O99HO    DS    C                   HOLD=YES IF 'H'
         DS    C                   RESERVED
O99CPPL  DS    A                   ADDRESS OF CPPL OR ZERO
O99DE    DS    CL8                 DEST
O99PG    DS    CL8                 PROGRAM NAME OR 'INTRDR'
O99AT    DS    CL8                 ATTRIBUTE LIST NAME
O99FO    DS    CL4                 FORM NUMBER
O99CO    DS    H                   COPIES
         DS    CL2                 RESERVED
O99RSC   DS    CL4                 REASON CODES RETURNED HERE
         DS    0D
@DATAL   EQU   *-@DATA
         SPACE
IHADCB   DSECT
         DS    32XL1
DCBBFTEK DS    XL1
DCBEODAD DS    AL3
DCBRECFM DS    X
DCBEXLSA DS    AL3
DCBDDNAM DS    CL8
DCBOFLGS DS    X
         DS    7XL1
         DS    X
DCBSYNAD DS    AL3
DCBBLKSI EQU   IHADCB+62,2
DCBLRECL EQU   IHADCB+82,2
         SPACE
         IKJCPPL
         SPACE 3
         IKJPPL
         SPACE
         IKJDFPB
         SPACE 2
         IKJUPT
         SPACE 2
         IKJIOPL
         SPACE 2
         IKJDAPL
         SPACE 2
         IKJDAP08
         SPACE 2
         IKJDAP18
         SPACE 2
         IKJPSCB
         SPACE 2
         AIF   (NOT &MVS).SKIP12
         IKJEFFDF DFDSECT=YES
.SKIP12  ANOP
         SPACE 2
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         END
         TITLE '   S Y S O U T 9 9  '
***********************************************************************
*                                                                     *
*        'SYSOUT99' SUBPROGRAM                                        *
*                                                                     *
***********************************************************************
*
*        WRITTEN BY. BILL GODFREY, PRC (PLANNING RESEARCH CORPORATION).
*        INSTALLATION. PRC, MCLEAN VA
*        DATE WRITTEN. NOV 21 1975
*        DATE UPDATED. JANUARY 26 1982.
*        ATTRIBUTES. RE-ENTRANT.
*        MACROS. GETMAIN FREEMAIN LINK IEFZB4D0 IEFZB4D2 IKJEFFDF.
*
*         THIS SUBPROGRAM ALLOCATES A SYSOUT DATASET.
*         THE OPERATING SYSTEM MUST BE OS/VS2 MVS.
*
*         AT ENTRY REGISTER 1 POINTS TO A FULLWORD
*         WHICH CONTAINS THE ADDRESS OF THE BLOCK DESCRIBED
*         BY THE O99DSECT DSECT IN THIS CODE.
*
*         UPON RETURN TO CALLER, REGISTER 15 IS ZERO IF THE
*         ALLOCATION WAS SUCCESSFUL.  OTHERWISE REGISTER 15
*         IS NONZERO AND A MESSAGE WAS ISSUED BY IKJEFF18.
*
*         30MAR78 - FORM NUMBER ADDED
*         03DEC80 - O99DSECT FIELDS SHUFFLED. COMMENTS ADDED.
*                   FREE=CLOSE FORCED IF INTRDR.
*         02MAR81 - ATTRIBUTE LIST NAME ADDED.
*                   SUBPROGRAM RENAMED SYSOUT99 FROM SYSOOT.
*                   SYMBOL 'PRM' PREFIX CHANGED TO 'O99'.
*         10APR81 - DEST LENGTH MVC CHANGED FROM 7 TO 8.
*         26JAN82 - RETURN CODE LOADED FROM MYDFRC.
*
*         O99DD   DS CL8      DDNAME (OR BLANKS IF TO BE RETURNED)
*         O99SO   DS C        SYSOUT CLASS
*         O99FC   DS C        'C' IF FREE=CLOSE REQUESTED
*         O99HO   DS C        'H' IF HOLD=YES REQUESTED
*         O99RSV1 DS C        RESERVED
*         O99CPPL DS A        ADDRESS OF CPPL OR ZERO (FOR MESSAGE)
*         O99DE   DS CL8      DEST OR BLANKS
*         O99PG   DS CL8      PROGRAM NAME OR 'INTRDR' OR BLANKS
*         O99AT   DS CL8      ATTRIBUTE LIST NAME
*         O99FO   DS CL4      FORM NUMBER OR BLANKS
*         O99CO   DS H        COPIES
*         O99RSV2 DS CL2      RESERVED
*         O99RSC  DS CL4      REASON CODES RETURNED HERE
*
*$DOC$*****************************************************************
         SPACE
SYSOUT99 START
         ENTRY SYSO99         SHORT NAME FOR PL1 AND FORTRAN
         USING *,R12
SYSO99   B     @PROLOG-*(,15)
         DC    AL1(11),CL11'SYSOUT99 '
         DC    CL16' &SYSDATE &SYSTIME '
@PROLOG  STM   14,12,12(R13)
         LR    R12,R15
         LR    R2,R1               SAVE PARAMETER LIST ADDRESS
         GETMAIN R,LV=@DATAL
         ST    R13,4(,R1)
         ST    R1,8(,R13)
         LR    R13,R1
         USING @DATA,R13
         SPACE
         L     R2,0(,R2)           POINT TO PARAMETER BLOCK
         USING O99DSECT,R2
         SPACE
         USING S99TUNIT,R3
         SPACE
         LA    R1,MY99RB
         ST    R1,MY99RBP
         OI    MY99RBP,X'80'
         XC    MY99RB(20),MY99RB
         LA    R14,MY99RB
         USING S99RB,R14
         MVI   S99RBLN,20
         MVI   S99VERB,S99VRBAL
         LA    R1,MY99TUPL
         ST    R1,S99TXTPP
         DROP  R14                 S99RB
         SPACE
         XC    MY99TUPL(TUPL$LEN),MY99TUPL
         OI    MY99TUPL+TUPL$LEN-4,X'80'
*
*              PROCESS DDNAME
*
         MVI   MYDDRET,0
         LA    R3,MY99TXDD
         ST    R3,MY99TUDD
         CLI   O99DD,X'40'         DD TO BE RETURNED?
         BE    DDRET               YES - BRANCH
         CLI   O99DD,X'00'         DD TO BE RETURNED?
         BE    DDRET               YES - BRANCH
*
*              DDNAME IS SPECIFIED
*
         LA    R15,DALDDNAM
         STH   R15,S99TUKEY
         LA    R15,1
         STH   R15,S99TUNUM
         LA    R15,8
         STH   R15,S99TULNG
         MVC   S99TUPAR(8),O99DD
         B     PROCSO
*
*              DDNAME NOT SPECIFIED
*
DDRET    LA    R15,DALRTDDN
         STH   R15,S99TUKEY
         LA    R15,1
         STH   R15,S99TUNUM
         LA    R15,8
         STH   R15,S99TULNG
         MVC   S99TUPAR(8),=CL8' '
         MVI   MYDDRET,C'R'
*
*              PROCESS SYSOUT CLASS
*
PROCSO   LA    R3,MY99TXSO
         ST    R3,MY99TUSO
         LA    R15,DALSYSOU
         STH   R15,S99TUKEY
         LA    R15,1
         STH   R15,S99TUNUM
         LA    R15,1
         STH   R15,S99TULNG
         MVC   S99TUPAR(1),O99SO
         CLI   O99SO,X'40'         CLASS SPECIFIED?
         BE    NOSO                NO - BRANCH
         CLI   O99SO,X'00'         CLASS SPECIFIED?
         BNE   XITSO               YES - BRANCH
NOSO     SR    R15,R15             INDICATE NO ENTRIES
         STH   R15,S99TUNUM         FOR THIS KEY
XITSO    EQU   *
*
*              PROCESS COPIES
*
         CLC   O99CO,=H'0'         IS COPIES ZERO
         BZ    NOCO                YES, DO NOT SPECIFY COPIES
         LA    R3,MY99TXCO
         ST    R3,MY99TUCO
         LA    R15,DALCOPYS
         STH   R15,S99TUKEY
         LA    R15,1
         STH   R15,S99TUNUM
*                                  O99CO IS 2 BYTES TO ALLOW COBOL
*                                  CALLERS TO SPECIFY PIC S(2) COMP.
*                                  COBOL DOESNT HAVE 1 BYTE COMP.
         LA    R15,1               SVC99 ONLY ALLOWS 1 BYTE.
         STH   R15,S99TULNG
         MVC   S99TUPAR(1),O99CO+1
NOCO     EQU   *
*
*              PROCESS DEST
*
         CLI   O99DE,X'40'         DEST?
         BE    NODE                NO - BRANCH
         CLI   O99DE,X'00'         DEST?
         BE    NODE                NO - BRANCH
         LA    R3,MY99TXDE
         ST    R3,MY99TUDE
         LA    R15,DALSUSER
         STH   R15,S99TUKEY
         LA    R15,1
         STH   R15,S99TUNUM
         LA    R15,8               LENGTH
         STH   R15,S99TULNG
         MVC   S99TUPAR(8),O99DE
NODE     EQU   *
*
*              PROCESS HOLD
*
         CLI   O99HO,C'H'          HOLD?
         BNE   NOHO                NO - BRANCH
         LA    R3,MY99TXHO
         ST    R3,MY99TUHO
         LA    R15,DALSHOLD
         STH   R15,S99TUKEY
         LA    R15,0
         STH   R15,S99TUNUM
NOHO     EQU   *
*
*              PROCESS PROGRAM NAME OR INTRDR
*
         CLI   O99PG,X'40'
         BE    NOPG
         CLI   O99PG,X'00'
         BE    NOPG
         LA    R3,MY99TXPG
         ST    R3,MY99TUPG
         LA    R15,DALSPGNM
         STH   R15,S99TUKEY
         LA    R15,1
         STH   R15,S99TUNUM
         LA    R15,8               SET LENGTH INITIALLY TO 8
         LA    R1,O99PG+7 POINT TO 8TH CHAR OF NAME
PGLOOP   CLI   0(R1),X'40'         BLANK?
         BNE   PGLEN               NO - BRANCH TO STORE LENGTH
         BCTR  R15,0               YES - DECREMENT LENGTH BY 1
         BCT   R1,PGLOOP           POINT BACK 1 CHAR AND BRANCH
PGLEN    STH   R15,S99TULNG
         MVC   S99TUPAR(8),O99PG
NOPG     EQU   *
*
*              PROCESS ATTRIBUTE LIST NAME
*
         CLI   O99AT,X'40'
         BE    NOAT
         CLI   O99AT,X'00'
         BE    NOAT
         LA    R3,MY99TXAT
         ST    R3,MY99TUAT
         LA    R15,DALDCBDD
         STH   R15,S99TUKEY
         LA    R15,1
         STH   R15,S99TUNUM
         LA    R15,8               SET LENGTH INITIALLY TO 8
         LA    R1,O99AT+7 POINT TO 8TH CHAR OF NAME
ATLOOP   CLI   0(R1),X'40'         BLANK?
         BNE   ATLEN               NO - BRANCH TO STORE LENGTH
         BCTR  R15,0               YES - DECREMENT LENGTH BY 1
         BCT   R1,ATLOOP           POINT BACK 1 CHAR AND BRANCH
ATLEN    STH   R15,S99TULNG
         MVC   S99TUPAR(8),O99AT
NOAT     EQU   *
*
*              PROCESS FORM
*
         CLI   O99FO,X'40'         FORM?
         BE    NOFO                NO - BRANCH
         CLI   O99FO,X'00'         FORM?
         BE    NOFO
         LA    R3,MY99TXFO
         ST    R3,MY99TUFO
         LA    R15,DALSFMNO
         STH   R15,S99TUKEY
         LA    R15,1
         STH   R15,S99TUNUM
         LA    R15,4
         STH   R15,S99TULNG
         MVC   S99TUPAR(4),O99FO
NOFO     EQU   *
*
*              PROCESS PERMANENTLY ALLOC
*
         LA    R3,MY99TXPE
         ST    R3,MY99TUPE
         LA    R15,DALPERMA
         STH   R15,S99TUKEY
         LA    R15,0
         STH   R15,S99TUNUM
*
*              PROCESS FREE=CLOSE
*
         CLC   O99PG,=CL8'INTRDR'  IF INTERNAL READER
         BE    FC                  THEN FORCE FREE=CLOSE
         CLI   O99FC,C'C'          FREE=CLOSE REQUESTED?
         BNE   NOFC                NO - BRANCH
FC       LA    R3,MY99TXFC
         ST    R3,MY99TUFC
         LA    R15,DALCLOSE
         STH   R15,S99TUKEY
         LA    R15,0
         STH   R15,S99TUNUM
NOFC     EQU   *
*
*              ALLOCATE
*
         LA    R1,MY99RBP
         SVC   99
*
*              TEST RETURN CODE
*
         LTR   R15,R15
         BNZ   DAIRFAIL
         SPACE
         CLI   MYDDRET,C'R'        DDNAME TO BE RETURNED?
         BNE   EXIT                NO - BRANCH
         LA    R3,MY99TXDD
         MVC   O99DD,=CL8' '       PAD WITH BLANKS
         LH    R14,S99TULNG
         BCTR  R14,0               LENGTH MINUS 1 FOR EX
         B     *+10
         MVC   O99DD(0),S99TUPAR   (EXECUTED)
         EX    R14,*-6             MOVE DDNAME
         B     EXIT
*
*              DIAGNOSE ALLOCATION ERROR
*
DAIRFAIL LA    R14,MY99RB
         USING S99RB,R14
         MVC   O99RSC,S99RSC       PASS REASON CODE TO CALLER
         DROP  R14                 S99RB
         LA    R1,MYDFAREA
         USING DFDSECTD,R1
         ST    R15,MYDFRC          STORE SVC 99 RETURN CODE
         LA    R15,MYDFRC
         ST    R15,DFRCP           STORE ADDRESS OF RETURN CODE
         LA    R15,MY99RB
         ST    R15,DFS99RBP        STORE ADDRESS OF SVC 99 REQUEST BLK
         SR    R15,R15
         ST    R15,MYJEFF02        STORE ZERO IN IKJEFF02 ADDRESS
         LA    R15,MYJEFF02
         ST    R15,DFJEFF02        STORE ADDRESS OF ZERO
         LA    R15,DFSVC99
         STH   R15,MYDFID          STORE TYPE OF REQUEST (SVC 99)
         LA    R15,MYDFID
         ST    R15,DFIDP           STORE ADDRESS OF TYPE
         L     R15,O99CPPL
         ST    R15,DFCPPLP         STORE CPPL ADDRESS OR ZERO
         CLC   DFCPPLP+1(3),=AL3(0) CPPL ADDRESS SUPPLIED
         BNE   *+8                 YES - USE PUTLINE
         OI    MYDFID,DFWTP        NO - USE WRITE-TO-PROGRAMMER
         LINK  EP=IKJEFF18
         L     R15,MYDFRC          RETURN SVC 99 RETURN CODE
         B     EXIT
*
*
*
EXIT0    SR    15,15               RETURN CODE ZERO
EXIT     LR    R1,R13              AREA TO BE FREED
         L     R13,4(,R13)         RESTORE OLD R13
         LR    R2,R15              SAVE RETURN CODE
         FREEMAIN R,A=(1),LV=@DATAL
         LR    R15,R2              RESTORE RETURN CODE
         LM    0,12,20(R13)        RESTORE OLD REGISTERS
         L     R14,12(,R13)        RESTORE RETURN ADDRESS
         BR    R14                 RETURN
         SPACE 3
         LTORG
         DC    0D'0'
         SPACE
O99DSECT DSECT
O99DD    DS    CL8                 DDNAME
O99SO    DS    CL1                 SYSOUT CLASS
O99FC    DS    C                   FREE=CLOSE IF 'C'
O99HO    DS    C                   HOLD=YES IF 'H'
         DS    C                   RESERVED
O99CPPL  DS    A                   ADDRESS OF CPPL OR ZERO
O99DE    DS    CL8                 DEST
O99PG    DS    CL8                 PROGRAM NAME OR 'INTRDR'
O99AT    DS    CL8                 ATTRIBUTE LIST NAME
O99FO    DS    CL4                 FORM NUMBER
O99CO    DS    H                   COPIES
         DS    CL2                 RESERVED
O99RSC   DS    CL4                 REASON CODES RETURNED HERE
         SPACE 3
@DATA    DSECT
         DS    18F
MY99RBP  DS    A                   SVC 99 RB POINTER
MY99RB   DS    5A                  SVC 99 REQUEST BLOCK
*
* TEXT UNIT POINTERS
*
MY99TUPL DS    0A                  SVC 99 TEXT LIST POINTERS
MY99TUDD DS    A                   TEXT UNIT POINTER, DDNAME
MY99TUSO DS    A                   TEXT UNIT POINTER, SYSOUT CLASS
MY99TUCO DS    A                   TEXT UNIT POINTER, COPIES
MY99TUDE DS    A                   TEXT UNIT POINTER, DEST
MY99TUHO DS    A                   TEXT UNIT POINTER, HOLD
MY99TUPG DS    A                   TEXT UNIT POINTER, PGM NAME
MY99TUPE DS    A                   TEXT UNIT POINTER, PERM
MY99TUFC DS    A                   TEXT UNIT POINTER, FREE=CLOSE
MY99TUFO DS    A                   TEXT UNIT POINTER, USING DD REF
MY99TUAT DS    A                   TEXT UNIT POINTER, ATTR LIST NAME
         DS    A                   HI ORDER BIT ON
TUPL$LEN EQU   *-MY99TUPL
*
* TEXT UNITS
*
MY99TXDD DS    3H,CL8              TEXT UNIT, DDNAME
MY99TXSO DS    3H,CL1              TEXT UNIT, SYSOUT CLASS
MY99TXCO DS    3H,H                TEXT UNIT, COPIES
MY99TXDE DS    3H,CL8              TEXT UNIT, DEST
MY99TXHO DS    3H                  TEXT UNIT, HOLD=YES
MY99TXPG DS    3H,CL8              TEXT UNIT, PROGRAM NAME
MY99TXPE DS    3H                  TEXT UNIT, PERM
MY99TXFC DS    3H                  TEXT UNIT, FREE=CLOSE
MY99TXFO DS    3H,CL4              TEXT UNIT, FORM NUMBER
MY99TXAT DS    3H,CL8              TEXT UNIT, ATTRIBUTE LIST NAME
*
*
*
MYDFAREA DS    5F                  IKJEFF18 PARAMETER BLOCK
MYDFRC   DS    F                   SVC 99 RETURN CODE
MYJEFF02 DS    F                   MESSAGE ROUTINE (ZERO)
MYDFID   DS    H                   TYPE OF FAILURE (SVC 99)
MYDDRET  DS    C                   SWITCH
         DS    0D
@DATAL   EQU   *-@DATA
         EJECT
         IEFZB4D0
         EJECT
         IEFZB4D2
         EJECT
         IKJEFFDF DFDSECT=YES
         SPACE 3
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         END
