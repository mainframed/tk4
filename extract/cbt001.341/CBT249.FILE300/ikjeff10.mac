         TITLE 'IKJEFF10 - TSO SUBMIT EXIT - AFDSC'
*-$DOC@---------------------------------------------------------------*
*                                                                     *
*                     I  K  J  E  F  F  1  0                          *
*                                                                     *
*                                                                     *
*        THE AFDSC VERSION OF THE IBM TSO SUBMIT USER EXIT ENSURES    *
*        THAT THE JOBNAME OF THE JOB BEING SUBMITTED IS EXACTLY       *
*        THE USERID PLUS ONE CHARACTER, AND THAT THE PROGRAMMER       *
*        NAME FIELD OF THE SUBMITTED JOB BEGINS WITH THE NAME OF      *
*        THE PERSON HOLDING THE USERID.                               *
*                                                                     *
*        I WANT TO THANK CAPT JAMES CARTER WHO ORGINIALLY WROTE       *
*        THE CODE. MY OBJECTIVE WAS TO CLEANUP THE CODE, AND          *
*        INSERT IBM DSECT'S IN THE PROPER PLACES SO IT DID NOT        *
*        APPEAR TO HAVE BEEN CODED WITH 'HIDDEN MIRRORS'. JIM         *
*        HAD TO GET IT UP IN A HURRY AND GET THE FUNCTION             *
*        INSTALLED QUICK. I HAVE THE TIME NOW TO CLEANUP AND          *
*        UNDERSTAND THE CODE.                                         *
*                                                                     *
* COURTESY:    JIM MARSHALL                                           *
*              AIR FORCE DATA SERVICES CENTER                         *
*              IBM OPERATING SYSTEMS SUPPORT BRANCH                   *
*              CMIS - ROOM 1C1039                                     *
*              WASHINGTON  D.C.  20330                                *
*              (202) 695-1274/2478                                    *
*                                                                     *
* INSTALLED:   15 FEBRUARY 1980                                       *
*                                                                     *
* CHANGE LOG:                                                         *
*              30 MARCH 1982                                          *
*              JIM MARSHALL, AFDSC/CMIS                               *
*              A. ID OF MSGS CHANGED FROM SFI TO CMI.                 *
*              B. CODED REARRANGED AND DOCUMENTED FURTHER.            *
*              C. REGISTER EQUATES ADDED FOR READABILITY              *
*              D. DSECTS ADDED FOR SAFETY SAKE !!!                    *
*                                                                     *
*---------------------------------------------------------------------*
*  FOR A FULL EXPLANATION OF THE INPUT PARAMETERS, SEE IBM MANUAL     *
*  ON "OS/VS2 SYSTEMS PROGRAMMING LIBRARY: TSO", PAGES 17-20.         *
*---------------------------------------------------------------------*
*  CMIMSGIDS:  THIS PROGRAM WRITES OUT THE FOLLOWING MESSAGE IDS:     *
*  CMI5001 THRU CMI5003 INCLUSIVE.                                    *
*  CMI5001E  JOBNAME MUST = TSO USERID PLUS ONE CHARACTER             *
*  CMI5002E  PROGRAMMER NAME IS NOT YOURS                             *
*  CMI5003E  JOBNAME HAS MORE THAN 1 ADDITIONAL CHARACTER             *
*  CMI5004E  PROGRAMMER NAME MUST APPEAR IMMEDIATELY AFTER THE ACCT   *
*            INFORMATION ON THE 1ST JOBCARD                           *
*                                                                     *
*    NOTE:   CMI5004E IS A LOCAL STANDARD WHERE THE USER MUST         *
*            CODE THE JOBCARD AS FOLLOWS:                             *
*                                                                     *
*            //JOBNAME JOB (-ACCT-),PRGMERNAME,   ETC                 *
*                                                                     *
*    DOCUMENTATION FOR CMI LIBRARY:                                   *
*                                                                     *
*        MACROS:   IKJEFFIE,IKJTCB,IEZJSCB,IEFAJCTB(INCLUDES ACT)     *
*        ASSEMBLY NOTE: "IKJEFFIE IETYPE=SUBMIT" GENERATES TWO DSECTS *
*        WHICH MAP THE EIGHT WORD PARAMETER LIST PASSED TO THE SUBMIT *
*        EXIT (IEDSECTD AND IESUBCTD).                                *
*                                                                     *
*-$DOC$---------------------------------------------------------------*
         SPACE 2
R0       EQU   0                       UNUSED
R1       EQU   1                       ENTRY PTER TO PARAMETER LIST
R2       EQU   2                       WORK REGISTER
R3       EQU   3                       WORK REGISTER
R4       EQU   4                       'MIRROR' REGISTER
R5       EQU   5                       WORK REGISTER
R6       EQU   6                       WORK REGISTER
R7       EQU   7                       WORK REGISTER
R8       EQU   8                       WORK REGISTER
R9       EQU   9                       ADDR TO IESUBCTD
R10      EQU   10                      UNUSED
R11      EQU   11                      ADDR TO IEDSECTD
R12      EQU   12                      BASE REGISTER
R13      EQU   13                      SAVE AREA PTER
R14      EQU   14                      RETURN ADDR
R15      EQU   15                      RETURN CODE
         SPACE
IKJEFF10 CSECT
         SAVE (14,12),,IKJEFF10_AFDSC_&SYSDATE_&SYSTIME
         LR    R12,R15
         USING IKJEFF10,R12
         L     R11,0(,R1)
         USING IEDSECTD,R11
         L     R9,IESUBCTP
         USING IESUBCTD,R9
         EJECT
*-------------------------------------------------------------------*
*        CHECK 1ST TO SEE IF WE HAVE GONE THROUGH THE EXIT BEFORE.  *
*        IF WE HAVE THEN WE ARE BACK BECAUSE WE HAVE ISSUED A       *
*        NASTY MSG AND ARE GIVEN A LAST CHANCE TO CLEAN UP AFTER    *
*        OURSELVES.                                                 *
*                                                                   *
*-------------------------------------------------------------------*
         SPACE
         CLC   IEMSGP+1(3),=X'000000'  CHECK FOR RECURSIVE CALL ?
         BE    CONTCHCK                CONTINUE TO PROCESS
         SPACE
*-------------------------------------------------------------------*
*        WE ARE BACK FOR THE LAST TIME AND MUST DO SOME             *
*        HOUSECLEANING BEFORE GO AWAY FOR GOOD.                     *
*-------------------------------------------------------------------*
         SPACE
         L     R1,IEMSGP               GET MSG ADDR FOR FREEMAIN
         LH    R0,0(,R1)               GET LENGTH TO FREE
         FREEMAIN R,LV=(0),A=(1)       FREE AREA WE GOT BEFORE
         B     RET16                   GO RETURN WITH RC=16
         SPACE
*-------------------------------------------------------------------*
*        WE MUST CHECK TO SEE IF THIS IS A CONTINATION CARD. IF SO, *
*        THEN WE SHOULD GO BACK WITH RC=0 TO SAY WE APPROVE OF      *
*        THIS CARD AND GIVE US THE NEXT ONE.                        *
*-------------------------------------------------------------------*
         SPACE
CONTCHCK TM    IESTMTYP,IESCONTN       IS THIS CONTINATION CARD ??
         BO    RET0                    GO GET OUT WITH RC=0
         SPACE
*--------------------------------------------------------------------*
*        WE ARE GOING TO DO SOME CHECKING SO GO GET WORKAREA         *
*--------------------------------------------------------------------*
         SPACE
FIRST    EQU   *
         GETMAIN R,LV=ENDDUMMY-DUMMY   GET WORKAREA TO PLAY WITH
         LR    R10,R1                  SAVE THE ADDRESS
         USING DUMMY,R10               SETUP ADDRESSABILITY
         LA    R8,SAVEREG              SETUP
         ST    R8,8(R13)                SAVEAREA
         ST    R13,SAVEREG+4             CHANINING
         LR    R13,R8                     LINKAGE
         SPACE
*------------------------------------------------------------------*
*        GET THE USERID AND THE JOBNAME INTO MY WORKAREA SO I      *
*        CAN DO SOME INVESTIGATIVE WORK.                           *
*------------------------------------------------------------------*
         SPACE
         L     R1,IEUSRIDP             GET ADDR OF USERID FIELD
         MVC   USERID,0(R1)            PUT IT INTO WORKAREA
         L     R1,IECARDP              GET ADDR OF CURRENT JCL CARD
         MVC   JOBNAME,2(R1)           PUT JOBNAME IN MY WORKAREA
         LA    R8,USERID+6             POINT TO 7TH CHARACTER
         SPACE
*------------------------------------------------------------------*
*        LOOP THROUGH THE JOBNAME TO GET THE LENGTH OF IT          *
*------------------------------------------------------------------*
         SPACE
LOOP     EQU   *
         CLI   0(R8),C' '              IS IT A BLANK ?
         BNE   SKIP                    SURE IS
         BCT   R8,LOOP                 LOOP AND BACK UP 1 CHAR
         SPACE
*-------------------------------------------------------------------*
*        NOW WE WILL SEE IF THE USERID AND LENGTH OF THE USERID     *
*        MATCHES THE JOBNAME AND LENGTH.                            *
*-------------------------------------------------------------------*
         SPACE
SKIP     EQU   *
         LA    R7,USERID               R7=USERID ADDR, MY WORKAREA
         LR    R6,R8                   R6=ADDR, LAST BYTE OF USERID
         SLR   R8,R7                   R8=LENGTH OF TSO USERID
         SPACE
TEST1    EQU   *
         EX    R8,COMPARE1             COMPARE USERID TO JOBNAME
         BNE   GIVEMSG1                USERID NOT EQUAL TO JOBNAME
*                                      LESS ONE BYTE
         C     R8,=F'+6'               IF USERID MAX LENGTH IS 6 THEN
*                                      NO NEED TO CHECK JOBNAME LENGTH
         BNL  TEST2
         SPACE
*--------------------------------------------------------------------*
*        NOW CHECK LENGTH OF JOBNAME                                 *
*--------------------------------------------------------------------*
         SPACE
         MVC   USERID,JOBNAME
         CLI   2(R6),C' '              SHOULD BE TSO ID + 1 BYTE
         BE    TEST2                   LENGTH IS OK
         LA    R8,MSG3                 LENGTH IS MORE THAN A DIFFERENCE
*                                      OF 1
         B     RETFR8                  ISSUE MSG3
         SPACE
*---------------------------------------------------------------------*
*        WE WANT TO TELL THE USER OF AN ERROR, SO WE WILL DO A        *
*        A GETMAIN FOR SOME SPACE, MOVE THE NASTY MSG TO IT, PLACE    *
*        THE ADDRESS IN THE PARMLIST AT 'IEMSGP' AND RETURN WITH      *
*        A RETURN CODE = 8.  THEN WE WILL GET CONTROL BACK TO DO THE  *
*        THE FREEMAIN OF THE MSG AREA AND EXIT WITH RC=16.            *
*---------------------------------------------------------------------*
         SPACE
GIVEMSG1 EQU   *
         LA    R8,MSG1
         B     RETFR8
         SPACE
*--------------------------------------------------------------------*
*        FIND PROGRAMMER NAME ON THE JOB CARD AND COMPARES IT WITH   *
*        WHAT NAME IS FOUND IN THE ACCOUNT TABLE                     *
*--------------------------------------------------------------------*
         SPACE
TEST2    L     R8,IECARDP              GET ADDR OF CURRENT JCL STATE.
         XR    R2,R2                   CLEAR R2 FOR SLICK TEST
         TRT   18(54,8),TABLE          SEARCH FOR CHAR ')'
         B     *+4(R2)                 IF SO WE BRANCH TO PAREN
         B     RETFR16                 DID NOT FIND MEANS WE GO
*                                      BACK WITH RC=16
         SPACE
PAREN    EQU   *
         CLI   2(R1),C''''             IS THERE A QUOTE BEFORE NAME
*                                      THE JOB CARD
         BNE   NOQUOTE                 IF NOT THEN DO NOT CARE
         LA    R1,1(,R1)               MUST MOVE OVER ONE TO MAKE
*                                      ALLOWANCE FOR THE QUOTE
NOQUOTE  EQU   *
         CLI   2(R1),C' '              IS NAME A BLANK AFTER COMMA
         BE    GIVEMSG4                NOT CORRECT IF SO
         MVC   PROGNAME,2(R1)          PROGRAMMER NAME FOUND
         SPACE
*------------------------------------------------------------------*
*        THE FOLLOWING IS THE CODE I REPLACED WITH DSECTS. IT TOOK
*        OUT THE MIRRORS THAT APPEARED TO BE USED.
*
*        L     8,CVTPTR                R8 = ADDRESS OF CVT
*        L     8,0(,8)                 R8 = ADDRESS OF DOUBLEWORD
*        L     8,4(,8)                 R8 = ADDRESS OF CURRENT TCB
*        L     8,X'7C'(,8)             R8 = ADDRESS OF TCB(JOBSTEP)
*        L     8,X'B4'(,8)             R8 = ADDRESS OF JSCB
*        L     8,X'104'(,8)            R8 = ADDRESS OF JCT-16
*        L     8,X'10'+X'28'(,8)       R8 = ADDRESS OF ACT-16
*                                      (ADDR IN R8 LEFT JUSTIFIED)
*        SRL   R8,8                    RIGHT JUSTIFY ADRESS IN R8
*        LA    R8,24(,R8)              R8 = ADDRESS OF NAME IN ACT
*-------------------------------------------------------------------*
         SPACE
*-------------------------------------------------------------------*
*        DIG WAY DOWN DEEP IN MEMORY TO GET ADDR OF CVT AT X'10'
*-------------------------------------------------------------------*
         SPACE
         L     R4,CVTPTR               R4 = ADDRESS OF CVT
         USING CVT,R4                  ADDR TO CVT
         SPACE
*------------------------------------------------------------------*
*        NOW WE GET THE ADDRESS OF THE DOUBLE WORD THAT HAS THE
*        ADDRESSES OF NEW TCB & CURRENT TCB (1ST-WORD&2ND-WORD)
*------------------------------------------------------------------*
         SPACE
         L     R4,CVTTCBP              R4 = ADDRESS OF DOUBLEWORD
         DROP  R4
*------------------------------------------------------------------*
*        POINT TO THE 2ND WORD (CURRENT TCB)
*------------------------------------------------------------------*
         SPACE
         L     R4,4(,R4)               R4 = ADDRESS OF CURRENT TCB
         SPACE
*------------------------------------------------------------------*
*        NOW WE GO GET THE CURENT JOBSTEP TCB
*------------------------------------------------------------------*
         SPACE
         USING TCB,R4                  ADDR TO TCB
         L     R4,TCBJSTCB             R4 = ADDRESS OF TCB(JOBSTEP)
         DROP  R4
         SPACE
*------------------------------------------------------------------*
*        NOW IN THIS TCB WE WANT TO GET THE ADDRESS OF THE JSCB
*------------------------------------------------------------------*
         SPACE
         USING TCB,R4                  ADDR TO TCB
         L     R4,TCBJSCB              R4 = ADDRESS OF JSCB
         DROP  R4
         SPACE
*-----------------------------------------------------------------*
*        NOW FROM THE JSCB WE NEED THE ADDRESS OF THE JCT
*-----------------------------------------------------------------*
         SPACE
         USING IEZJSCB,R4              ADDR TO JSCB
         L     R4,JSCBJCT              R4 = ADDRESS OF JCT-16
         DROP  R4
         SPACE
*----------------------------------------------------------------*
*        HERE IS WHERE I NEED TO DO SOME RESEARCH IN MIRROR USE.
*        SO I WILL LEAVE THE CODE AS IS FOR THE PRESENT.
*----------------------------------------------------------------*
         SPACE
         L     R4,X'10'+X'28'(,R4)     R4 = ADDRESS OF ACT-16
         SPACE
*----------------------------------------------------------------*
*        THE ADDRESS WE GOT IN R4 ABOVE IS LEFT JUSTIFIED, SO
*        WE MUST MOVE THE ADDRESS OVER IN THE REGISTER 8 BITS
*----------------------------------------------------------------*
         SPACE
         SRL   R4,8                    RIGHT JUSTIFY ADDR
         SPACE
*----------------------------------------------------------------*
*        ONCE WE HAVE RIGHT JUSTIFIED THE ADDRESS AS ABOVE, THEN
*        PROGRAMMER'S NAME IS 24 BYTES OFF THE ACT-16
*----------------------------------------------------------------*
         SPACE
         LA    R8,X'10'+X'8'(,R4)      R8 = ADDR OF NAME IN ACT
         SPACE
*----------------------------------------------------------------*
*        THIS NOW ENDS THE TRICK PART OF THE CODE. THANK HEAVENS
*----------------------------------------------------------------*
         SPACE
         MVC   ACTNAME,0(R8)           MOVE PGM NAME INTO MY AREA
         LA    R2,ACTNAME+7            POINT TO LAST CHAR 8 MAX
LOOP2    EQU   *
         CLI   0(R2),C' '              IS IT A BLANK ?
         BNE   SKIP2                   FOUND A REAL CHARACTER
         BCT   R2,LOOP2                BACK UP ONE CHARACTER AND LOOP
SKIP2    EQU   *
         LA    R1,ACTNAME              POINT TO PGM NAME
         SLR   R2,R1
         EX    R2,COMPARE2             NAME IN ACT = NAME ON JOB CARD?
         BE    RETFR0                  YES, SO GO GIVE RC=0
         LA    R8,MSG2                 NO, SETUP FOR NASTY MSG
         B     RETFR8
*--------------------------------------------------------------------*
*        GIVE ERROR MSG FOR NAME NOT IMMEDIATELY AFTER THE ACCT      *
*        INFORMATION ON THE 1ST CARD (LOCAL STANDARD).               *
*--------------------------------------------------------------------*
         SPACE
GIVEMSG4 EQU   *
         LA    R8,MSG4
         B     RETFR8
         EJECT
*--------------------------------------------------------------------*
*        RETURN WITH RET CODE = 0  BUT DO NOT DO FREEMAIN            *
*        WE NEVER GOT AN AREA, SO DO NOT RESTORE R13                 *
*--------------------------------------------------------------------*
         SPACE
RET0     EQU   *
         LM    R14,R12,12(R13)         RESTORE REGISTERS
         LA    R15,IECONTIN            GET RC=0
         BR    R14                     GODDBYE
         SPACE
*--------------------------------------------------------------------*
*        RETURN WITH RET CODE = 0  AND REMEMBER TO DO FREEMAIN       *
*--------------------------------------------------------------------*
         SPACE
RETFR0   EQU   *
         BAL   R8,FREESAVE             GO FREE MY WORKAREA
         LM    R14,R12,12(R13)         RESTORE REGISTERS
         LA    R15,IECONTIN            GET RETURN CODE = 0
         BR    R14                     GODDBYE
         SPACE
*--------------------------------------------------------------------*
*        RETURN WITH RET CODE = 8  AND WE RETURN SIGNALING A         *
*                                  NASTY MSG TO BE GIVEN, WE WILL    *
*                                  BE RETURNING THOUGH.              *
*--------------------------------------------------------------------*
         SPACE
RETFR8   EQU   *
         XR    R3,R3                   CLEAR R3
         LH    R3,0(,R8)               R3 = LENGTH OF MSG
         GETMAIN R,LV=(R3)             GO GET THE STORAGE
         BCTR  R3,0                    SETUP FOR EXECUTE INSTR
         EX    R3,MOVEMSG              MOVE MSG TO GOTTEN AREA
         ST    R1,IEMSGP               PUT ADDR IN PARMLIST AREA
         BAL   R8,FREESAVE             GO FREE MY WORKAREA
         LM    R14,R12,12(R13)         RESTORE REGISTERS
         LA    R15,IEMSG               GET RETURN CODE = 8
         BR    R14                     GO BACK TO SYSTEM(FOR NOW)
         SPACE
*--------------------------------------------------------------------*
*        RETURN WITH RET CODE = 16  BUT DO NOT DO FREEMAIN           *
*        WE NEVER GOT AN AREA, SO DO NOT RESTORE R13                 *
*--------------------------------------------------------------------*
         SPACE
RET16    EQU   *
         LM    R14,R12,12(R13)
         LA    R15,IEABORT             GET RETURN CODE = 16
         BR    R14
         SPACE
*--------------------------------------------------------------------*
*        RETURN WITH RET CODE = 16                                   *
*--------------------------------------------------------------------*
         SPACE
RETFR16  EQU   *
         BAL   R8,FREESAVE             GO FREE MY WORKAREA
         LM    R14,R12,12(R13)         RESTORE REGISTERS
         LA    R15,IEABORT             GET RETURN CODE = 16
         BR    R14                     BYE FOR GOOD
         SPACE
*--------------------------------------------------------------------*
*         DO FREEMAIN FOR SAVE AREAS WE GOT FOR IKJEFF10             *
*--------------------------------------------------------------------*
         SPACE
FREESAVE EQU   *
         LR    R1,R13                  POINT TO GOTTEN AREA
         L     R13,4(R13)              GET BACK HIGH SAVE
         FREEMAIN R,LV=ENDDUMMY-DUMMY,A=(1)
         BR    R8                      GO BACK
         SPACE
         EJECT
*--------------------------------------------------------------------*
*        CONSTANTS                                                   *
*--------------------------------------------------------------------*
         DS    0H
MOVEMSG  MVC   0(0,1),0(R8)
COMPARE1 CLC   USERID(0),JOBNAME
COMPARE2 CLC   ACTNAME(0),PROGNAME
         DS    0F
MSG1     DC    AL2(MSG1END-MSG1)
         DC    C'CMI5001E JOBNAME MUST = TSO USERID PLUS ONE CHARACTER'
MSG1END  EQU   *
         DS    0F
MSG2     DC    AL2(MSG2END-MSG2)
         DC    C'CMI5002E PROGRAMMER NAME IS NOT YOURS'
MSG2END  EQU   *
         DS    0F
MSG3     DC    AL2(MSG3END-MSG3)
         DC    C'CMI5003E JOBNAME HAS MORE THAN 1 ADDITIONAL CHARACTER'
MSG3END  EQU   *
         DS    0F
MSG4     DC    AL2(MSG4END-MSG4)
         DC    C'CMI5004E PROGRAMMER NAME MUST APPEAR IMMEDIATELY AFTERX
                THE ACCT INFORMATION ON THE 1ST JOB CARD'
MSG4END  EQU   *
         LTORG
TABLE    DC    XL256'0'
         ORG   TABLE+C')'
         DC    X'4'
         ORG
DUMMY    DSECT
SAVEREG  DS    9D
PROGNAME DS    D
ACTNAME  DS    D
JOBNAME  DS    D
USERID   DS    D
ENDDUMMY DS    0D
         EJECT
         IKJEFFIE IETYPE=SUBMIT
         EJECT
         CVT   LIST=YES,DSECT=YES
         EJECT
         IKJTCB LIST=YES,DSECT=YES
         EJECT
         IEZJSCB
         EJECT
         IEFAJCTB
         SPACE 2
         END   IKJEFF10
