         TITLE '   S P O T    ( I K J E B 9 S P ) '
************************************************************
*                                                          *
*         SPOT / SELECT / EXCLUDE  SUBCOMMANDS OF EDIT     *
*                                                          *
************************************************************
         SPACE
*        WRITTEN BY. BILL GODFREY,  PLANNING RESEARCH CORPORATION.
*        INSTALLATION. PRC COMPUTER CENTER INC, MCLEAN VA.
*        DATE WRITTEN. NOVEMBER 17 1975.
*        DATE UPDATED. APRIL 16 1979.
*        ATTRIBUTES. RE-ENTRANT.
*        MACROS. GETMAIN, FREEMAIN, LINK, PUTLINE, IKJRLSA,
*            IKJEBESH, IKJEBECA,
*            PLUS TSO MAPPING MACROS AND PARSE MACROS.
*        DESCRIPTION.
*            THIS IS (ARE) THE SPOT, SELECT, AND EXCLUDE
*            SUBCOMMANDS OF EDIT.
*            SPOT    - DISPLAYS OR COUNTS ALL LINES THAT
*                      CONTAIN A SPECIFIED STRING
*            SELECT  - RETAINS ALL LINES THAT CONTAIN
*                      A SPECIFIED STRING, WHILE
*                      DELETING ALL OTHER LINES
*            EXCLUDE - DELETES ALL LINES THAT CONTAIN
*                      A SPECIFIED STRING.
*            SPOT  &LINERANGE &STRING &POSITION
*
*            THE 'ABSENT' KEYWORD CAUSES THE OPPOSITE EFFECT,
*            THAT IS, ONLY LINES THAT DO NOT CONTAIN THE STRING
*            ARE LISTED/RETAINED/DELETED. (CODE ADDED 15JUN76).
*
*            THE 'COUNT' KEYWORD CAUSES ONLY A COUNT OF THE
*            NUMBER OF LINES THAT WOULD HAVE BEEN DISPLAYED.
*            (CODE ADDED 28DEC76).
*
*            'ASIS' STRING ACCEPTED FOR 'ASIS' EDIT. (04JAN77).
*
*            THE 'BOTH' KEYWORD CAUSES BOTH STRING AND DATA
*            TO BE CHANGED TO UPPER CASE BEFORE COMPARISONS ARE
*            MADE.  (CODE ADDED 04JAN77).
*
*            THE 'F' KEYWORD IS FOR A 'FOREGROUND' LIST ON A
*            HAZELTINE TERMINAL, SO THE LISTED LINE CAN BE REBUILT
*            AND RE-ENTERED AS A REPLACEMENT FOR THE LINE IF THE
*            DATASET IS NUMBERED. (CODE ADDED 05JAN77).
*
*            STRING DELIMITERS NEED NOT BE QUOTES. (07JAN77).
*
*            THE POSITIONAL PARAMETER THAT USED TO INDICATE THE
*            COLUMN IN WHICH THE STRING WAS TO BE FOUND MAY NOW
*            BE SPECIFIED AS A RANGE OF COLUMNS. (CODE ADDED 10NOV77).
*
*            THE 'SELECT' AND 'EXCLUDE' OPTIONS WERE ADDED.  THEY
*            WERE KEYWORDS WHEN ADDED, BUT LATER WERE CHANGED TO
*            ALIASES OF SPOT BECAUSE SPOT IS CONSIDERED A READ-ONLY
*            SUBCOMMAND, THAT IS IT NEVER CHANGES THE DATA, AND A
*            USER SHOULD NOT HAVE TO WORRY THAT A MISTAKEN KEYSTROKE
*            MIGHT CAUSE SPOT TO DELETE SOME LINES. (10NOV77).
*            COUNT OF LINES DELETED DISPLAYED (CODE ADDED 06JUN78).
*
*            THE 'NEXT' KEYWORD WAS ADDED TO MAKE SPOT BEHAVE
*            SOMEWHAT LIKE 'FIND'. IT CAUSES SPOT TO LOCATE THE
*            NEXT OCCURRENCE OF A STRING, AND (IF VERIFY IS ON)
*            DISPLAY IT. WITH THIS, A USER CAN 'FIND' THE NEXT
*            LINE THAT HAS A BLANK ABSENT IN COLUMN 1, FOR EXAMPLE.
*            THIS WORKS RATHER CRUDELY BECAUSE IT DOES A 'DOWN 1'
*            BEFORE IT BEGINS LOOKING AT DATA, AND THE ENTIRE
*            STRING MUST BE RE-ENTERED EACH TIME.  IT WOULD BE
*            BETTER IF THE STRING, COLUMN RANGE, ABSENT OPTION,
*            AND LAST PLACE FOUND COULD BE SAVED IN THE EDIT
*            COMMUNICATIONS AREA FOR A SUBSEQUENT SPOT WITH
*            NO OPERANDS. SOME DAY. (10NOV77).
*
*            THE 'QUIET' KEYWORD SUPPRESSES CERTAIN MESSAGES
*            SUCH AS LINES DELETED (CODE ADDED 06JUN78).
*
*            THE SUBCOMMANDS 'SELECT' AND 'EXCLUDE' ARE ALIASES
*            OF SPOT THAT DELETE LINES. (07SEP78).
*
*            'MASK' KEYWORD AND LOGIC ADDED.  (07DEC78).
*            SELECT/EXCLUDE KEYWORDS REMOVED. ONLY ALIASES WORK.
*            ONCE AGAIN SPOT CAN BE TRUSTED NOT TO ALTER DATA.
*            CHECK FOR ILLEGAL KEYWORDS WHEN SELECT OR EXCLUDE.
*            IOPL REMOVED, CATMPLST USED INSTEAD.
*            SETTING OF UPT NOPROMPT BIT REMOVED.  (07DEC78).
*
*            CHANGES ...
*            MYPPL REMOVED, CATMPLST USED INSTEAD.
*            MYECB REMOVED, CATMPLST ECB USED (FIXES PROBLEM OF
*            ATTENTION FROM PARSE NOT LETTING GO).
*            MYANS REMOVED, CAPTPRSD USED INSTEAD. (16APR79).
*            IKJRLSA ADDED TO FREE PARSE PDL AREAS. (16APR79).
*            13JUN80 - HAZELTINE 'F' KEYWORD REMOVED.
         SPACE
SPOT     START
         USING *,R12
         B     @PROLOG-*(,15)
         DC    AL1(11),CL11'SPOT  '
         DC    CL16' &SYSDATE &SYSTIME ',C'PRC '
@SIZE    DC    0F'0',AL1(1),AL3(@DATAL)  SUBPOOL AND LENGTH
@PROLOG  STM   14,12,12(R13)
         LR    R12,R15             BASE REGISTER
         LR    R9,R1
         USING IKJEBECA,R9
         L     R0,@SIZE
         GETMAIN R,LV=(0)
         XC    0(256,R1),0(R1)
         ST    R13,4(,R1)          CHAIN FORWARD
         ST    R1,8(,R13)          CHAIN BACK
         LR    R13,R1              UPDATE SAVE AREA POINTER
         USING @DATA,R13
         SPACE
         L     R2,CAPTTMP
         USING CPPL,R2
         SPACE
         SR    R7,R7               SET RC=0
         MVI   TEXTNOTF,C'N'
         MVI   OPPOSW,0
         MVI   MASKSW,0
         MVI   SELEX,0
         L     R3,CPPLECT
         USING ECT,R3
         CLC   ECTSCMD(3),=C'SEL'
         BNE   *+8
         MVI   SELEX,1
         CLC   ECTSCMD(3),=C'EXC'
         BNE   *+8
         MVI   SELEX,2
         DROP  R3                  ECT
         SLR   R15,R15
         ST    R15,COUNTER
         ST    R15,COUNTED
         SPACE
************************************************************
*                                                          *
*        LOAD THE PUTLINE SERVICE ROUTINE                  *
*                                                          *
************************************************************
         SPACE
         L     R15,16              LOAD CVT POINTER
         TM    444(R15),X'80'      IS PUTLINE LOADED? (MVS)
         BNO   PUTLOAD             NO - BRANCH TO LOAD
         L     R15,444(,R15)       YES - USE CVTPUTL
         B     PUTLOADX            BRANCH AROUND LOAD
PUTLOAD  LA    R0,=CL8'IKJPUTL'
         LOAD  EPLOC=(0)
         LR    R15,R0              GET ENTRY ADDRESS
         LA    R15,0(,R15)         CLEAR HI BYTE FOR DELETE ROUTINE
PUTLOADX ST    R15,MYPUTLEP        SAVE PUTLINE ENTRY ADDRESS
         SPACE
************************************************************
*                                                          *
*        CHECK IF OPERANDS PRESENT                         *
*                                                          *
************************************************************
         SPACE
         TM    CASCBFFL,CAOPERND   OPERANDS SPECIFIED?
         BZ    ERRNULLS
         SPACE
************************************************************
*                                                          *
*        COMPUTE MAXIMUM ACCEPTABLE COLUMN                 *
*                                                          *
************************************************************
         SPACE
         TM    CACFLAG1,CANONUM    NONUM?
         BO    MAXCOLB             YES - BRANCH
         CLI   CALINE,1            SEQUENCE NUMBERS IN COL 1?
         BE    MAXCOLA             YES - BRANCH
*
*        (NUM AND SEQUENCE NUMBERS ON RIGHT)
*
         SR    R1,R1
         IC    R1,CALINE
         BCTR  R1,0
         ST    R1,MAXCOL
         B     MAXCOLX
*
*        (NUM AND SEQUENCE NUMBERS ON LEFT)
*
MAXCOLA  LH    R1,CALRECL
         SR    R14,R14
         SH    R1,=H'4'            LRECL-4
         IC    R14,CALENGTH
         SLR   R1,R14              LRECL-4-SEQLENGTH
         ST    R1,MAXCOL
         B     MAXCOLX
*
*        (NONUM)
*
MAXCOLB  LH    R1,CALRECL
         SH    R1,=H'4'            LRECL-4
         ST    R1,MAXCOL
MAXCOLX  EQU   *
         SPACE
************************************************************
*                                                          *
*        CALL THE 'PARSE' SERVICE ROUTINE                  *
*                                                          *
************************************************************
         SPACE
         LA    R15,CATMPLST
         USING PPL,R15
         MVC   PPLUPT(4),CPPLUPT
         MVC   PPLECT(4),CPPLECT
         L     R0,=A(SPOTPCL)
         ST    R0,PPLPCL
         LA    R0,CAPTPRSD
         ST    R0,PPLANS
         MVC   PPLCBUF(4),CAPTIBFR
         ST    R9,PPLUWA
         DROP  R15                 PPL
         DROP  R2                  CPPL
         SPACE
         LA    R1,CATMPLST
         L     R15,16              GET ADDRESS OF CVT
         TM    X'20C'(R15),X'80'   IF HI ORDER BIT NOT ONE (MVS)
         BNO   TSRLINK
         L     R15,X'20C'(,R15)    GET ADDR OF IKJPARS (MVS)
         BALR  R14,R15             CALL IKJPARS
         B     TSREXIT
TSRLINK  EQU   *
         LINK  EP=IKJPARS,SF=(E,LINKAREA)
TSREXIT  EQU   *
         SPACE
************************************************************
*                                                          *
*        TEST RETURN CODE FROM PARSE                       *
*                                                          *
************************************************************
         SPACE
         LTR   R15,R15
         BNZ   ERRSYNTX
         SPACE
************************************************************
*                                                          *
*        DO SOME SYNTAX CHECKS BEFORE ANY I/O              *
*                                                          *
************************************************************
         SPACE
         L     R6,CAPTPRSD
         USING IKJPARMD,R6
         SPACE
         LR    1,12
         LA    0,8
         SLL   0,2
         AR    1,0
         L     0,0(,1)
         SLL   0,1
         CNOP  0,4
         BAL   1,*+8
         DC    X'AFB38680'
         L     1,0(,1)
         CLR   1,0
         BNE   EXIT0
         SPACE
         CLI   SELEX,0             SPOT?
         BE    OPNDSPOT            YES, CHECK SPOT OPERANDS
         CLI   COUKW+1,0           COUNT SPECIFIED?
         BNE   ERRSYNTX            YES, SYNTAX ERROR
         CLI   NEXTKW+1,0          NEXT SPECIFIED?
         BNE   ERRSYNTX            YES, SYNTAX ERROR
         AGO   .HAZ2
         CLI   HAZELKW+1,0         F SPECIFIED?
         BNE   ERRSYNTX            YES, SYNTAX ERROR
.HAZ2    ANOP
OPNDSPOT EQU   *
         CLI   ABSKW+1,1           'ABSENT' SPECIFIED?
         BNE   *+8                 NO - BRANCH
         MVI   OPPOSW,C'A'         YES - SET SWITCH
         CLI   MASKKW+1,1          'MASK' SPECIFIED?
         BNE   *+8
         MVI   MASKSW,C'M'         YES
         SPACE
         CLI   SELEX+0,2           'EXCLUDE' SPECIFIED?
         BNE   EXCLUDEX            NO - BRANCH
         CLI   OPPOSW,C'A'         EXCLUDE ABSENT = SELECT PRESENT
         BE    EXCLUDEA
         MVI   OPPOSW,C'A'         CHANGE PRESENT TO ABSENT
         B     EXCLUDEX
EXCLUDEA MVI   OPPOSW,0            CHANGE ABSENT TO PRESENT
EXCLUDEX EQU   *
         SPACE
         TM    QUOTES+6,X'80'      QUOTES SPECIFIED?
         BZ    ERRNULLS            NO - ERROR - BRANCH
         SR    R1,R1
         CH    R1,QUOTES+4         NULL QUOTED STRING?
         BE    ERRNULLS            YES - BRANCH
*
*              'ASIS' FEATURE, SUGGESTED BY PETER BUCK
*
         TM    CACFLAG1,CACAPS     CAPS OR ASIS
         BO    QCAPS               CAPS - FORCE STRING TO CAPS
         CLI   BOTHKW+1,1          'BOTH' SPECIFIED?
         BNE   QASIS               NO - LEAVE STRING UNCHANGED
QCAPS    L     R14,QUOTES
         LH    R1,QUOTES+4
         BCTR  R1,0
         B     *+10
         OC    0(0,R14),=256X'40'  CONVERT TO UPPER CASE
         EX    R1,*-6
QASIS    EQU   *
         SPACE
         LA    R1,1
         ST    R1,SOURCOL1
         LH    R1,QUOTES+4
         ST    R1,SOURCOL2
*
*        (CHECK FOR OPTIONAL OFFSET)
*
         SLR   R1,R1
         ST    R1,OFFSETA1
         ST    R1,OFFSETA2
         TM    OFFSET+6,X'80'        OFFSET SPECIFIED?
         BZ    STXEXC              NO - BRANCH
         LA    R14,OFFSET
         L     R15,0(,R14)
         LH    R1,4(,R14)
         BCTR  R1,0
         B     *+10
         PACK  DOUBLE,0(0,R15)
         EX    R1,*-6
         CVB   R1,DOUBLE
         C     R1,MAXCOL
         BH    ERRINVCL
         LTR   R1,R1               IS VALUE ZERO?
         BNZ   *+8
         LA    R1,1
         ST    R1,OFFSETA1         STORE BINARY VALUE
         ST    R1,OFFSETA2
*
*        (TEST FOR RANGE)
*
STXDESTR TM    OFFSET+8+6,X'80'      WAS A RANGE ENTERED?
         BZ    STXEXC              NO - BRANCH
*
*        (DEST IS A RANGE)
*
         LA    R14,OFFSET+8
         L     R15,0(,R14)
         LH    R1,4(,R14)
         BCTR  R1,0
         PACK  DOUBLE,0(0,R15)
         EX    R1,*-6
         CVB   R1,DOUBLE
         LTR   R1,R1
         BNZ   *+8
         LA    R1,1
         ST    R1,OFFSETA2         STORE BINARY VALUE
         SPACE
         C     R1,OFFSETA1         NEGATIVE RANGE?
         BL    ERRNEGCL            YES - BRANCH
         C     R1,MAXCOL           DOES RANGE EXTEND BEYOND 256?
         BH    ERRINVCL            YES - ERROR - BRANCH
         S     R1,OFFSETA1
         A     R1,=F'1'
         C     R1,MAXCOL           IS LENGTH GREATER THAN 256?
         BH    ERRINVCL            YES - ERROR - BRANCH
STXEXC   EQU   *
STXOUT   EQU   *
         SPACE
************************************************************
*                                                          *
*        CHECK FOR EMPTY DATASET                           *
*                                                          *
************************************************************
         SPACE
         MVI   EUTPARM,X'04'       SET CODE TO READ 1ST LINE
         MVC   EUTPARM+1(3),CAPTCDCB+1
         XC    EUTPARM+4(4),EUTPARM+4  KEYPTR=0
         LA    R1,CABFRPL
         ST    R1,EUTPARM+8
         OI    EUTPARM+8,X'80'
         BAL   R14,EBEUT
         CH    R15,=H'4'
         BH    EXITR7
         BE    ERREMPTY
         SPACE
************************************************************
*                                                          *
*        CHECK LINE NUMBER(S)                              *
*                                                          *
************************************************************
         SPACE
         TM    LNUM1+6,X'80'   LINE NUM SPECIFIED?
          BO    LNSPEC          YES - BRANCH
         MVI   LNCOUNT,X'7F'   SET LNCOUNT RIDICULOUSLY HIGH
         SLR   R1,R1
         BCTR  R1,0
         ST    R1,LINENUM2     SET LINENUM2=-1
         CLI   NEXTKW+1,1          'NEXT' SPECIFIED?
         BE    READCUR             YES - ASSUME * 99999999
         LA    R1,CABFRPL          POINT TO KEY OF 1ST REC
         ST    R1,EUTPARM+4
         B     READ
         SPACE
LNSPEC   LA    R14,LNUM1           R14 --> PDE ENTRY
         L     R15,0(,R14)         R15 --> DATA
         CLI   0(R15),C'*'         ASTERISK SPECIFIED?
         BE    ASTSPEC             YES - BRANCH
         SPACE
************************************************************
*                                                          *
*        A LINE NUMBER WAS SPECIFIED                       *
*                                                          *
************************************************************
         SPACE
         TM    CACFLAG1,CANONUM    EDITING NONUM?
         BO    ERRNONUM            YES - ERROR
         SPACE
         LH    R1,4(,R14)          R1 = LENGTH
         BCTR  R1,0
         B     *+10
         PACK  DOUBLE,0(0,R15)
         EX    R1,*-6
         CVB   R1,DOUBLE
         ST    R1,LINENUM1         STORE BINARY VALUE
         LA    R1,LINENUM1
         ST    R1,EUTPARM+4
         SPACE
         TM    LNUM2+6,X'80'       LNUM2 SPECIFIED?
         BZ    NOSPAN              NO - BRANCH
         SPACE
************************************************************
*                                                          *
*        A 2ND LINE NUMBER WAS ALSO SPECIFIED              *
*                                                          *
************************************************************
         SPACE
         LA    R14,LNUM2
         L     R15,0(,R14)         R15 --> DIGITS
         LH    R1,4(,R14)          R1 = LENGTH
         BCTR  R1,0
         B     *+10
         PACK  DOUBLE,0(0,R15)
         EX    R1,*-6
         CVB   R1,DOUBLE
         ST    R1,LINENUM2         STORE BINARY VALUE
         SPACE
************************************************************
*                                                          *
*        CHECK IF 2ND LINE NUMBER LESS THAN 1ST            *
*                                                          *
************************************************************
         SPACE
         L     R1,LINENUM2
         C     R1,LINENUM1
         BL    ERRLINE2
         SPACE
************************************************************
*                                                          *
*        WRAP UP LINE NUMBER PROCESSING - GO TO READ       *
*                                                          *
************************************************************
         SPACE
         LA    R1,1
         ST    R1,LNCOUNT          FIX RUNAWAY PROBLEM 10/14/75
         B     READ
         SPACE
NOSPAN   MVC   LINENUM2,LINENUM1
         LA    R1,1
         ST    R1,LNCOUNT
         B     READ
         SPACE
************************************************************
*                                                          *
*        ASTERISK WAS SPECIFIED (OR DEFAULTED)             *
*                                                          *
************************************************************
         SPACE
ASTSPEC  LA    R1,1
         ST    R1,LNCOUNT          SET LNCOUNT=1
         TM    LNUM2+6,X'80'       LNUM2 SPECIFIED?
         BZ    READCUR             NO - BRANCH
         LA    R14,LNUM2           R14 --> PDE ENTRY
         L     R15,0(,R14)         R15 --> DIGITS
         LH    R1,4(,R14)          R1 = LENGTH
         BCTR  R1,0
         B     *+10
         PACK  DOUBLE,0(0,R15)
         EX    R1,*-6
         CVB   R1,DOUBLE
         ST    R1,LNCOUNT          STORE BINARY VALUE
         LTR   R1,R1               ZERO?
         BZ    ERRLNCNT            YES - ERROR
         SPACE
READCUR  SLR   R1,R1
         BCTR  R1,0
         ST    R1,LINENUM2         SET LINENUM2=-1
         LA    R1,CACURNUM         PTR TO CURRENT LINE KEY
         ST    R1,EUTPARM+4
         SPACE
************************************************************
*                                                          *
*        READ THE 1ST RECORD TO BE PROCESSED               *
*                                                          *
************************************************************
         SPACE
READ     MVI   EUTPARM,X'00'       READ CURRENT LINE BY KEY
         BAL   R14,EBEUT
         SPACE
         LTR   R15,R15
         BZ    PROCESS
         CH    R15,=H'4'
         BNE   ERRIOERR
         SPACE
************************************************************
*                                                          *
*        CHECK IF MORE LINES TO READ                       *
*                                                          *
************************************************************
         SPACE
         CLC   LINENUM1,LINENUM2   ONLY ONE LINENUM SPECIFIED?
         BE    ERRLNOTF            YES - NOT FOUND - BRANCH
         CLC   LNCOUNT,=F'1'       ONLY * (OR NOTHING) SPECIFIED?
         BNE   READNEXT            NO - ITS A RANGE - BRANCH
         CLC   CACURNUM,=F'0'      YES - BUT WERE WE AT 'TOP' ?
         BNE   ERRLNOTF            NO - NOTFOUND - BRANCH (EVER TAKEN?)
*              HOW CAN '*' BE NOT FOUND IF DATASET NOT EMPTY?
READNEXT MVI   EUTPARM,X'02'
         BAL   R14,EBEUT
         LTR   R15,R15
         BZ    CKWITHIN
         CH    R15,=H'4'
         BNE   ERRIOERR
         LA    R7,8
         B     ERRLNOTF
CKWITHIN L     R1,LINENUM2
         C     R1,CABFRPL          IF LNUM2 GE KEY
         BNL   PROCESS                GO TO PROCESS
         CH    R1,=H'-1'           IF LNUM2 EQ -1
         BE    PROCESS                GO TO PROCESS
         B     ERRLNOTF
         SPACE
************************************************************
*                                                          *
*        PROCESS: CHECK OTHER OPERANDS                     *
*                                                          *
************************************************************
         SPACE
PROCESS  EQU   *
         CLI   NEXTKW+1,1          'NEXT' SPECIFIED?
         BE    NEXTLINE            YES - IGNORE FIRST RECORD
*        BAL   R14,PUTMSG
PROCLOOP EQU   *
*
*        (DO AWAY WITH SEQUENCE NUMBERS)
*
         TM    CACFLAG1,CANONUM    NONUM?
         BO    OUTSEQX             YES - BRANCH
         CLI   CALINE,1            SEQFLD IN COLUMN 1?
         BNE   OUTSEQA             NO - BRANCH
*
*        (REMOVE LEADING SEQUENCE NUMBERS)
*
         LH    R14,CABFRPL+4       GET RECLEN
         SLR   R15,R15
         IC    R15,CALENGTH        GET SEQLEN
         SLR   R14,R15             GET RECLEN-SEQLEN
         STH   R14,CABFRPL+4       RESET RECLEN
         SH    R14,=H'4'           GET DATA LENGTH
         LA    R1,CABFRPL+8        GET DATA ADDRESS
         ALR   R1,R15              GET DATA ADDRESS+SEQLEN
         LA    R15,CABFRPL+8       GET DATA ADDRESS
         BCTR  R14,0
         B     *+10
         MVC   0(0,R15),0(R1)      MOVE DATA OVER SEQFLD
         EX    R14,*-6
         B     OUTSEQX
*
*        (TRAILING SEQUENCE NUMBERS - TRUNCATE LENGTH)
*
OUTSEQA  SLR   R14,R14
         IC    R14,CALINE
         LA    R14,4-1(,R14)       SUBTRACT 1, ADD 4
         STH   R14,CABFRPL+4       RESET RECLEN=CALINE+3
OUTSEQX  EQU   *
*
*        (BLANK OUT 256 BYTES AFTER DATA)
*
         LH    R14,CABFRPL+4       GET RECLEN
         LA    R1,CABFRPL+4        GET ADDRESS OF RECORD
         ST    R1,DATAPTR
         ALR   R1,R14              GET ADDRESS AFTER DATA
         MVI   0(R1),C' '
         MVC   1(255,R1),0(R1)     CLEAR AREA
*
*        (IF 'BOTH' SPECIFIED, MAKE DATA CAPS)
*
         CLI   BOTHKW+1,1          'BOTH' SPECIFIED?
         BNE   DASIS               NO - LEAVE DATA UNCHANGED
         LA    R1,SOURCEWK
         MVC   0(256,R1),CABFRPL+4
         MVC   256(256,R1),CABFRPL+4+256
         OC    0(256,R1),=256X'40'
         ST    R1,DATAPTR
DASIS    EQU   *
*
*        IF OFFSET SPECIFIED, MAKE ONE COMPARISION
*
         L     R15,DATAPTR         POINT TO DATA MINUS 4
         LH    R0,CABFRPL+4        GET RECORD LENGTH
         SH    R0,=H'4'            GET RECORD LENGTH
         L     R1,OFFSETA1
         LTR   R1,R1
         BZ    *+6
         BCTR  R1,0
         LA    R14,4(R1,R15)       POINT INTO DATA
         L     R15,QUOTES          POINT TO STRING
         LH    R1,QUOTES+4         GET LENGTH OF STRING
         BCTR  R1,0
         SR    R0,R1               LRECL MINUS STRING LENGTH
         BNP   ABSENT              STRING WONT FIT IN RECORD
*
*              IF OFFSET SPECIFIED, SEE IF OFFSET TOO LARGE
*
         CLC   OFFSETA1,=F'0'
         BE    NOFFSET
         LH    R3,CABFRPL+4        LENGTH OF THIS RECORD
         SH    R3,=H'4'
         C     R3,OFFSETA1         RECORD SHORTER THAN OFFSET?
         BL    ABSENT              YES - STRING NOT FOUND
*
*               IS THERE ROOM FOR STRING BEYOND OFFSET?
*
*               E.G. SAY LRECL IS 11, STRING IS 10 BYTES LONG.
*               FORMULA LRECL-(STRINGL-1) GIVES NO. OF COMPARISONS
*               POSSIBLE IN ENTIRE LINE 11-(10-1) = 2.
*               ADDING 1 TO THAT (GIVING 3) AND SUBTRACTING THE
*               OFFSET (SAY 2) GIVES THE NUMBER OF COMPARISONS
*               POSSIBLE FROM THE OFFSET TO THE END OF THE LINE (1).
*               IF THE OFFSET IS GREATER THAN 2, THE RESULT WILL NOT
*               BE A POSITIVE NUMBER, SO THE OFFSET IS INVALID.
*
         LR    R4,R0               GET LRECL MINUS STRINGL
         LA    R4,1(,R4)           PLUS 1
         S     R4,OFFSETA1         LRECL MINUS STRINGL MINUS OFFSET
         BNP   ABSENT
*
*               IF ONLY ONE OFFSET, SET NO. OF COMPARISONS = 1
*
         CLC   OFFSETA1,OFFSETA2   ONLY ONE OFFSET?
         BNE   ORANGE              NO - BRANCH
         LA    R0,1                ONE COMPARE
         B     NOFFSET
ORANGE   EQU   *
*
*               SELECT SMALLER OF ROOM OR RANGE
*
         LR    R0,R4               SAVE ROOM
         L     R4,OFFSETA2
         LA    R4,1(,R4)
         S     R4,OFFSETA1         NUMBER OF COLUMNS IN RANGE
         LH    R1,QUOTES+4         LENGTH OF STRING
         BCTR  R1,0
         SR    R4,R1               ROOM FOR STRING
         BNP   ERRSYNTX            NO - BRANCH
         CR    R0,R4
         BL    *+6
         LR    R0,R4
NOFFSET  EQU   *
         CLI   MASKSW,C'M'         'MASK' SPECIFIED?
         BE    MASKR               YES, USE MASK LOGIC
         B     *+10
         CLC   0(0,R15),0(R14)
EXCLC    EX    R1,*-6
         BE    FOUNDIT
         LA    R14,1(,R14)         NEXT BYTE IN DATA RECORD
         BCT   R0,EXCLC
ABSENT   CLI   OPPOSW,C'A'         'ABSENT' SPECIFIED?
         BE    SELECT              YES - LIST THE LINE
         B     EXCLUDE             NO  - BRANCH
FOUNDIT  EQU   *
         CLI   OPPOSW,C'A'         'ABSENT' SPECIFIED?
         BNE   SELECT              YES - DON'T LIST THE LINE
         B     EXCLUDE             NO, BRANCH
         SPACE
MASKR    LA    R1,1(,R1)           GET NUMBER OF BYTES TO COMPARE
         LR    R2,R1               SAVE NUMBER OF BYTES IN MASK
         LR    R3,R15              SAVE ADDRESS OF MASK
         LR    R4,R14              SAVE ADDRESS OF DATA
MASKC    CLI   0(R15),C'*'         IS THIS CHARACTER EXEMPT?
         BE    MASKNEXT            YES, BRANCH
         CLC   0(1,R15),0(R14)     NO, COMPARE IT
         BNE   MASKRNGE            NOT EQUAL, START OVER
MASKNEXT LA    R15,1(,R15)         POINT TO NEXT CHAR IN MASK
         LA    R14,1(,R14)         POINT TO NEXT CHAR IN DATA
         BCT   R1,MASKC            BRANCH UNTIL ENTIRE MASK USED
         B     FOUNDIT             NO INEQUALITIES FOUND
MASKRNGE LA    R4,1(,R4)           NEXT BYTE IN DATA RECORD
         LR    R1,R2               RESTORE MASK LENGTH
         LR    R15,R3              RESTORE MASK POINTER
         LR    R14,R4              RESTORE DATA POINTER
         BCT   R0,MASKC            BRANCH UNTIL RANGE EXHAUSTED
         B     ABSENT              NOT FOUND IN RECORD
         SPACE
************************************************************
*                                                          *
*        LINE IS EXCLUDED                                  *
*                                                          *
************************************************************
         SPACE
EXCLUDE  EQU   *
         CLI   SELEX+0,0           'SELECT' OR 'EXCLUDE' SPEC?
         BE    EXCLU9              NEITHER - DO NOT DELETE
DELETE   LA    R1,DEUTPARM
         L     R15,CAPTCDCB
         ST    R15,0(,R1)
         MVI   0(R1),X'10'
         LA    R15,CABFRPL
         ST    R15,4(,R1)
         OI    4(R1),X'80'
         LR    R2,R1
         IKJEBESH (COMMREG),IKJEBEUT,PARAM=((COMMREG),(R2)),           +
               MF=(E,DEPARM)
         L     R1,COUNTED
         A     R1,=F'1'
         ST    R1,COUNTED
EXCLU9   EQU   *
         B     NEXTLINE
         SPACE
************************************************************
*                                                          *
*        LINE IS SELECTED                                  *
*                                                          *
************************************************************
         SPACE
SELECT   EQU   *
         MVI   TEXTNOTF,C'F'
*
*        (IF 'COUNT' SPECIFIED, ADD 1 TO COUNTER)
*
         CLI   COUKW+1,0           'COUNT' SPECIFIED?
         BE    SHOWLINE            NO - BRANCH
         L     R1,COUNTER
         A     R1,=F'1'
         ST    R1,COUNTER
         B     NEXTLINE
*
*               NOT COUNTING - PREPARE TO DISPLAY
*
SHOWLINE EQU   *
         CLI   NEXTKW+1,1          'NEXT' SPECIFIED?
         BNE   SHOWALL             NO - BRANCH
         TM    CACFLAG1,CAVRFYSW   IS VERIFY ON?
         BZ    SHOWLINX            NO - DON'T DISPLAY IT
         B     SHOWNEXT            VERIFY IS ON - DISPLAY IT
SHOWALL  CLI   SELEX+0,0           SEL/EXC AND NOT NEXT?
         BNE   SHOWLINX            YES - DON'T DISPLAY
SHOWNEXT EQU   *
         ST    COMMREG,ELEPARM+4
         LA    R1,CABFRPL+4
         ST    R1,ELEPARM          THIS FIELD ALTERED IF OVERFLOW
         MVI   ELEPARM,X'00'       (NOT REALLY NECESSARY)
         BAL   R14,LINEEDIT
*        LTR   R15,R15             GOOD RC FROM LINEEDIT?
*        BNZ   LINOVFLO            NO - BRANCH
*
*        (DISPLAY THE RECORD)
*
         MVC   CATEMPBF+12(4),CABFRPL
         LH    R1,CABFRPL+4        GET RECLEN
         BCTR  R1,0
         B     *+10
         MVC   CATEMPBF+12+4(0),CABFRPL+4
         EX    R1,*-6
         AGO   .HAZ3
         CLI   HAZELKW+1,1
         BE    HAZELFG
.HAZ3    ANOP
         SR    R1,R1
         ST    R1,EMSPARM
         LA    R1,CATEMPBF
         ST    R1,EMSPARM+4
         LR    R0,R9
         LA    R1,EMSPARM
         OI    CACFLAG4,CATPUTVF   SET SWITCH FOR EBEMS
         IKJEBESH (COMMREG),IKJEBEMS,PARAM=((COMMREG),EMSPARM),MF=(E,X)
         NI    CACFLAG4,X'FF'-CATPUTVF RESET SWITCH
         B     SHOWLINX
         AGO   .HAZ4
HAZELFG  EQU   *
         LA    R8,CATEMPBF
         TM    CACFLAG1,CANONUM    NONUM?
         BNO   HAZSEQ              NO - BRANCH
         LH    R14,16(,R8)         GET LENGTH PLUS 4
         SH    R14,=H'4'
         LA    R1,20(,R8)          POINT TO DATA
         LR    R0,R14
         B     HAZOUT              BRANCH TO WRITE
HAZSEQ   EQU   *
         LH    R14,16(,R8)         GET LENGTH
         SLR   R15,R15
         IC    R15,CALENGTH        GET LENGTH OF SEQ
         LA    R1,4+1(,R15)        GET LENGTH OF SEQ+PREFIX+1
         SR    R14,R1              GET LENGTH MINUS 1 OF DATA
         CLI   CALINE,1            LEADING SEQ?
         BNE   HAZSEQT             NO - TRAILING SEQ - BRANCH
         LA    R1,20(R15,R8)       POINT PAST LEADING SEQ IN DATA
         B     *+10
         MVC   17(0,R8),0(R1)      MOVE DATA TO OUTPUT+9
         EX    R14,*-6             EXECUTE MOVE
         L     R15,12(,R8)         GET SEQ VALUE
         B     HAZSEQO             GO UNPACK SEQ
HAZSEQT  SLR   R1,R1
         IC    R1,CALINE           GET SEQ OFFSET
         BCTR  R1,0
         CR    R14,R1
         BL    HAZSQEQ             BYPASS DATA LENGTH ADJUST
         BCTR  R1,0
         LR    R14,R1              REP L'(SEQ+PREFIX+1) L'(CALINE-1)
HAZSQEQ  L     R15,12(,R8)         GET SEQ VALUE
         B     *+10
         MVC   17(0,R8),20(R8)     MOVE DATA TO OUTPUT+9
         EX    R14,*-6             EXECUTE MOVE
HAZSEQO  LA    R14,2(,R14)         GET DATA LENGTH INCLUDING BLANK
         MVI   16(R8),C' '         SET BLANK BETWEEN SEQ AND DATA
         CVD   R15,DOUBLE          SEQ VALUE TO DECIMAL
         UNPK  8(8,R8),DOUBLE+3(5) UNPACK SEQ VALUE
         OI    8+7(R8),X'F0'       FIX LAST DIGIT
         LA    R14,8(,R14)         ADD 8 MORE TO LENGTH
*
*        SUPPRESS UP TO 3 LEADING ZEROES
*
         LA    R1,8(,R8)           POINT TO BEGINNING
         LA    R0,3                MAX 3
HAZSUPP  CLI   0(R1),C'0'          ZERO?
         BNE   HAZSUPX             NO - BRANCH
         LA    R1,1(,R1)           YES - POINT TO NEXT
         BCTR  R14,0               LENGTH DECREASE BY 1
         BCT   R0,HAZSUPP          REPEAT UP TO 3 TIMES
HAZSUPX  EQU   *
         LR    R0,R14              GET LENGTH
HAZOUT   LR    R14,R0              GET LENGTH
         LA    R15,0(R14,R1)       POINT PAST DATA
         BCTR  R15,0               POINT TO LAST BYTE OF DATA
HAZAPPEN CLI   0(R15),C' '         TRAILING BLANK?
         BNE   HAZAPPN1            NO - GO APPEND CONTROL
         BCTR  R0,0                YES - DECREASE LENGTH BY 1
         BCTR  R15,0               YES - DECREASE POINTER BY 1
         B     HAZAPPEN            REPEAT UNTIL NONBLANK FOUND
HAZAPPN1 MVC   1(4,R15),=X'690D5F19' APPEND LOZENG,CR,LEADIN,BG
         AH    R0,=H'4'
         ST    R0,0(,R8)           SAVE LENGTH
         ST    R1,4(,R8)           SAVE DATA ADDRESS
         LA    R0,2
         LA    R1,=X'5F1F'
         ICM   R1,B'1000',=X'02'   CONTROL
         SVC   93                  TPUT
         L     R0,0(,R8)           GET LENGTH
         MVI   4(R8),X'02'         CONTROL
         L     R1,4(,R8)           GET DATA ADDRESS AND CONTROL
         SVC   93                  TPUT
.HAZ4    ANOP
SHOWLINX EQU   *
*
*        (UPDATE CURRENT LINE NUMBER)
*
         L     R1,CABFRPL
         ST    R1,CACURNUM
*
*        (IF CURRENT LINE GE LNUM2 AND COUNT LE 1 GO TO NOTEXT)
*
NEXTLINE EQU   *
         CLI   NEXTKW+1,1          'NEXT' SPECIFIED?
         BNE   NEXTTEST            NO - BRANCH
         CLI   TEXTNOTF,C'F'       NEXT ONE FOUND YET?
         BE    EXIT0               YES - WE'RE DONE
         SPACE
NEXTTEST L     R1,CABFRPL
         C     R1,LINENUM2         KEY LESS THAN LNUM 2?
         BL    *+16                YES- BRANCH
         L     R1,LNCOUNT
         CH    R1,=H'1'            LNCOUNT GT 1
         BNH   NOTEXT              NO - BRANCH
*
*        (READ THE NEXT LINE)
*
         MVI   EUTPARM,X'02'       READ NEXT LINE
         LA    R1,CABFRPL
         ST    R1,EUTPARM+4        KEY POINTER
         ST    R1,EUTPARM+8        BUFFER POINTER
         OI    EUTPARM+8,X'80'
         BAL   R14,EBEUT           READ A RECORD
         CH    R15,=H'12'
         BE    ERRIOERR
         CH    R15,=H'4'
         BE    EODATA
*
*        (IF THIS KEY GT LNUM2 AND LNCOUNT LE 1 GO TO NOTEXT)
*
         L     R1,CABFRPL
         C     R1,LINENUM2
         BNH   *+16
         L     R1,LNCOUNT
         CH    R1,=H'1'
         BNH   NOTEXT
         L     R1,LNCOUNT
         BCTR  R1,0                SUBTRACT 1 FROM LNCOUNT
         ST    R1,LNCOUNT
         B     PROCLOOP
         SPACE
EODATA   EQU   *
         CLI   COUKW+1,0           'COUNT' SPECIFIED?
         BNE   SHOCOUNT            YES - BRANCH
         CLI   SELEX+0,0           SELECT/EXCLUDE SPECIFIED?
         BNE   SHOWDELT            YES - DON'T SAY END OF DATA
         LA    R1,MSGEODAT
         LA    R0,L'MSGEODAT
         BAL   R14,PUTMSG
         SPACE
NOTEXT   CLI   COUKW+1,0           'COUNT' SPECIFIED?
         BNE   SHOCOUNT            YES - BRANCH
         CLI   SELEX+0,0           SELECT/EXCLUDE SPECIFIED?
         BNE   SHOWDELT            YES - DON'T SAY TEXT NOT FOUND
         CLI   TEXTNOTF,C'F'
         BE    SHOWX
         LA    R1,MSGTNOTF
         LA    R0,L'MSGTNOTF
         BAL   R14,PUTMSG
         B     SHOWX
         SPACE
SHOCOUNT EQU   *
         CLI   SELEX+0,2           'EXCLUDE' SPECIFIED?
         BNE   *+10                NO - BRANCH
         MVC   COUNTER(4),COUNTED  YES - COMPENSATE FOR BACKWARDS LOGIC
         MVI   SHIFTWK,C' '
         MVC   SHIFTWK+1(71),SHIFTWK
         L     R14,COUNTER
         CVD   R14,DOUBLE
         LA    R1,SHIFTWK
         MVC   0(8,R1),=X'4020202020202120'
         ED    0(8,R1),DOUBLE+4
         MVC   9(5,R1),=C'LINES'
         CH    R14,=H'1'
         BNE   *+8
         MVI   9+4(R1),C' '     CHANGE 'LINES' TO 'LINE'
         LA    R0,14
SHOCJUST EQU   *
         CLI   0(R1),C' '          LEADING BLANK?
         BNE   SHOCPUT             NO - READY TO DISPLAY
         MVC   0(79,R1),1(R1)      YES - SHIFT LEFT ONE BYTE
         MVI   79(R1),C' '
         BCTR  R0,0                SHORTEN LENGTH BY 1
         B     SHOCJUST
SHOCPUT  EQU   *
         BAL   R14,PUTMSG
         SPACE
SHOWDELT EQU   *
         CLI   QUIETKW+1,1         'QUIETLY'
         BE    SHOWX
         CLI   SELEX+0,0           SEL/EXC SPECIFIED?
         BE    SHOWX               NEITHER - NO DELETE COUNT
         MVI   SHIFTWK,C' '
         MVC   SHIFTWK+1(71),SHIFTWK
         L     R14,COUNTED
         CVD   R14,DOUBLE
         LA    R1,SHIFTWK
         MVC   0(8,R1),=X'4020202020202120'
         ED    0(8,R1),DOUBLE+4
         MVC   9(13,R1),=C'LINES DELETED'
         CH    R14,=H'1'
         BNE   *+8
         MVI   9+4(R1),C' '     CHANGE 'LINES' TO 'LINE'
         LA    R0,22
SHOWDELJ EQU   *
         CLI   0(R1),C' '          LEADING BLANK?
         BNE   SHOWDELP            NO - READY TO DISPLAY
         MVC   0(79,R1),1(R1)      YES - SHIFT LEFT ONE BYTE
         MVI   79(R1),C' '
         BCTR  R0,0                SHORTEN LENGTH BY 1
         B     SHOWDELJ
SHOWDELP EQU   *
         BAL   R14,PUTMSG
SHOWX    EQU   *
         B     EXIT0
         SPACE
************************************************************
*                                                          *
*        LINE EDIT ROUTINE                                 *
*                                                          *
************************************************************
         SPACE
LINEEDIT ST    R14,SAVE14
         IKJEBESH (COMMREG),IKJEBELE,PARAM=((COMMREG),ELEPARM),MF=(E,X)
         L     R14,SAVE14
         BR    R14
         SPACE
************************************************************
*                                                          *
*        ERROR ROUTINES                                    *
*                                                          *
************************************************************
         SPACE
         SPACE
ERRSYNTX LA    R1,MSGSYNTX
         LA    R0,L'MSGSYNTX
         BAL   R14,PUTMSG
         B     EXIT8
         SPACE
ERREMPTY LA    R1,MSGEMPTY
         LA    R0,L'MSGEMPTY
         BAL   R14,PUTMSG
         B     EXITR7
         SPACE
ERRNONUM LA    R1,MSGNONUM
         LA    R0,L'MSGNONUM
         BAL   R14,PUTMSG
         B     EXITR7
         SPACE
ERRLINE2 LA    R1,MSGLINE2
         LA    R0,L'MSGLINE2
         BAL   R14,PUTMSG
         B     EXITR7
         SPACE
ERRLNCNT LA    R1,MSGLNCNT
         LA    R0,L'MSGLNCNT
         BAL   R14,PUTMSG
         B     EXITR7
         SPACE
ERRIOERR LA    R1,MSGIOERR
         LA    R0,L'MSGIOERR
         BAL   R14,PUTMSG
         B     EXITR7
         SPACE
ERRIOERW LA    R1,MSGIOERW
         LA    R0,L'MSGIOERW
         BAL   R14,PUTMSG
         B     EXITR7
         SPACE
ERRLNOTF LA    R1,MSGLNOTF
         LA    R0,L'MSGLNOTF
         BAL   R14,PUTMSG
         B     EXITR7
         SPACE
         SPACE
ERRINVCL LA    R1,MSGINVCL
         LA    R0,L'MSGINVCL
         BAL   R14,PUTMSG
         B     EXITR7
         SPACE
ERRNEGCL LA    R1,MSGNEGCL
         LA    R0,L'MSGNEGCL
         BAL   R14,PUTMSG
         B     EXITR7
         SPACE
ERRNULLS LA    R1,MSGNULLS
         LA    R0,L'MSGNULLS
         BAL   R14,PUTMSG
         B     EXITR7
         SPACE
ERRTNOTF LA    R1,MSGTNOTF
         LA    R0,L'MSGTNOTF
         BAL   R14,PUTMSG
         B     EXITR7
         SPACE
************************************************************
*                                                          *
*        PUTMSG ROUTINE                                    *
*                                                          *
************************************************************
         SPACE
PUTMSG   STM   R14,R1,PUTSAVE
         XC    MYOLD(8),MYOLD
         XC    MYSEG1(4),MYSEG1
         MVC   MYPTPB(12),MODLPTPM
         LA    R14,1               NO. OF MESSAGE SEGMENTS
         ST    R14,MYOLD
         LA    R14,MYSEG1          POINT TO 1ST SEGMENT
         ST    R14,MYOLD+4
         LR    R14,R0              LENGTH IN R0
         LA    R14,4(,R14)         ADD 4
         LA    R15,MYSEG1+4
         CLC   0(3,R1),=C'IKJ'     IS DATA PRECEEDED BY MESSAGE ID?
         BE    *+16                YES - BRANCH
         LA    R14,1(,R14)         ADD 1 TO LENGTH
         MVI   0(R15),C' '         INSERT LEADING BLANK
         LA    R15,1(,R15)         BUMP POINTER
         STH   R14,MYSEG1
         LR    R14,R0
         BCTR  R14,0
         B     *+10
         MVC   0(0,R15),0(R1)      MOVE MESSAGE IN
         EX    R14,*-6
         LA    R1,CATMPLST         IOPL
         L     R15,MYPUTLEP
         SPACE
         PUTLINE PARM=MYPTPB,OUTPUT=(MYOLD),ENTRY=(15),MF=(E,(1))
         SPACE
         LM    R14,R1,PUTSAVE
         BR    R14
         SPACE
************************************************************
*                                                          *
*        PUTLINE ROUTINE                                   *
*                                                          *
************************************************************
         SPACE
PUTLINE  STM   R14,R1,PUTSAVE
         XC    MYSEG1(4),MYSEG1
         MVC   MYPTPB(12),MODLPTPB
         LR    R14,R0              LENGTH IN R0
         LA    R14,4(,R14)         ADD 4
         STH   R14,MYSEG1
         LR    R14,R0
         BCTR  R14,0
         B     *+10
         MVC   MYSEG1+4(0),0(R1)   MOVE TEXT IN
         EX    R14,*-6
         LA    R1,CATMPLST         IOPL
         L     R15,MYPUTLEP
         SPACE
         PUTLINE PARM=MYPTPB,OUTPUT=(MYSEG1,DATA),ENTRY=(15),MF=(E,(1))
         SPACE
         LM    R14,R1,PUTSAVE
         BR    R14
         SPACE
************************************************************
*                                                          *
*        EBEUT                                             *
*                                                          *
************************************************************
         SPACE
EBEUT    ST    R14,SAVE14
         IKJEBESH (COMMREG),IKJEBEUT,PARAM=((COMMREG),EUTPARM),MF=(E,X)
         ST    R1,RCDPTR
         CH    R15,=H'8'
         BNE   *+8
         LA    R7,12               SET R7=12
         L     R14,SAVE14
         BR    R14
         SPACE
************************************************************
*                                                          *
*        EXIT - RETURN TO EDIT                             *
*                                                          *
************************************************************
         SPACE
EXIT8    LA    R2,8
         B     EXIT
EXITR7   LR    R2,R7
         B     EXIT
EXIT0    SR    R2,R2
EXIT     EQU   *
         TM    MYPUTLEP,X'80'      WAS PUTLINE LOADED?
         BO    EXNODEL             NO, BRANCH
         LA    R0,=CL8'IKJPUTL'
         DELETE EPLOC=(0)
EXNODEL  EQU   *
         TM    CAPRSPDL,CAFREEDL
         BO    NORLSA
         IKJRLSA CAPTPRSD
         OI    CAPRSPDL,CAFREEDL
NORLSA   EQU   *
         LR    1,R13
         L     R0,@SIZE
         L     R13,4(,R13)
         FREEMAIN R,A=(1),LV=(0)
         LR    R15,R2
         L     14,12(,R13)
         LM    0,12,20(R13)
         BR    14
         SPACE
************************************************************
*                                                          *
*        CONSTANTS                                         *
*                                                          *
************************************************************
         SPACE
MODLPTPM PUTLINE OUTPUT=(1,TERM,SINGLE,INFOR),                         X
               TERMPUT=(EDIT,WAIT,NOHOLD,NOBREAK),MF=L
         SPACE
MODLPTPB PUTLINE OUTPUT=(1,TERM,SINGLE,DATA),                          X
               TERMPUT=(EDIT,WAIT,NOHOLD,NOBREAK),MF=L
         SPACE
         SPACE
MSGEODAT DC    C'IKJ52500I END OF DATA'
MSGEMPTY DC    C'IKJ52501I NO LINES IN DATA SET'
MSGNONUM DC    C'IKJ52502I DATA SET NOT LINE NUMBERED' IKJ52502I
MSGLINE2 DC    C'IKJ52503I INVALID LINE NUMBER RANGE' IKJ52503I
MSGLNOTF DC    C'IKJ52504I LINE NUMBER NOT FOUND' IKJ52504I
MSGTNOTF DC    C'IKJ52506I TEXT NOT FOUND'
MSGIOERR DC    C'IKJ52313I I/O ERROR HAS OCCURRED READING EDIT DATASET'
MSGIOERW DC    C'IKJ52313I I/O ERROR HAS OCCURRED WRITING EDIT DATASET'
MSGLNCNT DC    C'IKJ56702I INVALID LINECOUNT ZERO'
MSGINVCL DC    C'IKJ56702I COLUMN OR LENGTH EXCEEDS MAXIMUM ALLOWABLE VX
               ALUE'
MSGNEGCL DC    C'IKJ56702I ILLEGAL COLUMN RANGE - SECOND VALUE CANNOT BX
               E SMALLER'
MSGNULLS DC    C'IKJ56702I NULL OR MISSING STRING'
MSGSYNTX DC    C'IKJ56702I SYNTAX ERROR'
         LTORG
PATCH    DC    4D'0'               PATCH AREA
         SPACE
************************************************************
*                                                          *
*        PARSE PCL                                         *
*                                                          *
************************************************************
         SPACE
         PRINT NOGEN
         SPACE
SPOTPCL  IKJPARM
LNUM1    IKJIDENT 'LINE NUMBER',ASTERISK,FIRST=NUMERIC,OTHER=NUMERIC,  X
               MAXLNTH=8
LNUM2    IKJIDENT 'LINE RANGE',FIRST=NUMERIC,OTHER=NUMERIC,            X
               MAXLNTH=8
QUOTED   IKJPOSIT DELIMITER
QUOTES   IKJPOSIT STRING,SQSTRING,ASIS
OFFSET   IKJIDENT '''TO'' COLUMN(S)',RANGE,MAXLNTH=8,                  X
               FIRST=NUMERIC,OTHER=NUMERIC
MASKKW   IKJKEYWD
         IKJNAME 'MASK'
ABSKW    IKJKEYWD
         IKJNAME 'ABSENT'
         IKJNAME 'PRESENT'
BOTHKW   IKJKEYWD
         IKJNAME 'BOTH'
NEXTKW   IKJKEYWD
         IKJNAME 'NEXT'
         AGO    .HAZ5
HAZELKW  IKJKEYWD
         IKJNAME 'F'
.HAZ5    ANOP
COUKW    IKJKEYWD
         IKJNAME 'COUNT'
QUIETKW  IKJKEYWD
         IKJNAME 'QUIETLY'
         IKJENDP
         SPACE
         PRINT GEN
         SPACE
************************************************************
*                                                          *
*        DSECTS                                            *
*                                                          *
************************************************************
         SPACE
@DATA    DSECT
         DS    18F
LINKAREA DS    2F
MYPUTLEP DS    F
MYPTPB   DS    3F
MYOLD    DS    2F
MYSEG1   DS    2H,CL100
PUTSAVE  DS    4F
SAVE14   DS    F
RCDPTR   DS    F
EUTPARM  DS    4F
DEUTPARM DS    4F
ELEPARM  DS    2F
EMSPARM  DS    4F
DOUBLE   DS    D
LINENUM1 DS    F
LINENUM2 DS    F
SOURCOL1 DS    F
SOURCOL2 DS    F
OFFSETA1 DS    F
OFFSETA2 DS    F
MAXCOL   DS    F
LNCOUNT  DS    F
COUNTER  DS    F
COUNTED  DS    F
HALF     DS    H
TEXTNOTF DS    C
LINOV34  DS    2F
OPPOSW   DS    C
SELEX    DS    C
MASKSW   DS    C
DATAPTR  DS    F
@ZW      DS    0CL80
SOURCEWK DS    CL256
SHIFTWK  DS    CL256
         DS    0D
@DATAL   EQU   *-@DATA
         SPACE
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
COMMREG  EQU   9
RETCDREG EQU   15
RETREG   EQU   14
PARMREG0 EQU   0
PARMREG1 EQU   1
         SPACE
         IKJCPPL
         SPACE
         IKJPPL
         SPACE
         IKJUPT
         SPACE
         IKJECT
         SPACE
         PRINT NOGEN
         IKJEBECA
         END
