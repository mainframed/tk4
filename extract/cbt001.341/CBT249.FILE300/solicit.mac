         TITLE ' S O L I C I T '
***********************************************************************
*                                                                     *
*        'SOLICIT'                                                    *
*                                                                     *
***********************************************************************
         SPACE
*        WRITTEN BY. BILL GODFREY,  PLANNING RESEARCH CORPORATION.
*        INSTALLATION. PRC COMPUTER CENTER INC, MCLEAN VA.
*        DATE WRITTEN. SEPTEMBER 21 1981.
*        DATE UPDATED. SEPTEMBER 21 1981.
*        ATTRIBUTES. RE-ENTRANT.
*        DESCRIPTION.
*         THIS TSO COMMAND DISPLAYS THE VTAM NETWORK SOLICITOR
*         MESSAGE ON A 3270 TYPE TERMINAL AND WAITS FOR A REPLY.
*         THE TERMINAL LOOKS LIKE NOBODY IS LOGGED ON.
*        IF THE 'PF3' KEYWORD IS SPECIFIED, THE COMMAND WILL
*        IGNORE ALL REPLIES UNTIL THE USER ENTERS PFK 3.
*        LOG OF CHANGES.
         SPACE
SOLICIT  START
         USING *,R12
         B     @PROLOG-*(,15)
         DC    AL1(11),CL11'SOLICIT'
         DC    CL16' &SYSDATE &SYSTIME '
@SIZE    DC    0F'0',AL1(1),AL3(@DATAL)
@PROLOG  STM   14,12,12(R13)       SAVE REGISTERS
         LR    R12,R15             LOAD BASE REGISTER
         LR    R2,R1               PARM POINTER
         USING CPPL,R2
         L     R0,@SIZE            WORKAREA SUBPOOL AND LENGTH
         GETMAIN R,LV=(0)
         LR    R9,R1               INITIALIZE WORKAREA POINTER
         USING @DATA,R9
         SPACE 1
         LR    R0,R1               AREA TO BE CLEARED
         L     R1,@SIZE            LENGTH TO BE CLEARED
         SLR   R15,R15             ZERO PAD AND 'FROM' LENGTH
         MVCL  R0,R14              ZERO IT ALL
         SPACE 1
         ST    R13,4(,R9)          CHAIN SAVEAREA
         ST    R9,8(,R13)          CHAIN SAVEAREA
         LR    R13,R9              UPDATE SAVEAREA POINTER
         SPACE
************************************************************
*                                                          *
*        SET UP PPL FOR PARSE                              *
*                                                          *
************************************************************
         SPACE
         LA    R15,MYPPL
         USING PPL,R15
         MVC   PPLUPT(4),CPPLUPT
         MVC   PPLECT(4),CPPLECT
         LA    R0,MYECB
         ST    R0,PPLECB
         XC    MYECB,MYECB
         L     R0,=A(RESETPCL)
         ST    R0,PPLPCL
         LA    R0,MYANS
         ST    R0,PPLANS
         MVC   PPLCBUF(4),CPPLCBUF
         DROP  R15
         SPACE 1
************************************************************
*                                                          *
*        CALL THE PARSE SERVICE ROUTINE                    *
*                                                          *
************************************************************
         SPACE 1
         LR    R1,R15              POINT TO PPL
         L     R15,16              CVTPTR
         TM    524(R15),X'80'      IF HI ORDER BIT NOT ON
         BNO   PARSELNK               THEN DO LINK, NOT CALL
         L     R15,524(,R15)       CVTPARS
         BALR  R14,R15             CALL IKJPARS
         B     PARSEEXT            SKIP AROUND LINK
PARSELNK EQU   *
         LINK  EP=IKJPARS
PARSEEXT EQU   *
         SPACE 1
         LTR   R15,R15
         BZ    PARSEOK
         LA    R1,MSG01
         LA    R0,L'MSG01
         SVC   93
         B     EXIT12
PARSEOK  L     R3,MYANS
         USING IKJPARMD,R3
         SPACE 1
PROMPT   LA    R1,SCREEN
         LA    R0,SCREENL
         O     R1,=A(X'03000000')
         SVC   93                  TPUT
         SPACE
************************************************************
*                                                          *
*         READ REPLY FROM THE TERMINAL                     *
*                                                          *
************************************************************
         SPACE
         XC    REPLY(256),REPLY    TO SIMPLIFY DEBUGGING
         LA    R1,REPLY
         LA    R0,256
         O     R1,=A(X'81000000')
         SVC   93                  TGET
         STM   R15,R1,TGETREGS
         CH    R15,=H'12'          WAS REPLY AREA LONG ENOUGH
         BNE   TGETOK              YES, BRANCH
         TCLEARQ INPUT
TGETOK   LA    R15,REPLY
*               REPLY AREA CONTENTS:
*               OFFSET 0 LENGTH 1  -  ID OF KEY
*               OFFSET 1 LENGTH 2  -  ADDRESS OF CURSOR
*               OFFSET 3 LENGTH 1  -  X'11' IF ANY FIELDS MODIFIED
*               OFFSET 4 LENGTH 2  -  SCREEN ADDRESS OF FIELD
*               OFFSET 6 LENGTH V  -  DATA FROM FIELD
*               DATA EXTENDS TO END OF BUFFER OR NEXT X'11'
         CLI   PFKW+1,1            PF3 SPECIFIED
         BNE   END                 NO, DO NOT PROCESS REPLY
         CLI   REPLY,X'F3'         PFK 3
         BE    END
*        L     R14,TGETREGS+8      GET LENGTH OF REPLY
*        CH    R14,=H'3'           ANYTHING BEYOND CURSOR ADDRESS
*        BNH   PROMPT              NO, BRANCH
*        CLI   3(R15),X'11'        SBA (SHOULD ALWAYS BE PRESENT)
*        BNE   PROMPT              NO
         B     PROMPT
END      EQU   *
         SPACE
EXIT0    SR    R15,R15             RETURN CODE ZERO
         B     EXIT
EXIT12   LA    R15,12              RETURN CODE 12
EXIT     LR    R2,R15              SAVE RETURN CODE
         LA    R1,ERASE
         LA    R0,ERASEL
         O     R1,=A(X'03000000')
         SVC   93
         LR    R15,R2              RESTORE RETURN CODE
         LR    R1,R13              POINT R1 TO AREA TO BE FREED
         L     R0,@SIZE            SUBPOOL AND LENGTH
         L     R13,4(,R13)         RESTORE PREVIOUS SAVEAREA
         ST    R15,16(,R13)        STORE RETURN CODE FOR LM
         FREEMAIN R,A=(1),LV=(0)
         LM    14,12,12(R13)       LOAD RETURN ADDRESS AND RC
         BR    14                  RETURN
         SPACE
************************************************************
*                                                          *
*        CONSTANTS                                         *
*                                                          *
************************************************************
         SPACE
         LTORG
         SPACE
MSG01    DC    C'PARSE ERROR'
         SPACE
SCREEN   DCS   X'40',SBA,24,80
         DCS   SF,UNPHI,RTA,02,01,X'00'
         DCS   SF,PROLO,RTA,04,01,X'40'
         DC    C'THIS TERMINAL IS LOGGED ON TO THE NETWORK SOLICITOR'
         DCS   RTA,7,1,X'00',RTA,13,1,X'00'
         DCS   RTA,19,1,X'00',RTA,24,80,X'00',SBA,1,1,IC
SCREENL  EQU   *-SCREEN
         SPACE
ERASE    DCS   X'40',SBA,24,79,SBA,1,1
         DCS   RTA,7,1,X'00',RTA,13,1,X'00'
         DCS   RTA,19,1,X'00',RTA,1,1,X'00',IC
ERASEL   EQU   *-ERASE
*
*               TRANSLATE TABLES
*
FINDSBA  DC    17X'00',X'11',238X'00'
         SPACE
************************************************************
*                                                          *
*        PARSE PCL                                         *
*                                                          *
************************************************************
         SPACE
         PRINT NOGEN
RESETPCL IKJPARM
PFKW     IKJKEYWD
         IKJNAME 'PF3'
         IKJNAME 'PFE'
         IKJENDP
         PRINT GEN
         SPACE
************************************************************
*                                                          *
*        DSECTS                                            *
*                                                          *
************************************************************
         SPACE
@DATA    DSECT
         DS    18F                 REGISTER SAVEAREA
DOUBLE   DS    D                   DOUBLEWORD WORK AREA
MYPPL    DS    7F
MYANS    DS    F
MYECB    DS    F                   USED BY PUTLINE ROUTINE
TGETREGS DS    3F                  USED BY PUTLINE ROUTINE
REPLY    DS    CL256
@DATAL   EQU   *-@DATA
         SPACE
         IKJCPPL
         SPACE
         IKJPPL
         SPACE
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         END
