         TITLE ' P U T   ( I K J E B 9 P T )   V E R S I O N  I I '
************************************************************
*                                                          *
*        'PUT' TSO EDIT SUBCOMMAND   VERSION II            *
*                                                          *
************************************************************
         SPACE
*        WRITTEN BY. BILL GODFREY,  PLANNING RESEARCH CORPORATION.
*        INSTALLATION. PRC COMPUTER CENTER INC, MCLEAN VA.
*        DATE WRITTEN. APRIL 25 1979.
*        DATE UPDATED. JUNE 13 1980.
*        ATTRIBUTES. RE-ENTRANT.
*        MACROS. GETMAIN, FREEMAIN, LINK, PUTLINE, LOAD, DELETE, XCTL,
*            IKJRLSA, IKJEBESH, IKJEBEML, IKJEBEMI, IKJEBECA,
*            PLUS TSO MAPPING MACROS AND PARSE MACROS.
*        DESCRIPTION.
*            THIS EDIT SUBCOMMAND ALLOWS A STRING TO BE INSERTED
*            INTO ONE OR MORE EXISTING LINES AT A SPECIFIED
*            COLUMN OR COLUMN RANGE.  THE SYNTAX IS:
*
*            PUT  &LINERANGE  /&STRING/  &OPER  &COLUMN(S)  INCR(&N)
*
*            CHANGES ...
*            13JUN80 - BYPASS OLD SOURCE COLUMN SUPPORT.
*
*            THIS CODE IS BASED ON AN EARLIER VERSION THAT ALLOWED
*            EITHER A STRING OR A SOURCE COLUMN TO BE MOVED, BUT THE
*            SYNTAX STRUCTURE OF THAT SUBCOMMAND PREVENTED THE USE OF
*            ANY STRING DELIMITERS OTHER THAN A QUOTE.  SINCE A STRING
*            IS USED FAR MORE OFTEN THAN A COLUMN RANGE,  THAT
*            RESTRICTION HAS TURNED OUT TO BE AN ANNOYANCE.  THIS
*            VERSION REMOVES THAT RESTRICTION, ALLOWING THE SAME
*            CHOICE OF DELIMITERS AS 'CHANGE' AND 'FIND'.
*
*            THE SOURCE COLUMN OPTION HAD TO BE REMOVED TO ALLOW
*            THIS BETTER SYNTAX. HOWEVER, A ROUTINE EARLY IN THE
*            CODE SCANS THE OPERANDS FOR THE PRESENCE OF OLD SYNTAX,
*            AND CALLS THE OLD SUBCOMMAND (IKJEBEZ9) IF NECESSARY.
*            IT IS IMPORTANT TO NOTE THAT IF YOU HAVE THE OLD
*            VERSION, ALL EXISTING PROCEDURES THAT CONTAIN THE
*            OLD SYNTAX WILL CONTINUE TO WORK WITH THIS VERSION
*            IF YOU NAME THE OLD VERSION IKJEBEZ9.
*
*            THIS VERSION ALSO MAKES THE '&OPER' PARAMETER OPTIONAL.
*            IF IT IS OMITTED, 'OVER' IS ASSUMED, UNLESS A COLUMN
*            RANGE IS SPECIFIED, IN WHICH CASE 'ON' IS ASSUMED.
*            THIS SHOULD ELIMINATE THE NEED FOR THE PARAMETER IN
*            MOST CASES, SO ONE DOESN'T HAVE TO STOP AND PONDER
*            WHICH WORD TO USE.
*
*            THE 'INCR(&N)' KEYWORD ALLOWS NUMERIC STRINGS TO BE
*            INCREMENTED IN VALUE BY THE NUMBER &N FOR EACH LINE
*            IN WHICH THE STRING IS INSERTED.
*
*            GIVEN: 00010 ABCDEFGHI
*                   00020 JKLMNOPQR
*
*            PUT 10 20 /--/ AT 2         GIVES: 00010 A--BCDEFGHI
*                                               00020 J--KLMNOPQR
*
*            PUT 10 20 /--/ IN 2         GIVES: 00010 A--CDEFGHI
*                                               00020 J--LMNOPQR
*
*            PUT 10 20 /--/ OV 2         GIVES: 00010 A--DEFGHI
*                                               00020 J--MNOPQR
*
*            PUT 10 20 /--/ ON 2         GIVES: ERROR MESSAGE
*
*            PUT 10 20 /--/ ON 2:4       GIVES: 00010 A-- EFGHI
*                                               00020 J-- MOPQR
*
*            PUT 10 20 // IN 2:3         GIVES: 00010 ADEFGHI
*                                               00020 JMNOPQR
*
*            PUT 10 20 /411/ ON 2:9 INCR(101)   00010 A411
*                                               00020 J512
*
*
*
*             WHEN 'ON' IS SPECIFIED, THE LENGTH OF THE STRING
*             MAY NOT EXCEED THE LENGTH OF THE RECEIVING FIELD,
*             BUT MAY BE SHORTER, IN WHICH CASE IT IS PADDED
*             WITH BLANKS.
*
*             WHEN 'OVER' IS SPECIFIED, THE STRING LENGTH DETERMINES
*             THE NUMBER OF COLUMNS THAT WILL BE OVERLAYED.
*
*             WHEN 'IN' IS SPECIFIED, THE STRING REPLACES THE
*             DATA IN THE SPECIFIED COLUMN(S), AND IF THE LENGTHS
*             ARE DIFFERENT, THEN DATA IN THE REMAINING COLUMNS IS
*             SHIFTED LEFT OR RIGHT ACCORDINGLY.  A NULL STRING
*             WILL CAUSE THE SPECIFIED COLUMN(S) TO BE REMOVED,
*             AND REMAINING COLUMNS TO BE SHIFTED LEFT.
*
*             WHEN 'AT' IS SPECIFIED, THE STRING IS INSERTED IN FRONT
*             OF THE SPECIFIED COLUMN, AND THE EXISTING DATA IN
*             THAT COLUMN AND BEYOND IS SHIFTED RIGHT ACCORDINGLY.
*             NO EXISTING DATA IS OVERLAYED (BUT SOME MAY BE CUT OFF
*             THE END OF THE LINE).
*
*             WHEN THE STRING IS THE SAME LENGTH AS THE COLUMN
*             THEN 'IN' AND 'ON' ARE IDENTICAL, AND IF BOTH LENGTHS
*             ARE 1 THEN 'IN' 'ON' AND 'OVER' ARE IDENTICAL.
         SPACE
PUT      START
         USING *,R12,R11
         B     @PROLOG-*(,15)
         DC    AL1(11),CL11'PUT II'
         DC    CL16' &SYSDATE &SYSTIME ',C'PRC '
@SIZE    DC    0F'0',AL1(1),AL3(@DATAL)
@PROLOG  STM   14,12,12(13)
         LR    R12,15
         LA    R11,4095
         LA    R11,1(R11,R12)
         LR    R9,R1
         USING IKJEBECA,R9
         L     R0,@SIZE
         GETMAIN R,LV=(0)
         ST    13,4(,1)
         ST    1,8(,13)
         LR    13,1
         USING @DATA,R13
         SPACE
         L     R2,CAPTTMP
         USING CPPL,R2
         SPACE
         SLR   R15,R15
         ST    R15,RC
         ST    R15,INCRBIN         SET INCR DEFAULT ZERO
         ST    R15,LINKAREA+4
         ST    R15,MYPUTLEP        SET PUTLINE NOT LOADED
         SPACE
************************************************************
*                                                          *
*        CHECK IF OPERANDS PRESENT                         *
*                                                          *
************************************************************
         SPACE
*        TM    CASCBFFL,CAOPERND   OPERANDS SPECIFIED?
*        BZ    ERRSYNTX            NO, BRANCH
         SPACE
************************************************************
*                                                          *
*        HOKEY CHECK FOR 'COL', TO SUPPORT OLD VERSION     *
*                                                          *
************************************************************
         SPACE
         B     OLDX
         L     R1,CAPTIBFR
         LH    R0,0(,R1)
         LA    R15,4
         SR    R0,R15
         SH    R0,2(,R1)
         AH    R1,2(,R1)
         LA    R1,4(,R1)
*              R0 NOW CONTAIN LENGTH OF OPERANDS
*              R1 POINTS TO 1ST OPERAND
OLDLOOP  CLI   0(R1),C'C'          IS 'COL' SPECIFIED?
         BE    OLDCALL             YES, BRANCH
         CLI   0(R1),X'83'         IS LOWER-CASE 'COL'  11MAY79
         BE    OLDCALL             YES, BRANCH          11MAY79
         CLI   0(R1),C' '          BLANK
         BE    OLDNEXT             YES, KEEP SCANNING
         CLI   0(R1),C'*'          ASTERISK
         BE    OLDNEXT             YES, KEEP SCANNING
         CLI   0(R1),C'0'          NUMBER
         BNL   OLDNEXT             YES, KEEP SCANNING
         CLI   0(R1),C','          COMMA
         BE    OLDNEXT             YES, KEEP SCANNING
         CLI   0(R1),X'05'         TAB
         BE    OLDNEXT             YES, KEEP SCANNING
         B     OLDX                IT'S A STRING DELIMITER
OLDNEXT  LA    R1,1(,R1)           NEXT CHAR IN OPERAND BUFFER
         BCT   R0,OLDLOOP          LOOK AGAIN
         B     OLDX                NO ' COL' FOUND
OLDCALL  LR    R1,R13
         L     R0,@SIZE
         L     R13,4(,R13)
         FREEMAIN R,A=(1),LV=(0)
         L     R1,24(,R13)         RESTORE COMM AREA PTR
         LA    R15,12(,R13)        POINT TO 2-WORD XCTL PARM
         XC    0(8,R15),0(R15)     CLEAR IT
         XCTL  (2,12),EP=IKJEBEZ9,SF=(E,(15))
OLDX     EQU   *
         SPACE
************************************************************
*                                                          *
*        COMPUTE MAXIMUM ACCEPTABLE COLUMN                 *
*                                                          *
************************************************************
         SPACE
         TM    CACFLAG1,CANONUM    NONUM?
         BO    MAXCOLB             YES - BRANCH
         CLI   CALINE,1            SEQUENCE NUMBERS IN COL 1?
         BE    MAXCOLA             YES - BRANCH
*
*        (NUM AND SEQUENCE NUMBERS ON RIGHT)
*
         SR    R1,R1
         IC    R1,CALINE
         BCTR  R1,0
         ST    R1,MAXCOL
         B     MAXCOLX
*
*        (NUM AND SEQUENCE NUMBERS ON LEFT)
*
MAXCOLA  LH    R1,CALRECL
         SR    R14,R14
         SH    R1,=H'4'            LRECL-4
         IC    R14,CALENGTH
         SLR   R1,R14              LRECL-4-SEQLENGTH
         ST    R1,MAXCOL
         B     MAXCOLX
*
*        (NONUM)
*
MAXCOLB  LH    R1,CALRECL
         SH    R1,=H'4'            LRECL-4
         ST    R1,MAXCOL
MAXCOLX  EQU   *
         SPACE
************************************************************
*                                                          *
*        CALL THE 'PARSE' SERVICE ROUTINE                  *
*                                                          *
************************************************************
         SPACE
         LA    R15,CATMPLST
         USING PPL,R15
         L     R0,=A(PUTPCL)
         ST    R0,PPLPCL
         LA    R0,CAPTPRSD
         ST    R0,PPLANS
         MVC   PPLCBUF(4),CAPTIBFR
         XC    PPLUWA(4),PPLUWA
         DROP  R15                 PPL
         DROP  R2                  CPPL
         SPACE
         LA    R1,CATMPLST
         L     R15,16              GET ADDRESS OF CVT      .MVS.
         TM    X'20C'(R15),X'80'   IF HI ORDER BIT NOT ONE .MVS.
         BNO   TSRLINK                                     .MVS.
         L     R15,X'20C'(,R15)    GET ADDR OF IKJPARS     .MVS.
         BALR  R14,R15             CALL IKJPARS            .MVS.
         B     TSREXIT                                     .MVS.
TSRLINK  EQU   *
         LINK  EP=IKJPARS,SF=(E,LINKAREA)
TSREXIT  EQU   *
         SPACE
************************************************************
*                                                          *
*        TEST RETURN CODE FROM PARSE                       *
*                                                          *
************************************************************
         SPACE
         LTR   R15,R15
         BNZ   ERRSYNTX
         SPACE
************************************************************
*                                                          *
*        DO SOME SYNTAX CHECKS BEFORE ANY I/O              *
*                                                          *
************************************************************
         SPACE
         L     RPDE,CAPTPRSD
         USING IKJPARMD,RPDE
         SPACE
         LR    1,12
         LA    0,8
         SLL   0,2
         AR    1,0
         L     0,0(,1)
         SLL   0,1
         CNOP  0,4
         BAL   1,*+8
         DC    X'AFB38680'
         L     1,0(,1)
         CLR   1,0
         BNE   EXIT0
         SPACE
         L     RPCL,=A(PUTPCL)
         USING PUTPCL,RPCL
         SPACE
         LA    R14,OPERWD
         MVC   HALF,4(R14)
         LR    R14,RPDE
         AH    R14,HALF            R14 --> OPERWD PDE ENTRY
         MVC   OPERWDA,0(R14)
         SPACE
         CLI   OPERWDA+3,OP#INTO
         BNE   *+8
         MVI   OPERWDA+3,OP#IN     'INTO' IS SAME AS 'IN'
         SPACE
         CLI   OPERWDA+3,OP#OV
         BNE   *+8
         MVI   OPERWDA+3,OP#OVER   'OV' IS SAME AS 'OVER'
         SPACE
         TM    QUOTES+6,X'80'      QUOTES SPECIFIED?
         BZ    ERRSYNTX            NO - ERROR - BRANCH
         L     R1,QUOTES
         ST    R1,QUOTEW
         SR    R1,R1
         CH    R1,QUOTES+4         NULL QUOTED STRING?
         BE    STXQN               YES - BRANCH
         LA    R1,1
         ST    R1,SOURCOL1
         LH    R1,QUOTES+4
         ST    R1,SOURCOL2
         B     STXOP
*
*        (NULL STRING ENTERED)
*
STXQN    CLI   OPERWDA+3,OP#IN
         BNE   ERRNULLS
         SR    R1,R1
         ST    R1,SOURCOL1
         ST    R1,SOURCOL2
*
*        (CHECK FOR REQUIRED OPERWD)
*
STXOP    EQU   *
         TM    OPERWDA+6,X'80'     OPERWD SPECIFIED?
         BO    OKOPER              YES - BRANCH
         LA    R0,OP#OVER          DEFAULT = 'OVER'
         TM    DESTIN+8+6,X'80'    WAS A RANGE ENTERED?
         BZ    *+8                 NO, SKIP NEXT INST
         LA    R0,OP#ON            IF RANGE, DEFAULT = 'ON'
         STC   R0,OPERWDA+3        SET DEFAULT OPERATOR
OKOPER   EQU   *
*
*        (CHECK FOR REQUIRED DEST)
*
         TM    DESTIN+6,X'80'        DESTINATON COLUMNS SPECIFIED?
         BZ    ERRSYNTX            NO - ERROR - BRANCH
         LA    R14,DESTIN
         L     R15,0(,R14)
         LH    R1,4(,R14)
         BCTR  R1,0
         B     *+10
         PACK  DOUBLE,0(0,R15)
         EX    R1,*-6
         CVB   R1,DOUBLE
         ST    R1,DESTINA1         STORE BINARY VALUE
         ST    R1,DESTINA2
         C     R1,MAXCOL
         BH    ERRINVCL
         LTR   R1,R1               IS VALUE ZERO?
         BNZ   STXDESTR            NO - BRANCH
*
*        (FIRST COL OF DEST IS ZERO)
*
*        CLI   OPERWDA+3,OP#AT      AT?
         B     ERRZERCL            NO - ERROR - BRANCH
STXDESTR TM    DESTIN+8+6,X'80'      WAS A RANGE ENTERED?
         BZ    STXOVER             NO - BRANCH
*
*        (DEST IS A RANGE)
*
         LA    R1,OP#OVER
         CH    R1,OPERWDA+2        IS OPERWD 'OVER'?
         BE    ERRSYNTX            YES - ERROR - BRANCH
         LA    R1,OP#AT
         CH    R1,OPERWDA+2        IS OPERWD 'AT'?
         BE    ERRSYNTX            YES - ERROR - BRANCH
         LA    R14,DESTIN+8
         L     R15,0(,R14)
         LH    R1,4(,R14)
         BCTR  R1,0
         PACK  DOUBLE,0(0,R15)
         EX    R1,*-6
         CVB   R1,DOUBLE
         ST    R1,DESTINA2         STORE BINARY VALUE
         SPACE
         C     R1,DESTINA1         NEGATIVE RANGE?
         BL    ERRNEGCL            YES - BRANCH
         C     R1,MAXCOL           DOES RANGE EXTEND BEYOND 256?
         BH    ERRINVCL            YES - ERROR - BRANCH
         S     R1,DESTINA1
         A     R1,=F'1'
         C     R1,MAXCOL           IS LENGTH GREATER THAN 256?
         BH    ERRINVCL            YES - ERROR - BRANCH
*
*        (CHECK FOR TOO LONG STRING WITH 'ON')
*
STXOVER  CLI   OPERWDA+3,OP#ON
         BNE   STXINCR
         L     R1,DESTINA2
         S     R1,DESTINA1
         L     R14,SOURCOL2
         S     R14,SOURCOL1
         CR    R1,R14              IS LENGTH OF DEST SHORTER?
         BL    ERRNOFIT            YES - BRANCH
         SPACE
STXINCR  LA    R14,INCR
         TM    6(R14),X'80'        INCR SPECIFIED?
         BNO   STXOUT              NO - BRANCH
         L     R15,0(,R14)         POINT TO DIGITS
         LH    R1,4(,R14)          LENGTH OF DIGITS
         BCTR  R1,0
         B     *+10
         PACK  DOUBLE,0(0,R15)
         EX    R1,*-6
         CVB   R1,DOUBLE
         CLI   INCRKW+1,2          DECR?
         BNE   *+6                 NO - BRANCH
         LNR   R1,R1               YES - MAKE IT NEGATIVE
         ST    R1,INCRBIN          SAVE BINARY VALUE
         TM    QUOTES+6,X'80'      QUOTES SPECIFIED?
         BZ    ERRSYNTX            NO - ERROR - BRANCH
         LA    R1,8                MAX LENGTH OF STRING WITH INCR
         SH    R1,QUOTES+4         IS MAX LESS THAN LENGTH?
         BM    ERRSYNTX            YES - ERROR - BRANCH
         MVC   INCRW,=8C'0'
         LA    R15,INCRW(R1)       POINT INTO INCRW
         ST    R15,QUOTEW          SAVE ADDR OF WORK STRING
         LH    R1,QUOTES+4         GET LENGTH
         LTR   R1,R1
         BNP   ERRSYNTX            INCR WITH NULL STRING
         BCTR  R1,0
         L     R14,QUOTES
         B     *+10
         MVC   0(0,R15),0(R14)
         EX    R1,*-6
         MVC   DOUBLE,INCRW        BEGIN NUMERIC TEST
         NC    DOUBLE,=8C'0'       LEAVE ONLY ZONES ON
         CLC   DOUBLE,=8C'0'       IS IT NUMERIC?
         BNE   ERRSYNTX            NO - BRANCH
         PACK  DOUBLE(8),INCRW(8)
         CVB   R1,DOUBLE
         ST    R1,QUOTEV
STXOUT   EQU   *
         SPACE
************************************************************
*                                                          *
*        CHECK FOR EMPTY DATASET                           *
*                                                          *
************************************************************
         SPACE
         MVI   EUTPARM,X'04'       SET CODE TO READ 1ST LINE
         MVC   EUTPARM+1(3),CAPTCDCB+1
         XC    EUTPARM+4(4),EUTPARM+4  KEYPTR=0
         LA    R1,CABFRPL
         ST    R1,EUTPARM+8
         OI    EUTPARM+8,X'80'
         BAL   R14,RDWRTRTN
         CH    R15,=H'4'
         BH    EXITRC
         BE    ERREMPTY
         SPACE
************************************************************
*                                                          *
*                                                          *
*                                                          *
************************************************************
         SPACE
         LA    R14,LNUM1           R14 --> PDE ENTRY
         L     R15,0(,R14)         R15 --> DATA
         CLI   0(R15),C'*'         ASTERISK SPECIFIED?
         BE    ASTSPEC             YES - BRANCH
         SPACE
************************************************************
*                                                          *
*        A LINE NUMBER WAS SPECIFIED                       *
*                                                          *
************************************************************
         SPACE
         TM    CACFLAG1,CANONUM    EDITING NONUM?
         BO    ERRNONUM            YES - ERROR
         SPACE
         LH    R1,4(,R14)          R1 = LENGTH
         BCTR  R1,0
         B     *+10
         PACK  DOUBLE,0(0,R15)
         EX    R1,*-6
         CVB   R1,DOUBLE
         ST    R1,LINENUM1         STORE BINARY VALUE
         LA    R1,LINENUM1
         ST    R1,EUTPARM+4
         SPACE
         TM    LNUM2+6,X'80'       LNUM2 SPECIFIED?
         BZ    NOSPAN              NO - BRANCH
         SPACE
************************************************************
*                                                          *
*        A 2ND LINE NUMBER WAS ALSO SPECIFIED              *
*                                                          *
************************************************************
         SPACE
         LA    R14,LNUM2
         L     R15,0(,R14)         R15 --> DIGITS
         LH    R1,4(,R14)          R1 = LENGTH
         BCTR  R1,0
         B     *+10
         PACK  DOUBLE,0(0,R15)
         EX    R1,*-6
         CVB   R1,DOUBLE
         ST    R1,LINENUM2         STORE BINARY VALUE
         SPACE
************************************************************
*                                                          *
*        CHECK IF 2ND LINE NUMBER LESS THAN 1ST            *
*                                                          *
************************************************************
         SPACE
         L     R1,LINENUM2
         C     R1,LINENUM1
         BL    ERRLINE2
         SPACE
************************************************************
*                                                          *
*        WRAP UP LINE NUMBER PROCESSING - GO TO READ       *
*                                                          *
************************************************************
         SPACE
         LA    R1,1
         ST    R1,LNCOUNT          FIX RUNAWAY PROBLEM 10/14/75
         B     READ
         SPACE
NOSPAN   MVC   LINENUM2,LINENUM1
         LA    R1,1
         ST    R1,LNCOUNT
         B     READ
         SPACE
************************************************************
*                                                          *
*        ASTERISK WAS SPECIFIED (OR DEFAULTED)             *
*                                                          *
************************************************************
         SPACE
ASTSPEC  LA    R1,1
         ST    R1,LNCOUNT          SET LNCOUNT=1
         TM    LNUM2+6,X'80'       LNUM2 SPECIFIED?
         BZ    READCUR             NO - BRANCH
         LA    R14,LNUM2           R14 --> PDE ENTRY
         L     R15,0(,R14)         R15 --> DIGITS
         LH    R1,4(,R14)          R1 = LENGTH
         BCTR  R1,0
         B     *+10
         PACK  DOUBLE,0(0,R15)
         EX    R1,*-6
         CVB   R1,DOUBLE
         ST    R1,LNCOUNT          STORE BINARY VALUE
         LTR   R1,R1               ZERO?
         BZ    ERRLNCNT            YES - ERROR
         SPACE
READCUR  SLR   R1,R1
         BCTR  R1,0
         ST    R1,LINENUM2         SET LINENUM2=-1
         LA    R1,CACURNUM         PTR TO CURRENT LINE KEY
         ST    R1,EUTPARM+4
         SPACE
************************************************************
*                                                          *
*        READ THE 1ST RECORD TO BE PROCESSED               *
*                                                          *
************************************************************
         SPACE
READ     MVI   EUTPARM,X'00'       READ CURRENT LINE BY KEY
         BAL   R14,RDWRTRTN
         SPACE
         LTR   R15,R15
         BZ    PROCESS
         CH    R15,=H'4'
         BNE   ERRIOERR
         SPACE
************************************************************
*                                                          *
*        CHECK IF MORE LINES TO CHANGE                     *
*                                                          *
************************************************************
         SPACE
         CLC   LINENUM1,LINENUM2   ONLY ONE LINENUM SPECIFIED?
         BE    ERRLNOTF            YES - NOT FOUND - BRANCH
         CLC   LNCOUNT,=F'1'       ONLY * (OR NOTHING) SPECIFIED?
         BNE   READNEXT            NO - ITS A RANGE - BRANCH
         CLC   CACURNUM,=F'0'      YES - BUT WERE WE AT 'TOP' ?
         BNE   ERRLNOTF            NO - NOTFOUND - BRANCH (EVER TAKEN?)
*              HOW CAN '*' BE NOT FOUND IF DATASET NOT EMPTY?
READNEXT MVI   EUTPARM,X'02'
         BAL   R14,RDWRTRTN
         LTR   R15,R15
         BZ    CKWITHIN
         CH    R15,=H'4'
         BNE   ERRIOERR
         MVI   RC+3,8
         B     ERRLNOTF
CKWITHIN L     R1,LINENUM2
         C     R1,CABFRPL          IF LNUM2 GE KEY
         BNL   PROCESS                GO TO PROCESS
         CH    R1,=H'-1'           IF LNUM2 EQ -1
         BE    PROCESS                GO TO PROCESS
         B     ERRLNOTF
         SPACE
************************************************************
*                                                          *
*        PROCESS: CHECK OTHER OPERANDS                     *
*                                                          *
************************************************************
         SPACE
PROCESS  EQU   *
*        LA    R1,=C'OK'
*        LA    R0,2
*        BAL   R14,PUTLINE
PROCLOOP EQU   *
*
*        (DO AWAY WITH SEQUENCE NUMBERS)
*
         TM    CACFLAG1,CANONUM    NONUM?
         BO    OUTSEQX             YES - BRANCH
         CLI   CALINE,1            SEQFLD IN COLUMN 1?
         BNE   OUTSEQA             NO - BRANCH
*
*        (REMOVE LEADING SEQUENCE NUMBERS)
*
         LH    R14,CABFRPL+4       GET RECLEN
         SLR   R15,R15
         IC    R15,CALENGTH        GET SEQLEN
         SLR   R14,R15             GET RECLEN-SEQLEN
         STH   R14,CABFRPL+4       RESET RECLEN
         SH    R14,=H'4'           GET DATA LENGTH
         LA    R1,CABFRPL+8        GET DATA ADDRESS
         ALR   R1,R15              GET DATA ADDRESS+SEQLEN
         LA    R15,CABFRPL+8       GET DATA ADDRESS
         BCTR  R14,0
         B     *+10
         MVC   0(0,R15),0(R1)      MOVE DATA OVER SEQFLD
         EX    R14,*-6
         B     OUTSEQX
*
*        (TRAILING SEQUENCE NUMBERS - TRUNCATE LENGTH)
*
OUTSEQA  SLR   R14,R14
         IC    R14,CALINE
         LA    R14,4-1(,R14)       SUBTRACT 1, ADD 4
         STH   R14,CABFRPL+4       RESET RECLEN=CALINE+3
OUTSEQX  EQU   *
*
*        (BLANK OUT 256 BYTES AFTER DATA)
*
         LH    R14,CABFRPL+4       GET RECLEN
         LA    R1,CABFRPL+4        GET ADDRESS OF RECORD
         ALR   R1,R14              GET ADDRESS AFTER DATA
         MVI   0(R1),C' '
         MVC   1(255,R1),0(R1)     CLEAR AREA
*
*        (COPY STRING TO SOURCEWK)
*
         MVC   SHIFTWK,CABFRPL+8   SAVE COPY OF RECORD
         MVI   SOURCEWK,C' '
         MVC   SOURCEWK+1(255),SOURCEWK
         L     R15,QUOTEW          GET STRING ADDRESS
         LH    R1,QUOTES+4
         BCTR  R1,0
         B     *+10
         MVC   SOURCEWK(0),0(R15)  MOVE STRING
         EX    R1,*-6
*
*        (RECORD MAY NOW BE CHANGED)
*
         CLI   OPERWDA+3,OP#AT
         BNE   OPIN
*
*        ('AT' ROUTINE)
*
         L     R1,SOURCOL2
         S     R1,SOURCOL1         GET L-1 OF SOURCE
         LA    R15,CABFRPL+8
         A     R15,DESTINA1
         BCTR  R15,0
         B     *+10
         MVC   0(0,R15),SOURCEWK
         EX    R1,*-6
         ALR   R15,R1
         LA    R15,1(,R15)         POINT PAST JUST-MOVED DATA
         ST    R15,NEXTSLOT
         LH    R1,CABFRPL+4
         SH    R1,=H'4'
         S     R1,DESTINA1         GET LENGTH OF DATA TO BE SHIFTED
*        LA    R1,1(,R1)
         A     R1,=F'1'            (FIX BUG. R1 MAY BE NEGATIVE)
         LTR   R1,R1
         BNP   OPATLEN             NOTHING LEFT TO SHIFT
         LA    R14,SHIFTWK
         A     R14,DESTINA1        GET ADDRESS OF DATA TO BE SHIFTED
         BCTR  R14,0
         BCTR  R1,0
         B     *+10
         MVC   0(0,R15),0(R14)
         EX    R1,*-6
         ALR   R15,R1
         LA    R15,1(,R15)         POINT PAST JUST-MOVED DATA
         ST    R15,NEXTSLOT
OPATLEN  EQU   *
         L     R15,NEXTSLOT
         LA    R1,CABFRPL+8
         SR    R15,R1              GET NEW LENGTH
         LTR   R15,R15             LENGTH GREATER THAN 0?
         BP    *+12                YES - BRANCH
         LA    R15,1
         MVI   CABFRPL+8,C' '      LENGTH MUST BE AT LEAST 1
         LA    R15,4(,R15)
         STH   R15,CABFRPL+4
         B     ELECALL
*
*        ('IN' ROUTINE)
*
OPIN     CLI   OPERWDA+3,OP#IN
         BNE   OPON
OPEXIN   L     R1,SOURCOL2
         LTR   R1,R1               NULL STRING?
         BZ    OPINNUL             YES - BRANCH
         S     R1,SOURCOL1         GET L-1 OF SOURCE
         LA    R15,CABFRPL+8
         A     R15,DESTINA1
         BCTR  R15,0
         B     *+10
         MVC   0(0,R15),SOURCEWK
         EX    R1,*-6
*        L     R14,DESTINA1        GET 1ST COL OF DEST
*        ALR   R1,R14              GET LAST COL OF DEST
*        AH    R1,=H'4'
*        CH    R1,CABFRPL+4        WAS DATA MOVED BEYOND OLD END?
*        BNH   *+8                 NO
*        STH   R1,CABFRPL+4        YES - RESET LENGTH
         ALR   R15,R1
         LA    R15,1(,R15)         POINT PAST JUST-MOVED DATA
         ST    R15,NEXTSLOT
         B     OPINSHFT
OPINNUL  LA    R15,CABFRPL+8
         A     R15,DESTINA1
         BCTR  R15,0
         ST    R15,NEXTSLOT
OPINSHFT LH    R1,CABFRPL+4
         SH    R1,=H'4'
         S     R1,DESTINA2         GET LENGTH OF DATA TO BE SHIFTED
         LTR   R1,R1
         BNP   OPINLEN             NOTHING LEFT TO SHIFT
         LA    R14,SHIFTWK
         A     R14,DESTINA2        GET ADDRESS OF DATA TO BE SHIFTED
         BCTR  R1,0
         B     *+10
         MVC   0(0,R15),0(R14)
         EX    R1,*-6
         ALR   R15,R1
         LA    R15,1(,R15)         POINT PAST JUST-MOVED DATA
         ST    R15,NEXTSLOT
OPINLEN  EQU   *
         L     R15,NEXTSLOT
         LA    R1,CABFRPL+8
         SR    R15,R1              GET NEW LENGTH
         LTR   R15,R15             LENGTH GREATER THAN 0?
         BP    *+12                YES - BRANCH
         LA    R15,1
         MVI   CABFRPL+8,C' '      LENGTH MUST BE AT LEAST 1
         LA    R15,4(,R15)
         STH   R15,CABFRPL+4
*        STH   R14,CABFRPL+4
         B     ELECALL
*
*        ('ON' ROUTINE)
*
OPON     CLI   OPERWDA+3,OP#ON
         BNE   OPOVER
         L     R1,DESTINA2
         S     R1,DESTINA1
         LA    R15,CABFRPL+8
         A     R15,DESTINA1
         BCTR  R15,0
         B     *+10
         MVC   0(0,R15),SOURCEWK
         EX    R1,*-6
         L     R1,DESTINA2
         AH    R1,=H'4'
         CH    R1,CABFRPL+4        WAS DATA MOVED BEYOND OLD END?
         BNH   *+8                 NO
         STH   R1,CABFRPL+4        YES - RESET LENGTH
         B     ELECALL
*
*        ('OVER' ROUTINE)
*
OPOVER   CLI   OPERWDA+3,OP#OVER
         BNE   ELECALL
         L     R1,SOURCOL2
         S     R1,SOURCOL1
         LA    R15,CABFRPL+8
         A     R15,DESTINA1
         BCTR  R15,0
         B     *+10
         MVC   0(0,R15),SOURCEWK
         EX    R1,*-6
         L     R15,DESTINA1        GET 1ST COL OF DEST
         ALR   R1,R15              GET LAST COL OF DEST
         AH    R1,=H'4'
         CH    R1,CABFRPL+4        WAS DATA MOVED BEYOND OLD END?
         BNH   *+8                 NO
         STH   R1,CABFRPL+4        YES - RESET LENGTH
         B     ELECALL
*
*        (CALL THE LINE EDIT ROUTINE TO HANDLE TRUNCATION)
*
ELECALL  ST    COMMREG,ELEPARM+4
         LA    R1,CABFRPL+4
         ST    R1,ELEPARM          THIS FIELD ALTERED IF OVERFLOW
         MVI   ELEPARM,X'00'       (NOT REALLY NECESSARY)
         BAL   R14,LINEEDIT
         LTR   R15,R15             GOOD RC FROM LINEEDIT?
         BNZ   LINOVFLO            NO - BRANCH
         SPACE
REWRITE  EQU   *
         MVI   EUTPARM,X'20'       WRITE
         LA    R1,CABFRPL          POINT TO KEY
         ST    R1,EUTPARM+4
         OI    EUTPARM+8,X'80'
         SLR   R1,R1
         ST    R1,EUTPARM+8
         BAL   R14,RDWRTRTN        WRITE A RECORD
         CH    R15,=H'12'          KEY EXCEED DATA SET LIMITS?
         BE    ERRIOERW
*
*        UPDATE STRING WITH 'INCR'
*
         L     R1,INCRBIN
         LTR   R1,R1
         BZ    NOINCR
         L     R15,QUOTEV
         AR    R1,R15
         CVD   R1,DOUBLE
         UNPK  INCRW(8),DOUBLE+3(5)
         OI    INCRW+7,X'F0'
         ST    R1,QUOTEV
NOINCR   EQU   *
*
*        (IF VERIFY ON, DISPLAY THE RECORD)
*
         TM    CACFLAG1,CAVRFYSW   VERIFY ON?
         BZ    VEROFF
         MVC   CATEMPBF+12(4),CABFRPL
         LH    R1,CABFRPL+4        GET RECLEN
         BCTR  R1,0
         B     *+10
         MVC   CATEMPBF+12+4(0),CABFRPL+4
         EX    R1,*-6
         SR    R1,R1
         ST    R1,EMSPARM
         LA    R1,CATEMPBF
         ST    R1,EMSPARM+4
         LR    R0,R9
         LA    R1,EMSPARM
         OI    CACFLAG4,CATPUTVF   SET SWITCH FOR EBEMS
         IKJEBESH (COMMREG),IKJEBEMS,PARAM=((COMMREG),EMSPARM),MF=(E,X)
         NI    CACFLAG4,X'FF'-CATPUTVF RESET SWITCH
VEROFF   EQU   *
*
*        (UPDATE CURRENT LINE NUMBER)
*
         L     R1,CABFRPL
         ST    R1,CACURNUM
*
*        (IF CURRENT LINE GE LNUM2 AND COUNT LE 1 GO TO NOTEXT)
*
         C     R1,LINENUM2         KEY LESS THAN LNUM 2?
         BL    *+16                YES- BRANCH
         L     R1,LNCOUNT
         CH    R1,=H'1'            LNCOUNT GT 1
         BNH   NOTEXT              NO - BRANCH
*
*        (READ THE NEXT LINE)
*
         MVI   EUTPARM,X'02'       READ NEXT LINE
         LA    R1,CABFRPL
         ST    R1,EUTPARM+4        KEY POINTER
         ST    R1,EUTPARM+8        BUFFER POINTER
         OI    EUTPARM+8,X'80'
         BAL   R14,RDWRTRTN        READ A RECORD
         CH    R15,=H'12'
         BE    ERRIOERR
         CH    R15,=H'4'
         BE    EODATA
*
*        (IF THIS KEY GT LNUM2 AND LNCOUNT LE 1 GO TO NOTEXT)
*
         L     R1,CABFRPL
         C     R1,LINENUM2
         BNH   *+16
         L     R1,LNCOUNT
         CH    R1,=H'1'
         BNH   NOTEXT
         L     R1,LNCOUNT
         BCTR  R1,0                SUBTRACT 1 FROM LNCOUNT
         ST    R1,LNCOUNT
         B     PROCLOOP
         SPACE
EODATA   LA    R1,MSGEODAT
         LA    R0,L'MSGEODAT
         BAL   R14,PUTLINE
         SPACE
NOTEXT   B     EXIT0
         SPACE
************************************************************
*                                                          *
*        ISSUE LINE OVERFLOW MESSAGE                       *
*                                                          *
************************************************************
         SPACE
LINOVFLO B     LINOVA              BRANCH AROUND OLD SIMPLE MESSAGE
         LA    R1,MSGOVFLO
         LA    R0,L'MSGOVFLO
         BAL   R14,PUTLINE
         B     REWRITE
*        (A BETTER OVERFLOW MESSAGE ROUTINE)
LINOVA   STM   R3,R4,LINOV34
         MVC   RELMSG1(2),=AL2(M507) (DEFINED IN IKJEBEMI)
         SLR   R1,R1
         ST    R1,MSG1PARM         NO 2ND INSERTION
         ST    R1,MSG2PARM         NO 2ND INSERTION
         LH    R1,CALRECL
         SH    R1,=H'4'
         CVD   R1,DOUBLE
         UNPK  MSG2PARM+8(3),DOUBLE+6(2)
         OI    MSG2PARM+8+2,X'F0'
         LA    R1,3+4              SET LENGTH TO 3
         LA    R0,2                SET MAX NO OF LEADING ZEROES
         CLI   MSG2PARM+8,C'0'     LEADING 0?
         BNE   *+12
         MVC   MSG2PARM+8(3),MSG2PARM+8+1
         BCTR  R1,0                SUBTRACT 1 FROM LENGTH
         BCT   R0,*-16             BRANCH IF MORE DIGITS TO PROCESS
         STH   R1,MSG2PARM+4       STORE LENGTH
         MVC   MSG2PARM+6(2),=AL2(M5071IN1) (DEFINED IN IKJEBEMI)
         MVC   RELMSG2(2),=AL2(M5071) (DEFINED IN IKJEBEMI)
         TM    CACFLAG1,CANONUM    NUM?
         BZ    *+10                YES - BRANCH
         SLR   R3,R3               NO - NO INSERTION TEXT
         B     LINOVS
         L     R1,CABFRPL          GET KEY
         CVD   R1,DOUBLE
         UNPK  MSG1PARM+8(8),DOUBLE
         OI    MSG1PARM+8+7,X'F0'
         LA    R1,8+4              SET LENGTH TO 8
         LA    R0,7                SET MAX NO OF LEADING ZEROES
         CLI   MSG1PARM+8,C'0'     LEADING 0?
         BNE   *+12
         MVC   MSG1PARM+8(7),MSG1PARM+8+1
         BCTR  R1,0                SUBTRACT 1 FROM LENGTH
         BCT   R0,*-16             BRANCH IF MORE DIGITS TO PROCESS
         STH   R1,MSG1PARM+4       STORE LENGTH
         MVC   MSG1PARM+6(2),=AL2(M507IN1) (DEFINED IN IKJEBEMI)
         LA    R3,MSG1PARM
LINOVS   LA    R4,MSG2PARM
         BAL   R14,SENDMSG
         LM    R3,R4,LINOV34
         B     REWRITE
         SPACE
************************************************************
*                                                          *
*        LINE EDIT ROUTINE                                 *
*                                                          *
************************************************************
         SPACE
LINEEDIT ST    R14,PUTLINS
         IKJEBESH (COMMREG),IKJEBELE,PARAM=((COMMREG),ELEPARM),MF=(E,X)
         L     R14,PUTLINS
         BR    R14
         SPACE
************************************************************
*                                                          *
*        ERROR ROUTINES                                    *
*                                                          *
************************************************************
         SPACE
SENDMSG  ST    R14,PUTLINS
         IKJEBEML ,,(R3),(R4),MF=(E,EMLPARM)
         L     R14,PUTLINS
         BR    R14
         SPACE
         SPACE
ERRSYNTX LA    R1,MSGSYNTX
         LA    R0,L'MSGSYNTX
         BAL   R14,PUTLINE
         B     EXIT8
         SPACE
ERREMPTY LA    R1,MSGEMPTY
         LA    R0,L'MSGEMPTY
         BAL   R14,PUTLINE
         B     EXITRC
         SPACE
ERRNONUM LA    R1,MSGNONUM
         LA    R0,L'MSGNONUM
         BAL   R14,PUTLINE
         B     EXITRC
         SPACE
ERRLINE2 LA    R1,MSGLINE2
         LA    R0,L'MSGLINE2
         BAL   R14,PUTLINE
         B     EXITRC
         SPACE
ERRLNCNT LA    R1,MSGLNCNT
         LA    R0,L'MSGLNCNT
         BAL   R14,PUTLINE
         B     EXITRC
         SPACE
ERRIOERR LA    R1,MSGIOERR
         LA    R0,L'MSGIOERR
         BAL   R14,PUTLINE
         B     EXITRC
         SPACE
ERRIOERW LA    R1,MSGIOERW
         LA    R0,L'MSGIOERW
         BAL   R14,PUTLINE
         B     EXITRC
         SPACE
ERRLNOTF LA    R1,MSGLNOTF
         LA    R0,L'MSGLNOTF
         BAL   R14,PUTLINE
         B     EXITRC
         SPACE
ERRNOFIT LA    R1,MSGNOFIT
         LA    R0,L'MSGNOFIT
         BAL   R14,PUTLINE
         B     EXITRC
         SPACE
ERRINVCL LA    R1,MSGINVCL
         LA    R0,L'MSGINVCL
         BAL   R14,PUTLINE
         B     EXITRC
         SPACE
ERRNEGCL LA    R1,MSGNEGCL
         LA    R0,L'MSGNEGCL
         BAL   R14,PUTLINE
         B     EXITRC
         SPACE
ERRZERCL LA    R1,MSGZERCL
         LA    R0,L'MSGZERCL
         BAL   R14,PUTLINE
         B     EXITRC
         SPACE
ERRNULLS LA    R1,MSGNULLS
         LA    R0,L'MSGNULLS
         BAL   R14,PUTLINE
         B     EXITRC
         SPACE
ERROVLAP LA    R1,MSGOVLAP
         LA    R0,L'MSGOVLAP
         BAL   R14,PUTLINE
         B     EXITRC
         SPACE
************************************************************
*                                                          *
*        PUTLINE ROUTINE                                   *
*                                                          *
************************************************************
         SPACE
PUTLINE  STM   R14,R1,PUTLINS
         XC    MYOLD(8),MYOLD
         XC    MYSEG1(4),MYSEG1
         MVC   MYPTPB(12),MODLPTPB
         LA    R14,1               NO. OF MESSAGE SEGMENTS
         ST    R14,MYOLD
         LA    R14,MYSEG1          POINT TO 1ST SEGMENT
         ST    R14,MYOLD+4
         LR    R14,R0              LENGTH IN R0
         LA    R14,4(,R14)         ADD 4
         LA    R15,MYSEG1+4
         CLC   0(3,R1),=C'IKJ'     IS DATA PRECEEDED BY MESSAGE ID?
         BE    *+16                YES - BRANCH
         LA    R14,1(,R14)         ADD 1 TO LENGTH
         MVI   0(R15),C' '         INSERT LEADING BLANK
         LA    R15,1(,R15)         BUMP POINTER
         STH   R14,MYSEG1
         LR    R14,R0
         BCTR  R14,0
         B     *+10
         MVC   0(0,R15),0(R1)      MOVE MESSAGE IN
         EX    R14,*-6
         SPACE
         L     R15,MYPUTLEP
         LTR   R15,R15             IS PUTLINE LOADED?
         BNZ   PUTMAC              YES
         L     R15,16              CVTPTR                  .MVS.
         TM    444(R15),X'80'      IS PUTLINE IN LPA?      .MVS.
         BNO   PUTLOAD             NO, BRANCH TO LOAD IT   .MVS.
         L     R15,444(,R15)       YES, USE CVTPUTL        .MVS.
         B     PUTLOADX            BYPASS LOAD             .MVS.
PUTLOAD  LA    R0,=CL8'IKJPUTL'
         LOAD  EPLOC=(0)
         LR    R15,R0              GET ENTRY ADDRESS
         LA    R15,0(,R15)         CLEAR HI BYTE
PUTLOADX ST    R15,MYPUTLEP        SAVE ENTRY POINT
PUTMAC   EQU   *
         SPACE
         PUTLINE PARM=MYPTPB,OUTPUT=(MYOLD),ENTRY=(15),MF=(E,CATMPLST)
         SPACE
         LM    R14,R1,PUTLINS
         BR    R14
************************************************************
*                                                          *
*        RDWRTRTN                                          *
*                                                          *
************************************************************
         SPACE
RDWRTRTN ST    R14,PUTLINS
         IKJEBESH (COMMREG),IKJEBEUT,PARAM=((COMMREG),EUTPARM),MF=(E,X)
         ST    R1,RCDPTR
         CH    R15,=H'8'
         BNE   *+8
         MVI   RC+3,12             SET RC=12
         L     R14,PUTLINS
         BR    R14
         SPACE
************************************************************
*                                                          *
*        EXIT - RETURN TO EDIT                             *
*                                                          *
************************************************************
         SPACE
EXIT8    LA    R15,8
         B     EXIT
EXITRC   L     R15,RC
         B     EXIT
EXIT0    SR    15,15
EXIT     LR    R2,R15
         L     R0,MYPUTLEP         GET PUTLINE ADDRESS
         LTR   R0,R0               WAS LOAD ISSUED?
         BNP   EXNODEL             NO, BYPASS DELETE
         LA    R0,=CL8'IKJPUTL'
         DELETE EPLOC=(0)
EXNODEL  EQU   *
         TM    CAPRSPDL,CAFREEDL   IS PDL FREED
         BO    EXNORLSA            YES, BRANCH
         IKJRLSA CAPTPRSD
         OI    CAPRSPDL,CAFREEDL   MARK PDL FREED
EXNORLSA EQU   *
         LR    1,13
         L     R0,@SIZE
         L     13,4(,13)
         FREEMAIN R,A=(1),LV=(0)
         LR    R15,R2
         L     14,12(,R13)
         LM    0,12,20(13)
         BR    14
         SPACE
************************************************************
*                                                          *
*        CONSTANTS                                         *
*                                                          *
************************************************************
         SPACE
MODLPTPB PUTLINE OUTPUT=(1,TERM,SINGLE,INFOR),                         X
               TERMPUT=(EDIT,WAIT,NOHOLD,NOBREAK),MF=L
         SPACE
         LTORG
MSGEODAT DC    C'IKJ52500I END OF DATA'
MSGEMPTY DC    C'IKJ52501I NO LINES IN DATA SET'
MSGNONUM DC    C'IKJ52502I DATA SET NOT LINE NUMBERED' IKJ52502I
MSGLINE2 DC    C'IKJ52503I INVALID LINE NUMBER RANGE' IKJ52503I
MSGLNOTF DC    C'IKJ52504I LINE NUMBER NOT FOUND' IKJ52504I
MSGOVFLO DC    C'IKJ52507I LINE TRUNCATED'
MSGIOERR DC    C'IKJ52313I I/O ERROR HAS OCCURRED READING EDIT DATASET'
MSGIOERW DC    C'IKJ52313I I/O ERROR HAS OCCURRED WRITING EDIT DATASET'
MSGLNCNT DC    C'IKJ56702I INVALID LINECOUNT ZERO'
MSGNOFIT DC    C'IKJ56702I ERROR - SENDING FIELD IS LONGER THAN RECEIVIX
               NG FIELD'
MSGINVCL DC    C'IKJ56702I COLUMN OR LENGTH EXCEEDS MAXIMUM ALLOWABLE VX
               ALUE'
MSGNEGCL DC    C'IKJ56702I ILLEGAL COLUMN RANGE - SECOND VALUE CANNOT BX
               E SMALLER'
MSGZERCL DC    C'IKJ56702I INVALID COLUMN VALUE'
MSGNULLS DC    C'IKJ56702I ILLEGAL NULL STRING'
MSGOVLAP DC    C'IKJ56702I ILLEGAL OVERLAP OF SENDING AND RECEIVING FIEX
               LDS'
MSGSYNTX DC    C'IKJ56702I SYNTAX ERROR'
         LTORG
PATCH    DC    4D'0'               PATCH AREA
         SPACE
************************************************************
*                                                          *
*        PARSE PCL                                         *
*                                                          *
************************************************************
         SPACE
         PRINT NOGEN
         SPACE
PUTPCL   IKJPARM
LNUM1    IKJIDENT 'LINE NUMBER',ASTERISK,FIRST=NUMERIC,OTHER=NUMERIC,  X
               MAXLNTH=8,DEFAULT='*'
LNUM2    IKJIDENT 'LINE RANGE',FIRST=NUMERIC,OTHER=NUMERIC,            X
               MAXLNTH=8
QUOTED   IKJPOSIT DELIMITER
QUOTES   IKJPOSIT STRING,SQSTRING,ASIS,PROMPT='STRING'
OPERWD   IKJRSVWD 'OPERATOR'
         IKJNAME 'INTO'
         IKJNAME 'IN'
         IKJNAME 'AT'
         IKJNAME 'ON'
         IKJNAME 'OVER'
         IKJNAME 'OV'
DESTIN   IKJIDENT 'COLUMN(S)',RANGE,MAXLNTH=8,                         +
               FIRST=NUMERIC,OTHER=NUMERIC,                            +
               PROMPT='COLUMN, OR RANGE OF COLUMNS'
INCRKW   IKJKEYWD
         IKJNAME 'INCR',SUBFLD=INCRSF
         IKJNAME 'DECR',SUBFLD=INCRSF
INCRSF   IKJSUBF
INCR     IKJIDENT 'INCREMENT VALUE',                                   +
               FIRST=NUMERIC,OTHER=NUMERIC,MAXLNTH=8,                  +
               PROMPT='INCREMENT VALUE'
         IKJENDP
         SPACE
         PRINT GEN
OP#INTO  EQU   1
OP#IN    EQU   2
OP#AT    EQU   3
OP#ON    EQU   4
OP#OVER  EQU   5
OP#OV    EQU   6
OP#EX    EQU   7
         SPACE
************************************************************
*                                                          *
*        DSECTS                                            *
*                                                          *
************************************************************
         SPACE
@DATA    DSECT
         DS    18F
LINKAREA DS    2F
RC       DS    F
MYPUTLEP DS    F
MYPTPB   DS    3F
MYOLD    DS    2F
MYSEG1   DS    2H,CL100
PUTLINS  DS    4F
RCDPTR   DS    F
EUTPARM  DS    4F
ELEPARM  DS    2F
EMSPARM  DS    4F
DOUBLE   DS    D
LINENUM1 DS    F
LINENUM2 DS    F
SOURCOL1 DS    F
SOURCOL2 DS    F
DESTINA1 DS    F
DESTINA2 DS    F
COLWDA   DS    CL8
OPERWDA  DS    CL8
MAXCOL   DS    F
LNCOUNT  DS    F
QUOTEW   DS    F
QUOTEV   DS    F
INCRBIN  DS    F
INCRW    DS    CL8
EMLPARM  DS    10F
         ORG   EMLPARM
RELMSG1  DS    FL2
RELMSG2  DS    FL2
         ORG
NEXTSLOT DS    F
HALF     DS    H
OPEXSW   DS    X
LINOV34  DS    2F
MSG1PARM DS    20F  A(0),AL2(LEN),AL2(OFFSET),CL72'TEXT'
MSG2PARM DS    20F  A(0),AL2(LEN),AL2(OFFSET),CL72'TEXT'
SOURCEWK DS    CL256
SHIFTWK  DS    CL256
         DS    0D
@DATAL   EQU   *-@DATA
         SPACE
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
RPCL     EQU   6
RPDE     EQU   8
COMMREG  EQU   9
RETCDREG EQU   15
RETREG   EQU   14
PARMREG0 EQU   0
PARMREG1 EQU   1
         SPACE
         IKJCPPL
         SPACE
         IKJPPL
         SPACE
         IKJEBEMI (507)
         SPACE
         PRINT NOGEN
         IKJEBECA
         END
