         TITLE '  SPFHOLD - ENQ TESTER FOR SPF'
*$DOC@*****************************************************************
*                                                                     *
*   SPFHOLD  - WRITTEN BY BILL GODFREY                                *
*              PRC (PLANNING RESEARCH CORPORATION), MCLEAN, VA.       *
*                                                                     *
*   UPDATED AT AFDSC/PENTAGON BY BILL GODFREY                         *
*                                                                     *
*   THIS PROGRAM ISSUES AN 'SPF' TYPE ENQ ON A DATA SET               *
*   AND HOLDS IT UNTIL THE OPERATOR ENTERS A 'MODIFY-DEQ'             *
*   COMMAND (F JOBNAME,DEQ), OR A 'STOP' COMMAND (P JOBNAME),         *
*   OR UNTIL THE JOB ABENDS (522 FOR WAIT TIME EXCEEDED).             *
*                                                                     *
*   THIS ALLOWS USER WRITTEN PROGRAMS THAT DO AN 'SPF' TYPE           *
*   ENQ TO BE TESTED.  IF THEY DO NOT WAIT WHILE THIS PROGRAM         *
*   HOLDS THE RESOURCE, THEN THEY ARE NOT DOING A PROPER 'SPF'        *
*   TYPE OF ENQ.                                                      *
*                                                                     *
*   THE DATA SET USED IS THE ONE ALLOCATED TO DDNAME 'SPFHOLD'        *
*                                                                     *
*   THE QNAME IS 'SPFDSN' AND THE RNAME IS THE DSNAME, THE SAME       *
*   QNAME AND RNAME USED BY THE 'SPF' PRODUCT.                        *
*                                                                     *
*   AFTER A 'DEQ', THE PROGRAM WAITS FOR A 'MODIFY-ENQ' COMMAND       *
*   (F JOBNAME,ENQ) OR A STOP COMMAND.  A MODIFY-ENQ COMMAND          *
*   WILL MAKE THE PROGRAM START OVER, I.E., ISSUE THE ENQ AGAIN.      *
*   THUS YOU CAN MAKE THE PROGRAM ENQ AND DEQ AS MANY TIMES           *
*   AS YOU WANT WITHOUT HAVING TO STOP IT AND START IT AGAIN.         *
*   MODIFY-ENQ WILL BE IGNORED IF THE RESOURCE IS ALREADY ENQ'ED.     *
*   MODIFY-DEQ WILL BE IGNORED IF THE RESOURCE IS ALREADY DEQ'ED.     *
*                                                                     *
*   THE FOLLOWING MESSAGES WILL BE ISSUED TO THE CONSOLE:             *
*                                                                     *
*      SFI0000A WAITING FOR DSNAME                                    *
*      SFI0000A HOLDING DSNAME                                        *
*      SFI0000A RELEASED DSNAME                                       *
*                                                                     *
*$DOC$*****************************************************************
         EJECT
***********************************************************************
*                                                                     *
*          'SPFHOLD'                                                  *
*                                                                     *
***********************************************************************
         SPACE
*        WRITTEN BY. BILL GODFREY, PLANNING RESEARCH CORPORATION.
*        INSTALLATION. PRC COMPUTER CENTER INC, MCLEAN VA.
*        DATE WRITTEN. JUNE 1 1981.
*        DATE UPDATED. SEPTEMBER 16 1981.
*        ATTRIBUTES. NOT RE-ENTRANT.
         SPACE
SPFHOLD  START
         USING *,R12
ORIGIN   B     @PROLOG-*(,R15)
         DC    AL1(8),CL11'SPFHOLD'
         DC    CL16' &SYSDATE &SYSTIME '
@SIZE    DC    0F'0',AL1(1),AL3(@DATAL)
@PROLOG  STM   14,12,12(13)
         LR    R12,R15
         LR    R2,R1
         L     R0,@SIZE
*        GETMAIN R,LV=(0)
         LA    R1,SAVE
         ST    R13,4(,R1)
         ST    R1,8(,R13)
         LR    R13,R1
*        USING @DATA,R13
         SPACE
***********************************************************************
*                                                                     *
*         INITIALIZE SOME VARIABLES                                   *
*                                                                     *
***********************************************************************
         SPACE
         MVI   STATUS,0
         MVI   RNAME,C' '
         MVC   RNAME+1(43),RNAME
         MVC   ENQ(12),ENQZ
         MVC   RESERVE(16),RESZ
         MVC   DEQ(12),DEQZ
         SPACE
************************************************************
*                                                          *
*        EXTRACT ECB AND CIB POINTERS                      *
*                                                          *
************************************************************
         SPACE
         LA    1,EXTWORK
         MVC   0(EXTLISTL,1),EXTLIST
         SPACE
         EXTRACT EXTCOMM,MF=(E,(1))
         SPACE
         L     R3,EXTCOMM
         USING COMMAD,R3
         L     R4,COMMCIB          GET ADDR OF CIB
         LA    R4,0(,R4)           CLEAR HI ORDER BYTE
         LTR   R4,R4               IS ADDRESS IF 1ST CIB ZERO?
         BZ    NOTSTC              YES - NOT A STARTED TASK - BRANCH
         USING CIB,R4
         CLI   CIBVERB,CIBSTART    START?
         BNE   ABEND               NO, UNEXPECTED DEVELOPMENT
         SPACE
************************************************************
*                                                          *
*         FREE THE CIB (STARTED TASK ONLY)                 *
*                                                          *
************************************************************
         SPACE
         QEDIT ORIGIN=COMMCIB,BLOCK=(4)
NOTSTC   EQU   *
         SPACE
************************************************************
*                                                          *
*         ALLOW MODIFY COMMANDS TO BE ACCEPTED             *
*                                                          *
************************************************************
         SPACE
         QEDIT ORIGIN=COMMCIB,CIBCTR=1
REPEAT   EQU   *
         SPACE
***********************************************************************
*                                                                     *
*         GET UCB OF DATA SET                                         *
*                                                                     *
***********************************************************************
         SPACE
         L     R1,16               CVTPTR
         L     R1,0(,R1)           TCB WORDS
         L     R1,4(,R1)           CURRENT TCB
         L     R6,12(,R1)          TCBTIOT - POINT TO TIOT
         SPACE
         LA    R15,24(,R6)         TIOENTRY
         USING TIOENTRY,R15
TIOTLOOP CLI   TIOENTRY,X'00'      END OF TIOT?
         BE    BYPASS              YES - BYPASS ENQ
         CLC   TIOEDDNM,DDNAME     DOES DDNAME MATCH?
         BE    TIOTEXIT            YES - RETURN
         SR    R1,R1
         IC    R1,TIOELNGH         GET LENGTH OF ENTRY
         LA    R15,0(R1,R15)       POINT TO NEXT ENTRY
         B     TIOTLOOP
TIOTEXIT L     R1,TIOEFSRT-1       GET UCB ADDRESS
         LA    R5,0(,R1)           CLEAR HI ORDER BYTE
         ST    R5,UCBAD            SAVE UCB ADDRESS
         SPACE
***********************************************************************
*                                                                     *
*         GET DSNAME OF DATA SET FROM JFCB                            *
*                                                                     *
***********************************************************************
         SPACE
         L     R1,TIOEJFCB         GET SHIFTED ADDRESS OF JFCB
         SRL   R1,8                CORRECT FOR SHIFT
         CLC   12(4,R1),=C'JFCB'   JUST TO BE SURE
         BNE   BYPASS              SHOULD NEVER BRANCH
         LA    R1,16(,R1)          POINT PAST PREFIX TO ACTUAL JFCB
         MVC   RNAME,0(R1)         COPY DSNAME FROM JFCB
         SPACE
         MVC   QNAME,=CL8'SPFDSN'
         SPACE
***********************************************************************
*                                                                     *
*         IF DATA SET IS NOT DASD, SERIALIZATION NOT REQUIRED         *
*                                                                     *
***********************************************************************
         SPACE
         CLI   18(R5),X'20'        DASD
         BNE   BYPASS              NO, SERIALIZATION NOT REQUIRED
         SPACE
***********************************************************************
*                                                                     *
*         IF DEVICE NOT SHARED, ISSUE ENQ                             *
*                                                                     *
***********************************************************************
         SPACE
         TM    17(R5),X'20'        SHARED DASD
         BO    SHARED              YES, RESERVE REQUIRED
         SPACE
         ENQ   (QNAME,RNAME,E,44,SYSTEMS),RET=USE,                     +
               MF=(E,ENQ)
         SPACE
         LTR   R15,R15             DID WE GET IT
         BZ    GOTIT               YES, BRANCH
         CLI   3(R15),4            DOES SOMEONE ELSE HAVE IT
         BNE   BYPASS              NO, WE ALREADY HAD IT
         SPACE
         MVC   WTOMSG(WTOMSG1L),WTOMSG1
         MVC   WTOMSG+16(44),RNAME
         BAL   R14,MONITOR         WAITING FOR DSN
         SPACE
         ENQ   (QNAME,RNAME,E,44,SYSTEMS),RET=NONE,                    +
               MF=(E,ENQ)
         SPACE
         B     GOTIT
         SPACE
***********************************************************************
*                                                                     *
*         IF DEVICE SHARED, ISSUE RESERVE                             *
*                                                                     *
***********************************************************************
         SPACE
SHARED   EQU   *
         RESERVE (QNAME,RNAME,E,44,SYSTEMS),UCB=UCBAD,RET=USE,         +
               MF=(E,RESERVE)
         SPACE
         LTR   R15,R15             DID WE GET IT
         BZ    GOTIT               YES, BRANCH
         CLI   3(R15),4            DOES SOMEONE ELSE HAVE IT
         BNE   BYPASS              NO, WE ALREADY HAD IT
         SPACE
         MVC   WTOMSG(WTOMSG1L),WTOMSG1
         MVC   WTOMSG+16(44),RNAME
         BAL   R14,MONITOR         WAITING FOR DSN
         SPACE
         RESERVE (QNAME,RNAME,E,44,SYSTEMS),UCB=UCBAD,RET=NONE,        +
               MF=(E,RESERVE)
         SPACE
***********************************************************************
*                                                                     *
*         WRITE HOLDING MESSAGE ON CONSOLE                            *
*                                                                     *
***********************************************************************
         SPACE
GOTIT    OI    STATUS,1            INDICATE DEQ REQUIRED
         MVC   WTOMSG(WTOMSG2L),WTOMSG2
         MVC   WTOMSG+12(44),RNAME
         BAL   R14,MONITOR         HOLDING DSN
BYPASS   EQU   *
         SPACE
************************************************************
*                                                          *
*         WAIT FOR A MODIFY                                *
*                                                          *
************************************************************
         SPACE
WAITER   L     R7,COMMECB          POINT TO ECB
         WAIT  ECB=(R7)
         L     R4,COMMCIB          GET ADDRESS OF CIB
         SPACE
************************************************************
*                                                          *
*        MODIFY                                            *
*                                                          *
************************************************************
         SPACE
         CLI   CIBVERB,CIBMODFY    MODIFY?
         BNE   TRYSTOP             NO - BRANCH
*
*              MODIFY
*
         LA    R5,CIBDATA
         LH    R6,CIBDATLN         GET LENGTH OF CIBDATA
         LTR   R6,R6               IS LENGTH ZERO
         BZ    IGNORE              NO - BRANCH (IMPOSSIBLE)
         CH    R6,=H'3'
         BL    IGNORE
         CLC   0(3,R5),=C'DEQ'
         BE    YESDEQ
         CLC   0(3,R5),=C'ENQ'
         BNE   IGNORE
         TM    STATUS,1
         BO    IGNORE
         QEDIT ORIGIN=COMMCIB,BLOCK=(4)
         B     REPEAT
IGNORE   EQU   *
         MVC   WTOMSG(WTOMSG4L),WTOMSG4
         BAL   R14,MONITOR         WAITING FOR DSN
         SPACE
************************************************************
*                                                          *
*         FREE THE CIB FROM MODIFY                         *
*                                                          *
************************************************************
         SPACE
MODFREE  EQU   *
         QEDIT ORIGIN=COMMCIB,BLOCK=(4)
         B     WAITER
         SPACE
************************************************************
*                                                          *
*        STOP                                              *
*                                                          *
************************************************************
         SPACE
TRYSTOP  CLI   CIBVERB,CIBSTOP
         BNE   ABEND
         SPACE
         QEDIT ORIGIN=COMMCIB,BLOCK=(4)
         SPACE
         B     EXIT
         SPACE
ABEND    DC    H'0'
         SPACE
***********************************************************************
*                                                                     *
*         RELEASE THE RESOURCE VIA DEQ                                *
*                                                                     *
***********************************************************************
         SPACE
YESDEQ   EQU   *
         TM    STATUS,1            DID WE ENQ/RESERVE
         BZ    IGNORE              NO, IGNORE DEQ
         DEQ   (QNAME,RNAME,44,SYSTEMS),MF=(E,DEQ)
         MVI   STATUS,0
         MVC   WTOMSG(WTOMSG3L),WTOMSG3
         MVC   WTOMSG+13(44),RNAME
         BAL   R14,MONITOR
         B     MODFREE
         SPACE
***********************************************************************
*                                                                     *
*         SUBROUTINE FOR WTO MONITOR                                  *
*                                                                     *
***********************************************************************
         SPACE
MONITOR  LR    R8,R14              SAVE RETURN ADDRESS
         WTO   MF=(E,WTOMSG)       WRITE MONITOR MESSAGE
         LR    R14,R8              RESTORE R14
         BR    R14                 RETURN
         SPACE
***********************************************************************
*                                                                     *
*         TERMINATE NORMALLY                                          *
*                                                                     *
***********************************************************************
         SPACE
EXIT     SR    R15,R15
         LR    R1,R13
         L     R13,4(,R13)
         L     R0,@SIZE
*        LR    R2,R15              SAVE RETURN CODE
*        FREEMAIN R,A=(1),LV=(0)
*        LR    R15,R2              RESTORE RETURN CODE
         LM    0,12,20(R13)
         L     14,12(,R13)
         BR    R14
         SPACE
***********************************************************************
*                                                                     *
*         CONSTANTS                                                   *
*                                                                     *
***********************************************************************
         SPACE
         LTORG
DDNAME   DC    CL8'SPFHOLD'
WTOMSG1  WTO   'WAITING FOR 1234567890123456789012345678901234567890123+
               4',ROUTCDE=(2,11),MF=L
WTOMSG1L EQU   *-WTOMSG1
         SPACE
WTOMSG2  WTO   'HOLDING 12345678901234567890123456789012345678901234', +
               ROUTCDE=(2,11),MF=L
WTOMSG2L EQU   *-WTOMSG2
         SPACE
WTOMSG3  WTO   'RELEASED 12345678901234567890123456789012345678901234',+
               ROUTCDE=(2,11),MF=L
WTOMSG3L EQU   *-WTOMSG3
         SPACE
WTOMSG4  WTO   'IGNORED',ROUTCDE=(2,11),MF=L
WTOMSG4L EQU   *-WTOMSG4
         SPACE
ENQZ     ENQ   (Q,R,E,44,SYSTEMS),MF=L
RESZ     RESERVE (Q,R,E,44,SYSTEMS),UCB=U,MF=L
DEQZ     DEQ   (Q,R,44,SYSTEMS),MF=L
Q        EQU   0                   DUMMY OPERAND
R        EQU   0                   DUMMY OPERAND
U        EQU   0                   DUMMY OPERAND
EXTLIST  EXTRACT ,FIELDS=COMM,MF=L
EXTLISTL EQU   *-EXTLIST
         DC    0D'0'
         SPACE
***********************************************************************
*                                                                     *
*         WORK SPACE                                                  *
*                                                                     *
***********************************************************************
         SPACE
*@DATA   DSECT
@DATA    DS    0D
SAVE     DS    18F
QNAME    DS    CL8
RNAME    DS    CL44
UCBAD    DS    F
ENQ      DS    3F
RESERVE  DS    4F
DEQ      DS    4F
STATUS   DS    C
WTOMSG   DS    0D,CL80
EXTCOMM  DS    F
EXTWORK  DS    0F,XL(EXTLISTL)
HOLDCIB  DS    XL24                HOLD CIB FOR ABEND DUMP
         DS    0D
         DC    0D'0'
@DATAL   EQU   *-@DATA
         SPACE
***********************************************************************
*                                                                     *
*         DSECTS                                                      *
*                                                                     *
***********************************************************************
         SPACE
DUMMY    DSECT
         USING *,R10
         SPACE
         ENQ   (QNAME,RNAME,E,44,SYSTEMS),RET=USE
         SPACE
         ENQ   (QNAME,RNAME,E,44,SYSTEMS)
         SPACE
         RESERVE (QNAME,RNAME,E,44,SYSTEMS),UCB=UCBAD,RET=USE
         SPACE
         RESERVE (QNAME,RNAME,E,44,SYSTEMS),UCB=UCBAD
         SPACE
         DEQ   (QNAME,RNAME,44,SYSTEMS)
         SPACE
ENQZU    ENQ   (Q,R,E,44,SYSTEMS),RET=USE,MF=L
RESZU    RESERVE (Q,R,E,44,SYSTEMS),UCB=U,RET=USE,MF=L
         SPACE
TIOT     DSECT
         DS    CL24                JOBNAME, ETC
TIOENTRY DS    0C
TIOELNGH DS    AL1                 LENGTH OF THIS ENTRY
         DS    XL3
TIOEDDNM DS    CL8                 DD NAME
TIOEJFCB DS    CL3                 TTR OF JFCB
         DS    XL2
TIOEFSRT DS    AL3                 ADDRESS OF UCB
         SPACE
COMMAD   DSECT
COMMECB  DS    A                   ADDRESS OF COMMAND ECB
COMMCIB  DS    A                   ADDRESS OF COMMAND INPUT BUFFER
         SPACE
CIB      DSECT
*        IEZCIB  (THE FOLLOWING IS IDENTICAL TO THE IEZCIB MACRO)
*
*
* /*  * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *  */
* /*                                                                 */
* /*     COMMAND INPUT BUFFER MAPPING MACRO                          */
* /*                                                                 */
* /* OS/VS2 RELEASE 2, OS/VS1 RELEASE 3, 09/21/72, LEVEL=1           */
* /*                                                                 */
* /* METHOD OF ACCESS                                                */
* /*     BAL  - A DSECT CARD SHOULD PRECEDE MACRO CALL.  USING ON    */
* /*            CIBNEXT GIVES ADDRESSABILITY FOR ALL SYMBOLS.        */
* /*     PL/S - DCL CIBPTR PTR                                       */
* /*  * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *  */
*
         DS    0D -     CIBPTR
*
CIBNEXT  DS    A -      ADDRESS OF NEXT CIB IN QUEUE (ZERO FOR LAST)
CIBVERB  DS    C -      COMMAND VERB CODE
CIBSTART EQU   X'04' -  COMMAND CODE FOR START
CIBMODFY EQU   X'44' -  COMMAND CODE FOR MODIFY
CIBSTOP  EQU   X'40' -  COMMAND CODE FOR STOP
CIBMOUNT EQU   X'0C' -  COMMAND CODE FOR MOUNT
CIBLEN   DS    FL1 -    LENGTH IN DOUBLEWORDS OF CIB INCLUDING CIBDATA
         DS    XL4 -    RESERVED FOR CSCB COMPATIBILITY
CIBASID  DS    0H -     ADDRESS SPACE ID (OS/VS2)                MDC001
CIBTJID  DS    CL2 -    TSO TERMINAL JOB IDENTIFIER (OS/VS1)     MDC001
CIBCONID DS    C -      IDENTIFIER OF CONSOLE ISSUING COMMAND
         DS    X -      RESERVED
CIBDATLN DS    H -      LENGTH IN BYTES OF DATA IN CIBDATA
CIBDATA  DS    CL8 -    DATA FROM COMMAND OPERAND
*        (LENGTH OF CIBDATA IS A MULTIPLE OF EIGHT BYTES
*        DEPENDING ON THE VALUE CONTAINED IN CIBLEN)
*              START -  FOURTH POSITIONAL PARAMETER (PARMVALUE)
*              MODIFY - RESIDUAL OPERAND IMAGE FOLLOWING COMMA
*                       TERMINATING FIRST POSITIONAL PARAMETER
*              STOP -   NONE (CIB GENERATED ONLY TO GIVE CONSOLE ID)
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
         SPACE
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         END
