         TITLE '   D D    '
***********************************************************************
*                                                                     *
*        'DD' TSO COMMAND                                             *
*                                                                     *
***********************************************************************
         SPACE
*  WRITTEN BY. BILL GODFREY, PRC (PLANNING RESEARCH CORPORATION).
*  INSTALLATION. PRC, MCLEAN VA.
*  DATE WRITTEN. MAY 14 1980.
*  DATE UPDATED. MAY 26 1982.
*  ATTRIBUTES. RE-ENTRANT.
*  EXTERNAL REFERENCES. 'S99DAIR' SUBPROGRAM.
*   SOURCE FOR S99DAIR SHOULD FOLLOW THE 'END' STATEMENT OF
*   THIS SOURCE, FOR BATCH ASSEMBLY.
*  DESCRIPTION.
*   THIS IS A SHORTHAND VERSION OF THE ALLOC COMMAND.
*
*   FOR EXAMPLE, INSTEAD OF TYPING
*      ALLOC FI(SYSPROC) DA(CLIST) SHR
*   THE USER CAN TYPE
*      DD SYSPROC CLIST
*
*   IN ADDITION, IF THE FILENAME IS ALREADY ALLOCATED
*   THIS COMMAND WILL FREE IT AND RE-ALLOCATE IT.
*
*   THIS COMMAND HAS MANY OF THE CAPABILITIES OF THE ALLOC
*   COMMAND, AND A FEW THAT THE VANILLA ALLOC COMMAND DOESNT,
*   SUCH AS COPIES, FORM, AND FCB FOR SYSOUT, AND
*   RECFM, LRECL, BLKSIZE.
*
*   THERE ARE 3 RESERVED DSNAMES (SYSOUT, DUMMY, AND $)
*   AND ONE RESERVED DSNAME LEVEL ($.) WHICH THIS COMMAND
*   RECOGNIZES FOR SPECIAL USES.  IF YOU WANT TO ALLOCATE
*   A DATA SET THAT HAS A NAME LIKE ANY OF THESE, YOU
*   CANNOT DO IT WITH THIS COMMAND, UNLESS (1) THE DSNAME
*   IS OF THE FORM PREFIX.SYSOUT, PREFIX.DUMMY, OR PREFIX.$
*   AND YOU SPECIFY THE FULLY QUALIFIED NAME IN QUOTES,
*   OR (2) YOU SPECIFY THE 'DATASET' KEYWORD (OR 'DA')
*   WHICH FORCES THE COMMAND TO TREAT THE RESERVED DSNAMES
*   AS REGULAR DSNAMES.  EXAMPLE - DD SYSUT1 DUMMY DA
*
*   IF THE DSNAME IS 'SYSOUT' THEN A SYSOUT FILE
*   WILL BE ALLOCATED, NOT A DATA SET NAMED SYSOUT.
*
*   IF THE DSNAME IS 'DUMMY' THEN A DUMMY FILE
*   WILL BE ALLOCATED, NOT A DATA SET NAMED DUMMY.
*
*   YOU MAY NOT ABBREVIATE THE WORD 'SYSOUT' OR 'DUMMY'
*   IF YOU DO, YOU WILL ALLOCATE A DATA SET WITH THE
*   SPECIFIED NAME INSTEAD OF A SYSOUT OR DUMMY FILE.
*
*   IF THE DSNAME IS '$' THEN A TEMPORARY DATA SET
*   WILL BE ALLOCATED, NOT A DATA SET NAMED $.
*
*   SYNTAX -
*      DD  FILENAME  DSNAME  SHR/OLD/MOD/NEW  USING(ATTR)
*                            UNIT(UNIT)  VOLUME(VOLUME)
*                            SPACE(PRIM,SEC)  DIR(NUMBER)
*                            TRACKS/CYLINDERS/BLOCK(LENGTH)
*                            DATASET  RLSE  FORM(ID)  HOLD
*                            DEST(NAME)  COPIES(N)  FCB(ID)
*                            RECFM(X)  LRECL(N)  BLKSIZE(N)
*                            LABEL(TYPE)  POS(N)  EXPDT(N)
*                            CHARS(NAME) BURST/NOBURST DSORG(XX)
*
*   DEFAULTS -
*      SHR (UNLESS SPACE OR DIR OR TRK/CYL/BLK)
*      NEW (IF SPACE OR DIR OR TRK/CYL/BLK SPECIFIED)
*      TRACKS (IF SPACE IS SPECIFIED)
*
*   TEMPORARY DATA SETS -
*      IF THE DSNAME IS '$' OR IF THE FIRST LEVEL OF THE
*      DSNAME IS '$.' THEN A TEMPORARY DATA SET
*      WILL BE ALLOCATED.
*
*      IF THE DSNAME IS '$' (QUOTED OR NOT)
*      THEN THE DSNAME WILL BE IGNORED AND THE SYSTEM
*      WILL GENERATE A TEMPORARY DSNAME.
*
*      IF THE FIRST LEVEL OF THE DSNAME IS '$.'
*      (QUOTED OR NOT) THEN THE NEXT QUALIFIER IN THE DSNAME
*      WILL BE PREFIXED WITH AN AMPERSAND AND THE SYSTEM
*      WILL GENERATE A TEMPORARY DSNAME THAT INCLUDES THE
*      SPECIFIED QUALIFIER.  FOR INSTANCE, THE DSNAME
*      $.SYSUT1 WILL BE CHANGED TO &SYSUT1.
*
*      TEMPORARY DATA SETS ARE ALLOCATED
*      AS DISP=(NEW,DELETE) INSTEAD OF (NEW,CATLG)
*      OR DISP=(OLD,DELETE) INSTEAD OF (OLD,CATLG).
*
*   S99DAIR
*      S99DAIR IS A MODIFIED VERSION OF IKJDAIR WHICH ACCEPTS
*      SOME NEW FIELDS IN DA08, DA1C, DA30 PARAMETER BLOCKS,
*      AND INTERPRETS SOME EXISTING FIELDS DIFFERENTLY.
*      THE DA30OCLS FIELD IS IGNORED BY IKJDAIR, BUT S99DAIR
*      WILL ALLOCATE THE SPECIFIED CLASS.  IF THE DA08PQTY
*      FIELD (PRIMARY SPACE) IS ZERO (WITH DISP NEW OR MOD)
*      IKJDAIR WILL ALLOCATE DEFAULT SPACE, BUT S99DAIR
*      WILL DO THAT ONLY IF SPACE TYPE (TRK, CYL, BLK) IS
*      NOT SPECIFIED. OTHERWISE IT WILL ALLOCATE ZERO SPACE.
*
*   LOG OF CHANGES -
*   04JUN80 - ADDED KEYWORDS OLD, MOD, UNIT, VOLUME, USING.
*   05FEB81 - ADDED KEYWORDS NEW SPACE TRACK/CYL/BLOCK DIR.
*             CONCATENATION SUPPORT ADDED.
*             SUPPORT FOR TEMPORARY DATA SETS ADDED.
*   02MAR81 - SUPPORT FOR TERMINAL, SYSOUT, AND DUMMY.
*   06MAR81 - 'TEMP' KEYWORD NULLIFIED.  TEMPORARY
*             DATA SETS ARE NOW INDICATED BY DSNAME ALONE.
*             'FORM' 'HOLD' 'DEST' 'COPIES' AND 'FCB' ADDED.
*             ALLOW DISP=MOD TO CREATE A NEW DATA SET.
*             CALL 'S99DAIR' INSTEAD OF IKJDAIR. DROP SYSO99.
*   10MAR81 - ALLOW HYPHEN IN UNIT NAME. 'RECFM', 'LRECL'
*             'BLKSIZE' ADDED FOR DSN, SYSOUT, AND TERMINAL.
*             'POS', 'LABEL', AND 'EXPDT' ADDED.
*             (EXPDT MAINLY FOR TAPE MANAGEMENT SYSTEM).
*   08APR81 - ADD A BIT TO INDICATE THAT EXISTING ALLOCATIONS
*             MUST NOT BE USED TO SATISFY THE REQUEST.
*             SET THE BIT ON WHEN ALLOCATING FOR CONCATENATE.
*             THIS FIXES A BUG IN WHICH CONCATENATIONS
*             USED EXISTING ALLOCATIONS, MAKING THE EXISTING
*             DDNAME DISAPPEAR FROM THE TIOT.
*   16JUL81 - ALLOW SYSOUT CLASS TO BE 2 CHARACTERS IF THE
*             FIRST IS A POUND SIGN AND IGNORE THE POUND SIGN.
*             NUMERIC SYSOUT CLASSES CANNOT BE SPECIFIED IN THE
*             SYSOUT(X) OPERAND BECAUSE THAT OPERAND IS DEFINED TO
*             PARSE AS A DSNAME(MEMBER) AND A MEMBER CANNOT BEGIN
*             WITH A NUMERIC.
*             TO SPECIFY A NUMERIC SYSOUT CLASS, TYPE IN
*             SYSOUT(#0) THRU SYSOUT(#9).
*   08DEC81 - ALLOW SIMPLE NUMERIC SYSOUT CLASS, WITHOUT POUND SIGN,
*             UNLESS USER IS PROMPTED BY PARSE FOR THE OPERAND.
*   08DEC81 - ADD 'CHARS' KEYWORD FOR 3800 PRINTER.THIS KEYWORD
*             WORKS ONLY IF 3800 ENHANCEMENTS ARE INSTALLED,
*             ALLOWING SETPRT TO SYSOUT FILES.
*             IF 'CHARS' IS SPECIFIED, THIS COMMAND MUST
*             OPEN THE SYSOUT FILE TO ISSUE THE SETPRT MACRO.
*             THIS WILL RESULT IN AN 013-34 ABEND IF RECFM AND
*             LRECL ARE NOT SPECIFIED IN THE SAME COMMAND.
*   14DEC81 - ADD 'BURST' AND 'NOBURST' KEYWORDS FOR 3800.
*             THE SETPRT MACRO APPARENTLY ALWAYS SETS BURST OPTION
*             TO YES OR NO - IT WONT JUST LEAVE IT AS IS.
*             SO WHEN WE ISSUE SETPRT FOR 'CHARS' WE GET BURST=N
*             EVEN THOUGH WE DIDNT SPECIFY THE BURST=N OPERAND.
*             SO WE ADDED THESE KEYWORDS.
*             INSTALLATIONS RUNNING WITH DEFAULT BURST=YES WILL
*             WANT TO CHANGE THE INSTRUCTION AT 'BURSTDEF'.
*   14MAY82 - ADD DSORG KEYWORD. NOTE - S99DAIR MODIFIED FOR DSORG.
*   26MAY82 - PROBLEM IN S99DAIR FIXED. TEMPORARY DSNAMES LIKE $.ABC
*             WERE BEING TREATED LIKE $ (NO DSNAME) INSTEAD OF &ABC.
*             MISC CHANGES IN CONFLICTING KEYWORDS FOR $.
         SPACE
         GBLB  &MVS
&MVS     SETB  1                   1 - MVS   0 - SVS,MVT
         SPACE
DD       START
         USING *,R10,R11
         B     @PROLOG-*(,15)
         DC    AL1(11),CL11'DD '
         DC    CL16' &SYSDATE &SYSTIME '
@SIZE    DC    0F'0',AL1(1),AL3(@DATAL)
@PROLOG  STM   14,12,12(13)
         LR    R10,R15             BASE
         LA    R15,1
         LA    R11,4095(R15,R10)   BASE
         LR    R2,R1
         USING CPPL,R2
         L     R0,@SIZE
         GETMAIN R,LV=(0)
         LR    R9,R1
         USING @DATA,R9
         ST    13,4(,1)            CHAIN SAVEAREA
         ST    1,8(,13)            CHAIN SAVEAREA
         LR    13,1
         SPACE 1
         STM   R10,R11,BASES
         MVI   STATUS,0
         XC    LINKAREA(8),LINKAREA
         SLR   R15,R15
         STH   R15,RC              SET RC = 0
         SPACE
************************************************************
*                                                          *
*        SET UP IOPL FOR PUTLINE                           *
*                                                          *
************************************************************
         SPACE
         LA    R15,MYIOPL
         USING IOPL,R15
         MVC   IOPLUPT(4),CPPLUPT
         MVC   IOPLECT(4),CPPLECT
         LA    R0,MYECB
         ST    R0,IOPLECB
         XC    MYECB,MYECB
         LA    R0,MYPTPB
         ST    R0,IOPLIOPB
         DROP  R15                 IOPL
         SPACE
************************************************************
*                                                          *
*        SCAN THE COMMAND BUFFER FOR SYSOUT(1) THRU (9)    *
*        AND CHANGE IT TO SYSOUT(A) THRU (I) AND SET A     *
*        SWITCH SO WE CAN CHANGE IT BACK LATER.            *
*        PARSE THINKS THAT CLASS IS A MEMBER NAME          *
*        AND A MEMBER NAME CANNOT BE A NUMBER.             *
*                                                          *
************************************************************
         SPACE
         MVI   SETCLASS,X'40'      INITIALIZE SYSOUT CLASS SWITCH
         L     R1,CPPLCBUF
         LH    R0,0(,R1)           GET LENGTH OF CBUF
         SH    R0,=H'4'            MINUS LENGTH OF PREFIX HALFWORDS
         SH    R0,=H'9'            MINUS LENGTH OF ' SYSOUT(X'
         BNP   CBUFX               BUFFER NOT LONG ENOUGH
         LA    R1,4(,R1)
CBUFLOOP CLC   1(7,R1),=C'SYSOUT('
         BE    CBUFGOT
         CLC   1(7,R1),=X'A2A8A296A4A34D' LOWER CASE 'SYSOUT('
         BE    CBUFGOT
CBUFINCR LA    R1,1(,R1)
         BCT   R0,CBUFLOOP
         B     CBUFX
CBUFGOT  CLI   0(R1),C' '          PRECEDED BY BLANK
         BE    CBUFGOT2
         CLI   0(R1),C','          PRECEDED BY COMMA
         BE    CBUFGOT2
         CLI   0(R1),X'05'         PRECEDED BY TAB
         BE    CBUFGOT2
         B     CBUFX
CBUFGOT2 CLI   9(R1),C')'          CLOSE PAREN
         BNE   CBUFX
         CLI   8(R1),C'0'          NUMERIC CLASS
         BL    CBUFX               NO, BRANCH
         NI    8(R1),X'CF'         CHANGE 1-9 TO A-I
         OI    SETCLASS,X'F0'      AND SET SWITCH FOR LATER
         CLI   8(R1),X'C0'         SYSOUT(0)
         BNE   *+8                  BECOMES
         MVI   8(R1),X'7C'           SYSOUT(@)
CBUFX    EQU   *
         SPACE
************************************************************
*                                                          *
*        SET UP PPL FOR PARSE                              *
*                                                          *
************************************************************
         SPACE
         LA    R15,MYPPL
         USING PPL,R15
         MVC   PPLUPT(4),CPPLUPT
         MVC   PPLECT(4),CPPLECT
         LA    R0,MYECB
         ST    R0,PPLECB
         XC    MYECB,MYECB
         L     R0,=A(DDPCL)
         ST    R0,PPLPCL
         LA    R0,MYANS
         ST    R0,PPLANS
         XC    MYANS(4),MYANS
         MVC   PPLCBUF(4),CPPLCBUF
         ST    R9,PPLUWA           STORE R9 FOR VALIDITY CHECK RTN
         DROP  R15                 PPL
         SPACE 1
************************************************************
*                                                          *
*        CALL THE PARSE SERVICE ROUTINE                    *
*                                                          *
************************************************************
         SPACE 1
         LR    R1,R15              POINT TO PPL
         AIF   (NOT &MVS).SKIP2
         L     R15,16              CVTPTR
         TM    524(R15),X'80'      IF HI ORDER BIT NOT ON
         BNO   PARSELNK               THEN DO LINK, NOT CALL
         L     R15,524(,R15)       CVTPARS
         BALR  R14,R15             CALL IKJPARS
         B     PARSEEXT            SKIP AROUND LINK
PARSELNK EQU   *
.SKIP2   ANOP
         LINK  EP=IKJPARS,SF=(E,LINKAREA)
PARSEEXT EQU   *
         SPACE 1
         LTR   R15,R15
         BZ    PARSEOK
         LA    R1,MSG01
         LA    R0,L'MSG01
         BAL   R14,PUTMSG
         LA    R15,12
         B     EXIT
PARSEOK  EQU   *
         SPACE
         L     R3,MYANS
         USING IKJPARMD,R3
         SPACE
************************************************************
*                                                          *
*        GET THE FILENAME (DDNAME)                         *
*                                                          *
************************************************************
         SPACE
         MVC   DDSAVE,=CL8' '
         LA    R6,DDN
         L     R15,0(,R6)
         LH    R1,4(,R6)
         BCTR  R1,0
         B     *+10
         MVC   DDSAVE(0),0(R15)
         EX    R1,*-6
         SPACE
************************************************************
*                                                          *
*         FIND CONFLICTING KEYWORDS                        *
*                                                          *
************************************************************
         SPACE
         CLI   SETCLASS,X'F0'      WAS CBUF MODIFIED
         BNE   SETOK               NO, BRANCH
         CLI   DATAKW+1,1          WAS 'DATASET' SPECIFIED
         BNE   SETOK               NO, BRANCH
         LA    R1,=C'INVALID MEMBER NAME'  SYSOUT(0) THRU (9)
         LA    R0,19
         B     SYNTAX
SETOK    EQU   *
*
*              IF 'OLD/SHR/NEW/MOD' NOT SPECIFIED
*                  AND NEITHER 'SPACE' NOR 'DIR'
*                  NOR 'TRK/CYL/BLOCK' IS SPECIFIED
*                  THEN ASSUME DISP 'SHR'.
*
*              IF 'OLD/SHR/NEW/MOD' NOT SPECIFIED
*                  AND EITHER 'SPACE' OR 'DIR'
*                  OR 'TRK/CYL/BLOCK' IS SPECIFIED
*                  THEN ASSUME DISP 'NEW'.
*
         CLI   DISPKW+1,4          NEW SPECIFIED
         BE    CNEWCCAT            YES, BRANCH
CNOTNEW  CLI   DISPKW+1,0          IS DISP SPECIFIED
         BNE   CSOM                YES, MUST BE SHR/OLD/MOD
         CLI   SPACEKW+1,0         IS SPACE SPECIFIED
         BNE   CASSMNEW            YES, ASSUME NEW
         CLI   DIRKW+1,0           IS DIR SPECIFIED
         BNE   CASSMNEW            YES, ASSUME NEW
         CLI   TYPKW+1,0           IS TRK/CYL/BLOCK SPECIFIED
         BNE   CASSMNEW            YES, ASSUME NEW
CASSMSHR MVI   DISPKW+1,1          NO, ASSUME SHR
         B     CDISPOK             END DISP CHECKING
CASSMNEW MVI   DISPKW+1,4          YES, ASSUME NEW
         B     CNEWCCAT            YES, ASSUME NEW
CSOM     EQU   *
         CLI   DISPKW+1,3          MOD SPECIFIED
         BE    CNEWCCAT            YES, GO CHECK FOR CONCAT
         CLI   SPACEKW+1,0         SPACE WITH OLD/SHR
         BE    COSHDIR             NO, BRANCH
         LA    R1,=C'SPACE INVALID WITH SHR/OLD'
         LA    R0,26
         B     SYNTAX
COSHDIR  CLI   DIRKW+1,0           DIR WITH OLD/SHR
         BE    COSMTRK             NO, BRANCH
         LA    R1,=C'DIR INVALID WITH SHR/OLD'
         LA    R0,24
         B     SYNTAX
COSMTRK  CLI   TYPKW+1,0           TRK/CYL/BLK WITH OLD/SHR
         BE    CDISPOK
         LA    R1,=C'TRK/CYL/BLK INVALID WITH SHR/OLD'
         LA    R0,32
         B     SYNTAX
CNEWCCAT EQU   *
         CLI   DSN+24,X'FF'        IS THERE ONLY ONE DSNAME
         BE    CNEWSPC             YES, BRANCH
         LA    R1,=C'NEW/MOD INVALID WITH CONCATENATION REQUEST'
         LA    R0,42
         B     SYNTAX
CNEWSPC  CLI   TYPKW+1,0           IS SPACE TYPE SPECIFIED
         BE    CDISPOK             NO, BRANCH
         CLI   SPACEKW+1,0         SPACE SPECIFIED
         BNE   CDISPOK             YES, BRANCH
         LA    R1,=C'MISSING SPACE KEYWORD'
         LA    R0,21
SYNTAX   BAL   R14,PUTMSG
         LA    R15,12
         B     STOP
CDISPOK  EQU   *
         SPACE
         LA    R6,DSN
         CLI   24(R6),X'FF'        IS THIS TO BE A CONCATENATION
         BE    *+8                 NO
         OI    STATUS,STATCON      YES
         LR    R0,R6               SAVE FIRST OF LIST OF NAMES
         B     *+8
SYNDSN01 L     R6,24(,R6)
         TM    6(R6),X'80'         IS DSN PRESENT
         BO    SYNDSN03            YES, BRANCH
SYNDSN02 LA    R1,MSG05            NO - JUST MEMBER NAME
         LA    R0,L'MSG05
         B     SYNTAX
SYNDSN03 L     R1,0(R6)
         CLI   0(R1),C'*'          IS THERE AN ASTERISK
         BNE   SYNDSN05            NO, BRANCH
         CLI   5(R6),1             IS LENGTH = 1
         BNE   SYNDSN99            NO, BRANCH
         CR    R6,R0               IS THIS IN A CONCATENATION
         BNE   SYNDSN04            YES, BRANCH
         CLI   24(R6),X'FF'        IS THIS FIRST IN A CONCATENATION
         BE    SYNDSN99            NO, BRANCH
SYNDSN04 LA    R1,=C'ASTERISK (*) INVALID WITH CONCATENATION'
         LA    R0,39
         B     SYNTAX
SYNDSN05 CLI   DATAKW+1,1          DATASET SPECIFIED
         BE    SYNDSN99            YES, BYPASS SYSOUT/DUMMY/$
         CLI   5(R6),6             IS LENGTH = 6
         BNE   SYNDSN08            NO, BRANCH
         CLC   0(6,R1),=C'SYSOUT'
         BNE   SYNDSN08                                         26MAY82
         TM    14(R6),X'80'        IS A SYSOUT CLASS SPECIFIED
         BZ    SYNDSN06            NO, BRANCH
         CLI   13(R6),1            IS IT ONLY ONE CHARACTER
         BE    SYNDSN06            YES, BRANCH
         CLI   13(R6),2            IS IT 2 CHARACTERS
         BNE   SYNDSNX5            NO, BRANCH
         L     R1,8(,R6)           POINT TO CLASS
         CLI   0(R1),C'#'          IS IT SYSOUT(#X)
         BNE   SYNDSNX5            NO, BRANCH
         LA    R1,1(,R1)           YES, POINT PAST # TO X
         ST    R1,8(,R6)           YES, CHANGE IT TO SYSOUT(X)
         MVI   13(R6),1            CHANGE LENGTH FROM 2 TO 1
         L     R1,0(,R6)           RESTORE R1
         B     SYNDSN06            PROCEED
SYNDSNX5 LA    R1,=C'INVALID SYSOUT CLASS - MORE THAN ONE CHARACTER'
         LA    R0,46
         B     SYNTAX
SYNDSN06 CR    R6,R0               IS THIS IN A CONCATENATION
         BNE   SYNDSN07            YES, BRANCH
         CLI   24(R6),X'FF'        IS THIS FIRST IN A CONCATENATION
         BE    SYNDSN99            NO, BRANCH
SYNDSN07 LA    R1,=C'SYSOUT INVALID WITH CONCATENATION'
         LA    R0,33
         B     SYNTAX
SYNDSN08 CLI   5(R6),5             IS LENGTH = 5
         BNE   SYNDSN10            NO, BRANCH
         CLC   0(5,R1),=C'DUMMY'
         BNE   SYNDSN10                                         26MAY82
         OI    6(R6),X'40'         FORCE QUOTES
         CR    R6,R0               IS THIS IN A CONCATENATION
         BNE   SYNDSN09            NO, BRANCH
         CLI   24(R6),X'FF'        IS THIS FIRST IN A CONCATENATION
         BE    SYNDSN99            NO, BRANCH
SYNDSN09 LA    R1,=C'DUMMY INVALID WITH CONCATENATION'
         LA    R0,32
         B     SYNTAX
SYNDSN10 EQU   *
*        CLI   TEMPKW+1,1          TEMP SPECIFIED
*        BNE   NOTTEMP             NO, BRANCH
         CLI   0(R1),C'$'          DOES NAME BEGIN WITH $
         BNE   SYNDSN99            NO, NOT TEMPORARY
         CLI   5(R6),1             IS LENGTH = 1
         BE    SYNDSN11            YES, BRANCH                  26MAY82
         CLI   1(R1),C'.'          IS IT $.XXX                  26MAY82
         BNE   SYNDSN99            NO, BRANCH
SYNDSN11 CLI   DISPKW+1,2          SHR OR OLD WITH DSN $
         BH    SYNDSN99            NO, BRANCH
         LA    R1,=C'DSNAME $ INVALID WITH SHR OR OLD'
         LA    R0,32
         B     SYNTAX
SYNDSN99 CLI   24(R6),X'FF'        IS THERE ANOTHER DSNAME
         BNE   SYNDSN01            YES, BRANCH
         SPACE
************************************************************
*                                                          *
*         FILL IN DCB PARAMETERS                           *
*                                                          *
************************************************************
         SPACE
         SLR   R0,R0
         STH   R0,DSORGVAL
         STH   R0,RECSIZE
         STH   R0,BLOCKSI
         MVI   RECFORM,0
         CLI   DSOKW+1,0           DSORG SPECIFIED
         BE    SYNDSOX             NO, BRANCH
         LH    R1,DSOSFKW
         SLL   R1,1                MULTIPLY BY 2
         LH    R1,DSORGTAB(R1)
         STH   R1,DSORGVAL
SYNDSOX  EQU   *
         CLI   RECKW+1,0           RECFM SPECIFIED
         BE    SYNRECX             NO, BRANCH
         CLI   RECKWF+1,0          F, V, OR U SPECIFIED
         BNE   SYNRECF             YES, BRANCH
         LA    R1,=C'INVALID RECFM - MISSING F, V, OR U'
         LA    R0,34
         B     SYNTAX
SYNRECF  EQU   *
         LA    R1,RECFORM
         CLI   RECKWF+1,1          F
         BNE   *+8
         OI    0(R1),RECFMF
         CLI   RECKWF+1,2          V
         BNE   *+8
         OI    0(R1),RECFMV
         CLI   RECKWF+1,3          U
         BNE   *+8
         OI    0(R1),RECFMU
         CLI   RECKWB+1,1          B
         BNE   *+8
         OI    0(R1),RECFMB
         CLI   RECKWS+1,1          S
         BNE   *+8
         OI    0(R1),RECFMS
         CLI   RECKWA+1,1          A
         BNE   *+8
         OI    0(R1),RECFMA
         CLI   RECKWA+1,2          M
         BNE   *+8
         OI    0(R1),RECFMM
SYNRECX  EQU   *
         SPACE
         CLI   LREKW+1,1           LRECL
         BNE   NOLRE
         LA    R15,LRE
         L     R14,0(,R15)
         LH    R1,4(,R15)
         BCTR  R1,0
         B     *+10
         PACK  DOUBLE,0(0,R14)
         EX    R1,*-6
         CVB   R1,DOUBLE
         STH   R1,RECSIZE
NOLRE    EQU   *
         SPACE
         CLI   BLKKW+1,1           BLKSIZE
         BNE   NOBLK
         LA    R15,BLK
         L     R14,0(,R15)
         LH    R1,4(,R15)
         BCTR  R1,0
         B     *+10
         PACK  DOUBLE,0(0,R14)
         EX    R1,*-6
         CVB   R1,DOUBLE
         STH   R1,BLOCKSI
NOBLK    EQU   *
         SPACE
************************************************************
*                                                          *
*        PREPARE DAIR PARAMETERS                           *
*                                                          *
************************************************************
         SPACE
         LA    R1,MYDAPL
         USING DAPL,R1
         MVC   DAPLUPT(4),CPPLUPT
         MVC   DAPLECT(4),CPPLECT
         LA    R0,MYECB
         ST    R0,DAPLECB
         MVC   DAPLPSCB(4),CPPLPSCB
         LA    R7,MYDAPB
         ST    R7,DAPLDAPB
         DROP  R1                  DAPL
         SPACE
************************************************************
*                                                          *
*        FREE THE FILENAME (DDNAME)                        *
*                                                          *
************************************************************
         SPACE
         CLI   DDSAVE,C' '         PART OF CONCATENATION
         BE    FREE2               YES, BYPASS FREE
         USING DAPB18,R7
         XC    0(40,R7),0(R7)
         MVI   DA18CD+1,X'18'
         MVC   DA18DDN,DDSAVE
         MVC   DA18MNM(8),=CL8' '
         MVC   DA18SCLS(2),=CL8' '
         OI    DA18CTL,DA18PERM
         LA    R1,MYDAPL
         BAL   R14,CALLDAIR        UNALLOCATE
         DROP  R7                  DAPB18
FREE2    EQU   *
         SPACE
************************************************************
*                                                          *
*         GET AN ATTRIBUTE LIST NAME IF SPECIFIED          *
*                                                          *
************************************************************
         SPACE
         MVC   ATTRIB,=CL8' '
         LA    R15,ALN
         TM    6(R15),X'80'        ATTRIB LIST NAME SPECIFIED?
         BZ    ALNX                NO - BRANCH
         LH    R1,4(,R15)          GET LENGTH OF ATTRIB NAME
         BCTR  R1,0                MINUS 1 FOR EX
         L     R14,0(,R15)         GET ADDRESS OF ATTRIB NAME
         B     *+10
         MVC   ATTRIB(0),0(R14)    MOVE ATTRIB NAME
         EX    R1,*-6
ALNX     EQU   *
         SPACE
************************************************************
*                                                          *
*         ALLOCATE A TERMINAL IF SECOND OPERAND '*'        *
*                                                          *
************************************************************
         SPACE
         LA    R6,DSN
         L     R1,0(R6)            POINT TO DSNAME
         CLI   0(R1),C'*'          ASTERISK
         BNE   NOTTERM             NO, BRANCH
         CLI   5(R6),1             LENGTH = 1
         BNE   NOTTERM             NO, BRANCH
         LA    R7,MYDAPB
         USING DAPB1C,R7
         MVC   DA1CCD(MODEL1CL),MODEL1C
         MVC   DA1CDDN,DDSAVE
         OI    DA1CCTL,DA1CPERM
         MVC   DA1CALN(8),ATTRIB   MOVE ATTRIB NAME
         CLI   ATTRIB,C' '
         BE    *+8
         OI    DA1CCTL,DA1CATRL    SET ATTRIB NAME INDICATOR ON
         SPACE
         CLI   MSGKW+1,1           MSG
         BNE   *+8                 NO
         OI    DE1CCTLX,DE1CMSG    YES
         MVC   DE1CRECF,RECFORM    DCB RECFM
         MVC   DE1CLREC,RECSIZE    DCB LRECL
         MVC   DE1CBLKS,BLOCKSI    DCB BLKSIZE
         SPACE
         LA    R1,MYDAPL
         BAL   R14,CALLDAIR
         LTR   R15,R15
         BNZ   ALLOFAIL
         DROP  R7                  DAPB1C
         B     STOP
         SPACE
************************************************************
*                                                          *
*         ALLOCATE A SYSOUT FILE                           *
*                                                          *
************************************************************
         SPACE
NOTTERM  CLI   DATAKW+1,1          IS 'DATASET' SPECIFIED
         BE    NOTSYSO             YES, BYPASS SYSOUT
         CLI   5(R6),6             IS LENGTH = 6
         BNE   NOTSYSO             NO, BRANCH
         CLC   0(6,R1),=C'SYSOUT'  IS IT SYSOUT
         BNE   NOTSYSO             NO, BRANCH
         SPACE
         MVC   FORMS,=CL4' '       START WITH FORM BLANK
         LA    R15,FORM            POINT TO FORM PDE
         TM    6(R15),X'80'        IS FORM(XXXX) SPECIFIED
         BZ    NOFORM              NO, BRANCH
         L     R14,0(,R15)         YES, POINT TO OPERAND
         LH    R1,4(,R15)          GET LENGTH
         BCTR  R1,0                LENGTH MINUS 1 FOR EX
         B     *+10
         MVC   FORMS(0),0(R14)     (EXECUTED)
         EX    R1,*-6              MOVE FORM
NOFORM   EQU   *
         SPACE
         LA    R7,MYDAPB
         USING DAPB30,R7
         MVC   DA30CD(MODEL30L),MODEL30
         MVC   DA30DDN,DDSAVE
         OI    DA30CTL,DA30PERM
         TM    14(R6),X'80'        SYSOUT(CLASS) SPECIFIED
         BZ    *+14                NO, SKIP NEXT 2
         L     R14,8(,R6)
         MVC   DA30OCLS(1),0(R14)  CLASS (IGNORED UNDER MVS)
         OC    DA30OCLS(1),SETCLASS RESET CLASS IF NECESSARY
         CLI   DA30OCLS,X'FC'      WAS IT 7C, FROM SYSOUT(0)
         BNE   *+8
         MVI   DA30OCLS,C'0'       YES, MAKE IT SYSOUT(0)
         MVC   DA30FORM,FORMS
         MVC   DA30ALN(8),ATTRIB   MOVE ATTRIB NAME
         CLI   ATTRIB,C' '
         BE    *+8
         OI    DA30CTL,DA30ATRL    SET ATTRIB NAME INDICATOR ON
*               THE FOLLOWING OPTIONS ARE NOT PROVIDED BY IKJDAIR
*               BUT ARE PROVIDED BY THE 'S99DAIR' SUBPROGRAM.
         CLI   HOLDKW+1,1          'HOLD' SPECIFIED
         BNE   *+8                 NO
         OI    DE30CTLX,DE30HOLD   YES
         SPACE
         LA    R14,DEST            POINT TO DEST PDE
         TM    6(R14),X'80'        IS DEST(ROUTE) SPECIFIED
         BZ    NO30DEST            NO, BRANCH
         MVC   DE30DEST,=CL8' '    YES, PAD WITH BLANKS
         LH    R1,4(,R14)          GET LENGTH
         L     R14,0(,R14)         YES, POINT TO OPERAND
         BCTR  R1,0                LENGTH MINUS 1 FOR EX
         B     *+10
         MVC   DE30DEST(0),0(R14)  (EXECUTED)
         EX    R1,*-6              MOVE DEST
NO30DEST EQU   *
         SPACE
         LA    R14,FCB             POINT TO FCB PDE
         TM    6(R14),X'80'        IS FCB(NAME) SPECIFIED
         BZ    NO30FCB             NO, BRANCH
         MVC   DE30FCB,=CL4' '     YES, PAD WITH BLANKS
         LH    R1,4(,R14)          GET LENGTH
         L     R14,0(,R14)         YES, POINT TO OPERAND
         BCTR  R1,0                LENGTH MINUS 1 FOR EX
         B     *+10
         MVC   DE30FCB(0),0(R14)   (EXECUTED)
         EX    R1,*-6              MOVE FCB
NO30FCB  EQU   *
         SPACE
         LA    R14,COPI            POINT TO COPIES PDE
         TM    6(R14),X'80'        IS COPIES(NN) SPECIFIED
         BZ    NO30CPYS            NO, BRANCH
         LH    R1,4(,R14)          GET LENGTH
         L     R14,0(,R14)         YES, POINT TO OPERAND
         BCTR  R1,0                LENGTH MINUS 1 FOR EX
         B     *+10
         PACK  DOUBLE,0(0,R14)     (EXECUTED)
         EX    R1,*-6              PACK COPIES
         CVB   R1,DOUBLE
         STC   R1,DE30CPYS
NO30CPYS EQU   *
         CLI   MSGKW+1,1           MSG
         BNE   *+8                 NO
         OI    DE30CTLX,DE30MSG    YES
         MVC   DE30RECF,RECFORM    DCB RECFM
         MVC   DE30LREC,RECSIZE    DCB LRECL
         MVC   DE30BLKS,BLOCKSI    DCB BLKSIZE
         LA    R1,MYDAPL
         BAL   R14,CALLDAIR
         LTR   R15,R15             WAS IT SUCCESSFUL
         BNZ   ALLOFAIL            NO, BRANCH
         SPACE
************************************************************
*                                                          *
*        DO OPEN-SETPRT-CLOSE FOR 'CHARS' AND 'BURST'      *
*                                                          *
************************************************************
         SPACE
         CLI   CHARKW+1,1          CHARS SPECIFIED
         BE    SETPRTGO            YES, GO ISSUE SETPRT
         CLI   BURSTKW+1,0         BURST OR NOBURST SPECIFIED
         BE    STOP                NEITHER, BYPASS SETPRT
SETPRTGO LA    R1,SOUDCBW
         MVC   SOUDCBW(SOUDCBL),SOUDCB
         MVC   DDNAM(8,R1),DA30DDN
         DROP  R7                  DAPB30
         MVC   SETPRTL(48),SETPRTM
         CLI   BURSTKW+1,0         'BURST' OR 'NOBURST'
         BNE   *+8                 BRANCH IF EITHER
BURSTDEF MVI   BURSTKW+1,2         SET DEFAULT (BURST 1, NOBURST 2)
         CLI   BURSTKW+1,1         'BURST'
         BNE   *+8
         OI    SETPRTL+16,X'80'    BURST=Y
         CLI   BURSTKW+1,2         'NOBURST'
         BNE   *+8
         NI    SETPRTL+16,X'7F'    BURST=N
         CLI   CHARKW+1,1
         BNE   CHARSX
         LA    R7,CHARS            ADDRESS OF PARSE PDE FOR CHARS
         LA    R15,SETPRTL+32      WHERE TO PUT CHARS NAMES
         LA    R0,4                MAXIMUM OF 4 NAMES
         B     *+8                 SKIP NEXT INSTRUCTION
CHARLOOP L     R7,8(,R7)           POINT TO NEXT PDE
         L     R14,0(,R7)          GET ADDRESS OF NAME
         MVC   0(4,R15),=CL4' '    PAD WITH BLANKS
         LH    R1,4(,R7)           GET LENGTH OF NAME
         BCTR  R1,0                LENGTH MINUS 1 FOR EX
         B     *+10
         MVC   0(0,R15),0(R14)     (EXECUTED)
         EX    R1,*-6              MOVE CHARS NAME TO SETPRT MF=L
         LA    R15,4(,R15)         POINT TO NEXT NAME SLOT
         CLI   8(R7),X'FF'         END OF LIST
         BE    CHARSX              YES, BRANCH
         BCT   R0,CHARLOOP         NO, BRANCH TO DO OTHERS
*              FOR NOW, IGNORE OTHERS IF MORE THAN 4
CHARSX   EQU   *
         LA    R1,SOUDCBW
         MVC   RECFM(1,R1),RECFORM
         MVC   LRECL(2,R1),RECSIZE
         MVC   RECFM(2,R1),BLOCKSI
         LR    R7,R1
         MVI   OPEN,X'80'
         OPEN  ((R7),OUTPUT),MF=(E,OPEN)
         L     R1,CPPLUPT
         MVC   SAVEUPT,UPTSWS-UPT(R1)     SAVE PROFILE WTPMSG
         NI    UPTSWS-UPT(R1),255-UPTWTP  SUPPRESS IEF288I
         SETPRT (R7),MF=(E,SETPRTL)
         ST    R15,SETPRTRC
         L     R1,CPPLUPT
         MVC   UPTSWS-UPT(1,R1),SAVEUPT   RESTORE PROFILE WTPMSG
         MVI   CLOSE,X'80'
         CLOSE ((R7)),MF=(E,CLOSE)
         L     R15,SETPRTRC
         LTR   R15,R15
         BZ    STOP
         CLI   SETPRTRC+3,X'18'    DEVICE NOT A 3800
         BNE   SETPRTER            BRANCH IF SOME OTHER ERROR
         LA    R1,=C'OPERAND INVALID WITHOUT 3800 ENHANCEMENTS'
         LA    R0,41
         B     SYNTAX
SETPRTER MVC   MSGWK(L'SETPRTE),SETPRTE
         UNPK  MSGWK+20(9),SETPRTRC(5)
         TR    MSGWK+20(8),HEXTAB-240
         MVI   MSGWK+28,C''''
         LA    R1,MSGWK
         LA    R0,L'SETPRTE
         B     SYNTAX
         SPACE
NOTSYSO  EQU   *
         SPACE
************************************************************
*                                                          *
*        GET THE SPACE VALUES                              *
*                                                          *
************************************************************
         SPACE
         SR    R0,R0
         ST    R0,PRIMARY
         ST    R0,SECDARY
         ST    R0,DIRBLKS
         ST    R0,BLOCKSP
         SPACE
         CLI   SPACEKW+1,1
         BNE   NOSPACE
         LA    R6,SPACE
         L     R15,0(,R6)          ADDRESS OF NUMBER
         LH    R1,4(,R6)           LENGTH OF NUMBER
         BCTR  R1,0
         B     *+10
         PACK  DOUBLE,0(0,R15)
         EX    R1,*-6
         CVB   R1,DOUBLE
         ST    R1,PRIMARY
         SPACE
         CLI   8(R6),X'FF'         IS THERE A SECOND VALUE
         BE    NOSEC               NO, BRANCH
         L     R6,8(,R6)           YES, POINT TO ITS PDE
         L     R15,0(,R6)          ADDRESS OF NUMBER
         LH    R1,4(,R6)           LENGTH OF NUMBER
         BCTR  R1,0
         B     *+10
         PACK  DOUBLE,0(0,R15)
         EX    R1,*-6
         CVB   R1,DOUBLE
         ST    R1,SECDARY
NOSEC    EQU   *
NOSPACE  EQU   *
         SPACE
         CLI   TYPKW+1,1           BLOCK(NN)
         BNE   NOBLOCK
         LA    R6,BLOCK
         L     R15,0(,R6)          ADDRESS OF NUMBER
         LH    R1,4(,R6)           LENGTH OF NUMBER
         BCTR  R1,0
         B     *+10
         PACK  DOUBLE,0(0,R15)
         EX    R1,*-6
         CVB   R1,DOUBLE
         ST    R1,BLOCKSP
NOBLOCK  EQU   *
         SPACE
         CLI   DIRKW+1,1
         BNE   NODIR
         LA    R6,DIR
         L     R15,0(,R6)
         LH    R1,4(,R6)
         BCTR  R1,0
         B     *+10
         PACK  DOUBLE,0(0,R15)
         EX    R1,*-6
         CVB   R1,DOUBLE
         ST    R1,DIRBLKS
NODIR    EQU   *
         SPACE
************************************************************
*                                                          *
*        GET THE DATA SET NAME                             *
*                                                          *
************************************************************
         SPACE
         LA    R1,CONCDAPB+12      LOCATION TO STORE FIRST DDNAME
         ST    R1,CONCPTR          SAVE DDNAME POINTER
         LA    R6,DSN
         B     *+8
DSNLOOP  L     R6,24(,R6)
         XC    DSNAME(2),DSNAME
         MVI   DSNAME+2,C' '
         MVC   DSNAME+3(43),DSNAME+2
*        TM    6(R6),X'80'         IS DATASET NAME SPECIFIED?
*        BZ    SYNDSN02            NO, JUST MEMBER NAME
         L     R1,0(,R6)           GET ADDRESS OF NAME
*        CLI   TEMPKW+1,1          TEMP SPECIFIED
*        BNE   NOTTEMP             NO, BRANCH
         CLI   DATAKW+1,1          IS 'DATASET' SPECIFIED
         BE    NOTTEMP             YES, BYPASS $
         CLI   0(R1),C'$'          DOES NAME BEGIN WITH $
         BE    TEMPDSN             YES, CHANGE IT TO TEMPORARY
NOTTEMP  LH    R14,4(,R6)          GET LENGTH
         STH   R14,DSNAME
         BCTR  R14,0
         B     *+10
         MVC   DSNAME+2(0),0(R1)
         EX    R14,*-6
         CLI   DATAKW+1,1          IS 'DATASET' SPECIFIED
         BE    GOTDSN              YES, BYPASS DUMMY
         CLC   DSNAME+2(6),=C'DUMMY '
         BNE   GOTDSN
         MVC   DSNAME(10),NULLFILE
         OI    6(R6),X'40'        DUMMY SAME AS QUOTED 'NULLFILE'
         B     GOTDSN
         SPACE
TEMPDSN  LH    R0,4(,R6)          GET LENGTH
         MVI   DSNAME+2,AMP
         BCTR  R0,0               REDUCE LENGTH BY 1
         LTR   R0,R0
         BZ    TEMPQUAL           LEAVE DSN NULL (AND AMP IN DSNAME+2)
         CLI   1(R1),C'.'
         BNE   NOTTEMP
         LA    R1,2(,R1)          POINT PAST PERIOD
         BCTR  R0,0               REDUCE LENGTH BY 1
         LTR   R0,R0              IS LENGTH ZERO
         BZ    TEMPQUAL           NO, BRANCH (PARSE WONT ALLOW JUST $.)
TEMPREST CH    R0,=H'8'           IS LENGTH GREATER THAN 8
         BNH   *+8                NO, SKIP NEXT
         LH    R0,=H'8'           TRUNCATE TO MAX 8
         LA    R14,1              START WITH LENGTH 1 FOR AMPERSAND
         LA    R15,DSNAME+3       ADDRESS TO MOVE TO
TEMPLOOP MVC   0(1,R15),0(R1)     MOVE 1 CHARACTER
         LA    R1,1(,R1)
         LA    R15,1(,R15)
         LA    R14,1(,R14)        INCREMENT LENGTH
         CLI   0(R1),C'.'
         BE    *+8
         BCT   R0,TEMPLOOP
         STH   R14,DSNAME         STORE LENGTH
TEMPQUAL OI    6(R6),X'40'        TREAT UNQUOTED LIKE QUOTED
GOTDSN   EQU   *
         SPACE
************************************************************
*                                                          *
*        ALLOCATE THE DATA SET TO THE FILENAME             *
*                                                          *
************************************************************
         SPACE
         LA    R7,MYDAPB
         USING DAPB08,R7
         MVC   0(MODEL08L,R7),MODEL08
         LA    R0,DSNAME
         CLI   DSNAME+1,0
         BE    *+8
         ST    R0,DA08PDSN
         MVC   DA08DDN(8),DDSAVE
         MVC   DA08PQTY,PRIMARY
         MVC   DA08SQTY,SECDARY
         MVC   DA08DQTY,DIRBLKS
         CLI   DISPKW+1,4          NEW
         BNE   SETDAPMD            NO, BRANCH
         MVI   DA08DSP1,DA08NEW    YES, MARK IT NEW
         MVI   DA08DPS2,DA08CAT                 CATLG
         MVI   DA08DPS3,DA08CATL                CATLG
SETDAPTY CLI   SPACEKW+1,1         SPACE SPECIFIED
         BNE   *+8                 NO, NO DEFAULT TYPE
         MVI   DA08CTL,DA08TRKS    YES, DEFAULT TRACKS
         CLI   TYPKW+1,2           CYL SPECIFIED
         BNE   *+8
         MVI   DA08CTL,DA08CYLS
         CLI   TYPKW+1,1           BLOCK(NN) SPECIFIED
         BNE   *+14
         MVI   DA08CTL,DA08ABKL    AVERAGE BLOCK LENGTH
         MVC   DA08BLK,BLOCKSP
         B     SETDAPCM
SETDAPMD CLI   DISPKW+1,3          MOD
         BNE   SETDAPOS
         MVI   DA08DSP1,DA08MOD    MOD
         MVI   DA08DPS2,DA08CAT                 CATLG
         MVI   DA08DPS3,DA08CATL                CATLG
         CLI   TYPKW+1,0           WAS TRK/CYL/BLK SPECIFIED
         BNE   SETDAPTY            YES, GO SET IT
         CLI   SPACEKW+1,0         WAS SPACE SPECIFIED
         BNE   SETDAPTY            YES, GO SET TRK
         CLI   DIRKW+1,0           WAS DIR SPECIFIED
         BNE   SETDAPTY            YES, GO SET TRK
*        MVI   DA08DPS2,DA08KEEP                KEEP
*        MVI   DA08DPS3,DA08KEP                 KEEP
         B     SETDAPCM            NO, DO NOT SPECIFY TYPE
SETDAPOS MVI   DA08DSP1,DA08SHR
         CLI   DISPKW+1,2          OLD
         BNE   *+8                 NOT OLD, SKIP NEXT INSTR
         MVI   DA08DSP1,DA08OLD    OLD
         MVI   DA08DPS2,DA08KEEP
         MVI   DA08DPS3,DA08KEP
         SPACE
SETDAPCM CLI   DSNAME+2,AMP        IS DSN TEMPORARY
         BNE   *+12                NO
         MVI   DA08DPS2,DA08DEL    YES
         MVI   DA08DPS3,DA08DELE   YES
         SPACE
         OI    DA08CTL,DA08PERM
         TM    6(R6),X'40'         IS DSN IN QUOTES?
         BO    *+8                 IF IN QUOTES, SKIP NEXT INS
         OI    DA08CTL,DA08UID     DAIR TO ADD PREFIX
         SPACE
         TM    14(R6),X'80'        MEMBER SPECIFIED?
         BZ    MEMBX               NO - BRANCH
         LH    R1,12(,R6)          GET LENGTH OF MEMBER
         BCTR  R1,0                MINUS 1 FOR EX
         L     R14,8(,R6)          GET ADDRESS OF MEMBER NAME
         B     *+10
         MVC   DA08MNM(0),0(R14)   MOVE MEMBER NAME
         EX    R1,*-6
MEMBX    EQU   *
         TM    22(R6),X'80'        PASSWORD SPECIFIED?
         BZ    PASSX               NO - BRANCH
         LH    R1,20(,R6)          GET LENGTH OF PSWD
         BCTR  R1,0                MINUS 1 FOR EX
         L     R14,16(,R6)         GET ADDRESS OF PSWD
         B     *+10
         MVC   DA08PSWD(0),0(R14)  MOVE PSWD
         EX    R1,*-6
PASSX    EQU   *
         LA    R15,UNIT
         TM    6(R15),X'80'        UNIT SPECIFIED?
         BZ    UNITX               NO - BRANCH
         LH    R1,4(,R15)          GET LENGTH OF UNIT
         BCTR  R1,0                MINUS 1 FOR EX
         L     R14,0(,R15)         GET ADDRESS OF UNIT NAME
         B     *+10
         MVC   DA08UNIT(0),0(R14)  MOVE UNIT NAME
         EX    R1,*-6
UNITX    EQU   *
         LA    R15,VOL
         TM    6(R15),X'80'        VOLUME SPECIFIED?
         BZ    VOLX                NO - BRANCH
         LH    R1,4(,R15)          GET LENGTH OF VOLUME NAME
         BCTR  R1,0                MINUS 1 FOR EX
         L     R14,0(,R15)         GET ADDRESS OF VOLUME NAME
         B     *+10
         MVC   DA08SER(0),0(R14)   MOVE VOLUME NAME
         EX    R1,*-6
VOLX     EQU   *
         SPACE
         MVC   DA08ALN(8),ATTRIB   MOVE ATTRIB NAME
         CLI   ATTRIB,C' '
         BE    *+8
         OI    DA08CTL,DA08ATRL    SET ATTRIB NAME INDICATOR ON
         SPACE
         CLC   DSNAME(10),NULLFILE IS DSN NULLFILE
         BNE   DUMX
         TM    6(R6),X'40'         IS DSN IN QUOTES?
         BZ    DUMX                NO, ITS NOT NECESSARILY DUMMY
         OI    DA08CTL,DA08DMMY
DUMX     EQU   *
         SPACE
         CLI   RLSEKW+1,1          RLSE
         BNE   *+8
         OI    DA08CTL,DA08RLSE
         SPACE
         TM    STATUS,STATCON      IS THIS PART OF A CONCATENATION
         BZ    *+8                 NO
         OI    DE08CTLX,DE08NEX    YES, DO NOT USE EXISTING ALLOCATION
         SPACE
         CLI   MSGKW+1,1           MSG
         BNE   *+8                 NO
         OI    DE08CTLX,DE08MSG    YES
         SPACE
         MVC   DE08DSOR,DSORGVAL   DCB DSORG
         MVC   DE08RECF,RECFORM    DCB RECFM
         MVC   DE08LREC,RECSIZE    DCB LRECL
         MVC   DE08BLKS,BLOCKSI    DCB BLKSIZE
         SPACE
         LA    R15,MSV
         TM    6(R15),X'80'        MSVGP SPECIFIED?
         BZ    MSVX                NO - BRANCH
         LH    R1,4(,R15)          GET LENGTH OF MSVGP NAME
         BCTR  R1,0                MINUS 1 FOR EX
         L     R14,0(,R15)         GET ADDRESS OF MSVGP NAME
         B     *+10
         MVC   DA08SER(0),0(R14)   USE VOL SER FIELD FOR NAME
         EX    R1,*-6
         OI    DE08CTLX,DE08MSVG   INDICATE MSVGP PRESENT
MSVX     EQU   *
         SPACE
         LA    R15,POS
         TM    6(R15),X'80'        POS SPECIFIED?
         BZ    POSX                NO - BRANCH
         LH    R1,4(,R15)          GET LENGTH OF POS
         BCTR  R1,0                MINUS 1 FOR EX
         L     R14,0(,R15)         GET ADDRESS OF POS
         B     *+10
         PACK  DOUBLE(8),0(0,R14)  PACK POS
         EX    R1,*-6
         CVB   R1,DOUBLE
         STH   R1,DE08POS          TAPE DATA SET SEQUENCE NUMBER
POSX     EQU   *
         SPACE
         LH    R15,LAB             GET KEYWORD NUMBER (0 - 8)
         LA    R15,LABTYPE(R15)    POINT TO LABEL TYPE IN TABLE
         MVC   DE08LABL,0(R15)     TAPE LABEL TYPE
         SPACE
         CLI   DSNAME+2,AMP        IS DATA SET TEMPORARY
         BE    EXPX                YES, IGNORE EXPDT
         LA    R15,EXP
         TM    6(R15),X'80'        EXPDT SPECIFIED?
         BZ    EXPX                NO - BRANCH
         LH    R1,4(,R15)          GET LENGTH OF EXPDT
         BCTR  R1,0                MINUS 1 FOR EX
         L     R14,0(,R15)         GET ADDRESS OF EXPDT
         B     *+10
         PACK  DOUBLE(8),0(0,R14)  PACK EXPDT
         EX    R1,*-6
         CVB   R1,DOUBLE
         SR    R0,R0
         D     R0,=F'1000'         GET YY IN R1, DDD IN R0
         STC   R1,DE08EXYR
         STH   R0,DE08EXJD
EXPX     EQU   *
         SPACE
         LA    R1,MYDAPL
         BAL   R14,CALLDAIR
         LTR   R15,R15
         BNZ   ALLOFAIL
         L     R1,CONCPTR          POINT TO LIST OF DDNAMES
         MVC   0(8,R1),DA08DDN     SAVE THE DDNAME
         MVC   DDSAVE,=CL8' '      BLANK THE DDNAME FOR NEXT DAIR
         LA    R1,8(,R1)           POINT TO NEXT SLOT
         ST    R1,CONCPTR          SAVE UPDATED POINTER
         DROP  R7                  DAPB08
         CLI   24(R6),X'FF'        IS THERE ANOTHER DSNAME
         BNE   DSNLOOP             YES, BRANCH
         SPACE
************************************************************
*                                                          *
*         CONCATENATE IF THERE WAS MORE THAN ONE           *
*                                                          *
************************************************************
         SPACE
         LA    R7,CONCDAPB
         USING DAPB0C,R7
         XC    0(12,R7),0(R7)
         MVI   DA0CCD+1,X'0C'
         LA    R0,12(,R7)          BEGINNING OF DDNAME LIST
         L     R1,CONCPTR          END OF DDNAME LIST
         SR    R1,R0               LENGTH OF DDNAME LIST
         SRL   R1,3                DIVIDE BY 8
         CH    R1,=H'1'            IS THERE ONLY ONE DDNAME
         BE    NOCONCAT            YES, BYPASS CONCAT
         STH   R1,DA0CNUMB
         LA    R1,MYDAPL
         USING DAPL,R1
         ST    R7,DAPLDAPB
         DROP  R1                  DAPL
         DROP  R7                  DAPB0C
         BAL   R14,CALLDAIR
         LTR   R15,R15
         BZ    STOP
ALLOFAIL BAL   R14,DAIRFAIL
         LA    R15,12
         B     STOP
NOCONCAT SLR   R15,R15
STOP     STH   R15,RC              SET HIGHEST RC
         SPACE
************************************************************
*                                                          *
*         CLEAN UP                                         *
*                                                          *
************************************************************
         SPACE
         IKJRLSA MYANS
         SPACE
         CLI   RC+1,0              IS RC ZERO?
         BZ    STACKDX             YES, BRANCH
         MVC   MYSTPB(STACKDL),STACKD
         SPACE
         STACK DELETE=ALL,PARM=MYSTPB,MF=(E,MYIOPL)
         SPACE
         TCLEARQ
STACKDX  EQU   *
         SPACE
         LH    R15,RC
         B     EXIT
         SPACE
************************************************************
*                                                          *
*         CALL IKJDAIR SERVICE ROUTINE                     *
*                                                          *
************************************************************
          SPACE
CALLDAIR ST    R14,DAIRREGS
         CLI   IKJKW+1,1
         BE    CALLIKJ
*        LINK  EP=S99DAIR
         CALL  S99DAIR
         L     R14,DAIRREGS
         BR    R14
         SPACE
CALLIKJ  EQU   *
         AIF   (NOT &MVS).SKIP6
         L     R15,16
         TM    X'2DC'(R15),X'80'  CVTDAIR
         BNO   DAIRLINK
         L     R15,X'2DC'(,R15)
         BALR  R14,R15
         B     DAIRFINI
DAIRLINK EQU   *
.SKIP6   ANOP
         LINK  EP=IKJDAIR,SF=(E,LINKAREA)
DAIRFINI L     R14,DAIRREGS
         BR    R14
         SPACE
************************************************************
*                                                          *
*        DYNAMIC ALLOCATION FAILURE ROUTINE                *
*                                                          *
************************************************************
         SPACE
DAIRFAIL ST    R14,MYDFREGS
         AIF   (NOT &MVS).SKIP7
         LA    R1,MYDFPARM
*        USING DFDSECTD,R1         MAPPED BY IKJEFFDF DFDSECT=YES
         ST    R15,MYDFRC
         LA    R15,MYDFRC
         ST    R15,4(,R1)          DFRCP
         LA    R15,MYDAPL
         ST    R15,0(,R1)          DFDAPLP
         SLR   R15,R15
         ST    R15,MYJEFF02
         LA    R15,MYJEFF02
         ST    R15,8(,R1)          DFJEFF02
         LA    R15,1               DFDAIR
         STH   R15,MYDFID
         LA    R15,MYDFID
         ST    R15,12(,R1)         DFIDP
         SLR   R15,R15
         ST    R15,16(,R1)         DFCPPLP (MVS ONLY)
         LINK  EP=IKJEFF18,SF=(E,LINKAREA)
         L     R15,MYDFRC
*        DROP  R1                  DFDSECTD
.SKIP7   ANOP
         AIF   (&MVS).SKIP8
         LA    R1,MSGDAIR
         LA    R0,L'MSGDAIR
         BAL   R14,PUTMSG
.SKIP8   ANOP
         L     R14,MYDFREGS
         BR    R14
         SPACE
************************************************************
*                                                          *
*        PUTMSG ROUTINE                                    *
*                                                          *
************************************************************
         SPACE
PUTMSG   STM   R14,R1,PUTLINS
         XC    MYOLD(8),MYOLD
         XC    MYSEG1(4),MYSEG1
         MVC   MYPTPB(12),MODLPTPM
         LA    R14,1               NO. OF MESSAGE SEGMENTS
         ST    R14,MYOLD
         LA    R14,MYSEG1          POINT TO 1ST SEGMENT
         ST    R14,MYOLD+4
         LR    R14,R0              LENGTH IN R0
         LA    R14,4(,R14)         ADD 4
         LA    R15,MYSEG1+4
         CLC   0(3,R1),=C'IKJ'     IS F POSOTECEEDED BY MESSAGE ID?
         BE    *+16                YES - BRANCH
         LA    R14,1(,R14)         ADD 1 TO LENGTH
         MVI   0(R15),C' '         INSERT LEADING BLANK
         LA    R15,1(,R15)         BUMP POINTER
         STH   R14,MYSEG1
         LR    R14,R0
         BCTR  R14,0
         B     *+10
         MVC   0(0,R15),0(R1)      MOVE MESSAGE IN
         EX    R14,*-6
         L     R15,MYPUTLEP
         SPACE
         PUTLINE PARM=MYPTPB,OUTPUT=(MYOLD),MF=(E,MYIOPL)
         SPACE
         LM    R14,R1,PUTLINS
         BR    R14
         SPACE
         SPACE
************************************************************
*                                                          *
*         RETURN                                           *
*                                                          *
************************************************************
         SPACE
EXIT     LR    1,13
         L     R0,@SIZE
         L     13,4(,13)
         ST    15,16(,13)
         FREEMAIN R,A=(1),LV=(0)
         LM    14,12,12(13)
         BR    14
         SPACE
************************************************************
*                                                          *
*         CONSTANTS                                        *
*                                                          *
************************************************************
         SPACE
         LTORG
RECFM    EQU   36
DDNAM    EQU   40
BLKSI    EQU   62
LRECL    EQU   82
AMP      EQU   C'&&'
NULLFILE DC    H'8',CL8'NULLFILE'
MODLPTPM PUTLINE OUTPUT=(1,TERM,SINGLE,INFOR),                         X
               TERMPUT=(EDIT,WAIT,NOHOLD,NOBREAK),MF=L
         SPACE
STACKD   STACK DELETE=ALL,MF=L
STACKDL  EQU   *-STACKD
         SPACE
MSG01    DC    C'ERROR IN PARSE SERVICE ROUTINE'
MSG05    DC    C'IKJ58509I DATA SET NAME REQUIRED WITH MEMBER NAME'
MSGDAIR  DC    C'UNABLE TO ALLOCATE'
MODEL08  DC    AL2(8),XL10'0',CL24' ',XL16'0',CL16' ',XL8'0',CL8' '
         DC    XL16'0'        (LAST 16 BYTES FOR S99DAIR)
MODEL08L EQU   *-MODEL08
MODEL18  DC    X'0018',XL10'0',CL18' ',XL2'0',CL8' '
MODEL18L EQU   *-MODEL18
MODEL1C  DC    X'001C',XL6'0',CL16' ',XL8'0' (LAST 8 FOR S99DAIR)
MODEL1CL EQU   *-MODEL1C
MODEL30  DC    X'0030',XL10'0',CL24' ',XL12'0',CL14' ',XL2'0',CL8' '
         DC    XL12'0',CL12' '       (LAST 24 BYTES FOR S99DAIR)
MODEL30L EQU   *-MODEL30
         SPACE
RECFMU   EQU   X'C0'    UNDEFINED LENGTH
RECFMF   EQU   X'80'    FIXED LENGTH
RECFMV   EQU   X'40'    VARIABLE LENGTH
RECFMT   EQU   X'20'    TRACK OVERFLOW
RECFMB   EQU   X'10'    BLOCKED
RECFMS   EQU   X'08'    VARIABLE SPANNED OR FIXED STANDARD
RECFMA   EQU   X'04'    ASA CC
RECFMM   EQU   X'02'    MACHINE CC
         SPACE
DSORGTAB DC    H'0'     MUST BE IN SAME ORDER AS PARSE IKJNAME'S
         DC    X'4000'  PS
         DC    X'4100'  PSU
         DC    X'0200'  PO
         DC    X'0300'  POU
         DC    X'2000'  DA
         DC    X'2100'  DAU
         SPACE
NL       EQU   X'01'    TAPE LABEL TYPE, NO LABELS
SL       EQU   X'02'    STANDARD
NSL      EQU   X'04'    NONSTANDARD
SUL      EQU   X'0A'    STANDARD AND USER
BLP      EQU   X'10'    BYPASS LABEL PROCESSING
LTM      EQU   X'21'    DOS LEADING TAPE MARK
AL       EQU   X'40'    ANSI
AUL      EQU   X'48'    ANSI AND USER
         SPACE
LABTYPE  DC    AL1(0,NL,SL,NSL,SUL,BLP,LTM,AL,AUL)
         DC    0D'0'
         PRINT NOGEN
SOUDCB   DCB   DDNAME=PRT3800,DSORG=PS,MACRF=PM
SOUDCBL  EQU   *-SOUDCB
         PRINT GEN
SETPRTM  SETPRT 7,MF=L
SETPRTE  DC    CL29'SETPRT ERROR CODE X''XXXXXXXX'''
HEXTAB   DC    C'0123456789ABCDEF'
         DC    0D'0'
         SPACE
************************************************************
*                                                          *
*        PARSE PARAMETERS                                  *
*                                                          *
************************************************************
         SPACE
         PRINT NOGEN
DDPCL    IKJPARM
DDN      IKJIDENT 'FILENAME (DDNAME)',                                 +
               FIRST=ALPHA,OTHER=ALPHANUM,MAXLNTH=8,                   +
               PROMPT='FILENAME (DDNAME)'
DSN      IKJPOSIT DSTHING,LIST,PROMPT='DATA SET NAME'
DATAKW   IKJKEYWD
         IKJNAME 'DATASET'
UNITKW   IKJKEYWD
         IKJNAME 'UNIT',SUBFLD=UNITSF
VOLKW    IKJKEYWD
         IKJNAME 'VOLUME',SUBFLD=VOLSF
DISPKW   IKJKEYWD
         IKJNAME 'SHR'
         IKJNAME 'OLD'
         IKJNAME 'MOD'
         IKJNAME 'NEW'
ALNKW    IKJKEYWD
         IKJNAME 'USING',SUBFLD=ALNSF
SPACEKW  IKJKEYWD
         IKJNAME 'SPACE',SUBFLD=SPACESF
TYPKW    IKJKEYWD
         IKJNAME 'BLOCK',SUBFLD=BLOCKSF
         IKJNAME 'CYLINDERS'
         IKJNAME 'TR'
         IKJNAME 'TRACKS'
         IKJNAME 'TRKS'
DIRKW    IKJKEYWD
         IKJNAME 'DIR',SUBFLD=DIRSF
RLSEKW   IKJKEYWD
         IKJNAME 'RLSE'
DSOKW    IKJKEYWD
         IKJNAME 'DSORG',SUBFLD=DSOSF
RECKW    IKJKEYWD
         IKJNAME 'RECFM',SUBFLD=RECSF
LREKW    IKJKEYWD
         IKJNAME 'LRECL',SUBFLD=LRESF
BLKKW    IKJKEYWD
         IKJNAME 'BLKSIZE',SUBFLD=BLKSF
MSVKW    IKJKEYWD
         IKJNAME 'MSVGP',SUBFLD=MSVSF
TEMPKW   IKJKEYWD
         IKJNAME 'TEMPORARY'
HOLDKW   IKJKEYWD
         IKJNAME 'HOLD'
DESTKW   IKJKEYWD
         IKJNAME 'DEST',SUBFLD=DESTSF
FORMKW   IKJKEYWD
         IKJNAME 'FORM',SUBFLD=FORMSF
FCBKW    IKJKEYWD
         IKJNAME 'FCB',SUBFLD=FCBSF
COPIKW   IKJKEYWD
         IKJNAME 'COPIES',SUBFLD=COPISF
LABKW    IKJKEYWD
         IKJNAME 'LABEL',SUBFLD=LABSF
EXPKW    IKJKEYWD
         IKJNAME 'EXPDT',SUBFLD=EXPSF
POSKW    IKJKEYWD
         IKJNAME 'POSITION',SUBFLD=POSSF
CHARKW   IKJKEYWD
         IKJNAME 'CHARS',SUBFLD=CHARSF
BURSTKW  IKJKEYWD
         IKJNAME 'BURST'
         IKJNAME 'NOBURST'
IKJKW    IKJKEYWD
         IKJNAME '$IKJDAIR'
MSGKW    IKJKEYWD
         IKJNAME '$MSG'
UNITSF   IKJSUBF
UNIT     IKJIDENT 'UNIT NAME',                                         +
               FIRST=ALPHANUM,OTHER=ANY,MAXLNTH=8,                     +
               PROMPT='UNIT NAME'
VOLSF    IKJSUBF
VOL      IKJIDENT 'VOLUME SERIAL',                                     +
               FIRST=ALPHANUM,OTHER=ALPHANUM,MAXLNTH=6,                +
               PROMPT='VOLUME SERIAL'
ALNSF    IKJSUBF
ALN      IKJIDENT 'ATTRIBUTE LIST NAME',                               +
               FIRST=ALPHA,OTHER=ALPHANUM,MAXLNTH=8,                   +
               PROMPT='ATTRIBUTE LIST NAME'
SPACESF  IKJSUBF
SPACE    IKJIDENT 'SPACE VALUE',LIST,                                  +
               FIRST=NUMERIC,OTHER=NUMERIC,MAXLNTH=5,                  +
               PROMPT='SPACE VALUE'
BLOCKSF  IKJSUBF
BLOCK    IKJIDENT 'BLOCK SIZE',                                        +
               FIRST=NUMERIC,OTHER=NUMERIC,MAXLNTH=5,                  +
               PROMPT='BLOCK SIZE'
DIRSF    IKJSUBF
DIR      IKJIDENT 'DIRECTORY VALUE',                                   +
               FIRST=NUMERIC,OTHER=NUMERIC,MAXLNTH=5,                  +
               PROMPT='NUMBER OF DIRECTORY BLOCKS'
DSOSF    IKJSUBF
DSOSFKW  IKJKEYWD
         IKJNAME 'PS'
         IKJNAME 'PSU'
         IKJNAME 'PO'
         IKJNAME 'POU'
         IKJNAME 'DA'
         IKJNAME 'DAU'
RECSF    IKJSUBF
RECKWF   IKJKEYWD
         IKJNAME 'F'
         IKJNAME 'V'
         IKJNAME 'U'
RECKWB   IKJKEYWD
         IKJNAME 'B'
RECKWS   IKJKEYWD
         IKJNAME 'S'
RECKWA   IKJKEYWD
         IKJNAME 'A'
         IKJNAME 'M'
LRESF    IKJSUBF
LRE      IKJIDENT 'LRECL',                                             +
               FIRST=NUMERIC,OTHER=NUMERIC,MAXLNTH=5,                  +
               PROMPT='DCB LRECL',VALIDCK=LREVC
BLKSF    IKJSUBF
BLK      IKJIDENT 'BLKSIZE',                                           +
               FIRST=NUMERIC,OTHER=NUMERIC,MAXLNTH=5,                  +
               PROMPT='DCB BLKSIZE',VALIDCK=LREVC
MSVSF    IKJSUBF
MSV      IKJIDENT 'MSVGP',                                             +
               FIRST=ALPHANUM,OTHER=ALPHANUM,MAXLNTH=8,                +
               PROMPT='MASS STORAGE GROUP'
DESTSF   IKJSUBF
DEST     IKJIDENT 'DESTINATION',                                       +
               FIRST=ALPHA,OTHER=ALPHANUM,MAXLNTH=8,                   +
               PROMPT='DESTINATION NAME'
FORMSF   IKJSUBF
FORM     IKJIDENT 'FORM NUMBER',                                       +
               FIRST=ALPHANUM,OTHER=ALPHANUM,MAXLNTH=4,                +
               PROMPT='FORM NUMBER'
FCBSF    IKJSUBF
FCB      IKJIDENT 'FCB',                                               +
               FIRST=ALPHANUM,OTHER=ALPHANUM,MAXLNTH=4,                +
               PROMPT='FCB IMAGE'
COPISF   IKJSUBF
COPI     IKJIDENT 'SYSOUT COPIES',                                     +
               FIRST=NUMERIC,OTHER=NUMERIC,MAXLNTH=2,                  +
               PROMPT='SYSOUT COPIES'
LABSF    IKJSUBF
LAB      IKJKEYWD
         IKJNAME 'NL'
         IKJNAME 'SL'
         IKJNAME 'NSL'
         IKJNAME 'SUL'
         IKJNAME 'BLP'
         IKJNAME 'LTM'
         IKJNAME 'AL'
         IKJNAME 'AUL'
EXPSF    IKJSUBF
EXP      IKJIDENT 'EXPIRATION DATE',                                   +
               FIRST=NUMERIC,OTHER=NUMERIC,MAXLNTH=5,                  +
               PROMPT='EXPIRATION DATE'
POSSF    IKJSUBF
POS      IKJIDENT 'POSITION',                                          +
               FIRST=NUMERIC,OTHER=NUMERIC,MAXLNTH=4,                  +
               PROMPT='DATA SET SEQUENCE NUMBER',                      +
               HELP='RELATIVE POSITION OF DATA SET'
CHARSF   IKJSUBF
CHARS    IKJIDENT 'CHARACTER SET NAME',LIST,                           +
               FIRST=ALPHA,OTHER=ALPHANUM,MAXLNTH=4,                   +
               PROMPT='CHARACTER SET NAME FOR 3800 PRINTER'
         IKJENDP
         PRINT GEN
         SPACE
************************************************************
*                                                          *
*         VALIDITY CHECK ROUTINES FOR PARSE                *
*                                                          *
************************************************************
         SPACE
         DC    0D'0'
LREVC    STM   14,12,12(13)
         L     R2,0(,R1)           POINT R2 TO PDE
         L     R9,4(,R1)           POINT TO WORK AREA
         LM    R10,R11,BASES       RESTORE BASE REGISTERS
         SR    15,15               SET RC INITIALLY TO ZERO
         L     R14,0(,R2)          POINT TO OPERAND
         LH    R1,4(,R2)           LENGTH
         BCTR  R1,0                LENGTH MINUS 1 FOR EX
         B     *+10                BRANCH AROUND PACK
         PACK  DOUBLE,0(0,R14)     (EXECUTED)
         EX    R1,*-6              PACK THE OPERAND
         CVB   R1,DOUBLE           CONVERT TO BINARY
         LTR   R1,R1               IS IT ZERO
         BZ    LREVCX4             YES, ERROR
         C     R1,=F'32760'        IS IT GREATER THAN 32760
         BNH   LREVCX              NO, BRANCH
LREVCX4  LA    R15,4               RETURN CODE 4 FOR INVALID OPERAND
LREVCX   L     14,12(,13)
         LM    0,12,20(13)
         BR    14
         SPACE
         LTORG
         SPACE
PCLADDR  DC    0D'0'               END OF CSECT
         SPACE
************************************************************
*                                                          *
*         WORK SPACE (MAP OF GETMAINED AREA)               *
*                                                          *
************************************************************
         SPACE
@DATA    DSECT
         DS    18F                 REGISTER SAVEAREA
BASES    DS    2F
LINKAREA DS    2F
MYPPL    DS    7F
MYANS    DS    F
MYECB    DS    F                  USED BY PUTLINE ROUTINE
MYIOPL   DS    4F                 USED BY PUTLINE ROUTINE
MYPTPB   DS    3F                 USED BY PUTLINE ROUTINE
MYOLD    DS    2F                 USED BY PUTLINE ROUTINE
MYSEG1   DS    2H,CL256           USED BY PUTLINE ROUTINE
PUTLINS  DS    4F                 USED BY PUTLINE ROUTINE
MYPUTLEP DS    F                  ADDRESS OF IKJPUTL
MYSTPB   DS    0F                 5 WORDS USED BY STACK DELETE
MYDAPL   DS    5F
MYDAPB   DS    27F
DSNAME   DS    H,CL44
VOLSER   DS    CL6
MSGWK    DS    CL128
STATUS   DS    X
STATCON  EQU   X'80'
SETCLASS DS    X
RC       DS    H
MYDFPARM DS    5F  USED BY DAIRFAIL
MYDFREGS DS    F   USED BY DAIRFAIL
MYDFRC   DS    F   USED BY DAIRFAIL
MYJEFF02 DS    F   USED BY DAIRFAIL
MYDFID   DS    H   USED BY DAIRFAIL
HALF     DS    H
DOUBLE   DS    D
DDSAVE   DS    CL8
ATTRIB   DS    CL8
FORMS    DS    CL4
PRIMARY  DS    F
SECDARY  DS    F
DIRBLKS  DS    F
BLOCKSP  DS    F
SAVEUPT  DS    X
RECFORM  DS    X
DSORGVAL DS    H
RECSIZE  DS    H
BLOCKSI  DS    H
DAIRREGS DS    F
OPEN     DS    0F
CLOSE    DS    F
SOUDCBW  DS    0F,(SOUDCBL)X
SETPRTRC DS    F
SETPRTL  DS    12F
         DS    0D
CONCPTR  DS    F
CONCDAPB DS    3F
         DS    50CL8
@DATAL   EQU   *-@DATA
         SPACE
         IKJCPPL
         SPACE 3
         IKJPPL
         SPACE
         IKJUPT
         SPACE 2
         IKJIOPL
         SPACE 2
         IKJDAPL
         SPACE 2
         IKJDAP08
DE08CTLX DS    X        FLAGS
DE08MSG  EQU   X'80'    AUTOMATIC DAIRFAIL MESSAGE
DE08FC   EQU   X'40'    FREE=CLOSE (NOT IMPLEMENTED)
DE08MSVG EQU   X'20'    MSVGP NAME IN VOL SER FIELD
DE08RET  EQU   X'10'    RETENTION PERIOD, NOT EXPIRATION DATE
DE08NEX  EQU   X'01'    DO NOT USE AN EXISTING ALLOCATION
DE08RECF DS    X        DCB RECFM
DE08LREC DS    H        DCB LRECL
DE08BLKS DS    H        DCB BLKSIZE
DE08DSOR DS    XL2      DCB DSORG
*                       END OF 8 BYTE SECTION
         DS    X        RESERVED
DE08EXPD DS    0XL3     EXP DATE, BINARY, 1 BYTE YEAR, 2 BYTES DAY
DE08EXYR DS    X        EXP DATE YEAR, BINARY
DE08EXJD DS    0H       EXP DATE JULIAN DAY, BINARY
DE08RETP DS    H        RETENTION PERIOD (0-9999)
DE08POS  DS    H        TAPE DATA SET SEQUENCE NUMBER (0-9999)
DE08LABL DS    X        TAPE LABEL TYPE (HEX 01 02 10 FOR NL SL BLP)
DE08DEN  DS    X        TAPE DENSITY (HEX 83 C3 D3 FOR 800 1600 6250)
*                       END OF 8 BYTE SECTION
*                       DAPB08 HAS BEEN EXPANDED BY 16 BYTES
         SPACE 2
         IKJDAP0C
         SPACE 2
         IKJDAP18
         SPACE 2
         IKJDAP1C
DE1CCTLX DS    X        FLAGS
DE1CMSG  EQU   X'80'    AUTOMATIC DAIRFAIL MESSAGE
DE1CRECF DS    X        DCB RECFM
DE1CLREC DS    H        DCB LRECL
DE1CBLKS DS    H        DCB BLKSIZE
         DS    XL2      RESERVED
*                       DAPB1C HAS BEEN EXPANDED BY 08 BYTES
         SPACE 2
         IKJDAP30
DE30CTLX DS    X        FLAGS
DE30MSG  EQU   X'80'    AUTOMATIC DAIRFAIL MESSAGE
DE30FC   EQU   X'40'    FREE=CLOSE
DE30HOLD EQU   X'20'    HOLD
DE30RECF DS    X        DCB RECFM
DE30LREC DS    H        DCB LRECL
DE30BLKS DS    H        DCB BLKSIZE
         DS    XL2      RESERVED
DE30CPYS DS    X        COPIES
         DS    XL3      RESERVED
DE30FCB  DS    CL4      FCB
DE30DEST DS    CL8      DEST
*                       DAPB1C HAS BEEN EXPANDED BY 24 BYTES
         SPACE 2
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         END
         TITLE '   S 9 9 D A I R  '
***********************************************************************
*                                                                     *
*        'S99DAIR' SUBPROGRAM                                         *
*                                                                     *
***********************************************************************
*
*        CURRENT STATUS: VERSION 1.4
*          NOT THOROUGHLY TESTED BUT NO KNOWN PROBLEMS.
*
*        WRITTEN BY. BILL GODFREY,  PLANNING RESEARCH CORPORATION.
*        INSTALLATION. PRC COMPUTER CENTER, INC.  MCLEAN VA
*        DATE WRITTEN. MARCH 6 1981.
*        DATE UPDATED. MAY 26 1982.
*        ATTRIBUTES. RE-ENTRANT.
*        MACROS. GETMAIN FREEMAIN LINK IEFZB4D0 IEFZB4D2 IKJEFFDF.
*         IKJCPPL, IKJUPT, IKJDAPL, IKJDAP08, IKJDAP1C, IKJDAP30.
*        LOG OF CHANGES.
*         30MAR81. LABEL IN08RDDX ADDED. UNALLOC IF MEM SPEC, NOT PDS.
*         07APR81. ADDED DE08NEX BIT, TO SET ON S99NOCNV BIT.
*         14MAY82. DE08DSOR (DSORG) NOW SUPPORTED.
*         26MAY82. PROBLEM CORRECTED WITH AMPERSAND DSNAMES.
*        DESCRIPTION.
*         THIS SUBPROGRAM IS AN ENHANCED VERSION OF IKJDAIR FOR TYPES
*         '0008' (DSNAME), '001C' (TERMINAL), AND '0030' (SYSOUT).
*
*         IT DOES NOT REPLACE IKJDAIR, BUT CAN BE CALLED INSTEAD
*         OF IKJDAIR, AND IF THE DAPB TYPE IS NOT HANDLED BY THIS
*         PROGRAM, THEN THIS PROGRAM WILL PASS IT ON TO IKJDAIR.
*
*         THIS SUBPROGRAM ACCEPTS A PARAMETER LIST SIMILAR
*         TO THAT PASSED TO IKJDAIR, AND EITHER PASSES IT ON
*         TO IKJDAIR OR PERFORMS THE REQUESTED FUNCTION ITSELF.
*
*         WHEN MODIFYING AN EXISTING TSO COMMAND TO GIVE
*         IT THE ABILITY TO DYNAMICALLY ALLOCATE A GREATER
*         VARIETY OF DATA SETS THAN 'IKJDAIR' ALLOWS, IT
*         IS INCONVENIENT TO CONVERT THE CODE FROM 'IKJDAIR'
*         ORIENTED PARAMETER LISTS TO 'SVC-99' ORIENTED
*         PARAMETER LISTS.  THIS SUBPROGRAM WAS WRITTEN TO
*         SIMPLIFY THAT TASK BY ALLOWING THE 'IKJDAIR' LOGIC
*         TO BE LEFT UNCHANGED, WHILE INCORPORATING THE NEW
*         SVC-99 FUNCTIONS IN THE FORM OF NEW FIELDS IN THE
*         DAIR PARAMETER BLOCKS.
*
*         TO CONVERT A COMMAND, SIMPLY ADD YOUR NEW KEYWORDS
*         AND OPERANDS, ADD CODE TO INTERPRET THEM INTO THE NEW
*         FIELDS, AND CALL 'S99DAIR' INSTEAD OF 'IKJDAIR'. BE SURE
*         TO EXTEND ANY DAPB'S FOR TYPE 0008, 001C, AND 0030 BY
*         THE PROPER NUMBER OF BYTES, AND ZERO ALL UNUSED FIELDS.
*
*         THE FOLLOWING FEATURES ARE NOT IN IKJDAIR, BUT ARE
*         AVAILABLE THRU THIS PROGRAM -
*
*          A) ALLOCATE A DATA SET, SYSOUT, OR A TERMINAL, WITH
*             SPECIFIED DCB ATTRIBUTES, WITHOUT HAVING TO
*             ALLOCATE AN ATTRIBUTE LIST NAME.
*          B) ALLOCATE A DATA SET WITH ZERO TRACKS PRIMARY SPACE.
*          C) ALLOCATE A SYSOUT FILE SPECIFYING CLASS, DEST, HOLD,
*             COPIES, AND FCB.  IKJDAIR IGNORES CLASS EVEN THOUGH
*             THERE ALREADY IS A FIELD FOR IT.
*          D) ALLOCATE A DATA SET SPECIFYING MSVGP.
*          E) ALLOCATE A TAPE SPECIFYING FILE POSITION, LABEL TYPE,
*             EXPIRATION DATE (OR RETENTION PERIOD), AND DENSITY.
*             (FOR USERS WITH TAPE MOUNT OR BACKGROUND COMMANDS).
*          F) OPTIONALLY REQUEST THAT EXPLANATORY MESSAGES BE
*             ISSUED IF ALLOCATION FAILS (EXCEPT IN CASES WHERE
*             ALLOCATION WAS NEVER ATTEMPTED DUE TO INVALID
*             PARAMETERS - DAIR RETURN CODE 4).
*
*         THESE FUNCTIONS ARE REQUESTED BY APPENDING NEW FIELDS
*         TO THE DA08 AND DA30 PARAMETER AREAS, AND THEN
*         CALLING THIS SUBPROGRAM INSTEAD OF IKJDAIR.
*
*         OTHER DIFFERENCES BETWEEN THIS PROGRAM AND IKJDAIR.
*
*          A) THIS PROGRAM DOES NOT HAVE THE SAME DEGREE OF
*             VALIDITY CHECKING THAT IKJDAIR DOES.  SOME INVALID
*             DATA IN THE OLD FIELDS WHICH IKJDAIR WOULD REJECT
*             MAY GO UNNOTICED HERE (SYSOUT SPACE FOR EXAMPLE).
*          B) DEFAULT SPACE FOR NEW DATA SETS IS NOT HANDLED
*             THE WAY IKJDAIR DOES.  IF SPACE TYPE IS SPECIFIED,
*             DEFAULT SPACE IS NOT ASSIGNED.
*
*         THE OPERATING SYSTEM MUST BE OS/VS2 MVS.
*
*         AT ENTRY REGISTER 1 POINTS TO A 'DAPL', MAPPED BY
*         THE STANDARD 'IKJDAPL' MACRO.
*
*         UPON RETURN TO CALLER, REGISTER 15 IS ZERO IF THE
*         ALLOCATION WAS SUCCESSFUL.  OTHERWISE REGISTER 15
*         HAS A VALUE FROM 4 TO 52.
*
*         THERE IS SOME CODE TO ALLOW FOR THE POSSIBILITY THAT THIS
*         IS INSTALLED AS A FRONT END TO IKJDAIR, BUT WE HAVE NOT
*         INSTALLED IT AS A FRONT END, NOR HAS IT BEEN TESTED AS A
*         FRONT END.  TO USE IT AS A FRONT END, THE 'A(0)' AT LABEL
*         'DAIRPTR' WOULD HAVE TO BE CHANGED TO V(IEFDB4D0) BEFORE
*         INSTALLATION OF THE FRONT END, AND THE 3 COMMENTED INSTRUC-
*         TIONS AT LABEL 'CALDAIR' WOULD HAVE TO BE UN-COMMENTED.
*
*$DOC$*****************************************************************
         SPACE
S99DAIR  START
*        WXTRN IEFDB4D0
         USING *,R10,R11
         B     @PROLOG-*(,15)
         DC    AL1(11),CL11'S99DAIR 1.4'
         DC    CL16' &SYSDATE &SYSTIME '
@PROLOG  STM   14,12,12(R13)
         LR    R10,R15             BASE REGISTER
         LA    R15,1
         LA    R11,4095(R15,R10)   BASE REGISTER
         LR    R2,R1               SAVE PARAMETER LIST ADDRESS
         USING DAPL,R2
         L     R3,DAPLDAPB
         LA    R4,IN08
         CLC   0(2,R3),=X'0008'    DSNAME
         BE    INIT                YES, BRANCH
         LA    R4,IN1C
         CLC   0(2,R3),=X'001C'    TERMINAL
         BE    INIT                YES, BRANCH
         LA    R4,IN30
         CLC   0(2,R3),=X'0030'    SYSOUT
         BE    INIT                YES, BRANCH
         EJECT
CALDAIR  EQU   *
*        L     R15,DAIRPTR         GET ADDRESS OF IKJDAIR
*        LTR   R15,R15             IS THIS A FRONT END
*        BNZ   GOTDAIR             YES, BRANCH
TSSDAIR  L     R15,16              CVTPTR
         TM    732(R15),X'80'      IS IKJDAIR IN LPA
         BNO   LNKDAIR             NO, BRANCH
         L     R15,732(,R15)       YES, GET IKJDAIR ENTRY ADDRESS
GOTDAIR  LM    0,12,20(R13)        RESTORE ALL REGISTERS
         BR    R15                 DAIR WILL RETURN TO OUR CALLER
         SPACE
LNKDAIR  LA    R0,80               LENGTH OF SAVEAREA PLUS LINK SF
         GETMAIN R,LV=(0)          GET A SAVEAREA
         ST    R13,4(,R1)          PUT OLD ADDRESS IN NEW SAVEAREA
         ST    R1,8(,R13)          PUT NEW ADDRESS IN OLD SAVEAREA
         LR    R13,R1              TRANSFER SAVEAREA BASE
         LA    R15,72(,R13)        POINT TO LINK PARAMETER AREA
         XC    0(8,R15),0(R15)     CLEAR LINK PARAMETER AREA
         LR    R1,R2               RESTORE ORIGINAL R1
         LINK  EP=IKJDAIR,SF=(E,(R15))
         LR    R1,R13              SET UP R1 FOR FREEMAIN
         LA    R0,80               SET UP R0 FOR FREEMAIN
         L     R13,4(,R13)         RESTORE ORIGINAL SAVEAREA BASE
         LR    R2,R15              SAVE R15 ACROSS FREEMAIN
         FREEMAIN R,LV=(0),A=(1)
         LR    R15,R2              RESTORE R15 (DAIR RETURN CODE)
         LM    0,12,20(R13)        RESTORE OTHER REGISTERS
         L     R14,12(,R13)        RESTORE RETURN ADDRESS
         BR    R14                 RETURN
         SPACE
         LTORG
DAIRPTR  DC    A(0)  V(IEFDB4D0)   EXTERNAL REFERENCE TO DAIR
         EJECT
***********************************************************************
*
*         INITIALIZATION
*
***********************************************************************
         SPACE
INIT     LA    R0,@DATAL
         LA    R1,1                SUBPOOL
         SLL   R1,24               TO LEFT BYTE
         OR    R0,R1               OVER R0
         GETMAIN R,LV=(0)
         ST    R13,4(,R1)          PUT OLD ADDRESS IN NEW SAVEAREA
         ST    R1,8(,R13)          PUT NEW ADDRESS IN OLD SAVEAREA
         LR    R13,R1              TRANSFER SAVEAREA BASE
         LR    R9,R1               WORKAREA BASE
         USING @DATA,R9
         SPACE
         LA    R1,WK99RB
         ST    R1,WK99RBP
         OI    WK99RBP,X'80'
         XC    WK99RB(20),WK99RB
         LA    R14,WK99RB
         USING S99RB,R14
         MVI   S99RBLN,20
         MVI   S99VERB,S99VRBAL
         LA    R1,WK99TUPL
         ST    R1,S99TXTPP
         DROP  R14                 S99RB
         SPACE
         XC    WK99TUPL(TUPL$LEN),WK99TUPL
         OI    WK99TUPL+TUPL$LEN-4,X'80'
         BR    R4                  TO IN08 OR IN1C OR IN30
         USING S99TUNIT,R4
         EJECT
***********************************************************************
*
*         DAIR 08 - DSNAME ALLOCATION
*
***********************************************************************
         SPACE
IN08     DC    0H'0'
         USING DAPB08,R3
         SPACE
         XC    DA08DARC(4),DA08DARC ZERO DARC AND CTRC
         SPACE
         TM    DA08CTL,DA08ATRL    ATTRIBUTE NAME PRESENT
         BZ    IN08ATOK            NO, BRANCH
         CLI   DA08ALN,C' '        YES, IS IT BLANK
         BE    EXIT4               YES, ERROR
IN08ATOK EQU   *
         SPACE
         CLI   DA08UNIT,0
         BE    EXIT4
         CLI   DA08SER,0
         BE    EXIT4
         CLI   DA08DSP1,DA08NEW
         BNE   IN08XNEW
*        CLI   DA08DPS2,DA08KEEP   NEW KEEP NOT ALLOWED BY IKJDAIR
*        BE    EXIT4                        BUT ITS OK WITH US
         CLI   DA08DPS2,DA08UCAT   NEW UNCAT NOT ALLOWED BY IKJDAIR
         BE    EXIT4                        OR US EITHER
IN08XNEW EQU   *
         EJECT
***********************************************************************
*
*         CHECK DSNAME
*
***********************************************************************
         SPACE
         MVI   DSNAME,C' '
         MVC   DSNAME+1(43),DSNAME
         MVI   WKDSRET,0
         L     R14,DA08PDSN        POINTER TO DSNAME
         LTR   R14,R14             IS DSNAME PRESENT
         BZ    IN08DSNN            NO, BRANCH
         MVI   WKDSRET,C'S'        INDICATE NAME IS SPECIFIED
         LH    R0,0(,R14)          YES, GET LENGTH
         LTR   R0,R0               IS LENGTH ZERO
         BZ    EXIT4               YES, ERROR
         CLI   2(R14),C' '         IS DSNAME BLANK
         BNE   IN08DSNL            NO, BRANCH
         CH    R0,=H'44'           YES, IS ITS LENGTH 44
         BNE   EXIT4               NO, ERROR
         CLI   2(R14),X'40'        IS IT BLANK
         BNE   EXIT4               NO, ERROR
         TM    DA08CTL,DA08UID     PREFIXING REQUESTED WITH BLANK NAME
         BO    EXIT4               YES, ERROR
         MVI   WKDSRET,C'R'        INDICATE RETURN DSNAME
         B     IN08DSOK
IN08DSNN TM    DA08CTL,DA08UID     PREFIXING REQUESTED WITH NO NAME
         BZ    IN08DSOK            NO, BRANCH
         B     EXIT4               YES, ERROR
IN08DSNL CH    R0,=H'44'           IS LENGTH GREATER THAN 44
         BH    EXIT4               YES, ERROR
         CLI   2(R14),C'&&'        TEMPORARY NAME
         BNE   IN08DSNM            NO, BRANCH
         TM    DA08CTL,DA08UID     IS PREFIXING REQUESTED WITH TEMP
         BO    EXIT4               YES, ERROR                   26MAY82
IN08DSNM EQU   *
         LA    R15,DSNAME          START WITH FIRST BYTE
         SLR   R1,R1               START WITH LENGTH ZERO
         STH   R1,DSNAMEL          START WITH LENGTH ZERO
         TM    DA08CTL,DA08UID     PREFIXING REQUESTED
         BZ    IN08DSNQ            NO, BRANCH
         L     R14,DAPLUPT         POINT TO USER PROFILE TABLE
         LTR   R14,R14             IS THERE A UPT
*        BZ    IN08DSNQ            NO, SKIP PREFIXING
         BZ    EXIT4               NO, ERROR
         USING UPT,R14
         IC    R1,UPTPREFL         GET LENGTH OF PREFIX
         LTR   R1,R1               IS IT ZERO
         BZ    IN08DSNQ            YES, SKIP PREFIXING
         B     *+10
         MVC   0(0,R15),UPTPREFX
         EX    R1,*-6              MOVE USERID TO DSNAME AREA
         DROP  R14                 UPT
         LA    R15,0(R1,R15)       POINT PAST USERID
         MVI   0(R15),C'.'         APPEND PERIOD
         LA    R15,1(,R15)         POINT PAST PERIOD
         LA    R1,1(,R1)           ADD 1 TO LENGTH
         STH   R1,DSNAMEL          STORE LENGTH OF USERID PLUS 1
IN08DSNQ EQU   *
         LR    R1,R0               SAVE LENGTH OF SPECIFIED NAME
         AH    R0,DSNAMEL          ADD LENGTH OF PREFIX OR ZERO
         STH   R0,DSNAMEL          SET COMBINED LENGTH
         CH    R0,=H'44'           IS LENGTH GREATER THAN 44
         BH    EXIT4               YES, ERROR
         L     R14,DA08PDSN        POINT TO DSN VALUE
         BCTR  R1,0                LENGTH MINUS 1 FOR EX
         B     *+10                BRANCH AROUND EXECUTED MVC
         MVC   0(0,R15),2(R14)     (EXECUTED)
         EX    R1,*-6              MOVE DSN TO DSNAME (AFTER PREFIX)
IN08DSOK EQU   *
         SPACE
         MVI   DEFPTR,0            RESET DEFAULT SPACE SWITCH
         MVI   SV08CTL,0           RESET DEFAULT SPACE FLAGS
*
*              PROCESS DO-NOT-USE-EXISTING-ALLOCATION
*
         TM    DE08CTLX,DE08NEX
         BZ    NEXX
         LA    R14,WK99RB
         USING S99RB,R14
         OI    S99FLAG1,S99NOCNV
         DROP  R14
NEXX     EQU   *
*
*              PROCESS RETURN-DSORG
*
         LA    R4,WK99TXRO
         ST    R4,WK99TURO
         LA    R15,DALRTORG
         STH   R15,S99TUKEY
         LA    R15,1
         STH   R15,S99TUNUM
         LA    R15,2
         STH   R15,S99TULNG
         XC    S99TUPAR(2),S99TUPAR
         SPACE
*
*              PROCESS DDNAME
*
         MVI   WKDDRET,0
         LA    R4,WK99TXDD
         ST    R4,WK99TUDD
         CLI   DA08DDN,X'40'       DD TO BE RETURNED?
         BE    IN08DDR             YES - BRANCH
*
*              DDNAME IS SPECIFIED
*
         LA    R15,DALDDNAM
         STH   R15,S99TUKEY
         LA    R15,1
         STH   R15,S99TUNUM
         LA    R15,8
         STH   R15,S99TULNG
         MVC   S99TUPAR(8),DA08DDN
         B     IN08DDX
*
*              DDNAME NOT SPECIFIED
*
IN08DDR  LA    R15,DALRTDDN
         STH   R15,S99TUKEY
         LA    R15,1
         STH   R15,S99TUNUM
         LA    R15,8
         STH   R15,S99TULNG
         MVC   S99TUPAR(8),=CL8' '
         MVI   WKDDRET,C'R'
IN08DDX  EQU   *
*
*              PROCESS DSNAME
*
         LA    R4,WK99TXDS
         ST    R4,WK99TUDS
         CLI   WKDSRET,0           IS DSNAME POINTER PRESENT
         BE    IN08DSR             NO, BRANCH
         CLI   DSNAME,C' '         YES, IS IT 44 BLANKS
         BE    IN08DSR             YES, BRANCH
*
*              DSNAME IS SPECIFIED
*
         LA    R15,DALDSNAM
         STH   R15,S99TUKEY
         LA    R15,1
         STH   R15,S99TUNUM
         LH    R15,DSNAMEL
         STH   R15,S99TULNG
         MVC   S99TUPAR(44),DSNAME
         B     IN08DSX
*
*              PROCESS RETURN-DSNAME
*
IN08DSR  LA    R15,DALRTDSN
         STH   R15,S99TUKEY
         LA    R15,1
         STH   R15,S99TUNUM
         LA    R15,44
         STH   R15,S99TULNG
         MVI   S99TUPAR,C' '
         MVC   S99TUPAR+1(43),S99TUPAR
IN08DSX  EQU   *
*
*              PROCESS MEMBER
*
         CLI   DA08MNM,X'40'
         BE    IN08MEX
         LA    R4,WK99TXME
         ST    R4,WK99TUME
         LA    R15,DALMEMBR
         STH   R15,S99TUKEY
         LA    R15,1
         STH   R15,S99TUNUM
         LA    R15,8
         STH   R15,S99TULNG
         MVC   S99TUPAR(8),DA08MNM
IN08MEX  EQU   *
*
*              PROCESS UNIT
*
         CLI   DA08UNIT,X'40'
         BE    IN08UNX
         LA    R4,WK99TXUN
         ST    R4,WK99TUUN
         LA    R15,DALUNIT
         STH   R15,S99TUKEY
         LA    R15,1
         STH   R15,S99TUNUM
         LA    R15,8
         STH   R15,S99TULNG
         MVC   S99TUPAR(8),DA08UNIT
IN08UNX  EQU   *
*
*              PROCESS VOLUME SERIAL
*
         CLI   DA08SER,X'40'
         BE    IN08VOX
         TM    DE08CTLX,DE08MSVG
         BO    IN08VOX
         LA    R4,WK99TXVL
         ST    R4,WK99TUVL
         LA    R15,DALVLSER
         STH   R15,S99TUKEY
         LA    R15,1
         STH   R15,S99TUNUM
         LA    R15,6
         STH   R15,S99TULNG
         MVC   S99TUPAR(6),DA08SER
IN08VOX  EQU   *
*
*              PROCESS STATUS (OLD, SHR, NEW, MOD)
*
         LA    R4,WK99TXD1
         ST    R4,WK99TUD1
         LA    R15,DALSTATS
         STH   R15,S99TUKEY
         LA    R15,1
         STH   R15,S99TUNUM
         LA    R15,1
         STH   R15,S99TULNG
         MVC   S99TUPAR(1),DA08DSP1
         CLI   S99TUPAR,0          IS IT ZEROES
         BNE   *+8                 NO
         MVI   S99TUPAR,1          YES, MAKE IT OLD
*
*              PROCESS NORMAL DISP (KEEP, DELETE, CATLG, UNCAT)
*
         CLI   DA08DPS2,0
         BE    IN08D2X
         LA    R4,WK99TXD2
         ST    R4,WK99TUD2
         LA    R15,DALNDISP
         STH   R15,S99TUKEY
         LA    R15,1
         STH   R15,S99TUNUM
         LA    R15,1
         STH   R15,S99TULNG
         MVC   S99TUPAR(1),DA08DPS2
IN08D2X  EQU   *
*
*              PROCESS CONDITIONAL DISP
*
         CLI   DA08DPS3,0
         BE    IN08D3X
         LA    R4,WK99TXD3
         ST    R4,WK99TUD3
         LA    R15,DALCDISP
         STH   R15,S99TUKEY
         LA    R15,1
         STH   R15,S99TUNUM
         LA    R15,1
         STH   R15,S99TULNG
         MVC   S99TUPAR(1),DA08DPS3
IN08D3X  EQU   *
*
*              PROCESS ATTRIBUTE LIST NAME
*
         TM    DA08CTL,DA08ATRL    IS ATTRIBUTE NAME PRESENT
         BZ    IN08ATX             NO, BRANCH
         LA    R4,WK99TXAT
         ST    R4,WK99TUAT
         LA    R15,DALDCBDD
         STH   R15,S99TUKEY
         LA    R15,1
         STH   R15,S99TUNUM
         LA    R15,8               SET LENGTH INITIALLY TO 8
*        LA    R1,DA08ALN+7 POINT TO 8TH CHAR OF NAME
*IN08ATL CLI   0(R1),X'40'         BLANK?
*        BNE   IN08ATS             NO - BRANCH TO STORE LENGTH
*        BCTR  R15,0               YES - DECREMENT LENGTH BY 1
*        BCT   R1,IN08ATL          POINT BACK 1 CHAR AND BRANCH
IN08ATS  STH   R15,S99TULNG
         MVC   S99TUPAR(8),DA08ALN
IN08ATX  EQU   *
*
*              PROCESS PASSWORD
*
         CLI   DA08PSWD,X'40'
         BE    IN08PWX
         LA    R4,WK99TXPW
         ST    R4,WK99TUPW
         LA    R15,DALPASSW
         STH   R15,S99TUKEY
         LA    R15,1
         STH   R15,S99TUNUM
         LA    R15,8
         STH   R15,S99TULNG
         MVC   S99TUPAR(8),DA08PSWD
IN08PWX  EQU   *
*
*              PROCESS DUMMY
*
         TM    DA08CTL,DA08DMMY
         BZ    IN08DMX
         LA    R4,WK99TXDM
         ST    R4,WK99TUDM
         LA    R15,DALDUMMY
         STH   R15,S99TUKEY
         LA    R15,0
         STH   R15,S99TUNUM
*
*              BYPASS SPACE PARAMETERS IF DUMMY
*
         B     IN08SPCX
IN08DMX  EQU   *
*
*              BYPASS SPACE PARAMETERS IF NOT NEW OR MOD
*
         CLI   DA08DSP1,DA08NEW
         BE    IN08SPC
         CLI   DA08DSP1,DA08MOD
         BNE   IN08SPCX
IN08SPC  EQU   *
         MVC   SV08BLK,DA08BLK     COPY
         MVC   SV08PQTY,DA08PQTY    SPACE INFO
         MVC   SV08SQTY,DA08SQTY     INTO AREA
         MVC   SV08DQTY,DA08DQTY      COMMON WITH
         MVC   SV08CTL,DA08CTL         DEFAULT SPACE
         NI    SV08CTL,DA08CYLS+DA08RLSE LEAVE ONLY THESE BITS
*
*              IF SPACE TYPE IS SPECIFIED, FORCE THE USE OF
*              DA08PQTY, EVEN IF IT IS ZERO.  THIS LOGIC
*              IS DIFFERENT FROM IKJDAIR, WHICH DOES NOT ALLOW
*              ZERO SPACE ALLOCATIONS.
*
         TM    DA08CTL,DA08TRKS+DA08ABKL
         BNZ   IN08PQ
*
*              IF PRIMARY SPACE IS NONZERO, GO PROCESS PQTY
*
         CLC   DA08PQTY+1(3),=XL3'00'
         BNE   IN08PQ
*
*              IF PRIMARY AND DIR ARE ZERO, LET SVC 99 GET DEFAULTS.
*
         CLC   DA08DQTY+1(3),=XL3'00'
         BE    IN08SPCX            BYPASS SPACE, LET SVC 99 DO IT.
*
*              PRIMARY SPACE IS ZERO, BUT DIRECTORY IS NOT.
*              IKJDAIR LOADS 'IEFAB445' TO GET DEFAULT SPACE VALUES.
*              WE CHOSE TO CODE THAT INFORMATION IN THIS
*              MODULE INSTEAD, IN THE SAME FORMAT AS IEFAB445.
*
         OI    DEFPTR,X'80'        INDICATE DEFAULTS PRESENT
         MVC   SV08BLK+1(3),DEFDRLH
         MVC   SV08PQTY+1(3),DEFPQTY
         MVC   SV08SQTY+1(3),DEFSQTY
         MVC   SV08DQTY,DA08DQTY   USE SPECIFIED DQTY
         MVI   SV08CTL,0
         TM    DEFTYPE,DEFTRK
         BNO   *+8
         OI    SV08CTL,DA08TRKS
         TM    DEFTYPE,DEFCYL
         BNO   *+8
         OI    SV08CTL,DA08CYLS
         TM    DEFTYPE,DEFBLK
         BNO   *+8
         OI    SV08CTL,DA08ABKL
         TM    DEFTYPE,DEFRLSE
         BNO   *+8
         OI    SV08CTL,DA08RLSE
         TM    DEFTYPE,DEFCNTIG
         BNO   *+8
         OI    SV08CTL,X'08'
         TM    DEFTYPE,DEFMIXG
         BNO   *+8
         OI    SV08CTL,X'04'
         TM    DEFTYPE,DEFALX
         BNO   *+8
         OI    SV08CTL,X'02'
         TM    DEFTYPE,DEFRND
         BNO   *+8
         OI    SV08CTL,X'01'
*
*              PRIMARY SPACE IS NONZERO OR SPACE TYPE IS SPECIFIED
*
IN08PQ   LA    R4,WK99TXSP
         ST    R4,WK99TUSP
         LA    R15,DALPRIME
         STH   R15,S99TUKEY
         LA    R15,1
         STH   R15,S99TUNUM
         LA    R15,3
         STH   R15,S99TULNG
         MVC   S99TUPAR(3),SV08PQTY+1
*
*              PROCESS SECONDARY SPACE
*
         CLC   SV08SQTY+1(3),=XL3'00'
         BE    IN08S2X
         LA    R4,WK99TXS2
         ST    R4,WK99TUS2
         LA    R15,DALSECND
         STH   R15,S99TUKEY
         LA    R15,1
         STH   R15,S99TUNUM
         LA    R15,3
         STH   R15,S99TULNG
         MVC   S99TUPAR(3),SV08SQTY+1
IN08S2X  EQU   *
*
*              PROCESS DIRECTORY BLOCKS
*
         CLC   SV08DQTY+1(3),=XL3'00'
         BE    IN08DIX
         LA    R4,WK99TXDI
         ST    R4,WK99TUDI
         LA    R15,DALDIR
         STH   R15,S99TUKEY
         LA    R15,1
         STH   R15,S99TUNUM
         LA    R15,3
         STH   R15,S99TULNG
         MVC   S99TUPAR(3),SV08DQTY+1
IN08DIX  EQU   *
*
*              DETERMINE SPACE TYPE
*
         TM    SV08CTL,DA08TRKS+DA08ABKL
         BZ    IN08TYX             BRANCH IF BOTH OFF
         LA    R15,DALCYL          IN CYLINDERS
         BO    IN08TY0             BRANCH IF BOTH ON
         LA    R15,DALTRK          IN TRACKS
         TM    SV08CTL,DA08TRKS
         BO    IN08TY0
*
*              PROCESS SPACE TYPE (AVERAGE BLOCK)
*
         LA    R4,WK99TXTY
         ST    R4,WK99TUTY
         LA    R15,DALBLKLN        IN AVERAGE BLOCKS
         STH   R15,S99TUKEY
         LA    R15,1
         STH   R15,S99TUNUM
         LA    R15,3
         STH   R15,S99TULNG
         MVC   S99TUPAR(3),SV08BLK+1
         B     IN08TYX
*
*              PROCESS SPACE TYPE (CYL OR TRK)
*
IN08TY0  LA    R4,WK99TXTY
         ST    R4,WK99TUTY
         STH   R15,S99TUKEY
         LA    R15,0
         STH   R15,S99TUNUM
IN08TYX  EQU   *
*
IN08SPCX EQU   *
*
*              IF NEW-OR-MOD AND ATRL.EQ.0 AND BLK.NE.0
*              THEN SET UP DCB BLKSIZE
*
         CLI   DA08DSP1,DA08NEW
         BE    IN08BK1
         CLI   DA08DSP1,DA08MOD
         BNE   IN08BKX
IN08BK1  TM    DA08CTL,DA08ATRL    IS THERE AN ATTRIBUTE LIST
         BO    IN08BKX             YES, BYPASS
         CLC   DA08BLK+2(2),=XL2'00' IS BLOCKS(SIZE) SPECIFIED
         BE    IN08BKX             YES, BYPASS
         CLC   DE08BLKS,=XL2'00'   IS DCB BLKSIZE SPECIFIED
         BE    IN08BKX             YES, BYPASS
*
*              DCB BLKSIZE FOR AVERAGE BLOCK WITHOUT ATTRIBUTE
*
         LA    R4,WK99TXBK
         ST    R4,WK99TUBK
         LA    R15,DALBLKSZ        DCB BLKSIZE
         STH   R15,S99TUKEY
         LA    R15,1
         STH   R15,S99TUNUM
         LA    R15,2
         STH   R15,S99TULNG
         MVC   S99TUPAR(2),DA08BLK+2
IN08BKX  EQU   *
*
*              PROCESS PERMANENTLY ALLOC
*
         TM    DA08CTL,DA08PERM
         BZ    IN08PEX
         LA    R4,WK99TXPE
         ST    R4,WK99TUPE
         LA    R15,DALPERMA
         STH   R15,S99TUKEY
         LA    R15,0
         STH   R15,S99TUNUM
IN08PEX  EQU   *
*
*              PROCESS RLSE
*
         TM    DEFPTR,X'80'        WERE DEFAULTS USED
         BZ    IN08RL1             NO, BRANCH
         TM    SV08CTL,DA08RLSE    YES, WAS RLSE IN DEFAULTS
         BO    IN08RLS             YES, BRANCH
         B     IN08RLX             NO, BYPASS
IN08RL1  TM    DA08CTL,DA08RLSE    RLSE SPECIFIED BY CALLER
         BZ    IN08RLX             NO, BRANCH
IN08RLS  LA    R4,WK99TXRL
         ST    R4,WK99TURL
         LA    R15,DALRLSE
         STH   R15,S99TUKEY
         LA    R15,0
         STH   R15,S99TUNUM
IN08RLX  EQU   *
*
*              PROCESS MSVGP
*
         TM    DE08CTLX,DE08MSVG
         BZ    IN08MSX
         CLI   DA08SER,X'40'
         BE    IN08MSX
         LA    R4,WK99TXMS
         ST    R4,WK99TUMS
         LA    R15,DALMSVGP
         STH   R15,S99TUKEY
         LA    R15,1
         STH   R15,S99TUNUM
         LA    R15,8
         STH   R15,S99TULNG
         MVC   S99TUPAR(8),DA08SER
IN08MSX  EQU   *
*
*              DCB DSORG
*
         CLI   DE08DSOR,0
         BE    IN08DSOX
         LA    R4,WK99TXDO
         ST    R4,WK99TUDO
         LA    R15,DALDSORG        DCB DSORG
         STH   R15,S99TUKEY
         LA    R15,1
         STH   R15,S99TUNUM
         LA    R15,2
         STH   R15,S99TULNG
         MVC   S99TUPAR(2),DE08DSOR
IN08DSOX EQU   *
*
*              DCB RECFM
*
         CLI   DE08RECF,0
         BE    IN08RECX
         LA    R4,WK99TXRF
         ST    R4,WK99TURF
         LA    R15,DALRECFM        DCB RECFM
         STH   R15,S99TUKEY
         LA    R15,1
         STH   R15,S99TUNUM
         LA    R15,1
         STH   R15,S99TULNG
         MVC   S99TUPAR(1),DE08RECF
IN08RECX EQU   *
*
*              DCB LRECL
*
         CLC   DE08LREC,=XL2'00'
         BE    IN08LREX
         LA    R4,WK99TXLR
         ST    R4,WK99TULR
         LA    R15,DALLRECL        DCB LRECL
         STH   R15,S99TUKEY
         LA    R15,1
         STH   R15,S99TUNUM
         LA    R15,2
         STH   R15,S99TULNG
         MVC   S99TUPAR(2),DE08LREC
IN08LREX EQU   *
*
*              DCB BLKSIZE
*
         CLC   DE08BLKS,=XL2'00'
         BE    IN08BLKX
         LA    R4,WK99TXBK
         ST    R4,WK99TUBK
         LA    R15,DALBLKSZ        DCB BLKSIZE
         STH   R15,S99TUKEY
         LA    R15,1
         STH   R15,S99TUNUM
         LA    R15,2
         STH   R15,S99TULNG
         MVC   S99TUPAR(2),DE08BLKS
IN08BLKX EQU   *
*
*               TAPE DATA SET SEQUENCE NUMBER
*
         CLC   DE08POS,=XL2'00'
         BE    IN08POSX
         LA    R4,WK99TXPO
         ST    R4,WK99TUPO
         LA    R15,DALDSSEQ        DATA SET SEQUENCE NUMBER
         STH   R15,S99TUKEY
         LA    R15,1
         STH   R15,S99TUNUM
         LA    R15,2
         STH   R15,S99TULNG
         MVC   S99TUPAR(2),DE08POS  MAX VALUE H'9999'
IN08POSX EQU   *
*
*               TAPE LABEL TYPE
*
         CLI   DE08LABL,0
         BE    IN08LBLX
         LA    R4,WK99TXLB
         ST    R4,WK99TULB
         LA    R15,DALLABEL        LABEL TYPE
         STH   R15,S99TUKEY
         LA    R15,1
         STH   R15,S99TUNUM
         LA    R15,1
         STH   R15,S99TULNG
         MVC   S99TUPAR(1),DE08LABL
IN08LBLX EQU   *
*
*               TAPE DENSITY
*
         CLI   DE08DEN,0
         BE    IN08DENX
         LA    R4,WK99TXDN
         ST    R4,WK99TUDN
         LA    R15,DALDEN          TAPE DENSITY
         STH   R15,S99TUKEY
         LA    R15,1
         STH   R15,S99TUNUM
         LA    R15,1
         STH   R15,S99TULNG
         MVC   S99TUPAR(1),DE08DEN
IN08DENX EQU   *
*
*               EXPIRATION DATE
*
         CLC   DE08EXPD,=XL3'00'
         BE    IN08EXPX
         LA    R4,WK99TXEX
         ST    R4,WK99TUEX
         LA    R15,DALEXPDT        EXPIRATION DATE
         STH   R15,S99TUKEY
         LA    R15,1
         STH   R15,S99TUNUM
         LA    R15,5
         STH   R15,S99TULNG
         SLR   R0,R0
         IC    R0,DE08EXYR         YY
         CVD   R0,DOUBLE
         OI    DOUBLE+7,X'0F'
         UNPK  S99TUPAR(2),DOUBLE+6(2)
         LH    R0,DE08EXJD         DDD
         CVD   R0,DOUBLE
         OI    DOUBLE+7,X'0F'
         UNPK  S99TUPAR+2(3),DOUBLE+6(2)
IN08EXPX EQU   *
         DROP  R3                  DAPB08
         B     ALLOC
         SPACE
         LTORG
         EJECT
***********************************************************************
*
*         DAIR 1C - TERMINAL ALLOCATION
*
***********************************************************************
         SPACE
IN1C     DC    0H'0'
         USING DAPB1C,R3
         SPACE
         TM    DA1CCTL,DA1CATRL    ATTRIBUTE NAME PRESENT
         BZ    IN1CATOK            NO, BRANCH
         CLI   DA1CALN,C' '        YES, IS IT BLANK
         BE    EXIT4               YES, ERROR
IN1CATOK EQU   *
*
*              PROCESS TERMINAL
*
         LA    R4,WK99TXTE
         ST    R4,WK99TUTE
         LA    R15,DALTERM
         STH   R15,S99TUKEY
         LA    R15,0
         STH   R15,S99TUNUM
*
*              PROCESS DDNAME
*
         MVI   WKDDRET,0
         LA    R4,WK99TXDD
         ST    R4,WK99TUDD
         CLI   DA1CDDN,X'40'       DD TO BE RETURNED?
         BE    IN1CDDR             YES - BRANCH
*
*              DDNAME IS SPECIFIED
*
         LA    R15,DALDDNAM
         STH   R15,S99TUKEY
         LA    R15,1
         STH   R15,S99TUNUM
         LA    R15,8
         STH   R15,S99TULNG
         MVC   S99TUPAR(8),DA1CDDN
         B     IN1CDDX
*
*              DDNAME NOT SPECIFIED
*
IN1CDDR  LA    R15,DALRTDDN
         STH   R15,S99TUKEY
         LA    R15,1
         STH   R15,S99TUNUM
         LA    R15,8
         STH   R15,S99TULNG
         MVC   S99TUPAR(8),=CL8' '
         MVI   WKDDRET,C'R'
IN1CDDX  EQU   *
*
*              PROCESS ATTRIBUTE LIST NAME
*
         TM    DA1CCTL,DA1CATRL    IS ATTRIBUTE NAME PRESENT
         BZ    IN1CNOAT            NO, BRANCH
         LA    R4,WK99TXAT
         ST    R4,WK99TUAT
         LA    R15,DALDCBDD
         STH   R15,S99TUKEY
         LA    R15,1
         STH   R15,S99TUNUM
         LA    R15,8
         STH   R15,S99TULNG
         MVC   S99TUPAR(8),DA1CALN
IN1CNOAT EQU   *
*
*              PROCESS PERMANENTLY ALLOC
*
         TM    DA1CCTL,DA1CPERM
         BZ    IN1CNOPE
         LA    R4,WK99TXPE
         ST    R4,WK99TUPE
         LA    R15,DALPERMA
         STH   R15,S99TUKEY
         LA    R15,0
         STH   R15,S99TUNUM
IN1CNOPE EQU   *
*
*              DCB RECFM
*
         CLI   DE1CRECF,0
         BE    IN1CRECX
         LA    R4,WK99TXRF
         ST    R4,WK99TURF
         LA    R15,DALRECFM        DCB RECFM
         STH   R15,S99TUKEY
         LA    R15,1
         STH   R15,S99TUNUM
         LA    R15,1
         STH   R15,S99TULNG
         MVC   S99TUPAR(2),DE1CRECF
IN1CRECX EQU   *
*
*              DCB LRECL
*
         CLC   DE1CLREC,=XL2'00'
         BE    IN1CLREX
         LA    R4,WK99TXLR
         ST    R4,WK99TULR
         LA    R15,DALLRECL        DCB LRECL
         STH   R15,S99TUKEY
         LA    R15,1
         STH   R15,S99TUNUM
         LA    R15,2
         STH   R15,S99TULNG
         MVC   S99TUPAR(2),DE1CLREC
IN1CLREX EQU   *
*
*              DCB BLKSIZE
*
         CLC   DE1CBLKS,=XL2'00'
         BE    IN1CBLKX
         LA    R4,WK99TXBK
         ST    R4,WK99TUBK
         LA    R15,DALBLKSZ        DCB BLKSIZE
         STH   R15,S99TUKEY
         LA    R15,1
         STH   R15,S99TUNUM
         LA    R15,2
         STH   R15,S99TULNG
         MVC   S99TUPAR(2),DE1CBLKS
IN1CBLKX EQU   *
         DROP  R3                  DAPB1C
         B     ALLOC
         SPACE
         LTORG
         EJECT
***********************************************************************
*
*         DAIR 30 - SYSOUT ALLOCATION
*
***********************************************************************
         SPACE
IN30     DC    0H'0'
         USING DAPB30,R3
         SPACE
         TM    DA30CTL,DA30ATRL    ATTRIBUTE NAME PRESENT
         BZ    IN30ATOK            NO, BRANCH
         CLI   DA30ALN,C' '        YES, IS IT BLANK
         BE    EXIT4               YES, ERROR
IN30ATOK EQU   *
         SPACE
         MVI   WKDSRET,0
         L     R14,DA30PDSN        POINTER TO DSNAME
         LTR   R14,R14             IS DSNAME PRESENT
         BZ    IN30DSOK            NO, BRANCH
         CLC   0(2,R14),=H'44'     YES, IS ITS LENGTH 44
         BNE   EXIT4               NO, ERROR
         CLI   2(R14),X'40'        IS IT BLANK
         BNE   EXIT4               NO, ERROR
         MVI   WKDSRET,C'R'        YES, INDICATE RETURN DSNAME
IN30DSOK EQU   *
         SPACE
         CLI   DA30UNIT,0
         BE    EXIT4
         SPACE
*
*              PROCESS RETURN-DSNAME
*
         CLI   WKDSRET,C'R'
         BNE   IN30NODS
         LA    R4,WK99TXDS
         ST    R4,WK99TUDS
         LA    R15,DALRTDSN
         STH   R15,S99TUKEY
         LA    R15,1
         STH   R15,S99TUNUM
         LA    R15,44
         STH   R15,S99TULNG
         MVI   S99TUPAR,C' '
         MVC   S99TUPAR+1(43),S99TUPAR
IN30NODS EQU   *
*
*              PROCESS DDNAME
*
         MVI   WKDDRET,0
         LA    R4,WK99TXDD
         ST    R4,WK99TUDD
         CLI   DA30DDN,X'40'       DD TO BE RETURNED?
         BE    IN30DDR             YES - BRANCH
*
*              DDNAME IS SPECIFIED
*
         LA    R15,DALDDNAM
         STH   R15,S99TUKEY
         LA    R15,1
         STH   R15,S99TUNUM
         LA    R15,8
         STH   R15,S99TULNG
         MVC   S99TUPAR(8),DA30DDN
         B     IN30SO
*
*              DDNAME NOT SPECIFIED
*
IN30DDR  LA    R15,DALRTDDN
         STH   R15,S99TUKEY
         LA    R15,1
         STH   R15,S99TUNUM
         LA    R15,8
         STH   R15,S99TULNG
         MVC   S99TUPAR(8),=CL8' '
         MVI   WKDDRET,C'R'
*
*              PROCESS SYSOUT CLASS
*
IN30SO   LA    R4,WK99TXSO
         ST    R4,WK99TUSO
         LA    R15,DALSYSOU
         STH   R15,S99TUKEY
         LA    R15,1
         STH   R15,S99TUNUM
         LA    R15,1
         STH   R15,S99TULNG
         MVC   S99TUPAR(1),DA30OCLS
         CLI   DA30OCLS,X'40'      CLASS SPECIFIED?
         BE    IN30NOSO            NO - BRANCH
         CLI   DA30OCLS,X'00'      CLASS SPECIFIED?
         BNE   IN30SOX             YES - BRANCH
IN30NOSO SR    R15,R15             INDICATE NULL ENTRY
         STH   R15,S99TUNUM         FOR THIS KEY
IN30SOX  EQU   *
*
*              PROCESS PROGRAM NAME OR INTRDR
*
         CLI   DA30PGNM,X'40'
         BE    IN30NOPG
         CLI   DA30PGNM,X'00'
         BE    IN30NOPG
         LA    R4,WK99TXPG
         ST    R4,WK99TUPG
         LA    R15,DALSPGNM
         STH   R15,S99TUKEY
         LA    R15,1
         STH   R15,S99TUNUM
         LA    R15,8               SET LENGTH INITIALLY TO 8
         LA    R1,DA30PGNM+7 POINT TO 8TH CHAR OF NAME
IN30PGLP CLI   0(R1),X'40'         BLANK?
         BNE   IN30PGLN            NO - BRANCH TO STORE LENGTH
         BCTR  R15,0               YES - DECREMENT LENGTH BY 1
         BCT   R1,IN30PGLP         POINT BACK 1 CHAR AND BRANCH
IN30PGLN STH   R15,S99TULNG
         MVC   S99TUPAR(8),DA30PGNM
IN30NOPG EQU   *
*
*              PROCESS ATTRIBUTE LIST NAME
*
         TM    DA30CTL,DA30ATRL    IS ATTRIBUTE NAME PRESENT
         BZ    IN30NOAT            NO, BRANCH
         LA    R4,WK99TXAT
         ST    R4,WK99TUAT
         LA    R15,DALDCBDD
         STH   R15,S99TUKEY
         LA    R15,1
         STH   R15,S99TUNUM
         LA    R15,8               SET LENGTH INITIALLY TO 8
         LA    R1,DA30ALN+7 POINT TO 8TH CHAR OF NAME
IN30ATLP CLI   0(R1),X'40'         BLANK?
         BNE   IN30ATLN            NO - BRANCH TO STORE LENGTH
         BCTR  R15,0               YES - DECREMENT LENGTH BY 1
         BCT   R1,IN30ATLP         POINT BACK 1 CHAR AND BRANCH
IN30ATLN STH   R15,S99TULNG
         MVC   S99TUPAR(8),DA30ALN
IN30NOAT EQU   *
*
*              PROCESS FORM
*
         CLI   DA30FORM,X'40'      FORM?
         BE    IN30NOFO            NO - BRANCH
         CLI   DA30FORM,X'00'      FORM?
         BE    IN30NOFO
         LA    R4,WK99TXFO
         ST    R4,WK99TUFO
         LA    R15,DALSFMNO
         STH   R15,S99TUKEY
         LA    R15,1
         STH   R15,S99TUNUM
         LA    R15,4
         STH   R15,S99TULNG
         MVC   S99TUPAR(4),DA30FORM
IN30NOFO EQU   *
*
*              PROCESS PERMANENTLY ALLOC
*
         TM    DA30CTL,DA30PERM
         BZ    IN30NOPE
         LA    R4,WK99TXPE
         ST    R4,WK99TUPE
         LA    R15,DALPERMA
         STH   R15,S99TUKEY
         LA    R15,0
         STH   R15,S99TUNUM
IN30NOPE EQU   *
*
*              PROCESS COPIES
*
         CLI   DE30CPYS,1          IS COPIES ZERO OR 1
         BNH   IN30NOCO            YES, DO NOT SPECIFY COPIES
         LA    R4,WK99TXCO
         ST    R4,WK99TUCO
         LA    R15,DALCOPYS
         STH   R15,S99TUKEY
         LA    R15,1
         STH   R15,S99TUNUM
         LA    R15,1               SVC99 ONLY ALLOWS 1 BYTE.
         STH   R15,S99TULNG
         MVC   S99TUPAR(1),DE30CPYS
IN30NOCO EQU   *
*
*              PROCESS DEST
*
         CLI   DE30DEST,X'40'      DEST?
         BE    IN30NODE            NO - BRANCH
         CLI   DE30DEST,X'00'      DEST?
         BE    IN30NODE            NO - BRANCH
         LA    R4,WK99TXDE
         ST    R4,WK99TUDE
         LA    R15,DALSUSER
         STH   R15,S99TUKEY
         LA    R15,1
         STH   R15,S99TUNUM
         LA    R15,8
         STH   R15,S99TULNG
         MVC   S99TUPAR(8),DE30DEST
IN30NODE EQU   *
*
*              PROCESS HOLD
*
         TM    DE30CTLX,DE30HOLD   HOLD?
         BZ    IN30NOHO            NO - BRANCH
         LA    R4,WK99TXHO
         ST    R4,WK99TUHO
         LA    R15,DALSHOLD
         STH   R15,S99TUKEY
         LA    R15,0
         STH   R15,S99TUNUM
IN30NOHO EQU   *
*
*              PROCESS FREE=CLOSE
*
         CLC   DA30PGNM,=CL8'INTRDR' IF INTERNAL READER
         BE    IN30FR              THEN FORCE FREE=CLOSE
         TM    DE30CTLX,DE30FC     FREE=CLOSE REQUESTED?
         BZ    IN30NOFR            NO - BRANCH
IN30FR   LA    R4,WK99TXFC
         ST    R4,WK99TUFC
         LA    R15,DALCLOSE
         STH   R15,S99TUKEY
         LA    R15,0
         STH   R15,S99TUNUM
IN30NOFR EQU   *
*
*              PROCESS FCB
*
         CLI   DE30FCB,X'40'       FCB?
         BE    IN30NOFC            NO - BRANCH
         CLI   DE30FCB,X'00'       FCB?
         BE    IN30NOFC            NO - BRANCH
         LA    R4,WK99TXFC
         ST    R4,WK99TUFC
         LA    R15,DALFCBIM
         STH   R15,S99TUKEY
         LA    R15,1
         STH   R15,S99TUNUM
         LA    R15,4
         STH   R15,S99TULNG
         MVC   S99TUPAR(4),DE30FCB
IN30NOFC EQU   *
*
*              PROCESS OTHER THINGS
*
         SPACE
*              UNLIKE IKJDAIR, THIS PROGRAM IGNORES THE
*              DA30UNIT FIELD, ALL FIELDS RELATED TO SPACE
*              (PRIMARY, SECONDARY, TRKS, ABKL, RLSE)
*              AND THE DUMMY FLAG.
         SPACE
*
*              DCB RECFM
*
         CLI   DE30RECF,0
         BE    IN30RECX
         LA    R4,WK99TXRF
         ST    R4,WK99TURF
         LA    R15,DALRECFM        DCB RECFM
         STH   R15,S99TUKEY
         LA    R15,1
         STH   R15,S99TUNUM
         LA    R15,1
         STH   R15,S99TULNG
         MVC   S99TUPAR(2),DE30RECF
IN30RECX EQU   *
*
*              DCB LRECL
*
         CLC   DE30LREC,=XL2'00'
         BE    IN30LREX
         LA    R4,WK99TXLR
         ST    R4,WK99TULR
         LA    R15,DALLRECL        DCB LRECL
         STH   R15,S99TUKEY
         LA    R15,1
         STH   R15,S99TUNUM
         LA    R15,2
         STH   R15,S99TULNG
         MVC   S99TUPAR(2),DE30LREC
IN30LREX EQU   *
*
*              DCB BLKSIZE
*
         CLC   DE30BLKS,=XL2'00'
         BE    IN30BLKX
         LA    R4,WK99TXBK
         ST    R4,WK99TUBK
         LA    R15,DALBLKSZ        DCB BLKSIZE
         STH   R15,S99TUKEY
         LA    R15,1
         STH   R15,S99TUNUM
         LA    R15,2
         STH   R15,S99TULNG
         MVC   S99TUPAR(2),DE30BLKS
IN30BLKX EQU   *
         DROP  R3                  DAPB30
         EJECT
***********************************************************************
*                                                                     *
*              ALLOCATE                                               *
*                                                                     *
***********************************************************************
         SPACE
ALLOC    LA    R1,WK99RBP
         SVC   99
*
*              TEST RETURN CODE
*
         LTR   R15,R15             WAS IT SUCCESSFUL
         BNZ   FAILED              NO, BRANCH
         SPACE
         USING DAPB08,R3
         CLI   1(R3),X'08'         IS THIS DA08
         BNE   RETORGX             NO, BRANCH
         LA    R4,WK99TXRO
         MVC   DA08DSO,S99TUPAR    RETURN 1 BYTE OF DSORG
RETORGX  EQU   *
         SPACE
         CLI   WKDSRET,C'R'        DSNAME TO BE RETURNED?
         BNE   IN08RDSX            NO - BRANCH
         LA    R4,WK99TXDS
         L     R15,DA08PDSN        OR DA30PDSN
         LH    R14,S99TULNG
         STH   R14,0(,R15)         RETURN LENGTH
         BCTR  R14,0               LENGTH MINUS 1 FOR EX
         B     *+10
         MVC   2(0,R15),S99TUPAR   (EXECUTED)
         EX    R14,*-6             MOVE DSNAME
         SR    R15,R15
IN08RDSX EQU   *
         SPACE
         CLI   WKDDRET,C'R'        DDNAME TO BE RETURNED?
         BNE   IN08RDDX
         LA    R4,WK99TXDD
         LA    R1,DA08DDN          OR DA30DDN
         CLI   1(R3),X'1C'         IS THIS DA1C
         BNE   *+8                 NO, SKIP NEXT INSTRUCTION
         LA    R1,DA1CDDN-DAPB1C(,R3) YES, POINT TO DA1CDDN
         MVC   0(8,R1),=CL8' '     PAD DAXXDDN WITH BLANKS
         LH    R14,S99TULNG
         BCTR  R14,0               LENGTH MINUS 1 FOR EX
         B     *+10
         MVC   0(0,R1),S99TUPAR    (EXECUTED)
         EX    R14,*-6             MOVE DDNAME
IN08RDDX EQU   *
         SPACE
         CLI   1(R3),X'08'         IS THIS DA08
         BNE   EXIT0               NO, BRANCH
         CLI   DA08MNM,C' '        WAS MEMBER SPECIFIED
         BE    EXIT0               NO, BRANCH
         TM    DA08DSO,DSORGPO     IS DSORG PO (OR POU)
         BO    EXIT0               YES, BRANCH
*
*               MEMBER SPECIFIED FOR NON-PDS.  UNALLOCATE IT.
*
         LA    R14,WK99RB
         USING S99RB,R14
         MVI   S99VERB,S99VRBUN
         LA    R1,WK99FREE
         ST    R1,S99TXTPP
         DROP  R14                 S99RB
*
         LA    R4,WK99FXDD
         ST    R4,WK99FREE
         LA    R15,DUNDDNAM
         STH   R15,S99TUKEY
         LA    R15,1
         STH   R15,S99TUNUM
         LA    R15,8
         STH   R15,S99TULNG
         MVC   S99TUPAR(8),DA08DDN
*
         LA    R4,WK99FXDD
         ST    R4,WK99FREE+4
         LA    R15,DUNREMOV
         STH   R15,S99TUKEY
         LA    R15,0
         STH   R15,S99TUNUM
*
         OI    WK99FREE+4,X'80'
         LA    R1,WK99RBP
         SVC   99
         CLI   WKDDRET,C'R'        WAS DDNAME ORIGINALLY BLANK
         BNE   *+10                NO, BRANCH AROUND MVC
         MVC   DA08DDN,=CL8' '     YES, RESTORE THE BLANKS
         MVC   DA08DARC,=X'0330'   SET ERROR CODE IN DARC
         LA    R15,12
         B     EXIT
*
*         RETURN TO CALLER
*
EXIT4    LA    R15,4               RETURN CODE 4
         B     EXIT
EXIT0    SR    15,15               RETURN CODE ZERO
EXIT     LA    R0,@DATAL
         LA    R1,1                SUBPOOL
         SLL   R1,24               TO LEFT BYTE
         OR    R0,R1               OVER R0
         LR    R1,R13              AREA TO BE FREED
         L     R13,4(,R13)         RESTORE OLD R13
         LR    R2,R15              SAVE RETURN CODE
         FREEMAIN R,A=(1),LV=(0)
         LR    R15,R2              RESTORE RETURN CODE
         LM    0,12,20(R13)        RESTORE OLD REGISTERS
         L     R14,12(,R13)        RESTORE RETURN ADDRESS
         BR    R14                 RETURN
         SPACE 3
         LTORG
         DC    0D'0'
DEFAULTS DS    0CL21               FROM IEFAB445
DEFSPACE DS    0CL13
DEFPQTY  DC    AL3(10)
DEFSQTY  DC    AL3(50)
DEFDRLH  DC    AL3(1000)
DEFDQTY  DC    AL3(0)
DEFTYPE  DC    X'30'
DEFTRK   EQU   X'80'
DEFCYL   EQU   X'40'
DEFBLK   EQU   X'20'
DEFRLSE  EQU   X'10'
DEFCNTIG EQU   X'08'
DEFMIXG  EQU   X'04'
DEFALX   EQU   X'02'
DEFRND   EQU   X'01'
DEFUNIT  DC    CL8'SYSALLDA'
         DC    0D'0'
         EJECT
***********************************************************************
*
*         DAIR RETURN CODES AND ERROR CODES
*
***********************************************************************
*
*         DAIR RETURN CODES
*
*           0 - SUCCESS
*           4 - INVALID PARAMETER LIST
*           8 - ERROR IN CATALOG MANAGEMENT, CTRC
*          12 - ERROR IN DYNAMIC ALLOCATION, DARC
*          16 - NO TIOT ENTRIES AVAILABLE          FROM 043C, 0450
*          20 - DDNAME UNAVAILABLE                 FROM 0410
*          24 - DSN IS PART OF A CONCATENATION
*          28 - DD REFERBACK NOT FOUND             FROM 0454
*          32 - DATA REQUESTED AS NEW EXISTS       FROM 0448
*          36 - ERROR IN IKJEHCIR
*          40 - RETURN AREA FOR QUALIFIERS SMALL
*          44 - DATA SET FOUND BUT MARKED DELETE   FROM 044C
*          48 - RESERVED
*          52 - REQUEST DENIED BY EXIT IEFDB401    FROM RC=8
*
***********************************************************************
*
*         DAIR ERROR CODES (IN DAXXDARC)
*
*          0304 - DD NOT SPECIFIED
*          0308 - DD NOT FOUND
*          0314 - DECAT WOULD CAUSE DUPES      FROM 0424
*          0318 - INVALID DDNAME               FROM 035C FOR 0001
*          031C - INVALID MEMBER               FROM 035C FOR 0003
*          0320 - INVALID DSNAME               FROM 035C FOR 0002
*          0324 - INVALID SYSOUT PGM           FROM 035C FOR 0019
*          0328 - INVALID SYSOUT FORM          FROM 035C FOR 001A
*          032C - INVALID SYSOUT CLASS         FROM 035C FOR 0018
*          0330 - MEMBER SPECIFIED BUT NOT PDS
*          0334 - DSNAME LENGTH GT 44          FROM 037C FOR 0002
*          0338 - INVALID DISP                 FROM 035C FOR 0004,5,6
*
***********************************************************************
         EJECT
*
*               CONVERT ERROR CODES TO DAIR CODES
*
FAILED   CLI   1(R3),X'1C'         IS THIS A TYPE 1C
         BNE   FAILED30
         TM    DE1CCTLX-DAPB1C(R3),DE1CMSG
         BO    FAILMSG             YES, BRANCH
         B     FAILNMSG            NO, BYPASS MESSAGE
FAILED30 CLI   1(R3),X'30'         IS THIS A TYPE 30
         BNE   FAILED08
         TM    DE30CTLX-DAPB30(R3),DE30MSG
         BO    FAILMSG             YES, BRANCH
         B     FAILNMSG            NO, BYPASS MESSAGE
FAILED08 TM    DE08CTLX,DE08MSG    AUTOMATIC MESSAGE
         BZ    FAILNMSG            NO, BRANCH
FAILMSG  BAL   R8,PUTMSG           YES, CALL IKJEFF18
FAILNMSG LA    R14,WK99RB
         USING S99RB,R14
FAIL04   CH    R15,=H'4'           UNABLE TO ALLOCATE
         BNE   FAIL08
FAIL04A  CLC   S99ERROR,=X'0410'   RCDDUNAV
         BNE   FAIL04B
         LA    R15,20              RETURN CODE 20
         B     FAIL04X
FAIL04B  CLC   S99ERROR,=X'0424'   RCDCONDD, DECAT WOULD MAKE DUPLICATE
         BNE   FAIL04C
         MVC   DA08DARC,=X'0314'   DRDUPEDD
         LA    R15,12
         B     FAIL04X
FAIL04C  CLC   S99ERROR,=X'043C'   RCNTUNLC, DYNAMNBR TOO SMALL
         BE    FAIL04C1
         CLC   S99ERROR,=X'0450'   RCLIMITS, MORE THAN 1635
         BNE   FAIL04D
FAIL04C1 LA    R15,16              RETURN CODE 16
         B     FAIL04X
FAIL04D  CLC   S99ERROR,=X'0448'   RCNEWFND,
         BNE   FAIL04E
         LA    R15,32              RETURN CODE 32
         B     FAIL04X
FAIL04E  CLC   S99ERROR,=X'044C'   RCDELETE,
         BNE   FAIL04F
         LA    R15,44              RETURN CODE 44
         B     FAIL04X
FAIL04F  CLC   S99ERROR,=X'0454'   RCDCBRNF, ATTRIB DD NOT FOUND
         BNE   FAIL04G
         LA    R15,28              RETURN CODE 28
         B     FAIL04X
FAIL04G  CLI   S99ERROR,X'17'      LOCATE ERROR
         BE    FAIL04G1
         CLI   S99ERROR,X'57'      CATALOG ERROR
         BNE   FAIL04H
FAIL04G1 SLR   R1,R1
         IC    R1,S99ERROR+1
         STH   R1,DA08CTRC         CTRC
         LA    R15,8               RETURN CODE 8
         CLI   S99ERROR,X'17'      LOCATE
         BNE   FAIL04X
         MVC   DA08DARC,S99ERROR   DARC TOO IF LOCATE
         B     FAIL04X
FAIL04H  MVC   DA08DARC,S99ERROR   DARC SAME AS S99ERROR
         LA    R15,12              RETURN CODE 12
FAIL04X  B     EXIT
         SPACE
FAIL08   CH    R15,=H'8'           REQUEST DENIED BY EXIT
         BNE   FAIL12
         LA    R15,52              REQUEST DENIED
         B     EXIT
         SPACE
FAIL12   CH    R15,=H'12'          INVALID PARAMETER
         BNE   *+4
         CLC   S99ERROR,=X'035C'   RCINPARM
         BNE   FAIL12V             NO, BRANCH
FAIL12A  CLC   S99INFO,=AL2(DALDDNAM)
         BNE   FAIL12B
         MVC   DA08DARC,=X'0318'   DRDDNINV, INVALID DDNAME
         B     FAIL12X
FAIL12B  CLC   S99INFO,=AL2(DALDSNAM)
         BNE   FAIL12C
         MVC   DA08DARC,=X'0320'   DRDSNINV, INVALID DSNAME
         B     FAIL12X
FAIL12C  CLC   S99INFO,=AL2(DALMEMBR)
         BNE   FAIL12D
         MVC   DA08DARC,=X'031C'   DRMBRINV, INVALID MEMBER NAME
         B     FAIL12X
FAIL12D  CLC   S99INFO,=AL2(DALSTATS)
         BE    FAIL12D1
         CLC   S99INFO,=AL2(DALNDISP)
         BE    FAIL12D1
         CLC   S99INFO,=AL2(DALCDISP)
         BNE   FAIL12E
FAIL12D1 MVC   DA08DARC,=X'0338'   DRDSPINV, INVALID DISP
         B     FAIL12X
FAIL12E  CLC   S99INFO,=AL2(DALSPGNM)
         BNE   FAIL12F
         MVC   DA08DARC,=X'0324'   DRSYSPGM, INVALID SYSOUT PGM
         B     FAIL12X
FAIL12F  CLC   S99INFO,=AL2(DALSFMNO)
         BNE   FAIL12G
         MVC   DA08DARC,=X'0328'   DRSYSFRM, INVALID FORM
         B     FAIL12X
FAIL12G  CLC   S99INFO,=AL2(DALSYSOU) (THIS TEST NOT IN IKJDAIR)
         BNE   FAIL12S
         MVC   DA08DARC,=X'032C'   DR      , INVALID CLASS
         B     FAIL12X
FAIL12V  CLC   S99ERROR,=X'037C'   RCINKEYL, INVALID LENGTH
         BNE   FAIL12S
         CLC   S99INFO,=AL2(DALDSNAM)
         BNE   FAIL12S
         MVC   DA08DARC,=X'0334'   DRDSNLEN
         B     FAIL12X
FAIL12S  LA    R15,4               INVALID PARAMETER
*        MVC   DA08DARC,S99ERROR   (DARC NOT EXAMINED IF RC 4)
         B     EXIT
FAIL12X  LA    R15,12
         B     EXIT
         DROP  R14                 S99RB
*
*               ISSUE APPROPRIATE ERROR MESSAGE
*
PUTMSG   LA    R1,OURCPPL
         USING CPPL,R1
         MVC   CPPLUPT(4),DAPLUPT
         MVC   CPPLPSCB(4),DAPLPSCB
         MVC   CPPLECT(4),DAPLECT
         DROP  R1                  CPPL
         LA    R1,WKDFAREA
         USING DFDSECTD,R1
         ST    R15,WKDFRC          STORE SVC 99 RETURN CODE
         LA    R15,WKDFRC
         ST    R15,DFRCP           STORE ADDRESS OF RETURN CODE
         LA    R15,WK99RB
         ST    R15,DFS99RBP        STORE ADDRESS OF SVC 99 REQUEST BLK
         SR    R15,R15
         ST    R15,WKJEFF02        STORE ZERO IN IKJEFF02 ADDRESS
         LA    R15,WKJEFF02
         ST    R15,DFJEFF02        STORE ADDRESS OF ZERO
         LA    R15,DFSVC99
         STH   R15,WKDFID          STORE TYPE OF REQUEST (SVC 99)
         LA    R15,WKDFID
         ST    R15,DFIDP           STORE ADDRESS OF TYPE
         LA    R15,OURCPPL
         ST    R15,DFCPPLP         STORE CPPL ADDRESS OR ZERO
*        CLC   DFCPPLP+1(3),=AL3(0) CPPL ADDRESS SUPPLIED
*        BNE   *+8                 YES - USE PUTLINE
*        OI    WKDFID,DFWTP        NO - USE WRITE-TO-PROGRAMMER
         XC    LINKAREA(8),LINKAREA
         LINK  EP=IKJEFF18,SF=(E,LINKAREA)
         L     R15,WKDFRC          RETURN SVC 99 RETURN CODE
         BR    R8
         SPACE
         LTORG
         DC    0D'0'
         SPACE 3
***********************************************************************
*                                                                     *
*         MAP OF GETMAINED WORK SPACE                                 *
*                                                                     *
***********************************************************************
         SPACE
@DATA    DSECT
         DS    18F
WK99RBP  DS    A                   SVC 99 RB POINTER
WK99RB   DS    5A                  SVC 99 REQUEST BLOCK
*
* TEXT UNIT POINTERS
*
WK99TUPL DS    0A                  SVC 99 TEXT LIST POINTERS
WK99TURO DS    A       08          TEXT UNIT POINTER, RETURN DSORG
WK99TUDS DS    A       08 30       TEXT UNIT POINTER, DSNAME
WK99TUDD DS    A       08 30       TEXT UNIT POINTER, DDNAME
WK99TUTE DS    0A            1C    TEXT UNIT POINTER, TERMINAL
WK99TUSO DS    A          30       TEXT UNIT POINTER, SYSOUT CLASS
WK99TUCO DS    A          30       TEXT UNIT POINTER, COPIES
WK99TUDE DS    A          30       TEXT UNIT POINTER, DEST
WK99TUHO DS    A          30       TEXT UNIT POINTER, HOLD
WK99TUPG DS    A          30       TEXT UNIT POINTER, PGM NAME
WK99TUPE DS    A       08 30       TEXT UNIT POINTER, PERM
WK99TUFR DS    A          30       TEXT UNIT POINTER, FREE=CLOSE
WK99TUFC DS    A          30       TEXT UNIT POINTER, FCB
WK99TUFO DS    A       08 30       TEXT UNIT POINTER, FORM
WK99TUAT DS    A       08          TEXT UNIT POINTER, ATTR LIST NAME
WK99TUME DS    A       08          TEXT UNIT POINTER, MEMBER
WK99TUUN DS    A       08          TEXT UNIT POINTER, UNIT
WK99TUMS DS    0A      08          TEXT UNIT POINTER, MSVGP
WK99TUVL DS    A       08          TEXT UNIT POINTER, VOLUME SERIAL
WK99TUD1 DS    A       08          TEXT UNIT POINTER, STATUS
WK99TUD2 DS    A       08          TEXT UNIT POINTER, NORMAL DISP
WK99TUD3 DS    A       08          TEXT UNIT POINTER, CONDITIONAL DISP
WK99TUPW DS    A       08          TEXT UNIT POINTER, PASSWORD
WK99TUDM DS    A       08          TEXT UNIT POINTER, DUMMY
WK99TUSP DS    A       08          TEXT UNIT POINTER, PRIMARY SPACE
WK99TUS2 DS    A       08          TEXT UNIT POINTER, SECONDARY SPACE
WK99TUDI DS    A       08          TEXT UNIT POINTER, DIRECTORY BLOCKS
WK99TUTY DS    A       08          TEXT UNIT POINTER, SPACE TYPE
WK99TURL DS    A       08          TEXT UNIT POINTER, RLSE
WK99TUDO DS    A       08          TEXT UNIT POINTER, DCB DSORG
WK99TULR DS    A       08 30       TEXT UNIT POINTER, DCB LRECL
WK99TUBK DS    A       08 30       TEXT UNIT POINTER, DCB BLKSIZE
WK99TURF DS    A       08 30       TEXT UNIT POINTER, DCB RECFM
WK99TUPO DS    A       08          TEXT UNIT POINTER, TAPE POS
WK99TULB DS    A       08          TEXT UNIT POINTER, LABEL TYPE
WK99TUDN DS    A       08          TEXT UNIT POINTER, TAPE DENSITY
WK99TUEX DS    A       08          TEXT UNIT POINTER, EXPDT
         DS    A                   HI ORDER BIT ON
TUPL$LEN EQU   *-WK99TUPL
*
WK99FREE DS    2A                  TEXT UNIT POINTERS, UNALLOCATE
WK99FXDD DS    3H,CL8              TEXT UNIT, DDNAME UNALLOCATE
WK99FXRM DS    3H                  TEXT UNIT, REMOVE IN-USE ATTRIBUTE
*
* TEXT UNITS
*
WK99TXRO DS    3H,H                TEXT UNIT, RETURN DSORG
WK99TXDS DS    3H,CL44             TEXT UNIT, DSNAME
WK99TXDD DS    3H,CL8              TEXT UNIT, DDNAME
WK99TXSO DS    3H,CL1              TEXT UNIT, SYSOUT CLASS
WK99TXCO DS    3H,H                TEXT UNIT, COPIES
WK99TXDE DS    3H,CL8              TEXT UNIT, DEST
WK99TXHO DS    3H                  TEXT UNIT, HOLD=YES
WK99TXPG DS    3H,CL8              TEXT UNIT, PROGRAM NAME
WK99TXPE DS    3H                  TEXT UNIT, PERM
WK99TXFR DS    3H                  TEXT UNIT, FREE=CLOSE
WK99TXFC DS    3H,CL4              TEXT UNIT, FCB
WK99TXFO DS    3H,CL4              TEXT UNIT, FORM NUMBER
WK99TXAT DS    3H,CL8              TEXT UNIT, ATTRIBUTE LIST NAME
WK99TXME DS    3H,CL8              TEXT UNIT, MEMBER
WK99TXUN DS    3H,CL8              TEXT UNIT, UNIT
WK99TXMS DS    3H,CL8              TEXT UNIT, MSVGP
WK99TXVL DS    3H,CL6              TEXT UNIT, VOLUME SERIAL
WK99TXD1 DS    3H,CL1              TEXT UNIT, STATUS
WK99TXD2 DS    3H,CL1              TEXT UNIT, NORMAL DISP
WK99TXD3 DS    3H,CL1              TEXT UNIT, CONDITIONAL DISP
WK99TXPW DS    3H,CL8              TEXT UNIT, PASSWORD
WK99TXDM DS    3H                  TEXT UNIT, DUMMY
WK99TXSP DS    3H,CL3              TEXT UNIT, PRIMARY SPACE
WK99TXS2 DS    3H,CL3              TEXT UNIT, SECONDARY SPACE
WK99TXDI DS    3H,CL3              TEXT UNIT, DIRECTORY BLOCKS
WK99TXTY DS    3H,CL3              TEXT UNIT, SPACE TYPE AND BLOCK LEN
WK99TXRL DS    3H                  TEXT UNIT, RLSE
WK99TXDO DS    3H,H                TEXT UNIT, DCB DSORG
WK99TXLR DS    3H,H                TEXT UNIT, DCB LRECL
WK99TXBK DS    3H,H                TEXT UNIT, DCB BLKSIZE
WK99TXRF DS    3H,C                TEXT UNIT, DCB RECFM
WK99TXPO DS    3H,H                TEXT UNIT, TAPE POS
WK99TXLB DS    3H,C                TEXT UNIT, TAPE LABEL TYPE
WK99TXDN DS    3H,C                TEXT UNIT, TAPE DENSITY
WK99TXEX DS    3H,CL5              TEXT UNIT, EXPDT
WK99TXTE DS    3H                  TEXT UNIT, TERMINAL
*
*
*
WKDFAREA DS    5F                  IKJEFF18 PARAMETER BLOCK
WKDFRC   DS    F                   SVC 99 RETURN CODE
WKJEFF02 DS    F                   MESSAGE ROUTINE (ZERO)
WKDFID   DS    H                   TYPE OF FAILURE (SVC 99)
WKDSRET  DS    C                   SWITCH
WKDDRET  DS    C                   SWITCH
LINKAREA DS    2F
OURCPPL  DS    4F
DSNAMEL  DS    H
DSNAME   DS    CL44
SV08BLK  DS    F
SV08PQTY DS    F
SV08SQTY DS    F
SV08DQTY DS    F
SV08CTL  DS    C
DEFPTR   DS    C
DOUBLE   DS    D
         DS    0D
@DATAL   EQU   *-@DATA
         EJECT
         IEFZB4D0
         EJECT
         IEFZB4D2
         EJECT
         IKJEFFDF DFDSECT=YES
         SPACE 3
         IKJCPPL
         SPACE 3
         IKJUPT
         SPACE 3
         IKJDAPL
         SPACE 3
         IKJDAP08
DE08CTLX DS    X        FLAGS
DE08MSG  EQU   X'80'    AUTOMATIC ERROR MESSAGE
DE08FC   EQU   X'40'    FREE=CLOSE (NOT IMPLEMENTED YET)
DE08MSVG EQU   X'20'    MSVGP IS IN VOL SER FIELD
DE08RET  EQU   X'10'    RETENTION PERIOD, NOT EXPIRATION DATE
DE08NEX  EQU   X'01'    DO NOT USE AN EXISTING ALLOCATION.
DE08RECF DS    X        DCB RECFM
DE08LREC DS    H        DCB LRECL
DE08BLKS DS    H        DCB BLKSIZE
DE08DSOR DS    H        DCB DSORG
*                       END OF 8 BYTE SECTION
         DS    X        RESERVED
DE08EXPD DS    0XL3     EXP DATE, BINARY, 1 BYTE YEAR, 2 BYTES DAY
DE08EXYR DS    X        EXP DATE YEAR, BINARY
DE08EXJD DS    0H       EXP DATE JULIAN DAY, BINARY
DE08RETP DS    H        RETENTION PERIOD (0-9999)
DE08POS  DS    H        TAPE DATA SET SEQUENCE NUMBER (0-9999)
DE08LABL DS    X        TAPE LABEL TYPE (HEX 01 02 10 FOR NL SL BLP)
DE08DEN  DS    X        TAPE DENSITY (HEX 83 C3 D3 FOR 800 1600 6250)
*                       END OF 8 BYTE SECTION
*              DAPB08 HAS BEEN EXTENDED BY 16 BYTES
         SPACE 3
         IKJDAP1C
DE1CCTLX DS    X        FLAGS
DE1CMSG  EQU   X'80'    AUTOMATIC ERROR MESSAGE
DE1CRECF DS    X        DCB RECFM
DE1CLREC DS    H        DCB LRECL
DE1CBLKS DS    H        DCB BLKSIZE
         DS    XL2      RESERVED
*              DAPB1C HAS BEEN EXTENDED BY 08 BYTES
         SPACE 3
         IKJDAP30
DE30CTLX DS    X        FLAGS
DE30MSG  EQU   X'80'    AUTOMATIC ERROR MESSAGE
DE30FC   EQU   X'40'    FREE=CLOSE
DE30HOLD EQU   X'20'    HOLD
DE30RECF DS    X        DCB RECFM
DE30LREC DS    H        DCB LRECL
DE30BLKS DS    H        DCB BLKSIZE
         DS    XL2      RESERVED
*                       END OF 8 BYTE SECTION
DE30CPYS DS    AL1      COPIES
         DS    XL3      RESERVED
DE30FCB  DS    CL4      FCB
DE30DEST DS    CL8      DEST
*              DAPB30 HAS BEEN EXTENDED BY 24 BYTES
         SPACE 3
NL       EQU   X'01'    TAPE LABEL TYPE, NO LABELS
SL       EQU   X'02'    STANDARD
NSL      EQU   X'04'    NONSTANDARD
SUL      EQU   X'0A'    STANDARD AND USER
BLP      EQU   X'10'    BYPASS LABEL PROCESSING
LTM      EQU   X'21'    DOS LEADING TAPE MARK
AL       EQU   X'40'    ANSI
AUL      EQU   X'48'    ANSI AND USER
         SPACE 3
DEN0     EQU   X'03'    200 BPI
DEN1     EQU   X'43'    556 BPI
DEN2     EQU   X'83'    800 BPI
DEN3     EQU   X'C3'    1600 BPI
DEN4     EQU   X'D3'    6250 BPI
         SPACE 3
T7C      EQU   X'13'    DATA CONVERSION
T7E      EQU   X'23'    EVEN PARITY
T7ET     EQU   X'2B'    EVEN PARITY, BCD-EBCDIC TRANSLATION
T7T      EQU   X'3B'    BCD-EBCDIC TRANSLATION
         SPACE 3
RECFMU   EQU   X'C0'    UNDEFINED LENGTH
RECFMF   EQU   X'80'    FIXED LENGTH
RECFMV   EQU   X'40'    VARIABLE LENGTH
RECFMT   EQU   X'20'    TRKOV
RECFMB   EQU   X'10'    BLOCKED
RECFMS   EQU   X'08'    VARIABLE SPANNED OR FIXED STANDARD
RECFMA   EQU   X'04'    ASA CC
RECFMM   EQU   X'02'    MACHINE CC
         SPACE 3
DSORGPO  EQU   X'02'    PARTITIONED
DSORGPOU EQU   X'03'    PARTITIONED UNMOVEABLE
DSORGDA  EQU   X'20'    DIRECT ACCESS
DSORGDAU EQU   X'21'    DIRECT ACCESS UNMOVEABLE
DSORGPS  EQU   X'40'    SEQUENTIAL
DSORGPSU EQU   X'41'    SEQUENTIAL UNMOVEABLE
         SPACE 3
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         END
