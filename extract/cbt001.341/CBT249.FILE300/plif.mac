*          DATA SET TSOPLIF    AT LEVEL 002 AS OF 11/12/80
PLIP     TITLE 'PLIF PROMPTER   DEFINITIONS'
         MACRO
&NAME    LDDN  &REG,&DD
&NAME    L     &REG,@DAIR28
         L     &REG,DA28OPTR-DAPB28+(&DD-DDNAMES-2)/2(&REG)
         MEND
         LCLC  &SYSOUT,&SYSDA
*              DELETE THE FOLLOWING CARD IF DEFAULT TSO UNIT FOR
*              SYSOUT DATA SETS IS DESIRED
&SYSOUT  SETC  'SYSDA'
*              DELETE THE FOLLOWING CARD IF DEFAULT  TSO  UNIT  FOR
*              WORK DATASETS B     DESIRED
&SYSDA   SETC  'SYSDA'
FF       EQU   X'FF'
         TITLE 'PLIF PROMPTER   MAIN LINE'
PLIF     CSECT
         SAVE  (14,12),,PLIF-&SYSDATE-&SYSTIME
         LR    R12,R15        GET EPA
         USING PLIF,R12
         GETMAIN              R,LV=WKAL    GETMAIN SOME CORE
         ST    R1,8(13)
         ST    13,4(R1)
         LM    13,1,8(13)     GET ENTRY REGS BACK
         USING SAVE,13
         XC    SCRATCH(ENDSAVE-SCRATCH),SCRATCH
         SPACE 0
         LR    R11,R1         SAVE ENTRY REG
         USING CPPL,R11       TELL ASSEMBLER
         LA    R0,PARMS       INITIALIZE
         LA    R1,DDNAMES     PARMLIST
         STM   R0,R1,PARMADDR
         MVI   PARMADDR+4,X'80'     SIGNAL END OF LST
         SPACE 1
         LA    R0,SYSEND-DDNAMES-2   NUMBER OF DDNAMES
         STH   R0,DDNAMES
         MVC   PARMS(3),=X'000040'  INITIALIZE LIST
         MVC   PARMS+3(251),PARMS+2     ALL BLANKS
         SPACE 1
*              INITIALIZE PUTLINE PARAMETER LIST
         LA    R1,PTPL
         USING IOPL,R1
         MVC   IOPLUPT,CPPLUPT
         MVC   IOPLECT,CPPLECT
         LA    R2,ECB
         ST    R2,IOPLECB
         DROP  R1
         MVI   SPMAC,MIX
         MVI   SPMD,MIX
         MVI   SPLIB,MIX
         MVI   SPD,NO
         BALR  R12,0          GET A BASE
         USING *,R12          TELL ASSEMBLER
         EJECT
*              BUILD PARSE LIST
         LA    R1,PARSEPL
         USING PPL,R1
         MVC   PPLUPT,CPPLUPT  UPT
         MVC   PPLECT,CPPLECT
         LA    R2,ECB
         ST    R2,PPLECB      ECB
         L     R9,=A(PLIFPARM)
         ST    R9,PPLPCL      PCL
         MVC   PPLCBUF,CPPLCBUF
         LA    R3,@PDE
         ST    R3,PPLANS
         LINK  EP=IKJPARS
         LTR   R15,R15
         BZ    PLIF2
         BAL   R14,FAIL
PLIF2    EQU   *
         USING PLIFPARM,R9
         L     R10,@PDE       GET THE PDE
         USING PDL,R10
         DROP  R1
         LA    R1,PCEFIRST
         BAL   R14,EASYKEY    GO DO THEEASY ONES
*              INITIALIZE THE SUBFIELD PARMS
SFIA     TM    SIZE+6,X'80'   SIZE PRESENT?
         BZ    SFIB           NO TRY NEXT
         LA    R1,=C'SIZE='
         LA    R2,4
         BAL   R14,APEND
         L     R1,SIZE        ADDR
         LH    R2,SIZE+4      LENGTH
         BCTR  R2,0           -1
         BAL   R14,APENDC     ADD THE VALUE WITHOUT COMMA
         SPACE 1
SFIB     TM    OPT+6,X'80'    OPT SPECIFIED
         BZ    SFIC           NO TRY NEXT
         LA    R1,=C'OPT='
         LA    R2,3
         BAL   R14,APEND
         L     R1,OPT
         LH    R2,OPT+4
         BCTR  R2,0
         BAL   R14,APENDC
         SPACE 1
SFIC     TM    OBJNM+6,X'80'    OBJNAME?
         BZ    SFID           NO
         LA    R1,=C'N='
         LA    R2,1
         BAL   R14,APEND
         L     R1,OBJNM
         LH    R2,OBJNM+4
         BCTR  R2,0
         BAL   R14,APENDC
         SPACE 1
SFID     TM    SM1+6,X'80'    SORMGIN
         BZ    SFIE           NO
         LA    R1,=C'SM=('
         LA    R2,3
         BAL   R14,APEND
         L     R1,SM1
         LH    R2,SM1+4
         BCTR  R2,0
         BAL   R14,APENDC
         L     R1,SM2
         LH    R2,SM2+4
         BCTR  R2,0
         BAL   R14,APEND      NEED COMMA THIS TIME
         TM    SM3+6,X'80'    GET THE THIRD PARM
         BZ    SFID2          NO
         L     R1,SM3
         LH    R2,SM3+4
         BCTR  R2,0
         BAL   R14,APEND
SFID2    DS    0H
         LA    R1,=C')'
         LA    R2,0
         BAL   R14,APENDC
         SPACE 1
SFIE     TM    LINECNT+6,X'80'
         BZ    SFIF
         LA    R1,=C'LC='
         LA    R2,2
         BAL   R14,APEND
         L     R1,LINECNT
         LH    R2,LINECNT+4
         BCTR  R2,0
         BAL   R14,APENDC
SFIF     CLI   MACDCK+1,0     DID HE SPECIFY A PREF
         BZ    SFIG           NO
         CLI   MACDCK+1,2
         BH    SFIF3          HE DOESN'T WANT IT
         MVI   SPMD,YES
         LA    R1,=C'MD'
         LA    R2,1
         B     SFIF4
         SPACE 1
SFIF3    MVI   SPMD,NO
         LA    R1,=C'NMD'
         LA    R2,2
SFIF4    BAL   R14,APEND
         SPACE 1
SFIG     CLI   MACRO+1,0      DID HE SPECIFY MACRO
         BZ    SFIG3          NO
         CLI   MACRO+1,2      EXCLUDE IT
         BH    SFIG2          YES
         MVI   SPMAC,YES      HE WANTS IT
         B     SFIH
SFIG2    MVI   SPMAC,NO       DOESN'T WANT IT
         B     SFIH
         SPACE 1
SFIG3    TM    SPMD,YES       DOESN'T CARE DID HE ASKF OF DECK
         BNO   SFIH           NO
         LA    R1,=C'MACRO'   THEN FORCE MACRO
         LA    R2,4
         BAL   R14,APEND
         MVI   SPMAC,YES
         SPACE 2
SFIH     DS    0H
         EJECT
*              INITIALIZE ALL DAIR BLOCKS
         LA    R1,DAIRPL
         BAL   R14,BUILDAIR
         SPACE 4
*              BEGIN ALLOCATION
ALCIN    LDDN  R9,SYSIN
         USING DAPB08,R9      R9=DAPB08
         MVC   DA08CD,=X'0008'      SET ALLOCAT CODE
         LA    R1,=C'PLI'     QUALIFIER
         LA    R2,3           LENGTH
         LA    R3,DSIN        PDE
         BAL   R14,BUILDDSN
         B     *+4(R15)
         B     ALCIN3         RC=0 HAVE SIMPLE
         B     ALCIN4         RC=4 NOT SIMPLE
         B     ALCIN7         RC=8 ALLOCATE TO TERM
         SPACE 1
ALCIN3   LM    R5,R6,DSIN     SAVE SIMPLE NAME AND LENGTH
         B     ALCIN4B
*              USER MEMBER NAME FOR SIMPLE NAME
         SPACE 1
ALCIN4   LM    R5,R6,DSIN+8   USE MEMBER NAME FOR SIMPLE
ALCIN4B  STM   R5,R6,SIMPLE   FOR POSSIBLE USE LATER
ALCIN5   OI    DA08DSP1,DA08SHR    FLAG SHARE
ALCIN7   DS    0H
         SPACE 4
*              SYSLIB ALLOCATION
ALCLIB   TM    SPMAC,YES
         BNO   ALCLIB3        BRANCH IF NOT SPECIFIED
         CLI   LIB+1,0        LIB PARM SPECIFIED
         BNZ   ALCLIB5        YEAH HE SPECIFIED IT
         PUTLINE PARM=MSG001,MF=(E,PTPL)  LIB REQUIRED IF MACRO SP
         B QUIT
         SPACE 1
ALCLIB3  BM    ALCLIB4        DOESN'T CARE
         CLI   LIB+1,0        LPECIFY LIB
         BZ    ALCLIB9        NO
         PUTLINE  PARM=MSG002,MF=(E,PTPL)  LIB AND NOMACRO SPECIFED
         B     QUIT
*
ALCLIB4  CLI   LIB+1,0        NO LIB SPEC
         BZ    ALCLIB9
         LA    R1,=C'MACRO'   SPECIFY MACRO SINCE HE SP LIB
         LA    R2,4
         BAL   R14,APEND
         MVI   SPMAC,YES
*
ALCLIB5  LDDN  R9,SYSLIB
         USING DAPB08,R9      R9 = DAIR BLOCK
         LA    R3,DSLIB
         LA    R1,BLANKS      NO QUALIFIER
         LA    R2,0
         BAL   R14,BUILDDSN   MOVE IN DSN STUFF
         MVC   DA08CD,=X'0008'
         OI    DA08DSP1,DA08SHR    FLAG SHARE
         CLI   24(R3),FF      END OF LIST
         BE    ALCLIB9
         LDDN  R9,SYSLIB2     NO GET LIB 2
         L     R3,24(R3)      NEXT
         BAL   R14,BUILDDSN
         MVC   DA08CD,=X'0008'
         OI    DA08DSP1,DA08SHR
         SPACE
         CLI   24(R3),FF      END OF LIST YET?
         BE    ALCLIB9        YUP
         LDDN  R9,SYSLIB3     GET LIB 3
         L     R3,24(R3)      NEXT
         BAL   R14,BUILDDSN
         MVC   DA08CD,=X'0008'
         OI    DA08DSP1,DA08SHR
         SPACE 1
         CLI   24(R3),FF      END OF LIST YET?
         BE    ALCLIB9        YUP
         PUTLINE  PARM=MSG009,MF=(E,PTPL)  TOO MAN Y  LIBS
         B     QUIT
ALCLIB9  DS    0H
         EJECT
ALCPRNT  LDDN  R9,SYSPRINT    ALLOCATE SYSPRINT DATASET
         USING DAPB08,R9
         CLI   PRINT+1,1      DSN SPECIFIED
         BE    ALCPRNT3       YES
*              ALLOCATE TO SYSOUT
         USING DAPB30,R9
         XC    DAPB30(64),DAPB30   CLEAR WHOLE BLOCK
         MVC   DA30CD,=X'0030'     SYSOUT CALL
         MVC   DA30DDN,BLANKS
         MVC   DA30UNIT,=CL8'&SYSOUT.'
         MVC   DA30SER,BLANKS
         LA    R0,0           BLKSIZE
         LA    R1,50          DEFAULT   50 TRACKS
         LA    R2,10          10 SECONDARY
         STM   R0,R2,DA30BLK PQTY SQTY
         MVC   DA30PGNM,BLANKS
         MVC   DA30FORM,BLANKS
         TM    SYSOUTAP+6,X'80'    PROGRAM NAME SPC
         BZ    ALCPRNT1       NO
         L     R5,SYSOUTAP    PROGRAM NAME
         LH    R6,SYSOUTAP+4
         BCTR  R6,0           -1
         EX    R6,*+4
         MVC   DA30PGNM(1),0(R5)
         SPACE 1
ALCPRNT1 TM    SYSOUTAF+6,X'80'    FORM SPECIFIED
         BZ    ALCPRNT2
         L     R5,SYSOUTAF
         LH    R6,SYSOUTAF+4
         BCTR  R6,0
         EX    R6,*+4
         MVC   DA30FORM(1),0(R5)    FORM NUMBER
         SPACE 1
ALCPRNT2 DS    0H
         L     R5,SYSOUTA
         MVC   DA30OCLS(1),0(R5)
         MVI   DA30OCLS+1,C' '
         MVC   AOUT,0(R5)     SAVE OUTPUT CLASS FOR FREE
         MVI   DA30CTL,DA30TRKS
         B     ALCPRNT9
         SPACE 1
         USING DAPB08,R9
ALCPRNT3 TM    DSPRINT+6,X'80'     DSNAME SPECIFIED
         BO    ALCPRNT5       YEAH
         LM    R5,R6,SIMPLE   GET THE SIMPLE QUALIFIER
         LTR   R6,R6          ANY
         BNZ   ALCPRNT4       YUP
         PUTLINE  PARM=MSG004,MF=(E,PTPL) MUST HAVE DSNAME
         B QUIT
         SPACE 1
ALCPRNT4 STM   R5,R6,DSPRINT
ALCPRNT5 LA    R1,=C'LIST'    QUALIFIER
         LA    R2,4           LENGTH
         LA    R3,DSPRINT
         BAL   R14,BUILDDSN
         B     *+4(R15)
         B     ALCPRNT6       RC=0
         B     ALCPRNT6       RC=4
         B     ALCPRNT9       RC=8 TERMINAL WAS ALLOCATED
ALCPRNT6 BAL   R14,OLDNEW     FIND OUT IF IT ALREADY EXISTS
         TM    DA08DSP1,DA08NEW  IF NEW
         BZ    ALCPRNT7       BUT ITS NOT
         LA    R0,0           SPECIFY SPACE PARMS
         LA    R1,50          PQTY  50 TRKS
         LA    R2,10          SECONDARY
         SR    R3,R3          NO DIRECTORY
         CLC   DA08MNM,BLANKS OR IS THERE?
         BE    *+8
         LA    R3,3           THEN SPECIFY 3 BLOCKS
         STM   R0,R3,DA08BLK PQTY SQTY DBLKS
         OI    DA08CTL,DA08TRKS+DA08RLSE
ALCPRNT7 DS    0H
ALCPRNT9 DS    0H
         EJECT
ALCGO    CLI   LOAD+1,2       NO LOAD
         BH    ALCGO7         NO
         LA    R1,=C'LOAD'
         LA    R2,3
         BAL   R14,APEND      SPECIFY PARAMETER
         TM    DSGO+6,X'80'   SPECIFY A DSNAME
         BO    ALCGO4         YEAH
         LM    R5,R6,SIMPLE
         LTR   R6,R6
         BNZ   ALCGO3
         PUTLINE  PARM=MSG003,MF=(E,PTPL) NAME MUST BE SPEC
         B QUIT
         SPACE 1
ALCGO3   STM   R5,R6,DSGO
ALCGO4   LA    R1,=C'OBJ'     DEFAULT NAME
         LA    R2,3
         LA    R3,DSGO
         LDDN  R9,SYSLIN
         BAL   R14,BUILDDSN   BUILD THE DSNAME
         BAL   R14,OLDNEW
         TM    DA08DSP1,DA08NEW     IS IT NEW
         BZ    ALCGO6         IF NO
         LA    R0,400         SET SPACE PARAMETERS
         LA    R1,200         PRI QTY
         LA    R2,100         SEC QTY
         STM   R0,R2,DA08BLK PQTY SQTY
         CLC   DA08MNM,BLANKS MEMBER SPECIFIED
         BE    ALCGO5         NO
         LA    R3,3           DIRECTORY QUANTITY
         ST    R3,DA08DQTY
ALCGO5   OI    DA08CTL,DA08ABKL    AVERAGE BLOCK LENGT
ALCGO6   B     ALCGO9
ALCGO7   DS    0H             NOLOAD SPEC
         LA    R1,=C'NOLOAD'
         LA    R2,5
         BAL   R14,APEND
ALCGO9   DS    0H
         EJECT
ALCPNCH  TM    SPMD,YES
         BNO   ALCPNCH1
         MVI   SPD,YES        FLAG WE NEED A DECK
ALCPNCH1 LH    R15,PUNCH
         SLL   R15,2          OPTION * 4
         B     *+4(R15)
         B     ALCPNCH6       O    NOTHING SPECIFIED
         B     ALCPNCH3       1    DECK
         B     ALCPNCH3       2    DECK
         B     ALCPNCH4       3    NODECK
         B     ALCPNCH4       4    ND
*        B     *+4            5    SYSPUNCH
         TM    SPMD,YES       IF MACRO SPEC DON'T FORCE DECK
         BO    ALCPNCH6
ALCPNCH3 LA    R1,=C'DECK'
         LA    R2,3
         MVI   SPD,YES        DECK SPECIFIED
         B     ALCPNCH5
         SPACE 1
ALCPNCH4 LA    R1,=C'NODECK'
         LA    R2,5
ALCPNCH5 BAL   R14,APEND
ALCPNCH6 TM    SPD,YES        NEED SYSPUNCH
         BNO   ALCPNCHZ       NO
         LDDN  R9,SYSPUNCH
         USING DAPB08,R9
         MVC   DA08CD,=X'0008'
*              MAKE SURE WE DON'T HAVE BOTH SYSOUT AND DS
         TM    DSPUNCH+6,X'80'
         BZ    ALCPNCH7
         TM    SYSOUTB+6,X'80'
         BZ    ALCPNCHA       GO DO DSNAME
         PUTLINE  PARM=MSG005,MF=(E,PTPL)
         B     QUIT
         SPACE 1
ALCPNCH7 TM    SYSOUTB+6,X'80'     SYSOUT
         BZ    ALCPNCH8       NO FORCE DSNAME
         USING DAPB30,R9
         XC    DAPB30(64),DAPB30   CLEAR IT
         MVC   DA30CD,=X'0030'     ALLOCATE SYSOUT
         MVC   DA30DDN,BLANKS
         MVC   DA30UNIT,=CL8'&SYSOUT.'
         MVC   DA30SER,BLANKS
         LA    R0,0
         LA    R1,50          PRI QTY
         LA    R2,10          SEC
         STM   R0,R2,DA30BLK PQTY SQTY
         MVC   DA30PGNM,BLANKS
         MVC   DA30FORM,BLANKS
         TM    SYSOUTBP+6,X'80'  PROGRAM NAME SPEC
         BZ    ALCPCH7E       NO
         L     R5,SYSOUTBP
         LH    R6,SYSOUTBP+4
         BCTR  R6,0
         EX    R6,*+4
         MVC   DA30PGNM(1),0(R5)
ALCPCH7E TM    SYSOUTBF+6,X'80'    FORM SPEC
         BZ    ALCPCH7G
         L     R5,SYSOUTBF
         LH    R6,SYSOUTAF+4
         BCTR  R6,0
         EX    R6,*+4
         MVC   DA30FORM(1),0(R5)
         SPACE 1
ALCPCH7G DS    0H
         L     R5,SYSOUTB
         MVC   DA30OCLS(1),0(R5)
         MVI   DA30OCLS+1,C' '
         MVC   BOUT,0(R5)
         MVI   DA30CTL,DA30TRKS
         B     ALCPNCHZ
         SPACE 1
         USING DAPB08,R9
ALCPNCH8 DS    0H             NO NOTHINE
         LM    R5,R6,SIMPLE   HAVE A SIMPLE NAME
         LTR   R6,R6          HAVE ONE
         BNZ   ALCPNCH9  YEAH
         PUTLINE  PARM=MSG006,MF=(E,PTPL)  MUST HAVE NAME
         B     QUIT
         SPACE 1
ALCPNCH9 STM   R5,R6,DSPUNCH
ALCPNCHA LA    R3,DSPUNCH
         LA    R2,4
         LA    R1,=C'DECK'
         BAL   R14,BUILDDSN
         BAL   R14,OLDNEW
         TM    DA08DSP1,DA08NEW    IS IT NEW
         BZ    ALCPNCHB        NO
         LA    R0,400         YES  SET BLOCK SIZE
         LA    R1,200         PRI QTY
         LA    R2,100         SEC
         SR    R3,R3
         CLC   DA08MNM,BLANKS MEMBER NAME
         BE    *+8
         LA    R3,3           IF SO 3 DIRECTORY BLOCKS
         STM   R0,R3,DA08BLK
         OI    DA08CTL,DA08ABKL
ALCPNCHB  DS    0H
ALCPNCHZ DS    0H
         EJECT
ALCUT1   LDDN  R9,SYSUT1
         USING DAPB08,R9
         MVC   DA08CD,=X'0008'
         L     R7,DA08PDSN
         USING DSNBUF,R7
         MVC   DSNAME(7),=C'&&SYSUT1'
         MVC   DA08UNIT,=CL8'&SYSDA.'
         LA    R2,7
         STH   R2,DSLENG
         DROP  R7
         LA    R0,1024        BLKSIZE
         LA    R1,250
         LA    R2,50
         STM   R0,R2,DA08BLK  PQTY SQTY
         OI    DA08DSP1,DA08NEW
         OI    DA08DPS2,DA08DEL
         OI    DA08CTL,DA08ABKL
         SPACE 2
ALCUT3   TM    SPMAC,YES
         BO    ALCUT31        IF MACRO WE NEED IT
         CLI   CHAR+1,1       OR
        BE       ALCUT31              CHAR48
         CLI   CHAR+1,2
         BNE   ALCUT3Z        DON'T NEED IT
ALCUT31  LDDN  R9,SYSUT3
         USING DAPB08,R9
         MVC   DA08CD,=X'0008'
         LA    R0,80
         LA    R1,500
         LA    R2,250
         STM   R0,R2,DA08BLK  SPACE PARMS
         OI    DA08DSP1,DA08NEW
         OI    DA08DPS2,DA08DEL
         OI    DA08CTL,DA08ABKL
         L     R7,DA08PDSN
         USING DSNBUF,R7
         LA    R2,7
         STH   R2,DSLENG
         MVC   DSNAME(7),=C'&&SYSUT3'
         MVC   DA08UNIT,=CL8'&SYSDA.'
         DROP  R7
ALCUT3Z  DS    0H
         TITLE 'PLIF PROMPTER  MAIN LINE  CALL TO DAIR'
         IKJRLSA @PDE     RELEASE ALL THE PDE SPACE
         SPACE 2
DAIR1    L     R7,@DAIR28     MULTIPLE CALL BLOCK
         USING DAPB28,R7
         LA    R1,DAIRPL
         USING DAPL,R1
         ST    R7,DAPLDAPB    FILL IN ADDRESS
         LINK  EP=IKJEFD00    CALL DAIR
         LTR   R15,R15        ANY  ERROR?
         BZ    DAIR6          NO   ERRORS
DAIR3    MVC   DAPLDAPB,DA28PFOP   MOVE IN FAILING OP
DAIR4    DS    0H             OLDNEW JUMPS IN HERE
         ST    R15,SCRATCH    NEED RETRUN CODE FOR DAIRFAIL
         LINK  EP=IKJEFF18,PARAM=(DAIRPL,SCRATCH,=A(0),=H'1'),         *
               MF=(E,PARSEPL) USE PARSE PARAM LIST FOR DAIR FAIL
         B     QUIT
DAIR6    DS    0H
         BAL   R14,SETDDNAM   GO BUILD DDNAME TABLE
         SPACE 2
*                             CHECK FOR MULTI LIB
         NC    SYSLIB2,SYSLIB2
         BZ    DAIR7          NO SWEAT
         LDDN  R7,SYSLIN      GET ANY DAIR BLOCK
         USING DAPB0C,R7
         XC    DAPB0C(36),DAPB0C
         MVC   DA0CCD,=X'000C'
         LA    R2,2
         MVC   DA0CDDN,SYSLIB
         MVC   DA0CDDN+8,SYSLIB2
         NC    SYSLIB3,SYSLIB3     3?
         BZ    DAIR6F         NO
         LA    R2,3
         MVC   DA0CDDN+16,SYSLIB3
DAIR6F   STH   R2,DA0CNUMB
         ST    R7,DAPLDAPB
         LINK  EP=IKJEFD00
         LTR   R15,R15
         BNZ   DAIR4
         XC    SYSLIB2,SYSLIB2
         XC    SYSLIB3,SYSLIB3
DAIR7    DS    0H
DAIR8    DS    0H
         BAL   R14,FREEDAIR   CLEAN UP
         TITLE 'PLIF PROMPTER  MAIN LINE  CALL TO COMPILER'
LINK     DS    0H
LINK1    DS    0H
         LA    R1,2           2 SEGMENTS
         LA    R2,MSG007      MESSAGE
         LA    R3,PARMS-2     SECOND HALF OF MESSAGE
         STM   R1,R3,PARSEPL  USE PARSE LIST FOR OLD
         LH    R2,PARMS       SAVE LENGTH
         LA    R0,L'MSG007T
         STH   R0,PARMS
         LA    R0,4(R2)
         STH   R0,PARMS-2
         PUTLINE  PARM=DAIR04,OUTPUT=(PARSEPL,TERM,SINGLE,INFOR),      *
               TERMPUT=(EDIT,WAIT,NOHOLD,NOBREAK),MF=(E,PTPL)
         SPACE 1
LINK3    STH   R2,PARMS       MOVE LENGTH BACK
         SPACE 4
         LA    R1,PARMADDR
         LINK  EP=IEMAA
         ST    R15,RETCODE
LINKRET  LTR   R15,R15        ANY ERROR CODE
         BZ    CLEANUP        ONLY GIVE BAD NEWS!
         LA    R2,MSG008      MOST OF BLOCKS ARE STILL SETUP
         ST    R2,PARSEPL+4   OLD  ALREADY BUILT
         CVD   R15,SCRATCH
         OI    SCRATCH+7,15
         UNPK  PARMS+2(2),SCRATCH  RETURN CODE
         LA    R0,6
         STH   R0,PARMS-2     WHOLE THING IS 6 BYTES LONG
         LA    R0,L'MSG008T
         STH   R0,PARMS
         PUTLINE              MF=(E,PTPL)
         TITLE   'PLIF PROMPTER   MAIN LINE      CLEANUP'
CLEANUP  CLI   AOUT,0         ANY SYSPRINT
         BZ    CLUP5          NO
         IC    R0,AOUT
         LA    R1,SYSPRINT
         BAL   R14,FREEDS     FREE IT
CLUP5    CLI   BOUT,0         ANY PUNCH
         BZ    CLUP9          NO
         IC    R0,BOUT
         LA    R1,SYSPUNCH
         BAL   R14,FREEDS
CLUP9    DS    0H
         B     EXIT
         TITLE 'FREEDS    FREE A SYSOUT DATASET'
FREEDS   SAVE     (14,12)
         LR    R6,R14         SAVE RETURN
         GETMAIN              R,LV=40
         LR    R9,R1
         USING DAPB18,R9      FREE DS BLOCK
         XC    DAPB18(40),DAPB18
         LM    R0,R1,SAVE+20  GET R0 AND R1 BACK
         MVC   DA18CD,=X'0018'     SET CODE
         MVC   DA18DDN,0(R1)  DDNAME
         MVC   DA18MNM,BLANKS
         MVC   DA18SCLS,BLANKS
         STC   R0,DA18SCLS
         MVC   DA18JBNM,BLANKS
         SPACE 1
         LA    R1,DAIRPL
         USING DAPL,R1
         ST    R9,DAPLDAPB
         LINK  EP=IKJDAIR
         LTR   R15,R15        ANY ERROR
         BNZ   DAIR4          YUP LET INLINE DIAGNOSE IT
         FREEMAIN     R,LV=40,A=(R9)
         DROP  R9,R1
         BR    R6             RETURN
         TITLE 'BUILD DSNAME PARM'
*                             R9 = DAPB08
*                             R3 = PDE FOR DSNAME
*                             R2 = L'QUAL
*                             R1 = QUAL
*
*                             RC=4 NO SIMPLE NAME
*                             RC=8 TERMINAL
BUILDDSN SAVE  (14,12)
         USING DAPB08,R9
         MVC   DA08CD,=X'0008'
         SR    R15,R15        PRESER RETURNCODE
         L     R7,DA08PDSN
         USING DSNBUF,R7
         TM    6(R3),X'80'    DSNAME MISSING
         BO    BUIDD3         NO
         STH   R2,DSLENG
         BCTR  R2,0           -1
         EX    R2,*+4
         MVC   DSNAME(1),0(R1)     JUST A QUALIFIER
         LA    R15,4          RC=4
         B     BUIDD4C
         SPACE 1
BUIDD3   L     R5,0(R3)       SUPPLIED DDNAME
         LH    R6,4(R3)       LENGTH
         CH    R6,=H'1'       LENGTH OF ONE
         BNE   BUIDD4
         CLI   0(R5),C'*'     AND * MEANS TERMINAL ALLOCATE
         BNE   BUIDD4         NO
*                             WIPE OUT BLOCK TO ALLOCATE TERM
         USING DAPB1C,R9      TELL ASSEMBLER
         MVC   DA1CCD,=X'001C'     TERMINAL ALLOCATE CODE
         MVI   DA1CCTL,0
         MVC   DA1CDDN,BLANKS ANY NAME
         RETURN  (14,12),RC=8
         SPACE 1
         USING DAPB08,R9      BACK TO USUAL CONTROL BLOCK
BUIDD4   STH   R6,DSLENG      PUT LENGTH IN
         BCTR  R6,0           -1
         EX    R6,*+4
         MVC   DSNAME(1),0(R5)     MOVE IN DSNAME
         LA    R15,4          RC=4 INCASE
         TM    6(R3),X'40'    DSNAME QUALIFIED
         BO    BUIDD5          YUP
         SR    R15,R15        RC=0  SIMPLE QUALIFIER
         LTR   R2,R2          ANY QUALIFIER
         BZ    BUIDD4C
         LA    R5,DSNAME+1(R6)
         MVI   0(R5),C'.'     ADD A PERIOD
         BCTR  R2,0           -1  (LENGTH OF QUAL)
         EX    R2,*+4
         MVC   1(1,R5),0(R1)  ADD  QUALIFIER
         LA    R6,3(R6,R2)     TOTAL LENGTH INCL PERIOD
         STH   R6,DSLENG      RESET LENGTH
BUIDD4C  OI    DA08CTL,DA08UID     APEND USER NAME
*              MEMBER NAME
BUIDD5   TM    14(R3),X'80'   ANY
         BZ    BUIDD6         NO
         L     R5,8(R3)       R5=NAME
         LH    R6,12(R3)      R6=LENGTH
         BCTR  R6,0
         EX    R6,*+4         MOVE IT
         MVC   DA08MNM(1),0(R5)    MOVE IT
*              PASSWORD
BUIDD6   TM    22(R3),X'80'   ANY?
         BZ    BUIDD7         NO
         L     R5,16(R3)      ADDR
         LH    R6,20(R3)      LENGTH
         BCTR  R6,0           -1
         EX    R6,*+4
         MVC   DA08PSWD(1),0(R5)
BUIDD7   DS    0H
         RETURN  (14,12),RC=(15)
         DROP  R9,R7
         TITLE 'BUILD DAIR CONTROL BLOCKS'
*              R0  NUMBER OF BLOCKS TO BUILD
*              R1  DAPL
*              R11  CPPL
BUILDAIR SAVE  (14,12)
         LA    R0,(SYSEND-DDNAMES)/8    NUMBER OF BLOCKS TO BUILD
         LR    R10,R1         SAVE PL
         USING DAPL,R10
         MVC   DAPLUPT,CPPLUPT     UPT
         MVC   DAPLECT,CPPLECT     ECT
         LA    R1,ECB
         ST    R1,DAPLECB     ECB
         MVC   DAPLPSCB,CPPLPSCB   PSCB
         LR    R2,R0          R2=COUNT
         SLL   R0,2           * ENTRIES * 4
         LA    R1,DA28OPTR-DAPB28
         AR    R0,R1
         GETMAIN              R,LV=(0)
         ST    R1,DAPLDAPB
         ST    R1,@DAIR28
*              BEGIN INIT OF DAPB28
         LR    R10,R1
         USING DAPB28,R10     DONE WITH PARM LIST
         MVC   DA28CD,=X'0028'  DO A LIST OF THINGS
         STH   R2,DA28NOP     THIS MANY
         XC    DA28PFOP,DA28PFOP
         SPACE 2
*              LOOP TO INIT ALL DAIR BLOCKS
*              INIT FOR TYPE 8 CALL EXCEPT
*              FOR CODE WHICH IS SET TO 28 (NOP)
         LR    R4,R2          R4   #ENTRIES
*                             R10  DAPB028
BUID1    GETMAIN  R,LV=130
         ST    R1,DA28OPTR    ENTRY LIST
         USING DAPB08,R1
         XC    DAPB08(130),DAPB08  CLEAR IT
         MVC   DA08CD,=X'0028'     NOP
         LA    R3,DAPB08+84        ADDR OF DSNAME
         USING DSNBUF,R3
         ST    R3,DA08PDSN    SAVE DSNAME ADDR
         MVI   DSNAME,C' '    LENGTH ALREADY ZERO BLANK OUT
         MVC   DSNAME+1(43),DSNAME DSNAME
         DROP  R3
         MVC   DA08DDN,BLANKS
         MVC   DA08UNIT,BLANKS
         MVC   DA08SER,BLANKS
         MVC   DA08MNM,BLANKS
         MVC   DA08PSWD,BLANKS
         MVC   DA08ALN,BLANKS
         DROP  R1
         LA    R10,DAPB28+4  NEXT ENTRY IF ANY
         BCT   R2,BUID1       AND LOOP
         RETURN    (14,12),T  AND BACK
         SPACE 4
FAIL     ABEND 1,DUMP
         SPACE 2
QUIT     LA    1,20           HIGH CODE
         ST    1,RETCODE
         SPACE 1
EXIT     L     R6,4(13)  PREVIOUS SAVE AREA
         MVC   16(4,R6),RETCODE  RETURN SETS CODE
         FREEMAIN             R,LV=WKAL,A=(R13)
         LR    R13,R6
         RETURN   (14,12)
         TITLE 'PLIF PROMPTER  FREE DAIR CONTROL BLOCK'
FREEDAIR SAVE  (14,12)
*              NO INPUT PARMS
*              @DAIR28 IS THE STARTING POINT
         L     R10,@DAIR28
         USING DAPB28,R10
         LH    R2,DA28NOP     NUMBER OF ENTRIES
FRDR1    L     R9,DA28OPTR    GET IT
         FREEMAIN   R,LV=130,A=(R9)
         LA    R10,DAPB28+4   TO NEXT
         BCT   R2,FRDR1
         L     R10,@DAIR28    MAIN BLOCK AGAIN
         LH    R0,DA28NOP     #OPER
         SLL   R0,2           *4
         LA    R1,DA28OPTR-DAPB28
         AR    R0,R1          TOTAL LENGTH
         FREEMAIN    R,LV=(0),A=(R10)
         DROP  R10
         RETURN    (14,12),T
         TITLE 'EASY KEY - ROUTINE TO SET EASY KEYWORDS'
EASYKEY  SAVE  (14,12)
*                             R1 FIRST PCE
*                             PDE ASSUMED DIRECTLY ADDRESSABLE
         USING PDL,R10        R10 == PDL
         LR    R9,R1          GET IT OUT OF THE WAY
         SR    R2,R2          CLEAR R2
EK1      DS    0H             TOP OF LOOP
         MVC   SCRATCH(6),0(R9)   GET PCE ON BOUNDARY
         NI    SCRATCH,B'11100000'   LENGTH ONLY
         CLI   SCRATCH,B'01000000' KEY WORD?
         BE    EK5            YUP
         CLI   SCRATCH,0      END OF LIST
         BE    RETURN         YES ALL DONE
         BAL   R14,FAIL       OOPS MUST HAVE ONLY KEYWORDS
EK5      LH    R7,SCRATCH+4   DISP OF CORRESPONDING PDE
         LH    R8,PDL(R7)     VALUE  R8 = BCT COUNT
EK10     AH    R9,SCRATCH+2   PDE LENGTH - STEPS TO NEXT
         MVC   SCRATCH(8),0(R9)    BOUNDARY
         NI    SCRATCH,B'11100000' GET ID
         CLI   SCRATCH,B'01100000' NAME?
         BE    EK15           YUP
         LTR   R8,R8          ARE WE JUST SCANING?
         BNP   EK1            YUP GO TO TOP
         BAL   R14,FAIL       OOPS - NOT OUR KIND
         SPACE 2
EK15     TM    0(R9),4        HAVE A SUBFIELD
         BZ    EK16           NO
         SR    R8,R8          IF SO THEN WE DON'T DO IT HERE
         B     EK10
         SPACE 1
EK16     BCT   R8,EK10        STEP TO NEXT UNTIL REACH VALUE
         LA    R1,5(R9)       GET KEYWORD NAME
         IC    R2,4(R9)       GET LENGTH-1 OF KEYWORD
         BAL   R14,APEND      GO ADD IT
         BCT   R8,EK10        R8-1 SCAN FOR NEXT KEYWORD
         BAL   R14,FAIL       CAN'T GET HERE
RETURN   RETURN               (14,12)
         DROP  R10
         TITLE 'APEND ROUTINE'
*              APEND  - MOVE KEYWORD POINTED TO BY R1 AND
*              LENGTH-1 IN R2 INTO PARMS  R15 LOST
APEND    LH    R15,PARMS      LENGTH CURRENTLY
         LTR   R15,R15        ZERO IS SPECIAL CASE
         LA    R15,PARMS+2(R15)
         BZ    *+12           DON'T MOVE COMMA IF THIS IS FIRST
         MVI   0(R15),C','     MOVE IN COMMA
         LA    R15,1(R15)     BUMP FOR COMMA
APEND2   EX    R2,*+4         MOVE IT
         MVC   0(1,R15),0(R1)
         LA    R15,1(R15,R2)  BUMP
         S     R15,PARMADDR   NEW LENGTH
         SH    R15,=H'2'      DOWN BY TWO
         STH   R15,PARMS       AND BACK IN
         BR    R14            RETURN
         SPACE 2
APENDC   LH    R15,PARMS      ENTRY FOR NO COMMA INSERT
         LA    R15,PARMS+2(R15)    FIRST AVAIL BYTE
         B     APEND2
PLIF      CSECT
OLDNEW   SAVE  (14,12)
*              R9=DAPB08
         USING DAPB08,R9
         LA    R7,DAIR04
         USING DAPB04,R7
         LA    R1,DAIRPL
         USING DAPL,R1
         ST    R7,DAPLDAPB    FIX UP DAIR PARM BLOCK
         DROP  R1
*              INITIALIZE 04 CONTROL BLOCK
         XC    DAPB04(16),DAPB04
         MVC   DA04CD,=X'0004'
         MVC   DA04PDSN,DA08PDSN
         MVC   DA04CTL,DA08CTL
         ST R13,SAVE2+4
         LA    R13,SAVE2      NEW SAVE AREA
         LINK  EP=IKJDAIR
         L     R13,4(R13)     OLD SAVE AREA
         LTR   R15,R15
         BZ    OLDNEW5
         CH    R15,=H'8'      RC=8
         BNE   DAIR4          OOPS
         CLC   DA04CTRC,=H'8'   NOT FOUND
         BNE   DAIR4          OOPS
         OI    DA08DSP1,DA08NEW     ASSUME IT IS NEW
         OI    DA08DPS2,DA08CAT
         OI    DA08DPS3,DA08CAT
OLDNEW5  RETURN  (14,12),T
         DROP  R7,R9
         TITLE 'PLIF PROMPTER SET DDNAMES'
SETDDNAM SAVE  (14,12)
         L     R7,@DAIR28
         USING DAPB28,R7
         LH    R2,DA28NOP     NUMBER OF OPERATIONS
         LA    R3,DDNAMES+2    FIRST DDNAME
         LR    R0,R2          GET LIST LENGTH
         SLL   R0,3           *8
         STH   R0,DDNAMES     PUT IT IN
STDD1    XC    0(8,R3),0(R3)
         L     R9,DA28OPTR    GET BLOCK
         USING DAPB08,R9
         CLC   DA08CD,=X'0008'  TYTPE 8
         BNE   STDD3          NO
         MVC   0(8,R3),DA08DDN
         B     STDD6
         USING DAPB1C,R9
STDD3    CLC   DA1CCD,=X'001C'
         BNE   STDD4
         MVC   0(8,R3),DA1CDDN
         B     STDD6
         USING DAPB30,R9
STDD4    CLC   DA30CD,=X'0030'
         BNE   STDD5
         MVC   0(8,R3),DA30DDN
STDD5    DS    0H
STDD6    LA    R7,DAPB28+4    BUMP
         LA    R3,8(R3)
         BCT   R2,STDD1
         RETURN               (14,12),T
         LTORG
         TITLE 'CONSTANTS'
BLANKS   DC    CL8' '
         SPACE 4
         TITLE 'PLIF PROMPTER   MESSAGES                           '
MSG001   PUTLINE  OUTPUT=(MSG001T,,DATA),MF=L
MSG001T  DC    AL2(MSG001E-*,0)
         DC    C'LIB OPERAND REQUIRED IF MACRO SPECIFIED'
MSG001E  EQU   *
         SPACE 2
MSG002   PUTLINE OUTPUT=(MSG002T,,DATA),MF=L
MSG002T  DC    AL2(MSG002E-*,0),C'LIB AND NOMACRO SPECIFIED'
MSG002E  EQU                  *
         SPACE 2
MSG003   PUTLINE OUTPUT=(MSG003T,,DATA),MF=L
MSG003T  DC    AL2(MSG003E-*,0)
         DC    C'LOAD(DSN) REQUIRED WHEN SYSIN IS NOT SIMPLE NAME'
MSG003E  EQU   *
         SPACE 2
MSG004   PUTLINE   OUTPUT=(MSG004T,,DATA),MF=L
MSG004T  DC    AL2(MSG004E-*,0)
         DC    C'PRINT(DSN) REQUIRED WHEN SYSIND IS NOT SIMPLE NAME'
MSG004E  EQU   *
         SPACE 2
MSG005   PUTLINE  OUTPUT=(MSG005T,,DATA),MF=L
MSG005T  DC    AL2(MSG005E-*,0)
         DC    C'BOTH PUNCH SYSOUT CLASS AND MACRO DSN SPECIFIED'
MSG005E  EQU   *
MSG006   PUTLINE  OUTPUT=(MSG006T,,DATA),MF=L
MSG006T  DC    AL2(MSG006E-*,0)
         DC    C'PUNCH(DSN) REQUIRED WHEN SYSIN IS NOT SIMPLE NAME'
MSG006E  EQU   *
         SPACE 2
         DS    0F             BOUNDARY ALIGNMENT
MSG007   DC    AL2(L'MSG007T+4,0)
MSG007T  DC    C'  PL/I (F) CALLED  PARM='
         SPACE 2
         DS    0F             BOUNDARY ALIGNMENT
MSG008   DC    AL2(L'MSG008T+4,0)
MSG008T  DC    C' HIGHEST ERROR CODE WAS '
         SPACE 2
MSG009   PUTLINE  OUTPUT=(MSG009T,,DATA),MF=L
MSG009T  DC    AL2(MSG009E-*,0)
         DC    C'NO MORE THAN THREE MACRO LIBRARIES ALLOWED'
MSG009E  EQU   *
         LTORG
         TITLE  'PLIF   PARSE PARAMETER LIST'
         PRINT ON,NOGEN
PLIFPARM IKJPARM DSECT=PDL
DSIN     IKJPOSIT DSNAME,PROMPT='DATA SET NAME'
PRINT    IKJKEYWD DEFAULT='PRINT'
         IKJNAME   'PRINT',SUBFLD=PRINTFLD
         IKJNAME   'SYSPRINT',SUBFLD=SOUTFLDA
PUNCH    IKJKEYWD
         IKJNAME   'DECK',SUBFLD=PUNCHFLD
         IKJNAME   'D'   ,SUBFLD=PUNCHFLD
         IKJNAME   'NODECK'
         IKJNAME   'ND'
         IKJNAME   'SYSPUNCH',SUBFLD=SOUTFLDB
LIB      IKJKEYWD
         IKJNAME    'LIB',SUBFLD=LIBFLD
         SPACE 4
*        BEGINNING OF PLI OPTIONS
PLIFPARM CSECT
PCEFIRST EQU   *
PLIF     CSECT
         SPACE 2
         SPACE 2
*              CONTROL OPTIONS
SIZEPARM IKJKEYWD
         IKJNAME  'SIZE',SUBFLD=SIZEFLD
OPTPARM  IKJKEYWD
         IKJNAME  'OPT',SUBFLD=OPTFLD
         IKJNAME  'O',SUBFLD=OPTFLD
STMT     IKJKEYWD
         IKJNAME  'STMT'
         IKJNAME  'ST'
         IKJNAME  'NOSTMT'
         IKJNAME  'NST'
OBJNMPRM IKJKEYWD
         IKJNAME  'OBJNM',SUBFLD=OBJNMFLD
         IKJNAME  'N',SUBFLD=OBJNMFLD
EXTDIC   IKJKEYWD
         IKJNAME  'EXTDIC'
         IKJNAME  'ED'
         IKJNAME  'NOEXTDIC'
         IKJNAME   'NED'
SYNCHK   IKJKEYWD
         IKJNAME  'SYNCHKT'
         IKJNAME  'SKT'
         IKJNAME  'SYNCHKS'
         IKJNAME  'SKS'
         IKJNAME  'SYNCHKE'
         IKJNAME  'SKE'
         SPACE   2
*              PREPROCESSER OPTIONS
MACRO    IKJKEYWD
         IKJNAME  'MACRO'
         IKJNAME  'M'
         IKJNAME  'NOMACRO'
         IKJNAME  'NM'
COMP     IKJKEYWD
         IKJNAME  'COMP'
         IKJNAME  'C'
         IKJNAME  'NOCOMP'
         IKJNAME  'NC'
MACDCK   IKJKEYWD
         IKJNAME  'MACDCK',SUBFLD=PUNCHFLD
         IKJNAME  'MD',SUBFLD=PUNCHFLD
         IKJNAME  'NOMACDK'
         IKJNAME  'NMD'
         SPACE  2
*              INPUT  OPTIONS
CHAR     IKJKEYWD
         IKJNAME  'CHAR48'
         IKJNAME  'C48'
         IKJNAME  'CHAR60'
         IKJNAME  'C60'
BCD      IKJKEYWD
         IKJNAME  'BCD'
         IKJNAME  'B'
         IKJNAME  'EBCDIC'
         IKJNAME  'EB'
SMPARM   IKJKEYWD
         IKJNAME  'SORMGIN',SUBFLD=SMFLD
         IKJNAME  'SM',SUBFLD=SMFLD
         SPACE    2
*              OUTPUT OPTIONS
LOAD     IKJKEYWD  DEFAULT='LOAD'
         IKJNAME  'LOAD',SUBFLD=GOFLD
         IKJNAME  'LD',SUBFLD=GOFLD
         IKJNAME  'NOLOAD'
         IKJNAME  'NLD'
*              LISTING  OPTIONS
LCPARM   IKJKEYWD
         IKJNAME  'LINECNT',SUBFLD=LCFLD
         IKJNAME  'LC',SUBFLD=LCFLD
OPLIST   IKJKEYWD
         IKJNAME  'OPLIST'
         IKJNAME  'OL'
         IKJNAME  'NOOPLIST'
         IKJNAME  'NOL'
SOURCE2  IKJKEYWD
         IKJNAME  'SOURCE2'
         IKJNAME  'S2'
         IKJNAME  'NOSOURCE2'
         IKJNAME  'NS2'
SOURCE   IKJKEYWD
         IKJNAME  'SOURCE'
         IKJNAME  'S'
         IKJNAME  'NOSOURCE'
         IKJNAME  'NS'
NEST     IKJKEYWD
         IKJNAME  'NEST'
         IKJNAME  'NT'
         IKJNAME  'NONEST'
         IKJNAME  'NNT'
ATR      IKJKEYWD
         IKJNAME  'ATR'
         IKJNAME  'A'
         IKJNAME  'NOATR'
         IKJNAME  'NA'
XREF     IKJKEYWD
         IKJNAME  'XREF'
         IKJNAME  'X'
         IKJNAME  'NOXREF'
         IKJNAME  'NX'
EXTREF   IKJKEYWD
         IKJNAME  'EXTREF'
         IKJNAME  'E'
         IKJNAME  'NOEXTREF'
         IKJNAME  'NE'
LIST     IKJKEYWD
         IKJNAME  'LIST'
         IKJNAME  'L'
         IKJNAME  'NOLIST'
         IKJNAME  'NL'
FLAG     IKJKEYWD
         IKJNAME  'FLAGW'
         IKJNAME  'FW'
         IKJNAME  'FLAGE'
         IKJNAME  'FE'
         IKJNAME  'FLAGS'
         IKJNAME  'FS'
SIZEFLD  IKJSUBF
SIZE     IKJIDENT 'NUMBER',FIRST=NUMERIC,OTHER=NUMERIC,                *
               PROMPT='CORE SIZE'
LIBFLD   IKJSUBF
DSLIB    IKJPOSIT  DSNAME,LIST,PROMPT='MACRO LIBRARY NAME'
GOFLD    IKJSUBF
DSGO     IKJPOSIT  DSNAME
PUNCHFLD IKJSUBF
DSPUNCH  IKJPOSIT  DSTHING
SOUTFLDB IKJSUBF
SYSOUTB  IKJIDENT  'CLASS',FIRST=ALPHA,MAXLNTH=1,DEFAULT='B'
SYSOUTBP IKJIDENT       'COPYX',OTHER=ALPHANUM,MAXLNTH=8
SYSOUTBF IKJIDENT    'FORM NUMBER',FIRST=ANY,OTHER=ANY,MAXLNTH=4
OPTFLD   IKJSUBF
OPT      IKJIDENT 'OPTIMIZATION LEVEL',MAXLNTH=1,FIRST=NUMERIC,        *
               PROMPT='OPTIMIZATION LEVEL 0 1 OR 2'
OBJNMFLD IKJSUBF
OBJNM    IKJIDENT 'NAME',OTHER=ALPHANUM,MAXLNTH=8,                   * *
               PROMPT='LOAD MODULE NAME'
SMFLD    IKJSUBF
SM1      IKJIDENT 'NUMBER',FIRST=NUMERIC,OTHER=NUMERIC,DEFAULT='2'
SM2      IKJIDENT 'NUMBER',FIRST=NUMERIC,OTHER=NUMERIC,DEFAULT='72'
SM3      IKJIDENT 'NUMBER',FIRST=NUMERIC,OTHER=NUMERIC,DEFAULT='1'
LCFLD    IKJSUBF
LINECNT  IKJIDENT 'NUMBER',FIRST=NUMERIC,OTHER=NUMERIC,                *
               PROMPT='NUMBER OF LINES PER PAGE'
PRINTFLD IKJSUBF
DSPRINT IKJPOSIT  DSTHING
SOUTFLDA IKJSUBF
SYSOUTA  IKJIDENT  'CLASS',FIRST=ALPHA,MAXLNTH=1,DEFAULT='A'
SYSOUTAP IKJIDENT  'COPYX',OTHER=ALPHANUM,MAXLNTH=8
SYSOUTAF IKJIDENT             'FORM NUMBER',MAXLNTH=4,DEFAULT='10',    *
               FIRST=ANY,OTHER=ANY
         IKJENDP
         PRINT ON,GEN
         TITLE 'PLIF PROMPTER   DSECTS'
SAVE     DSECT
         DS    18A
RETCODE  DS    A
SCRATCH  DS    D              WORK AREA
@PDE     DS    A
@DAIR28  DS    A
ECB      DS    A
SIMPLE   DS    2A
PARSEPL  DS    7A
DAIRPL   DS    7A
DAIR04   DS    4A
FLAGS    DS    X
PTPL     DS    4A
AOUT     DS    C
BOUT     DS    C
ENDSAVE  EQU   *
SAVE2    DS    18A            SECOND WORK AREA
         ORG   SAVE2
DDNAMES  DC    H'48'          PLIF ASM
SYSLIN   DC    XL8'0'         YES  NO       SAME AS SYSGO
SYSLIB3  DC    XL8'0'         NO   NO
SYSLIB2  DC    XL8'0'         NO   NO
SYSLIB   DC    XL8'0'         YES  YES      MACRO
SYSIN    DC    XL8'0'         YES  YES      INPUT SOURCE
SYSPRINT DC    XL8'0'         YES  YES      OUTPUT
SYSPUNCH DC    XL8'0'         YES  YES      PUNCH OUTPUT
SYSUT1   DC    XL8'0'         YES  YES      WORK
SYSUT2   DC    XL8'0'         NO   YES      WORK
SYSUT3   DC    XL8'0'         YES  YES      WORK
SYSGO    DC    XL8'0'         NO   YES      OBJ SAME AS SYSLIN
SYSTERM  DC    XL8'0'         NO   YES      ERROR MESSAGES
SYSEND   EQU   *
         SPACE 2
PARMADDR DC    A(PARMS)
         DC    X'80',AL3(DDNAMES)
         DC    H'0'           HALFWORD USED AS PARM-2 FOR PUTLINE
PARMS    DC    H'0',CL252' '
NO       EQU   B'00'
MIX      EQU   B'01' OR B'10'
YES      EQU   B'11'
SPMAC    DC    AL1(MIX)
SPMD     DC    AL1(MIX)
SPLIB    DC    AL1(MIX)
SPD      DC    AL1(NO)
WKAL     EQU   *-SAVE
         SPACE 4
DSNBUF   DSECT
DSLENG   DS    H
DSNAME   DS    CL44
         EJECT
         IKJPPL
         SPACE 4
         IKJCPPL
         SPACE 4
         IKJDAPL
         IKJIOPL
         EJECT
         IKJDAP04
         SPACE 4
         IKJDAP30
         EJECT
         SPACE 4
         IKJDAP0C
DA0CDDN  DS    CL8            MISSING POINTER FROM MACRO
         SPACE 4
         IKJDAP08
         EJECT
         SPACE 4
         IKJDAP1C
         SPACE 4
         IKJDAP28
DA28OPTR DS    A              MISSING POINTER FROM FIELD
         SPACE 4
         IKJDAP18
         EJECT
         REGEQU
         END
