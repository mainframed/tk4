CA     TITLE 'NASA/GSFC CATMAN/CAT -- CATLG MGNT (TSO) CMD PROCESSOR'
**
***********************************************************************
**
** THIS COMMAND PROCESSOR WAS DESIGNED AND DEVELOPED BY
**    J. SCHINDLER
**    COMPUTER SCIENCES CORP.
**    NASA, GODDARD SPACE FLIGHT CENTER
**    GREENBELT, MARYLAND
**
** UPDATED 10APR77, GENE CZARCINSKI, NASA/GSFC ...
**      . CHANGE CSECT NAME FROM 'GSFTSOCT' TO 'CATMAN' WITH
**        AN ENTRY POINT OF CAT (LMOD WILL HAVE ALIAS OF CAT)
**        ... MORE CONSISTANCY AND CLEANER CMDLIB
**
** UPDATED 15SEP80, BILL GODFREY, AFDSC/PENTAGON ...
**      . CALL IKJPARS THRU CVT POINTER INSTEAD OF LINK.
**      . USERS WITHOUT OPER ATTRIBUTE ARE NOW ALLOWED TO USE
**        QUOTED DSNAMES.  THE OLD RESTRICTION WAS REMOVED BECAUSE
**        USERS CAN EASILY BYPASS IT WITH MVS PROFILE NOPREFIX.
**      . ADD FIELDS 'PREFIX' AND 'PREFIXL' FOR PREFIXING DSNAMES,
**        AND INITIALIZE THEM FROM THE USER PROFILE TABLE.
**        ADD IKJUPT MAPPING MACRO. CHANGE ALL PREFIXING ROUTINES
**        TO USE PREFIX FIELDS INSTEAD OF USERID FIELDS AND TO
**        CHECK PREFIX LENGTH FOR ZERO.
**      . TEST FOR BATCH ENVIRONMENT, ALLOW ALL FUNCTIONS IN BATCH.
**      . ADDED ROUTINE TO MAKE THE DEFAULT UNIT EQUAL TO THE
**        UNIT TYPE OF THE VOLUME IF THE VOLUME IS DASD AND ONLINE.
**        HAD TO MOVE 'BAL-TO-INITUNIT' STATEMENTS SO THEY ARE
**        EXECUTED AFTER THE VOLUME FIELD IS FILLED IN.
**      . ADDED 3330V TO TABLE OF VALID UNIT NAMES, FOR MSS VOLUMES.
**
***********************************************************************
**
***********************************************************************
**
         MACRO
&NAME    CLEAR &VAR
         LCLC  &LENGTH
&LENGTH  SETC  'L'''
&NAME    MVI   &VAR,C' '
         AIF   (L'&VAR EQ 1).X1
         MVC   &VAR+1(&LENGTH&VAR-1),&VAR
.X1      ANOP
         MEND
         EJECT
**
**  SYMBOLICS
**
         GBLC  &CSECT
         LCLC  &BLDG,&BLDX,&DLTX,&BLDA,&DLTA,&CONNECT,&RELEASE
         LCLC  &RECATLG,&CATLG,&UNCATLG
         LCLA  &BLDGL,&BLDXL,&DLTXL,&BLDAL,&DLTAL
         LCLA  &CONECTL,&RELESEL,&RECATL,&CATL,&UNCATL
**
** CSECT NAME
**
&CSECT   SETC  'CATMAN'                                     GT02101
**
**
** ENTRY POINT NAMES
**
&BLDG    SETC  'BLDG'  BUILD A GENERATION INDEX
&BLDGL   SETA  4  MINIMUM LENGTH FOR UNIQUE NAME
&BLDX    SETC  'BLDX'  BUILD AN INDEX
&BLDXL   SETA  4
&DLTX    SETC  'DLTX'  DELETE AN INDEX
&DLTXL   SETA  4
&BLDA    SETC  'BLDA'  ASSIGN AN ALIAS
&BLDAL   SETA  4
&DLTA    SETC  'DLTA'  DELETE AN ALIAS
&DLTAL   SETA  4
&CONNECT SETC  'CONNECT' CONNECT A CONTROL VOLUME
&CONECTL SETA  2
&RELEASE SETC  'RELEASE' DISCONNECT A CONTROL VOLUME
&RELESEL SETA  3
&RECATLG SETC  'RECATLG' RECATALOG A DATA SET
&RECATL  SETA  3
&CATLG   SETC  'CATLG' CREATE INDEXES AND CATALOG A DATA SET
&CATL    SETA  2
&UNCATLG SETC  'UNCATLG' UNCATALOG A DATA SET AND DELETE INDICES
&UNCATL  SETA  1
**
**
         EJECT
&CSECT   CSECT
         ENTRY CAT                                          GT02101
**
** THIS CSECT USES THE 'INDEX' AND 'CATALOG' MACROS IN CONJUNCTION
** WITH THE APPROPRIATE  'CAMLST'       TO PERFORM THE VARIOUS CATALOG
** MANAGEMENT FUNCTIONS. A MORE DETAILED DESCRIPTION PRECEEDS EACH
** FUNCTION.
**
** CP ATTRIBUTES - NONE
**
** STANDARD IBM MACROS USED -
**       INDEX, CATALOG,         TPUT, TGET, GETMAIN, FREEMAIN,
**       EXTRACT, SAVE, RETURN, LINK, IKJPARS (VIA LINK)
**
**
** OTHER MACROS (CODING INCLUDED) -
**       CLEAR    - SET A VARIABLE TO BLANKS
         EJECT
**
**  REGISTER-EQUATES -
**
R0       EQU   0 WORK, SVC, ECT
R1       EQU   1 STANDARD LINKAGE, INTERNAL LINKAGE, AND WORK
R2       EQU   2 WORK
R3       EQU   3 WORK
R4       EQU   4 WORK
R5       EQU   5 WORK
R6       EQU   6 WORK
R7       EQU   7 WORK
R8       EQU   8 INTERNAL LINKAGE
R9       EQU   9 PARSE DESCRIPTOR LIST (PDL)
R10      EQU   10  BASE REG
R11      EQU   11  BASE REG
R12      EQU   12  BASE REG
R13      EQU   13  SAVE AREA ADDR
R14      EQU   14  STANDARD LINKAGE AND WORK
R15      EQU   15  STANDARD LINKAGE AND WORK
**
**  FLAGS -
**       1... .... - OPERATOR PRIVILEGES
**       .1.. .... - CONNECT WAS EXECUTED
**       ..1. .... - CVOL INIT SECTION ENTERED BEFORE
**       ...1 .... - CVOL DEFAULT
**       .... 1111 - NOT USED
**
OPERFLG  EQU   X'80'  OPERATOR PRIVILEGES
CONFLG   EQU   X'40'  CONNECT WAS EXECUTED
FRSTFLG  EQU   X'20'  FIRST TIME ENTERED
DFLTFLG1 EQU   X'10'  CVOL DEFAULT
**
         USING PDL,R9    R9 IS NOT DROPPED
         EJECT
**
**  SAVE
**
CAT      SAVE  (14,12),,&CSECT._GT02101_CATMAN/CAT
**
** SET UP BASE REGS
**
         LR    R10,R15
         USING &CSECT,R10,R11,R12
         LA    R11,2048
         AR    R11,R11
         LR    R12,R11
         AR    R12,R12
         AR    R11,R10
         AR    R12,R10
         ST    R13,SAVE+4
         LA    R2,SAVE
         ST    R2,8(R13)
         LR    R13,R2
**
** INIT CONSTANTS
**
         XC    FLAGS,FLAGS
         XC    ANSWER1,ANSWER1
         XC    ANSWER2,ANSWER2
         XC    CAMLST(CAMLSTL),CAMLST
**
** INIT PREFIX FOR UNQUOTED DSNAMES
**
         USING CPPL,R1
         L     R2,CPPLUPT          USER PROFILE TABLE
         USING UPT,R2
         SLR   R15,R15
         IC    R15,UPTPREFL        LENGTH OF PREFIX
         STH   R15,PREFIXL
         CLEAR PREFIX
         LTR   R15,R15             IS LENGTH ZERO
         BZ    NOPREFIX            YES, BRANCH
         BCTR  R15,0               LENGTH MINUS 1 FOR EX
         LA    R14,PREFIX
         B     *+10
         MVC   0(0,R14),UPTPREFX   (EXECUTED)
         EX    R15,*-6             COPY PREFIX FROM UPT
NOPREFIX EQU   *
         DROP  R2                  UPT
**
** INIT PARSE PARM LIST AND PARSE
**
         LA    R2,PARSEPL  LOAD ADDR OF PARSE PARM LIST
         USING PPL,R2
         MVC   PPLUPT,CPPLUPT  USER PROFILE TABLE
         MVC   PPLECT,CPPLECT  ENVIRONMENT CONTROL TABLE
         LA    R3,ECB
         ST    R3,PPLECB  EVENT CONTROL BLOCK
         LA    R3,ANSWER1
         ST    R3,PPLANS
         MVC   PPLCBUF,CPPLCBUF  COMMAND BUFFER
         XC    PPLUWA(4),PPLUWA  USER WORK AREA
         MVC   PPLPCL,=V(PCLPARM)  PARM CONTROL LIST
         XC    ECB,ECB
         LA    R1,PARSEPL
         L     R15,16              CVTPTR
         TM    524(R15),X'80'      IF HI ORDER BIT NOT ON
         BNO   PARSELNK               THEN DO LINK, NOT CALL
         L     R15,524(,R15)       CVTPARS
         BALR  R14,R15             CALL IKJPARS
         B     PARSERET            SKIP AROUND LINK
PARSELNK EQU   *
         LINK  EP=IKJPARS  LINK TO PARSE
PARSERET LTR   R15,R15  PARSE ERROR?
         BZ    CHKOPER  NO
         TPUT  PARSERR,L'PARSERR
         B     RETURN  PARSE ERROR, RETURN
         DROP  R1,R2               CPPL, PPL
**
** CHECK FOR OPER PRIVILEGES BY EXECUTING THE EXTRACT MACRO.
** THIS CHECK CAN BE BYPASSED BY ZAPPING THE NOP INSTRUCTION
** TO BRANCH UNCONDITIONALLY (X'F0').
**
CHKOPER  DC    0H'0'
         L     R9,ANSWER1  LOAD ADDR OF PDE
**
         NOP   GOTOFUNC  ZAP THIS NOP TO BYPASS OPER CHECK
**
         EXTRACT DWORK,FIELDS=(PSB)
         L     R3,DWORK  LOAD ADDR OF PSCB
         L     R1,548    PSAAOLD, CURRENT ASCB
         L     R1,60(,R1) ASCBTSB, PTR TO TERMINAL STATUS BLOCK
         LTR   R1,R1      IS THIS A TSO SESSION
         BZ    OPER       NO, ALLOW OPER FUNCTIONS IN BATCH
         XR    R2,R2
         IC    R2,7(R3)  GET LENGTH OF USER ID
         STH   R2,USERIDL  STORE USER ID LENGTH
         BCTR  R2,R0
         CLEAR USERID
         LA    R1,USERID
         EX    R2,MVCR1R3
         TM    16(R3),X'80'  CHECK FOR OPER PRIVILEGES
         BZ    GOTOFUNC  GO TO BRANCH TO FUNCTION
OPER     OI    OPERPRIV,OPERFLG
**
** SEARCH THE TABLE FOR THE FUNCTION AND BRANCH TO THE APPROPRIATE
** SECTION.
**
GOTOFUNC DC    0H'0'
         LA    R6,PARSFUNC  LOAD ADDR OF FUNCTION PDE
CHKFUNCT DC    0H'0'
         LH    R2,4(R6)  LOAD LENGTH OF FUNCTION NAME
         LR    R4,R2  SAVE LENGTH FOR COMPARE
         BCTR  R2,R0
         MVC   NAME(8),BLANKS
         LA    R1,NAME
         L     R3,0(R6)  LOAD ADDR OF FUNCTION NAME
         EX    R2,MVCR1R3  MOVE FUNCTION NAME
         LA    R1,FUNCTAB
         LA    R2,12
         LA    R3,FUNCTABE
         XR    R5,R5
LOOP1    DC    0H'0'
         IC    R5,0(R1)  GET MINIMUM LENGTH FOR COMPARE
         CR    R5,R4  USE MAXIMUM FOR COMPARE
         BNL   COMP
         LR    R5,R4
COMP     DC    0H'0'
         BCTR  R5,R0  FOR COMPARE
         EX    R5,COMPARE
*COMPARE CLC   NAME(0),4(R1)
         BE    GOTFUNC
         BXLE  R1,R2,LOOP1
         MVC   FUNCERRC,NAME  FUNCTION NAME NOT FOUND
         TPUT  FUNCERR,FUNCERRL  UNKNOWN FUNCTION, ---
         L     R1,=V(FUNCTPCL)
         BAL   R8,PRMTPARS  GO PROMPT FOR ANOTHER FUNCTION NAME
         L     R2,ANSWER2
         USING FUNCTPDL,R2
         LA    R6,NEWFUNCT
         DROP  R2
         B     CHKFUNCT
GOTFUNC  DC    0H'0'
         L     R2,0(R1)  LOAD ADDR OF THE SECTION
         BR    R2  GO DO IT
         DC    0F'0'
FUNCTAB  DC    AL1(&BLDGL),AL3(&BLDG),CL8'&BLDG'
         DC    AL1(&BLDXL),AL3(&BLDX),CL8'&BLDX'
         DC    AL1(&DLTXL),AL3(&DLTX),CL8'&DLTX'
         DC    AL1(&BLDAL),AL3(&BLDA),CL8'&BLDA'
         DC    AL1(&DLTAL),AL3(&DLTA),CL8'&DLTA'
         DC    AL1(&CONECTL),AL3(&CONNECT),CL8'&CONNECT'
         DC    AL1(&RELESEL),AL3(&RELEASE),CL8'&RELEASE'
         DC    AL1(&RECATL),AL3(&RECATLG),CL8'&RECATLG'
         DC    AL1(&CATL),AL3(&CATLG),CL8'&CATLG'
         DC    AL1(&UNCATL),AL3(&UNCATLG),CL8'&UNCATLG'
FUNCTABE EQU   *-12
         EJECT
***********************************************************************
**
**  BUILD A GENERATION INDEX (BLDG)
**
**
**   COMMAND -
**     CATMAN BLDG  'INDEX NAME LIST'  CVOL('VOL-SER LIST')
**             DELETE  EMPTY  ENTRIES('NO. OF GENERATION DATA GROUPS')
**
**     DEFAULTS - CVOL - SYSTEM RESIDENCE VOLUME, DELETE NOT SPECIFIED
**                (CAMLST ENTRY SET TO ZERO), EMPTY NOT SPECIFIED
**                (CAMLST ENTRY SET TO ZERO)
**
**
         DC    C'&CSECT-&BLDG'
&BLDG    DC    0H'0'
         TM    OPERPRIV,OPERFLG  DOES USER HAVE OPER?
         BO    BLDG1 YES
         MVC   OPERMSGC,USERID  NO, OUTPUT MSG
         TPUT  OPERMSG,OPERMSGL COMMAND NOT AUTHORIZED FOR ---
         B     RETURN
BLDG1    DC    0H'0'
         MVI   CAMFLG1,X'04' BLDG
         MVI   CAMFLG2,X'20'
         CLI   PARSDELT+1,0 WAS 'DELETE' SPECIFIED
         BZ    BLDG2  NO
         OI    CAMFLG3,X'40' INDICATE 'DELETE'
BLDG2    CLI   PARSEMPT+1,0 WAS 'EMPTY' SPECIFIED?
         BZ    BLDG2A  NO
         OI    CAMFLG3,X'08' INDICATE 'EMPTY'
BLDG2A   DC    0H'0'
         LH    R2,PARSENTR+4  LOAD LENGTH OF ENTRIES
         LTR   R2,R2  IS IT ZERO?
         BNZ   BLDG4  NO, GO CONVERT TO BINARY
BLDG3    DC    0H'0'
         L     R1,=V(ENTRPCL)
         BAL   R8,PRMTPARS  GO LET PARSE PROMPT FOR NO. OF ENTRIES
         L     R2,ANSWER2
         USING ENTRPDL,R2
         LA    R3,PARSENTR
         MVC   0(8,R3),NEWENTR  MOVE NEW PDE TO OLD PDE
         DROP  R2
BLDG4    DC    0H'0'
         LH    R2,PARSENTR+4 LOAD LENGTH
         BCTR  R2,R0
         L     R1,PARSENTR
         EX    R2,PACK
*PACK    PACK  DWORK,0(0,R1)
         CVB   R2,DWORK
         CH    R2,=H'255'  IS NO. OF ENTRIES GREATER THAN 255?
         BNH   BLDG5  NO
         TPUT  MAXENTRS,L'MAXENTRS  MAX ENTRIES EXCEEDED
         B     BLDG3  GO PROMPT FOR NO. OF ENTRIES
BLDG5    STC   R2,CAMOPT3 STORE NO. OF ENTRIES
         B     BLDXSTRT  GO TO BLDX
**
** THE REST OF THE CAMLST WILL BE FILLED IN BY BLDX SECTION SINCE THE
** LOGIC AFTER THE INITIALIZATION IS THE SAME FOR BOTH BLDX AND BLDG.
**
         EJECT
***********************************************************************
**
**  BUILD A NEW INDEX STRUCTURE (BLDX)
**
**
**   COMMAND -
**     CATMAN BLDX  'INDEX NAME LIST'  CVOL('VOL-SER LIST')
**
**     DEFAULTS - CVOL - SYSTEM RESIDENCE VOL UNLESS DFLTCVOL CSECT
**                       CONTAINS A VOL-SER.
**
         DC    C'&CSECT-&BLDX'
&BLDX    DC    0H'0'
         MVI   CAMFLG1,X'04'  BLDX
         MVI   CAMFLG2,X'40'
BLDXSTRT DC    0H'0'
         LA    R5,PARSNAME LOAD ADDR OF INDEX
BLDXCVOL DC    0H'0'
         BAL   R8,INITCVOL  GO INIT CAMLST CVOL
BLDXNAME DC    0H'0'  PROCESS INDEX
         LH    R2,4(R5) LOAD LENGTH OF INDEX
         LTR   R2,R2  IS LENGTH = 0?
         BNZ   BLDX3     NO
         LA    R14,CINDEX
         LA    R15,NOTVALD
         XR    R1,R1  PREFIX USER ID IF NOT IN QOUTES
         BAL   R8,MSGOUT   INDEX ---  NOT VALID
         B     RETURN  ERROR,  RETURN
BLDX3    DC    0H'0'
         CLEAR NAME
         TM    6(R5),X'40'  DSNAME/INDEX IN QUOTES?
         BZ    BLDX5     NO
*        TM    OPERPRIV,OPERFLG   OPER PRIVILEGES?
*        BO    BLDX4     YES
*        LA    R14,CINDEX
*        LA    R15,INQOTMSG
*        XR    R1,R1  PREFIX USER ID IF NOT IN QOUTES
*        BAL   R8,MSGOUT  INDEX --- IN QUOTES
*        TPUT  NOTAUTMS,L'NOTAUTMS
*        B     RETURN  ERROR,  RETURN
BLDX4    DC    0H'0'
         LH    R2,4(R5)      LOAD LENGTH OF INDEX
         BCTR  R2,R0
         L     R3,0(R5)    LOAD ADDR OF INDEX
         LA    R1,NAME
         EX    R2,MVCR1R3  MOVE INDEX INTO NAME
         B     BLDX6
BLDX5    DC    0H'0'
         LH    R2,PREFIXL  LOAD LENGTH OF PREFIX
         LTR   R2,R2
         BZ    BLDX4       NOPREFIX
         BCTR  R2,R0
         LA    R1,NAME
         LA    R3,PREFIX
         EX    R2,MVCR1R3  MOVE IN PREFIX
         LA    R1,1(R1,R2)
         MVI   0(R1),C'.'
         LA    R1,1(R1)
         LH    R2,4(R5)  LOAD LENGTH OF INDEX
         BCTR  R2,R0
         L     R3,0(R5)  LOAD ADDR OF INDEX
         EX    R2,MVCR1R3  MOVE IN REST OF INDEX
BLDX6    DC    0H'0'
         LA    R1,NAME
         ST    R1,CAMPARM2 INIT CAMLST
         INDEX CAMLST   GO CREATE INDEX
         LTR   R15,R15  ANY ERRORS?
         BZ    BLDX10     NO
         ST    R15,SAVER15
         LA    R14,BLDXERR
         LA    R15,SPECBLNK
         XR    R1,R1
         BAL   R8,MSGOUT
         L     R15,SAVER15
         BAL   R8,INDEXERR  YES, GO OUTPUT MSG
         B     RETURN
BLDX10   DC    0H'0'
         LA    R14,C1INDEX
         LA    R15,BUILT
         XR    R1,R1
         BAL   R8,MSGOUT INDEX --- BUILT
         CLI   24(R5),X'FF' LAST INDEX IN LIST?
         BE    RETURN  YES,  FINISHED WITH BLDX
         L     R5,24(R5)  LOAD ADDR OF NEXT PDE
         B     BLDXNAME
         EJECT
***********************************************************************
**
** DELETE AN INDEX (DLTX)
**
**
**   COMMAND -
**     CATMAN DLTX 'INDEX NAME LIST' CVOL('VOL-SER LIST')
**
**     DEFAULTS - CVOL - SYSTEM RESIDENCE VOLUME UNLESS DFLFCVOL CSECT
**                       CONTAINS A VOL-SER.
**
         DC    C'&CSECT-&DLTX'
&DLTX    DC    0H'0'
         MVI   CAMFLG1,X'04'
         MVI   CAMFLG2,X'04'
         LA    R2,NAME
         ST    R2,CAMPARM2
         LA    R5,PARSNAME  LOAD ADDR OF INDEX NAME
DLTXCVOL DC    0H'0'
         BAL   R8,INITCVOL  GO INIT CAMLST CVOL
DLTXNAME DC    0H'0'   PROCESS INDEX NAME
         LH    R2,4(R5) LOAD LENGTH OF INDEX
         LTR   R2,R2   IS IT ZERO?
         BNZ   DLTX2     NO
         LA    R14,CINDEX
         LA    R15,NOTVALD
         XR    R1,R1
         BAL   R8,MSGOUT  INDEX NAME  ---  NOT VALID
         B     RETURN
DLTX2    DC    0H'0'
         TM    6(R5),X'40' INDEX IN QUOTES?
         BO    DLTX3     YES
         CLEAR NAME
         LH    R2,PREFIXL  LOAD LENGTH OF PREFIX
         LTR   R2,R2
         BZ    DLTX4       NOPREFIX
         BCTR  R2,R0
         LA    R3,PREFIX LOAD ADDR OF PREFIX
         LA    R1,NAME
         EX    R2,MVCR1R3
         LA    R1,1(R1,R2)
         MVI   0(R1),C'.'
         LA    R1,1(R1)
         LH    R2,4(R5)  LOAD LENGTH OF INDEX
         BCTR  R2,R0
         L     R3,0(R5)  LOAD ADDR OF INDEX
         EX    R2,MVCR1R3
         B     DLTXINDX
DLTX3    DC    0H'0'
*        TM    OPERPRIV,OPERFLG USER HAVE OPER PRIVILEGES?
*        BO    DLTX4     YES
*        LA    R14,CINDEX
*        LA    R15,INQOTMSG
*        XR    R1,R1
*        BAL   R8,MSGOUT  INDEX NAME --- INQOUTES
*        TPUT  NOTAUTMS,L'NOTAUTMS  USER NOT AUTHORIZED
*        B     RETURN
DLTX4    DC    0H'0'
         CLEAR NAME
         LH    R2,4(R5)  LOAD LENGTH OF INDEX
         BCTR  R2,R0
         L     R3,0(R5)  LOAD ADDR OF INDEX
         LA    R1,NAME
         EX    R2,MVCR1R3  MOVE INDEX NAME
DLTXINDX INDEX CAMLST   DELETE INDEX
         LTR   R15,R15  ANY ERRORS?
         BZ    DLTX5     NO
         ST    R15,SAVER15
         LA    R14,DLTXERR
         LA    R15,SPECBLNK
         XR    R1,R1
         BAL   R8,MSGOUT
         L     R15,SAVER15
         BAL   R8,INDEXERR  GO OUTPUT ERROR MSG
         B     RETURN
DLTX5    DC    0H'0'
         LA    R14,C1INDEX
         LA    R15,DELETED
         XR    R1,R1
         BAL   R8,MSGOUT
         CLI   24(R5),X'FF' ANY MORE INDEX NAMES?
         BE    RETURN    NO
         L     R5,24(R5)  GET ADDR OF NEXT PDE
         B     DLTXCVOL  GO USE NEXT CVOL
         EJECT
***********************************************************************
**
**  ASSIGN AN ALIAS (BLDA)
**
**
**   COMMAND -
**     CATMAN BLDA 'DSNAME LIST' CVOL('VOL-SER LIST')
**              ALIAS('ALIAS NAME LIST')
**
**     DEFAULTS - CVOL - SYSTEM RESIDENCE VOLUME UNLESS DFLTCVOL CSECT
**                       CONTAINS A VOL-SER.
**
**
         DC    C'&CSECT-&BLDA'
&BLDA    DC    0H'0'
         TM    OPERPRIV,OPERFLG  DOES USER HAVE OPER PRIVILEGES?
         BO    BLDA1     YES
         MVC   OPERMSGC,USERID  NO, CANT USE IT
         TPUT  OPERMSG,OPERMSGL  COMMAND NOT AUTHORIZED FOR ---
         B     RETURN
BLDA1    DC    0H'0'
         MVI   CAMFLG1,X'44' INIT CAMLST FOR BLDA
         MVI   CAMFLG2,X'10'
         LA    R2,NAME
         ST    R2,CAMPARM2
         LA    R2,ALIAS
         ST    R2,CAMPARM4
         LA    R5,PARSNAME
         LA    R6,PARSALIS
BLDACVOL DC    0H'0'
         BAL   R8,INITCVOL  GO INIT CAMLST CVOL
         LH    R2,4(R6)  LOAD LENGTH OF ALIAS NAME
         LTR   R2,R2  WAS AN ALIAS SUPPLIED?
         BNZ   BLDA2     YES
         L     R1,=V(ALIASPCL)
         BAL   R8,PRMTPARS  GO LET PARSE PROMPT FOR ALIAS
         L     R2,ANSWER2
         USING ALIASPDL,R2
         MVC   0(8,R6),NEWALIAS  OVERLAY OLD PDE WITH NEW
         DROP  R2
         LH    R2,4(R6)  LOAD LENGTH OF ALIAS NAME
BLDA2    BCTR  R2,R0
         L     R3,0(R6)  LOAD ADDR OF ALIAS NAME
         LA    R1,ALIAS
         CLEAR ALIAS
         EX    R2,MVCR1R3  MOVE IN ALIAS NAME
BLDANAME DC    0H'0'
         LH    R2,4(R5)  LOAD LENGTH OF DSNAME
         LTR   R2,R2  IS DSNAME INPUT?
         BNZ   BLDA3     YES
         LA    R14,DSNMSG  NO, OUTPUT MSG
         LA    R15,NOTVALD
         XR    R1,R1
         BAL   R8,MSGOUT  DATA SET NAME --- NOT VALID
         B     RETURN
BLDA3    DC    0H'0'
         BCTR  R2,R0
         CLEAR NAME
         L     R3,0(R5)
         LA    R1,NAME
         EX    R2,MVCR1R3
         INDEX CAMLST  BLDA
         LTR   R15,R15  ANY ERRORS?
         BZ    BLDA4     NO
         ST    R15,SAVER15
         MVC   BLDAERRC,ALIAS
         LA    R14,BLDAERR
         LA    R15,SPECBLNK
         LA    R1,4
         BAL   R8,MSGOUT
         L     R15,SAVER15
         BAL   R8,INDEXERR   GO PROCESS ERROR
         B     RETURN  ERROR, DONT KNOW WHY, SO RETURN
BLDA4    DC    0H'0'
         MVC   BLDAMSGC,ALIAS
         LA    R14,BLDAMSG
         LA    R15,SPECBLNK
         LA    R1,4
         BAL   R8,MSGOUT
         CLI   24(R5),X'FF' ANY MORE DSNAMES?
         BE    RETURN   NO, RETURN
         L     R5,24(R5)  YES, USE NEXT PDE
         CLI   8(R6),X'FF' ANY MORE ALIAS NAMES?
         BE    BLDA5  NO, ERROR
         L     R6,8(R6)
         B     BLDACVOL
BLDA5    DC    0H'0'
         TPUT  ALIASERR,L'ALIASERR  NOT ENOUGH ALIAS NAMES IN LIST
         B     RETURN
         EJECT
***********************************************************************
**
**  DELETE AN ALIAS (DLTA)
**
**
**   COMMAND -
**     CATMAN DLTA 'ALIAS LIST' CVOL('VOL-SER LIST')
**
**     DEFAULTS - CVOL - SYSTEM RESIDENCE VOLUME UNLESS DFLTCVOL CSECT
**                       CONTAINS A VOL-SER.
**
**
         DC    C'&CSECT-&DLTA'
&DLTA    DC    0H'0'
         TM    OPERPRIV,OPERFLG  USER HAVE OPER PRIVILEGES?
         BO    DLTA1     YES
         MVC   OPERMSGC,USERID
         TPUT  OPERMSG,OPERMSGL  COMMAND NOT AUTHORIZED FOR ---
         B     RETURN
DLTA1    DC    0H'0'
         MVI   CAMFLG1,X'04'  INIT CAMLST FOR DLTA
         MVI   CAMFLG2,X'01'
         LA    R2,NAME
         ST    R2,CAMPARM2
         LA    R5,PARSNAME  LOAD ADDR OF PDE
DLTACVOL DC    0H'0'
         BAL   R8,INITCVOL
DLTANAME DC    0H'0'
         LH    R2,4(R5)  LOAD LENGTH OF ALIAS NAME
         LTR   R2,R2  IS IT ZERO?
         BNZ   DLTA2     NO
         LA    R14,ALIASMSG
         LA    R15,NOTVALD
         XR    R1,R1
         BAL   R8,MSGOUT  ALIAS NAME --- NOT VALID
         B     RETURN
DLTA2    BCTR  R2,R0
         L     R3,0(R5) LOAD ADDR OF ALIAS NAME
         LA    R1,NAME
         CLEAR NAME
         EX    R2,MVCR1R3
         INDEX CAMLST
         LTR   R15,R15  ANY ERRORS?
         BZ    DLTA3     NO
         ST    R15,SAVER15
         LA    R14,DLTAERR
         LA    R15,SPECBLNK
         LA    R1,4
         BAL   R8,MSGOUT
         L     R15,SAVER15
         BAL   R8,INDEXERR  GO PROCESS ERROR
         B     RETURN
DLTA3    DC    0H'0'
         LA    R14,DLTAMSG
         LA    R15,DELETED
         LA    R1,4
         BAL   R8,MSGOUT
         CLI   24(R5),X'FF'   MORE ALIAS NAMES ?
         BE    RETURN  NO, RETURN
         L     R5,24(R5)  YES, GO PROCESS NEXT NEXT ALIAS
         B     DLTACVOL
         EJECT
***********************************************************************
**
**  CONNECT A CONTROL VOLUME
**
**
**   COMMAND -
**     CATMAN CONNECT 'INDEX NAME LIST' CVOL('VOL-SER')
**             VOL('VOL-SER')      UNIT('NAME')
**
**     DEFAULTS - CVOL - SYSTEM RESIDENCE VOLUME,UNLESS DFLTCVOL CSECT
**                       CONTAINS A VOL-SER.
**                UNIT - NONE,UNLESS DFLTUNIT CSECT CONTAINS A DEVICE
**                       TYPE NAME
**
         DC    C'&CSECT-&CONNECT'
&CONNECT DC    0H'0'
         TM    OPERPRIV,OPERFLG  DOES USER HAVE OPER PRIVILEGES
         BO    CONN1     YES
         MVC   OPERMSGC,USERID
         TPUT  OPERMSG,OPERMSGL  COMMAND NOT AUTHORIZED FOR ---
         B     RETURN  GO RETURN
CONN1    DC    0H'0'
         MVI   CAMFLG1,X'44'  INIT CAMLST FLAGS
         MVI   CAMFLG2,X'08'
         LA    R2,NAME
         ST    R2,CAMPARM2
         LA    R2,DEVCODE
         ST    R2,CAMPARM4
         LA    R5,PARSNAME
*        BAL   R8,INITUNIT  GO INIT CAMLST DEVICE CODE
         BAL   R8,INITCVOL  GO INIT CAMLST CVOL
         LA    R6,PARSVOL
         LH    R2,4(R6)  LOAD LENGTH OF VOL-SER
         LTR   R2,R2  IS IT ZERO?
         BNZ   CONN2     NO
         L     R1,=V(VOLPCL)
         BAL   R8,PRMTPARS  GO LET PARSE PROMPT FOR VOL
         L     R2,ANSWER2
         USING VOLPDL,R2
         LA    R6,NEWVOL   USE NEW VOLUME
         DROP  R2
         LH    R2,4(R6)
CONN2    DC    0H'0'
         BCTR  R2,R0
         L     R3,0(R6)  LOAD ADDR OF VOL
         LA    R1,VOL
         CLEAR VOL
         EX    R2,MVCR1R3  MOVE IN VOLUME
         BAL   R8,INITUNIT  GO INIT CAMLST DEVICE CODE
CONNNAME DC    0H'0'
         LH    R2,4(R5)  LOAD LENGTH OF INDEX
         LTR   R2,R2   IS IT ZERO?
         BNZ   CONN3     NO
         LA    R14,CINDEX
         LA    R15,NOTVALD
         XR    R1,R1
         BAL   R8,MSGOUT  INDEX NAME --- NOT VALID
         B     RETURN
CONN3    DC    0H'0'
         BCTR  R2,R0
         L     R3,0(R5) LOAD ADDR OF INDEX
         LA    R1,NAME
         CLEAR NAME
         EX    R2,MVCR1R3  MOVE INDEX
         INDEX CAMLST   CONNECT
         LTR   R15,R15  ANY ERRORS?
         BZ    CONN6     NO
         ST    R15,SAVER15
         MVC   CONNERC1,VOL  MOVE IN VOL ID
         L     R2,CAMPARM3  LOAD ADDR OF CVOL
         LTR   R2,R2   SYS RES SPECIFIED?
         BNZ   CONN4     NO
         MVC   CONNERC2,=C'SYS RES'
         B     CONN5
CONN4    CLEAR CONNERC2
         MVC   CONNERC2(6),0(R2)  MOVE IN CVOL
CONN5    LA    R14,CONNERR
         LA    R15,SPECBLNK
         LA    R1,4
         BAL   R8,MSGOUT
         L     R15,SAVER15
         BAL   R8,INDEXERR  GO PROCESS ERROR
         B     RETURN
CONN6    DC    0H'0'
         MVC   CONNMSC1,VOL
         L     R2,CAMPARM3
         LTR   R2,R2
         BNZ   CONN7
         MVC   CONNMSC2,=C'SYS RES'
         B     CONN8
CONN7    CLEAR CONNMSC2
         MVC   CONNMSC2(6),0(R2)
CONN8    LA    R14,CONNMSG
         LA    R15,SPECBLNK
         LA    R1,4
         BAL   R8,MSGOUT
         CLI   24(R5),X'FF'  LAST INDEX IN LIST
         BE    RETURN  YES, RETURN
         L     R5,24(R5)
         B     CONNNAME   GO PROCESS ANOTHER CONNECT
         EJECT
***********************************************************************
**
**  DISCONNECT TWO CONTROL VOLUMES
**
**
**   COMMAND -
**     CATMAN RELEASE 'INDEX NAME LIST' CVOL('VOL-SER')
**
**     DEFAULTS - CVOL - SYSTEM RESIDENCE, UNLESS DFLTCVOL CSECT
**                       CONTAINS A VOL-SER.
**
         DC    C'&CSECT-&RELEASE'
&RELEASE DC    0H'0'
         TM    OPERPRIV,OPERFLG  DOES USER HAVE OPER PRIVILEGES?
         BO    RLSE1     YES
         MVC   OPERMSGC,USERID
         TPUT  OPERMSG,OPERMSGL  COMMAND NOT AUTHORIZED FOR ---
         B     RETURN
RLSE1    DC    0H'0'
         MVI   CAMFLG1,X'04'  INIT CAMLST FLAGS FOR RELEASE
         MVI   CAMFLG2,X'00'
         MVI   CAMFLG3,X'80'
         LA    R2,NAME
         ST    R2,CAMPARM2
         BAL   R8,INITCVOL  GO INIT CAMLST CVOL ENTRY
         LA    R5,PARSNAME
RLSENAME DC    0H'0'
         LH    R2,4(R5)  LOAD LENGTH OF INDEX
         LTR   R2,R2  IS IT ZERO?
         BNZ   RLSE2     NO
         LA    R14,CINDEX
         LA    R15,NOTVALD
         XR    R1,R1
         BAL   R8,MSGOUT  INDEX NAME --- NOT VALID
         B     RETURN
RLSE2    DC    0H'0'
         BCTR  R2,R0
         L     R3,0(R5)  LOAD ADDR OF INDEX
         LA    R1,NAME
         CLEAR NAME
         EX    R2,MVCR1R3  MOVE INDEX
         INDEX CAMLST
         LTR   R15,R15  ANY ERRORS?
         BZ    RLSE3     NO
         ST    R15,SAVER15
         CLEAR RLSERR2C
         L     R2,CAMPARM3
         LTR   R2,R2
         BNE   RLSE2A
         MVC   RLSERR2C,=C'SYS RES'
         B     RLSE2B
RLSE2A   MVC   RLSERR2C(6),0(2)
RLSE2B   LA    R14,RLSERR1
         LA    R15,RLSERR2
         LA    R1,4
         BAL   R8,MSGOUT
         L     R15,SAVER15
         BAL   R8,INDEXERR  GO PROCESS ERROR
         B     RETURN
RLSE3    DC    0H'0'
         MVC   RLSEMSGC,NAME
         CLEAR RLSEMSGD
         L     R2,CAMPARM3
         LTR   R2,R2
         BNZ   RLSE4
         MVC   RLSEMSGD,=C'SYS RES'
         B     RLSE5
RLSE4    MVC   RLSEMSGD(6),0(R2)
RLSE5    DC    0H'0'
         TPUT  RLSEMSG,RLSEMSGL  INDEX --- RELEASED FROM CVOL ---
         CLI   24(R5),X'FF'  LAST INDEX IN LIST?
         BE    RETURN  YES, RETURN
         L     R5,24(R5)
         B     RLSENAME  GO DISCONNECT
         EJECT
***********************************************************************
**
**  RECATALOG A DATA SET (RECATLG)
**
**
**   COMMAND -
**     CATMAN RECATLG ('DSNAME LIST') CVOL('VOL-SER')
**            VOL('VOL-SER LIST')
**           UNIT('UNIT')  SEQNO('NO. LIST')
**
**     DEFAULTS - CVOL - SYSTEM RESISDENCE UNLESS DFLTCVOL CSECT
**                       CONTAINS A VOL-SER.
**                UNIT - NONE, UNLESS DFLTUNIT CSECT CONTAINS A UNIT.
**                SEQNO- TAPE - 01, OTHER - 00
**
         DC    C'&CSECT-&RECATLG'
&RECATLG DC    0H'0'
         MVI   CAMFLG1,X'54'  RECATALOG
         MVI   CAMFLG2,X'00'
         B     CATSTART
**
** SINCE THE LOGIC FOR RECAT IS THE SAME FOR CATALOG, BRANCH
** TO CATALOG SECTION.
         EJECT
***********************************************************************
**
**  BUILD INDEXES AND CATALOG (CATLG)
**
**
**   COMMAND -
**     CATMAN CATLG ('DSNAME LIST') CVOL('VOL-SER')
**            VOL('SVOL-SER LIST')
**            UNIT('UNIT')  SEQNO('SEQUENCE NO. LIST')
**
**     DEFAULTS - CVOL - SYSTEM RESIDENCE UNLESS DFLTCVOL CSECT
**                       CONTAINS A VOL-SER.
**                UNIT - NONE, UNLESS DFLTUNIT CSECT CONTAINS A UNIT.
**                SEQNO- TAPE - 01, OTHERS - 00
**
         DC    C'&CSECT-&CATLG'
&CATLG   DC    0H'0'
         MVI   CAMFLG1,X'64'  CATBX
         MVI   CAMFLG2,X'40'
CATSTART DC    0H'0'
         LA    R5,PARSNAME
         LA    R2,NAME
         ST    R2,CAMPARM2
         LA    R2,VOLNO
         ST    R2,CAMPARM4
         BAL   R8,INITCVOL  GO INIT CAMLST CVOL ENTRY
*        BAL   R8,INITUNIT GO GET DEVICE CODE  (DEVCODE)
         LA    R6,PARSVOL
         LA    R7,PARSSEQN  LOAD ADDR OF SEQ. NO. PDE
         LH    R2,4(R6)  LOAD LENGTH OF VOL-SER
         LTR   R2,R2  IS IT ZERO?
         BNZ   CAT14     NO, GO CHECK FOR MORE THAN ONE VOL-SER
         L     R1,=V(VOLPCL)
         BAL   R8,PRMTPARS  GO LET PARSE PROMPT FOR VOL-SER
         L     R2,ANSWER2
         USING VOLPDL,R2
         LA    R6,NEWVOL
         DROP  R2
CAT1     LH    R2,4(R6)
         L     R3,0(R6)
         LA    R1,VOL
         BCTR  R2,R0
         CLEAR VOL
         EX    R2,MVCR1R3  VOL-SER OF CATALOGED DATA SET
         BAL   R8,INITUNIT GO GET DEVICE CODE  (DEVCODE)
         LA    R1,1
         STH   R1,VOLNO   NO OF VOLUMES
         LH    R2,4(R7)  LOAD LENGTH OF SEQ. NO.
         LTR   R2,R2  IS IT ZERO?
         BZ    CAT2      YES
         BCTR  R2,R0
         L     R1,0(R7) LOAD ADDR OF SEQ NO
         EX    R2,PACK
         CVB   R2,DWORK
         STH   R2,SEQNO
         B     CAT4
CAT2     DC    0H'0'
         CLI   DEVCODE+2,X'80' IS UNIT TAPE?
         BE    CAT3      YES
         XC    SEQNO,SEQNO  ZERO SEQ. NO. (DEFAULT FOR NOT TAPE)
         B     CAT4
CAT3     LA    R1,1
         STH   R1,SEQNO  SEQ. NO. = 1 (DEFAULT FOR TAPE)
CAT4     DC    0H'0'
         LH    R2,4(R5)  LOAD LENGTH OF DSNAME
         LTR   R2,R2  IS IT ZERO?
         BNZ   CAT6      NO
         LA    R14,DSNMSG
         LA    R15,NOTVALD
         XR    R1,R1
         BAL   R8,MSGOUT
         B     RETURN
CAT6     DC    0H'0'
*        TM    6(R5),X'40'  DSNAME IN QUOTES?
*        BZ    CAT7      NO
*        TM    OPERPRIV,OPERFLG  DOES USER HAVE OPER PRIVILEGES?
*        BO    CAT7      YES
*        LA    R14,DSNMSG
*        LA    R15,INQOTMSG
*        XR    R1,R1
*        BAL   R8,MSGOUT  DSNAME --- IN QOUTES
*        TPUT  NOTAUTMS,L'NOTAUTMS  YOU ARE NOT AUTHORIZED
*        B     RETURN
CAT7     DC    0H'0'
         CLEAR NAME
         LA    R1,NAME
         TM    6(R5),X'40' IN QUOTES?
         BO    CAT8  YES
         LH    R2,PREFIXL  PREFIX LENGTH
         LTR   R2,R2
         BZ    CAT8        NOPREFIX
         BCTR  R2,R0
         LA    R3,PREFIX
         EX    R2,MVCR1R3
         LA    R1,1(R1,R2)
         MVI   0(R1),C'.'
         LA    R1,1(R1)
CAT8     LH    R2,4(R5)  LOAD LENGTH OF DSNAME
         L     R3,0(R5)  LOAD ADDR OF DSNAME
         BCTR  R2,R0
         EX    R2,MVCR1R3
         CATALOG  CAMLST    CATALOG DATA SET
         LTR   R15,R15   ANY ERRORS?
         BZ    CAT9      NO
         ST    R15,SAVER15
         LA    R14,CATERR1
         LA    R15,SPECBLNK
         XR    R1,R1
         BAL   R8,MSGOUT
         L     R15,SAVER15
         BAL   R8,CATERROR  GO OUTPUT ERROR MSG
         B     RETURN
CAT9     DC    0H'0'
         LA    R14,CATMSG1
         LA    R15,CATMSG2
         XR    R1,R1
         BAL   R8,MSGOUT  DATA SET --- NOW CATALOGED
CAT10    DC    0H'0'
         CLI   24(R5),X'FF'  MORE DATA SET NAMES?
         BE    RETURN   NO, RETURN
         L     R5,24(R5)   LOAD ADDR OF NEW PDE
         CLI   SEQNKYWD+1,0  WAS SEQ. NO. SPECIFIED?
         BE    CAT10A  NO
         CLI   8(R7),X'FF'  MORE SEQ. NOS.?
         BNE   CAT12
CAT10A   DC    0H'0'
         CLI   DEVCODE+2,X'80'  IS DEVICE TAPE?
         BE    CAT11     YES
         XC    SEQNO,SEQNO
         B     CAT13
CAT11    LA    R2,1
         STH   R2,SEQNO
         B     CAT13
CAT12    L     R7,8(R7)
         LH    R2,4(R7)
         BCTR  R2,R0
         L     R1,0(R7)
         EX    R2,PACK
         CVB   R1,DWORK
         STH   R1,SEQNO
CAT13    CLI   8(R6),X'FF'  MOVE VOL-SER?
         BE    CAT7  NO
         L     R6,8(R6)  LOAD ADDR OF NEW PDE
         LH    R2,4(R6)  LOAD LENGTH OF VOL-SER
         BCTR  R2,R0
         L     R3,0(R6)  LOAD ADDR OF VOL-SER
         LA    R1,VOL
         CLEAR VOL
         EX    R2,MVCR1R3
         B     CAT7
CAT14    DC    0H'0'
         CLI   8(R6),X'FF'  MORE THAN ONE VOL-SER?
         BE    CAT1   NO
         CLI   24(R5),X'FF' MORE THAN ONE DSNAME?
         BNE   CAT1   YES
         XR    R2,R2  MULTI-VOLUME DATA SET
         LR    R3,R6      COUNT THE NO. OF VOLUMES TO COMPUTE MAIN
CAT15    LA    R2,1(R2)  ADD 1
         CLI   8(R3),X'FF'  LAST PDE?
         BE    CAT16  YES
         L     R3,8(R3)
         B     CAT15
CAT16    DC    0H'0'
         LR    R4,R2  SAVE VOLUME COUNT
         SRDA  R2,32
         M     R2,=F'12'  12 BYTES PER VOL
         LA    R0,2(R3)  +2 FOR NO. OF VOLUMES
         ST    R3,MAINLEN
         LA    R0,0(R3)
         GETMAIN R,LV=(0)
         ST    R1,CAMPARM4  SAVE ADDR OF MAIN
         STH   R4,0(R1)  NO. OF VOLUMES
         LA    R1,6(R1)
CAT17    LH    R2,4(R6)  LOAD LENGTH OF VOL-SER
         BCTR  R2,R0
         L     R3,0(R6)  LOAD ADDR OF VOL-SER
         MVC   0(6,R1),BLANKS
         EX    R2,MVCR1R3
         CLI   8(R6),X'FF'  LAST PDE?
         BE    CAT18     YES
         L     R6,8(R6)
         LA    R1,12(R1)
         B     CAT17
CAT18    DC    0H'0'
         LR    R0,R4 SAVE COUNT
         L     R1,CAMPARM4
         LA    R1,2(R1)
CAT18A   MVC   0(4,R1),DEVCODE   PUT IN DEVICE CODE FOR EACH VOL-SER
         LA    R1,12(R1)
         BCT   R4,CAT18A
         LR    R4,R0
         LH    R2,4(R7)  LOAD LENGTH OF SEQ. NO.
         LTR   R2,R2  IS IT ZERO?
         BNZ   CAT21     NO
         L     R1,CAMPARM4
CAT19    XR    R2,R2
         CLI   DEVCODE,X'80' IS DEVICE TYPE TAPE?
         BNE   CAT20     NO
         LA    R2,1(R2)  SEQ. NO. FOR TAPE DEFAULTS TO 1
CAT20    LA    R1,12(R1)
         STH   R2,0(R1)  STORE DEFAULT SEQ NO.
         BCT   R4,CAT20
         B     CAT24
CAT21    DC    0H'0'
         LR    R4,R0
         L     R15,CAMPARM4
CAT22    LA    R15,12(R15)
         LH    R2,4(R7)  LOAD LENGTH OF SEQ. NO.
         BCTR  R2,R0
         L     R1,0(R7)  LOAD ADDR OF SEQ. NO.
         EX    R2,PACK
         CVB   R14,DWORK
         STH   R14,0(R15)  PUT IN SEQ. NO.
         CLI   8(R7),X'FF' LAST PDE?
         BE    CAT23     YES
         L     R7,8(R7)
         BCT   R4,CAT22
         B     CAT24
CAT23    CH    R4,=H'1'  ARE WE FINISHED?
         BNH   CAT24     YES
         BCTR  R4,R0
         LR    R1,R15
         B     CAT19  GO FINISH UP WITH DEFAULT SEQ. NO.
CAT24    DC    0H'0'
*        TM    6(R5),X'40' IS DSNAME IN QUOTES?
*        BZ    CAT25     NO
*        TM    OPERPRIV,OPERFLG  DOES USER HAVE OPER PRIVILEGES?
*        BO    CAT25     YES
*        LA    R14,DSNMSG
*        LA    R15,INQOTMSG
*        XR    R1,R1
*        BAL   R8,MSGOUT  DSNAME --- IN QUOTES
*        TPUT  NOTAUTMS,L'NOTAUTMS  NOT AUTHORIZED TO USE QUOTES
*        B     RETURN
CAT25    DC    0H'0'
         CLEAR NAME
         LA    R1,NAME
         TM    6(R5),X'40' DSNAME IN QUOTES?
         BO    CAT26     YES
         LH    R2,PREFIXL   LENGTH OF PREFIX
         LTR   R2,R2
         BZ    CAT26        NOPREFIX
         BCTR  R2,R0
         LA    R3,PREFIX
         EX    R2,MVCR1R3
         LA    R1,1(R1,R2)
         MVI   0(R1),C'.'
         LA    R1,1(R1)
CAT26    LH    R2,4(R5)  LOAD LENGTH OF DSNAME
         LTR   R2,R2  IS IT ZERO?
         BNZ   CAT27     NO
         LA    R14,DSNMSG
         LA    R15,NOTVALD
         XR    R1,R1
         BAL   R8,MSGOUT  DSNAME --- NOT VALID
         B     RETURN
CAT27    BCTR  R2,R0
         L     R3,0(R5)  LOAD ADDR OF DSNAME
         EX    R2,MVCR1R3
         CATALOG  CAMLST      CATALOG DATA SET
         LTR   R15,R15   ANY ERRORS?
         BZ    CAT28     NO
         ST    R15,SAVER15
         LA    R14,CATERR1
         LA    R15,SPECBLNK
         XR    R1,R1
         BAL   R8,MSGOUT    ERROR FOUND WHEN CATALOGING ---
         L     R15,SAVER15
         BAL   R8,CATERROR  GO OUTPUT ERROR MSG
         B     CAT29
CAT28    LA    R14,CATMSG1
         LA    R15,CATMSG2
         XR    R1,R1
         BAL   R8,MSGOUT  DATA SET --- NOW CATALOGED
CAT29    DC    0H'0'
         L     R0,MAINLEN
         L     R1,CAMPARM4
         FREEMAIN R,LV=(0),A=(1)
         B     RETURN
         EJECT
***********************************************************************
**
**   UNCATALOG AND REMOVE INDEX LEVELS
**
**
**   COMMAND -
**     CATMAN UNCATLG 'DSNAME LIST'  CVOL('VOL-SER LIST')
**
**     DEFAULTS - CVOL - SYSTEM RESIDENCE UNLESS DFLTCVOL CSECT
**                       CONTAINS A VOL-SER.
**
         DC    C'&CSECT-&UNCATLG'
&UNCATLG DC    0H'0'
         MVI   CAMFLG1,X'0C'  UNCATDX
         MVI   CAMFLG2,X'04'
         LA    R2,NAME
         ST    R2,CAMPARM2
         LA    R5,PARSNAME
UCATCVOL DC    0H'0'
         BAL   R8,INITCVOL  GO INIT CAMLST CVOL ENTRY
UCATNAME DC    0H'0'
*        TM    6(R5),X'40' DSNAME IN QUOTES?
*        BZ    UCAT1     NO
*        TM    OPERPRIV,OPERFLG  DOES USER HAVE OPER PRIVILEGES?
*        BO    UCAT1     YES
*        LA    R14,DSNMSG
*        LA    R15,INQOTMSG
*        XR    R1,R1
*        BAL   R8,MSGOUT  DSW IN QUOTES
*        TPUT  NOTAUTMS,L'NOTAUTMS  NOT AUTHORIZED
*        B     RETURN
UCAT1    DC    0H'0'
         LH    R2,4(R5)  LOAD LENGTH OF DSNAME
         LTR   R2,R2   IS IT ZERO?
         BNZ   UCAT2
         LA    R14,DSNMSG
         LA    R15,NOTVALD
         XR    R1,R1
         BAL   R8,MSGOUT  DATA SET NAME --- NOT VALID
         B     RETURN
UCAT2    DC    0H'0'
         LA    R1,NAME
         CLEAR NAME
         TM    6(R5),X'40'  DSNAME IN QUOTES?
         BO    UCAT3     YES
         LH    R2,PREFIXL  PREFIX USER ID
         LTR   R2,R2
         BZ    UCAT3     NOPREFIX
         BCTR  R2,R0
         LA    R3,PREFIX
         EX    R2,MVCR1R3
         LA    R1,1(R1,R2)
         MVI   0(R1),C'.'
         LA    R1,1(R1)
UCAT3    LH    R2,4(R5)  LOAD LENGTH OF DSNAME
         BCTR  R2,R0
         L     R3,0(R5)  LOAD ADDR OF DSNAME
         EX    R2,MVCR1R3
         CATALOG CAMLST   UNCATALOG DATA SET
         LTR   R15,R15  ANY ERRORS?
         BZ    UCAT4     NO
         ST    R15,SAVER15
         LA    R14,UCATERR
         LA    R15,SPECBLNK
         XR    R1,R1
         BAL   R8,MSGOUT  ERROR FOUND WHEN UNCATALOGING ---
         L     R15,SAVER15
         BAL   R8,CATERROR  OUTPUT ERROR MSG
         B     RETURN
UCAT4    DC    0H'0'
         LA    R14,CATMSG1
         LA    R15,UCATMSG1
         XR    R1,R1
         BAL   R8,MSGOUT  DATA SET --- NOW UNCATALOGED
         CLI   24(R5),X'FF'  LAST PDE?
         BE    RETURN  YES, RETURN
         L     R5,24(R5)   NEXT PDE
         B     UCATCVOL
         EJECT
***********************************************************************
**
RETURN   DC    0H'0'
         IKJRLSA ANSWER1
         IKJRLSA ANSWER2
RETURN3  DC    0H'0'
         L     R13,SAVE+4
         RETURN (14,12),T,RC=0
**
**
PACK     PACK  DWORK,0(0,R1)
**
MVCCVOL  MVC   CVOL(0),0(R15)
**
MVCR1R3  MVC   0(0,R1),0(R3)
**
COMPARE  CLC   NAME(0),4(R1)
**
         EJECT
***********************************************************************
**
**  INITIALIZE CAMLST CVOL ENTRY (CAMPARM3)
**  ON ENTRY - REG 8 - RETURN
**
INITCVOL DC    0H'0'
         TM    CVOLDFLT,DFLTFLG1 DEFAULT CVOL USED ?
         BOR   R8   YES, RETURN
         TM    FRSTCVOL,FRSTFLG  FIRST TIME ENTERED?
         BO    INITCV2  NO
         OI    FRSTCVOL,FRSTFLG
         LA    R14,PARSCVOL
         L     R15,0(R14) LOAD ADDR OF CVOL
         LTR   R15,R15  CVOL SPECIFIED?
         BZ    INITCV1  NO,USE DEFAULT
         OI    CAMFLG1,X'80'  SET BIT TO INDICATE CVOL
         ST    R14,CVOLPDEA  SAVE ADDR OF CVOL PDE
         LA    R15,CVOL
         ST    R15,CAMPARM3  INIT CAMLST ENTRY
         B     INITCV3
INITCV1  DC    0H'0'
         OI    CVOLDFLT,DFLTFLG1
         L     R15,=V(DFLTCVOL)  LOAD ADDR OF DEFAULT CVOL
         CLI   0(R15),0   IS DEFAULT TO BE USED?
         BER   R8  NO, USE SYSTEM RESIDENCE VALUME (CAMLST ENTRY = 0)
         ST    R15,CAMPARM3  USE  DEFAULT CVOL
         OI    CAMFLG1,X'80'  SET BIT TO INDICATE CVOL
         B     R8   RETURN
INITCV2  DC    0H'0'
         L     R14,CVOLPDEA  LOAD ADDR OF CURRENT CVOL PDE
         CLI   8(R14),X'FF'  LAST PDE?
         BER   R8   YES, RETURN
         L     R14,8(R14)  LOAD ADDR OF NEW CVOL
         ST    R14,CVOLPDEA  SAVE  CVOL PDE ADDR
INITCV3  DC    0H'0'
         LH    R1,4(R14)  LOAD LENGTH OF CVOL
         L     R15,0(R14)  LOAD ADDR OF CVOL
         BCTR  R1,R0
         CLEAR CVOL
         EX    R1,MVCCVOL
         BR    R8  RETURN
**
CVOLPDEA DC    F'0'  CVOL PDE ADDR
**
**
         EJECT
***********************************************************************
**
** THIS SECTION SEARCHES THE UNITTAB CSECT FOR THE UNIT.
** ON ENTRY - REG 8 - RETURN ADDR
**
INITUNIT DC    0H'0'
         STM   R1,R5,SAVER1R5  SAVE REGS
         ST    R8,SAVER8  SAVE RETURN REG
         LA    R4,PARSUNIT
         LH    R2,4(R4)  LOAD LENGTH OF UNIT
         LTR   R2,R2  IS IT ZERO?
         BNZ   UNIT2     NO
         BAL   R14,DEVUCB  CHECK FOR ONLINE DASD VOLUME
         B     UNIT5  BRANCH IF DEVCODE COPIED FROM UCB
         L     R2,=V(DFLTUNIT)
         CLI   0(R2),0  IS THERE A DEFAULT UNIT?
         BE    UNITPRMT NO
         MVC   UNIT,0(R2) USE DEFAULT
         B     UNITSRCH
UNITPRMT L     R1,=V(UNITPCL)
         BAL   R8,PRMTPARS  GO LET PARSE PROMPT FOR UNIT
         L     R2,ANSWER2
         USING UNITPDL,R2
         LA    R4,NEWUNIT
         DROP  R2
         LH    R2,4(R4)
UNIT2    DC    0H'0'
         BCTR  R2,R0
         L     R3,0(R4) LOAD ADDR OF UNIT
         LA    R1,UNIT
         CLEAR UNIT
         EX    R2,MVCR1R3
UNITSRCH DC    0H'0'
         L     R2,=V(UNITTAB) LOAD ADDR OF UNIT TABLE
UNITLP1  CLC   0(8,R2),UNIT  IS UNIT IN TABLE
         BE    UNIT4     YES
         CLI   0(R2),0  END OF TABLE?
         BE    UNIT3     YES
         LA    R2,12(R2)
         B     UNITLP1
UNIT3    MVC   UNITMSGC,UNIT
         TPUT  UNITMSG,UNITMSGL  UNKNOWN UNIT ---
         B     UNITPRMT
UNIT4    MVC   DEVCODE,8(R2) MOVE IN DEVICE CODE
UNIT5    LM    R1,R5,SAVER1R5  RESTORE REGS
         L     R8,SAVER8  RESTORE RETURN REG
         BR    R8
**
**
** UNIT NOT SPECIFIED. CHECK IF VOLUME IS ONLINE AND DASD.
** IF SO, USE THE DEVICE TYPE FROM THE UCB AND RETURN TO R14.
** IF NOT, RETURN TO R14 PLUS 4.    BILL GODFREY, 15SEP80.
**
**
DEVUCB   L     R15,16              CVTPTR
         L     R15,40(,R15)        CVTILK2
         L     R0,=A(X'0000FFFF')  VALUE AT END OF UCB LIST
         B     *+8                 BYPASS INCREMENT
UCBLOOP  LA    R15,2(,R15)         POINT TO NEXT UCB POINTER
         LH    R1,0(,R15)          GET UCB ADDRESS
         NR    R1,R0               ZERO THE LEFT HALF
         BZ    UCBLOOP             NULL, IGNORE IT
         CR    R1,R0               END OF LIST (HEX FFFF)
         BE    4(,R14)             YES, ONLINE DASD VOLUME NOT FOUND
         CLI   18(R1),X'20'        DASD
         BNE   UCBLOOP             NO - BRANCH
         TM    3(R1),X'80'         ONLINE
         BZ    UCBLOOP             NO - BRANCH
         CLC   28(6,R1),VOL        DOES VOLUME MATCH?
         BNE   UCBLOOP             NO - BRANCH
         MVC   DEVCODE,16(R1)      COPY UNIT FROM UCB
         NI    DEVCODE+1,255-X'20' FORCE SHARE BIT OFF
         BR    R14                 RETURN
         EJECT
***********************************************************************
**
** THIS SECTION INITS THE PARSE PARM LIST, AND PARSES.
** ON ENTRY  REG 1 = ADDR OF PCL, REG 8 = RETURN ADDR
**
PRMTPARS DC    0H'0'
         ST    R1,SAVER1R5
         IKJRLSA  ANSWER2
         LA    R15,PARSEPL
         USING PPL,R15
         L     R1,SAVER1R5
         ST    R1,PPLPCL  STORE ADDR OF PCL
         LA    R1,ANSWER2
         ST    R1,PPLANS
         CLEAR DWORK
         LA    R1,8
         STH   R1,DWORK
         XC    DWORK+2(2),DWORK+2
         LA    R1,DWORK
         ST    R1,PPLCBUF  USE A COMMAND BUFFER OF ALL BLANKS SO THAT
**                         PARSE WILL PROMPT
         XC    ECB,ECB
         LA    R1,PARSEPL
         L     R15,16              CVTPTR
         TM    524(R15),X'80'      IF HI ORDER BIT NOT ON
         BNO   PARS2LNK               THEN DO LINK, NOT CALL
         L     R15,524(,R15)       CVTPARS
         BALR  R14,R15             CALL IKJPARS
         B     PARS2RET            SKIP AROUND LINK
PARS2LNK EQU   *
         LINK  EP=IKJPARS  GO PARSE
PARS2RET LTR   R15,R15
         BZ    PRMTPRS1
         TPUT  PARSERR,L'PARSERR   PARSE ERROR
         B     RETURN  ERROR, GO RETURN
PRMTPRS1 DC    0H'0'
         BR    R8  RETURN
         DROP  R15
**
**
         EJECT
***********************************************************************
**
** THIS SECTION OF CODE BUILDS THE OUTPUT MSG IN MSGBUFF, AND EXECUTES
** TPUT. ON ENTRY - REG 5 - ADDR OF INDEX OR DSNAME PDE,
**                 REG 14 - ADDR OF FIRST PART (TWO BYTE HEADER),
** R15 - ADDR OF THIRD PART (TWO BYTE HEADER), REG 8 - RETURN ADDR.
** R1  - 00 - PREFIX ID IF NOT IN QUOTES, - 04 DONT PREFIX ID
**
MSGOUT   DC    0H'0'
         STM   R1,R5,SAVER1R5
         LR    R4,R1  SAVE REG 1
         CLEAR MSGBUFF
         LH    R2,0(R14) LOAD LENGTH OF FIRST PART (TWO BYTE HEADER)
         LA    R3,2(R14)
         BCTR  R2,R0
         LA    R1,MSGBUFF
         EX    R2,MVCR1R3
*MVCR1R3 MVC   0(0,R1),0(R3)
         LA    R1,2(R1,R2)
         LH    R2,4(R5) LOAD LENGTH OF DSNAME OR INDEX
         LTR   R2,R2  IS LENGTH=0?
         BZ    MSGOUT1   YES
         TM    6(R5),X'40'   DSNAME IN QUOTES?
         BZ    MSGOUT0  NO
         MVI   0(R1),C''''
         LA    R1,1(R1)
         B     MSGOUT0A
MSGOUT0  DC    0H'0'
         LTR   R4,R4  PREFIX USER ID IF NOT IN QOUTES?
         BNZ   MSGOUT0A  NO
         LH    R2,PREFIXL  PREFIX USER ID TO DSNAME/INDEX
         LTR   R2,R2
         BZ    MSGOUT0A
         BCTR  R2,R0
         LA    R3,PREFIX
         EX    R2,MVCR1R3
         LA    R1,1(R1,R2)
         MVI   0(R1),C'.'
         LA    R1,1(R1)
MSGOUT0A DC    0H'0'
         LH    R2,4(R5)
         BCTR  R2,R0
         L     R3,0(R5) LOAD ADDR OF DSNAME OR INDEX
         EX    R2,MVCR1R3  MOVE IN DSNAME OR INDEX
         LA    R1,1(R1,R2)
         TM    6(R5),X'40'
         BZ    MSGOUT0B
         MVI   0(R1),C''''
         LA    R1,1(R1)
MSGOUT0B DC    0H'0'
         LA    R1,1(R1)
         B     MSGOUT3
MSGOUT1  DC    0H'0'
         LH    R2,12(R5) LOAD LENGTH OF MEMBER NAME
         LTR   R2,R2   IS LENGTH = 0?
         BNZ   MSGOUT2   NO
         TPUT  DSNERR,L'DSNERR   DSNAME/INDEX IN ERROR
         B     MSGOUTRT  GO RETURN
MSGOUT2  DC    0H'0'
         BCTR  R2,R0
         MVI   0(R1),C'('
         LA    R1,1(R1)
         L     R3,8(R5)  LOAD ADDR OF MEMBER NAME
         EX    R2,MVCR1R3
         LA    R1,1(R1,R2)
         MVI   0(R1),C')'
         LA    R1,2(R1)
MSGOUT3  DC    0H'0'
         LH    R2,0(R15)  LOAD LENGTH OF LAST PART (TWO BYTE HEADER)
         BCTR  R2,R0
         LA    R3,2(R15)
         EX    R2,MVCR1R3
         TPUT  MSGBUFF,L'MSGBUFF
MSGOUTRT LM    R1,R5,SAVER1R5
         BR    R8   RETURN
**
**
         EJECT
***********************************************************************
**
** PROCESS ERROR FROM CATALOG
** ON ENTRY - REG 15 - ERROR CODE, REG 8 - RETURN
**
CATERROR DC    0H'0'
         CH    R15,=H'28'
         BH    CATNDXHI
         B     *+4(R15)
         B     CATNDX00  RC=0
         B     CATNDX04  RC=4
         B     CATNDX08  RC=8
         B     CATER12   RC=12   (NOT USED BY CATALOG MACRO)
         B     CATER16   RC=16
         B     CATNDX20  RC=20
         B     CATER24   RC=24
         B     CATNDX28  RC=28
CATER12  DC    0H'0'  RC=12
         TPUT  CATER12A,L'CATER12A
         BR    R8
CATER16  DC    0H'0'  RC=16
         TPUT  CATER16A,L'CATER16A
         BR    R8
CATER24  DC    0H'0'  RC=24
         TPUT  CATER24A,L'CATER24A
         TPUT  CATER24B,L'CATER24B
         TPUT  CATER24C,L'CATER24C
         BR    R8
**
** PROCESS ERROR FROM  INDEX.
** ON ENTRY - REG 15 - ERROR CODE, REG 8 - RETURN
**
INDEXERR DC    0H'0'
         CH    R15,=H'28'
         BH    CATNDXHI
         B     *+4(R15)
         B     CATNDX00    RC=0
         B     CATNDX04    RC=4
         B     CATNDX08    RC=8
         B     NDXER12     RC=12
         B     NDXER16     RC=16
         B     CATNDX20    RC=20
         B     NDXER24     RC=24   (NOT USED WITH INDEX MACRO)
         B     CATNDX28    RC=28
NDXER12  DC    0H'0'     RC=12
         TPUT  NDXER12A,L'NDXER12A
         TPUT  NDXER12B,L'NDXER12B
         BR    R8
NDXER16  DC    0H'0'     RC=16
         TM    CONCT,CONFLG  WAS CONNECT EXECUTED?
         BO    NDXER161  YES
         TPUT  NDXER16A,L'NDXER16A
         TPUT  NDXER16B,L'NDXER16B
         BR    R8
NDXER161 DC    0H'0'
         TPUT  NDXER16C,L'NDXER16C
         BR    R8
NDXER24  DC    0H'0'     RC=24  NOT USED WITH INDEX
         TPUT  NDXER24A,L'NDXER24A
         BR    R8
**
** OUTPUT MESSAGES COMMON TO BOTH CATALOG AND INDEX
**
CATNDX00 DC    0H'0'  RC=0
         BR    R8
CATNDX04 DC    0H'0'  RC=4
         TPUT  CTNDX04A,L'CTNDX04A
         TPUT  CTNDX04B,L'CTNDX04B
         BR    R8
CATNDX08 DC    0H'0'  RC=8
         TPUT  CTNDX08A,L'CTNDX08A
         BR    R8
CATNDX20 DC    0H'0'  RC=20
         TPUT  CTNDX20A,L'CTNDX20A
         BR    R8
CATNDX28 DC    0H'0'  RC=28
         TPUT  CTNDX28A,L'CTNDX28A
         BR    R8
CATNDXHI DC    0H'0'  RC=72
         TPUT  CTNDX72A,L'CTNDX72A
         BR    R8
**
** CATALOG ERROR MESSAGES
**
CATER12A DC    C'UNKNOWN ERROR'
CATER16A DC    C'THE INDEX STRUCTURE NECESSARY TO CATALOG THE DATA SET X
               DOES NOT EXIST'
CATER24A DC    C'AN ATTEMPT WAS MADE TO CATALOG AN IMPROPERLY NAMED GENX
               ERATION DATA SET, OR THE'
CATER24B DC    C'GENERATION INDEX IS FULL AND THE NAMED DATA SET IS OLDX
               ER THAN ANY CURRENTLY'
CATER24C DC    C'IN THE INDEX'
**
** INDEX ERROR MESSAGES
**
NDXER12A DC    C'AN ATTEMPT WAS MADE TO DELETE AN INDEX OR GENERATION IX
               NDEX THAT HAS AN ALIAS'
NDXER12B DC    C'OR HAS INDEXES OR DATA SETS CATALOGED UNDER IT'
NDXER16A DC    C'THE QUALIFIED NAME SPECIFIED WHEN BUILDING AN INDEX ORX
                GENERATION INDEX IMPLIES'
NDXER16B DC    C'AN INDEX STRUCTURE THAT DOES NOT EXIST'
NDXER16C DC    C'THE HIGH LEVEL INDEX DOES NOT EXIST'
NDXER24A DC    C'UNKNOWN ERROR'
**
** ERROR MESSAGES COMMON TO BOTH INDEX AND CATALOG
**
CTNDX04A DC    C'EITHER THE REQUIRED CONTROL VOLUME WAS NOT MOUNTED, ORX
                THE SPECIFIED VOLUME'
CTNDX04B DC    C'DOES NOT CONTAIN A CATALOG DATA SET (SYSCTLG)'
CTNDX08A DC    C'THE EXISTING CATALOG STRUCTURE IS INCONSISTENT WITH THX
               E OPERATION PERFORMED'
CTNDX20A DC    C'SPACE IS NOT AVAILABLE ON THE SPECIFIED CONTROL VOLUMEX
               '
CTNDX28A DC    C'A PERMANENT I/O ERROR WAS FOUND WHEN PROCESSING THE CAX
               TALOG'
CTNDX72A DC    C'THE VTOC OF A DOS VOLUME COULD NOT BE CONVERTED TO OS X
               FORMAT'
         EJECT
***********************************************************************
**
** SAVE AREA, CAMLST'S, ETC
**
DWORK    DC    D'0'
SAVE     DC    18F'0'
SAVECPPL DC    F'0'
CAMLST   DC    4F'0'
CAMFLG1  EQU   CAMLST     FUNCTION BYTE ONE
CAMFLG2  EQU   CAMLST+1   FUNCTION BYTE TWO
CAMFLG3  EQU   CAMLST+2   FUNCTION BYTE THREE
CAMOPT3  EQU   CAMLST+3   OPTION THREE, NO. OF ENTRIES (BLDG)
CAMPARM2 EQU   CAMLST+4   PARAMETER TWO (NAME)
CAMPARM3 EQU   CAMLST+8   PARAMETER THREE  (CVOL)
CAMPARM4 EQU   CAMLST+12  PARAMETER FOUR (VOL, ALIAS NAME)
CAMLSTL  EQU   *-CAMLST  LENGTH OF CAMLST
PARSEPL  DC    7F'0'  PARSE PARM LIST
ECB      DC    F'0'
ANSWER1  DC    F'0'
ANSWER2  DC    F'0'
SAVER1R5 DC    5F'0'
SAVER8   DC    F'0'
SAVER15  DC    F'0'
MAINLEN  DC    F'0'
USERIDL  DC    H'0'
USERID   DC    CL8' '
PREFIXL  DC    H'0'
PREFIX   DC    CL8' '
CVOL     DC    CL6' ' CONTROL VOLUME
UNIT     DC    CL8' ' UNIT
VOLNO    DC    H'0'
DEVCODE  DC    CL4'0' DEVICE CODE
VOL      DC    CL6' ' VOL-SER
SEQNO    DC    H'0'
ALIAS    DC    CL8' ' ALIAS
FLAGS    DC    X'0'
OPERPRIV EQU   FLAGS
CONCT    EQU   FLAGS
FRSTCVOL EQU   FLAGS
CVOLDFLT EQU   FLAGS
NAME     DC    CL54' '
MSGBUFF  DC    CL150' '
         EJECT
***********************************************************************
**
** MESSAGES, ERROR AND OTHERS
**
FUNCERR  DC    C'UNKNOWN FUNCTION, '
FUNCERRC DC    CL8' '
FUNCERRL EQU   *-FUNCERR
OPERMSG  DC    C'YOU ('
OPERMSGC DC    CL8' '
         DC    C') ARE NOT AUTHORIZED TO USE THIS COMMAND'
OPERMSGL EQU   *-OPERMSG
PARSERR  DC    C'PARSE ERROR ENCOUNTERED'
MAXENTRS DC    C'NUMBER OF ENTRIES EXCEEDS 255'
CINDEX   DC    Y(CINDEXL)
         DC    C'INDEX NAME'
CINDEXL  EQU   *-CINDEX-2
NOTVALD  DC    Y(NOTVALDL)
         DC    C'NOT VALID'
NOTVALDL EQU   *-NOTVALD-2
DSNERR   DC    C'DSNAME/INDEX IN ERROR'
INQOTMSG DC    Y(INQOTMSL)
         DC    C'IN QUOTES'
INQOTMSL EQU   *-INQOTMSG-2
NOTAUTMS DC    C'YOU ARE NOT AUTHORIZED TO USE A QUOTED DSNAME/INDEX'
DSNMSG   DC    Y(DSNMSGL)  '
         DC    C'DATA SET NAME'
DSNMSGL  EQU   *-DSNMSG-2
ALIASERR DC    C'NOT ENOUGH ALIAS NAMES IN THE LIST'
ALIASMSG DC    Y(ALIASMSL)
         DC    C'ALIAS NAME'
ALIASMSL EQU   *-ALIASMSG-2
UNITMSG  DC    C'UNKNOWN UNIT '
UNITMSGC DC    CL8' '
UNITMSGL EQU   *-UNITMSG
RLSEMSG  DC    C'INDEX '
RLSEMSGC DC    CL8' '
         DC    C' RELEASED (DISCONNECTED) FROM CONTROL VOLUME '
RLSEMSGD DC    CL7' '
RLSEMSGL EQU   *-RLSEMSG
C1INDEX  DC    Y(C1INDEXL)
         DC    C'INDEX'
C1INDEXL EQU   *-C1INDEX-2
BUILT    DC    Y(BUILTL)
         DC    C'NOW BUILT'
BUILTL   EQU   *-BUILT-2
BLDXERR  DC    Y(BLDXERRL)
         DC    C'ERROR FOUND WHEN BUILDING INDEX'
BLDXERRL EQU   *-BLDXERR-2
SPECBLNK DC    Y(SPECBLNL)
BLANKS   DC    CL8' '
SPECBLNL EQU   *-SPECBLNK-2
DLTXERR  DC    Y(DLTXERRL)
         DC    C'ERROR FOUND WHEN DELETING INDEX'
DLTXERRL EQU   *-DLTXERR-2
DELETED  DC    Y(DELETEDL)
         DC    C'NOW DELETED'
DELETEDL EQU   *-DELETED-2
BLDAERR  DC    Y(BLDAERRL)
         DC    C'ERROR FOUND WHEN ASSIGNING ALIAS '
BLDAERRC DC    CL8' '
         DC    C' TO '
BLDAERRL EQU   *-BLDAERR-2
BLDAMSG  DC    Y(BLDAMSGL)
         DC    C'ALIAS '
BLDAMSGC DC    CL8' '
         DC    C' ASSIGNED TO '
BLDAMSGL EQU   *-BLDAMSG-2
DLTAERR  DC    Y(DLTAERRL)
         DC    C'ERROR FOUND WHEN DELETING ALIAS'
DLTAERRL EQU   *-DLTAERR-2
DLTAMSG  DC    Y(DLTAMSGL)
         DC    C'ALIAS'
DLTAMSGL EQU   *-DLTAMSG-2
CONNERR  DC    Y(CONNERRL)
         DC    C'ERROR FOUND WHEN CONNECTING VOLUME '
CONNERC1 DC    CL6' '
         DC    C' TO CONTROL VOLUME '
CONNERC2 DC    CL7' '
         DC    C' FOR INDEX '
CONNERRL EQU   *-CONNERR-2
CONNMSG  DC    Y(CONNMSGL)
         DC    C'VOLUME '
CONNMSC1 DC    CL6' '
         DC    C' CONNECTED TO '
CONNMSC2 DC    CL7' '
         DC    C' FOR INDEX '
CONNMSGL EQU   *-CONNMSG-2
RLSERR1  DC    Y(RLSERR1L)
         DC    C'ERROR FOUND WHEN RELEASING (DISCONNECTING) INDEX'
RLSERR1L EQU   *-RLSERR1-2
RLSERR2  DC    Y(RLSERR2L)
         DC    C'FROM CONTROL VOLUME '
RLSERR2C DC    CL7' '
RLSERR2L EQU   *-RLSERR2-2
CATERR1  DC    Y(CATERR1L)
         DC    C'ERROR FOUND WHEN CATALOGING DATA SET'
CATERR1L EQU   *-CATERR1-2
CATMSG1  DC    Y(CATMSG1L)
         DC    C'DATA SET'
CATMSG1L EQU   *-CATMSG1-2
CATMSG2  DC    Y(CATMSG2L)
         DC    C'NOW CATALOGED'
CATMSG2L EQU   *-CATMSG2-2
UCATERR  DC    Y(UCATERRL)
         DC    C'ERROR FOUND WHEN UNCATALOGING DATA SET'
UCATERRL EQU   *-UCATERR-2
UCATMSG1 DC    Y(UCATMSGL)
         DC    C'NOW UNCATALOGED'
UCATMSGL EQU   *-UCATMSG1-2
         LTORG
         EJECT
         PRINT NOGEN
***********************************************************************
**
** PARSE CONTROL LIST
**
PCLPARM  IKJPARM DSECT=PDL
PARSFUNC IKJIDENT 'FUNCTION NAME',MAXLNTH=8,FIRST=ALPHA,OTHER=ALPHA,   X
               PROMPT='FUNCTION NAME'
PARSNAME IKJPOSIT DSNAME,LIST,PROMPT='DATA SET NAME/INDEX'
CVOLKYWD IKJKEYWD
         IKJNAME 'CVOL',SUBFLD=CVOLSUBF
ALISKYWD IKJKEYWD
         IKJNAME 'ALIAS',SUBFLD=ALISSUBF
UNITKYWD IKJKEYWD
         IKJNAME 'UNIT',SUBFLD=UNITSUBF
VOLKYWD  IKJKEYWD
         IKJNAME 'VOL',SUBFLD=VOLSUBF
ENTRKYWD IKJKEYWD
         IKJNAME 'ENTRIES',SUBFLD=ENTRSUBF
PARSEMPT IKJKEYWD
         IKJNAME 'EMPTY'
PARSDELT IKJKEYWD
         IKJNAME 'DELETE'
SEQNKYWD IKJKEYWD
         IKJNAME 'SEQNO',SUBFLD=SEQNSUBF
CVOLSUBF IKJSUBF
PARSCVOL IKJIDENT 'CONTROL VOLUME-SERIAL',LIST,MAXLNTH=6,              X
               FIRST=ALPHANUM,OTHER=ALPHANUM
ALISSUBF IKJSUBF
PARSALIS IKJIDENT 'ALIAS',LIST,MAXLNTH=8,FIRST=ALPHANUM,OTHER=ALPHANUM
UNITSUBF IKJSUBF
PARSUNIT IKJIDENT 'UNIT NAME/TYPE',MAXLNTH=8,FIRST=ANY,OTHER=ANY
VOLSUBF  IKJSUBF
PARSVOL  IKJIDENT '''VOL'' VOLUME-SERIAL',LIST,MAXLNTH=6,              X
               FIRST=ALPHANUM,OTHER=ALPHANUM
ENTRSUBF IKJSUBF
PARSENTR IKJIDENT 'NO. OF ENTRIES',MAXLNTH=3,FIRST=NUMERIC,            X
               OTHER=NUMERIC
SEQNSUBF IKJSUBF
PARSSEQN IKJIDENT 'SEQUENCE NUMBER(S)',LIST,MAXLNTH=5,FIRST=NUMERIC,   X
               OTHER=NUMERIC
         IKJENDP
***********************************************************************
**
** PARSE CONTROL LIST FOR FUNCTION NAME
**
FUNCTPCL IKJPARM DSECT=FUNCTPDL
NEWFUNCT IKJIDENT 'FUNCTION NAME',MAXLNTH=8,FIRST=ALPHA,OTHER=ALPHA,   X
               PROMPT='FUNCTION NAME'
         IKJENDP
***********************************************************************
**
** PARSE CONTROL LIST FOR PROMPTED ENTRIES (FOR BLDG)
**
ENTRPCL  IKJPARM DSECT=ENTRPDL
NEWENTR  IKJIDENT 'NO. OF GENERATION GROUP ENTRIES',MAXLNTH=3,         X
               FIRST=NUMERIC,OTHER=NUMERIC,                            X
               PROMPT='NO. OF GENERATION GROUP ENTRIES'
         IKJENDP
***********************************************************************
**
** PARSE CONTROL LIST FOR ALIAS NAME
**
ALIASPCL IKJPARM DSECT=ALIASPDL
NEWALIAS IKJIDENT 'ALIAS NAME',MAXLNTH=8,                              X
               FIRST=ALPHANUM,OTHER=ALPHANUM,                          X
               PROMPT='ALIAS NAME'
         IKJENDP
***********************************************************************
**
** PARSE CONTROL LIST FOR UNIT
**
UNITPCL  IKJPARM DSECT=UNITPDL
NEWUNIT  IKJIDENT 'UNIT NAME/TYPE',MAXLNTH=8,FIRST=ANY,OTHER=ANY,      X
               PROMPT='UNIT NAME/TYPE'
         IKJENDP
***********************************************************************
**
** PARSE CONTROL LIST FOR VOL
**
VOLPCL   IKJPARM DSECT=VOLPDL
NEWVOL   IKJIDENT 'VOLUME',MAXLNTH=6,FIRST=ALPHANUM,OTHER=ALPHANUM,    X
               PROMPT='''VOL'' VOLUME-SERIAL'
         IKJENDP
         EJECT
DFLTCVOL CSECT
**
**
**
** THIS CSECT CONTAINS ONLY THE DEFAULT CONTROL VOLUME SERIAL NO.
** CAN BE ZAPPED TO PROVIDE A DEFAULT CVOL.
**
         DC    XL6'0'  INITIALIZED TO ZERO
         EJECT
DFLTUNIT CSECT
**
** THIS CSECT CONTAINS ONLY THE DEFAULT UNIT TYPE. THE UNIT TYPE MUST
** CORRESPOND TO ONE OF THE TYPES IN UNITTAB CSECT. THIS UNIT TYPE
** CAN BE ZAPPED TO CHANGE DEFAULTS.
**
         DC    CL8'3330'  INITIALIZED TO 3330
**
** EXAMPLES -
**       DC    CL8'DISK'  MUST BE BLANK FILLED TO RIGHT FOR COMPARE
**       DC    CL8'2314'
**       DC    CL8'3330'
**
**
         EJECT
UNITTAB  CSECT
**
** THIS CSECT CONTAINS THE UNIT (DEVICE TYPE OR GROUP NAME),
** EIGHT BYTES PADDED TO THE RIGHT WITH BLANKS, AND THE FOUR BYTE
** DEVICE CODE.  THERE ARE TEN EXTRA POSITIONS FOR LATER ZAPS.
**
**  *****  NOTE  ***  THE LAST BYTE OF THE TABLE MUST BE ZERO (0).
**
         DC    CL8'2314  ',X'30C02008'
         DC    CL8'DISK  ',X'30502009'
         DC    CL8'2400  ',X'30008001' 9 TRK
         DC    CL8'2400-4',X'34208001' 9 TRK - DUAL DEN
         DC    CL8'2400-3',X'34008001' 9 TRK - 1600 BPI
         DC    CL8'TAPE  ',X'32108003' 9 TRK - DUAL DEN 1600.6250 BPI
         DC    CL8'3400-2',X'30C08003'
         DC    CL8'3400-5',X'32008003' 6250 BPI TAPE
         DC    CL8'3400-6',X'32108003'
         DC    CL8'3400-3',X'34008003' 1600 BPI TAPE
         DC    CL8'3400-4',X'34208003'
         DC    CL8'3330  ',X'30502009'
         DC    CL8'3330V ',X'30582009' MSS VIRTUAL 3330
         DC    CL8'3350  ',X'3050200B'
         DC    CL8'3330-1',X'3050200D'
         DC    CL8'2303  ',X'30002003' DRUM
         DC    10XL12'0'
         DC    XL1'0'   LAST BYTE
**
**
         EJECT
**
** MAPPING DSECTS
**
         PRINT NOGEN
         IKJCPPL
         IKJPPL
         IKJUPT
         EJECT
&CSECT   CSECT
         END
