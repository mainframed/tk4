         TITLE '   L I S T X   -   I K J E B E Z 3   '
************************************************************
*                                                          *
*        'LISTX' SUBCOMMAND OF EDIT                        *
*                                                          *
************************************************************
         SPACE 1
*        WRITTEN BY BILL GODFREY, PLANNING RESEARCH CORPORATION.
*                   (MODIFIED IBM'S 'LIST' SUBCOMMAND).
*        INSTALLATION. PRC COMPUTER CENTER INC, MCLEAN VA.
*        DATE-WRITTEN. JULY 21 1975.
*        DATE-UPDATED. MAY 10 1979.
*        COMMENTS.
*            THIS EDIT SUBCOMMAND LISTS ONE OR MORE LINES IN
*            HEXADECIMAL.  IT DEFAULTS TO LISTING THE CURRENT LINE.
         SPACE 1
         MACRO
         MODID &BRANCH=YES
.*             INTERCEPT MODID WITHIN IKJEBESV MACRO.
         B     *+28
         DC    CL8'LISTX'
         DC    CL16' &SYSDATE &SYSTIME '
         MEND
         SPACE 1
         MACRO
         CVT   &DSECT=
CVTPTR   EQU   16
CVTMAP   DSECT
CVTPARS  EQU   CVTMAP+524
         MEND
         SPACE 1
*TITLE 'TSO ''EDIT'' COMMAND - ''LIST'' SUBCOMMAND - IKJEBELT'
IKJEBELT CSECT
*A127500,170200-170800,238060-239400,331080-331320,            @Y30NQKK
*A415110-415120,421400-421600,423200-423800,431100-431460,     @Y30NQKK
*A473600-473700,487500,553400-553800,601600                    @Y30NQKK
*C16900,557000,668000                                          @Y30NQKK
***********************************************************************
*MODULE NAME -- IKJEBELT                                      @Y30NQKK*
*                                                                     *
*DESCRIPTIVE NAME -- LIST SUBCOMMAND OF EDIT                  @Y30NQKK*
*                                                                     *
*COPYRIGHT -- N/A                                             @Y30NQKK*
*                                                                     *
*CHANGE ACTIVITY -- SEE INFORMATION PRECEDING PROLOGUE        @Y30QNKK*
*                                                                     *
*STATUS  --  VERSION NO. 02, VS/2 RELEASE 3                   @Y30NQKK*
*                                                                     *
*FUNCTION  --  THIS EDIT SUBCOMMAND PROCESSOR IS A PROBLEM-PROGRAM,   *
*   INVOKED BY THE MASTER CONTROLLER (IKJEBEMA).                      *
*                                                                     *
*   THIS ROUTINE'S FUNCTION IS TO DISPLAY PART OR ALL OF THE EDIT     *
*   DATA SET AT THE TERMINAL. THE 'NUM' & 'SNUM' KEYWORDS CAUSE LINE  *
*   NUMBERS TO BE DISPLAYED TO THE LEFT OF THE TEXT WITH 3 OR LESS    *
*   LEADING ZEROES SUPPRESSED OR TO BE SUPPRESSED, RESPECTIVELY. THESE*
*   KEYWORDS ARE INEFFECTUAL IF THE DATA SET IS NOT LINE-NUMBERED.    *
*                                                                     *
*   FORMS OF THE SUBCOMMAND & CONSEQUENT ACTIONS FOLLOW.              *
*                                                                     *
*   'LIST'       - ENTIRE DATA SET IS DISPLAYED.                      *
*   'LIST N'     - THE LINE NUMBERED 'N' IS DISPLAYED.                *
*   'LIST N1 N2' - LINES 'N1' THRU 'N2' ARE DISPLAYED.                *
*   'LIST *'     - CURRENT LINE IS DISPLAYED.                         *
*   'LIST * N'   - N LINES ARE DISPLAYED, STARTING WITH THE CURRENT   *
*                  ONE.                                               *
*                                                                     *
*ENTRY POINTS  --                                                     *
*       IKJEBELT - BY A 'LINK' MACRO INSTRUCTION FROM THE MASTER      *
*   CONTROLLER(IKJEBEMA), TO LIST ONE OR MORE LINES OF THE DATA SET   *
*   BEING EDITED, AS DESCRIBED IN 'FUNCTION --'.                      *
*                                                                     *
*INPUT  --  REGISTER 1 CONTAINS A POINTER TO EDIT'S COMMUNICATION     *
*   AREA, DEFINED IN THE IKJEBECA MACRO.  THIS AREA CONTAINS A        *
*   POINTER TO THE BUFFER CONTAINING THE 'LIST' SUBCOMMAND, & A       *
*   SWITCH TO TELL WHETHER THIS ROUTINE WAS CALLED BY A SUBCOMMAND.   *
*                                                                     *
*OUTPUT  --  RETURN CODES POSSIBLE IN REGISTER 15 ARE                 *
*   00 - SUCCESSFUL OPERATION (I.E., NO I/O ERROR)                    *
*   08 - THIS RETURN CODE SIGNIFIES THAT THE INPUT STACK MUST BE      *
*        CLEARED (AND DELETED IF INPUT SOURCE IS AN IN-CORE PROCEDURE)*
*        BECAUSE THIS MODULE WAS UNABLE TO COMPLETE ITS FUNCTION DUE  *
*        TO COMMAND SYSTEM ERROR, INSUFFICIENT CORE STORAGE, INVALID  *
*        LINE RANGE, MEANINGLESS LINE NUMBER, OR LINE NOT FOUND.      *
*   12 - PERMANENT I/O ERROR ON UTILITY DATA SET                      *
*                                                                     *
*EXTERNAL REFERENCES  --                                              *
*       IKJPARS  - CHECKS SYNTAX OF SUBCOMMAND                        *
*       IKJEBEMS - SELECTS & SENDS MESSAGES TO USER                   *
*       IKJEBEUT - ACCESSES UTILITY DATA SET                          *
*       MACROS USED                                                   *
*         CALLTSSR - PASSES CONTROL TO IKJPARS                @Y30NQKK*
*         PUTLINE  - BUILDS PARM LIST & CALLS RTN TO DISPLAY A  LINE  *
*         IKJPARM  - ) CONSTRUCTS                                     *
*         IKJIDENT - )  PARAMETER                                     *
*         IKJKEYWD - )   CONTROL &                                    *
*         IKJNAME  - )    DESCRIPTOR                                  *
*         IKJENDP  - )     LISTS (PCL,PDL)                            *
*         IKJEBESH - INVOKES IKJEBEUT SERVICE ROUTINE.                *
*         IKJRLSA  - FREES STORAGE FOR PARM DESCRIPTOR LIST (PDL)     *
*         IKJEBECA - DEFINES DUMMY SECTION FOR EDIT COMM AREA         *
*         IKJEBESV - GENERATES ENTRY LINKAGE ) CHAINED                *
*         IKJEBERT - GENERATES EXIT LINKAGE  )  SAVE AREAS            *
*                                                                     *
*EXITS,NORMAL  --  VIA A BRANCH TO THE CALLER, WITH RETURN CODE AS    *
*   DESCRIBED IN 'OUTPUT  --'. AN EXPLANATION IS PROVIDED WHEN NO     *
*   LINES ARE DISPLAYED.                                              *
*                                                                     *
*EXITS,ERROR  --  NONE.                                               *
*                                                                     *
*TABLES/WORK AREAS --                                                 *
*   CASCWKA IN EDIT'S COMMUNICATION AREA IS USED AS A WORK AREA.      *
*   CABFRPL IN EDIT'S COMMUNICATION AREA IS USED TO FORMAT THE LINE   *
*   TO BE LISTED.                                                     *
*                                                                     *
*ATTRIBUTES  --  REFRESHABLE, ENABLED, NON-PRIVILEGED.                *
*NOTES  --  THERE IS CHARACTER-CODE INDEPENDENCE.                     *
*                                                                     *
***********************************************************************
 EJECT
***********************************************************************
*                                                                     *
*                             ENTRY CODE                              *
*                                                                     *
***********************************************************************
 SPACE
         IKJEBESV (14,12),,*
 SPACE
***********************************************************************
*                                                                     *
*                             PROCESSING                              *
*                                                                     *
***********************************************************************
 SPACE
* SET RETURN CODE TO ZERO FOR TIME BEING.
* INITIALIZE PARM LISTS FOR IKJEBESR & IKJEBEUT.  SET REG FOR RET CODE
*  COMPARISON.  IND LIST NOT BY LINE NO.  IND PARSE NOT CALLED.
*  INDICATE 'NUM' SPECIFIED.  PICK UP LINE NO. LNG & OFFSET
 SPACE
         LR    COMMREG,PARMREG1         KEEP PT EDIT COMM AREA
         LA    COMMREG,O(COMMREG)
         USING IKJEBECA,COMMREG         ESTABLISH ADDRESSABILITY
         XC    LTKODE(WD),LTKODE        RET CODE ZERO
         MVI   LTINRCD,BLANK            BLANK-OUT INPUT AREA
         MVC   LTINRCD+BYTE(MAXL),LTINRCD
         MVC   LTPAD(DUBLWD),LTINRCD
         ST    COMMREG,LTCA@            PT COMMAREA INTO IKJEBESR
         ST    COMMREG,LTCOMA@           & IKJEBEUT PARM LISTS
         LA    WRKREG,UT
         ST    WRKREG,LTMODNM@          PT TO IKJEBEUT
         LA    WRKREG,LTCOMA@
         ST    WRKREG,LTPLST@@          PT UT PLIST
         LA    WRKREG,LTUTCODE
         ST    WRKREG,LTPLST@           PT 3-WD PLIST IN UT PLIST
         MVI   LTPLST@,LASTPARM
         MVC   LTDCB@-BYTE(WD),CAPTCDCB PT UTIL DCB
         LA    WRKREG,LTKEY
         ST    WRKREG,LTKEY@            PT KEY
         LA    WRKREG,LTINAREA
         ST    WRKREG,LTREAD@           PT INPUT AREA
         MVI   LTREAD@,LASTPARM
HERE     BAL   LINUM1,HERE+WD           IND LIST NOT BY LINE NO.
*                                        (ILC IN PSW=10,SO LINUM1
*                                         IS MADE NEGATIVE)
         MVI   NUMSNUM,ZEROMASK         IND 'NUM' SPEC
         SR    LINUMLEN,LINUMLEN
         LR    LINUMOFF,LINUMLEN
         IC    LINUMLEN,CALENGTH        GET LINE NO. LNG
         IC    LINUMOFF,CALINE          GET LINE NO. OFFSET
         XC    LISTSWS(BYTE),LISTSWS    INITIALIZE BIT SWS     @Y30NQKK
 EJECT
***********************************************************************
*                                                                     *
*         SEE IF ANY OPERANDS ARE PRESENT.                            *
*         IF NOT, SET COUNT GREATER THAN 999999999                    *
*         (SO ENTIRE DATA SET WILL BE LISTED), AND READ 1ST RECORD.   *
*         IF PRESENT, CALL PARSE.                                     *
*                                                                     *
***********************************************************************
 SPACE
         TM    CAPTIBFR,ANYOPNDS        NO, ANY OPERANDS
*        BO    PARSE                       YES,CALL PARSE
         B     PARSE                       ALWAYS CALL PARSE    PRC.LTX
*                                          NO,LIST ENTIRE DATASET
LISTALL  BALR  CTR,O                    SET BIT 1 OF COUNTER TO
*                                        1 (ILC IN PSW=01) TO
*                                        MAKE CTR GRTR THAN 99999999
         LA    PARMREG1,LTSHPLST        SET PT TO PARM LIST
         MVI   LTUTCODE,READ1ST         IND 'RD 1ST RCD'
         IKJEBESH (COMMREG),IKJEBEUT,PARAM=((COMMREG),LTUTCODE),       C
               MF=(E,(1))
         CH    RETCDREG,COD4            CHECK IKJEBEUT RET CODE
         BH    IOERR1                   I/O ERR-TERMINATE
         BE    EMPTY                    RCD NOT LOC-ISSUE DIAGNOSTIC
         B     NUMB                     SUCCESS-FMT RCD FOR OUTPT
IOERR1   MVC   LTKODE(WD),RC12          SET RET CODE 12
         B     EXEUNT                   BRANCH TO CLEANUP
IOERR2   MVC   LTKODE(WD),RC12          SET RET CODE 12
         B     CLEANUP                  BRANCH TO CLEANUP
 SPACE
* CALL PARSING ROUTINE
 SPACE
PARSE    L     WRKREG,LISTPCL#
         ST    WRKREG,CATMPLST+PPLPCL-PPL PT TO PCL
         LA    WRKREG,CAPTPRSD
         ST    WRKREG,CATMPLST+PPLANS-PPL PT TO ANSWER PLACE
         MVC   CATMPLST+PPLCBUF-PPL(WD),CAPTIBFR PT TO COMMAND BUFFER
         LA    PARMREG1,CATMPLST        SET PT PARM LIST
         CALLTSSR  EP=IKJPARS           CALL PARSE             @Y30NQKK
* BRANCH ACCORDING TO RETURN CODE
         CH    CODEREG,MAXPARSE         IS PARSE RET CODE >   @Y30NQKK
*                                       CODE EXPECTED?        @Y30NQKK
         BH    SRERROR                  IF YES, PUT OUT PARSE @Y30NQKK
*                                       ERROR MESSAGE         @Y30NQKK
         B     PARSEBT(CODEREG)         PARSE BR TABLE
PARSEBT  B     SUCCESS        00(SUCCESS)         -GET ANSWER
         B     INCMPLT1       04(UNABLE TO PROMPT)-GO INDICATE
*                             FUNCTION NOT COMPLETED.
         B     EXEUNT         08(ATTN)            -EXIT
         B     SRERROR        12(INVALID PARMS)   -ISSUE ERR MSG
         B     NOROOM         16(NO SPACE)        -ISSUE ERR MSG
SUCCESS  L     PDLBASE,CAPTPRSD         PICK UP PT TO PDL.
         USING LISTPDL,PDLBASE          ESTABLISH ADDRESSABILITY
 EJECT
***********************************************************************
*                                                                     *
* IF 'SNUM' WAS SPECIFIED, INDICATE THIS FACT.                        *
* IF NO LINENUM OR '*' WAS SPECIFIED, PROCEED AS IF THERE WERE NO     *
* OPERANDS.                                                           *
* IF 1ST OPERAND IS A LINE NO., SEE IF THE D.S. IS LINE-NUMBERED.     *
*                               IF NOT, ISSUE AN ERROR MSG.           *
*                               IF SO, SEE IF THERE IS A 2ND OPERAND. *
*                                     IF SO, CHECK FOR A VALID RANGE. *
*                                     IF NOT, SET LINENUM2=LINENUM1.  *
*                               SET THE KEY TO LINENUM1 & READ W/ IT. *
* IF THE 1ST OPERAND IS AN ASTERISK, SEE IF THERE IS A 2ND OPERAND.   *
*  IF NOT, SET THE COUNT TO 1.                                        *
*  SET THE KEY TO THE CURRENT LINE REFERENCE POINTER, & READ W/ KEY.  *
*                                                                     *
***********************************************************************
 SPACE
         TM    OP3,SNUM                 WAS 'SNUM' SPEC
         BZ    LINORAST                 NO,SEE IF LINUM OR * SPEC
         MVI   NUMSNUM,SNUM             YES,IND SO & CONT
LINORAST TM    OP1SPEC,ANYOPNDS         LINUM OR * SPEC AT ALL
*        BZ    LISTALL                  NO,LIST ENTIRE D.S.
         BZ    SETCNT1                  NO, LIST CURRENT LINE   PRC.LTX
         L     WRKREG,LINE1             YES,GET PT 1ST OPERAND
         CLI   O(WRKREG),STAR           IS IS A NO.
         BE    ANY2ND                   NO,SEE IF ANY 2ND OPERAND
         TM    CACFLAG1,CANONUM         YES,IS D.S. LINE-NUMBERED
         BO    DSNOTNUM                     NO, ISSUE  'DS NOT NUMD'
         LH    L,OP1L                       YES,GET LNG LINENUM1
         BCTR  L,O                     MINUS ONE FOR EX
         EX    L,LNORCTPK               CHG  LINENUM1 TO PKD DEC
         CVB   LINUM1,LTPAKARA          CONV IT TO BINARY (THIS
*                                        ALSO INDICATES THAT THE
*                                        LIST IS BY LINE NO.)
         TM    OP2SPEC,ANYOPNDS         ANY 2ND OPERAND
         BZ    LIST1LIN                 NO,SET RANGE TO 1 LINE
         LA    RETREG,CMP1AND2          GET PT LINENO. CMP,WHICH
*                                        FOLLOWS THE FOLLOWING
*                                        ROUTINE
 EJECT
***********************************************************************
*                                                                     *
* THIS CLOSED SUBROUTINE PICKS UP THE 2ND OPERAND, CHANGES IT TO      *
* PACKED-DECIMAL, & CONVERTS IT TO BINARY.  IT IS USED WHETHER        *
* THE 2ND OPERAND IS A LINE NO. OR A COUNT.                           *
*                                                                     *
***********************************************************************
 SPACE
GETOPND2 L     WRKREG,LINORCNT          GET PT 2ND OPERAND
         LH    L,OP2L                   GET ITS LENGTH
         BCTR  L,O                      MINUS ONE FOR EX
         EX    L,LNORCTPK               PACK IT
         CVB   (LINUM2+CTR)/TWO,LTPAKARA CONVERT PKD DEC TO BINARY
         BR    RETREG                   RETURN TO NEXT SEQ INST
 SPACE
* CHECK FOR VALID RANGE (LINENUM1 LESS THAN OR EQUAL TO LINENUM2)
 SPACE
CMP1AND2 CR    LINUM1,LINUM2            LINUM1 GTR THAN LINUM2
         BH    L1GTL2                   YES, ISSUE 'INVALID RANGE'
         SPACE
         OI    LISTSWS,LSTRANGE         INDICATE LIST IS FOR   @Y30NQKK
*                                       LINE RANGE             @Y30NQKK
         MVC   SAVECURN(WD),CACURNUM    SAVE CURRENT LINE NUM  @Y30NQKK
         ST    LINUM1,LTKEY             SET KEY TO READ LINUM1 @Y30NQKK
         B     READWKEY                 PREPARE FOR READ LNUM1 @Y30NQKK
         SPACE
LIST1LIN LR    LINUM2,LINUM1            SET LINENUM2=LINENUM1
SETKEY1  ST    LINUM1,LTKEY             KEY=LINENUM1 FOR READ
         B     READWKEY                 PREPARE FOR READ
ANY2ND   TM OP2SPEC,ANYOPNDS            ANY 2ND OPERAND
         BZ    SETCNT1                  NO,SET CTR FOR 1 LINE
         BAL   RETREG,GETOPND2          YES,BRING COUNT INTO REG
         B     KEYSTAR                  SET KEY FOR READ
SETCNT1  LA    CTR,ONE                  SET COUNT TO 1
KEYSTAR  MVC   LTKEY(WD),CACURNUM       SET KEY TO CURR LINE NO.
READWKEY MVI   LTUTCODE,READCURR        IND 'READ CURR REF RCD'
         LTR   LINUM1,LINUM1            WAS '*' SPECIFIED -
         BNM   LTNOTAST                 IF NO,GOTO READ CURR RCD.
         L     WRKREG,CACURNUM          IF YES,IS '*' SET
         LTR   WRKREG,WRKREG                   TO ZERO -
         BNZ   LTNOTAST                 IF NO,GOTO READ CURR RCD.
         MVI   LTUTCODE,READ1ST         IF YES,IND 'READ BEGNG'.
LTNOTAST EQU   *
         LA    PARMREG1,LTSHPLST        SET PT PARM LIST
         IKJEBESH (COMMREG),IKJEBEUT,PARAM=((COMMREG),LTUTCODE),       C
               MF=(E,(1))
         CH    RETCDREG,COD4            CHECK UT RET CODE
         BH    IOERR2                   I/O ERR-TERMINATE
         BE    SELECT                   RCD NOT LOC-SELECT ERR MSG
NUMB     MVI   LTUTCODE,READNEXT        SUCCESS-IND 'READ NEXT' FOR
*                                       FUTURE CALLS OF IKJEBEUT
 SPACE
* MOVE THE PUTLINE PARM BLOCK INTO WORKAREA & PUT ITS ADDRESS
*  INTO THE GENREAL SERVICE ROUTINE PARM LIST.
*
PREPPUTL EQU   *
         MVC   LTPUTBLK(BLKL),PARMBLOK
         LA    WRKREG,LTPUTBLK
         ST    WRKREG,CATMPLST+IOPLIOPB-IOPL
 EJECT
***********************************************************************
*                                                                     *
* THE FOLLOWING CODE IS EXECUTED FOR EVERY DATA SET LINE LISTED AT    *
* THE TERMINAL.                                                       *
*                                                                     *
* IF THE D.S. IS NOT LINE-NUMBERED, CALL PUTLINE.                     *
* IF IT IS, SEE WHETHER 'SNUM' WAS SPECIFIED -                        *
*           IF IT WAS, EITHER BLANK-OUT THE NO. AT THE END OF THE     *
*                      RCD(FOR FIXED-LNG RCD) OR LEFT-JUSTIFY THE     *
*                      DATA PORTION OF RCD(FOR VARIABLE-LNG RCD)      *
*                      & CALL PUTLINE.                                *
*           IF IT WASN'T, SEPARATE NO. & DATA BY 1 BLANK (AFTER       *
*                      HAVING MOVED THE NO. TO THE BEGNG OF THE       *
*                      RCD, IN THE CASE OF FIXED RCD LNG), BLANK-     *
*                      OUT UP TO 3 LEADING ZEROES, & CALL PUTLINE.    *
*                                                                     *
***********************************************************************
 SPACE
PUTLOOP  TM    CACFLAG1,CANONUM         IS D.S. LINE-NUMBERED
*        BO    CLATTER                  NO,BRANCH TO LIST LINE  PRC.LTX
         BZ    *+14                     YES, SKIP TO CLI        PRC.LTX
         SR    R15,R15                                          PRC.LTX
         BAL   RETREG,HEX               CONVERT TO HEX          PRC.LTX
         B     CLATTER                  RESUME OLD LOGIC
         CLI   NUMSNUM,SNUM             YES, WAS  'SNUM' SPEC
         BNE   NUMSPEC                     NO,FMT RCD FOR OUTPUT
         TM    CACFLAG2,CARECFM            YES,TEST RCD FMT
         BZ    SLIDE                    VAR,BRANCH TO L-JUST DATA
         CLI   CALINE,ONE               FIXED & NO. BEGINS IN COL
         BE    SLIDE                     1, TREAT LIKE VARIABLE
         LA    WRKREG,LTINRCD-BYTE(LINUMOFF) FIXED,GET ADDR OF NO.
         MVC   O(DUBLWD,WRKREG),LTPAD   BLANK-OUT LINE NO.
         LH    L,LTLL                                           PRC.LTX
         SR    L,LINUMLEN                                       PRC.LTX
         STH   L,LTLL                                           PRC.LTX
         SR    R15,R15                                          PRC.LTX
         BAL   RETREG,HEX               CONVERT TO HEX          PRC.LTX
         B     CLATTER                  BRANCH TO LIST LINE
SLIDE    LA    WRKREG,LTINRCD(LINUMLEN) GET ADDR OF DATA
         MVC   LTOUTRCD(MAXL+ONE),O(WRKREG) LEFT-JUSTIFY IT
         LH    L,LTLL                   SUBTRACT LNG OF LINE NO.
         SR    L,LINUMLEN                FROM LNG OF RECORD
         STH   L,LTLL
         SR    R15,R15                                          PRC.LTX
         BAL   RETREG,HEX               CONVERT TO HEX          PRC.LTX
         B     CLATTER                  BRANCH TO LIST LINE
NUMSPEC  LH    L,LTLL                   ADD 1 TO LNG FOR BLANK TO
         LA    L,BYTE(L)                      BE INSERTED
         STH   L,LTLL
         TM    CACFLAG2,CARECFM         TEST RCD FMT
         BZ    CLEAVE                   VAR,INSERT BLANK BETWEEN
*                                           NO. & DATA
         CLI   CALINE,ONE               FIXED & NO. BEGINS IN COL
         BE    CLEAVE                    1, TREAT LIKE VARIABLE
         MVC   LTTEMP(MAXL+ONE),LTINRCD FIXED,SAVE RCD TEMPORARILY
         LA    WRKREG,LTTEMP-BYTE(LINUMOFF) GET ADDR OF NO.
         MVC   LTOUTRCD(DUBLWD),O(WRKREG) MOVE IT TO BEGNG
         MVC   O(DUBLWD,WRKREG),LTPAD   BLANK-OUT AFTER-IMAGE.
         LA    WRKREG,LTOUTRCD(LINUMLEN)
         MVI   O(WRKREG),BLANK          INSERT BLANK AFTER NO.
         MVC   BYTE(MAXL+ONE,WRKREG),LTTEMP DATA FOLLOWS THE BLANK
         LA    R15,1               WRKREG IS SET                PRC.LTX
         BAL   RETREG,HEX          CONVERT TO HEX               PRC.LTX
         B     SUPPRESS                 BRANCH TO SUPPRESS LEADING Z
CLEAVE   LA    WRKREG,LTINRCD(LINUMLEN)      GET ADDR OF DATA
         MVC   LTTEMP(MAXL),O(WRKREG)   SHIFT IT RIGHT 1 BYTE
         MVC   BYTE(MAXL,WRKREG),LTTEMP
         MVI   O(WRKREG),BLANK          INSERT A BLANK
         LA    R15,1               WRKREG IS SET                PRC.LTX
         BAL   RETREG,HEX          CONVERT TO HEX               PRC.LTX
 SPACE
* THE FOLLOWING CODE SETS UP TO (& INCLUDING) 3 LEADING-ZEROES TO BLNK
 SPACE
SUPPRESS LA    WRKREG,LTOUTRCD          START AT BEGNG OF LINENO.
         LA    INCRMENT,ONE             INCR BY 1
         LA    COMPRAND,HAFWD(WRKREG)   STOP AT 3RD DIGIT
LOOP     CLI   O(WRKREG),NOUGHT         IS DIGIT A ZERO
         BNE   LEFTWARD                      NO,BRANCH TO SHIFT LEFT
         BXLE  WRKREG,INCRMENT,LOOP     BUMP INDEX & BRANCH
LEFTWARD MVC   LTOUTRCD(MAXL+TWO),O(WRKREG) L-JUSTIFY OUTPUT RCD.
         B     CLATTER                                          PRC.LTX
         SPACE 1                                                PRC.LTX
HEX      LTR   R15,R15             TEST SWITCH                  PRC.LTX
         BNZ   HEX2                BRANCH - WORKREG IS SET      PRC.LTX
         LA    WRKREG,LTINRCD-1                                 PRC.LTX
         LH    R0,LTLL                                          PRC.LTX
         B     HEX3                                             PRC.LTX
HEX2     LH    R0,LTLL                                          PRC.LTX
         BCTR  R0,0                                             PRC.LTX
         SR    R0,LINUMLEN                                      PRC.LTX
HEX3     MVC   LTTEMP(MAXL+ONE),1(WRKREG)                       PRC.LTX
         SH    R0,HEXH4                                         PRC.LTX
         LH    L,LTLL                                           PRC.LTX
         AR    L,R0                                             PRC.LTX
         STH   L,LTLL                                           PRC.LTX
         LA    R1,LTTEMP                                        PRC.LTX
         LA    R15,1(,WRKREG)                                   PRC.LTX
HEX4     UNPK  0(3,R15),0(2,R1)                                 PRC.LTX
         TR    0(2,R15),HEXT-240                                PRC.LTX
         CLC   0(2,R15),HEXBL                                   PRC.LTX
         BNE   *+10                                             PRC.LTX
         MVC   0(2,R15),HEXPD                                   PRC.LTX
         LA    R15,2(,R15)                                      PRC.LTX
         LA    R1,1(,R1)                                        PRC.LTX
         BCT   R0,HEX4                                          PRC.LTX
         MVI   0(R15),C' '                                      PRC.LTX
HEX5     SH    R15,HEXH2                                        PRC.LTX
         CR    R15,WRKREG                                       PRC.LTX
         BNH   HEXR                                             PRC.LTX
         CLC   0(2,R15),HEXPD      REMOVE TRAILING BLANKS       PRC.LTX
         BNE   HEXR                                             PRC.LTX
         MVC   0(2,R15),HEXSP                                   PRC.LTX
         B     HEX5                                             PRC.LTX
HEXR     BR    RETREG                                           PRC.LTX
HEXSP    DC    C'  '                                            PRC.LTX
HEXPD    DC    C'<>'                                            PRC.LTX
HEXBL    DC    C'40'                                            PRC.LTX
HEXH2    DC    H'2'                                             PRC.LTX
HEXH4    DC    H'4'                                             PRC.LTX
HEXT     DC    C'0123456789ABCDEF'                              PRC.LTX
R0       EQU   0                                                PRC.LTX
R15      EQU   15                                               PRC.LTX
 SPACE
* COMPLETE PUTLINE PARM BLOCK & CALL PUTLINE TO LIST LINE AT TERMINAL
 SPACE
CLATTER  PUTLINE ,OUTPUT=(LTPUTOUT,DATA),MF=(E,CATMPLST)
         CH    RETCDREG,MAXPTLNE        IS PUTLINE RET CODE > @Y30NQKK
*                                       CODE EXPECTED?        @Y30NQKK
         BH    LTPUTERR                 IF YES, PUT OUT PTLNE @Y30NQKK
*                                       ERROR MESSAGE         @Y30QNKK
         B     LTPUTLBT(RETCDREG)       BRANCH ON RET CODE.
LTPUTLBT EQU   *
         B     LTPUTLOK                 0 - BRANCH TO CONTINUE.
         B     CLEANUP                  4 - ATTN,GOTO FREE PDL.
         B     LTPUTERR                 8 - GOTO ISSUE ERR MSG.
         B     LTPUTERR                 12- GOTO ISSUE ERR MSG.
         B     NOROOM                   16 -GOTO ISSUE ERR MSG.
LTPUTLOK EQU   *
         MVI   LTINRCD,BLANK            0-BLANK OUT INPUT AREA
         MVC   LTINRCD+BYTE(MAXL),LTINRCD
         MVC   LTPAD(DUBLWD),LTINRCD
 EJECT
***********************************************************************
*                                                                     *
* UPDATE THE CURRENT LINE REFERENCE POINTER ('*')                     *
* IF AN ATTENTION BUTTON WAS PUSHED, FREE PDL CORE IF NEC & EXIT.     *
* IF THE LISTING IS BY LINE NO., EITHER CALL UT TO READ-NEXT (IF MORE *
*        LINES ARE TO BE LISTED) OR FREE PDL CORE IF NEC & EXIT(IF    *
*        THE LAST LINE IN THE RANGE WAS LISTED).                      *
* OTHERWISE DECREMENT THE COUNT BY 1 AND EITHER READ NEXT (IF LINES   *
*        REMAIN TO BE LISTED) OR FREE PDL CORE IF NEC & EXIT (IF THE  *
*        COUNT HAS BECOME ZERO).                                      *
*                                                                     *
***********************************************************************
 SPACE
         MVC   CACURNUM(WD),LTKEE       UPDATE * FR KEY OF RCD
         TM    CAATTN,POSTED            HAS ATTN ECB BEEN POSTED
         BO    CLEANUP                  YES,FREE PDL IF NEC &EXIT
         LTR   LINUM1,LINUM1            NO, IS LIST BY LINE NO.
         BNM   ENDQUEST                   YES,SEE IF LIST IS DONE
         BCTR  CTR,O                      NO,DECR CTR
         LTR   CTR,CTR                  IS CTR ZERO
         BNP   CLEANUP                  YES,FREE PDL IF NEC &EXIT
         B     NEWKEY                   NO,SET KEY FOR NEXT READ
ENDQUEST C     LINUM2,CACURNUM          HAS LAST LINE BEEN LISTED
         BNH   CLEANUP                  YES,FREE PDL IF NEC &EXIT
NEWKEY   MVC   LTKEY(WD),CACURNUM       NO,SET KEY=CURR LINE NO.
         LA    PARMREG1,LTSHPLST        SET PT TO PLIST
         MVI   LTINRCD,BLANK            BLANK-OUT INPUT AREA
         MVC   LTINRCD+BYTE(MAXL),LTINRCD
         IKJEBESH (COMMREG),IKJEBEUT,PARAM=((COMMREG),LTUTCODE),       C
               MF=(E,(1))
         CH    RETCDREG,COD4            CHECK IKJEBEUT RET CODE
         BH    IOERR2                   I/O ERR-FREE PDL,EXIT
         BE    EOD                      RCD NOT LOC-ISSUE 'EOD'
 EJECT
***********************************************************************
*                                                                     *
* IF THE LIST IS BY LINE NO., SEE WHETHER THE LINE JUST READ IS       *
*        WITHIN RANGE.  IF SO, LIST THE LINE.                         *
*                       IF NOT, FREE PDL CORE IF NEC & EXIT.          *
* IF THE LIST IS BY COUNT, LIST THE LINE JUST READ                    *
*                                                                     *
***********************************************************************
 SPACE
         LTR   LINUM1,LINUM1            IS LIST BY LINE NO.
         BM    PUTLOOP                  NO,FMT RCD & LIST IT
         C     LINUM2,LTINAREA          YES,IS LINE WITHIN RANGE
         BNL   PUTLOOP                     YES,FMT RCD & LIST IT
CLEANUP EQU *
         TM    CAPRSPDL,CAFREEDL        IS THERE A PDL TO BE FREED
         BNZ   EXEUNT                   IF NO, GO TO EXIT.
         IKJRLSA CAPTPRSD               IF YES, FREE PDL CORE.
         OI    CAPRSPDL,CAFREEDL        IND PDL FREED.
 EJECT
***********************************************************************
*                                                                     *
*                                 EXIT                                *
*                                                                     *
***********************************************************************
 SPACE
EXEUNT EQU *
         L     RETCDREG,LTKODE          SET RET CODE
         IKJEBERT (14,12),RC=(15)
 SPACE
***********************************************************************
*                                                                     *
* THE FOLLOWING CODE IS BRANCHED-TO WHENEVER A MESSAGE MUST BE ISSUED *
*                                                                     *
***********************************************************************
 SPACE
EMPTY    LA    WRKREG,LEMPTY
         B     MOVE3WDS                 BR TO SET PARMLIST
NOROOM   MVC   LEVEL1(WD+WD+WD),LNOROOM SET UP LEV1 PARMLIST
         LA    WRKREG,LTIN1            CHAIN
         ST    WRKREG,L1INPT           PARMLISTS
         MVC   LTIN1(LTMG3L),LTMG3     SET UP INSERTION PLIST
         BAL   RETREG,INCMPLT2         GO IND FUNCTION INCOMPLETE
         B     ZYXWVUTS                BR TO PUT MSG
EOD      LA    WRKREG,LEOD
         B     MOVE3WDS                 BR TO SET PARMLIST
RANGEMPT LA    WRKREG,LRANGMPT          PTR TO PARMLIST        @Y30NQKK
         B     MOVE3WDS                 BR TO PUT OUT MESSAGE  @Y30NQKK
DSNOTNUM EQU   *
         BAL   RETREG,INCMPLT2          GO IND FUNCTION INCOMPLETE
         LA    WRKREG,LDSNOTNU          PTR TO PARMLIST
         B     MOVE3WDS                 BR TO MOVE TO MS PARMLIST
LTPUTERR EQU   *
         MVC   LEVEL1(WD+WD+WD),LTM313  INITLZ LEVEL 1 PARM LIST.
         MVC   LTIN1(LTMGPUTL),LTMGPUT  INITLZ 1ST 2ND-LEVEL INS.
         B     SRERRORX                 GOTO FINISH MESSAGE.
SRERROR  MVC   LEVEL1(WD+WD+WD),LTM313  SET UP LEV1 PARMLIST
         MVC   LTIN1(LTMG1L),LTMG1      SET UP 1ST LEV2 INSERT PLIST
SRERRORX EQU   *
         BAL   RETREG,INCMPLT2          GO IND FUNCTION INCOMPLETE
         MVC   LTIN2(LTMG2L),LTMG2      SET UP 2ND LEV2 INSERT PLIST
         SRL   RETCDREG,ONE             SHIFT R15 FOR INDEXING
         LH    WRKREG,LTCDTAB(RETCDREG) PICK UP PRINTABLE CHARACTERS
         STH   WRKREG,INST2             STORE IN INSERTION
         LA    WRKREG,LTIN1             CHAIN POINTERS
         ST    WRKREG,L2INPT            TO INSERTION1
         LA    WRKREG,LTIN2             AND INSERTION2
         ST    WRKREG,LTIN1             PARMLISTS
         B     ZYXWVUTS                 BR TO PUT ERROR MSG
L1GTL2   EQU   *
         BAL   RETREG,INCMPLT2          GO IND FUNCTION INCOMPLETE
         LA    WRKREG,LL1GTL2           PT TO PARMLIST.
MOVE3WDS MVC   LT10AREA(WD+WD+WD),O(WRKREG) 3WD LIST INTO 10WD AREA
ZYXWVUTS EQU   *
         IKJEBEML ,,,,MF=(E,LT10AREA)   LINK TO IKJEBEMS TO PUT MSG
         B     CLEANUP                  BR TO RLSE PDL CORE
SELECT   LTR   LINUM1,LINUM1            LIST BY LINE NO.
         BNM   NOLINE                   YES,ISSUE'LINE NOT FOUND'.
*                                       IF LIST WAS NOT FOR    @Y30NQKK
*                                       LINE RANGE             @Y30NQKK
         CLI   LTUTCODE,READ1ST         NO,WAS '*' NON-ZERO -
         BE    EMPTY                    IF NO,ISSUE 'D.S. EMPTY'.
*                                       YES, ISSUE 'LINE NOT FOUND'
NOLINE   TM    LISTSWS,LSTRANGE         WAS LIST FOR LINE      @Y30NQKK
*                                       RANGE?                 @Y30NQKK
         BO    FINDNEXT                 YES, TRY TO FIND NEXT  @Y30NQKK
*                                       LINE IN DATA SET       @Y30NQKK
         L     LINUM1,LINE1             GET ADDR LINE NO.
         LH    L,OP1L                   GET LNG LINE NO.
         BCTR  L,O                      MINUS ONE FOR EX
         EX    L,LTMVC                  MOVE LINE NUMBER TO INSERTION
         LA    L,WD+ONE(L)              RESTORE LENGTH AND ADD OFFSET
         STH   L,LTL                    STORE IN LENGTH FIELD OF PLIST
         LA    WRKREG,M504IN1
         STH   WRKREG,LTLINOFF          SET OFFSET TO LINE NO.
         XC    LTIN1(FOUR),LTIN1        ZERO PTR TO NEXT INSERTION
         MVC   LEVEL1(WD+WD+WD),LNOLINE SET UP 1ST LEVEL
         LA    WRKREG,LTIN1             CHAIN PARMLISTS
         ST    WRKREG,L1INPT            FOR INSERTIONS
         BAL   RETREG,INCMPLT2          GO IND FUNCTION INCOMPLETE
         B     ZYXWVUTS                 BR TO PUT ERROR MSG
*
* A LINE RANGE WAS SPECIFIED, WITH A NONEXISTENT LINE NUMBER   @Y30NQKK
* AS THE FIRST NUMBER OF THE RANGE.  IKJEBEUT IS NOW INVOKED   @Y30NQKK
* TO 'READ NEXT', AFTER THE FIRST NUMBER OF THE RANGE.         @Y30NQKK
FINDNEXT MVI   LTUTCODE,READNEXT         INDICATE 'READ NEXT'  @Y30NQKK
*                                        LINE TO IKJEBEUT      @Y30NQKK
         LA    PARMREG1,LTSHPLST         SET PTR TO PARM LIST  @Y30NQKK
         IKJEBESH (COMMREG),IKJEBEUT,PARAM=((COMMREG),LTUTCODE),       X
               MF=(E,(1))                INVOKE IKJEBEUT       @Y30NQKK
*
         CH    RETCDREG,COD4             CHECK UT RETURN CODE  @Y30NQKK
         BH    IOERR2                    I/O ERROR - TERMINATE @Y30NQKK
         BE    FOUNDNON                  MUST HAVE SPECIFIED A @Y30NQKK
*                                        RANGE AFTER THE LAST  @Y30NQKK
*                                        LINE IN THE DATA SET  @Y30NQKK
         C     LINUM2,LTINAREA           A LINE WAS FOUND.  IS @Y30NQKK
*                                        LINE WITHIN RANGE?    @Y30NQKK
         BNL   PREPPUTL                  IF YES, PRINT LINE    @Y30NQKK
FOUNDNON MVC   CACURNUM(WD),SAVECURN    IF NO, RESTORE PREVIOUS@Y30NQKK
*                                       CURRENT LINE POINTER   @Y30NQKK
         BAL   RETREG,INCMPLT2          INDICATE FUNCTION      @Y30NQKK
*                                       INCOMPLETE             @Y30NQKK
         B     RANGEMPT                 PUT OUT MSG - NO LINES @Y30NQKK
*                                       FOUND IN RANGE         @Y30NQKK
 SPACE
* THE FOLLOWING SETS A RET CODE INDICATING FUNCTION NOT COMPLETED.
 SPACE
INCMPLT1 EQU   *
         LA    RETREG,EXEUNT            GET NEXT BRANCH POINT.
INCMPLT2 EQU   *
         LA    WRKREG,RCNOTCOM          GET RET CODE.
         ST    WRKREG,LTKODE            SAVE IT,
         BR    RETREG                   EXIT OR ISSUE MESSAGE.
 EJECT
***********************************************************************
*                                                                     *
*              OBJECTS OF EXECUTE INSTRUCTIONS                        *
*                                                                     *
***********************************************************************
 SPACE
LNORCTPK PACK  LTPAKARA(DUBLWD),O(O,WRKREG)  CHANGE LINENUM1,
*                                       LINENUM2, OR COUNT FROM
*                                       ZONED TO PACKED DECIMAL
LTMVC    MVC   INST1(O),O(LINUM1)       MOVE LINE NUMBER TO INSERTION
 SPACE
***********************************************************************
*                                                                     *
*                             CONSTANTS                               *
*                                                                     *
***********************************************************************
*
RC12     DC    F'12'                    I/O ERROR RET CODE
UT       DC    C'IKJEBEUT'              NAME OF UTIL D.S. INTER-
*                                        FACE RTN
COD4     DC    H'4'                     FOR TESTING RET CODES
LTCDTAB  DS    0H
         DC    C'  040812'              TABLE OF PRINTABLE
         DC    C'16'                    CHARACTERS
LISTPCL# DC    V(IKJEBLT1)              ADDR OF PCL
*
MAXPARSE DC    H'16'     MAX RETURN CODE EXPECTED FROM PARSE   @Y30NQKK
MAXPTLNE DC    H'16'     MAX RETURN CODE EXPECTED FROM PUTLINE @Y30NQKK
 SPACE
* MESSAGE INSERTION RECORD
 SPACE
         DS    0F
LTMG1    EQU   *
         IKJEBEMG 0,M3131IN1,'PARSE'
LTMG1L   EQU   *-LTMG1
LTMGPUT  IKJEBEMG 0,M3131IN1,'PUTLINE'
LTMGPUTL EQU   *-LTMGPUT                LNG OF INSERTION.
         DS    0F
LTMG2    EQU   *
         IKJEBEMG 0,M3131IN2,'00'
LTMG2L   EQU   *-LTMG2
         DS    0F
LTMG3    EQU   *
         IKJEBEMG 0,M312IN1,'LIST'
LTMG3L   EQU   *-LTMG3
 SPACE
* IKJEBEMS PARM LISTS
 SPACE
LTM313   IKJEBEML M313,M3131,0,0,MF=L
LNOROOM  IKJEBEML M312,0,0,0,MF=L
LEMPTY   IKJEBEML M501,,,,MF=L
LEOD     IKJEBEML M500,,,,MF=L
LNOLINE  IKJEBEML M504,,,,MF=L
LL1GTL2  IKJEBEML M503,,,,MF=L
LDSNOTNU IKJEBEML M502,,,,MF=L
LRANGMPT IKJEBEML M578,,,,MF=L                                 @Y30NQKK
 SPACE
* PUTLINE PARAMETER BLOCK
 SPACE
PARMBLOK PUTLINE OUTPUT=(0,DATA),MF=L
         PRINT NOGEN                                            PRC.LTX
 EJECT
***********************************************************************
*                                                                     *
* MACROS TO GENERATE PARSE PARAMETER CONTROL LIST (PCL) & PROVIDE     *
*  SYMBOLIC REFERENCE FOR PARAMETER DESCRIPTOR LIST (PDL)             *
*                                                                     *
***********************************************************************
 SPACE
IKJEBLT1 IKJPARM DSECT=LISTPDL
LINE1    IKJIDENT 'LINE NUMBER',ASIS,ASTERISK,MAXLNTH=8,               C
               FIRST=NUMERIC,OTHER=NUMERIC
LINORCNT IKJIDENT 'LINE NUMBER OR COUNT',ASIS,MAXLNTH=8,               C
               FIRST=NUMERIC,OTHER=NUMERIC
NUM      IKJKEYWD DEFAULT='NUM'
         IKJNAME 'NUM'
         IKJNAME 'SNUM'
         IKJENDP
LISTPDL  DSECT
OP1L     EQU   LINE1+4                  LNG OF 1ST OPERAND
OP2L     EQU   LINORCNT+4               LNG OF 2ND OPERAND
OP1SPEC  EQU   LINE1+6                  )FLAGS- BIT 0 IS OFF IF
OP2SPEC  EQU   LINORCNT+6               ) OPERAND IS OMITTED
OP3      EQU   LISTPDL+25               3RD OPERAND CODE
IKJEBELT CSECT                          RESUME LIST CONTROL SECT
 EJECT
***********************************************************************
*                                                                     *
*                       COMMUNICATION AREA                            *
*                                                                     *
***********************************************************************
 SPACE
         IKJEBECA
         PRINT GEN                                              PRC.LTX
 SPACE
***********************************************************************
* STRUCTURE OF CASCWKA AS USED BY IKJEBELT                            *
***********************************************************************
 SPACE
         ORG   CASCWKA   WORK AREA
LTSHPLST DS    0F -      SERVICE RTN HANDLER PARM LIST
LTCA@    DS    F -       ADDR COMM AREA
LTMODNM@ DS    F -       PT MODULE NAME IN EBCDIC
LTPLST@@ DS    F -       PT TO PT TO SERVICE RTN PARM LIST
 SPACE
* IKJEBEUT PARM LIST
 SPACE
LTCOMA@  DS    F -       ADDR COMM AREA
LTPLST@  DS    F -       PT TO 1-3 WD PARM LIST
LTUTCODE DS    X -       OPTION CODE
LTDCB@   DS    AL3 -     PT UTILITY DCB
LTKEY@   DS    F -       PT 4-BYTE BINARY KEY
LTREAD@  DS    F -       PT AREA FOR READ
LTKEY    DS    F -       KEY TO REPLACE CURR REF
 SPACE
 SPACE
* AREA FOR PACKING LINE NO.
 SPACE
LTPAKARA DS    D         PACK AREA.
 SPACE
LTANSPLC DS    F -       PARSE ANSWER PLACE
*
SAVECURN DS    F         SAVE CURRENT LINE NUMBER              @Y30NQKK
LISTSWS  DS    X         BYTE FOR SWITCHES FOR LIST            @Y30NQKK
 SPACE
* PARAMETERS FOR IKJEBEMS
 SPACE
         ORG   CASCWKA+68               START MSG AREA         @Y30NQKK
LT10AREA DS    10F -     WORK AREA (PLIST IN 1ST 3 WORDS)
LEVEL1   EQU   LT10AREA                 LEVEL1 PARMLIST
L1INPT   EQU   LEVEL1+4                 PTR TO INSERTION1 PARMLIST
L2INPT   EQU   LEVEL1+8                 PTR TO INSERTION2 PARMLIST
LTIN1    EQU   LEVEL1+12                INSERTION1 PARMLIST
LTL      EQU   LTIN1+4                  LENGTH OF INSERTION1 PARMLIST
LTLINOFF EQU   LTL+2                    OFFSET TO INSERTION PT IN MSG
INST1    EQU   LTLINOFF+2               INSERTION1
LTIN2    EQU   INST1+8                  INSERTION2 PARMLIST
INST2    EQU   LTIN2+8                  INSERTION2
 SPACE
* 1 BYTE-X'00' IF 'NUM' SPEC, X'02' IF 'SNUM' SPEC
 SPACE
NUMSNUM  DS    X -
         ORG   CASCWKA+196 ALIGN TO END OF WORKAREA
LTKODE   DS    F -        RETURN CODE SAVE AREA
 SPACE
* PUTLINE PARAMETER BLOCK -
 SPACE
LTPUTBLK DS    5F                       P.P.B.
 SPACE
***********************************************************************
* STRUCTURE OF BUFFER POOL AS USED BY IKJEBELT                        *
***********************************************************************
 SPACE
         ORG   CABFRPL   WORK AREA
LTKEE    DS    0F -      4-BYTE BINARY KEY
LTINAREA DS    259C -    AREA INTO WHICH IKJEBEUT READS
         ORG   CABFRPL+4 WORK AREA
LTLL     DS    0H -      LNG OF RCD
LTPUTOUT DS    256C -    OUTPUT LINE
         ORG   CABFRPL+8 WORK AREA
LTOUTRCD DS    0X -      OUTPUT LINE
LTINRCD  DS    255C                     INPUT RECORD.
LTPAD    DS    8C -      TRAILING BLANKS
         ORG   CABFRPL+271              WORK AREA.
LTTEMP   DS    251C -    TEMPORARY WORK AREA
 SPACE
***********************************************************************
* DSECT FOR PARSE PARM LIST                                           *
***********************************************************************
 SPACE
         IKJPPL
 SPACE
***********************************************************************
* DSECT FOR PUTLINE PARM LIST                                         *
***********************************************************************
 SPACE
         IKJIOPL
 SPACE
         CVT  DSECT=YES                                        @Y30NQKK
IKJEBELT CSECT                          RESUME 'LIST' CONTROL SECTION
 EJECT
***********************************************************************
*                                                                     *
*                             EQUATES                                 *
*                                                                     *
***********************************************************************
 SPACE
* REGISTERS
 SPACE
PARMREG0 EQU   0    FOR PASSING PARMS
R1       EQU   1
PARMREG1 EQU   1    FOR PASSING PARMS
LINUMLEN EQU   3    LNG OF LINE NO.
LINUMOFF EQU   4    OFFSET OF LINE NO.
WRKREG   EQU   5
L        EQU   6    FOR LENGTHS
LINUM1   EQU   7    FOR 1ST OPERAND OF SUBCOMMAND
LINUM2   EQU   8    FOR 2ND OPERAND
CTR      EQU   8    OF SUBCOMMAND
COMMREG  EQU   9    BASE REG FOR COMM AREA
PDLBASE  EQU   10   BASE REG FOR PARM DESCRIPTOR LIST
BASEREG  EQU   11   GENERAL BASE REG
DATAREG  EQU   12
SAVEREG  EQU   13   PT REG SAVE AREA
RETREG   EQU   14   ADDR RET PT IN RTN
INCRMENT EQU   14   INCREMENT IN 'BXLE' INSTRUCTION
COMPRAND EQU   15   COMPARAND IN 'BXLE' INSTRUCTION
CODEREG  EQU   15   RETURN CODE
RETCDREG EQU   15   RETURN CODE
CALDRTN@ EQU   15   ADDR CALLED RTN
 SPACE
* CONSTANTS
 SPACE
RCNOTCOM EQU   8    RET CODE TO IND FUNCTION NOT COMPLETED.
O        EQU   0
ONE      EQU   1
BYTE     EQU   1
TWO      EQU   2
HAFWD    EQU   2
LEEDNG0S EQU   3    MAX NO. OF LEADING ZEROES TO BE SUPPRESSED
FOUR     EQU   4
WD       EQU   4
DUBLWD   EQU   8
NUML     EQU   9    LINE NO. = 8 BYTES (+1 BLANK)
BLKL     EQU   20   LNG OF PUTLINE PARM BLOCK
LO4TOHI4 EQU   28   FOR SHIFTING 4 BITS FR LO TO HI-ORDER IN REG
WHOLEDSN EQU   68
MAXL     EQU   254                      MAX DATA LNG = 255 BYTES
*                                       (259 MINUS 4-BYTE HEADER).
NOUGHT   EQU   C'0'
BLANK    EQU   C' '
STAR     EQU   C'*'
LSTRANGE EQU   X'80'     SET ON IF RANGE OF LINES TO BE LISTED @Y30NQKK
         SPACE
* MASKS
 SPACE
VERIFY   EQU   X'80'     TO FIND IF CALLED FOR VERIFY
LASTPARM EQU   X'80'     TO IND LAST PARM IN LIST FOR IKJEBESR
ANYOPNDS EQU   X'80'     TO FIND IF ANY OPERANDS ON SUBCMD
READ1ST  EQU   X'04'     IKJEBEUT CODE FOR 'RD 1ST RCD'
READCURR EQU   X'00'     IKJEBEUT CODE FOR 'RD CURR RECD'
SNUM     EQU   X'02'     TO FIND IF 'SNUM' SPEC
READNEXT EQU   X'02'     IKJEBEUT CODE FOR 'READ NEXT RCD'
POSTED   EQU   X'40'     TO FIND IF ATTN ECB POSTED
ZEROMASK EQU   X'00'     TO SET SINGLE BYTES TO ZERO
 SPACE
* MESSAGE NUMBERS & INSERTION OFFSETS
 SPACE
*                        MESSAGE EQUATE MACRO
         IKJEBEMI (312,313,500,501,502,503,504,578)            @Y30NQKK
         END   IKJEBELT
