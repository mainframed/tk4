COMPRESS TITLE 'HEW -- COMPRESS (TSO) COMMAND PROCESSOR'
***********************************************************************
*                                                                     *
*     AIR FORCE DATA SERVICES CENTER--SYSTEMS SUPPORT DIRECTORATE     *
*           ROOM 1D987, THE PENTAGON, WASHINGTON, DC 20330            *
*              TELEPHONE: (AUTOVON) 225-1274/2478/1889                *
*                COMMERCIAL (703) 695-1274/2478/1889                  *
*                                                                     *
*            ADAPTED BY CAPT BRUCE E. HOGMAN, 13 JUL 1979             *
*              FOR THE IBM 370/3032 MVS OPERATING SYSTEM              *
*                                                                     *
*          DESCRIPTION OF PROGRAM GIVEN BELOW THE CHANGE LOG.         *
***********************************************************************
*  DATE INSTALLED: 790713 FRIDAY THE THIRTEENTH.                      *
**********************************************************            *
** => CHANGE LOG: ENTER AUTHOR, DATE, SUMMARY OF CHANGE **            *
**********************************************************            *
*  DATE OF LAST CHANGE:                                               *
*   16SEP81 - BILL GODFREY, PRC, AT AFDSC/PENTAGON                    *
*           INVOKE SPFCOPY INSTEAD OF IEBCOPY.                        *
*           SPFCOPY WILL HANDLE THE AUTHORIZATION, SO THIS            *
*           COMMAND DOES NOT HAVE TO BE AUTHORIZED.                   *
*           RESERVE AND DEQ (USING SPFDSN QNAME) ADDED.               *
*           MAKE PARSE PREFIX THE DSNAME INSTEAD OF DAIR,             *
*           SO WE HAVE THE FULLY QUALIFIED DSNAME IN RNAME.           *
*           REMOVE CVT MACRO, CODE MINI CVT DSECT INLINE.             *
*                                                                     *
*   22MAY82 - JIM MARSHALL AT AFDSC/PENTAGON. REPLACED MACRO          *
*           REGEQU WITH EQUATES. ONE LESS EXTERNAL MACRO              *
*                                                                     *
**********************************************************            *
*  PROGRAM DESCRIPTION: COMPRESS IS A TSO COMMAND PROCESSOR TO ALLOW  *
*  USERS TO COMPRESS THEIR PDS'S ON-LINE UNDER TSO.  DUE TO THE       *
*  ATTACH OF IEBCOPY TO COMPRESS, THIS COMMAND IS AUTHORIZED UNDER    *
*  TSO.  SEE SFI DOCUMENTATION GIVEN BELOW.                           *
***********************************************************************
         EJECT
***********************************************************************
*    DOCUMENTATION FOR SFI LIBRARY:                                   *
*                                                                     *
*    SOURCE MODULE IS NORMALLY KEPT IN SYS1.SOURCE(COMPRESS)          *
*                                                                     *
*    LOAD MODULE IS NORMALLY IN SYS2.LINKLIB(COMPRESS)                *
*        LKED CONTROL CARDS:                                          *
*            //LKED.SYSLMOD DD DSN=SYS2.LINKLIB(COMPRESS),DISP=SHR    *
*        NOTE: SETCODE AC(1) OR USE PARM.LKED='AC=1'                  *
*        AUTHORIZATION IS REQUIRED BECAUSE OF NEED TO HAVE TSO        *
*        ATTACH THE SUBTASK IN AN AUTHORIZED STATE.                   *
*                                                                     *
*    INSTALLATION NOTE:  CSECT IKJEFTE2 IN MODULE IKJEFT02 IN LPALIB  *
*        MUST BE ZAPPED: VER 0010 4040404040404040                    *
*                        REP 0010 C3D6D4D7D9C5E2E2                    *
*        THIS TABLE IS THE TABLE USED BY TSO TO CHECK WHICH COMMANDS  *
*        SHOULD BE ATTACHED WITH APF AUTHORIZATION ENABLED FOR THE    *
*        COMMAND PROCESSOR.  THIS DIFFERS FROM THE TABLE IKJEFTE8,    *
*        WHICH IS USED BY TSO TO CHECK WHICH MODULES SHOULD BE APF    *
*        ENABLED FOR USE BY THE CALL COMMAND.                         *
*                                                                     *
*    LINKS: ATTACH IS DONE TO PROGRAM IEBCOPY                         *
*                                                                     *
*    SFI PERSON RESPONSIBLE: A/O INSTALLATION, CAPT HOGMAN.           *
*                                                                     *
*    RELATED SYS1.PROCLIB PROCS: NONE                                 *
*                                                                     *
*    RELATED PROGRAMS: IBM PROGRAM IEBCOPY, WHICH IS ATTACHED.        *
*        SPFCOPY (A LOCALLY WRITTEN PROGRAM TO INVOKE IEBCOPY),       *
*        AND THE SVC WHICH SPFCOPY USES FOR AUTHORIZATION.            *
*                                                                     *
***********************************************************************
         SPACE 4
*********************************************************************
**
**      ORIGINAL CODE FROM NASA/GSFC
**
**  COMMAND NAME ---  COMPRESS (COMPRESS A PDS)
**  ATTR - NONE (NOT RE-ENTRANT)
**
**  THIS COMMAND PROCESSOR WILL LINK IEBCOPY TO COMPRESS A DATA SET
**  WHOSE NAME IS SUPPLIED.  THE ONLY OPTION IS THE PRINT.
**
**  EXAMPLE OF COMMAND:
**    COMPRESS 'DATA SET NAME' SYSOUT
**    COMPRESS 'DATA SET NAME' PRINT('DSNAME'/*)
**    COMPRESS 'DATA SET NAME'
**     NOTE:  IF NEITHER 'PRINT' NOR 'SYSOUT' IS SPECIFIED, THE DEFAULT
**            IS 'SYSOUT'.
**    COMPRESS 'DATA SET NAME' NOPRINT
**
**
*********************************************************************
         SPACE 2
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
COMPRESS CSECT
         SAVE  (14,12),,COMPRESS-&SYSDATE-&SYSTIME
         LR    R11,R15 FIRST BASE REG
         LA    R12,1
         LA    R12,4095(R12,R11) SECOND BASE REG
         USING COMPRESS,R11,R12
         ST    R13,SAVE+4
         LA    R10,SAVE
         ST    R10,8(R13)
         LR    R13,R10
         MVC   RESERVE(16),RESZ                                   .PRC.
         MVC   DEQ(16),DEQZ                                       .PRC.
         MVC   QNAME,=CL8'SPFDSN'                                 .PRC.
         MVI   DSNAME,C' '                                        .PRC.
         MVC   DSNAME+1(43),DSNAME                                .PRC.
**
** 'SET UP PARSE PARM LIST (PPL)'
**
         ST    R1,CPPLPTR  SAVE POINTER TO COMMAND PROCESSOR PARM LIST
         LR    R10,R1
         USING CPPL,R10 EST. BASE FOR CPPL
         LA    R9,PARSEPL
         USING PPL,R9 EST. BASE FOR PARSE PARM LIST
         MVC   PPLUPT,CPPLUPT USER'S PROFILE TABLE
         MVC   PPLECT,CPPLECT ENVIRONMENT CONTROL TABLE
         LA    R2,ECB
         ST    R2,PPLECB EVENT CONTROL BLOCK
         LA    R2,ANSWER
         ST    R2,PPLANS ANSWER
         MVC   PPLCBUF,CPPLCBUF COMMAND BUFFER
         XC    PPLUWA(4),PPLUWA USER WORK AREA ADDR
         MVC   PPLPCL,=A(PPLPARM) PARM CONTROL LIST ADDR
**
** 'SET UP DAIR PARM LIST'
**
         LA    R9,DAIRPL
         USING DAPL,R9 EST. BASE FOR DAIR PARM LIST
         MVC   DAPLUPT,CPPLUPT
         MVC   DAPLECT,CPPLECT
         LA    R2,ECB
         ST    R2,DAPLECB
         MVC   DAPLPSCB,CPPLPSCB PROTECTED STEP CONTROL BLOCK
         LA    R3,DAIRPB PTR TO DAIR PARM BLOCK
         ST    R3,DAPLDAPB
         DROP  R9,R10
         XC    ECB,ECB
         LA    R1,PARSEPL
         CALLTSSR EP=IKJPARS
         LTR   R15,R15 TEST FOR SUCCESSFUL COMP.
         BZ    PARSEOK
PARSERR  CVD   R15,DTEMP CONVERT RETURN CODE TO BE OUTPUT WITH MESSAGE
         UNPK  DTEMP(3),DTEMP+6(2)
         OI    DTEMP+2,X'F0'
         MVC   MSG01C,DTEMP+1
         TPUT  MSG01,MSG01L
         B     RETURN3
**
** 'GET DSNAME INPUT TO USE FOR ALLOC'
**
PARSEOK  L     R10,ANSWER
         USING PDL,R10 EST. BASE FOR PDL
         L     R2,PPLDSNAM LOAD PTR TO DSNAME INPUT
         LH    R3,PPLDSNAM+4 LOAD LENGTH OF DATA SET
         STH   R3,DSNLEN
         BCTR  R3,R0
         LA    R4,DSNAME
         EX    R3,MOVE
*MOVE    MVC   0(*-*,R4),0(R2)
         MVC   RNAME,DSNAME                                       .PRC.
**
**  ALLOCATE DATA SET TO BE COMPRESSED
**
         LA    R9,DAIRPB
         USING DAPB08,R9
         MVC   DA08CD,=X'0008'
         XC    DA08FLG(6),DA08FLG
         LA    R2,DSNLEN
         ST    R2,DA08PDSN
         MVI   DA08DDN,C' '
         MVC   DA08DDN+1(23),DA08DDN
         XC    DA08BLK(16),DA08BLK
         MVI   DA08MNM,C' '
         MVC   DA08MNM+1(15),DA08MNM
         MVI   DA08DSP1,DA08OLD     OLD    BEH NOTE: CHECK THIS.
         MVI   DA08DPS2,DA08KEEP    KEEP
         MVI   DA08DPS3,DA08KEP     KEEP
         XC    DA08CTL(5),DA08CTL
*        TM    PPLDSNAM+6,X'40' TEST FOR DSNAME WITHIN QUOTES     .PRC.
*        BO    GOLINK QUOTES                                      .PRC.
*        MVI   DA08CTL,B'00100000' INDICATE TO PREFIX USER ID     .PRC.
GOLINK   LA    R1,DAIRPL
          CALLTSSR EP=IKJDAIR  CALL DAIR TO ALLOCATE
         LTR   R15,R15
         BZ    CMPRSOK
         CLI   DA08DARC,X'17' TEST FOR CATALOG ERROR
         BE    CATERR
CMPRSERR DC    0H'0'
         ST    R15,SAVER15
         LA    R1,MSG04
         BAL   R14,OUTMSG
         L     R15,SAVER15
         L     R1,DA08DARC
         BAL   R14,DAIRERR
         B     RETURN3
CATERR   CLI   DA08DARC+1,X'08'
         BE    NOTCATLG
         CLI   DA08DARC+1,X'0C'
         BE    NOTCATLG
         CLI   DA08DARC+1,X'16'
         BNE   CMPRSERR
NOTCATLG LA    R1,MSG03
         BAL   R14,OUTMSG
         B     RETURN3
CMPRSOK  MVC   DDNAMLST+56(8),DA08DDN  SYSUT1
         MVC   DDNAMLST+64(8),DA08DDN  SYSUT2
**                                                                    *
**        GET UCB OF DATA SET                                         *
**                                                                    *
         L     R1,16               CVTPTR                         .PRC.
         L     R1,0(,R1)           TCB WORDS                      .PRC.
         L     R1,4(,R1)           CURRENT TCB                    .PRC.
         L     R1,12(,R1)          TCBTIOT - POINT TO TIOT        .PRC.
         LA    R15,24(,R1)         TIOENTRY                       .PRC.
         USING TIOENTRY,R15                                       .PRC.
TIOTLOOP CLI   TIOENTRY,X'00'      END OF TIOT?                   .PRC.
         BE    ABEND               YES - IMPOSSIBLE               .PRC.
         CLC   TIOEDDNM,DA08DDN    DOES DDNAME MATCH?             .PRC.
         BE    TIOTEXIT            YES - RETURN                   .PRC.
         SR    R1,R1                                              .PRC.
         IC    R1,TIOELNGH         GET LENGTH OF ENTRY            .PRC.
         LA    R15,0(R1,R15)       POINT TO NEXT ENTRY            .PRC.
         B     TIOTLOOP                                           .PRC.
ABEND    DC    H'0'                                               .PRC.
TIOTEXIT L     R1,TIOEFSRT-1       GET UCB ADDRESS                .PRC.
         LA    R1,0(,R1)           CLEAR HI ORDER BYTE            .PRC.
         ST    R1,UCBAD            SAVE UCB ADDRESS               .PRC.
**
** 'ALLOC DUMMY FOR SYSIN'
**
**  R9 STILL POINTS TO DAPB AND 0008 IS IN DA08CD
**
         XC    DA08FLG(10),DA08FLG
         MVI   DA08DDN,C' '
         MVC   DA08DDN+1(23),DA08DDN
         XC    DA08BLK(16),DA08BLK
         MVI   DA08MNM,C' '
         MVC   DA08MNM+1(15),DA08MNM
         MVI   DA08DSP1,B'00000100' NEW
         XC    DA08DPS2(2),DA08DPS2
         MVI   DA08CTL,B'00000100' DUMMY
         XC    DA08CTL+1(4),DA08CTL+1
         XC    ECB,ECB
         LA    R1,DAIRPL
          CALLTSSR EP=IKJDAIR  CALL DAIR TO ALLOCATE
         LTR   R15,R15
         BZ    SAVDUMDD
         ST    R15,SAVER15
         TPUT  MSG09,MSG09L
         L     R15,SAVER15
         L     R1,DA08DARC
         BAL   R14,DAIRERR
         B     RETURN2
SAVDUMDD MVC   DDNAMLST+32(8),DA08DDN SAVE SYSIN DD NAME
**
** 'ALLOCATE SYSPRINT'
**
         CLI   PRNTKYWD+1,0
         BE    TESTOUT
         CLI   PRNTKYWD+1,2
         BL    ALSYSOUT GO ALLOC SYSPRINT TO SYSOUT
         BE    ALPRTDUM GO ALLOC SYSPRINT TO DUMMY
         LA    R8,PRNTDSNA
         B     ALPRTDSN GO ALLOC SYSPRINT TO DATA SET
TESTOUT  CLI   OUTKYWD+1,0
         BE    ALPRTDUM
         CLI   OUTSUBKY+1,2
         BL    ALSYSOUT
         BE    ALPRTDUM
         LA    R8,OUTDSNA
         B     ALPRTDSN
**
**  R9 STILL POINTS TO DAPB AND 0008 IS IN DA08CD
**
ALPRTDUM XC    DA08FLG(10),DA08FLG ALLOC SYSPRINT TO DUMMY
         MVI   DA08DDN,C' '
         MVC   DA08DDN+1(23),DA08DDN
         XC    DA08BLK(16),DA08BLK
         MVI   DA08MNM,C' '
         MVC   DA08MNM+1(15),DA08MNM
         MVI   DA08DSP1,B'00000100' NEW
         XC    DA08DPS2(2),DA08DPS2
         MVI   DA08CTL,B'00000100' DUMMY
         XC    DA08CTL+1(4),DA08CTL+1
         XC    ECB,ECB
         LA    R1,DAIRPL
          CALLTSSR EP=IKJDAIR  CALL DAIR TO ALLOCATE
         LTR   R15,R15
         BZ    SAVEDDN
         ST    R15,SAVER15
         TPUT  MSG13,MSG13L
         L     R15,SAVER15
         L     R1,DA08DARC
         BAL   R14,DAIRERR
         B     RETURN2
         B     SAVEDDN
**
** 'ALLOC SYSPRINT SYSOUT=H'
**
         USING DAPB30,R9 R9 STILL PINTS TO DAPB
ALSYSOUT MVC   DA30CD,=X'0030'
         XC    DA30FLG(10),DA30FLG
         MVI   DA30DDN,C' '
         MVC   DA30DDN+1(23),DA30DDN
         MVC   DA30BLK,=F'3509' BLKSIZE
         XC    DA30PQTY(8),DA30PQTY
         MVI   DA30PQTY+3,10 TRKS
         MVI   DA30SQTY+3,2 TRKS
         MVI   DA30PGNM,C' '
         MVC   DA30PGNM+1(11),DA30PGNM
         MVC   DA30OCLS,=CL2'H' SYSOUT CLASS=H  H:AFDSC MOD BEH
         MVI   DA30CTL-1,0
         MVI   DA30CTL,B'10010000' TRK, RELEASE
         MVI   SYSOUTSW,X'FF' INDICATE SYSOUT DATA SET
         XC    ECB,ECB
         LA    R1,DAIRPL
          CALLTSSR EP=IKJDAIR  CALL DAIR TO ALLOCATE
         LTR   R15,R15
         BZ    SAVEDDN
         ST    R15,SAVER15
         TPUT  MSG05,MSG05L SYSOUT NOT ALLOCATED
         L     R15,SAVER15
         L     R1,DA30DARC
         BAL   R14,DAIRERR
         B     RETURN2
**
** 'ALLOC SYSPRINT DATA SET'
**
ALPRTDSN L     R2,0(R8)
         CLI   0(R2),C'*' TEST FOR TERMINAL
         BE    ALTERM
         LA    R4,DSNAME
         LH    R3,4(R8) LOAD LENGTH OF DSNAME
         STH   R3,DSNLEN
         BCTR  R3,R0
         EX    R3,MOVE DSNAME
         BAL   R14,ALLOCPRT GO DO BASIC FOR ALLOC FO SYSPINT
**
**  ALLOCATE NEW
**
         USING DAPB08,R9
         MVC   DA08BLK,=F'3509'
         MVI   DA08PQTY+3,10 TRKS
         MVI   DA08SQTY+3,2 TRKS
         TM    14(R8),X'80' TEST FOR MEMBER NAME
         BZ    ALNOMEM
         MVI   DA08DQTY+3,1 DIR. BLK
ALNOMEM  OI    DA08DSP1,X'04' NEW
         OI    DA08DPS2,X'02' CATALOG
         OI    DA08DPS3,X'08' KEEP
         OI    DA08CTL,B'01010000' TRKS, RELEASE
         LA    R1,DAIRPL
          CALLTSSR EP=IKJDAIR  CALL DAIR TO ALLOCATE
         LTR   R15,R15
         BZ    SAVEDDN
**
**  TRY ALLOC AS SHR
**
         BAL   R14,ALLOCPRT GO DO BASIC
         OI    DA08DSP1,X'08' SHR
         LA    R1,DAIRPL
          CALLTSSR EP=IKJDAIR  CALL DAIR TO ALLOCATE
         LTR   R15,R15
         BZ    TESTPO
         ST    R15,SAVER15
         LA    R1,MSG04
         BAL   R14,OUTMSG
         L     R15,SAVER15
         L     R1,DA08DARC
         BAL   R14,DAIRERR
         B     RETURN2
TESTPO   TM    DA08DSO,B'00000010' TEST FOR PO
         BZ    SAVEDDN
         CLI   DA08MNM,C' ' TEST FOR BLANK MEMBER NAME
         BNE   SAVEDDN
         LA    R1,MSG07 NO MEMBER NAME
         BAL   R14,OUTMSG
         B     RETURN2
SAVEDDN  MVC   DDNAMLST+40(8),DA08DDN
         B     ALUT34
**
** 'ALLOC SYSPRINT TO TERM'
**
         USING DAPB1C,R9
ALTERM   MVC   DA1CCD,=X'001C'
         XC    DA1CFLG(6),DA1CFLG
         MVC   DA1CDDN,BLANK
         LA    R1,DAIRPL
          CALLTSSR EP=IKJDAIR  CALL DAIR TO ALLOCATE
         LTR   R15,R15
         BZ    SAVETDSN
         ST    R15,SAVER15
         TPUT  MSG06,MSG06L
         L     R15,SAVER15
         XC    DA1CDARC+2(2),DA1CDARC
         L     R1,DA1CDARC
         BAL   R14,DAIRERR
         B     RETURN2
SAVETDSN MVC   DDNAMLST+40(8),DA1CDDN
**
** 'ALLOC SYSUT3 SYSUT4'
**
         USING DAPB08,R9
ALUT34   LA    R7,2 TWO SYSUT5
         MVC   DA08CD,=X'0008'
SYSUTLP  XC    DA08FLG(6),DA08FLG
         LA    R2,SYSUTX
         ST    R2,DA08PDSN
         MVI   DA08DDN,C' '
         MVC   DA08DDN+1(23),DA08DDN
         XC    DA08BLK(16),DA08BLK
         MVI   DA08PQTY+3,2 CYL
         MVI   DA08SQTY+3,1 CYL
         MVI   DA08MNM,C' '
         MVC   DA08MNM+1(15),DA08MNM
         MVI   DA08DSP1,X'04' NEW
         MVI   DA08DPS2,X'04' DELETE
         MVI   DA08DPS3,X'04' DELETE
         MVI   DA08CTL,B'11000000' CYL
         XC    DA08CTL+1(4),DA08CTL+1
         LA    R1,DAIRPL
          CALLTSSR EP=IKJDAIR  CALL DAIR TO ALLOCATE
         LTR   R15,R15
         BZ    SYSUTST
         ST    R15,SAVER15
         TPUT  MSG08,MSG08L
         L     R15,SAVER15
         L     R1,DA08DARC
         BAL   R14,DAIRERR
         B     RETURN2
SYSUTST  LR    R4,R7 =2 0R 1
         SLL   R4,3 =16 OR 8
         LA    R4,DDNAMLST+64(R4)
         LA    R2,DA08DDN
         LA    R3,7
         EX    R3,MOVE DDNAME INTO LIST
         BCT   R7,MOVEUTNO
         B     SETSTAX
MOVEUTNO MVI   SYSUTXNO,C'3' FOR SYSUT3
         B     SYSUTLP
**
** 'INITIATE STAX'
**
SETSTAX  DC    0H'0'
         LA    R1,STAXLIST
         STAX  STAXEXIT,USADDR=(R13),OBUF=(ATTNMSG,ATTNMSGL),          +
               MF=(E,(R1))
         IKJRLSA ANSWER
         RESERVE (QNAME,RNAME,E,44,SYSTEMS),UCB=UCBAD,RET=NONE,   .PRC.+
               MF=(E,RESERVE)                                     .PRC.
         XC    ECB,ECB
         ATTACH EP=SPFCOPY,PARAM=(VSPARM,DDNAMES),ECB=ECB,VL=1,        +
               RSAPF=YES
         ST    R1,TCB
         WAIT  ECB=ECB
         MVC   COMPCD,ECB+3 SAVE IEBCOPY RETURN CODE
DETACH   DETACH TCB
         DEQ   (QNAME,RNAME,44,SYSTEMS),MF=(E,DEQ)                .PRC.
         STAX  0
RETURN2  LA    R2,11
RTNLOOP  LR    R3,R2
         BCTR  R3,R0
         SLL   R3,3
         LA    R1,DDNAMLST(R3)
         MVI   OUTSWT,0
         CH    R2,=H'6'
         BNE   GOFREEDD
         MVC   OUTSWT,SYSOUTSW
GOFREEDD BAL   R14,FREEDDN
         BCT   R2,RTNLOOP
RETURN3  L     R2,TCB
         LTR   R2,R2
         BZ    RETURN4
         SR    R2,R2
         IC    R2,COMPCD
         CVD   R2,DTEMP
         UNPK  DTEMP(3),DTEMP+6(2)
         OI    DTEMP+2,X'F0'
         MVC   MSG10C,DTEMP+1
         TPUT  MSG10,MSG10L
RETURN4  SR    R15,R15
         IC    R15,COMPCD
         L     R13,SAVE+4
         RETURN (14,12),T,RC=(15)
**
MOVE     MVC   0(*-*,R4),0(R2)
**
COMPARE  CLC   0(*-*,R2),0(R4)
**
STAXEXIT DC    0H'0' ATTN HANDLER
         BR    R14 RETURN TO STAX
**
** BASIC ALLOCATION OF SYSPRINT DATA SET
**
         USING DAPB08,R9
ALLOCPRT MVC   DA08CD,=X'0008'
         XC    DA08FLG(6),DA08FLG
         LA    R2,DSNLEN
         ST    R2,DA08PDSN
         MVI   DA08DDN,C' '
         MVC   DA08DDN+1(23),DA08DDN
         XC    DA08BLK(16),DA08BLK
         MVI   DA08MNM,C' '
         MVC   DA08MNM+1(15),DA08MNM
         TM    14(R8),X'80'
         BZ    NOMEM
         LH    R3,12(R8)
         BCTR  R3,R0
         LA    R4,DA08MNM
         L     R2,8(R8)
         EX    R3,MOVE MEMBER NAME
NOMEM    XC    DA08DSP1(7),DA08DSP1
         TM    6(R8),B'01000000' TEST FOR QUOTES
         BO    ALLOCRTN
         OI    DA08CTL,B'00100000' PREFIX USER ID
ALLOCRTN BR    R14
         DROP  R9
**
** OUTPUT DATA SET 'DSNAME' --- MESSAGE
** R1 = ADDR OF LAST PART, R14 = RETURN ADDR, R9 = ADDR OF DAPB
** USE ADDR OF DATA SET NAME IN DAPB08, ALSO DA08CTL FOR QUOTES.
**
         USING DAPB08,R9
OUTMSG   ST    R14,SAVER14 SAVE RETURN ADDR
         LA    R4,MSG02C
         TM    DA08CTL,B'00100000' TEST FOR QUOTES
         BO    NOQOUTE1
         MVI   0(R4),C'''' MOVE QUOTE
         LA    R4,1(R4)
NOQOUTE1 L     R3,DA08PDSN LOAD ADDR OF DATA SET NAME
         LA    R2,2(R3)
         LH    R3,0(R3) LOAD LENGTH OF DSNAME
         BCTR  R3,R0 FOR MVC
         EX    R3,MOVE DSNAME
         LA    R4,1(R3,R4)
         TM    DA08CTL,B'00100000' TEST FOR QUOTE
         BO    NOQUOTE2
         MVI   0(R4),C'''' MOVE QUOTE
         LA    R4,1(R4)
NOQUOTE2 MVI   0(R4),C' '
         LA    R4,1(R4)
         LH    R3,0(R1)
         BCTR  R3,R0
         LA    R2,2(R1)
         EX    R3,MOVE
         LA    R4,1(R3,R4)
         LA    R2,MSG02
         SR    R4,R2
         TPUT  MSG02,(R4) OUTPUT MSG
         L     R14,SAVER14
         BR    R14
**
** 'FREE DDNAME'
**
** R1=ADDR OF DDNAME, R14=RETURN ADDR
** OUTSWT=00 -- NO SYSOUT, OUTSWT=FF SYSOUT=A DATA SET
**
FREEDDN  STM   R2,R9,FREESV29
         ST    R14,FREESV14
         LA    R8,DAIRPB
         USING DAPB18,R8
         MVC   DA18CD,=X'0018'
         XC    DA18FLG(10),DA18FLG
         MVC   DA18DDN,0(R1) MOVE DDNAME
         MVC   DA18MNM,BLANK MEMBER NAME
         CLI   OUTSWT,X'00'
         BE    FREEX1
         MVC   DA18SCLS,=C'A '
         B     FREEX2
FREEX1   MVC   DA18SCLS,BLANK SYSOUT CLASS
FREEX2   MVI   DA18DPS2,B'00001000'
*        MVI   DA18CTL,B'00010000' FREE PERMANENT ALLOCATIONS
         MVC   DA18JBNM,BLANK
         XC    ECB,ECB
         LA    R1,DAIRPL
          CALLTSSR EP=IKJDAIR  CALL DAIR TO ALLOCATE
         LM    R2,R9,FREESV29
         L     R14,FREESV14
         BR    R14 RETURN
         DROP  R8
**
** END OF FREEDDN SECTION
**
** 'DAIR ERROR MSGS'
** THIS SECTION CHECKS THE CODE RETURNED FROM DAIR AND OUTPUT THE
** MESSAGE CORRESPONDING TO THE TYPE. REG 1=DARC& CTRC, REG 14=RETURN
** ADDR, AND REG 15=RC FROM DAIR
**
DAIRERR  ST    R14,DAIRERRN SAVE RETURN ADDR
         STM   R2,R5,DAIRERRO
         B     DAIRERR1(R15)
DAIRERR1 B     DAIRERRG RC=0 DAIR IS O.K. -- RETURN
         B     DAIRERR5 RC=4 PARM LIST WAS INVALID
         B     DAIRERR2 RC=8 ERROR IN CATALOG MANAGEMENT
         B     DAIRERR3 RC=12 ERROR IN DYNAMIC ALLOCATION
         B     DAIRERR4 RC=16 NO TIOT ENTRIES
         B     DAIRERR5 RC=20 DDNAME IS UNAVAILABLE
         B     DAIRERR5 RC=24 DSNAME IS MEMBER OF CONCATENATED GROUP
         B     DAIRERR5 RC=28 DDNAME OR DSNAME NOT CURRENTLY ALLOCATED
         B     DAIRERR5 RC=32 DISP=NEW CANNOT BE SPECIFIED
         B     DAIRERR5 RC=36 ERROR IN CATALOG INFORMATION ROUTINE
         B     DAIRERR5 RC=40 RETURN AREA FOR QUALIFIERS TOO SMALL
         B     DAIRERR5 RC=44 DISP=OLD, MOD, OR SHR WITH NO VOL-SER NO.
DAIRERR2 LR    R2,R1  (RC=8)
DAIRER21 SRDL  R2,16
         SRL   R3,16
         CVD   R3,DAIRERRM
         UNPK  DAIRERRM(3),DAIRERRM+6(2)
         OI    DAIRERRM+2,X'F0'
         MVC   DAIRERRQ,DAIRERRM+1
         TPUT  DAIRERRP,DAIRERRR
         B     DAIRERRG
DAIRERR3 SRL   R1,16 (RC=12)  SHIFT OUT CTRC
         LR    R2,R1
         LA    R5,4
DAIRER31 SRDL  R2,4
         SRL   R3,28
         IC    R1,DAIRTAB(R3)
         STC   R1,DAIRERRT-1(R5)
         BCT   R5,DAIRER31
         TPUT  DAIRERRS,DAIRERRU
         B     DAIRERRG
DAIRERR4 TPUT  DAIRERRV,DAIRERRW (RC=16)
         B     DAIRERRG
DAIRERR5 CVD   R15,DAIRERRM (RC=4,20,24,28,32,36,40,44)
         UNPK  DAIRERRM(3),DAIRERRM+6(2)
         OI    DAIRERRM+2,X'F0'
         MVC   DAIRERRY,DAIRERRM+1
         TPUT  DAIRERRX,DAIRERRZ
DAIRERRG LM    R2,R5,DAIRERRO
         L     R14,DAIRERRN
         BR    R14
DAIRERRM DS    D
DAIRERRN DS    F SAVE R14
DAIRERRO DS    4F SAVE R2 THRU R5
DAIRERRP DC    C'CATALOG MANAGEMENT ERROR CODE '
DAIRERRQ DS    CL2
DAIRERRR EQU    *-DAIRERRP
DAIRERRS DC    C'DYNAMIC ALLOCATION ERROR CODE '
DAIRERRT DS    CL4
DAIRERRU EQU   *-DAIRERRS
DAIRERRV DC    C'UNABLE TO ALLOCATE, MAXIMUM NUMBER OF ALLOCATIONS EXCEX
               EDED'
DAIRERRW EQU   *-DAIRERRV
DAIRERRX DC    C'ERROR RETURNED FROM DYNAMIC ALLOCATION CODE '
DAIRERRY DS    CL2
DAIRERRZ EQU   *-DAIRERRX
DAIRTAB  DC    C'0123456789ABCDEF'
         CNOP  0,4  FOR NEXT SECTION OF CODE
**
** END OF DAIR ERROR PROCESSING
**
**
** 'SAVE AREA, CONSTANTS'
**
DTEMP    DS    D
BLANK    DC    CL8' '
SAVE     DS    18F
CPPLPTR  DS    A
PARSEPL  DS    7F PARSE PARM LIST
ANSWER   DS    F
ANSWER1  DS    F
DAIRPL   DS    5F
ECB      DS    F
TCB      DC    F'0'
DAIRPB   DS    20F USED FOR ALL DAIR PARM BLOCKS
SAVER14  DS    F
FREESV14 DS    F
OUTDSLEN DS    H
         DC    H'0'
OUTDSN   DS    CL44
         DS    0F
VSPARM   DC    H'0' PARM LIST FOR IEBCOPY
DDNAMES  DC    H'88' ALTERNATE DDNAME LIST FOR IEBCOPY
DDNAMLST DC    22F'0' 11 8 BYTE DDNAMES
FREESV29 DS    8F
SAVER15  DS    F
STAXLIST STAX  STAXEXIT,MF=L
SYSUTX   DC    Y(SYSUTXL)
         DC    X'50' AMPERSAND
         DC    C'SYSUT'
SYSUTXNO DC    C'4'
SYSUTXL  EQU   *-SYSUTX-2
DSNLEN   DS    H
DSNAME   DS    CL44
OUTSWT   DC    X'0'
SYSOUTSW DC    X'0'
COMPCD   DC    X'10'
RESZ     RESERVE (DUMMYQ,DUMMYR,E,44,SYSTEMS),UCB=DUMMYU,MF=L     .PRC.
DEQZ     DEQ   (DUMMYQ,DUMMYR,44,SYSTEMS),MF=L                    .PRC.
DUMMYQ   EQU   0                                                  .PRC.
DUMMYR   EQU   0                                                  .PRC.
DUMMYU   EQU   0                                                  .PRC.
UCBAD    DS    F                                                  .PRC.
RESERVE  DS    4F                                                 .PRC.
DEQ      DS    4F                                                 .PRC.
QNAME    DS    CL8                                                .PRC.
RNAME    DS    CL44                                               .PRC.
**
** 'ERROR MSGS FOR TPUT'
**
MSG01    DC    C'ERROR INDICATED FROM PARSE -- CODE='
MSG01C   DS    CL2
MSG01L   EQU   *-MSG01
MSG02    DC    C'DATA SET '
MSG02C   DS    CL120
MSG03    DC    Y(MSG03L),C'NOT IN CATALOG'
MSG03L   EQU   *-MSG03-2
MSG04    DC    Y(MSG04L),C'NOT ALLOCATED'
MSG04L   EQU   *-MSG04-2
MSG05    DC    C'SYSOUT DATA SET NOT ALLOCATED'
MSG05L   EQU   *-MSG05
MSG06    DC    C'SYSPRINT DATA SET NOT ALLOCATED TO TERMINAL'
MSG06L   EQU   *-MSG06
MSG07    DC    Y(MSG07L),C'PARTITIONED -- NO MEMBER NAME SPECIFIED'
MSG07L   EQU   *-MSG07-2
MSG08    DC    C'UTILITY DATA SET NOT ALLOCATED'
MSG08L   EQU   *-MSG08
MSG09    DC    C'SYSIN (DUMMY) DATA SET NOT ALLOCATED'
MSG09L   EQU   *-MSG09
MSG10    DC    C'COMPRESS IS COMPLETE -- HIGHEST SEVERITY CODE IS '
MSG10C   DS    CL2
MSG10L   EQU   *-MSG10
MSG11    DC    C'''OUT'' SUBFIELD IS AMBIGUOUS'
MSG11L   EQU   *-MSG11
MSG12    DC    C'INVALID ''OUT'' SUBFIELD'
MSG12L   EQU   *-MSG12
MSG13    DC    C'SYSPRINT (DUMMY) NOT ALLOCATED'
MSG13L   EQU   *-MSG13
ATTNMSG  DC    C'YOU CANNOT INTERRUPT ''COMPRESS'''
ATTNMSGL EQU   *-ATTNMSG
RESPNSE  DC    CL10'YES' INIT TO 'YES' IN CASE OF ATTN OR NULL LINE
RESPNSEL EQU   *-RESPNSE
*        PRINT NOGEN
         EJECT
**
** 'PARSE PARM LIST'
**
PPLPARM  IKJPARM DSECT=PDL
*PLDSNAM IKJPOSIT DSNAME,PROMPT='DATA SET NAME',HELP=('DATA SET NAME IS
*              REQUIRED FOR THE COMPRESS COMMAND')
PPLDSNAM IKJPOSIT DSNAME,USID,                                    .PRC.+
               PROMPT='DATA SET NAME',                            .PRC.+
               HELP=('NAME OF DATA SET TO BE COMPRESSED')         .PRC.
PRNTKYWD IKJKEYWD
         IKJNAME 'SYSOUT'
         IKJNAME 'NOPRINT'
         IKJNAME 'PRINT',SUBFLD=PRNTSUBF
OUTKYWD  IKJKEYWD
         IKJNAME 'OUT',SUBFLD=OUTSUBF
PRNTSUBF IKJSUBF
PRNTDSNA IKJPOSIT DSTHING,PROMPT='DATA SET NAME OR * FOR PRINT'
OUTSUBF  IKJSUBF
OUTSUBKY IKJKEYWD
         IKJNAME 'SYSOUT'
         IKJNAME 'DUMMY'
         IKJNAME 'DATASET',SUBFLD=OUTDSNF
OUTDSNF  IKJSUBF
OUTDSNA  IKJPOSIT DSTHING,PROMPT='DATA SET NAME OR * FOR OUT'
         IKJENDP
*        PRINT NOGEN
         LTORG
**
** 'MAPPING DSECTS'
**
         IKJCPPL
         IKJPPL
         IKJIOPL
         IKJDAPL
         IKJDAP08
         IKJDAP18
         IKJDAP1C
         IKJDAP30
*        CVT   DSECT=YES,LIST=YES                                 .PRC.
CVTPTR   EQU   16                                                 .PRC.
CVT      DSECT                                                    .PRC.
CVTMAP   EQU   *                                                  .PRC.
         ORG   CVTMAP+X'20C'       CVTPARS                        .PRC.
CVTPARS  DS    A                                                  .PRC.
         ORG   CVTMAP+X'2DC'       CVTDAIR                        .PRC.
CVTDAIR  DS    A                                                  .PRC.
         SPACE 1
TIOT     DSECT
         DS    CL24                JOBNAME, ETC
TIOENTRY DS    0C
TIOELNGH DS    AL1                 LENGTH OF THIS ENTRY
         DS    XL3
TIOEDDNM DS    CL8                 DD NAME
TIOEJFCB DS    CL3                 TTR OF JFCB
         DS    XL2
TIOEFSRT DS    AL3                 ADDRESS OF UCB
         END   COMPRESS
