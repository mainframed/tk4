         TITLE '  U A D S  '
************************************************************
*                                                          *
*        'UADS' TSO COMMAND                                *
*                                                          *
************************************************************
         SPACE
*        WRITTEN BY. BILL GODFREY,  PLANNING RESEARCH CORPORATION.
*        INSTALLATION. AIR FORCE DATA SERVICES CENTER / PENTAGON.
*        DATE WRITTEN. MAY 6 1981.
*        DATE UPDATED.
*        ATTRIBUTES. RE-ENTRANT.
*        PRIVATE MACRO REQUIRED: IKJEFUAD.
*        DESCRIPTION.
*         THIS COMMAND LISTS UADS MEMBERS ON THE TERMINAL.
*         IT DIFFERS FROM THE 'ACCOUNT' COMMAND IN THAT IT
*         DOES NOT LIST THE PASSWORD, DOES NOT ALLOW CHANGES,
*         AND CANNOT LIST THE DIRECTORY OF ALL MEMBER NAMES.
*
*         IT IS INTENDED FOR USE BY THOSE PERSONS IN SYSTEMS
*         SUPPORT WHO NEED TO LOOK AT UADS BUT ARE NOT
*         RESPONSIBLE FOR UPDATING IT.
*
*         SYNTAX - UADS USERIDX     OR   UADS (USERIDX USERIDY ...)
*
*         ASTERISK MAY BE SPECIFIED IN PLACE OF YOUR OWN USERID.
*
*         THE INFORMATION IS DISPLAYED IN THE FOLLOWING FORMAT:
*
*         USERID - XXXXXXX   USER ATTRIBUTES: NOOPER NOACCT JCL NOMOUNT
*                            INSTALLATION ATTRIBUTES, IN HEX: 0000
*                            MAXSIZE:  1000K
*                            USER PROFILE TABLE:
*                            00000000000000000000000000000000 PREFIX
*                            DESTINATION   =  (DEFAULT)
*                            HOLD MSGCLASS =  (DEFAULT)
*                            JOB CLASS     =  (DEFAULT)
*                            MESSAGE CLASS =  (DEFAULT)
*                            SYSOUT CLASS  =  (DEFAULT)
*                            PERFORMANCE GROUPS:
*                               2
*            PASSWORD XXXXXXXX
*               ACCOUNT XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
*                  PROC XXXXXXXX SIZE=NNNNNK  UNIT NAME: SYSDA
*
         MACRO
&NAME    $TPUT &A,&B
&NAME    LA    R1,&A
         LA    R0,&B
         SVC   93
         MEND
         SPACE
UADS     CSECT
         USING *,R12
         B     @PROLOG-*(,15)
         DC    AL1(11),CL11'UADS'
         DC    CL16' &SYSDATE &SYSTIME '
@SIZE    DC    0F'0',AL1(0),AL3(@DATAL) SUBPOOL AND LENGTH
@PROLOG  STM   14,12,12(13)
         LR    R12,R15             BASE REGISTER
         LR    R2,R1
         USING CPPL,R2
         L     R0,@SIZE            WORKAREA SUBPOOL AND LENGTH
         GETMAIN R,LV=(0)
         LR    R9,R1               INITIALIZE WORKAREA POINTER
         USING @DATA,R9
         SPACE 1
         LR    R0,R1               AREA TO BE CLEARED
         L     R1,@SIZE            LENGTH TO BE CLEARED
         SLR   R15,R15             ZERO PAD AND 'FROM' LENGTH
         MVCL  R0,R14              ZERO IT ALL
         SPACE 1
         ST    R13,4(,R9)          PUT OLD ADDRESS IN NEW SAVE AREA
         ST    R9,8(,R13)          PUT NEW ADDRESS IN OLD SAVE AREA
         LR    R13,R9              SWITCH R13 TO NEW SAVE AREA
         XC    RC,RC
         ST    R2,CPPLPTR
         MVI   LINE-1,C' '
         SPACE
************************************************************
*                                                          *
*        SET UP IOPL FOR PUTLINE                           *
*                                                          *
************************************************************
         SPACE
         LA    R15,MYIOPL
         USING IOPL,R15
         MVC   IOPLUPT(4),CPPLUPT
         MVC   IOPLECT(4),CPPLECT
         LA    R0,MYECB
         ST    R0,IOPLECB
         XC    MYECB,MYECB
         LA    R0,MYPTPB
         ST    R0,IOPLIOPB
         DROP  R15                 IOPL
         SPACE
         L     R15,16              LOAD CVT POINTER
         TM    444(R15),X'80'      IS PUTLINE LOADED? (VS2)
         BNO   PUTLOAD             NO - BRANCH TO LOAD
         L     R15,444(,R15)       YES - USE CVTPUTL
         B     PUTLOADX            BRANCH AROUND LOAD
PUTLOAD  LA    R0,=CL8'IKJPUTL '
         LOAD  EPLOC=(0)
         LR    R15,R0              GET ENTRY ADDRESS
         LA    R15,0(,R15)         CLEAR HI BYTE FOR DELETE ROUTINE
PUTLOADX ST    R15,MYPUTLEP        SAVE PUTLINE ENTRY ADDRESS
         SPACE
************************************************************
*                                                          *
*         CHECK AUTHORITY OF USER ISSUING COMMAND          *
*                                                          *
************************************************************
         SPACE
         L     R1,16               CVTPTR
         L     R1,0(,R1)
         L     R1,4(,R1)           CURRENT TCB
         L     R1,12(,R1)          TIOT
         CLC   0(2,R1),=C'SS'      IS IT SYSTEMS JOCKS ???
         BNE   EXIT
         SPACE
************************************************************
*                                                          *
*        SET UP PPL FOR PARSE                              *
*                                                          *
************************************************************
         SPACE
         LA    R15,MYPPL
         USING PPL,R15
         MVC   PPLUPT(4),CPPLUPT
         MVC   PPLECT(4),CPPLECT
         LA    R0,MYECB
         ST    R0,PPLECB
         XC    MYECB,MYECB
         L     R0,=A(UADSPCL)
         ST    R0,PPLPCL
         LA    R0,MYANS
         ST    R0,PPLANS
         MVC   PPLCBUF(4),CPPLCBUF
         ST    R9,PPLUWA
         DROP  R15                 PPL
         SPACE 1
************************************************************
*                                                          *
*        CALL THE PARSE SERVICE ROUTINE                    *
*                                                          *
************************************************************
         SPACE 1
         LR    R1,R15              POINT TO PPL
         L     R15,16              CVTPTR
         TM    520(R15),X'80'      IF HI ORDER BIT NOT ON
         BNO   PARSELNK               THEN DO LINK, NOT CALL
         L     R15,520(,R15)       CVTPARS
         BALR  R14,R15             CALL IKJPARS
         B     PARSEEXT            SKIP AROUND LINK
PARSELNK EQU   *
         LINK  EP=IKJPARS,SF=(E,LINKAREA)
PARSEEXT EQU   *
         SPACE
         LTR   R15,R15             WAS PARSE SUCCESSFUL
         BNZ   PARSERR             NO, BRANCH
         SPACE
         L     R3,MYANS
         USING IKJPARMD,R3
         SPACE
         MVC   DDNAME,=CL8'SYSUADS'
         DEVTYPE DDNAME,DEVAREA
         LTR   R15,R15
         BNZ   DDERR
         LA    R4,SYSUADS
         MVC   0(SYSUADSL,R4),SYSUADS1
         MVC   DDNAM(8,R4),DDNAME
         MVI   OPEN,X'80'
         OPEN  ((R4),INPUT),MF=(E,OPEN)
         OI    STATUS,STATOPEN
         LH    R0,BLKSI(,R4)       GET UADS BLOCKSIZE
         ST    R0,INUSIZ
*        MH    R0,=H'3'            TIMES 3
         ST    R0,INULEN           SAVE IT
         GETMAIN R,LV=(0)
         ST    R1,INUPTR
         OI    STATUS,STATGM
         MVC   UADDECBW(UADDECBL),UADDECB
         SPACE
         LA    R4,USERID
         B     *+8
NEXTUSER L     R4,8(,R4)
         ST    R4,USERPTR
         MVC   MEMBER,=CL8' '
         L     R14,0(,R4)
         LH    R1,4(,R4)
         BCTR  R1,0
         B     *+10
         MVC   MEMBER(0),0(R14)
         EX    R1,*-6
         STH   R1,MEMBERL
         CLC   MEMBER,=CL8'* '
         BNE   NOTSELF
         L     R2,CPPLPTR
         L     R14,CPPLPSCB
         IC    R1,7(,R14)          PSCBUSRL
         LTR   R1,R1
         BZ    NOTFOUND
         BCTR  R1,0
         B     *+10
         MVC   MEMBER(0),0(R14)    PSCBUSER
         EX    R1,*-6
         STH   R1,MEMBERL
NOTSELF  EQU   *
         MVC   MEMBER0,MEMBER
         MVC   MEMBER1,MEMBER0
         MVC   MEMBER2,MEMBER0
         LA    R14,MEMBER0+1(R1)
         MVI   0(R14),C'0'         APPEND '0' TO USERID
         LA    R14,MEMBER1+1(R1)
         MVI   0(R14),C'1'         APPEND '1' TO USERID
         LA    R14,MEMBER2+1(R1)
         MVI   0(R14),C'2'         APPEND '2' TO USERID
         MVC   BLDL(4),=AL2(3,12)  3 ENTRIES, EACH 12 BYTES
         BLDL  SYSUADS,BLDL
         LTR   R15,R15             IS USERID IN UADS
         BZ    FOUND               YES, BRANCH
         CH    R15,=H'4'           WAS ERROR DUE TO MEMBER NOT FOUND
         BNE   BLDLERR             NO, I/O ERROR OR DCB ERROR
         CLI   MEMBER0+10,0        WAS MEMBER0 FOUND
         BE    NOTFOUND            NO, BRANCH
FOUND    EQU   *
         XC    PASSNUM,PASSNUM
         FIND  SYSUADS,MEMBER0+8,C
         L     R4,INUPTR
         XC    UADDECBW(4),UADDECBW CLEAR ECB
         READ  UADDECBW,SF,SYSUADS,(R4),'S',MF=E
         CHECK UADDECBW
         SPACE
         USING DHED,R4
         MVC   LINE,LINE-1         BLANK THE LINE
         MVC   LINE+1(8),=C'USERID -'
         MVC   LINE+10(8),UADSUSER
         LA    R1,LINE+10+7
ZEROLOOP CLI   0(R1),C'0'
         BE    *+8
         BCT   R1,ZEROLOOP
         MVI   0(R1),C' '
         MVC   LINE+19(16),USERATTR
         LA    R1,LINE+37
         TM    UADSATTR,X'80'
         BNO   NOOPER
OPER     MVC   0(4,R1),=C'OPER'
         LA    R1,5(,R1)
         B     OPERX
NOOPER   MVC   0(6,R1),=C'NOOPER'
         LA    R1,7(,R1)
OPERX    EQU   *
         TM    UADSATTR,X'40'
         BNO   NOACCT
ACCT     MVC   0(4,R1),=C'ACCT'
         LA    R1,5(,R1)
         B     ACCTX
NOACCT   MVC   0(6,R1),=C'NOACCT'
         LA    R1,7(,R1)
ACCTX    EQU   *
         TM    UADSATTR,X'20'
         BNO   NOJCL
JCL      MVC   0(3,R1),=C'JCL'
         LA    R1,4(,R1)
         B     JCLX
NOJCL    MVC   0(5,R1),=C'NOJCL'
         LA    R1,6(,R1)
JCLX     EQU   *
         TM    UADSATTR,X'10'
         BNO   NOMOUNT
MOUNT    MVC   0(5,R1),=C'MOUNT'
         LA    R1,6(,R1)
         B     MOUNTX
NOMOUNT  MVC   0(7,R1),=C'NOMOUNT'
         LA    R1,8(,R1)
MOUNTX   EQU   *
         TM    UADSATTR,X'04'
         BNO   NORECOV
RECOV    MVC   0(7,R1),=C'RECOVER'
         LA    R1,8(,R1)
         B     RECOVX
NORECOV  MVC   0(9,R1),=C'NORECOVER'
         LA    R1,10(,R1)
RECOVX   EQU   *
         $TPUT LINE+1,120
         SPACE
         MVC   LINE,LINE-1
         MVC   LINE+19(L'INST),INST
         LA    R15,LINE+19+L'INST+1
         UNPK  0(5,R15),UADSINST(3)
         TR    0(4,R15),HEXTAB-240
         MVI   4(R15),C' '
         $TPUT LINE+1,120
         SPACE
         MVC   LINE,LINE-1
         MVC   LINE+19(L'MAXS),MAXS
         LA    R15,LINE+19+L'MAXS
         LH    R0,UADSMAXC
         CVD   R0,DOUBLE
         MVC   0(6,R15),=X'402020202120'
         ED    0(6,R15),DOUBLE+5
         MVI   6(R15),C'K'
         $TPUT LINE+1,120
         SPACE
         MVC   LINE,LINE-1
         MVC   LINE+19(L'UPTA),UPTA
         $TPUT LINE+1,120
         MVC   LINE,LINE-1
         L     R1,UADSUPTP         GET OFFSET TO UPT
         LA    R1,UADSMHDR(R1)     POINT TO UPT
         UNPK  LINE+19+00(9),0(5,R1)
         UNPK  LINE+19+08(9),4(5,R1)
         UNPK  LINE+19+16(9),8(5,R1)
         UNPK  LINE+19+24(9),12(5,R1)
         MVI   LINE+19+32,C' '
         TR    LINE+19(32),HEXTAB-240
         SR    R14,R14
         IC    R14,23(,R1)         UPTPREFL
         LTR   R14,R14             IS PREFIX LENGTH ZERO
         BZ    NOPREF              YES, BRANCH
         BCTR  R1,0
         B     *+10
         MVC   LINE+19+33(0),16(R1) MOVE UPTPREFX
         EX    R14,*-6
NOPREF   EQU   *
         $TPUT LINE+1,120
         L     R5,UADSPWD1
         LA    R5,UADSMHDR(R5)
         SPACE
*              - -   P A S S W O R D   L E V E L   - -   R5
         SPACE
         USING DPOB,R5
NEWPASS  MVC   LINE,LINE-1         BLANK THE LINE
         MVC   LINE+4(8),=C'PASSWORD'
         L     R6,UADSPDAT
         LTR   R6,R6               PASSWORD PRESENT?
         BNZ   PASSGO              YES - BRANCH
         MVC   LINE+13(3),=C'(*)'
         B     PASSPR
PASSGO   LA    R6,UADSMHDR(R6)
         USING DPOBD,R6
         MVC   PASSDUM,=CL8'*****'
*        CLI   PASSKW+1,3          PASSWORD REQUESTED
*        BE    PASSSHOW            YES, SHOW IT
         CLI   PASSKW+1,2          PASSNUM (SHOW RELATIVE PASSWORD)
         BNE   PASSXXX             NO, GO SHOW ASTERISKS
         LH    R1,PASSNUM
         LA    R1,1(,R1)           COUNT PASSWORDS FOR THIS USERID
         STH   R1,PASSNUM
         CVD   R1,DOUBLE
         OI    DOUBLE+7,X'0F'
         MVC   PASSDUM,=CL8' '
         UNPK  PASSDUM+0(5),DOUBLE+5(3)
PASSXXX  MVC   UADSPPWD,PASSDUM
PASSSHOW MVC   LINE+13(8),UADSPPWD
PASSPR   EQU   *
         $TPUT LINE+1,120
         DROP  R6
         L     R6,UADSPSUB
         LA    R6,UADSMHDR(R6)
         SPACE
*              - -   A C C O U N T   L E V E L   - -   R6
         SPACE
         USING DNOB,R6
NEWACCT  MVC   LINE,LINE-1         BLANK THE LINE
         MVC   LINE+7(7),=C'ACCOUNT'
         L     R7,UADSADAT
         LTR   R7,R7               ACCOUNT PRESENT?
         BNZ   ACCTGO              YES - BRANCH
ACCTSTAR MVC   LINE+15(3),=C'(*)'
         B     ACCTPR
ACCTGO   LA    R7,UADSMHDR(R7)
         USING DNOBD,R7
         SR    R2,R2
         IC    R2,UADSALEN
         LTR   R2,R2               LENGTH ZERO?
         BZ    ACCTSTAR            YES - BRANCH
         BCTR  R2,0
         CLI   UADSALEN,40
         BNH   *+8
         LA    R2,40-1
         LA    R1,LINE+15
         B     *+10
         MVC   0(0,R1),UADSANUM
         EX    R2,*-6              PRINT UP TO 40 DIGITS OF ACCOUNT
ACCTPR   EQU   *
         $TPUT LINE+1,120
         DROP  R7
         L     R7,UADSASUB
         LA    R7,UADSMHDR(R7)
         SPACE
*              - -   P R O C N A M E   L E V E L   - -   R7
         SPACE
         USING DROB,R7
NEWPROC  MVC   LINE,LINE-1         BLANK THE LINE
         MVC   LINE+10(4),=C'PROC'
         L     R8,UADSRDAT
         LA    R8,UADSMHDR(R8)
         USING DROBD,R8
         MVC   LINE+15(8),UADSRNAM
         MVC   LINE+25(11),=C'SIZE=NNNNNK'
         LH    R0,UADSRSIZ
         CVD   R0,DOUBLE
         MVC   LINE+29(6),=X'402020202120'
         ED    LINE+29(6),DOUBLE+5
         MVI   LINE+29,C'='
         MVC   LINE+38(10),=C'UNIT NAME:'
         MVC   LINE+49(8),UADSUNAM
         $TPUT LINE+1,120
         SPACE
*              - -   S T A R T   B A C K I N G   U P   -
         SPACE
         TM    UADSRFLG,X'80'      ANY MORE PROCNAMES?
         BO    UPTOACCT            NO - GO UP 1 LEVEL
         L     R7,UADSRNEX-1
         LA    R7,0(R7)
         LTR   R7,R7
         LA    R7,UADSMHDR(R7)
         BNZ   NEWPROC
UPTOACCT TM    UADSAFLG,X'80'      ANY MORE ACCOUNT NUMBERS?
         BO    UPTOPASS            NO - GO UP 1 LEVEL
         L     R6,UADSANEX-1
         LA    R6,0(R6)
         LTR   R6,R6
         LA    R6,UADSMHDR(R6)
         BNZ   NEWACCT
UPTOPASS TM    UADSPFLG,X'80'      ANY MORE PASSWORDS?
         BO    UPTOUSER            NO - FINISHED THIS USERID
         L     R5,UADSPNEX-1
         LA    R5,0(R5)
         LTR   R5,R5
         LA    R5,UADSMHDR(R5)
         BNZ   NEWPASS
UPTOUSER B     ENDUSER
         SPACE
NOTFOUND EQU   *
         $TPUT MSG2,L'MSG2
         MVI   RC+1,12
         B     ENDUSER
BLDLERR  $TPUT MSG3,L'MSG3
         MVI   RC+1,12
         B     ENDUSER
UADEOD   $TPUT MSG4,L'MSG4
         MVI   RC+1,12
         B     ENDUSER
         SPACE
ENDUSER  L     R4,USERPTR
         CLI   8(R4),X'FF'         WAS THAT THE LAST USERID
         BNE   NEXTUSER            NO, BRANCH
         B     EXIT
         SPACE
PARSERR  $TPUT MSG1,L'MSG1
         MVI   RC+1,12
         B     EXIT
         SPACE
DDERR    $TPUT MSG0,L'MSG0
         MVI   RC+1,12
         B     EXIT
         SPACE
EXIT     EQU   *
         TM    STATUS,STATGM
         BZ    EXITNOFM
         L     R1,INUPTR
         L     R0,INULEN
         FREEMAIN R,A=(1),LV=(0)
EXITNOFM EQU   *
         TM    STATUS,STATOPEN
         BZ    EXITNOCL
         MVI   CLOSE,X'80'
         CLOSE ((R4)),MF=(E,CLOSE)
EXITNOCL EQU   *
         SPACE
         LH    R15,RC
         LR    R1,R13
         L     R0,@SIZE
         L     13,4(13)
         LR    R2,R15
         FREEMAIN R,LV=(0),A=(1)
         LR    R15,R2
         LM    0,12,20(R13)
         L     R14,12(,R13)
         BR    R14
         SPACE
***********************************************************************
*                                                                     *
*         CONSTANTS                                                   *
*                                                                     *
***********************************************************************
         SPACE
MSG0     DC    C'SYSUADS DD NOT FOUND'
MSG1     DC    C'PARSE ERROR'
MSG2     DC    C'NOT FOUND'
MSG3     DC    C'BLDL ERROR'
MSG4     DC    C'UNEXPECTED EOF'
         PRINT NOGEN
SYSUADS1 DCB   DDNAME=SYSUADS,DSORG=PO,MACRF=R,EODAD=UADEOD
SYSUADSL EQU   *-SYSUADS1
         PRINT GEN
         READ  UADDECB,SF,0,0,'S',MF=L
UADDECBL EQU   *-UADDECB
         SPACE
SPACES   DC    CL40' '
         DC    CL30' '
HEXTAB   DC    C'0123456789ABCDEF'
USERATTR DC    CL16'USER ATTRIBUTES:'
INST     DC    C'INSTALLATION ATTRIBUTES, IN HEX:'
MAXS     DC    C'MAXSIZE:'
UPTA     DC    C'USER PROFILE TABLE:'
         USING DNOBD,R7
ACCTMOVE MVC   LINE+9(1),UADSANUM
         LTORG
         SPACE
***********************************************************************
*                                                                     *
*         PARSE PCL                                                   *
*                                                                     *
***********************************************************************
         SPACE
         PRINT NOGEN
UADSPCL  IKJPARM
USERID   IKJIDENT 'USERID',LIST,ASTERISK,                              +
               FIRST=ALPHA,OTHER=ALPHANUM,MAXLNTH=7,                   +
               DEFAULT='*'
PASSKW   IKJKEYWD
         IKJNAME 'SUPPRESS'
         IKJNAME 'NUMBER'
         IKJNAME 'PASSWORD'
         IKJENDP
         PRINT GEN
         SPACE
***********************************************************************
*                                                                     *
*         DSECTS                                                      *
*                                                                     *
***********************************************************************
         SPACE
@DATA    DSECT
         DS    18F
LINKAREA DS    2F
DOUBLE   DS    D
DDNAME   DS    CL8
DEVAREA  DS    2F
CPPLPTR  DS    F
MYPPL    DS    7F
MYANS    DS    F
MYECB    DS    F
MYIOPL   DS    4F                  USED BY PUTLINE ROUTINE
MYPTPB   DS    3F                  USED BY PUTLINE ROUTINE
MYPUTLEP DS    F                   USED BY PUTLINE ROUTINE
MYOLD    DS    2F                  USED BY PUTLINE ROUTINE
MYSEG1   DS    2H,CL256            USED BY PUTLINE ROUTINE
PUTSAVE  DS    4F                  USED BY PUTLINE ROUTINE
MYSTPB   DS    5F                  STACK PARAMETER BLOCK
INUPTR   DS    F
INULEN   DS    F
INUSIZ   DS    F
MEMBERL  DS    H
MEMBER   DS    CL8
STATUS   DS    X
STATOPEN EQU   X'40'
STATGM   EQU   X'20'
         DS    0F
BLDL     DS    2H
MEMBER0  DS    CL8,XL4
MEMBER1  DS    CL8,XL4
MEMBER2  DS    CL8,XL4
USERPTR  DS    F
RC       DS    H
PASSNUM  DS    H
PASSDUM  DS    CL8
OPEN     DS    0F
CLOSE    DS    F
SYSUADS  DS    0F,(SYSUADSL)X
UADDECBW DS    0F,(UADDECBL)X
LINEM1   DS    C LINE MINUS 1
LINE     DS    CL121
         DS    0D
@DATAL   EQU   *-@DATA
         SPACE
DDNAM    EQU   40
OFLGS    EQU   48
BLKSI    EQU   62
         SPACE
         IKJCPPL
         SPACE
         IKJIOPL
         SPACE
         IKJPPL
         SPACE
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         EJECT
         IKJEFUAD DSPL,ALL
         END
