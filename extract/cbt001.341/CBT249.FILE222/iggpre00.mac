***********************************************************************
         TITLE 'IGGPRE00 - PRE-ALLOCATION EXIT'
***********************************************************************
*                                                                     *
*                                                                     *
*    WRITTEN BY KAREN KAWABATA                                        *
*               FRANK JUZWIK                                          *
*                                                                     *
*              AMERICAN HOSPITAL SUPPLY CORPORATION                   *
*              INFORMATION SERVICES                                   *
*              1400 WAUKEGAN RD                                       *
*              MCGAW PARK, ILL 60085                                  *
*              (312) - 473-1400                                       *
*                                                                     *
* THIS PROGRAM HAS BEEN TESTED IN BOTH AN MVS SP1.3 AND MVS X/A 2.1   *
* ENVIORNMENT. NO WARRANTY IS MADE TO THE ACCURACY OF THIS PROGRAM    *
*                                                                     *
*    MODULE:   IGGPRE00                                               *
*                                                                     *
*    FUNCTION: ALLOCATE, SCRATCH, RENAME, EXTEND OR RELEASE DATA SETS *
*              UNDER THE FOLLOWING CONDITIONS:                        *
*                                                                     *
*              1) OPERATIONS, SYSTEMS SUPPORT AND COMMUNICATIONS      *
*                 CAN DO ANYTHING                                     *
*              2) ALL OTHER USERS MUST COMPLY AS FOLLOWS:             *
*                 A) ALLOCATION GUIDELINES                            *
*                    - NO RESTRICTIONS ON TEMPORARY OR VIO DATA SETS. *
*                    - SPF DATA SETS MUST USE VOLUMES: TESTXX         *
*                    - PRODUCTION JOBS CREATING VSAM DATA SETS MUST   *
*                      USE VOLUMES: MSCXXX OR VSMXXX                  *
*                    - PRODUCTION JOBS CREATING NON-VSAM DATA SETS    *
*                      MUST USE VOLUMES: MSCXXX AND STRGXX            *
*                    - TEST JOBS CREATING VSAM DATA SETS MUST USE     *
*                      VOLUME: VSMTXX  OR  TESTXX                     *
*                    - TEST JOBS CREATING NON-VSAM DATA SETS:         *
*                         IF THE DSN = XYY.ETC (X = USERCODE,         *
*                            YY = APPLICATION CODE) THEN              *
*                            VOLUME TESTDX WILL BE USED               *
*                         ELSE                                        *
*                            VOLUME TESTXX WILL BE USED               *
*                    - 'D' USERS MUST CREATE DSN'S WITH A 1ST CHAR.   *
*                      = 'D' OR 1ST THREE CHAR. = 'IMS'               *
*                    - FOR BOTH TEST AND PRODUCTION JOBS, THE DSN     *
*                      MUST MATCH THE USER PROJECT                    *
*                    - RLSE SHOULD BE SPECIFIED. IF IT IS NOT, AN     *
*                      ERROR MESSAGE IS WRITTEN                       *
*                    - ALLOCATION SHOULD BE BY CYL OR  < 30 TRACKS    *
*                      (UNLESS THE DATA SET IS SPF OUTLIST).          *
*                      AS PER RLSE, IF IT IS NOT, THEN AN ERROR MSG   *
*                      IS WRITTEN.  IF THIS IS THE ONLY VIOLATION,    *
*                      THEN THE DATA SET IS ALLOCATED                 *
*                 B) SCRATCH GUIDELINES                               *
*                    - NO RESTRICTIONS ON TEMPORARY DATA SETS.        *
*                      TEMPORARY DATA SETS ARE IDENTIFIED BY THE 1ST  *
*                      FOUR CHARACTERS OF THE DSN, 'SYS8'.  THE FIRST *
*                      8 CHARACTERS OF THE DSN ARE 'SYSYYDDD' (YYDDD  *
*                      =  THE YEAR AND JULIAN DAY).  OBVIOUSLY, IN    *
*                      1990, THE SCRATCH ROUTINE WILL NO LONGER       *
*                      WORK.                                          *
*                    - BOTH PROD AND TEST JOBS MAY SCRATCH ONLY DATA  *
*                      SETS OF THE SAME PROJECT (1ST THREE CHARACTERS *
*                      OF THE JOBNAME MATCH THE 1ST THREE CHARACTERS  *
*                      OF DSN)                                        *
*                    - 'D' USERS MAY SCRATCH ONLY DATA SETS OF THE    *
*                      SAME PROJECT (1ST CHARACTER = 'D' OR 1ST THREE *
*                      CHARACTERS = 'IMS')                            *
*                 C) RENAME GUIDELINES                                *
*                    - THE DATA SET TO BE RENAMED MUST BE OF THE      *
*                      SAME PROJECT                                   *
*                    - THE NEW DSN MUST MATCH THE USER PROJECT        *
*              3) NO RESTRICTIONS ON EXTEND                           *
*              4) NO RESTRICTIONS ON RELEASE                          *
*                                                                     *
*    INPUT:    FOR THE FORMAT OF THE INPUT PARAMETER LIST, SEE:       *
*                      DATA FACILITY/DEVICE SUPPORT                   *
*                      USER'S GUIDE AND REFERENCE                     *
*                      (SC26-3952-0)                                  *
*                      CHAPTER 6: EXIT ROUTINES                       *
*                                                                     *
*    OUTPUT:   IF ONE OF THE ABOVE RULES IS VIOLATED, AN ERROR        *
*              MESSAGE IS WRITTEN.  THE RETURN CODE IS SET AS         *
*              FOLLOWS:                                               *
*                 4 - INCORRECT DEVICE TYPE WAS REQUESTED             *
*                 8 - TEST PROGRAM ATTEMPTED TO ALLOCATE, SCRATCH     *
*                     OR RENAME A PRODUCTION DATA SET                 *
*                 0 - ALL OTHER CONDITIONS                            *
*                                                                     *
*              IF EVERYTHING IS KOSHER, THEN THE RETURN CODE IS 0.    *
*                                                                     *
*    REGISTERS:   R2  - PARAMETER LIST                                *
*                 R3  - CALLER'S TIOT                                 *
*                 R4  - CALLER'S JFCB                                 *
*                 R5  - CALLER'S UCB                                  *
*                 R6  - CALLER'S JOBNAME                              *
*                 R7  - NAME OF DATA SET TO BE ALLOCATED, SCRATCHED,  *
*                       ETC.                                          *
*                 R11 - ERROR CODE                                    *
*                                                                     *
*    EXTERNAL REFERENCES:  NONE                                       *
*                                                                     *
***********************************************************************
         SPACE
IGGPRE00 CSECT
         PRINT NOGEN
*        EQUATES
         SPACE 1
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         EJECT
         SAVE  (14,12)                   STORE ALL REGISTERS
         USING IGGPRE00,R12              SET UP ADDRESSABILITY
         LR    R12,R15
         LR    R2,R1                     SAVE POINTER TO PARMS
         USING PREPL,R2                  ADDRESS INPUT PARM LIST
         L     R5,IEXUCB                 GET ADDR OF UCB
         USING UCBOB,R5                  ADDRESS UCB
*                                        GET USER CLASS
         L     R3,16                     LA OF CVT
         L     R3,0(R3)                  LA OF TCB WORDS
         L     R3,4(R3)                  LA OF TCB
         L     R3,12(R3)                 LA OF TIOT
         USING TIOT1,R3                  ADDRESS TIOT
         CLC   TIOCNJOB(4),=C'INIT'      IF THE EXIT WAS ENTERED AT
         BE    STEPNAME                  STEP INIT/TERM, THE JOB NAME
*                                        FIELD OF THE TIOT = 'INIT'
*                                        AND THE STEP NAME FIELD HAS
*                                        THE JOB NAME; THEREFORE,
*                                           GO CHECK STEPNAME FIELD
         LA    R6,TIOCNJOB               ELSE SAVE ADDR OF JOB NAME
         B     FUNCTION                     CHECK OUT FUNCTION
STEPNAME EQU   *
         LA    R6,TIOCSTEP+8             GET ADDR OF JOB NAME
FUNCTION EQU   *
         CLI   IEXFUNC,IEXALL            IF ALLOCATE
         BE    ALLOCATE                     GO TO ALLOCATE ROUTINE
*                                        ELSE
         CLI   0(R6),C'S'                   IF CLASS 1 USER
         BE    ZERO#RC                      (1ST CHARACTER OF JOBNAME
         CLI   0(R6),C'R'                    = S OR R OR O OR C)
         BE    ZERO#RC                      THEN LET THESE PRIVILEGED
         CLI   0(R6),C'O'                   CHARACTERS DO ANYTHING BY
         BE    ZERO#RC                      SETTING THE RETURN CODE
         CLI   0(R6),C'C'                   TO ZERO
         BE    ZERO#RC
         CLC   0(3,R6),=CL3'HSM'
         BE    ZERO#RC
*                                        CHECK OUT NON CLASS 1 USERS
         CLI   IEXFUNC,IEXSCR            IF SCRATCH
         BE    SCRATCH                      GO TO SCRATCH ROUTINE
         CLI   IEXFUNC,IEXREN            ELSE IF RENAME
         BE    RENAME                       GO TO RENAME ROUTINE
         B     ZERO#RC                   ELSE SET RETURN CODE = 0
         TITLE 'IGGPRE00  -  ALLOCATE ROUTINE'
ALLOCATE EQU   *
         L     R4,IEXPTR1                GET ADDRESS OF JFCB
         USING INFMJFCB,R4               ESTABLISH ADDRESSABILITY
         TM    JFCBIND2,JFCTEMP          IF TEMPORARY DATA SET
         BO    ZERO#RC                      SET RETURN CODE = 0
         TM    IEXFLAG,IEXVIO            IF VIO DATA SET
         BO    CYLINDER                     CHECK FOR CYL ALLOCATION
*
         L     R7,IEXDSN                 GET ADDR OF DSN
         CLC   8(3,R7),=C'SPF'           IF
         BE    SPF                          SPF
         CLC   5(3,R7),=C'SPF'              DATA
         BNE   NOTSPF                       SET  THEN . . .
SPF      EQU   *
         CLC   UCBVOLI(4),=C'TEST'          IF VOLUME = TESTXX
         BE    ZERO#RC                          SET RETURN CODE = 0
         LA    R15,4                        ELSE
         B     EXIT                             SET RC = 4 AND EXIT
NOTSPF   EQU   *
         CLI   0(R6),C'S'                IF CLASS 1 USER
         BE    ZERO#RC                      (1ST CHARACTER OF JOBNAME
         CLI   0(R6),C'R'                    = S OR R OR O OR C)
         BE    ZERO#RC                      THEN LET THESE PRIVILEGED
         CLI   0(R6),C'O'                   CHARACTERS DO ANYTHING BY
         BE    ZERO#RC                      SETTING THE RETURN CODE
         CLI   0(R6),C'C'                   TO ZERO
         BE    ZERO#RC
         CLC   0(3,R6),=CL3'HSM'
         BE    ZERO#RC
*                                        CHECK OUT NON CLASS 1 USERS
         CLI   0(R6),C'D'                IF NOT 'D' USER
         BNE   NOT#D                        CHECK OUT OTHER USERS
*                                        ELSE
         CLI   0(R7),C'D'                   IF DSN BEGINS WITH 'D'
         BE    RLSE                            CHECK FOR RLSE
         CLC   0(3,R7),=C'IMS'              IF DSN BEGINS WITH 'IMS'
         BE    RLSE                            CHECK FOR RLSE
         B     ERR1                         ELSE GO TO ERROR #1 RTN
*
NOT#D    EQU   *
         CLC   0(3,R6),0(R7)             IF DSN IS RIGHT PROJECT
         BE    USER#ID                      CHECK IF PROD OR TEST JOB
         LA    R11,1                     ELSE SET ERROR CODE TO 1
         BAL   R10,ERROR                    AND SEND ERROR MESSAGE
USER#ID  EQU   *
         CLI   0(R6),C'P'                IF THIS IS NOT A PROD JOB THEN
         BNE   ALLTEST                      GO TO CHECK TEST JOB CODE
*                                        ELSE
*                                           CHECK OUT PRODUCTION D.S.
*
         TM    JFCDSRG2,JFCORGAM         IF THIS IS NOT A VSAM DS. THEN
         BZ    PRODVOL                      CHECK FOR VALID OS VOLS
*                                        ELSE
         CLC   UCBVOLI(3),=C'MSC'           IF THIS IS A MSCXXX VOL
         BE    CYLINDER                         CHECK FOR CYL ALLOCAT.
*                                           ELSE
         CLC   UCBVOLI(3),=C'VSM'               IF A VSAMXX VOL
         BE    CYLINDER                            CHECK FOR CYL ALLO.
         LA    R11,2                            ELSE SET ERROR CODE = 2
         B     ERROR                               GO TO ERROR ROUTINE
PRODVOL  EQU   *
         CLC   UCBVOLI(3),=C'MSC'        IF THIS IS A MSCXXX VOL
         BE    RLSE                         CHECK FOR RLSE
         CLC   UCBVOLI(4),=C'STRG'       ELSE IF THIS IS STRGXX VOL
         BE    RLSE                         CHECK FOR RLSE
         LA    R15,4                        ELSE SET RETURN CODE = 4
         B     EXIT                            AND EXIT
*                                        CHECK OUT ALLOCATE REQUEST
*                                        BY TEST JOBS
ALLTEST  EQU   *
         TM    JFCDSRG2,JFCORGAM         IF THIS NOT A VSAM D.S. THEN
         BZ    TESTVOL                      CHECK FOR VALID OS VOL
         CLC   UCBVOLI(4),=C'VSMT'       ELSE IF A  VSAMTX VOL
         BE    CYLINDER                     CHECK FOR CYLINDER ALLO.
         CLC   UCBVOLI(4),=C'TEST'          IF A TESTXX VOL
         BE    CYLINDER                         CHECK FOR CYL ALLO.
*                                           ELSE
         LA    R11,3                            SET ERROR CODE = 3
         B     ERROR                            AND GO TO ERROR RTN
TESTVOL  EQU   *
         CLC   UCBVOLI(5),=C'TESTD'      IF VOL = TESTDX
         BE    TESTD                        CHECK PROJECT TYPE
*                                        ELSE
         CLC   UCBVOLI(4),=C'TEST'          IF THIS IS TESTXX VOL
         BE    RLSE                            CHECK FOR RLSE
         LA    R15,4                        ELSE SET RC = 4
         B     EXIT                            GET OUT
TESTD    EQU   *
         CLI   3(R7),C'.'                IF DSN = XYY.
*                                           X  = USER CODE
*                                           YY = APPLICATION CODE
*                                           THEN CHECK FOR VOLUME
         BE    RLSE                         CHECK FOR RLSE
         LA    R15,4                     ELSE SET RC = 4
         B     EXIT                         AND GET OUT
RLSE     EQU   *
         TM    JFCBIND1,JFCRLSE          IF RLSE WAS CODED
         BO    CYLINDER                     CHECK FOR CYLINDER ALLO.
         TM    JFCDSRG1,JFCORGPS         IF DSORG IS NOT PS THEN
         BZ    CYLINDER                     CHECK FOR CYL ALLOC.
         LA    R11,4                     ELSE SET ERROR CODE TO 4
         BAL   R10,ERROR                    GO TO ERROR  ROUTINE
CYLINDER EQU   *
         TM    JFCBCTRI,JFCBCYL          IF ALLOCATION IN CYLINDERS
         BO    ZERO#RC                      SET RC TO ZERO
         TM    JFCBCTRI,JFCBTRK          ELSE IF NOT TRACK ALLOCATION
         BZ    ERR5                         GO TO ERROR #5 ROUTINE
         CLC   JFCBPQTY(3),=XL3'1E'         ELSE IF < 30 TRACKS
         BL    ZERO#RC                          SET RC TO 0
*                                           ELSE DO ERROR #6 ROUTINE
ERR5     EQU   *
         LA    R11,5                     SET ERROR CODE = 5
         B     ERROR                     GO TO ERROR ROUTINE
ERR1     EQU   *
         LA    R11,1                     SET ERROR CODE = 1
         B     ERROR                     AND GO TO ERROR ROUTINE
         TITLE 'IGGPRE00  -  SCRATCH ROUTINE'
SCRATCH  EQU   *
         L     R7,IEXDSN                 GET ADDRESS OF DSN
         CLC   0(4,R7),=CL4'SYS8'        IF TEMPORARY DATA SET
*                                        (1ST FOUR CHAR = 'SYS8')
         BE    ZERO#RC                      SET RC = 0
         TM    IEXFLAG,IEXVIO            IF VIO DATA SET THEN
         BO    ZERO#RC                      SET RC = 0
*
         CLI   0(R6),C'D'                IF USER = 'D'
         BE    SCR#D                        CHECK D.S. TO BE SCRATCHED
*                                        ELSE
*
         CLC   0(3,R6),0(R7)             DOES PROJECT NAME MATCH?
*                                        (1ST 3 CHAR OF JOBNAME =
*                                         1ST 3 CHAR OF DSN)
         BE    ZERO#RC                   IF THE SAME THEN
*                                           SET RC = 0
*                                        ELSE
         B     ERR6                         GO TO ERROR #6 ROUTINE
*
SCR#D    EQU   *
         CLI   0(R7),C'D'                IF PROJECT NAME MATCH
         BE    ZERO#RC                      (1ST CHAR. OF DSN = D
         CLC   0(3,R7),=C'IMS'               OR 1ST THREE CHAR = IMS)
         BE    ZERO#RC                       SET RETURN CODE = 0
*                                        ELSE . . .
ERR6     EQU   *
         LA    R11,6                     SET ERROR CODE = 6
         B     ERROR                     GO TO ERROR ROUTINE
         TITLE 'IGGPRE00  -  RENAME ROUTINE'
RENAME   EQU   *
         L     R10,IEXPTR1              GET ADDR OF RENAME PARMLIST
         USING RENDSECT,R10             ADDRESS PARM LIST
         L     R7,OLDNAME               GET ADDR OF DATA SET TO BE
*                                          RENAMED
         CLI   0(R6),C'D'               IF USER = D THEN
         BE    RENAME#D                    CHECK FOR VALID 'D' DATA
*                                          SETS
*                                       ELSE
         CLC   0(3,R6),0(R7)            CHECK FOR PROJECT MATCH
*                                          (1ST 3 CHAR OF JOBNAME =
*                                           1ST 3 CHAR OF DSN)
         BNE   ERR7                     IF MISMATCH
*                                          GO TO ERROR #7 ROUTINE
         L     R7,NEWNAME               GET ADDR OF NEW NAME
         CLC   0(3,R6),0(R7)            CHECK FOR PROJECT MATCH
         BE    ZERO#RC                  IF MATCH
*                                          SET RC = 0
         B     ERR7                     ELSE GO TO ERROR #7 ROUTINE
*
RENAME#D EQU   *
         CLI   0(R7),C'D'               IF DATA SET TO BE RENAMED
         BE    NEW#DSN                     MATCHES PROJECT (1ST CHAR.
         CLC   0(3,R7),=C'IMS'             = D OR 1ST THREE CHAR. =
         BNE   ERR7                        IMS THEN CHECK NEW DSN
*
NEW#DSN  EQU   *
         L     R7,NEWNAME               GET ADDR OF NEW NAME
         CLI   0(R7),C'D'               IF NEW DSN MATCHES PROJECT THEN
         BE    ZERO#RC                     SET RETURN CODE = 0
         CLC   0(3,R7),=C'IMS'
         BE    ZERO#RC                  ELSE . . .
*
ERR7     EQU   *
         LA    R11,7                    SET ERROR CODE TO 7
         L     R7,OLDNAME
         B     ERROR                    GO TO ERROR ROUTINE
         TITLE 'IGGPRE00  -  ERROR ROUTINE'
ERROR    EQU   *
         GETMAIN R,LV=200               GET SAVE AREA
*                                       18 WORDS FOR REGISTER SAVE
*                                       26 WORDS FOR WTO PARM LIST
         ST    R13,4(R1)                STORE CALLER'S SAVE AREA ADDR
         ST    R1,8(R13)                STORE OUR SAVE AREA ADDR
         LR    R13,R1                   OUR SAVE AREA ADDR
         LA    R8,72(R13)               POINT TO WORK AREA
         MVC   0(LENGTH,R8),LINE1       MOVE LIST FORM OF WTO TO WORK
*                                       AREA, AND OVERLAY THIS LIST
*                                       FORM WITH THE APPROPRIATE MSG
         USING WTODSECT,R8
         LA    R9,MSG1                  POINT TO 1ST MSG
         LR    R3,R11                   REG 3 HAS ERROR CODE
         BCTR  R3,R0                    SUBTRACT 1
         M     R2,=F'96'                MULTIPLY BY LENGTH OF ERR MSG
         AR    R9,R3                    POINT TO APPROPRIATE TEXT
         MVC   WTOTEXT(96),0(R9)        MOVE APPROPRIATE TEXT
         LA    R9,WTOTEXT               POINT TO TEXT, NEXT WE WILL
*                                       OVERLAY WITH JOBNAME/DSN
         C     R11,=F'2'                IF ERROR CODE IS
         BL    DOFORMA                     1 - USE FORMAT A
         C     R11,=F'5'                   2 - 5, USE FORMAT B
         BNH   DOFORMB                     ELSE   USE FORMAT C
*
DOFORMC  EQU   *
         USING FORMC,R9                 ADDRESS TEXT AREA
         MVC   JOBC(8),0(R6)            MOVE JOB NAME
         MVC   DSNC(44),0(R7)           MOVE DSN
         B     SENDMSG                  EXECUTE WTO
*
DOFORMA  EQU   *
         USING FORMA,R9                 ADDRESS TEXT AREA
         MVC   JOBA(8),0(R6)            MOVE JOB NAME
         MVC   DSNA(44),0(R7)           MOVE DSN
         B     SENDMSG                  EXECUTE WTO
*
DOFORMB  EQU   *
         USING FORMB,R9                 ADDRESS TEXT AREA
         TM    JFCBIND2,JFCTEMP         IF TEMPORARY DATA SET
         BNO   MOVE#DSN
*                                           SET DSN='TEMPORARY DATASET'
         MVC   DSNB(44),=CL44'TEMPORARY DATASET'
         B     SENDMSG                      AND SEND MESSAGE
*                                       ELSE
MOVE#DSN EQU   *
         MVC   DSNB(44),0(R7)               COPY DSN FROM PARM LIST
         B     SENDMSG                      AND SEND MESSAGE
*
SENDMSG  EQU   *
         WTO   MF=(E,(R8))              SEND 1ST MESSAGE LINE
         C     R11,=F'5'                IF ERROR IS: NOT CYL ALLOC.
         BE    NO2WTO                      NO SECOND MESSAGE
         WTO   MF=(E,LINE2)             SEND 2ND MESSAGE LINE
NO2WTO   EQU   *
         LR    R1,R13                   LOAD GETMAINED ADDRESS
         L     R13,4(R13)               POINT TO CALLER'S SAVE AREA
         FREEMAIN R,LV=200,A=(1)        FREE GETMAINED STORAGE
         C     R11,=F'5'                IF ERROR IS: NOT CYL ALLOC.
         BE    ZERO#RC                     RETURN 00
         C     R11,=F'1'                IF ERROR CODE = 1
         BER   R10                         RETURN TO ALLOCATE RTN
         C     R11,=F'4'                IF ERROR CODE = 4
         BER   R10                         RETURN TO ALLOCATE RTN
         CLI   0(R6),C'P'               IF PROD JOB THEN
         BE    ZERO#RC                     SET RETURN CODE = 0
         CLI   0(R7),C'T'               IF TEST JOB AND  TEST D.S.
         BE    ZERO#RC                     SET RETURN CODE = 0
         LA    R15,8                    ELSE SET RC = 8
         B     EXIT
         TITLE 'IGGPRE00  -  RETURN'
ZERO#RC  EQU   *
         SR    R15,R15                  IF NO RULES BROKEN, SET RC = 0
EXIT     EQU   *
         RETURN (14,12),RC=(15)         GO BACK
         LTORG
         TITLE 'IGGPRE00  -  WTO PARM LIST AND ERROR MESSAGES'
*
*        THE 1ST MESSAGE LINE HAS A TEXT LENGTH OF 96 CHARACTERS
*
LINE1    WTO  '1-------10--------20--------30--------40--------50------X
               --60--------70--------80--------90----96',ROUTCDE=(11), X
               MF=L
LENGTH   EQU   *-LINE1                       LENGTH OF WTO MSG
         SPACE 3
LINE2    WTO   'ISCPA00I  SECURITY VIOLATION',ROUTCDE=(11),MF=L
         SPACE 3
*        ERROR MESSAGES
*
MSG1     DC    CL96' '
         ORG   MSG1
         DC    CL14'ISCPA01I  JOB='
         DS    CL8                           JOB NAME FOR MSG1
         DC    CL30' ALLOCATE WRONG PROJECT DSN='
         DS    CL44                          DSN FOR MSG1
         ORG
         SPACE 1
MSG2     DC    CL96' '
         ORG   MSG2
         DC    CL49'ISCPA02I  NOT VSAM VOLUME  FOR  PROD VSAM DSN='
         DS    CL44                          DSN FOR MSG2
         ORG
         SPACE 1
MSG3     DC    CL96' '
         ORG   MSG3
         DC    CL49'ISCPA03I  NOT VSAM VOLUME  FOR  TEST VSAM DSN='
         DS    CL44                          DSN FOR MSG3
         ORG
         SPACE 1
MSG4     DC    CL96' '
         ORG   MSG4
         DC    CL49'ISCPA04I  RELEASE  NOT  SPECIFIED  FOR DSN='
         DS    CL44                          DSN FOR MSG4
         ORG
         SPACE 1
MSG5     DC    CL96' '
         ORG   MSG5
         DC    CL49'ISCPA05I  CYL ALLOCATION NOT SPECIFIED FOR DSN='
         DS    CL44                          DSN FOR MSG5
         ORG
         SPACE 1
MSG6     DC    CL96' '
         ORG   MSG6
         DC    CL14'ISCPA06I  JOB='
         DS    CL8                           JOB NAME FOR MSG6
         DC    CL27' SCRATCH WRONG PROJECT DSN='
         DS    CL44                          DSN FOR MSG6
         ORG
         SPACE 1
MSG7     DC    CL96' '
         ORG   MSG7
         DC    CL14'ISCPA07I  JOB='
         DS    CL8                           JOB NAME FOR MSG7
         DC    CL27'  RENAME WRONG PROJECT DSN='
         DS    CL44                          DSN NAME FOR MSG7
         ORG
         TITLE 'IGGPRE00  -  DSECTS'
WTODSECT DSECT
         DS    AL2,BL2                  WTO CONTROL FIELDS
WTOTEXT  DS    CL96
         SPACE 3
FORMA    DSECT                          DSECT FOR MESSAGE 1
         DS    CL14
JOBA     DS    CL8
         DS    CL30
DSNA     DS    CL44
         SPACE 3
FORMB    DSECT                          DSECT FOR MESSAGES 2, 3, 4 OR 5
         DS    CL49
DSNB     DS    CL44
         SPACE 3
FORMC    DSECT                          DSECT FOR MESSAGES 6 OR 7
         DS    CL14
JOBC     DS    CL8
         DS    CL27
DSNC     DS    CL44
         SPACE 3
JFCB     DSECT                          JFCB DSECT MACRO GENERAGES A
*                                       LABEL OF INFMJFCB
         IEFJFCBN
         SPACE 3
*        UCB DSECT                      UCB DSECT MACRO GENERATES A
*                                       LABEL OF UCBOB
         IEFUCBOB LIST=YES,PREFIX=YES
         SPACE 3
*        INPUT PARAMETER LIST DSECT     PARM LIST DSECT GENERATES A
*                                       LABEL OF PREPL
         IECIEXPL
         SPACE 3
RENDSECT DSECT                          RENAME PARAMETER LIST
         DS    0H
         DS    F
OLDNAME  DS    F                        ADDR OF DATA SET TO BE RENAMED
NEWNAME  DS    F                        ADDR OF NEW DATA SET NAME
         SPACE 3
TIOT     DSECT                          TIOT DSECT MACRO GENERAGES A
*                                       LABEL OF TIOT1
         IEFTIOT1
         END   IGGPRE00
