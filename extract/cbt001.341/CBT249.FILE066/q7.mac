         PRINT NOGEN
FORMAT   QSTART 'Q7 - QUEUE COMMAND - JQE AND JOE FORMAT ROUTINES'
         USING QDISPLAY,R10   BASE REG FOR DISPLAY WORK AREA
         L     R10,QVDSPL     LOAD BASE REG
         USING JQEDSECT,R9    BASE REG FOR JQE DSECT
         USING JOEDSECT,R8    BASE REG FOR JOE DSECT
         USING WORK,R13       BASE FOR LOCAL WORK AREA
***********************************************************************
*                                                                     *
*   INPUT TO THIS MODULE -                                            *
*     R1 = 0 INDICATES PRINT JQE                                      *
*     R1 = 4 INDICATES PRINT JOE                                      *
*     R9 CONTAINS JQE ADDRESS                                         *
*     R8 CONTAINS JOE ADDRESS                                         *
*                                                                     *
***********************************************************************
*                                                                     *
*   BRANCH TO PROPER ROUTINE                                          *
*                                                                     *
***********************************************************************
         ST    R1,JTYPE       SAVE JOE/JQE FLAG                     PWF
         STM   R8,R9,AJOEJQE  SAVE A(JOE AND JQE)                   PWF
         MVC   FCLEAR,=CL80' ' CLEAR THE PRINT AREA
         MVC   FQUEUE,QCLASS  CLASS NAME
         MVC   QDHLINE,HEADING REPORT HEADING
         CLI   QSUBNAME,C'X'  IS THE REQUEST FOR A HEX DUMP?
         BE    NOTBUSY        YES. SKIP.
         TM    JQEFLAGS,QUEBUSY IS THE JOB EXECUTING?
         BZ    NOTBUSY        NO. SKIP THIS ROUTINE.
         IC    R15,JQEFLAGS   GET SYSTEM NUMBER
         N     R15,=F'7'      ZERO OUT UNWANTED BITS
         SLL   R15,3          MULTIPLY BY 8
         LA    R15,QSYSID(R15) OBTAIN SYSTEM ID
         MVC   FSYSID,0(R15)  MOVE SYSTEM ID TO DISPLAY
NOTBUSY  CLI   QCLASS,0       IS THIS THE TSO QUEUE?
         BE    LISTTSO        YES. DO IT.
         CLI   QCLASS,4       IS THIS THE STC QUEUE?
         BE    LISTSTC        YES. DO IT.
         CLI   QCLASS,8       IS THIS THE HELD OUTPUT QUEUE?
         BE    LISTHO         YES. DO IT.
         CLI   QCLASS,9       IS THIS THE AWAITING OUT QUEUE?       BFG
         BE    LISTAW         YES. DO IT.                           BFG
         LTR   R1,R1          IS REQUEST FOR JQE OR JOE?
         BZ    LISTJQE        JQE.
***********************************************************************
*                                                                     *
*   FORMAT JOE                                                        *
*                                                                     *
***********************************************************************
LISTJOE  MVC   FQNAME,=C'OUTPUT' MOVE IN NAME OF QUEUE
         CLI   QSUBNAME,C'X'  IS THE REQUEST FOR A HEX DUMP?
         BE    HEXO           YES. DO IT.
         L     R0,JOERECCT    NUMBER OF PRINT LINES
         CVD   R0,CONVERT     CONVERT TO DECIMAL
         MVC   FLINES,ED8     PREPARE FOR EDIT
         ED    FLINES,CONVERT+4 EDIT NUMBER OF LINES
         TM    JOEFLAG,$JOEBUSY  ?/JOB ACTIVE
         BZ    LOCAL          NO. SKIP.
         LA    R3,JOEDEVID    A(OUTPUT DEVICE DESCRIPTOR            FCI
         BAL   R7,SETDEVIC    SET THE OUTPUT DEVICE                 FCI
         TM    JOEFLAG,X'80'  IS THE CKPT VALID
         BNO   LIST           NO. SKIP
         LH    R8,JOECKPT     OFFSET TO CHECKPOINT JOE
         SLA   R8,2           MULTIPLY BY 4
         BZ    LIST           CHECKPOINT DOES NOT EXIST. SKIP.
         USING QCKPT,R1       BASE REG FOR CKPT WORK AREA
         L     R1,QVCKPT      LOAD BASE REG
         A     R8,QCJOTA      ADD BASE TO OFFSET
         DROP  R1
         S     R0,JOETLNC     SUBTRACT RECORDS PRINTED FROM TOTAL
         CVD   R0,CONVERT     CONVERT TO DECIMAL
         MVC   FLINES,ED8     PREPARE FOR EDIT
         ED    FLINES,CONVERT+4 PRINT UPDATED LINE COUNT
         B     LIST           FORMAT REST OF LINE
LOCAL    LA    R15,FREMOTE    ADDRESS TO PUT TEXT
         LA    R1,JOEROUT     POINT TO ROUTING INFO                FCI*
***********************************************************************
* GETDEST SUBROUTINE - THIS ROUTINE WILL SUBSTITUTE THE DESTINATION PWF
* SPECIFIED BY THE USER FOR THE RMT OR USER ROUTE                   PWF
***********************************************************************
GETDEST  CLI   1(R1),0        LOCAL ROUTE
         BE    LIST           YES. BRANCH                           PWF
         L     R7,16          A(CVT)                                PWF
         USING CVTDSECT,R7                                          PWF
         L     R7,CVTJESCT    A(JESCT)                              PWF
         DROP  R7                                                   PWF
         USING JESCT,R7                                             PWF
         L     R7,JESSSCT     A(SSCT)                               PWF
         DROP  R7                                                   PWF
         USING SSCT,R7                                              PWF
         L     R7,SSCTSSVT    A(SSVT)                               PWF
         DROP  R7                                                   PWF
         USING SSVT,R7                                              PWF
         LM    R14,R15,$SVRDT    A(REMOTE DESTINATION TABLE)        PWF
         USING RDTDSECT,R14                                         PWF
         MVI   DESTTYPE,X'40' INDICATE REMOTE TYPE                  PWF
         CLI   0(R1),0        ?/USER ROUTE                          PWF
         BNE   DESTTEST       NO. BRANCH                            PWF
         MVI   DESTTYPE,X'20' YES. INDICATE USER TYPE               PWF
DESTTEST CLC   RDTFLAG,DESTTYPE ?/DEST TYPE MATCH                   PWF
         BNE   BADDEST        NO. GET NEXT ENTRY                    PWF
         CLC   RDTRMTNO,1(R1) ?/ROUTE MATCH                         PWF
         BNE   BADDEST        NO. GET NEXT ENTRY                    PWF
         MVC   FREMOTE(8),RDTNAME  MOVE DESTINATION                 PWF
         B     LIST                                                 PWF
BADDEST  LA    R14,11(R14)    ADDRESS OF NEXT ENTRY                 PWF
         CR    R14,R15        ?/END OF TABLE                        PWF
         BNH   DESTTEST       NO. GO EXAMINE THIS ENTRY             PWF
         LA    R15,FREMOTE    RESTORE R15                           PWF
***********************************************************************
*RMTORLCL SUBROUTINE - DETERMINE REMOTE OR LOCAL DESTINATION       FCI*
* R1 POINTS TO PRTRT/PUNRT, R15 TO ASSEMBLY POINTER                FCI*
***********************************************************************
RMTORLCL CLI   1(R1),0        IS IT FOR REMOTE 00=LOCAL            FCI*
         BE    LIST           NO LUCK .. HAVE TO WORK FOR IT       FCI*
         MVC   0(L'RMT,R15),RMT       MOVE IN 'RMT'                FCI*
         CLI   0(R1),0        IS IT FOR USER ROUTE                 PWF
         BNE   RMT000         NO. REMOTE ROUTE                     PWF
         MVC   0(L'USR,R15),USR       MOVE IN 'USR'                PWF
RMT000   LA    R15,L'RMT(R15)  BUMP POINTER                    PWF FCI*
         SR    R14,R14        LOAD RMT FLAGS                       FCI*
         IC    R14,1(R1)      FROM PRT/PUN                         FCI*
         CVD   R14,DOUBLEWD   RMT NUMBER TO DECIMAL                FCI*
         B     FITINUM1       FIT THE NUMBER IN RMT MESSAGE        FCI*
         SPACE 2
***********************************************************************
* FITINUM SUBROUTINE - CONVERT BIN NUMBER TO NICE FORMAT           FCI*
*                                                                  FCI*
***********************************************************************
FITINUM  CVD   R1,DOUBLEWD    CONVERT TO PACKED DECIMAL            FCI*
FITINUM1 MVC   NUMBER(L'NORMAL),NORMAL INITIALIZE THE EDIT FORMAT  FCI*
         LA    R1,NUMBER+SIGNORM IN CASE OF ZEROES                 FCI*
         EDMK  NUMBER(L'NORMAL),DOUBLEWD+2 CONVERT TO EBCDIC       FCI*
         LA    R14,NUMBER+L'NORMAL-1 A(END OF CONVERTED NUMBER)    FCI*
         SLR   R14,R1         LENGTH OF THE CONVERTED NUMBER - 1   FCI*
         EX    R14,MVNUMBER   PUT THE NUMBER IN THE MSG            FCI*
         LA    R15,1(R14,R15) A(NEXT SPOT IN MSG)                  FCI*
         B     LIST           RETURN TO OUR CALLER                 FCI*
         SPACE 3                                                   FCI*
MVNUMBER MVC   0(0,R15),0(R1) TO BE EXECUTED                       FCI*
         SPACE 2                                                   FCI*
NORMAL   DC    X'402020202020202020202120' EDIT MASK               FCI*
SIGNORM  EQU   11             OFFSET TO LAST DIGIT                 FCI*
RMT      DC    C'RMT'                                              FCI*
USR      DC    C'USR'                                              PWF
***********************************************************************
*                                                                     *
*   FORMAT JQE                                                        *
*                                                                     *
***********************************************************************
LISTTSO  MVC   FQNAME(8),=C'TSO USER' NAME OF QUEUE
         B     LIST           CONTINUE
LISTSTC  MVC   FQNAME(8),=C'SYSTEM Q' NAME OF QUEUE
         B     LIST           CONTINUE
LISTHO   MVC   FQNAME(8),=C'HELD OUT' NAME OF QUEUE
         B     LIST           CONTINUE
LISTAW   MVC   FQNAME(8),=C'AWAITING' NAME OF QUEUE                 BFG
         B     LIST           CONTINUE                              BFG
LISTJQE  MVC   FQNAME,=C' INPUT' NAME OF QUEUE
LIST     CLI   QSUBNAME,C'X'  IS THE REQUEST FOR A HEX DUMP?
         BE    HEX            YES. DO IT.
         MVC   FCOUNT,ED5     PREPARE FOR EDIT
         ED    FCOUNT,QCOUNT  EDIT THE POSITION IN QUEUE
         MVC   FNAME,JQEJNAME MOVE IN JOBNAME
         MVC   FJOBNO,ED5     PREPARE FOR EDIT
         LH    R0,JQEJOBNO    LOAD HASP JOBNUMBER
         CVD   R0,CONVERT     CONVERT TO DECIMAL
         ED    FJOBNO,CONVERT+5 EDIT HASP JOBNUMBER
         SR    R0,R0          ZERO OUT REGISTER
         IC    R0,JQEPRIO     LOAD JQE PRIORITY
         SRL   R0,4           DIVIDE BY 16
         CVD   R0,CONVERT     CONVERT TO DECIMAL
         MVC   FPRIO,ED3      PREPARE FOR EDIT
         ED    FPRIO,CONVERT+6 EDIT JQE PRIORITY
         TM    JQEFLAGS,X'E0' IS THE JOB HELD?
         BZ    NOHOLD         NO.
         MVC   FHOLD,=C'HELD' INDICATE JOB HELD
NOHOLD   DS    0H
         CLC   JQEJNAME,=CL8'SYSLOG' ?/SYSLOG JOE                   PWF
         BNE   NOHOLD1        NO. BYPASS SYSLOG PROCESSING          PWF
         LM    R8,R9,AJOEJQE  R8 - A(JOE)  R9 - A(JQE)              PWF
         CLC   JTYPE,=F'0'    ?/JOE OR JQE BEING PROCESSED          PWF
         BE    SLOGJQE        JQE. GO PROCESS                       PWF
SLOGJOE  MVC   QCTRAK,JOEIOTTR TRACK ADDR OF SPIN IOT               PWF
         L     R1,QCIOTA      IOAREA FOR SPIN IOT                   PWF
         LR    R3,R1          A(IOAREA)                             PWF
         L     R15,=V(READSPC)                                      PWF
         BALR  R14,R15        GO TO ROUTINE                         PWF
         A     R3,QCPDDB1     A(FIRST PDDB)                         PWF
         USING PDBDSECT,R3    PDDB ADDRESSABILITY                   PWF
         MVC   QCTRAK,PDBMTTR TRACK DS BUFFER                       PWF
         LR    R3,R1          A(DS BUFFER)                          PWF
         B     SLOGCMN        BRANCH TO COMMON PROCESSING           PWF
SLOGJQE  MVC   QCTRAK,JQETRAK A(JCT MTTR)                           PWF
         L     R3,QCJCTA      A(IOAREA)                             PWF
         LR    R1,R3          A(DS BUFFER)                          PWF
         L     R15,=V(READSPC)                                      PWF
         BALR  R14,R15                                              PWF
         USING JCTDSECT,R3    JCT ADDRESSABILITY                    PWF
         MVC   QPDSID,JCTPDDBK ID OF CURRENT PDDB                   PWF
         MVC   QCODEH(2),=H'3' TELL LISTDS CALLER IS FORMAT         PWF
         MVC   QCTRAK,JCTIOT  A(IOT)                                PWF
         L     R1,QCIOTA      IOT IOAREA                            PWF
         LR    R3,R1          A(DS BUFFER)                          PWF
         L     R15,=V(READSPC)                                      PWF
         BALR  R14,R15        GO TO ROUTINE                         PWF
         L     R15,=V(LISTDS)                                      PWF
         BALR  R14,R15        GO TO ROUTINE                         PWF
         XC    QCODEH(2),QCODEH RESET THE CODE                      PWF
SLOGCMN  L     R15,=V(READSPC)                                      PWF
         BALR  R14,R15        GO TO ROUTINE                         PWF
         LA    R3,10(R3)      BYPASS RECORD HEADER                  PWF
NEXTREC  CLI   0(R3),X'FF'    IS LENGTH BYTE FF?                    PWF
         BE    NOHOLD1        YES. END SEARCH                       PWF
         TM    1(R3),X'10'    IS THIS A SPAN RECORD                 PWF
         BO    SPAN           YES. SKIP IT                          PWF
         SR    R4,R4          ZERO OUT REG                          PWF
         IC    R4,0(R3)       INSERT LENGTH                         PWF
         LR    R5,R4          SAVE RECORD LENGTH                    PWF
         LR    R2,R3          SAVE RECORD LOCATION                  PWF
         TM    1(R3),X'80'    IS CARRIAGE CONTROL SPECIFIED         PWF
         BZ    NOCCTL         NO. CONTINUE                          PWF
         LA    R2,1(R2)       SKIP OVER CC                          PWF
NOCCTL   TM    1(R3),X'08'    IS THIS RECORD TO BE IGNORED          PWF
         LR    R3,R2          UPDATE RECORD POINTER                 PWF
         BNZ   SKIPREC        YES. SKIP IT.                         PWF
         CLI   10(R3),C'.'    IS THIS THE TIME STAMP                PWF
         BNE   SKIPREC        NO. GET NEXT RECORD                   PWF
         CLI   13(R3),C'.'    YES. BUT ARE YOU SURE                 PWF
         BNE   SKIPREC        NO. GET NEXT RECORD                   PWF
         CLC   8(8,R3),=C'00.00.00' IS THIS A DUMMY TIME STAMP      PWF
         BE    SKIPREC        YES. GET NEXT RECORD                  PWF
         MVC   FREMOTE,8(R3)  SAVE TIME STAMP IN DISPLAY            PWF
         B     NOHOLD1        CONTINUE WITH NORMAL PROCESSING       PWF
SKIPREC  LA    R3,3(R4,R3)    INCREMENT TO NEXT RECORD              PWF
         B     NEXTREC                                              PWF
SPAN     LH    R4,2(R3)       LENGTH OF SEGMENT                     PWF
         TM    1(R3),X'08'    IS THIS THE FIRST SEGMENT             PWF
         BO    SPANFRST       YES. USE HEADER LENGTH OF 6           PWF
         LA    R3,4(R4,R3)    UPDATE RECORD POSITION                PWF
         B     NEXTREC        PROCESS NEXT RECORD                   PWF
SPANFRST LA    R3,6(R4,R3)    UPDATE RECORD POSITION                PWF
         B     NEXTREC        PROCESS NEXT RECORD                   PWF
NOHOLD1  LA    R1,QDMSG       ADDR OF MESSAGE AREA
         ST    R1,QDMSGA      STORE MESSAGE ADDR
         MVC   QDMLNG,=H'80'  LENGTH OF DISPLAY LINE
         L     R15,=V(DISPLAY) ADDR OF DISPLAY MODULE
         BALR  R14,R15        DISPLAY THE LINE
STOP     QSTOP
***********************************************************************
*                                                                     *
*   TAKE HEX DUMP OF JOE                                              *
*                                                                     *
***********************************************************************
HEXO     UNPK  FHEX1,0(8,R8)  UNPK FIRST PART OF JOE INTO HEX
         UNPK  FHEX2,7(8,R8)  SECOND
         UNPK  FHEX3,14(8,R8) THIRD
         UNPK  FHEX4,21(8,R8) FOURTH
         UNPK  FHEX5,28(5,R8) FIFTH
         MVI   FHEXOC,C' '    CLEAR LAST BYTE
         TR    FHEXO,TABLE    CHANGE TO PRINTABLE HEX
         LA    R1,QDMSG       ADDR OF MESSAGE AREA
         ST    R1,QDMSGA      STORE MESSAGE ADDR
         MVC   QDMLNG,=H'80'  LENGTH OF DISPLAY LINE
         L     R15,=V(DISPLAY) ADDR OF DISPLAY MODULE
         BALR  R14,R15        DISPLAY THE LINE
***********************************************************************
*                                                                     *
*   TAKE HEX DUMP OF JQE                                              *
*                                                                     *
***********************************************************************
HEX      UNPK  FHEX1,0(8,R9)  UNPK FIRST PART OF JOE INTO HEX
         UNPK  FHEX2,7(8,R9)  SECOND
         UNPK  FHEX3,14(8,R9) THIRD
         UNPK  FHEX4,21(8,R9) FOURTH
         MVC   FHEXC,QBLANK   CLEAR LAST BYTES
         TR    FHEX,TABLE     CHANGE TO PRINTABLE HEX
         B     NOHOLD         CALL DISPLAY
***********************************************************************
* SETDEVIC SUBROUTINE - GET DEVICE DATA (R3) POINTS TO DEVID       FCI*
*                                                                  FCI*
***********************************************************************
SETDEVIC ST    R7,SETDHOLD       SAVE LINK ADDRESS                 FCI*
         MVC   FPRINT(9),=CL9' '
         TM    0(R3),XWTRID   IS THIS AN XWTR
         BNO   NOTXWTR        NO. CONTINUE CHECKING
         MVC   FPRINT(4),=C'XWTR' YES.
         B     SETDRTN
NOTXWTR  TM    0(R3),HIGHBIT REMOTE DEVICE?                        FCI*
         BO    RMTDEV         YES => OUTPUT IT                     FCI*
         SR    R1,R1          FOR THE INSERT CHARACTER             FCI*
         IC    R1,0(R3)         DEVICE TYPE                        FCI*
         SRL   R1,4           RIGHT JUSTIFIED                      FCI*
         MH    R1,DEVTYPEL    TYPE * LENGTH OF A DEVICE ENTRY      FCI*
         LA    R1,DEVTABLE(R1) A(DEVICE TYPE)                      FCI*
         MVC   FPRINT,1(R1)   PUT IN THE DEVICE TYPE
         CLI   0(R3),0          INTERNAL READER?                   FCI*
         BE    SETDRTN        YES => GIVE THE USER THE INFO        FCI*
         SR    R15,R15        FOR THE INSERT CHARACTER             FCI*
         IC    R15,1(R3)        DEVICE NUMBER                      FCI*
         CVD   R15,DOUBLEWD   IN PACKED DECIMAL                    FCI*
         IC    R15,0(R1)      OFFSET TO WHERE THE DEV # GOES       FCI*
         LA    R15,FPRINT(R15) A(WHERE THE DEV # GOES)
         MVC   1(L'DIGITS3,R15),DIGITS3 SET UP THE EDIT OF 3 DIGITSKMT*
         EDMK  0(L'DIGITS3+1,R15),DOUBLEWD+6 DEV # IN EBCDIC       FCI*
         MVC   0(L'DIGITS3+1,R15),0(R1) ADJUST FOR BLANKS          FCI*
*                                                                  FCI*
         B     SETDRTN        GO EXIT
*                                                                  FCI*
RMTDEV   SR    R0,R0          FOR THE INSERT CHARACTER             FCI*
         IC    R0,1(R3)         REMOTE NUMBER                      FCI*
         CVD   R0,DOUBLEWD    IN PACKED DECIMAL                    FCI*
         MVI   FPRINT,C'R'    INDICATE A REMOTE DEVICE             FCI*
         MVC   FPRINT+2(L'THREEPT),THREEPT SET UP THE EDIT MASK    FCI*
         EDMK  FPRINT+1(L'THREEPT),DOUBLEWD+6 CONVERT TO EBCDIC    FCI*
         MVC   FPRINT+1(L'THREEPT),0(R1) ADJUST FOR BLANKS         FCI*
         LA    R1,FPRINT+1    A(SPOT JUST BEFORE POSSIBLE SEP)     FCI*
FINDPT   LA    R1,1(R1)       A(NEXT BYTE)                         FCI*
         CLI   0(R1),C'.'     FOUND THE SEPARATOR?                 FCI*
         BNE   FINDPT         NO => KEEP LOOKING                   FCI*
         SR    R15,R15        FOR THE INSERT CHARACTER             FCI*
         IC    R15,0(R3)        DEVICE TYPE INDICATOR              FCI*
         SRL   R15,3          RIGHT JUSTIFIED                      FCI*
         LA    R15,RMTDEVS-HIGHBIT/8(R15) A(DEVICE TYPE)           FCI*
         MVC   1(2,R1),0(R15) PUT IN THE DEVICE TYPE               FCI*
         MVC   3(1,R1),0(R3) PUT IN THE DEVICE NUMBER              FCI*
         OI    3(R1),C'0'     MAKE THE DEVICE NUMBER PRINTABLE     FCI*
         B     SETDRTN
         EJECT ,                                                   FCI*
SETDRTN  L     R7,SETDHOLD    GET RETURN ADDRESS                   FCI*
         BR    R7             RETURN TO OUR CALLER                 FCI*
         SPACE 5                                                   FCI*
DIGITS3  DC    X'202020'                                           FCI*
THREEPT  DC    X'2020204B'                                         FCI*
         DS    0H                                                  FCI*
DEVTABLE DC    AL1(0),CL8'INTRDR',AL1(6),CL8'READER'               FCI*
         DC    AL1(7),CL8'PRINTER',AL1(5),CL8'PUNCH'               FCI*
DEVTYPEL DC    AL2((*-DEVTABLE)/4)                                 FCI*
RMTDEVS  DC    C'**',C'RD',C'PR',C'PU'                             FCI*
***********************************************************************
*                                                                     *
*   MISCELLANY                                                        *
*                                                                     *
***********************************************************************
         LTORG
ED8      DC    X'4020202020202120'
ED5      DC    X'402020202021'
ED3      DC    X'40202021'
HEADING  DC    C'  QUEUE  POSITION JOBNAME    JOB#  PRIORITY  LINES'
         DC    CL40'   EXECUTING     DESTINATION'
XWTRID   EQU   X'0F'
HIGHBIT  EQU   X'80'
TABLE    EQU   *-240
         DC    C'0123456789ABCDEF' TRANSLATE TO PRINTABLE HEX
WORK     DSECT
         DS    CL80
CONVERT  DS    D
SETDHOLD DS    F
DOUBLEWD DS    D
NUMBER   DS    CL16
JTYPE    DS    F                                                    PWF
AJOEJQE  DS    2F                                                   PWF
DESTTYPE DS    C
FORMAT   CSECT
JCT      EQU   0                                                    PWF
BUFSTART EQU   0                                                    PWF
BUFDSECT EQU   0                                                    PWF
         $JCT                                                       PWF
         $JQE
         $JOE
         $PDDB
         $RDT
         $CVT
         $JESCT
         $SSCT
         $SVT
         QCOMMON
         ORG   QDMSG
FCLEAR   DS    0CL80          FORMAT FOR QUEUE RECORDS
FQNAME   DS    CL6            NAME OF QUEUE
         DS    C
FQUEUE   DS    C              CLASS NAME
         DS    CL2
FCOUNT   DS    CL6            POSITION IN QUEUE
         DS    CL2
FNAME    DS    CL8            JOBNAME
         DS    CL2
FJOBNO   DS    CL6            JES2 JOB NUMBER
         DS    CL2
FPRIO    DS    CL4            JOB PRIORITY
         DS    CL2
FLINES   DS    CL8            NUMBER OF OUTPUT LINES
         DS    CL3
FSYSID   DS    CL8            SYSTEM ID
         DS    CL3
FHOLD    DS    CL4            JOB HOLD STATUS
         DS    CL1
FREMOTE  DS    CL8            REMOTE
         ORG   FSYSID
FPRINT   DS    CL8            PRINTING
         ORG   FCOUNT
FHEX     DS    0CL56          LENGTH OF JQE HEX DUMP
FHEXO    DS    0CL64          LENGTH OF JOE HEX DUMP
FHEX1    DS    0CL15
         DS    CL14
FHEX2    DS    0CL15
         DS    CL14
FHEX3    DS    0CL15
         DS    CL14
FHEX4    DS    0CL15
         DS    CL14
FHEXC    DS    0CL9           CLEAR LAST BYTES FOR JQE
FHEX5    DS    0CL9
         DS    CL8
FHEXOC   DS    C              CLEAR LAST BYTE FOR JOE
         END
