++USERMOD(PSLSTBLD) /*

PROBLEM DESCRIPTION:
    THE PSLSTBLD ROUTINE IN IEFAB436, A CSECT IN IEFW21SD WHICH
    BUILDS A LIST OF DEVICES TO SATISFY A NON-SPECIFIC ALLOCATION
    REQUEST, IS POORLY CODED AND CONSUMES EXCESSIVE CPU TIME.
    IT COMPARES THE ENTRIES IN A LIST OF ELIGIBLE DEVICES WITH THE
    ENTRIES IN A LIST OF PERMANENTLY RESIDENT OR RESERVED VOLUMES.
    VOLUMES FOUND IN BOTH LISTS ARE CHECKED FOR PUBLIC OR STORAGE.

FIX DESCRIPTION:
    THE PSLSTBLD ROUTINE IS RECODED, CHANGING THE LOOP STRUCTURE.
    ENTRIES IN THE ELIGIBLE DEVICE LIST ARE TESTED TO SEE IF THEY
    ARE SCRATCH PACKS BEFORE SCANNING THE PERMRES/RESERVED LIST
    FOR A MATCH.

MODULES/CSECTS MODIFIED:
    IEFW21SD (CSECT NAME=IEFAB436)

SOURCE:
    IN W015.GDS.MODSLIB   (CATALOGUED) AS MEMBER PSLSTBLD.

FIX APPLIED:
    AFTER PTF UZ22755 (PUT TAPE 7901)
    USING SMP 4

NOTES:
    THIS MOD WAS DEVELOPED BY DOUG TRUESDELL OF DEERE & COMPANY,
    AND UPDATED TO CURRENT PTF LEVEL BY CLAYTON WILKIE.
    TRUESDELL WILL GIVE A PRESENTATION ON THE MOD AT GUIDE.
                                                                   */ .
++ VER (Z038) FMID(EBB1102) .
++ ZAP (IEFAB436) .
 NAME  IEFAB436                              * IN MODULE IEFW21SD *
 VER 0CDA 90E1D00C,903CD020,5830A00C,5880B04C,58508000
 VER 0CEE 9180A014,4770CDF8,41700001,47F0CDF0,91803010
 VER 0D02 4770CDE8,D203B0C83008,41800001,47F0CDDC
 VER 0D14 5860B0C8,8B800002,5080B074,1E86,0680,0680
 VER 0D26 91808000,4780CD2A,5E60B074,0660,0660
 VER 0D36 91906000,47E0CDD4,5880B050,58808000,91018000
 VER 0D4A 47E0CDD4,947FB0D8,41400001,47F0CDB6,5880B0C8
 VER 0D5E 5860B0C4,8B600002,18F4,1EFF,5060B074,1E68
 VER 0D70 5E60CE78,50F0B078,1EF5,06F0,06F0,D5016000F000
 VER 0D84 4770CDB2,5E80B074,0680,0680,91088000,4770CDB2
 VER 0D98 9680B0D8,1885,5E80B078,0680,0680,1F66
 VER 0DA8 BF638000,5060B08C,1F88,43806022,1FFF
 VER 0DB8 43F0B0D4,148F,1288,4780CDB2,1882,8B800002
 VER 0DCA 58109000,50681000,5E20CE6C,5E40CE6C,1884
 VER 0DDC 1E88,1E85,0680,0680,1F66,BF638000,1266
 VER 0DEC 4780CDD4,9180B0D8,4780CD36,41800001,5E80B0C4
 VER 0E00 5080B0C4,59803004,47D0CCF0,58303000,5E70CE6C
 VER 0E14 5970A008,47D0CCDA,58809000,1832,0630
 VER 0E24 50308000,98E1D00C,983CD020,07FE
*                      */*********************************************/
*                      *PSLSTBLD: PROC;
 REP 0CDA 90E1D00C     PSLSTBLD STM   R14,R1,12(R13)
 REP 0CDE 903CD020              STM   R3,R12,32(R13)
*                      */* SET UP REGISTERS FOR LATER USE            */
*                      *  /* CLEAR WORK REGISTERS                    */
 REP 0CE2 1F66                  SLR   UCBPTR,UCBPTR
 REP 0CE4 1F44                  SLR   R4,R4
*                      *  /* ADDR OF PSLIST                          */
 REP 0CE6 58909000              L     R9,PSLISTP(,R9)
*                      *  /* LOAD UCBMASK INTO REGISTER              */
 REP 0CEA 1FFF                  SLR   R15,R15
 REP 0CEC 43F0B0D4              IC    R15,UCBMASK(,R11)
*                      *  /* LABELS FOR INNER LOOP                   */
 REP 0CF0 4170CD42              LA    R7,WORKUCB
 REP 0CF4 4180CD58              LA    R8,NEXTUCB
*                      */* END OF SETUP                              */
*                      */* THE FOLLOWING GENERATE NO ASSEMBLER CODE  */
*                      */*   BECAUSE ONE REGISTER (R4) HANDLES BOTH  */
*                      */*     BOTH LPSUCBPT AND UCBINDEX            */
*                      *LPSUCBPT = PSUCBPTR;
*                      * RFY PSUCBLST BASED (LPSUCBPT);
*                      */* THE FOLLOWING GENERATES CODE LATER BECAUSE*/
*                      */*   EDLGNTP STEALS R10 FROM EDLPTR          */
*                      *EDLGNTP = EDLGRPTR;
*                      *IF EINDEVTP = OFF THEN /* ELIGIBLE DEV TYPE? */
 REP 0CF8 9180A014              TM    EINDEVTP(EDLPTR),B'10000000'
 REP 0CFC 4770CD76              BNZ   DONE
*                      * DO EDLINDX1 = 1 TO EDLGRPNO;   /* YES, THEN */
*                      *                    /* PROCESS GROUPS IN EDL */
 REP 0D00 BF1FA008              ICM   R1,15,EDLGRPNO(EDLPTR)
 REP 0D04 47D0CD76              BNP   DONE
*                      */* DESTROY EDLPTR AND SET EDLGNTP            */
 REP 0D08 58A0A00C              L     EDLGNTP,EDLGRPTR(,EDLPTR)
 REP 0D0C 5010B074     WORKEDLG ST    R1,@TF00001(,R11)
*                      *  IF EDLJINEL = OFF THEN  /* GRP IS ELIGIBLE */
 REP 0D10 9180A010              TM    EDLJINEL(EDLGNTP),B'10000000'
 REP 0D14 4770CD6A              BNZ   NEXTEDLG
*                      *   DO;   /* LOOP OVER UCB LIST IN ELIG GROUP */
*                      *     EDLUCBLP = EDLLISTP; /* PTR TO UCB LIST */
*                      *                /* ACTUALLY PRIME REGISTER 5 */
*                      *                     /* FOR LOOP ON EDLINDEX */
*                      *     DO EDLINDEX = 1 TO EDLUCBNO;
 REP 0D18 BF1FA004              ICM   R1,15,EDLUCBNO(EDLGNTP)
 REP 0D1C 47D0CD6A              BNP   NEXTEDLG
 REP 0D20 5850A008              L     R5,EDLLISTP(,EDLGNTP)
*                      *      UCBPTR = EDLUCBAD(EDLINDEX);
 REP 0D24 BF635000     WORKEDLL ICM   UCBPTR,3,EDLUCBAD(R5)
*                      *      IF (UCBSTAB & UCBMASK) ^= ZERO THEN
 REP 0D28 43306022              IC    R3,UCBSTAB(,UCBPTR)
 REP 0D2C 143F                  NR    R3,R15           AND WITH UCBMASK
 REP 0D2E 4780CD62              BZ    NEXTEDLL
*                      *       DO;       /* CHECK DEVICE ELIGIBILITY */
*                      */* THE FOLLOWING STATEMENT GENERATES NO CODE */
*                      */*   BECAUSE THE VARIABLE UCBMATCH IS        */
*                      */*   REQUIRED ONLY FOR STRUCTURED PLS CODING.*/
*                      */*   ACTUALLY, ALL THAT IS REQUIRED IS TO */
*                      */*   EXIT FROM THE LOOP.                     */
*                      *         UCBMATCH = OFF;
*                      */*   FINISH CHECKING UCB FROM EDL.           */
*                      *         IF EDLALCD(EDLINDEX) = OFF ×
*                      *          (EDLALCD(EDLINDEX) = ON &
*                      *          EDLVOLAF(EDLINDEX) = ON &
*                      *          PARTALOC = ON) THEN
 REP 0D32 91805002              TM    EDLALCD(R5),B'10000000'
 REP 0D36 4780CD2E              BZ    HAVEELIG
*                      */* EXPLOIT EDLALCD AND EDLVOLAF IN SAME BYTE */
 REP 0D3A 91905002              TM    EDLALCD(R5),B'10010000'
 REP 0D3E 47E0CD62              BNO   NEXTEDLL
 REP 0D42 5830B050              L     R3,@PC00001+8(,R11)
 REP 0D46 58303000              L     R3,PSPARMP(,R3)
 REP 0D4A 91013000              TM    PARTALOC(R3),B'00000001'
 REP 0D4E 47E0CD62              BNO   NEXTEDLL
*                      *           IF EDLNOJES(EDLINDEX) = OFF THEN
 REP 0D52 91085002     HAVEELIG TM    EDLNOJES(R5),B'00001000'
 REP 0D56 4770CD62              BNZ   NEXTEDLL
*                      */*   ENTRY IN EDL IS OK.  IT CAN BE USED IF  */
*                      */*     WE FIND A MATCH IN PSUCBLST.          */
*                      *             DO UCBINDEX = 1 BY 1
*                      *               WHILE (PSUCBLST(UCBINDEX)
*                      *               ^= TABEND & UCBMATCH = OFF;
 REP 0D5A 5830B04C              L     R3,@PC00001+4(,R11) PSUCB LISTIS
 REP 0D5E 58303000              L     R3,PSUCBPTR(,R3)     PR/RSVD LIST
 REP 0D62 47F0CD5C              B     TESTUCB
*                      *                IF EDLUCBAD(EDLINDEX) =
*                      *                 PSUCBLST(UCBINDEX) THEN
*                      *                 DO;     /* SAVE UCB ADDRESS */
 REP 0D66 1946         WORKUCB  CR    R4,UCBPTR    MATCH UCB POINTERS
 REP 0D68 0778                  BNER  R8    IF NO MATCH GOTO NEXTUCB
*                      *                   PSLSTENT(PSLINDEX) =
*                      *                    PSUCBLST(UCBINDEX);
 REP 0D6A 1832                  LR    R3,R2
 REP 0D6C 8B300002              SLA   R3,2
 REP 0D70 50639000              ST    UCBPTR,PSLSTENT-4(R3,R9) IN PSLST
*                      *                   PSLINDEX = PSLINDEX + 1;
 REP 0D74 41220001              LA    R2,1(R2)        BUMP PSLIST INDEX
*                      *                   UCBMATCH = ON; /*EXIT LOOP*/
*                      *                 END;
*                      *                ELSE;
 REP 0D78 47F0CD62              B     NEXTEDLL
*                      *             END;
 REP 0D7C 41330002     NEXTUCB  LA    R3,2(R3)
 REP 0D80 BF433000     TESTUCB  ICM   R4,3,PSUCBLST(R3)  LOAD PSUCB PTR
 REP 0D84 0777                  BNZR  R7   IF NOT LIST END GOTO WORKUCB
*                      *           ELSE;
*                      *         ELSE;
*                      *       END;
*                      *      ELSE;
 REP 0D86 41550004     NEXTEDLL LA    R5,4(R5)    BUMP EDL LIST POINTER
*                      *     END;
 REP 0D8A 4610CD00     TESTEDLL BCT   R1,WORKEDLL
*                      *   END;
*                      *  ELSE;
*                      *  EDLGNTP = EDLNXGRP;      /* GET NEXT GROUP */
 REP 0D8E 58A0A000     NEXTEDLG L     EDLGNTP,EDLNXGRP(,EDLGNTP)
*                      * END;
 REP 0D92 5810B074              L     R1,@TF00001(,R11)
 REP 0D96 4610CCE8     TESTEDLG BCT   R1,WORKEDLG
*                      *ELSE;
*                      *PSLISTNO = PSLINDEX - 1;
 REP 0D9A 1832         DONE     LR    R3,R2
 REP 0D9C 0630                  BCTR  R3,0
 REP 0D9E 50309000              ST    R3,PSLISTNO(,R9)
 REP 0DA2 98E1D00C              LM    R14,R1,12(R13)
 REP 0DA6 983CD020              LM    R3,R12,32(R13)
 REP 0DAA 07FE                  BR    R14
*                      *END PSLSTBLD;
*                      */* FILL OUT REMAINDER OF OLD ROUTINE         */
*                      */*   AS A PATCH SPACE                        */
 REP 0DAC 0000,0000,0000,0000,0000,0000,0000,0000
 REP 0DBC 0000,0000,0000,0000,0000,0000,0000,0000
 REP 0DCC 0000,0000,0000,0000,0000,0000,0000,0000
 REP 0DDC 0000,0000,0000,0000,0000,0000,0000,0000
 REP 0DEC 0000,0000,0000,0000,0000,0000,0000,0000
 REP 0DFC 0000,0000,0000,0000,0000,0000,0000,0000
 REP 0E0C 0000,0000,0000,0000,0000,0000,0000,0000
 REP 0E1C 0000,0000,0000,0000,0000,0000,0000,0000
 REP 0E2C 0000,0000,0000
 IDRDATA MV79068
