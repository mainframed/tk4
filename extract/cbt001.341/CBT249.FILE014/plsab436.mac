*                      *PSLSTBLD: PROC;
*                      */* SET UP REGISTERS FOR LATER USE            */
*                      *  /* CLEAR WORK REGISTERS                    */
*                      *  /* ADDR OF PSLIST                          */
*                      *  /* LOAD UCBMASK INTO REGISTER              */
*                      *  /* LABELS FOR INNER LOOP                   */
*                      */* END OF SETUP                              */
*                      */* THE FOLLOWING GENERATE NO ASSEMBLER CODE  */
*                      */*   BECAUSE ONE REGISTER (R4) HANDLES BOTH  */
*                      */*     BOTH LPSUCBPT AND UCBINDEX            */
*                      *LPSUCBPT = PSUCBPTR;
*                      * RFY PSUCBLST BASED (LPSUCBPT);
*                      */* THE FOLLOWING GENERATES CODE LATER BECAUSE*/
*                      */*   EDLGNTP STEALS R10 FROM EDLPTR          */
*                      *EDLGNTP = EDLGRPTR;
*                      *IF EINDEVTP = OFF THEN /* ELIGIBLE DEV TYPE? */
*                      * DO EDLINDX1 = 1 TO EDLGRPNO;   /* YES, THEN */
*                      *                    /* PROCESS GROUPS IN EDL */
*                      */* DESTROY EDLPTR AND SET EDLGNTP            */
*                      *  IF EDLJINEL = OFF THEN  /* GRP IS ELIGIBLE */
*                      *   DO;   /* LOOP OVER UCB LIST IN ELIG GROUP */
*                      *     EDLUCBLP = EDLLISTP; /* PTR TO UCB LIST */
*                      *                /* ACTUALLY PRIME REGISTER 5 */
*                      *                     /* FOR LOOP ON EDLINDEX */
*                      *     DO EDLINDEX = 1 TO EDLUCBNO;
*                      *      UCBPTR = EDLUCBAD(EDLINDEX);
*                      *      IF (UCBSTAB & UCBMASK) ^= ZERO THEN
*                      *       DO;       /* CHECK DEVICE ELIGIBILITY */
*                      */* THE FOLLOWING STATEMENT GENERATES NO CODE */
*                      */*   BECAUSE THE VARIABLE UCBMATCH IS        */
*                      */*   REQUIRED ONLY FOR STRUCTURED PLS CODING.*/
*                      */*   ACTUALLY, ALL THAT IS REQUIRED IS TO */
*                      */*   EXIT FROM THE LOOP.                     */
*                      *         UCBMATCH = OFF;
*                      */*   FINISH CHECKING UCB FROM EDL.           */
*                      *         IF EDLALCD(EDLINDEX) = OFF ×
*                      *          (EDLALCD(EDLINDEX) = ON &
*                      *          EDLVOLAF(EDLINDEX) = ON &
*                      *          PARTALOC = ON) THEN
*                      */* EXPLOIT EDLALCD AND EDLVOLAF IN SAME BYTE */
*                      *           IF EDLNOJES(EDLINDEX) = OFF THEN
*                      */*   ENTRY IN EDL IS OK.  IT CAN BE USED IF  */
*                      */*     WE FIND A MATCH IN PSUCBLST.          */
*                      *             DO UCBINDEX = 1 BY 1
*                      *               WHILE (PSUCBLST(UCBINDEX)
*                      *               ^= TABEND & UCBMATCH = OFF;
*                      *                IF EDLUCBAD(EDLINDEX) =
*                      *                 PSUCBLST(UCBINDEX) THEN
*                      *                 DO;     /* SAVE UCB ADDRESS */
*                      *                   PSLSTENT(PSLINDEX) =
*                      *                    PSUCBLST(UCBINDEX);
*                      *                   PSLINDEX = PSLINDEX + 1;
*                      *                   UCBMATCH = ON; /*EXIT LOOP*/
*                      *                 END;
*                      *                ELSE;
*                      *             END;
*                      *           ELSE;
*                      *         ELSE;
*                      *       END;
*                      *      ELSE;
*                      *     END;
*                      *   END;
*                      *  ELSE;
*                      *  EDLGNTP = EDLNXGRP;      /* GET NEXT GROUP */
*                      * END;
*                      *ELSE;
*                      *PSLISTNO = PSLINDEX - 1;
*                      *END PSLSTBLD;
