*Process Inc, Source, Stmt, Gostmt, Langlvl(Sprog);
*Process Margins(2, 72);
*Process System(CMS);
 Verpcr:
    Procedure Options(Main Noexecops) Reorder;
    /* Verify the installation of the PCR package */

       %Include Pcrcbp;
       %Include Pcrevp;
       Dcl
          Parm                Char(300) Varying;
       call PCRGETC(PCRCB_ptr);
       parm = SUBSTR(PCRCB_arg_c256,1,PCRCB_arg_len);
       display(parm);

  /* If called as a Rexx Function or Subroutine, print parms */
       If Pcrcb_type = 'REXX' Then
          Do;
             Rxarg_ptr = Pcrcb_rx_arglist;
             Do K = 1 To Pcrcb_rx_argcnt;
              display ('Next Parm:');
              display (Substr(Rxarg_c256, 1, Rxarg_len));
                Rxarg_ptr = Rxarg_ptr + Storage(Rxarg_struct);
             End;
    /* Test memory allocation */
             Entryaddr(Pcrstor_obtain) = Pcrcb_stor_obtain;
             Entryaddr(Pcrstor_release) = Pcrcb_stor_release;
             Pcrcb_local_ptr = Pcrstor_obtain(100000);
             Display('PCRcb_local_pt value:' ××
                Binaryvalue(Pcrcb_local_ptr));
    /* Free it up now....*/
             Call Pcrstor_release(Pcrcb_local_ptr);
    /* Now return some data */
             Pcrev_ptr = Pcrcb_rx_ev_ptr;
    /* The PCREV starts out with 250 bytes of data space */
             Pcrev_data = 'Data returning from PCRTEST';
    /* need more space in eval_block */
             Pcrev_newbytes = 500;
             Entryaddr(Pcrgetev) = Pcrcb_rx_entry_eval;
             Call Pcrgetev;
             Pcrev_ptr = Pcrcb_rx_ev_ptr;
             Display('PCRev_ptr value:'×× Binaryvalue(Pcrev_ptr));
             Return;
          End;

  /* Now test the IMMED commands... */
       If Pcrcb_type = 'IMMC' Then
          Do;                      /* Invoked as an IMMEDIATE cmd */
             Display ('in immd code ');
             Return;
          End;
       If Pcrcb_type = 'SUBC' Then Do;
           Display('Subcommand:' ×× parm);
          Return;
          end;
       If Pcrcb_type = 'CMSC' Then Do;
              Display('CMS COMMAND STRING ' ×× Parm);
       End;

    End;
