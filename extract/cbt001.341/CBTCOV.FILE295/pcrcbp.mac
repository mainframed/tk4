 /* PLI/CMS/Rexx Control Block */
 Declare
   PCRCB_ptr              pointer,
   PCRCB_arg_c256         char(256) based(PCRCB_arg_ptr),
   PCRCB_arg_c32767       char(32767) based(PCRCB_arg_ptr),
   1 PCRCB_struct         based(PCRCB_ptr),
    2 PCRCB_reserved      pointer,
    2 PCRCB_global_ptr    pointer,  /* STATIC to ALL PLI programs */
    2 PCRCB_local_ptr     pointer,  /* STATIC for this PLI program */
    2 PCRCB_arg_ptr       pointer,  /* Points to Argstring */
    2 PCRCB_arg_len       fixed bin(31), /*len of Argstring */
    2 PCRCB_type          char(4),  /* IMMC, SUBC, CMSC, REXX */
    2 PCRCB_name          char(8),  /* Name of PCR entry */
    2 PCRCB_nucxname      char(8),  /* Nucname of PLI program */
    2 PCRCB_modname       char(8),  /* Module name of PLI program */
    2 PCRCB_loadlib       char(8),  /* Loadlib that PLI came from */
    2 PCRCB_iflag_t       bit(1),   /* PTS IMMED is active (PTE off) */
    2 PCRCB_iflag_hx      bit(1),   /* PHX IMMED is active */
    2 PCRCB_iflag_dummy   bit(6),   /* more bit in IFLAG   */
    2 PCRCB_OPT_endcmd    char(1),  /* Y/N ENDCMD  options specified */
    2 PCRCB_OPT_noload    char(1),  /* Y/N NOLOAD  options specified */
    2 PCRCB_loaded        char(1),  /* Y/N A PLI Module was loaded   */
    2 PCRCB_spec_type     char(1),  /* blank, or E for Endcmd */
    2 PCRCB_reserved2     char(2),
     /* The RX fields are used only if called as Rexx Fun or Sub */
    2 PCRCB_RX_type       char(1),  /* Fun or Sub */
    2 PCRCB_RX_arglist    pointer,  /* Pointer to arguments */
    2 PCRCB_RX_argcnt     fixed bin(31), /* Number of Arguments */
    2 PCRCB_RX_ev_ptr     pointer,  /* Pointer to PCREV */
    2 PCRCB_RX_entry_eval pointer,  /* routine to get more EV space */
    2 PCRCB_STOR_OBTAIN   pointer,  /* routine to get memory */
    2 PCRCB_STOR_RELEASE  pointer;  /* routine to free memory */

 /* For accessing Rexx Arguments */
 Declare
   RXARG_ptr          pointer,  /* PCRCB_RX_ARGLIST */
   RXARG_c1           char(1)     based(RXARG_addr),
   RXARG_c32767       char(32767) based(RXARG_addr),
   RXARG_c256         char(256)   based(RXARG_addr),
   1 RXARG_struct     based(RXARG_ptr),
    2 RXARG_addr      pointer,       /* Pointer to string */
    2 RXARG_len       fixed bin(31); /* Length of string */

 /* Befor calling routines within PCRCB, You must do the following */
 /*    ENTRYADDR(PCRGETEV)        = PCRCB_RX_entry_eval */
 /*    ENTRYADDR(PCRSTOR_OBTAIN)  = PCRCB_STOR_OBTAIN   */
 /*    ENTRYADDR(PCRSTOR_RELEASE) = PCRCB_STOR_RELEASE  */
 Declare
   PCRGETC            entry(*) options(INTER RETCODE ASSEMBLER),
   PCRGETEV           variable entry,
   PCRSTOR_OBTAIN     variable entry(fixed bin(31)) returns(pointer),
   PCRSTOR_RELEASE    variable entry(pointer);
