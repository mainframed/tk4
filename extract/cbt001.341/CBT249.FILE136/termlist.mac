*          DATA SET CBT1356    AT LEVEL 001 AS OF 07/28/82
***********************************************************************
*
*  TERMLIST (CBT1356,TERML) IS A COMMAND PROCESSOR:
*       -OUTPUTS THE SETTINGS OF THE TERMINAL COMMAND PROCESSOR
*       -WRITTEN AS RE-ENTRANT
*       -WITH NO INPUT PARMS
*       -PUTLINE PROCESSING OF TERMINAL OUTPUT
*
***********************************************************************
CBT1356  CSECT
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11                 BASE REG
R12      EQU   12                 2ND BASE REG IF REQUIRED
R13      EQU   13
R14      EQU   14
R15      EQU   15
CVTADR   EQU   16
PSAOLD   EQU   548
***********************************************************************
* INITIALIZATION SECTION
***********************************************************************
         USING *,R15
         BC    15,PROLOG
         DC    CL8'TERMLIST'      MODULE NAME
         DC    CL8'&SYSDATE'      DATE MODULE COMPILED
         DC    CL8'&SYSTIME'      TIME MODULE COMPILED
         DROP  15
PROLOG   EQU   *
         STM   R14,R12,12(R13)    SAVE REGS
         LR    R11,R15            SET UP BASE REG
         USING TERMLIST,R11
***********************************************************************
* THE FOLLOWING SHOULD BE SUBSTITUTED IF A DOUBLE BASE REG IS NEEDED
*        USING TERMLIST,R11,R12
*        LA    R12,4095(R11)      INIT 2ND BASE
*        LA    R12,1(R12)         MAKE IT EVEN 4096
***********************************************************************
         GETMAIN R,LV=LDYNAMIC    LEN OF DYNAMIC AREA
         LR    R10,R1
         ST    R13,4(R10)         SAVE HSA IN LSA
         ST    R10,8(R13)         SAVE LSA IN HSA
         L     R1,24(R13)         RESTORE REG ONE
         LR    R13,R10            SET UP NEW SAVE AREA
         USING DYNMAREA,R13
         MVI   MSGWORK,X'40'      CLEAR MSG BUFFER
         MVC   MSGWORK+1(120),MSGWORK
         EJECT
***********************************************************************
*  GET CMD BUFFER AND SET UP PARSE PARMATER LIST
***********************************************************************
         ST    R1,CPPLADDR        SAVE ADDR OF CPPL
         L     R5,CVTADR          CVT
         L     R5,0(R5)           TCBWORDS
         L     R5,4(R5)           CURRENT TCB
         USING TCB,R5
         L     R6,PSAOLD          ADDR OF CURR ASCB
         USING ASCB,R6
         L     R7,ASCBTSB         TSB ADDR
         LTR   R7,R7              TEST IF ADDR THERE
         BC    6,CONTERM          IF ZERO, BATCH EXEC
         MVC   MSGWORK,MSG01      BATCH EXECUTION
         BAL   R14,PUTLINE
         BC    15,RETURN
CONTERM  EQU   *
         USING TSB,R7
         SR    R1,R1
         SVC   254
         MODESET KEY=ZERO,MODE=SUP     KEY 0 SUPV STATE
CRTTERM  MVC   LINESIZ+1(1),TSBLNSZ
         MVC   FLAG3,TSBFLG3
         MVC   TERM1,TSBTERM1
         MVC   NBRLINES,TSBATNLC
         MVC   NBRSEC,TSBATNTC
         MVC   SCRNSZ+1(1),TSBLNNO
         MVC   CHARSTRG,TSBATNCC
         MVC   ERASCHAR,TSBERSDS
         MVC   TERMTYPE,TSBTERM2  TERMINAL TYPE
         SR    R1,R1
         MODESET KEY=NZERO,MODE=PROB
         LA    R1,4               PROB STATE
         SVC   254                GO TO SVC
         EJECT
*******************************************************
*    CODE TO FORMAT OUTPUT OF THE FIELDS FOUND
*******************************************************
CKLINES  CLC   NBRLINES,=X'0000'  NO OF LINES PRIOR TO ATTN
         BC    8,NOLINES          NO LINES FOUND
         LA    R8,NBRLINES
         LH    R9,0(R8)
         CVD   R9,PACKED
         MVC   HLDLNSZ,PATLSZ
         ED    HLDLNSZ,PACKED+6
         MVC   MSGOUT+1(6),=C'LINES('  MOVE IT TO OUTPUT
         MVC   MSGOUT+7(3),HLDLNSZ+1   MOVE OUT VALUE
         MVC   MSGOUT+10(1),=C')'
         BC    15,CKSEC           GO + CHECK SECONDS
NOLINES  MVC   MSGOUT+3(7),=C'NOLINES'
CKSEC    CLC   NBRSEC,=X'0000'    NO OF SEC PRIOR TO ATTN
         BC    8,NOSEC            NO SECS FOUND
         LA    R8,NBRSEC
         LH    R9,0(R8)
         CVD   R9,PACKED          BINARY TO PACKED DECIMAL
         MVC   HLDSEC,PATSEC      MOVE IN PATTERN
         ED    HLDSEC,PACKED+5    EDIT THE FIELD
         MVC   MSGOUT+14(8),=C'SECONDS('    MOVE IT TO OUTPUT
         MVC   MSGOUT+22(4),HLDSEC+2
         MVC   MSGOUT+26(1),=C')'
         BC    15,CKINPUT         GO + CHECK INPUT
NOSEC    MVC   MSGOUT+16(9),=C'NOSECONDS'
*********INPUT VALUES ARE FOR TTY TERMINALS NOT FOR 3270 CRTS
CKINPUT  CLC   CHARSTRG,=X'00000000'
         BC    8,NOINPUT          NO ATTN INPUT CHARS
         MVC   MSGOUT+30(6),=C'INPUT('
         MVC   MSGOUT+36(4),CHARSTRG
         MVC   MSGOUT+40(1),=C')'
         BC    15,CKBREAK         GO + CHECK INPUT
NOINPUT  MVC   MSGOUT+32(7),=C'NOINPUT'
*********BREAK VALUES ARE CURRENTLY ONLY FOR IBM 3767 AND IBM 3770
*********TERMINALS, SO THIS CODE IS CURRENTLY BEING SKIPPED OVER
CKBREAK  BC    15,MVLNSZ
         TM    FLAG3,X'02'        IS IT ON
         BC    1,NOBREAK          IT IS ON, SO NOBREAK
         MVC   MSGOUT+75(5),=C'BREAK'
         BC    15,MVLNSZ
NOBREAK  MVC   MSGOUT+74(7),=C'NOBREAK'
************EDIT LINESIZE - USED FOR BOTH TTY AND CRTS
MVLNSZ   LA    R8,LINESIZ
         LH    R9,0(R8)
         CVD   R9,PACKED
         MVC   HLDLNSZ,PATLSZ
         ED    HLDLNSZ,PACKED+6
************TEST IF TTY OR CRT TERMINAL + BRANCH ACCORDINGLY
CKTERMTP TM    TERMTYPE,X'20'     IS IT A TTY?
         BC    8,CRT              NO IT IS A CRT
         MVC   MSGOUT+44(9),=C'LINESIZE('
         MVC   MSGOUT+53(3),HLDLNSZ+1
         MVC   MSGOUT+56(1),=C')'
         BAL   R14,PUTLINE        PRINT OUT TTY LINE 1
         BC    15,RETURN
CRT      EQU   *
*********ONLY FOR CRTS
CKCLEAR  CLC   ERASCHAR,=X'00000000'   NOCLEAR?
         BC    8,NOCLEAR
         MVC   MSGOUT+44(6),=C'CLEAR('
         MVC   MSGOUT+50(4),ERASCHAR
         MVC   MSGOUT+54(1),=C')'
         BC    15,MVSCRSZE
NOCLEAR  MVC   MSGOUT+45(7),=C'NOCLEAR'
MVSCRSZE EQU   *
         MVC   MSGOUT+58(8),=C'SCRSIZE('
         MVC   MSGOUT+68(1),=C','
         MVC   MSGOUT+69(3),HLDLNSZ+1  LENGTH OF LINE
         LA    R8,SCRNSZ
         LH    R9,0(R8)
         CVD   R9,PACKED
         MVC   HLDSRSZ,PATSRSZ
         ED    HLDSRSZ,PACKED+6
         MVC   MSGOUT+66(2),HLDSRSZ+2
         MVC   MSGOUT+72(1),=C')'
         BAL   R14,PUTLINE        PRINT OUT CRT LINE 2
         BC    15,RETURN          EOJ
         EJECT
***********************************************************************
*  ALL MSGS WRITTEN TO THE TERMINAL IS DONE HERE VIA PUTLINE
***********************************************************************
PUTLINE  MVC   MSGCNTL,PUTCNTL    MOVE IN PUTLINE CONTROL CHARS
         STM   R0,R15,SAVEREGS    SAVE CALLER'S REGS
         LA    R5,MSGWORK        ADDR OF MSG BUFFER
         L     R2,CPPLADDR        ADDR OF CPPL
         USING CPPL,R2
         LA    R1,PUTLPARM        ADDR OF PLIST
         USING IOPL,R1
         MVC   IOPLECT,CPPLECT    MOVE ADDR OF ECT TO PLIST
         MVC   IOPLUPT,CPPLUPT    MOVE ADDR OF UPT TO PLIST
         LA    R0,ECB             ADDR OF ECB
         ST    R0,IOPLECB         STORE INTO PLIST
         XC    ECB,ECB            CLEAR ECB TO ZEROS
         XC    PTPB(16),PTPB      CLEAR PLIST TO ZEROS
         PUTLINE PARM=PTPB,ECB=ECB,                                    X
               TERMPUT=(EDIT,WAIT,NOHOLD,NOBREAK),                     X
               OUTPUT=((R5),TERM,SINGLE,DATA),                         X
               MF=(E,(1))
         MVI   MSGWORK,X'40'      CLEAR BUFFER TO SPACES
         MVC   MSGWORK+1(120),MSGWORK
         LM    R0,R15,SAVEREGS    RESTORE CALLER'S REGS
         BR    R14                RETURN TO CALLER
         EJECT
***********************************************************************
*  CLEAN UP AND RETURN TO THE TMP
***********************************************************************
RETURN   LR    R1,R13             DYNAMIC AREA ADDR
         LA    R0,LDYNAMIC        SIZE OF AREA
         L     R13,4(,R13)        PREV SAVE AREA
         LA    R1,0(,R1)          CLEAR HI ORDER      FREEMAIN
         SVC   10                 FREEMAIN
         LM    R14,R12,12(R13)    RESTORE REGS
         LA    R15,0              RETURN CODE
         MVI   12(R13),X'FF'      INDICATE RETURN
         BR    R14                GO BACK TO TMP
         EJECT
***********************************************************************
* CONSTANTS NOT REQUIRING A GETMAINED AREA
***********************************************************************
FZERO    DC    F'+0'
PATSEC   DC    X'402020202020'    FOR SECS
PATLSZ   DC    X'40202020'        FOR LINE LENGTH
PATSRSZ  DC    X'40202020'        FOR # LINES ON SCREEN
PUTCNTL  DC    H'121'             CONTROL CHARS FOR PUTLINE
         DC    H'0'
MSG01    DC    H'121'
         DC    H'0'
         DC    CL117'TERMLIST COMMAND NOT EXECUTABLE IN BATCH'
         EJECT
***********************************************************************
* WORKAREA FOR GETMAIN'D AREA FOR LITERALS BEING CHANGED
***********************************************************************
DYNMAREA DSECT
SAVEAREA DS    18F                SAVE AREA
SAVEREGS DS    16F
CPPLADDR DS    F                  CPPL ADDR FOR DSECT
*****THE FOLLOWING ARE FOR PARSE:
PARSLIST DS    7A                 FOR PPL DSECT
PECB     DS    F                  ECB FOR PPL
ANSWER   DS    F                  REPLY FROM PARSE IN PPL
*****THE FOLLOWING ARE FOR PUTLINE:
MSGWORK  DS    0CL121
MSGCNTL  DS    F                  CONTROL WORD FOR PUTLINE
MSGOUT   DS    CL120              FOR PUTLINE
PUTLPARM DS    10A
ECB      DS    F
PTPB     DS    4F
*****THE FOLLOWING ARE MISCELLANEOUS
         DS    0D
PACKED   DS    D
HLDSEC   DS    CL6
HLDLNSZ  DS    CL4
HLDSRSZ  DS    CL4
*****THE FOLLOWING ARE MOVED FROM THE TSB
LINESIZ  DS    2X
FLAG3    DS    X
TERM1    DS    X
NBRLINES DS    CL2
NBRSEC   DS    CL2
SCRNSZ   DS    CL2
CHARSTRG DS    CL4
ERASCHAR DS    F
TERMTYPE DS    X
         DS    0D
LDYNAMIC EQU   *-DYNMAREA         SIZE OF DYNAM AREA
         EJECT
***********************************************************************
*  MACROS - DSECTS - ETC
***********************************************************************
         IKJCPPL
         EJECT
         CVT
         EJECT
         IKJTCB
         EJECT
         IKJPPL
         EJECT
         IKJIOPL
         EJECT
         IKJTSB LIST=YES
         EJECT
         IHAASCB
         END   TERMLIST
