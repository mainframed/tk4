*          DATA SET CBT1338    AT LEVEL 001 AS OF 10/24/84
*          DATA SET CBT1338    AT LEVEL 001 AS OF 02/22/83
         TITLE 'DELALL(DESTROY)  - DOCUMENTATION'
*.....................................................................*
*.   DELALL (DESTROY) CBT1338                                        .*
*.                                                                   .*
*.   (CREATED FROM LISTVOL (CBT500) CODE                             .*
*.                                                                   .*
*.  DELALL/DESTROY    LEVEL('DSNAME')×DA('DSLIST')×VOL('SER')        .*
*.        (DESTROY LOGS OFF PROCESSING ID WHEN COMPLETE)             .*
*.        LINKAGE EDITOR CONTROL CARDS REQUIRED:                     .*
*.                INCLUDE DDNAME(LOCINDEX)         ***CBT502***      .*
*.                ALIAS DELALL                                       .*
*.                ALIAS DESTROY                                      .*
*.                NAME CBT1338(R)                                    .*
*.                                                                   .*
*.NOT USED: 'DSNAME' IS EITHER HIGHER LEVEL QUALIFIERS OF CATALOG    .*
*.                   STRUCTURE OR CONTAINS EMBEDDED ASTERISK AS      .*
*.                   PART OF THE NAME.                               .*
*.NOT USED: 'DSLIST' IS LIST OF DATASETS.                            .*
*.                                                                   .*
*.USABLE:   'SER'    IS LEADING CHARACTERS OF VOLUME SERIAL. ONLY    .*
*.                   DATASETS CATALOGED ON VOLUMES BEGINNING THUSLY  .*
*.                   WILL BE LISTED.                                 .*
*. THE LISTVOL (CBT500) CODE WAS BORROWED FROM THE LISTS COMMAND FROM.*
*.     SHARE, AND IS A VERY MUCH STRIPPED DOWN VERSION OF THAT CMD.  .*
*.     MOST WORK IS DONE IN SUBROUTINE LOCINDEX                      .*
*.     LEVEL CURRENT TO ALL TSO SUBJECT TO WHICH LOCINDEX YOU HAVE   .*
*.                                                                   .*
*.  6/15/82 - INITIAL RELEASE                                        .*
*.  6/23/82 - UPDATE TO CORRECT PROBLEM OF EXECUTING UNDER SPF OPT 6 .*
*.              THE FIRST UNALLOCATE IS DISP=(OLD,KEEP,KEEP) JUST TO .*
*.              VERIFY THAT THE SPFLOG1.LIST DATASET (WHICH IS OPENED.*
*.              DOES NOT GET DELETED.                                .*
*. 10/25/82 - STATE NATIONAL UPDATE FOR FAA, FAB
*. 11/29/82 - ADDED VOL-IDS: HAA, HAB, AND HAC (FOR HACDSX)          .*
*.  1/04/83 - CHANGED LOGIC TO DELETE ALL DATASETS STARTING WITH A TSO*
*.            ID (EXCEPT SYS1,SYS2,CBT,PROD,KAI,OCU), REGARDLESS OF   *
*.            WHAT VOLUME THE DATASET RESIDES ON. (THIS CODE IS NOW   *
*.            MORE COMPATABLE WITH CBT299).                           *
*. 10/04/84 - ADDED SUPPORT FOR MULTI-VOLUME DATASETS: THE FIRST DATA-*
*.            SET VOLUME IS USED TO UNCATLG + DELETE, THE REMAINING  .*
*.            VOLUMES ARE JUST DELETED. (MULTISW CONTROLS THIS)      .*
*. 10/22/84 - ADDED SUPPORT FOR MULTI-VOLUME TAPE DATASETS.          .*
*.....................................................................*
         TITLE 'DELALL (DESTROY) DELETE FROM DASD VOLS'
DELALL   START 0
         STM   R14,R12,12(R13)
         USING DELALL,R15
         ST    R13,SAVE+4
         LA    R13,SAVE
         B     BEGIN
SAVE     DC    18F'0'
         DROP  R15
         USING SAVE,R13
         TITLE 'DELALL(DESTROY)- GETMAIN AND PARSE'
BEGIN    LR    R4,R1
         USING CPPL,R4
         LA    R0,LWORK            GET LENGTH OF WORK AREA
         AH    R0,=H'4096'         GET EXTRA 4K FOR LOCINDEX WORK
         ICM   R0,B'1000',=FL1'1'  SUBPOOL 1
         GETMAIN R,LV=(0)
         LR    R12,R1               SAVE ADDR OF WORK AREA
         USING WORKAREA,R12
         ST    R4,CPPLADDR          SAVE THE CPPL AREA FOR BR GO LOGOFF
         LA    R0,LOCINDXW          POINT TO LOCINDEX WORK AREA
         ST    R0,PARM+12           SAVE ADDR IN PARM LIST
         MVI   PARM+12,X'80'        INDICATE END OF PARM LIST
         MVI   WXTNT+4,X'04'
         LA    R9,WPPL             GET ADDR OF PPL
         USING PPL,R9
         L     R0,CPPLCBUF         SAVE CMD BUFFER ADDR
         L     R10,CPPLCBUF        USE REG 10 TEMPORARILY
         CLC   4(7,R10),DESTROY    DID USER TYPE IN DESTROY
         BNE   CKCMD               CMD NOT ENTERED BY DESTROY
         MVI   CSECTSW,X'02'       CMD IS DESTROY
         B     PPLSTUFF            GO CONTINUE PROCESSING
CKCMD    MVI   CSECTSW,X'01'       CMD DELALL OR CBT1338
PPLSTUFF ST    R0,PPLCBUF          SAVE ADDR OF COMMAND BUFFER
         L     R0,CPPLUPT
         ST    R0,PPLUPT           SAVE ADDR OF UPT
         L     R0,CPPLPSCB
         LR    R10,R0              GET ADDR OF USERID FROM PSCB
         SR    R11,R11
         IC    R11,7(R10)          GET LENGTH OF USERID
**********************************************************************
* VERIFY THAT 1ST LEVEL INDEX LEVEL (ID) IS VALID                    *
*   (NOT SYS1, SYS2, CBT, PROD, KAI, OCU)                            *
*   (KAI + OCU ARE OPERATIONS CONTROL UNIT'S IDS)                    *
**********************************************************************
         CLC   0(4,R10),SYS1
         BE    FAIL1LEV
         CLC   0(4,R10),SYS2
         BE    FAIL1LEV
         CLC   0(3,R10),CBT
         BE    FAIL1LEV
         CLC   0(4,R10),PROD
         BE    FAIL1LEV
         CLC   0(3,R10),KAI
         BE    FAIL1LEV
         CLC   0(3,R10),OCU
         BE    FAIL1LEV
         BCTR  R11,0
AUTHRZD  OI    FLAG,X'80'
LECT     L     R0,CPPLECT
         ST    R0,PPLECT           SAVE ADDR OF ECT
         LA    R0,CPECB
         ST    R0,PPLECB           SAVE ADDR OF ECB
         XC    CPECB,CPECB         CLEAR ECB
         L     R0,=A(PARSLIST)
         ST    R0,PPLPCL           SAVE ADDR OF PCL
         LA    R0,WPDL
         ST    R0,PPLANS           SAVE ADDR OF PDL AREA
         XC    PPLUWA,PPLUWA       CLEAR UWA
         LR    R1,R9               PASS ADDR OF PPL TO PARSE
         LINK  EP=IKJPARS          LINK TO PARSE SERVICE ROUTINE
         LTR   R15,R15             PARSE ERROR
         BNZ   RETC                 YES
         TM    PPLANS,X'FF'        PARSE ERROR
         BO    RETC                 YES
         DROP  R9,R4
         L     R9,WPDL             GET ADDR OF PDL
         USING IKJPARMD,R9
*        TM    EXTENT+1,X'01'      EXTENT SPECIFIED?
*        BZ    *+8                  NO
*        OI    FLAG,X'20'           YES, SET FLAG BIT
*        TM    DSNLIST+6,X'80'      DSNAME SPECIFIED?
*        BO    DSNRTN                YES
*        TM    LEV+6,X'80'          INDEX LEVEL SPECIFIED?
*        BO    LEVEL                 YES
         B     EUSLO                NO PARMS - LISTS FOR USERID
         TITLE 'DELALL  - DATASET NAME ROUTINE'
DSNRTN   LA    R4,DSNLIST           POINT TO DSN LIST
         LA    R0,L'MSG1
         LA    R1,MSG1
         SVC   93                  TPUT HEADING
DSNAME   L     R5,0(R4)             POINT TO DSNAME
         LH    R6,4(R4)             GET LENGTH OF DSNAME
         BCTR  R6,0
         MVI   DSN1,X'40'
         MVC   DSN1+1(43),DSN1     BLANK DSN WORK AREA
         LA    R8,DSN1              POINT TO DSN WORK AREA
         TM    6(R4),X'40'          DSNAME CONTAINED IN QUOTES?
         BO    MVCDSNAM               YES
         EX    R11,USIDMVC         MOVE USERID TO WORK AREA
         LA    R8,1(R11,R8)        BUMP PAST USERID
         MVI   0(R8),C'.'          MOVE PERIOD TO WORK AREA
         LA    R8,1(0,R8)          BUMP PAST
MVCDSNAM EX    R6,DSNMVC           MOVE DSNAME TO WORK AREA
**********************************************************************
*   VERIFY 1ST LEVEL OF DSNAME IS NOT:                               *
*      SYS1, SYS2, CBT, PROD, KAI, OR OCU                            *
**********************************************************************
         CLC   0(4,R8),SYS1
         BE    FAIL1LEV
         CLC   0(4,R8),SYS2
         BE    FAIL1LEV
         CLC   0(3,R8),CBT
         BE    FAIL1LEV
         CLC   0(4,R8),PROD
         BE    FAIL1LEV
         CLC   0(3,R8),KAI
         BE    FAIL1LEV
         CLC   0(3,R8),OCU
         BE    FAIL1LEV
         MVC   VOLS,BLANKS         MOVE BLANKS TO VOLSER WORK AREA
         TM    FLAG,X'80'          AUTHORIZED USER?
         BZ    LOCDSN               NO
         TM    VOL+6,X'80'         VOLUME SPECIFIED?
         BZ    LOCDSN               NO, LOCATE DSN
         LA    R1,VOLS             POINT TO VOLSER WORK AREA
         L     R5,VOL              POINT TO VOLUME PARAMETER
         LH    R6,VOL+4            GET LENGTH OF VOL PARM
         BCTR  R6,0
         EX    R6,MVCVOLS          MOVE VOL PARM TO VOLSER WORK AREA
         B     BALOBTN             BYPASS LOCATE
LOCDSN   OI    FLAG,X'10'
         LOCATE INDS
         LTR   R15,R15              DID IT FIND VOL SER
         BNZ   ERR03                 NO WRITE ERROR MSG
         NI    FLAG,X'EF'
         LH    R7,BUF1             2 BYTE # OF VOLS RETURNED 10/84 LMB
         LA    R14,BUF1            ADDR OF RETURNED VOL LIST 10/84 LMB
         LA    R14,2(R14)          1ST 12 BYTE VAR SECTION   10/84 LMB
         LA    R14,4(R14)          VOL=SER LOCATION          10/84 LMB
MULTIVOL MVC   VOLS(6),0(R14)      MOVE IN VOL SER           10/84 LMB
         SPACE 2
BALOBTN  TM    VOL+6,X'80'         WAS VOL PARM GIVEN?       10/84 LMB
         BZ    BALOBTN2            NO, SO TPUT IT            10/84 LMB
         LH    R1,LENVOLS          LENGTH OF VOLS            10/84 LMB
         EX    R1,CLCVOLS          COMPARE THE VOLS          10/84 LMB
         BNE   CONTVAR2            NO HIT, CONT THE VARIABLES10/84 LMB
BALOBTN2 TPUT  VOLS,52
CONTVAR  OI    MULTISW,X'10'       DEL + COME BACK HERE      10/84 LMB
         B     MOVEIT              GO DEL + UNCATLG          10/84 LMB
CONTVAR2 LA    R14,12(R14)         PT TO NEXT VAR SECTION    10/84 LMB
         NI    MULTISW,X'01' TURN OFF BIT TO RETURN HERE     10/84 LMB
         OI    MULTISW,X'20'       2+ VOL OF VAR LIST        10/84 LMB
         BCT   R7,MULTIVOL         MORE VOLS GO PROCESS      10/84 LMB
RETDSN   NI    MULTISW,X'DF'       NO MORE VOLS LEFT TO PROC 10/84 LMB
         TM    MULTISW,X'01' MULTIVOL RECVD FROM LOCINDEX?   10/84 LMB
         BC    8,RETDSN2     NO, SO CONTINUE WITH DA(..) LIST10/84 LMB
         B     LOOP          CONTINUE WITH LOCINDEX PROCESS  10/84 LMB
RETDSN2  L     R4,24(R4)           GET DSN LINK POINTER
         C     R4,ENDLIST          END OF LIST?
         BE    RETC                 YES
         B     DSNAME               NO, GET NEXT DSNAME
         TITLE 'DELALL  - LEVEL ROUTINE'
EUSLO    EQU   *
**     FOR ENTIRE USERID LOGGED ON
         MVC   USERID(7),0(R10)        MOVE IN USERID
         MVC   MSG2(L'ERMSG6),ERMSG6
         MVC   MSG2+L'ERMSG6(7),USERID
         LA    R0,L'ERMSG6+7
         LA    R1,MSG2
         SVC   93
         MVC   MSG2(L'ERMSG7),ERMSG7
         LA    R0,L'ERMSG7
         LA    R1,MSG2
         SVC   93
         B     GOTUS               BRANCH TO GOT USERID
         SPACE 3
LEVEL    EQU   *
         L     R5,LEV              POINT TO INDEX STRUCTURE
         LH    R6,LEV+4            GET LENGTH OF INDEX STRUCT
         BCTR  R6,0
         LA    R8,USERID           POINT TO WORK AREA
         EX    R6,DSNMVC           MOVE INDEX STRUCTURE TO WORK AREA
GOTUS    EQU   *
         TM    VOL+6,X'80'
         BZ    NVOLL
         LA    R1,VOLZ
         L     R5,VOL              POINT TO VOLUME PARAMETER
         LH    R6,VOL+4            GET LENGTH OF VOL PARM
         BCTR  R6,0
         STH   R6,LENVOLS
         EX    R6,MVCVOLS
NVOLL    LA    R0,L'MSG1
         LA    R1,MSG1
         SVC   93                  TPUT HEADING
         OI    FLAG,X'40'          SET FLAG FOR DATA SETS FOR USERID
LOOP     EQU   *                   LOOP FOR DATASET IN USERID
         MVI   MULTISW,X'00'       REINITIALIZE MULTI-VOL SWITCH
         L     R15,=V(LOCINDEX)    POINT TO EP(LOCINDEX)
         LA    R1,PARM             POINT TO PARM LIST
         BALR  R14,R15             GO TO LOCINDEX
         CH    R15,=H'18'          WAS RC=0018
         BE    MULTI               YES, IT IS TAPE WITH MULTI-VOLS
         B     *+4(R15)            BRANCH , DEP ON RETURN CODE
         B     OK
         B     NOUSER              4-PRINT MSG & RETRUN TO SYS
         B     OK
         B     MULTI               12-MULTI-VOL DS           10/84 LMB
         B     RETC                16-FINISHED-RETURN TO SYS
         B     RDERR               20-PRINT MSG&RETRUN TO SUS
MULTI    MVI   MULTISW,X'01'     SET SWITCH: MULTI-VOL FOUND 10/84 LMB
         B     LOCDSN                                        10/84 LMB
OK       TM    VOL+6,X'80'
         BZ    NVOL2
         LH    R1,LENVOLS
         EX    R1,CLCVOLS
         BNE   LOOP
NVOL2    TPUT  VOLS,52
**********************************************************************
* ONLY ALLOW FURTHER PROCESSING IF THE VOLUME IS A STORAGE VOL:      *
*              DAAXXX  OR  DABXXX OR DSCXXX                          *
*              HAAXXX  OR  HABXXX OR HACXXX  (FOR HACDSX)            *
**********************************************************************
         BE    MOVEIT                                          01/04/83
* THE FOLLOWING CODE WAS BYPASSED EFFECTIVE:                   01/04/83
         CLC   VOLS(3),DAA
         BE    MOVEIT
         CLC   VOLS(3),DAB
         BE    MOVEIT
         CLC   VOLS(3),DSC
         BE    MOVEIT
         CLC   VOLS(3),FAA
         BE    MOVEIT
         CLC   VOLS(3),FAB
         BE    MOVEIT
         CLC   VOLS(3),HAA
         BE    MOVEIT
         CLC   VOLS(3),HAB
         BE    MOVEIT
         CLC   VOLS(3),HAC
         BE    MOVEIT
         B     FAILVOL            NOT A STORAGE VOL, SO END IT
*IT IS A STORAGE VOL, SAVE THE VOLID + DSNAME FOR LATER DYNAM ALLOC
MOVEIT   MVC   TXVOLID(6),VOLS    MOVE IN THE VOLID FROM LOCINDEX
         MVC   TXDSNM(44),VOLS+8  MOVE INT THE DSNAME FROM LOCINDEX
         SPACE 3
********SET UP FOR ALLOCATION****************************************
         SPACE 1
****SET UP S99RBPTR
         LA    R2,RBLOCK          ADDR OF REQ BLOCK
         ST    R2,RBADDR          STORE ADDR OF RB
         OI    RBADDR,X'80'       TURN ON END ADDR LIST INDICATOR
         SPACE
* SET UP S99RB
         MVC RBCODES,RBALLOC      VERB=01 ALLOC
         LA    R2,TUPL            ADDR OF TU PARM LIST
         ST    R2,TXTPTR          STORE ADDR OF TUPL
         MVC   RBFLGS,RBFLAGS     RESERVE + FLAGS
         SPACE
* SET UP S99TUPL
         LA    R1,TU1             PRT TO TEXT UNIT 1
         LA    R2,TU2             PTR TO TEXT UNIT 2
         LA    R3,TU3             PTR TO TEXT UNIT 3
         LA    R4,TU4             PTR TO TEXT UNIT 4
         LA    R5,TU5             PTR TO TEXT UNIT 5 (FOR LATER ALLOC)
         STM   R1,R5,TUPL         PUT ADDRS IN TEXT UNIT PARM LIST
* MOVE IN PROPER TEXT UNITS
         MVC   TU1,TXALLOC        ALLOC TEXT UNIT
         MVC   TUDSNAME,TXDSNM    DSNAME
         MVC   TU2,TXSTATUS       STATUS TEXT UNIT
         MVC   TU3,TXNDISPK       NORMAL DISP TEXT UNIT
         MVC   TU4,TXCDISP        CONDITIONAL DISP TEXT UNIT
* NOW GO AND ALLOCATE DISP=(OLD,KEEP,KEEP) TO SEE IF YOU
*     CAN GET IT
ALLOC1   TM    MULTISW,X'20'      2+ VOL OF MULTIVOL DS?   10/84 LMB
         BC    1,ALLOC3    YES, ALREADY UNCTLG'D, JUST DEL 10/84 LMB
         OI    TUPL+12,X'80'      TURN ON END OF LIST BIT(4TH TEXT U)
         LA    R1,RBADDR          POINT TO RB STRUCTURE
         DYNALLOC
         LTR   R15,R15
         BNZ   ALOCFAIL           TPUT AND LOOP
         SPACE 2
*   UNALLOC VIA UNALLOC DISP=(OLD,KEEP,KEEP)
UNALLOC1 MVC   RBCODES,RBDEALOC   VERB=02 UNALLOC
         MVC   TU2,TXUNALL        UNALLOC EVEN IF PERM ALLOCATED
         NI    TUPL+12,X'7F'      REMOVE END LIST ON 4TH TEXT U
         OI    TUPL+4,X'80'       TURN ON END LIST ON 2ND TEXT U
         LA    R1,RBADDR
         DYNALLOC
         LTR   R15,R15
         BNZ   ALOCFAIL           TPUT AND LOOP
         SPACE 2
* NOW GO AND ALLOCATE DISP=(OLD,KEEP,KEEP) AGAIN FOR THE FOLLOWING
*     UNALLOCATE WITH UNCATLG
ALLOC2   MVC   RBCODES,RBALLOC    VERB=01 ALLOC
         MVC   TU2,TXSTATUS       STATUS TEXT UNIT
         NI    TUPL+4,X'7F'       RENUMVE END LIST ON 2ND TEXT U
         OI    TUPL+12,X'80'      TURN ON END LIST ON 4TH TEXT U
         LA    R1,RBADDR          POINT TO RB STRUCTURE
         DYNALLOC
         LTR   R15,R15
         BNZ   ALOCFAIL           TPUT AND LOOP
         SPACE 2
*   UNCTLG VIA UNALLOC DISP=(OLD,UNCTLG,KEEP)
UNALLOC2 MVC   RBCODES,RBDEALOC   VERB=02 UNALLOC
         MVC   TU2,TXUNALL        UNALLOC EVEN IF PERM ALLOCATED
         MVC   TU3,TXNDISPU       UNCTLG TEXT UNIT
         NI    TUPL+12,X'7F'      REMOVE END LIST ON 4TH TEXT U
         OI    TUPL+8,X'80'       TURN ON END LIST ON 3RD TEXT U
         LA    R1,RBADDR
         DYNALLOC
         LTR   R15,R15
         BNZ   UNCTFAIL           TPUT AND LOOP
         SPACE 2
*   ALLOC AGAIN SUPPLY VOLID BECAUSE IT IS UNCTLG'D
*        DISP=(OLD,KEEP,KEEP)
ALLOC3   OI    TUPL+16,X'80'      TURN END LIST ON 5TH TEXT U
         NI    TUPL+8,X'7F'       REMOVE END LIST ON 4TH TEXT U
         MVC   TU3,TXNDISPK       NORMAL DISP KEEP
         MVC   TU5,TXRTVOL        VOLID TEXT UNIT
         MVC   TUVOLID,TXVOLID    ACTUAL VOLID
         MVC   RBCODES,RBALLOC    VERB=01 ALLOC
         MVC   TU2,TXSTATUS       STATUS OF TEXT UNIT (OLD)
         LA    R1,RBADDR
         DYNALLOC
         LTR   R15,R15
         BNZ   ALOCFAIL
*   DELETE VIA UNALLOC DISP=(OLD,DELETE,KEEP)
UNALLOC3 MVC   RBCODES,RBDEALOC   CODE=2
         MVC   TU2,TXNDISPD       DISP=DELETE
         MVC   TU3,TXUNALL        UNALLOC EVEN IF PERM ALLOC ON
         NI    TUPL+16,X'7F'      REMOVE END OF LIST ON 4TH TEXT U
         OI    TUPL+8,X'80'       TURN END OF LIST BIT FOR 2ND TEXT U
         LA    R1,RBADDR
         DYNALLOC
         LTR   R15,R15
         BNZ   DELFAIL            TPUT + EOJ
**********************************************************************
* CHECK IF YOU RETURN (DELALL) OR LINK TO LOGOFF PROCESSOR(DESTROY)  *
**********************************************************************
         TM    MULTISW,X'10'  ENTRY FROM MULTIVOL SECTION?   10/84 LMB
         BC    1,CONTVAR2     YES, RETURN THERE + CONTINUE   10/84 LMB
         B     LOOP           NO,  GET NEXT DSNAME FROM LOCINDEX
         SPACE 3
         TITLE 'DELALL - EOJ AND ERROR ROUTINES'
*  CHECK TO SEE IF LOGOFF SHOULD BE LINKED TO
RETC     CLI   CSECTSW,X'02'         REQUESTING A LOGOFF ALSO
         BE    GOODBYE
GOBACK   L     13,SAVE+4           LOAD R13 PREVIOUS SPACE AREA
         LM    2,12,28(13)         RELOAD REGISTERS
         L     14,12(13)           LOAD RETURN ADDRESS
         MVI   12(13),X'FF'        INDICATE CONTROL RETURN CALLING PROG
         BCR   15,14               RETURN TO CALLING PROGRAM
*   GO TO THE LOGOFF PROCESSOR
GOODBYE  L     R1,CPPLADDR         GET THE CPPL ADDRESS
         L     R3,8(0,R1)               PSCB ADDR
         L     R3,48(,R3)               RELOGON BUFFER ADDR
         MVC   4(6,R3),=C'LOGOFF'       MOVE IN LOGOFF
         L     R3,12(0,R1)              GET ECT ADDR
         MVI   28(R3),X'90'             ASK TMP GO LOGOFF IT OFF
         B     GOBACK                   GO TO TMP-IT WILL LOGOFF
         SPACE 3
ERR01    EQU   *
* NO VALID COMMAND
         TPUT  ERMSG1,18
         B     RETC                BRANCH TO RETURN CODE
* DATASET NAME NOT FOUND
ERR03    MVC   MSG2(L'ERMSG9),ERMSG9
         MVC   MSG2+L'ERMSG9(44),DSN1
         LA    R0,L'ERMSG9+44
         LA    R1,MSG2
         SVC   93
         TM    FLAG,X'40'
         BO    LOOP
         TM    FLAG,X'10'
         B     RETDSN
         SPACE 3
FAIL1LEV EQU   *
* 1ST INDEX LEVEL NOT ALLOWED (SYS1, SYS2, CBT, PROD, KAI, + OCU)
         TPUT  ERMSG4,53
         B     RETC
ALOCFAIL EQU   *              DYN ALLOC FAILED
         TPUT  ERMSG11,50
         B     LOOP
UNCTFAIL EQU   *              DYN UNALLOC UNCTLG FAILED
         TPUT  ERMSG12,57
         B     LOOP
DELFAIL  EQU   *              DYN UNALLOC DELETE FAILED
         TPUT  ERMSG13,50
         B     LOOP
FAILVOL  EQU   *
* CATALOG SHOWS A VOL WHICH IS NOT CONSIDERED STORAGE
         MVC   MSG2(L'ERMSG5),ERMSG5
         MVC   MSG2+L'ERMSG5(6),VOLS   SHOW THE VOLID IN QUESTION
         LA    R0,L'ERMSG5+6
         LA    R1,MSG2
         SVC   93
         B     LOOP           LOOK AT REMAINING DATASETS
RDERR    MVC   MSG2(L'ERMSG8),ERMSG8
         MVC   MSG2+L'ERMSG8(44),DSN1
         LA    R0,L'ERMSG8+44
         LA    R1,MSG2
         SVC   93
         B     LOOP                CONTINUE THRU LOOP
         SPACE 3
NOUSER   MVC   MSG2(L'ERMSG3),ERMSG3
         MVC   MSG2+L'ERMSG3(44),USERID
         LA    R0,L'ERMSG3+44
         LA    R1,MSG2
         SVC   93
         B     RETC                RETURN TO SYSTEM
         SPACE 3
ERRF     EQU   *
         TPUT  ERMSG10,20
         B     RETC
USIDMVC  MVC   0(0,R8),0(R10)
DSNMVC   MVC   0(0,R8),0(R5)
MVCVOLS  MVC   0(0,R1),0(R5)
CLCVOLS  CLC   VOLS(0),VOLZ
         SPACE 3
**********************************************************************
*  DYNAMIC ALLOCATION CONSTANTS FOR ALLOC, DEALLOC, AND UNCATLG      *
**********************************************************************
         SPACE 2
*******TEXT UNITS***********
TXALLOC  DC    XL6'00020001002C'     ALLOC BY DSN
         DC    44CL1' '              DSNAME
TXSTATUS DC    XL7'00040001000101'   DISP=OLD
TXNDISPK DC    XL7'00050001000108'   NORMDISP=KEEP
TXNDISPD DC    XL7'00050001000104'   NORM DISP=DELETE
TXNDISPU DC    XL7'00050001000101'   NORM DISP=UNCTLG
TXCDISP  DC    XL7'00060001000108'   COND DISP=KEEP
TXUNALL  DC    XL4'00070000'         UNALLOC EVEN IF PERM ALLOCTEDTOP
TXRTVOL  DC    XL6'001000010006'     SUPPLY VOL SER
TXVOLID  DC    CL6'      '           VOLID SUPPLIED (FROM LOCINDEX)
TXDSNM   DC    CL44' '               DSNAME SUPPLIED FROM LOCINDEX
         DS    0F                    FOR FULL WORD ALIGNMENT
         SPACE 2
*******REQUEST BLOCK CONSTANTS**************
RBALLOC  DC    XL8'1401000000000000' ALLOC BY DSNAME
RBDEALOC DC    XL8'1402000000000000' DSN DEALLOC
RBFLAGS  DC    XL8'00'               RESERVED AND FLAGS
         SPACE 4
         TITLE 'DELALL  - DATA AREAS'
ENDLIST  DS    0F
         DC    XL4'FF000000'
* SETUP CONSTANTS
VOLDSCTK DC    H'0'                NUM DSCH ON A TRK
VOLF4CHR DC    XL5'00'             CCHHR OF DSCB
VOLNO    DC    H'0'                NUM VOLUMES PROCESSED
PEXCTR   DC    H'0'                CTR FOR TATAL NUM FREE SPACE
LASTTRK  DC    H'0'
VOLS     DC    CL6' '                 VOLUME SER
         DC    C'  '
DSN1     DC    CL44' '              DATASET NAME
USERID   DC    CL44' '              USERID
FLAG     DC    X'00'
DSORG    DC    X'00'
BLANKS   DC    CL6' '
VOLZ     DC    CL6' '
LENVOLS  DC    H'0'
BUF1     DS    0D
         DS    265C
TRTBL    EQU   *-240
         DC    C'0123456789ABCDEF'
MASKED   DC    XL6'402020202020'   MASK FIELD FOR EDIT
SYS1     DC    C'SYS1'
SYS2     DC    C'SYS2'
CBT      DC    C'CBT'
PROD     DC    C'PROD'
KAI      DC    C'KAI'
OCU      DC    C'OCU'
DESTROY  DC    C'DESTROY'
DAA      DC    C'DAA'              STORAGE VOLUME
DAB      DC    C'DAB'              STORAGE VOLUME
DSC      DC    C'DSC'              CBT DATA SERV CORP
FAA      DC    C'FAA'              STATE NATIONAL
FAB      DC    C'FAB'              STATE NATIONAL
HAA      DC    C'HAA'              STORAGE VOLUME
HAB      DC    C'HAB'              STORAGE VOLUME
HAC      DC    C'HAC'              CBT DATA SERV CORP
CSECTSW  DC    X'00'
         SPACE 3
* MESSAGE TO BE PRINTED
MSG1     DC    C'VOLUME  DATASET NAME             '
MSG2     DC    CL76' '
         SPACE 3
* ERROR MESSAGES
ERMSG1  DC C'NO VALID COMMAND'
ERMSG3  DC C'INVALID LEVEL - '
ERMSG4  DC C'INDEX LEVELS (SYS1 SYS2 CBT PROD KAI OCU) NOT ALLOWED'
ERMSG5  DC C'ABOVE DATASET NOT DELETED - VOL NOT CONSIDERED STORAGE:  '
ERMSG6  DC C'THE FOLLOWING DATASETS WITH A FIRST INDEX LEVEL OF '
ERMSG7  DC C'WILL BE UNCATALOGED + DELETED ONLY FROM DASD VOLUMES'
ERMSG8  DC C'ERROR READING CATALOG DSN - '
ERMSG9  DC C'DSN NOT FOUND - '
ERMSG10 DC C'UNSUPPORTED KEYWORD'
ERMSG11 DC C'ABOVE DATASET COULD NOT BE ALLOCATED FOR DELETION '
ERMSG12 DC C'ABOVE DATASET COULD NOT BE UNCTLG - THEREFORE NOT DELETED'
ERMSG13 DC C'ABOVE DATASET UNCTLG BUT COULD NOT BE DELETED     '
         LTORG
         EJECT
* CAMLST FOR DSCB3
SEEKCAM  CAMLST SEEK,VTOCCHHR,VOLS,BUF1
         SPACE 2
* CAMLST LOCATE DSN OV VOL SER
INDS     CAMLST NAME,DSN1,,BUF1
         SPACE 2
* CAMLST FOR DSCB 1
SERCHCAM CAMLST SEARCH,DSN1,VOLS,BUF1
         EJECT
* CONSTANTS AND WORK AREAS
HWK1     DC    H'0'                HALF WORD WORK AREA
VOLTKCYL DC    H'19'               # TRKS/CYL
VTOCCHHR DC    XL5'0'              TRACK ADDR WORK AREA
WKD      DC    D'0'                DOUBLE WORK WORK AREA
         SPACE 3
* PARM SETUP FOR GETDSN
PARM     DC    A(USERID)           USERID ADDRESS
         DC    A(DSN1)             DSN ADDRESS
         DC    A(VOLS)             VOL SER ADDRESS
         DC    A(0)                ADDRESS FOR GETMAIN
         SPACE 3
* EQUATE REGISTERS
         EQUATE
RCC      EQU   R8
RHH      EQU   R7
RR       EQU   R6
         TITLE 'DELALL - PARSE PARAMETER LIST'
PARSLIST IKJPARM
DSNKYD   IKJKEYWD
         IKJNAME 'DATASET',SUBFLD=DSNSUBF
LEVL     IKJKEYWD
         IKJNAME 'LEVEL',SUBFLD=LVL
VOLUME   IKJKEYWD
         IKJNAME 'VOLUME',SUBFLD=VLM
EXTENT   IKJKEYWD
         IKJNAME 'EXTENTS'
DSNSUBF  IKJSUBF
DSNLIST  IKJPOSIT DSNAME,LIST
LVL      IKJSUBF
LEV      IKJIDENT 'LEVEL',OTHER=ANY,MAXLNTH=44
VLM      IKJSUBF
VOL      IKJIDENT 'VOLUME',LIST,FIRST=ALPHANUM,OTHER=ALPHANUM,MAXLNTH=6
         IKJENDP
         IKJPPL
         IKJCPPL
         TITLE 'DELALL  - WORK AREA'
WORKAREA DSECT
MULTISW  DS    X      SW FOR MULTIVOLS FROM LOCINDEX       10/84 LMB
         DS    0D
WPPL     DS    7A
CPECB    DS    F
WPDL     DS    F
OBTNSAVE DS    10F
XTNTS    DS    16XL10
WXTNT    DS    CL5
CPPLADDR DS    F
         SPACE 3
* DYNAMIC ALLOC AREA
         DS    0D
RBADDR   DS    A                  PTR TO RB
RBLOCK   DS    0XL20              REQ BLK
RBCODES  DS    XL8                RB VERB=01 ALLOC
TXTPTR   DS    A                  PTR TO TXTUNT LIST
RBFLGS   DS    XL8                RES + FLGS
         SPACE
* TEXT UNIT PARM LIST
TUPL     DS    0XL40              TEXT UNIT PARM LIST
TEXTPTRS DS    5F                 PTR TO TEXT UNITS
* TEXT UNITS AREA
TEXTAREA DS    0CL90
TU1      DS    XL6                ALLOC BY DSN
TUDSNAME DS    CL44               DSNAME ITSELF
TU2      DS    XL7                STATUS
TU3      DS    XL7                NORMAL DISP
TU4      DS    XL7                CONDITIONAL DISP
TU5      DS    XL6                REQUESTED VOLID
TUVOLID  DS    CL6                VOLID ITSELF
DAUNALOC DS    XL7                UNALLOC BY DSN
DAUNCTLG DS    XL7                UNCATLG
         DS    0D
LOCINDXW EQU   *
LWORK    EQU   *-WORKAREA
         END
