         TITLE 'VARYOFF - MODULE COMMENTARY'
         SPACE 3
*
*
***************************************************************
*                                                             *
*        NAME      .VARYOFF   LVL 03.00                       *
*                                                             *
*        FUNCTION/ .TO ISSUE OPERATOR COMMANDS                *
*        PURPOSE    TO VARY OFFLINE THOSE DASD VOLUMES        *
*                   NOT LISTED IN THE VATLST MEMBER OF        *
*                   PARMLIB                                   *
*                                                             *
*        INPUT     .SYSIN DD STATEMENT (RECFM=FB,LRECL=80)    *
*                   DESIGNATING THE VATLSTXX MEMBER OF        *
*                   SYS1.PARMLIB.  THE DCB BLKSIZE VALUE IS   *
*                   NOT HARD CODED TO ALLOW PROCESSING DATA   *
*                   WITH VARYING BLOCK SIZES.                 *
*                  .PARM FIELD OF THE EXEC STATEMENT IS       *
*                   EITHER NULL OR INDICATES TEST/DIAGNOSTIC  *
*                   MODE:                                     *
*                        PARM=TEST    PERFORMS ALL PROGRAM    *
*                                     FUNCTIONS EXCEPT FOR    *
*                                     ISSUING COMMANDS AND    *
*                                     ALTERING UCB'S.         *
*                        PARM=DIAG    PROVIDES THE SAME       *
*                                     FUNCTIONS AS PARM=TEST, *
*                                     AND ALSO CAUSES AN S0C1 *
*                                     ABEND TO OCCUR AFTER    *
*                                     MOST PROGRAM PROCESSING *
*                                     HAS COMPLETED.          *
*                                                             *
*        ENTRY     .VARYOFF                                   *
*                                                             *
*        OUTPUT    .OPERATOR COMMANDS ISSUED DIRECTLY         *
*                   TO THE OPERATING SYSTEM.                  *
*                  .SYSPRINT DATA SET (RECFM=FBA,LRECL=121)   *
*                   CONTAINS A LIST OF THE COMMANDS THAT WERE *
*                   CONSTRUCTED AND THE MESSAGES THAT WERE    *
*                   ISSUED.                                   *
*                                                             *
*        RETURN    .00   OPERATOR COMMANDS SUCCESSFULLY       *
*        CODES           PROCESSED                            *
*                  .04   RESERVED                             *
*                  .08   UNABLE TO OPEN -SYSIN-               *
*                  .12   UNABLE TO OPEN -SYSPRINT-            *
*                                                             *
*        MODULE    .REENTRANT,REUSEABLE,REFRESHABLE,READ-ONLY,*
*        ATTRIBUTES           AC(1),AMODE(24),RMODE(24)       *
*                                                             *
*        UPDATE    .VER 02 LVL 01 CODE ADDED TO USE SECOND    *
*        HISTORY    BASE REGISTER AND TO ISSUE VARY OFFLINE   *
*                   COMMAND IF VOLSER NOT IN VATLSTXX         *
*                   BEGINS WITH "DRUM".           05/02/83 TJA*
*                                                             *
*                  .VER 03 LVL 00 THE UCB SCAN LOOP WAS       *
*                   REVISED TO USE THE "IOSVSUCB" SCAN ROUTINE*
*                   IN THE SYSTEM NUCLEUS FOR COMPATIBILITY   *
*                   BETWEEN MVS/SP 1.3 AND MVS/SP 2.1 (XA).   *
*                   THEREFORE, VERSION 03 LVL 00 OF VARYOFF   *
*                   WILL NOT WORK WITH A LEVEL OF MVS PRIOR   *
*                   TO MVS/SP 1.3.0.  IN ADDITION,            *
*                   SEVERAL MINOR ENHANCEMENTS WERE ALSO MADE *
*                   TO IMPROVE THE INFORMATION CONTENT OF     *
*                   PROGRAM MESSAGES, AND A MOUNT COMMAND IS  *
*                   ISSUED FOR ANY VOLUME WHOSE USE           *
*                   ATTRIBUTE DOES NOT AGREE WITH THE         *
*                   VATLST (THIS LAST FEATURE CAN BE          *
*                   DISABLED BY CHANGING THE NOP TO BRANCH AT *
*                   LABEL OFFLP34).                           *
*                                                 03/16/84 TJA*
*                                                             *
*        FACILITIES/FEATURES                                  *
*                                                             *
*               THIS PROGRAM MATCHES THE VOLUMES SPECIFIED IN *
*        THE VATLSTXX MEMBER OF PARMLIB AGAINST THE ONLINE    *
*        DASD VOLUMES.  RELEASE 01.00 OF THIS PROGRAM ISSUED  *
*        A "VARY OFFLINE" COMMAND FOR EACH ONLINE NON-MSS     *
*        DASD VOLUME WHOSE VOLUME SERIAL NUMBER WAS NOT       *
*        LISTED IN THE VATLSTXX MEMBER POINTED TO BY THE      *
*        //SYSIN DD STATEMENT.  RELEASE 02.00 OF VARYOFF      *
*        REFINED THIS ACTION TO DISTINGUISH VOLUMES THAT      *
*        SHOULD BE MOUNTED FROM THOSE THAT SHOULD BE VARIED   *
*        OFFLINE AND ISSUE AN APPROPRIATE COMMAND IN EACH     *
*        CASE.  IN ADDITION RELEASE 02.00 ADDED THE ABILITY   *
*        TO SPECIFY IN VATLSTXX THAT A SPECIFIC VOLUME LISTED *
*        IN VATLSTXX BE VARIED OFFLINE, AND SPECIFY THAT THE  *
*        UNIT ON WHICH A VOLUME IS MOUNTED HAVE ITS UCB       *
*        ALTERED TO SPECIFY "SHARED DASD" OR "UNSHARED DASD"  *
*        VIA BIT "UCBRR" IN THE UCBTYPE FIELD OF THE UCB.     *
*                                                             *
*               VARYOFF RELEASE 02.00 DETERMINES WHETHER A    *
*        VOLUME NOT LISTED IN VATLSTXX SHOULD BE MOUNTED      *
*        (WITH A USE ATTRIBUTE OF PRIVATE) OR VARIED OFFLINE  *
*        BY INSPECTING THE VOLUME SERIAL NUMBER.  IF THE      *
*        VOLUME SERIAL NUMBER IS BLANK (AFTER UPPER CASE HAS  *
*        BEEN FORCED), OR BEGINS WITH "DEV", A "VARY OFFLINE" *
*        COMMAND IS ISSUED FOR THE VOLUME.  IF THE VOLUME     *
*        SERIAL NUMBER DOES NOT SATISFY ANY TEST FOR A "VARY  *
*        OFFLINE" COMMAND, A MOUNT COMMAND SPECIFYING A USE   *
*        ATTRIBUTE OF PRIVATE IS ISSUED INSTEAD.              *
*                                                             *
*               FOR VOLUMES LISTED IN VATLSTXX, THIS PROGRAM  *
*        SUPPORTS THREE FEATURES NOT PROVIDED BY MVS VOLUME   *
*        ATTRIBUTE PROCESSING.  IMPLEMENTATION OF THESE       *
*        FEATURES WAS SUGGESTED BY A REVIEW OF A PROGRAM      *
*        PROVIDING SIMILAR FEATURES FOUND ON THE SHARE CBT    *
*        MODS TAPE.  A REQUEST FOR ONE OR MORE OF THESE       *
*        FEATURES IS INDICATED TO THE VARYOFF PROGRAM BY THE  *
*        PRESENCE OF A COMMA (",") IN CARD COLUMN 22 OF A     *
*        VATLSTXX INPUT RECORD.  COLUMN 22 IS THE COLUMN      *
*        IMMEDIATELY FOLLOWING THE "N" SPECIFICATION FOR      *
*        MOUNT MESSAGE SUPPRESSION; IT IS SPECIFIED AS AN     *
*        OPTIONALLY BLANK COLUMN IN THE "INITIALIZATION AND   *
*        TUNING GUIDE" FORM NUMBER GC28-0681-3.  THE FEATURES *
*        TO BE APPLIED ARE SPECIFIED AS A CHARACTER STRING    *
*        IMMEDIATELY FOLLOWING THE COMMA.  THE FIRST BLANK OR *
*        COMMA ENCOUNTERED IN SCANNING THIS FIELD TERMINATES  *
*        THE SCAN.  THE FEATURES REQUESTED ARE INDICATED BY   *
*        SINGLE CHARACTERS AND CAN BE SPECIFIED IN ANY ORDER. *
*        UNRECOGNIZED CHARACTERS ARE IGNORED AND BYPASSED.    *
*        THE FEATURES SUPPORTED BY VARYOFF ARE AS FOLLOWS:    *
*              "V"    ISSUE A VARY OFFLINE COMMAND FOR THE    *
*                     DEVICE CONTAINING THIS VOLUME IF IT IS  *
*                     FOUND TO BE MOUNTED.                    *
*              "S"    TURN ON BIT "UCBRR" IN THE UCBTYPE      *
*                     FIELD OF THE UCB TO INDICATE THAT THE   *
*                     DEVICE CONTAINING THIS VOLUME IS SHARED *
*                     ACROSS MULTIPLE SYSTEMS.                *
**********************USE THIS FEATURE WITH CAUTION************
*                     THIS FEATURE MUST ONLY BE USED FOR A    *
*                     UNIT FOR WHICH THE "SHARED" OPTION WAS  *
*                     SPECIFIED IN THE IODEVICE MACRO DURING  *
*                     THE LAST I/O OR FULL SYSTEM GENERATION. *
*                     THE SYSGEN PROCESS CREATES AN EXTRA CCW *
*                     SLOT FOR A SHARED DEVICE WHICH IS NOT   *
*                     PRESENT FOR AN UNSHARED DEVICE.  USE OF *
*                     THIS OPTION ON A DEVICE NOT GENERATED   *
*                     AS "SHARED" CAN CAUSE STORAGE TO BE     *
*                     OVERLAID WITH UNPREDICTABLE RESULTS.    *
*              "U"    TURN OFF BIT "UCBRR" IN THE UCBTYPE     *
*                     FIELD OF THE UCB TO INDICATE THAT THE   *
*                     DEVICE CONTAINING THIS VOLUME IS NOT    *
*                     SHARED ACROSS MULTIPLE SYSTEMS.         *
**********************USE THIS FEATURE WITH CAUTION************
*                     WHEN USING THIS FEATURE, STEPS SHOULD   *
*                     BE TAKEN TO INSURE THAT THE DEVICE HAS  *
*                     BEEN OR IS BEING MADE UNAVAILABLE TO    *
*                     OTHER SYSTEMS IN THE COMPLEX.           *
*        TO PREVENT INADVERTENT USE OF THE "S" AND "U"        *
*        FEATURES, THE PROGRAM RECOGNIZES THESE VALUES ONLY   *
*        IN LOWER CASE FORM.  THE "V" CAN BE SPECIFIED IN     *
*        EITHER UPPER OR LOWER CASE.                          *
*                                                             *
***************************************************************
***                                                         ***
***>>>>>>>>>>>>>>C U I C   D I S C L A I M E R<<<<<<<<<<<<<<***
***                                                         ***
***************************************************************
***            THE INFORMATION OR MATERIAL BEING PROVIDED   ***
***      BY COMMERCIAL UNION INSURANCE COMPANY (CUIC),      ***
***      WHETHER IN HARD COPY OR MACHINE READABLE FORM,     ***
***      HAS BEEN DEVELOPED BY CUIC FOR ITS OWN PURPOSE     ***
***      AND FOR USE ON ITS OWN EQUIPMENT AND WITHIN ITS    ***
***      OWN DATA PROCESSING SYSTEM.  CUIC MAKES NO         ***
***      REPRESENTATIONS OR WARRANTIES WHATSOEVER WITH      ***
***      RESPECT TO THE INFORMATION OR MATERIAL FURNISHED   ***
***      HEREUNDER, EXPRESSED OR IMPLIED, INCLUDING BUT     ***
***      NOT LIMITED TO ANY REPRESENTATION OR WARRANTY OF   ***
***      MERCHANTABILITY OR FITNESS FOR ANY PARTICULAR USE  ***
***      OR PURPOSE OR THAT THE USE OF THE INFORMATION OR   ***
***      MATERIAL WILL NOT INFRINGE ANY PATENT, COPYRIGHT,  ***
***      TRADEMARK, OR OTHER PROPRIETARY INTEREST.  YOU     ***
***      ARE, THEREFORE, ACCEPTING THIS INFORMATION OR      ***
***      MATERIAL ON AN "AS IS" BASIS AND WILL BE USING IT  ***
***      AT YOUR OWN RISK.  NEITHER CUIC NOR ANY OF ITS     ***
***      AFFILIATES SHALL BE LIABLE WITH RESPECT TO ANY     ***
***      CLAIM, ACTION, OR DEMAND BY ANY USER OR OTHER      ***
***      PARTY (INCLUDING ANY CLAIM, ACTION, OR DEMAND FOR  ***
***      CONSEQUENTIAL DAMAGES EVEN IF CUIC HAS BEEN        ***
***      ADVISED OF THE POSSIBILITY OF SUCH DAMAGES)        ***
***      ARISING FROM THE USE OF THE INFORMATION OR THE     ***
***      MATERIALS AND CONCEPTS RELATED THERETO.            ***
***      FURTHERMORE, CUIC WILL NOT MAINTAIN, CORRECT, OR   ***
***      UPDATE THIS INFORMATION OR MATERIAL IN THE         ***
***      FUTURE.                                            ***
***                                              01/26/83   ***
***************************************************************
*                                                             *
*              DIRECT INQUIRIES TO THE                        *
*        AUTHOR.....                                          *
*                                                             *
*                   THOMAS J. AUBREY                          *
*                   MIS                                       *
*                   COMMERCIAL UNION ASSURANCE COMPANIES      *
*                   ONE BEACON STREET                         *
*                   BOSTON, MASSACHUSETTS  02108              *
*                   TELEPHONE (617) 725-6208                  *
*                                                             *
***************************************************************
*
*
         TITLE 'VARYOFF - MODULE EQUATES'
VARYOFF  START 000000
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
*
*
*        LOGICAL REGISTER EQUATES
RWORK0   EQU   00    WORK REGISTER
RWORK1   EQU   01    WORK REGISTER
RWORK2   EQU   02    WORK REGISTER
RWORK3   EQU   03    WORK REGISTER
RUCB     EQU   04    POINTER TO UCB
RTBL1    EQU   05    LOOP CONTROL
RTBL2    EQU   06    EVEN
RTBL3    EQU   07    ODD
RBASE1   EQU   10                  MODULE BASE REGISTER # 1
RBASE2   EQU   11                  MODULE BASE REGISTER # 2
RSAVE    EQU   13                  WORK AREA BASE REGISTER
RLINK    EQU   14                  SUBROUTINE LINKAGE REGISTER
RENTRY   EQU   15                  ENTRY ADDRESS REGISTER
         TITLE 'VARYOFF - COMMUNICATIONS VECTOR TABLE(CVT) DSECT'
         CVT   DSECT=YES,LIST=NO
         TITLE 'VARYOFF - UNIT CONTROL BLOCK(UCB) MAPPING DSECT'
UCBDSECT DSECT  ,
         IEFUCBOB LIST=NO
         TITLE 'VARYOFF - DATA CONTROL BLOCK(DCB) DSECT'
         PUSH  PRINT
         PRINT NOGEN
         DCBD  DSORG=PS
         POP   PRINT
         TITLE 'VARYOFF - WORKING STORAGE DSECT'
         SPACE 3
IEFSECT  DSECT  ,
SAVE     DC    18A(0)              GENERAL REGISTER SAVE AREA
PACKAREA DC    D'0'                DOUBLEWRD BOUNDARY WORK AREA
PACK1    DC    CL16' '             HEX TO EBCDIC WORK AREA
PACK2    DC    CL16' '             HEX TO EBCDIC WORK AREA
RETURNCD DC    A(0)                RETURN CODE SAVE AREA
OFFCOUNT DC    A(0)                COUNT OF VARY OFFLINE COMMANDS
MNTCOUNT DC    A(0)                COUNT OF        MOUNT COMMANDS
*
*        TESTAUTH MACRO RESULTS SAVE AREAS
AUTHSAVE DS    0D                  BOUNDARY ALIGN
AUTHFCTN DC    AL1(00)             TEST FOR AUTHORIZATION CODE 1
         DC    AL1(00)             RESERVED
         DC    AL1(00)             RESERVED
TESTMODE DC    AL1(00)             SET TO 04 IF PARM=TEST OR DIAG
DIAGMODE DC    AL1(00)             SET TO 04 IF PARM=DIAG
         DC    AL1(00)             RESERVED
         DC    AL1(00)             RESERVED
         DC    AL1(00)             RESERVED
*
*        "IOSVSUCB" SCAN LOOP WORK AREA:
IVUAREA  DS   0D                   START OF WORK AREA
IVUPARM  DS   3A                   IOSVSUCB PARAMETER LIST
IVUUCBAD DS    A                   IOSVSUCB UCB ADDRESS ANSWER AREA
IVUWORK  DS    XL100               IOSVSUCB 100-BYTE WORK AREA
         DS    XL3                 ***RESERVED***
IVUUCBTY DS    XL1                 IOSVSUCB UCB TYPE VALUE
*
*        WRITE-TO-OPERATOR WORK AREA
MCSVCMDL DS    A(0)                RLINK SAVE FOR BLDMOUNT
VCSVCMDL DS    A(0)                RLINK SAVE FOR BLDVARYF
ZPSVUCBS DS    A(0)                RLINK SAVE FOR ZAPUCBSH
ZPSVUCBU DS    A(0)                RLINK SAVE FOR ZAPUCBUS
WTSVCMDL DS    A(0)                RLINK SAVE FOR WTOCMD/ISSUECMD
ZPSVSUBR DS    A(0)                RLINK SAVE FOR ZAP SUBROUTINES
WTSVMCS  DS    Y(0)                MCS FLAGS SAVE AREA FOR "ISSUECMD"
         DS    Y(0)                RESERVED
WTOAREA  DS    0A                  BOUNDARY ALIGN
WTOLEN   DC    Y(0)                OPERATOR COMMAND LENGTH
WTOMCS   DC    Y(0)                OPERATOR COMMAND MCS FLAGS
WTOMSG   DC    CL120' '            OPERATOR COMMAND TEXT
         DC    XL4'00'             MCS ROUTE AND DESCRIPTOR CODES
*
*        -SYSIN- DATA SET WORK AREAS
INFLAGS  DS    0A                    DATA SET PROCESSING FLAGS
INFLAG1  DC    AL1(00)               DATA SET STATUS FLAG
INF1EOD  EQU   X'80'                 END-OF-DATA HAS BEEN SIGNALLED
INF1OPEN EQU   X'01'                 THE DATA SET IS OPEN
INFLAG2  DC    AL1(00)               RESERVED
INFLAG3  DC    AL1(00)               RESERVED
INFLAG4  DC    AL1(00)               RESERVED
INSVOPNL DC    A(0)                  RLINK SAVE FOR "OPNINDCB"
INSVGETL DC    A(0)                  RLINK SAVE FOR "GETIN"
INSVCLSL DC    A(0)                  RLINK SAVE FOR "CLSINDCB"
INOPEN   OPEN  (0,(INPUT,LEAVE)),    OPEN MACRO LIST FORM              X
               MF=L
INEXLST  DC    A(0)
INDCB    DCB   DSORG=PS,DEVD=DA,                                       X
               DDNAME=SYSIN,MACRF=GM,                                  X
               RECFM=FB,LRECL=80
INDCBND  DS    0F                  MARK THE DCB END
INDCBSZ  EQU   INDCBND-INDCB       DCB SIZE
         EJECT  ,
INAREA   DS    0CL80               SYSIN DATA SET INPUT AREA
INVOLI   DS    CL6     01-06       VOLUME SERIAL NUMBER
INC1     DS    C','    07          COMMA
INMOUNT  DS    C       08          MOUNT ATTRIBUTE (0 OR 1)
INC2     DS    C','    09          COMMA
INUSE    DS    C       10          USE ATTRIBUTE (0, 1, OR 2)
INC3     DS    C','    11          COMMA
INDEVT   DS    CL8     12-19       DEVICE TYPE
INS4     DS    C' '    20          SPACE OR COMMA
INMTMSG  DS    C       21          MOUNT MESSAGE SUPPRESSION
INS5     DS    C' '    22          SPACE, OR COMMA IF VARYOFF INFO
INSHR    DS    C' '    23          SHARED(S), UNSHARED(U) DVC STATUS
INVOF    DS    C' '    24          VARY VOLUME OFFLINE(V) INDICATOR
         ORG   INS5+1  23          OVERLAY OPTIONAL INFO
INOPINF  DS    CL58    23-80       OPTIONAL INFORMATION
         ORG   INAREA+L'INAREA    TO END OF THE AREA
*
*        -SYSPRINT- DATA SET WORK AREAS
PRFLAGS  DS    0A                    DATA SET PROCESSING FLAGS
PRFLAG1  DC    AL1(00)               DATA SET STATUS FLAG
PRF1OPEN EQU   X'01'                 THE DATA SET IS OPEN
PRFLAG2  DC    AL1(00)               RESERVED
PRFLAG3  DC    AL1(00)               RESERVED
PRFLAG4  DC    AL1(00)               RESERVED
PRSVOPNL DC    A(0)                  RLINK SAVE AREA FOR "OPNPRDCB"
PRSVCMDL DC    A(0)                  RLINK SAVE AREA FOR "PRTCMD"
PRSVCLSL DC    A(0)                  RLINK SAVE AREA FOR "CLSPRDCB"
PROPEN   OPEN  (0,(OUTPUT,LEAVE)),  OPEN MACRO LIST                    X
               MF=L
PREXLST  DC    A(0)                      EXIT LIST CONSTRUCTION AREA
PRDCB    DCB   DSORG=PS,DEVD=DA,                                       X
               DDNAME=SYSPRINT,MACRF=PM,                               X
               RECFM=FBA,LRECL=121
PRDCBND  DS    0F                  MARK THE DCB END
PRDCBSZ  EQU   PRDCBND-PRDCB       DCB SIZE
PRAREA   DS    CL121               SYSPRINT DATA SET OUTPUT AREA
         EJECT  ,
*
*        ONLINE DASD UNIT AND VOLUME TABLE.
*        EACH ENTRY IN THE TABLE HAS THE FOLLOWING FORMAT.....
*        01-03      UNIT ADDRESS IN EBCDIC
*        04-09      VOLUME SERIAL NUMBER IN EBCDIC
*        10         CONTROL FLAGS
*                   X'80'   VOLUME FOUND IN VATLST
*        11         ***RESERVED***
*        12         USE ATTRIBUTE FROM VATLST ENTRY
*        13-16      UCB ADDRESS
*
*
TBLENDAD DC    A(0)                LAST VOLUME TABLE ENTRY ADDRESS
TABLE    DS    0A                  DESIGNATE THE START OF THE TABLE
*
*
TBLENTRY DS    0CL16               MAP AN INDIVIDUAL TABLE ENTRY
TBLUNIT  DS    CL3                 UNIT ADDRESS IN EBCDIC
TBLVOLI  DS    CL6                 VOLUME SERIAL NUMBER
TBLFLAG1 DS    X                   TABLE ENTRY FLAG BYTE
TBLF1VAT EQU   X'80'               VOLUME SERIAL NUMBER FOUND IN VATLST
TBLF1VIR EQU   X'40'               VOLUME IS ON A VIRTUAL DEVICE
TBLF1ALO EQU   X'20'               UCB IS FLAGGED AS ALLOCATED
*        THE NEXT THREE FLAG BITS ARE SET BASED ON VALUES CONTAINED
*        IN BYTES 23 & 24 OF THE VATLST00 RECORD.
TBLF1UNS EQU   X'04'               UCB DEVICE TYPE -> UNSHARED
TBLF1SHR EQU   X'02'               UCB DEVICE TYPE -> SHARED
TBLF1VOF EQU   X'01'               UCB IS TO BE VARIED OFFLINE
TBLRSVD1 DS    XL1                 ***RESERVED***
TBLVLUSE DS    XL1                 USE ATTRIBUTE FROM VATLST ENTRY
TBLUCBAD DS    AL4                 UCB ADDRESS
         DS    2047CL(L'TBLENTRY)  ALLOW 2048 ENTRIES TOTAL
         ORG   *-L'TBLENTRY        TO ORIGIN OF LAST ENTRY
TBLENDPT DS    0C                  DESIGNATE THE LAST TABLE ENTRY
         ORG    ,                  TO END OF LAST ENTRY
         SPACE 3
ENDSECT  DS    0D                  MARK THE DSECT END
LENSECT  EQU   ENDSECT-IEFSECT     LENGTH OF DSECT WORK AREA
SBPSECT  EQU   001                 WORK AREA SUBPOOL
         TITLE 'VARYOFF - MODULE INITIALIZATION'
VARYOFF  CSECT
         USING *,R15               TEMPORARY BASE
         B     BYID                BRANCH AROUND MODULE IDENTIFIER
         DC    AL1(NDID-*)         IDENTIFIER LENGTH
         DC    CL8'VARYOFF '       MODULE NAME
         DC    CL1' '                     SPACE
         DC    CL9'LVL 03.00'      MOVULE VERSION AND LEVEL
         DC    CL1' '                     SPACE
         DC    CL8'&SYSDATE'       MODULE ASSEMBLY DATE
         DC    CL1' '                     SPACE
         DC    CL5'&SYSTIME'       MODULE ASSEMBLY TIME
NDID     EQU   *                   MARK IDENTIFIER END
BYID     DS    0H                  BRANCH POINT AROUND IDENTIFIER
         STM   R14,R12,12(R13)     SAVE GENERAL REGISTERS
         LA    RBASE1,0(,R15)      LOAD BASE REGISTER # 1
         LA    RBASE2,2048         LOAD
         LA    RBASE2,2048(,RBASE2)     BASE
         AR    RBASE2,RBASE1                 REGISTER # 2
         USING VARYOFF,RBASE1,RBASE2    ESTABLISH PERMANENT BASEREGS
         DROP  R15                 DROP TEMPORARY BASE
*
*
*        GET STORAGE FOR THE WORK  AREA
         L     R0,WORKSIZE         LOAD SP&SIZE FOR GETMAIN
         GETMAIN RU,               GET THE WORK AREA STORAGE           X
               LOC=(BELOW,ANY),    GET STORAGE BELOW 16M VIRTUAL       X
               LV=(0),             WORK AREA SIZE                      X
               SP=SBPSECT          WORK AREA SUBPOOL
         ST    R1,8(,R13)              CHAIN SAVE
         ST    R13,SAVE+4-IEFSECT(,R1) AREAS TOGETHER
         LR    RSAVE,R1            WORK AREA BASE REGISTER
         USING IEFSECT,RSAVE       WORK AREA ADDRESSABILITY
*
*
*        INITIALIZE THE WORK AREA
         XC    SAVE+0(4*01),SAVE+0 CLEAR THE
         XC    SAVE+8(4*16),SAVE+8 SAVE AREA
         XC    RETURNCD,RETURNCD   RETURN CODE BUCKET
         XC    OFFCOUNT,OFFCOUNT   COUNT OF VARY OFFLINE COMMANDS
         XC    MNTCOUNT,MNTCOUNT   COUNT OF        MOUNT COMMANDS
         XC    AUTHSAVE,AUTHSAVE   MODULE AUTHORIZATION SWITCHES
*
*
*        INITIALIZE THE -SYSIN- DCB AND ASSOCIATED AREAS
         XC    INFLAGS,INFLAGS     CLEAR THE DATA SET FLAGS
         MVC   INOPEN(4),OPENIN1   INITIALIZE OPEN/CLOSE LIST
         MVC   INDCB(INDCBND-INDCB),DCBIN1    DCB LIST
         LA    R1,GETINEOD         ADDRESS OF DATA END ROUTINE
         ST    R1,INEXLST          TEMPORARY STORE
         MVC   INDCB+(DCBEODAD+1-IHADCB)(3),INEXLST+1  UPDATE DCB
         LA    R1,INEXLST          ADDRESS OF EXIT LIST
         ST    R1,INEXLST          TEMPORARY STORE
         MVC   INDCB+(DCBEXLST+1-IHADCB)(3),INEXLST+1  UPDATE DCB
         LA    R1,INEXIT           OPEN EXIT ROUTINE ADDRESS
         ST    R1,INEXLST          STORE ADDRESS IN THE EXIT LIST
         MVI   INEXLST,X'85'       INDICATE DCB OPEN EXIT
*
*
*        INITIALIZE THE -SYSPRINT- DCB AND ASSOCIATED AREAS
         XC    PRFLAGS,PRFLAGS     CLEAR THE DATA SET FLAGS
         MVC   PROPEN(4),OPENPR1   INITIALIZE OPEN/CLOSE LIST
         MVC   PRDCB(PRDCBND-PRDCB),DCBPR1    DCB LIST
         LA    R1,PREXLST          ADDRESS OF EXIT LIST
         ST    R1,PREXLST          TEMPORARY STORE
         MVC   PRDCB+(DCBEXLST+1-IHADCB)(3),PREXLST+1  UPDATE DCB
         LA    R1,PREXIT           OPEN EXIT ROUTINE ADDRESS
         ST    R1,PREXLST          STORE ADDRESS IN THE EXIT LIST
         MVI   PREXLST,X'85'       INDICATE DCB OPEN EXIT
*
*
*        ANALYZE THE EXEC STATEMENT PARM FIELD
*        TO SEE IF THE PROGRAM IS TO EXECUTE IN TEST MODE.
PARMANAL DS    0H                  ANALYZE PARM FIELD
         L     R1,SAVE+4           POINT TO CALLER'S SAVE AREA
         L     R1,24(,R1)          CALLER'S PARM POINTER
         L     R1,0(,R1)           -> PARM FIELD
         LH    R0,0(,R1)           LOAD PARM LENGTH
         CH    R0,=Y(4)            TEST PARM LENGTH
         BNE   BYPARM              IF LN NOT CORRECT
         OC    2(4,R1),EBLANKS     FORCE UPPER CASE
         CLC   2(4,R1),=C'TEST'    PARM=TEST?
         BE    PARMTEST            IF PARM='TEST'
         CLC   2(4,R1),=C'DIAG'    PARM=DIAG?
         BE    PARMDIAG            IF PARM='DIAG'
         B     BYPARM              IF PARM UNRECOGNIZED
PARMTEST DS    0H                  PARM='TEST'
         MVI   TESTMODE,04         INDICATE PROGRAM IN TEST MODE
         B     BYPARM              END OF PARM SCAN
PARMDIAG DS    0H                  PARM='DIAG'
         MVI   TESTMODE,04         INDICATE PROGRAM IN TEST MODE
         MVI   DIAGMODE,04         INDICATE PROGRAM IN DIAG MODE
         B     BYPARM              END OF PARM SCAN
BYPARM   DS    0H                  END OF PARM SCAN
*
*
*        OPEN THE -SYSPRINT- DCB AND TAKE THE DCB EXIT
         BAL   RLINK,OPNPRDCB      OPEN THE SYSPRINT DCB
         BNZ   RC12                DCB COULD NOT BE OPENED
*
*
*        IF THE PROGRAM IS RUNNING IN TEST MODE,
*        ISSUE THE WARNING MESSAGE NOW THAT SYSPRINT IS OPEN.
MODEMSG  DS    0H
         CLI   TESTMODE,00         IS PROGRAM IN TEST MODE?
         BE    NOMODMSG            BYPASS MESSAGE IF NOT
         MVC   WTOAREA(WTOMSGAZ),WTOMSGA    MOVE IN ERROR MESSAGE
         CLI   DIAGMODE,04         IS PROGRAM IN DIAG MODE??
         BNE   *+L'*+6             BRANCH IF NOT
         MVC   WTOMSG+036(04),=C'DIAG'   INDICATE DIAG MODE IN MSG
         BAL   RLINK,WTOCMD        ISSUE WARNING MESSAGE
         BAL   RLINK,PRTCMD        PRINT WARNING MESSAGE AS WELL
NOMODMSG DS    0H
*
*
*        TEST THE MODULE'S AUTHORIZATION TO SEE
*        IF THE VARY OFFLINE OPERATOR COMMANDS SHOULD BE ISSUED.
TESTAUTH DS    0H                  TEST PROGRAM AUTHORIZATION
         TESTAUTH FCTN=1           TEST FOR AUTHORIZATION CODE 1
         STC   R15,AUTHFCTN        SAVE RETURN CODE IN WORK AREA
         LTR   R15,R15             TEST RETURN CODE
         BZ    BYAUTH              BRANCH IF AUTHORIZED
         MVC   WTOAREA(WTOMSG2Z),WTOMSG2    MOVE IN ERROR MESSAGE
         BAL   RLINK,PRTCMD        PRINT ERROR MESSAGE
         BAL   RLINK,WTOCMD        ISSUE ERROR MESSAGE
BYAUTH   DS    0H
         TITLE 'VARYOFF - BUILD THE DASD DEVICE TABLE'
*
***************************************************************
*                                                             *
*                                                             *
*        SCAN THRU THE LIST OF UCB'S AND SELECT               *
*        THE DASD DEVICES FOR INCLUSION IN THE TABLE.         *
*                                                             *
***************************************************************
*
*
*        INITIALIZE THE IOSVSUCB PARAMETER LIST, WORK AREAS,
*        AND REGISTERS FOR SCANNING THE DASD UCB'S.
BLDTBL00 DS   0H                   INITIALIZE FOR SCANNING THE UCB-S
         USING UCBOB,RUCB          UCB ADDRESSABILITY
         SPACE 1
         LA    RTBL1,TABLE-L'TBLENTRY    POINT TO 0'TH TABLE ENTRY
         ST    RTBL1,TBLENDAD      INITIALIZE LAST USED ENTRY ADDRESS
         SPACE 1
         LA    RWORK1,IVUWORK      -> 100-BYTE WORK AREA
         LA    RWORK2,IVUUCBTY     -> UCB TYPE BYTE
         LA    RWORK3,IVUUCBAD     -> UCB ADDRESS ANSWER AREA
         O     RWORK3,=X'80000000' SET HIGH-ORDER BIT ON
         STM   RWORK1,RWORK3,IVUPARM     INITIALIZE PARM LIST
         XC    IVUWORK,IVUWORK     SET 100-BYTE WORK AREA TO HEX ZEROS
         XC    IVUUCBAD,IVUUCBAD   SET UCB ADDRESS        TO HEX ZEROS
         MVI   IVUUCBTY,UCB3DACC   INDICATE DIRECT ACCESS DEVICE TYPE
*
*
*        GET THE NEXT UCB ADDESS.
*        IF THE UNIT IS ONLINE, FALL THRU TO SCAN THE TABLE.
BLDTBL1  DS    0H                  START OF UCB SCAN LOOP
         LA    R1,IVUPARM          -> IOSVSUCB PARAMETER LIST
         L     R15,CVTPTR          -> CVT
         USING CVTMAP,R15          CVT ADDRESSABILITY
         L     R15,CVTUCBSC        -> UCB SCAN ROUTINE
         DROP  R15                 DROP CVT ADDRESSABILITY
         BALR  R14,R15             GO TO UCB SCAN ROUTINE
         SPACE 1
         LTR   R15,R15             RETURN CODE NON-ZERO ??
         BNZ   BLDTBL9             IF END-OF-UCB'S, LOOP DONE
         SPACE 1
         L     RUCB,IVUUCBAD       -> RETURNED UCB ADDRESS
         CLI   UCBTBYT3,UCB3DACC   IS DEVICE DIRECT ACCESS?
         BNE   BLDTBL1             ADD ONLY DIRECT ACCESS TO TABLE
         TM    UCBSTAT,UCBONLI     IS THE UNIT ONLINE?
         BZ    BLDTBL1             LEAVE OUT OF TABLE IF OFFLINE
*
*        AN ONLINE DIRECT ACCESS UCB WAS FOUND.
*        INITIALIZE REGISTERS FOR LOOPING THRU THE TABLE.
BLDTBL2  DS    0H                  INITIALIZE FOR SCANNING THE TABLE
         LA    RTBL1,TABLE-L'TBLENTRY    POINT TO 0'TH TABLE ENTRY
         LA    RTBL2,L'TBLENTRY    TABLE ENTRY LENGTH
         L     RTBL3,=A(TBLENDPT-TBLENTRY)     OFFSET TO LAST ENTRY
         LA    RTBL3,TBLENTRY(RTBL3)           ADDR   OF LAST ENTRY
*
*        SEE IF AN ENTRY FOR THIS UNIT
*        IS ALREADY IN THE TABLE.
BLDTBL3  DS    0H                  START OF TABLE SCAN LOOP
         USING TBLENTRY,RTBL1      TABLE ENTRY ADDRESSABILITY
         BXH   RTBL1,RTBL2,BLDTBL6      IF TABLE CAPACITY EXCEEDED
         C     RTBL1,TBLENDAD      COMPARE TO CURRENT TABLE END
         BH    BLDTBL4             GO ADD NEXT ENTRY IF BEYOND
         CLC   TBLUNIT,UCBNAME     IF THE SAME UNIT ADDRESS,
         BE    BLDTBL5             GO ON TO THE NEXT UCB
         B     BLDTBL3             OTHERWISE KEEP LOOPING
*
*        THIS UNIT WAS NOT PREVIOUSLY ENCOUNTERED, SO
*        ADD THE NEW UNIT ENTRY TO THE TABLE.
BLDTBL4  DS    0H                  ADD A NEW ENTRY TO THE TABLE
         ST    RTBL1,TBLENDAD      UPDATE THE TABLE END ADDRESS
         XC    TBLENTRY,TBLENTRY   CLEAR THE TABLE ENTRY
         MVC   TBLUNIT,UCBNAME     MOVE IN THE UNIT ADDRESS
         MVC   TBLVOLI,UCBVOLI     MOVE IN THE VOLUME SERIAL NUMBER
         OC    TBLVOLI,EBLANKS     FORCE UPPER CASE
         TM    UCBTBYT2,UCBRVDEV   VIRTUAL DEVICE?
         BZ    *+L'*+4             BRANCH IF NOT VIRTUAL DEVICE
         OI    TBLFLAG1,TBLF1VIR   FLAG VIRTUAL DEVICE
         TM    UCBSTAT,UCBALOC     IS THE DEVICE ALLOCATED?
         BZ    *+L'*+4             BRANCH IF NOT ALLOCATED
         OI    TBLFLAG1,TBLF1ALO   FLAG ALLOCATED DEVICE
         ST    RUCB,TBLUCBAD       STORE UCB ADDRESS
         DROP  RTBL1               DROP TABLE ENTRY ADDRESSABILITY
*
*        LOOP BACK TO CONTINUE SCANNING THE UCB'S.
BLDTBL5  DS    0H                  THE MATCHING TABLE ENTRY WAS FOUND
         B     BLDTBL1             ADVANCE TO THE NEXT UCB
*
*        THE PHYSICAL CAPACITY OF THE TABLE HAS BEEN EXCEEDED.
*        ISSUE AN ERROR MESSAGE AND PROCESS THE ENTRIES
*        THAT WERE ENTERED IN THE TABLE.
BLDTBL6  DS    0H                  DASD TABLE CAPACITY EXCEEDED
         MVC   WTOAREA(WTOMSG9Z),WTOMSG9      MOVE ERROR MESSAGE
         BAL   RLINK,PRTCMD        PRINT ERROR MESSAGE
         BAL   RLINK,WTOCMD        WRITE ERROR MESSAGE
*
*        UCB LIST PROCESSING COMPLETE.
BLDTBL9  DS    0H                  UCB PROCESSING LOOP COMPLETE
         DROP  RUCB                DROP UCB ADDRESSABILITY
         TITLE 'VARYOFF - PROCESS THE VATLSTXX MEMBER'
*
***************************************************************
*                                                             *
*        READ A RECORD FOR VATLSTXX. AS EACH RECORD IS READ,  *
*        SEE IF A MATCHING ENTRY APPEARS IN THE TABLE.        *
*        IF A MATCHING ENTRY IS FOUND, FLAG THE ENTRY SO THAT *
*        IT WILL NOT BE VARIED OFFLINE UNLESS THE             *
*        "VARY OFFLINE" INDICATOR APPEARS IN THE VATLST00     *
*        RECORD FOR THE VOLUME.                               *
*                                                             *
***************************************************************
*
*
VATLP0   DS    0H                  OPEN SYS1.PARMLIB TO READ VATLSTXX
         BAL   RLINK,OPNINDCB      OPEN THE DATA SET
         BNZ   RC08                IF ERROR, SET RC=08 AND EXIT
VATLP1   DS    0H                  START OF VATLSTXX PROCESSING LOOP
         BAL   RLINK,GETIN         READ THE NEXT RECORD
         BZ    VATLP9              IF END OF DATA ON VATLSTXX
VATLP2   DS    0H                  INITIALIZE FOR SCANNING THE TABLE
         LA    RTBL1,TABLE-L'TBLENTRY    POINT TO 0'TH TABLE ENTRY
         LA    RTBL2,L'TBLENTRY    TABLE ENTRY LENGTH
         L     RTBL3,TBLENDAD      LAST TABLE ENTRY ADDRESS
         USING TBLENTRY,RTBL1      TABLE ENTRY ADDRESSABILITY
VATLP3   DS   0H                   START OF TABLE SCAN LOOP
         BXH   RTBL1,RTBL2,VATLP8  IF NOT FOUND, CONTINUE LOOP
         CLC   TBLVOLI,INVOLI      COMPARE VOLUME SERIAL NUMBERS
         BNE   VATLP3              KEEP LOOPING IF NO MATCH
         OI    TBLFLAG1,TBLF1VAT   FLAG ENTRY FOUND IN VATLSTXX
         OI    TBLFLAG1,TBLF1UNS+TBLF1SHR+TBLF1VOF     RESET
         XI    TBLFLAG1,TBLF1UNS+TBLF1SHR+TBLF1VOF     FLAGS
         SPACE 1
         MVC   TBLVLUSE,INUSE      USE ATTRIBUTE FROM VATLST
         CLI   TBLVLUSE,C'0'       LESS THAN "0" ??
         BL    VATLP3U             IF UNDEFINED
         CLI   TBLVLUSE,C'2'       GREATER THAN "2" ??
         BH    VATLP3U             IF UNDEFINED
         B     VATLP3V             IF OK
VATLP3U  MVI   TBLVLUSE,C'2'       FORCE "PRIVATE"
VATLP3V  DS   0H                   WHEN USE ATTRIBUTE IS VALIDATED
*
*        IF COLUMN 22 OF THE VATLSTXX RECORD IS A COMMA,
*        PROCESS THE OPTIONS IN COLUMNS 23 & 24.
VATLP4   DS    0H                  ENTRY FOUND
         CLI   INS5,C','           "," IN CC 22????
         BNE   VATLP8              DON'T PROCESS OPTIONS IF NOT
         LA    RWORK0,02           NUMBER OF OPTION BYTES TO PROCESS
         LA    RWORK1,INS5+1       ->FIRST OPTION BYTE
VATLP5   DS    0H                  ENTRY FOUND
         CLI   0(RWORK1),C' '      BLANK FOR END OF OPTIONS??
         BE    VATLP8              END OF VARYOFF OPTION INDICATORS
         CLI   0(RWORK1),C','      COMMA FOR END OF OPTIONS??
         BE    VATLP8              END OF VARYOFF OPTION INDICATORS
         CLI   0(RWORK1),C'S'-X'40' LOWER CASE "S" FOR SHARED??
         BE    VATLP5S             SET BITS FOR SHARED IF YES
         CLI   0(RWORK1),C'U'-X'40' LOWER CASE "U" FOR UNSHARED??
         BE    VATLP5U             SET BITS FOR UNSHARED IF YES
         CLI   0(RWORK1),C'N'      UPPER CASE "N" FOR NO CHANGE??
         BE    VATLP5N             RESET SHARED STATUS BITS IF YES
         CLI   0(RWORK1),C'N'-X'40' LOWER CASE "N" FOR NO CHANGE??
         BE    VATLP5N             RESET SHARED STATUS BITS IF YES
         CLI   0(RWORK1),C'V'      UPPER CASE "V" FOR VARY OFFLINE??
         BE    VATLP5V             SET BIT FOR VARY OFFLINE COMMAND
         CLI   0(RWORK1),C'V'-X'40' LOWER CASE "V" FOR VARY OFFLINE??
         BE    VATLP5V             SET BIT FOR VARY OFFLINE COMMAND
VATLP5N  DS    0H                  OPTION BYTE = "N"
         NI    TBLFLAG1,255-TBLF1UNS-TBLF1SHR        SET BITS OFF
         B     VATLP5Z             CONTINUE PROCESSING
VATLP5S  DS    0H                  OPTION BYTE = "S"
         NI    TBLFLAG1,255-TBLF1UNS-TBLF1SHR        SET BITS OFF
         OI    TBLFLAG1,TBLF1SHR   SET BIT ON
         B     VATLP5Z             CONTINUE PROCESSING
VATLP5U  DS    0H                  OPTION BYTE = "U"
         NI    TBLFLAG1,255-TBLF1UNS-TBLF1SHR        SET BITS OFF
         OI    TBLFLAG1,TBLF1UNS   SET BIT ON
         B     VATLP5Z             CONTINUE PROCESSING
VATLP5V  DS    0H                  OPTION BYTE = "V"
         NI    TBLFLAG1,255-TBLF1UNS-TBLF1SHR        SET BITS OFF
         OI    TBLFLAG1,TBLF1VOF   SET BIT ON
         B     VATLP5Z             CONTINUE PROCESSING
VATLP5Z  DS    0H                  END OF PROCESSING CURRENT OPTION
         LA    RWORK1,001(,RWORK1) ->NEXT OPTION BYTE
         BCT   RWORK0,VATLP5       LOOP IF ADDTTIONAL OPTION BYTES
         B     VATLP8              END OF OPTIONS FOR THIS TABLE ENTRY
*
*
VATLP8   DS    0H                  ENTRY FOUND OR TABLE FULLY SCANNED
         B     VATLP1              READ THE NEXT RECORD
         DROP  RTBL1               DROP TABLE ENTRY ADDRESSABILITY
VATLP9   DS    0H                  END OF VATLSTXX PROCESSING
         BAL   RLINK,CLSINDCB      CLOSE THE PARMLIB DATA SET
 TITLE 'VARYOFF - ISSUE THE MOUNT AND VARY OFFLINE OPERATOR COMMANDS'
*
*
*        INITIALIZE REGISTERS FOR SCANNING THE TABLE.
OFFLP00  DS    0H                  INITIALIZE FOR SCANNING THE TABLE
         LA    RTBL1,TABLE-L'TBLENTRY    POINT TO 0'TH TABLE ENTRY
         LA    RTBL2,L'TBLENTRY    TABLE ENTRY LENGTH
         L     RTBL3,TBLENDAD      LAST TABLE ENTRY ADDRESS
         USING TBLENTRY,RTBL1      TABLE ENTRY ADDRESSABILITY
*
*
*        SCAN LOOP RETURN POINT.
*        PICK UP THE NEXT TABLE ENTRY AN VALIDATE IT FOR PROCESSING.
OFFLP10  DS    0H                  START OF TABLE SCAN LOOP
         BXH   RTBL1,RTBL2,OFFLP70 IF TABLE EXHAUSTED, WRAPUP
         TM    TBLFLAG1,TBLF1VAT   WAS THE ENTRY FOUND IN VATLSTXX?
         BO    OFFLP30             PROCESS VOLUME LISTED IN VATLSTXX
         TM    TBLFLAG1,TBLF1ALO   IS THE DEVICE ALLOCATED?
         BO    OFFLP40             ISSUE ERROR MESSAGE IF YES
         B     OFFLP50             PROCESS NOT-ALLOCATED DEVICE
         EJECT  ,
***************************************************************
*                                                             *
*        THE VOLUME ON THE CURRENT DEVICE IS LISTED IN        *
*        VATLSTXX.  DETERMINE WHETHER TO CHANGE THE DEVICE'S  *
*        SHARED/UNSHARED STATUS, OR ISSUE A VARY OFFLINE      *
*        COMMAND.                                             *
*                                                             *
***************************************************************
OFFLP30  DS    0H
         TM    TBLFLAG1,TBLF1VIR   IS THE DEVICE VIRTUAL?
         BO    OFFLP60             CONTINUE W/ SCAN LOOP IF VIRTUAL
*
*        CHANGE THE UCB HARDWARE STATUS FROM SHARED TO UNSHARED
*        IN THE UCBTYPE FIELD.
OFFLP31  DS    0H                  BUILD THE VARY OFFLINE COMMAND
         TM    TBLFLAG1,TBLF1UNS   UNIT TO BE SET UNSHARED??
         BZ    OFFLP31Z            BRANCH AROUND ROUTINES IF YES
         BAL   RLINK,ZAPUCBUS      SET UCB UNSHARED STATUS
         BAL   RLINK,PRTCMD        GO TO PRINT ROUTINE
         BAL   RLINK,WTOCMD        WRITE OPERATOR MESSAGE
OFFLP31Z DS    0H                  CONTINUE PROCESSSING
*
*        CHANGE THE UCB HARDWARE STATUS FROM UNSHARED TO SHARED
*        IN THE UCBTYPE FIELD.
OFFLP32  DS    0H                  BUILD THE VARY OFFLINE COMMAND
         TM    TBLFLAG1,TBLF1SHR   UNIT TO BE SET SHARED??
         BZ    OFFLP32Z            BRANCH AROUND ROUTINES IF YES
         BAL   RLINK,ZAPUCBSH      SET UCB SHARED STATUS
         BAL   RLINK,PRTCMD        GO TO PRINT ROUTINE
         BAL   RLINK,WTOCMD        WRITE OPERATOR MESSAGE
OFFLP32Z DS    0H                  CONTINUE PROCESSSING
*
*        BUILD, PRINT, AND ISSUE THE VARY DEVICE OFFLINE COMMAND
*        FOR A VOLUME IN VATLSTXX THAT IS TO BE TAKEN OFFLINE.
OFFLP33  DS    0H                  BUILD THE VARY OFFLINE COMMAND
         TM    TBLFLAG1,TBLF1VOF   VOLUME TO BE VARIED OFFLINE??
         BZ    OFFLP33Z            BRANCH AROUND COMMAND IF NOT
         BAL   RLINK,BLDVARYF      GO BUILD VARY OFFLINE COMMAND
         BAL   RLINK,PRTCMD        GO TO PRINT ROUTINE
         BAL   RLINK,WTOCMD        WRITE COMMAND AS OPERATOR MESSAGE
         BAL   RLINK,ISSUECMD      ISSUE THE VARY OFFLINE COMMAND
OFFLP33Z DS    0H                  CONTINUE PROCESSSING
         EJECT  ,
*
*        IF THE VOLUME WAS LISTED IN VATLST, AND THE USE ATTRIBUTES
*        DISAGREE, ISSUE A MOUNT COMMAND TO CHANGE THE
*        USE ATTRIBUTE OF THE VOLUME SO THAT IT AGREES
*        WITH VATLST.
OFFLP34  NOP   OFFLP34Z            ****SET TO BRANCH TO DISABLE*****
         TM    TBLFLAG1,TBLF1VIR+TBLF1VOF     VIRTUAL/VARY OFFLINE ?
         BNZ   OFFLP34Z            BRANCH AROUND COMMAND IF YES
         L     RUCB,TBLUCBAD       LOAD UCB ADDRESS
         USING UCBOB,RUCB          UCB ADDRESSABILITY
         SPACE 1
         LA    RWORK0,X'0F'        LOAD MASK
         IC    RWORK1,TBLVLUSE     LOAD VATLST USE ATTRIBUTE
         NR    RWORK1,RWORK0       CONVERT TO BINARY INDEX: 0-2
         LR    RWORK2,RWORK1       COPY TO WORK REGISTER
         SLL   RWORK2,2            * 4 FOR BRANCH TABLE INDEX
         B     *+L'*(RWORK2)       SELECT BRANCH TO TESTS
         B     OFFLP34S    00      STORAGE
         B     OFFLP34U    01      PUBLIC
         B     OFFLP34P    02      PRIVATE
         SPACE 1
OFFLP34S TM    UCBSTAB,UCBBPRV+UCBBPUB    OTHER BITS SET ??
         BNZ   OFFLP34M                   ISSUE MOUNT IF YES
         TM    UCBSTAB,UCBBSTR            STORAGE ??
         BZ    OFFLP34M                   NO - ISSUE MOUNT COMMAND
         B     OFFLP34Z            CONTINUE PROCESSING
         SPACE 1
OFFLP34U TM    UCBSTAB,UCBBPRV+UCBBSTR    OTHER BITS SET ??
         BNZ   OFFLP34M                   ISSUE MOUNT IF YES
         TM    UCBSTAB,UCBBPUB            PUBLIC  ??
         BZ    OFFLP34M                   NO - ISSUE MOUNT COMMAND
         B     OFFLP34Z            CONTINUE PROCESSING
         SPACE 1
OFFLP34P TM    UCBSTAB,UCBBPUB+UCBBSTR    OTHER BITS SET ??
         BNZ   OFFLP34M                   ISSUE MOUNT IF YES
         TM    UCBSTAB,UCBBPRV            PRIVATE ??
         BZ    OFFLP34M                   NO - ISSUE MOUNT COMMAND
         B     OFFLP34Z            CONTINUE PROCESSING
         DROP  RUCB
         SPACE 1
OFFLP34M DS   0H
         BAL   RLINK,BLDMOUNT      GO BUILD MOUNT COMMAND
         BAL   RLINK,PRTCMD        GO TO PRINT ROUTINE
         BAL   RLINK,WTOCMD        WRITE COMMAND AS OPERATOR MESSAGE
         BAL   RLINK,ISSUECMD      ISSUE THE MOUNT COMMAND
OFFLP34Z DS   0H                  CONTINUE PROCESSSING
         B     OFFLP60             CONTINUE W/ SCAN LOOP
         EJECT  ,
***************************************************************
*                                                             *
*        THE DEVICE IS ALLOCATED BUT IS NOT LISTED IN         *
*        VATLSTXX.  ISSUE AN ERROR MESSAGE FOR THE ALLOCATED  *
*        DEVICE.                                              *
*                                                             *
***************************************************************
OFFLP40  DS    0H                  BUILD THE VARY OFFLINE COMMAND
         TM    TBLFLAG1,TBLF1VIR   IS THE DEVICE VIRTUAL?
         BO    OFFLP60             CONTINUE W/ SCAN LOOP IF VIRTUAL
*
*
*        IF THE VOLUME IS ALREADY MOUNTED,
*        DON'T ISSUE A COMMAND OR ERROR MESSAGE.
         L     RUCB,TBLUCBAD       LOAD UCB ADDRESS VALUE
         USING UCBOB,RUCB          UCB ADDRESSABILITY
         TM    UCBSTAT,UCBRESV+UCBPRES  PERM RES OR RESERVED??
         BZ    OFFLP40M            IF NEITHER, PROCESS VOLSER
         TM    UCBSTAB,UCBBPUB     PUBLIC?
         BO    OFFLP40M            PROCESS VOLSER IF YES
         B     OFFLP60             IF STORAGE OR PRIVATE, VOLUME       X
                                   WAS MOUNTED PREVIOUSLY
         DROP  RUCB                DROP UCB ADDRESSABILITY
*
*
*        ISSUE AN ERROR MESSAGE INDICATING THE VOLUME IS ALLOCATED
OFFLP40M DS    0H                  CHECK THE VOLSER FOR ACTION REQ'D
         MVC   WTOAREA(WTOMSG3Z),WTOMSG3  SKELETON CMD TO MSG AREA
         MVC   WTOMSG+016(L'TBLVOLI),TBLVOLI       TBL VOLUME SERIAL
         MVC   WTOMSG+033(L'TBLUNIT),TBLUNIT       TBL UNIT ADDRESS
         BAL   RLINK,PRTCMD        GO TO PRINT ROUTINE
         BAL   RLINK,WTOCMD        SEND ERROR MESSAGE TO OPERATOR
*
*
*        ANALYZE THE VOLSER TO DETERMINE WHETHER TO
*        ISSUE A MOUNT COMMAND OR VARY THE DEVICE OFFLINE.
OFFLP40V DS    0H                  CHECK THE VOLSER FOR ACTION REQ'D
         CLC   =C'DEV',TBLVOLI     DOES VOLSER BEGIN W/ "DEV" ??
         BE    OFFLP41             ISSUE VARY OFFLINE IF YES
         CLC   TBLVOLI,EBLANKS     IS VOLSER COMPLETELY BLANK??
         BE    OFFLP41             ISSUE VARY OFFLINE IF YES
         B     OFFLP42             GO ISSUE THE MOUNT COMMAND
*
*        BUILD, PRINT, AND ISSUE THE VARY DEVICE OFFLINE COMMAND
*        FOR AN ALLOCATED VOLUME NOT IN VATLSTXX
*        THAT IS TO BE TAKEN OFFLINE.
OFFLP41  DS    0H                  BUILD THE VARY OFFLINE COMMAND
         BAL   RLINK,BLDVARYF      GO BUILD VARY OFFLINE COMMAND
         BAL   RLINK,PRTCMD        GO TO PRINT ROUTINE
         BAL   RLINK,WTOCMD        WRITE COMMAND AS OPERATOR MESSAGE
         BAL   RLINK,ISSUECMD      ISSUE THE VARY OFFLINE COMMAND
         B     OFFLP60             CONTINUE W/ SCAN LOOP
*
*        BUILD AND ISSUE A MOUNT COMMAND
*        FOR THE ALLOCATED DEVICE.
OFFLP42  DS    0H
         LA    RWORK1,02           REQUEST "PRIVATE"
         BAL   RLINK,BLDMOUNT      GO BUILD MOUNT COMMAND
         BAL   RLINK,PRTCMD        GO TO PRINT ROUTINE
         BAL   RLINK,WTOCMD        WRITE COMMAND AS OPERATOR MESSAGE
         BAL   RLINK,ISSUECMD      ISSUE THE VARY OFFLINE COMMAND
         B     OFFLP60             CONTINUE W/ SCAN LOOP
         EJECT  ,
***************************************************************
*                                                             *
*        THE CURRENT DEVICE IS NOT IN VATLSTXX AND IS NOT     *
*        ALLOCATED.  DETERMINE WHETHER TO ISSUE A MOUNT       *
*        COMMAND FOR THE DEVICE, OR A VARY OFFLINE COMMAND.   *
*                                                             *
***************************************************************
OFFLP50  DS    0H
         TM    TBLFLAG1,TBLF1VIR   IS THE DEVICE VIRTUAL?
         BO    OFFLP60             CONTINUE W/ SCAN LOOP IF VIRTUAL
*
*
*        IF THE VOLUME IS ALREADY MOUNTED, DON'T ISSUE A COMMAND.
         L     RUCB,TBLUCBAD       LOAD UCB ADDRESS VALUE
         USING UCBOB,RUCB          UCB ADDRESSABILITY
         TM    UCBSTAT,UCBRESV+UCBPRES  PERM RES OR RESERVED??
         BZ    OFFLP50V            IF NEITHER, PROCESS VOLSER
         TM    UCBSTAB,UCBBPUB     PUBLIC?
         BO    OFFLP50V            PROCESS VOLSER IF YES
         B     OFFLP60             IF STORAGE OR PRIVATE, VOLUME       X
                                   WAS MOUNTED PREVIOUSLY
         DROP  RUCB                DROP UCB ADDRESSABILITY
*
*
*        ANALYZE THE VOLSER TO DETERMINE WHETHER TO
*        ISSUE A MOUNT COMMAND OR VARY THE DEVICE OFFLINE.
OFFLP50V DS    0H                  CHECK THE VOLSER FOR ACTION REQ'D
         CLC   =C'DEV',TBLVOLI     DOES VOLSER BEGIN W/ "DEV" ??
         BE    OFFLP51             ISSUE VARY OFFLINE IF YES
         CLC   =C'DRUM',TBLVOLI    DOES VOLSER BEGIN W/ "DRUM" ??
         BE    OFFLP51             ISSUE VARY OFFLINE IF YES
         CLC   TBLVOLI,EBLANKS     IS VOLSER COMPLETELY BLANK??
         BE    OFFLP51             ISSUE VARY OFFLINE IF YES
         B     OFFLP52             ISSUE A MOUNT FOR THE DEVICE
*
*        BUILD, PRINT, AND ISSUE THE VARY DEVICE OFFLINE COMMAND
*        FOR A VOLUME NOT IN VATLSTXX THAT IS TO BE TAKEN OFFLINE.
OFFLP51  DS    0H                  BUILD THE VARY OFFLINE COMMAND
         BAL   RLINK,BLDVARYF      GO BUILD VARY OFFLINE COMMAND
         BAL   RLINK,PRTCMD        GO TO PRINT ROUTINE
         BAL   RLINK,WTOCMD        WRITE COMMAND AS OPERATOR MESSAGE
         BAL   RLINK,ISSUECMD      ISSUE THE VARY OFFLINE COMMAND
         B     OFFLP60             CONTINUE W/ SCAN LOOP
*
*        BUILD AND ISSUE A MOUNT COMMAND
*        FOR THE DEVICE THAT IS TO BE LEFT ONLINE.
OFFLP52  DS    0H
         LA    RWORK1,02           REQUEST "PRIVATE"
         BAL   RLINK,BLDMOUNT      GO BUILD MOUNT COMMAND
         BAL   RLINK,PRTCMD        GO TO PRINT ROUTINE
         BAL   RLINK,WTOCMD        WRITE COMMAND AS OPERATOR MESSAGE
         BAL   RLINK,ISSUECMD      ISSUE THE VARY OFFLINE COMMAND
         B     OFFLP60             CONTINUE W/ SCAN LOOP
         EJECT  ,
*
*        CONTINUE WITH THE SCAN LOOP
OFFLP60  DS    0H
         B     OFFLP10             CONTINUE LOOPING
         SPACE 10
***************************************************************
*                                                             *
*        IF VARY OFFLINE COMMANDS WERE ISSUED,                *
*        A "S DEALLOC" COMMAND MUST ALSO BE ISSUED.           *
*                                                             *
***************************************************************
OFFLP70  DS    0H
         ICM   RWORK1,B'1111',OFFCOUNT  LOAD COUNT VALUE AND TEST
         BZ    OFFLP70Z                 BYPASS "S DEALLOC" IF ZERO
         MVC   WTOAREA(CMDDEALZ),CMDDEAL     SKELETON CMD TO MSG AREA
         CVD   RWORK1,PACKAREA          CONVERT COUNT TO PACKED DEC
         OI    PACKAREA+L'PACKAREA-1,X'0F'   SET EBCDIC SIGN
         UNPK  WTOMSG+018(04),PACKAREA       PUT COUNT IN MESSAGE
         MVC   WTOMSG+047(06),=C'BUILT '     ASSUME COMMAND IS BUILT
         CLI   AUTHFCTN,00              IS THE PROGRAM AUTHORIZED?
         BNE   OFFLP70B                 BRANCH IF NOT AUTHORIZED
         CLI   TESTMODE,04              IS THE PROGRAM IN TEST MODE?
         BE    OFFLP70B                 BRANCH IF IN TEST MODE
         MVC   WTOMSG+047(06),=C'ISSUED'  COMMAND WILL BE ISSUED
OFFLP70B DS    0H                  CONTINUE PROCESSSING THE VARY OFFLN
         BAL   RLINK,PRTCMD        PRINT THE COMMAND
         BAL   RLINK,WTOCMD        WRITE COMMAND AS OPERATOR MESSAGE
         BAL   RLINK,ISSUECMD      ISSUE THE COMMAND
OFFLP70Z DS    0H                  CONTINUE PROCESSSING THE VARY OFFLN
         EJECT  ,
***************************************************************
*                                                             *
*        ISSUE MESSAGES FOR THE NUMBER OF COMMANDS            *
*        THAT WERE BUILT OR ISSUED.                           *
*                                                             *
***************************************************************
*
*        ISSUE MESSAGE FOR THE NUMBER OF VARY OFFLINE COMMANDS:
OFFLP80  DS    0H
         MVC   WTOAREA(WTOMSG7Z),WTOMSG7  SKELETON CMD TO MSG AREA
         MVC   WTOMSG+043(06),=C'BUILT '  ASSUME COMMAND IS ONLY BUILT
         CLI   AUTHFCTN,00         IS THE PROGRAM AUTHORIZED?
         BNE   OFFLP80C            BRANCH IF NOT AUTHORIZED
         CLI   TESTMODE,04         IS THE PROGRAM IN TEST MODE?
         BE    OFFLP80C            BRANCH IF IN TEST MODE
         MVC   WTOMSG+043(06),=C'ISSUED'  COMMAND WILL BE ISSUED
OFFLP80C ICM   RWORK1,15,OFFCOUNT  LOAD COUNT VALUE AND TEST
         CVD   RWORK1,PACKAREA     CONVERT COUNT TO PACKED DECIMAL
         OI    PACKAREA+L'PACKAREA-1,X'0F' SET EBCDIC SIGN
         UNPK  WTOMSG+009(04),PACKAREA     PUT COUNT IN MESSAGE
         BAL   RLINK,PRTCMD        GO TO PRINT ROUTINE
         BAL   RLINK,WTOCMD        SEND ERROR MESSAGE TO OPERATOR
OFFLP80Z DS    0H
*
*        ISSUE MESSAGE FOR THE NUMBER OF MOUNT COMMANDS:
OFFLP85  DS    0H
         MVC   WTOAREA(WTOMSG8Z),WTOMSG8  SKELETON CMD TO MSG AREA
         MVC   WTOMSG+036(06),=C'BUILT '  ASSUME COMMAND IS ONLY BUILT
         CLI   AUTHFCTN,00         IS THE PROGRAM AUTHORIZED?
         BNE   OFFLP85C            BRANCH IF NOT AUTHORIZED
         CLI   TESTMODE,04         IS THE PROGRAM IN TEST MODE?
         BE    OFFLP85C            BRANCH IF IN TEST MODE
         MVC   WTOMSG+036(06),=C'ISSUED'  COMMAND WILL BE ISSUED
OFFLP85C ICM   RWORK1,15,MNTCOUNT  LOAD COUNT VALUE AND TEST
         CVD   RWORK1,PACKAREA     CONVERT COUNT TO PACKED DECIMAL
         OI    PACKAREA+L'PACKAREA-1,X'0F' SET EBCDIC SIGN
         UNPK  WTOMSG+009(04),PACKAREA     PUT COUNT IN MESSAGE
OFFLP85D BAL   RLINK,PRTCMD        GO TO PRINT ROUTINE
         BAL   RLINK,WTOCMD        SEND ERROR MESSAGE TO OPERATOR
OFFLP85Z DS    0H
         EJECT  ,
***************************************************************
*                                                             *
*        VARY OFFLINE AND MOUNT COMMAND PROCESSING COMPLETE   *
*                                                             *
***************************************************************
OFFLP90  DS    0H                  END OF COMMAND PROCESSING
         DROP  RTBL1               DROP TABLE ENTRY ADDRESSABILITY
         B     RC00                RETURN TO CALLER
         TITLE 'VARYOFF - RETURN TO CALLER SEQUENCE'
*
*
*        EXIT WITH THE PROPER RETURN CODE
*
*
RC00     DS    0H
         MVI   RETURNCD+3,00       SUCCESSFUL COMPLETION
         B     LEAVE
RC04     DS    0H
         MVI   RETURNCD+3,04       INVALID PARM FIELD DATA LENGTH
         B     LEAVE
RC08     DS    0H
         MVI   RETURNCD+3,08       UNABLE TO OPEN SYSIN DATA SET
         B     LEAVE
RC12     DS    0H
         MVI   RETURNCD+3,12       UNABLE TO OPEN SYSPRINT DATA SET
         B     LEAVE
         SPACE 5
LEAVE    DS    0H                  CLEAN UP BEFORE RETURNING
         CLI   DIAGMODE,04         DIAGNOSTIC MODE ?
         BNE   *+L'*+2             BRANCH IF NOT AROUND S0C1
         DC    Y(0)                DIAGNOSTIC S0C1
*
*        CLOSE THE -SYSPRINT- DCB
         BAL   RLINK,CLSPRDCB      CLOSE THE SYSPRINT DCB IF OPEN
*
*        RELOAD THE CALLER'S REGISTERS,
*        RELEASE THE WORK AREA, AND RETURN.
         LR    R1,RSAVE            ADDRESS TO FREEMAIN
         L     R2,RETURNCD         RETURN CODE
         L     R13,SAVE+4          CALLER'S SAVE AREA
         L     R0,WORKSIZE         LOAD SP & SIZE FOR FREEMAIN
         FREEMAIN RU,              RELEASE THE WORK AREA               X
               LV=(0),             WORK AREA SIZE                      X
               A=(1),              WORK AREA ADDRESS                   X
               SP=SBPSECT          WORK AREA SUBPOOL
         XC    8(4,R13),8(R13)     CLEAR CALLER'S -> OUR SAVE AREA
         LR    R15,R2              RETURN CODE TO R15
         RETURN    (14,12),RC=(15)
         TITLE 'VARYOFF - SYSIN DATA SET PROCESSING ROUTINES'
*
*
*        SYSIN DCB OPEN ROUTINE
*
*        OPEN THE -SYSIN- DCB AND TAKE THE DCB EXIT
OPNINDCB DS    0H
         ST    RLINK,INSVOPNL      SAVE RLINK REGISTER VALUE
         OPEN  (INDCB,(INPUT,LEAVE)),MF=(E,INOPEN)
         TM    INDCB+(DCBOFLGS-IHADCB),X'10'   WAS OPEN SUCCESSFUL?
         BZ    OPNINERR            ISSUE ERROR MESSAGE IF YES
         OI    INFLAG1,INF1OPEN    INDICATE DATA SET IS OPEN
         LA    R15,00              SET ZERO RETURN CODE
         B     OPNINEND            GO RETURN TO CALLER
OPNINERR DS    0H
         MVC   WTOAREA(WTOMSG1Z),WTOMSG1    MOVE IN ERROR MESSAGE
         MVC   WTOMSG+17(8),INDCB+(DCBDDNAM-IHADCB) COPY DD NAME
         BAL   RLINK,PRTCMD        PRINT ERROR MESSAGE
         BAL   RLINK,WTOCMD        WRITE OPERATOR MESSAGE
         LA    R15,08              SET NON-ZERO RETURN CODE
OPNINEND LTR   R15,R15             SET CC FROM RETURN CODE
         L     RLINK,INSVOPNL      RELOAD RETURN REGISTER VALUE
         BR    RLINK               RETURN TO CALLER
         EJECT  ,
*
*
*        SYSIN DCB OPEN EXIT
*
*        THIS ROUTINE SUPPLIES DCB PARAMETERS
*        WHICH HAVE NOT BEEN SUPPLIED BY OPEN TIME.
*        VALUES WHICH WILL BE SUPPLIED ARE....
*
*                   BLKSIZE
*
INEXIT   DS    0H
         LH    R1,INDCB+(DCBBLKSI-IHADCB)            LOAD BLKSIZE
         LH    R15,INDCB+(DCBLRECL-IHADCB)           LOAD LRECL
INEXTF1  DS    0H
         LTR   R1,R1               WAS BLKSIZE SUPPLIED?
         BNZ   INEXTF2             YES - BRANCH
         LR    R1,R15              SET BLKSIZE=LRECL
*        FORCE BLKSIZE TO AN EVEN MULTIPLE OF LRECL
INEXTF2  DS    0H
         SR    R0,R0               ZERO R0 FOR DIVIDE
         DR    R0,R15              DIVIDE BLKSIZE BY LRECL
         LTR   R1,R1               IF QUOTIENT IS ZERO
         BNZ   *+L'*+4             DO NOT FORCE
         LA    R1,1                BLKSIZE=LRECL
         MR    R0,R15              RECOMPUTE BLKSIZE
         STH   R1,INDCB+(DCBBLKSI-IHADCB)    STORE BLKSIZE
         BR    RLINK               RETURN TO OPEN ROUTINE
         EJECT  ,
*
*
*        SYSIN DCB READ RECORD ROUTINE
*
*        THIS ROUTINE READS THE NEXT RECORD FROM THE VATLSTXX
*        MEMBER OF PARMLIB INTO "INAREA".
*
GETIN    DS    0H
         ST    RLINK,INSVGETL      SAVE RETURN REGISTER VALUE
         TM    INFLAG1,INF1EOD     IF EOD PREVIOUSLY FLAGGED,
         BO    GETINEOD            EXIT VIA EOD ROUTINE
         GET   INDCB,INAREA        READ THE NEXT VATLSTXX RECORD
         SLR   RLINK,RLINK         SET NON-ZERO RETURN CODE
         L     RLINK,INSVGETL      RELOAD RETURN REGISTER VALUE
         BR    RLINK               RETURN TO CALLER
GETINEOD DS    0H
         OI    INFLAG1,INF1EOD     SET EOD-OF-DATA FLAG
         MVI   INAREA,X'FF'        FILL INPUT AREA
         MVC   INAREA+1(L'INAREA-1),INAREA    WITH HIGH-VALUES
         SR    RLINK,RLINK         SET ZERO RETURN CODE
         L     RLINK,INSVGETL      RELOAD RETURN REGISTER VALUE
         BR    RLINK               RETURN TO CALLER
         EJECT  ,
*
*
*        SYSIN DCB CLOSE ROUTINE
*
*
*        CLOSE THE -SYSIN- DCB
CLSINDCB DS    0H
         ST    RLINK,INSVCLSL      SAVE RLINK REGISTER VALUE
         TM    INFLAG1,INF1OPEN    IS SYSIN OPEN?
         BZ    CLSINERR            BYPASS CLOSE IF NOT
         MVC   INOPEN(4),CLOSIN1   INITIALIZE OPEN/CLOSE LIST
         CLOSE (INDCB,LEAVE),      CLOSE THE DATA SET                  X
               MF=(E,INOPEN)
         FREEPOOL INDCB            RELEASE THE BUFFER POOL
         NI    INFLAG1,255-INF1OPEN   CLEAR DATASET OPEN FLAG
         LA    R15,00              SET ZERO RETURN CODE
         B     CLSINEND            GO RETURN TO CALLER
CLSINERR DS    0H                  THE DATA SET IS ALREADY CLOSED
         LA    R15,04              SET NON-ZERO RETURN CODE
CLSINEND LTR   R15,R15             SET CC FROM RETURN CODE
         L     RLINK,INSVCLSL      RELOAD RETURN REGISTER VALUE
         BR    RLINK               RETURN TO CALLER
         TITLE 'VARYOFF - SYSPRINT DATA SET PROCESSING ROUTINES'
*
*
*         SYSPRINT DCB OPEN ROUTINE
*
*        OPEN THE -SYSPRINT- DCB AND TAKE THE DCB EXIT
OPNPRDCB DS    0H
         ST    RLINK,PRSVOPNL      SAVE RLINK REGISTER VALUE
         OPEN  (PRDCB,(OUTPUT,LEAVE)),MF=(E,PROPEN)
         TM    PRDCB+(DCBOFLGS-IHADCB),X'10'   WAS OPEN SUCCESSFUL?
         BZ    OPNPRERR            ISSUE ERROR MESSAGE IF YES
         OI    PRFLAG1,PRF1OPEN    INDICATE DATA SET IS OPEN
         LA    R15,00              SET ZERO RETURN CODE
         B     OPNPREND            GO RETURN TO CALLER
OPNPRERR DS    0H
         MVC   WTOAREA(WTOMSG1Z),WTOMSG1    MOVE IN ERROR MESSAGE
         MVC   WTOMSG+17(8),PRDCB+(DCBDDNAM-IHADCB) COPY DD NAME
         BAL   RLINK,WTOCMD        ISSUE OPERATOR MESSAGE
         LA    R15,12              SET NON-ZERO RETURN CODE
OPNPREND LTR   R15,R15             SET CC FROM RETURN CODE
         L     RLINK,PRSVOPNL      RELOAD RETURN REGISTER VALUE
         BR    RLINK               RETURN TO CALLER
         EJECT  ,
*
*
*        SYSPRINT DCB OPEN EXIT
*
*        THIS ROUTINE SUPPLIES DCB PARAMETERS
*        WHICH HAVE NOT BEEN SUPPLIED BY OPEN TIME.
*        VALUES WHICH WILL BE SUPPLIED ARE....
*
*                   BLKSIZE
*
PREXIT   DS    0H
         LH    R1,PRDCB+(DCBBLKSI-IHADCB)            LOAD BLKSIZE
         LH    R15,PRDCB+(DCBLRECL-IHADCB)           LOAD LRECL
PREXTF1  DS    0H
         LTR   R1,R1               WAS BLKSIZE SUPPLIED?
         BNZ   PREXTF2             YES - BRANCH
         LR    R1,R15              SET BLKSIZE=LRECL
*        FORCE BLKSIZE TO AN EVEN MULTIPLE OF LRECL
PREXTF2  DS    0H
         SR    R0,R0               ZERO R0 FOR DIVIDE
         DR    R0,R15              DIVIDE BLKSIZE BY LRECL
         LTR   R1,R1               IF QUOTIENT IS ZERO
         BNZ   *+L'*+4             DO NOT FORCE
         LA    R1,1                BLKSIZE=LRECL
         MR    R0,R15              RECOMPUTE BLKSIZE
         STH   R1,PRDCB+(DCBBLKSI-IHADCB)    STORE BLKSIZE
         BR    RLINK               RETURN TO OPEN ROUTINE
         EJECT  ,
*
*
*        SYSPRINT PRINT OPERATOR MSG/COMMAND ROUTINE
*
*        THIS ROUTINE WRITES A PRINT LINE FROM THE OPERATOR
*        COMMAND OR MESSAGE THAT HAS BEEN BUILT IN THE WTO AREA.
*
PRTCMD   DS    0H
         ST    RLINK,PRSVCMDL      SAVE RETURN REGISTER VALUE
         MVI   PRAREA,X'40'         CLEAR
         MVC   PRAREA+1(L'PRAREA-1),PRAREA
         ICM   RWORK1,15,WTOLEN    LOAD MSG LENGTH & MCS FLAGS
         BAL   RLINK,PRTHEX        GET EBCDIC HEX
         EX    0,PRTCMDML          MOVE LENGTH
         EX    0,PRTCMDMM          MOVE MCS FLAGS
         LH    RWORK1,WTOLEN       MSG LENGTH+4
         SH    RWORK1,=Y(4)        CALCULATE MESSAGE TEXT LENGTH
         LA    RWORK0,099          MAXIMUM LENGTH TO COPY
         CR    RWORK1,RWORK0       COMPARE LENGTH TO MAXIMUM
         BNH   *+L'*+2             BRANCH IF LENGTH LE MAXIMUM
         LR    RWORK1,RWORK0       LIMIT COPY TO MAXIMUM LENGTH
         BCTR  RWORK1,0            DECREMENT LENGTH FOR MVC
         EX    RWORK1,PRTCMDMT     MOVE COMMAND TEXT TO OUTPUT AREA
         TM    WTOMCS,X'80'        IF MCS FLAGS ARE ABSENT,
         BZ    PRTCMDPT            GO WRITE OUTPUT LINE
         LA    RWORK1,WTOAREA      ADDRESS OF WTO AREA
         AH    RWORK1,WTOLEN       POINT TO DESCRIPTOR CODES
         ICM   RWORK1,15,0(RWORK1) LOAD DESCRIPTOR & ROUTE CODES
         BAL   RLINK,PRTHEX        CONVERT TO EBCDIC HEX
         EX    0,PRTCMDMD          MOVE DESCRIPTOR CODES
         EX    0,PRTCMDMR          MOVE ROUTE CODES
PRTCMDPT DS    0H                  PUT OUTPUT LINE
         PUT   PRDCB,PRAREA        WRITE OUTPUT LINE
         L     RLINK,PRSVCMDL      RELOAD RETURN REGISTER
         BR    RLINK               RETURN TO CALLER
         SPACE 5
PRTHEX   DS    0H                  CONVERT BINARY TO EBCDIC HEX
         ST    RWORK1,PACK2        STORE DATA IN PACK AREA
         UNPK  PACK1(9),PACK2(5)
         NC    PACK1(8),X#0F0F     CLEAR ZONES
         TR    PACK1(8),X#09AF     CONVERT TO EBCDIC
         BR    RLINK               RETURN TO CALLER
         SPACE 2
PRTCMDML MVC   PRAREA+001(004),PACK1+00   MOVE LEN  TO OUTPUT
PRTCMDMM MVC   PRAREA+006(004),PACK1+04   MOVE MCS FLAGS TO OUTPUT
PRTCMDMT MVC   PRAREA+011(*-*),WTOMSG     MOVE TEXT TO OUTPUT
PRTCMDMD MVC   PRAREA+111(004),PACK1+00   MOVE DESCRIPTOR CODES
PRTCMDMR MVC   PRAREA+116(004),PACK1+04   MOVE ROUTE CODES
         EJECT  ,
*
*
*        SYSPRINT DCB CLOSE ROUTINE
*
*        CLOSE THE -SYSPRINT- DCB
CLSPRDCB DS    0H
         ST    RLINK,PRSVCLSL      SAVE RLINK REGISTER VALUE
         TM    PRFLAG1,PRF1OPEN    IS SYSPRINT OPEN?
         BZ    CLSPRERR            BYPASS CLOSE IF NOT
         MVC   PROPEN(4),CLOSPR1   INITIALIZE OPEN/CLOSE LIST
         CLOSE (PRDCB,LEAVE),      CLOSE THE DATA SET                  X
               MF=(E,PROPEN)
         FREEPOOL PRDCB            RELEASE THE BUFFER POOL
         NI    PRFLAG1,255-PRF1OPEN RESET DATASET OPEN FLAG
         LA    R15,00              SET ZERO RETURN CODE
         B     CLSPREND            GO RETURN TO CALLER
CLSPRERR DS    0H                  THE DATA SET IS ALREADY CLOSED
         LA    R15,04              SET NON-ZERO RETURN CODE
CLSPREND LTR   R15,R15             SET CC FROM RETURN CODE
         L     RLINK,PRSVCLSL      RELOAD RETURN REGISTER VALUE
         BR    RLINK               RETURN TO CALLER
         TITLE 'VARYOFF - BUILD MOUNT COMMAND SUBROUTINE'
***************************************************************
*                                                             *
*        BUILD AND ISSUE A MOUNT COMMAND                      *
*        FOR THE TABLE ENTRY WHOSE ADDRESS WAS PASSED         *
*        IN "RTBL1".                                          *
*                                                             *
*        THE DESIRED USE ATTRIBUTE IS PASSED IN RWORK1:       *
*              00    STORAGE                                  *
*              01    PUBLIC                                   *
*              02    PRIVATE                                  *
*                                                             *
***************************************************************
BLDMOUNT DS    0H
         USING TBLENTRY,RTBL1           TABLE ENTRY ADDRESSABILITY
         ST    RLINK,MCSVCMDL           SAVE RETURN REGISTER VALUE
         SPACE 1
         LR    RWORK3,RWORK1            SAVE THE USE ATTRIBUTE
         LA    RWORK1,02                HIGHEST USE ATTRIBUTE          X
                                        DEFINED (PRIVATE)
         CLR   RWORK3,RWORK1            SEE IF WITHIN RANGE
         BNH   *+L'*+4                  BRANCH IF WITHIN RANGE
         LA    RWORK3,02                FORCE USE=PRIVATE
         SPACE 1
*
*        MOVE THE SKELETON MOUNT COMMAND TO THE MESSAGE AREA.
BLDMC01  DS    0H
         MVC   WTOAREA(CMDMNTZ),CMDMNT  SKELETON CMD TO MSG AREA
         MVC   WTOMSG+006(L'TBLUNIT),TBLUNIT       TBL UNIT ADDRESS
         MVC   WTOMSG+018(L'TBLVOLI),TBLVOLI       TBL VOLUME SERIAL
*
*        COMPRESS BLANKS FROM THE END OF THE VOLUME SERIAL NUMBER
BLDMC02  DS    0H
         LA    RWORK0,L'TBLVOLI    LENGTH OF THE VOLUME SERIAL NO
         LA    RWORK1,WTOMSG+018   VOLSER START IN MSG
BLDMC03  CLI   0(RWORK1),C' '      CHECK FOR TRAILING BLANK
         BE    BLDMC04             BRANCH IF BLANK
         LA    RWORK1,1(,RWORK1)   TO NEXT BYTE OF VOLSER
         BCT   RWORK0,BLDMC03      LOOP TILL END
*
*        MOVE IN THE REST OF THE MOUNT COMMAND
BLDMC04  MVC   000(06,RWORK1),=C'),USE='
         LA    RWORK1,06(,RWORK1)  POINT TO USE VALUE AREA
*
*        MOVE IN THE USE ATTRIBUTE
BLDMC05  SLL   RWORK3,2            USE ATTRIBUTE VALUE * 4
         B     *+L'*(RWORK3)       SELECT BRANCH
         B     BLDMC05S       00   STORAGE
         B     BLDMC05U       01   PUBLIC
         B     BLDMC05P       02   PRIVATE
BLDMC05S MVC   000(10,RWORK1),=CL10'STORAGE   '
         B     BLDMC06             CONTINUE PROCESSING
BLDMC05U MVC   000(10,RWORK1),=CL10'PUBLIC    '
         B     BLDMC06             CONTINUE PROCESSING
BLDMC05P MVC   000(10,RWORK1),=CL10'PRIVATE   '
         B     BLDMC06             CONTINUE PROCESSING
*
*        INDICATE WHETHER THE COMMAND WILL BE ISSUED
BLDMC06  MVC   WTOMSG+047(06),=C'BUILT '  ASSUME COMMAND IS ONLY BUILT
         CLI   AUTHFCTN,00         IS THE PROGRAM AUTHORIZED?
         BNE   BLDMC07             BRANCH IF NOT AUTHORIZED
         CLI   TESTMODE,04         IS THE PROGRAM IN TEST MODE?
         BE    BLDMC07             BRANCH IF IN TEST MODE
         MVC   WTOMSG+047(06),=C'ISSUED'  COMMAND WILL BE ISSUED
*
*        UPDATE THE MOUNT COMMAND COUNT.
BLDMC07  DS    0H
         L     RWORK1,MNTCOUNT     ADD
         LA    RWORK1,1(,RWORK1)   1
         ST    RWORK1,MNTCOUNT     TO MOUNT COMMAND COUNT
*
*        RETURN TO THE CALLER WITH THE MOUNT COMMAND BUILT.
BLDMC08  LR    RWORK1,RWORK3       RESTORE THE USE ATTR VALUE
         L     RLINK,MCSVCMDL      RELOAD RETURN REGISTER VALUE
         BR    RLINK               RETURN TO CALLER
         DROP  RTBL1               DROP TABLE ENTRY ADDRESSABILITY
         TITLE 'VARYOFF - BUILD VARY OFFLINE COMMAND SUBROUTINE'
***************************************************************
*                                                             *
*        BUILD A VARY OFFLINE COMMAND                         *
*        FOR THE TABLE ENTRY WHOSE ADDRESS WAS PASSED         *
*        IN "RTBL1".                                          *
*                                                             *
***************************************************************
BLDVARYF DS    0H
         USING TBLENTRY,RTBL1      TABLE ENTRY ADDRESSABILITY
         ST    RLINK,VCSVCMDL      SAVE RETURN REGISTER VALUE
*
*        COPY THE COMMAND SKELETON TO THE MESSAGE AREA
*        FOR A VOLUME IN VATLSTXX THAT IS TO BE TAKEN OFFLINE.
BLDVC01  DS    0H                  BUILD THE VARY OFFLINE COMMAND
         MVC   WTOAREA(CMDVARYZ),CMDVARY  SKELETON CMD TO MSG AREA
         MVC   WTOMSG+05(L'TBLUNIT),TBLUNIT        TBL UNIT ADDRESS
         MVC   WTOMSG+20(L'TBLVOLI),TBLVOLI        TBL VOLUME SERIAL
         MVC   WTOMSG+047(06),=C'BUILT '  ASSUME COMMAND IS ONLY BUILT
         CLI   AUTHFCTN,00         IS THE PROGRAM AUTHORIZED?
         BNE   BLDVC02             BRANCH IF NOT AUTHORIZED
         CLI   TESTMODE,04         IS THE PROGRAM IN TEST MODE?
         BE    BLDVC02             BRANCH IF IN TEST MODE
         MVC   WTOMSG+047(06),=C'ISSUED'  COMMAND WILL BE ISSUED
*
*        UPDATE THE VARY OFFLINE COMMAND COUNT.
BLDVC02  DS    0H                  CONTINUE PROCESSSING THE VARY OFFLN
         L     RWORK1,OFFCOUNT     ADD
         LA    RWORK1,1(,RWORK1)   1
         ST    RWORK1,OFFCOUNT     TO VARY OFFLINE COMMAND COUNT
*
*        RETURN TO THE CALLER WITH THE MOUNT COMMAND BUILT.
BLDVC07  L     RLINK,VCSVCMDL      RELOAD RETURN REGISTER VALUE
         BR    RLINK               RETURN TO CALLER
         DROP  RTBL1               DROP TABLE ENTRY ADDRESSABILITY
         TITLE 'VARYOFF - SET UCB DEVICE TYPE STATUS TO "SHARED"'
***************************************************************
*                                                             *
*        THE FOLLOWING ROUTINE TURNS ON BIT "UCBRR"           *
*        IN UCBTYPE BYTE "UCBTBYT2.  THE USER IS CAUTIONED    *
*        NOT TO USE THIS OPTION UNLESS THE DEVICE WAS         *
*        GENERATED AS SHARED DASD AND THE BIT HAS BEEN        *
*        SUBSEQUENTLY ZAPPED OFF.                             *
*                                                             *
***************************************************************
ZAPUCBSH DS    0H
         USING TBLENTRY,RTBL1      TABLE ENTRY ADDRESSABILITY
         ST    RLINK,ZPSVUCBS      SAVE RETURN REGISTER VALUE
         L     RUCB,TBLUCBAD       LOAD UCB ADDRESS VALUE
         USING UCBOB,RUCB          UCB ADDRESSABILITY
*
*        INITIALIZE ERROR MESSAGE
         MVC   WTOAREA(WTOMSG6Z),WTOMSG6       MESSAGE SKELETON
         ST    RUCB,PACK1          STORE UCB ADDRESS
         UNPK  PACK2(9),PACK1(5)   GET UNPACKED HEXADECIMAL
         NC    PACK2(8),X#0F0F     CLEAR ZONES
         TR    PACK2(8),X#09AF            GET EBCDIC HEX
         MVC   WTOMSG+029(08),PACK2    COPY UCB ADDRESS TO MSG
         MVC   WTOMSG+049(03),TBLUNIT  COPY DEVICE ADDRESS
         MVC   WTOMSG+061(06),TBLVOLI  COPY VOLUME SERIAL NUMBER
*
*        CHECK FOR DEVICE WITH SHARED DASD BIT ALREADY ON
         LA    RENTRY,12           RETURN CODE FOR ALREADY "SHARED"
         MVC   WTOMSG+086(32),WTOMSG6A    COPY ERROR REASON
         TM    UCBTBYT2,UCBRR      RESERVE/RELEASE SET ON DEVICE?
         BO    BYZPUCBS            IF BIT ALREADY SET
*
*        CHECK FOR PROGRAM NOT AUTHORIZED
         LA    RENTRY,08           RETURN CODE FOR NOT AUTHORIZED
         MVC   WTOMSG+086(32),WTOMSG6D    COPY ERROR REASON
         CLI   AUTHFCTN,00         IS THE VARYOFF PROGRAM AUTHORIZED?
         BNE   BYZPUCBS            BYPASS COMMAND IF NOT
*
*        CHECK FOR PROGRAM IN TEST MODE
         LA    RENTRY,04           RETURN CODE FOR TEST MODE
         MVC   WTOMSG+086(32),WTOMSG6C    COPY ERROR REASON
         CLI   TESTMODE,04         IS THE PROGRAM IN TEST MODE?
         BE    BYZPUCBS            BYPASS COMMAND IF YES
*
*        TURN ON BIT "UCBRR"
         MODESET KEY=ZERO          GET INTO KEY ZERO
         OI    UCBTBYT2,UCBRR      SET RESERVE/RELEASE ON DEVICE
         MODESET KEY=NZERO         RESET PROTECT KEY
*
*        SET UP MESSAGE FOR SUCCESSFUL ALTERATION
         SR    RENTRY,RENTRY       CLEAR RETURN CODE REGISTER
         MVC   WTOAREA(WTOMSG5Z),WTOMSG5       MESSAGE SKELETON
         ST    RUCB,PACK1          STORE UCB ADDRESS
         UNPK  PACK2(9),PACK1(5)   GET UNPACKED HEXADECIMAL
         TR    PACK2(8),X#09AF            GET EBCDIC HEX
         MVC   WTOMSG+029(08),PACK2    COPY UCB ADDRESS TO MSG
         MVC   WTOMSG+049(03),TBLUNIT  COPY DEVICE ADDRESS
         MVC   WTOMSG+061(06),TBLVOLI  COPY VOLUME SERIAL NUMBER
*
*        RETURN TO THE CALLER
BYZPUCBS DS    0H
         L     RLINK,ZPSVUCBS      RELOAD RETURN REGISTER VALUE
         BR    RLINK               RETURN TO CALLER
         DROP  RUCB                DROP UCB ADDRESSABILITY
         DROP  RTBL1               DROP TABLE ENTRY ADDRESSABILITY
         TITLE 'VARYOFF - SET UCB DEVICE TYPE STATUS TO "UNSHARED"'
***************************************************************
*                                                             *
*        THE FOLLOWING ROUTINE TURNS OFF BIT "UCBRR"          *
*        IN UCBTYPE BYTE "UCBTBYT2.  THE USER IS CAUTIONED    *
*        THAT THE DEVICE SHOULD BE MADE UNAVAILABLE TO        *
*        OTHER SYSTEMS IN THE COMPLEX BEFORE USING THIS       *
*        OPTION AGAINST A DEVICE.                             *
*                                                             *
***************************************************************
ZAPUCBUS DS    0H
         USING TBLENTRY,RTBL1      TABLE ENTRY ADDRESSABILITY
         ST    RLINK,ZPSVUCBU      SAVE RETURN REGISTER VALUE
         SR    RUCB,RUCB           CLEAR UCB ADDRESS REGISTER
         ICM   RUCB,3,TBLUCBAD     LOAD UCB ADDRESS VALUE
         USING UCBOB,RUCB          UCB ADDRESSABILITY
*
*        INITIALIZE ERROR MESSAGE
         MVC   WTOAREA(WTOMSG6Z),WTOMSG6       MESSAGE SKELETON
         ST    RUCB,PACK1          STORE UCB ADDRESS
         UNPK  PACK2(9),PACK1(5)   GET UNPACKED HEXADECIMAL
         NC    PACK2(8),X#0F0F     CLEAR ZONES
         TR    PACK2(8),X#09AF            GET EBCDIC HEX
         MVC   WTOMSG+029(08),PACK2    COPY UCB ADDRESS TO MSG
         MVC   WTOMSG+049(03),TBLUNIT  COPY DEVICE ADDRESS
         MVC   WTOMSG+061(06),TBLVOLI  COPY VOLUME SERIAL NUMBER
*
*        CHECK FOR OUTSTANDING RESERVE ON DEVICE.
         LA    RENTRY,16           RETURN CODE FOR OUTSTANDING RESRV
         MVC   WTOMSG+086(32),WTOMSG6E    COPY ERROR REASON
         TM    UCBSQC,X'FF'        OUTSTANDING RESERVE???
         BNZ   BYZPUCBU            IF RESERVE COUNT IS NOT ZERO
*
*        CHECK FOR DEVICE WITH SHARED DASD BIT ALREADY OFF
         LA    RENTRY,12           RETURN CODE FOR ALREADY "UNSHARED"
         MVC   WTOMSG+086(32),WTOMSG6B    COPY ERROR REASON
         TM    UCBTBYT2,UCBRR      RESERVE/RELEASE SET ON DEVICE?
         BZ    BYZPUCBU            IF BIT ALREADY TURNED OFF
*
*        CHECK FOR PROGRAM NOT AUTHORIZED
         LA    RENTRY,08           RETURN CODE FOR NOT AUTHORIZED
         MVC   WTOMSG+086(32),WTOMSG6D    COPY ERROR REASON
         CLI   AUTHFCTN,00         IS THE VARYOFF PROGRAM AUTHORIZED?
         BNE   BYZPUCBU            BYPASS COMMAND IF NOT
*
*        CHECK FOR PROGRAM IN TEST MODE
         LA    RENTRY,04           RETURN CODE FOR TEST MODE
         MVC   WTOMSG+086(32),WTOMSG6C    COPY ERROR REASON
         CLI   TESTMODE,04         IS THE PROGRAM IN TEST MODE?
         BE    BYZPUCBU            BYPASS COMMAND IF YES
*
*        TURN OFF BIT "UCBRR"
         MODESET KEY=ZERO          GET INTO KEY ZERO
         XI    UCBTBYT2,UCBRR      SET RESERVE/RELEASE BIT OFF
         MODESET KEY=NZERO         RESET PROTECT KEY
*
*        SET UP MESSAGE FOR SUCCESSFUL ALTERATION
         SR    RENTRY,RENTRY       CLEAR RETURN CODE REGISTER
         MVC   WTOAREA(WTOMSG4Z),WTOMSG4       MESSAGE SKELETON
         ST    RUCB,PACK1          STORE UCB ADDRESS
         UNPK  PACK2(9),PACK1(5)   GET UNPACKED HEXADECIMAL
         TR    PACK2(8),X#09AF            GET EBCDIC HEX
         MVC   WTOMSG+029(08),PACK2    COPY UCB ADDRESS TO MSG
         MVC   WTOMSG+049(03),TBLUNIT  COPY DEVICE ADDRESS
         MVC   WTOMSG+061(06),TBLVOLI  COPY VOLUME SERIAL NUMBER
*
*        RETURN TO THE CALLER
BYZPUCBU DS    0H
         L     RLINK,ZPSVUCBU      RELOAD RETURN REGISTER VALUE
         BR    RLINK               RETURN TO CALLER
         DROP  RUCB                DROP UCB ADDRESSABILITY
         DROP  RTBL1               DROP TABLE ENTRY ADDRESSABILITY
         TITLE 'VARYOFF - WRITE OPERATOR MESSAGE SUBROUTINE'
WTOCMD   DS    0H
         ST    RLINK,WTSVCMDL      SAVE RETURN REGISTER VALUE
         WTO   MF=(E,WTOAREA)      WRITE MESSAGE TO THE OPERATOR
         L     RLINK,WTSVCMDL      RELOAD RETURN REGISTER VALUE
         BR    RLINK               RETURN TO CALLER
         TITLE 'VARYOFF - ISSUE OPERATOR COMMAND SUBROUTINE'
ISSUECMD DS    0H
         ST    RLINK,WTSVCMDL      SAVE RETURN REGISTER VALUE
         MVC   WTSVMCS,WTOMCS      SAVE MCS FLAGS
         XC    WTOMCS,WTOMCS       CLEAR MCS FLAGS
         CLI   AUTHFCTN,00         IS THE VARYOFF PROGRAM AUTHORIZED?
         BNE   BYISCMD             BYPASS COMMAND IF NOT
         CLI   TESTMODE,04         IS THE PROGRAM IN TEST MODE?
         BE    BYISCMD             BYPASS COMMAND IF YES
         MODESET KEY=ZERO          GET INTO KEY ZERO
         LA    R0,01               INDICATE MASTER CONSOLE ORIGIN
         LA    R1,WTOAREA          POINT TO OPERATOR COMMAND
         SVC   34                  PASS COMMAND TO SYSTEM
         MODESET KEY=NZERO         RESET PROTECT KEY
BYISCMD  DS    0H
         MVC   WTOMCS,WTSVMCS      RESTORE MCS FLAGS
         L     RLINK,WTSVCMDL      RELOAD RETURN REGISTER VALUE
         BR    RLINK               RETURN TO CALLER
         TITLE 'VARYOFF - MESSAGE AND COMMAND SKELETONS'
WTOMSG1  WTO   'IEFVRY01 VARYOFF XXXXXXXX DD COULD NOT BE OPENED',     X
               DESC=(6),ROUTCDE=(2,11),                                X
               MF=L
WTOMSG1Z EQU   *-WTOMSG1           SIZE OF MESSAGE SKELETON
         SPACE 5
WTOMSG2  WTO   'IEFVRY02 VARYOFF IS NOT AUTHORIZED AND OPERATOR COMMANDX
               S WILL NOT BE ISSUED',                                  X
               DESC=(6),ROUTCDE=(2,11),                                X
               MF=L
WTOMSG2Z EQU   *-WTOMSG2           SIZE OF MESSAGE SKELETON
         SPACE 5
WTOMSG3  WTO   'IEFVRY03 VOLUME VVVVVV ON DEVICE DDD IS ALLOCATED BUT NX
               OT LISTED IN VATLST',                                   X
               DESC=(6),ROUTCDE=(2,11),                                X
               MF=L
WTOMSG3Z EQU   *-WTOMSG3           SIZE OF MESSAGE SKELETON
         EJECT  ,
WTOMSG4  WTO   'IEFVRY04 THE UCB AT LOCATION $$$$$$$$ FOR DEVICE DDD, VX
               OLUME VVVVVV UCB HARDWARE STATUS HAS BEEN SET UNSHARED',X
               DESC=(6),ROUTCDE=(2,11),                                X
               MF=L
WTOMSG4Z EQU   *-WTOMSG4           SIZE OF MESSAGE SKELETON
         SPACE 5
WTOMSG5  WTO   'IEFVRY05 THE UCB AT LOCATION $$$$$$$$ FOR DEVICE DDD, VX
               OLUME VVVVVV UCB HARDWARE STATUS HAS BEEN SET SHARED',  X
               DESC=(6),ROUTCDE=(2,11),                                X
               MF=L
WTOMSG5Z EQU   *-WTOMSG5           SIZE OF MESSAGE SKELETON
         SPACE 5
WTOMSG6  WTO   'IEFVRY06 THE UCB AT LOCATION $$$$$$$$ FOR DEVICE DDD, VX
               OLUME VVVVVV WAS NOT ALTERED - ....+...10....+...20....+X
               ...30..',                                               X
               DESC=(6),ROUTCDE=(2,11),                                X
               MF=L
WTOMSG6Z EQU   *-WTOMSG6           SIZE OF MESSAGE SKELETON
WTOMSG6A DC    CL32'UCBTBYT2 ALREADY INDICATES SHR  '
WTOMSG6B DC    CL32'UCBTBYT2 ALREADY INDICATES NOSHR'
WTOMSG6C DC    CL32'PROGRAM IN TEST MODE            '
WTOMSG6D DC    CL32'PROGRAM NOT AUTHORIZED          '
WTOMSG6E DC    CL32'OUTSTANDING RESERVE ON DEVICE   '
         EJECT  ,
WTOMSG7  WTO   'IEFVRY07 ____ VARY OFFLINE COMMAND(S) WERE $$$$$$',    X
               DESC=(6),ROUTCDE=(2,11),                                X
               MF=L
WTOMSG7Z EQU   *-WTOMSG7           SIZE OF MESSAGE SKELETON
         SPACE 5
WTOMSG8  WTO   'IEFVRY08 ____ MOUNT COMMAND(S) WERE $$$$$$',           X
               DESC=(6),ROUTCDE=(2,11),                                X
               MF=L
WTOMSG8Z EQU   *-WTOMSG8           SIZE OF MESSAGE SKELETON
         EJECT  ,
WTOMSG9  WTO   'IEFVRY09 VARYOFF DIRECT ACCESS TABLE CAPACITY EXCEEDED X
               - REASSEMBLE PROGRAM',                                  X
               DESC=(6),ROUTCDE=(2,11),                                X
               MF=L
WTOMSG9Z EQU   *-WTOMSG9           SIZE OF MESSAGE SKELETON
         SPACE 5
WTOMSGA  WTO   'IEFVRY10 VARYOFF PROGRAM RUNNING IN TEST MODE',        X
               DESC=(6),ROUTCDE=(2,11),                                X
               MF=L
WTOMSGAZ EQU   *-WTOMSGA           SIZE OF MESSAGE SKELETON
         EJECT  ,
CMDVARY  WTO   'VARY XXX,OFFLINE  /*VVVVVV*/                 /*$$$$$$ BX
               Y VARYOFF*/',                                           X
               DESC=(6),ROUTCDE=(2,11),                                X
               MF=L
CMDVARYZ EQU   *-CMDVARY           SIZE OF COMMAND SKELETON
         SPACE 5
CMDDEAL  WTO   'START DEALLOC  /* 0000 VARY OFFLINE COMMAND(S) $$$$$$ BX
               Y VARYOFF*/',                                           X
               DESC=(6),ROUTCDE=(2,11),                                X
               MF=L
CMDDEALZ EQU   *-CMDDEAL           SIZE OF COMMAND SKELETON
         SPACE 5
CMDMNT   WTO   'MOUNT XXX,VOL=(SL,VVVVVV                     /*$$$$$$ BX
               Y VARYOFF*/',                                           X
               DESC=(6),ROUTCDE=(2,11),                                X
               MF=L
CMDMNTZ  EQU   *-CMDMNT            SIZE OF COMMAND SKELETON
         TITLE 'VARYOFF - MODULE  CONSTANTS'
WORKSIZE DC    A(LENSECT)                 SIZE FOR GM/FM
EBLANKS  DC    CL16' '           EBCDIC BLANKS
X#FFFF   DC    16XL01'FF'        HEXADECIMAL 'FF'-S
X#0F0F   DC    16XL01'0F'        HEXADECIMAL '0F'-S
X#09AF   DC    C'0123456789ABCDEF'   FOR HEX->EBCDIC CONVERSION
OPENIN1  OPEN  (*-*,(INPUT,LEAVE)),MF=L
OPENPR1  OPEN  (*-*,(OUTPUT,LEAVE)),MF=L
CLOSIN1  CLOSE (*-*,LEAVE),MF=L
CLOSPR1  CLOSE (*-*,LEAVE),MF=L
DCBIN1   DCB   DSORG=PS,DEVD=DA,                                       X
               DDNAME=SYSIN,MACRF=GM,                                  X
               RECFM=FB,LRECL=80
DCBPR1   DCB   DSORG=PS,DEVD=DA,                                       X
               DDNAME=SYSPRINT,MACRF=PM,                               X
               RECFM=FBA,LRECL=121
         SPACE 4
         LTORG  *
         SPACE 4
         END   VARYOFF
