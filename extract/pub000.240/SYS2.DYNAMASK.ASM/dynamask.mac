DYNAMASK TITLE 'PROGRAM TO MODIFY ELIGIBLE DEVICE TABLE'
***********************************************************************
*    CHANGE DATE: MARCH 2002   BRIAN WESTERMAN                        *
*                 FOR HERCULES-390 MVS 3.8J                           *
*                 ASSEMBLE AND LINK THE GENERIC AND DYNAMASK PROGRAMS *
*                 ONLY, NOT THE VATUCB PROGRAM                        *
*                                                                     *
*    FOR INFORMATION CONTACT:                                         *
*        BRIAN WESTERMAN  (BRIAN_WESTERMAN@SYZYGYINC.COM)             *
*        SYZYGY INCORPORATED                                          *
*        1381 KILDAIRE FARM ROAD - 326  (OR) 897 OAK PARK BLVD - 500  *
*        CARY, NC 27511-5525                 PISMO BEACH, CA 93449    *
*        (800) 767-2244-PHONE  (800) 366-4082-FAX                     *
*                                                                     *
*                                                                     *
*    CHANGE DATE: NOVEMBER 1990                                       *
*                                                                     *
*    NONE ESA VERSION (FOR MVS/370 AND XA UP TO 2.1.7)                *
*                                                                     *
*    PROGRAM TO MODIFY THE ELIGIBLE DEVICES TABLE BASED ON            *
*    MOUNTED VOLUMES (DASD ONLY) OR ADDRESS CHANGE LIST               *
*                                                                     *
*    WRITTEN BY STEVE SMITH, CIRCA 1975,                              *
*       FOR SECURITY PACIFIC NATIONAL BANK                            *
*                                                                     *
*    MODIFIED FOR SU 64 BY DICK HINTON AND DOUG MERCER, JUNE 1980,    *
*       FOR THE LOCKHEED-CALIFORNIA COMPANY                           *
*                                                                     *
*    MODIFIED BY STEVE SMITH FEB 1981 TO INCLUDE 1976 MODS            *
*       FOR SECURITY PACIFIC NATIONAL BANK                            *
*                                                                     *
*    MODIFIED TO USE DSECTS BY DOUG MERCER, JUNE 1983,                *
*       FOR THE LOCKHEED-CALIFORNIA COMPANY                           *
*                                                                     *
*    MODIFIED FOR XA ASSEMBLY BY DOUG MERCER, JUNE 1983,              *
*       FOR THE LOCKHEED-CALIFORNIA COMPANY. THE EXPECTED             *
*       VALUES IN SYSPARM ARE SYSPARM() FOR MVS/370,                  *
*       SYSPARM(TEST) FOR MVS/370 WITH TEST CODE (DOES NOT            *
*         MODIFY THE REAL EDT OR RUN AUTHORIZED)                      *
*       SYSPARM(XA) FOR MVS/XA,                                       *
*       SYSPARM(TESTXA) FOR MVS/XA WITH TEST CODE (DOES NOT           *
*         MODIFY THE REAL EDT OR RUN AUTHORIZED)                      *
*                                                                     *
*    MODIFIED FOR XA BY DOUG MERCER, NOVEMBER 1983,                   *
*       FOR THE LOCKHEED-CALIFORNIA COMPANY. THE UCB LOOKUP           *
*       TABLE HAS DISAPPEARED AND VARIOUS CHANGES HAVE BEEN           *
*       TO THE EDT. THE UCB HAS ALSO CHANGED BUT NOT IN ANY           *
*       MANNER AFFECTING DYNAMASK.                                    *
*                                                                     *
*    MODIFIED BY STEVE SMITH JAN 1984 FOR XA                          *
*       FOR SECURITY PACIFIC NATIONAL BANK                            *
*       SYSPARM(XA) REPLACED BY CONDITIONAL EXECUTION                 *
*                   BY TESTING FOR THE MVSE BIT IN CVT                *
*                                                                     *
*    MODIFIED BY STEVE SMITH AUG 1984 FOR MVS/370 AND XA              *
*       FOR SECURITY PACIFIC NATIONAL BANK                            *
*       SYSPARM(NONXA) OR SYSPARM(TEST) ALLOW ASSEMBLY                *
*                   WITHOUT XA MACLIBS                                *
*       PROVIDE FREEMAIN FOR XA EDT EXECESS MEMORY AND OLD EDT        *
*       BUILD EDT REPLACED UNIT NAMES IN ORGINAL ORDER                *
*                                                                     *
*    MODIFIED BY STEVE SMITH APR 1985 FOR MVS/370 AND XA              *
*       AT  SECURITY PACIFIC NATIONAL BANK                            *
*       TO INCLUDE FIX SUPPLIED BY BRAIN COMPTON AND DWIGHT CLARKE    *
*       OF LITTON COMPUTER SEVICES: LOGIC ERROR FOR SPECIFIC UNIT     *
*       WHERE INDEX REGISTER WAS OMITTED IN GROUP BIT MASK UPDATE     *
*                                                                     *
*    MODIFIED BY STEVE SMITH SEP 1985 FOR MVS/370 AND XA              *
*       AT  SECURITY PACIFIC NATIONAL BANK                            *
*       ADD AIF CONDINTIONAL ASM TO BYPASS BSM INSTRUCTIONS           *
*       IN NONXA ONLY SHOPS.                                          *
*                                                                     *
*    MODIFIED BY STEVE SMITH APR 1986 FOR MVS/370 AND XA              *
*       FOR SECURITY PACIFIC NATIONAL BANK                            *
*       TO ALLOW FOR COMMENT CARD IN CONTROL FILE                     *
*       TO ALLOW MODEL VOLUME OR UNIT ADDRESS                         *
*       (I.E.  TSODA*  /18* )                                         *
*                                                                     *
*    MODIFIED BY STEVE SMITH JUN 1986 FOR MVS/370 AND XA              *
*       FOR SECURITY PACIFIC NATIONAL BANK                            *
*       TO ALLOW FOR PARM VALUE TO BE PLACE IN MESSAGE                *
*       USEFUL FOR SIGNALLING WTO EXITS AND AUTOMATIC                 *
*       OPERATOR SUBSYSTEMS                                           *
*                                                                     *
*    MODIFIED BY STEVE SMITH NOV 1986 FOR MVS/370 AND XA              *
*       FOR SECURITY PACIFIC NATIONAL BANK                            *
*       TO BYPASS XA CODE IN TEST (NONXA) MODE                        *
*                                                                     *
*    MODIFIED BY STEVE SMITH MAR 1987 FOR MVS/370 AND XA              *
*       FOR SECURITY PACIFIC NATIONAL BANK                            *
*       TO ALLOW CUU RANGE SPECIFICATION AND ONE CHAR MODEL CUU       *
*       FIXED 0C4 IN TEST COMPARE ROUTINE                             *
*                                                                     *
*    MODIFIED BY STEVE SMITH MAR 1987                                 *
*       FOR SECURITY PACIFIC NATIONAL BANK                            *
*       BYPASS LOAD OF EDT.  USE NIP GENERATED EDT IN JESCT.          *
*       WILL USE SYSGEN EDT IN JESCT                                  *
*       PASS GENERATED EDT IN HEADER FOR USE BY LATER EXECUTIONS      *
*       DO ENQ BEFORE UPDATING JESCT WITH EDT AND UPT                 *
*                                                                     *
*    MODIFIED BY STEVE SMITH NOV 1990                                 *
*       PROVIDE FOR OPTION BITS TO BE TURNED OFF IN DEVTYPE           *
*       VALUE FOR SEVERAL DEVICE CLASSES                              *
*                                                                     *
*     ABSTRACT                                                        *
*                                                                     *
*     DYNAMASK PROVIDES THE ABILITY TO DYNAMICALLY CHANGE AND ADD     *
*     TO THE UNIT NAMES DEFINED AT SYSGEN.   DYNAMASK OPTIONALLY      *
*     CAN BE GIVEN UNIT ADDRESSES OR VOLUMES AND THE UNIT NAMES       *
*     WILL BE ASSIGNED TO THE UNIT ADDRESSES THAT THE VOLUMES ARE     *
*     CURRENTLY MOUNTED.  IT CAN BE RUN AT ANY TIME THE SYSTEM        *
*     IS DAINED OF ALL ACTIVITY.  DYNAMASK RUNS AS AN OPERATOR        *
*     REQUESTED OR BATCH SUBMITTED UTILITY WHICH MAKES THE            *
*     NECESSARY CONTROL BLOCK CHANGES AND EXITS.  IT REQUIRES         *
*     MINIMUM RESOURCES AND EXECUTES IN A FEW SECONDS.                *
*                                                                     *
*     DYNAMASK SUPPORTS THE FOLLOWING RELEASES:                       *
*                                                                     *
*     MVS 3.7 WITH SU64, MVS3.8 - MVS/SP1.3.6, MVS/XA2.0 - 2.1.7      *
*                                                                     *
*     INQUIRES:                                                       *
*                                                                     *
*     SEND INQUIRES TO:                                               *
*              STEVEN D. SMITH   G12-99                               *
*              SECURITY PACIFIC NATIONAL BANK                         *
*              611 NORTH BRAND                                        *
*              GLENDALE, CA, 91203                                    *
*                                                                     *
*     OR PHONE: (818) 507-3014                                        *
*                                                                     *
*                                                                     *
*     INSTALLATION                                                    *
*                                                                     *
*     DYNAMASK IS A SINGLE MODULE AND MUST BE LINK EDITED INTO        *
*     AN AUTHORIZED LIBRARY WITH ATTRIBUTES AC=1 RENT REUS REFR       *
*     ASSEMBLY USING ASMH AND XA MACRO LIBRARY WILL ALSO EXECUTE      *
*     IN NON XA (370 MODE)                                            *
*     FOR ASSEMBLY UNDER NON XA SYSTEMS USE SYSPARM(NONXA) TO         *
*     AVOIDE XA ONLY MACRO PARMS AND BSM INSTRUCTIONS                 *
*     THERE IS ALSO A TEST MODE NOTED LATER IN THIS DOCUMENATION      *
*                                                                     *
*     DYNAMASK SPECIFICATIONS MUST BE PROVIDED IN A CONTROL           *
*     LIBRARY LIKE SYS1.PARMLIB                                       *
*                                                                     *
*     THE DYNAMASK JCL MUST PROVIDE A SYSIN TO THE CONTROL            *
*     LIBRARY AND MEMBER.  WHEN RUN AS A STARTED TASK A PROC          *
*     MEMBER MUST BE PROVIDE IN SYS1.PROCLIB,                         *
*     A PARM VALUE MAY BE INCLUDED.  THE PARM VALUE IS PLACED         *
*     IN A WTO MESSAGE AND DISPLAYED AT THE END OF DYNAMASK           *
*     PROCESSING.  THIS IS USEFUL FOR SIGNALING INSTALLATION          *
*     WTO EXIT OR AUTOMATIC OPERATOR SUBSYSTEM                        *
*     SAMPLE:                                                         *
*                                                                     *
*      //DYNAMASK PROC M=EDTUPDTE,P='START IPL POSTPROCESS'           *
*      //DYNAMASK EXEC PGM=DYNAMASK,PARM=&P                           *
*      //SYSIN DD DISP=SHR,DSN=SYS1.PARMLIB(&M.)                      *
*                                                                     *
*     DYNAMASK CONTROL CARD FORMAT                                    *
*                                                                     *
*     STARTING IN COLLUME 1 THE UNIT NAME TO BE CHANGED OR ADDED      *
*     FOLLOWED BY A BLANK.                                            *
*                                                                     *
*     FOLLOWED BY VOLUME(S) AND/OR UNIT ADDRESS(ES) TO BE ASSIGNED    *
*     TO THIS UNIT NAME.  VOLUMES CAN BE SPECIFIED ONLY FOR DISK      *
*     DEVICES FOR UNIT NAMES OF DASD ONLY.                            *
*                                                                     *
*     VOLUMES ARE OF THE FORM: ONE TO SIX CHARACTER VOLUME IDS.       *
*     LIKEWISE A MODEL VOLUME OF ONE TO FIVE CHARACTERS PLUS          *
*     AN ASTERISK WILL SELECT ALL VOLUMES THAT MATCH THE MODEL.       *
*                                                                     *
*     UNIT ADDRESS ARE OF THE FORM: SLASH (/) AS FIRST CHARACTER,     *
*     FOLLOWED BY THE 3 DIGIT HEXIDECIMAL UNIT ADDRESS.               *
*     LIKEWISE A MODEL 1 OR 2 DIGIT HEXIDECIMAL ADDRESS PLUS          *
*     AN ASTERISK WILL SELECT ALL UNITS THAT MATCH THE FIRST GIVEN    *
*     DIGITS. A RANGE OF UNITS MAY BE SPECIFIED AS FOLLOWS /CUU-CUU   *
*                                                                     *
*                                                                     *
*     IF MORE THAN ONE VOLUME OR UNIT ADDRESS IS NEEDED EACH IS       *
*     SEPARATED BY A COMMA.  IF MORE ENTRIES ARE REQUIRED THAN        *
*     CAN BE CONTAINED ON ONE CARD, THE CARD CAN BE CONTINUED BY      *
*     PLACEING A COMMA AFTER THE LAST ENTRY. THE NEXT CARD MUST       *
*     BE CONTINUED ON OR AFTER COLUME 2.                              *
*                                                                     *
*     THE SPECIFIED UNIT NAME ASSIGNMENSTS NORMALLY REPLACE ALL       *
*     PREVIOUS ASSIGNMENTS.  HOWERER, IF A MINUS (-) PRECEDES         *
*     THE UNIT NAME, THE SPECIFIED UNIT.VOLUES ENTRIES WILL BE        *
*     EXCLUED FROM THE EXISTING ASSIGNMENTS FROM SYSGEN.              *
*                                                                     *
*     IF A PLUS (+) PRECEDES THE UNIT NAME, THE UNIT NAME IS          *
*     MARKED FOR VIO.                                                 *
*                                                                     *
*     AN ASTERISK (*) IN COLUME 1 INDICATES A COMMENT CARD.           *
*     A COMMENT CARD CAN BE PLACED ANYWHERE.                          *
*                                                                     *
*     SAMPLES:                                                        *
*                                                                     *
*          SYSDA SYSDA*                                               *
*                                                                     *
*          SORT  SYSDA1,SYSDA2,                                       *
*          * COMMENT CARD, THE NEXT CARD IS CONTINUEATION OF PREVIOUS *
*           SYSDA3,SYSDA4                                             *
*                                                                     *
*          -2400-3 /48E,/48F                                          *
*                                                                     *
*          TAPE1  /42*,/5*,/440-45F                                   *
*                                                                     *
*          +SYSVIO SYSDA1                                             *
*                                                                     *
*     IF THE SAME UNIT NAME IS SPECIFED MORE THAN ONCE, ONLY          *
*     THE FIRST IS USED.                                              *
*                                                                     *
*     ANY ERROR OR INVALID SPECIFICATION IN A UNIT NAME CAUSES        *
*     THAT UNIT NAME NOT TO BE UPDATED                                *
*                                                                     *
*     ANY ERROR OR INVALID SPECIFICATION IN A UNIT ADDRESS OR         *
*     VOLUME WILL BE IGNORED AND THE UNIT NAME WILL BE UPDATED        *
*     WITH ANY CORRECT UNIT ADDRESSES AND/OR VOLUMES. MISSING         *
*     VOLUMES ARE IGNORED.                                            *
*                                                                     *
*     ALL UNCHANGED UNIT NAMES FROM THE SYSGEN ARE RETAINED.          *
*     ONLY UNIT NAMES TO BE CHANGED NEED BE SPECIFIED.                *
*                                                                     *
*     RESTRICTIONS                                                    *
*                                                                     *
*     DYNAMASK DOES NOT UPDATE THE DEVICE NAME AND MASK TABLE         *
*     WHICH IS USED BY SOME MVS/370 IBM UTILITIES. A SEPERATE         *
*     PROGRAM IS AVAILABLE THAT WILL UPDATE THESE FROM THE            *
*     EDT WITH IS THE TABLE DYNAMASK UPDATES.                         *
*                                                                     *
*     CURRENTLY, THERE IS NO ENCOMPASSING ENQUEUE NAME TO PROTECT     *
*     JOBES IN ALLOCATION WHEN THE EDT IS REPLACED.  DYNAMASK         *
*     SHOULD BE RUN ONLY WHEN THE SYSTEM IS IN A DRAINED STATE        *
*     OR RIGHT AFTER IPL.  MOST SHOPS INCLUDE A START DYNAMASK        *
*     COMMAND IN THE COMMND00 OF PARMLIB                              *
*                                                                     *
*     THE 'CGA' SOFTWARE PRODUCT GROUP'S 'MSX' MUST RUN START AFTER   *
*     DYNAMASK.  TO FORCE SERIALATION WITH DYNAMASK, INCLUDE A        *
*     DD CARD FOR THE MSX TABLE DATASET IF YOU USE MSX.               *
*                                                                     *
*     LOGIC FLOW                                                      *
*                                                                     *
*     DURING INITIZATION WORKING STORAGE IS UPTAINED AND CSA STORAGE  *
*     IS UPTAINED FOR THE NEW EDT (ELIGIBLE DIVICE TABLE). A LOAD     *
*     IS DONE FOR IEFEDTTB BUILD FROM SYSGEN AND USED FOR A MODEL.    *
*     FROM THE MODEL EDT AND INCORE CONTROL BLOCKS A DYNAMASK GROUP   *
*     UNIT CROSS REFERENCE TABLE (GXREF) IS BUILT.                    *
*                                                                     *
*     DYNAMASK THEN READS THE SYSIN FILE FOR CONTROL CARD AND BUILDS  *
*     A DYNAMASK MODIFIED NAME TABLE (MNT) ASSIGNING A MASK BIT       *
*     EACH UNIT NAME AND MARKS THE MASK IN THE GXREF FOR ALL RELATED  *
*     DEVICE ADDRESS (EXPLICED OR VOLUME RELATED) FOR EACH UNIT NAME. *
*                                                                     *
*     THE DEVICES REFERENCED IN THE GXREF CAN THEN BE REGROUPED BY    *
*     SORTING ON THE OLD GROUP NUMBER AND MASK IN THE GXREF.  THEN    *
*     NEW GROUP NUMBERS CAN BE ASSIGNED AND A NEW EDT CAN BE BUILD.   *
*     IN XA A NEW UCB POINTER LIST (UPL) IS BUILT IN FRONT OF THE     *
*     EDT JUST AFTER THE HEADER SECTION. THE FOLLOWING EDT SECTIONS   *
*     ARE BUILD IN ORDER: UCB INDEX SECTION, GROUP ID SECTION,        *
*     GROUP POINTER SECTION, GENERIC SECTION, GROUP LOOKUP SECTION,   *
*     AND LAST THE GROUP MASK SECTION.                                *
*                                                                     *
*     THE COMPLETED EDT (AND IN XA THE UPT) POINTERS ARE UPDATED      *
*     IN THE JESCT. THEN THE OLD EDT IF IT WAS BUILT BY DYNAMASK      *
*     IS DELETED FROM STORAGE. THEN ANY USER SUPPLIED EXITS ARE       *
*     CALLED.                                                         *
*                                                                     *
*     TEST MODE                                                       *
*                                                                     *
*     TEST MODE CONTROLLED BY SYSPARM(TEST) OR SYSPARM(TESTXA).       *
*     ALSO A SECOND CSECT AFTER THE END CARD PROVIDE DUMP FORMATING   *
*     REQUIRES ASMH BATCH MODE FOR ASSEMBLY OR THE SECOND CSECT       *
*     COULD BE SEPERATED OUT FOR SEPERATE ASSEMBLY                    *
*                                                                     *
*     TEST MODE PROVIDES FOR BUILDING A NEW EDT WITHOUT UPDATING      *
*     CURRENT EDT POINTERS.  IT ALSO DUMPS GEN, OLD, AND NEW EDTS,    *
*     ALSO PROVIDING A COMPARE DUMP OF OLD AND NEW EDTS.              *
*     IN TEST MODE APF AUTHORIZATION IS NOT NEEDED.                   *
*                                                                     *
*     NOTES                                                           *
*                                                                     *
*     ALL MESSAGES ARE OF THE FORM TSDXXX WHICH CAN BE EDITTED        *
*     TO LOCAL MESSAGE ID STANDARDS                                   *
*                                                                     *
*    ATTRIBUTES - REENTRANT                                           *
*    TAB SETTINGS - 10 16 36 41 72                                    *
*                                                                     *
***********************************************************************
***********************************************************************
         SPACE 3                                               DM JUN83
         MACRO ,                                               DM JUN83
         EDT   &TYPE=SP                                        DM NOV83
.* WRITTEN BY DOUG MERCER, JUNE 1983, FOR THE LOCKHEED-CALIFORNIA CO.
.* CHANGED BY DOUG MERCER, NOVEMBER 1983, FOR XA DIFFERENCES   DM NOV83
.* CHANGED BY STEVE SMITH, JANUARY  1984, FOR XA DIFFERENCES   SS JAN84
EDT      DSECT ,                   ELIGIBLE DEVICES TABLE      DM JUN83
EDTLKUP  DS    A                   POINTER TO LOOK-UP SECTION  DM JUN83
EDTGNRC  DS    A                   POINTER TO GENERIC SECTION  DM JUN83
EDTGRP   DS    A                   POINTER TO GROUP SECTION    DM JUN83
EDTUCB   DS    A                   POINTER TO UCB SECTION      DM JUN83
EDTMSK   DS    A                   POINTER TO MASK SECTION     DM JUN83
EDTGRPT  DS    A                   POINTER TO GROUP POINTERS   DM JUN83
EDTPREF  DS    A                   POINTER TO PREFERENCE TABLE DM JUN83
EDTCREAT DS    CL8                 EDT CREATION ID             DM JUN83
EDTDATE  DS    CL8                   CREATION DATE (MM/DD/YY)  DM JUN83
EDTTIME  DS    CL5                     TIME (HH.MM)            DM JUN83
         DS    XL3                                             DM JUN83
EDTHDRL  EQU   *-EDT               LENGTH OF THE HEADER        DM JUN83
EDTNAME  DS    CL3                   EDT NAME                  DM NOV83
EDTLEVEL DS    C                     LEVEL                     DM NOV83
EDTHDRLX EQU   *-EDT               LENGTH OF THE HEADER        DM JUN83
         SPACE 2                                               DM JUN83
* EACH OF THE FOLLOWING SECTIONS IS PREFIXED BY                DM JUN83
*   TWO WORDS - THE FIRST WORD HAS THE NUMBER OF               DM JUN83
*   ENTRIES IN THE SECTION, THE SECOND WORD HAS THE            DM JUN83
*   NUMBER OF BYTES IN EACH ENTRY                              DM JUN83
         SPACE ,                                               DM JUN83
LKPSECT  DSECT ,                   LOOK-UP SECTION             DM JUN83
LKPNAME  DS    CL8                 UNITNAME                    DM JUN83
LKPDEVT  DS    XL4                 DEVICE TYPE (AS IN CATALOG) DM JUN83
LKPMSKPT DS    A                   POINTER TO MASK ENTRY       DM JUN83
LKPGNRC# DS    F                   NUMBER OF GENERICS          DM JUN83
LKPGNRC1 DS    A                   POINTER TO FIRST GENERIC    DM JUN83
LKPFLAGS DS    XL4                 FLAGS                       DM JUN83
LKPVIO   EQU   X'80'               ELIGIBLE FOR VIO            SS JAN84
LKPAGMSK EQU   X'40'               GENERIC HAS ALT MASK        SS JAN84
LKPMGEN  EQU   X'20'               ALLOC OF MUTL GEN OK        SS JAN84
LKPGENR  EQU   X'10'               THIS IS A GENERIC: FULL DEV SS JAN84
LKPESOTR EQU   X'08'               THIS IS A ESOTERIC          SS JAN84
LKPGGERN EQU   X'04'               THIS IS A GENERATED GEN     SS JAN84
LKPALTPT DS    A                   ALTERNATE MASK POINTER      DM JUN83
LKPLNG   EQU   *-LKPSECT           LENGTH OF SECTION           DM JUN83
         SPACE ,                                               DM JUN83
GNRCSECT DSECT ,                   GENERIC SECTION             DM JUN83
GNRCDEVT DS    XL4                 DEVICE TYPE (AS IN CATALOG) DM JUN83
GNRCGRP# DS    F                   NUMBER OF GROUPS            DM JUN83
GNRCGRP1 DS    A                   POINTER TO FIRST GROUP      DM JUN83
GNRCLNG  EQU   *-GNRCSECT          LENGTH OF SECTION           DM JUN83
         SPACE ,                                               DM JUN83
GRPPSEC  DSECT                     GROUP POINTER SEC           SS JAN84
GRPT     DS    F                   A GROUP POINTER             SS JAN84
GRPPLNG  EQU   *-GRPPSEC           LENGTH OF SECTON            SS JAN84
         SPACE ,                                               SS JAN84
GRPSECT  DSECT ,                   GROUP SECTION               DM JUN83
GRPID    DS    F                   GROUP ID NUMBER             DM JUN83
GRPIDHF  EQU   GRPID-GRPSECT+2     HALF WORD PORTION OFFSET    SS JAN84
GRPUCB#  DS    F                   NUMBER OF UCBS              DM JUN83
GRPUCB1  DS    A                   POINTER TO FIRST UCB        DM JUN83
GRPLNG   EQU   *-GRPSECT           LENGTH OF SECTION           DM JUN83
         ORG   GRPID+2                                         DM NOV83
GRPDEV#  DS    H                   NUMBER OF DEVICES           DM NOV83
GRPDEV1  DS    H                   INDEX TO DEVICE NUMBER TBL  DM NOV83
GRPLNGX  EQU   *-GRPSECT           LENGTH OF SECTION XA SECT   DM JUN83
         SPACE ,                                               DM JUN83
MSKSECT  DSECT ,                   GROUP MASK SECTION          DM JUN83
MSKMASK  DS    X                   GROUP MASK (LENGTH VARIABLE)DM JUN83
MSKLNG   EQU   *-MSKSECT           LENGTH OF SECTION           DM JUN83
         SPACE ,                                               DM JUN83
UCBSECT  DSECT ,                   UCB POINTER SECTION         DM JUN83
UCB#     DS    H                   INDEX TO UCB LOOKUP TABLE   DM NOV83
UCBLNG   EQU   *-UCBSECT           LENGTH OF SECTION           DM JUN83
         ORG   UCBSECT                                         DM NOV83
DEV#     DS    CL3                 DEVICE NUMBER IN EBCDIC     DM NOV83
UCBLNGX  EQU   *-UCBSECT           LENGTH OF SECTION XA SECT   DM JUN83
         SPACE ,                                               DM JUN83
GRPTSECT DSECT ,                   GROUP POINTER SECTION       DM JUN83
GRPTPTR  DS    A                   GROUP POINTER               DM JUN83
GRPTLNG  EQU   *-GRPTSECT          LENGTH OF SECTION           DM JUN83
         MEND  ,                                               DM JUN83
         SPACE 3
 PUNCH ' INCLUDE SYSLIB(GENERIC)'
 PUNCH ' ENTRY DYNAMASK'
DYNAMASK START ,
*                                                              SS AUG84
*  SETTING SYMBOLICS                                           SS AUG84
*                                                              SS AUG84
         GBLC  &SUBP,&XASP
&SUBP    SETC  '241'                                           SS AUG84
&XASP    SETC  '241'                                           SS AUG84
         AIF   ('&SYSPARM' NE 'TESTXA').TEST1A                 SS MAR87
&XASP    SETC  '0'                                             SS AUG84
.TEST1A  ANOP  ,
*&XXSP SET FROM &XASP BAST ON           *                      SS MAR87
*
*  EQUATES FOR REGISTERS AND FLAGS
*
FF       EQU   X'FF'
EXCLUDE  EQU   X'01'
REPL     EQU   X'02'
CVTPT    EQU   16                  PSA POINTER TO CVT
CVTILK2  EQU   40                  CVT POINTER TO UCB LOOK-UP  DM JUN83
CVTJESCT EQU   X'128'              JESCT ADDR                  SS JAN84
CVTDCB   EQU   X'74'               CVT SYSTEM TYPE OFFSET      SS JAN84
CVTMVSE  EQU   X'80'               XA MODE                     SS JAN84
JESUPLP  EQU   X'5C'               UCB POINTER LIST            SS JAN84
JESEDTA  EQU   X'34'               EDT POINTER                 SS JAN84
UPLUCBA  EQU   X'10'               FIRST POINTER IN LIST       SS JAN84
UCBSTAT  EQU   3,1,C'X'            UCB STATUS                  DM NOV83
UCBONLI  EQU   128                 DEVICE IS ONLINE            DM NOV83
UCBCHGS  EQU   64                  DEVICE IS TO BE CHANGED TO  DM NOV83
*               OFFLINE & ALLOCATION IS ENQUEUED OR DEVICE     DM NOV83
*               IS ALLOCATED                                   DM NOV83
UCBUNLD  EQU   16                  UNLOAD IN PROCESS           DM NOV83
UCBNAME  EQU   13,3,C'C'           UCB NAME                    DM NOV83
UCBNUM   EQU   4,2,C'X'            UCB DEVICE NUMBER           SS MAR87
UCBTYPE  EQU   16,4,C'X'           DEVICE TYPE                 DM NOV83
UCBDVCLS EQU   18,1,C'X'           DEVICE CLASS                DM NOV83
UCB3DACC EQU   32                  DASD CLASS                  DM NOV83
UCBVOLI  EQU   28,6,C'C'           VOLUME SERIAL               DM NOV83
R0       EQU   0
R1       EQU   1
R2       EQU   2                   USED FOR COUNTER
R3       EQU   3                   USED AS POINTER IN LOOP
R4       EQU   4                   UCB, POINTER  NEXT IN NEW EDT
R5       EQU   5                   COUNTER OR POINTER  NEW PTXREF
R6       EQU   6                   COUNTER OR POINTER  OLD PTXREF
R7       EQU   7                   COUNTER TO TOTAL FOR EACH SEC
R8       EQU   8                   POINTER TO MODEL EDT
R9       EQU   9                   SIZE OF GROUP - UNIT XREF
R10      EQU   10                  POINTER TO NEW EDT
R11      EQU   11                  PROGRAM BASE
R12      EQU   12                  PROGRAM BASE TWO
R13      EQU   13                  SAVE AREA/WORK BASE
R14      EQU   14
R15      EQU   15
         SPACE 3                                               DM JUL80
         SAVE  (14,12),T,DYNAMASK
         LR    R11,R15             SET UP BASE                 DM JUN83
         USING DYNAMASK,R11,R12                                DM JUN83
         LA    R12,2048(,R11)                                  DM JUN83
         LA    R12,2048(,R12)                                  DM JUN83
         L     R0,GETMLEN          LENGTH OF GETMAIN           RCHJUN79
         LR    R6,R1               SAVE PARM ADDR              SS JUN86
         GETMAIN R,LV=(0)          STORAGE FOR WORK AND TABLES
         LR    R2,R1               AREA TO ZERO                RCHJUN79
         L     R3,GETMLEN          LENGTH TO ZERO              RCHJUN79
         SR    R4,R4               FROM ADDRESS NULL           RCHJUN79
         SR    R5,R5               FILL CHAR & FROM LEN        RCHJUN79
         MVCL  R2,R4               ZERO GETMAIN AREA           RCHJUN79
         ST    R1,8(R13)           FORWARD POINTER
         ST    R13,4(R1)           BACK POINTER
         LR    R13,R1              SET BASE/SAVE AREA
         USING SAVE,R13                                        SS AUG84
         L     R2,=A(GXREFEND-SAVE)     ADDRESS END OF XREF    DM JUN83
         AR    R2,R1                      GETMAIN AREA         RCHJUN79
         ST    R2,GXREFXXX                                     SS AUG84
         MVC  0(8,R2),=C'ENDXXXXX' GETMAIN END INDICATOR       RCHJUN79
         MVC   SYSIN,SYSINDCB      COPY DCB'S TO               DM JUN83
         MVC   SYSPRINT,SYSPRDCB        GETMAINED CORE         DM JUN83
         MVI   OCLIST,X'80'        SET END                     DM JUL80
         OPEN  (SYSIN,INPUT),MF=(E,OCLIST)                     DM JUN83
         TM    SYSIN+48,X'10'      DID IT OPEN                 DM JUN83
         BZ    MSG1                NO, ERROR
         OPEN  (SYSPRINT,OUTPUT),MF=(E,OCLIST)                 DM JUN83
         MVI   FLAG2,0                                         SS JAN84
         MVI   SAVEPARM,C' '            BLANK AREA             SS JUN86
         MVC   SAVEPARM+1(19),SAVEPARM  RIPPLE                 SS JUN86
         LTR   R5,R6               ANY PARM PASSED             SS JUL86
         BZ    NOPARM              NO                          SS JUN86
         L     R5,0(R5)            PARM ADDRESS                SS JUN86
         LTR   R5,R5               ANY                         SS JUN86
         BZ    NOPARM              NO                          SS JUN86
         LH    R1,0(R5)            GET LENGTH                  SS JUN86
         LTR   R1,R1               ANY LENGTH                  SS JUN86
         BZ    NOPARM              NO                          SS JUN86
         CH    R1,=H'20'           MAX SIZE                    SS JUN86
         BNH   *+8                 OK                          SS JUN86
         LH    R1,=H'20'           ONLY FIRST 20               SS JUN86
         BCTR  R1,0                ONE LESS FOR MVC            SS JUN86
         MVC   SAVEPARM(0),2(R5)        EXECUTED MOVE          SS JUN86
         EX    R1,*-6                   EXECUTE THE MOVE       SS JUN86
NOPARM   DS    0H                                              SS JUN86
         MVI   FLAGS,1             INIT, = LOOK FOR UNIT NAME  SS MAR87
         L     R1,CVTPT                                        SS JAN84
         TM    CVTDCB(R1),CVTMVSE                              SS JAN84
         BZ    XA0                                             SS JAN84
         MVI   FLAG2,CVTMVSE                                   SS JAN84
XA0      DS    0H                                              SS JAN84
         AIF   ('&SYSPARM' EQ 'TEST' OR                                -
               '&SYSPARM' EQ 'TESTXA').TEST3                   DM JUN83
         MODESET KEY=ZERO
.TEST3   ANOP  ,                                               DM JUN83
         TM    FLAG2,CVTMVSE                                   SS JAN84
         BO    XA1                                             SS JAN84
         L     R0,CORESIZE         SET GETMAIN SIZE            RCHJUN80
         GETMAIN R,LV=(0)          GETMAIN AREA FOR EDT        RCHJUN80
         LR    R10,R1              SET AREA TO R10             SS MAR87
         B     XA2                                             SS JAN84
XA1      DS    0H                                              SS JAN84
         AIF   ('&SYSPARM' EQ 'TEST' OR                                -
               '&SYSPARM' EQ 'NONXA').TEST3A                   SS AUG84
         L     R0,CORESIZX         SET GETMAIN SIZE            SS JAN84
         GETMAIN RU,LV=(0),LOC=ANY,SP=&XASP AREA FOR EDT       SS JAN84
         LR    R10,R1              SET AREA TO R10             SS MAR87
         B     XA3                                             SS MAR87
         AGO   .TEST3B                                         SS AUG84
.TEST3A  ANOP  ,                                               SS AUG84
         ABEND 3888                                            SS AUG84
.TEST3B  ANOP  ,                                               SS AUG84
XA2      DS    0H                                              SS JAN84
         LR    R10,R1              SET AREA TO R10             RCHJUN80
         LOAD  EP=IEFEDTTB         LOAD EDT                    RCHMAY80
         LR    R8,R0               USE R8 AS PTR OLD EDT
         OI    FLAG2,LDEDT         LOADED EDT MUST BE DELETED  SS MAR87
         USING EDT,R8                                          DM JUN83
         ST    R8,EDTPTR           SAVE IBM EDT PTR            RCHJUN80
*
*  BUILD GROUP - UNIT CROSS REFERENCE TABLE
*
         MVC   0(12,R10),DYNAHDR   SET OUT HEADER CONSTANT     DM JUL80
         MVC   12(4,R10),CORESIZE  SAVE SUBPOOL AND LENGTH     RCHJUN80
         LA    R10,16(R10)         SET EDT START ADDR          RCHJUN80
         MVC   PREFTAB,EDTPREF     SAVE IBM PREFTAB ADDR       DM JUN83
         LA    R1,GRPLNG                GROUP POINTER LENG     SS JAN84
         STH   R1,GRPLNG2                SAVE LENGTH           SS JAN84
         L     R1,CVTPT
         L     R1,CVTILK2(R1)           CVTILK2 .. UCBLU 2     DM JUN83
         L     R3,EDTGRP                GRP PT SEC             DM JUN83
         USING GRPSECT,R3                                      DM JUN83
         L     R2,0(R3)                 NUM OF PT
         LA    R3,8(R3)                 OVER HDR
         LA    R4,GXREF
         USING GXREFDEF,R4                                     DM JUN83
BLDGX    L     R5,GRPID                 GRP ID                 DM JUN83
         L     R6,GRPUCB#               UCBS IN GRP            DM JUN83
         L     R7,GRPUCB1               FIRST UCB PT           DM JUN83
         USING UCBSECT,R7                                      DM JUN83
BLDGXE   STH   R5,GXROLDID              OLD GRP ID             SS JAN84
         XC    GXRNEWID,GXRNEWID        ZERO NEW ID            SS JAN84
         LH    R14,UCB#                 LOAD UCB POINTER       DM JUN83
         STH   R14,GXRUCBIX             SAVE INDEX             SS JAN84
         SLA   R14,1                    TIMES 2 (HALF WORD)    SS JAN84
         LA    R14,0(R14,R1)            UCB LOOKUP OFFSET      SS JAN84
         ICM   R14,B'0011',0(R14)       UCB ADDR               SS JAN84
         ICM   R14,B'1100',=X'0000'     CLEAR TOP HALF         SS JAN84
         ST    R14,GXRUCBPT             SAVE UCBADDR           SS JAN84
         XC    GXRMASKS,GXRMASKS        ZERO  MASK             SS JAN84
         LA    R7,UCBLNG(R7)            NEXT UCB               DM JUN83
         LA    R4,GXRLNG(R4)            NEXT GXE               DM JUN83
         C     R4,GXREFXXX              END OF GETMAIN AREA    SS AUG84
         BNL   MSG7                     YES....EXIT WITH ERROR SS AUG84
         BCT   R6,BLDGXE                FOR EACH IN GRP
         LA    R3,GRPLNG(R3)            NEXT GRP               DM JUN83
         BCT   R2,BLDGX                 FOR ALL GRPS
         DROP  R3,R4,R7                                        DM JUN83
         L     R9,EDTUCB                UCB PT SEC             DM JUN83
         L     R9,0(R9)                 NUM UCBS
         ST    R9,NUMUNIT               SAVE FOR LATER         SS JAN84
*
*   SCAN UCBS AND MARK GXREF WITH DASD DEVICES
*
*   DELETE                                                     SS JAN84
*
         B     XA4                                             SS JAN84
XA3      DS    0H                                              SS JAN84
         AIF   ('&SYSPARM' EQ 'NONXA' OR                               -
               '&SYSPARM' EQ 'TEST').TEST3E                    SS NOV86
*
*  BUILD GROUP - UNIT CROSS REFERENCE TABLE FOR XA
*
         LA    R1,IN31A                 START OF 31 BIT MODE   SS JAN84
         O     R1,=X'80000000'          MODE BIT ON            SS JAN84
         BSM   0,R1                     SWITCH MODES TO 31     SS JAN84
IN31A    DS    0H                                              SS JAN84
         L     R2,CVTPT            LOAD CVT ADDR               DM NOV83
         L     R2,CVTJESCT(R2)     LOAD JESCT ADDR             SS JAN84
         L     R3,JESEDTA(R2)      LOAD OLD EDT PTR            SS JAN84
         CLC   DYNAHDR(8),EDTCREAT-EDT(R3)  OWR EDT            SS MAR87
         BE    GETGEN              YES, GET GEN EDT            SS MAR87
         LR    R8,R3               ASSUME GEN EDT              SS MAR87
         OI    FLAG2,GENEDT        CURRENT IS GEN EDT          SS MAR87
         B     SETEDT                   *                      SS MAR87
GETGEN   DS    0H                       *                      SS MAR87
         LA    R3,0(,R3)           CLEAR HI BIT                SS MAR87
         LA    R4,16               LOAD CONSTENT               SS MAR87
         SR    R3,R4               BACK UP TO HEADER           SS MAR87
         CLC   0(8,R3),DYNAHDR2    NEW HEADER                  SS MAR87
         BNE   LOADEDT             NO, OLD, GET IEFEDTTB       SS MAR87
         L     R8,8(,R3)           GET GEN EDT                 SS MAR87
         B     SETEDT                   *                      SS MAR87
LOADEDT  DS    0H                       *                      SS MAR87
         LOAD  EP=IEFEDTTB         LOAD EDT                    SS MAR87
         LR    R8,R0               USE R8 AS PTR OLD EDT       SS MAR87
         OI    FLAG2,LDEDT         LOADED EDT MUST BE DELETED  SS MAR87
SETEDT   LA    R8,0(,R8)                CLEAR BIT ZERO         SS AUG84
         ST    R8,EDTPTR                SAVE SYSGEN EDT        SS AUG84
         MVC   0(08,R10),DYNAHDR2  SET OUT HEADER CONSTANT     SS MAR87
         ST    R8,8(,R10)          SAVE GEN EDT                SS MAR87
         AIF   ('&SYSPARM' EQ 'TESTXA').TEST3C                 SS NOV86
         MVC   12(4,R10),CORESIZX  SAVE LENGTH                 SS AUG84
         MVI   12(R10),&XASP                                   SS AUG84
         AGO   .TEST3D                                         SS AUG84
.TEST3C  ANOP  ,                                               SS AUG84
         MVC   12(4,R10),CORESIZE  SAVE SUBPOOL AND LENGTH     SS AUG84
.TEST3D  ANOP  ,                                               SS AUG84
         LA    R1,GRPLNGX               GROUP POINTER LENG     SS JAN84
         STH   R1,GRPLNG2                SAVE LENGTH           SS JAN84
         L     R1,CVTPT                 CVT                    SS JAN84
         L     R1,CVTJESCT(R1)          JESCT                  SS JAN84
         L     R1,JESUPLP(R1)           UCB PT TLE             SS JAN84
         LA    R1,UPLUCBA-4(R1)         OFFSET FOR INDEX       SS JAN84
         LA    R10,16(R10)         SET EDT START ADDR          RCHJUN80
         MVC   PREFTAB,EDTPREF     SAVE IBM PREFTAB ADDR       DM JUN83
         L     R3,EDTGRP                GRP PT SEC             DM JUN83
         USING GRPSECT,R3                                      DM JUN83
         L     R2,0(R3)                 NUM OF PT
         LA    R3,8(R3)                 OVER HDR
         LA    R4,GXREF
         USING GXREFDEF,R4                                     DM JUN83
BLDGX2   LH    R5,GRPID                 GRP ID                 SS JAN84
         LH    R6,GRPDEV#               UCBS IN GRP            SS JAN84
         L     R7,EDTUCB                UCB SEC                SS JAN84
         LH    R7,GRPDEV1               FIRST DEV INDEX        SS JAN84
         SLA   R7,2                     TIMES 4 (FULL WORD)    SS JAN84
         ALR   R7,R1                    INDEX INTO UCB LIST    SS JAN84
         USING UCBSECT,R7                                      DM JUN83
BLDGXE2  STH   R5,GXROLDID              OLD GRP ID             SS JAN84
         XC    GXRNEWID,GXRNEWID        ZERO NEW ID            DM JUN83
         MVC   GXRUCBPT(4),0(R7)        COPY UCB ADDR          SS JAN84
         XC    GXRMASKS,GXRMASKS        ZERO  MASK             SS JAN84
         LA    R7,4(R7)                 NEXT UCB  IN LIST      DM JUN83
         LA    R4,GXRLNG(R4)            NEXT GXE               DM JUN83
         C     R4,GXREFXXX              END OF GETMAIN AREA    SS AUG84
         BNL   MSG7                     YES....EXIT WITH ERROR SS AUG84
         BCT   R6,BLDGXE2               FOR EACH IN GRP
         LA    R3,GRPLNGX(R3)           NEXT GRP               DM JUN83
         BCT   R2,BLDGX2                FOR ALL GRPS
         DROP  R3,R4,R7                                        DM JUN83
         L     R9,EDTUCB                UCB PT SEC             DM JUN83
         L     R9,0(R9)                 NUM UCBS
         ST    R9,NUMUNIT               SAVE FOR LATER         SS JAN84
         LA    R1,IN24A                 BACK TO 24  BIT MODE   SS JAN84
         BSM   0,R1                     SWITCH MODES TO 24     SS JAN84
IN24A    DS    0H                                              SS JAN84
.TEST3E  ANOP  ,                                               SS SEP85
XA4      DS    0H                                              SS JAN84
*
*  BUILD MODIFIED NAME TABLE FROM INPUT AND SET MASK IN GXREF
*  FOR EACH VOLSER OR CUU
*
         L     R6,=X'10000000'          MASK BIT ONE
         LA    R5,MNT                   MODIFIED NAME TABLE
         LA    R9,0                     MASK INDEX             SS JAN84
BLDMNT   BAL   R14,GETNEXT              NEXT FIELD
         C     R15,=F'255'              END OF FILE
         BE    SORTGRP
         MVI   MNTFLAG(R5),X'00'        PRE ZERO FLAG          SS JAN84
         CLI   BUF,C'-'                 IS IT EXCLUDE FUNCTION
         BNE   TESTVIO                  NO NEXT TEST
         OI    MNTFLAG(R5),EXCLUDE      INDICATES EXCLUDE      SS JAN84
         B     OVERCHAR
TESTVIO  CLI   BUF,C'+'                 IS IT VIO
         BNE   SKIPFLAG                 NO
         OI    MNTFLAG(R5),LKPVIO       INDICATES VIO          SS JAN84
OVERCHAR C     R15,=F'9'                MAX OF 1+8 CHARS
         BH    MSG2                     TOO BIG
         MVC   MNTNAME(8,R5),BUF+1      COPY UNIT NAME         SS JAN84
         B     SETMASK
SKIPFLAG C     R15,=F'8'                MAX OF 8 CHARS
         BH    MSG2                     TOO BIG
         MVC   MNTNAME(8,R5),BUF        COPY UNIT NAME         SS JAN84
SETMASK  ST    R6,MNTMASK(R5)           SAVE MASK              SS JAN84
         STH   R9,MNTMASKI(R5)          SAVE MASK INDEX        SS JAN84
EACHU    BAL   R14,GETNEXT              GET A UNIT
         C     R15,=F'255'              END OF RECORD
         BE    BUMPMNT                  YES BUMP FOR NEXT NAME
         CLI   BUF,C'/'                 IS IT CUU
         BE    SCANALL                  YES
         C     R15,=F'6'                MAX CHAR IN VOLSER
         BH    MSG3                     TOO BIG
         BCTR  R15,0                    SET TO END             SS APR86
         LA    R14,BUF(R15)                 OF VOLUME          SS APR86
         CLI   0(R14),C'*'              IS IT GENERIC          SS APR86
         BE    SCANGEN                  YES                    SS APR86
         SR    R14,R14                  ZERO COUNT             SS APR86
         LA    R15,5                    SET COMPARE LENGTH     SS APR86
         B     SCANINIT                 DO SCAN                SS APR86
SCANGEN  DS    0H                                              SS APR86
         LTR   R15,R15                  ONE CHAR LONG          SS APR86
         BZ    EACHU                    YES IGNORE             SS APR86
         SR    R14,R14                  ZERO COUNT             SS APR86
         BCTR  R15,0                    ADJUST COMPARE LENGTH  SS APR86
SCANINIT DS     0H                      COMMENT                SS APR86
         L     R2,NUMUNIT               NUM OF UCBS            SS JAN84
         LA    R3,GXREF                 START SCAN ON TABLE
         USING GXREFDEF,R3                                     DM JUN83
SCANVOL  L     R4,GXRUCBPT              UCB ADDR               SS JAN84
         TM    UCBDVCLS(R4),UCB3DACC    IS IT DASD             SS JAN84
         BNO   BUMPU                    NO                     SS JAN84
         TM    UCBSTAT(R4),UCBCHGS+UCBUNLD OFFLINE/UNLOAD BITS DM NOV83
         BNZ   BUMPU                    YES DO NOT USE
         TM    UCBSTAT(R4),UCBONLI      ONLINE/SL BITS         DM NOV83
         BNO   BUMPU                    NOT THERE DO NOT USE
         CLC   UCBVOLI(0,R4),BUF        IS THIS A VOLUME MATCH SS APR86
         EX    R15,*-6                  COMPARE WITH LENGTH    SS APR86
         BNE   BUMPU                    NO SKIP
         L     R4,GXRMASK(R9)           YES ... GET MASK       SS JAN84
         OR    R4,R6                    OR INTO MASK
         ST    R4,GXRMASK(R9)           PUT MASK BACK          SS JAN84
         C     R15,=F'5'                FULL VOL SER           SS APR86
         BE     EACHU                   YES, NO MORE COMPARES  SS APR86
         LA     R14,1(,R14)             BUMP COUNT OF VOLS     SS APR86
BUMPU    LA    R3,GXRLNG(R3)            NEXT UNIT IN GXE       DM JUN83
         BCT   R2,SCANVOL
         DROP  R3                                              DM JUN83
         LTR   R14,R14                  ANY VOLUMES            SS APR86
         BNZ   EACHU                    YES, NO MSG            SS APR86
         B     MSG4
SCANALL  DS    0H                                              SS APR86
         NI    FLAG2,255-RANGE      CLEAR FLAG                 SS MAR87
         C     R15,=F'8'            RANGE OF DEVICES           SS MAR87
         BE    SCANRNG              YES                        SS MAR87
         C     R15,=F'4'            MAX SIZE FOR ONE CUU       SS MAR87
         BH    MSG8                 OVER... ERROR              SS MAR87
         CLI   BUF+2,C'*'               GENERIC ONE CHAR       SS MAR87
         BE    UNITGEN1                 SETUP                  SS MAR87
         CLI   BUF+3,C'*'               GENERIC                SS APR86
         BE    UNITGENC                 YES                    SS APR86
         LA    R15,2                    SET COMPARE LENGH      SS APR86
         SR    R14,R14                  ZERO VOL COUNT         SS APR86
         B     SCANALLI                 CONTINUE               SS APR86
SCANRNG  DS    0H                   *                          SS MAR87
         CLI   BUF+4,C'-'           SYTAX CHECK                SS MAR87
         BNE   MSG8                 ERROR                      SS MAR87
         LA    R1,BUF+1             POINT TO FIRST CUU         SS MAR87
         BAL   R14,CHECKHEX         *                          SS MAR87
         LA    R1,1(,R1)            CHAR 2                     SS MAR87
         BAL   R14,CHECKHEX         *                          SS MAR87
         LA    R1,1(,R1)            CHAR 3                     SS MAR87
         BAL   R14,CHECKHEX         *                          SS MAR87
         LA    R1,2(,R1)            NEXT CUU                   SS MAR87
         BAL   R14,CHECKHEX         *                          SS MAR87
         LA    R1,1(,R1)            CHAR 2                     SS MAR87
         BAL   R14,CHECKHEX         *                          SS MAR87
         LA    R1,1(,R1)            CHAR 4                     SS MAR87
         BAL   R14,CHECKHEX         *                          SS MAR87
         MVI   BUF+4,C'0'           SIGN AND PAD               SS MAR87
         MVI   BUF+8,C'0'           SIGN AND PAD CUU 2         SS MAR87
         PACK  DBLWRD(3),BUF+1(4)                              SS MAR87
         MVC   LOWCUU(2),DBLWRD     *                          SS MAR87
         PACK  DBLWRD(3),BUF+5(4)                              SS MAR87
         MVC   HICUU(2),DBLWRD      *                          SS MAR87
         CLC   HICUU,LOWCUU         RANGE MUST BE IN ORDER     SS MAR87
         BNH   MSG8                 ERROR.. OUT OF ORDER       SS MAR87
         OI    FLAG2,RANGE          *                          SS MAR87
         B     SCANALLI                 CONTINUE               SS APR86
UNITGEN1 DS    0H                                              SS MAR87
         LA    R15,0                    SET COMPARE LENGH      SS MAR87
         SR    R14,R14                  ZERO VOL COUNT         SS MAR87
         B     SCANALLI                 CONTINUE               SS MAR87
UNITGENC DS    0H                                              SS APR86
         LA    R15,1                    SET COMPARE LENGH      SS APR86
         SR    R14,R14                  ZERO VOL COUNT         SS APR86
SCANALLI L     R2,NUMUNIT               NUM OF UCBS            SS APR86
         LA    R3,GXREF                 START AT TOP
         USING GXREFDEF,R3                                     DM JUN83
SCANUCB  L     R4,GXRUCBPT              UCB PT                 DM JUN83
         TM    FLAG2,RANGE              PROCESSING RANGE       SS MAR87
         BO    CKRANGE                  YES                    SS MAR87
         CLC   UCBNAME(0,R4),BUF+1      MATCH UNIT ADDRESS     SS APR86
         EX    R15,*-6                  COMPARE WITH LENGTH    SS APR86
         BNE   NEXTU                    NO MATCH
         B     SETCUU               *                          SS MAR87
CKRANGE  DS    0H                   *                          SS MAR87
         CLC   UCBNUM(2,R4),LOWCUU  LOWER THAN LOW             SS MAR87
         BL    NEXTU                YES, SKIP                  SS MAR87
         CLC   UCBNUM(2,R4),HICUU   HIGHER THAN HI             SS MAR87
         BH    NEXTU                YES, SKIP                  SS MAR87
         B     SETCUU               GOOD ON                    SS MAR87
SETCUU   L     R4,GXRMASK(R9)           YES, GET MASK          SS MAR87
         OR    R4,R6                    OR MASKS TOGETHER
         ST    R4,GXRMASK(R9)           PUT NEW MASK BACK      SS APR85
         TM    FLAG2,RANGE              PROCESSING RANGE       SS MAR87
         BO    BUMPVC                   *                      SS MAR87
         C     R15,=F'2'                IS IT GENERIC          SS APR86
         BE    EACHU                    NO, CONTINUE NEXT CUU  SS APR86
BUMPVC   LA    R14,1(,R14)              BUMP VOL COUNT         SS MAR87
NEXTU    LA    R3,GXRLNG(R3)            NEXT UNIT              DM JUN83
         BCT   R2,SCANUCB
         DROP  R3                                              DM JUN83
         LTR   R14,R14                  ANY VOLUMES            SS APR86
         BNZ   EACHU                    YES, CONTINUE NEXT CUU SS APR86
         B     MSG5                     NEVER FOUND IT
         SPACE ,                                               DM JUN83
BUMPMNT  LA    R5,MNTLN(R5)             NEXT NAME              SS JAN84
         SRL   R6,1                     SHIFT MASK TO NEXT BIT
         LTR   R6,R6                    MAX OF 32 SHIFTS
         BNZ   BLDMNT                   CONTINUE INPUT
         LA    R9,4(R9)                 BUMP MASK INDEX        SS JAN84
         LA    R2,GXRMASKZ              MAX INDEX SIZE         SS JAN84
         CR    R2,R9                    AT END OF MASK         SS JAN84
         BE    MSG6                     YES, MESSAGE           SS JAN84
         L     R6,=X'10000000'          START NEXT MASK        SS JAN84
         B     BLDMNT                   CONTINUE
SORTGRP  MVI   0(R5),FF                 END FLAG
*
* SORT GROUP - UNIT XREF BY OLD GROUP AND MASK BITS
*
SORTAGN  MVI   BFLAG,0                  ZERO SORT COMPLETE FLAG
         LA    R2,GXREF                 START OF TABLE
         USING GXREFDEF,R2                                     DM JUN83
         L     R3,NUMUNIT               NUM OF UNITS           SS JAN84
         BCTR  R3,0                     LESS ONE
COMPAIR  CLC   GXROLDID(GXRSORTL),GXROLDID+GXRLNG  COMPRE      SS JAN84
         BNH   INORDER                  NO SWITCH
         XC    GXREFDEF(GXRLNG),GXREFDEF+GXRLNG  SWITCH        SS JAN84
         XC    GXREFDEF+GXRLNG(GXRLNG),GXREFDEF    CURRENT AND SS JAN84
         XC    GXREFDEF(GXRLNG),GXREFDEF+GXRLNG      NEXT      SS JAN84
         MVI   BFLAG,FF                 SORT INCOMPLETE
INORDER  LA    R2,GXRLNG(R2)            MOVE TO NEXT           DM JUN83
         DROP  R2                                              DM JUN83
         BCT   R3,COMPAIR               REPEAT
         CLI   BFLAG,FF                 ANY CHANGES
         BE    SORTAGN                  YES, RESORT
         DROP  R8                                              DM JUN83
*
* BUILD NEW GROUP ID SECTION RE GROUPING BASED ON MASK
*
         AIF   ('&SYSPARM' EQ 'TEST' OR                                -
               '&SYSPARM' EQ 'NONXA').TEST3F                   SS MAR87
         TM    FLAG2,CVTMVSE            XA                     SS JAN84
         BNO   XA5                                             SS JAN84
         LA    R1,IN31B                 START OF 31 BIT MODE   SS JAN84
         O     R1,=X'80000000'          MODE BIT ON            SS JAN84
         BSM   0,R1                     SWITCH MODES TO 31     SS JAN84
IN31B    DS    0H                                              SS JAN84
XA5      DS    0H                                              SS JAN84
.TEST3F  ANOP  ,                                               SS SEP85
         USING EDT,R10                                         DM JUN83
         MVC   EDTCREAT,DYNAHDR    IDENTIFY CREATOR            DM JUN83
         TIME  DEC                                             DM JUN83
         SRL   R0,12               SHIFT OFF SECONDS           DM JUN83
         STM   R0,R1,DBLWRD                                    DM JUN83
         OI    DBLWRD+3,15         SIGN TIME                   DM JUN83
         MVC   WTOE(7),=X'402120204B2020'                      DM JUN83
         ED    WTOE(7),DBLWRD+1    FORMAT TIME                 DM JUN83
         MVC   EDTTIME,WTOE+2      TO HEADER                   DM JUN83
         XC    DBLWRD(4),DBLWRD    ZERO TIME FROM DBLWRD       DM JUN83
         BAL   R14,TOCAL           CONVERT DATE TO CALENDAR    DM JUN83
         MVC   WTOE(10),=X'40212020612020612020'               DM JUN83
         ED    WTOE(10),DBLWRD+4   FORMAT DATE                 DM JUN83
         MVC   EDTDATE,WTOE+2      TO EDT HEADER               DM JUN83
         LA    R2,GXREF
         USING GXREFDEF,R2                                     DM JUN83
         L     R3,NUMUNIT               NUM OF UNITS           SS JAN84
         TM    FLAG2,CVTMVSE            XA                     SS JAN84
         BO    XA6                      YES                    SS JAN84
         LA    R4,EDT+EDTHDRL           NEW UCB PT SEC         DM JUN83
         ST    R4,EDTUCB                INIT HDR               DM JUN83
         ST    R3,0(R4)                 CNT IN UCB PT SEC HDR  SS JAN84
         LA    R5,UCBLNG                ENTRY LENGTH           DM JUN83
         ST    R5,4(R4)                 INIT UCB PT SEC HDR
         LA    R4,8(R4)                 OVER HEADER
         LR    R14,R4                   HOLD IT
         USING UCBSECT,R4                                      DM JUN83
BLDUS    MVC   UCB#,GXRUCBIX            COPY UCB PT            DM JUN83
         LA    R4,UCBLNG(R4)            NEXT ENTRY             DM JUN83
         LA    R2,GXRLNG(R2)            NEXT GXREF ENTRY       DM JUN83
         BCT   R3,BLDUS
         B     XA7                                             SS JAN84
XA6      DS    0H                                              SS JAN84
         LA    R4,EDT+EDTHDRLX          NEW UCB PT SEC         SS AUG84
         ST    R4,UPLSTR                SAVE START OF UPL      SS JAN84
         MVC   EDTNAME(4),=CL4'EDT '                           SS AUG84
         L     R1,CVTPT                 CVT                    SS JAN84
         L     R1,CVTJESCT(R1)          JESCT                  SS JAN84
         L     R1,JESUPLP(R1)           UCB PT LIST            SS JAN84
         MVC   0(UPLUCBA,R4),0(R1)      COPY HEADER            SS JAN84
         LA    R4,UPLUCBA(R4)           START OF UCP PT LIST   SS JAN84
BLDUS2   L     R1,GXRUCBPT              UCB ADDR               SS JAN84
         ST    R1,0(R4)                 ADD TO UCB PT LIST     SS JAN84
         LA    R4,4(R4)                 NEXT ENTRY             DM JUN83
         LA    R2,GXRLNG(R2)            NEXT GXREF ENTRY       DM JUN83
         BCT   R3,BLDUS2
         L     R3,NUMUNIT               NUM OF UNITS           SS JAN84
         ST    R4,EDTUCB                INIT HDR               DM JUN83
         ST    R3,0(R4)                 CNT IN UCB PT SEC HDR  SS JAN84
         LA    R5,UCBLNGX               ENTRY LENGTH           DM JUN83
         ST    R5,4(R4)                 INIT UCB PT SEC HDR
         LA    R4,8(R4)                 OVER HEADER
         LA    R2,GXREF
BLDUS3   L     R1,GXRUCBPT              UCB ADDR               SS JAN84
         MVC   DEV#,UCBNAME(R1)         COPY DEV CUU           SS JAN84
         LA    R4,UCBLNGX(R4)           NEXT ENTRY             DM JUN83
         LA    R2,GXRLNG(R2)            NEXT GXREF ENTRY       DM JUN83
         BCT   R3,BLDUS3
         DROP  R2                                              DM JUN83
XA7      DS    0H                                              SS JAN84
         LA    R4,3(R4)                 ROUND UP TO FULL WORD
         N     R4,=F'-4'                TRUNCATE TO FULLWORD   DM NOV84
         USING GRPSECT,R4                                      DM JUN83
         ST    R4,EDTGRP                INIT HDR               DM JUN83
         LH    R5,GRPLNG2               ENTRY LENGTH           DM JUN83
         ST    R5,4(R4)                 INIT GRP SEC HDR
         LA    R4,8(R4)                 OVER GRP SEC HDR
         LA    R2,GXREF
         USING GXREFDEF,R2                                     DM JUN83
         L     R3,NUMUNIT               NUM OF UNITS           SS JAN84
         LA    R5,1                     FIRST NEW GRP ID
* NEXT LA HAS NO EFFECT IN NON XA                              SS JAN84
         LA    R9,1                     FIRST UCB INDEX        SS JAN84
         LR    R6,R2                    TO COMPRESS GXREF
BLDGS    SR    R7,R7                    TO COUNT UCBS IN GRP
* NEXT LR HAS NO EFFECT IN XA                                  SS JAN84
         LR    R15,R14                  START AT FIRST UCB
TESTGRP  CLC   GXROLDID,GXROLDID-GXREFDEF(R6)   CHK GRP ID     DM JUN83
         BNE   SETGE                    NO, SET UP FOR NEXT
         CLC   GXRMASKS,GXRMASKS-GXREFDEF(R6) CHK MASK         SS JAN84
         BNE   SETGE                    NO, SET UP FOR NEXT
         LA    R2,GXRLNG(R2)            NEXT GXE               DM JUN83
* NEXT LA HAS NO EFFECT IN XA                                  SS JAN84
         LA    R14,UCBLNG(R14)          NEXT UNIT              DM JUN83
         LA    R7,1(R7)                 COUNT UNITS THIS GRP
         BCT   R3,TESTGRP               KEEP COUNTING UNITS IN GRP
SETGE    STH   R5,GXRNEWID-GXREFDEF(R6) NEW GRP IN GXREF       SS JAN84
         TM    FLAG2,CVTMVSE            XZ                     SS JAN84
         BO    XA8                      YES                    SS JAN84
         ST    R5,GRPID                 GRP ID IN ENTRY        DM JUN83
         ST    R7,GRPUCB#               NUM UCBS IN GRP        DM JUN83
         ST    R15,GRPUCB1              POINT TO 1ST UCB OF GRPDM JUN83
         LA    R4,GRPLNG(R4)            NEXT ENTRY             DM JUN83
         B     XA9                                             SS JAN84
XA8      DS    0H                                              SS JAN84
         STH   R5,GRPID                 GRP ID IN ENTRY        DM JUN83
         STH   R7,GRPDEV#               NUM UCBS IN GRP        DM JUN83
         STH   R9,GRPDEV1               POINT TO 1ST UCB OF GRPDM JUN83
         LA    R9,0(R7,R9)              FIRST INDEX OF NEXT    SS JAN84
         LA    R4,GRPLNGX(R4)           NEXT ENTRY             DM JUN83
XA9      DS    0H                                              SS JAN84
         LTR   R3,R3                    WAS IT LAST UCB
         BZ    FIXGS                    YES, COMPLETE HDR
         LA    R6,GXRLNG(R6)            NEXT GXE               SS JAN84
*              COMPRESS                                        DM JUN83
         MVC   GXREFDEF-GXREFDEF(GXRLNG,R6),GXREFDEF           DM JUN83
         LA    R5,1(R5)                 NEXT NEW GRP ID
         B     BLDGS
         DROP  R2,R4                                           DM JUN83
         SPACE ,                                               DM JUN83
FIXGS    L     R1,EDTGRP                HDR GRP SEC            DM JUN83
         ST    R5,0(R1)                 INIT HDR WITH NUM OF GRPS
         ST    R5,NUMUNIT               NEW SIZE OF GXREF
         LA    R6,GXRLNG(R6)            START PTXREF AFTER GXREF
         ST    R6,APTXREF               HOLD FOR LATER
         LA    R4,3(R4)                 ROUND UP TO FULL WORD  SS JAN84
         N     R4,=F'-4'                TRUNCATE TO FULLWORD   SS JAN84
*
*  BUILD GROUP POINTER TABLE
*
         ST    R4,ADRGRPT               SAVE ADDRESS           DM NOV83
         ST    R4,EDTGRPT               INIT HDR ADDR GRP PTR  DM NOV83
         LA    R5,GRPTLNG               SIZE OF EACH PT        DM NOV83
         ST    R5,4(R4)                 INIT HDR OF GRP PT SEC DM NOV83
         LA    R4,8(R4)                 OVER HEADER            DM NOV83
         SR    R7,R7                    ZERO COUNT OF ENTRIES
         L     R3,EDTLKUP-EDT(,R8)      OLD LOOK UP SEC        DM JUN83
         L     R2,0(R3)                 NUM OF ENTRIES
         LA    R3,8(R3)                 OVER HDR
         USING LKPSECT,R3                                      DM JUN83
BLDGPLU  LA    R1,MNT                   MODIFIED NAME TABLE
SCANNM   CLI   0(R1),FF                 END OF NAMES
         BE    NOMOD                    YES,  NO FOUND .. NO MOD
         CLC   MNTNAME(8,R1),LKPNAME    ARE UNIT NAMES SAME    SS JAN84
         BNE   NEXTNM                   NO, TRY NEXT
         TM    MNTFLAG(R1),EXCLUDE      WE GOING TO MODIFY IT  SS JAN84
         BZ    RPUNIT                   NO, WE REPLACE IT      SS AUG84
         MVC   MASK,MNTMASK(R1)         YES,  SAVE MASK FOR CMPSS JAN84
         LH    R9,MNTMASKI(R1)          GET MASK INDEX         SS JAN84
         B     SETGN                    CONTINUE WORKING THE EDT
NEXTNM   LA    R1,MNTLN(,R1)            NEXT MOD NAME TABLE EN SS JAN84
         B     SCANNM
NOMOD    MVC   MASK,=F'0'               USE NULL MASK
         LA    R9,0                     USE NULL INDEX         SS JAN84
SETGN    STM   R2,R3,COUNT1             SAVE OUTER LOOP CONTROL
         PUSH  USING                                           DM JUN83
         SR    R15,R15                  ZERO FOR NULL GENERIC  SS SEP84
         LM    R2,R3,LKPGNRC#           COUNT, PT TO GENERIC   DM JUN83
         LTR   R2,R2                    TEST FOR ZERO GENERICS SS SEP84
         BZ    BUMPUN2                  SKIP THIS NAME         SS SEP84
         USING GNRCSECT,R3                                     DM JUN83
GENGN    STM   R2,R3,COUNT2             SAVE NEXT IN LOOP CONTROL
         PUSH  USING                                           DM JUN83
         LM    R2,R3,GNRCGRP#           COUNT, PT TO GRP PT SECDM JUN83
         USING GRPTSECT,R3                                     SS JAN84
         SR    R15,R15                  NEW COUNT OF PT
GETGP    L     R1,GRPTPTR               LOAD POINTER TO GRP    SS JAN84
         TM    FLAG2,CVTMVSE            XA                     SS JAN84
         BO    XA10                                            SS JAN84
         MVC   GROUP,GRPIDHF(R1)        SAVE FOR COMPARE       SS JAN84
         B     XA11                                            SS JAN84
XA10     DS    0H                                              SS JAN84
         MVC   GROUP,GRPID-GRPSECT(R1)  SAVE FOR COMPARE       SS JAN84
XA11     DS    0H                                              SS JAN84
         L     R5,NUMUNIT               NUM UNITS              SS JAN84
         LA    R14,GXREF                FOR SCAN OF TABLE
         USING GXREFDEF,R14                                    DM JUN83
         L     R1,EDTGRP                GROUP SECTION          DM JUN83
         LA    R1,8(R1)                 OVER HDR
FINDGP   CLC   GROUP,GXROLDID           SAME GROUP             DM JUN83
         BNE   NEXTGRP                  NO TRY NEXT
         L     R0,GXRMASK(R9)           MASK                   SS JAN84
         N     R0,MASK                  SAME BIT ON
         BNZ   NEXTGRP                  BIT ON, EXCLUDE THIS GROUP
         LA    R15,1(R15)               ONE MORE INCLUDED
         LA    R7,1(R7)                 1 TO TOTAL
         ST    R1,0(R4)                 BUILD POINTER
         LA    R4,GRPTLNG(R4)           BUMP TO NEXT PLACE     DM JUN83
NEXTGRP  AH    R1,GRPLNG2               NEXT GROUP             DM JUN83
         LA    R14,GXRLNG(R14)          NEXT IN GXREF          DM JUN83
         BCT   R5,FINDGP                WORK ALL GROUPS
         LA    R3,GRPTLNG(R3)           NEXT OLD POINTER       DM JUN83
         BCT   R2,GETGP
         DROP  R14                                             DM JUN83
         STH   R15,0(R6)                SAVE COUNT             SS JAN84
         LA    R6,2(R6)                 NEXT PTXREF            SS JAN84
         LM    R2,R3,COUNT2             RESTORE LOOP CONTROL
         POP   USING                                           DM JUN83
         LA    R3,GNRCLNG(R3)           NEXT GENERIC           DM JUN83
         BCT   R2,GENGN                 REPEAT FOR THIS GENERIC
         B     BUMPUN
RPUNIT   OI    MNTFLAG(R1),REPL         INDICATE REPLACED      SS AUG84
         STM   R2,R3,COUNT1             SAVE OUTER LOOP CONTROL
*        PUSH  USING ALREADY DONE AFTER LABEL SETGN            SS AUG84
*                                                              SS AUG84
*    SET GROUP POINTERS FOR REPLACED NAMES                     SS AUG84
*                                                              SS AUG84
         L     R5,NUMUNIT               GXREF COUNTER          SS AUG84
         LA    R14,GXREF                TO SCAN GXREF          SS AUG84
         USING GXREFDEF,R14                                    SS AUG83
         L     R3,EDTGRP                GRP SEC                SS AUG83
         USING GRPSECT,R3                                      SS AUG83
         LA    R3,8(R3)                 OVER HDR               SS AUG84
         SR    R15,R15                  COUNTER OF GROUPS      SS AUG84
         LH    R9,MNTMASKI(R1)          MASK INDEX             SS AUG84
MATCHMSK L     R0,GXRMASK(R9)           MASK FROM GXREF        SS AUG84
         N     R0,MNTMASK(R1)           COMPARE MASKS          SS AUG84
         BZ    NOTMATCH                 GROUP NOT INCLUDED     SS AUG84
         ST    R3,0(R4)                 SET GROUP POINTER      SS AUG84
         LA    R7,1(R7)                 ADD 1 TO TOTAL         SS AUG84
         LA    R15,1(R15)               NUM GROUPS FOR THIS NAMES AUG84
         LA    R4,GRPTLNG(R4)           NEXT PLACE FOR POINTER SS AUG84
NOTMATCH AH    R3,GRPLNG2               NEXT GROUP             SS AUG84
         LA    R14,GXRLNG(R14)          NEXT GROUP IN GXREF    SS AUG84
         BCT   R5,MATCHMSK              KEEP LOOKING OF MATCHESSS AUG84
         DROP  R14                                             SS AUG84
BUMPUN2  DS    0H                       MAKE PLACE HOLDER      SS SEP84
         STH   R15,0(R6)                SAVE COUNT IN PTXREF   SS AUG84
         LA    R6,2(R6)                 NEXT PLACE IN PTXREF   SS AUG84
         B     BUMPUN                                          SS AUG84
*
*
BUMPUN   LM    R2,R3,COUNT1             RESTORE LOOP CONTROL
         POP   USING                                           DM JUN83
BUMPIT   LA    R3,LKPLNG(R3)            NEXT NAME              DM JUN83
         BCT   R2,BLDGPLU
         DROP  R3                                              DM JUN83
*
*    ADD GROUP POINTERS FOR NEW NAMES
*
         USING GRPTSECT,R4                                     DM JUN83
         LA    R2,MNT                   USE MODIFIED NAME TABLE
ADDGP    CLI   0(R2),FF                 LAST ENTRY INDICATOR
         BE    ENDGP                    YES, CLEANUP THIS SECTION
         TM    MNTFLAG(R2),EXCLUDE      EXCLUDE OPERATION
         BO    BUMPMNTB                 YES, DO NOT ADD
         TM    MNTFLAG(R2),REPL         REPLACED UNIT
         BO    BUMPMNTB                 YES, DO NOT ADD
         L     R5,NUMUNIT               GXREF COUNTER          SS JAN84
         LA    R14,GXREF                TO SCAN GXREF
         USING GXREFDEF,R14                                    DM JUN83
         L     R3,EDTGRP                GRP SEC                DM JUN83
         USING GRPSECT,R3                                      DM JUN83
         LA    R3,8(R3)                 OVER HDR
         SR    R15,R15                  COUNTER OF GROUPS
SCANMASK LH    R9,MNTMASKI(R2)          MASK INDEX             SS JAN84
         L     R0,GXRMASK(R9)           MASK FROM GXREF        SS JAN84
         N     R0,MNTMASK(R2)           COMPARE MASKS          SS JAN84
         BZ    NOMATCH                  GROUP NOT INCLUDED
         ST    R3,GRPTPTR               SET GROUP POINTER
         LA    R7,1(R7)                 ADD 1 TO TOTAL
         LA    R15,1(R15)               NUM GROUPS FOR THIS NAME
         LA    R4,GRPTLNG(R4)           NEXT PLACE FOR POINTER DM JUN83
NOMATCH  AH    R3,GRPLNG2               NEXT GROUP             DM JUN83
         LA    R14,GXRLNG(R14)          NEXT GROUP IN GXREF    DM JUN83
         BCT   R5,SCANMASK              KEEP LOOKING OF MATCHES
         DROP  R14                                             DM JUN83
         STH   R15,0(R6)                SAVE COUNT OF GROUPS IN PTXREF
         LA    R6,2(R6)                 NEXT PLACE IN PTXREF
BUMPMNTB LA    R2,MNTLN(R2)             NEXT NAME IN MNT
         B     ADDGP
         DROP  R3,R4                                           DM JUN83
ENDGP    L     R14,ADRGRPT              HEAD OF GROUP PT SEC   DM NOV83
         ST    R7,0(R14)                INIT HDR .. COUNT OF POINTERS
*
*   BUILD GENERIC SECTION
*
         LA    R14,8(R14)               OVER HDR OF GROUP PT SEC
         ST    R4,EDTGNRC               INIT HDR .. NEW GENERIC SEC
         USING GNRCSECT,R4                                     DM JUN83
         LA    R5,GNRCLNG               SIZE OF GENERIC ENTRY
         STH   R5,GNRCLNG2              SAVE LENGTH FOR MH     SS JAN84
         ST    R5,4(R4)                 INIT HDR OF GENERIC SEC
         LA    R4,8(R4)                 OVER HEADER
         SR    R7,R7                    ZERO COUNT OF TOTAL ENTRIES
         L     R6,APTXREF               RESET TO BEGINNING OT PTXREF
         LR    R5,R6                    BUILD OVER OLD
         L     R3,EDTLKUP-EDT(R8)       LOOKUP SEC IN OLD EDT  DM JUN83
         L     R2,0(R3)                 ENTRIES IN LOOKUP SEC
         LA    R3,8(R3)                 OVER HEADER
BLDGN    LA    R1,MNT                   CHECK WITH MODIFIED NAME TABLE
CKNM     CLI   0(R1),FF                 END OF NAME INDICATOR
         BE    ENDCK                    YES
         CLC   0(8,R1),0(R3)            UNIT NAME SAME
         BNE   MORECK                   TRY AGAIN
         TM    MNTFLAG(R1),EXCLUDE      IS IT EXCLUDE OPER
         BO    ENDCK                    YES, OK, PROCESS IT
         B     REPLTHIS                 NO, REPLACED           SS AUG84
MORECK   LA    R1,MNTLN(R1)             NEXT NAME IN MNT
         B     CKNM
ENDCK    STM   R2,R3,COUNT1             SAVE LOOP CONTROL
         LM    R2,R3,16(R3)             COUNT, PT GENERIC SEC
         LR    R15,R2                   MAY ADJUST COUNT
         LTR   R2,R2                    CHECK FOR ANY GENERICS SS SEP84
         BNZ   BLDGNE                   NORMAL                 SS SEP84
         LA    R6,2(,R6)                SKIP PLACE HOLDER      SS SEP84
         B     NOGENR                   NO REAL GENERICS       SS SEP84
BLDGNE   LH    R1,0(R6)                 COUNT OF POINTERS      SS JAN84
         LTR   R1,R1                    HAS IT BEEN NULLED
         BZ    COMPACT                  YES, DONT USE THIS GENERIC
         MVC   GNRCDEVT,GNRCDEVT-GNRCSECT(R3) COPY OLD DEVTYP  DM JUN83
         ST    R1,GNRCGRP#              COUNT OF POINTERS      DM JUN83
         ST    R14,GNRCGRP1             POINT TO FIRST         DM JUN83
         SLL   R1,2                     BY 4, FULL WORD
         AR    R14,R1                   SKIP TO NEXT SET OF PT
         LA    R7,1(R7)                 BUMP TOTAL GENERICS
         LA    R4,GNRCLNG(R4)           NEXT NEW GENERIC       DM JUN83
         B     BUMPGN
COMPACT  BCTR  R15,0                    ONE LESS GENERIC THAN BEFORE
BUMPGN   LA    R6,2(R6)                 PT GO SIZE OF NEXT SET SS JAN84
         LA    R3,GNRCLNG(R3)           NEXT OLD GENERIC       SS JAN84
         BCT   R2,BLDGNE
NOGENR   DS    0H                       SET GENERICS TO ZERO   SS SEP84
         STH   R15,0(R5)                SAVE NUM OF GENERICS   SS JAN84
         LA    R5,2(R5)                 NEXT SLOT              SS JAN84
         B     OVERTHIS                                        SS AUG84
*
*   BUILD GENERICS FOR  REPLACED UNIT NAMES
*
REPLTHIS STM   R2,R3,COUNT1             SAVE OUTTER LOOP REGS  SS AUG84
         LA    R15,GXRLNG               LENGTH OF GRXREF ENT   SS AUG84
         STH   R15,GXRLNG2              SAVE LENG FOR MH       SS AUG84
         LH    R2,0(R6)                 CNT PT FOR NEW NAME    SS AUG84
         ST    R6,COUNT2                HOLD SO REG CAN BE USEDSS AUG84
         SR    R6,R6                    ZERO COUNT OF GENERICS SS AUG84
         LTR   R2,R2                    ARE THERE ANY DEV      SS AUG84
         BZ    NOGENER                  NO NO GN FOR THIS ONE  SS AUG84
         SR    R0,R0                    NULL DEVTYP            SS AUG84
         SR    R15,R15                  START WITH NO POINTERS SS AUG84
SCANON   L     R1,0(R14)                ADDR OF GROUP          SS AUG84
         TM    FLAG2,CVTMVSE                                   SS AUG84
         BO    XA13A                                           SS AUG84
         L     R1,GRPID-GRPSECT(R1)     GROUP ID               SS AUG84
         B     XA14A                                           SS AUG84
XA13A    DS    0H                                              SS AUG84
         LH    R1,GRPID-GRPSECT(R1)     GROUP ID               SS AUG84
XA14A    DS    0H                                              SS AUG84
         BCTR  R1,0                     OFFSET TO ZERO         SS AUG84
         MH    R1,GXRLNG2               OFFSET INTO  GXREF     SS AUG84
         LA    R1,GXREF(R1)             ADDRES OF ENTRY        SS AUG84
         L     R1,GXRUCBPT-GXREFDEF(R1) GET UCB ADDR           SS AUG84
         CLI   UCBTYPE+2(R1),X'20'      DASD TYPE              SS NOV90
         BE    YESDASD                  YES                    SS NOV90
         CLI   UCBTYPE+2(R1),X'08'      UNIT RECORD            SS NOV90
         BE    YESUR                    YES                    SS NOV90
         CLI   UCBTYPE+2(R1),X'10'      GRAPFICS DEVICE        SS NOV90
         BE    OPTOFF                   YES, OPTIONS OFF       SS NOV90
         CLI   UCBTYPE+2(R1),X'40'      TELEPROCESSING         SS NOV90
         BE    OPTOFF                   YES, OPTIONS OFF       SS NOV90
         CLI   UCBTYPE+2(R1),X'41'      CTC                    SS NOV90
         BE    YESCTC                   YES                    SS NOV90
         L     R1,UCBTYPE(R1)           GET DEVICE TYPE        SS NOV90
         B     NODASD                   NO SHR BIT             SS NOV90
YESDASD  L     R1,UCBTYPE(R1)           GET DEVICE TYPE        SS NOV90
         N     R1,=X'FFDFFFFF'          TURN OFF SHR BITS      SS NOV90
         B     NODASD                   NO SHR BIT             SS NOV90
YESUR    CLI   UCBTYPE+3(R1),X'09'      3211 TYPE              SS NOV90
         BE    YES3211                  YES                    SS NOV90
OPTOFF   L     R1,UCBTYPE(R1)           GET DEVICE TYPE        SS NOV90
         N     R1,=X'FF00FFFF'          TURN OFF OPT BITS      SS NOV90
         B     NODASD                   NO SHR BIT             SS NOV90
YES3211  L     R1,UCBTYPE(R1)           GET DEVICE TYPE        SS NOV90
         N     R1,=X'FF80FFFF'          TURN OFF OPT BITS      SS NOV90
         B     NODASD                   NO SHR BIT             SS NOV90
YESCTC   L     R1,UCBTYPE(R1)           GET DEVICE TYPE        SS NOV90
         N     R1,=X'0000FFFF'          TURN OFF OPT BITS      SS NOV90
         B     NODASD                   NO SHR BIT             SS NOV90
NODASD   CR    R0,R1                    SAME AS CURRENT        SS AUG84
         BE    DONTADD                  COUNT UNTIL NEW DEVTYP SS AUG84
         LTR   R0,R0                    YES,  FIRST TIME       SS AUG84
         BZ    FIRSTONE                 YES, SET UP THIS DEVTYPSS AUG84
         ST    R15,GNRCGRP#             GROUPS CNT - THIS GENERIC AUG84
         SR    R15,R15                  RESET TO ZERO FOR NEXT SS AUG84
         LA    R4,GNRCLNG(R4)           NEXT NEW GENERIC       SS AUG84
         LA    R7,1(R7)                 ONE TO TOTAL COUNT     SS AUG84
FIRSTONE ST    R1,GNRCDEVT              SET DEVTYPE            SS AUG84
         LR    R0,R1                    NEW BECOMES OLD DEVTYPESS AUG84
         ST    R14,GNRCGRP1             POINT TO FIRST OF BUNCHSS AUG84
         LA    R6,1(R6)                 ONE MORE GENERIC       SS AUG84
DONTADD  LA    R14,4(R14)               NEXT GROUP POINTER     SS AUG84
         LA    R15,1(R15)               ONE MORE POINTER TO COUNT AUG84
         BCT   R2,SCANON                                       SS AUG84
         ST    R15,GNRCGRP#             GRPS FOR THIS GENERIC  SS AUG84
         LA    R4,GNRCLNG(R4)           NEXT SLOT FOR GENERIC  SS AUG84
         LA    R7,1(R7)                 ONE TO TOTAL COUNT     SS AUG84
NOGENER  STH   R6,0(R5)                 SAVE COUNT OF GENERICS SS AUG84
         LA    R5,2(R5)                 BUMP FOR NEXT UNITNAME SS AUG84
         L     R6,COUNT2                RESTORE THIS REG       SS AUG84
         LA    R6,2(R6)                 NEXT COUNT TO POINTERS SS AUG84
OVERTHIS LM    R2,R3,COUNT1             RESTORE LOOP CONTROL   SS AUG84
         LA    R3,LKPLNG(R3)            NEXT OLD UNIT NAME     SS AUG84
         BCT   R2,BLDGN
*
*   ADD GENERICS FOR NEW UNIT NAMES                            SS AUG84
*
         LA    R3,MNT                   GET NAMES FROM MNT
         LA    R15,GXRLNG               LENGTH OF GRXREF ENT   SS JAN84
         STH   R15,GXRLNG2              SAVE LENG FOR MH       SS JAN84
ADDGN    CLI   0(R3),FF                 END OF TABLE
         BE    SETGNC                   YES, CLEANUP
         TM    MNTFLAG(R3),EXCLUDE      EXCLUDE OPERATION
         BO    NXTNM                    ALREADY PROCESSED
         TM    MNTFLAG(R3),REPL         REPLACED UNIT          SS AUG84
         BO    NXTNM                    ALREADY PROCESSED      SS AUG84
         LH    R2,0(R6)                 CNT PT FOR NEW NAME    SS JAN84
         ST    R6,COUNT2                HOLD SO REG CAN BE USED
         SR    R6,R6                    ZERO COUNT OF GENERICS
         LTR   R2,R2                    ARE THERE ANY DEV
         BZ    NOGNS                    NO NO GN FOR THIS ONE
         SR    R0,R0                    NULL DEVTYP
         SR    R15,R15                  START WITH NO POINTERS
SCANMORE L     R1,0(R14)                ADDR OF GROUP
         TM    FLAG2,CVTMVSE                                   SS JAN84
         BO    XA13                                            SS JAN84
         L     R1,GRPID-GRPSECT(R1)     GROUP ID               SS JAN84
         B     XA14                                            SS JAN84
XA13     DS    0H                                              SS JAN84
         LH    R1,GRPID-GRPSECT(R1)     GROUP ID               SS JAN84
XA14     DS    0H                                              SS JAN84
         BCTR  R1,0                     OFFSET TO ZERO         SS JAN84
         MH    R1,GXRLNG2               OFFSET INTO  GXREF     SS JAN84
         LA    R1,GXREF(R1)             ADDRES OF ENTRY        SS JAN84
         L     R1,GXRUCBPT-GXREFDEF(R1) GET UCB ADDR           SS JAN84
         CLI   UCBTYPE+2(R1),X'20'      DASD TYPE              SS JAN84
         L     R1,UCBTYPE(R1)           GET DEVICE TYPE        SS JAN84
         BNE   NOTDASD                  NO SHR BIT             SS JAN84
         N     R1,=X'FFDFFFFF'          TURN OFF SHR BITS
NOTDASD  CR    R0,R1                    SAME AS CURRENT        SS JAN84
         BE    NOADD                    NO COUNT UNTIL NEW DEVTYP
         LTR   R0,R0                    YES,  FIRST TIME
         BZ    FIRST                    YES, SET UP THIS DEVTYP
         ST    R15,GNRCGRP#             GROUPS COUNTED FOR THIS GENERIC
         SR    R15,R15                  RESET TO ZERO FOR NEXT
         LA    R4,GNRCLNG(R4)           NEXT NEW GENERIC       DM JUN83
         LA    R7,1(R7)                 ONE TO TOTAL COUNT
FIRST    ST    R1,GNRCDEVT              SET DEVTYPE            DM JUN83
         LR    R0,R1                    NEW BECOMES OLD DEVTYPE
         ST    R14,GNRCGRP1             POINT TO FIRST OF BUNCHDM JUN83
         LA    R6,1(R6)                 ONE MORE GENERIC
NOADD    LA    R14,4(R14)               NEXT GROUP POINTER
         LA    R15,1(R15)               ONE MORE POINTER TO COUNT
         BCT   R2,SCANMORE
         ST    R15,GNRCGRP#             GRPS FOR THIS GENERIC  DM JUN83
         LA    R4,GNRCLNG(R4)           NEXT SLOT FOR GENERIC  DM JUN83
         LA    R7,1(R7)                 ONE TO TOTAL COUNT
NOGNS    STH   R6,0(R5)                 SAVE COUNT OF GENERICS SS JAN84
         LA    R5,2(R5)                 BUMP FOR NEXT UNITNAME SS JAN84
         L     R6,COUNT2                RESTORE THIS REG
         LA    R6,2(R6)                 NEXT COUNT TO POINTERS SS JAN84
NXTNM    LA    R3,MNTLN(R3)             NEXT NAME
         B     ADDGN
SETGNC   L     R14,EDTGNRC              TOP OF GENERIC SEC     DM JUN83
         ST    R7,0(R14)                TOTAL COUNT OF GENERICS
         DROP  R4                                              DM JUN83
*
*   BUILD  LOOK UP SECTION OF EDT
*
         LA    R14,8(R14)               OVER HEADER OF GEN SEC
         USING GNRCSECT,R14                                    DM JUN83
         L     R6,APTXREF               LIST OF COUNTS OF GENERICS
         ST    R4,EDTLKUP               INIT HDR LOOKUP SEC    DM JUN83
         LA    R2,LKPLNG                LENGTH OF EACH ENTRY   DM JUN83
         ST    R2,4(R4)                 INIT LU HDR WITH SIZE
         SR    R7,R7                    USED FOR TOTAL COUNT OF ENTRIES
         L     R3,EDTLKUP-EDT(R8)       LOOKUP SEC IN OLD EDT  DM JUN83
         L     R2,0(R3)                 COUNT OF ENTRIES
         LA    R4,8(R4)                 OVER HEADER
         USING LKPSECT,R4                                      DM JUN83
         LA    R3,8(R3)                 OVER HEADER
BLDLU    LA    R1,MNT                   CHECK WITH MNT
TESTMN   CLI   0(R1),FF                 END OF TABLE
         BE    EXITCK                   YES, NO CHANGES FOUND
         CLC   0(8,R1),0(R3)            IS UNIT NAME SAME
         BE    EXITCK                   YES, PROCESS IT        SS AUG84
AROUND   LA    R1,MNTLN(R1)             NEXT NAME
         B     TESTMN
EXITCK   LR    R15,R1                   SAVE MNT ENTRY ADDR    SS AUG84
         SR    R1,R1                    FOR IC INST            SS AUG84
         LH    R1,0(R6)                 NUMBER OF GENERICS     SS JAN84
         LTR   R1,R1                    IS THERE ANY
         BZ    ONLYGN                   NO, SKIP, ONLY INC GN COUNT
*              COPY NAME AND DEVTYP FROM MODEL EDT             DM JUN83
         MVC   LKPNAME(12),LKPNAME-LKPSECT(R3)                 DM JUN83
         CLI   LKPDEVT+3-LKPSECT(R3),0  NO, IS IT FULL DEVTYP  SS JAN84
         BNE   FULLD                    YES, SKIP
         MVC   UNIQUE,LKPDEVT-LKPSECT(R3) SAVE, MAY BE LAST
FULLD    ST    R1,LKPGNRC#              SET NUMBER OF GENERICS DM JUN83
         ST    R14,LKPGNRC1             POINT TO FIRST GENERIC DM JUN83
*              COPY FLAGS FROM MODEL EDT                       DM JUN83
         MVC   LKPFLAGS,LKPFLAGS-LKPSECT(R3)                   DM JUN83
         CLI   0(R15),FF                LAST ENTRY             SS AUG84
         BE    NOTVIO                   NO FLAGS               SS AUG84
         TM    MNTFLAG(R15),LKPVIO      IS IT A VIO UNIT       SS AUG84
         BZ    NOTVIO                   NO, NORMAL             SS AUG84
         OI    LKPFLAGS,LKPVIO          SET VIO FLAG           SS AUG84
NOTVIO   TM    24(R3),X'40'             ALT MASK FLAG          SS AUG84
         BZ    NOFLG                    NO FLAG, NORMAL
         LA    R0,1                     IF ONLY ONE GENERIC
         CR    R0,R1                    THEN NO ALT MASK
         BNE   NOFLG                    MORE THAN ONE
         NI    LKPFLAGS,X'AF'           ONLY ONE ZERO FLAG     DM JUN83
NOFLG    MH    R1,GNRCLNG2              MULTIPLY BY GEN SEC LN SS JAN84
         AR    R14,R1                   NEXT BUNCH OF GENERICS
         LA    R4,LKPLNG(R4)            NEXT NEW UNIT NAME     DM JUN83
         LA    R7,1(R7)                 ADD ONE TO TOTAL COUNT
ONLYGN   LA    R6,2(R6)                 NEXT GENERIC COUNT     SS JAN84
BUMPLU   LA    R3,LKPLNG(R3)            NEXT OLD UNIT IN LU SECDM JUN83
         BCT   R2,BLDLU
*
*  ADD TO LOOK UP SEC FOR MODIFIED NAME TABLE
*
         LA    R3,MNT
         LH    R15,UNIQUE               LAST UNIQUE QUALIFIER  SS JAN84
         LA    R15,1(R15)               BUMP UNIQUE QUALIFIER
MORELU   CLI   0(R3),FF                 END OF TABLE
         BE    SETLU                    YES, DONE HERE
         TM    MNTFLAG(R3),EXCLUDE      EXCLUDE OPERATION
         BO    NEXTNAME                 YES, ALREADY DONE
         TM    MNTFLAG(R3),REPL         REPLACED UNIT          SS AUG84
         BO    NEXTNAME                 YES, ALREADY DONE      SS AUG84
         MVC   LKPNAME,MNTNAME(R3)      COPY NAME              SS JAN84
         SR    R1,R1                    FOR IC
         LH    R1,0(R6)                 GENERIC COUNT          SS JAN84
         LTR   R1,R1                    ARE THERE ANY GENERICS
         BZ    NOLU                     NO, THEN DON'T BUILD
         SR    R0,R0                    MAKE ZERO
         ST    R0,LKPDEVT               ZERO DEVTYPE
         ST    R0,LKPFLAGS              ZERO FLAGS             SS JAN84
         MVC   LKPDEVT+2(1),GNRCDEVT+2  DEV CLASS FROM GENERIC DM JUN83
         STC   R15,LKPDEVT+1            DEV LOOK VALUE UNIQUE  DM JUN83
         LA    R15,1(R15)               BUMP UNIQUE QUALIFIER
SETPT    ST    R1,LKPGNRC#              SET WITH NUMBER OF GENERICS
         ST    R14,LKPGNRC1             POINT TO FIRST GENERIC DM JUN83
         TM    MNTFLAG(R3),LKPVIO       IS IT A VIO UNIT       SS JAN84
         BZ    NOVIO                    NO, NORMAL
         OI    LKPFLAGS,LKPVIO          SET VIO FLAG           SS JAN84
NOVIO    LA    R4,LKPLNG(R4)            NEXT ENTRY             DM JUN83
         LA    R7,1(R7)                 BUMP TOTAL
NOLU     LA    R6,2(R6)                 NEXT COUNT OF GENERICS SS JAN84
         MH    R1,GNRCLNG2              MULTIPLY BY GEN SEC LN SS JAN84
         AR    R14,R1                   NEXT BUNCH OF GENERICS
NEXTNAME LA    R3,MNTLN(R3)             NEXT NAME IN MNT
         B     MORELU
         DROP  R4,R14                                          DM JUN83
SETLU    L     R3,EDTLKUP               START OF LOOK UP SEC   DM JUN83
         USING LKPSECT,R3                                      DM JUN83
         ST    R7,0(R3)                 INIT HDR WITH TOTAL NUM ENTRIES
*
*   BUILD MASK SECTION
*
         SR    R7,R7                    ZERO COUNT FOR TOTAL MASKS
         ST    R4,EDTMSK                INIT HEADER / MASK SEC DM JUN83
         L     R15,EDTGRP               GROUP SEC              DM JUN83
         L     R15,0(R15)               COUNT OF GROUPS
         LA    R15,07(R15)              ROUND UP TO 1 BYTES
         SRL   R15,3                    DIVIDE BY 8 GIVES 8 BITS/BYTE
         ST    R15,4(R4)                LENGTH OF EACH ENTRY
         LA    R4,8(R4)                 OVER HEADER
         USING MSKSECT,R4                                      DM JUN83
         L     R2,0(R3)                 NUMBER IN LOOK UP SEC
         LA    R3,8(R3)                 OVER HEADER
BLDMSK   XC    MSKMASK(0),MSKMASK       FOR CLEAR USE EX INST  DM JUN83
         EX    R15,BLDMSK
         XC    LKPALTPT,LKPALTPT        CLEAR ALT MASK FIELD   DM JUN83
         LM    R5,R6,LKPGNRC#           CNT, PTR/GENERIC SEC   DM JUN83
         USING GNRCSECT,R6                                     DM JUN83
         ST    R2,COUNT1                SAVE LOOP CONTROL
         LR    R0,R3                    SAVE LOOP CONTROL
         PUSH  USING                                           DM JUN83
         DROP  R3
FOREACH  L     R8,GNRCGRP1              FIRST GROUP POINTER    DM JUN83
         USING GRPTSECT,R8                                     DM JUN83
         L     R14,GNRCGRP#             COUNT OF POINTERS      DM JUN83
GPID     L     R1,GRPTPTR               GROUP POINTER          DM JUN83
         TM    FLAG2,CVTMVSE            XZ                     SS JAN84
         BO    XA88                     YES                    SS JAN84
         L     R2,GRPID-GRPSECT(R1)     GRP ID IN ENTRY        DM JUN83
         B     XA99                                            SS JAN84
XA88     DS    0H                                              SS JAN84
         LH    R2,GRPID-GRPSECT(R1)     GRP ID IN ENTRY        DM JUN83
XA99     DS    0H                                              SS JAN84
         BCTR  R2,0                     REFERENCE TO ZERO
         SRDL  R2,3                     SEPARATE 3 LOWER BITS
         SRL   R3,29                    RIGHT JUSTIFY
         SR    R1,R1                    CLEAR FOR ICM INST
         ICM   R1,B'1000',=X'80'        BIT TO BE POSITIONED
         SRL   R1,0(R3)                 POSITION BIT WITHIN BYTE
         O     R1,MSKMASK(R2)           PUT BIT IN MASK        DM JUN83
         ST    R1,MSKMASK(R2)             AT PROPER BYTE       DM JUN83
         LA    R8,GRPTLNG(R8)           NEXT POINTER           DM JUN83
         BCT   R14,GPID
         DROP  R8                                              DM JUN83
         LR    R3,R0                    RESTORE LOOP CONTROL
         POP   USING                                           DM JUN83
         TM    LKPFLAGS,X'40'           ALTERNATE MASK         DM JUN83
         BZ    BUMPX                    NO, CONTINUE WITH THIS MASK
         C     R6,LKPGNRC1              STILL ON FIRST MASK    DM JUN83
         BNE   BUMPX                    NO, CONTINUE THIS MASK
         ST    R4,LKPALTPT              YES, SET ALT MASK      DM JUN83
         LA    R7,1(R7)                 BUMP TOTAL COUNT OF MASKS
         LR    R1,R4                    SAVE FOR MOVE
         AR    R4,R15                   NEXT ENTRY
CLRMSK   MVC   MSKMASK(0),0(R1)         BUILD NEXT FROM ALT
         EX    R15,CLRMSK
BUMPX    LA    R6,GNRCLNG(R6)           NEXT GENERIC           DM JUN83
         BCT   R5,FOREACH
         DROP  R6                                              DM JUN83
         ST    R4,LKPMSKPT              SET ADDR OF FINISH MSK DM JUN83
         AR    R4,R15                   NEXT ENTRY SLOT
         LA    R7,1(R7)                 BUMP TOTAL COUNT OF MASKS
         L     R2,COUNT1                RESTORE LOOP CONTROL
         LA    R3,LKPLNG(R3)            NEXT UNIT NAME IN LOOKUP  JUN83
         BCT   R2,BLDMSK
         DROP  R3,R4                                           DM JUN83
         L     R1,EDTMSK                START OF MASK SECTION  DM JUN83
         ST    R7,0(R1)                 SET HDR WITH COUNT OF MASKS
         SPACE ,                                               DM JUL80
         LR    R15,R7                                          DM JUL80
         M     R14,4(,R1)          LENGTH OF EACH SECTION      DM JUL80
         LA    R14,15(R15,R1)      7 BYTES PAST END            DM JUL80
         N     R14,=F'-8'          ROUND TO DOUBLE WORD        DM JUL80
         LR    R1,R10                                          DM JUL80
         SH    R1,=H'16'           BACK UP TO HEADER           DM JUL80
         LR    R0,R14              CALCULATE HOW MUCH LEFT     DM JUL80
         SR    R0,R1                                           DM JUL80
         SR    R15,R15             CLEAR R15                   SS AUG84
         ICM   R15,7,13(R1)        GET CURRENT SPACE           SS AUG84
         STCM  R0,7,13(R1)         SET NEW LENGTH              DM JUL80
         SR    R15,R0              CALCULATE FREEMAIN LENGTH   DM JUL80
         TM    FLAG2,CVTMVSE       XA SYSTEM                   SS JAN84
         BO    XA155               THIS FREE MAIN NOT XA       SS JAN84
         ICM   R15,8,12(R1)        GET SUBPOOL                 SS AUG84
         FREEMAIN R,LV=(15),A=(14) FREE UNUSED AREA            DM JUL80
         B     XA156                                           SS AUG84
         SPACE ,                                               DM JUL80
XA155    DS    0H                                              SS JAN84
         ICM   R15,B'1000',=X'0000' CLEAR SUBPOOL NUMBER       SS AUG84
         FREEMAIN RU,LV=(15),A=(14),SP=&XASP                   SS AUG84
XA156    DS    0H                                              SS JAN84
         MVC   EDTPREF,PREFTAB     IBM PREFTAB IN OUR EDT      DM JUN83
         L     R2,CVTPT            LOAD CVT ADDR               DM NOV83
         L     R2,CVTJESCT(R2)     LOAD JESCT ADDR             SS JAN84
         L     R3,JESEDTA(R2)      LOAD OLD EDT PTR            SS JAN84
         LA    R3,0(,R3)           CLEAR BIT 0                 SS MAR87
         AIF   ('&SYSPARM' EQ 'TEST' OR                                -
               '&SYSPARM' EQ 'TESTXA').TEST5                   SS MAR87
         AIF   ('&SYSPARM' EQ 'NONXA').TEST5B                  SS MAR87
         TM    FLAG2,CVTMVSE       XA SYSTEM                   SS MAR87
         BZ    XA15                                            SS MAR87
         L     R5,JESUPLP          SAVE OLD UCB PT LIST        SS MAR87
         ENQ   MF=(E,ENQLST)       STOP SCHEDULING             SS MAR87
         STIMER WAIT,BINTVL=BINTVL WAIT 5 SECONDS              SS MAR87
         MVC   JESUPLP(4,R2),UPLSTR NEW UCB PT LIST            SS MAR87
         ST    R10,JESEDTA(R2)     NEW EDT ADDR IN JESCT       SS MAR87
         TM    FLAG2,GENEDT        IBM SYSGEN EDT              SS MAR87
         BO    DODEQ                                           SS MAR87
         CLC   DYNAHDR(8),EDTCREAT-EDT(R3)  OWR EDT            SS MAR87
         BNE   ABEND999            NO... ABEND                 SS MAR87
         LA    R4,16               LOAD CONSTANT 16            SS MAR87
         SR    R3,R4               SUBTRACT FROM EDT ADDR      SS MAR87
         CLI   12(R3),0            SPOOL ZERO                  SS MAR87
         BE    DODEQ                                           SS MAR87
         SR    R0,R0               CLEAR FOR ICM               SS MAR87
         SR    R2,R2               CLEAR FOR IC                SS MAR87
         ICM   R0,7,13(R3)         LENGTH                      SS MAR87
         IC    R2,12(R3)           SUBPOOL NUMBER              SS MAR87
         LR    R1,R3               ADDRESS OF EDT              SS MAR87
         FREEMAIN RU,LV=(0),A=(1),SP=(R2)                      SS MAR87
         SPLEVEL SET=1                                         SS MAR87
         B     DODEQ               FREE IT                     SS MAR87
.TEST5B  ANOP  ,                                               SS MAR87
XA15     DS    0H                                              SS JAN84
         ST    R10,JESEDTA(R2)     NEW EDT ADDR IN JESCT       SS MAR87
         CLM   R3,7,EDTPTR+1       JESCT PTR = IBM EDT         RCHJUN80
         BE    Y12                 YES....DO NOT FREEMAIN      RCHJUN80
         LA    R4,16               LOAD CONSTANT 16            RCHJUN80
         SR    R3,R4               SUBTRACT FROM EDT ADDR      RCHJUN80
         CLC   DYNAHDR,0(R3)       IS IT OUR EDT               DM JUL80
         BNE   ABEND999            NO.....ABEND                RCHJUN80
         ENQ   MF=(E,ENQLST)       STOP SCHEDULING             SS MAR87
         DS    0H                                              SS AUG84
         STIMER WAIT,BINTVL=BINTVL WAIT 5 SECONDS              RCHJUN80
         L     R0,12(R3)           LOAD SUBPOOL AND LENGTH     RCHJUN80
         LR    R1,R3               LOAD ADDR TO FREE           RCHJUN80
         FREEMAIN R,A=(1),LV=(0)   FREEMAIN OUR OLD EDT        RCHJUN80
         AIF   ('&SYSPARM' EQ 'NONXA').TEST5C                  SS MAR87
         SPLEVEL SET=2                                         SS MAR87
.TEST5C  ANOP  ,                                               SS AUG84
DODEQ    DEQ   MF=(E,ENQLST)       ALLOW SCHEDULING TO RESUME  DM JUL80
Y12      DS    0H
         AGO   .TEST6
.TEST5   ANOP  ,                   TEST - PRINT THE EDT'S      DM JUN83
&M       SETC  'N'                                             SS JAN84
         AIF   ('&SYSPARM' NE 'TESTXA').TEST7                  SS JAN84
&M       SETC  'X'                                             SS JAN84
         B     SKABEND                                         SS JAN84
         ABEND 88,DUMP             UNTIL PRINT EDT WORKS       SS JAN84
SKABEND  DS    0H                                              SS JAN84
.TEST7   ANOP  ,                   TEST - PRINT THE EDT'S      DM JUN83
         TM    SYSPRINT+48,16                                  DM JUN83
         BZ    ENDPRINT                                        DM JUN83
         MVI   WTOE,C' '           BLANK                       DM JUN83
         MVC   WTOE+1(L'WTOE-1),WTOE    LINE                   DM JUN83
         L     R1,EDTPTR           BASE (SYSGEN) EDT           DM JUN83
         BAL   R14,PRINTEDT          PRINT IT                  DM JUN83
         LR    R1,R3               CURRENT EDT                 DM JUN83
         BAL   R14,PRINTEDT          PRINT IT                  DM JUN83
         LR    R1,R10              NEW EDT                     DM JUN83
         BAL   R14,PRINTEDT          PRINT IT                  DM JUN83
         LR    R1,R3               CURRENT EDT                 DM JUN83
         LA    R15,DUMPARM1                                    DM JUN83
         BAL   R14,PRTEDT2           FORMAT PARMS              DM JUN83
         LR    R1,R10              NEW EDT                     DM JUN83
         LA    R15,DUMPARM2                                    DM JUN83
         BAL   R14,PRTEDT2           FORMAT PARMS              DM JUN83
         MVI   WTOE,C'1'                                       DM JUN83
         LR    R6,R3               CALCULATE ADDRESS           DM NOV83
         SR    R6,R10                DIFFERENCE (OLD - NEW)    DM NOV83
         SPACE ,                                               DM JUN83
PRTEDT3  L     R1,DUMPARM1+12      REMAINING LENGTH            DM JUN83
         C     R1,DUMPARM2+12                                  DM JUN83
         BNH   *+8                                             DM JUN83
         L     R1,DUMPARM2+12      USE SHORTER                 DM JUN83
         CH    R1,=H'32'                                       DM JUN83
         BNH   *+8                                             DM JUN83
         LH    R1,=H'32'           USE SHORTER                 DM JUN83
         LR    R4,R1               CALCULATE NUMBER            DM NOV83
         SR    R5,R5                                           DM NOV83
         SRDL  R4,2                  OF WORDS                  DM NOV83
         LTR   R5,R5               SEE IF ANY REMAINDER        DM NOV83
         BZ    *+6                 NO                          DM NOV83
         SR    R4,R4               DON'T DO ADDRESS COMPARE    DM NOV83
         SPACE ,                                               DM NOV83
         L     R14,DUMPARM1        CURRENT EDT                 DM JUN83
         A     R14,DUMPARM1+16       ADDRESS                   DM JUN83
         LR    R15,R1                                          DM JUN83
         LA    R2,DIFF             TARGET                      DM JUN83
         LA    R3,L'DIFF                                       DM JUN83
         MVCL  R2,R14              COPY DATA                   DM JUN83
         LTR   R1,R1               LENGTH ZERO                 SS MAR87
         BZ    PRTEDT3A            AVOID OC4 DO TO OVERLAY     SS MAR87
         BCTR  R1,0                                            DM JUN83
         L     R15,DUMPARM2        NEW EDT                     DM JUN83
         A     R15,DUMPARM2+16       ADDRESS                   DM JUN83
         EX    R1,EXXC1            EXCLUSIVE OR                DM JUN83
PRTEDT3A TR    DIFF,DIFFTBL                                    SS MAR87
         LA    R5,DIFF             IN CASE NOT ADDRESS DIFF.   DM NOV83
         BZ    PRTEDT6             ALL EQUAL (FROM EXC. OR)    DM NOV83
         LTR   R4,R4               SEE HOW MANY WORDS          DM NOV83
         BZ    PRTEDT6             NONE                        DM NOV83
         L     R14,DUMPARM1        OLD EDT                     DM NOV83
         A     R14,DUMPARM1+16       ADDRESS                   DM NOV83
         SPACE ,                                               DM NOV83
PRTEDT7  L     R0,0(,R14)          WORD FROM OLD EDT           DM NOV83
         L     R1,0(,R15)          WORD FROM NEW EDT           DM NOV83
         CR    R0,R1               SEE IF SAME                 DM NOV83
         BE    PRTEDT8             YES                         DM NOV83
         AR    R1,R6               SEE IF DIFFERENCE           DM NOV83
         CR    R0,R1                 IN ADDRESS                DM NOV83
         BNE   PRTEDT6             NO - LEAVE AS IS            DM NOV83
PRTEDT8  LA    R14,4(,R14)         NEXT                        DM NOV83
         LA    R15,4(,R15)           WORDS                     DM NOV83
         BCT   R4,PRTEDT7          ITERATE                     DM NOV83
         LA    R5,=CL32'ALL DIFFERENCES ARE ADDRESSES'         DM NOV83
         SPACE ,                                               DM JUN83
PRTEDT6  ICM   R0,15,DUMPARM1+12   LENGTH                      DM JUN83
         BZ    PRTEDT4             EXHAUSTED                   DM JUN83
         LA    R1,DUMPARM1                                     DM JUN83
         L     R15,=V(XDUMPFMT)                                DM JUN83
         BALR  R14,R15                                         DM JUN83
         AIF   ('&M' NE 'X').XA21                              SS JAN84
         LA    R1,IN24C                 BACK TO 24  BIT MODE   SS JAN84
         ST    R1,GXREFXXX              TRACE FOR DEBUGGING    SS AUG84
         BSM   0,R1                     SWITCH MODES TO 24     SS JAN84
IN24C    DS    0H                                              SS JAN84
.XA21    ANOP  ,                                               SS JAN84
         PUT   SYSPRINT,WTOE                                   DM JUN83
         AIF   ('&M' NE 'X').XA22                              SS JAN84
         LA    R1,IN31C                 START OF 31 BIT MODE   SS JAN84
         O     R1,=X'80000000'          MODE BIT ON            SS JAN84
         ST    R1,GXREFXXX              TRACE FOR DEBUGGING    SS AUG84
         BSM   0,R1                     SWITCH MODES TO 31     SS JAN84
IN31C    DS    0H                                              SS JAN84
.XA22    ANOP  ,                                               SS JAN84
         MVI   WTOE,C' '                                       DM JUN83
PRTEDT4  ICM   R0,15,DUMPARM2+12   LENGTH                      DM JUN83
         BZ    PRTEDT5             EXHAUSTED                   DM JUN83
         LA    R1,DUMPARM2                                     DM JUN83
         L     R15,=V(XDUMPFMT)                                DM JUN83
         BALR  R14,R15                                         DM JUN83
         AIF   ('&M' NE 'X').XA23                              SS JAN84
         LA    R1,IN24D                 BACK TO 24  BIT MODE   SS JAN84
         ST    R1,GXREFXXX              TRACE FOR DEBUGGING    SS AUG84
         BSM   0,R1                     SWITCH MODES TO 24     SS JAN84
IN24D    DS    0H                                              SS JAN84
.XA23    ANOP  ,                                               SS JAN84
         PUT   SYSPRINT,WTOE                                   DM JUN83
         AIF   ('&M' NE 'X').XA24                              SS JAN84
         LA    R1,IN31D                 START OF 31 BIT MODE   SS JAN84
         O     R1,=X'80000000'          MODE BIT ON            SS JAN84
         ST    R1,GXREFXXX              TRACE FOR DEBUGGING    SS AUG84
         BSM   0,R1                     SWITCH MODES TO 31     SS JAN84
IN31D    DS    0H                                              SS JAN84
.XA24    ANOP  ,                                               SS JAN84
PRTEDT5  MVI   DIFF+L'DIFF,C' '                                DM JUN83
         MVI   WTOE,C' '           BLANK                       DM JUN83
         MVC   WTOE+1(L'WTOE-1),WTOE    LINE                   DM JUN83
         MVC   WTOE+16(74),DIFFMASK                            DM JUN83
         TR    WTOE+16(74),DIFF                                DM JUN83
         MVC   WTOE+93(32),0(R5)   DIFFERENCES OR MSG          DM NOV83
         AIF   ('&M' NE 'X').XA25                              SS JAN84
         LA    R1,IN24E                 BACK TO 24  BIT MODE   SS JAN84
         ST    R1,GXREFXXX              TRACE FOR DEBUGGING    SS AUG84
         BSM   0,R1                     SWITCH MODES TO 24     SS JAN84
IN24E    DS    0H                                              SS JAN84
.XA25    ANOP  ,                                               SS JAN84
         PUT   SYSPRINT,WTOE                                   DM JUN83
         AIF   ('&M' NE 'X').XA26                              SS JAN84
         LA    R1,IN31E                 START OF 31 BIT MODE   SS JAN84
         O     R1,=X'80000000'          MODE BIT ON            SS JAN84
         ST    R1,GXREFXXX              TRACE FOR DEBUGGING    SS AUG84
         BSM   0,R1                     SWITCH MODES TO 31     SS JAN84
IN31E    DS    0H                                              SS JAN84
.XA26    ANOP  ,                                               SS JAN84
         L     R0,DUMPARM1+12      SEE IF SOME                 DM JUN83
         A     R0,DUMPARM2+12        TO GO                     DM JUN83
         BP    PRTEDT3             NO                          DM JUN83
         B     ENDPRINT                                        DM JUN83
EXXC1    XC    DIFF(0),0(R15)                                  DM JUN83
DIFFTBL  DC    C' ',255C'*'                                    DM JUN83
DIFFMASK DC    AL1(0,0,1,1,2,2,3,3,32)                         DM JUN83
         DC    AL1(4,4,5,5,6,6,7,7,32)                         DM JUN83
         DC    AL1(8,8,9,9,10,10,11,11,32)                     DM JUN83
         DC    AL1(12,12,13,13,14,14,15,15,32,32,32,32)        DM JUN83
         DC    AL1(16,16,17,17,18,18,19,19,32)                 DM JUN83
         DC    AL1(20,20,21,21,22,22,23,23,32)                 DM JUN83
         DC    AL1(24,24,25,25,26,26,27,27,32)                 DM JUN83
         DC    AL1(28,28,29,29,30,30,31,31)                    DM JUN83
         SPACE 2                                               DM JUN83
PRINTEDT ST    R14,COUNT1          SAVE RETURN                 DM JUN83
         LA    R15,DUMPARM1
         BAL   R14,PRTEDT2
         MVI   WTOE,C'1'           START ON NEW PAGE           DM JUN83
         SPACE ,                                               DM JUN83
PRTEDT1  LA    R1,DUMPARM1                                     DM JUN83
         L     R15,=V(XDUMPFMT)                                DM JUN83
         BALR  R14,R15             FORMAT 32 BYTES             DM JUN83
         LR    R2,R15              SAVE RETURN CODE            DM JUN83
         AIF   ('&M' NE 'X').XA27                              SS JAN84
         LA    R1,IN24F                 BACK TO 24  BIT MODE   SS JAN84
         ST    R1,GXREFXXX              TRACE FOR DEBUGGING    SS AUG84
         BSM   0,R1                     SWITCH MODES TO 24     SS JAN84
IN24F    DS    0H                                              SS JAN84
.XA27    ANOP  ,                                               SS JAN84
         PUT   SYSPRINT,WTOE                                   DM JUN83
         AIF   ('&M' NE 'X').XA28                              SS JAN84
         LA    R1,IN31F                 START OF 31 BIT MODE   SS JAN84
         O     R1,=X'80000000'          MODE BIT ON            SS JAN84
         ST    R1,GXREFXXX              TRACE FOR DEBUGGING    SS AUG84
         BSM   0,R1                     SWITCH MODES TO 31     SS JAN84
IN31F    DS    0H                                              SS JAN84
.XA28    ANOP  ,                                               SS JAN84
         MVI   WTOE,C' '                                       DM JUN83
         LTR   R2,R2               SEE IF MORE DATA            DM JUN83
         BNZ   PRTEDT1               YES - ITERATE             DM JUN83
         SPACE ,                                               DM JUN83
         L     R14,COUNT1                                      DM JUN83
         BR    R14                 RETURN                      DM JUN83
         SPACE ,                                               DM JUN83
PRTEDT2  STM   R14,R12,12(R13)     SAVE REGS                   DM JUN83
         LR    R2,R15                                          DM JUN83
         LA    R0,12(,R2)          PARMS                       DM JUN83
         ST    R0,4(,R2)                                       DM JUN83
         LA    R0,WTOE+1           OUTPUT AREA                 DM JUN83
         ST    R0,8(,R2)                                       DM JUN83
         OI    8(R2),X'80'         SET END FLAG                DM JUN83
         ST    R1,0(,R2)           DATA ADDRESS                DM JUN83
         ST    R1,20(,R2)                                      DM JUN83
         L     R1,EDTMSK-EDT(,R1)  CALCULATE                   DM JUN83
         L     R15,0(,R1)            END OF                    DM JUN83
         M     R14,4(,R1)              EDT                     DM JUN83
         AR    R15,R1                                          DM JUN83
         BCTR  R15,0               LAST BYTE                   DM JUN83
         S     R15,0(,R2)          LENGTH                      DM JUN83
         ST    R15,12(,R2)                                     DM JUN83
         SR    R0,R0                                           DM JUN83
         ST    R0,16(,R2)          INITIALIZE OFFSET           DM JUN83
         LM    R14,R12,12(R13)     RESTORE REGS                DM JUN83
         BR    R14                 RETURN                      DM JUN83
ENDPRINT EQU   *                                               DM JUN83
.TEST6   ANOP  ,                                               DM JUN83
         SPACE 2                                               DM JUN83
         TM    FLAG2,LDEDT              WAS EDT LOADED         SS MAR87
         BZ    NODEL                    NO, SKIP DELETE        SS MAR87
         DELETE EP=IEFEDTTB             NO LONGER NEEDED       SS JAN84
NODEL    DS    0H                       *                      SS MAR87
         AIF   ('&SYSPARM' EQ 'TEST' OR                                -
               '&SYSPARM' EQ 'TESTXA').TEST4                   DM JUN83
         MODESET KEY=NZERO         BACK TO TCB PROTECT KEY     DM JUL80
.TEST4   ANOP  ,                                               DM JUN83
         AIF   ('&SYSPARM' EQ 'TEST' OR                                -
               '&SYSPARM' EQ 'NONXA').TEST4D                   SS MAR87
         TM    FLAG2,CVTMVSE       XA                          SS JAN84
         BZ    XA29                                            SS JAN84
         LA    R1,IN24G                 BACK TO 24  BIT MODE   SS JAN84
         BSM   0,R1                     SWITCH MODES TO 24     SS JAN84
IN24G    DS    0H                                              SS JAN84
XA29     DS    0H                                              SS JAN84
.TEST4D  ANOP  ,                                               SS SEP85
         SPACE ,                                               DM JUN83
         CLOSE (SYSIN),MF=(E,OCLIST)                           DM JUN83
         FREEPOOL SYSIN                                        DM JUN83
         TM    SYSPRINT+48,16      SEE IF OPEN                 DM JUN83
         BZ    Y13                   NO                        DM JUN83
         CLOSE (SYSPRINT),MF=(E,OCLIST)                        DM JUN83
         FREEPOOL SYSPRINT                                     DM JUN83
Y13      EQU   *                                               DM JUN83
         WTO 'DMSK00I DYNAMASK DONE ****',ROUTCDE=(2,11)
         CLI   SAVEPARM,C' '            ANY PARM               SS JUN86
         BE    NOWTOP                   NO                     SS JUN86
         MVC   WTOE(WTOPLN),WTOP                               SS JUN86
         MVC   WTOE+13(20),SAVEPARM                            SS JUN86
         WTO   MF=(E,WTOE)                                     SS JUN86
NOWTOP   DS    0H                                              SS JUN86
         SPACE 2                                               DM JUL80
         WXTRN VATUCB                                          DM JUN83
         L     R1,4(,R13)          HIGHER SAVE AREA            DM JUL80
         L     R1,24(,R1)          R1 (PARM PTR) FROM CALLER   DM JUL80
         L     R15,=A(VATUCB)                                  DM JUL80
         LTR   R15,R15                                         DM JUL80
         BZ    *+6                 UNRESOLVED - SKIP CALL      DM JUL80
         BALR  R14,R15             CALL VATUCB                 DM JUL80
         SPACE ,                                               DM JUL80
         AIF   ('&SYSPARM' EQ 'XA' OR                                  -
               '&SYSPARM' EQ 'TESTXA').XA16                    DM JUN83
         WXTRN GENERIC                                         DM JUN83
         TM    FLAG2,CVTMVSE       XA SYSTEM                   SS OCT84
         BO    XA30                SKIP 370 GENERIC ROUTINE    SS OCT84
         ST    R10,OCLIST          NEW EDT ADDRESS (HEADER)    DM JUL80
         OI    OCLIST,X'80'        SET END FLAG                DM JUL80
         LA    R1,OCLIST           PARM IS EDT                 DM JUL80
         L     R15,=A(GENERIC)                                 DM JUL80
         LTR   R15,R15                                         DM JUL80
         BZ    *+6                 UNRESOLVED - SKIP CALL      DM JUL80
         BALR  R14,R15             CALL GENERIC                DM JUL80
XA30     DS    0H                                              SS OCT84
.XA16    ANOP  ,                                               DM JUN83
         SPACE 2                                               DM JUL80
EXIT     LR    R1,R13
         L     R0,GETMLEN          LENGTH TO FREE              RCHJUN79
         PUSH  USING                                           DM JUL80
         DROP  ,                                               DM JUL80
         L     R13,4(R13)
         FREEMAIN R,A=(1),LV=(0)
         RETURN (14,12),RC=0                                   DM JUL80
         POP   USING                                           DM JUL80
*
*  SUBROUTINE TO READ INPUT AND EXTRACT FIELDS
*
GETNEXT  MVC   BUF,=CL9' '              BLANK BUFFER
         CLI   FLAGS,1                  IS WE LOOKING FOR UNIT NAME
         BE    READ                     YES, START WITH NEW CARD
         L     R15,ABUF                 CURRENT CHARACTER
         CLI   FLAGS,2                  IS WE LOOKING FOR FIRST VOL/CUU
         BE    SCANBEG                  YES, LOOK FOR IT
         CLI   FLAGS,3                  IS WE LOOKING FOR NEXT VOL/CUU
         BNE   MSG10                    NOT ANY OF ABOVE, ERROR
         CLI   0(R15),C','              COMMA SAYS THERE ARE MORE
         BNE   EOR                      NO COMMA.. NO MORE ON RECORD
SCANBEG  LA    R15,1(R15)               NEXT CHAR
         C     R15,ENDBUF               WE AT END OF CARD
         BE    READ                     YES, GET NEXT CARD
CLIBLK   CLI   0(R15),C' '              IS IT NON BLANK
         BE    SCANBEG                  NO, TRY NEXT
         LR    R1,R15                   FOUND FIRST CHAR, SAVE LOCATION
SCANEND  LA    R15,1(R15)               NEXT CHAR .. LOOKING FOR END
         C     R15,ENDBUF               END OF CARD
         BE    MSG11                    YES, SHOULD NOT BE
         CLI   0(R15),C' '              IS IT FIRST BLANK
         BE    ENDFIELD                 YES, END OF FIELD
         CLI   0(R15),C','              OR IS IT A COMMA
         BNE   SCANEND                  NOT END, CONTINUE SCAN
ENDFIELD ST    R15,ABUF                 SAVE FOR NEXT REQUEST
         SR    R15,R1                   CALC LENGTH OF FIELD
         C     R15,=F'9'                SHOULD NOT BE MORE THAN 9 CHAR
         BH    MSG12                    IT IS, ERROR
         BCTR  R15,0                    LESS ONE FOR MVC INST
MOVE     MVC   BUF(0),0(R1)             USED BY EX INST
         EX    R15,MOVE                 COPY FIELD INTO BUF LEN IN R15
         LA    R15,1(R15)               ADD ONE BACK
TESTFLG  CLI   FLAGS,2                  WE DONE WITH FIRST
         BE    SET3                     YES, SET FOR MORE
         CLI   FLAGS,1                  WE DONE WITH UNIT NAME
         BE    SET2                     YES, SET FOR FIRST VOL OR CUU
         BR    R14                      NONE OF ABOVE .. NORMAL RETURN
SET2     MVI   FLAGS,2                  NEXT WILL BE FIRST VOL OR CUU
         BR    R14                      RETURN
SET3     MVI   FLAGS,3                  SET FOR MORE FIELD
         BR    R14                      RETURN
EOR      MVI   FLAGS,1                  WILL START WITH NEW UNIT NAME
         LA    R15,FF                   INDICATE EOR
         BR    R14                      RETURN
READ     ST    R14,ABUF                 SAVE RETURN ADDRESS
READ2    GET   SYSIN                                           DM JUN83
         CLI   0(R1),C'*'               COMMENT CARD           SS APR86
         BE    READ2                    YES, SKIP              SS APR86
         LR    R15,R1                   BUFFER ADDRESS
         L     R14,ABUF                 RESTORE RETURN ADDRESS TO R14
         LA    R1,72(R1)                CALC END OF CARD
         ST    R1,ENDBUF                SAVE FOR REGULAR USE
         B     CLIBLK                   START SCANING THIS CARD
EOF      L     R14,ABUF                 RESTORE RETURN ADDR TO R14
         MVI   FLAGS,FF                 CAUSE ERROR IS CALLED AGAIN
         LA    R15,FF                   INDICATE EOF
         BR    R14                      RETURN
         EJECT ,
CHECKHEX DS    0H                   *                          SS MAR87
         CLI   0(R1),C'0'           IN NUMBER RANGE            SS MAR87
         BL    CHECKCHR             NO, MAYBE ALPHA            SS MAR87
         CLI   0(R1),C'9'           IN NUMBER RANGE            SS MAR87
         BH    MSG8                 NO, SYNTAX ERROR           SS MAR87
         BR    R14                  GOOD, RETURN TO CALLER     SS MAR87
CHECKCHR DS    0H                   *                          SS MAR87
         CLI   0(R1),C'A'           IS IT A-F                  SS MAR87
         BL    MSG8                 NO,  SYNTAX ERROR          SS MAR87
         CLI   0(R1),C'F'           IS IT A-F                  SS MAR87
         BH    MSG8                 NO,  SYNTAX ERROR          SS MAR87
         SR    R15,R15              ZERO FOR INSERT            SS MAR87
         IC    R15,0(R1)            *                          SS MAR87
         LA    R15,X'FA'-C'A'(,R15) ADJUST TO FA-FF            SS MAR87
         STC   R15,0(R1)            SET                        SS MAR87
         BR    R14                  RETURN                     SS MAR87
         EJECT ,
*        CONVERT JULIAN DATE TO CALENDAR DATE
*
*        ALGORITHM IS NON-ITERATIVE USING TABLES
         SPACE 2
TOCAL    STM   R14,R3,12(R13)                                  DM JUN83
         CVB   R14,DBLWRD                                      DM JUN83
         SRDA  R14,32                                          DM JUN83
         D     R14,=F'1000'  SEPARATE YEAR/DAY                 DM JUN83
         SPACE ,                                               DM JUN83
* IF THE DATE IS MARCH OR LATER AND THE YEAR IS NOT A LEAP     DM JUN83
* YEAR THEN ADD 1 TO THE DAY TO MAKE THE DATE LOOK LIKE A      DM JUN83
* LEAP YEAR DATE                                               DM JUN83
         CH    R14,=H'59'                                      DM JUN83
         BNH   PASTADD1      NOT PAST FEBRUARY                 DM JUN83
         EX    R15,EXTM03    SEE IF LEAP YEAR                  DM JUN83
         BZ    PASTADD1      LEAP YEAR                         DM JUN83
         LA    R14,1(,R14)   NOT A LEAP YEAR - ADD A DAY       DM JUN83
PASTADD1 CH    R14,=H'366'                                     DM JUN83
         BH    BADRTN        ERROR - JULIAN DAY IS TOO LARGE   DM JUN83
         LTR   R14,R14                                         DM JUN83
         BNP   BADRTN        ERROR - JULIAN DAY L/T 1          DM JUN83
         LR    R3,R15        SAVE YEAR                         DM JUN83
         SRDL  R14,5         DIVIDE DAY BY 32                  DM JUN83
         AR    R14,R14       DOUBLE QUOTIENT FOR USE AS INDEX  DM JUN83
         SRL   R15,27        JUSTIFY REMAINDER                 DM JUN83
         SH    R15,FACTOR1(R14)   DEVELOP DAY OF MONTH FROM REMAINDER
         BP    DATEOK        EVERYTHING OK                     DM JUN83
         SH    R15,FACTOR2(R14)   CORRECT DAY OF MONTH AND MONTH       *
                                  (MONTH WILL BE ADDED NEXT)   DM JUN83
         SPACE ,                                               DM JUN83
DATEOK   AH    R15,MNTHTBL(R14)   ADD MONTH  (* 100)           DM JUN83
         MH    R15,=H'100'        SHIFT OVER FOR YEAR          DM JUN83
         AR    R15,R3             ADD YEAR                     DM JUN83
         CVD   R15,DBLWRD                                      DM JUN83
         OI    DBLWRD+7,15                                     DM JUN83
         SR    R15,R15            SET GOOD RETURN CODE         DM JUN83
         SPACE ,                                               DM JUN83
RETURN   RETURN (14,3),RC=(15)                                 DM JUN83
         SPACE 3                                               DM JUN83
BADRTN   LA    R15,12        SET ERROR RETURN CODE             DM JUN83
         B     RETURN                                          DM JUN83
EXTM03   TM    =X'03',0            FOR EXECUTE                 DM JUN83
         SPACE 3                                               DM JUN83
MNTHTBL  DC    H'100,300,400,500,600,700,800,900,1000,1100,1200,1300'  *
                             MONTHS (* 100)                    DM JUN83*
                             (* 100 TO ALLOW A SINGLE CVD)     DM JUN83
FACTOR1  DC    H'0,28,27,25,24,22,21,20,18,17,15,14'           DM JUN83*
                             FACTORS TO ADJUST REMAINDER TO    DM JUN83*
                             BE THE DAY OF THE MONTH           DM JUN83
FACTOR2  DC    Y(100-0,100-29,100-31,100-30,100-31,100-30)     DM JUN83
         DC    Y(100-31,100-31,100-30,100-31,100-30,100-31)    DM JUN83
*              100 - DAYS IN THE PRIOR MONTH                   DM JUN83
*              (USED TO BACK UP THE MONTH AND CORRECT DAY)     DM JUN83
         EJECT                                                 CJKMAY79
MSG1     WTO   'DMSK01I OPEN FAILED, TERMINATED WITH NO ACTION',       X
               ROUTCDE=(2,11)
         B     EXIT
MSG2     WTO   'DMSK02I UNIT NAME MORE THAN 8 CHAR, IGNORED',          X
               ROUTCDE=(2,11)
PURGE    BAL   R14,GETNEXT
         C     R15,=F'255'
         BNE   PURGE
         B     BLDMNT
MSG3     WTO   'DMSK03I VOL NAME MORE THAN 6 CHAR, IGNORED',           X
               ROUTCDE=(2,11)
         B     EACHU
MSG4     MVC   WTOE(WTO4LN),WTO4
         MVC   WTOE+30(6),BUF
         WTO   MF=(E,WTOE)
         B     EACHU
WTO4     WTO   'DMSK04I VOLUME NOT FOUND           ',ROUTCDE=(2,11),   X
               MF=L
WTO4LN   EQU   *-WTO4
MSG5     MVC   WTOE(WTO5LN),WTO5
         MVC   WTOE+30(3),BUF+1
         WTO   MF=(E,WTOE)
         B     EACHU
WTO5     WTO   'DMSK05I UNIT NOT FOUND             ',ROUTCDE=(2,11),   X
               MF=L
WTO5LN   EQU   *-WTO5
WTOP     WTO   'DMSK06I                            ',ROUTCDE=(2,11),   X
               MF=L
WTOPLN   EQU   *-WTOP
MSG6     WTO   'DMSK07I MAX OF 128 NAMES EXCEEDED, REST IGNORED',      X
               ROUTCDE=(2,11)                                  SS AUG84
         B     SORTGRP
MSG7     WTO   'DYNAMASK - GETMAIN AREA EXCEEDED - PROGRAM ABORTED',   X
               ROUTCDE=(2,11)
         B     EXIT
MSG8     MVC   WTOE(WTO8LN),WTO8
         MVC   WTOE+34(8),BUF
         WTO   MF=(E,WTOE)
         B     EACHU
WTO8     WTO   'DMSK08I SYNTAX ERROR IN UNIT             ',            X
               ROUTCDE=(2,11),                                         X
               MF=L
WTO8LN   EQU   *-WTO8
MSG10    ABEND 10,DUMP
MSG11    WTO   'DMSK09I FIELD DOES NOT END BEFORE COLUMN 72, IGNORED', X
               ROUTCDE=(2,11)
         B     READ
MSG12    MVC   WTOE(WTO12LN),WTO12
MVCFD    MVC   WTOE+4(0),0(R1)
         EX    R15,MVCFD
         WTO   MF=(E,WTOE)
         B     TESTFLG
WTO12    WTO   '                                                       X
                                                  ',ROUTCDE=(2,11),MF=L
WTO12LN  EQU   *-WTO12
         DS    0F
ABEND999 ABEND 999,DUMP                                        RCHJUN80
ENQLST   ENQ   (SYSIEFSD,Q4,E,2,SYSTEM),MF=L                   DM JUL80
SYSIEFSD DC    CL8'SYSIEFSD'       ENQ MAJOR NAME              DM JUL80
Q4       DC    CL2'Q4'             ENQ MINOR NAME              DM JUL80
         DS    0F                                              SS AUG84
         AIF   ('&SYSPARM' EQ 'TEST' OR                                -
               '&SYSPARM' EQ 'TESTXA').TEST1                   DM JUN83
CORESIZE DC    AL1(&SUBP),AL3(16384)    FOR EDT IN CSA         SS AUG84
         AGO   .TEST2                                          DM JUN83
.TEST1   ANOP  ,                                               DM JUN83
CORESIZE DC    A(X'01000000'+65536)     FOR EDT IN USER AREA   DM JUN83
.TEST2   ANOP  ,                                               DM JUN83
CORESIZX DC    A(65536)                 FOR EDT IN ECSA (XA)   SS AUG84
GETMLEN  DC    A(SAVEEND-SAVE)          FOR TEMPORARY WORK AREA
DYNAHDR  DC    CL12'DYNAMASK EDT'                              DM JUL80
DYNAHDR2 DC    CL8'DYNAMSK2'                                   SS MAR87
BINTVL   DC    F'500'                                          RCHJUN80
         LTORG
         SPACE 3                                               DM JUN83
SYSINDCB DCB   DDNAME=SYSIN,LRECL=80,MACRF=GL,DSORG=PS,                X
               EODAD=EOF
         SPACE 3                                               DM JUN83
SYSPRDCB DCB   DDNAME=SYSPRINT,MACRF=PM,DSORG=PS,              DM JUN83X
               RECFM=FBA,LRECL=133                             DM JUN83
         EJECT
GXREFDEF DSECT ,                   GROUP/UNIT CROSS-REFERENCE  DM JUN83
GXRUCBPT DS    F                   UCB INDEX TO UCB LOOKUP     DM JUN83
GXRUCBIX DS    0H                  UCB LOOKUP INDEX            SS JAN84
GXRNEWID DS    H                   NEW GROUP ID                SS JAN84
GXROLDID DS    H                   OLD GROUP ID                SS JAN84
GXRMASKS DS    0XL16               MASK 1-4                    SS SEP87
GXRMASK  DS    XL4                 MASK                        DM JUN83
GXRMASK2 DS    XL4                 MASK WORD 2                 SS JAN84
GXRMASK3 DS    XL4                 MASK WORD 3                 SS AUG84
GXRMASK4 DS    XL4                 MASK WORD 4                 SS AUG84
GXRMASKZ EQU   *-GXRMASK           MASK SIZE                   SS JAN84
GXRSORTL EQU   *-GXROLDID          LENG OF SORT FIELDS         SS JAN84
GXRLNG   EQU   *-GXREFDEF                                      DM JUN83
         EJECT ,                                               DM JUN83
SAVE     DSECT
SAVEAREA DS    18F
DBLWRD   DS    D                                               DM JUN83
UPLSTR   DS    F                   SAVE POINTER TO UCB PT LIST SS JAN84
COUNT1   DS    2F
COUNT2   DS    2F
MASK     DS    F
NUMUNIT  DS    F                   NUMBER OF UNITS             SS JAN84
UCBLU    DS    F
APTXREF  DS    F
ABUF     DS    F
ENDBUF   DS    F
GXREFXXX DS    F                   SAVE END OF GXREF
ADRGRPT  DS    A                   ADDRESS OF GROUP POINTERS   DM NOV83
GXRLNG2  DS    H                   SAVE LENGTH GXREF           SS JAN84
GNRCLNG2 DS    H                   SAVE LENGTH GENERIC SEC     SS JAN84
GRPLNG2  DS    H                   SAVE LENGTH OF GROUP SEC    SS JAN84
UNIQUE   DS    H                   SAVE LOOK UP DEVT           SS JAN84
LOWCUU   DS    H                   LOWER CUU OF RANGE          SS MAR87
HICUU    DS    H                   HIGHER CUU OF RANGE         SS MAR87
GROUP    DS    H                   SAVE GROUP NUMBER           SS JAN84
SYSIN    DS    XL96                AREA FOR SYSIN DCB          DM JUN83
SYSPRINT DS    XL96                AREA FOR SYSPRINT DCB       DM JUN83
PREFTAB  DS    A                                               RCHMAY80
EDTPTR   DS    A                                               RCHMAY80
OCLIST   OPEN  (0),MF=L                                        DM JUL80
FLAGS    DS    X                    READ FLAGS                 SS MAR87
RDNAME   EQU   1                    LOOKING FOR DEVTYPE NAME   SS MAR87
RDDEV    EQU   2                    LOOKING FOR DEVICE         SS MAR87
RDMORE   EQU   3                    LOOKING FOR MORE DEVICES   SS MAR87
BFLAG    DS    X                    SORT FLAG
FLAG2    DS    X                    MISC FLAGS                 SS JAN84
*        EQU   X'80'                CVTMVSE  (XA SYSTEM)
GENEDT   EQU   X'04'                CURRENT EDT IS GEN EDT
LDEDT    EQU   X'02'                EDT WAS LOADED
RANGE    EQU   X'01'                RANGE OF CUU TO PROCESS
BUF      DS    CL9
SAVEPARM DS    CL20                 SAVE PARM                  SS JUN86
WTOE     DS    CL133                                           DM JUN83
         SPACE 2                                               DM JUN83
         AIF   ('&SYSPARM' NE 'TEST' AND                               -
               '&SYSPARM' NE 'TESTXA').TEST8                   DM JUN83
         SPACE ,                                               DM JUN83
DIFF     DS    CL32,C              DIFFERENCE HOLD AREA        DM JUN83
DUMPARM1 DS    A                   DATA POINTER FOR XDUMPFMT   DM JUN83
         DS    A                   PARMS                       DM JUN83
         DS    A(WTOE+1+X'80000000')    PRINT LINE             DM JUN83
         DS    3F                  LENGTH, OFFSET, FACTOR      DM JUN83
         SPACE ,                                               DM JUN83
DUMPARM2 DS    A                   DATA POINTER FOR XDUMPFMT   DM JUN83
         DS    A                   PARMS                       DM JUN83
         DS    A(WTOE+1+X'80000000')    PRINT LINE             DM JUN83
         DS    3F                  LENGTH, OFFSET, FACTOR      DM JUN83
         SPACE ,                                               DM JUN83
.TEST8   ANOP  ,                                               DM JUN83
         SPACE ,                                               DM JUN83
         DS    0F
* MODITFIED NAME TABLE                                         SS JAN84
MNTNAME  EQU   0                        GENERIC NAME           SS JAN84
MNTMASK  EQU   8                        MASK 4 BYTES           SS JAN84
MNTMASKI EQU   12                       MASK INDEX H           SS JAN84
MNTFLAG  EQU   14                       FLAG BYTE              SS JAN84
MNTLN    EQU   16                       ENTRY LENGTH           SS JAN84
MNT      DS    128CL(MNTLN)                                    SS AUG84
GXREF    DS    4096XL(GXRLNG)      GROUP/UNIT XREF TABLE       DM JUN83
GXREFEND DS    CL8
SAVEEND  EQU   *
         EJECT ,                                               DM JUN83
         AIF   ('&SYSPARM' EQ 'XA' OR                                  -
               '&SYSPARM' EQ 'TESTXA').XA17                    DM NOV83
         EDT   ,                                               DM JUN83
         AGO   .XA18                                           DM NOV83
.XA17    ANOP  ,                                               DM NOV83
         EDT   TYPE=BOTH                                       DM NOV83
.XA18    ANOP  ,                                               DM NOV83
         END
XDUMPFMT TITLE 'FORMAT DATA AS IN A DUMP'
XDUMPFMT START ,
         SPACE ,
***********************************************************************
*                                                                     *
*        SUBPROGRAM TO FORMAT DATA IN A MANNER SIMILAR                *
*        TO ABEND/SNAP DUMPS (SVC 51)                                 *
*                                                                     *
*        CALLING SEQUENCE:                                            *
*          PARM 1 - DATA TO BE PRINTED                                *
*          PARM 2 - FULLWORD LENGTH                                   *
*                   FULLWORD OFFSET (0 FIRST TIME)                    *
*                   FULLWORD FACTOR (TO BE ADDED TO PRINT ADDRESS)    *
*          PARM 3 - OUTPUT AREA (125 BYTES) - IF FACTOR IN PARM2      *
*                   IS ZERO THEN THE FIRST 5 BYTES WILL BE BLANK      *
*                                                                     *
*        RETURN CODES -                                               *
*          0 - ALL DATA HAS BEEN FORMATTED                            *
*          4 - SOME DATA IS LEFT                                      *
*                                                                     *
*        WRITTEN BY DOUG MERCER, JUNE 30, 1982,                       *
*          FOR THE LOCKHEED-CALIFORNIA COMPANY                        *
*                                                                     *
*        MODIFIED BY DOUG MERCER, AUGUST 13, 1982,                    *
*          TO PRINT BOTH OFFSET AND FACTOR PLUS                       *
*          OFFSET IF OFFSET IS NON-ZERO                               *
*                                                                     *
*        MODIFIED BY DOUG MERCER, SEPTEMBER 1, 1982,                  *
*          TO SUPPRESS FIRST 2 LEADING ZEROS ON THE                   *
*          ADDRESSES                                                  *
*                                                                     *
*        ATTRIBUTES - REENTRANT                                       *
*        TAB SETTINGS - 10 16 35 40 72                                *
*                                                                     *
***********************************************************************
         SPACE 3
R0       EQU   0
R1       EQU   1
R2       EQU   2                   USED FOR COUNTER
R3       EQU   3                   USED AS POINTER IN LOOP
R4       EQU   4                   UCB, POINTER  NEXT IN NEW EDT
R5       EQU   5                   COUNTER OR POINTER  NEW PTXREF
R6       EQU   6                   COUNTER OR POINTER  OLD PTXREF
R7       EQU   7                   COUNTER TO TOTAL FOR EACH SEC
R8       EQU   8                   POINTER TO MODEL EDT
R9       EQU   9                   SIZE OF GROUP - UNIT XREF
R10      EQU   10                  POINTER TO NEW EDT
R11      EQU   11                  PROGRAM BASE
R12      EQU   12                  PROGRAM BASE TWO
R13      EQU   13                  SAVE AREA/WORK BASE
R14      EQU   14
R15      EQU   15
         SPACE 3
         SAVE  (14,12),,XDUMPFMT_&SYSDATE
         LR    R12,R15
         SPACE ,
         USING XDUMPFMT,R12
         LM    R9,R11,0(R1)       PICK PARM POINTERS
         USING PARM2,R10
         USING PARM3,R11
         SPACE ,
         LR    R0,R11             BLANK
         LA    R1,L'PARM3           THE
         SR    R14,R14                OUTPUT
         SR    R15,R15                  AREA
         ICM   R15,8,=C' '        FILL BYTE
         MVCL  R0,R14
         SPACE ,
         MVI   AST1,C'*'
         LR    R1,R9              DEVELOP
         A     R1,OFF2              DATA ADDRESS
         SPACE ,
* FORMAT ADRESS(ES)                                            DM AUG82
         L     R0,FCT2            ADDRESS FACTOR               DM AUG82
         LTR   R0,R0                                           DM AUG82
         BZ    ADDRB              ZERO - USE SINGLE ADDRESS    DM AUG82
         A     R0,OFF2            FULL ADDRESS                 DM AUG82
         STCM  R0,15,DATA1                                     DM AUG82
         UNPK  ADDR3(9),DATA1(5)                               DM AUG82
         TR    ADDR3,HEXTBL                                    DM AUG82
         MVI   ADDR3+8,C' '       BLANK GARBAGE FROM UNPK      DM AUG82
         C     R0,=XL4'FFFF'      SEE IF SMALL                 DM SEP82
         BNL   *+10               NOT SMALL ENOUGH             DM SEP82
         MVC   ADDR3+2(2),=C'  '  BLANK ZEROS                  DM SEP82
         C     R0,=XL4'FFFFFF'    SEE IF LEADING ZEROS         DM SEP82
         BNL   *+10               NO                           DM SEP82
         MVC   ADDR3(2),=C'  '    BLANK                        DM SEP82
         UNPK  ADDR3A(5),OFF2+2(3)     OFFSET                  DM AUG82
         TR    ADDR3A,HEXTBL                                   DM AUG82
         MVI   ADDR3A+4,C' '      BLANK GARBAGE FROM UNPK      DM AUG82
         B     FORMREST           CONTINUE FORMATTING          DM AUG82
         SPACE ,                                               DM AUG82
ADDRB    UNPK  ADDR3B(9),OFF2(5)    DEVELOP PRINT              DM AUG82
         TR    ADDR3B,HEXTBL          ADDRESS                  DM AUG82
         MVI   ADDR3B+8,C' '      BLANK GARBAGE FROM UNPK      DM AUG82
         CLC   OFF2,=XL4'FFFF'    SEE IF SMALL                 DM SEP82
         BNL   *+10               NOT SMALL ENOUGH             DM SEP82
         MVC   ADDR3B+2(2),=C'  ' BLANK ZEROS                  DM SEP82
         CLC   OFF2,=XL4'FFFFFF'  SEE IF LEADING ZEROS         DM SEP82
         BNL   *+10               NO                           DM SEP82
         MVC   ADDR3B(2),=C'  '   BLANK                        DM SEP82
         SPACE ,
* FORMAT THE REST OF THE DATA                                  DM AUG82
FORMREST LR    R0,R1              SOURCE ADDRESS               DM AUG82
         LA    R1,32              MAX LENGTH FOR ONE LINE
         C     R1,LNG2            SEE IF AT LEAST THIS MUCH AVAILABLE
         BNH   *+8                YES
         L     R1,LNG2            LIMIT TO WHAT'S AVAILABLE
         LR    R2,R1
         LA    R14,DATA3          RESULT AREA
         LR    R15,R1
         MVCL  R14,R0             MOVE DATA TO CHARACTER AREA
         MVI   0(R14),C'*'        PUT ON 'SPLAT'
         SPACE ,
         LA    R3,DATA1           FORMAT FIRST
         LA    R4,DATA3             4 WORDS
         BAL   R5,FMTHEX              IN HEX
         SPACE ,
         LA    R3,DATA2           FORMAT LAST
         LA    R4,DATA3+16          4 WORDS
         BAL   R5,FMTHEX              IN HEX
         SPACE ,
         TR    DATA3,PRINTABL     CONVERT UNPRINTABLE BYTES TO '.'
         LA    R0,32              DEVELOP
         L     R1,LNG2              REMAINING
         SR    R1,R0                  LENGTH
         BP    LNGOK              STILL SOME LEFT
         AR    R0,R1              ADJUST TO LENGTH USED
         SR    R1,R1              ZERO REMAINDER
LNGOK    ST    R1,LNG2            UPDATE REMAINING LENGTH
         L     R1,OFF2
         AR    R1,R0
         ST    R1,OFF2            UPDATE OFFSET
         SPACE ,
         L     R0,LNG2
         SR    R15,R15            SET RETURN CODE
         LTR   R0,R0              SEE IF ANY LENGTH LEFT
         BZ    *+8                NO
         LA    R15,4              RESET RETURN CODE
         RETURN (14,12),T,RC=(15)
         SPACE 3
* FORMAT 4 WORDS IN HEX, R2 IS NUMBER OF BYTES TO FORMAT,
*  R3 POINTS TO RESULT AREA, R4 POINTS TO SOURCE AREA,
*  R5 IS RETURN
         SPACE ,
FMTHEX   LA    R0,4               WORD COUNT
         LTR   R2,R2              SEE IF ANY TO DO
         BNPR  R5                 NO - RETURN
         SPACE ,
FH1      UNPK  0(9,R3),0(5,R4)    MAKE HEX
         TR    0(8,R3),HEXTBL       PRINTABLE
         MVI   8(R3),C' '         BLANK GARBAGE BYTE
         LA    R3,9(,R3)          INCREMENT
         LA    R4,4(,R4)            ADDRESSES
         SH    R2,=H'4'           DECREMENT REMAINING BYTES
         BM    FH2                GONE TOO FAR - MUST BLANK SOME
         BZR   R5                 EXHAUSTED - RETURN
         BCT   R0,FH1             TO NEXT WORD
         BR    R5                 RETURN
         SPACE 2
FH2      SH    R3,=H'3'           TOO MUCH FORMATTED - BLANK SOME
         SPACE ,
FH3      MVC   0(2,R3),=C'  '     BLANK 2 DIGITS
         SH    R3,=H'2'           BACK UP 2 MORE
         AH    R2,=H'1'           ADJUST REMAINING COUNT
         BM    FH3                MORE TO GO
         SPACE ,
         BR    R5                 DONE - RETURN
         SPACE 3
PRINTABL DC    256C'.'            TRANSLATE TABLE - NON-GRAPHICS
         ORG   PRINTABL+C' '           TO PERIODS
         DC    C' '
         ORG   PRINTABL+C':'
         DC    C':.<(+.&&'
         ORG   PRINTABL+C'!'
         DC    C'!$*);:-/'
         ORG   PRINTABL+C','
         DC    C',%_>?'
         ORG   PRINTABL+C':'
         DC    C':#@''="'
         ORG   PRINTABL+C'A'
         DC    C'ABCDEFGHI'
         ORG   PRINTABL+C'J'
         DC    C'JKLMNOPQR'
         ORG   PRINTABL+C'S'
         DC    C'STUVWXYZ'
         ORG   PRINTABL+C'0'
         DC    C'0123456789'
         ORG   ,
         SPACE 3
HEXTBL   EQU   *-240              TO MAKE UNPACKED HEX PRINTABLE
         DC    C'0123456789ABCDEF'
         SPACE 3
PARM2    DSECT ,                  PARAMETER 2 FROM CALL
LNG2     DS    F                  (REMAINING) LENGTH
OFF2     DS    F                  OFFSET FROM BEGINNING OF PARM1
FCT2     DS    F                  FACTOR TO ADD TO ADDRESS IN PRINT
         SPACE 3
         DSECT ,                  PARAMETER 3 FROM CALL
PARM3    DS    0CL125             DATA RETURN AREA             DM AUG82
ADDR3    DS    CL8,C              FACTOR + OFFSET              DM AUG82
ADDR3A   DS    CL4,CL2            OFFSET                       DM AUG82
         ORG   ADDR3+5                                         DM AUG82
ADDR3B   DS    CL8,CL2            ADDRESS OF HIGH-ORDER BYTE   DM AUG82
DATA1    DS    4CL9,CL3           4 WORDS (HEX)
DATA2    DS    4CL9,C             4 WORDS (HEX)
AST1     DS    C'*'
DATA3    DS    CL32,C'*'          32 BYTES (CHAR)
         SPACE 2
         END   ,
//LKED     EXEC  PGM=IEWL,REGION=256K,COND=(4,LT,ASM),
//         PARM='LIST,MAP,LET,AC=1,RENT,REFR,REUS'
//SYSPRINT DD  SYSOUT=*
//SYSUT1   DD  UNIT=VIO,SPACE=(CYL,(10,10))
//SYSLIB   DD  DISP=SHR,DSN=SYS2.LINKLIB
//SYSLMOD  DD  DISP=SHR,DSN=SYS2.LINKLIB
//SYSLIN   DD  DISP=(OLD,DELETE),DSN=*.ASM.SYSGO,DISP=(OLD,PASS)
//         DD  *
  NAME DYNAMASK(R)
