         MACRO
         FUNCREFS
         GBLC      &OPSYS,&DECK                                    DOS3
         GBLA      &UNDEF                                          V1L2
         GBLB      &DVSD,&NDVSD                                    DVS1
         USING     START,RX
START    DC        0D'0'
         SPACE
***********************************************************************
*****    ALMOST EVERY EXECUTABLE INSTRUCTION (EXCEPTIONS:STOP,CONTINUE)
*****    HAS OBJECT CODE WHICH BEGINS WITH:  BALR R11,R12
*****                                        DC   AL2(ISN)
*****    THIS SERVES THREE PURPOSES: R11 BECOMES A BASE REGISTER
*****                                    FOR THE STATEMENT
*****                                WE CAN READILY FIND THE ISN
*****                                EXECUTION TIME EXCEEDED IS CAUGHT
*****                                    FAIRLY SIMPLY
***********************************************************************
         SPACE
* NOTE: IF WE GET AN INTERVAL TIMER INTERRUPT, THE BRANCH IS CHANGED
* TO A NOP INSTRUCTION AND WE FALL THRU TO GIVE AN INTERVAL TIMER
* OVERFLOW ERROR
         SPACE
* NOTE: RX MUST POINT DIRECTLY AT THIS ROUTINE IN ORDER THAT WE MAY
* USE A BALR INSTRUCTION TO GET TO IT.
         SPACE
         AIF       ('&OPSYS' NE 'DOS').QUERTI                      V1L5
XISNRTN  B         TTESTMR             TEST IF TIME EXPIRED        DOS3
         AGO       .QUERTJ                                         V1L5
.QUERTI  ANOP                                                      V1L5
XISNRTN  B         XISNPATC            BRANCH TO PATCH AREA        V1L2
.QUERTJ  ANOP                                                      V1L5
         $ERROR    (TRAZ,KO,6)                                     V1L5
XISNSW   EQU       XISNRTN
***********************************************************************
*****   THE FOLLOWING PATCH AREA IS SUPPLIED FOR THE POSSIBLE ADDITION
*****   OF A FACILITY TO CANCEL A JOB WITHOUT CANCELLING THE BATCH.
*****   HERE'S HOW IT MIGHT BE DONE: DO A WTOR AT BATCH INITIALIZATION.
*****   THEN TEST IT'S ECB EACH TIME WE GET TO XISNRTN. IF THE ECB IS
*****   POSTED, BOOT THE JOB OFF, GO TO XSTOP TO TERMINATE, THEN REDO
*****   THE WTOR AND CONTINUE WITH THE NEXT JOB IN THE BATCH.
*****   THUS XISNRTN WOULD LOOK AS FOLLOWS:
*****   XISNRTN TM  ECB,X'40'          TEST COMPLETION BIT
*****           BZ  XISNSW
*****           L   R15,ADCON          OFF TO RESET WTOR
*****           BR  R15
*****           DC  H'0'  PADDING
*****    ECB    DC  F'0'
*****    ADCON  DC  A(KICKOFF ROUTINE)
*****    XISNSW B   ZR11+2   THIS IS THE RETURN TO OBJECT PROGRAM
*****           ERROR  (TRAZ,KO,6)     UNLESS THE TIMER SWITCH IS SET
***********************************************************************
         DS        6F
         AIF                  (&NDVSD).JNODOS                      DVS1
         ORG       *-24                                            DOS2
JTIMOUT  DS        F                                               DOS2
         ORG       ,                                               DOS2
.JNODOS  ANOP                                                      DOS2
XUNDEF   DC        0D'0',16X'&UNDEF'                               V1L2
XCMT1    DC        D'0'                WORK
XCMT2    DC        D'0'                WORK
*./DELETE SEQ1=00490000,SEQ2=00520000                              V1L5
XFLIT3   DC        X'4E00000000000000' UN-NORM ZERO FOR SCALING    V1L4
*./DELETE SEQ1=00560000,SEQ2=00590000                              V1L5
XFLTONE  DC    X'4110000000000000'           TOGETHER
XEXPLIT  EQU      XFLTONE
XBADARG  LA        R1,4(,R1)           CHCKA(2) MACRO ENTERS HERE  V1L4
         USING     CALLMODE,R1                                     V1L4
         TM        CALLMODE,B'11000000'  OR HERE                   V1L4
         BNZ       XERRSR41            BIF INVALID ARG             V1L4
         TM        CALLMODE,B'00110000'                            V1L4
         BNM       XERRSR41                                        V1L4
         $FREE     R1                                              V1L4
         BM        XERRSR71            BIF WRONG NO. OF ARGS       V1L4
         USING     CALLMODE,R1                                     V1L4
XVLARGS  TM        CALLMODE,B'11000000'  SPECIAL ENTRY FOR MAX/MIN'S L4
         BNZ       XERRSR41            BIF INVALID ARG             V1L4
         TM        CALLMODE,B'00110000'                            V1L4
         BNM       XERRSR41                                        V1L4
         $FREE     R1                                              V1L4
         BM        XERRSR21            BIF WRONG MODE/TYPE         V1L4
         DS        H                   ./ DELETE                   V1L4
XSTOP#   DC        H'0'                'N' OF STOP N SAVED BY STOP#V1L4
KF4      DC        F'4'
*****  TRAPS ASSUMES NEXT 5 FIELDS ARE STORED IN ORDER SHOWN
XFXOFLOW DC        F'1'                1
XEXOFLOW DC        F'1'                2
XEXUFLOW DC        F'1'                3
XFXDVCNT DC        F'1'                4
XFLDVCNT DC        F'1'                5
         SPACE 1
*./DELETE SEQ1=00770000,SEQ2=00780000                              V1L5
XOVRFLSW DC        H'0'
XDVCHKSW DC        H'0'
***********************************************************************
*        END OF EXECUTION,GO TO MAINREST  TO DO JOB ACCOUNTING
XSTOP    L         RP,XAMNRST
         BR        RP
***********************************************************************
*          ENTRY ROUTINE FOR LIBRARY FUNCTIONS
*                AVOIDS TURNING ON THE RECURSION BIT
         USING     ENTRUSE,RP
XENTSPEC LR        R15,R13
         L         R13,ENTRSAVE
         ST        R11,ZR13+72
         B         XENTFN
         $FREE     RP                                              V1L5
* IN-CORE FUNCTIONS RETURN ROUTINE
XFRET    L         R13,ZSVBACK
         LM        R14,R12,ZSV14
         BR        RDONE               RETURN;
XFENT99  LA        R1,4(,R1)           XFENT99  ENTERED HERE
         LA        R1,4(,R1)           OR HERE
         USING     CALLUSE,R1
         TM        CALLMODE,B'11000000'
         BNZ       XERRSR71
         TM        CALLMODE,B'00110000'
         BNM       XERRSR71
         $FREE     R1                                              V1L5
XERRSR21 $ERROR    (TRAZ,SR,2,VARR15)                              V1L5
XERRSR71 $ERROR    (TRAZ,SR,5,VARR15)                              V1L5
XERRSR41 $ERROR    (TRAZ,SR,4,VARR15)                              V1L5
*./DELETE SEQ1=01090000,SEQ2=01090000                              V1L5
XFLOAT10 LPR       R2,R1               FLOATS R1 TO F0
         N         R1,XFLIT
         STM       R1,R2,XCMT1
         OI        XCMT1,X'4E'
         SDR       F0,F0
         AD        F0,XCMT1
         BR        R14
XFLOAT30 LPR       R4,R3               FLOATS R3 TO F0
         N         R3,XFLIT
         STM       R3,R4,XCMT1
         OI        XCMT1,X'4E'
         SDR       F0,F0
         AD        F0,XCMT1
         BR        R14
***********************************************************************
*****    TRACEBACK ROUTINE REACHED BY THESE EXITS                 *****
XRETRACE L         R13,ZSVBACK
XRETR1   L         R11,ZSV11
XTRACEBK L         R15,XATRACEB
         BR        R15
***********************************************************************
*****   AN ENTRY TO ERROR EDITOR FOR IN-LINE CODE,SAVE REGISTERS HERE.
XERRENT3 STM       R0,R15,XHELPS
         LR        R1,R14
         L         R11,XAXERRP
         BALR      R14,R11
         LM        R0,R15,XHELPS
         TM        ZR14,B'10000000'    TEST IF 2-BYTE ERROR CODE
         BZ        ZR14+2              2 BYTE
         B         ZR14+4              4 BYTE
***********************************************************************
*****   THE NEXT TWO INSTRUCTIONS ARE 'EX'ECUTED BY LIBRARY ROUTINES. *
*****   THEY ARE USED TO SCREEN UNDEFINED ARGUMENTS FOR RUN=CHECK.    *
XNOPDEFZ NOP       XERRUV5
XNOPDEFN NOP       XERRUV6
         MEND
