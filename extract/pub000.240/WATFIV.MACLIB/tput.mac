         MACRO
&NAME    TPUT  &BFF,&SIZE,&EDIT,&WAIT,&HOLD,&BRKI,&PRTY,&TJID=,        *
               &TJIDLOC=
.*********************************************************************.
.*                                                                   *.
.*RELEASE 23 DELETIONS                                               *.
.*                                                                   *.
.*RELEASE 22 DELETIONS                                               *.
.*                                                                   *.
.*RELEASE 21 DELETIONS                                               *.
.*                                                                   *.
.*STATUS - CHANGE LEVEL 001                                     SA60002
.*                                                                   *.
.*NAME - TPUT                                                        *.
.*                                                                   *.
.*FUNCTION - THE TPUT MACRO IS USED TO MOVE A RECORD FROM THE USER'S *.
.*   BUFFER TO A TS OUTPUT BUFFER TO BE TRANSMITTED TO A TERMINAL.   *.
.*                                                                    *
.*********************************************************************.
.*
.*  TPUT BUFFER ADDR,BUFFER SIZE,EDIT   ,WAIT  ,NOHOLD,NOBREAK,HIGHP
.*        (2-12)      (2-12)     ASIS    NOWAIT HOLD   BREAKIN LOWP
.*                               CONTROL
.*                               FULLSCR                        SA60002
.*       TJID=XX   (EDIT,WAIT,NOHOLD,NOBREAK,HIGHP ARE DEFAULTS)
.*
.*        TJIDLOC=ADDR
.*
         LCLA  &OPT
         LCLA  &RET
         LCLB  &E,&W,&H,&B,&P
         LCLC  &PARM,&ID
&ID      SETC  '0'                      SET TJID TO '0'
         AIF   ('&BFF' EQ '' OR '&SIZE' EQ '').ERROR1  MNOTE
         AIF   ('&TJID' NE '' AND '&TJIDLOC' NE '').ERROR2  MNOTE
         AIF   ('&EDIT' EQ 'R').RF      CHECK FOR R FORM
&PARM    SETC  '&EDIT'
.CKPARM  ANOP
&RET     SETA  &RET+1
         AIF   ('&PARM' EQ '').RET           NULL, TRY NEXT
         AIF   ('&PARM' EQ 'EDIT').EDI       SET EDIT
         AIF   ('&PARM' EQ 'ASIS').ASI       SET ASIS
         AIF   ('&PARM' EQ 'CONTROL').CON    SET CONTROL
         AIF   ('&PARM' EQ 'FULLSCR').FULLS SET FULL SCREEN     SA60002
         AIF   ('&PARM' EQ 'WAIT').WAI       SET WAIT
         AIF   ('&PARM' EQ 'NOWAIT').NOW     SET NOWAIT
         AIF   ('&PARM' EQ 'HOLD').HOL       SET HOLD
         AIF   ('&PARM' EQ 'NOHOLD').NOH     SET NOHOLD
         AIF   ('&PARM' EQ 'NOBREAK').NOB    SET NOBREAK
         AIF   ('&PARM' EQ 'BREAKIN').BRE    SET BREAKIN
         AIF   ('&PARM' EQ 'HIGHP').HPR      SET HIGHP
         AIF   ('&PARM' EQ 'LOWP').LPR       SET LOWP
         AGO   .ERROR3
.*
.*  CHECK REGISTER NOTATION IS USED
.*
.CHKREG  SPACE 1
         AIF   ('&BFF'(1,1) EQ '(' OR '&SIZE'(1,1) EQ '(').REGFM  REG.
.*                                      FORM MACRO
         AIF   ('&TJID' EQ '').CHKLOC   GOTO CHECK TJIDLOC
         AIF   ('&TJID'(1,1) EQ '(').REGFM   REG. FORM MACRO
&ID      SETC  '&TJID'                  SET TJID
         AGO   .EXPAND                  GOTO EXPANSION
.CHKLOC  AIF   ('&TJIDLOC' EQ '').EXPAND  GO EXPAND IF NO 'TJIDLOC'
         AIF   ('&TJIDLOC'(1,1) EQ '(').REGFM  REG. FORM MACRO
.*
.*   REGULAR FORMAT OF MACRO
.*
.EXPAND  CNOP  0,4
         AIF   ('&TJIDLOC' NE '').LOC   TJLOC SPECIFIED
&NAME    B     *+12                     BRANCH AROUND CONSTANTS
         DC    AL2(&ID)                 TJID
         DC    AL2(&SIZE)               BUFFER SIZE
         DC    AL1(&OPT)                OPTIONS
         DC    AL3(&BFF)                BUFFER ADDR
         LM    0,1,*-8                  LOAD PARAMETER REGISTERS
.SVC     SVC   93                       ISSUE TGET/TPUT SVC
         SPACE 1
         MEXIT
.*
.*   TJIDLOC IS SPECIFIED
.*
.LOC     ANOP
&NAME    IC    0,&TJIDLOC               LOAD 1ST BYTE OF TJID
         SLL   0,8                      SHIFT IT
         IC    0,&TJIDLOC+1             LOAD 2ND BYTE OF TJID
         SLL   0,16                     SHIFT TJID TO HI-ORDER BYTE
         AIF   (&OPT EQ 0).ZERO         BRANCH IF OPTIONS ARE ZERO
         O     0,*+8                    LOAD BUFFER SIZE
         B     *+12                     BRANCH AROUND CONSTANT
         DC    AL2(0)                   TJID
         DC    AL2(&SIZE)               BUFFER SIZE
         DC    AL1(&OPT)                OPTIONS
         DC    AL3(&BFF)                BUFFER ADDR
         L     1,*-4                    LOAD OPTIONS & BUFFER ADDR
         AGO   .SVC                     GOTO ISSUE SVC
.ZERO    LA    1,&SIZE                  LOAD BUFFER SIZE
         OR    0,1                      OR IT INTO REGISTER 1
         LA    1,&BFF                   Z HIGH ORDR BYTE & LD BFR ADDR
         AGO   .SVC                     GOTO ISSUE SVC
.*
.*   REGISTER FORMAT
.*
.REGFM   AIF   ('&TJIDLOC' EQ '').NOLOC   SKIP IF TJIDLOC NOT SPECIFIED
         AIF   ('&TJIDLOC'(1,1) EQ '(').REGLOC    LOC IN REG  FORM
&NAME    IC    15,&TJIDLOC              INSERT 1ST BYTE OF TJID
         SLL   15,8                     MOVE IT TO NEXT BYTE
         IC    15,&TJIDLOC+1            INSERT 2ND BYTE OF TJID
         SLL   15,16                    MOVE TJID TO HI-ORDER 2 BYTES
         AGO   .CHKSIZE                 GOTO CHECK SIZE
.REGLOC  ANOP
&NAME    IC    15,0(,&TJIDLOC(1))       INSERT 1ST BYTE OF TJID
         SLL   15,8                     MOVE IT TO NEXT BYTE
         IC    15,1(,&TJIDLOC(1))       INSERT 2ND BYTE OF TJID
         SLL   15,16                    MOVE TJID TO HI-ORDER 2 BYTES
         AGO   .CHKSIZE                 GOTO CHECK SIZE
.*
.*   WHEN TJIDLOC IS NOT SPECIFIED
.*
.NOLOC   AIF   ('&TJID' NE '').TJIDYES
&NAME    DS    0H                       TJID IS '0'
         AGO   .CHKSIZE                 GOTO CHECK SIZE
.TJIDYES AIF   ('&TJID'(1,1) EQ '(').IDREG   TJID IN REG FORM
&NAME    LA    15,&TJID                 LOAD TJID
         AGO   .SHIFT                   GOTO SHIFT REG.0
.IDREG   ANOP
&NAME    LR    15,&TJID(1)              LOAD TJID IN REG 0
.SHIFT   SLL   15,16                    SHIFT TJID TO HI-ORDER BYTE
.*
.*   CHECK SIZE OF BUFFER (BY NOW TJID IS IN HI-ORDER 2 BYTES OF REG 0)
.*
.CHKSIZE AIF   ('&SIZE'(1,1) EQ '(').SZREG   SKIP IF SIZE IN REG
         LA    0,&SIZE                  LOAD SIZE IN REG.0
         AGO   .ORSIZE                  GOTO OR SIZE
.SZREG   AIF   ('&SIZE' EQ '(0)').ORSIZE  GOTO SET SIZE IN REG. 0
         LR    0,&SIZE(1)               LOAD BUFFER SIZE
.ORSIZE  AIF   ('&TJID' EQ '' AND '&TJIDLOC' EQ '').PAST
         OR    0,15                     LOAD TJID + BUFFER SIZE
.PAST    AIF   (&OPT EQ 0 AND '&BFF'(1,1) EQ '(').ORONE
         AIF   (&OPT EQ 0 AND '&BFF'(1,1) NE '(').ZOPT ZERO OPTN
         CNOP  0,4
         B     *+8
         DC    AL1(&OPT)                OPTION BITS
         AIF   ('&BFF'(1,1) EQ '(').REGGO   BFFR IN REG.
         DC    AL3(&BFF)                BUFFER ADDR
         L     1,*-4                    LOAD PARAMETER IN REG.1
         AGO   .SVC                     GOTO ISSUE SVC
.ZOPT    LA    1,&BFF                   LOAD BUFFER ADDR IN REG 1
         AGO   .SVC                     ISSUE SVC
.REGGO   DC    AL3(0)                   BUFFER ADDR
         AIF   ('&BFF' EQ '(1)').ORONE  GOTO OR OPTIONS
         L     1,*-4                    LOAD OPTIONS
         OR    1,&BFF(1)                SET OPTIONS AND BUFFER ADDR
         AGO   .SVC                     GOTO ISSUE SVC
.ORONE   LA    1,0(,&BFF(1))            CLR HIGH ORDR BYTE + LD BFR ADR
         AIF   (&OPT EQ 0).SVC          GOTO ISSUE SVC IF OPT EQ 0
         O     1,*-8                    SET OPTIONS
         AGO   .SVC
.EDI     ANOP
         AIF   (&E).ERROR2              DUP OPTION
&E       SETB  1                        EDIT OPTION SPECFIED
         AGO   .RET
.ASI     ANOP
         AIF   (&E).ERROR2              DUP OPTION
&E       SETB  1                        EDIT OPTION SPECFIED
&OPT     SETA  &OPT+1                   SET EDIT=ASIS
         AGO   .RET
.CON     ANOP
         AIF   (&E).ERROR2              DUP OPTION
&E       SETB  1                        EDIT OPTION SPECFIED
&OPT     SETA  &OPT+2                   SET EDIT=CONTROL
         AGO   .RET
.FULLS   ANOP                                                   SA60002
         AIF   (&E).ERROR2              DUP OPTION              SA60002
&E       SETB  1                        EDIT OPTION SPECIFIED   SA60002
&OPT     SETA  &OPT+3                   CNTL+ASIS FOR FULLSCR   SA60002
         AGO   .RET                                             SA60002
.WAI     ANOP
         AIF   (&W).ERROR2              DUP OPTION
&W       SETB  1                        WAIT OPTION SPECIFIED
         AGO   .RET
.NOW     ANOP
         AIF   (&W).ERROR2              DUP OPTION
&W       SETB  1                        WAIT OPTION SPECIFIED
&OPT     SETA  &OPT+X'10'               SET WAIT=NOWAIT
         AGO   .RET
.HOL     ANOP
         AIF   (&H).ERROR2              DUP OPTION
&H       SETB  1                        HOLD OPTION SPECIFIED
&OPT     SETA  &OPT+X'08'               SET HOLD=HOLD
         AGO   .RET
.NOH     ANOP
         AIF   (&H).ERROR2              DUP OPTION
&H       SETB  1                        HOLD OPTION SPECIFIED
         AGO   .RET
.BRE     ANOP
         AIF   (&B).ERROR2              DUP OPTION
&B       SETB  1                        BREAK OPTION SPECIFIED
&OPT     SETA  &OPT+X'04'               SET BREAKIN
         AGO   .RET
.NOB     ANOP
         AIF   (&B).ERROR2              DUP OPTION
&B       SETB  1                        BREAK OPTION SPECIFIED
         AGO   .RET
.HPR     ANOP
         AIF   (&P).ERROR2              DUP OPTION
&P       SETB  1                        PRIORITY OPTION SPECIFIED
         AGO   .RET
.LPR     ANOP
         AIF   (&P).ERROR2              DUP OPTION
&P       SETB  1                        PRIORITY OPTION SPECIFIED
&OPT     SETA  &OPT+X'20'               SET  LOW PRIORITY OPTION
.RET     ANOP
&PARM    SETC  '&WAIT'
         AIF   ('&RET' EQ '1').CKPARM   CHECK WAIT
&PARM    SETC  '&HOLD'
         AIF   ('&RET' EQ '2').CKPARM   CHECK HOLD
&PARM    SETC  '&BRKI'
         AIF   ('&RET' EQ '3').CKPARM   CHECK BRKI
&PARM    SETC  '&PRTY'
         AIF   ('&RET' EQ '4').CKPARM   CHECK PRTY
         AGO   .CHKREG                  DONE WITH OPTIONS
.RF      ANOP
         AIF   ('&WAIT' NE '' OR '&HOLD' NE '' OR '&BRKI' NE '' OR '&PRX
               TY' NE '' OR '&TJID' NE '' OR '&TJIDLOC' NE '').RERR
         AIF   ('&BFF'(1,1) NE '(' OR '&SIZE'(1,1) NE '(').RERR
&NAME    DS    0H
         AIF   ('&BFF' EQ '(1)').SIZE
         LR    1,&BFF(1)                LOAD OPTIONS & BUFFER ADDR
.SIZE    AIF   ('&SIZE' EQ '(0)').SVC
         LR    0,&SIZE(1)               LOAD TJID & BUFFER SIZE
         AGO   .SVC
.RERR    IHBERMAC 192
         MEXIT
.ERROR1  IHBERMAC 24
         MEXIT
.ERROR2  IHBERMAC 54,,,
         MEXIT
.ERROR3  IHBERMAC 49,,&PARM
         MEND
