)F
CHAT - Simple Chat Client
-------------------------

Client connecting to a listening network-cat tool like ncat, netcat,
or socat, running elsewhere, to perform a simple point to point
chat. CHAT is provided as a sockets programming example program with
no practical use case in mind.


Usage
-----

o Make a network-cat tool listen at an arbitrary IP address and port,
  which is reachable using the IP connectivity of your Hercules host.
  This can also be the Hercules host itself. For example, if the
  Hercules host has netcat installed you could enter in a shell (Linux)
  or in a command prompt window (Windows):

  netcat -l 127.0.0.1 4466

o Enter CHAT at the TSO READY prompt. The CHAT program prompts for a
  target address to connect to. Enter the address of the listening
  network-cat in <dotted decimal><:port> or <hostname><:port> notation.
  If the port is omitted, port nummer 4466 is assumed; pressing simply
  ENTER uses 127.0.0.1:4466. So, for the example above, just pressing
  ENTER suffices.

o If the connection succeeds, the following messages will be displayed:

  - In the TSO CHAT session:
    Connected. Enter text to be transmitted, /* to terminate.

  - In the network-cat session:
    Connected. Enter text to be transmitted, EOT (Ctrl-V Ctrl-D Enter)
    to terminate.

o Conduct the chat by arbitrarily entering data in the CHAT session to
  be displayed it the network-cat session or in the network-cat session
  to be displayed in the CHAT session.

o To terminate either enter /* in the CHAT session or send EOT from the
  network-cat system.


Build information
------------------

The source of the CHAT program can be found in JCC.TCPIP.SRC(CHAT).
SYS2.CNTL(CHAT$) is a sample job to compile and link edit the program.
CHAT$ will create the CHAT load module in SYS2.CMDLIB.
)X
)O
