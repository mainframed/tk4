)F FUNCTION -
 Basic TCP/IP Support for TK4-
 =============================

 Around 2002 Jason Winter developed a Hercules extension allowing the
 guest OS to access the IP stack of the host OS by means of a special
 S/370 instruction that doesn't exist on real S/370 hardware. The
 operation is in RX format, its operation code is X'75':

 75rxbddd - TCPIP R1,D2(X2,B2) R1=GPR 0-15, B2=GPR 5-13, X2=GPR 0,5-13

 As opposed to "classic" instructions the TCPIP (X'75') instruction
 preserves a state between calls, an essential requirement to transfer
 IP traffic back and forth between the host and the guest. Due to this
 fact setting up to execute the instruction is complex, which is why
 native execution generally isn't recommended.

 Instead, there exists a socket interface in Jason's JCC-Library which
 provides the well known C functions needed for TCP/IP communications.
 See the JCC-Library help in the JCC distribution (TK4-.JASON.JCC.ZIP)
 for a description of the the functions available. It is strongly
 recommended to use the TCPIP instruction through this interface only.

 On TK4- the TCPIP instruction is available and ready to use. However,
 there are, for security reasons, no TCP/IP services activated in the
 automatic startup.


 Services and Programs
 =====================

 The services and programs documented here are installed and ready to
 use on TK4-. However, there are a few not externalized parameters
 users might want to change. For that reason the source is provided
 in JCC.TCPIP.SRC and JCC.TCPIP.INCLUDE for easy review and update.
 A changed program should be compiled and linked using JCCCL (see
 SYS2.JCLLIB for a JCCCL example). If the modification is intended
 for system wide use, the resulting module should be linked into
 SYS2.LINKLIB, replacing the original one.

 FTP Daemon
 ----------

 The FTPD program is designed to run as a started task. A procedure to
 start it from the MVS console is provided in SYS2.PROCLIB. Enter

 S FTPD

 on the MVS console to start the FTP daemon with default parameters.

 The following parameters are externalized to be modifiable on the
 start command:

 PASVADR IP address to return for passive mode, comma separated. The
         default is '127,0,0,1'. This address is used only if
         getsockname doesn't return a suitable value.
 SRVIP   IP address to listen at. The default is 'any'.
 SRVPORT Port to listen at. The default is '21'.

 So, for example, to start the FTP daemon to listen at port 2121 of
 interface 192.168.146.138 enter:

 S FTPD,SRVIP='192.168.146.138',SRVPORT='2121'

 Once started, the FTP daemon creates a "root directory" as a list of
 all datasets found on all volumes of the running system. This list is
 rebuilt every time an FTP client requests a root directory listing or
 when the daemon encounters an unknown dataset name in a get or put
 request. On slow systems, rebuilding the list can last quite a while.

 It should be noted that the FTP daemon is unresponsive during the
 rebuild operation and that it starts listening for incoming
 connections only after completion of the initial build of the list.
 The PORTS command (described below) can be used to find out if the
 FTP daemon is already listening for incoming connections. Another
 common observation in that context is that "get" or "put" commands
 on the client seem to hang... just be patient, transfer will start
 as soon as the rebuild operation has completed.

 A general recommendation for using the FTP daemon is to avoid root
 listings by using partitioned datasets: A partitioned dataset is
 presented as a subdirectory of the root directory which can be made
 active using the "cd" client command. Issuing "ls" from the client
 will then present the member list of the PDS, which doesn't cause a
 root directory refresh.

 If the delay caused by the root directory refreshes is intolerable,
 a simple change in the FTPD source will disable them: Search for
 "Comment-out for faster directory refreshes" and comment out the
 respective refresh (); call. The root directory will then get rebuilt
 on request only, using either FTPCMD or the REFR FTPD command.

 Note: Hercules must run as root or Administrator when FTPD is started
       to listen at a port below 1024. This is strongly discouraged as
       it basically enables any user program on MVS to listen at any
       low port of the host system. For that reason it is recommended
       to use a port number above 1024 when starting FTPD and in turn
       _not_ to run Hercules as root or Administrator.

 Caution: The FTP daemon doesn't require authentication on incoming
          connections. When running as a started task it has (per RAKF
          default) full access to all datasets on the system. So, an
          incoming fraudulent connection can easily hijack or destroy
          the system. For that reason it is strongly recommended to
          make the FTPD port inaccessible from the internet. In
          security sensitive environments (for example on multiuser
          systems) it may in addition be wise to run FTPD as a job
          instead of a started task and to assign it a user with
          restricted dataset access permissions.

 Note: TK4- Update 08 adds RAC based authentication and authorization
       to the FTP Daemon. However, to use this feature, configuration
       decisions need to be made and certain operational requirements
       must be observed. While greatly enhancing FTPD security on
       multi user systems or systems being directly exposed to the
       internet, the typical single user TK4- system will not gain much
       from using this feature. Thus TK4- comes with this feature
       initially disabled: Out of the box FTPD still behaves exactly as
       described above. See HELP member FTPD-RAC for information on how
       to activate RAC based authentication and authorization.


 Stopping the FTP Daemon
 -----------------------

 There exist various ways to stop the FTP daemon:

 - Enter P FTPD from the MVS console. This works only if FTPD was
   started as a task. If it was started as a job, it will ignore the
   P command.

 - Issue FTPCMD STOP from TSO READY as described below. This works
   only if FTPD or a tunnel pointing to it is listening at port 21.

 - Open a telnet connection to the IP address and port the FTP daemon
   is listening at, then enter term or terminate.

 - If nothing works, issue RESET from TSO READY. Note that this is
   meant as a last resort only. It will not only stop FTPD but also
   terminate all other programs using the host's IP stack.


 SMTP E-Mail Client
 ------------------

 The EMAIL program is a very simple e-mail client. It uses unencryted,
 unauthenticated SMTP to send an e-mail. In today's environments this
 program might be considered obsolete as no "real" mail servers still
 accept unencrypted, unauthenticated mail. Nonetheless it has been
 included for demonstration purposes. See member EMAIL in SYS2.JCLLIB
 for a sample job to send an e-mail using the EMAIL program.


 Simple Chat Client
 ------------------

 Client connecting to a listening network-cat tool like ncat, netcat,
 or socat, to perform a simple point to point chat. This program is
 provided as a more usable sockets programming example than the EMAIL
 program. It is based on the original EMAIL program and was created by
 replacing the hardcoded SMTP "dialog" with an interactive dialog
 between a TSO terminal session and a network-cat tool running
 elsewhere. See HELP member CHAT for more details.


 Administrative Programs
 -----------------------

 The following programs can be called in foreground from TSO READY.
 Issue ALLOC FI(STDOUT) DA(*) once before calling the programs to
 ensure output gets directed to your terminal.

 FTPCMD controls the FTP daemon. Currently it supports two functions:
        - Calling FTPCMD without an argument causes FTPD to refresh
          its root directory (which is a list of all datasets in the
          system).
        - Calling FTPCMD with an arbitrary argument causes the FTP
          daemon to stop gracefully (for example, enter FTPCMD STOP
          to cleanly shutdown FTPD).

 PORTS  is a quick method of telling which sockets are connected to
        where.

 RESET  causes a quick reset of *all* the allocated sockets, a last
        resort in case of an emergency. Note that this causes all
        active connections to be terminated.


 Software Packages
 -----------------

 "Official" archives do not exist for Jason Winter's software.
 While the MVS programs (FTPD, FTPDCMD, RESET, PORTS and EMAIL) are
 packaged with the last known JCC distribution (1.50.00), the TCPIP
 instruction can be found in various variants across the internet.
 There seems to be a certain plausibility that archive dyn75l.zip as
 found in the files section of the hercules-390 Yahoo group was
 originally created by Jason and is still unmodified. For this reason
 it was chosen as a base for the TK4- implementation. It can be found
 at TK4-.JASON.DYN75L.ZIP now. The changes applied to integrate it
 into TK4- can be found in archive TK4-.JUERGEN.IP4TK4-.ZIP.


)X SYNTAX - none
)O OPERANDS - none
