RPFDEF   TITLE 'CHANGE SESSION DEFAULTS MODULE'
*---------------------------------------------------------------------*
*                                                                     *
*        MODULE:        RPFDEF.                                       *
*                                                                     *
*        FUNCTION:      CHANGE SESSION DEFAULTS, ALLOCATIONS AND      *
*                       PFK SETTINGS.                                 *
*                       YOU CAN CHANGE:                               *
*                       01. SIZE OF EDIT WORKSPACE                    *
*                       02. LOGGING YES OR NO.                        *
*                       03. NULLS   YES OR NO.                        *
*                       04. AUTOSAVE Y or N                        @rp1
*                       05. SUBMIT=TSO or SUBMIT=RPF               @rp2
*                       06. Replace like members or not in 3.3     @rp3
*                       07. Default prefix in dataset list (3.4)   @rp4
*                       08. Default assembler program              @rp5
*                       09. DEFAULT SYSOUT CLASS FOR "PRINT"          *
*                       10. DEFAULT APPEND=YES OR NO.                 *
*                       11. DEFAULT UPPERCASE YES OR NO.              *
*                       12. DEFAULT LINENUMBERS YES OR NO.            *
*                       13. DEFAULT ALLOCATION DSNAME                 *
*                       14. DEFAULT ALLOCATION VOLUME                 *
*                       15. DEFAULT ALLOCATION MEMBER.                *
*                       16. DEFAULT LIBRARIAN MODULE.                 *
*                       17. DEFAULT LIBRARIAN MASTER FILE.            *
*                       18. DEFAULT LIBRARIAN MASTER FILE VOLUME.     *
*                       19. DEFAULT PANVALET LIBRARY                  *
*                       20. DEFAULT PANVALET LIBRARY VOLUME           *
*                       21. DEFAULT PANVALET LIBRARY MODULE           *
*                       22. DEFAULT PFK SETTINGS                      *
*                       23. Default assembler maclibs (6)             *
*                       24. Default assembler parm                    *
*                       25. Default binder parm                       *
*                       26. Default binder control statements (6)     *
*                                                                     *
*                       ALL THE MODIFICATIONS WILL BE WRITTEN TO THE  *
*                       RPF/XA VSAM DATABASE                          *
*                       THE NAME IS SPECIFIED IN SYS1.PARMLIB MEMBER  *
*                       RPFKEY00                                      *
*                                                                     *
*                       THE DEFINITION OF THE DATABASE IS:            *
*                       "DEF CL(NAME('DSNAME') VOL('VOLUME') CYL(1 1)-*
*                       INDEXED KEYS(8 0) RECORDSIZE(1750 1750) -     *
*                       IMBED) DATA(NAME('DATA COMPONENT NAME')) -    *
*                       INDEX(NAME('INDEX COMPONENT NAME')) -         *
*                       CAT('CATNAME'/'PASSWORD')                     *
*                                                                     *
*        RETURNCODES: (SET IN RTNCODE FIELD OF COMMAREA)              *
*                                                                     *
*                       00 EXECUTION ALLRIGHT                         *
*                       04 ALLOCATION ERROR DATABASE                  *
*                       08 OPEN ERROR DATABASE                        *
*                       12 NO RECORD FOUND ON DATABASE                *
*                       16 Write error on database                    *
*                       20 No database used. (caused by error in      *
*                                             RPFINIT.)               *
*                                                                     *
* modification by RP at July 05,2002: Recover from getmain error      *
*        Oct 20,2002 Rpr: AUTOSAVE parameter added                 @rp1
*        Dec 15,2003 Rpr: SUBMIT=TSO/RPF added                     @rp2
*        Jan 24,2004 Rpr: Option Replace added                     @rp3
*        Mar 19,2006 Rpr: Default prefix added                     @rp4
*        Mar 20,2006 Rpr: Default assembler program added          @rp5
*                                                                     *
*------------------------------------------ (C)-2006 SKYBIRD SYSTEMS -*
         SPACE 2
RPFDEF   CSECT
         SAVE  (14,12),,*
         USING RPFDEF,15
         LA    R11,SAVE
         ST    R13,SAVE+4
         ST    R11,8(0,R13)
         LR    R13,R11
         B     START
         DS    0F
SAVE     DC    18F'-1'             SAVE AREA
         DC    CL8'&SYSDATE',C' ',CL8'&SYSTIME'
START    DS    0H
         DROP  15
         LA    R12,2048(R13)       2ND BASE REGISTER
         LA    R12,2048(R12)
         LA    R10,2048(R12)       3RD BASE REGISTER
         LA    R10,2048(R10)
         USING SAVE,R13,R12,R10
         L     R11,0(R1)
         USING COMMAREA,R11
         MVC   GETMSAVE,GETMLEN
         XC    RTNCODE,RTNCODE
         CLI   COMMDSN,C' '        NO DATABASE ALLOCATED
         BNE   DBALC               NO: ALLOCATE
         MVC   RTNCODE,F0020       MOVE RETURNCODE (NO LOGGING)
         B     ERROR1
DBALC    EQU   *
         SYALLOC DSN=COMMDSN,DISP1=SHR,DDN=DATABASE,MF=E DATABASE
         LTR   R15,R15             ALLOCATION OK ?
         BZ    ALLOCOK             YES: PROCEED
         MVC   RTNCODE,F0004       MOVE RETURNCODE (ALLOC NOT OK)
         B     ERROR1              SKIP READ DATABASE
ALLOCOK  MVC   DBUID(8),USERID     MOVE ARGUMENT
         MVI   DBUID+7,C' '        BLANK LAST POSITION
         OPEN  VSAMACB             OPEN THE ACB
         LTR   R15,R15             Alright ?
         BZ    OPENOK              YES: PROCEED
         MVC   RTNCODE,F0008       SET RTNCODE (OPEN ERR DB)
         CLOSE VSAMACB             CLEANUP OUTSTANDING DEBS
         SYALLOC FREE=DATABASE,MF=E FREE THE DATABASE
         B     ERROR1              GO TO ERROR ROUTINE
OPENOK   GET   RPL=VSAMRPL         READ THE DATABASE RECORD
         LTR   R15,R15             ALLRIGTH ?
         BZ    READOK              YES: PROCEED
         MVC   RTNCODE,F0012       RETURN CODE (RECORD NOT FOUND)
         CLOSE VSAMACB             CLOSE THE ACB
         SYALLOC FREE=DATABASE,MF=E FREE THE DATABASE
         B     ERROR1              GO TO ERROR ROUTINE
ERROR1   EQU   *
READOK   EQU   *
         MVC   SCR1UID,USERID
         MVI   SWITCH,X'80'        INIT NO-GO SWITCH
         TITLE 'PROCESS THE COMMANDS'
PUT1     EQU   *
         TM    INFCODE2,$RETURN        IS RETURN INDICATOR ON ?
         BO    MAIN                    YES: RETURN TO MAIN
         TM    INFCODE2,$OPTION        OPTION ALREADY SEL. IN MAIN ?
         BNO   PUT1O                   NO BRANCH
         MVC   BUFFER(1),DEFOPT        MOVE OPTION
         OI    INFCODE2,$RETURN        SET RETURN INDICATOR ON
         B     FUNC0                   SCAN THE OPTION DIRECTLY
PUT1O    DS    0H
         TPUT  SCR1TXT,SCR1LEN,FULLSCR
         MVI   MSG1,C'-'
         MVC   MSG1+1(21),MSG1
GET1     BAL   R14,CONV                READ SCREEN
         B     GET1A(R15)              INITIATE BRANCHLIST
GET1A    B     GET1B                   CONTINUE PROCESSING
         B     MAIN                    PF03/PF15 PRESSED
         B     PUT1                    OTHER KEY PRESSED
GET1B    LTR   R1,R1                   NOTHING RECEIVED ?
         BZ    PUT1                    YES: BRANCH
         OC    BUFFER(200),BLANKS      XLATE TO UPPERCASE
         OC    BUFFER+200(105),BLANKS
         CLI   BUFFER,C'?'
         BE    PUT1
FUNC0    CLI   BUFFER,C'0'         STATUS
         BNE   FUNC1
         LINK  EP=RPFSTAT,PARAM=((11)),VL=1
         B     PUT1
FUNC1    CLI   BUFFER,C'1'         ALTER WORKSPACE
         BNE   FUNC2
         BAL   R14,SESDEF
         B     PUT1
FUNC2    CLI   BUFFER,C'2'         ALTER DEFAULT ALLOCATIONS
         BNE   FUNC3
         BAL   R14,ALLOC
         B     PUT1
FUNC3    CLI   BUFFER,C'3'         ALTER DEFAULT PFK SETTINGS
         BNE   FUNC4
         LINK  EP=RPFPFK,PARAM=((11)),VL=1
         MVC   DBPFK01(156),DEFPFK01   MOVE PFKS INTO DB RECORD
         MVC   DBPFK07(156),DEFPFK07   MOVE PFKS INTO DB RECORD
         MVC   DBPFK13(156),DEFPFK13   MOVE PFKS INTO DB RECORD
         MVC   DBPFK19(156),DEFPFK19   MOVE PFKS INTO DB RECORD
*
         B     PUT1
FUNC4    CLI   BUFFER,C'4'
         BNE   FUNC5                   No: branch
         BAL   R14,ASMDEF              link to assembler defaults
         B     PUT1
FUNC5    CLI   BUFFER,C'5'         RESERVED
         BE    ERR3
FUNC6    CLI   BUFFER,C'6'         RESERVED
         BE    ERR3
FUNC7    CLI   BUFFER,C'7'         RESERVED
         BE    ERR3
FUNC8    CLI   BUFFER,C'8'         RESERVED
         BE    ERR3
FUNC9    CLI   BUFFER,C'9'         RESERVED
         BE    ERR3
FUNCX    CLI   BUFFER,C'X'
         BE    MAIN
ERR1     MVC   MSG2(L'ERR1TXT),ERR1TXT
         TM    INFCODE2,$OPTION        OPTION WAS SELECTED IN MAIN
         BO    ERR1A                   NO READ THE SCREEN
         TPUT  SCR2TXT,SCR2LEN,FULLSCR
         B     GET1                    BRANCH
ERR1A    DS    0H
         MVC   MSG1(L'ERR1TXT),ERR1TXT MOVE ERROR MESSAGE
         NI    INFCODE2,255-$OPTION-$RETURN
         B     PUT1
ERR3     MVC   MSG2(L'ERR3TXT),ERR3TXT
         TM    INFCODE2,$OPTION        OPTION WAS SELECTED IN MAIN
         BO    ERR3A                   NO READ THE SCREEN
         TPUT  SCR2TXT,SCR2LEN,FULLSCR
         B     GET1                    BRANCH
ERR3A    DS    0H
         MVC   MSG1(L'ERR3TXT),ERR3TXT MOVE ERROR MESSAGE
         NI    INFCODE2,255-$OPTION-$RETURN
         B     PUT1
ERR4     XC    GETMSAVE,GETMSAVE       DESTROY GETMSAVE
         OI    SW,NOTFREE
         NI    INFCODE2,255-$OPTION-$RETURN
         MVC   MSG1(L'ERR4TXT),ERR4TXT
         B     PUT1
ERR7     MVC   MSG1(L'ERR7TXT),ERR7TXT
         TPUT  SCR1TXT,SCR1LEN,FULLSCR
         NI    INFCODE2,255-$OPTION-$RETURN
         TGET  BUFFER,L'BUFFER
         MVC   COMMAREA(28),FFFFFFFF
         B     RETURN
         TITLE 'PROCESS THE GETMAIN AND WRITE ON DATABASE'
MAIN     TM    SWITCH,X'80'        NO-GO SWITCH SET ?
         BO    RETURN              YES: EXIT
         L     R1,GETMSTRT         NO: CHANGE WORKSPACE SIZE
         TM    SW,NOTFREE
         BO    GETMAIN
         L     R2,GETMSAVE
         TM    INFCODE2,$NOGO          No workspace available?
         BNO   FREEMAIN                No: no problem, Freemain
         NI    INFCODE2,255-$NOGO      Reset nogo switch
         B     GETMAIN                 Try to getmain:
FREEMAIN DS    0H
         FREEMAIN RC,LV=(2),A=(1)
         LTR   R15,R15
         BNZ   ERR7
GETMAIN  L     R2,GETMLEN
         GETMAIN RC,LV=(2)             Getmain new workspace size
         LTR   R15,R15
         BNZ   ERR4
         C     R1,F0000
         BE    ERR4                    Error: do not leave RPFDEF
         NI    SW,X'FF'-NOTFREE        Reset freemain switch
         ST    R1,GETMSTRT             Initialize
         L     R2,GETMLEN                      workspace
         AR    R2,R1
         S     R2,RLENGTH
         ST    R2,GETMEND
         ST    R2,SAVEP3
         XC    FIRSTREC,FIRSTREC
         XC    LASTREC,LASTREC
         XC    FIRSTSCR,FIRSTSCR
         XC    LASTSCR,LASTSCR
RETURN   CLC   RTNCODE,F0000       NO ERROR IN DATABASE ?
         BNE   NODBASE             NO: DONT WRITE BACK
         PUT   RPL=VSAMRPL         WRITE THE DATABASE RECORD
         LTR   R15,R15             WRITE OK ?
         BZ    CLOSEDB             YES: PROCEED
         MVC   RTNCODE,F0016       MOVE RC16 (WRITE ERROR)
CLOSEDB  CLOSE VSAMACB             CLOSE THE ACB
         SYALLOC FREE=DATABASE,MF=E FREE THE DATABASE
NODBASE  EQU   *
         L     R13,SAVE+4
         LM    R14,R12,12(R13)
         XR    R15,R15
         BR    R14
         TITLE 'CHANGE SESSION DEFAULTS'
*---------------------------------------------------------------------*
*                                                                     *
*        S E S D E F - SET SESSION DEFAULTS                           *
*                                                                     *
*                      INPUT:  SCR4TXT                                *
*                      OUTPUT: SCR4TXT                                *
*                              COMMAREA                               *
*                                                                     *
*------------------------------------------ (C)-1996 SKYBIRD SYSTEMS -*
SESDEF   ST    R14,SAVE14
         OI    SWITCH,X'80'        SET NO-GO SWITCH
         MVC   MSG4,MSG2TXT        WARNING INTO SCREEN
SESDEF00 DS    0H
         L     R5,GETMLEN
         XR    R4,R4               CLEAR REG.4
         D     R4,RLENGTH          # CHARS / NEXTENT VALUE
         CVD   R5,DWB              CONVERT QUOTIENT TO PACKED
         UNPK  SCR4WSS(7),DWB      CONVERT TO DISPLAY
         OI    SCR4WSS+6,X'F0'     CLEAR SIGN
         MVC   SCR4OUT(1),DEFOUT
         MVC   SCR4PRT(8),DEFPRT
         MVC   SCR4LOG(3),DEFLOG
         MVC   SCR4NUL(3),DEFNULL
         MVC   SCR4AUTO(1),DEFAUTO                                 @rp1
         MVC   SCR4SUB,COMMSUB                                     @rp2
         MVC   SCR4REP,COMMREPL                                    @rp3
         MVC   SCR4PFX,COMMPFX                                     @rp4
         MVC   SCR4ASM,COMMASM                                     @rp5
         CLI   SCR4ASM,X'40'           Nothing filled in ?         @rp5
         BE    SESASM                  Yes: branch                 @rp5
         CLI   SCR4ASM,X'00'           Nothing filled in ?         @rp5
         BNE   SESASM9                 No: leave it                @rp5
SESASM   DS    0H                                                  @rp5
         MVC   SCR4ASM,=CL8'IFOX00'    Default assembler program   @rp5
SESASM9  DS    0H                                                  @rp5
         TPUT  SCR5TXT,SCR5LEN,FULLSCR
         TPUT  SCR4TXT,SCR4LEN,FULLSCR
         MVI   MSG4,C'-'           CLEAR MSG
         MVC   MSG4+1(21),MSG4
         BAL   R14,CONV            READ THE SCREEN
         B     SESDEF01(R15)       INITIATE BRANCHLIST
SESDEF01 B     SESDEF02            CONTINUE PROCESSING
         B     SESDEF99            CANCEL CHANGES
         B     SESDEF00            REDISPLAY SCREEN
SESDEF02 LA    R5,BUFFER           POINT TO BEGINNING OF BUFFER
         LR    R6,R1               LOAD MAX LENGTH OF BUFFER
         OC    BUFFER(200),BLANKS      XLATE TO UPPERCASE
         OC    BUFFER+200(120),BLANKS
SESDEF03 CLC   0(10,R5),=C'WS-SIZE  =' SEARCH FOR WS-SIZE
         BE    SESDEF05            FOUND: PROCESS LOGGING
         LA    R5,1(R5)            NEXT BYTE
         BCT   R6,SESDEF03         EXAMINE NEXT BYTES
         B     SESDEF00            CLEAR KEY PRESSED.
SESDEF05 LA    R5,10(R5)           POINT AFTER 'WS-SIZE  ='
         MVC   NUMFLD(8),BLANKS    TRAILING BLANKS
         LA    R4,NUMFLD           POINT TO WORK FIELD
SESDEF06 CLC   0(10,R5),=C'OUT CLASS='
         BE    SESDEF07            FOUND: PROCESS LINE NUMBERS
         MVC   0(1,R4),0(R5)       MOVE 1 CHAR. WS-SIZE INTO COMMAREA
         LA    R5,1(R5)            NEXT CHAR.
         LA    R4,1(R4)            NEXT CHAR.
         BCT   R6,SESDEF06         EXAMINE NEXT BYTES
         B     SESDEF00            CLEAR KEY PRESSED
SESDEF07 ST    R5,SAVE5
         BAL   R14,SHIFT           REP TRAILING SPACE WITH LEADING ZERO
         BAL   R14,NUMTST          NUMERIC TEST
         LTR   R15,R15             NUMERIC ?
         BZ    SESDEF08            YES: CONVERT
         MVC   MSG4,ERR8TXT        MESSAGE INTO SCREEN
         B     SESDEF18            GIVE ERROR MESSAGE
SESDEF08 CLC   NUMFLD,=C'00000050' LESS THAN 50 ?
         BL    SESDEF09            YES: INVALID
         CLC   NUMFLD,=C'00060000' MORE THAN 59999 LINES ?      @59999
         BL    SESDEF10            LOW: OK
SESDEF09 MVC   MSG4,ERR8TXT        MESSAGE INTO SCREEN
         B     SESDEF21            GIVE ERROR MESSAGE
SESDEF10 PACK  DWB,NUMFLD          CONVERT FROM DISPLAY TO PACKED
         XR    R4,R4
         CVB   R5,DWB              CONVERT FROM PACKED TO BINARY
         M     R4,RLENGTH          # LINES X RLENGTH
         C     R5,GETMSAVE         GETMLEN CHANGED ?
         BE    SESDEF11            NO: KEEP NO-GO SWITCH
         ST    R5,GETMLEN          # CHARS INTO COMMAREA
         NI    SWITCH,X'FF'-X'80'  TURN OFF NO-GO SWITCH
SESDEF11 L     R5,SAVE5
         LA    R5,10(R5)           POINT AFTER 'OUT CLASS= '
         LA    R4,DEFTEMP          POINT TO DEFTEMP
SESDEF12 CLC   0(10,R5),=C'PRINTER  =' SEARCH FOR PRINTER
         BE    SESDEF13            FOUND: PROCESS LINE NUMBERS
         MVC   0(1,R4),0(R5)       MOVE 1 CHAR. OUTCLASS INTO DEFOUT
         LA    R5,1(R5)            NEXT CHAR.
         LA    R4,1(R4)            NEXT CHAR.
         BCT   R6,SESDEF12         EXAMINE NEXT BYTES
         B     SESDEF00            CLEAR KEY PRESSED
SESDEF13 LA    R7,CHARSTXT         FIRST OPERAND                 (BXLE)
         LA    R8,1                INDEX                         (BXLE)
         LA    R9,35(R7)           COMPARANT                     (BXLE)
SESDEFBX CLC   0(1,R7),DEFTEMP     SYSOUT CLASS VALID ?
         BE    SESDEF14            YES: MOVE LOGGING
         BXLE  R7,R8,SESDEFBX      NO: TRY NEXT CHAR
         MVC   MSG4,ERR9TXT        ERROR INTO SCREEN
         B     SESDEF18            DISPLAY SCREEN
SESDEF14 LA    R5,10(R5)           POINT AFTER PRINTER=
         LA    R4,DEFPRT           POINT TO DEFAULT PRINTER
         MVC   DEFPRT,BLANKS       BLANK TARGET
SESDEF15 CLC   0(10,R5),=C'LOGGING  =' SEARCH FOR LOGGING
         BE    SESDEF16            FOUND: PROCESS LINE NUMBERS
         MVC   0(1,R4),0(R5)       MOVE 1 CHAR. PRINTER INTO DEFPRT
         LA    R5,1(R5)            NEXT CHAR.
         LA    R4,1(R4)            NEXT CHAR.
         BCT   R6,SESDEF15         EXAMINE NEXT BYTES
         B     SESDEF00            CLEAR KEY PRESSED
SESDEF16 LA    R5,10(R5)           POINT AFTER LOGGING=
         LA    R4,DEFLOG           POINT TO DEFLOG
SESDEF17 CLC   0(10,R5),=C'NULLS    =' SEARCH FOR NULLS
         BE    SESDEF18            FOUND: PROCESS LINE NUMBERS
         MVC   0(1,R4),0(R5)       MOVE 1 CHAR. LOGIING INTO DEFLOG
         LA    R5,1(R5)            NEXT CHAR.
         LA    R4,1(R4)            NEXT CHAR.
         BCT   R6,SESDEF17         EXAMINE NEXT BYTES
         B     SESDEF00            CLEAR KEY PRESSED
SESDEF18 LA    R5,10(R5)           POINT AFTER LOGGING=
         LA    R4,DEFNULL          POINT TO DEFNULL
SESDEF19 CLC   0(10,R5),=C'AUTOSAVE =' SEARCH FOR Autosave         @rp1
         BE    SESDEF20            FOUND: PROCESS LINE NUMBERS     @rp1
         MVC   0(1,R4),0(R5)       MOVE 1 CHAR. nulls into defnull @rp1
         LA    R5,1(R5)            NEXT CHAR.                      @rp1
         LA    R4,1(R4)            NEXT CHAR.                      @rp1
         BCT   R6,SESDEF19         EXAMINE NEXT BYTES              @rp1
         B     SESDEF00            CLEAR KEY PRESSED               @rp1
SESDEF20 LA    R5,10(R5)           POINT AFTER autosave=           @rp2
         LA    R4,DEFAUTO          POINT TO DEFAUTO                @rp2
SESDEF21 CLC   0(10,R5),=C'SUBMIT   =' SEARCH FOR SUBMIT=TSO/RPF   @rp2
         BE    SESDEF22            FOUND: PROCESS LINE NUMBERS     @rp2
         MVC   0(1,R4),0(R5)       MOVE 1 CHAR. auto  into defauto @rp2
         LA    R5,1(R5)            NEXT CHAR.                      @rp2
         LA    R4,1(R4)            NEXT CHAR.                      @rp2
         BCT   R6,SESDEF21         EXAMINE NEXT BYTES              @rp2
         B     SESDEF00            CLEAR KEY PRESSED               @rp2
SESDEF22 LA    R5,10(R5)               Point after SUBMIT          @rp4
         LA    R4,COMMSUB              Point to COMMSUB            @rp4
SESDEF23 CLC   0(10,R5),=C'DFT PFX  =' SEARCH Default prefix       @rp4
         BE    SESDEF24            FOUND: Replace option           @rp4
         MVC   0(1,R4),0(R5)       MOVE 1 CHAR. Submit in COMMSUB  @rp4
         LA    R5,1(R5)                Next character              @rp4
         LA    R4,1(R4)                Next character              @rp4
         BCT   R6,SESDEF23             examine next bytes          @rp4
         B     SESDEF00                clear key pressed           @rp4
SESDEF24 LA    R5,10(R5)               Point after SUBMIT          @rp4
         LA    R4,COMMPFX              Point to COMMPFX            @rp5
SESDEF25 CLC   0(10,R5),=C'ASM PROG =' SEARCH Default asm program  @rp5
         BE    SESDEF26            FOUND: Replace option           @rp5
         MVC   0(1,R4),0(R5)       MOVE 1 CHAR. DFT-PFX in COMMPFX @rp5
         LA    R5,1(R5)                Next character              @rp5
         LA    R4,1(R4)                Next character              @rp5
         BCT   R6,SESDEF25             examine next bytes          @rp5
         B     SESDEF00                clear key pressed           @rp5
SESDEF26 LA    R5,10(R5)           Point after ASM PROG            @rp5
         LA    R4,COMMASM          Point to COMMASM                @rp5
SESDEF27 CLC   0(10,R5),=C'REPLACE  =' SEARCH Replace like members @rp5
         BE    SESDEF28            FOUND: process line numbers     @rp5
         MVC   0(1,R4),0(R5)       MOVE 1 CHAR. ASM PROG in COMMASM@rp5
         LA    R5,1(R5)            NEXT CHAR.                      @rp4
         LA    R4,1(R4)            NEXT CHAR.                      @rp4
         BCT   R6,SESDEF27         EXAMINE NEXT BYTES              @rp5
         B     SESDEF00            CLEAR KEY PRESSED               @rp3
SESDEF28 DS    0H                                                  @rp5
         MVC   DEFOUT,DEFTEMP      DEFTEMP INTO DEFOUT IN COMM AREA@rp1
         MVC   COMMREPL,10(R5)         Move REPLACE line members   @rp4
         CLC   DEFNULL(3),=C'YES' NULLS=YES ?
         BE    SESDEF30            YES: BRANCH                     @rp5
         CLC   DEFNULL(2),=C'NO'  NULLS=NO ??
         BE    SESDEF30            YES: BRANCH                     @rp5
         MVC   MSG4,ERRATXT        MESSAGE INTO SCREEN
         B     SESDEF00
SESDEF30 DS    0H                                                  @rp5
         CLC   COMMSUB(3),=C'TSO'      Submit = TSO ?              @rp2
         BE    SESDEF55                Yes: branch                 @rp2
         CLC   COMMSUB(3),=C'RPF'      Submit = RPF ?              @rp2
         BE    SESDEF55                Yes: branch                 @rp2
         MVC   MSG4,ERRBTXT            Message into screen         @rp2
         B     SESDEF00                                            @rp2
SESDEF55 DS    0H                                                  @rp2
         CLC   COMMREPL(3),=C'YES'     Replace = Yes               @rp3
         BE    SESDEF57                Yes: branch                 @rp3
         CLC   COMMREPL(3),=C'NO '     Replace = NO ?              @rp3
         BE    SESDEF57                Yes: branch                 @rp3
         MVC   MSG4,ERRCTXT            Message into screen         @rp3
         B     SESDEF00                                            @rp3
SESDEF57 DS    0H                                                  @rp3
         MVC   DBLOG,DEFLOG        MOVE DEFAULT LOGGING
         MVC   DBNULL,DEFNULL     MOVE DEFAULT NULLS IN DATABASE
         MVC   DBAUTO,DEFAUTO      Move default autosave in db     @rp1
         MVC   DBSUB,COMMSUB       Move default SUBMIT   in db     @rp2
         MVC   DBREPL,COMMREPL     Move default Replace  in db     @rp3
         MVC   DBPFX,COMMPFX       Move default Prefix   in db     @rp4
         MVC   DBASM,COMMASM       Move default asm prog in db     @rp5
         MVC   DBCLS,DEFOUT        MOVE DEFAULT SYSOUTCL IN DATABASE
         MVC   DBPRT,DEFPRT        MOVE DEFAULT PRINTER IN DATABASE
         MVC   DBSIZE,GETMLEN      MOVE DEFAULT WS-SIZE
         MVC   MSG1,MSG1TXT        Move text 'updated' to user
*
SESDEF99 DS    0H
         L     R14,SAVE14
         BR    R14
         TITLE 'CHANGE ASSEMBLER MACLIBS, PARMS + CONTROL STATEMENTS'
*---------------------------------------------------------------------*
*                                                                     *
*        A S M D E F - SET ASSEMBLER DEFAULTS                         *
*                                                                     *
*                      INPUT:  SCR6TXT                                *
*                      OUTPUT: SCR6TXT                                *
*                              COMMAREA                               *
*                                                                     *
*------------------------------------------ (C)-1996 SKYBIRD SYSTEMS -*
ASMDEF   DS    0H
         ST    R14,SAVE14              save return reg.
ASMDEF00 DS    0H
         MVC   SCR6MAC1(44),COMMMAC1   move
         MVC   SCR6MAC2(44),COMMMAC2
         MVC   SCR6MAC3(44),COMMMAC3
         MVC   SCR6MAC4(44),COMMMAC4
         MVC   SCR6MAC5(44),COMMMAC5        the
         MVC   SCR6MAC6(44),COMMMAC6
         MVC   SCR6APRM(30),COMMASPA             fields
         MVC   SCR6BPRM(30),COMMLKPA
         MVC   STMNT1+2(69),COMMLK1
         MVC   STMNT2+2(69),COMMLK2                  from
         MVC   STMNT3+2(69),COMMLK3
         MVC   STMNT4+2(69),COMMLK4
         MVC   STMNT5+2(69),COMMLK5
         MVC   STMNT6+2(69),COMMLK6                      commarea
         TPUT  SCR5TXT,SCR5LEN,FULLSCR
         TPUT  SCR6TXT,SCR6LEN,FULLSCR
         MVI   MSG6,C'-'           CLEAR MSG
         MVC   MSG6+1(21),MSG6
         BAL   14,CONV                 do a tget asis
         B     ASMDEF01(R15)           Initiate branchlist
ASMDEF01 B     ASMDEF02                CONTINUE PROCESSING
         B     ASMDEF99                CANCEL changes
         B     ASMDEF00                REDISPLAY SCREEN
ASMDEF02 DS    0H
         LA    R5,BUFFER               POINT TO BEGINNING OF BUFFER
         LR    R6,R1                   LOAD MAX LENGTH OF BUFFER
ASMDEF03 DS    0H
         CLC   0(12,R5),CMAC1          FIRST MACLIB REACHED ?
         BE    ASMDEF05                YES: SCAN NEXT FIELD
         LA    R5,1(R5)                NEXT BYTE OF BUFFER
         BCT   R6,ASMDEF03             NEXT BYTE OF BUFFER
         B     ASMDEF00                DISPLAY SCREEN
ASMDEF05 DS    0H
         LA    R5,12(R5)               POINT AFTER maclib1
         SH    R6,=H'12'               SKIP 12 BYTES IN 'BUFFER'
         LA    R3,BUFMAC1              FIRST MACLIB FIELD
         MVC   BUFMAC1,BLANKS          BLANK THE 1ST MACLIB FIELD
ASMDEF07 DS    0H
         CLC   0(12,R5),CMAC2          2nd MACLIB REACHED ?
         BE    ASMDEF09                YES: FOUND.
         MVC   0(1,R3),0(R5)           MOVE BYTE 1ST MACLIB FIELD
         LA    R5,1(R5)                NEXT BYTE BUFFER
         LA    R3,1(R3)                NEXT BYTE 1ST MACLIB FIELD
         BCT   R6,ASMDEF07             TEST NEXT BYTE
         B     ASMDEF00                DISPLAY SCREEN
ASMDEF09 DS    0H
         LA    R5,12(R5)               POINT AFTER maclib2
         SH    R6,=H'12'               SKIP 12 BYTES IN 'BUFFER'
         LA    R3,BUFMAC2              2nd MACLIB FIELD
         MVC   BUFMAC2,BLANKS          BLANK THE 2nd MACLIB FIELD
ASMDEF11 DS    0H
         CLC   0(12,R5),CMAC3          3rd MACLIB REACHED ?
         BE    ASMDEF13                YES: FOUND.
         MVC   0(1,R3),0(R5)           MOVE BYTE 2nd MACLIB FIELD
         LA    R5,1(R5)                NEXT BYTE BUFFER
         LA    R3,1(R3)                NEXT BYTE 2nd MACLIB FIELD
         BCT   R6,ASMDEF11             TEST NEXT BYTE
         B     ASMDEF00                DISPLAY SCREEN
ASMDEF13 DS    0H
         LA    R5,12(R5)               POINT AFTER maclib3
         SH    R6,=H'12'               SKIP 12 BYTES IN 'BUFFER'
         LA    R3,BUFMAC3              3rd MACLIB FIELD
         MVC   BUFMAC3,BLANKS          BLANK THE 3rd MACLIB FIELD
ASMDEF15 DS    0H
         CLC   0(12,R5),CMAC4          4th MACLIB REACHED ?
         BE    ASMDEF17                YES: FOUND.
         MVC   0(1,R3),0(R5)           MOVE BYTE 3rd MACLIB FIELD
         LA    R5,1(R5)                NEXT BYTE BUFFER
         LA    R3,1(R3)                NEXT BYTE 3rd MACLIB FIELD
         BCT   R6,ASMDEF15             TEST NEXT BYTE
         B     ASMDEF00                DISPLAY SCREEN
ASMDEF17 DS    0H
         LA    R5,12(R5)               POINT AFTER maclib4
         SH    R6,=H'12'               SKIP 12 BYTES IN 'BUFFER'
         LA    R3,BUFMAC4              4th MACLIB FIELD
         MVC   BUFMAC4,BLANKS          BLANK THE 4th MACLIB FIELD
ASMDEF19 DS    0H
         CLC   0(12,R5),CMAC5          5th MACLIB REACHED ?
         BE    ASMDEF21                YES: FOUND.
         MVC   0(1,R3),0(R5)           MOVE BYTE 4th MACLIB FIELD
         LA    R5,1(R5)                NEXT BYTE BUFFER
         LA    R3,1(R3)                NEXT BYTE 4th MACLIB FIELD
         BCT   R6,ASMDEF19             TEST NEXT BYTE
         B     ASMDEF00                DISPLAY SCREEN
ASMDEF21 DS    0H
         LA    R5,12(R5)               POINT AFTER maclib5
         SH    R6,=H'12'               SKIP 12 BYTES IN 'BUFFER'
         LA    R3,BUFMAC5              5th MACLIB FIELD
         MVC   BUFMAC5,BLANKS          BLANK THE 5th MACLIB FIELD
ASMDEF23 DS    0H
         CLC   0(12,R5),CMAC6          6th MACLIB REACHED ?
         BE    ASMDEF25                YES: FOUND.
         MVC   0(1,R3),0(R5)           MOVE BYTE 5th MACLIB FIELD
         LA    R5,1(R5)                NEXT BYTE BUFFER
         LA    R3,1(R3)                NEXT BYTE 5th MACLIB FIELD
         BCT   R6,ASMDEF23             TEST NEXT BYTE
         B     ASMDEF00                DISPLAY SCREEN
ASMDEF25 DS    0H
         LA    R5,12(R5)               POINT AFTER maclib6
         SH    R6,=H'12'               SKIP 12 BYTES IN 'BUFFER'
         LA    R3,BUFMAC6              6th MACLIB FIELD
         MVC   BUFMAC6,BLANKS          BLANK THE 6th MACLIB FIELD
ASMDEF27 DS    0H
         CLC   0(12,R5),CAPRM          Assembler Parm field ?
         BE    ASMDEF29                YES: FOUND.
         MVC   0(1,R3),0(R5)           MOVE BYTE 6th MACLIB FIELD
         LA    R5,1(R5)                NEXT BYTE BUFFER
         LA    R3,1(R3)                NEXT BYTE 6th MACLIB FIELD
         BCT   R6,ASMDEF27             TEST NEXT BYTE
         B     ASMDEF00                DISPLAY SCREEN
ASMDEF29 DS    0H
         LA    R5,12(R5)               POINT AFTER Assembler parm
         SH    R6,=H'12'               SKIP 12 BYTES IN 'BUFFER'
         LA    R3,BUFAPRM              Assembler parm field
         MVC   BUFAPRM,BLANKS          BLANK THE field
ASMDEF31 DS    0H
         CLC   0(12,R5),CBPRM          Binder Parm field ?
         BE    ASMDEF33                YES: FOUND.
         MVC   0(1,R3),0(R5)           MOVE BYTE Asm parm FIELD
         LA    R5,1(R5)                NEXT BYTE BUFFER
         LA    R3,1(R3)                NEXT BYTE Asm parm FIELD
         BCT   R6,ASMDEF31             TEST NEXT BYTE
         B     ASMDEF00                DISPLAY SCREEN
ASMDEF33 DS    0H
         LA    R5,12(R5)               POINT AFTER Binder parm
         SH    R6,=H'12'               SKIP 12 BYTES IN 'BUFFER'
         LA    R3,BUFBPRM              Binder parm field
         MVC   BUFBPRM,BLANKS          BLANK THE field
ASMDEF35 DS    0H
         CLC   0(2,R5),C1              1st control statement field?
         BE    ASMDEF37                YES: FOUND.
         MVC   0(1,R3),0(R5)           MOVE BYTE binder parm FIELD
         LA    R5,1(R5)                NEXT BYTE BUFFER
         LA    R3,1(R3)                NEXT BYTE binder parm FIELD
         BCT   R6,ASMDEF35             TEST NEXT BYTE
         B     ASMDEF00                DISPLAY SCREEN
ASMDEF37 DS    0H
         LA    R5,2(R5)                POINT AFTER 1>
         SH    R6,=H'2'                SKIP 2 BYTES IN 'BUFFER'
         LA    R3,BUFC1                1st binder control statement
         MVC   BUFC1,BLANKS            BLANK THE field
ASMDEF39 DS    0H
         CLC   0(2,R5),C2              2nd control statement field?
         BE    ASMDEF41                YES: FOUND.
         MVC   0(1,R3),0(R5)           MOVE BYTE 1st control statement
         LA    R5,1(R5)                NEXT BYTE BUFFER
         LA    R3,1(R3)                NEXT BYTE 1st control statement
         BCT   R6,ASMDEF39             TEST NEXT BYTE
         B     ASMDEF00                DISPLAY SCREEN
ASMDEF41 DS    0H
         LA    R5,2(R5)                POINT AFTER 2>
         SH    R6,=H'2'                SKIP 2 BYTES IN 'BUFFER'
         LA    R3,BUFC2                2nd binder control statement
         MVC   BUFC2,BLANKS            BLANK THE field
ASMDEF43 DS    0H
         CLC   0(2,R5),C3              3rd control statement field?
         BE    ASMDEF45                YES: FOUND.
         MVC   0(1,R3),0(R5)           MOVE BYTE 2nd control statement
         LA    R5,1(R5)                NEXT BYTE BUFFER
         LA    R3,1(R3)                NEXT BYTE 2nd control statement
         BCT   R6,ASMDEF43             TEST NEXT BYTE
         B     ASMDEF00                DISPLAY SCREEN
ASMDEF45 DS    0H
         LA    R5,2(R5)                POINT AFTER 3>
         SH    R6,=H'2'                SKIP 2 BYTES IN 'BUFFER'
         LA    R3,BUFC3                3rd binder control statement
         MVC   BUFC3,BLANKS            BLANK THE field
ASMDEF47 DS    0H
         CLC   0(2,R5),C4              4th control statement field?
         BE    ASMDEF49                YES: FOUND.
         MVC   0(1,R3),0(R5)           MOVE BYTE 3rd control statement
         LA    R5,1(R5)                NEXT BYTE BUFFER
         LA    R3,1(R3)                NEXT BYTE 3rd control statement
         BCT   R6,ASMDEF47             TEST NEXT BYTE
         B     ASMDEF00                DISPLAY SCREEN
ASMDEF49 DS    0H
         LA    R5,2(R5)                POINT AFTER 4>
         SH    R6,=H'2'                SKIP 2 BYTES IN 'BUFFER'
         LA    R3,BUFC4                4th binder control statement
         MVC   BUFC4,BLANKS            BLANK THE field
ASMDEF51 DS    0H
         CLC   0(2,R5),C5              5th control statement field?
         BE    ASMDEF53                YES: FOUND.
         MVC   0(1,R3),0(R5)           MOVE BYTE 4th control statement
         LA    R5,1(R5)                NEXT BYTE BUFFER
         LA    R3,1(R3)                NEXT BYTE 4th control statement
         BCT   R6,ASMDEF51             TEST NEXT BYTE
         B     ASMDEF00                DISPLAY SCREEN
ASMDEF53 DS    0H
         LA    R5,2(R5)                POINT AFTER 5>
         SH    R6,=H'2'                SKIP 2 BYTES IN 'BUFFER'
         LA    R3,BUFC5                5th binder control statement
         MVC   BUFC5,BLANKS            BLANK THE field
ASMDEF55 DS    0H
         CLC   0(2,R5),C6              6th control statement field?
         BE    ASMDEF57                YES: FOUND.
         MVC   0(1,R3),0(R5)           MOVE BYTE 5th control statement
         LA    R5,1(R5)                NEXT BYTE BUFFER
         LA    R3,1(R3)                NEXT BYTE 5th control statement
         BCT   R6,ASMDEF55             TEST NEXT BYTE
         B     ASMDEF00                DISPLAY SCREEN
ASMDEF57 DS    0H
         LA    R5,2(R5)                POINT AFTER 6>
         SH    R6,=H'2'                SKIP 2 BYTES IN 'BUFFER'
         LA    R3,BUFC6                6th binder control statement
         MVC   BUFC6,BLANKS            BLANK THE field
         C     R6,F0000                LENGTH ALREADY ZERO ?
         BNH   ASMDEF70                YES: END OF SCAN
ASMDEF59 DS    0H
         MVC   0(1,R3),0(R5)           MOVE BYTE 6th CONTROL STMNT
         LA    R5,1(R5)                NEXT BYTE BUFFER
         LA    R3,1(R3)                NEXT BYTE 6th CONTROL STMNT
         BCT   R6,ASMDEF59             MOVE NEXT BYTE
ASMDEF70 DS    0H
         MVC   COMMMAC1,BUFMAC1        Move maclib 1 to commarea
         MVC   COMMMAC2,BUFMAC2        Move maclib 2 to commarea
         MVC   COMMMAC3,BUFMAC3        Move maclib 3 to commarea
         MVC   COMMMAC4,BUFMAC4        Move maclib 4 to commarea
         MVC   COMMMAC5,BUFMAC5        Move maclib 5 to commarea
         MVC   COMMMAC6,BUFMAC6        Move maclib 6 to commarea
         MVC   COMMASPA,BUFAPRM        Move Assembler parm to commarea
         MVC   COMMLKPA,BUFBPRM        Move binder parm to commarea
         MVC   COMMLK1,BUFC1           Move 1st c-stmnt to commarea
         MVC   COMMLK2,BUFC2           Move 2nd c-stmnt to commarea
         MVC   COMMLK3,BUFC3           Move 3rd c-stmnt to commarea
         MVC   COMMLK4,BUFC4           Move 4th c-stmnt to commarea
         MVC   COMMLK5,BUFC5           Move 5th c-stmnt to commarea
         MVC   COMMLK6,BUFC6           Move 6th c-stmnt to commarea
         OC    COMMMAC1,BLANKS
         OC    COMMMAC2,BLANKS
         OC    COMMMAC3,BLANKS
         OC    COMMMAC4,BLANKS
         OC    COMMMAC5,BLANKS
         OC    COMMMAC6,BLANKS
         OC    COMMASPA,BLANKS
         OC    COMMLKPA,BLANKS
         OC    COMMLK1,BLANKS
         OC    COMMLK2,BLANKS
         OC    COMMLK3,BLANKS
         OC    COMMLK4,BLANKS
         OC    COMMLK5,BLANKS
         OC    COMMLK6,BLANKS
         MVC   DBMAC1,COMMMAC1         move
         MVC   DBMAC2,COMMMAC2
         MVC   DBMAC3,COMMMAC3
         MVC   DBMAC4,COMMMAC4               to
         MVC   DBMAC5,COMMMAC5
         MVC   DBMAC6,COMMMAC6
         MVC   DBASPA,COMMASPA                     the
         MVC   DBLKPA,COMMLKPA
         MVC   DBLK1,COMMLK1
         MVC   DBLK2,COMMLK2
         MVC   DBLK3,COMMLK3                             data-
         MVC   DBLK4,COMMLK4
         MVC   DBLK5,COMMLK5
         MVC   DBLK6,COMMLK6                                   base
         MVC   MSG1,MSG1TXT            Move text 'updated' to user
ASMDEF99 DS    0H
         L     R14,SAVE14              restore return reg.
         BR    R14                     and return
         TITLE 'CHANGE DEFAULT ALLOCATIONS'
*---------------------------------------------------------------------*
*                                                                     *
*        A L L O C - SET DEFAULT ALLOCATIONS                          *
*                                                                     *
*                    INPUT:  SCR3TXT                                  *
*                            JFCB                                     *
*                    OUTPUT: SCR3TXT                                  *
*                            COMMAREA                                 *
*                                                                     *
*------------------------------------------ (C)-1996 SKYBIRD SYSTEMS -*
ALLOC    ST    R14,SAVE14
ALLOC00  L     R3,GETMSTRT         SET POINTER TO FIRSTREC EQUAL
         ST    R3,FIRSTREC         TO BEGINNING OF WORKSPACE
         XC    MSG2,MSG2           CLEAR MESSAGE
ALLOC01  MVC   SCR3VOL(6),VOLUME   VOLUME INTO SCREEN
         MVC   SCR3DSN(44),DSNAME  DSNAME INTO SCREEN
         MVC   SCR3MEM(8),MEMBER   MEMBER INTO SCREEN
         MVC   SCR3MSTR(44),COMMSTR  LIBRARIAN MASTERFILE
         MVC   SCR3MSTV(6),COMMSVOL  LIBRARIAN VOLUME
         MVC   SCR3MOD(8),COMMMOD    LIBRARIAN MODULE
         MVC   SCR3UPP,DEFOLD      MOVE "FOLD"
         MVC   SCR3NUM,DEFNUM      MOVE "NUMBERED" YES OR NO
         MVC   SCR3APP,DEFAPP      MOVE "APPEND" YES OR NO
         MVC   SCR3MODP,PANMOD     MOVE PANVALET MODULE
         MVC   SCR3PANL,PANLIB     MOVE PANVALET LIBRARY
         MVC   SCR3PANV,PANVOL     MOVE PANVALET VOLUME
         TPUT  SCR5TXT,SCR5LEN,FULLSCR WRITE SCREEN5
         TPUT  SCR3TXT,SCR3LEN,FULLSCR WRITE SCREEN3
         BAL   R14,CONV            READ THE SCREEN
         B     ALLOC01A(R15)       INITIATE BRANCHLIST
ALLOC01A B     ALLOC02             CONTINUE PROCESSING
         B     ALLOC99             CANCEL CHANGES
         B     ALLOC00             REDISPLAY SCREEN
ALLOC02  OC    BUFFER(200),BLANKS  XLATE TO UPPERCASE
         OC    BUFFER+200(105),BLANKS
         MVC   VOLUME(6),BLANKS    CLEAR VOLUME
         MVC   MEMBER(8),BLANKS    CLEAR MEMBER
         MVC   DSNAME(44),BLANKS   CLEAR DSNAME
         MVC   COMMMOD(8),BLANKS   CLEAR MASTERFILE MODULE
         MVC   COMMSTR(44),BLANKS  CLEAR MASTERFILE
         MVC   COMMSVOL(6),BLANKS  CLEAR MASTERFILE VOLUME
         MVC   PANLIB,BLANKS       CLEAR PANVALET LIBRARY
         MVC   PANVOL,BLANKS       CLEAR PANVALET LIBRARY VOLUME
         MVC   PANMOD,BLANKS       CLEAR PANVALET MODULE
         LA    R5,BUFFER           POINT TO BEGINNING OF BUFFER
         LR    R6,R1               LOAD MAX LENGTH OF BUFFER
ALLOC03  CLC   0(5,R5),=C'UPPER'   SEARCH FOR UPPER CASE
         BE    ALLOC05             FOUND: PROCESS LOGGING
         LA    R5,1(R5)            NEXT BYTE
         BCT   R6,ALLOC03          EXAMINE NEXT BYTES
         B     ALLOC00             CLEAR KEY PRESSED.
ALLOC05  LA    R5,13(R5)           POINT AFTER 'UPPER CASE=  '
         LA    R4,DEFOLD           POINT TO FOLD IN COMMAREA
ALLOC07  CLC   0(4,R5),=C'LOAD'    SEARCH FOR LOAD APPEND
         BE    ALLOC09             FOUND: PROCESS LINE NUMBERS
         MVC   0(1,R4),0(R5)       MOVE 1 CHAR. LOGGING INTO COMMAREA
         LA    R5,1(R5)            NEXT CHAR.
         LA    R4,1(R4)            NEXT CHAR.
         BCT   6,ALLOC07           EXAMINE NEXT BYTES
         B     ALLOC00             CLEAR KEY PRESSED
ALLOC09  LA    R5,13(R5)           POINT AFTER 'LOAD APPEND= '
         LA    4,DEFAPP            POINT TO APPEND IN COMMAREA
ALLOC11  CLC   0(4,R5),=C'LINE'    SEARCH FOR LINE NUMBERS
         BE    ALLOC13             FOUND: PROCESS LINE NUMBERS
         MVC   0(1,R4),0(R5)       MOVE 1 CHAR. LOGGING INTO COMMAREA
         LA    R5,1(R5)            NEXT CHAR.
         LA    R4,1(R4)            NEXT CHAR.
         BCT   R6,ALLOC11          EXAMINE NEXT BYTES
         B     ALLOC00             CLEAR KEY PRESSED
ALLOC13  LA    R5,13(R5)           POINT AFTER 'LINE NUMBERED='
         LA    R4,DEFNUM           POINT TO NUMBERED IN COMMAREA
ALLOC15  CLC   0(7,R5),=C'MEMBER=' SEARCH FOR MEMBER
         BE    ALLOC17             FOUND: PROCESS MEMBER
         MVC   0(1,R4),0(R5)       MOVE 1 CHAR. LINE NUMBER COMMAREA
         LA    R5,1(R5)            NEXT CHAR.
         LA    R4,1(R4)            NEXT CHAR.
         BCT   R6,ALLOC15          EXAMINE NEXT BYTES
         B     ALLOC00             CLEAR KEY PRESSED
ALLOC17  LA    R5,7(R5)            POINT AFTER 'MEMBER='
         LA    R4,MEMBER           POINT TO MEMBER IN COMMAREA
ALLOC19  CLC   0(8,R5),=C',DSNAME=' SEARCH FOR DSNAME
         BE    ALLOC21             FOUND: PROCESS DSNAME
         MVC   0(1,R4),0(R5)       MOVE 1 CHAR. MEMBER INTO COMMAREA
         LA    R5,1(R5)            NEXT CHAR.
         LA    R4,1(R4)            NEXT CHAR.
         BCT   R6,ALLOC19          EXAMINE NETX BYTES
         B     ALLOC00             CLEAR KEY PRESSED
ALLOC21  LA    R5,8(R5)            POINT AFTER 'DSNAME='
         LA    R4,DSNAME           POINT TO DSNAME IN COMMAREA
ALLOC23  CLC   0(7,R5),=C'VOLUME=' SEARCH FOR VOLUME
         BE    ALLOC25             FOUND: PROCESS VOLUME
         MVC   0(1,R4),0(R5)       MOVE 1 CHAR. DSNAME INTO COMMAREA
         LA    R5,1(R5)            NEXT CHAR.
         LA    R4,1(R4)            NEXT CHAR.
         BCT   R6,ALLOC23          EXAMINE NEXT BYTES
         B     ALLOC00             CLEAR KEY PRESSED
ALLOC25  LA    R5,7(R5)            POINT AFTER 'DDNAME='
         LA    R4,VOLUME           POINT TO VOLUME IN COMMAREA
ALLOC26  CLC   0(7,R5),=C'MODULE=' SEARCH FOR LIB MODULE
         BE    ALLOC27             FOUND: PROCESS LIBR MODULE
         MVC   0(1,R4),0(R5)       MOVE 1 CHAR. VOLUME INTO COMMAREA
         LA    R5,1(R5)            NEXT CHAR.
         LA    R4,1(R4)            NEXT CHAR.
         BCT   R6,ALLOC26          EXAMINE NEXT BYTES
         B     ALLOC00             CLEAR KEY PRESSED
ALLOC27  LA    R5,7(R5)            POINT AFTER 'MODULE='
         LA    R4,COMMMOD          POINT TO LIB MODULE IN COMMAREA
ALLOC29  CLC   0(8,R5),=C',MASTER=' SEARCH FOR MASTER FILE
         BE    ALLOC31             FOUND: PROCESS MASTER FILE
         MVC   0(1,R4),0(R5)       MOVE 1 CHAR. LIBR MODULE COMMAREA
         LA    R5,1(R5)            NEXT CHAR.
         LA    R4,1(R4)            NEXT CHAR.
         BCT   6,ALLOC29           EXAMINE NEXT BYTES
         B     ALLOC00             CLEAR KEY PRESSED
ALLOC31  LA    R5,8(R5)            POINT AFTER 'MASTER='
         LA    R4,COMMSTR          POINT TO MASTER FILE IN COMMAREA
ALLOC33  CLC   0(7,R5),=C'VOLUME=' SEARCH FOR MASTER FILE VOLUME
         BE    ALLOC35             FOUND: PROCESS MASTER FILE VOLUME
         MVC   0(1,R4),0(R5)       MOVE 1 CHAR. MASTFILE IN COMMAREA
         LA    R5,1(R5)            NEXT CHAR.
         LA    R4,1(R4)            NEXT CHAR.
         BCT   R6,ALLOC33          EXAMINE NEXT BYTES
         B     ALLOC00             CLEAR KEY PRESSED
ALLOC35  LA    R5,7(R5)            POINT AFTER 'VOLUME='
         LA    R4,COMMSVOL         POINT TO MASTER FILE VOLUME IN COMM
ALLOC37  CLC   0(7,R5),=C'PANMOD='  SEARCH FOR PANVALET MODULE
         BE    ALLOC39             FOUND: PROCESS DDNAME
         MVC   0(1,R4),0(R5)       MOVE 1 CHAR. MASTVOL IN COMMAREA
         LA    R5,1(R5)            NEXT CHAR.
         LA    R4,1(R4)            NEXT CHAR.
         BCT   R6,ALLOC37          EXAMINE NEXT BYTES
         B     ALLOC00             CLEAR KEY PRESSED
ALLOC39  LA    R5,7(R5)            POINT AFTER 'PANMOD='
         LA    R4,PANMOD           POINT TO PANVALET MODULE
ALLOC41  CLC   0(8,R5),=C',PANLIB=' SEARCH FOR PANVALET LIBRARY
         BE    ALLOC43             FOUND: PROCESS DDNAME
         MVC   0(1,R4),0(R5)       MOVE 1 CHAR. PANMOD  IN COMMAREA
         LA    R5,1(R5)            NEXT CHAR.
         LA    R4,1(R4)            NEXT CHAR.
         BCT   R6,ALLOC41          EXAMINE NEXT BYTES
         B     ALLOC00             CLEAR KEY PRESSED
ALLOC43  LA    R5,8(R5)            POINT AFTER ',PANLIB='
         LA    R4,PANLIB           POINT TO PANVALET MODULE
ALLOC45  CLC   0(7,R5),=C'VOLUME=' SEARCH FOR PANVALET LIBRARY VOLUME
         BE    ALLOC47             FOUND: PROCESS VOLUME
         MVC   0(1,R4),0(R5)       MOVE 1 CHAR. PANLIB  IN COMMAREA
         LA    R5,1(R5)            NEXT CHAR.
         LA    R4,1(R4)            NEXT CHAR.
         BCT   R6,ALLOC45          EXAMINE NEXT BYTES
         B     ALLOC00             CLEAR KEY PRESSED
ALLOC47  LA    R5,7(R5)            POINT AFTER 'PANVOL='
         LA    R4,PANVOL           POINT TO PANVALET MODULE
ALLOC49  CLC   0(8,R5),=C',DDNAME=' SEARCH FOR PANVALET DDNAME
         BE    ALLOC55             FOUND: PROCESS DDNAME
         MVC   0(1,R4),0(R5)       MOVE 1 CHAR. VOLUME  IN COMMAREA
         LA    R5,1(R5)            NEXT CHAR.
         LA    R4,1(R4)            NEXT CHAR.
         BCT   R6,ALLOC49          EXAMINE NEXT BYTES
         B     ALLOC00             CLEAR KEY PRESSED
ALLOC55  MVC   DBDSN,DSNAME        MOVE DEFAULT DSNAME
         MVC   DBMEM,MEMBER        MOVE MEMBER FIELD
         MVC   DBVOL,VOLUME        MOVE VOLUME FIELD
         MVC   DBAPP,DEFAPP        MOVE APPEND FIELD
         MVC   DBNUM,DEFNUM        MOVE "NUM" FIELD
         MVC   DBFOLD,DEFOLD       MOVE "FOLD" FIELD
         MVC   DBMSTR,COMMSTR      MOVE 'MASTERFILE' FIELD
         MVC   DBMSVOL,COMMSVOL    MOVE 'MASTERFILE VOL' FIELD
         MVC   DBMOD,COMMMOD       MOVE 'MASTERFILE MOD' FIELD
         MVC   DBPANLIB,PANLIB     MOVE 'PANVALET LIBRARY' FIELD
         MVC   DBPANVOL,PANVOL     MOVE 'PANVALET VOLUME' FIELD
         MVC   DBPANMOD,PANMOD     MOVE 'PANVALET MODULE' FIELD
         MVC   MSG1,MSG1TXT            Move text 'updated' to user
ALLOC99  DS    0H
         L     R14,SAVE14
         BR    R14
         TITLE 'CONVERT SCREEN ROUTINE'
*---------------------------------------------------------------------*
*                                                                     *
*        C O N V.   CONVERT THE SESSION DEFAULT SCREEN AND            *
*                   ALLOCATION SCREEN                                 *
*                   DO AN TGET ASIS TO OBTAIN THE AID BYTE TO         *
*                   TEST IF 'ENTER' IS USED OR PF03 OR PF15.          *
*                   AFTER THIS TEST REMOVE ALL DE UNNECESARY SBA'S.   *
*                                                                     *
*        RETURNCODES: 00 - SCREEN CONVERTED. ENTER KEY IS USED        *
*                          REG 1 CONTAINS THE LENGTH OF THE SCREEN    *
*                     04 - SCREEN NOT CONVERTED. PF03/PF15 KEY USED   *
*                     08 - SCREEN NOT CONVERTED. OTHER KEY IS USED    *
*                                                                     *
*-------------------------------------------(C)-1996 SKYBIRD SYSTEMS--*
         SPACE 2
CONV     DS    0H
         ST    R14,SAVE14C             SAVE REG 14
         LA    R5,BUFFER               OUTPUT FORMATTED BUFFER
         L     R3,COMMSCR              LOAD SCREEN ADDRESS
         TGET  (R3),1200,ASIS           READ THE SCREEN
         LR    R4,R1                   SAVE LENGTH
         CLI   0(R3),X'F3'             PFK3 (END) PRESSED
         BE    CONV051                 YES: EXIT
         CLI   0(R3),X'C3'             PFK15 (END) PRESSED
         BE    CONV051                 YES: EXIT
         CLI   0(R3),X'7D'             'ENTER' PRESSED
         BNE   CONV053                 NO: END WITH RC=0008
         XR    R2,R2                   INIT OUTPUT LENGTH
         SH    R4,=H'3'                SKIP AID AND CURSOR ADDRESS
         C     R4,F0000                REGISTER ZERO
         BNH   CONV053                 NOT HIGH: END OF ROUTINE
         LA    R3,3(R3)
         LA    R5,BUFFER               OUTPUT ADDRESS
*        INPUT SCREEN IS POINTED TO BY R3
*        OUTPUT SCREEN IS POINTED TO BY R5
*        THE NEXT SECTION WILL REMOVE ALL THE SBA'S
CONV001  CLI   0(R3),X'11'             SET BUFFER ADDRESS ?
         BE    CONV003                 YES: SKIP NEXT 3 BYTES INPUT
CONV002  MVC   0(1,R5),0(R3)           MOVE INPUT BYTE
         LA    R3,1(R3)                NEXT BYTE INPUT
         LA    R2,1(R2)                COUNT OUTPUT BYTES
         LA    R5,1(R5)                NEXT BYTE OUTPUT
         BCT   R4,CONV001              TEST NEXT BYTE
         B     CONV055                 END OF ROUTINE
CONV003  LA    R3,3(R3)                SKIP 3 BYTES INPUT
         BCTR  R4,0                    MINUS 1 BCT
         BCTR  R4,0                    MINUS 1 BCT
         C     R4,F0000                REGISTER ZERO ?
         BNH   CONV055                 YES: TERMINATE CONVERSION
         BCT   R4,CONV001              TEST NEXT BYTE
         B     CONV055
CONV051  DS    0H                      PFK03/15 PRESSED
         LA    R15,4                   RC=0004
         B     CONV099
CONV053  DS    0H                      UNKNOWN KEY PRESSED
         LA    R15,8                   RC=0008
         B     CONV099
CONV055  DS    0H                      SUCCESSFUL END
         LA    R15,0                   RC=0000
CONV099  LR    R1,R2                   OUTPUT LENGTH IN REGISTER 1
         L     R14,SAVE14C             RELOAD REGISTER
         BR    R14                     RETURN
         TITLE 'NUMERIC TEST ROUTINE'
*---------------------------------------------------------------------*
*                                                                     *
*        N U M T S T - SUBROUTINE, NUMERIC TEST OF A 8 CHAR FIELD.    *
*                                                                     *
*                    INPUT:  NUMFLD, FIELD CONTAINS CHARS TO TEST     *
*                    OUTPUT: NUMFLD, REMAINS UNCHAINGED               *
*                            REG.15, RETURN CODE 0000 - NUMERIC       *
*                                                0008 - NOT NUMERIC   *
*                                                                     *
*------------------------------------------ (C)-1996 SKYBIRD SYSTEMS -*
NUMTST   ST    R14,SAVE14N         SAVE REG.14
         LA    R3,8                LENGTH
         LA    R4,NUMFLD           FIELD TO BE TESTED
NUMTST01 CLI   0(R4),X'F0'         LOW ?
         BL    NUMTST03            YES: NOT NUMERIC
         CLI   0(R4),X'F9'         HIGH ?
         BH    NUMTST03            YES: NOT NUMERIC
         LA    R4,1(R4)            NEXT CHAR.
         BCT   R3,NUMTST01         TEST MAX 8 CHARS.
         XR    R15,R15             RC= 0000, NUMERIC
         B     NUMTST99            GOTO EXIT
NUMTST03 LA    R15,8               RC= 0008, NOT NUMERIC
NUMTST99 L     R14,SAVE14N         RESTORE REG.14
         BR    R14                 RETURN
         TITLE 'REGULATE LINE NUMBERS'
*---------------------------------------------------------------------*
*                                                                     *
*        S H I F T - SUBROUTINE, REPLACE TRAILING SPACES WITH LEADING *
*                    ZEROES.                                          *
*                                                                     *
*                    INPUT:  NUMFLD, FIELD TO BE SHIFTED, MAX 8 CHAR. *
*                    OUTPUT: NUMFLD, TRAILING SPACES REPLACED WITH    *
*                                    LEADING ZEROES.                  *
*                                                                     *
*------------------------------------------ (C)-1996 SKYBIRD SYSTEMS -*
SHIFT    ST    R14,SAVE14S         SAVE REG.14
         LA    R3,8                MAX 8 CHARS
SHIFT01  CLI   NUMFLD+7,X'40'      LAST CHAR SPACE ?
         BNE   SHIFT99             NO: GOTO EXIT
         MVC   WRKFLD+1(7),NUMFLD  MOVE FIRST 5 CHARS INTO WRKFLD+1
         MVI   WRKFLD,X'F0'        INSERT LEADING ZERO
         MVC   NUMFLD,WRKFLD       RESTORE NUMFLD
         BCT   R3,SHIFT01          SHIFT MAX 8 TIMES
SHIFT99  L     R14,SAVE14S         RESTORE REG.14
         BR    R14                 RETURN
         TITLE 'SCREEN FORMATS'
SCR9999  DC    X'27F5C21140401D4013'
SCR1TXT  DC    X'27F5C21140401DF8' WRITE ERASE / R01,C00
SCR1LNE  DC    CL79'--------------------------- RPF DEFAULTS ----------C
               ----------------------------'
         ORG   SCR1LNE+57
MSG1     DS    CL22
         ORG   ,
         DC    X'11C150',X'1DF8',C'Option  ===>',X'1DC113'         @rp1
         DC    C'       ',X'1DF0'                                  @rp1
         DC    X'11C35D',AL3(TURQ),C'Userid  - '    R03,C62
SCR1UID  DS    CL7
         DC    X'11C3F3',AL3(WHITE),C'0  '
         DC    AL3(TURQ)
         DC    C'Status      - '
         DC    AL3(GREEN)
         DC    C'Display current RPF status'
         DC    X'11C5C3',AL3(WHITE),C'1  '
         DC    AL3(TURQ)
         DC    C'Workspace   - '
         DC    AL3(GREEN)
         DC    C'Alter / Display workspace size and parameters'
         DC    X'11C6D3',AL3(WHITE),C'2  '
         DC    AL3(TURQ)
         DC    C'Allocations - '
         DC    AL3(GREEN)
         DC    C'Alter / Display current allocations'
         DC    X'11C7E3',AL3(WHITE),C'3  '
         DC    AL3(TURQ)
         DC    C'PFKEYS      - '
         DC    AL3(GREEN)
         DC    C'Alter / Display Program Function Keys'
         DC    X'11C8F3',AL3(WHITE),C'4  '
         DC    AL3(TURQ)
         DC    C'ASMDEF      - '
         DC    AL3(GREEN)
         DC    C'Define default maclibs + control stmnts'
         DC    X'114AC3',AL3(WHITE),C'5  '
         DC    AL3(TURQ)
         DC    C'Reserved    - '
         DC    AL3(GREEN)
         DC    C'For future use'
         DC    X'114BD3',AL3(WHITE),C'6  '
         DC    AL3(TURQ)
         DC    C'Reserved    - '
         DC    AL3(GREEN)
         DC    C'For future use'
         DC    X'114CE3',AL3(WHITE),C'7  '
         DC    AL3(TURQ)
         DC    C'Reserved    - '
         DC    AL3(GREEN)
         DC    C'For future use'
         DC    X'114DF3',AL3(WHITE),C'8  '
         DC    AL3(TURQ)
         DC    C'Reserved    - '
         DC    AL3(GREEN)
         DC    C'For future use'
         DC    X'114FC3',AL3(WHITE),C'9  '
         DC    AL3(TURQ)
         DC    C'Reserved    - '
         DC    AL3(GREEN)
         DC    C'For future use'
         DC    X'1150D3',AL3(WHITE),C'X  '
         DC    AL3(TURQ)
         DC    C'Exit        - '
         DC    AL3(GREEN)
         DC    C'Return to MAIN menu'
         DC    X'11D2F1',AL3(TURQ)      R16,C02
         DC    C'Hit ',AL3(WHITE),C'PF03/15 ',AL3(TURQ)
         DC    C'to return to the RPF main menu'
SCR1LEN  EQU   *-SCR1TXT
SCR2TXT  DC    X'27F1C21140401DF8'
         DC    X'11407A'           R01,C59
MSG2     DS    CL22' '
         DC    X'11C150',X'1DF8',C'Option  ===>',X'1DC113',X'401DF0'
SCR2LEN  EQU   *-SCR2TXT
SCR3TXT  DC    X'27F1C21140401DF8' WRITE no-erase
         DC    CL79'-------------------------------- ALLOCATIONS ------X
               ---------------------------'
         DC    X'11C3F0'           R04,C01
         DC    X'1DF8',C'Change options if desired:'
         DC    X'11C650'           R06,C01
         DC    X'1DF5',C'Upper case=  ',X'1DC9'
SCR3UPP  DC    CL3'YES',X'1DF0',C'(YES or NO)'
         DC    X'11C760'           R07,C01
         DC    X'1DF5',C'Load append= ',X'1DC9'
SCR3APP  DC    CL3'NO ',X'1DF0',C'(YES or NO)'
         DC    X'11C8F0',X'1DF5',C'Line numbers=',X'1DC9' R08,C01
SCR3NUM  DC    CL3'YES',X'1DF0',C'(YES or NO)'
         DC    X'114B50'           R10,C01
         DC    X'1DF8',C'Data Set Information:'
         DC    X'114DF0'           R12,C01
         DC    X'1DF5',C'Member=',X'1DC913'
SCR3MEM  DC    CL8' ',X'1DF5',C',Dsname=',X'1DC9' MEMBER
SCR3DSN  DC    CL44' ',X'1DF0'     DSNAME
         DC    X'114F40'           R13,C01
         DC    X'1DF5',C'Volume=',X'1DC9'
SCR3VOL  DC    CL6' ',X'1DF0',X'114FD2',C',Ddname=',X'1DF8' VOLUME
SCR3DDN  DC    C'RPFWORK ',X'1DF0' DDNAME
         DC    X'11D160',X'1DF5',C'Module=',X'1DC9' R15,C01
SCR3MOD  DC    CL8' ',X'1DF5',C',Master=',X'1DC9'
SCR3MSTR DC    CL44' ',X'1DF0'
         DC    X'11D2F0'           R16,C01
         DC    X'1DF5',C'Volume=',X'1DC9'
SCR3MSTV DC    CL6' ',X'1DF0',X'11D3C2',C',Ddname=',X'1DF8' VOLUME
SCR3DDNM DC    C'MASTER  ',X'1DF0' DDNAME
         DC    X'11D550',X'1DF5',C'Panmod=',X'1DC9' R18,C01
SCR3MODP DC    CL10' ',X'1DF5',C',Panlib=',X'1DC9'
SCR3PANL DC    CL44' ',X'1DF0'
         DC    X'11D660'           R19,C01
         DC    X'1DF5',C'Volume=',X'1DC9'
SCR3PANV DC    CL6' ',X'1DF5',X'11D6F4',C',Ddname=',X'1DF8' VOLUME
SCR3DDNP DC    C'RPFPAN  ',X'1DF0' DDNAME
SCR3LEN  EQU   *-SCR3TXT           LENGTH SCREEN
SCR4TXT  DC    X'27F1C01140401DF8' WRITE noERASE LOCK
         DC    CL57'RPF session defaults: -----------------------------X
               ------'
         DC    X'11407A'           R01,C59
MSG4     DC    CL22'----------------------'
         DC    X'11C371'           R04,C02
         DC    AL3(YELLOW),C'Change session defaults if desired:'
         DC    X'11C650',AL3(TURQ) R06,C01
         DC    X'1DF5',C'WS-SIZE  =',X'1DC913',AL3(RED)
SCR4WSS  DC    CL7'0000000',X'1DF0',AL3(TURQ)                      @rp4
         DC    X'11C670',C'(Number of lines)'    R06,C33           @rp4
         DC    X'11C760'           R07,C01
         DC    X'1DF5',C'OUT CLASS=',X'1DC9',AL3(RED)
SCR4OUT  DC    CL1'O',X'1DF0',AL3(TURQ)                            @rp4
         DC    X'11C840',C'(Output class)'       R07,C33           @rp4
         DC    X'11C8F0',X'1DF5',C'PRINTER  =',X'1DC9' R08,C01
         DC    AL3(RED)
SCR4PRT  DC    CL8' ',X'1DF0',AL3(TURQ)                            @rp4
         DC    X'11C950',C'(Local printer name)' R08,C33           @rp4
         DC    X'114A40',X'1DF5',C'LOGGING  =',X'1DC9' R09,C01
         DC    AL3(RED)
SCR4LOG  DC    CL3'NO ',X'1DF0',AL3(TURQ)                          @rp4
         DC    X'114A60',C'(Yes or No)'          R09,C33           @rp4
         DC    X'114B50',X'1DF5',C'NULLS    =',X'1DC9' R10,C01
         DC    AL3(RED)
SCR4NUL  DC    CL3'YES',X'1DF0',AL3(TURQ)                          @rp4
         DC    X'114B70',C'(Yes or No, for EDIT only)' R10,C33     @rp4
         DC    X'114C60',X'1DF5',C'AUTOSAVE =',X'1DC9' R11,C01     @rp1
         DC    AL3(RED)                                            @rp2
SCR4AUTO DC    CL1'N',X'1DF0',AL3(TURQ)                            @rp2
         DC    X'114D40',C'(Y or N, for EDIT only)'    R11,C33     @rp4
         DC    X'114DF0',X'1DF5',C'SUBMIT   =',X'1DC9' R12,C01     @rp2
         DC    AL3(RED)                                            @rp2
SCR4SUB  DC    CL3'TSO',X'1DF0',AL3(TURQ)                          @rp4
         DC    X'114E50',C'(TSO or RPF)'               R12,C33     @rp4
         DC    X'114F40',X'1DF5',C'DFT PFX  =',X'1DC9' R13,C01     @rp4
         DC    AL3(RED)                                            @rp4
SCR4PFX  DC    CL17' ',X'1DF0',AL3(TURQ)                           @rp4
         DC    X'114F60'                               R13,C33     @rp4
         DC    C'(Default prefix in dataset list)'                 @rp4
         DC    X'115050',X'1DF5',C'ASM PROG =',X'1DC9' R14,C01     @rp4
         DC    AL3(RED)                                            @rp4
SCR4ASM  DC    CL8' ',X'1DF0',AL3(TURQ)                            @rp5
         DC    X'115070'                               R14,C33     @rp5
         DC    C'(Default Assembler program name)'                 @rp5
         DC    X'11D160',X'1DF5',C'REPLACE  =',X'1DC9' R15,C01     @rp5
         DC    AL3(RED)                                            @rp5
SCR4REP  DC    CL3'NO ',X'1DF0',AL3(TURQ)                          @rp5
         DC    X'11D240'                               R15,C33     @rp5
         DC    C'(Replace like members in Move/Copy)'              @rp4
         DC    X'1DF0'
SCR4LEN  EQU   *-SCR4TXT           LENGTH SCREEN
SCR6TXT  DC    X'27F1C01140401DF8' WRITE ERASE LOCK
         DC    CL57'RPF Assembler and linkage editor defaults: --------X
               ------'
         DC    X'11407A'           R01,C59
MSG6     DC    CL22'----------------------'
         DC    X'11C260'           R03,C01
         DC    X'1DF8',C'Assemler defaults:'
         DC    X'11C540',X'1DF5'   R05,C01
CMAC1    DC    CL12'Maclib1 DSN=',X'1DC913'
SCR6MAC1 DC    CL44' ',X'1DF0',X'11C650',X'1DF5'  r 06,c01
CMAC2    DC    CL12'Maclib2 DSN=',X'1DC9'
SCR6MAC2 DC    CL44' ',X'1DF0',X'11C760',X'1DF5'  r 07,c01
CMAC3    DC    CL12'Maclib3 DSN=',X'1DC9'
SCR6MAC3 DC    CL44' ',X'1DF0',X'11C8F0',X'1DF5'  r 08,c01
CMAC4    DC    CL12'Maclib4 DSN=',X'1DC9'
SCR6MAC4 DC    CL44' ',X'1DF0',X'114A40',X'1DF5'  r 09,c01
CMAC5    DC    CL12'Maclib5 DSN=',X'1DC9'
SCR6MAC5 DC    CL44' ',X'1DF0',X'114B50',X'1DF5'  r 10,c01
CMAC6    DC    CL12'Maclib6 DSN=',X'1DC9'
SCR6MAC6 DC    CL44' ',X'1DF0',X'114DF0',X'1DF5'  r 12,c01
CAPRM    DC    CL12'ASM parm   =',X'1DC9'
SCR6APRM DC    CL30' ',X'1DF0',X'114F40',X'1DF5'  r 13,C01
CBPRM    DC    CL12'Binder parm=',X'1DC9'
SCR6BPRM DC    CL30' ',X'1DF0',X'11D160',X'1DF8'  r 15,c01
         DC    C'Binder control statements:'
         DC    X'11D2F0',X'1DF9'        R16,c01
C1       DC    C'1>'
STMNT1   DC    X'1DC1',CL69' ',X'1DF0',X'11D440',X'1DF9'     r 17,01
C2       DC    C'2>'
STMNT2   DC    X'1DC1',CL69' ',X'1DF0',X'11D550',X'1DF9'     r 18,01
C3       DC    C'3>'
STMNT3   DC    X'1DC1',CL69' ',X'1DF0',X'11D660',X'1DF9'     r 19,01
C4       DC    C'4>'
STMNT4   DC    X'1DC1',CL69' ',X'1DF0',X'11D7F0',X'1DF9'     r 20,01
C5       DC    C'5>'
STMNT5   DC    X'1DC1',CL69' ',X'1DF0',X'11D940',X'1DF9'     r 21,01
C6       DC    C'6>'
STMNT6   DC    X'1DC1',CL69' ',X'1DF0'
SCR6LEN  EQU   *-SCR6TXT           LENGTH SCREEN
SCR5TXT  DC    X'27F5C21140401DF8' Write erase
         DC    X'115B601DF0',AL3(TURQ)  R23,C01
         DC    C'Hit   ',AL3(WHITE),C'Enter     ',AL3(TURQ)
         DC    C'to make changes effective'
         DC    X'115CF01DF0'            R24,C01
         DC    C'Press ',AL3(WHITE),C'PF03/PF15 ',AL3(TURQ)
         DC    C'to cancel the changes'
SCR5LEN  EQU   *-SCR5TXT           LENGTH SCREEN
ERR1TXT  DC    CL22'--------Invalid option'
ERR3TXT  DC    CL22'--------For future use'
ERR4TXT  DC    CL22'-GETMAIN failed, Retry'
ERR7TXT  DC    CL22'-Freemain failed, Stop'
ERR8TXT  DC    CL22'Invalid workspace size'
ERR9TXT  DC    CL22'--Invalid SYSOUT class'
ERRATXT  DC    CL22'---Nulls not YES or NO'
ERRBTXT  DC    CL22'-SUBMIT not TSO or RPF'
ERRCTXT  DC    CL22'-Replace not YES or NO'
MSG1TXT  DC    CL22'-------------- Updated'
MSG2TXT  DC    CL22'-Upd. size destroys ws'
SWITCH   DS    CL1
*                                  1... ....  NO-GO, SKIP FREE/GET MAIN
*                                  .1.. ....  RESERVED
*                                  ..1. ....  RESERVED
*                                  ...1 ....  RESERVED
*                                  .... 1...  RESERVED
*                                  .... .1..  RESERVED
*                                  .... ..1.  RESERVED
*                                  .... ...1  RESERVED
         TITLE 'WORKAREAS, CONSTANTS AND CONTROL BLOCKS'
FFFFFFFF DC    7F'-1'
F0000    DC    F'0'                0000
F0004    DC    F'4'
F0008    DC    F'8'
F0012    DC    F'12'
F0016    DC    F'16'
F0020    DC    F'20'
RLENGTH  DC    A(NEXTENT)          LENGTH OF WS ENTRY
SW       DC    X'00'
NOTFREE  EQU   X'80'
ZERO     DC    PL3'0'              000
DWB      DC    D'0'                DOUBLE WORD
SAVE5    DS    F
SAVE14   DS    F
SAVE14A  DS    F
SAVE14S  DS    F
SAVE14N  DS    F
SAVE14C  DS    F
NUMFLD   DS    CL8
WRKFLD   DS    CL8
GETMSAVE DS    F                   SAVE AREA FOR GETMLEN
DEFTEMP  DS    CL1
BUFFER   DS    CL840
CHARSTXT DC    C'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'
VSAMACB  ACB   AM=VSAM,MACRF=(KEY,DIR,OUT),DDNAME=DATABASE
*
VSAMRPL  RPL   ACB=VSAMACB,OPTCD=(KEY,DIR,UPD,MVE),                    X
               AREA=DBAREA,AREALEN=AREALEN,RECLEN=AREALEN,             X
               ARG=DBUID
*
BUFMAC1  DS    CL44                    Maclib 1 from screen
BUFMAC2  DS    CL44                    Maclib 2 from screen
BUFMAC3  DS    CL44                    Maclib 3 from screen
BUFMAC4  DS    CL44                    Maclib 4 from screen
BUFMAC5  DS    CL44                    Maclib 5 from screen
BUFMAC6  DS    CL44                    Maclib 6 from screen
BUFAPRM  DS    CL30                    Assembler parm from screen
BUFBPRM  DS    CL30                    Binder parm from screen
BUFC1    DS    CL69                    1st binder stmnt from screen
BUFC2    DS    CL69                    2nd binder stmnt from screen
BUFC3    DS    CL69                    3rd binder stmnt from screen
BUFC4    DS    CL69                    4th binder stmnt from screen
BUFC5    DS    CL69                    5th binder stmnt from screen
BUFC6    DS    CL69                    6th binder stmnt from screen
*
DBAREA   EQU   *
DBUID    DS    CL8                 8
DBDSN    DS    CL44                52
DBVOL    DS    CL6                 58
DBMEM    DS    CL8                 66
DBFOLD   DS    CL3                 69
DBCLS    DS    CL1                 70
DBNUM    DS    CL3                 73
DBLOG    DS    CL3                 76
DBAPP    DS    CL3                 79
DBSIZE   DS    CL4                 83
DBPFK01  DS    CL156               239
DBPFK07  DS    CL156               395
DBPFK13  DS    CL156               551
DBPFK19  DS    CL156               707
DBMSTR   DS    CL44                751
DBMOD    DS    CL8                 759
DBMSVOL  DS    CL6                 765
DBPANLIB DS    CL44                809
DBPANMOD DS    CL10                819
DBPANVOL DS    CL6                 825
DBNULL   DS    CL3                 828
DBPRT    DS    CL8                 836
DBMAC1   DS    CL44                880
DBMAC2   DS    CL44                924
DBMAC3   DS    CL44                968
DBMAC4   DS    CL44               1012
DBMAC5   DS    CL44               1056
DBMAC6   DS    CL44               1100
DBASPA   DS    CL30               1130
DBLKPA   DS    CL30               1160
DBLK1    DS    CL69               1229
DBLK2    DS    CL69               1298
DBLK3    DS    CL69               1367
DBLK4    DS    CL69               1436
DBLK5    DS    CL69               1505
DBLK6    DS    CL69               1574
DBAUTO   DS    C                  1575                             @rp1
DBSUB    DS    CL3                1578                             @rp2
DBREPL   DS    CL3                1581                             @rp3
DBPFX    DS    CL17               1598                             @rp4
DBASM    DS    CL8                1606                             @rp5
DBFILLER DS    CL144              1750                             @rp5
DBEND    EQU   *
AREALEN  EQU   DBEND-DBAREA
         LTORG
         TITLE 'ALLOCATION CONTROL BLOCKS'
         SYALLOC MF=L
         TITLE 'RPFCOMM DSECT'
COMMAREA RPFCOMM
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         END
