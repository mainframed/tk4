RPFCNVDT CSECT
*        AUTHOR:  ROB PRINS, SKYBIRD SYSTEMS
*
*        ATTRIBUTE: REENTRANT,REUSABLE
*        HOW TO CALL:
*                 CALL  CONVDATE,(DATE,OUTPUT)
*                 ....
*        DATE     DS    PL3/PL4        DATE PACKED SIGNED (YY)YYDDD
*        OUTPUT   DS    0CL49          DATE TO BE GIVEN BACK
*        DAYNUM   DS    CL2            01 IS SUNDAY 07 IS SATURDAY
*        DAYNAME1 DS    CL09           ENGLISH
*        DAYNAME2 DS    CL09           DUTCH
*                 DS    CL1
*        DD       DS    CL2            DATE (E.G. 28 FOR E.G. 28 DEC)
*                 DS    CL1
*        MONTHNUM DS    CL2            01 IS JANUARY 12 IS DECEMBER
*        M#NAME1  DS    CL09           ENGLISH
*        M#NAME2  DS    CL09           DUTCH
*                 DS    CL1
*        JJ       DS    CL4            YEAR
*
*        MODIFICATION AT 18 JAN 1996 BY RPR:
*        ADD CENTURY SUPPORT IN THIS ROUTINE.
*
*        CONVDATE COMPUTES THE DAYS AND DATES IN A CORRECT WAY
*        UNTIL DECEMBER 31,2084. IF THE FIRST PARM IS 4 BYTES
*        AND THE SECOND PARM CONTAINS X'FF' IN THE FIRST BYTE
*        THEN YOU GET A CORRECT DATE UNTIL DECEMBER 31,2099.
*
*        23APR1997 RPR: CONVDATE USE NO SLIDING CENTURY IF THE
*                       FIRST BYTE OF THE OUTPUT FIELD CONTAINS X'FF'.
*                       IS FIRST BYTE = FF, THEN CONVDATE ASSUMES
*                       THAT THE FIRST PARM (THE DATE) IS A FOUR
*                       BYTE PACKED FIELD CONTAING YYYYDDDF
*
*        05FEB1999 RPR: PARM1 CAN ALSO BE A 'SMF DATE' (CCYYDDD)
*                       IF SO, 19 WILL BE ADDED TO 'CC' TO MAKE
*                       IT YYYYDDD
*
*        06JUL1999 RPR: IF PARM1 = PACKED ZERO OR HEX ZERO
*                       THE CURRENT DATE WILL BE RETURNED
*
*        05aug1999 CRo: LV=544 (72+472) + MVC220+252 (472)
*                       make TABLE and CONST equal = 472 bytes
*
         STM   14,12,12(13)            Save registers
         LR    R10,R15                 Base register
         USING RPFCNVDT,R10            Addres this module
         LR    R2,R1                   Save register 1
         GETMAIN RU,LV=LVLL            Obtain SAVE & workarea
         ST    R1,8(R13)               Foreward pointer
         ST    R13,4(R1)               Backward pointer
         LR    R13,R1                  New savearea
         USING TABLE,R13               472 byte workarea
***********************************************************************
*
* move TABEL to GETMAINed area based by R13                   cr05aug99
*
* NOTE  The length of GETMAIN=544=totaal van 72+472 (Including SA!)
* NOTE  The length of TABLE is max 472 bytes !!!!!!!!
* NOTE  The length and order of TABLE and CONST should be equal !!!
*
*
         MVC   TABLE+72(240),CONST     INIT. GETMAIN AREA     cr05aug99
         MVC   TABLE+312(232),CONST+240                       cr05aug99
***********************************************************************
         LM    R8,R9,0(R2)             LOAD PARAMETERS
         MVC   JJ(2),=C'  '            BLANK AREA
         CLI   0(R9),X'FF'             4 BYTES DATE FIELD ?       @2000
         BNE   DATE3                   NO: BRANCH                 @2000
         OI    SW,$DATE4               4 BYTES INPUT DATE       @RP9907
         CLC   0(4,R8),=X'0000000C'    NO DATE SUPPLIED ?       @RP9907
         BE    @NODATE                 YES: TAKE CURRENT DATE   @RP9907
         CLC   0(4,R8),=X'0000000D'    NO DATE SUPPLIED ?       @RP9907
         BE    @NODATE                 YES: TAKE CURRENT DATE   @RP9907
         CLC   0(4,R8),=X'0000000F'    NO DATE SUPPLIED ?       @RP9907
         BE    @NODATE                 YES: TAKE CURRENT DATE   @RP9907
         CLC   0(3,R8),=X'00000000'    NO DATE SUPPLIED ?       @RP9907
         BNE   @DATE                   NO: FIELD IS SUPPLIED    @RP9907
@NODATE  DS    0H
         TIME  DEC                     OBTAIN CURRENT DATE      @RP9907
         ST    R1,DATEFLD              SAVE FIELD               @RP9907
         UNPK  DAYNBCC(7),DATEFLD      UNPACK                   @RP9907
         OI    SW,$DATE4               4 BYTE DATE FIELD SUPPL. @RP9907
         B     DATE0                   BRANCH OVER ROUTINE      @RP9907
@DATE    DS    0H                                               @RP9907
         UNPK  DAYNBCC(7),0(4,R8)      UNPACK 4 BYTES             @2000
DATE0    DS    0H                                               @RP9907
         OI    DAYNBCC+6,X'F0'         CLEAR SIGN                 @2000
         CLC   DAYNBCC,=C'00'          SMF DATE (00YYDDD)         @2000
*                                      CC=00 = 19                 @2000
         BNE   DATE1                   NO TEST IF '01'            @2000
         MVC   DAYNBCC,=C'19'          MAKE IT '19'               @2000
DATE1    DS    0H                                                 @2000
         CLC   DAYNBCC,=C'01'          SMF DATE (01YYDDD)         @2000
*                                      CC=01 = 20                 @2000
         BNE   DATE2                   NO IT'S A NORMAL DATE      @2000
         MVC   DAYNBCC,=C'20'          MAKE IT '20'               @2000
DATE2    DS    0H                                                 @2000
         CLC   DAYNBCC,=C'19'          BELOW 19 ???               @2000
         BL    ERROR                   YES: ERROR                 @2000
         MVC   CC(2),DAYNBCC           MOVE CENTURY               @2000
         B     DATE4                   AND BRANCH                 @2000
DATE3    DS    0H                                                 @2000
         CLC   0(3,R8),=X'00000C'      NO DATE SUPPLIED ?       @RP9907
         BE    @NODATE                 YES: TAKE CURRENT DATE   @RP9907
         CLC   0(3,R8),=X'00000D'      NO DATE SUPPLIED ?       @RP9907
         BE    @NODATE                 YES: TAKE CURRENT DATE   @RP9907
         CLC   0(3,R8),=X'00000F'      NO DATE SUPPLIED ?       @RP9907
         BE    @NODATE                 YES: TAKE CURRENT DATE   @RP9907
         CLC   0(3,R8),=X'000000'      NO DATE SUPPLIED ?       @RP9907
         BE    @NODATE                 YES: TAKE CURRENT DATE   @RP9907
         UNPK  DAYNB(5),0(3,8)         UNPK YYDDD
         OI    DAYNB+4,X'F0'           CLEAR SIGN
DATE4    DS    0H                                                 @2000
         PACK  YEAR(2),DAYNB(2)        PACK YEAR
         PACK  DAY(2),DAYNB+2(3)       PACK DAY
         TM    SW,$DATE4               ALREADY A GOOD CENTURY?    @2000
         BO    DATE5                   OK: BRANCH                 @2000
         MVC   CC,=C'19'               DEFAULT 19XX               @2000
         CP    YEAR(2),SLIDE           1973 OR LOWER ?
         BH    DATE5                   ) SAME LOGIC AS OPC/ESA
         MVC   CC,=C'20'               LOWER THAN 1973 ASSUME 2000 >
DATE5    DS    0H                                                 @2000
         CP    DAY,=P'0'               CHECK DATE
         BNH   ERROR                   INVALID DATE
         ZAP   DWB,YEAR
         CVB   R2,DWB                  MAKE YEAR BINARY
         XR    R3,R3
         SRDL  R2,2                    TEST FOR LEAP YEAR
         LTR   R3,R3                   LEAP YEAR ?
         BNZ   A000                    BRANCH IF NOT
         MVI   MONTHTAB+21,X'1D'       FEBRUARY 29 DAYS
         CP    DAY,=P'366'             MAX DAYNUMBER LEAP YEAR ?
         BH    ERROR                   INVALID DATE IF HIGH
         B     A001
A000     CP    DAY,=P'365'             MAX DATE NON LEAP YEAR
         BH    ERROR                   INVALID DATE IF HIGH
A001     LA    R2,MONTHTAB             NAME TABLE MONTHS
         LA    R3,1                    INIT JANUARY
         ZAP   DWB,DAY
         CVB   R4,DWB                  MAKE DAY BINARY
A003     XR    R5,R5                   CLEAR REGISTER
         IC    R5,0(R2)                INSERT # OF DAYS MONTH
         CR    R4,R5                   MONTH REACHED ?
         BNH   A005                    BRANCH IF YES
         LA    R3,1(R3)                COUNT MONTH
         SR    R4,R5                   SUBTRACT DAYS OF MONTH
         LA    R2,21(R2)               NEXT ENTRY NAME TABLE
         B     A003                    BRANCH BACK
A005     MH    R3,=H'21'               LENGTH MONTH TABLE
         LA    R5,MONTHTAB             BEGINADDRESS
         AR    R3,R5                   RIGHT OFFSET
         MVC   MM,1(R2)                MOVE IN FIELD
         UNPK  JJ(2),YEAR(2)           YEAR IN FIELD
         OI    JJ+1,X'F0'
         CVD   R4,DWB                  RIGTH DAY OF MONTH
         UNPK  DD(2),DWB               IN FIELD
         OI    DD+1,X'F0'
         LA    R4,0
         LA    R3,0                    1 JAN 1900 IS MONDAY
*---------------------------------------------------------------------*
*        1 JAN 1900 IS MONDAY, BUT SET THE OFFSET IN THE DAYTABLE     *
*        TO SUNDAY. THE TEST FOR A LEAP YEAR WILL BE  SET TO 'TRUE'   *
*        FOR THE YEAR 1900, BUT THIS YEAR IS NOT A LEAP YEAR.         *
*        IF THE YEAR IS 71 OR BELOW, THIS ROUTINE ASSUMES A YEAR      *
*        ABOVE 2000.                                                  *
*        IN THIS CASE THE OFFSET IN THE DAYTABLE (R3) WILL BE         *
*        SET TO '6' (1 JAN 2000 IS A SATURDAY AND 2000 IS A LEAP      *
*        YEAR AND '6' IS POINTING TO SATURDAY)                        *
*---------------------------------------------------------------------*
         CLC   CC,=C'20'               YEAR IS ABOVE 2000 ?
         BNE   *+8                     NO: BRANCH
         LA    R3,6                    POINT TO SATURDAY
*+8
         ZAP   DWB,YEAR
         CVB   R2,DWB                  MAKE YEAR BINARY
A006     EQU   *
         XR    R5,R5                   CLEAR REGISTER
         CR    R4,R2                   YEAR REACHED ?
         BE    A009                    BRANCH IF YES
         ST    R4,SAVE4                SAVE R4
         SRDL  R4,2                    TEST LEAP YEAR
         LA    R3,1(R3)
         LTR   R5,R5                   LEAP YEAR ?
         BNZ   A007                    BRANCH IF NOT
         LA    R3,1(R3)
A007     L     R4,SAVE4                RESTORE R4
         LA    R4,1(R4)
         B     A006
A009     ZAP   DWB,DAY                 DAYS
         CVB   R2,DWB                  MAKE BINARY
         AR    R3,R2                   ADD TO OFFSET DAYTABLE
         BCTR  R3,0
         XR    R2,R2
         D     R2,=F'7'                # DAYS IN A WEEK
         MH    R2,=H'20'               LENGTH DAY TABLE
         LA    R3,DAYTAB               BEGINADDRESS DAY TABLE
         AR    R3,R2                   RIGTH OFFSET
         MVC   DAYNAME(20),0(R3)       DAYNAME IN FIELD
END      MVC   0(49,R9),DDMMYY         TO USER
BACK     DS    0H                      BACK TO USER
         LR    R2,R13                  Save reg.14
         L     R13,4(R13)              Pickup callers savearea
         FREEMAIN R,LV=LVLL,A=(2)      Free dynamic area
         RETURN (14,12),RC=0           Return to caller
ERROR    EQU   *
         MVC   DAYNAME,=C'00UNKNOWN  ONBEKEND '
         MVC   MM(2),=C'00'
         MVC   MM+2(4),=C'DATE'
         MVC   MM+6(5),DAYNB
         MVC   MM+11(4),=C'DAT.'
         MVC   MM+15(5),DAYNB          INVALID DAYNUMBER
         B     END                     END OF ROUTINE
         TITLE 'CONSTANTS AND VARIABLES'
SLIDE    DC    P'72'                   SLIDING DATE               @2000
CONST    DS    D
         DS    F
         DC    F'0'
         DC    X'00'
         DS    0CL49
         DS    CL20
         DC    C' '
         DS    CL2
         DC    C' '
         DS    CL20
         DC    C' XX'
         DS    CL2
         DS    PL2
         DS    PL2
         DC    AL1(31),C'01',CL9'January',CL9'Januari'
         DC    AL1(28),C'02',CL9'February',CL9'Februari'
         DC    AL1(31),C'03',CL9'March',CL9'Maart'
         DC    AL1(30),C'04',CL9'April',CL9'April'
         DC    AL1(31),C'05',CL9'May',CL9'Mei'
         DC    AL1(30),C'06',CL9'June',CL9'Juni'
         DC    AL1(31),C'07',CL9'July',CL9'Juli'
         DC    AL1(31),C'08',CL9'August',CL9'Augustus'
         DC    AL1(30),C'09',CL9'September',CL9'September'
         DC    AL1(31),C'10',CL9'October',CL9'Oktober'
         DC    AL1(30),C'11',CL9'November',CL9'November'
         DC    AL1(31),C'12',CL9'December',CL9'December'
         DC    C'01',CL9'Sunday',CL9'Zondag'
         DC    C'02',CL9'Monday',CL9'Maandag'
         DC    C'03',CL9'Tuesday',CL9'Dinsdag'
         DC    C'04',CL9'Wednesday',CL9'Woensdag'
         DC    C'05',CL9'Thursday',CL9'Donderdag'
         DC    C'06',CL9'Friday',CL9'Vrijdag'
         DC    C'07',CL9'Saturday',CL9'Zaterdag'
         DS    CL2                                            cr05aug99
         DS    CL5
         DS    CL3                                            cr05aug99
CONSTEND EQU   *                                              cr05aug99
* total = 472 bytes!
         TITLE 'DYNAMIC WORKAREA'
TABLE    DSECT
         DS    18F
DWB      DS    D
DATEFLD  DS    F
SAVE4    DS    F
*
SW       DS    X                                                @RP9907
$DATE4   EQU   128                FOUR BYTES DATE FIELD SUPPLIED@RP9907
*
DDMMYY   DS    0CL49
DAYNAME  DS    CL20
         DS    CL1
DD       DS    CL2
         DS    CL1                        LAYOUT SECOND PARM
MM       DS    CL20
         DS    C
CC       DS    CL2
JJ       DS    CL2
*
YEAR     DS    PL2
DAY      DS    PL2
MONTHTAB DS    CL21
         DS    CL21
         DS    CL21
         DS    CL21
         DS    CL21
         DS    CL21
         DS    CL21
         DS    CL21
         DS    CL21
         DS    CL21
         DS    CL21
         DS    CL21
DAYTAB   DS    CL20
         DS    CL20
         DS    CL20
         DS    CL20
         DS    CL20
         DS    CL20
         DS    CL20
DAYNBCC  DS    CL2                                                @2000
DAYNB    DS    CL5
FILLER   DS    CL3               for future use               cr05aug99
* total = 472 bytes!                                          cr05aug99
TABLEEND EQU   *                                              cr05aug99
*
LVLL     EQU   72+472
CONSTLL  EQU   CONSTEND-CONST+72  excl.72                     cr05aug99
TABLELL  EQU   TABLEEND-TABLE                                 cr05aug99
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         END
