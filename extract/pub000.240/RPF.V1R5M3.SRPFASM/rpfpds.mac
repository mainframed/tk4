         MACRO
&NAME    SORT  &TAB,&LEN1,&LEN2,&ENTRY,&START,&TYPE=C,&ORDER=A
         LCLC  &L
&L       SETC  'L&SYSNDX'
.* THIS MACRO SORTS A CORE TABLE
.* AND USED IN THE RPF PROGRAMS FROM SKYBIRD SYSTEMS
.* TAB = ADDRESS TABLE
.* LEN1 = LENGTH OF 1 ENTRY
.* LEN2 = LENGTH OF SORT FIELD
.* ENTRY = NUMBER OF ENTRIES
.* START = OFFSET SORT FIELD IN ENTRY
.* TYPE = TYPE OF SORT (C=CHARACTER, P=PACKED)
.* ORDER = A OR D (A=ASCENDING, D=DESCENDING ORDER)
         AIF   ('&TAB' EQ '').FOUTADR
         AIF   ('&LEN1' EQ '').FOUTL1
         AIF   ('&LEN2' EQ '').FOUTL2
         AIF   ('&ENTRY' EQ '').FOUTENT
         AIF   ('&ORDER' EQ 'A').TEST1
         AIF   ('&ORDER' EQ 'D').TEST1
.FOUTOR  MNOTE 14,'***** ORDER SHOULD BE A (ASCENDING) OR D (DESCENDING*
               )'
         AGO   .FOUT
.TEST1   ANOP
         AIF   ('&TYPE' EQ 'C').CHAR
         AIF   ('&TYPE' EQ 'P').CHAR
         MNOTE 14,'***** TYPE NOT ''C'' OR ''P'''
.FOUT    MNOTE *,'***** NO MACRO EXPANSION.'
         MEXIT
.FOUTADR MNOTE 14,'***** WRONG TABLE ADDRESS.'
         AGO   .FOUT
.FOUTL1  MNOTE 14,'***** WRONG LENGTH 1.'
         AGO   .FOUT
.FOUTL2  MNOTE 14,'PPPPP WRONG LENGTH 2.'
         AGO   .FOUT
.FOUTENT MNOTE 14,'***** WRONG NUMBER OF ENTRIES.'
         AGO   .FOUT
.*
.* OPERANDS ARE GOOD.
.*
.*
.CHAR    ANOP
         CNOP  0,4            FULLWORD BOUNDARY.
&NAME    STM   3,4,&L.A
         B     &L.C
&L.A     DS    F
         DS    F
&L.F     DS    F
&L.B     DS    F
         AIF   ('&TAB'(1,1) EQ '(').TABREG1
&L.C     LA    3,&TAB
         AGO   .STORE3
.TABREG1 ANOP
&L.C     LR    3,&TAB(1)
.STORE3  ANOP
         ST    3,&L.B
         AIF   ('&ENTRY'(1,1) EQ '(').ENTRREG
         B     &L.E
&L.D     DC    A((&ENTRY-1)*&LEN1)
         AGO   .ADD3
.ENTRREG ANOP
         BCTR  &ENTRY(1),0
         MH    &ENTRY(1),=H'&LEN1'
         ST    &ENTRY(1),&L.D
         B     &L.E
&L.D     DS    F
.ADD3    ANOP
&L.E     L     4,&L.D
         AR    3,4
         ST    3,&L.F
         AIF   ('&TAB'(1,1) EQ '(').TABREG2
         LA    3,&TAB
         AGO   .LOAD4
.TABREG2 ANOP
         LR    3,&TAB(1)
.LOAD4   ANOP
         LA    4,&LEN1.(3)
         AIF   ('&TYPE' EQ 'P').PACKED
&L.H     CLC   &START.(&LEN2,3),&START.(4)
         AGO   .VERDER
.PACKED  ANOP
&L.H     CP    &START.(&LEN2,3),&START.(&LEN2,4)
.VERDER  ANOP
         AIF   ('&ORDER' EQ 'D').BR1
         BH    &L.G
         AGO   .BR2
.BR1     ANOP
         BL    &L.G
.BR2     ANOP
         LA    3,&LEN1.(3)
         LA    4,&LEN1.(4)
         C     3,&L.F
         BE    &L.I
         B     &L.H
&L.G     XC    0(&LEN1,3),0(4)
         XC    0(&LEN1,4),0(3)
         XC    0(&LEN1,3),0(4)
         S     3,=F'&LEN1'
         S     4,=F'&LEN1'
         C     3,&L.B
         BNL   &L.H
         A     3,=F'&LEN1'
         A     4,=F'&LEN1'
         B     &L.H
&L.I     LM    3,4,&L.A
         MEND
RPFPDS   TITLE 'PDS MAINTENANCE ROUTINE'
*---------------------------------------------------------------------*
*                                                                     *
*        MODULE         RPFPDS.                                       *
*                                                                     *
*        FUNCTION:      PROCESS THE DIRECTORY OF A PDS                *
*                       THIS MODULE DISPLAYS A DIRECTORY LIST ON THE  *
*                       SCREEN TO LOOK IN THE PDS.                    *
*                       BEFORE EACH MEMBER YOU CAN SPECIFY THE        *
*                       FOLLOWING COMMANDS:                           *
*                       A: ASSIGN AN ALIAS, TYPE IN 'NEWNAME' TOO.    *
*                     B/V: BROWSE THE MEMBER, RPFBRO  WILL BE INVOKED.*
*                       D: DELETE THE MEMBER, RPFPDS WILL ASK THIS.   *
*                       E: EDIT THE MEMBER, RPFEDIT WILL BE INVOKED.  *
*                       P: PRINT THE MEMBER IN THE DEFAULT CLASS      *
*                       R: RENAME THE MEMBER, TYPE IN 'NEWNAME' TOO.  *
*                       X: QUEUE THE MEMBER FOR TRANSMISSION TO       *
*                          ANOTHER NJE NODE.                          *
*                                                                     *
*                       RPFPDS PRIMARY COMMANDS:                      *
*                       -  BOTTOM:   SCROLL TO LAST  PAGE (ALIAS 'B') *
*                       -  END:      TERMINATE PDS.                   *
*                       -  L MEMBER  LOCATE AT MEMBER 'MEMBER'.       *
*                       -  PFK:      ALTER PROGRAM FUNCTION KEYS.     *
*                       -  RESET:    RECREATE THE MEMBER LIST         *
*                       -  RETURN:   TERMINATE PDS AND RETURN TO MAIN *
*                       -  SCB:      SCROLL 1 PAGE BACKWARD.          *
*                       -  SCF:      SCROLL 1 PAGE FOREWARD.          *
*                       -  S member: EDIT/BROWSE Member               *
*                       -  SORT:     SORT WORKSPACE ON MEMBERNAME     *
*                       -  SORT TTR: SORT WORKSPACE ON TTR ORDER      *
*                       -  SORT CHA: SORT WORKSPACE ON DATE CHANGED   *
*                       -  SORT SIZE: SORT WORKSPACE ON MEMBER SIZE   *
*                       -  TOP:      SCROLL TO FIRST PAGE (ALIAS 'T') *
*                       -  XMIT:     TRANSMIT PREVIOUS QUEUED MEMBERS *
*                                    TO ANOTHER NJE NODE.             *
*                       -  =n or =n.n Return to RPFMAIN and exec.  @rp1
*                          option 'n' or option 'n.n'              @rp1
*                                                                     *
*                       IF THE PRIMARY COMMANDS ARE PRECEDED BY AN    *
*                       AMPHERSAND ('&&') THE COMMAND WILL BE REPEATED*
*                       IN THE COMMAND LINE AFTER EXECUTION.          *
*                                                                     *
*        SUBROUTINES:   RPFBRO,   THE BROWSE AND PRINT FUNCTION       *
*                       RPFEDIT,  THE EDITOR                          *
*                       RPFDAIR,  DYNAMIC ALLOCATION INTERFACE        *
*                                                                     *
*        NOTE: THE SYS1.MODGEN MACRO LIBRARY SHOULD BE INCLUDED.      *
*                                                                     *
*        25APR1997 RPR: RPFPDS MADE Y2000 COMPLIANT.                  *
*        06JUN2001 RPR: S member command added, SORT cmd added        *
*        11JUL2002 RPR: Leading zeroes in member size removed         *
*        17JUL2002 RPR: Exit at once if flag $RETURN is on         @rp1
*                       Add command '=n'/'=n.n'                    @rp1
*        21aug2002 RPR: Support RECFM=VB for print and browse      @rp3
*        14oct2002 RPR: Date in screen converted                   @rp4
*        16oct2002 RPR: Returncode browse tested                   @rp5
*        07nov2002 RPR: Extended colors supported                     *
*        07feb2003 RPR: GTSIZE removed, COMMSIZE value used        @rp7
*        20jun2003      Protect unused input fields                @pw*
*        23jun2004 RPr: Allow use of DEL key in CMD field          @rp8
*                                                                     *
*                                                                     *
*------------------------------------------ (C)-2004 SKYBIRD SYSTEMS -*
         SPACE 2
RPFPDS   CSECT                         *
         SAVE  (14,12),,*              SAVE REGISTERS
         USING RPFPDS,R15              GET LOCAL ADDRESSABILITY
         LA    R14,SAVE                NEW SAVE AREA
         ST    R13,SAVE+4              BACKWARD POINTER
         ST    R14,8(R13)              FORWARD POINTER
         LR    R13,R14                 EXCHANGE SAVEAREA
         DROP  R15                     KILL LOCAL ADDRESSABILITY
         LA    R12,2048(R13)           2ND BASE REGISTER
         LA    R12,2048(R12)
         LA    R9,2048(R12)            3RD BASE REGISTER
         LA    R9,2048(R9)
         LA    R8,2048(R9)             4TH BASE
         LA    R8,2048(R8)
         USING SAVE,R13,R12,R9,R8      GET ADDRESS VIA R13,R12,R9,R8
         B     RPFINITT                BRANCH AROUND SAVEAREA
*
SAVE     DC    18F'-1'                 SAVE AREA
         DC    CL8'&SYSDATE',C' ',CL8'&SYSTIME'
RPFINITT DS    0H
         L     R11,0(R1)               OBTAIN RPFCOMM AREA
         USING COMMAREA,R11            GET ADDRESSABILITY
         USING SPFDATA,R3              GET ADDRESSABILITY UDATA
         MVI   MSG5,C'-'               CLEAR
         MVC   MSG5+1(L'MSG5-1),MSG5        MESSAGE AREA
         MVI   SW,X'00'                CLEAR SWITH
         MVC   CMDAREA,BLANKS          CLEAR CMDAREA
         MVC   SCR5H,PDSH1             MOVE DEFAULT HEADER
         TM    INFCODE4,$RECFB+$RECVB  Fixed or variable records? @rp3
         BNZ   *+10                    NO: BRANCH                 @rp3
         MVC   SCR5H,PDSH2             ELSE MOVE DIFFERENT HEADER
         CLC   COMMSIZE,=H'24'         24 LINES GOTTEN             @rp7
         BE    START19                 YES: NORMAL 24X80 DISPLAY
         CLC   COMMSIZE,=H'32'         32 LINES GOTTEN ?           @rp7
         BE    START17                 YES: 3278/79 MODEL 3
         CLC   COMMSIZE,=H'43'         43 LINES GOTTEN ?           @rp7
         BNE   START19                 NOT ONE OF ABOVE MODEL 2 DISPLAY
START15  MVC   ERASE(2),=X'277E'       GENERATE WRITE ALTERNATE
         MVC   SCRLEN,F704             MOVE LENTGTH OF OUTPUT SCR.
         MVC   #LINES,=F'40'
         LA    R4,SCR543               LENGTH OF SCREEN TO WRITE
         ST    R4,TPUTLEN              STORE THE RESULT
         LA    R4,LINES40              40 * NEXTENT (88)
         ST    R4,NEXTSCR              STORE THE RESULT
         B     START21
START17  MVC   ERASE(2),=X'277E'       GENERATE WRITE ALTERNATE
         MVC   SCRLEN,F517             MOVE LENTGTH OF OUTPUT SCR.
         MVC   #LINES,=F'29'
         LA    R4,SCR532               LENGTH OF SCREEN TO WRITE
         ST    R4,TPUTLEN              STORE THE RESULT
         LA    R4,LINES29              29 * NEXTENT (88)
         ST    R4,NEXTSCR              STORE THE RESULT
         B     START21                 OK BRANCH
START19  MVC   ERASE(2),=X'27F5'       GENERATE WRITE
         MVC   SCRLEN,F381             MOVE LENGTH OF OUTPUT SCREEN
         MVC   #LINES,=F'21'
         LA    R4,SCR524               LENGTH OF SCREEN TO WRITE
         ST    R4,TPUTLEN              STORE THE RESULT
         LA    R4,LINES21              21 * NEXTENT (88)
         ST    R4,NEXTSCR              STORE THE RESULT
START21  EQU   *
         MVC   SCR5DSN,DSNAME          MOVE DSNAME IN SCREEN
         LA    R3,SCR5DSN+39           POINT TO END OF DSNAME
         LA    R4,36                   LOOP COUNTER
START23  EQU   *
         CLI   0(R3),C' '              TRAILING BLANK FOUND ?
         BNE   START25                 NO: END OF SCAN
         MVI   0(R3),C'-'              REPLACE BY HYPHEN
         BCTR  R3,0                    DECREASE ITS ADDRESS
         BCT   R4,START23              LOOP UNTIL ALL DONE
START25  DS    0H
         L     R2,X'4C'                GET POINTER CVT
         MVC   YYDDD,56(R2)            Get date from CVT           @rp4
         MVI   DDMMYY,X'FF'            Jul. date is 4 bytes        @rp4
         L     R15,EPCNVDT             Entry point RPFCNVDT        @rp4
         CALL  (15),(YYDDD,DDMMYY)     Convert julian to gregorian @rp4
         MVC   JULTODAY(4),CC          Year                        @rp4
         MVC   JULTODAY+4(2),MONNBR    Number of month (eg 1=jan)  @rp4
         MVC   JULTODAY+6(2),DD        Daynumber in the month      @rp4
         ZAP   MEMCNT,=P'0'            INIT MEMBER COUNTER
         TM    INFCODE,SEQALC          NOT A PO DATASET ?
         BNO   PDS000                  BRANCH IF NOT
         MVC   MSG5,ERR5TXT            ERRORMSG
RPFERROR DS    0H                      ERROR ROUTINE
         MVC   LNE5+18(8),=C'*ERROR* ' ERRORMSG
         MVC   LNE5+31(40),ERR6TXT     ERRORMSG
         UNPK  SCR5CNT,MEMCNT
         OI    SCR5CNT+4,X'F0'         CLEAR SIGN
         L     R2,TPUTLEN              LENGTH TO BE WRITTEN
         TPUT  SCR5TXT,(R2),FULLSCR
         L     R3,COMMSCR              Screen area
         TGET  (3),2200,ASIS            READ THE SCREEN
         CLOSE RPFWORK2                CLOSE THE DATASET
         L     R13,SAVE+4              PREVIOUS SAVEAREA
         RETURN (14,12),RC=0           RETURN TO CALLER
PDS000   DS    0H
         XC    SORTFW,SORTFW           0=SORTED ON MEMBER
         ZAP   MEMCNT,=P'0'            INIT MEMBER COUNTER
         OPEN  RPFWORK2                OPEN PDSDCB
         LA    R4,RPFWORK2             DCB IN REG 4
         USING IHADCB,R4               GETADDR OVER DCBD
         TM    DCBOFLGS,DCBOFOPN       SUCCESSFUL OPEN ?
         BO    RPFGETM                 GO ON IF YES
         MVC   MSG5,ERR7TXT            MOVE ERROR MSG
         B     RPFERROR                GOTO ERRORROUTINE
RPFGETM  DS    0H
         DROP  4                       KILL ADDRESSABILITY
         MVI   SCR5PDSE,C' '           DEFAULT A PDS
         MVC   SCR5VAR,=CL10'Members of' DEFAULT TEXT
         TM    INFCODE3,$PDSEDIT       RPFPDS INVOKED BY EDIT
         BNO   *+10                    NO: BRANCH
         MVC   SCR5VAR,=CL10'EDIT'     MOVE DIFFERENT TEXT
         TM    INFCODE3,$PDSBR         RPFPDS INVOKED BY BROWSE ?
         BNO   *+10                    NO: BRANCH
         MVC   SCR5VAR,=CL10'BROWSE'   MOVE DIFFERENT TEXT
         MVC   FIRSTSCR,GETMSTRT       SAVE STARTADR IN FIRSTSCR
         L     R10,GETMSTRT            AND LOAD INTO R10
         LR    R1,R10                  COPY
         S     R1,RLENGTH              MINUS 88
         ST    R1,LASTREC              INITIAL EMPTY WORKSPACE
         USING MEMBAREA,R10            GET ADDRESSABLILITY
PDS001   DS    0H                      SET PDS001 ROUT.IN 24 BIT MODE
*        LA    R1,PDS002               ROUTINE ADDRESS
*        BSM   R0,R1                   GOTO 24 BIT MODE
PDS002   DS    0H                      SET PDS001 ROUT.IN 24 BIT MODE
         READ  DECB,SF,RPFWORK2,DIRAREA,'S'
         CHECK DECB                    WAIT FOR COMPLETION
*        L     R1,=A(PDS002A+X'80000000') PICKUP ROUTINE ADDRESS
*        BSM   R0,R1                   GOTO 31 BIT MODE ADDRESSING
PDS002A  DS    0H
         LA    R3,DIRAREA              LOAD DIRECTORY BLOCK
         LR    R5,R3                   SAME ADDRESS IN R5
         AH    R5,0(R3)                ADD # OF USABLE BYTES
         BCTR  R5,0                    MINUS 1 FOR BXLE
         LA    R3,2(R3)                POINT TO FIRST MEMBER
PDS003   DS    0H
         CLI   0(R3),X'FF'             EOF ?
         BE    PDS019                  CLOSE DATASET
PDS005   DS    0H
         C     R10,GETMEND             END OF WORKSPACE REACHED ?
         BNH   PDS018                  NO: CONTINUE
         UNPK  ERR8TXT+09(5),MEMCNT    CONVERT TO ZONED IN MESSAGE
         OI    ERR8TXT+13,X'F0'        CLEAR SIGN
         MVC   MSG5,ERR8TXT            MOVE MESSAGE
         B     PDS019                  FORCE END OF FILE
PDS018   MVC   PREFIX(NEXTENT),BLANKS    BLANK AREA
         XC    PREFIX,PREFIX           BLANK THE PREFIX
         MVC   MEMBR,0(R3)             STORE MEMBER INTO AREA
         MVC   INPTTR(3),8(R3)         MOVE TTR TO WORKSPACE
         MVI   INPHL,NONHLM            MOVE HIGLIGHT CH (NO HL MDT)
         AP    MEMCNT,=P'1'            ADD MEMBER
         MVI   ALIAS,C' '              BLANK ALIAS FIELD
         TM    11(R3),X'80'            ALIAS ENTRY ?
         BNO   PDS0181                 NO: BRANCH
         MVI   ALIAS,C'A'              MARK ALIAS
PDS0181  DS    0H
         MVC   SAVEC,11(R3)            SAVE 'C' BYTE
         NI    11(R3),B'00011111'      ZERO FIRST 3 BITS OF C BYTE
         TM    INFCODE4,$RECFB+$RECVB  Fixed or variable records?  @rp3
         BNZ   PDS0185                 NO: BRANCH                  @rp3
*
*        IN THIS SECTION WILL BE LOOKED IF THE PDS-MEMBER CONTAINS
*        LINK EDIT USERDATA.
*
         SYCONVHX IN=SAVEC,OUT=INPC,L=1 SET 'C' BYTE IN WORKSPACE
         XR    R4,R4                   CLEAR REG 4
         IC    R4,11(R3)               INSERT 'C' BYTE
         SLL   R4,1                    * 2 BECAUSE HALFWORD COUNTER
         LTR   R4,R4                   NOT USERDATA PRESENT ?
         BZ    PDS0189                 YES: BRANCH
         LA    R6,INPUDATA             POINT TO USERDATA FIELD IN WS
         CLM   R4,1,=X'10'             MORE THAN 16 ?
         BNH   *+8                     NO BRANCH
         LA    R4,16                   SET TO 16
         LA    R7,12(R3)               POINT TO USERDATA OF MEMBER
PDS0183  EQU   *
         SYCONVHX IN=(7),OUT=(6),L=1   CONVERT TO EBCDIC
         LA    R7,1(R7)                POINT TO NEXT BYTE INPUT
         LA    R6,2(R6)                POINT TO NEXT BYTES OUTPUT
         BCT   R4,PDS0183              LOOP UNTIL ALL DONE
         B     PDS0189                 BRANCH
PDS0185  EQU   *
*
*        IN THE NEXT SECTION WILL BE LOOKED IF THE MEMBER IS SAVED
*        BY ISPF (SYSTEM PRODUCTIVITY FACILITY) OR WITH THE NEW FORMAT
*        USERDATA OF RPF, IF SO IT WILL BE DISPLAYED.
*
ISPFTEST CLI   11(R3),X'0F'            IS LENGTH 15 HALFWORDS ?
         BL    PDS0189                 Low: no ISPF/RPF userdata
         CLI   SPFTIME,X'23'           TEST HRS FIELD (UNSIGNED PACKED)
         BH    PDS0189                 HIGH: NO TIME FIELD
         CLI   SPFTIME+1,X'59'         TEST MINUTES FIELD (UNSIGN PKD)
         BH    PDS0189                 HIGH: NO TIME FIELD
         TM    SPFDATEI+3,X'0C'        DOES DATE CONTAIN A SIGN ?
         BNO   PDS0189                 NO: NO SPF/RPF USERDATA
         TM    SPFDATEU+3,X'0C'        DOES MOD DATE CONTAIN A SIGN ?
         BNO   PDS0189                 NO: NO SPF/RPF USERDATA
         LR    R1,R3                   A(MEMBER+TTR+UDATA) IN REG 1
         BAL   R14,SPFRPFU             ROUTINE ADDRESS
PDS0189  DS    0H
         ST    R10,LASTREC             SAVE LAST RECORD POINTER
         LA    R10,NEXTENT(R10)        NEXT ENTRY IN GETM AREA
         NI    11(R3),B'00011111'      CLEAR 1ST THREE BITS OF 'C'
         XR    R4,R4                   OF 'TTRC' IN DIR
         IC    R4,11(R3)               AND INSERT IT INTO R3
         AR    R4,R4                   DOUBLE BECAUSE HALFWORDS
         AH    R4,=H'12'               + MIN LENGTH MEMBERENTRY
         BXLE  R3,R4,PDS003            NEXT MEMBER IF POSSIBLE
         B     PDS001                  READ NEXT DIRECTORY BLK
PDS019   EQU   *                       END OF FILE PDSDCB
         CLOSE RPFWORK2                CLOSE THE FILE
         ZAP   SORTCNT,MEMCNT          SAVE THE MEMBER COUNTER
PDSREAD  EQU   *                       PUT THE MEMBERS ON THE SCREEN
         OPEN  RPFWORK2                OPEN PDS FOR INPUT
         TPUT  ERASE,L'ERASE,FULLSCR
         BAL   R14,RPFTPUT             WRITE THE SCREEN
         TITLE 'PROCESS PRIMARY COMMANDS'
PDS021   EQU   *                       PROCESS THE OUTPUT
         LA    R2,AIDBYTE              AIDBYTE ADDRESS
         LA    R5,SCREEN               SCREEN ADDRESS
         BAL   R14,CONVIN              GET THE SCREEN
         MVC   REP5,BLANKS             CLEAR COMMAND AREA
         LTR   R1,R1                   CLEAR KEY PRESSED ?
         BZ    NEWSCR                  NEW SCREEN IF YES
         CLI   SCREEN,X'6E'            RESHOW CODE ?
         BE    NEWSCR                  YES: REVIEW SCREEN
         OC    SCREEN(24),BLANKS       XLATE TO UPPERCASE
         LR    R3,R1                   SAVE REG 1
         CLI   AIDBYTE,X'7D'           ENTER KEY ?
         BE    PDS0219                 YES: BRANCH
*        CLI   AIDBYTE,X'6D'           CLEAR KEY ?
*        BE    NEWSCR                  YES: NEW SCREEN
         LA    R2,SCREEN               ADDRESS OF SCREEN FOR PFK ROUT
         LA    R1,AIDBYTE              AIDBYTE ADDRESS
         BAL   R14,PFK                 FETCH PFK DEFINITIONS
         LTR   R15,R15                 ALLRIGTH ?
         BZ    PDS0219                 YES EXEC COMMAND
         C     R15,F0004               CONFIRMATION ?
         BE    PDS0217                 NO DONT EXEC COMMAND
         C     R15,F0008               PFK NOT DEFINED ?
         BE    PDS0215                 ERROR
         MVC   MSG5,ERRATXT            PFK DEFINITION INVALID
         MVC   REP5,BLANKS             BLANK COMMAND AREA
         BAL   R14,RPFTPUT             WRITE SCREEN
         MVC   MSG5,BLANKS             BLANK MESSAGE AREA
         B     PDS021                  REVIEW SCREEN
PDS0215  MVC   MSG5,ERR9TXT            MOVE ERROR MESSAGE
         MVC   REP5,BLANKS             BLANK COMMAND AREA
         BAL   R14,RPFTPUT             WRITE SCREEN
         MVC   MSG5,BLANKS             BLANK MESSAGE AREA
         B     PDS021                  REVIEW SCREEN
PDS0217  EQU   *
         MVI   MSG5,C'-'               CLEAR
         MVC   MSG5+1(L'MSG5-1),MSG5         MESSAGE
         MVC   REP5,SCREEN             REPEAT COMMAND
         BAL   R14,RPFTPUT             CONFIRMATION IS YES
         B     PDS021                  REVIEW SCREEN
PDS0219  EQU   *
         CLI   SCREEN,C'?'             CLEAR PRESSED ?
         BNE   PDS022                  GO ON IF NOT
NEWSCR   EQU   *
         MVC   REP5,BLANKS             BLANK REPLY AREA
         OI    SW,$ERASE               MARK ERASE ON
         BAL   R14,RPFTPUT             PUT THE SCREEN
         B     PDS021                  PROCESS THE SCREEN
PDS022   EQU   *
         MVI   MSG5,C'-'               CLEAR
         MVC   MSG5+1(L'MSG5-1),MSG5        MESSAGE AREA
         C     R3,SCRLEN               LENGTH NOT CHANGED ?
         BE    PDS023                  ALLRIGHT
         MVC   MSG5,ERR4TXT            MOVE ERROR MSG
         BAL   R14,RPFTPUT             WRITE SCREEN
         MVC   MSG5,BLANKS             BLANK ERROR MSG
         B     PDS021                  AND READ THE SCREEN
PDS023   EQU   *                       PROCESS THE COMMANDS
         MVC   BUFFER(24),SCREEN       MOVE COMMAND
         CLI   BUFFER,C'&&'            &&  ENTERED ?
         BNE   PDS0231                 NO: NO REPEAT
         MVC   SCREEN(24),BUFFER+1     MOVE COMMAND BACK WITHOUT '&&'
         MVI   SCREEN+23,C' '
         MVC   REP5,BUFFER             REPEAT COMMAND
PDS0231  DS    0H
         BAL   R14,RPFSCRN             PROCESS 'S' 'D' 'R' 'P' AND 'E'
         LTR   R15,R15                 RC <> 0000 ?                @rp1
         BNZ   PDS999                  EXIT (return or =n.n cmd)   @rp1
         TM    SW,$CHANGE              SOMETHING CHANGED ?
         BNO   PDS024                  PROCESS CMDS IF NOT CHANGED
         CLC   SCREEN(24),BLANKS       NO COMMAND ENTERED ?
         BE    PDS023A                 DO NOT WRITE PAUSE MSG
         MVC   MSG5,INF1TXT            MOVE PAUSE MESSAGE
         CLI   REP5,C' '               NO COMMAND IN COMMAND AREA
         BNE   PDS023A                 NO: GO ON
         MVC   REP5(24),SCREEN         ELSE REPEAT COMMAND
PDS023A  BAL   R14,RPFTPUT             WRITE THE SCREEN
         MVC   MSG5,BLANKS             CLEAR MSG AREA
         NI    SW,X'FF'-$CHANGE        SET MODIFICATIONS OFF
         B     PDS021                  AND PROCESS THE SCREEN
PDS024   EQU   *                       PROCESS THE SCREEN
         CLC   SCREEN(3),=C'SCF'       'SCF' COMMAND (ALIAS OF FORWARD)
         BNE   PDS028                  NO: OTHER COMMANDS
         L     R10,FIRSTSCR            FIRST LINE ON SCREEN
         AL    R10,NEXTSCR             NEXT SCREEN
         C     R10,LASTREC             COMPARE WITH ENDADDRESS
         BH    PDS027                  ERROR IF HIGH
         CLI   MEMBR,C' '              BLANK ENTRY ?
         BE    PDS027                  ERROR BLANKS AT THE END
         ST    R10,FIRSTSCR            NEW FIRST LINE
         BAL   R14,RPFTPUT             WRITE THE SCREEN
         B     PDS021                  PROCESS THE SCREEN
PDS027   EQU   *                       ERROR IN 'FORWARD' COMMAND
         MVC   MSG5,ERR1TXT            PAGE FORWARD NO EFFECT
         BAL   R14,RPFTPUT
         B     PDS021                  PROCESS THE SCREEN
PDS028   CLC   SCREEN(3),=C'PFK'       PFK ENTERED ?
         BNE   PDS031                  NO: TEST NEXT COMMAND
         LINK  EP=RPFPFK,PARAM=((11)),VL=1 PFK DEF MODULE
         B     NEWSCR                  WRITE NEW SCREEN
PDS031   EQU   *                       PROCESS 'BACK' COMMAND
         CLC   SCREEN(3),=C'SCB'       'SCB' COMMAND (ALIAS OF BACK) ?
         BNE   PDS035                  NO: OTHER COMMANDS
         L     R10,FIRSTSCR            1ST LINE ON SCREEN
         C     R10,GETMSTRT            ALREADY FIRST SCREEN ?
         BNH   PDS034                  YES: SCROLL HAD NO EFFECT
         SL    R10,NEXTSCR             1 SCREEN BACK
         C     R10,GETMSTRT            AND COMPARE WITH BEGIN
         BNL   *+8                     IF LOW: RESET TO FIRST SCREEN
         L     R10,FIRSTREC            RESET TO FIRST SCREEN
         ST    R10,FIRSTSCR            NEW 1ST LINE
         BAL   R14,RPFTPUT             WRITE THE SCREEN
         B     PDS021                  AND PROCESS THE SCREEN
PDS034   EQU   *                       ERROR ROUT 'BACK'
         MVC   MSG5,ERR1TXT            PAGE BACK NO EFFECT
         BAL   R14,RPFTPUT             PUT THE SCREEN
         B     PDS021                  PROCESS THE SCREEN
PDS035   CLI   SCREEN,C'B'             BOTTOM COMMAND ?
         BNE   PDS036                  NO PROCESS OTHER COMMANDS
         L     R3,LASTREC              LOAD BEGIN ADDRESS
         SL    R3,NEXTSCR              SUBSTRAC SCREEN LENGTH
         LA    R3,NEXTENT(R3)                MINUS ONE
         C     R3,FIRSTREC             BEFORE FIRSTREC ?
         BNL   *+8                     NO: PROCEED
         L     R3,FIRSTREC             DIVIDE BY LENGTH SCREEN
         ST    R3,FIRSTSCR             SAVE ADDRESS
         BAL   R14,RPFTPUT             WRITE THE SCREEN
         B     PDS021                  PROCESS THE SCREEN
PDS036   DS    0H
         CLC   SCREEN(2),=C'L '        'LOCATE ON MEMBER COMMAND'
         BNE   PDS037                  NO: PROCESS OTHER COMMANDS
         BAL   R14,LOCATE              Try to locate string
         LTR   R15,R15                 Found ?
         BZ    PDS03601                Yes: branch
         MVC   MSG5,ERRCTXT            MOVE ERROR MESSAGE
         MVC   REP5(24),SCREEN         REPEAT COMMAND
PDS03601 DS    0H
         BAL   R14,RPFTPUT             WRITE THE SCREEN
         B     PDS021                  PROCESS THE SCREEN
PDS037   DS    0H
         CLC   SCREEN(2),=C'S '        'SELECT' member command
         BNE   PDS038                  NO: PROCESS OTHER COMMANDS
         CLC   SORTFW,F0000            Sorted on membername?
         BE    PDS03701                Yes: Ok, branch
         MVC   MSG5,ERRGTXT            MOVE ERROR MESSAGE
         B     PDS03709                Branch
PDS03701 DS    0H
         BAL   R14,LOCATE              Try to locate member
         LA    R1,SCREEN+2             Point to name after 'S' command
         BAL   R14,BLDL                Try to find member in PDS
         LR    R3,R15                  Save Return code
         TM    INFCODE3,$PDSBR         Invoked by Browse?
         BNO   PDS03707                No edit member
         LTR   R3,R3                   Member found in PDS
         BZ    PDS03705                Yes: found
         MVC   MSG5,ERRHTXT            MOVE ERROR msg (member not fnd)
         MVC   REP5(24),SCREEN         REPEAT COMMAND
         B     PDS03709                Branch
PDS03705 DS    0H
         LA    R1,MEMBR                To be browsed member
         BAL   R14,BROWSE              Browse member
         TPUT  ERASE,L'ERASE,FULLSCR
         TM    INFCODE2,$RETURN   Return entered or = cmd from bro @rp1
         BO    PDS999                  Yes: branch                 @rp1
         B     PDS03709
PDS03707 DS    0H
         MVC   EDITTBLE(8),SCREEN+2    Move membername
         MVI   EDITTBLE+8,X'FF'
         LTR   R3,R3                   Member found ?
         BZ    PDS03708                Yes: edit (update) member
         OI    INFCODE,DATAENT         Else create member
PDS03708 DS    0H
         BAL   R14,EDIT
         TPUT  ERASE,L'ERASE,FULLSCR
         TM    INFCODE2,$RETURN  Return entered or = cmd from EDIT @rp1
         BO    PDS999                  Yes: branch                 @rp1
PDS03709 DS    0H
         BAL   R14,RPFTPUT             WRITE THE SCREEN
         B     PDS021                  PROCESS THE SCREEN
PDS038   EQU   *                       PROCESS 'TOP' COMMAND
         CLC   SCREEN(3),=C'TOP'       TOP ENTERED ?
         BE    PDSTOP                  YES: PROCESS COMMAND
         CLC   SCREEN(2),=C'T '        TOP COMMAND (ALIAS 'T') ?
         BNE   PDS039                  NO: OTHER COMMANDS
PDSTOP   MVC   FIRSTSCR,GETMSTRT       FIRST LINE IS 1ST MEMBER
         BAL   R14,RPFTPUT             WRITE THE SCREEN
         B     PDS021                  AND PROCESS THE SCREEN
PDS039   EQU   *
         CLI   SCREEN,C'='             =n or =n.n command?         @rp1
         BNE   PDS040                  NO: BRANCH                  @rp1
         MVC   CMAINOPT,SCREEN+1       Move options                @rp1
         OI    INFCODE2,$RETURN        Set return indicator        @rp1
         B     PDS999                  And terminate (to main)     @rp1
PDS040   DS    0H                                                  @rp1
         CLC   SCREEN(6),=C'RETURN'    RETURN COMMAND ?
         BNE   PDS041                  NO: BRANCH
         OI    INFCODE2,$RETURN        SET RETURN INDICATOR
         B     PDS999                  AND TERMINATE
PDS041   EQU   *                       PROCESS 'END ' COMMAND
*        CLC   SCREEN(4),=C'XMIT'      THE FAMOUS IDTF XMIT COMMAND ?
*        BNE   PDS045                  NO: BRANCH
*        CLI   SCREEN+5,C' '           NODE OR NICK NAME SUPPLIED ?
*        BNE   PDS043                  YES: PROCEED
*        MVC   MSG5,ERRFTXT            MOVE ERROR MESSAGE
*        BAL   R14,RPFTPUT             WRITE THE SCREEN
*        B     PDS021                  AND PROCESS IT
PDS043   EQU   *
*        BAL   R14,XMIT                ISSUE THE TSO XMIT COMMAND FOR
*                                      ALL THE QUEUED MEMBERS
*        BAL   R14,RPFTPUT             WRITE THE SCREEN
*        B     PDS021                  PROCESS THE SCREEN
PDS045   EQU   *
         CLC   SCREEN(5),=C'RESET'     RESET COMMAND ?
         BNE   PDS047                  NO: TEST NEXT COMMAND
         CLOSE RPFWORK2                CLOSE PDS
         B     PDS000                  READ THE MEMBERS AGAIN
PDS047   EQU   *
         CLC   SCREEN(8),=C'SORT TTR'  SORT ON TTRS ?
         BNE   PDS048                  NO: TEST NEXT COMMAND
         L     R6,GETMSTRT             FIRST RECORD IN WORKSPACE
         CVB   R7,SORTCNT              NUMBER OF ENTRIES
         C     R7,=F'2'                LESS THAN 2 RECORDS ?
         BL    PDS059                  ITS SILLY TO SORT LESS 2 RECORDS
         SORT  (6),88,3,(7),21,ORDER=D SORT WORKSPACE (SHORT)
         MVC   FIRSTSCR,GETMSTRT       SET DISPLAY ON FIRST RECORD
         MVC   SORTFW,=F'4'            4=SORTED ON TTR
         B     PDS059                  REWRITE SCREEN
PDS048   EQU   *
         CLC   SCREEN(8),=C'SORT CHA'  SORT ON CHANGE DATE/TIME
         BNE   PDS049                  NO: TEST NEXT COMMAND
         L     R6,GETMSTRT             FIRST RECORD IN WORKSPACE
         CVB   R7,SORTCNT              NUMBER OF ENTRIES
         C     R7,=F'2'                LESS THAN 2 RECORDS ?
         BL    PDS059                  ITS SILLY TO SORT LESS 2 RECORDS
         SORT  (6),88,15,(7),34,ORDER=D SORT WORKSPACE (SHORT)    @2000
         MVC   FIRSTSCR,GETMSTRT       SET DISPLAY ON FIRST RECORD
         MVC   SORTFW,=F'8'            8=SORTED ON DATE/TIME UPDATED
         B     PDS059                  REWRITE SCREEN
PDS049   EQU   *
         CLC   SCREEN(9),=C'SORT SIZE' SORT ON MEMBER SIZE ?
         BNE   PDS050                  NO: TEST NEXT COMMAND
         L     R6,GETMSTRT             FIRST RECORD IN WORKSPACE
         CVB   R7,SORTCNT              NUMBER OF ENTRIES
         C     R7,=F'2'                LESS THAN 2 RECORDS ?
         BL    PDS059                  ITS SILLY TO SORT LESS 2 RECORDS
         SORT  (6),88,5,(7),53,ORDER=D SORT WORKSPACE (SHORT)     @2000
         MVC   FIRSTSCR,GETMSTRT       SET DISPLAY ON FIRST RECORD
         MVC   SORTFW,=F'12'           12=SORTED ON SIZE
         B     PDS059                  REWRITE SCREEN
PDS050   DS    0H
         CLC   SCREEN(6),=C'SORT  '    SORT ON MEMBER?
         BNE   PDS051                  NO: TEST NEXT COMMAND
         L     R6,GETMSTRT             FIRST RECORD IN WORKSPACE
         CVB   R7,SORTCNT              NUMBER OF ENTRIES
         C     R7,=F'2'                LESS THAN 2 RECORDS ?
         BL    PDS059                  ITS SILLY TO SORT LESS 2 RECORDS
         SORT  (6),88,8,(7),10         SORT WORKSPACE on member
         MVC   FIRSTSCR,GETMSTRT       SET DISPLAY ON FIRST RECORD
         XC    SORTFW,SORTFW           00=SORTED ON NAME
         B     PDS059                  REWRITE SCREEN
PDS051   DS    0H
         CLC   SCREEN(3),=C'END'       END COMMAND ?
         BE    PDS999                  BACK TO CALLER
         CLI   SCREEN,C' '             NOTHING ENTERED ?
         BE    PDS059                  GO ON
         MVC   MSG5,ERR3TXT            INVALID COMMAND
         MVC   REP5,SCREEN             REPEAT COMMAND IN ERROR
         BAL   R14,RPFTPUT             PUT THE SCREEN
         B     PDS021                  PROCESS THE SCREEN
PDS059   EQU   *
         BAL   R14,RPFTPUT
         B     PDS021
         TITLE 'TPUT MODIFIED SCREEN'
RPFTPUT  EQU   *                       ROUTINE TO WRITE SCREEN
*---------------------------------------------------------------------*
*                                                                     *
*        REGISTER USAGE IN THIS ROUTINE:                              *
*                                                                     *
*        R3    NUMBER OF LINES ON THE SCREEN (20/28/39)               *
*        R4    ADDRESS OF SCREEN TO BE TPUTTED.                       *
*        R5    ADDRESS OF MESSAGE TABLE                               *
*        R6    TOTAL NUMBER OF MESSAGES, WHICH CAN BE GIVEN           *
*        R10   CURRENT ADDRESS OF MEMBERLIST IN WORKSPACE.            *
*                                                                     *
*------------------------------------------ (C)-2001 SKYBIRD SYSTEMS -*
         ST    R14,PUTR14              SAVE RETURN REG
         LA    R4,LNE5                 BEGINADDRES LINE
         L     R10,FIRSTSCR            FIRST LINE ON SCREEN
         L     R3,#LINES               NUMBER OF LINES
TPUT001  EQU   *                       *START LOOP*
         MVI   1(R4),X'C9'                                        @pw
         MVI   5(R4),C' '              BLANK
         MVC   8(8,R4),BLANKS               THE FIELDS
         MVI   17(R4),X'C9'                                       @pw
         MVC   18(8,R4),BLANKS                   IN THE
         MVC   31(44,R4),BLANKS                          SCREEN
         MVC   77(14,4),BLANKS         BLANK AREA ON SCREEN
         MVC   28(3,R4),=AL3(TURQ)     Default turquoise
         C     R10,LASTREC             PAST LAST RECORD POINTER ?
         BH    TPUT008                 YES BRANCH                  @pw
         MVC   8(8,R4),MEMBR           MEMBERNAME
         TR    8(8,R4),COMTRTAB        REMOVE UNPRINTS ON THE SCREEN
         LA    R1,31(R4)               POINT TO OUTPUT FIELD ON SCREEN
         SYCONVHX IN=INPTTR,OUT=(1),L=3 CONVERT TTR
         TM    INPHL,NONHLM            INPHL IS X'F1' OR 'F9'
         BO    *+8                     YES: SKIP
         MVI   INPHL,NONHLM            MOVE DEFAULT NON HIGHL (MDT)
         MVC   7(1,R4),INPHL           MOVE HIGHLIGHT CHAR
         MVI   INPHL,NONHLM            NON HL MOD DATA TACK ON
         TM    INFCODE4,$RECFB+$RECVB  Fixed or variable records?  @rp3
         BNZ   TPUT002                 NO: BRANCH                  @rp3
         MVC   38(37,R4),INPC          MOVE LINKEDIT USERDATA
         B     TPUT003                 BRANCH
TPUT002  EQU   *
         CLI   INPUID,C' '             NO UDATA IN LIST ?
         BE    TPUT003                 YES: PROCEED
         MVC   56(7,R4),INPTIME+1      MOVE TIME SAVED             @rp4
         MVC   38(8,R4),INPUID         MOVE OWNER OF MEMBER
         MVC   46(4,R4),INPDATE        Move year of date saved    @2000
         MVI   50(R4),C'/'             separate with a slash      @2000
         MVC   51(2,R4),INPDATE+4      Move monthnumber of         @rp4
         MVI   53(R4),C'/'             separate with a slash       @rp4
         MVC   54(2,R4),INPDATE+6      Move daynumber of month     @rp4
         MVC   63(5,R4),INPCARDS       NUMBER OF CARDS             @rp4
         MVC   69(5,R4),INPVERS        MOVE VERSION NUMBER IF THERE@rp4
         CLC   INPDATE,JULTODAY        CHANGED TODAY ?
         BNE   TPUT003                 NO: PROCEED
         MVC   28(3,R4),=AL3(WHITE)    Hilite today changed members
         MVC   77(14,R4),=CL14'Updated today'                     @2000
TPUT003  EQU   *
         CLI   ALIAS,C'A'              ALIAS ?
         BNE   TPUT005                 NO: BRANCH
         MVC   77(14,R4),=CL14'ALIAS'  TELL IT TO USER
TPUT005  EQU   *
         LA    R6,MSG#                 NUMBER OF POSSIBLE MSGS
         LA    R5,MSGTBLE              LOAD TABLE ADDRESS
TPUT007  EQU   *
         CLC   0(1,R5),OPER            MATCH FOUND OF OPER ?
         BE    TPUT009                 BRANCH IF YES
         LA    R5,32(R5)               NEXT ENTRY IN MSGTBLE
         BCT   R6,TPUT007              LOOP UNTIL ALL DONE
         MVI   OPER,C' '                      ,,
         B     TPUT011                 NEXT ENTRY
TPUT008  EQU   *                                                  @pw
         MVI   1(R4),X'F9'             Protect the                @pw
         MVI   17(R4),X'F9'                       empty fields    @pw
         B     TPUT013                                            @pw
TPUT009  MVC   28(3,R4),=AL3(WHITE)    MAKE MESSAGE HIGH LIGHT
         MVC   38(30,R4),1(R5)         MOVE MESSAGE AFTER TTR FIELD
         MVC   68(07,R4),BLANKS        AND BLANK THE REST
         MVC   OPER,31(R5)             MOVE REPLACEMENT OPER.
TPUT011  EQU   *                       SET POINTERS ON NEXT LINE
         LA    R10,NEXTENT(R10)        NEXT ENTRY IN MEMBAREA
TPUT013  EQU   *                       SET POINTERS ON NEXT LINE
         LA    R4,SCRENT(R4)           NEXT LINE ON SCREEN
         BCT   R3,TPUT001              BRANCH BACK
         UNPK  SCR5CNT,MEMCNT          # OF MEMBERS
         OI    SCR5CNT+4,X'F0'         CLEAR SIGN
         TM    SW,$ERASE               SHOULD THE SCREEN ERASED FIRST ?
         BNO   TPUT015                 NO: TPUT IMMED.
         NI    SW,255-$ERASE           FLAG OFF
         TPUT  ERASE,L'ERASE,FULLSCR   ERASE THE SCREEN
TPUT015  EQU   *
         L     R2,TPUTLEN              LENGTH TO BE WRITTEN
         TPUT  SCR5TXT,(R2),FULLSCR    WRITE SCREEN
         MVC   SCR5TXT(2),NOERASE      REPAIR WCC
         L     R14,PUTR14              RESTORE REG 14
         BR    R14
*---------------------------------------------------------------------*
*                                                                     *
*        Routine:   LOCATE                                            *
*        Function:  Locate on Membername, ttr, date/time changed      *
*                   or size depending on the sort order               *
*                   The to be located string is in 'SCREEN'+2         *
*                   After successful locate, R10 will be loaded with  *
*                   the workspace entry that matches the string       *
*        Returncodes:                                                 *
*                   0000: located string found, R10 loaded            *
*                         R1=0000 = exact match on membername         *
*                         R1=0004 = fuzzy match                       *
*                   0004: located string not found                    *
*                                                                     *
*------------------------------------------ (C)-2001 SKYBIRD SYSTEMS -*
         SPACE
LOCATE   DS    0H
         ST    R14,SAVE14L             SAVE RETURN REG
         LA    R3,SCREEN+2             LOAD LOCATE CHAR STRING
         LA    R4,16                   MAX 16 CHARS
         XR    R5,R5                   COUNT LENGTH IN GR 5
LOC001   DS    0H
         CLI   0(R3),C' '              END OF STRING ?
         BE    LOC003                  YES: STOP SEARCH
         LA    R5,1(R5)                COUNT NON BLANK BYTE
         LA    R3,1(R3)                NEXT BYTE IN 'SCREEN'
         BCT   R4,LOC001               LOOP.
LOC003   DS    0H
         LTR   R5,R5                   NO BYTES FOUND ?
         BE    LOCERR1                 YES: RC=0004
         BCTR  R5,0                    SUBTRACT 1 FOR EX INSTRUCTION
         L     R10,GETMSTRT            LOAD START ADDRESS    (BXLE)
         L     R7,LASTREC              LAST RECORD POINTER   (BXLE)
         LA    R7,79(R7)               ADJUST OFFSET         (BXLE)
         LA    R6,NEXTENT              LENGTH OF ENTRY       (BXLE)
         LA    R3,SCREEN+2             ADDRESS CHAR STRING
LOC005   DS    0H
         L     R15,SORTFW              LOAD VALUE SORT
         B     CLIST(R15)              GO TO BRANCHLIST
CLIST    DS    0H
         B     COMPM                   COMPARE MEMBERNAME
         B     COMPT                   COMPARE TTR
         B     COMPC                   COMPARE DATE/TIME UPDATE
         B     COMPS                   COMPARE SIZE
*
COMPM    DS    0H                      COMPARE MEMBERNAME
         CH    R5,=H'7'                NOT LONGER THAN 8
         BNH   *+8                     NO: BRANCH
         LA    R5,7                    LOAD MAX VALUE (8-1 FOR EX)
         EX    R5,LCOMP1               COMPARE IF MATCH FOUND
         BL    COMPBX                  LOW: LOOP
         BE    LOC097                  Exact match
         B     LOC098                  HIGH OR EQUAL: FOUND
*
COMPT    DS    0H                      COMPARE TTR
         MVC   TEMP(6),0(R3)           MOVE TTR STRING
         TR    TEMP(6),TRTABX          CONVERT
         PACK  DWB(4),TEMP(7)          PACK TTR
         CLC   INPTTR(3),DWB           COMPARE IF MATCH FOUND
         BH    COMPBX                  HIGH: LOOP
         B     LOC098                  LOW OR EQUAL: FOUND
*
COMPC    DS    0H                      COMPARE DATE/TIME
         EX    R5,LCOMP3               COMPARE IF MATCH FOUND
         BH    COMPBX                  HIGH: LOOP
         B     LOC098                  LOW OR EQUAL: FOUND
*
COMPS    DS    0H                      COMPARE # RECORDS
         CH    R5,=H'4'                NOT LONGER THAN 5
         BNH   *+8                     NO: BRANCH
         LA    R5,4                    LOAD MAX VALUE (4-1 FOR EX)
         MVC   CLINE,0(R3)             Move Argument to workfield
         LA    R1,CLINE                Set in register
         LR    R14,R5                  Copy length
COMPS1   DS    0H                      ** add leading spaces if l<5
         CH    R14,=H'4'               LENGTH = 4 (5-1 FOR EX)
         BE    COMPS9                  Yes: branch
         BCTR  R1,0                    Relocate size
         LA    R14,1(R14)              Increase length
         B     COMPS1                  And branch
COMPS9   DS    0H
         EX    R14,LCOMP4              COMPARE IF MATCH FOUND
         BH    COMPBX                  HIGH: LOOP
         B     LOC098                  LOW OR EQUAL: FOUND
COMPBX   DS    0H                      COMPARE MEMBERNAME
         BXLE  R10,R6,LOC005           LOOP                  (BXLE)
LOCERR1  DS    0H                      COMPARE MEMBERNAME
         LA    R15,4                   RC=0004
         B     LOC999                  Branch
LOC097   DS    0H                      LOCATE THE FOUND MEMBER
         XR    R1,R1                   Exact match
         B     LOC099
LOC098   DS    0H                      LOCATE THE FOUND MEMBER
         LA    R1,4                    Fuzzy match
LOC099   DS    0H
         XR    R15,R15                 RC=0000
         ST    R10,FIRSTSCR            LOAD ADDRESS FOUND MEMBER
         MVI   INPHL,HLM               MOVE HIGHLIGHT CHAR (MDT)
         B     LOC999
LCOMP1   CLC   MEMBR(0),0(R3)          **** EX ONLY ****
LCOMP3   CLC   INPDATE(0),0(R3)        **** EX ONLY ****
LCOMP4   CLC   INPCARDS(0),0(R1)       **** EX ONLY ****
         DC    CL5' '
CLINE    DS    CL5
LOC999   DS    0H
         L     R14,SAVE14L             Restore return reg
         BR    R14                     Return
         TITLE 'PROCESS THE LINE-COMMANDS'
*---------------------------------------------------------------------*
*                                                                     *
*        PROCESS THE LINE-COMMANDS ENTERED BEFORE THE MEMBERNAME.     *
*        THE LINE-CMDS  ARE: B/V (BROWSE), R (RENAME), D (DELETE),    *
*        E (EDIT), A (ASSIGN ALIAS), P (PRINT) AND X (TRANSMIT).      *
*                                                                     *
*        IF FLAG $PDSEDIT IS ON IN INFCODE3, ONLY THE 'E' LINE CMD    *
*        IS VALID. IN THIS CASE AN 'S' LINECOMMAND IS VALID TOO       *
*        FOR THE EDIT FUNCTION.                                       *
*                                                                     *
*        IF FLAG $PDSBR   IS ON IN INFCODE3, ONLY THE 'B/V' line cmd  *
*        IS VALID. IN THIS CASE AN 'S' LINECOMMAND IS VALID TOO       *
*        FOR THE BROWSE FUNCTION.                                     *
*                                                                     *
*        RETURNCODES (set in EDIT routine)                            *
*                    00. EVERYTHING ALLRIGHT                          *
*                    04. Return or '=n.n' command entered in EDIT  @rp1
*                                                                     *
*------------------------------------------ (C)-2002 SKYBIRD SYSTEMS -*
         SPACE 2
RPFSCRN  EQU   *                       SCRATCH AND RENAME MEMS
         ST    R14,GETR14              SAVE REGISTER 14
         LA    R4,EDITTBLE             LOAD EDIT TABLE
         L     R5,=A(40*8)             LENGTH EDIT TABLE
         LR    R6,R4                   COPY INTO R6
         ICM   R7,15,=X'FF000000'      INSERT PADDING CHAR
         MVCL  R4,R6                   FILLUP WITH HI-VALUE
         LA    R7,EDITTBLE             LOAD THE TABLE
         LA    R3,SCREEN               LOAD GOTTEN SCREEN
         LA    R3,24(R3)               SKIP COMMAND AREA
         L     R4,#LINES               MAX 18 LINES
         NI    SW,X'FF'-$DELETE        SET DELETES OFF
         MVC   BUFFER(24),SCREEN       SAVE COMMAND
SCRN01   OC    0(17,R3),BLANKS         XLATE TO UPPERCASE
         CLI   1(R3),C' '              BLANK IN MEMBER (LAST SCREEN)
         BE    SCRN03                  YES IGNORE OPERATION
         CLI   0(R3),C'D'              DELETE ENTERED ?
         BE    SCRN05                  YES: ASK FOR CONFIRMATION
SCRN03   EQU   *
         LA    R3,17(R3)               NEXT ENTRY
         BCT   R4,SCRN01               TEST NEXT ENTRY ON SCREEN
         B     SCRN11                  NO DELETES FOUND
SCRN05   EQU   *
         TM    INFCODE3,$PDSEDIT+$PDSBR RPFPDS INVOKED BY EDIT/BROWSE?
         BNZ   SCRN11                  YES: BRANCH
         TPUT  ERASE,L'ERASE,FULLSCR   CLEAR SCREEN
         TPUT  SCR2TXT,SCR2LEN,FULLSCR WRITE
         OI    SW,$ERASE               MARK ERASE ON
         L     R3,COMMSCR              LOAD SRCEEN ADDRESS
         TGET  (3),10,ASIS             GET AIDBYTE
         LTR   R1,R1                   INPUT LENGTH IS ZERO ?
         BZ    SCRN05                  YES: ERROR
         CLI   0(R3),X'F3'             PF03 PRESSED ?
         BE    SCRN11                  YES CANCEL DELETIONS
         CLI   0(R3),X'C3'             PF15 PRESSED ?
         BE    SCRN11                  YES CANCEL DELETIONS
         CLI   0(R3),X'7D'             'ENTER' PRESSED ?
         BNE   SCRN05                  NO: REDISPLAY CONFIRMATION
SCRN09   EQU   *
         OI    SW,$DELETE              MARK DELETE CONFIRMED
SCRN11   EQU   *
         LA    R3,SCREEN               LOAD SCREEN ADDRESS
         MVC   SCREEN(24),BUFFER       MOVE COMMAND
         LA    R3,24(R3)               SKIP COMMAND AREA
         L     R10,FIRSTSCR            CORRESPONDING POS IN
         L     R4,#LINES               GETMAIN AREA
SCRN13   EQU   *
         OC    0(17,R3),BLANKS         XLATE TO UPPERCASE
         CLI   0(R3),C' '              NO OPERATION ?
         BE    SCRN98                  TAKE NEXT ENTRY
         CLI   1(R3),C' '              NO MEMBER IN ENTRY ?
         BE    SCRN98                  POSSIBLE LAST SCREEN.
         CLI   0(R3),C'S'              'S' LINE COMMAND ?
         BNE   SCRN14                  NO : BRANCH
         TM    INFCODE3,$PDSEDIT       RPFPDS INVOKED BY EDIT ?
         BZ    SCRN13A                 NO : BRANCH
         MVI   0(R3),C'E'              CHANGE 'S' INTO 'E' (EDIT)
         B     SCRN14                  AND BRANCH
SCRN13A  DS    0H
         TM    INFCODE3,$PDSBR         RPFPDS INVOKED BY BROWSE ?
         BZ    SCRN14                  NO: BRANCH
         MVI   0(R3),C'V'              CHANGE 'S' INTO 'V' (View)
SCRN14   DS    0H
         CLI   0(R3),C'D'              DELETE THE MEMBER ?
         BNE   SCRN21                  GO ON IF NOT
         TM    INFCODE3,$PDSEDIT+$PDSBR RPFPDS INVOKED BY EDIT/BROWSE?
         BNZ   SCRN98E                 YES: ALLOW ONLY THE EDIT CMD
         OI    SW,$CHANGE              MARK MODIFICATIONS ON
         TM    SW,$DELETE              DELETE IS CONFIRMED ?
         BNO   SCRN19                  DELETE NOT CONFIRMED BY USER
         LA    R5,RPFWORK2             DCB POINTER OF PDS
         USING IHADCB,R5               GET ADDRESSABILITY OF DCB
         L     R5,DCBDEBAD             ADDRESS OF DATA EXTENT BLOCK
         DROP  R5                      KILL ADDRESSABILITY OF DCB
         USING DEBBASIC,R5             GET ADDRESSABILITY OF DEB
         TM    DEBOPATB,DEBACCS        IS PDS OPENED FOR UPDATE ?
         BNZ   SCRN15                  YES: DELETE MEMBER
         CLOSE RPFWORK2                NO: CLOSE PDS
         OPEN  (RPFWORK2,(UPDAT))          AND OPEN FOR UPDATE
         DROP  R5                      KILL ADDRESSABILITY FOR DEB
SCRN15   EQU   *                       DELETE MEMBER
         MVC   STMEM,MEMBR             MOVE MEMBER NAME TO BE DELETED
         STOW  RPFWORK2,STMEM,D        DELETE THE MEMBER
         LTR   R15,R15                 DELETE OK ?
         BNZ   SCRN17                  NO: MASK ERROR.
         SP    MEMCNT,=P'1'            SUBTRACT FROM # OF MEMBERS
         MVI   OPER,C'D'               SET OPER TO BLANKS
         B     SCRN98                  NEXT ENTRY IF POSSIBLE
SCRN17   EQU   *                       ERROR IN DELETE
         MVI   OPER,X'FF'              MASK ERROR
         B     SCRN98                  NEXT ENTRY IF POSSIBLE
SCRN19   EQU   *                       DELETE REJECTED BY USER
         MVI   OPER,X'F9'              MASK ERROR
         B     SCRN98                  NEXT ENTRY IF POSSIBLE
SCRN21   EQU   *                       RENAME MEMBER
         CLI   0(R3),C'R'              RENAME ?
         BNE   SCRN23                  TEST OTHER FUNCS IF NOT
         TM    INFCODE3,$PDSEDIT+$PDSBR RPFPDS INVOKED BY EDIT/BROWSE?
         BNZ   SCRN98E                 YES: ALLOW ONLY THE EDIT CMD
         OI    SW,$CHANGE              MARK MODIFICATIONS ON
         B     RENAME01                BRANCH TO RENAME ROUTINE
SCRN23   EQU   *                       PRINT  MEMBER
         CLI   0(R3),C'P'              PRINT ?
         BNE   SCRN29                  NO TEST OTHER FUNCTIONS
         TM    INFCODE3,$PDSEDIT+$PDSBR RPFPDS INVOKED BY EDIT/BROWSE?
         BNZ   SCRN98E                 YES: ALLOW ONLY THE EDIT CMD
         OI    SW,$CHANGE              MARK MODIFICATIONS ON
         TM    INFCODE4,$RECFB+$RECVB  RECFM RPFWORK NOT f or v(b) @rp3
         BNZ   SCRN25                  NO BRANCH                   @rp3
         MVI   OPER,X'FB'              MARK PRINT NOT AVAILABLE
         B     SCRN98
SCRN25   DS    0H
         LA    R1,MEMBR                Membername for bldl
         BAL   R14,BLDL                TRY TO FIND MEMBER
         LTR   R15,R15                 MEMBER NOT FOUND ?
         BNZ   SCRN55                  BRANCH
         RDJFCB RPFWORK                READ JFCB OF RPFWORK
         MVC   JFCB+44(8),MEMBR        MOVE MEMBER-NAME INTO JFCB
         OI    JFCB+86,X'01'           MARK PDSNAME(MEMBER)
         OPEN  RPFWORK,TYPE=J          OPEN THE DCB
         CLOSE RPFWORK                 AND CLOSE TO CHANGE THE JFCB
         FREEPOOL RPFWORK              AND FREE THE BUFFERS
         MVC   CMDAREA(24),=CL24'RPFWORK' MOVE DDNAME FOR RPFBRO
         MVC   CMDAREA+8(5),=C'PRINT'  MARK PRINT ONLY FOR RPFBRO
         LINK  EP=RPFBRO,PARAM=((11)),VL=1 LINK TO BROWSE MODULE
         MVC   CMDAREA(24),BLANKS      BLANK CMDAREA
         LTR   R15,R15                 PRINT ALLRIGTH ?
         BZ    SCRN27                  YES: PROCEED
         MVI   OPER,X'FA'              MARK PRINT ERROR
         B     SCRN98                  NEXT ENTRY
SCRN27   EQU   *
         MVI   OPER,C'P'               MARK PRINTED
         B     SCRN98                  TEST NEXT LINE ON SCREEN
SCRN29   DS    0H                      SHOW MEMBER
         CLI   0(R3),C'B'              BROWSE ?
         BE    SCRN30                  Yes: continue
         CLI   0(R3),C'V'              BROWSE ?
         BNE   SCRN35                  No: branch
SCRN30   DS    0H                      SHOW MEMBER
         TM    INFCODE3,$PDSEDIT       RPFPDS INVOKED BY EDIT ?
         BO    SCRN98E                 YES: ALLOW ONLY THE EDIT CMD
         TM    INFCODE4,$RECFB+$RECVB  NOT FIXED or var blocked?   @rp3
         BNZ   SCRN31                  NO: BRANCH                  @rp3
         MVI   OPER,X'FC'              MARK BROWSE N/A
         OI    SW,$CHANGE              MARK MODIFCATIONS ON
         B     SCRN98                  TEST NEXT LINE ON SCREEN
SCRN31   DS    0H
         OI    SW,$CHANGE              MARK MODIFICATIONS ON
         LA    R1,MEMBR                Membername for bldl
         BAL   R14,BLDL                TRY TO FIND MEMBER
         LTR   R15,R15                 MEMBER NOT FOUND ?
         BNZ   SCRN55                  ERROR IF NOT FOUND
         LA    R1,MEMBR                ADDRESS OF MEMBER IN R1
         BAL   R14,BROWSE              BROWSE THE MEMBER
         OI    SW,$ERASE               MARK ERASE ON
         MVI   OPER,C'S'               MARK BROWSED
         CLC   RTNCODE,F0000           RC Browse Zero              @rp5
         BE    *+8                     Yes: skip                   @rp5
         MVI   OPER,X'FC'              Browse N/A                  @rp5
         TM    INFCODE2,$RETURN        Return indicator set?       @rp1
         BNO   SCRN98                  Next entry if not           @rp1
         LA    R15,4                   RC = 0004                   @rp1
         B     SCRN99                  Return with rc=4 (to main)  @rp1
SCRN35   DS    0H
         CLI   0(R3),C'E'              EDIT SELECTED ?
         BNE   SCRN43                  NO TEST OTHERS
         TM    INFCODE3,$PDSBR         RPFPDS INVOKED BY BROWSE ?
         BO    SCRN98E                 YES: ALLOW ONLY THE EDIT CMD
         OI    SW,$CHANGE              MARK MODIFICATIONS ON
         TM    INFCODE,NOTMPPDS        NO TEMPORARY DATASET ?
         BNO   SCRN37                  NO: PROCEED
         MVI   OPER,X'F7'              MOVE ERROR CODE IN OPER
         B     SCRN98                  NEXT ENTRY
SCRN37   EQU   *                       TRY TO FIND MEMBER
         TM    INFCODE4,$RECFB         Fixed records?              @rp3
         BO    SCRN39                  Yes: proceed                @rp3
         MVI   OPER,X'F8'              EDIT NOT AVAILABLE
         B     SCRN98                  NEXT ENTRY
SCRN39   EQU   *
         LA    R1,MEMBR                Membername for bldl
         BAL   R14,BLDL                TRY TO FIND MEMBER
         LTR   R15,R15                 MEMBER NOT FOUND ?
         BNZ   SCRN55                  ERROR IF NOT FOUND
         MVC   0(8,R7),MEMBR           SAVE MEMBER IN TABLE
         LA    R7,8(R7)                NEXT ENTRY IN TABLE
         OI    SW,$ERASE+$CHANGE       MARK ERASE + CHANGE ON
         B     SCRN98                  NEXT ENTRY (DELAY EDIT)
SCRN43   EQU   *
         CLI   0(R3),C'A'              ASSIGN AN ALIAS ?
         BNE   SCRN45                  NO: SCAN FOR NEXT COMMAND
         TM    INFCODE3,$PDSEDIT+$PDSBR RPFPDS INVOKED BY EDIT/BROWSE?
         BNZ   SCRN98E                 YES: ALLOW ONLY THE EDIT CMD
         OI    SW,$CHANGE              MARK MODIFICATIONS ON (PAUSE)
         B     ASSIGN01                ASSIGN AN ALIAS
SCRN45   EQU   *
*        CLI   0(R3),C'X'              QUEUE FOR TRANSMIT (TSO IDTF)
*        BNE   SCRN53                  NO: INVALID COMMAND
*        TM    INFCODE3,$PDSEDIT+$PDSBR RPFPDS INVOKED BY EDIT/BROWSE?
*        BNZ   SCRN98E                 YES: ALLOW ONLY THE EDIT CMD
*        LA    R1,MEMBR                Membername for bldl
*        BAL   R14,BLDL                TRY TO FIND MEMBER
*        LTR   R15,R15                 MEMBER NOT FOUND ?
*        BNZ   SCRN55                  ERROR IF NOT FOUND
*        MVI   OPER,C'X'               MARK MEMBER QUEUED.
*        B     SCRN98                  NEXT ENTRY: MBR IS QUEUED
SCRN53   EQU   *
         MVI   OPER,X'EE'              INVALID OPERATION
         OI    SW,$CHANGE              MARK MODIFICATIONS ON
         TM    INFCODE3,$PDSEDIT+$PDSBR RPFPDS INVOKED BY EDIT/BROWSE?
         BZ    SCRN98                  YES: ALLOW ONLY THE EDIT CMD
         MVI   OPER,X'F2'              ELSE ANOTHER MESSAGE
         B     SCRN98                  NEXT ENTRY
SCRN55   EQU   *
         MVI   OPER,X'FD'              MEMBER NOT FOUND
         B     SCRN98                  TELL THAT TO THE USER
RENAME01 EQU   *                       RENAME MEMBER
         CLI   9(R3),C'$'              NATIONAL CHAR ?
         BE    RENAME03                BRANCH IF YES
         CLI   9(R3),C'#'              NATIONAL CHAR
         BE    RENAME03                BRANCH IF YES
         CLI   9(R3),C'@'              NATIONAL CHAR
         BE    RENAME03                BRANCH IF YES
         CLI   9(R3),C'A'              CHARACTER ?
         BL    RENAME09                INVALID MEMBERNAME
         CLI   9(R3),C'Z'              CHARACTER ?
         BH    RENAME09                INVALID MEMBERNAME
RENAME03 EQU   *
         LA    R5,RPFWORK2             DCB POINTER OF PDS
         USING IHADCB,R5               GET ADDRESSABILITY OF DCB
         L     R5,DCBDEBAD             ADDRESS OF DATA EXTENT BLOCK
         DROP  R5                      KILL ADDRESSABILITY OF DCB
         USING DEBBASIC,R5             GET ADDRESSABILITY OF DEB
         TM    DEBOPATB,DEBACCS        IS PDS OPENED FOR UPDATE ?
         BNZ   RENAME05                YES: RENAME MEMBER
         CLOSE RPFWORK2                NO: CLOSE PDS
         OPEN  (RPFWORK2,(UPDAT))          AND OPEN FOR UPDATE
         DROP  R5                      KILL ADDRESSABILITY FOR DEB
RENAME05 EQU   *                       RENAME MEMBER
         MVC   STMEM,MEMBR             MOVE MEMBERNAME FOR STOW
         MVC   STNEWN,9(R3)            MOVE NEWNAME FOR STOW
         STOW  RPFWORK2,STMEM,C        RENAME THE MEMBER
         LTR   R15,R15                 TEST RETURN CODE
         BNZ   RENAME07                PUT X'FE' IN OPER (ERROR)
         MVC   MEMBR,9(R3)             MOVE NEWNAME IN GETM
         MVI   OPER,C'R'               SUCCESSFUL RENAME
         B     SCRN98                  NEXT ENTRY IF POSSIBLE
RENAME07 EQU   *                       ERROR IN RENAME
         MVI   OPER,X'FE'              MASK ERROR
         B     SCRN98                  NEXT ENTRY IF ANY
RENAME09 EQU   *                       INVALID NEWNAME
         MVI   OPER,X'F4'              MASK ERROR
         B     SCRN98                  NEXT ENTRY IF ANY
ASSIGN01 EQU   *                       RENAME MEMBER
         CLI   9(R3),C'$'              NATIONAL CHAR ?
         BE    ASSIGN03                BRANCH IF YES
         CLI   9(R3),C'#'              NATIONAL CHAR
         BE    ASSIGN03                BRANCH IF YES
         CLI   9(R3),C'@'              NATIONAL CHAR
         BE    ASSIGN03                BRANCH IF YES
         CLI   9(R3),C'A'              CHARACTER ?
         BL    ASSIGN11                INVALID MEMBERNAME
         CLI   9(R3),C'Z'              CHARACTER ?
         BH    ASSIGN11                INVALID MEMBERNAME
ASSIGN03 EQU   *
         LA    R5,RPFWORK2             DCB POINTER OF PDS
         USING IHADCB,R5               GET ADDRESSABILITY OF DCB
         L     R5,DCBDEBAD             ADDRESS OF DATA EXTENT BLOCK
         DROP  R5                      KILL ADDRESSABILITY OF DCB
         USING DEBBASIC,R5             GET ADDRESSABILITY OF DEB
         TM    DEBOPATB,DEBACCS        IS PDS OPENED FOR UPDATE ?
         BNZ   ASSIGN05                YES: RENAME MEMBER
         CLOSE RPFWORK2                NO: CLOSE PDS
         OPEN  (RPFWORK2,(UPDAT))          AND OPEN FOR UPDATE
         DROP  R5                      KILL ADDRESSABILITY FOR DEB
ASSIGN05 EQU   *                       ASSIGN AN ALIAS
         LA    R1,MEMBR                Membername for bldl
         BAL   R14,BLDL                TRY TO FIND MEMBER
         LTR   R15,R15                 BLDL OK ?
         BNZ   ASSIGN07                NO: MEMBER NOT FOUND
         MVC   ALIASM,9(R3)            MOVE ALIAS NAME
         MVC   ALIASTTR,BLDLTTR        MOVE TTR
         MVC   ALIASC,BLDLC            MOVE 'C' BYTE
         OI    ALIASC,X'80'            MARK ALIAS
         MVC   ALIASUSR,BLDLUSER       MOVE POSSIBLE USERDATA
         STOW  RPFWORK2,ALIASMEM,A     STOW THE ALIAS IN DIRECTORY
         LTR   R15,R15                 STOW ALRIGHT
         BNZ   ASSIGN09                MARK ERROR IN ASSIGN
         MVI   OPER,C'A'               MARK ALIAS ASSIGNED
         B     SCRN98                  NEXT ENTRY IF ANY
ASSIGN07 EQU   *
         MVI   OPER,X'FD'              CODE MEMBER NOT FOUND
         B     SCRN98                  NEXT ENTRY IF ANY
ASSIGN09 EQU   *
         ST    R15,DWB                 SAVE RC FROM STOW
         ST    R0,DWB+4                SAVE REASON CODE
         SYCONVHX IN=DWB+2,OUT=STOWE+15,L=2
         SYCONVHX IN=DWB+6,OUT=STOWE+27,L=2
         MVI   OPER,X'F5'              CODE ERROR IN ASSIGN
         B     SCRN98                  NEXT ENTRY IF ANY
ASSIGN11 EQU   *
         MVI   OPER,X'F4'              INVALID NEWNAME
         B     SCRN98                  NEXT ENTRY IF ANY
SCRN98E  DS    0H
         MVI   OPER,X'F2'              ONLY THE 'S'/'E' IS VALID
SCRN98   DS    0H
         LA    R3,17(R3)               NEXT ENTRY INPUT
         LA    R10,NEXTENT(R10)        NEXT ENTRY OUTPUT
         BCT   R4,SCRN13               NEXT ENTRY
         LA    R7,EDITTBLE             LOAD THE TO BE EDITED MEMBERS
         XR    R15,R15                 RC = 0000                   @rp1
         CLI   0(R7),X'FF'             NO MEMBERS ?
         BE    *+8                     YES: DO NOT GO TO EDIT
         BAL   R14,EDIT                EDIT THE MEMBER(S) and set RC
SCRN99   EQU   *
         L     R14,GETR14              RESTORE R14
         BR    R14
         TITLE 'BROWSE MEMBERS '
*---------------------------------------------------------------------*
*                                                                     *
*        B R O W S E - INVOKE THE RPF/XA BROWSE PROCESSOR.            *
*                      MODULE RPFBRO WILL BE LINKED.                  *
*                                                                     *
*        INPUT:   R1:  AN ADDRESS TO THE MEMBER TO BE BROWSED.        *
*        OUTPUT:       NONE, ALL REGISTERS ARE UNCHANGED.             *
*                                                                     *
*------------------------------------------ (C)-2001 SKYBIRD SYSTEMS -*
         SPACE 2
BROWSE   DS    0H                     REGISTER 1 CONTAINS A(MEMBERNAME)
         STM   R0,R15,SAVEROUT         SAVE REGISTERS
         LR    R3,R1                   SAVE R1
         RDJFCB RPFWORK                READ JFCB OF RPFWORK
         MVC   JFCB+44(8),0(R3)        MOVE MEMBER-NAME INTO JFCB
         OI    JFCB+86,X'01'           MARK PDSNAME(MEMBER)
         OPEN  RPFWORK,TYPE=J          OPEN THE DCB
         CLOSE RPFWORK                 AND CLOSE TO CHANGE THE JFCB
         FREEPOOL RPFWORK              AND FREE THE BUFFERS
         MVC   CMDAREA(24),=CL24'RPFWORK' MOVE DDNAME FOR RPFBRO
         MVC   CMDAREA+8(5),=CL8' '
         LINK  EP=RPFBRO,PARAM=((11)),VL=1 LINK TO BROWSE MODULE
         MVC   CMDAREA(24),BLANKS      BLANK CMDAREA
         LM    R0,R15,SAVEROUT         RESTORE THE REGISTERS
         BR    R14
         TITLE 'EDIT A MEMBER'
*---------------------------------------------------------------------*
*                                                                     *
*        E D I T   EDIT THE SPECIFIED MEMBERS, SPECIFIED IN THE       *
*                  EDIT TABLE. ALL THE MEMBERS IN IT (MAX 40) WILL BE *
*                  EDITED.                                            *
*                  THIS ROUTINE EXECUTES THE FOLLOWING FUNCTIONS FOR  *
*                  EACH MEMBER IN THE EDITTABLE.                      *
*                  1. SAVE RPFPDS WORKSPACE ON DDNAME RPFEDT1         *
*                  2. SAVE THE CURRENT DSNAME,MEMBER AND VOLUME       *
*                  3. INVOKE THE EDITOR (RPFEDIT).                    *
*                  4. RESTORE WORKSPACE.                              *
*                     INSERT CREATED MEMBERS IN THIS PDS              *
*                  5. RESTORE DSNAME,MEMBER,VOLUME AND REALLOCATE     *
*        NOTES     REG 10 POINTS TO THE CURRENT PDS ENTRY IN THE      *
*                     WORKSPACE                                       *
*                  R2 IS USED FOR THE EDITTABLE.                      *
*        AFTER COMPLETION OF THIS ROUTINE OPERATION CODES WILL BE     *
*        SET IN THE TO BE EDITED MEMBERS AND THE CREATED OR UPDATED   *
*        MEMBER(S) (FIELD 'OPER')                                     *
*                                                                     *
*                                                                     *
*        Returncodes:    0000 - Normal                                *
*                        0004 - Return or '=n.n' cmd entered in EDIT  *
*                                                                     *
*------------------------------------------ (C)-2002 SKYBIRD SYSTEMS -*
EDIT     DS    0H
         STM   R0,R15,SAVEROUT         SAVE ALL THE REGISTERS
         MVC   SAVEDSN,DSNAME          SAVE DSNAME
         MVC   SAVEMBR,MEMBER                     ,MEMBER
         MVC   SAVEVOL,VOLUME                       ,VOLUME
         MVC   SFIRSTSC,FIRSTSCR       SAVE FIRSTSCR
         LA    R2,EDITTBLE             LOAD THE EDIT TABLE
EDIT0A   EQU   *
         CLI   0(R2),X'FF'             END OF TABLE ?
         BE    EDIT99C                 YES: TERMINATE
         L     R10,FIRSTSCR            RELOAD FIRSTSCR
EDIT0B   EQU   *
         CLC   0(8,R2),MEMBR           COMPARE IF MEMBER REACHED
         BE    EDIT0D                  YES: FILL IN
         LA    R10,NEXTENT(R10)        NEXT ENTRY IN WS
         C     R10,LASTREC             LASTREC REACHED ?
         BH    EDIT0E                  YES: BRANCH (WILL NEVER HAPPEN)
         B     EDIT0B                  BRANCH
EDIT0D   EQU   *
         TM    INFCODE,DATAENT         EMPTY MEMBER?
         BO    EDIT0E                  YES: BRANCH
         RDJFCB RPFWORK                READ JFCB OF RPFWORK
         MVC   JFCB+44(8),0(R2)        MOVE MEMBER INTO JFCB
         OI    JFCB+86,X'01'           MARK PDSNAME(MEMBER)
         OPEN  RPFWORK,TYPE=J          WRITE JFCB
         CLOSE RPFWORK                 AND CLOSE
         FREEPOOL RPFWORK              AND FREE THE BUFFERS
EDIT0E   EQU   *
         NI    SW,255-$ALLOCCH-$SAVED-$DSUSE FLAGS OFF
         CLOSE RPFWORK2                CLOSE THE DATASET
         OPEN  (EDITDCB,(OUTPUT))      OPEN TEMP DATASET
         L     R3,FIRSTREC             FIRSTREC POINTER
         LA    R4,NEXTENT              LENGTH OF ENTRY
         L     R5,LASTREC              LASTREC POINTER
         LA    R5,1(R5)                PLUS 1 FOR BXLE
EDIT01   EQU   *
         MVC   GETAREA,0(R3)           MOVE RECORD BELOW 16 MB LINE
         LA    R15,WRITEIT             WRITE ROUTINE IN 24 BIT MODE
*        BASSM R14,R15                 WRITE WORKSPACE RECORD
         BALR  R14,R15                 WRITE WORKSPACE RECORD
         BXLE  R3,R4,EDIT01            LOOP UNTIL ALL DONE
         CLOSE EDITDCB                 CLOSE TEMP DATASET
EDIT03   EQU   *
         XC    EPNEXT,EPNEXT           INIT EPNEXT FIELD
         MVC   APPEND(3),DEFAPP        DEFAULT APPEND
         MVC   NUMBERED(3),DEFNUM      DEFAULT NUMBERED
         MVC   FOLD(3),DEFOLD          DEFAULT FOLD
         MVC   MEMBER,0(R2)            MOVE MEMBER IN COMMAREA
         ST    R11,SUBPARM             SAVE PARAMETER
         LA    R1,SUBPARM              PICKUP PARAMETER
         L     R15,EPEDIT              ENTRY POINT RPFEDIT
         BALR  R14,R15                 BRANCH TO EDITOR
         CLC   RTNCODE,F0020           DATASET/MEMBER IN USE?
         BNE   EDIT03A
         L     R10,FIRSTSCR            RELOAD REG10
         OI    SW,$DSUSE               MARK DS/MEMBER IN USE
EDIT03A  EQU   *
         CLC   EPNEXT,F0000            EPNEXT FLD ? (RPFSAVE)
         BNE   EDIT04                  YES: SAVE ALLOCS.
         MVC   CMDAREA,BLANKS          BLANK 'CMDAREA'
         B     EDIT05                  SKIP SAVE
EDIT04   EQU   *
         L     R15,EPNEXT              PICKUP EPNEXT FIELD
         XC    EPNEXT,EPNEXT           CLEAR EPNEXT FIELD
         LA    R1,SUBPARM              PASS RPFCOMM AREA
         BALR  R14,R15                 BRANCH TO ENTRY POINT
*                            RPFSAVE COMPLETED
EDIT05   DS    0H
* in this section will tested if RPFSAVE had saved the member in
* another dataset or RPFEDIT has processed the copy command from a
* different dataset. If this is so, RPFDAIR will be called to
* restore the current allocations and bit '$ALLOCCH' will be set
         CLC   DSNAME,SAVEDSN          TEST IF ALLOCATIONS
         BNE   EDIT07                  ARE CHANGED
         CLC   VOLUME,SAVEVOL          TEST VOLUME
         BNE   EDIT07
         CLI   CMDAREA,C' '            NO RPF/SPF UDATA IN CMDAREA ?
         BE    EDIT06                  IF NOT: DO NOT SET FLAG
         OI    SW,$SAVED               MARK MEMBER SAVED
* IF $SAVED IS ON, A MEMBER HAS BEEN SAVED IN THE THIS PDS
* CMDAREA WILL BE SET BY RPFSAVE WITH THE RPF USERDATA
EDIT06   EQU   *
         CLC   MEMBER,SAVEMBR          TEST MEMBER
         BE    EDIT11                  YES: NOT CHANGED
EDIT07   EQU   *
         OI    SW,$ALLOCCH             MARK ALLOCATIONS CHANGED
         MVC   DSNAME,SAVEDSN          RESTORE DSNAME
         MVC   VOLUME,SAVEVOL          RESTORE VOLUME
         MVC   MEMBER,SAVEMBR          RESTORE MEMBER
         LA    R1,SUBPARM              PASS RPFCOMM AREA
         L     R15,EPDAIR              ENTRY PT RPFDAIR
         BALR  R14,R15                 BRANCH TO RPFDAIR
         XC    RTNCODE,RTNCODE         CLEAR RTNCODE FIELD
EDIT11   EQU   *
         TM    INFCODE2,$RETURN       Return indicator set by edit @rp1
         BO    EDIT99B                 End with RC=0004            @rp1
         L     R3,GETMSTRT             PICKUP WORKSPACE BEGIN
         ST    R3,FIRSTREC             SAVE IN 'FIRSTREC'
         S     R3,RLENGTH              MINUS 88
         ST    R3,LASTREC              SAVE IN 'LASTREC'
         L     R10,FIRSTREC            RELOAD REG 10
         OPEN  EDITDCB                 OPEN SAVED WORKSPACE
EDIT13   EQU   *
*        LA    R1,EDIT13A              ROUTINE TO BE RUN IN 24 BIT
*        BSM   R0,R1                   EXEC THIS ROUTINE
EDIT13A  EQU   *
         GET   EDITDCB,GETAREA         READ THE FILE
*        L     R1,=A(EDIT14+X'80000000') ROUTINE ADDRESS
*        BSM   R0,R1                   GOTO 31 BIT MODE
EDIT14   DS    0H
         C     R10,GETMEND             END OF WORKSPACE ?
         BH    EDIT92        TERMINATE, BUT ACCEPT TRUNCATION
         CLC   GETAREA+10(8),0(R2)     MEMBER EDITED REACHED ?
         BNE   EDIT14Z                 NO: BRANCH
         TM    SW,$DSUSE               DATASET/MEMBER IN USE ?
         BNO   EDIT14A                 NO: MARK MEMBER EDITED.
         MVI   GETAREA+8,X'F6'         MARK DS/MEMBER IN USE ?
         B     EDIT14Z                 PROCEED
EDIT14A  EQU   *
         MVI   GETAREA+8,C'E'        MARK MEMBER EDITED.
EDIT14Z  EQU   *
         TM    SW,$SAVED               IS A MEMBER SAVED IN THIS PDS?
         BNO   EDIT19                  NO: MOVE IMMED
         ICM   R1,15,CMDAREA           LOAD IN REG 1
         CLC   0(8,R1),GETAREA+10      COMPARE MEMBERS
         BE    EDIT15                  EQ: REPLACE WITH NEW INFO
         BL    EDIT17                  LOW: ADD THIS MEMBER IN WS.
         B     EDIT19                  HI: WAIT WITH SUBSTITUTE
EDIT15   EQU   *
* IN THIS SECTION THE RPF/SPF UDATA WILL BE UPDATED, BECAUSE THIS
* MEMBER WAS UPDATED
         ICM   R1,15,CMDAREA           LOAD IN REG 1
         BAL   R14,SPFRPFU             UDATA ROUTINE
         MVC   MEMBER,MEMBR            MOVE MEMBERNAME IN COMMAREA
         CLI   GETAREA+8,C'D'          WAS IT A DELETED MEMBER
         BNE   EDIT16                  NO: THIS MEMBER IS UPDATED
         MVI   OPER,C'C'               MARK CREATED
         AP    MEMCNT,=P'1'            INCR. # MEMBERS
         AP    SORTCNT,=P'1'           INCR. # MEMBERS
         NI    SW,255-$SAVED           FLAG OFF
         B     EDIT21                  AND BRANCH
EDIT16   EQU   *
         MVI   OPER,C'U'               MARK MEMBER UPDATED/REPLACED
         NI    SW,255-$SAVED           FLAG OFF
         B     EDIT21                  CONTINUE WITH RESTORE WS
EDIT17   EQU   *
* IN THIS SECTION A MEMBER IS ADDED IN THIS PDS BY RPFSAVE, SO
* A NEW MEMBER WITH RPF/SPF USERDATA WILL BE ADDED IN THE WORKSPACE
         ICM   R1,15,CMDAREA           LOAD IN REG 1
         BAL   R14,SPFRPFU             UDATA ROUTINE
         NI    SW,255-$SAVED           FLAG OFF
         MVC   MEMBER,MEMBR            SET IN MEMBER
         ST    R10,LASTREC             RESET 'LASTREC'
         MVI   OPER,C'C'               MARK MEMBER CREATED
         LA    R10,NEXTENT(R10)        SET TO NEXT ENTRY
         C     R10,GETMEND             END OF WORKSPACE ?
         BH    EDIT91        TERMINATE, BUT ACCEPT TRUNCATION
         AP    MEMCNT,=P'1'            INCREASE MEMBER COUNTER
         AP    SORTCNT,=P'1'           INCR. # MEMBERS
EDIT19   EQU   *
         CLC   GETAREA+2(8),=2F'-1'    EOF EDITDCB REACHED ?
         BE    EDIT91                  YES: CLOSE AND TERMINATE
         MVC   0(80,R10),GETAREA       MOVE RECORD
EDIT21   DS    0H
         ST    R10,LASTREC             AND RESET 'LASTREC'
         LA    R10,NEXTENT(R10)        SET TO NEXT ENTRY
         B     EDIT13                  NEXT ENTRY
EDIT23   EQU   *                       EODAD EDIT DCB
         MVC   GETAREA+2(8),=2F'-1'    MOVE HIGH VALUE IF EOF
*        L     R1,=A(EDIT91+X'80000000') ROUTINE ADDRESS
*        BSM   R0,R1                   GOTO 31 BIT MODE
EDIT91   DS    0H
         TM    SW,$SAVED               Member saved?
         BZ    EDIT92                  No: branch
*---------------------------------------------------------------------*
* At this point a member is created with alphabetically the highest
* name, this will not be noticed in EDIT14Z, because EDITDCB has been
* detected end of file, before RPFPDS notices
* that the member was created (the test in EDIT14Z is always 'HIGH')
*---------------------------------------------------------------------*
         ICM   R1,15,CMDAREA           LOAD IN REG 1
         BAL   R14,SPFRPFU             UDATA ROUTINE
         NI    SW,255-$SAVED           FLAG OFF
         MVC   MEMBER,MEMBR            SET IN MEMBER
         MVI   OPER,C'C'               MARK MEMBER CREATED
         ST    R10,LASTREC             RESET 'LASTREC'
EDIT92   DS    0H
         CLOSE EDITDCB                 CLOSE THE DCB
         FREEPOOL EDITDCB               AND FREE THE BUFFERS
         OPEN  RPFWORK2                OPEN THE PDS AGAIN
EDIT99   EQU   *
         MVC   DWB(8),MEMBER           MOVE MEMBERN.IN WKFIELD
         TR    DWB(8),COMTRTAB         REMOVE EVENT. UNPRINTS.
         CLC   DWB(8),MEMBER           ANYTHING CHANGED ?
         BE    EDIT99A                 YES: LEAVE MEMBERNAME
         MVC   MEMBER,BLANKS           BLANK MEMBERNAME
EDIT99A  EQU   *
         MVC   FIRSTSCR,SFIRSTSC       RESTORE FIRSTSCR
         LA    R2,8(R2)                SET ON NEXT ENTRY
         B     EDIT0A                  AND BRANCH
EDIT99B  DS    0H                                                  @rp1
         LA    R15,4                   RC=0004                     @rp1
         B     EDIT99D                 Return                      @rp1
EDIT99C  DS    0H                                                  @rp1
         XR    R15,R15                 RC=0000                     @rp1
EDIT99D  DS    0H                                                  @rp1
         LM    R0,R14,SAVEROUT         RESTORE THE REGISTERS
         BR    R14                     GO BACK TO CALLER
         TITLE 'TRANSMIT MEMBERS VIA TSO COMMAND ''TRANSMIT'''
*---------------------------------------------------------------------*
*                                                                     *
*        X M I T     - INVOKE THE TSO COMMAND TRANSMIT TO XMIT THE    *
*                      PREVIOUS QUEUED MEMBERS TO ANOTHER NJE NODE.   *
*                                                                     *
*        INPUT:        THE MEMBER LIST POINTED TO BY FIELD 'FIRSTREC' *
*        OUTPUT:       A SUITABLE MSG IN MSG5.                        *
*                                                                     *
*------------------------------------------ (C)-2002 SKYBIRD SYSTEMS -*
XMIT     DS    0H
         STM   R0,R15,SAVEROUT         SAVE ALL REGISTERS
         NI    SW,255-$XMITQ           SET XMIT BIT OFF
         ZAP   XMITCTR,=P'0'           CLEAR COUNTER
         TPUT  ERASE,L'ERASE,FULLSCR   ERASE THE WHOLE SCREEN
         STLINENO LINE=1,MODE=OFF
         CLOSE RPFWORK2                CLOSE THE FILE
         MVC   CMDOPER,BLANKS          BLANK FIELD
         LA    R5,CMDOPER              POINT TO OPERANDS OF XMIT CMD
         LA    R4,13                   LENGTH OF 'TSOEXEX XMIT '
         LA    R3,SCREEN+5             POINT TO NODE OR NICKNAME
         LA    R6,17                   MAX LEN NODE/USERID
XMIT001  EQU   *
         CLI   0(R3),C' '              BLANK FOUND ?
         BE    XMIT003                 YES: BRANCH
         MVC   0(1,R5),0(R3)           MOVE THE BYTE
         LA    R4,1(R4)                INCR. LEN
         LA    R5,1(R5)                NEXT BYTE OUTPUT
         LA    R3,1(R3)                NEXT BYTE INPUT
         BCT   R6,XMIT001              LOOP
XMIT003  EQU   *
         MVC   0(5,R5),=C' DS('''      MOVE 'DS' OPERAND
         LA    R5,5(R5)                INCR POINTER
         LA    R4,5(R4)                INCR LENGTH
         MVC   0(44,R5),DSNAME         MOVE DSNAME IN 'DS' OPERAND
         LA    R6,44                   MAX LENGTH
XMIT005  EQU   *
         CLI   0(R5),C' '              TRAILING BLANK FOUND ?
         BE    XMIT007                 YES: BRANCH
         LA    R5,1(R5)                NEXT BYTE
         LA    R4,1(R4)                INCR. LENGTH
         BCT   R6,XMIT005              LOOP UNTIL FOUND
         LA    R5,1(R5)                INCR. R5
         LA    R4,1(R4)                INCR. LENGTH
XMIT007  EQU   *
         MVC   0(10,R5),=C''') MEMBER(' MOVE ENDING QUOTE + MBR OPER.
         LA    R4,10(R4)               INCR LENGTH
         LA    R5,10(R5)               POINT TO FIRST MEMBER IN CMD
         STM   R4,R5,XMITFLDS          SAVE REG 4,5
         L     R10,GETMSTRT            POINT TO FIRST MEMBER
XMIT009  EQU   *
         LM    R4,R5,XMITFLDS          RELOAD LENGTH + START FIELD
         NI    SW,255-$PNDXMIT         RESET FLAG
XMIT011  EQU   *
         CLI   OPER,C'X'               MEMBER QUEUED FOR XMIT ?
         BNE   XMIT019                 NO: BRANCH
         CH    R4,=H'240'              LENGTH LONGER THAN 240
         BNH   XMIT013                 NO: BRANCH
         BAL   R6,XMIT050              TRANSMIT THE MEMBERS
         LTR   R15,R15                 XMIT OK ?
         BNZ   XMIT070                 NO: GIVE ERROR MSG
         B     XMIT009                 ISSUE NEXT XMIT CMD
XMIT013  EQU   *
         AP    XMITCTR,=P'1'           INCREASE COUNTER
         OI    SW,$PNDXMIT+$XMITQ      MARK COMMAND PENDING + QUEUED
*                                      MEMBERS FOUND
         LA    R3,MEMBR                POINT TO MEMBER IN WORKSPACE
         LA    R6,8                    MAX LENGTH MEMBERNAME
XMIT015  EQU   *
         CLI   0(R3),C' '              BLANK FOUND (END OF MEMBER)
         BE    XMIT017                 YES: BRANCH
         MVC   0(1,R5),0(R3)           MOVE THE BYTE
         LA    R5,1(R5)                POINT TO NEXT BYTE OUTPUT
         LA    R4,1(R4)                INCR LENGTH
         LA    R3,1(R3)                POINT TO NEXT BYTE INPUT
         BCT   R6,XMIT015
XMIT017  EQU   *
         MVI   0(R5),C' '              INSERT BLANK AFTER MEMBERNAME
         LA    R5,1(R5)                INCR. POINTER
         LA    R4,1(R4)                INCR. COUNT
XMIT019  EQU   *
         LA    R10,NEXTENT(R10)        POINT TO NEXT MEMBER IN WORKSPC
         C     R10,LASTREC             PAST LAST RECORD PTR ?
         BNH   XMIT011                 BRANCH IF SO
         TM    SW,$PNDXMIT             LAST COMMAND NOT COMPLETED ?
         BNO   XMIT090                 YES: TERMINATE
         BAL   R6,XMIT050              ISSUE XMIT CMD
         LTR   R15,R15                 XMIT OK ?
         BNZ   XMIT070                 NO: GIVE ERROR MSG
         B     XMIT090                 XMIT: COMPLETE
XMIT050  EQU   *
         BCTR  R5,0                    REMOVE LAST BLANK AFTER LAST MBR
         MVC   0(7,R5),=C') NOLOG'     MOVE LAST OPERAND
         LA    R4,10(R4)               LENGTH CMD + HEADER
         STH   R4,CMDL                 SAVE RESULT
         L     R1,COMMCPPL             LOAD CPPL ADDRESS
         USING CPPL,R1                 GET ADDRESSABILITY
         L     R2,CPPLECT              GET ECT ADDRESS
         USING ECT,R2
         MVC   XMITCBUF,CPPLCBUF       SAVE OLD CBUF ADDRESS
         MVC   CPPLCBUF,=A(XMITCMD)    MOVE COMMAND
         MVI   ECTSWS,X'00'            CLEAR FLAGS
         MVC   ECTPCMD,=CL8'TSOEXEC'   MOVE COMMAND NAME
         LINK  EP=TSOEXEC              INVOKE COMMAND PROCESSOR
         L     R1,COMMCPPL
         MVC   CPPLCBUF,XMITCBUF       RESTORE CMD BUFFER ADDRESS
         DROP  R1,R2
         BR    R6                      RETURN
XMIT070  EQU   *
         CVD   R15,DWB                 CONVERT RC
         UNPK  ERRDTXT+18(4),DWB
         OI    ERRDTXT+21,X'F0'        RC IN MSG
         MVC   MSG5,ERRDTXT            MARK XMIT FAILED
         B     XMIT999                 RETURN
XMIT090  EQU   *
         TM    SW,$XMITQ               QUEUED MEMBERS FOUND ?
         BO    XMIT092                 YES: BRANCH
         MVC   MSG5,ERRETXT            MARK NO MEMBERS XMITTED
         B     XMIT999                 EXIT
XMIT092  EQU   *
         MVC   XMITNODE+16(15),SCREEN+5
         L     R10,GETMSTRT            POINT TO FIRST MEMBER
         L     R7,LASTREC              POINT TO LAST
         LA    R7,79(R7)                             MEMBER
         LA    R6,NEXTENT              LENGTH OF ENTRY
XMIT094  EQU   *
         CLI   OPER,C'X'               QUEUED MEMBER FOUND
         BNE   XMIT096                 NO: BRANCH
         MVI   OPER,X'F3'              NOT QUEUED ANYMORE
XMIT096  EQU   *
         BXLE  R10,R6,XMIT094
         UNPK  INF2TXT+1(5),XMITCTR    UNPACK THE COUNTER
         OI    INF2TXT+5,X'F0'         AND REMOVE SIGN
         MVC   MSG5,INF2TXT            MOVE SUCCESSFUL MSG
XMIT999  EQU   *
         STFSMODE ON,INITIAL=NO
         NI    INFCODE3,255-$DAIRALC   MASK DATASET NOT ALLOCATED
         ST    R11,SUBPARM             SAVE PARAMETER
         LA    R1,SUBPARM              PICKUP PARAMETER
         L     R15,EPDAIR              REALLOCATE RPFWORK AND RPFWORK2
         BALR  R14,R15                 CALL RPFDAIR
         OPEN  RPFWORK2                AND REOPEN AGAIN
         MVC   SCR5TXT(2),ERASE        REPLACE WCC OF SCR5TXT
         LM    R0,R15,SAVEROUT         RESTORE ALL REGISTERS
         BR    R14                     RETURN TO CALLER
XMITFLDS DS    D
XMITCBUF DS    F
XMITCTR  DS    PL3
         TITLE 'WRITE MEMBER LIST ON TEMPORARY FILE'
*---------------------------------------------------------------------*
*                                                                     *
*        WRITEIT: ROUTINE TO SAVE THE WORKSPACE RECORDS               *
*                 THIS ROUTINE WILL BE ENTERED IN 24 BIT MODE         *
*                                                                     *
*------------------------------------------ (C)-2002 SKYBIRD SYSTEMS -*
WRITEIT  DS    0H
         ST    R14,SAVE14WR            SAVE REGISTER 14
         PUT   EDITDCB,GETAREA         SAVE WORKSPACE RECORD
         L     R14,SAVE14WR            RESTORE REG 14
         BR    R14                     RETURN TO 31 BIT CALLER
         TITLE 'FILL IN RPF NEW FMT OR SPF UDATA IN MEMBER ENTRY'
*---------------------------------------------------------------------*
*                                                                     *
*        ROUTINE  SPFRPFU:                                            *
*              FILL IN RPF NEW FORMAT OR SPF USERDATA IN THE MEMBER   *
*              LIST, FOR EACH ENTRY                                   *
*        INPUT:  R10  POINTER TO CURRENT MEMBER ENTRY IN WORKSPACE,   *
*                     MAPPED WITH DSECT 'MEMBAREA' (VIA R10)          *
*                R1   POINTER TO MEMBER + USERDATA FIELD              *
*                     MAPPED WITH DSECT 'SPFDATA' (VIA R3)            *
*        OUTPUT: POINTED BY R10, FORMATTED MEMBER ENTRY IN WORKSPACE. *
*                                                                     *
*------------------------------------------ (C)-2002 SKYBIRD SYSTEMS -*
SPFRPFU  DS    0H
         STM   R0,R15,SAVEUDAT         SAVE REGISTERS
         LR    R3,R1                   MEMBER ENTRY IN REG3
         MVC   MEMBR,0(R3)             MOVE MEMBERNAME
         MVC   INPTTR,SPFTTR           MOVE TTR
         XR    R7,R7                   CLEAR REG. 7
         IC    R7,SPFVERS              VERSION NUMBER
         CVD   R7,DWB                  CONVERT TO PACKED
         OI    DWB+7,X'0F'             CLEAR SIGN
         UNPK  INPVERS(2),DWB          UNPK THE RESULT
         MVI   INPCOLON,C':'           MOVE COLON
         IC    R7,SPFMOD               VERSION NUMBER
         CVD   R7,DWB                  CONVERT TO PACKED
         OI    DWB+7,X'0F'             CLEAR SIGN
         UNPK  INPMOD(2),DWB           UNPK THE RESULT
         MVC   INPUID,SPFUID           MOVE USERID SAVER
         MVC   YYDDD,SPFDATEU          Saved date                  @rp4
         L     R15,EPCNVDT             RPFCNVDT routine            @rp4
         MVI   DDMMYY,X'FF'            First parm is 4 bytes       @rp4
         CALL  (15),(YYDDD,DDMMYY)     Convert date to gregorian   @rp4
         MVC   INPDATE(4),CC           Year including century      @rp4
         MVC   INPDATE+4(2),MONNBR     Month number                @rp4
         MVC   INPDATE+6(2),DD         Daynumber in month          @rp4
         XR    R7,R7                   CLEAR REG 7.     (00000000)
         ICM   R7,6,SPFTIME            INSERT IN MIDDLE (00TTTT00)
         IC    R7,=X'F0'               INSERT SIGN      (00TTTTF0)
         SRL   R7,4                    SHIFT TO SIGN    (000TTTTF)
         ST    R7,DWB                  STORE THE RESULT
         MVC   INPTIME(10),BLANKS      BLANK TIME FIELD
         MVC   INPTIME(7),=X'402120207A2020'  MOVE PATTERN
         ED    INPTIME(7),DWB+1        MOVE TIME SAVED
         XR    R7,R7                   CLEAR REG 6.
         ICM   R7,3,SPFRECU            NUMBER OF RECORDS
         CVD   R7,DWB                  CONVERT TO PACKED
         MVC   INPCARD#,=X'402020202120' move ED string
         ED    INPCARD#(6),DWB+5       CONVERT TO ZONED
         LM    R0,R15,SAVEUDAT         RESTORE REGISTERS
         BR    R14                     RETURN
         TITLE 'CONVERT SCREEN ROUTINE'
*---------------------------------------------------------------------*
*                                                                     *
*        C O N V I N:        CONVERT A TGET ASIS SCREEN TO NORMAL     *
*        THE SBA-S AND ATTRIBUTE BYTES WILL BE REMOVED AND THE        *
*        REST WILL BE PLACED IN 'SCREEN' THE AIDBYTE WILL BE          *
*        PLACED IN 'AIDBYTE'                                          *
*        THE LENGTH OF THE OUTPUT WILL BE PLACED IN REGISTER 1        *
*        REGISTER 2 POINTS TO THE AIDBYTE.                            *
*        REGISTER 5 POINTS TO THE OUTPUT SCREEN AREA                  *
*                                                                     *
*------------------------------------------ (C)-2002 SKYBIRD SYSTEMS -*
         SPACE 2
CONVIN   DS    0H                      CONVERT SCREEN ROUTINE
         ST    R14,CONVR14             SAVE R14
         L     R3,COMMSCR              SCREEN ADDRESS FROM COMMAREA
         CNOP  0,4                     ALIGN ON FULLWORD
         TGET  (R3),2200,ASIS          READ THE SCREEN
         MVC   0(1,R2),0(R3)           SAVE AIDBYTE
         XR    R2,R2                   INIT OUTPUT LENGTH
         LR    R4,R1                   SAVE INPUT LENGTH
         SH    R4,=H'6'                SKIP AID, cursor and 1st sba
         C     R4,F0000                REGISTER ZERO
         BNH   CONV099                 NOT HIGH: END OF ROUTINE
         LA    R3,6(R3)                Point to command field      @rp8
         LR    R1,R5                   Save register 5             @rp8
         MVC   0(24,R5),BLANKS         Blank command field in outp.@rp8
*        Output screen is pointed to by R5
CONV001  DS    0H
         CLI   0(R3),X'11'             SBA after command field     @rp8
         BE    CONV003                 Yes: End of command         @rp8
         MVC   0(1,R5),0(R3)           Move input byte             @rp8
         LA    R3,1(R3)                Next byte output            @rp8
         LA    R2,1(R2)                Count output bytes          @rp8
         LA    R5,1(R5)                Next byte output            @rp8
         BCT   R4,CONV001              Test next byte              @rp8
         B     CONV099                 End of routine              @rp8
CONV003  DS    0H
         LA    R2,24                   Set init length to L(cmd)   @rp8
         LA    R5,24(R1)               Reset output scr.           @rp8
CONV011  CLI   0(R3),X'11'             SET BUFFER ADDRESS ?        @rp8
         BE    CONV013                 Yes: skip next 3 bytes input@rp8
         MVC   0(1,R5),0(R3)           MOVE INPUT BYTE
         LA    R3,1(R3)                NEXT BYTE INPUT
         LA    R2,1(R2)                COUNT OUTPUT BYTES
         LA    R5,1(R5)                NEXT BYTE OUTPUT
         BCT   R4,CONV011              TEST NEXT BYTE              @rp8
         B     CONV099                 END OF ROUTINE
CONV013  LA    3,3(3)                  SKIP 3 BYTES INPUT          @rp8
         BCTR  4,0                     MINUS 1 BCT
         BCTR  4,0                     MINUS 1 BCT
         BCT   4,CONV011               TEST NEXT BYTE              @rp8
CONV099  LR    R1,R2                   OUTPUT LENGTH IN REGISTER 1
         L     R14,CONVR14             RESTORE R14
         BR    R14                     RETURN TO CALLER
         TITLE 'P F K  SEARCH ROUTINE'
*---------------------------------------------------------------------*
*                                                                     *
*        P F K    ROUTINE TO CHECK THE AIDBYTE WITH THE PFK DEFINITION*
*                 IN COMMAREA IF THE PFK IS FOUND THE COMMAND         *
*                 IN THE PFK WILL BE PLACED INTO THE FIELD POINTED    *
*                 BY REGISTER 2                                       *
*        REGISTER 1 POINTS TO THE AIDBYTE.                            *
*        REGISTER 2 POINTS TO THE COMMAND AREA OF THE SCREEN          *
*                                                                     *
*        RETURNCODES: 00 PFK FOUND CONFIRMATION IS NO                 *
*                     04 PFK FOUND CONFIRMATION IS YES                *
*                     08 PFK NOT DEFINED OR NOT FOUND                 *
*                     12 INVALID PFK DEFINITION                       *
*                                                                     *
*------------------------------------------ (C)-2002 SKYBIRD SYSTEMS -*
         SPACE 2
PFK      ST    R14,PFKR14
         LA    R4,DEFPFK01
         LA    R5,24
PFK01    CLC   0(1,R4),0(R1)
         BE    PFK05
         LA    R4,26(R4)
         BCT   R5,PFK01
         LA    R15,8
         B     PFK99
PFK05    CLI   1(R4),C'X'
         BNE   PFK06
         LA    R15,8
         B     PFK99
PFK06    DS    0H                      CLEAR INPUT COMMAND FIELD
         MVC   0(24,R2),BLANKS         CLEAR OUTPUT COMMAND FIELD
         L     R1,COMMSCR              PICKUP UNFORMATTED SCREEN
         CLI   6(R1),X'94'             MAX OPERAND (SCROLL) ?
         BE    PFK06A                  YES: BRANCH
         CLI   6(R1),C'M'              MAX OPERAND (SCROLL) ?
         BNE   PFK08                   NO: IGNORE
PFK06A   EQU   *
         CLC   2(3,R4),=C'SCF'         SCROLL FORWARD ?
         BNE   PFK07                   NO: TRY SCB
         MVC   0(6,R2),=C'BOTTOM'      YES: BOTTOM COMMAND
         B     PFK99
PFK07    CLC   2(3,R4),=C'SCB'         SCROLL BACKWARD ?
         BNE   PFK08                   NO: IGNORE
         MVC   0(3,R2),=C'TOP'         YES: TOP COMMAND
         B     PFK99
PFK08    DS    0H                      MOVE PFK COMMAND INTO REP AREA
         MVC   0(24,R2),2(R4)          MOVE PFK COMMAND INTO BUFFER
         CLI   1(R4),C'N'
         BNE   PFK09
         LA    R15,0
         B     PFK99
PFK09    CLI   1(R4),C'Y'
         BNE   PFK11
         LA    R15,4
         B     PFK99
PFK11    LA    R15,12
         B     PFK99
PFK99    L     R14,PFKR14
         BR    R14
         TITLE 'BLDL MEMBER'
*---------------------------------------------------------------------*
*                                                                     *
*        B L D L:    ROUTINE TO LOCATE A MEMBER IN A PDS              *
*                    INPUT:  R10:     POINTER TO CURRENT MEMBER ENTRY *
*                                     MAPPED WITH DSECT MEMBAREA      *
*                            R1       Adress of the member            *
*                    OUTPUT: BLDLLIST THE DIRECTORY ENTRY OF THE      *
*                                     MEMBER IS BLDL IS ALRIGHT       *
*                            R15:     RETURN CODE OF BLDL             *
*                                     (00 BLDL IS ALRIGHT)            *
*                                                                     *
*------------------------------------------ (C)-2001 SKYBIRD SYSTEMS -*
         SPACE 2
BLDL     DS    0H
         ST    R14,BLDLR14             SAVE REGISTER
         MVC   BLDLNAME,0(R1)          MOVE MEMBER TO BE LOCATED
         BLDL  RPFWORK2,BLDLLIST       TRY TO FIND MEMBER
         L     R14,BLDLR14             RESTORE R14
         BR    R14                     RETURN (RC= (R15))
         TITLE 'END OF ROUTINE'
PDS999   EQU   *                       END OF ROUTINE
         CLOSE RPFWORK2                CLOSE THE PDS
RETURN   L     R13,SAVE+4              PREVIOUS SAVE AREA
         RETURN (14,12),RC=0           BACK TO CALLER
         TITLE 'VARIABLES AND CONTROL BLOCKS'
DWB      DS    D                       FOR CVD/CVB INSTRUCTIONS
TEMP     DS    D                       WORKFIELD
SORTCNT  DS    D
SORTFW   DS    F                       CONTAINS 0/4/8 OR 12
SFIRSTSC DS    F
PUTR14   DS    F
SAVE14L  DS    F
GETR14   DS    F
SCRLEN   DS    F
CONVR14  DS    F
SAVE14WR DS    F
PFKR14   DS    F
BLDLR14  DS    F
F0000    DC    F'0'
F0004    DC    F'4'
F0008    DC    F'8'
F0020    DC    F'20'
F381     DC    F'381'                  LENGTH OF 'SCREEN' 3278 MOD 2
F517     DC    F'517'                  LENGTH OF 'SCREEN' 3278 MOD 3
F704     DC    F'704'                  LENGTH OF 'SCREEN' 3278 MOD 4
NEXTSCR  DS    F                       21/29/40 * NEXTENT
SAVEROUT DC    16F'0'                  SAVE AREA FOR SUBROUTINES
SAVEUDAT DC    16F'0'                  SAVE AREA FOR SPFSPFU
SUBPARM  DS    F                       PARM FOR SUBROUTINES
#LINES   DS    F                       CONTAINS 21/29/40
TPUTLEN  DS    F                       LENGTH TO BE WRITTEN
*
BLDLLIST DS    0F                      FOR BLDL
N1       DC    AL2(1)                  NUMBER OF ENTRIES
L1       DC    AL2(76)                 LENGTH OF ENTRY
BLDLNAME DS    0CL76                   BLDL ENTRY
BLDLM    DS    CL8                     MEMBERNAME
BLDLTTR  DS    CL3                     TTR
BLDLKZ   DS    CL2                     K AND Z BYTE
BLDLC    DS    C                       C BYTE
BLDLUSER DS    CL62                    USERDATA IF ANY
*
ALIASMEM DS    0F                      FOR ASSIGNING AN ALIAS
ALIASM   DS    CL8                     MEMBER
ALIASTTR DS    CL3                     TTR
ALIASC   DS    C                       C
ALIASUSR DS    CL62                    POSSIBLE USER DATA
*
EXLST    DS    0F                      JFCB EXIT RPFWORK
         DC    X'87',AL3(JFCB)
JFCB     DS    CL176
*                                      THE EDIT TABLE
EDITTBLE DS    40CL8                   Contains max 40 members
         DS    CL8'FFFFFFFFFFFFFFFF'
*
RLENGTH  DC    A(NEXTENT)
*
STMEM    DS    CL8                     FOR STOW INSTRUCTION
STNEWN   DS    CL8                     FOR STOW INSTRUCTION
*
DIRAREA  DS    CL256                   INPUT BUFFER RPFWORK2
GETAREA  DS    CL80
SCREEN   DS    CL900
JULTODAY DS    CL8                     DATE OF TODAY               @rp4
BUFFER   DS    CL24
AIDBYTE  DS    C
SAVEC    DS    C                       SAVE FIELD FOR 'C' BYTE
MEMCNT   DC    PL3'0'
PDSH1    DC    CL46'Userid  Date       Time  Lines Level  Members=' @r4
PDSH2    DC    CL46'C    --- Variable user data --        Members=' 2K
SW       DC    X'00'
$CHANGE  EQU   X'80'
$DELETE  EQU   X'40'
$ALLOCCH EQU   X'20'  IF THIS BIT IS ON ALLOCATIONS ARE CHANGED
$ERASE   EQU   X'10'  IF THIS BIT IS ON THE PDS-SCREEN SHOULD BE
*                     ERASE, BECAUSE A BROWSE, EDIT OR PFK SCREEN WAS
*                     DISPLAYED.
$SAVED   EQU   X'08'  IF THIS BIT ON, MEMBER HAS BEEN SAVED IN THIS PDS
$DSUSE   EQU   X'04'  IF THIS BIT ON, DATASET/MEMBR FOUND IN USE (EDIT)
$PNDXMIT EQU   X'02'  IF ON: PENDING XMIT COMMAND
$XMITQ   EQU   X'01'  IF ON: MEMBERS QUEUED FOR TRANSMISSION
*
SAVEDSN  DS    CL44                    FOR EDIT FUNCTION
SAVEMBR  DS    CL8                     FOR EDIT FUNCTION
SAVEVOL  DS    CL6                     FOR EDIT FUNCTION
         LTORG
         PRINT NOGEN                   SUPPRESS PRINT FOR DCB
EDITDCB  DCB   DSORG=PS,DDNAME=RPFEDT1,MACRF=(GM,PM),EODAD=EDIT23,     X
               RECFM=FB,LRECL=80,BLKSIZE=12960
RPFWORK  DCB   DSORG=PS,DDNAME=RPFWORK,MACRF=GM,                       X
               EXLST=EXLST
RPFWORK2 DCB   DSORG=PO,DDNAME=RPFWORK2,MACRF=R,BLKSIZE=256,RECFM=F
         PRINT GEN
         TITLE 'SCREEN FORMATS'
NOERASE  DC    X'27F1'
ERASE    DC    X'27F5C01140401D40'
SCR5TXT  DC    X'27F1C21140401DF8'
SCR5VAR  DC    CL10'Members of'
         DC    CL4' PDS'
SCR5PDSE DC    CL3' :'
SCR5DSN  DC    CL40' '
         DC    X'1140F9'           R01,C58
MSG5     DC    CL22' '
         DC    X'11C150',X'1DF8',C'Cmd =>',X'1DC113'
REP5     DC    CL24' ',X'1DF0'
         DC    X'11C25F',X'1DF0'   R02,C80
         DC    AL3(YELLOW)
         DC    C' C Name     Newname  TTR    '
SCR5H    DS    CL46                    SUITABLE HEADER
SCR5CNT  DC    CL5' ',X'1DF0'
         DC    X'11C3F0'
         DC    AL3(GREEN)
LNE5     DC    X'1DC9',X'11C3F1',CL1' ',X'1DF1',CL8' ',X'1DC9',CL8' '
         DC    X'1DF0',AL3(TURQ),CL44' ',X'1DF8',CL14' ',AL3(GREEN)
SCRENT   EQU   *-LNE5
         DC    X'1DC9',X'11C5C1',CL1' ',X'1DF1',CL8' ',X'1DC9',CL8' '
         DC    X'1DF0',AL3(TURQ),CL44' ',X'1DF8',CL14' ',AL3(GREEN)
         DC    X'1DC9',X'11C6D1',CL1' ',X'1DF1',CL8' ',X'1DC9',CL8' '
         DC    X'1DF0',AL3(TURQ),CL44' ',X'1DF8',CL14' ',AL3(GREEN)
         DC    X'1DC9',X'11C761',CL1' ',X'1DF1',CL8' ',X'1DC9',CL8' '
         DC    X'1DF0',AL3(TURQ),CL44' ',X'1DF8',CL14' ',AL3(GREEN)
         DC    X'1DC9',X'11C8F1',CL1' ',X'1DF1',CL8' ',X'1DC9',CL8' '
         DC    X'1DF0',AL3(TURQ),CL44' ',X'1DF8',CL14' ',AL3(GREEN)
         DC    X'1DC9',X'114AC1',CL1' ',X'1DF1',CL8' ',X'1DC9',CL8' '
         DC    X'1DF0',AL3(TURQ),CL44' ',X'1DF8',CL14' ',AL3(GREEN)
         DC    X'1DC9',X'114BD1',CL1' ',X'1DF1',CL8' ',X'1DC9',CL8' '
         DC    X'1DF0',AL3(TURQ),CL44' ',X'1DF8',CL14' ',AL3(GREEN)
         DC    X'1DC9',X'114C61',CL1' ',X'1DF1',CL8' ',X'1DC9',CL8' '
         DC    X'1DF0',AL3(TURQ),CL44' ',X'1DF8',CL14' ',AL3(GREEN)
         DC    X'1DC9',X'114DF1',CL1' ',X'1DF1',CL8' ',X'1DC9',CL8' '
         DC    X'1DF0',AL3(TURQ),CL44' ',X'1DF8',CL14' ',AL3(GREEN)
         DC    X'1DC9',X'114FC1',CL1' ',X'1DF1',CL8' ',X'1DC9',CL8' '
         DC    X'1DF0',AL3(TURQ),CL44' ',X'1DF8',CL14' ',AL3(GREEN)
         DC    X'1DC9',X'1150D1',CL1' ',X'1DF1',CL8' ',X'1DC9',CL8' '
         DC    X'1DF0',AL3(TURQ),CL44' ',X'1DF8',CL14' ',AL3(GREEN)
         DC    X'1DC9',X'11D161',CL1' ',X'1DF1',CL8' ',X'1DC9',CL8' '
         DC    X'1DF0',AL3(TURQ),CL44' ',X'1DF8',CL14' ',AL3(GREEN)
         DC    X'1DC9',X'11D2F1',CL1' ',X'1DF1',CL8' ',X'1DC9',CL8' '
         DC    X'1DF0',AL3(TURQ),CL44' ',X'1DF8',CL14' ',AL3(GREEN)
         DC    X'1DC9',X'11D4C1',CL1' ',X'1DF1',CL8' ',X'1DC9',CL8' '
         DC    X'1DF0',AL3(TURQ),CL44' ',X'1DF8',CL14' ',AL3(GREEN)
         DC    X'1DC9',X'11D5D1',CL1' ',X'1DF1',CL8' ',X'1DC9',CL8' '
         DC    X'1DF0',AL3(TURQ),CL44' ',X'1DF8',CL14' ',AL3(GREEN)
         DC    X'1DC9',X'11D661',CL1' ',X'1DF1',CL8' ',X'1DC9',CL8' '
         DC    X'1DF0',AL3(TURQ),CL44' ',X'1DF8',CL14' ',AL3(GREEN)
         DC    X'1DC9',X'11D7F1',CL1' ',X'1DF1',CL8' ',X'1DC9',CL8' '
         DC    X'1DF0',AL3(TURQ),CL44' ',X'1DF8',CL14' ',AL3(GREEN)
         DC    X'1DC9',X'11D9C1',CL1' ',X'1DF1',CL8' ',X'1DC9',CL8' '
         DC    X'1DF0',AL3(TURQ),CL44' ',X'1DF8',CL14' ',AL3(GREEN)
         DC    X'1DC9',X'115AD1',CL1' ',X'1DF1',CL8' ',X'1DC9',CL8' '
         DC    X'1DF0',AL3(TURQ),CL44' ',X'1DF8',CL14' ',AL3(GREEN)
         DC    X'1DC9',X'115B61',CL1' ',X'1DF1',CL8' ',X'1DC9',CL8' '
         DC    X'1DF0',AL3(TURQ),CL44' ',X'1DF8',CL14' ',AL3(GREEN)
         DC    X'1DC9',X'115CF1',CL1' ',X'1DF1',CL8' ',X'1DC9',CL8' '
         DC    X'1DF0',AL3(TURQ),CL44' ',X'1DF8',CL14' ',AL3(GREEN)
SCR524   EQU   *-SCR5TXT               3278/3279 MODEL 3 SECTION
         DC    X'1DC9',X'115EC1',CL1' ',X'1DF1',CL8' ',X'1DC9',CL8' '
         DC    X'1DF0',AL3(TURQ),CL44' ',X'1DF8',CL14' ',AL3(GREEN)
         DC    X'1DC9',X'115FD1',CL1' ',X'1DF1',CL8' ',X'1DC9',CL8' '
         DC    X'1DF0',AL3(TURQ),CL44' ',X'1DF8',CL14' ',AL3(GREEN)
         DC    X'1DC9',X'116061',CL1' ',X'1DF1',CL8' ',X'1DC9',CL8' '
         DC    X'1DF0',AL3(TURQ),CL44' ',X'1DF8',CL14' ',AL3(GREEN)
         DC    X'1DC9',X'1161F1',CL1' ',X'1DF1',CL8' ',X'1DC9',CL8' '
         DC    X'1DF0',AL3(TURQ),CL44' ',X'1DF8',CL14' ',AL3(GREEN)
         DC    X'1DC9',X'11E3C1',CL1' ',X'1DF1',CL8' ',X'1DC9',CL8' '
         DC    X'1DF0',AL3(TURQ),CL44' ',X'1DF8',CL14' ',AL3(GREEN)
         DC    X'1DC9',X'11E4D1',CL1' ',X'1DF1',CL8' ',X'1DC9',CL8' '
         DC    X'1DF0',AL3(TURQ),CL44' ',X'1DF8',CL14' ',AL3(GREEN)
         DC    X'1DC9',X'11E561',CL1' ',X'1DF1',CL8' ',X'1DC9',CL8' '
         DC    X'1DF0',AL3(TURQ),CL44' ',X'1DF8',CL14' ',AL3(GREEN)
         DC    X'1DC9',X'11E6F1',CL1' ',X'1DF1',CL8' ',X'1DC9',CL8' '
         DC    X'1DF0',AL3(TURQ),CL44' ',X'1DF8',CL14' ',AL3(GREEN)
SCR532   EQU   *-SCR5TXT          3278/3279 MODEL 4 SECTION
         DC    X'1DC9',X'11E8C1',CL1' ',X'1DF1',CL8' ',X'1DC9',CL8' '
         DC    X'1DF0',AL3(TURQ),CL44' ',X'1DF8',CL14' ',AL3(GREEN)
         DC    X'1DC9',X'11E9D1',CL1' ',X'1DF1',CL8' ',X'1DC9',CL8' '
         DC    X'1DF0',AL3(TURQ),CL44' ',X'1DF8',CL14' ',AL3(GREEN)
         DC    X'1DC9',X'116A61',CL1' ',X'1DF1',CL8' ',X'1DC9',CL8' '
         DC    X'1DF0',AL3(TURQ),CL44' ',X'1DF8',CL14' ',AL3(GREEN)
         DC    X'1DC9',X'116BF1',CL1' ',X'1DF1',CL8' ',X'1DC9',CL8' '
         DC    X'1DF0',AL3(TURQ),CL44' ',X'1DF8',CL14' ',AL3(GREEN)
         DC    X'1DC9',X'116DC1',CL1' ',X'1DF1',CL8' ',X'1DC9',CL8' '
         DC    X'1DF0',AL3(TURQ),CL44' ',X'1DF8',CL14' ',AL3(GREEN)
         DC    X'1DC9',X'116ED1',CL1' ',X'1DF1',CL8' ',X'1DC9',CL8' '
         DC    X'1DF0',AL3(TURQ),CL44' ',X'1DF8',CL14' ',AL3(GREEN)
         DC    X'1DC9',X'116F61',CL1' ',X'1DF1',CL8' ',X'1DC9',CL8' '
         DC    X'1DF0',AL3(TURQ),CL44' ',X'1DF8',CL14' ',AL3(GREEN)
         DC    X'1DC9',X'11F0F1',CL1' ',X'1DF1',CL8' ',X'1DC9',CL8' '
         DC    X'1DF0',AL3(TURQ),CL44' ',X'1DF8',CL14' ',AL3(GREEN)
         DC    X'1DC9',X'11F2C1',CL1' ',X'1DF1',CL8' ',X'1DC9',CL8' '
         DC    X'1DF0',AL3(TURQ),CL44' ',X'1DF8',CL14' ',AL3(GREEN)
         DC    X'1DC9',X'11F3D1',CL1' ',X'1DF1',CL8' ',X'1DC9',CL8' '
         DC    X'1DF0',AL3(TURQ),CL44' ',X'1DF8',CL14' ',AL3(GREEN)
         DC    X'1DC9',X'11F461',CL1' ',X'1DF1',CL8' ',X'1DC9',CL8' '
         DC    X'1DF0',AL3(TURQ),CL44' ',X'1DF8',CL14' ',AL3(GREEN)
SCR543   EQU   *-SCR5TXT
SCR2TXT  DC    X'27F1C21140401DF8'
         DC    CL79'-------------------------------- Confirm DELETE ---X
               ---------------------------'
         DC    X'11C1D113'             R02,C02
         DC    X'11C3F0',X'1DF0'       R04,C01
         DC    C'Hit  ',X'1DF8',C'ENTER    ',X'1DF0',C'To delete.'
         DC    X'11C540',X'1DF0'       R05,C01
         DC    C'Press',X'1DF8',C'PF03/PF15',X'1DF0',C'To cancel.'
SCR2LEN  EQU   *-SCR2TXT
ERR1TXT  DC    CL22'- Scroll had no effect'
ERR3TXT  DC    CL22'------ Invalid command'
ERR4TXT  DC    CL22' Logic error, Rc= 0401'
ERR5TXT  DC    CL22' Dataset > partitioned'
ERR6TXT  DC    CL40'---- To return to RPF util press ''ENTER'''
ERR7TXT  DC    CL22'-- Open dataset failed'
ERR8TXT  DC    CL22'Trunc to XXXXX entries' 10
ERR9TXT  DC    CL22'------ PFK not defined'
ERRATXT  DC    CL22'PFK definition invalid'
ERRCTXT  DC    CL22'------- Text not found'
ERRDTXT  DC    CL22'- XMIT failed Rc= XXXX' 18
ERRETXT  DC    CL22'---- No members queued'
ERRFTXT  DC    CL22'- No NODE or NICK name'
ERRGTXT  DC    CL22'- Not sorted on member'
ERRHTXT  DC    CL22'----- Member not found'
INF1TXT  DC    CL22'Hit enter to exec Cmd.'
INF2TXT  DC    CL22' XXXXX members xmitted'
*        THE NEXT TABLE IS BUILT AS FOLLOWS
*        1. THE OPERATION CODE TO BE TESTED
*        2. THE ASSOCIATE MESSAGE
*        3. THE REPLACEMENT OPERATION CODE
MSGTBLE  DC    C'A',CL030'Alias assigned                ',C'A'
         DC    C'C',CL030'Created                       ',C' '
         DC    C'D',CL030'Deleted                       ',C'D'
         DC    C'E',CL030'Edited                        ',C' '
         DC    C'P',CL030'Printed                       ',C' '
         DC    C'R',CL030'Renamed                       ',C'R'
         DC    C'S',CL030'Viewed                        ',C' '
         DC    C'U',CL030'Updated/replaced              ',C' '
         DC    C'X',CL030'Queued for transmission       ',C'X'
         DC    X'FF',CL30'Error in delete               ',C'D'
         DC    X'FE',CL30'Error in rename               ',C' '
         DC    X'FD',CL30'Member not found              ',C'D'
         DC    X'FC',CL30'View not available            ',C' '
         DC    X'FB',CL30'Print not available           ',C' '
         DC    X'FA',CL30'Error allocation SYSOUT       ',C' '
         DC    X'F9',CL30'Delete rejected by user       ',C' '
         DC    X'F8',CL30'Edit not available            ',C' '
         DC    X'F7',CL30'No temporary dataset          ',C' '
         DC    X'F6',CL30'Dataset/member in use         ',C' '
STOWE    DC    X'F5',CL30'STOW error Rc=CCCC,Reason=CCCC',C' '
*                                       +15         +27
         DC    X'F4',CL30'Newname omitted or invalid    ',C' '
XMITNODE DC    X'F3',CL30'Transmitted to ...............',X'F3'
         DC    X'F2',CL30'Only ''S'' is a valid line cmd',C' '
         DC    X'EE',CL30'Select A,B,D,E,P,R or V       ',C' '
MSG#     EQU   (*-MSGTBLE)/32
NONHL    EQU   X'F0'                   NON HIGHLIGHT NO MDT ON
HL       EQU   X'F8'                   HIGHLIGHT NO MDT ON
NONHLM   EQU   X'F1'                   NON HIGHLIGHT MDT ON
HLM      EQU   X'F9'                   HIGHLIGHT MDT ON
         DS    0F                      FW BOUNDARY
*        THE NEXT FIELD WILL BE USED TO ISSUE THE TSO XMIT COMMAND
*        THE SYNTAX IS: XMIT NODENAME.USERID DS('DSNAME') -
*                            MEMBER(MEMBER1 MEMBER2 ...)
*        THE XMIT COMMAND WILL BE GIVEN VIA THE COMMAND PROCESSOR
*        NAMED 'TSOEXEC' TO PERFORM APF AUTHORIZATION.
*
XMITCMD  DS    0CL260
CMDL     DS    H                       LENGTH OF CMD-BUFFER
CMDOFFS  DC    H'08'                   OFFSET TO FIRST OPERAND
         DC    CL13'TSOEXEC XMIT '
CMDOPER  DS    CL243                   OPERANDS OF XMIT CMD
*
TIMEFLD  DS    CL16                    WORK FIELD FOR TIME MAC.   @2000
*
TRTABX   DC    256X'00'                XLATE CHARS TO HEX
         ORG   TRTABX+C'A'
         DC    X'0A0B0C0D0E0F'
         ORG   TRTABX+C'0'
         DC    X'00010203040506070809'
         ORG   ,
*
DDMMYY   DS    0CL49                   Output field from CONVDATE  @rp4
DAYNBR   DC    CL2' '                  Daynbr in the week - 01=SUN @rp4
DAYNM#E  DS    CL9                     Dayname in English          @rp4
DAYNM#D  DS    CL9                     Dayname in Dutch            @rp4
         DS    CL1                                                 @rp4
DD       DS    CL2                                                 @rp4
         DS    CL1                                                 @rp4
MONNBR   DS    CL2                     Monthnbr in year - 01=Jan   @rp4
MNAME#E  DS    CL9                     Monthname in English        @rp4
MNAME#D  DS    CL9                     Monthname in Dutch          @rp4
         DS    C                                                   @rp4
CC       DS    CL2                     Century                     @rp4
YY       DS    CL2                     Year                        @rp4
*                                                                  @rp4
YYDDD    DS    PL4                     Julian date (packed)        @rp4
         TITLE 'DSECTS USED BY RPFPDS'
SPFDATA  DSECT  ,                      MEMBER WITH SPF USERDATA
*                                      OR THE NEW FORMAT RPF USERDATA
SPFMEM   DS    CL8                     MEMBER NAME
SPFTTR   DS    CL3                     TTR
SPFC     DS    C                          C
SPFUSER  EQU   *                       SPF/RPF USERDATA
SPFVERS  DS    X                       SPF VERSION
SPFMOD   DS    X                           MODIFICATION NUMBER
SPFNULL  DS    2X                          NULLS (RECOGNIZE SPF)  @2000
SPFDATEI DS    PL4                         INIT DATE SAVED        @2000
SPFDATEU DS    PL4                         LAST DATE SAVED
SPFTIME  DS    XL2                         TIME LAST SAVE
SPFRECU  DS    XL2                         CURRENT # RECS
SPFRECI  DS    XL2                         INITIAL # RECS
SPFRECM  DS    XL2                         RECS MODIFIED
SPFUID   DS    XL10                        USERID + 2 BLANKS
         DS    CL2
*
MEMBAREA DSECT                         ENTRY IN GETMAIN AREA
PREFIX   DS    CL8
OPER     DS    C                       OPER COULD BE
*                                      C' ' = NO OPERATION
*                                      C'A' = SUCCESSFUL ASSIGN ALIAS
*                                      C'P' = SUCCESSFUL PRINT
*                                      C'D' = SUCCESSFUL DELETE
*                                      C'E' = SUCCESSFUL EDIT
*                                      C'R' = SUCCESSFUL RENAME
*                                      C'S' = MEMBER BROWSED
*                                      C'X' = MEMBER QUEUED FOR XMIT.
*                                      C'U' = MEMBER UPDATED BY EDIT
*                                      C'C' = MEMBER CREATED BY EDIT
*                                      X'FF'= ERROR IN DELETE
*                                      X'FE'= ERROR IN RENAME
*                                      X'FD'= MEMBER NOT FOUND
*                                      X'FC'= BROWSE NOT AVAILABLE
*                                      X'FB'= PRINT NOT AVALAIBLE
*                                      X'FA'= ERROR IN PRINT
*                                      X'F9'= DELETE NOT CONFIRMED
*                                      X'F8'= EDIT NOT AVAIL.
*                                      X'F7'= NO TEMP. SAVE DS
*                                      X'F6'= DS/MEMBER IN USE
*                                      X'F5'= ERROR IN ASSIGN ALIAS
*                                      X'F4'= INVALID NEWNAME
*                                      X'F3'= MEMBER TRANSMITTED
*                                      X'F2'= ONLY 'S' IS VALID LINECMD
*                                      X'EE'= INVALID OPERATION
*
         DS    C
MEMBR    DS    CL8                     MEMBER IN DIRECTORY
         DS    C
ALIAS    DS    C                       ALIAS INDICATOR
         DS    C
INPTTR   DS    CL3
         DS    C
INPUID   DS    CL8
         DS    C
INPDATE  DS    CL8
INPTIME  DS    CL10
INPCARD# DS    0CL6
         DS    C
INPCARDS DS    CL5
         DS    C
INPVERS  DS    CL2
INPCOLON DS    CL1
INPMOD   DS    CL2
         DS    CL1
INPHL    DS    C                       HIGHLIGHT CHAR (X'F1' NON HIGHL,
         DS    CL(PREFIX+88-*)      ) AND X'F9' HIGHLIGHT) (MDT)
         ORG   INPUID
INPC     DS    CL2
         DS    C
INPUDATA DS    CL32
         ORG   ,
MEMBEND  EQU   *
         SPACE 3
COMMAREA RPFCOMM
         PRINT NOGEN
         DCBD  DSORG=PO,DEVD=DA
         IEZDEB
         IKJCPPL
         IKJECT
LINES21  EQU   (21*NEXTENT)            NEXT SCREEN IN MEMBER AREA
LINES29  EQU   (29*NEXTENT)            NEXT SCREEN IN MEMBER AREA
LINES40  EQU   (40*NEXTENT)            NEXT SCREEN IN MEMBER AREA
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         END
