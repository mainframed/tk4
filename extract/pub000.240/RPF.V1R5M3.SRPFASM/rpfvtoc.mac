         MACRO
&NAME    SORT  &TAB,&LEN1,&LEN2,&ENTRY,&START,&TYPE=C
         LCLC  &L
&L       SETC  'L&SYSNDX'
.* THIS MACRO SORTS A CORE TABLE
.* AND USED IN THE RPF PROGRAMS FROM SKYBIRD SYSTEMS
         AIF   ('&TAB' EQ '').FOUTADR
         AIF   ('&LEN1' EQ '').FOUTL1
         AIF   ('&LEN2' EQ '').FOUTL2
         AIF   ('&ENTRY' EQ '').FOUTENT
         AIF   ('&TYPE' EQ 'C').CHAR
         AIF   ('&TYPE' EQ 'P').CHAR
         MNOTE 14,'***** TYPE NOT ''C'' OR ''P'''
.FOUT    MNOTE *,'***** NO MACRO EXPANSION.'
         MEXIT
.FOUTADR MNOTE 14,'***** WRONG TABLE ADDRESS.'
         AGO   .FOUT
.FOUTL1  MNOTE 14,'***** WRONG LENGTH 1.'
         AGO   .FOUT
.FOUTL2  MNOTE 14,'PPPPP WRONG LENGTH 2.'
         AGO   .FOUT
.FOUTENT MNOTE 14,'***** WRONG NUMBER OF ENTRIES.'
         AGO   .FOUT
.*
.* OPERANDS ARE GOOD.
.*
.*
.CHAR    ANOP
         CNOP  0,4            FULLWORD BOUNDARY.
&NAME    STM   3,4,&L.A
         B     &L.C
&L.A     DS    F
         DS    F
&L.F     DS    F
&L.B     DS    F
         AIF   ('&TAB'(1,1) EQ '(').TABREG1
&L.C     LA    3,&TAB
         AGO   .STORE3
.TABREG1 ANOP
&L.C     LR    3,&TAB(1)
.STORE3  ANOP
         ST    3,&L.B
         AIF   ('&ENTRY'(1,1) EQ '(').ENTRREG
         B     &L.E
&L.D     DC    A((&ENTRY-1)*&LEN1)
         AGO   .ADD3
.ENTRREG ANOP
         BCTR  &ENTRY(1),0
         MH    &ENTRY(1),=H'&LEN1'
         ST    &ENTRY(1),&L.D
         B     &L.E
&L.D     DS    F
.ADD3    ANOP
&L.E     L     4,&L.D
         AR    3,4
         ST    3,&L.F
         AIF   ('&TAB'(1,1) EQ '(').TABREG2
         LA    3,&TAB
         AGO   .LOAD4
.TABREG2 ANOP
         LR    3,&TAB(1)
.LOAD4   ANOP
         LA    4,&LEN1.(3)
         AIF   ('&TYPE' EQ 'P').PACKED
&L.H     CLC   &START.(&LEN2,3),&START.(4)
         AGO   .VERDER
.PACKED  ANOP
&L.H     CP    &START.(&LEN2,3),&START.(&LEN2,4)
.VERDER  ANOP
         BH    &L.G
         LA    3,&LEN1.(3)
         LA    4,&LEN1.(4)
         C     3,&L.F
         BE    &L.I
         B     &L.H
&L.G     XC    0(&LEN1,3),0(4)
         XC    0(&LEN1,4),0(3)
         XC    0(&LEN1,3),0(4)
         S     3,=F'&LEN1'
         S     4,=F'&LEN1'
         C     3,&L.B
         BNL   &L.H
         A     3,=F'&LEN1'
         A     4,=F'&LEN1'
         B     &L.H
&L.I     LM    3,4,&L.A
         MEND
RPFVTOC  TITLE 'RPF EDIT A VOLUME TABLE OF CONTENTS'
*---------------------------------------------------------------------*
*                                                                     *
*        MODULE:        RPFVTOC.                                      *
*                                                                     *
*        FUNCTION:     PRESENT A MENU TO ALLOCATE A VOLUME (Option @rp1
*                       1,2,V) or option X (PFK3/PFK15) to exit    @rp1
*                       IF THE VOLUME IS ALLOCATED A VTOC WILL        *
*                       BE MADE OF THAT VOLUME. THE OUTPUT WILL       *
*                       BE PLACED INTO THE EDIT WORKSPACE.            *
*                       If a dataset level has been specified      @rp3
*                       control will be passed to                  @rp3
*                       RPFLISTC to search the catalog             @rp3
*                       If both dataset level an volume            @rp3
*                       are specified only the datasets starting   @rp3
*                       with 'level' will be filtered out on that  @rp3
*                       volume.                                    @rp3
*                                                                  @rp1
*                       In option -2-, module RPFEDIT (the editor) @rp1
*                       will be invoked to manupulate with this list  *
*                       After completion of RPFEDIT the menu will  @rp1
*                       re-appear.                                 @rp1
*                                                                  @rp1
*                       In option -1-, module RPFVTOC1 will be     @rp1
*                       invoked to display a selection list of all @rp1
*                       the datasets on the volume                 @rp1
*                       in RPFVTOC1 you can select a dataset to    @rp1
*                       EDIT, Delete, View or Member list          @rp1
*                       After completion of RPFVTOC1 the menu will @rp1
*                       re-appear.                                 @rp1
*                                                                  @rp1
*                       With option V only a summary will be       @rp1
*                       displayed and the menu will re-appear      @rp1
*                                                                  @rp1
*                       IF AN ERROR OCCURS, THE MENU WILL BE          *
*                       REDISPLAYED WITH A SUITABLE ERROR MESSAGE.    *
*                                                                  @rp1
*                       SUPPORT IS AVAILABLE FOR INDEXED VTOCS,       *
*                       WHICH IS ANNOUNCED AS 'DATA FACILITIES/DEVICE *
*                       SUPPORT' (DF/DS JDM1134).                     *
*                       THIS LOADMODULE WILL RUN IN A NON DF/DS       *
*                       SYSTEM TOO, HOWEVER IF RPFVTOC SHOULD BE      *
*                       ASSEMBLED ON A NON DF/DS SYSTEM, YOU          *
*                       SHOULD ASSEMBLE RPFVTOC WITH 'SYSPARM(NODFDS)'*
*                                                                     *
*        NOTES:         IF PARM=LONG IS USED EACH DATASET ENTRY IN    *
*                       VTOC OUTPUT CONTAINS OF TWO LINES. THE        *
*                       DATASET NAME AND THE START ADDRESS OF THE DS  *
*                       IS SPECIFIED IN AN EXTRA LINE (Option 2 only) *
*                                                                     *
*                       IF PARM=VOL IS USED ON EACH DATASET ENTRY     *
*                       THE CREATION DATE HAS BEEN REPLACE BY THE     *
*                       VOLUME AND NO HEADERS AND NO TRAILOR LINES    *
*                       ARE PRODUCED (Option 2 only)                  *
*                                                                     *
*                       THE DLIB: SYS1.AMODGEN MACLIB SHOULD BE       *
*                       INCLUDED IN THE ASSEMBLY OF RPFVTOC.          *
*                                                                     *
*                       ASSEMBLE RPFVTOC ON A SYSTEM WHICH SUPPORTS   *
*                       INDEXED VTOCS (DF/DS) ELSE ASSEMBLE RPFVTOC   *
*                       WITH 'SYSPARM(NODFDS)'                        *
*                                                                     *
*        RETURNCODES SET IN RTNCODE FIELD:                            *
*                       00   SUCCESSFUL. CONTROL WILL BE TO RPFEDIT.  *
*                       04   TERMINATED AT END OF WORKSPACE.          *
*                       08   EXIT ENTERED BY USER.                    *
*                                                                     *
*        Modifications:                                               *
*        2002/07/07 RPr: add third header with device constants       *
*        2002/08/28 RPr: Move EDIT vtoc to option 2. Add option    @rp1
*                        1 for a dataset selection list and option @rp1
*                        V for a VTOC Summary in the menu.         @rp1
*        2002/09/21 RPr: Move UCBTYP to CMDAREA for RPFVTOC1       @rp2
*        2002/10/31 RPr: Add hlq in screen and call RPFLISTC       @rp3
*        2002/11/09 RPr: 7 color support added                     @rp4
*        2002/11/13 RPr: Increase length of dataset level to 17 pos@rp5
*        2006/03/19 RPr: Obtain dataset prefix from COMMAREA       @rp6
*                                                                     *
*------------------------------------------ (C)-2006 SKYBIRD SYSTEMS -*
         SPACE 2
RPFVTOC  CSECT
         SAVE  (14,12),,*              SAVE REGISTERS
         USING RPFVTOC,R15             TEMP ADDRESSABILITY
         LA    R14,SAVE                SAVE AREA
         ST    R13,SAVE+4              BACKWARD POINTER
         ST    R14,8(R13)              FORWARD POINTER
         LR    R13,R14
         B     START                   BRANCH AROUND SAVE AREA
SAVE     DC    18F'-1'                 SAVE AREA
         DC    CL8'&SYSDATE',C' ',CL8'&SYSTIME'
START    DS    0H
         DROP  R15                     KILL LOCAL ADDRESSABILITY
         LA    R12,2048(R13)           SECOND BASE
         LA    R12,2048(R12)
         LA    R10,2048(R12)           Third base                  @rp1
         LA    R10,2048(R10)                                       @rp1
         USING SAVE,R13,R12,R10                                    @rp1
         L     R11,0(R1)               RPFCOMM AREA
         USING COMMAREA,R11            GET ADDRESSABILITY
         MVC   VIRS(6),=CL6' N/A '
         MVC   DSCBS(6),=CL6' N/A '
         MVC   SCR1TXT(2),=X'27F5'     MOVE DEFAULT WRITE CC
         MVC   SCR3LAST+1(2),=X'5CF0'  DEFAULT R24,C01 FOR LAST LINE
         CLC   COMMSIZE,=H'43'         43 LINES RECEIVED ?         @rp1
         BE    START1                  YES: BRANCH
         CLC   COMMSIZE,=H'32'         32 LINES RECEIVED ?         @rp1
         BE    START2                  YES: BRANCH
         B     START3                  ELSE DEFAULT
START1   MVC   SCR1TXT(2),=X'277E'     WRITE CC ALTERNATE
         MVC   SCR3LAST+1(2),=X'F460'  R43,C01 FOR LAST LINE
         B     START3                  AND BRANCH
START2   MVC   SCR1TXT(2),=X'277E'     WRITE CC ALTERNATE
         MVC   SCR3LAST+1(2),=X'E6F0'  R32,C01 FOR LAST LINE
         B     START3                  AND BRANCH
START3   DS    0H
         MVC   SCR3CMD(1),BUFCMD       Move previous option        @rp1
         MVC   DPARM,=C'SHORT'         MOVE DEFAULT PARM
         MVC   VOL,BLANKS              BLANK VOLUME
         MVC   HLQ,COMMPFX             Move HLQ from COMMAREA      @rp6
*                                                                  @rp6
         MVC   SCR3UID(7),USERID       USERID INTO SCREEN
         LA    R3,SCR3UID+7            REPLACE TRAILING BLANKS
         LA    R4,7                    MAX 7 TIMES
UID1     CLI   0(R3),C' '              TRAILING BLANK FOUND ?
         BNE   UID99                   NO: EXIT
         MVI   0(R3),C'-'              REPLACE BY HYPHEN
         BCTR  R3,R0                   DECREASE BY 1
         BCT   R4,UID1                 LOOP UNTIL ALL DONE
UID99    EQU   *
         XC    RTNCODE,RTNCODE         INIT RTNCODE
         XC    EPNEXT,EPNEXT           INIT EPNEXT
         MVI   MSG3,C'-'               Clear message               @rp3
         MVC   MSG3+1(21),MSG3                                     @rp3
RESTART  DS    0H
         XC    SW,SW                   CLEAR SWITCH
         TPUT  SCR1TXT,SCR1LEN,FULLSCR
         MVC   SCR3VOL,VOL             MOVE VOLUME ID
         MVC   SCR3HLQ,HLQ             Move dataset level          @rp3
         MVC   SCR3PARM,DPARM          MOVE PARM
         TPUT  SCR3TXT,SCR3LEN,FULLSCR
         MVI   MSG3,C'-'               CLEAR MESSAGE
         MVC   MSG3+1(21),MSG3
         MVC   SCR3LNE1,BLANKS         Blank info lines            @rp1
         MVC   SCR3LNE2,BLANKS         Blank info lines            @rp1
         MVC   SCR3LNE3,BLANKS         Blank info lines            @rp1
         MVC   SCR3LNE4,BLANKS         Blank info lines            @rp1
         MVC   SCR3LNE5,BLANKS         Blank info lines            @rp1
         MVC   SCR3ERR,BLANKS          Blank error line            @rp1
GET1     LA    R5,BUFFER               OUTPUT FORMATTED BUFFER
         L     R3,COMMSCR              LOAD SCREEN ADDRESS
         TGET  (R3),150,ASIS           READ THE SCREEN             @rp5
         LR    R4,R1                   SAVE LENGTH
*        DO AN TGET ASIS TO OBTAIN THE AID BYTE
*        AFTER THE TGET ASIS REMOVE THE SBA'S FROM THE OUTPUT
         CLI   0(R3),X'F3'             PFK3 (END) PRESSED
         BE    END                     YES: TERMINATE RPF
         CLI   0(R3),X'C3'             PFK15 (END) PRESSED
         BE    END                     YES: TERMINATE RPF
         XR    R2,R2                    INIT OUTPUT LENGTH
         LR    R4,R1                   SAVE INPUT LENGTH
         SH    R4,=H'3'                SKIP AID AND CURSOR ADDRESS
         C     R4,F0000                REGISTER ZERO
         BNH   CONV099                 NOT HIGH: END OF ROUTINE
         LA    R3,3(R3)
         LA    R5,BUFFER               OUTPUT ADDRESS
*        INPUT SCREEN IS POINTED TO BY R3
*        OUTPUT SCREEN IS POINTED TO BY R5
*        THE NEXT SECTION WILL REMOVE ALL THE SBA'S
CONV001  CLI   0(R3),X'11'             SET BUFFER ADDRESS ?
         BE    CONV003                 YES: SKIP NEXT 3 BYTES INPUT
CONV002  MVC   0(1,R5),0(R3)           MOVE INPUT BYTE
         LA    R3,1(R3)                NEXT BYTE INPUT
         LA    R2,1(R2)                COUNT OUTPUT BYTES
         LA    R5,1(R5)                NEXT BYTE OUTPUT
         BCT   R4,CONV001              TEST NEXT BYTE
         B     CONV099                 END OF ROUTINE
CONV003  LA    R3,3(R3)                SKIP 3 BYTES INPUT
         BCTR  R4,0                    MINUS 1 BCT
         BCTR  R4,0                    MINUS 1 BCT
         C     R4,F0000                REGISTER ZERO ?
         BNH   CONV099                 YES: TERMINATE CONVERSION
         BCT   R4,CONV001              TEST NEXT BYTE
CONV099  LR    R1,R2                   OUTPUT LENGTH IN REGISTER 1
         OC    BUFFER,BLANKS           XLATE TO UPPERCASE
RPF004   LA    R2,BUFFER               STARTADDRESS BUFFER
         LTR   R1,R1                   NOTHING RECEIVED ?
         BZ    RESTART                 YES: REDISPLAY
         LR    R3,R1                   LENGTH OF BUFFER
         LA    R4,BUFCMD               COMMAND
         MVC   BUFCMD,BLANKS           BLANK
         MVC   DPARM,BLANKS              THE
         MVC   VOL,BLANKS                    FIELDS
         MVC   HLQ,BLANKS                                          @rp3
RPF004A  EQU   *
         CLC   0(7,R2),=C'LEVEL ='     HLQ operand found?          @rp3
         BE    RPF004B                 Yes: branch                 @rp3
         MVC   0(1,R4),0(R2)           move 1 byte command         @rp3
         LA    R4,1(R4)                Next byte in command        @rp3
         LA    R2,1(R2)                Examine next byte           @rp3
         BCT   R3,RPF004A              Branch                      @rp3
         B     RESTART                 CLEAR key pressed           @rp3
RPF004B  EQU   *                                                   @rp3
         LA    R2,7(R2)                Point after 'Level ='       @rp3
         LA    R4,HLQ                  High level qualifier        @rp3
RPF005   EQU   *
         CLC   0(7,R2),=C'VOLUME='     VOLUME OPERAND FOUND ?
         BE    RPF007                  YES: BRANCH
         MVC   0(1,R4),0(R2)           MOVE 1 BYTE HLQ             @rp3
         LA    R4,1(R4)                NEXT BYTE IN HLQ            @rp3
         LA    R2,1(R2)                EXAMINE NEXT BYTE
         BCT   R3,RPF005               BRANCH
         B     RESTART                 CLEAR KEY PRESSED
RPF007   EQU   *
         LA    R2,7(R2)                POINT AFTER 'VOLUME='
         LA    R4,VOL                  VOLUME ADDRESS
RPF008   EQU   *
         CLC   0(6,R2),=C',PARM='      'PARM' KEYWORD FOUND ?
         BE    RPF009                  YES: END OF SCAN
         MVC   0(1,R4),0(R2)           MOVE BYTE VOLUME
         LA    R2,1(R2)                NEXT BYTE INPUT
         LA    R4,1(R4)                NEXT BYTE OUTPUT
         BCT   R3,RPF008               BRANCH
         B     RESTART                 CLEAR KEY PRESSED
RPF009   EQU   *
         LA    R2,6(R2)                POINT AFTER ',PARM='
         LA    R4,DPARM                PARM
RPF010   EQU   *
         CLC   0(7,R2),=C'DDNAME='     'DDNAME' KEYWORK FOUND ?
         BE    RPF011                  YES: END OF SCAN
         MVC   0(1,R4),0(R2)           MOVE BYTE PARM
         LA    R2,1(R2)                NEXT BYTE INPUT
         LA    R4,1(R4)                NEXT BYTE OUTPUT
         BCT   R3,RPF010               BRANCH
         B     RESTART                 CLEAR KEY PRESSED
RPF011   DS    0H
         CLI   BUFCMD,C' '             Blank in cmd field?         @rp1
         BNE   *+8                     No: test other values       @rp1
         MVI   BUFCMD,C'1'             Default option 1            @rp1
         CLI   BUFCMD,C'X'             EXIT ENTERED ?
         BE    END                     GO TO UTIL MENU
         CLC   VOL,BLANKS              VOLUME NOT SPECIFIED ?
         BNE   RPF011A                 BRANCH IF NOT               @rp1
         CLI   BUFCMD,C'1'             Option 1 ?                  @rp3
         BNE   RPF011#2                No: branch                  @rp3
         CLC   HLQ,BLANKS              Dataset level specified?    @rp3
         BE    RPF011#2                Yes; Branch                 @rp3
         LINK  EP=RPFLISTC,PARAM=(HLQ,(11)) Search catalog         @rp3
         B     RPF011#1(R15)           Run thru branchlist         @rp3
RPF011#1 DS    0H                                                  @rp3
         B     RPF011#5                RC=0000                     @rp3
         B     RPF011#5                RC=0004 (truncated)         @rp3
         B     RPF011#3                RC=0008 (no datasets fnd)   @rp3
         B     RPF011#4       RC=0012  Alloc. error IDCAMS files   @rp3
RPF011#2 DS    0H                                                  @rp3
         MVC   MSG2(L'ERR3TXT),ERR3TXT Volume/level not specified  @rp3
         B     ERROR
RPF011#3 DS    0H                                                  @rp3
         MVC   MSG2(L'ERR5TXT),ERR5TXT No datasets matched         @rp3
         B     ERROR                                               @rp3
RPF011#4 DS    0H                                                  @rp3
         MVC   MSG2(L'ERR6TXT),ERR6TXT Severe error in RPFLISTC    @rp3
         B     ERROR                                               @rp3
RPF011#5 DS    0H                                                  @rp3
         ZAP   #DS,CMDAREA(3)          # datasets                  @rp3
         MVC   CMDAREA,BLANKS          Blank cmdarea first         @rp3
         MVC   CMDAREA(4),=C'LVL='     Tell XPFVTOC1 that a        @rp5
         MVC   CMDAREA+4(17),HLQ       Catalog has been searched   @rp5
         ZAP   CMDAREA+21(3),#DS       # of datasets in CMDAREA    @rp5
         L     R15,EPVTOC1             Point to RPFVTOC1 module    @rp3
         CALL  (15),((11))             Branch to module            @rp3
         TM    INFCODE2,$RETURN        Return indicator set?       @rp3
         BNO   RESTART                 Present menu if not         @rp3
         B     RETURN                  Else return                 @rp3
RPF011A  DS    0H                                                  @rp1
         CLI   BUFCMD,C'1'             -1- SELECTED (sel.list)     @rp1
         BE    RPF012AA                CONTINUE                    @rp1
         CLI   BUFCMD,C'2'             -2- SELECTED ?              @rp1
         BE    RPF012A                 CONTINUE                    @rp1
         CLI   BUFCMD,C'V'             -V- SELECTED (Summary)      @rp1
         BE    RPF012AB                CONTINUE                    @rp1
         MVC   MSG2(L'ERR2TXT),ERR2TXT MOVE ERROR MSG
         MVC   SCR2CMD,BUFCMD          Move the default option     @rp1
         B     ERROR                   REVIEW SCREEN
RPF012A  DS    0H
         MVC   HEAD0PRM,=C'SHORT'      MOVE  DEFAULT PARM IN HEAD0
         CLC   DPARM(4),=C'LONG'       IS PARM LONG USED ? (EXTRA DSN)
         BNE   RPF012B                 NO BRANCH
RPF012AA DS    0H                                                  @rp1
         OI    SW,$LONG                SET FLAG
         MVC   HEAD0PRM,=C'LONG '      MOVE IN HEADER
         B     RPF012Z
RPF012AB DS    0H                      Display summary in menu     @rp1
         MVC   HEAD0PRM,BLANKS         Do not set PARM in opt V    @rp1
         B     RPF012Z                 Branch                      @rp1
RPF012B  DS    0H
         CLC   DPARM(3),=C'VOL'        IS PARM VOL  USED ?
*        WITH PARM=VOL IN EACH VTOC LINE THE VOLUME WILL BE SET AND
*        NO HEADERS AND TRAILORS WILL BE PRODUCED.
*        THE VOLUME IS PLACED INSTEAD OF THE CREATION DATE
         BNE   RPF012C                 NO BRANCH
         OI    SW,$VOL                 SET FLAG
         B     RPF012Z
RPF012C  CLC   DPARM(5),=C'SHORT'      IS PARM SHORT USED ?
         BE    RPF012Z                 BRANCH
         MVC   MSG2(L'ERR4TXT),ERR4TXT ERROR msg (Invalid parm)    @rp1
         B     ERROR                   ERROR ROUTINE
RPF012Z  DS    0H
         SYALLOC DDN=VTOC,DSN=F4DSN,DISP1=SHR,MF=E,VOL=VOL,            X
               UNITA=COMMUNIT
         LTR   R15,R15                 ALLOC OK ?
         BZ    RPF013                  YES: PROCEED
         MVC   MSG2(L'ERR1TXT),ERR1TXT Volume not available        @rp1
         B     ERROR                   ERROR ROUTINE
ERROR    EQU   *
         MVC   SCR3VOL,VOL             MOVE VOLUME
         MVC   SCR3PARM,DPARM          MOVE PARM
         MVI   SCR2CMD,C' '            Blank command field         @rp1
         TPUT  SCR2TXT,SCR2LEN,FULLSCR
         MVI   BUFCMD,C' '             CLEAR COMMAND
         B     GET1                    REVIEW SCREEN
END      MVC   RTNCODE,F0008           MOVE RETURN CODE
         SYALLOC FREE=VTOC,MF=E        FREE THE DATASET
         B     RETURN                  RETURN
RPF013   RDJFCB DCBIN                  READ JFCB OF DCBIN
         MVC   HVOL,VOL                MOVE VOLUME INTO TRAILOR LINE
         MVC   HEAD0VOL,VOL            MOVE VOLUME NAME INTO HEADER
         TIME  DEC                     GET TIME OF DAY
         SRL   R0,4                    SHIFT OUT HUNDREDS OF SECONDS
         ST    R0,TIMEWORK             STORE TIME
         ST    R1,DATEWORK               AND DATE
         OI    TIMEWORK+3,X'0F'        INSERT SIGN IN TIME
         MVC   TIMEDISP,TIMEPATT       MOVE PATTERN FOR EDIT
         MVC   DATEDISP,DATEPATT       MOVE PATTERN FOR EDIT
         ED    TIMEDISP,TIMEWORK       EDIT THE TIME
         ED    DATEDISP,DATEWORK+1     EDIT THE DATE
         MVC   HEAD0DTE,DATEDISP+1     MOVE DATE IN HEADER LINE
         MVC   HEAD0TME,TIMEDISP+2     MOVE TIME IN HEADER LINE
         MVC   JFCB(44),F4404          DSN=X'04040404'
         OPEN  DCBIN,TYPE=J            OPEN F4 DSCB
         READ  DECB1,SF,DCBIN,AREA1,140
         CHECK DECB1
         MVC   MSG2(L'MSG1TXT),MSG1TXT MOVE VTOC RUNNING MESSAGE
         TPUT  SCR2TXT,SCR2LEN,FULLSCR
         LA    R2,AREA1+44             POINT TO DATA PORTION F4DSCB
         USING IECSDSL4,R2             GET ADDRESSABILITY
         MVC   TRKCYL,DS4DEVSZ+2       # TRACK PER CYLINDER
         XC    #FREDSCB,#FREDSCB       INIT # OF BLANK DSCBS
         MVC   #FREDSCB+2(2),DS4DSREC  # OF emtpy dscb's
         MVC   CURCCHHR(4),DS4VTOCE+2  MOVE START ADDRESS OF VTOC
         MVI   CURR,X'01'              START WITH FIRST RECORD
         MVC   HICCHHR(5),DS4HPCHR     MOVE HIGH-WATER MARK
         MVC   DSCBTRK(1),DS4DEVDT     # DSCBS ON A TRACK
         XR    R3,R3                   CLEAR REGISTER
         IC    R3,DS4DEVDT             # DSCBS ON A TRACK
         CVD   R3,DWB                  CONVERT TO DECIMAL
         UNPK  HEAD1DS,DWB             PUT IN EBCDIC IN HEADER
         OI    HEAD1DS+1,X'F0'         CLEAR SIGN
         IC    R3,DS4DEVDB             # DIRECTORY BLKS ON A TRACK
         CVD   R3,DWB                  CONVERT TO DECIMAL
         UNPK  HEAD1DIR,DWB            PUT IN EBCDIC IN HEADER
         OI    HEAD1DIR+1,X'F0'        CLEAR SIGN
         SYCONVHX IN=DS4VTOCE+2,OUT=HEAD1EX1,L=4 START ADDRESS VTOC
         SYCONVHX IN=DS4VTOCE+6,OUT=HEAD1EX2,L=4 END   ADDRESS VTOC
         SYCONVHX IN=DS4VTOCI,OUT=HEAD1VTI,L=1   VTOC INDICATORS
         XR    R3,R3                   CLEAR REGISTER         @20020707
         ICM   R3,3,DS4DEVSZ+2         TRACKS/CYL             @20020707
         CVD   R3,DWB                  convert to decimal     @20020707
         UNPK  HEAD2TCY,DWB            Put in EBCDIC in headr @20020707
         OI    HEAD2TCY+1,X'F0'        CLEAR SIGN             @20020707
         ICM   R3,3,DS4DEVTK           Bytes on a track       @20020707
         CVD   R3,DWB                  convert to decimal     @20020707
         UNPK  HEAD2TRK,DWB            Put in EBCDIC in headr @20020707
         OI    HEAD2TRK+4,X'F0'        CLEAR SIGN             @20020707
         ICM   R3,3,DS4DEVSZ           Cyls on a volume       @20020707
         CVD   R3,DWB                  convert to decimal     @20020707
         UNPK  HEAD2#CY,DWB            Put in EBCDIC in headr @20020707
         OI    HEAD2#CY+4,X'F0'        CLEAR SIGN             @20020707
         DROP  R2                      KILL ADDRESSABILITY
         XC    #FREECYL,#FREECYL       INIT #FREECYL
         XC    #FREETRK,#FREETRK       INIT #FREETRK
         XC    #EXT,#EXT               INIT #EXT
         XC    LARGTRK,LARGTRK         INIT LARGTRK
         XC    LARGCYL,LARGCYL         INIT LARGCYL
         ZAP   CRDCNT,=P'0'            INIT RECORD COUNTER
         ZAP   DSNCNT,=P'0'            INIT DATASETS COUNTER
         L     R9,GETMSTRT             STARTADDRESS WORKSPACE
         ST    R9,FIRSTREC             BECOME FIRSTREC
         S     R9,RLENGTH              MINUS 80
         ST    R9,LASTREC              INIT LASTREC
         MVC   MEMBER,BLANKS           CLEAR MEMBERNAME
         MVC   MEMBER(6),VOL           VOLUME SERIAL
         MVC   HEAD0VTC,=C'OS'         DEFAULT OS VTOC IN HEAD0
         LA    R5,DCBIN                LOAD DCB ADDRESS
         USING IHADCB,R5               GET TEMP ADDR.
         L     R5,DCBDEBAD             GET DEB ADDRESS
         ST    R5,DEBADDR              SAVE ADDRESS
         DROP  R5                      KILL ADDR. OF DCB
         USING DEBBASIC,R5             GET ADDRESSABILITY OF DEB
         XR    R6,R6                   CLEAR GR 6
         LA    R6,DEBISAM              POINT AFTER BASIC SECTION
         DROP  R5                      KILL ADDR OF BASIC SECTION
         USING DEBDASD,R6              GET ADDRESSABILITY OF DASD SEC.
         L     R6,DEBUCBAD             LOAD UCB ADDRESS
         DROP  R6                      KILL LOCAL ADDRESSABILITY
         USING VTOCUCB,R6              GET LOCAL ADDRESSABILITY
         SYCONVHX IN=UCBCHAN,OUT=HEAD0UCB,L=2 Move unit address
         MVC   VOLTYP,UCBTYP           Move UCB-type               @rp2
         DROP  R6                      KILL LOCAL ADDRESSABILITY
         AIF   ('&SYSPARM' EQ 'NODFDS').NODFDS1
**** START OF INCLUSION DF/DS (JDM1134) STATEMENTS
         CVAFTST UCB=(6)               TEST IF VTOC IS INDEXED
         C     R15,F0008               DOES VOLUME CONTAIN AN VTOXIX
         BNE   RPF014                  NO: TREAT VOLUME AS UNINDEXED
         XC    BUFLIST(BFLHLN+BFLELN),BUFLIST CLEAR BUFFER LIST
         MVC   DS1DSNAM,F4404          STARTING WITH VTOC DSNAME
         OI    BFLHFL,BFLHDSCB         BUFLIST DESCRIBES DSCB'S
         LA    R1,DS1FMTID             LOAD RECEIVING AREA ADDRESS
         ST    R1,BFLEBUF              SET IN BUFLIST
         MVI   BFLELTH,DSCBLTH         MARK DATA PORTION OF DSCB READ
         MVI   BFLHNOE,1               ONE BUFFER LIST ENTRY
         MVC   HEAD0VTC,=C'IX'         MARK INDEXED VTOC TYPE IN HEAD0
         XC    AREA1,AREA1             INITIAL ZERO
         USING IECSDSF5,R2             GET ADDR OVER F5 DSCB
         MVC   CVPL(CVPLNGTH),CVPL5    MOVE CVAFDSM CVPL           @rp1
VTOCIDX  TM    SW,$EOD                 ALL EXTENTS DONE ?
         BO    RPF014                  YES: GO ON:
         LA    R2,AREA1                LOAD AREA ADDRESS
         XC    EXTS,EXTS               CLEAR AREA
         MVC   EXTS(L'DS5AVEXT),DS5MAVET+L'DS5MAVET-L'DS5AVEXT
*        MOVE LAST EXTENT FROM SIM. F5DSCB TO FIRST ENTRY IN
*        EXTENT TABLE
         L     R5,DEBADDR              RELOAD DEB ADDRES
         CVAFDSM MF=(E,CVPL),DEB=(5)   OBTAIN VOLUME EXTENTS
         LTR   R15,R15                 CVAFDSM ALRIGHT ?
         BZ    IDXCONT                 NO: DO NOT READ EXTENTS
         C     R15,F0004               END OF DATA CVAFDSM ?
         BNE   INDEXER                 NO: OTHER ERROR
         CLI   CVSTAT,STAT032          END OF DATA ?
         BNE   INDEXER                 YES: PROCEED
         OI    SW,$EOD                 MARK LAST CREATED F5 DSCB
         B     IDXCONT                 PROCESS FORMAT 5 DSCB
INDEXER  CVD   R15,DWB                 CONVERT RETURN CODE
         UNPK  IDXERC(4),DWB           CONVERT TO EBCDIC
         OI    IDXERC+3,X'F0'          CLEAR SIGN
         SYCONVHX IN=CVSTAT,OUT=IDXSTAT,L=1 MOVE ERROR STATUS
         MVC   IDXTXT(10),=CL10'MAP=VOLUME' MOVE TYPE OF ERROR
         MVC   SCR3ERR,IDXERR          Move error msg in screen    @rp1
         NI    SW,X'FF'-$IDX           CONTINUE NON-INDEXED
         MVC   HEAD0VTC,=C'OS'         SET TYPE BACK TO OS
         B     RPF014                  CONTINUE
IDXCONT  MVC   DS5AVEXT(L'DS5AVEXT+L'DS5EXTAV),EXTS MOVE IN EXTENTS
         MVC   DS5MAVET,EXTS+L'DS5AVEXT+L'DS5EXTAV MOVE REMAINING
         OI    SW,$IDX                 MARK INDEXED VTOC
         B     FORM501                 PROCESS BUILT F5 DSCB
         DROP  R2
***** END OF INCLUSION OF THE DF/DS (JDM1134 STATEMENTS)
.NODFDS1 ANOP
RPF014   DS    0H
         CLI   BUFCMD,C'1'             Option '1' selected         @rp1
         BE    RPF015                  Yes: Skip headers           @rp1
         CLI   BUFCMD,C'V'             Option 'V' selected         @rp1
         BE    RPF015                  Yes: Skip headers           @rp1
         TM    SW,$VOL                 PARM=VOL USED ?
         BNZ   RPF015                  YES: SKIP HEADERS
         LA    R1,HEAD0                AREA ADDRESS
         BAL   R14,WORKSPC             WRITE INTO WORKSPACE
         LA    R1,HEAD1                AREA ADDRESS
         BAL   R14,WORKSPC             WRITE INTO WORKSPACE
         LA    R1,HEAD2                AREA ADDRESS
         BAL   R14,WORKSPC             WRITE INTO WORKSPACE
         LA    R1,HEAD3                AREA ADDRESS           @20020707
         BAL   R14,WORKSPC             WRITE INTO WORKSPACE   @20020707
*---------------------------------------------------------------------*
*        Read the DSCB's with CVAFSEQ if an indexed VTOC exists       *
*        or with a BSAM READ if the VTOC is in OS-format              *
*------------------------------------- (C)-2002 Skybird Systems ------*
RPF015   DS    0H
         AIF   ('&SYSPARM' EQ 'NODFDS').NODFDS2
**** START OF INCLUSION DF/DS (JDM1134) STATEMENTS
         TM    SW,$IDX                 INDEXED VTOC ?
         BNO   NOCVAFRD                NO: READ VTOCDSCB SEQ
         L     R5,DEBADDR              DEB ADDRESS
         MVC   CVPL(CVPLNGTH),CVPL3    MOVE CVAFSEQ CVPL
         CVAFSEQ MF=(E,CVPL),DEB=(5)   OBTAIN NEXT DSCB
         LTR   R15,R15                 CVAFSEQ OK ?
         BZ    RPF016                  YES: OK
         C     R15,F0004               IS IT FOUR ?
         BNE   SEQERR                  YES: ERROR
         CLI   CVSTAT,STAT032          END OF DATA ?
         BE    RPFEOD                  YES: BRANCH
SEQERR   DS    0H                      ERROR IN READ
         CVD   R15,DWB                 CONVERT RETURN CODE
         UNPK  IDXSEQC(4),DWB          CONVERT TO EBCDIC
         OI    IDXSEQC+3,X'F0'         CLEAR SIGN
         SYCONVHX IN=CVSTAT,OUT=IDXSEQE,L=1
         LA    R1,SEQMSG               GIVE MESSAGE
         BAL   R14,WORKSPC             SET THIS MSG IN WORKSPACE
         B     RPFEOD                  AND TERMINATE
***** END OF INCLUSION OF THE DF/DS (JDM1134 STATEMENTS)
.NODFDS2 ANOP
NOCVAFRD READ  DECB2,SF,DCBIN,IECSDSL1,140
         CHECK DECB2
*
* AFTER HERE I TEST FOR THE HIGH-WATER MARK. THIS IS THE LAST FORMAT1
* DSCB IN THE VTOC. THIS TEST WILL ONLY BE DONE IF THE VTOC IS IN 'OS'
* FORMAT. THIS HIGH-WATER MARK TEST WILL INCREASE THE PERFORMANCE OF
* READING OS-VTOCS
*
         XR    R9,R9                   CLEAR REGISTER
         IC    R9,CURR                 RECORD NUMBER
         LA    R9,1(R9)                INCREASE IT
         STC   R9,CURR                 AND SAVE
         CLM   R9,1,DSCBTRK            > # DSCBS ON TRACK ?
         BNH   TESTHI                  NO: TEST WITH HI-WATER
         MVI   CURR,X'01'              SET RECORD TO 1
         ICM   R9,3,CURHH              PICKUP TRACK NUMBER
         LA    R9,1(R9)                INCREASE IT
         STCM  R9,3,CURHH              AND SAVE
         CLM   R9,3,TRKCYL             OVER CYLINDER BOUNDARY ?
         BNH   TESTHI                  NO: TEST WITH HI-WATER MARK
         LA    R9,1                    TRACK NUMBER
         STCM  R9,3,CURHH                          TO ONE
         ICM   R9,3,CURCC              AND INCREASE
         LA    R9,1(R9)                            CYLINDER COUNTER
         STCM  R9,3,CURCC              AND SAVE
TESTHI   EQU   *                       TEST WITH LAST F1 ON VTOC (HI)
         CLC   CURCCHHR,HICCHHR        HIGH-WATER MARK REACHED ?
         BH    RPFEOD                  YES: NO SENSE TO CONTINUE
         B     RPF016                  *** END OF TEST
RPFEOD   EQU   *                       EODAD ROUTINE
         OI    SW,$EOF                 MARK END OF FILE
         B     RPF999
SYNAD    EQU   *                       SYNAD ROUTINE
         OI    SW,$IOE                 MARK I/O ERROR
         B     RPF999                  END OF ROUTINE
RPF016   EQU   *
         CLI   DS1FMTID,C'5'           FORMAT 5
         BNE   RPF017
         MVC   AREA1(140),DS1DSNAM
         LA    R2,AREA1                PICKUP ADDRESS
         TITLE 'PROCESS FORMAT5 DSCBS'
*---------------------------------------------------------------------*
*                                                                     *
*        IN THIS ROUTINE THE FREE SPACE OF THE VOLUME WILL BE         *
*        ACCUMULATED.  (F5DSCB IN AREA1 AND POINTED TO BY R2)         *
*                                                                     *
*------------------------------------------ (C)-2002 SKYBIRD SYSTEMS -*
         SPACE 2
FORM501  EQU   *                       FORMAT 5 DSCB
         MVC   AREA2,AREA1             SAVE AREA ADDRESS
         LA    R3,26                   26 EXTENTS PER DSCB 5
         MVC   44(90,R2),45(R2)        MOVE OVER FORMATID
         LA    R2,4(R2)
FORM503  CLC   0(2,R2),=XL2'0'         NO VALID EXTENT
         BNE   FORM507
FORM505  LA    R2,5(R2)                NEXT EXTENT
         BCT   R3,FORM503
         MVC   AREA1,AREA2             RESTORE F5DSCB
         AIF   ('&SYSPARM' EQ 'NODFDS').NODFDS3
**** START OF INCLUSION DF/DS (JDM1134) STATEMENTS
         TM    SW,$IDX                 INDEXED VTOC ?
         BO    VTOCIDX
**** END   OF INCLUSION DF/DS (JDM1134) STATEMENTS
.NODFDS3 ANOP
         B     RPF015                  NEXT DSCB
FORM507  SR    R4,R4
         LH    R4,#EXT
         LA    R4,1(R4)                CUMULATE # EXTENTS
         STH   R4,#EXT
         LH    R4,#FREECYL
         AH    R4,2(R2)                CUMULATE # FREE CYLINDERS
         STH   R4,#FREECYL
         LH    R4,#FREETRK             CUMULATE # FREE TRACKS
         SR    R5,R5
         IC    R5,4(R2)
         AR    R4,R5
         STH   R4,#FREETRK
         CLC   2(2,R2),LARGCYL         BIGGEST EXTENT?
         BL    FORM505
         BE    FORM511
FORM509  MVC   LARGCYL(3),2(R2)
         B     FORM505
FORM511  CLC   LARGTRK,4(R2)
         BL    FORM509
         B     FORM505                 NEXT EXTENT
RPF017   CLI   DS1FMTID,C'1'           DSCB 1
         BNE   RPF015                  NO: SKIP THIS DSCB
         TITLE 'PROCESS THE FORMAT 1 DSCBS'
*---------------------------------------------------------------------*
*                                                                     *
*        IN THIS ROUTINE RECORDS WILL BE MADE OF THE READ FORMAT 1    *
*        DSCBS AND THE OBTAINED FORMAT 3 DSCBS                        *
*                                                                     *
*------------------------------------------ (C)-2002 SKYBIRD SYSTEMS -*
         SPACE 2
FORM101  DS    0H
         CLI   BUFCMD,C'V'             Display summary only?       @rp1
         BNE   FORM102                 No: process F1DSCB          @rp1
         AP    DSNCNT,=P'1'            In summary only count F1    @rp1
         B     RPF015                  Read next DSCB              @rp1
FORM102  DS    0H                                                  @rp1
         XC    FORMAT2,FORMAT2         CLEAR NEXT DSCB
         CLC   DS1PTRDS,=XL5'0'        NO DSCB 2 OR 3
         BE    FORM105                 SAVE ADRESS
*        MVC   VOL,DS1DSSN             SAVE VOLUME
         MVC   CCHHR,DS1PTRDS          SAVE CCHHR OF DSCB 2 OF 3
         MVC   FORMAT2,=A(AREA2)       REPAIR FORMAT2
         MVC   CAM1+12(4),FORMAT2
         OBTAIN CAM1                   OBTAIN VOOR D1E DSCB2 OF 3
         XC    FORMAT3,FORMAT3         CLEAR FORMAT3 IND
         CLC   AREA2+135(5),=XL5'0'    ANOTHER DSCB FOR DATASET
         BNE   FORM103
         B     FORM105
FORM103  MVC   CCHHR,AREA2+135         SAVE CCHHR 2ND DSCB
         MVC   FORMAT3,=A(AREA3)       REPAIR FORMAT3
         MVC   CAM1+12(4),FORMAT3
         OBTAIN CAM1                   OBTAIN FOR 2ND DSCB2
FORM105  DS    0H
         CLC   HLQ,BLANKS              No Dataset level specified? @rp3
         BE    FORM105Z                Yes: do not filter          @rp3
         LA    R1,HLQ                  Address in reg.1            @rp5
         LA    R14,17                  Test max 17 bytes           @rp5
         XR    R15,R15                 Count tested bytes          @rp5
FORM105A DS    0H                                                  @rp3
         CLI   0(R1),C' '              Blank  found?               @rp5
         BE    FORM105B                No: branch                  @rp3
         LA    R1,1(R1)                Next pos.                   @rp3
         LA    R15,1(R15)              Count byte                  @rp5
         BCT   R14,FORM105A            Test next byte              @rp3
FORM105B DS    0H                                                  @rp5
         BCTR  R15,0                   Minus 1 for ex              @rp5
         EX    R15,HLQTEST             Test if match with level    @rp5
         BNE   RPF015                  No match: next vtoc record  @rp5
FORM105Z DS    0H
         MVI   DSN,X'40'
         MVC   DSN+1(ENDREC-DSN-1),DSN CLEAR OUTPUT RECORD
         MVC   DSN,DS1DSNAM            MOVE DSNAME
         TM    SW,$LONG                EXTRA DSNLINE WITH TRUNCATION ?
         BNO   NOLONG                  NO: PROCEED
         MVC   DSN(44),DS1DSNAM        MOVE FULL NAME
         MVC   DSN+45(7),=C'CCHH=X'''  MOVE CCHH TEXT
         SYCONVHX IN=DS1EXT1+2,OUT=DSN+52,L=2 CONVERT 'CC'
         SYCONVHX IN=DS1EXT1+4,OUT=DSN+56,L=2 CONVERT 'HH'
         MVI   DSN+60,X'7D'            MOVE ENDING QUOTE
         MVC   DSN+62(6),VOL           Move volume
         CLI   BUFCMD,C'1'             Option 1 selected ?
         BNE   *+10                    No: do not place UCBTYP in line
         MVC   DSN+69(4),VOLTYP        Move UCBTYP
         LA    R1,DSN                  ADDRESS OUTPUT RECORD IN R1
         BAL   R14,WORKSPC             WRITE DSNAME ONLY IN WORKSPACE
         CLC   RTNCODE,F0004           RETURN CODE 4 ?
         BE    RPF999A                 TERMINATED; END OF WORKSPACE
         MVI   DSN,X'40'
         MVC   DSN+1(ENDREC-DSN-1),DSN CLEAR OUTPUT RECORD
NOLONG   DS    0H
         XR    R15,R15                 CLEAR R15
         IC    R15,DS1NOEPV            # EXTENTS ON VOLUME
         CVD   R15,DWB                 TO PACKED
         MVC   DEXT,=X'40202120'       MOVE EDIT MASK
         ED    DEXT,DWB+6              EDIT THE RESULT
         TM    SW,$VOL                 PARM IS VOL USED ?
         BNO   CREDATE                 NO: INSERT CREATION DATE
         MVC   CREAT(6),HVOL           MOVE VOL. INSTEAD OF CREDATE
         B     REFDATE                 CONTINUE
CREDATE  DS    0H
         XR    R9,R9                   CLEAR REGISTER
         IC    R9,DS1CREDT             YEAR OF CREATION DATE
         CVD   R9,DWB                  CONVERT TO PACKED
         UNPK  CREAT(2),DWB            UNPACK YEAR
         OI    CREAT+1,X'F0'           CLEAR SIGN
         ICM   R9,3,DS1CREDT+1         DAYS OF CREATION DATE
         CVD   R9,DWB                  CONVERT TO PACKED
         UNPK  CREAT+3(3),DWB          CONVERT TO ZONED
         OI    CREAT+5,X'F0'           CLEAR SIGN
         MVI   CREAT+2,C'.'            MOVE POINT
REFDATE  DS    0H
         XR    R9,R9                   CLEAR REGISTER
         IC    R9,DS1REFD              YEAR OF REFERENCE DATE
         CVD   R9,DWB                  CONVERT TO PACKED
         UNPK  REFDT(2),DWB            UNPACK YEAR
         OI    REFDT+1,X'F0'           CLEAR SIGN
         ICM   R9,3,DS1REFD+1          DAYS OF REFERENCE DATE
         CVD   R9,DWB                  CONVERT TO PACKED
         UNPK  REFDT+3(3),DWB          CONVERT TO ZONED
         OI    REFDT+5,X'F0'           CLEAR SIGN
         MVI   REFDT+2,C'.'            MOVE PERIOD
         TM    DS1DSORG+1,DS1ACBM      VSAM DATASET ?           @BANDKE
*        TM    DS1DSORG+1,DS1ORGAM     VSAM DATASET ?
         BNO   *+14                    IF NOT
         MVC   DSORG,=C'VSAM'          MARK VSAM DATASET
         B     DSORGEND                BYPASS TEST DSORG
         TM    DS1DSORG,DS1DSGIS       DSORG=IS ?
         BNO   *+14                    TEST NEXT FUNCTION
         MVC   DSORG,=C'IS  '          DSORG=IS
         B     DSORGEND                END OF TEST
         TM    DS1DSORG,DS1DSGPS       DSORG=PS ?
         BNO   *+14                    NEXT DSORG IF NOT
         MVC   DSORG,=C'PS  '          PHYSICAL SEQUENTIAL
         B     DSORGEND                END OF TEST
         TM    DS1DSORG,DS1DSGDA       DSORG=DA ?
         BNO   *+14                    NEXT DSORG TEST
         MVC   DSORG,=C'DA  '          DIRECT ACCESS
         B     DSORGEND                END OF DSORG TEST
         TM    DS1DSORG,DS1DSGPO       DSORG=PO ?
         BNO   *+14                    DSORG UNDEFINED
         MVC   DSORG,=C'PO  '          PARTITIONED
         B     DSORGEND                END OF DSORG TEST
         MVC   DSORG,=C'UND '          NO VALID DSORG
DSORGEND TM    DS1RECFM,X'C0'             UNDEFINED ?
         BNO   RECF                    TEST NEXT RECFM
         MVC   RECFM(4),=C'U   '       RECFM=U
         B     RECEND
RECF     TM    DS1RECFM,X'80'          FIXED ?
         BNO   RECV                    TEST NEXT RECFM
         MVI   RECFM,C'F'              FIXED
         TM    DS1RECFM,X'10'          BLOCKED ?
         BNO   RECFS                   NO: PROCEED
         MVI   RECFM+1,C'B'            MARK BLOCKED
RECFS    TM    DS1RECFM,X'08'          STANDARD BLOCKS ?
         BNO   RECFA                   NO: PROCEED
         MVI   RECFM+2,C'S'            STANDARD
         B     RECEND
RECFA    TM    DS1RECFM,X'04'          ASA CONTROL CHARS ?
         BNO   RECFBM                  NO: PROCEED
         MVI   RECFM+2,C'A'            ASA
         B     RECEND
RECFBM   TM    DS1RECFM,X'02'          MACH CONTROL CHAR ?
         BNO   RECEND                  NO: PROCEED
         MVI   RECFM+2,C'M'            MACH CC
         B     RECEND
RECV     TM    DS1RECFM,X'40'          VARIABLE
         BNO   RECUND                  NO VALID RECFM
         MVI   RECFM,C'V'              FIXED
         TM    DS1RECFM,X'10'          BLOCKED ?
         BNO   RECVS                   NO: PROCEED
         MVI   RECFM+1,C'B'            MARK BLOCKED
RECVS    TM    DS1RECFM,X'08'          SPANNED BLOCKS ?
         BNO   RECVA                   NO: PROCEED
         MVI   RECFM+2,C'S'            STANDARD
         B     RECEND
RECVA    TM    DS1RECFM,X'04'          ASA CONTROL CHARS ?
         BNO   RECVBM                  NO: PROCEED
         MVI   RECFM+2,C'A'            ASA
         B     RECEND
RECVBM   TM    DS1RECFM,X'02'          MACH CONTROL CHAR ?
         BNO   RECEND                  NO: PROCEED
         MVI   RECFM+2,C'M'            MACH CC
         B     RECEND
RECUND   MVC   RECFM(4),=C'UND '
RECEND   EQU   *
         XR    R9,R9                                            @BANDKE
         ICM   R9,3,DS1LRECL           LRECL                    @BANDKE
         MVC   LRECL,PATTRN            MOVE EDIT PATTERN
         CVD   R9,DWB                  CONVERT TO DECIMAL
         ED    LRECL(6),DWB+5          EDIT INTO LRECL
         XR    R9,R9                   CLEAR REGISTER           @BANDKE
         ICM   R9,3,DS1BLKL            BLKSIZE                  @BANDKE
         MVC   BLKSIZE,PATTRN          MOVE EDIT PATTERN
         CVD   R9,DWB                  CONVERT TO DECIMAL
         ED    BLKSIZE(6),DWB+5        EDIT INTO RECORD
*
*        CALCULATE SPACE PER EXTENT
*
         LA    R2,DS1EXT1              POINT TO FIRST EXTENT
         SR    R5,R5
         LA    R9,3                    3 EXTENTS FROM FORMAT1 DSCB
         BAL   R14,EXTENT
         BCT   R9,*-4
         LA    R1,LIST                 LIST ADDRESS
         L     R3,4(R1)                2ND ENTRY IN LIST
         LTR   R3,R3                   ANOTHER DSCB?
         BZ    FORM111                 NO: NO DSCBS ANYMORE
         CLI   44(R3),C'3'             FORMAT 3
         BNE   FORM107                 NO: SKIP
         LR    R2,R3                   YES: FORMAT3 TO REG2
         BAL   R14,FORM109             COMPUTE EXTENTS
FORM107  LA    R1,LIST                 LIST ADDRESS
         L     R4,8(R1)                3RD ENTRY IN LIST
         LTR   R4,R4                   ANOTHER DSCB
         BZ    FORM111                 NO,TOTAL
         CLI   44(R4),C'3'             FORMAT 3
         BNE   FORM111                 NO,TOTAL
         LR    R2,R4                   YES: FORMAT3 TO REG 2
         BAL   R14,FORM109             COMPUTE EXTENTS
         CLC   DS3PTRDS-IECSDSL3(5,R4),=XL5'0' MORE F3DSCBS CHAINED ?
         BE    FORM111                 NO: BRANCH
* SINCE DF/EF IT IS POSSIBLE TO HAVE MOVE THAN 1 F3 DSCB
* IT IS POSSIBLE TO HAVE 10 F3 DSCB CHAINED (133 EXTENTS)
         MVC   CCHHR,DS3PTRDS-IECSDSL3(R4) MOVE CCHHR NEXT DSCB
         MVC   FORMAT3,=A(AREA3)       REPAIR FORMAT3
         MVC   CAM1+12(4),FORMAT3
         OBTAIN CAM1                   OBTAIN FOR NEXT DSCB
         B     FORM107                 BRANCH
HLQTEST  CLC   DS1DSNAM(0),HLQ         *** execute only ***        @rp5
         EJECT
*
*        EXTENTS FROM FORMAT3 DSCB  R2 ---> A(F3DSCB)
*
FORM109  DS    0H
         ST    R14,F3R14               SAVE REGISTER
         LA    R9,4
         LA    R2,4(R2)
         BAL   R14,EXTENT
         BCT   R9,*-4                  FIRST FOUR EXTENTS
         LA    R2,1(R2)                SKIP F3 FORMAT ID
         LA    R9,R9                   REMAINING NINE EXTENTS
         BAL   R14,EXTENT
         BCT   R9,*-4
         L     R14,F3R14               RESTORE REGISTER
         BR    R14                     RETURN
         SPACE 5
*
*        COMPUTE UNUSED SPACE
*
FORM111  DS    0H
         CVD   R5,DWB                  CUM TRACKS
         MVC   TRK(6),PATTRN           PATTERN OVER FIELD
         ED    TRK(6),DWB+5            EDIT THE RESULT
         MVC   UNUSED+3(3),=C'N/A'
         TM    DS1DSORG+1,DS1ACBM      SKIP VSAM                @BANDKE
*        TM    DS1DSORG+1,DS1ORGAM     SKIP VSAM
         BO    TWRITE                  WRITE THE RECORD
         LH    R3,DS1LSTAR             RELATIVE ADRESS UNUSED
         BCTR  R5,0
         SR    R5,R3
         C     R5,F0000                NEGATIVE ?
         BL    TWRITE
         CVD   R5,DWB                  CONVERT TO DECIMAL
         MVC   UNUSED,PATTRN           MOVE EDIT PATTRN
         ED    UNUSED(6),DWB+5         EDIT THE RESULT
TWRITE   LA    R1,DSN                  LOAD RECORD ADDRESS
         BAL   R14,WORKSPC             WRITE INTO WORKSPACE
         CLC   RTNCODE,F0004           RETURN CODE 4 ?
         BE    RPF999A                 TERMINATED; END OF WORKSPACE
         AP    CRDCNT,=P'1'            INCR # OF VTOC RECORDS
         AP    DSNCNT,=P'1'            INCREASE COUNTER
         B     RPF015                  READ NEXT DSCB
         TITLE 'PRODUCE TRAILOR LINES AND SORT WORKSPACE'
RPF999   EQU   *                       PRINT FREE SPACE LINE
         CLI   BUFCMD,C'1'             Option 2 selected?          @rp1
         BE    RPF999A                 Yes: skip trailor line      @rp1
         TM    SW,$VOL                 PARM=VOL USED ?
         BNZ   RPF999A                 YES: SKIP TRAILOR LINE
         MVC   HCYL,PATTRN             MOVE PATTRN
         LH    R9,#FREECYL             TOTAL EMPTY CYLINDERS
         CVD   R9,DWB                  CONVERT TO PACKED
         ED    HCYL,DWB+5              EDIT INTO LINE
         MVC   HTRK,PATTRN             MOVE EDIT PATTRN
         LH    R9,#FREETRK             EMPTY TRACKS
         CVD   R9,DWB                  CONVERT TO PACKED
         ED    HTRK,DWB+5              EDIT INTO LINE
         MVC   HCYLEXT,PATTRN          MOVE EDIT PATTRN
         LH    R9,LARGCYL              BIGGEST EXTENT CYLS
         CVD   R9,DWB                  CONVERT TO PACKED
         ED    HCYLEXT,DWB+5           EDIT INTO LINE
         MVC   HTRKEXT,PATTRN          MOVE EDIT PATTRN
         XR    R9,R9                   CLEAR REGISTER 9
         IC    R9,LARGTRK              BIGGEST EXTENT TRKS
         CVD   R9,DWB                  CONVERT TO PACKED
         ED    HTRKEXT,DWB+5           EDIT INTO LINE
         MVC   HDSNCNT,PATTRN          MOVE EDIT PATTRN
         ED    HDSNCNT,DSNCNT          EDIT INTO LINE
         LA    R1,TRAIL1               AREA ADDRESS
         BAL   R14,WORKSPC             WRITE INTO WORKSPACE
RPF999A  DS    0H
         CLI   BUFCMD,C'1'             Option 1 selected ?         @rp1
         BNE   RPF999B                 No branch                   @rp1
         CP    CRDCNT,=P'0'            No datasets filtered        @rp3
         BNE   RPF999AA                No: continue                @rp3
         MVC   MSG3(L'ERR5TXT),ERR5TXT No datasets matched         @rp3
         B     CLOSE2                  And skip the trailors       @rp3
RPF999AA DS    0H                                                  @rp3
         MVC   EPNEXT,EPVTOC1          Move entry point rpfvtoc1   @rp1
         MVC   CMDAREA(6),VOL          Move volume into cmdarea    @rp1
         ZAP   CMDAREA+21(3),DSNCNT    # datasets in CMDAREA       @rp5
         B     CLOSE2                  And skip the trailors       @rp1
RPF999B  DS    0H                                                  @rp1
         CLI   BUFCMD,C'V'             Option V selected ?         @rp1
         BNE   RPF999C                 No branch                   @rp1
         MVC   SCR3LNE1,HEAD0          First summary line          @rp1
         MVC   SCR3LNE2,HEAD1          Second summary line         @rp1
         MVC   SCR3LNE3,HEAD2          Third summary line          @rp1
         MVC   SCR3LNE4,TRAIL1         Fourth summary line         @rp1
         B     RPF999D                 Branch                      @rp1
RPF999C  DS    0H                                                  @rp1
         MVC   EPNEXT,EPEDIT           MOVE ENTRY POINT RPFEDIT
         OI    INFCODE,NOTLOAD         Do not call RPFEDITL in EDIT@rp1
         MVC   NUMBERED,=C'NO '        MOVE NUMBERED= 'NO ' IN COMMAREA
         TM    SW,$VOL                 PARM=VOL USED ?
         BNZ   CLOSE2                  SKIP THIS TRAILOR TOO
RPF999D  DS    0H                                                  @rp1
         AIF   ('&SYSPARM' EQ 'NODFDS').NODFDS4
**** START OF INCLUSION DF/DS (JDM1134) STATEMENTS
         TM    SW,$IDX                 INDEXED VTOC SUPPORT ?
         BNO   RPF999E                 NO: FILL IN BLANK DSCBS IN LINE
         L     R5,DEBADDR              LOAD DEB ADDRESS
         MVC   CVPL(CVPLNGTH),CVPL2    MOVE INDEX CVPL
         CVAFDSM MF=(E,CVPL),DEB=(5)   OBTAIN UNALLOCATED VIRS
         LTR   R15,R15                 CVAFDSM ALRIGHT ?
         BZ    RPF999E                 NO: DONT GIVE UNALLOC. VIRS @rp1
         CLI   CVSTAT,STAT032          END OF DATA ?
         BE    RPF999E                 NO: ERROR                   @rp1
         SYCONVHX IN=CVSTAT,OUT=IDXSTAT,L=1
         CVD   R15,DWB                 CONVERT RETURN CODE
         UNPK  IDXERC,DWB              UNPACK RETURNCODE
         OI    IDXERC+3,X'F0'          CLEAR SIGN
         MVC   IDXTXT(10),=CL10'MAP=INDEX' MOVE TYPE OF ERROR
         CLI   BUFCMD,C'V'             Summary only                @rp1
         BE    RPF999F                 Yes: Error not interesting  @rp1
         MVC   SCR3ERR,IDXERR          Move error msg in screen    @rp1
         B     RPF999F                 OBTAIN # BLANK DSCBS        @rp1
RPF999E  L     R15,#FREEVIR            LOAD UNALLOCATED VIRS       @rp1
         CVD   R15,DWB                 CONVERT TO BINARY
         MVC   VIRS,PATTRN             MOVE EDIT PATTRN
         ED    VIRS,DWB+5              EDIT RESULT
RPF999F  L     R5,DEBADDR              LOAD DEB ADDRESS            @rp1
         MVC   CVPL(CVPLNGTH),CVPL4    MOVE VTOC CVPL
         CVAFDSM MF=(E,CVPL),DEB=(5)   OBTAIN BLANK DSCB
         LTR   R15,R15                 CVAFDSM ALRIGHT ?
         BZ    RPF999G                 YES: GIVE BLANK DSCBS       @rp1
         CLI   CVSTAT,STAT032          END OF DATA ?
         BE    RPF999G                 NO: ERROR                   @rp1
         SYCONVHX IN=CVSTAT,OUT=IDXSTAT,L=1
         CVD   R15,DWB                 CONVERT RETURN CODE
         UNPK  IDXERC,DWB              UNPACK RETURNCODE
         OI    IDXERC+3,X'F0'          CLEAR SIGN
         MVC   IDXTXT(10),=CL10'MAP=VTOC' MOVE TYPE OF ERROR
         CLI   BUFCMD,C'V'             Summary only                @rp1
         BE    CLOSE                   Yes: Error not interesting  @rp1
         MVC   SCR3ERR,IDXERR          Move error msg in screen    @rp1
         B     CLOSE                   OBTAIN # BLANK DSCBS
**** END   OF INCLUSION DF/DS (JDM1134) STATEMENTS
.NODFDS4 ANOP
RPF999G  L     R15,#FREDSCB            LOAD BLANK DSCBS            @rp1
         CVD   R15,DWB                 CONVERT TO BINARY
         MVC   DSCBS,PATTRN            MOVE EDIT PATTRN
         ED    DSCBS,DWB+5             EDIT RESULT
CLOSE    DS    0H
         CLI   BUFCMD,C'V'             Summary only ?              @rp1
         BE    CLOSE2                  Trailor not in workspace    @rp1
         LA    R1,FREEMSG              LOAD ADDRESS MESSAGE
         BAL   R14,WORKSPC             SET IN WORKSPACE
CLOSE2   DS    0H
         CLOSE DCBIN                   CLOSE VTOC DCB
         SYALLOC FREE=VTOC,MF=E        FREE THE DATASET
         CLI   BUFCMD,C'V'             Summary only ?              @rp1
         BNE   SORTWS                  No: sort workspace          @rp1
         MVC   SCR3LNE5,FREEMSG        Move last line              @rp1
         B     RESTART                 Re-display menu             @rp1
SORTWS   DS    0H
         L     R6,FIRSTREC             1ST RECORD IN WORKSPACE
         CLI   BUFCMD,C'1'             Option 1 selected?          @rp1
         BE    SORTWS1                 Yes: skip adjust for headers@rp1
         TM    SW,$VOL                 PARM=VOL USED ?
         BNZ   SORTWS1                 YES: SKIP ADJUST FOR HEADERS
         LA    R6,4*NEXTENT(R6)        SKIP HEADERS           @20020707
SORTWS1  TM    SW,$IDX                 INDEXED VTOC ?
         BO    LINKNEXT                NO: DO NOT SORT             @rp1
         ZAP   DWB,CRDCNT              NUMBER OF VTOC RECORDS
         CVB   R7,DWB                  AND CONVERT TO BINARY
         C     R7,=F'2'                LESS THAN 2 RECORDS
         BL    LINKNEXT                YES: ITS SILLY TO SORT THAT @rp1
         TM    SW,$LONG                PARM 'LONG' IS USED ?
         BNO   SORT2                   NO: NORMAL SORT
         SORT  (6),176,44,(7),8        SORT WORKSPACE (LONG)
         B     LINKNEXT                END OF SORT                 @rp1
SORT2    DS    0H
         SORT  (6),88,44,(7),8         SORT WORKSPACE (SHORT)
         B     LINKNEXT                                            @rp1
LINKNEXT DS    0H                                                  @rp1
         ICM   R15,15,EPNEXT           Load epnext field           @rp1
         BZ    LINKEND                 Branch if not filled in     @rp1
         XC    EPNEXT,EPNEXT           Clear field                 @rp1
         CALL  (15),((11))             Call module                 @rp1
         NI    INFCODE,255-NOTLOAD     Reset NOT load flag         @rp1
         B     LINKNEXT                Loop until all mods called  @rp1
LINKEND  DS    0H                                                  @rp1
         TM    INFCODE2,$RETURN        Return indicator set?       @rp1
         BNO   RESTART                 Present menu if not         @rp1
         TITLE 'RETURN TO CALLER'
RETURN   L     R13,SAVE+4              PICKUP CALLERS SAVE AREA
         RETURN (14,12),RC=0           RESTORE REGISTERS
         TITLE 'ACCUMULATE THE EXTENTS OF THE DATASET'
EXTENT   EQU   *
*
*        2     EXTENT ADRESS
*        5     CUMULATIVE TRACKS
*        14    RETURN ADRESS
*
         ST    R14,SAVE14              SAVE REG 14
         CLI   0(R2),0                 NO EXTENT DESC IN THIS FIELD ?
         BE    EXTEND                  YES: EXIT
         MVC   D(8),2(R2)
         LH    R8,D+4
         SH    R8,D
         MH    R8,TRKCYL
         AH    R8,D+6
         SH    R8,D+2
         LA    R8,1(R8)
         AR    R5,R8
         LA    R2,10(R2)
EXTEND   L     R14,SAVE14              RESTORE R14
         BR    R14
         TITLE 'PLACE THE RECORDS INTO THE EDIT WORKSPACE OR ON THE RPFX
               VTOCO DATASET'
WORKSPC  EQU   *                       RECORD POINTED BY REG 1
* THE ADDRESS OF THE RECORD IS IN REG 1.
         ST    R14,SAVE14              SAVE REGISTER 14
         L     R9,LASTREC              PICKUP LAST RECORD POINTER
         LA    R9,NEXTENT(R9)          NEXT RECORD
         C     R9,GETMEND              COMPARE WITH GETMEND
         BH    WORKERR                 HIGH: TERM AT END OF WORKSPC
         MVC   0(NEXTENT,R9),BLANKS    BLANK RECORD
         XC    6(2,R9),6(R9)           CLEAR FLAGS
         MVC   8(80,R9),0(R1)          MOVE RECORD INTO WORKSPACE
         ST    R9,LASTREC              NEW LASTREC
         B     WORKRTN                 RETURN TO CALLER
WORKERR  MVC   RTNCODE,F0004           MOVE RETURN CODE
WORKRTN  L     R14,SAVE14              RESTORE R14
         BR    R14                     BACK TO CALLER
         TITLE 'SCREEN FORMATS'
SCR1TXT  DC    X'27F5C01140C1',AL3(WHITE) Write erase              @rp4
SCR1LEN  EQU   *-SCR1TXT
SCR2TXT  DC    X'27F1C01140C1',AL3(WHITE) Write erse lock          @rp4
         DC    X'11407A'               R01,C59
MSG2     DC    CL22'----------------------'
         DC    X'11C150',X'1DF8',C'Option ===>',X'1DC113'          @rp1
SCR2CMD  DC    X'40',X'1DF0'                                       @rp1
SCR2LEN  EQU   *-SCR2TXT
SCR3TXT  DC    X'27F1C21140C1',AL3(WHITE) Write no-erase           @rp4
         DC    CL38'RPF VTOC and data set utility: userid='        @rp3
SCR3UID  DC    CL8' '
         DC    32C'-'                                              @rp3
         DC    X'11407A'               R01,C59
MSG3     DC    CL22'----------------------'
         DC    X'11C150',X'1DF8',C'Option ===>',X'1DC113'          @rp1
SCR3CMD  DC    X'401DF0'
         DC    X'11C261'                        r03,c02            @rp1
SCR3ERR  DC    CL79' '                                             @rp1
         DC    X'11C3F3',AL3(WHITE),C'1  ',AL3(TURQ)  r04,c04      @rp4
         DC    C'SEL        - ',AL3(GREEN)                         @rp4
         DC    C'Display dataset selection list (default)'         @rp4
         DC    X'11C5C3',AL3(WHITE),C'2  ',AL3(TURQ)  r05,c04      @rp4
         DC    C'VTOC-List  - ',AL3(GREEN)                         @rp4
         DC    C'Display VTOC listing in EDIT'                     @rp4
         DC    X'11C6D3',AL3(WHITE),C'V  ',AL3(TURQ)  r06,c04      @rp4
         DC    C'VTOC-Info  - ',AL3(GREEN)                         @rp4
         DC    C'Display VTOC information'                         @rp4
         DC    X'11C7E3',AL3(WHITE),C'X  ',AL3(TURQ)   r07,c04     @rp4
         DC    C'EXIT       - ',AL3(GREEN),C'Return'               @rp4
         DC    X'114AC1',AL3(YELLOW)   R09,C02                     @rp4
         DC    C'Data set and volume information'                  @rp3
         DC    X'114B50',X'1DF5',AL3(TURQ),C'Level =' R10,C01      @rp4
         DC    X'1DC913'                                           @rp4
         DC    AL3(RED)                                            @rp4
SCR3HLQ  DC    CL17' ',X'1DF0',AL3(TURQ),C'     ,And / Or '        @rp5
         DC    X'114C60',X'1DF5',C'Volume=',X'1DC9' R11,C01        @rp3
         DC    AL3(RED)                                            @rp4
SCR3VOL  DC    CL6' ',X'1DF0',C' ',AL3(TURQ)                       @rp4
         DC    X'1DF5',C',Parm=',X'1DC9'                           @rp4
         DC    AL3(RED)                                            @rp4
SCR3PARM DC    C'SHORT',X'1DF0',AL3(TURQ),C' (Option 2 only)'      @rp4
         DC    X'114DF0',X'1DF5',C'Ddname=',X'1DF0' R12,C01        @rp4
         DC    AL3(WHITE)                                          @rp4
SCR3DDN  DC    CL6'VTOC'                                           @rp4
         DC    X'1150D1',AL3(YELLOW),CL5'Note: '         R14,C02   @rp4
         DC    X'11D161',AL3(TURQ)     R15,C02                     @rp4
         DC    C'LONG : ',AL3(GREEN)                               @rp4
         DC    C'each VTOC entry consist of 2 lines with extra info' p4
         DC    X'11D2F1',AL3(TURQ)     R16,C02                     @rp4
         DC    C'SHORT: ',AL3(GREEN)                               @rp4
         DC    C'the VTOC entry has 1 line and a truncated data set namX
               e'                                                  @rp4
         DC    X'11D4C1',AL3(TURQ)     R17,C02                     @rp4
         DC    C'VOL  : ',AL3(GREEN)                               @rp4
         DC    C'same as SHORT, but no headers and trailors and cre.dt x
               replaced by volume'                                 @rp4
         DC    X'11D661'               R19,C02                     @rp3
         DC    AL3(BLUE)                                           @rp4
SCR3LNE1 DC    CL79' '                 Summary line -1-
         DC    X'11D7F1'               R20,C02                     @rp3
SCR3LNE2 DC    CL79' '                 Summary line -2-
         DC    X'11D9C1'               R21,C02                     @rp3
SCR3LNE3 DC    CL79' '                 Summary line -3-
         DC    X'115AD1'               R22,C02                     @rp3
SCR3LNE4 DC    CL79' '                 Summary line -4-
         DC    X'115B61'               R23,C02                     @rp3
SCR3LNE5 DC    CL79' '                 Summary line -5-
SCR3LAST DC    X'115CF01DF0'           R24,C01
         DC    AL3(TURQ)                                           @rp4
         DC    C'Hit ',AL3(WHITE),C'PF03/15 ',AL3(TURQ)            @rp4
         DC    C'to return'
SCR3LEN  EQU   *-SCR3TXT
BUFFER   DS    CL60                                               @rp5
ERR1TXT  DC    CL22'--Volume not available'
ERR2TXT  DC    CL22'--------Invalid option'
ERR3TXT  DC    CL22'--Volume not specified'
ERR4TXT  DC    CL22'----------Invalid parm'
ERR5TXT  DC    CL22'---No datasets matched'
ERR6TXT  DC    CL22'-Severe error RPFLISTC'
MSG1TXT  DC    CL22'-------VTOC running...'
         TITLE 'VARIABLES CONSTANTS AND CONTROL BLOCKS'
DWB      DS    D                       FOR CVD/CVB INSTRUCTIONS
SAVE14   DS    F                       FOR REGISTER 14
F3R14    DS    F                       FOR REGISTER 14
DCBIN    DCB   MACRF=R,DSORG=PS,KEYLEN=44,EODAD=RPFEOD,                X
               SYNAD=SYNAD,DDNAME=VTOC,EXLST=EXLST
EXLST    DS    0F
         DC    X'87',AL3(JFCB)         EXIT LIST OF DCBIN
JFCB     DS    CL176
CAM1     CAMLST SEEK,CCHHR,VOL,FORMAT1
F0000    DC    F'0'
F0004    DC    F'4'
F0008    DC    F'8'
VOLTYP   DS    F                       to contain UCBTYPE          @rp2
TIMEWORK DS    F
DATEWORK DS    F
DEBADDR  DS    F
RLENGTH  DC    A(NEXTENT)
F4DSN    DC    CL44'FORMAT4.DSCB'
F4404    DC    44XL1'04'
PATTRN   DC    X'402020202120'
CURCCHHR DS    0CL5                    CURRENT DSCB POINTER
CURCC    DS    CL2
CURHH    DS    CL2
CURR     DS    C
*
HICCHHR  DS    CL5                     LAST F1 POINTER FROM VTOC
DSCBTRK  DS    C                       # DSCBS ON A TRACK
CCHHR    DS    CL5
VOL      DS    CL6
HLQ      DS    CL17                    High level qualifier        @rp5
DPARM    DS    CL5
#DS      DS    PL3                                                 @rp3
BUFCMD   DC    C' '                                                @rp1
AREA1    DS    CL144
AREA2    DS    CL144
AREA3    DS    CL144
TIMEDISP DS    CL10
DATEDISP DS    CL7
TIMEPATT DC    X'402021207A20207A2020'
DATEPATT DC    X'4021204B202020'
SW       DC    X'00'
$EOF     EQU   1                       VTOC END OF FILE
$IOE     EQU   2                       VTOC I/O ERROR
$IDX     EQU   4                       ON IF INDEXED VTOC
$EOD     EQU   8                       END OF DATA CVAFDSM
$LONG    EQU   16                      PARM 'LONG' IS USED (EXTRA
*                              LINE WITH DSNAME AND START ADDRESS)
$VOL     EQU   32                      PARM 'VOL' IS USED (VOLUME
*                              INSTEAD OF CREATION DATE AND NO HEADERS)
LIST     DS    0F
FORMAT1  DC    A(IECSDSL1)
FORMAT2  DC    A(AREA2)
FORMAT3  DC    A(AREA3)
*
*        OUTPUT RECORD OF FORMAT1 DSCB
*
         DS    0F
DSN      DS    CL26
         DS    C
CREAT    DS    CL6
         DS    C
REFDT    DS    CL6
         DS    C
DSORG    DS    CL4
RECFM    DS    CL4
LRECL    DS    CL6
         DS    C
BLKSIZE  DS    CL6
DEXT     DS    CL4
TRK      DS    CL6
UNUSED   DS    CL6
         DS    CL2
ENDREC   EQU   *
TRAIL1   DS    0CL80
HVOL     DS    CL6
         DC    CL05' free'
HCYL     DS    CL6                     FREE CYLINDERS
         DC    CL5' cyls'
HTRK     DS    CL6                     FREE TRACKS
         DC    CL10' trks max:'
HCYLEXT  DS    CL6                     BIGGEST EXT CYLINDERS
         DC    CL5' cyls'
HTRKEXT  DS    CL6                     BIGGEST EXT TRACKS
         DC    CL5' trks'
HDSNCNT  DS    CL6                     NUMBER OF DATASETS
         DC    CL9' datasets'
         DC    CL(TRAIL1+80-*)' '
HEAD1    DS    0CL80                   F4 DESCRIPTOR LINE
         DC    CL06'VTOC: '
         DC    CL07'CCHH=X'''
HEAD1EX1 DS    CL8
         DC    CL4'''-X'''
HEAD1EX2 DS    CL8
         DC    CL13''',DS4VTOCI=X'''
HEAD1VTI DS    CL2
         DC    CL11''',DSCB/TRK='
HEAD1DS  DS    CL2
         DC    CL09',DIR/TRK='
HEAD1DIR DS    CL2
         DC    CL(HEAD1+80-*)' '
HEAD2    DS    0CL80                   2nd F4 descriptor line @20020707
         DC    CL06'VTOC: '                                   @20020707
         DC    CL09'Trks/cyl='                                @20020707
HEAD2TCY DS    CL2                                            @20020707
         DC    CL14',Track length='                           @20020707
HEAD2TRK DS    CL5                                            @20020707
         DC    CL16',Number of cyls='                         @20020707
HEAD2#CY DS    CL5                                            @20020707
         DC    CL(HEAD2+80-*)' '                              @20020707
HEAD3    DC    CL27'Dsname'
         DC    CL6'cr.dat'
         DC    CL7' ref.dt'
         DC    CL4' org'
         DC    CL4' rec'
         DC    CL7'  LRECL'
         DC    CL8'  block'
         DC    CL3'ext'
         DC    CL6'  size'
         DC    CL8'  free '
HEAD0    DS    0CL80
         DC    CL4'UCB='
HEAD0UCB DS    CL3
         DC    C' '
         DC    CL8',Volume='
HEAD0VOL DS    CL6
         DC    CL6',date='
HEAD0DTE DS    CL6                     DATE (YYDDD)
         DC    CL6',time='
HEAD0TME DS    CL8                     TIME(HH:MM:SS)
         DC    CL6',VTOC='
HEAD0VTC DS    CL2                     WILL CONTAIN 'OS' OR 'IX'
         DC    CL6',parm='
HEAD0PRM DS    CL5
         DC    CL(HEAD0+80-*)' '
SEQMSG   DS    0CL80
         DC    CL33' Error in CVAFSEQ macro, CVSTAT= '
IDXSEQE  DS    CL2
         DC    CL10' , (R15)= '
IDXSEQC  DS    CL4
         DC    CL31' '
IDXERR   DS    0CL80
         DC    CL35' Errors in VTOC index, rc CVAFDSM= '
IDXERC   DS    CL4
         DC    CL14', errorcode = '
IDXSTAT  DS    CL2
         DC    C' '
IDXTXT   DS    CL10
         DC    CL(IDXERR+80-*)' '
FREEMSG  DS    0CL80
         DC    CL41'Number of free VTOC index records (VIRS)='
VIRS     DS    CL6
         DC    CL14', blank DSCBS='
DSCBS    DS    CL6
         DC    CL(FREEMSG+80-*)' '
         DS    0H
#ALTTR   DS    CL2
#EXT     DS    CL2
#FREECYL DS    CL2
#FREETRK DS    CL2
LARGCYL  DS    CL2
LARGTRK  DS    CL2
TRKCYL   DC    F'20'
D        DC    D'0'
CRDCNT   DC    PL3'0'
DSNCNT   DC    PL3'0'                  # DATASETS ON VOLUME
EXTABL   DS    0CL140
         DC    AL1(27)                 NUMBER OF EXTENTS
EXTS     DS    CL135
         DS    CL4
#FREEVIR DS    F
#FREDSCB DS    F                       # BLANK DSCBS
         LTORG
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         TITLE 'DF/DS CONTROL BLOCKS'
         AIF   ('&SYSPARM' EQ 'NODFDS').NODFDS5
**** START OF INCLUSION DF/DS (JDM1134) STATEMENTS
CVPL3    CVAFSEQ ACCESS=GT,BUFLIST=BUFLIST,DSN=DS1DSNAM,MF=L
CVPL4    CVAFDSM ACCESS=MAPDATA,COUNT=YES,MAP=VTOC,                    X
               CTAREA=#FREDSCB,MF=L
CVPL5    CVAFDSM ACCESS=MAPDATA,COUNT=NO,MAP=VOLUME,                   X
               EXTENTS=EXTABL,MF=L     This CVPL will be moved
CVPL2    CVAFDSM ACCESS=MAPDATA,COUNT=YES,MAP=INDEX,                   X
               CTAREA=#FREEVIR,MF=L
CVPL     CVAFDSM ACCESS=MAPDATA,COUNT=NO,MAP=VOLUME,                   X
               EXTENTS=EXTABL,MF=L
*------- do not insert statements here -------------------------------*
         ORG   CVPL
CVPLMAP  ICVAFPL DSECT=NO              CVPL MAP
BUFLIST  ICVAFBFL DSECT=NO
**** END   OF INCLUSION DF/DS (JDM1134) STATEMENTS
.NODFDS5 ANOP
         DS    0H
         IECSDSL1 (1)
DSCBLTH  EQU   *-IECSDSL1-L'DS1DSNAM
         TITLE 'ALLOCATION CONTROL BLOCKS'
         SYALLOC MF=L
         TITLE 'RPFCOMM DSECT'
COMMAREA RPFCOMM
F3DSCB   DSECT ,                       FORMAT 3 DSCB
         IECSDSL1 (3)
F4DSCB   DSECT ,                       FORMAT 4 DSCB
         IECSDSL1 (4)
F5DSCB   DSECT ,                       FORMAT 5 DSCB
         IECSDSL1 (5)
         PRINT NOGEN
         DCBD  DSORG=PS,DEVD=DA
VTOCUCB  DSECT
         IEFUCBOB
         IEZDEB
         END
