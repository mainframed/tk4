         MACRO
         SYALLOC  &DSN=,&DISP1=,&DISP2=,&PRI=,&SEC=,&DIR=,             X
               &DISP3=,&DDN=,&DDA=,&M=,&UNIT=,&UNITA=,&VOL=,&FREE=,    X
               &FREADDR=,&SPTYP=,&SYSOUT=,&UNALL=NO,&FCB=,&HOLD=NO,    X
               &DEST=,                                                 X
               &DSALLOC=YES,                                           X
               &PATTRN=,&RETPD=,                                       X
               &LRECL=,&BLKSIZE=,&RECFM=,&DSORG=,                      X
               &MF=I
.******************************************************************
.* 31JAN94 RPR XXXXXXXX DEST=ADDRESS OF LUNAME ADDED              *
.* 05AUG02 RPR XXXXXXXX DSORG='DSORG' ADDED                       *
.*----------------------------------------------------------------*
.*       THIS MACRO IS USED TO ALLOCATE THE DATASETS IN RPF .     *
.*       THE KEYWORDS ARE SPECIFIED BELOW:                        *
.*       DSN  = DSNAME TO ALLOCATE (REQUIRED IF DISP=OLD OR SHR   *
.*       UNIT = UNITNAME BE USED IF DISP=NEW (REQ FOR DISP=NEW)   *
.*       UNITA= A(8 BYTE UNITNAME) IF DISP=NEW OR NOT CATALOGED   *
.*              (UNIT AND UNITA ARE MUTUAL EXCLUSIVE)             *
.*       PRI  = SPACE ALLOCATION IN CYLINDERS (REQ FOR DISP=NEW)  *
.*       SEC  = SECONDARY ALLOCATION         (OPTIONAL)           *
.*       DISP1= DISPOSITION                  (DEFAULT SHR)        *
.*       DISP2= NORMAL DISP (DEFAULT DELETE FOR NEW AND KEEP FOR  *
.*              DISP=OLD                                          *
.*       DISP3= ABNORMAL DISP (DEFAULT DELETE FOR DISP=NEW AND    *
.*              KEEP FOR DISP=OLD/SHR                             *
.*       DDN  = DDNAME TO ALLOCATE OR      (REQUIRED)             *
.*       DDA  = DDNAME ADDRESS TO ALLOC    (MUTUAL EXCL WITH DDN) *
.*       M    = MEMBERNAME                 (OPTIONAL)             *
.*       DIR  = NUMBER OF DIRECTORIES      (OPTIONAL)             *
.*       SPTYP= ALLOCATION UNIT (CYL OR TRK) (DEFAULT CYL)        *
.*       VOL  = VOLUME NUMBER              (OPTIONAL)             *
.*       FREE = DDNAME (UNALLOC)           (OPTIONAL)             *
.*       FREADDR = DDNAME ADDRESS (MUTUAL EXCL WITH FREE)         *
.*       SYSOUT= SYSOUTCLASS AND FORMNUMBER                       *
.*       DEST  = ADDRESS OF REMOTE WORKSTATION NAME (LUNAME)      *
.*       HOLD  = PLACE SYSOUT ON SYSOUT HOLD Q (SPEC. 'YES')      *
.*       FCB   = ADDRESS OF FIELD CONTAINING NAME OF FORMS CONTROL*
.*               BUFFER                                           *
.*       BLKSIZE = BLOCK SIZE ADDRESS OF HALFWORD                 *
.*       LRECL   = LOGICAL RECORD LENGTH (HALFWORD BIN)           *
.*       RECFM   = RECORD FORMAT                                  *
.*       DSORG   = DATA SET ORGANISATION                          *
.*       PATTRN  = DCB REFERENCE FROM ANOTHER DATASET             *
.*                 (LIKE DCB=SYS1.PARMLIB) ADDRESS FIELD          *
.*       RETPD = ADDRESS OF A HALFWORD CONTAINING THE RETENTION   *
.*               PERIOD.                                          *
.*       UNALL= FREE = CLOSE PARM FOR SYSOUT (YES OR NO)          *
.*       DSALLOC= ISSUE SVC 99 YES OR NO                          *
.*       MF   = E OR L LIST AND EXEC (DEFAULT INLINE EXPANSION)   *
.******************************************************************
         GBLB  &ASW
         GBLC  &LAB
.*       LABELS IN THE ALLOCATION ROUTINE
         LCLC  &SYMBOL,&SYMBOL2
&SYMBOL  SETC  'MF=&MF'
         AIF   ('&MF' NE 'I' AND '&MF' NE 'E' AND '&MF' NE 'L').ERR4
         AIF   ('&MF' EQ 'E').NOTDEF  MF=E DONT DECL BLOCKS
         AIF   (&ASW EQ 1).NOTDEF
&LAB     SETC  'AL&SYSNDX'
&ASW     SETB  1
         AIF   ('&MF' EQ 'L').A000
         B     &LAB.A                   * BRANCH ROUND CB'S           *
.A000    ANOP
***********************************************************************
*                                                                     *
*        ALLOCATION CONTROL BLOCKS BUILT BY THE SYALLOC MACRO         *
*                                                                     *
***********************************************************************
         DS    0F                       *                             *
DALPTR   DC    A(DALBLK+X'80000000')    *                       @MVSXA*
*                                       *                             *
DALBLK   DC    AL1(20)                  * LENGTH OF REQ BLK           *
DALVERB  DC    AL1(1)                   * DSNAME ALLOCATION           *
DALFLG1  DC    X'2000'                  * FLAGS1                      *
DAERROR  DC    AL2(0)                   * ERROR CODE                  *
DAINFO   DC    AL2(0)                   * INFOCODE                    *
DALTU    DC    A(DALTXT)                * TEXT UNIT LIST              *
         DC    A(0)                     * RESERVED                    *
DALFLG2  DC    A(0)                     * FLAGS2                      *
*                                       *                             *
DALTXT   DS    0F                       *                             *
TUUNIT   DC    A(DALUNIT)               * UNITNAME TU                 *
TUDSN    DC    A(DALDSNAM)              * DSNAME TU                   *
TUDISP1  DC    A(DALSTATS)              * DISPOSITION TU              *
TUDISP2  DC    A(DALNDISP)              * NORM DISPOSITION            *
TUDISP3  DC    A(DALCDISP)              * CONDITIONAL DISP            *
TUVOL    DC    A(DALVLSER)              * VOLUME NUMBER               *
TUTYPE   DC    A(DALCYL)                * ALLWAYS CYL ALLOCATION      *
TUPRI    DC    A(DALPRIME)              * PRIMARY ALLOCATION          *
TUSEC    DC    A(DALSECND)              * SECONDARY ALLOCATION        *
TURETPD  DC    A(DALRETPD)              * RETENTION PERIOD            *
TUDIR    DC    A(DALDIR)                * # OF DIRECTORY BLOCKS       *
TUBLKSZ  DC    A(DALBLKSZ)              * BLOCK SIZE                  *
TULRECL  DC    A(DALLRECL)              * LOGICAL RECORD LENGTH       *
TURECFM  DC    A(DALRECFM)              * RECORD FORMAT TU            *
TUDSORG  DC    A(DALDSORG)              * DSORG TU                    *
TUDCBDS  DC    A(DALDCBDS)              * DCB=DSN REFERENCE           *
TUMEM    DC    A(DALMEMBR)              * MEMBERNAME                  *
TUSYSO   DC    A(DALSYSO)               * SYSOUT SPECIFICATION        *
TUSUSER  DC    A(DALSUSER)              * SYSOUT REM. WORKSTATION     *
TUSHOLD  DC    A(DALSHOLD)              * HOLD = YES FOR SYSOUT       *
TUEXTRN  DC    A(DALEXTRN)              * EXTERNAL WRITE NAME         *
TUUNALL  DC    A(DALUNALL)              * FREE = CLOSE TU             *
TUFCB    DC    A(DALFCBIM)              * FCB TU                      *
TUDDN    DC    A(DALDDNAM+X'80000000')  * DDNAME TU             @MVSXA*
TXTEND   EQU   *                        * AND OF ADDRESSLIST          *
*                                       *                             *
DALDSNAM DS    0H                       * DSNAME TU                   *
         DC    X'0002'                  *                             *
         DC    AL2(1)                   *                             *
DALDSNL  DC    AL2(44)                  * LENGTH                      *
DALDSN   DS    CL44                     *                             *
*                                       *                             *
DALMEMBR DS    0H                       * MEMBER TU                   *
         DC    X'0003'                  *                             *
         DC    AL2(1)                   *                             *
DALMEML  DC    AL2(8)                   * LENGTH                      *
DALMEM   DS    CL8                      *                             *
*                                       *                             *
DALSTATS DS    0H                       * DATASET DISP.               *
         DC    X'0004'                  *                             *
         DC    AL2(1)                   *                             *
         DC    AL2(1)                   * LENGTH                      *
DALDISP1 DC    X'00'                    *                             *
*                                       *                             *
DALNDISP DS    0H                       * NORMAL DISPOSITION          *
         DC    X'0005'                  *                             *
         DC    AL2(1)                   *                             *
         DC    AL2(1)                   * LENGTH                      *
DALDISP2 DC    X'00'                    *                             *
*                                       *                             *
DALCDISP DS    0H                       * CONDITIONAL DISPOSITION     *
         DC    X'0006'                  *                             *
         DC    AL2(1)                   *                             *
         DC    AL2(1)                   * LENGTH                      *
DALDISP3 DC    X'00'                    *                             *
*                                       *                             *
DALVLSER DS    0H                       * VOLUME SERIAL TU            *
         DC    X'0010'                  *                             *
         DC    AL2(1)                   *                             *
         DC    AL2(6)                   * VOLUME LENGTH               *
DAVOLSER DS    CL6                      *                             *
*                                       *                             *
DALUNIT  DS    0H                       * UNIT TU                     *
         DC    X'0015'                  *                             *
         DC    AL2(1)                   *                             *
DALUNITL DC    AL2(8)                   * LENGTH                      *
DALUNITD DS    CL8                      *                             *
*                                       *                             *
DALDDNAM DS    0H                       * DDNAME TU                   *
         DC    X'0001'                  *                             *
         DC    AL2(1)                   *                             *
DALDDNL  DC    AL2(8)                   *                             *
DALDDN   DS    0CL8                     * DDNAME                      *
         DS    CL8                      *                             *
*                                       *                             *
DALTRK   DS    0H                       * TRACK TU                    *
         DC    X'0007'                  *                             *
         DC    AL2(0)                   *                             *
*                                       *                             *
DALCYL   DS    0H                       * CYLINDER TU                 *
         DC    X'0008'                  *                             *
         DC    AL2(0)                   *                             *
*                                       *                             *
DALPRIME DS    0H                       * PRIMARY ALLOC               *
         DC    X'000A'                  *                             *
         DC    AL2(1)                   *                             *
DALPRIL  DC    AL2(3)                   *                             *
DALPRI   DC    AL3(0)                   *                             *
*                                       *                             *
DALSECND DS    0H                       * SECONDARY ALLOC             *
         DC    X'000B'                  *                             *
         DC    AL2(1)                   *                             *
DALSECL  DC    AL2(3)                   *                             *
DALSEC   DC    AL3(0)                   *                             *
*                                       *                             *
DALDIR   DS    0H                       * DIRECTORY BLOCKS            *
         DC    X'000C'                  *                             *
         DC    AL2(1)                   *                             *
DALDIRL  DC    AL2(3)                   *                             *
DALDIRB  DC    AL3(0)                   *                             *
*                                       *                             *
DALRETPD DS    0H                       * RETENTION PERIOD            *
         DC    X'0023'                  *                             *
         DC    AL2(1)                   *                             *
DALRETL  DC    AL2(2)                   *                             *
DALRETP  DC    AL2(0)                   *                             *
*                                       *                             *
DALBLKSZ DS    0H                       * BLOCK SIZE TEXT UNIT        *
         DC    X'0030'                  *                             *
         DC    AL2(1)                   *                             *
DALBLKLN DC    AL2(2)                   * LENGTH SHOULD BE 2          *
DALBLOCK DC    AL2(0)                   * BLOCK SIZE                  *
*                                       *                             *
DALDCBDS DS    0H                       * DCB REFERENCE TEXT UNIT     *
         DC    X'002C'                  *                             *
         DC    AL2(1)                   *                             *
DALDSL   DC    AL2(44)                  * LENGTH SHOULD BE 44         *
DALDCBPT DS    CL44                     * PATTERN DATASET             *
*                                       *                             *
DALLRECL DS    0H                       * LRECL TEXT UNIT             *
         DC    X'0042'                  *                             *
         DC    AL2(1)                   *                             *
DALRECLN DC    AL2(2)                   * LENGTH SHOULD BE 2          *
DALRECL  DC    AL2(0)                   * LRECL                       *
*                                       *                             *
DALDSORG DS    0H                       * DSORG TEXT UNIT             *
         DC    X'003C'                  *                             *
         DC    AL2(1)                   *                             *
DALDSOLN DC    AL2(2)                   * LENGTH SHOULD BE 2          *
DALORG   DC    AL2(0)                   * DSORG                       *
*                                       *                             *
DALSYSO  DS    0H                       * SYSOUT TEXT UNIT            *
         DC    X'0018'                  *                             *
         DC    AL2(1)                   *                             *
DALSYSOL DC    AL2(1)                   *                             *
DALSYSCL DC    C'A'                     * SYSOUT CLASS                *
*                                       *                             *
DALSUSER DS    0H                       * REMOTE WORKSTATION SPEC.    *
         DC    X'0058'                  *                             *
         DC    AL2(1)                   *                             *
DALSUSRL DC    AL2(8)                   *                             *
DALSUSR  DC    CL8' '                   * REMOTE STATION NAME (LUNAME)*
*                                       *                             *
DALSHOLD DS    0H                       * HELD SYSOUT TU              *
         DC    X'0059'                  *                             *
         DC    AL2(0)                   * NO PARM                     *
         DS    0H                       * NO OPTION 'LEN'             *
         DS    0H                       * NO 'PARM'                   *
*                                       *                             *
DALUNALL DS    0H                       * FREE = CLOSE TU             *
         DC    X'001C'                  *                             *
         DC    AL2(0)                   *                             *
         DS    0H                       * NO OPTION THREE             *
         DS    0H                       * NO OPTION FOUR              *
*                                       *                             *
DALFCBIM DS    0F                       * FCB TEXT UNIT               *
         DC    X'0025'                  * KEY                         *
         DC    AL2(1)                   * #                           *
         DC    AL2(4)                   *                             *
DALFCB   DS    CL4                      * NAME OF FCB IMAGE           *
*                                       *                             *
DALEXTRN DS    0H                       * EXTRNL WTR TEXT UNIT        *
         DC    X'0019'                  *                             *
         DC    AL2(1)                   *                             *
         DC    AL2(6)                   * LENGTH                      *
         DC    CL6'INTRDR'              * INTERNAL READER             *
*                                       *                             *
DALRECFM DS    0H                       * RECORD FORMAT TEXT UNIT     *
         DC    X'0049'                  *                             *
         DC    AL2(1)                   *                             *
         DC    AL2(1)                   * LENGTH                      *
DALRECF  DS    X                        * RECFM                       *
*                                       *                             *
***********************************************************************
*                                                                     *
*        THESE ARE THE CONTROL-BLOCKS USED BY THE DYNAMIC UNALLO-     *
*        CATION ROUTINE.                                              *
*                                                                     *
***********************************************************************
*                                       *                             *
         DS    0F                       *                             *
DUNPTR   DC    A(DUNBLK+X'80000000')    * REQUEST BLOCK POINTER @MVSXA*
*                                       *                             *
DUNBLK   DC    AL1(20)                  * LENGTH OF REQ.BLK           *
DUNVERB  DC    AL1(2)                   * UNALLOCATION VERB           *
DUNFLG1  DC    X'2000'                  * FLAGS1                      *
DUNERROR DC    AL2(0)                   * ERRORCODE                   *
DUNINFO  DC    AL2(0)                   * INFOCODE                    *
         DC    A(DUNTXT)                * TEXT UNIT LIST              *
         DC    A(0)                     * RESERVED                    *
DUNFLG2  DC    A(0)                     * FLAGS 2                     *
*                                       *                             *
DUNTXT   DS    0F                       *                             *
         DC    A(DALDDNAM+X'80000000')  *                       @MVSXA*
         AIF   ('&MF' EQ 'L').A999      * MEND IF MF=L                *
&LAB.A   DS    0H                       *                             *
*                                       *                             *
.NOTDEF  ANOP                           *                             *
         AIF   ('&MF' EQ 'L').A999      * MEND IF MF=L                *
         AIF   (T'&FREE NE 'O' OR T'&FREADDR NE 'O').A050 * FREE FILE *
         XC    DALTXT(TXTEND-DALTXT),DALTXT * CLEAR TXT UNIT LIST     *
&SYMBOL  SETC  'DDN OR DDA'             *                             *
         AIF   (T'&DDN EQ 'O' AND T'&DDA EQ 'O').ERR1 * NO DDN OR DDA *
&SYMBOL  SETC  'DDN'                    *                             *
&SYMBOL2 SETC  'DDA'                    *                             *
         AIF   (T'&DDN NE 'O' AND T'&DDA NE 'O').ERR5 * MUTUAL EXCL.  *
         MVC   TUDDN(4),=A(DALDDNAM)    * MOVE DDN TU IN TULIST       *
         OI    TUDDN,X'80'              * MARK LAST TU IN LIST        *
         AIF   (T'&DDA EQ 'O').A001     * GO IF DDNAME NOT AN ADDRESS *
         MVC   DALDDN(8),&DDA           * MOVE DDNAME FROM USER FIELD *
         AGO   .A002                    *                             *
.A001    ANOP                           *                             *
         MVC   DALDDN(8),=CL8'&DDN'     * MOVE DDNAME IN TU           *
.A002    ANOP                           *                             *
         AIF   (T'&SYSOUT NE 'O').SYSO  * SYSOUT TU SPECIFIED         *
         AIF   ('&DSN' NE '').A003      *                             *
&SYMBOL  SETC  'DSN'                    *                             *
         AIF   ('&DISP1' NE 'NEW' AND '&DISP1' NE '').ERR1            *
         AGO   .A004                    *                             *
.A003    ANOP                           * DSNAME IS SPECIFIED         *
         MVC   DALDSN(44),&DSN          * MOVE DATASET IN TU          *
         MVC   TUDSN,=A(DALDSNAM)       * AND MOVE IN TULIST          *
.A004    ANOP                           *                             *
&SYMBOL  SETC  'UNIT'                   *                             *
&SYMBOL2 SETC  'UNITA'                  *                             *
         AIF   (T'&UNIT NE 'O' AND T'&UNITA NE 'O').ERR5 * MUT. EXCL. *
         AIF   ('&UNIT' NE '').A005     *                             *
         AIF   ('&UNITA' NE '').A005    *                             *
         AIF   ('&DISP1' NE 'NEW' AND '&DISP1' NE '').A007            *
&SYMBOL  SETC  'UNIT'                   *                             *
         AGO   .ERR1                    * NO UNIT FOR DISP=NEW        *
.A005    ANOP                           *                             *
         MVC   TUUNIT,=A(DALUNIT)       * MOVE IN TU LIST             *
         AIF   (T'&UNIT EQ 'O').A006    * IF NOT UNIT, THEN UNITA     *
         MVC   DALUNITD(8),=CL8'&UNIT'  * UNITNAME IN TU              *
         AGO   .A007                    *                             *
.A006    ANOP                           *                             *
         MVC   DALUNITD(8),&UNITA       * UNITNAME IN TU              *
.A007    ANOP                           *                             *
         AIF   ('&VOL' EQ '').A009      * VOLUME NOT SPECIFIED        *
&SYMBOL  SETC  'UNIT'                   *                             *
         AIF   (T'&UNIT EQ 'O' AND T'&UNITA EQ 'O').ERR1
         MVC   DAVOLSER,&VOL            * MOVE VOLUME IN TU           *
         MVC   TUVOL,=A(DALVLSER)       * MOVE IN TU LIST             *
.A009    ANOP                           *                             *
         AIF   ('&M' EQ '').A011        * MEMBER NOT SPECIFIED        *
         MVC   DALMEM(8),&M             * MOVE MEMBERNAME             *
         MVC   TUMEM,=A(DALMEMBR)       * MOVE TU IN TULIST           *
.A011    ANOP                           *                             *
         AIF   ('&DISP1' EQ '').A021    * DISP1 NOT SPECIFIED         *
         MVC   TUDISP1,=A(DALSTATS)     * TU IN TULIST                *
         AIF   ('&DISP1' EQ 'SHR').ASHR * DISP=SHR                    *
         AIF   ('&DISP1' EQ 'OLD').AOLD * DISP=OLD                    *
         AIF   ('&DISP1' EQ 'MOD').AMOD * DISP=MOD                    *
         AIF   ('&DISP1' EQ 'NEW').ANEW * DISP=NEW                    *
&SYMBOL  SETC  'DISP1=&DISP1'           *                             *
         AGO   .ERR2                    * ERROR ROUTINE               *
.ASHR    ANOP                           *                             *
         MVI   DALDISP1,X'08'           * DISP=SHR                    *
         AGO   .A021                    *                             *
.AOLD    ANOP                           *                             *
         MVI   DALDISP1,X'01'           * DISP=OLD                    *
         AGO   .A021                    *                             *
.AMOD    ANOP                           *                             *
         MVI   DALDISP1,X'02'           * DISP=MOD                    *
         AGO   .A021                    *                             *
.ANEW    ANOP                           *                             *
         MVI   DALDISP1,X'04'           * DISP=NEW                    *
.A021    ANOP                           *                             *
         AIF   ('&DISP2' EQ '').A031    * DISP2 NOT SPECIFIED         *
         MVC   TUDISP2,=A(DALNDISP)     * MOVE ADDRESS OF NORMAL DISP *
         AIF   ('&DISP2' EQ 'KEEP').AKEEP                             *
         AIF   ('&DISP2' EQ 'DELETE').ADEL                            *
         AIF   ('&DISP2' EQ 'CATLG').ACAT                             *
         AIF   ('&DISP2' EQ 'UNCATLG').AUCAT                          *
&SYMBOL  SETC  'DISP2=&DISP2'           *                             *
         AGO   .ERR2                    * WRONG DISP2                 *
.AKEEP   ANOP                           *                             *
         MVI   DALDISP2,X'08'           * KEEP                        *
         AGO   .A031                    *                             *
.ADEL    ANOP                           *                             *
         MVI   DALDISP2,X'04'           * DELETE                      *
         AGO   .A031                    *                             *
.ACAT    ANOP                           *                             *
         MVI   DALDISP2,X'02'           * CATLG                       *
         AGO   .A031                    *                             *
.AUCAT   ANOP                           *                             *
         MVI   DALDISP2,X'01'           * UNCATLG                     *
.A031    ANOP                           *                             *
         AIF   ('&DISP3' EQ '').A041    * DISP3 NOT SPECIFIED         *
         MVC   TUDISP3,=A(DALCDISP)     * MOVE IN TULIST              *
         AIF   ('&DISP3' EQ 'KEEP').AKEEP1                            *
         AIF   ('&DISP3' EQ 'DELETE').ADEL1                           *
         AIF   ('&DISP3' EQ 'CATLG').ACAT1                            *
         AIF   ('&DISP3' EQ 'UNCATLG').AUCAT1                         *
&SYMBOL  SETC  'DISP3=&DISP3'           *                             *
         AGO   .ERR2                    * WRONG DISP3                 *
.AKEEP1  ANOP                           *                             *
         MVI   DALDISP3,X'08'           * KEEP                        *
         AGO   .A041                    *                             *
.ADEL1   ANOP                           *                             *
         MVI   DALDISP3,X'04'           * DELETE                      *
         AGO   .A041                    *                             *
.ACAT1   ANOP                           *                             *
         MVI   DALDISP3,X'02'           * CATLG                       *
         AGO   .A041                    *                             *
.AUCAT1  ANOP                           *                             *
         MVI   DALDISP3,X'01'           * UNCATLG                     *
.A041    ANOP                           *                             *
         AIF   ('&DISP1' EQ 'OLD' OR '&DISP1' EQ 'SHR').A099          *
.*       IGNORE SPACE PARAMETER IF DISP=OLD OR DISP=SHR               *
         AIF   ('&PRI' NE '').A043      * TEST PRIME SPACE            *
&SYMBOL  SETC  'PRI'                    *                             *
         AIF   ('&DISP1' NE 'MOD').ERR1 * SPACE NOT SPECIFIED         *
         AGO   .A099                    * SPACE NOT SPECIFIED         *
.A043    ANOP                           *                             *
         MVC   TUPRI,=A(DALPRIME)       * PRIMARY SPACE               *
         AIF   ('&SPTYP' EQ '').A044    * TAKE DEFAULT CYLINDERS      *
&SYMBOL  SETC  'SPTYP=&SPTYP'           *                             *
         AIF   ('&SPTYP' NE 'TRK' AND '&SPTYP' NE 'CYL').ERR2         *
         AIF   ('&SPTYP' NE 'TRK').A044 *                             *
         MVC   TUTYPE(4),=A(DALTRK)     * ALLOCATION IN TRACKS        *
         AGO   .A0441                   *                             *
.A044    ANOP                           *                             *
         MVC   TUTYPE,=A(DALCYL)        * ALLOCATION UNIT             *
.A0441   ANOP                           *                             *
&SYMBOL  SETC  'PRI'                    *                             *
         AIF   (K'&PRI GT 3).ERR3       * TOO LONG                    *
         LA    14,&PRI                  * LOAD IN REG 14              *
         STCM  14,7,DALPRI              *                             *
         AIF   ('&SEC' EQ '').A045      * SECONDARY SPC OMITTED       *
&SYMBOL  SETC  'SEC'                    *                             *
         AIF   (K'&SEC GT 3).ERR3       * TOO LONG                    *
         MVC   TUSEC,=A(DALSECND)       * MOVE IN TULIST              *
         LA    14,&SEC                  * LOAD IN REG 14              *
         STCM  14,7,DALSEC              *                             *
.A045    ANOP                           *                             *
         AIF   ('&DIR' EQ '').A047      * DIRECTORY BLKS OMITTED      *
&SYMBOL  SETC  'DIR'                    *                             *
         AIF   (K'&DIR GT 3).ERR3       * TOO LONG                    *
         MVC   TUDIR,=A(DALDIR)         * MOVE IN TULIST              *
         LA    14,&DIR                  * LOAD IN REG 14              *
         STCM  14,7,DALDIRB             *                             *
.A047    ANOP                           *                             *
         AIF   (T'&RETPD EQ 'O').A099   * RETENTION PERIOD OMITTED    *
         MVC   TURETPD,=A(DALRETPD)     * MOVE IN TULIST              *
         MVC   DALRETP,&RETPD           * LOAD IN REG 14              *
         AGO   .A099                    *                             *
.A050    ANOP                           *                             *
&SYMBOL  SETC  'FREE'                   *                             *
&SYMBOL2 SETC  'FREADDR'                *                             *
         AIF   (T'&FREE NE 'O' AND T'&FREADDR NE 'O').ERR5 * MUTUAL   *
         AIF   (T'&FREADDR EQ 'O').A052 * FREE = DDNAME               *
         MVC   DALDDN(8),&FREADDR       * FREE = DDNAME ADDRESS       *
         AGO   .A054                    *                             *
.A052    ANOP                           *                             *
         MVC   DALDDN(8),=CL8'&FREE'    *                             *
.A054    ANOP                           *                             *
         AIF   ('&DSALLOC' EQ 'NO').A999 * ONLY FORMATTING TU"S       *
         LA    1,DUNPTR                 * UNALLOCATE                  *
         DYNALLOC ,                     * ISSUE SVC 99                *
         AGO   .A999                    *                             *
.ERR1    ANOP                           *                             *
         MNOTE 12,'REQUIRED OPERAND &SYMBOL MISSING'
         MEXIT
.ERR2    ANOP
         MNOTE 12,'&SYMBOL IS INVALID'
         MEXIT
.ERR3    ANOP
         MNOTE 12,'OPERAND &SYMBOL TOO LONG'
         MEXIT
.ERR4    ANOP
         MNOTE 12,'MACRO FUNCTION &SYMBOL IS INVALID'
         MEXIT
.ERR5    ANOP
         MNOTE 12,'&SYMBOL AND &SYMBOL2 ARE MUTUAL EXCLUSIVE'
         MEXIT
.ERR6    ANOP
         MNOTE 12,'KEYWORD &SYMBOL IS INVALID'
         MEXIT
.A099    ANOP
.*       SETUP DCB OPTIONS SPECIFIED    *                             *
         AIF   (T'&BLKSIZE EQ 'O').A101 * BLKSIZE NOT SPECIFIED       *
         MVC   DALBLOCK,&BLKSIZE        * MOVE BLOCK LENGTH           *
         MVC   TUBLKSZ,=A(DALBLKSZ)     * MOVE TEXT UNIT INTO LIST    *
.A101    ANOP                           *                             *
         AIF   (T'&LRECL EQ 'O').A103   * LRECL   NOT SPECIFIED       *
         MVC   DALRECL,&LRECL           * MOVE LOGICAL RECORD LENGTH  *
         MVC   TULRECL,=A(DALLRECL)     * MOVE TEXT UNIT INTO LIST    *
.A103    ANOP                           *                             *
         AIF   (T'&PATTRN EQ 'O').A105  * PATTRN DCB NOT SPECIFIED    *
         MVC   TUDCBDS,=A(DALDCBDS)     * MOVE TEXT UNIT INTO LIST    *
         MVC   DALDCBPT,&PATTRN         * MOVE DATASET NAME           *
.A105    ANOP                           *                             *
         AIF   (T'&RECFM EQ 'O').A109   * RECORD FORMAT NOT SPECIFIED *
         MVC   TURECFM,=A(DALRECFM)     * MOVE TEXT UNIT INTO LIST    *
&SYMBOL  SETC  'RECFM=&RECFM'
         AIF   ('&RECFM' EQ 'F').RECF   *   TEST                      *
         AIF   ('&RECFM' EQ 'V').RECV   *       REC                   *
         AIF   ('&RECFM' EQ 'FB').RECFB *          ORD                *
         AIF   ('&RECFM' EQ 'VB').RECVB *             FOR             *
         AIF   ('&RECFM' EQ 'FBA').RECFBA                MATS         *
         AIF   ('&RECFM' EQ 'FBM').RECFBM                             *
         AIF   ('&RECFM' EQ 'VBA').RECVBA                             *
         AIF   ('&RECFM' EQ 'VBM').RECVBM                             *
         AIF   ('&RECFM' EQ 'FBS').RECFBS                             *
         AIF   ('&RECFM' EQ 'VBS').RECVBS                             *
         AIF   ('&RECFM' EQ 'U').RECU   *                             *
         AGO   .ERR2                    * ISSUE MNOTE AND RC=12       *
.RECF    MVI   DALRECF,X'80'            * RECFM=F                     *
         AGO   .A109
.RECV    MVI   DALRECF,X'40'            * RECFM=V                     *
         AGO   .A109
.RECFB   MVI   DALRECF,X'90'            * RECFM=FB                    *
         AGO   .A109
.RECVB   MVI   DALRECF,X'50'            * RECFM=VB                    *
         AGO   .A109
.RECFBA  MVI   DALRECF,X'94'            * RECFM=FBA                   *
         AGO   .A109
.RECFBM  MVI   DALRECF,X'92'            * RECFM=FBM                   *
         AGO   .A109
.RECVBA  MVI   DALRECF,X'54'            * RECFM=VBA                   *
         AGO   .A109
.RECVBM  MVI   DALRECF,X'52'            * RECFM=VBM                   *
         AGO   .A109
.RECFBS  MVI   DALRECF,X'98'            * RECFM=FBS                   *
         AGO   .A109
.RECVBS  MVI   DALRECF,X'58'            * RECFM=VBS                   *
         AGO   .A109
.RECU    MVI   DALRECF,X'C0'            * RECFM=U                     *
.A109    ANOP                           *                             *
         AIF   (T'&DSORG EQ 'O').A111   * DSORG NOT SPECIFIED         *
         MVC   TUDSORG,=A(DALDSORG)     * MOVE TEXT UNIT INTO LIST    *
&SYMBOL  SETC  'DSORG=&DSORG'
         AIF   ('&DSORG' EQ 'PS').ORGPS * TEST                        *
         AIF   ('&DSORG' EQ 'PSU').ORGPSU *     DATA                  *
         AIF   ('&DSORG' EQ 'PO').ORGPO *            SET              *
         AIF   ('&DSORG' EQ 'POU').ORGPOU *             ORG           *
         AIF   ('&DSORG' EQ 'DA').ORGDA *                   ANI       *
         AIF   ('&DSORG' EQ 'DAU').ORGDAU *                    SATION *
         AGO   .ERR2                    * ISSUE MNOTE AND RC=12       *
.ORGPS   MVC   DALORG,=X'4000'          * DSORG=PS                    *
         AGO   .A111
.ORGPSU  MVC   DALORG,=X'4100'          * DSORG=PSU                   *
         AGO   .A111
.ORGPO   MVC   DALORG,=X'0200'          * DSORG=PO                    *
         AGO   .A111
.ORGPOU  MVC   DALORG,=X'0300'          * DSORG=POU                   *
         AGO   .A111
.ORGDA   MVC   DALORG,=X'2000'          * DSORG=DA                    *
         AGO   .A111
.ORGDAU  MVC   DALORG,=X'2100'          * DSORG=DAU                   *
         AGO   .A111
.A111    ANOP                           *                             *
.A199    ANOP                           * ALLOCATE                    *
         AIF   ('&DSALLOC' EQ 'NO').A999 * ONLY FORMATTING TU"S       *
         LA    1,DALPTR                 * REQUEST BLOCK               *
         DYNALLOC ,                     * ALLOCATE                    *
         MEXIT
&SYMBOL  SETC  'SYSOUT'                 * FOR MNOTE                   *
&SYMBOL2 SETC  'DSN'                    * FOR MNOTE                   *
.SYSO    AIF   (T'&DSN NE 'O').ERR5     * DSN AND SYSOUT MUTUAL EXCL  *
         AIF   (K'&SYSOUT(1) NE 1).ERR6 * NO VALID SYSOUT CLASS       *
         AIF   ('&SYSOUT(1)' LT 'A' OR '&SYSOUT(1)' GT '9').ERR6
         MVI   DALSYSCL,C'&SYSOUT(1)'   * MOVE SYSOUT CLASS           *
         MVC   TUSYSO,=A(DALSYSO)       * MOVE INTO TU LIST           *
         AIF   (T'&SYSOUT(2) EQ 'O').SYSO2 * NO INTRDR SPECIFIED      *
         MVC   TUEXTRN,=A(DALEXTRN)     * INCLUDE INTRD SPECIFICATION *
.SYSO2   ANOP                           *                             *
         AIF   (T'&UNALL EQ 'O').SYSO3  * NO FREE = CLOSE, ALLOCATE   *
         AIF   ('&UNALL' EQ 'NO').SYSO3 * NO FREE = CLOSE, ALLOCATE   *
&SYMBOL  SETC  'UNALL'                  * SET KEYWORD FOR MNOTE       *
         AIF   ('&UNALL' NE 'YES').ERR6 * INVALID 'UNALL' KEYWORD     *
         MVC   TUUNALL,=A(DALUNALL)     * INCLUDE FREE=CLOSE          *
.SYSO3   ANOP                           * LOOK IF HOLD=YES            *
         AIF   (T'&HOLD EQ 'O').SYSO4   * HOLD NOT SPECIFIED          *
         AIF   ('&HOLD' EQ 'NO').SYSO4  * HOLD=NO                     *
&SYMBOL  SETC  'HOLD = &HOLD'           * PREPARE MNOTE               *
         AIF   ('&HOLD' NE 'YES').ERR2  * INVALID                     *
         MVC   TUSHOLD,=A(DALSHOLD)     * MOVE IN TU LIST             *
.SYSO4   ANOP                           * LOOK IF FCB IS SPECIFIED    *
         AIF   (T'&FCB EQ 'O').SYSO5    * FCB NOT SPECIFIED           *
         MVC   DALFCB(4),&FCB           * MOVE NAME OF FCB IMAGE      *
         MVC   TUFCB,=A(DALFCBIM)       * ADDRESS OF FCB TU IN LIST   *
.SYSO5   ANOP                           * LOOK IF DEST IS SPECIFIED   *
         AIF   (T'&DEST EQ 'O').A099    * DEST (LUNAME) NOT SPECIFIED *
         MVC   DALSUSR(8),&DEST         * MOVE NAME FROM CALLER       *
         MVC   TUSUSER,=A(DALSUSER)     * ADDRESS OF RMT IN TU-LIST   *
         AGO   .A099                    * ALLOCATE                    *
.A999    ANOP
         MEND
