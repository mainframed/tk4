RPFUTIL  TITLE 'R P F  UTILITY MENU'
*---------------------------------------------------------------------*
*                                                                     *
*       MODULE:         RPFUTIL                                       *
*                                                                     *
*       FUNCTION:       PRESENT A MENU TO PERFORM UTILITY FUNCTIONS   *
*                       THE FUNCTIONS ARE:                            *
*                       01. PERFORM PDS MAINTENANCE (RPFPDS)          *
*                       02. Create or delete a data set (RPFALLOC)    *
*                       04. Manipulate with VTOC's (RPFVTOC)          *
*                       05. PERFORM LIBRARIAN MAINTENANCE (RPFLIB)    *
*                       06. Execute the OUTPUT processor (RPFOUT)     *
*                       07. Interactive monitor program (IM)          *
*                           Thanks to Greg Price                      *
*                                                                     *
*       Nov 13,2002 RPr  Add 7 color support in screen                *
*       Feb 15,2003 RPr  Extend command area and =n/=n.n cmd added @rp1
*       Jan 09,2004 RPr  Option 3 (move/copy) added                @rp2
*                                                                     *
*------------------------------------------ (C)-2003 SKYBIRD SYSTEMS -*
         SPACE 2
RPFUTIL  CSECT
         SAVE  (14,12),,*
         USING RPFUTIL,15
         LA    R11,SAVE
         ST    R13,SAVE+4
         ST    R11,8(0,R13)
         LR    R13,R11
         B     START
         DS    0F
SAVE     DC    18F'-1'
         DC    CL8'&SYSDATE',C' ',CL8'&SYSTIME'
START    DS    0H
         DROP  15
         USING SAVE,13
         L     11,0(1)                 PARAMETER
         USING COMMAREA,R11            GET ADDRESSABILITY
         MVC   SCR1UID(7),USERID       USERID INTO SCREEN
         MVC   SCR1TXT(2),=X'27F5'     DEFAULT WR-STD CC
         CLC   COMMSIZE,=H'32'         3278 MODEL 3 SCREEN ?
         BE    SIZEALT                 YES: MOVE WR-ALT CC
         CLC   COMMSIZE,=H'43'         3278 MODEL 3 SCREEN ?
         BNE   PUT1                    NO: KEEP WR-STD CC
SIZEALT  DS    0H
         MVC   SCR1TXT(2),=X'277E'     MOVE WR-ALT CC
PUT1     EQU   *
         TM    INFCODE2,$RETURN        IS RETURN INDICATOR ON ?
         BO    END                     YES: RETURN TO MAIN
         TM    INFCODE2,$OPTION        OPTION ALREADY SEL. IN MAIN ?
         BNO   PUT1O                   NO BRANCH
         MVC   BUFFER(1),UTILOPT       MOVE OPTION
         B     FUNC0                   SCAN THE OPTION DIRECTLY
PUT1O    DS    0H
         TPUT  SCR1TXT,SCR1LEN,FULLSCR UTIL MENU ON SCREEN
GET1     LA    R5,BUFFER               OUTPUT FORMATTED BUFFER
         L     R3,COMMSCR              LOAD SCREEN ADDRESS
         TGET  (R3),40,ASIS            READ THE SCREEN
         LR    R4,R1                   SAVE LENGTH
*        DO AN TGET ASIS TO OBTAIN THE AID BYTE
*        AFTER THE TGET ASIS REMOVE THE SBA'S FROM THE OUTPUT
         CLI   0(R3),X'F3'             PFK3 (END) PRESSED
         BE    END                     YES: TERMINATE RPF
         CLI   0(R3),X'C3'             PFK15 (END) PRESSED
         BE    END                     YES: TERMINATE RPF
         XR    R2,R2                    INIT OUTPUT LENGTH
         LR    R4,R1                   SAVE INPUT LENGTH
         SH    R4,=H'3'                SKIP AID AND CURSOR ADDRESS
         C     R4,F0000                REGISTER ZERO
         BNH   CONV099                 NOT HIGH: END OF ROUTINE
         LA    R3,3(R3)
         LA    R5,BUFFER               OUTPUT ADDRESS
*        INPUT SCREEN IS POINTED TO BY R3
*        OUTPUT SCREEN IS POINTED TO BY R5
*        THE NEXT SECTION WILL REMOVE ALL THE SBA'S
CONV001  CLI   0(R3),X'11'             SET BUFFER ADDRESS ?
         BE    CONV003                 YES: SKIP NEXT 3 BYTES INPUT
CONV002  MVC   0(1,R5),0(R3)           MOVE INPUT BYTE
         LA    R3,1(R3)                NEXT BYTE INPUT
         LA    R2,1(R2)                COUNT OUTPUT BYTES
         LA    R5,1(R5)                NEXT BYTE OUTPUT
         BCT   R4,CONV001              TEST NEXT BYTE
         B     CONV099                 END OF ROUTINE
CONV003  LA    R3,3(R3)                SKIP 3 BYTES INPUT
         BCTR  R4,0                    MINUS 1 BCT
         BCTR  R4,0                    MINUS 1 BCT
         C     R4,F0000                REGISTER ZERO ?
         BNH   CONV099                 YES: TERMINATE CONVERSION
         BCT   R4,CONV001              TEST NEXT BYTE
CONV099  LR    R1,R2                   OUTPUT LENGTH IN REGISTER 1
         LTR   R1,R1                   NOTHING RECEIVED ?
         BZ    PUT1
         CLI   BUFFER,X'6E'            REVIEW CODE IN AREA ?
         BE    PUT1                    REVIEW SCREEN
         MVI   MSG1,C'-'               CLEAR MESSAGE
         MVC   MSG1+1(21),MSG1         CLEAR MESSAGE
         OC    BUFFER,BLANKS           XLATE TO UPPERCASE
         B     FUNC0                   SELECT FUNCTION
ERR1     MVC   MSG2(L'ERR1TXT),ERR1TXT
         TM    INFCODE2,$OPTION        OPTION WAS SELECTED IN MAIN
         BO    ERR1A                   NO READ THE SCREEN
         TPUT  SCR2TXT,SCR2LEN,FULLSCR
         B     GET1                    BRANCH
ERR1A    DS    0H
         MVC   MSG1(L'ERR1TXT),ERR1TXT MOVE ERROR MESSAGE
         NI    INFCODE2,255-$OPTION-$RETURN
         B     PUT1
ERR2     MVC   MSG2(L'ERR2TXT),ERR2TXT
         TM    INFCODE2,$OPTION        OPTION WAS SELECTED IN MAIN
         BO    ERR2A                   NO READ THE SCREEN
         TPUT  SCR2TXT,SCR2LEN,FULLSCR
         B     GET1                    BRANCH
ERR2A    DS    0H
         MVC   MSG1(L'ERR2TXT),ERR2TXT MOVE ERROR MESSAGE
         NI    INFCODE2,255-$OPTION-$RETURN
         B     PUT1
FUNC0    CLI   BUFFER,C'0'             RESERVED
         BNE   FUNC1                   NO: TEST NEXT FUNCTION
         B     ERR2                    GIVE MESSAGE
FUNC1    CLI   BUFFER,C'1'             PDS MAINTENANCE ?
         BNE   FUNC2                   NO: TEST NEXT FUNCTION
         OI    INFCODE4,$DATAU         RPFDATAL acts as RPFDATAU
         L     R15,EPDATAL             LOAD ADDRESS RPFDATAL
         ST    R11,PARMLIST            ADDRESS COMMAREA INTO PARMLIST
         LA    R1,PARMLIST             ADDRESS PARMLIST
         BALR  R14,R15                 BRANCH TO RPFDATAU
         NI    INFCODE4,255-$DATAU     Flag off
         CLC   RTNCODE,F0000           ALLOC SUCCESSFUL ?
         BE    FUNC1U                  GOTO RPFPDS
         CLC   RTNCODE,F0012           No member specified ?
         BE    FUNC1U                  GOTO RPFPDS
         CLC   RTNCODE,F0032           MEMBER NOT FOUND ?
         BE    FUNC1U                  GOTO RPFPDS
         CLC   RTNCODE,F0020           LOADLIB ALLOCATED ?
         BE    FUNC1U                  GOTO RPFPDS
         CLC   RTNCODE,F0008           PFK03/PFK15 entered in RPFDATAL?
         BE    FUNC1V                  YES: BRANCH
         MVC   MSG1,ERR3TXT            MESSAGE INTO SCREEN
         B     FUNC1V                  GOTO MENU
FUNC1U   DS    0H
         LINK  EP=RPFPDS,PARAM=((11)),VL=1
         MVC   CMDAREA,BLANKS          Blank message area
         TM    INFCODE2,$RETURN        Return indicator set?
         BO    PUT1                    Yes: exit at once (Via PUT1)
         TM    INFCODE2,$OPTION        '3.1' selected?
         BNO   FUNC1                   No: branch
         OI    INFCODE2,$RETURN        Set return indicator
         B     FUNC1                   Branch to allocation menu
FUNC1V   DS    0H
         TM    INFCODE2,$RETURN        Return indicator set?
         BO    PUT1                    Yes: exit at once (Via PUT1)
         TM    INFCODE2,$OPTION        '3.1' selected?
         BNO   PUT1                    No: branch
         OI    INFCODE2,$RETURN        Set return indicator
         B     PUT1                    Exit (via PUT1)
FUNC2    CLI   BUFFER,C'2'             Create/Delete dataset ?
         BNE   FUNC3                   NO: TEST NEXT FUNCTION
         L     R15,EPALLOC             RPFALLOC ROUTINE
         CALL  (15),((11))
         TM    INFCODE2,$OPTION        OPTION ALREADY SEL. IN MAIN ?
         BNO   PUT1                    NO BRANCH
         OI    INFCODE2,$RETURN        Set return indicator
         B     PUT1                    And branch
FUNC3    CLI   BUFFER,C'3'             Move/Copy?
         BNE   FUNC4                   NO: TEST NEXT FUNCTION
         LINK  EP=RPFMVCPY,PARAM=((11)),VL=1 LINK TO MODULE
         TM    INFCODE2,$OPTION        OPTION ALREADY SEL. IN MAIN ?
         BNO   PUT1                    NO BRANCH
         OI    INFCODE2,$RETURN        Set return indicator
         B     PUT1                    And branch
FUNC4    CLI   BUFFER,C'4'             VTOC Manipulation ?
         BNE   FUNC5                   NO: TEST NEXT FUNCTION
         LINK  EP=RPFVTOC,PARAM=((11)),VL=1 LINK TO MODULE
         TM    INFCODE2,$OPTION        OPTION ALREADY SEL. IN MAIN ?
         BNO   PUT1                    NO BRANCH
         OI    INFCODE2,$RETURN        Set return indicator
         B     PUT1                    And branch
FUNC5    CLI   BUFFER,C'5'             Librarian maintenance?
         BNE   FUNC6                   NO: TEST NEXT FUNCTION
         LINK  EP=RPFLIB,PARAM=((11)),VL=1
         TM    INFCODE2,$OPTION        OPTION ALREADY SEL. IN MAIN ?
         BNO   PUT1                    NO BRANCH
         OI    INFCODE2,$RETURN        Set return indicator
         B     PUT1                    And branch
FUNC6    CLI   BUFFER,C'6'             OUTPUT PROCESSOR?
         BNE   FUNC7                   NO: TEST NEXT FUNCTION
         LINK  EP=RPFOUT,PARAM=((11)),VL=1 LINK TO MODULE
         TM    INFCODE2,$OPTION        OPTION ALREADY SEL. IN MAIN ?
         BNO   PUT1                    NO BRANCH
         OI    INFCODE2,$RETURN        Set return indicator
         B     PUT1                    And branch
FUNC7    CLI   BUFFER,C'7'             RESEVED ?
         BNE   FUNC8                   NO: TEST NEXT FUNCTION
         BLDL  0,IMON                  Try to find IMON
         LTR   R15,R15                 Found?
         BZ    FUNC7A                  Yes: branch
         MVC   MSG1(L'ERR4TXT),ERR4TXT MOVE ERROR MESSAGE
         NI    INFCODE2,255-$OPTION-$RETURN
         B     PUT1
FUNC7A   DS    0H
         LINK  EP=IM,PARAM=NULL2,VL=1  Greg Price' IMON
         STFSMODE ON
         TM    INFCODE2,$OPTION        OPTION ALREADY SEL. IN MAIN ?
         BNO   PUT1                    NO BRANCH
         OI    INFCODE2,$RETURN        Set return indicator
         B     PUT1                    And branch
NULL2    DC    H'0'
FUNC8    CLI   BUFFER,C'8'             RESERVED ?
         BNE   FUNC9                   NO: TEST NEXT FUNCTION
         B     ERR2                    GIVE MESSAGE
FUNC9    CLI   BUFFER,C'9'             RESERVED ?
         BNE   FUNCX                   NO: TEST NEXT FUNCTION
         B     ERR2                    GIVE MESSAGE
FUNCX    CLI   BUFFER,C'X'             END SELECTED ?
         BNE   FUNC#                   No: test on =n or =n.n      @rp1
         B     END                     Yes: exit and return        @rp1
FUNC#    CLI   BUFFER,C'='             '=' selected ?              @rp1
         BNE   FUNCQ                   No: test on question mark   @rp1
         MVC   CMAINOPT,BUFFER+1       Move option after '='       @rp1
         OI    INFCODE2,$RETURN        Set return indicator        @rp1
         B     END                     Exit                        @rp1
FUNCQ    DS    0H                                                  @rp1
         CLI   BUFFER,C'?'             RESET SCREEN ?
         BE    PUT1                    UTIL MENU ON SCREEN
         B     ERR1                    GIVE ERROR MESSAGE
END      L     R13,4(R13)              LOAD CALLERS SAVEAREA
         RETURN (14,12),RC=0           RETURN TO RPFMAIN
         TITLE 'SCREEN FORMATS'
SCR1TXT  DC    X'27F5C21140401DF8' WRITE ERASE / R01,C00
SCR1LNE  DC    CL79'------------------------------ RPF UTILITY MENU ---C
               ----------------------------'
         ORG   SCR1LNE+57
MSG1     DS    CL22
         ORG   ,
         DC    X'11C150',X'1DF8',C'Option  ===>',X'1DC113'         @rp1
         DC    C'       ',X'1DF0'                                  @rp1
         DC    X'11C35D',AL3(TURQ),C'Userid  - '    R03,C62
SCR1UID  DS    CL7
         DC    X'11C3F3',AL3(WHITE),C'0  '
         DC    AL3(TURQ)
         DC    C'Reserved    - '
         DC    AL3(GREEN)
         DC    C'For future use'
         DC    X'11C5C3',AL3(WHITE),C'1  '
         DC    AL3(TURQ)
         DC    C'PDS         - '
         DC    AL3(GREEN)
         DC    C'Perform PDS maintenance'
         DC    X'11C6D3',AL3(WHITE),C'2  '
         DC    AL3(TURQ)
         DC    C'Data set    - '
         DC    AL3(GREEN)
         DC    C'Create or Delete data sets'
         DC    X'11C7E3',AL3(WHITE),C'3  '
         DC    AL3(TURQ)
         DC    C'Move/Copy   - '                                   @rp2
         DC    AL3(GREEN)
         DC    C'Move or copy members'                             @rp2
         DC    X'11C8F3',AL3(WHITE),C'4  '
         DC    AL3(TURQ)
         DC    C'Dataset list- '
         DC    AL3(GREEN)
         DC    C'Perform VTOC and catalog functions'
         DC    X'114AC3',AL3(WHITE),C'5  '
         DC    AL3(TURQ)
         DC    C'LIBRARIAN   - '
         DC    AL3(GREEN)
         DC    C'Perform LIBRARIAN maintenance'
         DC    X'114BD3',AL3(WHITE),C'6  '
         DC    AL3(TURQ)
         DC    C'Output      - '
         DC    AL3(GREEN)
         DC    C'Invoke the output processor'
         DC    X'114CE3',AL3(WHITE),C'7  '
         DC    AL3(TURQ)
         DC    C'IMON        - '
         DC    AL3(GREEN)
         DC    C'Interactive monitor of Greg Price'
         DC    X'114DF3',AL3(WHITE),C'8  '
         DC    AL3(TURQ)
         DC    C'Reserved    - '
         DC    AL3(GREEN)
         DC    C'For future use'
         DC    X'114FC3',AL3(WHITE),C'9  '
         DC    AL3(TURQ)
         DC    C'Reserved    - '
         DC    AL3(GREEN)
         DC    C'For future use'
         DC    X'1150D3',AL3(WHITE),C'X  '
         DC    AL3(TURQ)
         DC    C'Exit        - '
         DC    AL3(GREEN)
         DC    C'Return to MAIN menu'
         DC    X'11D2F1',AL3(TURQ)      R16,C02
         DC    C'Hit ',AL3(WHITE),C'PF03/15 ',AL3(TURQ)
         DC    C'to return to the RPF main menu'
SCR1LEN  EQU   *-SCR1TXT
SCR2TXT  DC    X'27F1C21140401DF8'
         DC    X'11407A'           R01,C59
MSG2     DC    CL22' '
         DC    X'11C150',X'1DF8',C'Option  ===>',X'1DC113'         @rp1
         DC    C'       ',X'1DF0'                                  @rp1
SCR2LEN  EQU   *-SCR2TXT
ERR1TXT  DC    CL22'--------Invalid option'
ERR2TXT  DC    CL22'--------For future use'
ERR3TXT  DC    CL22'Unexpected return code'
ERR4TXT  DC    CL22'-Module IMON not found'
ERRATXT  DC    CL22'--------------Rc= XXXX'
*
IMON     DS    0F                      ALIGN ON FULLWORD
         DC    AL2(1)                  ONE ENTRY
         DC    AL2(14)                 LENGTH OF DATA
         DC    CL8'IM'                 NAME OF Greg Price's IMON
         DC    XL6'00'                 TTRKZC
*
PARMLIST DC    F'0'
NULL     DC    80X'00'
BUFFER   DC    CL7' '                                              @rp1
F0000    DC    F'0'
F0004    DC    F'4'
F0008    DC    F'8'
F0012    DC    F'12'
F0020    DC    F'20'
F0032    DC    F'32'
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         TITLE 'RPFCOMM DSECT'
COMMAREA RPFCOMM
         END
