         TITLE '                   J C L   S Y N T A X - C H E C K E R C
                 H U L P R O U T I N E S'
         SPACE 5
*///////////////////////////////////////////////////////VERSIE 1.0////
*/                                                                   /
*/       FUNCTIE : DEZE ROUTINES WORDEN GEBRUIKT BIJ EEN SYN-        /
*/                 TAX CONTROLE VAN EEN JCL-STREAM.                  /
*/                                                                   /
*/                                                                   /
*/       DOOR    : A.J.A.LEEMREIZE                                   /
*/       DATUM   : 22-04-1983                                        /
*/                                                                   /
*/////////////////////////////////////////////////////////////////////
         EJECT
         PRINT NOGEN
*/////////////////////////////////////////////////////////////////////
*/                                                                   /
*/       REGISTER EQUATES                                            /
*/                                                                   /
*/////////////////////////////////////////////////////////////////////
         SPACE 3
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         EJECT
*/////////////////////////////////////////////////////////////////////
*/                                                                   /
*/       TEST BALANCE OF PARENTHESIS AND APOSTROPHES                 /
*/                                                                   /
*/////////////////////////////////////////////////////////////////////
         SPACE 3
BALANCE  CSECT
         USING BALANCE,R15             SET BASE ADRESSING
         STM   R14,R12,12(R13)         SAVE REGISTERS
         B     BAL010
BAL000   DC    18F'0'                  AREA OM REGISTERS TE SAVEN
BAL010   EQU   *
         LA    R14,BAL000              POINTER NAAR NIEUWE SAVE AREA
         ST    R13,4(R14)              SAVE POINTER NAAR OUDE SAVE AREA
         ST    R14,8(R13)              SAVE POINTER NAAR NIEUWE AREA
         LR    R13,R14                 POINTER NAAR HUIDIGE SAVE AREA
         LR    R2,R15                  VUL BASE REGISTER 1
         DROP  R15
         USING BALANCE,R2
         L     R3,VBALAN
         USING COMMON,R3               COMMON AREA
         SPACE 3
BAL020   EQU   *
         CLI   0(R11),C'('             ( AANWEZIG ?
         BNE   BAL030                  NEE
         AP    BRFLAG,EEN              BRFLAG + 1
         B     BAL080
BAL030   EQU   *
         CLI   0(R11),C')'             ) AANWEZIG ?
         BNE   BAL040                  NEE
         SP    BRFLAG,EEN              BRFLAG - 1
         B     BAL080
BAL040   EQU   *
         CLI   0(R11),C''''            ' AANWEZIG
         BNE   BAL070                  NEE.
BAL050   EQU   *
         LA    R11,1(R11)              VERHOOG POINTER
         C     R11,ENDLINE             EINDE REGEL
         BE    BAL100                  JA.
         CLC   0(2,R11),=C''''''       '' AANWEZIG ?
         BNE   BAL060                  NEE
         LA    R11,1(R11)              VERHOOG POINTER
         C     R11,ENDLINE             EINDE REGEL ?
         BE    BAL100                  JA. UNBALANCED APOSTROPHES
         B     BAL050
BAL060   EQU   *
         CLI   0(R11),C''''            ' AANWEZIG
         BNE   BAL050                  NEE.
         B     BAL080                  JA.
BAL070   EQU   *
         CLI   0(R11),C' '             EINDE STATEMENT ?
         BE    BAL090                  JA.
         CLI   0(R11),C','             DELIMITER ?
         BNE   BAL080                  NEE.
         CALL  DELIMIT                 VERWERK DELIMITER
         B     *+4(R15)                RETURNCODES
         B     BAL020                  OK
         B     BAL090                  EINDE
BAL080   EQU   *
         LA    R11,1(R11)              VERHOOG POINTER
         C     R11,ENDLINE             EINDE REGEL
         BNE   BAL020                  NEE.
BAL090   EQU   *
         CP    BRFLAG,NUL              HAAKJES IN BALANS ?
         BE    BALOK                   JA
         LA    R6,ERRPAREN             ERROR MESSAGE
         CALL  ERRMESS
         B     BALERR
BAL100   EQU   *
         LA    R6,ERRAPOS              ERROR MESSAGE
         CALL  ERRMESS
         B     BALERR
BALOK    EQU   *
         L     R13,4(R13)              GA TERUG NAAR OS
         LM    R14,R12,12(R13)
         LA    R15,0                   OK
         BR    R14
BALERR   EQU   *
         ZAP   BRFLAG,NUL              RESET FLAG
         L     R13,4(R13)              GA TERUG NAAR OS
         LM    R14,R9,12(R13)
         L     R12,68(R13)
         LA    R15,4                   ERROR
         BR    R14
         SPACE 2
VBALAN   DC    V(COMMON)
         LTORG
         EJECT
         EJECT
*/////////////////////////////////////////////////////////////////////
*/                                                                   /
*/       TEST DCB ATTIBUTES                                          /
*/                                                                   /
*/////////////////////////////////////////////////////////////////////
         SPACE 3
DCBATTR  CSECT
         USING DCBATTR,R15             SET BASE ADRESSING
         STM   R14,R12,12(R13)         SAVE REGISTERS
         B     DCBAT010
DCBAT000 DC    18F'0'                  AREA OM REGISTERS TE SAVEN
DCBAT010 EQU   *
         LA    R14,DCBAT000            POINTER NAAR NIEUWE SAVE AREA
         ST    R13,4(R14)              SAVE POINTER NAAR OUDE SAVE AREA
         ST    R14,8(R13)              SAVE POINTER NAAR NIEUWE AREA
         LR    R13,R14                 POINTER NAAR HUIDIGE SAVE AREA
         LR    R2,R15                  VUL BASE REGISTER 1
         DROP  R15
         USING DCBATTR,R2
         L     R3,VDCBA
         USING COMMON,R3               COMMON AREA
         SPACE 3
DCBA000  EQU   *
         CLC   0(6,R11),=C'BFALN='     BFALN= ?
         BNE   DCBA010                 NEE.
         MVI   DCBBFALN,X'FF'          SET FLAG
         LA    R11,6(R11)              VERHOOG POINTER
         B     DCBANXT                 VOLGENDE ATTRIBUTE
DCBA010  EQU   *
         CLC   0(6,R11),=C'BFTEK='     BFTEK= ?
         BNE   DCBA020                 NEE.
         MVI   DCBBFTEK,X'FF'          SET FLAG
         LA    R11,6(R11)              VERHOOG POINTER
         B     DCBANXT                 VOLGENDE ATTRIBUTE
DCBA020  EQU   *
         CLC   0(8,R11),=C'BLKSIZE='   BLKSIZE= ?
         BNE   DCBA030                 NEE.
         MVI   DCBBLKSZ,X'FF'          SET FLAG
         LA    R11,8(R11)              VERHOOG POINTER
         B     DCBANXT                 VOLGENDE ATTRIBUTE
DCBA030  EQU   *
         CLC   0(6,R11),=C'BUFIN='     BUFIN= ?
         BNE   DCBA040                 NEE.
         MVI   DCBBUFIN,X'FF'          SET FLAG
         LA    R11,6(R11)              VERHOOG POINTER
         B     DCBANXT                 VOLGENDE ATTRIBUTE
DCBA040  EQU   *
         CLC   0(5,R11),=C'BUFL='      BUFL= ?
         BNE   DCBA050                 NEE.
         MVI   DCBBUFL,X'FF'           SET FLAG
         LA    R11,5(R11)              VERHOOG POINTER
         B     DCBANXT                 VOLGENDE ATTRIBUTE
DCBA050  EQU   *
         CLC   0(7,R11),=C'BUFMAX='    BUFMAX= ?
         BNE   DCBA060                 NEE.
         MVI   DCBBUFMX,X'FF'          SET FLAG
         LA    R11,7(R11)              VERHOOG POINTER
         B     DCBANXT                 VOLGENDE ATTRIBUTE
DCBA060  EQU   *
         CLC   0(6,R11),=C'BUFNO='     BUFNO= ?
         BNE   DCBA070                 NEE.
         MVI   DCBBUFNO,X'FF'          SET FLAG
         LA    R11,6(R11)              VERHOOG POINTER
         B     DCBANXT                 VOLGENDE ATTRIBUTE
DCBA070  EQU   *
         CLC   0(7,R11),=C'BUFOFF='    BUFOFF= ?
         BNE   DCBA080                 NEE.
         MVI   DCBBUFOF,X'FF'          SET FLAG
         LA    R11,7(R11)              VERHOOG POINTER
         B     DCBANXT                 VOLGENDE ATTRIBUTE
DCBA080  EQU   *
         CLC   0(7,R11),=C'BUFOUT='    BUFOUT= ?
         BNE   DCBA090                 NEE.
         MVI   DCBBUFUT,X'FF'          SET FLAG
         LA    R11,7(R11)              VERHOOG POINTER
         B     DCBANXT                 VOLGENDE ATTRIBUTE
DCBA090  EQU   *
         CLC   0(8,R11),=C'BUFSIZE='   BUFSIZE= ?
         BNE   DCBA100                 NEE.
         MVI   DCBBUFSZ,X'FF'          SET FLAG
         LA    R11,8(R11)              VERHOOG POINTER
         B     DCBANXT                 VOLGENDE ATTRIBUTE
DCBA100  EQU   *
         CLC   0(5,R11),=C'CODE='      CODE= ?
         BNE   DCBA110                 NEE.
         MVI   DCBCODE,X'FF'           SET FLAG
         LA    R11,5(R11)              VERHOOG POINTER
         B     DCBANXT                 VOLGENDE ATTRIBUTE
DCBA110  EQU   *
         CLC   0(5,R11),=C'CPRI='      CPRI= ?
         BNE   DCBA120                 NEE.
         MVI   DCBCPRI,X'FF'           SET FLAG
         LA    R11,5(R11)              VERHOOG POINTER
         B     DCBANXT                 NEXT ATTRIBUTE
DCBA120  EQU   *
         CLC   0(7,R11),=C'CYLOFL='    CYLOFL= ?
         BNE   DCBA130                 NEE.
         MVI   DCBCYLOF,X'FF'          SET FLAG
         LA    R11,7(R11)              VERHOOG POINTER
         B     DCBANXT                 VOLGENDE ATTRIBUTE
DCBA130  EQU   *
         CLC   0(4,R11),=C'DEN='       DEN= ?
         BNE   DCBA140                 NEE.
         MVI   DCBDEN,X'FF'            SET FLAG
         LA    R11,4(R11)              VERHOOG POINTER
         B     DCBANXT                 VOLGENDE ATTRIBUTE
DCBA140  EQU   *
         CLC   0(7,R11),=C'DIAGNS='    DIAGNS= ?
         BNE   DCBA150                 NEE.
         MVI   DCBDIAGN,X'FF'          SET FLAG
         LA    R11,7(R11)              VERHOOG POINTER
         B     DCBANXT                 VOLGENDE ATTRIBUTE
DCBA150  EQU   *
         CLC   0(6,R11),=C'DSORG='     DSORG= ?
         BNE   DCBA160                 NEE.
         MVI   DCBDSORG,X'FF'          SET FLAG
         LA    R11,6(R11)              VERHOOG POINTER
         B     DCBANXT                 VOLGENDE ATTRIBUTE
DCBA160  EQU   *
         CLC   0(6,R11),=C'EROPT='     EROPT= ?
         BNE   DCBA170                 NEE.
         MVI   DCBEROPT,X'FF'          SET FLAG
         LA    R11,6(R11)              VERHOOG POINTER
         B     DCBANXT                 VOLGENDE ATTRIBUTE
DCBA170  EQU   *
         CLC   0(5,R11),=C'FRID='      FRID= ?
         BNE   DCBA180                 NEE.
         MVI   DCBFRID,X'FF'           SET FLAG
         LA    R11,5(R11)              VERHOOG POINTER
         B     DCBANXT                 VOLGENDE ATTRIBUTE
DCBA180  EQU   *
         CLC   0(5,R11),=C'FUNC='      FUNC= ?
         BNE   DCBA190                 NEE.
         MVI   DCBFUNC,X'FF'           SET FLAG
         LA    R11,5(R11)              VERHOOG POINTER
         B     DCBANXT                 VOLGENDE ATTRIBUTE
DCBA190  EQU   *
         CLC   0(5,R11),=C'GNCP='      GNCP= ?
         BNE   DCBA200                 NEE.
         MVI   DCBGNCP,X'FF'           SET FLAG
         LA    R11,5(R11)              VERHOOG POINTER
         B     DCBANXT                 VOLGENDE ATTRIBUTE
DCBA200  EQU   *
         CLC   0(6,R11),=C'INTVL='     INTVL= ?
         BNE   DCBA210                 NEE.
         MVI   DCBINTVL,X'FF'          SET FLAG
         LA    R11,6(R11)              VERHOOG POINTER
         B     DCBANXT                 VOLGENDE ATTRIBUTE
DCBA210  EQU   *
         CLC   0(7,R11),=C'KEYLEN='    KEYLEN= ?
         BNE   DCBA220                 NEE.
         MVI   DCBKEYLN,X'FF'          SET FLAG
         LA    R11,7(R11)              VERHOOG POINTER
         B     DCBANXT                 VOLGENDE ATTRIBUTE
DCBA220  EQU   *
         CLC   0(6,R11),=C'LIMCT='     LIMCT= ?
         BNE   DCBA230                 NEE.
         MVI   DCBLIMCT,X'FF'          SET FLAG
         LA    R11,6(R11)              VERHOOG POINTER
         B     DCBANXT                 VOLGENDE ATTRIBUTE
DCBA230  EQU   *
         CLC   0(6,R11),=C'LRECL='     LRECL= ?
         BNE   DCBA240                 NEE.
         MVI   DCBLRECL,X'FF'          SET FLAG
         LA    R11,6(R11)              VERHOOG POINTER
         B     DCBANXT                 VOLGENDE ATTRIBUTE
DCBA240  EQU   *
         CLC   0(5,R11),=C'MODE='      MODE= ?
         BNE   DCBA250                 NEE.
         MVI   DCBMODE,X'FF'           SET FLAG
         LA    R11,5(R11)              VERHOOG POINTER
         B     DCBANXT                 VOLGENDE ATTRIBUTE
DCBA250  EQU   *
         CLC   0(4,R11),=C'NCP='       NCP= ?
         BNE   DCBA260                 NEE.
         MVI   DCBNCP,X'FF'            SET FLAG
         LA    R11,4(R11)              VERHOOG POINTER
         B     DCBANXT                 VOLGENDE ATTRIBUTE
DCBA260  EQU   *
         CLC   0(4,R11),=C'NTM='       NTM= ?
         BNE   DCBA270                 NEE.
         MVI   DCBNTM,X'FF'            SET FLAG
         LA    R11,4(R11)              VERHOOG POINTER
         B     DCBANXT                 VOLGENDE ATTRIBUTE
DCBA270  EQU   *
         CLC   0(6,R11),=C'OPTCD='     OPTCD= ?
         BNE   DCBA280                 NEE.
         MVI   DCBOPTCD,X'FF'          SET FLAG
         LA    R11,6(R11)              VERHOOG POINTER
         B     DCBANXT                 VOLGENDE ATTRIBUTE
DCBA280  EQU   *
         CLC   0(4,R11),=C'PCI='       PCI= ?
         BNE   DCBA290                 NEE.
         MVI   DCBPCI,X'FF'            SET FLAG
         LA    R11,4(R11)              VERHOOG POINTER
         B     DCBANXT                 VOLGENDE ATTRIBUTE
DCBA290  EQU   *
         CLC   0(6,R11),=C'PRTSP='     PRTSP= ?
         BNE   DCBA300                 NEE.
         MVI   DCBPRTSP,X'FF'          SET FLAG
         LA    R11,6(R11)              VERHOOG POINTER
         B     DCBANXT                 VOLGENDE ATTRIBUTE
DCBA300  EQU   *
         CLC   0(6,R11),=C'RECFM='     RECFM= ?
         BNE   DCBA310                 NEE.
         MVI   DCBRECFM,X'FF'          SET FLAG
         LA    R11,6(R11)              VERHOOG POINTER
         B     DCBANXT                 VOLGENDE ATTRIBUTE
DCBA310  EQU   *
         CLC   0(8,R11),=C'RESERVE='   RESERVE= ?
         BNE   DCBA320                 NEE.
         MVI   DCBRESER,X'FF'          SET FLAG
         LA    R11,8(R11)              VERHOOG POINTER
         B     DCBANXT                 VOLGENDE ATTRIBUTE
DCBA320  EQU   *
         CLC   0(4,R11),=C'RKP='       RKP= ?
         BNE   DCBA330                 NEE.
         MVI   DCBRKP,X'FF'            SET FLAG
         LA    R11,4(R11)              VERHOOG POINTER
         B     DCBANXT                 VOLGENDE ATTRIBUTE
DCBA330  EQU   *
         CLC   0(6,R11),=C'STACK='     STACK= ?
         BNE   DCBA340                 NEE.
         MVI   DCBSTACK,X'FF'          SET FLAG
         LA    R11,6(R11)              VERHOOG POINTER
         B     DCBANXT                 VOLGENDE ATTRIBUTE
DCBA340  EQU   *
         CLC   0(7,R11),=C'THRESH='    THRESH= ?
         BNE   DCBA350                 NEE.
         MVI   DCBTHRES,X'FF'          SET FLAG
         LA    R11,7(R11)              VERHOOG POINTER
         B     DCBANXT                 VOLGENDE ATTRIBUTE
DCBA350  EQU   *
         CLC   0(6,R11),=C'TRTCH='     TRTCH= ?
         BNE   DCBAERR                 NEE.
         MVI   DCBTRTCH,X'FF'          SET FLAG
         LA    R11,6(R11)              VERHOOG POINTER
         B     DCBANXT                 VOLGENDE ATTRIBUTE
DCBANXT  EQU   *
         CP    BRFLAG,NUL              ( AANWEZIG ?
         BE    DCBANXT2                NEE.
         CLI   0(R11),C')'             EINDE ATTRIBUTES ?
         BE    DCBAOK                  JA
         CLI   0(R11),C','             DELIMITER ATTRIBUTES
         BNE   DCBANXT1                NEE
         SUBR  DELIMIT                 VERWERK DELIMITER
         B     *+4(R15)                RETURNCODES
         B     DCBA000                 VOLGENDE ATTRIBUTE
         B     DCBAERR                 ERROR
DCBANXT1 EQU   *
         CLI   0(R11),C' '             EINDE REGEL ?
         BE    DCBAERR                 JA.
         LA    R11,1(R11)              VERHOOG POINTER
         B     DCBANXT
DCBANXT2 EQU   *
         CLI   0(R11),C' '             EINDE ATTRIBUTE
         BE    DCBAOK                  JA
         CLI   0(R11),C','             EINDE ATTRIBUTE
         BE    DCBAOK                  JA.
         LA    R11,1(R11)              VERHOOG POINTER
         B     DCBANXT
DCBAERR  EQU   *
         L     R13,4(R13)              GA TERUG NAAR OS
         LM    R14,R12,12(R13)
         LA    R15,4                   ERROR
         BR    R14                     RETURN
DCBAOK   EQU   *
         L     R13,4(R13)              GA TERUG NAAR OS
         LM    R14,R9,12(R13)
         L     R12,68(R13)
         LA    R15,0                   OK
         BR    R14
         SPACE 2
VDCBA    DC    V(COMMON)
         LTORG
         EJECT
*/////////////////////////////////////////////////////////////////////
*/                                                                   /
*/       VERWERK DELIMITER                                           /
*/                                                                   /
*/////////////////////////////////////////////////////////////////////
         SPACE 3
DELIMIT  CSECT
         USING DELIMIT,R15             SET BASE ADRESSING
         STM   R14,R12,12(R13)         SAVE REGISTERS
         B     DEL010
DEL000   DC    18F'0'                  AREA OM REGISTERS TE SAVEN
DEL010   EQU   *
         LA    R14,DEL000              POINTER NAAR NIEUWE SAVE AREA
         ST    R13,4(R14)              SAVE POINTER NAAR OUDE SAVE AREA
         ST    R14,8(R13)              SAVE POINTER NAAR NIEUWE AREA
         LR    R13,R14                 POINTER NAAR HUIDIGE SAVE AREA
         LR    R2,R15                  VUL BASE REGISTER 1
         DROP  R15
         USING DELIMIT,R2
         L     R3,VDEL
         USING COMMON,R3               COMMON AREA
         SPACE 3
         CLI   0(R11),C','             , AANWEZIG ?
         BNE   DELERR08                PROGRAMMA FOUT
         LA    R11,1(R11)              VERHOOG POINTER
         C     R11,ENDLINE             EINDE REGEL ?
         BE    DEL020                  JA.
         CLI   0(R11),C' '             EINDE REGEL
         BNE   DELOK                   NEE
DEL020   EQU   *
         USING RPFDATA,R12
         LA    R10,NEXTENT(R10)        VOLGEND RECORD
         C     R10,LASTREC             EINDE WORKSPACE
         DROP  R12
         BH    DELERR04                YES.
         LR    R11,R10                 CURRENT POINTER
         LA    R11,8(R11)              POINT TO DATA PORTION
         ST    R11,STARTLNE            BEGIN LINE
         LA    R6,71                   MAXIMUM LENGTH
         AR    R6,R11                  POINTER TO COLUMN 72
         ST    R6,ENDLINE              BEWAAR POINTER
         CLC   0(3,R11),=C'//*'        COMMENTAAR
         BE    DEL020                  JA
         CLC   0(2,R11),=C'//'         BEGINT MET //
         BNE   DELERR04                NEE.
         LA    R11,2(R11)              VERHOOG POINTER
         SUBR  SKIPSPC                 SKIP SPATIES
         B     *+4(R15)                RETURNCODES
         B     DEL030                  OK.
         B     DELERR04                GEEN SPATIES. ERROR.
         B     DELERR04                GEEN CONTINUATION
DEL030   EQU   *
         C     R1,=F'13'               MAXIMAAL 13 SPATIES
         BH    DELERR04                ERROR
         CLC   0(3,R11),=C'JOB'        JOBKAART ?
         BE    DELERR04                JA.
         CLC   0(4,R11),=C'EXEC'       EXECKAART ?
         BE    DELERR04                JA.
         CLC   0(2,R11),=C'DD'         DDKAART ?
         BE    DELERR04                JA.
         CLC   0(4,R11),=C'PROC'       PROCKAART ?
         BE    DELERR04                JA.
         CLC   0(4,R11),=C'PEND'       PENDKAART ?
         BE    DELERR04                JA.
DELOK    EQU   *
         L     R13,4(R13)              GA TERUG NAAR OS
         LM    R14,R9,12(R13)
         L     R12,68(R13)
         LA    R15,0                   RETURNCODE 00
         BR    R14                     RETURN
DELERR04 EQU   *
         LA    R6,ERRNOCON             NO CONTINUATION RECEIVED !
         SUBR  ERRMESS                 ERROR MESSAGE
         L     R13,4(R13)              GA TERUG NAAR OS
         LM    R14,R12,12(R13)
         LA    R15,4                   ERROR
         BR    R14
DELERR08 EQU   *
         LA    R6,ERR999               PROGRAMMA FOUT !
         SUBR  ERRMESS                 ERROR MESSAGE
         L     R13,4(R13)              GA TERUG NAAR OS
         LM    R14,R12,12(R13)
         LA    R15,4                   ERROR
         BR    R14
         SPACE 2
VDEL     DC    V(COMMON)
         LTORG
         EJECT
*/////////////////////////////////////////////////////////////////////
*/                                                                   /
*/       TEST OP EEN DSNAME ?                                        /
*/                                                                   /
*/////////////////////////////////////////////////////////////////////
         SPACE 3
DSNTEST  CSECT
         USING DSNTEST,R15             SET BASE ADRESSING
         STM   R14,R12,12(R13)         SAVE REGISTERS
         B     DSNT010
DSNT000  DC    18F'0'                  AREA OM REGISTERS TE SAVEN
DSNT010  EQU   *
         LA    R14,DSNT000             POINTER NAAR NIEUWE SAVE AREA
         ST    R13,4(R14)              SAVE POINTER NAAR OUDE SAVE AREA
         ST    R14,8(R13)              SAVE POINTER NAAR NIEUWE AREA
         LR    R13,R14                 POINTER NAAR HUIDIGE SAVE AREA
         LR    R2,R15                  VUL BASE REGISTER 1
         DROP  R15
         USING DSNTEST,R2
         L     R3,VDSNT
         USING COMMON,R3               COMMON AREA
         SPACE 3
         LR    R1,R11                  SAVE POINTER
         CLI   0(R11),C''''            BEGINT MET '
         BE    DSNT160                 JA
         XR    R7,R7                   LENGTE DSN := 0
DSNT012  EQU   *
         CLI   0(R11),C','             DELIMITER ?
         BE    DSNT014                 JA.
         CLI   0(R11),C' '             DELIMITER ?
         BE    DSNT014                 JA
         LA    R11,1(R11)              VERHOOG POINTER
         LA    R7,1(R7)                LENGTE + 1
         B     DSNT012                 VOLGEND CHARACTER
DSNT014  EQU   *
         C     R7,=F'44'               MAX. LENGTE IS 44
         BH    DSNTERR                 ERROR
         LR    R11,R1                  POINTER NAAR BEGIN
         CLC   0(2,R11),=C'&&&&'       TEMP DATASET ?
         BNE   DSNT014A                NEE
         LA    R11,2(R11)              POINTER
         B     DSNT070                 JA.
DSNT014A EQU   *
         CLI   0(R11),C'&&'            TEMP DATASET ?
         BNE   DSNT014B                JA.
         LA    R11,1(R11)              VERHOOG POINTER
         B     DSNT070
DSNT014B EQU   *
         CLC   0(2,R11),=C'*.'         REFERENCE NAAR DDNAME
         BE    DSNT130                 JA.
DSNT015  EQU   *
         SUBR  NAMES                   TEST OP NAAM
         B     *+4(R15)                RETURNCODES
         B     DSNT020                 OK
         B     DSNTERR                 ERROR
DSNT020  EQU   *
         CLI   0(R11),C'.'             NEXT QUALIFIER ?
         BNE   DSNT022                 NEE
         LA    R11,1(R11)              VERHOOG POINTER
         B     DSNT015
DSNT022  EQU   *
         CLI   0(R11),C'('             MEMBER, GENERATION OF AREA
         BNE   DSNTOK                  OK
         LA    R11,1(R11)              VERHOOG POINTER
         SUBR  NAMES                   TEST OP MEMBER
         B     *+4(R15)                RETURNCODES
         B     DSNT060                 TEST )
         CLI   0(R11),C'-'             GENERATIE ?
         BE    DSNT025                 JA
         CLI   0(R11),C'+'             GENERATIE ?
         BE    DSNT025                 JA
         CLI   0(R11),C'0'             GENERATIE ?
         BNE   DSNT030                 TEST OP AREA
         LA    R11,1(R11)              VERHOOG POINTER
         B     DSNT060                 TEST )
DSNT025  EQU   *
         LA    R11,1(R11)              VERHOOG POINTER
         SUBR  NUMBER                  TEST GETAL
         B     *+4(R15)                RETURNCODES
         B     DSNT060                 TEST )
         B     DSNTERR
DSNT030  EQU   *
         CLC   0(5,R11),=C'INDEX'      INDEX AREA
         BNE   DSNT040                 NEE
         LA    R11,5(R11)              VERHOOG POINTER
         B     DSNT060                 TEST )
DSNT040  EQU   *
         CLC   0(5,R11),=C'PRIME'      PRIME AREA
         BNE   DSNT050                 NEE
         LA    R11,5(R11)              VERHOOG POINTER
         B     DSNT060                 TEST )
DSNT050  EQU   *
         CLC   0(6,R11),=C'OVFLOW'     INDEX AREA
         BNE   DSNTERR                 NEE
         LA    R11,6(R11)              VERHOOG POINTER
DSNT060  EQU   *
         CLI   0(R11),C')'             ) AANWEZIG ?
         BNE   DSNTERR                 ERROR
         LA    R11,1(R11)              VERHOOG POINTER
         B     DSNTOK                  OK
DSNT070  EQU   *
         SUBR  NAMES                   TEST NAAM TEMPORARY DSN
         B     *+4(R15)                RETURNCODES
         B     DSNT080                 OK
         B     DSNTERR                 ERROR
DSNT080  EQU   *
         CLI   0(R11),C'('             TEST MEMBER EN AREA
         BNE   DSNTOK
         LA    R11,1(R11)              VERHOOG POINTER
         AP    BRFLAG,EEN              SET FLAG
         SUBR  NAMES                   TEST OP MEMBER
         B     *+4(R15)                RETURNCODES
         B     DSNT120                 TEST )
DSNT090  EQU   *
         CLC   0(5,R11),=C'INDEX'      INDEX AREA
         BNE   DSNT100                 NEE
         LA    R11,5(R11)              VERHOOG POINTER
         B     DSNT120                 TEST )
DSNT100  EQU   *
         CLC   0(5,R11),=C'PRIME'      PRIME AREA
         BNE   DSNT110                 NEE
         LA    R11,5(R11)              VERHOOG POINTER
         B     DSNT120                 TEST )
DSNT110  EQU   *
         CLC   0(6,R11),=C'OVFLOW'     INDEX AREA
         BNE   DSNTERR                 NEE
         LA    R11,6(R11)              VERHOOG POINTER
DSNT120  EQU   *
         CLI   0(R11),C')'             ) AANWEZIG ?
         BNE   DSNTERR                 ERROR
         LA    R11,1(R11)              VERHOOG POINTER
         SP    BRFLAG,EEN              RESET FLAG
         B     DSNTOK                  OK
DSNT130  EQU   *
         LA    R11,2(R11)              VERHOOG POINTER
         SUBR  NAMES                   NAAM
         B     *+4(R15)                RETURNCODES
         B     DSNT140                 OK
         B     DSNTERR                 GEEN NAAM
DSNT140  EQU   *
         CLI   0(R11),C'.'             SCHEIDINGSTEKEN
         BNE   DSNTOK                  OK.
         LA    R11,1(R11)              VERHOOG POINTER
         SUBR  NAMES                   NAAM
         B     *+4(R15)                RETURNCODES
         B     DSNT150                 OK
         B     DSNTERR                 GEEN NAAM
DSNT150  EQU   *
         CLI   0(R11),C'.'             SCHEIDINGSTEKEN
         BNE   DSNTOK                  OK.
         LA    R11,1(R11)              VERHOOG POINTER
         SUBR  NAMES                   NAAM
         B     *+4(R15)                RETURNCODES
         B     DSNTOK                  OK
         B     DSNTERR                 ERROR
DSNT160  EQU   *
         LA    R11,1(R11)              VERHOOG POINTER
         C     R11,ENDLINE             EINDE REGEL ?
         BE    DSNTERR                 ERROR
         CLC   0(2,R11),=C''''''       '' AANWEZIG ?
         BNE   DSNT170
         LA    R11,1(R11)              VERHOOG POINTER
         C     R11,ENDLINE             EINDE REGEL ?
         BE    DSNTERR                 ERROR
         B     DSNT160
DSNT170  EQU   *
         CLI   0(R11),C''''            ' AANWEZIG
         BNE   DSNT160                 NEE
         LA    R11,1(R11)              VERHOOG POINTER
         B     DSNTOK                  OK
DSNTOK   EQU   *
         L     R13,4(R13)              GA TERUG NAAR OS
         LM    R14,R0,12(R13)
         LM    R2,R9,28(R13)
         L     R12,68(R13)
         LA    R15,0                   RETURNCODE 00
         BR    R14                     RETURN
DSNTERR  EQU   *
         L     R13,4(R13)              GA TERUG NAAR OS
         LM    R14,R12,12(R13)
         LA    R15,4                   ERROR
         BR    R14
         SPACE 2
VDSNT    DC    V(COMMON)
         LTORG
         EJECT
*/////////////////////////////////////////////////////////////////////
*/                                                                   /
*/       TEST CONDITION CODE IN EXEC KAART                           /
*/                                                                   /
*/////////////////////////////////////////////////////////////////////
         SPACE 3
ECONDCDE CSECT
         USING ECONDCDE,R15            SET BASE ADRESSING
         STM   R14,R12,12(R13)         SAVE REGISTERS
         B     ECON010
ECON000  DC    18F'0'                  AREA OM REGISTERS TE SAVEN
ECON010  EQU   *
         LA    R14,ECON000             POINTER NAAR NIEUWE SAVE AREA
         ST    R13,4(R14)              SAVE POINTER NAAR OUDE SAVE AREA
         ST    R14,8(R13)              SAVE POINTER NAAR NIEUWE AREA
         LR    R13,R14                 POINTER NAAR HUIDIGE SAVE AREA
         LR    R2,R15                  VUL BASE REGISTER 1
         DROP  R15
         USING ECONDCDE,R2
         L     R3,VCOND
         USING COMMON,R3               COMMON AREA
         SPACE 3
         CLI   0(R11),C'('             BEGINT MET ( ?
         BNE   ECON090                 EVEN OF ONLY ?
         AP    BRFLAG,EEN              SET FLAG
         LA    R11,1(R11)              VERHOOG POINTER
         CLI   0(R11),C'('             MEER SUBPARAMETERS ?
         BNE   ECON020                 NEE.
         AP    BRFLAG,EEN              SET FLAG
         LA    R11,1(R11)              VERHOOG POINTER
ECON020  EQU   *
         CALL  NUMBER                  GETAL ?
         B     *+4(R15)                RETURNCODES
         B     ECON030                 OK.
         B     ECON090                 EVEN OF ONLY ?
ECON030  EQU   *
         C     R1,=F'0'                MOET  >= 0 ZIJN
         BL    ECONERR                 ERROR
         C     R1,=F'4095'             MOET  <= 4095 ZIJN
         BH    ECONERR                 ERROR
         CLI   0(R11),C','             , AANWEZIG ?
         BNE   ECONERR                 ERROR
         SUBR  DELIMIT                 VERWERK DELIMITER
         B     *+4(R15)                RETURNCODES
         B     ECON040                 OK
         B     ECONERR                 ERROR.
ECON040  EQU   *
         CLC   0(2,R11),=C'GT'         GT ?
         BE    ECON050                 JA.
         CLC   0(2,R11),=C'GE'         GE ?
         BE    ECON050                 JA.
         CLC   0(2,R11),=C'EQ'         EQ ?
         BE    ECON050                 JA.
         CLC   0(2,R11),=C'NE'         NE ?
         BE    ECON050                 JA.
         CLC   0(2,R11),=C'LT'         LT ?
         BE    ECON050                 JA.
         CLC   0(2,R11),=C'LE'         LE ?
         BNE   ECONERR                 NEE.
ECON050  EQU   *
         LA    R11,2(R11)              VERHOOG POINTER
         CLI   0(R11),C','             DELIMITER ?
         BNE   ECON080                 GEEN STEPNAAM
         SUBR  DELIMIT                 VERWERK DELIMITER
         B     *+4(R15)                RETURNCODES
         B     ECON060                 OK
         B     ECONERR                 NIET MOGELIJK
ECON060  EQU   *
         CALL  NAMES                   TEST STEPNAAM
         B     *+4(R15)                RETURNCODES
         B     ECON070                 OK
         B     ECONERR                 ERROR
ECON070  EQU   *
         CLI   0(R11),C'.'             PROCSTEPNAAM ?
         BNE   ECON080                 NEE
         CLI   EPROCFLG,X'FF'          EXEC PROC ?
         BNE   ECONERR                 NEE. ERROR
         LA    R11,1(R11)              VERHOOG POINTER
         CALL  NAMES                   TEST PROCSTEPNAAM
         B     *+4(R15)                RETURNCODES
         B     ECON080                 OK
         B     ECONERR                 ERROR
ECON080  EQU   *
         CLI   0(R11),C')'             ) AANWEZIG ?
         BNE   ECONERR                 ERROR
         LA    R11,1(R11)              VERHOOG POINTER
         XR    R6,R6                   CLEAR R6
         SP    BRFLAG,EEN              BRFLAG - 1
         CP    BRFLAG,NUL              EINDE PARAMETER ?
         BE    ECONOK                  OK
         B     ECON110                 EINDE PARM ?
ECON090  EQU   *
         CLC   0(4,R11),=C'EVEN'       EVEN ?
         BE    ECON100                 JA.
         CLC   0(4,R11),=C'ONLY'       ONLY ?
         BNE   ECONERR                 ERROR
ECON100  EQU   *
         LA    R11,4(R11)              VERHOOG POINTER
         CP    BRFLAG,NUL              ( AANWEZIG ?
         BE    ECONOK                  NEE.
ECON110  EQU   *
         CLI   0(R11),C')'             EINDE PARAMETER ?
         BNE   ECON120                 NEE
         SP    BRFLAG,EEN              RESET FLAG
         LA    R11,1(R11)              VERHOOG POINTER
         B     ECONOK                  OK.
ECON120  EQU   *
         CLI   0(R11),C','             DELIMITER AANWEZIG ?
         BNE   ECONERR                 ERROR
         CALL  DELIMIT                 VERWERK DELIMITER
         B     *+4(R15)                RETURNCODES
         B     ECON130                 OK
         B     ECONERR                 ERROR
ECON130  EQU   *
         CLI   0(R11),C'('             ( AANWEZIG ?
         BNE   ECON090                 EVEN OF ONLY ?
         AP    BRFLAG,EEN              SET FLAG
         LA    R11,1(R11)              VERHOOG POINTER
         B     ECON020                 VOLGENDE SUBPARAMETER
ECONOK   EQU   *
         L     R13,4(R13)              GA TERUG NAAR OS
         LM    R14,R9,12(R13)
         L     R12,68(R13)
         LA    R15,0                   RETURNCODE 00
         BR    R14                     RETURN
ECONERR  EQU   *
         L     R13,4(R13)              GA TERUG NAAR OS
         LM    R14,R12,12(R13)
         LA    R15,4                   RETURNCODE 00
         BR    R14                     RETURN
         SPACE 2
VCOND    DC    V(COMMON)
         LTORG
         EJECT
*/////////////////////////////////////////////////////////////////////
*/                                                                   /
*/       GENEREER ERRORMESSAGES                                      /
*/                                                                   /
*/////////////////////////////////////////////////////////////////////
         SPACE 3
ERRMESS  CSECT
         USING ERRMESS,R15             SET BASE ADRESSING
         STM   R14,R12,12(R13)         SAVE REGISTERS
         B     ERRM010
ERRM000  DC    18F'0'                  AREA OM REGISTERS TE SAVEN
ERRM010  EQU   *
         LA    R14,ERRM000             POINTER NAAR NIEUWE SAVE AREA
         ST    R13,4(R14)              SAVE POINTER NAAR OUDE SAVE AREA
         ST    R14,8(R13)              SAVE POINTER NAAR NIEUWE AREA
         LR    R13,R14                 POINTER NAAR HUIDIGE SAVE AREA
         LR    R2,R15                  VUL BASE REGISTER 1
         DROP  R15
         USING ERRMESS,R2
         L     R3,VERRM
         USING COMMON,R3               COMMON AREA
         SPACE 3
         LA    R7,ERR999               ERROR IN PROGRAM
         CR    R6,R7
         BE    ERRM015                 JA.
         L     R5,ERRNBR               AANTAL FOUTEN + 1
         LA    R7,MAXERR               MAXIMUM AANTAL FOUTEN
         CR    R5,R7                   MAXIMUM BEREIKT
         BNE   ERRM020
ERRM015  EQU   *
         L     R8,STARTERR             BEGIN MESSAGE AREA
         LA    R5,1                    1 MESSAGE
         ST    R5,ERRNBR               AANTAL MESSAGE
         LA    R6,ERR999               PROGRAMMA FOUT
         MVC   0(6,R8),LINENBR         REGELNUMMER
         STH   R6,6(R8)                MESSAGE NUMMER
         LA    R8,8(R8)                VERHOOG POINTER
         ST    R8,CURRERR              CURRENT POINTER
         USING RPFDATA,R12
         L     R10,LASTREC             EINDE CHECK
         DROP  R12
         B     ERRM030
ERRM020  EQU   *
         L     R8,CURRERR              CURRENT POINTER
         LA    R5,1(R5)
         ST    R5,ERRNBR
         MVC   0(6,R8),LINENBR         REGELNUMMER
         STH   R6,6(R8)                MESSAGE NUMMER
         LA    R8,8(R8)                VERHOOG POINTER
         ST    R8,CURRERR              BEWAAR POINTER
ERRM030  EQU   *
         L     R13,4(R13)              GA TERUG NAAR OS
         LM    R14,R9,12(R13)          RESTORE REGISTERS
         L     R12,68(R13)
         BR    R14
         SPACE 2
VERRM    DC    V(COMMON)
         LTORG
         EJECT
*/////////////////////////////////////////////////////////////////////
*/                                                                   /
*/       TEST CONDITION CODE IN JOB KAART                            /
*/                                                                   /
*/////////////////////////////////////////////////////////////////////
         SPACE 3
JCONDCDE CSECT
         USING JCONDCDE,R15            SET BASE ADRESSING
         STM   R14,R12,12(R13)         SAVE REGISTERS
         B     JCOND010
JCOND000 DC    18F'0'                  AREA OM REGISTERS TE SAVEN
JCOND010 EQU   *
         LA    R14,JCOND000            POINTER NAAR NIEUWE SAVE AREA
         ST    R13,4(R14)              SAVE POINTER NAAR OUDE SAVE AREA
         ST    R14,8(R13)              SAVE POINTER NAAR NIEUWE AREA
         LR    R13,R14                 POINTER NAAR HUIDIGE SAVE AREA
         LR    R2,R15                  VUL BASE REGISTER 1
         DROP  R15
         USING JCONDCDE,R2
         L     R3,VJCOND
         USING COMMON,R3               COMMON AREA
         SPACE 3
         CLI   0(R11),C'('             BEGINT MET ( ?
         BNE   JCONERR                 ERROR
         AP    BRFLAG,EEN              SET FLAG
         LA    R11,1(R11)              VERHOOG POINTER
         CLI   0(R11),C'('             MEER SUBPARAMETERS ?
         BNE   JCON020                 NEE.
         AP    BRFLAG,EEN              SET FLAG
         LA    R11,1(R11)              VERHOOG POINTER
JCON020  EQU   *
         CALL  NUMBER                  GETAL ?
         B     *+4(R15)                RETURNCODES
         B     JCON030                 OK.
         B     JCONERR                 ERROR.
JCON030  EQU   *
         C     R1,=F'0'                MOET  >= 0 ZIJN
         BL    JCONERR                 ERROR
         C     R1,=F'4095'             MOET  <= 4095 ZIJN
         BH    JCONERR                 ERROR
         CLI   0(R11),C','             , AANWEZIG ?
         BNE   JCONERR                 NEE.
         SUBR  DELIMIT                 VERWERK DELIMITER
         B     *+4(R15)                RETURNCODES
         B     JCON040                 OK
         B     JCONERR                 ERROR.
JCON040  EQU   *
         CLC   0(2,R11),=C'GT'         GT ?
         BE    JCON050                 JA.
         CLC   0(2,R11),=C'GE'         GE ?
         BE    JCON050                 JA.
         CLC   0(2,R11),=C'EQ'         EQ ?
         BE    JCON050                 JA.
         CLC   0(2,R11),=C'NE'         NE ?
         BE    JCON050                 JA.
         CLC   0(2,R11),=C'LT'         LT ?
         BE    JCON050                 JA.
         CLC   0(2,R11),=C'LE'         LE ?
         BNE   JCONERR                 NEE.
JCON050  EQU   *
         LA    R11,2(R11)              VERHOOG POINTER
         CLI   0(R11),C')'             ) AANWEZIG ?
         BNE   JCONERR                 NEE.
         LA    R11,1(R11)              VERHOOG POINTER
         XR    R6,R6                   CLEAR R6
         SP    BRFLAG,EEN              BRFLAG - 1
         CP    BRFLAG,NUL              EINDE PARAMETER ?
         BE    JCONOK
         CLI   0(R11),C')'             EINDE PARAMETER ?
         BNE   JCON060                 NEE
         SP    BRFLAG,EEN              RESET FLAG
         LA    R11,1(R11)              VERHOOG POINTER
         B     JCONOK                  OK.
JCON060  EQU   *
         CLI   0(R11),C','             DELIMITER AANWEZIG ?
         BNE   JCONERR                 ERROR
         CALL  DELIMIT                 VERWERK DELIMITER
         B     *+4(R15)                RETURNCODES
         B     JCON070                 OK
         B     JCONERR                 ERROR
JCON070  EQU   *
         CLI   0(R11),C'('             ( AANWEZIG ?
         BNE   JCONERR                 NEE.
         AP    BRFLAG,EEN              SET FLAG
         LA    R11,1(R11)              VERHOOG POINTER
         B     JCON020                 VOLGENDE SUBPARAMETER
JCONOK   EQU   *
         L     R13,4(R13)              GA TERUG NAAR OS
         LM    R14,R9,12(R13)
         L     R12,68(R13)
         LA    R15,0                   RETURNCODE 00
         BR    R14                     RETURN
JCONERR  EQU   *
         L     R13,4(R13)              GA TERUG NAAR OS
         LM    R14,R12,12(R13)
         LA    R15,4                   RETURNCODE 00
         BR    R14                     RETURN
         SPACE 2
VJCOND   DC    V(COMMON)
         LTORG
         EJECT
*/////////////////////////////////////////////////////////////////////
*/                                                                   /
*/       TEST OP EEN NAAM                                            /
*/                                                                   /
*/////////////////////////////////////////////////////////////////////
         SPACE 3
NAMES    CSECT
         USING NAMES,R15               SET BASE ADRESSING
         STM   R14,R12,12(R13)         SAVE REGISTERS
         B     NAME010
NAME000  DC    18F'0'                  AREA OM REGISTERS TE SAVEN
NAME010  EQU   *
         LA    R14,NAME000             POINTER NAAR NIEUWE SAVE AREA
         ST    R13,4(R14)              SAVE POINTER NAAR OUDE SAVE AREA
         ST    R14,8(R13)              SAVE POINTER NAAR NIEUWE AREA
         LR    R13,R14                 POINTER NAAR HUIDIGE SAVE AREA
         LR    R2,R15                  VUL BASE REGISTER 1
         DROP  R15
         USING NAMES,R2
         L     R3,VNAMES
         USING COMMON,R3               COMMON AREA
         SPACE 3
         MVC   NAME,=C'        '       CLEAR NAME
         LA    R7,=C'ABCDEFGHIJKLMNOPQRSTUVWXYZ@#$ '
         SUBR  TESTCHAR                ALLEEN A ===> Z EN #$@
         B     *+4(R15)                RETURNCODES
         B     NAME030                 JA.
         B     NAME060
NAME030  EQU   *
         LA    R8,NAME                 POINTER NAAR NAAM
         MVC   0(1,R8),0(R1)           BEWAAR CHARACTER
         LA    R5,8                    REST MAX 7 LANG
NAME035  EQU   *
         LA    R8,1(R8)                VERHOOG POINTER
NAME040  EQU   *
         LA    R7,=C'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789@#$ '
         SUBR  TESTCHAR                ALFANUMERIEK ?
         B     *+4(R15)                RETURNCODES
         B     NAME050                 JA.
         B     NAME070                 NEE.
NAME050  EQU   *
         MVC   0(1,R8),0(R1)           BEWAAR CHARACTER
         BCT   R5,NAME035              VOLGEND CHARACTER
NAME060  EQU   *
         L     R13,4(R13)              GA TERUG NAAR OS
         LM    R14,R12,12(R13)
         LA    R15,4                   RETURNCODE = 04
         BR    R14
NAME070  EQU   *
         LA    R1,NAME                 POINTER NAAR NAAM
         L     R13,4(R13)              GA TERUG NAAR OS
         LM    R14,R0,12(R13)
         LM    R2,R9,28(R13)
         L     R12,68(R13)
         LA    R15,0                   RETURNCODE = 00
         BR    R14                     RETURN
         SPACE 2
VNAMES   DC    V(COMMON)
NAME     DS    CL8
         DS    C
         LTORG
         EJECT
*/////////////////////////////////////////////////////////////////////
*/                                                                   /
*/       TEST OP EEN GETAL                                           /
*/                                                                   /
*/////////////////////////////////////////////////////////////////////
         SPACE 3
NUMBER   CSECT
         USING NUMBER,R15              SET BASE ADRESSING
         STM   R14,R12,12(R13)         SAVE REGISTERS
         B     NUMB010
NUMB000  DC    18F'0'                  AREA OM REGISTERS TE SAVEN
NUMB010  EQU   *
         LA    R14,NUMB000             POINTER NAAR NIEUWE SAVE AREA
         ST    R13,4(R14)              SAVE POINTER NAAR OUDE SAVE AREA
         ST    R14,8(R13)              SAVE POINTER NAAR NIEUWE AREA
         LR    R13,R14                 POINTER NAAR HUIDIGE SAVE AREA
         LR    R2,R15                  VUL BASE REGISTER 1
         DROP  R15
         USING NUMBER,R2
         L     R3,VNUMBER
         USING COMMON,R3               COMMON AREA
         SPACE 3
         TM    0(R11),X'F0'            TEST OP CYFER
         BNO   NUMB040                 NEE
         LA    R5,10                   GETAL 10
         XR    R6,R6                   MAAK REGISTERS SCHOON
         XR    R7,R7
         XR    R8,R8
NUMB020  EQU   *
         IC    R8,0(R11)               HAAL CYFER
         N     R8,=F'15'               ALLEEN LAATSTE 4 BITS
         AR    R7,R8                   TEL OP BIJ ZEVEN
         LA    R11,1(R11)              VERHOOG POINTER
         C     R11,ENDLINE             EINDE REGEL ?
         BE    NUMB030                 JA
         TM    0(R11),X'F0'            CYFER ?
         BNO   NUMB030                 NEE
         MR    R6,R5                   VERMENIGVULDIG MET 10
         B     NUMB020                 VOLGEND CYFER
NUMB030  EQU   *
         LR    R1,R7                   GETAL NAAR REGISTER 0
         L     R13,4(R13)              GA TERUG NAAR OS
         LM    R14,R0,12(R13)
         LM    R2,R9,28(R13)
         L     R12,68(R13)
         LA    R15,0                   RETURNCODE 00
         BR    R14                     RETURN
NUMB040  EQU   *
         L     R13,4(R13)              GA TERUG NAAR OS
         LM    R14,R12,12(R13)
         LA    R15,4                   RETURNCODE 04
         BR    R14                     RETURN
         SPACE 2
VNUMBER  DC    V(COMMON)
         LTORG
         EJECT
*/////////////////////////////////////////////////////////////////////
*/                                                                   /
*/       TEST PARM IN EXEC KAART                                     /
*/                                                                   /
*/////////////////////////////////////////////////////////////////////
         SPACE 3
PARMTEST CSECT
         USING PARMTEST,R15            SET BASE ADRESSING
         STM   R14,R12,12(R13)         SAVE REGISTERS
         B     PARMT010
PARMT000 DC    18F'0'                  AREA OM REGISTERS TE SAVEN
PARMT010 EQU   *
         LA    R14,PARMT000            POINTER NAAR NIEUWE SAVE AREA
         ST    R13,4(R14)              SAVE POINTER NAAR OUDE SAVE AREA
         ST    R14,8(R13)              SAVE POINTER NAAR NIEUWE AREA
         LR    R13,R14                 POINTER NAAR HUIDIGE SAVE AREA
         LR    R2,R15                  VUL BASE REGISTER 1
         DROP  R15
         USING PARMTEST,R2
         L     R3,VPARMT
         USING COMMON,R3               COMMON AREA
         SPACE 3
         CLI   0(R11),C''''            BEGINT MET ' ?
         BE    PARMT030                JA.
PARMT020 EQU   *
         CALL  TESTCHAR                TEST CHARACTER
         B     *+4(R15)                RETURNCODES
         B     PARMT020
         CLI   0(R11),C','             EINDE PARM ?
         BE    PARMTOK                 JA.
         CLI   0(R11),C' '             EINDE PARM ?
         BE    PARMTOK                 JA.
         CLI   0(R11),C')'             EINDE PARM ?
         BE    PARMTOK                 JA.
         B     PARMTERR                NEE. ERROR.
PARMT030 EQU   *
         MVI   QTFLAG,X'01'            SET FLAG
PARMT040 EQU   *
         LA    R11,1(R11)              VERHOOG POINTER
         C     R11,ENDLINE             EINDE REGEL ?
         BE    PARMTERR                JA.
         CLC   0(2,R11),=C''''''       DUBBELE QUOTE ?
         BNE   PARMT050                NEE
         LA    R11,1(R11)              VERHOOG POINTER
         C     R11,ENDLINE             EINDE REGEL ?
         BE    PARMTERR                JA.
         B     PARMT040
PARMT050 EQU   *
         CLI   0(R11),C''''            EINDE PARM ?
         BNE   PARMT040                NEE.
         XC    QTFLAG,QTFLAG           RESET FLAG
         LA    R11,1(R11)              VERHOOG POINTER
PARMTOK  EQU   *
         L     R13,4(R13)              GA TERUG NAAR OS
         LM    R14,R9,12(R13)
         L     R12,68(R13)
         LA    R15,0                   RETURNCODE 00
         BR    R14                     RETURN
PARMTERR EQU   *
         ZAP   BRFLAG,NUL              RESET BRACKET-FLAG
         XC    QTFLAG,QTFLAG           RESET QUOTE-FLAG
         L     R13,4(R13)              GA TERUG NAAR OS
         LM    R14,R12,12(R13)
         LA    R15,4                   RETURNCODE 04
         BR    R14                     RETURN
         SPACE 2
VPARMT   DC    V(COMMON)
         LTORG
         EJECT
*/////////////////////////////////////////////////////////////////////
*/                                                                   /
*/       SKIP CURRENT PARAMETER                                      /
*/                                                                   /
*/////////////////////////////////////////////////////////////////////
         SPACE 3
SKIPPARM CSECT
         USING SKIPPARM,R15            SET BASE ADRESSING
         STM   R14,R12,12(R13)         SAVE REGISTERS
         B     SKIPP010
SKIPP000 DC    18F'0'                  AREA OM REGISTERS TE SAVEN
SKIPP010 EQU   *
         LA    R14,SKIPP000            POINTER NAAR NIEUWE SAVE AREA
         ST    R13,4(R14)              SAVE POINTER NAAR OUDE SAVE AREA
         ST    R14,8(R13)              SAVE POINTER NAAR NIEUWE AREA
         LR    R13,R14                 POINTER NAAR HUIDIGE SAVE AREA
         LR    R2,R15                  VUL BASE REGISTER 1
         DROP  R15
         USING SKIPPARM,R2
         L     R3,VSKIPP
         USING COMMON,R3               COMMON AREA
         SPACE 3
SKIPP020 EQU   *
         CP    BRFLAG,NUL              GEEN HAAKJES ?
         BNE   SKIPP080                NEE
         CLI   0(R11),C','             EINDE PARM ?
         BE    SKIPP100                JA
         CLI   0(R11),C' '             EINDE PARM ?
         BE    SKIPP100                JA
SKIPP030 EQU   *
         CLI   0(R11),C'('             ( AANWEZIG ?
         BNE   SKIPP040                NEE.
         AP    BRFLAG,EEN              BRFLAG + 1
         B     SKIPP070
SKIPP040 EQU   *
         CLI   0(R11),C''''            ' AANWEZIG ?
         BNE   SKIPP070                NEE.
SKIPP050 EQU   *
         LA    R11,1(R11)              VERHOOG POINTER
         CLC   0(2,R11),=C''''''       '' AANWEZIG
         BNE   SKIPP060                NEE
         LA    R11,1(R11)              VERHOOG POINTER
         B     SKIPP050
SKIPP060 EQU   *
         CLI   0(R11),C''''            ' AANWEZIG ?
         BNE   SKIPP050                NEE.
SKIPP070 EQU   *
         LA    R11,1(R11)              VERHOOG POINTER
         B     SKIPP020
SKIPP080 EQU   *
         CLI   0(R11),C','             DELIMITER ?
         BNE   SKIPP090                NEE
         CALL  DELIMIT                 VERWERK DELIMITER
         B     *+4(R15)                RETURNCODES
         B     SKIPP020                OK
         B     SKIPP100                NEE.
SKIPP090 EQU   *
         CLI   0(R11),C')'             ) AANWEZIG ?
         BNE   SKIPP030                NEE.
         SP    BRFLAG,EEN              BRFLAG - 1
         B     SKIPP070
SKIPP100 EQU   *
         L     R13,4(R13)              GA TERUG NAAR OS
         LM    R14,R9,12(R13)
         L     R12,68(R13)
         LA    R15,0                   RETURNCODE = 00
         BR    R14                     RETURN
         SPACE 2
VSKIPP   DC    V(COMMON)
         LTORG
         EJECT
*/////////////////////////////////////////////////////////////////////
*/                                                                   /
*/       SKIP SPATIES                                                /
*/                                                                   /
*/////////////////////////////////////////////////////////////////////
         SPACE 3
SKIPSPC  CSECT
         USING SKIPSPC,R15             SET BASE ADRESSING
         STM   R14,R12,12(R13)         SAVE REGISTERS
         B     SKIPS010
SKIPS000 DC    18F'0'                  AREA OM REGISTERS TE SAVEN
SKIPS010 EQU   *
         LA    R14,SKIPS000            POINTER NAAR NIEUWE SAVE AREA
         ST    R13,4(R14)              SAVE POINTER NAAR OUDE SAVE AREA
         ST    R14,8(R13)              SAVE POINTER NAAR NIEUWE AREA
         LR    R13,R14                 POINTER NAAR HUIDIGE SAVE AREA
         LR    R2,R15                  VUL BASE REGISTER 1
         DROP  R15
         USING SKIPSPC,R2
         L     R3,VSKIPS
         USING COMMON,R3               COMMON AREA
         SPACE 3
         XR    R1,R1                   AANTAL SPATIES := 0
         CLI   0(R11),C' '             SPATIE ?
         BNE   SKIPS030                NEE
SKIPS020 EQU   *
         LA    R1,1(R1)                AANTAL SPATIES + 1
         LA    R11,1(R11)              VERHOOG POINTER
         C     R11,ENDLINE             EINDE REGEL
         BE    SKIPS040                JA
         CLI   0(R11),C' '             SPATIE ?
         BE    SKIPS020                JA
         L     R13,4(R13)              GA TERUG NAAR OS
         LM    R14,R0,12(R13)
         LM    R2,R9,28(R13)
         L     R12,68(R13)
         LA    R15,0                   RC = 00
         BR    R14                     RETURN
SKIPS030 EQU   *
         L     R13,4(R13)              GA TERUG NAAR OS
         LM    R14,R12,12(R13)
         LA    R15,4                   RC = 04
         BR    R14                     RETURN
SKIPS040 EQU   *
         L     R13,4(R13)              GA TERUG NAAR OS
         LM    R14,R12,12(R13)
         LA    R15,8                   RC = 08
         BR    R14                     RETURN
         SPACE 2
VSKIPS   DC    V(COMMON)
         LTORG
         EJECT
*/////////////////////////////////////////////////////////////////////
*/                                                                   /
*/       TEST OF CHARACTER IN STRING VOORKOMT                        /
*/                                                                   /
*/////////////////////////////////////////////////////////////////////
         SPACE 3
TESTCHAR CSECT
         USING TESTCHAR,R15            SET BASE ADRESSING
         STM   R14,R12,12(R13)         SAVE REGISTERS
         B     TESTC010
TESTC000 DC    18F'0'                  AREA OM REGISTERS TE SAVEN
TESTC010 EQU   *
         LA    R14,TESTC000            POINTER NAAR NIEUWE SAVE AREA
         ST    R13,4(R14)              SAVE POINTER NAAR OUDE SAVE AREA
         ST    R14,8(R13)              SAVE POINTER NAAR NIEUWE AREA
         LR    R13,R14                 POINTER NAAR HUIDIGE SAVE AREA
         LR    R2,R15                  BASE REGISTER
         USING TESTCHAR,R2
         L     R3,VTESTC
         USING COMMON,R3               COMMON AREA
         SPACE 3
         LR    R1,R11                  POINTER NAAR CHARACTER
TESTC020 EQU   *
         CLI   0(R7),C' '              EINDE STRING ?
         BE    TESTCERR                ERROR
         CLC   0(1,R11),0(R7)          KOMT VOOR IN STRING ?
         BE    TESTCOK                 JA.
         LA    R7,1(R7)                VERHOOG POINTER
         B     TESTC020                VOLGEND CHARACTER
TESTCOK  EQU   *
         LA    R11,1(R11)              VERHOOG POINTER
         L     R13,4(R13)              GA TERUG NAAR OS
         LM    R14,R0,12(R13)
         LM    R2,R9,28(R13)
         L     R12,68(R13)
         LA    R15,0                   RC = 00
         BR    R14                     RETURN
TESTCERR EQU   *
         L     R13,4(R13)              GA TERUG NAAR OS
         LM    R14,R12,12(R13)
         LA    R15,4                   RC = 04
         BR    R14                     RETURN
         SPACE 2
VTESTC   DC    V(COMMON)
         LTORG
         EJECT
*/////////////////////////////////////////////////////////////////////
*/                                                                   /
*/       TEST OP VOLUME SERIE NUMMER                                 /
*/                                                                   /
*/////////////////////////////////////////////////////////////////////
         SPACE 3
VOLSER   CSECT
         USING VOLSER,R15              SET BASE ADRESSING
         STM   R14,R12,12(R13)         SAVE REGISTERS
         B     VOLS010
VOLS000  DC    18F'0'                  AREA OM REGISTERS TE SAVEN
VOLS010  EQU   *
         LA    R14,VOLS000             POINTER NAAR NIEUWE SAVE AREA
         ST    R13,4(R14)              SAVE POINTER NAAR OUDE SAVE AREA
         ST    R14,8(R13)              SAVE POINTER NAAR NIEUWE AREA
         LR    R13,R14                 POINTER NAAR HUIDIGE SAVE AREA
         LR    R2,R15                  VUL BASE REGISTER 1
         DROP  R15
         USING VOLSER,R2
         L     R3,VVOLS
         USING COMMON,R3               COMMON AREA
         SPACE 3
         LA    R8,VOLNAME              POINTER NAAR NAAM
         LA    R5,7                    REST MAX 6 LANG
VOLS020  EQU   *
         LA    R7,=C'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789@#$- '
         SUBR  TESTCHAR                ALFANUMERIEK ?
         B     *+4(R15)                RETURNCODES
         B     VOLS030                 JA
         B     VOLS050
VOLS030  EQU   *
         MVC   0(1,R8),0(R1)           BEWAAR CHARACTER
         LA    R8,1(R8)                VERHOOG POINTER
         BCT   R5,VOLS020              VOLGEND CHARACTER
VOLS040  EQU   *
         L     R13,4(R13)              GA TERUG NAAR OS
         LM    R14,R12,12(R13)
         LA    R15,4                   RETURNCODE 04
         BR    R14                     RETURN
VOLS050  EQU   *
         C     R5,=F'7'                MINIMAAL 1 CHARACTER
         BE    VOLS040                 ERROR
         LA    R1,VOLNAME              POINTER NAAR VOLSER
         L     R13,4(R13)              GA TERUG NAAR OS
         LM    R14,R0,12(R13)
         LM    R2,R9,28(R13)
         L     R12,68(R13)
         LA    R15,0                   RETURNCODE 00
         BR    R14                     RETURN
         SPACE 2
VVOLS    DC    V(COMMON)
VOLNAME  DS    CL6
         DS    C
         LTORG
         EJECT
*/////////////////////////////////////////////////////////////////////
*/                                                                   /
*/       COMMON AREA                                                 /
*/                                                                   /
*/////////////////////////////////////////////////////////////////////
         SPACE 3
         PRINT GEN
COMMON   JCLCOMM
         EJECT
*/////////////////////////////////////////////////////////////////////
*/                                                                   /
*/       RPF DATA AREA                                               /
*/                                                                   /
*/////////////////////////////////////////////////////////////////////
         SPACE 3
RPFDATA  RPFCOMM
         END
