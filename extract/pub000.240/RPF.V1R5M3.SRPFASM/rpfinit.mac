RPFINIT  TITLE 'RPF INITIALIZATION MODULE'
*---------------------------------------------------------------------*
*        PERFORM INITIALIZATION OF THE RPF PACKAGE
*        1. READ MEMBER RPFKEY00 FROM SYS1.PARMLIB
*        2. OBTAIN SESSION DEFAULTS FROM THE RPF PROFILE DATABASE
*        3. GETMAIN THE WORKSPACE
*        4. ALLOCATE THE WORKFILES
*
*        RPFINIT IS CALLED BY RPFMAIN.
*
*        MODIFICATIONS:
*        2002/08/26 RPR: ALLOCATE RPFVTC1 TO SAVE THE VTOCLISTING IN
*                        RPFVTOC                                   @RP1
*        2002/09/29 RPR: ALLOCATE THE RETRIEVE BUFFER TO SAVE
*                        THE PRIMARY COMMANDS IN EDIT              @RP2
*        2002/10/01 RPR: PFK12/PFK24 DEFAULT SET TO RETRIEVE       @RP3
*        2002/10/04 RPR: RETRIEVE BUFFER READ FROM DATABASE        @RP4
*        2002/10/20 RPR: AUTOSAVE PARAMETER INTRODUCED             @RP5
*        2003/05/11 RPR: RPFCTPST DATASET ALLOCATE FOR CUT/PASTE   @RP6
*        2003/12/15 RPR: PARAMETER SUBMIT=TSO/RPF INTRODUCED       @RP7
*        2004/01/24 RPR: PARAMETER REPLACE=YES/NO INTRODUCED       @RP8
*        2006/03/19 RPR: DEFAULT PREFIX INTRODUCED                 @RP9
*        2006/03/20 RPR: DEFAULT ASSEMBLER PROGRAM ADDED           @RPA
*-------------------------------------- (C)-2006 SKYBIRD SYSTEMS -----*
RPFINIT  CSECT
         SAVE  (14,12),,*          SAVE REGISTERS
         USING RPFINIT,R15
         LA    R11,SAVE
         ST    R13,SAVE+4
         ST    R11,8(0,R13)
         LR    R13,R11
         B     START
         DS    0F
SAVE     DC    18F'-1'             SAVE AREA
         DC    CL8'&SYSDATE',C' ',CL8'&SYSTIME'
START    DS    0H
         DROP  R15                 KILL LOCAL ADDRESSABILITY
         LA    R12,2048(R13)       SECOND BASE
         LA    R12,2048(R12)
         LA    R10,2048(R12)           THIRD BASE                  @RP4
         LA    R10,2048(R10)                                       @RP4
         USING SAVE,R13,R12,R10                                    @RP4
         L     R11,0(R1)
         USING COMMAREA,R11        GET ADDRESSABILITY
         MVC   SCR1TXT(2),=X'27F5' NORMAL WRITE
         GTSIZE ,
         LR    R3,R0
         CH    R3,=H'43'           MODEL 4 SCREEN
         BE    WRALT               YES: MOVE WRITE ALTERNATE 277E
         CH    R3,=H'32'           MODEL 3 SCREEN
         BNE   ENDWR               YES: MOVE WRITE ALTERNATE 277E
WRALT    DS    0H
         MVC   SCR1TXT(2),=X'277E' WRITE ALTERNATE
ENDWR    DS    0H
         OI    INFCODE2,$NOHELP    MARK NO HELP DATASET
         GETMAIN RU,LV=8192
         ST    R1,COMMSCR          STORE SCREEN ADDRESS
         GETMAIN RU,LV=4804            ALLOCATE A RETRIEVE BUFFER  @RP2
         XC    0(4,R1),0(R1)           CLEAR #CMDS IN BUFFER       @RP2
         ST    R1,CRETRIEV             AND SAVE IT'S ADDRESS       @RP2
         EXTRACT ADDRTIOT,FIELDS=TIOT OBTAIN TASK IO TABLE
         L     R4,ADDRTIOT         OBTAIN TIOT
         LA    R4,24(R4)           SKIP JOB/STEP/PROC STEP
START1   CLC   0(R4,R4),F0000      NULL ENTRY
         BE    START4              YES:
         CLC   4(8,R4),=CL8'RPFHELP' RPFHELP DD-STATEMENT PRESENT?
         BE    START3              YES BRANCH
         XR    R5,R5               CLEAR REGISTER 5
         IC    R5,0(R4)            LENGTH OF DD-ENTRY
         LA    R4,0(4,R5)          SET TO NEXT DD ENTRY
         B     START1              LOOK FOR NEXT DD ENTRY
START3   DS    0H
         OI    INFCODE3,$HELPDD    MARK DD-STATEMENT PROVIDED
         NI    INFCODE2,255-$NOHELP MARK HELP AVL
START4   DS    0H
         STFSMODE ON,INITIAL=YES   SET FULLSCREEN MODE
         TM    INFCODE,$NODB       RPF FAST/EDIT ENTERED ?
         BO    NOTPUT              DO NOT TPUT BIG 'RPF/XA'
         TPUT  SCR1TXT,SCR1LEN,FULLSCR WRITE HEADER
NOTPUT   MVC   COMMDSN,BLANKS      BLANK COMMDSN
         XC    RTNCODE,RTNCODE     CLEAR RETURN CODE
         L     R3,X'4C'            CVT ADDRESS
         L     R4,0(R3)            4-WORD LIST
         L     R3,12(R4)           ASCB ADDRESS
         L     R4,176(R3)          USERID ADDRESS
         MVC   USERID,0(R4)        MOVE USERID INTO COMMAREA
         MVC   SAVEUID,USERID      MOVE USERID
         LA    R3,SAVEUID
         LA    R4,7                MAX LENGTH
UID1     DS    0H
         CLI   0(R3),C' '          BLANK FOUND?
         BE    UID9                YES: PAD WITH A '1'
         LA    R3,1(R3)            NEXT CHAR INPUT
         BCT   R4,UID1             LOOP
UID9     DS    0H
         MVI   0(3),C'1'           PAD WITH A '1'
         MVC   BUFFADDR,F0000      CLEAR BUFFER ADDRESS
         TM    INFCODE,$NODB       BYPASS DATABASE ?
         BO    DB008               YES: TAKE RPF DEFAULTS
         SYALLOC DSN=PARMLIB,DISP1=SHR,MF=E,DDN=PARMLIB
         LTR   15,15               ALLOCATION OK ?
         BZ    DB001               YES: PROCEED
         MVC   RTNCODE,F0004       MOVE RETURN CODE
         B     DBERR1              BRANCH TO ERROR ROUTINE
DB001    DS    0H
         LA    R14,DB002           CLEAR HI-ORDER BIT
         BR    R14                 GO TO 24 BIT MODE
DB002    DS    0H                  ----- START 24 BIT MODE
         OPEN  PDSDCB              OPEN THE SYS1.PARMLIB OR EQU.
         BLDL  PDSDCB,MEMLIST      CHECK IF RPFKEY00 IS PRESENT
         LTR   15,15               MEMBER FOUND ?
         BZ    DB003               YES: PROCEED
         MVC   RTNCODE,F0008       MOVE RETURNCODE
         CLOSE PDSDCB              CLOSE SYS1.PARMLIB/SYSINPDS
         SYALLOC FREE=PARMLIB,MF=E UNALLOCATE SYS1.PARMLIB/SYSINPDS
         B     DBERR1              BRANCH TO ERROR ROUTINE
DB003    CLOSE PDSDCB              CLOSE THAT DCB
         RDJFCB SEQDCB             ALTER JFCB
         MVC   JFCB+44(8),=C'RPFKEY00' MOVE MEMBERNAME
         OI    JFCB+86,X'01'       MARK SEQUENTIAL
         OPEN  SEQDCB,TYPE=J       OPEN AND ALTER JFCB
         GET   SEQDCB,AREA1        READ RECORD
         AP    RECCNT,=P'1'        INCR COUNTER
         MVC   PARMLIB,AREA1       MOVE DSNAME OF DATABASE
         TM    INFCODE3,$HELPDD    HELP PROVIDED VIA DD-STATEMENT?
         BO    DB004               OK.
         GET   SEQDCB,AREA1        READ NET RECORD IF ANY
*   THE SECOND RECORD SHOULD CONTAIN 'HELP=DSNAME' THE NAME OF
*        THE HELP DATASET
         MVC   COMMHELP,AREA1+5    MOVE NAME OF HELP DS
         NI    INFCODE2,255-$NOHELP MARK HELP AVL
DB004    DS    0H
         CLOSE SEQDCB              CLOSE THE DATASET
         FREEPOOL SEQDCB           AND FREE THE BUFFERS
         SYALLOC FREE=PARMLIB,MF=E AND UNALLOCATE SYS1.PARMLIB
         SYALLOC DSN=PARMLIB,DISP1=SHR,MF=E,DDN=DATABASE
         LTR   R15,R15             ALLOCATION OK ?
         BZ    DB005               YES: PROCEED
         MVC   RTNCODE,F0012       RETURNCODE
DBERR1   EQU   *                   PARMLIB COULD NOT BE ALLOCATED
*        L     R14,=A(DB008+X'80000000')
         B     DB008               MOVE RPF DEFAULTS
DB005    DS    0H
*        L     R14,=A(DB006+X'80000000')
*        BSM   0,14                GOBACK IN 31 BIT MODE AND BRANCH
*------- ----- ------------------- END OF 24 BIT MODE CODING
DB006    DS    0H
         OPEN  VSAMACB             OPEN THE VSAM ACB
         LTR   R15,R15             OPEN OK ?
         BZ    DB007               YES: PROCEED
         MVC   RTNCODE,F0016       RETURNCODE
         CLOSE VSAMACB             CLOSE THE ACB
         SYALLOC FREE=DATABASE,MF=E UNALLOCATE THE VSAM DATABASE
         B     DBERR1              ERROR ROUTINE
DB007    DS    0H
         MVC   DBUID,USERID        MOVE USERID IN SEARCH ARGUMENT
         MVI   DBUID+7,C' '        MOVE USERID IN SEARCH ARGUMENT
         GET   RPL=VSAMRPL         READ THE RECORD
         LTR   R15,R15             RECORD FOUND ?
         BZ    DB009               YES: PROCEED
*
*
*       FILL THE RECORD AND WRITE THAT RECORD
*       ON THE VSAM DATABASE
*
         XC    DBMEM,DBMEM         MEMBER INTO RECORD
         XC    DBDSN,DBDSN         DSNAME INTO RECORD
         XC    DBVOL,DBVOL         VOLUME INTO RECORD
         XC    DBMSTR,DBMSTR       CLEAR LIB MASTERFILE
         XC    DBMOD,DBMOD         CLEAR LIB MODULE
         XC    DBMSVOL,DBMSVOL     CLEAR LIB MASTERFILE VOLUME
         XC    DBPANLIB,DBPANLIB   CLEAR PANVALET LIBRARY
         XC    DBPANMOD,DBPANMOD   CLEAR PANVALET MODULE
         XC    DBPANVOL,DBPANVOL   CLEAR PANVALET VOLUME
         MVC   DBMAC1,=CL44'SYS1.MACLIB'  CLEAR
         MVC   DBMAC2,=CL44'SYS1.AMODGEN'   THE
         XC    DBMAC3,DBMAC3                  6
         XC    DBMAC4,DBMAC4                   ASSEMBLER
         XC    DBMAC5,DBMAC5                      MACLIB
         XC    DBMAC6,DBMAC6                        FIELDS
         XC    DBLK1,DBLK1         CLEAR
         XC    DBLK2,DBLK2              THE
         XC    DBLK3,DBLK3                 6
         XC    DBLK4,DBLK4                  LINKAGE
         XC    DBLK5,DBLK5                        EDITOR
         XC    DBLK6,DBLK6                          FIELDS
         MVC   DBLKPA,=CL30'XREF,LIST,NCAL' DEFAULT BINDER PARM
         XC    DBASPA,DBASPA           DEFAULT ASSEMBLER PARM
         MVC   DBPFK01(156),PFK0106
         MVC   DBPFK07(156),PFK0712
         MVC   DBPFK13(156),PFK1318    DEFAULT PFK SETTINGS
         MVC   DBPFK19(156),PFK1924
         MVC   DBFOLD,=C'YES'          DEFAULT UPPERCASE
         MVC   DBAPP,=C'NO '           DEFAULT NOAPPEND
         MVC   DBNUM,=C'YES'       DEFAULT NUM EDIT
         MVC   DBLOG,=C'NO '       DEFAULT NOLOGGING
         MVC   DBPRT,BLANKS        DEFAULT NO PRINTER
         MVC   DBNULL,=C'YES'      DEFAULT NULLS
         MVI   DBAUTO,C'N'         DEFAULT AUTOSAVE                @RP5
         MVC   DBSUB,=C'TSO'       DEFAULT SUBMIT                  @RP7
         MVC   DBREPL,=C'NO '      DEFAULT REPLACE                 @RP8
         MVC   DBPFX,BLANKS            BLANK PREFIX                @RP9
         MVC   DBPFX(8),USERID         DEFAULT PFX = USERID        @RP9
         MVC   DBASM,=CL8'IFOX00'      DEFAULT ASSEMBLER PROGRAM   @RPA
         MVC   DBCLS,=C'C'         DEFAULT SYSOUT CLASS
         MVC   DBSIZE,F1000        MOVE DEFAULT WS-SIZE
         PUT   RPL=VSAMRPL         WRITE RECORD ON DATABASE
         LTR   R15,R15             WRITE OK ?
         BZ    DB007A              YES: PROCEED
         MVC   RTNCODE,F0020       ELSE RC=20
         CLOSE VSAMACB             CLOSE THE ACB
         SYALLOC FREE=DATABASE,MF=E AND UNALLOC
         B     DBERR1              GO TO ERROR ROUTINE
*
DB007A   DS    0H
*
*        WRITE A SECOND RECORD WITH KEY USERID PADDED WITH '1'
*        THIS RECORD CONTAINS THE DATASET SELECTION LIST
*        DISPLAYED IN THE 'EDIT ENTRY MENU' (RPFDATAL)
*
         MVC   DBUID,SAVEUID       RESTORE KEY
         MODCB RPL=VSAMRPL,RECLEN=408,AREALEN=408
         MVC   DBDSN(250),BLANKS   BLANKS THESE FIELD
         MVC   DBDSN+250(150),BLANKS
         PUT   RPL=VSAMRPL              WRITE SECOND RECORD
         CLOSE VSAMACB             CLOSE THE VSAM DATABASE
         MVC   COMMDSN,PARMLIB     MOVE DSN DATABASE INTO COMMAREA
         SYALLOC FREE=DATABASE,MF=E UNALLOCATE THE DATABASE
DB008    MVC   DEFPFK01(156),PFK0106
         MVC   DEFPFK07(156),PFK0712
         MVC   DEFPFK13(156),PFK1318
         MVC   DEFPFK19(156),PFK1924
         XC    MEMBER,MEMBER       CLEAR MEMBER IN COMMAREA
         XC    DSNAME,DSNAME       CLEAR DSNAME IN COMMAREA
         XC    VOLUME,VOLUME       CLEAR VOLUME IN COMMAREA
         XC    COMMSTR,COMMSTR     CLEAR LIBR MASTERFILE
         XC    COMMSVOL,COMMSVOL   CLEAR LIBR MASTERFILE VOLUME
         XC    COMMMOD,COMMMOD     CLEAR LIBR MASTERFILE MODULE
         XC    PANLIB,PANLIB       CLEAR PANVALET LIBRARY
         XC    PANVOL,PANVOL       CLEAR PANVALET LIBRARY VOLUME
         XC    PANMOD,PANMOD       CLEAR PANVALET LIBRARY MODULE
         MVC   DEFOLD,=C'YES'      INIT UPPERCASE
         MVC   DEFAPP,=C'NO '      INIT NO-APPEND
         MVC   DEFNUM,=C'YES'      INIT LINE-NUMBERS
         MVC   DEFOUT,=C'C'
         MVC   DEFLOG,=C'NO '
         MVC   DEFNULL,=C'YES'
         MVI   DEFAUTO,C'N'                                        @RP5
         MVC   COMMSUB,=C'TSO'         DEFAULT SUBMIT=TSO          @RP7
         MVC   COMMREPL,=C'NO '        DEFAULT REPLACE=NO          @RP8
         MVC   COMMPFX,BLANKS          BLANK PREFIX                @RP9
         MVC   COMMPFX(8),USERID       DEFAULT PFX = USERID        @RP9
         MVC   COMMASM,=CL8'IFOX00'    DEFAULT ASSEMBLER PROGRAM   @RPA
         MVC   GETMLEN,F1000
         MVC   COMMMAC1,=CL44'SYS1.MACLIB' INIT MACLIB1
         MVC   COMMMAC2,=CL44'SYS1.AMODGEN' INIT MACLIB2
         XC    COMMMAC3,COMMMAC3       INIT MACLIB3
         XC    COMMMAC4,COMMMAC4       INIT MACLIB4
         XC    COMMMAC5,COMMMAC5       INIT MACLIB5
         XC    COMMMAC6,COMMMAC6       INIT MACLIB6
         XC    COMMLKED(250),COMMLKED  INIT CONTROL STATEMENT 1-4
         XC    COMMLKED+250(26),COMMLKED+250
         XC    COMMLKD2,COMMLKD2       INIT CONTROL STATEMENT 5-6
         MVC   COMMOBJ,BLANKS          INIT OBJECT LIB
         MVC   COMMIDDN,BLANKS         INIT INCLUDE LIB DDNAME
         MVC   COMMIDSN,BLANKS         INIT INCLUDE LIB DSNAME
         MVC   COMMLKPA,=CL30'XREF,LIST,NCAL' DEFAULT BINDER PARM
         XC    COMMASPA,COMMASPA       DEFAULT ASSEMBLER PARM
         MVC   COMMEDS1(250),BLANKS    INIT
         MVC   COMMEDS1+250(150),BLANKS    DATASET SELECTION LIST
         B     GETM
*
*        TAKE DEFAULTS FROM THE DATABASE
*
DB009    MVC   COMMDSN,PARMLIB     SAVE DSNAME OF DATABASE IN COMMAREA
         MVC   DEFPFK01(156),DBPFK01    PFK SETTINGS FROM DATABASE
         MVC   DEFPFK07(156),DBPFK07           ,,
         MVC   DEFPFK13(156),DBPFK13           ,,
         MVC   DEFPFK19(156),DBPFK19           ,,
         MVC   GETMLEN,DBSIZE      MOVE WS-SIZE FROM DATABASE
         MVC   DEFOLD,DBFOLD       MOVE "FOLD" FROM DATABASE
         MVC   DEFNUM,DBNUM        MOVE "NUM" FROM DATABASE
         MVC   DEFOUT,DBCLS        MOVE SYSOUTCLASS FROM DATABASE
         MVC   DEFAPP,DBAPP        MOVE "APPEND" FROM DATABASE
         MVC   DEFLOG,DBLOG        MOVE "LOGGING" FROM DATABASE
         MVC   DEFPRT,DBPRT        MOVE PRINTER NAME FROM DATABASE
         MVC   COMMMAC1,DBMAC1     MOVE MACLIB 1
         MVC   COMMMAC2,DBMAC2     MOVE MACLIB 2
         MVC   COMMMAC3,DBMAC3     MOVE MACLIB 3
         MVC   COMMMAC4,DBMAC4     MOVE MACLIB 4
         MVC   COMMMAC5,DBMAC5     MOVE MACLIB 5
         MVC   COMMMAC6,DBMAC6     MOVE MACLIB 6
         MVC   COMMASPA,DBASPA     MOVE ASSEMBLER PARM FROM DB
         MVC   COMMLKPA,DBLKPA     MOVE BINDER PARM FROM DB
         MVC   COMMLK1,DBLK1       MOVE BINDER CONTROL STATEMENT 1
         MVC   COMMLK2,DBLK2       MOVE BINDER CONTROL STATEMENT 2
         MVC   COMMLK3,DBLK3       MOVE BINDER CONTROL STATEMENT 3
         MVC   COMMLK4,DBLK4       MOVE BINDER CONTROL STATEMENT 4
         MVC   COMMLK5,DBLK5       MOVE BINDER CONTROL STATEMENT 5
         MVC   COMMLK6,DBLK6       MOVE BINDER CONTROL STATEMENT 6
         MVC   DEFNULL,DBNULL      MOVE "NULLS" FROM DATABASE
         MVC   DEFAUTO,DBAUTO      MOVE "AUTOSAVE" FROM DATABASE   @RP5
         MVC   COMMSUB,DBSUB       MOVE "SUBMIT"   FROM DATABASE   @RP7
         MVC   COMMREPL,DBREPL     MOVE "REPLACE"  FROM DATABASE   @RP8
         MVC   COMMPFX,DBPFX       MOVE DEFAULT PREFIX FROM DB     @RP9
         MVC   COMMASM,DBASM       MOVE DEFAULT ASSEMBLER PROGRAM  @RPA
         CLI   DEFNULL,C' '        NOT FILLED IN YET IN DATABASE ?
         BNE   *+10                NO: BRANCH
         MVC   DEFNULL,=C'YES'     MOVE DEFAULT
*+10
         CLI   DEFAUTO,C'Y'        NOT FILLED IN YET IN DATABASE ? @RP5
         BE    *+8                 NO: BRANCH                      @RP5
         MVI   DEFAUTO,C'N'        MOVE DEFAULT                    @RP5
*+8                                                                @RP5
         MVC   DSNAME,DBDSN        MOVE DEFAULT DSNAME FROM DATABASE
         MVC   MEMBER,DBMEM        MOVE DEFAULT MEMBER FROM DATABASE
         MVC   VOLUME,DBVOL        MOVE DEFAULT VOLUME FROM DATABASE
         MVC   COMMSTR,DBMSTR      MOVE DEFAULT LIB MASTER FROM DB
         MVC   COMMMOD,DBMOD       MOVE DEFAULT LIB MODULE FROM DB
         MVC   COMMSVOL,DBMSVOL    MOVE DEFAULT LIB VOLUME FROM DB
         MVC   PANLIB,DBPANLIB     MOVE DEFAULT PANVALET LIBRARY
         MVC   PANVOL,DBPANVOL     MOVE DEFAULT PANVALET LIB. VOLUME
         MVC   PANMOD,DBPANMOD     MOVE DEFAULT PANVALET VOLUME
         MVC   COMMOBJ,BLANKS      BLANK OBJECT LIB
         MVC   COMMIDSN,BLANKS     BLANK INCLUDE LIBRARY
         MVC   COMMIDDN,BLANKS     BLANK INCLUDE LIBRARY DDNAME
         MVC   DBUID,SAVEUID       TRY TO READ NEXT RECORD WITH
*                                  THE DATASET SELECTION LIST USED
*                                  IN RPFDATAL.
         MODCB RPL=VSAMRPL,RECLEN=408,AREALEN=408
         GET   RPL=VSAMRPL         READ THAT RECORD
         LTR   R15,R15             READ OK?
         BNZ   DB010
         MVC   COMMEDS1(250),DBDSN MOVE THE
         MVC   COMMEDS1+250(150),DBDSN+250   DATASET AND VOLUMES
         B     DB011               AND BRANCH
DB010    DS    0H
         MVC   COMMEDS1(250),BLANKS    INIT
         MVC   COMMEDS1+250(150),BLANKS    DATASET SELECTION LIST
         MVC   DBDSN(250),BLANKS   BLANKS THESE FIELD
         MVC   DBDSN+250(150),BLANKS
         PUT   RPL=VSAMRPL             WRITE SECOND RECORD
DB011    DS    0H
         LA    R8,SAVEUID+7            POINT TO LAST BYTE          @RP4
         LA    R5,6                    MAX TIMES TO SCAN           @RP4
DB012    DS    0H                                                  @RP4
         CLI   0(R8),C' '              TRAILING BLANK FOUND ?      @RP4
         BNE   DB013                   NO: LAST BYTE FOUND         @RP4
         BCTR  R8,0                    POINT TO PREVIOUS BYTE      @RP4
         BCT   R5,DB012                LOOP UNTIL LAST BYTE FOUND  @RP4
DB013    DS    0H                                                  @RP4
         MVI   0(R8),C'A'              KEY IS USERID + 'A'         @RP4
         MVC   DBUID,SAVEUID        TRY TO READ NEXT THREE RECORDS @RP4
*                                      WITH THE RETRIEVE BUFFER    @RP4
         MODCB RPL=VSAMRPL,RECLEN=1612,AREALEN=1612                @RP4
         GET   RPL=VSAMRPL             READ THAT RECORD            @RP4
         LTR   R15,R15                 READ OK?                    @RP4
         BNZ   DB015                   NO: WRITE 3 EMPTY RECORDS   @RP4
         LA    R4,DBUID+8              POINT TO AREA               @RP4
         L     R6,CRETRIEV             POINT TO RETRIEVE BUFFER    @RP4
         LA    R5,1604                 RECORD LENGTH - 8           @RP4
         LA    R7,1604                 RECORD LENGTH - 8           @RP4
         MVCL  R6,R4                   MOVE TO AREA                @RP4
         MODCB RPL=VSAMRPL,RECLEN=1608,AREALEN=1608                @RP4
         MVI   0(R8),C'B'              KEY IS USERID + 'B'         @RP4
         MVC   DBUID,SAVEUID                                       @RP4
         GET   RPL=VSAMRPL             READ 2ND RETRIEVE RECORD    @RP4
         LA    R4,DBUID+8              POINT TO AREA               @RP4
         L     R6,CRETRIEV             POINT TO RETRIEVE BUFFER    @RP4
         LA    R6,1604(R6)             POINT TO 2ND PORTION        @RP4
         LA    R5,1600                 RECORD LENGTH - 8           @RP4
         LA    R7,1600                 RECORD LENGTH - 8           @RP4
         MVCL  R6,R4                   MOVE TO AREA                @RP4
         MVI   0(R8),C'C'              KEY IS USERID + 'C'         @RP4
         MVC   DBUID,SAVEUID                                       @RP4
         GET   RPL=VSAMRPL             READ 2ND RETRIEVE RECORD    @RP4
         LA    R4,DBUID+8              POINT TO AREA               @RP4
         L     R6,CRETRIEV             POINT TO RETRIEVE BUFFER    @RP4
         LA    R6,3204(R6)             POINT TO 3RD PORTION        @RP4
         LA    R5,1600                 RECORD LENGTH - 8           @RP4
         LA    R7,1600                 RECORD LENGTH - 8           @RP4
         MVCL  R6,R4                   MOVE TO AREA                @RP4
         B     DB018                   AND BRANCH                  @RP4
DB015    DS    0H                                                  @RP4
         L     R4,CRETRIEV             POINT TO RETRIEVE BUFFER    @RP4
         LA    R6,DBUID+8              POINT TO AREA               @RP4
         LA    R5,1604                 RECORD LENGTH - 8           @RP4
         LA    R7,1604                 RECORD LENGTH - 8           @RP4
         MVCL  R6,R4                   MOVE TO RECORD              @RP4
         PUT   RPL=VSAMRPL             WRITE 1ST RETRIEVE RECORD   @RP4
         L     R4,CRETRIEV             POINT TO RETRIEVE BUFFER    @RP4
         LA    R4,1604(R4)             POINT TO 2ND PORTION        @RP4
         MVI   0(R8),C'B'              KEY IS USERID + 'B'         @RP4
         MVC   DBUID,SAVEUID                                       @RP4
         LA    R6,DBUID+8              POINT TO AREA               @RP4
         LA    R5,1600                 RECORD LENGTH - 8           @RP4
         LA    R7,1600                 RECORD LENGTH - 8           @RP4
         MVCL  R6,R4                   MOVE TO RECORD              @RP4
         MODCB RPL=VSAMRPL,RECLEN=1608,AREALEN=1608                @RP4
         PUT   RPL=VSAMRPL             WRITE 2ND RETRIEVE RECORD   @RP4
         L     R4,CRETRIEV             POINT TO RETRIEVE BUFFER    @RP4
         LA    R4,3204(R4)             POINT TO 3RD PORTION        @RP4
         MVI   0(R8),C'C'              KEY IS USERID + 'C'         @RP4
         MVC   DBUID,SAVEUID                                       @RP4
         LA    R6,DBUID+8              POINT TO AREA               @RP4
         LA    R5,1600                 RECORD LENGTH - 8           @RP4
         LA    R7,1600                 RECORD LENGTH - 8           @RP4
         MVCL  R6,R4                   MOVE TO RECORD              @RP4
         PUT   RPL=VSAMRPL             WRITE 3RD RETRIEVE RECORD   @RP4
DB018    DS    0H                                                  @RP4
         CLOSE VSAMACB                 CLOSE THE ACB
         SYALLOC FREE=DATABASE,MF=E
         B     GETM
*
DBERR2   DS    0H                      EODAD ADDRESS PARMLIB MEMBER
         CP    RECCNT,=P'1'            1ST RECORD READ
         BE    DB004                   YES: NO HELP DS, SO NO ERROR
         B     DB008                   MOVE RPF DEFAULTS
*
GETM     L     R2,GETMLEN
         MVC   PASSTXT,=C'SKYRPFXA'
         MVC   FOLD,=C'N/A'            INIT CURR. FOLD
         MVC   APPEND,=C'N/A'          INIT CURR. APPEND
         MVC   NUMBERED,=C'N/A'        INIT CURR. NUMERED
         GETMAIN RC,LV=(2)             GETMAIN EDIT WORKSPACE
         LTR   R15,R15                 CHECK RESULT
         BZ    PROCEED                 ALLRIGTH
         OI    INFCODE2,$NOGO          INDICATE GETMAIN FAILED
         B     RETURN
PROCEED  ST    R1,GETMSTRT
         MVC   FIRSTREC,F0000
         MVC   LASTREC,F0000
         MVC   FIRSTSCR,F0000
         MVC   LASTSCR,F0000
         L     R2,GETMLEN
         AR    R2,R1
         S     R2,RLENGTH
         ST    R2,GETMEND
         ST    R2,SAVEP3
         SYALLOC DDN=RPFEDT1,DSN=EDTDSN,PRI=4,SEC=2,                   X
               SPTYP=CYL,DISP1=NEW,DISP2=DELETE,UNITA=COMMSTOR,        X
               MF=E                    ALLOC TEMP DATASET FOR RPFPDS
         LTR   R15,R15                 ALLOCATION ALRIGHT ?
         BZ    ALCVTC1                 YES: PROCEED                @RP1
         MVC   RTNCODE,F0024           MOVE RETURN CODE
         OI    INFCODE,$NOTMP          MARK NO TEMPORARY DS
         B     RETURN                                              @RP1
ALCVTC1  DS    0H                      ALLOC RPFVTC1               @RP1
         SYALLOC DDN=RPFVTC1,DSN=VTCDSN,PRI=4,SEC=2,                   X
               SPTYP=CYL,DISP1=NEW,DISP2=DELETE,UNITA=COMMSTOR,        X
               MF=E                    ALLOC TEMP DS FOR RPFVTOC   @RP1
         LTR   R15,R15                 ALLOCATION ALRIGHT ?        @RP1
         BZ    ALCCTPST                YES: PROCEED                @RP6
         MVC   RTNCODE,F0024           MOVE RETURN CODE            @RP1
         OI    INFCODE,$NOTMP          MARK NO TEMPORARY DS        @RP1
         B     RETURN                                              @RP1
ALCCTPST DS    0H                      ALLOC RPFCTPST              @RP6
         SYALLOC DDN=RPFCTPST,DSN=CTPST,PRI=4,SEC=2,                   X
               SPTYP=CYL,DISP1=NEW,DISP2=DELETE,UNITA=COMMSTOR,        X
               MF=E                    ALLOC TEMP DS FOR RPFEDIT   @RP6
         LTR   R15,R15                 ALLOCATION ALRIGHT ?        @RP6
         BZ    RETURN                  YES: PROCEED                @RP6
         MVC   RTNCODE,F0024           MOVE RETURN CODE            @RP6
         OI    INFCODE,$NOTMP          MARK NO TEMPORARY DS        @RP6
         B     RETURN                                              @RP6
RETURN   L     R13,SAVE+4
         LM    R14,R12,12(R13)
         XR    R15,R15
         BR    R14
         TITLE 'WORKAREAS AND CONSTANTS'
PFK0106  DC    X'F1',C'N',C'HELP                    '
         DC    X'F2',C'X',C'                        '
         DC    X'F3',C'N',C'END                     '
         DC    X'F4',C'N',C'RETURN                  '
         DC    X'F5',C'N',C'F                       '
         DC    X'F6',C'X',C'                        '
PFK0712  DC    X'F7',C'N',C'SCB                     '
         DC    X'F8',C'N',C'SCF                     '
         DC    X'F9',C'X',C'                        '
         DC    X'7A',C'N',C'SCL                     '
         DC    X'7B',C'N',C'SCR                     '
         DC    X'7C',C'N',C'RETRIEVE                '             @RP3
PFK1318  DC    X'C1',C'N',C'HELP                    '
         DC    X'C2',C'X',C'                        '
         DC    X'C3',C'N',C'END                     '
         DC    X'C4',C'N',C'RETURN                  '
         DC    X'C5',C'N',C'F                       '
         DC    X'C6',C'X',C'                        '
PFK1924  DC    X'C7',C'N',C'SCB                     '
         DC    X'C8',C'N',C'SCF                     '
         DC    X'C9',C'X',C'                        '
         DC    X'4A',C'N',C'SCL                     '
         DC    X'4B',C'N',C'SCR                     '
         DC    X'4C',C'N',C'RETRIEVE                '              @RP3
EDTDSN   DC    CL44'&&&&RPFEDIT'   DSNAME TEMP DATASET OF RPFPDS
VTCDSN   DC    CL44'&&&&RPFVTC1'   DSNAME TEMP DATASET OF RPFVTOC  @RP1
CTPST    DC    CL44'&&&&RPFCTPST'  DSNAME TEMP DATASET OF RPFEDIT  @RP6
RLENGTH  DC    A(NEXTENT)          LENGTH OF WORKSPACE ENTRY
F1000    DC    A(NEXTENT*1000)     1000 LINES IN WORK SPACE
ZERO     DC    PL3'0'              000
BUFFER   DC    CL160' '            BUFFER, INPUT AREA
DWB      DC    D'0'                DOUBLE WORD
NUMFLD   DS    CL8
WRKFLD   DS    CL8
PARMLIB  DC    CL44'SYS1.PARMLIB'
AREA1    DS    CL80
PDSDCB   DCB   DSORG=PO,DDNAME=PARMLIB,MACRF=R
SEQDCB   DCB   DSORG=PS,DDNAME=PARMLIB,MACRF=GM,EXLST=EXLST,           X
               EODAD=DBERR2
VSAMACB  ACB   AM=VSAM,MACRF=(KEY,DIR,OUT),DDNAME=DATABASE
*
VSAMRPL  RPL   ACB=VSAMACB,OPTCD=(KEY,DIR,NUP,MVE),                    X
               AREA=DBAREA,AREALEN=AREALEN,RECLEN=AREALEN,             X
               ARG=DBUID
DBAREA   EQU   *
DBUID    DS    CL8                 8
DBDSN    DS    CL44                52
DBVOL    DS    CL6                 58
DBMEM    DS    CL8                 66
DBFOLD   DS    CL3                 69
DBCLS    DS    CL1                 70
DBNUM    DS    CL3                 73
DBLOG    DS    CL3                 76
DBAPP    DS    CL3                 79
DBSIZE   DS    CL4                 83
DBPFK01  DS    CL156               239
DBPFK07  DS    CL156               395
DBPFK13  DS    CL156               551
DBPFK19  DS    CL156               707
DBMSTR   DS    CL44                751
DBMOD    DS    CL8                 759
DBMSVOL  DS    CL6                 765
DBPANLIB DS    CL44                809
DBPANMOD DS    CL10                819
DBPANVOL DS    CL6                 825
DBNULL   DS    CL3                 828
DBPRT    DS    CL8                 836
DBMAC1   DS    CL44                880
DBMAC2   DS    CL44                924
DBMAC3   DS    CL44                968
DBMAC4   DS    CL44               1012
DBMAC5   DS    CL44               1056
DBMAC6   DS    CL44               1100
DBASPA   DS    CL30               1130
DBLKPA   DS    CL30               1160
DBLK1    DS    CL69               1229
DBLK2    DS    CL69               1298
DBLK3    DS    CL69               1367
DBLK4    DS    CL69               1436
DBLK5    DS    CL69               1505
DBLK6    DS    CL69               1574
DBAUTO   DS    C                  1575                             @RP5
DBSUB    DS    CL3                1578                             @RP7
DBREPL   DS    CL3                1581                             @RP8
DBPFX    DS    CL17               1598                             @RP9
DBASM    DS    CL8                1606                             @RPA
DBFILLER DS    CL144              1750                             @RP9
DBEND    EQU   *
AREALEN  EQU   DBEND-DBAREA
FWD      DS    F
EXLST    DS    0F
         DC    X'87',AL3(JFCB)
JFCB     DS    CL176
MEMLIST  DS    0H
         DC    AL2(1),AL2(14)
         DC    CL8'RPFKEY00'       DATABASE MEMBER IN SYS1.PARMLIB
         DS    CL6
SAVEUID  DS    CL8
F0000    DC    F'0'
F0004    DC    F'4'
F0008    DC    F'8'
F0012    DC    F'12'
F0016    DC    F'16'
F0020    DC    F'20'
F0024    DC    F'24'
ADDRTIOT DS    F
RECCNT   DC    PL2'0'
         TITLE 'ALLOCATION CONTROL BLOCKS'
         SYALLOC MF=L
         TITLE 'THE BEAUTIFUL RPF SIGNON HEADER'
SCR1TXT  DC X'27F5C0115D7E1140401DF8'
         DC    CL80'V1R5M2@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@C
               @@@@@@@@@@@@@@@@@@@@@@@@@@@@ '
         DC    CL80'@@@@@@@@@@@@@@@@@@@@                @@@@@@@@@@@@@@@C
               @@@@@@@@@@@@@@@@@@@@@@@@@@@@ '
         DC    CL80'@@@@@@@@@@@@@@@@@@@@    @@@@@@@@    @@@@@@@@@@@@@@@C
               @@@@@@@@                 @@@ '
         DC    CL80'@@@@@@@@@@@@@@@@@@@    @@@@@@@@@   @@@@@@@@@@@@@@@@C
               @@@@@@@@    @@@@@@@@@@@ @@@@ '
         DC    CL80'@@@@@@@@@@@@@@@@@@    @@@@@@@@    @@@@@@@@@@@@@@@@@C
               @@@@@@@    @@@@@@@@@@@@@@@@@ '
         DC    CL80'@@@@@@@@@@@@@@@@@               @@@@@@@@@@@@@@@@@@@C
               @@@@@@    @@@@@@ @@@@@@@@@@@ '
         DC    CL80'@@@@@@@@@@@@@@@@    @@@    @@@@@@@@                C
                               @@@@@@@@@@@@ '
         DC    CL80'@@@@@@@@@@@@@@@    @@@@    @@@@@@@@    @@@@@@@@@   C
                @@@    @@@@@@ @@@@@@@@@@@@@ '
         DC    CL80'@@@@@@@@@@@@@@    @@@@@    @@@@@@@    @@@@@@@@@@   C
               @@@    @@@@@@@@@@@@@@@@@@@@@ '
         DC    CL80'@@@@@@@@@@@@@    @@@@@@    @@@@@@    @@@@@@@@@    @C
               @@    @@@@@@@@@@@@@@@@@@@@@@ '
         DC    CL80'@@@@@@@@@@@      @@@@@                          @@@C
               @    @@@@@@@@@@@@@@@@@@@@@@@ '
         DC    CL80'@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@    @@@@@@@@@@@@@@@@C
                   @@@@@@@@@@@@@@@@@@@@@@@@ '
         DC    CL80'@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@    @@@@@@@@@@@@@@@  C
                   @@@@@@@@@@@@@@@@@@@@@@@@ '
         DC    CL80'@@@@@@@@@@@@@@@@@@@@@@@@@@@@@    @@@@@@@@@@@@@@@@@@C
               @@@@@@@@@@@@@@@@@@@@@@@@@@@@ '
         DC    CL80'@@@@@@@@@@@@@@@@@@@@@@@@@@@@    @@@@@@@@@@@@@@@@@@@C
               @@@@@@@@@@@@@@@@@@@@@@@@@@@@ '
         DC    CL80'@@@@@@@@@@@@@@@@@@@@@@@@@@@    @@@@@@@@@@@@@@@@@@@@C
               @@@@@@@@@@@@@@@@@@@@@@@@@@@@ '
         DC    CL80'@@@@@@@@@@@@@@@@@@@@@@@@@      @@@@@@@@@@@@@@@@@@@@C
               @@@@@@@@@@@@@@@@@@@@@@@@@@@@ '
         DC    CL80'@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@(C
               C) 1979-2006 SKYBIRD SYSTEMS '
SCR1LEN  EQU  *-SCR1TXT
         LTORG
         TITLE 'COMMON AREA DSECT'
COMMAREA RPFCOMM
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         END
