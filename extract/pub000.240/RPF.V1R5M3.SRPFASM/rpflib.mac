RPFLIB   TITLE 'READ A LIBRARIAN INDEX INTO WORKSPACE'
*---------------------------------------------------------------------*
*                                                                     *
*        MODULE:        RPFLIB                                        *
*                                                                     *
*        FUNCTION:      PRESENT A MENU FOR ALLOCATION A LIBRARIAN     *
*                       MASTER FILE. IF THE MASTERFILE IS ALLOCATED   *
*                       AN LIBRARIAN INDEX CAN BE FETCHED.            *
*                       THE OUTPUT WILL BE PLACED IN THE              *
*                       EDIT WORKSPACE AND WILL BE SET ON THE         *
*                       SCREEN. MAINTENANCE CAN BE                    *
*                       PERFORMED TO EDIT (E), BROWSE (B), DELETE (D),*
*                       AND PRINT (P) LIBRARIAN MODULES.              *
*                       THE INDEX CAN BE SCROLLED WITH THE PFKS OR    *
*                       WITH THE 'SCF', 'SCB', 'B(OTTOM)', 'T(OP)'    *
*                       AND 'L' COMMANDS.                             *
*                                                                     *
*        SUBROUTINES:   RPFLIB01. THE LIBR. UPDATE ROUTINE            *
*                       RPFPFK.   TO DEFINE/ALTER THE PFKS            *
*                       RPFEDIT.  EDIT THE LIBR. MODULES              *
*                       FAIROPN   LIBRARIAN OPEN     (REL 3.3A)       *
*                       FAIRCLS   LIBRARIAN CLOSE                     *
*                       FAIRMOD   LIBRARIAN MODULES (INDEX)           *
*                       FAIRREC   LIBRARIAN MODULE READ               *
*                                                                     *
*        Modifications:                                               *
*        Mar 07,2003 RPr: 7 color support, date/time updated in       *
*                         screen, scroll 'm' added and =n/=n.n cmd    *
*                         added                                    @rp1
*                                                                     *
*------------------------------------------ (C)-2003 SKYBIRD SYSTEMS -*
         SPACE 2
RPFLIB   CSECT
         USING *,15
         SAVE  (14,12),,*
         LA    R14,SAVE
         ST    R13,SAVE+4
         ST    R14,8(R13)
         LR    R13,R14
         LA    R12,2048(R13)         SECOND BASE REGISTER
         LA    R12,2048(R12)         SECOND BASE REGISTER
         LA    R10,2048(R12)         THIRD  BASE REGISTER
         LA    R10,2048(R10)         THIRD  BASE REGISTER
         DROP  15
         USING SAVE,R13,R12,R10
         USING MEMAREA,R8            SET ADDRESSABILITY
         B     START                BRANCH AROUND CONSTANTS
SAVE     DC    18F'-1'
         DC    CL8'&SYSDATE'
         DC    CL8' '
         DC    CL8'&SYSTIME'
         EJECT
START    DS    0D
         L     R11,0(R1)           PICKUP COMMAREA
         USING COMMAREA,R11        GET ADDRESSABILITY
         MVI   MSG2,C'-'           INIT MESSAGE
         MVC   MSG2+1(21),MSG2     CLEAR MESSAGE AREA
         MVI   MSG5,C'-'           INIT MESSAGE
         MVC   MSG5+1(21),MSG5     CLEAR MESSAGE AREA
         NI    INFCODE3,255-$OSSAVE CLEAR OSSAVE FLAG
         SYALLOC FREE=MASTER,MF=E
         SYALLOC FREE=MASTIN,MF=E
         MVI   SW,X'00'            CLEAR SWITCH
         ZAP   COUNTER,=P'0'           Clear counter               @rp1
         OI    SW,$ERASE
         CLC   COMMSIZE,=H'24'     24 LINES GOTTEN
         BE    START19             YES: NORMAL 24X80 DISPLAY
         CLC   COMMSIZE,=H'32'     32 LINES GOTTEN ?
         BE    START17             YES: 3278/79 MODEL 3
         CLC   COMMSIZE,=H'43'     43 LINES GOTTEN ?
         BE    START15             YES: 3278/79 MODEL 4
         B     START19         NOT ONE OF ABOVE MODEL 2 DISPLAY
START15  MVC   ERASE(2),=X'277E'    GENERATE WRITE ALTERNATE
         MVC   SCR2TXT(2),=X'277E'
         MVC   SCR2LAST+1(2),=X'F460' R43,C01 FOR LAST LINE
         MVC   SCRLEN,F384         MOVE LENTGTH OF OUTPUT SCR.
         MVC   #LINES,=F'40'
         L     R4,=A(SCR543)       Length of screen to write
         ST    R4,TPUTLEN          STORE THE RESULT
         LA    R4,LINES40          40 * NEXTENT (88)
         ST    R4,NEXTSCR          STORE THE RESULT
         B     START21
START17  MVC   ERASE(2),=X'277E'    GENERATE WRITE ALTERNATE
         MVC   SCR2TXT(2),=X'277E'
         MVC   SCR2LAST+1(2),=X'E6F0' R32,C01 FOR LAST LINE
         MVC   SCRLEN,F285         MOVE LENTGTH OF OUTPUT SCR.
         MVC   #LINES,=F'29'
         LA    R4,SCR532           LENGTH OF SCREEN TO WRITE
         ST    R4,TPUTLEN          STORE THE RESULT
         LA    R4,LINES29          29 * NEXTENT (88)
         ST    R4,NEXTSCR          STORE THE RESULT
         B     START21             OK BRANCH
START19  MVC   ERASE(2),=X'27F5'    GENERATE WRITE
         MVC   SCR2TXT(2),=X'27F5'
         MVC   SCR2LAST+1(2),=X'5CF0' R24,C01 FOR LAST LINE
         MVC   SCRLEN,F213        MOVE LENGTH OF OUTPUT SCREEN
         MVC   #LINES,=F'21'
         LA    R4,SCR524           LENGTH OF SCREEN TO WRITE
         ST    R4,TPUTLEN          STORE THE RESULT
         LA    R4,LINES21          21 * NEXTENT (88)
         ST    R4,NEXTSCR          STORE THE RESULT
START21  EQU   *
         XC    RTNCODE,RTNCODE     INIT RTNCODE FIELD
         MVC   SCR2UID,USERID      USERID INTO SCREEN
         L     R2,GETMSTRT         BEGINADDRESS WORKSPACE
         ST    R2,FIRSTREC         SAVE IT
         ST    R2,FIRSTSCR         SAVE FIRST SCREEN
         S     R2,RLENGTH          MINUS 1 CARD
         ST    R2,LASTREC          LAST RECORD POINTER
         MVC   SCR2MEM,=CL8'*'     MOVE LIBRARIAN MODULE
         MVC   SCR2DSN,COMMSTR     MOVE LIBARIAN MASTER
         MVC   SCR2VOL,COMMSVOL    MOVE LIBARIAN VOLUME
RESTART  DS    0H
         TPUT SCR2TXT,SCR2LEN,FULLSCR  MASTERFILE INFO:
         LA    R5,BUFFER           GET BUFFER ADDRESS FOR CONVIN
         LA    R2,AIDBYTE          AND AIDBYTE FOR CONVIN
         BAL   R14,CONVIN
         LR    R6,R1               SAVE LENGTH
         LTR   R6,R6               NOTHING RECEIVED ?
         BZ    RESTART             YES: RESHOW
         CLI   AIDBYTE,X'F3'       PFK3 PRESSED ?
         BE    RETURN              EXIT IF YES
         CLI   AIDBYTE,X'C3'       PFK15 PRESSED ?
         BE    RETURN              EXIT IF YES
SCAN01   MVC   MSTRVOL(6),BLANKS   CLEAR VOLUME
         MVC   MODULE(8),BLANKS    CLEAR MODULE
         MVC   MSTRFILE(44),BLANKS   CLEAR MASTERFILE
         LA    R5,BUFFER           POINT TO BEGINNING OF BUFFER
         LA    R4,COMMAND          POINT TO COMMAND
SCAN03   CLC   0(13,R5),=C'Module      ='  Search for module       @rp1
         BE    SCAN05              FOUND: PROCESS MODULE
         MVC   0(1,R4),0(R5)       MOVE 1 CHAR. COMMAND
         LA    R5,1(R5)            NEXT BYTE
         LA    R4,1(R4)            NEXT CHAR.
         BCT   R6,SCAN03           EXAMINE NEXT BYTES
         B     RESTART             CLEAR KEY PRESSED
SCAN05   LA    R5,13(R5)            POINT AFTER 'MODULE='
         LA    R4,MODULE           POINT TO MODULE FIELD
SCAN07   CLC   0(13,R5),=C'MASTER file =' Search for MASTER file   @rp1
         BE    SCANR9              FOUND: PROCESS MASTER FILE
         MVC   0(1,R4),0(R5)       MOVE 1 CHAR. MODULE
         LA    R5,1(R5)            NEXT CHAR.
         LA    R4,1(R4)            NEXT CHAR.
         BCT   R6,SCAN07           EXAMINE NETX BYTES
         B     RESTART             CLEAR KEY PRESSED
SCANR9   LA    R5,13(R5)            POINT AFTER 'MASTER FILE ='
         LA    R4,MSTRFILE         POINT TO MASTERFILE FIELD
SCAN11   CLC   0(13,R5),=C'Volume      ='  Search for volume       @rp1
         BE    SCANR13              FOUND: PROCESS VOLUME
         MVC   0(1,R4),0(R5)       MOVE 1 CHAR. MSTRFILE
         LA    R5,1(R5)            NEXT CHAR.
         LA    R4,1(R4)            NEXT CHAR.
         BCT   R6,SCAN11           EXAMINE NEXT BYTES
         B     RESTART             CLEAR KEY PRESSED
SCANR13  LA    R5,13(R5)             POINT AFTER 'VOLUME='
         LA    R4,MSTRVOL          POINT TO MSTRVOL FIELD
SCAN15   CLC   0(9,R5),=C'  DDname=' Search for DDname             @rp1
         BE    SCAN17              FOUND: PROCESS DDNAME
         MVC   0(1,R4),0(R5)       MOVE 1 CHAR. MSTRVOL
         LA    R5,1(R5)            NEXT CHAR.
         LA    R4,1(R4)            NEXT CHAR.
         BCT   R6,SCAN15           EXAMINE NEXT BYTES
         B     RESTART             CLEAR KEY PRESSED
SCAN17   EQU   *
         OC    MSTRFILE,BLANKS     XLATE TO UPPER CASE CHARS
         OC    MSTRVOL,BLANKS      AND VOLSER
         OI    COMMAND,X'40'       XLATE COMMAND TO CAPS
         MVC   SCR2VOL,MSTRVOL     IF THERE IS ONE.
         MVC   SCR2DSN,MSTRFILE    ALSO INTO SCREEN TEXT.
         MVC   FAIRDDN,=CL8'MASTER' DEFAULT DISK MASTER
         MVC   FAIROOPS(4),=CL4'2002' DISK MASTER FILE
         CLI   COMMAND,C'X'        RETURN ?
         BE    RETURN              SET RTNCODE FIELD
         MVC   HEADUPD(7),=C'Updated'  Default last update in hdr  @rp1
         MVC   HEADMSTR(10),=C'masterfile' Type of master in hdr   @rp1
         CLI   COMMAND,C'1'        ALLOCATE ?
         BE    FUNC01              YES: GO
         CLI   COMMAND,C'2'        ALLOCATE TAPE MASTER
         BE    FUNC00              YES: GO
         MVC   MSG2,ERR2TXT        MOVE ERROR MESSAGE
         B     RESTART
FUNC00   DS    0H
         MVC   HEADUPD(7),=C'Added  '  Date added in hdr if tape   @rp1
         MVC   HEADMSTR(10),=C'tapemaster' Type of master in hdr   @rp1
         MVC   FAIRDDN,=CL8'MASTIN' TAPE MASTER FILE
         MVC   FAIROOPS(4),=CL4'3002' TAPE MASTER FILE
FUNC01   EQU   *
         MVC   COMMSTR,MSTRFILE
         MVC   SCR2MEM,=CL8'*'     AND MODULE NAME ALWAYS INDEX
         MVC   MODULE,=CL8'*'      AND MODULE NAME ALWAYS INDEX
         CLI   MSTRVOL,C' '        NO VOLUME SPECIFIED ?
         BNE   ALLOC01             ALLOC WITHOUT VOL
         SYALLOC DDA=FAIRDDN,DSN=MSTRFILE,DISP1=SHR,MF=E
         LTR   R15,R15             TEST COMPLETION
         BNZ   ALLOCERR
         LOCATE LOC                LOCATE THE MASTERFILE
         LTR   R15,R15             OK ?
         BNZ   LOCERR              NO: ERROR.
         MVC   MSTRVOL,LOCVOL      MOVE VOLUME ID
         MVC   SCR2VOL,LOCVOL      MOVE VOLUME ID
         MVC   COMMSVOL,LOCVOL     MOVE VOLUME ID
         B     OBTAIN              OBTAIN THE MASTERFILE
LOCERR   MVC   MSG2,ERR7TXT        MOVE ERROR MESSAGE
         SYALLOC FREADDR=FAIRDDN,M=F   FREE THE MASTERFILE
         B     RESTART                 GOTO ERROR ROUTINE
ALLOC01  EQU   *
         SYALLOC DDA=FAIRDDN,DSN=MSTRFILE,DISP1=SHR,MF=E,              X
               UNITA=COMMUNIT,VOL=MSTRVOL
         LTR   R15,R15
         BNZ   ALLOCERR
OBTAIN   DS    0H
         OBTAIN OBTCMLST               OBTAIN MASTERFILE
         LTR   R15,R15                 OBTAIN OK ?
         BZ    OPNMST                  YES: ALLOCATE
         MVC   MSG2,ERR8TXT            MOVE ERROR MESSAGE
         SYALLOC FREADDR=FAIRDDN,M=F   FREE THE MASTERFILE
         B     RESTART                 GO TO ERROR ROUTINE
OPNMST   EQU   *
         LA    R15,LIBOPEN             ADDRESS ROUTINE
         BALR  R14,R15                 BRANCH TO THIS ROUT.
         CLI   OPENRES,C'0'
         BE    RDINDEX
         TITLE 'ERROR ROUTINE FOR OPEN MASTERFILE'
OPENERR  DS    0H
         LA    R15,LIBCLOSE            ADDRESS ROUTINE (CLOSE FILE)
         BALR  R14,R15                 BRANCH TO THIS ROUT.
         MVC   ERR4CODE(2),OPENRES  MOVE ERROR CODE INTO MESSAGE
         MVC   MSG2,ERR4TXT        ERROR IN OPENING MASTERFILE, CODE X
         SYALLOC FREADDR=FAIRDDN,M=F FREE THE MASTERFILE
         B     RESTART
         TITLE 'ERROR ROUTINE FOR ALLOCATION OF MASTER FILE'
ALLOCERR SYCONVHX IN=DAERROR,OUT=ERR3CODE,L=2
         MVC   MSG2,ERR3TXT
         B     RESTART
         TITLE 'CALL THE READ INDEX ROUTINE AND CHECK ERRORS'
RDINDEX  DS    0H
         MVC   SCR5DSN,COMMSTR         MOVE MASTERFILE IN SCR5
         LA    R3,SCR5DSN+29           LAST POSITION OF DSN
         LA    R4,28                   MAX 28 TIMES
DSN1     DS    0H                      REPLACE TRAILING BLANKS BY '-'
         CLI   0(R3),C' '              TRAILING BLANK FOUND
         BNE   DSN9                    NO: END OF SCAN
         MVI   0(R3),C'-'              REPLACE BY HYPHEN
         BCTR  R3,0                    PREV POS.
         BCT   R4,DSN1                 LOOP UNTIL ALL DONE
DSN9     DS    0H
         BAL   R14,FINDMEM             READ IN THE INDEX
         LTR   R15,R15                 AND CHECK COMPLETION
         BZ    RPFREAD                 ALRIGHT: BRANCH
         SYALLOC FREADDR=FAIRDDN,M=F   FREE THE MASTERFILE
         B     RESTART                 NOTIFY ERROR TO USER
         TITLE 'EXAMINE THE COMMANDS IN THE COMMAND AREA'
*---------------------------------------------------------------------*
*        Possible commands:
*
*        SCF   Scroll foreward
*        SCB   Scroll backward
*        END   End of RPFLIB
*        RETURN same as END, but always return to MAIN
*        TOP   Goto top of module list       (Alias = T)
*        BOTTOM Goto bottom of module list   (Alias = B)
*        L xxx Locate display on module xxx
*        PFK   Alter/display Program function keys
*        =n.n  Return, goto main and execute option n.n
*        ?     Refresh screen
*------------------------------------- (C)-2003 Skybird Systems ------*
RPFREAD  EQU   *                       PUT THE MODULES ON THE SCREEN
         BAL   R14,RPFTPUT             WRITE THE SCREEN
RPF021   EQU   *                       PROCESS THE OUTPUT
         MVI   MSG5,C'-'               CLEAR MESSAGE AREA
         MVC   MSG5+1(21),MSG5          ,,     ,,     ,,
         LA    R2,AIDBYTE              AIDBYTE ADDRESS
         LA    R5,SCREEN               SCREEN ADDRESS
         BAL   R14,CONVIN              GET THE SCREEN
         MVC   REP5,BLANKS             CLEAR COMMAND AREA
         LTR   R1,R1                   CLEAR KEY PRESSED ?
         BZ    NEWSCR                  NEW SCREEN IF YES
         CLI   SCREEN,X'6E'            RESHOW CODE ?
         BE    NEWSCR                  YES: REVIEW SCREEN
         OC    SCREEN(24),BLANKS       XLATE TO CAPS
         LR    R3,R1                   SAVE REG 1
         CLI   AIDBYTE,X'7D'           ENTER KEY ?
         BE    RPF0219                 YES: BRANCH
         CLI   AIDBYTE,X'6D'           CLEAR KEY ?
         BE    NEWSCR                  YES: NEW SCREEN
         LA    R2,SCREEN               ADDRESS OF SCREEN FOR PFK ROUT
         LA    R1,AIDBYTE              AIDBYTE ADDRESS
         BAL   R14,PFK                 FETCH PFK DEFINITIONS
         LTR   R15,R15                 ALLRIGTH ?
         BZ    RPF0219                 YES EXEC COMMAND
         C     R15,F0004               CONFIRMATION ?
         BE    RPF0217                 NO DONT EXEC COMMAND
         C     R15,F0008               PFK NOT DEFINED ?
         BE    RPF0215                 ERROR
         MVC   MSG5(L'ERRATXT),ERRATXT PFK DEFINITION INVALID
         MVC   REP5,BLANKS             BLANK COMMAND AREA
         BAL   R14,RPFTPUT             WRITE SCREEN
         B     RPF021                  REVIEW SCREEN
RPF0215  MVC   MSG5(L'ERR9TXT),ERR9TXT MOVE ERROR MESSAGE
         BAL   R14,RPFTPUT             WRITE SCREEN
         MVC   REP5,BLANKS             BLANK COMMAND AREA
         B     RPF021                  REVIEW SCREEN
RPF0217  DS    0H
         MVI   MSG5,C'-'               CLEAR MESSAGE AREA
         MVC   MSG5+1(21),MSG5         CLEAR MESSAGE AREA
         MVC   REP5,SCREEN             REPEAT COMMAND
         BAL   R14,RPFTPUT             WRITE SCREEN
         B     RPF021                  REVIEW SCREEN
RPF0219  EQU   *
         CLI   SCREEN,C'?'             CLEAR PRESSED ?
         BNE   RPF022                  GO ON IF NOT
NEWSCR   EQU   *
         OI    SW,$ERASE               MARK ERASE ON
         MVC   REP5,BLANKS             BLANK REPLY AREA
         MVI   MSG5,C'-'               CLEAR MESSAGE AREA
         MVC   MSG5+1(21),MSG5         CLEAR MESSAGE AREA
         BAL   R14,RPFTPUT             WRITE SCREEN
         B     RPF021                  PROCESS THE SCREEN
RPF022   EQU   *
         CLI   SCREEN,C'='             =n or =n.n command?         @rp1
         BNE   RPF022A                 No: branch                  @rp1
         MVC   CMAINOPT,SCREEN+1       Move options                @rp1
         OI    INFCODE2,$RETURN        Set return indicator        @rp1
         B     RETURN                  And terminate (to main)     @rp1
RPF022A  DS    0H                                                  @rp1
         C     R3,SCRLEN               LENGTH NOT CHANGED ?
         BE    RPF023                  ALLRIGHT       XXXXXXXXXXXXXXX
         MVC   MSG5,ERRETXT            MOVE ERROR MSG
         BAL   R14,RPFTPUT             WRITE SCREEN
         B     RPF021                  AND READ THE SCREEN
RPF023   EQU   *                       PROCESS THE COMMANDS
         MVC   BUFFER(24),SCREEN       MOVE COMMAND
         CLI   BUFFER,C'&&'            &&  ENTERED ?
         BNE   RPF0231                 NO: NO REPEAT
         MVC   SCREEN(24),BUFFER+1     MOVE COMMAND BACK WITHOUT '&&'
         MVI   SCREEN+23,C' '
         MVC   REP5,BUFFER             REPEAT COMMAND
RPF0231  EQU   *
         BAL   R14,RPFSCRN             PROCESS THE DELS AND RENS
         TM    SW,$CHANGE              SOMETHING CHANGED ?
         BNO   RPF024                  PROCESS CMDS IF NOT CHANGED
         NI    SW,255-$CHANGE
         CLC   SCREEN(24),BLANKS       NO COMMAND ENTERED ?
         BE    RPF023A                 DO NOT WRITE PAUSE MSG
         CLI   REP5,C' '               NO COMMAND IN COMMAND AREA
         BNE   RPF023A                 NO: GO ON
         MVC   REP5(24),SCREEN         ELSE REPEAT COMMAND
RPF023A  BAL   R14,RPFTPUT             WRITE THE SCREEN
         B     RPF021                  AND PROCESS THE SCREEN
RPF024   EQU   *                       PROCESS THE SCREEN
         CLC   SCREEN(3),=C'SCF'       'SCF' COMMAND (ALIAS OF FORWARD)
         BNE   RPF028                  NO: OTHER COMMANDS
         L     R8,FIRSTSCR             FIRST LINE ON SCREEN
         AL    R8,NEXTSCR              NEXT SCREEN
         C     R8,LASTREC              COMPARE WITH ENDADDRESS
         BH    RPF027                  ERROR IF LOW OR EQUAL
         ST    R8,FIRSTSCR             NEW FIRST LINE
         BAL   R14,RPFTPUT             WRITE THE SCREEN
         B     RPF021                  PROCESS THE SCREEN
RPF027   EQU   *                       ERROR IN 'FORWARD' COMMAND
         MVC   MSG5,ERR1TXT            PAGE FORWARD NO EFFECT
         BAL   R14,RPFTPUT
         B     RPF021                  PROCESS THE SCREEN
RPF028   CLC   SCREEN(3),=C'PFK'       PFK ENTERED ?
         BNE   RPF031                  NO: TEST NEXT COMMAND
         LINK  EP=RPFPFK,PARAM=((11)),VL=1 PFK DEF MODULE
         OI    SW,$ERASE               MARK ERASE ON
         B     NEWSCR                  WRITE NEWS SCREEN
RPF031   EQU   *                       PROCESS 'BACK' COMMAND
         CLC   SCREEN(3),=C'SCB'       'SCB' COMMAND (ALIAS OF BACK) ?
         BNE   RPF035                  NO: OTHER COMMANDS
         L     R8,FIRSTSCR             1ST LINE ON SCREEN
         C     R8,GETMSTRT             COMPARE WITH FIRST LINE
         BNH   RPF034                  YES: SCROLL HAD NO EFFECT
         SL    R8,NEXTSCR              DESCREASE WITH ONE SCREEN
         C     R8,GETMSTRT             AND COMPARE WITH BEGIN
         BNL   *+8                     HIGH: DO NOTHING
         L     R8,FIRSTREC             NOT HIGH: RESET TO BEGIN
         ST    R8,FIRSTSCR             NEW 1ST LINE
         BAL   R14,RPFTPUT             WRITE THE SCREEN
         B     RPF021                  AND PROCESS THE SCREEN
RPF034   EQU   *                       ERROR ROUT 'BACK'
         MVC   MSG5,ERR1TXT            PAGE BACK NO EFFECT
         BAL   R14,RPFTPUT             PUT THE SCREEN
         B     RPF021                  PROCESS THE SCREEN
RPF035   CLI   SCREEN,C'B'             BOTTOM COMMAND ?
         BNE   RPF036                  NO PROCESS OTHER COMMANDS
         L     R8,LASTREC              LAST RECORD POINTER
         SL    R8,NEXTSCR              SUBTRACT LENGTH OF SCREEN
         LA    R8,NEXTENT(R8)          ADD LENGTH ONE ENTRY
         C     R8,FIRSTREC             BEFORE THE BEGINNING WORKSPACE?
         BNL   *+8                     NO: ALLRIGHT
         L     R8,FIRSTREC             RESET TO TOP
         ST    R8,FIRSTSCR             AND STORE THE RESULT
         BAL   R14,RPFTPUT             WRITE THE SCREEN
         B     RPF021                  PROCESS THE SCREEN
RPF036   CLC   SCREEN(2),=C'L '        'LOCATE ON MEMBER COMMAND'
         BNE   RPF038                  NO: PROCESS OTHER COMMANDS
         LA    R3,SCREEN+2             LOAD LOCATE CHAR STRING
         LA    R4,8                    MAX 8 CHARS = MEMBER NAME
         XR    R5,R5                   COUNT LENGTH IN GR 5
RPF037   CLI   0(R3),C' '              END OF STRING ?
         BE    RPF0371                 YES: STOP SEARCH
         LA    R5,1(R5)                COUNT NON BLANK BYTE
         LA    R3,1(R3)                NEXT BYTE IN 'SCREEN'
         BCT   R4,RPF037               LOOP.
RPF0371  LTR   R5,R5                   NO BYTES FOUND ?
         BE    RPF0375                 YES: ISSUE MESSAGE
         BCTR  R5,0                    SUBTRACT 1 FOR EX INSTRUCTION
         L     R8,GETMSTRT             LOAD START ADDRESS    (BXLE)
         L     R7,LASTREC              LAST RECORD POINTER   (BXLE)
         LA    R7,79(R7)               ADJUST OFFSET         (BXLE)
         LA    R6,NEXTENT              LENGTH OF ENTRY       (BXLE)
         LA    R3,SCREEN+2             ADDRESS CHAR STRING
RPF0372  EX    R5,LCOMPARE             COMPARE IF MATCH FOUND
         BNL   RPF0376                 LOW OR EQUAL: FOUND
         BXLE  R8,6,RPF0372            LOOP                  (BXLE)
RPF0375  MVC   MSG5,ERRCTXT            MOVE ERROR MESSAGE
         MVC   REP5(24),SCREEN         REPEAT COMMAND
         BAL   R14,RPFTPUT             WRITE THE SCREEN
         B     RPF021                  PROCESS THE SCREEN
LCOMPARE CLC   LMEMBR(0),0(R3)         **** EX ONLY ****
RPF0376  EQU   *                       LOCATE THE FOUND MEMBER
         ST    R8,FIRSTSCR             SAVE IN FIRSTSCR
         BAL   R14,RPFTPUT             WRITE THE SCREEN
         B     RPF021                  PROCESS THE SCREEN
RPF038   EQU   *                       PROCESS 'TOP' COMMAND
         CLC   SCREEN(3),=C'TOP'       TOP ENTERED ?
         BE    RPFTOP                  YES: PROCESS COMMAND
         CLC   SCREEN(2),=C'T '        TOP COMMAND (ALIAS 'T') ?
         BNE   RPF039                  NO: OTHER COMMANDS
RPFTOP   MVC   FIRSTSCR,GETMSTRT       FIRST LINE IS 1ST MEMBER
         BAL   R14,RPFTPUT             WRITE THE SCREEN
         B     RPF021                  AND PROCESS THE SCREEN
RPF039   EQU   *
         CLC   SCREEN(6),=C'RETURN'    RETURN COMMAND ENTERED ?
         BNE   RPF041                  NO: PROCESS OTHERS
         OI    INFCODE2,$RETURN        SET RETURN INDICATOR
         B     RETURN                  AND TERMINATE
RPF041   EQU   *                       PROCESS 'END ' COMMAND
         CLC   SCREEN(3),=C'END'       END COMMAND ?
         BE    RETURN                  BACK TO CALLER
         CLI   SCREEN,C' '             NOTHING ENTERED ?
         BE    RPF043                  GO ON
         MVC   MSG5,ERRDTXT            INVALID COMMAND
         MVC   REP5,SCREEN             REPEAT COMMAND IN ERROR
         BAL   R14,RPFTPUT             PUT THE SCREEN
         B     RPF021                  PROCESS THE SCREEN
RPF043   EQU   *
         MVI   MSG5,C'-'               CLEAR PAUSE IF PRESENT
         MVC   MSG5+1(21),MSG5
         BAL   R14,RPFTPUT
         B     RPF021
         TITLE 'ROUTINE TO LOCATE THE MODULE IN THE MASTERFILE'
FINDMEM  DS    0H
         ST    R14,FINDR14
         CLC   MODULE(8),=CL8'*'          INDEX LISTING?
         BE    INDEX00
         MVC   FAIRMOPS(7),=C'0000000'
         MVC   FAIRROPS(3),=C'000'     MOVE READ OPTIONS
         LA    R15,LIBMOD              FAIRMOD ROUTINE
         BALR  R14,R15                 EXEC THIS ROUTINE
         CLI   MODRES,C'0'
         BE    MEMFOUND
         LA    R15,LIBCLOSE            LOAD ROUTINE ADDRESS
         BALR  R14,R15                 EXEC THIS ROUTINE
         MVC   MSG5,ERR5TXT
         LA    R15,8
         B     FIND099
         TITLE 'ROUTINE TO READ THE MODULE INTO THE WORKSPACE'
MEMFOUND DS    0H
         MVC   MEMBER,MODULE           MOVE LIB MODULE NAME IN COMMAREA
         MVC   COMMMOD,MODULE          MOVE LIB MODULE NAME IN COMMAREA
READCARD EQU   *
         LA    R15,LIBREC              READ ROUTINE
         BALR  R14,R15                 EXEC THIS ROUTINE
         MVC   RTNCODE,F0000
         CLI   RECRES,C'0'
         BE    MEMPUT
         CLI   RECRES,C'1'
         BE    CLOSE
         MVC   ERR6CODE(1),RECRES      MOVE READ CODE
         MVC   MSG5,ERR6TXT
         LA    R15,LIBCLOSE            LOAD ROUTINE ADDRESS
         BALR  R14,R15                 EXEC THIS ROUTINE
         LA    R15,8                   RC=8
         B     FIND099                 END OF ROUTINE
         USING WORKSPCE,R2             ADDRESS WORKSPACE RECORD
MEMPUT   L     R2,LASTREC              LAST RECORD IN WORKSPACE
         LA    R2,NEXTENT(R2)          NEXT RECORD
         C     R2,GETMEND              END OF WORKSPACE REACHED ?
         BH    WSFULL                  YES: BRANCH
         MVC   WORKDATA,RECRES+X'78'   MOVE RECORD INTO WORKSPACE
         MVC   WORKSLIN,BLANKS         BLANK LINE NUMBER ON SCREEN
         XC    WORKFLGS,WORKFLGS       CLEAR FLAGS
         ST    R2,LASTREC              NEW LAST RECORD POINTER
         B     READCARD            READ NEXT CARD
WSFULL   MVC   RTNCODE,F0004       MARK IN RETURN CODE
         B     CLOSE
         DROP  R2
*
CLOSE    EQU   *
         LA    R15,LIBCLOSE            LOAD ROUTINE ADDRESS
         BALR  R14,R15                 EXEC THIS ROUTINE
         XR    R15,R15             CLEAR RETURNCODE
FIND099  EQU   *
         L     R14,FINDR14
         BR    R14
         TITLE 'CREATE LIBRARIAN INDEX OF MASTER IN WORKSPACE'
INDEX00  DS    0H
         MVC   MEMBER,=CL8'LBRINDEX'
         MVC   MODULE,BLANKS
INDEX00A DS    0H
         MVC   FAIRMOPS(8),=C'10000000'   SEE LIBFAIR MANUAL
         LA    R15,LIBMOD              FAIRMOD ROUTINE
         BALR  R14,R15                 EXEC THIS ROUTINE
         CLI   MODRES,C'0'
         BE    INDEX01
         CLI   MODRES,C'1'         END OF FILE ?
         BE    INDEX99
         MVC   ERR6CODE(1),MODRES      MOVE ERROR CODE
         MVC   MSG2,ERR6TXT
         LA    R15,LIBCLOSE            LOAD ROUTINE ADDRESS
         BALR  R14,R15                 EXEC THIS ROUTINE
         LA    R15,8                   SET RETURNCODE
         B     FIND099
INDEX01  L     R8,LASTREC              LAST RECORD IN WORKSPACE
         LA    R8,NEXTENT(R8)          NEXT RECORD
         C     R8,GETMEND              END OF WORKSPACE REACHED ?
         BH    INDEX02                 YES: BRANCH
         MVC   0(NEXTENT,R8),BLANKS    CLEAR LINE
         XC    LPREFIX,LPREFIX         CLEAR PREFIX
         MVC   LMEMBR,MODRES+X'C'      MOVE MODULE NAME
         MVC   MODULE,MODRES+X'C'      SETUP FIELD MODULE FOR NEXT MOD
         MVC   LPGMR,MODRES+X'10C'     PGMR NAME
         MVC   LDESCR,MODRES+X'BC'     DESCRIPTION FIELD
         MVC   LINPUT,MODRES+X'123'    UNPACK NUMBER OF CARDS
         AP    COUNTER,=P'1'           Increase module counter     @rp1
         CLI   COMMAND,C'2'            Tape master file ?          @rp1
         BE    DATEUPD                 Y: date upd = date added    @rp1
         CLI   MODRES+3,C'0'           UPDATED ?
         BNE   DATEUPD                 YES: MOVE DATE AND TIME
         MVC   LDATE(14),=CL14'Not updated' Tell it to the user    @rp1
         B     NODATE              BRANCH
DATEUPD  MVC   LDAY,MODRES+X'20' MOVE
         MVI   LDAY+2,C'/'              DATE
         MVC   LMND,MODRES+X'22'        LAST
         MVI   LMND+2,C'/'                      UPDATE
         MVC   LYEAR,MODRES+X'24'                  IN WORKSPC
         MVC   LHOUR,MODRES+X'26'      MOVE TIME
         MVI   LHOUR+2,C':'                  LAST UPDATE
         MVC   LMIN,MODRES+X'28'                  IN WORKSPC
NODATE   ST    R8,LASTREC              NEW LAST RECORD POINTER
         B     INDEX00A                READ NEXT CARD
INDEX02  MVC   RTNCODE,F0004           MARK IN RETURN CODE
         B     INDEX99                 End of routine              @rp1
*
INDEX99  EQU   *
         MVC   HEADCTR,=X'402020202120' Move edit pattrn           @rp1
         ED    HEADCTR,COUNTER         Make counter readable       @rp1
         B     CLOSE
         TITLE 'OPEN MASTER FILE, THIS ROUTINE IS 24 BIT MODE'
LIBOPEN  DS    0H
         ST    R14,SAVE14OP            SAVE REG 14
         CALL  FAIROPN,(FAIRWKAR,OPENRES,FAIROCMD,FAIROOPS),VL
         L     R14,SAVE14OP            RESTORE REG 14
         BR    R14                     RETURN
         TITLE 'CLOSE MASTER FILE, THIS ROUTINE IS 24 BIT MODE'
LIBCLOSE DS    0H
         ST    R14,SAVE14CL            SAVE REG 14
         CALL  FAIRCLS,(FAIRWKAR,CLOSERES),VL
         L     R14,SAVE14CL            RESTORE REG 14
         BR    R14                     RETURN
         TITLE 'READ LIBRARIAN INDEX. THIS ROUTINE IS 24 BIT MODE'
LIBMOD   DS    0H
         ST    R14,SAVE14MD            SAVE REG 14
         CALL  FAIRMOD,(FAIRWKAR,MODRES,MODULE,FAIRMOPS),VL
         L     R14,SAVE14MD            RESTORE REG 14
         BR    R14                     RETURN
         TITLE 'READ LIBRARIAN RECORDS. THIS ROUTINE IS 24 BIT MODE'
LIBREC   DS    0H
         ST    R14,SAVE14RC            SAVE REG 14
         CALL  FAIRREC,(FAIRWKAR,RECRES,FAIRROPS),VL
         L     R14,SAVE14RC            RESTORE REG 14
         BR    R14                     RETURN
         TITLE 'WRITE A RECORD TO RPFEDT1. ROUTINE IS IN 24 BIT MODE'
PUTIT    DS    0H
         ST    R14,SAVE14PU            SAVE REGISTER
         PUT   EDITDCB,RECORD          WRITE RECORD
         L     R14,SAVE14PU            RESTORE REG 14
         BR    R14                     RETURN
         TITLE 'READ A RECORD FROM RPFEDT1. ROUTINE IS IN 24 BIT MODE'
GETIT    DS    0H
         ST    R14,SAVE14GE            SAVE RETURN ADDRESS
         GET   EDITDCB                 READ (RECORD IN REG 1)
         LA    R1,0(R1)                MAKE A CLEAN ADDRESS
         XR    R15,R15                 RC= 0000: RECORD READ.
         B     GET099                  BRANCH
GET003   EQU   *
         LA    R15,4                   RC= 0004 END OF FILE
GET099   EQU   *
         L     R14,SAVE14GE            RESTORE REG 14
         BR    R14                     RETURN TO CALLER
         TITLE 'TPUT MODIFIED SCREEN'
RPFTPUT  EQU   *                       ROUTINE TO WRITE SCREEN
*---------------------------------------------------------------------*
*        REGISTER USAGE:                                              *
*                                                                     *
*        R3    NUMBER OF LINES ON THE SCREEN (20/28/39)               *
*        R4    ADDRESS OF SCREEN TO BE TPUTTED.                       *
*        R8    CURRENT ADDRESS OF MEMBERLIST IN WORKSPACE.            *
*------------------------------------------ (C)-2003 SKYBIRD SYSTEMS -*
*
         ST    R14,PUTR14              SAVE RETURN REG
         LA    R4,LNE5                 BEGINADDRES LINE
         L     R8,FIRSTSCR             FIRST LINE ON SCREEN
         L     R3,#LINES               NUMBER OF LINES
RPF101   EQU   *                       *START LOOP*
         MVI   8(4),C' '               BLANK                       @rp1
         MVC   14(8,R4),BLANKS               THE FIELDS            @rp1
         MVC   27(53,R4),BLANKS                          SCR       @rp1
         MVC   83(15,R4),BLANKS                             een    @rp1
         C     R8,LASTREC              PAST LASTREC ?
         BH    RPF110
         MVC   14(8,R4),LMEMBR         Module name                 @rp1
         MVC   27(30,R4),LDESCR        Description                 @rp1
         MVC   58(14,R4),LDATE         Last updated                @rp1
         MVC   73(5,R4),LINPUT         Input records               @rp1
         MVC   80(3,R4),=AL3(TURQ)     Default turquoise           @rp1
         CLI   LPGMR,C'*'              Is it a message ?           @rp1
         BNE   *+10                    No: do not change color     @rp1
         MVC   80(3,R4),=AL3(WHITE)    Else change it into white   @rp1
*+10                                                               @rp1
         MVC   83(15,R4),LPGMR         Programmers name            @rp1
         LA    R8,NEXTENT(R8)          NEXT ENTRY IN MEMBAREA
RPF110   LA    R4,LNE5ENT(R4)          Next line on screen         @rp1
         BCT   R3,RPF101               NEXT LINE
         TM    SW,$ERASE               SHOULD THE SCREEN BE ERASED?
         BNO   NOERAS                  NO: SKIP ERASE
         NI    SW,255-$ERASE           MARK ERASE OFF
         TPUT  ERASE,L'ERASE,FULLSCR   ERASE THE SCREEN
NOERAS   DS    0H
         L     R2,TPUTLEN              LENGTH TO BE WRITTEN     28.07
         TPUT  SCR5TXT,(R2),FULLSCR    WRITE SCREEN             28.07
         L     R14,PUTR14              RESTORE REG 14
         BR    R14
         TITLE 'PROCESS THE OPERATION CODES ENTERED'
RPFSCRN  EQU   *                       SCRATCH AND RENAME MEMS
         L     R8,FIRSTSCR
         ST    R14,GETR14              SAVE REGISTER 14
         LA    R3,SCREEN               LOAD GOTTEN SCREEN
         LA    R3,24(R3)               SKIP COMMAND AREA
         L     R4,#LINES               MAX 18 LINES
         MVC   BUFFER(24),SCREEN       SAVE COMMAND
RPF201   OC    0(9,R3),BLANKS          XLATE TO CAPS
         CLI   1(R3),C' '              BLANK IN MEMBER (LAST SCREEN)
         BE    RPF299                  YES IGNORE OPERATION
         CLI   0(R3),C' '              NO OPERATION ?
         BE    RPF299                  YES IGNORE OPERATION
         CLI   0(R3),C'D'              DELETE ENTERED ?
         BNE   RPF205                  NO: TEST OTHER COMMANDS
         MVC   MODULE,1(R3)            SET MODULE NAME
         MVC   COMMMOD,1(R3)
         OI    SW,$CHANGE+$ERASE
         MVC   CMDAREA(07),=C'NOALLOC' MARK ALREADY ALLOCATED
         LINK  EP=RPFLIB01,PARAM=((11)),VL=1
         CLC   RTNCODE,F0000           DELETE OK ?
         BE    RPF202                  YES BRANCH
         MVC   LPGMR(15),=CL15'*NOT-DEL'    MARK NOT DELETED
         XC    RTNCODE,RTNCODE         CLEAR RTNCODE
         B     RPF299
RPF202   MVC   LPGMR(15),=CL15'*DELETED'
         B     RPF299
RPF205   EQU   *                       RENAME MEMBER
         CLI   0(R3),C'R'             RENAME ?
         BNE   RPF206                  TEST OTHER FUNCS IF NOT
         OI    SW,$CHANGE
         B     RPF299                  BYPASS RENAME
RPF206   EQU   *                       PRINT  MEMBER
         CLI   0(R3),C'P'              PRINT ?
         BNE   RPF209                  NO TEST OTHER FUNCTIONS
         OI    SW,$CHANGE              SET FLAG
         TM    INFCODE,$NOTMP          NO TEMPORARY DS UNDER RPFEDT1 ?
         BNO   RPF206A                 PRESENT: BRANCH
         MVC   LPGMR(15),=CL15'*PRINT-N/A' MOVE MESSAGE
         B     RPF299                  NEXT ENTRY
RPF206A  EQU   *
         LA    R15,LIBOPEN             LOAD ROUTINE ADDRESS
         BALR  R14,R15                 OPEN MASTER FILE
         CLI   OPENRES,C'0'
         BE    RPF207
         MVC   ERR4CODE(1),OPENRES  MOVE ERROR CODE INTO MESSAGE
         MVC   MSG5,ERR4TXT        ERROR IN OPENING MASTERFILE, CODE X
RPF206B  MVC   LPGMR(15),=CL15'*Print-err'                         @rp1
         B     RPF299                  TEST NEXT LINE ON SCREEN
RPF207   DS    0H
         MVC   MODULE,LMEMBR           MOVE MEMBERNAME
         MVC   FAIRMOPS(7),=C'0000000'
         MVC   FAIRROPS(3),=C'000'     READ OPTIONS
         LA    R15,LIBMOD              FAIRMOD ROUTINE
         BALR  R14,R15                 EXEC THIS ROUTINE
         CLI   MODRES,C'0'
         BE    RPF208
         LA    R15,LIBCLOSE            LOAD ROUTINE ADDRESS
         BALR  R14,R15                 EXEC THIS ROUTINE
         MVC   MSG5,ERR5TXT            MOVE ERROR MESSAGE
         B     RPF206B
RPF208   EQU   *
         BAL   R14,RPFPRT
         LTR   R15,R15                 PRINT OK ?
         BNZ   RPF206B                 NO: ISSUE ERROR
         MVC   LPGMR(15),=CL15'*Printed'                           @rp1
         B     RPF299                  TEST NEXT LINE ON SCREEN
RPF209   EQU   *                       SHOW MEMBER
         CLI   0(R3),C'B'              BROWSE ?
         BNE   RPF213                  INVALID OPER.
         OI    SW,$CHANGE              MARK CHANGES ON
         TM    INFCODE,$NOTMP          NO TEMPORARY DATASET AVL ?
         BNO   RPF209A                 AVL: BRANCH
         MVC   LPGMR(15),=CL15'*Browse N/A'                        @rp1
         B     RPF299                  NEXT ENTRY IF POSSIBLE
RPF209A  EQU   *                       SHOW MEMBER
         OI    SW,$ERASE               SET MOD BITS
         BAL   R14,BROWSE              SHOW THE MEMBER
         TM    INFCODE2,$RETURN        =n/=n.n cmd given in BROWSE @rp1
         BO    RETURN                  Y: return immediately       @rp1
         LTR   R15,R15                 SHOW OK ?
         BZ    RPF210                  YES: BRANCH
         MVC   LPGMR(15),=CL15'*Not-browsed'                       @rp1
         B     RPF299                  NEXT ENTRY IF POSSIBLE
RPF210   DS    0H
         MVC   LPGMR(15),=CL15'*Browsed'                           @rp1
         B     RPF299                  NEXT ENTRY IF POSSIBLE
RPF213   CLI   0(3),C'E'               EDIT SELECTED ?
         BNE   RPF219                  BRANCH IF NOT
         TM    INFCODE,$NOTMP          NO TEMPORARY DS UNDER RPFEDT1 ?
         BNO   RPF214                  PRESENT: BRANCH
         MVC   LPGMR(15),=CL15'*EDIT-N/A' MOVE MESSAGE
         OI    SW,$CHANGE              SET FLAG
         B     RPF299                  NEXT ENTRY
RPF214   DS    0H
         OI    SW,$CHANGE+$ERASE       SET MOD BITS
         BAL   14,EDIT           SAVE WORKSPACE AND GOTO EDIT
         TM    INFCODE2,$RETURN        =n/=n.n cmd given in EDIT?  @rp1
         BO    RETURN                  Return immediately          @rp1
         LTR   R15,R15                 EDIT OK ?
         BZ    RPF215                  YES: BRANCH
         MVC   LPGMR(15),=CL15'*Not-EDIT'                          @rp1
         B     RPF299                  NEXT ENTRY
RPF215   MVC   LPGMR(15),=CL15'*Edited'                            @rp1
         B     RPF299                  NEXT ENTRY
RPF219   DS    0H
         CLI   0(3),C'C'               COPY SELECTED ?
         BNE   RPF231                  BRANCH IF NOT
         TM    INFCODE,$NOTMP          NO TEMPORARY DS UNDER RPFEDT1 ?
         BNO   RPF220                  PRESENT: BRANCH
         MVC   LPGMR(15),=CL15'*COPY-N/A' MOVE MESSAGE
         OI    SW,$CHANGE              SET FLAG
         B     RPF299                  NEXT ENTRY
RPF220   DS    0H
         OI    SW,$CHANGE+$ERASE       SET MOD BITS
         OI    SW,$COPY                MARK COPY ONLY
         BAL   14,EDIT           SAVE WORKSPACE AND GOTO EDIT
         LTR   R15,R15                 EDIT OK ?
         BZ    RPF221                  YES: BRANCH
         MVC   LPGMR(15),=CL15'*Not-copied'                        @rp1
         B     RPF299                  NEXT ENTRY
RPF221   MVC   LPGMR(15),=CL15'*Copied'                            @rp1
         B     RPF299                  NEXT ENTRY
RPF231   DS    0H
         MVC   LPGMR(15),=CL15'*Sel B,C,D,E,P'                     @rp1
         OI    SW,$CHANGE              MARK MODIFICATIONS ON
         B     RPF299                  NEXT ENTRY
RPF299   EQU   *
         LA    R3,9(R3)                NEXT ENTRY INPUT
         LA    R8,NEXTENT(R8)          NEXT ENTRY OUTPUT
         BCT   R4,RPF201               NEXT ENTRY
         L     R14,GETR14              RESTORE R14
         BR    R14
         TITLE 'BROWSE LIBRARIAN MODULES'
***** REG 1 POINTS TO THE MODULENAME TO BE SHOWN
***** REG 15 CONTAINS RETURNCODE
BROWSE   DS    0H                     REGISTER 1 CONTAINS A(MEMBERNAME)
         LR    R2,R1                   SAVE REG 1
         STM   R0,R15,SAVESHW          SAVE REGISTERS
BRO001   EQU   *
         LA    R15,LIBOPEN             ADDRESS ROUTINE
         BALR  R14,R15                 BRANCH TO THIS ROUT.
         CLI   OPENRES,C'0'
         BE    BRO003
         MVC   ERR4CODE(1),OPENRES  MOVE ERROR CODE INTO MESSAGE
         MVC   MSG5,ERR4TXT        ERROR IN OPENING MASTERFILE, CODE X
         LA    R15,8                   GIVE RETURNCODE
         B     BRO999                  TERMINATE ROUTINE
BRO003   EQU   *
         MVC   MODULE,LMEMBR           MOVE MEMBERNAME
         MVC   FAIRMOPS(8),=C'00000000'   SEE LIBFAIR MANUAL
         MVC   FAIRROPS(3),=C'100'     MOVE READ OPTIONS
         LA    R15,LIBMOD              FAIRMOD ROUTINE
         BALR  R14,R15                 EXEC THIS ROUTINE
         CLI   MODRES,C'0'
         BE    BRO005                  OKE ?
         MVC   MSG5,ERR5TXT
         LA    R15,8                   SET RETURNCODE
         B     BRO999                  END OF ROUTINE
BRO005   EQU   *
         OPEN  (EDITDCB,(OUTPUT))      OPEN TEMPORARY FILE
BRO007   EQU   *
         LA    R15,LIBREC              READ ROUTINE
         BALR  R14,R15                 EXEC THIS ROUTINE
         CLI   RECRES,C'0'
         BE    BRO009
         CLI   RECRES,C'1'
         BE    BRO011
         MVC   ERR6CODE(1),RECRES
         MVC   MSG5,ERR6TXT
         CLOSE EDITDCB                 CLOSE RPFEDT1 FILE
         FREEPOOL EDITDCB
         LA    R15,8
         B     BRO999
BRO009   EQU   *
         MVC   RECORD,RECRES+X'78'     MOVE RECORD
         LA    R15,PUTIT               WRITE ROUTINE ADDRESS
         BALR  R14,R15                 EXEC THIS ROUTINE
         B     BRO007                  NEXT RECORD
BRO011   EQU   *
         CLOSE EDITDCB                 CLOSE RPFEDT1 FILE
         FREEPOOL EDITDCB
         MVC   CMDAREA,BLANKS          BLANK CMDAREA
         MVC   CMDAREA(8),=CL8'RPFEDT1' MOVE DDNAME TO BROWSE
         LINK  EP=RPFBRO,PARAM=((11))  LINK TO BROWSE
         CLC   RTNCODE,F0000           RC= 0000 ?
         BE    BRO997                  YES: BRANCH
         MVC   MSG5,CMDAREA            MOVE MESSAGE OF RPFBRO
         LA    R15,8                   LOAD RETURN CODE
         B     BRO999                  END OF ROUTINE
BRO997   EQU   *
         XR    R15,R15
BRO999   DS    0H
         LR    R2,R15                  SAVE REG 15
         LA    R15,LIBCLOSE            LOAD ROUTINE ADDRESS
         BALR  R14,R15                 EXEC THIS ROUTINE
         LR    R15,R2                  RESTORE R15
         MVC   CMDAREA,BLANKS
         LM    R0,R14,SAVESHW          RESTORE THE REGISTERS
         BR    R14
         TITLE 'EDIT A LIBRARIAN MODULE'
*---------------------------------------------------------------------*
*                                                                     *
*        E D I T   EDIT THE SPECIFIED MEMBER.                         *
*                  THIS ROUTINE EXECUTES THE FOLLOWING FUNCTIONS      *
*                  REG 8 POINTS TO THE CURRENT LIB  ENTRY IN THE      *
*                     WORKSPACE                                       *
*                  1. SAVE RPFLIB WORKSPACE ON DDNAME RPFEDT1         *
*                  2. READ MEMBER INTO WORKAREA                       *
*                  3. INVOKE THE EDITOR (RPFEDIT).                    *
*                  4. RESTORE WORKSPACE.                              *
*                  5. SAVE IF ASKED FOR MEMBER VIA RPFLIB01.          *
*                                                                     *
*------------------------------------------ (C)-2003 SKYBIRD SYSTEMS -*
EDIT     DS    0H
         STM   R0,R15,SAVESHW          SAVE ALL THE REGISTERS
         NI    SW,255-$EDITERR         SET FLAG OFF
         MVC   SFIRSTSC,FIRSTSCR       SAVE FIRSTSCR
         OPEN  (EDITDCB,(OUTPUT))      OPEN TEMP DATASET
         L     R3,FIRSTREC             FIRSTREC POINTER
         LA    R4,NEXTENT              LENGTH OF ENTRY
         L     R5,LASTREC              LASTREC POINTER
         LA    R5,1(R5)                PLUS 1 FOR BXLE
EDIT01   EQU   *
         MVC   RECORD,0(R3)            MOVE RECORD
         LA    R15,PUTIT               LOAD ROUTINE ADDRESS
         BALR  R14,R15                 EXEC THIS ROUTINE
         BXLE  R3,R4,EDIT01            LOOP UNTIL ALL DONE
         CLOSE EDITDCB                 CLOSE TEMP DATASET
         L     R2,GETMSTRT
         ST    R2,FIRSTREC
         ST    R2,FIRSTSCR
         S     R2,RLENGTH
         ST    R2,LASTREC
         XC    EPNEXT,EPNEXT           INIT EPNEXT FIELD
         MVC   APPEND(3),DEFAPP        DEFAULT APPEND
         MVC   NUMBERED(3),DEFNUM      DEFAULT NUMBERED
         MVC   FOLD(3),DEFOLD          DEFAULT FOLD
         LA    R15,LIBOPEN             ADDRESS ROUTINE
         BALR  R14,R15                 BRANCH TO THIS ROUT.
         CLI   OPENRES,C'0'
         BE    EDIT02
         MVC   ERR4CODE(1),OPENRES  MOVE ERROR CODE INTO MESSAGE
         MVC   MSG5,ERR4TXT        ERROR IN OPENING MASTERFILE, CODE X
         OI    SW,$EDITERR             MARK ERROR
         B     EDIT11                  TERMINATE ROUTINE
EDIT02   MVC   MODULE,LMEMBR
         BAL   R14,FINDMEM             LEES MEMBER INTO WA
         LTR   R15,R15                 OK ?
         BZ    EDIT03                  YES: BRANCH
         OI    SW,$EDITERR             MARK ERROR
         B     EDIT11                  TERMINATE ROUTINE
EDIT03   DS    0H
         TM    SW,$COPY                COPY ONLY?
         BZ    EDIT03A                 NO: CONTINUE
         NI    SW,255-$COPY
         MVC   CMDAREA(8),MODULE       MOVE MODULE NAME
         L     R15,EPSAVE              EP OF RPFSAVE
         ST    R11,SUBPARM             SAVE PARAMETER
         LA    R1,SUBPARM              PARAMETER
         BALR  R14,R15                 INVOKE RPFSAVE
         MVC   CMDAREA,BLANKS
         B     EDIT11                  RESTORE WORKSPACE
EDIT03A  DS    0H
         OI    INFCODE,NOTLOAD         SET NOLOAD
         ST    R11,SUBPARM             SAVE PARAMETER
         LA    R1,SUBPARM              PICKUP PARAMETER
         L     R15,EPEDIT              ENTRY POINT RPFEDIT
         BALR  R14,R15                 BRANCH TO EDITOR
         CLC   EPNEXT,F0000            EPNEXT FLD ? (RPFSAVE)
         BNE   EDIT04                  YES:
         MVC   CMDAREA,BLANKS          BLANK 'CMDAREA'
         B     EDIT11                  SKIP SAVE
EDIT04   DS    0H
         TM    INFCODE3,$OSSAVE        SAVE ON OS DATASET ?
         BNO   EDIT06                  NO: BRANCH
         L     R15,EPNEXT              POINT TO RPFSAVE
         BALR  R14,R15
         NI    INFCODE3,255-$OSSAVE    RESET FLAG
         B     EDIT11                  CONTINUE
EDIT06   DS    0H
         MVC   CMDAREA(07),=C'NOALLOC' MARK ALREADY ALLOCATED
         LINK  EP=RPFLIB01,PARAM=((11)),VL=1
         XC    EPNEXT,EPNEXT           CLEAR EPNEXT FIELD
EDIT11   L     R4,GETMSTRT             START ADDRESS WORKSPACE
         L     R5,GETMLEN              LENGTH OF WORKSPACE
         LR    R6,R4                   2ND OPERAND IS 1ST OP.
         XR    R7,R7                   CLEAR REG 7
         ICM   R7,8,=X'40'             PADDING CHAR IS BLANK
         MVCL  R4,R6                   CLEAR WORKSPACE
         L     R3,GETMSTRT             PICKUP WORKSPACE BEGIN
         ST    R3,FIRSTREC             SAVE IN 'FIRSTREC'
         S     R3,RLENGTH              MINUS 88
         ST    R3,LASTREC              SAVE IN 'LASTREC'
         L     R3,FIRSTREC             RELOAD REG 3
         OPEN  EDITDCB                 OPEN SAVED WORKSPACE
EDIT13   EQU   *
         LA    R15,GETIT               ROUTINE ADDRESS
         BALR  R14,R15                 EXEC THIS ROUTINE
         LTR   R15,R15                 EOF ?
         BNZ   EDIT91                  YES: BRANCH
         MVC   0(80,R3),0(R1)          MOVE RECORD
         ST    R3,LASTREC              AND RESET 'LASTREC'
         LA    R3,NEXTENT(R3)          SET TO NEXT ENTRY
         B     EDIT13                  NEXT ENTRY
EDIT91   CLOSE EDITDCB                 CLOSE THE DCB
         FREEPOOL EDITDCB               AND FREE THE BUFFERS
EDIT99   EQU   *
         NI    INFCODE,255-NOTLOAD     RESET FLAG
         XR    R15,R15                 CLEAR RETURNCODE
         TM    SW,$EDITERR             ERROR DETECTED ?
         BNO   *+8                     NO: BRANCH
         LA    R15,8                   RC=0008
         MVC   FIRSTSCR,SFIRSTSC       RESTORE FIRSTSCR
         LM    R0,R14,SAVESHW          RESTORE THE REGISTERS
         BR    R14                     GO BACK TO CALLER
         TITLE 'PRINT THE OUTPUT LISTING'
*---------------------------------------------------------------------*
*                                                                     *
*        R P F P R T:   ROUTINE TO PRINT THE OUTPUT LISTING           *
*        IN THIS SECTION A THE LIBRARIAN MODULE WILL BE MOVED         *
*        TO RPFEDT1. AND THE BROWSE FUNCTION (RPFBRO) WILL BE INVOKED *
*        IF THE ALLOCATION FAILS THE A RETURNCODE WILL BE PLACED      *
*        IN REGISTER 15.                                              *
*        R8 POINTS TO THE TO BE PRINTED MODULE ENTRY IN THE WORKSPC   *
*                                                                     *
*------------------------------------------ (C)-2003 SKYBIRD SYSTEMS -*
RPFPRT   EQU   *
         STM   R0,R15,SAVESHW          SAVE REGISTERS
         OPEN  (EDITDCB,(OUTPUT))      OPEN RPFEDT1
PRT001   EQU   *
         LA    R15,LIBREC              READ ROUTINE
         BALR  R14,R15                 EXEC THIS ROUTINE
         CLI   RECRES,C'0'             READ LIBRARIAN OK ?
         BE    PRT003                  YES: BRANCH
         CLI   RECRES,C'1'             END OF FILE ?
         BE    PRT005                  YES: BRANCH
         MVC   ERR6CODE(1),RECRES      MOVE LIBRARIAN ERROR CODE
         MVC   MSG5,ERR6TXT            MOVE ERROR MESSAGE
         LA    R15,LIBCLOSE            LOAD ROUTINE ADDRESS
         BALR  R14,R15                 EXEC THIS ROUTINE
         CLOSE EDITDCB                 CLOSE DATASET
         FREEPOOL EDITDCB              AND FREE THE BUFFERS
         LA    R15,8                   RETURN CODE
         B     PRTEND
PRT003   EQU   *
         MVC   RECORD,RECRES+X'78'     MOVE RECORD
         LA    R15,PUTIT               WRITE RECORD
         BALR  R14,R15
         B     PRT001                  READ NEXT RECORD
PRT005   EQU   *
         LA    R15,LIBCLOSE            LOAD ROUTINE ADDRESS
         BALR  R14,R15                 EXEC THIS ROUTINE
         CLOSE EDITDCB                 CLOSE DATASET
         FREEPOOL EDITDCB              AND FREE THE BUFFERS
         MVC   CMDAREA,BLANKS          BLANK CMD AREA FOR RPFBRO
         MVC   CMDAREA(8),=CL8'RPFEDT1' MOVE DDNAME TO BROWSE
         MVC   CMDAREA+8(8),=CL8'PRINT' MARK PRINT ONLY FOR BROWSE
         LINK  EP=RPFBRO,PARAM=((11))  LINK TO BROWSE (RC=R15)
         MVC   CMDAREA,BLANKS          BLANK CMDAREA
         LTR   R15,R15                 OK ?
         BZ    PRTEND                  YES: BRANCH
         MVC   MSG5,ERRFTXT            MOVE ERROR MESSAGE
PRTEND   EQU   *                       END OF SUBMIT ROUTINE
         LM    R0,R14,SAVESHW          RESTORE REGISTERS
         BR    R14                     BACK TO CALLER
         TITLE 'CONVERT SCREEN ROUTINE'
*---------------------------------------------------------------------*
*                                                                     *
*        C O N V I N:        CONVERT A TGET ASIS SCREEN TO NORMAL     *
*        THE SBA-S AND ATTRIBUTE BYTES WILL BE REMOVED AND THE        *
*        REST WILL BE PLACED IN 'SCREEN' THE AIDBYTE WILL BE          *
*        PLACED IN 'AIDBYTE'                                          *
*        THE LENGTH OF THE OUTPUT WILL BE PLACED IN REGISTER 1        *
*        REGISTER 2 POINTS TO THE AIDBYTE.                            *
*        REGISTER 5 POINTS TO THE OUTPUT SCREEN AREA                  *
*                                                                     *
*------------------------------------------ (C)-2003 SKYBIRD SYSTEMS -*
         SPACE 2
CONVIN   EQU   *                       CONVERT SCREEN ROUTINE
         ST    R14,CONVR14             SAVE R14
         L     R3,COMMSCR              INPUT SCREEN
         CNOP  0,4                     ALIGN ON FULLWORD
         TGET  (3),2048,ASIS           READ THE SCREEN
         MVC   0(1,R2),0(R3)           SAVE AIDBYTE
         XR    R2,R2                   INIT OUTPUT LENGTH
         LR    R4,R1                   SAVE INPUT LENGTH
         SH    R4,=H'3'                SKIP AID AND CURSOR ADDRESS
         C     R4,F0000                REGISTER ZERO
         BNH   CONV099                 NOT HIGH: END OF ROUTINE
         LA    R3,3(R3)
*        OUTPUT SCREEN IS POINTED BY R5
CONV001  CLI   0(3),X'11'              SET BUFFER ADDRESS ?
         BE    CONV003                 YES: SKIP NEXT 3 BYTES INPUT
         MVC   0(1,R5),0(R3)           MOVE INPUT BYTE
         LA    R3,1(R3)                NEXT BYTE INPUT
         LA    R2,1(R2)                COUNT OUTPUT BYTES
         LA    R5,1(R5)                NEXT BYTE OUTPUT
         BCT   R4,CONV001              TEST NEXT BYTE
         B     CONV099                 END OF ROUTINE
CONV003  LA    R3,3(R3)                SKIP 3 BYTES INPUT
         BCTR  R4,0                    MINUS 1 BCT
         BCTR  R4,0                    MINUS 1 BCT
         BCT   R4,CONV001              TEST NEXT BYTE
CONV099  LR    R1,R2                   OUTPUT LENGTH IN REGISTER 1
         L     R14,CONVR14             RESTORE R14
         BR    R14                     RETURN TO CALLER
         TITLE 'P F K  SEARCH ROUTINE'
*---------------------------------------------------------------------*
*                                                                     *
*        P F K    ROUTINE TO CHECK THE AIDBYTE WITH THE PFK DEFINITION*
*                 IN COMMAREA IF THE PFK IS FOUND THE COMMAND         *
*                 IN THE PFK WILL BE PLACED INTO THE FIELD POINTED    *
*                 BY REGISTER 2                                       *
*        REGISTER 1 POINTS TO THE AIDBYTE.                            *
*        REGISTER 2 POINTS TO THE COMMAND AREA OF THE SCREEN          *
*                                                                     *
*        RETURNCODES: 00 PFK FOUND CONFIRMATION IS NO                 *
*                     04 PFK FOUND CONFIRMATION IS YES                *
*                     08 PFK NOT DEFINED OR NOT FOUND                 *
*                     12 INVALID PFK DEFINITION                       *
*                                                                     *
*------------------------------------------ (C)-2003 SKYBIRD SYSTEMS -*
         SPACE 2
PFK      ST    R14,PFKR14              SAVE REGISTER 14
         LA    R4,DEFPFK01             PFK DEFINITIONS IN COMMAREA
         LA    R5,24                   MAX 24 PFKS
PFK01    CLC   0(1,R4),0(R1)           TEST PFK WITH AIDBYTE
         BE    PFK05                   YES: FOUND
         LA    R4,26(R4)               NEXT PFK
         BCT   R5,PFK01                TEST NEXT PFK
         LA    R15,8                   PFK NOT FOUND
         B     PFK99                   END OF ROUTINE
PFK05    CLI   1(R4),C'X'              PFK NOT DEFINED ?
         BNE   PFK06                   Yes: proceed                @rp1
         LA    R15,8                   RETURNCODE
         B     PFK99                   END OF ROUTINE
PFK06    DS    0H                      CLEAR INPUT COMMAND FIELD   @rp1
         MVC   0(24,R2),BLANKS         CLEAR OUTPUT COMMAND FIELD  @rp1
         L     R1,COMMSCR              PICKUP UNFORMATTED SCREEN   @rp1
         CLI   6(R1),X'94'             MAX OPERAND (SCROLL) ?      @rp1
         BE    PFK06A                  YES: BRANCH                 @rp1
         CLI   6(R1),C'M'              MAX OPERAND (SCROLL) ?      @rp1
         BNE   PFK08                   NO: IGNORE                  @rp1
PFK06A   EQU   *                                                   @rp1
         CLC   2(3,R4),=C'SCF'         SCROLL FORWARD ?            @rp1
         BNE   PFK07                   NO: TRY SCB                 @rp1
         MVC   0(6,R2),=C'BOTTOM'      YES: BOTTOM COMMAND         @rp1
         B     PFK99                                               @rp1
PFK07    CLC   2(3,R4),=C'SCB'         SCROLL BACKWARD ?           @rp1
         BNE   PFK08                   NO: IGNORE                  @rp1
         MVC   0(3,R2),=C'TOP'         YES: TOP COMMAND            @rp1
         B     PFK99                                               @rp1
PFK08    DS    0H                      MOVE PFK COMMAND INTO REP AR@rp1
         MVC   0(24,R2),2(R4)          MOVE PFK COMMAND IN SCREEN
         CLI   1(R4),C'N'              NO CONFIMATION ?
         BNE   PFK09                   YES: RC= 0000
         LA    R15,0
         B     PFK99
PFK09    CLI   1(R4),C'Y'              CONFIRMATION ?
         BNE   PFK11                   NO: INVALID PFK DEFINITION
         LA    R15,4                   RC= 0004 CONFIRMATION.
         B     PFK99
PFK11    LA    R15,12                  INVALID PFK DEFINITION
         B     PFK99                   END OF ROUTINE
PFK99    L     R14,PFKR14              RESTORE R14
         BR    R14                     BACK TO CALLER
         TITLE 'END OF ROUTINE'
RETURN   DS    0H
         XC    RTNCODE,RTNCODE
         L     R13,SAVE+4
         RETURN (14,12),RC=0
         LTORG
         TITLE 'TEMPORARY SAVE AND PRINT DCB'
         PRINT NOGEN
EDITDCB  DCB   DDNAME=RPFEDT1,DSORG=PS,MACRF=(GL,PM),EODAD=GET003,     *
               RECFM=FB,LRECL=80,BLKSIZE=12960                     @rp1
         PRINT GEN
         TITLE 'ALLOCATION CONTROL BLOCKS'
         SYALLOC MF=L
         TITLE 'WORKAREAS AND CONSTANTS'
         DC    C' '
INTHI    DC    X'1DF8'                 HI-INTENS DISPLAY PROT NOMDT
INTLOW   DC    X'1DF0'                 LOW-INTENS DISPLAY PROT NOMDT
DWB      DC    D'0'
*
*
F0000    DC    F'0'                0000
F0004    DC    F'4'
F0008    DC    F'8'
LOC      CAMLST NAME,MSTRFILE,,LOCAREA
LOCAREA  DS    CL6
LOCVOL   DS    CL6
LOCREST  DS    CL253
OBTCMLST CAMLST SEARCH,MSTRFILE,MSTRVOL,DSCB1
DSCB1    DS    CL140
*
BUFFER   DC    CL120' '            BUFFER, INPUT AREA
RLENGTH  DC    A(NEXTENT)
COMMAND  DC    C' '
MSTRFILE DC    CL44' '             CONTAINS MASTEFILE NAME AFTER COMPL
MODULE   DC    CL8' '              CONTAINS MEMBERNAME AFTER COMPLETION
MSTRVOL  DC    CL6' '              CONTAINS VOLSER AFTER COMPLETION.
FAIRWKAR DS    5F                      20 BYTE WORKAREA OF MASTERFILE
FAIROCMD DC    CL4' '                  RESERVED
FAIROOPS DC    CL20'00020000000000000000'   OPTIONS FOR FAIROPN
FAIRMOPS DC    CL20'00000000000000000000'   OPTIONS FOR FAIRMOD
FAIRROPS DC    CL20'00000000000000000000'   OPTIONS FOR FAIRREC
FAIRDDN  DC    CL8'MASTER'
OPENRES  DC    30F'-1'                 120 BYTES OPEN AREA OF FAIR
MODRES   DS    CL800
RECRES   DS    CL400
CLOSERES DC    XL8'00'
SW       DC    X'00'
$CHANGE  EQU   128
$ERASE   EQU   64
$EDITERR EQU   32
$COPY    EQU   16
         TITLE 'VARIABLES AND CONTROL BLOCKS'
SCRLEN   DS    F
PUTR14   DS    F
SUBPARM  DS    F
FINDR14  DS    F
GETR14   DS    F
SFIRSTSC DS    F
SAVESHW  DS    16F
CONVR14  DS    F
PFKR14   DS    F
SAVE14OP DS    F
SAVE14CL DS    F
SAVE14MD DS    F
SAVE14RC DS    F
SAVE14PU DS    F
SAVE14GE DS    F
RECORD   DS    CL86
F213     DC    F'213'                  LENGTH OF 'SCREEN' 3278 MOD 2
F285     DC    F'285'                  LENGTH OF 'SCREEN' 3278 MOD 3
F384     DC    F'384'                  LENGTH OF 'SCREEN' 3278 MOD 4
NEXTSCR  DS    F                       20/28/39 * NEXTENT
#LINES   DS    F                       CONTAINS 20/28/39
TPUTLEN  DS    F                       LENGTH TO BE WRITTEN
AIDBYTE  DS    C
AIDBYTE2 DS    C
SCREEN   DS    CL500
COUNTER  DS    PL3                     To count libr. modules      @rp1
ERR2TXT  DC    CL22'--------Invalid option'                        @rp1
ERR3TXT  DC    CL22'Alloc error XXXX on DS'                        @rp1
ERR3CODE EQU   ERR3TXT+12
ERR4TXT  DC    CL22'----Open error Code= X'                        @rp1
ERR4CODE EQU   ERR4TXT+20
ERR5TXT  DC    CL22'--Module not in MASTER'                        @rp1
ERR6TXT  DC    CL22'Error in read, Code= X'                        @rp1
ERR6CODE EQU   ERR6TXT+21
ERR7TXT  DC    CL22'Dataset not in catalog'                        @rp1
ERR8TXT  DC    CL22'-Dataset not on volume'                        @rp1
ERR1TXT  DC    CL22'--Scroll had no effect'                        @rp1
ERR9TXT  DC    CL22'-------PFK not defined'                        @rp1
ERRATXT  DC    CL22'PFK definition invalid'                        @rp1
ERRCTXT  DC    CL22'---Enter locate string'                        @rp1
ERRDTXT  DC    CL22'-------Invalid command'                        @rp1
ERRETXT  DC    CL22'-Logic error, Rc= 0501'                        @rp1
ERRFTXT  DC    CL22'----Alloc error SYSOUT'                        @rp1
         TITLE 'SCREEN FORMATS.'
SCR2TXT  DC    X'27F5C01140401DF8' WRITE ERASE LOCK/ R01,C00
         DC    CL44'RPF LIBRARIAN Masterfile selection: Userid= '  @rp1
SCR2UID  DS    CL7
         DC    CL6'------'
         DC    X'11407A'           R01,C59
MSG2     DC    CL22'----------------------'
         DC    X'11C150',X'1DF8',C'Option  ===>',X'1DC113'         @rp1
         DC    C' ',X'1DF0'
         DC    X'11C3F3',AL3(WHITE),C'1  ',AL3(TURQ)     R04,C04   @rp1
         DC    C'ALLOC       - ',AL3(GREEN)                        @rp1
         DC    C'Allocate MASTER file'                             @rp1
         DC    X'11C5C3',AL3(WHITE),C'2  ',AL3(TURQ)     R05,C04   @rp1
         DC    C'ALLOC Tape  - ',AL3(GREEN)                        @rp1
         DC    C'Allocate tape MASTER'                             @rp1
         DC    X'11C6D3',AL3(WHITE),C'X  ',AL3(TURQ)     R06,C04   @rp1
         DC    C'EXIT        - ',AL3(GREEN)                        @rp1
         DC    C'Return to previous menu'                          @rp1
         DC    X'114FC1'           R13,C02                         @rp1
         DC    AL3(YELLOW),C'MASTER file information:'             @rp1
         DC    X'11D160'           R15,C01
         DC    X'1DF5',AL3(TURQ),C'Module      =',X'1DF9'          @rp1
SCR2MEM  DC    CL8'*',X'1DF0',C'Index'                             @rp1
         DC    X'11D2F0'           R16,C01
         DC    X'1DF5',C'MASTER file =',X'1DC9',AL3(RED)           @rp1
SCR2DSN  DC    CL44' ',X'1DF0'     DSNAME
         DC    X'11D440'           R17,C01
         DC    X'1DF5',AL3(TURQ),C'Volume      =',X'1DC9',AL3(RED) @rp1
SCR2VOL  DC    CL6' ',X'1DF5',AL3(TURQ),C'  DDname=',X'1DF0' VOLUME@rp1
         DC    AL3(WHITE)                                          @rp1
SCR2DDN  DC    C'MASTER  ',AL3(TURQ) DD-name                       @rp1
SCR2LAST DC    X'11FFFF1DF0',C'Hit ',AL3(WHITE)                    @rp1
         DC    C'PF03/15',AL3(TURQ)                                @rp1
         DC    C' to return'                                       @rp1
SCR2LEN  EQU   *-SCR2TXT           LENGTH SCREEN
ERASE    DC    X'27F5C01140401D40'
SCR5TXT  DC    X'27F1C21140401DF8'
         DC    CL16'Modules of LIBR '                              @rp1
HEADMSTR DC    CL12'masterfile: '                                  @rp1
SCR5DSN  DC    CL30' '
         DC    X'11407A'           R01,C59
MSG5     DC    CL22'----------------------'
         DC    X'11C150',X'1DF8',C'Cmd =>',X'1DC113'               @rp1
REP5     DC    CL24' ',X'1DF0'
         DC    X'11C25F',X'1DF0',AL3(YELLOW)  R02,C80
         DC    C' C Module   Description                    '      @rp1
HEADUPD  DC    C'Updated        Rcrds  Pgmr/msg'                   @rp1
HEADCTR  DS    CL6                                                 @rp1
         DC    X'1DF0',X'11C3F0'   R04,C01
LNE5     DC    X'1DC9',X'11C3F1',AL3(RED),C' '                     @rp1
         DC    X'1DF1',AL3(GREEN),CL8' ',X'1DF0',AL3(TURQ)         @rp1
         DC    CL53' ',AL3(WHITE),CL15' '                          @rp1
LNE5ENT  EQU   *-LNE5                                              @rp1
         DC    X'1DC9',X'11C5C1',AL3(RED),C' '
         DC    X'1DF1',AL3(GREEN),CL8' ',X'1DF0',AL3(TURQ)
         DC    CL53' ',AL3(WHITE),CL15' '
         DC    X'1DC9',X'11C6D1',AL3(RED),C' '
         DC    X'1DF1',AL3(GREEN),CL8' ',X'1DF0',AL3(TURQ)
         DC    CL53' ',AL3(WHITE),CL15' '
         DC    X'1DC9',X'11C761',AL3(RED),C' '
         DC    X'1DF1',AL3(GREEN),CL8' ',X'1DF0',AL3(TURQ)
         DC    CL53' ',AL3(WHITE),CL15' '
         DC    X'1DC9',X'11C8F1',AL3(RED),C' '
         DC    X'1DF1',AL3(GREEN),CL8' ',X'1DF0',AL3(TURQ)
         DC    CL53' ',AL3(WHITE),CL15' '
         DC    X'1DC9',X'114AC1',AL3(RED),C' '
         DC    X'1DF1',AL3(GREEN),CL8' ',X'1DF0',AL3(TURQ)
         DC    CL53' ',AL3(WHITE),CL15' '
         DC    X'1DC9',X'114BD1',AL3(RED),C' '
         DC    X'1DF1',AL3(GREEN),CL8' ',X'1DF0',AL3(TURQ)
         DC    CL53' ',AL3(WHITE),CL15' '
         DC    X'1DC9',X'114C61',AL3(RED),C' '
         DC    X'1DF1',AL3(GREEN),CL8' ',X'1DF0',AL3(TURQ)
         DC    CL53' ',AL3(WHITE),CL15' '
         DC    X'1DC9',X'114DF1',AL3(RED),C' '
         DC    X'1DF1',AL3(GREEN),CL8' ',X'1DF0',AL3(TURQ)
         DC    CL53' ',AL3(WHITE),CL15' '
         DC    X'1DC9',X'114FC1',AL3(RED),C' '
         DC    X'1DF1',AL3(GREEN),CL8' ',X'1DF0',AL3(TURQ)
         DC    CL53' ',AL3(WHITE),CL15' '
         DC    X'1DC9',X'1150D1',AL3(RED),C' '
         DC    X'1DF1',AL3(GREEN),CL8' ',X'1DF0',AL3(TURQ)
         DC    CL53' ',AL3(WHITE),CL15' '
         DC    X'1DC9',X'11D161',AL3(RED),C' '
         DC    X'1DF1',AL3(GREEN),CL8' ',X'1DF0',AL3(TURQ)
         DC    CL53' ',AL3(WHITE),CL15' '
         DC    X'1DC9',X'11D2F1',AL3(RED),C' '
         DC    X'1DF1',AL3(GREEN),CL8' ',X'1DF0',AL3(TURQ)
         DC    CL53' ',AL3(WHITE),CL15' '
         DC    X'1DC9',X'11D4C1',AL3(RED),C' '
         DC    X'1DF1',AL3(GREEN),CL8' ',X'1DF0',AL3(TURQ)
         DC    CL53' ',AL3(WHITE),CL15' '
         DC    X'1DC9',X'11D5D1',AL3(RED),C' '
         DC    X'1DF1',AL3(GREEN),CL8' ',X'1DF0',AL3(TURQ)
         DC    CL53' ',AL3(WHITE),CL15' '
         DC    X'1DC9',X'11D661',AL3(RED),C' '
         DC    X'1DF1',AL3(GREEN),CL8' ',X'1DF0',AL3(TURQ)
         DC    CL53' ',AL3(WHITE),CL15' '
         DC    X'1DC9',X'11D7F1',AL3(RED),C' '
         DC    X'1DF1',AL3(GREEN),CL8' ',X'1DF0',AL3(TURQ)
         DC    CL53' ',AL3(WHITE),CL15' '
         DC    X'1DC9',X'11D9C1',AL3(RED),C' '
         DC    X'1DF1',AL3(GREEN),CL8' ',X'1DF0',AL3(TURQ)
         DC    CL53' ',AL3(WHITE),CL15' '
         DC    X'1DC9',X'115AD1',AL3(RED),C' '
         DC    X'1DF1',AL3(GREEN),CL8' ',X'1DF0',AL3(TURQ)
         DC    CL53' ',AL3(WHITE),CL15' '
         DC    X'1DC9',X'115B61',AL3(RED),C' '
         DC    X'1DF1',AL3(GREEN),CL8' ',X'1DF0',AL3(TURQ)
         DC    CL53' ',AL3(WHITE),CL15' '
         DC    X'1DC9',X'115CF1',AL3(RED),C' '
         DC    X'1DF1',AL3(GREEN),CL8' ',X'1DF0',AL3(TURQ)
         DC    CL53' ',AL3(WHITE),CL15' '
SCR524   EQU   *-SCR5TXT               3278/3279 MODEL 3 SECTION
         DC    X'1DC9',X'115EC1',AL3(RED),C' '
         DC    X'1DF1',AL3(GREEN),CL8' ',X'1DF0',AL3(TURQ)
         DC    CL53' ',AL3(WHITE),CL15' '
         DC    X'1DC9',X'115FD1',AL3(RED),C' '
         DC    X'1DF1',AL3(GREEN),CL8' ',X'1DF0',AL3(TURQ)
         DC    CL53' ',AL3(WHITE),CL15' '
         DC    X'1DC9',X'116061',AL3(RED),C' '
         DC    X'1DF1',AL3(GREEN),CL8' ',X'1DF0',AL3(TURQ)
         DC    CL53' ',AL3(WHITE),CL15' '
         DC    X'1DC9',X'1161F1',AL3(RED),C' '
         DC    X'1DF1',AL3(GREEN),CL8' ',X'1DF0',AL3(TURQ)
         DC    CL53' ',AL3(WHITE),CL15' '
         DC    X'1DC9',X'11E3C1',AL3(RED),C' '
         DC    X'1DF1',AL3(GREEN),CL8' ',X'1DF0',AL3(TURQ)
         DC    CL53' ',AL3(WHITE),CL15' '
         DC    X'1DC9',X'11E4D1',AL3(RED),C' '
         DC    X'1DF1',AL3(GREEN),CL8' ',X'1DF0',AL3(TURQ)
         DC    CL53' ',AL3(WHITE),CL15' '
         DC    X'1DC9',X'11E561',AL3(RED),C' '
         DC    X'1DF1',AL3(GREEN),CL8' ',X'1DF0',AL3(TURQ)
         DC    CL53' ',AL3(WHITE),CL15' '
         DC    X'1DC9',X'11E6F1',AL3(RED),C' '
         DC    X'1DF1',AL3(GREEN),CL8' ',X'1DF0',AL3(TURQ)
         DC    CL53' ',AL3(WHITE),CL15' '
SCR532   EQU   *-SCR5TXT          3278/3279 MODEL 4 SECTION
         DC    X'1DC9',X'11E8C1',AL3(RED),C' '
         DC    X'1DF1',AL3(GREEN),CL8' ',X'1DF0',AL3(TURQ)
         DC    CL53' ',AL3(WHITE),CL15' '
         DC    X'1DC9',X'11E9D1',AL3(RED),C' '
         DC    X'1DF1',AL3(GREEN),CL8' ',X'1DF0',AL3(TURQ)
         DC    CL53' ',AL3(WHITE),CL15' '
         DC    X'1DC9',X'116A61',AL3(RED),C' '
         DC    X'1DF1',AL3(GREEN),CL8' ',X'1DF0',AL3(TURQ)
         DC    CL53' ',AL3(WHITE),CL15' '
         DC    X'1DC9',X'116BF1',AL3(RED),C' '
         DC    X'1DF1',AL3(GREEN),CL8' ',X'1DF0',AL3(TURQ)
         DC    CL53' ',AL3(WHITE),CL15' '
         DC    X'1DC9',X'116DC1',AL3(RED),C' '
         DC    X'1DF1',AL3(GREEN),CL8' ',X'1DF0',AL3(TURQ)
         DC    CL53' ',AL3(WHITE),CL15' '
         DC    X'1DC9',X'116ED1',AL3(RED),C' '
         DC    X'1DF1',AL3(GREEN),CL8' ',X'1DF0',AL3(TURQ)
         DC    CL53' ',AL3(WHITE),CL15' '
         DC    X'1DC9',X'116F61',AL3(RED),C' '
         DC    X'1DF1',AL3(GREEN),CL8' ',X'1DF0',AL3(TURQ)
         DC    CL53' ',AL3(WHITE),CL15' '
         DC    X'1DC9',X'11F0F1',AL3(RED),C' '
         DC    X'1DF1',AL3(GREEN),CL8' ',X'1DF0',AL3(TURQ)
         DC    CL53' ',AL3(WHITE),CL15' '
         DC    X'1DC9',X'11F2C1',AL3(RED),C' '
         DC    X'1DF1',AL3(GREEN),CL8' ',X'1DF0',AL3(TURQ)
         DC    CL53' ',AL3(WHITE),CL15' '
         DC    X'1DC9',X'11F3D1',AL3(RED),C' '
         DC    X'1DF1',AL3(GREEN),CL8' ',X'1DF0',AL3(TURQ)
         DC    CL53' ',AL3(WHITE),CL15' '
         DC    X'1DC9',X'11F461',AL3(RED),C' '
         DC    X'1DF1',AL3(GREEN),CL8' ',X'1DF0',AL3(TURQ)
         DC    CL53' ',AL3(WHITE),CL15' '
SCR543   EQU   *-SCR5TXT
         TITLE 'RPFCOMM DSECT'
COMMAREA RPFCOMM
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
*
LINES21  EQU   (21*NEXTENT)            NEXT SCREEN IN MEMBER AREA
LINES29  EQU   (29*NEXTENT)            NEXT SCREEN IN MEMBER AREA
LINES40  EQU   (40*NEXTENT)            NEXT SCREEN IN MEMBER AREA
         TITLE 'LIBRARIAN INDEX AREA.'
MEMAREA  DSECT
LSTART   EQU   *
LPREFIX  DS    CL8                                                 @rp1
LMEMBR   DS    CL8                                                 @rp1
LPGMR    DS    CL15                                                @rp1
LDESCR   DS    CL30                                                @rp1
LINPUT   DS    CL5                                                 @rp1
LDATE    DS    0CL14                                               @rp1
LDAY     DS    CL2                                                 @rp1
         DS    C                                                   @rp1
LMND     DS    CL2                                                 @rp1
         DS    C                                                   @rp1
LYEAR    DS    CL2                                                 @rp1
         DS    C                                                   @rp1
LHOUR    DS    CL2                                                 @rp1
         DS    C                                                   @rp1
LMIN     DS    CL2                                                 @rp1
LMEML    EQU   *-LSTART
         END
