         MACRO
&NAME    SORT  &TAB,&LEN1,&LEN2,&ENTRY,&START,&TYPE=C,&ORDER=A
         LCLC  &L
&L       SETC  'L&SYSNDX'
.* THIS MACRO SORTS A CORE TABLE
.* AND USED IN THE RPF PROGRAMS FROM SKYBIRD SYSTEMS
.* TAB = ADDRESS TABLE
.* LEN1 = LENGTH OF 1 ENTRY
.* LEN2 = LENGTH OF SORT FIELD
.* ENTRY = NUMBER OF ENTRIES
.* START = OFFSET SORT FIELD IN ENTRY
.* TYPE = TYPE OF SORT (C=CHARACTER, P=PACKED)
.* ORDER = A OR D (A=ASCENDING, D=DESCENDING ORDER)
         AIF   ('&TAB' EQ '').FOUTADR
         AIF   ('&LEN1' EQ '').FOUTL1
         AIF   ('&LEN2' EQ '').FOUTL2
         AIF   ('&ENTRY' EQ '').FOUTENT
         AIF   ('&ORDER' EQ 'A').TEST1
         AIF   ('&ORDER' EQ 'D').TEST1
.FOUTOR  MNOTE 14,'***** ORDER SHOULD BE A (ASCENDING) OR D (DESCENDING*
               )'
         AGO   .FOUT
.TEST1   ANOP
         AIF   ('&TYPE' EQ 'C').CHAR
         AIF   ('&TYPE' EQ 'P').CHAR
         MNOTE 14,'***** TYPE NOT ''C'' OR ''P'''
.FOUT    MNOTE *,'***** NO MACRO EXPANSION.'
         MEXIT
.FOUTADR MNOTE 14,'***** WRONG TABLE ADDRESS.'
         AGO   .FOUT
.FOUTL1  MNOTE 14,'***** WRONG LENGTH 1.'
         AGO   .FOUT
.FOUTL2  MNOTE 14,'PPPPP WRONG LENGTH 2.'
         AGO   .FOUT
.FOUTENT MNOTE 14,'***** WRONG NUMBER OF ENTRIES.'
         AGO   .FOUT
.*
.* OPERANDS ARE GOOD.
.*
.*
.CHAR    ANOP
         CNOP  0,4            FULLWORD BOUNDARY.
&NAME    STM   3,4,&L.A
         B     &L.C
&L.A     DS    F
         DS    F
&L.F     DS    F
&L.B     DS    F
         AIF   ('&TAB'(1,1) EQ '(').TABREG1
&L.C     LA    3,&TAB
         AGO   .STORE3
.TABREG1 ANOP
&L.C     LR    3,&TAB(1)
.STORE3  ANOP
         ST    3,&L.B
         AIF   ('&ENTRY'(1,1) EQ '(').ENTRREG
         B     &L.E
&L.D     DC    A((&ENTRY-1)*&LEN1)
         AGO   .ADD3
.ENTRREG ANOP
         BCTR  &ENTRY(1),0
         MH    &ENTRY(1),=H'&LEN1'
         ST    &ENTRY(1),&L.D
         B     &L.E
&L.D     DS    F
.ADD3    ANOP
&L.E     L     4,&L.D
         AR    3,4
         ST    3,&L.F
         AIF   ('&TAB'(1,1) EQ '(').TABREG2
         LA    3,&TAB
         AGO   .LOAD4
.TABREG2 ANOP
         LR    3,&TAB(1)
.LOAD4   ANOP
         LA    4,&LEN1.(3)
         AIF   ('&TYPE' EQ 'P').PACKED
&L.H     CLC   &START.(&LEN2,3),&START.(4)
         AGO   .VERDER
.PACKED  ANOP
&L.H     CP    &START.(&LEN2,3),&START.(&LEN2,4)
.VERDER  ANOP
         AIF   ('&ORDER' EQ 'D').BR1
         BH    &L.G
         AGO   .BR2
.BR1     ANOP
         BL    &L.G
.BR2     ANOP
         LA    3,&LEN1.(3)
         LA    4,&LEN1.(4)
         C     3,&L.F
         BE    &L.I
         B     &L.H
&L.G     XC    0(&LEN1,3),0(4)
         XC    0(&LEN1,4),0(3)
         XC    0(&LEN1,3),0(4)
         S     3,=F'&LEN1'
         S     4,=F'&LEN1'
         C     3,&L.B
         BNL   &L.H
         A     3,=F'&LEN1'
         A     4,=F'&LEN1'
         B     &L.H
&L.I     LM    3,4,&L.A
         MEND
         PUNCH ' SETCODE AC(1)'
RPFMVCPY TITLE 'RPF, Move and Copy routine'
*---------------------------------------------------------------------*
*                                                                     *
*        MODULE         RPFMVCPY.                                     *
*                                                                     *
*        FUNCTION:      Present an allocation menu of two datasets    *
*                       (a From and a To dataset) and a menu to       *
*                       specify the operation M(ove) or C(copy).      *
*                       You also can specify to replace members or not*
*                       After succesful allocation the directory of   *
*                       the "From" dataset will be shown.             *
*                       By spefifying an "S" the member is selected   *
*                       to copy. After a screen is processed,         *
*                       IEBCOPY will be invoked to copy the members   *
*                       from the FROM dataset to the TO dataset.      *
*                       If Move is specified the members will be      *
*                       deleted from the FROM dataset                 *
*                                                                     *
*                       If IEBCOPY suffers a nonzero return code for  *
*                       some reason the output will be browsed.       *
*                                                                     *
*                       If 'dsn(*)' is specified in the allocation    *
*                       screen, all members will be copied and no     *
*                       member selection list will be presented       *
*                                                                     *
*                       RPFMVCPY Primary commands:                    *
*                       -  BOTTOM:   Scroll to last page  (Alias 'B') *
*                       -  END:      terminate MOVE/COPY              *
*                       -  L member  Locate at member 'member'.       *
*                       -  PFK:      Alter Program Function Keys.     *
*                       -  RETURN:   Terminate Move/Copy and return   *
*                                    to Main Menu                     *
*                       -  SCB:      Scroll 1 page backward.          *
*                       -  SCF:      Scroll 1 page foreward.          *
*                       -  TOP:      Scroll to first page (alias 'T') *
*                       -  =n or =n.n Return to RPFMAIN and exec.     *
*                          option 'n' or option 'n.n'                 *
*                                                                     *
*                       If the primary commands are preceded by an    *
*                       amphersand ('&&') the command will be repeated*
*                       in the command line after execution.          *
*                                                                     *
*        SUBROUTINES:   RPFPFK,   The PFK definition routine          *
*                       IEBCOPY,  IBM's copy routine                  *
*                                                                     *
*        Notes: The SYS1.AMODGEN macro library should be included.    *
*               Reg.10 points always to an entry in the workspace     *
*                                                                     *
*        LKED attribute: AC(1) needed for IEBCOPY                     *
*                                                                     *
*        Modifications:                                               *
*        May 4,2004 If member in TO ds exists give msg 'Replaced'  @rp1
*                                                                     *
*-------------------------------------- (C)-2004 Skybird Systems -----*
         SPACE 2
RPFMVCPY CSECT                         *
         SAVE  (14,12),,*              Save registers
         USING RPFMVCPY,R15            Get local addressability
         LA    R14,SAVE                New save area
         ST    R13,SAVE+4              Backward pointer
         ST    R14,8(R13)              Foreward pointer
         LR    R13,R14                 Exchange savearea
         DROP  R15                     Kill local addressability
         LA    R12,2048(R13)           2nd base register
         LA    R12,2048(R12)
         LA    R9,2048(R12)            3rd base register
         LA    R9,2048(R9)
         LA    R8,2048(R9)             4th base register
         LA    R8,2048(R8)
         USING SAVE,R13,R12,R9,R8      R13,R12,R9 and R8 are base
         B     RPFINITT                Branch around save area
*
SAVE     DC    18F'-1'                 SAVE AREA
         DC    CL8'&SYSDATE',C' ',CL8'&SYSTIME'
RPFINITT DS    0H
         L     R11,0(R1)               Load RPFCOMM area
         USING COMMAREA,R11            Get addressability RPFCOMM
         USING SPFDATA,R3              GET ADDRESSABILITY UDATA
         MVC   SCR1UID+38(7),USERID    User id in allocation screen
         MVC   SCR1DSNF,DSNAME
         MVC   SCR1VOLF,VOLUME
         MVC   SCR1DSNT,BLANKS
         MVC   SCR1VOLT,BLANKS
         MVC   SCR1REPL,COMMREPL       Default Replace from commarea
         MVI   MSG1,C'-'               Clear
         MVC   MSG1+1(L'MSG1-1),MSG1        message area
         MVI   MSG5,C'-'               CLEAR
         MVC   MSG5+1(L'MSG5-1),MSG5        MESSAGE AREA
         MVI   SW,X'00'                CLEAR SWITH
         CLC   COMMSIZE,=H'24'         24 lines gotten ?
         BE    START19                 YES: NORMAL 24X80 DISPLAY
         CLC   COMMSIZE,=H'32'         32 LINES GOTTEN ?
         BE    START17                 YES: 3278/79 MODEL 3
         CLC   COMMSIZE,=H'43'         43 lines gotten ?
         BNE   START19                 NOT ONE OF ABOVE MODEL 2 DISPLAY
START15  MVC   ERASE(2),=X'277E'       Generate write alternate
         MVC   SCR1TXT(2),=X'277E'     Generate write alternate
         MVC   SCRLEN,F704             Move length of output screen
         MVC   #LINES,=F'40'
         LA    R4,SCR543               Length of screen to write
         ST    R4,TPUTLEN              Store the result
         LA    R4,LINES40              40 * Nextent (88)
         ST    R4,NEXTSCR              Store the result
         B     START21
START17  MVC   ERASE(2),=X'277E'       Generate write alternate
         MVC   SCR1TXT(2),=X'277E'     Generate write alternate
         MVC   SCRLEN,F517             Move length of output screen
         MVC   #LINES,=F'29'
         LA    R4,SCR532               Lenght of screen
         ST    R4,TPUTLEN              Store the result
         LA    R4,LINES29              29 * NEXTENT (88)
         ST    R4,NEXTSCR              Store the result
         B     START21                 and branch
START19  MVC   ERASE(2),=X'27F5'       Generate write
         MVC   SCR1TXT(2),=X'27F5'     Generate write
         MVC   SCRLEN,F381             Move length of output screen
         MVC   #LINES,=F'21'
         LA    R4,SCR524               Length of screen to write
         ST    R4,TPUTLEN              Store the result
         LA    R4,LINES21              21 * NEXTENT (88)
         ST    R4,NEXTSCR              Store the result
START21  DS    0H
         STM   R8,R13,HEREADDR         Save for ESTAE
*---------------------------------------------------------------------*
*        Issue allocation screen, ask for FROM and TO dataset         *
*---------------------------------------------------------------------*
RESTART  DS    0H
         NI    SW,255-$ALLMEM          Copy/Move all members off
         SYALLOC FREE=RPFUT1,MF=E      Unallocate
         SYALLOC FREE=RPFUT2,MF=E                datasets (for sure)
         SYALLOC FREE=RPFIN,MF=E
         SYALLOC FREE=RPFPRINT,MF=E
         TPUT  SCR1TXT,SCR1LEN,FULLSCR
         MVC   BUFDSNF,BLANKS          Blank
         MVC   BUFVOLF,BLANKS               the
         MVC   BUFDSNT,BLANKS                  fields
         MVC   BUFVOLT,BLANKS
         MVC   BUFCMD,BLANKS
         L     R3,COMMSCR              Point to output buffer
         TGET  (3),300,ASIS            Read contents of scr1.
         LR    R4,R1                   Save length
*        Do a  TGET ASIS to obtain the AID byte
*        After the TGET ASIS remove the SBA'S from the output
         CLI   0(R3),X'F3'             PFK3 (END) pressed?
         BE    RETURN2                 YES: EXIT
         CLI   0(R3),X'C3'             PFK15 (END) pressed?
         BE    RETURN2                 YES: EXIT
         XR    R2,R2                   Init output length
         LR    R4,R1                   Save input length
         SH    R4,=H'3'                Skip AID and cursor address
         C     R4,F0000                Register zero?
         BNH   REMOVE9                 Not high: end of routine
         LA    R3,3(R3)
         L     R5,COMMSCR              Output screen
         LA    R5,2048(R5)             Point to second part
*        INPUT SCREEN IS POINTED TO BY R3
*        OUTPUT SCREEN IS POINTED TO BY R5
*        THE NEXT SECTION WILL REMOVE ALL THE SBA'S
REMOVE1  DS    0H
         CLI   0(R3),X'11'             SBA ?
         BE    REMOVE3                 Yes: skip next 3 bytes
REMOVE2  DS    0H
         MVC   0(1,R5),0(R3)           Move input byte
         LA    R3,1(R3)                Next byte input
         LA    R2,1(R2)                Count output bytes
         LA    R5,1(R5)                NEXT BYTE OUTPUT
         BCT   R4,REMOVE1              Test next byte
         B     REMOVE9                 End of REMOVE routine
REMOVE3  DS    0H
         LA    R3,3(R3)                Skip 3 bytes input
         BCTR  R4,0                    Minus 1 BCT
         BCTR  R4,0                    Minus 1 BCT
         C     R4,F0000                All done ?
         BNH   REMOVE9                 Yes: terminate conversion
         BCT   R4,REMOVE1              Test next byte
REMOVE9  DS    0H
         LR    R1,R2                   Output length in register 1
         L     R5,COMMSCR              Output buffer
         LA    R5,2048(R5)             Point to second part
         OC    0(256,R5),BLANKS        XLATE to uppercase
         OC    256(256,R5),BLANKS      XLATE to uppercase
DYNALC01 DS    0H
         MVC   SCR5FDSN,BLANKS         Clear from data set name
         MVC   SCR5TDSN,BLANKS         Clear To data set name
         LTR   R1,R1                   No input received (erase EOF)?
         BZ    RESTART                 YES: refresh screen
         LR    R6,R1                   Length of buffer
         LA    R4,BUFCMD               Point to option field
DYNALC03 DS    0H
         CLC   0(7,R5),=C'DSNAME='     Search for DSN of from dataset
         BE    DYNALC05                Found: process To DSN
         MVC   0(1,R4),0(R5)           1 char. command
         LA    R5,1(R5)                Next byte
         LA    R4,1(R4)                Next byte in command
         BCT   R6,DYNALC03             Examine next bytes
         B     RESTART                 Clear key pressed.
DYNALC05 DS    0H
         LA    R5,7(R5)                Point after 'Dsname='
         LA    R4,BUFDSNF              Point to from data set name
DYNALC07 DS    0H
         CLC   0(7,R5),=C'VOLUME='     Search for volume FROM
         BE    DYNALC09                Found: process volume
         MVC   0(1,R4),0(R5)           1 char From dsn
         LA    R5,1(R5)                Next character input
         LA    R4,1(R4)                Next character output
         BCT   R6,DYNALC07             Examine next bytes
         B     RESTART                 Clear key pressed
DYNALC09 DS    0H
         LA    R5,7(R5)                Point after 'Volume='
         LA    R4,BUFVOLF              Point to volume
DYNALC11 DS    0H
         CLC   0(7,R5),=C'DSNAME='     Search for DSN of to dataset
         BE    DYNALC13                Found: process end of screen
         MVC   0(1,R4),0(R5)           1 char. FROM volume
         LA    R5,1(R5)                Next character input
         LA    R4,1(R4)                Next character output
         BCT   R6,DYNALC11             Examine next bytes
         B     RESTART                 Clear key pressed
DYNALC13 DS    0H
         LA    R5,7(R5)                Point after 'Dsname='
         LA    R4,BUFDSNT              Point to TO data set name
DYNALC15 DS    0H
         CLC   0(7,R5),=C'VOLUME='     Search for volume TO
         BE    DYNALC17                Found: process volume
         MVC   0(1,R4),0(R5)           1 char TO dsn
         LA    R5,1(R5)                Next character input
         LA    R4,1(R4)                Next character output
         BCT   R6,DYNALC15             Examine next bytes
         B     RESTART                 Clear key pressed
DYNALC17 DS    0H
         LA    R5,7(R5)                Point after 'Volume='
         LA    R4,BUFVOLT              Point to volume
DYNALC19 DS    0H
         CLC   0(10,R5),=C'REPLACE LI' Search for Replace Like members
         BE    DYNALC20                Found: process replace
         MVC   0(1,R4),0(R5)           1 char volume to dataset name
         LA    R5,1(R5)                Next character input
         LA    R4,1(R4)                Next character output
         BCT   R6,DYNALC19             Examine next bytes
         B     RESTART                 Clear key pressed
DYNALC20 DS    0H
         LA    R5,21(R5)       Point after 'replace like members:'
         LA    R4,BUFREPL              Point to volume
DYNALC21 DS    0H
         CLC   0(9,R5),=C'YES OR NO'   Search for End of screen
         BE    DYNALC22                Found: All done
         MVC   0(1,R4),0(R5)           1 char replace
         LA    R5,1(R5)                Next character input
         LA    R4,1(R4)                Next character output
         BCT   R6,DYNALC21             Examine next bytes
         B     RESTART                 Clear key pressed
DYNALC22 DS    0H
         MVC   SCR1DSNF,BUFDSNF        Move the
         MVC   SCR1DSNT,BUFDSNT                fields
         MVC   SCR1VOLF,BUFVOLF                      in the
         MVC   SCR1VOLT,BUFVOLT                            scr.
         MVC   SCR1REPL,BUFREPL                               een
         MVC   SCR1CMD(3),BUFCMD       Move command in screen
         CLI   BUFCMD,C'M'             Move command?
         BE    DYNALC23                Yes: branch (OK)
         CLI   BUFCMD,C'C'             Move command?
         BE    DYNALC23                Yes: branch (OK)
         MVC   MSG1,ERRFTXT            Move error message (invalid opt)
         B     RESTART                 Write allocation screen again
DYNALC23 DS    0H
         CLC   BUFDSNF,BLANKS          Dataset specified ?
         BNE   DYNALC25                Yes: branch
         MVC   ERR2TXT+10(4),=C'From'  From dataset not specified
         MVC   MSG1,ERR2TXT            Move error message
         B     RESTART                 Write allocation screen again
DYNALC25 DS    0H
         CLC   BUFDSNT,BLANKS          Dataset specified ?
         BNE   DYNALC26                Yes: branch
         MVC   ERR2TXT+10(4),=C'To  '  To dataset not specified
         MVC   MSG1,ERR2TXT            Move error message
         B     RESTART                 Write allocation screen again
DYNALC26 DS    0H
         CLC   =C'NO',BUFREPL          No specified or defaulted?
         BE    DYNALC27                Yes: ok
         CLC   =C'YES',BUFREPL         Yes specified?
         BE    DYNALC27                Yes: ok
         MVC   MSG1,ERRHTXT            Replace not YES or NO
         B     RESTART                 Write allocation screen again
DYNALC27 DS    0H
         LA    R1,BUFDSNF              Point to from dataset and vol.
         BAL   R14,ALLOC               Alloc and check dataset
         B     DYNALC29(15)            Process branchlist
DYNALC29 DS    0H
         B     DYNALC37                OK!
         B     DYNALC31                Data set not allocated
         B     DYNALC33                Data set not on volume
         B     DYNALC35                Data set not partitioned
DYNALC31 DS    0H
         MVC   ERR6TXT(4),=C'From'
         MVC   MSG1,ERR6TXT            Move error message
         B     RESTART                 Write allocation screen again
DYNALC33 DS    0H
         MVC   ERRBTXT(4),=C'From'
         MVC   MSG1,ERRBTXT            Move error message
         B     RESTART                 Write allocation screen again
DYNALC35 DS    0H
         MVC   ERR5TXT+2(4),=C'From'
         MVC   MSG1,ERR5TXT            Move error message
         B     RESTART                 Write allocation screen again
DYNALC37 DS    0H
         LA    R1,BUFDSNT              Point to TO dataset and vol.
         BAL   R14,ALLOC               Alloc and check dataset
         B     DYNALC39(15)            Process branchlist
DYNALC39 DS    0H
         B     DYNALC47                OK!
         B     DYNALC41                Data set not allocated
         B     DYNALC43                Data set not on volume
         B     DYNALC45                Data set not partitioned
DYNALC41 DS    0H
         MVC   ERR6TXT(4),=C'To  '
         MVC   MSG1,ERR6TXT            Move error message
         B     RESTART                 Write allocation screen again
DYNALC43 DS    0H
         MVC   ERRBTXT(4),=C'To  '
         MVC   MSG1,ERRBTXT            Move error message
         B     RESTART                 Write allocation screen again
DYNALC45 DS    0H
         MVC   ERR5TXT+2(4),=C'To  '
         MVC   MSG1,ERR5TXT            Move error message
         B     RESTART                 Write allocation screen again
DYNALC47 DS    0H
         CLC   BUFDSNF(50),BUFDSNT     Datasets equal?
         BNE   DYNALC48                No: Ok
         MVC   MSG1,ERRJTXT            Dataset cannot be equal
         B     RESTART                 Write allocation screen again
DYNALC48 DS    0H
*---------------------------------------------------------------------*
*
*    Check if DCB From dataset matches with DCB To dataset
*    RECFM=U in both datasets and BLKSIZE From <= BLKSIZE To = Match
*    RECFM=F(B) in both datasets and LRECL both equal = Match
*    RECFM=V(B) in both datasets and LRECL both equal = Match
*    RECFM=FBA in From and RECFM=FB in To = no match
*    RECFM=VBA in From and RECFM=VB in To = no match
*    RECFM/LRECL/BLKSIZE in both dataset all equal = always match
*
*-------------------------------------- (C)-2004-Skybird Systems -----*
         CLC   DSNFRECF,DSNTRECF       Does record format match?
         BNE   DYNALC53                No: give error msg and branch
         TM    DSNFRECF,DCBRECU        Record fm = U
         BNO   DYNALC49                No: test match blksize+lrecl
         CLC   DSNFBLK,DSNTBLK         Test block sizes
         BH    DYNALC53                Error if input > output
         B     DYNALC51                No: continue
DYNALC49 DS    0H
         CLC   DSNFLREC(2),DSNTLREC    Does lrecl match
         BNE   DYNALC53                Error if not
DYNALC51 DS    0H
         SYALLOC DDN=RPFIN,DSN=SYSINDSN,PRI=5,SEC=6,SPTYP=CYL,         X
               DISP1=NEW,UNITA=COMMSTOR,                               X
               MF=E
         SYALLOC DDN=RPFPRINT,PRI=7,SEC=6,SPTYP=CYL,DSN=PRTDSN,        X
               UNITA=COMMSTOR,DISP1=MOD,MF=E,DISP2=DELETE
         MVC   SCR5FDSN,BUFDSNF        Move to
         MVC   SCR5TDSN,BUFDSNT               PDS screen
         MVC   INF2TXT+16(6),=C'copied' default copied
         MVC   MSGC+10(4),=C'Copy'     Default Copy
         CLI   BUFCMD,C'M'             Move command
         BNE   PDS000                  No: finished
         MVC   INF2TXT+16(6),=C'moved ' Else moved
         MVC   MSGC+10(4),=C'Move'     Else move
         B     PDS000                  Display screen
DYNALC53 DS    0H
         MVC   MSG1,ERR7TXT            Move error message
         B     RESTART                 Write allocation screen again
*
PDS000   DS    0H
         ESTAE RECOVER,PARAM=(11)      Establish ESTAE routine
         ZAP   MEMCNT,=P'0'            Init member counter
         MVC   FIRSTSCR,GETMSTRT       Save startaddr in FIRSTSCR
         L     R3,GETMSTRT             Set pointer to FIRSTREC equal
         ST    R3,FIRSTREC             )to start of workspace
         L     R10,GETMSTRT            And load into R10
         LR    R1,R10                  Copy
         S     R1,RLENGTH              MINUS 88
         ST    R1,LASTREC              Initial empty workspace
         USING MEMBAREA,R10            GET ADDRESSABLILITY
         MVC   RPFUT1(DCBLEN),MODELDCB Move modeldcb
         MVC   RPFUT2(DCBLEN),MODELDCB Move modeldcb
         MVI   RPFUT1+DCBRECFM-IHADCB,X'80' Recfm=F
         MVC   RPFUT1+DCBBLKSI-IHADCB(2),=XL2'0100' BLKSIZE=256
         MVI   RPFUT2+DCBRECFM-IHADCB,X'80' Recfm=F
         MVC   RPFUT2+DCBBLKSI-IHADCB(2),=XL2'0100' BLKSIZE=256
         MVC   RPFUT2+DCBDDNAM-IHADCB(8),=CL8'RPFUT2'
         OPEN  RPFUT1                  Open pds for input
PDS001   DS    0H                      Set PDS002 Routine in amode24
*        LA    R1,PDS002               ROUTINE ADDRESS
*        BSM   R0,R1                   GOTO 24 BIT MODE
PDS002   DS    0H
         READ  DECB,SF,RPFUT1,DIRAREA,'S'
         CHECK DECB                    Wait for completion
*        L     R1,=A(PDS003+X'80000000') PICKUP ROUTINE ADDRESS
*        BSM   R0,R1                   GOTO 31 BIT MODE ADDRESSING
PDS003   DS    0H
         LA    R3,DIRAREA              Load directory block
         LR    R5,R3                   Same address in R5
         AH    R5,0(R3)                Add # of usable bytes
         BCTR  R5,0                    Minus 1 for BXLE
         LA    R3,2(R3)                Point to first member
PDS004   DS    0H
         CLI   0(R3),X'FF'             EOF ?
         BE    PDS017                  Close data set
PDS005   DS    0H
         C     R10,GETMEND             End of workspace reached ?
         BNH   PDS007                  No: continue
         UNPK  ERR8TXT+09(5),MEMCNT    Convert to zoned in message
         OI    ERR8TXT+13,X'F0'        Clear sign
         MVC   MSG5,ERR8TXT            Workspace truncated
         B     PDS017                  Force EOF
PDS007   DS    0H
         MVC   PREFIX(NEXTENT),BLANKS    BLANK AREA
         XC    PREFIX,PREFIX           Blank the prefix
         MVC   MEMBR,0(R3)             Store member into area
         MVC   INPTTR(3),8(R3)         Move TTR to workspace
         MVI   INPHL,NONHLM            Move highlite CH (NO HL MDT)
         AP    MEMCNT,=P'1'            Add member
         MVI   ALIAS,C' '              BLANK Alias field
         TM    11(R3),X'80'            Alias entry ?
         BNO   PDS009                  No: branch
         MVI   ALIAS,C'A'              Mark alias
PDS009   DS    0H
         MVC   SAVEC,11(R3)            Save 'C' byte
         NI    11(R3),B'00011111'      Zere first 3 bitS of C byte
         TM    RPFUT1+DCBRECFM-IHADCB,DCBRECF+DCBRECV
         BNZ   PDS013                  NO: branch
*
*        IN THIS SECTION WILL BE LOOKED IF THE PDS-MEMBER CONTAINS
*        LINK EDIT USERDATA.
*
         SYCONVHX IN=SAVEC,OUT=INPC,L=1 SET 'C' BYTE IN WORKSPACE
         XR    R4,R4                   CLEAR REG 4
         IC    R4,11(R3)               INSERT 'C' BYTE
         SLL   R4,1                    * 2 BECAUSE HALFWORD COUNTER
         LTR   R4,R4                   NOT USERDATA PRESENT ?
         BZ    PDS015                  Yes: branch
         LA    R6,INPUDATA             POINT TO USERDATA FIELD IN WS
         CLM   R4,1,=X'10'             More than 16 ?
         BNH   *+8                     NO BRANCH
         LA    R4,16                   SET TO 16
         LA    R7,12(R3)               POINT TO USERDATA OF MEMBER
PDS011   EQU   *
         SYCONVHX IN=(7),OUT=(6),L=1   Convert to EBCDIC
         LA    R7,1(R7)                Point to next byte input
         LA    R6,2(R6)                Point to next bytes output
         BCT   R4,PDS011               Loop untal all done
         B     PDS015                  Branch
PDS013   DS    0H
*---------------------------------------------------------------------*
*                                                                    -*
*        IN THE NEXT SECTION WILL BE LOOKED IF THE MEMBER IS SAVED
*        BY ISPF (SYSTEM PRODUCTIVITY FACILITY) OR WITH THE NEW FORMAT
*        USERDATA OF RPF, IF SO IT WILL BE DISPLAYED.
*
*-------------------------------------- (C)-2004 Skybird Systems -----*
ISPFTEST DS    0H
         CLI   11(R3),X'0F'            Is length 15 halfwords ?
         BL    PDS015                  Low: no ISPF/RPF userdata
         CLI   SPFTIME,X'23'           Test hrs field (UNSIGNED PACKED)
         BH    PDS015                  High: no time field
         CLI   SPFTIME+1,X'59'         Test minutes field (UNSIGN PKD)
         BH    PDS015                  High: no time field
         TM    SPFDATEI+3,X'0C'        Does data contain a sign ?
         BNO   PDS015                  No: no ISPF/RPF userdata
         TM    SPFDATEU+3,X'0C'        DOES MOD DATE CONTAIN A SIGN ?
         BNO   PDS015                  No: no ISPF/RPF userdata
         LR    R1,R3                   A(MEMBER+TTR+UDATA) IN REG 1
         BAL   R14,SPFRPFU             Routine address
PDS015   DS    0H
         ST    R10,LASTREC             Save last record pointer
         LA    R10,NEXTENT(R10)        NEXT ENTRY IN GETM AREA
         NI    11(R3),B'00011111'      Clear 1st three bits of 'C'
         XR    R4,R4                   OF 'TTRC' IN DIR
         IC    R4,11(R3)               And insert it into R3
         AR    R4,R4                   Double because halfwords
         AH    R4,=H'12'               + MIN LENGTH MEMBERENTRY
         BXLE  R3,R4,PDS004            Next member if any
         B     PDS001                  Read next directory block
PDS017   DS    0H                      End of file RPFUT1
         CLOSE RPFUT1                  Close RPFUT1
         ZAP   SORTCNT,MEMCNT          # records to sort for SORT CHA
         CP    MEMCNT,=P'0'            Does FROM dataset contain mbrs?
         BNE   PDS019                  Yes: OK
         MVC   MSG1,ERRLTXT            'No members in FROM ds'
         B     RESTART
PDS019   DS    0H                      End of file RPFUT1
         TM    SW,$ALLMEM              Copy/Move All members?
         BNO   PDS020                  No: continue normally
         BAL   R14,ALLMEM              Move/Copy all members
         B     RESTART                 Allocation menu again
PDS020   DS    0H                      Process the output
         TPUT  ERASE,L'ERASE,FULLSCR
         BAL   R14,RPFTPUT             WRITE THE SCREEN
         TITLE 'PROCESS PRIMARY COMMANDS'
PDS021   DS    0H                      Process the output
         LA    R2,AIDBYTE              AIDbyte address
         LA    R5,SCREEN               Screen address
         BAL   R14,CONVIN              Read the screen
         MVC   REP5,BLANKS             Clear command field
         LTR   R1,R1                   Clear key pressed ?
         BZ    NEWSCR                  New screen if yes
         CLI   SCREEN,X'6E'            RESHOW CODE ?
         BE    NEWSCR                  Yes: review screen
         OC    SCREEN(24),BLANKS       XLATE to uppercase
         LR    R3,R1                   SAVE REG 1
         CLI   AIDBYTE,X'7D'           Enter key ?
         BE    PDS024                  Yes: branch
         LA    R2,SCREEN               Address of screen for PFK rout
         LA    R1,AIDBYTE              AIDbyte address
         BAL   R14,PFK                 Get PFK definitions
         LTR   R15,R15                 Alright ?
         BZ    PDS024                  Yes execute command
         C     R15,F0004               Confirmation?
         BE    PDS023                  No do not execute command
         C     R15,F0008               PFK not defined ?
         BE    PDS022                  Yes: Give error message
         MVC   MSG5,ERRATXT            PFK definition invalid
         MVC   REP5,BLANKS             Blank command area
         B     PDS059                  Write and process screen
PDS022   DS    0H
         MVC   MSG5,ERR9TXT            Move error message
         MVC   REP5,BLANKS             Blank command area
         B     PDS059                  Write and process screen
PDS023   DS    0H
         MVI   MSG5,C'-'               Clear
         MVC   MSG5+1(L'MSG5-1),MSG5         message
         MVC   REP5,SCREEN             Repeat command
         B     PDS059                  Write and process screen
PDS024   DS    0H
         CLI   SCREEN,C'?'             Refresh command?
         BNE   PDS025                  Continue if not
NEWSCR   DS    0H
         MVC   REP5,BLANKS             BLANK REPLY AREA
         OI    SW,$ERASE               Mark erase on
         B     PDS059                  Write and process screen
PDS025   DS    0H
         MVI   MSG5,C'-'               Clear
         MVC   MSG5+1(L'MSG5-1),MSG5        message area
         C     R3,SCRLEN               Length not changed ?
         BE    PDS027                  Alright
         MVC   MSG5,ERR4TXT            Logic error code 0701
         B     PDS059                  Write and process screen
PDS027   DS    0H                      Process the commands
         MVC   BUFFER(24),SCREEN       Move command
         CLI   BUFFER,C'&&'            && entered ?
         BNE   PDS028                  No: no repetition of command
         MVC   SCREEN(24),BUFFER+1     Move command back without '&&'
         MVI   SCREEN+23,C' '
         MVC   REP5,BUFFER             Repeat command
PDS028   DS    0H
         BAL   R14,RPFSCRN             Process 'S' Line command
         TM    SW,$CHANGE              Something changed ?
         BNO   PDS031                  Process commands if not changed
         CLC   SCREEN(24),BLANKS       No command entered ?
         BE    PDS029                  Do not write pause msg
         MVC   MSG5,INF1TXT            Move pause message
         CLI   REP5,C' '               No command in command area?
         BNE   PDS029                  No: continue
         MVC   REP5(24),SCREEN         Else repeat command
PDS029   DS    0H                      Error in SCF command
         BAL   R14,RPFTPUT             Write the screen
         MVC   MSG5,BLANKS             Clear msg area
         NI    SW,X'FF'-$CHANGE        Set modifications off
         B     PDS021                  And process the screen
PDS031   DS    0H                      Process the screen
         CLC   SCREEN(3),=C'SCF'       'SCF' command ?
         BNE   PDS035                  No: other commands
         L     R10,FIRSTSCR            First line on screen
         AL    R10,NEXTSCR             Next screen
         C     R10,LASTREC             Compare with A(Last line)
         BH    PDS033                  Error if beyond
         CLI   MEMBR,C' '              Blank entry ?
         BE    PDS033                  Error: Scroll had no effect
         ST    R10,FIRSTSCR            New first line on screen
         B     PDS059                  Write and process screen
PDS033   DS    0H                      Error in SCF command
         MVC   MSG5,ERR1TXT            Scroll foreward had no effect
         B     PDS059                  Write and process screen
PDS035   DS    0H                      Error in SCF command
         CLC   SCREEN(3),=C'PFK'       PFK entered ?
         BNE   PDS037                  No: test next command
         LINK  EP=RPFPFK,PARAM=((11)),VL=1 PFK definition module
         B     NEWSCR                  Write new screen
PDS037   DS    0H                      Process 'SCB' command
         CLC   SCREEN(3),=C'SCB'       'SCB' command?
         BNE   PDS039                  No: other commands
         L     R10,FIRSTSCR            1st line on screen
         C     R10,GETMSTRT            Already first screen ?
         BNH   PDS038                  Yes: scroll had no effect
         SL    R10,NEXTSCR             1 screen back
         C     R10,GETMSTRT            AND COMPARE WITH BEGIN
         BNL   *+8                     If Low: reset to first screen
         L     R10,FIRSTREC            Reset to first screen
         ST    R10,FIRSTSCR            New 1ST line on screen
         B     PDS059                  Write and process screen
PDS038   DS    0H
         MVC   MSG5,ERR1TXT            Scroll back has no effect
         B     PDS059                  Write and process screen
PDS039   CLI   SCREEN,C'B'             BOTTOM command ?
         BNE   PDS041                  No: process other commands
         L     R3,LASTREC              LOAD BEGIN ADDRESS
         SL    R3,NEXTSCR              Subtract screen length
         LA    R3,NEXTENT(R3)                MINUS ONE
         C     R3,FIRSTREC             Before FIRSTREC ?
         BNL   *+8                     No: proceed
         L     R3,FIRSTREC             Divide by screen length
         ST    R3,FIRSTSCR             Save address first line on scr.
         B     PDS059                  Write and process screen
PDS041   DS    0H
         CLC   SCREEN(2),=C'L '        'Locate on member command'
         BNE   PDS045                  No: process other commands
         BAL   R14,LOCATE              Try to locate string
         LTR   R15,R15                 Found ?
         BZ    PDS043                  Yes: branch
         MVC   MSG5,ERRCTXT            Text not found ....
         MVC   REP5(24),SCREEN         Repeat command
PDS043   DS    0H
         B     PDS059                  Write and process screen
PDS045   DS    0H                      Process 'TOP' command
         CLC   SCREEN(3),=C'TOP'       TOP entered ?
         BE    PDSTOP                  Yes: process command
         CLC   SCREEN(2),=C'T '        TOP command (Alias 'T') ?
         BNE   PDS047                  No: other commands
PDSTOP   MVC   FIRSTSCR,GETMSTRT       First line is 1st member
         BAL   R14,RPFTPUT             Write the screen
         B     PDS021                  And process the screen
PDS047   DS    0H
         CLI   SCREEN,C'='             =n or =n.n command?
         BNE   PDS049                  No: branch
         MVC   CMAINOPT,SCREEN+1       Move options
         OI    INFCODE2,$RETURN        Set return indicator
         B     RETURN                  And terminate (to main)
PDS049   DS    0H
         CLC   SCREEN(6),=C'RETURN'    RETURN command ?
         BNE   PDS051                  No: branch
         OI    INFCODE2,$RETURN        Set return indicator
         B     RETURN                  And terminate
PDS051   DS    0H
         CLC   SCREEN(8),=C'SORT CHA'  Sort on change date/time
         BNE   PDS055                  No: test next command
         L     R6,GETMSTRT             First record in workspace
         CVB   R7,SORTCNT              Records to sort
         C     R7,=F'2'                Less than 2 records ?
         BL    PDS059                  Its silly to sort less 2 records
         SORT  (6),88,15,(7),34,ORDER=D sort workspace (short)
         MVC   FIRSTSCR,GETMSTRT       Set display on first record
         B     PDS059                  Rewrite screen
PDS055   DS    0H
         CLC   SCREEN(3),=C'END'       END command ?
         BNE   PDS057                  No: continue
         MVI   MSG1,C'-'               Clear
         MVC   MSG1+1(L'MSG1-1),MSG1        message area
         B     RESTART                 Issue allocation screen
PDS057   DS    0H
         CLI   SCREEN,C' '             Nothing entered ?
         BE    PDS059                  Continue
         MVC   MSG5,ERR3TXT            Invalid command
         MVC   REP5,SCREEN             Repeat command in error
PDS059   DS    0H
         BAL   R14,RPFTPUT
         B     PDS021
         TITLE 'END OF ROUTINE'
RETURN   DS    0H                      End of RPFMVCPY
         ESTAE 0                       Kill ESTAE routine
         SYALLOC FREE=RPFUT1,MF=E      Unallocate
         SYALLOC FREE=RPFUT2,MF=E                datasets (for sure)
         SYALLOC FREE=RPFIN,MF=E
         SYALLOC FREE=RPFPRINT,MF=E
RETURN2  DS    0H
         L     R13,SAVE+4              Previous save area
         RETURN (14,12),RC=0           Back to caller
         TITLE 'TPUT MODIFIED SCREEN'
RPFTPUT  DS    0H                      ROUTINE TO WRITE SCREEN
*---------------------------------------------------------------------*
*                                                                     *
*        REGISTER USAGE IN THIS ROUTINE:                              *
*                                                                     *
*        R3    NUMBER OF LINES ON THE SCREEN (20/28/39)               *
*        R4    ADDRESS OF SCREEN TO BE TPUTTED.                       *
*        R5    ADDRESS OF MESSAGE TABLE                               *
*        R6    TOTAL NUMBER OF MESSAGES, WHICH CAN BE GIVEN           *
*        R10   CURRENT ADDRESS OF MEMBERLIST IN WORKSPACE.            *
*                                                                     *
*------------------------------------------ (C)-2004 SKYBIRD SYSTEMS -*
         ST    R14,PUTR14              Save return reg
         LA    R4,LNE5                 Beginaddres line
         L     R10,FIRSTSCR            First line on screen
         L     R3,#LINES               Number of lines
TPUT001  DS    0H                      *START LOOP*
         MVI   1(R4),X'C9'                                        @pw
         MVI   5(R4),C' '              Blank
         MVC   8(8,R4),BLANKS               the fields
         MVI   17(R4),X'C9'                                       @pw
         MVC   18(8,R4),BLANKS                   in the
         MVC   31(44,R4),BLANKS                          screen
         MVC   77(14,4),BLANKS         Blank area on screen
         MVC   28(3,R4),=AL3(TURQ)     Default turquoise
         C     R10,LASTREC             Past last record pointer ?
         BH    TPUT008                 Yes branch                  @pw
         MVC   8(8,R4),MEMBR           Membername
         TR    8(8,R4),COMTRTAB        Remove unprintables from screen
         LA    R1,31(R4)               Point to output field on screen
         SYCONVHX IN=INPTTR,OUT=(1),L=3 Convert TTR
         TM    INPHL,NONHLM            INPHL IS X'F1' OR 'F9'
         BO    *+8                     Yes: skip
         MVI   INPHL,NONHLM            Move default non highl (MDT)
         MVC   7(1,R4),INPHL           MOVE HIGHLIGHT CHAR
         MVI   INPHL,NONHLM            NON HL MOD DATA TACK ON
         TM    RPFUT1+DCBRECFM-IHADCB,DCBRECF+DCBRECV
         BNZ   TPUT002                 No: branch
         MVC   38(37,R4),INPC          MOVE LINKEDIT USERDATA
         B     TPUT003                 Branch
TPUT002  DS    0H
         CLI   INPUID,C' '             NO UDATA IN LIST ?
         BE    TPUT003                 Yes: proceed
         MVC   56(7,R4),INPTIME+1      Move time saved
         MVC   38(8,R4),INPUID         Move owner of the member
         MVC   46(4,R4),INPDATE        Move year of date saved
         MVI   50(R4),C'/'             separate with a slash
         MVC   51(2,R4),INPDATE+4      Move monthnumber of
         MVI   53(R4),C'/'             separate with a slash
         MVC   54(2,R4),INPDATE+6      Move daynumber of month
         MVC   63(5,R4),INPCARDS       Number of cards
         MVC   69(5,R4),INPVERS        Move version number if any
TPUT003  DS    0H
         CLI   ALIAS,C'A'              Alias ?
         BNE   TPUT005                 No: branch
         MVC   77(14,R4),=CL14'ALIAS'  Tell it to user
TPUT005  DS    0H
         LA    R6,MSG#                 Number of possible msgs
         LA    R5,MSGTBLE              Load table address
TPUT007  DS    0H
         CLC   0(1,R5),OPER            MATCH FOUND OF OPER ?
         BE    TPUT009                 Branch if yes
         LA    R5,32(R5)               Next entry in MSGTBLE
         BCT   R6,TPUT007              Loop until all done
         MVI   OPER,C' '                      ,,
         B     TPUT011                 Next entry
TPUT008  DS    0H                                                 @pw
         MVI   1(R4),X'F9'             Protect the                @pw
         MVI   17(R4),X'F9'                       empty fields    @pw
         B     TPUT013                                            @pw
TPUT009  DS    0H                                                 @pw
         MVC   28(3,R4),=AL3(WHITE)    Colour message in white
         MVC   38(30,R4),1(R5)         Move message after TTR field
         MVC   68(07,R4),BLANKS        And blank the rest
         MVC   OPER,31(R5)             Move replacement oper.
TPUT011  DS    0H                      Set pointers on next line
         LA    R10,NEXTENT(R10)        Next entry in workspace
TPUT013  DS    0H                      Set pointers on next line
         LA    R4,SCRENT(R4)           Next line on screen
         BCT   R3,TPUT001              Loop back
         UNPK  SCR5CNT,MEMCNT          # of members in screen
         OI    SCR5CNT+4,X'F0'         Clear sign
         TM    SW,$ERASE               Should the screen erased first ?
         BNO   TPUT015                 NO: TPUT IMMED.
         NI    SW,255-$ERASE           FLAG OFF
         TPUT  ERASE,L'ERASE,FULLSCR   Erase the screen
TPUT015  DS    0H
         L     R2,TPUTLEN              Length to be written
         TPUT  SCR5TXT,(R2),FULLSCR    Write screen
         MVC   SCR5TXT(2),NOERASE      Repair write control character
         L     R14,PUTR14              Restore reg 14
         BR    R14
*---------------------------------------------------------------------*
*                                                                     *
*        Routine:   LOCATE                                            *
*        Function:  Locate on Membername                              *
*                   The to be located string is in 'SCREEN'+2         *
*                   After successful locate, R10 will be loaded with  *
*                   the workspace entry that matches the string       *
*        Returncodes:                                                 *
*                   0000: located string found, R10 loaded            *
*                         R1=0000 = exact match on membername         *
*                         R1=0004 = fuzzy match                       *
*                   0004: located string not found                    *
*                                                                     *
*------------------------------------------ (C)-2004 Skybird Systems -*
         SPACE
LOCATE   DS    0H
         ST    R14,SAVE14L             Save return register
         LA    R3,SCREEN+2             Load Locate char. string
         LA    R4,16                   Max 16 characters in length
         XR    R5,R5                   Count length in reg.5
LOC001   DS    0H
         CLI   0(R3),C' '              End of string ?
         BE    LOC003                  Yes: stop search
         LA    R5,1(R5)                Count nonblank byte
         LA    R3,1(R3)                Next byte in 'SCREEN'
         BCT   R4,LOC001               Loop
LOC003   DS    0H
         LTR   R5,R5                   No bytes found ?
         BE    LOCERR1                 Yes: rc=0004
         BCTR  R5,0                    Minus 1 for EX instruction
         L     R10,GETMSTRT            Load start address    (BXLE)
         L     R7,LASTREC              Last record pointer   (BXLE)
         LA    R7,79(R7)               Adjust offset         (BXLE)
         LA    R6,NEXTENT              Length of entry       (BXLE)
         LA    R3,SCREEN+2             Address char. string
COMPM    DS    0H                      Compare member name
         CH    R5,=H'7'                Not longer than 8
         BNH   *+8                     NO: BRANCH
         LA    R5,7                    LOAD MAX VALUE (8-1 FOR EX)
         EX    R5,LCOMP1               Compare if match found
         BL    COMPBX                  LOW: LOOP
         BE    LOC097                  Exact match
         B     LOC098                  High or equal: found
*
COMPBX   DS    0H                      Compare membername
         BXLE  R10,R6,COMPM            LOOP                  (BXLE)
LOCERR1  DS    0H                      Compare membername
         LA    R15,4                   RC=0004
         B     LOC999                  Branch
LOC097   DS    0H                      Locate the found member
         XR    R1,R1                   Exact match
         B     LOC099
LOC098   DS    0H                      Locate the found member
         LA    R1,4                    Fuzzy match
LOC099   DS    0H
         XR    R15,R15                 RC=0000
         ST    R10,FIRSTSCR            Address found member is 1st line
         MVI   INPHL,HLM               Move highlight char (MDT)
         B     LOC999
LCOMP1   CLC   MEMBR(0),0(R3)          **** EX ONLY ****
         DC    CL5' '
CLINE    DS    CL5
LOC999   DS    0H
         L     R14,SAVE14L             Restore return reg
         BR    R14                     Return
         TITLE 'PROCESS THE LINE-COMMANDS'
*---------------------------------------------------------------------*
*                                                                     *
*        Process the "S" line command before the membername.          *
*                                                                     *
*        RETURNCODES                                                  *
*                    00. Ok                                           *
*                                                                     *
*------------------------------------------ (C)-2004 SKYBIRD SYSTEMS -*
         SPACE 2
RPFSCRN  EQU   *
         ST    R14,GETR14              Save register 14
         LA    R3,SCREEN               Load screen address
         MVC   SCREEN(24),BUFFER       Move command
         LA    R3,24(R3)               Skip command area
         L     R10,FIRSTSCR            First line on screen
         L     R6,#LINES               GETMAIN AREA
         OPEN  (SYSIN,(OUTPUT))        Open IEBCOPY SYSIN file
         OI    SW,$SYSIN               Mark Opened
         MVC   SYSREC,BLANKS           Blank record
         MVC   SYSREC(38),=C' COPY INDD=RPFUT1,OUTDD=RPFUT2,LIST=NO'
         LA    R15,WRITEIT             Routine address
         BALR  R14,R15                 Write record
         OPEN  RPFUT2                  Open RPFUT2 for BLDL
SCRN03   DS    0H
         NI    SW,255-$REPL            Reset replace flag          @rp1
         OC    0(17,R3),BLANKS         Xlate linecmd + member+newname
         CLI   0(R3),C' '              No line command?
         BE    SCRN98                  Take next entry
         CLI   1(R3),C' '              No member in entry ?
         BE    SCRN98                  Possible last screen
         CLI   0(R3),C'S'              'S' line command (Select)?
         BNE   SCRN21                  No: branch
         MVC   BLDLNAME,BLANKS
         MVC   BLDLNAME(8),1(R3)       Move member to bldl
         CLI   9(R3),C' '              Newname present?
         BE    SCRN05                  No: branch
         MVC   BLDLNAME(8),9(R3)       Move newname to bldl
SCRN05   DS    0H
         BLDL  RPFUT2,BLDLLIST         Locate member
         LTR   R15,R15                 Member found?
         BNZ   SCRN07                  No: copy/move member
         OI    SW,$REPL                member exists in to dataset
*                                      so give 'replaced' msg
         CLC   =C'YES',BUFREPL         Members should be replaced?
         BE    SCRN07
         MVI   OPER,X'FB'              Member not replaced
         B     SCRN98                  Next entry
SCRN07   DS    0H
         MVC   SYSREC,BLANKS           Blank record
         MVC   SYSREC(17),=C' SELECT MEMBER=(('
         MVC   SYSREC+17(8),1(R3)      Move membername in control stmt
         LA    R4,SYSREC+18            Point on 2nd byte of member
         LA    R5,7                    Max 7 times
SCRN09   DS    0H
         CLI   0(R4),C' '              End of member?
         BE    SCRN11                  Yes: branch
         LA    R4,1(R4)                Next character in member
         BCT   R5,SCRN09               Loop until all done
SCRN11   DS    0H
         CLI   9(R3),C' '              Newname present?
         BNE   SCRN13                  No: branch
         MVC   0(5,R4),=C',,R))'       Make control statement complete
         B     SCRN19                  Write record
SCRN13   DS    0H
         MVI   0(R4),C','
         MVC   1(8,R4),9(R3)           Move new name in control stmnt
         LA    R4,2(R4)                Point to 2nd byte of new name
         LA    R5,7                    Loop max. 7 times (l'member-1)
SCRN15   DS    0H
         CLI   0(R4),C' '              End of new name?
         BE    SCRN17                  Yes: branch
         LA    R4,1(R4)                Next character in member
         BCT   R5,SCRN15               Loop until all done
SCRN17   DS    0H
         MVC   0(4,R4),=C',R))'        Make control statement complete
SCRN19   DS    0H
         LA    R15,WRITEIT             Routine address
         BALR  R14,R15                 Write record
         OI    SW,$COPY                Mark members to be copied
         MVI   OPER,C'C'               Member Copied
         CLI   BUFCMD,C'M'             Member moved?
         BNE   SCRN96                  No: jump over
         MVI   OPER,C'M'               Member Moved
         B     SCRN96                  Next entry                  @rp1
SCRN21   DS    0H
         MVI   OPER,X'EE'              Invalid line command
         OI    SW,$CHANGE              Mark modifications on
SCRN96   DS    0H                                                  @rp1
         TM    SW,$REPL                Member replaced?            @rp1
         BNO   SCRN98              No: give 'moved' or 'copied'msg @rp1
         MVI   OPER,C'R'               Mark 'Replaced'             @rp1
SCRN98   DS    0H
         LA    R3,17(R3)               Next entry input
         LA    R10,NEXTENT(R10)        Next entry in workspace
         BCT   R6,SCRN03               Loop
SCRN99   EQU   *
         CLOSE SYSIN                   Close SYSIN file
         FREEPOOL SYSIN
         NI    SW,255-$SYSIN           Mark closed
         CLOSE RPFUT2                  Close TO dataset
         TM    SW,$COPY                Copy statements made?
         BNO   SCRN999                 No: do not invoke IEBCOPY
         BAL   R14,IEBCOPY             Exec copy routine
SCRN999  DS    0H
         L     R14,GETR14              Restore R14
         BR    R14                     Return
         TITLE 'MOVE/COPY all members'
*---------------------------------------------------------------------*
*                                                                     *
*        Routine ALLMEM                                               *
*                Flag $ALLMEM has been set, because the user          *
*                specifies 'DSN(*)' in the allocation screen          *
*                Cycle trough the entire workspace (all members of    *
*                the FROM dataset) and create an IEBCOPY Sysin file   *
*                to copy the members, depending of the Replace option *
*                                                                     *
*------------------------------------------ (C)-2004 Skybird Systems -*
ALLMEM   DS    0H
         ST    R14,SAVE14A             Save reg.14
         OPEN  (SYSIN,(OUTPUT))        Open IEBCOPY SYSIN file
         OI    SW,$SYSIN               Mark Opened
         MVC   SYSREC,BLANKS           Blank record
         MVC   SYSREC(38),=C' COPY INDD=RPFUT1,OUTDD=RPFUT2,LIST=NO'
         LA    R15,WRITEIT             Routine address
         BALR  R14,R15                 Write record
         OPEN  RPFUT2                  Open RPFUT2 for BLDL
         XR    R7,R7                   Clear counter
         L     R10,FIRSTREC            Point to first record in worksp
         LA    R10,0(R10)              Clear high-order
         ZAP   COPYCNT,=P'0'           # members to copy
ALLM01   DS    0H
         C     R10,LASTREC             Past last record?
         BH    ALLM99                  Yes: branch
         LA    R7,1(R7)                Increase counter
         CLC   =C'YES',BUFREPL         Members should be replaced?
         BE    ALLM03                  Yes: copy unconditionally
         MVC   BLDLNAME,BLANKS
         MVC   BLDLNAME(8),MEMBR       Move member to bldl
         BLDL  RPFUT2,BLDLLIST         Locate member
         LTR   R15,R15                 Member found?
         BNZ   ALLM03                  No: copy/move member
         MVI   OPER,X'FB'              Member not replaced
         B     ALLM98                  Next entry
ALLM03   DS    0H
         AP    COPYCNT,=P'1'           Increase copy counter
         MVC   SYSREC,BLANKS           Blank record
         MVC   SYSREC(17),=C' SELECT MEMBER=(('
         MVC   SYSREC+17(8),MEMBR      Move membername in control stmt
         LA    R4,SYSREC+18            Point on 2nd byte of member
         LA    R5,7                    Max 7 times
ALLM05   DS    0H
         CLI   0(R4),C' '              End of member?
         BE    ALLM07                  Yes: branch
         LA    R4,1(R4)                Next character in member
         BCT   R5,ALLM05               Loop until all done
ALLM07   DS    0H
         MVC   0(5,R4),=C',,R))'       Make control statement complete
         LA    R15,WRITEIT             Routine address
         BALR  R14,R15                 Write record
         OI    SW,$COPY                Mark members to be copied
         MVI   OPER,C'C'               Member Copied
         CLI   BUFCMD,C'M'             Member moved?
         BNE   ALLM98                  No: jump over
         MVI   OPER,C'M'               Member Moved
ALLM98   DS    0H
         LA    R10,NEXTENT(R10)        Next entry in workspace
         B     ALLM01                  Loop
ALLM99   DS    0H
         CLOSE SYSIN                   Close SYSIN file
         FREEPOOL SYSIN
         NI    SW,255-$SYSIN           Mark closed
         CLOSE RPFUT2                  Close TO dataset
         ST    R7,#ALLLNS              Save # lines
         TM    SW,$COPY                Copy statements made?
         BNO   ALLM998                 No: do not invoke IEBCOPY
         BAL   R14,IEBCOPY             Exec copy routine
         MVC   MSG1,ERRKTXT            Default error msg
         LTR   R15,R15                 RC IEBCOPY /= 0?
         BNZ   ALLM999                 Yes: Branch
ALLM998  DS    0H
         MVC   INF2TXT(7),=X'6020206B202120'
         ED    INF2TXT(7),COPYCNT
         MVC   MSG1,INF2TXT            # members copied
ALLM999  DS    0H
         L     R14,SAVE14A             Restore R14
         BR    R14                     Return
         TITLE 'FILL IN RPF NEW FMT OR SPF UDATA IN MEMBER ENTRY'
*---------------------------------------------------------------------*
*                                                                     *
*        Routine  SPFRPFU:                                            *
*              Fill in RPF new format or ISPF userdata in the member  *
*              list, for each entry                                   *
*        INPUT:  R10  POINTER TO CURRENT MEMBER ENTRY IN WORKSPACE,   *
*                     MAPPED WITH DSECT 'MEMBAREA' (VIA R10)          *
*                R1   POINTER TO MEMBER + USERDATA FIELD              *
*                     MAPPED WITH DSECT 'SPFDATA' (VIA R3)            *
*        OUTPUT: POINTED BY R10, FORMATTED MEMBER ENTRY IN WORKSPACE. *
*                                                                     *
*------------------------------------------ (C)-2004 Skybird Systems -*
SPFRPFU  DS    0H
         STM   R0,R15,SAVEUDAT         Save registers
         LR    R3,R1                   Member entry in reg3
         MVC   MEMBR,0(R3)             Move membername
         MVC   INPTTR,SPFTTR           Move TTR
         XR    R7,R7                   Clear reg. 7
         IC    R7,SPFVERS              Version number
         CVD   R7,DWB                  Convert to packed
         OI    DWB+7,X'0F'             Clear sign
         UNPK  INPVERS(2),DWB          UNPK the result
         MVI   INPCOLON,C':'           M(&e colon
         IC    R7,SPFMOD               Version number
         CVD   R7,DWB                  Convert to packed
         OI    DWB+7,X'0F'             Clear sign
         UNPK  INPMOD(2),DWB           UNPK the result
         MVC   INPUID,SPFUID           Move USERID saver
         MVC   YYDDD,SPFDATEU          Saved date
         L     R15,EPCNVDT             RPFCNVDT routine
         MVI   DDMMYY,X'FF'            First parm is 4 bytes
         CALL  (15),(YYDDD,DDMMYY)     Convert date to gregorian
         MVC   INPDATE(4),CC           Year including century
         MVC   INPDATE+4(2),MONNBR     Month number
         MVC   INPDATE+6(2),DD         Daynumber in month
         XR    R7,R7                   Clear reg 7.     (00000000)
         ICM   R7,6,SPFTIME            Insert in middle (00TTTT00)
         IC    R7,=X'F0'               Insert sign      (00TTTTF0)
         SRL   R7,4                    Shift to sign    (000TTTTF)
         ST    R7,DWB                  STORE THE RESULT
         MVC   INPTIME(10),BLANKS      BLANK TIME FIELD
         MVC   INPTIME(7),=X'402120207A2020'  MOVE PATTERN
         ED    INPTIME(7),DWB+1        Move time saved
         XR    R7,R7                   CLEAR REG 6.
         ICM   R7,3,SPFRECU            Number of records
         CVD   R7,DWB                  Convert to packed
         MVC   INPCARD#,=X'402020202120' move ED string
         ED    INPCARD#(6),DWB+5       CONVERT TO ZONED
         LM    R0,R15,SAVEUDAT         Restore registers
         BR    R14                     Return
         TITLE 'CONVERT SCREEN ROUTINE'
*---------------------------------------------------------------------*
*                                                                     *
*        C O N V I N:        Convert a TGET ASIS screen to normal     *
*        The SBA'S and attribute bytes will be removed and the        *
*        rest will be placed in 'SCREEN' The AIDbyte will be          *
*        placed in 'AIDBYTE'                                          *
*        The length of the output will be placed into register 1      *
*        Register 2 points to the AIDbyte.                            *
*        Register 5 points to the output screen area                  *
*                                                                     *
*------------------------------------------ (C)-2004 Skybird Systems -*
         SPACE 2
CONVIN   EQU   *                       Convert screen routine
         ST    R14,CONVR14             SAVE R14
         L     R3,COMMSCR              Screen address from commarea
         CNOP  0,4                     Align on fullword
         TGET  (R3),2200,ASIS          Read the screen
         MVC   0(1,R2),0(R3)           Save AIDbyte
         XR    R2,R2                   Init output length
         LR    R4,R1                   Save input length
         SH    R4,=H'3'                Skip AID and cursor address
         C     R4,F0000                Register zero
         BNH   CONV099                 Not high: end of routine
         LA    R3,3(R3)
*        OUTPUT SCREEN IS POINTED BY R5
CONV001  CLI   0(R3),X'11'             SBA ?
         BE    CONV003                 Yes: skip next 3 bytes input
         MVC   0(1,R5),0(R3)           MOVE INPUT BYTE
         LA    R3,1(R3)                Next byte input
         LA    R2,1(R2)                Count output bytes
         LA    R5,1(R5)                Next byte output
         BCT   R4,CONV001              TEST NEXT BYTE
         B     CONV099                 END OF ROUTINE
CONV003  LA    3,3(3)                  SKIP 3 BYTES INPUT
         BCTR  4,0                     MINUS 1 BCT
         BCTR  4,0                     MINUS 1 BCT
         BCT   4,CONV001               TEST NEXT BYTE
CONV099  LR    R1,R2                   OUTPUT LENGTH IN REGISTER 1
         L     R14,CONVR14             RESTORE R14
         BR    R14                     Return to caller
         TITLE 'P F K  SEARCH ROUTINE'
*---------------------------------------------------------------------*
*                                                                     *
*        P F K    ROUTINE TO CHECK THE AIDBYTE WITH THE PFK DEFINITION*
*                 IN COMMAREA IF THE PFK IS FOUND THE COMMAND         *
*                 IN THE PFK WILL BE PLACED INTO THE FIELD POINTED    *
*                 BY REGISTER 2                                       *
*        REGISTER 1 POINTS TO THE AIDBYTE.                            *
*        REGISTER 2 POINTS TO THE COMMAND AREA OF THE SCREEN          *
*                                                                     *
*        RETURNCODES: 00 PFK FOUND CONFIRMATION IS NO                 *
*                     04 PFK FOUND CONFIRMATION IS YES                *
*                     08 PFK NOT DEFINED OR NOT FOUND                 *
*                     12 INVALID PFK DEFINITION                       *
*                                                                     *
*------------------------------------------ (C)-2004 Skybird Systems -*
         SPACE 2
PFK      ST    R14,PFKR14
         LA    R4,DEFPFK01
         LA    R5,24
PFK01    CLC   0(1,R4),0(R1)
         BE    PFK05
         LA    R4,26(R4)
         BCT   R5,PFK01
         LA    R15,8
         B     PFK99
PFK05    CLI   1(R4),C'X'              X = Not defined
         BNE   PFK06
         LA    R15,8
         B     PFK99
PFK06    DS    0H                      Clear input command field
         MVC   0(24,R2),BLANKS         Clear output command field
         L     R1,COMMSCR              Pickup unformatted screen
         CLI   6(R1),X'94'             MAX operand (scroll) ?
         BE    PFK06A                  Yes: branch
         CLI   6(R1),C'M'              MAX operand (scroll) ?
         BNE   PFK08                   No: ignore
PFK06A   EQU   *
         CLC   2(3,R4),=C'SCF'         Srcoll foreward?
         BNE   PFK07                   No: try "SCB"
         MVC   0(6,R2),=C'BOTTOM'      Yes: BOTTOM command
         B     PFK99
PFK07    CLC   2(3,R4),=C'SCB'         Scroll backward ?
         BNE   PFK08                   No: ignore
         MVC   0(3,R2),=C'TOP'         Yes: TOP command
         B     PFK99
PFK08    DS    0H                      Move PFK command into rep area
         MVC   0(24,R2),2(R4)          Move PFK command into BUFFER
         CLI   1(R4),C'N'
         BNE   PFK09
         LA    R15,0
         B     PFK99
PFK09    CLI   1(R4),C'Y'              Confirmation?
         BNE   PFK11                   No: branch
         LA    R15,4
         B     PFK99
PFK11    LA    R15,12
         B     PFK99
PFK99    L     R14,PFKR14
         BR    R14
         TITLE 'Allocate dataset'
*---------------------------------------------------------------------*
*                                                                     *
*        ALLOC:      Routine  to allocate From or To dataset          *
*                    INPUT:  R1       Pointer to Parameter list       *
*                                     See ALLOCLST DSECT for layout   *
*                                     volume (6 bytes)                *
*                            R15:     return code of allocate         *
*                                     00 - Alloc ok                   *
*                                     04 - Allocation error           *
*                                     08 - Dataset not on volume      *
*                                     12 - Dataset not PO             *
*                                                                     *
*------------------------------------------ (C)-2004 Skybird Systems -*
         SPACE 2
ALLOC    DS    0H
         ST    R14,ALLOCR14
         STM   R4,R7,SAVEWORK          Save work registers
         LR    R4,R1                   Pickup parameter list
         USING ALLOCLST,R4             Address it
         LA    R6,ADSN                 Point to dsname
         LA    R5,44                   Max. length
*---------------------------------------------------------------------*
*        Check if DSNAME contains "(*)" at the end                    *
*        If so, set all members flag to copy all the members          *
*---------------------------------------------------------------------*
ALLOC01  DS    0H
         CLC   =C'(*)',0(R6)           Does DSN contains the (*)
         BE    ALLOC03                 Yes: Set all members flag
         LA    R6,1(R6)                Next char. in dsn
         BCT   R5,ALLOC01              Loop until found or exhausted
         B     ALLOC05                 Normal DSN
ALLOC03  DS    0H
         MVC   0(3,R6),BLANKS          Blank (*)
         OI    SW,$ALLMEM              Set all members flag
ALLOC05  DS    0H
         CLI   AVOL,C' '               Volume specified?
         BNE   ALLOC07                 Yes: allocate with volume
         SYALLOC DDA=ADDN,DSN=ADSN,DISP1=SHR,MF=E
         B     ALLOC09                 Test result of allocation
ALLOC07  DS    0H
         SYALLOC DDA=ADDN,DSN=ADSN,DISP1=SHR,VOL=AVOL,                 X
               UNITA=COMMUNIT,MF=E
ALLOC09  DS    0H
         LTR   R15,R15                 Allocation OK?
         BZ    ALLOC11                 Yes: continue.
         LA    R15,4                   RC=0004
         B     ALLOC99                 Return
ALLOC11  DS    0H
         MVC   RPFUT1(DCBLEN),MODELDCB Move model dcb
         MVC   RPFUT1+DCBDDNAM-IHADCB(8),ADDN move ddname in dcb
         RDJFCB RPFUT1                 Read JFCB
         ST    R4,OBTCMLST+4           DSN in camlst
         LA    R5,JFCBVOLS             Point to volume
         ST    R5,OBTCMLST+8           Save in camlst
         OBTAIN OBTCMLST               Check if data set is on volume
         LTR   R15,R15                 OK ?
         BZ    ALLOC13                 Branch if on volume
         LA    R15,8                   RC = 0008
         B     ALLOC99                 Return
ALLOC13  DS    0H
         TM    DS1DSORG-44,DS1DSGPO       Partitioned?
         BO    ALLOC15                 Yes: alright
         LA    R15,12                  RC = 0012
         B     ALLOC99                 Return
ALLOC15  DS    0H
         OPEN  RPFUT1                  Open dataset
         MVC   ARECFM,RPFUT1+DCBRECFM-IHADCB Record format
         NI    ARECFM,255-DCBRECBR     RECFM = FB/VB same as F/V
         MVC   ALRECL,RPFUT1+DCBLRECL-IHADCB Record length
         MVC   ABLK,RPFUT1+DCBBLKSI-IHADCB Block length
         CLOSE RPFUT1
         MVC   AVOL,JFCBVOLS           Move obtained volume
         LA    R15,0                   RC = 0000
ALLOC99  DS    0H
         LM    R4,R7,SAVEWORK          Restore work registers
         L     R14,ALLOCR14            RESTORE R14
         BR    R14                     Return (RC= (R15))
         DROP  R4
         TITLE 'Write on SYSIN file'
*---------------------------------------------------------------------*
*                                                                     *
*        WRITEIT: Routine to write the IEBCOPY control statements     *
*                                                                     *
*-------------------------------------- (C)-2004 Skybird Systems -----*
WRITEIT  DS    0H
         ST    R14,SAVE14WR            Save register 14
         PUT   SYSIN,SYSREC            Write control statement
         L     R14,SAVE14WR            Restore reg 14
         BR    R14                     Return
*        BSM   0,R14                   Return to 31 bit caller
         TITLE 'Invoke IEBCOPY'
*---------------------------------------------------------------------*
*                                                                     *
*        Routine:  IEBCOPY                                            *
*        Function: Invoke IEBCOPY to process all the Copy or Move     *
*                  line commands in the screen.                       *
*                  This routine will be invoked after screen          *
*                  If the move command is processed the members will  *
*                  be deleted in the FROM dataset after succesful     *
*                  Processing of IEBCOPY                              *
*                                                                     *
*        Returncodes:                                                 *
*                  00 - Ok                                            *
*                  04 - IEBCOPY error                                 *
*                                                                     *
*-------------------------------------- (C)-2004 Skybird Systems -----*
IEBCOPY  DS    0H
         ST    R14,SAVE14C             Save register 14
         STM   R3,R6,SAVEWORK          Save work registers
         LINK  EP=IEBCOPY,PARAM=(COPYPARM,COPYDDNS),VL=1
         LTR   R15,R15                 RC IEBCOPY alright?
         BZ    IEBCP07                 Yes: do nothing
         CVD   R15,DWB                 Save return code
         UNPK  MSGC+27(4),DWB          Set in both
         OI    MSGC+30,X'F0'                sign
         MVC   CMDAREA(8),=CL8'RPFPRINT' If error show output
         LINK  EP=RPFBRO,PARAM=((11)),VL=1 Link to browse
         MVC   CMDAREA,BLANKS
         L     R10,FIRSTSCR            First line on screen
         L     R4,#LINES               Number of lines on screen.
         TM    SW,$ALLMEM              Copy All members ?
         BNO   IEBCP01                 No: continue
         LA    R15,4                   RC = 0004
         B     IEBCP99                 No need to update OPER!
IEBCP01  DS    0H
         CLI   OPER,C'M'               Member 'Moved'?             @rp1
         BNE   IEBCP03                 No: test if Copied          @rp1
         MVI   OPER,X'FE'              Error in MOVE
         B     IEBCP05
IEBCP03  DS    0H
         CLI   OPER,C'C'               Member 'Copied'             @rp1
         BNE   IEBCP04                 No: test if Replaced        @rp1
         MVI   OPER,X'FE'              Error in Replace            @rp1
         B     IEBCP05                                             @rp1
IEBCP04  DS    0H                                                  @rp1
         CLI   OPER,C'R'               Member 'Replaced'           @rp1
         BNE   IEBCP05                 No: test if Replaced        @rp1
         MVI   OPER,X'FE'              Error in COPY
IEBCP05  DS    0H
         LA    R10,NEXTENT(R10)        next line in workspace
         BCT   R4,IEBCP01              Loop
         LA    R15,4                   RC = 0004
         B     IEBCP99                 End of Routine
IEBCP07  DS    0H
         CLI   BUFCMD,C'M'             Move command
         BNE   IEBCP99                 No: finished
         RDJFCB RPFUT1                 Obtain JFCB                 @rp1
         OPEN  (RPFUT1,(UPDAT))        Open FROM dataset
         L     R10,FIRSTSCR
         L     R4,#LINES               Number of lines on screen.
         TM    SW,$ALLMEM              All members to be copied?
         BNO   IEBCP09                 No: continue
         L     R10,FIRSTREC            First RECORD in workspace
         L     R4,#ALLLNS              # members in FROM dataset
IEBCP09  DS    0H
         CLI   OPER,C'M'               Member 'Moved'?             @rp1
         BE    IEBCP10                 Yes: delete member          @rp1
         CLI   OPER,C'R'               Member 'Moved' and 'Repl..' @rp1
         BNE   IEBCP15                 No: do not delete           @rp1
IEBCP10  DS    0H                                                  @rp1
         MVC   STOWDEL,MEMBR           Move member name
         STOW  RPFUT1,STOWDEL,D        Delete the member
         LTR   R15,R15                 Ok ?
         BNZ   IEBCP11                 Yes: branch
         MVC   MEMBR,BLANKS            Blank member field (deleted)
         B     IEBCP15                 Branch
IEBCP11  DS    0H
         MVI   OPER,X'FC'              Error in stow
IEBCP15  DS    0H
         LA    R10,NEXTENT(R10)        Next entry in workspace
         BCT   R4,IEBCP09              Loop
         CLOSE RPFUT1                  Close FROM dataset
         OPEN  RPFUT1,TYPE=J           Repair JFCB                 @rp1
         CLOSE RPFUT1                  and close                   @rp1
         XR    R15,R15                 RC = 0000
IEBCP99  DS    0H
         NI    SW,255-$COPY            Mark pending copies off
         LM    R3,R6,SAVEWORK          Restore work registers
         L     R14,SAVE14C             Restore register 14
         BR    R14                     Return
         TITLE 'ESTAE recovery routine, Retry From abends'
RECOVER  EQU   *
         DROP  ,
         USING *,R15                   Get temporary addressability
         LM    R8,R13,HEREADDR         Restore registers
         DROP  R15                     Kill local addressability
         USING SAVE,R13,R12,R9,R8      Restore addressing
         USING SDWA,R1                 Get addressability over sdwa
         XR    R2,R2                   Clear register 2
         ICM   R2,7,SDWACMPC           Insert completion code
         SRL   R2,12                   Shift out user completion codep1
         STCM  R2,3,ABEND              Save abend code
         CLM   R2,3,=X'0913'           Authorization abend ?
         BE    SETRP04                 Yes: try to retry
         CLM   R2,3,=X'0D37'           Data set full ?
         BE    SETRP04                 Yes: try to retry
         CLM   R2,3,=X'0B37'           End of extents ?
         BE    SETRP04                 Yes: try to retry
         SETRP RC=0                    Else percolate
         BR    R14                     Branch to rtm
         DROP  R1                      Kill addressability
SETRP04  DS    0H
         SETRP RC=4,RETADDR=RET,RETREGS=NO,FRESDWA=YES
         BR    R14                     Branch to rtm
ABEND    DS    H
         TITLE 'ESTAE RETRY ROUTINE'
RET      EQU   *
         DROP  ,
         USING *,R15                   Local addr
         LM    R8,R13,HEREADDR         Restore registers
         DROP  R15                     Kill local addressability
         USING SAVE,R13,R12,R9,R8      Restore addressing
         USING COMMAREA,R11
         TM    SW,$SYSIN               SYSIN dataset opened?
         BNO   RET01                   No: branch
         CLOSE SYSIN                   Close SYSIN dataset
         NI    SW,255-$SYSIN           Reset flag
RET01    DS    0H
         CLOSE RPFUT1                  Close FROM dataset
         CLOSE RPFUT2                  Close TO dataset
         ESTAE 0                       Delete this recovery routine
         SYCONVHX IN=ABEND,OUT=ERRGTXT+9,L=2
         MVC   MSG1,ERRGTXT            Move abend message
         LA    R14,RESTART             Return address
         BR    R14                     Retry successful
         TITLE 'VARIABLES AND CONTROL BLOCKS'
DWB      DS    D                       FOR CVD/CVB INSTRUCTIONS
TEMP     DS    D                       WORKFIELD
SORTCNT  DS    D                       # records to sort
PUTR14   DS    F
SAVE14WR DS    F
SAVE14L  DS    F
SAVE14C  DS    F
SAVE14A  DS    F
GETR14   DS    F
SCRLEN   DS    F
CONVR14  DS    F
PFKR14   DS    F
ALLOCR14 DS    F
SAVEWORK DS    4F                      Save work registers
HEREADDR DS    6F                      Save registers for ESTAE
F0000    DC    F'0'
F0004    DC    F'4'
F0008    DC    F'8'
F381     DC    F'381'                  Length of 'SCREEN' 3278 mod 2
F517     DC    F'517'                  Length of 'SCREEN' 3278 mod 3
F704     DC    F'704'                  Length of 'SCREEN' 3278 mod 4
NEXTSCR  DS    F                       21/29/40 * NEXTENT
SAVEUDAT DC    16F'0'                  Save area for SPFSPFU
SUBPARM  DS    F                       PARM FOR SUBROUTINES
#LINES   DS    F                       Contains 21/29/40
#ALLLNS  DS    F                       Number of valid lines in worksp
TPUTLEN  DS    F                       LENGTH TO BE WRITTEN
*
SYSINDSN DC    CL44'&&RPFIN'           IEBCOPY Sysin data set
PRTDSN   DC    CL44'&&RPFPRINT'
*
EXLST    DS    0F                      JFCB EXIT RPFUT1
         DC    X'87',AL3(JFCB)
JFCB     DS    0F
         IEFJFCBN
*                                      THE EDIT TABLE
RLENGTH  DC    A(NEXTENT)
*
DIRAREA  DS    CL256                   INPUT BUFFER RPFUT1
SCREEN   DS    CL900
BUFFER   DS    CL24
AIDBYTE  DS    C
SAVEC    DS    C                       SAVE FIELD FOR 'C' BYTE
MEMCNT   DC    PL3'0'
         LTORG
         PRINT NOGEN                   SUPPRESS PRINT FOR DCB
SYSIN    DCB   DSORG=PS,DDNAME=RPFIN,MACRF=(PM),LRECL=80,              X
               BLKSIZE=3120,RECFM=FB
RPFUT1   DCB   DSORG=PO,DDNAME=RPFUT1,MACRF=R,EXLST=EXLST
DCBLEN   EQU   *-RPFUT1
RPFUT2   DCB   DSORG=PO,DDNAME=RPFUT2,MACRF=R,EXLST=EXLST
MODELDCB DCB   DSORG=PO,DDNAME=RPFUT1,MACRF=R,EXLST=EXLST
SYSREC   DS    CL80                    SYSIN record
         PRINT GEN
         TITLE 'SCREEN FORMATS'
NOERASE  DC    X'27F1'
ERASE    DC    X'27F5C01140401D40'
SCR1TXT  DC    X'27F5C21140C1',AL3(WHITE) WRITE ERASE / R01,C02
SCR1UID  DC    CL79'RPF Move/Copy Allocation Menu, Userid=xxxxxxx------C
               ----------------------------'
         DC    X'11407A'           R01,C59
MSG1     DS    CL22                MESSAGE AREA
         DC    X'11C1D1',AL3(WHITE),C'Option  ===>'
         DC    AL3(RED),X'1DC1'
SCR1CMD  DC    X'C300001DF0',X'11C24B' R02,C60
         DC    AL3(TURQ),C'Hit ',AL3(WHITE),C'PF03/15 ',AL3(TURQ)
         DC    C'to return'
         DC    X'11C3F3',X'1DF0',AL3(WHITE),C'C ',X'1DF0',AL3(TURQ)
         DC    C'Copy        - '   R04,C04
         DC    AL3(GREEN),C'Copy members '
         DC    X'11C5C3',X'1DF0',AL3(WHITE),C'M ',X'1DF0',AL3(TURQ)
         DC    C'Move        - '   R05,C04
         DC    AL3(GREEN),C'Move members (will be deleted in FROM data x
               set)'
         DC    X'114BD1'           R10,C02
         DC    AL3(YELLOW),C'From - Data set. Specify DSN(*) to Move/Cox
               py all members',AL3(TURQ)
         DC    X'114C60'           R11,C01
         DC    X'1DF5',C'Dsname=',X'1DC913',AL3(RED)
SCR1DSNF DC    CL44' ',X'1DF0'     DSNAME
         DC    X'114DF0'           R12,C01
         DC    X'1DF5',AL3(TURQ),C'Volume=',X'1DC9',AL3(RED)
SCR1VOLF DC    CL6' ',X'1DF0',AL3(TURQ)
         DC    C' If not catalogued'
         DC    X'1150D1'           R14,C02
         DC    AL3(YELLOW),C'To - Data set ',AL3(TURQ)
         DC    X'11D160'           R15,C01
         DC    X'1DF5',C'Dsname=',X'1DC9',AL3(RED)
SCR1DSNT DC    CL44' ',X'1DF0'     DSNAME
         DC    X'11D2F0'           R16,C01
         DC    X'1DF5',AL3(TURQ),C'Volume=',X'1DC9',AL3(RED)
SCR1VOLT DC    CL6' ',X'1DF0',AL3(TURQ)
         DC    C' If not catalogued'
         DC    X'11D550'           R18,C01
         DC    X'1DF5',C'Replace like members:',X'1DC9',AL3(RED)
SCR1REPL DC    CL3'YES',X'1DF5',AL3(TURQ),C'Yes or No',X'1DF0'
SCR1LEN  EQU   *-SCR1TXT
*
SCR5TXT  DC    X'27F1C21140401DF8'
SCR5VAR  DC    CL10'Move/Copy '
SCR5FDSN DC    CL22' '
         DC    C' To '
SCR5TDSN DC    CL22' '
         DC    X'11407A'           R01,C59
MSG5     DC    CL22' '
         DC    X'11C150',X'1DF8',C'Cmd =>',X'1DC113'
REP5     DC    CL24' ',X'1DF0'
         DC    X'11C25F',X'1DF0'   R02,C80
         DC    AL3(YELLOW)
         DC    C' C Name     Newname  TTR    '
SCR5H    DC    CL35'         --- User data ---         '
         DC    CL11'   Members='
SCR5CNT  DC    CL5' ',X'1DF0'
         DC    X'11C3F0'
         DC    AL3(GREEN)
LNE5     DC    X'1DC9',X'11C3F1',CL1' ',X'1DF1',CL8' ',X'1DC9',CL8' '
         DC    X'1DF0',AL3(TURQ),CL44' ',X'1DF8',CL14' ',AL3(GREEN)
SCRENT   EQU   *-LNE5
         DC    X'1DC9',X'11C5C1',CL1' ',X'1DF1',CL8' ',X'1DC9',CL8' '
         DC    X'1DF0',AL3(TURQ),CL44' ',X'1DF8',CL14' ',AL3(GREEN)
         DC    X'1DC9',X'11C6D1',CL1' ',X'1DF1',CL8' ',X'1DC9',CL8' '
         DC    X'1DF0',AL3(TURQ),CL44' ',X'1DF8',CL14' ',AL3(GREEN)
         DC    X'1DC9',X'11C761',CL1' ',X'1DF1',CL8' ',X'1DC9',CL8' '
         DC    X'1DF0',AL3(TURQ),CL44' ',X'1DF8',CL14' ',AL3(GREEN)
         DC    X'1DC9',X'11C8F1',CL1' ',X'1DF1',CL8' ',X'1DC9',CL8' '
         DC    X'1DF0',AL3(TURQ),CL44' ',X'1DF8',CL14' ',AL3(GREEN)
         DC    X'1DC9',X'114AC1',CL1' ',X'1DF1',CL8' ',X'1DC9',CL8' '
         DC    X'1DF0',AL3(TURQ),CL44' ',X'1DF8',CL14' ',AL3(GREEN)
         DC    X'1DC9',X'114BD1',CL1' ',X'1DF1',CL8' ',X'1DC9',CL8' '
         DC    X'1DF0',AL3(TURQ),CL44' ',X'1DF8',CL14' ',AL3(GREEN)
         DC    X'1DC9',X'114C61',CL1' ',X'1DF1',CL8' ',X'1DC9',CL8' '
         DC    X'1DF0',AL3(TURQ),CL44' ',X'1DF8',CL14' ',AL3(GREEN)
         DC    X'1DC9',X'114DF1',CL1' ',X'1DF1',CL8' ',X'1DC9',CL8' '
         DC    X'1DF0',AL3(TURQ),CL44' ',X'1DF8',CL14' ',AL3(GREEN)
         DC    X'1DC9',X'114FC1',CL1' ',X'1DF1',CL8' ',X'1DC9',CL8' '
         DC    X'1DF0',AL3(TURQ),CL44' ',X'1DF8',CL14' ',AL3(GREEN)
         DC    X'1DC9',X'1150D1',CL1' ',X'1DF1',CL8' ',X'1DC9',CL8' '
         DC    X'1DF0',AL3(TURQ),CL44' ',X'1DF8',CL14' ',AL3(GREEN)
         DC    X'1DC9',X'11D161',CL1' ',X'1DF1',CL8' ',X'1DC9',CL8' '
         DC    X'1DF0',AL3(TURQ),CL44' ',X'1DF8',CL14' ',AL3(GREEN)
         DC    X'1DC9',X'11D2F1',CL1' ',X'1DF1',CL8' ',X'1DC9',CL8' '
         DC    X'1DF0',AL3(TURQ),CL44' ',X'1DF8',CL14' ',AL3(GREEN)
         DC    X'1DC9',X'11D4C1',CL1' ',X'1DF1',CL8' ',X'1DC9',CL8' '
         DC    X'1DF0',AL3(TURQ),CL44' ',X'1DF8',CL14' ',AL3(GREEN)
         DC    X'1DC9',X'11D5D1',CL1' ',X'1DF1',CL8' ',X'1DC9',CL8' '
         DC    X'1DF0',AL3(TURQ),CL44' ',X'1DF8',CL14' ',AL3(GREEN)
         DC    X'1DC9',X'11D661',CL1' ',X'1DF1',CL8' ',X'1DC9',CL8' '
         DC    X'1DF0',AL3(TURQ),CL44' ',X'1DF8',CL14' ',AL3(GREEN)
         DC    X'1DC9',X'11D7F1',CL1' ',X'1DF1',CL8' ',X'1DC9',CL8' '
         DC    X'1DF0',AL3(TURQ),CL44' ',X'1DF8',CL14' ',AL3(GREEN)
         DC    X'1DC9',X'11D9C1',CL1' ',X'1DF1',CL8' ',X'1DC9',CL8' '
         DC    X'1DF0',AL3(TURQ),CL44' ',X'1DF8',CL14' ',AL3(GREEN)
         DC    X'1DC9',X'115AD1',CL1' ',X'1DF1',CL8' ',X'1DC9',CL8' '
         DC    X'1DF0',AL3(TURQ),CL44' ',X'1DF8',CL14' ',AL3(GREEN)
         DC    X'1DC9',X'115B61',CL1' ',X'1DF1',CL8' ',X'1DC9',CL8' '
         DC    X'1DF0',AL3(TURQ),CL44' ',X'1DF8',CL14' ',AL3(GREEN)
         DC    X'1DC9',X'115CF1',CL1' ',X'1DF1',CL8' ',X'1DC9',CL8' '
         DC    X'1DF0',AL3(TURQ),CL44' ',X'1DF8',CL14' ',AL3(GREEN)
SCR524   EQU   *-SCR5TXT               3278/3279 MODEL 3 SECTION
         DC    X'1DC9',X'115EC1',CL1' ',X'1DF1',CL8' ',X'1DC9',CL8' '
         DC    X'1DF0',AL3(TURQ),CL44' ',X'1DF8',CL14' ',AL3(GREEN)
         DC    X'1DC9',X'115FD1',CL1' ',X'1DF1',CL8' ',X'1DC9',CL8' '
         DC    X'1DF0',AL3(TURQ),CL44' ',X'1DF8',CL14' ',AL3(GREEN)
         DC    X'1DC9',X'116061',CL1' ',X'1DF1',CL8' ',X'1DC9',CL8' '
         DC    X'1DF0',AL3(TURQ),CL44' ',X'1DF8',CL14' ',AL3(GREEN)
         DC    X'1DC9',X'1161F1',CL1' ',X'1DF1',CL8' ',X'1DC9',CL8' '
         DC    X'1DF0',AL3(TURQ),CL44' ',X'1DF8',CL14' ',AL3(GREEN)
         DC    X'1DC9',X'11E3C1',CL1' ',X'1DF1',CL8' ',X'1DC9',CL8' '
         DC    X'1DF0',AL3(TURQ),CL44' ',X'1DF8',CL14' ',AL3(GREEN)
         DC    X'1DC9',X'11E4D1',CL1' ',X'1DF1',CL8' ',X'1DC9',CL8' '
         DC    X'1DF0',AL3(TURQ),CL44' ',X'1DF8',CL14' ',AL3(GREEN)
         DC    X'1DC9',X'11E561',CL1' ',X'1DF1',CL8' ',X'1DC9',CL8' '
         DC    X'1DF0',AL3(TURQ),CL44' ',X'1DF8',CL14' ',AL3(GREEN)
         DC    X'1DC9',X'11E6F1',CL1' ',X'1DF1',CL8' ',X'1DC9',CL8' '
         DC    X'1DF0',AL3(TURQ),CL44' ',X'1DF8',CL14' ',AL3(GREEN)
SCR532   EQU   *-SCR5TXT          3278/3279 MODEL 4 SECTION
         DC    X'1DC9',X'11E8C1',CL1' ',X'1DF1',CL8' ',X'1DC9',CL8' '
         DC    X'1DF0',AL3(TURQ),CL44' ',X'1DF8',CL14' ',AL3(GREEN)
         DC    X'1DC9',X'11E9D1',CL1' ',X'1DF1',CL8' ',X'1DC9',CL8' '
         DC    X'1DF0',AL3(TURQ),CL44' ',X'1DF8',CL14' ',AL3(GREEN)
         DC    X'1DC9',X'116A61',CL1' ',X'1DF1',CL8' ',X'1DC9',CL8' '
         DC    X'1DF0',AL3(TURQ),CL44' ',X'1DF8',CL14' ',AL3(GREEN)
         DC    X'1DC9',X'116BF1',CL1' ',X'1DF1',CL8' ',X'1DC9',CL8' '
         DC    X'1DF0',AL3(TURQ),CL44' ',X'1DF8',CL14' ',AL3(GREEN)
         DC    X'1DC9',X'116DC1',CL1' ',X'1DF1',CL8' ',X'1DC9',CL8' '
         DC    X'1DF0',AL3(TURQ),CL44' ',X'1DF8',CL14' ',AL3(GREEN)
         DC    X'1DC9',X'116ED1',CL1' ',X'1DF1',CL8' ',X'1DC9',CL8' '
         DC    X'1DF0',AL3(TURQ),CL44' ',X'1DF8',CL14' ',AL3(GREEN)
         DC    X'1DC9',X'116F61',CL1' ',X'1DF1',CL8' ',X'1DC9',CL8' '
         DC    X'1DF0',AL3(TURQ),CL44' ',X'1DF8',CL14' ',AL3(GREEN)
         DC    X'1DC9',X'11F0F1',CL1' ',X'1DF1',CL8' ',X'1DC9',CL8' '
         DC    X'1DF0',AL3(TURQ),CL44' ',X'1DF8',CL14' ',AL3(GREEN)
         DC    X'1DC9',X'11F2C1',CL1' ',X'1DF1',CL8' ',X'1DC9',CL8' '
         DC    X'1DF0',AL3(TURQ),CL44' ',X'1DF8',CL14' ',AL3(GREEN)
         DC    X'1DC9',X'11F3D1',CL1' ',X'1DF1',CL8' ',X'1DC9',CL8' '
         DC    X'1DF0',AL3(TURQ),CL44' ',X'1DF8',CL14' ',AL3(GREEN)
         DC    X'1DC9',X'11F461',CL1' ',X'1DF1',CL8' ',X'1DC9',CL8' '
         DC    X'1DF0',AL3(TURQ),CL44' ',X'1DF8',CL14' ',AL3(GREEN)
SCR543   EQU   *-SCR5TXT
ERR1TXT  DC    CL22'- Scroll had no effect'
ERR2TXT  DC    CL22'------ No XXXX dataset' 10
ERR3TXT  DC    CL22'------ Invalid command'
ERR4TXT  DC    CL22' Logic error, Rc= 0701'
ERR5TXT  DC    CL22'- xxxx data set not PO' 2
ERR6TXT  DC    CL22'xxxx data alloc. error' 0
ERR7TXT  DC    CL22'-Conflicting DCB parms'
ERR8TXT  DC    CL22'Trunc to XXXXX entries' 9
ERR9TXT  DC    CL22'------ PFK not defined'
ERRATXT  DC    CL22'PFK definition invalid'
ERRBTXT  DC    CL22'xxxx dsn not on volume'
ERRCTXT  DC    CL22'------- Text not found'
ERRFTXT  DC    CL22'------- Invalid option'
ERRGTXT  DC    CL22'-- Abend xxxx detected'
ERRHTXT  DC    CL22'-Replace not YES or NO'
ERRJTXT  DC    CL22' From and To are equal'
ERRKTXT  DC    CL22'-------- IEBCOPY error'
ERRLTXT  DC    CL22' No members in FROM ds'
INF1TXT  DC    CL22'Hit enter to exec Cmd.'
INF2TXT  DC    CL22'xxxxxxx members yyyyyy' 16
*        THE NEXT TABLE IS BUILT AS FOLLOWS
*        1. THE OPERATION CODE TO BE TESTED
*        2. THE ASSOCIATE MESSAGE
*        3. THE REPLACEMENT OPERATION CODE
MSGTBLE  DC    C'C',CL030'Copied                        ',X'FA'
         DC    C'M',CL030'Moved                         ',X'FD'
         DC    C'R',CL030'Replaced                      ',X'F9'
MSGC     DC    X'FE',CL30'Error in yyyy, RC IEBCOPY=xxxx',C' ' 10,26
         DC    X'FD',CL30'Moved                         ',X'FD'
         DC    X'FA',CL30'Copied                        ',X'FA'
         DC    X'FC',CL30'Unable to delete member       ',C' '
         DC    X'FB',CL30'Member not replaced           ',C' '
         DC    X'F9',CL30'Replaced                      ',X'F9'
         DC    X'EE',CL30'''S'' is the only line command',C' '
MSG#     EQU   (*-MSGTBLE)/32
NONHL    EQU   X'F0'                   NON HIGHLIGHT NO MDT ON
HL       EQU   X'F8'                   HIGHLIGHT NO MDT ON
NONHLM   EQU   X'F1'                   NON HIGHLIGHT MDT ON
HLM      EQU   X'F9'                   HIGHLIGHT MDT ON
         DS    0F                      FW BOUNDARY
*
*                    Do not insert fields between the BUF... fields
*                    and the DSN... fields
BUFCMD   DS    CL3
BUFDSNF  DS    CL44                    Dsname FROM data set
BUFVOLF  DS    CL6                     Volume FROM data set
DDNF     DC    CL8'RPFUT1'             Ddname FROM data set
DSNFRECF DS    C                       RECFM of FROM dataset
DSNFLREC DS    CL2                     LRECL of FROM dataset
DSNFBLK  DS    CL2                     BLKSIZE of FROM dataset
BUFDSNT  DS    CL44                    Dsname TO data set
BUFVOLT  DS    CL6                     Volume TO data set
DDNT     DC    CL8'RPFUT2'             Ddname TO data set
DSNTRECF DS    C                       RECFM of TO dataset
DSNTLREC DS    CL2                     LRECL of TO dataset
DSNTBLK  DS    CL2                     BLKSIZE of TO dataset
*
COPYCNT  DS    PL3                     Members to be copied
BUFREPL  DS    CL3                     Contains replace Yes or No
SW       DS    X
$ERASE   EQU   128                     If on: screen should be erased
$CHANGE  EQU   64                      If on: screen is changed
$SYSIN   EQU   32                      If on: SYSIN is opened
$COPY    EQU   16                      If on: COPY pending
$ALLMEM  EQU   8                       If on: All members copied
$REPL    EQU   4                       If on: member replaced      @rp1
*
OBTCMLST CAMLST SEARCH,*-*,*-*,IECSDSL1
STOWDEL  DS    CL8                     For STOW macro (Delete)
         DS    0D
         IECSDSL1 1
*
DDMMYY   DS    0CL49                   Output field from CONVDATE
DAYNBR   DC    CL2' '                  Daynbr in the week - 01=SUN
DAYNM#E  DS    CL9                     Dayname in English
DAYNM#D  DS    CL9                     Dayname in Dutch
         DS    CL1
DD       DS    CL2
         DS    CL1
MONNBR   DS    CL2                     Monthnbr in year - 01=Jan
MNAME#E  DS    CL9                     Monthname in English
MNAME#D  DS    CL9                     Monthname in Dutch
         DS    C
CC       DS    CL2                     Century
YY       DS    CL2                     Year
*
YYDDD    DS    PL4                     Julian date (packed)
*
COPYPARM DC    AL2(0)                  First parm of IEBCOPY
COPYDDNS DS    0F
         DC    AL2(STOPC-STARTC)
STARTC   EQU   *
         DC    XL8'00'                 Empty entry (SYSLIN)
         DC    XL8'00'                 EMPTY ENTRY (SYSLMOD MBR)
         DC    XL8'00'                 EMPTY ENTRY (SYSLMOD)
         DC    XL8'00'                 Empty entry (SYSLIB)
         DC    CL8'RPFIN'              SYSIN
         DC    CL8'RPFPRINT'           SYSPRINT
         DC    XL8'00'                 Empty entry (SYSPUNCH)
         DC    CL8'RPFUT1'             SYSUT1
         DC    CL8'RPFUT2'             SYSUT2
         DC    XL8'00'                 Empty entry (SYSUT3)
         DC    XL8'00'                 Empty entry (SYSGO)
         DC    XL8'00'                 Empty entry (SYSTERM)
STOPC    EQU   *
*
BLDLLIST DS    0F                      For BLDL
N1       DC    AL2(1)                  Number of entries
L1       DC    AL2(14)                 Length of entry
BLDLNAME DS    CL14                    BLDL member
         SYALLOC MF=L
         TITLE 'DSECTS USED BY RPFMVCPY'
SPFDATA  DSECT  ,                      MEMBER WITH SPF USERDATA
*                                      OR THE NEW FORMAT RPF USERDATA
SPFMEM   DS    CL8                     MEMBER NAME
SPFTTR   DS    CL3                     TTR
SPFC     DS    C                          C
SPFUSER  EQU   *                       SPF/RPF USERDATA
SPFVERS  DS    X                       SPF VERSION
SPFMOD   DS    X                           MODIFICATION NUMBER
SPFNULL  DS    2X                          NULLS (RECOGNIZE SPF)  @2000
SPFDATEI DS    PL4                         INIT DATE SAVED        @2000
SPFDATEU DS    PL4                         LAST DATE SAVED
SPFTIME  DS    XL2                         TIME LAST SAVE
SPFRECU  DS    XL2                         CURRENT # RECS
SPFRECI  DS    XL2                         INITIAL # RECS
SPFRECM  DS    XL2                         RECS MODIFIED
SPFUID   DS    XL10                        USERID + 2 BLANKS
         DS    CL2
*
MEMBAREA DSECT                         ENTRY IN GETMAIN AREA
PREFIX   DS    CL8
OPER     DS    C                       OPER COULD BE
*                                      C' ' = NO OPERATION
*                                      C'C' = Successful copy
*                                      C'M' = Successful move
*                                      X'EE'= INVALID OPERATION
*
         DS    C
MEMBR    DS    CL8                     MEMBER IN DIRECTORY
         DS    C
ALIAS    DS    C                       ALIAS INDICATOR
         DS    C
INPTTR   DS    CL3
         DS    C
INPUID   DS    CL8
         DS    C
INPDATE  DS    CL8
INPTIME  DS    CL10
INPCARD# DS    0CL6
         DS    C
INPCARDS DS    CL5
         DS    C
INPVERS  DS    CL2
INPCOLON DS    CL1
INPMOD   DS    CL2
         DS    CL1
INPHL    DS    C                       HIGHLIGHT CHAR (X'F1' NON HIGHL,
         DS    CL(PREFIX+88-*)      ) AND X'F9' HIGHLIGHT) (MDT)
         ORG   INPUID
INPC     DS    CL2
         DS    C
INPUDATA DS    CL32
         ORG   ,
MEMBEND  EQU   *
         SPACE 3
ALLOCLST DSECT
ADSN     DS    CL44                    Data set to be allocated
AVOL     DS    CL6                     Volume if any
ADDN     DS    CL8                     Ddname to use for allocation
ARECFM   DS    C                       Record format to return
ALRECL   DS    CL2                     LRECL to return
ABLK     DS    CL2                     BLKSIZE to return
         SPACE 3
COMMAREA RPFCOMM
         PRINT NOGEN
         DCBD  DSORG=PO,DEVD=DA
         IHASDWA
         IEZDEB
LINES21  EQU   (21*NEXTENT)            NEXT SCREEN IN MEMBER AREA
LINES29  EQU   (29*NEXTENT)            NEXT SCREEN IN MEMBER AREA
LINES40  EQU   (40*NEXTENT)            NEXT SCREEN IN MEMBER AREA
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         END
