RPFEND   TITLE 'END OF RPF PROCESSOR'
*---------------------------------------------------------------------*
*        MODULE:   RPFEND                                             *
*                                                                     *
*        FUNCTION: WRITE THE MEMBER SELECTION LIST OF RPFDATAL IN     *
*                  THE DATABASE WITH KEY 'USERID' PADDED WITH A 1     *
*                  AFTER WRITE FREE THE WORKSPACE AND OTHER AREAS     *
*                  AND DEALLOCATE ALL DATASETS                        *
*        MODIFICATIONS:                                               *
*        2002/08/26 RPR: FREE RPFVTC1 DATASET                      @RP1
*        2002/09/29 RPR: FREE THE RETRIEVE BUFFER                  @RP2
*        2002/10/04 RPR: WRITE RETRIEVE RECORDS BACK               @RP4
*        2003/05/11 RPR: FREE RPFCTPST TEMPORARY DATASET           @RP5
*----------------------------------(C)-2003 SKYBIRD SYSTEMS ----------*
RPFEND   CSECT
         SAVE  (14,12),,*          ×
         USING RPFEND,15           ×
         LA    11,SAVE             ×
         ST    13,SAVE+4           ×    LINKAGE CONVENTIONS
         ST    11,8(0,13)          ×
         LR    13,11               ×
         B     START               ×
         DS    0F                  /
SAVE     DC    18F'-1'
         DC    CL8'&SYSDATE',C' ',CL8'&SYSTIME'
START    DS    0H
         DROP  15
         LA    12,2048(13)         SECOND BASE REGISTER
         LA    12,2048(12)
         USING SAVE,13,12
         L     11,0(1)             PICKUP COMMAREA
         USING COMMAREA,11
         CLC   COMMDSN,BLANKS      NO DATABASE FILLED IN
         BE    RETURN              YES: CLEANUP OTHER STUFF
         SYALLOC DSN=COMMDSN,DISP1=SHR,DDN=DATABASE,MF=E DATABASE
         LTR   15,15               ALLOCATION OK ?
         BZ    ALLOCOK             YES: PROCEED
         MVC   MSG3,ERR5TXT        MOVE ERROR MESSAGE
         SYALLOC FREE=DATABASE,MF=E
         B     RETURN              BRANCH IF ERROR
ALLOCOK  DS    0H
         OPEN  VSAMACB             OPEN THE ACB
         LTR   15,15               ALRIGHT ?
         BZ    OPENOK              YES: PROCEED
         MVC   MSG3,ERR6TXT        MOVE ERROR MESSAGE
         CLOSE VSAMACB
         SYALLOC FREE=DATABASE,MF=E
         B     RETURN              BRANCH IF ERROR
OPENOK   DS    0H
         MVC   DBUID,USERID        MOVE USERID AS KEY
         LA    8,DBUID
         LA    4,7                 MAX LENGTH
UID1     DS    0H
         CLI   0(8),C' '           BLANK FOUND?
         BE    UID9                YES: PAD WITH A '1'
         LA    8,1(8)              NEXT CHAR INPUT
         BCT   4,UID1              LOOP
UID9     DS    0H
         MVI   0(8),C'1'           PAD WITH A '1'
         GET   RPL=VSAMRPL         READ THE DATABASE RECORD
         LTR   15,15               ALLRIGTH ?
         BZ    READOK              YES: PROCEED
         MVC   MSG3,ERR7TXT        MOVE ERROR MESSAGE
         CLOSE VSAMACB
         SYALLOC FREE=DATABASE,MF=E
         B     RETURN              BRANCH IF ERROR
READOK   DS    0H
         MVC   DBSELLST(250),COMMEDS1 MOVE THE
         MVC   DBSELLST+250(150),COMMEDS1+250  DATASET LIST
         PUT   RPL=VSAMRPL
         MVI   0(R8),C'A'              KEY IS USERID + 'A'         @RP4
         MODCB RPL=VSAMRPL,RECLEN=1612,AREALEN=1612                @RP4
         GET   RPL=VSAMRPL             READ THAT RECORD            @RP4
         LA    R4,DBUID+8              POINT TO AREA               @RP4
         L     R6,CRETRIEV             POINT TO RETRIEVE BUFFER    @RP4
         LA    R5,1604                 RECORD LENGTH - 8           @RP4
         LA    R7,1604                 RECORD LENGTH - 8           @RP4
         MVCL  R4,R6                   MOVE TO AREA                @RP4
         PUT   RPL=VSAMRPL             WRITE RECORD BACK           @RP4
         MODCB RPL=VSAMRPL,RECLEN=1608,AREALEN=1608                @RP4
         MVI   0(R8),C'B'              KEY IS USERID + 'B'         @RP4
         GET   RPL=VSAMRPL             READ 2ND RETRIEVE RECORD    @RP4
         LA    R4,DBUID+8              POINT TO AREA               @RP4
         L     R6,CRETRIEV             POINT TO RETRIEVE BUFFER    @RP4
         LA    R6,1604(R6)             POINT TO 2ND PORTION        @RP4
         LA    R5,1600                 RECORD LENGTH - 8           @RP4
         LA    R7,1600                 RECORD LENGTH - 8           @RP4
         MVCL  R4,R6                   MOVE TO AREA                @RP4
         PUT   RPL=VSAMRPL             WRITE 2ND RECORD BACK       @RP4
         MVI   0(R8),C'C'              KEY IS USERID + 'C'         @RP4
         GET   RPL=VSAMRPL             READ 2ND RETRIEVE RECORD    @RP4
         LA    R4,DBUID+8              POINT TO AREA               @RP4
         L     R6,CRETRIEV             POINT TO RETRIEVE BUFFER    @RP4
         LA    R6,3204(R6)             POINT TO 3RD PORTION        @RP4
         LA    R5,1600                 RECORD LENGTH - 8           @RP4
         LA    R7,1600                 RECORD LENGTH - 8           @RP4
         MVCL  R4,R6                   MOVE TO AREA                @RP4
         PUT   RPL=VSAMRPL             WRITE 3RD RECORD BACK       @RP4
         CLOSE VSAMACB
         SYALLOC FREE=DATABASE,MF=E
RETURN   TM    INFCODE2,$NOGO      NO WORKSPACE GETMAINED ?
         BNZ   ERR4                YES: ERROR GETMAIN FAILED
         L     1,GETMSTRT          STARTADDRESS WORKSPACE
         L     1,GETMSTRT          STARTADDRESS WORKSPACE
         L     2,GETMLEN           LENGTH WORKSPACE
         FREEMAIN RC,LV=(2),A=(1)  FREE WORKSPACE
         LTR   15,15
         BZ    RETURN1
ERR4     MVC   MSG3(L'ERR4TXT),ERR4TXT
RETURN1  MVC   USERID3(7),USERID
         OI    STIME+3,X'0F'
         MVC   STIME3(10),PATT1
         ED    STIME3(10),STIME    START TIME IN SCREEN
         OI    TTIME+3,X'0F'       CLEAR SIGN
         MVC   TTIME3(10),PATT1    STOP TIME IN SCREEN
         ED    TTIME3(10),TTIME    CLEAR SIGN
         GTSIZE ,                  OBTAIN SCREEN SIZE
         LR    3,0                 SAVE NUMBER OF ROWS
         CH    3,=H'32'            32 LINE SCREEN ?
         BE    WRALT               YES: WRITE ALTERNATE SCREEN
         CH    3,=H'43'            43 LINE SCREEN ?
         BE    WRALT               YES: WRITE ALTERNATE SCREEN
         TPUT  CLEAR1,L'CLEAR1,FULLSCR CLEAR STD SCREEN
         B     MSG3WRT             BRANCH AROUND
WRALT    DS    0H
         TPUT  CLEAR2,L'CLEAR2,FULLSCR CLEAR ALTERNATE SCREEN
MSG3WRT  DS    0H
         STLINENO LINE=1           CURSOR AT R01,C01
         STFSMODE OFF              END FULLSCREEN MODE
         TPUT  MSG3TXT,MSG3LEN
         SYALLOC FREE=RPFWORK,MF=E FREE THE
         SYALLOC FREE=RPFWORK2,MF=E         FILES
         SYALLOC FREE=RPFPRINT,MF=E         RELEASE OLD PRINT
         SYALLOC FREE=RPFTERM,MF=E          FILES
         SYALLOC FREE=RPFEDT1,MF=E     FREE RPFPDS TEMP DS
         SYALLOC FREE=RPFVTC1,MF=E     FREE RPFVTOC TEMP DS        @RP1
         SYALLOC FREE=RPFCTPST,MF=E    FREE RPFEDIT TEMP DS        @RP6
         SYALLOC FREE=RPFLKPRT,MF=E    FREE LINK. EDITOR OUTPUT
         L     2,COMMSCR               LOAD SCREEN ADDRESS
         FREEMAIN R,LV=8192,A=(2)
         L     2,CRETRIEV              LOAD RETRIEVE BUFFER        @RP2
         FREEMAIN R,LV=4804,A=(2)      FREE THIS AREA              @RP2
         L     13,SAVE+4
         RETURN (14,12),RC=0       RETURN TO RPFMAIN
         TITLE 'SYALLOC CONTROL BLOCKS'
         SYALLOC MF=L
         TITLE 'WORKAREAS AND CONSTANTS'
MSG3TXT  DC    CL7'USERID='
USERID3  DC    CL7' ',CL11',RPF START:'
STIME3   DC    CL10' ',CL9',RPF END:'
TTIME3   DC    CL10' '
MSG3     DC    CL22' '
MSG3LEN  EQU   *-MSG3TXT
CLEAR1   DC    X'27F5C21140401D4013'
CLEAR2   DC    X'277EC21140401D4013'
ERR4TXT  DC    CL22'   WORKSPACE NOT FREED'
ERR5TXT  DC    CL22'  ALLOC ERROR DATABASE'
ERR6TXT  DC    CL22'   OPEN ERROR DATABASE'
ERR7TXT  DC    CL22'   READ ERROR DATABASE'
PATT1    DC    X'402021207A20207A2020'
BUFFER   DC    CL80' '
VSAMACB  ACB   AM=VSAM,MACRF=(KEY,DIR,OUT),DDNAME=DATABASE
*
VSAMRPL  RPL   ACB=VSAMACB,OPTCD=(KEY,DIR,UPD,MVE),                    X
               AREA=DBAREA,AREALEN=408,RECLEN=408,                     X
               ARG=DBUID
*
         LTORG
DBAREA   DS    0CL408
DBUID    DS    CL8
DBSELLST DS    CL400
         DS    CL804                                               @RP4
         TITLE 'RPFCOMM DSECT'
COMMAREA RPFCOMM
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         END
