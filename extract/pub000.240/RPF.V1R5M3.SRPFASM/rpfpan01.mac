RPFPAN01 TITLE 'ADD/REPLACE PANVALET MEMBERS'
*---------------------------------------------------------------------*
*                                                                     *
*        MODULE:        RPFPAN01                                      *
*                                                                     *
*        FUNCTION:      PRESENT A MENU FOR ALLOCATION A PANVALET      *
*                       LIBRARY. IF THE PANVALET FILE IS ALLOCATED    *
*                       A PANVALET MODULE CAN BE ADDED/REPLACED OR    *
*                       DELETED.  AFTER SUCCESSFUL ALLOCATION THE     *
*                       PANVALET ROUTINE WILL BE INVOKED. THE         *
*                       SYSPRINT OF PANVALET WILL BE SET ON A TEM-    *
*                       PORARY FILE WHICH WILL BE GIVEN TO RPFASM2    *
*                       TO BROWSE THAT FILE.                          *
*                       IF AN ERROR OCCURS RPFPAN01 REDISPLAYES THE   *
*                       MENU, SO THE USER CAN RETRY OR ESCAPE.        *
*                                                                     *
*        NOTE:          IF CMDAREA CONTAINS THE WORD 'NOALLOC'        *
*                       RPFPAN01 ASSUMES THAT THE LIBRARY IS          *
*                       ALREADY ALLOCATED. IF THIS IS SO: THE         *
*                       ALLOCATIONS CANNOT CHANGED.                   *
*                       'NOALLOC' WILL BE SET BY THE PANVALET MAINTE- *
*                       NANCE ROUTINE RPFLIB.                         *
*                                                                     *
*        SUBROUTINE:    RPFASM2 THE RPF BROWSE ROUTINE                *
*                                                                     *
*        RETURNCODES (SET IN RTNCODE FIELD OF COMMAREA)               *
*                       00 - COMPLETION OK.                           *
*                       08 - EXIT ENTERED BY USER.                    *
*                       12 - ALLOCATION WORKDATASETS.                 *
*                       16 - WORKSPACE EMPTY.                         *
*                                                                     *
*------------------------------------------ (C)-1985 SKYBIRD SYSTEMS -*
         SPACE 2
RPFPAN01 CSECT
         USING *,R15
         SAVE  (14,12),,*
         LA    R14,SAVE
         ST    R13,SAVE+4
         ST    R14,8(R13)
         LR    R13,R14
         LA    R12,2048(R13)       SECOND BASE REGISTER
         LA    R12,2048(R12)
         DROP  R15
         USING SAVE,R13,R12        ACCOMPLISH ADDRESSABILITY
         B     START               BRANCH AROUND CONSTANTS
         SPACE 2
SAVE     DC    18F'-1'
         DC    CL8'&SYSDATE'
         DC    CL8' '
         DC    CL8'&SYSTIME'
         EJECT
START    DS    0D
         L     R11,0(R1)           PICKUP COMMAREA
         USING COMMAREA,R11        GET ADDRESSABILITY
         MVI   SWITCH,X'00'        CLEAR SWITCH
         MVC   SCR2MAT,ATNPRO      SET ATTRIBUTE BYTES NON-PROT
         MVC   SCR2DAT,ATNPRO      SET ATTRIBUTE BYTES NON-PROT
         MVC   SCR2VAT,ATNPRO      SET ATTRIBUTE BYTES NON-PROT
         XC    RTNCODE,RTNCODE     INIT RTNCODE FIELD
         CLC   CMDAREA(7),=C'NOALLOC' NO ALLOC SPECIFIED ?
         BNE   START00
         OI    SWITCH,$NOALLOC     MARK ALLREADY ALLOCATED BY RPFLIB
         MVC   SCR2MAT,ATPROT      SET ATTRIBUTE BYTES PROTECTED
         MVC   SCR2DAT,ATPROT      SET ATTRIBUTE BYTES PROTECTED
         MVC   SCR2VAT,ATPROT      SET ATTRIBUTE BYTES PROTECTED
         B     START0A             BRANCH
START00  DS    0H
         SYALLOC FREE=RPFPAN,MF=E  FREE PREVIOUS MASTERFILE IF PRES
START0A  DS    0H
         SYALLOC FREE=RPFPRINT,MF=E FREE PREVIOUS RPFPRINT DATASET
         MVC   SCR2PGMR,BLANKS     BLANK PGMR FIELD
         MVC   SCR2LANG,BLANKS     BLANK LANG FIELD
         MVC   SCR2DESC,BLANKS     BLANK DESC FIELD
         MVC   SCR2PGMR(7),USERID  MOVE USERID IF PGMR FIELD
         LOAD  EP=RPFLIB02,ERRET=START05 LOAD USERID NAME TABLE ...
*
*        THE USERID/NAME TABLE (RPFLIB02) IS BUILT AS FOLLOWS:
*        1.   BYTE 0-3             L(4) NUMBER OF ENTRIES
*        2.   BYTE (4-25)          L(22) FIRST ENTRY
*        3.   BYTE (26-47)         L(22) SECOND ENTRY
*        4.   BYTE (..-..)         L(22) ... NEXT ENTRIES
*        EACH ENTRY CONTAINS OF A 7 BYTE USERID AND A 15 BYTE NAME
*             OF THE OWNER OF THE USERID
*
         LR    R4,R0               SAVE ENTRY POINT
         L     R5,0(R4)            NUMBER OF ENTRIES
         LA    R4,4(R4)            POINT TO FIRST ENTRY
START01  CLC   USERID(7),0(R4)     COMPARE USERID
         BE    START02             EQUAL: FOUND
         LA    R4,22(R4)           NEXT ENTRY
         BCT   R5,START01          LOOP UNTIL FOUND
         MVC   MSG2,ERR6TXT        MOVE WARNING MESSAGE
         B     START03             LEAVE USERID IN PGMR FIELD OF PANEL
START02  MVC   SCR2PGMR,7(R4)      MOVE OWNER OF USERID IN PGMR FIELD
START03  EQU   *
         DELETE EP=RPFLIB02        DELETE ENTRY POINT
START05  MVC   SCR2DSN(44),PANLIB MOVE LIBRARY FROM COMMAREA
         MVC   SCR2VOL(6),PANVOL MOVE VOLUME FROM COMMAREA
         MVC   SCR2MEM(10),PANMOD  MOVE MODULE FROM COMMAREA
         MVC   SCR2TXT(2),=X'27F5' ERASE WRITE
         MVC   SCR2LAST+1(2),=X'5CF0' R24,C01 IN SCREEN
         GTSIZE ,                  OBTAIN SCREEN SIZE
         LR    R3,R0               SAVE NUMBER OF ROWS
         CH    R3,=H'43'           43 LINES RECEIVED ?
         BE    START07             YES: BRANCH
         CH    R3,=H'32'           32 LINES RECEIVED ?
         BE    START09             YES: BRANCH
         B     START11             ELSE 24 LINE
START07  DS    0H
         MVC   SCR2TXT(2),=X'277E' ERASE WRITE ALTERNATE
         MVC   SCR2LAST+1(2),=X'F460' R43,C01 IN SCREEN
         B     START11
START09  DS    0H
         MVC   SCR2TXT(2),=X'277E' ERASE WRITE ALTERNATE
         MVC   SCR2LAST+1(2),=X'E6F0' R32,C01 IN SCREEN
START11  DS    0H
RESTART  TPUT SCR2TXT,SCR2LEN,FULLSCR  PANVALET READ MENU
GET1     LA    R5,BUFFER               OUTPUT FORMATTED BUFFER
         L     R3,COMMSCR              LOAD SCREEN ADDRESS
         TGET  (R3),306,ASIS           READ THE SCREEN
         LR    R4,R1                   SAVE LENGTH
*        DO AN TGET ASIS TO OBTAIN THE AID BYTE
*        AFTER THE TGET ASIS REMOVE THE SBA'S FROM THE OUTPUT
         CLI   0(R3),X'F3'             PFK3 (END) PRESSED
         BE    EXIT                    YES: RETURN
         CLI   0(R3),X'C3'             PFK15 (END) PRESSED
         BE    EXIT                    YES: RETURN
         XR    R2,R2                    INIT OUTPUT LENGTH
         SH    R4,=H'3'                SKIP AID AND CURSOR ADDRESS
         C     R4,F0000                REGISTER ZERO
         BNH   CONV099                 NOT HIGH: END OF ROUTINE
         LA    R3,3(R3)
         LA    R5,BUFFER               OUTPUT ADDRESS
*        INPUT SCREEN IS POINTED TO BY R3
*        OUTPUT SCREEN IS POINTED TO BY R5
*        THE NEXT SECTION WILL REMOVE ALL THE SBA'S
CONV001  CLI   0(R3),X'11'             SET BUFFER ADDRESS ?
         BE    CONV003                 YES: SKIP NEXT 3 BYTES INPUT
CONV002  MVC   0(1,R5),0(R3)           MOVE INPUT BYTE
         LA    R3,1(R3)                NEXT BYTE INPUT
         LA    R2,1(R2)                COUNT OUTPUT BYTES
         LA    R5,1(R5)                NEXT BYTE OUTPUT
         BCT   R4,CONV001              TEST NEXT BYTE
         B     CONV099                 END OF ROUTINE
CONV003  LA    R3,3(R3)                SKIP 3 BYTES INPUT
         BCTR  R4,0                    MINUS 1 BCT
         BCTR  R4,0                    MINUS 1 BCT
         C     R4,F0000                REGISTER ZERO ?
         BNH   CONV099                 YES: TERMINATE CONVERSION
         BCT   R4,CONV001              TEST NEXT BYTE
CONV099  LR    R1,R2                   OUTPUT LENGTH IN REGISTER 1
PUT2     DS    0H
         LTR   R1,R1               NO INPUT RECEIVED ?
         BZ    RESTART             YES: REDISPLAY
         MVI   MSG2,C'-'           HYPHEN MSG
         MVC   MSG2+1(21),MSG2     AND FILLUP
SCAN01   MVC   PANVVOL(6),BLANKS   CLEAR VOLUME
         MVC   MODULE,BLANKS       CLEAR MODULE
         MVC   PANFILE(44),BLANKS  CLEAR PANVALET LIB NAME
         MVC   DESC(30),BLANKS     CLEAR DESC FIELD
         MVC   PGMR(15),BLANKS     CLEAR PGMT FIELD
         MVC   LANG(09),BLANKS     CLEAR LANG FIELD
         LA    R5,BUFFER           POINT TO BEGINNING OF BUFFER
         LR    R6,R1               LOAD ACT LENGTH OF BUFFER
         LA    R4,COMMAND          POINT TO 'COMMAND' FIELD
SCAN03   CLC   0(06,R5),=C'DESC= ' SEARCH TO 'DESC= '
         BE    SCAN04              YES: FOUND
         MVC   0(1,R4),0(R5)       MOVE BYTE COMMAND
         LA    R5,1(R5)            NEXT BYTE
         LA    R4,1(R4)            NEXT BYTE
         BCT   R6,SCAN03           EXAMINE NEXT BYTE
         B     RESTART             NOT FOUND: REDISPLAY
SCAN04   LA    R4,DESC             POINT TO DESC FIELD
         LA    R5,6(R5)            POINT AFTER 'DESC= '
         SH    R6,=H'6'            SUBTRACT FROM BCT REG
SCAN05   CLC   0(06,R5),=C'PGMR= ' SEARCH TO 'PGMR= '
         BE    SCAN06              YES: FOUND
         MVC   0(1,R4),0(R5)       MOVE BYTE DESC
         LA    R5,1(R5)            NEXT BYTE
         LA    R4,1(R4)            NEXT BYTE
         BCT   R6,SCAN05           EXAMINE NEXT BYTE
         B     RESTART             NOT FOUND: REDISPLAY
SCAN06   LA    R4,PGMR             POINT TO PGMR FIELD
         LA    R5,6(R5)            POINT AFTER 'PGMR= '
         SH    R6,=H'6'            SUBTRACT FROM BCT REG
SCAN07   CLC   0(06,R5),=C'LANG= ' SEARCH TO 'LANG= '
         BE    SCAN08              YES: FOUND
         MVC   0(1,R4),0(R5)       MOVE BYTE PGMR
         LA    R5,1(R5)            NEXT BYTE
         LA    R4,1(R4)            NEXT BYTE
         BCT   R6,SCAN07           EXAMINE NEXT BYTE
         B     RESTART             NOT FOUND: REDISPLAY
SCAN08   LA    R4,LANG             POINT TO LANG FIELD
         LA    R5,6(R5)            POINT AFTER 'LANG= '
         SH    R6,=H'6'            SUBTRACT FROM BCT REG
SCAN09   CLC   0(13,R5),=C'MODULE      =' SEARCH FOR MODULE
         BE    SCAN10              FOUND: PROCESS MODULE
         MVC   0(1,R4),0(R5)       MOVE 1 BYTE LANG FIELD
         LA    R5,1(R5)            NEXT BYTE
         LA    R4,1(R4)            NEXT BYTE
         BCT   6,SCAN09            EXAMINE NEXT BYTES
         B     RESTART             CLEAR KEY PRESSED
SCAN10   LA    R5,13(R5)           POINT AFTER 'MODULE='
         SH    R6,=H'13'           SUBTACT LENGTH FROM BCT
         LA    R4,MODULE           POINT TO MODULE FIELD
SCAN11   CLC   0(13,R5),=C'LIBRARY     =' SEARCH FOR LIBRARY
         BE    SCAN12              FOUND: PROCESS LIBRARY
         MVC   0(1,R4),0(R5)       MOVE 1 CHAR. MODULE
         LA    R5,1(R5)            NEXT CHAR.
         LA    R4,1(R4)            NEXT CHAR.
         BCT   R6,SCAN11           EXAMINE NEXT BYTES
         B     RESTART             CLEAR KEY PRESSED
SCAN12   LA    R5,13(R5)           POINT AFTER 'LIBRARY ='
         SH    R6,=H'13'           SUBTACT LENGTH FROM BCT
         LA    R4,PANFILE          POINT TO PANVALET FILE FIELD
SCAN13   CLC   0(13,R5),=C'VOLUME      =' SEARCH FOR VOLUME
         BE    SCAN14              FOUND: PROCESS VOLUME
         MVC   0(1,R4),0(R5)       MOVE 1 CHAR. PANFILE
         LA    R5,1(R5)            NEXT CHAR.
         LA    R4,1(R4)            NEXT CHAR.
         BCT   R6,SCAN13           EXAMINE NEXT BYTES
         B     RESTART             CLEAR KEY PRESSED
SCAN14   LA    R5,13(R5)           POINT AFTER 'VOLUME='
         SH    R6,=H'13'           SUBTACT LENGTH FROM BCT
         LA    R4,PANVVOL          POINT TO PANVVOL FIELD
SCAN15   CLC   0(11,R5),=C'    DDNAME=' SEARCH FOR DDNAME
         BE    SCAN17              FOUND: PROCESS DDNAME
         MVC   0(1,R4),0(R5)       MOVE 1 CHAR. PANVVOL
         LA    R5,1(R5)            NEXT CHAR.
         LA    R4,1(R4)            NEXT CHAR.
         BCT   R6,SCAN15           EXAMINE NEXT BYTES
         B     RESTART             CLEAR KEY PRESSED
SCAN17   EQU   *
         OC    PANFILE,BLANKS      XLATE TO UPPER CASE CHARS
         OC    MODULE,BLANKS       ALSO FOR MODULENAME
         CLI   MODULE,C' '         NO MODULE SPECIFIED ?
         BNE   *+10                BRANCH
         MVC   MODULE,=C'TEMPNAME  ' TAKE TEMPNAME AS DEFAULT
         OC    PANVVOL,BLANKS      AND VOLSER
         OC    DESC,BLANKS         AND DESC
         OC    PGMR,BLANKS         AND PGMR
         OC    LANG,BLANKS         AND LANG
         OI    COMMAND,C' '        AND COMMAND
         MVC   SCR2VOL,PANVVOL     IF THERE IS ONE.
         MVC   SCR2DSN,PANFILE     ALSO INTO SCREEN TEXT.
         MVC   SCR2MEM,MODULE      AND MODULE NAME.
         MVC   SCR2DESC,DESC       MOVE 'DESC' FIELD
         MVC   SCR2PGMR,PGMR       MOVE 'PGMR' FIELD
         MVC   SCR2LANG,LANG       MOVE 'LANG' FIELD
         CLI   COMMAND,C'X'        EXIT ?
         BE    EXIT                YES: EXIT
         CLI   COMMAND,C'1'        ADD A PANVALET MEMBER
         BE    CHECK01             YES: PROCEED
         CLI   COMMAND,C'2'        REP A PANVALET MEMBER
         BE    CHECK02             YES: PROCEED
         MVC   MSG2,ERR2TXT        MOVE ERROR MESSAGE
         B     RESTART             WRITE THE SCREEN
CHECK01  DS    0H
         CLC   LANG,BLANKS         LANG SPECIFIED ???
         BNE   CHECK02             YES: CONTINUE
         MVC   MSG2,ERR8TXT        MOVE ERROR MESSAGE
         B     RESTART             ISSUE ERROR MESSAGE
CHECK02  CLC   GETMSTRT,LASTREC    NO DATA IN WORKSPACE ?
         BNH   ALLOC00             NO: ALLRIGTH
         MVC   RTNCODE,F0016       MOVE RETURN CODE
         B     RETURN              RETURN TO USER
ALLOC00  DS    0H
         CLC   DESC,BLANKS         DESC BLANKS ?
         BE    ALLOC00A            YES: BRANCH
         CLC   PGMR,BLANKS         PGMR BLANKS ?
         BE    ALLOC00E            YES: ERROR BOTH SHOULD BE SPECIFIED
         B     ALLOC00Z
ALLOC00A EQU   *
         CLC   PGMR,BLANKS         PGMR BLANKS ?
         BE    ALLOC00Z            NO: ERROR BOTH SHOULD BE SPECIFIED
ALLOC00E EQU   *
         MVC   MSG2,ERR7TXT        MOVE ERROR MSG
         B     RESTART             ISSUE MESSAGE
ALLOC00Z EQU   *
         TM    SWITCH,$NOALLOC     ALREADY ALLOC. BY RPFPAN
         BO    ALLOCOK             YES: BYPASS SYALLOC OF RPFPAN
         CLI   PANVVOL,C' '        NO VOLUME SPECIFIED ?
         BNE   ALLOC01             SKIP LOCATE
         LOCATE LOC                TRY TO LOCATE PANVALET FILE
         LTR   R15,R15             FOUND ?
         BNZ   LOCERR              NO: PRODUCE ERROR MESSAGE
         MVC   PANVVOL,LOCVOL      MOVE VOLUME
         MVC   SCR2VOL,LOCVOL      MOVE INTO SCREEN
         B     ALLOC01             GOTO ALLOC
LOCERR   MVC   MSG2,ERR1TXT        MOVE ERROR MESSAGE
         B     RESTART             REWRITE THE SCREEN
ALLOC01  EQU   *
         OBTAIN OBTCMLST           TRY TO FIND THE DSNAME ON VOL
         LTR   R15,R15             OK ?
         BZ    ALLOC02             YES: ALLOCATE
         MVC   MSG2,ERR4TXT        MOVE ERROR MESSAGE
         B     RESTART             REWRITE THE SCREEN
ALLOC02  EQU   *
         SYALLOC DDN=RPFPAN,DSN=PANFILE,DISP1=SHR,MF=E,                X
               VOL=PANVVOL,UNITA=COMMUNIT
         LTR   R15,R15
         BZ    ALLOCOK
         SYCONVHX IN=DAERROR,OUT=ERR3CODE,L=2 CONVERT DYNALLOC ERROR
         MVC   MSG2,ERR3TXT
         B     RESTART             REVIEW SCREEN
ALLOCOK  EQU   *
         SYALLOC MF=E,DSN=UT5DSN,PRI=3,SEC=2,SPTYP=CYL,                X
               UNITA=COMMSTOR,DISP1=MOD,DDN=RPFUT5,DISP2=DELETE
         LTR   R15,R15             OK ?
         BNZ   ERROR99             ERROR IF NOT
         SYALLOC MF=E,DSN=PRTDSN,PRI=5,SEC=4,SPTYP=TRK,                X
               UNITA=COMMSTOR,DISP1=MOD,DDN=RPFPRINT,DISP2=DELETE
         LTR   R15,R15             OK ?
         BNZ   ERROR99             ERROR IF NOT
         OPEN  (RPFUT5,(OUTPUT))   OPEN SYSIN FILE
         MVC   RECORD,BLANKS       BLANK RECORD
PANV01   CLI   COMMAND,C'1'        ADD A MEMBER ?
         BNE   PANV07              NO: CHECK OTHERS
         MVC   RECORD(5),=C'++ADD'  MOVE ADD CARD
         MVC   RECORD+6(10),MODULE  MOVE MODULE NAME
         LA    R3,RECORD+6         START RECORD
         LA    R4,11               NUMBER OF BYTES+1
         XR    R5,R5               CLEAR REG5
PANV03   EQU   *
         CLI   0(R3),C' '          BLANK FOUND ??
         BE    PANV05              OK: BRANCH
         LA    R3,1(R3)            INCR POINTER
         LA    R5,1(R5)            INCR COUNTER
         BCT   R4,PANV03           LOOP UNTIL ALL DONE
PANV05   EQU   *
         ST    R5,MODLEN           SAVE ACTUAL LENGTH OF MODULE
         MVI   0(R3),C','          MOVE COMMA
         MVC   1(9,R3),LANG        MOVE LANGUAGE
         PUT   RPFUT5,RECORD       WRITE RECORD
         B     PANWRITE            READ WORKSPACE
PANV07   EQU   *
         MVC   RECORD(9),=C'++UPDATE ' MAKE CARD
         MVC   RECORD+9(10),MODULE  MOVE NAME OF MODULE
         LA    R3,RECORD+9         START RECORD
         LA    R4,11               NUMBER OF BYTES+1
         XR    R5,R5               CLEAR REG5
PANV09   EQU   *
         CLI   0(R3),C' '          BLANK FOUND ??
         BE    PANV11              OK: BRANCH
         LA    R3,1(R3)            INCR POINTER
         LA    R5,1(R5)            INCR COUNTER
         BCT   R4,PANV09           LOOP UNTIL ALL DONE
PANV11   EQU   *
         ST    R5,MODLEN           SAVE ACTUAL LENGTH OF MODULE
         MVC   0(06,R3),=C',0,ALL'
         PUT   RPFUT5,RECORD       WRITE ON FILE
         B     PANWRITE            READ WORKSPACE
PANWRITE MVC   RECORD,BLANKS       BLANK RECORD
         L     R3,FIRSTREC         FIRST RECORD IN WORKSPACE
         L     R5,LASTREC          LASTRECORD POINTER IN WORKSPACE
         LA    R5,79(R5)           ADJUST OFFSET
         LA    R4,NEXTENT          RECORD LENGTH
PANV13   PUT   RPFUT5,(3)          WRITE WORKSPACE LINE
         BXLE  R3,R4,PANV13        WRITE COMPLETE WORKSPACE
         CLC   DESC,BLANKS         DESC AND PGMR BLANKS ?
         BE    PANV999             YES: SKIP
         MVC   RECORD,BLANKS       CLEAR RECORD
         MVC   RECORD(9),=C'++COMMENT' BUILD COMMENT CARD
         L     R5,MODLEN           LENGTH OF MODULE
         MVC   RECORD+10(10),MODULE    MOVE MODULE
         LA    R4,RECORD+10
         ALR   R4,R5
         MVI   0(R4),C','          MOVE COMMA
         MVC   1(15,R4),PGMR       MOVE PGMR
         MVC   21(30,R4),DESC      MOVE DESCR
         PUT   RPFUT5,RECORD       WRITE RECORD
PANV999  EQU   *
         CLOSE RPFUT5
         FREEPOOL RPFUT5
         LINK  EPLOC=PANNAME,PARAM=(PANPARM),VL=1
         TM    SWITCH,$NOALLOC     ALREADY ALLOCATED BY RPFLIB ?
         BO    LINKBRO             YES LINK IMMED TO BROWSE
         MVC   PANMOD,MODULE       MOVE MODULE INTO COMMAREA
         MVC   PANLIB,PANFILE      MOVE PANVALET LIBRARY IN COMMAREA
         MVC   PANVOL,PANVVOL      MOVE VOLUME INTO COMMAREA
LINKBRO  MVC   CMDAREA,BLANKS      BLANK CMDAREA
         MVC   CMDAREA(8),=CL8'RPFPRINT' MOVE DDNAME OF LIBR OUTPUT
         LINK  EP=RPFASM2,PARAM=((11)),VL=1 LINK TO BROWSE
         B     RETURN
ERROR99  MVC   MSG2,ERR5TXT        MOVE ERROR MESSAGE
         TPUT  SCR2TXT,SCR2LEN,FULLSCR WRITE SCREEN
         MVI   MSG2,C'-'           HYPHEN MSG
         MVC   MSG2+1(21),MSG2     AND FILLUP
         L     R3,COMMSCR
         TGET  (R3),306,ASIS           READ THE SCREEN
         MVC   RTNCODE,F0012       MOVE RETURNCODE
         B     RETURN
EXIT     EQU   *
         MVC   RTNCODE,F0008       EXIT ENTERED BY USER
RETURN   EQU   *
         TM    SWITCH,$NOALLOC     ALREADY ALLOCATED BY RPFLIB ?
         BO    RETURN1             YES: BRANCH
         SYALLOC FREE=RPFPAN,MF=E  FREE PANVALET LIBRARY
RETURN1  DS    0H
         SYALLOC FREE=RPFUT5,MF=E  FREE RPFUT5
         MVC   CMDAREA,BLANKS      BLANK 'CMDAREA' FIELD
         L     R13,4(R13)          LOAD CALLERS SAVE AREA
         RETURN (14,12),RC=0       RETURN TO CALLER
         TITLE 'ALLOCATION CONTROL BLOCKS'
         SYALLOC MF=L
         TITLE 'REGISTER EQUATES AND SCREEN FORMATS'
*
*
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
*
SCR2TXT  DC    X'27F5C21140401DF8' WRITE ERASE / R01,C00
         DC    CL57'RPF PANVALET UPDATE MENU  -------------------------X
               ------'
         DC    X'11407A'           R01,C59
MSG2     DC    CL22'----------------------' MESSAGE AREA INIT(-)
         DC    X'11C150',X'1DF8',C'OPTION ===>',X'1D4013'
         DC    X'001DF0'
         DC    X'11C3F3',X'1DF8',C'1 ',X'1DF0'        R04,C04
         DC    C'ADD         - ADD A PANVALET MODULE'
         DC    X'11C5C3',X'1DF8',C'2 ',X'1DF0'        R05,C04
         DC    C'REPLACE     - REPLACE A PANVALET MODULE'
         DC    X'11C6D3',X'1DF8',C'X ',X'1DF0'        R06,C04
         DC    C'EXIT        - RETURN TO RPF MAIN'
         DC    X'114A401DF5',C'DESC= ',X'1DC9'        R09,C01
SCR2DESC DC    CL30' ',X'1DF0'     DESCRIPTION FIELD
         DC    X'114B501DF5',C'PGMR= ',X'1DC9'        R10,C01
SCR2PGMR DC    CL15' ',X'1DF0'     PGMR FIELD
         DC    X'114C601DF5',C'LANG= ',X'1DC9'        R11,C01
SCR2LANG DC    CL9' ',X'1DF0'      LANG FIELD
         DC    C'SPECIFY BAL,PL/I,COBOL-72,DATA OR OTHER'
         DC    X'114F40'                              R13,C01
         DC    X'1DF8',C'PANVALET LIBRARY INFORMATION:'
         DC    X'11D160'                              R15,C01
         DC    X'1DF5',C'MODULE      ='
SCR2MAT  DC    X'0000'
SCR2MEM  DC    CL10' ',X'1DF0'
         DC    X'11D2F0'                              R16,C01
         DC    X'1DF5',C'LIBRARY     ='
SCR2DAT  DC    X'0000'
SCR2DSN  DC    CL44' ',X'1DF0'     DSNAME
         DC    X'11D440'                              R17,C01
         DC    X'1DF5',C'VOLUME      ='
SCR2VAT  DC    X'0000'
SCR2VOL  DC    CL6' ',X'1DF5',C'    DDNAME=',X'1DF8' VOLUME
SCR2DDN  DC    C'PANLIB  ',X'1DF0' DDNAME
SCR2LAST DC    X'11FFFF1DF0',C'HIT',X'1DF8',C'PF03/PF15',X'1DF0'
         DC    C'TO RETURN.'
SCR2LEN  EQU   *-SCR2TXT           LENGTH SCREEN
ERR1TXT  DC    CL22'DATASET NOT IN CATALOG'
ERR2TXT  DC    CL22'--------INVALID OPTION'
ERR3TXT  DC    CL22'-----ALLOC. ERROR XXXX'
ERR3CODE EQU   ERR3TXT+18
ERR4TXT  DC    CL22'-DATASET NOT ON VOLUME'
ERR5TXT  DC    CL22'--ALLOC. ERROR WORK DS'
ERR6TXT  DC    CL22'---USERID NOT IN TABLE'
ERR7TXT  DC    CL22'-SPECIFY PGMR AND DESC'
ERR8TXT  DC    CL22'LANG REQUIRED WITH ADD'
         TITLE 'WORKAREAS AND CONSTANTS'
LOC      CAMLST NAME,PANFILE,,LOCAREA
LOCAREA  DS    CL6
LOCVOL   DS    CL6
         DS    CL253
OBTCMLST CAMLST SEARCH,PANFILE,PANVVOL,DSCB1
DSCB1    DS    CL140
SWITCH   DC    X'00'
$NOALLOC EQU   128                 IF ON CMDAREA CONTAINED 'NOALLOC'
F0000    DC    F'0'                0000
F0004    DC    F'4'
F0008    DC    F'8'
F0012    DC    F'12'
F0016    DC    F'16'
MODLEN   DS    F
BUFFER   DC    CL187' '            BUFFER, INPUT AREA
COMMAND  DC    C' '
PANFILE  DC    CL44' '           CONTAINS PANVALET LIBRARY AFTER COMPL
MODULE   DC    CL10' '             CONTAINS MEMBERNAME AFTER COMPLETION
PANVVOL  DC    CL6' '              CONTAINS VOLSER AFTER COMPLETION.
DESC     DC    CL30' '             CONTAINS DESC FIELD
PGMR     DC    CL15' '             CONTAINS PGMR FIELD
LANG     DC    CL9' '              CONTAINS LANG FIELD
ATPROT   DC    X'1DF9'             ATTRIB MDT ON PROTECTED HI-INTENS
ATNPRO   DC    X'1DC9'             ATTRIB MDT ON NOT-PROT HI-INTENS
PANPARM  DS    0H
PARMLEN  DC    AL2(PARMEND-PARM)
PARM     DC    C'RPFUT5,RPFPRINT,RPFPAN'
PARMEND  EQU   *
UT5DSN   DC    CL44'&&&&RPFUT5'
PRTDSN   DC    CL44'&&&&RPFPRINT'
RECORD   DC    CL80' '
PANNAME  DC    CL8'PAN#1'
         PRINT NOGEN
RPFUT5   DCB   DSORG=PS,LRECL=80,BLKSIZE=3120,RECFM=FB,MACRF=PM,       X
               DDNAME=RPFUT5
         PRINT GEN
         TITLE 'RPFCOMM DSECT'
COMMAREA RPFCOMM
         END
