RPFBRO   TITLE 'GENERAL BROWSE UTILITY'
*---------------------------------------------------------------------*
*                                                                     *
*        MODULE:        RPFBRO.                                       *
*                                                                     *
*        FUNCTION:      PROCESS THE ASSEMBLER OUTPUT MADE BY RPFASM   *
*                       THE RPF FOREGROUND ASSEMBLER AND LINKAGE      *
*                       EDITOR OR BROWSE INPUT OF OTHER RPF-COMPONENTS*
*                       IN REGISTER 1 UPON ENTRY IS A PARAMETER LIST, *
*                       WHICH REFLECTS TO THE RPFCOMM CONTROL BLK     *
*                       THE CONTENTS OF "CMDAREA" IN RPFCOMM MUST BE  *
*                       PLACED INTO THE DDNAME OF THE DCB.            *
*                       THE DDNAME COULD BE:                          *
*                       RPFPRINT THE DDNAME OF THE ASSEMBLER          *
*                       SYSPRINT DATASET OR                           *
*                       RPFLKPRT THE DDNAME OF THE LINKAGE EDITOR     *
*                       SYSPRINT DATASET OR                           *
*                       RPFTERM THE SYSTERM OUTPUT OF THE ASSEMBLER   *
*                       RPFWORK THE TO BE BROWSED OR PRINTED INPUT OR *
*                       RPFHELP THE TO BE BROWSED HELP DATA OR        *
*                       RPFEDT1 THE TO BE BROWSED LIBRARIAN INFO      *
*                       IF CMDAREA+8 CONTAINS "PRINT" ONLY THE PRINT  *
*                       FUNCTION IS EXECUTED.                         *
*                       IF FLAG $UTILBR IS ON A DIFFERENT HEADER WILL *
*                       BE MADE AND THE NAME OF THE UTILITY, THAT     *
*                       CREATES THE TO BE BROWSE INPUT SHOULD BE      *
*                       SUPPLIED IN CMDAREA+16 WITH A LENGTH OF 8     *
*                                                                     *
*        SUBCOMMANDS:   TOP:    DISPLAY TOP OF DATASET                *
*                       BOTTOM: DISPLAY BOTTOM OF DATASET             *
*                       LABEL XXXX: ASSIGN LABEL XXXX AT CURR. SCREEN *
*                       L XXXX: LOCATE AT PREVIOUS ASSIGNED LABEL     *
*                       END:    TERMINATE BROWSE                      *
*                       HELP:   DISPLAY A BRIEF HELP INFO             *
*                       SCF:    SCROLL FORWARD                        *
*                       SCB:    SCROLL BACKWARD                       *
*                       RETURN: TERMINATE BROWSE AND GO TO MAIN       *
*                       C NN:   START DISPLAY WITH COLUMN NN          *
*                       PRINT X:PRINT DATASET INTO SYSOUT CLASS X     *
*                       PFK    :ALTER PFK DEFINITIONS                 *
*                       F STR:  FIND CHARACTER STRING                 *
*                       =N/=N.N Exec option N or N.N from RPFMAIN     *
*                     E.G. '=3.3' Go directly to opt 3.3 in main(vtoc)*
*                                                                     *
*        MODIFICATIONS: .....                                         *
*        JUN 11,1993:   3278 MODEL 5 (27 ROWS, 132 COLUMNS)           *
*                       SUPPORTED.                                    *
*        MAY 30,1994:   MAX SIZE INCREASED FROM 3072 TO 4096 PAGES    *
*        March 19,1996: Max size increased from 4096 to 5120 pages    *
*        April 25,1997: made 2000 compliant                           *
*        March 12,2001: max size decreased to 1024 pages              *
*        May 17,2001:   Submit command added                          *
*        July 17,2002:  Add '=n'/'=n.n' command                    @rp1
*        Aug 24,2002:   Support browsing V(B) datasets             @rp2
*        Oct 16,2002:   Block datasets with a LRECL > 255          @rp3
*        Oct 17,2002:   Add SCL and SCR command                    @rp4
*        Nov 11,2002:   Add 7 color support                        @rp5
*        Nov 17,2002:   Change worksize from (LINES on screen * 258)  *
*                       to (LINES on screen * (LRECL+3))           @rp6
*                       Increase Number of screen pages to 2048    @rp6
*        Feb 06,2003:   Error resolved if lrecl < screensize and   @rp7
*                       data contains control chars                @rp7
*                                                                     *
*------------------------------------------ (C)-2002 SKYBIRD SYSTEMS -*
         SPACE 2
RPFBRO   CSECT                         RPF BROWSE MODULE
         SAVE  (14,12),,*              SAVE REGISTERS
         USING RPFBRO,R15              TEMP ADDRESSABILITY
         LA    R14,SAVE                SAVEAREA
         ST    R14,8(0,R13)            FORWARD POINTER
         ST    R13,SAVE+4              BACKWARD POINTER
         LR    R13,R14
         B     START                   BRANCH AROUND SAVEAREA
SAVE     DC    18F'-1'                 SAVE AREA
         DC    CL8'&SYSDATE',C' ',CL8'&SYSTIME'
START    DS    0H
         DROP  15                      KILL TEMP ADDRESSABILITY
         LA    R12,2048(R13)           SECOND BASE REGISTER
         LA    R12,2048(R12)
         LA    R10,2048(R12)           THIRD BASE REGISTER
         LA    R10,2048(R10)
         LA    R9,2048(R10)
         LA    R9,2048(R9)
         USING SAVE,R13,R12,R10,R9     ADDR OVER R13/R12/R10
         L     R11,0(R1)               LOAD PARM
         STM   R9,R13,RECOVER          SAVE REGS FOR ESTAE EXIT
         USING COMMAREA,R11            GET ADDRESSABILITY
         MVC   LENGTH,=F'78'
         XC    RTNCODE,RTNCODE         CLEAR RTNCODE
         ZAP   RECCNT,=P'0'            ZERO COUNTER
         MVC   COLUMN,F0002            MOVE DEFAULT START COLUMN
         MVI   SWITCH,X'00'            INIT SWITCH
         MVC   SBA5#0(3),=X'11407A'    MOVE STD R01,C59
         MVC   SBA5#1(3),=X'11C150'    MOVE STD R02,C01
         MVC   SBA5#2(3),=X'11C260'    MOVE STD R03,C01
         MVC   SBA5#3(3),=X'11C3F0'    MOVE STD R04,C01
         CLC   COMMSIZE,=H'24'         model 2 screen ?
         BE    MOD2                    yes: branch
         CLC   COMMSIZE,=H'32'         model 3 screen ?
         BE    MOD3                    yes: branch
         CLC   COMMSIZE,=H'43'         model 4 screen ?
         BE    MOD4                    yes: branch
         CLC   COMMSIZE,=H'27'         model 5 screen ?
         BE    MOD5                    YES: BRANCH
MOD2     MVC   SCR1TXT(2),=X'27F5'     MOVE WRITE CONTROL CHAR
         MVC   WRKSIZE,LINES21         MOVE LENGTH OF WORKSPACE
         LA    R3,SCR524               LENGTH OF TPUT
         ST    R3,TPUTLEN              STORE THE RESULT
         MVC   #LINES,=H'21'           21 DATA LINES
         B     MODEND                  BRANCH
MOD3     MVC   SCR1TXT(2),=X'277E'     MOVE WRITE ALTERNATE
         MVC   WRKSIZE,LINES29         MOVE LENGTH OF WORKSPACE
         LA    R3,SCR532               LENGTH OF TPUT
         ST    R3,TPUTLEN              STORE THE RESULT
         MVC   #LINES,=H'29'           29 DATA LINES
         B     MODEND                  BRANCH
MOD4     MVC   SCR1TXT(2),=X'277E'     MOVE WRITE ALTERNATE
         MVC   WRKSIZE,LINES40         MOVE LENGTH OF WORKSPACE
         LA    R3,SCR543               LENGTH OF TPUT
         ST    R3,TPUTLEN              STORE THE RESULT
         MVC   #LINES,=H'40'           40 DATA LINES
         B     MODEND                  BRANCH
MOD5     MVC   SCR1TXT(2),=X'277E'     MOVE WRITE ALTERNATE
         OI    SWITCH,$MOD5            MARK MODEL 5 SCREEN
         MVC   WRKSIZE,LINES24         MOVE LENGTH OF WORKSPACE
         MVC   LENGTH,=F'130'
         MVC   SBA5#0(3),=X'11C16E'    MOVE R01,C111
         MVC   SBA5#1(3),=X'11C2C4'    MOVE MOD5 R02,C01
         MVC   SBA5#2(3),=X'11C4C8'    MOVE MOD5 R03,C01
         MVC   SBA5#3(3),=X'11C64C'    MOVE MOD5 R04,C01
         LA    R3,SCR527               LENGTH OF TPUT
         ST    R3,TPUTLEN              STORE THE RESULT
         MVC   #LINES,=H'24'           24 DATA LINES
MODEND   EQU   *
         LA    R8,RPFPRINT             LOAD DCB
         USING IHADCB,R8               DSECT OVER DCB
         MVC   DCBDDNAM(8),CMDAREA     MOVE DDNAME
         CLC   DCBDDNAM,=CL8'RPFHELP'  BROWSE INVOKED BY HELP ?
         BNE   TESTUTIL                NO: BRANCH
         MVC   SCR5HEAD,SCR5TX2        MOVE DIFFERENT HEADER
         B     PRTOPEN2                AND OPEN INPUT
TESTUTIL EQU   *
         TM    INFCODE3,$UTILBR        RPFBRO INVOKE BY UTILITY ?
*                                   LIKE ASSEMBLER AND LINKAGE EDITOR
         BNO   DSN0                    NO: MOVE NORMAL BROWSE HEADER
         MVC   SCR5DDN,CMDAREA         MOVE DDNAME
         MVC   SCR5UTIL,CMDAREA+16          AND UTILITY NAME IN HEADER
         MVC   SCR5HEAD,SCR5TX3        MOVE DIFFERENT HEADER
         NI    INFCODE3,255-$UTILBR    AND RESET FLAG
         B     PRTOPEN2                AND BRANCH
DSN0     EQU   *
         RDJFCB RPFPRINT               READ JFCB
         MVC   SCR5DSN,JFCB                         INTO PANEL
         LA    R3,SCR5DSN+43           LAST POS IN SCR5DSN
         LA    R4,44                   MAC 44 POS
DSN1     EQU   *
         CLI   0(R3),C' '              TRAILING BLANK FOUND ?
         BNE   DSN9                    NO: STOP REPLACING
         MVI   0(R3),C'-'              REPLACE BY HYPHEN
         BCTR  R3,0                    DECREASE BY 1
         BCT   R4,DSN1                 LOOP UNTIL ALL DONE
DSN9     EQU   *
         CLI   JFCB+44,C' '            NO MEMBER NAME IN JFCB ?
         BE    PRTOPEN                 YES: OPEN FILE
         CLI   SCR5DSN+34,C'-'         NOT A LONG DSNAME ?
         BNE   PRTOPEN                 IF LONG, DO NOT SUPPLY MEMBRNAME
         LA    R3,SCR5DSN              DSNAME
         AR    R3,R4                   ACTUAL LENGTH OF DSNAME
         MVI   0(R3),C'('              PARANTHESE
         MVC   1(8,R3),JFCB+44         MOVE MEMBER-NAME
         TR    1(8,R3),COMTRTAB        REMOVE UNPRINTABLES
         LA    R3,8(R3)                POINT TO LAST POS MEMBERNAME
         LA    R4,7                    BCT VALUE
MEM1     EQU   *
         CLI   0(R3),C' '              TRAILING BLANK FOUND ?
         BNE   MEM9                    NO: END OF SCAN
         MVI   0(R3),C'-'              REPLACE BY HYPHEN
         BCTR  R3,0                    PREVIOUS POS.
         BCT   R4,MEM1                 LOOP UNTIL ALL SPACES REPLACED
MEM9     EQU   *
         MVI   1(R3),C')'              PARANTHESE
PRTOPEN  EQU   *
         MVC   SCR5HEAD,SCR5TX1        MOVE DEFAULT BROWSE HEADER
PRTOPEN2 EQU   *
         ESTAE STAEEXIT                PROTECT AGAINST ABENDS
         GETMAIN RU,LV=16384           GETMAIN STACK FOR 2048 PAGES@rp6
         ST    R1,STACK                SAVE ITS ADDRESS
         A     R1,=F'16376'            LAST ENTRY IN STACK -/- 8   @rp6
         ST    R1,STACKEND             SAVE ITS ADDRESS
         L     R3,STACK                Initialize the stack        @rp3
         MVC   0(4,R3),FF                                          @rp3
         MVC   SYSOUT+DCBRECFM-IHADCB(1),DCBRECFM COPY RECFM
         OI    SYSOUT+DCBRECFM-IHADCB,DCBRECBR MAKE IT BLOCKED
         NI    SYSOUT+DCBRECFM-IHADCB,255-DCBRECV                  @rp2
         OI    SYSOUT+DCBRECFM-IHADCB,DCBRECF Output always fixed  @rp2
         OPEN  RPFPRINT                OPEN THE INPUT DCB
         CLC   DCBLRECL,=H'255'        LRECL > 255                 @rp3
         BH    LRECL255                Yes: browse N/A             @rp3
         TM    SWITCH,$MOD5            Model 5 screen?             @rp4
         BNO   PRTOPEN3                No: branch                  @rp4
         CLC   DCBLRECL,=H'80'         Lrecl <= 80?                @rp4
         BH    PRTOPEN3                No: branch                  @rp4
         MVC   SBA5#0(3),=X'11407A'    MOVE STD R01,C59            @rp4
         MVC   SBA5#1(3),=X'11C150'    MOVE STD R02,C01            @rp4
         MVC   SBA5#2(3),=X'11C260'    MOVE STD R03,C01            @rp4
         MVC   SBA5#3(3),=X'11C3F0'    MOVE STD R04,C01            @rp4
         MVC   SCR1TXT(2),=X'27F5'     MOVE WRITE CONTROL CHAR     @rp4
         MVC   WRKSIZE,LINES21         Move length of workspace    @rp4
         LA    R3,SCR524               Length of TPUT              @rp4
         ST    R3,TPUTLEN              Store the result            @rp4
         MVC   #LINES,=H'21'           21 data lines               @rp4
         MVC   LENGTH,=F'78'                                       @rp4
         NI    SWITCH,255-$MOD5        Use no model5 if LRECL<=80  @rp4
PRTOPEN3 DS    0H                                                  @rp4
         XC    RECL,RECL                                           @rp4
         MVC   RECL+2(2),DCBLRECL      SAVE LRECL
         L     R1,RECL                 LRECL
         TM    DCBRECFM,DCBRECV        Variable records ?          @rp2
         BNO   *+12                    No: branch                  @rp2
         SH    R1,=H'4'                Minus Length RDW            @rp2
         ST    R1,RECL                 And save LRECL              @rp4
*+12                                                               @rp4
         BCTR  R1,0                    MINUS 1
         C     R1,LENGTH               DCBLRECL < LENGTH OF SCALE LINE
         BNL   *+18                    NO: BRANCH                  @rp7
         TM    DCBRECFM,DCBRECCA+DCBRECCM ASA or MACH CC?          @rp7
         BZ    *+6                     No do not decrease length   @rp7
         BCTR  R1,0                    minus 1                     @rp7
*+6                                                                @rp7
         ST    R1,LENGTH               LENGTH=LRECL-1
*+18
         CLC   RECL,F0255              > 255 ??
         BNH   PRTOPEN4                NO BRANCH
         MVC   RECL,F0255              TRUNCATE TO 255
         TM    DCBRECFM,DCBRECV        Variable records ?          @rp2
         BNO   *+10                    No: branch                  @rp2
         MVC   RECL,F0251              RECFM=V, LRECL - l'RDW      @rp2
PRTOPEN4 EQU   *
         L     R1,RECL                 Pickup record length        @rp6
         LA    R1,3(R1)                Including extended color    @rp6
         ST    R1,WRKENT               Save length 1 line          @rp6
         L     R3,WRKSIZE              # data lines on screen      @rp6
         XR    R2,R2                   Clear even reg.             @rp6
         MR    R2,R1                   * length                    @rp6
         ST    R3,WRKSIZE              New size on screen          @rp6
         CLC   DCBLRECL,=H'80'         CARDIMAGE DATASET ?
         BNE   TSTRECFM                NO: PROCEED
         OI    SWITCH,$CARDIM          MARK CARDIMAGE
TSTRECFM TM    DCBRECFM,DCBRECCA+DCBRECCM TEST OF MACH OR ASA CC
         BM    CHARS                   CONTROL CHARS
         OI    SYSOUT+DCBRECFM-IHADCB,DCBRECCA IF NOT MAKE ASA CC-S
         OI    SWITCH,$NOCC            MARK NO CONTROL CHARS
         MVC   COLUMN,F0001            MOVE DEFAULT START COLUMN
         DROP  R8
CHARS    EQU   *
         CLC   CMDAREA+8(5),=C'PRINT'  PRINT ONLY
         BNE   CHARS2                  NO: PROCEED
         MVC   BUFFER,BLANKS           CLEAR BUFFER
         MVC   BUFFER(5),=C'PRINT'     PUT PRINT COMMAND IN BUFFER
         LA    R15,RPFPRT              LOAD ROUTINE ADDRESS
         BALR  R14,R15                 branch to routine
*        BASSM R14,R15                 EXECUTE IN 24 BIT MODE
         L     R13,4(R13)              LOAD CALLERS SAVE AREA
         RETURN (14,12),RC=(15)        RETURN TO CALLER
CHARS2   EQU   *
         TPUT  SCR1TXT,SCR1LEN,FULLSCR WRITE HEADER ON SCREEN
BRO000   EQU   *
         L     R2,STACK                LOAD ADDRESS OF STACK
         LR    R4,R2                   IN REG 4 FORM MVCL
         XR    R5,R5                   LENGTH OF 2ND OPERAND ZERO
         ICM   R5,8,=X'FF'             PADDING CHARACTER
         L     R3,=F'16384'            LENGTH OF STACK             @rp6
         MVCL  R2,R4                   FILLUP STACK WITH ALL X'FF'
         OPEN  RPFPRINT                OPEN THE DATASET
         NI    SWITCH,255-$EOF         CLEAR $EOF
BRO001   EQU   *
         MVC   CURSTCK,STACK           SET STACK TO TOP OF STACK
BRO002   EQU   *
         L     R8,CURSTCK              PICKUP CURRENT STACK ENTRY
         CLC   0(4,R8),FF              ENTRY NOT IN USE ?
         BNE   BRO005
         L     R2,WRKSIZE              LOAD LENGTH OF WORKSPACE
         GETMAIN RC,LV=(2)             AQUIRE STORAGE FOR SCREEN
         LTR   R15,R15                 GETMAIN OK ?
         BNZ   GETMERR                 NO: GOTO ERROR ROUTINE
         ST    R1,0(R8)                STORE START ADDRESS IN STACK
         XC    4(4,R8),4(R8)           CLEAR LABEL ENTRY
         LR    R2,R1                   LOAD GETMAIN AREA
         L     R3,WRKSIZE              LENGTH (21/29/40 * RECL+3)  @rp6
         LR    R4,R2                   SAME ADDRESS IN R 4
         ICM   R5,15,=X'40000000'      LOAD PADDING CHARACTER
         MVCL  R2,R4                   CLEAR SCREEN
         LH    R3,#LINES               MAX 21/29/40 LINES
         L     R4,0(R8)                PICKUP AREA ADDRESS
BRO003   EQU   *
         LA    R15,GETINP              LOAD ROUTINE ADDRESS
         BALR  R14,R15                 branch to routine
*        BASSM R14,R15                 EXECUTE THIS ROUTINE
         TM    SWITCH,$EOF             INPUT END OF FILE
         BNO   BRO004                  NO: CONTINUE
         CP    RECCNT,=P'0'            EMPTY DATASET ?
         BE    EMPTYDS                 YES: BRANCH
         MVC   0(3,R4),=AL3(TURQ)      Move default color          @rp5
         AL    R4,WRKENT               Point to next record        @rp6
*   This lines has been deleted in ..........................      @rp6
         BCT   R3,*-10                 Fill up empty records       @rp6
         B     BRO005
BRO004   EQU   *
         AP    RECCNT,=P'1'            ADD RECORD COUNTER
*        EACH ENTRY IN THE DATA AREA CONSISTS OF 3 BYTES COLOR AND
*        MAX 255 BYTES DATA
         MVC   0(3,R4),=AL3(TURQ)      Default color               @rp5
         L     R1,RECL                 Length of record            @rp6
         BCTR  R1,0                    Minus 1                     @rp6
         EX    R1,BROMVE               Move                        @rp6
         EX    R1,BROTR                and translate               @rp6
         B     BRO004A                 Branch over next 2 instr.   @rp6
BROMVE   MVC   3(0,R4),LINE            MOVE IN GETM AREA (TRUNC)   @rp6
BROTR    TR    3(0,R4),COMTRTAB        REMOVE UNPRINTABLES         @rp6
BRO004A  DS    0H                                                  @rp6
         AL    R4,WRKENT               Point to next record        @rp6
*   This lines has been deleted in ..........................      @rp6
         BCT   R3,BRO003               AND LOOP
BRO005   EQU   *                       REWRITE SCREEN
         TM    SWITCH,$BOTTOM          BOTTOM COMMAND
         BNZ   BRO015                  YES: INCREASE POINTER
         TM    SWITCH,$FIND            FIND COMMAND
         BNZ   BRO035                  YES: INCREASE POINTER
         BAL   R14,RPFTPUT             WRITE SCREEN
         B     BRO006(R15)             GO TO BRANCH LIST
BRO006   B     *+4                     NOTHING
         B     BRO002                  NEXT SCREEN OR PREVIOUS SCREEN
         B     BRO001                  TOP OF LISTING
         B     BRO007                  END
         B     BRO011                  PRINT
         B     BRO015                  BOTTOM
         B     BRO021                  LOCATE ON LABEL
         B     BRO029                  FIND CHARACTER STRING
         B     BRO050                  SUBMIT command
*------- ----- ----------------------> SUBCOMMAND "E N D"
BRO007   EQU   *                       CLOSE RPFPRINT
         CLOSE RPFPRINT
         FREEPOOL RPFPRINT             FREE THE BUFFERS
         BAL   R14,FREEPOOL            FREE THE STACK
BRO010   EQU   *                       PRINT ROUTINE
         ESTAE 0                       KILL RECOVERY ROUTINE
         FREEMAIN RU,LV=16384,A=STACK  FREE THE STACK              @rp6
         L     R13,SAVE+4              LOAD CALLERS SAVEAREA
         RETURN (14,12),RC=0
*------- ----- ----------------------> SUBCOMMAND "P R I N T"
BRO011   DS    0H                      PRINT ROUTINE
         BAL   R14,FREEPOOL            FREE ALL ENTRIES IN THE STACK
         LA    R15,RPFPRT              PRINT ROUTINE
         BALR  R14,R15                 branch to routine
*        BASSM R14,R15                 PRINT THE DATASET
         LTR   R15,R15                 PRINT OK ?
         BNZ   BRO013                  MOVE ERROR MSG
         MVC   MSG5(L'MSG1TXT),MSG1TXT
         OI    SWITCH,$MSG             MSG INDICATOR ON
         B     BRO000                  RESHOW OUTPUT
BRO013   MVC   MSG5(L'ERR3TXT),ERR3TXT MOVE ERROR MSG
         OI    SWITCH,$MSG             MSG INDICATOR ON
         B     BRO000                  RESHOW OUTPUT
*------- ----- ----------------------> SUBCOMMAND "B O T T O M"
BRO015   DS    0H                      'B' OR 'BOTTOM' SUBCOMMAND
         L     R8,CURSTCK              LOAD CURRENT STACK POINTER
         LA    R8,8(R8)                NEXT ENTRY IN STACK
         C     R8,STACKEND             OUT OF STACK ?
         BH    BRO019                  YES: BRANCH
         CLC   0(4,R8),FF              NOT IN USE ?
         BNE   BRO017                  NO: PROCEED
         TM    SWITCH,$EOF             INPUT END OF FILE ?
         BO    BRO019                  YES: ALREADY AT BOTTOM
BRO017   DS    0H
         ST    R8,CURSTCK              SAVE POINTER
         B     BRO002                  PAGE 1 FOREWARD
BRO019   DS    0H
         NI    SWITCH,X'FF'-$BOTTOM    CLEAR FLAG
         B     BRO005                  DISPLAY SCREEN
*------- ----- ----------------------> SUBCOMMAND "L" (LABEL)
BRO021   DS    0H                      L 'LABEL' COMMAND
         L     R8,STACK                LOAD START OF STACK
         L     R4,=A(2048)             # of stack entries          @rp6
BRO023   DS    0H
         CLC   0(4,R8),FF              END OF STACK ?
         BE    BRO025                  YES: LABEL NOT FOUND
         CLC   4(4,R8),BUFFER+2        TEST LABEL WITH STACK ENTRY
         BE    BRO027                  YES: LABEL FOUND
         LA    R8,8(R8)                NEXT ENTRY IN STACK
         BCT   R4,BRO023               LOOP UNTIL END OR LBL FOUND
BRO025   DS    0H
         MVC   ERRATXT+8(4),BUFFER+2   MOVE LABEL FROM COMMAND
         MVC   MSG5,ERRATXT            MOVE ERROR MSG
         OI    SWITCH,$MSG             MSG INDICATOR ON
         B     BRO002                  REDISPLAY SAME PAGE OF DS
BRO027   DS    0H
         ST    R8,CURSTCK              STORE STACK ENTRY
         B     BRO002                  DISPLAY LABELED PAGE
*------- ----- ----------------------> SUBCOMMAND "F I N D"
BRO029   DS    0H
         ZAP   FINDCNT,=P'0'           CLEAR FIND COUNTER
         MVC   SAVESTCK,CURSTCK        SAVE STACK POINTER
         L     R8,FINDADD              LOAD CURRENT STACK ENTRY
BRO031   DS    0H
         OI    SWITCH,$FIND            SET FIND FLAG ON
         C     R8,STACKEND             END OF STACK ??
         BH    BRO043                  YES: BRANCH (TEXT NOT FOUND)
         CLC   0(4,R8),FF              NOT IN USE ?
         BNE   BRO033                  NO: PROCEED
         TM    SWITCH,$EOF             INPUT END OF FILE ?
         BO    BRO043                  YES: TEXT NOT FOUND
         ST    R8,CURSTCK
         B     BRO002                  GET FILE
BRO033   DS    0H
         ST    R8,CURSTCK              SAVE POINTER
BRO035   DS    0H
         LH    R2,#LINES               LINES PER SCREEN (21/29/40)
         L     R3,CURSTCK              CURRENT POINTER
         L     R3,0(R3)                POINT TO DATA IN AREA
BRO037   DS    0H
         LA    R4,3(R3)                POINT TO DATA               @rp5
         L     R5,RECL                 LOAD RECORD LENGTH
         L     R6,LENSTR               FIND LENGTH
         BCTR  R6,0                    -/- FOR EX INSTRUCTION
         SR    R5,R6                   MINUS L'STRING PLUS 1
BRO039   DS    0H
         EX    R6,FINDMOVE             MOVE TO WORK FIELD
         OC    WORKFLD,BLANKS          XLATE FIELD
         EX    R6,FINDCOMP             TEST IF STRING FOUND
         BE    BRO041                  YES: BRANCH
BRO040   DS    0H
         LA    R4,1(R4)                NEXT BYTE
         BCT   R5,BRO039               LOOP UNTIL LINE SCANNED
         AL    R3,WRKENT               Point to next record        @rp6
*   This lines has been deleted in ..........................      @rp6
         BCT   R2,BRO037               LOOP UNTIL ALL DONE
         L     R8,CURSTCK              LOAD CURRENT STACK ENTRY
         CP    FINDCNT,=P'0'           NOTHING FOUND IN THIS SCREEN ?
         BNE   BRO042                  IF FOUND: FIND COMPLETE
         LA    R8,8(R8)                ELSE TAKE NEXT ENTRY IN STACK
         B     BRO031                  AND BRANCH
BRO041   DS    0H
         MVC   0(3,R3),=AL3(WHITE)     Change color into White     @rp5
         AP    FINDCNT,=P'1'           INCR FIND COUNTER
         B     BRO040                  CONTINUE FIND
BRO042   DS    0H
         MVC   MSG3TXT+6(10),STRING    MOVE 10 BYTES STRING IN MSG
         MVC   MSG5,MSG3TXT            MOVE MESSAGE
         OI    SWITCH,$MSG             MARK MESSAGE PENDING
         NI    SWITCH,255-$FIND        SET FIND COMMAND OFF
         LA    R4,8(R8)                SAVE
         ST    R4,FINDADD                  NEXT ENTRY FOR NEXT FIND
         B     BRO005                  DISPLAY SCREEN
BRO043   DS    0H                      TEXT NOT FOUND
         MVC   CURSTCK,SAVESTCK        RESTORE SAVED ENTRY
         OI    SWITCH,$MSG             MESSAGE PENDING
         MVC   MSG5,ERRBTXT            MOVE ERROR MESSAGE
         NI    SWITCH,255-$FIND        SET FIND FLAG OFF
         B     BRO005                  DISPLAY SCREEN
FINDMOVE MVC   WORKFLD(0),0(R4)        *** EXEC ONLY ***
FINDCOMP CLC   WORKFLD(0),STRING       *** EXEC ONLY ***
*------- ----- ----------------------> SUBCOMMAND "S U B M I T"
BRO050   DS    0H
         BAL   R14,FREEPOOL            Free the buffers
         LA    R15,RPFSUB              Submit ROUTINE
         BALR  R14,R15                 branch to routine
*        BASSM R14,R15                 PRINT THE DATASET
         LTR   R15,R15                 PRINT OK ?
         BNZ   BRO051                  MOVE ERROR MSG
         MVC   MSG5(L'MSG5TXT),MSG5TXT
         OI    SWITCH,$MSG             MSG INDICATOR ON
         B     BRO000                  RESHOW OUTPUT
BRO051   DS    0H
         OI    SWITCH,$MSG             MSG INDICATOR ON
         C     R15,=F'0004'            Rc=0004
         BE    BRO052                  Yes: allocation failed
         MVC   MSG5(L'ERRETXT),ERRETXT MOVE ERROR MSG
         B     BRO000                  RESHOW OUTPUT
BRO052   DS    0H
         MVC   MSG5(L'ERRDTXT),ERRDTXT MOVE ERROR MSG
         B     BRO000                  RESHOW OUTPUT
         TITLE 'ERROR ROUTINES'
GETMERR  DS    0H
         NI    SWITCH,X'FF'-$BOTTOM    CLEAR FLAG
         MVC   MSG5,ERR7TXT            MOVE ERROR MESSAGE
         OI    SWITCH,$MSG             MSG INDICATOR ON
         CP    RECCNT,=P'0'            NO RECORDS READ ?
         BE    GETMERR3                YES: BRANCH
         CLC   CURSTCK,STACK           FIRST ENTRY IN STACK ?
         BNH   GETMERR3                YES: BRANCH
         L     R8,CURSTCK              LOAD CURRENT STACK ENTRY
         S     R8,=F'8'                PREVIOUS ENTRY
         ST    R8,CURSTCK              AND STORE CURRENT ENTRY
         B     BRO002                  BRANCH
GETMERR3 DS    0H
         MVC   RTNCODE,F0008           MOVE RETURN-CODE
         MVC   CMDAREA,ERR7TXT         ERROR MESSAGE
         OI    SWITCH,$MSG             MSG INDICATOR ON
         B     BRO007                  RETURN TO CALLER
EMPTYDS  DS    0H
         MVC   RTNCODE,F0008           MOVE RETURN-CODE
         MVC   CMDAREA,ERR8TXT         ERROR MESSAGE
         OI    SWITCH,$MSG             MSG INDICATOR ON
         B     BRO007                  RETURN TO CALLER
LRECL255 DS    0H                                                  @rp3
         MVC   RTNCODE,F0008           Move return-code            @rp3
         MVC   CMDAREA,ERRFTXT         Error message               @rp3
         OI    SWITCH,$MSG             MSG indicator on            @rp3
         B     BRO007                  Return to caller            @rp3
         TITLE 'FREE ALL THE AREAS IN THE STACK'
*---------------------------------------------------------------------*
*                                                                     *
*        ROUTINE:   FREEPOOL                                          *
*        FUNCTION:  FREE ALL THE USED AREAS IN THE STACK              *
*                                                                     *
*------------------------------------------ (C)-2001 SKYBIRD SYSTEMS -*
FREEPOOL DS    0H
         ST    R14,SAVE14PL            SAVE REGISTER 14
         L     R2,WRKSIZE              LENGTH OF WORKSPACE
         L     R3,STACK                LOAD STACK ADDRESS
         L     R4,=A(2048)             MAX 2048 PAGES              @rp6
FREEP001 EQU   *                       CLOSE RPFPRINT
         CLC   0(4,R3),FF              ALL X'FF'
         BE    FREEP999                YES: ALL AREA'S FREEMAINED
         L     R8,0(R3)                PICKUP ADDRESS
         FREEMAIN RU,LV=(2),A=(8)      FREE THE STORAGE
         MVC   0(4,R3),FF              Make entry free
         LA    R3,8(R3)                NEXT ENTRY IN STACK
         BCT   R4,FREEP001             LOOP UNTIL ALL DONE
FREEP999 EQU   *
         L     R14,SAVE14PL            RESTORE REG 14
         BR    R14
         TITLE 'RPF WRITE AND READ THE SCREEN'
*---------------------------------------------------------------------*
*                                                                     *
*        ROUTINE:           RPFTPUT.                                  *
*                                                                     *
*                                                                     *
*        RETURN CODES:      00   DOES NOT EXIST                       *
*                           04   SCF OR SCB COMMAND GIVEN             *
*                           08   TOP COMMAND GIVEN                    *
*                           12   RETURN OR END COMMAND GIVEN          *
*                           16   PRINT COMMAND GIVEN                  *
*                           20   BOTTOM COMMAND GIVEN                 *
*                           24   L LABEL COMMAND GIVEN                *
*                           28   F STR   COMMAND GIVEN                *
*                           32   sub(mit)COMMAND GIVEN                *
*                                                                     *
*------------------------------------------ (C)-2002 SKYBIRD SYSTEMS -*
RPFTPUT  DS    0H
         ST    R14,SAVE14              SAVE REGISTER 14
RPFT000  L     R2,CURSTCK              LOAD STARTADDRESS
         S     R2,STACK                SUBTRACT STARTADDRESS
         SRL   R2,3                    /8 BECAUSE ENTRY IS 8 BYTES
         MH    R2,#LINES               * # LINES IN PAGE
         LA    R2,1(R2)                INCLUDING FIRST LINE
         CVD   R2,DWB                  MAKE PACKED
         UNPK  MSG2TXT+15(7),DWB+4(4)  UNPACK THE RESULT
         OI    MSG2TXT+21,X'F0'        CLEAR SIGN
         L     R2,CURSTCK              RELOAD START ADDRESS
         L     R2,0(R2)                PICKUP AREA ADDRESS
         LH    R3,#LINES               21/29/40 LINES
         L     R4,COLUMN               LOAD COLUMN OFFSET
         CVD   R4,DWB                  CONVERT TO PACKED
         UNPK  MSG2TXT+6(3),DWB(8)     UNPACK COLUMN NUMBER
         OI    MSG2TXT+8,X'F0'         CLEAR SIGN
         BCTR  R4,0                    MINUS 1
         LA    R7,SCALE2               LOAD SCALE LINE
         AR    R7,R4                   + OFFSET COLUMN
         L     R5,LENGTH               LOAD LENGTH
         TM    SWITCH,$MOD5            A MODEL 5 TERMINAL ?
         BO    RPFTM5CL                Y: A DIFFERENT COMPARE
         C     R5,=F'79'               LENGTH > 78
         BL    *+8                     NO: BRANCH
         LA    R5,78                   LENGTH = 78
         B     RPFTCONT                CONTINUE
RPFTM5CL DS    0H                      MODEL 5 COMPARE
         C     R5,=F'131'              LENGTH > 130
         BL    *+8                     NO: BRANCH
         LA    R5,130                  LENGTH = 130
RPFTCONT DS    0H
         MVI   SCR5SCL,C' '            BLANK
         MVC   SCR5SCL+1(130),SCR5SCL        SCALE LINE
         EX    R5,RPFTSCL              MOVE SCALE LINE
         L     R5,LENGTH
         LA    R6,LNE5                 LOAD SCREEN ADDRESS
RPFT001  DS    0H                      START LOOP
         AR    R2,R4                   SKIP TO RIGTH OFFSET
         MVI   0(6),C' '               BLANK LINE ON SCREEN
         MVC   1(82,R6),0(R6)                                      @rp5
         TM    SWITCH,$MOD5            A MODEL 5 SCREEN ?
         BNO   *+10                    BRANCH IF NOT
         MVC   83(52,R6),82(R6)        BLANK MODEL 5 PORTION       @rp5
         EX    R5,RPFTMOVE             MOVE INTO SCREEN
         SR    R2,R4                   RESTORE R2
         MVC   0(3,R6),0(R2)           MOVE Color attribute        @rp5
         MVC   0(3,R2),=AL3(TURQ)      Reset to standard color     @rp5
         AL    R2,WRKENT               Point to next record        @rp6
*   This lines has been deleted in ..........................      @rp6
         LA    R6,83(R6)               Next line on screen         @rp5
         TM    SWITCH,$MOD5            A MODEL 5 TERM ?
         BNO   *+8                     BRANCH IF NOT
         LA    R6,52(R6)               EXTEND WITH ANOTHER 52 BYTES
         BCT   R3,RPFT001              GO BACK
RPFT002  EQU   *
         TM    SWITCH,$MSG             MESSAGE GIVEN ?
         BNZ   RPFT002A                YES: BRANCH
         MVC   MSG5,MSG2TXT            MOVE MESSAGE WITH RECORD CNTR
RPFT002A EQU   *
         L     R2,TPUTLEN              LOAD LENGTH OF TPUT
         TPUT  SCR5TXT,(2),FULLSCR     WRITE THE SCREEN
         NI    SWITCH,255-$MSG         FLAG OFF
RPFT003  EQU   *
         LA    R2,AIDBYTE              PARAMETER FOR CONVIN
         LA    R5,BUFFER               PARAMETER FOR CONVIN
         BAL   R14,CONVIN              READ THE SCREEN
         MVI   REP5,C' '               CLEAR COMMAND AREA
         MVC   REP5+1(39),REP5         CLEAR COMMAND AREA
         LTR   R1,R1                   LENGTH ZERO ?
         BZ    RPFT004A                YES: NEW SCREEN
         OC    BUFFER,BLANKS           XLATE TO UPPERCASE
         CLI   AIDBYTE,X'7D'           ENTER PRESSED ?
         BE    RPFT004                 YES: GO ON
         CLI   AIDBYTE,X'6D'           CLEAR KEY PRESSED ?
         BE    RPFT004A                YES: NEW SCREEN
         LA    R2,BUFFER               PARAMETER PFK ROUTINE
         LA    R1,AIDBYTE              PARAMETER PFK ROUTINE
         BAL   R14,PFK                 GO TO PFK ROUTINE
         LTR   R15,R15                 ALLRIGTH ?
         BE    RPFT004                 YES: GO ON
         C     R15,F0004               RETURNCODE 4 ?
         BNE   RPFT003A                CON= Y REVIEW SCREEN
         MVC   REP5,BUFFER             REPEAT COMMAND
         B     RPFT002                 REVIEW SCREEN
RPFT003A C     R15,F0008               PFK NOT DEFINED ?
         BNE   RPFT003B                NO: PFK DEFINITION INVALID
         MVC   MSG5(L'ERR4TXT),ERR4TXT PFK NOT DEFINED
         OI    SWITCH,$MSG             MSG INDICATOR ON
         B     RPFT002                 BRANCH FOR NEW SCREEN
RPFT003B MVC   MSG5(L'ERR5TXT),ERR5TXT PFK DEFINITION INVALID
         OI    SWITCH,$MSG             MSG INDICATOR ON
         B     RPFT002                 BRANCH FOR NEW SCREEN
RPFT004  CLI   BUFFER,C'?'             REFRESH SCREEN ?
         BNE   RPFT005                 NO: OTHER COMMANDS:
RPFT004A TPUT  SCR1TXT,SCR1LEN,FULLSCR REFRESH SCREEN
         B     RPFT002                 GO BACK
RPFT005  EQU   *
         CLC   BUFFER(2),=C'C '        COLUMN COMMAND ?
         BNE   RPFT012                 NO: PROCESS OTHER COMMANDS  @rp1
         LA    R2,BUFFER+2             ON COLUMN NUMBER
         LA    R3,4                    NUMBER OF POSITIONS         @rp4
         XR    R4,R4                   COUNT BYTES
RPFT007  EQU   *
         CLI   0(R2),C' '              END OF STRING ?
         BE    RPFT009                 YES: END OF LOOP
         CLI   0(R2),C'0'              NUMERIC TEST
         BL    RPFTERR                 LOW: ERROR
         CLI   0(R2),C'9'              NUMERIC TEST
         BH    RPFTERR                 HIGH: ERROR
         LA    R2,1(R2)                NEXT BYTE
         LA    R4,1(R4)                COUNT BYTES
         BCT   R3,RPFT007
RPFT009  EQU   *
         LTR   R4,R4                   NO BYTES FOUND ?
         BZ    RPFTERR                 YES: ERROR
         BCTR  R4,0                    MINUS 1 FOR EXECUTE
         EX    R4,RPFTPACK             PACK THE RESULT
         CVB   R2,DWB                  MAKE IT BINARY
         LTR   R2,R2                   ZERO COLUMN ?
         BZ    RPFTERR                 YES: ERROR
         L     R3,RECL                                             @rp2
         SR    R3,R2                   TAKE DIFFERENCE
         C     R3,F0000                COMPARE
         BL    RPFTERR                 NEGATIVE: ERROR
         ST    R2,COLUMN               STORE THE RESULT
         TM    SWITCH,$MOD5            A 3278 MODEL 5 (27X132) ?
         BO    RPFT11M5                YES: BRANCH
         C     R3,F0078                LENGTH MORE THAN 79 BYTES
         BNH   RPFT011                 NOT HIGH: GO ON
         LA    R3,78                   TRUNCATE TO 79 BYTES
         B     RPFT011                 BRANCH
RPFT11M5 DS    0H                      A MODEL 5 COMPARE
         C     R3,F0130                LENGTH MORE THAN 131 BYTES?
         BNH   RPFT011                 NOT HIGH: CONTINUE
         LA    R3,130                  LOAD MAX. VALUE
RPFT011  DS    0H
         ST    R3,LENGTH               STORE INTO LENGTH
         B     RPFT000                 REVIEW SCREEN
RPFT012  DS    0H                                                  @rp1
         CLI   BUFFER,C'='             =n/=n.n command given ?     @rp1
         BNE   RPFT013                 No: Other commands          @rp1
         OI    INFCODE2,$RETURN        SET RETURN INDICATOR        @rp1
         MVC   CMAINOPT,BUFFER+1       Move options after '='      @rp1
         LA    R15,12                  RETURNCODE FOR BRANCHLIST   @rp1
         B     RPFTEND                 END OF ROUTINE              @rp1
RPFT013  DS    0H
         CLC   BUFFER(6),=C'RETURN'    SKIP REST ?
         BNE   RPFT014                 NO: OTHER COMMANDS
         OI    INFCODE2,$RETURN        SET RETURN INDICATOR
         LA    R15,12                  RETURNCODE FOR BRANCHLIST
         B     RPFTEND                 END OF ROUTINE
RPFT014  EQU   *
         CLC   BUFFER(3),=C'END'       SKIP REST ?
         BNE   RPFT015                 NO: OTHER COMMANDS
         LA    R15,12                  RETURNCODE FOR BRANCHLIST
         B     RPFTEND                 END OF ROUTINE
RPFT015  EQU   *
         CLC   BUFFER(3),=C'TOP'       TOP COMMAND ?
         BE    RPFT015A                YES: PROCESS TOP CMD
         CLC   BUFFER(2),=C'T '        ABBREVIATED TOP COMMAND?
         BNE   RPFT016                 NO: PROCESS OTHER CMDS
RPFT015A EQU   *
         LA    R15,8                   RETURNCODE FOR BRANCHLIST
         XC    FINDADD,FINDADD         CLEAR ADDRESS OF LAST FIND ENT.
         B     RPFTEND                 END OF ROUTINE
RPFT016  EQU   *                       PRINT LISTING
         CLC   BUFFER(5),=C'PRINT'     PRINT THE DATASET ?
         BNE   RPFT017                 NO: TEST OTHER FUNCTIONS
         LA    R15,16                  RETURNCODE FOR BRANCH
         XC    FINDADD,FINDADD         CLEAR ADDRESS OF LAST FIND ENT.
         B     RPFTEND                 END OF ROUTINE
RPFT017  EQU   *
         CLC   BUFFER(3),=C'PFK'       PFK SCREEN ?
         BNE   RPFT019                 TAKE NEXT COMMAND
         LINK  EP=RPFPFK,PARAM=((11))
         B     RPFT004A                NEW SCREEN
RPFT019  EQU   *
         CLC   BUFFER(4),=C'HELP'      HELP COMMAND ??
         BNE   RPFT020                 NO: TEST OTHERS
         L     R3,=V(RPFMSG)           LOAD MESSAGE TABLE
         TPUT  (3),SCRHLEN,FULLSCR     WRITE HELP SCREEN
         TGET  BUFFER,L'BUFFER,ASIS    DO A DUMMY TGET
         B     RPFT004A                AND REFRESH SCREEN
RPFT020  EQU   *
         CLC   BUFFER(3),=C'SCF'       SCROLL FORWARD ?
         BNE   RPFT023                 NO: TRY NEXT COMMAND
         L     R8,CURSTCK              LOAD CURRENT STACK ENTRY
         LA    R8,8(R8)                NEXT ENTRY IN STACK
         C     R8,STACKEND             OUT OF STACK ?
         BH    RPFTERR3                YES: GIVE SCROLL NO EFFECT MSG
         CLC   0(4,R8),FF              NOT IN USE ?
         BNE   RPFT021                 NO: PROCEED
         TM    SWITCH,$EOF             INPUT END OF FILE ?
         BO    RPFTERR3                YES: SCROLL NO EFFECT
RPFT021  EQU   *
         ST    R8,CURSTCK              SAVE CURRENT ENTRY
         LA    R15,4                   RETURNCODE FOR BRANCH LIST
         XC    FINDADD,FINDADD         CLEAR ADDRESS OF LAST FIND ENT.
         B     RPFTEND                 END OF ROUTINE
RPFT023  EQU   *
         CLC   BUFFER(3),=C'SCB'       SCROLL BACKWARD ?
         BNE   RPFT025                 NO: TRY NEXT COMMAND
         L     R8,CURSTCK              LOAD CURRENT STACK ENTRY
         SL    R8,=F'8'                PREVIOUS ENTRY IN STACK
         C     R8,STACK                OUT OF STACK ?
         BL    RPFTERR3                YES: GIVE SCROLL NO EFFECT MSG
         ST    R8,CURSTCK              SAVE CURRENT ENTRY
         LA    R15,4                   RETURNCODE FOR BRANCH LIST
         XC    FINDADD,FINDADD         CLEAR ADDRESS OF LAST FIND ENT.
         B     RPFTEND                 END OF ROUTINE
RPFT025  EQU   *
         CLC   BUFFER(6),=C'BOTTOM'    TOP COMMAND ?
         BE    RPFT027                 YES: PROCESS BOTTOM CMD
         CLC   BUFFER(2),=C'B '        ABBREVIATED BOTTOM COMMAND?
         BNE   RPFT035                 NO: ANOTHER COMMAND
RPFT027  EQU   *
         OI    SWITCH,$BOTTOM          MARK BUSY EXECUTING 'BOTTOM'
         LA    R15,20                  RETURNCODE FOR BRANCHLIST
         XC    FINDADD,FINDADD         CLEAR ADDRESS OF LAST FIND ENT.
         B     RPFTEND                 END OF ROUTINE
RPFT035  EQU   *
         CLC   BUFFER(5),=C'LABEL'     LABEL COMMAND ?
         BNE   RPFT037                 NO: BRANCH
         L     R8,CURSTCK              CURRENT STACK ENTRY
         MVC   4(4,R8),BUFFER+6        MOVE LABEL
         MVC   MSG4TXT+9(4),BUFFER+6   MOVE NAME OF LABEL TO MSG
         MVC   MSG5,MSG4TXT            MSG TO SCREEN
         OI    SWITCH,$MSG             MARK MESSAGE PENDING
         B     RPFT002                 REVIEW SCREEN
RPFT037  EQU   *
         CLC   BUFFER(2),=CL2'L'       LOCATE ON LABEL ?
         BNE   RPFT039
         LA    R15,24                  RETURN CODE.
         XC    FINDADD,FINDADD         CLEAR ADDRESS OF LAST FIND ENT.
         B     RPFTEND                 RETURN
RPFT039  EQU   *
         CLC   BUFFER(2),=CL2'F'       FIND COMMAND  ?
         BNE   RPFT050                 NO: ERROR
         CLI   BUFFER+2,C' '           REPEAT FIND ? (ONLY AN F)
         BE    RPFT045                 YES: BRANCH
         LA    R4,38                   MAXIMUM LENGTH
         LA    R3,BUFFER+2             START SCANNING FROM OFFSET 02
         MVI   DLM,C' '                INIT DLM
         CLI   BUFFER+2,C''''          QUOTE DLM FOUND ?
         BNE   RPFT040                 NO: DLM IS A BLANK
         LA    R4,37                   L'BUFFER - L'F X' (X=DELIMITER)
         LA    R3,BUFFER+3             POINT TO FIRST CHAR
         MVI   DLM,C''''               MOVE QOUTE AS DLM
RPFT040  EQU   *
         XR    R5,R5                   CLEAR LENGTH OF STRING
         LA    R6,STRING               POINT TO STRING
         MVC   STRING,BLANKS           INIT TO BLANKS
RPFT041  EQU   *
         CLC   0(1,R3),DLM             DELIMITER FOUND ?
         BE    RPFT043                 YES: FOUND
         MVC   0(1,R6),0(R3)           MOVE 1 BYTE STRING
         LA    R3,1(R3)                INCR INPUT POINTER
         LA    R6,1(R6)                INCR OUTPUT POINTER
         LA    R5,1(R5)                INCR LENGTH OF STRING
         BCT   R4,RPFT041              LOOP UNTIL 37 OR DLM FOUND
         B     RPFTERR4                INVALID STRING
RPFT043  EQU   *
         XC    LENSTR,LENSTR
         LTR   R5,R5                   NO LENGTH ?
         BZ    RPFTERR4                YES: INVALID STRING
         ST    R5,LENSTR               SAVE THIS
         MVC   FINDADD,CURSTCK         SET STRT OF FIND ON CURRENT ENT.
         B     RPFT047                 SET RC=0028 (FIND SUBCOMMAND)
RPFT045  EQU   *
         CLC   LENSTR,F0000            L'STRING = 0000 ???
         BE    RPFTERR4                YES: INVALID FIND COMMAND
RPFT047  EQU   *
         CLC   FINDADD,F0000           LAST FIND CLEARED ??
         BNE   RPFT049                 YES: BRANCH
         MVC   FINDADD,CURSTCK         SET STRT OF FIND ON CURRENT ENT.
RPFT049  EQU   *
         LA    R15,28                  RETURN CODE.
         B     RPFTEND                 RETURN
RPFT050  EQU   *
         CLC   BUFFER(3),=CL3'SUB'     Sub(mit) command ?
         BNE   RPFT052                 NO: Try other commands      @rp4
         LA    R15,32                  RETURN CODE.
         XC    FINDADD,FINDADD         CLEAR ADDRESS OF LAST FIND ENT.
         B     RPFTEND                 RETURN
RPFT052  DS    0H                                                  @rp4
         CLC   BUFFER(3),=CL3'SCL'     Scroll Left command ?       @rp4
         BNE   RPFT054                 No: Try other commands      @rp4
         LA    R4,79                   Width of screen (not mod5)  @rp4
         TM    SWITCH,$MOD5            Model 5?                    @rp4
         BNO   *+8                     No: branch                  @rp4
         LA    R4,131                  Width model 5 screen        @rp4
         L     R5,COLUMN               Start column to display     @rp4
         SR    R5,R4                   79 or 131 bytes left        @rp4
         C     R5,F0000                Negative?                   @rp4
         BH    *+8                     No: Branch                  @rp4
         LA    R5,1                    Else start column 1         @rp4
         B     RPFT056                 Create a "C" (Column) cmd   @rp4
RPFT054  DS    0H                                                  @rp4
         CLC   BUFFER(3),=CL3'SCR'     Scroll Right command ?      @rp4
         BNE   RPFTERR2                No: Error                   @rp4
         LA    R4,79                   Width of screen (not mod5)  @rp4
         TM    SWITCH,$MOD5            Model 5?                    @rp4
         BNO   *+8                     No: branch                  @rp4
         LA    R4,131                  Width model 5 screen        @rp4
         L     R5,COLUMN               Start column to display     @rp4
         AR    R5,R4                   New start column            @rp4
         L     R6,RECL                 Record length               @rp4
         LA    R6,1(R6)                + 1 because column. nbr     @rp4
         SR    R6,R4                   Minus screen width          @rp4
         CR    R6,R5                   A complete screen?          @rp4
         BNL   RPFT056                 Yes: branch                 @rp4
         LR    R5,R6                   Swap R5                     @rp4
         C     R5,F0000                Below 1                     @rp4
         BH    RPFT056                 NO: branch                  @rp4
         LA    R5,1                    Else column 1               @rp4
RPFT056  DS    0H                                                  @rp4
         MVC   BUFFER,=C'C '           Create a "C" command        @rp4
         CVD   R5,DWB                  Convert to decimal          @rp4
         UNPK  BUFFER+2(4),DWB         UNPK the result             @rp4
         OI    BUFFER+5,X'F0'          Clear sign                  @rp4
         B     RPFT005                 Process "C" command         @rp4
RPFTERR  MVC   MSG5(L'ERR1TXT),ERR1TXT MOVE ERROR MESSAGE
         OI    SWITCH,$MSG             MSG INDICATOR ON
         B     RPFT002                 REVIEW SCREEN
RPFTERR2 EQU   *
         CLI   BUFFER,C' '             NOTHING ENTERED ?
         BE    RPFT002                 YES: DO NOT GIVE ERROR MSG
         MVC   MSG5(L'ERR2TXT),ERR2TXT MOVE ERROR MESSAGE
         OI    SWITCH,$MSG             MSG INDICATOR ON
         B     RPFT002                 REVIEW SCREEN
RPFTERR3 EQU   *
         MVC   MSG5,ERR6TXT            MOVE ERROR MESSAGE
         OI    SWITCH,$MSG             MSG INDICATOR ON
         B     RPFT002                 REVIEW SCREEN
RPFTERR4 EQU   *
         MVC   MSG5,ERRCTXT            MOVE ERROR MESSAGE
         OI    SWITCH,$MSG             MSG INDICATOR ON
         B     RPFT002                 REVIEW SCREEN
RPFTEND  EQU   *
         L     R14,SAVE14              RESTORE 14
         BR    R14                     BRANCH
RPFTPACK PACK  DWB(8),BUFFER+2(0)      *** EXECUTE ONLY ***
RPFTMOVE MVC   4(0,R6),3(R2)           *** EXECUTE ONLY ***        @rp5
RPFTSCL  MVC   SCR5SCL(0),0(R7)        *** EXECUTE ONLY ***
         TITLE 'ESTAE EXIT ROUTINE'
STAEEXIT EQU   *
         DROP  ,
         USING *,R15                   GET TEMPORARY ADDRESSABILITY
         USING COMMAREA,R11            GET ADDRESSABILITY OVER RPFCOMM
         LM    R9,R13,RECOVER          RESTORE REGISTERS
         DROP  R15                     KILL LOCAL ADDRESSABILITY
         USING SAVE,R13,R12,R10,R9     RESTORE ADDRESSING
         USING SDWA,R1                 GET ADDRESSABILITY OVER SDWA
         XR    R2,R2                   CLEAR REGISTER 2
         ICM   R2,7,SDWACMPC           INSERT COMPLETION CODE
         SRL   R2,12                   SHIFT OUT USER COMPLETION CODE
         STH   R2,SYSTEMCC             SAVE SYSTEM COMPLETION CODE
         DROP  R1                      KILL ADDRESSABILITY
         SETRP RC=4,RETADDR=RET,RETREGS=NO
         BR    R14
         TITLE 'ESTAE RETRY ROUTINE'
RET      EQU   *
         DROP  ,
         USING *,R15                   LOCAL ADDR
         USING COMMAREA,R11            GET ADDRESSABILITY OVER RPFCOMM
         LM    R9,R13,RECOVER          RESTORE REGISTERS
         DROP  R15                     KILL LOCAL ADDRESSABILITY
         USING SAVE,R13,R12,R10,R9     RESTORE ADDRESSABILITY
         SYCONVHX IN=SYSTEMCC,OUT=EBCCOMP,L=2
         CLOSE INTRDR                  CLOSE Internal reader
         CLOSE SYSOUT                  CLOSE Print dataset
         SYALLOC FREE=INTRD,MF=E
         TM    RPFPRINT+DCBOFLGS-IHADCB,DCBOFOPN
         BNO   RET2                    DATA SET NOT OPEN
         CLOSE RPFPRINT                CLOSE RPFPRINT
         FREEPOOL RPFPRINT             AND FREE THE BUFFERS
RET2     EQU   *
         MVC   ERR9TXT+09(3),EBCCOMP+1 MOVE INTO MESSAGE
         MVC   RTNCODE,F0008           MOVE RETURN-CODE
         MVC   CMDAREA,ERR9TXT         MOVE TEXT
         BAL   R14,FREEPOOL            FREE THE AREAS
         B     BRO010                  RETURN TO CALLER
SYSTEMCC DS    CL2
EBCCOMP  DS    CL4
RECOVER  DS    5F
         TITLE 'Submit the dataset to the internal reader'
*---------------------------------------------------------------------*
*                                                                     *
*        R P F S U B:   Routine the submit the dataset to the         *
*        JES2 internal reader                                         *
*        Returncodes:  00: Submit ok                                  *
*                      04: internal reader could not be allocated     *
*                      08: no jcl dataset                             *
*                                                                     *
*        THIS ROUTINE IS ENTERED IN 24 BIT MODE                       *
*                                                                     *
*                                                                     *
*------------------------------------------ (C)-2002 SKYBIRD SYSTEMS -*
RPFSUB   DS    0H
         STM   R0,R15,SAVEPRT          SAVE RETURN REGISTER
         CLOSE RPFPRINT                Close input
         NI    SWITCH,255-$EOF         RESET EOF FLAG
         OPEN  RPFPRINT                And re-open
         TM    SWITCH,$CARDIM          Cardimage dataset           @rp2
         BNO   SUBERR1                 No: error                   @rp2
SUB001   DS    0H
         LA    R15,GETINP              ROUTINE ADDRESS
         BALR  R14,R15                 branch to routine
*        BASSM R14,R15                 READ A RECORD
         TM    SWITCH,$EOF             END OF FILE ?
         BO    SUBERR1                 Yes: submit failed
         MVC   MSG5TXT+4(8),BLANKS     CLEAR JOBNAME
SUB003   DS    0H
         CLC   LINE(2),=C'//'          JCL CARD ?
         BNE   SUB001                  No: read next record
SUB005   DS    0H
         LA    R3,LINE+2               POINT AFTER '//'
         LA    R4,14                   THE WORD 'JOB' SHOULD START
SUB007   DS    0H                      Before column 16
         CLC   0(5,R3),=C' JOB '       THE WORD 'JOB' FOUND ?
         BE    SUB009                  YES BRANCH
         LA    R3,1(R3)                NEXT POSITION
         BCT   R4,SUB007               LOOP UNTIL FOUND OR ALL DONE
         B     SUB001                  TAKE NEXT RECORD
SUB009   DS    0H
         LA    R2,MSG5TXT+4            POINT TO JOBNAME
         LA    R3,8                    MAX LENGTH OF JOBNAME
         LA    R4,LINE+2               POINT TO START OF RECORD
SUB011   DS    0H                      BUILD JOBNAME
         CLI   0(R4),C' '              END OF JOBNAME ?
         BE    SUB013
         MVC   0(1,R2),0(R4)           MOVE CHAR IN JOBNAME
         LA    R4,1(R4)                NEXT POSITION
         LA    R2,1(R2)
         BCT   R3,SUB011               BRANCH
SUB013   DS    0H
         SYALLOC DDN=INTRD,SYSOUT=(A,INTRDR),UNALL=YES,MF=E
         LTR   R15,R15                 Alloc OK?
         BNZ   SUBERR2                 No: error
         CLOSE RPFPRINT                Close the input
         OPEN  RPFPRINT                And re-open
         OPEN  (INTRDR,(OUTPUT))       Open JES2 internal reader
SUB015   DS    0H
         LA    R15,GETINP              ROUTINE ADDRESS
         BALR  R14,R15                 branch to routine
*        BASSM R14,R15                 READ A RECORD
         TM    SWITCH,$EOF             END OF FILE ?
         BO    SUB099                  Yes: end of submit
         PUT   INTRDR,LINE             Write record to internal reader
         B     SUB015                  And branch
SUB099   DS    0H
         CLOSE RPFPRINT                Close the input
         CLOSE INTRDR                  Close internal reader
         XR    R15,R15                 Clear return code
         B     SUB999
SUBERR1  DS    0H
         CLOSE RPFPRINT                Close the input
         LA    R15,8                   Move return code
         B     SUB999                  Return
SUBERR2  DS    0H
         CLOSE RPFPRINT                Close the input
         LA    R15,4                   Move return code
SUB999   DS    0H
         LM    R0,R14,SAVEPRT          RESTORE REGISTERS (EXCEPT 15)
         BR    R14                     BACK TO CALLER
*        BSM   0,14                    BACK TO CALLER
         TITLE 'PRINT THE OUTPUT LISTING'
*---------------------------------------------------------------------*
*                                                                     *
*        R P F P R T:   ROUTINE TO PRINT THE OUTPUT LISTING           *
*        IN THIS SECTION A PRINT DATASET WILL BE ALLOCATED            *
*        AND THE TO BE BROWSED DATASET WILL BE PRINTED                *
*        IF THE ALLOCATION FAILS THE A RETURNCODE OF 4 WILL BE PLACED *
*        IN REGISTER 15.                                              *
*                                                                     *
*        THIS ROUTINE IS ENTERED IN 24 BIT MODE                       *
*                                                                     *
*                                                                     *
*------------------------------------------ (C)-2002 SKYBIRD SYSTEMS -*
RPFPRT   DS    0H
         STM   R0,R15,SAVEPRT          SAVE RETURN REGISTER
         MVC   SYSCLS,DEFOUT           MOVE DEFAULT CLASS
         MVC   HEAD3EDT,=C'RPF'        MOVE DEFAULT 'RPF' KEYW.
         MVC   HEAD3VER,BLANKS         BLANK THE FIELDS
         MVC   HEAD3MOD,BLANKS           ,,   ,,   ,,
         MVC   HEAD3VTX,BLANKS           ,,   ,,   ,,
         MVI   HEAD3COL,C' '             ,,   ,,   ,,
         CLOSE RPFPRINT                CLOSE THE DATASET
         CLI   BUFFER+6,C'A'           TEST SYSOUT CLASS
         BL    PRT000                  DEFAULT IF NOT
         CLI   BUFFER+6,C'9'           A-Z OR 0-9 ***DEFAULT CLS C***
         BH    PRT000
         MVC   SYSCLS,BUFFER+6         MOVE DIFFERENT SYSOUT CLASS
PRT000   DS    0H
         SYALLOC SYSOUT=C,DDN=INTRD,MF=E,                              X
               DSALLOC=NO,UNALL=YES    ALLOCATE SPIN OFF SYSOUT
         MVC   DALSYSCL,SYSCLS         MOVE RIGTH SYSOUT CLASS
*        CLC   DEFPRT,BLANKS           NO PRINTER FOUND ?
*        BE    PRT000A                 YES: ALLOCATE
*        MVC   DALSUSR,DEFPRT          MOVE PRINTER NAME
*        MVC   TUSUSER,=A(DALSUSER)    MOVE TEXT UNIT INTO LIST
PRT000A  DS    0H
         LA    R1,DALPTR               REQUEST BLOCK POINTER
         DYNALLOC ,                    ALLOCATE
         LTR   R15,R15                 TEST IF ALLOC OK ?
         BNZ   PRT009                  SET RC=4 AND GO TO CALLER
         RDJFCB RPFPRINT               READ JFCB OF RPFPRINT
         MVC   HEADDSN,BLANKS          CLEAR WHOLE FIELD
         MVC   HEADDSN(44),JFCB        MOVE DSNAME OF RPFPRINT
         CLC   JFCB+44(8),BLANKS       NO MEMBER PROVIDED ?
         BE    NOMEM                   YES: BRANCH
         LA    R3,HEADDSN+43           POINT AFTER DSNAME
         LA    R4,43                   NUMBER OF TRIES
HEADM    EQU   *
         CLI   0(R3),C' '              BLANK FOUND ?
         BNE   HEADM50             NO: LAST SIGNIFICANT BYTE DSN FOUND
         BCTR  R3,0                    DECREASE BY ONE
         BCT   R4,HEADM                LOOP UNTIL LAST BYTE FOUND
         B     NOMEM                   NO DSNAME: THIS IS NOT POSSIBLE
HEADM50  EQU   *
         MVI   1(R3),C'('              MOVE START PARENTHESE
         MVC   2(8,R3),JFCB+44         MOVE MEMBERNAME
         LA    R3,9(R3)                POINT TO LAST BYTE OF MEMBERNAME
         LA    R4,8                    MAX NUMBER OF TRIES
HEADM51  EQU   *
         CLI   0(R3),C' '              BLANK FOUND ?
         BNE   HEADM99             NO: LAST SIGNIFICANT BYTE MBR FOUND
         BCTR  R3,0                    DECREASE BY ONE
         BCT   R4,HEADM51              LOOP UNTIL LAST BYTE FOUND
HEADM99  EQU   *
         MVI   1(R3),C')'              COMPLETE: FORM= 'DSN(MEMBER)'
NOMEM    EQU   *
         MVC   HEAD2VOL(6),JFCB+118    MOVE VOLUME SERIAL
         MVC   HEAD2UID(7),USERID      USERID INTO HEADER
         BAL   R14,TIME                SET TIME INTO HDR
         XC    TIMEFLD,TIMEFLD         CLEAR WORK FIELD           @2000
         TIME  DEC
         ST    R1,TIMEFLD              Save Julian date
         CLI   TIMEFLD,X'01'           20xx date ?                @2000
         BNE   *+12                    Yes: branch
         MVI   TIMEFLD,X'20'           Insert century             @2000
         B     *+8                     Yes: branch
         MVI   TIMEFLD,X'19'           Insert century             @2000
         LA    R1,TIMEFLD              Parameter                  @2000
         BAL   R14,DATE                SET DATE INTO HDR
         MVC   HEAD2DTE,DATEDISP       SET DATE INTO HEADER
         NI    SWITCH,X'FF'-$PRTH3     SET SWITCH OFF
         CLC   CMDAREA(8),=CL8'RPFWORK' RPFBRO USED AS BROWSE?
         BNE   NOHEAD3                 NO: DO NOT PRINT 3RD HDR
         TM    INFCODE,SEQALC          SEQUENTIAL DATASET ?
         BO    NOHEAD3                 NO: DO NOT PRINT 3RD HDR
         OPEN  RPFWORK2                OPEN PDS
         MVC   BLDLM,JFCB+44           MOVE MEMBERNAME
         BLDL  RPFWORK2,BLDLLIST       TRY TO FIND MEMBER
         LTR   R15,R15                 RC=0000
         BNZ   CLOSEW2                 NO: CLOSE THE DATASET
         NI    BLDLC,X'FF'-X'E0'       CLEAR FIRST 3 BITS
TESTRPFN DS    0H
* TEST NEW FORMAT RPF USERDATA AND ISPF USERDATA (STATISTICS)
         CLI   BLDLC,X'0F'             15 HALFWORDS UDATA ?
         BNE   CLOSEW2                 NO: CLOSE DATASET
         CLI   SPFTIME,X'23'           HOURS TIME PRESENT ?
         BH    CLOSEW2                 NO CLOSE DATASET
         CLI   SPFTIME,X'59'           MINUTES TIME PRESENT ?
         BH    CLOSEW2                 NO CLOSE DATASET
         TM    SPFDATEI+3,X'0C'        DOES DATE CONTAIN A SIGN
         BNO   CLOSEW2                 NO: CLOSE DATASET
         TM    SPFDATEU+3,X'0C'        DOES DATE CONTAIN A SIGN
         BNO   CLOSEW2                 NO: CLOSE DATASET
         CLI   SPFDATEU,X'00'          TIME DEC FMT (19XX)        @2000
         BNE   *+8                     No branch                  @2000
         MVI   SPFDATEU,X'19'          20the century              @2000
         CLI   SPFDATEU,X'01'          TIME DEC FMT (20XX)        @2000
         BNE   *+8                     No branch                  @2000
         MVI   SPFDATEU,X'20'          21the century              @2000
         LA    R1,SPFDATEU             LOAD DATE
         BAL   R14,DATE                AND CONVERT
         MVC   HEAD3DTE,DATEDISP       MOVE DATE
         XR    R7,R7                   CLEAR REG (00000000)
         ICM   R7,6,SPFTIME            TIME      (00TTTT00)
         IC    R7,=X'F0'               ADD SIGN  (00TTTTF0)
         SRL   R7,R4                   AND SHIFT (000TTTTF)
         ST    R7,DWB                  STORE THE RESULT
         MVC   TIMEDISP,PATT2          PATTERN INTO WORKFIELD
         ED    TIMEDISP(07),DWB+1      EDIT THE TIME
         MVC   HEAD3TME,TIMEDISP+2     TIME INTO HEADER3
         MVC   HEAD3UID(7),SPFUID      USERID SAVER
         XR    R7,R7                   CLEAR R7
         ICM   R7,3,SPFRECU            # RECORDS
         CVD   R7,DWB                  CONVERT IT TO PACKED
         UNPK  HEAD3REC,DWB            CONVERT IT TO ZONED
         ZAP   $CARDS,DWB              SAVE NUMBER OF RECORDS
         OI    HEAD3REC+4,X'F0'        AND CLEAR SIGN
         XR    R7,R7                   CLEAR REG 7
         IC    R7,SPFVERS              VERSION NUMBER
         CVD   R7,DWB                  TO PACKED
         OI    DWB+7,X'0F'             MAKE ABSOLUTE
         UNPK  HEAD3VER,DWB            MAKE ZONED
         IC    R7,SPFMOD               MODIFICATION LEVEL
         CVD   R7,DWB                  TO PACKED
         OI    DWB+7,X'0F'             MAKE ABSOLUTE
         UNPK  HEAD3MOD,DWB            MAKE ZONED
         MVI   HEAD3COL,C':'           MOVE COLON BETWEEN
         MVC   HEAD3VTX,=C',LEVEL= '   MOVE TEXT INTO LINE
         OI    SWITCH,$PRTH3           MARK PRINT OF HEAD3
         CLC   HEAD3VER(2),=C'80'      VERSION NUMBER 80 OR > ?
         BNL   CLOSEW2                 YES: LEAVE RPF
         MVC   HEAD3EDT,=C'SPF'        MOVE NAME OF IBM'S SPF
CLOSEW2  CLOSE RPFWORK2                CLOSE THE DATASET
NOHEAD3  OPEN  (SYSOUT,(OUTPUT))       ALLOCATION IS O.K.
         OPEN  RPFPRINT                OPEN THE DATASET
         NI    SWITCH,255-$EOF         RESET EOF FLAG
         ZAP   LINECNT,=P'99'          INIT LINECOUNT
         ZAP   PAGECNT,=P'0'           INIT PAGECOUNT
*        ** FILL ALLOCATED SYSOUT DATASET ****
PRT001   EQU   *                       LOOP TO FILL INTRDR
         LA    R15,GETINP              ROUTINE ADDRESS
         BALR  R14,R15                 branch to routine
*        BASSM R14,R15                 READ A RECORD
         TM    SWITCH,$EOF             END OF FILE ?
         BNZ   PRT003                  YES: END OF LISTING
         CP    LINECNT,$LINES          MORE THAN '$LINES' LINES?
         BNL   PRTHEAD                 WRITE HEADING
PRTLINE  TM    SWITCH,$NOCC            NO CONTROL CHARS
         BNO   PUTLINE1                NO: NORMAL WRITE
         TM    SWITCH,$CARDIM          DO WE HAVE A CARD IM DATASET
         BNO   PRTLINE9                NO: WRITE.
         LA    R3,LINE                 LOAD LINE TO CALCULATE
         LA    R4,80                   )START POSITION
         LA    R5,1                    INIT COUNTER TO ONE
PRTLINE2 CLI   0(R3),C' '              BLANK FOUND ?
         BNE   PRTLINE5                NO: START POSITION FOUND
         LA    R5,1(R5)                COUNT BLANK
         LA    R3,1(R3)                NEXT POSITION IN 'LINE'
         BCT   R4,PRTLINE2             LOOP UNTIL ALL BLANKS SKIPPED
         B     PRTLINE9                LINE CONTAINS ALL BLANKS
PRTLINE5 CVD   R5,DWB                  CONVERT COUNTER TO PACKED
         MVC   LINE+86(4),=X'40202020' MOVE PATTERN
         ED    LINE+86(4),DWB+6        EDIT THE RESULT
PRTLINE9 PUT   SYSOUT,LINE-1           WRITE LINE INCLUDING CC
         B     PUTLINE2
PUTLINE1 PUT   SYSOUT,LINE             WRITE
PUTLINE2 AP    LINECNT,=P'1'           LINECNT=LINECNT+1
         MVI   LINE-1,X'40'            BLANK CC
         B     PRT001                  NEXT RECORD IN RPFPRINT
PRTHEAD  ZAP   LINECNT,=P'0'           ZERO LINE COUNTER
         TM    SWITCH,$NOCC            ALLREADY A PRINT DATASET ?
         BNO   PRTLINE                 WRITE NO HEADING IF YES
         AP    PAGECNT,=P'1'           INCREASE PAGE COUNT
         MVC   HEAD1OF,BLANKS          BLANK REST OF HEADER
         MVC   HEADTPGS,BLANKS
         MVC   HEADPAGE,=X'402020202120' MOVE PATTERN
         ED    HEADPAGE,PAGECNT        MOVE PAGE NUMBER
         TM    SWITCH,$PRTH3           NO: RPF USERDATA ?
         BNO   PRTHEAD0                YES: WRITE HEADER
         TM    SWITCH,$CARDIM          IS IT CARD IMAGE ?
         BNO   PRTHEAD0                NO:  WRITE HEADER
         ZAP   DWB(5),$CARDS           # OF CARDS OF THE MEMBER
         ZAP   DWB+5(2),$LINES         SET LINECOUNT
         SP    DWB+5(2),=P'7'          MINUS HEADERS MINUS 1
         AP    DWB(5),DWB+5(2)         ADD TO ORIGIN
         AP    DWB+5(2),=P'1'          RESET TO # LINES
*---------------------------------------------------------------------*
*  THE LISTING HAS $LINES-6 DETAIL LINES PER PAGE
*  AT THIS POINT THE NUMBER OF PAGES WILL BE calculated and
*  SET INTO THE HEADER IN the field 'haeadtpgs'
*  DWB+0(5) IS NUMBER OF RECORDS PLUS NUMBER OF detail lines minus 1
*  DWB+5(2) IS THE # OF DETAIL LINES PER PAGE
*---------------------------------------------------------------------*
         DP    DWB(5),DWB+5(2)         DIVIDE WITH # LINES
*---------------------------------------------------------------------*
* QUOTIENT IS NUMBER OF PAGES OF THE MEMBER
* AND CAN BE FOUND IN DWB+0(3)
*---------------------------------------------------------------------*
         MVC   HEAD1OF,=C'OF '         MOVE WORD 'OF'
         MVC   HEADTPGS,=X'402020202120' MOVE PATTERN
         ED    HEADTPGS,DWB            EDIT NUMBER OF PAGES
PRTHEAD0 PUT   SYSOUT,HEAD             WRITE HEADING
         PUT   SYSOUT,HEAD2            WRITE HEADING
         AP    LINECNT,=P'2'           ADD TWO TO LINECNT
         TM    SWITCH,$PRTH3           SHOULD HEAD3 BE PRINTED?
         BNO   PRTHEAD1                NO: SKIP
         PUT   SYSOUT,HEAD3            PRINT HEADER
         AP    LINECNT,=P'1'           INCREASE LINE COUNTER
PRTHEAD1 MVI   LINE-1,C'0'             MOVE CC CHAR
         AP    LINECNT,=P'1'           INCREASE LINE COUNTER
         TM    SWITCH,$CARDIM          CARD IMAGE DATASET ?
         BNO   PRTLINE                 YES: WRITE SECOND HDR
HEADIM   EQU   *                       ONLY CARD IM SECTION
         PUT   SYSOUT,SCALE            WRITE SCALE LINE
         AP    LINECNT,=P'2'           INCREASE LINECOUNT
         B     PRTLINE                 WRITE LINE
PRT003   EQU   *
         CLOSE SYSOUT                  FREE = CLOSE
         FREEPOOL SYSOUT               AND FREE THE BUFFERS
         CLOSE RPFPRINT                CLOSE THE DATASET
         FREEPOOL RPFPRINT             AND FREE THE BUFFERS
         LA    R15,0                   RETURN CODE
         MVC   MSG1TXT+21(1),SYSCLS    MOVE SYSOUT CLASS IN MSG
         B     PRTEND                  GO TO END OF THE ROUTINE
PRT009   EQU   *                       ALLOCATION FAILED
         LA    R15,4                   NOTIFY ERROR TO CALLER
PRTEND   EQU   *                       END OF SUBMIT ROUTINE
         MVC   SYSCLS,DEFOUT           MOVE DEFAULT CLASS
         LM    R0,R14,SAVEPRT          RESTORE REGISTERS (EXCEPT 15)
         BR    R14                     BACK TO CALLER
*        BSM   0,14                    BACK TO CALLER
         TITLE 'READ INPUT DATASET'
*---------------------------------------------------------------------*
*                                                                     *
*        ROUTINE:   GETINP.                                           *
*        FUNCTION:  READ A RECORD OF THE TO BE BROWSED DATASET        *
*                   IF END OF FILE, THE SWITCH $EOF WILL BE SET       *
*                   If RECFM=V then the RDW will be skipped        @rp2
*        NOTE:      THIS ROUTINE SHOULD BE ENTERED IN 24 BIT MODE     *
*                                                                     *
*------------------------------------------ (C)-2001 SKYBIRD SYSTEMS -*
GETINP   DS    0H
         ST    R14,GETIR14             SAVE REGISTER 14
         MVI   LINE-1,C' '             Insert blank                @rp2
         MVC   LINE,LINE-1             CLEAR RECORD
         TM    RPFPRINT+DCBRECFM-IHADCB,DCBRECV  variable record?  @rp2
         BNO   GET001                  NO: Branch                  @rp2
         GET   RPFPRINT,LINE-4         Retrieve a Variable record  @rp2
         B     GET999                  Branch, end of routine      @rp2
GET001   DS    0H                                                  @rp2
         GET   RPFPRINT,LINE           RETRIEVE A RECORD
         B     GET999                  RETURN
GET005   EQU   *                       EODAD ADDRESS OF RPFPRINT
         OI    SWITCH,$EOF             MARK END OF FILE
GET999   EQU   *
         L     R14,GETIR14             RESTORE REG 14
*        BSM   0,R14                   RETURN TO 31 BIT CALLER
         BR    R14                     RETURN TO 31 BIT CALLER
         TITLE 'CONVERT SCREEN ROUTINE'
*---------------------------------------------------------------------*
*                                                                     *
*        C O N V I N:        CONVERT A TGET ASIS SCREEN TO NORMAL     *
*        THE SBA-S AND ATTRIBUTE BYTES WILL BE REMOVED AND THE        *
*        REST WILL BE PLACED IN 'SCREEN' THE AIDBYTE WILL BE          *
*        PLACED IN 'AIDBYTE'                                          *
*        THE LENGTH OF THE OUTPUT WILL BE PLACED IN REGISTER 1        *
*        REGISTER 2 POINTS TO THE AIDBYTE.                            *
*        REGISTER 5 POINTS TO THE OUTPUT SCREEN AREA                  *
*                                                                     *
*------------------------------------------ (C)-2002 SKYBIRD SYSTEMS -*
         SPACE 2
CONVIN   DS    0F                      CONVERT SCREEN ROUTINE
         ST    R14,CONVR14             SAVE R14
         L     R3,COMMSCR              INPUT SCREEN
         TGET  (3),116,ASIS            READ THE SCREEN
         MVC   0(1,R2),0(R3)           SAVE AIDBYTE
         XR    R2,R2                   INIT OUTPUT LENGTH
         LR    R4,R1                   SAVE INPUT LENGTH
         SH    R4,=H'3'                SKIP AID AND CURSOR ADDRESS
         C     R4,F0000                REGISTER ZERO
         BNH   CONV099                 NOT HIGH: END OF ROUTINE
         LA    R3,3(R3)
*        OUTPUT SCREEN IS POINTED BY R5
CONV001  CLI   0(R3),X'11'             SET BUFFER ADDRESS ?
         BE    CONV003                 YES: SKIP NEXT 3 BYTES INPUT
         MVC   0(1,R5),0(R3)           MOVE INPUT BYTE
         LA    R3,1(R3)                NEXT BYTE INPUT
         LA    R2,1(R2)                COUNT OUTPUT BYTES
         LA    R5,1(R5)                NEXT BYTE OUTPUT
         BCT   R4,CONV001              TEST NEXT BYTE
         B     CONV099                 END OF ROUTINE
CONV003  LA    R3,3(R3)                SKIP 3 BYTES INPUT
         BCTR  R4,0                    MINUS 1 BCT
         BCTR  R4,0                    MINUS 1 BCT
         BCT   R4,CONV001              TEST NEXT BYTE
CONV099  LR    R1,R2                   OUTPUT LENGTH IN REGISTER 1
         L     R14,CONVR14             RESTORE R14
         BR    R14                     RETURN TO CALLER
         TITLE 'P F K  SEARCH ROUTINE'
*---------------------------------------------------------------------*
*                                                                     *
*        P F K    ROUTINE TO CHECK THE AIDBYTE WITH THE PFK DEFINITION*
*                 IN COMMAREA IF THE PFK IS FOUND THE COMMAND         *
*                 IN THE PFK WILL BE PLACED INTO THE FIELD POINTED    *
*                 BY REGISTER 2                                       *
*        REGISTER 1 POINTS TO THE AIDBYTE.                            *
*        REGISTER 2 POINTS TO THE COMMAND AREA OF THE SCREEN          *
*                                                                     *
*        RETURNCODES: 00 PFK FOUND CONFIRMATION IS NO                 *
*                     04 PFK FOUND CONFIRMATION IS YES                *
*                     08 PFK NOT DEFINED OR NOT FOUND                 *
*                     12 INVALID PFK DEFINITION                       *
*                                                                     *
*------------------------------------------ (C)-2002 SKYBIRD SYSTEMS -*
         SPACE 2
PFK      ST    R14,PFKR14              SAVE REGISTER 14
         LA    R4,DEFPFK01             PFK DEFINITIONS IN COMMAREA
         LA    R5,24                   MAX 24 PFKS
PFK01    CLC   0(1,R4),0(R1)           TEST PFK WITH AIDBYTE
         BE    PFK05                   YES: FOUND
         LA    R4,26(R4)               NEXT PFK
         BCT   R5,PFK01                TEST NEXT PFK
         LA    R15,8                   PFK NOT FOUND
         B     PFK99                   END OF ROUTINE
PFK05    CLI   1(R4),C'X'              PFK NOT DEFINED ?
         BNE   PFK06                   ERROR
         LA    R15,8                   RETURNCODE
         B     PFK99                   END OF ROUTINE
PFK06    MVC   REP5,BLANKS             CLEAR INPUT COMMAND FIELD
         MVC   0(40,R2),BLANKS         CLEAR OUTPUT COMMAND FIELD
         L     R1,COMMSCR              UNFORMATTED SCREEN
         CLI   6(R1),X'94'             MAX OPERAND (SCROLL) ?
         BE    PFK06A                  YES: BRANCH
         CLI   6(R1),C'M'              MAX OPERAND (SCROLL) ?
         BNE   PFK08                   NO: IGNORE
PFK06A   EQU   *
         CLC   2(3,R4),=C'SCF'         SCROLL FORWARD ?
         BNE   PFK07                   NO: TRY SCB
         MVC   0(6,R2),=C'BOTTOM'      YES: BOTTOM COMMAND
         B     PFK99
PFK07    CLC   2(3,R4),=C'SCB'         SCROLL BACKWARD ?
         BNE   PFK08                   NO: IGNORE
         MVC   0(3,R2),=C'TOP'         YES: TOP COMMAND
         B     PFK99
PFK08    MVC   0(24,R2),2(R4)          MOVE PFK COMMAND IN SCREEN
         CLI   1(R4),C'N'              NO CONFIMATION ?
         BNE   PFK09                   YES: RC= 0000
         LA    R15,0
         B     PFK99
PFK09    CLI   1(R4),C'Y'              CONFIMATION ?
         BNE   PFK11                   NO: INVALID PFK DEFINITION
         LA    R15,4                   RC= 0004 CONFIRMATION.
         B     PFK99
PFK11    LA    R15,12                  INVALID PFK DEFINITION
         B     PFK99                   END OF ROUTINE
PFK99    L     R14,PFKR14              RESTORE R14
         BR    R14                     BACK TO CALLER
         TITLE 'TIME AND DATE ROUTINE'
*---------------------------------------------------------------------*
*                                                                     *
*        TIME - GET TIME OF DAY, CONVERT TO DISPLAY FORMAT            *
*                                                                     *
*               INPUT:  NONE                                          *
*               OUTPUT: TIMEDISP - TIME OF DAY, HH:MM:SS              *
*                                                                     *
*------------------------------------------ (C)-2001 SKYBIRD SYSTEMS -*
TIME     ST    R14,SAVE14TI        SAVE REG.14
         TIME  DEC                 GET TIME OF DAY
         SRL   R0,4                SHIFT OUT HUNDREDS OF SECONDS
         ST    R0,TIMEWORK
         OI    TIMEWORK+3,X'0F'    INSERT SIGN
         MVC   TIMEDISP,PATT1      PATTERN INTO OUTPUT FILED
         ED    TIMEDISP(10),TIMEWORK
         MVC   HEAD2TME,TIMEDISP+2
TIME99   L     R14,SAVE14TI        RESTORE REG.14
         BR    R14                 RETURN
*---------------------------------------------------------------------*
*                                                                     *
*        DATE - CONVERT A JULIAN DATE (YYDDD) TO  DD/MM/YY            *
*               INPUT  - JULIAN DATE POINTED TO BY R1                 *
*               OUTPUT - DD/MM/YY RETURNED IN FIELD "DATEDISP"        *
*                                                                     *
*------------------------------------------ (C)-2002 SKYBIRD SYSTEMS -*
DATE     ST    R14,SAVE14D         SAVE REG 14
         ZAP   FEB,=PL2'28'       INIT FEBRUARY
         ZAP   MNDNR,=P'1'        INIT MNDNR
         UNPK  DAYNBR,0(4,R1)     JULIAN DATE                     @2000
         PACK  YEAR,DAYNBR(4)                                     @2000
         MVC   DATEDISP+6(4),DAYNBR YEAR IN DATE                  @2000
         DP    YEAR(4),=PL1'4'    DIVIDE BY 4
         CP    YEAR+3(1),=PL1'0'  LEAP YEAR
         BNE   DATE2                   BRANCH IF NOT
         ZAP   FEB,=PL2'29'            29 DAYS IN FEBRUARI
*
DATE2    EQU   *
         LA    R7,JAN                  MONTHTABLE
         ZAP   DAY,2(2,R1)                                        @2000
*
DATE3    EQU   *
         CP    DAY(3),0(2,R7)
         BNH   DATE4
         SP    DAY,0(2,R7)             SUBTRACT ULTIMO DATE
         LA    R7,2(R7)                NEXT MONTH
         AP    MNDNR,=PL1'1'
         B     DATE3                   RETURN
*
DATE4    EQU   *
         UNPK  UNPKMND,MNDNR
         OI    UNPKMND+2,X'F0'
         MVC   DATEDISP+3(2),UNPKMND+1
         UNPK  UNPKMND,DAY
         OI    UNPKMND+2,X'F0'
         MVC   DATEDISP(2),UNPKMND+1
         MVI   DATEDISP+2,X'61'
         MVI   DATEDISP+5,X'61'        SLASHES BETWEEN NUMBERS
         L     R14,SAVE14D             RESTORE R14
         BR    R14                     BACK TO CALLER
SAVE14D  DS    F                       SAVE AREA REG.14 TIME ROUTINE
SAVE14PL DS    F                       SAVE AREA REG.14 FREEPOOL ROUT
SAVE14TI DS    F                       SAVE AREA REG.14 DATE ROUTINE
GETIR14  DS    F                       SAVE AREA REG.14 GETINP ROUT
FF       DC    X'FFFFFFFF'
TIMEWORK DC    F'0'                    WORK AREA TIME ROUTINE
TIMEDISP DS    CL10                    WORK AREA TIME ROUTINE
DATEDISP DS    CL10                    WORK AREA DATE ROUTINE     @2000
TIMEFLD  DS    CL16                    Work area time macro       @2000
PATT1    DC    X'402021207A20207A2020' PATTERN TIME ROUTINE
PATT2    DC    X'402021207A2020404040' PATTERN TIME ROUTINE
DAYNBR   DS    CL7                                                @2000
$CARDS   DC    PL3'0'
YEAR     DC    PL4'0'
JAN      DC    PL2'31'
FEB      DC    PL2'28'
MRT      DC    PL2'31'
APR      DC    PL2'30'
MAY      DC    PL2'31'
JUN      DC    PL2'30'
JUL      DC    PL2'31'
AUG      DC    PL2'31'
SEP      DC    PL2'30'
OKT      DC    PL2'31'
NOV      DC    PL2'30'
DEC      DC    PL2'31'
MNDNR    DC    PL2'1'
UNPKMND  DS    CL3
DAY      DC    PL3'0'
         DS    0F
         TITLE 'RPFPRINT AND SYSOUT DCB'
         PRINT NOGEN
RPFPRINT DCB   DDNAME=RPFPRINT,MACRF=GM,EODAD=GET005,DSORG=PS,         X
               EXLST=EXLST
INTRDR   DCB   DDNAME=INTRD,MACRF=PM,LRECL=80,RECFM=F,                 X
               BLKSIZE=80,DSORG=PS
SYSOUT   DCB   DDNAME=INTRD,MACRF=PM,LRECL=133,RECFM=FBA,              X
               BLKSIZE=3990,DSORG=PS
RPFWORK2 DCB   DSORG=PO,BLKSIZE=256,DDNAME=RPFWORK2,MACRF=R
         PRINT GEN
EXLST    DS    0F
         DC    X'87',AL3(JFCB)
JFCB     DS    CL176
         TITLE 'SCREEN FORMATS'
SCR1TXT  DC    X'27F5C21140401DF8' WRITE ERASE / R01,C01
SCR1LEN  EQU   *-SCR1TXT
SCR5TXT  DC    X'27F1C21140401DF8' WRITE NO-ERASE / R01,C01
SCR5HEAD DS    CL109                   CONTAINS 'HELP' OR 'BROWSE'
SBA5#0   DC    X'11407A'               R01,C59
MSG5     DC    CL22' '
SBA5#1   DC    X'11C150',X'1DF8',C'CMD =>',X'1DC113' R02,C01
REP5     DC    CL40' ',X'1DF0'
SBA5#2   DC    X'11C260',X'1DF0',AL3(YELLOW)         R03,C01       @rp5
SCR5SCL  DC    CL131' '
SBA5#3   DC    X'11C3F0'               R04,C01
LNE5     DS    CL1743                  21 DATA LINES (MOD 2)       @rp5
SCR524   EQU   *-SCR5TXT
         DS    CL664                   8 DATA LINES (MOD 3)        @rp5
SCR532   EQU   *-SCR5TXT
         DS    CL913                   11 DATA LINES (MOD 4)       @rp5
SCR543   EQU   *-SCR5TXT
         ORG   LNE5                    RESET LOCATION COUNTER
         DS    CL3240                  24 LINES OF 135 BYTES       @rp5
SCR527   EQU   *-SCR5TXT
         ORG   ,                       ANOTHER 52 BYTES (MOD 5)
SCR5TX1  DS    0CL109
         DC    CL13'BROWSE DSN = '
SCR5DSN  DS    CL44
         DC    52C'-'
*
SCR5TX2  DS    0CL109
         DC    CL57'RPF TUTORIAL: -------------------------------------C
               ------'
         DC    52C'-'
*
SCR5TX3  DS    0CL109                  HEADER IF $UTILBR IS ON
         DC    CL11'LISTING OF '
SCR5UTIL DS    CL8                     NAME OF CREATING UTILITY
         DC    C' '
SCR5DDN  DS    CL8                     NAME OF UTILITY OUTPUT DDNAME
         DC    CL7' OUTPUT'
         DC    CL22'----------------------'
         DC    52C'-'
*
SCALE2   DC    CL105'----+----1----+----2----+----3----+----4----+----5C
               ----+----6----+----7----+----8----+----9----+----10---+'
         DC    CL105'----11---+----12---+----13---+----14---+----15---+C
               ----16---+----17---+----18---+----19---+----20---+----2'
         DC    CL45'1---+----22---+----23---+----24---+----25---+'
BUFFER   DS    CL40
ERR1TXT  DC    CL22'-Invalid column number'
ERR2TXT  DC    CL22'-------Invalid command'
ERR3TXT  DC    CL22'---ALLOC. ERROR SYSOUT'
ERR4TXT  DC    CL22'-------PFK not defined'
ERR5TXT  DC    CL22'PFK definition invalid'
ERR6TXT  DC    CL22'--Scroll had no effect'
ERR7TXT  DC    CL22'--No storage available'
ERR8TXT  DC    CL22'------DATASET IS EMPTY'
ERR9TXT  DC    CL22'----ABENDXXX IN BROWSE'   OFFSET 09
ERRATXT  DC    CL22'--Label XXXX not found'   OFFSET 08
ERRBTXT  DC    CL22'--------Text not found'
ERRCTXT  DC    CL22'--Invalid char. string'
ERRDTXT  DC    CL22'---------Submit failed'
ERRETXT  DC    CL22'--------No JCL dataset'
ERRFTXT  DC    CL22'-LRECL>255 not allowed'                        @rp3
MSG1TXT  DC    CL22'Listing made, SYSOUT=X'
MSG2TXT  DC    CL22'--Col XXX,line XXXXXXX'   OFFSET 06,15
MSG3TXT  DC    CL22'Chars XXXXXXXXXX found'   OFFSET 06
MSG4TXT  DC    CL22'---Label XXXX assigned'   OFFSET 09
MSG5TXT  DC    CL22'Job xxxxxxxx submitted'   OFFSET 04
         TITLE 'VARIABLES CONSTANTS AND CONTROL BLOCKS'
         DC    CL4' '
LINE     DC    CL254' '
         DC    CL256' '
*
BLDLLIST DS    0H                      TO OBTAIN RPF USERDATA
N1       DC    AL2(1)                  NUMBER OF ENTRIES
L1       DC    AL2(44)                 LENGTH OF ENTRY
BLDLM    DS    CL8                     MEMBERNAME
         DS    CL5                     TTR + 'K' AND 'Z' BYTE
BLDLC    DS    C                       'C' BYTE
BLDLOLD  DS    0CL30                   OLD FORMAT RPF UDATA
BLDLRPF  DS    CL4                     CONTAINS 'RPF'
BLDLUID  DS    CL8                     USERID LAST SAVE
BLDLDATE DS    PL3                     DATE (YYDDDS PACKED)
BLDLTIME DS    PL4                     TIME (HHMMSS PACKED)
BLDLCARD DS    PL3                     # CARDS (PACKED)
         DS    CL8
         ORG   *-30                    SET LOCATION COUNTER BACK
BLDLNEW  DS    0CL30                   RPF NEW FORMAT OR IBM SPF UDATA
SPFVERS  DS    CL1                     VERSION NUMBER (HEX)
SPFMOD   DS    CL1                     MOD. LEVEL     (HEX)
SPFNULL  DS    CL2                     CONTAINS BINARY ZEROES     @2000
SPFDATEI DS    CL4                     INIT DATE SAVED.(0CYYDDD PACKED)
SPFDATEU DS    CL4                     CURRENT DATE SAVED ( ,,     ,, )
SPFTIME  DS    CL2                     CURRENT TIME (PACKED, NO SIGN)
SPFRECU  DS    CL2                     CURRENT # RECORDS (BIN)
SPFRECI  DS    CL2                     INITIAL # RECORDS (BIN)
SPFRECM  DS    CL2                     MOD     # RECORDS (BIN)
SPFUID   DS    CL10                    USERID  (CHARACTER)
*
SAVEPRT  DC    16F'-1'
RECL     DC    F'0'                    CURRENT LRECL OF FILE
STACK    DS    F                       START OF STACK
STACKEND DS    F                       A(LAST ENTRY IN STACK)
CURSTCK  DS    F                       CURRENT ENTRY IN STACK
SAVESTCK DS    F                       SAVED CURSTCK IN FIND ROUTINE
FINDADD  DS    F                       LAST STACK ENTRY FIND COMMAND+8
LENSTR   DS    F                       LENGTH OF LAST FIND CHAR STRING
NUMPGS   DS    F
COLUMN   DC    F'2'                    START COLUMN
SAVE14   DC    F'0'                    SAVE AREA FOR REGISTER 14
LENGTH   DC    F'79'
F0000    DC    F'0'
F0001    DC    F'1'
F0002    DC    F'2'
F0004    DC    F'4'
F0008    DC    F'8'
F0078    DC    F'78'
F0130    DC    F'130'
F0255    DC    F'255'                  Max LRECL
F0251    DC    F'251'                  Max LRECL V(B) datasets     @rp2
CONVR14  DS    F                       SAVE R14 IN CONVIN
PFKR14   DS    F                       SAVE R14 IN PFK
WRKSIZE  DS    F                       LENGTH OF WORKSPACE(GETM)
WRKENT   DS    F                       LENGTH OF 1 line in workspc @rp6
LINES21  DC    A(21)                   # lines model 2             @rp6
LINES24  DC    A(24)                   # lines model 5             @rp6
LINES29  DC    A(29)                   # lines model 3             @rp6
LINES40  DC    A(40)                   # lines model 4             @rp6
TPUTLEN  DS    F                       LENGTH OF TPUT SCR5TXT
#LINES   DS    H                       # DATA LINES (21/29/40/24)
AIDBYTE  DS    C
DWB      DS    D
SWITCH   DC    X'00'
$NOCC    EQU   X'80'                   INPUT DCB HAS NO CONTROL CHARS
$CARDIM  EQU   X'40'                   INPUT DCB HAS LRECL=80
$PRTH3   EQU   X'20'                   MARK PRINT HEADER 3
$EOF     EQU   X'10'                   INPUT DS IS EOF
$BOTTOM  EQU   X'08'                   BOTTOM SUBCOMMAND EXECUTING
$MSG     EQU   X'04'                   IF ON: DO NOT GIVE MSG2TXT
$FIND    EQU   X'02'                   FIND SUBCOMMAND EXECUTING
$MOD5    EQU   X'01'                   IF ON: MODEL 5 SCREEN (27X132)
RECCNT   DC    PL5'0'
PAGECNT  DC    PL3'0'
FINDCNT  DC    PL3'0'
STRING   DS    CL38                    CHARACTER STRING
WORKFLD  DS    CL38                    WORK FIELD TO XLATE TO CAPS
DLM      DS    C
LINECNT  DC    PL3'0'
         DC    C'ZAPLINECNT'           ZAPDATA
$LINES   DC    PL2'54'                 LINECOUNT
         DC    C'ENDOFLINECNT'         END OF ZAP DATA
*
HEAD     DS    0CL133                  PRINT HEADERS OF NOCC DATASETS
         DC    CL53'1(C)-2002 Skybird systems: output listing of dataseX
               t '
HEADDSN  DS    CL54
         DC    CL10'     Page '
HEADPAGE DS    CL6
         DC    CL1' '
HEAD1OF  DS    CL3
HEADTPGS DS    CL6
HEAD2    DS    0CL133                  2ND HEADER
         DC    CL09' Volume= '
HEAD2VOL DS    CL6                     VOLUME INTO HEADER
         DC    CL07',date= '
HEAD2DTE DS    CL10                    DATE INTO HEADER           @2000
         DC    CL07',time= '
HEAD2TME DS    CL08                    TIME INTO HEADER
         DC    CL09',userid= '
HEAD2UID DS    CL7
         DC    CL70' '
HEAD3    DS    0CL133                  RPF USER DATA LINE
         DC    CL12' Saved with '
HEAD3EDT DC    CL3'RPF'                DEFAULT RPF
         DC    CL12' by userid= '
HEAD3UID DS    CL7
         DC    CL10' on date= '
HEAD3DTE DS    CL10                                               @2000
         DC    CL08' ,time= '
HEAD3TME DS    CL8
         DC    CL21',number of records = '
HEAD3REC DS    CL5
         DC    C' '
HEAD3VTX DC    CL8',LEVEL= '
HEAD3VER DS    CL2                     VERSION
HEAD3COL DS    CL1                     COLON OR BLANK
HEAD3MOD DS    CL2                     MOD. LEVEL
         DC    CL23' '
SCALE    DC    CL133'0----+----1----+----2----+----3----+----4----+----C
               5----+----6----+----7----+----8  *START COLUMN*'
*
         TITLE 'A L L O C A T I O N     CONTROL BLOCKS'
         SPACE 2
         DS    0F
         SYALLOC MF=L
*
SYSCLS   DC    C'C'                    DEFAULT SYSOUT CLASS
*
         TITLE 'LITERALS'
         LTORG
         TITLE 'HELP MESSAGES'
RPFMSG   CSECT
SCRHTXT  DC    X'27F5C21140401DF8' WRITE ERASE / R01,C01
         DC    CL79'RPF BROWSE UTILITY, SUBCOMMANDS: ------------------X
               ----------------------------'
         DC    X'1DF0'
         DC    X'11C150',X'1DF8',C'NULL =>',X'1DC113'
         DC    C' ',X'1DF011C3F0'
         DC    CL80'   1  BOTTOM    : Scroll to bottom of dataset'
         DC    CL80'   2  C xxx     : Shift to column xxx'
         DC    CL80'   3  END/RETURN: Terminate BROWSE'
         DC    CL80'   4  F ''STR''   : Search for specified string'
         DC    CL80'   5  HELP      : Display this screen'
         DC    CL80'   6  L xxxx    : Locate at previous assigned labelX
               '
         DC    CL80'   7  LABEL xxxx: Assign label XXXX to current pageX
               '
         DC    CL80'   8  PFK       : Alter PFK definitions'
         DC    CL80'   9  PRINT x   : Print dataset to SYSOUT class X'
         DC    CL80'  10  SCB/SCF   : Scroll 1 page backward/foreward'
         DC    CL80'  11  SCL/SCR   : Scroll left/Scroll right'
         DC    CL80'  12  SUB(MIT)  : Submit the dataset to JES2'
         DC    CL80'  13  TOP       : Scroll to top of dataset'
         DC    CL80'  14  =n/=n.n   : Exit BROWSE and execute function X
               n or n.n'
         DC    CL80' '
         DC    CL80'  NOTE: If ''M'' is specified in the command field'
         DC    CL80'        and the ''SCF'' or ''SCB'' command is givenX
               '
         DC    CL80'        by means of a pfk, the ''BOTTOM'' or ''TOP'X
               ''
         DC    CL80'        subcommand will be executed.'
         DC    X'115CF0'        R24,C01
         DC    CL5'  Hit',X'1DF8',CL5'ENTER',X'1DF0',C'to proceed.'
SCRHLEN  EQU   *-SCRHTXT
         TITLE 'RPFCOMM DSECT'
COMMAREA RPFCOMM
         PRINT NOGEN
         IHASDWA
         DCBD  DSORG=PS,DEVD=DA
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         END
