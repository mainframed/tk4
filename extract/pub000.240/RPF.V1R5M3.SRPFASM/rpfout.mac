         PUNCH ' SETCODE AC(1)'
         TITLE 'OUTPUT PROCESSOR RPF'
RPFOUT   CSECT
*---------------------------------------------------------------------*
*                                                                     *
*        MODULE:        RPFOUT                                        *
*                                                                     *
*        FUNCTION:      PRESENT A MENU FOR ALLOCATION AN OUTPUT       *
*                       DATA SET AND PROCESS IT.                      *
*                       THE IEFSSREQ FUNCTION WIL BE USED FOR IT.     *
*                                                                     *
*        SUBROUTINE:   RPFBRO - BROWSE THE OUTPUT LISTING             *
*                                                                     *
*        MODIFICATIONS:                                               *
*        JULY 10,2002 RPR: SUPPORT PF3/PF15                           *
*        OCT 20,2002 RPR: INCREASE STATUS AREA FROM 8 TO 16 JOBS      *
*        DEC 07,2002 RPR: INCREASE STATUS AREA FROM 16 TO 22 JOBS     *
*        DEC 14,2002 RPR: Status area increased to 100 jobs        @rp1
*                         But max. 22 jobs displayed               @rp1
*        DEC 16,2002 RPR: Jobs displayed in reverse order          @rp2
*        FEB 08,2005 RPR: Limit max. records to display            @rp3
*                                                                     *
*--------------------------------------(C)-2002 SKYBIRD SYSTEMS-------*
         SPACE 2
         USING *,R15
         SAVE  (14,12),,*
         LA    R14,SAVE                GET NEW SAVE ADDRESS
         ST    R13,4(R14)              BACKWARD POINTER
         ST    R14,8(R13)              FORWARD POINTER
         LR    R13,R14                 NEW SAVE ADDRESS
         B     START                   GO TO START PROGRAM
SAVE     DC    18F'-1'                 NEW SAVE AREA
         DC    CL8'&SYSDATE',C' ',CL8'&SYSTIME'
         DS    0H
START    EQU   *
         DROP  R15
         L     R11,0(R1)               GET PARM ADDRESS
         USING COMMAREA,R11            SET DSECT ADDRESSABILITY
         USING SAVE,R13,R12            SET PROGRAM ADDRESSABILITY
         USING SSOB,R2                 SET SSOB ADDRESSABILITY
         USING SSIB,R3                 SET SSIB ADDRESSABILITY
         USING INFMJFCB,R4             SET JFCB ADDRESSABILITY
         USING IHADCB,R5               SET INPUT DCB ADRESSABILITY
         LA    R12,2096(R13)           INIT SECOND
         LA    R12,2000(R12)                       BASE REGISTER
         XC    RTNCODE,RTNCODE         INIT RTNCODE FIELD
         MVC   SCR1UID+29(7),USERID    USERID INTO SCREEN
         MVC   SCR1JOBN(7),USERID      First 7 pos. of jobname
         MVC   SCR1CLS(1),DEFOUT       DEFAULT OUTPUT CLASS
         LA    R10,SCR1UID+8           REPLACE TRAILING BLANKS
         LA    R9,7                    MAX 7 TIMES
UID1     CLI   0(R10),C' '             TRAILING BLANK FOUND ?
         BNE   UID99                   NO: EXIT
         MVI   0(R10),C'-'             REPLACE BY HYPHEN
         BCTR  R10,R0                  PREVIOUS POS.
         BCT   R9,UID1                 LOOP UNTIL ALL DONE
UID99    EQU   *
         XC    REQFLG,REQFLG           SETOFF REQUEUE FLAG
         TPUT  SCR1TXT,SCR1LEN,FULLSCR OUTPUT UTILITY MENU
         MVI   MSG1,X'60'              CLEAR MESSAGE
         MVC   MSG1+1(L'MSG1-1),MSG1                 AREA
         MVI   SCR1STA,X'40'           CLEAR STATUS AREA
         MVC   SCR1STA+1(L'SCR1STA-1),SCR1STA
         MVI   SCR1JOB0,X'40'
         MVC   SCR1JOB0+1(L'SCR1JOB0-1),SCR1JOB0
         MVI   SCR1JOB1,X'40'
         MVC   SCR1JOB1+1(L'SCR1JOB1-1),SCR1JOB1
         MVI   SCR1JOB2,X'40'
         MVC   SCR1JOB2+1(L'SCR1JOB2-1),SCR1JOB2
         MVI   SCR1JOB3,X'40'
         MVC   SCR1JOB3+1(L'SCR1JOB3-1),SCR1JOB3
         MVI   SCR1JOB4,X'40'
         MVC   SCR1JOB4+1(L'SCR1JOB4-1),SCR1JOB4
         MVI   SCR1JOB5,X'40'
         MVC   SCR1JOB5+1(L'SCR1JOB5-1),SCR1JOB5
         MVI   SCR1JOB6,X'40'
         MVC   SCR1JOB6+1(L'SCR1JOB6-1),SCR1JOB6
         MVI   SCR1JOB7,X'40'
         MVC   SCR1JOB7+1(L'SCR1JOB7-1),SCR1JOB7
         MVI   SCR1JOB8,X'40'
         MVC   SCR1JOB8+1(L'SCR1JOB8-1),SCR1JOB8
         MVI   SCR1JOB9,X'40'
         MVC   SCR1JOB9+1(L'SCR1JOB9-1),SCR1JOB9
         MVI   SCR1JOBA,X'40'
         MVC   SCR1JOBA+1(L'SCR1JOBA-1),SCR1JOBA
         MVI   SCR1JOBB,X'40'
         MVC   SCR1JOBB+1(L'SCR1JOBB-1),SCR1JOBB
         MVI   SCR1JOBC,X'40'
         MVC   SCR1JOBC+1(L'SCR1JOBC-1),SCR1JOBC
         MVI   SCR1JOBD,X'40'
         MVC   SCR1JOBD+1(L'SCR1JOBD-1),SCR1JOBD
         MVI   SCR1JOBE,X'40'
         MVC   SCR1JOBE+1(L'SCR1JOBE-1),SCR1JOBE
         MVI   SCR1JOBF,X'40'
         MVC   SCR1JOBF+1(L'SCR1JOBF-1),SCR1JOBF
         MVI   SCR1JOBG,X'40'
         MVC   SCR1JOBG+1(L'SCR1JOBG-1),SCR1JOBG
         MVI   SCR1JOBH,X'40'
         MVC   SCR1JOBH+1(L'SCR1JOBH-1),SCR1JOBH
         MVI   SCR1JOBI,X'40'
         MVC   SCR1JOBI+1(L'SCR1JOBI-1),SCR1JOBI
         MVI   SCR1JOBJ,X'40'
         MVC   SCR1JOBJ+1(L'SCR1JOBJ-1),SCR1JOBJ
         MVI   SCR1JOBK,X'40'
         MVC   SCR1JOBK+1(L'SCR1JOBK-1),SCR1JOBK
         MVI   SCR1JOBL,X'40'
         MVC   SCR1JOBL+1(L'SCR1JOBL-1),SCR1JOBL
         TGET  BUFFER,L'BUFFER,ASIS
*
*        CHECK THE OPERATION DESIRED
*
SCAN01   EQU   *
         CLI   BUFFER,X'F3'            PF3 PRESSSED ?
         BE    RETURN                  RETURN IF YES
         CLI   BUFFER,X'C3'            PF15 PRESSED ?
         BE    RETURN                  RETURN IF YES
         OI    BUFFER+6,C' '           TRANSLATE TO UPPERCASE
         CLI   BUFFER+6,C'0'           STATUS INFO ?
         BE    STATUS                  STATUS INFO ROUTINE
         CLI   BUFFER+6,C'1'           DELETE OUTPUT ?
         BE    DELETE                  DELETE OUTPUT ROUTINE
         CLI   BUFFER+6,C'2'           PRINT OUTPUT ?
         BE    PRINT                   PRINT OUTPUT ROUTINE
         CLI   BUFFER+6,C'3'           REQUEUE ?
         BE    REQUEUE                 REQUEUE OUTPUT ROUTINE
         CLI   BUFFER+6,C'4'           DISPLAY OUTPUT ?
         BE    DISPLAY                 DISPLAY OUTPUT ROUTINE
         CLI   BUFFER+6,C'X'           RETURN UTILITY MENU ?
         BE    RETURN                  RETURN
SCAN02   EQU   *
         MVC   MSG1(L'ERR1TXT),ERR1TXT SET ERROR MESSAGE
         B     UID99                   AND ASK AGAIN
         TITLE 'DISPLAY OUTPUT ROUTINE'
*--------------------------------------------------------------------**
*                                                                     *
*        ROUTINE :      DISPLAY OUTPUT                                *
*                                                                     *
*        FUNCTION:      - GET JOBNAME/JOBID/OUTPUTCLASS FROM BUFFER   *
*                       - MAKE PSO SUBSYSTEM REQUEST                  *
*                       - ALLOC SYSOUT DATA SET                       *
*                       - ALLOCATE PRINT DATASET AND WRITE THE        *
*                         OBTAINED DATASETS FROM IEFSSREQ TO THIS FILE*
*                       - INVOKE THE BROWSE PROCESSOR RPFBRO          *
*                                                                     *
*-------------------------------------- (C)-2002 SKYBIRD SYSTEMS -----*
         SPACE 2
DISPLAY  EQU   *
         BAL   R14,BUFFIN              GET REST OF INPUT BUFFER
         MVI   FIRST,0                 CLEAR FIRST DS FLAG
         XC    MAX,MAX                 clear # records to count    @rp3
         LA    R1,SSOBADR              GET START ADDRESS SSOB
         LA    R2,4(R1)                BYPASS SSOB ADDRESS FIELD
         ST    R2,0(R1)                SAVE SSOB ADDRESS
         OI    0(R1),X'80'             INDICATE LAST ADDRESS
         LA    R9,SSOBGN               ADDRESS EXTENSION SPACE
         LA    R3,SSIBHEAD             START SSIB SPACE
         XC    SSOBEGIN(SSOBHSIZ),SSOBEGIN CLEAR SSOB HEADER
         MVC   SSOBID,=CL4'SSOB'       INDICATE CONTROL BLOCK NAME
         MVC   SSOBLEN,=AL2(SSOBHSIZ)  SET SSOB HEADER SIZE
         ST    R3,SSOBSSIB             SET ADDRESS OF SSIB
         MVC   SSOBFUNC,=AL2(SSOBSOUT) INDICATE PSO
         ST    R9,SSOBINDV             SET ADDRESS OF EXTENSION
         XC    0(SSSOSIZE,R9),0(R9)    CLEAR EXTENSION
         MVC   SSSOLEN,=AL2(SSSOSIZE)  EXTENSION SIZE
         OI    SSSOFLG1,SSSOHLD        REQUEST IS FOR HELD DATA SETS
         OI    SSSOFLG1,SSSOSJBN       REQUEST IS FOR D/S NAMED BY
*                                      JOBNAME SPECIFIED IN SSSOBJBN
         OI    SSSOFLG1,SSSOSCLS       REQUEST IS MADE FOR JOBCLASS
         MVC   SSSOJOBN(L'JOBNAME),JOBNAME SET JOBNAME
         MVC   SSSOJOBI,BLANKS         SET JOBID BLANKS
         CLI   JOBID,X'40'             JOB-ID PRESENT  ?
         BE    DIS010                  NO DO NOT FILL IN
         MVC   SSSOJOBI,JOBID          ADD JOBID IN SSOB
         OI    SSSOFLG1,SSSOSJBI       INDICATE JOBID SELECTION
DIS010   EQU   *
         MVC   SSSOCLSL(L'CLASS),CLASS SET OUTPUT CLASS
         MVC   SSSOCLAS(L'CLASS),CLASS SET OUTPUT CLASS
         MVC   SSSOPGMN,=CL8' '        INDICATE NO USER WRITER
         XC    0(SSIBSIZE,R3),0(R3)    CLEAR SSIB
         MVC   SSIBID,=CL4'SSIB'       INDICATE CONTROL BLOCK NAME
         MVC   SSIBLEN,=AL2(SSIBSIZE)  SET SSIB SIZE
         MVC   SSIBSSNM,=CL4'JES2'     INDICATE SUBSYSTEM
DIS015   EQU   *
         MODESET MODE=SUP              AWAY INTO SUPERVISOR STATE
         LA    R1,SSOBADR              ADDRESS OF PARMLIST
         IEFSSREQ                      INVOKE SUBSYSTEM
         LR    R9,R15                  SAVE RETURN CODE
         MODESET MODE=PROB             BACK INTO PROBLEM STATE
         BAL   R14,SREQRTC             TEST RETURN CODE IEFSSREQ
         L     R15,SSOBRETN            GET REQUEST RESULT
         B     DITABLE(R15)            AND CHECK IT INTO BRTABLE
DITABLE  EQU   *
         B     DIS080                  RC = 00 EVERYTHING OKE
         B     DIS110                  RC = 04 NO MORE DATA SETS
         B     DIS020                  RC = 08 JOB NOT FOUND
         B     DIS030                  RC = 0C INVALID SEARCH ARGUMENTS
         B     DIS040                  RC = 10 UNABLE TO PROCESS NOW
         B     DIS050                  RC = 14 DUPLICATE JOBNAMES
         B     DIS060                  RC = 18 INVALID JOBN/JOBI
         B     DIS070                  RC = 1C INVALID DESTINATION
DIS020   EQU   *
         MVC   MSG1(L'ERR2TXT),ERR2TXT Jobname not found
         B     UID99                   AND REWRITE SCREEN
DIS030   EQU   *
         MVC   MSG1(L'ERR3TXT),ERR3TXT INVALID SYNTAX
         B     UID99                   REWRITE SCREEN
DIS040   EQU   *
         MVC   MSG1(L'ERR4TXT),ERR4TXT Unable to process now msg
         B     UID99                   AND REWRITE SCREEN
DIS050   EQU   *
         MVC   MSG1(L'ERR5TXT),ERR5TXT DUPLICATE JOBNAME
         B     UID99                   REWRITE SCREEN
DIS060   EQU   *
         MVC   MSG1(L'ERR6TXT),ERR6TXT Jobname/Jobid invalid
         B     UID99                   EN REWRITE SCREEN
DIS070   EQU   *
         MVC   MSG1(L'ERR7TXT),ERR7TXT Invalid destination
         B     UID99                   REWRITE SCREEN
*
*        DYNAMIC   ALLOCATION OF THE SYSOUT FILE
*
DIS080   EQU   *
         MVC   DSN(L'SSSODSN),SSSODSN  SET DSNAME FOR ALLOCATION
         LA    R1,SVC99                REQUEST BLOCK
         DYNALLOC                      ALLOC SYSOUT DATA SET
         LTR   R15,R15                 CHECK COMPLETION
         BZ    DIS085                  ALLOC OKE
DIS083   EQU   *
         MVC   MSG1(L'ERRATXT),ERRATXT SET ERROR MESSAGE
         B     UID99                   EN PRINT UTILITY MENU
DIS085   EQU   *
         L     R15,REQBLK+4            LOAD ERROR + INFO CODE
         LTR   R15,R15                 TEST INFO CODE
         BNZ   DIS083                  IF NOT ZERO, WRITE ERROR MSG
         XC    JFCB,JFCB               CLEAR JFCB
         LA    R5,RPFPRINT             GET SYSOUT DCB ADDRESS
         LA    R4,JFCB                 GET JFCB ADDRESS
         RDJFCB RPFPRINT               READ JOB FILE CONTROL BLOCK
         MVC   JFCBDSNM(L'SSSODSN),SSSODSN FILL DATASET NAME
         MVC   DCBDDNAM(L'DDN),DDN     MOVE DDNAME INTO DCB
         LA    R15,133                 GET MAX RECORD LENGTH
         STH   R15,JFCBLKSI
         STH   R15,JFCLRECL
         OPEN  (RPFPRINT,INPUT),TYPE=J
         CLI   FIRST,0                 Is this the 1st dataset?    @rp3
         BNE   DIS095                  No: read next dataset       @rp3
         SYALLOC FREE=RPFPRINT,MF=E    Else allocate output ds...  @rp3
         SYALLOC DDN=RPFPRINT,PRI=30,SEC=6,SPTYP=CYL,                  X
               DISP1=NEW,RECFM=FBA,UNIT=SYSALLDA,MF=E
         LTR   R15,R15                 Allocation ok?              @rp3
         BZ    DIS090                  BRANCH
         MVC   MSG1(L'ERR8TXT),ERR8TXT MOVE ERROR MSG
         CLOSE RPFPRINT
         B     UID99
DIS090   EQU   *
         OPEN  (OUTFILE,(OUTPUT))      OPEN OUTPUT DATASET
         MVI   FIRST,X'FF'             SET FLAG
DIS095   DS    0H                                                  @rp3
         L     R3,MAX                  Set max of records          @rp3
DIS100   EQU   *
         GET   RPFPRINT,OUTLINE        GET RECORD
         PUT   OUTFILE,OUTLINE         AND WRITE
         LA    R3,1(R3)                Count record                @rp3
         C     R3,FMAX                 Max. records reached        @rp3
         BL    DIS100                  No: Read next record        @rp3
         CLOSE RPFPRINT                Close input DCB             @rp3
         FREEPOOL RPFPRINT             Get rid of the buffers      @rp3
DIS110   EQU   *
         CLI   FIRST,X'00'             WAS THERE ANY DATA ?
         BE    DIS150                  NO SET ERROR MESSAGE
         B     DIS170                  IF NOT: LINK TO RPFBRO
DIS130   DS    0H                      EODAD RPFPRINT              @rp3
         ST    R3,MAX                  Save reg.3                  @rp3
         CLOSE RPFPRINT                EOF RPFPRINT DCB
         FREEPOOL RPFPRINT             FREE THE BUFFERS
*        SYALLOC FREADDR=DDN,MF=E      FREE THE SUBSYSTEM DATASET
         B     DIS015                  Get next dataset from spool @rp3
DIS150   DS    0H
         MVC   MSG1(L'ERRKTXT),ERRKTXT SET ERROR MESSAGE
         B     UID99                   AND TPUT IT
DIS170   DS    0H
         CLOSE OUTFILE
         FREEPOOL OUTFILE
         MVC   CMDAREA,BLANKS          BLANK PARAMETER CMDAREA
         MVC   CMDAREA(8),=CL8'RPFPRINT'
         LINK  EP=RPFBRO,PARAM=((11)),VL=1   LINK TO BROWSE
         SYALLOC FREE=RPFPRINT,MF=E
         TM    INFCODE2,$RETURN      =n or =n.n cmd entered in BRO @rp1
         BO    RETURN                  Yes: end of routine         @rp1
         B     UID99                   BRANCH BACK
         TITLE 'RETURN ROUTINE'
RETURN   EQU   *
         L     R13,4(R13)              OLD SAVE AREA
         RETURN (14,12)
         TITLE 'DISPLAY STATUS ROUTINE'
*---------------------------------------------------------------------*
*                                                                     *
*        ROUTINE :      DISPLAY STATUS                                *
*                                                                     *
*        FUNCTION:      - GET JOBNAME/JOBID/OUTPUTCLASS FROM BUFFER   *
*                       - MAKE STATUS SUBSYSTEM REQUEST               *
*                       - SET STATUS ONTO SCREEN                      *
*                       - DISPLAY SCREEN.                             *
*                         (MAX SIZE = 22 JOBNAMES)                    *
*                                                                     *
*------------------------------------------ (C) 2002 SKYBIRD SYSTEMS -*
         SPACE 2
STATUS   EQU   *
         BAL   R14,BUFFIN              GET REST OF SCREEN
         LA    R1,SSOBADR              GET START ADDRESS SSOB
         LA    R2,4(R1)                BYPASS SSOB ADDRESS FIELD
         ST    R2,0(R1)                SAVE SSOB ADDRESS
         OI    0(R1),X'80'             INDICATE LAST ADDRESS
         LA    R9,SSOBGN               ADDRESS EXTENSION SPACE
         LA    R3,SSIBHEAD             START SSIB SPACE
         XC    SSOBEGIN(SSOBHSIZ),SSOBEGIN CLEAR SSOB HEADER
         MVC   SSOBID,=CL4'SSOB'       INDICATE CONTROL BLOCK NAME
         MVC   SSOBLEN,=AL2(SSOBHSIZ)  SET SSOB HEADER SIZE
         ST    R3,SSOBSSIB             SET ADDRESS OF SSIB
         MVC   SSOBFUNC,=AL2(SSOBSTAT) INDICATE STATUS INFO
         ST    R9,SSOBINDV             SET ADDRESS OF EXTENSION
         XC    0(SSCSIZE,R9),0(R9)     CLEAR EXTENSION
         MVC   SSCSLEN,=AL2(SSCSIZE)   EXTENSION SIZE
CANCEL   EQU   *                       ENTRY POINT FOR DELETE
         OI    SSCSFLGS,SSCSUSID       USERID IS IN JOBNAME FIELD
         MVC   SSCSJOBN,BLANKS         INITIAL BLANKS IN JOBNAME FIELD
         LA    R9,JOBNAME              ADDRESS JOBNAME IN BUFFER
         LA    R8,0                    LENGTH INITIAL 0
STA000   EQU   *
         CLI   0(R9),C' '              END OF JOBNAME FOUND ?
         BE    STA005                  YES
         LA    R9,1(R9)                NEXT POSITION
         LA    R8,1(R8)                LENGTH +/+ 1
         CH    R8,=H'8'                MAX LENGTH ?
         BL    STA000                  NO, TEST AGAIN
STA005   EQU   *
         BCTR  R8,R0                   LENGTH USERID -/- 1
         STC   R8,SSCSULEN             STORE USER ID LENGTH
         CLC   SSOBFUNC,=AL2(SSOBCANC) IS IT CANCEL REQUEST ?
         BE    STA006                  YES SET FULL JOBNAME
         BCTR  R8,R0                   LENGTH -/- 1 FOR MOVE
         EX    R8,STAMOVE              MOVE JOBID
         B     STA007                  GO TO INDICATE JOBID
STAMOVE  MVC   SSCSJOBN(0),JOBNAME     SET JOBNAME EXECUTE ONLY !!!!!!
STA006   EQU   *
         MVC   SSCSJOBN(L'SSCSJOBN),JOBNAME  SET JOBNAME
STA007   EQU   *
         MVC   SSCSJOBI,JOBID          INDICATE JOBID
         CLI   SSCSJOBI,C' '           Jobid filled in?            @rp2
         BE    *+10                    No: skip                    @rp2
         MVC   SSCSJOBN(L'SSCSJOBN),JOBNAME  Else set complete job @rp2
*+10                                                               @rp2
         MVC   SSCSDIMP,=H'1600'       Area length (16*100)        @rp1
         XC    0(SSIBSIZE,R3),0(R3)    CLEAR SSIB
         MVC   SSIBID,=CL4'SSIB'       INDICATE CONTROL BLOCK NAME
         MVC   SSIBLEN,=AL2(SSIBSIZE)  SET SSIB SIZE
         MVC   SSIBSSNM,=CL4'JES2'     INDICATE SUBSYSTEM
         MODESET MODE=SUP              AWAY INTO SUPERVISOR STATE
         LA    R1,SSOBADR              ADDRESS OF PARMLIST
         IEFSSREQ                      INVOKE SUBSYSTEM
         LR    R9,R15                  SAVE RETURN CODE
         MODESET MODE=PROB             BACK INTO PROBLEM STATE
         BAL   R14,SREQRTC             TEST RETURN CODE IEFSSREQ
         L     R15,SSOBRETN            GET REQUEST RESULT
         B     STTABLE(R15)            AND CHECK IT INTO BRTABLE
STTABLE  EQU   *
         B     STA030                 RC = 00 EVERYTHING OKE
         B     DIS020                 RC = 04 JOBNAME NOT FOUND
         B     DIS060                 RC = 08 INVALID JOBN/JOBID
         B     DIS050                 RC = 0C DUPL JOBN WITHOUT JOBID
         B     STA010                 RC = 10 STATUS AREA TOO SMALL
         B     STA020                 RC = 14 JOB ON OUTPUTQ NOT CANC
         B     DIS030                 RC = 18 INVALID SYNTAX
         B     STA020                 RC = 1C INVALID CANCEL REQUEST
STA010   EQU   *
         MVC   MSG1(L'ERRCTXT),ERRCTXT STATUS AREA TOO SMALL
         B     UID99                   AND REWRITE SCREEN
STA020   EQU   *
         MVC   MSG1(L'ERRDTXT),ERRDTXT Unexpected return code
         B     UID99                   AND REWRITE SCREEN
STA030   EQU   *
         CLC   SSOBFUNC,=AL2(SSOBCANC) CANCEL REQUEST ?
         BE    DEL010                  YES DELETE ROUTINE
         LH    R9,SSCSDIMR             LENGTH STATUS AREA
         LA    R10,23                  Max. 22 jobs on screen      @rp1
         XR    R8,R8                   CLEAR REGISTER
         MVC   WORK,BLANKS             INITIAL BLANKS
         MVC   WORK(7),SSCSJOBN        GET USERID
         IC    R1,SSCSULEN             GET USER ID LENGTH
         LA    R1,WORK(R1)             GET WORK ADDRESS INDEXED BY R1
         LA    R2,0(R2,R9)             Point to last ...           @rp2
         SL    R2,=A(L'SSCSARAY)             valid entry           @rp2
         SRL   R9,4                    Divide by length status ar. @rp2
         LTR   R9,R9                   GIVING # STATUS AREAS
         BNZ   STA060                  IF THERE ARE
STA040   EQU   *
         MVC   MSG1(L'ERRETXT),ERRETXT JOBNAME NOT FOUND
         B     UID99                   AND TPUT IT
STA060   EQU   *
         MVC   0(1,R1),SSCSUJOB        LAST CHARACTER JOBNAME
         CLC   WORK(L'JOBNAME),JOBNAME JOBNAMES EQUAL ?
         BE    STA070                  PROCESS IF SO
         SL    R2,=A(L'SSCSARAY)       Previous STATUS ENTRY       @rp2
         BCT   R9,STA060               AND PROCESS IT IF POSSIBLE
         LTR   R8,R8                   SOMETHING FOUND TO DISPLAY ?
         BZ    STA040                  NO, DISPLAY ERROR MESSAGE
         B     UID99                   ELSE DISPLAY SCREEN
STA070   EQU   *
         LTR   R8,R8                   FIRST TIME SOMETHING FOUND ?
         BNZ   STA080                  NO, BYPASS INIT SETTING
         LA    R7,SCR1JOB0             START ADDRESS STATUS DISPLAY
         MVC   SCR1STA,=CL12'Job status :'
STA080   EQU   *
         BCT   R10,STA085              Is there room to display?   @rp1
         MVC   MSG1(L'ERRLTXT),ERRLTXT Status truncated            @rp1
         B     UID99                   Rewrite screen              @rp1
STA085   DS    0H                                                  @rp1
         MVC   0(8,R7),JOBNAME         SET JOBNAME ONTO SCREEN
         MVI   8(R7),C'/'              SET SEPARATOR
         MVC   9(8,R7),SSCSARID        SET JOBID
         TM    SSCSFLG1,SSCSJACT
         BNO   STA090
         MVC   18(15,R7),=CL15'EXECUTING'
         B     STA120
STA090   EQU   *
         TM    SSCSFLG1,SSCSEXCQ
         BNO   STA100
         MVC   18(15,R7),=CL15'ON INPUT QUEUE'
         B     STA120
STA100   EQU   *
         TM    SSCSFLG1,SSCSHOLD
         BO    STA110
         MVC   18(15,R7),=CL15'ON OUTPUT QUEUE'
         B     STA120
STA110   EQU   *
         MVC   18(15,R7),=CL15'ON HOLD QUEUE'
STA120   EQU   *
         LA    R7,36(R7)               NEXT STATUS ENTRY ON SCREEN
         LA    R8,1(R8)                INDICATE NEXT LINE
         SL    R2,=A(L'SSCSARAY)       Previous status area        @rp2
         BCT   R9,STA060               TEST NEXT ENTRY
         B     UID99                   OR DISPLAY SCREEN
         TITLE 'DELETE OUTPUT ROUTINE'
*---------------------------------------------------------------------*
*                                                                     *
*        ROUTINE :      DELETE OUTPUT                                 *
*                                                                     *
*        FUNCTION:      - GET JOBNAME/JOBID/OUTPUTCLASS FROM BUFFER   *
*                       - MAKE CANCEL SUBSYSTEM REQUEST               *
*                       - SET CANCELED ONTO SCREEN                    *
*                       - DISPLAY SCREEN.                             *
*                                                                     *
*------------------------------------- (C)-2002 SKYBIRD SYSTEMS ------*
         SPACE 2
DELETE   EQU   *
         BAL   R14,BUFFIN              GET REST OF SCREEN
         LA    R1,SSOBADR              GET START ADDRESS SSOB
         LA    R2,4(R1)                BYPASS SSOB ADDRESS FIELD
         ST    R2,0(R1)                SAVE SSOB ADDRESS
         OI    0(R1),X'80'             INDICATE LAST ADDRESS
         LA    R9,SSOBGN               ADDRESS EXTENSION SPACE
         LA    R3,SSIBHEAD             START SSIB SPACE
         XC    SSOBEGIN(SSOBHSIZ),SSOBEGIN CLEAR SSOB HEADER
         MVC   SSOBID,=CL4'SSOB'       INDICATE CONTROL BLOCK NAME
         MVC   SSOBLEN,=AL2(SSOBHSIZ)  SET SSOB HEADER SIZE
         ST    R3,SSOBSSIB             SET ADDRESS OF SSIB
         MVC   SSOBFUNC,=AL2(SSOBCANC) INDICATE STATUS INFO
         ST    R9,SSOBINDV             SET ADDRESS OF EXTENSION
         XC    0(SSCSIZE,R9),0(R9)     CLEAR EXTENSION
         MVC   SSCSLEN,=AL2(SSCSIZE)   EXTENSION SIZE
         OI    SSCSFLGS,SSCSCOUT       INDICATE CANCEL JOBS OUTPUT
         B     CANCEL                  GO TO CANCEL OUTPUT
DEL010   EQU   *
         MVC   SCR1JOBX,BLANKS         BLANK DELETED JOBID
         MVC   MSG1(L'ERRITXT),ERRITXT SET INFO MESSAGE
         B     UID99
         TITLE 'PRINT OUTPUT ROUTINE'
*---------------------------------------------------------------------*
*                                                                     *
*        ROUTINE :      PRINT OUTPUT                                  *
*                                                                     *
*        FUNCTION:      - GET JOBNAME/JOBID/OUTPUTCLASS FROM BUFFER   *
*                       - MAKE PSO SUBSYSTEM REQUEST                  *
*                       - RELEASE SYSOUT DATA SET                     *
*                       - GIVE MESSAGE AND DISPLY SCREEN AGAIN        *
*                                                                     *
*-------------------------------------- (C)-2002 Skybird Systems -----*
         SPACE 2
PRINT    EQU   *
         BAL   R14,BUFFIN              GET REST OF INPUT BUFFER
         LA    R1,SSOBADR              GET START ADDRESS SSOB
         LA    R2,4(R1)                BYPASS SSOB ADDRESS FIELD
         ST    R2,0(R1)                SAVE SSOB ADDRESS
         OI    0(R1),X'80'             INDICATE LAST ADDRESS
         LA    R9,SSOBGN               ADDRESS EXTENSION SPACE
         LA    R3,SSIBHEAD             START SSIB SPACE
         XC    SSOBEGIN(SSOBHSIZ),SSOBEGIN CLEAR SSOB HEADER
         MVC   SSOBID,=CL4'SSOB'       INDICATE CONTROL BLOCK NAME
         MVC   SSOBLEN,=AL2(SSOBHSIZ)  SET SSOB HEADER SIZE
         ST    R3,SSOBSSIB             SET ADDRESS OF SSIB
         MVC   SSOBFUNC,=AL2(SSOBSOUT) INDICATE PSO
         ST    R9,SSOBINDV             SET ADDRESS OF EXTENSION
         XC    0(SSSOSIZE,R9),0(R9)    CLEAR EXTENSION
         MVC   SSSOLEN,=AL2(SSSOSIZE)  EXTENSION SIZE
         OI    SSSOFLG1,SSSOHLD        REQUEST IS FOR HELD DATA SETS
         OI    SSSOFLG1,SSSOSJBN       REQUEST IS FOR D/S NAMED BY
*                                      JOBNAME SPECIFIED IN SSSOBJBN
         TM    REQFLG,X'FF'            REQUEUE REQUESTED ?
         BO    PRT010                  YES, THEN DONOT RELEASE
         OI    SSSOUFLG,SSSORLSE       RELEASE ALL HELD DATA SETS
PRT010   EQU   *
         OI    SSSOUFLG,SSSOSETC       USE SSSOCLAS AS DISPOSITION
         OI    SSSOFLG2,SSSOCTRL       FIRST AND LAST REQUES
         MVC   SSSOJOBN(L'JOBNAME),JOBNAME SET JOBNAME
         CLI   JOBID,X'40'             JOB-ID INGEVULD ?
         BE    PRT020                  NEEN, DAN ENKEL REQUEST
         MVC   SSSOJOBI,JOBID          VUL JOB-ID IN
         OI    SSSOFLG1,SSSOSJBI       INDICATE JOBID SELECTION
PRT020   EQU   *
         MVC   SSSOCLAS(L'CLASS),CLASS SET OUTPUT CLASS
         MVC   SSSOCLSL(L'CLASS),CLASS SET OUTPUT CLASS
         MVC   SSSOPGMN,=CL8' '        INDICATE NO USER WRITER
         XC    0(SSIBSIZE,R3),0(R3)    CLEAR SSIB
         MVC   SSIBID,=CL4'SSIB'       INDICATE CONTROL BLOCK NAME
         MVC   SSIBLEN,=AL2(SSIBSIZE)  SET SSIB SIZE
         MVC   SSIBSSNM,=CL4'JES2'     INDICATE SUBSYSTEM
         MODESET MODE=SUP              AWAY INTO SUPERVISOR STATE
         LA    R1,SSOBADR              ADDRESS OF PARMLIST
         IEFSSREQ                      INVOKE SUBSYSTEM
         LR    R9,R15                  SAVE RETURN CODE
         MODESET MODE=PROB             BACK INTO PROBLEM STATE
         BAL   R14,SREQRTC             TEST RETURN CODE IEFSSREQ
         L     R15,SSOBRETN            GET REQUEST RESULT
         B     PRTABLE(R15)            AND CHECK IT INTO BRTABLE
PRTABLE  EQU   *
         B     PRT030                  RC = 00 EVERYTHING OKE
         B     PRT110                  RC = 04 NO MORE DATA SETS
         B     DIS020                  RC = 08 JOB NOT FOUND
         B     DIS030                  RC = 0C INVALID SEARCH ARGUMENTS
         B     DIS040                  RC = 10 UNABLE TO PROCESS NOW
         B     DIS050                  RC = 14 DUPLICATE JOBNAMES
         B     DIS060                  RC = 18 INVALID JOBN/JOBI
         B     DIS070                  RC = 1C INVALID DESTINATION
PRT030   EQU   *
         TM    REQFLG,X'FF'            REQUEUE REQESTED ?
         BO    PRT040
         MVC   ERRFCLS,CLASS           SET SYSOUT CLASS INTO MESSAGE
         MVC   MSG1(L'ERRFTXT),ERRFTXT SET INFO MESSAGE
         B     UID99                   EN REWRITE SCREEN
PRT040   EQU   *
         XC    REQFLG,REQFLG           REQUEUE FLAG OFF
         MVC   ERRGCLS,CLASS           SET SYSOUT CLASS INTO MESSAGE
         MVC   MSG1(L'ERRGTXT),ERRGTXT SET INFO MESSAGE
         B     UID99                   EN REWRITE SCREEN
PRT110   EQU   *
         CLI   FIRST,X'00'             WAS THERE ANY DATA ?
         BNE   PRT170                  NO SET ERROR MESSAGE
         MVC   MSG1(L'ERRKTXT),ERRKTXT SET ERROR MESSAGE
         B     UID99                   AND TPUT IT
PRT170   DS    0H
         B     UID99                   BRANCH BACK
         TITLE 'REQUEUE ROUTINE'
*---------------------------------------------------------------------*
*                                                                     *
*        ROUTINE :      REQUEUE                                       *
*                                                                     *
*        FUNCTION:      - SET REQUEUE FLAG AND GO TO PRINT ROUTINE    *
*                                                                     *
*-------------------------------------- (C)-2002 Skybird Systems -----*
         SPACE 2
REQUEUE  EQU   *
         OI    REQFLG,X'FF'            SET REQUEUE FLAG
         B     PRINT                   AND GO TO PRINT ROUTINE
         TITLE 'TEST RETURN CODE IEFSSREQ'
*---------------------------------------------------------------------*
*                                                                     *
*        ROUTINE :      SREQRTC                                       *
*                                                                     *
*        FUNCTION:      - TEST RETURN CODE AND SET ERROR MESSAGE      *
*                                                                     *
*-------------------------------------- (C)-2002 Skybird Systems -----*
         SPACE 2
SREQRTC  EQU   *
         B     SREQTBLE(R9)            GO INTO BRANCH TABLE
SREQTBLE EQU   *
         B     0(R14)                  RC = 00
         B     SRQ010                  RC = 04
         B     SRQ010                  RC = 08
         B     SRQ010                  RC = 0C
         B     SRQ010                  RC = 10
         B     SRQ010                  RC = 14
SRQ010   EQU   *
         MVC   MSG1(L'ERRHTXT),ERRHTXT SET ERROR MESSAGE
         B     UID99                   AND TPUT IT
         TITLE 'GET BUFFER ROUTINE'
*---------------------------------------------------------------------*
*                                                                     *
*        ROUTINE :      BUFFIN                                        *
*                                                                     *
*        FUNCTION:      - GET JOBNAME/JOBID/OUTPUTCLASS FROM BUFFER   *
*                         R1 CONTAINS THE BUFFER LENGTH               *
*                                                                     *
*-------------------------------------- (C)-2002 Skybird Systems -----*
         SPACE 2
BUFFIN   EQU   *
         ST    R14,BUFFR14             SAVE LINK REGISTER
         LA    R9,BUFFER               BUFFER ADRES
         LR    R8,R1                   BUFFER LENGTH
         MVC   JOBNAME,BLANKS          CLEAR JOBNAME
         MVC   JOBID,BLANKS            CLEAR JOB IDENTIFIER
         MVI   CLASS,C' '              CLEAR OUTPUT CLASS
         OC    BUFFER,BLANKS           UPPER CASE = YES
BUFF010  EQU   *
         CLC   0(12,R9),=C'JOBNAME ===>' JOBNAME FOUND ?
         BE    BUFF020                 IF SO SAVE IT
         LA    R9,1(R9)                NEXT BUFFER POSITION
         BCT   R8,BUFF010              AND CHECK EOB
         B     SCAN02                  EOB, DAN CLEAR KEY PRESSED
BUFF020  EQU   *
         LA    R9,14(R9)               POINT AFTER 'JOBNAME..' AND SBA
         S     R8,=F'14'               DECREASE LENGTH
         MVC   JOBNAME,BLANKS
         LA    R7,JOBNAME              POINT TO JOBNAME
BUFF030  EQU   *
         CLC   0(12,R9),=C'JOBID   ===>' JOB IDENTIFIER FOUND ?
         BE    BUFF040                 IF SO SAVE IT
         MVC   0(1,R7),1(R9)           MOVE 1 BYTE OF JOBNAME
         LA    R9,1(R9)                NEXT BUFFER POSITION
         LA    R7,1(R7)                NEXT BYTE JOBNAME
         BCT   R8,BUFF030              AND CHECK EOB
         B     SCAN02                  EOB, DAN CLEAR KEY PRESSED
BUFF040  EQU   *
         LA    R9,14(R9)               POINT AFTER 'JOBID..' AND SBA
         S     R8,=F'14'               DECREASE LENGTH WITH 3
         OC    JOBNAME,BLANKS          XLATE TO UPPERCASE
         MVC   SCR1JOBN,JOBNAME        SET JOBNAME IN SCREEN
         MVC   JOBID,BLANKS
         LA    R7,JOBID                POINT TO JOBNUMBER
BUFF050  EQU   *
         CLC   0(12,R9),=C'CLASS   ===>' JOB OUTPUT CLASS FOUND ?
         BE    BUFF060                 IF SO SAVE IT
         MVC   0(1,R7),1(R9)           MOVE 1 BYTE OF JOBID
         LA    R9,1(R9)                NEXT BUFFER POSITION
         LA    R7,1(R7)                NEXT BYTE JOBID
         BCT   R8,BUFF050              AND CHECK EOB
         B     SCAN02                  EOB, CLEAR KEY PRESSED
BUFF060  EQU   *
         OC    JOBID,BLANKS            XLATE TO UPPERCASE
         MVC   SCR1JOBX,JOBID          SET JOB ID IN SCREEN
         MVC   CLASS,15(R9)            SAVE JOB-OUTPUT-CLASS
         OI    CLASS,C' '              XLATE TO UPPER
         MVC   SCR1CLS,CLASS           SET JOB-OUTPUT-CLASS IN SCREEN
         L     R14,BUFFR14             GET RETURN ADDRESS
         BR    R14                     AND RETURN
         TITLE 'INPUT DCB VOOR SYSOUT DATA SETS'
RPFPRINT DCB   DSORG=PS,MACRF=GM,EODAD=DIS130,EXLST=EXLST,BUFNO=2
OUTFILE  DCB   DSORG=PS,MACRF=PM,DDNAME=RPFPRINT,LRECL=133,            X
               BLKSIZE=3990,RECFM=FBA
OUTLINE  DS    CL133                   TO CONTAIN RECORD
         SYALLOC MF=L
         TITLE 'WORKAREAS, BUFFERS AND CONSTANTS'
BUFFER   DC    CL180' '                INPUT BUFFER
DOUBLE   DC    D'0'                    WORKAREA
MAX      DC    F'0'                    Current max. records displ. @rp3
FMAX     DC    F'60000'                Current max. records displ. @rp3
BUFFR14  DC    F'0'                    SAVE REG14 BUFFIN RTN
WORK     DC    CL8' '
JOBNAME  DC    CL8' '
JOBID    DC    CL8' '
CLASS    DC    C' '
REQFLG   DC    X'00'
FIRST    DC    X'00'
AIDBYTE  DC    C' '
         DS    0F
SSOBADR  DC    F'0'                    SSOB PARM ADDRESS
SSOBHEAD DS    CL20                    SSOB HEADER
SOEXT    DS    CL1592                  PSO EXTENSION               @rp1
         ORG   *-1592                                              @rp1
CSEXT    DS    CL1624                  STATUS/CANCEL EXTENSION     @rp1
SSIBHEAD DS    CL36                    SSIB
         TITLE 'PARAMETER LIST FOR SUBSYSTEM DATASET ALLOCATION'
         DS    0F
SVC99    EQU   *
         DC    X'80'                   LAST PARM POINTER
         DC    AL3(REQBLK)             REQUEST BLOCK POINTER
*
*        REQUEST BLOCK
*
         SPACE 3
         DS    0F                      FW BOUNDARY
REQBLK   EQU   *
         DC    X'14'                   LENGTH REQUEST BLOCK (FIXED)
         DC    X'01'                   DSNAME ALLOCATION
         DC    XL2'0000'               FLAGS
         DC    F'0'                    ERROR EN INFO CODE
         DC    A(TXTPOINT)             TEXT POINTER ADDRESS LIST
         DC    F'0'                    RESERVED
         DC    F'0'                    FLAGS
*
*        TEXT POINTER LIST
*
         SPACE 3
         DS    0F
TXTPOINT EQU   *
         DC    A(DALDSNM2)
         DC    A(DALSSREQ)
LASTTXT  EQU   *                       LAST PARM IN PARMLIST
         DC    A(DALDDNM2+X'80000000') LAST PARM ADRES POINTER
*
*        TEXT
*
         SPACE 3
DALDSNM2 DC    X'00020001002C'
DSN      DC    CL44' '
*
DALSSREQ DC    X'005C00010004'
         DC    CL4'JES2'
*
DALDDNM2 DC    X'005500010008'
DDN      DC    CL8' '
*
EXLST    DS    0F
         DC    X'87',AL3(JFCB)
JFCB     DS    CL176
         TITLE 'ERROR MESSAGES'
ERR1TXT  DC    CL22'--------Invalid option'
ERR2TXT  DC    CL22'-----Jobname not found'
ERR3TXT  DC    CL22'--------Invalid syntax'
ERR4TXT  DC    CL40'-Unable to process now'
ERR5TXT  DC    CL22'-Dupl. jobname give id'
ERR6TXT  DC    CL22'-Jobname/jobid invalid'
ERR7TXT  DC    CL22'---Invalid destination'
ERR8TXT  DC    CL22'Allocation err. sysout'
ERRATXT  DC    CL22'Alloc subsys ds failed'
ERRCTXT  DC    CL22'-Status area too small'
ERRDTXT  DC    CL22'-Unexpected returncode'
ERRETXT  DC    CL22'-----Jobname not found'
ERRFTXT  DC    CL22'-List made in sysout=N'
         ORG   *-1
ERRFCLS  DC    C' '
ERRGTXT  DC    CL22'-Output requeued cls=N' '
         ORG   *-1
ERRGCLS  DC    C' '
ERRHTXT  DC    CL22'-----Error in IEFSSREQ'
ERRITXT  DC    CL22'--------Output deleted'
ERRKTXT  DC    CL22'--------No held output'
ERRLTXT  DC    CL22'Last 22 jobs displayed'                        @rp1
         EJECT
         LTORG
         TITLE 'SCREEN FORMATS.'
SCR1TXT  DC    X'27F5C21140401DF8' WRITE ERASE / R01,C00
SCR1UID  DC    CL78'RPF Output processor, userid=******* --------------C
               ---------------------------'
         DC    X'1140F9'               R01,C59
MSG1     DC    CL22'----------------------'
         DC    X'11C1501DF8',C'Option =>',X'1DC913F01DF0'
         DC    X'11C3F3',AL3(WHITE),C'0  ',AL3(GREEN)
         DC    C'List job status'
         DC    X'11C5C3',AL3(WHITE),C'1  ',AL3(GREEN)
         DC    C'Delete output'
         DC    X'11C6D3',AL3(WHITE),C'2  ',AL3(GREEN)
         DC    C'Print output in class ?'
         DC    X'11C7E3',AL3(WHITE),C'3  ',AL3(GREEN)
         DC    C'Re-queue output'
         DC    X'11C8F3',AL3(WHITE),C'4  ',AL3(GREEN)
         DC    C'Browse/View output'
         DC    X'114AC3',AL3(WHITE),C'X  ',AL3(GREEN)
         DC    C'Return (or press PF3/PF15)'
         DC    X'114CE21DF5',AL3(TURQ) R11,C03
         DC    C'Jobname ===>',X'1DC9',AL3(RED)
SCR1JOBN DC    CL8' ',X'1DF0'
         DC    X'114C7E1DF5',AL3(TURQ) R11,C31
         DC    C'Jobid   ===>',X'1DC9',AL3(RED)
SCR1JOBX DC    CL8' ',X'1DF0'
         DC    X'114DD51DF5',AL3(TURQ) R11,C54
         DC    C'Class   ===>',X'1DC9',AL3(RED)
SCR1CLS  DC    CL1' ',X'1DF0',AL3(YELLOW)
         DC    X'114FC1'              R13,C01
SCR1STA  DC    CL12' ',AL3(TURQ)
         DC    X'1150D1'              R14,C02
SCR1JOB0 DC    CL33' '
         DC    X'11507E'              R14,C47
SCR1JOB1 DC    CL33' '
         DC    X'11D161'              R15,C02
SCR1JOB2 DC    CL33' '
         DC    X'11D24E'              R15,C47
SCR1JOB3 DC    CL33' '
         DC    X'11D2F1'              R16,C02
SCR1JOB4 DC    CL33' '
         DC    X'11D35E'              R16,C47
SCR1JOB5 DC    CL33' '
         DC    X'11D4C1'              R17,C02
SCR1JOB6 DC    CL33' '
         DC    X'11D46E'              R17,C47
SCR1JOB7 DC    CL33' '
         DC    X'11D5D1'              R18,C02
SCR1JOB8 DC    CL33' '
         DC    X'11D57E'              R18,C47
SCR1JOB9 DC    CL33' '
         DC    X'11D661'              R19,C02
SCR1JOBA DC    CL33' '
         DC    X'11D74E'              R19,C47
SCR1JOBB DC    CL33' '
         DC    X'11D7F1'              R20,C02
SCR1JOBC DC    CL33' '
         DC    X'11D85E'              R20,C47
SCR1JOBD DC    CL33' '
         DC    X'11D9C1'              R21,C01
SCR1JOBE DC    CL33' '
         DC    X'11D96E'              R21,C47
SCR1JOBF DC    CL33' '
         DC    X'115AD1'              R22,C02
SCR1JOBG DC    CL33' '
         DC    X'115A7E'              R22,C47
SCR1JOBH DC    CL33' '
         DC    X'115B61'              R23,C02
SCR1JOBI DC    CL33' '
         DC    X'115C4E'              R23,C47
SCR1JOBJ DC    CL33' '
         DC    X'115CF1'              R24,C01
SCR1JOBK DC    CL33' '
         DC    X'115D5E'              R24,C47
SCR1JOBL DC    CL33' '
SCR1LEN  EQU   *-SCR1TXT
         TITLE 'S.S.O.B.'
         IEFJSSOB (SO,CS),CONTIG=YES
         TITLE 'S.S.I.B.'
         IEFJSSIB
         TITLE 'C.V.T.'
         CVT   DSECT=YES
         TITLE 'SUBSYSTEM COMM. TABLE'
         IEFJESCT
         TITLE 'D.C.B.'
         DCBD  DSORG=PS
         TITLE 'J.F.C.B.'
JFCBD    DSECT
         IEFJFCBN LIST=YES
         TITLE 'RPF COMMON AREA'
COMMAREA RPFCOMM
         TITLE 'EQUATES'
SSSIZE   EQU   SSOBHSIZ+SSSOSIZE+SSIBSIZE
WORKSIZE EQU   SSSIZE
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         END
