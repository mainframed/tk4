RPFDATAL TITLE 'DATASET ALLOCATION FOR RPF'
*---------------------------------------------------------------------*
*                                                                     *
*        MODULE:        RPFDATAL.                                     *
*                                                                     *
*        FUNCTION:      PRESENT AN ALLOCATION MENU FOR THE RPF        *
*                       EDITOR or RPF utilities.                      *
*                       THIS MENU HAS THE FOLLOWING POSSIBILITIES:    *
*                       1. Select the option (1, 2 or 3)              *
*                       2. SELECT NONUM OR NUM                        *
*                       3. SELECT UPPERCASE OR LOWERCASE              *
*                       4. SELECT APPEND OR NOT                       *
*                       5. SELECT THE DATASET OR BLANK - OR -         *
*                       6. Select 1 of the datasets in the selection  *
*                          list, which contains max 8 datasets        *
*                          IF A DATASET IS SELECTED CONTROL WILL BE   *
*                          PASSED TO RPFDAIR TO ALLOCATE THE DATASET. *
*                          IF THE DATASET CAN NOT BE ALLOCATED A      *
*                          RETRY MENU WILL BE GIVEN TO THE USER       *
*                          IF BLANKS ARE SELECTED THE CURRENT WORK    *
*                          SPACE WILL BE EDITED.                      *
*                                                                     *
*                       If flag $DATAU is on in the Commarea,         *
*                       the menu will be changed as 'utility' menu    *
*                       and will be used and option 2 (Librarian) and *
*                       3 (Panvalet) will be disabled.                *
*                                                                     *
*                       If CMDAREA is filled in, the contents of      *
*                       this field will be set in the message field   *
*                       of the allocation menu                        *
*                                                                     *
*        RETURNCODES SET IN RTNCODE FIELD OF COMMAREA:                *
*                       00 ALRIGHT                                    *
*                       08 EXIT ENTERED.                              *
*                       12 No member supplied, Invoke RPFPDS          *
*                       20 Not a card image library (if $DAIR00 is off*
*                       32 member not found (if $DAIR00 is off)       *
*                                                                     *
*------------------------------------------ (C)-2002 SKYBIRD SYSTEMS -*
         SPACE 2
RPFDATAL CSECT                     DATA SET MENU RPF
         SAVE  (14,12),,*
         USING RPFDATAL,R15
         LA    R11,SAVE            PICKUP SAVE AREA
         ST    R13,SAVE+4          BACKWARD POINTER
         ST    R11,8(0,R13)        FORWARD POINTER
         LR    R13,R11
         B     START               BRANCH AROUN CONSTANTS
         DS    0F
SAVE     DC    18F'-1'
         DC    CL8'&SYSDATE',C' ',CL8'&SYSTIME'
START    DS    0H
         LA    R12,2048(R13)           2ND BASE
         LA    R12,2048(R12)
         DROP  R15
         USING SAVE,R13,R12            GET ADDRESSABILITY OVER SAVEAREA
         L     R11,0(R1)               PICKUP PARAMETER
         USING COMMAREA,R11            GET ADDRESSABILITY PARM
         MVC   SCR1TXT(2),=X'27F5'     MOVE DEFAULT WRITE CC
         GTSIZE ,                      GET SCREENSIZE
         LR    R3,R0                   NUMBER OF LINES
         CH    R3,=H'43'               43 LINES RECEIVED ?
         BE    START1                  YES: BRANCH
         CH    R3,=H'32'               32 LINES RECEIVED ?
         BE    START2                  YES: BRANCH
         B     START3                  ELSE DEFAULT
START1   MVC   SCR1TXT(2),=X'277E'     WRITE CC ALTERNATE
         B     START3                  AND BRANCH
START2   MVC   SCR1TXT(2),=X'277E'     WRITE CC ALTERNATE
         B     START3                  AND BRANCH
START3   MVC   SCR1UID+27(7),USERID    USERID INTO SCREEN
         MVI   SCR3OLB+4,X'F8'         Highlight option 2
         MVI   SCR3OLP+4,X'F8'         Highlight option 3
         MVI   SCR3OLB+11,X'F0'        Show  text of option 2
         MVI   SCR3OLP+11,X'F0'        Show  text of option 3
         MVC   SCR1UID+4(7),=CL8'EDIT'
         MVC   SCR3TXE(8),=CL8'EDIT'
         TM    INFCODE4,$DATAU         Treated as rpfdatau
         BNO   START4                  No: branch
         MVI   SCR3OLB+4,X'FC'         Hide  option 2
         MVI   SCR3OLP+4,X'FC'         Hide  option 3
         MVI   SCR3OLB+11,X'FC'         Hide  text of option 2
         MVI   SCR3OLP+11,X'FC'         Hide  text of option 3
         MVC   SCR1UID+4(7),=CL7'UTILITY'
         MVC   SCR3TXE(8),=CL8'ALLOCATE'
START4   DS    0H
         MVC   FOLD,DEFOLD             MOVE DEFAULTS
         MVC   SCR3APP,DEFAPP           ,,    ,,
         TM    INFCODE3,$EDTCOPY       'COPY' COMMAND OF EDIT ?
         BNO   *+10                    NO: BRANCH AROUND NEXT INSTR
         MVC   SCR3APP,=C'YES'         MOVE APPEND=YES
         MVC   SCR3NUM,DEFNUM           ,,    ,,
         MVI   SCR3CMD,C'1'            MOVE DEFAULT OPTION 1
         LA    R3,SCR1UID+33           REPLACE TRAILING BLANKS
         LA    R4,7                    MAX 7 TIMES
UID1     CLI   0(R3),C' '              TRAILING BLANK ?
         BNE   UID99                   NO: EXIT
         MVI   0(R3),C'-'              REPLACE BY HYPHEN
         BCTR  R3,0                    DECREASE BY 1
         BCT   R4,UID1                 LOOP UNTIL ALL DONE
UID99    EQU   *
         NI    INFCODE,X'FF'-NOTLOAD
         MVI   SW,0                    clear flags
         MVC   SEL1(8),BLANKS          blank the selections
         XR    R0,R0                   ZERO R0
         ST    R0,EPNEXT               CLEAR EPNEXT
         ST    R0,RTNCODE              0 INTO RETURN CODE
         TM    INFCODE4,$DATAU         RPFDATAL use utility entry?
         BO    RESTART                 Yes: ignore edit option
         TM    INFCODE2,$OPTION        OPTION ALREADY SELECTED IN MAIN
         BZ    RESTART                 NO: CONTINUE
         NI    INFCODE2,255-$OPTION    RESET FLAG
         MVC   FOLD,DEFOLD             MOVE DEFAULT FOLD (CAPS OR ASIS)
         MVC   NUMBERED,DEFNUM         MOVE DEFAULT NUMBERED
         MVC   BUFMEM,MEMBER           MOVE MEMBERNAME
         CLI   EDITOPT,C'2'            LIBRARIAN SELECTED
         BE    LIBRARIA                YES: BRANCH
         CLI   EDITOPT,C'3'            PANVALET SELECTED ?
         BE    PANVALET                YES: BRANCH
         MVC   SCR3CMD(1),EDITOPT      MOVE OPTION INTO SCREEN
RESTART  MVC   SCR3UPP,DEFOLD
         MVC   SCR3APP,DEFAPP
         TM    INFCODE3,$EDTCOPY       'COPY' COMMAND OF EDIT ?
         BNO   *+10                    NO: BRANCH AROUND NEXT INSTR
         MVC   SCR3APP,=C'YES'         MOVE APPEND=YES
         MVC   SCR3NUM,DEFNUM
         L     R3,GETMSTRT             SET POINTER TO FIRSTREC EQUAL
         ST    R3,FIRSTREC             TO BEGINNING OF WORKSPACE
         MVI   MSG3,C'-'               CLEAR MESSAGE
         MVC   MSG3+1(21),MSG3         CLEAR MESSAGE
         CLC   CMDAREA,BLANKS          No message supplied ?
         BE    TPUT1                   No: display
         MVC   MSG3,CMDAREA            Move message
         MVC   CMDAREA,BLANKS          Clear field
TPUT1    DS    0H
         TPUT  SCR1TXT,SCR1LEN,FULLSCR  DISPLAY SCREEN
DYNALC   MVC   SCR3VOL(6),VOLUME       VOLUME INTO SCREEN
         MVC   SCR3DSN(44),DSNAME      DSNAME INTO SCREEN
         MVC   SCR3MEM(8),MEMBER       MEMBER INTO SCREEN
         MVC   SCR3DSN1,COMMEDS1       )
         MVC   SCR3DSN2,COMMEDS2       )
         MVC   SCR3DSN3,COMMEDS3       )
         MVC   SCR3DSN4,COMMEDS4       ) datasets of selection list
         MVC   SCR3DSN5,COMMEDS5       )
         MVC   SCR3DSN6,COMMEDS6       )
         MVC   SCR3DSN7,COMMEDS7       )
         MVC   SCR3DSN8,COMMEDS8       )
         MVC   SCR3VOL1,COMMEVO1       )
         MVC   SCR3VOL2,COMMEVO2       )
         MVC   SCR3VOL3,COMMEVO3       )
         MVC   SCR3VOL4,COMMEVO4       ) Volumes of selection list
         MVC   SCR3VOL5,COMMEVO5       )
         MVC   SCR3VOL6,COMMEVO6       )
         MVC   SCR3VOL7,COMMEVO7       )
         MVC   SCR3VOL8,COMMEVO8       )
         TPUT  SCR3TXT,SCR3LEN,FULLSCR WRITE SCREEN3
GET1     DS    0H
         L     R5,COMMSCR              OUTPUT FORMATTED BUFFER
         LA    R5,2048(R5)             USE SECOND PART
         L     R3,COMMSCR              LOAD SCREEN ADDRESS
         TGET  (R3),900,ASIS           READ THE SCREEN
         LR    R4,R1                   SAVE LENGTH
*        DO AN TGET ASIS TO OBTAIN THE AID BYTE
*        AFTER THE TGET ASIS REMOVE THE SBA'S FROM THE OUTPUT
         CLI   0(R3),X'F3'             PFK3 (END) PRESSED
         BE    DYNALC83                YES: EXIT
         CLI   0(R3),X'C3'             PFK15 (END) PRESSED
         BE    DYNALC83                YES: EXIT
         XR    R2,R2                    INIT OUTPUT LENGTH
         LR    R4,R1                   SAVE INPUT LENGTH
         SH    R4,=H'3'                SKIP AID AND CURSOR ADDRESS
         C     R4,F0000                REGISTER ZERO
         BNH   CONV099                 NOT HIGH: END OF ROUTINE
         LA    R3,3(R3)
         L     R5,COMMSCR              OUTPUT ADDRESS
         LA    R5,2048(R5)             USE SECOND PART
*        INPUT SCREEN IS POINTED TO BY R3
*        OUTPUT SCREEN IS POINTED TO BY R5
*        THE NEXT SECTION WILL REMOVE ALL THE SBA'S
CONV001  CLI   0(R3),X'11'             SET BUFFER ADDRESS ?
         BE    CONV003                 YES: SKIP NEXT 3 BYTES INPUT
CONV002  MVC   0(1,R5),0(R3)           MOVE INPUT BYTE
         LA    R3,1(R3)                NEXT BYTE INPUT
         LA    R2,1(R2)                COUNT OUTPUT BYTES
         LA    R5,1(R5)                NEXT BYTE OUTPUT
         BCT   R4,CONV001              TEST NEXT BYTE
         B     CONV099                 END OF ROUTINE
CONV003  LA    R3,3(R3)                SKIP 3 BYTES INPUT
         BCTR  R4,0                    MINUS 1 BCT
         BCTR  R4,0                    MINUS 1 BCT
         C     R4,F0000                REGISTER ZERO ?
         BNH   CONV099                 YES: TERMINATE CONVERSION
         BCT   R4,CONV001              TEST NEXT BYTE
CONV099  LR    R1,R2                   OUTPUT LENGTH IN REGISTER 1
         L     R5,COMMSCR              OUTPUT ADDRESS
         LA    R5,2048(R5)             USE SECOND PART
         OC    0(256,R5),BLANKS        XLATE TO UPPERCASE
         OC    256(256,R5),BLANKS      XLATE TO UPPERCASE
         OC    512(256,R5),BLANKS      XLATE TO UPPERCASE
         OC    768(256,R5),BLANKS      XLATE TO UPPERCASE
DYNALC01 MVC   BUFVOL(6),BLANKS        CLEAR VOLUME
         MVC   BUFMEM(8),BLANKS        CLEAR MEMBER
         MVC   BUFDSN(44),BLANKS       CLEAR DSNAME
         LTR   R1,R1                   NO INPUT RECEIVED ?
         BZ    RESTART                 YES: REFRESH SCREEN
         MVC   COMMEDS1(250),BLANKS    CLEAR SELECTIONS
         MVC   COMMEDS1+250(150),BLANKS    CLEAR SELECTIONS
         NI    INFCODE,X'FF'-COBBIT    COBOL SWITCH OFF
         LR    R6,R1                   LENGTH OF BUFFER
         LA    R4,BUFCMD               OPTION
DYNALC03 CLC   0(5,5),=C'UPPER'        SEARCH FOR UPPER CASE
         BE    DYNALC05                FOUND: PROCESS FOLD
         MVC   0(1,R4),0(R5)           MOVE 1 CHAR. FOLD INTO COMMAREA
         LA    R5,1(R5)                NEXT BYTE
         LA    R4,1(R4)                NEXT BYTE IN COMMAND
         BCT   R6,DYNALC03             EXAMINE NEXT BYTES
         B     RESTART                 CLEAR KEY PRESSED.
DYNALC05 LA    R5,13(R5)               POINT AFTER 'UPPER CASE=  '
         LA    R4,FOLD                 POINT TO FOLD IN COMMAREA
DYNALC07 CLC   0(4,R5),=C'LOAD'        SEARCH FOR LOAD APPEND
         BE    DYNALC09                FOUND: PROCESS LINE NUMBERS
         MVC   0(1,R4),0(R5)           MOVE 1 CHAR. FOLD INTO COMMAREA
         LA    R5,1(R5)                NEXT CHAR.
         LA    R4,1(R4)                NEXT CHAR.
         BCT   R6,DYNALC07             EXAMINE NEXT BYTES
         B     RESTART                 CLEAR KEY PRESSED
DYNALC09 LA    R5,13(R5)               POINT AFTER 'Load append= '
         LA    R4,APPEND               POINT TO APPEND IN COMMAREA
DYNALC11 CLC   0(4,R5),=C'LINE'        SEARCH FOR LINE NUMBERS
         BE    DYNALC13                FOUND: PROCESS LINE NUMBERS
         MVC   0(1,R4),0(R5)       MOVE 1 CHAR. NUMBERED INTO COMMAREA
         LA    R5,1(R5)                NEXT CHAR.
         LA    R4,1(R4)                NEXT CHAR.
         BCT   R6,DYNALC11             EXAMINE NEXT BYTES
         B     RESTART                 CLEAR KEY PRESSED
DYNALC13 LA    R5,13(R5)               POINT AFTER 'Line numbered='
         LA    R4,NUMBERED             POINT TO NUMBERED IN COMMAREA
DYNALC15 CLC   0(7,R5),=C'MEMBER='     SEARCH FOR MEMBER
         BE    DYNALC17                FOUND: PROCESS MEMBER
         MVC   0(1,R4),0(R5)           MOVE 1 CHAR. NUMBERED
         LA    R5,1(R5)                NEXT CHAR.
         LA    R4,1(R4)                NEXT CHAR.
         BCT   R6,DYNALC15             EXAMINE NEXT BYTES
         B     RESTART                 CLEAR KEY PRESSED
DYNALC17 LA    R5,7(R5)                POINT AFTER 'MEMBER='
         LA    R4,BUFMEM               POINT TO MEMBER
DYNALC19 CLC   0(8,R5),=C',DSNAME='    SEARCH FOR DSNAME
         BE    DYNALC21                FOUND: PROCESS DSNAME
         MVC   0(1,R4),0(R5)           MOVE 1 CHAR. MEMBER
         LA    R5,1(R5)                NEXT CHAR.
         LA    R4,1(R4)                NEXT CHAR.
         BCT   R6,DYNALC19             EXAMINE NETX BYTES
         B     RESTART                 CLEAR KEY PRESSED
DYNALC21 LA    R5,8(R5)                POINT AFTER 'DSNAME='
         LA    R4,BUFDSN               POINT TO DSNAME
DYNALC23 CLC   0(7,R5),=C'VOLUME='     SEARCH FOR VOLUME
         BE    DYNALC25                FOUND: PROCESS VOLUME
         MVC   0(1,R4),0(R5)           MOVE 1 CHAR. DSNAME
         LA    R5,1(R5)                NEXT CHAR.
         LA    R4,1(R4)                NEXT CHAR.
         BCT   R6,DYNALC23             EXAMINE NEXT BYTES
         B     RESTART                 CLEAR KEY PRESSED
DYNALC25 LA    R5,7(R5)                POINT AFTER 'VOLUME='
         LA    R4,BUFVOL               POINT TO VOLUME
DYNALC27 CLC   0(8,R5),=C',DDNAME='    SEARCH FOR DDNAME
         BE    DYNALC29                FOUND: PROCESS DDNAME
         MVC   0(1,R4),0(R5)           MOVE 1 CHAR. VOLUME
         LA    R5,1(R5)                NEXT CHAR.
         LA    R4,1(R4)                NEXT CHAR.
         BCT   R6,DYNALC27             EXAMINE NEXT BYTES
         B     RESTART                 CLEAR KEY PRESSED
DYNALC29 DS    0H
         LA    R5,8(R5)                POINT AFTER ',ddname='
         LA    R4,SEL1                 POINT TO selection
DYNALC31 CLC   0(2,R5),=C'1>'          SEARCH FOR sel 1
         BE    DYNALC33                FOUND: (1)
         MVC   0(1,R4),0(R5)           MOVE 1 CHAR. sel1
         LA    R5,1(R5)                NEXT CHAR.
         LA    R4,1(R4)                NEXT CHAR.
         BCT   R6,DYNALC31             EXAMINE NEXT BYTES
         B     RESTART                 CLEAR KEY PRESSED
DYNALC33 DS    0H
         LA    R5,2(R5)                POINT AFTER '1>'
         LA    R4,COMMEDS1             POINT TO DATASET 1
DYNALC35 CLC   0(8,R5),=C',VOLUME='    SEARCH FOR VOLUME -1-
         BE    DYNALC37                FOUND: Volume -1-
         MVC   0(1,R4),0(R5)           MOVE 1 CHAR. DSN1
         LA    R5,1(R5)                NEXT CHAR.
         LA    R4,1(R4)                NEXT CHAR.
         BCT   R6,DYNALC35             EXAMINE NEXT BYTES
         B     RESTART                 CLEAR KEY PRESSED
DYNALC37 DS    0H
         LA    R5,8(R5)                POINT AFTER Volume -1-
         LA    R4,COMMEVO1             POINT TO Volume 1
DYNALC39 CLC   0(2,R5),=C'**'          SEARCH FOR mark
         BE    DYNALC40                FOUND: Volume -1-
         MVC   0(1,R4),0(R5)           MOVE 1 CHAR. VOL1
         LA    R5,1(R5)                NEXT CHAR.
         LA    R4,1(R4)                NEXT CHAR.
         BCT   R6,DYNALC39             EXAMINE NEXT BYTES
         B     RESTART                 CLEAR KEY PRESSED
DYNALC40 DS    0H
         LA    R5,2(R5)                POINT AFTER **
         LA    R4,SEL2                 POINT TO Sel2
DYNALC41 CLC   0(2,R5),=C'2>'          SEARCH FOR sel 2
         BE    DYNALC42                FOUND: (2)
         MVC   0(1,R4),0(R5)           MOVE 1 CHAR. sel2
         LA    R5,1(R5)                NEXT CHAR.
         LA    R4,1(R4)                NEXT CHAR.
         BCT   R6,DYNALC41             EXAMINE NEXT BYTES
         B     RESTART                 CLEAR KEY PRESSED
DYNALC42 DS    0H
         LA    R5,2(R5)                POINT AFTER '2>'
         LA    R4,COMMEDS2             POINT TO DATASET 2
DYNALC43 CLC   0(8,R5),=C',VOLUME='    SEARCH FOR VOLUME -2-
         BE    DYNALC44                FOUND: Volume -2-
         MVC   0(1,R4),0(R5)           MOVE 1 CHAR. DSN2
         LA    R5,1(R5)                NEXT CHAR.
         LA    R4,1(R4)                NEXT CHAR.
         BCT   R6,DYNALC43             EXAMINE NEXT BYTES
         B     RESTART                 CLEAR KEY PRESSED
DYNALC44 DS    0H
         LA    R5,8(R5)                POINT AFTER Volume -2-
         LA    R4,COMMEVO2             POINT TO Volume 2
DYNALC45 CLC   0(2,R5),=C'**'          SEARCH FOR mark
         BE    DYNALC46                FOUND: Volume -2-
         MVC   0(1,R4),0(R5)           MOVE 1 CHAR. VOL2
         LA    R5,1(R5)                NEXT CHAR.
         LA    R4,1(R4)                NEXT CHAR.
         BCT   R6,DYNALC45             EXAMINE NEXT BYTES
         B     RESTART                 CLEAR KEY PRESSED
DYNALC46 DS    0H
         LA    R5,2(R5)                POINT AFTER **
         LA    R4,SEL3                 POINT TO Sel3
DYNALC47 CLC   0(2,R5),=C'3>'          SEARCH FOR sel 3
         BE    DYNALC48                FOUND: (3)
         MVC   0(1,R4),0(R5)           MOVE 1 CHAR. sel3
         LA    R5,1(R5)                NEXT CHAR.
         LA    R4,1(R4)                NEXT CHAR.
         BCT   R6,DYNALC47             EXAMINE NEXT BYTES
         B     RESTART                 CLEAR KEY PRESSED
DYNALC48 DS    0H
         LA    R5,2(R5)                POINT AFTER '3>'
         LA    R4,COMMEDS3             POINT TO DATASET 3
DYNALC49 CLC   0(8,R5),=C',VOLUME='    SEARCH FOR VOLUME -3-
         BE    DYNALC50                FOUND: Volume -3-
         MVC   0(1,R4),0(R5)           MOVE 1 CHAR. DSN3
         LA    R5,1(R5)                NEXT CHAR.
         LA    R4,1(R4)                NEXT CHAR.
         BCT   R6,DYNALC49             EXAMINE NEXT BYTES
         B     RESTART                 CLEAR KEY PRESSED
DYNALC50 DS    0H
         LA    R5,8(R5)                POINT AFTER Volume -3-
         LA    R4,COMMEVO3             POINT TO Volume 3
DYNALC51 CLC   0(2,R5),=C'**'          SEARCH FOR mark
         BE    DYNALC52                FOUND: Volume -3-
         MVC   0(1,R4),0(R5)           MOVE 1 CHAR. VOL3
         LA    R5,1(R5)                NEXT CHAR.
         LA    R4,1(R4)                NEXT CHAR.
         BCT   R6,DYNALC51             EXAMINE NEXT BYTES
         B     RESTART                 CLEAR KEY PRESSED
DYNALC52 DS    0H
         LA    R5,2(R5)                POINT AFTER **
         LA    R4,SEL4                 POINT TO Sel4
DYNALC53 CLC   0(2,R5),=C'4>'          SEARCH FOR sel 4
         BE    DYNALC54                FOUND: (4)
         MVC   0(1,R4),0(R5)           MOVE 1 CHAR. sel4
         LA    R5,1(R5)                NEXT CHAR.
         LA    R4,1(R4)                NEXT CHAR.
         BCT   R6,DYNALC53             EXAMINE NEXT BYTES
         B     RESTART                 CLEAR KEY PRESSED
DYNALC54 DS    0H
         LA    R5,2(R5)                POINT AFTER '4>'
         LA    R4,COMMEDS4             POINT TO DATASET 4
DYNALC55 CLC   0(8,R5),=C',VOLUME='    SEARCH FOR VOLUME -4-
         BE    DYNALC56                FOUND: Volume -4-
         MVC   0(1,R4),0(R5)           MOVE 1 CHAR. DSN4
         LA    R5,1(R5)                NEXT CHAR.
         LA    R4,1(R4)                NEXT CHAR.
         BCT   R6,DYNALC55             EXAMINE NEXT BYTES
         B     RESTART                 CLEAR KEY PRESSED
DYNALC56 DS    0H
         LA    R5,8(R5)                POINT AFTER Volume -4-
         LA    R4,COMMEVO4             POINT TO Volume 4
DYNALC57 CLC   0(2,R5),=C'**'          SEARCH FOR mark
         BE    DYNALC58                FOUND: Volume -4-
         MVC   0(1,R4),0(R5)           MOVE 1 CHAR. VOL4
         LA    R5,1(R5)                NEXT CHAR.
         LA    R4,1(R4)                NEXT CHAR.
         BCT   R6,DYNALC57             EXAMINE NEXT BYTES
         B     RESTART                 CLEAR KEY PRESSED
DYNALC58 DS    0H
         LA    R5,2(R5)                POINT AFTER **
         LA    R4,SEL5                 POINT TO Sel5
DYNALC59 CLC   0(2,R5),=C'5>'          SEARCH FOR sel 5
         BE    DYNALC60                FOUND: (5)
         MVC   0(1,R4),0(R5)           MOVE 1 CHAR. sel5
         LA    R5,1(R5)                NEXT CHAR.
         LA    R4,1(R4)                NEXT CHAR.
         BCT   R6,DYNALC59             EXAMINE NEXT BYTES
         B     RESTART                 CLEAR KEY PRESSED
DYNALC60 DS    0H
         LA    R5,2(R5)                POINT AFTER '5>'
         LA    R4,COMMEDS5             POINT TO DATASET 5
DYNALC61 CLC   0(8,R5),=C',VOLUME='    SEARCH FOR VOLUME -5-
         BE    DYNALC62                FOUND: Volume -5-
         MVC   0(1,R4),0(R5)           MOVE 1 CHAR. DSN5
         LA    R5,1(R5)                NEXT CHAR.
         LA    R4,1(R4)                NEXT CHAR.
         BCT   R6,DYNALC61             EXAMINE NEXT BYTES
         B     RESTART                 CLEAR KEY PRESSED
DYNALC62 DS    0H
         LA    R5,8(R5)                POINT AFTER Volume -5-
         LA    R4,COMMEVO5             POINT TO Volume 5
DYNALC63 CLC   0(2,R5),=C'**'          SEARCH FOR mark
         BE    DYNALC64                FOUND: Volume -5-
         MVC   0(1,R4),0(R5)           MOVE 1 CHAR. VOL5
         LA    R5,1(R5)                NEXT CHAR.
         LA    R4,1(R4)                NEXT CHAR.
         BCT   R6,DYNALC63             EXAMINE NEXT BYTES
         B     RESTART                 CLEAR KEY PRESSED
DYNALC64 DS    0H
         LA    R5,2(R5)                POINT AFTER **
         LA    R4,SEL6                 POINT TO Sel6
DYNALC65 CLC   0(2,R5),=C'6>'          SEARCH FOR sel 6
         BE    DYNALC66                FOUND: (6)
         MVC   0(1,R4),0(R5)           MOVE 1 CHAR. sel6
         LA    R5,1(R5)                NEXT CHAR.
         LA    R4,1(R4)                NEXT CHAR.
         BCT   R6,DYNALC65             EXAMINE NEXT BYTES
         B     RESTART                 CLEAR KEY PRESSED
DYNALC66 DS    0H
         LA    R5,2(R5)                POINT AFTER '6>'
         LA    R4,COMMEDS6             POINT TO DATASET 6
DYNALC67 CLC   0(8,R5),=C',VOLUME='    SEARCH FOR VOLUME -6-
         BE    DYNALC68                FOUND: Volume -6-
         MVC   0(1,R4),0(R5)           MOVE 1 CHAR. DSN6
         LA    R5,1(R5)                NEXT CHAR.
         LA    R4,1(R4)                NEXT CHAR.
         BCT   R6,DYNALC67             EXAMINE NEXT BYTES
         B     RESTART                 CLEAR KEY PRESSED
DYNALC68 DS    0H
         LA    R5,8(R5)                POINT AFTER Volume -6-
         LA    R4,COMMEVO6             POINT TO Volume 6
DYNALC69 CLC   0(2,R5),=C'**'          SEARCH FOR mark
         BE    DYNALC70                FOUND: Volume -6-
         MVC   0(1,R4),0(R5)           MOVE 1 CHAR. VOL6
         LA    R5,1(R5)                NEXT CHAR.
         LA    R4,1(R4)                NEXT CHAR.
         BCT   R6,DYNALC69             EXAMINE NEXT BYTES
         B     RESTART                 CLEAR KEY PRESSED
DYNALC70 DS    0H
         LA    R5,2(R5)                POINT AFTER **
         LA    R4,SEL7                 POINT TO Sel7
DYNALC71 CLC   0(2,R5),=C'7>'          SEARCH FOR sel 7
         BE    DYNALC72                FOUND: (7)
         MVC   0(1,R4),0(R5)           MOVE 1 CHAR. sel7
         LA    R5,1(R5)                NEXT CHAR.
         LA    R4,1(R4)                NEXT CHAR.
         BCT   R6,DYNALC71             EXAMINE NEXT BYTES
         B     RESTART                 CLEAR KEY PRESSED
DYNALC72 DS    0H
         LA    R5,2(R5)                POINT AFTER '7>'
         LA    R4,COMMEDS7             POINT TO DATASET 7
DYNALC73 CLC   0(8,R5),=C',VOLUME='    SEARCH FOR VOLUME -7-
         BE    DYNALC74                FOUND: Volume -7-
         MVC   0(1,R4),0(R5)           MOVE 1 CHAR. DSN7
         LA    R5,1(R5)                NEXT CHAR.
         LA    R4,1(R4)                NEXT CHAR.
         BCT   R6,DYNALC73             EXAMINE NEXT BYTES
         B     RESTART                 CLEAR KEY PRESSED
DYNALC74 DS    0H
         LA    R5,8(R5)                POINT AFTER Volume -7-
         LA    R4,COMMEVO7             POINT TO DATASET 7
DYNALC75 CLC   0(2,R5),=C'**'          SEARCH FOR mark
         BE    DYNALC76                FOUND: Volume -7-
         MVC   0(1,R4),0(R5)           MOVE 1 CHAR. VOL7
         LA    R5,1(R5)                NEXT CHAR.
         LA    R4,1(R4)                NEXT CHAR.
         BCT   R6,DYNALC75             EXAMINE NEXT BYTES
         B     RESTART                 CLEAR KEY PRESSED
DYNALC76 DS    0H
         LA    R5,2(R5)                POINT AFTER **
         LA    R4,SEL8                 POINT TO Sel8
DYNALC77 CLC   0(2,R5),=C'8>'          SEARCH FOR sel 8
         BE    DYNALC78                FOUND: (7)
         MVC   0(1,R4),0(R5)           MOVE 1 CHAR. sel7
         LA    R5,1(R5)                NEXT CHAR.
         LA    R4,1(R4)                NEXT CHAR.
         BCT   R6,DYNALC77             EXAMINE NEXT BYTES
         B     RESTART                 CLEAR KEY PRESSED
DYNALC78 DS    0H
         LA    R5,2(R5)                POINT AFTER '8>'
         LA    R4,COMMEDS8             POINT TO DATASET 8
DYNALC79 CLC   0(8,R5),=C',VOLUME='    SEARCH FOR VOLUME -8-
         BE    DYNALC80                FOUND: Volume -8-
         MVC   0(1,R4),0(R5)           MOVE 1 CHAR. DSN8
         LA    R5,1(R5)                NEXT CHAR.
         LA    R4,1(R4)                NEXT CHAR.
         BCT   R6,DYNALC79             EXAMINE NEXT BYTES
         B     RESTART                 CLEAR KEY PRESSED
DYNALC80 DS    0H
         LA    R5,8(R5)                POINT AFTER Volume -8-
         LA    R4,COMMEVO8             POINT TO Volume 8
DYNALC81 CLC   0(2,R5),=C'**'          SEARCH FOR mark
         BE    DYNALC82                FOUND: Volume -8-
         MVC   0(1,R4),0(R5)           MOVE 1 CHAR. VOL8
         LA    R5,1(R5)                NEXT CHAR.
         LA    R4,1(R4)                NEXT CHAR.
         BCT   R6,DYNALC81             EXAMINE NEXT BYTES
         B     RESTART                 CLEAR KEY PRESSED
DYNALC82 DS    0H
         CLI   BUFCMD,C'1'             OPTION 1 SELECTED ?
         BE    DYNALC84                YES: CONTINUE EDIT
         CLI   BUFCMD,C'X'             OPTION 'X' (EXIT) SELECTED ?
         BE    DYNALC83                YES: EXIT
         TM    INFCODE4,$DATAU         Utility processing?
         BO    DYNALC8B                Yes: branch
         CLI   BUFCMD,C'2'             OPTION 2 SELECTED ? (LIBRARIAN)
         BE    LIBRARIA                YES: LINK RPFLIB00
         CLI   BUFCMD,C'3'             OPTION 3 SELECTED ?  (PANVALET)
         BE    PANVALET                YES: LINK RPFPAN00
DYNALC8B DS    0H
         MVC   MSG2,ERR2TXT            MOVE ERROR MESSAGE
         B     ERROR                   AND BRANCH
DYNALC83 DS    0H
         LA    R0,8                    RC=0008
         ST    R0,RTNCODE              IN RTNCODE
         B     RETURN90                EXIT
LIBRARIA DS    0H
         MVC   COMMMOD,BUFMEM          MOVE MEMBER INTO MODULE NAME
         LINK  EP=RPFLIB00,PARAM=((11)),VL=1
         OI    INFCODE,NOTLOAD         MARK NOLOAD
         B     RETURN90                RETURN
PANVALET DS    0H
         MVC   PANMOD,BLANKS
         MVC   PANMOD(8),BUFMEM        MOVE INTO PANVALET
         LINK  EP=RPFPAN00,PARAM=((11)),VL=1
         OI    INFCODE,NOTLOAD         MARK NOLOAD
         B     RETURN90                RETURN
DYNALC84 DS    0H                      BLANKS SPECIFIED ?
         LA    R3,SEL1                 POINT TO SELECTION FIELDS
         LA    R6,8                    MAX 8 SELECTIONS
         LA    R5,COMMEDS1             POINT TO 1ST DATASET
DYNALC85 DS    0H
         CLI   0(R3),C' '              SOMETHING SELECTED
         BNE   DYNALC86
         LA    R3,1(R3)                POINT TO NEXT SELECTION
         LA    R5,50(R5)               POINT TO NEXT dataset in sel
         BCT   R6,DYNALC85             bump through selections
         OI    SW,$NOSEL               Flag nothing selected
         B     DYNALC87                Nothing selected from the list
DYNALC86 DS    0H
         MVC   BUFMEM,BLANKS           Blank member
         MVC   BUFDSN,0(R5)            Move dataset from selection
         MVC   BUFVOL,44(R5)           Move volume from selection
DYNALC87 DS    0H
         CLC   BUFDSN,BLANKS           BLANKS SPECIFIED ?
         BNE   DYNALC88                GO TO RPFDAIR IF NOT
         TM    INFCODE4,$DATAU         Invoked for utility
         BZ    *+14                    Branch if not
         MVC   RTNCODE,F0004           RC=4 if dsn=blank
         B     DYNALC97                Process the error
*+14
         OI    INFCODE,NOTLOAD         DO NOT LOAD DATASET
         XC    RTNCODE,RTNCODE         CLEAR RTNCODE FIELD
         NI    SW,255-$NOSEL           Clear flag
         B     DYNALC92                NOT TO RPFDAIR
         TITLE 'ALLOCATE THE DATASET VIA RPFDAIR'
DYNALC88 DS    0H
*        ALLOCATE THE DATASET USING MODULE RPFDAIR                    *
*        IF NO MEMBER SUPPLIED, SET RC=0012 TO INVOKE THE PDS         *
*        PROCESSOR RPFPDS.                                            *
         MVC   VOLUME,BUFVOL           MOVE VOLUME INTO COMMAREA
         MVC   DSNAME,BUFDSN           MOVE DSNAME INTO COMMAREA
         MVC   MEMBER,BUFMEM           MOVE MEMBER INTO COMMAREA
         L     R15,EPDAIR              ENTRY POINT RPFDAIR
         ST    R11,DAIRPARM            ADDRESS COMMAREA INTO PARMLIST
         LA    R1,DAIRPARM             ADDRESS PARMLIST
         BALR  R14,R15                 BRANCH TO RPFDAIR
         LA    R3,DSNAME+43            END OF DSNAME
         LA    R4,44                   MAX 44 CHARS IN DSNAME
DYNALC89 DS    0H
         CLI   0(R3),X'40'             BLANK ?
         BE    DYNALC91                TRY NEXT BYTE
         CLI   0(R3),X'00'             ZERO ?
         BE    DYNALC91                TRY NEXT BYTE
         LA    R2,4                    REG.2 = 4
         SR    R3,R2                   REG.3 = REG.3 - 4
         CLC   0(5,R3),=C'.TEXT'       TEXT ?
         BE    DYNALC90                NO: TAKE DEFAULT
         BCTR  3,0                     PREV. POSITION
         CLC   0(6,R3),=C'.COBOL'      COBOL ?
         BNE   DYNALC92                NO: TAKE DEFAULT
         OI    INFCODE,COBBIT          MARK COBOL TO RPFEDIT
         B     DYNALC92                PROCEED
DYNALC90 DS    0H
         MVC   FOLD(3),=C'NO '         YES: NOFOLD
         B     DYNALC92
DYNALC91 DS    0H
         BCTR  R3,0
         BCT   R4,DYNALC89             TRY NEXT BYTE
         TITLE 'PROCESS DAIR RETURN CODES'
DYNALC92 DS    0H
         CLC   RTNCODE,F0000           RC= 0000 ?
         BE    RETURN                  YES: RETURN TO CALLER
DYNALC94 DS    0H
         TM    INFCODE4,$DATAU         Utility processing ?
         BZ    DYNALC96                No: edit processing
         CLC   RTNCODE,F0032           RC= 0032, MEMBER NOT FOUND
         BNE   DYNALC95                No: do some other testing
         CLC   MEMBER,=CL8'TEMPNAME' MEMBER IS TEMPNAME ?
         BE    RETURN                  YES: member selection list
DYNALC95 DS    0H
         TM    INFCODE,$DAIR00         Only RC=0000 allowed ?
         BO    DYNALC97                Yes: error (rc=0 must)
         CLC   RTNCODE,F0032           RC= 0032 (member not found)  ?
         BE    RETURN                  Yes: RETURN TO CALLER
         CLC   RTNCODE,F0020           RC= 0020 (RECFM NOT F OR FB) ?
         BE    RETURN                  Yes: RETURN TO CALLER
         B     DYNALC97                Otherwise an error
DYNALC96 DS    0H
         CLC   RTNCODE,F0032           RC= 0032, MEMBER NOT FOUND
         BNE   DYNALC97                No: other error, return
         CLC   APPEND(3),=C'YES'       APPEND YES ?
         BE    DYNALC97            ERR. APPEND=YES AND MEMB. NOT FOUND
         OI    INFCODE,DATAENT         INDICATE DATA ENTRY
         MVC   RTNCODE,F0000           ALLOC SUCCESSFULL
         B     RETURN
DYNALC97 DS    0H
         L     R1,RTNCODE              POINT TO RETURN CODE
         CVD   R1,DOUBLEWD             CONVERT TO DECIMAL
         UNPK  ERR5TXT+18(4),DOUBLEWD  UNPACK INTO MESSAGE
         OI    ERR5TXT+21,X'F0'        CLEAR SIGN
         MVC   MSG2,ERR5TXT            MESSAGE INTO SCREEN
         NI    SW,255-$NOSEL           Clear flag
         B     ERROR                   DISPLAY SCREEN
RETURN   DS    0H
*---------------------------------------------------------------------*
*                                                                     *
*        Update selection list before leaving RPFDATAL                *
*        At next invokation of EDIT (opt 2) the updated selection     *
*        list will be displayed.                                      *
*        The list will be updated if a dataset (and volume)           *
*        is entered from the 'dsname' (and 'volume' field) and NOT    *
*        any dataset from the list is selected                        *
*        The edited dataset will be made the first entry in the list  *
*        The selection list will be written in the RPF database in    *
*        module RPFEND.                                               *
*                                                                     *
*-------------------------------------- (C)-2001 Skybird Systems -----*
         SPACE 2
         TM    SW,$NOSEL               Selected from selection list?
         BZ    RETURN88                Yes: no update
         LA    R3,COMMEDS1             Point to 1st dsn in sel-list
         LA    R7,8                    Max. 8 datasets in list
RETURN1  DS    0H
         CLC   0(44,R3),DSNAME         Does dsname match
         BNE   RETURN2                 Yes: use it
         CLC   44(6,R3),BLANKS         NO VOLUME IN LIST
         BE    RETURN11                Yes: both match so no update
         CLC   44(6,R3),VOLUME         Does volume match too?
         BE    RETURN11                Yes: both match so no update
RETURN2  DS    0H
         LA    R3,50(R3)               Next entry
         BCT   R7,RETURN1              And loop
         LA    R3,COMMEDS1             Point to 1st dsn in sel-list
         LA    R7,8                    Max. 8 datasets in list
RETURN3  DS    0H                      ---> try to find a blank entry
         CLC   0(44,R3),BLANKS         Blank entry found?
         BE    RETURN4                 Yes: use it.
         CLI   0(R3),0                 Blank entry found?
         BE    RETURN4                 Yes: use it.
         LA    R3,50(R3)               Next entry
         BCT   R7,RETURN3              And loop
         B     RETURN5                 Branch if no blank entry
RETURN4  DS    0H                      Blank entry found
         MVC   0(44,R3),DSNAME         Move dsname from commarea
         MVC   44(6,R3),VOLUME         Move volume from commarea
         B     RETURN11                Make this dataset the first entr
RETURN5  DS    0H
         MVC   COMMEDS8(50),COMMEDS7   Wrap around
         MVC   COMMEDS7(50),COMMEDS6   Wrap around
         MVC   COMMEDS6(50),COMMEDS5   Wrap around
         MVC   COMMEDS5(50),COMMEDS4   Wrap around
         MVC   COMMEDS4(50),COMMEDS3   Wrap around
         MVC   COMMEDS3(50),COMMEDS2   Wrap around
         MVC   COMMEDS2(50),COMMEDS1   Wrap around
         MVC   COMMEDS1,DSNAME         Move 'new' dsname
         MVC   COMMEVO1,VOLUME         Move 'new' volume
         B     RETURN88                Return
RETURN11 DS    0H                      Dataset name already in list
         LA    R4,COMMEDS1             Point to first entry
         LA    R3,0(R3)                Clear hi-order byte curr. ent
         CR    R3,R4                   Already the first ent?
         BE    RETURN88                No swap if already first ent.
         XC    COMMEDS1(50),0(R3)      Make this dsn
         XC    0(50,R3),COMMEDS1             the first
         XC    COMMEDS1(50),0(R3)                   entry in list
         LA    R5,COMMEDS1+50          Point to second entry
RETURN13 DS    0H
         S     R3,=F'50'               Point to entry before
         CR    R3,R5                   Already swapped with 2nd ent
         BL    RETURN88                Yes: finished
         XC    50(50,R3),0(R3)          swap
         XC    0(50,R3),50(R3)              the
         XC    50(50,R3),0(R3)                 entries
         B     RETURN13
RETURN88 DS    0H
         NI    SW,255-$NOSEL           SET FLAG OFF
         CLC   MEMBER,=C'TEMPNAME'     NO MEMBER SUPPLIED IN MENU?
         BNE   RETURN99                NO: LEAVE IT
         TM    INFCODE,NOTLOAD         Not load flag on?           @rp1
         BO    RETURN99                Yes: do not link to PDS     @rp1
         MVC   RTNCODE,F0012           RC=0012, LINK TO XPFPDS
RETURN90 DS    0H
         NI    INFCODE,255-DATAENT     SET FLAG OFF
RETURN99 DS    0H
         L     R13,SAVE+4              PICKUP CALLERS SAVE AREA
         LM    R14,R12,12(R13)         RESTORE REGISTERS
         SR    R15,R15                 RETURN CODE = 0000
         BR    R14                     RETURN TO MAIN MENU
         TITLE 'Issue error message and retry'
ERROR    TPUT  SCR2TXT,SCR2LEN,FULLSCR DISPLAY ERROR SCREEN
         MVI   BUFCMD,C' '
         MVC   SCR3VOL,BUFVOL          MOVE VOLUME INTO SCREEN
         MVC   SCR3DSN,BUFDSN          MOVE DSNAME INTO SCREEN
         MVC   SCR3MEM,BUFMEM          MOVE MEMBER INTO SCREEN
         B     GET1                    GET REPLY
         TITLE 'SCREEN FORMATS'
SCR1TXT  DC    X'27F5C21140C1',AL3(WHITE) WRITE ERASE / R01,C02
SCR1UID  DC    CL79'RPF EDIT    entry: Userid= XXXXXXX-----------------C
               ----------------------------'
SCR1LEN  EQU   *-SCR1TXT
SCR2TXT  DC    X'27F1C21140401DF8' WRITE NO-ERASE
         DC    X'11407A'           R01,C59
MSG2     DS    CL22                MESSAGE AREA
         DC    X'11C1D1',AL3(WHITE),C'Option  ===>'
         DC    AL3(RED),X'1DC113',X'001DF0'
SCR2LEN  EQU   *-SCR2TXT
SCR3TXT  DC    X'27F1C21140401DF8' WRITE NO-ERASE
         DC    X'11407A'           R01,C59
MSG3     DS    CL22                MESSAGE AREA
         DC    X'11C1D1',AL3(WHITE),C'Option  ===>',AL3(RED),X'1DC113'
SCR3CMD  DC    X'001DF011C24B'     R02,C60
         DC    AL3(TURQ),C'Hit ',AL3(WHITE),C'PF03/15 ',AL3(TURQ)
         DC    C'to return'
         DC    X'11C3F3',X'1DF0',AL3(WHITE),C'1 ',X'1DF0',AL3(TURQ)
SCR3TXE  DC    C'EDIT     OS - '   R04,C04
         DC    AL3(GREEN),C'Change Allocations and edit/browse'
SCR3OLB  DC    X'11C5C3',X'1DF0',AL3(WHITE),C'2 ',X'1DF0',AL3(TURQ)
         DC    C'EDIT  LIBRA - '   R05,C04
         DC    AL3(GREEN),C'EDIT from LIBRARIAN master '
SCR3OLP  DC    X'11C6D3',X'1DF0',AL3(WHITE),C'3 ',X'1DF0',AL3(TURQ)
         DC    C'EDIT    PAN - '   R06,C04
         DC    AL3(GREEN),C'EDIT from PANVALET library '
         DC    X'11C8F0',X'1DF0'   R08,C01
         DC    AL3(YELLOW),C'Change options if desired:'
         DC    X'114A40'           R09,C01
         DC    X'1DF5',AL3(TURQ),C'Upper case=  ',X'1DC9',AL3(RED)
SCR3UPP  DC    CL3'XXX',X'1DF0',AL3(TURQ),C'(YES or NO)'
         DC    X'114B50'           R10,C01
         DC    X'1DF5',AL3(TURQ),C'Load append= ',X'1DC9',AL3(RED)
SCR3APP  DC    CL3'XXX',X'1DF0',AL3(TURQ),C'(YES or NO)'
         DC    X'114BF8',X'1DF5',AL3(TURQ)       R10,C41
         DC    C'Line numbers=',X'1DC9',AL3(RED)
SCR3NUM  DC    CL3'XXX',X'1DF0',AL3(TURQ),C'(YES or NO)'
         DC    X'114DF1'           R12,C02
         DC    AL3(YELLOW),C'Data set information ',AL3(TURQ)
         DC    C'(blank ',AL3(WHITE),C'Dsname ',AL3(TURQ)
         DC    C'to edit current workspace)'
         DC    X'114F40'           R13,C01
         DC    X'1DF5',C'Member=',X'1DC913',AL3(RED)
SCR3MEM  DC    CL8' ',X'1DF5',AL3(TURQ),C',Dsname=',X'1DC9',AL3(RED)
SCR3DSN  DC    CL44' ',X'1DF0'     DSNAME
         DC    X'115050'           R14,C01
         DC    X'1DF5',AL3(TURQ),C'Volume=',X'1DC9',AL3(RED)
SCR3VOL  DC    CL6' ',X'1DF5',X'1150E2'
         DC    AL3(TURQ),C',Ddname=',X'1DF0',AL3(WHITE) R14,C19
SCR3DDN  DC    C'RPFWORK ',X'1DF0' DDNAME
         DC    X'11D2F1',AL3(YELLOW) R16,C02
         DC    C'Or select 1 of the datasets below (Enter any char. befx
               ore the dataset name):'
         DC    X'11D4401DC9',AL3(RED)  R17,C01
SCR3SEL1 DC    C' ',X'1DF9',AL3(WHITE),C'1>',X'1DC9',AL3(RED)
SCR3DSN1 DC    CL44' ',X'1DF5',AL3(TURQ),CL8',Volume=',X'1DC9',AL3(RED)
SCR3VOL1 DC    CL6' ',X'1DF0',X'1DF5',AL3(TURQ),C'**',X'1DF0'
         DC    X'11D5501DC9'           R18,C01
SCR3SEL2 DC    C' ',X'1DF9',AL3(WHITE),C'2>',X'1DC9',AL3(RED)
SCR3DSN2 DC    CL44' ',X'1DF5',AL3(TURQ),CL8',Volume=',X'1DC9',AL3(RED)
SCR3VOL2 DC    CL6' ',X'1DF0',X'1DF5',AL3(TURQ),C'**',X'1DF0'
         DC    X'11D6601DC9'           R19,C01
SCR3SEL3 DC    C' ',X'1DF9',AL3(WHITE),C'3>',X'1DC9',AL3(RED)
SCR3DSN3 DC    CL44' ',X'1DF5',AL3(TURQ),CL8',Volume=',X'1DC9',AL3(RED)
SCR3VOL3 DC    CL6' ',X'1DF0',X'1DF5',AL3(TURQ),C'**',X'1DF0'
         DC    X'11D7F01DC9'           R20,C01
SCR3SEL4 DC    C' ',X'1DF9',AL3(WHITE),C'4>',X'1DC9',AL3(RED)
SCR3DSN4 DC    CL44' ',X'1DF5',AL3(TURQ),CL8',Volume=',X'1DC9',AL3(RED)
SCR3VOL4 DC    CL6' ',X'1DF0',X'1DF5',AL3(TURQ),C'**',X'1DF0'
         DC    X'11D9401DC9'           R21,C01
SCR3SEL5 DC    C' ',X'1DF9',AL3(WHITE),C'5>',X'1DC9',AL3(RED)
SCR3DSN5 DC    CL44' ',X'1DF5',AL3(TURQ),CL8',Volume=',X'1DC9',AL3(RED)
SCR3VOL5 DC    CL6' ',X'1DF0',X'1DF5',AL3(TURQ),C'**',X'1DF0'
         DC    X'115A501DC9'           R22,C01
SCR3SEL6 DC    C' ',X'1DF9',AL3(WHITE),C'6>',X'1DC9',AL3(RED)
SCR3DSN6 DC    CL44' ',X'1DF5',AL3(TURQ),CL8',Volume=',X'1DC9',AL3(RED)
SCR3VOL6 DC    CL6' ',X'1DF0',X'1DF5',AL3(TURQ),C'**',X'1DF0'
         DC    X'115B601DC9'           R23,C01
SCR3SEL7 DC    C' ',X'1DF9',AL3(WHITE),C'7>',X'1DC9',AL3(RED)
SCR3DSN7 DC    CL44' ',X'1DF5',AL3(TURQ),CL8',Volume=',X'1DC9',AL3(RED)
SCR3VOL7 DC    CL6' ',X'1DF0',X'1DF5',AL3(TURQ),C'**',X'1DF0'
         DC    X'115CF01DC9'           R24,C01
SCR3SEL8 DC    C' ',X'1DF9',AL3(WHITE),C'8>',X'1DC9',AL3(RED)
SCR3DSN8 DC    CL44' ',X'1DF5',AL3(TURQ),CL8',Volume=',X'1DC9',AL3(RED)
SCR3VOL8 DC    CL6' ',X'1DF0',X'1DF5',AL3(TURQ),C'**',X'1DF0'
SCR3LEN  EQU   *-SCR3TXT           LENGTH SCREEN
ERR2TXT  DC    CL22'--------Invalid option'
ERR5TXT  DC    CL22'Alloc failed, rc= XXXX'
         TITLE 'WORKAREAS AND CONSTANTS'
BUFDSN   DS    CL44
BUFVOL   DS    CL6
BUFMEM   DS    CL8
F0000    DC    F'0'                    0000
F0004    DC    F'4'                    0004
F0012    DC    F'12'                   0012
F0020    DC    F'20'                   0020
F0032    DC    F'32'                   0032
ZERO     DC    PL3'0'                  000
BUFCMD   DS    C
DOUBLEWD DC    D'0'                    DOUBLE WORD
DAIRPARM DC    F'0'                    PARM RPFDAIR
SEL1     DS    C                       selections
SEL2     DS    C                             from
SEL3     DS    C                                 the
SEL4     DS    C                                      dataset
SEL5     DS    C                                            list
SEL6     DS    C
SEL7     DS    C
SEL8     DS    C
SW       DS    X
$NOSEL   EQU   128                     nothing selected from sel.list
         DS    0F                      BOUNDARY
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         LTORG                         LITERAL POOL
         TITLE 'RPFCOMM DSECT'
COMMAREA RPFCOMM ,                     COMMON AREA
         END   ,                       END
