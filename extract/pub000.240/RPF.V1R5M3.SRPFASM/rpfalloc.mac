RPFALLOC TITLE 'Data set utility'
*---------------------------------------------------------------------*
*                                                                     *
*        MODULE:        RPFALLOC.                                     *
*                                                                     *
*        FUNCTION:      Present an allocation menu for creation of    *
*                       a new dataset or deletion of a dataset.       *
*                       In option 1, you are able to                  *
*                       allocate a sequential or partitioned dataset. *
*                       The RECFM, LRECL and BLKSIZE can be chosen.   *
*                       If an error occurs during allocation/deletion *
*                       a suitable message will be displayed with     *
*                       retry possibilities.                          *
*                       In option 2, you are able to delete a dataset *
*                                                                     *
*        MODIFICATIONS:                                               *
*        2002/08/05 RPR: ADD RECFM, LRECL AND BLKSIZE IN ALLOCATION   *
*        2002/09/20 RPR: ADD OPTION 2, DELETE A DATA SET              *
*        2002/10/02 RPR: Free rpfwork datasets if current ds deleted  *
*                        and OPEN/CLOSE allocated PS dataset to       *
*                        avoid an 001 abend if edited afterwards   @rp3
*        2002/11/01 RPr  Check of alias (hlq) deleted              @rp4
*        2002/12/03 RPr  Add 7 color support in screen             @rp5
*                                                                     *
*------------------------------------------ (C)-2002 SKYBIRD SYSTEMS -*
         SPACE 2
RPFALLOC CSECT
         SAVE  (14,12),,*              SAVE REGISTERS
         USING RPFALLOC,R15            GET ADDRESSABILITY
         LA    R14,SAVE                SAVE AREA
         ST    R14,8(0,R13)            FORWARD POINTER
         ST    R13,SAVE+4              BACKWARD POINTER
         LR    R13,R14
         B     START                   BRANCH AROUND SAVEAREA
SAVE     DC    18F'-1'                 SAVE AREA
         DC    CL8'&SYSDATE',C' ',CL8'&SYSTIME'
START    DS    0H
         DROP  R15                     KILL LOCAL ADDRESSABILITY
         LA    R12,2048(R13)           SECOND BASE
         LA    R12,2048(R12)
         USING SAVE,R13,R12            GET ADDR OVER SAVE
         L     R11,0(R1)               PARAMETER COMMAREA
         USING COMMAREA,R11            GET ADDR
         MVC   SCR1TXT(2),=X'27F5'     MOVE DEFAULT WRITE CC
         MVC   SCR2LAST+1(2),=X'5CF1'  DEFAULT R24,C02 FOR LAST LNE@rp5
         MVI   SCR2CMD,C' '            No default in command
         CLC   COMMSIZE,=H'43'         43 LINES RECEIVED ?
         BE    START1                  YES: BRANCH
         CLC   COMMSIZE,=H'32'         32 LINES RECEIVED ?
         BE    START2                  YES: BRANCH
         B     START3                  ELSE DEFAULT
START1   MVC   SCR1TXT(2),=X'277E'     WRITE CC ALTERNATE
         MVC   SCR2LAST+1(2),=X'F461'  R43,C02 FOR LAST LINE       @rp5
         B     START3                  AND BRANCH
START2   MVC   SCR1TXT(2),=X'277E'     WRITE CC ALTERNATE
         MVC   SCR2LAST+1(2),=X'E6F1'  R32,C01 FOR LAST LINE       @rp5
START3   DS    0H
         MVC   SCR2UID(7),USERID       USERID INTO SCREEN
         LA    R3,SCR2UID+7            REMOVE TRAILING BLANKS
         LA    R4,7                    MAX 7 TIMES
UID1     CLI   0(R3),C' '              TRAILING BLANK FOUND ?
         BNE   UID99                   NO: EXIT
         MVI   0(R3),C'-'              REPLACE BY HYPHEN
         BCTR  R3,0                    PREVIOUS POS.
         BCT   R4,UID1                 LOOP UNTIL ALL DONE
UID99    DS    0H
         MVI   MSG2,C'-'               CLEAR
         MVC   MSG2+1(L'MSG2-1),MSG2        MESSAGE
         MVC   SCR2UNIT,COMMSTOR       MOVE DEFAULT UNIT
         CLC   SCR2PRE,BLANKS          Field contains blanks?
         BNE   PUT1                    No: do not alter
         MVC   SCR2PRE,BLANKS          Clear SCR2PRE field
         MVC   SCR2PRE(7),USERID       MOVE DEFAULT USERID
PUT1     TPUT  SCR1TXT,SCR1LEN,FULLSCR WRITE SCREEN
PUT2     TPUT  SCR2TXT,SCR2LEN,FULLSCR WRITE SCREEN
GET1     L     R3,COMMSCR              LOAD SCREEN ADDRESS
         TGET  (R3),400,ASIS           READ THE SCREEN
         LR    R4,R1                   SAVE LENGTH
*        DO AN TGET ASIS TO OBTAIN THE AID BYTE
*        AFTER THE TGET ASIS REMOVE THE SBA'S FROM THE OUTPUT
         CLI   0(R3),X'F3'             PFK3 (END) PRESSED
         BE    RETURN                  YES: EXIT
         CLI   0(R3),X'C3'             PFK15 (END) PRESSED
         BE    RETURN                  YES: EXIT
         XR    R2,R2                    INIT OUTPUT LENGTH
         LR    R4,R1                   SAVE INPUT LENGTH
         SH    R4,=H'3'                SKIP AID AND CURSOR ADDRESS
         C     R4,F0000                REGISTER ZERO
         BNH   CONV099                 NOT HIGH: END OF ROUTINE
         LA    R3,3(R3)
         LA    R5,BUFFER               OUTPUT ADDRESS
*        INPUT SCREEN IS POINTED TO BY R3
*        OUTPUT SCREEN IS POINTED TO BY R5
*        THE NEXT SECTION WILL REMOVE ALL THE SBA'S
CONV001  CLI   0(R3),X'11'             SET BUFFER ADDRESS ?
         BE    CONV003                 YES: SKIP NEXT 3 BYTES INPUT
CONV002  MVC   0(1,R5),0(R3)           MOVE INPUT BYTE
         LA    R3,1(R3)                NEXT BYTE INPUT
         LA    R2,1(R2)                COUNT OUTPUT BYTES
         LA    R5,1(R5)                NEXT BYTE OUTPUT
         BCT   R4,CONV001              TEST NEXT BYTE
         B     CONV099                 END OF ROUTINE
CONV003  LA    R3,3(R3)                SKIP 3 BYTES INPUT
         BCTR  R4,0                    MINUS 1 BCT
         BCTR  R4,0                    MINUS 1 BCT
         C     R4,F0000                REGISTER ZERO ?
         BNH   CONV099                 YES: TERMINATE CONVERSION
         BCT   R4,CONV001              TEST NEXT BYTE
CONV099  LR    R1,R2                   OUTPUT LENGTH IN REGISTER 1
         OC    BUFFER,BLANKS           XLATE TO UPPERCASE
         LTR   R1,R1                   NO INPUT RECEIVED ?
         BZ    PUT1                    RESHOW THE SCREEN IF YES
         MVI   MSG2,C'-'               CLEAR
         MVC   MSG2+1(21),MSG2              MESSAGE
         XC    CMD,CMD                 CLEAR COMMAND
*---------------------------------------------------------------------*
* REGISTERS USED IN SCAN.. ROUTINE:
* R3 = LENGTH COUNTER
* R4 = ADDRESS OUTPUT
* R5 = ADDRESS INPUT
* R6 = LENGTH OF BUFFER AFTER TGET
*---------------------------------------------------------------------*
SCAN00   LA    R5,BUFFER               BUFFER ADDRESS
         LR    R6,R1                   ACT LENGTH OF BUFFER
         LA    R4,CMD                  PICKUP COMMAND
SCAN01   CLC   0(12,R5),=C'PREFIX     =' SCAN FOR KEYWORD
         BE    SCAN03                  BRANCH IF FOUND
         MVC   0(1,R4),0(R5)           MOVE 1 BYTE COMMAND
         LA    R5,1(R5)                NEXT BYTE
         BCT   R6,SCAN01               TEST AGAIN
         B     PUT1                    CLEAR KEY PRESSED
SCAN03   MVC   PREFIX,BLANKS           CLEAR PREFIX
         LA    R4,PREFIX               LOAD ADDRESS
         LA    R5,12(R5)               POINT AFTER 'PREFIX='
         SH    R6,=H'12'               SUBTRACT THE LENGTH
         XR    R3,R3                   LENGTH OF PREFIX
SCAN05   CLC   0(12,R5),=C'LIBRARY    =' SCAN FOR KEYWORD
         BE    SCAN07                  BRANCH IF FOUND
         MVC   0(1,R4),0(R5)           MOVE BYTE PREFIX
         CLI   0(R5),C' '              BLANK IN BUFFER
         BE    SCAN051                 DO NOT COUNT BLANKS
         LA    R3,1(R3)                COUNT LENGTH OF PREFIX
SCAN051  LA    R5,1(R5)                NEXT BYTE IN BUFFER
         LA    R4,1(R4)                NEXT BYTE IN PREFIX
         BCT   R6,SCAN05               TEST NEXT BYTE
         B     PUT1                    CLEAR KEY PRESSED
SCAN07   MVC   LIBRARY,BLANKS          CLEAR LIBRARY
         LA    R4,LIBRARY              LOAD ADDRESS
         STH   R3,PRELEN               SAVE LENGTH
         MVC   SCR2PRE,PREFIX          Move PREFIX into screen
         LA    R5,12(R5)               POINT AFTER 'LIBRARY='
         SH    R6,=H'12'               SUBTRACT THE LENGTH
         XR    R3,R3                   LENGTH OF LIBRARY
SCAN09   CLC   0(12,R5),=C'TYPE       =' SCAN FOR KEYWORD
         BE    SCAN11                  BRANCH IF FOUND
         MVC   0(1,R4),0(R5)           MOVE BYTE LIBRARY
         CLI   0(R5),C' '              BLANK IN BUFFER
         BE    SCAN091                 DO NOT COUNT BLANKS
         LA    R3,1(R3)                COUNT LENGTH OF LIBRARY
SCAN091  LA    R5,1(R5)                NEXT BYTE IN BUFFER
         LA    R4,1(R4)                NEXT BYTE IN LIBRARY
         BCT   R6,SCAN09               TEST NEXT BYTE
         B     PUT1                    CLEAR KEY PRESSED
SCAN11   MVC   TYPE,BLANKS             CLEAR TYPE
         LA    R4,TYPE                 LOAD ADDRESS
         STH   R3,LIBLEN               SAVE LENGTH
         MVC   SCR2LIB,LIBRARY         MOVE INTO SCREEN
         LA    R5,12(R5)               POINT AFTER 'TYPE='
         SH    R6,=H'12'               SUBTRACT THE LENGTH
         XR    R3,R3                   LENGTH OF TYPE
SCAN12   CLC   0(12,R5),=C'UNIT       =' SCAN FOR KEYWORD
         BE    SCAN12B                 BRANCH IF FOUND
         MVC   0(1,R4),0(R5)           MOVE BYTE TYPE
         CLI   0(R5),C' '              BLANK IN BUFFER
         BE    SCAN12A                 DO NOT COUNT BLANKS
         LA    R3,1(R3)                COUNT LENGTH OF TYPE
SCAN12A  LA    R5,1(R5)                NEXT BYTE IN BUFFER
         LA    R4,1(R4)                NEXT BYTE IN TYPE
         BCT   R6,SCAN12               TEST NEXT BYTE
         B     PUT1                    CLEAR KEY PRESSED
SCAN12B  MVC   BUFUNIT,BLANKS          CLEAR VOL
         LA    R4,BUFUNIT              LOAD ADDRESS
         STH   R3,TYPLEN               SAVE LENGTH
         MVC   SCR2TYP,TYPE            MOVE INTO SCREEN
         LA    R5,12(R5)               POINT AFTER 'UNIT='
         SH    R6,=H'12'               SUBTRACT THE LENGTH
*
SCAN13   CLC   0(10,R5),=C'RECFM    =' SCAN FOR KEYWORD
         BE    SCAN13A                 BRANCH IF FOUND
         MVC   0(1,R4),0(R5)           MOVE BYTE UNIT
         LA    R5,1(R5)                NEXT BYTE IN BUFFER
         LA    R4,1(R4)                NEXT BYTE IN TYPE
         BCT   R6,SCAN13               TEST NEXT BYTE
         B     PUT1                    CLEAR KEY PRESSED
SCAN13A  MVC   BUFRECFM,BLANKS         CLEAR RECFM
         LA    R4,BUFRECFM             LOAD ADDRESS
         MVC   SCR2UNIT,BUFUNIT        MOVE INTO SCREEN
         LA    R5,10(R5)               POINT AFTER 'RECFM='
         SH    R6,=H'10'               SUBTRACT THE LENGTH
         XR    R3,R3                   LENGTH OF VOLUME
SCAN13B  CLC   0(12,R5),=C'VOLUME     =' SCAN FOR KEYWORD
         BE    SCAN14                  BRANCH IF FOUND
         MVC   0(1,R4),0(R5)           MOVE BYTE UNIT
         LA    R5,1(R5)                NEXT BYTE IN BUFFER
         LA    R4,1(R4)                NEXT BYTE IN TYPE
         BCT   R6,SCAN13B              TEST NEXT BYTE
         B     PUT1                    CLEAR KEY PRESSED
SCAN14   MVC   VOL,BLANKS              CLEAR VOL
         LA    R4,VOL                  LOAD ADDRESS
         MVC   SCR2RECF,BUFRECFM       MOVE INTO SCREEN
         LA    R5,12(R5)               POINT AFTER 'VOLUME='
         SH    R6,=H'12'               SUBTRACT THE LENGTH
         XR    R3,R3                   LENGTH OF VOLUME
*
SCAN14A  CLC   0(10,R5),=C'LRECL    =' SCAN FOR KEYWORD
         BE    SCAN14C                 BRANCH IF FOUND
         MVC   0(1,R4),0(R5)           MOVE BYTE VOLUME
         CLI   0(R5),C' '              BLANK IN BUFFER
         BE    SCAN14B                 DO NOT COUNT BLANKS
         LA    R3,1(R3)                COUNT LENGTH OF VOLUME
SCAN14B  LA    R5,1(R5)                NEXT BYTE IN BUFFER
         LA    R4,1(R4)                NEXT BYTE IN VOLUME
         BCT   R6,SCAN14A              TEST NEXT BYTE
         B     PUT1                    CLEAR KEY PRESSED
SCAN14C  MVC   BUFLRECL,BLANKS         CLEAR VOL
         LA    R4,BUFLRECL             LOAD ADDRESS
         STH   R3,VOLLEN               SAVE LENGTH
         MVC   SCR2VOL,VOL             MOVE INTO SCREEN
         LA    R5,10(R5)               POINT AFTER 'LRECL='
         SH    R6,=H'10'               SUBTRACT THE LENGTH
         XR    R3,R3                   CLEAR LENGTH OF LRECL
*
SCAN14D  CLC   0(12,R5),=C'SPACE UNIT =' SCAN FOR KEYWORD
         BE    SCAN15                  BRANCH IF FOUND
         MVC   0(1,R4),0(R5)           MOVE BYTE LRECL
         CLI   0(R5),C' '              BLANK IN BUFFER
         BE    SCAN14E                 DO NOT COUNT BLANKS
         LA    R3,1(R3)                COUNT LENGTH OF LRECL
SCAN14E  LA    R5,1(R5)                NEXT BYTE IN BUFFER
         LA    R4,1(R4)                NEXT BYTE IN LRECL
         BCT   R6,SCAN14D              TEST NEXT BYTE
         B     PUT1                    CLEAR KEY PRESSED
SCAN15   MVC   SPC,BLANKS              CLEAR SPC
         LA    R4,SPC                  LOAD ADDRESS
         STH   R3,LRECLLEN             SAVE LENGTH
         MVC   SCR2LREC,BUFLRECL       MOVE INTO SCREEN
         LA    R5,12(R5)               POINT AFTER 'SPACE UNIT='
         SH    R6,=H'12'               SUBTRACT THE LENGTH
         XR    R3,R3                   LENGTH OF SPC
*
SCAN15A  CLC   0(10,R5),=C'BLKSIZE  =' SCAN FOR KEYWORD
         BE    SCAN16                  BRANCH IF FOUND
         MVC   0(1,R4),0(R5)           MOVE BYTE SPACE UNIT
         CLI   0(R5),C' '              BLANK IN BUFFER
         BE    SCAN15B                 DO NOT COUNT BLANKS
         LA    R3,1(R3)                COUNT LENGTH OF VOLUME
SCAN15B  LA    R5,1(R5)                NEXT BYTE IN BUFFER
         LA    R4,1(R4)                NEXT BYTE IN LRECL
         BCT   R6,SCAN15A              TEST NEXT BYTE
         B     PUT1                    CLEAR KEY PRESSED
SCAN16   MVC   BUFBLKSZ,BLANKS         CLEAR BLKSIZE
         LA    R4,BUFBLKSZ             LOAD ADDRESS
         STH   R3,SPCLEN               SAVE LENGTH
         MVC   SCR2SPC,SPC             MOVE INTO SCREEN
         LA    R5,10(R5)               POINT AFTER 'BLKSIZE='
         SH    R6,=H'10'               SUBTRACT THE LENGTH
         XR    R3,R3                   LENGTH OF BLKSIZE
*
SCAN17   CLC   0(08,R5),=C'PRIMARY='   SCAN FOR KEYWORD
         BE    SCAN19                  BRANCH IF FOUND
         MVC   0(1,R4),0(R5)           MOVE BYTE BLKSIZE
         CLI   0(R5),C' '              BLANK IN BUFFER
         BE    SCAN171                 DO NOT COUNT BLANKS
         LA    R3,1(R3)                COUNT LENGTH OF VOLUME
SCAN171  LA    R5,1(R5)                NEXT BYTE IN BUFFER
         LA    R4,1(R4)                NEXT BYTE IN BLKSIZE
         BCT   R6,SCAN17               TEST NEXT BYTE
         B     PUT1                    CLEAR KEY PRESSED
SCAN19   MVC   PRI,BLANKS              CLEAR PRI
         LA    R4,PRI                  LOAD ADDRESS
         STH   R3,BLKSLEN              SAVE LENGTH
         MVC   SCR2BLK,BUFBLKSZ        MOVE INTO SCREEN
         LA    R5,8(R5)                POINT AFTER 'PRIMARY='
         SH    R6,=H'8'                SUBTRACT THE LENGTH
         XR    R3,R3                   LENGTH OF PRI
SCAN21   CLC   0(10,R5),=C'SECONDARY=' SCAN FOR KEYWORD
         BE    SCAN23                  BRANCH IF FOUND
         MVC   0(1,R4),0(R5)           MOVE BYTE PRI
         CLI   0(R5),C' '              BLANK IN BUFFER
         BE    SCAN211                 DO NOT COUNT BLANKS
         LA    R3,1(R3)                COUNT LENGTH OF PRI
SCAN211  LA    R5,1(R5)                NEXT BYTE IN BUFFER
         LA    R4,1(R4)                NEXT BYTE IN PRI
         BCT   R6,SCAN21               TEST NEXT BYTE
         B     PUT1                    CLEAR KEY PRESSED
SCAN23   MVC   SEC,BLANKS              CLEAR SEC
         LA    R4,SEC                  LOAD ADDRESS
         STH   R3,PRILEN               SAVE LENGTH
         MVC   SCR2PRI,PRI             MOVE INTO SCREEN
         LA    R5,10(R5)               POINT AFTER 'SECONDARY='
         SH    R6,=H'10'               SUBTRACT THE LENGTH
         XR    R3,R3                   LENGTH OF SEC
SCAN25   CLC   0(10,R5),=C'DIRECTORY=' SCAN FOR KEYWORD
         BE    SCAN27                  BRANCH IF FOUND
         MVC   0(1,R4),0(R5)           MOVE BYTE SEC
         CLI   0(R5),C' '              BLANK IN BUFFER
         BE    SCAN251                 DO NOT COUNT BLANKS
         LA    R3,1(R3)                COUNT LENGTH OF SEC
SCAN251  LA    R5,1(R5)                NEXT BYTE IN BUFFER
         LA    R4,1(R4)                NEXT BYTE IN SEC
         BCT   R6,SCAN25               TEST NEXT BYTE
         B     PUT1                    CLEAR KEY PRESSED
SCAN27   DS    0H
         MVC   DIR,BLANKS              Clear # directory blocks
         LA    R4,DIR                  LOAD ADDRESS
         STH   R3,SECLEN               SAVE LENGTH
         MVC   SCR2SEC,SEC             MOVE INTO SCREEN
         LA    R5,10(R5)               POINT AFTER 'DIRECTORY='
         SH    R6,=H'10'               SUBTRACT THE LENGTH
         LA    R3,0                    LENGTH OF DIR
         C     R6,F0000                NO MORE BYTES LEFT ?
         BNH   SCAN33                  NO: SKIP MOVE DIRS
SCAN29   MVC   0(1,R4),0(R5)           MOVE BYTE DIR
         CLI   0(R5),C' '              BLANK IN BUFFER
         BE    SCAN31                  DO NOT COUNT BLANKS
         LA    R3,1(R3)                COUNT BYTES      DIR
SCAN31   LA    R4,1(R4)                NEXT BYTE DIR
         LA    R5,1(R5)                NEXT BYTE BUFFER
         BCT   R6,SCAN29               NEXT BYTE
SCAN33   STH   R3,DIRLEN               STORE LENGTH
         MVC   SCR2DIR,DIR             MOVE INTO SCREEN
         CLI   CMD,C'1'                ALLOCATE ?
         BE    CHECK01                 YES: SCAN THROUGH THE SCREEN
         CLI   CMD,C'2'                DELETE ?
         BE    CHECK01                 YES: SCAN THROUGH THE SCREEN
         CLI   CMD,C'X'                EXIT ?
         BE    RETURN                  END OF ROUTINE RC= 0008
         MVC   MSG2,ERR8TXT            MOVE ERROR MESSAGE
         B     PUT2                    RETRY
         TITLE 'CHECK THE ENTERED INPUT'
CHECK01  DS    0H
         MVC   SCR2CMD,CMD             Move command in screen
         LH    R6,PRELEN               PREFIX LEN
         MVC   DALDSN,BLANKS           MOVE BLANKS
         LA    R3,DALDSN               LOAD DSNAME
         LTR   R6,R6                   NO PREFIX SPECIFIED
         BNZ   CHECK03                 NO: GO ON
         MVC   MSG2(L'ERR1TXT),ERR1TXT MOVE ERROR MESSAGE
         B     PUT2                    TO ERROR ROUTINE
CHECK03  BCTR  R6,0                    MINUS 1 FOR EX
         EX    R6,MOVE1                MOVE PREFIX
         LA    R6,1(R6)                RESTORE R6
         AR    R3,R6                   IN DALDSN
         MVI   0(R3),C'.'              MOVE POINT BETWEEN LEVELS DSN
         LA    R3,1(R3)                NEXT BYTE
         LH    R6,LIBLEN               LENGTH OF LIBRARY
         LTR   R6,R6                   NO LIBRARY SPECIFIED
         BNZ   CHECK05                 NO: GO ON
         MVC   MSG2(L'ERR2TXT),ERR2TXT MOVE ERROR MESSAGE
         B     PUT2                    TO ERROR ROUTINE
CHECK05  DS    0H
         BCTR  R6,0                    MINUS 1 FOR EX
         EX    R6,MOVE2                MOVE PREFIX
         LA    R6,1(R6)                RESTORE R6
         AR    R3,R6                   IN DALDSN
         LH    R6,TYPLEN               LOAD LENGTH OF TYPE
         LTR   R6,R6                   NO TYPE SPECIFIED ?
         BZ    CHECK07                 NO: GO ON
         MVI   0(R3),C'.'              MOVE POINT BETWEEN LEVELS DSN
         LA    R3,1(R3)                NEXT BYTE
         BCTR  R6,0                    MINUS 1 FOR EX
         EX    R6,MOVE3                MOVE TYPE FIELD IN DSNAME
         B     CHECK07                 BRANCH AROUND EX INSTR
MOVE1    MVC   0(0,R3),PREFIX          *** EX ONLY ***
MOVE2    MVC   0(0,R3),LIBRARY         *** EX ONLY ***
MOVE3    MVC   0(0,R3),TYPE            *** EX ONLY ***
CHECK07  EQU   *
*        Check alias lines deleted from CHECK07 to CHECK13         @rp4
CHECK13  DS    0H
         MVC   INDEXNM(44),DALDSN      LOOK IF DSNAME ALLREADY PRESENT
         LOCATE LOC1                   LOOK IN CATALOG
         CLI   CMD,C'2'                DELETE A DATASET ?
         BE    CHECK50                 YES: BRANCH
         LTR   R15,R15                 NOT FOUND ?
         BNZ   CHECK15                 YES: ALLRIGTH
         MVC   MSG2(L'ERR4TXT),ERR4TXT MOVE ERROR MESSAGE
         B     PUT2                    DSNAME FOUND
         TITLE 'CHECK THE OTHER FIELDS ON THE SCREEN'
*---------------------------------------------------------------------*
*        Process SPACE parameters                                     *
*---------------------------------------------------------------------*
CHECK15  EQU   *
         CLC   SPC(3),=C'CYL'          ALLOC UNIT CYL SPEC. ?
         BE    CHECK17                 ALLRIGTH
         CLC   SPC(3),=C'TRK'          ALLOC UNIT TRK SPEC. ?
         BE    CHECK17                 YES: ALLRIGTH
         MVC   MSG2,ERR5TXT            MOVE ERROR MESSAGE
         B     PUT2                    VIEW ERROR SCREEN
CHECK17  EQU   *
         MVC   NUMFLD,PRI              PRIMARY SPACE
         MVC   NUMLEN,PRILEN           LENGTH
         BAL   R14,NUMTST              NUMERIC TEST
         LTR   R15,R15                 NUMERIC ?
         BZ    CHECK19                 YES: ALLRIGTH
CHECK18  MVC   MSG2,ERR6TXT            ERROR MESSAGE
         B     PUT2                    PRODUCE MESSAGE
CHECK19  STCM  R1,7,DALPRI             STORE PRI IN ALLOC BLK
         MVC   NUMFLD,SEC              SECONDARY SPACE
         MVC   NUMLEN,SECLEN           LENGTH
         BAL   R14,NUMTST              NUMERIC TEST
         LTR   R15,R15                 NUMERIC ?
         BNZ   CHECK18                 NO: ERROR
         STCM  R1,7,DALSEC             STORE INTO ALLOC BLK
         MVC   NUMFLD(4),DIR           DIRECTORY BLOCKS
         MVC   NUMLEN,DIRLEN           LENGTH
         BAL   R14,NUMTST              NUMERIC TEST
         LTR   R15,R15                 NUMERIC ?
         BNZ   CHECK18                 NO: ERROR
         STCM  R1,7,DALDIRB            STORE INTO ALLOC BLK
*---------------------------------------------------------------------*
*        PROCESS RECFM                                                *
*---------------------------------------------------------------------*
         LA    R4,RECFMTB              RECFM TABLE
         L     R6,#RECFM               NUMBER OF ENTRIES IN TABLE
         CLC   BUFRECFM,BLANKS         NO RECFM?
         BNE   CHECK22                 NO, TEST VALIDITY
         MVC   BUFRECFM,=CL4'FB'       DEFAULT RECFM
         MVC   SCR2RECF,=CL4'FB'       DEFAULT RECFM IN SCREEN
CHECK22  DS    0H
         CLC   BUFRECFM,0(R4)          DOES RECFM MATCH
         BE    CHECK24                 YES: PROCESS RECFM
         LA    R4,5(R4)                NEXT ENTRY IN TABLE
         BCT   R6,CHECK22              LOOP
         MVC   MSG2,ERRGTXT            MSG INVALID RECFM
         B     PUT2                    VIEW ERROR SCREEN
CHECK24  DS    0H
         MVC   TEMPRECF,4(R4)          MOVE BINARY VALUE RECFM
CHECK26  DS    0H
*---------------------------------------------------------------------*
*        PROCESS LRECL AND BLKSIZE                                    *
*---------------------------------------------------------------------*
         MVC   NUMFLD(5),BUFLRECL      MOVE LRECL
         MVC   NUMLEN,LRECLLEN         ACTUAL LENGTH OF FIELD
         BAL   R14,NUMTST              TEST
         LTR   R15,R15                 LRECL NUMERIC?
         BZ    CHECK30                 YES: BRANCH
         MVC   MSG2,ERR9TXT            LRECL INVALID
         B     PUT2                    VIEW ERROR SCREEN
CHECK30  DS    0H
         STCM  R1,3,TEMPRECL           STORE INTO TEMP FIELD
         CLC   TEMPRECL,=X'7FF8'       LRECL > 32760
         BNH   CHECK32                 NO: BRANCH
         MVC   MSG2,ERRBTXT            MOVE ERROR MSG
         B     PUT2                    VIEW ERROR SCREEN
CHECK32  DS    0H
         CLC   TEMPRECL,=H'0'          NO LRECL FILLED IN?
         BNE   CHECK34                 NO: BRANCH
         CLC   BUFRECFM,=CL4'U'        RECFM=U
         BE    CHECK35                 LRECL=0 IS ALLOWED WITH RECFM=U
         MVC   TEMPRECL,=H'80'         DEFAULT LRECL=80
         MVC   SCR2LREC,=CL4'80'       AND MOVE THAT INTO SCREEN
CHECK34  DS    0H
         CLC   TEMPRECL,=H'18'         AT LEAST 18 ?
         BNL   CHECK35                 YES: BRANCH
         MVC   MSG2,ERRHTXT            MOVE ERROR MESSAGE
         B     PUT2                    VIEW ERROR SCREEN
CHECK35  DS    0H
         MVC   NUMFLD(5),BUFBLKSZ      MOVE LRECL
         MVC   NUMLEN,BLKSLEN          ACTUAL LENGTH OF FIELD
         BAL   R14,NUMTST              TEST
         LTR   R15,R15                 LRECL NUMERIC?
         BZ    CHECK36                 YES: BRANCH
         MVC   MSG2,ERRATXT            BLKSIZE INVALID
         B     PUT2                    VIEW ERROR SCREEN
CHECK36  DS    0H
         STCM  R1,3,TEMPBLK            STORE INTO TEMP. FIELD
         CLC   TEMPBLK,=X'7FFF'        BLKSIZE > 32767 ?
         BNH   CHECK37                 NO: BRANCH
         MVC   MSG2,ERRCTXT            ERROR MSG (BLK > 32767)
         B     PUT2                    VIEW ERROR SCREEN
CHECK37  DS    0H
         CLC   TEMPBLK,=H'0'           NO BLKSIZE?
         BNE   CHECK40                 NO: BRANCH
         CLC   TEMPRECL,=H'0'          LRECL=0
         BNE   CHECK38                 NO: BRANCH
         MVC   TEMPBLK,=H'6144'        DEFAULT 6144 WITH LRECL=0
         MVC   SCR2BLK,=CL5'6144'      MOVE INTO SCREEN
         B     CHECK40                 AND BRANCH
CHECK38  DS    0H
         MVC   TEMPBLK,TEMPRECL        ELSE BLKSIZE=LRECL
         MVC   SCR2BLK,SCR2LREC        AND COPY INTO SCREEN
         CLI   BUFRECFM,C'V'           VARIABLE BLOCKED
         BNE   CHECK40                 NO, LEAVE BLKSIZE UNMODIFIED
         LH    R1,TEMPBLK              PICKUP BLKSIZE
         LA    R1,4(R1)                ADD 4
         STCM  R1,3,TEMPBLK            AND SAVE
         CVD   R1,DWB                  CONVERT TO ...
         UNPK  SCR2BLK,DWB             SET IN ...
         OI    SCR2BLK+4,X'F0'         SCREEN.
CHECK40  DS    0H
         CLC   TEMPBLK,=H'18'          BLKSIZE AT LEAST 18 ?
         BNL   CHECK41                 YES: OK
         MVC   MSG2,ERRJTXT            ERROR MSG (BLK < 18)
         B     PUT2                    VIEW ERROR SCREEN
CHECK41  DS    0H
         CLC   BUFRECFM(3),=C'VBS'     VARIABLE BLOCKED SPANNED?
         BE    CHECK44                 YES: BLKSIZE < LRECL ALLOWED
         CLC   TEMPRECL,TEMPBLK        RECORD LENGTH > BLKSIZE
         BNH   CHECK42                 BRANCH IF NOT
         MVC   MSG2,ERRDTXT            BLKSIZE < LRECL
         B     PUT2                    VIEW ERROR SCREEN
CHECK42  DS    0H
         CLI   BUFRECFM,C'V'           VARIABLE RECORDS?
         BNE   CHECK44                 NO: BRANCH
         LH    R1,TEMPBLK              PICK BLKSIZE
         LH    R2,TEMPRECL             PICK LRECL
         SR    R1,R2                   SUBTRACT
         C     R1,=F'4'                DIFFERENCE AT LEAST 4?
         BNL   CHECK44                 YES: OK, BRANCH
         MVC   MSG2,ERRETXT            LRECL+4 > BLKSIZE
         B     PUT2                    VIEW ERROR SCREEN
CHECK44  DS    0H
         CLI   BUFRECFM,C'F'           FIXED RECORDS?
         BNE   CHECKALC                NO: DO NOT TEST IF
*                                      BLKSIZE IS A MULTIPLE OF LRECL
         XR    R2,R2                   CLEAR EVEN REGISTER
         LH    R3,TEMPBLK              BLKSIZE
         LH    R4,TEMPRECL             LRECL
         DR    R2,R4                   DIVIDE
         LTR   R2,R2                   REMAINDER ZERO?
         BZ    CHECKALC                OK: BLK = MULTIPLE OF LRECL
         MVC   MSG2,ERRFTXT            MOVE ERROR MESSAGE
         B     PUT2                    VIEW ERROR SCREEN
CHECK50  DS    0H
         LTR   R15,R15                 FOUND ?
         BZ    CHECKDEL                YES: ALLRIGHT
         MVC   MSG2(L'ERRMTXT),ERRMTXT MOVE ERROR MESSAGE
         B     PUT2                    Dsname found
CHECKALC DS    0H
         BAL   R14,ALLOC               ALLOCATE THE DATASET
         B     PUT2                    RE-DISPLAY SCREEN
CHECKDEL DS    0H
         BAL   R14,DELETE              DELETE THE DATASET
         B     PUT1                    RE-DISPLAY SCREEN
         TITLE 'ALLOCATE THE DATASET'
ALLOC    DS    0H
         ST    R14,SAVE14              SAVE RETURN REG.
         MVC   TEMPPRI,DALPRI          Save PRI
         MVC   TEMPSEC,DALSEC          Save SEC
         MVC   TEMPDIR,DALDIRB         Save DIR
         SYALLOC DDN=RPFUT4,                                           X
               DISP1=NEW,DISP2=CATLG,                                  X
               DISP3=DELETE,SPTYP=CYL,VOL=VOL,                         X
               PRI=1,SEC=1,DIR=1,                                      X
               LRECL=TEMPRECL,BLKSIZE=TEMPBLK,DSORG=PS,RECFM=FB,       X
               DSN=INDEXNM,UNITA=BUFUNIT,                              X
               MF=E,DSALLOC=NO         BUILD SYALLOC PARM LIST
         MVC   DALPRI,TEMPPRI          RESTORE PRI
         MVC   DALSEC,TEMPSEC          RESTORE SEC
         MVC   DALDIRB,TEMPDIR         RESTORE DIR
         MVC   DALRECF,TEMPRECF        RESTORE RECFM
         LH    R4,VOLLEN               LENGTH OF VOLUME
         LTR   R4,R4                   NO VOLUME SPECIFIED ?
         BNZ   ALLOC03                 VOLUME SPECIFIED
         XC    TUVOL,TUVOL             CLEAR VOLUME TEXT UNIT
ALLOC03  CLC   SPC(3),=C'TRK'          TRACK ALLOCATION ?
         BNE   ALLOC05                 NO: DEFAULT CYL ALLOCATION
         MVC   TUTYPE,=A(DALTRK)       SPACE UNIT
ALLOC05  CLC   DALDIRB(3),=X'000000'   NO DIRECTORIES
         BNE   ALLOC07                 NO: BRANCH
         XC    TUDIR,TUDIR             CLEAR TEXT UNIT
ALLOC07  CLC   DALSEC(3),=X'000000'    NO SECONDARY SPACE ?
         BNE   ALLOC09                 NO: BRANCH
         XC    TUSEC,TUSEC             CLEAR TEXT UNIT
ALLOC09  DS    0H
         LA    R1,DALPTR               REQUEST BLOCK
         DYNALLOC                      ALLOCATE
         LTR   R15,R15                 ALLOCATE SUCCESSFUL ?
         BZ    ALLOC11                 YES: ALLRIGTH
         SYCONVHX IN=DAERROR,OUT=ERRORBC,L=2 CONVERT FEEDBACK FIELD
         MVC   ERR7TXT+18(4),ERRORBC   MOVE FEEDBACK CODE
         MVC   MSG2,ERR7TXT            MOVE ERROR MESSAGE
         B     ALLOC99                 PRODUCE MSG AND RETRY
ALLOC11  EQU   *
         CLC   TEMPDIR,=X'000000'      No directory blocks ?       @rp3
         BNE   ALLOC13                 No: PDS contains an EOF mark@rp3
         OPEN  (RPFUT4,(OUTPUT))       Yes: open for output        @rp3
         CLOSE RPFUT4                  and close to add EOF mark   @rp3
         FREEPOOL RPFUT4                                           @rp3
ALLOC13  DS    0H
         SYALLOC FREE=RPFUT4,MF=E      FREE THE ALLOCATED DATASET
         MVC   DSNAME,DALDSN           MOVE DSNAME INTO COMMAREA
         MVC   VOLUME,VOL              MOVE VOLUME INTO COMMAREA
         MVC   MEMBER,BLANKS           BLANK MEMBER INTO COMMAREA
         MVC   MSG2,MSG1TXT            MOVE ALLOCATION MESSAGE
ALLOC99  DS    0H
         L     R14,SAVE14              RESTORE REG.14
         BR    R14                     RETURN
         TITLE 'DELETE THE DATASET'
*---------------------------------------------------------------------*
*                                                                     *
*        DELETE ROUTINE:                                              *
*                                                                     *
*                      IN THIS ROUTINE THE DATASET WILL BE            *
*                      UNCATALOGUED AND DELETED.                      *
*                      IF AN ERROR OCCURS A SUITABLE MESSAGE          *
*                      WILL BE DISPLAYED                              *
*                                                                     *
*------------------------------------------ (C)-2002 SKYBIRD SYSTEMS -*
DELETE   DS    0H
         ST    R14,SAVE14              SAVE RETURN REG.
         MVC   SCR3DSN,INDEXNM         Move dataset to be deleted
DEL000   DS    0H
         TPUT  SCR3TXT,SCR3LEN,FULLSCR
         TGET  TEMP,10,ASIS            Get aidbyte
         LTR   R1,R1                   Input length is zero ?
         BZ    DEL000                  Yes: error
         CLI   TEMP,X'F3'              PF03 pressed ?
         BE    DEL002                  Yes cancel deletions
         CLI   TEMP,X'C3'              PF15 pressed ?
         BE    DEL002                  Yes cancel deletions
         CLI   TEMP,X'7C'              PF12 pressed ?
         BE    DEL001                  Yes: continue
         CLI   TEMP,X'4C'              PF24 pressed ?
         BNE   DEL000                  NO: Redisplay confirmation
DEL001   DS    0H
         CLI   LOCTYPE+2,X'20'         Is it a DASD dataset ?
         BE    DEL003                  Yes: proceed
         MVC   MSG2(L'ERRNTXT),ERRNTXT Error msg 'Data set not on dasd'
         B     DEL999                  GO TO MENU
DEL002   DS    0H
         MVC   MSG2(L'ERROTXT),ERROTXT MOVE ERROR MESSAGE
         B     DEL999                  GO TO MENU
DEL003   DS    0H
         CATALOG UNCAT                 UNCATALOG THE DATASET
         LTR   R15,R15                 UNCATLG OK ?
         BZ    DEL005                  YES: PROCEED
         MVC   MSG2(L'ERRKTXT),ERRKTXT MOVE ERROR MESSAGE
         B     DEL999                  GO TO MENU
DEL005   MVC   VOLTYPE,LOCTYPE         MOVE DEVICE TYPE
         MVC   SCRVOL,LOCVOL           MOVE VOLUME
         SCRATCH SCRATCH               SCRATCH THE DATASET
         LTR   R15,R15                 ALRIGTH ?
         BZ    DEL007                  YES: PROCEED
         MVC   MSG2(L'ERRLTXT),ERRLTXT MOVE ERROR MESSAGE
         B     DEL999                  GO TO MENU
DEL007   CLC   INDEXNM,DSNAME          DSNAME STILL ALLOCATED ?
         BNE   DEL009                  BRANCH IF NOT
         SYALLOC FREE=RPFWORK,MF=E     Free the                    @rp3
         SYALLOC FREE=RPFWORK2,MF=E         allocated datasets     @rp3
         NI    INFCODE3,255-$DAIRALC   Tell RPFDAIR to alloc next t@rp3
DEL009   DS    0H
         MVC   MSG2(L'MSG2TXT),MSG2TXT SUCCESSFUL DELETE MESSAGE
DEL999   DS    0H
         L     R14,SAVE14              RESTORE REG.14
         BR    R14                     RETURN
         TITLE 'RETURN TO RPFUTIL'
RETURN   L     R13,SAVE+4              LOAD CALLERS SAVEAREA
         RETURN (14,12),RC=0           RETURN TO XPFUTIL
         TITLE 'NUMERIC TEST ROUTINE'
*---------------------------------------------------------------------*
*                                                                     *
*        NUMTST ROUTINE: CHECK NUMERIC AND CONVERT TO BINARY          *
*                                                                     *
*        INPUT IS FIELD NUMFLD WHICH CONTAINS THE TESTED FIELD        *
*        AND NUMLEN THE ACTUAL LENGTH OF NUMFLD,                      *
*        OUTPUT IS A 4 BYTES BINARY FIELD PLACED IN REGISTER 1        *
*                                                                     *
*        RETURNCODES:                                                 *
*                   -00- FIELD IS NUMERIC                             *
*                   -04- FIELD IS NOT NUMERIC                         *
*                                                                     *
*------------------------------------------ (C)-2002 SKYBIRD SYSTEMS -*
         SPACE 2
NUMTST   EQU   *                       NUMERIC TEST
         ST    R14,SAVE14              SAVE RETURN REGISTER
         LA    R3,NUMFLD               TO BE TESTED FIELD
         LH    R4,NUMLEN               ACTUAL LENGTH
         LTR   R4,R4                   LENGTH ZERO ?
         BZ    NUM90                   YES: TAKE DEFAULT 0
NUM01    CLI   0(R3),C'0'              ZERO
         BL    NUM97                   LOW: ERROR
         CLI   0(R3),C'9'              NINE ?
         BH    NUM97                   HIGH: ERROR
         LA    R3,1(R3)                NEXT BYTE
         BCT   R4,NUM01
         LH    R4,NUMLEN               RELOAD LENGTH
         BCTR  R4,0                    MINUS 1 FOR EX
         EX    R4,PACK1                PACK THE RESULT
         CVB   R1,DWB                  CONVERT TO BINARY
         XR    R15,R15                 RC= 0000
         B     NUM99                   END OF ROUTINE
NUM90    XR    R1,R1                   CONVERTED FIELD IS ZERO
         XR    R15,R15                 RC= 0000
         B     NUM99                   END OF ROUTINE
NUM97    L     R15,F0004               NOT NUMERIC
NUM99    L     R14,SAVE14              RESTORE R14
         BR    R14                     GO TO CALLER
PACK1    PACK  DWB(8),NUMFLD(1)        *** EX ONLY ***
         TITLE 'SCREEN FORMATS'
SCR1TXT  DC    X'27F5C21140401DF8'     WRITE ERASE / R01 C00
SCR1LEN  EQU   *-SCR1TXT
SCR2TXT  DC    X'27F1C21140401DF8'     WRITE NO-ERASE
         DC    CL29'RPF Data set utility: userid= '
SCR2UID  DC    CL8' '
         DC    CL20'--------------------'
MSG2     DC    CL22'----------------------'
         DC    X'11C150',X'1DF8',C'Option ===>',X'1DC113'
SCR2CMD  DC    X'40',X'1DF0'
         DC    X'11C3F3',AL3(WHITE),C'1  ',AL3(TURQ)  R04,C04
         DC    C'ALLOCATE    - ',AL3(GREEN)
         DC    C'Allocate a dataset'
         DC    X'11C5C3',AL3(WHITE),C'2  ',AL3(TURQ)  R05,C04
         DC    C'DELETE      - ',AL3(GREEN)
         DC    C'Delete a dataset'
         DC    X'11C6D3',AL3(WHITE),C'X  ',AL3(TURQ)  R06,C04
         DC    C'EXIT        - ',AL3(GREEN)
         DC    C'Return'
         DC    X'114AC1',AL3(YELLOW)            R09,C02
         DC    C'Data set information'
         DC    X'114C60',X'1DF5',AL3(TURQ),C'Prefix     ='  R11,C01
         DC    X'1DC9',AL3(RED)
SCR2PRE  DC    CL14' ',X'1DF0'
         DC    X'114DF0',X'1DF5',AL3(TURQ),C'Library    ='  R12,C01
         DC    X'1DC9',AL3(RED)
SCR2LIB  DC    CL14' ',X'1DF0'
         DC    X'114F40',X'1DF5',AL3(TURQ),C'Type       ='  R13,C01
         DC    X'1DC9',AL3(RED)
SCR2TYP  DC    CL14' ',X'1DF0'
         DC    X'11D161',AL3(YELLOW)                     R15,C01
         DC    C'Volume, space and DCB info (option 1 only)'
         DC    X'11D440',X'1DF5',AL3(TURQ),C'Unit       =' R17,C01
         DC    X'1DC9',AL3(RED)
SCR2UNIT DC    CL8' ',X'1DF0',X'11D45C1DF5'
         DC    AL3(TURQ),C'RECFM    =',X'1DC9',AL3(RED)
SCR2RECF DC    CL4'FB',X'1DF0'
         DC    X'11D550',X'1DF5',AL3(TURQ),C'Volume     =' R18,C01
         DC    X'1DC9',AL3(RED)
SCR2VOL  DC    CL6' ',X'1DF0',X'11D56C1DF5'
         DC    AL3(TURQ),C'LRECL    =',X'1DD9',AL3(RED)
SCR2LREC DC    CL5'80',X'1DF0'
         DC    X'11D660',X'1DF5',AL3(TURQ),C'Space unit =' R19,C01
         DC    X'1DC9',AL3(RED)
SCR2SPC  DC    CL3'CYL',X'1DF0',X'11D67C1DF5'
         DC    AL3(TURQ),C'BLKSIZE  =',X'1DD9',AL3(RED)
SCR2BLK  DC    CL5'3120',X'1DF0'
         DC    X'11D940',X'1DF5',AL3(TURQ),C'Primary=',X'1DD9'  R21,C01
         DC    X'1DD9',AL3(RED)        Attr. higlight, mdt, num
SCR2PRI  DC    CL3'1  ',X'1DF5',AL3(TURQ),C'Secondary=',X'1DD9'
         DC    AL3(RED)
SCR2SEC  DC    CL3'0  ',X'1DF5',AL3(TURQ),C'Directory=',X'1DD9'
         DC    AL3(RED)
SCR2DIR  DC    CL3'0   ',X'1DF0'
SCR2LAST DC    X'115CF1'               R24,C02
         DC    AL3(TURQ)
         DC    C'Hit ',AL3(WHITE),C'PF03/15 ',AL3(TURQ)
         DC    C'to return'
SCR2LEN  EQU   *-SCR2TXT
*
SCR3TXT  DC    X'27F5C01140401DF8'
         DC    C'Confirm DELETE of data set '
SCR3DSN  DS    CL44
         DC    X'11C1D113'             R02,C02
         DC    X'11C3F0',X'1DF0'       R04,C01
         DC    C'Hit  ',X'1DF8',C'PF12/PF24',X'1DF0',C'To delete'
         DC    X'11C540',X'1DF0'       R05,C01
         DC    C'Press',X'1DF8',C'PF03/PF15',X'1DF0',C'To cancel'
SCR3LEN  EQU   *-SCR3TXT
BUFFER   DS    CL220
ERR1TXT  DC    CL22'--PREFIX not specified'
ERR2TXT  DC    CL22'-LIBRARY not specified'
*        ERR3TXT deleted                                           @rp4
ERR4TXT  DC    CL22'Dataset already exists'
ERR5TXT  DC    CL22'--Space not CYL or TRK'
ERR6TXT  DC    CL22'--Space values not num'
ERR7TXT  DC    CL22'-Allocation error XXXX'
ERR8TXT  DC    CL22'--------Invalid option'
ERR9TXT  DC    CL22'---------Invalid LRECL'
ERRATXT  DC    CL22'-------Invalid BLKSIZE'
ERRBTXT  DC    CL22'---------LRECL > 32760'
ERRCTXT  DC    CL22'-------BLKSIZE > 32767'
ERRDTXT  DC    CL22'-------LRECL > BLKSIZE'
ERRETXT  DC    CL22'-----LRECL+4 > BLKSIZE'
ERRFTXT  DC    CL22'BLK not mult. of LRECL'
ERRGTXT  DC    CL22'---------Invalid RECFM'
ERRHTXT  DC    CL22'------------LRECL < 18'
ERRJTXT  DC    CL22'----------BLKSIZE < 18'
ERRKTXT  DC    CL22'-UNCATLG error dataset'
ERRLTXT  DC    CL22'-Scratch error dataset'
ERRMTXT  DC    CL22'Dataset not in catalog'
ERRNTXT  DC    CL22'---Dataset not on DASD'
ERROTXT  DC    CL22'-------Delete rejected'
MSG1TXT  DC    CL22'-----Dataset allocated'
MSG2TXT  DC    CL22'-------Dataset deleted'
         TITLE 'VARIABLES CONSTANTS AND CONTROL BLOCKS'
RECFMTB  DS    0H
         DC    CL4'F',X'80'
         DC    CL4'FB',X'90'
         DC    CL4'FBM',X'92'
         DC    CL4'FBA',X'94'
         DC    CL4'FBS',X'98'
         DC    CL4'V',X'40'
         DC    CL4'VB',X'50'
         DC    CL4'VBM',X'52'
         DC    CL4'VBA',X'54'
         DC    CL4'VBS',X'58'
         DC    CL4'U',X'C0'
RECFME   DS    0H
#RECFM   DC    A((RECFME-RECFMTB)/5)
TEMP     DS    CL10
TEMPPRI  DS    CL3
TEMPSEC  DS    CL3
TEMPDIR  DS    CL3
TEMPBLK  DS    H
TEMPRECL DS    H
TEMPRECF DS    C
CMD      DS    C
PREFIX   DS    CL14
LIBRARY  DS    CL14
TYPE     DS    CL14
BUFUNIT  DS    CL8
BUFLRECL DS    CL5
BUFBLKSZ DS    CL5
BUFRECFM DS    CL4
VOL      DS    CL6
SPC      DS    CL3
PRI      DS    CL3
SEC      DS    CL3
DIR      DS    CL4
F0000    DC    F'0'
F0004    DC    F'4'
F0008    DC    F'8'
PRELEN   DS    H
LIBLEN   DS    H
TYPLEN   DS    H
VOLLEN   DS    H
SPCLEN   DS    H
PRILEN   DS    H
SECLEN   DS    H
DIRLEN   DS    H
LRECLLEN DS    H
BLKSLEN  DS    H
NUMFLD   DS    CL5                     FOR NUMERIC TEST
NUMLEN   DS    H                       FOR NUMERIC TEST
DWB      DS    D                       FOR CVD/CVB INSTRUCTIONS
SAVE14   DS    F                       FOR REGISTER 14
ERRORBC  DS    CL4                     FEEDBACK ERRORCODE DYNALLOC
INDEXNM  DS    CL44
*
         DS    0F
LOC1     CAMLST NAME,INDEXNM,,LOCAREA
LOCAREA  DS    0D
         DS    CL2
LOCTYPE  DS    CL4                     DEVICE TYPE
LOCVOL   DS    CL6                     FOUND VOLUME
         DS    CL253                   REST OF LOCAREA
SCRATCH  CAMLST SCRATCH,INDEXNM,,VOLLIST,,OVRD
         DS    0D
VOLLIST  DC    H'1'                    NUMBER OF VOLUMES
VOLTYPE  DC    XL4'0'                  DEVICE TYPE
SCRVOL   DS    CL6
         DC    H'0'                    SCRATCH STATUS CODE
UNCAT    CAMLST UCATDX,INDEXNM         UNCATALOG ENTRY
*
         PRINT NOGEN                   SUPPRESS PRINT FOR DCB
RPFUT4   DCB   DDNAME=RPFUT4,DSORG=PS,MACRF=PM                     @rp3
         PRINT GEN
         TITLE 'ALLOCATION CONTROL BLOCKS'
         SYALLOC MF=L
         TITLE 'RPFCOMM DSECT'
COMMAREA RPFCOMM ,                     COMMON AREA
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         END
