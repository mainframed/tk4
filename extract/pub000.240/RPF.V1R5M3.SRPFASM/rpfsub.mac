RPFSUB   TITLE 'S U B M I T  ROUTINE'
*--------------------------------------------------------------------**
*                                                                     *
*        MODULE         RPFSUB.                                       *
*                                                                     *
*        FUNCTION:      SUBMIT THE WORKAREA WHICH IS POINTED          *
*                       BY THE FIELD FIRSTREC IN RPFCOMM TO THE       *
*                       JOB EXECUTION QUEUE.                          *
*                       AN INTERNAL READER WILL BE ALLOCATED TO       *
*                       PERFORM THE SUBMIT FUNCTION (COMSUB=TSO)   @RP1
*                       - OR - A DATASET WILL BE ALLOCATED, TO     @RP1
*                       WHICH THE WORKSPACE WILL BE WRITTEN.       @RP1
*                       AFTER THIS THE TSO COMMAND PROCESSOR       @RP1
*                       'SUBMIT' WILL BE INVOKED.                  @RP1
*                                                                     *
*                       IF PARAMETER SUBMIT=TSO IS IN EFFECT, THE     *
*                       WORKSPACE WILL BE WRITTEN ON A NEW ALLOCATED  *
*                       DATASET AND THE TSO SUBMIT COMMAND WILL BE    *
*                       INVOKED                                       *
*                                                                     *
*                       REG 1 AT ENTRY CONTAINS AN ADDRESS            *
*                       OF TWO FULLWORDS: THE FIRST IS THE RPFCOMM    *
*                       AREA ADDRESS, WICH WILL BE LOADED IN R7       *
*                       FULLWORD 2 IS THE ADDRESS OF A 8 BYTE FIELD   *
*                       WHICH SHOULD BE RETURN TO THE CALL WITH A     *
*                       JOBNAME. THIS ADDRESS SHOULD BE LOADED IN R8  *
*                                                                     *
*        RETURNCODES:   0 SUBMIT OK                                   *
*                       4 ALLOCATION INTERNAL READER FAILED.          *
*                       8 NO JOB STATEMENT FOUND.                     *
*                                                                     *
*        UPDATE AT JUNE 21,2001 BY ROB PRINS:                         *
*        DO NOT SUBMIT INSERTED LINES WITH NO DATA                    *
*        12/12/2003: CHECK COMMSUB. IF 'TSO' SUBMIT VIA TSO SUBMIT @RP1
*        04/04/2004: LEAVE FULLSCR MODE ON IF 27X132 SCREEN        @RP2
*                                                                     *
*------------------------------------------ (C)-2004 SKYBIRD SYSTEMS -*
         SPACE 2
RPFSUB   CSECT
         SAVE  (14,12),,*              SAVE REGISTERS
         USING RPFSUB,R15              TEMP ADDRESSABILITY
         LA    R14,SAVE                SAVE AREA
         ST    R14,8(0,R13)            FORWARD POINTER
         ST    R13,SAVE+4              BACKWARD POINTER
         LR    R13,14
         B     START                   BRANCH AROUND SAVEAREA
SAVE     DC    18F'-1'                 SAVE AREA
         DC    CL8'&SYSDATE',C' ',CL8'&SYSTIME'
START    DS    0H                      START OF PROGRAM
         DROP  R15                     KILL TEMP ADDRESSABILITY
         USING SAVE,R13                GET ADDRESSABLITY VIA 13
         L     R1,0(R1)                PICKUP POINTER TO SUBLIST
         LM    R7,R8,0(R1)             PICKUP PARAMETERS
         USING COMMAREA,R7             GET ADDRESSABILITY
         SYALLOC FREE=INTRD,MF=E       UNALLOCATE DATASET IF PRES. @RP1
SUB000   EQU   *
         USING WORKSPCE,R2             ADDRESS WORKSPACE RECORD
         L     2,FIRSTREC              FIRSTRECORD
         MVC   0(8,R8),BLANKS          CLEAR JOBNAME
SUB002   CLC   WORKDATA(2),=C'//'      JCL CARD ?
         BE    SUB006                  YES: TRY TO FIND JOBNAME
SUB004   LA    R2,NEXTENT(R2)          NEXT RECORD
         C     R2,LASTREC              PAST LAST RECORD ?
         BH    SUBERR2                 YES: DO NOT FILL IN JOBNAME
         B     SUB002                  TAKE NEXT RECORD
SUB006   EQU   *
         LA    R3,WORKDATA+2           POINT AFTER '//'
         LA    R4,14                   THE WORD 'JOB' SHOULD START
*                                      BEFORE COLUMN 16
SUB008   CLC   0(5,R3),=C' JOB '       THE WORD 'JOB' FOUND ?
         BE    SUB010                  YES BRANCH
         LA    R3,1(R3)                NEXT POSITION
         BCT   R4,SUB008               LOOP UNTIL FOUND OR ALL DONE
         B     SUB004                  TAKE NEXT RECORD
SUB010   LA    R2,WORKDATA+2           POINT TO JOBNAME
         LA    R3,8                    MAX LENGTH OF JOBNAME
SUB012   EQU   *                       BUILD JOBNAME
         CLI   0(R2),C' '              END OF JOBNAME ?
         BE    SUB014
         MVC   0(1,R8),0(R2)           MOVE CHAR IN JOBNAME
         LA    R8,1(R8)                NEXT POSITION
         LA    R2,1(R2)
         BCT   R3,SUB012               BRANCH
SUB014   DS    0H
         CLC   COMMSUB,=C'TSO'         SUBMIT VIA TSO SUBMIT?      @RP1
         BNE   SUB020                  NO: BRANCH                  @RP1
         MVC   SUBDSN,BLANKS           BLANK DSNAME FIRST          @RP1
         MVC   SUBDSN(7),USERID        MOVE USERID AS HLQ          @RP1
         LA    R4,SUBDSN               POINT TO DATASET NAME       @RP1
         LA    R3,7                    MAX. LENGTH USERID          @RP1
         XR    R5,R5                   COUNT SIGNIFICANT BYTES     @RP1
SUB015   DS    0H                                                  @RP1
         CLI   0(R4),C' '              BLANK FOUND ?               @RP1
         BE    SUB016                  YES: END OF TEST            @RP1
         LA    R4,1(R4)                NEXT CHARACTER OF USERID    @RP1
         LA    R5,1(R5)                COUNT THE BYTES             @RP1
         BCT   R3,SUB015               LOOP                        @RP1
SUB016   DS    0H                                                  @RP1
         MVC   0(6,R4),=C'.SUB.D'      SECOND QUALIFIER            @RP1
         LA    R4,6(R4)                ADJUST POINTER              @RP1
         TIME  DEC                     GET TIME                    @RP1
         SRL   R0,4                    SHIFT OUT HUNDREDS OF SECONDS
         ST    R0,TIMEWORK             STORE TIME                  @RP1
         ST    R1,DATEWORK               AND DATE                  @RP1
         UNPK  0(5,R4),DATEWORK        SET DATE (YYDDD) IN DSN     @RP1
         OI    4(R4),X'F0'             REMOVE SIGN                 @RP1
         MVC   5(2,R4),=C'.T'          NEXT QUALIFIER WITH TIME    @RP1
         OI    TIMEWORK+3,X'0F'        INSERT SIGN IN TIME         @RP1
         UNPK  TIMEDISP(7),TIMEWORK    UNPK THE TIME               @RP1
         MVC   7(6,R4),TIMEDISP+1      TIME IN DATASET NAME        @RP1
         MVC   13(5,R4),=C'.CNTL'      LOW LEVEL QUALIFIER         @RP1
         LA    R5,24(R5)               REAL LENGTH SUBDSN CALCUL.  @RP1
         ST    R5,LDSN                 SAVE LENGTH                 @RP1
         SYALLOC DDN=INTRD,DSN=SUBDSN,DISP1=NEW,DISP2=CATLG,           X
               DISP3=DELETE,PRI=5,SEC=3,SPTYP=CYL,UNITA=COMMUNIT,      X
               MF=E
         B     SUB021                                              @RP1
SUB020   DS    0H                                                  @RP1
         SYALLOC DDN=INTRD,SYSOUT=(A,INTRDR),UNALL=YES,MF=E
SUB021   DS    0H                                                  @RP1
         LTR   15,15                   TEST IF ALLOC OK ?
         BNZ   SUBERR1                 SET RC=4 AND GO TO CALLER
         OPEN  (INTRDR,(OUTPUT))       ALLOCATION IS O.K.
         L     R2,FIRSTREC             FIRST RECORD IN WORKSPACE
         LA    R4,NEXTENT              INCREMENT FOR BXLE
         L     R5,LASTREC              POINT TO END OF WORKSPACE
         LA    R5,86(5)                MINUS 1
*        ** FILL ALLOCATED INTRDR DATASET ****
SUB026   EQU   *                       LOOP TO FILL INTRDR
         TM    WORKFLGS,$INSERTD       AN INSERTED LINE WITH NO DATA?
         BO    SUB027                  YES: SKIP THAT LINE
         PUT   INTRDR,WORKDATA         WRITE
SUB027   DS    0H                                                  @RP1
         BXLE  R2,R4,SUB026            NEXT RECORD IN WORKSPACE    @RP1
SUB030   DS    0H
         CLOSE INTRDR                  CLOSE FILE
         CLC   COMMSUB,=C'TSO'         SUBMIT=TSO SPECIFIED?       @RP1
         BNE   SUBEND                  GO TO END OF THE ROUTINE    @RP1
         SYALLOC FREE=INTRD,MF=E       UNALLOCATED SUBDSN          @RP1
         MVC   CMDOPER,SUBDSN          MOVE DATASET TO SUBMIT      @RP1
         L     R5,LDSN                 PICKUP LENGTH OF DSN        @RP1
         LA    R4,CMDOPER                                          @RP1
         LA    R4,0(R4,R5)             ADJUST TO END OF DSN        @RP1
         MVI   0(R4),C''''             MOVE ENDING QUOTE           @RP1
         LA    R5,9(R5)               SUBMIT + BLANK + 2 QUOTES    @RP1
         LA    R5,4(R5)                + TWO LENGTH FIELDS         @RP1
         STH   R5,CMDL                 LENGTH OF BUFFER            @RP1
         CLC   COMMSIZE,=H'24'         MODEL 2 SCREEN?             @RP2
         BE    SUB032                  YES: BRANCH                 @RP2
         CLC   COMMSIZE,=H'32'         MODEL 3 SCREEN?             @RP2
         BE    SUB034                  YES: BRANCH                 @RP2
         CLC   COMMSIZE,=H'43'         MODEL 4 SCREEN?             @RP2
         BE    SUB036                  YES: BRANCH                 @RP2
         STLINENO LINE=1,MODE=ON       MODEL 5 LEAVE MODE ON       @RP2
         B     SUB038                  AND BRANCH                  @RP2
SUB032   DS    0H                                                  @RP2
         STLINENO LINE=22,MODE=OFF     GOTO LINE MODE              @RP2
         B     SUB038                  BRANCH                      @RP2
SUB034   DS    0H                                                  @RP2
         STLINENO LINE=30,MODE=OFF     GOTO LINE MODE              @RP2
         B     SUB038                  BRANCH                      @RP2
SUB036   DS    0H                                                  @RP2
         STLINENO LINE=41,MODE=OFF     GOTO LINE MODE              @RP2
SUB038   DS    0H                                                  @RP1
         L     R1,COMMCPPL             LOAD CPPL ADDRESS           @RP1
         USING CPPL,R1                 GET ADDRESSABILITY          @RP1
         L     R2,CPPLECT              GET ECT ADDRESS             @RP1
         USING ECT,R2                                              @RP1
         MVC   SUBCBUF,CPPLCBUF        SAVE OLD CBUF ADDRESS       @RP1
         MVC   CPPLCBUF,=A(SUBCMD)     MOVE COMMAND                @RP1
         MVI   ECTSWS,X'00'            CLEAR FLAGS                 @RP1
         MVC   ECTPCMD,=CL8'SUBMIT'    MOVE COMMAND NAME           @RP1
         LINK  EP=SUBMIT               INVOKE TSO SUBMIT CMD       @RP1
         L     R1,COMMCPPL             LOAD CPPL ADDRESS           @RP1
         MVC   CPPLCBUF,SUBCBUF        RESTORE POINTER CPPLCBUF    @RP1
         SYALLOC DDN=INTRD,DSN=SUBDSN,DISP1=OLD,DISP2=DELETE,          X
               MF=E                    ALLOCATE TO DELETE ...      @RP1
         SYALLOC FREE=INTRD,MF=E       DATASET                     @RP1
         STFSMODE ON,INITIAL=NO
         DROP  R1,R2
         B     SUBEND                  END OF SUBMIT
SUBERR1  EQU   *                       ALLOCATION FAILED
         L     R13,SAVE+4
         RETURN (14,12),RC=4           NOTIFY ERROR TO CALLER
SUBERR2  EQU   *                       NO JOB STATEMENT
         L     R13,SAVE+4
         RETURN (14,12),RC=8           NOTIFY ERROR TO CALLER
*
SUBEND   EQU   *                       END OF SUBMIT ROUTINE
*             J O B          S U B M I T T E D ****
         L     R13,SAVE+4
         RETURN (14,12),RC=0           BACK TO CALLER
         TITLE 'A L L O C A T I O N     CONTROL BLOCKS'
         SPACE 2
         SYALLOC MF=L
         DS    0F
*
         TITLE 'CONTROL BLOCKS AND CONSTANTS'
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         PRINT NOGEN                   SUPPRESS PRINT OF DCB
INTRDR   DCB   DDNAME=INTRD,MACRF=PM,LRECL=80,RECFM=FB,                X
               BLKSIZE=3200,DSORG=PS
LDSN     DS    F                       'REAL' LENGTH SUBDSN        @RP1
TIMEWORK DS    F                                                   @RP1
DATEWORK DS    F                                                   @RP1
SUBCBUF  DS    F                       SAVE ORIGINAL CPPLCBUF      @RP1
TIMEDISP DS    CL7                     0HHMMSS IN EBCDIC           @RP1
SUBDSN   DS    CL44                                                @RP1
         DS    0F
SUBCMD   DS    0CL57
CMDL     DS    H                       LENGTH OF CMD-BUFFER
CMDOFFS  DC    H'07'                   OFFSET TO FIRST OPERAND     @RP1
         DC    CL08'SUBMIT '''         COMMAND NAME                @RP1
CMDOPER  DS    CL45                    OPERANDS OF XMIT CMD
         PRINT GEN
         LTORG
         TITLE 'RPF COMMON AREA'
COMMAREA RPFCOMM
         IKJCPPL
         IKJECT
         END
