RPFASM   TITLE 'R P F FOREGROUND ASSEMBLY AND BINDING'
*---------------------------------------------------------------------*
*                                                                     *
*       PROGRAM:        RPFASM.                                       *
*                                                                     *
*       FUNCTION:       RPFASM WILL ASSEMBLE AND BIND YOUR            *
*                       SOURCE MODULE OF DDNAME RPFWORK               *
*                       RPFASM WILL BE ATTACHED BY RPFMAIN.           *
*                       REGISTER 1 POINTS TO THE RPFCOMM AREA.        *
*                       The Assembler program name from COMMAREA   @rp1
*                       AND IEWL (THE PROGRAM MANAGEMENT BINDER) WILL *
*                       BE LINKED IN RPFASM.                          *
*                       AFTER COMPLETION OF ASSEMBLER AND link editor *
*                       THE BROWSE PROCESSOR RPFBRO WILL BE           *
*                       INVOKED TO SHOW YOU THE ASSEMBER OUTPUT IF    *
*                       THE OUTPUT IS SPECIFIED AS 'Y' OR          @rp1
*                       'N' and the returncode of asm >0           @rp1
*                       IF 'BIND OUTPUT' IS 'Y' THEN THE linkage edit.*
*                       SYSPRINT OUTPUT WILL BE BROWSED AFTER         *
*                       TERMINATION OF BROWSE ASSEMBLER OUTPUT.       *
*                       THE DATASETS OF THE ASSEMBLER AND link editor *
*                       WILL BE DYNAMICALLY ALLOCATED WITH            *
*                       THE SYALLOC MACRO UNDER DDNAMES, WHOSE ARE    *
*                       SPECIFIED IN ASMDDNS AND LKEDDDNS.            *
*                                                                     *
*        NOTE:          IF 'END' IS ENTERED OR PFK3/PFK15 IS PRESSED  *
*                       RPFASM WILL TERMINATE IMMEDIATELY             *
*                                                                     *
*        RETURNCODES:   00  ASSEMBLY (AND LKED) ALRIGHT               *
*                       04  AN UNRECOVERABLE ERROR HAS OCCURED.       *
*                                                                     *
*        AUTHOR:        ROB PRINS                                     *
*                                                                     *
*        MODIFICATIONS:                                               *
*        JUN 22,1993    RP: NUMBER OF MACLIBS INCREASED FROM 5 TO 6.  *
*        Nov 13,2002    RP: 7 color support added                     *
*        Dec 21,2004    RP: space of workdatasets increased           *
*        Mar 20,2006    RP: HASM command deleted and assembler     @rp1
*                           program name retrieved from COMMAREA   @rp1
*        Apr 17,2006    RP: Abend013-34 in RPFTERM of IEV090 solved@rp2
*                                                                     *
*------------------------------------------ (C)-2006 SKYBIRD SYSTEMS -*
         SPACE 2
RPFASM   CSECT                         RPF/XA FOREGROUND ASSEMBLER
         SAVE  (14,12),,*              SAVE REGISTERS
         USING RPFASM,R15              GET TEMP ADDRESSABILITY
         LA    R14,SAVE                SAVE AREA
         ST    R13,SAVE+4              BACKWARD POINTER
         ST    R14,8(0,R13)            FORWARD POINTER
         LR    R13,R14                 OVERIDE CALLERS SAVEAREA
         B     START                   BRANCH AROUND SAVEAREA
SAVE     DC    18F'-1'                 SAVEAREA
         DC    CL8'&SYSDATE',C' ',CL8'&SYSTIME'
START    DS    0H
         DROP  R15                     KILL TEMP ADDRESSABILITY
         LA    R12,2048(R13)           2ND BASE
         LA    R12,2048(R12)
         LA    R10,2048(R12)           3RD BASE REGISTER
         LA    R10,2048(R10)
         USING SAVE,R13,R12,R10        ADDRESSABILITY VIA R13
         L     R11,0(R1)               ADDRESS OF PARAMETER
         USING COMMAREA,R11
         MVC   TERM90,=CL8'RPFUT2'     Move default ddn in UT2     @rp2
         MVC   SCR5LB0,COMMMAC1        MOVE
         MVC   SCR5LB1,COMMMAC2          MACLIB
         MVC   SCR5LB2,COMMMAC3            LIBRARIES
         MVC   SCR5LB3,COMMMAC4              FROM
         MVC   SCR5LB4,COMMMAC5                COMM
         MVC   SCR5LB6,COMMMAC6                    AREA
         MVC   SCR5IDDN,COMMIDDN       MOVE DDNAME INCL LIB FRO COMM.
         MVC   SCR5IDSN,COMMIDSN       MOVE DSNAME INCL LIB FRO COMM.
         MVC   SCR5LBO,COMMOBJ         MOVE OBJECT FROM COMMAREA
         MVC   STMNT1+5(69),COMMLKED   MOVE 1ST CONTROL STMNT
         MVC   STMNT2+5(69),COMMLKED+69  MOVE 2ND CONTROL STMNT
         MVC   STMNT3+5(69),COMMLKED+138 MOVE 3RD CONTROL STMNT
         MVC   STMNT4+5(69),COMMLKED+207 MOVE 4TH CONTROL STMNT
         MVC   STMNT5+5(69),COMMLKD2     MOVE 5TH CONTROL STMNT
         MVC   STMNT6+5(69),COMMLKD2+69  MOVE 6TH CONTROL STMNT
         MVC   SCR5ASM,COMMASPA        MOVE ASSEMBLER PARM
         MVC   SCR5PRM,COMMLKPA        MOVE BINDER PARM
         MVC   SCR5PRT,DEFPRT          MOVE DEFAULT PRINTER     @961125
         MVC   SCR5CLAS,DEFOUT         MOVE DEFAULT OUTP. CLASS @961126
         MVC   MSG1RC1,BLANKS          CLEAR RC OF ASM
         MVC   SCR5INP,MEMBER          MOVE RPFWORK MEMBERNAME
         MVC   SCR5LBI,DSNAME          MOVE RPFWORK DSNAME
         MVC   SCR5CURS,CURSTD         DEFAULT CURSOR LOCATION
         GTSIZE  ,
         LR    R3,R0                   SAVE # ROWS
         CH    R3,=H'43'               MODEL 4 SCREEN ?
         BE    WRALT                   YES: WRITE ALTERNATE
         CH    R3,=H'32'               MODEL 3 SCREEN ?
         BE    WRALT                   YES: WRITE ALTERNATE
         MVC   SCR5TXT(2),=X'27F5'     NORMAL WRITE
         B     CONTINUE                PROCEED
WRALT    EQU   *
         MVC   SCR5TXT(2),=X'277E'     WRITE ALTERNATE WCC
CONTINUE DS    0H
         MVI   SW,X'00'                CLEAR SWITCH
         MVC   MSG1TXT,BLANKS          CLEAR MSG1TXT
         MVC   DCCCOUNT,=H'1'          INIT # OF CONCATS
         SYALLOC FREE=RPFPRINT,MF=E    FREE THE RPFPRINT FILE
         SYALLOC FREE=RPFTERM,MF=E     FREE THE RPFTERM FILE
         SYALLOC FREE=RPFLKPRT,MF=E    FREE THE RPFLKPRT FILE
         BAL   R14,RPFFREE
         TM    INFCODE,SEQALC          SEQUENTIAL INPUT ?
         BO    START1                  YES: DO NOTHING
         CLI   SCR5LB5,C' '            LOADLIB ALREADY SPECIFIED ?
         BNE   LIB99                   YES: BRANCH
         MVC   SCR5LB5,DSNAME          MOVE DSNAME OF SRCLIB
         LA    R2,SCR5LB5+43           LAST POS OF LOADLIB
         LA    R3,SCR5LB5              FIRST POS OF LOADLIB
LIB1     CR    R2,R3                   NO '.' FOUND IN SCR5LB3
         BNH   LIB99                   DO NOT ALTER SCR5LB3
         CLI   0(R2),C'.'              '.' FOUND ?
         BE    LIB3                    YES: ALTER SUFFIX SCR5LB3
         BCTR  R2,0                    DECREASE R2
         B     LIB1                    TEST AGAIN
LIB3     LA    R3,SCR5LB5+43           LAST POS SCR5LB3
         LA    R2,1(R2)                POINT AFTER '.'
         SR    R3,R2                   CALC LENGTH
         C     R3,F0007                LENGTH BIGGER THAN 8
         BNH   LIB5                    NO: OK
         L     R3,F0007                TRUNCATE TO 8
LIB5     EX    R3,LIBMOVE              MOVE SUFFIX
         B     LIB99
LIBMOVE  MVC   0(0,2),=CL8'LOAD'
LIB99    EQU   *
         MVC   SCR5MEM,BLANKS          BLANK MEMBERNAME OF LOADLIB
         MVC   SCR5INPO,BLANKS         BLANK MEMBERNAME OF OBJLIB
         CLC   SCR5LB0,DSNAME          SRCLIB ALREADY SPEC AS MACLIB1?
         BE    START1                  YES: DO NOT SET SRC AS MACLIB6
         CLC   SCR5LB1,DSNAME          SRCLIB ALREADY SPEC AS MACLIB2?
         BE    START1                  YES: DO NOT SET SRC AS MACLIB6
         CLC   SCR5LB2,DSNAME          SRCLIB ALREADY SPEC AS MACLIB3?
         BE    START1                  YES: DO NOT SET SRC AS MACLIB6
         CLC   SCR5LB3,DSNAME          SRCLIB ALREADY SPEC AS MACLIB4?
         BE    START1                  YES: DO NOT SET SRC AS MACLIB6
         CLC   SCR5LB4,DSNAME          SRCLIB ALREADY SPEC AS MACLIB5?
         BE    START1                  YES: DO NOT SET SRC AS MACLIB6
         CLC   SCR5LB6,BLANKS          FILLED IN ?
         BNE   START1                  YES: SKIP
         MVC   SCR5LB6,DSNAME          MOVE LIBRARY AS MACLIB
START1   EQU   *
         TPUT  SCR5TXT,SCR5LEN,FULLSCR WRITE SCREEN
RPFINIT  EQU   *
         BAL   R14,RPFTGET             GET THE BUFFER
         CLI   BUFASME,C'Y'            ASSEMBLER EXEC ?
         BE    ASMEXEC                 YES: GO ASSEMBLE FIRST
         OI    SW,$NOASM               MARK NO ASSEMBLY DONE
         B     NOASM                   BRANCH
ASMEXEC  DS    0H
*  five lines deleted by:                                          @rp1
         SYALLOC DDN=RPFUT1,UNITA=COMMSTOR,PRI=15,SEC=5,DSN=UT1DSN,    X
               SPTYP=CYL,DISP1=NEW,MF=E
         LTR   R15,R15                 ALLOC OK ?
         BNZ   RPFERR1                 ERROR
         SYALLOC DDN=RPFUT2,UNITA=COMMSTOR,PRI=15,SEC=5,DSN=UT2DSN,    X
               SPTYP=CYL,DISP1=NEW,MF=E
         LTR   R15,R15                 ALLOC OK ?
         BNZ   RPFERR1                 ERROR
         SYALLOC DDN=RPFUT3,UNITA=COMMSTOR,PRI=15,SEC=5,DSN=UT3DSN,    X
               SPTYP=CYL,DISP1=NEW,MF=E
         LTR   R15,R15                 ALLOC OK ?
         BNZ   RPFERR1                 ERROR
         SYALLOC DDN=RPFPRINT,PRI=30,SEC=6,SPTYP=CYL,DSN=PRTDSN,       X
               UNITA=COMMSTOR,DISP1=MOD,MF=E,DISP2=DELETE,             X
               BLKSIZE=ASMBLKSI        SYSPRINT ASSEMBLER
         LTR   R15,R15                 ALLOC OK ?
         BNZ   RPFERR1                 ERROR IF NOT
         SYALLOC DDN=RPFTERM,PRI=10,SEC=5,SPTYP=CYL,DSN=TERMDSN,       X
               UNITA=COMMSTOR,DISP1=MOD,MF=E         SYSTERM ASM
         LTR   R15,R15                 ALLOC OK ?
         BNZ   RPFERR1                 ERROR IF NOT
DYNALC00 CLC   DSNAME,BUFLIBI          ALLOCATIONS CHANGED ?
         BE    DAIRCALL                NO: CALL IMMED RPFDAIR
         MVC   DSNAME,BUFLIBI          MOVE SOURCE DSNAME
         MVC   VOLUME,BLANKS           ASSUMED CATLGD DATASET
DAIRCALL DS    0H
         MVC   MEMBER,BUFINP           MOVE SOURCE MEMBER
         L     R15,EPDAIR              ENTRY POINT RPFDAIR
         ST    R11,DAIRPARM            STORE A(COMMAREA)
         LA    R1,DAIRPARM             LOAD INTO REG1
         BALR  R14,R15                 AND BRANCH TO RPFDAIR
         CLC   RTNCODE,F0000           RC= 0000 ?
         BE    RPF000                  YES: ALLOCATED
         CLC   RTNCODE,=F'32'          RC=0032 (MEMBER NOT FOUND)
         BNE   OTHERR                  NO: OTHER ERROR
         MVC   BUFMEMB,BLANKS          BLANK MEMBER OF LOADLIB
         MVC   BUFINPO,BLANKS          BLANK MEMBER OF OBJLIB
         MVC   SCR5MEM,BLANKS          BLANK MEMBER OF LOADLIB
         MVC   SCR5INPO,BLANKS         BLANK MEMBER OF OBJLIB
OTHERR   DS    0H
         L     R1,RTNCODE              RETURNCODE
         CVD   R1,DWB                  CONVERT TO PACKED
         UNPK  ERR6CDE(4),DWB          CONVERT TO ZONED
         OI    ERR6CDE+3,X'F0'         AND CLEAR THE SIGN
         MVC   MSG5,ERR6TXT            MOVE ERROR MESSAGE
         MVC   SCR5CURS,CURDS0         SET CURSOR ON ERROR FIELD
         TPUT  SCR5TXT,SCR5LEN,FULLSCR REWRITE THE SCREEN
         BAL   R14,RPFTGET             REVIEW THE SCREEN
         B     DYNALC00
RPF000   EQU   *
         CLI   BUFLIB0,C' '            NO 1ST MACLIB ?
         BE    NOMAC                   NO: NO MACLIBS SPECIFIED
         SYALLOC DSN=BUFLIB0,DDN=RPFLIB,DISP1=SHR,MF=E,                X
               BLKSIZE=LIBBLK
*                                      ALLOCATE 1ST MACLIB
         LTR   R15,R15                 TEST COMPLETION
         BZ    RPF001                  BRANCH OF ALLRIGTH
         SYCONVHX IN=DAERROR,OUT=ERR4CODE,L=2
         MVC   ERR4NBR,C1STMAC         MOVE NUMBER OF SCREEN
         MVC   MSG5,ERR4TXT            MOVE ERROR MESSAGE
         MVC   SCR5CURS,CURMAC1        SET CURSOR ON ERROR FIELD
         TPUT  SCR5TXT,SCR5LEN,FULLSCR REWRITE THE SCREEN
         BAL   R14,RPFTGET             REVIEW THE SCREEN
         B     RPF000
RPF001   EQU   *                       INVESTIGATE BUFLIB1
         CLI   BUFLIB1,C' '            NOTHING SPECIFIED ?
         BE    NOCONCAT                ONLY 1 MACLIB SPECIFIED
         MVC   DCCCOUNT,=H'2'          # OF CONCATENATIONS
         SYALLOC DSN=BUFLIB1,DDN=RPFLIB1,DISP1=SHR,MF=E
         LTR   R15,R15                 TEST COMPLETION
         BZ    RPF004                  BRANCH OF ALLRIGTH
         SYCONVHX IN=DAERROR,OUT=ERR4CODE,L=2
         MVC   ERR4NBR,C2NDMAC         MOVE NUMBER OF SCREEN
         MVC   MSG5,ERR4TXT            MOVE ERROR MESSAGE
         MVC   SCR5CURS,CURMAC2        SET CURSOR ON ERROR FIELD
         TPUT  SCR5TXT,SCR5LEN,FULLSCR REWRITE THE SCREEN
         BAL   R14,RPFTGET             REVIEW THE SCREEN
         B     RPF001
RPF004   EQU   *                       ALLOCATE 2ND MACLIB
         CLI   BUFLIB2,C' '            NOTHING SPECIFIED ?
         BE    CONCAT                  2 MACLIBS SPECIFIED
         MVC   DCCCOUNT,=H'3'          # OF CONCATENATIONS
         SYALLOC DSN=BUFLIB2,DDN=RPFLIB2,DISP1=SHR,MF=E
         LTR   R15,R15                 TEST COMPLETION
         BZ    RPF005                  BRANCH OF ALLRIGTH
         SYCONVHX IN=DAERROR,OUT=ERR4CODE,L=2
         MVC   ERR4NBR,C3RDMAC         MOVE NUMBER OF SCREEN
         MVC   MSG5,ERR4TXT            MOVE ERROR MESSAGE
         MVC   SCR5CURS,CURMAC3        SET CURSOR ON ERROR FIELD
         TPUT  SCR5TXT,SCR5LEN,FULLSCR REWRITE THE SCREEN
         BAL   R14,RPFTGET             REVIEW THE SCREEN
         MVC   DCCCOUNT,=H'2'          RESTORE CONCAT COUNTER
         B     RPF004
RPF005   EQU   *
         CLI   BUFLIB3,C' '            NOTHING SPECIFIED ?
         BE    CONCAT                  3 MACLIBS SPECIFIED
         MVC   DCCCOUNT,=H'4'          # OF CONCATENATIONS
         SYALLOC DSN=BUFLIB3,DDN=RPFLIB3,DISP1=SHR,MF=E
         LTR   R15,R15                 TEST COMPLETION
         BZ    RPF006                  BRANCH OF ALLRIGTH
         SYCONVHX IN=DAERROR,OUT=ERR4CODE,L=2
         MVC   ERR4NBR,C4THMAC         MOVE NUMBER OF SCREEN
         MVC   MSG5,ERR4TXT            MOVE ERROR MESSAGE
         MVC   SCR5CURS,CURMAC4        SET CURSOR ON ERROR FIELD
         TPUT  SCR5TXT,SCR5LEN,FULLSCR REWRITE THE SCREEN
         BAL   R14,RPFTGET             REVIEW THE SCREEN
         MVC   DCCCOUNT,=H'3'          RESTORE CONCAT COUNTER
         B     RPF005
RPF006   EQU   *
         CLI   BUFLIB4,C' '            NOTHING SPECIFIED ?
         BE    CONCAT                  4 MACLIBS SPECIFIED
         MVC   DCCCOUNT,=H'5'          # OF CONCATENATIONS
         SYALLOC DSN=BUFLIB4,DDN=RPFLIB4,DISP1=SHR,MF=E
         LTR   R15,R15                 TEST COMPLETION
         BZ    RPF007                  BRANCH OF ALLRIGHT
         SYCONVHX IN=DAERROR,OUT=ERR4CODE,L=2
         MVC   ERR4NBR,C5THMAC         MOVE NUMBER OF SCREEN
         MVC   MSG5,ERR4TXT            MOVE ERROR MESSAGE
         MVC   SCR5CURS,CURMAC5        SET CURSOR ON ERROR FIELD
         TPUT  SCR5TXT,SCR5LEN,FULLSCR REWRITE THE SCREEN
         BAL   R14,RPFTGET             REVIEW THE SCREEN
         MVC   DCCCOUNT,=H'4'          RESTORE CONCAT COUNTER
         B     RPF006
RPF007   EQU   *
         CLI   BUFLIB6,C' '            NOTHING SPECIFIED ?
         BE    CONCAT                  5 MACLIBS SPECIFIED
         MVC   DCCCOUNT,=H'6'          # OF CONCATENATIONS
         SYALLOC DSN=BUFLIB6,DDN=RPFLIB6,DISP1=SHR,MF=E
         LTR   R15,R15                 TEST COMPLETION
         BZ    CONCAT                  BRANCH OF ALLRIGTH
         SYCONVHX IN=DAERROR,OUT=ERR4CODE,L=2
         MVC   ERR4NBR,C6THMAC         MOVE NUMBER OF SCREEN
         MVC   MSG5,ERR4TXT            MOVE ERROR MESSAGE
         MVC   SCR5CURS,CURMAC6        SET CURSOR ON ERROR FIELD
         TPUT  SCR5TXT,SCR5LEN,FULLSCR REWRITE THE SCREEN
         BAL   R14,RPFTGET             REVIEW THE SCREEN
         MVC   DCCCOUNT,=H'5'          RESTORE CONCAT COUNTER
         B     RPF007
CONCAT   EQU   *                       ALLOC OK
         LA    1,DCCPTR                LOAD POINTER
         DYNALLOC                      CONCATENATE
         LTR   R15,R15                 OK ?
         BZ    RPF031                  GO TO ASSEMBLER IF ALLRIGHT
         MVC   MSG5(L'ERR5TXT),ERR5TXT MOVE ERROR MESSAGE
         TPUT  SCR5TXT,SCR5LEN,FULLSCR REWRITE SCREEN
         BAL   R14,RPFTGET             REVIEW THE SCREEN
         BAL   R14,RPFFREE             FREE THE DATASETS
         B     RPFABNO                 ERROR RC=4
NOCONCAT EQU   *                       ONLY 1 MACLIB SPECIFIED
NOMAC    EQU   *                       NO MACLIBS SPECIFIED
RPF031   EQU   *
         BAL   R14,OBJECT              ALLOCATE OBJECT DATASET
         C     R15,F0012               ALLOCATION ERROR ?
         BE    ERROBJA                 YES: PROCESS ERROR
         C     R15,F0008               SAME AS SOURCE LIB ?
         BNE   RPF032                  NO: CONTINUE
ERROBJA  DS    0H
         TPUT  SCR5TXT,SCR5LEN,FULLSCR WRITE SCREEN
         BAL   R14,RPFTGET             READ SCREEN
         B     RPF031                  BRANCH
RPF032   LA    R3,30                   MAX 30 POSITIONS ADDITON PARM
         LA    R4,BUFASM               ADDITIONAL ASM OPTIONS
         MVC   ASMPARM,ASMDPRM         MOVE ORIGINAL PARM LENGTH
         LH    R5,ASMPARM              ORIGINAL PARM LENGTH
         XR    R6,R6                   COUNT FOR ADD BYTES
RPF033   EQU   *                       START LOOP
         CLI   0(R4),C' '              END OF PARM ?
         BE    RPF035                  BRANCH IF YES
         LA    R4,1(R4)                NEXT BYTE
         LA    R6,1(R6)                COUNT BYTE
         BCT   R3,RPF033
RPF035   EQU   *                       END LOOP
         LTR   R6,R6                   NO ADDITIONAL OPTIONS ?
         BZ    RPF037                  TAKE ONLY ORIGINAL
         BCTR  R6,0                    MINUS 1 FOR EX
         EX    R6,RPFMOVE              MOVE ADD PARM
         LA    R6,2(R6)                COUNT COMMA
         AR    R6,R5                   PLUS LENGTH ORIGINAL
         STH   R6,ASMPARM              AND STORE IT
         B     RPF037                  BRANCH TO ASSEMBLER
RPFMOVE  MVC   ASMREST(0),BUFASM       MOVE PARM
RPF037   DS    0H                      LINK TO ASSEMBLER
         MVC   ASMLINK,COMMASM         Name of assembler program   @rp1
         BLDL  0,ASMSRCH               Try to find the asm         @rp1
         LTR   R15,R15                 Found?                      @rp1
         BZ    RPF038                  Yes: branch                 @rp1
         MVC   ERR9TXT+4(8),COMMASM    NO: move asm name           @rp1
         MVC   MSG5(L'ERR9TXT),ERR9TXT Error message               @rp1
         B     RPFERR2                 Give error msg and terminate@rp1
RPF038   DS    0H                                                  @rp1
         MVC   MSG2(L'MSG3TXT),MSG3TXT MOVE ASM RUNNING MSG
         TPUT  SCR2TXT,SCR2LEN,FULLSCR AND WRITE THAT ON THE SCREEN
         CLC   ASMLINK,=CL8'IEV90'     H-assembler?                @rp2
         BNE   NOIEV                   no: leave it alone          @rp2
         MVC   TERM90,=CL8'RPFTERM'    Systerm on other pos in     @rp2
*                                      DDname list                 @rp2
NOIEV    DS    0H                                                  @rp2
         LINK  EPLOC=ASMLINK,PARAM=(ASMPARM,ASMDDNS),VL=1
*              LINK TO ASSEMBLER
         MVC   MSG1ASM,=CL8'RC ASM= '
         CVD   R15,DWB                 CONVERT RETURNCODE
         UNPK  MSG1RC1(2),DWB(8)       MAKE ZONED
         OI    MSG1RC1+1,X'F0'         CLEAR SIGN
         LTR   R15,R15                 RC ASM= 0000
         BZ    NOASM                   YES: BRANCH
         CLI   BUFOUTP,C'N'            NO OUTPUT REQ ?
         BNE   NOASM                   NO: BRANCH
         MVI   BUFOUTP,C'T'            BROWSE TERM OUTPUT,
*                                      ) BECAUSE ASSEMBLY ERRORS
NOASM    DS    0H                      ASSEMBLER SKIPPED
         CLI   BUFLKED,C'Y'            LINKEDIT ?
         BNE   RPF091                  BRANCH IF NOT
         CLC   MSG1RC1,=C'04'          RC HIGHER THAN 4 ?
         BH    RPF091                  LKED IMPOSSIBLE
         SYALLOC FREE=RPFUT1,MF=E      FREE PREVIOUS RPFUT1
         SYALLOC DDN=RPFUT1,UNITA=COMMSTOR,PRI=15,SEC=5,DSN=UT1DSN,    X
               SPTYP=CYL,DISP1=NEW,MF=E
         LTR   R15,R15                 ALLOC OK ?
         BNZ   RPFERR1                 ERROR
         SYALLOC DDN=RPFLKPRT,PRI=8,SEC=5,SPTYP=TRK,DSN=LKPRTDSN,      X
               UNITA=COMMSTOR,DISP1=MOD,MF=E         SYSPRINT LKED
         LTR   R15,R15                 ALLOC OK ?
         BNZ   RPFERR1                 NOT OK: ERROR
         SYALLOC DDN=RPFLIN,UNITA=COMMSTOR,PRI=1,SEC=1,DSN=LINDSN,     X
               SPTYP=TRK,DISP1=MOD,MF=E
         LTR   R15,R15                 ALLOC OK ?
         BNZ   RPFERR1                 ERROR
RPF040   DS    0H
         TM    SW,$NOASM               ASSEMBLER HAS BEEN SKIPPED ?
         BNO   RPF041                  IF DONE OBJECT ALREADY ALLOCATED
         BAL   R14,OBJECT              ALLOCATE OBJECT DATASET
         C     R15,F0012               ALLOCATION ERROR ?
         BE    ERROBJL                 YES: PROCESS ERROR
         C     R15,F0008               SAME AS SOURCE LIB ?
         BNE   RPF041                  NO: CONTINUE
ERROBJL  DS    0H
         TPUT  SCR5TXT,SCR5LEN,FULLSCR WRITE SCREEN
         BAL   R14,RPFTGET             READ SCREEN
         B     RPF040                  BRANCH
RPF041   EQU   *
         CLC   BUFLIB5,DSNAME          IS LOADLIB SAME AS SOURCE LIB ?
         BNE   RPF042                  NO: IT IS A SMART PROGRAMMER
* THIS SILLY USER IS LINK EDITING IN HIS SOURCE LIBRARY
         MVI   ERR7TXT+5,C'3'          DATASET (3)
         MVC   MSG5,ERR7TXT            MOVE ERROR MSG
         MVC   SCR5CURS,CURLOAD        SET CURSOR ON ERROR FIELD
         TPUT  SCR5TXT,SCR5LEN,FULLSCR WRITE SCREEN
         BAL   R14,RPFTGET             REVIEW THE SCREEN
         B     RPF041                  RETRY
RPF042   EQU   *
         CLI   BUFMEMB,C' '            MEMBER SPECIFIED ?
         BE    RPF043                  BRANCH IF NOT
         SYALLOC DDN=RPFLMOD,DSN=BUFLIB5,DISP1=SHR,                    X
               M=BUFMEMB,MF=E          ALLOCATE SYSLMOD FILE
         B     RPF045                  TEST COMPLETION
RPF043   EQU   *
         SYALLOC DDN=RPFLMOD,DSN=BUFLIB5,DISP1=SHR,MF=E
RPF045   EQU   *
         LTR   R15,R15                 ALLOC OK
         BZ    RPF046                  EXAMINE INCLUDE LIBRARY
         SYCONVHX IN=DAERROR,OUT=ERR4CODE,L=2
         MVC   ERR4NBR,CLOAD           MOVE NUMBER OF SCREEN
         MVC   MSG5,ERR4TXT            MOVE ERROR MSG
         MVC   SCR5CURS,CURLOAD        SET CURSOR ON ERROR FIELD
         TPUT  SCR5TXT,SCR5LEN,FULLSCR WRITE SCREEN
         BAL   R14,RPFTGET             REVIEW THE SCREEN
         B     RPF041                  RETRY
RPF046   EQU   *
         CLI   BUFIDDN,C' '            NO INCLUDE LIB DDN SPECIFIED ?
         BE    RPF051                  YES: BRANCH
         CLI   BUFIDSN,C' '            NO INCLUDE LIB DSN SPECIFIED ?
         BE    RPF051                  YES: BRANCH
         SYALLOC DDA=BUFIDDN,DSN=BUFIDSN,DISP1=SHR,MF=E
         LTR   R15,R15                 ALLOC OK
         BZ    RPF051                  EXAMINE PARM
         SYCONVHX IN=DAERROR,OUT=ERR4CODE,L=2
         MVC   ERR4NBR,CINC            MOVE NUMBER OF SCREEN
         MVC   MSG5,ERR4TXT            MOVE ERROR MSG
         MVC   SCR5CURS,CURIDSN        SET CURSOR ON ERROR FIELD
         TPUT  SCR5TXT,SCR5LEN,FULLSCR WRITE SCREEN
         BAL   R14,RPFTGET             REVIEW THE SCREEN
         B     RPF046                  RETRY
RPF051   EQU   *                       INVESTIGATE PARM
         LA    R2,BUFLKPA              PARM OF LE
         XR    R3,R3                   CLEAR COUNT REGISTER
         MVC   BINDPARM+2(30),BUFLKPA  MOVE CONTENTS OF PARM
         LA    R4,30                   MAX LENGTH OF PARM
RPF053   EQU   *
         CLI   0(2),C' '               END OF PARM
         BE    RPF055                  BRANCH
         LA    R2,1(R2)                NEXT CHARACTER OF PARM
         LA    R3,1(R3)                COUNT BYTES
         BCT   R4,RPF053
RPF055   EQU   *
         STH   R3,BINDPARM             STORE LENGTH INTO PARM
         LA    R2,BUFCST1              LOAD FIRST CONTROL STMNT
         LA    R4,6                    MAXIMUM IS 6
         OPEN  (RPFLIN,(OUTPUT))       OPEN OBJECT FILE
*        LA    R1,RPF059               ROUTINE ADDRESS IN 24 BIT MODE
*        BSM   R0,R1                   GOTO 24 BIT MODE
*PF059   EQU   *
         TM    SW,$NOOBJ               NO OBJECT DATASET ?
         BO    RPF060                  OK: DO NOT WRITE INCLUDE STMTN
         MVI   LINE,C' '               BLANK LINE
         MVC   LINE+1(79),LINE
         MVC   LINE+1(13),=C'INCLUDE RPFGO'
         PUT   RPFLIN,LINE             INCLUDE OBJECT DECK
RPF060   CLC   0(40,R2),BLANKS         NO CONTROL STATEMENT
         BE    RPF061                  CLOSE THE FILE
         MVC   LINE+1(69),0(R2)        MOVE CONTROL STATEMENT
         PUT   RPFLIN,LINE             WRITE ON OBJECT DECK
         LA    R2,69(R2)               NEXT CONTROL STATEMENT
         BCT   R4,RPF060               BRANCH BACK
RPF061   EQU   *
         CLOSE RPFLIN                  CLOSE OBJECTDECK
         FREEPOOL RPFLIN               AND FREE THE BUFFERS
*        L     R1,=A(RPF081+X'80000000') LOAD ROUTINE ADDRESS
*        BSM   R0,R1                   GOTO 31 BIT MODE
*PF081   EQU   *                       LINK TO LE
         SYALLOC DDN=RPFAUT,DSN=BUFLIB5,DISP1=SHR,MF=E
         MVC   MSG2(L'MSG4TXT),MSG4TXT MOVE LKED RUNNING MSG
         TPUT  SCR2TXT,SCR2LEN,FULLSCR AND WRITE IT IN THE SCREEN
         LINK  EPLOC=LKDNAME,PARAM=(BINDPARM,BINDDDNS),VL=1
         CVD   R15,DWB                 CONVERT RETURNCODE
         UNPK  MSG1RC2(2),DWB(8)       MAKE ZONED
         OI    MSG1RC2+1,X'F0'         CLEAR SIGN
         MVC   MSG1RLK,=C' RC '
         MVC   MSG1LKD,=C'BND= '
         OI    SW,$LKEXEC              MARK BINDER EXECUTED
         CLC   MSG1RC2(2),=C'00'       RETURN CODE IS ZERO ?
         BE    RPF091                  YES: DO NOT CHANGE BUFLBRO
         MVI   BUFLBRO,C'Y'            SET DEFAULT BROWSE LKED = Y
RPF091   EQU   *
         TM    SW,$NOASM               ASSEMBLY EXECUTED ?
         BO    RPF096                  NO: SKIP BROWSE ASSEMBLER OUTP
         CLI   BUFOUTP,C'N'            NO ASSEMBLER OUTPUT REQ ?
         BE    RPF096                  YES: SKIP BROWSE ASSEMBLER OUTP
         MVC   CMDAREA(8),=CL8'RPFTERM' DEFAULT SYSTERM OUTPUT
         CLI   BUFOUTP,C'Y'            SEE THE Assembler print?    @rp1
         BNE   RPF095                  YES: BRANCH
         MVC   CMDAREA(8),=CL8'RPFPRINT'  IF YES SHOW SYSPRINT OUTPUT
RPF095   EQU   *
         MVC   CMDAREA+16(8),COMMASM   Move name of assembler      @rp1
         OI    INFCODE3,$UTILBR        SET FLAG FOR DIFFERENT HEADER
         LINK  EP=RPFBRO,PARAM=((11)),VL=1 LINK TO BROWSE
         MVC   CMDAREA,BLANKS
RPF096   TM    SW,$LKEXEC              IS LINKAGE EDITOR EXECUTED
         BNO   REPEAT                  NO: FREE DATASETS
         CLI   BUFLBRO,C'Y'            BROWSE BINDER/LKED OUTPUT ?
         BNE   REPEAT                  NO: FREE DATASETS
         MVC   CMDAREA(8),=CL8'RPFLKPRT' MOVE DDNAME
         MVC   CMDAREA+16(8),LKDNAME   MOVE NAME OF ASSEMBLER
         OI    INFCODE3,$UTILBR        SET FLAG FOR DIFFERENT HEADER
         LINK  EP=RPFBRO,PARAM=((11)),VL=1 LINK TO BROWSE
         MVC   CMDAREA,BLANKS
REPEAT   EQU   *
         MVC   MSG5(L'MSG1TXT),MSG1TXT MOVE MESSAGE
         B     CONTINUE                ISSUE ASSEMBLER MENU AGAIN
RPFNORM  L     R13,SAVE+4
         RETURN (14,12),RC=0
RPFERR1  EQU   *                       ERROR IN ALLOC WORK DS ASM/LKED
         MVC   MSG5(L'ERR2TXT),ERR2TXT ERROR MESSAGE
RPFERR2  DS    0H                                                  @rp1
         TPUT  SCR5TXT,SCR5LEN,FULLSCR WRITE THE SCREEN
         BAL   R14,RPFTGET
         BAL   R14,RPFFREE             FREE THE ASM DATASETS
         B     RPFABNO                 END WITH RC=4
         TITLE 'ALLOCATE A PERMANENT OR TEMPORARY OBJECT DATASET'
*---------------------------------------------------------------------*
*                                                                     *
*        O B J E C T:                                                 *
*                                                                     *
*              ALLOCATE THE OBJECT LIBRARY. IF NOT SPECIFIED          *
*              A TEMPORARY OBJECT DATASET WILL BE ALLOCATED, EXCEPT   *
*              IS 'ASM     ' = 'N' SPECIFIED THEN NO OBJECT IS        *
*              ALLOCATED.                                             *
*                                                                     *
*        RETURNCODES:                                                 *
*              0000:  EVERYTHING OK.                                  *
*              0004:  NO OBJECT DATASET WITH 'ASM EXEC' = 'N'         *
*              0008:  OBJECT DATASET SAME AS SOURCE DATASET.          *
*              0012:  ALLOCATION ERROR (ERROR CODE IN DAERROR)        *
*                                                                     *
*------------------------------------------ (C)-1996 SYBIRD SYSTEMS --*
         SPACE 2
OBJECT   DS    0H
         ST    R14,SAVE14              SAVE R14
         CLC   BUFLIBO,BLANKS          NO OBJECT LIB SPECIFIED
         BE    OBJ003                  YES: ALLOCATE A TEMPORARY ONE
         CLC   BUFLIBI,BUFLIBO         OBJECT SAME AS SOURCELIB ?
         BE    OBJ053                  YES: ERROR
         SYALLOC DSN=BUFLIBO,DISP1=OLD,DDN=RPFGO,M=BUFINPO,MF=E
         LTR   R15,R15                 ALLOC OBJECT OK ?
         BNZ   OBJ059                  NO ISSUE ERROR
         B     OBJ098
OBJ003   DS    0H
         TM    SW,$NOASM               ASM EXEC = 'Y' ?
         BO    OBJ051                  NO: ERROR RC=0004
         SYALLOC DSN=OBJDSN,DISP1=MOD,PRI=5,SEC=2,SPTYP=CYL,           X
               DDN=RPFGO,UNITA=COMMSTOR,MF=E
         LTR   R15,R15                 ALLOC OBJECT OK ?
         BNZ   OBJ059                  NO ISSUE ERROR
         B     OBJ098
OBJ051   DS    0H
         OI    SW,$NOOBJ               MARK NO OBJECT DATASET
         LA    R15,4                   RC=0004
         B     OBJ099
OBJ053   DS    0H
         MVC   SCR5CURS,CUROBJ         SET CURSOR ON ERROR FIELD
         MVI   ERR7TXT+5,C'2'          DATASET IN ERROR
         MVC   MSG5,ERR7TXT            MOVE IN SCREEN
         LA    R15,8                   RC=0008
         B     OBJ099
OBJ059   DS    0H
         MVC   SCR5CURS,CUROBJ         SET CURSOR ON ERROR FIELD
         SYCONVHX IN=DAERROR,OUT=ERR4CODE,L=2
         MVC   ERR4NBR,=C'(2)'         MOVE NUMBER OF SCREEN
         MVC   MSG5,ERR4TXT            MOVE ERROR MESSAGE
         LA    R15,12                  RC=0012
         B     OBJ099
OBJ098   DS    0H
         XR    R15,R15                 RC=0000
OBJ099   DS    0H
         L     R14,SAVE14              RETURN ADDRESS
         BR    R14                     RETURN.
         TITLE 'READ THE SCREEN'
RPFTGET  EQU   *
         ST    R14,SAVE14              SAVE RETURN REGISTER
RPFTGET1 EQU   *
         L     R5,COMMSCR              OUTPUT FORMATTED BUFFER
         LA    R5,2048(R5)             POINT TO 2ND HALF
         L     R3,COMMSCR              LOAD SCREEN ADDRESS
         TGET  (R3),1788,ASIS          READ THE SCREEN
*        DO AN TGET ASIS TO OBTAIN THE AID BYTE
*        AFTER THE TGET ASIS REMOVE THE SBA'S FROM THE OUTPUT
         CLI   0(R3),X'F3'             PFK3 (END) PRESSED
         BE    RPFTGET3                YES: TERMINATE RPFASM
         CLI   0(R3),X'C3'             PFK15 (END) PRESSED
         BE    RPFTGET3                YES: TERMINATE RPFASM
         CLI   0(R3),X'6E'             PA2 KEY PRESSED ?
         BE    CONV001                 YES: REFRESH
         CLI   0(R3),X'7D'             ENTER KEY PRESSED ?
         BE    CONV003                 OK: CONTINUE
         MVC   MSG5(L'ERR8TXT),ERR8TXT ERROR MESSAGE
CONV001  EQU   *
         TPUT  SCR5TXT,SCR5LEN,FULLSCR WRITE THE SCREEN
         B     RPFTGET1                READ THE SCREEN AGAIN
CONV003  EQU   *
         XR    R2,R2                   INIT OUTPUT LENGTH
         LR    R4,R1                   SAVE INPUT LENGTH
         SH    R4,=H'3'                SKIP AID AND CURSOR ADDRESS
         C     R4,F0000                REGISTER ZERO
         BNH   CONV099                 NOT HIGH: END OF ROUTINE
         LA    R3,3(R3)
*        INPUT SCREEN IS POINTED TO BY R3
*        OUTPUT SCREEN IS POINTED TO BY R5
*        THE NEXT SECTION WILL REMOVE ALL THE SBA'S
CONV005  CLI   0(R3),X'11'             SET BUFFER ADDRESS ?
         BE    CONV007                 YES: SKIP NEXT 3 BYTES INPUT
         MVC   0(1,R5),0(R3)           MOVE INPUT BYTE
         LA    R3,1(R3)                NEXT BYTE INPUT
         LA    R2,1(R2)                COUNT OUTPUT BYTES
         LA    R5,1(R5)                NEXT BYTE OUTPUT
         BCT   R4,CONV005              TEST NEXT BYTE
         B     CONV099                 END OF ROUTINE
CONV007  LA    R3,3(R3)                SKIP 3 BYTES INPUT
         BCTR  R4,0                    MINUS 1 BCT
         BCTR  R4,0                    MINUS 1 BCT
         C     R4,F0000                REGISTER ZERO ?
         BNH   CONV099                 YES: TERMINATE CONVERSION
         BCT   R4,CONV005              TEST NEXT BYTE
CONV099  LR    R1,R2                   OUTPUT LENGTH IN REGISTER 1
         L     R4,COMMSCR              LOAD BUFFER
         LA    R4,2048(R4)             POINT TO BUFFER
         CLI   0(R4),X'6E'             RESHOW CODE ?
         BE    RPFPUT1
         LTR   R1,R1                   NOTHING RECEIVED ?
         BZ    RPFPUT1                 YES: DISPLAY SCREEN
         MVC   SCR5CURS,CURSTD         DEFAULT CURSOR LOCATION
         LR    R6,R1                   LOAD LENGTH OF BUFFER
         MVC   BUFCMD,BLANKS           MOVE BLANKS INTO COMMAND
         LA    R3,BUFCMD               ADDRESS OF COMMAND
SCAN0A   CLC   0(3,R4),CSRC            SOURCELIB REACHED ?
         BE    SCAN0B                  YES: SCAN NEXT FIELD
         MVC   0(1,R3),0(R4)           MOVE COMMAND
         LA    R3,1(R3)                NEXT BYTE OF COMMAND
         LA    R4,1(R4)                NEXT BYTE OF BUFFER
         BCT   R6,SCAN0A               NEXT BYTE OF BUFFER
         B     RPFPUT1                 DISPLAY SCREEN
SCAN0B   LA    R4,3(R4)                POINT AFTER '(1)'
         SH    R6,=H'3'                SKIP 3 BYTES IN 'BUFFER'
         LA    R3,BUFINP               SOURCE (MEMBER)
         MVC   BUFINP,BLANKS           BLANK SOURCE (MEMBER) FIELD
SCAN0C   CLC   0(5,R4),=C',DSN='       SOURCE (DSNAME) REACHED
         BE    SCAN0D                  YES: SCAN NEXT FIELD
         MVC   0(1,R3),0(R4)           MOVE SOURCE (MEMBER)
         LA    R3,1(R3)                NEXT BYTE OF SOURCE (MEMBER)
         LA    R4,1(R4)                NEXT BYTE OF BUFFER
         BCT   R6,SCAN0C               NEXT BYTE OF BUFFER
         B     RPFPUT1                 DISPLAY SCREEN
SCAN0D   LA    R4,5(R4)                POINT AFTER ',DSN='
         SH    R6,=H'5'                SKIP 5 BYTES IN 'BUFFER'
         LA    R3,BUFLIBI              SOURCE (DSNAME)
         MVC   BUFLIBI,BLANKS          BLANK SOURCE (DSNAME) FIELD
SCAN0E   CLC   0(3,R4),COBJ            OBJLIB REACHED ?
         BE    SCAN0F                  YES: SCAN NEXT FIELD
         MVC   0(1,R3),0(R4)           MOVE COMMAND
         LA    R3,1(R3)                NEXT BYTE OF SOURCELIB FIELD
         LA    R4,1(R4)                NEXT BYTE OF BUFFER
         BCT   R6,SCAN0E               NEXT BYTE OF BUFFER
         B     RPFPUT1                 DISPLAY SCREEN
SCAN0F   LA    R4,3(R4)                POINT AFTER '(2)'
         SH    R6,=H'3'                SKIP 3 BYTES IN 'BUFFER'
         LA    R3,BUFINPO              OBJECT (MEMBER)
         MVC   BUFINPO,BLANKS          BLANK OBJECT (MEMBER) FIELD
SCAN0G   CLC   0(5,R4),=C',DSN='       OBJECT (DSNAME) REACHED
         BE    SCAN0H                  YES: SCAN NEXT FIELD
         MVC   0(1,R3),0(R4)           MOVE OBJECT (MEMBER)
         LA    R3,1(R3)                NEXT BYTE OF OBJECT (MEMBER)
         LA    R4,1(R4)                NEXT BYTE OF BUFFER
         BCT   R6,SCAN0G               NEXT BYTE OF BUFFER
         B     RPFPUT1                 DISPLAY SCREEN
SCAN0H   LA    R4,5(R4)                POINT AFTER ',DSN='
         SH    R6,=H'5'                SKIP 5 BYTES IN 'BUFFER'
         LA    R3,BUFLIBO              OBJECT (DSNAME)
         MVC   BUFLIBO,BLANKS          BLANK OBJECT (DSNAME) FIELD
SCAN0I   CLC   0(3,R4),CLOAD           LOADLIB FIELD REACHED ?
         BE    SCAN0J                  YES: FOUND
         MVC   0(1,R3),0(R4)           MOVE BYTE OBJLIB DSN  FIELD
         LA    R4,1(R4)                NEXT BYTE BUFFER
         LA    R3,1(R3)                NEXT BYTE OBJLIB DSN  FIELD
         BCT   R6,SCAN0I               TEST NEXT BYTE
         B     RPFPUT1                 DISPLAY SCREEN
SCAN0J   LA    R4,3(R4)                POINT AFTER '(3)'
         SH    R6,=H'3'                SKIP THE BYTES
         LA    R3,BUFMEMB              MEMBER OF LOADMOD FIELD
         MVC   BUFMEMB,BLANKS          BLANK THE FIELD
SCAN0K   CLC   0(5,R4),=C',DSN='       'DSNAME' FIELD REACHED ?
         BE    SCAN0L                  YES: FOUND
         MVC   0(1,R3),0(R4)           MOVE BYTE 'MEMBER' FIELD
         LA    R4,1(R4)                NEXT BYTE BUFFER
         LA    R3,1(R3)                NEXT BYTE 'MEMBER' FIELD
         BCT   R6,SCAN0K               TEST NEXT BYTE
         B     RPFPUT1                 DISPLAY SCREEN
SCAN0L   LA    R4,5(R4)                POINT AFTER ',DSN='
         SH    R6,=H'5'                SKIP THE BYTES
         LA    R3,BUFLIB5              DSNAME OF LOADMOD FIELD
         MVC   BUFLIB5,BLANKS          BLANK THE FIELD
SCAN0M   CLC   0(3,R4),CINC            INC-LIB FIELD REACHED ?
         BE    SCAN0N                  YES: FOUND
         MVC   0(1,R3),0(R4)           MOVE BYTE LOADLIB DSN FIELD
         LA    R4,1(R4)                NEXT BYTE BUFFER
         LA    R3,1(R3)                NEXT BYTE LOADLIB DSN FIELD
         BCT   R6,SCAN0M               TEST NEXT BYTE
         B     RPFPUT1                 DISPLAY SCREEN
SCAN0N   LA    R4,3(R4)                POINT AFTER '(4)'
         SH    R6,=H'3'                SKIP THE BYTES
         LA    R3,BUFIDDN              DDNAME OF INC-LIB FIELD
         MVC   BUFIDDN,BLANKS          BLANK THE FIELD
SCAN0P   CLC   0(5,R4),=C',DSN='       'DSNAME' FIELD REACHED ?
         BE    SCAN0Q                  YES: FOUND
         MVC   0(1,R3),0(R4)           MOVE BYTE 'MEMBER' FIELD
         LA    R4,1(R4)                NEXT BYTE BUFFER
         LA    R3,1(R3)                NEXT BYTE 'MEMBER' FIELD
         BCT   R6,SCAN0P               TEST NEXT BYTE
         B     RPFPUT1                 DISPLAY SCREEN
SCAN0Q   LA    R4,5(R4)                POINT AFTER ',DSN='
         SH    R6,=H'5'                SKIP THE BYTES
         LA    R3,BUFIDSN              DSNAME OF INC-LIB FIELD
         MVC   BUFIDSN,BLANKS          BLANK THE FIELD
SCAN01   CLC   0(3,R4),C1STMAC         FIRST MACLIB REACHED ?
         BE    SCAN03                  YES: SCAN NEXT FIELD
         MVC   0(1,R3),0(R4)           MOVE INC-LIB (DSNAME)
         LA    R3,1(R3)                NEXT BYTE OF INC-LIB (DSNAME)
         LA    R4,1(R4)                NEXT BYTE OF BUFFER
         BCT   R6,SCAN01               NEXT BYTE OF BUFFER
         B     RPFPUT1                 DISPLAY SCREEN
SCAN03   LA    R4,3(R4)                POINT AFTER '(5)'
         SH    R6,=H'3'                SKIP 3 BYTES IN 'BUFFER'
         LA    R3,BUFLIB0              FIRST MACLIB FIELD
         MVC   BUFLIB0,BLANKS          BLANK THE 1ST MACLIB FIELD
SCAN05   CLC   0(3,R4),C2NDMAC         2ND MACLIB REACHED ?
         BE    SCAN07                  YES: FOUND.
         MVC   0(1,R3),0(R4)           MOVE BYTE 1ST MACLIB FIELD
         LA    R4,1(R4)                NEXT BYTE BUFFER
         LA    R3,1(R3)                NEXT BYTE 1ST MACLIB FIELD
         BCT   R6,SCAN05               TEST NEXT BYTE
         B     RPFPUT1                 DISPLAY SCREEN
SCAN07   MVC   BUFLIB1,BLANKS          BLANK 2ND MACLIB FIELD
         LA    R3,BUFLIB1              ADDRESS OF 2ND MACLIB FIELD
         LA    R4,3(R4)                POINT AFTER '(6)'
         SH    R6,=H'3'                SKIP 3 BYTES LENGTH
SCAN09   CLC   0(3,R4),C3RDMAC         3RD MACLIB REACHED ?
         BE    SCAN11                  YES: FOUND.
         MVC   0(1,R3),0(R4)           MOVE BYTE 2ND MACLIB FIELD
         LA    R4,1(R4)                NEXT BYTE BUFFER
         LA    R3,1(R3)                NEXT BYTE 2ND MACLIB FIELD
         BCT   R6,SCAN09               TEST NEXT BYTE
         B     RPFPUT1                 DISPLAY SCREEN
SCAN11   MVC   BUFLIB2,BLANKS          BLANK 3RD MACLIB FIELD
         LA    R3,BUFLIB2              ADDRESS OF 3RD MACLIB FIELD
         LA    R4,3(R4)                POINT AFTER '(7)'
         SH    R6,=H'3'                SKIP 3 BYTES LENGTH
SCAN11A  CLC   0(3,R4),C4THMAC         4TH MACLIB REACHED ?
         BE    SCAN11B                 YES: FOUND.
         MVC   0(1,R3),0(R4)           MOVE BYTE 3RD MACLIB FIELD
         LA    R4,1(R4)                NEXT BYTE BUFFER
         LA    R3,1(R3)                NEXT BYTE 3RD MACLIB FIELD
         BCT   R6,SCAN11A              TEST NEXT BYTE
         B     RPFPUT1                 DISPLAY SCREEN
SCAN11B  MVC   BUFLIB3,BLANKS          BLANK 4TH MACLIB FIELD
         LA    R3,BUFLIB3              ADDRESS OF 4TH MACLIB FIELD
         LA    R4,3(R4)                POINT AFTER '(8)'
         SH    R6,=H'3'                SKIP 3 BYTES LENGTH
SCAN11C  CLC   0(3,R4),C5THMAC         5TH MACLIB REACHED ?
         BE    SCAN11D                 YES: FOUND.
         MVC   0(1,R3),0(R4)           MOVE BYTE 4TH MACLIB FIELD
         LA    R4,1(R4)                NEXT BYTE BUFFER
         LA    R3,1(R3)                NEXT BYTE 4TH MACLIB FIELD
         BCT   R6,SCAN11C              TEST NEXT BYTE
         B     RPFPUT1                 DISPLAY SCREEN
SCAN11D  MVC   BUFLIB4,BLANKS          BLANK 5TH MACLIB FIELD
         LA    R3,BUFLIB4              ADDRESS OF 5TH MACLIB FIELD
         LA    R4,3(R4)                POINT AFTER '(8)'
         SH    R6,=H'3'                SKIP 3 BYTES LENGTH
SCAN11E  CLC   0(3,R4),C6THMAC         6TH MACLIB REACHED ?
         BE    SCAN11F                 YES: FOUND.
         MVC   0(1,R3),0(R4)           MOVE BYTE 4TH MACLIB FIELD
         LA    R4,1(R4)                NEXT BYTE BUFFER
         LA    R3,1(R3)                NEXT BYTE 4TH MACLIB FIELD
         BCT   R6,SCAN11E              TEST NEXT BYTE
         B     RPFPUT1                 DISPLAY SCREEN
SCAN11F  MVC   BUFLIB6,BLANKS          BLANK 5TH MACLIB FIELD
         LA    R3,BUFLIB6              ADDRESS OF 5TH MACLIB FIELD
         LA    R4,3(R4)                POINT AFTER '(A)'
         SH    R6,=H'3'                SKIP 3 BYTES LENGTH
SCAN13   CLC   0(09,R4),CASMYN
         BE    SCAN15                  YES: FOUND
         MVC   0(1,R3),0(R4)           MOVE BYTE 5TH MACLIB FIELD
         LA    R4,1(R4)                NEXT BYTE BUFFER
         LA    R3,1(R3)                NEXT BYTE 5TH MACLIB FIELD
         BCT   R6,SCAN13               TEST NEXT BYTE
         B     RPFPUT1                 DISPLAY SCREEN
SCAN15   LA    R4,09(R4)               POINT AFTER 'ASM  EXEC...'
         SH    R6,=H'09'               SKIP THE BYTES
         LA    R3,BUFASME              'ASM EXEC' FIELD
         MVC   BUFASME,BLANKS          BLANK THE FIELD
SCAN16   CLC   0(12,R4),=C',Output Y/N:'                           @rp1
         BE    SCAN16A                 YES: FOUND
         MVC   0(1,R3),0(R4)           MOVE BYTE 'ASM EXEC' FIELD
         LA    R4,1(R4)                NEXT BYTE BUFFER
         LA    R3,1(R3)                NEXT BYTE 'ASM EXEC' FIELD
         BCT   R6,SCAN16               TEST NEXT BYTE
         B     RPFPUT1                 DISPLAY SCREEN
SCAN16A  LA    R4,12(R4)               POINT AFTER 'OUTPUT Y/N'    @rp1
         SH    R6,=H'12'               SKIP THE BYTES              @rp1
         LA    R3,BUFOUTP              'ASM OUTPUT' FIELD
         MVC   BUFOUTP,BLANKS          BLANK THE FIELD
SCAN17   CLC   0(6,R4),=C',Parm:'      ASM PARM FIELD REACHED ?
         BE    SCAN19                  YES: FOUND
         MVC   0(1,R3),0(R4)           MOVE BYTE 'ASM OUTPUT' FIELD
         LA    R4,1(R4)                NEXT BYTE BUFFER
         LA    R3,1(R3)                NEXT BYTE 'ASM OUTPUT' FIELD
         BCT   R6,SCAN17               TEST NEXT BYTE
         B     RPFPUT1                 DISPLAY SCREEN
SCAN19   LA    R4,6(R4)                POINT AFTER ',PARM:'
         SH    R6,=H'6'                SKIP THE BYTES
         LA    R3,BUFASM               'ASM PARM' FIELD
         MVC   BUFASM,BLANKS           BLANK THE FIELD
SCAN21   CLC   0(09,R4),CBNDYN         'BIND' FIELD REACHED ?
         BE    SCAN23                  YES: FOUND
         MVC   0(1,R3),0(R4)           MOVE BYTE 'ASM PARM' FIELD
         LA    R4,1(R4)                NEXT BYTE BUFFER
         LA    R3,1(R3)                NEXT BYTE 'ASM PARM' FIELD
         BCT   R6,SCAN21               TEST NEXT BYTE
         B     RPFPUT1                 DISPLAY SCREEN
SCAN23   LA    R4,09(R4)               POINT AFTER 'LKED Y/N:'
         SH    R6,=H'09'               SKIP THE BYTES
         LA    R3,BUFLKED              'LKED' FIELD
         MVC   BUFLKED,BLANKS          BLANK THE FIELD
SCAN25   CLC   0(12,R4),=C',Output Y/N:'                           @rp1
         BE    SCAN27                  YES: FOUND
         MVC   0(1,R3),0(R4)           MOVE BYTE 'LKED' FIELD
         LA    R4,1(R4)                NEXT BYTE BUFFER
         LA    R3,1(R3)                NEXT BYTE 'LKED' FIELD
         BCT   R6,SCAN25               TEST NEXT BYTE
         B     RPFPUT1                 DISPLAY SCREEN
SCAN27   LA    R4,12(R4)               POINT AFTER ',OUTPUT Y/N:'  @rp1
         SH    R6,=H'12'               SKIP THE BYTES              @rp1
         LA    R3,BUFLBRO              'BIND OUTPUT' FIELD
         MVC   BUFLBRO,BLANKS          BLANK THE FIELD
SCAN29   CLC   0(06,R4),=C',Parm:'     'BIND PARM' FIELD REACHED ?
         BE    SCAN31                  YES: FOUND
         MVC   0(1,R3),0(R4)           MOVE BYTE 'LKED' FIELD
         LA    R4,1(R4)                NEXT BYTE BUFFER
         LA    R3,1(R3)                NEXT BYTE 'LKED' FIELD
         BCT   R6,SCAN29               TEST NEXT BYTE
         B     RPFPUT1                 DISPLAY SCREEN
SCAN31   LA    R4,6(R4)                POINT AFTER ',PARM:'
         SH    R6,=H'6'                SKIP THE BYTES
         LA    R3,BUFLKPA              'LKED PARM' FIELD
         MVC   BUFLKPA,BLANKS          BLANK THE FIELD
SCAN33   CLC   0(8,R4),CPRT            'PRINTER:' REACHED ?
         BE    SCAN35                  YES: FOUND
         MVC   0(1,R3),0(R4)           MOVE BYTE 'BINDER PARM' FIELD
         LA    R4,1(R4)                NEXT BYTE BUFFER
         LA    R3,1(R3)                NEXT BYTE 'BINDER PARM' FIELD
         BCT   R6,SCAN33               TEST NEXT BYTE
         B     RPFPUT1                 DISPLAY SCREEN
SCAN35   LA    R4,8(R4)                POINT AFTER 'PRINTER:'
         SH    R6,=H'8'                SKIP THE BYTES
         LA    R3,BUFPRT               'PRINTER' FIELD
         MVC   BUFPRT,BLANKS           BLANK THE FIELD
SCAN37   CLC   0(7,R4),CCLASS          ',CLASS=' REACHED ?
         BE    SCAN39                  YES: FOUND
         MVC   0(1,R3),0(R4)           MOVE BYTE 'PRINTER' FIELD
         LA    R4,1(R4)                NEXT BYTE BUFFER
         LA    R3,1(R3)                NEXT BYTE 'PRINTER' FIELD
         BCT   R6,SCAN37               TEST NEXT BYTE
         B     RPFPUT1                 DISPLAY SCREEN
SCAN39   LA    R4,7(R4)                POINT AFTER 'CLASS='
         SH    R6,=H'7'                SKIP THE BYTES
         LA    R3,BUFCLAS              'CLASS' FIELD
         MVC   BUFCLAS,BLANKS          BLANK THE FIELD
SCAN41   CLC   0(2,R4),C1ST            1ST CONTROL STMNT REACHED ?
         BE    SCAN43                  YES: FOUND
         MVC   0(1,R3),0(R4)           MOVE BYTE 'CLASS' FIELD
         LA    R4,1(R4)                NEXT BYTE BUFFER
         LA    R3,1(R3)                NEXT BYTE 'CLASS' FIELD
         BCT   R6,SCAN41               TEST NEXT BYTE
         B     RPFPUT1                 DISPLAY SCREEN
SCAN43   LA    R4,2(R4)                POINT AFTER '1>'
         SH    R6,=H'2'                SKIP THE BYTES
         LA    R3,BUFCST1              1ST CONTROL STMNT FIELD
         MVC   BUFCST1,BLANKS          BLANK THE FIELD
SCAN45   CLC   0(2,R4),C2ND            2ND CONTROL STMNT REACHED ?
         BE    SCAN47                  YES: FOUND
         MVC   0(1,R3),0(R4)           MOVE BYTE 1ST CONTROL STMNT
         LA    R4,1(R4)                NEXT BYTE BUFFER
         LA    R3,1(R3)                NEXT BYTE 1ST CONTROL STMNT
         BCT   R6,SCAN45               TEST NEXT BYTE
         B     RPFPUT1                 DISPLAY SCREEN
SCAN47   LA    R4,2(R4)                POINT AFTER '2>'
         SH    R6,=H'2'                SKIP THE BYTES
         LA    R3,BUFCST2              2ND CONTROL STMNT FIELD
         MVC   BUFCST2,BLANKS          BLANK THE FIELD
SCAN49   CLC   0(2,R4),C3RD            3RD CONTROL STMNT REACHED ?
         BE    SCAN51                  YES: FOUND
         MVC   0(1,R3),0(R4)           MOVE BYTE 2ND CONTROL STMNT
         LA    R4,1(R4)                NEXT BYTE BUFFER
         LA    R3,1(R3)                NEXT BYTE 2ND CONTROL STMNT
         BCT   R6,SCAN49               TEST NEXT BYTE
         B     RPFPUT1                 DISPLAY SCREEN
SCAN51   LA    R4,2(R4)                POINT AFTER '3>'
         SH    R6,=H'2'                SKIP THE BYTES
         LA    R3,BUFCST3              3RD CONTROL STMNT FIELD
         MVC   BUFCST3,BLANKS          BLANK THE FIELD
SCAN53   CLC   0(2,R4),C4TH            4TH CONTROL STMNT REACHED ?
         BE    SCAN55                  YES: FOUND
         MVC   0(1,R3),0(R4)           MOVE BYTE 3RD CONTROL STMNT
         LA    R4,1(R4)                NEXT BYTE BUFFER
         LA    R3,1(R3)                NEXT BYTE 3RD CONTROL STMNT
         BCT   R6,SCAN53               TEST NEXT BYTE
         B     RPFPUT1                 DISPLAY SCREEN
SCAN55   LA    R4,2(R4)                POINT AFTER '4>'
         SH    R6,=H'2'                SKIP THE BYTES
         LA    R3,BUFCST4              4TH CONTROL STMNT FIELD
         MVC   BUFCST4,BLANKS          BLANK THE FIELD
SCAN57   CLC   0(2,R4),C5TH            5TH CONTROL STMNT REACHED ?
         BE    SCAN59                  YES: FOUND
         MVC   0(1,R3),0(R4)           MOVE BYTE 4TH CONTROL STMNT
         LA    R4,1(R4)                NEXT BYTE BUFFER
         LA    R3,1(R3)                NEXT BYTE 4TH CONTROL STMNT
         BCT   R6,SCAN57               TEST NEXT BYTE
         B     RPFPUT1                 DISPLAY SCREEN
SCAN59   LA    R4,2(R4)                POINT AFTER '5>'
         SH    R6,=H'2'                SKIP THE BYTES
         LA    R3,BUFCST5              5TH CONTROL STMNT FIELD
         MVC   BUFCST5,BLANKS          BLANK THE FIELD
SCAN61   CLC   0(2,R4),C6TH            6TH CONTROL STMNT REACHED ?
         BE    SCAN63                  YES: FOUND
         MVC   0(1,R3),0(R4)           MOVE BYTE 5TH CONTROL STMNT
         LA    R4,1(R4)                NEXT BYTE BUFFER
         LA    R3,1(R3)                NEXT BYTE 5TH CONTROL STMNT
         BCT   R6,SCAN61               TEST NEXT BYTE
         B     RPFPUT1                 DISPLAY SCREEN
SCAN63   LA    R4,2(R4)                POINT AFTER '6>'
         SH    R6,=H'2'                SKIP THE BYTES
         LA    R3,BUFCST6              6TH CONTROL STMNT FIELD
         MVC   BUFCST6,BLANKS          BLANK THE FIELD
         C     R6,F0000                LENGTH ALREADY ZERO ?
         BNH   ENDSCAN                 YES: END OF SCAN
SCAN65   MVC   0(1,R3),0(R4)           MOVE BYTE 6TH CONTROL STMNT
         LA    R4,1(R4)                NEXT BYTE BUFFER
         LA    R3,1(R3)                NEXT BYTE 6TH CONTROL STMNT
         BCT   R6,SCAN65               MOVE NEXT BYTE
ENDSCAN  EQU   *
         MVC   MSG5(22),MSG5-1         FILLUP MSG AREA WITH HYPHENS
         OC    BUFCMD,BLANKS           XLATE TO CAPS
         OC    BUFINP,BLANKS                 I
         OC    BUFINPO,BLANKS                I
         OC    BUFLIBI,BLANKS                I
         OC    BUFLIBO,BLANKS                I
         OC    BUFLIB0,BLANKS                I
         OC    BUFLIB1,BLANKS                I
         OC    BUFLIB2,BLANKS                I
         OC    BUFLIB3,BLANKS                I
         OC    BUFLIB4,BLANKS                I
         OC    BUFLIB5,BLANKS                I
         OC    BUFLIB6,BLANKS                I
         OC    BUFIDDN,BLANKS                I
         OC    BUFIDSN,BLANKS                I
         OC    BUFASM,BLANKS                 I
         OC    BUFASME,BLANKS                I
         OC    BUFLKPA,BLANKS                I
         OC    BUFPRT,BLANKS                 I                  @961125
         OC    BUFCLAS,BLANKS                I                  @961126
         OC    BUFOUTP,BLANKS                I
         OC    BUFLKED,BLANKS                I
         OC    BUFLBRO,BLANKS                I
         OC    BUFCST1,BLANKS                I
         OC    BUFCST2,BLANKS                I
         OC    BUFCST3,BLANKS                I
         OC    BUFCST4,BLANKS                I
         OC    BUFCST5,BLANKS                I
         OC    BUFCST6,BLANKS                I
         OC    BUFMEMB,BLANKS                V
         CLC   BUFINPO,BLANKS          OBJECT MOD BLANK ?
         BNE   *+10                    NO BRANCH
         MVC   BUFINPO,BUFINP          YES: COPY INPUT TO OBJECT
         CLC   BUFMEMB,BLANKS          LMOD BLANK ?
         BNE   *+10                    NO BRANCH
         MVC   BUFMEMB,BUFINPO         YES: COPY INPUT TO LMOD
         CLI   BUFCMD,C'?'             REFRESH SCREEN ?
         BNE   RPFTGET2                BRANCH IF NOT
RPFPUT1  EQU   *
         TPUT  SCR5TXT,SCR5LEN,FULLSCR REWRITE THE SCREENS
         B     RPFTGET1
RPFTGET2 EQU   *
         CLC   BUFCMD(3),=C'END'       END ENTERED ?
         BNE   RPFTGET4                NO: BRANCH
RPFTGET3 BAL   R14,RPFFREE             FREE THE DATASETS
         L     R14,=A(RPFNORM)         LOAD EXIT ADDRESS
         BR    R14                     NORMAL RETURN
RPFTGET4 EQU   *
         MVC   COMMMAC1,BUFLIB0        MOVE
         MVC   COMMMAC2,BUFLIB1          MACLIB
         MVC   COMMMAC3,BUFLIB2            LIBRARIES
         MVC   COMMMAC4,BUFLIB3              TO
         MVC   COMMMAC5,BUFLIB4                COMM-
         MVC   COMMMAC6,BUFLIB6                    AREA
         MVC   COMMLKED(69),BUFCST1    MOVE
         MVC   COMMLKED+69(69),BUFCST2     LKED
         MVC   COMMLKED+138(69),BUFCST3        CONTROL
         MVC   COMMLKED+207(69),BUFCST4              STATEMENTS
         MVC   COMMLKD2(69),BUFCST5                      TO THE
         MVC   COMMLKD2+69(69),BUFCST6                       COMMAREA
         MVC   COMMOBJ,BUFLIBO         MOVE DSN OF OBJ DS TO COMMAREA
         MVC   COMMIDDN,BUFIDDN        MOVE DDN OF INCLUDE LIBR TO COMM
         MVC   COMMIDSN,BUFIDSN        MOVE DSN OF INCLUDE LIBR TO COMM
         MVC   COMMASPA,BUFASM         MOVE ASM PARM TO COMMAREA
         MVC   COMMLKPA,BUFLKPA        MOVE BINDER PARM TO COMMAREA
         MVC   DEFPRT,BUFPRT           MOVE PRINTER NAME TO COMMAREA
         MVC   DEFOUT,BUFCLAS          MOVE OUTPUT TO COMMAREA
         LA    R3,BUFLIB0              SHIFT BLANK MACLIBS
         LA    R4,6                    MAX 6 TIMES
*        AT THIS POINT BLANK MACLIB SPECIFICATIONS WILL BE
*        SHIFTED TO THE END
*        THAT IS EASY TO SCAN: IF A MACLIB IS FOUND BLANK,
*        ALL THE NEXT ONES ARE BLANK TOO.
RPFTGET5 CLI   0(R3),C' '              BLANK MACLIB ?
         BNE   RPFTGET6                NO: INVESTIGATE NEXT MACLIB
         MVC   BUFLIB0,BUFLIB1         MOVE BUFLIB1 TO BUFLIB0
         MVC   BUFLIB1,BUFLIB2         MOVE BUFLIB2 TO BUFLIB1
         MVC   BUFLIB2,BUFLIB3         MOVE BUFLIB3 TO BUFLIB2
         MVC   BUFLIB3,BUFLIB4         MOVE BUFLIB4 TO BUFLIB3
         MVC   BUFLIB4,BUFLIB6         MOVE BUFLIB6 TO BUFLIB4
         MVC   BUFLIB6,BLANKS          MOVE BLANKS INTO BUFLIB6
         BCT   R4,RPFTGET5             LOOP UNTIL ALL DONE
         B     RPFTGETZ                NO MACLIBS SPECIFIED
RPFTGET6 LA    R3,BUFLIB1              SHIFT BLANK MACLIBS
         LA    R4,5                    MAX 5 TIMES
RPFTGET7 CLI   0(R3),C' '              BLANK MACLIB ?
         BNE   RPFTGET8                NO: INVESTIGATE NEXT MACLIB
         MVC   BUFLIB1,BUFLIB2         MOVE BUFLIB2 TO BUFLIB1
         MVC   BUFLIB2,BUFLIB3         MOVE BUFLIB3 TO BUFLIB2
         MVC   BUFLIB3,BUFLIB4         MOVE BUFLIB4 TO BUFLIB3
         MVC   BUFLIB4,BUFLIB6         MOVE BUFLIB6 TO BUFLIB4
         MVC   BUFLIB6,BLANKS          MOVE BLANKS INTO BUFLIB6
         BCT   R4,RPFTGET7             LOOP UNTIL ALL DONE
         B     RPFTGETZ                NO MACLIBS SPECIFIED
RPFTGET8 LA    R3,BUFLIB2              SHIFT BLANK MACLIBS
         LA    R4,4                    MAX 4 TIMES
RPFTGET9 CLI   0(R3),C' '              BLANK MACLIB ?
         BNE   RPFTGETA                NO: INVESTIGATE NEXT MACLIB
         MVC   BUFLIB2,BUFLIB3         MOVE BUFLIB3 TO BUFLIB2
         MVC   BUFLIB3,BUFLIB4         MOVE BUFLIB4 TO BUFLIB3
         MVC   BUFLIB4,BUFLIB6         MOVE BUFLIB6 TO BUFLIB4
         MVC   BUFLIB6,BLANKS          MOVE BLANKS INTO BUFLIB6
         BCT   R4,RPFTGET9             LOOP UNTIL ALL DONE
         B     RPFTGETZ                NO MACLIBS SPECIFIED
RPFTGETA LA    R3,BUFLIB3              SHIFT BLANK MACLIBS
         LA    R4,3                    MAX 3 TIMES
RPFTGETB CLI   0(R3),C' '              BLANK MACLIB ?
         BNE   RPFTGETC                NO: INVESTIGATE NEXT MACLIB
         MVC   BUFLIB3,BUFLIB4         MOVE BUFLIB4 TO BUFLIB3
         MVC   BUFLIB4,BUFLIB6         MOVE BUFLIB6 TO BUFLIB4
         MVC   BUFLIB6,BLANKS          MOVE BLANKS INTO BUFLIB6
         BCT   R4,RPFTGETB             LOOP UNTIL ALL DONE
RPFTGETC LA    R3,BUFLIB4              SHIFT BLANK MACLIBS
         LA    R4,2                    MAX 2 TIMES
RPFTGETD CLI   0(R3),C' '              BLANK MACLIB ?
         BNE   RPFTGETZ                NO: INVESTIGATE NEXT MACLIB
         MVC   BUFLIB4,BUFLIB6         MOVE BUFLIB6 TO BUFLIB4
         MVC   BUFLIB6,BLANKS          MOVE BLANKS INTO BUFLIB6
         BCT   R4,RPFTGETD             LOOP UNTIL ALL DONE
RPFTGETZ MVC   SCR5LBI,BUFLIBI         MOVE
         MVC   SCR5LBO,BUFLIBO
         MVC   SCR5LB0,BUFLIB0           THE
         MVC   SCR5LB1,BUFLIB1
         MVC   SCR5LB2,BUFLIB2
         MVC   SCR5LB3,BUFLIB3              READ
         MVC   SCR5LB4,BUFLIB4
         MVC   SCR5LB5(44),BUFLIB5               SCR
         MVC   SCR5LB6(44),BUFLIB6                  EEN
         MVC   SCR5IDDN,BUFIDDN
         MVC   SCR5IDSN,BUFIDSN
         MVC   SCR5INP,BUFINP
         MVC   SCR5INPO,BUFINPO                     IN
         MVC   REP5,BUFCMD
         MVC   SCR5OUT,BUFOUTP
         MVC   SCR5LKD,BUFLKED                          FORMAT
         MVC   SCR5MEM,BUFMEMB
         MVC   SCR5ASM,BUFASM
         MVC   SCR5ASME,BUFASME
         MVC   SCR5PRM,BUFLKPA
         MVC   SCR5PRT,BUFPRT                                   @961125
         MVC   SCR5CLAS,BUFCLAS                                 @961126
         MVC   SCR5BRO,BUFLBRO
         MVC   STMNT1+5(69),BUFCST1
         MVC   STMNT2+5(69),BUFCST2
         MVC   STMNT3+5(69),BUFCST3
         MVC   STMNT4+5(69),BUFCST4
         MVC   STMNT5+5(69),BUFCST5
         MVC   STMNT6+5(69),BUFCST6
         L     R14,SAVE14              RESTORE RETURN REGISTER
         BR    R14                     BRANCH TO CALLER
         TITLE 'FREE THE DATASETS'
RPFFREE  EQU   *
         ST    R14,SAVE14              SAVE REG 14
         LA    R1,DDCPTR               DECONCATENATE
         DYNALLOC
         SYALLOC FREE=RPFUT1,MF=E      SYSUT1
         SYALLOC FREE=RPFUT2,MF=E      SYSUT2
         SYALLOC FREE=RPFUT3,MF=E      SYSUT3
         SYALLOC FREE=RPFGO,MF=E       SYSLIN OF ASSEMBLER
         SYALLOC FREE=RPFLIN,MF=E      SYSLIN OF LINKAGE EDITOR
         SYALLOC FREE=RPFLIB,MF=E      SYSLIB
         SYALLOC FREE=RPFLIB1,MF=E     CONCATENATION TO SYSLIB
         SYALLOC FREE=RPFLIB2,MF=E     CONCATENATION TO SYSLIB
         SYALLOC FREE=RPFLIB3,MF=E     CONCATENATION TO SYSLIB
         SYALLOC FREE=RPFLIB4,MF=E     CONCATENATION TO SYSLIB
         SYALLOC FREE=RPFLIB6,MF=E     CONCATENATION TO SYSLIB
         SYALLOC FREE=RPFLMOD,MF=E     SYSLMOD
         SYALLOC FREE=RPFAUT,MF=E      AUTOMATIC CALL LIBRARY
         CLI   BUFIDDN,C' '            DDNAME INCLUDE LIB SPECIFIED ?
         BE    FREE99                  NO: BRANCH
         CLI   BUFIDSN,C' '            DDNAME INCLUDE LIB SPECIFIED ?
         BE    FREE99                  NO: BRANCH
         SYALLOC FREADDR=BUFIDDN,MF=E FREE INCLUDE LIBRARY
FREE99   EQU   *
         L     R14,SAVE14              RESTORE REG 14
         BR    R14                     BACK TO CALLER
         TITLE 'ERROR IN ALLOCATION WORK AND PRINT DATASETS'
RPFABNO  EQU   *
         L     R13,SAVE+4              LOAD CALLERS SAVE AREA
         RETURN (14,12),RC=4           ERROR RETURN
*
         TITLE 'S C R E E N  FORMATS'
SCR5TXT  DC    X'27F5C21140401DF8'
         DC    CL57'RPF Foreground assembler (And linkage editor)------X
               ------'
MSG5     DC    CL22'----------------------'
         DC    X'11C1501DF8',C'Cmd =>',X'1DC1'
REP5     DC    CL24' ',X'1DF0',AL3(TURQ)
         DC    C'   Enter ',AL3(YELLOW)
         DC    C'''END'' ',AL3(TURQ)
         DC    C'or press ',AL3(YELLOW)
         DC    C'PFK3/PFK15 ',AL3(TURQ),C'to terminate'
         DC    X'11C2601DF1',AL3(WHITE) R03,C01
CSRC     DC    C'(1)',X'1DF0',AL3(GREEN),C'Src-lib ',AL3(TURQ),C'MEM='
         DC    X'1DC9',AL3(RED)
SCR5INP  DC    CL8' '
         DC    X'1DF1',AL3(TURQ),C',DSN=',X'1DC9'
         DC    X'11C3C1',AL3(RED)      R03,C34
SCR5LBI  DC    CL44' '
         DC    X'1DF0'
         DC    X'11C3F01DF1',AL3(WHITE) R04,C01
COBJ     DC    C'(2)',X'1DF0',AL3(GREEN),C'Obj-lib ',AL3(TURQ),C'MEM='
         DC    X'1DC9',AL3(RED)
SCR5INPO DC    CL8' '
         DC    X'1DF1',AL3(TURQ),C',DSN=',X'1DC9'
CUROBJ   DC    X'11C4D1',AL3(RED)      R04,C34
SCR5LBO  DC    CL44' '
         DC    X'1DF0'
         DC    X'11C5401DF1',AL3(WHITE) R05,C01
CLOAD    DC    C'(3)',X'1DF0',AL3(GREEN),C'Loadlib ',AL3(TURQ),C'MEM='
         DC    X'1DC9',AL3(RED)
SCR5MEM  DC    CL8' '
         DC    X'1DF1',AL3(TURQ),C',DSN=',X'1DC9'
CURLOAD  DC    X'11C561'               R05,C34
         DC    AL3(RED)
SCR5LB5  DC    CL44' '
         DC    X'1DF0'
         DC    X'11C6501DF1',AL3(WHITE) R06,C01
CINC     DC    C'(4)',X'1DF0',AL3(GREEN),C'INC-lib ',AL3(TURQ),C'DDN='
         DC    X'1DC9'
         DC    AL3(RED)
SCR5IDDN DC    CL8' '
         DC    X'1DF1',AL3(TURQ),C',DSN=',X'1DC9'
CURIDSN  DC    X'11C6F1'               R06,C34
         DC    AL3(RED)
SCR5IDSN DC    CL44' '
         DC    X'1DF0'
         DC    X'11C8F01DF1',AL3(WHITE) R08,C01
C1STMAC  DC    C'(5)',X'1DF0',AL3(GREEN),C'Maclib1 ',AL3(TURQ),C'DSN='
         DC    X'1DC9'
CURMAC1  DC    X'11C9C2'               R08,C19
         DC    AL3(RED)
SCR5LB0  DC    CL44' '                 MACLIB NAME 1
         DC    X'1DF0'
         DC    X'114A401DF1',AL3(WHITE) R09,C01
C2NDMAC  DC    C'(6)',X'1DF0',AL3(GREEN),C'Maclib2 ',AL3(TURQ),C'DSN='
         DC    X'1DC9'
CURMAC2  DC    X'114AD2'               R09,C19
         DC    AL3(RED)
SCR5LB1  DC    CL44' '                 MACLIB NAME 2
         DC    X'1DF0'
         DC    X'114B501DF1',AL3(WHITE) R10,C01
C3RDMAC  DC    C'(7)',X'1DF0',AL3(GREEN),C'Maclib3 ',AL3(TURQ),C'DSN='
         DC    X'1DC9'
CURMAC3  DC    X'114BE2'               R10,C19
         DC    AL3(RED)
SCR5LB2  DC    CL44' '                 MACLIB NAME 3
         DC    X'1DF0'
         DC    X'114C601DF1',AL3(WHITE) R11,C01
C4THMAC  DC    C'(8)',X'1DF0',AL3(GREEN),C'Maclib4 ',AL3(TURQ),C'DSN='
         DC    X'1DC9'
CURMAC4  DC    X'114CF2'               R11,C19
         DC    AL3(RED)
SCR5LB3  DC    CL44' '                 MACLIB NAME 4
         DC    X'1DF0'
         DC    X'114DF01DF1',AL3(WHITE) R12,C01
C5THMAC  DC    C'(9)',X'1DF0',AL3(GREEN),C'Maclib5 ',AL3(TURQ),C'DSN='
         DC    X'1DC9'
CURMAC5  DC    X'114EC2'               R12,C19
         DC    AL3(RED)
SCR5LB4  DC    CL44' '                 MACLIB NAME 5
         DC    X'1DF0'
         DC    X'114F401DF1',AL3(WHITE) R13,C01
C6THMAC  DC    C'(A)',X'1DF0',AL3(GREEN),C'Maclib6 ',AL3(TURQ),C'DSN='
         DC    X'1DC9'
CURMAC6  DC    X'114FD2'               R13,C19
         DC    AL3(RED)
SCR5LB6  DC    CL44' '                 MACLIB NAME 6
         DC    X'1DF0'
         DC    X'11D160',X'1DF1',AL3(TURQ) R15,C01
CASMYN   DC    C'ASM  Y/N:',X'1DC9',AL3(RED)
SCR5ASME DC    C'Y',X'1DF1',AL3(TURQ)
         DC    C',Output Y/N:',X'1DC9'                             @rp1
         DC    AL3(RED)
SCR5OUT  DC    C'N',X'1DF1',AL3(TURQ),C',Parm:'
         DC    X'1DC9',AL3(RED)
SCR5ASM  DC    CL30' ',X'1DF0'
         DC    X'11D2F0',X'1DF1'       R16,C01
         DC    AL3(TURQ)
CBNDYN   DC    C'LKED Y/N:',X'1DC9',AL3(RED)
SCR5LKD  DC    C'Y',X'1DF1'
         DC    AL3(TURQ)
         DC    C',Output Y/N:',X'1DC9'                             @rp1
         DC    AL3(RED)
SCR5BRO  DC    C'N',X'1DF1',AL3(TURQ),C',Parm:'
         DC    X'1DC9'
         DC    AL3(RED)
SCR5PRM  DC    CL30' ',X'1DF0'
         DC    X'1DF1',X'11D4C1'       R17,C02 MDT ON
         DC    AL3(TURQ)
CPRT     DC    C'Printer:',X'1DC9'
         DC    AL3(RED)
SCR5PRT  DC    CL8' ',X'1DF1'
         DC    AL3(TURQ)
CCLASS   DC    C',CLASS=',X'1DC9'
         DC    AL3(RED)
SCR5CLAS DC    C' ',X'1DF0'
         DC    X'11D5D1'               R18,C02
         DC    AL3(YELLOW)
         DC    C'Optional lked   control statements, DDNAME loadlib is X
               RPFAUT'
         DC    X'1DF9',X'11D661'        R19,C02
         DC    AL3(WHITE)
C1ST     DC    C'1>'
STMNT1   DC    X'1DC1',AL3(RED),CL69' ',X'1DF0',X'1DF9',X'11D7F1' 20,02
         DC    AL3(WHITE)
C2ND     DC    C'2>'
STMNT2   DC    X'1DC1',AL3(RED),CL69' ',X'1DF0',X'1DF9',X'11D9C1' 21,02
         DC    AL3(WHITE)
C3RD     DC    C'3>'
STMNT3   DC    X'1DC1',AL3(RED),CL69' ',X'1DF0',X'1DF9',X'115AD1' 22,02
         DC    AL3(WHITE)
C4TH     DC    C'4>'
STMNT4   DC    X'1DC1',AL3(RED),CL69' ',X'1DF0',X'1DF9',X'115B61' 23,02
         DC    AL3(WHITE)
C5TH     DC    C'5>'
STMNT5   DC    X'1DC1',AL3(RED),CL69' ',X'1DF0',X'1DF9',X'115CF1' 24,02
         DC    AL3(WHITE)
C6TH     DC    C'6>'
STMNT6   DC    X'1DC1',AL3(RED),CL69' ',X'1DF0'
SCR5CURS DC    XL3'000000'
         DC    X'13'
SCR5LEN  EQU   *-SCR5TXT
SCR2TXT  DC    X'27F1C01140401DF8'
         DC    X'11407A'               R01,C59
MSG2     DC    CL22' '
         DC    X'11C150',X'1DF8',C'CMD =>',X'1DC113'
REP2     DC    CL24' ',X'1DF0'
SCR2LEN  EQU   *-SCR2TXT
CURDS0   DC    X'11C2F2'               R03,C19
BUFCMD   DS    CL24
BUFINP   DS    CL8
BUFINPO  DS    CL8
BUFLIBI  DS    CL44
BUFLIBO  DS    CL44
BUFLIB0  DS    CL44
BUFLIB1  DS    CL44
BUFLIB2  DS    CL44
BUFLIB3  DS    CL44
BUFLIB4  DS    CL44
BUFLIB6  DS    CL44
BUFIDDN  DS    CL8
BUFIDSN  DS    CL44
BUFOUTP  DS    CL1
BUFASME  DS    CL1
BUFASM   DS    CL30
BUFLKED  DS    CL1
BUFLKPA  DS    CL30
BUFLBRO  DS    CL1
BUFMEMB  DS    CL8
BUFLIB5  DS    CL44
BUFPRT   DS    CL8                                              @961125
BUFCLAS  DS    CL1                                              @961126
BUFCST1  DS    CL69
BUFCST2  DS    CL69
BUFCST3  DS    CL69
BUFCST4  DS    CL69
BUFCST5  DS    CL69
BUFCST6  DS    CL69
         DS    CL5
*
ERR2TXT  DC    CL22'- Alloc. error work DS'
ERR4TXT  DC    CL11' Alloc cde '
ERR4CODE DC    CL4' '
         DC    CL4' on '
ERR4NBR  DC    CL3' '
ERR5TXT  DC    CL22' DYNALLOC error SYSLIB'
ERR6TXT  DS    0CL22
         DC    C'-- Allocation RC= '
ERR6CDE  DC    CL4' '
ERR7TXT  DC    CL22' Ds (.) same as ds (1)' 05
ERR8TXT  DC    CL22'-- Invalid key pressed'
ERR9TXT  DC    CL22'--- xxxxxxxx not found'
MSG1TXT  DS    0CL22
         DC    C' '
MSG1ASM  DC    CL8' '
MSG1RC1  DC    CL2' '
MSG1RLK  DC    CL4' '
MSG1LKD  DC    CL5' '
MSG1RC2  DC    CL2' '
MSG3TXT  DC    CL22'-- Assembler running..'
MSG4TXT  DC    CL22'--linkeditor running..'
         TITLE 'DDNAME LISTS OF ASSEMBLER AND Linkage Editor'
ASMDDNS  DS    0F
         DC    AL2(STOPA-STARTA)
STARTA   EQU   *
         DC    CL8'RPFGO'               SYSLIN ENTRY
         DC    XL8'00'                  EMPTY ENTRY (SYSLMOD MBR)
         DC    XL8'00'                  EMPTY ENTRY (SYSLMOD)
         DC    CL8'RPFLIB'              SYSLIB
         DC    CL8'RPFWORK'             SYSIN
         DC    CL8'RPFPRINT'            SYSPRINT
         DC    CL8'RPFPUNCH'            SYSPUNCH
         DC    CL8'RPFUT1'              SYSUT1
TERM90   DC    CL8'RPFUT2'              SYSUT2 or SYSTERM if IEV90 @rp2
         DC    CL8'RPFUT3'              SYSUT3
         DC    CL8'RPFGO'               SYSGO
         DC    CL8'RPFTERM'             SYSTERM
STOPA    EQU   *
BINDDDNS DS    0H
         DC    AL2(STOPL-STARTL)
STARTL   EQU   *
         DC    CL8'RPFLIN'             SYSLIN
MEMBERNM DC    XL8'00'                 MEMBER NAME OF LINKAGE EDITOR.
         DC    CL8'RPFLMOD'            SYSLMOD
         DC    CL8'RPFAUT'             SYSLIB
         DC    XL8'00'
         DC    CL8'RPFLKPRT'           SYSPRINT
         DC    XL8'00'
         DC    CL8'RPFUT1'             SYSUT1
         DC    XL8'00'
         DC    XL8'00'
         DC    XL8'00'
         DC    XL8'00'                 SYSTERM
STOPL    EQU   *
DAIRPARM DS    F
CURSTD   DC    X'11C2F2'               DEFAULT CURSOR POS. FOR SCREEN
         TITLE 'SYALLOC CONTROL BLOCKS'
         SYALLOC MF=L
         SPACE 5
*        CONCATENATION CONTROL BLOCKS
         DS    0F
DCCPTR   DC    X'80',AL3(DCCBLK)       CONCATENATION POINTER
*
DCCBLK   DC    AL1(20)                 LENGTH OF BLOCK
DCCVERB  DC    AL1(3)                  DYNAMIC CONCATENATION
         DC    X'2000'                 FLAGS
DCCERR   DC    AL2(0)                  ERROR CODE
DCCINFO  DC    AL2(0)                  INFO CODE
         DC    A(DCCTXT)               TEXT UNIT LIST
         DC    A(0)                    RESERVED
         DC    A(0)                    FLAGS 2
*
DCCTXT   DS    0F
         DC    X'80',AL3(DCCDDNAM)     DDNAME TEXT UNIT
*
DCCDDNAM DC    X'0001'                 DDNAMES
DCCCOUNT DC    AL2(1)                  NUMBER OF DDNAMES (MAX 5)
         DC    AL2(8)
DCCDDN1  DC    CL8'RPFLIB'             FIRST DDNAME
         DC    AL2(8)
DCCDDN2  DC    CL8'RPFLIB1'            SECOND DDNAME
         DC    AL2(8)
DCCDDN3  DC    CL8'RPFLIB2'            THIRD DDNAME
         DC    AL2(8)
DCCDDN4  DC    CL8'RPFLIB3'            FOURTH DDNAME
         DC    AL2(8)
DCCDDN5  DC    CL8'RPFLIB4'            FIFTH DDNAME
         DC    AL2(8)
DCCDDN6  DC    CL8'RPFLIB6'            SIXTH DDNAME
         SPACE 5
*        DECONCATENATION CONTROL BLOCKS
         SPACE 2
         DS    0F
DDCPTR   DC    X'80',AL3(DDCBLK)       POINTER TO REQUEST BLK
*
DDCBLK   DC    AL1(20)                 LENGTH OF REQ BLK
DDCVERB  DC    AL1(4)                  DYNAMIC DECONCATENATION
         DC    X'2000'                 FLAGS 1
DDCERR   DC    AL2(0)                  ERROR CODE
DDCINFO  DC    AL2(0)                  INFO CODE
         DC    A(DDCTXT)               TEXT UNIT LIST
         DC    A(0)                    RESERVED
         DC    A(0)                    FLAGS2
*
DDCTXT   DS    0F
         DC    X'80',AL3(DDCDDNAM)     DDNAME TEXT UNIT
*
DDCDDNAM DC    X'0001'                 CONCATENATION GROUP
         DC    AL2(1)
         DC    AL2(8)                  LENGTH
         DC    CL8'RPFLIB'             DDNAME GROUP
         TITLE 'VARIABLES CONSTANTS AND CONTROL BLOCKS'
SAVE14   DS    F
F0000    DC    F'0'
F0004    DC    F'4'
F0007    DC    F'7'
F0008    DC    F'8'
F0012    DC    F'12'
ASMBLKSI DC    H'6050'                 BLOCK SIZE ASM SYSPRINT
LIBBLK   DC    H'32000'                BLOCK SIZE SYSLIB
PRTDSN   DS    0CL44
         DC    X'5050'
         DC    CL42'RPFPRINT'
LINDSN   DS    0CL44
         DC    X'5050'
         DC    CL42'RPFLIN'
UT1DSN   DS    0CL44
         DC    X'5050'
         DC    CL42'RPFUT1'
UT2DSN   DS    0CL44
         DC    X'5050'
         DC    CL42'RPFUT2'
UT3DSN   DS    0CL44
         DC    X'5050'
         DC    CL42'RPFUT3'
TERMDSN  DS    0CL44
         DC    X'5050'
         DC    CL42'RPFTERM'
LKPRTDSN DS    0CL44                   LINKAGE EDITOR SYSPRINT
         DC    X'5050'
         DC    CL42'RPFLKPRT'
OBJDSN   DS    0CL44                   OBJECT OUTPUT
         DC    X'5050'
         DC    CL42'RPFOBJ'
*
*        DC    CL8'IEV90'              deleted by                  @rp1
LKDNAME  DC    CL8'IEWL    '           NAME OF BINDER
*
SW       DC    X'00'
$NOOBJ   EQU   128                     NO OBJ DATASET ALLOCATED
$NOASM   EQU   64                      ASSEMBLY NOT EXECUTED
$LKEXEC  EQU   32                      LINKAGE EDITOR EXECUTED
         DS    0H
BINDPARM DC    CL32' '
ASMDPRM  DC    AL2(ASMEND-ASMBEG)
ASMPARM  DC    AL2(ASMEND-ASMBEG)
ASMBEG   DC    C'NODECK,LOAD,TERM,LINECOUNT(51),XREF(SHORT)'
ASMEND   DC    C','
ASMREST  DC    CL30' '
*
ASMSRCH  DS    0F                      Align on fullword           @rp1
         DC    AL2(1)                  ONE ENTRY                   @rp1
         DC    AL2(14)                 LENGTH OF DATA              @rp1
ASMLINK  DC    CL8' '                  Assembler program name      @rp1
         DC    XL6'00'                 TTRKZC                      @rp1
*
LINE     DC    CL80' '
         PRINT NOGEN
RPFLIN   DCB   DSORG=PS,DDNAME=RPFLIN,MACRF=PM,RECFM=FB,LRECL=80,      X
               BLKSIZE=3200
         PRINT GEN
DWB      DS    D
         TITLE 'L I T E R A L S'
         SPACE 2
         LTORG
         TITLE 'X P F C O M M      DSECT'
COMMAREA RPFCOMM
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         END
