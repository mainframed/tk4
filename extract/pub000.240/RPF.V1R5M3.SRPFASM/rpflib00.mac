RPFLIB00 TITLE 'READ A LIBRARIAN MEMBER INTO WORKSPACE'
*---------------------------------------------------------------------*
*                                                                     *
*        MODULE:        RPFLIB00                                      *
*                                                                     *
*        FUNCTION:      PRESENT A MENU FOR ALLOCATION A LIBRARIAN     *
*                       MASTER FILE. IF THE MASTERFILE IS ALLOCATED   *
*                       A LIBRARIAN MODULE OR AN LIBRARIAN INDEX CAN  *
*                       BE FETCHED. THE OUTPUT WILL BE PLACED IN THE  *
*                       EDIT WORKSPACE. AFTER THE COMPLETION CONTROL  *
*                       WILL BE PASSED TO RPFEDIT.                    *
*                       IF AN ERROR OCCURS DURING PROCESSING OF THIS  *
*                       MODULE A SUITABLE MESSAGE WILL BE DISPLAYED   *
*                       TOGETHER WITH A RETRY SCREEN.                 *
*                                                                     *
*        NOTE:     YOU SHOULD INCLUDE THE LIBRARIAN FAIR ROUTINES     *
*                  BASED UPON RELEASE 3.3A OR LATER OF LIBRARIAN      *
*                  THE MODULES NEEDED: FAIROPN,FAIRCLS,FAIRMOD AND    *
*                  FAIRREC.                                           *
*                                                                     *
*        RETURNCODES (SET IN RTNCODE FIELD OF COMMAREA)               *
*        00 - COMPLETION OK CONTROL PASSED TO RPFEDIT.                *
*        04 - WORKSPACE TOO SMALL (ERROR MSG PRODUCED BY EDITOR)      *
*        08 - EXIT ENTERED BY USER.                                   *
*                                                                     *
*------------------------------------------ (C)-2001 SKYBIRD SYSTEMS -*
         SPACE 2
RPFLIB00 CSECT
         USING *,R15
         SAVE  (14,12),,*
         LA    R14,SAVE
         ST    R13,SAVE+4
         ST    R14,8(R13)
         LR    R13,R14
         DROP  R15
         LA    R12,2048(R13)       SECOND BASE REGISTER
         LA    R12,2048(R12)       SECOND BASE REGISTER
         USING SAVE,R13,R12
         B     START                BRANCH AROUND CONSTANTS
         SPACE 2
SAVE     DC    18F'-1'
         DC    CL8'&SYSDATE'
         DC    CL8' '
         DC    CL8'&SYSTIME'
         EJECT
START    DS    0D
         L     R11,0(R1)           PICKUP COMMAREA
         USING COMMAREA,R11        GET ADDRESSABILITY
         MVI   SCR3OPT,C'1'        MOVE DEFAULT OPTION
         MVC   SCR3CUR+1(2),=X'D16F'   MOVE R15,C16 AS CURSOR ADDR.
         MVI   MSG3,C'-'           INIT MESSAGE
         MVC   MSG3+1(21),MSG3     AND PROPAGATE
         MVC   SCR3TXT(2),=X'27F5' WRITE CC NORMAL
         MVC   SCR3LAST+1(2),=X'5CF0' R24,C01 FOR LAST LINE
         GTSIZE ,                  GET SCREENSIZE
         LR    R3,R0               NUMBER OF LINES
         CH    R3,=H'43'           43 LINES RECEIVED ?
         BE    START1              YES: BRANCH
         CH    R3,=H'32'           32 LINES RECEIVED ?
         BE    START2              YES: BRANCH
         B     START3              ELSE DEFAULT
START1   MVC   SCR3TXT(2),=X'277E' WRITE CC ALTERNATE
         MVC   SCR3LAST+1(2),=X'F460' R43,C01 FOR LAST LINE
         B     START3              AND BRANCH
START2   MVC   SCR3TXT(2),=X'277E' WRITE CC ALTERNATE
         MVC   SCR3LAST+1(2),=X'E6F0' R32,C01 FOR LAST LINE
         B     START3              AND BRANCH
START3   MVC   SCR3UPP,FOLD        MOVE DEFAULT DATA TYPE
         XC    RTNCODE,RTNCODE     INIT RTNCODE FIELD
         MVC   SCR3UID(7),USERID   USERID INTO SCREEN
         SYALLOC FREE=MASTER,MF=E  FREE PREVIOUS MASTERFILE IF PRES
         MVC   SCR3MEM,COMMMOD     MOVE LIBRARIAN MODULE
         MVC   SCR3DSN,COMMSTR         MOVE LIBRARIAN MASTER
         MVC   SCR3VOL,COMMSVOL        MOVE LIBRARIAN VOLUME
RESTART  DS    0H
         MVI   BUFCMD,C' '             BLANK COMMAND
         TPUT  SCR3TXT,SCR3LEN,FULLSCR  MASTERFILE INFO:
         MVC   SCR3CUR+1(2),=X'C15E'   R02,C15 AS CURSOR ADDRESS
GET1     LA    R5,BUFFER               OUTPUT FORMATTED BUFFER
         L     R3,COMMSCR              LOAD SCREEN ADDRESS
         TGET  (R3),250,ASIS           READ THE SCREEN
         LR    R4,R1                   SAVE LENGTH
*        DO AN TGET ASIS TO OBTAIN THE AID BYTE
*        AFTER THE TGET ASIS REMOVE THE SBA'S FROM THE OUTPUT
         CLI   0(R3),X'F3'             PFK3 (END) PRESSED
         BE    RETURN8                 YES: RETURN
         CLI   0(R3),X'C3'             PFK15 (END) PRESSED
         BE    RETURN8                 YES: RETURN
         XR    R2,R2                    INIT OUTPUT LENGTH
         LR    R4,R1                   SAVE INPUT LENGTH
         SH    R4,=H'3'                SKIP AID AND CURSOR ADDRESS
         C     R4,F0000                REGISTER ZERO
         BNH   CONV099                 NOT HIGH: END OF ROUTINE
         LA    R3,3(R3)
         LA    R5,BUFFER               OUTPUT ADDRESS
*        INPUT SCREEN IS POINTED TO BY R3
*        OUTPUT SCREEN IS POINTED TO BY R5
*        THE NEXT SECTION WILL REMOVE ALL THE SBA'S
CONV001  CLI   0(R3),X'11'             SET BUFFER ADDRESS ?
         BE    CONV003                 YES: SKIP NEXT 3 BYTES INPUT
*        CLI   0(R3),X'BD'             IS IT A MEMOREX CHAR ?  101282JB
*        BE    CONV#02                 YES: DONOT MOVE CHAR    101282JB
*        CLI   0(R3),X'3D'             ETX  MRX CHAR?          141282JB
*        BE    CONV099                 YES, END INPUT          151282JB
*        BNE   CONV002                 NO MOVE CHAR            141282JB
*ONV#02  EQU   *                                               141282JB
*        LA    R3,1(R3)                GO TO TEST NEXT CHAR    101282JB
*        BCTR  R4,0                    LENGTH -/- 1            131282JB
*        B     CONV001                 TEST IT                 101282JB
CONV002  MVC   0(1,R5),0(R3)           MOVE INPUT BYTE
         LA    R3,1(R3)                NEXT BYTE INPUT
         LA    R2,1(R2)                COUNT OUTPUT BYTES
         LA    R5,1(R5)                NEXT BYTE OUTPUT
         BCT   R4,CONV001              TEST NEXT BYTE
         B     CONV099                 END OF ROUTINE
CONV003  LA    R3,3(R3)                SKIP 3 BYTES INPUT
         BCTR  R4,0                    MINUS 1 BCT
         BCTR  R4,0                    MINUS 1 BCT
         C     R4,F0000                REGISTER ZERO ?
         BNH   CONV099                 YES: TERMINATE CONVERSION
         BCT   R4,CONV001              TEST NEXT BYTE
CONV099  LR    R1,R2                   OUTPUT LENGTH IN REGISTER 1
SCAN01   MVC   MSTRVOL(6),BLANKS   CLEAR VOLUME
         MVC   MODULE(8),BLANKS    CLEAR MODULE
         MVC   MSTRFILE(44),BLANKS   CLEAR MASTERFILE
         LA    R5,BUFFER           POINT TO BEGINNING OF BUFFER
         LR    R6,R1               LOAD LENGTH OF BUFFER
         LA    R4,BUFCMD           COMMAND
SCAN02   CLC   0(13,5),=C'UPPER CASE  ='  SEARCH FOR MODULE
         BE    SCAN04              FOUND: PROCESS MODULE
         MVC   0(1,R4),0(R5)       MOVE 1 BYTE COMMAND
         LA    R4,1(R4)            NEXT BYTE
         LA    R5,1(R5)            NEXT BYTE
         BCT   R6,SCAN02           EXAMINE NEXT BYTES
         B     RESTART             CLEAR KEY PRESSED
SCAN04   LA    R5,13(R5)           POINT AFTER 'MODULE='
         LA    R4,FOLD             POINT TO "FOLD" IN COMMAREA
SCAN03   CLC   0(13,R5),=C'MODULE      ='  SEARCH FOR MODULE
         BE    SCAN05              FOUND: PROCESS MODULE
         MVC   0(1,R4),0(R5)       MOVE 1 BYTE FOLD
         LA    R5,1(R5)            NEXT BYTE
         LA    R4,1(R4)            NEXT BYTE
         BCT   R6,SCAN03           EXAMINE NEXT BYTES
         B     RESTART             CLEAR KEY PRESSED
SCAN05   LA    R5,13(R5)           POINT AFTER 'MODULE='
         LA    R4,MODULE           POINT TO MODULE FIELD
SCAN07   CLC   0(13,5),=C'MASTER FILE =' SEARCH FOR MASTER FILE
         BE    SCAN09              FOUND: PROCESS MASTER FILE
         MVC   0(1,R4),0(R5)       MOVE 1 CHAR. MODULE
         LA    R5,1(R5)            NEXT CHAR.
         LA    R4,1(R4)            NEXT CHAR.
         BCT   R6,SCAN07           EXAMINE NEXT BYTES
         B     RESTART             CLEAR KEY PRESSED
SCAN09   LA    R5,13(R5)           POINT AFTER 'MASTER FILE ='
         LA    R4,MSTRFILE         POINT TO MASTERFILE FIELD
SCAN11   CLC   0(13,R5),=C'VOLUME      ='  SEARCH FOR VOLUME
         BE    SCAN13              FOUND: PROCESS VOLUME
         MVC   0(1,R4),0(R5)       MOVE 1 CHAR. MSTRFILE
         LA    R5,1(R5)            NEXT CHAR.
         LA    R4,1(R4)            NEXT CHAR.
         BCT   R6,SCAN11           EXAMINE NEXT BYTES
         B     RESTART             CLEAR KEY PRESSED
SCAN13   LA    R5,13(R5)           POINT AFTER 'VOLUME='
         LA    R4,MSTRVOL          POINT TO MSTRVOL FIELD
SCAN15   CLC   0(09,R5),=C'  DDNAME=' SEARCH FOR DDNAME
         BE    SCAN17              FOUND: PROCESS DDNAME
         MVC   0(1,R4),0(R5)       MOVE 1 CHAR. MSTRVOL
         LA    R5,1(R5)            NEXT CHAR.
         LA    R4,1(R4)            NEXT CHAR.
         BCT   R6,SCAN15           EXAMINE NEXT BYTES
         B     RESTART             CLEAR KEY PRESSED
SCAN17   EQU   *
         OC    MSTRFILE,BLANKS     XLATE TO UPPER CASE CHARS
         OC    MODULE,BLANKS       ALSO FOR MODULENAME
         OC    MSTRVOL,BLANKS      AND VOLSER
         OC    FOLD,BLANKS         AND FOLD
         OC    BUFCMD,BLANKS       AND COMMAND
         MVC   SCR3VOL,MSTRVOL     IF THERE IS ONE.
         MVC   SCR3DSN,MSTRFILE    ALSO INTO SCREEN TEXT.
         MVC   SCR3MEM,MODULE      AND MODULE NAME.
         MVC   SCR3UPP,FOLD
         CLI   BUFCMD,C'1'         OPTION '1' SELECTED ?
         BE    FUNC1               OK BRANCH
         CLI   BUFCMD,C'X'         OPTION 'X' SELECTED
         BE    RETURN8             RETURN IF YES
         MVC   MSG3,ERR2TXT        MOVE ERROR MESSAGE
         B     RESTART
FUNC1    DS    0H
         CLC   MSTRFILE,BLANKS     NO MASTER SPECIFIED ?
         BNE   ALLOC00             NO: BRANCH
         MVC   MSG3,ERR1TXT        MOVE ERROR MESSAGE
         MVC   SCR3CUR+1(2),=X'D27F' MOVE R16,C16 AS CURSOR ADDRESS
         B     RESTART
ALLOC00  DS    0H
         CLI   MSTRVOL,C' '        NO VOLUME SPECIFIED ?
         BNE   ALLOC01             ALLOC WITHOUT VOL
         SYALLOC DDN=MASTER,DSN=MSTRFILE,DISP1=SHR,MF=E
         LTR   R15,R15             TEST COMPLETION
         BNZ   ALLOCERR            NOT ZERO: ERROR
         LOCATE LOC                LOCATE THE MASTERFILE
         LTR   R15,R15             OK ?
         BNZ   LOCERR              NO: ERROR.
         MVC   MSTRVOL,LOCVOL      MOVE VOLUME ID
         MVC   SCR3VOL,LOCVOL      MOVE VOLUME ID
         MVC   COMMSVOL,LOCVOL     MOVE VOLUME ID
         B     OBTAIN              OBTAIN THE MASTERFILE
LOCERR   MVC   MSG3,ERR7TXT        MOVE ERROR MESSAGE
         SYALLOC FREE=MASTER,MF=E  UNALLOCATE
         MVC   SCR3CUR+1(2),=X'D27F' MOVE R16,C16 AS CURSOR ADDRESS
         B     RESTART             GO TO ERROR ROUTINE
ALLOC01  EQU   *
         SYALLOC DDN=MASTER,DSN=MSTRFILE,DISP1=SHR,MF=E,               X
               UNIT=SYSDA,VOL=MSTRVOL
         LTR   R15,R15
         BNZ   ALLOCERR
OBTAIN   DS    0H
         OBTAIN OBTCMLST           OBTAIN MASTERFILE
         LTR   R15,R15             OBTAIN OK ?
         BZ    OPNMST              YES: OPEN
         MVC   MSG3,ERR8TXT        MOVE ERROR MESSAGE
         SYALLOC FREE=MASTER,MF=E
         MVC   SCR3CUR+1(2),=X'D44F' MOVE R17,C16 AS CURSOR ADDRESS
         B     RESTART             GO TO ERROR ROUTINE
OPNMST   CALL  FAIROPN,(FAIRWKAR,OPENRES,FAIROCMD,FAIROOPS),VL
         CLI   OPENRES,C'0'
         BE    FINDMEM
         TITLE 'ERROR ROUTINE FOR OPEN MASTERFILE'
OPENERR  DS    0H
         MVC   ERR4CODE(1),OPENRES MOVE ERROR CODE INTO MESSAGE
         MVC   MSG3,ERR4TXT        ERROR IN OPENING MASTERFILE, CODE X
         SYALLOC FREE=MASTER,MF=E
         B     RESTART
         TITLE 'ERROR ROUTINE FOR ALLOCATION OF MASTER FILE'
ALLOCERR SYCONVHX IN=DAERROR,OUT=ERR3CODE,L=2
         MVC   MSG3,ERR3TXT
         MVC   SCR3CUR+1(2),=X'D27F' MOVE R16,C16 AS CURSOR ADDRESS
         B     RESTART
         TITLE 'ROUTINE TO LOCATE THE MEMBER IN THE MASTERFILE'
FINDMEM  DS    0H
         L     R2,GETMSTRT         BEGINADDRESS WORKSPACE
         ST    R2,FIRSTREC         SAVE IT
         S     R2,RLENGTH          MINUS 1 CARD
         ST    R2,LASTREC          LAST RECORD POINTER
         CLC   MODULE(8),=CL8'*'          INDEX LISTING?
         BE    INDEX00
         MVC   FAIRMOPS(7),=C'0000000'
         CALL  FAIRMOD,(FAIRWKAR,MODRES,MODULE,FAIRMOPS),VL
         CLI   MODRES,C'0'
         BE    MEMFOUND
         CALL  FAIRCLS,(FAIRWKAR,CLOSERES),VL
         SYALLOC FREE=MASTER,MF=E FREE MASTER FILE
         MVC   MSG3,ERR5TXT
         B     RESTART            GO TO ERROR ROUTINE
         TITLE 'ROUTINE TO READ THE MEMBER AND DISPLAY IT'
MEMFOUND DS    0H
         MVC   MEMBER,MODULE      MOVE LIB MODULE NAME
READCARD CALL  FAIRREC,(FAIRWKAR,RECRES,FAIRROPS),VL
         CLI   RECRES,C'0'
         BE    MEMPUT
         CLI   RECRES,C'1'
         BE    CLOSE
         MVC   ERR6CODE(1),RECRES  MOVE READ CODE
         MVC   MSG3,ERR6TXT
         CALL  FAIRCLS,(FAIRWKAR,CLOSERES),VL
         SYALLOC FREE=MASTER,MF=E  UNALLOCATE MASTERFILE
         B     RESTART             GO TO ERROR ROUTINE
MEMPUT   L     R2,LASTREC          LAST RECORD IN WORKSPACE
         LA    R2,NEXTENT(R2)      NEXT RECORD
         C     R2,GETMEND              END OF WORKSPACE REACHED ?
         BH    WSFULL                  YES: BRANCH
         USING WORKSPCE,R2             ADDRESS WORKSPACE RECORD
         MVC   WORKDATA,RECRES+X'78'   MOVE RECORD INTO WORKSPACE
         MVC   WORKSLIN,BLANKS         BLANK LINE NUMBER
         XC    WORKFLGS,WORKFLGS       CLEAR FLAGS IN WORKSPACE
         ST    R2,LASTREC              NEW LAST RECORD POINTER
         B     READCARD                READ NEXT CARD
WSFULL   MVC   RTNCODE,F0004           MARK IN RETURN CODE
         B     CLOSE
*
CLOSE    CALL  FAIRCLS,(FAIRWKAR,CLOSERES),VL
         SYALLOC FREE=MASTER,MF=E
         MVC   COMMMOD,MODULE      MOVE LIBR MODULE IN COMMAREA
         MVC   COMMSTR,MSTRFILE    MOVE LIBR MASTER IN COMMAREA
         MVC   COMMSVOL,MSTRVOL    MOVE LIBR MASTER VOLUME IN COMMAREA
RETURN   L     R13,SAVE+4
         RETURN (14,12),RC=0
         TITLE 'CREATE LIBRARIAN INDEX OF MASTER IN WORKSPACE'
INDEX00  DS    0H
         MVC   MEMBER,=CL8'LBRINDEX'
         MVC   MODULE,BLANKS
INDEX00A DS    0H
         MVC   FAIRMOPS(8),=C'10000000'   SEE LIBFAIR MANUAL
         CALL  FAIRMOD,(FAIRWKAR,MODRES,MODULE,FAIRMOPS),VL
         CLI   MODRES,C'0'
         BE    INDEX01
         CLI   MODRES,C'1'         END OF FILE ?
         BE    INDEX99
         MVC   MSG3,ERR6TXT
         CALL  FAIRCLS,(FAIRWKAR,CLOSERES),VL
         SYALLOC FREE=MASTER,MF=E
         B     RESTART
INDEX01  L     R2,LASTREC          LAST RECORD IN WORKSPACE
         LA    R2,NEXTENT(R2)      NEXT RECORD
         C     R2,GETMEND          END OF WORKSPACE REACHED ?
         BH    INDEX02                  YES: BRANCH
         MVC   8(NEXTENT-8,2),BLANKS    CLEAR LINE
         MVC   WORKSLIN,BLANKS
         XC    WORKFLGS,WORKFLGS        CLEAR FLAGS
         MVC   WORKDATA(8),MODRES+X'C'  MOVE MODULE NAME
         MVC   MODULE,MODRES+X'C'
         MVC   WORKDATA+9(15),MODRES+X'10C' MOVE PGMR NAME
         MVC   WORKDATA+25(30),MODRES+X'BC' MOVE DESCRIPTION FIELD
         MVC   WORKDATA+56(5),MODRES+X'123' MOVE NUMBER OF CARDS
         CLI   MODRES+3,C'0'            UPDATED ?
         BNE   DATEUPD             YES: MOVE DATE AND TIME
         MVC   WORKDATA+62(11),=C'NOT UPDATED' TELL IT TO THE USER
         B     NODATE              BRANCH
DATEUPD  MVC   WORKDATA+62(2),MODRES+X'20'
         MVI   WORKDATA+64,C'/'        DATE
         MVC   WORKDATA+65(2),MODRES+X'22'  LAST
         MVI   WORKDATA+67,C'/'                  UPDATE
         MVC   WORKDATA+68(2),MODRES+X'24'             IN WORKSPACE
         MVC   WORKDATA+71(2),MODRES+X'26' MOVE TIME
         MVI   WORKDATA+73,C':'                     LAST UPDATE
         MVC   WORKDATA+74(2),MODRES+X'28'             IN WORKSPACE
NODATE   ST    R2,LASTREC          NEW LAST RECORD POINTER
         B     INDEX00A            READ NEXT CARD
INDEX02  MVC   RTNCODE,F0004       MARK IN RETURN CODE
         B     CLOSE
*
INDEX99  B     CLOSE
RETURN8  MVC   RTNCODE,F0008       RC=8
         B     RETURN
         DROP  R2
         TITLE 'ALLOCATION CONTROL BLOCKS'
         SYALLOC MF=L
         TITLE 'SCREEN FORMATS AND MESSAGES'
ERR1TXT  DC    CL22'----SPECIFY MASTERFILE'
ERR2TXT  DC    CL22'--------INVALID OPTION'
ERR3TXT  DC    CL22'ALLOC ERROR XXXX ON DS'
ERR3CODE EQU   ERR3TXT+12
ERR4TXT  DC    CL22'----OPEN ERROR CODE= X'
ERR4CODE EQU   ERR4TXT+21
ERR5TXT  DC    CL22'--MODULE NOT IN MASTER'
ERR6TXT  DC    CL22'ERROR IN READ, CODE= X'
ERR6CODE EQU   ERR6TXT+21
ERR7TXT  DC    CL22'DATASET NOT IN CATALOG'
ERR8TXT  DC    CL22'-DATASET NOT ON VOLUME'
*
SCR3TXT  DC    X'27F5C01140401DF8' WRITE ERASE LOCK/ R01,C00
         DC    CL33'RPF LIBRARIAN READ MENU. USERID= '
SCR3UID  DS    CL7
         DC    CL17'-----------------'
         DC    X'11407A'           R01,C59
MSG3     DC    CL22'----------------------'
SCR3CUR  DC    X'11FFFF13'
         DC    X'11C150',X'1DF8',C'OPTION  ===>',X'1DC1'
SCR3OPT  DC    C' ',X'1DF0'
         DC    X'11C3F3',X'1DF8',C'1 ',X'1DF0'     R04,C01
         DC    C'ALLOC       - ALLOCATE MASTER FILE'
         DC    X'11C5C3',X'1DF8',C'X ',X'1DF0'     R05,C01
         DC    C'EXIT        - RETURN TO RPF UTILITY MENU'
         DC    X'114A40'           R09,C01
         DC    X'1DF5',C'UPPER CASE  =',X'1DC9'
SCR3UPP  DC    CL3'   ',X'1DF0'
         DC    X'114F40'           R13,C01
         DC    X'1DF0',C'MASTER FILE INFORMATION:'
         DC    X'11D160'           R15,C01
         DC    X'1DF5',C'MODULE      =',X'1DC9'
SCR3MEM  DC    CL8' ',X'1DF0',C'OR ''*'' FOR AN LIBRARIAN INDEX'
         DC    X'11D2F0'           R16,C01
         DC    X'1DF5',C'MASTER FILE =',X'1DC9'
SCR3DSN  DC    CL44' ',X'1DF0'     DSNAME
         DC    X'11D440'           R17,C01
         DC    X'1DF5',C'VOLUME      =',X'1DC9'
SCR3VOL  DC    CL6' ',X'1DF5',C'  DDNAME=',X'1DF8' VOLUME
SCR3DDN  DC    C'MASTER  ',X'1DF0' DDNAME
SCR3LAST DC    X'11FFFF1DF0',C'HIT',X'1DF8',C'PF03/PF15',X'1DF0'
         DC    C'TO RETURN.'
SCR3LEN  EQU   *-SCR3TXT           LENGTH SCREEN
         TITLE 'WORKAREAS AND CONSTANTS'
F0000    DC    F'0'                0000
F0004    DC    F'4'
F0008    DC    F'8'
LOC      CAMLST NAME,MSTRFILE,,LOCAREA
LOCAREA  DS    CL6
LOCVOL   DS    CL6
LOCREST  DS    CL253
OBTCMLST CAMLST SEARCH,MSTRFILE,MSTRVOL,DSCB1
DSCB1    DS    CL140
*
BUFFER   DC    CL180' '            BUFFER, INPUT AREA
BUFCMD   DS    C
RLENGTH  DC    A(NEXTENT)
MSTRFILE DC    CL44' '             CONTAINS MASTEFILE NAME AFTER COMPL
MODULE   DC    CL8' '              CONTAINS MEMBERNAME AFTER COMPLETION
MSTRVOL  DC    CL6' '              CONTAINS VOLSER AFTER COMPLETION.
AREA3    DC    CL16'MASTER'
BUF2     DC    C'2'
DATETIME DC    PL6'0'
FAIRWKAR DS    5F                      20 BYTE WORKAREA OF MASTERFILE
FAIROCMD DS    F                       RESERVED
FAIROOPS DC    CL20'0002'              OPTIONS (ONLY FIRST 4 BYTES)
FAIRMOPS DC    CL20'00000000000000000000'   OPTIONS FOR FAIRMOD
FAIRROPS DC    CL20'00000000000000000000'   OPTIONS FOR FAIRREC
OPENRES  DC    30F'-1'                 120 BYTES OPEN AREA OF FAIR
MODRES   DS    CL800
RECRES   DS    CL400
CLOSERES DC    XL8'00'
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         TITLE 'RPFCOMM DSECT'
COMMAREA RPFCOMM
         END
