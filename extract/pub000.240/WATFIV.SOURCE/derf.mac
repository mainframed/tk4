 TITLE ' ERF ERROR FUNCTION (LONG) '
         PRINT     NOGEN
         DISK
         PRINT     GEN
         SPACE 2
DERF#    CSECT
*        1.  ERF(X) = (2/SQRTPI)*(INTEGRAL FROM 0 TO X OF E**(-U*U)*DU)
*        2. ERFC(X) = 1-ERF(X)     THESE ARE FOR DEFINITION ONLY
       SPACE
       ENTRY   DERF
       ENTRY   DERFC
       EXTRN   DEXP
         ENTRY     ERF
         ENTRY     ERFC
       SPACE
GRA    EQU     1             ARGUMENT LIST POINTER
GR2    EQU     2             ARGUMENT ADDRESS
GR3    EQU     3             INDEX REGISTERS
GR4    EQU     4
GR5    EQU     5
GRS    EQU     13            SAVE AREA POINTER
GRR    EQU     14            RETURN REGISTER
GRL    EQU     15            LINK REGISTER - BASE REGISTER
FR0    EQU     0             ANSWER REGISTER
FR2    EQU     2             SCRATCH REGISTER
FR4    EQU     4
FR6    EQU     6
ISN    EQU     X'108'        IDENTIFIER CODE FOR DEXP CALL
       SPACE
ERF      CALLDUBL  DERF,2
         SPACE     1
ERFC     CALLDUBL  DERFC,2
         SPACE     1
DERFC    FENT      (XDERF,REAL8),1
         SPACE     1
       MVI     TEST+1,X'00'      NO BRANCH ADJUST BASE REGISTER
         LA        R11,DERF-DERFC(R11)
         USING     DERF+8,R11
         B         MERGE
       SPACE
DERF     FENT      (XDERF,REAL8),1
         SPACE     1
       MVI     TEST+1,X'F0'      UNCONDITIONAL BRANCH
       SPACE
MERGE    LD        FR2,XDERF       OBTAIN ARG IN FR2
       LPDR    FR4,FR2              /ARG/ IN FR4
       LM      GR3,GR5,INDEX PRESET INDEX FOR SECT3 ... 0,8,48
       CE      FR4,LIM2      JUMP TO LARGE IF /ARG/ IS GRT THAN 2.0404
       BC      10,LARGE
       CE      FR4,LIM1      JUMP TO SECT2 IF /ARG/ IS IN (1,2.0404)
       BC      10,SECT2
       SPACE
SECT1  LD      FR0,KA0M1     CASE WHEN /ARG/ IS LESS THAN 1
       CE      FR4,LIM0        IF /ARG/ IS LESS THAN 16**-7, GIVE
       BC      4,XPRES           A0*/X/ AS THE ANSWER.   THIS AVOIDS
       MDR     FR2,FR2             INTERMEDIATE INDERFLOW
       LA      GR5,32(GR5)     OTHERWISE SET INDEX TO 0,8,80, AND
       LD      FR0,KA            COMPUTE ERF(/X/) AS FOLLOWS
LOOP1  MDR     FR0,FR2
       AD      FR0,KA+8(GR3)     /X/*(A0+A1*XSQ+A2*X**4+..+A11*X**22)
       BXLE    GR3,GR4,LOOP1
XPRES  MDR     FR0,FR4           COMBINE A0 IN 2 STEPS
       ADR     FR0,FR4             TO MINIMIZE ROUND-OFF ERRORS
       TM      TEST+1,X'80'    IF ERF(X) WANTED, JUMP TO TRUE
       BC      1,TRUE          IF ERFC(X) WANTED, TAKE COMPLEMENT
       SPACE
COMPL  SD      FR0,ONE       COMPLEMENTATION
       LPER    FR0,FR0
       SPACE
TRUE     TM        XDERF,X'80'         ANSWER FOR /ARG/ IS READY
       BC      8,FIN           IF POSITIVE ARG, SKIP TO EXIT
       TM      TEST+1,X'80'    IF NEGATIVE ARG, AND
       BC      1,*+8             IF ERFC WANTED, SUBTRACT FROM 2
COMPL2 SD      FR0,TWO           IF ERF WANTED, JUST CHANGE SIGN
       LCER    FR0,FR0
       SPACE
FIN      SDR       FR6,FR6         ***WATFIV CONVENTION***
         B         XFRET           RESTORE REGS & RETURN
         SPACE     1
SECT2  LA      GR5,88(GR5)   CASE WHEN /ARG/ IS IN (1.0,2.040452)
       SD      FR4,OSHFT       COMPUTE ERFC(1.709472+Z) WHERE
       LD      FR0,KB            Z=/X/-1.709472 BY A MINIMAX
LOOP2  MDR     FR0,FR4             POLYNOMIAL OF DEGREE 18 IN Z
       AD      FR0,KB+8(GR3)   IN THIS RANGE, ERFC(/X/) IS BETWEEN
       BXLE    GR3,GR4,LOOP2     1/256 AND 0.1573
       SPACE
TEST   BC      0,COMPL       SWITCH FOR /X/ GRT THAN 1.0
       BC      15,TRUE         IF ERF, COMPLEMENT, IF ERFC, LEAVE IT
       SPACE
LARGE  CE      FR4,LIM3      CASE WHEN /X/ GRT THAN 2.040452
       BC      4,SECT3       IF /X/ IN (2.04,6.092), JUMP TO SECT3
       LE      FR0,BOMB        PRELOAD BOMB.  1-BOMB=1, BOMB**2=UNDFLO
       TM      TEST+1,X'80'  IF ERF ENTRY AND /X/ GRT THAN 6.092,
       BC      1,COMPL         TAKE 1.0 AS ERF(/X/) QUIETLY
         TM        XDERF,X'80'         IF ERFC AND X.LT.-6.092
       BC      1,COMPL2        TAKE 2.0 AS ERFC(X) QUIETLY
       CE      FR4,LIM4      IF ERFC ENTRY AND X BETWEEN 6.092 AND
       BC      4,SECT3         13.306, GO TO SECT3
       MDR     FR0,FR0       IF ERFC ENTRY AND X GRT THAN 13.306
       BC      15,FIN          GIVE 0 AS ANSWER WITH UNDERFLOW NOISE
       SPACE
SECT3  MDR     FR2,FR2       CASE WHEN /X/ IS GREATER THAN 2.040452
       LD      FR6,KC          AND THE RESULT IS NON-DEGENERATING
LOOP3  ADR     FR6,FR2
       LDR     FR0,FR6         COMPUTE ERFC(/X/) AS FOLLOWS
       LD      FR6,KD(GR3)
       DDR     FR6,FR0           (E**-XSQ)*F(XSQ)/(/X/)  WHERE
       AD      FR6,KC+8(GR3)
       BXLE    GR3,GR4,LOOP3     F=C0+D1/(XSQ+C1+D2/(XSQ+C2+D3/...
       DDR     FR6,FR4                   ...+D7/(XSQ+C7)))))))
       SPACE
       LNER    FR2,FR2         LEAVE F(XSQ)/(/X/) IN FR6
       STD     FR2,NEGSQ         WHICH IS UNAFFECTED BY DEXP CALL
         FCALL     (DEXP,REAL8),(NEGSQ,REAL8)
       MDR     FR0,FR6         COMBINE FACTORS TO OBTAIN ERFC(/X/)
       BC      15,TEST           AND JUMP TO TEST
       SPACE
XDERF    DS        D
NEGSQ  DS      D
KA     DC      X'B93575CB03288888'  -0.0000000007779473 = A11
       DC      X'3A3AE362DA85FB5B'   0.0000000137109838 = A10
       DC      X'BB2B80E5106F2933'  -0.0000001620631488 = A9
       DC      X'3C1B97FD43205DA9'   0.0000016447131768 = A8
       DC      X'BCFA6526BD76ED33'  -0.0000149247123228 = A7
       DC      X'3D7E68AEAA7DF3C6'   0.0001205529357828 = A6
       DC      X'BE3805B607BC8808'  -0.0008548325929373 = A5
       DC      X'3F1565BCCF92B9D6'   0.0052239776061200 = A4
       DC      X'BF6E0B38C47EA601'  -0.0268661706431117 = A3
       DC      X'401CE2F21A040D17'   0.1128371967094419 = A2
       DC      X'C06049D1AC0DE6F5'  -0.3761263890318352 = A1  +2F ABS
KA0M1  DC      X'4020DD750429B6D2'   0.128379167095513  = A0-1.0 +1F
OSHFT  DC      X'411B5A0000000000'   1.709472        ORIGIN FOR SECT2
KB     DC      X'3B167F03888C890D'   0.0000000838046807 = B18
       DC      X'3B9FD941F87D786C'   0.0000005954826731 = B17
       DC      X'3AC808E74EBC9B87'   0.0000000465742265 = B16
       DC      X'BC37F7ABFD191862'  -0.0000033359210544 = B15
       DC      X'3C6E75AECE8102D4'   0.0000065839110963 = B14
       DC      X'3CF38568C997EC42'   0.0000145149904597 = B13
       DC      X'BD50F5F506D2E9A0'  -0.0000772102070427 = B12
       DC      X'3D2AFBA45E9EA010'   0.0000409917610466 = B11
       DC      X'3E1C591036E309F0'   0.0004325546823446 = B10
       DC      X'BE4642A0283F3525'  -0.0010720864304375 = B9
       DC      X'BE1855E9E68608D0'  -0.0003713317915058 = B8
       DC      X'3F198E1E4DA67774'   0.0062390502665986 = B7
       DC      X'BF2BDE716F1D2638'  -0.0107101851479655 = B6
       DC      X'BF11572275A37AED'  -0.0042334886622643 = B5
       DC      X'3FC98FE2BB6FE2CA'   0.0492094856954216 = B4  +100F
       DC      X'C01919E57C233961'  -0.0980513980932520 = B3
       DC      X'401A925CDF5B78DA'   0.1037958188348712 = B2  +1F
       DC      X'BFF8B37923BCC168'  -0.0607180339828094 = B1  +8F ABS
       DC      X'3F3FFFFB678ECA0C'   0.0156249828805124 = B0  +1F
KC     DC      X'41138FECB70009CB'   1.222637858242353  = C7
       DC      X'413E5E34C316AA85'   3.897999536575896  = C6
       DC      X'4170C114C5AD499D'   7.047138950515183  = C5
       DC      X'4174A6EBF5930F54'   7.290752372050481  = C4
       DC      X'4157F3CD556493C7'   5.497021993223130  = C3
       DC      X'4137FFFA4C4FE189'   3.499994562238586  = C2
       DC      X'4117FFFFFFD414E3'   1.499999999360903  = C1
       DC      X'40906EBA8214DB0E'   0.5641895835477550 = C0
KD     DC      X'C114FC5D7B70143C'  -1.311612589053097  = D7
       DC      X'C17B2C0FAAD4F477'  -7.698257129012999  = D6
       DC      X'C1E847FA259245A1' -14.51757254291838   = D5
       DC      X'C1A67578C4A4803C' -10.40367962659367   = D4
       DC      X'C14FFE9B53FB1274'  -4.999659851121717  = D3
       DC      X'C117FFFFE7BADE7F'  -1.499999909587046  = D2
       DC      X'C048375D4109A0B4'  -0.2820947917731498 = D1
ONE    DC      X'4110000000000000'   1.0
TWO    DC      X'41200000'           2.0   THESE 4 WORDS
INDEX  DC      X'00000000'                   MUST BE CONSECUTIVE
       DC      F'8'                            STARTING AT A DOUBLE
       DC      F'48'                             WORD BOUNDARY
LIM0   DC      X'3A100000'           16**-7
LIM1   EQU     ONE                   1.0
LIM2   DC      X'4120A5B1'           2.040452
LIM3   DC      X'41617A56'           6.092368
LIM4   DC      X'41D4E560'           13.306
BOMB   EQU     KA+4                  1-BOBM=1, BOMB**2=UNDERFLOW
       END
