FCNV     TITLE     'FORMCONV     FORMAT CONVERSION ROUTINES'
         MACRO
&ADDR    SCANMASK
         GBLA      &VALUE,&CLASS1(255)
         GBLC      &CHAR
         LCLA      &SIZE,&I,&N,&TEMP,&SUM
         LCLC      &SET,&NOTSET,&SW(32)
         LCLC      &T(4)
         LCLA      &J
&SIZE    SETA      32
&I       SETA      0
&SET     SETC      '0'
&NOTSET  SETC      '1'
         AIF       (&SYSLIST(1,1) EQ 0).ADDR10
&SET     SETC      '1'
&NOTSET  SETC      '0'
.ADDR10  ANOP
&I       SETA      &I+1
&SW(&I)  SETC      '&NOTSET'
         AIF       (&I LT &SIZE).ADDR10
&N       SETA      N'&SYSLIST
&I       SETA      1
.ADDR20  ANOP
&I       SETA      &I+1
&CHAR    SETC      '&SYSLIST(&I,1)'(1,1)
         AIF       (K'&SYSLIST(&I,1) EQ 1).ADDR25
&CHAR    SETC      '&SYSLIST(&I,1)'(2,1)
.ADDR25  ANOP
         TRANSLAT
&TEMP    SETA      &CLASS1(&VALUE+1)+2
&SW(&TEMP)  SETC  '&SET'
         AIF       (&I LT &N).ADDR20
&SW(1)   SETC      '0'
&SW(32)  SETC      '1'
&J       SETA      0
.ADDR30  ANOP
&J       SETA      &J+1
&I       SETA      &J*8-8
&T(&J)      SETC  '&SW(&I+1)'.'&SW(&I+2)'.'&SW(&I+3)'.'&SW(&I+4)'.'&SW(X
               &I+5)'.'&SW(&I+6)'.'&SW(&I+7)'.'&SW(&I+8)'
         AIF       (&J LT 4).ADDR30
&ADDR    DC        0F'0',B'&T(1)',B'&T(2)',B'&T(3)',B'&T(4)'
         MEND
         MACRO
         TRANSLAT
         GBLA      &EBDIC(64),&NUMCHAR,&VALUE
         GBLC      &CHARSET(64),&CHAR
         LCLA      &I
&I       SETA      0
.ADDR10  ANOP
&I       SETA      &I+1
         AIF   ('&CHAR'(1,1) EQ '&CHARSET(&I)'(1,1)).ADDR20
         AIF       (&I LT &NUMCHAR).ADDR10
&VALUE   SETA      0
         AGO       .END
.ADDR20  ANOP
&VALUE   SETA      &EBDIC(&I)
.END     MEND
         MACRO
&ADDR    TRTGEN1   &LEVEL,&SIZE
         GBLA      &CLASS1(255),&CLASS2(64),&CLASS1E
         LCLA      &I,&SIZE1,&SW
&ADDR    EQU       *
&I       SETA      0
&SIZE1   SETA      &SIZE
         AIF       (&SIZE1 LT 256).ADDR10
&SIZE1   SETA      255
&SW      SETA      1
.ADDR10  AIF       (&LEVEL NE 1).ADDR30
.ADDR20  ANOP
&I       SETA      &I+1
         DC        AL1(&CLASS1(&I))
         AIF       (&I LT &SIZE1).ADDR20
         AIF       (&SW NE 1).END
         DC        AL1(&CLASS1E)
         AGO       .END
.ADDR30  ANOP
&I       SETA      &I+1
         DC        AL1(&CLASS2(&I))
         AIF       (&I LT &SIZE1).ADDR30
.END     MEND
         MACRO
         CLASSIFY
         GBLA      &VALUE,&CLASS1(255),&CLASS2(64),&CLASS1E
         GBLC      &CHAR
         LCLA      &NCLASS,&DEFAULT,&LEVEL,&SIZE,&I,&J
         LCLA      &M,&TRVALUE,&TEMP
&NCLASS  SETA      N'&SYSLIST
&DEFAULT SETA      &SYSLIST(1,4)
&LEVEL   SETA      &SYSLIST(1,1)
&SIZE    SETA      &SYSLIST(1,2)
&I       SETA      0
         AIF       (&LEVEL EQ 2).ADDR20
         AIF       (&SIZE LT 256).ADDR10
&SIZE    SETA      255
.ADDR10  ANOP
&I       SETA      &I+1
&CLASS1(&I)  SETA  &DEFAULT
         AIF       (&I LT &SIZE).ADDR10
&CLASS1E SETA      &DEFAULT
         AGO       .ADDR30
.ADDR20  ANOP
&I       SETA      &I+1
&CLASS2(&I)  SETA  &DEFAULT
         AIF       (&I LT &SIZE).ADDR20
.ADDR30  ANOP
&I       SETA      1
.ADDR40  ANOP
&I       SETA      &I+1
&M       SETA      N'&SYSLIST(&I)
&J       SETA      0
&TRVALUE SETA      &I-2
         AIF       ('&SYSLIST(1,3)' NE 'EXPLICIT').ADDR50
&TRVALUE SETA      &SYSLIST(&I,1)
&J       SETA      1
.ADDR50  ANOP
&J       SETA      &J+1
&CHAR    SETC      '&SYSLIST(&I,&J)'
         AIF       (K'&SYSLIST(&I,&J) EQ 1).ADDR55
&CHAR    SETC      '&SYSLIST(&I,&J)'(2,1)
.ADDR55  ANOP
         TRANSLAT
         AIF       (&LEVEL EQ 2).ADDR60
&CLASS1(&VALUE+1)  SETA  &TRVALUE
         AGO       .ADDR70
.ADDR60  ANOP
&TEMP    SETA      &CLASS1(&VALUE)+1
&CLASS2(&TEMP)  SETA  &TRVALUE
.ADDR70  AIF       (&J LT &M).ADDR50
         AIF       (&I LT &NCLASS).ADDR40
         MEND
         MACRO
&ADDR    DEFSAVE
&ADDR    LA        R13,FVSAVE-FMCNBASE(R15)
         MEND
         MACRO
         DATE      &DATE
         LCLC      &TEMP
&TEMP    SETC      'FV#'.'&DATE'
&TEMP    EQU       *
         ENTRY     &TEMP
         MEND
         MACRO
         FINDCHAR  &LEVEL,&VAR
         GBLA      &VALUE,&CLASS1(255),&CLASS2(64)
         GBLC      &CHAR
         LCLA      &TEMP
&CHAR    SETC      '&VAR'
         AIF       (K'&VAR EQ 1).ADDR10
&CHAR    SETC      '&VAR'(2,1)
.ADDR10  ANOP
         TRANSLAT
         AIF       (&LEVEL EQ 0).END
&TEMP    SETA      &CLASS1(&VALUE+1)
&VALUE   SETA      &TEMP
         AIF       (&LEVEL EQ 1).END
&TEMP    SETA      &CLASS2(&VALUE+1)
&VALUE   SETA      &TEMP
.END     MEND
         MACRO
         DEFCHAR
         GBLA      &NUMCHAR,&EBDIC(64)
         GBLC      &CHARSET(64)
&NUMCHAR SETA      53
&CHARSET(1)  SETC  '.'
&CHARSET(2)  SETC  '('
&CHARSET(3)  SETC  '+'
&CHARSET(4)  SETC  ''''
&CHARSET(5)  SETC  '&&'
&CHARSET(6)  SETC  '*'
&CHARSET(7)  SETC  ')'
&CHARSET(8)  SETC  '-'
&CHARSET(9)  SETC  '/'
&CHARSET(10) SETC  ','
&CHARSET(11) SETC  '='
&CHARSET(12) SETC  'A'
&CHARSET(13) SETC  'B'
&CHARSET(14) SETC  'C'
&CHARSET(15) SETC  'D'
&CHARSET(16) SETC  'E'
&CHARSET(17) SETC  'F'
&CHARSET(18) SETC  'G'
&CHARSET(19) SETC  'H'
&CHARSET(20) SETC  'I'
&CHARSET(21) SETC  'J'
&CHARSET(22) SETC  'K'
&CHARSET(23) SETC  'L'
&CHARSET(24) SETC  'M'
&CHARSET(25) SETC  'N'
&CHARSET(26) SETC  'O'
&CHARSET(27) SETC  'P'
&CHARSET(28) SETC  'Q'
&CHARSET(29) SETC  'R'
&CHARSET(30) SETC  'S'
&CHARSET(31) SETC  'T'
&CHARSET(32) SETC  'U'
&CHARSET(33) SETC  'V'
&CHARSET(34) SETC  'W'
&CHARSET(35) SETC  'X'
&CHARSET(36) SETC  'Y'
&CHARSET(37) SETC  'Z'
&CHARSET(38) SETC  '0'
&CHARSET(39) SETC  '1'
&CHARSET(40) SETC  '2'
&CHARSET(41) SETC  '3'
&CHARSET(42) SETC  '4'
&CHARSET(43) SETC  '5'
&CHARSET(44) SETC  '6'
&CHARSET(45) SETC  '7'
&CHARSET(46) SETC  '8'
&CHARSET(47) SETC  '9'
&CHARSET(48) SETC  ' '
&CHARSET(49) SETC  '$'
&CHARSET(50) SETC  '@'                 8-4  A ' ON A 26 PUNCH
&CHARSET(51) SETC  '%'                 0-8-4  A ( ON A 26 PUNCH
&CHARSET(52) SETC  '<'                 12-8-4 A ) ON A 26 PUNCH
&CHARSET(53) SETC  '#'                 8-3 AN = ON A 26 PUNCH
&EBDIC(1)  SETA    X'4B'
&EBDIC(2)  SETA    X'4D'
&EBDIC(3)  SETA    X'4E'
&EBDIC(4)  SETA    X'7D'
&EBDIC(5)  SETA    X'50'
&EBDIC(6)  SETA    X'5C'
&EBDIC(7)  SETA    X'5D'
&EBDIC(8)  SETA    X'60'
&EBDIC(9)  SETA    X'61'
&EBDIC(10) SETA    X'6B'
&EBDIC(11) SETA    X'7E'
&EBDIC(12) SETA    X'C1'
&EBDIC(13) SETA    X'C2'
&EBDIC(14) SETA    X'C3'
&EBDIC(15) SETA    X'C4'
&EBDIC(16) SETA    X'C5'
&EBDIC(17) SETA    X'C6'
&EBDIC(18) SETA    X'C7'
&EBDIC(19) SETA    X'C8'
&EBDIC(20) SETA    X'C9'
&EBDIC(21) SETA    X'D1'
&EBDIC(22) SETA    X'D2'
&EBDIC(23) SETA    X'D3'
&EBDIC(24) SETA    X'D4'
&EBDIC(25) SETA    X'D5'
&EBDIC(26) SETA    X'D6'
&EBDIC(27) SETA    X'D7'
&EBDIC(28) SETA    X'D8'
&EBDIC(29) SETA    X'D9'
&EBDIC(30) SETA    X'E2'
&EBDIC(31) SETA    X'E3'
&EBDIC(32) SETA    X'E4'
&EBDIC(33) SETA    X'E5'
&EBDIC(34) SETA    X'E6'
&EBDIC(35) SETA    X'E7'
&EBDIC(36) SETA    X'E8'
&EBDIC(37) SETA    X'E9'
&EBDIC(38) SETA    X'F0'
&EBDIC(39) SETA    X'F1'
&EBDIC(40) SETA    X'F2'
&EBDIC(41) SETA    X'F3'
&EBDIC(42) SETA    X'F4'
&EBDIC(43) SETA    X'F5'
&EBDIC(44) SETA    X'F6'
&EBDIC(45) SETA    X'F7'
&EBDIC(46) SETA    X'F8'
&EBDIC(47) SETA    X'F9'
&EBDIC(48) SETA    X'40'
&EBDIC(49) SETA    X'5B'
&EBDIC(50) SETA    X'7C'
&EBDIC(51) SETA    X'6C'
&EBDIC(52) SETA    X'4C'
&EBDIC(53) SETA    X'7B'
         MEND
         EJECT
         COPY      OPTIONS
         $PUNCH    FORMCONV                                        DVS2
FORMCONV CSECT
         DEFCHAR
         CLASSIFY  (1,256,EXPLICIT,22),                                X
               (0,' '),(1,A,B,C),(2,D,E),(3,F),(4,T),(5,Z),            X
               (6,G,H,I,J,K,L,M,N,O,P,Q,R,S,U,V,W,X,Y,$),          V1L5X
               (7,0),(8,1,2,3,4,5,6,7,8,9),                            X
               (9,'''','@'),(10,=,'#'),(11,'(','%'),(12,+),(13,*),     X
               (14,')','<'),(15,-),(16,','),(17,.),(18,'&&')
         PRINT     OFF
         COPY      CDEFN
STARTA   DSECT
         COPY      STARTA
         ERRTABLE
         COPY      EXTRN
         PRINT     ON
         PRINT     ON,&LIST
         SPACE     3
         EXTRN     FORMATEX
         ENTRY     INBIN
         ENTRY     OUTBIN
         ENTRY     INFREE
         ENTRY     OUTFREE
         ENTRY     INBCDI
         ENTRY     INFREEI
         ENTRY     OUTFREEI
         ENTRY     INBCD
         ENTRY     OUTBCDI
         ENTRY     OUTBCD
         ENTRY     INBINI,OUTBINI
         ENTRY     FMCNBASE
         ENTRY     INREC
         ENTRY     FORMCEND
         ENTRY     FORMSNAP
         ENTRY     FORMCONE                                        V1L5
         SPACE   3
NHEADER  DSECT
*       THIS IS THE FORMAT OF A NAMELIST HEADER RECORD AFTER RELOCATION
NNUMENT  DS        1H                 NO. OF VARIABLES IN THIS NAMELIST
NLSTNAME DS        6C                  NAMELIST NAME
NLENTRY  DSECT
*        THIS IS THE FORMAT OF A NAMELIST ENTRY RECORD AFTER RELOCATION
NLNCHAR  DS        1H                  NO. OF CHAR IN ENTRY NAME
NENTRYNM DS        6C                  ENTRY NAME
NLFLAG   DS        1C                  FLAG BYTE FOR VARIABLE
NENTADDR DC        AL3(*-*)            ADDRESS OF VARIABLE
CDSECT   DSECT                         THIS DSECT IS PUT IN        V1L5
XLINES   DC        F'58'               TO MAKE THE SWITCH FOR      V1L5
XLNCOUNT DC        F'0'                THE PUNCK AVAILABLE FOR     V1L5
XPAGES   DC        F'100'              FREE OUTPUT                 V1L5
XPGCOUNT DC        F'0'                                            V1L5
XTIME    DC        F'0'                                            V1L5
XPUNCHSW DC        X'0'                THE PUNCHSW                 V1L5
         SPACE     3
**********     SECTION  1     **********
FORMCONV CSECT
BASEADDR EQU       *
FMCNBASE EQU       *
         USING     FMCNBASE,R15
INBINI   MVI       XIOSWN,XBININ       SET INPUT ON
XBININ   EQU       X'00'
XBINOUT  EQU       X'0F'
         B         XRWCOMN
OUTBINI  MVI       XIOSWN,XBINOUT      SET OUTPUT ON
XRWCOMN  LR        R10,R2              ADDR OF BUFFER  DON'T CHANGE
         LR        R9,R2               ADDR OF BUFFER FOR INDESING
         LA        R8,0(R3,R2)         ADDR OF BUFFER END
         SR        R7,R7               BYTE REG
         SR        R6,R6               RECORD COUNT
         STM       R6,R10,XKEEP        SAVE ALL PTRS
         LM        R5,R14,XIOSAVE      RESTORE PROG REGS
         BR        R14                 RETURN TO OBJ CODE
XIOSWN   DC        X'00'
INBIN    B         XBINEND             END OF LIST PROC
OUTBIN   EQU       INBIN
*              R3  CONTAINS THE ADDR OF ELT
*        0(R14)  CONTAINS MODE-TYPE
         LR        R5,R3               ADDR OF NUMBER
         LM        R6,R10,XKEEP        GET POINTERS
         TM        0(R14),X'09'        CHAR *N?                    V1L4
         BNO       FNOTCHAR            NO
         LR        R7,R2               GET NUMBER OF CHARACTERS
         B         FCHAR
FNOTCHAR IC        R7,0(R14)           MODE AND TYPE
         IC        R7,KT2(R7)          NO OF BYTES
FCHAR    LA        R4,0(R7,R9)         WE ARE THIS FAR IN BUFFER
         CR        R4,R8               OVER BUFFER END
         BH        XNEWREC             YES
         BCTR      R7,0                FOR EX OF MVC               V1L2
         CLI       XIOSWN,XBINOUT      OUTPUT
         BE        XMOVOUT             YES
         EX        R7,XMOVE3           GET NUMBER
         B         XMOVRET
XMOVOUT  EX        R7,XMOVE4           PUT NUMBER IN BUFFER
XMOVRET  LA        R9,1(R7,R9)         BUMP BUFFER ADDR
         STM       R6,R10,XKEEP        SAVE POINTERS
         LM        R5,R14,XIOSAVE      GET OLD REGS
         B         4(,R14)             RETURN TO OBJECT CODE
XMOVE3   MVC       0(*-*,R5),0(R9)
XMOVE4   MVC       0(*-*,R9),0(R5)
XKEEP    DS        5F
XIERROR1 $ERROR    (TRAZ,UN,D)                                     V1L5
ADFIOCS  DC        A(*-*)
XNEWREC  CLI       XIOSWN,XBINOUT      OUTPUT
         BE        XOUTREC             YES
         MVI       XIOTYPN,XRDCON      SET READ CONSTANT
         LR        R7,R4                                           V1L2
         SR        R7,R8               OVERFLOW LENGTH             V1L2
         SR        R8,R9               PRIMARY LENGTH              V1L2
         BZ        XRDCON1                                         V1L2
         BCTR      R8,0                FOR EX OF MVC               V1L2
         EX        R8,XMOVE3           READ FIRST PART             V1L2
         LA        R5,1(R8,R5)         REST OF DATA ADDRESS        V1L2
XRDCON   EQU       X'01'
XRDCON1  CLI       XFDSWT,C'D'                                     V1L2
         BE        XCOMREC
         S         R10,KF4             MOVE BUFFER PTR
FBINJ2   TM        2(R10),X'01'        LAST BLOCK
         BNO       XIERROR1
         B         XCOMREC             OFF TO GET IT
XOUTREC  MVI       XIOTYPN,XWTCON      SET WRITE CONSTANT
XWTCON   EQU       X'02'
         SR        R9,R10              BUFFER LENGTH
         LR        R2,R9               FOR FIOCS
         CLI       XFDSWT,C'D'         TEST FOR D.A.
         BE        XCOMREC
         S         R10,KF4           MOVE BUFF PTR IF SEQUENTIAL
         OI        2(R10),X'01'        AT BEGINNING OF FILE?
         LTR       R6,R6
         BZ        FBINJ4
         OI        2(R10),X'02'
FBINJ4   LA        R6,1(,R6)           INCREMENT RECORD COUNT
XCOMREC  L         R1,XRADDR
         BALR      R0,R1
XIOTYPN  DC        X'00'
         DC        X'00'
         LR        R10,R2              ADDR OF NEW BUFFER
         LR        R9,R2               SAVE HERE TOO
         LA        R8,0(R3,R2)         END OF BUFFER
         B         FCHAR               BACK TO GET OR PUT NO.      V1L2
XBINEND  LM        R6,R10,XKEEP        GET POINTERS
         CLI       XIOSWN,XBINOUT      OUTPUT
         BE        XENDOUT             YES
XENDTST  CLI       XFDSWT,C'D'         TEST FOR D.A.
         BE        XEXITN
XTESTEND S         R10,KF4             MOVE BUFF PTR FOR SEQ
         TM        2(R10),X'01'        AT BEGINNING OF BLOCK?
         BZ        XEXITN
         L         R1,XRADDR           NO SO ANOTHER READ
         BALR      R0,R1
         DC        X'01'
         DC        X'00'
         LR        R10,R2              ADDR OF BUFFER
         B         XTESTEND            AND BACK AGAIN
XENDOUT  SR        R9,R10              LENGTH OF OUTPUT RECORD
         LR        R2,R9               FOR FIOCS
         CLI       XFDSWT,C'D'         IS THIS D.A.?
         BE        XPUTOUT
         S         R10,KF4             MOVE BUFF PTR FOR SEQ
         LTR       R6,R6
         BZ        XPUTOUT
         OI        2(R10),X'02'
XPUTOUT  L         R1,XRADDR
         BALR      R0,R1
         DC        X'02'
         DC        X'00'
XEXITN   LM        R5,R14,XIOSAVE      RESTORE REGS
         BR        R14                 BACK TO OBJ CODE
         EJECT
**********     SECTION  2     **********
         ENTRY     NAMELRD
         AIF   ('&NAMLIST' EQ 'OMIT' AND '&DUMPLST' EQ 'OMIT').NOLIST
NAMELRD  NOP       0
         BALR      R15,0
         USING     *,R15
         STM       R5,R14,NLSAVE
         S         R14,KF4
         L         R15,=V(FORMCONV)
         USING     FORMCONV,R15
         ST        R15,XBASADDR
         MVC       XXADDR(4),=A(INFREE)
         L         R6,0(0,R14)
         USING     NHEADER,R6
         CLI       NNUMENT+1,X'00'
         BE        NLERRNL0
         LA        R14,*+12
         STM       R5,R14,XIOSAVE
         B         INFREEI
NLREAD1  L         R2,BPOINT
         LA        R3,5
         CLI       NLSTNAME+5,5
         BNL       *+8
         IC        R3,NLSTNAME+5
         EX        R3,NLRDCLC          CLC 2(1,R2),NLSTNAME
         BE        NLREAD2
NLREAD1A BAL       R8,INREC
         B         NLREAD1
NLRDCLC  CLC       2(1,R2),NLSTNAME
NLREAD2  LA        R1,3(R3,R2)
         CLI       0(R1),C' '
         BNE       NLREAD1A
         LA        R1,1(0,R1)
         LH        R7,NNUMENT
         S         R6,KF4
         STM       R6,R7,NLADDR
NLREAD3  BAL       R8,FVFRSCAN         ADVANCE TO NEXT NON-BLANK
         CLI       0(R1),C'&&'
         BNE       NLREAD4
         CLC       0(4,R1),=C'&&END'
         BNE       NLERRNL3            INVALID CHARACTER
         LM        R5,R14,NLSAVE
         BR        R14
         CNOP      0,4
NLREAD4  BAL       R8,FVCHECK          CHECK IF STOPPING CHARACTER
         SCANMASK  1,A,D,F,G,T,Z       IS A LETTER
         BNM       NLERRNL3            INVALID CHAR IF NOT LETTER
         LR        R7,R1
         CNOP      0,4
         BAL       R8,FVSCAN1          SCAN OVER LETTERS AND NUMBERS
         SCANMASK  1,A,D,F,G,T,Z,0,1
         BZ        NLERRNL4            UNEXPECTED END OF BUFFER ERROR
         BAL       R8,FVCHECK2         CHECK FOR ( OR =
         SCANMASK  1,'(','='
         BNM       NLERRNL3            INVALID CHARACTER
         LR        R3,R1
         SR        R3,R7
         C         R3,KF6
         BH        NLERRNL1            NAME TOO LONG
         BCTR      R3,0
         MVC       NLTEMP3(6),KBL6
         EX        R3,NLEXEC1          MVC NLTEMP3(1),0(R7)
         LM        R6,R7,NLADDR
         USING     NLENTRY,R6
NLREAD5  LA        R6,12(0,R6)
         CLC       NLTEMP3(6),NENTRYNM
         BE        NLREAD6
         BCT       R7,NLREAD5
         B         NLERRNL2            NAME NOT FOUND
NLREAD6  MVC       NLTEMP2(4),NLFLAG
         TM        NLFLAG,X'70'        DIMENSIONED VARIABLE?       V1L3
         BZ        NLRDEQ              NO                          V1L3
         MVI       NLRDSW,ON           YES - SO SET SW             V1L3
NLRDEQ   EQU       *                                               V1L3
         CLI       0(R1),C'='
         BE        NLREAD8
         CLI       0(R1),X'7B'         BCD '='
         BE        NLREAD8
         IC        R7,NLFLAG
         N         R7,KM2527
         BZ        NLERRNL5
         SRL       R7,2
         ST        R7,NLNUMSUB
         LA        R6,NLSUBEND
         SR        R6,R7
         LA        R1,1(0,R1)
         MVI       FVDELSW,X'02'
NLREAD6A BAL       R8,FVFRSCAN
         LR        R7,R1                                           V1L1
         CNOP      0,4
         BAL       R8,FVSCAN
         SCANMASK  1,0,1
         LR        R2,R1
         BCTR      R2,0
         SR        R2,R7                                           V1L1
         BM        NLERRNL6                                        PD
         C         R2,KF7
         BH        NLERRNL6                                        PD
         MVI       TEMP,C'0'                                       PD
         MVC       TEMP+1(15),TEMP                                 V1L1
         LA        R3,TEMP+15                                      V1L1
         SR        R3,R2                                           V1L1
         EX        R2,NLEXEC2                                      V1L1
         NI        TEMP+15,X'CF'                                   PD
         PACK      TEMP2(8),TEMP+1(15)
         MVI       TEMP2,X'00'
         CVB       R7,TEMP2
         ST        R7,0(0,R6)
         LA        R6,4(0,R6)
         C         R6,=A(NLSUBEND)
         BNL       NLREAD6B
         CLI       0(R1),C' '
         BE        NLREAD6A
         CLI       0(R1),C','
         BE        NLREAD6A
         B         NLERRNL3                                        PD
NLREAD6B MVI       FVDELSW,X'02'
         BAL       R8,FVFRSCAN
         CLC       0(2,R1),=C')='      IS THIS EBCDIC )= ?         V1L1
         BE        NLREAD6C            BRANCH IF SO                V1L1
         CLC       0(2,R1),=X'4C7B'    IS THIS BCD )= ?            V1L1
         BNE       NLERRNL3            IF NOT ISSUE ERROR MESSAGE  V1L1
NLREAD6C LA        R1,2(0,R1)                                      V1L1
         ST        R1,BPOINT
         LA        R14,NLREAD7
         S         R14,NLNUMSUB
         LM        R5,R13,NLSAVE
         L         R3,NLTEMP2
         TM        NLTEMP2,X'08'       IS THIS A CHARACTER VARIABLE
         BCR       8,R3
         S         R14,KF4
         OI        NLSWOP,X'02'        TURN READ CHAR SW ON        V1L5
         L         R6,0(,R14)
         MVC       0(4,R6),KF1
         TM        NLTEMP2,X'09'       CHAR*N ?                    V1L5
         BO        NLREAD6D                                        V1L5
         A         R14,KF4                                         V1L5
NLREAD6D BR        R3                                              V1L5
         DC  0F'0',AL1(XSSI-XSSD),AL3(NLSUB1)                      PD
         DC        AL1(XSSI-XSSD),AL3(NLSUB2)
         DC        AL1(XSSI-XSSD),AL3(NLSUB3)
         DC        AL1(XSSI-XSSD),AL3(NLSUB4)
         DC        AL1(XSSI-XSSD),AL3(NLSUB5)
         DC        AL1(XSSI-XSSD),AL3(NLSUB6)
         DC        AL1(XSSI-XSSD),AL3(NLSUB7)
         DC        AL1(XSSI-XSSD),AL3(NLSUB8)
NLREAD7  EQU       *
         LR        R14,R15             SAVE ADDR OF STAR           V1L3
         CNOP      2,4
         BALR      R15,0
         L         R15,FVBASE-*(R15)
*/       DELETE    SEQ1=05680000,SEQ2=05710000                     V1L3
         IC        R2,NLTEMP2          THIS CODING                 V1L3
         N         R2,KF15             CLUGS UP                    V1L3
         STC       R2,XGIMIKSS+4       AN ARRAY                    V1L3
         L         R2,ZR14+8                                       V1L5
         TM        NLTEMP2,X'09'                                   V1L5
         BO        *+8                                             V1L5
         LA        R2,1                                            V1L5
         ST        R2,XELTLENT         XARRAY IN                   V1L3
         L         R2,ZR14            (A(1ST ELEMENT)              V1L3
         L         R8,ZR14+4           LENGTH OF ARRAY)            V1L3
         LA        R8,ZR8              STARTA DOES                 V1L3
         AR        R2,R8                                           V1L3
         LA        R14,NLTEMP2                                     V1L3
         ST        R14,XSAV14                                      V1L3
         B         XARRTOT             NOW WE'RE READY             V1L3
NLSUB1   DC        F'0'
NLSUB2   DC        F'0'
NLSUB3   DC        F'0'
NLSUB4   DC        F'0'
NLSUB5   DC        F'0'
NLSUB6   DC        F'0'
NLSUB7   DC        F'0'
NLSUB8   DC        F'0'
NLSUBEND EQU       *
FVBASE   DC        A(FORMCONV)                                     V1L1
NLSUBPTR DS        1F
NLNUMSUB DS        1F
NLEXEC2  MVC       0(1,R3),0(R7)                                   V1L1
NLREAD8  LA        R14,NLTEMP2
NLREAD9  LA        R1,1(0,R1)
         ST        R1,BPOINT
         B         NLWRITE
FVSCAN1  LA        R1,1(0,R1)          INCREMENT BUFFER POINTER
FVSCAN   L         R0,0(0,R8)          PUT SCAN MASK IN R0
         SR        R2,R2               ZERO REGISTER FOR CHARACTER
         LA        R4,1                SET BUFFER INCREMENT
FVSCAN2  IC        R2,0(0,R1)          PICK UP CHARACTER FROM BUFFER
         IC        R2,FVTABLE(R2)      TRANSLATE TO CLASS CODE
         LTR       R3,R0               REFRESH SCAN MASK FROM R0
         SLL       R3,0(R2)            SHIFT CLASS BIT INTO BIT 1
         BXH       R3,R3,4(R8)         IF BIT 1 OF R3 IS 0,RETURN
         BXLE      R1,R4,FVSCAN2       INCREMENT BUFFER PTR AND LOOP
         NI        *+1,0               SET CONDITION CODE FOR EOB
         B         4(0,R8)             RETURN TO CALLER
FVCHECK  SR        R2,R2               INITIALIZE FOR CHARACTER
         IC        R2,0(0,R1)          PICK UP CHARACTER FROM BUFFER
FVCHECK1 IC        R2,FVTABLE(R2)      TRANSLATE TO CLASS CODE
FVCHECK2 L         R3,0(0,R8)          PUT CHECK MASK IN R3
         SLL       R3,1(R2)            SHIFT CLASS BIT INTO BIT 0
         LTR       R3,R3               SET CONDITION CODE
         B         4(0,R8)             RETURN
FVFRSCAN NI        FVDELSW,255-X'01'
FVFRSC1  L         R5,ABUFFER          GET START OF BUFFER
         A         R5,LBUFFER
         BCTR      R5,0
         LA        R4,1
         BCT       R1,FVFRSC10
FVFRSC5  CLI       0(R1),C' '
         BNE       FVFRSC15
FVFRSC10 BXLE      R1,R4,FVFRSC5
         MVI       FVDELSW,X'01'
         LR        R5,R8
         BAL       R8,INREC
         LR        R8,R5
         L         R1,BPOINT
         B         FVFRSC1
FVFRSC15 CLI       0(R1),C','
         BE        FVFRSC20
         MVI       FVDELSW,X'01'
         BR        R8                  RETURN WITH CC NOT ZERO
FVFRSC20 TM        FVDELSW,X'03'
         MVI       FVDELSW,X'01'
         BZ        FVFRSC10
         NI        *+1,0               SET CC TO ZERO
         BR        R8
*    NL0-NAMELIST COMPILE TIME ERROR ENCOUNTERED
NLERRNL0 LM        R5,R14,XIOSAVE
         B         XBOOT
*    NL1-VARIABLE NAME TOO LONG
NLERRNL1 LR        R1,R7
         LM        R5,R14,XIOSAVE
         $ERROR    (TRAZ,NL,2,VARR1,,BUF)                          V1L5
*    NL2-VARIABLE NAME NOT FOUND
NLERRNL2 LA        R1,NLTEMP3
         LM        R5,R14,XIOSAVE
         $ERROR    (TRAZ,NL,3,VARR1,,BUF)                          V1L5
*    NL3-INVALID CHARACTER IN INPUT
NLERRNL3 LM        R5,R14,XIOSAVE
         $ERROR    (TRAZ,NL,4,CHRR1,UNEX,BUF)                      V1L5
*    NL4-UNEXPECTED END OF INPUT RECORD
*LERRNL4 LM        R5,R14,XIOSAVE
*        $ERROR    (TRAZ,NL,5,,,BUF)                               V1L5
NLERRNL4 EQU       NLERRNL3
*    NL5-VARIABLE INCORRECTLY SUBSCRIPTED OR WRONG NUMBER OF SUBSCRIPTS
NLERRNL5 LA        R1,NLTEMP3
         LM        R5,R14,XIOSAVE
         $ERROR    (TRAZ,NL,6,VARR1,,BUF)                          V1L5
*    NL6-SUBSCRIPT OUT OF RANGE
NLERRNL6 LA        R1,NLTEMP3
         LM        R5,R14,XIOSAVE                                  PD
         $ERROR    (TRAZ,NL,7,VARR1,,BUF)                          V1L5
NLTEMP2  DS        1F
         L         R1,BPOINT
         LA        R1,1(0,R1)
         B         NLREAD3
SCANMASK DS        2F
NLTEMP3  DS        2F
NLEXEC1  MVC       NLTEMP3(1),0(R7)
NLADDR   DS        2F
NLEOBSW  DC        X'00'
NLSWOP   DC        X'00'                                           V1L5
         SPACE     5
         ENTRY     NAMELWR
NAMELWR  NOP       0
         BALR      R15,0
         USING     *,R15
         STM       R5,R14,NLSAVE
         S         R14,KF4
         L         R15,=V(FORMCONV)
         USING     FORMCONV,R15
         ST        R15,XBASADDR
         MVC       XXADDR(4),=A(OUTFREE)
         L         R6,0(0,R14)
         USING     NHEADER,R6
         OI        NLSWOP,X'01'                                    V1L5
         CLI       NNUMENT+1,X'00'
         BE        NLERRNL0
         LA        R14,NAMELWR1        SET RETURN FROM OUTFREEI
         STM       R5,R14,XIOSAVE
         B         OUTFREEI
NAMELWR1 MVI       FVDELIM,C','        SET DELIMITER TO COMMA
         L         R2,BPOINT
         MVI       0(R2),C'&&'
         LA        R3,5
         CLI       NLSTNAME+5,5
         BNL       *+8
         IC        R3,NLSTNAME+5
         EX        R3,NLWRMVC          MVC 1(1,R2),NLSTNAME
         MVC       LFIELD(2),KF0
         BAL       R8,FREERECO
         LA        R14,NLTEMP1
         LH        R7,NNUMENT
         S         R6,KF4
NLWNEXTV LA        R6,12(0,R6)
         STM       R6,R7,NLADDR
         USING     NLENTRY,R6
         MVC       NLTEMP1(4),NLFLAG
NLPUTNAM LH        R1,NLNCHAR
         LA        R5,NENTRYNM
         LA        R2,2(0,R1)
         STH       R2,LFIELD
         BAL       R8,LENCHECK
         L         R4,BPOINT
         EX        R1,SPEXEC2
         LA        R4,1(R4,R1)
         MVI       0(R4),C'='
         LA        R4,1(0,R4)
         ST        R4,BPOINT
NLWRITE  LM        R5,R13,NLSAVE
         TM        0(R14),X'08'        IS IT A CHARACTER VARIABLE
         BO        NLWRITE2            BRANCH IF YES
         TM        0(R14),X'F0'        IS IT A SIMPLE VARIABLE
         BZ        XSIMPELT            BRANCH IF YES
         TM        0(R14),X'70'        IS IT A SUBSCRIPTED VARIABLE
         BNZ       XARRAY              BRANCH IF YES
NLWRITE1 L         R3,0(0,R14)
         IC        R2,0(0,R3)          GET LENGTH IF CHAR VAR      V1L4
         L         R3,0(0,R3)
         B         XSUBSELT
NLWRITE2 TM        0(R14),X'70'        IS CHAR VARIABLE SUBSCRIPTED
         BZ        NLWRITE1            BRANCH IF NO AND TREAT AS COM
         TM        0(R14),CHARN        IS N > 1 ?                  V1L2
         BO        XCHARARR            YES                         V1L2
         B         XARRAY              NO                          V1L2
NLTEMP1  DS        1F
         LM        R6,R7,NLADDR
         BCT       R7,NLWNEXTV
         MVC       LFIELD,KF4                                      V1L5
         BAL       R8,LENCHECK                                     V1L5
         L         R4,BPOINT
         MVC       0(4,R4),=C'&&END'
         BAL       R8,OUTREC
         NI        NLSWOP,X'FE'                                    V1L5
         LM        R5,R14,NLSAVE
         BR        R14
NLWRMVC  MVC       1(1,R2),NLSTNAME-NHEADER(R6)
KF6      DC        F'6'
FVTABLE  FVTABLE
         $FREE     R6                                              V1L5
         LTORG
.NOLIST  ANOP                                                      V1L2
         EJECT
         USING     FVSAVE,R13
OUTBCDI  DS        0H
         DEFSAVE
         LA        R1,0(0,R1)
         ST        R1,FORMPTR
         MVI       ROUTCODE+1,X'00'
         BAL       R8,BUFFINIT
         MVI       FVCOMPSW+1,0
         MVI       ENDSW,X'00'
         MVI       FIELDCNT+1,X'00'
         MVC       RECLEN(2),KF0
         MVI       INOUTCON+1,0
         MVC       NBDOT(2),KF0
         LM        R5,R14,XIOSAVE
         BR        R14
         SPACE     2
OUTFREEI EQU       *
         DEFSAVE
         MVI       ROUTCODE+1,X'01'
         BAL       R8,BUFFINIT
         MVI       FVCOMPSW+1,0
         MVI       FVDELIM,C' '        SET DELIMITER TO BLANK
         MVC       RECLEN(2),KF0                                   V1L5
         L         R8,=V(XLINES)                                   V1L5
         USING     CDSECT,R8                                       V1L5
         TM        XPUNCHSW,X'FF'                                  V1L5
         BO        FRPNOP                                          V1L5
         DROP      R8                                              V1L5
         LA        R2,1(0,R2)                                      V1L5
         MVC       RECLEN(2),KH1                                   V1L5
FRPNOP   ST        R2,BPOINT                                       V1L5
         MVC       NBDOT(2),KF0
         LM        R5,R14,XIOSAVE
         BR        R14
         SPACE     2
INBCDI   LA        R1,0(0,R1)
         DEFSAVE
         MVI       ROUTCODE+1,X'02'
         ST        R1,FORMPTR
         MVI       ENDSW,X'00'
         MVI       FIELDCNT+1,X'00'
         MVI       FVCOMPSW+1,0
         MVC       RECLEN(2),KF0
         MVI       INOUTCON+1,IRTNTBLE-ORTNTBLE
         MVC       FRIOROUT(4),=V(FRIOSCAN)
         MVC       NBDOT(2),KF0
         BAL       R8,BUFFIN
         LM        R5,R14,XIOSAVE
         BR        R14
         SPACE     2
INFREEI  EQU       *
         DEFSAVE
         MVI       ROUTCODE+1,X'03'
         STH       R3,LFIELD
         BAL       R8,BUFFIN
         MVC       FRIOROUT(4),=V(FRIOSCAN)
         MVI       FVCOMPSW+1,0
         MVI       FVDELSW,X'02'
         MVC       DUPFAC(2),KF0
         MVC       NBDOT(2),KF0
         LM        R5,R14,XIOSAVE
         BR        R14
         SPACE     2
INBCD    EQU       *
OUTBCD   MVI       ENDSW,X'01'
         DEFSAVE
         MVC       CODEBYTE+1(1),0(R14)
         NI        CODEBYTE+1,X'0F'
         STM       R2,R3,FVVARLEN
COMPRET  LH        R3,FIELDCNT
         SH        R3,ONE
         BP        FIELDSET
STRTSTAT EQU       *
INBCD1   EQU       *
OUTBCD1  L         R6,FORMPTR
         LA        R6,4(,R6)
OUTBCDP8 ST        R6,FORMPTR
         MVC       FIELDCNT+1(1),0(R6)
         MVC       LFIELD+1(1),1(R6)
         MVC       NDEC+1(1),2(R6)
         SR        R3,R3
         IC        R3,3(R6)
         SRA       R3,1
         AH        R3,INOUTCON
         LH        R3,ORTNTBLE(R3)
         STH       R3,ROUTNUM
         B         BASEADDR(R3)
FIELDSET STH       R3,FIELDCNT
         LH        R3,ROUTNUM
         B         BASEADDR(R3)
ORTNTBLE EQU       *-2
         DC        AL2(STRTSTAT-BASEADDR)   04-START OF FORMAT
         DC        AL2(STFRBRK-BASEADDR)    08-FIRST LEVEL (
         DC        AL2(BOOTOFF-BASEADDR)    0C-INVALID FORMAT
         DC        AL2(SCALESET-BASEADDR)   10-P SCALING
         DC        AL2(PRFROUT-BASEADDR)    14-F FORMAT
         DC        AL2(PREROUT-BASEADDR)    18-E FORMAT
         DC        AL2(PREROUT-BASEADDR)  1C-DFORMAT               V1L1
         DC        AL2(PRIROUT-BASEADDR)    20-I FORMAT
         DC        AL2(TABULATE-BASEADDR)   24-T FORMAT
         DC        AL2(PRAROUT-BASEADDR)    28-A ROUTINE
         DC        AL2(PRLROUT-BASEADDR)    2C-L FORMAT
         DC        AL2(SPACERT-BASEADDR)    30-X ROUTINE
         DC        AL2(PRHROUT-BASEADDR)    34-H FORMAT
         DC        AL2(ENDFRBRK-BASEADDR)   38-FIRST LEVEL )
         DC        AL2(NEWLINE-BASEADDR)    3C-/ ROUTINE
         DC        AL2(PRGROUT-BASEADDR)    40-G FORMAT
         DC        AL2(ENDSTAT-BASEADDR)    44-END OF STATEMENT
         DC        AL2(PRZROUT-BASEADDR)    48-Z FORMAT
         DC        AL2(ENDSCBRK-BASEADDR)   4C-SECOND LEVEL )
         DC        AL2(STSCBRK-BASEADDR)    50-SECOND LEVEL (
         SPACE     2
IRTNTBLE EQU       *-2
         DC        AL2(STRTSTAT-BASEADDR)   04-START OF FORMAT
         DC        AL2(STFRBRK-BASEADDR)    08-FIRST LEVEL (
         DC        AL2(BOOTOFF-BASEADDR)    0C-INVALID FORMAT
         DC        AL2(SCALESET-BASEADDR)   10-P SCALING
         DC        AL2(RDFROUT-BASEADDR)    14-F FORMAT
         DC        AL2(RDEROUT-BASEADDR)    18-E FORMAT
         DC        AL2(RDDROUT-BASEADDR)    1C-D FORMAT
         DC        AL2(RDIROUT-BASEADDR)    20-I FORMAT
         DC        AL2(TABULATE-BASEADDR)   24-T FORMAT
         DC        AL2(RDAROUT-BASEADDR)    28-A ROUTINE
         DC        AL2(RDLROUT-BASEADDR)    2C-L FORMAT
         DC        AL2(SPACERT-BASEADDR)    30-X ROUTINE
         DC        AL2(RDHROUT-BASEADDR)    34-H FORMAT
         DC        AL2(ENDFRBRK-BASEADDR)   38-FIRST LEVEL )
         DC        AL2(NEWCARD-BASEADDR)    3C-/ ROUTINE
         DC        AL2(RDGROUT-BASEADDR)    40-G FORMAT
         DC        AL2(ENDSTATI-BASEADDR)   44-END OF STATEMENT
         DC        AL2(RDZROUT-BASEADDR)    48-Z FORMAT
         DC        AL2(ENDSCBRK-BASEADDR)   4C-SECOND LEVEL )
         DC        AL2(STSCBRK-BASEADDR)    50-SECOND LEVEL (
ENDSW    DC        X'00'
         SPACE     2
OUTFREE  B         ENDFREEO
         DEFSAVE
         STM       R2,R3,FVVARLEN
         MVC       CODEBYTE+1(1),0(R14)
         NI        CODEBYTE+1,X'0F'
         LH        R3,CODEBYTE
         AR        R3,R3
         LH        R4,ORTFRIO(R3)
         LA        R3,0(R3,R3)
         LA        R3,FRIOSPEC(R3)
         MVC       LFIELD(4),0(R3)
         B         BASEADDR(R4)
ORTFRIO  DC        AL2(PRLROUT1-BASEADDR)   L*4
         DC        AL2(PRLROUT1-BASEADDR)   L*1
         DC        AL2(PRIROUT1-BASEADDR)   I*4
         DC        AL2(PRIROUT1-BASEADDR)   I*2
         DC        AL2(PREROUT1-BASEADDR)   R*4
         DC        AL2(PRDROUT1-BASEADDR)   R*8
         DC        AL2(PREROUT1-BASEADDR)   C*8
         DC        AL2(PRDROUT1-BASEADDR)   C*16
         DC        AL2(PRAFREE-BASEADDR)    CHAR*1
         DC        AL2(PRAFREE-BASEADDR)    CHAR*N
         SPACE     2
INFREE   B         ENDFREEI
         DEFSAVE
         STM       R2,R3,FVVARLEN
         MVC       CODEBYTE+1(1),0(R14)
         NI        CODEBYTE+1,X'0F'
         LH        R3,CODEBYTE
         LH        R4,DUPFAC
         SH        R4,=H'1'
         BP        DUPROUT
         AR        R3,R3
         LH        R4,IRTFRIO(R3)
         B         BASEADDR(R4)
DUPROUT  IC        R3,LENTABLE(R3)
         BCTR      R3,0
         STH       R4,DUPFAC
         L         R4,STR1
         TM        CODEBYTE+1,X'06'
         BO        DUPROUT1
         EX        R3,DUPEXEC2         MVC 0(1,R4),TEMP
         B         INCLEAN1
DUPROUT1 EX        R3,DUPEXEC1         MVC 0(1,R4),COMSAVE
         LA        R4,1(R4,R3)
         EX        R3,DUPEXEC2         MVC 0(1,R4),TEMP
         B         INCLEAN1
DUPEXEC1 MVC       0(1,R4),COMSAVE
DUPEXEC2 MVC       0(1,R4),TEMP
IRTFRIO  DC        AL2(RDLROUT1-BASEADDR)   L*4
         DC        AL2(RDLROUT1-BASEADDR)   L*1
         DC        AL2(RDIROUT1-BASEADDR)   I*4
         DC        AL2(RDIROUT1-BASEADDR)   I*2
         DC        AL2(RDEROUT1-BASEADDR)   R*4
         DC        AL2(RDDROUT1-BASEADDR)   R*8
         DC        AL2(RDEROUT2-BASEADDR)   C*8
         DC        AL2(RDDROUT2-BASEADDR)   C*16
         DC        AL2(RDAFREE1-BASEADDR)   CHAR*1
         DC        AL2(RDAFREEN-BASEADDR)   CHAR*N
         EJECT
**********     SECTION  3     **********
**********     SECTION  5     **********
ENDFREEO DS        0H
         DEFSAVE
         L         R1,BPOINT
         BCTR      R1,0
         MVI       0(R1),C' '          OVERLAY LAST COMMA
         MVI       ABUFFER,X'80'       FUDGE FOR FREE C-C I/O      V1L1
         BAL       R8,FREERECO
ENDFREEI LM        R5,R14,XIOSAVE
         BR        R14
STFRBRK  MVC       FRBRCNT+1(1),FIELDCNT+1
         B         OUTBCD1
STSCBRK  MVC       SCBRCNT+1(1),FIELDCNT+1
         B         OUTBCD1
ENDFRBRK LH        R3,FRBRCNT
         SH        R3,=H'1'
         BP        COMBRK
         B         OUTBCD1
ENDSCBRK LH        R3,SCBRCNT
         BCT       R3,COMBRKP4
         B         OUTBCD1
COMBRK   STH       R3,FRBRCNT
COMBRKP4 STH       R3,SCBRCNT
COMBRK1  L         R6,FORMPTR
         SH        R6,ZR6(RO)
         B         OUTBCDP8
SCALESET MVC       NBDOT(2),0(R6)
         B         OUTBCD1
ENDSTATI EQU       *
ENDSTAT  TM        ENDSW,X'03'
         BZ        ENDSTAT1
         TM        ENDSW,X'01'
         BO        ENDROUT
         LM        R5,R14,XIOSAVE
         $ERROR    (TRAZ,FM,4)                                     V1L5
ENDSTAT1 OI        ENDSW,X'02'
         LA        R8,COMBRK1
         B         OUTREC
SPACERT  BAL       R8,LENCHECK
         L         R3,BPOINT
         AH        R3,LFIELD
         ST        R3,BPOINT
         B         OUTBCD1
         SPACE     2
         EJECT
TABULATE LH        R3,LFIELD
         BCTR      R3,0
         STH       R3,RECLEN
         A         R3,ABUFFER
         ST        R3,BPOINT
         B         OUTBCD1
FORMSNAP BR        R1
NEWCARD  EQU       *
NEWLINE  LA        R8,INBCD1
INREC    EQU       *
OUTREC   LH        R2,ROUTCODE
         IC        R2,INOUTTBL(R2)
         STC       R2,INOUTSW
         AIF       ('&WATTYPE' EQ 'DISTR').FVOMIT3
         TM        ROUTCODE+1,X'02'    IS IT INPUT
         BO        OUTREC1             BYPASS SNAP IF SO
         L         R2,ABUFFER
         L         R3,LBUFFER
         BAL       R1,FORMSNAP
         MVC       0(133,R2),0(R2)
OUTREC1  EQU       *
.FVOMIT3 ANOP
         LH        R2,RECLEN
         L         R3,ABUFFER
         L         R1,XRADDR
         BALR      R0,R1
INOUTSW  DC        AL1(*-*)
         DC        X'00'
BUFFIN   EQU       *
BUFFINIT EQU       *
         AIF       ('&WATTYPE' EQ 'DISTR').FVOMIT1
         TM        ROUTCODE+1,X'02'    IS IT INPUT
         BZ        INREC1              BYPASS SNAP IF NOT
         BAL       R1,FORMSNAP
         MVC       0(80,R2),0(R2)
INREC1   EQU       *
.FVOMIT1 ANOP
         LA        R2,0(0,R2)
         ST        R2,ABUFFER
         ST        R2,BPOINT
         ST        R3,LBUFFER
         AR        R3,R2
         BCTR      R3,0
         ST        R3,FVENDBUF
         MVC       RECLEN(2),KF0
         BR        R8
ENDROUT  NOP       0
         TM        ROUTCODE+1,X'02'
         BO        ENDROUT1
         MVI       ABUFFER,X'80'       SWITCH FOR LAST WRITE
         BAL       R8,OUTREC
ENDROUT1 LM        R5,R14,XIOSAVE
         BR        R14
INCLEAN  CLI       ROUTCODE+1,X'03'    IS FREE INPUT
         BE        FRIN
         L         R4,BPOINT
         AH        R4,LFIELD
SUPCLEAN CLI       ROUTCODE+1,X'01'    TEST FOR FREE OUTPUT
         BNE       NOTFROUT            BR IF NOT AROUND
         MVC       0(1,R4),FVDELIM     INSERT DELIMETER
         LA        R4,1(0,R4)          INCREMENT BUFFER POINTER
         LH        R3,RECLEN
         LA        R3,1(0,R3)          INCREMENT CHARACTER COUNT
         STH       R3,RECLEN
NOTFROUT ST        R4,BPOINT
FRIN     NI        ENDSW,255-X'02'     INDICATE VARIABLE PROCESSED
         CLI       FVCOMPSW+1,0                                    PD
         BNE       COMPRTN1                                        PD
         TM        CODEBYTE+1,X'06'
         BO        COMPRTN
COMPRTN2 EQU       *
INCLEAN1 NI        ENDSW,X'FD'
         LM        R5,R14,XIOSAVE
         B         4(0,R14)
COMPRTN  LH        R3,CODEBYTE
         IC        R3,LENTABLE(R3)
         A         R3,STR1
         ST        R3,STR1
         MVI       FVCOMPSW+1,4                                    PD
         MVC       COMSAVE(8),TEMP
         TM        ROUTCODE+1,X'01'    IS IT FREE
         BZ        COMPRET             IF NOT,GO TO FORMAT RTN
         MVI       FVCOMPSW+1,8                                    PD
         TM        ROUTCODE+1,X'02'    IS IT INPUT
         BO        COMPRTNI            IF SO,GO TO INPUT RTN
         L         R4,BPOINT
         MVI       0(R4),C' '                                      V1L5
         TM        NLSWOP,X'01'                                    V1L5
         BO        *+8                                             V1L5
         MVI       0(R4),C','          INSERT COMMA
         SH        R4,LFIELD
         BCTR      R4,0
         MVI       0(R4),C'('          INSERT START OF COMPLEX
         TM        CODEBYTE+1,X'01'
         BZ        PREROUT1
         B         PRDROUT1
COMPRTNI TM        CODEBYTE+1,X'01'
         BO        RDDROUT2
         B         RDEROUT2
COMPRTN1 MVI       FVCOMPSW+1,0
         CLI       ROUTCODE+1,X'01'    IS THIS FREE OUTPUT
         BNE       COMPRTN2
         L         R4,BPOINT
         BCTR      R4,0
         MVI       0(R4),C')'          INSERT LAST OF COMPLEX
         MVC       1(1,R4),FVDELIM     PUT A BLANK IN OUTPUT(I THINK)
         LA        R4,2(0,R4)
         ST        R4,BPOINT
         LH        R3,RECLEN
         LA        R3,2(0,R3)
         STH       R3,RECLEN
         MVI       FVCOMPSW,X'00'
         B         COMPRTN2
OVERER   EQU       *
BLOTOUT  MVI       BLOTCHAR,C'*'
BLOTOUT1 L         R4,BPOINT
         LH        R6,LFIELD
         LTR       R6,R6
         BNP       SUPCLEAN
         MVC       0(1,R4),BLOTCHAR
         S         R6,KF2
         BM        *+8
         EX        R6,SPEXEC3          MVC 1(1,R4),0(R4)
         LA        R4,2(R4,R6)
         B         SUPCLEAN
LENCHECK LH        R2,RECLEN
LENCHK1  AH        R2,LFIELD
         STH       R2,RECLEN
         C         R2,LBUFFER
         BCR       12,R8
         L         R9,=V(XLINES)                                   V1L5
         USING     CDSECT,R9                                       V1L5
         TM        XPUNCHSW,X'FF'                                  V1L5
         BO        FERRUNE                                         V1L5
         DROP      R9                                              V1L5
         CLI       ROUTCODE+1,X'01'
         BNE       FERRUNE             RECORD OVERFLOW ERROR
FREERECO LR        R7,R8
         LR        R9,R1               SAVE R1                     V1L3
         BAL       R8,OUTREC
         LR        R8,R7
         LR        R1,R9               RESTORE R1                  V1L3
         ST        R2,ABUFFER
         LA        R2,1(0,R2)
         ST        R2,BPOINT
         MVC       RECLEN(2),KF0                                   V1L5
         L         R9,=V(XLINES)                                   V1L5
         USING     CDSECT,R9                                       V1L5
         TM        XPUNCHSW,X'FF'                                  V1L5
         BO        FRPAGN                                          V1L5
         DROP      R9                                              V1L5
         MVC       RECLEN(2),KH1                                   V1L3
FRPAGN   LH        R2,LFIELD                                       V1L5
         AH        R2,RECLEN
         STH       R2,RECLEN
         CL        R2,LBUFFER
         BCR       12,R8
FERRUNE  LM        R5,R14,XIOSAVE
         $ERROR    (TRAZ,UN,E)                                     V1L5
FVUNCHK  L         R1,STR1
         CLI       0(R1),X'&UNDEF'     CHECK FOR UV VAR            V1L2
         BNER      R8                  BRANCH IF NO                V1L2
         L         R3,FVVARLEN
         CLI       CODEBYTE+1,CHARN    IS THIS CHARACTER*N         V1L2
         BE        FVUNCHK1            BYPASS NEXT CODING IF SO
         LH        R3,CODEBYTE         GET CODEBYTE
         IC        R3,LENTABLE(R3)     GET VARIABLE LENGTH FROM TABLE
FVUNCHK1 S         R3,KF2
         BM        FVUNDVAR            IF VAR LEN=1,THEN UNDEFINED
         EX        R3,FVUNCLC          CLC 1(1,R1),0(R1)
         BNER      R8                  RETURN IF NOT UNDEFINED     V1L2
FVUNDVAR MVI       BLOTCHAR,C'U'
         B         BLOTOUT1
FVUNCLC  CLC       1(1,R1),0(R1)
INFRIO   DS        0H
* FRIOTEMP         16
* EXPONENT         2
* BLANKS           2
* SIGN             1
* EXPONENT SIGN    1
* DUPLICATION      2
         L         R1,BPOINT
         LH        R3,LFIELD
         TM        ROUTCODE+1,X'01'    IS THIS FORMATTED IO
         BZ        INFRIO1             BYPASS NEXT CODING IF SO
         BAL       R8,FVFRSCAN         ADVANCE TO NEXT NON-BLANK
         CLI       0(R1),C''''         START OF CHAR CONST ?       V1L4
         BE        RDAFREEA            BIF SO                      V1L4
         CLI       0(R1),C'@'          BCD CHAR CONST ?            V1L4
         BE        RDAFREEA            GIVE IT A TRY               V1L4
         L         R3,ABUFFER          GET START OF BUFFER POINTER
         A         R3,LBUFFER          ADD LENGTH OF BUFFER
         SR        R3,R1               GET LENGTH REMAINING IN BUFFER
INFRIO1  BCTR      R3,0                GENERATE LENGTH-1 FOR FRIOSCAN
         LA        R4,0(R1,R3)
         LH        R6,ROUTCODE
         IC        R6,FMTFRSW(R6)      PUT FORMAT-FREE CODE IN R6
         LH        R5,FVCOMPSW         GET ADDRESS OF FRIOSCAN
         L         R5,FVFRIO(R5)       GET ADDRESS OF FRIOSCAN
         BALR      R5,R5               CALL FRIOSCAN
         B         FFM0TEST                                        V1L3
         B         RDZUNEX
         ST        R5,FRIOROUT
         CLI       ROUTCODE+1,X'03'
         BNE       *+8
         ST        R1,BPOINT
         L         R4,=V(FRIOTEMP)
         MVC       TEMP(16),0(R4)
         LH        R5,16(R4)
         TM        21(R4),X'40'
         BO        *+8
         SH        R5,NBDOT
         STH       R5,EXP
         MVC       NEGSW(1),20(R4)
         MVC       DUPFAC(2),22(R4)
         BR        R14
FFM0TEST IF        (NLRDSW,OFF),FVERRFM0    NAMELIST READ?         V1L3
         MVI       NLRDSW,OFF          YES AND TURN IT OFF         V1L3
         BCTR      R1,R0                                           V1L5
         CLI       1(R1),X'50'                                     V1L5
         BE        FLOADST                                         V1L5
         CLI       0(R1),C','                                      V1L5
         BE        FLOADST                                         V1L5
         CLI       0(R1),X'50'                                     V1L5
         BE        FLOADST1                                        V1L5
FOUTBLK  BCTR      R1,R0                                           V1L5
         CLI       0(R1),C' '                                      V1L5
         BE        FOUTBLK                                         V1L5
         CLI       0(R1),C','                                      V1L5
         BE        FLOADST                                         V1L5
         B         FVERRFM0            TOO BAD                     V1L3
FLOADST1 BCTR      R1,R0                                           V1L5
FLOADST  ST        R1,BPOINT           SAVE R1                     V1L3
         L         R3,XTOTLNP1         CLUG UP TEST                V1L3
         ST        R3,XCRNTELT         TO STOP                     V1L3
         MVI       FVCOMPSW+1,X'01'    IN CASE OF COMPLX           V1L3
         B         INCLEAN                                         V1L3
NLRDSW   DC        X'00'               NL READ SW FOR ARRAYS       V1L3
FVFRIO   DC        V(FRIOSCAN)
         DC        V(FRIOSCAN)
         DC        V(FRIOCRET)
SPEXEC2  MVC       0(1,R4),0(R5)
SPEXEC3  MVC       1(1,R4),0(R4)
**********     SECTION 13     **********
TEMP     DS        1D
TEMP1    DS        1D
TEMP2    DS        2D
COMSAVE  DS        1D
SPROUND  DC        X'0000000080000000'
LENTABLE DC        AL1(4)              L*4
         DC        AL1(1)              L*1
         DC        AL1(4)              I*4
         DC        AL1(2)              I*2
         DC        AL1(4)              R*4
         DC        AL1(8)              R*8
         DC        AL1(4)              C*8
         DC        AL1(8)              C*16
         DC        AL1(1)              CHAR*1
         DC        AL1(*-*)            CHAR*N
FRIOSPEC DC        H'8',H'0'           L*4-L8
         DC        H'8',H'0'           L*1-L8
         DC        H'12',H'0'          I*4-I12
         DC        H'12',H'0'          I*2-I12
         DC        H'16',H'7'          R*4-E16.7
         DC        H'28',H'16'         R*8-D28.16
         DC        H'16',H'7'          C*4-2E16.7
         DC        H'28',H'16'         C*16-2D28.16
         DC        H'1',H'0'           CHAR*1
         DC        H'0',H'0'           CHAR*N
BPOINT   DS        1F
NCON     DC        F'214748364'
NLSAVE   DS        10F
SPMASK1  DC        X'00FFFFFF'
SPMASK2  DC        X'00000007'
SPMASK3  DC        X'00000078'
SPMASK4  DC        X'00000040'
DPNCON   DC        X'41100000'
FMTFRSW  DC        X'04000400'
INOUTTBL DC        X'02020101'
HFMTTBLE DC        X'00000606'
ONE      DC        H'01'
TEN      DC        H'10'
INOUTCON DC        H'0'
INTTR    EQU       *-240
         DC        X'00010203040506070809'
NBDOT    DC        H'0'
NPLACE   DC        H'07'
LFIELD   DC        H'0'
NDEC     DC        H'0'
LNUM     DC        H'9'
EXP      DC        X'0000'
FVDELSW  DC        X'00'
PRINMSK  DC        X'00'
NEGSW    DC        X'00'
BLOTCHAR DC        X'00'
FVDELIM  DC        C' '
LBUFFER  DS        1F
FVENDBUF DS        1F
FORMPTR  DS        1F
FVVARLEN DS        1F                                              PD
STR1     DS        1F
ROUTCODE DC        H'0'
FIELDCNT DC        H'1'
FRBRCNT  DC        H'0'
SCBRCNT  DC        H'0'
ROUTNUM  DC        H'0'
DUPFAC   DC        H'0'
CODEBYTE DC        H'0'
TRTBLE   DC        C'0123456789ABCDEF'
ADTBLE   EQU       TRTBLE+1
RECLEN   DC        H'0'
TEMP3    DC        H'0'
INSPNCON DC        C'1048576'
INDPNCON DC        C'4503599627370495'
FRIOROUT DS        1F
NDEC1    DS        1H
FVCOMPSW DC        H'00'                                           PD
KF16     DC        F'16'                                           V1L3
         LTORG
**********     SECTION  6     **********
FVSAVE   DS        18F
PRFROUT  TM        ENDSW,X'01'
         BO        ENDROUT
         MVI       PRINMSK,X'02'       MARK AS F FORMAT
         CLI       CODEBYTE+1,X'04'
         BL        FVERRFM2            TYPE ERROR
PRFROUT1 BAL       R8,LENCHECK
         BAL       R8,FVUNCHK
         TM        CODEBYTE+1,X'01'
         BNZ       PRDPF
         MVC       TEMP(4),0(R1)
         BAL       R8,SPCON
SPPRSET  CVD       R7,TEMP1
         UNPK      TEMP2(10),TEMP1+2(6)
         LA        R5,TEMP2+1
         LH        R3,EXP
         LH        R6,LFIELD
         TM        TEMP2,X'0F'         IS NUMBER 10 LONG
         BZ        *+12                NO
         AH        R3,ONE
         SH        R5,ONE
         AH        R3,LNUM
*/       DELETE    SEQ1=12690000,SEQ2=12690000                     V1L4
         LA        R8,SUPCLEAN
         TM        PRINMSK,X'01'       IS IT G FORMAT
         BO        PRGROUT1            GO TO 'G' ROUTINE           V1L4
         AH        R3,NBDOT            IF NOT,                     V1L4
         B         COMPRSET            PUT NUMBER IN BUFFER        V1L4
PRDPF    LD        R0,0(0,R1)
         BAL       R8,DPCON
         BAL       R8,CONVDP
         LA        R3,TEMP1+19
         SR        R3,R1
         AH        R3,EXP
         AH        R3,NBDOT
         LH        R6,LFIELD
         MVI       NPLACE+1,X'10'
         LA        R8,SUPCLEAN
         TM        PRINMSK,X'01'       IS IT G FORMAT
         BNO       COMPRSET
         B         PRGROUT1
         EJECT
PREROUT  TM        ENDSW,X'01'
         BO        ENDROUT
         TM        CODEBYTE+1,X'04'    SAME KIND OF REAL?          V1L1
         BZ        FVERRFM2            NO                          V1L1
         TM        CODEBYTE+1,X'01'    DOUBLE PRECISION?           V1L1
         BO        PRDROUT1            YES                         V1L1
PREROUT1 BAL       R8,LENCHECK
         MVI       PRINMSK,X'00'
         BAL       R8,FVUNCHK
         MVC       TEMP(4),0(R1)
         BAL       R8,SPCON
         LH        R3,NBDOT
         CVD       R7,TEMP1
         UNPK      TEMP2(10),TEMP1+2(6)
         LA        R1,TEMP2+1
         TRT       TEMP2(1),INTTR
         LR        R5,R1
         LH        R6,LFIELD
         S         R6,KF4
         BAL       R8,COMPRSET
         MVI       0(R4),C'E'          INSERT E
         LA        R3,TEMP2+10
         B         DPPRSET1
         EJECT
PRDROUT1 BAL       R8,LENCHECK
         MVI       PRINMSK,X'00'
         BAL       R8,FVUNCHK
         LD        R0,0(0,R1)
         BAL       R8,DPCON
         BAL       R8,CONVDP
         LH        R3,NBDOT
         LH        R6,LFIELD
         S         R6,KF4
         BAL       R8,COMPRSET
         MVI       0(R4),C'D'          INSERT D
         LA        R3,TEMP1+19
DPPRSET1 SR        R3,R5
         AH        R3,EXP
         SH        R3,NBDOT
         CVD       R3,TEMP
         UNPK      TEMP1+13(3),TEMP+6(2)
         OI        TEMP1+15,X'F0'
         MVI       1(R4),C' '
         TM        TEMP+7,X'01'
         BZ        *+8
         MVI       1(R4),C'-'
         MVC       2(2,R4),TEMP1+14
         LA        R4,4(,R4)
         B         SUPCLEAN
CONVDP   MVI       NPLACE+1,X'10'
         D         R2,TR1                                          V1L4
         CVD       R2,TEMP
         UNPK      TEMP1+10(9),TEMP+3(5)
         OI        TEMP1+18,X'F0'
         MVI       TEMP1+19,C'0'
         CVD       R3,TEMP             CONVERT HIGH ORDER PART
         UNPK      TEMP1(10),TEMP+2(6)
         OI        TEMP1+9,X'F0'       REMOVE SIGN
         LA        R1,TEMP1+3
         TRT       TEMP1(3),INTTR
         LR        R5,R1
         BR        R8
         EJECT
**********     SECTION  4     **********
PRIROUT  TM        ENDSW,X'01'
         BO        ENDROUT
         CLI       CODEBYTE+1,X'02'
         BE        PRIROUT1
         CLI       CODEBYTE+1,X'03'
         BNE       FVERRFM2            TYPE ERROR
PRIROUT1 BAL       R8,LENCHECK
         BAL       R8,FVUNCHK
         LH        R0,0(0,R1)
         TM        CODEBYTE+1,X'01'
         BO        *+8
         L         R0,0(0,R1)
         CVD       R0,TEMP1
         UNPK      TEMP2(10),TEMP1+2(6)
         OI        TEMP2+9,X'F0'
         LA        R1,TEMP2+9
         TRT       TEMP2(9),INTTR
         LA        R5,TEMP2+9
         SR        R5,R1
         LH        R4,LFIELD
         SR        R4,R5
         S         R4,KF2
         BC        10,IAROUND
         C         R4,KFM1
         BNE       OVERER
         TM        TEMP1+7,X'01'
         BO        OVERER
IAROUND  A         R4,BPOINT
         TM        TEMP1+7,X'01'
         BZ        *+8
         MVI       0(R4),C'-'          INSERT MINUS SIGN
         EX        R5,INTEXEC1
         LA        R4,2(R4,R5)
         B         SUPCLEAN
INTEXEC1 MVC       1(1,R4),0(R1)
PRAROUT  TM        ENDSW,X'01'
         BO        ENDROUT
PRAFREE  CLI       CODEBYTE+1,9
         BNE       PRAROUT2
         MVC       TEMP3+1(1),FVVARLEN+3
         CLI       ROUTCODE+1,X'01'
         BNE       PRAROUT3
         MVC       LFIELD(2),TEMP3
         B         PRAROUT3
PRAROUT2 LH        R3,CODEBYTE
         IC        R3,LENTABLE(R3)
         STH       R3,TEMP3
PRAROUT3 BAL       R8,LENCHECK
         BAL       R8,FVUNCHK
         LH        R3,TEMP3
         LR        R5,R1
         L         R4,BPOINT
         LH        R6,LFIELD
         CR        R3,R6
         BL        PRAROUT1
         S         R6,KF1
         BM        SUPCLEAN
         EX        R6,SPEXEC2          MVC 0(1,R4),0(R5)
         LA        R4,1(R4,R6)
         B         SUPCLEAN
PRAROUT1 SR        R6,R3
         AR        R4,R6
         BCTR      R3,0
         EX        R3,SPEXEC2          MVC 0(1,R4),0(R5)
         LA        R4,1(R4,R3)
         B         SUPCLEAN
         EJECT
PRLROUT  TM        ENDSW,X'01'
         BO        ENDROUT
PRLROUT1 BAL       R8,LENCHECK
         BAL       R8,FVUNCHK
         LH        R4,LFIELD
         S         R4,KF1
         BM        SUPCLEAN
         A         R4,BPOINT
         MVI       0(R4),C'J'   INITIALIZE OUTPUT TO FUNNY TYPE
         CLI       0(R1),X'FF'         IS VARIABLE TRUE ?
         BNE       *+8            SKIP NEXT INSTRUCTION IF NOT
         MVI       0(R4),C'T'          SET OUTPUT TO TRUE
         CLI       0(R1),X'00'         IS VARIABLE FALSE ?
         BNE       *+8            SKIP NEXT INSTRUCTION IF NOT
         MVI       0(R4),C'F'          SET OUTPUT TO FALSE
         CLI       0(R1),X'&UNDEF'     IS VARIABLE UNDEFINED?      V1L2
         BNE       *+8            SKIP NEXT INSTRUCTION IF NOT
         MVI       0(R4),C'U'          SET OUTPUT TO UNDEFINED
         LA        R4,1(0,R4)
         B         SUPCLEAN
         EJECT
PRGROUT  TM        ENDSW,X'01'
         BO        ENDROUT
         CLI       CODEBYTE+1,X'03'
         BH        PRGROUTA
         TM        CODEBYTE+1,X'02'
         BO        PRIROUT1
         B         PRLROUT1
PRGROUTA MVI       PRINMSK,X'01'       MARK AS G FORMAT
         B         PRFROUT1
PRGROUT1 S         R6,KF4
         BM        OVERER
         LCR       R2,R3
         BP        PRGROUT3            BRANCH IF NBDOT LT 0
         AH        R2,NDEC
         BM        PRGROUT3
         MVC       NDEC1(2),NDEC
         STH       R2,NDEC
         MVI       PRINMSK,X'02'       MARK AS F FORMAT
         BAL       R8,COMPRSET
         MVC       NDEC(2),NDEC1
PRGROUT2 LA        R4,4(0,R4)
         B         SUPCLEAN
PRGROUT3 TM        CODEBYTE+1,X'01'
         BZ        PREROUT1+4
         B         PRDROUT1+4
PRZROUT  TM        ENDSW,X'01'
         BO        ENDROUT
         BAL       R8,LENCHECK
         BAL       R8,FVUNCHK
         LH        R5,CODEBYTE
         IC        R5,LENTABLE(R5)
         CLI       CODEBYTE+1,9
         BNE       PRZROUT1
         L         R5,FVVARLEN
PRZROUT1 L         R4,BPOINT
         LA        R6,0(R5,R5)         DOUBLE VARIABLE LENGTH
         CH        R6,LFIELD
         BL        PRZROUT2
         LH        R6,LFIELD
         B         PRZROUT3
PRZROUT2 AH        R4,LFIELD           GET ADDRESS OF END OF FIELD
         SR        R4,R6               GET START OF OUTPUT AREA
PRZROUT3 SRDL      R6,3                GET NUMBER OF MULTIPLES OF 8
         SRL       R7,29               GET REMAINDER IN R7
         LA        R6,1(0,R6)          INCREMENT R6 BY ONE
         LCR       R3,R6
         SLA       R3,2
         A         R3,STR1             ADD ADDRESS OF DATA
         AR        R3,R5               ADD VARIABLE LENGTH
         S         R7,KF1              DECREMENT ONE FOR EX
         BM        PRZROUT5            IF MINUS,BYPASS FIRST ROUND
PRZROUT4 UNPK      TEMP(9),0(5,R3)
         TR        TEMP(8),TRTBLE-240
         LA        R5,TEMP+7
         SR        R5,R7
         EX        R7,SPEXEC2          MVC 0(1,R4),0(R5)
         LA        R4,1(R7,R4)
PRZROUT5 LA        R3,4(0,R3)
         LA        R7,7
         BCT       R6,PRZROUT4
         B         SUPCLEAN
RDHROUT  EQU       *
PRHROUT  LH        R2,RECLEN
         LA        R2,1(0,R2)
         BAL       R8,LENCHK1
         LA        R5,4(0,R6)
         TM        2(R6),X'01'         IS IT OBJECT TIME H FORMAT ?
         BZ        *+8                 SKIP NEXT INSTRUCTION IF SO
         LA        R5,4(0,R5)          SKIP OVER EXTRA WORD        V1L2
         LH        R2,LFIELD
         L         R3,BPOINT
         LH        R4,ROUTCODE
         IC        R4,HFMTTBLE(R4)
         EX        R2,HFMTEXEC(R4)
         LA        R3,1(R3,R2)
         ST        R3,BPOINT
         TM        2(R6),X'01'         IS IT OBJECT TIME H FORMAT ?
         BZ        *+8                 SKIP NEXT INSTRUCTION IF NO
         LA        R2,4(0,R2)          INCREMENT BY LENGTH OF PNTR
         LA        R2,4(0,R2)
         N         R2,=X'FFFFFFFC'
         A         R2,FORMPTR
         ST        R2,FORMPTR
         MVC       LFIELD(2),KF0
         B         OUTBCD1
HFMTEXEC EQU       *
PRHEXEC1 MVC       0(1,R3),0(R5)
RDHEXEC1 MVC       0(1,R5),0(R3)
RDFROUT  EQU       *
RDEROUT  EQU       *
RDDROUT  TM        ENDSW,X'01'                                     V1L2
         BO        ENDROUT+4                                       V1L2
         TM        CODEBYTE+1,REAL4    ALLOW ANY REAL OR COMPLEX   V1L2
         BNO       FVERRFM2                                        V1L2
         BAL       R8,LENCHECK
RDEROUT1 EQU       *
RDDROUT1 EQU       *
*********** GO TO DOYLE****16 CHAR IN TEMP,EXPONENT IN EXP,
************ AND SIGN IN NEGSW
         LA        R7,8
RDDROUT4 EQU       *
         BAL       R14,INFRIO
         TM        18(R4),X'80'
         BO        *+8
         BAL       R8,IMPLDOT
         BAL       R8,INDPCON
         L         R3,STR1
         STD       R0,TEMP
         TM        CODEBYTE+1,X'01'
         BZ        RDDROUT3
         STD       F0,ZR3(RO)
         B         INCLEAN
RDDROUT3 STE       F0,ZR3(RO)
         B         INCLEAN
RDEROUT2 EQU       *
RDDROUT2 LA        R7,12
         B         RDDROUT4
IMPLDOT  LH        R5,EXP
         SH        R5,NDEC
         STH       R5,EXP
         BR        R8
         SPACE     2
         EJECT
RDIROUT  TM        ENDSW,X'01'
         BO        ENDROUT+4
         CLI       CODEBYTE+1,INT4                                 V1L5
         BE        RDIR1                                           V1L5
         CLI       CODEBYTE+1,INT2                                 V1L5
         BNE       FVERRFM2                                        V1L5
RDIR1    DS        0H                                              V1L5
         BAL       R8,LENCHECK
RDIROUT1 LA        R7,4
         BAL       R14,INFRIO
         OI        TEMP+15,X'F0'
         NI        TEMP+15,X'CF'
         PACK      TEMP2(8),TEMP+1(15)
         MVI       TEMP2,X'00'
         TM        NEGSW,X'80'
         BZ        RDIROUT2
         OI        TEMP2+7,X'01'
         CLC       TEMP2(8),=X'000002147483648D'
         BNH       RDIROUT3
         B         FVERRFM5            INTEGER OVERFLOW ERROR
RDIROUT2 CLC       TEMP2(8),=X'000002147483647C'
         BH        FVERRFM5            INTEGER OVERFLOW ERROR
RDIROUT3 CVB       R4,TEMP2
         L         R3,STR1
         TM        CODEBYTE+1,INT2-INT4   INTEGER*4 OR INTEGER*2   V1L2
         BO        INTSTAR2                                        V1L2
         ST        R4,TEMP             STORE INTEGER*4             V1L2
         ST        R4,ZR3                                          V1L2
         B         INCLEAN                                         V1L2
INTSTAR2 STH       R4,TEMP                                         V1L2
         STH       R4,ZR3                                          V1L2
         B         INCLEAN                                         V1L2
         EJECT
**********     SECTION  7     **********
********* THIS ROUTINE READS ALPHANUMERIC DATA**************
*  VARLEN=VARIABLE LENGTH,LFIELD=FIELD LENGTH
* IF VARLEN GT LFIELD,INSERT LFIELD CHAR AND (VARLEN-LFIELD) BLANKS
* IF VARLEN LE LFIELD INSERT FIRST VARLEN CHAR
RDAROUT  TM        ENDSW,X'01'
         BO        ENDROUT+4
         CLI       CODEBYTE+1,9
         BNE       RDAROUT2
         MVC       TEMP3+1(1),FVVARLEN+3
         B         RDAROUT3
RDAROUT2 LH        R3,CODEBYTE
         IC        R3,LENTABLE(R3)
         STH       R3,TEMP3
RDAROUT3 BAL       R8,LENCHECK
         LH        R3,TEMP3
         L         R1,STR1
         LR        R4,R1
         L         R5,BPOINT
         LH        R6,LFIELD
         CR        R3,R6
         BH        RDAROUT1            VARLEN GT LFIELD
         AR        R5,R6
         SR        R5,R3
         BCTR      R3,0
         EX        R3,SPEXEC2          MVC 0(1,R4),0(R5)
         B         INCLEAN
RDAROUT1 BCTR      R6,0
         EX        R6,SPEXEC2          MVC 0(1,R4),0(R5)
         LA        R4,1(R4,R6)
         SR        R3,R6
         S         R3,KF2
         BM        INCLEAN
         MVI       0(R4),C' '
         SH        R3,ONE
         BM        INCLEAN
         EX        R3,SPEXEC3          MVC 1(1,R4),0(R4)
         B         INCLEAN
RDAFREEA LH        R3,CODEBYTE                                     V1L4
         IC        R3,LENTABLE(R3)                                 V1L4
         STC       R3,TEMP3+1                                      V1L4
         L         R1,BPOINT                                       V1L4
         B         RDAFREE8                                        V1L4
RDAFREE1 MVI       TEMP3+1,1
         B         RDAFREE2
RDAFREEN MVC       TEMP3+1(1),FVVARLEN+3
RDAFREE2 L         R1,BPOINT           GET BUFFER POINTER
         BAL       R8,FVFRSCAN         ADVANCE R1 TO NEXT NON-BLANK
         CLI       0(R1),C''''         FIRST NON-BLANK IS QUOTE ?  V1L4
         BE        RDAFREE8            WELL DONE                   V1L4
         CLI       0(R1),C'@'          LAST CHANCE                 V1L4
         BE        RDAFREE8                                        V1L5
         TM        NLSWOP,X'02'                                    V1L5
         BO        FVERRFM0                                        V1L5
         B         FFM0TEST                                        V1L5
RDAFREE8 DS        0H                                              V1L5
         NI        NLSWOP,X'FD'                                    V1L5
         L         R3,STR1                                         V1L5
         LH        R2,TEMP3
         LA        R1,1(0,R1)
RDAFREE3 CLI       0(R1),C''''         CLOSING QUOTE ?             V1L4
         BE        RDAFREE5
         CLI       0(R1),C'@'          IN BCD ?                    V1L4
         BNE       RDAFREE4                                        V1L4
RDAFREE5 CLI       1(R1),C''''         DOUBLE QUOTE ?              V1L4
         BNE       RDAFREE6                                        V1L4
         CLI       1(R1),C'@'          NEXT YEAR - THE ASCII QUOTE V1L4
         BNE       RDAFREE6                                        V1L4
         LA        R1,1(,R1)                                       V1L4
RDAFREE4 IC        R0,0(0,R1)
         STC       R0,0(R3)
         LA        R3,1(0,R3)
         BXH       R1,R4,FVERRUNE      BUFFER OVERFLOW ERROR
         BCT       R2,RDAFREE3
         LA        R3,TEMP
         LA        R2,8
         B         RDAFREE3
RDAFREE6 MVI       0(R3),C' '
         S         R2,KF2
         BM        RDAFREE7
         EX        R2,RDAEXEC1         MVC 1(1,R3),0(R3)
RDAFREE7 LA        R1,1(0,R1)          INCREMENT POINTER BY 1      V1L4
         ST        R1,BPOINT
         B         INCLEAN1
RDAEXEC1 MVC       1(1,R3),0(R3)
RDLROUT  TM        ENDSW,X'01'
         BO        ENDROUT+4
         BAL       R8,LENCHECK
RDLROUT1 LA        R7,0
         BAL       R14,INFRIO
         L         R1,STR1
         MVC       0(1,R1),TEMP
         B         INCLEAN
RDGROUT  TM        ENDSW,X'01'
         BO        ENDROUT+4
         LH        R3,CODEBYTE
         LA        R3,0(R3,R3)
         LH        R4,FVGTAB(R3)
         B         BASEADDR(R4)
FVGTAB   DC        AL2(RDLROUT1-BASEADDR)   L*4
         DC        AL2(RDLROUT1-BASEADDR)   L*1
         DC        AL2(RDIROUT1-BASEADDR)   I*4
         DC        AL2(RDIROUT1-BASEADDR)   I*2
         DC        AL2(RDEROUT1-BASEADDR)   R*4
         DC        AL2(RDDROUT1-BASEADDR)   R*8
         DC        AL2(RDEROUT1-BASEADDR)   C*8
         DC        AL2(RDDROUT1-BASEADDR)   C*16
         DC        AL2(RDAROUT-BASEADDR)    CHAR*1
         DC        AL2(RDAROUT-BASEADDR)    CHAR*N
         SPACE     2
RDZROUT  TM        ENDSW,X'01'
         BO        ENDROUT+4
         BAL       R8,LENCHECK
         LA        R7,16
         BAL       R14,INFRIO
RDZUNEX1 L         R1,STR1
         LR        R4,R1
         SR        R2,R2
         CLI       CODEBYTE+1,9        CHARACTER*N ?               V1L3
         BNE       RDZST2              NO                          V1L3
         SR        R3,R3                                           V1L3
         LH        R2,FVVARLEN+2       LENGTH                      V1L3
         LH        R3,LFIELD           FIELN LENGTH                V1L3
         SRL       R3,1                DIV BY 2                    V1L3
         CR        R2,R3                                           V1L3
         BH        RDZFIELD                                        V1L3
         LR        R5,R2                                           V1L3
         B         *+6                                             V1L3
RDZFIELD LR        R5,R3                                           V1L3
         C         R5,KF16             GREATER THAN 16             V1L3
         BNH       RDZST1              NO                          V1L3
         IC        R5,KF16+3           SET AT 16                   V1L3
RDZST1   STC       R5,LENTABLE+9       STORE LENGTH                V1L3
RDZST2   EQU       *                                               V1L3
         LH        R2,CODEBYTE
         IC        R2,LENTABLE(R2)
         LA        R5,TEMP+16
         SR        R5,R2
         BCTR      R2,0
         EX        R2,SPEXEC2          MVC 0(1,R4),0(R5)
         B         INCLEAN
RDZUNEX  ST        R5,FRIOROUT
         ST        R1,BPOINT                                       V1L5
         L         R4,=V(FRIOTEMP)
         MVC       TEMP(16),0(R4)                                  V1L3
         B         RDZUNEX1
         EJECT
**********     SECTION  8     **********
*    FM5-VALUE READ INTO INTEGER VARIABLE IS TOO LARGE
FVERRFM5 LM        R5,R14,XIOSAVE
         $ERROR    (TRAZ,FM,5,,,BUF)                               V1L5
*    KO0-SOURCE ERROR IN FORMAT STATEMENT
BOOTOFF  LM        R5,R14,XIOSAVE
         B         XBOOT
*    FM2-VARIABLE TYPE AND FORMAT SPECIFICATION DO NOT MATCH
FVERRFM2 LM        R5,R14,XIOSAVE
         $ERROR    (TRAZ,FM,2)                                     V1L5
*    FM0-INVALID INPUT DATA
FVERRFM0 LM        R5,R14,XIOSAVE
         $ERROR    (TRAZ,FM,0,,,BUF)                               V1L5
FERRNL8  LM        R5,R14,XIOSAVE                                  V1L5
         $ERROR    (TRAZ,NL,8,,,BUF)                               V1L5
*    FM6-REAL CONSTANT OUT OF MACHINE RANGE
EXPOFLO  EQU       *
EXPUFLO  EQU       *
         LM        R5,R14,XIOSAVE
         $ERROR    (TRAZ,FM,6,,,BUF)                               V1L5
*    UNE-RECORD OVERFLOW
FVERRUNE LM        R5,R14,XIOSAVE      RECORD OVERFLOW ERROR
         $ERROR    (TRAZ,UN,E,,,BUF)                               V1L5
COMPRSET EQU       *
ROUND    LR        R2,R3
         AH        R2,NDEC
         BM        ROUND5
         CH        R2,NPLACE
         BH        ROUND5
ROUND1   LA        R2,0(R5,R2)
         CLI       0(R2),C'5'
         BL        ROUND5
         BCTR      R2,0
ROUND2   CLI       0(R2),C'9'
         BL        ROUND3
         MVI       0(R2),C'0'
         BCT       R2,ROUND2
ROUND3   TR        0(1,R2),ADTBLE-X'F0'
         CR        R2,R5
         BNL       ROUND5
         LR        R5,R2
         TM        PRINMSK,X'02'
         BZ        ROUND5
ROUND4   A         R3,KF1
ROUND5   LTR       R2,R3
         BP        *+8
         LA        R3,1
         LH        R4,NDEC
         LCR       R4,R4
         BP        OVERER
         AR        R4,R6
         SH        R4,ONE
         TM        NEGSW,X'80'         IS NUMBER NEGATIVE
         BZ        *+8                 NO
         SH        R4,ONE              YES
         SR        R4,R3
         BM        OVERER              NUMBER TOO LARGE
         A         R4,BPOINT           R4 POINTS TO BUFFER
         TM        NEGSW,X'80'         IS NUMBER NEGATIVE
         BZ        *+12                NO
         MVI       0(R4),C'-'          YES-INSERT MINUS SIGN
         LA        R4,1(R4)
         LH        R4,NPLACE
         BCTR      R4,0
         STH       R4,NPLACE1
         L         R4,BPOINT
         AR        R4,R6
         SH        R4,NDEC
         SR        R4,R3
         LH        R1,NDEC
         AR        R1,R3
         MVI       0(R4),C'0'
         S         R1,KF2
         BM        SPROUT5
         EX        R1,SPEXEC3          MVC 1(1,R4),0(R4)
SPROUT5  LR        R7,R4
         AR        R4,R3
         SR        R4,R2
         SR        R1,R3
         AR        R1,R2
         A         R1,KF1
         BM        SPROUT7
         CH        R1,NPLACE1
         BNH       SPROUT6
         LH        R1,NPLACE1
SPROUT6  EX        R1,SPEXEC2          MVC 0(1,R4),0(R5)
SPROUT7  BCTR      R7,0
         BCTR      R3,0
         EX        R3,SPEXEC5          MVC 0(1,R7),1(R7)
         LA        R7,1(R3,R7)
         MVI       0(R7),C'.'
         L         R4,BPOINT
         AR        R4,R6
         BR        R8
NPLACE1  DS        1H
SPEXEC5  MVC       0(1,R7),1(R7)
         EJECT
**********     SECTION 10     **********
SPCON    L         R7,TEMP
         MVC       NEGSW(1),TEMP
         SR        R4,R4
         N         R7,SPMASK1          MASK OFF FRACTION
         BZ        SPNZERO             BRANCH IF NUMBER IS ZERO
SPLSIG   IC        R5,TEMP             GET LAST 3 BITS OF EXP
         N         R5,SPMASK2
         SLA       R5,1                ADDRESS HALF WORDS
         AH        R4,TR1A(R5)         ADD EXP TO R4
         SLA       R5,1                ADDRESS FULL WORDS
         M         R6,TR1(R5)          MULTIPLY BY CONSTANT
         SRDA      R6,24               PUT RESULT IN R7
         C         R7,NCON             IS NORMALIZATION NECESSARY
         BH        SPMSIG              NO
         MH        R7,TEN              YES
         SH        R4,ONE              FIX EXP
SPMSIG   IC        R5,TEMP
         N         R5,SPMASK3          GET FIRST 4 BITS OF EXP
         CL        R5,SPMASK4          IS EXP ZERO
         BE        ENDSPCON            YES
         SRA       R5,1                ADDRESS FULL WORDS
         M         R6,TR2(R5)          MULTIPLY BY CONSTANT
         SRA       R5,1                ADDRESS HALF WORDS
         AH        R4,TR2A(R5)         ADD EXP TO R4
         SRDA      R6,31
         C         R7,NCON             IS NORMALIZATION NECESSARY
         BH        ENDSPCON            NO
         MH        R7,TEN              YES
         SH        R4,ONE              FIX EXP
ENDSPCON STH       R4,EXP
         MVI       NPLACE+1,X'07'
         BR        R8
SPNZERO  MVC       EXP(2),KHM9
         BR        R8
TR1      DC        F'1000000000'
         DC        F'1600000000'
         DC        F'256000000'
         DC        F'409600000'
         DC        F'655360000'
         DC        F'1048576000'
         DC        F'1677721600'
         DC        F'268435456'
TR1A     DC        H'-9'
         DC        H'-8'
         DC        H'-6'
         DC        H'-5'
         DC        H'-4'
         DC        H'-3'
         DC        H'-2'
         DC        H'0'
TR2      DC        F'1854603075'
         DC        F'796545956'
         DC        F'342113883'
         DC        F'1469367939'
         DC        F'631088724'
         DC        F'271050543'
         DC        F'1164153218'
         DC        F'500000000'
         DC        F'0000000000'
         DC        F'922337204'
         DC        F'396140813'
         DC        F'1701411835'
         DC        F'730750819'
         DC        F'313855087'
         DC        F'1347997333'
         DC        F'578960446'
TR2A     DC        H'-77'
         DC        H'-67'
         DC        H'-57'
         DC        H'-48'
         DC        H'-38'
         DC        H'-28'
         DC        H'-19'
KHM9     DC        H'-9'
         DC        H'00'
         DC        H'10'
         DC        H'20'
         DC        H'29'
         DC        H'39'
         DC        H'49'
         DC        H'58'
         DC        H'68'
         EJECT
**********     SECTION 11     **********
DPCON    SR        R4,R4
         STE       R0,TEMP                                         V1L3
         MVC       NEGSW(1),TEMP                                   V1L3
         LTDR      R0,R0                                           V1L3
         BZ        DPCON1                                          V1L3
         IC        R5,TEMP                                         V1L3
         LR        R2,R5                                           V1L3
         N         R5,SPMASK3                                      V1L3
         MVI       TEMP,X'40'
         N         R2,SPMASK2
         LE        R0,TEMP
         DD        R0,DTR1(R5)
         SRA       R5,2
         AH        R4,DTR1A(R5)
         CE        R0,DPNCON
         BL        DPSLA
         LA        R2,1(,R2)
         STE       R0,TEMP
         MVI       TEMP,X'40'
         LE        R0,TEMP
DPSLA    SLA       R2,1
         AH        R4,DTR2A(R2)
         SLA       R2,2
         DD        R0,DTR2(R2)
         STD       R0,TEMP
         TM        TEMP,X'01'
         MVI       TEMP,X'00'
         LM        R2,R3,TEMP
         BZ        *+8
         SLDA      R2,4
         STH       R4,EXP
         BR        R8
DPCON1   MVC       EXP(2),KHM16
         SR        R2,R2                                           V1L4
         SR        R3,R3                                           V1L4
         BR        R8
         DS        0D
DTR1     DC        X'401DA48CE468E7C7'
         DC        X'404504787C5F878A'
         DC        X'40A0B19D2AB70E6E'
         DC        X'40256A18DD89E626'
         DC        X'40571CBEC554B60D'
         DC        X'40CAD2F7F5359A3B'
         DC        X'402F394219248446'
         DC        X'406DF37F675EF6EA'
         DC        X'40FFFFFFFFFFFFFF'
         DC        X'403B9AC9FFFFFFFE'
         DC        X'408AC7230489E800'
         DC        X'40204FCE5E3E2502'
         DC        X'404B3B4CA85A86C4'
         DC        X'40AF298D050E4395'
         DC        X'4028C87CB5C89A25'
         DC        X'405EF4A74721E864'
DTR1A    DC        H'-78'
         DC        H'-68'
         DC        H'-58'
         DC        H'-49'
         DC        H'-39'
         DC        H'-29'
         DC        H'-20'
         DC        H'-10'
         DC        H'+00'
         DC        H'+09'
         DC        H'+19'
         DC        H'+28'
         DC        H'+38'
         DC        H'+48'
         DC        H'+57'
         DC        H'+67'
DTR2     DC        X'40B877AA3236A4B4'
         DC        X'40734ACA5F6226F0'
         DC        X'40480EBE7B9D5856'
         DC        X'402D09370D425736'
         DC        X'401C25C268497681'
         DC        X'40AFEBFF0BCB24AA'
         DC        X'406DF37F675EF6EA'
         DC        X'4044B82FA09B5A52'
         DC        X'402AF31DC4611873'
DTR2A    DC        H'-17'
KHM16    DC        H'-16'
         DC        H'-15'
         DC        H'-14'
         DC        H'-13'
         DC        H'-11'
         DC        H'-10'
         DC        H'-09'
         DC        H'-08'
         EJECT
**********     SECTION 12     **********
INDPCON  MVC       TEMP2(4),KF0
         OI        TEMP,X'F0'
         MVZ       TEMP+1(15),TEMP
         CLC       TEMP(16),INDPNCON
         BL        INDPCON2
         NI        TEMP+15,X'CF'
         PACK      TEMP2+3(5),TEMP+8(8)
         CVB       R4,TEMP2
         NI        TEMP+7,X'CF'
         PACK      TEMP2+3(5),TEMP(8)
         LH        R6,EXP
INDPCON1 CVB       R3,TEMP2
         M         R2,=F'100000000'
         ALR       R3,R4
         BC        14,*+8
         AH        R2,ONE
         STM       R2,R3,TEMP
         MVI       TEMP,X'4E'
         OC        TEMP(1),NEGSW
         LD        R0,TEMP
         CH        R6,=H'60'
         BNL       EXPOFLO
         CH        R6,=H'-94'
         BL        EXPUFLO
         CH        R6,=H'-64'
         BNL       INDPCON3
         DD        R0,INDTR2+32
         AH        R6,=H'64'
INDPCON3 LA        R5,128(0,R6)
         N         R6,KM2831
         XR        R5,R6
         SLA       R6,3
         DD        R0,INDTR1(R6)
         SRA       R5,1
         DD        R0,INDTR2(R5)
         TM        CODEBYTE+1,X'01'
         BCR       7,R8                QUIT FOR DOUBLE PRECISION
         LTER      F0,F0
         BCR       8,R8
         STE       F0,TEMP
         MVC       SPROUND(1),TEMP
         AD        F0,SPROUND
         BR        R8
INDPCON2 MVI       TEMP+16,X'C0'
         PACK      TEMP2+3(5),TEMP+9(8)
         MVI       TEMP2,X'00'
         CVB       R4,TEMP2
         NI        TEMP+8,X'CF'
         PACK      TEMP2+3(5),TEMP(9)
         LH        R6,EXP
         SH        R6,ONE
         B         INDPCON1
FORMCONE DS        0H                                              V1L5
INDTR1   DS        0D
         DC        X'40FFFFFFFFFFFFFF' D+00
         DC        X'4019999999999999' D-01
         DC        X'3F28F5C28F5C28F5' D-02
         DC        X'3E4189374BC6A7EF' D-03
         DC        X'3D68DB8BAC710CB2' D-04
         DC        X'3CA7C5AC471B4784' D-05
         DC        X'3C10C6F7A0B5ED8D' D-06
         DC        X'3B1AD7F29ABCAF48' D-07
         DC        X'3A2AF31DC4611873' D-08
         DC        X'3944B82FA09B5A52' D-09
         DC        X'386DF37F675EF6EA' D-10
         DC        X'37AFEBFF0BCB24AA' D-11
         DC        X'37119799812DEA11' D-12
         DC        X'361C25C268497681' D-13
         DC        X'352D09370D425736' D-14
         DC        X'34480EBE7B9D5856' D-15
INDTR2   EQU       *-32
         DC        X'76184F03E93FF9F4' D+64
         DC        X'68AF298D050E4395' D+48
         DC        X'5B4EE2D6D415B85A' D+32
         DC        X'4E2386F26FC0FFFF' D+16
         DC        X'40FFFFFFFFFFFFFF' D+00
         DC        X'33734ACA5F6226F0' D-16
         DC        X'2633EC47AB514E65' D-32
         DC        X'1917624F8A762FD8' D-48
         DC        X'0BA87FEA27A539E9' D-64
         EJECT
         LTORG
ABUFFER  EQU       XBUFFER
         DS        0D
FORMCEND EQU       *-1
         END
