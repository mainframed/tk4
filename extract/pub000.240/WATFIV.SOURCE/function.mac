FUNC     TITLE     'FUNCTION     IN CORE FUNCTIONS'
         GBLC      &STATUSF,&STATUSD,&STATUSP                      V1L5
         COPY      OPTIONS
         $PUNCH    FUNCTION                                        DVS2
&FUNCMOD SETC      'CORE'
&DECK    SETC      'FUNCTION'
         PRINT     OFF                                             V1L5
         COPY      EXTRN
         COPY      CDEFN
STARTA   DSECT
         COPY      STARTA                                          V1L5
         ERRTABLE
         PRINT     ON
         PRINT     ON,&LIST                                        V1L4
         EJECT
***********************************************************************
*        THIS DECK CONTAINS THE CORE-RESIDENT RUN-TIME LIBRARY        *
***********************************************************************
         SPACE     1
FUNCTION CSECT
         SPACE 1
         AIF       ('&WHOSIT' EQ 'WATFIV').PLOT1                   V1L4
         ENTRY     PTDCB                                           UOW
****************************************************************** UOW
*           RESIDENT DCB FOR THE PLOTTER ROUTINES - WATFIV         UOW
****************************************************************** UOW
PTDCB    DCB       DSORG=PS,MACRF=W,DDNAME=PLOTTAPE,RECFM=U,NCP=2,     X
               BUFNO=1,BUFCB=4                                     UOW
.PLOT1   ANOP                                                      V1L4
         ENTRY     XC@LD1,XC@LD2,XC@LDC                            V1L4
         ENTRY     XS@VE1,XS@VE2                                   V1L4
         SPACE     1
*****  THE NEXT ROUTINES ARE USED BY SINGLE-PRECISION ROUTINES TO
*        PAD ARGUMENTS AND CALL CORRESPONDING DOUBLE-PRECISION ROUTINE
         SPACE     1
****     XC@LD1 IS FOR REAL ROUTINES WITH 1 ARGUMENT
         USING     *,R4
XC@LD1   DS        0H                                              V1L5
         MVC       XARGCNT,XARG1          INDICATE ARG#1 FOR SR4   V1L5
         CHCKA     0(R1),REAL4            ENSURE REAL*4 ARG        V1L5
         L         R3,0(,R1)           GET A(ARGUMENT)
         CHCKL     4(R1),REAL4
         CHCKDEF   REAL4,0(R3)
         LE        F0,0(,R3)       MOVE ARGUMENT TO A DOUBLE WORD
         STE       F0,XNNAME+8
         LA        R1,XCALLARG+4       POINT R1 TO NEW ARGLIST
         L         R15,8(,R15)         GET A(DOUBLE PRECISION ROUTINE)
         BR        R15
         SPACE     1
****     XC@LD2 IS FOR REAL ROUTINES WITH 2 ARGUMENTS
         USING     *,R4
XC@LD2   DS        0H                                              V1L5
         MVC       XARGCNT,XARG1          INDICATE ARG#1 FOR SR4   V1L5
         CHCKA     0(R1),REAL4            ENSURE REAL*4 ARG        V1L5
         L         R3,0(,R1)           GET A(ARGUMENT 1)
         CHCKDEF   REAL4,0(R3)
         LE        F0,0(,R3)         MOVE ARGUMENT TO A DOUBLE WORD
         STE       F0,XNNAME
         MVC       XARGCNT,XARG2          INDICATE ARG#2 FOR SR4   V1L5
         CHCKA2    4(R1),REAL4
         L         R3,4(,R1)           GET A(ARGUMENT 2)
         CHCKDEF   REAL4,0(R3)
         LE        F0,0(,R3)         MOVE ARGUMENT TO A DOUBLE WORD
         STE       F0,XNNAME+8
         CHCKL     8(R1),REAL4
         L         R15,8(,R15)         GET A(DOUBLE PRECISION ROUTINE)
         LA        R1,XCALLARG         POINT R1 TO NEW ARGLIST
         BR        R15
         SPACE     1
****     XC@LDC IS FOR ALL COMPLEX ROUTINES
         USING     *,R4
XC@LDC   DS        0H                                              V1L5
         MVC       XARGCNT,XARG1          INDICATE ARG#1 FOR SR4   V1L5
         CHCKA     0(R1),COMPL8            ENSURE COMPLEX*8 ARG    V1L5
         L         R3,0(,R1)           GET A(ARGUMENT)
         CHCKL     4(R1),COMPL8
         CHCKDEF   COMPL8,0(R3)
         LE        F0,ZR3            MOVE ARGUMENT TO A DOUBLE WORD
         STE       F0,XNNAME
         LE        F0,ZR3+4
         STE       F0,XNNAME+8
         L         R15,8(,R15)         GET A(DOUBLE PRECISION ROUTINE)
         CNOP      2,4
         BALR      R1,R15
         ARG       XNNAME,COMPL16                                  V1L4
         LARG      XNNAME,COMPL16                                  V1L4
         $FREE     R4                                              V1L5
         SPACE     1                                               V1L4
XNNAME   DC        2D'0'               USED BY XC@LD1, ETC.        V1L4
XCALLARG ARG       XNNAME,REAL8                                    V1L4
         ARG       XNNAME+8,REAL8                                  V1L4
         LARG      XNNAME,REAL8                                    V1L4
         SPACE     5
***********************************************************************
         SPACE     1
*****  XS@VE2,XS@VE1 ARE SAVE AREAS USED BY THE RUN-TIME ROUTINES
         SPACE     1
XS@VE2   DC        19F'0'
XS@VE1   DC        19F'0'
XARG1    DC        F'1'                  CONSTANT FOR SR4 MESSAGE  V1L5
XARG2    DC        F'2'                  CONSTANT FOR SR4 MESSAGE  V1L5
         SPACE     1
***********************************************************************
         SPACE     1
****  THE NEXT CODING PREPARES A TABLE TO BE GENERATED BY THE OUTFLIST
*        MACRO. THIS TABLE DEFINES THE LOCATIONS,ETC. OF IN-CORE ENTRY
*        POINTS.
*        NEW NAMES MUST BE PLACED IN THE LIST IN ALPHABETICAL ORDER.
*        BE CAREFUL OF NAMES WHICH MIGHT BE AIF'D OUT IN ASSEMBLIES.
         SPACE     1
*        DETERMINE THE 'STATUS' OF FIOCS AND DIOCS
*        I.E. ARE THEY CORE RESIDENT OR DISK RESIDENT?
*        IF DISK THEN THEY WILL BE LOADED AT EXECTUON TIME
         STATUS    FIOCS#
&STATUSF SETC      '&STATUS'
         STATUS    DIOCS#
&STATUSD SETC      '&STATUS'
         SPACE     1
         FLIST     ABS,REAL4
         FLIST     AIMAG,REAL4
         FLIST     AINT,REAL4
         FLIST     ALGAMA,REAL4
         FLIST     ALOG,REAL4
         FLIST     ALOG10,REAL4
         FLIST     AMAX0,REAL4
         FLIST     AMAX1,REAL4
         FLIST     AMIN0,REAL4
         FLIST     AMIN1,REAL4
         FLIST     AMOD,REAL4
         FLIST     AND,REAL4
         FLIST     ARCOS,REAL4
         FLIST     ARSIN,REAL4
         FLIST     ATAN,REAL4
         FLIST     ATAN2,REAL4
         FLIST     CABS,REAL4
         FLIST     CCOS,COMPL8
         FLIST     CDABS,REAL8
         FLIST     CDCOS,COMPL16
         FLIST     CDEXP,COMPL16
         FLIST     CDLOG,COMPL16
         FLIST     CDSIN,COMPL16
         FLIST     CDSQRT,COMPL16
         FLIST     CEXP,COMPL8
         FLIST     CLOG,COMPL8
         FLIST     CMPLX,COMPL8
         FLIST     COMPL,REAL4
         FLIST     CONJG,COMPL8
         FLIST     COS,REAL4
         FLIST     COSH,REAL4
         FLIST     COTAN,REAL4
         FLIST     CSIN,COMPL8
         FLIST     CSQRT,COMPL8
         FLIST     DABS,REAL8
         FLIST     DARCOS,REAL8
         FLIST     DARSIN,REAL8
         FLIST     DATAN,REAL8
         FLIST     DATAN2,REAL8
         FLIST     DBLE,REAL8
         FLIST     DCMPLX,COMPL16
         FLIST     DCONJG,COMPL16
         FLIST     DCOS,REAL8
         FLIST     DCOSH,REAL8
         FLIST     DCOTAN,REAL8
         FLIST     DERF,REAL8
         FLIST     DERFC,REAL8
         FLIST     DEXP,REAL8
         FLIST     DFLOAT,REAL8
         FLIST     DGAMMA,REAL8
         FLIST     DIM,REAL4
         FLIST     DIOCS#,REAL4
         FLIST     DLGAMA,REAL8
         FLIST     DLOG,REAL8
         FLIST     DLOG10,REAL8
         FLIST     DMAX1,REAL8
         FLIST     DMIN1,REAL8
         FLIST     DMOD,REAL8
         FLIST     DSIGN,REAL8
         FLIST     DSIN,REAL8
         FLIST     DSINH,REAL8
         FLIST     DSQRT,REAL8
         FLIST     DTAN,REAL8
         FLIST     DTANH,REAL8
         SLIST     DVCHK
         FLIST     EOR,REAL4
         FLIST     ERF,REAL4
         FLIST     ERFC,REAL4
         AIF       ('&STATUSD' NE 'DISK').DIOC2                    V1L4
         AIF       ('&STATUSF' NE 'DISK').DIOC2                    V1L4
         FLIST     ERR#2,REAL4
.DIOC2   ANOP
         SLIST     EXIT
         FLIST     EXP,REAL4
         FLIST     FIOCS#,REAL4
         FLIST     FLOAT,REAL4
         FLIST     GAMMA,REAL4
         FLIST     HFIX,INTGER2
         FLIST     IABS,INTGER4
         AIF       ('&STATUSF' NE 'DISK').DIOC31                   V1L5
         AIF       ('&STATUSF' EQ '&STATUSD').DIOC3
.DIOC31  ANOP                                                      V1L5
         FLIST     IBCOM#,REAL4
.DIOC3   ANOP
         FLIST     IDIM,INTGER4
         FLIST     IDINT,INTGER4
         FLIST     IFIX,INTGER4
         AIF       ('&STATUSF' NE 'DISK').DIOC35                   V1L5
         AIF       ('&STATUSF' EQ '&STATUSD').IHCERR
.DIOC35  ANOP                                                      V1L5
         FLIST     IHCER@,REAL4
.IHCERR  ANOP
         FLIST     INT,INTGER4
         FLIST     ISIGN,INTGER4
         FLIST     MAX0,INTGER4
         FLIST     MAX1,INTGER4
         FLIST     MIN0,INTGER4
         FLIST     MIN1,INTGER4
         FLIST     MOD,INTGER4
         FLIST     OR,REAL4
         SLIST     OVERFL
         AIF       ('&PROFILE' EQ 'OMIT').FPROF                    V1L5
         FLIST     PROF@,REAL4                                     V1L5
.FPROF   ANOP                                                      V1L5
         AIF       ('&WHOSIT' EQ 'WATFIV').PLOT2                   V1L4
         FLIST     PTDCB,REAL4                                     UOW
.PLOT2   ANOP                                                      V1L4
         FLIST     REAL,REAL4
         AIF       ('&WHOSIT' NE 'BILL').BILL8
         SLIST     RESB99              TAPE 99
         SLIST     SETB99              TAPE 99
.BILL8   ANOP
         FLIST     SIGN,REAL4
         FLIST     SIN,REAL4
         FLIST     SINH,REAL4
         SLIST     SLITE
         SLIST     SLITET
         FLIST     SNGL,REAL4
         FLIST     SQRT,REAL4
         FLIST     STOP#,REAL4
         FLIST     TAN,REAL4
         FLIST     TANH,REAL4
         SLIST     TRAPS
         AIF       ('&STATUSF' NE 'DISK').DIOC41                   V1L5
         AIF       ('&STATUSF' EQ '&STATUSD').DIOC4
.DIOC41  ANOP                                                      V1L5
         FLIST     UNIT@,REAL4
.DIOC4   ANOP
         AIF       ('&STATS' EQ 'NO').FL2                          UOW
         FLIST     WCT@CC,REAL4
.FL2     ANOP                                                      UOW
         FLIST     XC@LDC,REAL4        THESE FIVE ENTRIES
         FLIST     XC@LD1,REAL4        ARE HERE
         FLIST     XC@LD2,REAL4        SO THAT
         FLIST     XS@VE1,REAL4        FUNCTIONS MAY BE LOADED
         FLIST     XS@VE2,REAL4        FROM WATLIB SUCCESSFULLY
         AIF       (&NDVSD).NOSAVER                                DVS1
         AIF       ('&STATUSF' NE 'DISK').NOSAVER                  DOS3
         FLIST     XS@VE3,REAL4                                    DOS3
         EXTRN     XS@VE3                                          DOS3
.NOSAVER ANOP                                                      DOS3
         SPACE     2
****  THE NEXT MACRO GENERATES A BINARY TREE USING THE NAMES OF THE
****     ENTRY POINTS DEFINED TO BE IN CORE. THIS TREE IS SEARCHED BY
****     ROUTINE MLIBR IN DECK MAIN.
         SPACE     1
         ENTRY     FDUMMY
         OUTFLIST  FBEG,FDUMMY
         SPACE     5
***********************************************************************
         STATLIST
         SPACE     2
         END
