STRPROG  TITLE     'STRUCTURED PROGRAMMING STATEMENTS'
         COPY      OPTIONS
         $PUNCH    STRPROG                                         DVS2
         PRINT     OFF
&DECK    SETC      'STRPROG'
         COPY      EXTRN
         COPY      CDEFN
STARTA   DSECT
         COPY      STARTA
COMMR    DSECT
         COPY      COMMR
         ERRTABLE
         PRINT     ON,&LIST
         SPACE     2
STRCSTAK DSECT
STLINKB  DS        H            BACK LINK
STLINKF  DS        H            FORWARD LINK
STPSLBL1 DS        H            PSEUDO LABEL PTR 1
STPSLBL2 DS        H            PSEUDO LABEL PTR 2
STISN    DS        H            STATEMENT ISN
STTYPE   DS        H            STATEMENT TYPE
         SPACE     1
DOSTACK  DSECT
DOLINKB  DS        H                   LINK BACK TO PREVIOUS ENTRY
DOLINKF  DS        H                   LINK FORWARD  0 MEANS
*                  NON-EXISTENT LINK FORWARD
DOINDX   DS        H                   INFORMATION
DOINIT   DS        H                   FOR CANCELLING
DOTEST   DS        H                   DO
DOINCR   DS        H                   PARAMETERS
DOPSEUD  DS        F                   CDONO AND ADDRESS OF PSEUDO STA
DIADDR   EQU       DOPSEUD
DOSTANO  DS        F                   STA NO IN BINARY
DOISN    DS        F                   ISN OF DO STATEMENT
         SPACE     2
         ENTRY     STTHEN,STELSE,STENDIF
         ENTRY     STWHILE,STWHDO,STENDWH
         ENTRY     STDOCASE,STCASE,STIFNONE,STENDCAS
         ENTRY     STATEND,STENDEOF
         ENTRY     STPERFM,STPARAGR,STENDPAR,STMISPAR,STUNREFP
         ENTRY     STENDOLP            (END-OF-DO) LOOP
         ENTRY     STENDSEG            END OF PROGRAM SEGMENT
         TITLE     'STRUCTURED PROGRAMMING STATEMENTS'
STRPROG  CSECT
         USING     STAK,RS
STTHEN   CENT      STSAVER             THEN STATEMENT ENTRY POINT
         ST        R0,STCCADDR         SAVE BR AROUND COND CODE PTR
         BAL       R8,STEXTSP8         ISSUE EXTENSION MSG.
         NI        CDOEND,X'FB'        RESET LOGICAL IF BIT
         OI        CDOEND,X'01'        STATEMENT CAN'T END  DO-LOOP
         BAL       R14,STGETLBL        GET A PSEUDO LABEL
         USING     NLIST,R15
         OI        NB1,REF+EXEC+ADDR   SET BITS IN SYMTAB
         $FREE     R15                                             V1L5
         BAL       R8,STAKENTR         GET A STAK ENTRY
         USING     STRCSTAK,R7
         L         R7,STACKTOP
*   FILL IN STAK ENTRY
         LH        R2,XISN             GET CURRENT ISN
         STH       R2,STISN            & SAVE IN STAK
         STH       R3,STPSLBL1         SAVE SYMTAB PTR FOR PS LABEL
         LA        R2,STTTHEN          INDICATE ENTRY CREATED BY
         STH       R2,STTYPE           THEN
         $FREE     R7                                              V1L5
*   BACKUP & REVERSE 'IF' BRANCH-AROUND CONDITION CODE
         L         R2,STCCADDR         R2 HAS PTR TO BRANCH AROUND ADDR
         BCTR      R2,0
         XI        0(R2),X'F0'         FLIP CONDITION CODE BITS
         LR        R7,R5               SAVE CURRENT OBJ. CODE POINTER
         LR        R8,R3               SAVE PS. LABEL SYMTAB POINTER
         OUTPUT    6,STTHELCD          OUTPUT CODE
         STH       R8,2(R7)            SYMTAB POINTER TO ADDRESS FIELD
*                              OF L  R3,*-*
         B         CRET                RETURN
         EJECT
STELSE   CMENT     STSAVER,STRPROG     ELSE STATEMENT ENTRY
         CLI       SCODE,PHI           EXACT KEYWORD?
         BNE       STJUNKAF            NO - UNDECODABLE
         AH        RS,SLINK            BUMP SCAN STACK
         CLI       SOPTR,TERM          END OF STATEMENT?
         BNE       STDELAF             NO - DELIMETER FOLLOWS
         USING     STRCSTAK,R7
         L         R7,STACKTOP
         LA        R2,STTTHEN
         BAL       R8,STCHKTOP         OFF FOR ERROR CHECKING
         MVI       CIFGOTSW,X'00'      TURN OFF GOTO SW, IN CASE
*                                      LAST STMT IN BLOCK A TRANSFER
         LH        R0,STPSLBL1         SAVE PS LABEL PTR FROM STACK
         ST        R0,STTEMP
         BAL       R14,STGETLBL        GET A PSEUDO LABEL
         USING     NLIST,R15
         OI        NB1,REF+EXEC+ADDR   SET BITS IN SYMTAB
         $FREE     R15                                             V1L5
*   USE THEN STACK ENTRY AGAIN FOR ELSE
         LH        R2,XISN             FILL IN ISN IN STACK
         STH       R2,STISN
         STH       R3,STPSLBL1         SAVE PS LABEL SYMTAB PTR
         LA        R2,STTELSE          INDICATE ENTRY CREATED BY
         STH       R2,STTYPE           ELSE
         $FREE     R7                                              V1L5
         LR        R8,R3               SAVE PS LABEL SYMTAB POINTER
         AIF       ('&PROFILE' EQ 'OMIT').SPROF21                  V1L5
         IF        (CCNTSW,OFF),SPROF21    COUNT FALL THRU'S ?     V1L5
         BAL       R14,CISN            OUTPUT CODE FOR COUNTING    V1L5
         IF        (CMOSWTCH,ON),SPROF21   WAS CODE OUTPUT ?       V1L5
         MVI       8(R3),X'C2'         YES, INDICATE ELSE DO       V1L5
SPROF21  DS        0H                                              V1L5
.SPROF21 ANOP                                                      V1L5
         LR        R7,R5               SAVE CURRENT OBJ CODE PTR   V1L5
         OUTPUT    6,STTHELCD          OUTPUT OBJ CODE
         STH       R8,2(R7)            SYMTAB PTR TO ADDRESS
*                                      FIELD OF L  R3,*-*
         L         R3,STTEMP           PS LABEL PTR FROM THEN
         L         R4,KM1631
         NR        R3,R4
         A         R3,CSYMBASE
*   R3 NOW POINTS TO SYMBOL TABLE ENTRY FOR THEN PS LABEL
*   DEFINE THE PSEUDO LABEL HERE
         USING     NLIST,R3
         ST        R5,NADDR            OUR OBJECT CODE ADDRESS
         $FREE     R3                                              V1L5
         B         CRET                RETURN
         EJECT
STENDIF  CMENT     STSAVER,STRPROG     ENDIF STATEMENT ENTRY
         CLI       SCODE,PHI           EXACT KEYWORD?
         BNE       STJUNKAF            NO - UNDECODABLE
         AH        RS,SLINK
         CLI       SOPTR,TERM          END OF STATEMENT?
         BNE       STDELAF             NO - DELIMETER FOLLOWS
         USING     STRCSTAK,R7
         L         R7,STACKTOP         CHECK TOP ENTRY
         LA        R2,STTTHEN+STTELSE
         BAL       R8,STCHKTOP         OFF FOR ERROR CHECKING
         MVI       CIFGOTSW,X'00'      TURN OFF GOTO SW., IN CASE
*                                      LAST STMT IN BLOCK A TRANSFER
         LH        R3,STPSLBL1         GET PS LABEL SYMTAB POINTER
         L         R4,KM1631
         NR        R3,R4
         A         R3,CSYMBASE
*   R3 NOW POINTS TO SYMBOL TABLE ENTRY FOR PSEUDO LABEL
*   DEFINE THE PSEUDO LABEL ADDRESS HERE
         USING     NLIST,R3
         ST        R5,NADDR            OUR OBJECT CODE ADDRESS
         $FREE     R3                                              V1L5
STPOPLP1 AH        R7,STLINKB          POP STACK ENTRY
         L         R3,STPSLBL1
         LTR       R3,R3
         BZ        STPOPLP1
         ST        R7,STACKTOP
         AIF       ('&PROFILE' EQ 'OMIT').SPROF23                  V1L5
         IF        (CCNTSW,OFF),SPROF23    COUNT FALL THRU'S ?     V1L5
         BAL       R14,CISN            OUTPUT CODE FOR COUNTING    V1L5
         IF        (CMOSWTCH,ON),SPROF23   WAS CODE OUTPUT ?       V1L5
         MVI       8(R3),X'C1'         YES, INDICATE END IF        V1L5
SPROF23  DS        0H                                              V1L5
.SPROF23 ANOP                                                      V1L5
         B         CRET                RETURN
         EJECT
STWHILE  CMENT     STSAVER,STRPROG     WHILE STATEMENT ENTRY
         ST        R7,12(R15)          ZAP CRET RET ADDR TO R7
         L         R9,16(R15)          SET UP SCAN STACK POINTER
         BAL       R14,STGETLBL        GET A PSEUDO LABEL
         USING     NLIST,R15
         OI        NB1,REF+EXEC+ADDR   SET BITS IN SYMTAB
         ST        R5,NADDR            ESTABLISH ADDRESS
         $FREE     R15                                             V1L5
         STH       R3,STWHPSEU         SAVE PSEUDO LABEL SYMTAB POINTER
*                                      FOR DO TO PLACE IN STACK
         B         CRET                RETURN
         EJECT
STWHDO   CMENT     STSAVER,STRPROG     DO ENTRY (WHILE-DO)
         ST        R0,STCCADDR         SAVE BR AROUND COND CODE PTR
         BAL       R8,STEXTSP8         ISSUE EXTENSION MSG.
         ST        RS,STTEMP           SAVE SCAN STACK PTR
         LA        RS,STNAME-4         POINT TO DUMMY STACK ENTRY
         BAL       R14,STGETLBL        GET A PSEUDO LABEL
         L         RS,STTEMP           RESTORE SCAN STACK PTR
         USING     NLIST,R15
         OI        NB1,REF+EXEC+ADDR   SET BITS IN SYMTAB
         $FREE     R15                                             V1L5
         BAL       R8,STAKENTR         GET A STACK ENTRY
         USING     STRCSTAK,R7
         L         R7,STACKTOP
         NI        CDOEND,X'FB'        RESET LOGICAL IF BIT
         OI        CDOEND,X'01'         STATEMENT CAN'T END DO-LOOP
*    FILL IN  STACK ENTRY
         LH        R2,XISN             GET CURRENT ISN
         STH       R2,STISN            & SAVE IN STACK
         STH       R3,STPSLBL2         ENDWHILE PSEUDO LABEL
         LR        R8,R3               SAVE PS LABEL SYMTAB PTR
         LH        R3,STWHPSEU         WHILE PSEUDO LABEL
         STH       R3,STPSLBL1
         LA        R2,STTWHILE         INDICATE ENTRY CREATED BY
         STH       R2,STTYPE           WHILE(....)DO
         $FREE     R7                                              V1L5
*    BACKUP AND REVERSE 'IF' BRANCH-AROUND CONDITION CODE
         L         R2,STCCADDR
         BCTR      R2,0                R2 NOW POINTS TO CONDITION BYTE
         XI        0(R2),X'F0'         FLIP CONDITION CODE BITS
         AIF       ('&PROFILE' EQ 'OMIT').SPROF22                  V1L5
         IF        (CCNTSW,OFF),SPROF22    COUNT FALL THRU'S ?     V1L5
         CLI       CWHPERF,X'FF'       IS THIS A WHILE-EXEC ?      V1L5
         BE        SPROF22             YES, SO DON'T PUT OUT CODE  V1L5
         L         R7,CBAR11           SAVE BRANCH AROUND POINTER  V1L5
         BAL       R14,CISN            OUTPUT CODE FOR COUNTING    V1L5
         ST        R7,CBAR11           STORE IT BACK               V1L5
         IF        (CMOSWTCH,ON),SPROF22   WAS CODE OUTPUT ?       V1L5
         MVI       8(R3),X'C3'         YES, INDICATE END WHILE     V1L5
SPROF22  DS        0H                                              V1L5
.SPROF22 ANOP                                                      V1L5
         LR        R7,R5               SAVE CURRENT OBJ CODE PTR
         OUTPUT    6,STTHELCD          OUTPUT OBJECT CODE
         STH       R8,2(R7)            SYMTAB POINTER TO ADDRESS
*                                      FIELD OF L R3,*-*
         B         CRET                RETURN
         EJECT
STENDWH  CMENT     STSAVER,STRPROG     ENDWHILE STATEMENT ENTRY
         CLI       SCODE,PHI           EXACT KEYWORD?
         BNE       STJUNKAF            NO - UNDECODABLE
         AH        RS,SLINK
         CLI       SOPTR,TERM          END OF STATEMENT?
         BNE       STDELAF             NO - DELIMETER FOLLOWS
         USING     STRCSTAK,R7
STENDWH2 L         R7,STACKTOP         ENTRY FOR COMPLETION OF WH-PERF
         CLI       CWHPERF,X'FF'       ARE WE PROCESSING A WHILE-PERFM?
         BE        STSKIP25            YES - SKIP BLOCK CHECKING
         LA        R2,STTWHILE
         BAL       R8,STCHKTOP         OFF FOR ERROR CHECKING
         MVI       CIFGOTSW,X'00'      TURN OFF GOTO SW., IN CASE
*                                      LAST STMT IN BLOCK A TRANSFER
STSKIP25 MVI       CWHPERF,X'00'       RESET WHILE-PERFM SWITCH
         LR        R8,R5               SAVE OBJ CODE POINTER
         OUTPUT    6,STTHELCD          OUTPUT OBJECT CODE
         LH        R3,STPSLBL1         WHILE PSEUDO LABEL POINTER
         STH       R3,2(R8)            SAVE IN OBJECT CODE
         LH        R3,STPSLBL2         ENDWHILE PSEUDO LABEL
         L         R4,KM1631
         NR        R3,R4
         A         R3,CSYMBASE
*   R3 NOW POINTS TO SYMTAB ENTRY FOR ENDWHILE PS LABEL
*   DEFINE THE PSEUDO LABEL ADDRESS HERE
         USING     NLIST,R3
         ST        R5,NADDR            CURRENT OBJ CODE ADDRESS
         $FREE     R3                                              V1L5
STPOPLP2 AH        R7,STLINKB          POP STACK ENTRY
         L         R3,STPSLBL1
         LTR       R3,R3
         BZ        STPOPLP2
         ST        R7,STACKTOP
         B         CRET                RETURN
         EJECT
STDOCASE CMENT     STSAVER,STRPROG   DOCASE STATEMENT ENTRY
         BAL       R8,STEXTSP8         ISSUE EXTENSION MSG.
         CLI       SCODE,X'00'         MISSING INDEX VAR.?
         BE        STNAMBAD            YES - AWAY
         IF        (SCODE,NOFF,MNAME),STNAMBAD
         LOOKUP    VARIABLE
         USING     VLIST,R15
*    CHECK THAT VARIABLE IS SIMPLE INTEGER
         MVI       STINT2SW,X'00'      SAY IT ISN'T INT*2
         CLI       VB1,SIMV+INT4       SIMPLE INTEGER*4
         BE        STVAROK             YES
         CLI       VB1,SIMV+INT2       SIMPLE INTEGER*2
         BNE       STWRTYPE            NOT EITHER - ERROR
         MVI       STINT2SW,X'01'      INDICATE IT'S INT*2
STVAROK  AH        RS,SLINK            BUMP STACK
         CLI       SOPTR,TERM          END DELIMETER?
         BNE       STDELAF             NO - DELIMETER FOLLOWS
         BAL       R8,STAKENTR         GET STACK ENTRY
         L         R7,STACKTOP
         STH       R3,STPSLBL1         SAVE SYMTAB PTR FOR VARIABLE
         SR        R2,R2
         STH       R2,STPSLBL2         ZERO SECOND PTR
         STH       R2,STTYPE           AND TYPE
         TM        VB2,X'03'           COMMON OR EQUIV'D?
         BZ        STSKIP10            NNO - SKIP
         MVI       STPSLBL2+1,X'01'    YES SET SWITCH IN STACK
STSKIP10 EQU       *
         CLI       STINT2SW,X'00'      INTEGER*2?
         BE        STSKIP17            NO
         MVI       STPSLBL2,X'01'      INDICATE INT*2 IN STACK
STSKIP17 EQU       *
         BAL       R14,STGETLBL        GET A PSEUDO LABEL FOR CASE CODE
         USING     NLIST,R15
         OI        NB1,REF+EXEC+ADDR   SET SYMTAB BITS
         BAL       R8,STAKENTR         GET A STACK ENTRY
         OI        CDOEND,X'01'         STATEMENT CAN'T END DO-LOOP
         USING     STRCSTAK,R7
         L         R7,STACKTOP
*   FILL IN STACK ENTRY
         LH        R2,XISN             GET CURRENT ISN
         STH       R2,STISN            & SAVE IN STACK
         STH       R3,STPSLBL1         SAVE PS LABEL SYMTAB POINTER
*   OUTPUT OBJ CODE, PUTTING SYMTAB PTR IN ADDRESS FIELD
*   OF LOAD INSTRUCTION
         LR        R7,R5               SAVE CURRENT OBJ CODE PTR
         LR        R8,R3               SAVE PS LABEL SYMTAB PTR
         OUTPUT    6,STCASECD          OUTPUT OBJECT CODE
         STH       R8,2(R7)            FILL IN ADDRESS FIELD
         BAL       R14,STGETLBL        PS. LABEL FOR BR. AROUND
         OI        NB1,REF+EXEC+ADDR   SET SYMTAB BITS
         L         R7,STACKTOP         RESTORE STACK ENTRY PTR
         STH       R3,STPSLBL2         SYMTAB PTR FOR PS. LBL TO STACK
         LA        R2,STTCASAR         INDICATE ENTRY IS FOR
         STH       R2,STTYPE           CASE BRANCH AROUND LABEL
         B         CRET                RETURN
         $FREE     R15                                             V1L5
         EJECT
STCASE   CMENT     STSAVER,STRPROG        CASE STATEMENT ENTRY
STIFNON2 L         R7,STACKTOP         CHECK TOP ENTRY WAS
         LA        R2,STTCASAR+STTCAS2N+STTIFNON DOCASE, CASE OR IFNONE
         BAL       R8,STCHKTOP         OFF FOR ERROR CHECKING
         MVI       CIFGOTSW,X'00'      TURN OFF GOTO SW., IN CASE
*                                      LAST STMT IN BLOCK A TRANSFER
STENCSLP TM        STTYPE+1,STTCASAR   IS THIS THE BRANCH AROUND LABEL
         BO        STGOTIT             YES - EXIT FROM LOOP
         AH        R7,STLINKB          MOVE DOWN STACK
         B         STENCSLP            TRY NEXT ENTRY
STGOTIT  CLI       STIFNSW,X'00'       ARE WE PROCESSING AN IFNONE
         BE        STSKIP22            NO - AWAY
         TM        STTYPE+1,STTIFNON   HAVE WE HAD ONE FOR THIS DOCASE
         BZ        STOK                NO - OKAY
         MVI       STIFNSW,X'00'       RESET SWITCH FOR NEXT TIME
         $ERROR    (BOOT,SP,9),CRET    THAT'S A NO NO              V1L5
STOK     OI        STTYPE+1,STTIFNON   SET BIT IN BR-AROUND LBL ENTRY
STSKIP22 EQU       *
         LH        R1,XISN             GET CURRENT ISN
         BCTR      R1,0                WAS DOCASE THE PREVIOUS
         CH        R1,STISN            STATEMENT?
         BNE       STSKIP27            NO - SKIP
         CLI       STIFNSW,X'00'       IS THIS AN IFNONE?
         BE        CRET                NO - IGNORE THIS CASE STMT.
STSKIP27 EQU       *
         LH        R8,STPSLBL2         GET PSEUDO LABEL SYMTAB POINTER
         LR        R7,R5               SAVE CURRENT OBJ CODE POINTER
         OUTPUT    6,STTHELCD          OUTPUT OBJ CODE
         STH       R8,2(R7)            INSERT BRANCH POINTER
*   GENERATE & ESTABLISH ADDR OF CASE PSEUDO LABEL
         BAL       R14,STGETLBL        GET A PSEUDO LABEL
         USING     NLIST,R15
         OI        NB1,REF+EXEC+ADDR   SET SYMTAB BITS
         ST        R5,NADDR            ESTABLISH ADDRESS
         $FREE     R15                                             V1L5
         BAL       R8,STAKENTR         GET A STACK ENTRY
         L         R7,STACKTOP
*   FILL IN STACK ENTRY
         LH        R2,XISN             GET CURRENT ISN
         STH       R2,STISN            & SAVE IN STACK
         STH       R3,STPSLBL1         SAVE PS LABEL SYMTAB PTR
         LA        R2,STTCAS2N         INDICATE CASE ENTRY
         CLI       STIFNSW,X'00'       ARE WE PROCESSING AN IFNONE?
         BE        STSKIP23            NO - AWAY
         LA        R2,STTIFNON         INDICATE IFNONE ENTRY
         MVI       STIFNSW,X'00'       RESET SWITCH FOR NEXT TIME
STSKIP23 EQU       *
         STH       R2,STTYPE
         B         CRET                RETURN
         EJECT
STIFNONE CMENT     STSAVER,STRPROG     IF NONE DO STATEMENT ENTRY
         CLI       SCODE,PHI           EXACT KEYWORD?
         BNE       STJUNKAF            NO - UNDECODABLE
         AH        RS,SLINK            BUMP SCAN STACK
         CLI       SOPTR,TERM          END DELIMETER?
         BNE       STDELAF             NO - DELIMETER FOLLOWS
         MVI       STIFNSW,X'FF'       TELL STCASE I'M REALLY AN IFNONE
         B         STIFNON2            PROCESS WITH STCASE
         EJECT
STENDCAS CMENT     STSAVER,STRPROG        ENDCASE STATEMENT ENTRY
         CLI       SCODE,PHI           EXACT KEYWORD?
         BNE       STJUNKAF            NO - UNDECODABLE
         AH        RS,SLINK            BUMP SCAN STACK
         CLI       SOPTR,TERM          END DELIMETER?
         BNE       STDELAF             NO - DELIMETER FOLLOWS
         L         R7,STACKTOP         CHECK TOP ENTRY WAS
         LA        R2,STTCASAR+STTCAS2N+STTIFNON DOCASE, CASE OR IFNONE
         BAL       R8,STCHKTOP         OFF FOR ERROR CHECKING
         MVI       CIFGOTSW,X'00'      TURN OFF GOTO SW., IN CASE
*                                      LAST STMT IN BLOCK A TRANSFER
         LA        R2,1                INITIALIZE CASE COUNT
         SR        R0,R0               ZERO
STENACLP TM        STTYPE+1,STTCASAR   IS THIS THE BRANCH AROUND LABEL
         BO        STFOUND             YES
         AH        R7,STLINKB          MOVE DOWN STACK
         C         R0,STPSLBL1         CANCELLED ENTRY?
         BE        STENACLP            YES
         LA        R2,1(,R2)           BUMP COUNT
         B         STENACLP            LOOP
STFOUND  LR        R0,R2               SAVE CASE COUNT
         TM        STTYPE+1,STTIFNON   WAS THERE AN IFNONE BLOCK?
         BZ        STSKIP21            NO - SKIP
         L         R2,STACKTOP         CHECK ENTRY AT TOP OF STACK
         CLI       11(R2),STTIFNON     IS IT AN IFNONE ENTRY?
         BE        STSKIP21            YES - OKAY
         $ERROR    (NOEX,SP,A)         IFNONE WAS NOT THE LAST BLK V1L5
         B         STPOPEM             POP CASE ENTRIES OFF STACK
STSKIP21 EQU       *
         AIF       ('&PROFILE' EQ 'OMIT').SPROF36                  V1L5
         IF        (CCNTSW,OFF),SPROF36                            V1L5
         S         R5,KF12             POINT TO ISN CODE           V1L5
         MVC       6(6,R5),0(R5)       SAVE IT                     V1L5
         MVC       12(6,R5),11(R5)     PUT IT 6 BYTES AHEAD        V1L5
         CLC       CALINK+1(3),XPRSTART+1   FIRST STMT IN PROFILE? V1L5
         BNE       STBALINK                 NO                     V1L5
         L         R1,XPRSTART         YES, GET THE STARTING ADDR  V1L5
         LA        R1,6(,R1)           BUMP IT UP 6                V1L5
         ST        R1,XPRSTART         STORE IT BACK               V1L5
         B         STBCLINK            BRANCH AROUND               V1L5
STBALINK L         R9,XRUPTSV          GET A(LAST ISN LINK)        V1L5
         L         R1,2(,R9)           GET THE LINK                V1L5
         A         R1,=F'6'            BUMP IT UP 6                V1L5
         ST        R1,2(,R9)           STORE IT BACK               V1L5
STBCLINK L         R1,CALINK           GET THE ISN LINK            V1L5
         LA        R1,6(,R1)           BUMP IT UP 6                V1L5
         ST        R1,CALINK           SAVE IT BACK                V1L5
         B         *+14                SKIP THE S R5 & MVC ..      V1L5
SPROF36  DS        0H                                              V1L5
.SPROF36 ANOP                                                      V1L5
         S         R5,KF4              BACK UP OBJ CODE POINTER
         MVC       6(4,R5),0(R5)       MOVE ISN CODE AHEAD
         LR        R9,R5               SAVE OBJECT CODE POINTER
         OUTPUT    6,STTHELCD          OUTPUT END OF LAST CASE CODE
         LH        R3,STPSLBL2         GET BRANCH AROUND LABEL
         STH       R3,2(R9)             AND STORE IN ADDR FIELD
*   R5 NOW POINTS TO MOVED ISN CODE
         LH        R3,STISN             ZAP ISN IN OBJECT CODE
         STH       R3,2(,R5)            TO CASE STMT. ISN
*   DEFINE THIS ADDR AS THE CASE CODE PSEUDO LABEL ADDR
         LH        R3,STPSLBL1
         L         R4,KM1631
         NR        R3,R4
         A         R3,CSYMBASE
*   R3 NOW POINTS TO SYMTAB ENTRY FOR CASE CODE PSEUDO LABEL
         USING     NLIST,R3
         ST        R5,NADDR             FILL IN ADDRESS
         $FREE     R3                                              V1L5
         AIF       ('&PROFILE' EQ 'OMIT').SPROF37                  V1L5
         IF        (CCNTSW,OFF),SPROF37                            V1L5
         LA        R5,8(,R5)                                       V1L5
SPROF37  DS        0H                                              V1L5
.SPROF37 ANOP                                                      V1L5
         LA        R5,4(,R5)            BUMP PAST ISN CODE
         LR        R9,R5                SAVE CURRENT OBJ. CODE PTR
         OUTPUT    8,STEACCD1           PUT OUT SOME OBJECT CODE
         AH        R7,STLINKB           NEXT ENTRY - INDEX VARIABLE
         LH        R3,STPSLBL1          GET INDEX VARIABLE SYMTAB PTR
         STH       R3,6(R9)             FILL IN INDEX VAR ADDR
         SR        R3,R3
         IC        R3,STPSLBL2
         STC       R3,STINT2SW
         IC        R3,STPSLBL2+1
         STC       R3,STCMEQSW
         LA        R9,4(,R9)           POINT TO LOAD
         ST        R9,STTEMP
         LTR       R3,R3
         BZ        STSKIP11
*  OUTPUT COMMON/EQUIVALENCE CODE
         ST        R5,STTEMP           POINTER TO LOAD
         OUTPUT    4,STCMEQCD
STSKIP11 CLI       STINT2SW,X'00'      INTEGER*2?
         BE        STSKIP16            NO
         L         R9,STTEMP           GET ADDR OF LOAD INST'N.
         MVI       0(R9),X'48'         CHANGE LOAD TO LOAD HALFWORD
STSKIP16 EQU       *
         LR        R9,R5               SAVE CURRENT OBJECT CODE PTR
         OUTPUT    32,STEACCD2         OUTPUT MORE CASE CODE
         AIF       ('&PROFILE' EQ 'OMIT').STPROFS                  V1L5
         IF        (CCNTSW,OFF),STPROFS                            V1L5
         IF        (CMOSWTCH,ON),STPROFS                           V1L5
         MVI       25(R9),X'2A'        FIX UP THE OBJ CODE FOR THE V1L5
STPROFS  DS        0H                  EXTRA ISN CODE (PROFILER)   V1L5
.STPROFS ANOP                                                      V1L5
         AH        R7,STLINKF          BRANCH AROUND LABEL ENTRY
         ST        R7,STTEMP           SAVE STACK PTR
         LH        R3,STPSLBL2          GET PSEUDO LABEL SYMTAB PTR
         TM        STTYPE+1,STTIFNON   WAS THERE AN IFNONE BLOCK?
         BZ        STSKIP20            NO - SKIP
         L         R3,STACKTOP         GET PSEUDO LABEL PTR FROM
         LH        R3,4(R3)            IFNONE ENTRY AT TOP OF STACK
         BCTR      R0,0                DECREMENT CASE COUNT BY 1
STSKIP20 EQU       *
         STH       R3,4(R9)            INSERT IN OBJECT CODE
         STH       R0,12(R9)           INSERT # OF CASES IN OBJ CODE
         CLI       STCMEQSW,X'00'      INDEX VAR COMMON/EQUIV'D.?
         BE        STSKIP15            NO -SKIP
         MVI       25(R9),X'26'        CHANGE DISP. FOR EXTRA C/E CODE
STSKIP15 EQU       *
*   WORK UP STACK OUTPUTTING PSEUDO LABEL CODE FOR CASES 2-N
         LR        R2,R0               # OF CASES
         BCTR      R2,0                -1
         LTR       R2,R2               ONLY ONE CASE?
         BZ        STSKIP18            YES - SKIP
STCSLBLP AH        R7,STLINKF          UP STACK TO NEXT CASE
         LH        R0,STPSLBL1         SYMTAB PTR FOR PS. LABEL
         LTR       R0,R0               CANCELLED ENTRY?
         BZ        STCSLBLP            YES
         LR        R9,R5               SAVE OBJECT CODE PTR
         OUTPUT    4,STTHELCD          OUTPUT L R3,*-*
         LR        R3,R0               GET PSEUDO LABEL SYMTAB PTR
         STH       R3,2(R9)            INSERT IN ADDR FIELD
         BCT       R2,STCSLBLP         LOOP FOR ALL CASES
STSKIP18 L         R7,STTEMP           BRANCH AROUND LABEL ENTRY
         LH        R3,STPSLBL2
         L         R4,KM1631
         NR        R3,R4
         A         R3,CSYMBASE
*    R3 NOW POINTS TO BRANCH AROUND PSEUDO LABEL SYMTAB ENTRY
*    FIX UP ADDR TO POINT HERE
         USING     NLIST,R3
         ST        R5,NADDR            FILL IN ADDR FIELD
         $FREE     R3                                              V1L5
STPOPEM  AH        R7,STLINKB          DOWN STACK
STPOPLP3 AH        R7,STLINKB          AGAIN (IND VAR & CANCELLED ONES)
         L         R3,STPSLBL1
         LTR       R3,R3
         BZ        STPOPLP3            LOOP POPPING CANCELLED ENTRIES
         ST        R7,STACKTOP         POP CASE & CANCELLED ENTRIES
         B         CRET                RETURN
         EJECT
STATEND  CMENT     STSAVER,STRPROG     ATEND STATEMENT ENTRY
         CLI       SCODE,PHI           EXACT KEYWORD?
         BNE       STJUNKAF            NO - UNDECODABLE
         BAL       R8,STEXTSP8         ISSUE EXTENSION MSG.
         AH        RS,SLINK            BUMP SCAN STACK
         CLI       SOPTR,TERM          END OF STATEMENT?
         BNE       STDELAF             NO - DELIMETER FOLLOWS
         BAL       R8,STAKENTR         GET A STACK ENTRY
         L         R7,STACKTOP
         L         R0,KFM1             -1
*   SETUP STACK ENTRY
         STH       R0,STPSLBL1         SAY IT'S A DUMMY
         LA        R0,STTATEND
         STH       R0,STTYPE
         LH        R0,XISN
         STH       R0,STISN            CURRENT ISN
         CLI       CREADSWT,X'FF'      DOES IT FOLLOW A READ?
         BE        STNOREAD            NO - ERROR
         L         R8,CREADSWT         PTR TO READ OBJ CODE
         LH        R0,=X'B8BC'
         CH        R0,0(R8)            ISN CODE?
         BE        STSKIP19            YES AWAY
*  READ MUST BE AT START OF A PROG. SEGMENT - SEARCH FOR 1ST ISN
         LA        R8,24(,R8)          SKIP STANDARD PROG. SEG. HEAD
STISNSRC CH        R0,0(R8)            ISN CODE?
         BE        STSKIP19            YES
         LA        R8,4(,R8)           KEEP LOOKING
         B         STISNSRC
         AIF       ('&PROFILE' EQ 'OMIT').STPROF8                  V1L5
STSKIP19 DS        0H                                              V1L5
         IF        (CCNTSW,OFF),STPROF8                            V1L5
         LA        R8,8(,R8)           SKIP THE POINTER & COUNT    V1L5
STPROF8  DS        0H                                              V1L5
.STPROF8 ANOP                                                      V1L5
         LA        R8,8(,R8)           BUMP PAST ISN & LA R1--     V1L5
         MVI       CREADSWT,X'FF'      RESET SWITCH
         CLC       0(4,R8),STXIOINT    IS IT A BAL R14,XIOINIT?
         BNE       STWRREAD            NO - WRONG TYPE OR INVALID
         CLI       4(R8),X'BC'         YES - CHECK END RELOC CODE
         BNE       STENDEQ             END=  SPECIFIED - ERROR
         TM        5(R8),X'08'         DIRECT ACCESS READ?
         BO        STWRREAD            YES - ERROR
         LH        R2,STRNO            PSEUDO LABEL COUNT
         LA        R2,1(,R2)          INCREMENT
         LA        R0,1(,R2)          WE USE TWO
         STH       R0,STRNO           SAVE
         A         R2,=F'200000'      PSEUDO LABEL FOR
         ST        R2,SOPND           BRANCH AROUND
         LOOKUP    PSUDSTNO
         USING     NLIST,R15
         OI        NB1,REF+EXEC+ADDR  SET SYMTAB BITS
         ST        R3,STTEMP          SAVE FOR LATER
         STH       R3,STPSLBL1        SAVE BR AROUND LBL PTR IN STACK
         LA        R2,1(,R2)          BUMP PSEUDO LABEL NUMBER
         ST        R2,SOPND           FOR ATEND CODE PS. LABEL
         LOOKUP    PSUDSTNO
         OI        NB1,REF+EXEC+ADDR  SET SYMTAB BITS
         LR        R7,R5              SAVE CURRENT OBJ CODE PTR
         LR        R4,R3              SAVE PS. LABEL SUMTAB PTR
         OUTPUT    6,STTHELCD         OUTPUT BR AROUND CODE
         L         R3,STTEMP          BR AROUND PS LABEL SYMTAB PTR
         STH       R3,2(R7)           SYMTAB PTR TO 'L' ADDR FIELD
         ST        R5,NADDR           FIX UP LBL ADDR IN SYMTAB
*    MODIFY ATEND ENTRY IN XIOINIT LIST
         MVI       4(R8),X'B3'        CHANGE RELOC CODE FOR LABEL
         STH       R4,6(R8)           FILL IN PS LABEL SYMTAB PTR
         B         CRET               RETURN
         EJECT
STENDEOF CMENT     STSAVER,STRPROG    ENDEOF STATEMENT ENTRY
         CLI       SCODE,PHI           EXACT KEYWORD?
         BNE       STJUNKAF            NO - UNDECODABLE
         AH        RS,SLINK           BUMP SCAN STACK
         CLI       SOPTR,TERM          END OF STATEMENT?
         BNE       STDELAF             NO - DELIMETER FOLLOWS
         L         R7,STACKTOP        CHECK TOP ENTRY
         LA        R2,STTATEND
         BAL       R8,STCHKTOP        OFF FOR ERROR CHECKING
         MVI       CIFGOTSW,X'00'      TURN OFF GOTO SW., IN CASE
*                                      LAST STMT IN BLOCK A TRANSFER
         LH        R15,STPSLBL1       GET PS LABEL SYMTAB PTR
         CH        R15,KFM1           DUMMY ENTRY?
         BE        STPOPLP4           YES - SKIP
         L         R4,KM1631
         NR        R15,R4
         A         R15,CSYMBASE
*   R15 NOW POINTS TO SYMTAB ENTRY FOR BRANCH AROUND LABEL
         ST        R5,NADDR           FILL IN LABEL ADDRESS
STPOPLP4 AH        R7,STLINKB         POP STACK ENTRY
         L         R3,STPSLBL1
         LTR       R3,R3
         BZ        STPOPLP4           POP CANCELLED ENTRIES
         ST        R7,STACKTOP
         B         CRET               RETURN
         EJECT
STPERFM  CMENT     STSAVER,STRPROG     PEFORM STATEMENT ENTRY
         BAL       R14,STPNAME         PRELIM. CHECKING & PAR. NAME
         USING     NLIST,R15
         OI        NB1,REF+EXEC+PARA   SET SYMTAB BITS
         LR        R8,R3               SAVE SYMTAB PTR
         AIF       ('&PROFILE' EQ 'OMIT').SPROF57                  V1L5
         IF        (CCNTSW,OFF),SPROF57                            V1L5
         CLI       CWHPERF,X'FF'       IS THIS A WHILE-EXEC ?      V1L5
         BNE       SPROF57             NO, SKIP OUTPUT OF BAL      V1L5
         OUTPUT    4,STWHEXCD          OUTPUT BAL TO XIFOBJ        V1L5
SPROF57  DS        0H                                              V1L5
.SPROF57 ANOP                                                      V1L5
         LR        R7,R5               SAVE OBJECT CODE POINTER    V1L5
         OUTPUT    6,STPERFCD          PERFORM'S OBJ. CODE
         STH       R8,2(R7)            INSERT ADDR IN CODE
         CLI       CWHPERF,X'FF'       ARE WE PROCESSING A WHILE-PERFM?
         BE        STENDWH2            YES - PROCEED
         CRET
         AIF       ('&PROFILE' EQ 'OMIT').SPROF58                  V1L5
STWHEXCD BAL       R14,XIFOBJ                                      V1L5
.SPROF58 ANOP                                                      V1L5
         EJECT
STPARAGR CMENT     STSAVER,STRPROG     PARAGRAPH STMT. ENTRY
         CLI       STPARASW,X'00'      ARE WE ALREADY IN A PAR.?
         BNE       STNSTPAR            YES - ATTEMPT TO NEST
         BAL       R14,STPNAME         PRELIM. CHECKING & PAR. NAME
         USING     NLIST,R15
         TM        NB1,ADDR            HAS THIS PAR. NAME BEEN DEFINED?
         BO        STDUPPAR            YES - DUPLICATE PARAGRAPHS
         OI        NB1,ADDR+EXEC+PARA  SET SYMTAB BITS
         LR        R14,R5              GET OBJ. CODE PTR
         AIF       ('&PROFILE' EQ 'OMIT').SPROF59                  V1L5
         IF        (CCNTSW,OFF),SPROF59                            V1L5
         S         R14,KF8             POINT AFTER ISN             V1L5
SPROF59  DS        0H                                              V1L5
.SPROF59 ANOP                                                      V1L5
         S         R14,KF4             POINT TO ISN CODE
         ST        R14,NADDR           PLACE ADDR IN SYMTAB ENTRY
         MVI       STPARASW,X'FF'      SET IN-PARAGRAPH SWITCH
         CLI       CIFGOTSW,X'01'      PRECEEDED BY TRANSFER?
         BE        STSKIP24            YES - OK
         $ERROR    (BOOT,SP,C)                                     V1L5
STSKIP24 MVI       CIFGOTSW,X'00'
         CLI       STHIPNO,X'FF'       HAVE WE ALREADY GOT 255 PARS.
         BNE       STSKIP28            NO -OK
         $ERROR    (NOEX,SP,L),CRET    NO MORE ROOM IN SYMTAB FIELDV1L5
STSKIP28 SR        R1,R1               ZERO
         IC        R1,STHIPNO          GET PAR. NO., INCREMENT
         LA        R1,1(,R1)           BY ONE AND
         STC       R1,STHIPNO          SAVE IT
         STC       R1,CPARNO           SAVE IN COMMR
         LH        R1,XISN             GET CURRENT ISN AND
         STH       R1,STPARISN         UPDATE PAR. START ISN
         BAL       R14,STGETLBL        GET A PSEUDO LABEL
         OI        NB1,REF+EXEC+ADDR   SET SYMTAB BITS
         ST        R3,STPRETAD         SAVE SYMTAB PTR: WE'LL USE
         LR        R8,R3               PS. LBL. ADDR WORD FOR STORING
         LR        R7,R5               PARAGRAPH RETURN ADDRESS
         OUTPUT    16,STPARACD         PARAGRAPH ENTRY CODE
         STH       R8,2(R7)            INSERT ADDR. IN CODE
         STH       R8,10(R7)              AGAIN
         STH       R8,14(R7)           AND AGAIN
         CRET
STDUPPAR MVI       CIFGOTSW,X'00'      RESET TRANSFER SWITCH
         $ERROR    (BOOT,SP,D),CRET                                V1L5
STNSTPAR $ERROR    (BOOT,SP,I),CRET                                V1L5
         EJECT
STENDPAR CMENT     STSAVER,STRPROG     END PARAGRAPH ENTRY
         MVI       CIFGOTSW,X'01'      SET TRANSFER SWITCH
         CLI       STPARASW,X'FF'      WAS THERE A PAR. STMT.?
         BNE       STNOPAR             NO - ERROR
         L         R8,STPRETAD         GET RETURN ADDR SYMTAB PTR.
         LR        R7,R5               SAVE OBJ. CODE PTR
         OUTPUT    10,STENDPCD         END PARAGRAPH CODE
         STH       R8,2(R7)            INSERT ADDR IN CODE
         STH       R8,6(R7)            AGAIN
         MVI       STPARASW,X'00'      RESET PARAGRAPH SWITCH
         MVI       CPARNO,X'00'        ZERO PAR. NO. IN COMMR
         L         R7,STACKTOP         CHECK ENTRY AT TOP OF STACK
         LTR       R7,R7               IF NOT SET UP, NO CHECK
         BZ        CRET                IS NECESSARY
         LH        R1,STISN            GET ISN OF TOP ENTRY
         CH        R1,STPARISN         IF IT STARTED BEFORE PAR.,
         BL        CRET                WE'RE OK
         LH        R15,XISN            SAVE CURRENT ISN
         STH       R1,XISN             ZAP XISN FOR MSG.
         BAL       R1,STERRSP4         ERROR MSG.
         STH       R15,XISN            RESTORE CURRENT ISN
         CRET
STNOPAR  $ERROR    (BOOT,SP,E),CRET                                V1L5
         EJECT
STPNAME  ST        R14,STTEMP2         SAVE RETURN ADDRESS
         CLI       CWHPERF,X'FF'       IS IT A WHILE-PERFM?
         BE        STSKIP26            YES - EXTENSION ALREADY ISSUED
         BAL       R8,STEXTSP8         ISSUE EXTENSION MSG.
STSKIP26 CLI       SCODE,X'00'         NAME MISSING?
         BE        STPNMINV            YES - ERROR
         IF        (SCODE,NOFF,MNAME),STPNMINV  NAME INVALID?
         ST        RS,STTEMP           SAVE STACK PTR
         AH        RS,SLINK            BUMP SCAN STACK
         CLI       SOPTR,TERM          END DELIMETER?
         BNE       STDELAF             NO - DELIMETER FOLLOWS
         L         RS,STTEMP           RESTORE SCAN STACK PTR
         L         R8,SOPND            1ST 4 BYTES OF NAME
         ST        R8,STNAME
         CLI       SCODE,X'02'         IS THE NAME LONGER THAN 4 CHAR.?
         BL        ST1WORD             NO - AWAY
         CLI       SOPND+6,X'40'       NAME GREATER THAN 6 CHARS.?
         BE        STNOTGT6           NO - SKIP
         $ERROR    (WARN,VA,0,SYMRS)                               V1L5
STNOTGT6 LH        R8,SOPND+4          GET LAST TWO BYTES
         STH       R8,STNAME+4
STENCODE TR        STNAME(6),STTABLE   TRANSLATE CHARS. TO NUM. CODES
         SR        R9,R9               ZERO R9, R0 & R1
         LR        R0,R9
         LR        R1,R9
         LA        R2,38               CONSTRUCTING A BASE-38 NUMBER
STLOOP1  IC        R0,STNAME(R1)       GET A CHAR. CODE
         AR        R9,R0               ADD TO NUMBER SO FAR
         C         R1,KF5              HAVE WE COVERED ALL 6 CHARS.?
         BE        STEXIT2             YES - EXIT
         MR        R8,R2               TIMES 38
         LA        R1,1(,R1)           INCREMENT INDEX
         B         STLOOP1             LOOP
STEXIT2  ST        R9,STNAME           SAVE ENCODED PAR. NAME
         LA        RS,STNAME-4         POINT STACK PTR AT CODED NAME
         LOOKUP    PSUDSTNO
         L         R14,STTEMP2         GET RETURN ADDRESS
         BR        R14                 RETURN
ST1WORD  MVI       STNAME+4,X'40'      BLANK OUT THE LAST
         MVI       STNAME+5,X'40'      TWO BYTES
         B         STENCODE            OFF TO ENCODE THE NAME
STPNMINV MVI       CIFGOTSW,X'00'      RESET TRANSFER SWITCH
         $ERROR    (BOOT,SP,J)                                     V1L5
         CLI       CWHPERF,X'FF'       ARE WE PROCESSING A WHILE-PERFM?
         BE        STENDWH2            YES - PROCEED
         CRET                          RETURN
         $FREE     R15                                             V1L5
         EJECT
STMISPAR CMENT     STSAVER,STRPROG     MISSING PARAGRAPH ERROR
         BAL       R14,STDECODE        DECODE BACK TO A NAME
         $ERROR    (NOEX,SP,G,SYMRS),CRET                          V1L5
         SPACE     2
STUNREFP CMENT     STSAVER,STRPROG    UNREFERENCED PARAGRAPH
         BAL       R14,STDECODE       DECODE BACK TO A NAME
         $ERROR    (WARN,SP,H,SYMRS),CRET                          V1L5
         SPACE     3
STDECODE ST        R14,STTEMP
         SR        R14,R14            ZERO R14
         USING     NLIST,R8
         L         R15,NSTAT          GET CODED NAME FROM SYMTAB
         LA        R2,38              WE'RE DECODING A BASE-38 #
         LA        R1,5               INITIALIZE INDEX
STDCODLP DR        R14,R2             SEPERATE THE BASE-38 DIGITS
         STC       R14,STNAME(R1)     AND STORE IN NAME FIELD
         SR        R14,R14            CLEAR R14
         BCT       R1,STDCODLP        DECREMENT INDEX AND LOOP
         STC       R15,STNAME         STORE FINAL CHAR. CODE
         TR        STNAME(6),STTABLE  TRANSLATE BASE-38 DIGITS TO NAME
         LA        RS,STNAME-4        SET UP STACK PTR FOR STNAME
         L         R14,STTEMP
         BR        R14                RETURN
         EJECT
STAKENTR SR        R1,R1               GET A STACK ENTRY
         C         R1,STACKTOP         TOP PTR ZERO?
         BNE       STNOT1ST            NO - NOT 1ST TIME
         GETSYM    12,CHECK            YES, GET 12 BYTES
         ST        R6,STACKTOP         SAVE STACK PTR
         ST        R1,0(R6)            INITIALIZE BOTTOM OF
         MVC       4(4,R6),STACKBOT    STACK
         ST        R1,8(R6)
STNOT1ST L         R7,STACKTOP         LOAD PTR TO TOP OF STACK
         LH        R4,STLINKF          LOAD LINK FORWARD
         CR        R1,R4               R1 IS ZERO FROM ABOVE
         BNE       STOLD               USE AN OLD ENTRY
         GETSYM    12,CHECK            GRAB 12 BYTES - NEW ENTRY
         LR        R4,R6
         SR        R4,R7
         STH       R4,STLINKF          STORE LINK FORWARD
         ST        R6,STACKTOP         STORE NEW TOP OF STACK
         $FREE     R7                                              V1L5
         USING     STRCSTAK,R6
         LPR       R4,R4               MAKE LINK SO YOU ALWAYS ADD
         STH       R4,STLINKB          STORE BACKWARD LINK
         STH       R1,STLINKF          ZERO LINK FORWARD
         BR        R8                  RETURN
STOLD    AR        R4,R7               RE-USE AN OLD ENTRY
         ST        R4,STACKTOP         STORE NEW TOP OF STACK
         BR        R8                  RETURN
         $FREE     R6                                              V1L5
         USING     STRCSTAK,R7
         EJECT
STGETLBL LH        R2,STRNO            PSEUDO LABEL COUNT
         LA        R2,1(,R2)           INCREMENT
         STH       R2,STRNO            SAVE
         A         R2,=F'200000'       PSEUDO LABEL
         ST        R2,SOPND            STORE FOR SYMTAB LOOKUP
         LR        R2,R14              SAVE RETURN ADDR. IN R2
         LOOKUP    PSUDSTNO
         BR        R2                  RETURN
         EJECT
*   ERROR CHECKING ROUTINES
STCHKTOP LTR       R7,R7               IS STACK SET UP YET?
         BZ        STNOTIN             NO - ERROR
         SR        R0,R0               USE AS SWITCH
STCHKLP  L         R4,STPSLBL1         SEE IF ENTRY CANCELLED
         LTR       R4,R4
         BZ        STEPDOWN            YES - SKIP IT
         LR        R4,R2
         N         R4,STISN            TYPE IS IN 2ND HALFWORD
         BNZ       STHAVEIT            FOUND IT
         LA        R0,1                SET SWITCH - NOT ON TOP
STEPDOWN LH        R4,STLINKB          GET BACKWARD LINK
         LTR       R4,R4               ZERO LINK?
         BZ        STNOTIN             YES - BOTTOM OF STACK
         AR        R7,R4               NO - MOVE DOWN THE STACK
         B         STCHKLP             LOOP
STNOTIN  MVI       STIFNSW,X'00'       CLEAR IFNONE SWITCH
         $ERROR    (BOOT,SP,3),CRET                                V1L5
STHAVEIT L         R4,STPSLBL1         IS THIS A CANCELLED ENTRY
         LTR       R4,R4
         BZ        STEPDOWN            YES, KEEP LOOKING
         LTR       R0,R0               WAS IT AT THE TOP
         BZ        STSKIP12            YES - OK
         LA        R8,CRET             ERROR - ZAP RETURN ADDR
         MVI       STIFNSW,X'00'       CLEAR IFNONE SWITCH
         SR        R0,R0               ZERO
         ST        R0,STPSLBL1         CANCEL THE ENTRY
         ST        R7,STTEMP           SAVE STACK PTR
         TM        STTYPE+1,STTCAS2N+STTIFNON  IF WE JUST CANCELLED A
         BZ        STERRLP             CASE OR IFNONE ENTRY, WE NEED
STCASCAN AH        R7,STLINKB          TO CANCEL THE REST OF THE CASE
         ST        R0,STPSLBL1         ENTRIES FOR THIS CONSTRUCT
         TM        STTYPE+1,STTCASAR   WHEN WE REACH DOCASE ENTRY WE'RE
         BZ        STCASCAN            DONE
         L         R7,STTEMP           RESTORE STACK PTR
STERRLP  AH        R7,STLINKF          MOVE UP STACK
STERRLP2 C         R0,STPSLBL1         SEE IF CANCELLED
         BE        STSKIP13            YES - SKIP
         CH        R0,STTYPE           SKIP EXTRA CASE ENTRIES
         BE        STSKIP13
         LH        R15,XISN            SAVE CURRENT ISN
         LH        R14,STISN           KLUDGE XISN FOR
         STH       R14,XISN            ERROR MSG.
         BAL       R1,STERRSP4         ISSUE ERROR MSG.
         STH       R15,XISN            RESTORE CURRENT ISN
STSKIP13 C         R7,STACKTOP         HAVE WE REACHED THE TOP
         BE        STEXIT1             YES - EXIT
         TM        STTYPE+1,STTCASAR   IF THIS WAS A DOCASE ENTRY, THEN
         BZ        STERRLP             WE MUST SKIP THE CASE AND IFNONE
STCASKP2 AH        R7,STLINKF          ENTRIES FOR THE REST OF THIS
         TM        STTYPE+1,STTCAS2N+STTIFNON   CONSTRUCT
         BZ        STERRLP2            LOOP IF NOT CASE/IFNONE
         C         R7,STACKTOP         TOP OF STACK?
         BNE       STCASKP2            NO - KEEP GOING
STEXIT1  L         R7,STTEMP           RESTORE STACK PTR
STSKIP12 LH        R0,STISN            GET ISN
*    CHECK  DO STACK
         L         R3,CDOBEG           TOP OF DO STACK
         LTR       R3,R3               DO STACK SET UP?
         BZ        STDOOK              NO - SKIP
         USING     DOSTACK,R3
STDOLOOP CLC       DOSTANO(4),STACKBOT      BOTTOM OF DOSTACK?
         BE        STDOOK              YES - EXIT
         C         R0,DOISN            OVERLAPPED?
         BH        STDOOK              NO - EXIT
         LH        R15,XISN            SAVE CURRENT ISN
         L         R14,DOISN            KLUDGE XISN FOR
         STH       R14,XISN             ERROR MSG.
         $ERROR    (NOEX,SP,5,ISNR0)                               V1L5
         STH       R15,XISN            RESTORE CURRENT ISN
         AH        R3,DOLINKB          CHECK NEXT DO
         B         STDOLOOP            LOOP
STDOOK   CLI       STPARASW,X'00'      ARE WE IN A PARAGRAPH?
         BER       R8                  NO - OK
         LH        R1,STPARISN         GET ISN OF PARAGRAPH START
         CH        R1,STISN            IF PAR. STARTED BEFORE BLOCK
         BLR       R8                  THAT'S ENDING, WE'RE OK
         LH        R15,XISN            SAVE CURRENT ISN
         STH       R1,XISN             ZAP XISN FOR MSG.
         BAL       R1,STERRSP4         ERROR MSG.
         STH       R15,XISN            RESTORE CURRENT ISN
         BR        R8                  RETURN
         EJECT
STENDOLP CENT      STSAVER             END OF DOLOOP ENTRY
         L         R3,CDOBEG           TOP OF DO STACK
         L         R3,DOISN            GET START OF DO ISN
         $FREE     R3                                              V1L5
         L         R7,STACKTOP         TOP OF OUR STACK
         LTR       R7,R7               STACK SET UP YET?
         BZ        STEDOK              NO
         SR        R0,R0               ZERO
STEDLP   CH        R0,STLINKB          BACK LINK
         BE        STEDOK              YES - BOTTOM OF STACK
         C         R0,STPSLBL1         ENTRY CANCELLED?
         BE        STRPT               YES - TRY NEXT
         CH        R0,STTYPE           SKIP EXTRA CASE ENTRIES
         BE        STRPT
         CH        R3,STISN            OVERLAPPED?
         BH        STEDOK              NO -EXIT
         LH        R8,XISN             SAVE CURRENT ISN
         LH        R14,STISN           KLUDGE XISN FOR
         STH       R14,XISN            ERROR MSG.
         $ERROR    (BOOT,SP,6,ISNR0)                               V1L5
         STH       R8,XISN             RESTORE CURRENT ISN
STRPT    AH        R7,STLINKB          MOVE DOWN STACK
         B         STEDLP              LOOP
STEDOK   LM        R15,R10,16(R15)     RESTORE REGS
         B         CRET                RETURN
         EJECT
STENDSEG CENT      STSAVER             END OF PROG. SEGMENT ENTRY
         SR        R0,R0               ZERO
         L         R7,STACKTOP         TOP OF STACK PTR
         LTR       R7,R7               STACK SET UP?
         BZ        STDONE              NO
STESLOOP CH        R0,STLINKB          ARE WE AT BOTTOM OF STACK?
         BE        STDONE              YES - OK
         C         R0,STPSLBL1         CANCELLED ENTRY?
         BE        STESNEXT            YES - SKIP TO NEXT
         CH        R0,STTYPE           SKIP EXTRA CASE ENTRIES
         BE        STESNEXT
         LH        R15,XISN            SAVE CURRENT ISN
         LH        R14,STISN           KLUDGE XISN FOR
         STH       R14,XISN            ERROR MSG.
         $ERROR    (NOEX,SP,7,ISNR0)                               V1L5
         STH       R15,XISN           RESTORE CURRENT ISN
         TM        STTYPE+1,STTCAS2N+STTIFNON  IF IT WAS A CASE OR
         BZ        STESNEXT           IFNONE BLOCK THAT WASN'T COMPL-
STCASKIP AH        R7,STLINKB         ETED, THEN WE MUST SKIP THE REST
         TM        STTYPE+1,STTCASAR  OF THE CASE ENTRIES FOR THIS
         BZ        STCASKIP           CONSTRUCT
STESNEXT AH        R7,STLINKB         MOVE DOWN STACK
         B         STESLOOP           CHECK NEXT ENTRY
STDONE   ST        R0,STACKTOP        ZERO TOP OF STACK PTR
         STH       R0,STRNO           AND PSEUDO LABEL COUNT
         MVI       CPARNO,X'00'       ZERO PAR. NO. IN COMMR
         MVI       STHIPNO,X'00'      AND HERE
         CLI       STPARASW,X'00'     IS THERE AN UNCOMPLETED PAR.?
         BE        STESRET            NO -RETURN
         MVI       STPARASW,X'00'     RESET SWITCH FOR NEXT SEGMENT
         LH        R15,XISN           SAVE CURRENT ISN
         LH        R14,STPARISN       GET STARING ISN OF LAST PAR.
         STH       R14,XISN           ZAP XISN FOR ERROR MSG.
         $ERROR    (NOAC,SP,F,ISNR0)  LAST PAR. NOT COMPLETED      V1L5
         STH       R15,XISN           RESTORE CURRENT ISN
STESRET  STH       R0,STPARISN        ZERO PAR. START ISN
         CRET
         EJECT
STNAMBAD $ERROR    (BOOT,SX,7,SYMRS,UNEX),CRET                     V1L5
STWRTYPE $ERROR    (BOOT,SX,7,NAMR15,INVAL),CRET                   V1L5
STJUNKAF $ERROR    (BOOT,ST,3),CRET                                V1L5
STDELAF  $ERROR    (BOOT,SX,A,DELRS,UNEX),CRET                     V1L5
STNOREAD $ERROR    (BOOT,SP,0),CRET                                V1L5
STWRREAD $ERROR    (BOOT,SP,1),CRET                                V1L5
STENDEQ  $ERROR    (BOOT,SP,2),CRET                                V1L5
STEXTSP8 $ERROR    (LANG,SP,8)                                     V1L5
         BR        R8
STERRSP4 $ERROR    (NOEX,SP,4,ISNR0)                               V1L5
         BR        R1
         EJECT
**** OBJECT CODE FOR VARIOUS STATEMENTS                        ******
*    THEN/ELSE CODE,  WHILE/ENDWHILE, ENDCASE                       *
STTHELCD L         R3,*-*
         BR        R3
**** CASE CODE                                                      *
STCASECD L         R3,*-*
         BALR      R2,R3
**** ENDALLCASE - INDEX VAR COMMON/EQUIVALENCED CODE                *
STCMEQCD L         R2,0(R2)
***** REST IS CASE CODE  (GEN'D. BY ENDALLCASE)                     *
STEACCD1 ST        R2,XCMT2
         L         R2,*-*
         SPACE
STEACCD2 LTR       R2,R2
         L         R3,*-*
         BAL       R14,XCGTEST
         LA        R4,*-*
         CR        R2,R4
         BHR       R3
         SLA       R2,2
         EX        R0,34(R2,R11)
         BR        R3
         L         R3,XCMT2
***** PERFORM, PARAGRAPH AND ENDPARAGRAPH CODE
STPERFCD L         R3,*-*
         BALR      R2,R3
         SPACE
STPARACD CLI       *-*,X'FF'
         BE        XRECPAR
         ST        R2,*-*
         MVI       *-*,X'FF'
         SPACE
STENDPCD MVI       *-*,X'00'
         L         R2,*-*
         BR        R2
         EJECT
*   SAVE AREA AND GENERAL DATA AREA
STSAVER  DS        18F
STACKTOP DC        A(*-*)
STCCADDR DS        F
STTEMP   DS        F
STTEMP2  DS        F
STACKBOT DC        X'7FFFFFFF'
STPRETAD DS        F
*****  KEEP THE NEXT THREE LINES TOGETHER FOR A DUMMY STACK ENTRY*****
STRNO    DC        0F'0',H'0'   PSEUDO LABEL COUNT
         DC        X'00',X'02'
STNAME   DC        CL8' '     '
**********************************************************************
STWHPSEU DS        H
STPARISN DC        H'0'
STXIOINT BAL       R14,XIOINIT        USED FOR ATEND COMPARES
STXINTDA BAL       R14,XIOINTDA
STHIPNO  DC        X'00'
STCMEQSW DC        X'00'
STINT2SW DC        X'00'
STIFNSW  DC        X'00'
STPARASW DC        X'00'
STTTHEN  EQU       X'01'                  THEN ENTRY
STTELSE  EQU       X'02'                  ELSE
STTWHILE EQU       X'04'                  WHILE
STTCAS2N EQU       X'08'                  CASE LABELS - CASES 2->N
STTIFNON EQU       X'10'                  IF NONE DO ENTRY
STTCASAR EQU       X'20'                  CASE BRANCH AROUND LABEL
STTATEND EQU       X'40'                  ATEND ENTRY
         EJECT
STTABLE  DC        C' ',C'A',C'B',C'C',C'D',C'E',C'F',C'G',C'H'
         DC        C'I',C'J',C'K',C'L',C'M',C'N',C'O',C'P',C'Q'
         DC        C'R',C'S',C'T',C'U',C'V',C'W',C'X',C'Y',C'Z'
         DC        C'0',C'1',C'2',C'3',C'4',C'5',C'6',C'7',C'8'
         DC        C'9',C'$',53X'0',X'25',101X'0',X'01',X'02',X'03'
         DC        X'04',X'05',X'06',X'07',X'08',X'09',7X'0'
         DC        X'0A',X'0B',X'0C',X'0D',X'0E',X'0F',X'10',X'11'
         DC        X'12',8X'0',X'13',X'14',X'15',X'16',X'17',X'18'
         DC        X'19',X'1A',6X'0',X'1B',X'1C',X'1D',X'1E',X'1F'
         DC        X'20',X'21',X'22',X'23',X'24',6X'0'
         LTORG
         END
