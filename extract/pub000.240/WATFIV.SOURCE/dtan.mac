 TITLE ' TNCT TANGENT-COTANGENT (LONG) '
         PRINT     NOGEN
         DISK
         PRINT     GEN
         SPACE 2
DTAN#    CSECT
*        TANGENT-COTANGENT FUNCTION  (LONG)
*              1. DIVIDE MAGNITUDE OF ARG BY PI/4 TO FIND OCTANT AND
*                   FRACTION.   REDUCED ARGUMENT W IS EITHER THIS
*                   FRACTION OR ITS COMPLEMENT.   THE MAGNITUDE OF
*                   ANSWER IS EITHER TAN(W*PI/4) OR COT(W*PI/4)
*              2. IF /ARG/ IS EQUAL OR GREATER THAN PI*2**50, ERROR1
*              3. IF COTAN IS WANTED, AND IF /ARG/ IS EQUAL OR SMALLER
*                   THAN 2**(-252), ERROR2
*              4. IF ARG IS SO CLOSE TO ONE OF SINGULARITIES OF THE
*                   FUNCTION THAT THE COMBINED EFFECT OF COMPUTATIONAL
*                   ERROR AND MINIMAL INPUT ERROR CAN CAUSE RELATIVE
*                   ERROR OF 1/5, ERROR2 IS GIVEN
       SPACE
         ENTRY     TAN
         ENTRY     COTAN
       ENTRY   DTAN
       ENTRY   DCOTAN
       ENTRY   QDTAN           FOR MODIFICATION OF ERROR CONTROL
       SPACE
GR2    EQU     14              SCRATCH
GRA    EQU     1               ARGUMENT POINTER
USE2   EQU     4                   BASE REG FOR ERROR CONDITION
***  REG 2 AND 3 ARE ALSO USED                                 ***
GRS    EQU     13              SAVE AREA POINTER
GRR    EQU     14              RETURN REGISTER
GRL    EQU     15              LINK REGISTER
FR0    EQU     0               ANSWER REGISTER
FR2    EQU     2               SCRATCH REGISTERS
FR4    EQU     4
FR6    EQU     6
       SPACE
TAN      CALLDUBL  DTAN,1
         SPACE     1
COTAN    CALLDUBL  DCOTAN,1
         SPACE     1
DCOTAN   FENTZ
DCOT   STM     GRR,GRA,12(GRS) SAVE REGISTERS
         CHCKA     0(GRA),REAL8
         L         GR2,0(,GRA)
         CHCKL     4(GRA),REAL8
         CHCKDEF   REAL8,0(GR2)
       MVI     SWICH,X'97'       SET INSTRUCTION AT SWICH TO XI
         LA        GRL,DTAN-DCOTAN(GRL)   ADJUST BASE REGISTER
         USING     DTAN+4,GRL
         B         MERGE
       SPACE
       USING   *,GRL
DTAN     FENTZ
DTN    STM     GRR,GRA,12(GRS) SAVE REGISTERS
         CHCKA     0(GRA),REAL8
         L         GR2,0(,GRA)
         CHCKL     4(GRA),REAL8
         CHCKDEF   REAL8,0(GR2)
       MVI     SWICH,X'91'       SET INSTRUCTION AT SWICH TO TM
       SPACE
MERGE  LD      FR4,ONE         COMMON SECTION.   PRELOAD FR4 WITH 1.0
       LD      FR0,0(GR2)      OBTAIN ABSOLUTE VALUE OF ARGUMENT
       LPER    FR0,FR0           IN FR0, AND ADDRESS OF ARG IN GR2
       CE      FR0,MAX
       BC      10,ERROR1       IF /ARG/ TOO BIG, GIVE ERROR1
       DD      FR0,PIOV4       LET W = /ARG/ DIVIDED BY PI/4
       STE     FR0,OCTNT
       MVC     TEST(1),OCTNT   GIVE CHAR OF QUOTIENT TO TESTING GAUGE
       CER     FR0,FR4
       BC      10,NORML        IF QUOTIENT HAS INTEGER PART, SKIP
       MVI     OCTNT+7,X'00'   IF PURE FRACTION, CLEAR LOW PART OCTNT
       TM      SWICH,X'02'
       BC      8,JOIN            IF TAN ENTRY, OK, SKIP
       CE      FR0,MIN           IF COTAN ENTRY, SKIP ONLY IF
       BC      2,JOIN              THERE IS NO DANGER OF OVERFLOW
       SPACE
       SPACE
*  LI-E   ARGUMENT TOO CLOSE TO A SINGULARITY
ERROR2   $ERROR    (TRAZ,LI,E)                                     V1L5
       SPACE
NORML  LDR     FR2,FR0         IF QUOTIENT HAS INTEGER PART,
       AW      FR2,CH4E          ISOLATE IT IN FR2 (UNNORMALIZED),
       STD     FR2,OCTNT           SAVE IT (LAST BITS ARE FOR OCTANT)
       AD      FR2,CH4E              NORMALIZE IT AND SUBTRACT IT FROM
       SDR     FR0,FR2               FR0 TO OBTAIN FRACTION PART
       TM      OCTNT+7,X'01'
       BC      8,JOIN          IF EVEN OCTANT, MODIFIED ARG W IS READY
       SDR     FR0,FR4         IF ODD OCTANT, W=1-FRACTION
JOIN   LPDR    FR6,FR0         LEAVE W IN FR6, AND + OR -W IN FR0
SWICH  XI      OCTNT+7,X'01'   IF COTAN ENTRY, REVERSE LAST BIT OF
       LD      FR2,B3            OCTANT, THUS REDUCE CASE TO TAN ENTRY
       CE      FR6,UNFLO
       BC      4,SKIP          LET U=WSQ IF W IS AT LEAST 2**-46
       MDR     FR0,FR0           AND COMPUTE TWO POLYNOMIALS
       LDR     FR4,FR0
       AD      FR4,A2            P(W) =W*(A0+A1*U+A2*U**2+U**3)
       MDR     FR4,FR0
       AD      FR4,A1            Q(W) = B0+B1*U+B2*U**2+B3*U**3
       MDR     FR2,FR0
       AD      FR2,B2          IF W IS LESS THAN 2**-46, LET
       MDR     FR2,FR0           U = + OR -W, AND SUBSTITUTE AS
       AD      FR2,B1              FOLLOWS TO AVOID INTERMEDIATE
SKIP   MDR     FR2,FR0               UNDERFLOW OF SQUARING W
       AD      FR2,B0
       MDR     FR0,FR4           P(W) = W*(A0+U)
       AD      FR0,A0            Q(W) = B0+B3*U
       MDR     FR0,FR6
       TM      OCTNT+7,X'03'
       BC      4,COTN
       DDR     FR0,FR2         IF OCTANT IS 0 OR 3 (MOD 4)
       BC      15,SIGN           THE ANSWER IS TAN(W*PI/4)=P(W)/Q(W)
       SPACE
COTN   CD      FR6,TEST        IF OCTANT IS 1 OR 2 (MOD 4), AND IF
       BC      12,ERROR2         W IS TOO SMALL, SINGULARITY TROUBLE
       DDR     FR2,FR0             OTHERWISE, THE ANSWER IS
       LDR     FR0,FR2               COTAN(W*PI/4)=Q(W)/P(W)
       SPACE
SIGN   TM      OCTNT+7,X'02'   IF OCTANT IS 2 OR 3 (MOD 4)
       BC      8,*+6             CHANGE SIGN OF ANSWER
       LCER    FR0,FR0
       TM      0(GR2),X'80'    IF ARGUMENT WAS NEGAT&VE
       BC      8,*+6             CHANGE SIGN OF ANSWER
       LCER    FR0,FR0
EXIT   EQU     *
       L       GRR,12(GRS)     RESTORE GRR=GR2
         SDR       FR6,FR6         ***WATFIV CONVENTION***
       BCR     15,GRR
       SPACE
       SPACE
*  LI-G  ×ARGUMENT×>=PI*2**50
ERROR1   $ERROR    (TRAZ,LI,G)                                     V1L5
       SPACE
OCTNT  DS      D
ONE    DC      X'4110000000000000' 1.0
CH4E   DC      X'4E00000000000000' UNNORMALIZED ZERO FOR SCALING
TEST   DC      X'00000000'         WITH EXPN P GIVEN TO TEST
QDTAN  DC      X'00000008'           VALUE OF 2 WORDS = 2**(4P-53)
PIOV4  DC      X'40C90FDAA22168C2' PI/4
A2     DC      X'C325FD4A87357CAF' -   607.8306953515
A1     DC      X'44AFFA6393159226' + 45050.3889630777
A0     DC      X'C58AFDD0A41992D4' -569309.0400634512  +3F IN ABS
B3     DC      X'422376F171F72282' +    35.4646216610
B2     DC      X'C41926DBBB1F469B' -  6438.8583240077
B1     DC      X'4532644B1E45A133' +206404.6948906228
B0     DC      X'C5B0F82C871A3B68' -724866.7829840012
MAX    DC      X'4DC90FDA'          PI*2**50
MIN    DC      X'02145F31'          (4/PI)*2**-252
UNFLO  DC      X'35400000'          2**-46
       END
