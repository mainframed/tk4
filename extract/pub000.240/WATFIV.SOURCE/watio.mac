         MACRO
&NAME    ERRRR     &N
&NAME    MVC       ERR#2(2),=AL2(UN&N)
         B         COMMON
         MEND
         GBLC      &STATUSF,&STATUSD                               V1L2
         COPY      OPTIONS
         $PUNCH    WATIO                                           DVS2
         PRINT     OFF
          COPY     EXTRN
CDEFN DSECT
         COPY      CDEFN
STARTA   DSECT
         COPY      STARTA
         ERRTABLE
         PRINT     ON,&LIST
CDSECT   DSECT
XLINES   DC        F'58'               THE SYMBOLS NAMED IN THIS DSECT
XLNCOUNT DC        F'0'                ARE IN COMMR
XPAGES   DC        F'100'              MAX NO.0F PAGES
XPGCOUNT DC        F'0'                CURRENT NO. OF PAGES
XTIME    DC        F'0'                MAX TIME (RUN-TIME)
XPUNCHSW DC        X'0'                DID WE USE PUNCH SWT?
         SPACE     5                                               V1L4
***********************************************************************
*         WATFIV'S INPUT OUTPUT ROUTINE
*    FUNCTIONS:
*       1. PERFORM BOTH COMPILE AN RUN TIME INPUT OUTPUT ON THE
*          THE INPUT UNIT(&READ) AND OUTPUT UNIT(&PRINT).
*          THE QSAM ACCESS METHOD.
*       2. PROVIDE THE NECESSARY LINKAGE TO PERFORM SEQUENTIAL I/0
*          USING IBM'S ROUTINE(IHCFIOSH) AND DIRECT ACCESS I/O
*          USING IBM'S ROUTINE(IHCDIOSE).
***********************************************************************
*        CALLING SEQENCE AND INPUTS TO WATIO
*
*                   L      R1,=A(WATIO)
*                   LA     R2,DSRN          SEE BELOW
*                   BALR   R0,R1
*                   DC     X'OPERATION CODE'
*                   DC     X'I/O TYPE'
*         WHERE I/O TYPE IS:
*             X'00' --  NON-FORMATTED  INPUT
*             X'OF' --  NON FORMATTED OUTPUT
*             X'F0' --  FORMATTED INPUT
*             X'FF' --  FORMATTED OUTPUT
*         AND WHERE OPERATION CODE IS:
*             0 -- FOR AN INITIAL CALL TO READ OR WRITE
*             1 -- FOR INPUT
*             2 -- FOR OUTPUT
*             3 -- FOR CONTROL(BACKSPACE-REWIND- ENDFILE)
*             4 -- FOR CLOSE(FIOCS AND/OR DIOCS)
*             5 -- FOR CLOSE OF READER AND PRINTER
*             6 -- FOR OPEN OF READER AND PRINTER
***********************************************************************
         EJECT
WATIO    CSECT
         STATUS    DIOCS#                                          V1L2
&STATUSD SETC      '&STATUS'                                       V1L2
         STATUS    FIOCS#                                          V1L2
&STATUSF SETC      '&STATUS'                                       V1L2
         ENTRY     WATDIOCS,WATDFILE,WATFIOCS
         ENTRY     X@FIOC,XADIOCS,XAIBCENT,ERR#2
         USING     WATFIOCS,R1
         PRINT     NOGEN
WATFIOCS ST        R13,GSAVE+4           STORE CALLER'S REG 13
         STM       R14,R12,GSAVE+12      SAVE HIS REG'S
         LA        R13,OSAVE             SET UP OUR SAVE AREA
         LR        R9,R1                 SET UP A BASE REGISTER
         MVI       XFDSWT,C'F'      FOR COMPILE TIME
         DROP      R1
         USING     WATFIOCS,R9
         ST        R2,PARAMS        SAVE DSRN
         LR        R4,R0            PARAMATER LIST ADDR
         SR        R3,R3
         IC        R3,0(R4)         GET I/O CODE
         SLA       R3,2             TIMES 4 FOR JUMP TABLE
         B         TAB(R3)          AWAY TO PROCESS REQUEST
         SPACE     2
TAB      B         INIT2            INIT ENTRY FOR READ OR WRITE
         B         GET1             READ
         B         PUT1             WRITE
         B         CONTROL
         STATUS    FIOCS#
         AIF       ('&STATUS' NE 'DISK').GGG1
         B         GFIOCS1             GO TO FIOCS TO CLOSE ITS FILES
         AGO       .GGG2
.GGG1    B         GFIOCS
.GGG2    B         CLOSE              OPEN READER AND PRINTER
         B         GOPEN               OPEN READER AND PRINTER
         EJECT
***********************************************************************
*        INPUT OUTPUT INITIALIZER                                     *
*        FOR READ AND WRITE ONLY                                      *
*        INPUTS:                                                      *
*         - UNITSAVE CONTAINS THE UNIT NUMBER                         *
*         - 1(R4) CONTAINS I/O TYPE CODE                              *
*        OUTPUTS:                                                     *
*         - REGISTER 2 CONTAINS THE ADDRESS OF A BUFFER               *
*             (FILLED IF INPUT --- TO BE FILLED IF OUTPUT)            *
*         - REGISTER 3 CONTAINS THE BUFFER LENGTH                     *
*        TESTS:                                                       *
*         - INVALID USE OF UNIT &READ AND &PRINT                      *
*         -   (E.G. READ (6,...        )                              *
*         - IF THE &RDONLY OPTION HAS BEEN SET TO 'USE' THEN      V1L5*
*           ATTEMPTING TO WRITE ON A READ-ONLY FILE WILL          V1L5*
*           BE DIAGNOSED WITH A UN-P MESSAGE.                     V1L5*
***********************************************************************
         SPACE     3
INIT2    MVC       UNITSAVE(1),3(R2)   SAVE UNIT NO. FOR LATER ENTRY
         AIF       ('&RDONLY' EQ 'OMIT').WAT00                     V1L5
         IF        (UNITSAVE,LT,&READSTR),INIT3                    V1L5
         IF        (UNITSAVE,GT,&READEND),INIT3                    V1L5
         TM        1(R4),X'0F'         READ OPERATION?             V1L5
         BZ        INITGET             YES -> PROCEED              V1L5
         ERRRR     P                   NO -> ATTEMPT TO WRITE      V1L5
INIT3    DS        0H                  ON READ ONLY FILE           V1L5
.WAT00   ANOP                                                      V1L5
         L         R15,=V(XLINES)                                  V1L5
         USING     CDSECT,R15                                      V1L5
         MVI       XPUNCHSW,X'00'       TURN PUNCH SWITCH OFF      V1L5
         DROP      R15                                             V1L5
         TM        1(R4),X'0F'         READ OR WRITE
         BZ        INITGET             IT'S A READ
INITPUT  IF       (UNITSAVE,NE,&PRINT),INITPUT1   IS UNIT PRINTER?
         LA        R3,133              LENGHT  OF PRINTER BUFFER
         L         R2,MYBUFF           BUFFER  ADDR
         B         GIORET              AND RETURN TO CALLER
INITPUT1 IF       (UNITSAVE,EQ,&READ),GERRUN9  IS UNIT READER?
         AIF       ('&VM' NE 'USE').VMIO2                          VM1
         IF        (UNITSAVE,NE,&TERM),INITPUT2  TERMINAL?         VM1
         LA        R3,130              LENGTH OF TERM BUFFER       VM1
         LA        R2,VMBUFOUT         ADDR OF TERM BUFFER         VM1
         B         GIORET              RETURN TO CALLER            VM1
INITPUT2 IF        (UNITSAVE,NE,&PUNCH),GFIOCS  IS UNIT PUNCH?     VM1
         AGO       .VMIO3                                          VM1
.VMIO2   ANOP                                                      VM1
         IF        (UNITSAVE,NE,&PUNCH),GFIOCS  IS UNIT PUNCH?
.VMIO3   ANOP                                                      VM1
         L         R15,=V(XLINES)      ADDR OF CONTROL BLOCK FOR
         USING     CDSECT,R15          LINE AND PAGE CONTROL
         MVI       XPUNCHSW,X'FF'      TURN ON PUNCH SWITCH
         B         GFIOCS              OFF TO FIOCS
         DROP      R15
GERRUN9  ERRRR     9                   SET CODE FOR ERROR UN9
INITGET  IF        (XEXECSW,ON),INITGET1  COMPILE OR RUN TIME?
         MVI       INHIBIT,0           SET OFF ERROR SWT
INITGET1 IF        (UNITSAVE,EQ,&READ),GET          READER?
         IF        (UNITSAVE,EQ,&PRINT),GERRUN9     PRINTER?
         IF        (UNITSAVE,EQ,&PUNCH),GERRUN9     PUNCH?
         AIF       ('&VM' NE 'USE').VMIO4                          VM1
         IF        (UNITSAVE,EQ,&TERM),GTGET        TERMINAL?      VM1
.VMIO4   ANOP                                                      VM1
         B         GFIOCS               NO - GO TO FIOCS
         EJECT
***********************************************************************
*        INPUT ROUTINE FOR &READ UNIT                                 *
*        IF SEQUENTIAL INPUT REQUIRED GO TO FIOCS                     *
*        ELSE USE THE QSAM ACCESS METHOD TO READ A CARD               *
*        PLACE ADDR OF CARD IN REGISTER 2 AND LENGHT IN REGISTER 3    *
***********************************************************************
         SPACE     2
         AIF       ('&VM' NE 'USE').VMIO6                          VM1
GET1     IF        (UNITSAVE,EQ,&TERM),GTGET   TERMINAL READ       VM1
         IF        (UNITSAVE,NE,&READ),GFIOCS  OFF TO FIOCS        VM1
         AGO       .VMIO7                                          VM1
.VMIO6   ANOP                                                      VM1
GET1     IF        (UNITSAVE,NE,&READ),GFIOCS    OFF TO FIOCS
.VMIO7   ANOP                                                      VM1
GET      IF        (INHIBIT,OFF),GET2 TRYING TO READ AFTER END-OF-FILE?
         ERRRR     5   SET ERROR CODE FOR UN5
GET2     MVI       GERRSW,XOFFLAG    TURN OFF I/O ERR SWT
         AIF       ('&OMR' EQ 'OMIT').WNOOMR1                      V1L3
         LM        R3,R5,ARRAY                                     V1L3
.WNOOMR1 ANOP                                                      V1L3
         AIF   (      &DVSD      ).GETDOS                          DVS1
GETAGAIN EQU       *                                               V1L4
         AIF       ('&EXCP' EQ 'NO').WAT01                         UOW
         IF        (WDEBUGSW,EQ,X'FF'),DBGREAD                     UOW
.WAT01   ANOP                                                      UOW
         GET       FT05F001            OK READ A CARD              V1L4
         TS        CONCATSW            START OF NEW CONCATENATION? V1L1
         BZ        GETAGAIN            RE-READ IF YES              V1L1
         AGO   .GETOS                                              DOS2
.GETDOS  ANOP                                                      DOS2
GETAGAIN GET       IJSYSIN             OK READ A CARD              DOS2
         LR        R1,R2               GET BUFFER ADDR             DOS2
.GETOS   ANOP                                                      DOS2
         IF        (GERRSW,NE,XOFFLAG),COMMONO   ERROR?
         LR        R2,R1              AND THE BUFFER ADDR
         AIF       ('&EXCP' EQ 'NO').WAT02                         UOW
READOK   EQU       *                                               UOW
.WAT02   ANOP                                                      UOW
         AIF       ('&OMR' EQ 'OMIT').WNOOMR                       V1L2
         CLI       1(R2),X'28'         AN OMR CARD ?               V1L3
         BNE       NOOMR               TAKE BRANCH IF NOT          V1L3
*./      DELETE SEQ1=01361330,SEQ2=01361380                        V1L5
         TM        KOMPSW,XOMRSW                                   V1L5
         BNO       NOOMR                                           V1L5
         MVI       WADCON,0            SET FOR KP=26 FOR NOW       V1L3
         CLI       XMODEKP,0           IS IT 026 ?                 V1L3
         BE        WKP026              BRANCH IF SO                V1L3
         MVI       WADCON,6            SET TOP BYTE FOR 029        V1L3
WKP026   EQU       *                                               V1L3
         L         R15,WADCON          GET ADDR OF OMR             V1L3
         BALR      R14,R15             OFF TO OMR                  V1L3
         LTR       R15,R15             EXTENDED CARD?              V1L3
         BNZ       OMRDONE             NO                          V1L3
         SR        R3,R3               YES                         V1L3
         B         GETAGAIN                                        V1L3
OMRDONE  LA        R2,OMRBUF                                       V1L3
NOOMR    EQU       *                                               V1L3
.WNOOMR  ANOP                                                      V1L2
         LA        R3,80                                           V1L3
         AIF       ('&HASPBM' NE 'YES').NOHASP                     V1L4
         CLC       =C'// ',0(R2)       SHOULD WE IGNORE // CARDS   V1L4
         BE        GETAGAIN            READ ANOTHER CARD IF SO     V1L4
.NOHASP  ANOP                                                      V1L4
         IF        (XEXECSW,OFF),GIORET   COMPILE OR RUN TIME?
         CLC       0(L'XCONTROL,R2),XCONTROL IS IT A CONTROL CARD? V1L4
         AIF       ('&CONTROL'(1,1) EQ '&CONTROL').NOCTRL          V1L4
         BE        CTRLCHAR            IT'S A CONTROL CHAR         V1L4
         CLI       0(R2),C'&XCTRL2'    CHECK FOR $ ALSO            V1L4
.NOCTRL  ANOP                                                      V1L4
         BNE       GIORET              NO CONTROL CHAR FOUND       V1L4
CTRLCHAR EQU       *                   EOF ENCOUNTERED             V1L4
         MVI       INHIBIT,X'FF'       YES - TURN ON INHIBIT SWITCH
         MVI       GERRSW,XCNTFLAG     SET ERROR FLAG
         MVC       ERR#2(2),=AL2(UN0)
         B         COMMONO             AND TAKE THE ERR EXIT
         AIF       ('&OMR' EQ 'OMIT').WNOOMX                       V1L2
         CNOP      0,4                 PAD IF REQUIRED             V1L2
WADCON   DC        AL1(0),VL3(WATOMR)  ADDR OF OMR                 V1L2
ARRAY    DC        A(1),A(OMRBUF),A(OMREND-17)                     V1L3
OMRBUF   DC        80CL1' '                                        V1L3
OMREND   EQU       *                                               V1L3
.WNOOMX  ANOP                                                      V1L2
         AIF       ('&EXCP' EQ 'NO').WAT05                         UOW
DBGREAD  EXCP      READIOB       GET A CARD                        UOW
         WAIT      ECB=READECB          WAIT FOR COMPLETION        UOW
         LA        R2,READBUF           GET ADDR OF READ BUFFER    UOW
         TM        READECB,X'7F' ALL OK ?                          UOW
         BO        READOK         BRANCH IF OK                     UOW
         CLI       READECB,X'41'  I/O ERROR ?                      UOW
         BNE       PRMIOER        BRANCH TO I/O ERROR ROUTINE      UOW
         TM        READIOB+12,X'01' EOF ?                          UOW
         BO        ENDFILE        TAKE EOF EXIT                    UOW
PRMIOER  WTO       'WATFIV I/O ERROR'                              UOW
         CLI       IORECUR,X'80'       HAVE WE BEEN HERE BEFOR     UOW
         BE        ABEND               YES                         UOW
         MVI       IORECUR,X'80'       NO SET SW                   UOW
         B         GIORET              RETURN                      UOW
ABEND    ABEND     0400,DUMP                                       UOW
IORECUR  DC        X'00'                                           UOW
.WAT05   ANOP                                                      UOW
         EJECT
***********************************************************************
*        DO BACKSPACE OR REWIND OR ENDFILE OPERATIONS                 *
*        TESTS:                                                       *
*         -TEST FOR CONTROL OPERATION ON &READ OR &PRINT OR &PUNCH    *
***********************************************************************
         SPACE     2
CONTROL  MVC        UNITSAVE(1),3(R2)      SAVE UNIT NUMBER
         IF       (3(R2),EQ,&READ),CONTROL1    OPERATION ON READER?
         IF       (3(R2),EQ,&PRINT),CONTROL1   OPERATION ON PRINTER?
         IF       (3(R2),NE,&PUNCH),GFIOCS     OPERATION ON PUNCH?
CONTROL1 ERRRR     4                   SET ERROR CODE FOR UN4
         EJECT
***********************************************************************
*        CLOSE ROUTINE                                                *
***********************************************************************
         AIF   (      &DVSD      ).CLOSDOS                         DVS1
CLOSE    EQU       *                                               V1L4
         AIF       ('&EXCP' EQ 'NO').WAT06                         UOW
         IF        (WDEBUGSW,EQ,X'FF'),DEBGCLOS  IN DEBUG MODE ?   UOW
.WAT06   ANOP                                                      UOW
         CLOSE     ,MF=(E,QSAMLIST)        CLOSE RDR AND PTR       V1L4
         LA        R5,FT05F001         GET ADR OF RDR POOL         V1L2
         BAL       R4,FREEPOOL         FREE RDR POOL               V1L2
         LA        R5,FT06F001         GET ADR OF PTR POOL         V1L2
         BAL       R4,FREEPOOL         FREE PTR POOL               V1L2
         B         GIORET              RETURN TO CALLER
         EJECT
FREEPOOL FREEPOOL  (R5)                FREE BUFFER POOL            V1L2
         AGO   .CLOSOS                                             DOS2
.CLOSDOS ANOP                                                      DOS2
CLOSE    CLOSE     IJSYSIN,IJSYSLS     CLOSE RDR AND PTR           DOS2
.CLOSOS  ANOP                                                      DOS2
         BR        R4                  RETURN TO CALLER            V1L2
         AIF       ('&EXCP' EQ 'NO').WAT07                         UOW
DEBGCLOS CLOSE     ,MF=(E,DEBGLIST)        CLOSE RDR AND PTR       UOW
         B         GIORET                  RETURN TO CALLER        UOW
.WAT07   ANOP                                                      UOW
         SPACE     2
***********************************************************************
*        OPEN ROUTINE                                                 *
***********************************************************************
         AIF       (&DVSD).GOPNDOS                                 DVS1
GOPEN    EQU       *                                               V1L4
         AIF       ('&EXCP' EQ 'NO').WAT04                         UOW
         L         R1,XSAVER+4         LOAD SAVE AREA              UOW
         L         R1,24(R1)           GET REG 1                   UOW
         L         R1,0(R1)            GET POINTER TO PARM         UOW
         CLC       2(5,R1),=C'DEBUG'                               UOW
         BE        DEBGOPEN                                        UOW
.WAT04   ANOP                                                      UOW
         OPEN      ,MF=(E,QSAMLIST)    OPEN RDR AND PRINTER       V1L4
         OI        DCBOFLGS-IHADCB+FT05F001,X'08' 'UNLIKE CONCATS  V1L1
         PUT       FT06F001            GET ADDRESS OF A BEFFER
         AIF       ('&EXCP' EQ 'NO').WAT08                         UOW
OPENOK   EQU       *                                               UOW
.WAT08   ANOP                                                      UOW
         AGO   .GOPNOS                                             DOS2
.GOPNDOS ANOP                                                      DOS2
GOPEN    OPEN      IJSYSIN,IJSYSLS     OPEN RDR AND PTR            DOS2
         TM    IJSYSLS+42,X'20'        IS SYSLST ASSIGNED TO DISK  DOS2
         BO        SYSLSTD             BR IF YES                   DOS2
         MVI       SYSLA+3,133         CHANGE BUFFER LENGTH IN LA IDOS2
         MVI       IJSYSLS+119,133     SET CCW DATA LENGTH FOR TAPEDOS2
         TM        IJSYSLS+42,X'10'    IS SYSLST ASSIGNED TO TAPE? DOS2
         BO        SYSLSTD             BR IF YES                   DOS2
         MVI       IJSYSLS+119,132     SET CCW DATA LEN FOR PRINTERDOS2
SYSLSTD  EQU       *                                               DOS2
         LR        R1,R2               GET BUFFER ADDR             DOS2
.GOPNOS  ANOP                                                      DOS2
         ST        R1,MYBUFF           SAVE ADDR FOR LATER
         ST        R1,XBUFFER          FOR RUN TIME
         MVI       0(R1),X'40'         SET UP FOR BLANKING BUFFER
         MVC       1(132,R1),0(R1)     NOW BLANK BUFFER
         B         GIORET              RETURN TO CALLER
         AIF       ('&EXCP' EQ 'NO').WAT09                         UOW
DEBGOPEN MVI       WDEBUGSW,X'FF'                                  UOW
         OPEN      ,MF=(E,DEBGLIST)                                UOW
         LA        R1,PRINTBUF                                     UOW
         B         OPENOK                                          UOW
.WAT09   ANOP                                                      UOW
         EJECT
***********************************************************************
*        OUTPUT ROUTINE                                               *
*        REG 2 POINTS TO THE BUFFER TO BE PRINTED.REG 3 HAS LENGTH    *
*        CHECK FOR A VALID CONTROL CHARACTER
*          (INSERT BLANK IF INVALID)
*        INCREASE LINE COUNT AND CHECK FOR A NEW PAGE
*        ISSUE AN ERROR IF TOO MANY PAGES
*        THE 'GET' RETURNS THE ADDROF A NEW BUFFER IN REG 2
*        SO SAVE IT FOR LATER
***********************************************************************
         SPACE     2
         AIF       ('&VM' NE 'USE').VMIO8                          VM1
PUT1     IF        (UNITSAVE,EQ,&TERM),GTPUT   TERMINAL OUTPUT     VM1
         IF        (UNITSAVE,NE,&PRINT),GFIOCS OFF TO FIOCS        VM1
         AGO       .VMIO9                                          VM1
.VMIO8   ANOP                                                      VM1
PUT1     IF        (UNITSAVE,NE,&PRINT),GFIOCS   OFF TO FIOCS
.VMIO9   ANOP                                                      VM1
PUT      L         R15,=V(XLINES)
         L         R2,MYBUFF           GET BUFFER ADDRESS IN R2
         USING     CDSECT,R15
         LA        R4,TABLE            SET R4 AT BEGINNING OF TABLE
         MVI       XPUNCHSW,X'00'      TURN PUNCH SWITCH OFF       V1L5
         MVC     ENDCC(1),0(R2)        SAVE CONTROL CHAR
PLOOP    CLC     0(1,R4),0(R2)         HAVE WE GOT IT THE TABLE
         BE        PGOTIT              YUP
         LA      R4,3(,R4)             NOPE SO BUMP TO NEXT ENTRY
         B         PLOOP               AND BACK TO TRY AGAIN
PGOTIT   IF        (0(R2),EQ,C'1'),PSKIP                           V1L2
         SR        R3,R3                                           V1L2
         IC      R3,2(,R4)             NUMBER OF LINES TO BUMP
         MVC     0(1,R2),1(R4)         GET CONTROL CHAR TO BUFFER
         A         R3,XLNCOUNT         CURRENT LINE COUNT
         ST        R3,XLNCOUNT         SAVE IT FOR NEXT TIME
         C         R3,XLINES           SHOULD WE SKIP TO NEW PAGE?
         BL        PUT4                BRA IF NOT                  V1L3
         TM        KOMPSW,LINES0        LINES=0?                   V1L5
         BO        PLNO                 BRANCH IF YES              V1L5
         MVI       0(R2),C'1'                                      V1L2
PLNO     DS        0H                                              V1L5
PSKIP    XC        XLNCOUNT(4),XLNCOUNT                            V1L2
         IF        (XEXECSW,OFF),PUT4  COMPILE OR RUN TIME?
         L         R3,XPGCOUNT   INCREASE PAGE COUNT IF IN EXECUTION
         LA        R3,1(,R3)           BUMP NO. OF PAGES
         ST        R3,XPGCOUNT         SAVE IT AWAY
         C         R3,XPAGES           TOO MANY PAGES ?
         BNE       PUT4                NO S CONTINUE
         XC        XPGCOUNT(4),XPGCOUNT    SET # OF PAGES TO ZERO
         AIF       ('&ONERROR' EQ 'OMIT').XERRNO                   V1L3
         MVI       XERRSW,OFF          DO NOT ALLOW HIM MORE PAGES V1L3
.XERRNO  ANOP                                                      V1L3
         ERRRR     7                   SET ERROR CODE FOR UN7
         DROP      R15
PUT4     MVI       GERRSW,XOFFLAG       TURN OFF ERROR SWT
         CLI       XMODEKP,0            BCDID MODE?                V1L5
         BNE       NOTRNS               NO -> TRANSLATE NOT REQ'D  V1L5
         TR        0(132,R2),BCDTBL     TRANSL BCD OUTPUT BUFFER   V1L5
NOTRNS   DS        0H                                              V1L5
         AIF       ('&EXCP' EQ 'NO').WAT10                         UOW
         IF        (WDEBUGSW,EQ,X'FF'),DEBGPUT                     UOW
.WAT10   ANOP                                                      UOW
         AIF   (      &DVSD      ).PUT4DOS                         DVS1
         PUT       FT06F001             PRINT THE LINE
         AIF       ('&EXCP' EQ 'NO').WAT11                         UOW
PUT4GO   EQU       *                                               UOW
.WAT11   ANOP                                                      UOW
         AGO   .PUT4OS                                             DOS2
.PUT4DOS ANOP                                                      DOS2
         PUT       IJSYSLS             PRINT THE LINE              DOS2
         LR        R1,R2               GET BUFFER ADDR             DOS2
.PUT4OS  ANOP                                                      DOS2
         ST        R1,MYBUFF            SAVE ADDR OF NEW BUFFER
         LR        R2,R1                OUTPUT FROM WATIO
         MVI       0(R2),C' '          PROPOGATE CHARACTER
         MVC       1(132,R2),0(R2)     BLANK BUFFER
         AIF       (      &DVSD      ).DOSLA                       DVS1
         LA        R3,133
         AGO       .OSLA                                           DOS2
.DOSLA   ANOP                                                      DOS2
SYSLA    LA        R3,121                                          DOS2
.OSLA    ANOP                                                      DOS2
         IF        (GERRSW,NE,XOFFLAG),COMMONO
         AIF       ('&EXCP' EQ 'NO').WAT12                         UOW
         B         GIORET                  RETURN TO CALLER        UOW
DEBGPUT  MVI       CARCCCCW,X'0B'      SET FOR SPACE 1             UOW
         CLI       XMODEKP,0            BCDID MODE?                UOW
         BNE       NOTRNS               NO -> TRANSLATE NOT REQ'D  UOW
         TR        PRINTLOC(132),BCDTBL   TRNS BCD OUTPUT BUFFER   UOW
NOTRNS   DS        0H                                              UOW
         IF        (0(R2),EQ,C' '),NOSP0  IS IT A BLANK ?          UOW
         IF        (0(R2),NE,C'1'),NOFULL IS A A NEW PAGE ?        UOW
         MVI       CARCCCCW,X'8B'         SET FOR NEW PAGE         UOW
         B         NOSP0                  GO DO THE PRINT          UOW
NOFULL   IF        (0(R2),NE,C'0'),NOSP2  IF IT SPACE 2 ?          UOW
         MVI       CARCCCCW,X'13'         SET FOR SPACE 2          UOW
NOSP2    IF        (0(R2),NE,C'-'),NOSP3  IS IT SPACE 3 ?          UOW
         MVI       CARCCCCW,X'1B'         SET FOR SPACE 3          UOW
NOSP3    IF        (0(R2),NE,C'+'),NOSP0  IS IT A NO SPACE ?       UOW
         MVI       CARCCCCW,X'03'         SET FOR NO SPACE         UOW
NOSP0    EXCP      PRINTIOB               PRINT LINE               UOW
         WAIT      ECB=PRINTECB           WAIT FOR COMPLETION      UOW
         TM        PRINTECB,X'07'         ANY ERRORS ?             UOW
         BNO       PRMIOER                ISSUE I/O ERROR          UOW
         LA        R1,PRINTBUF                                     UOW
         B         PUT4GO                 BACK WE GO               UOW
.WAT12   ANOP                                                      UOW
           EJECT
***********************************************************************
*        RETURN TO CALLER (NORMAL) NO ERRORS                          *
***********************************************************************
GIORET   LM        R13,R1,GSAVE+4      RESET R13, SET R1=CALLING R0
         LM        R14,R0,GSAVE+12     RESET R14 TO R0
         LM        R4,R12,GSAVE+36     RESET R4 TO R12
         B         2(,R1)              RETURN TO CALLER
         AIF       ('&VM' NE 'USE').VMIO5                          VM1
         SPACE     2                                               VM1
*****************TERMINAL READ ROUTINE**************************** VM1
GTGET    EQU       *                                               VM1
         LA        R2,VMBUFIN          GIVE R2 ADDR OF BUFFER      VM1
         LA        R3,130              GIVE R3 BUFFER LENGTH       VM1
         TGET      VMBUFIN,130         READ LINE INTO BUFFER       VM1
         L         R4,=V(VMSTRLEN)                                 VM1
         ST        R1,0(R4)            SAVE STRING LEN FOR VMDEBUG VM1
         BCTR      R1,0                DECREMENT LENGTH FOR EXEC.  VM1
         EX        R1,TGETUPCS         CONVERT ALPHA TO UPPER CASE VM1
         B         GIORET              RETURN TO CALLER            VM1
TGETUPCS OC        VMBUFIN(*-*),VMBUFOUT   'OR' WITH BLANKS        VM1
         SPACE     2                                               V1L5
*****************TERMINAL WRITE ROUTINE*************************** VM1
GTPUT    EQU       *                                               VM1
         LA        R2,VMBUFOUT         GIVE R2 ADDR OF BUFFER      VM1
         LA        R3,130              R3 GETS BUFFER LENGTH       VM1
         L         R1,=V(VMATTNSW)        FAKE I/O IF ATTN SW ON   VM1
         CLI       0(R1),X'01'            HAS USER HIT ATTN KEY?   VM1
         BE        GTVPUT                 NO MORE OUTPUT           VM1
         TPUT      VMBUFOUT,130        OUTPUT LINE FROM BUFFER     VM1
GTVPUT   DS         0H                                             VM1
         MVI       VMBUFOUT,C' '                                   VM1
         MVC       VMBUFOUT+1(129),VMBUFOUT  BLANK BUFFER          VM1
         B         GIORET              RETURN TO CALLER            VM1
.VMIO5   ANOP                                                      VM1
         EJECT
***********************************************************************
*        SYNAD I/O ERROR END EOF HANDLING ROUTINE FOR &READ AND&PRINT *
***********************************************************************
         SPACE     1
IOERROR  MVI       GERRSW,XSYNFLAG     A SYNAD EXIT
         MVC       ERR#2(2),=AL2(UN2)
         AIF   (      &DVSD      ).IOERSK                          DVS1
         SYNADAF   ACSMETH=QSAM
         MVC       PARMSG+29(61),66(R1)  MOVE MESSAGE TO OUR AREA
         SYNADRLS
.IOERSK  ANOP                                                      DOS2
         BR        R14
ENDFILE  MVI       GERRSW,XENDFLAG       END OF FILE
         MVI       INHIBIT,X'FF'       ERROR SWITCH                V1L5
         MVC       ERR#2(2),=AL2(UN1)    AND  SET CODE
         B         COMMONO               GO TO ERROR EXIT
         EJECT
***********************************************************************
*        WELL HERE'S WHERE WE GO OFF TO FIOCS                         *
***********************************************************************
         AIF       ('&STATUS' NE 'DISK').GFIOCS1
GFIOCS1  L         R1,X@FIOC             ADDR OF FIOCS
         MVI       GERRSW,XOFFLAG
         LR        R4,R0              SAVE RETURN
         MVC       GFIOCS4(2),0(R4)   PARAMATER  LIST
         LTR       R1,R1              IS IT IN CORE
         BZ        GIORET             NO SO RETURN
         BALR      R0,R1              YES SO AWAY
GFIOCS4  DC        H'0'
         B         COMMONF            ERROR RETURN
         XC        X@FIOC,X@FIOC       NOW IT'S NOT IN CORE        V1L4
         B         GIORET              AND RETURN
.GFIOCS1 ANOP
GFIOCS   L         R1,X@FIOC          ADDRESS OF FIOCS# IN R1
         MVI       GERRSW,XOFFLAG     OFF ERROR FLAG
         LR        R4,R0              RETURN ADDR
         MVC       GFIOCS2(2),0(R4)   PARAMETER LSIT
         BALR      R0,R1              AWAY TO FIOCS
GFIOCS2  DC        H'0'                DATA FOR FIOCS
         B         COMMONF             FIOCS NOW HAS TWO RETURNS
GFIOCS3  B         GIORET             RETURN
         EJECT
***********************************************************************
*        ERROR RETURN                 (WATIO WILL EXIT FROM HERE)     *
*        AFTER SETTING ERROR FLAG AND CODE GO TO COMMON EXIT          *
********************************************************************* *
COMMON   MVI   GERRSW,XERRFLAG        SET ON ERROR FLAG
COMMONO  L         15,=V(ERROR#)      ADDR OF ERROR ROUTINE
         L         14,=A(GBACK)       SO WE HAVE A BASE
         LM        4,12,GSAVE+36
         BR        14                  GO PROCESS ERROR
         DROP      9
         EJECT
*********************************************************************
*        DIRECT ACCESS ENTRY                                          *
*        FIRST ENTRY(WATDFILE) IS FOR DEFINE FILE STMT                *
*        SECOND ENTRY(WATDIOCS) IS FOR ALL OTHER DIRECT ACCESS I/O    *
***********************************************************************
         USING     WATDFILE,R15
WATDFILE L         R15,XADIOCS         ADDR OF DEFINE FILE
         BR        R15                 AND AWAY WE GO
         DROP      R15
WATDIOCS LR        R9,R1               SET UP BASE
         USING     WATDIOCS,R9
         LR        R1,R0               ADDR OF PARM LIST
         AIF   (      &NDVSD     ).GDIONZ                          DVS1
         AIF   ('&STATUSD' EQ 'CORE').GDION1                       DOS2
         CLI   0(R1),X'04'        IS IT CLOSE OPERATION            DOS2
         BNE   WNOCLOS            BR IF NO                         DOS2
         MVC   XAIBCENT(4),ZERO   NO MO DIOCS IN CORE              DOS2
         B     2(R1)              GO BYE-BYE                       DOS2
         AGO   .GDIONZ                                             DOS2
.GDION1  ANOP                                                      DOS2
         CLI   0(R1),X'04'        IS IT CLOSE OPERATION            DOS2
         BE        2(R1)               CAN'T CLOSE D-A FILE IN DOS DOS2
.GDIONZ  ANOP                                                      DOS2
WNOCLOS  MVC   GDIOCLST(2),0(R1)  GET PARAMETER LIST               DOS2
         ST        R1,GDIOCSAV         SAVE FOR LATER
         IF        (0(R1),EQ,X'04'),WNOTEST
         L         R1,=A(XDSRN)        POINTS TO DSRN
         IF          (3(R1),EQ,&READ),WERRUNA
         IF          (3(R1),EQ,&PRINT),WERRUNA
         IF          (3(R1),EQ,&PUNCH),WERRUNA
WNOTEST  L         R1,XAIBCENT         GET ENTRY OF DIOCS
         LTR       R1,R1               IS IT IN CORE?
         BZ        GDIOCRET             NO
         BALR      R0,R1               OFF TO DIOCS
GDIOCLST DC        H'0'                PARM LIST
         B         COMMONF             ERROR RETURN
         AIF   (      &DVSD      ).GDIOCZ                          DVS1
         AIF       ('&STATUSD' EQ 'CORE').GDIOCZ                   V1L2
         CLI       GDIOCLST,X'04'      WAS OPERATION A CLOSE?
         BNE       GDIOCRET            NOPE SO RETURN
         XC        XAIBCENT,XAIBCENT   NOW IT'S NOT IN CORE        V1L4
.GDIOCZ  ANOP
GDIOCRET L         R1,GDIOCSAV         RESTORE RETURN ADDR
         B         2(,R1)              RETURN TO CALLER
         AIF       ('&STATUSD' NE 'DISK').GDIOCS1                  V1L2
XADIOCS  DC        A(*-*)             FILLED IN BY LOADER
XAIBCENT DC        A(*-*)             FILLED IN BY LOADER
         AGO       .GDIOCS2
.GDIOCS1 ANOP
XADIOCS  DC        V(DIOCS#)
XAIBCENT DC        V(DIOCS@)
.GDIOCS2 ANOP
GDIOCSAV DC        A(*-*)
GSAVE    DC         2F'0'
         DC          A(OSAVE),15F'0'
OSAVE    DC          F'0',A(GSAVE),16F'0'
MYBUFF   DC        A(*-*)
         AIF       ('&STATUSF' NE 'DISK').GD1                      V1L2
X@FIOC   DC        A(*-*)   ADDRESS OF FIOCS FILLED IN IF LOADED
         AGO       .GD2
.GD1     ANOP
X@FIOC   DC        V(FIOCS#)
.GD2     ANOP
WERRUNA  MVC       ERR#2(2),=AL2(UN8)                              V1L1
         L         R9,=A(WATFIOCS)
         DROP      R9
         USING     WATFIOCS,R9
         B         COMMON
         DROP      R9
         EJECT
***********************************************************************
*        COMMON ERROR EXIT FOR DIOCS,FIOCS,WATIO                      *
*        WE COME FROM IBCOM IF FIOCS OR DIOCS FOUND THE ERROR         *
*        ERR#2 CONTAINS THE WATFIV ERROR CODE                         *
*        PARAMS POINTS TO THE DSRN                                    *
*        GERRSW IS AN ERROR SWITCH                                    *
*        PARMSG CONTAINS THE SYNAD ERROR TEXT IF IT WAS A SYNAD ERROR *
***********************************************************************
COMMONF  BALR      1,0        SET UP BASE REGISTER
         USING     *,1
         L         12,=A(XTART)     IT COULD BE BAD
         LM        5,14,XIOSAVE
GOUT     L          15,=V(ERROR#)  ADDR IN STARTB
         CNOP      0,4
GBACK    BALR      14,15
ERR#2    DC        H'0'                ADDRESS OF ERROR CODE
PARAMS   DC        F'0'
GERRSW   DC        X'00'
ERETURN  DC        AL3(COMMONF)
PARMSG   DC        C'0I/O ERROR   IN LINE          ',78C' '
UNITSAVE DS        X
         DROP      R1
TABLE    DC        0H'0'
         GENCC
INHIBIT  DC        X'00'
PCONTROL EQU       XCONTROL            CONTROL CARD CHARACTER
         AIF   (      &DVSD      ).DOSFILS                         DVS1
         AIF       (&PRINT GT 9).WATWHY1
FT06F001 DCB       DDNAME=FT0&PRINT.F001,MACRF=(PL),DSORG=PS,          C
               SYNAD=IOERROR,EXLST=FT06LIST,RECFM=FBA,             V1L1C
               LRECL=133,EROPT=ACC
         AGO       .WATWHY2
.WATWHY1 ANOP
FT06F001 DCB        DDNAME=FT&PRINT.F001,MACRF=(PL),DSORG=PS,          C
               SYNAD=IOERROR,EXLST=FT06LIST,RECFM=FBA,             V1L1C
               LRECL=133,EROPT=ACC
.WATWHY2 ANOP
         AIF       (&READ GT 9).WATWHY3
FT05F001 DCB       DDNAME=FT0&READ.F001,MACRF=(GL),DSORG=PS,           C
               SYNAD=IOERROR,EODAD=ENDFILE,EXLST=FT05LIST,             C
               LRECL=80,EROPT=SKP,RECFM=FB                         V1L1
         AGO       .WATWHY4
.WATWHY3 ANOP
FT05F001 DCB        DDNAME=FT&READ.F001,MACRF=(GL),DSORG=PS,           C
               SYNAD=IOERROR,EODAD=ENDFILE,EXLST=FT05LIST,             C
               LRECL=80,EROPT=SKP,RECFM=FB                         V1L1
.WATWHY4 ANOP
         DC        0F'0'
FT06LIST DC        X'85'               END OF LIST CODE
         DC        AL3(FT06ROUT)
FT05LIST DC        X'85'
         DC        AL3(FT05ROUT)
         USING     IHADCB,R1
         USING     WATFIOCS,R9
FT05ROUT B         *+8                 1ST TIME SWITCH             V1L1
         MVI       CONCATSW,0          SHOW NEW CONCAT OCCURS      V1L1
         MVI       FT05ROUT+1,NOP      RESET 1ST TIME SWITCH       V1L1
FT06ROUT OC        DCBBLKSI(2),DCBBLKSI  IS BLKSIZE GIVEN?         V1L1
         BNZ       TSTBUFNO            BRANCH IF YES               V1L1
         MVC       DCBBLKSI(2),DCBLRECL  DEFAULT TO LRECL          V1L1
TSTBUFNO CLI       DCBBUFNO,0          IS BUFNO GIVEN?             V1L1
         BNER      R14                 RETURN IF YES               V1L1
         MVI       DCBBUFNO,2          DEFAULT TO 2                V1L1
         BR        R14                                             V1L1
         SPACE     1                                               V1L1
CONCATSW DC        X'FF'                                           V1L1
         SPACE     1                                               V1L1
         $FREE     R1,R4                                           V1L5
         AIF       ('&VM' NE 'USE').VMIO10                         VM1
VMBUFIN  DC        130C' '             TERMINAL INPUT BUFFER       VM1
VMBUFOUT DC        130C' '             TERMINAL OUTPUT BUFFER      VM1
.VMIO10  ANOP                                                      VM1
*                                                                  V1L5
*        TRANSLATE TABLE FOR BCDID SPECIAL CHARACTERS **  )('= **  V1L5
*                                                                  V1L5
BCDTBL   DS        0CL256              TRANSLATE TABLE             V1L5
         DC        16X'40'                                         V1L5
         DC        16X'40'                                         V1L5
         DC        16X'40'                                         V1L5
         DC        16X'40'                                         V1L5
         DC        X'40404040404040404040404B5D4D4E4F'             V1L5
         DC        X'505152535455565758595A5B5C5D5E5F'             V1L5
         DC        X'606162636465666768696A6B4D6D6E6F'             V1L5
         DC        X'707172737475767778797A7E7D7D7E7F'             V1L5
         DC        X'808182838485868788898A8B8C8D8E8F'             V1L5
         DC        X'909192939495969798999A9B9C9D9E9F'             V1L5
         DC        X'A0A1A2A3A4A5A6A7A8A9AAABACADAEAF'             V1L5
         DC        X'B0B1B2B3B4B5B6B7B8B9BABBBCBDBEBF'             V1L5
         DC        X'C0C1C2C3C4C5C6C7C8C9CACBCCCDCECF'             V1L5
         DC        X'D0D1D2D3D4D5D6D7D8D9DADBDCDDDEDF'             V1L5
         DC        X'E0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF'             V1L5
         DC        X'F0F1F2F3F4F5F6F7F8F9FAFBFCFDFE40'             V1L5
         AIF       ('&EXCP' EQ 'NO').WAT20                         UOW
WDEBUGSW  DC       X'00'               DEBUG SWITCH                UOW
DEBGLIST OPEN      (SYSIN,(INPUT),SYSPRINT,(OUTPUT)),MF=L          UOW
PRINTECB DC        F'0'                                            UOW
READECB  DC        F'0'                                            UOW
PRINTIOB DC        F'0'                                            UOW
         DC        A(PRINTECB)                                     UOW
         DC        2F'0'                                           UOW
         DC        A(CARCCCCW),A(SYSPRINT),2F'0'                   UOW
READIOB  DC        F'0',A(READECB)                                 UOW
         DC        2F'0',A(READCCW),A(SYSIN),2F'0'                 UOW
CC       EQU       X'40'                  CHAIN TO NEXT CCW        UOW
SLI      EQU       X'20'                  SUPPRESS LENGTH          UOW
CARCCCCW CCW       *-*,0,CC,1             C C CCW                  UOW
PRINTCCW CCW       1,PRINTLOC,SLI,132     PRINT CCW                UOW
READCCW  CCW       2,READBUF,SLI,80       READ  CCW                UOW
PRINTBUF EQU       FT06F001+80                                     UOW
READBUF  EQU       FT06F001            NOTE: ON FULL WORD          UOW
SYSPRINT DCB       DDNAME=FT06F001,MACRF=E,DEVD=PR                 UOW
PRINTLOC EQU       PRINTBUF+1                                      UOW
SYSIN    DCB       DDNAME=FT05F001,MACRF=E,DEVD=RD                 UOW
.WAT20   ANOP                                                      UOW
         LTORG
QSAMLIST OPEN      (FT05F001,(INPUT),FT06F001,(OUTPUT)),MF=L       V1L2
         AGO   .ENDCARD                                            DOS2
.DOSFILS ANOP                                                      DOS2
READBLK1 DC        CL80' '                                         DOS2
READBLK2 DC        CL80' '                                         DOS2
PRTBLK1  DC        CL133' '                                        DOS2
PRTBLK2  DC        CL133' '                                        DOS2
IJSYSIN  DTFDI DEVADDR=SYSIPT,                                     DOS2*
               RECSIZE=80,                                         DOS2*
               IOAREA1=READBLK1,                                   DOS2*
               IOAREA2=READBLK2,                                   DOS2*
               IOREG=(2),                                          DOS2$
               EOFADDR=ENDFILE,                                    DOS2*
               MODNAME=IOMOD,                                      DOS2*
               ERROPT=IOERROR,                                     DOS2*
               WLRERR=IOERROR                                      DOS2
IJSYSLS  DTFDI DEVADDR=SYSLST,                                     DOS2*
               RECSIZE=121,                                        DOS2$
               IOAREA1=PRTBLK1,                                    DOS2*
               IOAREA2=PRTBLK2,                                    DOS2*
               IOREG=(2),                                          DOS2$
               MODNAME=IOMOD,                                      DOS2*
               ERROPT=IOERROR,                                     DOS2*
               WLRERR=IOERROR                                      DOS2
         LTORG                                                     DOS2
IOMOD    DIMOD IOAREA2=YES,TYPEFLE=OUTPUT                          DOS2
.ENDCARD ANOP                                                      DOS2
         END
