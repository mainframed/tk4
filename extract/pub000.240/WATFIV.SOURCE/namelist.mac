NAME     TITLE     'NAMELIST     NAMELIST STATEMENT PROCESSOR'
         COPY      OPTIONS
&DECK    SETC      'NAMELIST'
         PRINT     OFF
         $PUNCH    NAMELIST                                        DVS2
         COPY      CDEFN
STARTA   DSECT
         COPY      STARTA
COMMR    DSECT
         COPY      COMMR
         ERRTABLE
         COPY      EXTRN
         PRINT     ON
         PRINT     ON,&LIST
         SPACE     1
         ENTRY     GNAME
         ENTRY     NAMELEND
         AIF       ('&DUMPLST' EQ 'OMIT').NODUM0                   V1L2
         ENTRY     GDUMP                                           V1L2
.NODUM0  ANOP                                                      V1L2
         AIF       ('&ONERROR' EQ 'OMIT').NOERR0                   V1L2
         EXTRN     GOGO                                            V1L2
         ENTRY     ONERR                                           V1L2
.NOERR0  ANOP                                                      V1L2
         SPACE     1
*        THE FOLLOWING IS A RELOCATOR CODE FOR:SET THIS BYTE TO ZERO
*        AND SKIP 8 BYTES
NCODE1   EQU       X'B9'               SKIP 8 BYTES
*        THE FOLLOWING IS A RELOCATOR CODE FOR:REPLACE THIS BYTE WITH
*        THE NEXT BYTE AND EXPAND THE FOLLOWING TWO BYTE SYMBOL TABLE
*        POINTER TO A THREE BYTE ABSOLUTE ADDRESS OF THE VARIABLE
* THUS AL1(CODE),AL1(FLAG),AL2(SYM PTR) BECOMES AL1(FLAG),AL3(VARIABLE)
NCODE2   EQU       X'A3'
         SPACE     1
NAMELIST CSECT
         AIF       ('&ONERROR' EQ 'OMIT').NOERR01                  V1L2
ONERR    CENT      NSAVER                                          V1L2
         BAL       R14,CBALR11         OUTPUT BALR R11,R0          V1L2
         LR        R7,R5               SAVE LOC OF OBJECT CODE     V1L2
         OUTPUT    4,NBRANCH           OUTPUT BRANCH AROUND        V1L2
         BAL       R14,CNOP04          OUTPUT PAD                  V1L2
         MVC       DMPOBJC+1(3),XERRLIST+1 GET OLD PTR             V1L2
         ST        R5,XERRLIST         STORE CURRENT POINTER       V1L2
         OUTPUT    8,DMPOBJC           OUTPUT PTR AND SAVE AREA    V1L2
         BAL       R14,CISN            OUTPUT BALR R11,R12 & ISN   V1L2
         L         R15,=V(GOGO)        GET ADDR OF GOGO            V1L2
         BALR      R14,R15             OF TO GOTO                  V1L2
         ST        R7,CBAR11           SET UP FOR BRANCH AROUND    V1L2
         MVI       XERRSW,ON           SET ONERROR SW ON           V1L2
         MVI       CIFGOTSW,X'00'      TURN GOTO SW OFF            V1L2
         B         ONERRDNE            OFF TO CLEAN UP             V1L2
         $FREE     RP,R13                                          V1L5
.NOERR01 ANOP                                                      V1L2
         AIF       ('&DUMPLST' EQ 'OMIT').NODUM01                  V1L2
GDUMP    BALR      R3,0                SET UP A BASE               V1L2
         USING     *,R3                TELL ASSEMBLER              V1L2
         MVI       DMPLETSW,ON         TURN ON LOCAL DUMPLIST SW   V1L2
         MVI       XDUMPSW,ON          TURN ON GLOBAL DUMPLIST SW  V1L2
         $FREE     R3                  DROP BASE REG               V1L5
.NODUM01 ANOP                                                      V1L2
         SPACE     1
         USING     STAK,RS
GNAME    CENT      NSAVER
         LA        R8,CRET             R8 HOLDS ERROR RETURNS
         IF        (SCODE,NE,PHI),NLERRNA2
         LA        R8,NLTERMST         RESET ERROR RETURN
***   SET UP R7 IN CASE OF AN ERROR BEFORE A HEADER IS OUTPUT
         LA        R7,NSAVER-(NNUMENT-NHEADER)
         BAL       R14,CBALR11         OUTPUT A BALR R11,0
         ST        R5,CBAR11           SAVE STRT OF OBJ CODE FOR STAT
         OUTPUT    4,NBRANCH           OUTPUT BRANCH AROUND
         BAL       R14,CNOP04          ALIGN
         AH        RS,SLINK            BUMP STACK
         IF        (SOPTR,EQ,SLASH),NSLASH
         B         NLERRNA1
         SPACE     1
NTRYVAR  IF        (SCODE,NZ,MNAME),NLERRNA2     TEST FOR
         IF        (SCODE,EQ,PHI),NLERRNA2         A SYMBOL
         LOOKUP    VARIABLE                   LOOKUP THE SYMBOL
         USING     VLIST,R15
         IF        (VB1,VAR),NTSTPARM
NLERRNA3 $ERROR    (NOAC,NL,0,NAMR15),NLBYPASS                     V1L5
NTSTPARM IF        (VB2,ON,PARM),NLERRNA3
         MVC       NENTRYNM(6),VNAME MOVE NAME INTO WORK AREA
         STH       R3,NLSYMPTR         PUT SYM TBL PNTR IN CODE
         LA        R4,1(,R4)           INCREMENT COUNT OF NAMES IN LIST
         LA        R14,NENTRYNM+5      COMPUTE
         LA        R3,NENTRYNM           LENGTH-1
         CLI       ZR14,C' '              OF THIS
         BNE       *+8                     NAME
         BCT       R14,*-8
         SR        R14,R3
         STC       R14,NLNCHAR         STASH IT
**** BECAUSE WE SET THE TYPE, DIMENSION AND COM/EQV BITS IN THE OBJCODE
****    FOR A VARIABLE, THESE CAN NOT BE CHANGED. HENCE NAMELIST
****    STATEMENTS MUST APPEAR AFTER ALL EXPLICIT SPECIFICATIONS
****    OF VARIABLES NAMED IN THEM.
         OI        VB2,TYPE+USAGE      SET TYPE & USAGE BITS
         MVC       NLFLAG(1),VB1       SAVE TYPE AND
         NI        NLFLAG,X'7F'            NO. 0F DIMENSIONS BITS
         IF        (VB2,Z,B2COM+B2EQV),NLOUTVAR  COMMON OR EQUIVALENCE?
         OI        NLFLAG,X'80'        FLAG AS COM/EQV
NLOUTVAR OUTPUT    NENDCODE-NLENTRY,NLENTRY  PUT OUT VAR ENTRY
NLBYPASS AH        RS,SLINK            ADVANCE STACK
         IF        (SOPTR,EQ,COMMA),NTRYVAR
         IF        (SOPTR,NE,SLASH),NTRYTERM
         IF        (CMOSWTCH,ON),NSLASH
         STC       R4,NNUMENT-NHEADER(,R7)   SAVE NAME COUNT IN OBJCODE
NSLASH   IF        (SCODE,NZ,MNAME),NLERRNA2     TEST FOR A SYMBOL
         IF        (SCODE,EQ,PHI),NLERRNA2
         SR        R4,R4               RESET COUNT OF NAMES IN LIST
         LOOKUP    VARIABLE,NLHDROK    LOOKUP NAMELIST NAME
         $ERROR    (NOAC,NL,1,NAMR15,INVAL),NPROCHDR               V1L5
         USING     VLIST,R15
NLHDROK  ST        R5,VADDR            STORE ADDR OF NAMELIST IN SYMTAB
         AIF       ('&DUMPLST' EQ 'OMIT').NOFIX2                   V1L4
         IF        (DMPLETSW,EQ,OFF),NNOFIX                        V1L4
         LA        R0,8(,R5)           FIX UP SYMBOL TABLE PTR     V1L4
         ST        R0,VADDR            STORE ADDR                  V1L4
NNOFIX   EQU       *                                               V1L4
.NOFIX2  ANOP                                                      V1L4
         MVI       VB1,NLST            MARK THE SYMTAB ENTRY
         MVI       VB2,TYPE+USAGE          OF THE NAMELIST NAME
NPROCHDR MVC       NLSTNAME(6),VNAME
         LA        R14,NLSTNAME+5      COMPUTE
         LA        R3,NLSTNAME          LENGTH-1
         CLI       0(R14),C' '           OF THIS NAME
         BNE       *+8
         BCT       R14,*-8
         SR        R14,R3
         C         R14,KF5
         BNL       *+8
         STC       R14,NLSTNAME+5      STASH IT FOR OUTPUTTING
         AIF       ('&DUMPLST' EQ 'OMIT').NODUM2                   V1L2
         IF        (DMPLETSW,NE,X'80'),DMPNONO DO WE HAVE DUMPLIST V1L2
         MVC       DMPOBJC+1(3),XDMPLIST+1 STORE OLD POINTER       V1L2
         ST        R5,XDMPLIST         STORE CURRENT POINTER       V1L2
         OUTPUT    8,DMPOBJC           OUTPUT POINTER & SAVE AREA  V1L2
DMPNONO  EQU       *                                               V1L2
.NODUM2  ANOP                                                      V1L2
         LR        R7,R5               SAVE R7 AT HEADER IN OBJCODE
         OUTPUT    NLENTRY-NHEADER,NHEADER      OUTPUT CODE FOR NAME
         AH        RS,SLINK            ADVANCE STACK
         IF        (SOPTR,EQ,SLASH),NTRYVAR
         B         NLERRNA1
         SPACE     1
NTRYTERM IF        (SOPTR,NE,TERM),NLERRNA1
NLTERMST IF        (CMOSWTCH,ON),NLTERM
         STC       R4,NNUMENT-NHEADER(,R7)    STASH NAME COUNT FOR LIST
         AIF       ('&DUMPLST' EQ 'OMIT').NODUM3                   V1L2
         MVI       DMPLETSW,X'00'      TURN LOCAL SW OFF           V1L2
.NODUM3  ANOP                                                      V1L2
ONERRDNE EQU       *                                               V1L2
         LR        R3,R5               GET CURRENT OBJ CODE ADDR
         L         R4,CBAR11
         SR        R3,R4               COMPUTE BRANCH AROUND
         STH       R3,ZR4+2            PUT BRANCH AROUND ADDR IN PLACE
         AIF       ('&SNAPS' NE 'USE').NLOMIT1
         LR        R3,R5
         SR        R3,R4
         CSNAP     NAMELIST,ZR4,ZR3
.NLOMIT1 ANOP
         SPACE     1
NLTERM   CRET
         SPACE     1
         $FREE     RP,RS,R15                                       V1L5
         SPACE     1
NSAVER   DS        18F
***********************************************************************
*  THIS CODE IS PLACED AT THE START OF EVERY NAMELIST STATEMENT
*        BALR      R11,0
NBRANCH  B         *-*(R11)            BRANCH AROUND NAMELIST TABLE
*        CNOP      0,4(R11)
***********************************************************************
*        THE FOLLOWING IS GENERATED FOR EACH NAMELIST VARIABLE
NHEADER  DC        AL1(NCODE1)    REL CODE FOR CHNGE TO 0 & SKIP 8
NNUMENT  DC        AL1(*-*)            NO OF VAR IN THIS NAMELIST
NLSTNAME DC        CL6'******'         NAMELIST NAME
***********************************************************************
*        THE FOLLOWING IS GENERATED FOR EACH ENTRY IN THE NAMELIST
NLENTRY  DC        AL1(NCODE1)    REL CODE FOR CHNGE TO 0 & SKIP 8
NLNCHAR  DC        AL1(*-*)            NO. OF CHAR IN ENTRY NAME-1
NENTRYNM DC        CL6'******'         NAME OF LIST ENTRY
         DC        AL1(NCODE2)    REL CODE FOR MOVE NEXT HERE,EXPAND
*                            THE FOLLOWING SYM TBL PNTR TO 3 BYTES
NLFLAG   DC        AL1(*-*)            FLAG INDICATING TYPE AND LENGTH
NLSYMPTR DC        AL2(*-*)       REL PNTR TO SYM TBL ENTRY FOR VAR
NENDCODE EQU       *
***********************************************************************
         SPACE     1
*        INVALID DELIMITER
NLERRNA1 $ERROR    (NOAC,SX,3,DELRS,UNEX)                          V1L5
         BR        R8
         SPACE     1
*        MISSING VARIABLE NAME
NLERRNA2 $ERROR    (NOAC,SX,3,SYMRS,UNEX)                          V1L5
         BR        R8
         AIF       ('&DUMPLST' EQ 'OMIT' AND '&ONERROR' EQ 'OMIT').NOD4
DREL5    EQU       X'B4'                                           V1L2
DMPOBJC  DC        A(*-*)              DUMPLIST POINTER            V1L2
         DC        AL1(DREL5),AL3(*-*) SAVE AREA POINTER           V1L2
DMPLETSW DC        X'00'               LOCAL DUMPLIST SW           V1L2
.NOD4    ANOP                                                      V1L2
         SPACE     1
         LTORG                                                     V1L2
NAMELEND EQU       *-1
         END
