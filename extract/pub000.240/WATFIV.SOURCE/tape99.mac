         COPY      OPTIONS
         $PUNCH    TAPE99                                          DVS2
         PRINT     OFF
CDEFN    DSECT
         COPY      CDEFN
STARTA   DSECT
         COPY      STARTA
         COPY EXTRN
         ERRTABLE
         PRINT     ON,GEN
         TITLE     'TAPE99 IN CORE BUFFER PROGRAM '
TAPE99   CSECT
*        TAPE99  --  133-BYTE IN-CORE BUFFER
*                    CAN BE POINTED TO A PROGRAMMED ARRAY
*
*      BUFFER IS CLEARED ON  WRITE  INITIALIZATION , BUT NOT ON
*      ANY READ, OR ON MULTIPLE RECORD WRITES (WHICH SIMPLY
*      OVERWRITE) .  MULTIPLE RECORD READS JUST REREAD.
*      CALL SETB99(A,NCHAR)  TO USE FIRST  NCHAR  C H A R A C T E R S
*              OF ARRAY  A  AS  TAPE99  BUFFER.
*              IF  SETB99  IS NOT CALLED, A  133  CHAR BUFFER IS USED.
*      CALL  RESB99   TO RESTORE USE OF INTERNAL BUFFER
*              AFTER A CALL OF  SETB99 .
*
BASE1   DC        0H'0'
*        ENTRY     BASE1
BUFLEN EQU     133           LENGTH ASSUMED FOR STANDARD BUFFER
MAGIC    EQU   99            NUMBER OF THE MAGIC UNIT
BZ       EQU   0             REGISTER WITH ARGLOC
BR       EQU   1             T H E   BASE REGISTER
GRX      EQU   2             GENERAL REGISTER AS IN IBCOM
GRY      EQU   3             GENERAL REGISTER AS IN IBCOM
INITBIL  EQU   X'00'         FLAG CODE
READ     EQU   X'01'         IDENTIFYING TYPE OF  IOCS  CALL
RITE     EQU   X'02'
         USING *,BR
         ST    GRY,TEMP      SAVE ONE REGISTER
         LR    GRY,BZ        GET CALLER LOCATION IN USEFUL PLACE
         CLI   0(GRY),INITBIL COMPARE FLAG BYTE
         BE    YINIT         AND BRANCH IF IT IS INITIALIZATION
         CLI   0(GRY),RITE   COMPARE AGAINST WRITE REQUEST
         BH    SETOUT        AND MAKE REAL IF CONTROL OR TERM
OUT      L     GRY,TEMP      RESTORE REGISTER WHHEN NOT RET VALUE
OUTX     L     BR,SWITCH     OTHERWISE LOAD
         BR    BR            AND GO.
YINIT    TM    1(GRY),X'F0'  TEST UPPER HALF OF SECOND BYTE
         BO    YFMT          AND BRANCH IF IT  I S  FORMATTED I-O
SETOUT   MVC   SWITCH,REAL   OTHERWISE SET SWITCH FOR REAL  I-O
         B     OUT           AND EXIT
YFMT     TM    0(GRX),X'04'  TEST UNIT FLAG BYTE
         BO    SETOUT        AND EXIT IF SYSTEM UNIT
         TM    0(GRX),X'01'  TEST AGAIN
         BO    VBLU          AND BRANCH IF UNIT IS INDIRECT
         CLC   AMAGIC,1(GRX) COMPARE UNIT NUMBERS
CHECKBIL BNE   SETOUT        GO IF NOT EQUAL
         MVC   SWITCH,FAKE   SET SWITCH TO FAKE  I-O
         TM    1(GRY),X'0F'  TEST SECOND BYTE OF ARGUMENT
         BZ    NOWRIT        SKIP IF IT SAYS  'REEAD'
WRITE    LM    GRX,GRY,BUFADR     GET BUFFER ADDRESS AND LENGTH
         MVI   0(GRX),C' '   PUT A BLANK IN THE FIRST POSITION
         BCTR  GRY,0         SUBTRACT  T W O
         BCTR  GRY,0         TO GET LENGTH -1 -1  IN REGISTER
         EX    GRY,BLANKER   AND PROPAGATE THE BLANK THROUGH BUFFER
NOWRIT   LM    GRX,GRY,BUFADR  LOAD BUFFER ADDRESS AND LENGTH
         LR    BR,BZ         LOAD RETURN
         B     2(BR)         AND GO, (SKIPPING ARGS)
VBLU     L     GRY,0(GRX)    LOAD ADDRESS OF UNIT
         CLC   AMAGIC,1(GRY) AND DO THE COMPARE
         LR    GRY,BZ        RESTORE ADDRESS TO  GRY
         B     CHECKBIL      AND MAKE LIKE UNIT WAS DIRECT
         USING *,BR
LOCAL    L     BR,BASEAD     GET BACK TO HOME BASE
         USING BASE1,BR
         B     NOWRIT        ON READ OR NON-INITIAL WRITE, DON'T PANIC
         ENTRY SETB99
SETB99   FENTZ
         IF  (0(R1),LAST),XERRSR71
         IF  (0(R1),OFF,X'70'),XERRSR41
         L         R3,0(R1)
         CHCKA     4(R1),INTGER4       MAKE SURE SECOND ARG IS INT*4
         L         R2,4(R1)            GET BUFFER COUNT ADDRESS
         L         R2,0(R2)
         CHCKDEF   INTGER4,4(R1)
         CHCKLSR   8(R1)               MAKE SURE THERE ARE ONLY 2 ARGS
         ST        R2,BUFADR+4
         SR        R0,R0
         IC        R0,4(R3)
         A         R0,=F'4'
         STM       R14,R1,SAVE99
         BAL       R1,X1STELT
         USING     *,R1
         LM        R14,R1,SAVE99
         DROP      R1
         USING     SETB99+4,R15
         ST        R3,BUFADR
         C         R2,BUFADR+4
         BNL       0(R14)
         $ERROR    (TRAZ,IO,3)                                     V1L5
         LTORG
         ENTRY     RESB99
RESB99   FENTZ
       MVC     BUFADR(8),RBUFADR  RESTORE PTR TO LOCAL BUFFER
       BR     14             AND RETURN
SAVE99   DC        4F'00'
BLANKER  MVC   1(1,GRX),0(GRX)    EXECUTE TO BLANK BUFFER
TEMP     DS    F             SAVE REGISTER LOCATION
BASEAD   DC    A(BASE1)
SWITCH   DC    A(LOCAL)
FAKE     DC    A(LOCAL)
REAL   DC      V(WATFIOCS)  ADDRESS OF THE REAL WATIO
RBUFADR  DC    A(BFAREA,BUFLEN)   PERMANENT, FOR RESTORING PTR TO LOCA
BUFADR   DC    A(BFAREA,BUFLEN)   ADDRESS AND LENGTH OF BUFFER
BFAREA   DS    CL(BUFLEN)    BUFFER AREA
AMAGIC   DC    AL3(MAGIC)    THE MAGIC UNIT NUMBER
         END
