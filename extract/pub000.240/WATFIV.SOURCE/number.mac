NUMB     TITLE 'NUMBER  ***  CALCOMP CONVERT / PLOT NUMERIC VALUE'
NUMBER   START 0         CALL NUMBER(X,Y,HGT,FNUM,THETA,N)   V097
         EXTRN SYMBOL    COPYRIGHT 1967 CALIFORNIA COMPUTER PRODUCTS
         USING *,15
         B     #ID           SKIP AROUND ID
         DC    AL1(6),CL7'NUMBER'    DECK I.D.
#ID      DS    0H            BRANCH POINT
         DROP  15
         USING NUMBER,8
         STM   14,8,12(13)    SAVE REGISTERS AND     * REGISTER USAGE
         LR    8,15           SET UP BASE REGISTER   * R1 - N
         ST    13,SAVE+4      IN R-8                 * R2 - K(TEMP N)
         LA    7,SAVE                                * R3 - I
         ST    7,8(0,13)                             * R4 - M
         LR    13,7                                  * R8 BASE
         LM    2,7,0(1)       LOAD LINKAGE           * F0 - FNUM
         STM   2,6,LINK       SAVE LINKAGE TO SYMBOL * F2 - AFN
         LD    2,FIX          CLEAR  F2
         LE    0,0(0,5)       PICK UP FNUM
         L     1,0(0,7)       PICK UP N
         LTR   2,1            K=N
         BC    13,NNEGA       BRANCH IF K IS NOT POSITIVE . . . . . .
         CH    2,NINE         IS K GREATER THAN 9                   .
         BC    12,MULT           YES           NO                   .
         LH    1,NINE            N=9            .                   .
         LR    2,1               K=9            .                   .
MULT     ME    0,TEN          FNUM=FNUM*10.0  . .            .      .
         BCT   2,MULT         K=K-1, IF K GREATER 0,REPEAT ABOVE    .
NNEGA    LPER  2,0            AFN=ABS(FNUM)               . . . . . .
         AE    2,RND          ROUND AFN=AFN+0.5
         AW    2,FIX          ADD FIX CONSTANT
         STD   2,TEMP         SAVE FIXED AFN
         BC    8,FZRO         SKIP LARGE NUMBER TEST IF ZERO
         CLC   FIX(4),TEMP    TEST FOR LARGE NUMBER
         BC    7,ERRPRT         BRANCH TO ERRPRT IF TOO LARGE
FZRO     L     2,TEMP+4       PICK UP BINARY INTEGER NUMBER
         LTR   2,2            TEST SIGN BIT
         BC    4,ERRPRT        IF BIT IS 1, BRANCH TO ERRPRT
         CVD   2,TEMP          CONVERT NUMBER TO DECIMAL
         UNPK  DEC(16),TEMP   AND UNPACK INTO
         OI    DEC+15,C'0'     DEC TO DEC+15
         LA    3,DEC+15       I=15
         LTR   2,1            K=N
         BC    13,NNEGB       BRANCH IF K IS NOT POSITIVE . . . . . .
MVDIG    MVC   1(1,3),0(3)    MOVE DEC+I TO DEC+1+I          .      .
         BCTR  3,0            I=I+1                          .      .
         BCT   2,MVDIG        K=K-1,IF K GREATER 0,REPEAT ABOVE     .
NNEGB    MVI   1(3),C'.'      MOVE '.' INTO DEC+1+I             . . .
         LA    3,DEC          I=0
ZRTST    CLI   0(3),C'0'      IS DEC+I A '0'
         BC    7,NTZRO          YES            NO
         LA    3,1(0,3)         I=I+1           .
         BC    15,ZRTST         REPEAT TEST     .
NTZRO    CLI   0(3),C'.'      IS DEC+I A '.'  . .
         BC    7,NTPRD          YES              NO
         BCTR  3,0              I=I-1             .
NTPRD    LTER  0,0            IS FNUM NEGATIVE  . .
         BC    11,FNPOS         YES                    NO
         BCTR  3,0              I=I-1                   .
         MVI   0(3),C'-'        MOVE '-' INTO DEC+I     .
FNPOS    LA    4,DEC+17                                 .
         SR    4,3            M=17-I                . . .
         LTR   2,1            K=N
         BC    13,NNEGC       BRANCH IF K IS NOT POSITIVE . . . . . .
STCNT    ST    4,TEMP         STORE   M    IN CALL TO SYMBOL        .
         ST    3,LINK+12      STORE DEC+I (OR SUBSTITUTE) IN CALL   .
         L     15,SYMAD         TO SYMBOL                           .
         LA    1,LINK                                               .
         BALR  14,15          CALL SYMBOL(X,Y,HGT,**,THETA,***)     .
         L     13,SAVE+4                                            .
         LM    14,8,12(13)    RESTORE REGISTERS                     .
         MVI   12(13),X'FF'   SET COMPLETION FLAG                   .
         BCR   15,14          EXIT                                  .
NNEGC    AR    4,1            M=M+N                             . . .
         CH    4,ONE
         BC    2,STCNT        IF M GREATER THAN 1, BRANCH TO STCNT . .
         BC    4,STZRO        IF M LESS THAN 1,BRANCH . . . . .
         LTER  0,0            IF M EQUAL 1 AND FNUM IS NOT    .
         BC    11,STCNT        NEGATIVE,BRANCH TO STCNT  . . ... . . .
STZRO    LA    3,CONST        SET ADDRESS TO  '-0'            .
         LA    4,2            SET M=2
         LTER  0,0            IF FNUM IS NEGATIVE,
         BC    4,STCNT                             BRANCH TO STCNT . .
         LA    3,CONST+1      SET ADDRESS TO '0'
         LA    4,1            SET M=1
         BC    15,STCNT       BRANCH TO STCNT  . . . . . . . . . . . .
ERRPRT   LA    3,CONST+2      SET ADDRESS TO '**'
         LA    4,2            SET M=2
         BC    15,STCNT       BRANCH TO STCNT  . . . . . . . . . . . .
CONST    DC    C'-0**'
DEC      DS    18C
ONE      DC    H'1'
NINE     DC    H'9'
SAVE     DS    18F
LINK     DS    5F
         DC    X'80'
         DC    AL3(TEMP)
TEN      DC    E'10.0'
RND      DC    E'0.5'
SYMAD    DC    A(SYMBOL)
TEMP     DS    D
FIX      DC    X'4E00000000000000'
         END
