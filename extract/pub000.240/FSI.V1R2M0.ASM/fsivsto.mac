VSTO     CSECT ,
         SAVE  (14,12),,*
*
         LR    R12,R15
         USING VSTO,R12
*
         LA    R11,SAVEA
         ST    R13,4(,R11)
         ST    R11,8(,R13)
         LR    R13,R11
*
         L     R8,0(,R1)          VAR NAME
         L     R9,4(,R1)          VAR LENGTH
         L     R9,0(,R9)
         L     R10,8(,R1)         VAR DATA
*
         L     R11,=V(VARDEFS)
*
         USING VARP,R11
*
FIND010  DS    0H
         CLC   VARPNAME,0(R8)     SEARCH FOR MATCHING NAME
         BE    GETVAR             BRANCH IF FOUND
*
         CLC   VARPNAME,=X'0000000000000000'  EMPTY SLOT?
         BE    FIND020            YES - VAR NOT FOUND
*
         LA    R11,16(,R11)       POINT TO NEXT ENTRY
         B     FIND010            AND LOOP BACK
*
*
FIND020  DS    0H
*
         L     R13,4(,R13)
         LM    R14,R12,12(R13)
         LA    R15,8
         BR    R14
*
*
*----------------------------------------------------------------------
*
*
GETVAR   DS    0H
         CLI   VARPTYPE,1         IS IT NUMERIC ?
         BE    NUMVAR             YES - BRANCH
*
         CLI   VARPTYPE,2         CHAR DATA ?
         BNE   ERROR              NO - DON'T KNOW WHAT IT IS
*
         L     R6,VARPDATA
         LH    R5,VARPLEN
         C     R9,=F'256'         CHECK MAX LENGTH
         BNH   GETV010            BRANCH IF OK
*
         LA    R9,256             TRUNC TO MAX LEN
GETV010  DS    0H
         MVI   0(R6),C' '         START CLEARING TARGET AREA
         LR    R1,R5              COPY LENGTH
         BCTR  R1,0               SUBTRACT ONE
         LTR   R1,R1              CHECK FOR ZERO
         BZ    GETV020            YES - SKIP CLAER
         BCTR  R1,0
         EX    R1,GETVMVC1        CLEAR AREA
*ETVMVC1 MVC   1(0,R6),0(R6)      EXECUTED MOVE
*
GETV020  DS    0H
         LR    R2,R9              AREA LENGTH
         LH    R1,VARPLEN         GET VAR LENGTH
         CR    R1,R2
         BL    GETV030            USE SMALLEST OF SRC / TGT
*
         LR    R1,R2              SET LENGTH
*
GETV030  DS    0H
         BCTR  R1,0               FOR EX
         EX    R1,GETVMVC2
*ETVMVC2 MVC   0(1,R6),0(R10)
*
*
         L     R13,4(,R13)
         LM    R14,R12,12(R13)
         SLR   R15,R15
         BR    R14
*
*
*----------------------------------------------------------------------
*
*
NUMVAR   DS    0H
         LA    R1,0
         ST    R1,ACCUM           CLEAR ACCUMULATOR
*
NUMV010  DS    0H
         CLI   0(R10),C'0'        CHECK FOR VALID NUMBER
         BL    NUMV020
         CLI   0(R10),C'9'
         BH    NUMV020
*
         MH    R1,=H'10'          SHIFT OVER
         SLR   R2,R2
         IC    R2,0(R10)
         N     R2,=A(X'0F')
         AR    R1,R2
         ST    R1,ACCUM           SAVE NEW VALUE
*
         LA    R10,1(,R10)
         BCT   R9,NUMV010         LOOP BACK
*
NUMV020  DS    0H
         L     R1,ACCUM
         L     R2,VARPDATA
         ST    R1,0(,R2)          SAVE NEW VALUE
*
         L     R13,4(,R13)
         LM    R14,R12,12(R13)
         SLR   R15,R15            SET ERROR RC
         BR    R14
*
*
*
*----------------------------------------------------------------------
*
*
ERROR    DS    0H
         L     R13,4(,R13)
         LM    R14,R12,12(R13)
         LA    R15,8              SET ERROR RC
         BR    R14
*
*
GETVMVC1 MVC   1(0,R6),0(R6)      EXECUTED MOVE
GETVMVC2 MVC   0(1,R6),0(R10)
*
*
* ---------------------------------------------------------------------
*
*
ACCUM    DC    F'0'
*
*
         LTORG ,
*
*
SAVEA    DC    18F'0'
*
*
VARP     DSECT ,
VARPNAME DS    CL8
VARPDATA DS    A
VARPLEN  DS    H
VARPTYPE DS    X
         DS    X
VARPELEN EQU   *-VARP
*
*
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         END   ,
