FSIPANL  CSECT ,
         SAVE  (14,12),,*
*
         LR    R12,R15
         USING FSIPANL,R12
*
         LA    R11,SAVEA
         ST    R13,4(,R11)
         ST    R11,8(,R13)
         LR    R13,R11
*
         LR    R11,R1             SAVE INPUT PARMS
*
         MVI   ATTRLIST,0
         MVC   ATTRLIST+1(L'ATTRLIST-1),ATTRLIST
         MVI   ATTRLIST+0,C'%'
         MVI   ATTRLIST+1,ECT$TXTH
         MVI   ATTRLIST+2,C'+'
         MVI   ATTRLIST+3,ECT$TXTL
         MVI   ATTRLIST+4,C'_'
         MVI   ATTRLIST+5,ECT$INL
*
         MVI   ATTRLIST+6,X'FF'
         MVI   ATTRLIST+7,X'FF'
*
         L     R10,0(,R11)        GET PANEL NAME
         MVC   PDSMBR,0(R10)      MOVE IN PANEL NAME
         MVC   PDSDDNM,=CL8'FSIPLIB'  MOVE IN DDNAME
*
         LA    R1,PDSPARM
         L     R15,=V(FSIPDS)     PDS READER
         BALR  R14,R15            OPEN/READ
         B     *+4(R15)           CHECK RC
         B     START000           OK
         B     ERROR01            EOF
         B     ERROR02            ERROR
*
*
START000 DS    0H
         L     R4,PDSREC          POINT TO RECORD
         CLC   =C')ATTR ',0(R4)   ATTR SECTION ?
         BE    ATTR010            YES - BRANCH
*
         CLC   =C')BODY ',0(R4)   BODY SECTION ?
         BE    BODY010            YES - BRANCH
*
         B     ERROR03            ELSE - ERROR
*
*
ATTR010  DS    0H
         LA    R4,6(,R4)          SKIP OVER )BODY
         LA    R5,74              LENGTH
ATTR020  DS    0H
         CLI   0(R4),C' '         SKIP OVER SPACES
         BNE   ATTR030
         LA    R4,1(,R4)
         BCT   R5,ATTR020         LOOP BACK
         B     ATTR040            NO DEFAULT ATTRS...
*
*
ATTR030  DS    0H
         C     R5,=F'12'          OUT OF ROOM?
         BL    ERROR04
*
         CLC   =C'DEFAULT(',0(R4)   WHAT WE EXPECT
         BNE   ERROR05
*
         LA    R4,8(,R4)
         S     R5,=F'8'
         CLC   =C') ',3(R4)       CLOSING PAREN?
         BNE   ERROR06
*
         MVC   ATTRLIST+0(1),0(R4)
         MVC   ATTRLIST+2(1),1(R4)
         MVC   ATTRLIST+4(1),2(R4)
*
ATTR040  DS    0H
         LA    R1,PDSPARM
         L     R15,=V(FSIPDS)     PDS READER
         BALR  R14,R15            OPEN/READ
         B     *+4(R15)           CHECK RC
         B     ATTR050            OK
         B     ERROR07            EOF
         B     ERROR08            ERROR
*
*
ATTR050  DS    0H
         L     R4,PDSREC          POINT TO INPUT RECORD
         LA    R5,80
*
         CLC   =C')BODY ',0(R4)   START OF BODY SECTION?
         BE    BODY010            YES - BRANCH
*
ATTR060  DS    0H
         CLI   0(R4),C' '         SKIP OVER BLANKS
         BNE   ATTR070
         LA    R4,1(,R4)
         BCT   R5,ATTR060
         B     ATTR050            BLANK LINE / IGNORE
*
*
ATTR070  DS    0H
         CLI   1(R4),C' '         MUST BE SINGLE CHAR
         BNE   ERROR09
*
         MVC   ATTRCHAR,0(R4)     SAVE IT
         MVI   ATTRTYPE,ECT$TEXT  DEFAULT IS TEXT
         MVI   ATTRINTN,ECT$LOW   DEFAULT IS LOW
         MVI   ATTRCAPS,C'Y'      DEFAULT IS YES
*
         LA    R4,2(,R4)
         S     R5,=F'2'
         BNP   ATTR210            BRANCH IF DONE
*
ATTR080  DS    0H
         CLI   0(R4),C' '
         BNE   ATTR090
         LA    R4,1(,R4)
         BCT   R5,ATTR080
         B     ATTR210
*
*
ATTR090  DS    0H
         CLC   =C'TYPE(',0(R4)
         BE    ATTR100
*
         CLC   =C'INTENS(',0(R4)
         BE    ATTR140
*
         CLC   =C'CAPS(',0(R4)
         BE    ATTR180
*
         B     ERROR10
*
*
ATTR100  DS    0H
         LA    R4,5(,R4)
         S     R5,=F'5'
         BNP   ERROR11
*
         CLC   =C'TEXT)',0(R4)
         BE    ATTR110
*
         CLC   =C'INPUT)',0(R4)
         BE    ATTR120
*
         CLC   =C'OUTPUT)',0(R4)
         BE    ATTR130
*
         B     ERROR12
*
*
ATTR110  DS    0H
         MVI   ATTRTYPE,ECT$TEXT
         LA    R4,5(,R4)
         S     R5,=F'5'
         BNP   ERROR13
         B     ATTR080
*
ATTR120  DS    0H
         MVI   ATTRTYPE,ECT$IN
         LA    R4,6(,R4)
         S     R5,=F'6'
         BNP   ERROR14
         B     ATTR080
*
ATTR130  DS    0H
         MVI   ATTRTYPE,ECT$OUT
         LA    R4,7(,R4)
         S     R5,=F'7'
         BNP   ERROR15
         B     ATTR080
*
*
ATTR140  DS    0H
         LA    R4,7(,R4)
         S     R5,=F'7'
         BNP   ERROR41
*
         CLC   =C'HIGH)',0(R4)
         BE    ATTR150
*
         CLC   =C'LOW)',0(R4)
         BE    ATTR160
*
         CLC   =C'NON)',0(R4)
         BE    ATTR170
*
         B     ERROR16
*
*
ATTR150  DS    0H
         MVI   ATTRINTN,ECT$HI
         LA    R4,5(,R4)
         S     R5,=F'5'
         BNP   ERROR17
         B     ATTR080
*
ATTR160  DS    0H
         MVI   ATTRINTN,ECT$LOW
         LA    R4,4(,R4)
         S     R5,=F'4'
         BNP   ERROR18
         B     ATTR080
*
ATTR170  DS    0H
         MVI   ATTRINTN,ECT$NON
         LA    R4,4(,R4)
         S     R5,=F'4'
         BNP   ERROR19
         B     ATTR080
*
*
ATTR180  DS    0H
         CLC   =C'OFF)',0(R4)
         BE    ATTR190
*
         CLC   =C'ON)',0(R4)
         BE    ATTR200
*
         B     ERROR20
*
*
ATTR190  DS    0H
         MVI   ATTRCAPS,C'N'
         LA    R4,4(,R4)
         S     R5,=F'4'
         BNP   ERROR21
         B     ATTR080
*
ATTR200  DS    0H
         MVI   ATTRCAPS,C'7'
         LA    R4,3(,R4)
         S     R5,=F'3'
         BNP   ERROR22
         B     ATTR080
*
*
ATTR210  DS    0H
         LA    R1,ATTRLIST
ATTR220  DS    0H
         CLI   0(R1),X'FF'
         BE    ATTR230
*
         LA    R1,2(,R1)
         B     ATTR220
*
*
ATTR230  DS    0H
         MVC   0(1,R1),ATTRCHAR
         MVC   1(1,R1),ATTRTYPE
         OC    1(1,R1),ATTRINTN
*
         MVI   2(R1),X'FF'
         MVI   3(R1),X'FF'
*
*
         B     ATTR040
BODY010  DS    0H
         GETMAIN R,LV=1920    GETMAIN BODY AREA
         ST    R1,PANEL
         LR    R0,R1
         LA    R1,1920
         SLR   R14,R15
         SLR   R15,R15
         MVCL  R0,R14
*
         L     R4,PANEL
         LA    R5,0
*
BODY020  DS    0H
         LA    R1,PDSPARM
         L     R15,=V(FSIPDS)     PDS READER
         BALR  R14,R15            OPEN/READ
         B     *+4(R15)           CHECK RC
         B     BODY030            OK
         B     END010             EOF
         B     ERROR23            ERROR
*
*
BODY030  DS    0H
         L     R2,PDSREC          POINT TO INPUT RECORD
         CLC   =C')END ',0(R2)    END OF PANEL DEF?
         BE    END010             YES -BRANCH
*
         CLC   =C')PROC ',0(R2)
         BE    PROC010
*
         C     R5,=F'24'
         BNL   ERROR23            TOO MANY LINES....
*
*
         MVC   0(80,R4),0(R2)
         LA    R4,80(,R4)
         LA    R5,1(,R5)
         B     BODY020
*
*
PROC010  DS    0H
         GETMAIN R,LV=8000
         ST    R1,ZVARS
         LR    R6,R1
         LR    R0,R1
         L     R1,=A(8000)
         SLR   R14,R15
         SLR   R15,R15
         MVCL  R0,R14
*
         MVC   0(8,R6),=XL8'FFFFFFFFFFFFFFFF'
*
         LA    R1,PDSPARM
         L     R15,=V(FSIPDS)     PDS READER
         BALR  R14,R15            OPEN/READ
         B     *+4(R15)           CHECK RC
         B     PROC020            OK
         B     END010             EOF
         B     ERROR24            ERROR
*
*
PROC020  DS    0H
         L     R4,PDSREC
         LA    R5,80
         CLC   =C')END ',0(R4)
         BE    END010
*
PROC030  DS    0H
         CLI   0(R4),C' '
         BNE   PROC040
         LA    R4,1(,R4)
         BCT   R5,PROC030
         B     PROC010
*
*
PROC040  DS    0H
         CLC   =C'.ZVARS',0(R4)
         BNE   ERROR25
*
         LA    R4,6(,R4)
         S     R5,=F'6'
         BNP   ERROR26
*
PROC050  DS    0H
         CLI   0(R4),C' '
         BNE   PROC070
         LA    R4,1(,R4)
         BCT   R5,PROC050
*
         LA    R1,PDSPARM
         L     R15,=V(FSIPDS)     PDS READER
         BALR  R14,R15            OPEN/READ
         B     *+4(R15)           CHECK RC
         B     PROC060            OK
         B     ERROR27            EOF
         B     ERROR28            ERROR
*
*
PROC060  DS    0H
         L     R4,PDSREC
         LA    R5,80
         B     PROC050
*
*
PROC070  DS    0H
         CLI   0(R4),C'='
         BNE   ERROR29
*
         LA    R4,1(,R4)
         S     R5,=F'1'
         BNP   ERROR30
*
PROC080  DS    0H
         CLI   0(R4),C' '
         BNE   PROC100
         LA    R4,1(,R4)
         BCT   R5,PROC080
*
         LA    R1,PDSPARM
         L     R15,=V(FSIPDS)     PDS READER
         BALR  R14,R15            OPEN/READ
         B     *+4(R15)           CHECK RC
         B     PROC090            OK
         B     ERROR31            EOF
         B     ERROR32            ERROR
*
*
PROC090  DS    0H
         L     R4,PDSREC
         LA    R5,80
         B     PROC080
*
*
PROC100  DS    0H
         CLC   =C'''(',0(R4)
         BNE   ERROR33
*
         LA    R4,2(,R4)
         S     R5,=F'2'
         BNP   ERROR34
*
PROC110  DS    0H
         CLI   0(R4),C' '
         BNE   PROC120
*
         LA    R4,1(,R4)
         BCT   R5,PROC110
*
PROC115  DS    0H
         LA    R1,PDSPARM
         L     R15,=V(FSIPDS)     PDS READER
         BALR  R14,R15            OPEN/READ
         B     *+4(R15)           CHECK RC
         B     PROC118            OK
         B     ERROR35            EOF
         B     ERROR36            ERROR
*
*
PROC118  DS    0H
         L     R4,PDSREC
         LA    R5,80
         B     PROC110
*
*
PROC120  DS    0H
         MVC   WORKVAR,=CL8' '    CLEAR OUT WORK VAR
         LA    R2,WORKVAR
         LA    R3,0               VAR NAME LENGTH
*
PROC130  DS    0H
         C     R3,=F'8'           MAX LENGTH?
         BNL   ERROR37
*
         MVC   0(1,R2),0(R4)      COPY IN CHAR
         LA    R4,1(,R4)
         S     R5,=F'1'
         BNP   PROC140            BRANCH IF END...
*
         LA    R2,1(,R2)
         LA    R3,1(,R3)
*
         CLI   0(R4),C' '         END OF VAR NAME?
         BE    PROC140            YES - BRANCH
*
         CLI   0(R4),C')'         END OF VAR LIST?
         BE    PROC150            YES - BRANCH
         B     PROC130
*
*
PROC140  DS    0H
         MVC   0(8,R6),WORKVAR    MOVE INTO VECTOR LIST
         MVC   8(8,R6),=XL8'FFFFFFFFFFFFFFFF'
         LA    R6,8(,R6)          POINT TO NEXT SLOT
         LTR   R5,R5
         BNP   PROC115
         B     PROC110
*
*
PROC150  DS    0H
         CLC   =C')''',0(R4)
         BNE   ERROR38
*
         MVC   0(8,R6),WORKVAR    MOVE INTO VECTOR LIST
         MVC   8(8,R6),=XL8'FFFFFFFFFFFFFFFF'
*
PROC160  DS    0H
         LA    R1,PDSPARM
         L     R15,=V(FSIPDS)     PDS READER
         BALR  R14,R15            OPEN/READ
         B     *+4(R15)           CHECK RC
         B     PROC170            OK
         B     END010             EOF
         B     ERROR39            ERROR
*
*
PROC170  DS    0H
         L     R4,PDSREC
         CLC   =C')END ',0(R4)
         BE    END010
*
         CLC   =CL80' ',0(R4)
         BNE   ERROR40
*
         B     PROC170
*
*
END010   DS    0H
         MVC   PDSMBR,=CL8'********'
         L     R15,=V(FSIPDS)     PDS READER
         BALR  R14,R15            OPEN/READ
*
         LA    R1,ATTRLIST
         ST    R1,SCRNPARM+0
         L     R1,PANEL
         ST    R1,SCRNPARM+4
         L     R1,ZVARS
         ST    R1,SCRNPARM+8
         L     R1,4(,R11)
         ST    R1,SCRNPARM+12
         MVC   SCRNPARM+16(8),=CL8' '
         L     R1,8(,R11)
         MVC   SCRNPARM+24(8),0(R1)
*
*
*        $VSTO ('ZCMD','1',' ')   CLEAR THE ZCMD VARIABLE
*
*
         LA    R1,SCRNPARM
         L     R15,=V(FSISCRN)
         BALR  R14,R15
*
*
         LA    R6,SCRNPARM
         USING SCR,R6
*
         MVC   AID,SCRAID
         DROP  R6
*
         CLC   =CL8' ',AID       EMPTY ?
         BE    CMD040
*
         MVI   AIDCMD,C' '
         MVC   AIDCMD+1(L'AIDCMD-1),AIDCMD
*
         $VLOC (AID,'128',AIDCMD)
*
         $VLOC ('ZCMD','128',ZCMD)
*
CMD010   DS    0H
         LA    R2,AIDCMD+127
         LA    R3,AIDCMD
*
CMD020   DS    0H
         CR    R2,R3
         BNH   CMD040
*
         CLI   0(R2),C' '
         BNE   CMD030
*
         BCT   R2,CMD020
*
*
CMD030   DS    0H
         LA    R2,2(,R2)
         LR    R1,R2
         SR    R1,R3
         LA    R3,127
         SR    R3,R1
         BCTR  R3,0
         EX    R3,CMDMVC
*CMDMVC  MVC   0(1,R2),ZCMD
*
         $VSTO ('ZCMD','128',AIDCMD)
*
*
         B     CMD040
*
CMDMVC   MVC   0(1,R2),ZCMD       EXECUTED INSTRUCTION
*
CMD040   DS    0H
         L     R4,ZVARS
         LTR   R4,R4
         BZ    FREE010
*
         FREEMAIN R,LV=8000,A=(R4)
         XC    ZVARS,ZVARS
*
FREE010  DS    0H
         L     R4,PANEL
         FREEMAIN R,LV=1920,A=(R4)
         XC    PANEL,PANEL
*
         L     R13,4(,R13)
         LM    R14,R12,12(R13)
         SLR   R15,R15
         BR    R14
*
*
ERROR01  LA    R2,1
         B     ERROR00
ERROR02  LA    R2,2
         B     ERROR00
ERROR03  LA    R2,3
         B     ERROR00
ERROR04  LA    R2,4
         B     ERROR00
ERROR05  LA    R2,5
         B     ERROR00
ERROR06  LA    R2,6
         B     ERROR00
ERROR07  LA    R2,7
         B     ERROR00
ERROR08  LA    R2,8
         B     ERROR00
ERROR09  LA    R2,9
         B     ERROR00
ERROR10  LA    R2,10
         B     ERROR00
ERROR11  LA    R2,11
         B     ERROR00
ERROR12  LA    R2,12
         B     ERROR00
ERROR13  LA    R2,13
         B     ERROR00
ERROR14  LA    R2,14
         B     ERROR00
ERROR15  LA    R2,15
         B     ERROR00
ERROR16  LA    R2,16
         B     ERROR00
ERROR17  LA    R2,17
         B     ERROR00
ERROR18  LA    R2,18
         B     ERROR00
ERROR19  LA    R2,19
         B     ERROR00
ERROR20  LA    R2,20
         B     ERROR00
ERROR21  LA    R2,21
         B     ERROR00
ERROR22  LA    R2,22
         B     ERROR00
ERROR23  LA    R2,23
         B     ERROR00
ERROR24  LA    R2,24
         B     ERROR00
ERROR25  LA    R2,25
         B     ERROR00
ERROR26  LA    R2,26
         B     ERROR00
ERROR27  LA    R2,27
         B     ERROR00
ERROR28  LA    R2,28
         B     ERROR00
ERROR29  LA    R2,29
         B     ERROR00
ERROR30  LA    R2,30
         B     ERROR00
ERROR31  LA    R2,31
         B     ERROR00
ERROR32  LA    R2,32
         B     ERROR00
ERROR33  LA    R2,33
         B     ERROR00
ERROR34  LA    R2,34
         B     ERROR00
ERROR35  LA    R2,35
         B     ERROR00
ERROR36  LA    R2,36
         B     ERROR00
ERROR37  LA    R2,37
         B     ERROR00
ERROR38  LA    R2,38
         B     ERROR00
ERROR39  LA    R2,39
         B     ERROR00
ERROR40  LA    R2,40
         B     ERROR00
ERROR41  LA    R2,41
         B     ERROR00
ERROR00  ABEND 303
*
*
SAVEA    DC    18F'0'
*
PDSPARM  DC    A(PDSMBR,PDSREC,PDSLRECL,PDSDDNM)
PDSMBR   DC    CL8' '
PDSDDNM  DC    CL8'FSIPLIB'
PDSREC   DC    A(0)
PDSLRECL DC    F'0'
*
WORKVAR  DC    CL8' '
PANEL    DC    A(0)
ZVARS    DC    A(0)
*
SCRNPARM DC    A(0),A(0),A(0),A(0),CL8' ',CL8' '
*
ATTRCHAR DC    C' '
ATTRTYPE DC    X'00'
ATTRINTN DC    X'00'
ATTRCAPS DC    X'00'
*
*
AID      DC    CL8' '
*
*
         LTORG ,
*
AIDCMD   DS    CL128
ZCMD     DS    CL128
*
ATTRLIST DC    XL128'00'
*
*
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
*
*
         $FSIECT ,
         $FSISCR ,
*
         END   ,
