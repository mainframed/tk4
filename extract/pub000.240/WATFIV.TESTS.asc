'$JOB'
'C    THIS JOB CAN BE USED TO TEST THE INTERACTIVE DEBUGGING FACILITIES'
'C        --- PLEASE SEE SECTION 4.4 OF  WATFIV USER'S GUIDE'
'      REAL A(10),B(10)'
'      DO 2 I=1,9'
'      A(I+1)=I*2.0/0.19'
'2     B(I)=I*SQRT(I*2.1)/4.3'
'      READ,N'
'14    CALL STLINE(A,B,N,X,Y)'
'      PRINT,X,Y'
'      STOP'
'      END'
'          SUBROUTINE   S T L I N E   ( X, Y, N, A, B )'
'      REAL X(N), Y(N)'
'65    SX = 0.0'
'      SY = 0.0'
'      SXX = 0.0'
'      SXY = 0.0'
'25    DO 9 I = 1, NN'
'         XI = X(I)'
'         SX = SX + XI'
'         SXX =   SXX   +   XI * XI'
'         YI = Y(I)'
'         SXY =   SXY   +   XI * YI'
'         SY = SY + YI'
'9     CONTINUE'
'      XN = N'
'      DEN =   XN * SXX   -   SX * SX'
'      A = (XN * SXY - SY * SX) / DEN'
'      B = ( SXX * SY - SX * SXY ) / DEN'
'86    RETURN'
'      END'
'$ENTRY'
'10.4'
'$JOB'
'C        EXAMPLE OF THE USE OF THE PROFILER'
'C$OPTIONS  PROFXXXXXXX'
'C$PROFON'
'      CHARACTER*1 CARD(200,80),NCHAR1(5)/'@','<','%','&','#'/'
'      CHARACTER NCHAR2(5)/'''',')','(','+','='/'
'      CHARACTER KARD(200,80)'
'      INTEGER TCHARS'
'      TCHARS=0'
'      DO 20 I1=1,200'
'10        READ(5,920)(CARD(I1,K),K=1,80)'
'          AT END DO'
'              LL=I1-1'
'              WRITE(6,940)TCHARS'
'              WRITE(8,930)((CARD(L,KK),KK=1,80),L=1,LL)'
'940           FORMAT(' THE TOTAL NUMBER OF NON-BLANK CHARACTERS IS',I5)'
'              STOP'
'930           FORMAT(1X,80A1)'
'920           FORMAT(80A1)'
'          END AT END'
'          IF(CARD(I1,1) .NE. 'C')GOTO 25'
'          LL=I1'
'          DO 30 J=1,80'
'              DO 30 K=1,LL'
'30        KARD(K,J)=CARD(K,J)'
'          GO TO 10'
'25        DO 20 I2=1,80'
'              IF(CARD(I1,I2).EQ.' ')THEN DO'
'                  GO TO 20'
'              ELSE DO'
'                 TCHARS=TCHARS+1'
'              END IF'
'              I3=1'
'              WHILE (I3.LE.5) DO'
'                  IF(CARD(I1,I2).EQ.NCHAR1(I3))THEN DO'
'                      CARD(I1,I2)=NCHAR2(I3)'
'                      I3=99'
'                  ELSE DO'
'                      I3=I3+1'
'                  END IF'
'              END WHILE'
'20    CONTINUE'
'      STOP'
'      END'
'$ENTRY'
'DJHFGHGDDDDDD'
'FFFFF'
'FFFFGFGGHGHH'
'3EEERER'
'     1NCHAR2%5</@@@@,@<@,@%@,@&@,@#@/'
'      CHARACTER KARD%200,80<'
'      INTEGER TCHARS'
'      TCHARS#0'
'      DO 20 I1#1,200'
'10    READ%5,920<%CARD%I1,K<,K#1,80<'
'      AT END DO'
'       LL#I1-1'
'      WRITE%6,940<TCHARS'
'0     WRITE%8,930<%%CARD%L,KK<,KK#1,80<,L#1,LL<'
'LORNE THIS IS SOME SAMPLE DATA FOR CV1 ... TRY WATFIV CV1 PDATA PDATA .'
'DJHFGHGDDDDDD                          @)%AAAA@)%AAAA@)%AAAA@)%AAAA@)%AA'
'FFFFF                                  @)%AAAA@)%AAAA@)%AAAA@)%AAAA@)%AA'
'FFFFGFGGHGHH                           @)%AAAA@)%AAAA@)%AAAA@)%AAAA@)%AA'
'3EEERER                                @)%AAAA@)%AAAA@)%AAAA@)%AAAA@)%AA'
'     1NCHAR2%5</@@@@,@<@,@%@,@&@,@#@/  @)%AAAA@)%AAAA@)%AAAA@)%AAAA@)%AA'
'      CHARACTER KARD%200,80<           @)%AAAA@)%AAAA@)%AAAA@)%AAAA@)%AA'
'      INTEGER TCHARS                   @)%AAAA@)%AAAA@)%AAAA@)%AAAA@)%AA'
'      TCHARS#0                         @)%AAAA@)%AAAA@)%AAAA@)%AAAA@)%AA'
'      DO 20 I1#1,200                   @)%AAAA@)%AAAA@)%AAAA@)%AAAA@)%AA'
'10    READ%5,920<%CARD%I1,K<,K#1,80<   @)%AAAA@)%AAAA@)%AAAA@)%AAAA@)%AA'
'      AT END DO                        @)%AAAA@)%AAAA@)%AAAA@)%AAAA@)%AA'
'       LL#I1-1                         @)%AAAA@)%AAAA@)%AAAA@)%AAAA@)%AA'
'      WRITE%6,940<TCHARS               @)%AAAA@)%AAAA@)%AAAA@)%AAAA@)%AA'
'0     WRITE%8,930<%%CARD%L,KK<,KK#1,80<,L#1,LL<@)%AAAA@)%AAAA@)%AAAA@)%A'
'&&%%&#&@ <@<'
'&%##%# &&%&#%&%'
'#&%&@ ##& &<%<'
'@@%&@@ <@&@#% <&@%% @@&@%%'
'@@&@#< #%&2 #%#3 #%&4 #%&5(&#%%< %%&%#<'
'@@&@#< #%@@< &%<&1 <09 <&@ #<<# @@%@%< <%&&@ <@%# <<#&<@(@<%&# <%&##<'
'@@&@#< <%<% <@& &@< <01@ #@#% <@%@ #&## #@<%%#% <#@#% @%%<#0 (@<%&# %<%'
'@@&@#< <@&#2 &%<&%## <@#%# <<%&@##4 <&&@## <@%#1 %<%<%&<@ @%%&#(##%%& <%'
'@@&@#< %#%@% <%#&5 %<#% && #@&# &%<#@#< <&<%%& <0% &%<<%@&(@<%&# %&%&#<'
'@@&@#< &<#@#< #<@&# <01 &#%<&% <%<&#(##%%& <%&%#< &@<#2(@<%&# %@%%#<'
'@@&@#< &%& %<< &&&% ##&@#@< ##<# #%%#<(@<%&# %<%&#<'
'@@&@#< &%& %<< &&&% ##&@#@< <%%#<(@<%&# %<%##<'
'@@&@#< &%& %<< &&&% &@@@ ## <%%#<(@<%&# %&%##<'
'@@&@#< &%& %<< &&&% @#< ##&@#@< <%%#<(@<%&# %<%##<'
'@@&@#< &%& %<< &&&% ##&@#@< <# #%%#<(@<%&# %<%&#<'
'@@&@#< &%& %<< &&&% ##&@#@< <%%#<(@<%&# %<%##<'
'@@&@#< &%& %<< &&&% ##&@#@< %%@%%< #%%#<(@<%&# %<%&#<'
'@@&@#< &%& %<< &#&@#@< ##%# <%&#&(@<%&# %<%##<'
'@@&@#< &%& %<< &#&@#@< %%&#&(@<%&# %<%<#<'
'@@&@#< &%& %<< &@@@ ## %%&#&(&#%%% %&%<#<'
'@@&@#< &%& %<< @#< &#&@#@< %%&#&(@<%&# %<%<#<'
'@@&@#< &%& %<< &#&@#@< %# <%&#&(@<%&# %<%##<'
'@@&@#< &%& %<< &#&@#@< %%&#&(@<%&# %<%<#<'
'@@&@#< &%& %<< &#&@#@< %%@%%% <%&#&(@<%&# %<%##<'
'@@&@#< &%& <&&% ##&@#@< ##%# <%&#<(@<%&# %<%##<'
'@@&@#< &%& <&&% ##&@#@< %%&#<(@<%&# %<%<#<'
'@@&@#< &%& <&&% &@@@ ## %%&#<(@<%&# %&%<#<'
'@@&@#< &%& <&&% @#< ##&@#@< %%&#<(@<%&# %<%<#<'
'@@&@#< &%& <&&% ##&@#@< %# <%&#<(@<%&# %<%##<'
'@@&@#< &%& <&&% ##&@#@< %%&#<(@<%&# %<%<#<'
'@@&@#< &%& <&&% ##&@#@< %%@%%% <%&#<(@<%&# %<%##<'
'@@&@#< &%& &#&@#@< ##%# %%<#&(##%%& %<%<#<'
'@@&@#< &%& &#&@#@< %%<#&(##%%& %<%%#<'
'@@&@#< &%& &@@@ ## %%<#&(&#%%& %&%%#<'
'@@&@#< &%& @#< &#&@#@< %%<#&(##%%& %<%%#<'
'@@&@#< &%& &#&@#@< %# %%<#&(##%%& %<%<#<'
'@@&@#< &%& &#&@#@< %%<#&(##%%& %<%%#<'
'@@&@#< &%& &#&@#@< %%@%%% %%<#&(##%%& %<%<#<'
'@@&@#< ##42 %5# #&&<% #&&#&%## &<%%< <@%< <<<@ <@<@#&<%(&#%%% <%&'
'@@&@#< &%&&@#<% <%#K %&@#< <@<@(&#%%& %&%<#<'
'@@&@#< &%&&@#< <%#K %&@#< <@<@ &&%1 <%%@@(&#%%& %<%<#<'
'@@&@#< #&&## <% #<&& &%#%<%@% %%<<%%<# ##<@2 (##%%% <%&&#<'
'@@&@#< #&&#&&4 <%@<&@ #@%<# <<@#@< ##0 &@%#@#<(##%%& <%&%#<'
'@@&@#< &@@@#&&# %@< &%%2 &#&@1 <@&@1 & ##%%#% (##%%% %<%%#<'
'@@&@#< <@#%@# &@@@<%#&(&#%%% %%%<#<'
'#&%&@ ##& %<&@%'
'&@%#% &#&'
'&%%<'
'&&%%&#&@ <@<'
'&%##%# &&%&#%&%'
'#&%&@ ##& &<%<'
'@@%&@@ <@&@#% <&@%% @@&@%%'
'@@&@#< #%&2 #%#3 #%&4 #%&5(&#%%< %%&%#<'
'@@&@#< #%@@< &%<&1 <09 <&@ #<<# @@%@%< <%&&@ <@%# <<#&<@(@<%&# <%&##<'
'@@&@#< <%<% <@& &@< <01@ #@#% <@%@ #&## #@<%%#% <#@#% @%%<#0 (@<%&# %<%'
'@@&@#< <@&#2 &%<&%## <@#%# <<%&@##4 <&&@## <@%#1 %<%<%&<@ @%%&#(##%%& <%'
'@@&@#< %#%@% <%#&5 %<#% && #@&# &%<#@#< <&<%%& <0% &%<<%@&(@<%&# %&%&#<'
'@@&@#< &<#@#< #<@&# <01 &#%<&% <%<&#(##%%& <%&%#< &@<#2(@<%&# %@%%#<'
'@@&@#< &%& %<< &&&% ##&@#@< ##<# #%%#<(@<%&# %<%&#<'
'@@&@#< &%& %<< &&&% ##&@#@< <%%#<(@<%&# %<%##<'
'@@&@#< &%& %<< &&&% &@@@ ## <%%#<(@<%&# %&%##<'
'@@&@#< &%& %<< &&&% @#< ##&@#@< <%%#<(@<%&# %<%##<'
'@@&@#< &%& %<< &&&% ##&@#@< <# #%%#<(@<%&# %<%&#<'
'@@&@#< &%& %<< &&&% ##&@#@< <%%#<(@<%&# %<%##<'
'@@&@#< &%& %<< &&&% ##&@#@< %%@%%< #%%#<(@<%&# %<%&#<'
'@@&@#< &%& %<< &#&@#@< ##%# <%&#&(@<%&# %<%##<'
'@@&@#< &%& %<< &#&@#@< %%&#&(@<%&# %<%<#<'
'@@&@#< &%& %<< &@@@ ## %%&#&(&#%%% %&%<#<'
'@@&@#< &%& %<< @#< &#&@#@< %%&#&(@<%&# %<%<#<'
'@@&@#< &%& %<< &#&@#@< %# <%&#&(@<%&# %<%##<'
'@@&@#< &%& %<< &#&@#@< %%&#&(@<%&# %<%<#<'
'@@&@#< &%& %<< &#&@#@< %%@%%% <%&#&(@<%&# %<%##<'
'@@&@#< &%& <&&% ##&@#@< ##%# <%&#<(@<%&# %<%##<'
'@@&@#< &%& <&&% ##&@#@< %%&#<(@<%&# %<%<#<'
'@@&@#< &%& <&&% &@@@ ## %%&#<(@<%&# %&%<#<'
'@@&@#< &%& <&&% @#< ##&@#@< %%&#<(@<%&# %<%<#<'
'@@&@#< &%& <&&% ##&@#@< %# <%&#<(@<%&# %<%##<'
'@@&@#< &%& <&&% ##&@#@< %%&#<(@<%&# %<%<#<'
'@@&@#< &%& <&&% ##&@#@< %%@%%% <%&#<(@<%&# %<%##<'
'@@&@#< &%& &#&@#@< ##%# %%<#&(##%%& %<%<#<'
'@@&@#< &%& &#&@#@< %%<#&(##%%& %<%%#<'
'@@&@#< &%& &@@@ ## %%<#&(&#%%& %&%%#<'
'@@&@#< &%& @#< &#&@#@< %%<#&(##%%& %<%%#<'
'@@&@#< &%& &#&@#@< %# %%<#&(##%%& %<%<#<'
'@@&@#< &%& &#&@#@< %%<#&(##%%& %<%%#<'
'@@&@#< &%& &#&@#@< %%@%%% %%<#&(##%%& %<%<#<'
'@@&@#< ##42 %5# #&&<% #&&#&%## &<%%< <@%< <<<@ <@<@#&<%(&#%%% <%&'
'@@&@#< &%&&@#<% <%#K %&@#< <@<@(&#%%& %&%<#<'
'@@&@#< &%&&@#< <%#K %&@#< <@<@ &&%1 <%%@@(&#%%& %<%<#<'
'@@&@#< #&&## <% #<&& &%#%<%@% %%<<%%<# ##<@2 (##%%% <%&&#<'
'@@&@#< #&&#&&4 <%@<&@ #@%<# <<@#@< ##0 &@%#@#<(##%%& <%&%#<'
'@@&@#< &@@@#&&# %@< &%%2 &#&@1 <@&@1 & ##%%#% (##%%% %<%%#<'
'@@&@#< <@#%@# &@@@<%#&(&#%%% %%%<#<'
'#&%&@ ##& %<&@%'
'&@%#% &#&'
'&%%<'
'&&%%&#&@ <@<'
'&%##%# &&%&#%&%'
'#&%&@ ##& &<%<'
'@@%&@@ <@&@#% <&@%% @@&@%%'
'@@&@#< #%&2 #%#3 #%&4 #%&5(&#%%< %%&%#<'
'@@&@#< #%@@< &%<&1 <09 <&@ #<<# @@%@%< <%&&@ <@%# <<#&<@(@<%&# <%&##<'
'@@&@#< <%<% <@& &@< <01@ #@#% <@%@ #&## #@<%%#% <#@#% @%%<#0 (@<%&# %<%'
'@@&@#< <@&#2 &%<&%## <@#%# <<%&@##4 <&&@## <@%#1 %<%<%&<@ @%%&#(##%%& <%'
'@@&@#< %#%@% <%#&5 %<#% && #@&# &%<#@#< <&<%%& <0% &%<<%@&(@<%&# %&%&#<'
'@@&@#< &<#@#< #<@&# <01 &#%<&% <%<&#(##%%& <%&%#< &@<#2(@<%&# %@%%#<'
'@@&@#< &%& %<< &&&% ##&@#@< ##<# #%%#<(@<%&# %<%&#<'
'@@&@#< &%& %<< &&&% ##&@#@< <%%#<(@<%&# %<%##<'
'@@&@#< &%& %<< &&&% &@@@ ## <%%#<(@<%&# %&%##<'
'@@&@#< &%& %<< &&&% @#< ##&@#@< <%%#<(@<%&# %<%##<'
'@@&@#< &%& %<< &&&% ##&@#@< <# #%%#<(@<%&# %<%&#<'
'@@&@#< &%& %<< &&&% ##&@#@< <%%#<(@<%&# %<%##<'
'@@&@#< &%& %<< &&&% ##&@#@< %%@%%< #%%#<(@<%&# %<%&#<'
'@@&@#< &%& %<< &#&@#@< ##%# <%&#&(@<%&# %<%##<'
'@@&@#< &%& %<< &#&@#@< %%&#&(@<%&# %<%<#<'
'@@&@#< &%& %<< &@@@ ## %%&#&(&#%%% %&%<#<'
'@@&@#< &%& %<< @#< &#&@#@< %%&#&(@<%&# %<%<#<'
'@@&@#< &%& %<< &#&@#@< %# <%&#&(@<%&# %<%##<'
'@@&@#< &%& %<< &#&@#@< %%&#&(@<%&# %<%<#<'
'@@&@#< &%& %<< &#&@#@< %%@%%% <%&#&(@<%&# %<%##<'
'@@&@#< &%& <&&% ##&@#@< ##%# <%&#<(@<%&# %<%##<'
'@@&@#< &%& <&&% ##&@#@< %%&#<(@<%&# %<%<#<'
'@@&@#< &%& <&&% &@@@ ## %%&#<(@<%&# %&%<#<'
'@@&@#< &%& <&&% @#< ##&@#@< %%&#<(@<%&# %<%<#<'
'@@&@#< &%& <&&% ##&@#@< %# <%&#<(@<%&# %<%##<'
'@@&@#< &%& <&&% ##&@#@< %%&#<(@<%&# %<%<#<'
'@@&@#< &%& <&&% ##&@#@< %%@%%% <%&#<(@<%&# %<%##<'
'@@&@#< &%& &#&@#@< ##%# %%<#&(##%%& %<%<#<'
'@@&@#< &%& &#&@#@< %%<#&(##%%& %<%%#<'
'@@&@#< &%& &@@@ ## %%<#&(&#%%& %&%%#<'
'@@&@#< &%& @#< &#&@#@< %%<#&(##%%& %<%%#<'
'@@&@#< &%& &#&@#@< %# %%<#&(##%%& %<%<#<'
'@@&@#< &%& &#&@#@< %%<#&(##%%& %<%%#<'
'@@&@#< &%& &#&@#@< %%@%%% %%<#&(##%%& %<%<#<'
'@@%&@@ <@&@#% <&@%% @@&@%%'
'$JOB'
'C     TEST DO,IF,GOTO,PRINT,ETC.'
'      DO 10 J=1,10'
'      A=J*J'
'      IF(J .GT. 8) GOTO 20'
'   10 PRINT,J,A'
'   20 STOP'
'      END'
'$ENTRY'
'$JOB'
'C     TEST FUNCTIONS'
'      DO 10 I=1,5'
'      A=EXP( SIN( FLOAT(I) ) )'
'   10 PRINT,I,A'
'      STOP'
'      END'
'$ENTRY'
'$JOB'
'C     TEST CHARACTER VARIABLES'
'      CHARACTER CARD(72)'
'      CHARACTER *40 NAME'
'      I=0'
'    5 READ(5,10) CARD,NAME'
'   10 FORMAT(72A1,T1,A40)'
'      IF( NAME .EQ. 'LAST CARD IN DECK') STOP'
'      I=I+1'
'      WRITE(6,20)CARD,I'
'   20 FORMAT(' ',72A1,'CARD0000',T76,I4)'
'      GOTO 5'
'      END'
'$ENTRY'
'GRAHAM         WAFER'
'CHUCK          WAGON'
'BARB           WIRE'
'LAST CARD IN DECK'
'$JOB'
'C     TEST SUBROUTINES'
'      REAL ARRAY(20)'
'    5 READ(5,*,END=50) NUMBER'
'      PRINT,NUMBER'
'      CALL PLACE(NUMBER,ARRAY)'
'      GOTO 5'
'   40 STOP'
'   50 CALL PRINT(&40)'
'      END'
'      SUBROUTINE PLACE(NUMBER,ARRAY)'
'      REAL ARRAY(20)'
'      INTEGER BUMP/0/'
'      BUMP=BUMP+1'
'      ARRAY(BUMP)=NUMBER'
'      RETURN'
'      ENTRY PRINT(*)'
'      PRINT,(ARRAY(I),I=1,BUMP)'
'      RETURN 1'
'      END'
'$ENTRY'
'      20'
'  33'
'  78'
'$JOB'
'C     CHECK SEQUENTIAL I/O'
'      CHARACTER *6 LABEL,CHECK'
'      INTEGER ARRAY(50)'
'      READ,N,LABEL'
'      READ,(ARRAY(I), I=1,N)'
'      PRINT,( ARRAY(I), I=1,N)'
'      REWIND 1'
'      WRITE(1)LABEL'
'      DO 20 J=1,N'
'   20 WRITE(1)ARRAY(J)'
'      ENDFILE 1'
'      REWIND 1'
'      READ(1)CHECK'
'      PRINT,'LABEL IS',CHECK'
'      IF( CHECK .NE. LABEL) GOTO 50'
'   40 STOP'
'   50 PRINT,'LABEL WILL NOT VERIFY''
'      GOTO 40'
'      END'
'$ENTRY'
'   5   'KEY1''
'   45  30  78  6  20'
'$JOB'
'C$OPTIONS RUN=FREE'
'C     CHECK DIRECT ACCESS'
'      CHARACTER *80 RECORD(20),PARTS'
'      DEFINE FILE 2(10,80,L,KPTR)'
'    5 READ(5,7,END=10)( RECORD(I), I=1,100)'
'    7 FORMAT(A80)'
'      GOTO 5'
'   10 K=I-1'
'      WRITE(6,15)( RECORD(I), I=1,K)'
'   15 FORMAT(' ',A80)'
'      WRITE(2'1)(RECORD(I), I=1,K)'
'      FIND(2'5)'
'      IF( RECORD(1) .NE. 'KEY2') GOTO 50'
'      READ(2'5) PARTS'
'      WRITE(6,*)PARTS'
'   50 PRINT,'KEY INCORRECT''
'      GOTO 40'
'      END'
'$ENTRY'
'KEY2'
'00-4781-10-A       57809               667890'
'00-4782-17-X       57810               667907'
'00-8000-07-V       57817               667787'
'00-8002-08-X       57819               666521'
'00-9000-00-A       57900               640000'
'$JOB'
'C     TEST ERROR MESSAGES'
'      DO 5 J=1,10'
'    3 IF(1.EQ.1) GOTO 3'
'      IF(J .GT.1) GOTO 25'
'      DO 20 I=1,30'
'   25 CONTINUE'
'   20 IF( I GT 30) HALT'
'      A=(,)B'
'      CALL ANNON'
'      IF(A)END'
'     *'
'      AIF( K.LT. 0) AGO.STOP'
'.STOP'
'      END'
'$ENTRY'
'$JOB'
'C     TEST OBJECT DECK'
'      DIMENSION X(15)'
'      CALL      SUB1(X)'
'      PRINT100,X'
'  100 FORMAT(1X,15Z8)'
'      STOP'
'      END'
'      SUBROUTINE ALPHA (X)'
'      RETURN'
'C'
'C   THE FOLLOWING DECK PASSES THE ADDRESSES OF THE FUNCTIONS SIN COS'
'C   TAN & ALPHA INTO THE ARRAY X'
'C'
'C        ENTRY     SUB1'
'C        EXTRN     COS'
'C        EXTRN     SIN'
'C        EXTRN     TAN'
'C        USING     *,15'
'C  SUB1  L         3,0(,1)             A(DOT ROUTINE)'
'C        L         3,4(,3)             A( OF ARRAY X)'
'C        MVC       0(A2-A1,3),A1       MOVE ADDRESS OF SIN,TAN,ALPHA,COS'
'C                                      INTO ARRAY X'
'C        BR        14                  RETURN TO CALLING ROUTINE'
'C  A1    DC        V(COS)'
'C        DC        VL3(TAN)'
'C        DC        VL4(ALPHA)'
'C        DC        A(SIN)'
'C        DC        AL3(A1)'
'C        DC        AL4(SIN+COS-TAN)'
'C        DC        Y(SUB1-4)'
'C        DS        X'
'C        DC        YL2(SIN)'
'C  A2    EQU       *'
'C        END        SUB1'
'      END'
'ESD      '
'ESD      '
'TXT '
'TXT '
'RLD      '
'RLD      '
'END '
'$ENTRY'
'$JOB'
'C        STRUCTURED PROGRAMMING EXAMPLE'
'      I=0'
'      IF(I.EQ.0)THEN DO'
'         PRINT,'IF-THEN-DO #0''
'         I=1'
'         WHILE(I.EQ.1)DO'
'            PRINT,'WHILE-DO #1''
'            I=2'
'            DO CASE I'
'            CASE'
'            CASE'
'               PRINT,'DO-CASE #2''
'               I=3'
'               READ,I'
'               AT END DO'
'                  PRINT,'AT-END-DO #3''
'                  I=4'
'                  EXECUTE BLOCK1'
'               END AT END'
'            END CASE'
'         END WHILE'
'      END IF'
'         STOP'
'      REMOTE BLOCK BLOCK1'
'         PRINT,'EXECUTE #4''
'         I=5'
'         WHILE(I.EQ.5)EXECUTE BLOCK2'
'      END BLOCK'
'      REMOTE BLOCK BLOCK2'
'         PRINT,'WHILE-EXECUTE #5''
'         I=6'
'      END BLOCK'
'      END'
'$ENTRY'
'$JOB'
'C        STRUCTURED PROGRAMMING EXAMPLE'
'      I=0'
'      IF(I.EQ.0)THEN DO'
'         PRINT,'IF-THEN-DO #0''
'         I=1'
'         IF(I.EQ.1)THEN DO'
'            PRINT,'IF-THEN-DO #1''
'         END IF'
'         DO CASE I'
'         CASE'
'            PRINT,'DO-CASE #1''
'         END CASE'
'         READ,I'
'         AT END DO'
'            PRINT,'AT-END-DO #1''
'         END AT END'
'         EXECUTE EX'
'         WHILE(I.EQ.1)DO'
'            PRINT,'WHILE-DO #1''
'            I=2'
'            DO CASE I'
'            CASE'
'            CASE'
'               PRINT,'DO-CASE #2''
'               I=3'
'               READ,I'
'               AT END DO'
'                  PRINT,'AT-END-DO #3''
'                  I=4'
'                  EXECUTE EX-4'
'               END AT END'
'            END CASE'
'         END WHILE'
'      END IF'
'         STOP'
'      REMOTE BLOCK EX'
'         PRINT,'EXECUTE #',I'
'      END BLOCK'
'      REMOTE BLOCK WH-EX'
'         PRINT,'WHILE-EXECUTE #',I'
'      END BLOCK'
'      REMOTE BLOCK EX-4'
'         PRINT,'EXECUTE #4''
'         I=5'
'         WHILE(I.EQ.5)EXECUTE WH-EX-5'
'      END BLOCK'
'      REMOTE BLOCK WH-EX-5'
'         PRINT,'WHILE-EXECUTE #5''
'         1=6'
'      END BLOCK'
'      END'
'$ENTRY'
'$JOB'
'C        STRUCTURED PROGRAMMING EXAMPLE'
'      I=0'
'      IF(I.EQ.0)THEN DO'
'         PRINT,'IF-THEN-DO #0''
'         I=1'
'         IF(I.EQ.1)THEN DO'
'            PRINT,'IF-THEN-DO #1''
'         END IF'
'         DO CASE I'
'         CASE'
'            PRINT,'DO-CASE #1''
'         END CASE'
'         WHILE(I.EQ.1)DO'
'            PRINT,'WHILE-DO #1''
'            I=2'
'            IF(I.EQ.2)THEN DO'
'               PRINT,'IF-THEN-DO #2''
'            END IF'
'            WHILE(I.EQ.2)DO'
'               PRINT,'WHILE-DO #2''
'               I=3'
'            END WHILE'
'            I=2'
'            DO CASE I'
'            CASE'
'            CASE'
'               PRINT,'DO-CASE #2''
'               I=3'
'               IF(I.EQ.3)THEN DO'
'                  PRINT,'IF-THEN-DO #3''
'               END IF'
'               WHILE(I.EQ.3)DO'
'                  PRINT,'WHILE-DO #3''
'                  I=4'
'               END WHILE'
'               I=3'
'               DO CASE I'
'               CASE'
'               CASE'
'               CASE'
'                  PRINT,'DO-CASE #3''
'               END CASE'
'               READ,I'
'               AT END DO'
'                  PRINT,'AT-END-DO #3''
'                  I=4'
'                  IF(I.EQ.4)THEN DO'
'                     PRINT,'IF-THEN-DO #4''
'                  END IF'
'                  WHILE(I.EQ.4)DO'
'                     PRINT,'WHILE-DO #4''
'                     I=5'
'                  END WHILE'
'                  I=4'
'                  DO CASE I'
'                  CASE'
'                  CASE'
'                  CASE'
'                  CASE'
'                     PRINT,'DO-CASE #4''
'                  END CASE'
'               END AT END'
'            END CASE'
'         END WHILE'
'      END IF'
'         STOP'
'      END'
'$ENTRY'
'$JOB'
'C        STRUCTURED PROGRAMMING EXAMPLE'
'      I=1'
'      IF(I.EQ.1)THEN DO'
'         PRINT,'IF-THEN-DO #1''
'         WHILE(I.EQ.1)DO'
'            PRINT,'WHILE-DO #1''
'            I=2'
'            DO CASE I'
'            CASE'
'            CASE'
'               PRINT,'DO-CASE #1''
'               READ,I'
'               AT END DO'
'                  PRINT,'AT-END-DO #1''
'                  DO CASE I'
'                  CASE'
'                  CASE'
'                     PRINT,'DO-CASE #2''
'                     IF(I.EQ.2)THEN DO'
'                        PRINT,'IF-THEN-DO #2''
'                        WHILE(I.EQ.2)DO'
'                           PRINT,'WHILE-DO #2''
'                           I=3'
'                           WHILE(I.EQ.3)DO'
'                              PRINT,'WHILE-DO #3''
'                              I=4'
'                              DO CASE I'
'                              CASE'
'                              CASE'
'                              CASE'
'                              CASE'
'                                 PRINT,'DO-CASE #3''
'                                 IF(I.EQ.4)THEN DO'
'                                    PRINT,'IF-THEN-DO #3''
'                                 END IF'
'                              END CASE'
'                           END WHILE'
'                        END WHILE'
'                     END IF'
'                  END CASE'
'               END AT END'
'            END CASE'
'         END WHILE'
'      END IF'
'         STOP'
'      END'
'$ENTRY'
'$JOB'
'C        STRUCTURED PROGRAMMING EXAMPLE'
'      IMPLICIT INTEGER(A-Z)'
'      DO 1 A=1,2'
'      I=0'
'      IF(I.EQ.0)THEN DO'
'         DO 2 B=1,2'
'         PRINT,'IF-THEN-DO #0''
'         I=1'
'         WHILE(I.EQ.1)DO'
'            DO 3 C=1,2'
'            PRINT,'WHILE-DO #1''
'            I=2'
'            DO CASE I'
'            CASE'
'            CASE'
'               DO 4 D=1,2'
'               PRINT,'DO-CASE #2''
'               I=3'
'               READ,I'
'               AT END DO'
'                  DO 5 E=1,2'
'                  PRINT,'AT-END-DO #3''
'                  I=4'
'                  EXECUTE BLOCK1'
'    5             CONTINUE'
'               END AT END'
'    4          CONTINUE'
'            END CASE'
'    3       CONTINUE'
'         END WHILE'
'    2    CONTINUE'
'      END IF'
'    1 CONTINUE'
'         STOP'
'      REMOTE BLOCK BLOCK1'
'         DO 6 F=1,2'
'         PRINT,'EXECUTE #4''
'         I=5'
'         WHILE(I.EQ.5)EXECUTE BLOCK2'
'    6    CONTINUE'
'      END BLOCK'
'      REMOTE BLOCK BLOCK2'
'         DO 7 G=1,2'
'         PRINT,'WHILE-EXECUTE #5''
'         I=6'
'    7    CONTINUE'
'      END BLOCK'
'      END'
'$ENTRY'
'$JOB'
'C        STRUCTURED PROGRAMMING EXAMPLE'
'      IMPLICIT INTEGER(A-Z)'
'      DO 1 A=1,2'
'      I=0'
'      IF(I.EQ.0)THEN DO'
'         DO 2 B=1,2'
'         PRINT,'IF-THEN-DO #0''
'         I=1'
'         WHILE(I.EQ.1)DO'
'            DO 3 C=1,2'
'            PRINT,'WHILE-DO #1''
'            I=2'
'            DO CASE I'
'            CASE'
'            CASE'
'               DO 4 D=1,2'
'               PRINT,'DO-CASE #2''
'               I=3'
'               READ,I'
'               AT END DO'
'                  DO 5 E=1,2'
'                  PRINT,'AT-END-DO #3''
'                  I=4'
'                  EXECUTE BLOCK1'
'               END AT END'
'    5          CONTINUE'
'            END CASE'
'    4       CONTINUE'
'         END WHILE'
'    3    CONTINUE'
'      END IF'
'    2 CONTINUE'
'         STOP'
'      REMOTE BLOCK BLOCK1'
'         DO 6 F=1,2'
'         PRINT,'EXECUTE #4''
'         I=5'
'         WHILE(I.EQ.5)EXECUTE BLOCK2'
'      END BLOCK'
'      REMOTE BLOCK BLOCK2'
'    6    CONTINUE'
'         DO 7 G=1,2'
'         PRINT,'WHILE-EXECUTE #5''
'         I=6'
'      END BLOCK'
'    7    CONTINUE'
'      END'
'$ENTRY'
'$JOB'
'C        STRUCTURED PROGRAMMING EXAMPLE'
'      IMPLICIT INTEGER(A-Z)'
'      DO 1 A=1,2'
'      I=0'
'         DO 2 B=1,2'
'      IF(I.EQ.0)THEN DO'
'         PRINT,'IF-THEN-DO #0''
'         I=1'
'            DO 3 C=1,2'
'         WHILE(I.EQ.1)DO'
'            PRINT,'WHILE-DO #1''
'            I=2'
'               DO 4 D=1,2'
'            DO CASE I'
'            CASE'
'            CASE'
'               PRINT,'DO-CASE #2''
'               I=3'
'                  DO 5 E=1,2'
'               READ,I'
'               AT END DO'
'                  PRINT,'AT-END-DO #3''
'                  I=4'
'                  EXECUTE BLOCK1'
'    5             CONTINUE'
'               END AT END'
'    4          CONTINUE'
'            END CASE'
'    3       CONTINUE'
'         END WHILE'
'    2    CONTINUE'
'      END IF'
'    1 CONTINUE'
'         STOP'
'      REMOTE BLOCK BLOCK1'
'         PRINT,'EXECUTE #4''
'         I=5'
'         DO 7 G=1,2'
'         WHILE(I.EQ.5)EXECUTE BLOCK2'
'    6    CONTINUE'
'      END BLOCK'
'      REMOTE BLOCK BLOCK2'
'         PRINT,'WHILE-EXECUTE #5''
'         I=6'
'    7    CONTINUE'
'      END BLOCK'
'      END'
'$ENTRY'
'$JOB'
'C        STRUCTURED PROGRAMMING EXAMPLE'
'      EXECUTE A'
'         STOP'
'      REMOTE BLOCK A'
'        I=1'
'        WHILE (I.LT.10)DO'
'          IF(A(I).NE.0)THEN DO'
'            EXECUTE B'
'            GOTO 1'
'            REMOTE BLOCK B'
'              DO CASE I'
'                CASE 1'
'                  PRINT,I'
'                CASE 2'
'                  EXECUTE C'
'                CASE 3'
'                  I=I-1'
'                  GOTO 2'
'                  REMOTE BLOCK C'
'                    PRINT,'C''
'                  END BLOCK'
'  2               CONTINUE'
'                END CASE'
'             END BLOCK'
'  1          CONTINUE'
'          END WHILE'
'      END BLOCK'
'      END'
'$ENTRY'
'$ENTRY'
'$JOB'
'C        STRUCTURED PROGRAMMING EXAMPLE'
'      EXECUTE A'
'      DO 1 I=1,4'
'       GOTO 2'
'       REMOTE BLOCK A'
'         PRINT,I'
'  1      X=X+1'
'       END BLOCK'
'      REMOTE BLOCK B'
'        DO 3 K=1,2'
'          Z=Z+1'
'      END BLOCK'
' 2    CONTINUE'
' 3    CONTINUE'
'          STOP'
'       END'
'$ENTRY'
'$JOB'
'C        AT END DO   EXAMPLE'
'       INTEGER STUDNO,NAME(5),ASSOC,KK(5,5)'
'       DEFINE  FILE 12(2000,150,E,ASSOC)'
'       READ(105,*)STUDNO,MARK'
'       AT END DO'
'         PRINT,'EOF ON UNIT 105''
'            STOP'
'       END AT END'
'       READ(12'STUDNO,2)NAME'
'       AT END DO'
'         PRINT,'EOF ON D-A FILE 12''
'            STOP'
'       END AT END'
'       READ(12'II*3-6,2)NAME'
'       AT END DO'
'          PRINT,'THIS IS NOT A VALID ATEND CLAUSE''
'       END AT END'
'       READ(12'KK(3,6),2)NAME'
'       AT END DO'
'          PRINT,'THIS IS NOT A VALID ATEND''
'       END AT END'
'2      FORMAT(5A4)'
'          STOP;END'
'$ENTRY'
'$JOB'
'C        STRUCTURED PROGRAMMING EXAMPLE'
'       INTEGER J(5)'
'        X=1'
'        Y=2'
'        PRINT,X,Y'
'           STOP;END'
'        SUBROUTINE SR1(X,Y)'
'        READ,P,Q'
'        AT END DO'
'           PRINT,'END OF FILE REACHED''
'           RETURN'
'        END AT END'
'        IF (X.LT.P)THEN DO'
'           IF (Y.LT.Q)THEN DO'
'              X=P'
'              Y=Q'
'           ELSE DO'
'              Y=-Q'
'              X=2*P'
'           END IF'
'        ELSE DO'
'           X=-P'
'           Y=Q'
'        END IF'
'        RETURN'
'        END'
'$ENTRY'
'$JOB'
'C        STRUCTURED PROGRAMMING EXAMPLE'
'C'
'C     DATA CARDS MUST LOOK LIKE ONE OF THE FOLLOWING :'
'C'
'C     CC1       CC10'
'C'
'C     ANY NUMBER OF THESE DATA CARDS MAY BE SUPPLIED'
'C'
'      INTEGER*2 COUNT'
'      CHARACTER INFO*20,TYPE*1,VERSN*4,STATUS*4,'
'     & KEYWRD*4,INFO20*1(20),INFO10*10,INFO01*10,'
'     & CARD72*1(72),CARD*72,COL6T*1,COL6S*4,COL17*4,SAVE*72'
'      LOGICAL STATSW/.FALSE./,TYPESW/.FALSE./,VERSSW/.FALSE./,'
'     & PRNTSW/.FALSE./,NEWSW/.FALSE./,'
'     & V1L0SW/.FALSE./,V1L3SW/.FALSE./,V1L4SW/.FALSE./,'
'     & V1L5SW/.FALSE./,V1L6SW/.FALSE./,'
'     & TYPASW/.FALSE./,TYPBSW/.FALSE./,'
'     & TYPCSW/.FALSE./,TYPDSW/.FALSE./,'
'     & TYPXSW/.FALSE./,TYPSSW/.FALSE./,'
'     & FIXESW/.FALSE./,NOTFSW/.FALSE./,RESOSW/.FALSE./'
'      EQUIVALENCE (INFO,KEYWRD,INFO20,INFO01),'
'     & (INFO20(10),VERSN,TYPE,STATUS),(INFO10,INFO20(10)),'
'     & (CARD,COL1),(CARD,CARD72),(CARD72(6),COL6T,COL6S),'
'     & (CARD72(17),COL17)'
'5     READ(5,10,END=999) INFO'
'10    FORMAT (A20)'
'      WRITE (6,9)'
'9     FORMAT ('1')'
'      WRITE (6,50)'
'      PRINT,'                              ',INFO'
'      WRITE (6,50)'
'      VERSSW = .FALSE.'
'      TYPESW = .FALSE.'
'      STATSW = .FALSE.'
'      COUNT = 0'
'      IF (KEYWRD.EQ.'VERS') THEN DO'
'         VERSSW = .TRUE.'
'         IF (VERSN.EQ.'V1L0') THEN DO'
'            V1L0SW = .TRUE.'
'         ELSE DO'
'            IF (VERSN.EQ.'V1L3') THEN DO'
'               V1L3SW = .TRUE.'
'            ELSE DO'
'               IF (VERSN.EQ.'V1L4') THEN DO'
'                  V1L4SW = .TRUE.'
'               ELSE DO'
'                  IF (VERSN.EQ.'V1L5') THEN DO'
'                     V1L5SW = .TRUE.'
'                  ELSE DO'
'                     IF (VERSN.EQ.'V1L6') THEN DO'
'                       V1L6SW = .TRUE.'
'                     ELSE DO'
'                        PRINT,' *** ',INFO10,' IS NOT A VALID''
'     &                  ,' VERSION NUMBER ***''
'                        WRITE (6,50)'
'                        GO TO 5'
'                     END IF'
'                  END IF'
'               END IF'
'            END IF'
'         END IF'
'      ELSE DO'
'         IF (KEYWRD.EQ.'TYPE') THEN DO'
'            TYPESW = .TRUE.'
'            IF (TYPE.EQ.'A') THEN DO'
'               TYPASW = .TRUE.'
'            ELSE DO'
'               IF (TYPE.EQ.'B') THEN DO'
'                  TYPBSW = .TRUE.'
'               ELSE DO'
'                  IF (TYPE.EQ.'C') THEN DO'
'                     TYPCSW = .TRUE.'
'                  ELSE DO'
'                     IF (TYPE.EQ.'D') THEN DO'
'                        TYPDSW = .TRUE.'
'                     ELSE DO'
'                        IF (TYPE.EQ.'E') THEN DO'
'                           TYPXSW = .TRUE.'
'                        ELSE DO'
'                           IF (TYPE.EQ.'S') THEN DO'
'                              TYPSSW = .TRUE.'
'                           ELSE DO'
'                              WRITE(6,50)'
'                              PRINT,' *** ',INFO10,' IS NOT A''
'     &                        ,' VALID TYPE ***''
'                              WRITE (6,50)'
'                              GO TO 5'
'                           END IF'
'                        END IF'
'                     END IF'
'                  END IF'
'               END IF'
'            END IF'
'         ELSE DO'
'            IF (KEYWRD.EQ.'STAT') THEN DO'
'               STATSW = .TRUE.'
'               IF (STATUS.EQ.'FIXE') THEN DO'
'                  FIXESW = .TRUE.'
'               ELSE DO'
'                  IF (STATUS.EQ.'NOT ')THEN DO'
'                     NOTFSW = .TRUE.'
'                  ELSE DO'
'                     IF (STATUS.EQ.'RESO') THEN DO'
'                        RESOSW = .TRUE.'
'                     ELSE DO'
'                        PRINT,' *** ',INFO10,' IS NOT A''
'     &                  ,' VALID STATUS ***''
'                        WRITE (6,50)'
'                        GO TO 5'
'                     END IF'
'                  END IF'
'               END IF'
'            ELSE DO'
'               PRINT,' *** ',INFO01,' IS NOT A VALID KEYWORD ***''
'               WRITE (6,50)'
'               GO TO 5'
'            END IF'
'         END IF'
'      END IF'
'99    READ (8,100,END=9999) CARD'
'100   FORMAT (A72)'
'      IF (COL6S.EQ.'FIXE'.OR.COL6S.EQ.'NOT '.OR.COL6S.EQ.'RESO')'
'     &                                                  THEN DO'
'         PRNTSW = .FALSE.'
'         NEWSW = .TRUE.'
'         IF (VERSSW) THEN DO'
'            IF (V1L0SW) THEN DO'
'               IF (COL17.EQ.'V1L0') PRNTSW = .TRUE.'
'            END IF'
'            IF (V1L3SW) THEN DO'
'               IF (COL17.EQ.'V1L3') PRNTSW = .TRUE.'
'            END IF'
'            IF (V1L4SW) THEN DO'
'               IF (COL17.EQ.'V1L4') PRNTSW = .TRUE.'
'            END IF'
'            IF (V1L5SW) THEN DO'
'               IF (COL17.EQ.'V1L5') PRNTSW = .TRUE.'
'            END IF'
'            IF (V1L6SW) THEN DO'
'               IF (COL17.EQ.'V1L6') PRNTSW = .TRUE.'
'            END IF'
'         END IF'
'         IF (PRNTSW) GO TO 150'
'         IF (STATSW) THEN DO'
'            IF (FIXESW) THEN DO'
'               IF (COL6S.EQ.'FIXE') PRNTSW = .TRUE.'
'            END IF'
'            IF (NOTFSW) THEN DO'
'               IF (COL6S.EQ.'NOT ') PRNTSW = .TRUE.'
'            END IF'
'            IF (RESOSW) THEN DO'
'               IF (COL6S.EQ.'RESO') PRNTSW = .TRUE.'
'            END IF'
'         END IF'
'         IF (PRNTSW) GO TO 150'
'         IF (TYPESW) SAVE = CARD'
'      ELSE DO'
'         NEWSW = .FALSE.'
'         IF (.NOT.PRNTSW) THEN DO'
'            IF (TYPESW) THEN DO'
'               IF (COL6T.NE.' ') THEN DO'
'                  IF (TYPASW) THEN DO'
'                     IF (COL6T.EQ.'A') PRNTSW = .TRUE.'
'                  END IF'
'                  IF (TYPBSW) THEN DO'
'                     IF (COL6T.EQ.'B') PRNTSW = .TRUE.'
'                  END IF'
'                  IF (TYPCSW) THEN DO'
'                     IF (COL6T.EQ.'C') PRNTSW = .TRUE.'
'                  END IF'
'                  IF (TYPDSW) THEN DO'
'                     IF (COL6T.EQ.'D') PRNTSW = .TRUE.'
'                  END IF'
'                  IF (TYPXSW) THEN DO'
'                     IF (COL6T.EQ.'E') PRNTSW = .TRUE.'
'                  END IF'
'                  IF (TYPSSW) THEN DO'
'                     IF (COL6T.EQ.'S') PRNTSW = .TRUE.'
'                  END IF'
'                  IF (PRNTSW) THEN DO'
'                     PRINT,SAVE'
'                     WRITE(9,9876) SAVE'
'                     NEWSW = .TRUE.'
'                  END IF'
'               END IF'
'            END IF'
'         END IF'
'      END IF'
'      IF (.NOT.PRNTSW) GO TO 99'
'150   PRINT,CARD'
'      WRITE(9,9876) CARD'
'9876  FORMAT(A72,8X)'
'      IF (NEWSW) COUNT = COUNT + 1'
'      GO TO 99'
'9999  REWIND 8'
'      WRITE (6,50)'
'      PRINT,'THE NUMBER OF ',INFO,' BUGS IS',COUNT'
'      WRITE (6,50)'
'50    FORMAT(' ',80('*'))'
'      GO TO 5'
'999   STOP'
'      END'
'$ENTRY'
'$JOB'
'C'
'C        PSEUDO VARIABLE DIMENSIONING'
'C'
'C        ARRAY B IN SUB1 WILL BE MODIFIED TO'
'C        5 ROWS AND 20 COLUMNS WHILE ARRAY C IN'
'C        SUB2 WILL REMAIN THE SAME'
'C'
'         REAL A(100)'
'         CALL SUB1(A)'
'         CALL SUB2(A)'
'         STOP'
'         END'
'         SUBROUTINE SUB1(B)'
'         REAL B(5,1)'
'         DO 20 I=1,20'
'20       B(5,I) = 0.0'
'         RETURN'
'         END'
'         SUBROUTINE SUB2(C)'
'         REAL C(2,2)'
'         DO 10 I=1,10'
'         DO 10 J=1,10'
'10       C(I,J) = 0.0'
'         RETURN'
'         END'
'$ENTRY'
'$JOB'
'C        TEST THE SIN FUNCTION'
'         DO 10 I=1,181'
'         A=(3.14/180.)*(I-91)'
'         B=SIN(A)'
'         PRINT,A,B'
'10       CONTINUE'
'         STOP'
'         END'
'$ENTRY'
'$JOB'
'C        TEST THE DSIN FUNCTION'
'         REAL*8 A,B'
'         DO 10 I=1,181'
'         A=(3.14/180.)*(I-91)'
'         B=DSIN(A)'
'         PRINT,A,B'
'10       CONTINUE'
'         STOP'
'         END'
'$ENTRY'
'$JOB'
'C        TEST THE CMPLX FUNCTION'
'         COMPLEX A'
'         DO 10 I=1,10'
'         DO 11 J=1,10'
'         A=CMPLX(FLOAT(I-5),FLOAT(J-5))'
'         B=CABS(A)'
'         PRINT,A,B'
'11       CONTINUE'
'10       CONTINUE'
'         STOP'
'         END'
'$ENTRY'
'$JOB'
'C        TEST THE DCMPLX FUNCTION'
'         COMPLEX*16 A'
'         REAL*8 B'
'         DO 10 I=1,10'
'         DO 11 J=1,10'
'         A=DCMPLX(DFLOAT(I-5),DFLOAT(J-5))'
'         B=CDABS(A)'
'         PRINT,A,B'
'11       CONTINUE'
'10       CONTINUE'
'         STOP'
'         END'
'$ENTRY'
'$JOB'
'C        TEST THE AMAX1 FUNCTION'
'         DO 10 I=1,10'
'         DO 11 J=1,10'
'         PRINT,I,J,AMAX1(FLOAT(I),FLOAT(J))'
'11       CONTINUE'
'10       CONTINUE'
'         STOP'
'         END'
'$ENTRY'
'$JOB'
'C        TEST THE MAX1 FUNCTION'
'         DO 10 I=1,10'
'         DO 11 J=1,10'
'         PRINT,I,J,MAX1(FLOAT(I),FLOAT(J))'
'11       CONTINUE'
'10       CONTINUE'
'         STOP'
'         END'
'$ENTRY'
'$JOB'
'C        CC-0      COLUMNS 1-5 OF CONTINUATION CARD NON-BLANK'
'      PRINT,'THIS ','
'   XXX 'IS A CONTINUATION CARD''
'      STOP'
'      END'
'$ENTRY'
'$JOB'
'C        ST-5      STATEMENT NUMBER IN A TRANSFER IS A NON-EXECUTABLE'
'C                  STATEMENT'
'C        DO-0      STATEMENT CANNOT BE THE'
'C                  OBJECT OF A DO'
'         DO 10 I=1,10'
'         PRINT,   I'
'10       FORMAT(' ',I4)'
'         STOP'
'         END'
'$ENTRY'
'$JOB'
'C        IO-A      EXPECTING STATEMENT TO BE FORMAT STATEMENT-'
'C                  PREVIOUSLY REFERENCED IN AN'
'C                  I/O STATEMENT'
'         READ(5,10) A'
'         PRINT,A'
'10       CONTINUE'
'         STOP'
'         END'
'$ENTRY'
'$JOB'
'C        SR-4      WRONG ARGUMENT TYPE'
'         REAL A/1./,C/1./,E/1./,G/1./,I/1./'
'         INTEGER B/1/,D/1/,F/1/,H/1/'
'         CALL SUB001(A,B,C,D,E,F,G,H,I)'
'         STOP'
'         END'
'         SUBROUTINE SUB001(A,B,C,D,E,F,G,H,I)'
'         REAL A,C,E,I'
'         INTEGER B,D,F,G,H'
'         RETURN'
'         END'
'$ENTRY'
'$JOB'
'C        SX-6      SYNTAX ERROR---EXPECTING STATEMENT NUMBER'
'         DO INDEXI=1,10,1'
'         PRINT,INDEXI'
'10       CONTINUE'
'         STOP'
'         END'
'$ENTRY'
'$JOB'
'C        UN-8      ATTEMPT TO DO DIRECT ACCESS I/O ON SEQ. FILE 8.'
'         READ (8'1) A'
'         STOP'
'         END'
'$ENTRY'
'$JOB'
'C        SR-B      MAINLINE PROGRAM NOT IN LIBRARY'
'$OPTIONS PGM=TEST01'
'$ENTRY'
(standard input) matches
