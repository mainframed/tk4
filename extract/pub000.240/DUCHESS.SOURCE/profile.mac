$PROFILE CSECT
         STM   R14,R12,12(R13)
         BALR  R12,0
         USING *,R12
BASEREG  LA    R14,SAVEAREA
         ST    R13,4(,R14)
         ST    R14,8(,R13)
         LR    R13,R14
         TST   R1                      PARM LIST ?
         BZ    ERROR1                  NO,  ABEND  CODE=12
         L     R1,0(,R1)               R1-> PARAMETERS
         LH    R11,0(,R1)              R11 IS LENGTH OF PARMS
         S     R11,=F'1'
         BM    ERROR1                  NULL PARMLIST
         EX    R11,MOVEPARM
         LA    R10,PARMIN
         LR    R9,R10                  START TO LOOK FOR MODULE NAME
NXTPCHAR CLI   0(R9),C','              DELIMITER IMPLIES SCALING FACTOR
         BE    ENDNAME
         CLI   0(R9),C'/'              DELIMITER IMPLIES SECOND LIST
         BE    ENDNAME
         CLI   0(R9),X'17'             FILL CHAR IN PARMIN
         BE    ENDNAME
         AL    R9,=F'1'
         B     NXTPCHAR
ENDNAME  LR    R8,R9
         SR    R9,R10
         BNP   ERROR2                  NULL MEMBER NAME:  CODE=16
         SL    R9,=F'1'
         EX    R9,MOVENAME             SAVE MEMBER NAME
         CLI   0(R8),X'17'             END OF PARMS ?
         BE    SAVELIST                SAVE PTR TO NULL PARMLIST
         CLI   0(R8),C'/'              NO SCALE FACTOR ?
         BE    CALCLEN                 IF NOT, BRANCH
         LA    R10,1(,R8)
         AL    R8,=F'1'
         TM    0(R8),X'F0'             SEARCH FOR END OF NUMERICS
         BO    *-8
         LR    R7,R8
         SR    R7,R10                  LENGTH OF SCALE FACTOR
         BNP   ERROR3                  MISSING SCALE:   CODE=20
         C     R7,=F'16'               TOO LONG ?
         BH    ERROR3
         SL    R7,=F'1'
         EX    R7,PACKSCAL             PACK SCALING FACTOR
         CVB   R0,DOUB
         ST    R0,SCALE                STORE OVER DEFAULT
         CLI   0(R8),C'/'              SECOND PARM LIST ?
         BNE   SAVELIST
         LA    R9,2(R7,R9)
CALCLEN  AL    R9,=F'2'
         SR    R11,R9                  BYTES REMAINING - 1
         BM    SAVELIST
         EX    R11,SHIFTPRM
         AL    R11,=F'1'
         STH   R11,PARMIN-2
SAVELIST LOAD  EPLOC=MEMBER
         C     R15,=F'4'
         BH    ERROR5                  LOAD FAILED   CODE=24
         LR    R1,R0
         LA    R1,0(,R1)               ZERO TOP BYTE
         ST    R1,@ENTRY               SAVE ENTRY POINT TO MODULE
*
*     START CHAINING THROUGH SYSTEM TABLES
*
         L     R11,16                  R11 -> CVT
         L     R11,0(,R11)             R11 -> -> TCB
         L     R11,0(,R11)             R11 -> TCB
         L     R11,44(,R11)            R11 -> CDE CHAIN
CHKNAME  N     R11,LOW3BYTS            ZERO TOP BYTE & SET COND CODE
         BZ    ERROR6                  CDE CHAIN ENDS WITHOUT SUCESS
         CLC   8(8,R11),MEMBER         AT RIGHT CDE ?
         BE    ATMEMBER                YES, BRANCH
NEXTCDE  L     R11,0(,R11)             R11 -> NEXT CDE IN CHAIN
         B     CHKNAME
ATMEMBER TM    0(R11),X'04'            IS IT A MAJOR CDE ?
         BZ    *+8                     YES, SKIP OVER NEW POINTER
         L     R11,20(,R11)            R11 -> MAJOR CDE
         L     R8,20(,R11)             R8 -> EXTENT LIST FOR CDE
         L     R9,16(,R11)             R9 -> ENTRY POINT
CHECKRB  L     R10,4(,R11)             R10 -> REQUEST BLOCK
         N     R10,LOW3BYTS
         BNZ   ATRB                    FOUND REQ. BLOCK
         L     R11,0(,R11)             R11 -> NEXT CDE
         TM    0(R11),X'04'            MAJOR CDE ?
         BZ    CHECKRB                 YES, BRANCH
         L     R11,20(,R11)            R11 -> MAJOR CDE
         B     CHECKRB
ATRB     TM    10(R10),X'C0'           PROGRAM REQUEST BLOCK ?
         BNZ   NEXTCDE
         N     R9,LOW3BYTS             ZERO TOP BYTE
         CL    R9,@ENTRY               ENTRY POINTS MATCH ?
         BNE   ERROR7                  ERROR   CODE=200
         ST    R10,@MEMPRB             SAVE ADDRESS OF PRB
         ST    R8,@EXTENT              SAVE EXTENT LIST ADDRESS
         L     R9,4(,R8)               NUMBER OF CSECTS IN XL
         LCR   R7,R9
         SLL   R9,2                    LENGTH OF LENGHT LIST
         LA    R11,4(R9,R8)            BXLE COMPARISON REG
         LA    R10,4
         ALR   R8,R10
         ALR   R8,R10                  R8 -> LENGTH LIST
         SLR   R6,R6                   ZERO SUM OF LENGTHS REG
NXTEXTNT AL    R6,0(,R8)               ADD IN LENGTH OF CSECT
         CL    R7,0(R9,R8)             FIND ADDRESS OF LOWEST CSECT
         BNH   *+8
         L     R7,0(R9,R8)
         BXLE  R8,R10,NXTEXTNT
         ST    R7,@MEMBER              R7 -> LOWEST CSECT OF LOAD MOD
         N     R6,LOW3BYTS
         ST    R6,MEMLEN               R6 IS TOTAL LENGTH OF LOAD MOD
         SRDL  R6,33                   NUMBER OF HALFWORDS IN LOAD MOD
         AL    R7,SCALE                ROUND UP
         SL    R7,=F'1'
         D     R6,SCALE                NUMBER OF HALFWORD COUNTERS
         ALR   R7,R7                   NUMBER OF BYTES IN COUNT TABLE
         ST    R7,COUNTLEN
         GETMAIN R,LV=(R7)
         ST    R1,@COUNTS              R1 -> REQUESTED STORAGE
         LR    R6,R1                   SET UP FOR CLEAR
         SLR   R9,R9                   ZERO LENGTH2 & FILL CHARACTER
         MVCL  R6,R8                   CLEAR REQUESTED STORAGE
         ST    R12,@BASEREG
         STIMER TASK,TIMEINT,TUINTVL=TIMETICK
         LA    R1,PARMIN-2
         ST    R1,@PARMLST
         LA    R1,@PARMLST
         L     R15,@ENTRY
         BALR  R14,R15                 CALL PROBLEM PROGRAM
         BALR  R12,0
         USING *,R12
         L     R12,@BASEREG
         USING BASEREG,R12
         LA    R13,SAVEAREA
         TTIMER CANCEL
         MVC   H1MEM(8),MEMBER         MOVE MEMBER NAME INTO HEADER
         TIME  DEC
         ST    R1,WORK
         UNPK  H1JUL+1(5),WORK+1(3)    PUT JULIAN DATE INTO HEADER
         MVC   H1JUL(2),H1JUL+1        LEAVE GAP FOR PERIOD
         MVI   H1JUL+2,C'.'
         ST    R0,WORK
         MVI   WORK+3,X'04'            UNPACK TO A SPACE
         UNPK  H1TIME+2(7),WORK(4)
         MVC   H1TIME+1(4),H1TIME+2    LEAVE ROOM FOR COLON
         MVC   H1TIME(2),H1TIME+1      LEAVE ROOM FOR SECOND COLON
         MVI   H1TIME+2,C':'
         MVI   H1TIME+5,C':'
         L     R9,@COUNTS              SET UP FOR BXLE
         L     R11,COUNTLEN            R11 IS BXLE COMPARISON REG
         ALR   R11,R9                  R11 POINTS PAST COUNT TABLE
         LA    R10,2                   BXLE INCREMENT
         SLR   R11,R10                 R11 POINTS TO LAST ELEMENT IN CT
         SR    R8,R8                   ZERO TOTAL REGISTER
         AH    R8,0(,R9)               ADD IN COUNT FOR ADDRESS
         BXLE  R9,R10,*-4              SUM ACROSS COUNT TABLE
         LH    R7,LOWCOUNT             ADD LOW COUNT INTO TOTAL
         AR    R8,R7
         LH    R7,HIGHCNT              ADD HIGH COUNT INTO TOTAL
         AR    R8,R7
         LR    R7,R8
         SRL   R7,1                    R7 IS ONE HALF TOTAL
         SR    R6,R6                   ZERO TOTAL PERCENT REG
         SR    R5,R5                   ZERO COLUMN POINTER
         OPEN  (SYSPRINT,(OUTPUT))
         L     R9,@COUNTS              RESET BXLE REG TO BEGINNING
NXTCOUNT CL    R5,=F'132'              AT END OF PAPER ?
         BL    NOTFULL
         SR    R5,R5                   RESET COLUMN POINTER TO ZERO
CHKLINES L     R3,LINECNT
         C     R3,=F'25'
         BL    NOTPAGE
         L     R2,PAGECNT
         A     R2,=F'1'
         ST    R2,PAGECNT
         CVD   R2,DOUB                 PUT PAGE NUMBER IN HEADER
         MVC   H1PAGE(4),=X'40202120'  EDIT MASK
         ED    H1PAGE(4),DOUB+6
         PUT   SYSPRINT,HEADER1
         PUT   SYSPRINT,HEADER2
         PUT   SYSPRINT,HEADER3
         SR    R3,R3                   RESET LINE COUNT
         ST    R3,LINECNT
NOTPAGE  C     R6,OLDTOTAL
         BE    HAVEBLNK
         TM    FLAGS,BLANKBIT
         BZ    PUTFLINE
         L     R3,SAVEBOFF
         SL    R3,=F'1'
         ST    R3,WORK
         UNPK  WORK+2(6),WORK(5)
         TR    WORK+2(5),HEXTABLE-240
         MVC   ENDOFF(5),WORK+2
         PUT   SYSPRINT,BLNKLINE
         L     R3,LINECNT
         A     R3,=F'1'
         ST    R3,LINECNT
         NI    FLAGS,255-BLANKBIT
         B     CHKLINES
HAVEBLNK TM    FLAGS,BLANKBIT
         BO    CLRLINE
         MVC   STARTOFF(5),OUTLINE+2
         OI    FLAGS,BLANKBIT
         B     CLRLINE
PUTFLINE PUT   SYSPRINT,OUTLINE
         L     R3,LINECNT
         A     R3,=F'1'
         ST    R3,LINECNT
         ST    R6,OLDTOTAL
CLRLINE  MVI   OUTLINE+1,X'40'
         MVC   OUTLINE+2(131),OUTLINE+1
NOTFULL  LR    R1,R9
         SL    R1,@COUNTS
         M     R0,SCALE
         ST    R1,WORK                 OFFSET INTO PROBLEM PROGRAM
         TST   R5
         BNZ   *+8
         ST    R1,SAVEBOFF
         UNPK  WORK+2(6),WORK(5)       PAD WITH HEX F'S
         TR    WORK+2(5),HEXTABLE-240  CONVERT TO PRINTABLE HEX
         LA    R4,OUTLINE+1(R5)        POINT TO CORRECT COLUMN
         MVC   1(5,R4),WORK+2          MOVE INTO PRINT LINE
         LH    R1,0(,R9)               INTERRUPT COUNT
         AR    R6,R1                   TOTAL INTERRUPTS SO FAR
         CVD   R1,DOUB2
         M     R0,=F'100000'           SCALE FOR THREE DEC PLACES
         AR    R1,R7                   ROUND OFF PROPERLY
         DR    R0,R8                   CALC PERCENTAGE OF TOTAL
         CVD   R1,DOUB
         LR    R1,R6                   CALC TOTAL PERCENTAGE
         M     R0,=F'100000'
         AR    R1,R7
         DR    R0,R8
         CVD   R1,DOUB1
         MVC   19(9,R4),=X'40202020214B202020'
         ED    19(9,R4),DOUB1+4
         MVC   11(9,R4),=X'40202020214B202020'
         ED    11(9,R4),DOUB+4
         MVC   6(6,R4),=X'402020202120'
         ED    6(6,R4),DOUB2+5
         AL    R5,=F'34'               BUMP COLUMN POINTER
         BXLE  R9,R10,NXTCOUNT         ON TO THE NEXT
         C     R6,OLDTOTAL
         BE    LASTBLNK
         TM    FLAGS,BLANKBIT
         BZ    LASTLINE
         L     R3,SAVEBOFF
         S     R3,=F'1'
         ST    R3,WORK
         UNPK  WORK+2(6),WORK+5
         TR    WORK+2(5),HEXTABLE-240
         MVC   ENDOFF(5),WORK+2
         PUT   SYSPRINT,BLNKLINE
LASTLINE PUT   SYSPRINT,OUTLINE
         B     EXIT
LASTBLNK L     R1,COUNTLEN
         M     R0,SCALE
         SL    R1,=F'1'
         ST    R1,WORK
         UNPK  WORK+2(6),WORK(5)
         TR    WORK+2(5),HEXTABLE-240
         MVC   ENDOFF(5),WORK+2
         PUT   SYSPRINT,BLNKLINE
EXIT     CVD   R8,DOUB
         MVC   TOTCOUNT(8),=X'4020202020202120'
         ED    TOTCOUNT(8),DOUB+4
         LH    R6,LOWCOUNT
         CVD   R6,DOUB
         MVC   PLOWCNT(6),=X'402020202120'
         ED    PLOWCNT(6),DOUB+5
         LH    R6,HIGHCNT
         MVC   PHIGHCNT(6),=X'402020202120'
         ED    PHIGHCNT(6),DOUB+5
         PUT   SYSPRINT,FINALINE
         CLOSE (SYSPRINT)
         L     R13,4(,R13)
         LM    R14,R12,12(R13)
         SR    R15,R15
         BR    R14
         EJECT
PACKSCAL PACK  DOUB,0(*-*,R10)
MOVENAME MVC   MEMBER(*-*),PARMIN      PUT MEMBER NAME IN 8 CHAR FIELD
MOVEPARM MVC   PARMIN(*-*),2(R1)       MOVE IN PARAMETER LIST
SHIFTPRM MVC   PARMIN(*-*),1(R8)
ERROR1   ABEND 12,DUMP
ERROR2   ABEND 16,DUMP
ERROR3   ABEND 20,DUMP
ERROR4   ABEND 28,DUMP
ERROR5   ABEND 24,DUMP
ERROR6   ABEND 100,DUMP
ERROR7   ABEND 200,DUMP
         DROP  R12
         EJECT
         USING *,R15
TIMEINT  STM   R14,R3,12(R13)
         L     R1,@MEMPRB
         L     R0,20(,R1)              R0 HAS LOW WORD OF PSW
         LR    R2,R0
         N     R0,LOW3BYTS
         SRL   R2,30
         AR    R2,R2
         SR    R0,R2
         LA    R2,LOWCOUNT             POINT TO COUNTER
         S     R0,@MEMBER              OFFSET INTO LOAD MODULE
         BM    ADDCOUNT                IF MINUS,  ADD INTO LOW COUNT
         SRDL  R0,33                   OFFSET IN HALFWORDS
         A     R1,SCALE                ROUND UP INTO COUNT BIN
         S     R1,=F'1'
         D     R0,SCALE                GET BIN NUMBER
         AR    R1,R1                   GET BIN OFFSET IN TABLE
         LA    R2,HIGHCNT              POINT TO COUNTER
         CL    R1,COUNTLEN             IS OFFSET PAST TABLE ?
         BNL   ADDCOUNT                IF SO, ADD INTO HIGH COUNTER
         LR    R2,R1
         AL    R2,@COUNTS              R2 -> BIN TO ADD INTO
ADDCOUNT LH    R1,0(,R2)               R1 HAS PREVIOUS COUNT
         C     R1,=F'32767'            IS IT FULL ALREADY
         BNL   *+12                    IF SO, BRANCH OVER ADD & STORE
         A     R1,=F'1'
         STH   R1,0(,R2)               STORE BACK INTO TABLE
         STIMER TASK,TIMEINT,TUINTVL=TIMETICK
         LM    R14,R3,12(R13)          RELOAD REGS
         SR    R15,R15
         BR    R14                     RETURN
         EJECT
SYSPRINT DCB   MACRF=(PM),DSORG=PS,RECFM=FBA,BLKSIZE=1330,LRECL=133,   *
               DDNAME=PROFILE
         EJECT
         LTORG
         SPACE 4
SAVEAREA DS    9D
DOUB     DS    D
DOUB1    DS    D
DOUB2    DS    D
HEXTABLE DC    C'0123456789ABCDEF'
@BASEREG DS    F
TIMETICK DC    F'641'
@ENTRY   DS    F
@MEMBER  DS    F
@MEMPRB  DS    F
@EXTENT  DS    F
@PARMLST DS    F
OLDTOTAL DC    F'0'
SAVEBOFF DS    F
SCALE    DC    F'2'
LOW3BYTS DC    X'00FFFFFF'
MEMLEN   DS    F
@COUNTS  DS    F
COUNTLEN DS    F
LINECNT  DC    F'60'
PAGECNT  DC    F'0'
WORK     DS    CL8
MEMBER   DC    CL8' '
LOWCOUNT DC    H'0'
HIGHCNT  DC    H'0'
         DC    H'0'
PARMIN   DC    101X'17'
HEADER1  DC    C'1                                          EXECUTION  *
               TIME  PROFILE  FOR  MODULE  '
H1MEM    DC    C'XXXXXXXX                               PAGE'
H1PAGE   DC    C'XXXX    '
H1JUL    EQU   HEADER1+4
H1TIME   EQU   H1JUL+10
HEADER2  DC    C'-'
         DC    4C'  HEX                 TOTAL       '
HEADER3  DC    C' '
         DC    4C'OFFSET COUNT PERCENT PERCENT      '
OUTLINE  DC    CL133'0 '
BLNKLINE DC    C'0 OFFSETS '
STARTOFF DC    C'XXXXX TO '
ENDOFF   DC    CL114'XXXXX WERE NOT ACTIVE'
FINALINE DC    C'0    EXECUTION STATISTICS:     TOTAL INTERRUPTS='
TOTCOUNT DC    C'XXXXXXXX     INTERRUPTS OUTSIDE OF LOAD MODULE:     LO*
               W='
PLOWCNT  DC    C'XXXXXX   HIGH='
PHIGHCNT DC    C'XXXXXX          '
FLAGS    DC    X'00'
         EJECT
BLANKBIT EQU   X'80'
         REGS
         END   $PROFILE
