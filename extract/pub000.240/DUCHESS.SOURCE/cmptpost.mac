         TITLE 'CMPTPOST -- POSITIONAL TERM CALCULATION'
*
*        MACRO TO DEFINE A RANK IN A POSITION TABLE.
*
         MACRO
&LABEL   DB    &P1,&P2,&P3,&P4,&P5,&P6,&P7,&P8
&LABEL   DC    H'&P1,&P2,&P3,&P4,&P5,&P6,&P7,&P8.'
         MEND
CMPTPOST CSECT
         USING *,R15
         USING POSDB,R11
         USING COTAB,R10
         USING FLAGS,R9
*
*        BLACK PIECE POSITION TERM.
*
         ZERO  POSTNVAL
         LH    R7,BEO             GET BLACK END OFFSET.
         LA    R7,BSQUARES(R7)
         LH    R6,BNO
         LA    R6,BSQUARES(R6)
         LC    R1,BSQUARES        GET THE KING
         AR    R1,R1
         LA    R2,BKBD
         L     R3,BLCSFLG         WHICH BOARD AERE WE TO USE?
         TST   R3                 0 => MID, 1 => TRANSITION, 2 => END
         IF    NZ
         LA    R2,BTRANSBD         ASSUME TRANSITION BOARD
         C     R3,=F'2'
         IF    NL
         LA    R2,BQBD            ENDGAME BOARD
         ENDIF
         ENDIF
         AH    POSTNVAL,0(R1,R2)
         CLR   R6,R7
         WHILE L
         IC    R1,16(R6)          GET THE TYPE OF THIS PIECE.
         SLL   R1,2               GET TO A WORD BOUNDARY.
         L     R2,BPBOARD(R1)     GET THE POSITION CONTROL BOARD.
         IC    R1,0(R6)           GET THE SQUARE OFFSET INTO R1
         AR    R1,R1              GET IT TO A HALFWORD BOUNDARY.
         AH    POSTNVAL,0(R1,R2)  ADD IN THE POSITION VALUE HERE.
         LA    R6,1(R6)           INCREMENT TO NEXT POSTTION.
         CLR   R6,R7
         ENDWHILE
         LB    R2,WT              GET ENEMY THREATS.
         COMB  R2
         NB    R2,BQT             KEEP ONLY OUR QUEEN THREATS NOT THRT.
         COBB  R1,R5,R4,R2
         AR    POSTNVAL,R1        ADD IT IN
         LB    R2,BRT
         COBB  R1,R5,R4,R2
         AR    POSTNVAL,R1
         AR    POSTNVAL,R1
         LB    R2,BP              GET OUR PAWNS.
         COMB  R2                 KEEP ONLY NON-PAWNS.
         NB    R2,BBT             KEEP ONLY BISHOP THREATS.
         COBB  R1,R5,R4,R2
         AR    POSTNVAL,R1
         AR    POSTNVAL,R1
         AR    POSTNVAL,R1
*
*        WHITE PIECE POSITION TERM.
*
         NEG   POSTNVAL           NEGATE POSITION VALUE.
         LH    R7,WEO             GET WHITE END OFFSET.
         LA    R7,WSQUARES(R7)
         LH    R6,WNO
         LA    R6,WSQUARES(R6)
         IC    R1,WSQUARES        GET KING
         AR    R1,R1
         LA    R2,WKBD
         L     R3,WHCSFLG         WHICH BOARD TO USE?
         TST   R3
         IF    NZ
         LA    R2,WTRANSBD
         C     R3,=F'2'
         IF    NL
         LA    R2,WQBD
         ENDIF
         ENDIF
         AH    POSTNVAL,0(R1,R2)
         CLR   R6,R7
         WHILE L
         IC    R1,16(R6)          GET THE TYPE OF THIS PIECE.
         SLL   R1,2               GET IT TO A WORD BOUNDARY.
         L     R2,WPBOARD(R1)     GET THE POSITION BOARD ADDRESS.
         IC    R1,0(R6)           GET THE SQUARE OFFEET.
         AR    R1,R1              GET TO A HALFWORD BOUNDARY.
         AH    POSTNVAL,0(R1,R2)  ADD IN THE VALUE.
         LA    R6,1(R6)           INCREMENT POINTER.
         CLR   R6,R7
         ENDWHILE
         LB    R2,BT              GET ENEMY THREATS.
         COMB  R2
         NB    R2,WQT             KEEP ONLY OUR QUEEN THREATS.
         COBB  R1,R5,R4,R2
         AR    POSTNVAL,R1
         LB    R2,WRT             GET ROOK THREATS.
         COBB  R1,R5,R4,R2
         AR    POSTNVAL,R1
         AR    POSTNVAL,R1
         LB    R2,WP              GET OUR PAWNS.
         COMB  R2
         NB    R2,WBT             KEEP ONLY OUR BISHOP THREATS.
         COBB  R1,R5,R4,R2
         AR    POSTNVAL,R1
         AR    POSTNVAL,R1
         AR    POSTNVAL,R1
         EJECT
*
* BLOCKED-IN ROOK PENALTY
*
         LA    R4,BLOCKTBL
         LR    R5,R11
         DO    R6,2               FOR WHITE/BLACK
         DO    R7,2               FOR QUEENSIDE/KINGSIDE
         LB    R2,WK-WK(R5)
         NB    R2,0(R4)
         ANYB  R1,R2
         IF    NZ
         LB    R2,WR-WK(R5)
         NB    R2,8(R4)
         ANYB  R2,R2
         NR    R1,R2
         LB    R2,WP-WK(R5)
         NB    R2,16(R4)
         ANYB  R2,R2
         NR    R1,R2
         LB    R2,WP-WK(R5)
         NB    R2,24(R4)
         ANYB  R2,R2
         NR    R1,R2
         N     R1,32(R4)
         AR    POSTNVAL,R1
         ENDIF
         LA    R4,40(R4)
         ENDDO
         LA    R5,BK-WK(R11)
         ENDDO
         EJECT
*
* ENDGAME TERMS
*
         L     R1,BLCSFLG
         O     R1,WHCSFLG
         IF    NZ
*
*  ENDGAME KING TO PAWN TROPISM
*
         ZERO  R1                 NUMBER OF PAWNS FOUND
         XBR   R2,R2              RANK/FILE ACCUMULATOR
         ZERO  R4
         LH    R6,WPO
         LH    R7,WEO
         SR    R7,R6
         IF    H
         AR    R1,R7
         LA    R6,WSQUARES-1(R6)
         DO    R7
         IC    R4,0(R6,R7)
         SRDL  R4,3
         SRL   R5,29
         AR    R2,R4
         AR    R3,R5
         ENDDO
         ENDIF
         LH    R6,BPO
         LH    R7,BEO
         SR    R7,R6
         IF    H
         AR    R1,R7
         LA    R6,BSQUARES-1(R6)
         DO    R7
         IC    R4,0(R6,R7)
         SRDL  R4,3
         SRL   R5,29
         AR    R2,R4
         AR    R3,R5
         ENDDO
         ENDIF
         TST   R1
         IF    NZ
         LR    R5,R3
         ZERO  R4
         DR    R4,R1              RANK AVERAGE
         SRDA  R2,32
         DR    R2,R1              FILE AVERAGE
         LR    R4,R3
         ZERO  R1
         L     R2,BLCSFLG
         TST   R2
         IF    NZ
         LC    R2,BSQUARES
         DIST  R1,R2,R4
         S     R1,=F'6'
         NEG   R1
         ENDIF
         L     R2,WHCSFLG
         TST   R2
         IF    NZ
         LC    R2,WSQUARES
         DIST  R1,R2,R4
         S     R1,=F'6'
         ENDIF
         L     R3,WHCSFLG
         A     R3,BLCSFLG
         MR    R2,R1
         AR    R3,R3
         SR    POSTNVAL,R3
         ENDIF
*
* OPPOSITION TERM
*
         LH    R2,WPO
         AH    R2,BPO
         C     R2,=F'2'
         IF    NH
         LC    R2,WSQUARES
         SRDL  R2,3
         SRL   R3,29
         LC    R4,BSQUARES
         SRDL  R4,3
         SRL   R5,29
         SR    R2,R4
         SR    R3,R5
         OR    R2,R5
         N     R2,=F'1'
         IF    Z
         LA    R2,1
         CLI   COLOR,X'00'
         IF    E
         NEG   R2
         ENDIF
         AR    POSTNVAL,R2
         ENDIF
         ENDIF
         ENDIF
         BR    R14
         EJECT
BPBOARD  DC    A(BKBD)            BLACK KING POSIOION BOARD ADDRESS.
         DC    A(BQBD)            BLACK QUEEN POSITION BOARD ADDRESS.
         DC    A(BRBD)            BLACK ROOK POSITION BOARD ADDRESS.
         DC    A(BBBD)            POSITION BOARD ADDRESS.
         DC    A(BNBD)            BLACK KNIGHT POSITION BOARD ADDRESS.
         DC    A(BPBD)            BLACK PAWN POSITION BOARD ADDRESS.
WPBOARD  DC    A(WKBD)            WHITE KING POSITION BOARD ADDRESS.
         DC    A(WQBD)            WHITE QUEEN POSITION BOARD ADDRESS.
         DC    A(WRBD)            WHITE ROOK POSITION BOARD ADDRESS.
         DC    A(WBBD)            WHITE BISHOP POSITION BOARD ADDRESS.
         DC    A(WNBD)            WHITE KNIGHT POSITION BOARD ADDRESS.
         DC    A(WPBD)            WHITE PAWN POSITION BOARD ADDRESS.
         PRINT NOGEN
BKBD     EQU   *
         DB    +26,+30,+20,+00,+00,+20,+30,+26
         DB    +15,+15,+04,-04,-04,+04,+15,+15
         DB    -03,-04,-06,-08,-08,-06,-04,-03
         DB    -05,-06,-07,-09,-09,-07,-06,-05
         DB    -07,-09,-12,-15,-15,-12,-09,-07
         DB    -10,-14,-18,-20,-20,-18,-14,-10
         DB    -10,-14,-18,-20,-20,-18,-14,-10
         DB    -10,-14,-18,-20,-20,-18,-14,-10
WKBD     EQU   *
         DB    -10,-14,-18,-20,-20,-18,-14,-10
         DB    -10,-14,-18,-20,-20,-18,-14,-10
         DB    -10,-14,-18,-20,-20,-18,-14,-10
         DB    -07,-09,-12,-15,-15,-12,-09,-07
         DB    -05,-06,-07,-09,-09,-07,-06,-05
         DB    -03,-04,-06,-08,-08,-06,-04,-03
         DB    +15,+15,+04,-04,-04,+04,+15,+15
         DB    +26,+30,+20,+00,+00,+20,+30,+26
BTRANSBD EQU   *
         DB    +14,+16,+12,+03,+03,+12,+16,+14
         DB    +09,+10,+05,+02,+02,+05,+10,+09
         DB    +01,+01,+02,+02,+02,+02,+01,+01
         DB    +01,+01,+02,+02,+02,+02,+01,+01
         DB    +00,+00,+00,+00,+00,+00,+00,+00
         DB    -02,-02,-04,-05,-05,-04,-02,-02
         DB    -04,-06,-07,-08,-08,-07,-06,-04
         DB    -10,-07,-09,-10,-10,-09,-07,-10
WTRANSBD EQU   *
         DB    -10,-07,-09,-10,-10,-09,-07,-10
         DB    -04,-06,-07,-08,-08,-07,-06,-04
         DB    -02,-02,-04,-05,-05,-04,-02,-02
         DB    +00,+00,+00,+00,+00,+00,+00,+00
         DB    +01,+01,+02,+02,+02,+02,+01,+01
         DB    +01,+01,+02,+02,+02,+02,+01,+01
         DB    +09,+10,+05,+02,+02,+05,+10,+09
         DB    +14,+16,+12,+03,+03,+12,+16,+14
BQBD     EQU   *
BRBD     EQU   *
BBBD     EQU   *
         DB    +00,+03,+05,+07,+07,+05,+03,+00
         DB    +03,+05,+07,+09,+09,+07,+05,+03
         DB    +05,+07,+10,+12,+12,+10,+07,+05
         DB    +07,+09,+12,+14,+14,+12,+09,+07
         DB    +07,+09,+12,+14,+14,+12,+09,+07
         DB    +05,+09,+09,+09,+09,+09,+09,+05
         DB    +02,+02,+04,+04,+04,+04,+02,+02
         DB    -10,+00,+00,+00,+00,+00,+00,-10
BNBD     EQU   *
         DB    +00,+03,+05,+07,+07,+05,+03,+00
         DB    +00,+05,+07,+09,+09,+07,+05,+00
         DB    -01,+07,+10,+12,+12,+10,+07,-01
         DB    +01,+09,+12,+14,+14,+12,+09,+01
         DB    +01,+09,+12,+14,+14,+12,+09,+01
         DB    -01,+09,+09,+09,+09,+09,+09,-01
         DB    +00,+02,+04,+04,+04,+04,+02,+00
         DB    -10,+00,+00,+00,+00,+00,+00,-10
WQBD     EQU   *
WRBD     EQU   *
WBBD     EQU   *
         DB    -10,+00,+00,+00,+00,+00,+00,-10
         DB    +02,+02,+04,+04,+04,+04,+02,+02
         DB    +05,+09,+09,+09,+09,+09,+09,+05
         DB    +07,+09,+12,+14,+14,+12,+09,+07
         DB    +07,+09,+12,+14,+14,+12,+09,+07
         DB    +05,+07,+10,+12,+12,+10,+07,+05
         DB    +03,+05,+07,+09,+09,+07,+05,+03
         DB    +00,+03,+05,+07,+07,+05,+03,+00
WNBD     EQU   *
         DB    -10,+00,+00,+00,+00,+00,+00,-10
         DB    +00,+02,+04,+04,+04,+04,+02,+00
         DB    -01,+09,+09,+09,+09,+09,+09,-01
         DB    +01,+09,+12,+14,+14,+12,+09,+01
         DB    +01,+09,+12,+14,+14,+12,+09,+01
         DB    -01,+07,+10,+12,+12,+10,+07,-01
         DB    +00,+05,+07,+09,+09,+07,+05,+00
         DB    +00,+03,+05,+07,+07,+05,+03,+00
WPBD     EQU   *
         DB    +00,+00,+00,+00,+00,+00,+00,+00
         DB    +00,+00,+00,+00,+00,+00,+00,+00
         DB    +00,+00,+00,+00,+00,+00,+00,+00
         DB    +00,+00,+18,+21,+21,+18,+00,+00
         DB    +00,+00,+13,+16,+16,+13,+00,+00
         DB    +00,+00,+07,+10,+10,+07,+00,+00
         DB    +00,+00,+00,+00,+00,+00,+00,+00
         DB    +00,+00,+00,+00,+00,+00,+00,+00
BPBD     EQU   *
         DB    +00,+00,+00,+00,+00,+00,+00,+00
         DB    +00,+00,+00,+00,+00,+00,+00,+00
         DB    +00,+00,+07,+10,+10,+07,+00,+00
         DB    +00,+00,+13,+16,+16,+13,+00,+00
         DB    +00,+00,+18,+21,+21,+18,+00,+00
         DB    +00,+00,+00,+00,+00,+00,+00,+00
         DB    +00,+00,+00,+00,+00,+00,+00,+00
         DB    +00,+00,+00,+00,+00,+00,+00,+00
         PRINT GEN
BLOCKTBL EQU   *
         DC    X'0000000000000060'  WK ON B1 OR C1
         DC    X'00000000000000C0'  WR ON A1 OR B1
         DC    X'0000000000808000'  WP ON A2 OR A3
         DC    X'0000000000404000'  WP ON B2 OR B3
         DC    F'-32,0'             TRAPPED ROOK PENALTY + PAD
         DC    X'0000000000000006'  K F1 G1
         DC    X'0000000000000003'  R G1 H1
         DC    X'0000000000010100'  P H2 H3
         DC    X'0000000000020200'  P G2 G3
         DC    F'-32,0'
         DC    X'6000000000000000'  BK ON C8 OR B8
         DC    X'C000000000000000'  R A8 B8
         DC    X'0080800000000000'  P A7 A6
         DC    X'0040400000000000'  P B7 B6
         DC    F'+32,0'
         DC    X'0600000000000000'  K F8 G8
         DC    X'0300000000000000'  R G8 H8
         DC    X'0001010000000000'  P H7 H6
         DC    X'0002020000000000'  P G7 G6
         DC    F'+32,0'
POSTNVAL EQU   8                  POSITION VALUE REGISTER.
         REGS
COTAB    DSECT
         DS    256X
POSDB    DSECT
         POSDB
FLAGS    DSECT
WHCSFLG  DS    F
BLCSFLG  DS    F
         END
