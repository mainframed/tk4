         TITLE 'MOVECHAR -- CONVERT INTERNAL FORMAT TO STRING'
MOVECHAR CSECT
         EXTRN MVECHK
         EXTRN CHARMOVE
         ENTER
         L     R11,0(R1)          R11 -> POSDB
         USING POSDB,R11
         L     R9,4(R1)
         LH    R9,0(R9)           R9 = INTERNAL FORMAT MOVE
         L     R8,8(R1)           R8 -> OUTPUT STRING AREA
         TST   R9
         IF    Z
         MVC   0(6,R8),NULLMOVE
         B     RET0
         ENDIF
         ZERO  R0
         STH   R0,0(R8)
*
* CHECK FOR CASTLING
*
         LR    R2,R9
         SRL   R2,8
         N     R2,=X'000000C0'
         C     R2,=X'00000080'
         IF    E
         LA    R1,CASSTR
         SCALL APPEND
         LR    R2,R9
         N     R2,=X'00000007'
         C     R2,=X'00000002'
         IF    E
         LA    R1,QCASSTR
         SCALL APPEND
         ENDIF
         SCALL CHKCHK
         B     RET0
         ENDIF
*
* CHECK FOR PAWN MOVE
*
         LA    R7,REGTAB          DEFAULT PATTERN TABLE
         LR    R2,R9
         SRL   R2,8
         N     R2,=X'0000003F'    SOURCE SQUARE
         BSETB R4,0(R2)
         LB    R0,WP
         OB    R0,BP
         NBR   R0,R4
         TSTB  R0
         IF    NZ                 IF PAWN MOVE
         LA    R7,PAWNTAB         DEFAULT PAWN TABLE
         LR    R2,R9
         SRL   R2,8
         N     R2,=X'000000C0'
         C     R2,=X'00000040'
         IF    E                  PROMOTION/ENPASS
         LR    R2,R9
         N     R2,=X'00000038'
         IF    NZ
         C     R2,=X'00000038'
         IF    NZ
         LA    R7,PCAPTTAB
         ENDIF
         ENDIF
         ENDIF
         LR    R2,R9
         N     R2,=X'0000003F'
         BSETB R4,0(R2)
         LB    R0,W
         OB    R0,B
         NBR   R0,R4
         TSTB  R0
         IF    NZ
         LA    R7,PCAPTTAB
         ENDIF
         ENDIF
*
* R7 -> PATTERN TABLE
*
         LOOP
         L     R15,0(R7)
         TST   R15
         IF    Z
         PRNTF 'Bad move table%L'
         BREAK ,2
         ENDIF
         ZERO  R0
         STH   R0,0(R8)
         REPEAT
         BALR  R14,R15
         LA    R7,4(R7)
         L     R15,0(R7)
         TST   R15
         UNTIL Z
         SCALL TEST
         TST   R15
         BREAK Z
         LA    R7,4(R7)
         ENDLOOP
         B     RET0
REGTAB   DC    A(PIECE,TAIL,0)
         DC    A(PIECE,SFILE,TAIL,0)
         DC    A(PIECE,SRANK,TAIL,0)
         DC    A(PIECE,SFILE,SRANK,TAIL,0)
         DC    A(0)
PAWNTAB  DC    A(TAIL,0)
         DC    A(PIECE,SFILE,SRANK,TAIL,0)
         DC    A(0)
PCAPTTAB DC    A(SFILE,TAIL,0)
         DC    A(PIECE,SFILE,SRANK,TAIL,0)
         DC    A(0)
         EJECT
*
* GENERATE "TAIL" OF MOVE FORMAT
*
TAIL     ENTER
         SCALL CAPT
         SCALL DST
         SCALL PROM
         SCALL CHKCHK
         SCALL ENP
         B     RET0
         EJECT
*
* ADD PIECE MOVING
*
PIECE    ENTER DSA=YES
         LR    R2,R9
         SRL   R2,8
         N     R2,=X'0000003F'    SOURCE SQUARE
         BSETB R4,0(R2)
         LA    R1,PCODES
         LA    R3,WK
         DO    R0,6
         LB    R6,WK-WK(R3)
         OB    R6,BK-WK(R3)
         NBR   R6,R4
         TSTB  R6
         BREAK NZ
         LA    R3,8(R3)
         LA    R1,1(R1)
         ENDDO
         LA    R0,1
         STH   R0,TMPSTR
         MVC   TMPSTR+2(1),0(R1)
         LA    R1,TMPSTR
         SCALL APPEND
         B     RET0
         EJECT
*
* IF CAPTURE, APPEND CAPTURE SYMBOL
*
CAPT     ENTER
         LR    R2,R9
         N     R2,=X'0000003F'
         BSETB R4,0(R2)
         LB    R0,W
         OB    R0,B
         NBR   R0,R4
         TSTB  R0
         IF    Z
         LR    R2,R9
         SRL   R2,8
         N     R2,=X'000000C0'
         C     R2,=X'00000040'
         BNE   RET0               NOT PROMOTION/ENPASS
         LR    R2,R9
         N     R2,=X'00000038'
         BE    RET0               PROMOTION TO RANK 0
         C     R2,=X'00000038'
         BE    RET0               PROMOTION TO RANK 7
         ENDIF
         LA    R1,XSTR
         SCALL APPEND
         B     RET0
NULLMOVE STRNG ' -- '
XSTR     STRNG 'x'
         EJECT
*
* ADD DESTINATION SQUARE TO STRING
*
DST      ENTER
         LR    R2,R9
         SCALL FILE
         SCALL RANK
         B     RET0
SFILE    ENTER
         LR    R2,R9
         SRL   R2,8
         SCALL FILE
         B     RET0
SRANK    ENTER
         LR    R2,R9
         SRL   R2,8
         SCALL RANK
         B     RET0
FILE     ENTER DSA=YES
         N     R2,=X'00000007'
         LA    R1,1
         STH   R1,TMPSTR
         IC    R1,AFILES(R2)
         STC   R1,TMPSTR+2
         LA    R1,TMPSTR
         SCALL APPEND
         B     RET0
RANK     ENTER DSA=YES
         SRL   R2,3
         N     R2,=X'00000007'
         LA    R1,1
         STH   R1,TMPSTR
         IC    R1,ARANKS(R2)
         STC   R1,TMPSTR+2
         LA    R1,TMPSTR
         SCALL APPEND
         B     RET0
AFILES   DC    C'abcdefgh'
ARANKS   DC    C'87654321'
         EJECT
*
* IF CHECK, ADD CODE
*
CHKCHK   ENTER
         LR    R0,R9
         LR    R1,R11
         SCALL MVECHK
         C     R15,=F'2'
         BL    RET0
         LA    R1,CHKSTR
         C     R15,=F'3'
         IF    E
         LA    R1,MATESTR
         ENDIF
         SCALL APPEND
         B     RET0
CHKSTR   STRNG '+'
MATESTR  STRNG '++'
         EJECT
*
* ADD PROMOTION CODE, IF ANY
*
PROM     ENTER DSA=Y
         LR    R2,R9
         SRL   R2,8
         N     R2,=X'000000C0'
         C     R2,=X'00000040'
         BNE   RET0
         LR    R2,R9
         N     R2,=X'00000038'
         IF    NZ
         C     R2,=X'00000038'
         BNE   RET0
         ENDIF
         LR    R2,R9
         SRL   R2,6
         N     R2,=X'00000003'
         LA    R1,1
         STH   R1,TMPSTR
         IC    R1,PCODES+1(R2)
         STC   R1,TMPSTR+2
         LA    R1,TMPSTR
         SCALL APPEND
         B     RET0
         EJECT
*
* IF ENPASSANT CAPTURE, ADD " E.P."
*
ENP      ENTER
         LR    R2,R9
         SRL   R2,8
         N     R2,=X'000000C0'
         C     R2,=X'00000040'
         BNE   RET0
         LR    R2,R9
         N     R2,=X'00000038'
         BZ    RET0
         C     R2,=X'00000038'
         BE    RET0
         LA    R1,ENPASTR
         SCALL APPEND
         B     RET0
ENPASTR  STRNG ' e.p.'
         EJECT
*
* RETURNS 0 IF R8 -> UNAMBIGUOUS MOVE STRING
* ELSE 1
TEST     ENTER DSA=YES
         ST    R11,PLIST
         ST    R8,PLIST+4
         LA    R1,PLIST
         SCALL CHARMOVE
         B     RET
         EJECT
*
* APPEND R1->STRING TO R8->STRING
*
APPEND   ENTER
         LH    R2,0(R8)
         LA    R3,2(R2,R8)
         LH    R4,0(R1)
         LA    R5,2(R1)
         TST   R4
         WHILE H
         MVC   0(1,R3),0(R5)
         LA    R2,1(R2)
         LA    R3,1(R3)
         LA    R5,1(R5)
         S     R4,=F'1'
         ENDWHILE
         STH   R2,0(R8)
         B     RET0
*
RET0     ZERO  R15
RET      EXIT  RC=(R15)
*
PCODES   DC    C'KQRBNP?'
CASSTR   STRNG 'O-O'
QCASSTR  STRNG '-O'
         DSA
PLIST    DS    8D
TMPSTR   DS    64X
         ENDDSA
POSDB    DSECT
         POSDB
         REGS
         END
