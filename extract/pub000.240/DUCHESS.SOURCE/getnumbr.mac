         TITLE '---- GETNUMBR:  ROUTINE TO CONVERT NUMBERS ----'
***********************************************************************
*                                                                     *
*                                                                     *
*        GETNUMBR:  ROUTINE TO CONVERT NUMBERS FROM EBCDIC TO BINARY  *
*                                                                     *
*        AUTHOR:                  E JENSEN                            *
*                                                                     *
*        DATE WRITTEN:            JUNE 16, 1977                       *
*                                                                     *
*        LAST UPDATE:             JUNE 19, 1977       ECJ             *
*                                                                     *
*                                                                     *
*        CALLING CONVENTIONS:                                         *
*              R0 HAS FILE OPTION WORD                                *
*              R13 -> STACK AREA                                      *
*              R14 HAS RETURN ADDRESS                                 *
*                                                                     *
*        RETURN CONVENTIONS:                                          *
*              R1 HAS FULLWORD BINARY INTEGER                         *
*              R15 HAS RETURN CODE                                    *
*                                                                     *
*        RETURN CODES:                                                *
*               0 - NORMAL, R1 HAS NUMBER                             *
*               4 - END OF BUFFER REACHED                             *
*               8 - INVALID FORMAT OF NUMBER                          *
*                                                                     *
*                                                                     *
***********************************************************************
         EJECT
GETNUMBR CSECT
         EXTRN GETOKEN
         EXTRN UNGETOKN
         ENTER DSA=Y
         LR    R2,R0              R2 HAS FILE OPTION WORD
         MVC   SIGN(3),=X'000140' STRING, LENGTH 1, VALUE SPACE
         SCALL GETOKEN            GO GET SIGN, HEX DELIM, OR NUMBER
         LTR   R15,R15            EOB ?
         BNZ   RETEOB             YES,  RETURN WITH RC
         LH    R3,0(,R1)          R3 HAS LENGTH OF TOKEN
         CH    R3,=H'1'           A SIGN  POSSIBLY ?
         BNE   NOSIGN             NO,  BRANCH
         CLI   2(R1),C'+'         A PLUS SIGN ?
         BE    ASIGN              YES,  GOT A SIGN
         CLI   2(R1),C'-'         A MINUS SIGN ?
         BNE   NOSIGN             NO,  NOT A SIGN
ASIGN    MVC   SIGN+2(1),2(R1)    MOVE IN SIGN CHAR
         LR    R0,R2              FOW
         SCALL GETOKEN            GO GET HEX DELIM, OR NUMBER
         LTR   R15,R15            END OF BUFFER ?
         BNZ   UNSIGN             YES, CAN'T BE A NUMBER SO PUT IT BACK
NOSIGN   LH    R3,0(,R1)          R3 HAS LENGTH OF CURRENT TOKEN
         CLC   2(1,R1),HEXDELIM   A HEXADECIMAL DELIMITER ?
         BE    HEXNUM             YES, BRANCH
         CH    R3,=H'8'           TOO LONG ?
         BH    UNSIGN             YES,  BRANCH
         LA    R4,2(R3,R1)        R4 POINTS PAST END OF TOKEN
         LA    R3,2(,R1)          R3 -> BEGINNING OF TOKEN
NEXTDNUM CLI   0(R3),X'F0'        BELOW A ZERO ?
         BL    UNSIGN             YES, ERROR
         CLI   0(R3),X'F9'        ABOVE A NINE ?
         BH    UNSIGN             YES,  ERROR
         LA    R3,1(,R3)          BUMP NEXT POINTER
         CR    R3,R4              DONE ?
         BL    NEXTDNUM           NO,  LOOP
         SR    R3,R1              LENGTH OF TOKEN
         S     R3,=F'3'           MINUS 1 FOR EXECUTE AND 2 FOR LENGTH
         EX    R3,PACKNUM         PACK NUMBER INTO DOUB
         CVB   R5,DOUB            R5 HAS ABSOLUTE VALUE OF NUMBER
         B     RTNNUM             LEAVE
         EJECT
HEXNUM   MVC   SIGN(2),=H'2'      LENGTH IS FOR SIGN AND HEX DELIMITER
         MVC   SIGN+3(1),HEXDELIM PUT HEXADECIMAL DELIMITER ALONG SIDE
         LR    R0,R2              FOW
         SCALL GETOKEN            GET NUMBER (FINALLY)
         LTR   R15,R15            EOB ?
         BNZ   UNSIGN             YES, ERROR
         LH    R3,0(,R1)          LENGTH OF HEX NUMBER
         SR    R5,R5              TOTAL REGISTER
         LA    R4,2(R3,R1)        R4 -> PAST TOKEN
         LA    R3,2(,R1)          R3 -> BEGINNING OF TOKEN
NEXTXNUM SR    R6,R6              ZERO FOR IC
         CLI   0(R3),X'F0'        BELOW A ZERO ?
         BL    NOTNUM             YES,  GO TRY LETTERS
         CLI   0(R3),X'F9'        TOO BIG ?
         BH    UNSIGN             YES, ERROR
         IC    R6,0(,R3)          GET CHAR
         S     R6,=A(X'F0')       MAKE BINARY VALUE
         B     ADDHEXIN           ADD GO ADD TO TOTAL
NOTNUM   CLI   0(R3),C'A'         BELOW AN A ?
         BL    UNSIGN             YES, ERROR
         CLI   0(R3),C'F'         ABOVE AN F ?
         BH    UNSIGN             YES, ERROR
         IC    R6,0(,R3)          GET CHAR
         S     R6,=A(X'B7')       SUBTRACT TO MAKE CORRECT BINARY VALUE
ADDHEXIN SLL   R5,4               SHIFT OVER PREVIOUS TOTAL
         ALR   R5,R6              ADD IN NEW DIGIT
         LA    R3,1(,R3)          BUMP POINTER
         CR    R3,R4              DONE ?
         BL    NEXTXNUM           NO,  LOOP
RTNNUM   CLI   SIGN+2,C'-'        WAS NUMBER TO BE NEGATIVE ?
         BNE   *+8                NO,  SKIP
         M     R4,=F'-1'          NEGATE
         EXIT  RC=0,RTN=(R5)
UNSIGN   LR    R0,R2
         SCALL UNGETOKN           PUT BACK TOKEN
         CLC   SIGN(3),=X'000140' ANY SIGN ETC TO PUT BACK ?
         BE    RTNERR             NO,  SKIP
         LR    R0,R2
         LA    R1,SIGN            POINT TO STRING TO UN-GET
         SCALL UNGETOKN           PUT IT BACK
RTNERR   EXIT  RC=8
RETEOB   EXIT  RC=4
         SPACE 5
PACKNUM  PACK  DOUB(8),2(1,R1)
         EJECT
         LTORG
HEXDELIM DC    C'%'
         DSA
DOUB     DS    D
SIGN     DS    CL4
         ENDDSA
         REGS
         END
