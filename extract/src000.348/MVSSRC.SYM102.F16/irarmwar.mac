         TITLE 'IRARMWAR - WORKLOAD ACTIVITY RECORDING ROUTINE         *
                        '
*                                  /*
IRARMWAR CSECT ,
* ADDRESS TABLE TO PROVIDE ROUTINE ADDRESSES AFTER IRARMWAR IS
* LOADED AND FIXED BY MF/1.
         ENTRY WARTABLE
WARTABLE DS    0F
         DC    A(IRARMWR1)             WAR INITIALIZATION
         DC    A(IRARMWR3)             WAR COLLECTION
         DC    A(IRARMWR8)             WAR IPS CHANGE PROCESSING
@PSTART  DS    0H
         USING @PSTART,@12
*   ;                                                              0057
*                                                                  0058
*/* **************************************************************** */
*/*                                                                  */
*/* ROUTINE NAME - IRARMWR1                                          */
*/*                                                                  */
*/* DESCRIPTIVE NAME - SRM WORKLOAD ACTIVITY RECORDING               */
*/*                    INITIALIZATION SUBROUTINE                     */
*/*                                                                  */
*/* FUNCTION - TO CONSTRUCT AND INITIALIZE THE WORKLOAD ACTIVITY     */
*/*            MEASUREMENT TABLE(WAMT) IN THE BUFFER(STORAGE FROM    */
*/*            SQA) OBTAINED BY MF/1 AND INPUT WITH SYSEVENT 45.     */
*/*                                                                  */
*/* INPUT - REG  6 CONTAINS THE ADDRESS OF THE DATA COLLECTION AREA  */
*/*                                                                  */
*/* OUTPUT- NONE                                                     */
*/*                                                                  */
*/* EXIT - RETURN VIA REG 14                                         */
*/*          RETURN CODES                                            */
*/*            REG 15, BYTE 3 - X'00' - DATA AREA ACCEPTED AND       */
*/*                                     INITIALIZED(REG 1 SET TO 0)  */
*/*                             X'08' - LENGTH OF DATA AREA INCORRECT*/
*/*                                                                  */
*/* **************************************************************** */
*                                                                  0058
*   GEN CODE DEFS(IRARMWR1) NOEXIT SEQFLOW;                        0058
*                                  /*
         ENTRY IRARMWR1                WAR INITIALIZATION
IRARMWR1 DS    0H
         STM   @00,@14,LEVEL3(@13)     SAVE INVOKING RTN REGS
LEVEL3   EQU   128                     THIRD LEVEL SRM SAVE AREA
         LA    @12,IRARMWR1-@PSTART    DISPLACEMENT TO MODULE BASE
         LCR   @12,@12                 NEGATIVE FOR SUBTRACT
         ALR   @12,@15                 SETUP MODULE ADDRESSABILITY
*   WMSTPTR=RMCTWMST;               /* ADDRESSABILITY TO WMST        */
         L     WMSTPTR,RMCTWMST(,RMCTPTR)                          0059
*/*                                                                  */
*/*   COMPARE THE LENGTH OF THE WAMT INPUT WITH THAT CALCULATED FROM */
*/*   INFORMATION WITHIN THE CURRENT IPS.                            */
*/*                                                                  */
*                                                                  0060
*   IF WAMTSIZ^=LENGTH(WAMT)+WMSTPGHI*LENGTH(WAMTNDX)+WMSTPGPC*WAMTSPD
*     THEN                                                         0060
         LH    @09,WMSTPGHI(,WMSTPTR)                              0060
         SLA   @09,2                                               0060
         AL    @09,@CF00070                                        0060
         LH    @08,WMSTPGPC(,WMSTPTR)                              0060
         MH    @08,WAMTSPD(,WAMTPTR)                               0060
         ALR   @09,@08                                             0060
         C     @09,WAMTSIZ(,WAMTPTR)                               0060
         BE    @RF00060                                            0060
*     RRPARTC=XCON8;                /* LENGTH OF WAMT INCORRECT      */
         MVI   RRPARTC(RRPAPTR),X'08'                              0061
*   ELSE                            /* LENGTH OF WAMT CORRECT,       */
*     DO;                           /* CONTINUE INITIALIZATION       */
         B     @RC00060                                            0062
@RF00060 DS    0H                                                  0063
*       WAMTCPD=WMSTPGPC;           /* NO. OF PGPS IN THIS IPS       */
         LH    @09,WMSTPGPC(,WMSTPTR)                              0063
         STH   @09,WAMTCPD(,WAMTPTR)                               0063
*       WAMTTMA=RMCTTOC;            /* TIME DATA COLLECTION ACTIVATED*/
         MVC   WAMTTMA(8,WAMTPTR),RMCTTOC(RMCTPTR)                 0064
*       WAMTIPS=WMSTID;             /* IPS ID                        */
         MVC   WAMTIPS(2,WAMTPTR),WMSTID(WMSTPTR)                  0065
*       WAMTHPG=WMSTPGHI;           /* HIGHEST PGN IN IPS            */
         LH    @09,WMSTPGHI(,WMSTPTR)                              0066
         STH   @09,WAMTHPG(,WAMTPTR)                               0066
*       WAMTIPC=WMSTIPC;            /* CPU SERVICE COEF.     @Z40BPCH*/
         MVC   WAMTIPC(4,WAMTPTR),WMSTIPC(WMSTPTR)                 0067
*       WAMTIPI=WMSTIPI;            /* I/O SERVICE COEF.     @Z40BPCH*/
         MVC   WAMTIPI(4,WAMTPTR),WMSTIPI(WMSTPTR)                 0068
*       WAMTIPM=WMSTIPM;            /* MSO SERVICE COEF.     @Z40BPCH*/
         MVC   WAMTIPM(4,WAMTPTR),WMSTIPM(WMSTPTR)                 0069
*       WAMTASD(17:32)=RRPAASD;     /* MF/1 ASID FOR RECOVERY        */
         MVC   WAMTASD+2(2,WAMTPTR),RRPAASD(RRPAPTR)               0070
*       WAMTTCB=PSATOLD;            /* MF/1 TCB ADDRESS FOR RECOVERY */
         L     @09,PSATOLD                                         0071
         ST    @09,WAMTTCB(,WAMTPTR)                               0071
*       RMCTWAMT=WAMTPTR;           /* DATA COLLECTION AREA ADDRESS  */
         ST    WAMTPTR,RMCTWAMT(,RMCTPTR)                          0072
*       CALL IRARMWR2;              /* BUILD WAMTNDX ARRAY AND INIT-
*                                      IALIZE DATA COLLECTION BUFFER */
         BAL   @14,IRARMWR2                                        0073
*       RESPECIFY                                                  0074
*        (R10,                                                     0074
*         R11) UNRSTD;                                             0074
*       ASVTPTR=CVTASVT;            /* ADDRESS SPACE VECTOR TABLE ADR*/
         L     @11,CVTPTR                                          0075
         L     ASVTPTR,CVTASVT(,@11)                               0075
*       ASVTSTP=ASVTPTR+            /* CALCULATE SCAN END ADDRESS    */
*           ASVTMAXU*LENGTH(ASVTENTY);                             0076
         L     ASVTSTP,ASVTMAXU(,ASVTPTR)                          0076
         SLA   ASVTSTP,2                                           0076
         ALR   ASVTSTP,ASVTPTR                                     0076
*       DO ASVTPTR=ASVTPTR          /* STEP THRU ALL ASCBS IN ASVT   */
*             BY LENGTH(ASVTENTY) WHILE(ASVTPTR<ASVTSTP);          0077
         B     @DE00077                                            0077
@DL00077 DS    0H                                                  0078
*         IF ASVTAVAL(ONE)='0'B THEN/* IF ASID ASSIGNED TO SOME USER */
         TM    ASVTAVAL(ASVTPTR),B'10000000'                       0078
         BNZ   @RF00078                                            0078
*           DO OUCBPTR=ASVTENTY(ONE)/* ADDRESSABILITY TO OUCB        */
*                 ->ASCBOUCB WHILE(OUCBNAME/* VALIDATE OUCB          */
*                 ='OUCB'&OUCBINV='0'B);/*                   @Z40BPCH*/
         L     @11,ASVTENTY(,ASVTPTR)                              0079
         L     OUCBPTR,ASCBOUCB(,@11)                              0079
         CLC   OUCBNAME(4,OUCBPTR),@CC01893                        0079
         BNE   @DC00079                                            0079
         TM    OUCBINV(OUCBPTR),B'00010000'                        0079
         BNZ   @DC00079                                            0079
*             IF OUCBATR='1'B&      /* ACTIVE TRANSACTION FOR MEMORY */
*                 OUCBINC='1'B&     /* SESSION NOT BETWEEN STEPS     */
*                 (OUCBRDY='1'B×    /* TRANSACTION NOT SUSPENDED     */
*                 OUCBOUT='0'B) THEN/* TRANSACTION NOW EXECUTING     */
         TM    OUCBATR(OUCBPTR),B'10000001'                        0080
         BNO   @RF00080                                            0080
         TM    OUCBRDY(OUCBPTR),B'10000000'                        0080
         BO    @RT00080                                            0080
         TM    OUCBOUT(OUCBPTR),B'00000100'                        0080
         BNZ   @RF00080                                            0080
@RT00080 DS    0H                                                  0081
*               DO;                 /* ADJUST WKLD ACTIVITY TOTALS 0081
*                                      FOR APPROPRIATE PGP           */
*                 IF OUCBOUT='0'B THEN/* MEMORY NOT SWAPPED OUT      */
*                                                                  0082
         TM    OUCBOUT(OUCBPTR),B'00000100'                        0082
         BNZ   @RF00082                                            0082
*                   /*************************************************/
*                   /*                                               */
*                   /* ? IRACTLCL EPN(WM1)                           */
*                   /*                                               */
*                   /*************************************************/
*                                                                  0083
*                   CALL RMSBWM1->IRARMRTN;/* INVOKE WM1 SUBRTN      */
         L     @15,RMSBWM1(,RMCTPTR)                               0083
         BALR  @14,@15                                             0083
*/*   OBTAIN SERVICE ACCUMULATED                                   0084
*     FOR CURRENT IN-CORE INTERVAL                                   */
*                                                                  0084
*                 OUCBMAR='1'B;     /* SET ENTRY UPDATE TO SUBTRACT  */
@RF00082 OI    OUCBMAR(OUCBPTR),B'00000100'                        0084
*                 CALL IRARMWR4;    /* SUBTRACT PREV SERVICE, TIME   */
         LA    @15,IRARMWR4                                        0085
         BALR  @14,@15                                             0085
*                 OUCBMAR='0'B;     /* RESET ENTRY UPDATE TO ADD     */
         NI    OUCBMAR(OUCBPTR),B'11111011'                        0086
*               END;                                               0087
*           END;                                                   0088
@RF00080 DS    0H                                                  0088
@DC00079 DS    0H                                                  0089
*       END;                                                       0089
@RF00078 AL    ASVTPTR,@CF00035                                    0089
@DE00077 CR    ASVTPTR,ASVTSTP                                     0089
         BL    @DL00077                                            0089
*       RESPECIFY                                                  0090
*        (R10,                                                     0090
*         R11) RSTD;                                               0090
*       RRPAINP=ZERO;               /* WAMT HAS BEEN ACCEPTED        */
         SLR   @09,@09                                             0091
         ST    @09,RRPAINP(,RRPAPTR)                               0091
*       RRPARTC=ZERO;               /* INITIALIZATION SUCCESSFUL     */
         MVI   RRPARTC(RRPAPTR),X'00'                              0092
*       RMSBWR4=ADDR(IRARMWR4);     /* INITIALIZE SERVICE UPDATE   0093
*                                      ENTRY POINT                   */
         LA    @09,IRARMWR4                                        0093
         ST    @09,RMSBWR4(,RMCTPTR)                               0093
*       RMSBWR6=ADDR(IRARMWR6);     /* INITIALIZE TRANSACTION      0094
*                                      TERMINATION ENTRY POINT       */
         LA    @09,IRARMWR6                                        0094
         ST    @09,RMSBWR6(,RMCTPTR)                               0094
*       RMCTMFA='1'B;               /* MF/1 DATA COLLECTION ACTIVE   */
         OI    RMCTMFA(RMCTPTR),B'10000000'                        0095
*     END;                                                         0096
*   GEN CODE EXIT NOSEQFLOW;                                       0097
@RC00060 DS    0H                                                  0097
*                                  /*
         LM    @00,@14,LEVEL3(@13)     RELOAD INVOKING RTN REGS
         BR    RTNREG                  RETURN TO INVOKER
*                                                                  0098
*/* **************************************************************** */
*/*                                                                  */
*/* ROUTINE NAME - IRARMWR2                                          */
*/*                                                                  */
*/* DESCRIPTIVE NAME - SRM WORKLOAD ACTIVITY RECORDING               */
*/*                    WAMT INITIALIZATION SUBROUTINE                */
*/*                                                                  */
*/* FUNCTION - TO BUILD THE WAMT IN A FORMAT ACCEPTABLE TO BE        */
*/*            UPDATED BY THE SRM.                                   */
*/*                                                                  */
*/* INPUT - REG 6 CONTAINS THE ADDRESS OF THE DATA COLLECTION AREA   */
*/*                                                                  */
*/* OUTPUT - NONE                                                    */
*/*                                                                  */
*/* EXIT - RETURN VIA REG 14                                         */
*/*                                                                  */
*/* **************************************************************** */
*                                                                  0098
*IRARMWR2:                                                         0098
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0098
*                                                                  0098
IRARMWR2 DS    0H                                                  0099
*/*                                                                  */
*/*   CLEAR DATA COLLECTION AREA IN WAMT.                            */
*/*                                                                  */
*                                                                  0099
*   NTRREG=LENGTH(WAMT)+            /* OFFSET IN WAMT TO START       */
*       (WAMTHPG*                   /* OF DATA COLLECTION AREA       */
*       LENGTH(WAMTNDX));                                          0099
         LH    NTRREG,WAMTHPG(,WAMTPTR)                            0099
         SLA   NTRREG,2                                            0099
         AL    NTRREG,@CF00070                                     0099
*   R10=WAMTPTR+NTRREG;             /* START ADDRESS OF DATA       0100
*                                      COLLECTION AREA IN WAMT       */
         LR    R10,WAMTPTR                                         0100
         ALR   R10,NTRREG                                          0100
*   R11=ZERO;                       /* FOR MVCL INSTR TO CLEAR AREA  */
         SLR   R11,R11                                             0101
*   R0=R10;                                                        0102
         LR    R0,R10                                              0102
*   R1=WAMTCPD*WAMTSPD;             /* LENGTH OF STORAGE TO CLEAR    */
         LH    R1,WAMTCPD(,WAMTPTR)                                0103
         MH    R1,WAMTSPD(,WAMTPTR)                                0103
*   GENERATE CODE REFS(R10,R11) SETS(R0,R1);                       0104
*                                                                  0104
         MVCL  R0,R10
*/*                                                                  */
*/*   BUILD THE WAMTNDX ARRAY WHOSE I'TH POSITION CONTAINS THE OFFSET*/
*/*   TO THE START OF THE WAMPPGP'S FOR THE I'TH PERFORMANCE GROUP.  */
*/*   THE PERFORMANCE GROUP VECTOR TABLE(PGVT) AND PERFORMANCE GROUP */
*/*   DESCRIPTOR TABLE(PGDT) OF THE IPS ARE USED TO CONSTRUCT THE    */
*/*   WAMTNDX.  EACH ENTRY IN THE PGVT IS EXAMINED AND THE CURRENT   */
*/*   POINTER VALUE IN THE WORKLOAD ACTIVITY DATA AREA IS SAVED IN   */
*/*   THE WAMTNDX ENTRY ASSOCIATED WITH THE PG.  A NON-ZERO ENTRY IN */
*/*   THE PGVT INDICATES THE EXISTENCE OF THE PERFORMANCE GROUP(PG)  */
*/*   WITHIN THE IPS.  THE PERFORMANCE GROUP DESCRIPTOR TABLE(PGDT)  */
*/*   ENTRY ASSOCIATED WITH THE PG IS SEARCHED TO CALCULATE THE NUM- */
*/*   BER OF PG PERIODS IN THE PG.  STORAGE IS SET ASIDE IN THE DATA */
*/*   COLLECTION BUFFER TO ACCOMODATE THE WORKLOAD INFORMATION FOR   */
*/*   EACH PGP IN THE PG.  THE DATA AREA POINTER VALUE IS INCREMENTED*/
*/*   BY THE LENGTH OF STORAGE SET ASIDE.  A ZERO ENTRY IN THE PGVT  */
*/*   INDICATES A NON-EXISTANT PG.  UNLIKE THE PGVT ENTRY, THE       */
*/*   WAMTNDX ENTRY FOR THAT PG IS SET TO THE CURRENT POINTER VALUE  */
*/*   IN THE DATA COLLECTION AREA.                                   */
*/*                                                                  */
*                                                                  0105
*   RESPECIFY                                                      0105
*    (R0,                                                          0105
*     R1,                                                          0105
*     ASVTPTR,                                                     0105
*     OUCBPTR,                                                     0105
*     R11) UNRSTD;                                                 0105
*   WAMTNX0=NTRREG;                 /* OFFSET FOR PG 0               */
         ST    NTRREG,WAMTNX0(,WAMTPTR)                            0106
*   NTRREG=NTRREG+WAMTSPD;          /* INCREMENT OFFSET IN WAMP BY 0107
*                                      THE LENGTH OF A WAMPPGP       */
         AH    NTRREG,WAMTSPD(,WAMTPTR)                            0107
*   WAMTXPTR=ADDR(WAMTNDX(ONE));    /* ADDRESS OF FIRST WAMTNDX ENTRY*/
         LA    @11,WAMTNDX(,WAMTPTR)                               0108
         ST    @11,WAMTXPTR(,RMCTPTR)                              0108
*   DO WPGNNUM=ONE BY ONE           /* STEP THRU ALL PERFORMANCE     */
*         TO WMSTPGHI;              /* GROUPS IN THE IPS             */
         LA    @11,1                                               0109
         ST    @11,WPGNNUM(,RMCTPTR)                               0109
         B     @DE00109                                            0109
@DL00109 DS    0H                                                  0110
*     WAMTXNTR=NTRREG;              /* OFFSET TO START OF THE WAMPPGP
*                                      FOR THE CURRENT WAMTNDX ARRAY
*                                      ENTRY                         */
         L     @11,WAMTXPTR(,RMCTPTR)                              0110
         ST    NTRREG,WAMTXNTR(,@11)                               0110
*     IF WPGVTENT^=ZERO THEN        /* PGN EXISTS IN IPS             */
         SLR   @11,@11                                             0111
         L     @04,WPGNNUM(,RMCTPTR)                               0111
         ALR   @04,@04                                             0111
         AL    @04,WMSTPGVT(,WMSTPTR)                              0111
         LH    @04,WPGVTENT(,@04)                                  0111
         CR    @04,@11                                             0111
         BE    @RF00111                                            0111
*       DO;                                                        0112
*         WPGDPTR=WMSTPGDT+         /* PICK DESCRIPTR FOR PERF GROUP */
*             WPGVTENT;                                            0113
         AL    @04,WMSTPGDT(,WMSTPTR)                              0113
         ST    @04,WPGDPTR(,RMCTPTR)                               0113
*         WAMPPTR=WAMTPTR+NTRREG;   /* PTR TO WAMP FOR THIS PERIOD 0114
*                                                            @Z40BPCH*/
         LR    WAMPPTR,WAMTPTR                                     0114
         ALR   WAMPPTR,NTRREG                                      0114
*         WPGDSTP=ZERO;             /* MARK PGD END NOT REACHED      */
         ST    @11,WPGDSTP(,RMCTPTR)                               0115
*         DO WPGPPTR=ADDR(WPGDPGP)  /* PROCESS ALL PERIODS           */
*               BY LENGTH(WPGP)     /* WITHIN A PERFORMANCE GROUP    */
*               WHILE(WPGDSTP=ZERO);                               0116
         LA    WPGPPTR,WPGDPGP(,@04)                               0116
         B     @DE00116                                            0116
@DL00116 DS    0H                                                  0117
*           WAMPDMN=WPGPDMN;        /* PERF GROUP PERIOD DOMAIN    0117
*                                      NUMBER                @Z40BPCH*/
         IC    @11,WPGPDMN(,WPGPPTR)                               0117
         STC   @11,WAMPDMN(,WAMPPTR)                               0117
*           WAMPOBJN=WPGPOBJN;      /* PERF GROUP PERIOD OBJECTIVE 0118
*                                      NUMBER                @Z40BPCH*/
         IC    @11,WPGPOBJN(,WPGPPTR)                              0118
         STC   @11,WAMPOBJN(,WAMPPTR)                              0118
*           NTRREG=NTRREG+          /* INCREMENT OFFSET BY THE       */
*               WAMTSPD;            /* LENGTH OF THE WAMPPGP         */
         LH    @11,WAMTSPD(,WAMTPTR)                               0119
         ALR   NTRREG,@11                                          0119
*           WAMPPTR=WAMPPTR+WAMTSPD;/* UPDATE PTR TO NEXT WAMP FOR 0120
*                                      THE NEXT PERIOD       @Z40BPCH*/
         ALR   WAMPPTR,@11                                         0120
*           IF WPGPFIN='1'B THEN    /* LAST PERF PERIOD REACHED      */
         TM    WPGPFIN(WPGPPTR),B'10000000'                        0121
         BNO   @RF00121                                            0121
*             WPGDSTP=CON4;         /* FORCE EXIT FROM PERF GRP SCAN */
         MVC   WPGDSTP(4,RMCTPTR),@CF00035                         0122
*         END;                                                     0123
@RF00121 AL    WPGPPTR,@CF00150                                    0123
@DE00116 L     @11,WPGDSTP(,RMCTPTR)                               0123
         LTR   @11,@11                                             0123
         BZ    @DL00116                                            0123
*       END;                                                       0124
*     WAMTXPTR=WAMTXPTR+            /* POINT TO NEXT ENTRY IN        */
*         LENGTH(WAMTNDX);          /* THE WAMTNDX                   */
@RF00111 LA    @11,4                                               0125
         AL    @11,WAMTXPTR(,RMCTPTR)                              0125
         ST    @11,WAMTXPTR(,RMCTPTR)                              0125
*   END;                                                           0126
         LA    @11,1                                               0126
         AL    @11,WPGNNUM(,RMCTPTR)                               0126
         ST    @11,WPGNNUM(,RMCTPTR)                               0126
@DE00109 CH    @11,WMSTPGHI(,WMSTPTR)                              0126
         BNH   @DL00109                                            0126
*   WAMTXNTR=NTRREG;                /* OFFSET OF LAST WAMTNDX ENTRY  */
         L     @11,WAMTXPTR(,RMCTPTR)                              0127
         ST    NTRREG,WAMTXNTR(,@11)                               0127
*   RESPECIFY                                                      0128
*    (R0,                                                          0128
*     R1,                                                          0128
*     ASVTPTR,                                                     0128
*     OUCBPTR,                                                     0128
*     R11) RSTD;                                                   0128
*   END IRARMWR2;                                                  0129
@EL00002 DS    0H                                                  0129
@EF00002 DS    0H                                                  0129
@ER00002 BR    @14                                                 0129
*                                                                  0130
*/* **************************************************************** */
*/*                                                                  */
*/* ROUTINE NAME - IRARMWR3                                          */
*/*                                                                  */
*/* DESCRIPTIVE NAME - SRM WORKLOAD ACTIVITY RECORDING               */
*/*                    DATA COLLECTION SUBROUTINE                    */
*/*                                                                  */
*/* FUNCTION - TO MOVE THE CONTENTS OF THE WAMT INTO A COLLECTION    */
*/*            BUFFER CAPABLE OF CONTAINING THE DATA.  NOTE: THE     */
*/*            BUFFER IS OBTAINED BY MF/1 FROM LSQA, STORAGE KEY 0,  */
*/*            AND MUST BE FIXED IN CORE.                            */
*/*            IF THE IPS HAS NOT BEEN CHANGED, THEN ADD THE TRANS-  */
*/*            ACTION DATA FOR THE CURRENT IN-CORE INTERVAL OF       */
*/*            EACH IN-CORE MEMORY WITH AN ACTIVE TRANSACTION TO THE */
*/*            COLLECTED DATA, RE-INITIALIZE THE DATA COLLECTION     */
*/*            BUFFER FOR THE NEXT COLLECTION INTERVAL AND CALCULATE */
*/*            THE NORMALIZED WORKLOAD LEVEL FOR EACH PERFORMANCE    */
*/*            GROUP PERIOD THAT CONTAINS TRANSACTION DATA.          */
*/*                                                                  */
*/* INPUT - REG  6 CONTAINS THE ADDRESS OF THE WAMT                  */
*/*         RRPAINP CONTAINS THE BUFFER ADDRESS INTO WHICH THE       */
*/*         WORKLOAD ACTIVITY DATA IS TO BE COPIED                   */
*/*                                                                  */
*/* OUTPUT - NONE                                                    */
*/* EXIT - RETURN VIA REG 14                                         */
*/*          RETURN CODES                                            */
*/*            REG 15, BYTE 3 - X'00' - SUCCESSFUL DATA COLLECTION   */
*/*                             X'04' - SUCCESSFUL DATA COLLECTION   */
*/*                                     BUT AN IPS CHANGE OCCURRED   */
*/*                                     DURING THE CURRENT INTERVAL  */
*/*                                     TERMINATING DATA COLLECTION  */
*/*                             X'40' - DATA COLLECTION NOT ACTIVE,  */
*/*                                     OR DATA BUFFER NON-EXISTANT, */
*/*                                     OR COPY BUFFER INCORRECT SIZE*/
*/*                                                                  */
*/* **************************************************************** */
*                                                                  0130
*   GEN CODE DEFS(IRARMWR3) NOEXIT SEQFLOW;                        0130
*                                                                  0130
*                                   /*
         ENTRY IRARMWR3                WAR COLLECTION
IRARMWR3 DS    0H
         STM   @00,@14,LEVEL3(@13)     SAVE INVOKING RTN REGS
         LA    @12,IRARMWR3-@PSTART    DISPLACEMENT TO MODULE BASE
         LCR   @12,@12                 NEGATIVE FOR SUBTRACT
         ALR   @12,@15                 SETUP MODULE ADDRESSABILITY
*/*                                                                  */
*/*   CHECK THAT THE SIZE OF THE BUFFER INTO WHICH THE COLLECTED     */
*/*   DATA IS TO BE COPIED IS LARGE ENOUGH TO ACCOMODATE THE DATA.   */
*/*                                                                  */
*                                                                  0131
*   R10=RRPAINP;                    /* ADDRESS OF COPY BUFFER        */
         L     R10,RRPAINP(,RRPAPTR)                               0131
*   R11=R10->WAMTSIZ;               /* SIZE OF COPY BUFFER           */
         L     R11,WAMTSIZ(,R10)                                   0132
*   R0=WAMTPTR;                     /* ADDRESS OF COLLECTION BUFFER  */
         LR    R0,WAMTPTR                                          0133
*   R1=WAMTPTR->WAMTSIZ;            /* SIZE OF COLLECTION BUFFER     */
         L     R1,WAMTSIZ(,WAMTPTR)                                0134
*   IF R11=R1 THEN                  /* BUFFERS ARE EQUAL             */
         CR    R11,R1                                              0135
         BNE   @RF00135                                            0135
*     DO;                                                          0136
*       GENERATE CODE SETS(R0,R1,R10,R11);                         0137
*                                                                  0137
*                                        /* COPY COLLECTED DATA     */
         MVCL  R10,R0
*       /*************************************************************/
*       /*                                                           */
*       /* IF THE IPS HAS NOT BEEN CHANGED, THEN RE-INITIALIZE THE   */
*       /* DATA COLLECTION BUFFER FOR THE NEXT MF/1 INTERVAL. CAL-   */
*       /* CULATE THE SERVICE ACCUMULATED AND THE TRANSACTION ACTIVE */
*       /* TIME FOR THE CURRENT IN-CORE INTERVAL FOR EACH MEMORY WITH*/
*       /* AN ACTIVE TRANSACTION. ADD THESE VALUES TO THE TOTALS IN  */
*       /* THE DATA COLLECTION BUFFER TO REFLECT DATA UP TO THE      */
*       /* OCCURRENCE OF THE COLLECTION SYSEVENT. TO PROVIDE ACCURATE*/
*       /* DATA FOR THE NEXT MF/1 INTERVAL, SUBTRACT THESE VALUES    */
*       /* FROM THE CORRECT PGP IN THE COLLECTION BUFFER BECAUSE THE */
*       /* INFOMATION WILL BE ADDED AGAIN WHEN THE CURRENT IN-CORE   */
*       /* INTERVAL OR THE TRANSACTION ENDS. IF AN IPS CHANGE HAS    */
*       /* OCCURRED, MF/1 DATA COLLECTION WAS TERMINATED AND THE     */
*       /* WORK- LOAD ACTIVITY DATA AREA UPDATED WHEN THE SET TO NEW */
*       /* IPS SYSEVENT WAS PROCESSED.                               */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0138
*       IF RMCTSTW='0'B THEN        /* SET TO NEW IPS DID NOT OCCUR  */
         TM    RMCTSTW(RMCTPTR),B'00000100'                        0138
         BNZ   @RF00138                                            0138
*         DO;                                                      0139
*           RRPAINP->WAMTTOC=       /* TIME DATA COLLECTION OCCURRED */
*               RMCTTOC;                                           0140
*                                                                  0140
         L     @09,RRPAINP(,RRPAPTR)                               0140
         MVC   WAMTTOC(8,@09),RMCTTOC(RMCTPTR)                     0140
*           /*********************************************************/
*           /*                                                       */
*           /* RE-INITIALIZE WORKLOAD ACTIVITY DATA COLLECTION BUFFER*/
*           /* FOR NEXT MF/1 INTERVAL.                               */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0141
*           WMSTPTR=RMCTWMST;       /* ADDRESSABILITY TO WMST      0141
*                                                            @Z40BPCH*/
         L     WMSTPTR,RMCTWMST(,RMCTPTR)                          0141
*           CALL IRARMWR2;          /* REINIT BUFFER         @Z40BPCH*/
*                                                                  0142
         BAL   @14,IRARMWR2                                        0142
*           /*********************************************************/
*           /*                                                       */
*           /* FOR EACH IN-CORE MEMORY WITH AN ACTIVE TRANSACTION,   */
*           /* OBTAIN THE SERVICE AND TRANSACTION ACTIVE TIME FOR THE*/
*           /* CURRENT IN-CORE INTERVAL. ACCUMULATE THESE VALUES IN  */
*           /* IN THE PGP IN WHICH THE MEMORY IS EXECUTING.          */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0143
*           RESPECIFY                                              0143
*            (RTNREG,                                              0143
*             NTRREG,                                              0143
*             RTNCOD) UNRSTD;                                      0143
*           ASVTPTR=CVTASVT;        /* ACCESS ADDRS SPAC VECTOR TBL  */
         L     @15,CVTPTR                                          0144
         L     ASVTPTR,CVTASVT(,@15)                               0144
*           ASVTSTP=ASVTPTR+        /* SAVE SCAN END POSITION        */
*               ASVTMAXU*LENGTH(ASVTENTY);                         0145
         L     ASVTSTP,ASVTMAXU(,ASVTPTR)                          0145
         SLA   ASVTSTP,2                                           0145
         ALR   ASVTSTP,ASVTPTR                                     0145
*           DO ASVTPTR=ASVTPTR BY   /* STEP THRU ALL SLOTS IN TABLE  */
*                 LENGTH(ASVTENTY) WHILE(ASVTPTR<ASVTSTP);         0146
         B     @DE00146                                            0146
@DL00146 DS    0H                                                  0147
*             IF ASVTAVAL(1)='0'B THEN/* ASID ASSIGNED TO SOME USER  */
         TM    ASVTAVAL(ASVTPTR),B'10000000'                       0147
         BNZ   @RF00147                                            0147
*               DO OUCBPTR=ASVTENTY(1)->/* PICK USER, CHK IF VALID   */
*                     ASCBOUCB WHILE(OUCBNAME='OUCB'&OUCBINV='0'B);/*
*                                                            @Z40BPCH*/
         L     @15,ASVTENTY(,ASVTPTR)                              0148
         L     OUCBPTR,ASCBOUCB(,@15)                              0148
         CLC   OUCBNAME(4,OUCBPTR),@CC01893                        0148
         BNE   @DC00148                                            0148
         TM    OUCBINV(OUCBPTR),B'00010000'                        0148
         BNZ   @DC00148                                            0148
*                 IF OUCBATR='1'B&  /* ACTIVE TRANSACTION IN MEMORY  */
*                     OUCBINC='1'B& /* SESSION NOT BETWEEN STEPS     */
*                     (OUCBRDY='1'B×/* TRANSACTION NOT SUSPENDED     */
*                     OUCBOUT='0'B) THEN/* TRANSACTN CURR EXECUTING  */
         TM    OUCBATR(OUCBPTR),B'10000001'                        0149
         BNO   @RF00149                                            0149
         TM    OUCBRDY(OUCBPTR),B'10000000'                        0149
         BO    @RT00149                                            0149
         TM    OUCBOUT(OUCBPTR),B'00000100'                        0149
         BNZ   @RF00149                                            0149
@RT00149 DS    0H                                                  0150
*                   DO;             /* ADJUST WKLD ACTIVITY TOTALS 0150
*                                      FOR APPROPRIATE PGP           */
*                     IF OUCBOUT='0'B THEN/* MEMORY NOT SWAPPED OUT  */
*                                                                  0151
         TM    OUCBOUT(OUCBPTR),B'00000100'                        0151
         BNZ   @RF00151                                            0151
*                       /*********************************************/
*                       /*                                           */
*                       /* ? IRACTLCL EPN(WM1)                       */
*                       /*                                           */
*                       /*********************************************/
*                                                                  0152
*                       CALL RMSBWM1->IRARMRTN;/* INVOKE WM1 SUBRTN  */
         L     @15,RMSBWM1(,RMCTPTR)                               0152
         BALR  @14,@15                                             0152
*/* OBTAIN SERVICE ACCUMULATED                                     0153
*   FOR CURRENT IN-CORE INTERVAL                                     */
*                                                                  0153
*                     OUCBMAR='1'B; /* SET ENTRY UPDATE TO SUBTRACT  */
@RF00151 OI    OUCBMAR(OUCBPTR),B'00000100'                        0153
*                     CALL IRARMWR4;/* SUBTRACT PREV SERVICE, TIME   */
         LA    @15,IRARMWR4                                        0154
         BALR  @14,@15                                             0154
*                     OUCBMAR='0'B; /* RESET ENTRY UPDATE TO ADD     */
         NI    OUCBMAR(OUCBPTR),B'11111011'                        0155
*                     R10=RMCTWAMT; /* SAVE ORIGINAL COLLECT, COPY   */
         L     R10,RMCTWAMT(,RMCTPTR)                              0156
*                     R11=RRPAINP;                                 0157
         L     R11,RRPAINP(,RRPAPTR)                               0157
*                     RMCTWAMT=R11; /* INTERCHANGE COLLECT, COPY     */
         ST    R11,RMCTWAMT(,RMCTPTR)                              0158
*                     RRPAINP=R10;                                 0159
         ST    R10,RRPAINP(,RRPAPTR)                               0159
*                     CALL IRARMWR4;/* ADD FROM USER TO COPY BUFFER  */
         LA    @15,IRARMWR4                                        0160
         BALR  @14,@15                                             0160
*                     RMCTWAMT=R10;                                0161
         ST    R10,RMCTWAMT(,RMCTPTR)                              0161
*                     RRPAINP=R11;  /* RESTORE ORIG COLLECT, COPY    */
         ST    R11,RRPAINP(,RRPAPTR)                               0162
*                   END;                                           0163
*               END;                                               0164
@RF00149 DS    0H                                                  0164
@DC00148 DS    0H                                                  0165
*           END;                                                   0165
@RF00147 AL    ASVTPTR,@CF00035                                    0165
@DE00146 CR    ASVTPTR,ASVTSTP                                     0165
         BL    @DL00146                                            0165
*           RESPECIFY                                              0166
*            (RTNREG,                                              0166
*             NTRREG,                                              0166
*             RTNCOD) RSTD;                                        0166
*           WAMTTMA=RMCTTOC;        /* TIME DATA COLLECTION BEGUN    */
*                                                                  0167
         MVC   WAMTTMA(8,WAMTPTR),RMCTTOC(RMCTPTR)                 0167
*           /*********************************************************/
*           /*                                                       */
*           /* CALCULATE NORMALIZED WORKLOAD LEVEL FOR EACH          */
*           /* PERFORMANCE PERIOD WITHIN THE WAMT.                   */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0168
*           WAMTPTR=RRPAINP;        /* ADDRESS OF COPY BUFFER        */
         L     WAMTPTR,RRPAINP(,RRPAPTR)                           0168
*           CALL IRARMWR5;          /* CALCULATE NORMALIZED WKLD LEVL*/
         BAL   @14,IRARMWR5                                        0169
*           RRPARTC=ZERO;           /* SUCCESSFUL DATA COLLECTION    */
         MVI   RRPARTC(RRPAPTR),X'00'                              0170
*         END;                                                     0171
*       ELSE                        /* IPS HAS BEEN CHANGED          */
*         RRPARTC=XCON4;            /* INDICATE IPS CHANGE OCCURRED
*                                      TERMINATING WORKLOAD ACTIVITY
*                                      DATA COLLECTION               */
         B     @RC00138                                            0172
@RF00138 MVI   RRPARTC(RRPAPTR),X'04'                              0172
*     END;                                                         0173
*   ELSE                            /* BUFFERS NOT EQUAL             */
*     RRPARTC=XCON40;               /* UNSUCCESSFUL DATA COLLECTION  */
         B     @RC00135                                            0174
@RF00135 MVI   RRPARTC(RRPAPTR),X'40'                              0174
*   GEN CODE EXIT NOSEQFLOW;                                       0175
@RC00135 DS    0H                                                  0175
*                                  /*
         LM    @00,@14,LEVEL3(@13)     RELOAD INVOKING RTN REGS
         BR    RTNREG                  RETURN TO INVOKER
*                                                                  0176
*/* **************************************************************** */
*/*                                                                  */
*/* ROUTINE NAME - IRARMWR4                                          */
*/*                                                                  */
*/* DESCRIPTIVE NAME - SRM WORKLOAD ACTIVITY RECORDING               */
*/*                    TRANSACTION DATA UPDATE SUBROUTINE            */
*/*                                                                  */
*/* FUNCTION - TO ADD THE SERVICE AND TRANSACTION ACTIVE TIME TO THE */
*/*            APPROPRIATE WAMT PERFORMANCE GROUP PERIOD ACCUMULATOR */
*/*            IN THE DATA COLLECTION BUFFER.                        */
*/*                                                                  */
*/* INPUT - REG  4 CONTAINS THE ADDRESS OF THE OUCB FROM WHICH THE   */
*/*         TRANSACTION AND PERFORMANCE GROUP DATA IS OBTAINED       */
*/*                                                                  */
*/* OUTPUT - NONE                                                    */
*/*                                                                  */
*/* EXIT - RETURN VIA REG 14                                         */
*/*                                                                  */
*/* **************************************************************** */
*                                                                  0176
*   /*****************************************************************/
*   /*                                                               */
*   /* ? IRACTLEP EPN(WR4)                                           */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0176
*   DCL                                                            0176
*     IRARMWR4 ENTRY INT;                                          0176
*   GEN CODE REFS(RMCTRMSA) NOEXIT SEQFLOW DEFS(IRARMWR4);         0177
*                                  /*
         ENTRY IRARMWR4
IRARMWR4 DS    0H
         L     @15,RMCTRMSA(,RMCTPTR)  SRM SAVE AREA START ADDRESS
         STM   @00,@14,192+000(@15)    SAVE INVOKING RTNE REGS
         LR    @13,@15                 ROUTINE SAVE AREA ADDRESS
         BALR  @15,0                   SETUP ENTRY ADDRESSABILITY
         LA    @12,*-@PSTART           DISPLACEMENT TO MODULE BASE
         LCR   @12,@12                 NEGATIVE FOR SUBTRACT
         ALR   @12,@15                 SETUP MODULE ADDRESSABILITY
*   RESPECIFY                                                      0178
*    (R0,                                                          0178
*     R1,                                                          0178
*     ASVTPTR) UNRSTD;                                             0178
*   WAMTPTR=RMCTWAMT;               /* ADDRESS OF WAMT               */
         L     WAMTPTR,RMCTWAMT(,RMCTPTR)                          0179
*   CALL IRARMWR7;                  /* OFFSET INTO WORKLOAD ACTIVITY
*                                      MEASUREMENT TABLE OF PGP FOR
*                                      CURRENT MEMORY                */
         BAL   @14,IRARMWR7                                        0180
*   IF OUCBMAR='0'B THEN            /* TRANSACTION DATA TO BE ADDED  */
         TM    OUCBMAR(OUCBPTR),B'00000100'                        0181
         BNZ   @RF00181                                            0181
*     DO;                                                          0182
*       WAMPTAT=WAMPTAT+            /* UPDATE TRANSACTN ACTIVE TIME  */
*           (RRPATOD-OUCBTMS);                                     0183
         L     @09,RRPATOD(,RRPAPTR)                               0183
         SL    @09,OUCBTMS(,OUCBPTR)                               0183
         L     @08,WAMPTAT(,WAMPPTR)                               0183
         ALR   @08,@09                                             0183
         ST    @08,WAMPTAT(,WAMPPTR)                               0183
*       IF OUCBOUT='0'B THEN        /* USER CURRENTLY RECEIV SERVIC  */
         TM    OUCBOUT(OUCBPTR),B'00000100'                        0184
         BNZ   @RF00184                                            0184
*         DO;                       /*                       @Z40BPCH*/
*           WAMPSRV=WAMPSRV+        /* UPDATE SERVICE ACCUMULATED    */
*               OUCBWMS;                                           0186
         L     @08,WAMPSRV(,WAMPPTR)                               0186
         AL    @08,OUCBWMS(,OUCBPTR)                               0186
         ST    @08,WAMPSRV(,WAMPPTR)                               0186
*           WAMPCPU=WAMPCPU+OUCBCPU;/* UPDATE CPU SERVICE    @Z40BPCH*/
         L     @08,WAMPCPU(,WAMPPTR)                               0187
         AL    @08,OUCBCPU(,OUCBPTR)                               0187
         ST    @08,WAMPCPU(,WAMPPTR)                               0187
*           WAMPIOC=WAMPIOC+OUCBIOC;/* UPDATE I/O SERVICE    @Z40BPCH*/
         L     @08,WAMPIOC(,WAMPPTR)                               0188
         AL    @08,OUCBIOC(,OUCBPTR)                               0188
         ST    @08,WAMPIOC(,WAMPPTR)                               0188
*           WAMPMSO=WAMPMSO+OUCBMSO;/* UPDATE MSO SERVICE    @Z40BPCH*/
         L     @08,WAMPMSO(,WAMPPTR)                               0189
         AL    @08,OUCBMSO(,OUCBPTR)                               0189
         ST    @08,WAMPMSO(,WAMPPTR)                               0189
*           IF RRPACOD^=RSTORCMP THEN/* IF NOT RESTORE CMPLT @Z40BPCH*/
         CLI   RRPACOD(RRPAPTR),19                                 0190
         BE    @RF00190                                            0190
*             WAMPTRR=WAMPTRR+(RRPATOD-OUCBTMS);/* UPDATE TRANS    0191
*                                      RESIDENT TIME         @Z40BPCH*/
         AL    @09,WAMPTRR(,WAMPPTR)                               0191
         ST    @09,WAMPTRR(,WAMPPTR)                               0191
*           IF RRPACOD=QSCECMP THEN /* QUIESCE COMPLETE      @Z40BPCH*/
@RF00190 CLI   RRPACOD(RRPAPTR),13                                 0192
         BNE   @RF00192                                            0192
*             WAMPSWC=WAMPSWC+ONE;  /* UPDATE PERIOD SWP CNT @Z40BPCH*/
         LA    @09,1                                               0193
         AL    @09,WAMPSWC(,WAMPPTR)                               0193
         ST    @09,WAMPSWC(,WAMPPTR)                               0193
*         END;                      /*                       @Z40BPCH*/
*     END;                                                         0195
*   ELSE                            /* XACTN DATA TO BE SUBTRACTED   */
*     DO;                                                          0196
         B     @RC00181                                            0196
@RF00181 DS    0H                                                  0197
*       WAMPTAT=WAMPTAT-            /* SUBTRACT PREVIOUS TRANSACTN   */
*           (RRPATOD-OUCBTMS);      /* ACTIVE TIME FROM NEW PERIOD   */
         L     @09,RRPATOD(,RRPAPTR)                               0197
         SL    @09,OUCBTMS(,OUCBPTR)                               0197
         L     @08,WAMPTAT(,WAMPPTR)                               0197
         SLR   @08,@09                                             0197
         ST    @08,WAMPTAT(,WAMPPTR)                               0197
*       IF OUCBOUT='0'B THEN        /* USER CURRENTLY RECEIV SERVC   */
         TM    OUCBOUT(OUCBPTR),B'00000100'                        0198
         BNZ   @RF00198                                            0198
*         DO;                       /*                       @Z40BPCH*/
*           WAMPSRV=WAMPSRV-        /* SUBTRACT SERVICE PREV RECVD   */
*               OUCBWMS;            /* FROM NEW PERIOD ENTRY         */
         L     @08,WAMPSRV(,WAMPPTR)                               0200
         SL    @08,OUCBWMS(,OUCBPTR)                               0200
         ST    @08,WAMPSRV(,WAMPPTR)                               0200
*           WAMPCPU=WAMPCPU-OUCBCPU;/* SUBTRACT PREV CPU SERV      0201
*                                                            @Z40BPCH*/
         L     @08,WAMPCPU(,WAMPPTR)                               0201
         SL    @08,OUCBCPU(,OUCBPTR)                               0201
         ST    @08,WAMPCPU(,WAMPPTR)                               0201
*           WAMPIOC=WAMPIOC-OUCBIOC;/* SUBTRACT PREV I/O SERV      0202
*                                                            @Z40BPCH*/
         L     @08,WAMPIOC(,WAMPPTR)                               0202
         SL    @08,OUCBIOC(,OUCBPTR)                               0202
         ST    @08,WAMPIOC(,WAMPPTR)                               0202
*           WAMPMSO=WAMPMSO-OUCBMSO;/* SUBTRACT PREV MSO SERV      0203
*                                                            @Z40BPCH*/
         L     @08,WAMPMSO(,WAMPPTR)                               0203
         SL    @08,OUCBMSO(,OUCBPTR)                               0203
         ST    @08,WAMPMSO(,WAMPPTR)                               0203
*           IF RRPACOD^=RSTORCMP THEN/* NOT RESTORE CMPLT    @Z40BPCH*/
         CLI   RRPACOD(RRPAPTR),19                                 0204
         BE    @RF00204                                            0204
*             WAMPTRR=WAMPTRR-(RRPATOD-OUCBTMS);/* UPDATE TRANSACTION
*                                      RESIDENT TIME         @Z40BPCH*/
         LCR   @09,@09                                             0205
         AL    @09,WAMPTRR(,WAMPPTR)                               0205
         ST    @09,WAMPTRR(,WAMPPTR)                               0205
*         END;                      /*                       @Z40BPCH*/
@RF00204 DS    0H                                                  0207
*     END;                                                         0207
*                                                                  0207
@RF00198 DS    0H                                                  0208
*   /*****************************************************************/
*   /*                                                               */
*   /* ? IRACTLEP ENN(WR4)                                           */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0208
*   GEN CODE EXIT NOSEQFLOW;                                       0208
@RC00181 DS    0H                                                  0208
*                                  /*
         LM    @00,@14,192+000(@13)    RELOAD INVOKING RTNE REGS
         BR    RTNREG                  RETURN TO INVOKER
*   RESPECIFY                                                      0209
*    (R0,                                                          0209
*     R1,                                                          0209
*     ASVTPTR) RSTD;                                               0209
*                                                                  0210
*/* **************************************************************** */
*/*                                                                  */
*/* ROUTINE NAME - IRARMWR5                                          */
*/*                                                                  */
*/* DESCRIPTIVE NAME - SRM WORKLOAD ACTIVITY RECORDING NORMALIZED    */
*/*                    WORKLOAD LEVEL CALCULATION SUBROUTINE         */
*/*                                                                  */
*/* FUNCTION - TO CALCULATE THE NORMALIZED WORKLOAD LEVEL FOR EACH   */
*/*            WAMT PERFORMANCE GROUP PERIOD ENTRY IN WHICH TRANS-   */
*/*            ACTION DATA HAS BEEN ACCUMULATED DURING THE LAST      */
*/*            DATA COLLECTION INTERVAL.                             */
*/*            NOTE:  FOR THOSE WAMT ENTRIES IN WHICH THE SERVICE    */
*/*                   RATE CALCULATED CAN BE ASSOCIATED WITH MULTIPLE*/
*/*                   NORMALIZED WORKLOAD LEVELS OR IS ZERO EVEN     */
*/*                   THOUGH AT LEAST ONE TRANSACTION HAS BEEN ACTIVE*/
*/*                   DURING THE DATA COLLECTION INTERVAL, THE       */
*/*                   NEGATIVE VALUE OF THE NORMALIZED WORKLOAD LEVEL*/
*/*                   WILL BE CALCULATED TO INDICATE TO MF/1 AN      */
*/*                   ESTIMATED VALUE.                               */
*/*                                                                  */
*/* INPUT - REG 6 CONTAINS THE ADDRESS OF THE WAMT                   */
*/*                                                                  */
*/* OUTPUT - NONE                                                    */
*/*                                                                  */
*/* EXIT - RETURN VIA REG 14                                         */
*/*                                                                  */
*/* **************************************************************** */
*                                                                  0210
*IRARMWR5:                                                         0210
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0210
IRARMWR5 DS    0H                                                  0211
*   DCL                                                            0211
*     RTNSAV REG(11) PTR(31);       /* RETURN POINT SAVE             */
*   RTNSAV=RTNREG;                  /* SAVE RETURN POINT ADDRESS     */
         LR    RTNSAV,RTNREG                                       0212
*   RESPECIFY                                                      0213
*    (RTNREG,                                                      0213
*     NTRREG,                                                      0213
*     RTNCOD) UNRSTD;                                              0213
*   RESPECIFY                                                      0214
*    (R0,                                                          0214
*     R1,                                                          0214
*     ASVTPTR,                                                     0214
*     OUCBPTR) UNRSTD;                                             0214
*   WMSTPTR=RMCTWMST;               /* ADDRESS OF WMST               */
         L     WMSTPTR,RMCTWMST(,RMCTPTR)                          0215
*   WAMPPTR=WAMTPTR+                /* PICK 1ST WAMP ENTRY           */
*       WAMTNX1;                                                   0216
         LR    WAMPPTR,WAMTPTR                                     0216
         AL    WAMPPTR,WAMTNX1(,WAMTPTR)                           0216
*   DO WPGNNUM=ONE BY ONE           /* STEP THRU ALL PERFORMANCE     */
*         TO WMSTPGHI;              /* GROUPS IN THE IPS             */
         LA    @04,1                                               0217
         ST    @04,WPGNNUM(,RMCTPTR)                               0217
         B     @DE00217                                            0217
@DL00217 DS    0H                                                  0218
*     IF WPGVTENT^=ZERO THEN        /* BYPASS GROUPS NOT SPECIFIED   */
         SLR   @04,@04                                             0218
         L     @15,WPGNNUM(,RMCTPTR)                               0218
         ALR   @15,@15                                             0218
         AL    @15,WMSTPGVT(,WMSTPTR)                              0218
         LH    @15,WPGVTENT(,@15)                                  0218
         CR    @15,@04                                             0218
         BE    @RF00218                                            0218
*       DO;                                                        0219
*         WPGDPTR=WMSTPGDT+         /* PICK DESCRIPTR FOR PERF GROUP */
*             WPGVTENT;                                            0220
         AL    @15,WMSTPGDT(,WMSTPTR)                              0220
         ST    @15,WPGDPTR(,RMCTPTR)                               0220
*         WPGDSTP=ZERO;             /* MARK PGD END NOT REACHED      */
         ST    @04,WPGDSTP(,RMCTPTR)                               0221
*         DO WPGPPTR=ADDR(WPGDPGP)  /* PROCESS ALL PERIODS           */
*               BY LENGTH(WPGP)     /* WITHIN A PERFORMANCE GROUP    */
*               WHILE(WPGDSTP=ZERO);                               0222
         LA    WPGPPTR,WPGDPGP(,@15)                               0222
         B     @DE00222                                            0222
@DL00222 DS    0H                                                  0223
*           IF WAMPSV<ZERO THEN     /* IF NEGATIVE SERVICE,          */
         SLR   @04,@04                                             0223
         C     @04,WAMPSV(,WAMPPTR)                                0223
         BNH   @RF00223                                            0223
*             WAMPSV=ZERO;          /* DON'T REPORT                  */
         ST    @04,WAMPSV(,WAMPPTR)                                0224
*           IF WAMPCU<ZERO THEN     /* IF NEGATIVE CPU SERVICE,      */
@RF00223 SLR   @04,@04                                             0225
         C     @04,WAMPCU(,WAMPPTR)                                0225
         BNH   @RF00225                                            0225
*             WAMPCPU=ZERO;         /* DON'T REPORT          @Z40BPCH*/
         ST    @04,WAMPCPU(,WAMPPTR)                               0226
*           IF WAMPIC<ZERO THEN     /* IF NEGATIVE IO SERVICE,       */
@RF00225 SLR   @04,@04                                             0227
         C     @04,WAMPIC(,WAMPPTR)                                0227
         BNH   @RF00227                                            0227
*             WAMPIOC=ZERO;         /* DON'T REPORT          @Z40BPCH*/
         ST    @04,WAMPIOC(,WAMPPTR)                               0228
*           IF WAMPMO<ZERO THEN     /* IF NEGATIVE MSO SERVICE,      */
@RF00227 SLR   @04,@04                                             0229
         C     @04,WAMPMO(,WAMPPTR)                                0229
         BNH   @RF00229                                            0229
*             WAMPMSO=ZERO;         /* DON' REPORT           @Z40BPCH*/
         ST    @04,WAMPMSO(,WAMPPTR)                               0230
*           IF WAMPTR<ZERO THEN     /* IF NEGATIVE RESIDENCY TIME    */
@RF00229 SLR   @04,@04                                             0231
         C     @04,WAMPTR(,WAMPPTR)                                0231
         BNH   @RF00231                                            0231
*             WAMPTR=ZERO;          /* DON'T REPORT          @Z40BPCH*/
         ST    @04,WAMPTR(,WAMPPTR)                                0232
*           IF WAMPSW<ZERO THEN     /* IF NEGATIVE SWAP CNT  @Z40BPCH*/
@RF00231 SLR   @04,@04                                             0233
         C     @04,WAMPSW(,WAMPPTR)                                0233
         BNH   @RF00233                                            0233
*             WAMPSW=ZERO;          /* DON'T REPORT          @Z40BPCH*/
         ST    @04,WAMPSW(,WAMPPTR)                                0234
*           IF WAMPET<ZERO THEN     /* IF NEGATIVE ELAPSED TIME,     */
@RF00233 SLR   @04,@04                                             0235
         C     @04,WAMPET(,WAMPPTR)                                0235
         BNH   @RF00235                                            0235
*             WAMPET=ZERO;          /* DON'T REPORT                  */
         ST    @04,WAMPET(,WAMPPTR)                                0236
*           IF WAMPTAT>ZERO THEN    /* IF TRANSACTION ACTIVE TIME    */
@RF00235 L     @04,WAMPTAT(,WAMPPTR)                               0237
         CL    @04,@CF00100                                        0237
         BNH   @RF00237                                            0237
*             DO;                   /* POSITIVE, PERFORM CALCULATION */
*               RESPECIFY                                          0239
*                (R0,                                              0239
*                 R1,                                              0239
*                 ASVTPTR,                                         0239
*                 OUCBPTR) RSTD;                                   0239
*               OUCBPTR=RMCTOUCB;   /* DUMMY OUCB ADDRESS            */
         L     OUCBPTR,RMCTOUCB(,RMCTPTR)                          0240
*               R0=WAMPSRV*RMTMFCT/ /* SERVICE RATE PER SECOND       */
*                   WAMPTAT;                                       0241
         L     R0,WAMPSRV(,WAMPPTR)                                0241
         MH    R0,@CH01858                                         0241
         L     @15,WAMPTAT(,WAMPPTR)                               0241
         LR    @09,R0                                              0241
         SLR   @08,@08                                             0241
         DR    @08,@15                                             0241
         LR    R0,@09                                              0241
*               WPODPTR=WMSTPODT+   /* PERF OBJECTIVE DESCRPT ADDRESS*/
*                   WPOVTENT;                                      0242
*                                                                  0242
         SLR   @15,@15                                             0242
         IC    @15,WPGPOBJN(,WPGPPTR)                              0242
         ALR   @15,@15                                             0242
         AL    @15,WMSTPOVT(,WMSTPTR)                              0242
         LH    WPODPTR,WPOVTENT(,@15)                              0242
         AL    WPODPTR,WMSTPODT(,WMSTPTR)                          0242
*               /*****************************************************/
*               /*                                                   */
*               /* CALCULATE NORMALIZED WORKLOAD LEVEL. ? IRACTLCL   */
*               /* EPN(WM4)                                          */
*               /*                                                   */
*               /*****************************************************/
*                                                                  0243
*               CALL RMSBWM4->IRARMRTN;/* INVOKE WM4 SUBRTN          */
         L     @15,RMSBWM4(,RMCTPTR)                               0243
         BALR  @14,@15                                             0243
*               WAMPNWL=R0;         /* NORM. WORKLOAD LEVEL  @Z40BPCH*/
         ST    R0,WAMPNWL(,WAMPPTR)                                0244
*               IF(WPOSSRV<ZERO×    /* IF SERVICE RATE DEFINES       */
*                   (WPOPSRV-WPOSSRV)/* MULTIPLE NORMALIZED WORKLOAD */
*                   <=ZERO) THEN    /* LEVELS                @Z40BPCH*/
         SLR   @15,@15                                             0245
         LH    @14,WPOSSRV(,WPODPTR)                               0245
         CR    @14,@15                                             0245
         BL    @RT00245                                            0245
         LCR   @14,@14                                             0245
         LH    @09,WPOPSRV(,WPODPTR)                               0245
         ALR   @14,@09                                             0245
         CLR   @14,@15                                             0245
         BH    @RF00245                                            0245
@RT00245 DS    0H                                                  0246
*                 WAMPNWL=-(WAMPNWL);/* INDICATE ESTIMATED RESULT    */
         L     @15,WAMPNWL(,WAMPPTR)                               0246
         LCR   @15,@15                                             0246
         ST    @15,WAMPNWL(,WAMPPTR)                               0246
*               RESPECIFY                                          0247
*                (R0,                                              0247
*                 R1,                                              0247
*                 ASVTPTR,                                         0247
*                 OUCBPTR) UNRSTD;                                 0247
@RF00245 DS    0H                                                  0248
*             END;                                                 0248
*           WAMPPTR=WAMPPTR+        /* NEXT PERIOD WITHIN THE WAMP   */
*               WAMTSPD;            /* FOR THIS PG                   */
@RF00237 AH    WAMPPTR,WAMTSPD(,WAMTPTR)                           0249
*           IF WPGPFIN='1'B THEN    /* LAST PERF PERIOD REACHED      */
         TM    WPGPFIN(WPGPPTR),B'10000000'                        0250
         BNO   @RF00250                                            0250
*             WPGDSTP=CON4;         /* FORCE EXIT FROM PERF GRP SCAN */
         MVC   WPGDSTP(4,RMCTPTR),@CF00035                         0251
*         END;                                                     0252
@RF00250 AL    WPGPPTR,@CF00150                                    0252
@DE00222 L     @04,WPGDSTP(,RMCTPTR)                               0252
         LTR   @04,@04                                             0252
         BZ    @DL00222                                            0252
*       END;                                                       0253
*   END;                                                           0254
@RF00218 LA    @04,1                                               0254
         AL    @04,WPGNNUM(,RMCTPTR)                               0254
         ST    @04,WPGNNUM(,RMCTPTR)                               0254
@DE00217 CH    @04,WMSTPGHI(,WMSTPTR)                              0254
         BNH   @DL00217                                            0254
*   RESPECIFY                                                      0255
*    (R0,                                                          0255
*     R1,                                                          0255
*     ASVTPTR,                                                     0255
*     OUCBPTR) RSTD;                                               0255
*   RESPECIFY                                                      0256
*    (RTNREG,                                                      0256
*     NTRREG,                                                      0256
*     RTNCOD) RSTD;                                                0256
*   RTNREG=RTNSAV;                  /* RESTORE RETURN POINT ADDRESS  */
         LR    RTNREG,RTNSAV                                       0257
*   END IRARMWR5;                                                  0258
@EL00003 DS    0H                                                  0258
@EF00003 DS    0H                                                  0258
@ER00003 BR    @14                                                 0258
*                                                                  0259
*/* **************************************************************** */
*/*                                                                  */
*/* ROUTINE NAME - IRARMWR6                                          */
*/*                                                                  */
*/* DESCRIPTIVE NAME - SRM WORKLOAD ACTIVITY RECORDING               */
*/*                    TRANSACTION END UPDATE SUBROUTINE             */
*/*                                                                  */
*/* FUNCTION - TO ADD TO THE APPROPRIATE WAMT PERFORMANCE GROUP      */
*/*            PERIOD ACCUMULATOR THE TRANSACTION ELAPSED TIME AND   */
*/*            TO COUNT THE NUMBER OF TRANSACTION THAT TERMINATED    */
*/*            DURING THE CURRENT DATA COLLECTION INTERVAL.          */
*/*                                                                  */
*/* INPUT - REG  4 CONTAINS THE ADDRESS OF THE OUCB FROM WHICH THE   */
*/*         TRANSACTION DATA IS OBTAINED.                            */
*/*                                                                  */
*/* OUTPUT - SEE FUNCTION                                            */
*/*                                                                  */
*/* EXIT - RETURN VIA REG 14                                         */
*/*                                                                  */
*/* **************************************************************** */
*                                                                  0259
*   /*****************************************************************/
*   /*                                                               */
*   /* ? IRACTLEP EPN(WR6)                                           */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0259
*   DCL                                                            0259
*     IRARMWR6 ENTRY INT;                                          0259
*   GEN CODE REFS(RMCTRMSA) NOEXIT SEQFLOW DEFS(IRARMWR6);         0260
*                                  /*
         ENTRY IRARMWR6
IRARMWR6 DS    0H
         L     @15,RMCTRMSA(,RMCTPTR)  SRM SAVE AREA START ADDRESS
         STM   @00,@14,192+000(@15)    SAVE INVOKING RTNE REGS
         LR    @13,@15                 ROUTINE SAVE AREA ADDRESS
         BALR  @15,0                   SETUP ENTRY ADDRESSABILITY
         LA    @12,*-@PSTART           DISPLACEMENT TO MODULE BASE
         LCR   @12,@12                 NEGATIVE FOR SUBTRACT
         ALR   @12,@15                 SETUP MODULE ADDRESSABILITY
*   IF OUCBATR='1'B&                /* TRANSACTION IN EXISTENCE AND  */
*       OUCBNTR='0'B THEN           /* TRANSACTION END NOT PROCESSED */
         TM    OUCBATR(OUCBPTR),B'10000000'                        0261
         BNO   @RF00261                                            0261
         TM    OUCBNTR(OUCBPTR),B'00100000'                        0261
         BNZ   @RF00261                                            0261
*     DO;                           /* ADJUST WKLD ACTIVITY TOTALS 0262
*                                      FOR APPROPRIATE PGP           */
*       WAMTPTR=RMCTWAMT;           /* ADDRESS OF WAMT               */
         L     WAMTPTR,RMCTWAMT(,RMCTPTR)                          0263
*       CALL IRARMWR7;              /* OFFSET IN WORKLOAD ACTIVITY 0264
*                                      MEASUREMENT TABLE OF PGP FOR
*                                      CURRENT MEMORY                */
         BAL   @14,IRARMWR7                                        0264
*       WAMPTRN=WAMPTRN+ONE;        /* INCREMENT NO. OF TRANSACTIONS
*                                      THAT ENDED IN THE CURRENT RE-
*                                      CORDING INTERVAL FOR THIS PGP */
         LA    @09,1                                               0265
         AL    @09,WAMPTRN(,WAMPPTR)                               0265
         ST    @09,WAMPTRN(,WAMPPTR)                               0265
*       WAMPTET=WAMPTET+            /* UPDATE TRANSACTION ELAPSD TIME*/
*           (RRPATOD-               /* FOR THIS TRANSACTION IN PGP   */
*           OUCBTMO);                                              0266
         L     @09,RRPATOD(,RRPAPTR)                               0266
         SL    @09,OUCBTMO(,OUCBPTR)                               0266
         AL    @09,WAMPTET(,WAMPPTR)                               0266
         ST    @09,WAMPTET(,WAMPPTR)                               0266
*     END;                                                         0267
*                                                                  0267
*   /*****************************************************************/
*   /*                                                               */
*   /* ? IRACTLEP ENN(WR6)                                           */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0268
*   GEN CODE EXIT NOSEQFLOW;                                       0268
@RF00261 DS    0H                                                  0268
*                                  /*
         LM    @00,@14,192+000(@13)    RELOAD INVOKING RTNE REGS
         BR    RTNREG                  RETURN TO INVOKER
*                                                                  0269
*/* **************************************************************** */
*/*                                                                  */
*/* ROUTINE NAME- IRARMWR7                                           */
*/*                                                                  */
*/* DESCRIPTIVE NAME - SRM WORKLOAD ACTIVITY RECORDING               */
*/*                    WAMT ENTRY DETERMINATION SUBROUTINE           */
*/*                                                                  */
*/* FUNCTION - TO OBTAIN ADDRESSABILITY TO THE WAMT PERFORMANC GROUP */
*/*            PERIOD ENTRY IN WHICH TO ACCUMULATE USER TRANSACTION  */
*/*            INFORMATION.                                          */
*/*                                                                  */
*/* INPUT - REG 4 CONTAINS THE ADDRESS OF THE OUCB FOR WHICH THE     */
*/*         TRANSACTION DATA IS TO BE ACCUMULATED.                   */
*/*       - REG 6 CONTAINS THE ADDRESS OF THE WAMT                   */
*/*                                                                  */
*/* OUTPUT - REG 7 CONTAINS THE ADDRESS OF THE WAMT ENTRY            */
*/*                                                                  */
*/* EXIT - RETURN VIA REG 14                                         */
*/*                                                                  */
*/* **************************************************************** */
*                                                                  0269
*IRARMWR7:                                                         0269
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0269
IRARMWR7 DS    0H                                                  0270
*   DCL                                                            0270
*     WPGDCOM FIXED(15)             /* LENGTH OF COMMON BLOCK IN WPGD*/
*         INIT(LENGTH(WPGD)-LENGTH(WPGP));                         0270
*   RESPECIFY                                                      0271
*    (R10,                                                         0271
*     R11,                                                         0271
*     NTRREG,                                                      0271
*     RTNCOD) UNRSTD;                                              0271
*   RESPECIFY                                                      0272
*     WPGD BASED(RMCTWMST->WMSTPGDT+OUCBWMG);                      0272
*                                                                  0272
*/*                                                                  */
*/*   OBTAIN THE PERFORMANCE GROUP AND PERFORMANCE GROUP PERIOD IN   */
*/*   WHICH THE MEMORY IS CURRENTLY EXECUTING.                       */
*/*                                                                  */
*                                                                  0273
*   WAMPPTR=WAMTPTR+WAMTNDX(WPGDPGN)+/* OFFSET IN WAMT TO PGP ENTRY
*                                      TO ACCUMULATE CURRENT INCORE
*                                      DATA                          */
*       (OUCBPGP-WPGDCOM)*WAMTSPD/LENGTH(WPGP);                    0273
         L     @15,RMCTWMST(,RMCTPTR)                              0273
         LH    @11,OUCBWMG(,OUCBPTR)                               0273
         AL    @11,WMSTPGDT(,@15)                                  0273
         SLR   @15,@15                                             0273
         IC    @15,WPGDPGN(,@11)                                   0273
         SLA   @15,2                                               0273
         LR    WAMPPTR,WAMTPTR                                     0273
         AL    WAMPPTR,WAMTNDX-4(@15,WAMTPTR)                      0273
         SLR   @09,@09                                             0273
         IC    @09,OUCBPGP(,OUCBPTR)                               0273
         SH    @09,WPGDCOM                                         0273
         LH    @15,WAMTSPD(,WAMTPTR)                               0273
         MR    @08,@15                                             0273
         D     @08,@CF00150                                        0273
         ALR   WAMPPTR,@09                                         0273
*   RESPECIFY                                                      0274
*     WPGD BASED(WPGDPTR);                                         0274
*   RESPECIFY                                                      0275
*    (R10,                                                         0275
*     R11,                                                         0275
*     NTRREG,                                                      0275
*     RTNCOD) RSTD;                                                0275
*   END IRARMWR7;                                                  0276
@EL00004 DS    0H                                                  0276
@EF00004 DS    0H                                                  0276
@ER00004 BR    @14                                                 0276
*                                                                  0277
*/* **************************************************************** */
*/*                                                                  */
*/* ROUTINE NAME - IRARMWR8                                          */
*/*                                                                  */
*/* DESCRIPTIVE NAME - SRM WORKLOAD ACTIVITY RECORDING               */
*/*                    IPS CHANGE SUBROUTINE                         */
*/*                                                                  */
*/* FUNCTION - TO TERMINATE WORKLOAD ACTIVITY DATA COLLECTION        */
*/*            WHENEVER AN IPS CHANGE OCCURS.                        */
*/*                                                                  */
*/* INPUT - NONE                                                     */
*/*                                                                  */
*/* OUTPUT - NONE                                                    */
*/*                                                                  */
*/* EXIT - RETURN VIA REG 14                                         */
*/*                                                                  */
*/* **************************************************************** */
*                                                                  0277
*   GEN CODE DEFS(IRARMWR8) NOEXIT SEQFLOW;                        0277
*                                  /*
         ENTRY IRARMWR8                WAR IPS CHANGE PROCESSING
IRARMWR8 DS    0H
         STM   @00,@14,LEVEL3(@13)     SAVE INVOKING RTN REGS
         LA    @12,IRARMWR8-@PSTART    DISPLACEMENT TO MODULE BASE
         LCR   @12,@12                 NEGATIVE FOR SUBTRACT
         ALR   @12,@15                 SETUP MODULE ADDRESSABILITY
*   WAMTPTR=RMCTWAMT;               /* WAMT ADDRESS                  */
         L     WAMTPTR,RMCTWAMT(,RMCTPTR)                          0278
*   RMCTMFA='0'B;                   /* DE-ACTIVATE WORKLOAD ACTIVITY
*                                      DATA COLLECTION               */
*   RMCTSTW='1'B;                   /* SET TO NEW IPS TERMINATED WAR
*                                      DATA COLLECTION               */
         OI    RMCTSTW(RMCTPTR),B'00000100'                        0280
         NI    RMCTMFA(RMCTPTR),B'01111111'                        0280
*   RMCTMFS='1'B;                   /* SET TO NEW IPS TERMINATED WAR
*                                      DATA COLLECTION       @Z40BPCH*/
         OI    RMCTMFS(RMCTPTR),B'01000000'                        0281
*   RESPECIFY                                                      0282
*    (R10,                                                         0282
*     R11) UNRSTD;                                                 0282
*   ASVTPTR=CVTASVT;                /* ADDRESS SPACE VECTOR TABLE ADR*/
         L     @11,CVTPTR                                          0283
         L     ASVTPTR,CVTASVT(,@11)                               0283
*   ASVTSTP=ASVTPTR+                /* CALCULATE SCAN END ADDRESS    */
*       ASVTMAXU*LENGTH(ASVTENTY);                                 0284
         L     ASVTSTP,ASVTMAXU(,ASVTPTR)                          0284
         SLA   ASVTSTP,2                                           0284
         ALR   ASVTSTP,ASVTPTR                                     0284
*   DO ASVTPTR=ASVTPTR              /* STEP THRU ALL ASCBS IN ASVT   */
*         BY LENGTH(ASVTENTY) WHILE(ASVTPTR<ASVTSTP);              0285
         B     @DE00285                                            0285
@DL00285 DS    0H                                                  0286
*     IF ASVTAVAL(ONE)='0'B THEN    /* IF ASID ASSIGNED TO SOME USER */
         TM    ASVTAVAL(ASVTPTR),B'10000000'                       0286
         BNZ   @RF00286                                            0286
*       DO OUCBPTR=ASVTENTY(ONE)->  /* ADDRESSABILITY TO OUCB        */
*             ASCBOUCB WHILE(OUCBNAME=/* VALIDATE OUCB               */
*             'OUCB'&OUCBINV='0'B); /*                       @Z40BPCH*/
         L     @11,ASVTENTY(,ASVTPTR)                              0287
         L     OUCBPTR,ASCBOUCB(,@11)                              0287
         CLC   OUCBNAME(4,OUCBPTR),@CC01893                        0287
         BNE   @DC00287                                            0287
         TM    OUCBINV(OUCBPTR),B'00010000'                        0287
         BNZ   @DC00287                                            0287
*         IF OUCBATR='1'B&          /* ACTIVE TRANSACTION FOR MEMORY */
*             OUCBINC='1'B&         /* SESSION NOT BETWEEN STEPS     */
*             (OUCBRDY='1'B×        /* TRANSACTION NOT SUSPENDED     */
*             OUCBOUT='0'B) THEN    /* TRANSACTION NOW EXECUTING     */
         TM    OUCBATR(OUCBPTR),B'10000001'                        0288
         BNO   @RF00288                                            0288
         TM    OUCBRDY(OUCBPTR),B'10000000'                        0288
         BO    @RT00288                                            0288
         TM    OUCBOUT(OUCBPTR),B'00000100'                        0288
         BNZ   @RF00288                                            0288
@RT00288 DS    0H                                                  0289
*           DO;                     /* ADJUST WKLD ACTIVITY TOTALS 0289
*                                      FOR APPROPRIATE PGP           */
*             IF OUCBOUT='0'B THEN  /* MEMORY NOT SWAPPED OUT        */
*                                                                  0290
         TM    OUCBOUT(OUCBPTR),B'00000100'                        0290
         BNZ   @RF00290                                            0290
*               /*****************************************************/
*               /*                                                   */
*               /* ? IRACTLCL EPN(WM1)                               */
*               /*                                                   */
*               /*****************************************************/
*                                                                  0291
*               CALL RMSBWM1->IRARMRTN;/* INVOKE WM1 SUBRTN          */
*                                                                  0291
         L     @15,RMSBWM1(,RMCTPTR)                               0291
         BALR  @14,@15                                             0291
*             /*******************************************************/
*             /*                                                     */
*             /* OBTAIN SERVICE ACCUMULATED FOR CURRENT IN-CORE      */
*             /* INTERVAL                                            */
*             /*                                                     */
*             /*******************************************************/
*                                                                  0292
*             CALL IRARMWR4;        /* ADD IN CURRENT SERVICE, TIME  */
@RF00290 LA    @15,IRARMWR4                                        0292
         BALR  @14,@15                                             0292
*           END;                                                   0293
*       END;                                                       0294
@RF00288 DS    0H                                                  0294
@DC00287 DS    0H                                                  0295
*   END;                                                           0295
@RF00286 AL    ASVTPTR,@CF00035                                    0295
@DE00285 CR    ASVTPTR,ASVTSTP                                     0295
         BL    @DL00285                                            0295
*   RESPECIFY                                                      0296
*    (R10,                                                         0296
*     R11) RSTD;                                                   0296
*   WAMTTOC=RMCTTOC;                /* TIME DATA COLLECTION STOPPED  */
         MVC   WAMTTOC(8,WAMTPTR),RMCTTOC(RMCTPTR)                 0297
*/*                                                                  */
*/*   CALCULATE NORMALIZED WORKLOAD LEVEL FOR EACH PERFORMANCE       */
*/*   GROUP PERIOD WITHIN THE WORKLOAD ACTIVITY MEASUREMENT TABLE.   */
*/*                                                                  */
*                                                                  0298
*   CALL IRARMWR5;                                                 0298
         BAL   @14,IRARMWR5                                        0298
*   GEN CODE EXIT NOSEQFLOW;                                       0299
*                                  /*
         LM    @00,@14,LEVEL3(@13)     RELOAD INVOKING RTN REGS
         BR    RTNREG                  RETURN TO INVOKER
*   END IRARMWAR                                                   0300
*                                                                  0300
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (IRACNSMP)                                       */
*/*%INCLUDE SYSLIB  (IRARMCT )                                       */
*/*%INCLUDE SYSLIB  (IRACCT  )                                       */
*/*%INCLUDE SYSLIB  (IRAICT  )                                       */
*/*%INCLUDE SYSLIB  (IRAMCT  )                                       */
*/*%INCLUDE SYSLIB  (IRARCT  )                                       */
*/*%INCLUDE SYSLIB  (IRARMPT )                                       */
*/*%INCLUDE SYSLIB  (IRARMCA )                                       */
*/*%INCLUDE SYSLIB  (IRARMEX )                                       */
*/*%INCLUDE SYSLIB  (IRARMSB )                                       */
*/*%INCLUDE SYSLIB  (IRAEPAT )                                       */
*/*%INCLUDE SYSLIB  (IRAEPDT )                                       */
*/*%INCLUDE SYSLIB  (IRAEPST )                                       */
*/*%INCLUDE SYSLIB  (IRARRPA )                                       */
*/*%INCLUDE SYSLIB  (IHAASCB )                                       */
*/*%INCLUDE SYSLIB  (IRAOUCB )                                       */
*/*%INCLUDE SYSLIB  (IHAOUXB )                                       */
*/*%INCLUDE SYSLIB  (IHAASVT )                                       */
*/*%INCLUDE SYSLIB  (IRAWAMT )                                       */
*/*%INCLUDE SYSLIB  (IRAWMST )                                       */
*/*%INCLUDE SYSLIB  (IRAWPGDT)                                       */
*/*%INCLUDE SYSLIB  (IRAWPODT)                                       */
*/*%INCLUDE SYSLIB  (CVT     )                                       */
*/*%INCLUDE SYSLIB  (IHAPSA  )                                       */
*/*%INCLUDE SYSLIB  (IRAREGS )                                       */
*                                                                  0300
*       ;                                                          0300
@DATA    DS    0H
@CH01858 DC    H'976'
         DS    0F
         DS    0F
@CF00100 DC    F'0'
@CF00035 DC    F'4'
@CF00150 DC    F'8'
@CF00070 DC    F'64'
         DS    0D
WPGDCOM  DC    AL2(20-8)
@CC01893 DC    C'OUCB'
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
RMCTPTR  EQU   @02
RRPAPTR  EQU   @03
ASCBPTR  EQU   @05
OUCBPTR  EQU   @04
OUXBPTR  EQU   @06
ASVTPTR  EQU   @01
WAMTPTR  EQU   @06
WAMPPTR  EQU   @07
WMSTPTR  EQU   @05
WPGPPTR  EQU   @10
WPGLPTR  EQU   @15
WPODPTR  EQU   @01
R0       EQU   @00
R1       EQU   @01
SVEREG   EQU   @13
RTNREG   EQU   @14
NTRREG   EQU   @15
RTNCOD   EQU   @15
ASVTSTP  EQU   @07
R10      EQU   @10
R11      EQU   @11
RTNSAV   EQU   @11
PSA      EQU   0
FLCRNPSW EQU   PSA
FLCROPSW EQU   PSA+8
FLCICCW2 EQU   PSA+16
FLCCVT   EQU   FLCICCW2
PSAEEPSW EQU   PSA+132
PSAESPSW EQU   PSA+136
FLCSVILC EQU   PSAESPSW+1
PSAEPPSW EQU   PSA+140
FLCPIILC EQU   PSAEPPSW+1
FLCPICOD EQU   PSAEPPSW+2
PSAPICOD EQU   FLCPICOD+1
FLCTEA   EQU   PSAEPPSW+4
FLCPER   EQU   PSA+152
FLCMCLA  EQU   PSA+168
FLCIOEL  EQU   FLCMCLA+4
FLCIOA   EQU   FLCMCLA+16
FLCFSA   EQU   FLCMCLA+80
PSATOLD  EQU   PSA+540
PSASUPER EQU   PSA+552
PSASUP1  EQU   PSASUPER
PSASUP2  EQU   PSASUPER+1
PSASUP3  EQU   PSASUPER+2
PSASUP4  EQU   PSASUPER+3
PSACLHT  EQU   PSA+640
PSALKSA  EQU   PSA+696
PSAHLHI  EQU   PSA+760
PSADSSFL EQU   PSA+836
PSADSSF1 EQU   PSADSSFL
PSADSSF3 EQU   PSADSSFL+2
PSADSSF4 EQU   PSADSSFL+3
PSARSVT  EQU   PSA+896
RMCT     EQU   0
RMCTWMST EQU   RMCT+24
RMCTRMSA EQU   RMCT+32
RMCTWAMT EQU   RMCT+88
RMCTTOC  EQU   RMCT+128
RMCTFLGS EQU   RMCT+148
RMCTMFA  EQU   RMCTFLGS
RMCTSTW  EQU   RMCTFLGS
RMCTMFS  EQU   RMCTFLGS+1
RMCTOUCB EQU   RMCT+168
CCT      EQU   RMCT+192
CCTFLG1  EQU   CCT+124
ICT      EQU   RMCT+320
ICTFLAGS EQU   ICT+84
MCT      EQU   RMCT+408
MCTSFLGS EQU   MCT+64
MCTOFLGS EQU   MCT+65
RCT      EQU   RMCT+504
RMPT     EQU   RMCT+592
RMCA     EQU   RMCT+664
RMCAFLGS EQU   RMCA+36
RMCAWKA  EQU   RMCA+80
RMCASRC  EQU   RMCA+124
RMEX     EQU   RMCT+832
RMEPBEVT EQU   RMEX
RMEPBCTL EQU   RMEX+16
RMSB     EQU   RMCT+896
RMSBWM1  EQU   RMSB+52
RMSBWM4  EQU   RMSB+56
RMSBWR4  EQU   RMSB+88
RMSBWR6  EQU   RMSB+92
EPAT     EQU   RMCT+1016
EPDT     EQU   RMCT+1416
EPST     EQU   RMCT+1512
RMEPBWM3 EQU   EPST
RMEPBIL3 EQU   EPST+16
RMEPBCL3 EQU   EPST+32
RMEPBCSO EQU   EPST+48
RMEPBCSI EQU   EPST+64
RRPA     EQU   0
RRPAINC  EQU   RRPA
RRPAASD  EQU   RRPAINC
RRPAVPGN EQU   RRPAINC+2
RRPAFLG0 EQU   RRPAVPGN
RRPACOD  EQU   RRPAINC+3
RRPAINP  EQU   RRPA+4
RRPAFLG  EQU   RRPA+8
RRPARTC  EQU   RRPA+11
RRPATOD  EQU   RRPA+12
RRPAINS  EQU   RRPA+16
ASCB     EQU   0
ASCBSUPC EQU   ASCB+16
ASCBRSM  EQU   ASCB+52
ASCBRSMF EQU   ASCBRSM
ASCBFW1  EQU   ASCB+100
ASCBRCTF EQU   ASCBFW1+2
ASCBFLG1 EQU   ASCBFW1+3
ASCBDSP1 EQU   ASCB+114
ASCBFLG2 EQU   ASCB+115
ASCBLKGP EQU   ASCB+128
ASCBOUCB EQU   ASCB+144
ASCBSRQ  EQU   ASCB+180
ASCBSRQ1 EQU   ASCBSRQ
ASCBSRQ2 EQU   ASCBSRQ+1
ASCBSRQ3 EQU   ASCBSRQ+2
ASCBSRQ4 EQU   ASCBSRQ+3
OUCB     EQU   0
OUCBNAME EQU   OUCB
OUCBQFL  EQU   OUCB+16
OUCBOUT  EQU   OUCBQFL
OUCBSFL  EQU   OUCB+17
OUCBINV  EQU   OUCBSFL
OUCBYFL  EQU   OUCB+18
OUCBAFL  EQU   OUCB+19
OUCBTFL  EQU   OUCB+20
OUCBATR  EQU   OUCBTFL
OUCBNTR  EQU   OUCBTFL
OUCBMAR  EQU   OUCBTFL
OUCBINC  EQU   OUCBTFL
OUCBEFL  EQU   OUCB+21
OUCBUFL  EQU   OUCB+23
OUCBPGP  EQU   OUCB+31
OUCBWMG  EQU   OUCB+32
OUCBWMS  EQU   OUCB+52
OUCBCPU  EQU   OUCB+56
OUCBIOC  EQU   OUCB+60
OUCBMSO  EQU   OUCB+64
OUCBTMS  EQU   OUCB+68
OUCBTMO  EQU   OUCB+72
OUCBCSW  EQU   OUCB+84
OUCBCFL  EQU   OUCBCSW+2
OUCBRDY  EQU   OUCBCFL
OUCBPSS  EQU   OUCB+112
OUXB     EQU   0
ASVT     EQU   0
ASVTMAXU EQU   ASVT+516
ASVTFRST EQU   ASVT+524
ASVTENTY EQU   ASVT+528
ASVTAVAL EQU   ASVTENTY
WAMT     EQU   0
WAMTSIZ  EQU   WAMT+4
WAMTTMA  EQU   WAMT+8
WAMTTOC  EQU   WAMT+16
WAMTASD  EQU   WAMT+24
WAMTTCB  EQU   WAMT+28
WAMTIPS  EQU   WAMT+32
WAMTCPD  EQU   WAMT+34
WAMTSPD  EQU   WAMT+36
WAMTHPG  EQU   WAMT+38
WAMTIPC  EQU   WAMT+40
WAMTIPI  EQU   WAMT+44
WAMTIPM  EQU   WAMT+48
WAMTNX0  EQU   WAMT+52
WAMTNX1  EQU   WAMT+56
WAMP     EQU   0
WAMPPGP  EQU   WAMP
WAMPTRN  EQU   WAMPPGP
WAMPTAT  EQU   WAMPPGP+4
WAMPSRV  EQU   WAMPPGP+8
WAMPTET  EQU   WAMPPGP+12
WAMPNWL  EQU   WAMPPGP+16
WAMPCPU  EQU   WAMPPGP+20
WAMPIOC  EQU   WAMPPGP+24
WAMPMSO  EQU   WAMPPGP+28
WAMPTRR  EQU   WAMPPGP+32
WAMPSWC  EQU   WAMPPGP+36
WAMPOBJN EQU   WAMPPGP+40
WAMPDMN  EQU   WAMPPGP+41
WMST     EQU   0
WMSTID   EQU   WMST+4
WMSTPGVT EQU   WMST+8
WMSTPGDT EQU   WMST+16
WMSTPOVT EQU   WMST+24
WMSTPODT EQU   WMST+32
WMSTPGHI EQU   WMST+62
WMSTPGPC EQU   WMST+64
WMSTIPC  EQU   WMST+100
WMSTIPI  EQU   WMST+104
WMSTIPM  EQU   WMST+108
WPGD     EQU   0
WPGDPGN  EQU   WPGD
WPGDDFL  EQU   WPGD+3
WPGDPGP  EQU   WPGD+12
WPGDINDS EQU   WPGDPGP+5
WPGP     EQU   0
WPGPOBJN EQU   WPGP
WPGPDMN  EQU   WPGP+1
WPGPINDS EQU   WPGP+5
WPGPFIN  EQU   WPGPINDS
WPGL     EQU   0
WPGLISV  EQU   WPGL
WPOD     EQU   0
WPOP     EQU   WPOD
WPOPSRV  EQU   WPOP
WPOS     EQU   WPOD+4
WPOSSRV  EQU   WPOS
CVTMAP   EQU   0
CVTDAR   EQU   CVTMAP+72
CVTFLGS1 EQU   CVTDAR
CVTDCB   EQU   CVTMAP+116
CVTIOQET EQU   CVTMAP+120
CVTIERLC EQU   CVTMAP+144
CVTHEAD  EQU   CVTMAP+160
CVTSV76C EQU   CVTHEAD
CVTOPTA  EQU   CVTMAP+182
CVTOPTB  EQU   CVTMAP+183
CVTGTF   EQU   CVTMAP+236
CVTGTFST EQU   CVTGTF
CVTGTFS  EQU   CVTGTFST
CVTSTATE EQU   CVTGTFST
CVTTMODE EQU   CVTGTFST
CVTFORM  EQU   CVTGTFST
CVTAQAVT EQU   CVTMAP+240
CVTTCMFG EQU   CVTAQAVT
CVTVOLM2 EQU   CVTMAP+244
CVTTATA  EQU   CVTVOLM2
CVTTSKS  EQU   CVTTATA
CVTVOLF2 EQU   CVTTSKS
CVTTAT   EQU   CVTTATA+1
CVTATER  EQU   CVTMAP+248
CVTEXT1  EQU   CVTMAP+252
CVTPURG  EQU   CVTMAP+260
CVTQMSG  EQU   CVTMAP+268
CVTDMSR  EQU   CVTMAP+272
CVTRSV37 EQU   CVTDMSR
CVTDMSRF EQU   CVTRSV37
CVTERPV  EQU   CVTMAP+316
CVTINTLA EQU   CVTMAP+320
CVTAPF   EQU   CVTMAP+324
CVTEXT2  EQU   CVTMAP+328
CVTHJES  EQU   CVTMAP+332
CVTPGSIA EQU   CVTMAP+348
CVTA1F1  EQU   CVTMAP+356
CVTSYSK  EQU   CVTMAP+357
CVTVOLM1 EQU   CVTMAP+380
CVTVOLF1 EQU   CVTVOLM1
CVTATMCT EQU   CVTMAP+388
CVTXTNT1 EQU   0
CVTXTNT2 EQU   0
CVTDSSV  EQU   CVTXTNT2
CVTFLGBT EQU   CVTXTNT2+5
CVTQID   EQU   CVTXTNT2+24
CVTRV400 EQU   CVTXTNT2+52
CVTRV409 EQU   CVTXTNT2+53
CVTATCVT EQU   CVTXTNT2+64
CVTRV429 EQU   CVTXTNT2+84
CVTRV438 EQU   CVTXTNT2+85
CVTRV457 EQU   CVTXTNT2+112
CVTRV466 EQU   CVTXTNT2+113
CVTFIX   EQU   0
CVTRELNO EQU   CVTFIX+252
IRARMRTN EQU   0
WAMTXNTR EQU   0
WPGVTENT EQU   0
WPOVTENT EQU   0
IRARMNTR EQU   0
WAMTNDX  EQU   WAMTNX1
CVTPTR   EQU   FLCCVT
CVTS01   EQU   CVTPGSIA
CVTLPDIA EQU   CVTS01+12
CVTDIRST EQU   CVTLPDIA
CVTSLIDA EQU   CVTS01+24
CVTCTLFG EQU   CVTS01+50
CVTASVT  EQU   CVTS01+208
CVTRV210 EQU   CVTS01+424
CVTRV219 EQU   CVTS01+425
CVTRV228 EQU   CVTS01+426
CVTRV237 EQU   CVTS01+427
CVTMFRTR EQU   CVTS01+452
CVTRV262 EQU   CVTS01+468
CVTRV271 EQU   CVTS01+469
CVTRV280 EQU   CVTS01+470
CVTRV289 EQU   CVTS01+471
CVTGSDA  EQU   CVTS01+600
PSARSVTE EQU   PSARSVT
WARWRKA  EQU   RMCAWKA
WAMTXPTR EQU   WARWRKA
WPGNNUM  EQU   WARWRKA+4
WPGDSTP  EQU   WARWRKA+8
WPGDPTR  EQU   WARWRKA+12
WAMPSV   EQU   WAMPSRV
WAMPCU   EQU   WAMPCPU
WAMPIC   EQU   WAMPIOC
WAMPMO   EQU   WAMPMSO
WAMPTR   EQU   WAMPTRR
WAMPSW   EQU   WAMPSWC
WAMPET   EQU   WAMPTET
FLC      EQU   PSA
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
PSARSAV  EQU   PSARSVTE+60
PSARSTK  EQU   PSARSVTE+56
PSAESAV3 EQU   PSARSVTE+52
PSAESTK3 EQU   PSARSVTE+48
PSAESAV2 EQU   PSARSVTE+44
PSAESTK2 EQU   PSARSVTE+40
PSAESAV1 EQU   PSARSVTE+36
PSAESTK1 EQU   PSARSVTE+32
PSAPSAV  EQU   PSARSVTE+28
PSAPSTK  EQU   PSARSVTE+24
PSAMSAV  EQU   PSARSVTE+20
PSAMSTK  EQU   PSARSVTE+16
PSASSAV  EQU   PSARSVTE+12
PSASSTK  EQU   PSARSVTE+8
PSANSTK  EQU   PSARSVTE+4
PSACSTK  EQU   PSARSVTE
CVTRV628 EQU   CVTS01+728
CVTRV627 EQU   CVTS01+724
CVTRV626 EQU   CVTS01+720
CVTRV625 EQU   CVTS01+716
CVTRV624 EQU   CVTS01+712
CVTRV623 EQU   CVTS01+708
CVTRV622 EQU   CVTS01+704
CVTRV621 EQU   CVTS01+700
CVTIHASU EQU   CVTS01+696
CVTSUSP  EQU   CVTS01+692
CVTT6SVC EQU   CVTS01+688
CVTCDAL  EQU   CVTS01+684
CVTTCTL  EQU   CVTS01+680
CVTRSUME EQU   CVTS01+676
CVTJTERM EQU   CVTS01+672
CVTASMRM EQU   CVTS01+668
CVTTCASP EQU   CVTS01+664
CVT0PT03 EQU   CVTS01+660
CVT0PT0E EQU   CVTS01+656
CVTRV609 EQU   CVTS01+652
CVTCGK   EQU   CVTS01+648
CVTRAC   EQU   CVTS01+644
CVTHSM   EQU   CVTS01+640
CVTRV605 EQU   CVTS01+636
CVTRV604 EQU   CVTS01+632
CVTEFF02 EQU   CVTS01+628
CVTCBBR  EQU   CVTS01+624
CVTSSCR  EQU   CVTS01+620
CVTEVENT EQU   CVTS01+616
CVTCRCA  EQU   CVTS01+612
CVTTPIO  EQU   CVTS01+608
CVTADV   EQU   CVTS01+604
CVTGSDAB EQU   CVTGSDA
CVTQV3   EQU   CVTS01+596
CVTQV2   EQU   CVTS01+592
CVTQV1   EQU   CVTS01+588
CVTRPT   EQU   CVTS01+584
CVTSSRB  EQU   CVTS01+580
CVTCSDRL EQU   CVTS01+576
CVTEXP1  EQU   CVTS01+572
CVTRMPMT EQU   CVTS01+568
CVTRMPTT EQU   CVTS01+564
CVTVPSA  EQU   CVTS01+560
CVTVSTOP EQU   CVTS01+556
CVTGTFR8 EQU   CVTS01+552
CVTQUIT  EQU   CVTS01+548
CVTVACR  EQU   CVTS01+544
CVTWTCB  EQU   CVTS01+540
CVTSTPRS EQU   CVTS01+536
CVT0PT02 EQU   CVTS01+532
CVTDARCM EQU   CVTS01+528
CVTIRECM EQU   CVTS01+524
CVTJRECM EQU   CVTS01+520
CVTVEMS0 EQU   CVTS01+516
CVTSPFRR EQU   CVTS01+512
CVTRLSTG EQU   CVTS01+508
CVT0TC0A EQU   CVTS01+504
CVTGMBR  EQU   CVTS01+500
CVTLFRM  EQU   CVTS01+496
CVTRMBR  EQU   CVTS01+492
CVTVIOP  EQU   CVTS01+488
CVTRV307 EQU   CVTS01+486
CVTRV306 EQU   CVTS01+484
CVTRV305 EQU   CVTS01+482
CVTRV304 EQU   CVTS01+480
CVTRV303 EQU   CVTS01+478
CVTRV302 EQU   CVTS01+476
CVTTRCA  EQU   CVTS01+472
CVTRV297 EQU   CVTRV289
CVTRV296 EQU   CVTRV289
CVTRV295 EQU   CVTRV289
CVTRV294 EQU   CVTRV289
CVTRV293 EQU   CVTRV289
CVTRV292 EQU   CVTRV289
CVTRV291 EQU   CVTRV289
CVTRV290 EQU   CVTRV289
CVTRV288 EQU   CVTRV280
CVTRV287 EQU   CVTRV280
CVTRV286 EQU   CVTRV280
CVTRV285 EQU   CVTRV280
CVTRV284 EQU   CVTRV280
CVTRV283 EQU   CVTRV280
CVTRV282 EQU   CVTRV280
CVTRV281 EQU   CVTRV280
CVTRV279 EQU   CVTRV271
CVTRV278 EQU   CVTRV271
CVTRV277 EQU   CVTRV271
CVTRV276 EQU   CVTRV271
CVTRV275 EQU   CVTRV271
CVTRV274 EQU   CVTRV271
CVTRV273 EQU   CVTRV271
CVTRV272 EQU   CVTRV271
CVTRV270 EQU   CVTRV262
CVTRV269 EQU   CVTRV262
CVTRV268 EQU   CVTRV262
CVTRV267 EQU   CVTRV262
CVTRV266 EQU   CVTRV262
CVTRV265 EQU   CVTRV262
CVTRV264 EQU   CVTRV262
CVTRV263 EQU   CVTRV262
CVTVFP   EQU   CVTS01+464
CVTVSI   EQU   CVTS01+460
CVTVPSIB EQU   CVTS01+456
CVTMFACT EQU   CVTMFRTR
CVTMFCTL EQU   CVTS01+448
CVTPVBP  EQU   CVTS01+444
CVTPWI   EQU   CVTS01+440
CVTRV254 EQU   CVTS01+438
CVTRV253 EQU   CVTS01+436
CVTRV252 EQU   CVTS01+434
CVTRV251 EQU   CVTS01+433
CVTRV250 EQU   CVTS01+432
CVTRV249 EQU   CVTS01+431
CVTRV248 EQU   CVTS01+430
CVTRV247 EQU   CVTS01+429
CVTRV246 EQU   CVTS01+428
CVTRV245 EQU   CVTRV237
CVTRV244 EQU   CVTRV237
CVTRV243 EQU   CVTRV237
CVTRV242 EQU   CVTRV237
CVTRV241 EQU   CVTRV237
CVTRV240 EQU   CVTRV237
CVTRV239 EQU   CVTRV237
CVTRV238 EQU   CVTRV237
CVTRV236 EQU   CVTRV228
CVTRV235 EQU   CVTRV228
CVTRV234 EQU   CVTRV228
CVTRV233 EQU   CVTRV228
CVTRV232 EQU   CVTRV228
CVTRV231 EQU   CVTRV228
CVTRV230 EQU   CVTRV228
CVTRV229 EQU   CVTRV228
CVTRV227 EQU   CVTRV219
CVTRV226 EQU   CVTRV219
CVTRV225 EQU   CVTRV219
CVTRV224 EQU   CVTRV219
CVTRV223 EQU   CVTRV219
CVTRV222 EQU   CVTRV219
CVTRV221 EQU   CVTRV219
CVTRV220 EQU   CVTRV219
CVTRV218 EQU   CVTRV210
CVTRV217 EQU   CVTRV210
CVTRV216 EQU   CVTRV210
CVTRV215 EQU   CVTRV210
CVTRV214 EQU   CVTRV210
CVTRV213 EQU   CVTRV210
CVTRV212 EQU   CVTRV210
CVTRV211 EQU   CVTRV210
CVTLCCAT EQU   CVTS01+420
CVTPCCAT EQU   CVTS01+416
CVTIPCRP EQU   CVTS01+412
CVTIPCRI EQU   CVTS01+408
CVTIPCDS EQU   CVTS01+404
CVTAIDVT EQU   CVTS01+400
CVTSSAP  EQU   CVTS01+396
CVTEHCIR EQU   CVTS01+392
CVTEHDEF EQU   CVTS01+388
CVTDAIR  EQU   CVTS01+384
CVTPERFM EQU   CVTS01+380
CVT044R2 EQU   CVTS01+376
CVTFETCH EQU   CVTS01+372
CVTRSTWD EQU   CVTS01+368
CVTSPOST EQU   CVTS01+364
CVTIOBP  EQU   CVTS01+360
CVTASMVT EQU   CVTS01+356
CVTRECRQ EQU   CVTS01+352
CVTWSAC  EQU   CVTS01+348
CVTRV149 EQU   CVTS01+344
CVTWSAL  EQU   CVTS01+340
CVTSPSA  EQU   CVTS01+336
CVTGLMN  EQU   CVTS01+332
CVTVEAC0 EQU   CVTS01+328
CVT062R1 EQU   CVTS01+324
CVTRPOST EQU   CVTS01+320
CVTDQIQE EQU   CVTS01+316
CVTCSD   EQU   CVTS01+312
CVTLKRMA EQU   CVTS01+308
CVTRSPIE EQU   CVTS01+304
CVTRENQ  EQU   CVTS01+300
CVTLQCB  EQU   CVTS01+296
CVTFQCB  EQU   CVTS01+292
CVTQCS01 EQU   CVTS01+288
CVTAPFT  EQU   CVTS01+284
CVTPARRL EQU   CVTS01+280
CVTVWAIT EQU   CVTS01+276
CVTGSPL  EQU   CVTS01+272
CVTLSMQ  EQU   CVTS01+268
CVTGSMQ  EQU   CVTS01+264
CVTEXPRO EQU   CVTS01+260
CVTOPCTP EQU   CVTS01+256
CVTSIC   EQU   CVTS01+252
CVTTPIOS EQU   CVTS01+248
CVTRTMS  EQU   CVTS01+244
CVTSDBF  EQU   CVTS01+240
CVTSCBP  EQU   CVTS01+236
CVTSDMP  EQU   CVTS01+232
CVTSV60  EQU   CVTS01+228
CVTRTMCT EQU   CVTS01+224
CVTASCBL EQU   CVTS01+220
CVTASCBH EQU   CVTS01+216
CVTGDA   EQU   CVTS01+212
CVTVVMDI EQU   CVTS01+204
CVTAQTOP EQU   CVTS01+200
CVTIOSCS EQU   CVTS01+196
CVTSDRM  EQU   CVTS01+192
CVTOPTE  EQU   CVTS01+188
CVTSTXU  EQU   CVTS01+184
CVTQUIS  EQU   CVTS01+180
CVTPARS  EQU   CVTS01+176
CVTS1EE  EQU   CVTS01+172
CVTFRAS  EQU   CVTS01+168
CVTQSAS  EQU   CVTS01+164
CVTCRAS  EQU   CVTS01+160
CVTCRMN  EQU   CVTS01+156
CVTDELCP EQU   CVTS01+152
CVTFRECL EQU   CVTS01+148
CVTGETCL EQU   CVTS01+144
CVTBLDCP EQU   CVTS01+140
CVTAUTHL EQU   CVTS01+136
CVTSCAN  EQU   CVTS01+132
CVTRV144 EQU   CVTS01+130
CVTMAXMP EQU   CVTS01+128
CVTSTCK  EQU   CVTS01+124
CVTRV139 EQU   CVTS01+123
CVTDSSAC EQU   CVTS01+122
CVTRV513 EQU   CVTS01+121
CVTIOSPL EQU   CVTS01+120
CVTPTGT  EQU   CVTS01+116
CVTCSPIE EQU   CVTS01+112
CVTSMFEX EQU   CVTS01+108
CVTOLT0A EQU   CVTS01+104
CVTSRBRT EQU   CVTS01+100
CVTPUTL  EQU   CVTS01+96
CVTASCRL EQU   CVTS01+92
CVTASCRF EQU   CVTS01+88
CVTRV326 EQU   CVTS01+84
CVTRV325 EQU   CVTS01+80
CVTRV324 EQU   CVTS01+76
CVT0VL01 EQU   CVTS01+72
CVTSHRVM EQU   CVTS01+68
CVTRV332 EQU   CVTS01+64
CVTTAS   EQU   CVTS01+60
CVTRSCN  EQU   CVTS01+56
CVTTRAC2 EQU   CVTS01+54
CVTTRACE EQU   CVTS01+52
CVTAPG   EQU   CVTS01+51
CVTSDTRC EQU   CVTCTLFG
CVTGTRCE EQU   CVTCTLFG
CVTNOMP  EQU   CVTCTLFG
CVTRSV79 EQU   CVTCTLFG
CVTDSTAT EQU   CVTCTLFG
CVTRSV78 EQU   CVTCTLFG
CVTRV333 EQU   CVTCTLFG
CVTRV323 EQU   CVTCTLFG
CVTSPVLK EQU   CVTS01+49
CVTRSV77 EQU   CVTS01+48
CVTRV331 EQU   CVTS01+44
CVTRV330 EQU   CVTS01+40
CVTRV329 EQU   CVTS01+36
CVTRV328 EQU   CVTS01+32
CVTRV322 EQU   CVTS01+28
CVTSLID  EQU   CVTSLIDA+1
CVTSYLK  EQU   CVTSLIDA
CVTRV321 EQU   CVTS01+20
CVTRV320 EQU   CVTS01+16
CVTLPDIR EQU   CVTLPDIA+1
CVTRSV69 EQU   CVTDIRST
CVTRSV68 EQU   CVTDIRST
CVTRSV67 EQU   CVTDIRST
CVTRSV66 EQU   CVTDIRST
CVTRSV65 EQU   CVTDIRST
CVTRSV64 EQU   CVTDIRST
CVTRSV63 EQU   CVTDIRST
CVTDICOM EQU   CVTDIRST
CVTPVTP  EQU   CVTS01+8
CVTLPDSR EQU   CVTS01+4
CVTGETL  EQU   CVTS01
CVTLEVL  EQU   CVTRELNO+2
CVTNUMB  EQU   CVTRELNO
CVTMDL   EQU   CVTFIX+250
@NM00007 EQU   CVTFIX+248
@NM00006 EQU   CVTFIX
CVTRV482 EQU   CVTXTNT2+128
CVTRV481 EQU   CVTXTNT2+124
CVTRV480 EQU   CVTXTNT2+120
CVTRV479 EQU   CVTXTNT2+118
CVTRV478 EQU   CVTXTNT2+117
CVTRV477 EQU   CVTXTNT2+116
CVTRV476 EQU   CVTXTNT2+115
CVTRV475 EQU   CVTXTNT2+114
CVTRV474 EQU   CVTRV466
CVTRV473 EQU   CVTRV466
CVTRV472 EQU   CVTRV466
CVTRV471 EQU   CVTRV466
CVTRV470 EQU   CVTRV466
CVTRV469 EQU   CVTRV466
CVTRV468 EQU   CVTRV466
CVTRV467 EQU   CVTRV466
CVTRV465 EQU   CVTRV457
CVTRV464 EQU   CVTRV457
CVTRV463 EQU   CVTRV457
CVTRV462 EQU   CVTRV457
CVTRV461 EQU   CVTRV457
CVTRV460 EQU   CVTRV457
CVTRV459 EQU   CVTRV457
CVTRV458 EQU   CVTRV457
CVTRV456 EQU   CVTXTNT2+108
CVTRV455 EQU   CVTXTNT2+104
CVTRV454 EQU   CVTXTNT2+100
CVTRV453 EQU   CVTXTNT2+96
CVTRV452 EQU   CVTXTNT2+94
CVTRV451 EQU   CVTXTNT2+92
CVTRV450 EQU   CVTXTNT2+90
CVTRV449 EQU   CVTXTNT2+88
CVTRV448 EQU   CVTXTNT2+87
CVTRV447 EQU   CVTXTNT2+86
CVTRV446 EQU   CVTRV438
CVTRV445 EQU   CVTRV438
CVTRV444 EQU   CVTRV438
CVTRV443 EQU   CVTRV438
CVTRV442 EQU   CVTRV438
CVTRV441 EQU   CVTRV438
CVTRV440 EQU   CVTRV438
CVTRV439 EQU   CVTRV438
CVTRV437 EQU   CVTRV429
CVTRV436 EQU   CVTRV429
CVTRV435 EQU   CVTRV429
CVTRV434 EQU   CVTRV429
CVTRV433 EQU   CVTRV429
CVTRV432 EQU   CVTRV429
CVTRV431 EQU   CVTRV429
CVTRV430 EQU   CVTRV429
CVTRV428 EQU   CVTXTNT2+80
CVTRV427 EQU   CVTXTNT2+76
CVTRV426 EQU   CVTXTNT2+72
CVTRV425 EQU   CVTXTNT2+68
CVTATACT EQU   CVTATCVT
CVTRV423 EQU   CVTXTNT2+62
CVTRV422 EQU   CVTXTNT2+60
CVTRV421 EQU   CVTXTNT2+58
CVTRV420 EQU   CVTXTNT2+56
CVTRV419 EQU   CVTXTNT2+55
CVTRV418 EQU   CVTXTNT2+54
CVTRV417 EQU   CVTRV409
CVTRV416 EQU   CVTRV409
CVTRV415 EQU   CVTRV409
CVTRV414 EQU   CVTRV409
CVTRV413 EQU   CVTRV409
CVTRV412 EQU   CVTRV409
CVTRV411 EQU   CVTRV409
CVTRV410 EQU   CVTRV409
CVTRV408 EQU   CVTRV400
CVTRV407 EQU   CVTRV400
CVTRV406 EQU   CVTRV400
CVTRV405 EQU   CVTRV400
CVTRV404 EQU   CVTRV400
CVTRV403 EQU   CVTRV400
CVTRV402 EQU   CVTRV400
CVTRV401 EQU   CVTRV400
CVTICB   EQU   CVTXTNT2+48
CVTSKTA  EQU   CVTXTNT2+44
CVTCCVT  EQU   CVTXTNT2+40
CVTRSV98 EQU   CVTXTNT2+36
CVTRSV97 EQU   CVTXTNT2+34
CVTRSV96 EQU   CVTXTNT2+32
CVTOLTEP EQU   CVTXTNT2+28
CVTQIDA  EQU   CVTQID+1
CVTRSV95 EQU   CVTQID
CVTRSV94 EQU   CVTXTNT2+20
CVTRSV93 EQU   CVTXTNT2+16
CVTRSV92 EQU   CVTXTNT2+12
CVTDEBVR EQU   CVTXTNT2+8
CVTRSV91 EQU   CVTXTNT2+6
CVTRSV9H EQU   CVTFLGBT
CVTRSV9G EQU   CVTFLGBT
CVTRSV9F EQU   CVTFLGBT
CVTRSV9E EQU   CVTFLGBT
CVTRSV9D EQU   CVTFLGBT
CVTRSV9C EQU   CVTFLGBT
CVTVME   EQU   CVTFLGBT
CVTNPE   EQU   CVTFLGBT
CVTNUCLS EQU   CVTXTNT2+4
CVTDSSVA EQU   CVTDSSV+1
CVTRSV89 EQU   CVTDSSV
CVTRSV88 EQU   CVTXTNT1+8
CVTRSV87 EQU   CVTXTNT1+4
CVTFACHN EQU   CVTXTNT1
CVTRV488 EQU   CVTMAP+412
CVTRV487 EQU   CVTMAP+408
CVTRV486 EQU   CVTMAP+404
CVTRV485 EQU   CVTMAP+400
CVTACTAP EQU   CVTMAP+396
CVTAUTH  EQU   CVTMAP+392
CVTATMCA EQU   CVTATMCT+1
CVTATMST EQU   CVTATMCT
CVTRSV61 EQU   CVTMAP+384
CVTVOLT1 EQU   CVTVOLM1+1
CVTVOLI1 EQU   CVTVOLF1
CVTSTOA  EQU   CVTMAP+376
CVTRSV58 EQU   CVTMAP+374
CVTRSV57 EQU   CVTMAP+372
CVTDDCE  EQU   CVTMAP+368
CVTPNWFR EQU   CVTMAP+364
CVTSMF   EQU   CVTMAP+360
CVTSULK  EQU   CVTMAP+358
CVTSLKO  EQU   CVTSYSK
CVTSLKP  EQU   CVTSYSK
CVTSLKQ  EQU   CVTSYSK
CVTSLKR  EQU   CVTSYSK
CVTRSV56 EQU   CVTSYSK
CVTRSV55 EQU   CVTSYSK
CVTRSV54 EQU   CVTSYSK
CVTRSV53 EQU   CVTSYSK
CVTRSV52 EQU   CVTA1F1
CVTRSV51 EQU   CVTA1F1
CVTRSV50 EQU   CVTA1F1
CVTRSV49 EQU   CVTA1F1
CVTRSV48 EQU   CVTA1F1
CVTRSV47 EQU   CVTA1F1
CVTSRSW  EQU   CVTA1F1
CVTPFSW  EQU   CVTA1F1
CVTPCVT  EQU   CVTMAP+352
CVTRSV46 EQU   CVTMAP+344
CVTRSV45 EQU   CVTMAP+340
CVTRSV44 EQU   CVTMAP+338
CVTRSV43 EQU   CVTMAP+336
CVTHJESA EQU   CVTHJES+1
CVTRSV42 EQU   CVTHJES
CVTEXT2A EQU   CVTEXT2+1
CVTRSV41 EQU   CVTEXT2
CVTAPFA  EQU   CVTAPF+1
CVTRSV40 EQU   CVTAPF
CVTRV518 EQU   CVTINTLA
CVTRV517 EQU   CVTERPV
CVTEORM  EQU   CVTMAP+312
CVTMCHPR EQU   CVTMAP+308
CVTTZ    EQU   CVTMAP+304
CVTJEPS  EQU   CVTMAP+300
CVTJESCT EQU   CVTMAP+296
CVTMODE  EQU   CVTMAP+292
CVTPTRV  EQU   CVTMAP+288
CVTREAL  EQU   CVTMAP+284
CVTRSV39 EQU   CVTMAP+280
CVTRSV38 EQU   CVTMAP+276
CVTDMSRA EQU   CVTDMSR+1
CVTRV634 EQU   CVTDMSRF
CVTRV633 EQU   CVTDMSRF
CVTRV632 EQU   CVTDMSRF
CVTRV631 EQU   CVTDMSRF
CVTRV630 EQU   CVTDMSRF
CVTRV629 EQU   CVTDMSRF
CVTUDUMP EQU   CVTDMSRF
CVTSDUMP EQU   CVTDMSRF
CVTQMSGA EQU   CVTQMSG+1
CVTRSV36 EQU   CVTQMSG
CVTAMFF  EQU   CVTMAP+264
CVTPURGA EQU   CVTPURG+1
CVTRSV35 EQU   CVTPURG
CVTCBSP  EQU   CVTMAP+256
CVTATERA EQU   CVTATER+1
CVTSYST  EQU   CVTATER
CVTVOLT2 EQU   CVTTAT
CVTVOLI2 EQU   CVTVOLF2
CVTAQAVB EQU   CVTAQAVT+1
CVTRSV34 EQU   CVTTCMFG
CVTRSV33 EQU   CVTTCMFG
CVTRSV32 EQU   CVTTCMFG
CVTRSV31 EQU   CVTTCMFG
CVTRSV30 EQU   CVTTCMFG
CVTRSV29 EQU   CVTTCMFG
CVTLDEV  EQU   CVTTCMFG
CVTTCRDY EQU   CVTTCMFG
CVTGTFA  EQU   CVTGTF+1
CVTRSV27 EQU   CVTGTFST
CVTRNIO  EQU   CVTGTFST
CVTUSR   EQU   CVTGTFST
CVTRV318 EQU   CVTFORM
CVTRV317 EQU   CVTTMODE
CVTRV316 EQU   CVTSTATE
CVTRV315 EQU   CVTGTFS
CVTGTFAV EQU   CVTGTFS
CVT0SCR1 EQU   CVTMAP+232
CVTRV515 EQU   CVTMAP+228
CVTRMS   EQU   CVTMAP+224
CVTPATCH EQU   CVTMAP+220
CVTTSCE  EQU   CVTMAP+216
CVTLNKSC EQU   CVTMAP+214
CVTQABST EQU   CVTMAP+212
CVTMDLDS EQU   CVTMAP+208
CVTUSER  EQU   CVTMAP+204
CVTABEND EQU   CVTMAP+200
CVTSMCA  EQU   CVTMAP+196
CVTRSV18 EQU   CVTMAP+192
CVTQLPAQ EQU   CVTMAP+188
CVTQCDSR EQU   CVTMAP+184
CVTRSV17 EQU   CVTOPTB
CVTRSV16 EQU   CVTOPTB
CVTFP    EQU   CVTOPTB
CVTAPTHR EQU   CVTOPTB
CVTNLOG  EQU   CVTOPTB
CVTTOD   EQU   CVTOPTB
CVTCTIMS EQU   CVTOPTB
CVTPROT  EQU   CVTOPTB
CVTXPFP  EQU   CVTOPTA
CVTASCII EQU   CVTOPTA
CVTRSV13 EQU   CVTOPTA
CVTRSV12 EQU   CVTOPTA
CVTNIP   EQU   CVTOPTA
CVTDDR   EQU   CVTOPTA
CVTAPR   EQU   CVTOPTA
CVTCCH   EQU   CVTOPTA
CVTSNCTR EQU   CVTMAP+180
CVTQMWR  EQU   CVTMAP+176
CVTQOCR  EQU   CVTMAP+172
CVT1EF00 EQU   CVTMAP+168
CVTMZ00  EQU   CVTMAP+164
CVTSV76Q EQU   CVTSV76C
CVTRSV11 EQU   CVTMAP+156
CVT0PT01 EQU   CVTMAP+152
CVTMSER  EQU   CVTMAP+148
CVTRV516 EQU   CVTIERLC
CVTILCH  EQU   CVTMAP+140
CVT0DS   EQU   CVTMAP+136
CVTFBOSV EQU   CVTMAP+132
CVTNUCB  EQU   CVTMAP+128
CVTIXAVL EQU   CVTMAP+124
CVTSV76M EQU   CVTIOQET
CVTDCBA  EQU   CVTMAP+117
CVTMVS2  EQU   CVTDCB
CVT6DAT  EQU   CVTDCB
CVT4MPS  EQU   CVTDCB
CVTRSV09 EQU   CVTDCB
CVT4MS1  EQU   CVTDCB
CVT2SPS  EQU   CVTDCB
CVT1SSS  EQU   CVTDCB
CVTRSV08 EQU   CVTDCB
CVTSTB   EQU   CVTMAP+112
CVTQTD00 EQU   CVTMAP+108
CVTQTE00 EQU   CVTMAP+104
CVTCUCB  EQU   CVTMAP+100
CVTSJQ   EQU   CVTMAP+96
CVTPBLDL EQU   CVTMAP+92
CVTTPC   EQU   CVTMAP+88
CVTSVDCB EQU   CVTMAP+84
CVTBRET  EQU   CVTMAP+82
CVTEXIT  EQU   CVTMAP+80
CVT0FN00 EQU   CVTMAP+76
CVTDARA  EQU   CVTDAR+1
CVTRSV07 EQU   CVTFLGS1
CVTRSV06 EQU   CVTFLGS1
CVTRSV05 EQU   CVTFLGS1
CVTRSV04 EQU   CVTFLGS1
CVTRSV03 EQU   CVTFLGS1
CVTRSV02 EQU   CVTFLGS1
CVTRSV01 EQU   CVTFLGS1
CVTDMPLK EQU   CVTFLGS1
CVTXITP  EQU   CVTMAP+68
CVTZDTAB EQU   CVTMAP+64
CVTMSLT  EQU   CVTMAP+60
CVTDATE  EQU   CVTMAP+56
CVTBTERM EQU   CVTMAP+52
CVTSYSAD EQU   CVTMAP+48
CVTXTLER EQU   CVTMAP+44
CVTILK2  EQU   CVTMAP+40
CVTILK1  EQU   CVTMAP+36
CVTPRLTV EQU   CVTMAP+32
CVTPCNVT EQU   CVTMAP+28
CVT0VL00 EQU   CVTMAP+24
CVTXAPG  EQU   CVTMAP+20
CVTBUF   EQU   CVTMAP+16
CVTJOB   EQU   CVTMAP+12
CVTLINK  EQU   CVTMAP+8
CVT0EF00 EQU   CVTMAP+4
CVTTCBP  EQU   CVTMAP
CVT      EQU   CVTMAP
WPOSEND  EQU   WPOD+8
WPOSWKL  EQU   WPOS+2
WPODEND  EQU   WPOD+4
WPOPWKL  EQU   WPOP+2
WPGLEND  EQU   WPGL+4
WPGLDUR  EQU   WPGLISV
WPGPEND  EQU   WPGP+8
WPGPDURP EQU   WPGP+7
WPGPISVP EQU   WPGP+6
WPGPRTB  EQU   WPGPINDS
WPGPRB2  EQU   WPGPINDS
WPGPAPG  EQU   WPGPINDS
WPGPUNT  EQU   WPGPINDS
WPGPAPGV EQU   WPGP+4
@NM00005 EQU   WPGP+2
WPGDEND  EQU   WPGD+20
WPGDPGL  EQU   WPGD+20
WPGDDURP EQU   WPGDPGP+7
WPGDISVP EQU   WPGDPGP+6
WPGDRTB  EQU   WPGDINDS
WPGDRB2  EQU   WPGDINDS
WPGDAPG  EQU   WPGDINDS
WPGDUNT  EQU   WPGDINDS
WPGDFIN  EQU   WPGDINDS
WPGDAPGV EQU   WPGDPGP+4
@NM00004 EQU   WPGDPGP+2
WPGDDMN  EQU   WPGDPGP+1
WPGDOBJN EQU   WPGDPGP
WPGDISV  EQU   WPGD+8
WPGDATM  EQU   WPGD+4
WPGDRD1  EQU   WPGDDFL
WPGDVLD  EQU   WPGDDFL
WPGDR02  EQU   WPGD+2
WPGDSIZ  EQU   WPGD+1
WMSTEND  EQU   WMST+112
WMSTSECB EQU   WMST+96
WMSTNWST EQU   WMST+92
WMSTSTCB EQU   WMST+88
WMSTSET  EQU   WMST+84
WMSTRSVD EQU   WMST+81
WMSTREAL EQU   WMST+80
WMSTMSO  EQU   WMST+76
WMSTIOC  EQU   WMST+72
WMSTCPU  EQU   WMST+68
WMSTDMNC EQU   WMST+66
WMSTWLHI EQU   WMST+60
WMSTDMDE EQU   WMST+56
WMSTDMVS EQU   WMST+52
WMSTDMVT EQU   WMST+48
WMSTDMDS EQU   WMST+44
WMSTDMDT EQU   WMST+40
WMSTPODS EQU   WMST+36
WMSTPOVS EQU   WMST+28
WMSTPGDS EQU   WMST+20
WMSTPGVS EQU   WMST+12
WMSTWLLO EQU   WMST+6
WMSTNAME EQU   WMST
WAMPEND  EQU   WAMP+44
WAMPRSV  EQU   WAMPPGP+42
WAMTEND  EQU   WAMT+64
WAMTR90  EQU   WAMT+60
WAMTWAR  EQU   WAMT
ASVTEND  EQU   ASVT+528
ASVTAVAI EQU   ASVTFRST
ASVTRS00 EQU   ASVT+520
ASVTASVT EQU   ASVT+512
ASVTBEGN EQU   ASVT+512
@NM00003 EQU   ASVT
OUXBEND  EQU   OUXB+144
OUXBTSW  EQU   OUXB+140
OUXBFIXC EQU   OUXB+138
OUXBNVC  EQU   OUXB+136
OUXBUIC  EQU   OUXB+134
OUXBVSC  EQU   OUXB+132
OUXBILS  EQU   OUXB+128
OUXBRSV1 EQU   OUXB+126
OUXBWCT  EQU   OUXB+124
OUXBPRS  EQU   OUXB+120
OUXBSTD  EQU   OUXB+116
OUXBITD  EQU   OUXB+112
OUXBMSS  EQU   OUXB+104
OUXBCPS  EQU   OUXB+96
OUXBAET  EQU   OUXB+92
OUXBTRR  EQU   OUXB+88
OUXBJBR  EQU   OUXB+84
OUXBTRT  EQU   OUXB+80
OUXBTRS  EQU   OUXB+76
OUXBJBT  EQU   OUXB+72
OUXBJBS  EQU   OUXB+68
OUXBTRC  EQU   OUXB+64
OUXBNQT  EQU   OUXB+60
OUXBIOSM EQU   OUXB+56
OUXBSTC  EQU   OUXB+54
OUXBIOS  EQU   OUXB+52
OUXBSTCT EQU   OUXB+48
OUXBCAPR EQU   OUXB+44
OUXBCAPI EQU   OUXB+40
OUXBVAMR EQU   OUXB+36
OUXBVAMO EQU   OUXB+32
OUXBVAMI EQU   OUXB+28
OUXBPREC EQU   OUXB+24
OUXBPOUT EQU   OUXB+20
OUXBPIN  EQU   OUXB+16
OUXBRSW  EQU   OUXB+12
OUXBMET  EQU   OUXB+8
OUXBPET  EQU   OUXB+4
OUXBNAME EQU   OUXB
OUCBEND  EQU   OUCB+136
OUCBNTSP EQU   OUCB+134
OUCBNDS  EQU   OUCB+132
OUCBTIO  EQU   OUCB+128
OUCBTCP  EQU   OUCB+124
OUCBPST  EQU   OUCB+120
OUCBPS2  EQU   OUCBPSS+4
OUCBPS1  EQU   OUCBPSS
OUCBIOSM EQU   OUCB+108
OUCBTMP  EQU   OUCB+104
OUCBR03  EQU   OUCB+102
OUCBIOR  EQU   OUCB+100
OUCBCRV  EQU   OUCB+98
OUCBIRV  EQU   OUCB+96
OUCBWMR  EQU   OUCB+92
OUCBCMRV EQU   OUCB+88
OUCBCF2  EQU   OUCBCFL
OUCBRSM  EQU   OUCBCFL
OUCBACN  EQU   OUCBCSW
OUCBACT  EQU   OUCB+80
OUCBWSS  EQU   OUCB+78
OUCBPSO  EQU   OUCB+76
OUCBTMW  EQU   OUCB+48
OUCBIMCB EQU   OUCB+44
OUCBASCB EQU   OUCB+40
OUCBSWC  EQU   OUCB+38
OUCBSRC  EQU   OUCB+37
OUCBDMN  EQU   OUCB+36
OUCBDMO  EQU   OUCB+34
OUCBR40  EQU   OUCB+30
OUCBR30  EQU   OUCB+29
OUCBSPG  EQU   OUCB+28
OUCBRDP  EQU   OUCB+27
OUCBNDP  EQU   OUCB+26
OUCBRPG  EQU   OUCB+25
OUCBNPG  EQU   OUCB+24
OUCBUF7  EQU   OUCBUFL
OUCBUF6  EQU   OUCBUFL
OUCBUF5  EQU   OUCBUFL
OUCBTSWC EQU   OUCBUFL
OUCBTSWP EQU   OUCBUFL
OUCBRSWP EQU   OUCBUFL
OUCBJSAS EQU   OUCBUFL
OUCBJSFS EQU   OUCBUFL
OUCBNQC  EQU   OUCB+22
OUCBMWT  EQU   OUCBEFL
OUCBQSC  EQU   OUCBEFL
OUCBQSS  EQU   OUCBEFL
OUCBNQF  EQU   OUCBEFL
OUCBCIM  EQU   OUCBEFL
OUCBOWT  EQU   OUCBEFL
OUCBTRM  EQU   OUCBEFL
OUCBLWT  EQU   OUCBEFL
OUCBINP  EQU   OUCBTFL
OUCBPCH  EQU   OUCBTFL
OUCBRTR  EQU   OUCBTFL
OUCBSTR  EQU   OUCBTFL
OUCBASW  EQU   OUCBAFL
OUCBNWT  EQU   OUCBAFL
OUCBR02  EQU   OUCBAFL
OUCBJSR  EQU   OUCBAFL
OUCBCPL  EQU   OUCBAFL
OUCBRMA  EQU   OUCBAFL
OUCBAPG  EQU   OUCBAFL
OUCBAF0  EQU   OUCBAFL
OUCBFXS  EQU   OUCBYFL
OUCBDTA  EQU   OUCBYFL
OUCBAXS  EQU   OUCBYFL
OUCBPSTR EQU   OUCBYFL
OUCBMNT  EQU   OUCBYFL
OUCBLOG  EQU   OUCBYFL
OUCBSTT  EQU   OUCBYFL
OUCBPSTE EQU   OUCBYFL
OUCBSCN  EQU   OUCBSFL
OUCBENQ  EQU   OUCBSFL
OUCBPVL  EQU   OUCBSFL
OUCBNSWI EQU   OUCBSFL
OUCBBIB  EQU   OUCBSFL
OUCBCTI  EQU   OUCBSFL
OUCBNSW  EQU   OUCBSFL
OUCBQF7  EQU   OUCBQFL
OUCBQF6  EQU   OUCBQFL
OUCBOFF  EQU   OUCBQFL
OUCBQF3  EQU   OUCBQFL
OUCBGOB  EQU   OUCBQFL
OUCBGOI  EQU   OUCBQFL
OUCBGOO  EQU   OUCBQFL
OUCBTMA  EQU   OUCB+12
OUCBBCK  EQU   OUCB+8
OUCBFWD  EQU   OUCB+4
ASCBEND  EQU   ASCB+208
ASCBSRBT EQU   ASCB+200
ASCBSWTL EQU   ASCB+196
ASCBRS14 EQU   ASCB+195
ASCBSMCT EQU   ASCB+194
ASCBRS12 EQU   ASCB+192
ASCBPCTT EQU   ASCB+188
ASCBVGTT EQU   ASCB+184
ASCBRV43 EQU   ASCBSRQ4
ASCBRV42 EQU   ASCBSRQ4
ASCBRV41 EQU   ASCBSRQ4
ASCBRV40 EQU   ASCBSRQ4
ASCBRV39 EQU   ASCBSRQ4
ASCBRV38 EQU   ASCBSRQ4
ASCBRV37 EQU   ASCBSRQ4
ASCBRV36 EQU   ASCBSRQ4
ASCBRV35 EQU   ASCBSRQ3
ASCBRV34 EQU   ASCBSRQ3
ASCBRV33 EQU   ASCBSRQ3
ASCBRV32 EQU   ASCBSRQ3
ASCBRV31 EQU   ASCBSRQ3
ASCBRV30 EQU   ASCBSRQ3
ASCBRV29 EQU   ASCBSRQ3
ASCBRV28 EQU   ASCBSRQ3
ASCBRV27 EQU   ASCBSRQ2
ASCBRV26 EQU   ASCBSRQ2
ASCBRV25 EQU   ASCBSRQ2
ASCBRV24 EQU   ASCBSRQ2
ASCBRV23 EQU   ASCBSRQ2
ASCBRV22 EQU   ASCBSRQ2
ASCBRV21 EQU   ASCBSRQ2
ASCBRV20 EQU   ASCBSRQ2
ASCBRV19 EQU   ASCBSRQ1
ASCBRV18 EQU   ASCBSRQ1
ASCBRV17 EQU   ASCBSRQ1
ASCBRV16 EQU   ASCBSRQ1
ASCBRV15 EQU   ASCBSRQ1
ASCBRV14 EQU   ASCBSRQ1
ASCBRV13 EQU   ASCBSRQ1
ASCBSTA  EQU   ASCBSRQ1
ASCBJBNS EQU   ASCB+176
ASCBJBNI EQU   ASCB+172
ASCBMCC  EQU   ASCB+168
ASCBRTWA EQU   ASCB+164
ASCBIQEA EQU   ASCB+160
ASCBXMPQ EQU   ASCB+156
ASCBRS01 EQU   ASCB+154
ASCBFMCT EQU   ASCB+152
ASCBOUXB EQU   ASCB+148
ASCBMECB EQU   ASCB+140
ASCBQECB EQU   ASCB+136
ASCBLSQH EQU   ASCBLKGP+4
ASCBLOCK EQU   ASCBLKGP
ASCBTCBS EQU   ASCB+124
ASCBNVSC EQU   ASCB+122
ASCBVSC  EQU   ASCB+120
ASCBSRBS EQU   ASCB+118
ASCBSSRB EQU   ASCB+116
ASCBRV06 EQU   ASCBFLG2
ASCBRV05 EQU   ASCBFLG2
ASCBRV04 EQU   ASCBFLG2
ASCBSNQS EQU   ASCBFLG2
ASCBS2S  EQU   ASCBFLG2
ASCBCEXT EQU   ASCBFLG2
ASCBPXMT EQU   ASCBFLG2
ASCBXMPT EQU   ASCBFLG2
ASCBRF07 EQU   ASCBDSP1
ASCBRF06 EQU   ASCBDSP1
ASCBRF05 EQU   ASCBDSP1
ASCBRF04 EQU   ASCBDSP1
ASCBRF03 EQU   ASCBDSP1
ASCBRF02 EQU   ASCBDSP1
ASCBFAIL EQU   ASCBDSP1
ASCBNOQ  EQU   ASCBDSP1
ASCBSWCT EQU   ASCB+112
ASCBASXB EQU   ASCB+108
ASCBTMCH EQU   ASCB+104
ASCBNSWP EQU   ASCBFLG1
ASCBTYP1 EQU   ASCBFLG1
ASCBSTND EQU   ASCBFLG1
ASCBABNT EQU   ASCBFLG1
ASCBTERM EQU   ASCBFLG1
ASCBS3S  EQU   ASCBFLG1
ASCBCMSH EQU   ASCBFLG1
ASCBTOFF EQU   ASCBFLG1
ASCBRF01 EQU   ASCBRCTF
ASCBTMLW EQU   ASCBRCTF
ASCBOUT  EQU   ASCBRCTF
ASCBWAIT EQU   ASCBRCTF
ASCBRV08 EQU   ASCBRCTF
ASCBFQU  EQU   ASCBRCTF
ASCBFRS  EQU   ASCBRCTF
ASCBTMNO EQU   ASCBRCTF
ASCBAFFN EQU   ASCBFW1
ASCBDUMP EQU   ASCB+96
ASCBRV44 EQU   ASCB+92
ASCBUBET EQU   ASCB+88
ASCBECB  EQU   ASCB+84
ASCBJSTL EQU   ASCB+80
ASCBEWST EQU   ASCB+72
ASCBEJST EQU   ASCB+64
ASCBTSB  EQU   ASCB+60
ASCBCSCB EQU   ASCB+56
ASCBRSMA EQU   ASCBRSM+1
ASCBRV54 EQU   ASCBRSMF
ASCBRV53 EQU   ASCBRSMF
ASCBRV52 EQU   ASCBRSMF
ASCBRV51 EQU   ASCBRSMF
ASCBVEQR EQU   ASCBRSMF
ASCBN2LP EQU   ASCBRSMF
ASCB1LPU EQU   ASCBRSMF
ASCB2LPU EQU   ASCBRSMF
ASCBLDA  EQU   ASCB+48
ASCBSTOR EQU   ASCB+44
ASCBDP   EQU   ASCB+43
ASCBRV07 EQU   ASCB+42
ASCBIOSM EQU   ASCB+40
ASCBSEQN EQU   ASCB+38
ASCBASID EQU   ASCB+36
ASCBCPUS EQU   ASCB+32
ASCBSPL  EQU   ASCB+28
ASCBIOSP EQU   ASCB+24
ASCBSYNC EQU   ASCBSUPC+4
ASCBSVRB EQU   ASCBSUPC
ASCBCMSF EQU   ASCB+12
ASCBBWDP EQU   ASCB+8
ASCBFWDP EQU   ASCB+4
ASCBASCB EQU   ASCB
ASCBEGIN EQU   ASCB
RRPAEND  EQU   RRPA+24
RRPAEPA  EQU   RRPA+20
RRPARTN  EQU   RRPAINS
RRPAKEY  EQU   RRPA+10
RRPARCI  EQU   RRPAFLG+1
RRPARFI  EQU   RRPAFLG+1
RRPARTI  EQU   RRPAFLG+1
RRPACTL  EQU   RRPAFLG+1
RRPAF11  EQU   RRPAFLG+1
RRPAIPS  EQU   RRPAFLG+1
RRPAWAR  EQU   RRPAFLG+1
RRPAF07  EQU   RRPAFLG
RRPAOPT  EQU   RRPAFLG
RRPAF05  EQU   RRPAFLG
RRPAF04  EQU   RRPAFLG
RRPADSP  EQU   RRPAFLG
RRPASVC  EQU   RRPAFLG
RRPAENB  EQU   RRPAFLG
RRPADSB  EQU   RRPAFLG
RRPAVLU  EQU   RRPAINP
@NM00002 EQU   RRPAFLG0
RRPANSWI EQU   RRPAFLG0
EPSTEND  EQU   EPST+80
EPSTCSI  EQU   RMEPBCSI
EPSTCSO  EQU   RMEPBCSO
EPSTCL3  EQU   RMEPBCL3
EPSTIL3  EQU   RMEPBIL3
EPSTWM3  EQU   RMEPBWM3
EPDTEND  EQU   EPDT+96
RMEPBRPS EQU   EPDT+80
RMEPBHIT EQU   EPDT+64
RMEPBUXB EQU   EPDT+48
RMEPBIL4 EQU   EPDT+32
RMEPBDEL EQU   EPDT+16
RMEPBIPS EQU   EPDT
EPATEND  EQU   EPAT+400
RMEPBPR1 EQU   EPAT+368
RMEPBEQ1 EQU   EPAT+336
RMEPBAP1 EQU   EPAT+304
RMEPBCL1 EQU   EPAT+272
RMEPBWM2 EQU   EPAT+240
RMEPBIL1 EQU   EPAT+208
RMEPBASM EQU   EPAT+176
RMEPBMS2 EQU   EPAT+160
RMEPBPR5 EQU   EPAT+144
RMEPBMS6 EQU   EPAT+112
RMEPBSQA EQU   EPAT+96
RMEPBRM2 EQU   EPAT+64
RMEPBRM1 EQU   EPAT+32
RMEPBCAP EQU   EPAT
RMSBEND  EQU   RMSB+120
RMSBRA9  EQU   RMSB+116
RMSBIL0  EQU   RMSB+112
RMSBCL0  EQU   RMSB+108
RMSBRA6  EQU   RMSB+104
RMSBNOP  EQU   RMSB+100
RMSBSET  EQU   RMSB+96
RMSBTRC  EQU   RMSB+84
RMSBWMY  EQU   RMSB+80
RMSBWMR  EQU   RMSB+76
RMSBWMQ  EQU   RMSB+72
RMSBWMO  EQU   RMSB+68
RMSBWMN  EQU   RMSB+64
RMSBWMK  EQU   RMSB+60
RMSBWM5  EQU   RMSB+48
RMSBCRY  EQU   RMSB+44
RMSBCRN  EQU   RMSB+40
RMSBCRL  EQU   RMSB+36
RMSBI10  EQU   RMSB+32
RMSBI09  EQU   RMSB+28
RMSBR24  EQU   RMSB+24
RMSBI07  EQU   RMSB+20
RMSBI06  EQU   RMSB+16
RMSBI05  EQU   RMSB+12
RMSBI04  EQU   RMSB+8
RMSBI03  EQU   RMSB+4
RMSBI02  EQU   RMSB
RMEXEND  EQU   RMEX+64
RMEXSRE  EQU   RMEX+60
RMEXXPE  EQU   RMEX+56
RMEXRR2  EQU   RMEX+52
RMEXRR1  EQU   RMEX+48
RMEXI48  EQU   RMEX+44
RMEXCET  EQU   RMEX+40
RMEXCXX  EQU   RMEX+36
RMEXI01  EQU   RMEX+32
RMEXCTL  EQU   RMEPBCTL
RMEXEVT  EQU   RMEPBEVT
RMCAEND  EQU   RMCA+168
RMCAR90  EQU   RMCA+164
RMCAUSSC EQU   RMCASRC+36
RMCAEXSC EQU   RMCASRC+32
RMCANQSC EQU   RMCASRC+28
RMCARQSC EQU   RMCASRC+24
RMCADWSC EQU   RMCASRC+20
RMCARSSC EQU   RMCASRC+16
RMCAXSSC EQU   RMCASRC+12
RMCALWSC EQU   RMCASRC+8
RMCATISC EQU   RMCASRC+4
RMCATOSC EQU   RMCASRC
RMCACPW1 EQU   RMCA+120
RMCACIUS EQU   RMCA+118
RMCAR14  EQU   RMCA+116
RMCAR13  EQU   RMCA+112
RMCAMAS  EQU   RMCA+76
RMCAR20  EQU   RMCA+74
RMCABCPG EQU   RMCA+73
RMCALGPG EQU   RMCA+72
RMCAISV  EQU   RMCA+70
RMCAR11  EQU   RMCA+68
RMCAINV  EQU   RMCA+64
RMCAR10  EQU   RMCA+60
RMCARSV9 EQU   RMCA+56
RMCACHU  EQU   RMCA+52
RMCACHP  EQU   RMCA+48
RMCARSV8 EQU   RMCA+44
RMCARSV7 EQU   RMCA+40
RMCARSVF EQU   RMCAFLGS
RMCASAAF EQU   RMCAFLGS
RMCARSV5 EQU   RMCA+32
RMCARSV4 EQU   RMCA+28
RMCARSV3 EQU   RMCA+24
RMCATOI  EQU   RMCA+20
RMCATRS  EQU   RMCA+16
RMCATQS  EQU   RMCA+12
RMCARSV2 EQU   RMCA+10
RMCARSV1 EQU   RMCA+8
RMCAINUS EQU   RMCA+6
RMCAR04  EQU   RMCA+4
RMCANAME EQU   RMCA
RMPTEND  EQU   RMPT+72
RMPTOPE  EQU   RMPT+66
RMPTOPI  EQU   RMPT+63
RMPTOPC  EQU   RMPT+60
RMPTIOET EQU   RMPT+56
RMPTCPET EQU   RMPT+52
RMPTWMET EQU   RMPT+48
RMPTSAET EQU   RMPT+44
RMPTXCHT EQU   RMPT+40
RMPTRSV3 EQU   RMPT+38
RMPTRSV2 EQU   RMPT+36
RMPTRSV1 EQU   RMPT+32
RMPTTOL  EQU   RMPT+28
RMPTTOM  EQU   RMPT+24
RMPTTCS  EQU   RMPT+20
RMPTIMN  EQU   RMPT+16
RMPTERV  EQU   RMPT+12
RMPTIOC  EQU   RMPT+8
RMPTCPU  EQU   RMPT+4
RMPTNAME EQU   RMPT
RCTEND   EQU   RCT+88
RCVRSVF3 EQU   RCT+84
RCVRSVF2 EQU   RCT+80
RCVTAPAD EQU   RCT+76
RCVRSVF1 EQU   RCT+74
RCVTOTDF EQU   RCT+72
RCVBPTTM EQU   RCT+68
RCVBPTCT EQU   RCT+64
RCVASMQ  EQU   RCT+60
RCVAVQP  EQU   RCT+56
RCVCPUC  EQU   RCT+52
RCVUICC  EQU   RCT+48
RCVPTR   EQU   RCT+46
RCVASMQA EQU   RCT+44
RCVAVQC  EQU   RCT+42
RCVCPUA  EQU   RCT+40
RCVUICA  EQU   RCT+38
RCVCTMC  EQU   RCT+36
RCCRSVF3 EQU   RCT+32
RCCRSVF2 EQU   RCT+28
RCCRSVF1 EQU   RCT+26
RCCLCHRR EQU   RCT+24
RCCLCHUT EQU   RCT+22
RCCTOTUT EQU   RCT+20
RCCASMTH EQU   RCT+18
RCCASMTL EQU   RCT+16
RCCPTRTH EQU   RCT+14
RCCPTRTL EQU   RCT+12
RCCCPUTH EQU   RCT+10
RCCCPUTL EQU   RCT+8
RCCUICTH EQU   RCT+6
RCCUICTL EQU   RCT+4
RCTRCT   EQU   RCT
MCTEND   EQU   MCT+96
MCVRSVF3 EQU   MCT+92
MCVRSVF2 EQU   MCT+88
MCVRSVF1 EQU   MCT+84
MCCINTMX EQU   MCT+80
MCCPR1IN EQU   MCT+76
MCCUICIN EQU   MCT+72
MCCUICBD EQU   MCT+68
MCTRSVB1 EQU   MCT+67
MCTXRSVD EQU   MCT+66
MCTFX2   EQU   MCTOFLGS
MCTFX1   EQU   MCTOFLGS
MCTSMS2  EQU   MCTOFLGS
MCTSMS1  EQU   MCTOFLGS
MCTAMS2  EQU   MCTOFLGS
@NM00001 EQU   MCTOFLGS
MCTASM2  EQU   MCTOFLGS
MCTASM1  EQU   MCTOFLGS
MCTSF04  EQU   MCTSFLGS
MCTFAVQ  EQU   MCTSFLGS
MCTAVQ1  EQU   MCTSFLGS
MCTSQA2  EQU   MCTSFLGS
MCTSQA1  EQU   MCTSFLGS
MCVAVQC  EQU   MCT+60
MCVFRCNT EQU   MCT+58
MCVSTCRI EQU   MCT+56
MCCEND   EQU   MCT+56
MCCASMT2 EQU   MCT+54
MCCASMT1 EQU   MCT+52
MCCRSVH1 EQU   MCT+50
MCCPLUS  EQU   MCT+48
MCCMS403 EQU   MCT+44
MCCMS402 EQU   MCT+40
MCCMS401 EQU   MCT+36
MCCMS400 EQU   MCT+32
MCCMS203 EQU   MCT+28
MCCMS202 EQU   MCT+24
MCCMS201 EQU   MCT+20
MCCMS200 EQU   MCT+16
MCCMS102 EQU   MCT+12
MCCMS101 EQU   MCT+8
MCCMS100 EQU   MCT+4
MCTMCT   EQU   MCT
ICTEND   EQU   ICT+88
ICTRSVB3 EQU   ICT+87
ICTRSVB2 EQU   ICT+86
ICTRSVB1 EQU   ICT+85
ICT003   EQU   ICTFLAGS
ICTIOOT  EQU   ICTFLAGS
ICTIOL   EQU   ICTFLAGS
ICTDRSV4 EQU   ICTFLAGS
ICVIRSV3 EQU   ICT+80
ICVULCBT EQU   ICT+76
ICVOLCBT EQU   ICT+72
ICVLCBPT EQU   ICT+68
ICVLUTBT EQU   ICT+64
ICCEND   EQU   ICT+64
ICCRSV01 EQU   ICT+62
ICCEDSUT EQU   ICT+60
ICCSRSV2 EQU   ICT+58
ICCSIGUP EQU   ICT+56
ICCINDAT EQU   ICT+52
ICCINLOT EQU   ICT+48
ICCINHIT EQU   ICT+44
ICCDAUTH EQU   ICT+42
ICCLOUTH EQU   ICT+40
ICCHIUTH EQU   ICT+38
ICCDASF2 EQU   ICT+36
ICCDASF1 EQU   ICT+34
ICCMINRV EQU   ICT+32
ICCMAXRV EQU   ICT+30
ICCRVSCF EQU   ICT+28
ICCMNIOR EQU   ICT+26
ICCLCHN  EQU   ICT+24
ICCLCLST EQU   ICT+20
ICCMNSWP EQU   ICT+16
ICCMNUIN EQU   ICT+12
ICCMXICT EQU   ICT+8
ICCMRSV1 EQU   ICT+4
ICTICT   EQU   ICT
CCVEND   EQU   CCT+128
CCTFLG2  EQU   CCT+125
CCTCPUOT EQU   CCTFLG1
CCTALL   EQU   CCTFLG1
CCVCPUCT EQU   CCT+122
CCVENQCT EQU   CCT+120
CCVLGFMC EQU   CCT+118
CCVLGUTL EQU   CCT+116
CCVR07   EQU   CCT+114
CCVR06   EQU   CCT+112
CCVUTILP EQU   CCT+110
CCVR05   EQU   CCT+108
CCVIMBBT EQU   CCT+104
CCVEJST  EQU   CCT+100
CCVPGCPF EQU   CCT+96
CCVRVSWF EQU   CCT+92
CCVRBSTD EQU   CCT+88
CCVR04   EQU   CCT+84
CCVRBSWT EQU   CCT+80
CCVR03   EQU   CCT+76
CCCEND   EQU   CCT+76
CCCRSVH1 EQU   CCT+74
CCCSCFC2 EQU   CCT+72
CCCSCFC1 EQU   CCT+70
CCCR02   EQU   CCT+68
CCCSIGUR EQU   CCT+66
CCCSIGDP EQU   CCT+64
CCCSCFAC EQU   CCT+62
CCCMINRV EQU   CCT+60
CCCMAXRV EQU   CCT+58
CCCLOSCF EQU   CCT+56
CCCHISCF EQU   CCT+54
CCCUTLOT EQU   CCT+52
CCCUTHIT EQU   CCT+50
CCCAPRHT EQU   CCT+48
CCCAPRLT EQU   CCT+46
CCCR01   EQU   CCT+44
CCCAPGDP EQU   CCT+42
CCCAPMDP EQU   CCT+40
CCCAPLDP EQU   CCT+38
CCCAPBDP EQU   CCT+36
CCCAPROT EQU   CCT+34
CCCAPDIV EQU   CCT+32
CCCRSVF1 EQU   CCT+28
CCCMNSIN EQU   CCT+24
CCCMNUIN EQU   CCT+20
CCCAPDEL EQU   CCT+16
CCCAPMAX EQU   CCT+12
CCCAPMIN EQU   CCT+8
CCCAPMET EQU   CCT+4
CCTCCT   EQU   CCT
RMCTEND  EQU   RMCT+192
RMCTR50  EQU   RMCT+190
RMCTDMNC EQU   RMCT+188
RMCTDMDE EQU   RMCT+184
RMCTDMDT EQU   RMCT+180
RMCTSRBT EQU   RMCT+176
RMCTOUXB EQU   RMCT+172
RMCTTOCI EQU   RMCT+160
RMCTCPID EQU   RMCT+156
RMCTTELM EQU   RMCT+152
RMCTF09  EQU   RMCTFLGS+1
RMCTF07  EQU   RMCTFLGS+1
RMCTF06  EQU   RMCTFLGS
RMCTRSV2 EQU   RMCTFLGS
RMCTRSV1 EQU   RMCTFLGS
RMCTINIT EQU   RMCTFLGS
RMCTF03  EQU   RMCTFLGS
RMCTCPS1 EQU   RMCTFLGS
RMCTRQSV EQU   RMCT+144
RMCTALR  EQU   RMCT+140
RMCTALA  EQU   RMCT+136
RMCTTOD  EQU   RMCT+124
RMCTTBS  EQU   RMCT+120
RMCTR10  EQU   RMCT+116
RMCTINQE EQU   RMCT+112
RMCTOTQE EQU   RMCT+108
RMCTWTQE EQU   RMCT+104
RMCTAQHD EQU   RMCT+100
RMCTAQCT EQU   RMCT+96
RMCTTMQE EQU   RMCT+92
RMCTWAST EQU   RMCT+84
RMCTEPPR EQU   RMCT+80
RMCTFLTM EQU   RMCT+76
RMCTEPET EQU   RMCT+72
RMCTITT  EQU   RMCT+68
RMCTADJC EQU   RMCT+64
RMCTEPBG EQU   RMCT+60
RMCTEPAT EQU   RMCT+56
RMCTEPDT EQU   RMCT+52
RMCTEPPA EQU   RMCT+48
RMCTRMSB EQU   RMCT+44
RMCTRMEX EQU   RMCT+40
RMCTRMPD EQU   RMCT+36
RMCTRLCT EQU   RMCT+28
RMCTRMCA EQU   RMCT+20
RMCTRMPT EQU   RMCT+16
RMCTMCT  EQU   RMCT+12
RMCTICT  EQU   RMCT+8
RMCTCCT  EQU   RMCT+4
RMCTNAME EQU   RMCT
@NM00031 EQU   PSA+3668
PSASTAK  EQU   PSA+3072
@NM00030 EQU   PSA+1048
PSAUSEND EQU   PSA+1048
PSARV062 EQU   PSA+1044
PSACDAL  EQU   PSA+1040
PSAWTCOD EQU   PSA+1036
PSAATCVT EQU   PSA+1032
PSAPCPSW EQU   PSA+1024
PSAPIR2  EQU   PSA+1020
PSARV059 EQU   PSA+1018
PSASVC13 EQU   PSA+1016
PSALSFCC EQU   PSA+1012
PSASFACC EQU   PSA+1008
PSASTOP  EQU   PSA+992
PSASTART EQU   PSA+976
PSARSPSW EQU   PSA+968
PSASRPSW EQU   PSA+960
PSARV045 EQU   PSA+892
PSARV044 EQU   PSA+888
PSARV043 EQU   PSA+884
PSARV042 EQU   PSA+880
PSARV041 EQU   PSA+876
PSARV040 EQU   PSA+872
PSARV025 EQU   PSA+868
PSADSSED EQU   PSA+868
PSADSSPR EQU   PSA+864
PSADSSFW EQU   PSA+860
PSADSS14 EQU   PSA+856
PSADSSPP EQU   PSA+848
PSADSSRP EQU   PSA+840
PSADSS05 EQU   PSADSSF4
PSADSS10 EQU   PSADSSF4
PSADSSVE EQU   PSADSSF4
PSADSSDE EQU   PSADSSF4
PSADSSC0 EQU   PSADSSF4
PSADSSIE EQU   PSADSSF4
PSADSS12 EQU   PSADSSF4
PSADSSRC EQU   PSADSSF4
PSARV057 EQU   PSADSSF3
PSARV056 EQU   PSADSSF3
PSARV055 EQU   PSADSSF3
PSADSSMC EQU   PSADSSF3
PSADSSRW EQU   PSADSSF3
PSADSSNM EQU   PSADSSF3
PSADSSES EQU   PSADSSF3
PSADSSGP EQU   PSADSSF3
PSADSSF2 EQU   PSADSSFL+1
PSADSSPI EQU   PSADSSF1
PSADSSOI EQU   PSADSSF1
PSADSSSP EQU   PSADSSF1
PSADSSTP EQU   PSADSSF1
PSADSSDW EQU   PSADSSF1
PSADSSDD EQU   PSADSSF1
PSADSSDM EQU   PSADSSF1
PSADSSMV EQU   PSADSSF1
PSADSSTS EQU   PSA+816
PSADSSWK EQU   PSA+812
PSADSSR3 EQU   PSA+808
PSADSSR2 EQU   PSA+804
PSADSSRS EQU   PSA+800
PSASTOR  EQU   PSA+796
PSACPUSA EQU   PSA+794
PSAVSTAP EQU   PSA+792
PSAWKVAP EQU   PSA+788
PSAWKRAP EQU   PSA+784
PSAMCHIC EQU   PSA+783
PSARV061 EQU   PSA+782
PSASYMSK EQU   PSA+781
PSAMCHFL EQU   PSA+780
PSACR0   EQU   PSA+776
PSAPSWSV EQU   PSA+768
PSALITA  EQU   PSA+764
PSACLHS  EQU   PSAHLHI
PSALKR15 EQU   PSALKSA+60
PSALKR14 EQU   PSALKSA+56
PSALKR13 EQU   PSALKSA+52
PSALKR12 EQU   PSALKSA+48
PSALKR11 EQU   PSALKSA+44
PSALKR10 EQU   PSALKSA+40
PSALKR9  EQU   PSALKSA+36
PSALKR8  EQU   PSALKSA+32
PSALKR7  EQU   PSALKSA+28
PSALKR6  EQU   PSALKSA+24
PSALKR5  EQU   PSALKSA+20
PSALKR4  EQU   PSALKSA+16
PSALKR3  EQU   PSALKSA+12
PSALKR2  EQU   PSALKSA+8
PSALKR1  EQU   PSALKSA+4
PSALKR0  EQU   PSALKSA
PSARV023 EQU   PSACLHT+52
PSALOCAL EQU   PSACLHT+48
PSACMSL  EQU   PSACLHT+44
PSAOPTL  EQU   PSACLHT+40
PSATPACL EQU   PSACLHT+36
PSATPDNL EQU   PSACLHT+32
PSATPNCL EQU   PSACLHT+28
PSAIOSLL EQU   PSACLHT+24
PSAIOSUL EQU   PSACLHT+20
PSAIOSCL EQU   PSACLHT+16
PSAIOSSL EQU   PSACLHT+12
PSASALCL EQU   PSACLHT+8
PSAASML  EQU   PSACLHT+4
PSADISPL EQU   PSACLHT
PSASRSA  EQU   PSA+636
PSARV050 EQU   PSA+634
PSADSSGO EQU   PSA+633
PSARECUR EQU   PSA+632
PSAHLHIS EQU   PSA+628
PSAIPCSA EQU   PSA+624
@NM00029 EQU   PSA+621
PSAIPCDM EQU   PSA+620
PSAIPCD  EQU   PSA+616
@NM00028 EQU   PSA+613
PSAIPCRM EQU   PSA+612
PSAIPCR  EQU   PSA+608
PSAMCHEX EQU   PSA+600
PSAMPSW  EQU   PSA+592
PSAEXPS2 EQU   PSA+584
PSAEXPS1 EQU   PSA+576
PSAPIREG EQU   PSA+572
PSARSREG EQU   PSA+568
PSAGPREG EQU   PSA+556
PSARV022 EQU   PSASUP4
PSARV021 EQU   PSASUP4
PSARV020 EQU   PSASUP4
PSARV019 EQU   PSASUP4
PSARV018 EQU   PSASUP4
PSARV017 EQU   PSASUP4
PSARV016 EQU   PSASUP4
PSARV015 EQU   PSASUP4
PSARV014 EQU   PSASUP3
PSAULCMS EQU   PSASUP3
PSARV012 EQU   PSASUP3
PSAESTA  EQU   PSASUP3
PSASPR   EQU   PSASUP3
PSAPSREG EQU   PSASUP3
PSAPI2   EQU   PSASUP3
PSAIOSUP EQU   PSASUP3
PSALCR   EQU   PSASUP2
PSARTM   EQU   PSASUP2
PSAACR   EQU   PSASUP2
PSAIPCE2 EQU   PSASUP2
PSAIPCES EQU   PSASUP2
PSAIPCEC EQU   PSASUP2
PSAGTF   EQU   PSASUP2
PSAIPCRI EQU   PSASUP2
PSATYPE6 EQU   PSASUP1
PSATCTL  EQU   PSASUP1
PSADISP  EQU   PSASUP1
PSALOCK  EQU   PSASUP1
PSAPI    EQU   PSASUP1
PSAEXT   EQU   PSASUP1
PSASVC   EQU   PSASUP1
PSAIO    EQU   PSASUP1
PSAAOLD  EQU   PSA+548
PSAANEW  EQU   PSA+544
PSATNEW  EQU   PSA+536
PSALCCAR EQU   PSA+532
PSALCCAV EQU   PSA+528
PSAPCCAR EQU   PSA+524
PSAPCCAV EQU   PSA+520
PSACPULA EQU   PSA+518
PSACPUPA EQU   PSA+516
PSAPSA   EQU   PSA+512
FLCHDEND EQU   PSA+512
FLCCRSAV EQU   FLCMCLA+280
FLCGRSAV EQU   FLCMCLA+216
FLCFPSAV EQU   FLCMCLA+184
FLCFLA   EQU   FLCMCLA+88
FLCRGNCD EQU   FLCMCLA+84
FLCFSAA  EQU   FLCFSA+1
@NM00027 EQU   FLCFSA
@NM00026 EQU   FLCMCLA+72
FLCMCIC  EQU   FLCMCLA+64
@NM00025 EQU   FLCMCLA+20
FLCIOAA  EQU   FLCIOA+1
@NM00024 EQU   FLCIOA
@NM00023 EQU   FLCMCLA+15
@NM00022 EQU   FLCMCLA+14
@NM00021 EQU   FLCMCLA+12
FLCLCL   EQU   FLCMCLA+8
FLCIOELA EQU   FLCIOEL+1
@NM00020 EQU   FLCIOEL
FLCCHNID EQU   FLCMCLA
@NM00019 EQU   PSA+160
FLCMTRCD EQU   PSA+157
@NM00018 EQU   PSA+156
FLCPERA  EQU   FLCPER+1
@NM00017 EQU   FLCPER
@NM00016 EQU   PSA+151
FLCPERCD EQU   PSA+150
FLCMCNUM EQU   PSA+149
@NM00015 EQU   PSA+148
FLCTEAA  EQU   FLCTEA+1
@NM00014 EQU   FLCTEA
PSAPIPC  EQU   PSAPICOD
PSAPIMC  EQU   PSAPICOD
PSAPIPER EQU   PSAPICOD
PSARV049 EQU   FLCPICOD
FLCPILCB EQU   FLCPIILC
@NM00013 EQU   FLCPIILC
@NM00012 EQU   PSAEPPSW
FLCSVCN  EQU   PSAESPSW+2
FLCSILCB EQU   FLCSVILC
@NM00011 EQU   FLCSVILC
@NM00010 EQU   PSAESPSW
FLCEICOD EQU   PSAEEPSW+2
PSASPAD  EQU   PSAEEPSW
@NM00009 EQU   PSA+128
FLCINPSW EQU   PSA+120
FLCMNPSW EQU   PSA+112
FLCPNPSW EQU   PSA+104
FLCSNPSW EQU   PSA+96
FLCENPSW EQU   PSA+88
FLCTRACE EQU   PSA+84
FLCTIMER EQU   PSA+80
FLCCVT2  EQU   PSA+76
FLCCAW   EQU   PSA+72
FLCCSW   EQU   PSA+64
FLCIOPSW EQU   PSA+56
FLCMOPSW EQU   PSA+48
FLCPOPSW EQU   PSA+40
FLCSOPSW EQU   PSA+32
FLCEOPSW EQU   PSA+24
@NM00008 EQU   FLCICCW2+4
FLCICCW1 EQU   FLCROPSW
FLCIPPSW EQU   FLCRNPSW
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RC00138 EQU   @RC00135
@RF00184 EQU   @RC00181
@RF00192 EQU   @RC00181
@ENDDATA EQU   *
         END   IRARMWAR,(C'PLS2210',0701,78024)
