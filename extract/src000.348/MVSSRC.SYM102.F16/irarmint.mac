         TITLE 'IRARMINT - SYSTEM RESOURCES MANAGER INTERFACE PROGRAM  *
                        '
*                                  /*
IRARMINT CSECT ,
@PSTART  DS    0H
         USING @PSTART,@10
*                                  /*
         ENTRY IGC095                  SRM SVC ENTRY POINT
IGC095   DS    0H
         BALR  @10,0                   ENTRY POINT ADDRESSABILITY
         LA    @12,*-@PSTART           DISPLACEMENT FROM START OF MOD
         SLR   @10,@12                 MODULE ADDRESSABILITY
*   SYSEVCDE=R0&FFBYTE3;            /* ISOLATE INPUT SYSEVENT CODE   */
         LR    SYSEVCDE,R0                                         0068
         N     SYSEVCDE,@CF01818                                   0068
*   IF SYSEVCDE=CON0 THEN           /* IF SYSEVENT CODE IS 0,        */
         SLR   @12,@12                                             0069
         CR    SYSEVCDE,@12                                        0069
         BNE   @RF00069                                            0069
*     DO;                           /* ASSOCIATE SYSEVENT WITH AN  0070
*                                      ASID, TRACE AND RETURN TO USER*/
*       IF R0=CON0 THEN             /* IF ASID NOT INPUT,            */
         CR    R0,@12                                              0071
         BNE   @RF00071                                            0071
*         DO;                       /* GET ASID FROM CURRENT ASCB    */
*           ASCBPTR=PSAAOLD;        /* ADDRESSABILITY TO ASCB        */
         L     ASCBPTR,PSAAOLD                                     0073
*           GENERATE CODE REFS(ASCBASID,ASCBPTR,R0)                0074
*               (ICM   R0,12,ASCBASID(ASCBPTR));                   0074
         ICM   R0,12,ASCBASID(ASCBPTR)
*         END;                                                     0075
*       GENERATE CODE               /* MC INSTRUCTION FOR GTF TRACING*/
*           (HOOK EID=IRASRM,TYPE=P);                              0076
@RF00071 DS    0H                                                  0076
         HOOK EID=IRASRM,TYPE=P
*       RETURN;                                                    0077
@EL00001 DS    0H                                                  0077
@EF00001 DS    0H                                                  0077
@ER00001 BR    @14                                                 0077
*     END;                                                         0078
*                                                                  0078
*/*                                                                  */
*/*   SAVE REGISTERS ALTERED BY TESTAUTH.                            */
*/*                                                                  */
*                                                                  0079
*   R4=R0;                                                         0079
@RF00069 LR    R4,R0                                               0079
*   R5=R1;                                                         0080
         LR    R5,R1                                               0080
*   R6=R14;                                                        0081
*                                                                  0081
         LR    R6,R14                                              0081
*/*                                                                  */
*/*   VERIFY THAT THE SVC ISSUER IS APPROPRIATELY AUTHORIZED TO      */
*/*   ENTER THE SYSTEM RESOURCES MANAGER.  ISSUER MUST BE EITHER     */
*/*   EXECUTING IN SUPERVISOR STATE OR PROTECTION KEY 0 - 7, OR APF  */
*/*   AUTHORIZED.  NO AUTHORIZATION IS REQUIRED FOR SYSEVENT 38,     */
*/*   AND AUTORIZATION FOR SYSEVENTS 41 AND 42 WILL BE       @Z40BPEB*/
*/*   VERIFIED IN THE EVT ROUTINE BECAUSE THESE SYSEVENTS    @Z40BPEB*/
*/*   MAY BE AUTHORIZED EVEN IF THEY FAIL TESTAUTH. IN THESE @Z40BPEB*/
*/*   CASES,  HOWEVER, ONLY THOSE FUNCTIONS REQUIRED TO PROCESS THE  */
*/*   SYSEVENT ARE PERFORMED.  FOR A VALID SVC INVOCATION OBTAIN     */
*/*   THE SRM LOCK, ESTABLISH THE ERROR RECOVERY ENVIRONMENT AND     */
*/*   SAVE THE PHYSICAL STATE IN WHICH THE SRM WAS ENTERED.          */
*/*                                                                  */
*                                                                  0082
*   GENERATE CODE REFS(CVTAPF,CVT)                                 0082
*       (TESTAUTH FCTN=1,STATE=YES,KEY=YES,RBLEVEL=1,BRANCH=YES);  0082
         TESTAUTH FCTN=1,STATE=YES,KEY=YES,RBLEVEL=1,BRANCH=YES
*   IF RTNCOD=CON0×                 /* IF USER AUTHORIZED OR         */
*       SYSEVCDE=CON38×             /* SYSEVENT CODE THAT DOES NOT   */
*       SYSEVCDE=CON41×             /* REQUIRE AUTHORIZATION NOW TO  */
*       SYSEVCDE=CON42 THEN         /* ENTER THE SRM,                */
         LTR   RTNCOD,RTNCOD                                       0083
         BZ    @RT00083                                            0083
         C     SYSEVCDE,@CF01812                                   0083
         BE    @RT00083                                            0083
         C     SYSEVCDE,@CF01814                                   0083
         BE    @RT00083                                            0083
         C     SYSEVCDE,@CF01816                                   0083
         BNE   @RF00083                                            0083
@RT00083 DS    0H                                                  0084
*     DO;                           /* CONTINUE SYSEVENT VALIDATION  */
*       R0=R4;                      /* RESTORE REGS 0                */
         LR    R0,R4                                               0085
*       R1=R5;                      /* AND 1                         */
         LR    R1,R5                                               0086
*       CALL IRARM000;              /* GET SRM LOCK AND ESTABLISH  0087
*                                      ERROR RECOVERY ENVIRONMENT    */
         BAL   @14,IRARM000                                        0087
*       RRPASVC='1'B;               /* INDICATE SVC ENTRY            */
*       RRPAENB='1'B;               /* SET ENABLED ENTRY FLAG ON     */
         OI    RRPASVC(RRPAPTR),B'01100000'                        0089
*     END;                                                         0090
*   ELSE                            /* SVC ISSUER NOT AUTHORIZED     */
*     DO;                           /* ABEND INVOKER                 */
         B     @RC00083                                            0091
@RF00083 DS    0H                                                  0092
*       RESNCODE=CON8;              /* ABEND REASON CODE             */
         LA    RESNCODE,8                                          0092
*       CALL RMI10001;              /* ABEND INVOKER                 */
         BAL   @14,RMI10001                                        0093
*     END;                                                         0094
*   GOTO IRARM001;                  /* COMMON PORTION OF INTERFACE   */
         B     IRARM001                                            0095
*                                                                  0096
*/* **************************************************************** */
*/*                                                                  */
*/* ENTRY POINT NAME - IRARMI00                                      */
*/*                                                                  */
*/* DESCRIPTIVE NAME - EXTERNAL BRANCH ENTRY INTERFACE SUBROUTINE    */
*/*                                                                  */
*/* **************************************************************** */
*                                                                  0096
*   GENERATE CODE;                                                 0096
*                                  /*
         ENTRY IRARMI00                SRM EXTERNAL BRANCH ENTRY PT
IRARMI00 DS    0H
         STM   @14,@12,CON12(@13)      SAVE REGISTERS IN AREA PROVIDED
*                                      BY ISSUER OF SYSEVENT
*                                                                  0097
*/* **************************************************************** */
*/*                                                                  */
*/* ENTRY POINT NAME - IRARMI48                                      */
*/*                                                                  */
*/* DESCRIPTIVE NAME - INTERNAL BRANCH ENTRY INTERFACE SUBROUTINE    */
*/*                                                                  */
*/* **************************************************************** */
*                                                                  0097
*   GENERATE CODE;                                                 0097
*                                                                  0097
*                                  /*
         ENTRY IRARMI48                SRM INTERNAL BRANCH ENTRY PT
IRARMI48 DS    0H
         BALR  @10,0                   ENTRY POINT ADDRESSABILITY
         LA    @15,*-@PSTART           DISPLACEMENT FROM START OF MOD
         SLR   @10,@15                 MODULE ADDRESSABILITY
*/*                                                                  */
*/*   OBTAIN PSW PROTECT KEY OF BRANCH ENTRY SYSEVENT ISSUER, VERIFY */
*/*   THAT IT IS VALID(0 - 7), AND SWITCH TO PSW PROTECTION KEY OF   */
*/*   THE SYSTEM RESOURCES MANAGER(0).  PERFORM SRM LOCKING ALLOWED  */
*/*   BY THE SYSEVENT AND ESTABLISH ERROR RECOVERY ENVIRONMENT.      */
*/*                                                                  */
*                                                                  0098
*   PSWKEY=CON0;                    /* CLEAR BEFORE ISSUING MODESET  */
         SLR   PSWKEY,PSWKEY                                       0098
*   GENERATE                        /* OBTAIN PSW PROTECTION KEY     */
*       (MODESET SAVEKEY=(2));                                     0099
         MODESET SAVEKEY=(2)
*   IF PSWKEY>KEY7 THEN             /* IF INVOKER HAS INVALID      0100
*                                                            @Z40BPEB*/
         C     PSWKEY,@CF01802                                     0100
         BNH   @RF00100                                            0100
*     DO;                           /* STORAGE PROTECTION KEY,       */
*       RESNCODE=CON4;              /* ABEND REASON CODE             */
         LA    RESNCODE,4                                          0102
*       CALL RMI10001;              /* ABEND INVOKER                 */
         BAL   @14,RMI10001                                        0103
*     END;                                                         0104
*   GENERATE                        /* SWITCH TO SRM PROTECT KEY     */
*       (MODESET EXTKEY=SRM);                                      0105
@RF00100 DS    0H                                                  0105
         MODESET EXTKEY=SRM
*   SYSEVCDE=R0&FFBYTE3;            /* ISOLATE INPUT SYSEVENT CODE   */
         LR    SYSEVCDE,R0                                         0106
         N     SYSEVCDE,@CF01818                                   0106
*   R6=SVEREG;                      /* PRESERVE SAVEAREA ADDRESS PRO-
*                                      VIDED BY BRANCH ENTRY INVOKER */
         LR    R6,SVEREG                                           0107
*   CALL IRARM000;                  /* GET SRM LOCK IF REQUIRED AND
*                                      EST ERROR RECOVERY ENVIRONMENT*/
         BAL   @14,IRARM000                                        0108
*   RRPAKEY=PSWKEY;                 /* SAVE PROTECTION KEY OF BRANCH
*                                      ENTRY USER                    */
         STC   PSWKEY,RRPAKEY(,RRPAPTR)                            0109
*/*                                                                  */
*/*   SAVE PHYSICAL STATE IN WHICH THE SRM WAS ENTERED.              */
*/*                                                                  */
*                                                                  0110
*   IF SECHSTAT='1'B THEN           /* DISABLED STATE                */
         TM    SECHSTAT(SECHTPTR),B'00100000'                      0110
         BNO   @RF00110                                            0110
*     RRPADSB='1'B;                 /* SET DISABLED ENTRY FLAG ON    */
         OI    RRPADSB(RRPAPTR),B'10000000'                        0111
*   ELSE                            /* ENABLED STATE                 */
*     RRPAENB='1'B;                 /* SET ENABLED ENTRY FLAG ON     */
         B     @RC00110                                            0112
@RF00110 OI    RRPAENB(RRPAPTR),B'01000000'                        0112
*                                                                  0113
*/*                                                                  */
*/*   VALIDATE AN ASID INPUT VIA THE SYSEVENT.  IF AN ASID COULD BE  */
*/*   OMITTED AS INPUT WITH THE SYSEVENT, OBTAIN A VALID ASID TO     */
*/*   ASSOCIATE WITH THE SYSEVENT.  AN INVALID ASID OR AN ASID NOT   */
*/*   INPUT WITH THE SYSEVENT AS REQUIRED WILL RESULT IN A 15F-4     */
*/*   ABEND OF THE CURRENT TASK IN THE MEMORY.                       */
*/*                                                                  */
*                                                                  0113
*IRARM001:                          /* COMMON PORTION OF INTERFACE   */
*   RMCTPTR=CVTOPCTP;               /* ADDRESSABILITY TO RMCT        */
@RC00110 DS    0H                                                  0113
IRARM001 L     @12,CVTPTR                                          0113
         L     RMCTPTR,CVTOPCTP(,@12)                              0113
*   IF RRPAASD=CON0&                /* IF ASID NOT INPUT WITH        */
*       SECHASID='1'B THEN          /* SYSEVENT & ASID CAN BE OMITTED*/
         LH    @12,RRPAASD(,RRPAPTR)                               0114
         N     @12,@CF01843                                        0114
         LTR   @12,@12                                             0114
         BNZ   @RF00114                                            0114
         TM    SECHASID(SECHTPTR),B'00001000'                      0114
         BNO   @RF00114                                            0114
*     DO;                           /* OBTAIN ASCB ADDRESS FROM PSA
*                                      OR USE MASTER SCHEDULER ASCB  */
*       IF SECHOBID='1'B THEN       /* IF SECHT ENTRY INDICATES,     */
         TM    SECHOBID(SECHTPTR),B'00000100'                      0116
         BNO   @RF00116                                            0116
*         ASCBPTR=PSAAOLD;          /* USE ASCB OLD POINTER FROM PSA */
         L     ASCBPTR,PSAAOLD                                     0117
*       ELSE                        /* OTHERWISE, ASSOCIATE SYSEVENT */
*         ASCBPTR=RMCAMAS;          /* WITH THE MASTER SCHEDULER ASCB*/
         B     @RC00116                                            0118
@RF00116 L     ASCBPTR,RMCAMAS(,RMCTPTR)                           0118
*       RRPAASD=ASCBASID;           /* SAVE ASID OF CURRENT ASCB     */
@RC00116 MVC   RRPAASD(2,RRPAPTR),ASCBASID(ASCBPTR)                0119
*     END;                                                         0120
*   ELSE                            /* ASID INPUT WITH SYSEVENT OR 0121
*                                      ASID CANNOT BE OMITTED        */
*     DO;                           /* CHECK FOR VALID ASID INPUT    */
         B     @RC00114                                            0121
@RF00114 DS    0H                                                  0122
*       IF RRPAASD^=CON0&           /* IF ASID INPUT AND             */
*           RRPAASD<=ASVTMAXU&      /* ASID DEFINED WITHIN THE ASVT  */
*           ASVTENTY(RRPAASD)>CON0  /* AND ASCB ADDRESS VALID, USE   */
*         THEN                      /* ADDRESS OF ASCB FROM ASVT     */
         LH    @12,RRPAASD(,RRPAPTR)                               0122
         N     @12,@CF01843                                        0122
         LTR   @12,@12                                             0122
         BZ    @RF00122                                            0122
         L     @11,CVTPTR                                          0122
         L     @11,ASVTPTR(,@11)                                   0122
         C     @12,ASVTMAXU(,@11)                                  0122
         BH    @RF00122                                            0122
         SLA   @12,2                                               0122
         L     @12,ASVTENTY-4(@12,@11)                             0122
         LTR   @12,@12                                             0122
         BNP   @RF00122                                            0122
*         ASCBPTR=                  /* ADDRESSABILITY TO ASCB        */
*             ASVTENTY(RRPAASD);                                   0123
         LR    ASCBPTR,@12                                         0123
*       ELSE                        /* REQUIRED ASID OMITTED, OR     */
*         DO;                       /* INPUT ASID INVALID, OR ASCB 0124
*                                      ADDRESS INVALID, ABEND INVOKER*/
         B     @RC00122                                            0124
@RF00122 DS    0H                                                  0125
*           RESNCODE=CON4;          /* ABEND REASON CODE             */
         LA    RESNCODE,4                                          0125
*           CALL RMI10001;          /* ABEND INVOKER                 */
         BAL   @14,RMI10001                                        0126
*         END;                                                     0127
*     END;                                                         0128
@RC00122 DS    0H                                                  0129
*   OUCBPTR=ASCBOUCB;               /* ADDRESSABILITY TO OUCB        */
@RC00114 L     OUCBPTR,ASCBOUCB(,ASCBPTR)                          0129
*/*                                                                  */
*/*   VALIDITY CHECK THE OUCB ASSOCIATED WITH THE MEMORY.  INSURE    */
*/*   THAT THE SRM RIM HAS EXECUTED BEFORE PROCESSING ANY SYSEVENTS  */
*/*   THAT HAVE A DEPENDENCY ON THE RIM.                             */
*/*                                                                  */
*                                                                  0130
*   IF(OUCBNAME^='OUCB'×            /* IF THE OUCB ASSOCIATED WITH   */
*       OUCBINV='1'B)&              /* THIS SYSEVENT IS INVALID AND
*                                                            @Z40BPCH*/
*       SYSEVCDE^=CON6 THEN         /* MEMORY CREATE SYSEVENT IS NOT
*                                      THE CURRENT SYSEVENT THEN     */
         CLC   OUCBNAME(4,OUCBPTR),@CC01825                        0130
         BNE   @GL00007                                            0130
         TM    OUCBINV(OUCBPTR),B'00010000'                        0130
         BNO   @RF00130                                            0130
@GL00007 C     SYSEVCDE,@CF00303                                   0130
         BE    @RF00130                                            0130
*     IF RMCTINIT='0'B THEN         /* IF NIP10 HAS NOT YET RUN AND  */
         TM    RMCTINIT(RMCTPTR),B'00010000'                       0131
         BNZ   @RF00131                                            0131
*       IF ADDR(IRASECHT(SYSEVCDE)) /* SYSEVENT CANNOT RUN BEFORE    */
*           ->SECHINIT='0'B THEN    /* NIP10,EXIT IMMEDIATELY        */
*                                                                  0132
         LA    @12,IRASECHT-1(SYSEVCDE)                            0132
         TM    SECHINIT(@12),B'00000010'                           0132
         BNZ   @RF00132                                            0132
*         /***********************************************************/
*         /*                                                         */
*         /* ? IRACTLCL EPN(I01)                                     */
*         /*                                                         */
*         /***********************************************************/
*                                                                  0133
*         GOTO RMEXI01->IRARMNTR;   /* EXIT TO I01 FUNCT             */
         L     @12,RMEXI01(,RMCTPTR)                               0133
         BR    @12                                                 0133
*       ELSE                        /* PROCESS SYSEVENT              */
*         ;                                                        0134
@RF00132 DS    0H                                                  0135
*     ELSE                          /* IF NIP10 HAS RUN, CONTROL     */
*       DO;                         /* BLOCKS ARE INVALID            */
         B     @RC00131                                            0135
@RF00131 DS    0H                                                  0136
*         RESNCODE=CON24;           /* ABEND REASON CODE(15F-24 IS 0136
*                                      CHANGED BY SRM FRR TO A 25F)  */
         LA    RESNCODE,24                                         0136
*         CALL RMI10001;            /* ABEND INVOKER                 */
         BAL   @14,RMI10001                                        0137
*       END;                                                       0138
*                                                                  0139
*/*                                                                  */
*/*   OBTAIN TIME OF CURRENT SYSEVENT IN SRM TOD FORMAT.             */
*/*                                                                  */
*                                                                  0139
*   GENERATE CODE REFS(RMCTTOCI,RMCTTOC,RMCTTOD,RMCTPTR,RMCTTBS,RMPTTCS
*       ,RRPATOD);                                                 0139
*                                                                  0139
@RC00131 DS    0H                                                  0139
@RF00130 DS    0H                                                  0139
         STCK  RMCTTOCI(RMCTPTR)       TOD CLOCK VALUE
         BC    12,OKCLOCK              TOD CLOCK OPERATIONAL
         LM    @08,@09,RMCTTOC(RMCTPTR) TIME OF LAST ENTRY TO SRM
         AL    @09,RMPTTCS(,RMCTPTR)   INCREMENT TIME VALUE TO
*                                      SIMULATE PASSAGE OF TIME
         BC    12,NOCARRY              CHECK FOR CARRY
         AL    @08,ONE                 INCREMENT HIGH ORDER TIME VALUE
         BC    15,NOCARRY              SAVE TIME
ONE      DS    0F
         DC    X'00000001'             ONE
OKCLOCK  LM    @08,@09,RMCTTOCI(RMCTPTR) LOAD VALID TIME OF DAY
*                                        FROM STCK INSTRUCTION
NOCARRY  STM   @08,@09,RMCTTOC(RMCTPTR) SAVE TIME OF THIS ENTRY TO SRM
         SRDL  @08,MS                  CONVERT TIME TO 1.024 MILLISEC
MS       EQU   22                      CONSTANT TO CONVERT MICRO
*                                      TO MILLI SECENDS
         AL    @09,RMCTTBS(,RMCTPTR)   SUBTRACT BASE TIME
         ST    @09,RRPATOD(,RRPAPTR)   TIME OF CURRENT ENTRY FOR RCVRY
         ST    @09,RMCTTOD(,RMCTPTR)   TIME OF CURRENT ENTRY
*   /*****************************************************************/
*   /*                                                               */
*   /* ? IRACTLCL EPN(EVT)                                           */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0140
*   GOTO RMEXEVT->IRARMNTR;         /* EXIT TO EVT FUNCT             */
*                                                                  0140
         L     @12,RMEXEVT(,RMCTPTR)                               0140
         BR    @12                                                 0140
*   /*****************************************************************/
*   /*                                                               */
*   /* PROCESS SYSEVENT                                              */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0141
*                                                                  0141
*/* **************************************************************** */
*/*                                                                  */
*/* ENTRY POINT NAME - IRARMI01                                      */
*/*                                                                  */
*/* DESCRIPTIVE NAME - SRM RETURN TO INVOKER SUBROUTINE              */
*/*                                                                  */
*/* **************************************************************** */
*                                                                  0141
*   GENERATE CODE;                                                 0141
*                                  /*
         ENTRY IRARMI01                SRM RETURN ENTRY POINT
IRARMI01 DS    0H
         BALR  @10,0                   ENTRY POINT ADDRESSABILITY
         LA    @15,*-@PSTART           DISPLACEMENT FROM START OF MOD
         SLR   @10,@15                 MODULE ADDRESSABILITY
*   RRPAEPA=CON0;                   /* CLEAR ENTRY PT BLOCK ADDRESS  */
         SLR   @12,@12                                             0142
         ST    @12,RRPAEPA(,RRPAPTR)                               0142
*   RESPECIFY                                                      0143
*    (R0,                                                          0143
*     R1,                                                          0143
*     R2,                                                          0143
*     R4,                                                          0143
*     R5,                                                          0143
*     R6,                                                          0143
*     R8,                                                          0143
*     R15,                                                         0143
*     SYSEVCDE,                                                    0143
*     FLAGS) RSTD;                                                 0143
*                                                                  0143
*/*                                                                  */
*/*   LOAD INFORMATION FROM RECOVERY PARAMETER AREA(RRPA) THAT IS    */
*/*   REQUIRED TO RETURN CONTROL TO SRM INVOKER PRIOR TO RELEASING   */
*/*   THE ERROR RECOVERY ENVIRONMENT.                                */
*/*                                                                  */
*                                                                  0144
*   SYSEVCDE=RRPACOD;               /* ORIGINAL ENTRY SYSEVENT CODE  */
         SLR   SYSEVCDE,SYSEVCDE                                   0144
         IC    SYSEVCDE,RRPACOD(,RRPAPTR)                          0144
*   R0=RRPAINC;                     /* ORIGINAL R0 AT ENTRY          */
         L     R0,RRPAINC(,RRPAPTR)                                0145
*   R1=RRPAINP;                     /* ORIGINAL REG 1 AT ENTRY MODI-
*                                      FIED BY REQUIRED RETURN INDIC */
         L     R1,RRPAINP(,RRPAPTR)                                0146
*   R2=RRPAKEY;                     /* FOR BRANCH ENTRY, PROTECT KEY
*                                      OF INVOKER                    */
         SLR   R2,R2                                               0147
         IC    R2,RRPAKEY(,RRPAPTR)                                0147
*   R8=RRPAINS;                     /* FOR BRANCH ENTRY, REQUIRED  0148
*                                      SAVE AREA ADDRESS - FOR SVC 0148
*                                      ENTRY, RETURN ADDRESS         */
         L     R8,RRPAINS(,RRPAPTR)                                0148
*   FLAGS=RRPAFLG;                  /* SYSEVENT STATUS FLAGS         */
         LH    FLAGS,RRPAFLG(,RRPAPTR)                             0149
         N     FLAGS,@CF01843                                      0149
*/*                                                                  */
*/*   TRACE SRM SYSEVENTS VIA GTF.  ISSUE BRANCH ENTRY HOOK MACRO TO */
*/*   AVOID RECURSION THROUGH THE PFLIH.  INFORMATION TRACED IS:     */
*/*   GENERAL REGISTERS 0, 1, AND 11(LOGICAL 15).                    */
*/*                                                                  */
*                                                                  0150
*   RESPECIFY                                                      0150
*     R11 RSTD;                                                    0150
*   R11=RRPARTC;                    /* RETURN CODE TO SYSEVENT ISSUER*/
         SLR   R11,R11                                             0151
         IC    R11,RRPARTC(,RRPAPTR)                               0151
*   GENERATE CODE                                                  0152
*       (HOOK EID=IRASRM,TYPE=BPN          BRANCH HOOK FOR GTF TRACING)
*       ;                                                          0152
         HOOK EID=IRASRM,TYPE=BPN          BRANCH HOOK FOR GTF TRACING
*   GENERATE DATA;                                                 0153
*   RTNCOD=R11;                     /* SYSEVENT RETURN CODE          */
         LR    RTNCOD,R11                                          0154
*   RESPECIFY                                                      0155
*     R11 UNRSTD;                                                  0155
*                                                                  0155
*/*                                                                  */
*/*   RELEASE ERROR RECOVERY ENVIRONMENT.                            */
*/*                                                                  */
*                                                                  0156
*   GENERATE CODE REFS(PSACSTK)     /* RELEASE RECOVERY ENVIRONMENT  */
*       (SETFRR D,WRKREGS=(11,12));                                0156
*                                                                  0156
         SETFRR D,WRKREGS=(11,12)
*/*                                                                  */
*/*   FREE THE SRM LOCK IF IT WAS OBTAINED AT ENTRY TO THE SYSTEM    */
*/*   RESOURCES MANAGER.  RETURN THE CPU TO THE PHYSICAL STATE(ENAB- */
*/*   LED OR DISABLED) THAT EXISTED PRIOR TO OBTAINING THE SRM LOCK. */
*/*                                                                  */
*                                                                  0157
*   IF(FLAGS&LOCKMASK)^='0'B THEN   /* SRM LOCK SHOULD BE FREED      */
         SLR   @12,@12                                             0157
         LA    @11,512                                             0157
         NR    @11,FLAGS                                           0157
         CR    @11,@12                                             0157
         BE    @RF00157                                            0157
*     DO;                           /* DETERMINE THE STATE IN WHICH
*                                      THE CPU SHOULD BE RETURNED    */
*       RETURNCD=RTNCOD;            /* PRESERVE SYSEVENT RETURN CODE
*                                      ACROSS SETLOCK INTERFACE      */
         LR    RETURNCD,RTNCOD                                     0159
*       IF(FLAGS&STATMASK)^='0'B    /* IF SRM ENTERED                */
*         THEN                      /* PHYSICALLY ENABLED,           */
         L     @11,@CF01795                                        0160
         NR    @11,FLAGS                                           0160
         CR    @11,@12                                             0160
         BE    @RF00160                                            0160
*RMINT010:                          /* FREE SRM LOCK AND ENABLE      */
*         GENERATE CODE REFS(PSALITA,FLC);                         0161
RMINT010 DS    0H                                                  0161
         SETLOCK RELEASE,TYPE=SRM,RELATED=(SRM,IGC095(RMINT005))
*       ELSE                        /* SRM ENTERED DISABLED,         */
*RMINT015:                          /* FREE SRM LOCK AND STAY DISABLD*/
*         GENERATE CODE REFS(PSALITA,FLC);                         0162
         B     @RC00160                                            0162
@RF00160 DS    0H                                                  0162
RMINT015 DS    0H                                                  0162
         SETLOCK RELEASE,TYPE=SRM,DISABLED,                           XX
               RELATED=(SRM,IGC095(RMINT005))
*         RTNCOD=RETURNCD;          /* RESTORE SYSEVENT RETURN CODE  */
@RC00160 LR    RTNCOD,RETURNCD                                     0163
*     END;                                                         0164
*                                                                  0164
*/*                                                                  */
*/*   PERFORM THE NECESSARY FUNCTIONS REQUIRED TO EXIT FROM THE SRM, */
*/*   BASED ON WHETHER THE ENTRY WAS A BRANCH OR SVC.                */
*/*                                                                  */
*                                                                  0165
*   IF(FLAGS&ENTRMASK)^='0'B THEN   /* SVC ENTRY TO SRM              */
@RF00157 L     @12,@CF01797                                        0165
         NR    @12,FLAGS                                           0165
         LTR   @12,@12                                             0165
         BZ    @RF00165                                            0165
*     DO;                                                          0166
*                                                                  0166
*       /*************************************************************/
*       /*                                                           */
*       /* SYSEVENT 38, REQUEST FOR ACCUMULATED USER SERVICE RELATED */
*       /* DATA, CAN BE ISSUED BY AN UNAUTHORIZED USER AND THE DATA  */
*       /* AREA INTO WHICH THE SERVICE DATA IS TO BE STORED DOES NOT */
*       /* HAVE TO BE FIXED IN MAIN STORAGE. TO PREVENT DISABLED PAGE*/
*       /* FAULTS AND INVALID SRM INVOCATION AND TO INSURE SYSTEM    */
*       /* INTEGRITY, THE DATA IS STORED OUTSIDE THE SRM LOCK IN THE */
*       /* USER'S STORAGE PROTECTION KEY.                            */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0167
*       IF SYSEVCDE=CON38 THEN      /* CHECK FOR SYSEVENT 38         */
         C     SYSEVCDE,@CF01812                                   0167
         BNE   @RF00167                                            0167
*         DO;                                                      0168
*           RESPECIFY                                              0169
*             TCBPTR RSTD;                                         0169
*           TCBPTR=PSATOLD;         /* ADDRESSABILITY TO CURRENT TCB */
         L     TCBPTR,PSATOLD                                      0170
*           GENERATE CODE REFS(TCBPTR);                            0171
         USING TCB,TCBPTR
         MODESET EXTKEY=RBT1,WORKREG=2 SWITCH TO INVOKER'S KEY
         STM   @04,@06,0(@01)          RETURN REQUIRED DATA @ZM43092
         MODESET EXTKEY=SRM            SWITCH TO SRM STORAGE KEY
*           RESPECIFY                                              0172
*             TCBPTR UNRSTD;                                       0172
*         END;                                                     0173
*       RTNREG=R8;                  /* SETUP RETURN REGISTER @Z40BPCH*/
@RF00167 LR    RTNREG,R8                                           0174
*       RETURN;                     /* RETURN TO INVOKER             */
         B     @EL00001                                            0175
*     END;                                                         0176
*   ELSE                            /* BRANCH ENTRY TO SRM           */
*     DO;                                                          0177
@RF00165 DS    0H                                                  0178
*       GENERATE CODE               /* SWITCH TO CALLER'S KEY        */
*           (MODESET KEYADDR=(2),WORKREG=2);                       0178
         MODESET KEYADDR=(2),WORKREG=2
*       IF SYSEVCDE=CON38 THEN      /* CHECK FOR SYSEVENT 38         */
         C     SYSEVCDE,@CF01812                                   0179
         BNE   @RF00179                                            0179
*         GENERATE CODE             /* RETURN REQUIRED SERVICE DATA  */
*             (STM    @04,@06,0(@01));/*                     @ZM43092*/
*                                                                  0180
         STM    @04,@06,0(@01)
*       /*************************************************************/
*       /*                                                           */
*       /* RESTORE REGISTERS FROM INVOKER'S AREA.                    */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0181
*       SVEREG=R8;                  /* SAVE AREA ADDRESS             */
@RF00179 LR    SVEREG,R8                                           0181
*       GENERATE CODE REFS(RTNREG,SVEREG);                         0182
*                                   /*
         LM    @02,@12,CON28(SVEREG)   RESTORE REGISTERS
         L     RTNREG,CON12(,SVEREG)   RESTORE RETURN POINT
CON28    EQU   28
CON12    EQU   12
         BR    RTNREG                  RETURN TO INVOKER
*     END;                                                         0183
*   GENERATE DATA;                                                 0184
*IRARMI10:                          /* SRM ABEND ENTRY POINT         */
*RMI10001:                          /* INVALID INVOCATION ABEND      */
*   RTNCOD=RESNCODE;                /* REASON CODE FOR ABEND         */
IRARMI10 DS    0H                                                  0185
RMI10001 LR    RTNCOD,RESNCODE                                     0185
*   GENERATE CODE(ABEND X'15F',DUMP,,SYSTEM);                      0186
         ABEND X'15F',DUMP,,SYSTEM
*                                                                  0187
*/* **************************************************************** */
*/*                                                                  */
*/* IRARM000 - IRARMINT INTERNAL PROCEDURE                           */
*/*                                                                  */
*/* FUNCTION - FOR BOTH BRANCH ENTRY AND SVC SYSEVENTS:              */
*/*                  CHECK THE VALIDITY OF THE SYSEVENT CODE,        */
*/*                  PERFORM SRM LOCKING AS PERMITTED BY THE         */
*/*                  SYSEVENT CODE,                                  */
*/*                  ESTABLISH THE APPROPRIATE ERROR RECOVERY        */
*/*                  ENVIRONMENT, AND                                */
*/*                  SAVE THE INPUT IN THE AREA PROVIDED BY THE      */
*/*                  SETFRR MACRO.                                   */
*/*                                                                  */
*/* **************************************************************** */
*                                                                  0187
*IRARM000:                                                         0187
*   PROC OPTIONS(NOSAVEAREA,NOSAVE);                               0187
         B     @EL00001                                            0187
IRARM000 DS    0H                                                  0188
*   RESPECIFY                                                      0188
*     RTNSAVE RSTD;                                                0188
*   RTNSAVE=RTNREG;                 /* SAVE RETURN POINT ADDRESS     */
         LR    RTNSAVE,RTNREG                                      0189
*   IF SYSEVCDE>CON0&               /* IF SYSEVENT CODE DEFINED TO   */
*       SYSEVCDE<=DIM(IRASECHT)&    /* THE SRM, PERFORM LOCKING,     */
*       IRASECHT(SYSEVCDE)^=CON0 THEN/* ESTABLISH FRR AND SAVE STATUS*/
         SLR   @12,@12                                             0190
         CR    SYSEVCDE,@12                                        0190
         BNH   @RF00190                                            0190
         C     SYSEVCDE,@CF01734                                   0190
         BH    @RF00190                                            0190
         SLR   @11,@11                                             0190
         IC    @11,IRASECHT-1(SYSEVCDE)                            0190
         CR    @12,@11                                             0190
         BE    @RF00190                                            0190
*     DO;                           /* IN AREA RETURNED BY SETFRR    */
*       SECHTPTR=                   /* ADDRESSABILITY TO THE SYSEVENT*/
*           ADDR(IRASECHT(SYSEVCDE));/* CHARACTERISTICS TABLE ENTRY
*                                      FOR THE CURRENT SYSEVENT      */
         LA    SECHTPTR,IRASECHT-1(SYSEVCDE)                       0192
*       IF SECHLOCK='1'B THEN       /* IF INDICATED BY SECHT ENTRY,  */
         TM    SECHLOCK(SECHTPTR),B'01000000'                      0193
         BNO   @RF00193                                            0193
*         DO;                       /* OBTAIN SRM LOCK               */
*           RESPECIFY                                              0195
*             FRRADDR RSTD;                                        0195
*RMINT005:                          /* OBTAIN SRM LOCK UNCONDITIONALY*/
*           GENERATE CODE REFS(PSALITA,FLC);                       0196
RMINT005 DS    0H                                                  0196
         SETLOCK OBTAIN,TYPE=SRM,MODE=UNCOND,                         XX
               RELATED=(SRM,IGC095(RMINT010,RMINT015))
*           IF R13^=CON0 THEN       /* IF SRM LOCK ALREADY HELD ON   */
         LTR   R13,R13                                             0197
         BZ    @RF00197                                            0197
*             DO;                   /* ENTRY, ABEND INVOKER          */
*               RESNCODE=CON20;     /* ABEND REASON CODE             */
         LA    RESNCODE,20                                         0199
*               CALL RMI10001;      /* ABEND INVOKER                 */
         BAL   @14,RMI10001                                        0200
*             END;                                                 0201
*           FRRADDR=CVTOPCTP->      /* RECOVERY RTN TO HANDLE ERRORS */
*               RMEXRR2;            /* THAT OCCUR WITHIN THE SRM   0202
*                                      UNDER THE SRM LOCK            */
@RF00197 L     @12,CVTPTR                                          0202
         L     @12,CVTOPCTP(,@12)                                  0202
         L     FRRADDR,RMEXRR2(,@12)                               0202
*         END;                                                     0203
*       ELSE                        /* ENTRY TO THE SRM BY AN INVOKER
*                                      HOLDING A LOCK HIGHER IN THE
*                                      HIERARCHY THAN THE SRM LOCK   */
*         FRRADDR=CVTOPCTP->        /* RECOVERY RTN TO HANDLE ERRORS */
*             RMEXRR1;              /* THAT OCCUR WITHIN THE SRM NOT
*                                      UNDER THE SRM LOCK            */
         B     @RC00193                                            0204
@RF00193 L     @12,CVTPTR                                          0204
         L     @12,CVTOPCTP(,@12)                                  0204
         L     FRRADDR,RMEXRR1(,@12)                               0204
*       GENERATE CODE               /* ESTABLISH ERROR RECOVERY      */
*           REFS(PSACSTK,PSALSFCC);                                0205
@RC00193 DS    0H                                                  0205
*                                        /* ENVIRONMENT             */
         SETFRR A,FRRAD=(FRRADDR),PARMAD=(RRPAPTR),WRKREGS=(3,12)
*       RESPECIFY                                                  0206
*         FRRADDR UNRSTD;                                          0206
*       RRPAINC=R0;                 /* SAVE INPUT REGISTERS IN       */
         ST    R0,RRPAINC(,RRPAPTR)                                0207
*       RRPAINP=R1;                 /* RECOVERY PARAMETER AREA(RRPA) */
         ST    R1,RRPAINP(,RRPAPTR)                                0208
*       RRPAINS=R6;                 /* RETURNED BY SETFRR            */
*                                                                  0209
         ST    R6,RRPAINS(,RRPAPTR)                                0209
*       /*************************************************************/
*       /*                                                           */
*       /* ESTABLISH THE STATUS OF THE SRM LOCK WITHIN THE RECOVERY  */
*       /* PARAMETER AREA.                                           */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0210
*       IF SECHLOCK='1'B THEN       /* SRM LOCK OBTAINED             */
         TM    SECHLOCK(SECHTPTR),B'01000000'                      0210
         BNO   @RF00210                                            0210
*         RRPAOPT='1'B;             /* SET SRM LOCK OBTAINED FLAG    */
         OI    RRPAOPT(RRPAPTR),B'00000010'                        0211
*       RTNREG=RTNSAVE;             /* RETURN POINT ADDRESS          */
@RF00210 LR    RTNREG,RTNSAVE                                      0212
*     END;                                                         0213
*   ELSE                            /* SYSEVENT CODE UNDEFINED       */
*                                                                  0214
*     /***************************************************************/
*     /*                                                             */
*     /* INTERCEPT UNDEFINED SYSEVENTS - ABEND INVOKER               */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0214
*     DO;                                                          0214
         B     @RC00190                                            0214
@RF00190 DS    0H                                                  0215
*       IF SYSEVCDE=CON35×          /* SYSTEM STOP SYSEVENT OR       */
*           SYSEVCDE=CON36 THEN     /* SYSTEM START SYSEVENT         */
*                                                                  0215
         C     SYSEVCDE,@CF01808                                   0215
         BE    @RT00215                                            0215
         C     SYSEVCDE,@CF01810                                   0215
         BNE   @RF00215                                            0215
@RT00215 DS    0H                                                  0216
*         /***********************************************************/
*         /*                                                         */
*         /* ADJUST SRM TIME BASE SO THAT SYSTEM STOP/START TIME     */
*         /* INTERVAL IS TRANSPARENT.                                */
*         /*                                                         */
*         /***********************************************************/
*                                                                  0216
*         DO;                                                      0216
*           RMCTPTR=CVTOPCTP;       /* ADDRESSABILITY TO RMCT        */
         L     @12,CVTPTR                                          0217
         L     RMCTPTR,CVTOPCTP(,@12)                              0217
*           IF RMCTTBS^=CON0 THEN   /* IF SRM TIME BASE INITIALIZED  */
         L     @12,RMCTTBS(,RMCTPTR)                               0218
         LTR   @12,@12                                             0218
         BZ    @RF00218                                            0218
*             DO;                                                  0219
*               RESPECIFY                                          0220
*                (TMBSP,                                           0220
*                 TMBSC) RSTD;                                     0220
*               GENERATE CODE REFS(RMCTTOCI,RMCTTOC);              0221
         STCK  RMCTTOCI(RMCTPTR)       TOD CLOCK VALUE
         LM    @08,@09,RMCTTOCI(RMCTPTR) CURRENT TIME
         BC    12,OKCLKST              TOD CLOCK OPERATIONAL
         LM    @08,@09,RMCTTOC(RMCTPTR) TIME OF LAST ENTRY TO SRM
OKCLKST  SRDL  @08,MS                  CONVERT TIME TO 1.024 MILLISEC
*               TMBSP=RMCATQS;      /* START TIME OF SYSTEM STOP     */
         L     TMBSP,RMCATQS(,RMCTPTR)                             0222
*               TMBSC=TMBSC+RMCTTBS;/* SUBTRACT SRM TIME BASE FROM 0223
*                                      CURRENT TIME                  */
         AL    TMBSC,RMCTTBS(,RMCTPTR)                             0223
*               IF SYSEVCDE=CON35 THEN/* ENTER SYSTEM STOPPED STATE  */
         C     SYSEVCDE,@CF01808                                   0224
         BNE   @RF00224                                            0224
*                 RMCATQS=TMBSC;    /* TIME OF SYSTEM STOP IS NOW    */
         ST    TMBSC,RMCATQS(,RMCTPTR)                             0225
*               ELSE                /* LEAVING SYSTEM STOPPED STATE  */
*                 IF TMBSP^=CON0 THEN/* IF TIME RECORDED WHEN SYSTEM */
         B     @RC00224                                            0226
@RF00224 SLR   @12,@12                                             0226
         CLR   TMBSP,@12                                           0226
         BE    @RF00226                                            0226
*                   DO;             /* STOPPED STATE ENTERED, ADJUST
*                                      SRM TIME BASE BY STOP/STRT INT*/
*                     RMCATQS=CON0; /* CLEAR SYSTEM STOP BEGIN TIME  */
         ST    @12,RMCATQS(,RMCTPTR)                               0228
*                     RMCATRS=RMCTTBS;/* SAVE PREV SRM TIME BASE   0229
*                                      VALUE                         */
         L     @12,RMCTTBS(,RMCTPTR)                               0229
         ST    @12,RMCATRS(,RMCTPTR)                               0229
*                     RMCTTBS=RMCTTBS+/* SRM TIME BASE-(STOP       0230
*                                      DURATION)                     */
*                         (TMBSP-TMBSC);                           0230
         LR    @11,TMBSP                                           0230
         SLR   @11,TMBSC                                           0230
         ALR   @12,@11                                             0230
         ST    @12,RMCTTBS(,RMCTPTR)                               0230
*                   END;                                           0231
*               RESPECIFY                                          0232
*                (TMBSP,                                           0232
*                 TMBSC) UNRSTD;                                   0232
@RF00226 DS    0H                                                  0232
@RC00224 DS    0H                                                  0233
*             END;                                                 0233
*                                                                  0233
*           /*********************************************************/
*           /*                                                       */
*           /* EXIT FROM SRM FOR SYSEVENTS 35 AND 36.                */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0234
*           GENERATE CODE;                                         0234
@RF00218 DS    0H                                                  0234
         LR    @13,@06                 SAVE AREA ADDRESS
         LM    @14,@12,CON12(@13)      RESTORE REGISTERS
         SR    @15,@15
         BR    @14                     RETURN
*         END;                                                     0235
*       ELSE                        /* INVALID SYSEVENT              */
*         DO;                                                      0236
         B     @RC00215                                            0236
@RF00215 DS    0H                                                  0237
*           RESNCODE=CON4;          /* ABEND REASON CODE             */
         LA    RESNCODE,4                                          0237
*           CALL RMI10001;          /* ABEND INVOKER                 */
         BAL   @14,RMI10001                                        0238
*         END;                                                     0239
*     END;                                                         0240
*   RESPECIFY                                                      0241
*     RTNSAVE UNRSTD;                                              0241
*   END IRARM000;                                                  0242
@EL00002 DS    0H                                                  0242
@EF00002 DS    0H                                                  0242
@ER00002 BR    @14                                                 0242
*   END IRARMINT                                                   0243
*                                                                  0243
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (IRACNSMP)                                       */
*/*%INCLUDE SYSLIB  (IRARMCT )                                       */
*/*%INCLUDE SYSLIB  (IRACCT  )                                       */
*/*%INCLUDE SYSLIB  (IRAICT  )                                       */
*/*%INCLUDE SYSLIB  (IRAMCT  )                                       */
*/*%INCLUDE SYSLIB  (IRARCT  )                                       */
*/*%INCLUDE SYSLIB  (IRARMPT )                                       */
*/*%INCLUDE SYSLIB  (IRARMCA )                                       */
*/*%INCLUDE SYSLIB  (IRARMEX )                                       */
*/*%INCLUDE SYSLIB  (IRARMSB )                                       */
*/*%INCLUDE SYSLIB  (IRAEPAT )                                       */
*/*%INCLUDE SYSLIB  (IRAEPDT )                                       */
*/*%INCLUDE SYSLIB  (IRAEPST )                                       */
*/*%INCLUDE SYSLIB  (IRARRPA )                                       */
*/*%INCLUDE SYSLIB  (IHAASCB )                                       */
*/*%INCLUDE SYSLIB  (IRAOUCB )                                       */
*/*%INCLUDE SYSLIB  (IHAOUXB )                                       */
*/*%INCLUDE SYSLIB  (IHAASVT )                                       */
*/*%INCLUDE SYSLIB  (IRARQSRV)                                       */
*/*%INCLUDE SYSLIB  (CVT     )                                       */
*/*%INCLUDE SYSLIB  (IHAPSA  )                                       */
*/*%INCLUDE SYSLIB  (IRAREGS )                                       */
*                                                                  0243
*       ;                                                          0243
@DATA    DS    0H
         DS    0F
         DS    0F
@CF00303 DC    F'6'
@CF01808 DC    F'35'
@CF01810 DC    F'36'
@CF01812 DC    F'38'
@CF01814 DC    F'41'
@CF01816 DC    F'42'
@CF01734 DC    F'49'
@CF01802 DC    F'112'
@CF01818 DC    XL4'000000FF'
@CF01843 DC    XL4'0000FFFF'
@CF01795 DC    XL4'4000'
@CF01797 DC    XL4'2000'
         DS    0D
@CC01825 DC    C'OUCB'
IRASECHT DC    B'11101000'
         DC    B'11000000'
         DC    B'11001100'
         DC    B'10100000'
         DC    B'00000000'
         DC    B'11010000'
         DC    B'11010000'
         DC    B'11011100'
         DC    B'11011100'
         DC    B'11011100'
         DC    B'11011100'
         DC    B'11011100'
         DC    B'11001100'
         DC    B'11011100'
         DC    B'10100100'
         DC    B'10100100'
         DC    B'11000100'
         DC    B'11011100'
         DC    B'11011100'
         DC    B'11000000'
         DC    B'11000000'
         DC    B'10101010'
         DC    B'10101000'
         DC    B'10101000'
         DC    B'10101000'
         DC    B'10101000'
         DC    B'00000000'
         DC    B'11011100'
         DC    B'11011100'
         DC    B'11011100'
         DC    B'11010000'
         DC    B'11011100'
         DC    B'11101000'
         DC    B'11001100'
         DC    B'00000000'
         DC    B'00000000'
         DC    B'11001000'
         DC    B'11011100'
         DC    B'11011100'
         DC    B'11001000'
         DC    B'11011100'
         DC    B'11011100'
         DC    B'11011100'
         DC    B'11011100'
         DC    B'11011100'
         DC    B'11101100'
         DC    B'11011100'
         DC    B'11001100'
         DC    B'11011100'
IRARMINT CSECT
IEACON2  DC    V(AHLMCIHB)            BRANCH ENTRY HOOK ADDRESS);
IRARMTRC EQU   IEACON2                 EXTERNAL NAME FOR SRM TRACE RTN
         ENTRY IRARMTRC
IRARMINT CSECT
*                                  /*
         IKJTCB
         IHARB
         IHAFRRS
IRARMINT CSECT
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
RMCTPTR  EQU   @02
RRPAPTR  EQU   @03
ASCBPTR  EQU   @05
OUCBPTR  EQU   @04
OUXBPTR  EQU   @06
SECHTPTR EQU   @05
R0       EQU   @00
R1       EQU   @01
SVEREG   EQU   @13
RTNREG   EQU   @14
NTRREG   EQU   @15
RTNCOD   EQU   @15
R2       EQU   @02
R4       EQU   @04
R5       EQU   @05
R6       EQU   @06
R8       EQU   @08
R11      EQU   @11
R13      EQU   @13
R14      EQU   @14
R15      EQU   @15
RESNCODE EQU   @00
PSWKEY   EQU   @02
RETURNCD EQU   @03
SYSEVCDE EQU   @07
TMBSP    EQU   @08
TMBSC    EQU   @09
RTNSAVE  EQU   @09
FLAGS    EQU   @09
TCBPTR   EQU   @11
FRRADDR  EQU   @11
R10      EQU   @10
R12      EQU   @12
R3       EQU   @03
R7       EQU   @07
R9       EQU   @09
         ENTRY IRASECHT
         ENTRY IRARMI10
PSA      EQU   0
FLCRNPSW EQU   PSA
FLCROPSW EQU   PSA+8
FLCICCW2 EQU   PSA+16
FLCCVT   EQU   FLCICCW2
PSAEEPSW EQU   PSA+132
PSAESPSW EQU   PSA+136
FLCSVILC EQU   PSAESPSW+1
PSAEPPSW EQU   PSA+140
FLCPIILC EQU   PSAEPPSW+1
FLCPICOD EQU   PSAEPPSW+2
PSAPICOD EQU   FLCPICOD+1
FLCTEA   EQU   PSAEPPSW+4
FLCPER   EQU   PSA+152
FLCMCLA  EQU   PSA+168
FLCIOEL  EQU   FLCMCLA+4
FLCIOA   EQU   FLCMCLA+16
FLCFSA   EQU   FLCMCLA+80
PSATOLD  EQU   PSA+540
PSAAOLD  EQU   PSA+548
PSASUPER EQU   PSA+552
PSASUP1  EQU   PSASUPER
PSASUP2  EQU   PSASUPER+1
PSASUP3  EQU   PSASUPER+2
PSASUP4  EQU   PSASUPER+3
PSACLHT  EQU   PSA+640
PSALKSA  EQU   PSA+696
PSAHLHI  EQU   PSA+760
PSALITA  EQU   PSA+764
PSADSSFL EQU   PSA+836
PSADSSF1 EQU   PSADSSFL
PSADSSF3 EQU   PSADSSFL+2
PSADSSF4 EQU   PSADSSFL+3
PSARSVT  EQU   PSA+896
PSALSFCC EQU   PSA+1012
RMCT     EQU   0
RMCTTBS  EQU   RMCT+120
RMCTTOD  EQU   RMCT+124
RMCTTOC  EQU   RMCT+128
RMCTRQSV EQU   RMCT+144
RMCTFLGS EQU   RMCT+148
RMCTINIT EQU   RMCTFLGS
RMCTTOCI EQU   RMCT+160
CCT      EQU   RMCT+192
CCTFLG1  EQU   CCT+124
ICT      EQU   RMCT+320
ICTFLAGS EQU   ICT+84
MCT      EQU   RMCT+408
MCTSFLGS EQU   MCT+64
MCTOFLGS EQU   MCT+65
RCT      EQU   RMCT+504
RMPT     EQU   RMCT+592
RMPTTCS  EQU   RMPT+20
RMCA     EQU   RMCT+664
RMCATQS  EQU   RMCA+12
RMCATRS  EQU   RMCA+16
RMCAFLGS EQU   RMCA+36
RMCAMAS  EQU   RMCA+76
RMCASRC  EQU   RMCA+124
RMEX     EQU   RMCT+832
RMEPBEVT EQU   RMEX
RMEXEVT  EQU   RMEPBEVT
RMEPBCTL EQU   RMEX+16
RMEXI01  EQU   RMEX+32
RMEXRR1  EQU   RMEX+48
RMEXRR2  EQU   RMEX+52
RMSB     EQU   RMCT+896
EPAT     EQU   RMCT+1016
EPDT     EQU   RMCT+1416
EPST     EQU   RMCT+1512
RMEPBWM3 EQU   EPST
RMEPBIL3 EQU   EPST+16
RMEPBCL3 EQU   EPST+32
RMEPBCSO EQU   EPST+48
RMEPBCSI EQU   EPST+64
RRPA     EQU   0
RRPAINC  EQU   RRPA
RRPAASD  EQU   RRPAINC
RRPAVPGN EQU   RRPAINC+2
RRPAFLG0 EQU   RRPAVPGN
RRPACOD  EQU   RRPAINC+3
RRPAINP  EQU   RRPA+4
RRPAFLG  EQU   RRPA+8
RRPADSB  EQU   RRPAFLG
RRPAENB  EQU   RRPAFLG
RRPASVC  EQU   RRPAFLG
RRPAOPT  EQU   RRPAFLG
RRPAKEY  EQU   RRPA+10
RRPARTC  EQU   RRPA+11
RRPATOD  EQU   RRPA+12
RRPAINS  EQU   RRPA+16
RRPAEPA  EQU   RRPA+20
ASCB     EQU   0
ASCBSUPC EQU   ASCB+16
ASCBASID EQU   ASCB+36
ASCBRSM  EQU   ASCB+52
ASCBRSMF EQU   ASCBRSM
ASCBFW1  EQU   ASCB+100
ASCBRCTF EQU   ASCBFW1+2
ASCBFLG1 EQU   ASCBFW1+3
ASCBDSP1 EQU   ASCB+114
ASCBFLG2 EQU   ASCB+115
ASCBLKGP EQU   ASCB+128
ASCBOUCB EQU   ASCB+144
ASCBSRQ  EQU   ASCB+180
ASCBSRQ1 EQU   ASCBSRQ
ASCBSRQ2 EQU   ASCBSRQ+1
ASCBSRQ3 EQU   ASCBSRQ+2
ASCBSRQ4 EQU   ASCBSRQ+3
OUCB     EQU   0
OUCBNAME EQU   OUCB
OUCBQFL  EQU   OUCB+16
OUCBSFL  EQU   OUCB+17
OUCBINV  EQU   OUCBSFL
OUCBYFL  EQU   OUCB+18
OUCBAFL  EQU   OUCB+19
OUCBTFL  EQU   OUCB+20
OUCBEFL  EQU   OUCB+21
OUCBUFL  EQU   OUCB+23
OUCBCSW  EQU   OUCB+84
OUCBCFL  EQU   OUCBCSW+2
OUCBPSS  EQU   OUCB+112
OUXB     EQU   0
ASVT     EQU   0
ASVTMAXU EQU   ASVT+516
ASVTFRST EQU   ASVT+524
ASVTENTY EQU   ASVT+528
RQSV     EQU   0
RQSVDATA EQU   RQSV
RQSVPGSC EQU   RQSVDATA+8
CVTMAP   EQU   0
CVT      EQU   CVTMAP
CVTDAR   EQU   CVTMAP+72
CVTFLGS1 EQU   CVTDAR
CVTDCB   EQU   CVTMAP+116
CVTIOQET EQU   CVTMAP+120
CVTIERLC EQU   CVTMAP+144
CVTHEAD  EQU   CVTMAP+160
CVTSV76C EQU   CVTHEAD
CVTOPTA  EQU   CVTMAP+182
CVTOPTB  EQU   CVTMAP+183
CVTGTF   EQU   CVTMAP+236
CVTGTFST EQU   CVTGTF
CVTGTFS  EQU   CVTGTFST
CVTSTATE EQU   CVTGTFST
CVTTMODE EQU   CVTGTFST
CVTFORM  EQU   CVTGTFST
CVTAQAVT EQU   CVTMAP+240
CVTTCMFG EQU   CVTAQAVT
CVTVOLM2 EQU   CVTMAP+244
CVTTATA  EQU   CVTVOLM2
CVTTSKS  EQU   CVTTATA
CVTVOLF2 EQU   CVTTSKS
CVTTAT   EQU   CVTTATA+1
CVTATER  EQU   CVTMAP+248
CVTEXT1  EQU   CVTMAP+252
CVTPURG  EQU   CVTMAP+260
CVTQMSG  EQU   CVTMAP+268
CVTDMSR  EQU   CVTMAP+272
CVTRSV37 EQU   CVTDMSR
CVTDMSRF EQU   CVTRSV37
CVTERPV  EQU   CVTMAP+316
CVTINTLA EQU   CVTMAP+320
CVTAPF   EQU   CVTMAP+324
CVTEXT2  EQU   CVTMAP+328
CVTHJES  EQU   CVTMAP+332
CVTPGSIA EQU   CVTMAP+348
CVTA1F1  EQU   CVTMAP+356
CVTSYSK  EQU   CVTMAP+357
CVTVOLM1 EQU   CVTMAP+380
CVTVOLF1 EQU   CVTVOLM1
CVTATMCT EQU   CVTMAP+388
CVTXTNT1 EQU   0
CVTXTNT2 EQU   0
CVTDSSV  EQU   CVTXTNT2
CVTFLGBT EQU   CVTXTNT2+5
CVTQID   EQU   CVTXTNT2+24
CVTRV400 EQU   CVTXTNT2+52
CVTRV409 EQU   CVTXTNT2+53
CVTATCVT EQU   CVTXTNT2+64
CVTRV429 EQU   CVTXTNT2+84
CVTRV438 EQU   CVTXTNT2+85
CVTRV457 EQU   CVTXTNT2+112
CVTRV466 EQU   CVTXTNT2+113
CVTFIX   EQU   0
CVTRELNO EQU   CVTFIX+252
SECHTNTR EQU   0
SECHLOCK EQU   SECHTNTR
SECHSTAT EQU   SECHTNTR
SECHASID EQU   SECHTNTR
SECHOBID EQU   SECHTNTR
SECHINIT EQU   SECHTNTR
IRARMNTR EQU   0
IRARMRTN EQU   0
CVTS01   EQU   CVTPGSIA
CVTLPDIA EQU   CVTS01+12
CVTDIRST EQU   CVTLPDIA
CVTSLIDA EQU   CVTS01+24
CVTCTLFG EQU   CVTS01+50
CVTASVT  EQU   CVTS01+208
CVTOPCTP EQU   CVTS01+256
CVTRV210 EQU   CVTS01+424
CVTRV219 EQU   CVTS01+425
CVTRV228 EQU   CVTS01+426
CVTRV237 EQU   CVTS01+427
CVTMFRTR EQU   CVTS01+452
CVTRV262 EQU   CVTS01+468
CVTRV271 EQU   CVTS01+469
CVTRV280 EQU   CVTS01+470
CVTRV289 EQU   CVTS01+471
CVTGSDA  EQU   CVTS01+600
ASVTPTR  EQU   CVTASVT
RQSVPTR  EQU   RMCTRQSV
CVTPTR   EQU   FLCCVT
FLC      EQU   PSA
PSARSVTE EQU   PSARSVT
PSACSTK  EQU   PSARSVTE
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
PSARSAV  EQU   PSARSVTE+60
PSARSTK  EQU   PSARSVTE+56
PSAESAV3 EQU   PSARSVTE+52
PSAESTK3 EQU   PSARSVTE+48
PSAESAV2 EQU   PSARSVTE+44
PSAESTK2 EQU   PSARSVTE+40
PSAESAV1 EQU   PSARSVTE+36
PSAESTK1 EQU   PSARSVTE+32
PSAPSAV  EQU   PSARSVTE+28
PSAPSTK  EQU   PSARSVTE+24
PSAMSAV  EQU   PSARSVTE+20
PSAMSTK  EQU   PSARSVTE+16
PSASSAV  EQU   PSARSVTE+12
PSASSTK  EQU   PSARSVTE+8
PSANSTK  EQU   PSARSVTE+4
CVTRV628 EQU   CVTS01+728
CVTRV627 EQU   CVTS01+724
CVTRV626 EQU   CVTS01+720
CVTRV625 EQU   CVTS01+716
CVTRV624 EQU   CVTS01+712
CVTRV623 EQU   CVTS01+708
CVTRV622 EQU   CVTS01+704
CVTRV621 EQU   CVTS01+700
CVTIHASU EQU   CVTS01+696
CVTSUSP  EQU   CVTS01+692
CVTT6SVC EQU   CVTS01+688
CVTCDAL  EQU   CVTS01+684
CVTTCTL  EQU   CVTS01+680
CVTRSUME EQU   CVTS01+676
CVTJTERM EQU   CVTS01+672
CVTASMRM EQU   CVTS01+668
CVTTCASP EQU   CVTS01+664
CVT0PT03 EQU   CVTS01+660
CVT0PT0E EQU   CVTS01+656
CVTRV609 EQU   CVTS01+652
CVTCGK   EQU   CVTS01+648
CVTRAC   EQU   CVTS01+644
CVTHSM   EQU   CVTS01+640
CVTRV605 EQU   CVTS01+636
CVTRV604 EQU   CVTS01+632
CVTEFF02 EQU   CVTS01+628
CVTCBBR  EQU   CVTS01+624
CVTSSCR  EQU   CVTS01+620
CVTEVENT EQU   CVTS01+616
CVTCRCA  EQU   CVTS01+612
CVTTPIO  EQU   CVTS01+608
CVTADV   EQU   CVTS01+604
CVTGSDAB EQU   CVTGSDA
CVTQV3   EQU   CVTS01+596
CVTQV2   EQU   CVTS01+592
CVTQV1   EQU   CVTS01+588
CVTRPT   EQU   CVTS01+584
CVTSSRB  EQU   CVTS01+580
CVTCSDRL EQU   CVTS01+576
CVTEXP1  EQU   CVTS01+572
CVTRMPMT EQU   CVTS01+568
CVTRMPTT EQU   CVTS01+564
CVTVPSA  EQU   CVTS01+560
CVTVSTOP EQU   CVTS01+556
CVTGTFR8 EQU   CVTS01+552
CVTQUIT  EQU   CVTS01+548
CVTVACR  EQU   CVTS01+544
CVTWTCB  EQU   CVTS01+540
CVTSTPRS EQU   CVTS01+536
CVT0PT02 EQU   CVTS01+532
CVTDARCM EQU   CVTS01+528
CVTIRECM EQU   CVTS01+524
CVTJRECM EQU   CVTS01+520
CVTVEMS0 EQU   CVTS01+516
CVTSPFRR EQU   CVTS01+512
CVTRLSTG EQU   CVTS01+508
CVT0TC0A EQU   CVTS01+504
CVTGMBR  EQU   CVTS01+500
CVTLFRM  EQU   CVTS01+496
CVTRMBR  EQU   CVTS01+492
CVTVIOP  EQU   CVTS01+488
CVTRV307 EQU   CVTS01+486
CVTRV306 EQU   CVTS01+484
CVTRV305 EQU   CVTS01+482
CVTRV304 EQU   CVTS01+480
CVTRV303 EQU   CVTS01+478
CVTRV302 EQU   CVTS01+476
CVTTRCA  EQU   CVTS01+472
CVTRV297 EQU   CVTRV289
CVTRV296 EQU   CVTRV289
CVTRV295 EQU   CVTRV289
CVTRV294 EQU   CVTRV289
CVTRV293 EQU   CVTRV289
CVTRV292 EQU   CVTRV289
CVTRV291 EQU   CVTRV289
CVTRV290 EQU   CVTRV289
CVTRV288 EQU   CVTRV280
CVTRV287 EQU   CVTRV280
CVTRV286 EQU   CVTRV280
CVTRV285 EQU   CVTRV280
CVTRV284 EQU   CVTRV280
CVTRV283 EQU   CVTRV280
CVTRV282 EQU   CVTRV280
CVTRV281 EQU   CVTRV280
CVTRV279 EQU   CVTRV271
CVTRV278 EQU   CVTRV271
CVTRV277 EQU   CVTRV271
CVTRV276 EQU   CVTRV271
CVTRV275 EQU   CVTRV271
CVTRV274 EQU   CVTRV271
CVTRV273 EQU   CVTRV271
CVTRV272 EQU   CVTRV271
CVTRV270 EQU   CVTRV262
CVTRV269 EQU   CVTRV262
CVTRV268 EQU   CVTRV262
CVTRV267 EQU   CVTRV262
CVTRV266 EQU   CVTRV262
CVTRV265 EQU   CVTRV262
CVTRV264 EQU   CVTRV262
CVTRV263 EQU   CVTRV262
CVTVFP   EQU   CVTS01+464
CVTVSI   EQU   CVTS01+460
CVTVPSIB EQU   CVTS01+456
CVTMFACT EQU   CVTMFRTR
CVTMFCTL EQU   CVTS01+448
CVTPVBP  EQU   CVTS01+444
CVTPWI   EQU   CVTS01+440
CVTRV254 EQU   CVTS01+438
CVTRV253 EQU   CVTS01+436
CVTRV252 EQU   CVTS01+434
CVTRV251 EQU   CVTS01+433
CVTRV250 EQU   CVTS01+432
CVTRV249 EQU   CVTS01+431
CVTRV248 EQU   CVTS01+430
CVTRV247 EQU   CVTS01+429
CVTRV246 EQU   CVTS01+428
CVTRV245 EQU   CVTRV237
CVTRV244 EQU   CVTRV237
CVTRV243 EQU   CVTRV237
CVTRV242 EQU   CVTRV237
CVTRV241 EQU   CVTRV237
CVTRV240 EQU   CVTRV237
CVTRV239 EQU   CVTRV237
CVTRV238 EQU   CVTRV237
CVTRV236 EQU   CVTRV228
CVTRV235 EQU   CVTRV228
CVTRV234 EQU   CVTRV228
CVTRV233 EQU   CVTRV228
CVTRV232 EQU   CVTRV228
CVTRV231 EQU   CVTRV228
CVTRV230 EQU   CVTRV228
CVTRV229 EQU   CVTRV228
CVTRV227 EQU   CVTRV219
CVTRV226 EQU   CVTRV219
CVTRV225 EQU   CVTRV219
CVTRV224 EQU   CVTRV219
CVTRV223 EQU   CVTRV219
CVTRV222 EQU   CVTRV219
CVTRV221 EQU   CVTRV219
CVTRV220 EQU   CVTRV219
CVTRV218 EQU   CVTRV210
CVTRV217 EQU   CVTRV210
CVTRV216 EQU   CVTRV210
CVTRV215 EQU   CVTRV210
CVTRV214 EQU   CVTRV210
CVTRV213 EQU   CVTRV210
CVTRV212 EQU   CVTRV210
CVTRV211 EQU   CVTRV210
CVTLCCAT EQU   CVTS01+420
CVTPCCAT EQU   CVTS01+416
CVTIPCRP EQU   CVTS01+412
CVTIPCRI EQU   CVTS01+408
CVTIPCDS EQU   CVTS01+404
CVTAIDVT EQU   CVTS01+400
CVTSSAP  EQU   CVTS01+396
CVTEHCIR EQU   CVTS01+392
CVTEHDEF EQU   CVTS01+388
CVTDAIR  EQU   CVTS01+384
CVTPERFM EQU   CVTS01+380
CVT044R2 EQU   CVTS01+376
CVTFETCH EQU   CVTS01+372
CVTRSTWD EQU   CVTS01+368
CVTSPOST EQU   CVTS01+364
CVTIOBP  EQU   CVTS01+360
CVTASMVT EQU   CVTS01+356
CVTRECRQ EQU   CVTS01+352
CVTWSAC  EQU   CVTS01+348
CVTRV149 EQU   CVTS01+344
CVTWSAL  EQU   CVTS01+340
CVTSPSA  EQU   CVTS01+336
CVTGLMN  EQU   CVTS01+332
CVTVEAC0 EQU   CVTS01+328
CVT062R1 EQU   CVTS01+324
CVTRPOST EQU   CVTS01+320
CVTDQIQE EQU   CVTS01+316
CVTCSD   EQU   CVTS01+312
CVTLKRMA EQU   CVTS01+308
CVTRSPIE EQU   CVTS01+304
CVTRENQ  EQU   CVTS01+300
CVTLQCB  EQU   CVTS01+296
CVTFQCB  EQU   CVTS01+292
CVTQCS01 EQU   CVTS01+288
CVTAPFT  EQU   CVTS01+284
CVTPARRL EQU   CVTS01+280
CVTVWAIT EQU   CVTS01+276
CVTGSPL  EQU   CVTS01+272
CVTLSMQ  EQU   CVTS01+268
CVTGSMQ  EQU   CVTS01+264
CVTEXPRO EQU   CVTS01+260
CVTSIC   EQU   CVTS01+252
CVTTPIOS EQU   CVTS01+248
CVTRTMS  EQU   CVTS01+244
CVTSDBF  EQU   CVTS01+240
CVTSCBP  EQU   CVTS01+236
CVTSDMP  EQU   CVTS01+232
CVTSV60  EQU   CVTS01+228
CVTRTMCT EQU   CVTS01+224
CVTASCBL EQU   CVTS01+220
CVTASCBH EQU   CVTS01+216
CVTGDA   EQU   CVTS01+212
CVTVVMDI EQU   CVTS01+204
CVTAQTOP EQU   CVTS01+200
CVTIOSCS EQU   CVTS01+196
CVTSDRM  EQU   CVTS01+192
CVTOPTE  EQU   CVTS01+188
CVTSTXU  EQU   CVTS01+184
CVTQUIS  EQU   CVTS01+180
CVTPARS  EQU   CVTS01+176
CVTS1EE  EQU   CVTS01+172
CVTFRAS  EQU   CVTS01+168
CVTQSAS  EQU   CVTS01+164
CVTCRAS  EQU   CVTS01+160
CVTCRMN  EQU   CVTS01+156
CVTDELCP EQU   CVTS01+152
CVTFRECL EQU   CVTS01+148
CVTGETCL EQU   CVTS01+144
CVTBLDCP EQU   CVTS01+140
CVTAUTHL EQU   CVTS01+136
CVTSCAN  EQU   CVTS01+132
CVTRV144 EQU   CVTS01+130
CVTMAXMP EQU   CVTS01+128
CVTSTCK  EQU   CVTS01+124
CVTRV139 EQU   CVTS01+123
CVTDSSAC EQU   CVTS01+122
CVTRV513 EQU   CVTS01+121
CVTIOSPL EQU   CVTS01+120
CVTPTGT  EQU   CVTS01+116
CVTCSPIE EQU   CVTS01+112
CVTSMFEX EQU   CVTS01+108
CVTOLT0A EQU   CVTS01+104
CVTSRBRT EQU   CVTS01+100
CVTPUTL  EQU   CVTS01+96
CVTASCRL EQU   CVTS01+92
CVTASCRF EQU   CVTS01+88
CVTRV326 EQU   CVTS01+84
CVTRV325 EQU   CVTS01+80
CVTRV324 EQU   CVTS01+76
CVT0VL01 EQU   CVTS01+72
CVTSHRVM EQU   CVTS01+68
CVTRV332 EQU   CVTS01+64
CVTTAS   EQU   CVTS01+60
CVTRSCN  EQU   CVTS01+56
CVTTRAC2 EQU   CVTS01+54
CVTTRACE EQU   CVTS01+52
CVTAPG   EQU   CVTS01+51
CVTSDTRC EQU   CVTCTLFG
CVTGTRCE EQU   CVTCTLFG
CVTNOMP  EQU   CVTCTLFG
CVTRSV79 EQU   CVTCTLFG
CVTDSTAT EQU   CVTCTLFG
CVTRSV78 EQU   CVTCTLFG
CVTRV333 EQU   CVTCTLFG
CVTRV323 EQU   CVTCTLFG
CVTSPVLK EQU   CVTS01+49
CVTRSV77 EQU   CVTS01+48
CVTRV331 EQU   CVTS01+44
CVTRV330 EQU   CVTS01+40
CVTRV329 EQU   CVTS01+36
CVTRV328 EQU   CVTS01+32
CVTRV322 EQU   CVTS01+28
CVTSLID  EQU   CVTSLIDA+1
CVTSYLK  EQU   CVTSLIDA
CVTRV321 EQU   CVTS01+20
CVTRV320 EQU   CVTS01+16
CVTLPDIR EQU   CVTLPDIA+1
CVTRSV69 EQU   CVTDIRST
CVTRSV68 EQU   CVTDIRST
CVTRSV67 EQU   CVTDIRST
CVTRSV66 EQU   CVTDIRST
CVTRSV65 EQU   CVTDIRST
CVTRSV64 EQU   CVTDIRST
CVTRSV63 EQU   CVTDIRST
CVTDICOM EQU   CVTDIRST
CVTPVTP  EQU   CVTS01+8
CVTLPDSR EQU   CVTS01+4
CVTGETL  EQU   CVTS01
@NM00030 EQU   SECHTNTR
SECHENTR EQU   SECHTNTR
SECHVALD EQU   SECHTNTR
CVTLEVL  EQU   CVTRELNO+2
CVTNUMB  EQU   CVTRELNO
CVTMDL   EQU   CVTFIX+250
@NM00005 EQU   CVTFIX+248
@NM00004 EQU   CVTFIX
CVTRV482 EQU   CVTXTNT2+128
CVTRV481 EQU   CVTXTNT2+124
CVTRV480 EQU   CVTXTNT2+120
CVTRV479 EQU   CVTXTNT2+118
CVTRV478 EQU   CVTXTNT2+117
CVTRV477 EQU   CVTXTNT2+116
CVTRV476 EQU   CVTXTNT2+115
CVTRV475 EQU   CVTXTNT2+114
CVTRV474 EQU   CVTRV466
CVTRV473 EQU   CVTRV466
CVTRV472 EQU   CVTRV466
CVTRV471 EQU   CVTRV466
CVTRV470 EQU   CVTRV466
CVTRV469 EQU   CVTRV466
CVTRV468 EQU   CVTRV466
CVTRV467 EQU   CVTRV466
CVTRV465 EQU   CVTRV457
CVTRV464 EQU   CVTRV457
CVTRV463 EQU   CVTRV457
CVTRV462 EQU   CVTRV457
CVTRV461 EQU   CVTRV457
CVTRV460 EQU   CVTRV457
CVTRV459 EQU   CVTRV457
CVTRV458 EQU   CVTRV457
CVTRV456 EQU   CVTXTNT2+108
CVTRV455 EQU   CVTXTNT2+104
CVTRV454 EQU   CVTXTNT2+100
CVTRV453 EQU   CVTXTNT2+96
CVTRV452 EQU   CVTXTNT2+94
CVTRV451 EQU   CVTXTNT2+92
CVTRV450 EQU   CVTXTNT2+90
CVTRV449 EQU   CVTXTNT2+88
CVTRV448 EQU   CVTXTNT2+87
CVTRV447 EQU   CVTXTNT2+86
CVTRV446 EQU   CVTRV438
CVTRV445 EQU   CVTRV438
CVTRV444 EQU   CVTRV438
CVTRV443 EQU   CVTRV438
CVTRV442 EQU   CVTRV438
CVTRV441 EQU   CVTRV438
CVTRV440 EQU   CVTRV438
CVTRV439 EQU   CVTRV438
CVTRV437 EQU   CVTRV429
CVTRV436 EQU   CVTRV429
CVTRV435 EQU   CVTRV429
CVTRV434 EQU   CVTRV429
CVTRV433 EQU   CVTRV429
CVTRV432 EQU   CVTRV429
CVTRV431 EQU   CVTRV429
CVTRV430 EQU   CVTRV429
CVTRV428 EQU   CVTXTNT2+80
CVTRV427 EQU   CVTXTNT2+76
CVTRV426 EQU   CVTXTNT2+72
CVTRV425 EQU   CVTXTNT2+68
CVTATACT EQU   CVTATCVT
CVTRV423 EQU   CVTXTNT2+62
CVTRV422 EQU   CVTXTNT2+60
CVTRV421 EQU   CVTXTNT2+58
CVTRV420 EQU   CVTXTNT2+56
CVTRV419 EQU   CVTXTNT2+55
CVTRV418 EQU   CVTXTNT2+54
CVTRV417 EQU   CVTRV409
CVTRV416 EQU   CVTRV409
CVTRV415 EQU   CVTRV409
CVTRV414 EQU   CVTRV409
CVTRV413 EQU   CVTRV409
CVTRV412 EQU   CVTRV409
CVTRV411 EQU   CVTRV409
CVTRV410 EQU   CVTRV409
CVTRV408 EQU   CVTRV400
CVTRV407 EQU   CVTRV400
CVTRV406 EQU   CVTRV400
CVTRV405 EQU   CVTRV400
CVTRV404 EQU   CVTRV400
CVTRV403 EQU   CVTRV400
CVTRV402 EQU   CVTRV400
CVTRV401 EQU   CVTRV400
CVTICB   EQU   CVTXTNT2+48
CVTSKTA  EQU   CVTXTNT2+44
CVTCCVT  EQU   CVTXTNT2+40
CVTRSV98 EQU   CVTXTNT2+36
CVTRSV97 EQU   CVTXTNT2+34
CVTRSV96 EQU   CVTXTNT2+32
CVTOLTEP EQU   CVTXTNT2+28
CVTQIDA  EQU   CVTQID+1
CVTRSV95 EQU   CVTQID
CVTRSV94 EQU   CVTXTNT2+20
CVTRSV93 EQU   CVTXTNT2+16
CVTRSV92 EQU   CVTXTNT2+12
CVTDEBVR EQU   CVTXTNT2+8
CVTRSV91 EQU   CVTXTNT2+6
CVTRSV9H EQU   CVTFLGBT
CVTRSV9G EQU   CVTFLGBT
CVTRSV9F EQU   CVTFLGBT
CVTRSV9E EQU   CVTFLGBT
CVTRSV9D EQU   CVTFLGBT
CVTRSV9C EQU   CVTFLGBT
CVTVME   EQU   CVTFLGBT
CVTNPE   EQU   CVTFLGBT
CVTNUCLS EQU   CVTXTNT2+4
CVTDSSVA EQU   CVTDSSV+1
CVTRSV89 EQU   CVTDSSV
CVTRSV88 EQU   CVTXTNT1+8
CVTRSV87 EQU   CVTXTNT1+4
CVTFACHN EQU   CVTXTNT1
CVTRV488 EQU   CVTMAP+412
CVTRV487 EQU   CVTMAP+408
CVTRV486 EQU   CVTMAP+404
CVTRV485 EQU   CVTMAP+400
CVTACTAP EQU   CVTMAP+396
CVTAUTH  EQU   CVTMAP+392
CVTATMCA EQU   CVTATMCT+1
CVTATMST EQU   CVTATMCT
CVTRSV61 EQU   CVTMAP+384
CVTVOLT1 EQU   CVTVOLM1+1
CVTVOLI1 EQU   CVTVOLF1
CVTSTOA  EQU   CVTMAP+376
CVTRSV58 EQU   CVTMAP+374
CVTRSV57 EQU   CVTMAP+372
CVTDDCE  EQU   CVTMAP+368
CVTPNWFR EQU   CVTMAP+364
CVTSMF   EQU   CVTMAP+360
CVTSULK  EQU   CVTMAP+358
CVTSLKO  EQU   CVTSYSK
CVTSLKP  EQU   CVTSYSK
CVTSLKQ  EQU   CVTSYSK
CVTSLKR  EQU   CVTSYSK
CVTRSV56 EQU   CVTSYSK
CVTRSV55 EQU   CVTSYSK
CVTRSV54 EQU   CVTSYSK
CVTRSV53 EQU   CVTSYSK
CVTRSV52 EQU   CVTA1F1
CVTRSV51 EQU   CVTA1F1
CVTRSV50 EQU   CVTA1F1
CVTRSV49 EQU   CVTA1F1
CVTRSV48 EQU   CVTA1F1
CVTRSV47 EQU   CVTA1F1
CVTSRSW  EQU   CVTA1F1
CVTPFSW  EQU   CVTA1F1
CVTPCVT  EQU   CVTMAP+352
CVTRSV46 EQU   CVTMAP+344
CVTRSV45 EQU   CVTMAP+340
CVTRSV44 EQU   CVTMAP+338
CVTRSV43 EQU   CVTMAP+336
CVTHJESA EQU   CVTHJES+1
CVTRSV42 EQU   CVTHJES
CVTEXT2A EQU   CVTEXT2+1
CVTRSV41 EQU   CVTEXT2
CVTAPFA  EQU   CVTAPF+1
CVTRSV40 EQU   CVTAPF
CVTRV518 EQU   CVTINTLA
CVTRV517 EQU   CVTERPV
CVTEORM  EQU   CVTMAP+312
CVTMCHPR EQU   CVTMAP+308
CVTTZ    EQU   CVTMAP+304
CVTJEPS  EQU   CVTMAP+300
CVTJESCT EQU   CVTMAP+296
CVTMODE  EQU   CVTMAP+292
CVTPTRV  EQU   CVTMAP+288
CVTREAL  EQU   CVTMAP+284
CVTRSV39 EQU   CVTMAP+280
CVTRSV38 EQU   CVTMAP+276
CVTDMSRA EQU   CVTDMSR+1
CVTRV634 EQU   CVTDMSRF
CVTRV633 EQU   CVTDMSRF
CVTRV632 EQU   CVTDMSRF
CVTRV631 EQU   CVTDMSRF
CVTRV630 EQU   CVTDMSRF
CVTRV629 EQU   CVTDMSRF
CVTUDUMP EQU   CVTDMSRF
CVTSDUMP EQU   CVTDMSRF
CVTQMSGA EQU   CVTQMSG+1
CVTRSV36 EQU   CVTQMSG
CVTAMFF  EQU   CVTMAP+264
CVTPURGA EQU   CVTPURG+1
CVTRSV35 EQU   CVTPURG
CVTCBSP  EQU   CVTMAP+256
CVTATERA EQU   CVTATER+1
CVTSYST  EQU   CVTATER
CVTVOLT2 EQU   CVTTAT
CVTVOLI2 EQU   CVTVOLF2
CVTAQAVB EQU   CVTAQAVT+1
CVTRSV34 EQU   CVTTCMFG
CVTRSV33 EQU   CVTTCMFG
CVTRSV32 EQU   CVTTCMFG
CVTRSV31 EQU   CVTTCMFG
CVTRSV30 EQU   CVTTCMFG
CVTRSV29 EQU   CVTTCMFG
CVTLDEV  EQU   CVTTCMFG
CVTTCRDY EQU   CVTTCMFG
CVTGTFA  EQU   CVTGTF+1
CVTRSV27 EQU   CVTGTFST
CVTRNIO  EQU   CVTGTFST
CVTUSR   EQU   CVTGTFST
CVTRV318 EQU   CVTFORM
CVTRV317 EQU   CVTTMODE
CVTRV316 EQU   CVTSTATE
CVTRV315 EQU   CVTGTFS
CVTGTFAV EQU   CVTGTFS
CVT0SCR1 EQU   CVTMAP+232
CVTRV515 EQU   CVTMAP+228
CVTRMS   EQU   CVTMAP+224
CVTPATCH EQU   CVTMAP+220
CVTTSCE  EQU   CVTMAP+216
CVTLNKSC EQU   CVTMAP+214
CVTQABST EQU   CVTMAP+212
CVTMDLDS EQU   CVTMAP+208
CVTUSER  EQU   CVTMAP+204
CVTABEND EQU   CVTMAP+200
CVTSMCA  EQU   CVTMAP+196
CVTRSV18 EQU   CVTMAP+192
CVTQLPAQ EQU   CVTMAP+188
CVTQCDSR EQU   CVTMAP+184
CVTRSV17 EQU   CVTOPTB
CVTRSV16 EQU   CVTOPTB
CVTFP    EQU   CVTOPTB
CVTAPTHR EQU   CVTOPTB
CVTNLOG  EQU   CVTOPTB
CVTTOD   EQU   CVTOPTB
CVTCTIMS EQU   CVTOPTB
CVTPROT  EQU   CVTOPTB
CVTXPFP  EQU   CVTOPTA
CVTASCII EQU   CVTOPTA
CVTRSV13 EQU   CVTOPTA
CVTRSV12 EQU   CVTOPTA
CVTNIP   EQU   CVTOPTA
CVTDDR   EQU   CVTOPTA
CVTAPR   EQU   CVTOPTA
CVTCCH   EQU   CVTOPTA
CVTSNCTR EQU   CVTMAP+180
CVTQMWR  EQU   CVTMAP+176
CVTQOCR  EQU   CVTMAP+172
CVT1EF00 EQU   CVTMAP+168
CVTMZ00  EQU   CVTMAP+164
CVTSV76Q EQU   CVTSV76C
CVTRSV11 EQU   CVTMAP+156
CVT0PT01 EQU   CVTMAP+152
CVTMSER  EQU   CVTMAP+148
CVTRV516 EQU   CVTIERLC
CVTILCH  EQU   CVTMAP+140
CVT0DS   EQU   CVTMAP+136
CVTFBOSV EQU   CVTMAP+132
CVTNUCB  EQU   CVTMAP+128
CVTIXAVL EQU   CVTMAP+124
CVTSV76M EQU   CVTIOQET
CVTDCBA  EQU   CVTMAP+117
CVTMVS2  EQU   CVTDCB
CVT6DAT  EQU   CVTDCB
CVT4MPS  EQU   CVTDCB
CVTRSV09 EQU   CVTDCB
CVT4MS1  EQU   CVTDCB
CVT2SPS  EQU   CVTDCB
CVT1SSS  EQU   CVTDCB
CVTRSV08 EQU   CVTDCB
CVTSTB   EQU   CVTMAP+112
CVTQTD00 EQU   CVTMAP+108
CVTQTE00 EQU   CVTMAP+104
CVTCUCB  EQU   CVTMAP+100
CVTSJQ   EQU   CVTMAP+96
CVTPBLDL EQU   CVTMAP+92
CVTTPC   EQU   CVTMAP+88
CVTSVDCB EQU   CVTMAP+84
CVTBRET  EQU   CVTMAP+82
CVTEXIT  EQU   CVTMAP+80
CVT0FN00 EQU   CVTMAP+76
CVTDARA  EQU   CVTDAR+1
CVTRSV07 EQU   CVTFLGS1
CVTRSV06 EQU   CVTFLGS1
CVTRSV05 EQU   CVTFLGS1
CVTRSV04 EQU   CVTFLGS1
CVTRSV03 EQU   CVTFLGS1
CVTRSV02 EQU   CVTFLGS1
CVTRSV01 EQU   CVTFLGS1
CVTDMPLK EQU   CVTFLGS1
CVTXITP  EQU   CVTMAP+68
CVTZDTAB EQU   CVTMAP+64
CVTMSLT  EQU   CVTMAP+60
CVTDATE  EQU   CVTMAP+56
CVTBTERM EQU   CVTMAP+52
CVTSYSAD EQU   CVTMAP+48
CVTXTLER EQU   CVTMAP+44
CVTILK2  EQU   CVTMAP+40
CVTILK1  EQU   CVTMAP+36
CVTPRLTV EQU   CVTMAP+32
CVTPCNVT EQU   CVTMAP+28
CVT0VL00 EQU   CVTMAP+24
CVTXAPG  EQU   CVTMAP+20
CVTBUF   EQU   CVTMAP+16
CVTJOB   EQU   CVTMAP+12
CVTLINK  EQU   CVTMAP+8
CVT0EF00 EQU   CVTMAP+4
CVTTCBP  EQU   CVTMAP
RQSVEND  EQU   RQSV+20
RQSVRSV  EQU   RQSV+16
RQSVSRT  EQU   RQSVDATA+12
RQSVTRC  EQU   RQSVPGSC+2
RQSVPGN  EQU   RQSVPGSC
RQSVTIM  EQU   RQSVDATA+4
RQSVSRV  EQU   RQSVDATA
ASVTEND  EQU   ASVT+528
ASVTAVAL EQU   ASVTENTY
ASVTAVAI EQU   ASVTFRST
ASVTRS00 EQU   ASVT+520
ASVTASVT EQU   ASVT+512
ASVTBEGN EQU   ASVT+512
@NM00003 EQU   ASVT
OUXBEND  EQU   OUXB+144
OUXBTSW  EQU   OUXB+140
OUXBFIXC EQU   OUXB+138
OUXBNVC  EQU   OUXB+136
OUXBUIC  EQU   OUXB+134
OUXBVSC  EQU   OUXB+132
OUXBILS  EQU   OUXB+128
OUXBRSV1 EQU   OUXB+126
OUXBWCT  EQU   OUXB+124
OUXBPRS  EQU   OUXB+120
OUXBSTD  EQU   OUXB+116
OUXBITD  EQU   OUXB+112
OUXBMSS  EQU   OUXB+104
OUXBCPS  EQU   OUXB+96
OUXBAET  EQU   OUXB+92
OUXBTRR  EQU   OUXB+88
OUXBJBR  EQU   OUXB+84
OUXBTRT  EQU   OUXB+80
OUXBTRS  EQU   OUXB+76
OUXBJBT  EQU   OUXB+72
OUXBJBS  EQU   OUXB+68
OUXBTRC  EQU   OUXB+64
OUXBNQT  EQU   OUXB+60
OUXBIOSM EQU   OUXB+56
OUXBSTC  EQU   OUXB+54
OUXBIOS  EQU   OUXB+52
OUXBSTCT EQU   OUXB+48
OUXBCAPR EQU   OUXB+44
OUXBCAPI EQU   OUXB+40
OUXBVAMR EQU   OUXB+36
OUXBVAMO EQU   OUXB+32
OUXBVAMI EQU   OUXB+28
OUXBPREC EQU   OUXB+24
OUXBPOUT EQU   OUXB+20
OUXBPIN  EQU   OUXB+16
OUXBRSW  EQU   OUXB+12
OUXBMET  EQU   OUXB+8
OUXBPET  EQU   OUXB+4
OUXBNAME EQU   OUXB
OUCBEND  EQU   OUCB+136
OUCBNTSP EQU   OUCB+134
OUCBNDS  EQU   OUCB+132
OUCBTIO  EQU   OUCB+128
OUCBTCP  EQU   OUCB+124
OUCBPST  EQU   OUCB+120
OUCBPS2  EQU   OUCBPSS+4
OUCBPS1  EQU   OUCBPSS
OUCBIOSM EQU   OUCB+108
OUCBTMP  EQU   OUCB+104
OUCBR03  EQU   OUCB+102
OUCBIOR  EQU   OUCB+100
OUCBCRV  EQU   OUCB+98
OUCBIRV  EQU   OUCB+96
OUCBWMR  EQU   OUCB+92
OUCBCMRV EQU   OUCB+88
OUCBCF2  EQU   OUCBCFL
OUCBRSM  EQU   OUCBCFL
OUCBRDY  EQU   OUCBCFL
OUCBACN  EQU   OUCBCSW
OUCBACT  EQU   OUCB+80
OUCBWSS  EQU   OUCB+78
OUCBPSO  EQU   OUCB+76
OUCBTMO  EQU   OUCB+72
OUCBTMS  EQU   OUCB+68
OUCBMSO  EQU   OUCB+64
OUCBIOC  EQU   OUCB+60
OUCBCPU  EQU   OUCB+56
OUCBWMS  EQU   OUCB+52
OUCBTMW  EQU   OUCB+48
OUCBIMCB EQU   OUCB+44
OUCBASCB EQU   OUCB+40
OUCBSWC  EQU   OUCB+38
OUCBSRC  EQU   OUCB+37
OUCBDMN  EQU   OUCB+36
OUCBDMO  EQU   OUCB+34
OUCBWMG  EQU   OUCB+32
OUCBPGP  EQU   OUCB+31
OUCBR40  EQU   OUCB+30
OUCBR30  EQU   OUCB+29
OUCBSPG  EQU   OUCB+28
OUCBRDP  EQU   OUCB+27
OUCBNDP  EQU   OUCB+26
OUCBRPG  EQU   OUCB+25
OUCBNPG  EQU   OUCB+24
OUCBUF7  EQU   OUCBUFL
OUCBUF6  EQU   OUCBUFL
OUCBUF5  EQU   OUCBUFL
OUCBTSWC EQU   OUCBUFL
OUCBTSWP EQU   OUCBUFL
OUCBRSWP EQU   OUCBUFL
OUCBJSAS EQU   OUCBUFL
OUCBJSFS EQU   OUCBUFL
OUCBNQC  EQU   OUCB+22
OUCBMWT  EQU   OUCBEFL
OUCBQSC  EQU   OUCBEFL
OUCBQSS  EQU   OUCBEFL
OUCBNQF  EQU   OUCBEFL
OUCBCIM  EQU   OUCBEFL
OUCBOWT  EQU   OUCBEFL
OUCBTRM  EQU   OUCBEFL
OUCBLWT  EQU   OUCBEFL
OUCBINC  EQU   OUCBTFL
OUCBINP  EQU   OUCBTFL
OUCBMAR  EQU   OUCBTFL
OUCBPCH  EQU   OUCBTFL
OUCBRTR  EQU   OUCBTFL
OUCBNTR  EQU   OUCBTFL
OUCBSTR  EQU   OUCBTFL
OUCBATR  EQU   OUCBTFL
OUCBASW  EQU   OUCBAFL
OUCBNWT  EQU   OUCBAFL
OUCBR02  EQU   OUCBAFL
OUCBJSR  EQU   OUCBAFL
OUCBCPL  EQU   OUCBAFL
OUCBRMA  EQU   OUCBAFL
OUCBAPG  EQU   OUCBAFL
OUCBAF0  EQU   OUCBAFL
OUCBFXS  EQU   OUCBYFL
OUCBDTA  EQU   OUCBYFL
OUCBAXS  EQU   OUCBYFL
OUCBPSTR EQU   OUCBYFL
OUCBMNT  EQU   OUCBYFL
OUCBLOG  EQU   OUCBYFL
OUCBSTT  EQU   OUCBYFL
OUCBPSTE EQU   OUCBYFL
OUCBSCN  EQU   OUCBSFL
OUCBENQ  EQU   OUCBSFL
OUCBPVL  EQU   OUCBSFL
OUCBNSWI EQU   OUCBSFL
OUCBBIB  EQU   OUCBSFL
OUCBCTI  EQU   OUCBSFL
OUCBNSW  EQU   OUCBSFL
OUCBQF7  EQU   OUCBQFL
OUCBQF6  EQU   OUCBQFL
OUCBOUT  EQU   OUCBQFL
OUCBOFF  EQU   OUCBQFL
OUCBQF3  EQU   OUCBQFL
OUCBGOB  EQU   OUCBQFL
OUCBGOI  EQU   OUCBQFL
OUCBGOO  EQU   OUCBQFL
OUCBTMA  EQU   OUCB+12
OUCBBCK  EQU   OUCB+8
OUCBFWD  EQU   OUCB+4
ASCBEND  EQU   ASCB+208
ASCBSRBT EQU   ASCB+200
ASCBSWTL EQU   ASCB+196
ASCBRS14 EQU   ASCB+195
ASCBSMCT EQU   ASCB+194
ASCBRS12 EQU   ASCB+192
ASCBPCTT EQU   ASCB+188
ASCBVGTT EQU   ASCB+184
ASCBRV43 EQU   ASCBSRQ4
ASCBRV42 EQU   ASCBSRQ4
ASCBRV41 EQU   ASCBSRQ4
ASCBRV40 EQU   ASCBSRQ4
ASCBRV39 EQU   ASCBSRQ4
ASCBRV38 EQU   ASCBSRQ4
ASCBRV37 EQU   ASCBSRQ4
ASCBRV36 EQU   ASCBSRQ4
ASCBRV35 EQU   ASCBSRQ3
ASCBRV34 EQU   ASCBSRQ3
ASCBRV33 EQU   ASCBSRQ3
ASCBRV32 EQU   ASCBSRQ3
ASCBRV31 EQU   ASCBSRQ3
ASCBRV30 EQU   ASCBSRQ3
ASCBRV29 EQU   ASCBSRQ3
ASCBRV28 EQU   ASCBSRQ3
ASCBRV27 EQU   ASCBSRQ2
ASCBRV26 EQU   ASCBSRQ2
ASCBRV25 EQU   ASCBSRQ2
ASCBRV24 EQU   ASCBSRQ2
ASCBRV23 EQU   ASCBSRQ2
ASCBRV22 EQU   ASCBSRQ2
ASCBRV21 EQU   ASCBSRQ2
ASCBRV20 EQU   ASCBSRQ2
ASCBRV19 EQU   ASCBSRQ1
ASCBRV18 EQU   ASCBSRQ1
ASCBRV17 EQU   ASCBSRQ1
ASCBRV16 EQU   ASCBSRQ1
ASCBRV15 EQU   ASCBSRQ1
ASCBRV14 EQU   ASCBSRQ1
ASCBRV13 EQU   ASCBSRQ1
ASCBSTA  EQU   ASCBSRQ1
ASCBJBNS EQU   ASCB+176
ASCBJBNI EQU   ASCB+172
ASCBMCC  EQU   ASCB+168
ASCBRTWA EQU   ASCB+164
ASCBIQEA EQU   ASCB+160
ASCBXMPQ EQU   ASCB+156
ASCBRS01 EQU   ASCB+154
ASCBFMCT EQU   ASCB+152
ASCBOUXB EQU   ASCB+148
ASCBMECB EQU   ASCB+140
ASCBQECB EQU   ASCB+136
ASCBLSQH EQU   ASCBLKGP+4
ASCBLOCK EQU   ASCBLKGP
ASCBTCBS EQU   ASCB+124
ASCBNVSC EQU   ASCB+122
ASCBVSC  EQU   ASCB+120
ASCBSRBS EQU   ASCB+118
ASCBSSRB EQU   ASCB+116
ASCBRV06 EQU   ASCBFLG2
ASCBRV05 EQU   ASCBFLG2
ASCBRV04 EQU   ASCBFLG2
ASCBSNQS EQU   ASCBFLG2
ASCBS2S  EQU   ASCBFLG2
ASCBCEXT EQU   ASCBFLG2
ASCBPXMT EQU   ASCBFLG2
ASCBXMPT EQU   ASCBFLG2
ASCBRF07 EQU   ASCBDSP1
ASCBRF06 EQU   ASCBDSP1
ASCBRF05 EQU   ASCBDSP1
ASCBRF04 EQU   ASCBDSP1
ASCBRF03 EQU   ASCBDSP1
ASCBRF02 EQU   ASCBDSP1
ASCBFAIL EQU   ASCBDSP1
ASCBNOQ  EQU   ASCBDSP1
ASCBSWCT EQU   ASCB+112
ASCBASXB EQU   ASCB+108
ASCBTMCH EQU   ASCB+104
ASCBNSWP EQU   ASCBFLG1
ASCBTYP1 EQU   ASCBFLG1
ASCBSTND EQU   ASCBFLG1
ASCBABNT EQU   ASCBFLG1
ASCBTERM EQU   ASCBFLG1
ASCBS3S  EQU   ASCBFLG1
ASCBCMSH EQU   ASCBFLG1
ASCBTOFF EQU   ASCBFLG1
ASCBRF01 EQU   ASCBRCTF
ASCBTMLW EQU   ASCBRCTF
ASCBOUT  EQU   ASCBRCTF
ASCBWAIT EQU   ASCBRCTF
ASCBRV08 EQU   ASCBRCTF
ASCBFQU  EQU   ASCBRCTF
ASCBFRS  EQU   ASCBRCTF
ASCBTMNO EQU   ASCBRCTF
ASCBAFFN EQU   ASCBFW1
ASCBDUMP EQU   ASCB+96
ASCBRV44 EQU   ASCB+92
ASCBUBET EQU   ASCB+88
ASCBECB  EQU   ASCB+84
ASCBJSTL EQU   ASCB+80
ASCBEWST EQU   ASCB+72
ASCBEJST EQU   ASCB+64
ASCBTSB  EQU   ASCB+60
ASCBCSCB EQU   ASCB+56
ASCBRSMA EQU   ASCBRSM+1
ASCBRV54 EQU   ASCBRSMF
ASCBRV53 EQU   ASCBRSMF
ASCBRV52 EQU   ASCBRSMF
ASCBRV51 EQU   ASCBRSMF
ASCBVEQR EQU   ASCBRSMF
ASCBN2LP EQU   ASCBRSMF
ASCB1LPU EQU   ASCBRSMF
ASCB2LPU EQU   ASCBRSMF
ASCBLDA  EQU   ASCB+48
ASCBSTOR EQU   ASCB+44
ASCBDP   EQU   ASCB+43
ASCBRV07 EQU   ASCB+42
ASCBIOSM EQU   ASCB+40
ASCBSEQN EQU   ASCB+38
ASCBCPUS EQU   ASCB+32
ASCBSPL  EQU   ASCB+28
ASCBIOSP EQU   ASCB+24
ASCBSYNC EQU   ASCBSUPC+4
ASCBSVRB EQU   ASCBSUPC
ASCBCMSF EQU   ASCB+12
ASCBBWDP EQU   ASCB+8
ASCBFWDP EQU   ASCB+4
ASCBASCB EQU   ASCB
ASCBEGIN EQU   ASCB
RRPAEND  EQU   RRPA+24
RRPARTN  EQU   RRPAINS
RRPARCI  EQU   RRPAFLG+1
RRPARFI  EQU   RRPAFLG+1
RRPARTI  EQU   RRPAFLG+1
RRPACTL  EQU   RRPAFLG+1
RRPAF11  EQU   RRPAFLG+1
RRPAIPS  EQU   RRPAFLG+1
RRPAWAR  EQU   RRPAFLG+1
RRPAF07  EQU   RRPAFLG
RRPAF05  EQU   RRPAFLG
RRPAF04  EQU   RRPAFLG
RRPADSP  EQU   RRPAFLG
RRPAVLU  EQU   RRPAINP
@NM00002 EQU   RRPAFLG0
RRPANSWI EQU   RRPAFLG0
EPSTEND  EQU   EPST+80
EPSTCSI  EQU   RMEPBCSI
EPSTCSO  EQU   RMEPBCSO
EPSTCL3  EQU   RMEPBCL3
EPSTIL3  EQU   RMEPBIL3
EPSTWM3  EQU   RMEPBWM3
EPDTEND  EQU   EPDT+96
RMEPBRPS EQU   EPDT+80
RMEPBHIT EQU   EPDT+64
RMEPBUXB EQU   EPDT+48
RMEPBIL4 EQU   EPDT+32
RMEPBDEL EQU   EPDT+16
RMEPBIPS EQU   EPDT
EPATEND  EQU   EPAT+400
RMEPBPR1 EQU   EPAT+368
RMEPBEQ1 EQU   EPAT+336
RMEPBAP1 EQU   EPAT+304
RMEPBCL1 EQU   EPAT+272
RMEPBWM2 EQU   EPAT+240
RMEPBIL1 EQU   EPAT+208
RMEPBASM EQU   EPAT+176
RMEPBMS2 EQU   EPAT+160
RMEPBPR5 EQU   EPAT+144
RMEPBMS6 EQU   EPAT+112
RMEPBSQA EQU   EPAT+96
RMEPBRM2 EQU   EPAT+64
RMEPBRM1 EQU   EPAT+32
RMEPBCAP EQU   EPAT
RMSBEND  EQU   RMSB+120
RMSBRA9  EQU   RMSB+116
RMSBIL0  EQU   RMSB+112
RMSBCL0  EQU   RMSB+108
RMSBRA6  EQU   RMSB+104
RMSBNOP  EQU   RMSB+100
RMSBSET  EQU   RMSB+96
RMSBWR6  EQU   RMSB+92
RMSBWR4  EQU   RMSB+88
RMSBTRC  EQU   RMSB+84
RMSBWMY  EQU   RMSB+80
RMSBWMR  EQU   RMSB+76
RMSBWMQ  EQU   RMSB+72
RMSBWMO  EQU   RMSB+68
RMSBWMN  EQU   RMSB+64
RMSBWMK  EQU   RMSB+60
RMSBWM4  EQU   RMSB+56
RMSBWM1  EQU   RMSB+52
RMSBWM5  EQU   RMSB+48
RMSBCRY  EQU   RMSB+44
RMSBCRN  EQU   RMSB+40
RMSBCRL  EQU   RMSB+36
RMSBI10  EQU   RMSB+32
RMSBI09  EQU   RMSB+28
RMSBR24  EQU   RMSB+24
RMSBI07  EQU   RMSB+20
RMSBI06  EQU   RMSB+16
RMSBI05  EQU   RMSB+12
RMSBI04  EQU   RMSB+8
RMSBI03  EQU   RMSB+4
RMSBI02  EQU   RMSB
RMEXEND  EQU   RMEX+64
RMEXSRE  EQU   RMEX+60
RMEXXPE  EQU   RMEX+56
RMEXI48  EQU   RMEX+44
RMEXCET  EQU   RMEX+40
RMEXCXX  EQU   RMEX+36
RMEXCTL  EQU   RMEPBCTL
RMCAEND  EQU   RMCA+168
RMCAR90  EQU   RMCA+164
RMCAUSSC EQU   RMCASRC+36
RMCAEXSC EQU   RMCASRC+32
RMCANQSC EQU   RMCASRC+28
RMCARQSC EQU   RMCASRC+24
RMCADWSC EQU   RMCASRC+20
RMCARSSC EQU   RMCASRC+16
RMCAXSSC EQU   RMCASRC+12
RMCALWSC EQU   RMCASRC+8
RMCATISC EQU   RMCASRC+4
RMCATOSC EQU   RMCASRC
RMCACPW1 EQU   RMCA+120
RMCACIUS EQU   RMCA+118
RMCAR14  EQU   RMCA+116
RMCAR13  EQU   RMCA+112
RMCAWKA  EQU   RMCA+80
RMCAR20  EQU   RMCA+74
RMCABCPG EQU   RMCA+73
RMCALGPG EQU   RMCA+72
RMCAISV  EQU   RMCA+70
RMCAR11  EQU   RMCA+68
RMCAINV  EQU   RMCA+64
RMCAR10  EQU   RMCA+60
RMCARSV9 EQU   RMCA+56
RMCACHU  EQU   RMCA+52
RMCACHP  EQU   RMCA+48
RMCARSV8 EQU   RMCA+44
RMCARSV7 EQU   RMCA+40
RMCARSVF EQU   RMCAFLGS
RMCASAAF EQU   RMCAFLGS
RMCARSV5 EQU   RMCA+32
RMCARSV4 EQU   RMCA+28
RMCARSV3 EQU   RMCA+24
RMCATOI  EQU   RMCA+20
RMCARSV2 EQU   RMCA+10
RMCARSV1 EQU   RMCA+8
RMCAINUS EQU   RMCA+6
RMCAR04  EQU   RMCA+4
RMCANAME EQU   RMCA
RMPTEND  EQU   RMPT+72
RMPTOPE  EQU   RMPT+66
RMPTOPI  EQU   RMPT+63
RMPTOPC  EQU   RMPT+60
RMPTIOET EQU   RMPT+56
RMPTCPET EQU   RMPT+52
RMPTWMET EQU   RMPT+48
RMPTSAET EQU   RMPT+44
RMPTXCHT EQU   RMPT+40
RMPTRSV3 EQU   RMPT+38
RMPTRSV2 EQU   RMPT+36
RMPTRSV1 EQU   RMPT+32
RMPTTOL  EQU   RMPT+28
RMPTTOM  EQU   RMPT+24
RMPTIMN  EQU   RMPT+16
RMPTERV  EQU   RMPT+12
RMPTIOC  EQU   RMPT+8
RMPTCPU  EQU   RMPT+4
RMPTNAME EQU   RMPT
RCTEND   EQU   RCT+88
RCVRSVF3 EQU   RCT+84
RCVRSVF2 EQU   RCT+80
RCVTAPAD EQU   RCT+76
RCVRSVF1 EQU   RCT+74
RCVTOTDF EQU   RCT+72
RCVBPTTM EQU   RCT+68
RCVBPTCT EQU   RCT+64
RCVASMQ  EQU   RCT+60
RCVAVQP  EQU   RCT+56
RCVCPUC  EQU   RCT+52
RCVUICC  EQU   RCT+48
RCVPTR   EQU   RCT+46
RCVASMQA EQU   RCT+44
RCVAVQC  EQU   RCT+42
RCVCPUA  EQU   RCT+40
RCVUICA  EQU   RCT+38
RCVCTMC  EQU   RCT+36
RCCRSVF3 EQU   RCT+32
RCCRSVF2 EQU   RCT+28
RCCRSVF1 EQU   RCT+26
RCCLCHRR EQU   RCT+24
RCCLCHUT EQU   RCT+22
RCCTOTUT EQU   RCT+20
RCCASMTH EQU   RCT+18
RCCASMTL EQU   RCT+16
RCCPTRTH EQU   RCT+14
RCCPTRTL EQU   RCT+12
RCCCPUTH EQU   RCT+10
RCCCPUTL EQU   RCT+8
RCCUICTH EQU   RCT+6
RCCUICTL EQU   RCT+4
RCTRCT   EQU   RCT
MCTEND   EQU   MCT+96
MCVRSVF3 EQU   MCT+92
MCVRSVF2 EQU   MCT+88
MCVRSVF1 EQU   MCT+84
MCCINTMX EQU   MCT+80
MCCPR1IN EQU   MCT+76
MCCUICIN EQU   MCT+72
MCCUICBD EQU   MCT+68
MCTRSVB1 EQU   MCT+67
MCTXRSVD EQU   MCT+66
MCTFX2   EQU   MCTOFLGS
MCTFX1   EQU   MCTOFLGS
MCTSMS2  EQU   MCTOFLGS
MCTSMS1  EQU   MCTOFLGS
MCTAMS2  EQU   MCTOFLGS
@NM00001 EQU   MCTOFLGS
MCTASM2  EQU   MCTOFLGS
MCTASM1  EQU   MCTOFLGS
MCTSF04  EQU   MCTSFLGS
MCTFAVQ  EQU   MCTSFLGS
MCTAVQ1  EQU   MCTSFLGS
MCTSQA2  EQU   MCTSFLGS
MCTSQA1  EQU   MCTSFLGS
MCVAVQC  EQU   MCT+60
MCVFRCNT EQU   MCT+58
MCVSTCRI EQU   MCT+56
MCCEND   EQU   MCT+56
MCCASMT2 EQU   MCT+54
MCCASMT1 EQU   MCT+52
MCCRSVH1 EQU   MCT+50
MCCPLUS  EQU   MCT+48
MCCMS403 EQU   MCT+44
MCCMS402 EQU   MCT+40
MCCMS401 EQU   MCT+36
MCCMS400 EQU   MCT+32
MCCMS203 EQU   MCT+28
MCCMS202 EQU   MCT+24
MCCMS201 EQU   MCT+20
MCCMS200 EQU   MCT+16
MCCMS102 EQU   MCT+12
MCCMS101 EQU   MCT+8
MCCMS100 EQU   MCT+4
MCTMCT   EQU   MCT
ICTEND   EQU   ICT+88
ICTRSVB3 EQU   ICT+87
ICTRSVB2 EQU   ICT+86
ICTRSVB1 EQU   ICT+85
ICT003   EQU   ICTFLAGS
ICTIOOT  EQU   ICTFLAGS
ICTIOL   EQU   ICTFLAGS
ICTDRSV4 EQU   ICTFLAGS
ICVIRSV3 EQU   ICT+80
ICVULCBT EQU   ICT+76
ICVOLCBT EQU   ICT+72
ICVLCBPT EQU   ICT+68
ICVLUTBT EQU   ICT+64
ICCEND   EQU   ICT+64
ICCRSV01 EQU   ICT+62
ICCEDSUT EQU   ICT+60
ICCSRSV2 EQU   ICT+58
ICCSIGUP EQU   ICT+56
ICCINDAT EQU   ICT+52
ICCINLOT EQU   ICT+48
ICCINHIT EQU   ICT+44
ICCDAUTH EQU   ICT+42
ICCLOUTH EQU   ICT+40
ICCHIUTH EQU   ICT+38
ICCDASF2 EQU   ICT+36
ICCDASF1 EQU   ICT+34
ICCMINRV EQU   ICT+32
ICCMAXRV EQU   ICT+30
ICCRVSCF EQU   ICT+28
ICCMNIOR EQU   ICT+26
ICCLCHN  EQU   ICT+24
ICCLCLST EQU   ICT+20
ICCMNSWP EQU   ICT+16
ICCMNUIN EQU   ICT+12
ICCMXICT EQU   ICT+8
ICCMRSV1 EQU   ICT+4
ICTICT   EQU   ICT
CCVEND   EQU   CCT+128
CCTFLG2  EQU   CCT+125
CCTCPUOT EQU   CCTFLG1
CCTALL   EQU   CCTFLG1
CCVCPUCT EQU   CCT+122
CCVENQCT EQU   CCT+120
CCVLGFMC EQU   CCT+118
CCVLGUTL EQU   CCT+116
CCVR07   EQU   CCT+114
CCVR06   EQU   CCT+112
CCVUTILP EQU   CCT+110
CCVR05   EQU   CCT+108
CCVIMBBT EQU   CCT+104
CCVEJST  EQU   CCT+100
CCVPGCPF EQU   CCT+96
CCVRVSWF EQU   CCT+92
CCVRBSTD EQU   CCT+88
CCVR04   EQU   CCT+84
CCVRBSWT EQU   CCT+80
CCVR03   EQU   CCT+76
CCCEND   EQU   CCT+76
CCCRSVH1 EQU   CCT+74
CCCSCFC2 EQU   CCT+72
CCCSCFC1 EQU   CCT+70
CCCR02   EQU   CCT+68
CCCSIGUR EQU   CCT+66
CCCSIGDP EQU   CCT+64
CCCSCFAC EQU   CCT+62
CCCMINRV EQU   CCT+60
CCCMAXRV EQU   CCT+58
CCCLOSCF EQU   CCT+56
CCCHISCF EQU   CCT+54
CCCUTLOT EQU   CCT+52
CCCUTHIT EQU   CCT+50
CCCAPRHT EQU   CCT+48
CCCAPRLT EQU   CCT+46
CCCR01   EQU   CCT+44
CCCAPGDP EQU   CCT+42
CCCAPMDP EQU   CCT+40
CCCAPLDP EQU   CCT+38
CCCAPBDP EQU   CCT+36
CCCAPROT EQU   CCT+34
CCCAPDIV EQU   CCT+32
CCCRSVF1 EQU   CCT+28
CCCMNSIN EQU   CCT+24
CCCMNUIN EQU   CCT+20
CCCAPDEL EQU   CCT+16
CCCAPMAX EQU   CCT+12
CCCAPMIN EQU   CCT+8
CCCAPMET EQU   CCT+4
CCTCCT   EQU   CCT
RMCTEND  EQU   RMCT+192
RMCTR50  EQU   RMCT+190
RMCTDMNC EQU   RMCT+188
RMCTDMDE EQU   RMCT+184
RMCTDMDT EQU   RMCT+180
RMCTSRBT EQU   RMCT+176
RMCTOUXB EQU   RMCT+172
RMCTOUCB EQU   RMCT+168
RMCTCPID EQU   RMCT+156
RMCTTELM EQU   RMCT+152
RMCTF09  EQU   RMCTFLGS+1
RMCTMFS  EQU   RMCTFLGS+1
RMCTF07  EQU   RMCTFLGS+1
RMCTF06  EQU   RMCTFLGS
RMCTRSV2 EQU   RMCTFLGS
RMCTSTW  EQU   RMCTFLGS
RMCTRSV1 EQU   RMCTFLGS
RMCTF03  EQU   RMCTFLGS
RMCTCPS1 EQU   RMCTFLGS
RMCTMFA  EQU   RMCTFLGS
RMCTALR  EQU   RMCT+140
RMCTALA  EQU   RMCT+136
RMCTR10  EQU   RMCT+116
RMCTINQE EQU   RMCT+112
RMCTOTQE EQU   RMCT+108
RMCTWTQE EQU   RMCT+104
RMCTAQHD EQU   RMCT+100
RMCTAQCT EQU   RMCT+96
RMCTTMQE EQU   RMCT+92
RMCTWAMT EQU   RMCT+88
RMCTWAST EQU   RMCT+84
RMCTEPPR EQU   RMCT+80
RMCTFLTM EQU   RMCT+76
RMCTEPET EQU   RMCT+72
RMCTITT  EQU   RMCT+68
RMCTADJC EQU   RMCT+64
RMCTEPBG EQU   RMCT+60
RMCTEPAT EQU   RMCT+56
RMCTEPDT EQU   RMCT+52
RMCTEPPA EQU   RMCT+48
RMCTRMSB EQU   RMCT+44
RMCTRMEX EQU   RMCT+40
RMCTRMPD EQU   RMCT+36
RMCTRMSA EQU   RMCT+32
RMCTRLCT EQU   RMCT+28
RMCTWMST EQU   RMCT+24
RMCTRMCA EQU   RMCT+20
RMCTRMPT EQU   RMCT+16
RMCTMCT  EQU   RMCT+12
RMCTICT  EQU   RMCT+8
RMCTCCT  EQU   RMCT+4
RMCTNAME EQU   RMCT
@NM00029 EQU   PSA+3668
PSASTAK  EQU   PSA+3072
@NM00028 EQU   PSA+1048
PSAUSEND EQU   PSA+1048
PSARV062 EQU   PSA+1044
PSACDAL  EQU   PSA+1040
PSAWTCOD EQU   PSA+1036
PSAATCVT EQU   PSA+1032
PSAPCPSW EQU   PSA+1024
PSAPIR2  EQU   PSA+1020
PSARV059 EQU   PSA+1018
PSASVC13 EQU   PSA+1016
PSASFACC EQU   PSA+1008
PSASTOP  EQU   PSA+992
PSASTART EQU   PSA+976
PSARSPSW EQU   PSA+968
PSASRPSW EQU   PSA+960
PSARV045 EQU   PSA+892
PSARV044 EQU   PSA+888
PSARV043 EQU   PSA+884
PSARV042 EQU   PSA+880
PSARV041 EQU   PSA+876
PSARV040 EQU   PSA+872
PSARV025 EQU   PSA+868
PSADSSED EQU   PSA+868
PSADSSPR EQU   PSA+864
PSADSSFW EQU   PSA+860
PSADSS14 EQU   PSA+856
PSADSSPP EQU   PSA+848
PSADSSRP EQU   PSA+840
PSADSS05 EQU   PSADSSF4
PSADSS10 EQU   PSADSSF4
PSADSSVE EQU   PSADSSF4
PSADSSDE EQU   PSADSSF4
PSADSSC0 EQU   PSADSSF4
PSADSSIE EQU   PSADSSF4
PSADSS12 EQU   PSADSSF4
PSADSSRC EQU   PSADSSF4
PSARV057 EQU   PSADSSF3
PSARV056 EQU   PSADSSF3
PSARV055 EQU   PSADSSF3
PSADSSMC EQU   PSADSSF3
PSADSSRW EQU   PSADSSF3
PSADSSNM EQU   PSADSSF3
PSADSSES EQU   PSADSSF3
PSADSSGP EQU   PSADSSF3
PSADSSF2 EQU   PSADSSFL+1
PSADSSPI EQU   PSADSSF1
PSADSSOI EQU   PSADSSF1
PSADSSSP EQU   PSADSSF1
PSADSSTP EQU   PSADSSF1
PSADSSDW EQU   PSADSSF1
PSADSSDD EQU   PSADSSF1
PSADSSDM EQU   PSADSSF1
PSADSSMV EQU   PSADSSF1
PSADSSTS EQU   PSA+816
PSADSSWK EQU   PSA+812
PSADSSR3 EQU   PSA+808
PSADSSR2 EQU   PSA+804
PSADSSRS EQU   PSA+800
PSASTOR  EQU   PSA+796
PSACPUSA EQU   PSA+794
PSAVSTAP EQU   PSA+792
PSAWKVAP EQU   PSA+788
PSAWKRAP EQU   PSA+784
PSAMCHIC EQU   PSA+783
PSARV061 EQU   PSA+782
PSASYMSK EQU   PSA+781
PSAMCHFL EQU   PSA+780
PSACR0   EQU   PSA+776
PSAPSWSV EQU   PSA+768
PSACLHS  EQU   PSAHLHI
PSALKR15 EQU   PSALKSA+60
PSALKR14 EQU   PSALKSA+56
PSALKR13 EQU   PSALKSA+52
PSALKR12 EQU   PSALKSA+48
PSALKR11 EQU   PSALKSA+44
PSALKR10 EQU   PSALKSA+40
PSALKR9  EQU   PSALKSA+36
PSALKR8  EQU   PSALKSA+32
PSALKR7  EQU   PSALKSA+28
PSALKR6  EQU   PSALKSA+24
PSALKR5  EQU   PSALKSA+20
PSALKR4  EQU   PSALKSA+16
PSALKR3  EQU   PSALKSA+12
PSALKR2  EQU   PSALKSA+8
PSALKR1  EQU   PSALKSA+4
PSALKR0  EQU   PSALKSA
PSARV023 EQU   PSACLHT+52
PSALOCAL EQU   PSACLHT+48
PSACMSL  EQU   PSACLHT+44
PSAOPTL  EQU   PSACLHT+40
PSATPACL EQU   PSACLHT+36
PSATPDNL EQU   PSACLHT+32
PSATPNCL EQU   PSACLHT+28
PSAIOSLL EQU   PSACLHT+24
PSAIOSUL EQU   PSACLHT+20
PSAIOSCL EQU   PSACLHT+16
PSAIOSSL EQU   PSACLHT+12
PSASALCL EQU   PSACLHT+8
PSAASML  EQU   PSACLHT+4
PSADISPL EQU   PSACLHT
PSASRSA  EQU   PSA+636
PSARV050 EQU   PSA+634
PSADSSGO EQU   PSA+633
PSARECUR EQU   PSA+632
PSAHLHIS EQU   PSA+628
PSAIPCSA EQU   PSA+624
@NM00027 EQU   PSA+621
PSAIPCDM EQU   PSA+620
PSAIPCD  EQU   PSA+616
@NM00026 EQU   PSA+613
PSAIPCRM EQU   PSA+612
PSAIPCR  EQU   PSA+608
PSAMCHEX EQU   PSA+600
PSAMPSW  EQU   PSA+592
PSAEXPS2 EQU   PSA+584
PSAEXPS1 EQU   PSA+576
PSAPIREG EQU   PSA+572
PSARSREG EQU   PSA+568
PSAGPREG EQU   PSA+556
PSARV022 EQU   PSASUP4
PSARV021 EQU   PSASUP4
PSARV020 EQU   PSASUP4
PSARV019 EQU   PSASUP4
PSARV018 EQU   PSASUP4
PSARV017 EQU   PSASUP4
PSARV016 EQU   PSASUP4
PSARV015 EQU   PSASUP4
PSARV014 EQU   PSASUP3
PSAULCMS EQU   PSASUP3
PSARV012 EQU   PSASUP3
PSAESTA  EQU   PSASUP3
PSASPR   EQU   PSASUP3
PSAPSREG EQU   PSASUP3
PSAPI2   EQU   PSASUP3
PSAIOSUP EQU   PSASUP3
PSALCR   EQU   PSASUP2
PSARTM   EQU   PSASUP2
PSAACR   EQU   PSASUP2
PSAIPCE2 EQU   PSASUP2
PSAIPCES EQU   PSASUP2
PSAIPCEC EQU   PSASUP2
PSAGTF   EQU   PSASUP2
PSAIPCRI EQU   PSASUP2
PSATYPE6 EQU   PSASUP1
PSATCTL  EQU   PSASUP1
PSADISP  EQU   PSASUP1
PSALOCK  EQU   PSASUP1
PSAPI    EQU   PSASUP1
PSAEXT   EQU   PSASUP1
PSASVC   EQU   PSASUP1
PSAIO    EQU   PSASUP1
PSAANEW  EQU   PSA+544
PSATNEW  EQU   PSA+536
PSALCCAR EQU   PSA+532
PSALCCAV EQU   PSA+528
PSAPCCAR EQU   PSA+524
PSAPCCAV EQU   PSA+520
PSACPULA EQU   PSA+518
PSACPUPA EQU   PSA+516
PSAPSA   EQU   PSA+512
FLCHDEND EQU   PSA+512
FLCCRSAV EQU   FLCMCLA+280
FLCGRSAV EQU   FLCMCLA+216
FLCFPSAV EQU   FLCMCLA+184
FLCFLA   EQU   FLCMCLA+88
FLCRGNCD EQU   FLCMCLA+84
FLCFSAA  EQU   FLCFSA+1
@NM00025 EQU   FLCFSA
@NM00024 EQU   FLCMCLA+72
FLCMCIC  EQU   FLCMCLA+64
@NM00023 EQU   FLCMCLA+20
FLCIOAA  EQU   FLCIOA+1
@NM00022 EQU   FLCIOA
@NM00021 EQU   FLCMCLA+15
@NM00020 EQU   FLCMCLA+14
@NM00019 EQU   FLCMCLA+12
FLCLCL   EQU   FLCMCLA+8
FLCIOELA EQU   FLCIOEL+1
@NM00018 EQU   FLCIOEL
FLCCHNID EQU   FLCMCLA
@NM00017 EQU   PSA+160
FLCMTRCD EQU   PSA+157
@NM00016 EQU   PSA+156
FLCPERA  EQU   FLCPER+1
@NM00015 EQU   FLCPER
@NM00014 EQU   PSA+151
FLCPERCD EQU   PSA+150
FLCMCNUM EQU   PSA+149
@NM00013 EQU   PSA+148
FLCTEAA  EQU   FLCTEA+1
@NM00012 EQU   FLCTEA
PSAPIPC  EQU   PSAPICOD
PSAPIMC  EQU   PSAPICOD
PSAPIPER EQU   PSAPICOD
PSARV049 EQU   FLCPICOD
FLCPILCB EQU   FLCPIILC
@NM00011 EQU   FLCPIILC
@NM00010 EQU   PSAEPPSW
FLCSVCN  EQU   PSAESPSW+2
FLCSILCB EQU   FLCSVILC
@NM00009 EQU   FLCSVILC
@NM00008 EQU   PSAESPSW
FLCEICOD EQU   PSAEEPSW+2
PSASPAD  EQU   PSAEEPSW
@NM00007 EQU   PSA+128
FLCINPSW EQU   PSA+120
FLCMNPSW EQU   PSA+112
FLCPNPSW EQU   PSA+104
FLCSNPSW EQU   PSA+96
FLCENPSW EQU   PSA+88
FLCTRACE EQU   PSA+84
FLCTIMER EQU   PSA+80
FLCCVT2  EQU   PSA+76
FLCCAW   EQU   PSA+72
FLCCSW   EQU   PSA+64
FLCIOPSW EQU   PSA+56
FLCMOPSW EQU   PSA+48
FLCPOPSW EQU   PSA+40
FLCSOPSW EQU   PSA+32
FLCEOPSW EQU   PSA+24
@NM00006 EQU   FLCICCW2+4
FLCICCW1 EQU   FLCROPSW
FLCIPPSW EQU   FLCRNPSW
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RC00083 EQU   IRARM001
@RC00190 EQU   @EL00002
@RC00215 EQU   @EL00002
@PB00002 EQU   @EL00001
@ENDDATA EQU   *
         END   IRARMINT,(C'PLS2145',0701,78024)
