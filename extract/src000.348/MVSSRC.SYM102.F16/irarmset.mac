         TITLE 'IRARMSET - SET TO NEW IPS NON-RESIDENT ACTION ROUTINE  *
                        '
IRARMSET CSECT ,
@PSTART  DS    0H
         USING @PSTART,@12
*                                  /*
         STM   @00,@14,256+000(@13)    SAVE INVOKING RTNE REGS
         LA    @12,IRARMSET-@PSTART    DISPLACEMENT TO MODULE BASE
         LCR   @12,@12                 NEGATIVE FOR SUBTRACT
         ALR   @12,@15                 SETUP MODULE ADDRESSABILITY
*                                                                  0038
*/*                                                                  */
*/*   IF MF/1 IS ACTIVE, A SET TO NEW IPS TERMINATES THE CURRENT     */
*/*   WORKLOAD ACTIVITY RECORDING(WAR) INTERVAL.  A ROUTINE, LOADED  */
*/*   AND FIXED BY MF/1, WILL PERFORM CLEAN-UP FOR THE CURRENT WAR   */
*/*   INTERVAL.                                                      */
*/*                                                                  */
*                                                                  0039
*   IF RMCTMFA='1'B THEN            /* MF/1 DATA COLLECTION ACTIVE   */
         TM    RMCTMFA(RMCTPTR),B'10000000'                        0039
         BNO   @RF00039                                            0039
*     DO;                           /* TERMINATE MF/1 DATA COLLECTION*/
*       RRPAWAR='1'B;               /* INDICATE WKLD ACTIVITY RTNE   */
         OI    RRPAWAR(RRPAPTR),B'01000000'                        0041
*       CALL IRARMWR8;              /* UPDATE WORKLOAD ACTIVITY DATA
*                                      FOR CURRENT IN-CORE INTERVAL  */
         L     @11,WAMTPTR(,RMCTPTR)                               0042
         L     @11,WAMTWAR(,@11)                                   0042
         L     @15,WARTABLE+8(,@11)                                0042
         BALR  @14,@15                                             0042
*       RRPAWAR='0'B;               /* LEAVE WORKLOD ACTIVITY RTNE   */
         NI    RRPAWAR(RRPAPTR),B'10111111'                        0043
*     END;                                                         0044
*   IF RRPARFI='1'B×RRPARCI='1'B THEN/* ERROR RECOVERY INVOKED       */
*                                                                  0045
@RF00039 TM    RRPARFI(RRPAPTR),B'00000011'                        0045
         BZ    @RF00045                                            0045
*     /***************************************************************/
*     /*                                                             */
*     /* WILL PERFORM CLEANUP TO RESET USERS TO PREVIOUS IPS         */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0046
*     DO;                                                          0046
*       WMSTOPTR=RMCTWAST;          /* ADDRESS OF PRIOR WMST (IPS)   */
         L     WMSTOPTR,RMCTWAST(,RMCTPTR)                         0047
*       IF WMSTOPTR=ZERO THEN       /* IPS HAS NOT BEEN CHANGED      */
         LTR   WMSTOPTR,WMSTOPTR                                   0048
         BNZ   @RF00048                                            0048
*         WMSTOPTR=RMCTWMST;        /* ADDRESS OF CURRENT WMST (IPS) */
         L     WMSTOPTR,RMCTWMST(,RMCTPTR)                         0049
*       WMSTNPTR=WMSTOPTR;          /* USE PRIOR WMST AS OLD AND NEW */
@RF00048 LR    WMSTNPTR,WMSTOPTR                                   0050
*     END;                                                         0051
*   ELSE                            /* NORMAL ENTRY TO SET IPS PROCS */
*     DO;                                                          0052
         B     @RC00045                                            0052
@RF00045 DS    0H                                                  0053
*       WMSTOPTR=RMCTWMST;          /* ADDRESS OF CURRENT WMST (IPS) */
         L     WMSTOPTR,RMCTWMST(,RMCTPTR)                         0053
*       WMSTNPTR=WMSTOPTR->WMSTNWST;/* ADDRESS OF NEW WMST (IPS)     */
         L     WMSTNPTR,WMSTNWST(,WMSTOPTR)                        0054
*     END;                                                         0055
*                                                                  0055
*/*                                                                  */
*/*   PLACE ALL MEMORIES WITHIN A VALID PERFORMANCE                  */
*/*   GROUP IN THE NEW IPS. FIRST PRIORITY FOR THE PGN       @ZA27109*/
*/*   TO USE IS THE RESET VALUE. SECOND IS THE SPECIFIED     @ZA27109*/
*/*   PGN VALUE. IF THESE ARE INVALID, A DEFAULT IS          @ZA27109*/
*/*   SUPPLIED.                                              @ZA27109*/
*                                                                  0056
*   DO QPTR=ADDR(RMCTWTQE)          /* LOOP THROUGH ALL OUCB QUEUES  */
*         TO ADDR(RMCTINQE) BY LENGTH(RMCTWTQE);/*           @Z40BPCH*/
@RC00045 LA    QPTR,RMCTWTQE(,RMCTPTR)                             0056
         B     @DE00056                                            0056
@DL00056 DS    0H                                                  0057
*     OUCBPTR=QHEADER->OUCBFWD;     /* ADDR OF FIRST OUCB ON QUEUE   */
         L     @11,QHEADER(,QPTR)                                  0057
         L     OUCBPTR,OUCBFWD(,@11)                               0057
*     DO WHILE OUCBNAME='OUCB';     /* PROCESS ALL OUCBS ON THE QUEUE*/
         B     @DE00058                                            0058
@DL00058 DS    0H                                                  0059
*       ASCBPTR=OUCBASCB;           /* PICK USER ASCB ADDRESS        */
         L     ASCBPTR,OUCBASCB(,OUCBPTR)                          0059
*       IF OUCBSPG^=ZERO&OUCBPVL='0'B THEN/* RESET TO SPECIFIED    0060
*                                                            @OZ28473*/
         CLI   OUCBSPG(OUCBPTR),0                                  0060
         BE    @RF00060                                            0060
         TM    OUCBPVL(OUCBPTR),B'00000100'                        0060
         BNZ   @RF00060                                            0060
*         OUCBNPG=OUCBSPG;          /* PERFORMANCE GROUP IN  @Z40BPCH
*                                      CASE DEFAULT WAS SET  @Z40BPCH
*                                      BY PRIOR SET COMMAND  @Z40BPCH*/
         IC    @11,OUCBSPG(,OUCBPTR)                               0061
         STC   @11,OUCBNPG(,OUCBPTR)                               0061
*       IF(OUCBRPG^=ZERO&           /* RESET PGN OVERRIDES   @ZA27109*/
*           WPGVRENT^=ZERO) THEN    /* IF ITS VALID..        @ZA27109*/
@RF00060 CLI   OUCBRPG(OUCBPTR),0                                  0062
         BE    @RF00062                                            0062
         SLR   @11,@11                                             0062
         IC    @11,OUCBRPG(,OUCBPTR)                               0062
         LR    @15,@11                                             0062
         ALR   @15,@15                                             0062
         AL    @15,WMSTPGVT(,WMSTNPTR)                             0062
         LH    @15,WPGVRENT(,@15)                                  0062
         LTR   @15,@15                                             0062
         BZ    @RF00062                                            0062
*         OUCBNPG=OUCBRPG;          /* FILL IN RESET PGN     @ZA27109*/
         STC   @11,OUCBNPG(,OUCBPTR)                               0063
*       IF(WPGVNENT=ZERO&           /* INVALID PGN           @ZA27109*/
*           OUCBNPG^=ZERO) THEN     /* IN THIS IPS           @ZA27109*/
*                                                                  0064
@RF00062 SLR   @11,@11                                             0064
         IC    @11,OUCBNPG(,OUCBPTR)                               0064
         ALR   @11,@11                                             0064
         AL    @11,WMSTPGVT(,WMSTNPTR)                             0064
         LH    @11,WPGVNENT(,@11)                                  0064
         LTR   @11,@11                                             0064
         BNZ   @RF00064                                            0064
         CLI   OUCBNPG(OUCBPTR),0                                  0064
         BE    @RF00064                                            0064
*         /***********************************************************/
*         /*                                                         */
*         /* DETERMINE DEFAULT PERFORMANCE GROUP TO BE USED          */
*         /*                                                         */
*         /***********************************************************/
*                                                                  0065
*         IF OUCBLOG='1'B THEN      /* MEMORY ORIGINATED BY LOGON    */
         TM    OUCBLOG(OUCBPTR),B'00100000'                        0065
         BNO   @RF00065                                            0065
*           OUCBNPG=RMCALGPG;       /* DEFAULT PGN(2) FOR LOGON USER */
         IC    @11,RMCALGPG(,RMCTPTR)                              0066
         STC   @11,OUCBNPG(,OUCBPTR)                               0066
*         ELSE                      /* MEMORY ORIGINATED BY START    */
*           OUCBNPG=RMCABCPG;       /* DEFAULT PGN(1) FOR BATCH USER */
*                                                                  0067
         B     @RC00065                                            0067
@RF00065 IC    @11,RMCABCPG(,RMCTPTR)                              0067
         STC   @11,OUCBNPG(,OUCBPTR)                               0067
*       /*************************************************************/
*       /*                                                           */
*       /* START A NEW TRANSACTION FOR EVERY USER.           @ZA27109*/
*       /* ? IRACTLCL EPN(WMN)                                       */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0068
*       CALL RMSBWMN->IRARMRTN;     /* INVOKE WMN SUBRTN             */
@RC00065 DS    0H                                                  0068
@RF00064 L     @15,RMSBWMN(,RMCTPTR)                               0068
         BALR  @14,@15                                             0068
*       OUCBPGP=WPGPOFST;           /* FIRST PERIOD.         @ZA27109*/
         LA    @11,12                                              0069
         STC   @11,OUCBPGP(,OUCBPTR)                               0069
*       OUCBWMG=WPGVNENT;           /* REPLACE OUCB VALUE WITH OFFSET
*                                      TO WPGD IN NEW IPS    @ZA27109*/
         SLR   @09,@09                                             0070
         IC    @09,OUCBNPG(,OUCBPTR)                               0070
         ALR   @09,@09                                             0070
         AL    @09,WMSTPGVT(,WMSTNPTR)                             0070
         LH    @09,WPGVNENT(,@09)                                  0070
         STH   @09,OUCBWMG(,OUCBPTR)                               0070
*       RESPECIFY                                                  0071
*         WPGPPTR RESTRICTED;       /*                       @Z40BPCH*/
*       WPGDPTR=WMSTPGDT+OUCBWMG;   /* PERF GRP DESC ADDR    @Z40BPCH*/
         AL    @09,WMSTPGDT(,WMSTNPTR)                             0072
         LR    WPGDPTR,@09                                         0072
*       WPGPPTR=WPGDPTR+OUCBPGP;    /* PERF PERIOD ADDR      @ZA27109*/
         SLR   @09,@09                                             0073
         IC    @09,OUCBPGP(,OUCBPTR)                               0073
         ALR   @09,WPGDPTR                                         0073
         LR    WPGPPTR,@09                                         0073
*       OUCBDMN=WPGPDMN;            /* PERF PERIOD DMN #     @Z40BPCH*/
         SLR   @09,@09                                             0074
         IC    @09,WPGPDMN(,WPGPPTR)                               0074
         STC   @09,OUCBDMN(,OUCBPTR)                               0074
*       OUCBDMO=WDMVTENT;           /* DMDT OFFSET FOR DMN # @Z40BPCH*/
*                                                                  0075
         ALR   @09,@09                                             0075
         AL    @09,WMSTDMVT(,WMSTNPTR)                             0075
         LH    @09,WDMVTENT(,@09)                                  0075
         STH   @09,OUCBDMO(,OUCBPTR)                               0075
*       /*************************************************************/
*       /*                                                           */
*       /* DON'T ASSOCIATE A USER WHO IS BETWEEN STEPS WITH  @ZA11854*/
*       /* A DOMAIN WHOSE MAX-MPL IS ZERO. THIS IS BECAUSE   @ZA11854*/
*       /* A PERIOD CHANGE CAN NEVER OCCUR TO TAKE THIS USER @ZA11854*/
*       /* TO A DIFFERENT DOMAIN.                            @ZA11854*/
*       /* WHILE LOOPING THROUGH DOMAINS, USE THE NEW        @ZA27109*/
*       /* IPS FOR DOMAIN AND PGN INFORMATION.               @ZA27109*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0076
*       RFY                                                        0076
*         DMDT BASED(DMDTPTR2);     /* GET ADDRESSABILITY    @ZA11854*/
*       DMDTPTR2=WMSTDMDT+OUCBDMO;  /* SET TABLE ADDRESS     @ZA11854*/
         AL    @09,WMSTDMDT(,WMSTNPTR)                             0077
         LR    DMDTPTR2,@09                                        0077
*       IF OUCBINC='0'B THEN        /* BETWEEN STEPS?        @ZA11854*/
         TM    OUCBINC(OUCBPTR),B'00000001'                        0078
         BNZ   @RF00078                                            0078
*         DO;                       /* YES..GET FIRST PERIOD @ZA11854*/
*           DO WHILE(DMDTHI=ZERO&WPGPFIN^='1'B);/*           @ZA11854
*                                      WITH NON-ZERO MAXMPL  @ZA11854*/
         B     @DE00080                                            0080
@DL00080 DS    0H                                                  0081
*             OUCBPGP=OUCBPGP+LENGTH(WPGP);/* TRY NEXT PERIOD      0081
*                                                            @ZA11854*/
         LA    @09,8                                               0081
         SLR   @15,@15                                             0081
         IC    @15,OUCBPGP(,OUCBPTR)                               0081
         ALR   @09,@15                                             0081
         STC   @09,OUCBPGP(,OUCBPTR)                               0081
*             WPGPPTR=WPGDPTR+OUCBPGP;/* TO NEW PERIOD       @ZA11854*/
         ALR   @09,WPGDPTR                                         0082
         LR    WPGPPTR,@09                                         0082
*             OUCBDMN=WPGPDMN;      /* GET NEW DOMAIN        @ZA11854*/
         SLR   @09,@09                                             0083
         IC    @09,WPGPDMN(,WPGPPTR)                               0083
         STC   @09,OUCBDMN(,OUCBPTR)                               0083
*             OUCBDMO=WDMVTENT;     /* AND NEW OFFSET        @ZA11854*/
         ALR   @09,@09                                             0084
         AL    @09,WMSTDMVT(,WMSTNPTR)                             0084
         LH    @09,WDMVTENT(,@09)                                  0084
         STH   @09,OUCBDMO(,OUCBPTR)                               0084
*             DMDTPTR2=WMSTDMDT+OUCBDMO;/* THIS A GOOD DMN?  @ZA27109*/
         AL    @09,WMSTDMDT(,WMSTNPTR)                             0085
         LR    DMDTPTR2,@09                                        0085
*           END;                    /* EITHER GOOD DMN OR    @ZA11854
*                                      LAST PERIOD.          @ZA11854*/
@DE00080 CLI   DMDTHI(DMDTPTR2),0                                  0086
         BNE   @DC00080                                            0086
         TM    WPGPFIN(WPGPPTR),B'10000000'                        0086
         BNO   @DL00080                                            0086
@DC00080 DS    0H                                                  0087
*         END;                      /* END APAR FIX.         @ZA11854*/
*       RFY                                                        0088
*         DMDT BASED(DMDTPTR);      /* BACK TO PROPER BASE   @ZA11854*/
@RF00078 DS    0H                                                  0089
*       IF OUCBAPG='1'B THEN        /* AN APG USER?          @Z40BPEB*/
         TM    OUCBAPG(OUCBPTR),B'01000000'                        0089
         BNO   @RF00089                                            0089
*         IF WPGPAPG='1'B           /* NEW PERIOD SPECIFY    @Z40BPEB*/
*           THEN                    /* AN APG VALUE ?        @Z40BPEB*/
         TM    WPGPAPG(WPGPPTR),B'00100000'                        0090
         BNO   @RF00090                                            0090
*           OUCBNDP=CCCAPMDP+WPGPAPGV;/* ASSIGN REQUESTED DP @Z40BPEB*/
         SLR   @15,@15                                             0091
         IC    @15,WPGPAPGV(,WPGPPTR)                              0091
         AH    @15,CCCAPMDP(,RMCTPTR)                              0091
         STC   @15,OUCBNDP(,OUCBPTR)                               0091
*         ELSE                      /* NO APG VALUE CODED    @Z40BPEB*/
*           OUCBNDP=CCCAPGDP;       /* ASSIGN DEFAULT DP     @Z40BPEB*/
         B     @RC00090                                            0092
@RF00090 LH    @15,CCCAPGDP(,RMCTPTR)                              0092
         STC   @15,OUCBNDP(,OUCBPTR)                               0092
*       OUCBPTR=OUCBFWD;            /* NEXT OUCB ON THE QUEUE        */
@RC00090 DS    0H                                                  0093
@RF00089 L     OUCBPTR,OUCBFWD(,OUCBPTR)                           0093
*       RESPECIFY                                                  0094
*         WPGPPTR UNRSTD;           /*                       @Z40BPCH*/
*     END;                                                         0095
@DE00058 CLC   OUCBNAME(4,OUCBPTR),@CC00948                        0095
         BE    @DL00058                                            0095
*   END;                                                           0096
         AL    QPTR,@CF00035                                       0096
@DE00056 LA    @11,RMCTINQE(,RMCTPTR)                              0096
         CR    QPTR,@11                                            0096
         BNH   @DL00056                                            0096
*   IF RRPARFI='1'B×RRPARCI='1'B THEN/* ERROR RECOVERY INVOKED       */
         TM    RRPARFI(RRPAPTR),B'00000011'                        0097
         BZ    @RF00097                                            0097
*     DO;                           /*                       @ZA27109*/
*       RMCTWAST=WMSTOPTR->WMSTNWST;/* FREE ATTEMPTED NEW IPS        */
         L     @11,WMSTNWST(,WMSTOPTR)                             0099
         ST    @11,RMCTWAST(,RMCTPTR)                              0099
*       RRPARTC=SETERROR;           /* LET 812 KNOW TROUBLE  @ZA27109*/
         MVI   RRPARTC(RRPAPTR),X'0C'                              0100
*     END;                          /* END OF ERROR RETRY    @ZA27109*/
*   ELSE                            /* NORMAL ENTRY TO SET IPS PROCS */
*     RMCTWAST=WMSTOPTR;            /* FREE PREVIOUSLY USED IPS      */
         B     @RC00097                                            0102
@RF00097 ST    WMSTOPTR,RMCTWAST(,RMCTPTR)                         0102
*   RMCTMFS='1'B;                   /* INDICATE SET TO NEW IPS     0103
*                                      OCCURRED FOR TRACE    @Z40BPCH*/
@RC00097 OI    RMCTMFS(RMCTPTR),B'01000000'                        0103
*   RESPECIFY                                                      0104
*     QPTR UNRSTD;                                                 0104
*   RMCTWMST=WMSTNPTR;              /* UPDATE PTR IN RMCT TO NEW IPS */
         ST    WMSTNPTR,RMCTWMST(,RMCTPTR)                         0105
*   RMCTDMDT=WMSTDMDT;              /* UPDATE PTR TO NEW DOMAIN TABLE
*                                                            @Z40BPCH*/
         L     @15,WMSTDMDT(,WMSTNPTR)                             0106
         ST    @15,RMCTDMDT(,RMCTPTR)                              0106
*   RMCTDMDE=RMCTDMDT+WMSTDMNC*LENGTH(DMDT)-LENGTH(DMDT);/* ADDRESS
*                                      OF LAST DOMAIN TABLE ENTRY  0107
*                                                            @Z40BPCH*/
         LA    @14,20                                              0107
         LH    @11,WMSTDMNC(,WMSTNPTR)                             0107
         LR    @09,@11                                             0107
         MR    @08,@14                                             0107
         ALR   @15,@09                                             0107
         SLR   @15,@14                                             0107
         ST    @15,RMCTDMDE(,RMCTPTR)                              0107
*   RMCTDMNC=WMSTDMNC;              /* UPDATE NO. OF DOMAINS @Z40BPCH*/
         STH   @11,RMCTDMNC(,RMCTPTR)                              0108
*   ICCMAXRV=WMSTWLHI/5;            /* HIGHEST WORK LOAD LEV @ZM43079*/
         LA    @15,5                                               0109
         LH    @14,WMSTWLHI(,WMSTNPTR)                             0109
         LR    @08,@14                                             0109
         SRDA  @08,32                                              0109
         DR    @08,@15                                             0109
         STH   @09,ICCMAXRV(,RMCTPTR)                              0109
*   ICCMINRV=-WMSTWLHI/5;           /* NEG HIGHEST WLL       @ZM43079*/
         LCR   @11,@14                                             0110
         LR    @08,@11                                             0110
         SRDA  @08,32                                              0110
         DR    @08,@15                                             0110
         STH   @09,ICCMINRV(,RMCTPTR)                              0110
*   CCCMAXRV=WMSTWLHI/5;            /* HIGHEST WORK LOAD LEV @ZM43079*/
         LR    @08,@14                                             0111
         SRDA  @08,32                                              0111
         DR    @08,@15                                             0111
         STH   @09,CCCMAXRV(,RMCTPTR)                              0111
*   CCCMINRV=-WMSTWLHI/5;           /* NEG HIGHEST WLL       @ZM43079*/
*                                                                  0112
         LR    @08,@11                                             0112
         SRDA  @08,32                                              0112
         DR    @08,@15                                             0112
         STH   @09,CCCMINRV(,RMCTPTR)                              0112
*   /*****************************************************************/
*   /*                                                               */
*   /* ? IRACTLEP ENN(SET)                                           */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0113
*   GEN CODE EXIT NOSEQFLOW;                                       0113
*                                  /*
         LM    @00,@14,256+000(@13)    RELOAD INVOKING RTNE REGS
         BR    RTNREG                  RETURN TO INVOKER
*   END IRARMSET                                                   0114
*                                                                  0114
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (IRACNSMP)                                       */
*/*%INCLUDE SYSLIB  (IRARMCT )                                       */
*/*%INCLUDE SYSLIB  (IRACCT  )                                       */
*/*%INCLUDE SYSLIB  (IRAICT  )                                       */
*/*%INCLUDE SYSLIB  (IRAMCT  )                                       */
*/*%INCLUDE SYSLIB  (IRARCT  )                                       */
*/*%INCLUDE SYSLIB  (IRARMPT )                                       */
*/*%INCLUDE SYSLIB  (IRARMCA )                                       */
*/*%INCLUDE SYSLIB  (IRARMEX )                                       */
*/*%INCLUDE SYSLIB  (IRARMSB )                                       */
*/*%INCLUDE SYSLIB  (IRAEPAT )                                       */
*/*%INCLUDE SYSLIB  (IRAEPDT )                                       */
*/*%INCLUDE SYSLIB  (IRAEPST )                                       */
*/*%INCLUDE SYSLIB  (IRARRPA )                                       */
*/*%INCLUDE SYSLIB  (IHAASCB )                                       */
*/*%INCLUDE SYSLIB  (IRAOUCB )                                       */
*/*%INCLUDE SYSLIB  (IHAOUXB )                                       */
*/*%INCLUDE SYSLIB  (IRARMEP )                                       */
*/*%INCLUDE SYSLIB  (IRADMDT )                                       */
*/*%INCLUDE SYSLIB  (IRAWMST )                                       */
*/*%INCLUDE SYSLIB  (IRAWPGDT)                                       */
*/*%INCLUDE SYSLIB  (IRAWAMT )                                       */
*/*%INCLUDE SYSLIB  (IRAREGS )                                       */
*                                                                  0114
*       ;                                                          0114
@DATA    DS    0H
         DS    0F
         DS    0F
@CF00035 DC    F'4'
         DS    0D
RMEPPTR  DS    A
WMSTPTR  DS    A
WPGLPTR  DS    A
WAMPPTR  DS    A
@CC00948 DC    C'OUCB'
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
WPGDPTR  EQU   @08
RMCTPTR  EQU   @02
RRPAPTR  EQU   @03
ASCBPTR  EQU   @05
OUCBPTR  EQU   @04
OUXBPTR  EQU   @06
DMDTPTR  EQU   @11
WPGPPTR  EQU   @11
R0       EQU   @00
R1       EQU   @01
SVEREG   EQU   @13
RTNREG   EQU   @14
NTRREG   EQU   @15
RTNCOD   EQU   @15
DMDTPTR2 EQU   @05
WMSTNPTR EQU   @06
WMSTOPTR EQU   @07
QPTR     EQU   @10
RMCT     EQU   0
RMCTWMST EQU   RMCT+24
RMCTWAST EQU   RMCT+84
RMCTWAMT EQU   RMCT+88
RMCTWTQE EQU   RMCT+104
RMCTINQE EQU   RMCT+112
RMCTFLGS EQU   RMCT+148
RMCTMFA  EQU   RMCTFLGS
RMCTMFS  EQU   RMCTFLGS+1
RMCTDMDT EQU   RMCT+180
RMCTDMDE EQU   RMCT+184
RMCTDMNC EQU   RMCT+188
CCT      EQU   RMCT+192
CCCAPMDP EQU   CCT+40
CCCAPGDP EQU   CCT+42
CCCMAXRV EQU   CCT+58
CCCMINRV EQU   CCT+60
CCTFLG1  EQU   CCT+124
ICT      EQU   RMCT+320
ICCMAXRV EQU   ICT+30
ICCMINRV EQU   ICT+32
ICTFLAGS EQU   ICT+84
MCT      EQU   RMCT+408
MCTSFLGS EQU   MCT+64
MCTOFLGS EQU   MCT+65
RCT      EQU   RMCT+504
RMPT     EQU   RMCT+592
RMCA     EQU   RMCT+664
RMCAFLGS EQU   RMCA+36
RMCALGPG EQU   RMCA+72
RMCABCPG EQU   RMCA+73
RMCASRC  EQU   RMCA+124
RMEX     EQU   RMCT+832
RMEPBEVT EQU   RMEX
RMEPBCTL EQU   RMEX+16
RMSB     EQU   RMCT+896
RMSBWMN  EQU   RMSB+64
EPAT     EQU   RMCT+1016
EPDT     EQU   RMCT+1416
EPST     EQU   RMCT+1512
RMEPBWM3 EQU   EPST
RMEPBIL3 EQU   EPST+16
RMEPBCL3 EQU   EPST+32
RMEPBCSO EQU   EPST+48
RMEPBCSI EQU   EPST+64
RRPA     EQU   0
RRPAINC  EQU   RRPA
RRPAVPGN EQU   RRPAINC+2
RRPAFLG0 EQU   RRPAVPGN
RRPAINP  EQU   RRPA+4
RRPAFLG  EQU   RRPA+8
RRPAWAR  EQU   RRPAFLG+1
RRPARFI  EQU   RRPAFLG+1
RRPARCI  EQU   RRPAFLG+1
RRPARTC  EQU   RRPA+11
RRPAINS  EQU   RRPA+16
ASCB     EQU   0
ASCBSUPC EQU   ASCB+16
ASCBRSM  EQU   ASCB+52
ASCBRSMF EQU   ASCBRSM
ASCBFW1  EQU   ASCB+100
ASCBRCTF EQU   ASCBFW1+2
ASCBFLG1 EQU   ASCBFW1+3
ASCBDSP1 EQU   ASCB+114
ASCBFLG2 EQU   ASCB+115
ASCBLKGP EQU   ASCB+128
ASCBSRQ  EQU   ASCB+180
ASCBSRQ1 EQU   ASCBSRQ
ASCBSRQ2 EQU   ASCBSRQ+1
ASCBSRQ3 EQU   ASCBSRQ+2
ASCBSRQ4 EQU   ASCBSRQ+3
OUCB     EQU   0
OUCBNAME EQU   OUCB
OUCBFWD  EQU   OUCB+4
OUCBQFL  EQU   OUCB+16
OUCBSFL  EQU   OUCB+17
OUCBPVL  EQU   OUCBSFL
OUCBYFL  EQU   OUCB+18
OUCBLOG  EQU   OUCBYFL
OUCBAFL  EQU   OUCB+19
OUCBAPG  EQU   OUCBAFL
OUCBTFL  EQU   OUCB+20
OUCBINC  EQU   OUCBTFL
OUCBEFL  EQU   OUCB+21
OUCBUFL  EQU   OUCB+23
OUCBNPG  EQU   OUCB+24
OUCBRPG  EQU   OUCB+25
OUCBNDP  EQU   OUCB+26
OUCBSPG  EQU   OUCB+28
OUCBPGP  EQU   OUCB+31
OUCBWMG  EQU   OUCB+32
OUCBDMO  EQU   OUCB+34
OUCBDMN  EQU   OUCB+36
OUCBASCB EQU   OUCB+40
OUCBCSW  EQU   OUCB+84
OUCBCFL  EQU   OUCBCSW+2
OUCBPSS  EQU   OUCB+112
OUXB     EQU   0
RMEP     EQU   0
RMEPEPB  EQU   RMEP
RMEPFLG  EQU   RMEPEPB+8
RMEPSCH  EQU   RMEP+16
DMDT     EQU   0
DMDTHI   EQU   DMDT+2
WMST     EQU   0
WMSTPGVT EQU   WMST+8
WMSTPGDT EQU   WMST+16
WMSTDMDT EQU   WMST+40
WMSTDMVT EQU   WMST+48
WMSTWLHI EQU   WMST+60
WMSTDMNC EQU   WMST+66
WMSTNWST EQU   WMST+92
WPGD     EQU   0
WPGDDFL  EQU   WPGD+3
WPGDPGP  EQU   WPGD+12
WPGDINDS EQU   WPGDPGP+5
WPGP     EQU   0
WPGPDMN  EQU   WPGP+1
WPGPAPGV EQU   WPGP+4
WPGPINDS EQU   WPGP+5
WPGPFIN  EQU   WPGPINDS
WPGPAPG  EQU   WPGPINDS
WPGL     EQU   0
WPGLISV  EQU   WPGL
WAMT     EQU   0
WAMTWAR  EQU   WAMT
WAMTNX1  EQU   WAMT+56
WAMP     EQU   0
WAMPPGP  EQU   WAMP
IRARMRTN EQU   0
QHEADER  EQU   0
WPGVRENT EQU   0
WPGVNENT EQU   0
WDMVTENT EQU   0
WARTABLE EQU   0
IRARMWR8 EQU   0
IRARMNTR EQU   0
WAMTPTR  EQU   RMCTWAMT
WAMTNDX  EQU   WAMTNX1
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
WAMPEND  EQU   WAMP+44
WAMPRSV  EQU   WAMPPGP+42
WAMPDMN  EQU   WAMPPGP+41
WAMPOBJN EQU   WAMPPGP+40
WAMPSWC  EQU   WAMPPGP+36
WAMPTRR  EQU   WAMPPGP+32
WAMPMSO  EQU   WAMPPGP+28
WAMPIOC  EQU   WAMPPGP+24
WAMPCPU  EQU   WAMPPGP+20
WAMPNWL  EQU   WAMPPGP+16
WAMPTET  EQU   WAMPPGP+12
WAMPSRV  EQU   WAMPPGP+8
WAMPTAT  EQU   WAMPPGP+4
WAMPTRN  EQU   WAMPPGP
WAMTEND  EQU   WAMT+64
WAMTR90  EQU   WAMT+60
WAMTNX0  EQU   WAMT+52
WAMTIPM  EQU   WAMT+48
WAMTIPI  EQU   WAMT+44
WAMTIPC  EQU   WAMT+40
WAMTHPG  EQU   WAMT+38
WAMTSPD  EQU   WAMT+36
WAMTCPD  EQU   WAMT+34
WAMTIPS  EQU   WAMT+32
WAMTTCB  EQU   WAMT+28
WAMTASD  EQU   WAMT+24
WAMTTOC  EQU   WAMT+16
WAMTTMA  EQU   WAMT+8
WAMTSIZ  EQU   WAMT+4
WPGLEND  EQU   WPGL+4
WPGLDUR  EQU   WPGLISV
WPGPEND  EQU   WPGP+8
WPGPDURP EQU   WPGP+7
WPGPISVP EQU   WPGP+6
WPGPRTB  EQU   WPGPINDS
WPGPRB2  EQU   WPGPINDS
WPGPUNT  EQU   WPGPINDS
@NM00004 EQU   WPGP+2
WPGPOBJN EQU   WPGP
WPGDEND  EQU   WPGD+20
WPGDPGL  EQU   WPGD+20
WPGDDURP EQU   WPGDPGP+7
WPGDISVP EQU   WPGDPGP+6
WPGDRTB  EQU   WPGDINDS
WPGDRB2  EQU   WPGDINDS
WPGDAPG  EQU   WPGDINDS
WPGDUNT  EQU   WPGDINDS
WPGDFIN  EQU   WPGDINDS
WPGDAPGV EQU   WPGDPGP+4
@NM00003 EQU   WPGDPGP+2
WPGDDMN  EQU   WPGDPGP+1
WPGDOBJN EQU   WPGDPGP
WPGDISV  EQU   WPGD+8
WPGDATM  EQU   WPGD+4
WPGDRD1  EQU   WPGDDFL
WPGDVLD  EQU   WPGDDFL
WPGDR02  EQU   WPGD+2
WPGDSIZ  EQU   WPGD+1
WPGDPGN  EQU   WPGD
WMSTEND  EQU   WMST+112
WMSTIPM  EQU   WMST+108
WMSTIPI  EQU   WMST+104
WMSTIPC  EQU   WMST+100
WMSTSECB EQU   WMST+96
WMSTSTCB EQU   WMST+88
WMSTSET  EQU   WMST+84
WMSTRSVD EQU   WMST+81
WMSTREAL EQU   WMST+80
WMSTMSO  EQU   WMST+76
WMSTIOC  EQU   WMST+72
WMSTCPU  EQU   WMST+68
WMSTPGPC EQU   WMST+64
WMSTPGHI EQU   WMST+62
WMSTDMDE EQU   WMST+56
WMSTDMVS EQU   WMST+52
WMSTDMDS EQU   WMST+44
WMSTPODS EQU   WMST+36
WMSTPODT EQU   WMST+32
WMSTPOVS EQU   WMST+28
WMSTPOVT EQU   WMST+24
WMSTPGDS EQU   WMST+20
WMSTPGVS EQU   WMST+12
WMSTWLLO EQU   WMST+6
WMSTID   EQU   WMST+4
WMSTNAME EQU   WMST
DMDTEND  EQU   DMDT+20
DMDTRUC  EQU   DMDT+16
DMDTINCU EQU   DMDT+14
DMDTOUTU EQU   DMDT+12
DMDTCMPL EQU   DMDT+10
DMDTGOOU EQU   DMDT+8
DMDTRUA  EQU   DMDT+6
DMDTMPLT EQU   DMDT+4
DMDTWT   EQU   DMDT+3
DMDTLO   EQU   DMDT+1
DMDTNO   EQU   DMDT
RMEPSND  EQU   RMEP+32
RMEPINT  EQU   RMEPSCH+12
RMEPTME  EQU   RMEPSCH+8
RMEPBCK  EQU   RMEPSCH+4
RMEPFWD  EQU   RMEPSCH
RMEPEND  EQU   RMEP+16
RMEPPRV  EQU   RMEPEPB+12
RMEPACN  EQU   RMEPFLG+3
RMEPTMD  EQU   RMEPFLG+3
RMEPRCR  EQU   RMEPFLG+3
RMEPVFL  EQU   RMEPFLG
RMEPERA  EQU   RMEPEPB+4
RMEPEPA  EQU   RMEPEPB
OUXBEND  EQU   OUXB+144
OUXBTSW  EQU   OUXB+140
OUXBFIXC EQU   OUXB+138
OUXBNVC  EQU   OUXB+136
OUXBUIC  EQU   OUXB+134
OUXBVSC  EQU   OUXB+132
OUXBILS  EQU   OUXB+128
OUXBRSV1 EQU   OUXB+126
OUXBWCT  EQU   OUXB+124
OUXBPRS  EQU   OUXB+120
OUXBSTD  EQU   OUXB+116
OUXBITD  EQU   OUXB+112
OUXBMSS  EQU   OUXB+104
OUXBCPS  EQU   OUXB+96
OUXBAET  EQU   OUXB+92
OUXBTRR  EQU   OUXB+88
OUXBJBR  EQU   OUXB+84
OUXBTRT  EQU   OUXB+80
OUXBTRS  EQU   OUXB+76
OUXBJBT  EQU   OUXB+72
OUXBJBS  EQU   OUXB+68
OUXBTRC  EQU   OUXB+64
OUXBNQT  EQU   OUXB+60
OUXBIOSM EQU   OUXB+56
OUXBSTC  EQU   OUXB+54
OUXBIOS  EQU   OUXB+52
OUXBSTCT EQU   OUXB+48
OUXBCAPR EQU   OUXB+44
OUXBCAPI EQU   OUXB+40
OUXBVAMR EQU   OUXB+36
OUXBVAMO EQU   OUXB+32
OUXBVAMI EQU   OUXB+28
OUXBPREC EQU   OUXB+24
OUXBPOUT EQU   OUXB+20
OUXBPIN  EQU   OUXB+16
OUXBRSW  EQU   OUXB+12
OUXBMET  EQU   OUXB+8
OUXBPET  EQU   OUXB+4
OUXBNAME EQU   OUXB
OUCBEND  EQU   OUCB+136
OUCBNTSP EQU   OUCB+134
OUCBNDS  EQU   OUCB+132
OUCBTIO  EQU   OUCB+128
OUCBTCP  EQU   OUCB+124
OUCBPST  EQU   OUCB+120
OUCBPS2  EQU   OUCBPSS+4
OUCBPS1  EQU   OUCBPSS
OUCBIOSM EQU   OUCB+108
OUCBTMP  EQU   OUCB+104
OUCBR03  EQU   OUCB+102
OUCBIOR  EQU   OUCB+100
OUCBCRV  EQU   OUCB+98
OUCBIRV  EQU   OUCB+96
OUCBWMR  EQU   OUCB+92
OUCBCMRV EQU   OUCB+88
OUCBCF2  EQU   OUCBCFL
OUCBRSM  EQU   OUCBCFL
OUCBRDY  EQU   OUCBCFL
OUCBACN  EQU   OUCBCSW
OUCBACT  EQU   OUCB+80
OUCBWSS  EQU   OUCB+78
OUCBPSO  EQU   OUCB+76
OUCBTMO  EQU   OUCB+72
OUCBTMS  EQU   OUCB+68
OUCBMSO  EQU   OUCB+64
OUCBIOC  EQU   OUCB+60
OUCBCPU  EQU   OUCB+56
OUCBWMS  EQU   OUCB+52
OUCBTMW  EQU   OUCB+48
OUCBIMCB EQU   OUCB+44
OUCBSWC  EQU   OUCB+38
OUCBSRC  EQU   OUCB+37
OUCBR40  EQU   OUCB+30
OUCBR30  EQU   OUCB+29
OUCBRDP  EQU   OUCB+27
OUCBUF7  EQU   OUCBUFL
OUCBUF6  EQU   OUCBUFL
OUCBUF5  EQU   OUCBUFL
OUCBTSWC EQU   OUCBUFL
OUCBTSWP EQU   OUCBUFL
OUCBRSWP EQU   OUCBUFL
OUCBJSAS EQU   OUCBUFL
OUCBJSFS EQU   OUCBUFL
OUCBNQC  EQU   OUCB+22
OUCBMWT  EQU   OUCBEFL
OUCBQSC  EQU   OUCBEFL
OUCBQSS  EQU   OUCBEFL
OUCBNQF  EQU   OUCBEFL
OUCBCIM  EQU   OUCBEFL
OUCBOWT  EQU   OUCBEFL
OUCBTRM  EQU   OUCBEFL
OUCBLWT  EQU   OUCBEFL
OUCBINP  EQU   OUCBTFL
OUCBMAR  EQU   OUCBTFL
OUCBPCH  EQU   OUCBTFL
OUCBRTR  EQU   OUCBTFL
OUCBNTR  EQU   OUCBTFL
OUCBSTR  EQU   OUCBTFL
OUCBATR  EQU   OUCBTFL
OUCBASW  EQU   OUCBAFL
OUCBNWT  EQU   OUCBAFL
OUCBR02  EQU   OUCBAFL
OUCBJSR  EQU   OUCBAFL
OUCBCPL  EQU   OUCBAFL
OUCBRMA  EQU   OUCBAFL
OUCBAF0  EQU   OUCBAFL
OUCBFXS  EQU   OUCBYFL
OUCBDTA  EQU   OUCBYFL
OUCBAXS  EQU   OUCBYFL
OUCBPSTR EQU   OUCBYFL
OUCBMNT  EQU   OUCBYFL
OUCBSTT  EQU   OUCBYFL
OUCBPSTE EQU   OUCBYFL
OUCBSCN  EQU   OUCBSFL
OUCBENQ  EQU   OUCBSFL
OUCBNSWI EQU   OUCBSFL
OUCBINV  EQU   OUCBSFL
OUCBBIB  EQU   OUCBSFL
OUCBCTI  EQU   OUCBSFL
OUCBNSW  EQU   OUCBSFL
OUCBQF7  EQU   OUCBQFL
OUCBQF6  EQU   OUCBQFL
OUCBOUT  EQU   OUCBQFL
OUCBOFF  EQU   OUCBQFL
OUCBQSFL EQU   OUCBQFL
OUCBGOB  EQU   OUCBQFL
OUCBGOI  EQU   OUCBQFL
OUCBGOO  EQU   OUCBQFL
OUCBTMA  EQU   OUCB+12
OUCBBCK  EQU   OUCB+8
ASCBEND  EQU   ASCB+208
ASCBSRBT EQU   ASCB+200
ASCBSWTL EQU   ASCB+196
ASCBRS14 EQU   ASCB+195
ASCBSMCT EQU   ASCB+194
ASCBRS12 EQU   ASCB+192
ASCBPCTT EQU   ASCB+188
ASCBVGTT EQU   ASCB+184
ASCBRV43 EQU   ASCBSRQ4
ASCBRV42 EQU   ASCBSRQ4
ASCBRV41 EQU   ASCBSRQ4
ASCBRV40 EQU   ASCBSRQ4
ASCBRV39 EQU   ASCBSRQ4
ASCBRV38 EQU   ASCBSRQ4
ASCBRV37 EQU   ASCBSRQ4
ASCBRV36 EQU   ASCBSRQ4
ASCBRV35 EQU   ASCBSRQ3
ASCBRV34 EQU   ASCBSRQ3
ASCBRV33 EQU   ASCBSRQ3
ASCBRV32 EQU   ASCBSRQ3
ASCBRV31 EQU   ASCBSRQ3
ASCBRV30 EQU   ASCBSRQ3
ASCBRV29 EQU   ASCBSRQ3
ASCBRV28 EQU   ASCBSRQ3
ASCBRV27 EQU   ASCBSRQ2
ASCBRV26 EQU   ASCBSRQ2
ASCBRV25 EQU   ASCBSRQ2
ASCBRV24 EQU   ASCBSRQ2
ASCBRV23 EQU   ASCBSRQ2
ASCBRV22 EQU   ASCBSRQ2
ASCBRV21 EQU   ASCBSRQ2
ASCBRV20 EQU   ASCBSRQ2
ASCBRV19 EQU   ASCBSRQ1
ASCBRV18 EQU   ASCBSRQ1
ASCBRV17 EQU   ASCBSRQ1
ASCBRV16 EQU   ASCBSRQ1
ASCBRV15 EQU   ASCBSRQ1
ASCBRV14 EQU   ASCBSRQ1
ASCBRV13 EQU   ASCBSRQ1
ASCBSTA  EQU   ASCBSRQ1
ASCBJBNS EQU   ASCB+176
ASCBJBNI EQU   ASCB+172
ASCBMCC  EQU   ASCB+168
ASCBRTWA EQU   ASCB+164
ASCBIQEA EQU   ASCB+160
ASCBXMPQ EQU   ASCB+156
ASCBRS01 EQU   ASCB+154
ASCBFMCT EQU   ASCB+152
ASCBOUXB EQU   ASCB+148
ASCBOUCB EQU   ASCB+144
ASCBMECB EQU   ASCB+140
ASCBQECB EQU   ASCB+136
ASCBLSQH EQU   ASCBLKGP+4
ASCBLOCK EQU   ASCBLKGP
ASCBTCBS EQU   ASCB+124
ASCBNVSC EQU   ASCB+122
ASCBVSC  EQU   ASCB+120
ASCBSRBS EQU   ASCB+118
ASCBSSRB EQU   ASCB+116
ASCBRV06 EQU   ASCBFLG2
ASCBRV05 EQU   ASCBFLG2
ASCBRV04 EQU   ASCBFLG2
ASCBSNQS EQU   ASCBFLG2
ASCBS2S  EQU   ASCBFLG2
ASCBCEXT EQU   ASCBFLG2
ASCBPXMT EQU   ASCBFLG2
ASCBXMPT EQU   ASCBFLG2
ASCBRF07 EQU   ASCBDSP1
ASCBRF06 EQU   ASCBDSP1
ASCBRF05 EQU   ASCBDSP1
ASCBRF04 EQU   ASCBDSP1
ASCBRF03 EQU   ASCBDSP1
ASCBRF02 EQU   ASCBDSP1
ASCBFAIL EQU   ASCBDSP1
ASCBNOQ  EQU   ASCBDSP1
ASCBSWCT EQU   ASCB+112
ASCBASXB EQU   ASCB+108
ASCBTMCH EQU   ASCB+104
ASCBNSWP EQU   ASCBFLG1
ASCBTYP1 EQU   ASCBFLG1
ASCBSTND EQU   ASCBFLG1
ASCBABNT EQU   ASCBFLG1
ASCBTERM EQU   ASCBFLG1
ASCBS3S  EQU   ASCBFLG1
ASCBCMSH EQU   ASCBFLG1
ASCBTOFF EQU   ASCBFLG1
ASCBRF01 EQU   ASCBRCTF
ASCBTMLW EQU   ASCBRCTF
ASCBOUT  EQU   ASCBRCTF
ASCBWAIT EQU   ASCBRCTF
ASCBRV08 EQU   ASCBRCTF
ASCBFQU  EQU   ASCBRCTF
ASCBFRS  EQU   ASCBRCTF
ASCBTMNO EQU   ASCBRCTF
ASCBAFFN EQU   ASCBFW1
ASCBDUMP EQU   ASCB+96
ASCBRV44 EQU   ASCB+92
ASCBUBET EQU   ASCB+88
ASCBECB  EQU   ASCB+84
ASCBJSTL EQU   ASCB+80
ASCBEWST EQU   ASCB+72
ASCBEJST EQU   ASCB+64
ASCBTSB  EQU   ASCB+60
ASCBCSCB EQU   ASCB+56
ASCBRSMA EQU   ASCBRSM+1
ASCBRV54 EQU   ASCBRSMF
ASCBRV53 EQU   ASCBRSMF
ASCBRV52 EQU   ASCBRSMF
ASCBRV51 EQU   ASCBRSMF
ASCBVEQR EQU   ASCBRSMF
ASCBN2LP EQU   ASCBRSMF
ASCB1LPU EQU   ASCBRSMF
ASCB2LPU EQU   ASCBRSMF
ASCBLDA  EQU   ASCB+48
ASCBSTOR EQU   ASCB+44
ASCBDP   EQU   ASCB+43
ASCBRV07 EQU   ASCB+42
ASCBIOSM EQU   ASCB+40
ASCBSEQN EQU   ASCB+38
ASCBASID EQU   ASCB+36
ASCBCPUS EQU   ASCB+32
ASCBSPL  EQU   ASCB+28
ASCBIOSP EQU   ASCB+24
ASCBSYNC EQU   ASCBSUPC+4
ASCBSVRB EQU   ASCBSUPC
ASCBCMSF EQU   ASCB+12
ASCBBWDP EQU   ASCB+8
ASCBFWDP EQU   ASCB+4
ASCBASCB EQU   ASCB
ASCBEGIN EQU   ASCB
RRPAEND  EQU   RRPA+24
RRPAEPA  EQU   RRPA+20
RRPARTN  EQU   RRPAINS
RRPATOD  EQU   RRPA+12
RRPAKEY  EQU   RRPA+10
RRPARTI  EQU   RRPAFLG+1
RRPACTL  EQU   RRPAFLG+1
RRPAF11  EQU   RRPAFLG+1
RRPAIPS  EQU   RRPAFLG+1
RRPAF07  EQU   RRPAFLG
RRPAOPT  EQU   RRPAFLG
RRPAF05  EQU   RRPAFLG
RRPAF04  EQU   RRPAFLG
RRPADSP  EQU   RRPAFLG
RRPASVC  EQU   RRPAFLG
RRPAENB  EQU   RRPAFLG
RRPADSB  EQU   RRPAFLG
RRPAVLU  EQU   RRPAINP
RRPACOD  EQU   RRPAINC+3
@NM00002 EQU   RRPAFLG0
RRPANSWI EQU   RRPAFLG0
RRPAASD  EQU   RRPAINC
EPSTEND  EQU   EPST+80
EPSTCSI  EQU   RMEPBCSI
EPSTCSO  EQU   RMEPBCSO
EPSTCL3  EQU   RMEPBCL3
EPSTIL3  EQU   RMEPBIL3
EPSTWM3  EQU   RMEPBWM3
EPDTEND  EQU   EPDT+96
RMEPBRPS EQU   EPDT+80
RMEPBHIT EQU   EPDT+64
RMEPBUXB EQU   EPDT+48
RMEPBIL4 EQU   EPDT+32
RMEPBDEL EQU   EPDT+16
RMEPBIPS EQU   EPDT
EPATEND  EQU   EPAT+400
RMEPBPR1 EQU   EPAT+368
RMEPBEQ1 EQU   EPAT+336
RMEPBAP1 EQU   EPAT+304
RMEPBCL1 EQU   EPAT+272
RMEPBWM2 EQU   EPAT+240
RMEPBIL1 EQU   EPAT+208
RMEPBASM EQU   EPAT+176
RMEPBMS2 EQU   EPAT+160
RMEPBPR5 EQU   EPAT+144
RMEPBMS6 EQU   EPAT+112
RMEPBSQA EQU   EPAT+96
RMEPBRM2 EQU   EPAT+64
RMEPBRM1 EQU   EPAT+32
RMEPBCAP EQU   EPAT
RMSBEND  EQU   RMSB+120
RMSBRA9  EQU   RMSB+116
RMSBIL0  EQU   RMSB+112
RMSBCL0  EQU   RMSB+108
RMSBRA6  EQU   RMSB+104
RMSBNOP  EQU   RMSB+100
RMSBSET  EQU   RMSB+96
RMSBWR6  EQU   RMSB+92
RMSBWR4  EQU   RMSB+88
RMSBTRC  EQU   RMSB+84
RMSBWMY  EQU   RMSB+80
RMSBWMR  EQU   RMSB+76
RMSBWMQ  EQU   RMSB+72
RMSBWMO  EQU   RMSB+68
RMSBWMK  EQU   RMSB+60
RMSBWM4  EQU   RMSB+56
RMSBWM1  EQU   RMSB+52
RMSBWM5  EQU   RMSB+48
RMSBCRY  EQU   RMSB+44
RMSBCRN  EQU   RMSB+40
RMSBCRL  EQU   RMSB+36
RMSBI10  EQU   RMSB+32
RMSBI09  EQU   RMSB+28
RMSBR24  EQU   RMSB+24
RMSBI07  EQU   RMSB+20
RMSBI06  EQU   RMSB+16
RMSBI05  EQU   RMSB+12
RMSBI04  EQU   RMSB+8
RMSBI03  EQU   RMSB+4
RMSBI02  EQU   RMSB
RMEXEND  EQU   RMEX+64
RMEXSRE  EQU   RMEX+60
RMEXXPE  EQU   RMEX+56
RMEXRR2  EQU   RMEX+52
RMEXRR1  EQU   RMEX+48
RMEXI48  EQU   RMEX+44
RMEXCET  EQU   RMEX+40
RMEXCXX  EQU   RMEX+36
RMEXI01  EQU   RMEX+32
RMEXCTL  EQU   RMEPBCTL
RMEXEVT  EQU   RMEPBEVT
RMCAEND  EQU   RMCA+168
RMCAR90  EQU   RMCA+164
RMCAUSSC EQU   RMCASRC+36
RMCAEXSC EQU   RMCASRC+32
RMCANQSC EQU   RMCASRC+28
RMCARQSC EQU   RMCASRC+24
RMCADWSC EQU   RMCASRC+20
RMCARSSC EQU   RMCASRC+16
RMCAXSSC EQU   RMCASRC+12
RMCALWSC EQU   RMCASRC+8
RMCATISC EQU   RMCASRC+4
RMCATOSC EQU   RMCASRC
RMCACPW1 EQU   RMCA+120
RMCACIUS EQU   RMCA+118
RMCAR14  EQU   RMCA+116
RMCAR13  EQU   RMCA+112
RMCAWKA  EQU   RMCA+80
RMCAMAS  EQU   RMCA+76
RMCAR20  EQU   RMCA+74
RMCAISV  EQU   RMCA+70
RMCAR11  EQU   RMCA+68
RMCAINV  EQU   RMCA+64
RMCAR10  EQU   RMCA+60
RMCARSV9 EQU   RMCA+56
RMCACHU  EQU   RMCA+52
RMCACHP  EQU   RMCA+48
RMCARSV8 EQU   RMCA+44
RMCARSV7 EQU   RMCA+40
RMCARSVF EQU   RMCAFLGS
RMCASAAF EQU   RMCAFLGS
RMCARSV5 EQU   RMCA+32
RMCARSV4 EQU   RMCA+28
RMCARSV3 EQU   RMCA+24
RMCATOI  EQU   RMCA+20
RMCATRS  EQU   RMCA+16
RMCATQS  EQU   RMCA+12
RMCARSV2 EQU   RMCA+10
RMCARSV1 EQU   RMCA+8
RMCAINUS EQU   RMCA+6
RMCAR04  EQU   RMCA+4
RMCANAME EQU   RMCA
RMPTEND  EQU   RMPT+72
RMPTOPE  EQU   RMPT+66
RMPTOPI  EQU   RMPT+63
RMPTOPC  EQU   RMPT+60
RMPTIOET EQU   RMPT+56
RMPTCPET EQU   RMPT+52
RMPTWMET EQU   RMPT+48
RMPTSAET EQU   RMPT+44
RMPTXCHT EQU   RMPT+40
RMPTRSV3 EQU   RMPT+38
RMPTRSV2 EQU   RMPT+36
RMPTRSV1 EQU   RMPT+32
RMPTTOL  EQU   RMPT+28
RMPTTOM  EQU   RMPT+24
RMPTTCS  EQU   RMPT+20
RMPTIMN  EQU   RMPT+16
RMPTERV  EQU   RMPT+12
RMPTIOC  EQU   RMPT+8
RMPTCPU  EQU   RMPT+4
RMPTNAME EQU   RMPT
RCTEND   EQU   RCT+88
RCVRSVF3 EQU   RCT+84
RCVRSVF2 EQU   RCT+80
RCVTAPAD EQU   RCT+76
RCVRSVF1 EQU   RCT+74
RCVTOTDF EQU   RCT+72
RCVBPTTM EQU   RCT+68
RCVBPTCT EQU   RCT+64
RCVASMQ  EQU   RCT+60
RCVAVQP  EQU   RCT+56
RCVCPUC  EQU   RCT+52
RCVUICC  EQU   RCT+48
RCVPTR   EQU   RCT+46
RCVASMQA EQU   RCT+44
RCVAVQC  EQU   RCT+42
RCVCPUA  EQU   RCT+40
RCVUICA  EQU   RCT+38
RCVCTMC  EQU   RCT+36
RCCRSVF3 EQU   RCT+32
RCCRSVF2 EQU   RCT+28
RCCRSVF1 EQU   RCT+26
RCCLCHRR EQU   RCT+24
RCCLCHUT EQU   RCT+22
RCCTOTUT EQU   RCT+20
RCCASMTH EQU   RCT+18
RCCASMTL EQU   RCT+16
RCCPTRTH EQU   RCT+14
RCCPTRTL EQU   RCT+12
RCCCPUTH EQU   RCT+10
RCCCPUTL EQU   RCT+8
RCCUICTH EQU   RCT+6
RCCUICTL EQU   RCT+4
RCTRCT   EQU   RCT
MCTEND   EQU   MCT+96
MCVRSVF3 EQU   MCT+92
MCVRSVF2 EQU   MCT+88
MCVRSVF1 EQU   MCT+84
MCCINTMX EQU   MCT+80
MCCPR1IN EQU   MCT+76
MCCUICIN EQU   MCT+72
MCCUICBD EQU   MCT+68
MCTRSVB1 EQU   MCT+67
MCTXRSVD EQU   MCT+66
MCTFX2   EQU   MCTOFLGS
MCTFX1   EQU   MCTOFLGS
MCTSMS2  EQU   MCTOFLGS
MCTSMS1  EQU   MCTOFLGS
MCTAMS2  EQU   MCTOFLGS
@NM00001 EQU   MCTOFLGS
MCTASM2  EQU   MCTOFLGS
MCTASM1  EQU   MCTOFLGS
MCTSF04  EQU   MCTSFLGS
MCTFAVQ  EQU   MCTSFLGS
MCTAVQ1  EQU   MCTSFLGS
MCTSQA2  EQU   MCTSFLGS
MCTSQA1  EQU   MCTSFLGS
MCVAVQC  EQU   MCT+60
MCVFRCNT EQU   MCT+58
MCVSTCRI EQU   MCT+56
MCCEND   EQU   MCT+56
MCCASMT2 EQU   MCT+54
MCCASMT1 EQU   MCT+52
MCCRSVH1 EQU   MCT+50
MCCPLUS  EQU   MCT+48
MCCMS403 EQU   MCT+44
MCCMS402 EQU   MCT+40
MCCMS401 EQU   MCT+36
MCCMS400 EQU   MCT+32
MCCMS203 EQU   MCT+28
MCCMS202 EQU   MCT+24
MCCMS201 EQU   MCT+20
MCCMS200 EQU   MCT+16
MCCMS102 EQU   MCT+12
MCCMS101 EQU   MCT+8
MCCMS100 EQU   MCT+4
MCTMCT   EQU   MCT
ICTEND   EQU   ICT+88
ICTRSVB3 EQU   ICT+87
ICTRSVB2 EQU   ICT+86
ICTRSVB1 EQU   ICT+85
ICT003   EQU   ICTFLAGS
ICTIOOT  EQU   ICTFLAGS
ICTIOL   EQU   ICTFLAGS
ICTDRSV4 EQU   ICTFLAGS
ICVIRSV3 EQU   ICT+80
ICVULCBT EQU   ICT+76
ICVOLCBT EQU   ICT+72
ICVLCBPT EQU   ICT+68
ICVLUTBT EQU   ICT+64
ICCEND   EQU   ICT+64
ICCRSV01 EQU   ICT+62
ICCEDSUT EQU   ICT+60
ICCSRSV2 EQU   ICT+58
ICCSIGUP EQU   ICT+56
ICCINDAT EQU   ICT+52
ICCINLOT EQU   ICT+48
ICCINHIT EQU   ICT+44
ICCDAUTH EQU   ICT+42
ICCLOUTH EQU   ICT+40
ICCHIUTH EQU   ICT+38
ICCDASF2 EQU   ICT+36
ICCDASF1 EQU   ICT+34
ICCRVSCF EQU   ICT+28
ICCMNIOR EQU   ICT+26
ICCLCHN  EQU   ICT+24
ICCLCLST EQU   ICT+20
ICCMNSWP EQU   ICT+16
ICCMNUIN EQU   ICT+12
ICCMXICT EQU   ICT+8
ICCMRSV1 EQU   ICT+4
ICTICT   EQU   ICT
CCVEND   EQU   CCT+128
CCTFLG2  EQU   CCT+125
CCTCPUOT EQU   CCTFLG1
CCTALL   EQU   CCTFLG1
CCVCPUCT EQU   CCT+122
CCVENQCT EQU   CCT+120
CCVLGFMC EQU   CCT+118
CCVLGUTL EQU   CCT+116
CCVR07   EQU   CCT+114
CCVR06   EQU   CCT+112
CCVUTILP EQU   CCT+110
CCVR05   EQU   CCT+108
CCVIMBBT EQU   CCT+104
CCVEJST  EQU   CCT+100
CCVPGCPF EQU   CCT+96
CCVRVSWF EQU   CCT+92
CCVRBSTD EQU   CCT+88
CCVR04   EQU   CCT+84
CCVRBSWT EQU   CCT+80
CCVR03   EQU   CCT+76
CCCEND   EQU   CCT+76
CCCRSVH1 EQU   CCT+74
CCCSCFC2 EQU   CCT+72
CCCSCFC1 EQU   CCT+70
CCCR02   EQU   CCT+68
CCCSIGUR EQU   CCT+66
CCCSIGDP EQU   CCT+64
CCCSCFAC EQU   CCT+62
CCCLOSCF EQU   CCT+56
CCCHISCF EQU   CCT+54
CCCUTLOT EQU   CCT+52
CCCUTHIT EQU   CCT+50
CCCAPRHT EQU   CCT+48
CCCAPRLT EQU   CCT+46
CCCR01   EQU   CCT+44
CCCAPLDP EQU   CCT+38
CCCAPBDP EQU   CCT+36
CCCAPROT EQU   CCT+34
CCCAPDIV EQU   CCT+32
CCCRSVF1 EQU   CCT+28
CCCMNSIN EQU   CCT+24
CCCMNUIN EQU   CCT+20
CCCAPDEL EQU   CCT+16
CCCAPMAX EQU   CCT+12
CCCAPMIN EQU   CCT+8
CCCAPMET EQU   CCT+4
CCTCCT   EQU   CCT
RMCTEND  EQU   RMCT+192
RMCTR50  EQU   RMCT+190
RMCTSRBT EQU   RMCT+176
RMCTOUXB EQU   RMCT+172
RMCTOUCB EQU   RMCT+168
RMCTTOCI EQU   RMCT+160
RMCTCPID EQU   RMCT+156
RMCTTELM EQU   RMCT+152
RMCTF09  EQU   RMCTFLGS+1
RMCTF07  EQU   RMCTFLGS+1
RMCTF06  EQU   RMCTFLGS
RMCTRSV2 EQU   RMCTFLGS
RMCTSTW  EQU   RMCTFLGS
RMCTRSV1 EQU   RMCTFLGS
RMCTINIT EQU   RMCTFLGS
RMCTF03  EQU   RMCTFLGS
RMCTCPS1 EQU   RMCTFLGS
RMCTRQSV EQU   RMCT+144
RMCTALR  EQU   RMCT+140
RMCTALA  EQU   RMCT+136
RMCTTOC  EQU   RMCT+128
RMCTTOD  EQU   RMCT+124
RMCTTBS  EQU   RMCT+120
RMCTR10  EQU   RMCT+116
RMCTOTQE EQU   RMCT+108
RMCTAQHD EQU   RMCT+100
RMCTAQCT EQU   RMCT+96
RMCTTMQE EQU   RMCT+92
RMCTEPPR EQU   RMCT+80
RMCTFLTM EQU   RMCT+76
RMCTEPET EQU   RMCT+72
RMCTITT  EQU   RMCT+68
RMCTADJC EQU   RMCT+64
RMCTEPBG EQU   RMCT+60
RMCTEPAT EQU   RMCT+56
RMCTEPDT EQU   RMCT+52
RMCTEPPA EQU   RMCT+48
RMCTRMSB EQU   RMCT+44
RMCTRMEX EQU   RMCT+40
RMCTRMPD EQU   RMCT+36
RMCTRMSA EQU   RMCT+32
RMCTRLCT EQU   RMCT+28
RMCTRMCA EQU   RMCT+20
RMCTRMPT EQU   RMCT+16
RMCTMCT  EQU   RMCT+12
RMCTICT  EQU   RMCT+8
RMCTCCT  EQU   RMCT+4
RMCTNAME EQU   RMCT
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@ENDDATA EQU   *
         END   IRARMSET,(C'PLS1744',0701,78116)
