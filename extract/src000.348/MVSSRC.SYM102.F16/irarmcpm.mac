         TITLE 'IRARMCPM - SYSTEM RESOURCES MANAGEMENT CPU MANAGEMENT  *
                        '
IRARMCPM CSECT ,                                                   0001
@PROLOG  BALR  @12,0                                               0001
@PSTART  DS    0H                                                  0001
         USING @PSTART,@12                                         0001
*                                                                  0034
*                                  /*
         ENTRY IRARMAP1
IRARMAP1 DS    0H
         STM   @00,@14,000+000(@13)    SAVE INVOKING RTNE REGS
         ST    @01,RRPAEPA(,RRPAPTR)   INDICATE NEW CURRENT RMEP
         LA    @12,IRARMAP1-@PSTART    DISPLACEMENT TO MODULE BASE
         LCR   @12,@12                 NEGATIVE FOR SUBTRACT
         ALR   @12,@15                 SETUP MODULE ADDRESSABILITY
*/*                                                                  */
*/*      BEFORE ASCBS ARE REORDERED ON THE DISPATCHING QUEUE         */
*/*      DETERMINE WHETHER LOWEST PRIORITY ASCB WAS DISPATCHED       */
*/*      OR NOT AS A SERVICE FOR CPU LOAD BALANCING                  */
*/*                                                                  */
*                                                                  0035
*   IF CVTASCBL                     /* IF ELAPSED JOB STEP TIME      */
*       ->CPASCBET=                 /* OF LOWEST PRIORITY USER IS    */
*       CCVEJST THEN                /* UNCHANGED SINCE LAST AP1 CALL */
         L     @07,CVTPTR                                          0035
         L     @07,CVTASCBL(,@07)                                  0035
         CLC   CPASCBET(4,@07),CCVEJST(RMCTPTR)                    0035
         BNE   @RF00035                                            0035
*     CCTALL='1'B;                  /* SET CPU ALL USED UP FLAG      */
         OI    CCTALL(RMCTPTR),B'10000000'                         0036
*   ELSE                            /* ELSE                          */
*     CCTALL='0'B;                  /* SET FLAG OFF                  */
         B     @RC00035                                            0037
@RF00035 NI    CCTALL(RMCTPTR),B'01111111'                         0037
*/*                                                                  */
*/*      COMPUTE NEW DISPATCHING PRIORITY FOR EACH APG USER IN       */
*/*      MAIN STORAGE BASED ON USER MEAN TIME TO WAIT                */
*/*                                                                  */
*                                                                  0038
*   APOUCB=I0;                      /* CLEAR POINTER TO APG USER WITH*/
@RC00035 SLR   @07,@07                                             0038
         ST    @07,APOUCB                                          0038
*   APCPR=I0;                       /* LOWEST COMPUTED MEAN TIME TO
*                                      WAIT                          */
         STH   @07,APCPR                                           0039
*   ROTACT=I0;                      /* CLR ROTATE USER COUNT @Z40BPEB*/
         STH   @07,ROTACT                                          0040
*   ROTASQN=I0;                     /* CLR DP SEQN NUMBER    @Z40BPEB*/
         STH   @07,ROTASQN                                         0041
*   ROTAOUCB=I0;                    /* CLR OUCB TO BE CHAPPED@Z40BPEB*/
         ST    @07,ROTAOUCB                                        0042
*   OUCBPTR=RMCTINQE;               /* SET UP ADDRESSING TO INQUEUE  */
         L     OUCBPTR,RMCTINQE(,RMCTPTR)                          0043
*   OUCBPTR=OUCBFWD;                /* POINT TO FIRST USER ON QUEUE  */
         L     OUCBPTR,OUCBFWD(,OUCBPTR)                           0044
*   DO WHILE OUCBNAME='OUCB';       /* EXAMINE EACH USER ON IN QUEUE */
         B     @DE00045                                            0045
@DL00045 DS    0H                                                  0046
*     IF OUCBGOO='0'B               /* IGNORE USERS WITHOUT CURRENT  */
*         &OUCBGOI='0'B             /* OUXBS                         */
*         &OUCBGOB='0'B             /*                               */
*         &OUCBOUT='0'B             /*                               */
*         &OUCBAPG='1'B THEN        /* OR NON APG USERS              */
         TM    OUCBGOO(OUCBPTR),B'11100100'                        0046
         BNZ   @RF00046                                            0046
         TM    OUCBAPG(OUCBPTR),B'01000000'                        0046
         BNO   @RF00046                                            0046
*       DO;                         /* FOR SELECTED USER             */
*         ASCBPTR=OUCBASCB;         /* SET UP ADDRESSING TO ASCB     */
         L     ASCBPTR,OUCBASCB(,OUCBPTR)                          0048
*         IF OUCBNDP=CCCAPMDP+CCCAPROT/* USER IS IN          @Z40BPEB*/
*           THEN                    /* ROTATE APG            @Z40BPEB*/
         LH    @07,CCCAPMDP(,RMCTPTR)                              0049
         AH    @07,CCCAPROT(,RMCTPTR)                              0049
         SLR   @15,@15                                             0049
         IC    @15,OUCBNDP(,OUCBPTR)                               0049
         CR    @07,@15                                             0049
         BNE   @RF00049                                            0049
*           DO;                     /*                       @Z40BPEB*/
*             ROTACT=ROTACT+I1;     /* INCREMENT CT          @Z40BPEB*/
         LH    @07,ROTACT                                          0051
         LA    @07,1(,@07)                                         0051
         STH   @07,ROTACT                                          0051
*             IF ROTASQN=I0×        /* FIRST ROTATE?         @Z40BPEB*/
*                 (ROTASQN>ASCBSEQN&/* LOWER ON Q &          @Z40BPEB*/
*                 ASCBTCBS^=I0)     /* DISPATCHABLE          @Z40BPEB*/
*               THEN                /*                       @Z40BPEB*/
         LH    @07,ROTASQN                                         0052
         SLR   @15,@15                                             0052
         CR    @07,@15                                             0052
         BE    @RT00052                                            0052
         CH    @07,ASCBSEQN(,ASCBPTR)                              0052
         BNH   @RF00052                                            0052
         C     @15,ASCBTCBS(,ASCBPTR)                              0052
         BE    @RF00052                                            0052
@RT00052 DS    0H                                                  0053
*               DO;                 /*                       @Z40BPEB*/
*                 ROTASQN=ASCBSEQN; /* SAVE                  @Z40BPEB*/
         LH    @07,ASCBSEQN(,ASCBPTR)                              0054
         STH   @07,ROTASQN                                         0054
*                 ROTAOUCB=OUCBPTR; /* SAVE USER             @Z40BPEB*/
         ST    OUCBPTR,ROTAOUCB                                    0055
*               END;                /*                       @Z40BPEB*/
*           END;                    /* END ROTATE            @Z40BPEB*/
*         ELSE                      /* NOT IN ROTATE         @Z40BPEB*/
*           IF OUCBNDP<=CCCAPGDP    /* IN MEAN-TIME-         @Z40BPEB*/
*             THEN                  /* TO-WAIT               @Z40BPEB*/
         B     @RC00049                                            0058
@RF00049 SLR   @07,@07                                             0058
         IC    @07,OUCBNDP(,OUCBPTR)                               0058
         CH    @07,CCCAPGDP(,RMCTPTR)                              0058
         BH    @RF00058                                            0058
*             CALL NEWDP;           /* GET NEW MTW DP        @Z40BPEB*/
         BAL   @14,NEWDP                                           0059
*       END;                                                       0060
@RF00058 DS    0H                                                  0060
@RC00049 DS    0H                                                  0061
*     OUCBPTR=OUCBFWD;              /* POINT TO NEXT OUCB            */
@RF00046 L     OUCBPTR,OUCBFWD(,OUCBPTR)                           0061
*   END;                                                           0062
*                                                                  0062
@DE00045 CLC   OUCBNAME(4,OUCBPTR),@CC02226                        0062
         BE    @DL00045                                            0062
*/*                                                                  */
*/*      IF CPU UTILIZATION IS UP TO 100 PERCENT, MOVE LOWEST        */
*/*      PRIORITY APG USER WHO RECEIVED THE MINIMUM APG EXECUTION    */
*/*      INTERVAL TO THE BOTTOM OF THE APG GROUP                     */
*/*                                                                  */
*                                                                  0063
*   IF CCTALL='1'B                  /* IF SOME USERS ARE NOT GETTING */
*       &CCVUTILP>=I100             /* DISPATCHED DUE TO HEAVY CPU   */
*       &APOUCB^=I0 THEN            /* UTILIZATION, SET DP OF LOWEST */
         TM    CCTALL(RMCTPTR),B'10000000'                         0063
         BNO   @RF00063                                            0063
         LH    @07,CCVUTILP(,RMCTPTR)                              0063
         C     @07,@CF02218                                        0063
         BL    @RF00063                                            0063
         L     @07,APOUCB                                          0063
         LTR   @07,@07                                             0063
         BZ    @RF00063                                            0063
*     APOUCB->OUCBNDP=CCCAPMDP;     /* EXECUTING APG USER TO MINIMUM */
         LH    @15,CCCAPMDP(,RMCTPTR)                              0064
         STC   @15,OUCBNDP(,@07)                                   0064
*/*                                                                  */
*/*      REQUEST CHAPPING OF THOSE APG USERS IN MAIN STORAGE         */
*/*      WHOSE DISPATCHING PRIORITY HAS CHANGED                      */
*/*                                                                  */
*                                                                  0065
*   APX=ADDR(RCHAPLST);             /* INDEX POINTS TO FIRST ENTRY   */
@RF00063 LA    @11,RCHAPLST                                        0065
         ST    @11,APX                                             0065
*   APCHAPCT=I0;                    /* ZERO CHAP COUNT               */
         SLR   APCHAPCT,APCHAPCT                                   0066
*   APUSRCT=I0;                     /* ZERO APG INCORE USER COUNT    */
         SLR   APUSRCT,APUSRCT                                     0067
*   OUCBPTR=RMCTINQE;               /* POINT TO IN QUEUE             */
         L     OUCBPTR,RMCTINQE(,RMCTPTR)                          0068
*   CALL CHAP;                      /* GO TO CHAP SUBROUTINE         */
         BAL   @14,CHAP                                            0069
*/*                                                                  */
*/*      CLEAR CHAP LIST IF PARTIALLY FILLED                         */
*/*                                                                  */
*                                                                  0070
*   RESPECIFY                                                      0070
*     RCHAPPTR RESTRICTED;                                         0070
*   RCHAPPTR=ADDR(RCHAPLST);        /* PARM REG POINTS TO CHAP LIST  */
         LA    RCHAPPTR,RCHAPLST                                   0071
*   IF APX^=RCHAPPTR THEN           /* IF LIST NOT FULL,             */
         L     @11,APX                                             0072
         CR    @11,RCHAPPTR                                        0072
         BE    @RF00072                                            0072
*     DO;                                                          0073
*       APX=APX-RCHAPLEN;           /* POINT TO LAST VALID ENTRY     */
         SH    @11,RCHAPLEN                                        0074
         ST    @11,APX                                             0074
*       RCHAPEND='1'B;              /* INDICATE END OF CHAP LIST     */
*                                                                  0075
         OI    RCHAPEND(@11),B'10000000'                           0075
*       /*************************************************************/
*       /*                                                           */
*       /* ? IRACTLCL EPN(I02)                                       */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0076
*       CALL RMSBI02->IRARMRTN;     /* INVOKE I02 SUBRTN             */
*                                                                  0076
         L     @15,RMSBI02(,RMCTPTR)                               0076
         BALR  @14,@15                                             0076
*       /*************************************************************/
*       /*                                                           */
*       /* INVOKE ASCBCHAP                                           */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0077
*     END;                                                         0077
*   RESPECIFY                                                      0078
*     RCHAPPTR UNRESTRICTED;                                       0078
*                                                                  0078
@RF00072 DS    0H                                                  0079
*/*                                                                  */
*/*      COMPUTE TIME INTERVAL FOR NEXT APG INVOCATION BASED ON      */
*/*      PERCENTAGE OF APG USERS CHAPPED                             */
*/*                                                                  */
*                                                                  0079
*   IF APCHAPCT=I0 THEN             /* IF NO USERS WERE CHAPPED      */
         SLR   @11,@11                                             0079
         CR    APCHAPCT,@11                                        0079
         BNE   @RF00079                                            0079
*     APCHAPPR=I0;                  /* CHAP PERCENTAGE IS ZERO       */
         ST    @11,APCHAPPR                                        0080
*   ELSE                            /* OTHERWISE                     */
*     APCHAPPR=                     /* CHAP PERCENTAGE               */
*         APCHAPCT*I100             /* = NUMBER OF CHAPS             */
*         /APUSRCT;                 /* OVER NUMBER OF APG USERS      */
         B     @RC00079                                            0081
@RF00079 LR    @01,APCHAPCT                                        0081
         M     @00,@CF02218                                        0081
         DR    @00,APUSRCT                                         0081
         ST    @01,APCHAPPR                                        0081
*   APINT=RMEPINT;                  /* GET CURRENT APG INTERVAL      */
@RC00079 L     @01,RMEPPTR(,RRPAPTR)                               0082
         L     APINT,RMEPINT(,@01)                                 0082
*   IF APCHAPPR>CCCAPRHT THEN       /* IF THE NUMBER OF CHAPS WAS  0083
*                                      HIGH                          */
         L     @15,APCHAPPR                                        0083
         CH    @15,CCCAPRHT(,RMCTPTR)                              0083
         BNH   @RF00083                                            0083
*     APINT=MAX(CCCAPMIN,           /* SHORTEN APG INVOCATION        */
*         APINT-CCCAPDEL);          /* INTERVAL                      */
         LR    @15,APINT                                           0084
         SL    @15,CCCAPDEL(,RMCTPTR)                              0084
         L     @14,CCCAPMIN(,RMCTPTR)                              0084
         CR    @14,@15                                             0084
         BNL   *+6
         LR    @14,@15                                             0084
         LR    APINT,@14                                           0084
*   ELSE                            /* OTHERWISE                     */
*     IF APCHAPPR<CCCAPRLT THEN     /* IF THE NUMBER OF CHAPS WAS LOW*/
         B     @RC00083                                            0085
@RF00083 L     @15,APCHAPPR                                        0085
         CH    @15,CCCAPRLT(,RMCTPTR)                              0085
         BNL   @RF00085                                            0085
*       APINT=MIN(CCCAPMAX,         /* LENGTHEN APG                  */
*           APINT+CCCAPDEL);        /* INVOCATION INTERVAL           */
         LR    @15,APINT                                           0086
         AL    @15,CCCAPDEL(,RMCTPTR)                              0086
         L     @14,CCCAPMAX(,RMCTPTR)                              0086
         CR    @14,@15                                             0086
         BNH   *+6
         LR    @14,@15                                             0086
         LR    APINT,@14                                           0086
*   RMEPINT=APINT;                  /* STORE NEW INTERVAL IN RMEP    */
@RF00085 DS    0H                                                  0087
@RC00083 L     @01,RMEPPTR(,RRPAPTR)                               0087
         ST    APINT,RMEPINT(,@01)                                 0087
*/*                                                                  */
*/*      SAVE BASE EXECUTION TIME OF LOWEST PRIORITY USER FOR        */
*/*      CPU UTILIZATION CHECK AT NEXT AP1 ENTRY                     */
*/*                                                                  */
*                                                                  0088
*   CCVEJST=CVTASCBL                /* SAVE ELAPSED TIME OF LOWEST   */
*       ->CPASCBET;                 /* PRIORITY USER                 */
         L     @07,CVTPTR                                          0088
         L     @07,CVTASCBL(,@07)                                  0088
         MVC   CCVEJST(4,RMCTPTR),CPASCBET(@07)                    0088
*/*   ? IRACTLEP ENN(AP1)                                            */
*                                                                  0089
*   GEN CODE EXIT NOSEQFLOW;                                       0089
*                                  /*
         LM    @00,@14,000+000(@13)    RELOAD INVOKING RTNE REGS
         BR    RTNREG                  RETURN TO INVOKER
*                                                                  0090
*/********************************************************************/
*/*                                                                  */
*/* ENTRY POINT NAME = IRARMEQ1                                      */
*/*                                                                  */
*/* DESCRIPTIVE NAME = ENQHOLD MONITORING                            */
*/*                                                                  */
*/* FUNCTION = STOP GIVING EXTRA CPU SERVICE TO USERS WITH ENQHOLD   */
*/*            SYSEVENTS OUTSTANDING WHICH HAVE ALREADY RECEIVED     */
*/*            THEIR GUARANTEED SPURT OF CPU SERVICE                 */
*/*                                                                  */
*/* CALLER = IRARMCTL - SRM CONTROL MODULE                           */
*/*            TIME QUEUE PROCESSOR                                  */
*/*                                                                  */
*/* INPUT = R2 = RMCT ADDRESS                                        */
*/*         R3 = RRPA ADDRESS                                        */
*/*                                                                  */
*/* OUTPUT = NONE                                                    */
*/*                                                                  */
*/********************************************************************/
*/*   ? IRACTLEP EPN(EQ1)                                            */
*                                                                  0090
*   DCL                                                            0090
*     IRARMEQ1 ENTRY INT;                                          0090
*   GEN CODE REFS(RRPAEPA) DEFS(IRARMEQ1) NOEXIT SEQFLOW;          0091
*                                                                  0091
*                                  /*
         ENTRY IRARMEQ1
IRARMEQ1 DS    0H
         STM   @00,@14,000+000(@13)    SAVE INVOKING RTNE REGS
         ST    @01,RRPAEPA(,RRPAPTR)   INDICATE NEW CURRENT RMEP
         LA    @12,IRARMEQ1-@PSTART    DISPLACEMENT TO MODULE BASE
         LCR   @12,@12                 NEGATIVE FOR SUBTRACT
         ALR   @12,@15                 SETUP MODULE ADDRESSABILITY
*/*                                                                  */
*/*      STOP GIVING EXTRA CPU SERVICE TO USERS WITH ENQHOLD         */
*/*      SYSEVENTS OUTSTANDING WHICH HAVE ALREADY RECEIVED THEIR     */
*/*      GUARANTEED SPURT OF CPU SERVICE                             */
*/*                                                                  */
*                                                                  0092
*   IF CCVENQCT^=I0 THEN            /* IF THERE ARE USERS MARKED     */
         LH    @07,CCVENQCT(,RMCTPTR)                              0092
         LTR   @07,@07                                             0092
         BZ    @RF00092                                            0092
*     DO;                           /* NON-SWAPPABLE FOR ENQ REASONS,*/
*       OUCBPTR=RMCTINQE;           /* SEARCH OUCB IN QUEUE          */
         L     OUCBPTR,RMCTINQE(,RMCTPTR)                          0094
*       OUCBPTR=OUCBFWD;            /* POINT TO FIRST USER           */
         L     OUCBPTR,OUCBFWD(,OUCBPTR)                           0095
*       DO WHILE OUCBNAME='OUCB';   /* LOOK AT EACH USER             */
         B     @DE00096                                            0096
@DL00096 DS    0H                                                  0097
*         IF OUCBENQ='1'B           /* IGNORE USER IF NOT ENQUEUED,  */
*             &OUCBOUT='0'B         /* OR IF OUXB IS NOT AVAILABLE   */
*             &OUCBGOB='0'B         /*                               */
*             &OUCBGOO='0'B         /*                               */
*             &OUCBGOI='0'B THEN    /*                               */
         TM    OUCBENQ(OUCBPTR),B'00000010'                        0097
         BNO   @RF00097                                            0097
         TM    OUCBOUT(OUCBPTR),B'11100100'                        0097
         BNZ   @RF00097                                            0097
*           DO;                     /*                               */
*             ASCBPTR=OUCBASCB;     /* SET UP ADDRESSING TO ASCB     */
         L     ASCBPTR,OUCBASCB(,OUCBPTR)                          0099
*             OUXBPTR=ASCBOUXB;     /* SET UP ADDRESSING TO OUXB     */
         L     OUXBPTR,ASCBOUXB(,ASCBPTR)                          0100
*             RESPECIFY                                            0101
*              (ENQJST1,                                           0101
*               ENQJST2) RESTRICTED;                               0101
*             IF OUCBNQF='1'B THEN  /* IF BASE ENQ TIME IS NOT VALID,*/
         TM    OUCBNQF(OUCBPTR),B'00001000'                        0102
         BNO   @RF00102                                            0102
*               DO;                 /* GET BASE ENQ TIME FROM CP     */
*                 GENERATE CODE REFS(OUXBCPS);                     0104
         LM    ENQJST1,ENQJST2,OUXBCPS(OUXBPTR)
         SRDL  ENQJST1,S22
*                 OUXBNQT=ENQJST2;  /* SERVICE BASE AT LAST SWAP IN  */
         ST    ENQJST2,OUXBNQT(,OUXBPTR)                           0105
*                 OUCBNQF='0'B;     /* MARK ENQ BASE TIME VALID      */
         NI    OUCBNQF(OUCBPTR),B'11110111'                        0106
*               END;                /* GET CURRENT USER EXECUTION  0107
*                                      TIME                          */
*             GENERATE CODE REFS(ASCBEJST);                        0108
@RF00102 DS    0H                                                  0108
         LM    ENQJST1,ENQJST2,ASCBEJST(ASCBPTR)
         SRDL  ENQJST1,S22
*             IF(ENQJST2-OUXBNQT)   /* IF USER CPU SERVICE SINCE ENQH*/
*                 >RMPTERV THEN     /* EVENT GREATER THAN THRESHOLD  */
         LR    @07,ENQJST2                                         0109
         SL    @07,OUXBNQT(,OUXBPTR)                               0109
         C     @07,RMPTERV(,RMCTPTR)                               0109
         BNH   @RF00109                                            0109
*               DO;                 /*                               */
*                 OUCBENQ='0'B;     /* MARK USER SWAPPABLE AGAIN     */
         NI    OUCBENQ(OUCBPTR),B'11111101'                        0111
*                 CCVENQCT=         /* REMOVE USER FROM GROUP OF ENQ */
*                     CCVENQCT-I1;  /* NON-SWAPPABLE USERS NOTIFY  0112
*                                      ANALYSIS OF USERS STATUS    0112
*                                      CHANGE                        */
*                                                                  0112
         LH    @07,CCVENQCT(,RMCTPTR)                              0112
         BCTR  @07,0                                               0112
         STH   @07,CCVENQCT(,RMCTPTR)                              0112
*                 /***************************************************/
*                 /*                                                 */
*                 /* ? IRACTLCL EPN(WM3)                             */
*                 /*                                                 */
*                 /***************************************************/
*                                                                  0113
*                 CALL EPSTWM3->IRARMRTN;/* INVOKE WM3 ACTION        */
         L     @15,EPSTWM3(,RMCTPTR)                               0113
         BALR  @14,@15                                             0113
*               END;                                               0114
*             RESPECIFY                                            0115
*              (ENQJST1,                                           0115
*               ENQJST2) UNRESTRICTED;                             0115
@RF00109 DS    0H                                                  0116
*           END;                                                   0116
*         OUCBPTR=OUCBFWD;          /* POINT TO NEXT USER            */
@RF00097 L     OUCBPTR,OUCBFWD(,OUCBPTR)                           0117
*       END;                                                       0118
@DE00096 CLC   OUCBNAME(4,OUCBPTR),@CC02226                        0118
         BE    @DL00096                                            0118
*     END;                                                         0119
*                                                                  0119
*/*   ? IRACTLEP ENN(EQ1)                                            */
*                                                                  0120
*   GEN CODE EXIT NOSEQFLOW;                                       0120
@RF00092 DS    0H                                                  0120
*                                  /*
         LM    @00,@14,000+000(@13)    RELOAD INVOKING RTNE REGS
         BR    RTNREG                  RETURN TO INVOKER
*                                                                  0121
*/********************************************************************/
*/*                                                                  */
*/* ENTRY POINT NAME = IRARMCL0                                      */
*/*                                                                  */
*/* DESCRIPTIVE NAME = CPU LOAD BALANCING SYSTEM PROFILE ADJUSTMENT  */
*/*                                                                  */
*/* FUNCTION = COMPUTE USER CPU USAGE PROFILE AT QSCECMP SYSEVENT.   */
*/*                                                                  */
*/* CALLER = IRARMEVT - SRM SYSEVENT MODULE                          */
*/*            QSCECMP SYSEVENT                                      */
*/*                                                                  */
*/* INPUT = R2 = RMCT ADDRESS                                        */
*/*         R3 = RRPA ADDRESS                                        */
*/*         R4 = OUCB ADDRESS                                        */
*/*         R5 = ASCB ADDRESS                                        */
*/*                                                                  */
*/* OUTPUT = NONE                                                    */
*/*                                                                  */
*/********************************************************************/
*/*   ? IRACTLEP EPN(CL0)                                            */
*                                                                  0121
*   DCL                                                            0121
*     IRARMCL0 ENTRY INT;                                          0121
*   GEN CODE DEFS(IRARMCL0) NOEXIT SEQFLOW;                        0122
*                                  /*
         ENTRY IRARMCL0
IRARMCL0 DS    0H
         STM   @00,@14,128+000(@13)    SAVE INVOKING RTNE REGS
         LA    @12,IRARMCL0-@PSTART    DISPLACEMENT TO MODULE BASE
         LCR   @12,@12                 NEGATIVE FOR SUBTRACT
         ALR   @12,@15                 SETUP MODULE ADDRESSABILITY
*   CALL NEWDP;                     /* MEAN TIME TO WAIT AS COMPUTED
*                                      FOR APG IS USED AS THE CPU  0123
*                                      LOAD BALANCING USER CPU     0123
*                                      PROFILE                       */
         BAL   @14,NEWDP                                           0123
*/*   ? IRACTLEP ENN(CL0)                                            */
*                                                                  0124
*   GEN CODE EXIT NOSEQFLOW;                                       0124
*                                  /*
         LM    @00,@14,128+000(@13)    RELOAD INVOKING RTNE REGS
         BR    RTNREG                  RETURN TO INVOKER
*                                                                  0125
*/********************************************************************/
*/*                                                                  */
*/* ENTRY POINT NAME = IRARMCL1                                      */
*/*                                                                  */
*/* DESCRIPTIVE NAME = CPU UTILIZATION MONITORING                    */
*/*                                                                  */
*/* FUNCTION = COMPUTE CPU UTILIZATION VARIABLES FOR CPU LOAD        */
*/*            BALANCING AND RESOURCE MANAGEMENT ALGORITHMS. @Z40BPRH*/
*/*                                                                  */
*/* CALLER = IRARMCTL - SRM CONTROL MODULE                           */
*/*            TIME QUEUE PROCESSOR                                  */
*/*                                                                  */
*/* INPUT = R2 = RMCT ADDRESS                                        */
*/*         R3 = RRPA ADDRESS                                        */
*/*                                                                  */
*/* OUTPUT = NONE                                                    */
*/*                                                                  */
*/********************************************************************/
*/*   ? IRACTLEP EPN(CL1)                                            */
*                                                                  0125
*   DCL                                                            0125
*     IRARMCL1 ENTRY INT;                                          0125
*   GEN CODE REFS(RRPAEPA) DEFS(IRARMCL1) NOEXIT SEQFLOW;          0126
*                                                                  0126
*                                  /*
         ENTRY IRARMCL1
IRARMCL1 DS    0H
         STM   @00,@14,000+000(@13)    SAVE INVOKING RTNE REGS
         ST    @01,RRPAEPA(,RRPAPTR)   INDICATE NEW CURRENT RMEP
         LA    @12,IRARMCL1-@PSTART    DISPLACEMENT TO MODULE BASE
         LCR   @12,@12                 NEGATIVE FOR SUBTRACT
         ALR   @12,@15                 SETUP MODULE ADDRESSABILITY
*/*                                                                  */
*/*      COMPUTE RECENT SYSTEM WAIT PERCENTAGE                       */
*/*                                                                  */
*                                                                  0127
*   CALL CPUWAIT;                   /* GET TOTAL CPU WAIT          0127
*                                      ACCUMULATION                  */
         BAL   @14,CPUWAIT                                         0127
*/*                                                                  */
*/*      COMPUTE SYSTEM WAIT FACTOR FOR CPU LOAD BALANCING           */
*/*      RECOMMENDATION VALUE COMPUTATION                            */
*/*                                                                  */
*                                                                  0128
*   CALL CPLRVSWF;                                                 0128
*                                                                  0128
         BAL   @14,CPLRVSWF                                        0128
*/*                                                                  */
*/*      COMPUTE LONG RANGE SYSTEM CPU WAIT PERCENTAGE               */
*/*                                                                  */
*                                                                  0129
*   CCVLGUTL=                       /* UTILIZATION OVER A LONG       */
*       ((CCVLGUTL                  /* INTERVAL EQUALS RECENT        */
*       *CCCSCFC1)                  /* UTILIZATION FACTORED INTO A   */
*       +(CPUTL                     /* LONG TERM AVERAGE             */
*       *I256))                     /*                               */
*       /CCCSCFC2;                  /*                               */
         LH    @07,CCVLGUTL(,RMCTPTR)                              0129
         MH    @07,CCCSCFC1(,RMCTPTR)                              0129
         LH    @15,CPUTL                                           0129
         LR    @14,@15                                             0129
         SLA   @14,8                                               0129
         ALR   @07,@14                                             0129
         LR    @00,@07                                             0129
         SRDA  @00,32                                              0129
         LH    @07,CCCSCFC2(,RMCTPTR)                              0129
         DR    @00,@07                                             0129
         STH   @01,CCVLGUTL(,RMCTPTR)                              0129
*/*                                                                  */
*/*      IF CPU IS HEAVILY UTILIZED, RECOMMEND THAT HEAVY    @Z40BPRH*/
*/*      CPU USERS BE SWAPPED OUT.                           @Z40BPRH*/
*/*                                                                  */
*                                                                  0130
*   IF CPUTL>CCCUTHIT THEN          /* IF CPU IS OVERUTILIZED, SEARCH*/
         CH    @15,CCCUTHIT(,RMCTPTR)                              0130
         BNH   @RF00130                                            0130
*     DO;                           /* IN QUEUE FOR HEAVY CPU        */
*       OUCBPTR=RMCTINQE;           /* USERS TO SWAP OUT             */
         L     OUCBPTR,RMCTINQE(,RMCTPTR)                          0132
*       OUCBPTR=OUCBFWD;            /*                               */
         L     OUCBPTR,OUCBFWD(,OUCBPTR)                           0133
*       CCTCPUOT='1'B;              /* INDICATE CPU OUT OF BALANCE 0134
*                                                            @Z40BPRH*/
         OI    CCTCPUOT(RMCTPTR),B'01000000'                       0134
*     END;                          /*                               */
*   ELSE                            /* IF CPU IS UNDERUTILIZED,      */
*     IF CPUTL<CCCUTLOT THEN        /* CPU UNDER UTILIZED    @Z40BPRH*/
         B     @RC00130                                            0136
@RF00130 LH    @07,CPUTL                                           0136
         CH    @07,CCCUTLOT(,RMCTPTR)                              0136
         BNL   @RF00136                                            0136
*       DO;                         /*                               */
*         OUCBPTR=I0;               /* DO NOT SEARCH OUT QUEUE     0138
*                                                            @Z40BPRH*/
         SLR   OUCBPTR,OUCBPTR                                     0138
*         CCTCPUOT='1'B;            /* INDICATE CPU OUT OF BALANCE 0139
*                                                            @Z40BPRH*/
         OI    CCTCPUOT(RMCTPTR),B'01000000'                       0139
*       END;                        /*                               */
*     ELSE                          /*                               */
*       DO;                                                        0141
         B     @RC00136                                            0141
@RF00136 DS    0H                                                  0142
*         CCTCPUOT='0'B;            /* INDICATE CPU NOT OUT OF     0142
*                                      BALLANCE              @Z40BPRH*/
         NI    CCTCPUOT(RMCTPTR),B'10111111'                       0142
*         OUCBPTR=I0;               /* INDICATE NO CPU IMBALANCE     */
         SLR   OUCBPTR,OUCBPTR                                     0143
*       END;                                                       0144
*                                                                  0144
*/*                                                                  */
*/*      SEARCH OUCB QUEUE FOR USERS TO RECOMMEND                    */
*/*                                                                  */
*                                                                  0145
*   IF OUCBPTR^=I0 THEN             /* IF CPU IS OUT OF BALANCE,     */
@RC00136 DS    0H                                                  0145
@RC00130 LTR   OUCBPTR,OUCBPTR                                     0145
         BZ    @RF00145                                            0145
*     DO;                           /* LOOK FOR USERS TO RECOMMEND   */
*       DO WHILE OUCBNAME='OUCB';   /* LOOK AT EACH ELIGIBLE USER ON
*                                      QUEUE                 @Z40BPRH*/
         B     @DE00147                                            0147
@DL00147 DS    0H                                                  0148
*         IF OUCBGOO='0'B           /* IGNORE USERS WHICH ARE        */
*             &OUCBGOI='0'B         /* BEING SWAPPED,                */
*             &OUCBGOB='0'B         /*                               */
*             &OUCBNSW='0'B         /* NON-SWAPPABLE,                */
*             &OUCBPVL='0'B         /* PRIVILIGED,                   */
*             &OUCBENQ='0'B         /* HOLD ENQ RESOURCES,           */
*             &OUCBBIB='0'B         /* BRING IN MEMORY       @Z40BPRH*/
*             &OUCBRMA='1'B         /* OR HAVE RTB OF 0              */
*           THEN                    /*                               */
         TM    OUCBGOO(OUCBPTR),B'11100000'                        0148
         BNZ   @RF00148                                            0148
         TM    OUCBNSW(OUCBPTR),B'10100110'                        0148
         BNZ   @RF00148                                            0148
         TM    OUCBRMA(OUCBPTR),B'00100000'                        0148
         BNO   @RF00148                                            0148
*           DO;                                                    0149
*                                                                  0149
*/*                                                                  */
*/*      COMPUTE NEW USER CPU USAGE PROFILE FOR HEAVY CPU            */
*/*      USERS IN MAIN STORAGE                                       */
*/*                                                                  */
*                                                                  0150
*             ASCBPTR=OUCBASCB;     /* SET UP ADDRESSING TO ASCB     */
         L     ASCBPTR,OUCBASCB(,OUCBPTR)                          0150
*             OUXBPTR=ASCBOUXB;     /* AND OUXB                      */
         L     OUXBPTR,ASCBOUXB(,ASCBPTR)                          0151
*             CALL NEWDP;           /* AND COMPUTE NEW CPU USAGE     */
         BAL   @14,NEWDP                                           0152
*           END;                    /* PROFILE                       */
*         OUCBPTR=OUCBFWD;          /* POINT TO NEXT OUCB    @Z40BPRH*/
@RF00148 L     OUCBPTR,OUCBFWD(,OUCBPTR)                           0154
*       END;                                                       0155
@DE00147 CLC   OUCBNAME(4,OUCBPTR),@CC02226                        0155
         BE    @DL00147                                            0155
*     END;                                                         0156
*                                                                  0156
*/*   ? IRACTLEP ENN(CL1)                                            */
*                                                                  0157
*   GEN CODE EXIT NOSEQFLOW;                                       0157
@RF00145 DS    0H                                                  0157
*                                  /*
         LM    @00,@14,000+000(@13)    RELOAD INVOKING RTNE REGS
         BR    RTNREG                  RETURN TO INVOKER
*                                                                  0158
*/********************************************************************/
*/*                                                                  */
*/* ENTRY POINT NAME = IRARMCL3                                      */
*/*                                                                  */
*/* DESCRIPTIVE NAME = CPU LOAD BALANCING USER EVALUATION            */
*/*                                                                  */
*/* FUNCTION = PRODUCE A NUMERICAL RECOMMENDATION VALUE REFLECTING   */
*/*            THE DESIREABILITY OF SWAPPING THIS USER BASED ON THE  */
*/*            USERS EFFECT ON SYSTEM CPU UTILIZATION                */
*/*                                                                  */
*/* CALLER = IRARMCTL - SRM CONTROL MODULE                           */
*/*            PARTIAL ANALYSIS PROCESSOR                            */
*/*                                                                  */
*/* INPUT = R2 = RMCT ADDRESS                                        */
*/*         R3 = RRPA ADDRESS                                        */
*/*         R4 = OUCB ADDRESS                                        */
*/*         R5 = ASCB ADDRESS                                        */
*/*                                                                  */
*/* OUTPUT = OUCBCRV = RECOMMENDATION VALUE REFLECTING       @Z40BPRH*/
*/*              DESIREABILITY OF SWAPPING A SPECIFIC        @Z40BPRH*/
*/*              USER                                        @Z40BPRH*/
*/*                                                                  */
*/********************************************************************/
*/*   ? IRACTLEP EPN(CL3)                                            */
*                                                                  0158
*   DCL                                                            0158
*     IRARMCL3 ENTRY INT;                                          0158
*   GEN CODE DEFS(IRARMCL3) NOEXIT SEQFLOW;                        0159
*                                  /*
         ENTRY IRARMCL3
IRARMCL3 DS    0H
         STM   @00,@14,128+000(@13)    SAVE INVOKING RTNE REGS
         LA    @12,IRARMCL3-@PSTART    DISPLACEMENT TO MODULE BASE
         LCR   @12,@12                 NEGATIVE FOR SUBTRACT
         ALR   @12,@15                 SETUP MODULE ADDRESSABILITY
*   ASCBPTR=OUCBASCB;               /* SET UP ADDRESSING TO ASCB     */
         L     ASCBPTR,OUCBASCB(,OUCBPTR)                          0160
*   IF OUCBCPL='1'B THEN            /* IF USER IS A SIGNIFICANT      */
         TM    OUCBCPL(OUCBPTR),B'00010000'                        0161
         BNO   @RF00161                                            0161
*     IF CCVRVSWF<I0 THEN           /* CPU USER, BASE RECOMMENDATION */
         L     @07,CCVRVSWF(,RMCTPTR)                              0162
         LTR   @07,@07                                             0162
         BNM   @RF00162                                            0162
*       CPRV=MIN(CCVRVSWF,OUCBCRV); /* ON HOW OUT OF BALANCE THE CPU
*                                      IS                    @Z40BPRH*/
         L     @15,CCVRVSWF(,RMCTPTR)                              0163
         LH    CPRV,OUCBCRV(,OUCBPTR)                              0163
         CR    @15,CPRV                                            0163
         BNH   *+6
         LR    @15,CPRV                                            0163
         LR    CPRV,@15                                            0163
*     ELSE                          /* OR IF CPU UTILIZATION         */
*       IF CCVRVSWF>I0 THEN         /* HAS IMPROVED, ON HOW OUT OF   */
         B     @RC00162                                            0164
@RF00162 L     @07,CCVRVSWF(,RMCTPTR)                              0164
         LTR   @07,@07                                             0164
         BNP   @RF00164                                            0164
*         CPRV=MAX(CCVRVSWF,OUCBCRV);/* BALANCE CPU WAS AT TIME OF 0165
*                                      LAST RECOMMENDATION   @Z40BPRH*/
         L     @15,CCVRVSWF(,RMCTPTR)                              0165
         LH    CPRV,OUCBCRV(,OUCBPTR)                              0165
         CR    @15,CPRV                                            0165
         BNL   *+6
         LR    @15,CPRV                                            0165
         LR    CPRV,@15                                            0165
*       ELSE                        /*                               */
*         CPRV=OUCBCRV;             /*                       @Z40BPRH*/
         B     @RC00164                                            0166
@RF00164 LH    CPRV,OUCBCRV(,OUCBPTR)                              0166
*   ELSE                            /* IF USER IS NOT SIGNIFICANT    */
*     CPRV=I0;                      /* RECOMMENDATION IS ZERO        */
         B     @RC00161                                            0167
@RF00161 SLR   CPRV,CPRV                                           0167
*   IF CPRV>CCCMAXRV THEN           /* INSURE THAT THE RECOMMENDATION*/
@RC00161 LH    @15,CCCMAXRV(,RMCTPTR)                              0168
         CR    CPRV,@15                                            0168
         BNH   @RF00168                                            0168
*     CPRV=CCCMAXRV;                /* DOES NOT EXCEED MAXIMUM       */
         LR    CPRV,@15                                            0169
*   ELSE                            /*                               */
*     IF CPRV<CCCMINRV THEN         /* OR MINIMUM RECOMMENDATION     */
         B     @RC00168                                            0170
@RF00168 LH    @15,CCCMINRV(,RMCTPTR)                              0170
         CR    CPRV,@15                                            0170
         BNL   @RF00170                                            0170
*       CPRV=CCCMINRV;              /* VALUES                        */
         LR    CPRV,@15                                            0171
*   OUCBTCP=RRPATOD;                /* SAVE TIME RECOMMENDATION MADE
*                                                            @Z40BPRH*/
@RF00170 DS    0H                                                  0172
@RC00168 L     @15,RRPATOD(,RRPAPTR)                               0172
         ST    @15,OUCBTCP(,OUCBPTR)                               0172
*   OUCBCRV=CPRV;                   /* SAVE CURRENT RECOMMENDATION 0173
*                                                            @Z40BPRH*/
         STH   CPRV,OUCBCRV(,OUCBPTR)                              0173
*/*   ? IRACTLEP ENN(CL3)                                            */
*                                                                  0174
*   GEN CODE EXIT NOSEQFLOW;                                       0174
*                                  /*
         LM    @00,@14,128+000(@13)    RELOAD INVOKING RTNE REGS
         BR    RTNREG                  RETURN TO INVOKER
*                                                                  0175
*/********************************************************************/
*/*                                                                  */
*/*      CHAP - IRARMCPM INTERNAL SUBROUTINE                         */
*/*                                                                  */
*/*        FUNCTIONS -                                               */
*/*          1) SEARCH QUEUE FOR APG USERS WITH CHANGED DISPATCHING  */
*/*             PRIORITIES AND PUT THEM IN ASCBCHAP INTERFACE LIST   */
*/*          2) WHEN LIST IS FULL, CALL ASCBCHAP                     */
*/*                                                                  */
*/*        INPUTS -                                                  */
*/*                                                                  */
*/*          1) REG1 = ASCBCHAP LIST POINTER                         */
*/*          2) REG4 = ADDRESS OF OUCB QUEUE HEADER                  */
*/*                                                                  */
*/********************************************************************/
*                                                                  0175
*CHAP:                                                             0175
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0175
@EL00001 DS    0H                                                  0175
@EF00001 DS    0H                                                  0175
@ER00001 BR    @14                                                 0175
CHAP     DS    0H                                                  0176
*   RESPECIFY                                                      0176
*     RTNREG RESTRICTED;            /* RESTRICT RETURN REGISTER      */
*   RESPECIFY                                                      0177
*     RCHAPPTR RESTRICTED;                                         0177
*   OUCBPTR=OUCBFWD;                /* POINT TO FIRST USER ON QUEUE  */
         L     OUCBPTR,OUCBFWD(,OUCBPTR)                           0178
*   DO WHILE OUCBNAME='OUCB';       /* LOOK AT EACH OUCB ON QUEUE    */
         B     @DE00179                                            0179
@DL00179 DS    0H                                                  0180
*     IF OUCBAPG='1'B               /* IGNORE USERS NOT IN   @YM05632*/
*         &OUCBOUT='0'B             /* APG OR ON THE WAY OUT @YM05632*/
*         &OUCBGOO='0'B THEN        /*                       @YM05632*/
         TM    OUCBAPG(OUCBPTR),B'01000000'                        0180
         BNO   @RF00180                                            0180
         TM    OUCBOUT(OUCBPTR),B'10000100'                        0180
         BNZ   @RF00180                                            0180
*       DO;                         /*                               */
*         APUSRCT=APUSRCT+I1;       /* KEEP TRACK OF NO OF APG USERS */
         LA    @15,1                                               0182
         ALR   APUSRCT,@15                                         0182
*         ASCBPTR=OUCBASCB;         /* SET UP ADDRESSING TO ASCB     */
         L     ASCBPTR,OUCBASCB(,OUCBPTR)                          0183
*         IF OUCBNDP^=ASCBDP×       /* IF USER DISPATCHING PRIORITY
*                                      HAS CHANGED,                  */
*             (ROTACT>I1&OUCBPTR=ROTAOUCB)/* OR MORE THAN 1 USER   0184
*                                                            @Z40BPEB
*                                      IN ROTATE &THIS IS THE      0184
*                                                            @Z40BPEB
*                                      PICKED ONE TO CHAP    @Z40BPEB*/
*           THEN                                                   0184
         CLC   OUCBNDP(1,OUCBPTR),ASCBDP(ASCBPTR)                  0184
         BNE   @RT00184                                            0184
         CH    @15,ROTACT                                          0184
         BNL   @RF00184                                            0184
         C     OUCBPTR,ROTAOUCB                                    0184
         BNE   @RF00184                                            0184
@RT00184 DS    0H                                                  0185
*           DO;                                                    0185
*                                                                  0185
*/*                                                                  */
*/*      ADD USER TO CHAP LIST                                       */
*/*                                                                  */
*                                                                  0186
*             RCHAPFLG=I0;          /* CLEAR PREVIOUS CHAP FLAGS     */
         L     @15,APX                                             0186
         MVI   RCHAPFLG(@15),X'00'                                 0186
*             RCHAPDP=OUCBNDP;      /* GET NEW DISPATCHING PRIORITY  */
         SLR   @11,@11                                             0187
         IC    @11,OUCBNDP(,OUCBPTR)                               0187
         STH   @11,RCHAPDP(,@15)                                   0187
*             RCHAPUSR=ASCBPTR;     /* POINT TO ASCB                 */
         ST    ASCBPTR,RCHAPUSR(,@15)                              0188
*             APCHAPCT=APCHAPCT+I1; /* INCREMENT CHAP COUNT          */
         AL    APCHAPCT,@CF00090                                   0189
*/*                                                                  */
*/*      IF LIST IS FULL, CALL ASCBCHAP                              */
*/*                                                                  */
*                                                                  0190
*             IF APX=RCHAPFUL THEN  /* IF LIST IS FULL,              */
         C     @15,RCHAPFUL                                        0190
         BNE   @RF00190                                            0190
*               DO;                                                0191
*                 RCHAPEND='1'B;    /* INDICATE LAST ENTRY           */
         OI    RCHAPEND(@15),B'10000000'                           0192
*                 RCHAPPTR=         /* REG1 POINTS TO INTERFACE LIST */
*                     ADDR(RCHAPLST);                              0193
         LA    RCHAPPTR,RCHAPLST                                   0193
*                 APX=RTNREG;       /* SAVE RETURN POINTER INVOKE  0194
*                                      ASCBCHAP                      */
*                                                                  0194
         ST    RTNREG,APX                                          0194
*                 /***************************************************/
*                 /*                                                 */
*                 /* ? IRACTLCL EPN(I02)                             */
*                 /*                                                 */
*                 /***************************************************/
*                                                                  0195
*                 CALL RMSBI02->IRARMRTN;/* INVOKE I02 SUBRTN        */
         L     @15,RMSBI02(,RMCTPTR)                               0195
         BALR  @14,@15                                             0195
*                 RTNREG=APX;       /* RESTORE RETURN REGISTER       */
         L     RTNREG,APX                                          0196
*                 APX=RCHAPPTR;     /* RESET ENTRY PTR TO BEGINNING  */
         ST    RCHAPPTR,APX                                        0197
*               END;                                               0198
*             ELSE                  /* OTHERWISE,                    */
*               APX=APX             /* POINT TO NEXT ENTRY           */
*                   +RCHAPLEN;                                     0199
         B     @RC00190                                            0199
@RF00190 LH    @15,RCHAPLEN                                        0199
         AL    @15,APX                                             0199
         ST    @15,APX                                             0199
*           END;                                                   0200
@RC00190 DS    0H                                                  0201
*       END;                                                       0201
@RF00184 DS    0H                                                  0202
*     OUCBPTR=OUCBFWD;              /* POINT TO NEXT USER            */
@RF00180 L     OUCBPTR,OUCBFWD(,OUCBPTR)                           0202
*   END;                                                           0203
@DE00179 CLC   OUCBNAME(4,OUCBPTR),@CC02226                        0203
         BE    @DL00179                                            0203
*   RESPECIFY                                                      0204
*     RCHAPPTR UNRESTRICTED;                                       0204
*   RESPECIFY                                                      0205
*     RTNREG UNRESTRICTED;                                         0205
*   END CHAP;                                                      0206
@EL00002 DS    0H                                                  0206
@EF00002 DS    0H                                                  0206
@ER00002 BR    @14                                                 0206
*                                                                  0207
*/********************************************************************/
*/*                                                                  */
*/*      CPLRVSWF - IRARMCPM INTERNAL SUBROUTINE                     */
*/*                                                                  */
*/*      FUNCTION                                                    */
*/*        1) COMPUTE SYSTEM WAIT FACTOR FOR CPU LOAD BALANCING      */
*/*           RECOMMENDATION VALUE COMPUTATION                       */
*/*                                                                  */
*/*      INPUT -                                                     */
*/*        1) CPUTL - RECENT CPU UTILIZATION                         */
*/*        2) CCCUTLOT,CCCUTHIT - CPU UTILIZATION THRESHOLDS         */
*/*                                                                  */
*/*      OUTPUT -                                                    */
*/*        1) CCVRVSWF - CPL RECOMMENDATION VALUE COMPUTATION        */
*/*           SYSTEM WAIT FACTOR                                     */
*/*                                                                  */
*/********************************************************************/
*                                                                  0207
*CPLRVSWF:                                                         0207
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0207
CPLRVSWF DS    0H                                                  0208
*   RESPECIFY                                                      0208
*     RTNREG RESTRICTED;            /* RESTRICT RETURN REGISTER      */
*   IF CPUTL<CCCUTLOT THEN          /* IF CPU UTILIZATION IS LOW     */
         LH    @15,CCCUTLOT(,RMCTPTR)                              0209
         CH    @15,CPUTL                                           0209
         BNH   @RF00209                                            0209
*     DO;                           /*                               */
*       CCVIMBBT=RMCTTOD;           /* REMEMBER TIME OF IMBALANCE    */
         L     @09,RMCTTOD(,RMCTPTR)                               0211
         ST    @09,CCVIMBBT(,RMCTPTR)                              0211
*       CPSWF=CCCUTLOT;             /* SAVE LOW THRESHOLD            */
         LR    CPSWF,@15                                           0212
*       CPSCF=CCCLOSCF;             /* USE LOW THRESHOLD SCALING     */
         LH    CPSCF,CCCLOSCF(,RMCTPTR)                            0213
*     END;                          /* FACTOR                        */
*   ELSE                            /*                               */
*     IF CPUTL>CCCUTHIT THEN        /* IF UTILIZATION IS HIGH        */
         B     @RC00209                                            0215
@RF00209 LH    @15,CCCUTHIT(,RMCTPTR)                              0215
         CH    @15,CPUTL                                           0215
         BNL   @RF00215                                            0215
*       DO;                         /*                               */
*         CCVIMBBT=RMCTTOD;         /* REMEMBER TIME OF IMBALANCE    */
         L     @09,RMCTTOD(,RMCTPTR)                               0217
         ST    @09,CCVIMBBT(,RMCTPTR)                              0217
*         CPSWF=CCCUTHIT;           /* SAVE HIGH THRESHOLD           */
         LR    CPSWF,@15                                           0218
*         CPSCF=CCCHISCF;           /* USE HIGH THRESHOLD SCALING    */
         LH    CPSCF,CCCHISCF(,RMCTPTR)                            0219
*       END;                        /* FACTOR                        */
*     ELSE                          /* ELSE                          */
*       DO;                                                        0221
         B     @RC00215                                            0221
@RF00215 DS    0H                                                  0222
*         CPSWF=CPUTL;              /* SAVE CPU UTILIZATION          */
         LH    CPSWF,CPUTL                                         0222
*         CPSCF=I0;                 /* SET SCALING FACTOR TO ZERO  0223
*                                                            @Z40BPRH*/
         SLR   CPSCF,CPSCF                                         0223
*       END;                                                       0224
*   CPSWF=CPSWF-CPUTL;              /* SYSTEM WAIT FACTOR EQUALS   0225
*                                      DIFFERENCE BETWEEN THRESHOLD  */
@RC00215 DS    0H                                                  0225
@RC00209 SH    CPSWF,CPUTL                                         0225
*   CCVRVSWF=ABS(CPSWF)             /* AND UTILIZATION SQUARED       */
*       *CPSWF                      /* TIMES SCALING FACTOR          */
*       *CPSCF                      /* WITH SIGN OF THE DIFFERENCE   */
*       /CCCSCFAC;                  /* DIVIDED BY SCALING FACTOR     */
         LPR   @01,CPSWF                                           0226
         MR    @00,CPSWF                                           0226
         MR    @00,CPSCF                                           0226
         LR    @10,@01                                             0226
         SRDA  @10,32                                              0226
         LH    @15,CCCSCFAC(,RMCTPTR)                              0226
         DR    @10,@15                                             0226
         ST    @11,CCVRVSWF(,RMCTPTR)                              0226
*   RESPECIFY                                                      0227
*     RTNREG UNRESTRICTED;                                         0227
*   END CPLRVSWF;                                                  0228
@EL00003 DS    0H                                                  0228
@EF00003 DS    0H                                                  0228
@ER00003 BR    @14                                                 0228
*                                                                  0229
*/********************************************************************/
*/*                                                                  */
*/*      CPUWAIT - IRARMCPM INTERNAL SUBROUTINE                      */
*/*                                                                  */
*/*        FUNCTION -                                                */
*/*          1) COMPUTE ACCUMULATED SYSTEM WAIT TIME TOTAL FOR       */
*/*               ALL CPUS                                           */
*/*          2) COMPUTE RECENT CPU UTILIZATION                       */
*/*                                                                  */
*/*        OUTPUT -                                                  */
*/*          1) CPWTIM = ACCUMULATED SYSTEM WAIT TOTAL               */
*/*          2) CPUTL - RECENT CPU UTILIZATION                       */
*/*                                                                  */
*/********************************************************************/
*                                                                  0229
*CPUWAIT:                                                          0229
*   PROC;                                                          0229
*                                                                  0229
CPUWAIT  STM   @14,@12,@SA00004                                    0229
*/*                                                                  */
*/*      COMPUTE ACCUMULATED SYSTEM WAIT TIME TOTAL FOR ALL CPUS     */
*/*                                                                  */
*                                                                  0230
*   CPUCT=I0;                       /* ZERO CPU LOOKED AT COUNT      */
         SLR   CPUCT,CPUCT                                         0230
*   CPWTIM=I0;                      /* ZERO WAIT TIME ACCUMULATOR    */
         SLR   CPWTIM,CPWTIM                                       0231
*   CPBX='8000'X;                   /* INITIALIZE CPU BIT INDEX      */
         MVC   CPBX(2),@CB02251                                    0232
*   DO CPX=I1 TO I16 BY I1          /* LOOK AT EACH POSSIBLE CPU     */
*         WHILE CPUCT<CSDCPUOL;     /* UNTIL ALL ON-LINE CPS ARE   0233
*                                      FOUND                         */
         LA    CPX,1                                               0233
@DL00233 L     @15,CVTPTR                                          0233
         L     @14,CVTCSD(,@15)                                    0233
         CH    CPUCT,CSDCPUOL(,@14)                                0233
         BNL   @DC00233                                            0233
*     IF(CPBX&CSDCPUAL)             /* IF CPU IS ONLINE              */
*         ^='0000'X THEN            /* THEN                          */
         MVC   @TS00001(2),CPBX                                    0234
         NC    @TS00001(2),CSDCPUAL(@14)                           0234
         CLC   @TS00001(2),@CB02252                                0234
         BE    @RF00234                                            0234
*       DO;                         /*                               */
*         RESPECIFY                                                0236
*          (CPWTIMR1,                                              0236
*           CPWTIMR2,                                              0236
*           LCCAPTR) RESTRICTED;                                   0236
*         LCCAPTR=LCCAT00P(CPX);    /* POINT TO LOGICAL CPU        0237
*                                      COMMUNICATIONS AREA           */
         LR    @14,CPX                                             0237
         SLA   @14,2                                               0237
         L     @01,CVTLCCAT(,@15)                                  0237
         AL    @01,@CF02277                                        0237
         L     LCCAPTR,LCCAT00P(@14,@01)                           0237
*         GENERATE CODE REFS(LCCAWTIM);                            0238
         LM    CPWTIMR1,CPWTIMR2,LCCAWTIM(LCCAPTR)
         SRDL  CPWTIMR1,S22
*         CPWTIM=CPWTIM             /* ADD TO WAIT TIME ACCUMULATOR  */
*             +CPWTIMR2;            /*                               */
         ALR   CPWTIM,CPWTIMR2                                     0239
*         CPUCT=CPUCT+I1;           /* REMEMBER NO. OF ONLINE CPUS   */
         AL    CPUCT,@CF00090                                      0240
*         RESPECIFY                                                0241
*          (CPWTIMR1,                                              0241
*           CPWTIMR2,                                              0241
*           LCCAPTR) UNRESTRICTED;                                 0241
*       END;                                                       0242
*     CPBX=CPBX/I2;                 /* CHECK NEXT CPU                */
@RF00234 SLR   @15,@15                                             0243
         ICM   @15,3,CPBX                                          0243
         SRL   @15,1                                               0243
         STCM  @15,3,CPBX                                          0243
*   END;                                                           0244
*                                                                  0244
         AL    CPX,@CF00090                                        0244
         C     CPX,@CF00338                                        0244
         BNH   @DL00233                                            0244
@DC00233 DS    0H                                                  0245
*/*                                                                  */
*/*      COMPUTE RECENT SYSTEM WAIT PERCENTAGE                       */
*/*                                                                  */
*                                                                  0245
*   CPETIM=RMCTTOD                  /* COMPUTE ELAPSED TIME SINCE  0245
*                                      LAST                          */
*       -CCVRBSTD;                  /* CPU WAIT COMPUTATION          */
         L     CPETIM,RMCTTOD(,RMCTPTR)                            0245
         SL    CPETIM,CCVRBSTD(,RMCTPTR)                           0245
*   IF CPETIM^=I0 THEN              /* IF NO TIME HAS PASSED DO NOT  */
         LTR   CPETIM,CPETIM                                       0246
         BZ    @RF00246                                            0246
*     DO;                           /* RECOMPUTE                     */
*       CPUTL=                      /* SYSTEM WAIT PERCENTAGE EQUALS */
*           (CPWTIM                 /* CURRENT ACCUMULATED WAIT TIME */
*           -CCVRBSWT)              /* MINUS BASE WAIT TIME          */
*           *I100                   /* TIMES 100 FOR PERCENTAGE      */
*           /(CPETIM                /* DIVIDED BY ELAPSED TIME TIMES */
*           *CSDCPUOL);             /* NUMBER OF CPUS                */
         LA    @09,100                                             0248
         LR    @01,CPWTIM                                          0248
         SL    @01,CCVRBSWT(,RMCTPTR)                              0248
         MR    @00,@09                                             0248
         L     @15,CVTPTR                                          0248
         L     @15,CVTCSD(,@15)                                    0248
         LR    @14,CPETIM                                          0248
         MH    @14,CSDCPUOL(,@15)                                  0248
         SLR   @00,@00                                             0248
         DR    @00,@14                                             0248
         STH   @01,CPUTL                                           0248
*       CPUTL=I100-CPUTL;           /* UTILIZATION IS 100 LESS WAIT
*                                      PERCENTAGE                    */
         SLR   @09,@01                                             0249
         STH   @09,CPUTL                                           0249
*       CALL CPUTLCK;               /* VARY CPU MAY CAUSE BAD CPUTL
*                                      COMPUTATION - CHECK FOR THIS  */
         BAL   @14,CPUTLCK                                         0250
*       IF CPETIM<CCCMNSIN THEN     /* IF ELAPSED TIME NOT LONG      */
         L     @09,CCCMNSIN(,RMCTPTR)                              0251
         CR    CPETIM,@09                                          0251
         BNL   @RF00251                                            0251
*         DO;                       /* ENOUGH FOR SIGNIFICANT MEASURE*/
*           CPUTL=                  /* FACTOR PREVIOUSLY             */
*               ((CPUTL             /* CALCULATED UTILIZATION        */
*               *CPETIM)            /* INTO CURRENT VALUE            */
*               +(CCVUTILP          /*                               */
*               *(CCCMNSIN          /*                               */
*               -CPETIM)))          /*                               */
*               /CCCMNSIN;          /*                               */
         LR    @08,CPETIM                                          0253
         MH    @08,CPUTL                                           0253
         LR    @15,@09                                             0253
         SLR   @15,CPETIM                                          0253
         MH    @15,CCVUTILP(,RMCTPTR)                              0253
         ALR   @08,@15                                             0253
         ST    @09,@TF00001                                        0253
         SRDA  @08,32                                              0253
         D     @08,@TF00001                                        0253
         STH   @09,CPUTL                                           0253
*         END;                      /*                               */
*       ELSE                        /* OTHERWISE                     */
*         DO;                       /*                               */
         B     @RC00251                                            0255
@RF00251 DS    0H                                                  0256
*           CCVRBSWT=CPWTIM;        /* RESET BASE WAIT TIME          */
         ST    CPWTIM,CCVRBSWT(,RMCTPTR)                           0256
*           CCVRBSTD=RMCTTOD;       /* AND BASE TIME OF DAY          */
         L     @07,RMCTTOD(,RMCTPTR)                               0257
         ST    @07,CCVRBSTD(,RMCTPTR)                              0257
*           CCVUTILP=CPUTL;         /* SAVE NEW UTILIZATION          */
         LH    @07,CPUTL                                           0258
         STH   @07,CCVUTILP(,RMCTPTR)                              0258
*         END;                      /*                               */
*     END;                          /*                               */
*   ELSE                                                           0261
*     CPUTL=CCVUTILP;               /* OTHERWISE NEW PERCENTAGE    0261
*                                      EQUALS OLD WAIT PERCENTAGE    */
         B     @RC00246                                            0261
@RF00246 LH    @07,CCVUTILP(,RMCTPTR)                              0261
         STH   @07,CPUTL                                           0261
*   END;                                                           0262
@EL00004 DS    0H                                                  0262
@EF00004 DS    0H                                                  0262
@ER00004 LM    @14,@12,@SA00004                                    0262
         BR    @14                                                 0262
*                                                                  0263
*/********************************************************************/
*/*                                                                  */
*/*      CPUTLCK - IRARMCPM INTERNAL SUBROUTINE                      */
*/*                                                                  */
*/*      FUNCTION -                                                  */
*/*        INSURE COMPUTED CPU UTILIZATION PERCENTAGE FALLS BETWEEN  */
*/*        0 AND 100 PERCENT. IF CPU UTILIZATION IS 100 AND LOWEST   */
*/*        PRIORITY USER HAS NOT BEEN DISPATCHED SET UTILIZATION TO  */
*/*        101 PERCENT                                               */
*/*                                                                  */
*/*      INPUT - CPUTL                                               */
*/*                                                                  */
*/*      OUTPUT - CPUTL                                              */
*/*                                                                  */
*/********************************************************************/
*                                                                  0263
*CPUTLCK:                                                          0263
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0263
CPUTLCK  DS    0H                                                  0264
*   RESPECIFY                                                      0264
*     RTNREG RESTRICTED;                                           0264
*   IF CPUTL<I0 THEN                /* INSURE COMPUTED CPU         0265
*                                      UTILIZATION                   */
         SLR   @15,@15                                             0265
         CH    @15,CPUTL                                           0265
         BNH   @RF00265                                            0265
*     CPUTL=I0;                     /* IS GREATER THAN 0             */
         STH   @15,CPUTL                                           0266
*   ELSE                            /*                               */
*     IF CPUTL>=I100 THEN           /* IF UTILIZATION IS 100 ( OR    */
         B     @RC00265                                            0267
@RF00265 LH    @15,CPUTL                                           0267
         C     @15,@CF02218                                        0267
         BL    @RF00267                                            0267
*       IF CCTALL='1'B THEN         /* GREATER ) AND SOME USERS WERE */
         TM    CCTALL(RMCTPTR),B'10000000'                         0268
         BNO   @RF00268                                            0268
*         CPUTL=I101;               /* NOT DISPATCHED, SET         0269
*                                      UTILIZATION                   */
         MVC   CPUTL(2),@CH02220                                   0269
*       ELSE                        /* TO 101 PERCENT                */
*         CPUTL=I100;               /* OTHERWISE LEAVE AT 100 PERCENT*/
         B     @RC00268                                            0270
@RF00268 MVC   CPUTL(2),@CH02218                                   0270
*   END;                                                           0271
@EL00005 DS    0H                                                  0271
@EF00005 DS    0H                                                  0271
@ER00005 BR    @14                                                 0271
*   RESPECIFY                                                      0272
*     RTNREG UNRESTRICTED;                                         0272
*                                                                  0273
*/********************************************************************/
*/*                                                                  */
*/*      NEWDP - IRARMCPM INTERNAL SUBROUTINE                        */
*/*                                                                  */
*/*      FUNCTION -                                                  */
*/*        COMPUTE MEAN TIME TO WAIT AND NEW DISPATCHING PRIORITY    */
*/*        FOR APG USER                                              */
*/*                                                                  */
*/*      INPUT -                                                     */
*/*        1) REG4 = OUCB ADDRESS                                    */
*/*        2) REG5 = ASCB ADDRESS                                    */
*/*                                                                  */
*/*      OUTPUT -                                                    */
*/*        1) OUCBNDP = NEW DISPATCHING PRIORITY                     */
*/*                                                                  */
*/********************************************************************/
*                                                                  0273
*NEWDP:                                                            0273
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0273
NEWDP    DS    0H                                                  0274
*   RESPECIFY                                                      0274
*    (APGJST1,                                                     0274
*     APGJST2,                                                     0274
*     RTNREG) RESTRICTED;                                          0274
*                                                                  0274
*/*   GET CURRENT JOB STEP TIME IN MILLISECONDS IN REGISTER WITH     */
*/*   HIGH ORDER BIT SET TO ZERO                                     */
*                                                                  0275
*   GENERATE CODE REFS(ASCBEJST);                                  0275
         LM    APGJST1,APGJST2,ASCBEJST(ASCBPTR)
         SRDL  APGJST1,S22
*   APEJST=APGJST2;                 /* SAVE TASK COMPONENT OF TIME   */
         LR    APEJST,APGJST2                                      0276
*   GENERATE CODE REFS(ASCBSRBT);                                  0277
         LM    APGJST1,APGJST2,ASCBSRBT(ASCBPTR)
         SRDL  APGJST1,S22
*   RESPECIFY                                                      0278
*     APGJST1 UNRESTRICTED;                                        0278
*   APGJST2=APGJST2+APEJST;         /* ADD SRB COMPONENT OF JOB TIME */
         ALR   APGJST2,APEJST                                      0279
*   OUXBPTR=ASCBOUXB;               /* ESTABLISH ADDRESSIBILITY TO 0280
*                                      OUXB                          */
         L     OUXBPTR,ASCBOUXB(,ASCBPTR)                          0280
*   APEJST=APGJST2-OUXBAET;         /* GET RECENT USER EXECUTION TIME*/
         LR    APEJST,APGJST2                                      0281
         SL    APEJST,OUXBAET(,OUXBPTR)                            0281
*   IF APEJST>CCCAPMET THEN         /* IF EXECUTION TIME ABOVE     0282
*                                      MININUM                       */
         C     APEJST,CCCAPMET(,RMCTPTR)                           0282
         BNH   @RF00282                                            0282
*     DO;                           /* COMPUTE NEW DISPATCHING PRTY  */
*       APSWCT=ASCBSWCT             /* FIRST COMPUTE RECENT SHORT    */
*           -OUXBWCT;               /* WAIT COUNT                    */
         LH    @15,ASCBSWCT(,ASCBPTR)                              0284
         SH    @15,OUXBWCT(,OUXBPTR)                               0284
         STH   @15,APSWCT                                          0284
*       IF APSWCT=I0 THEN           /* USER HAS NOT GONE INTO WAIT   */
         LTR   @15,@15                                             0285
         BNZ   @RF00285                                            0285
*         DO;                       /* DURING THE MEASUREMENT      0286
*                                      INTERVAL                      */
*           OUCBCPL='1'B;           /* SET SIGNIFICANT CPU USER FLAG */
         OI    OUCBCPL(OUCBPTR),B'00010000'                        0287
*           IF OUCBAPG='1'B&        /* IF USER IS IN APG     @Z40BPEB*/
*               OUCBNDP<=CCCAPGDP THEN/* IN MEAN TIME TO WAIT      0288
*                                                            @Z40BPEB*/
         TM    OUCBAPG(OUCBPTR),B'01000000'                        0288
         BNO   @RF00288                                            0288
         SLR   @15,@15                                             0288
         IC    @15,OUCBNDP(,OUCBPTR)                               0288
         CH    @15,CCCAPGDP(,RMCTPTR)                              0288
         BH    @RF00288                                            0288
*             DO;                   /*                       @YM05632*/
*               APOUCB=OUCBPTR;     /* THIS IS MEMORY WITH LARGEST   */
         ST    OUCBPTR,APOUCB                                      0290
*               APCPR=APMXMTW;      /* MEAN TIME TO WAIT             */
         MVC   APCPR(2),@CH02212                                   0291
*               OUCBNDP=CCCAPMDP;   /* AND DISPATCHING PRIORITY TO 0292
*                                      MIN                           */
         LH    @15,CCCAPMDP(,RMCTPTR)                              0292
         STC   @15,OUCBNDP(,OUCBPTR)                               0292
*             END;                  /*                       @YM05632*/
*         END;                      /*                               */
*       ELSE                        /*                               */
*         DO;                       /* OTHERWISE                     */
         B     @RC00285                                            0295
@RF00285 DS    0H                                                  0296
*           APDEL=APEJST/APSWCT;    /* COMPUTE MEAN TIME TO WAIT     */
         LR    @10,APEJST                                          0296
         SRDA  @10,32                                              0296
         LH    @15,APSWCT                                          0296
         DR    @10,@15                                             0296
         ST    @11,APDEL                                           0296
*           IF APDEL>CCCSIGUR THEN  /* IF USER HAS A SIGNIFICANT MTW */
         CH    @11,CCCSIGUR(,RMCTPTR)                              0297
         BNH   @RF00297                                            0297
*             OUCBCPL='1'B;         /* SET USER CPU LOAD BALANCING   */
         OI    OUCBCPL(OUCBPTR),B'00010000'                        0298
*           ELSE                    /* FLAG,                         */
*             OUCBCPL='0'B;         /* OTHERWISE RESET CPL FLAG      */
         B     @RC00297                                            0299
@RF00297 NI    OUCBCPL(OUCBPTR),B'11101111'                        0299
*           IF OUCBAPG='1'B&        /* IF USER IS IN APG     @Z40BPEB*/
*               OUCBNDP<=CCCAPGDP THEN/* IN MEAN TIME TO WAIT      0300
*                                                            @Z40BPEB*/
@RC00297 TM    OUCBAPG(OUCBPTR),B'01000000'                        0300
         BNO   @RF00300                                            0300
         SLR   @15,@15                                             0300
         IC    @15,OUCBNDP(,OUCBPTR)                               0300
         CH    @15,CCCAPGDP(,RMCTPTR)                              0300
         BH    @RF00300                                            0300
*             DO;                   /*                       @YM05632*/
*               IF APDEL>APCPR THEN /* SAVE POINTER TO APG USER      */
         L     @15,APDEL                                           0302
         CH    @15,APCPR                                           0302
         BNH   @RF00302                                            0302
*                 DO;               /* WITH THE LARGEST              */
*                   APOUCB=OUCBPTR; /* MEASURED MEAN TIME            */
         ST    OUCBPTR,APOUCB                                      0304
*                   APCPR=APDEL;    /* TO WAIT                       */
         STH   @15,APCPR                                           0305
*                 END;              /*                               */
*               APDEL=APDEL         /* NEXT COMPUTE DELTA FROM MTW TO*/
*                   /CCCAPDIV;      /* SUBTRACT FROM APG BASE      0307
*                                      PRIORITY                      */
@RF00302 L     @08,APDEL                                           0307
         SRDA  @08,32                                              0307
         LH    @15,CCCAPDIV(,RMCTPTR)                              0307
         DR    @08,@15                                             0307
         ST    @09,APDEL                                           0307
*               IF APDEL>CCCAPGDP-CCCAPMDP THEN/* INSURE THAT DELTA
*                                      DOES NOT              @Z40BPEB*/
         LH    @15,CCCAPGDP(,RMCTPTR)                              0308
         SH    @15,CCCAPMDP(,RMCTPTR)                              0308
         CR    @09,@15                                             0308
         BNH   @RF00308                                            0308
*                 APDEL=CCCAPGDP-CCCAPMDP;/* EXCEED MAXIMUM VALUE  0309
*                                                            @Z40BPEB*/
         ST    @15,APDEL                                           0309
*               OUCBNDP=CCCAPGDP    /* NEW DISPATCHING PRIORITY =  0310
*                                      BASE                  @Z40BPEB*/
*                   -APDEL;         /* APG PRIORITY MINUS DELTA      */
@RF00308 LH    @15,CCCAPGDP(,RMCTPTR)                              0310
         SL    @15,APDEL                                           0310
         STC   @15,OUCBNDP(,OUCBPTR)                               0310
*             END;                  /*                       @YM05632*/
*           OUXBWCT=ASCBSWCT;       /* RESET SHORT WAIT COUNT        */
@RF00300 LH    @15,ASCBSWCT(,ASCBPTR)                              0312
         STH   @15,OUXBWCT(,OUXBPTR)                               0312
*         END;                      /*                               */
*       OUXBAET=APGJST2;            /* RESET BASE USER EXECUTION TIME*/
@RC00285 ST    APGJST2,OUXBAET(,OUXBPTR)                           0314
*     END;                                                         0315
*   ELSE                            /* IF USER IS AT MINIMUM APG     */
*     IF ASCBDP=CCCAPMDP THEN       /* PRIORITY ROTATE USER          */
         B     @RC00282                                            0316
@RF00282 SLR   @15,@15                                             0316
         IC    @15,ASCBDP(,ASCBPTR)                                0316
         CH    @15,CCCAPMDP(,RMCTPTR)                              0316
         BNE   @RF00316                                            0316
*       OUCBNDP=CCCAPLDP;           /* CHAP TO ONE ABOVE MINIMUM     */
         LH    @15,CCCAPLDP(,RMCTPTR)                              0317
         STC   @15,OUCBNDP(,OUCBPTR)                               0317
*   RESPECIFY                       /* FREE REGISTERS TO COMPILER    */
*    (APGJST2,                                                     0318
*     RTNREG) UNRESTRICTED;                                        0318
*   END NEWDP;                                                     0319
@EL00006 DS    0H                                                  0319
@EF00006 DS    0H                                                  0319
@ER00006 BR    @14                                                 0319
*   END IRARMCPM                                                   0320
*                                                                  0320
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSUT5  (IRACPCOM)                                       */
*/*%INCLUDE SYSLIB  (IRAREGS )                                       */
*/*%INCLUDE SYSLIB  (IRACNSMP)                                       */
*/*%INCLUDE SYSLIB  (IRARMCT )                                       */
*/*%INCLUDE SYSLIB  (IRACCT  )                                       */
*/*%INCLUDE SYSLIB  (IRAICT  )                                       */
*/*%INCLUDE SYSLIB  (IRAMCT  )                                       */
*/*%INCLUDE SYSLIB  (IRARCT  )                                       */
*/*%INCLUDE SYSLIB  (IRARMPT )                                       */
*/*%INCLUDE SYSLIB  (IRARMCA )                                       */
*/*%INCLUDE SYSLIB  (IRARMEX )                                       */
*/*%INCLUDE SYSLIB  (IRARMSB )                                       */
*/*%INCLUDE SYSLIB  (IRAEPAT )                                       */
*/*%INCLUDE SYSLIB  (IRAEPDT )                                       */
*/*%INCLUDE SYSLIB  (IRAEPST )                                       */
*/*%INCLUDE SYSLIB  (IRARRPA )                                       */
*/*%INCLUDE SYSLIB  (IHAASCB )                                       */
*/*%INCLUDE SYSLIB  (IRAOUCB )                                       */
*/*%INCLUDE SYSLIB  (IHAOUXB )                                       */
*/*%INCLUDE SYSLIB  (IRARMEP )                                       */
*/*%INCLUDE SYSLIB  (IHAPVT  )                                       */
*/*%INCLUDE SYSLIB  (IHALCCA )                                       */
*/*%INCLUDE SYSLIB  (IHALCCAT)                                       */
*/*%INCLUDE SYSLIB  (IHACSD  )                                       */
*/*%INCLUDE SYSLIB  (IHAPSA  )                                       */
*/*%INCLUDE SYSLIB  (CVT     )                                       */
*/*%INCLUDE SYSUT5  (IRARMCWA)                                       */
*/*%INCLUDE SYSUT5  (IRARMAP0)                                       */
*/*%INCLUDE SYSUT5  (IRARMAP1)                                       */
*/*%INCLUDE SYSUT5  (IRARMEQ1)                                       */
*/*%INCLUDE SYSUT5  (IRARMCL0)                                       */
*/*%INCLUDE SYSUT5  (IRARMCL1)                                       */
*/*%INCLUDE SYSUT5  (IRARMCL3)                                       */
*/*%INCLUDE SYSUT5  (CHAP    )                                       */
*/*%INCLUDE SYSUT5  (CPLRVSWF)                                       */
*/*%INCLUDE SYSUT5  (CPUWAIT )                                       */
*/*%INCLUDE SYSUT5  (CPWTPCK )                                       */
*/*%INCLUDE SYSUT5  (NEWDP   )                                       */
*                                                                  0320
*       ;                                                          0320
@DATA    DS    0H
@CH02220 DC    H'101'
@CH02212 DC    H'32767'
         DS    0F
@SA00004 DS    15F
@TF00001 DS    F
         DS    0F
@CF00090 DC    F'1'
@CF00338 DC    F'16'
@CF02218 DC    F'100'
@CH02218 EQU   @CF02218+2
@CF02277 DC    F'-4'
         DS    0D
RCHAPFUL DC    AL4(RCHAPLST+19*8)
APX      DC    A(0)
APDEL    DC    F'0'
APCHAPPR DC    F'0'
APOUCB   DC    A(0)
ROTAOUCB DC    A(0)
RCHAPLEN DC    AL2(8)
APSWCT   DC    H'0'
APCPR    DC    H'0'
ROTACT   DC    H'0'
ROTASQN  DC    H'0'
CPUTL    DC    H'0'
@TS00001 DS    CL2
@CC02226 DC    C'OUCB'
@CB02251 DC    X'8000'
@CB02252 DC    X'0000'
CPBX     DS    BL2
RCHAPLST DS    20BL8
IRARMCPM CSECT
*                                  /*
S1       EQU   1                   SHIFT VALUE 1
S21      EQU   21                  SHIFT VALUE 21
S22      EQU   22                  SHIFT VALUE 22
IRARMCPM CSECT
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
CPSCF    EQU   @08
CPSWF    EQU   @07
CPETIM   EQU   @07
CPUCT    EQU   @07
CPX      EQU   @09
CPRV     EQU   @07
CPWTIM   EQU   @08
APINT    EQU   @07
APUSRCT  EQU   @10
APCHAPCT EQU   @08
APEJST   EQU   @08
R0       EQU   @00
R1       EQU   @01
RMCTPTR  EQU   @02
RRPAPTR  EQU   @03
OUCBPTR  EQU   @04
ASCBPTR  EQU   @05
OUXBPTR  EQU   @06
SVEREG   EQU   @13
RTNREG   EQU   @14
NTRREG   EQU   @15
RTNCOD   EQU   @15
LCCAPTR  EQU   @06
RCHAPPTR EQU   @01
APGJST1  EQU   @00
APGJST2  EQU   @01
CPWTIMR1 EQU   @04
CPWTIMR2 EQU   @05
ENQJST1  EQU   @00
ENQJST2  EQU   @01
CPJST1   EQU   @00
CPJST2   EQU   @01
PSA      EQU   0
FLCRNPSW EQU   PSA
FLCROPSW EQU   PSA+8
FLCICCW2 EQU   PSA+16
FLCCVT   EQU   FLCICCW2
PSAEEPSW EQU   PSA+132
PSAESPSW EQU   PSA+136
FLCSVILC EQU   PSAESPSW+1
PSAEPPSW EQU   PSA+140
FLCPIILC EQU   PSAEPPSW+1
FLCPICOD EQU   PSAEPPSW+2
PSAPICOD EQU   FLCPICOD+1
FLCTEA   EQU   PSAEPPSW+4
FLCPER   EQU   PSA+152
FLCMCLA  EQU   PSA+168
FLCIOEL  EQU   FLCMCLA+4
FLCIOA   EQU   FLCMCLA+16
FLCFSA   EQU   FLCMCLA+80
PSASUPER EQU   PSA+552
PSASUP1  EQU   PSASUPER
PSASUP2  EQU   PSASUPER+1
PSASUP3  EQU   PSASUPER+2
PSASUP4  EQU   PSASUPER+3
PSACLHT  EQU   PSA+640
PSALKSA  EQU   PSA+696
PSAHLHI  EQU   PSA+760
PSADSSFL EQU   PSA+836
PSADSSF1 EQU   PSADSSFL
PSADSSF3 EQU   PSADSSFL+2
PSADSSF4 EQU   PSADSSFL+3
PSARSVT  EQU   PSA+896
IRARMRTN EQU   0
RMCT     EQU   0
RMCTINQE EQU   RMCT+112
RMCTTOD  EQU   RMCT+124
RMCTFLGS EQU   RMCT+148
CCT      EQU   RMCT+192
CCCAPMET EQU   CCT+4
CCCAPMIN EQU   CCT+8
CCCAPMAX EQU   CCT+12
CCCAPDEL EQU   CCT+16
CCCMNSIN EQU   CCT+24
CCCAPDIV EQU   CCT+32
CCCAPROT EQU   CCT+34
CCCAPLDP EQU   CCT+38
CCCAPMDP EQU   CCT+40
CCCAPGDP EQU   CCT+42
CCCAPRLT EQU   CCT+46
CCCAPRHT EQU   CCT+48
CCCUTHIT EQU   CCT+50
CCCUTLOT EQU   CCT+52
CCCHISCF EQU   CCT+54
CCCLOSCF EQU   CCT+56
CCCMAXRV EQU   CCT+58
CCCMINRV EQU   CCT+60
CCCSCFAC EQU   CCT+62
CCCSIGUR EQU   CCT+66
CCCSCFC1 EQU   CCT+70
CCCSCFC2 EQU   CCT+72
CCVRBSWT EQU   CCT+80
CCVRBSTD EQU   CCT+88
CCVRVSWF EQU   CCT+92
CCVEJST  EQU   CCT+100
CCVIMBBT EQU   CCT+104
CCVUTILP EQU   CCT+110
CCVLGUTL EQU   CCT+116
CCVENQCT EQU   CCT+120
CCTFLG1  EQU   CCT+124
CCTALL   EQU   CCTFLG1
CCTCPUOT EQU   CCTFLG1
ICT      EQU   RMCT+320
ICTFLAGS EQU   ICT+84
MCT      EQU   RMCT+408
MCTSFLGS EQU   MCT+64
MCTOFLGS EQU   MCT+65
RCT      EQU   RMCT+504
RMPT     EQU   RMCT+592
RMPTERV  EQU   RMPT+12
RMCA     EQU   RMCT+664
RMCAFLGS EQU   RMCA+36
RMCASRC  EQU   RMCA+124
RMEX     EQU   RMCT+832
RMEPBEVT EQU   RMEX
RMEPBCTL EQU   RMEX+16
RMSB     EQU   RMCT+896
RMSBI02  EQU   RMSB
EPAT     EQU   RMCT+1016
EPDT     EQU   RMCT+1416
EPST     EQU   RMCT+1512
RMEPBWM3 EQU   EPST
EPSTWM3  EQU   RMEPBWM3
RMEPBIL3 EQU   EPST+16
RMEPBCL3 EQU   EPST+32
RMEPBCSO EQU   EPST+48
RMEPBCSI EQU   EPST+64
RRPA     EQU   0
RRPAINC  EQU   RRPA
RRPAVPGN EQU   RRPAINC+2
RRPAFLG0 EQU   RRPAVPGN
RRPAINP  EQU   RRPA+4
RRPAFLG  EQU   RRPA+8
RRPATOD  EQU   RRPA+12
RRPAINS  EQU   RRPA+16
RRPAEPA  EQU   RRPA+20
ASCB     EQU   0
ASCBSUPC EQU   ASCB+16
ASCBSEQN EQU   ASCB+38
ASCBDP   EQU   ASCB+43
ASCBRSM  EQU   ASCB+52
ASCBRSMF EQU   ASCBRSM
ASCBEJST EQU   ASCB+64
ASCBFW1  EQU   ASCB+100
ASCBRCTF EQU   ASCBFW1+2
ASCBFLG1 EQU   ASCBFW1+3
ASCBSWCT EQU   ASCB+112
ASCBDSP1 EQU   ASCB+114
ASCBFLG2 EQU   ASCB+115
ASCBTCBS EQU   ASCB+124
ASCBLKGP EQU   ASCB+128
ASCBOUXB EQU   ASCB+148
ASCBSRQ  EQU   ASCB+180
ASCBSRQ1 EQU   ASCBSRQ
ASCBSRQ2 EQU   ASCBSRQ+1
ASCBSRQ3 EQU   ASCBSRQ+2
ASCBSRQ4 EQU   ASCBSRQ+3
ASCBSRBT EQU   ASCB+200
OUCB     EQU   0
OUCBNAME EQU   OUCB
OUCBFWD  EQU   OUCB+4
OUCBQFL  EQU   OUCB+16
OUCBGOO  EQU   OUCBQFL
OUCBGOI  EQU   OUCBQFL
OUCBGOB  EQU   OUCBQFL
OUCBOUT  EQU   OUCBQFL
OUCBSFL  EQU   OUCB+17
OUCBNSW  EQU   OUCBSFL
OUCBBIB  EQU   OUCBSFL
OUCBPVL  EQU   OUCBSFL
OUCBENQ  EQU   OUCBSFL
OUCBYFL  EQU   OUCB+18
OUCBAFL  EQU   OUCB+19
OUCBAPG  EQU   OUCBAFL
OUCBRMA  EQU   OUCBAFL
OUCBCPL  EQU   OUCBAFL
OUCBTFL  EQU   OUCB+20
OUCBEFL  EQU   OUCB+21
OUCBNQF  EQU   OUCBEFL
OUCBUFL  EQU   OUCB+23
OUCBNDP  EQU   OUCB+26
OUCBASCB EQU   OUCB+40
OUCBCSW  EQU   OUCB+84
OUCBCFL  EQU   OUCBCSW+2
OUCBCRV  EQU   OUCB+98
OUCBPSS  EQU   OUCB+112
OUCBTCP  EQU   OUCB+124
OUXB     EQU   0
OUXBNQT  EQU   OUXB+60
OUXBAET  EQU   OUXB+92
OUXBCPS  EQU   OUXB+96
OUXBWCT  EQU   OUXB+124
RMEP     EQU   0
RMEPEPB  EQU   RMEP
RMEPFLG  EQU   RMEPEPB+8
RMEPSCH  EQU   RMEP+16
RMEPINT  EQU   RMEPSCH+12
PVT      EQU   0
PVTFLAG1 EQU   PVT
PVTFLAG2 EQU   PVT+1
PVTQS    EQU   PVT+304
PVTWSAX  EQU   PVT+344
LCCA     EQU   0
LCCAIHRC EQU   LCCA+520
LCCAIHR1 EQU   LCCAIHRC
LCCAIHR2 EQU   LCCAIHRC+1
LCCAIHR3 EQU   LCCAIHRC+2
LCCAIHR4 EQU   LCCAIHRC+3
LCCASPIN EQU   LCCA+524
LCCASPN1 EQU   LCCASPIN
LCCASPN2 EQU   LCCASPIN+1
LCCASPN3 EQU   LCCASPIN+2
LCCASPN4 EQU   LCCASPIN+3
LCCADSF1 EQU   LCCA+540
LCCADSF2 EQU   LCCA+541
LCCASPSA EQU   LCCA+544
LCCAWTIM EQU   LCCA+616
LCCACRFL EQU   LCCA+692
LCCACREX EQU   LCCA+693
LCCALKFG EQU   LCCA+694
LCCASRBF EQU   LCCA+720
LCCAVT   EQU   0
LCCAT00P EQU   LCCAVT
CSD      EQU   0
CSDCPUAL EQU   CSD+8
CSDCPUOL EQU   CSD+10
CSDSCWRD EQU   CSD+12
CSDSCFL1 EQU   CSDSCWRD
CSDSCFL2 EQU   CSDSCWRD+1
CSDSCFL3 EQU   CSDSCWRD+2
CSDSCFL4 EQU   CSDSCWRD+3
CSDFLAGS EQU   CSD+23
CVTMAP   EQU   0
CVTDAR   EQU   CVTMAP+72
CVTFLGS1 EQU   CVTDAR
CVTDCB   EQU   CVTMAP+116
CVTIOQET EQU   CVTMAP+120
CVTIERLC EQU   CVTMAP+144
CVTHEAD  EQU   CVTMAP+160
CVTSV76C EQU   CVTHEAD
CVTOPTA  EQU   CVTMAP+182
CVTOPTB  EQU   CVTMAP+183
CVTGTF   EQU   CVTMAP+236
CVTGTFST EQU   CVTGTF
CVTGTFS  EQU   CVTGTFST
CVTSTATE EQU   CVTGTFST
CVTTMODE EQU   CVTGTFST
CVTFORM  EQU   CVTGTFST
CVTAQAVT EQU   CVTMAP+240
CVTTCMFG EQU   CVTAQAVT
CVTVOLM2 EQU   CVTMAP+244
CVTTATA  EQU   CVTVOLM2
CVTTSKS  EQU   CVTTATA
CVTVOLF2 EQU   CVTTSKS
CVTTAT   EQU   CVTTATA+1
CVTATER  EQU   CVTMAP+248
CVTEXT1  EQU   CVTMAP+252
CVTPURG  EQU   CVTMAP+260
CVTQMSG  EQU   CVTMAP+268
CVTDMSR  EQU   CVTMAP+272
CVTRSV37 EQU   CVTDMSR
CVTDMSRF EQU   CVTRSV37
CVTERPV  EQU   CVTMAP+316
CVTINTLA EQU   CVTMAP+320
CVTAPF   EQU   CVTMAP+324
CVTEXT2  EQU   CVTMAP+328
CVTHJES  EQU   CVTMAP+332
CVTPGSIA EQU   CVTMAP+348
CVTA1F1  EQU   CVTMAP+356
CVTSYSK  EQU   CVTMAP+357
CVTVOLM1 EQU   CVTMAP+380
CVTVOLF1 EQU   CVTVOLM1
CVTATMCT EQU   CVTMAP+388
CVTXTNT1 EQU   0
CVTXTNT2 EQU   0
CVTDSSV  EQU   CVTXTNT2
CVTFLGBT EQU   CVTXTNT2+5
CVTQID   EQU   CVTXTNT2+24
CVTRV400 EQU   CVTXTNT2+52
CVTRV409 EQU   CVTXTNT2+53
CVTATCVT EQU   CVTXTNT2+64
CVTRV429 EQU   CVTXTNT2+84
CVTRV438 EQU   CVTXTNT2+85
CVTRV457 EQU   CVTXTNT2+112
CVTRV466 EQU   CVTXTNT2+113
CVTFIX   EQU   0
CVTRELNO EQU   CVTFIX+252
RCHAPINT EQU   0
RCHAPFLG EQU   RCHAPINT
RCHAPEND EQU   RCHAPFLG
RCHAPDP  EQU   RCHAPINT+2
RCHAPUSR EQU   RCHAPINT+4
IRARMNTR EQU   0
RMEPPTR  EQU   RRPAEPA
CVTS01   EQU   CVTPGSIA
CVTPVTP  EQU   CVTS01+8
CVTLPDIA EQU   CVTS01+12
CVTDIRST EQU   CVTLPDIA
CVTSLIDA EQU   CVTS01+24
CVTCTLFG EQU   CVTS01+50
CVTASCBL EQU   CVTS01+220
CVTCSD   EQU   CVTS01+312
CVTLCCAT EQU   CVTS01+420
CVTRV210 EQU   CVTS01+424
CVTRV219 EQU   CVTS01+425
CVTRV228 EQU   CVTS01+426
CVTRV237 EQU   CVTS01+427
CVTMFRTR EQU   CVTS01+452
CVTRV262 EQU   CVTS01+468
CVTRV271 EQU   CVTS01+469
CVTRV280 EQU   CVTS01+470
CVTRV289 EQU   CVTS01+471
CVTGSDA  EQU   CVTS01+600
PVTPTR   EQU   CVTPVTP
PSARSVTE EQU   PSARSVT
CVTPTR   EQU   FLCCVT
CPASCBET EQU   ASCBEJST+2
FLC      EQU   PSA
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
PSARSAV  EQU   PSARSVTE+60
PSARSTK  EQU   PSARSVTE+56
PSAESAV3 EQU   PSARSVTE+52
PSAESTK3 EQU   PSARSVTE+48
PSAESAV2 EQU   PSARSVTE+44
PSAESTK2 EQU   PSARSVTE+40
PSAESAV1 EQU   PSARSVTE+36
PSAESTK1 EQU   PSARSVTE+32
PSAPSAV  EQU   PSARSVTE+28
PSAPSTK  EQU   PSARSVTE+24
PSAMSAV  EQU   PSARSVTE+20
PSAMSTK  EQU   PSARSVTE+16
PSASSAV  EQU   PSARSVTE+12
PSASSTK  EQU   PSARSVTE+8
PSANSTK  EQU   PSARSVTE+4
PSACSTK  EQU   PSARSVTE
CVTRV628 EQU   CVTS01+728
CVTRV627 EQU   CVTS01+724
CVTRV626 EQU   CVTS01+720
CVTRV625 EQU   CVTS01+716
CVTRV624 EQU   CVTS01+712
CVTRV623 EQU   CVTS01+708
CVTRV622 EQU   CVTS01+704
CVTRV621 EQU   CVTS01+700
CVTIHASU EQU   CVTS01+696
CVTSUSP  EQU   CVTS01+692
CVTT6SVC EQU   CVTS01+688
CVTCDAL  EQU   CVTS01+684
CVTTCTL  EQU   CVTS01+680
CVTRSUME EQU   CVTS01+676
CVTJTERM EQU   CVTS01+672
CVTASMRM EQU   CVTS01+668
CVTTCASP EQU   CVTS01+664
CVT0PT03 EQU   CVTS01+660
CVT0PT0E EQU   CVTS01+656
CVTRV609 EQU   CVTS01+652
CVTCGK   EQU   CVTS01+648
CVTRAC   EQU   CVTS01+644
CVTHSM   EQU   CVTS01+640
CVTRV605 EQU   CVTS01+636
CVTRV604 EQU   CVTS01+632
CVTEFF02 EQU   CVTS01+628
CVTCBBR  EQU   CVTS01+624
CVTSSCR  EQU   CVTS01+620
CVTEVENT EQU   CVTS01+616
CVTCRCA  EQU   CVTS01+612
CVTTPIO  EQU   CVTS01+608
CVTADV   EQU   CVTS01+604
CVTGSDAB EQU   CVTGSDA
CVTQV3   EQU   CVTS01+596
CVTQV2   EQU   CVTS01+592
CVTQV1   EQU   CVTS01+588
CVTRPT   EQU   CVTS01+584
CVTSSRB  EQU   CVTS01+580
CVTCSDRL EQU   CVTS01+576
CVTEXP1  EQU   CVTS01+572
CVTRMPMT EQU   CVTS01+568
CVTRMPTT EQU   CVTS01+564
CVTVPSA  EQU   CVTS01+560
CVTVSTOP EQU   CVTS01+556
CVTGTFR8 EQU   CVTS01+552
CVTQUIT  EQU   CVTS01+548
CVTVACR  EQU   CVTS01+544
CVTWTCB  EQU   CVTS01+540
CVTSTPRS EQU   CVTS01+536
CVT0PT02 EQU   CVTS01+532
CVTDARCM EQU   CVTS01+528
CVTIRECM EQU   CVTS01+524
CVTJRECM EQU   CVTS01+520
CVTVEMS0 EQU   CVTS01+516
CVTSPFRR EQU   CVTS01+512
CVTRLSTG EQU   CVTS01+508
CVT0TC0A EQU   CVTS01+504
CVTGMBR  EQU   CVTS01+500
CVTLFRM  EQU   CVTS01+496
CVTRMBR  EQU   CVTS01+492
CVTVIOP  EQU   CVTS01+488
CVTRV307 EQU   CVTS01+486
CVTRV306 EQU   CVTS01+484
CVTRV305 EQU   CVTS01+482
CVTRV304 EQU   CVTS01+480
CVTRV303 EQU   CVTS01+478
CVTRV302 EQU   CVTS01+476
CVTTRCA  EQU   CVTS01+472
CVTRV297 EQU   CVTRV289
CVTRV296 EQU   CVTRV289
CVTRV295 EQU   CVTRV289
CVTRV294 EQU   CVTRV289
CVTRV293 EQU   CVTRV289
CVTRV292 EQU   CVTRV289
CVTRV291 EQU   CVTRV289
CVTRV290 EQU   CVTRV289
CVTRV288 EQU   CVTRV280
CVTRV287 EQU   CVTRV280
CVTRV286 EQU   CVTRV280
CVTRV285 EQU   CVTRV280
CVTRV284 EQU   CVTRV280
CVTRV283 EQU   CVTRV280
CVTRV282 EQU   CVTRV280
CVTRV281 EQU   CVTRV280
CVTRV279 EQU   CVTRV271
CVTRV278 EQU   CVTRV271
CVTRV277 EQU   CVTRV271
CVTRV276 EQU   CVTRV271
CVTRV275 EQU   CVTRV271
CVTRV274 EQU   CVTRV271
CVTRV273 EQU   CVTRV271
CVTRV272 EQU   CVTRV271
CVTRV270 EQU   CVTRV262
CVTRV269 EQU   CVTRV262
CVTRV268 EQU   CVTRV262
CVTRV267 EQU   CVTRV262
CVTRV266 EQU   CVTRV262
CVTRV265 EQU   CVTRV262
CVTRV264 EQU   CVTRV262
CVTRV263 EQU   CVTRV262
CVTVFP   EQU   CVTS01+464
CVTVSI   EQU   CVTS01+460
CVTVPSIB EQU   CVTS01+456
CVTMFACT EQU   CVTMFRTR
CVTMFCTL EQU   CVTS01+448
CVTPVBP  EQU   CVTS01+444
CVTPWI   EQU   CVTS01+440
CVTRV254 EQU   CVTS01+438
CVTRV253 EQU   CVTS01+436
CVTRV252 EQU   CVTS01+434
CVTRV251 EQU   CVTS01+433
CVTRV250 EQU   CVTS01+432
CVTRV249 EQU   CVTS01+431
CVTRV248 EQU   CVTS01+430
CVTRV247 EQU   CVTS01+429
CVTRV246 EQU   CVTS01+428
CVTRV245 EQU   CVTRV237
CVTRV244 EQU   CVTRV237
CVTRV243 EQU   CVTRV237
CVTRV242 EQU   CVTRV237
CVTRV241 EQU   CVTRV237
CVTRV240 EQU   CVTRV237
CVTRV239 EQU   CVTRV237
CVTRV238 EQU   CVTRV237
CVTRV236 EQU   CVTRV228
CVTRV235 EQU   CVTRV228
CVTRV234 EQU   CVTRV228
CVTRV233 EQU   CVTRV228
CVTRV232 EQU   CVTRV228
CVTRV231 EQU   CVTRV228
CVTRV230 EQU   CVTRV228
CVTRV229 EQU   CVTRV228
CVTRV227 EQU   CVTRV219
CVTRV226 EQU   CVTRV219
CVTRV225 EQU   CVTRV219
CVTRV224 EQU   CVTRV219
CVTRV223 EQU   CVTRV219
CVTRV222 EQU   CVTRV219
CVTRV221 EQU   CVTRV219
CVTRV220 EQU   CVTRV219
CVTRV218 EQU   CVTRV210
CVTRV217 EQU   CVTRV210
CVTRV216 EQU   CVTRV210
CVTRV215 EQU   CVTRV210
CVTRV214 EQU   CVTRV210
CVTRV213 EQU   CVTRV210
CVTRV212 EQU   CVTRV210
CVTRV211 EQU   CVTRV210
CVTPCCAT EQU   CVTS01+416
CVTIPCRP EQU   CVTS01+412
CVTIPCRI EQU   CVTS01+408
CVTIPCDS EQU   CVTS01+404
CVTAIDVT EQU   CVTS01+400
CVTSSAP  EQU   CVTS01+396
CVTEHCIR EQU   CVTS01+392
CVTEHDEF EQU   CVTS01+388
CVTDAIR  EQU   CVTS01+384
CVTPERFM EQU   CVTS01+380
CVT044R2 EQU   CVTS01+376
CVTFETCH EQU   CVTS01+372
CVTRSTWD EQU   CVTS01+368
CVTSPOST EQU   CVTS01+364
CVTIOBP  EQU   CVTS01+360
CVTASMVT EQU   CVTS01+356
CVTRECRQ EQU   CVTS01+352
CVTWSAC  EQU   CVTS01+348
CVTRV149 EQU   CVTS01+344
CVTWSAL  EQU   CVTS01+340
CVTSPSA  EQU   CVTS01+336
CVTGLMN  EQU   CVTS01+332
CVTVEAC0 EQU   CVTS01+328
CVT062R1 EQU   CVTS01+324
CVTRPOST EQU   CVTS01+320
CVTDQIQE EQU   CVTS01+316
CVTLKRMA EQU   CVTS01+308
CVTRSPIE EQU   CVTS01+304
CVTRENQ  EQU   CVTS01+300
CVTLQCB  EQU   CVTS01+296
CVTFQCB  EQU   CVTS01+292
CVTQCS01 EQU   CVTS01+288
CVTAPFT  EQU   CVTS01+284
CVTPARRL EQU   CVTS01+280
CVTVWAIT EQU   CVTS01+276
CVTGSPL  EQU   CVTS01+272
CVTLSMQ  EQU   CVTS01+268
CVTGSMQ  EQU   CVTS01+264
CVTEXPRO EQU   CVTS01+260
CVTOPCTP EQU   CVTS01+256
CVTSIC   EQU   CVTS01+252
CVTTPIOS EQU   CVTS01+248
CVTRTMS  EQU   CVTS01+244
CVTSDBF  EQU   CVTS01+240
CVTSCBP  EQU   CVTS01+236
CVTSDMP  EQU   CVTS01+232
CVTSV60  EQU   CVTS01+228
CVTRTMCT EQU   CVTS01+224
CVTASCBH EQU   CVTS01+216
CVTGDA   EQU   CVTS01+212
CVTASVT  EQU   CVTS01+208
CVTVVMDI EQU   CVTS01+204
CVTAQTOP EQU   CVTS01+200
CVTIOSCS EQU   CVTS01+196
CVTSDRM  EQU   CVTS01+192
CVTOPTE  EQU   CVTS01+188
CVTSTXU  EQU   CVTS01+184
CVTQUIS  EQU   CVTS01+180
CVTPARS  EQU   CVTS01+176
CVTS1EE  EQU   CVTS01+172
CVTFRAS  EQU   CVTS01+168
CVTQSAS  EQU   CVTS01+164
CVTCRAS  EQU   CVTS01+160
CVTCRMN  EQU   CVTS01+156
CVTDELCP EQU   CVTS01+152
CVTFRECL EQU   CVTS01+148
CVTGETCL EQU   CVTS01+144
CVTBLDCP EQU   CVTS01+140
CVTAUTHL EQU   CVTS01+136
CVTSCAN  EQU   CVTS01+132
CVTRV144 EQU   CVTS01+130
CVTMAXMP EQU   CVTS01+128
CVTSTCK  EQU   CVTS01+124
CVTRV139 EQU   CVTS01+123
CVTDSSAC EQU   CVTS01+122
CVTRV513 EQU   CVTS01+121
CVTIOSPL EQU   CVTS01+120
CVTPTGT  EQU   CVTS01+116
CVTCSPIE EQU   CVTS01+112
CVTSMFEX EQU   CVTS01+108
CVTOLT0A EQU   CVTS01+104
CVTSRBRT EQU   CVTS01+100
CVTPUTL  EQU   CVTS01+96
CVTASCRL EQU   CVTS01+92
CVTASCRF EQU   CVTS01+88
CVTRV326 EQU   CVTS01+84
CVTRV325 EQU   CVTS01+80
CVTRV324 EQU   CVTS01+76
CVT0VL01 EQU   CVTS01+72
CVTSHRVM EQU   CVTS01+68
CVTRV332 EQU   CVTS01+64
CVTTAS   EQU   CVTS01+60
CVTRSCN  EQU   CVTS01+56
CVTTRAC2 EQU   CVTS01+54
CVTTRACE EQU   CVTS01+52
CVTAPG   EQU   CVTS01+51
CVTSDTRC EQU   CVTCTLFG
CVTGTRCE EQU   CVTCTLFG
CVTNOMP  EQU   CVTCTLFG
CVTRSV79 EQU   CVTCTLFG
CVTDSTAT EQU   CVTCTLFG
CVTRSV78 EQU   CVTCTLFG
CVTRV333 EQU   CVTCTLFG
CVTRV323 EQU   CVTCTLFG
CVTSPVLK EQU   CVTS01+49
CVTRSV77 EQU   CVTS01+48
CVTRV331 EQU   CVTS01+44
CVTRV330 EQU   CVTS01+40
CVTRV329 EQU   CVTS01+36
CVTRV328 EQU   CVTS01+32
CVTRV322 EQU   CVTS01+28
CVTSLID  EQU   CVTSLIDA+1
CVTSYLK  EQU   CVTSLIDA
CVTRV321 EQU   CVTS01+20
CVTRV320 EQU   CVTS01+16
CVTLPDIR EQU   CVTLPDIA+1
CVTRSV69 EQU   CVTDIRST
CVTRSV68 EQU   CVTDIRST
CVTRSV67 EQU   CVTDIRST
CVTRSV66 EQU   CVTDIRST
CVTRSV65 EQU   CVTDIRST
CVTRSV64 EQU   CVTDIRST
CVTRSV63 EQU   CVTDIRST
CVTDICOM EQU   CVTDIRST
CVTLPDSR EQU   CVTS01+4
CVTGETL  EQU   CVTS01
RCHAPRSV EQU   RCHAPINT+1
RCHAPNRQ EQU   RCHAPFLG
CVTLEVL  EQU   CVTRELNO+2
CVTNUMB  EQU   CVTRELNO
CVTMDL   EQU   CVTFIX+250
@NM00030 EQU   CVTFIX+248
@NM00029 EQU   CVTFIX
CVTRV482 EQU   CVTXTNT2+128
CVTRV481 EQU   CVTXTNT2+124
CVTRV480 EQU   CVTXTNT2+120
CVTRV479 EQU   CVTXTNT2+118
CVTRV478 EQU   CVTXTNT2+117
CVTRV477 EQU   CVTXTNT2+116
CVTRV476 EQU   CVTXTNT2+115
CVTRV475 EQU   CVTXTNT2+114
CVTRV474 EQU   CVTRV466
CVTRV473 EQU   CVTRV466
CVTRV472 EQU   CVTRV466
CVTRV471 EQU   CVTRV466
CVTRV470 EQU   CVTRV466
CVTRV469 EQU   CVTRV466
CVTRV468 EQU   CVTRV466
CVTRV467 EQU   CVTRV466
CVTRV465 EQU   CVTRV457
CVTRV464 EQU   CVTRV457
CVTRV463 EQU   CVTRV457
CVTRV462 EQU   CVTRV457
CVTRV461 EQU   CVTRV457
CVTRV460 EQU   CVTRV457
CVTRV459 EQU   CVTRV457
CVTRV458 EQU   CVTRV457
CVTRV456 EQU   CVTXTNT2+108
CVTRV455 EQU   CVTXTNT2+104
CVTRV454 EQU   CVTXTNT2+100
CVTRV453 EQU   CVTXTNT2+96
CVTRV452 EQU   CVTXTNT2+94
CVTRV451 EQU   CVTXTNT2+92
CVTRV450 EQU   CVTXTNT2+90
CVTRV449 EQU   CVTXTNT2+88
CVTRV448 EQU   CVTXTNT2+87
CVTRV447 EQU   CVTXTNT2+86
CVTRV446 EQU   CVTRV438
CVTRV445 EQU   CVTRV438
CVTRV444 EQU   CVTRV438
CVTRV443 EQU   CVTRV438
CVTRV442 EQU   CVTRV438
CVTRV441 EQU   CVTRV438
CVTRV440 EQU   CVTRV438
CVTRV439 EQU   CVTRV438
CVTRV437 EQU   CVTRV429
CVTRV436 EQU   CVTRV429
CVTRV435 EQU   CVTRV429
CVTRV434 EQU   CVTRV429
CVTRV433 EQU   CVTRV429
CVTRV432 EQU   CVTRV429
CVTRV431 EQU   CVTRV429
CVTRV430 EQU   CVTRV429
CVTRV428 EQU   CVTXTNT2+80
CVTRV427 EQU   CVTXTNT2+76
CVTRV426 EQU   CVTXTNT2+72
CVTRV425 EQU   CVTXTNT2+68
CVTATACT EQU   CVTATCVT
CVTRV423 EQU   CVTXTNT2+62
CVTRV422 EQU   CVTXTNT2+60
CVTRV421 EQU   CVTXTNT2+58
CVTRV420 EQU   CVTXTNT2+56
CVTRV419 EQU   CVTXTNT2+55
CVTRV418 EQU   CVTXTNT2+54
CVTRV417 EQU   CVTRV409
CVTRV416 EQU   CVTRV409
CVTRV415 EQU   CVTRV409
CVTRV414 EQU   CVTRV409
CVTRV413 EQU   CVTRV409
CVTRV412 EQU   CVTRV409
CVTRV411 EQU   CVTRV409
CVTRV410 EQU   CVTRV409
CVTRV408 EQU   CVTRV400
CVTRV407 EQU   CVTRV400
CVTRV406 EQU   CVTRV400
CVTRV405 EQU   CVTRV400
CVTRV404 EQU   CVTRV400
CVTRV403 EQU   CVTRV400
CVTRV402 EQU   CVTRV400
CVTRV401 EQU   CVTRV400
CVTICB   EQU   CVTXTNT2+48
CVTSKTA  EQU   CVTXTNT2+44
CVTCCVT  EQU   CVTXTNT2+40
CVTRSV98 EQU   CVTXTNT2+36
CVTRSV97 EQU   CVTXTNT2+34
CVTRSV96 EQU   CVTXTNT2+32
CVTOLTEP EQU   CVTXTNT2+28
CVTQIDA  EQU   CVTQID+1
CVTRSV95 EQU   CVTQID
CVTRSV94 EQU   CVTXTNT2+20
CVTRSV93 EQU   CVTXTNT2+16
CVTRSV92 EQU   CVTXTNT2+12
CVTDEBVR EQU   CVTXTNT2+8
CVTRSV91 EQU   CVTXTNT2+6
CVTRSV9H EQU   CVTFLGBT
CVTRSV9G EQU   CVTFLGBT
CVTRSV9F EQU   CVTFLGBT
CVTRSV9E EQU   CVTFLGBT
CVTRSV9D EQU   CVTFLGBT
CVTRSV9C EQU   CVTFLGBT
CVTVME   EQU   CVTFLGBT
CVTNPE   EQU   CVTFLGBT
CVTNUCLS EQU   CVTXTNT2+4
CVTDSSVA EQU   CVTDSSV+1
CVTRSV89 EQU   CVTDSSV
CVTRSV88 EQU   CVTXTNT1+8
CVTRSV87 EQU   CVTXTNT1+4
CVTFACHN EQU   CVTXTNT1
CVTRV488 EQU   CVTMAP+412
CVTRV487 EQU   CVTMAP+408
CVTRV486 EQU   CVTMAP+404
CVTRV485 EQU   CVTMAP+400
CVTACTAP EQU   CVTMAP+396
CVTAUTH  EQU   CVTMAP+392
CVTATMCA EQU   CVTATMCT+1
CVTATMST EQU   CVTATMCT
CVTRSV61 EQU   CVTMAP+384
CVTVOLT1 EQU   CVTVOLM1+1
CVTVOLI1 EQU   CVTVOLF1
CVTSTOA  EQU   CVTMAP+376
CVTRSV58 EQU   CVTMAP+374
CVTRSV57 EQU   CVTMAP+372
CVTDDCE  EQU   CVTMAP+368
CVTPNWFR EQU   CVTMAP+364
CVTSMF   EQU   CVTMAP+360
CVTSULK  EQU   CVTMAP+358
CVTSLKO  EQU   CVTSYSK
CVTSLKP  EQU   CVTSYSK
CVTSLKQ  EQU   CVTSYSK
CVTSLKR  EQU   CVTSYSK
CVTRSV56 EQU   CVTSYSK
CVTRSV55 EQU   CVTSYSK
CVTRSV54 EQU   CVTSYSK
CVTRSV53 EQU   CVTSYSK
CVTRSV52 EQU   CVTA1F1
CVTRSV51 EQU   CVTA1F1
CVTRSV50 EQU   CVTA1F1
CVTRSV49 EQU   CVTA1F1
CVTRSV48 EQU   CVTA1F1
CVTRSV47 EQU   CVTA1F1
CVTSRSW  EQU   CVTA1F1
CVTPFSW  EQU   CVTA1F1
CVTPCVT  EQU   CVTMAP+352
CVTRSV46 EQU   CVTMAP+344
CVTRSV45 EQU   CVTMAP+340
CVTRSV44 EQU   CVTMAP+338
CVTRSV43 EQU   CVTMAP+336
CVTHJESA EQU   CVTHJES+1
CVTRSV42 EQU   CVTHJES
CVTEXT2A EQU   CVTEXT2+1
CVTRSV41 EQU   CVTEXT2
CVTAPFA  EQU   CVTAPF+1
CVTRSV40 EQU   CVTAPF
CVTRV518 EQU   CVTINTLA
CVTRV517 EQU   CVTERPV
CVTEORM  EQU   CVTMAP+312
CVTMCHPR EQU   CVTMAP+308
CVTTZ    EQU   CVTMAP+304
CVTJEPS  EQU   CVTMAP+300
CVTJESCT EQU   CVTMAP+296
CVTMODE  EQU   CVTMAP+292
CVTPTRV  EQU   CVTMAP+288
CVTREAL  EQU   CVTMAP+284
CVTRSV39 EQU   CVTMAP+280
CVTRSV38 EQU   CVTMAP+276
CVTDMSRA EQU   CVTDMSR+1
CVTRV634 EQU   CVTDMSRF
CVTRV633 EQU   CVTDMSRF
CVTRV632 EQU   CVTDMSRF
CVTRV631 EQU   CVTDMSRF
CVTRV630 EQU   CVTDMSRF
CVTRV629 EQU   CVTDMSRF
CVTUDUMP EQU   CVTDMSRF
CVTSDUMP EQU   CVTDMSRF
CVTQMSGA EQU   CVTQMSG+1
CVTRSV36 EQU   CVTQMSG
CVTAMFF  EQU   CVTMAP+264
CVTPURGA EQU   CVTPURG+1
CVTRSV35 EQU   CVTPURG
CVTCBSP  EQU   CVTMAP+256
CVTATERA EQU   CVTATER+1
CVTSYST  EQU   CVTATER
CVTVOLT2 EQU   CVTTAT
CVTVOLI2 EQU   CVTVOLF2
CVTAQAVB EQU   CVTAQAVT+1
CVTRSV34 EQU   CVTTCMFG
CVTRSV33 EQU   CVTTCMFG
CVTRSV32 EQU   CVTTCMFG
CVTRSV31 EQU   CVTTCMFG
CVTRSV30 EQU   CVTTCMFG
CVTRSV29 EQU   CVTTCMFG
CVTLDEV  EQU   CVTTCMFG
CVTTCRDY EQU   CVTTCMFG
CVTGTFA  EQU   CVTGTF+1
CVTRSV27 EQU   CVTGTFST
CVTRNIO  EQU   CVTGTFST
CVTUSR   EQU   CVTGTFST
CVTRV318 EQU   CVTFORM
CVTRV317 EQU   CVTTMODE
CVTRV316 EQU   CVTSTATE
CVTRV315 EQU   CVTGTFS
CVTGTFAV EQU   CVTGTFS
CVT0SCR1 EQU   CVTMAP+232
CVTRV515 EQU   CVTMAP+228
CVTRMS   EQU   CVTMAP+224
CVTPATCH EQU   CVTMAP+220
CVTTSCE  EQU   CVTMAP+216
CVTLNKSC EQU   CVTMAP+214
CVTQABST EQU   CVTMAP+212
CVTMDLDS EQU   CVTMAP+208
CVTUSER  EQU   CVTMAP+204
CVTABEND EQU   CVTMAP+200
CVTSMCA  EQU   CVTMAP+196
CVTRSV18 EQU   CVTMAP+192
CVTQLPAQ EQU   CVTMAP+188
CVTQCDSR EQU   CVTMAP+184
CVTRSV17 EQU   CVTOPTB
CVTRSV16 EQU   CVTOPTB
CVTFP    EQU   CVTOPTB
CVTAPTHR EQU   CVTOPTB
CVTNLOG  EQU   CVTOPTB
CVTTOD   EQU   CVTOPTB
CVTCTIMS EQU   CVTOPTB
CVTPROT  EQU   CVTOPTB
CVTXPFP  EQU   CVTOPTA
CVTASCII EQU   CVTOPTA
CVTRSV13 EQU   CVTOPTA
CVTRSV12 EQU   CVTOPTA
CVTNIP   EQU   CVTOPTA
CVTDDR   EQU   CVTOPTA
CVTAPR   EQU   CVTOPTA
CVTCCH   EQU   CVTOPTA
CVTSNCTR EQU   CVTMAP+180
CVTQMWR  EQU   CVTMAP+176
CVTQOCR  EQU   CVTMAP+172
CVT1EF00 EQU   CVTMAP+168
CVTMZ00  EQU   CVTMAP+164
CVTSV76Q EQU   CVTSV76C
CVTRSV11 EQU   CVTMAP+156
CVT0PT01 EQU   CVTMAP+152
CVTMSER  EQU   CVTMAP+148
CVTRV516 EQU   CVTIERLC
CVTILCH  EQU   CVTMAP+140
CVT0DS   EQU   CVTMAP+136
CVTFBOSV EQU   CVTMAP+132
CVTNUCB  EQU   CVTMAP+128
CVTIXAVL EQU   CVTMAP+124
CVTSV76M EQU   CVTIOQET
CVTDCBA  EQU   CVTMAP+117
CVTMVS2  EQU   CVTDCB
CVT6DAT  EQU   CVTDCB
CVT4MPS  EQU   CVTDCB
CVTRSV09 EQU   CVTDCB
CVT4MS1  EQU   CVTDCB
CVT2SPS  EQU   CVTDCB
CVT1SSS  EQU   CVTDCB
CVTRSV08 EQU   CVTDCB
CVTSTB   EQU   CVTMAP+112
CVTQTD00 EQU   CVTMAP+108
CVTQTE00 EQU   CVTMAP+104
CVTCUCB  EQU   CVTMAP+100
CVTSJQ   EQU   CVTMAP+96
CVTPBLDL EQU   CVTMAP+92
CVTTPC   EQU   CVTMAP+88
CVTSVDCB EQU   CVTMAP+84
CVTBRET  EQU   CVTMAP+82
CVTEXIT  EQU   CVTMAP+80
CVT0FN00 EQU   CVTMAP+76
CVTDARA  EQU   CVTDAR+1
CVTRSV07 EQU   CVTFLGS1
CVTRSV06 EQU   CVTFLGS1
CVTRSV05 EQU   CVTFLGS1
CVTRSV04 EQU   CVTFLGS1
CVTRSV03 EQU   CVTFLGS1
CVTRSV02 EQU   CVTFLGS1
CVTRSV01 EQU   CVTFLGS1
CVTDMPLK EQU   CVTFLGS1
CVTXITP  EQU   CVTMAP+68
CVTZDTAB EQU   CVTMAP+64
CVTMSLT  EQU   CVTMAP+60
CVTDATE  EQU   CVTMAP+56
CVTBTERM EQU   CVTMAP+52
CVTSYSAD EQU   CVTMAP+48
CVTXTLER EQU   CVTMAP+44
CVTILK2  EQU   CVTMAP+40
CVTILK1  EQU   CVTMAP+36
CVTPRLTV EQU   CVTMAP+32
CVTPCNVT EQU   CVTMAP+28
CVT0VL00 EQU   CVTMAP+24
CVTXAPG  EQU   CVTMAP+20
CVTBUF   EQU   CVTMAP+16
CVTJOB   EQU   CVTMAP+12
CVTLINK  EQU   CVTMAP+8
CVT0EF00 EQU   CVTMAP+4
CVTTCBP  EQU   CVTMAP
CVT      EQU   CVTMAP
@NM00004 EQU   CSD+160
CSDMASK  EQU   CSD+128
CSDUCNT  EQU   CSD+124
CSDTCNT  EQU   CSD+120
CSDGDTOD EQU   CSD+116
CSDGDINT EQU   CSD+112
CSDGDCC  EQU   CSD+108
CSDDDRCT EQU   CSD+106
CSDRV044 EQU   CSD+104
CSDMAFF  EQU   CSD+24
CSDRV038 EQU   CSDFLAGS
CSDRV037 EQU   CSDFLAGS
CSDRV036 EQU   CSDFLAGS
CSDRV035 EQU   CSDFLAGS
CSDRV034 EQU   CSDFLAGS
CSDRV033 EQU   CSDFLAGS
CSDRV032 EQU   CSDFLAGS
CSDMP    EQU   CSDFLAGS
CSDACR   EQU   CSD+22
CSDMF1CP EQU   CSD+20
CSDRV043 EQU   CSD+16
CSDRV030 EQU   CSDSCFL4
CSDRV029 EQU   CSDSCFL4
CSDRV028 EQU   CSDSCFL4
CSDRV027 EQU   CSDSCFL4
CSDRV026 EQU   CSDSCFL4
CSDRV025 EQU   CSDSCFL4
CSDRV024 EQU   CSDSCFL4
CSDRV023 EQU   CSDSCFL4
CSDRV022 EQU   CSDSCFL3
CSDRV021 EQU   CSDSCFL3
CSDRV020 EQU   CSDSCFL3
CSDRV019 EQU   CSDSCFL3
CSDRV018 EQU   CSDSCFL3
CSDRV017 EQU   CSDSCFL3
CSDRV016 EQU   CSDSCFL3
CSDRV015 EQU   CSDSCFL3
CSDRV014 EQU   CSDSCFL2
CSDRV013 EQU   CSDSCFL2
CSDRV012 EQU   CSDSCFL2
CSDRV011 EQU   CSDSCFL2
CSDRV010 EQU   CSDSCFL2
CSDRV009 EQU   CSDSCFL2
CSDRV008 EQU   CSDSCFL2
CSDRV007 EQU   CSDSCFL2
CSDRV006 EQU   CSDSCFL1
CSDRV005 EQU   CSDSCFL1
CSDRV004 EQU   CSDSCFL1
CSDRV003 EQU   CSDSCFL1
CSDRV002 EQU   CSDSCFL1
CSDRV001 EQU   CSDSCFL1
CSDSYSND EQU   CSDSCFL1
CSDRV042 EQU   CSDSCFL1
CSDSAFF  EQU   CSDCPUAL
CSDCHAD  EQU   CSD+6
CSDCPUJS EQU   CSD+4
CSDCSD   EQU   CSD
LCCAR125 EQU   LCCA+964
LCCAR124 EQU   LCCA+960
LCCASGPR EQU   LCCA+896
LCCADRT2 EQU   LCCA+888
LCCADRT1 EQU   LCCA+880
LCCAR103 EQU   LCCA+876
LCCAESS2 EQU   LCCA+872
LCCASPLJ EQU   LCCA+868
LCCASMQJ EQU   LCCA+864
LCCAIRT  EQU   LCCA+736
LCCAASID EQU   LCCA+732
LCCARV89 EQU   LCCA+728
LCCAPGTA EQU   LCCASRBF+2
LCCASAFN EQU   LCCASRBF
LCCAECSA EQU   LCCA+716
LCCAICR0 EQU   LCCA+712
LCCALWTM EQU   LCCA+704
LCCARV78 EQU   LCCA+700
LCCAPINV EQU   LCCA+696
LCCARV88 EQU   LCCA+695
LCCARV87 EQU   LCCALKFG
LCCARV86 EQU   LCCALKFG
LCCARV85 EQU   LCCALKFG
LCCARV84 EQU   LCCALKFG
LCCALKRD EQU   LCCALKFG
LCCALKAQ EQU   LCCALKFG
LCCALKSA EQU   LCCALKFG
LCCALKDP EQU   LCCALKFG
LCCACRST EQU   LCCACREX
LCCACRDP EQU   LCCACREX
LCCACRLM EQU   LCCACREX
LCCACRIN EQU   LCCACREX
LCCACRRT EQU   LCCACREX
LCCACRLE EQU   LCCACREX
LCCACRRM EQU   LCCACREX
LCCACREF EQU   LCCACREX
LCCAVARY EQU   LCCACRFL
LCCARV73 EQU   LCCACRFL
LCCARV72 EQU   LCCACRFL
LCCARV71 EQU   LCCACRFL
LCCARV70 EQU   LCCACRFL
LCCARV69 EQU   LCCACRFL
LCCACLMS EQU   LCCACRFL
LCCACRTM EQU   LCCACRFL
LCCALCR0 EQU   LCCA+688
LCCACRLC EQU   LCCA+684
LCCARCPU EQU   LCCA+680
LCCADCPU EQU   LCCA+676
LCCASRBJ EQU   LCCA+672
LCCADSSR EQU   LCCA+668
LCCADSSC EQU   LCCA+660
LCCADSS3 EQU   LCCA+648
LCCADSS2 EQU   LCCA+636
LCCADSS1 EQU   LCCA+624
LCCAITOD EQU   LCCA+608
LCCADTOD EQU   LCCA+600
LCCASTOD EQU   LCCA+592
LCCARIR5 EQU   LCCASPSA+44
LCCARIR4 EQU   LCCASPSA+40
LCCARIR3 EQU   LCCASPSA+36
LCCARIR2 EQU   LCCASPSA+32
LCCARPR5 EQU   LCCASPSA+28
LCCARPR4 EQU   LCCASPSA+24
LCCARPR3 EQU   LCCASPSA+20
LCCARPR2 EQU   LCCASPSA+16
LCCADSR5 EQU   LCCASPSA+12
LCCADSR4 EQU   LCCASPSA+8
LCCADSR3 EQU   LCCASPSA+4
LCCADSR2 EQU   LCCASPSA
LCCARV68 EQU   LCCA+543
LCCAPSMK EQU   LCCA+542
LCCARV67 EQU   LCCADSF2
LCCARV66 EQU   LCCADSF2
LCCARV65 EQU   LCCADSF2
LCCARV64 EQU   LCCADSF2
LCCADSRW EQU   LCCADSF2
LCCADSPL EQU   LCCADSF2
LCCAGSRB EQU   LCCADSF2
LCCASRBM EQU   LCCADSF2
LCCARV61 EQU   LCCADSF1
LCCARV60 EQU   LCCADSF1
LCCARV59 EQU   LCCADSF1
LCCARV58 EQU   LCCADSF1
LCCATIMR EQU   LCCADSF1
LCCADSS  EQU   LCCADSF1
LCCAVCPU EQU   LCCADSF1
LCCAACR  EQU   LCCADSF1
LCCACPUS EQU   LCCA+536
LCCAASCP EQU   LCCA+532
LCCAESSA EQU   LCCA+528
LCCARV55 EQU   LCCASPN4
LCCARV54 EQU   LCCASPN4
LCCARV53 EQU   LCCASPN4
LCCARV52 EQU   LCCASPN4
LCCARV51 EQU   LCCASPN4
LCCARV50 EQU   LCCASPN4
LCCARV49 EQU   LCCASPN4
LCCARV48 EQU   LCCASPN4
LCCARV47 EQU   LCCASPN3
LCCARV46 EQU   LCCASPN3
LCCARV45 EQU   LCCASPN3
LCCARV44 EQU   LCCASPN3
LCCARV43 EQU   LCCASPN3
LCCARV42 EQU   LCCASPN3
LCCARV41 EQU   LCCASPN3
LCCARV40 EQU   LCCASPN3
LCCARV39 EQU   LCCASPN2
LCCARV38 EQU   LCCASPN2
LCCARV37 EQU   LCCASPN2
LCCARV36 EQU   LCCASPN2
LCCARV35 EQU   LCCASPN2
LCCARV34 EQU   LCCASPN2
LCCARV33 EQU   LCCASPN2
LCCARV32 EQU   LCCASPN2
LCCARV31 EQU   LCCASPN1
LCCARV30 EQU   LCCASPN1
LCCAMFIO EQU   LCCASPN1
LCCARSTR EQU   LCCASPN1
LCCATSPN EQU   LCCASPN1
LCCALOCK EQU   LCCASPN1
LCCASIGP EQU   LCCASPN1
LCCAPTLB EQU   LCCASPN1
LCCARV27 EQU   LCCAIHR4
LCCARV26 EQU   LCCAIHR4
LCCARV25 EQU   LCCAIHR4
LCCARV24 EQU   LCCAIHR4
LCCARV23 EQU   LCCAIHR4
LCCARV22 EQU   LCCAIHR4
LCCARV21 EQU   LCCAIHR4
LCCARV20 EQU   LCCAIHR4
LCCARV19 EQU   LCCAIHR3
LCCARV18 EQU   LCCAIHR3
LCCARV17 EQU   LCCAIHR3
LCCARV16 EQU   LCCAIHR3
LCCARV15 EQU   LCCAIHR3
LCCARV14 EQU   LCCAIHR3
LCCARV13 EQU   LCCAIHR3
LCCARV12 EQU   LCCAIHR3
LCCARV11 EQU   LCCAIHR2
LCCARV10 EQU   LCCAIHR2
LCCARV09 EQU   LCCAIHR2
LCCARV08 EQU   LCCAIHR2
LCCARV07 EQU   LCCAIHR2
LCCARV06 EQU   LCCAIHR2
LCCARV05 EQU   LCCAIHR2
LCCARV04 EQU   LCCAIHR2
LCCARV03 EQU   LCCAIHR1
LCCARV02 EQU   LCCAIHR1
LCCARV01 EQU   LCCAIHR1
LCCAPPIE EQU   LCCAIHR1
LCCAPSG1 EQU   LCCAIHR1
LCCAPDAT EQU   LCCAIHR1
LCCAXRC2 EQU   LCCAIHR1
LCCAXRC1 EQU   LCCAIHR1
LCCAIOPS EQU   LCCA+512
LCCAGPGR EQU   LCCA+448
LCCAR133 EQU   LCCA+444
LCCAR132 EQU   LCCA+440
LCCAR131 EQU   LCCA+436
LCCAR130 EQU   LCCA+432
LCCAR129 EQU   LCCA+428
LCCAR128 EQU   LCCA+424
LCCAR127 EQU   LCCA+420
LCCAR126 EQU   LCCA+416
LCCARSGR EQU   LCCA+352
LCCAXGR3 EQU   LCCA+288
LCCAXGR2 EQU   LCCA+224
LCCAXGR1 EQU   LCCA+160
LCCACR0  EQU   LCCA+156
LCCAMCR1 EQU   LCCA+152
LCCAPVAD EQU   LCCA+148
LCCAPINT EQU   LCCA+144
LCCAPPSW EQU   LCCA+136
LCCAPGR2 EQU   LCCA+72
LCCAPGR1 EQU   LCCA+8
LCCARV77 EQU   LCCA+6
LCCACPUA EQU   LCCA+4
LCCALCCA EQU   LCCA
PVTEND   EQU   PVT+1848
PVTTASID EQU   PVT+1846
PVTXXXXX EQU   PVT+1844
PVTMVCLC EQU   PVT+1840
PVTSPARE EQU   PVT+1838
PVTCHUIC EQU   PVT+1836
PVTCOMFX EQU   PVT+1834
PVTSQAFX EQU   PVT+1832
PVTCNTFX EQU   PVT+1830
PVTDEFFX EQU   PVT+1828
PVTFIXOK EQU   PVT+1826
PVTPEROK EQU   PVT+1824
PVTMAXFX EQU   PVT+1822
PVTPERFX EQU   PVT+1820
PVTRSRB  EQU   PVT+1776
PVTRESV5 EQU   PVT+1773
PVTSRBS  EQU   PVT+1772
PVTSSRB  EQU   PVT+1768
PVTACA   EQU   PVTWSAX+1400
PVTSAVE  EQU   PVTWSAX+1328
PVTWSA18 EQU   PVTWSAX+1256
PVTWSA17 EQU   PVTWSAX+1184
PVTWSA16 EQU   PVTWSAX+1112
PVTWSA15 EQU   PVTWSAX+1040
PVTWSA14 EQU   PVTWSAX+968
PVTWSA13 EQU   PVTWSAX+896
PVTWSA12 EQU   PVTWSAX+824
PVTWSA11 EQU   PVTWSAX+752
PVTWSA10 EQU   PVTWSAX+672
PVTWSA9  EQU   PVTWSAX+592
PVTWSA8  EQU   PVTWSAX+504
PVTWSA7  EQU   PVTWSAX+432
PVTWSA6  EQU   PVTWSAX+360
PVTWSA5  EQU   PVTWSAX+288
PVTWSA4  EQU   PVTWSAX+216
PVTWSA3  EQU   PVTWSAX+144
PVTWSA2  EQU   PVTWSAX+72
PVTWSA1  EQU   PVTWSAX
PVTCIOQL EQU   PVTQS+36
PVTCIOQF EQU   PVTQS+32
PVTGFADL EQU   PVTQS+28
PVTGFADF EQU   PVTQS+24
PVTFPCBL EQU   PVTQS+20
PVTFPCBF EQU   PVTQS+16
PVTSQAQL EQU   PVTQS+14
PVTSQAQF EQU   PVTQS+12
PVTCFQL  EQU   PVTQS+10
PVTCFQF  EQU   PVTQS+8
PVTRSRVL EQU   PVTQS+6
PVTRSRVF EQU   PVTQS+4
PVTAFQL  EQU   PVTQS+2
PVTAFQF  EQU   PVTQS
PVTSPFR  EQU   PVT+302
PVTCFMCT EQU   PVT+300
PVTSPREC EQU   PVT+296
PVTCAREC EQU   PVT+292
PVTCAOUT EQU   PVT+288
PVTCAIN  EQU   PVT+284
PVTNSWPS EQU   PVT+280
PVTNPREC EQU   PVT+276
PVTSPOUT EQU   PVT+272
PVTSPIN  EQU   PVT+268
PVTVAMR  EQU   PVT+264
PVTVAMO  EQU   PVT+260
PVTVAMI  EQU   PVT+256
PVTNPOUT EQU   PVT+252
PVTNPIN  EQU   PVT+248
PVTPRSET EQU   PVT+244
PVTFRSLT EQU   PVT+240
PVTPAGIO EQU   PVT+236
PVTSWPIO EQU   PVT+232
PVTPSWPP EQU   PVT+228
PVTPPREF EQU   PVT+224
PVTPOPBR EQU   PVT+220
PVTPRELF EQU   PVT+216
PVTPRELV EQU   PVT+212
PVTPFREE EQU   PVT+208
PVTPRELS EQU   PVT+204
PVTPOUT  EQU   PVT+200
PVTPFXLD EQU   PVT+196
PVTPITAS EQU   PVT+192
PVTPSRBP EQU   PVT+188
PVTPDSEG EQU   PVT+184
PVTPCSGB EQU   PVT+180
PVTPCSEG EQU   PVT+176
PVTPINV  EQU   PVT+172
PVTPSWPC EQU   PVT+168
PVTPSOUT EQU   PVT+164
PVTPSWIN EQU   PVT+160
PVTPRCV  EQU   PVT+156
PVTPRCFI EQU   PVT+152
PVTPRCF  EQU   PVT+148
PVTPVRC  EQU   PVT+144
PVTPVRIN EQU   PVT+140
PVTPVRLS EQU   PVT+136
PVTPVEQR EQU   PVT+132
PVTPPIOI EQU   PVT+128
PVTPVRPO EQU   PVT+124
PVTPRFR  EQU   PVT+120
PVTPFP2  EQU   PVT+116
PVTPFP   EQU   PVT+112
PVTPFTE  EQU   PVT+108
PVTPCB   EQU   PVT+104
PVTREP2  EQU   PVT+100
PVTPIOCP EQU   PVT+96
PVTPIOP  EQU   PVT+92
PVTPGFAD EQU   PVT+88
PVTPGFA  EQU   PVT+84
PVTPSQA  EQU   PVT+80
PVTPSINT EQU   PVT+76
PVTPSIB  EQU   PVT+72
PVTSRBID EQU   PVT+68
PVTPCIWA EQU   PVT+64
PVTHQSA  EQU   PVT+62
PVTLQSA  EQU   PVT+60
PVTOROOT EQU   PVT+56
PVTPRCA  EQU   PVT+52
PVTREUS  EQU   PVT+48
PVTSQNPC EQU   PVT+47
PVTSQVRC EQU   PVT+46
PVTRSUS  EQU   PVT+44
PVTVROOT EQU   PVT+40
PVTPCBLO EQU   PVT+38
PVTPCBCT EQU   PVT+36
PVTDFRS  EQU   PVT+34
PVTRSQA  EQU   PVT+32
PVTPTLB  EQU   PVT+31
PVTPCBNO EQU   PVT+30
PVTSRBNO EQU   PVT+29
PVTSQDC  EQU   PVT+28
PVTLCSA  EQU   PVT+26
PVTLPRIV EQU   PVT+24
PVTLVR   EQU   PVT+22
PVTFVR   EQU   PVT+20
PVTLPFN  EQU   PVT+18
PVTFPFN  EQU   PVT+16
PVTPFTP  EQU   PVT+12
PVTSSPIN EQU   PVT+11
PVTPCBS  EQU   PVT+10
PVTPOOL  EQU   PVT+8
PVTAFCOK EQU   PVT+6
PVTAFCLO EQU   PVT+4
PVTAFC   EQU   PVT+2
@NM00003 EQU   PVTFLAG2
PVTRSMGM EQU   PVTFLAG2
PVTDUMP  EQU   PVTFLAG1
PVTSIT   EQU   PVTFLAG1
PVTLSI   EQU   PVTFLAG1
PVTAPREF EQU   PVTFLAG1
PVTPCBLT EQU   PVTFLAG1
PVTSRBIU EQU   PVTFLAG1
PVTBGMS  EQU   PVTFLAG1
PVTPMSG  EQU   PVTFLAG1
RMEPSND  EQU   RMEP+32
RMEPTME  EQU   RMEPSCH+8
RMEPBCK  EQU   RMEPSCH+4
RMEPFWD  EQU   RMEPSCH
RMEPEND  EQU   RMEP+16
RMEPPRV  EQU   RMEPEPB+12
RMEPACN  EQU   RMEPFLG+3
RMEPTMD  EQU   RMEPFLG+3
RMEPRCR  EQU   RMEPFLG+3
RMEPVFL  EQU   RMEPFLG
RMEPERA  EQU   RMEPEPB+4
RMEPEPA  EQU   RMEPEPB
OUXBEND  EQU   OUXB+144
OUXBTSW  EQU   OUXB+140
OUXBFIXC EQU   OUXB+138
OUXBNVC  EQU   OUXB+136
OUXBUIC  EQU   OUXB+134
OUXBVSC  EQU   OUXB+132
OUXBILS  EQU   OUXB+128
OUXBRSV1 EQU   OUXB+126
OUXBPRS  EQU   OUXB+120
OUXBSTD  EQU   OUXB+116
OUXBITD  EQU   OUXB+112
OUXBMSS  EQU   OUXB+104
OUXBTRR  EQU   OUXB+88
OUXBJBR  EQU   OUXB+84
OUXBTRT  EQU   OUXB+80
OUXBTRS  EQU   OUXB+76
OUXBJBT  EQU   OUXB+72
OUXBJBS  EQU   OUXB+68
OUXBTRC  EQU   OUXB+64
OUXBIOSM EQU   OUXB+56
OUXBSTC  EQU   OUXB+54
OUXBIOS  EQU   OUXB+52
OUXBSTCT EQU   OUXB+48
OUXBCAPR EQU   OUXB+44
OUXBCAPI EQU   OUXB+40
OUXBVAMR EQU   OUXB+36
OUXBVAMO EQU   OUXB+32
OUXBVAMI EQU   OUXB+28
OUXBPREC EQU   OUXB+24
OUXBPOUT EQU   OUXB+20
OUXBPIN  EQU   OUXB+16
OUXBRSW  EQU   OUXB+12
OUXBMET  EQU   OUXB+8
OUXBPET  EQU   OUXB+4
OUXBNAME EQU   OUXB
OUCBEND  EQU   OUCB+136
OUCBNTSP EQU   OUCB+134
OUCBNDS  EQU   OUCB+132
OUCBTIO  EQU   OUCB+128
OUCBPST  EQU   OUCB+120
OUCBPS2  EQU   OUCBPSS+4
OUCBPS1  EQU   OUCBPSS
OUCBIOSM EQU   OUCB+108
OUCBTMP  EQU   OUCB+104
OUCBR03  EQU   OUCB+102
OUCBIOR  EQU   OUCB+100
OUCBIRV  EQU   OUCB+96
OUCBWMR  EQU   OUCB+92
OUCBCMRV EQU   OUCB+88
OUCBCF2  EQU   OUCBCFL
OUCBRSM  EQU   OUCBCFL
OUCBRDY  EQU   OUCBCFL
OUCBACN  EQU   OUCBCSW
OUCBACT  EQU   OUCB+80
OUCBWSS  EQU   OUCB+78
OUCBPSO  EQU   OUCB+76
OUCBTMO  EQU   OUCB+72
OUCBTMS  EQU   OUCB+68
OUCBMSO  EQU   OUCB+64
OUCBIOC  EQU   OUCB+60
OUCBCPU  EQU   OUCB+56
OUCBWMS  EQU   OUCB+52
OUCBTMW  EQU   OUCB+48
OUCBIMCB EQU   OUCB+44
OUCBSWC  EQU   OUCB+38
OUCBSRC  EQU   OUCB+37
OUCBDMN  EQU   OUCB+36
OUCBDMO  EQU   OUCB+34
OUCBWMG  EQU   OUCB+32
OUCBPGP  EQU   OUCB+31
OUCBR40  EQU   OUCB+30
OUCBR30  EQU   OUCB+29
OUCBSPG  EQU   OUCB+28
OUCBRDP  EQU   OUCB+27
OUCBRPG  EQU   OUCB+25
OUCBNPG  EQU   OUCB+24
OUCBUF7  EQU   OUCBUFL
OUCBUF6  EQU   OUCBUFL
OUCBUF5  EQU   OUCBUFL
OUCBTSWC EQU   OUCBUFL
OUCBTSWP EQU   OUCBUFL
OUCBRSWP EQU   OUCBUFL
OUCBJSAS EQU   OUCBUFL
OUCBJSFS EQU   OUCBUFL
OUCBNQC  EQU   OUCB+22
OUCBMWT  EQU   OUCBEFL
OUCBQSC  EQU   OUCBEFL
OUCBQSS  EQU   OUCBEFL
OUCBCIM  EQU   OUCBEFL
OUCBOWT  EQU   OUCBEFL
OUCBTRM  EQU   OUCBEFL
OUCBLWT  EQU   OUCBEFL
OUCBINC  EQU   OUCBTFL
OUCBINP  EQU   OUCBTFL
OUCBMAR  EQU   OUCBTFL
OUCBPCH  EQU   OUCBTFL
OUCBRTR  EQU   OUCBTFL
OUCBNTR  EQU   OUCBTFL
OUCBSTR  EQU   OUCBTFL
OUCBATR  EQU   OUCBTFL
OUCBASW  EQU   OUCBAFL
OUCBNWT  EQU   OUCBAFL
OUCBR02  EQU   OUCBAFL
OUCBJSR  EQU   OUCBAFL
OUCBAF0  EQU   OUCBAFL
OUCBFXS  EQU   OUCBYFL
OUCBDTA  EQU   OUCBYFL
OUCBAXS  EQU   OUCBYFL
OUCBPSTR EQU   OUCBYFL
OUCBMNT  EQU   OUCBYFL
OUCBLOG  EQU   OUCBYFL
OUCBSTT  EQU   OUCBYFL
OUCBPSTE EQU   OUCBYFL
OUCBSCN  EQU   OUCBSFL
OUCBNSWI EQU   OUCBSFL
OUCBINV  EQU   OUCBSFL
OUCBCTI  EQU   OUCBSFL
OUCBQF7  EQU   OUCBQFL
OUCBQF6  EQU   OUCBQFL
OUCBOFF  EQU   OUCBQFL
OUCBQF3  EQU   OUCBQFL
OUCBTMA  EQU   OUCB+12
OUCBBCK  EQU   OUCB+8
ASCBEND  EQU   ASCB+208
ASCBSWTL EQU   ASCB+196
ASCBRS14 EQU   ASCB+195
ASCBSMCT EQU   ASCB+194
ASCBRS12 EQU   ASCB+192
ASCBPCTT EQU   ASCB+188
ASCBVGTT EQU   ASCB+184
ASCBRV43 EQU   ASCBSRQ4
ASCBRV42 EQU   ASCBSRQ4
ASCBRV41 EQU   ASCBSRQ4
ASCBRV40 EQU   ASCBSRQ4
ASCBRV39 EQU   ASCBSRQ4
ASCBRV38 EQU   ASCBSRQ4
ASCBRV37 EQU   ASCBSRQ4
ASCBRV36 EQU   ASCBSRQ4
ASCBRV35 EQU   ASCBSRQ3
ASCBRV34 EQU   ASCBSRQ3
ASCBRV33 EQU   ASCBSRQ3
ASCBRV32 EQU   ASCBSRQ3
ASCBRV31 EQU   ASCBSRQ3
ASCBRV30 EQU   ASCBSRQ3
ASCBRV29 EQU   ASCBSRQ3
ASCBRV28 EQU   ASCBSRQ3
ASCBRV27 EQU   ASCBSRQ2
ASCBRV26 EQU   ASCBSRQ2
ASCBRV25 EQU   ASCBSRQ2
ASCBRV24 EQU   ASCBSRQ2
ASCBRV23 EQU   ASCBSRQ2
ASCBRV22 EQU   ASCBSRQ2
ASCBRV21 EQU   ASCBSRQ2
ASCBRV20 EQU   ASCBSRQ2
ASCBRV19 EQU   ASCBSRQ1
ASCBRV18 EQU   ASCBSRQ1
ASCBRV17 EQU   ASCBSRQ1
ASCBRV16 EQU   ASCBSRQ1
ASCBRV15 EQU   ASCBSRQ1
ASCBRV14 EQU   ASCBSRQ1
ASCBRV13 EQU   ASCBSRQ1
ASCBSTA  EQU   ASCBSRQ1
ASCBJBNS EQU   ASCB+176
ASCBJBNI EQU   ASCB+172
ASCBMCC  EQU   ASCB+168
ASCBRTWA EQU   ASCB+164
ASCBIQEA EQU   ASCB+160
ASCBXMPQ EQU   ASCB+156
ASCBRS01 EQU   ASCB+154
ASCBFMCT EQU   ASCB+152
ASCBOUCB EQU   ASCB+144
ASCBMECB EQU   ASCB+140
ASCBQECB EQU   ASCB+136
ASCBLSQH EQU   ASCBLKGP+4
ASCBLOCK EQU   ASCBLKGP
ASCBNVSC EQU   ASCB+122
ASCBVSC  EQU   ASCB+120
ASCBSRBS EQU   ASCB+118
ASCBSSRB EQU   ASCB+116
ASCBRV06 EQU   ASCBFLG2
ASCBRV05 EQU   ASCBFLG2
ASCBRV04 EQU   ASCBFLG2
ASCBSNQS EQU   ASCBFLG2
ASCBS2S  EQU   ASCBFLG2
ASCBCEXT EQU   ASCBFLG2
ASCBPXMT EQU   ASCBFLG2
ASCBXMPT EQU   ASCBFLG2
ASCBRF07 EQU   ASCBDSP1
ASCBRF06 EQU   ASCBDSP1
ASCBRF05 EQU   ASCBDSP1
ASCBRF04 EQU   ASCBDSP1
ASCBRF03 EQU   ASCBDSP1
ASCBRF02 EQU   ASCBDSP1
ASCBFAIL EQU   ASCBDSP1
ASCBNOQ  EQU   ASCBDSP1
ASCBASXB EQU   ASCB+108
ASCBTMCH EQU   ASCB+104
ASCBNSWP EQU   ASCBFLG1
ASCBTYP1 EQU   ASCBFLG1
ASCBSTND EQU   ASCBFLG1
ASCBABNT EQU   ASCBFLG1
ASCBTERM EQU   ASCBFLG1
ASCBS3S  EQU   ASCBFLG1
ASCBCMSH EQU   ASCBFLG1
ASCBTOFF EQU   ASCBFLG1
ASCBRF01 EQU   ASCBRCTF
ASCBTMLW EQU   ASCBRCTF
ASCBOUT  EQU   ASCBRCTF
ASCBWAIT EQU   ASCBRCTF
ASCBRV08 EQU   ASCBRCTF
ASCBFQU  EQU   ASCBRCTF
ASCBFRS  EQU   ASCBRCTF
ASCBTMNO EQU   ASCBRCTF
ASCBAFFN EQU   ASCBFW1
ASCBDUMP EQU   ASCB+96
ASCBRV44 EQU   ASCB+92
ASCBUBET EQU   ASCB+88
ASCBECB  EQU   ASCB+84
ASCBJSTL EQU   ASCB+80
ASCBEWST EQU   ASCB+72
ASCBTSB  EQU   ASCB+60
ASCBCSCB EQU   ASCB+56
ASCBRSMA EQU   ASCBRSM+1
ASCBRV54 EQU   ASCBRSMF
ASCBRV53 EQU   ASCBRSMF
ASCBRV52 EQU   ASCBRSMF
ASCBRV51 EQU   ASCBRSMF
ASCBVEQR EQU   ASCBRSMF
ASCBN2LP EQU   ASCBRSMF
ASCB1LPU EQU   ASCBRSMF
ASCB2LPU EQU   ASCBRSMF
ASCBLDA  EQU   ASCB+48
ASCBSTOR EQU   ASCB+44
ASCBRV07 EQU   ASCB+42
ASCBIOSM EQU   ASCB+40
ASCBASID EQU   ASCB+36
ASCBCPUS EQU   ASCB+32
ASCBSPL  EQU   ASCB+28
ASCBIOSP EQU   ASCB+24
ASCBSYNC EQU   ASCBSUPC+4
ASCBSVRB EQU   ASCBSUPC
ASCBCMSF EQU   ASCB+12
ASCBBWDP EQU   ASCB+8
ASCBFWDP EQU   ASCB+4
ASCBASCB EQU   ASCB
ASCBEGIN EQU   ASCB
RRPAEND  EQU   RRPA+24
RRPARTN  EQU   RRPAINS
RRPARTC  EQU   RRPA+11
RRPAKEY  EQU   RRPA+10
RRPARCI  EQU   RRPAFLG+1
RRPARFI  EQU   RRPAFLG+1
RRPARTI  EQU   RRPAFLG+1
RRPACTL  EQU   RRPAFLG+1
RRPAF11  EQU   RRPAFLG+1
RRPAIPS  EQU   RRPAFLG+1
RRPAWAR  EQU   RRPAFLG+1
RRPAF07  EQU   RRPAFLG
RRPAOPT  EQU   RRPAFLG
RRPAF05  EQU   RRPAFLG
RRPAF04  EQU   RRPAFLG
RRPADSP  EQU   RRPAFLG
RRPASVC  EQU   RRPAFLG
RRPAENB  EQU   RRPAFLG
RRPADSB  EQU   RRPAFLG
RRPAVLU  EQU   RRPAINP
RRPACOD  EQU   RRPAINC+3
@NM00002 EQU   RRPAFLG0
RRPANSWI EQU   RRPAFLG0
RRPAASD  EQU   RRPAINC
EPSTEND  EQU   EPST+80
EPSTCSI  EQU   RMEPBCSI
EPSTCSO  EQU   RMEPBCSO
EPSTCL3  EQU   RMEPBCL3
EPSTIL3  EQU   RMEPBIL3
EPDTEND  EQU   EPDT+96
RMEPBRPS EQU   EPDT+80
RMEPBHIT EQU   EPDT+64
RMEPBUXB EQU   EPDT+48
RMEPBIL4 EQU   EPDT+32
RMEPBDEL EQU   EPDT+16
RMEPBIPS EQU   EPDT
EPATEND  EQU   EPAT+400
RMEPBPR1 EQU   EPAT+368
RMEPBEQ1 EQU   EPAT+336
RMEPBAP1 EQU   EPAT+304
RMEPBCL1 EQU   EPAT+272
RMEPBWM2 EQU   EPAT+240
RMEPBIL1 EQU   EPAT+208
RMEPBASM EQU   EPAT+176
RMEPBMS2 EQU   EPAT+160
RMEPBPR5 EQU   EPAT+144
RMEPBMS6 EQU   EPAT+112
RMEPBSQA EQU   EPAT+96
RMEPBRM2 EQU   EPAT+64
RMEPBRM1 EQU   EPAT+32
RMEPBCAP EQU   EPAT
RMSBEND  EQU   RMSB+120
RMSBRA9  EQU   RMSB+116
RMSBIL0  EQU   RMSB+112
RMSBCL0  EQU   RMSB+108
RMSBRA6  EQU   RMSB+104
RMSBNOP  EQU   RMSB+100
RMSBSET  EQU   RMSB+96
RMSBWR6  EQU   RMSB+92
RMSBWR4  EQU   RMSB+88
RMSBTRC  EQU   RMSB+84
RMSBWMY  EQU   RMSB+80
RMSBWMR  EQU   RMSB+76
RMSBWMQ  EQU   RMSB+72
RMSBWMO  EQU   RMSB+68
RMSBWMN  EQU   RMSB+64
RMSBWMK  EQU   RMSB+60
RMSBWM4  EQU   RMSB+56
RMSBWM1  EQU   RMSB+52
RMSBWM5  EQU   RMSB+48
RMSBCRY  EQU   RMSB+44
RMSBCRN  EQU   RMSB+40
RMSBCRL  EQU   RMSB+36
RMSBI10  EQU   RMSB+32
RMSBI09  EQU   RMSB+28
RMSBR24  EQU   RMSB+24
RMSBI07  EQU   RMSB+20
RMSBI06  EQU   RMSB+16
RMSBI05  EQU   RMSB+12
RMSBI04  EQU   RMSB+8
RMSBI03  EQU   RMSB+4
RMEXEND  EQU   RMEX+64
RMEXSRE  EQU   RMEX+60
RMEXXPE  EQU   RMEX+56
RMEXRR2  EQU   RMEX+52
RMEXRR1  EQU   RMEX+48
RMEXI48  EQU   RMEX+44
RMEXCET  EQU   RMEX+40
RMEXCXX  EQU   RMEX+36
RMEXI01  EQU   RMEX+32
RMEXCTL  EQU   RMEPBCTL
RMEXEVT  EQU   RMEPBEVT
RMCAEND  EQU   RMCA+168
RMCAR90  EQU   RMCA+164
RMCAUSSC EQU   RMCASRC+36
RMCAEXSC EQU   RMCASRC+32
RMCANQSC EQU   RMCASRC+28
RMCARQSC EQU   RMCASRC+24
RMCADWSC EQU   RMCASRC+20
RMCARSSC EQU   RMCASRC+16
RMCAXSSC EQU   RMCASRC+12
RMCALWSC EQU   RMCASRC+8
RMCATISC EQU   RMCASRC+4
RMCATOSC EQU   RMCASRC
RMCACPW1 EQU   RMCA+120
RMCACIUS EQU   RMCA+118
RMCAR14  EQU   RMCA+116
RMCAR13  EQU   RMCA+112
RMCAWKA  EQU   RMCA+80
RMCAMAS  EQU   RMCA+76
RMCAR20  EQU   RMCA+74
RMCABCPG EQU   RMCA+73
RMCALGPG EQU   RMCA+72
RMCAISV  EQU   RMCA+70
RMCAR11  EQU   RMCA+68
RMCAINV  EQU   RMCA+64
RMCAR10  EQU   RMCA+60
RMCARSV9 EQU   RMCA+56
RMCACHU  EQU   RMCA+52
RMCACHP  EQU   RMCA+48
RMCARSV8 EQU   RMCA+44
RMCARSV7 EQU   RMCA+40
RMCARSVF EQU   RMCAFLGS
RMCASAAF EQU   RMCAFLGS
RMCARSV5 EQU   RMCA+32
RMCARSV4 EQU   RMCA+28
RMCARSV3 EQU   RMCA+24
RMCATOI  EQU   RMCA+20
RMCATRS  EQU   RMCA+16
RMCATQS  EQU   RMCA+12
RMCARSV2 EQU   RMCA+10
RMCARSV1 EQU   RMCA+8
RMCAINUS EQU   RMCA+6
RMCAR04  EQU   RMCA+4
RMCANAME EQU   RMCA
RMPTEND  EQU   RMPT+72
RMPTOPE  EQU   RMPT+66
RMPTOPI  EQU   RMPT+63
RMPTOPC  EQU   RMPT+60
RMPTIOET EQU   RMPT+56
RMPTCPET EQU   RMPT+52
RMPTWMET EQU   RMPT+48
RMPTSAET EQU   RMPT+44
RMPTXCHT EQU   RMPT+40
RMPTRSV3 EQU   RMPT+38
RMPTRSV2 EQU   RMPT+36
RMPTRSV1 EQU   RMPT+32
RMPTTOL  EQU   RMPT+28
RMPTTOM  EQU   RMPT+24
RMPTTCS  EQU   RMPT+20
RMPTIMN  EQU   RMPT+16
RMPTIOC  EQU   RMPT+8
RMPTCPU  EQU   RMPT+4
RMPTNAME EQU   RMPT
RCTEND   EQU   RCT+88
RCVRSVF3 EQU   RCT+84
RCVRSVF2 EQU   RCT+80
RCVTAPAD EQU   RCT+76
RCVRSVF1 EQU   RCT+74
RCVTOTDF EQU   RCT+72
RCVBPTTM EQU   RCT+68
RCVBPTCT EQU   RCT+64
RCVASMQ  EQU   RCT+60
RCVAVQP  EQU   RCT+56
RCVCPUC  EQU   RCT+52
RCVUICC  EQU   RCT+48
RCVPTR   EQU   RCT+46
RCVASMQA EQU   RCT+44
RCVAVQC  EQU   RCT+42
RCVCPUA  EQU   RCT+40
RCVUICA  EQU   RCT+38
RCVCTMC  EQU   RCT+36
RCCRSVF3 EQU   RCT+32
RCCRSVF2 EQU   RCT+28
RCCRSVF1 EQU   RCT+26
RCCLCHRR EQU   RCT+24
RCCLCHUT EQU   RCT+22
RCCTOTUT EQU   RCT+20
RCCASMTH EQU   RCT+18
RCCASMTL EQU   RCT+16
RCCPTRTH EQU   RCT+14
RCCPTRTL EQU   RCT+12
RCCCPUTH EQU   RCT+10
RCCCPUTL EQU   RCT+8
RCCUICTH EQU   RCT+6
RCCUICTL EQU   RCT+4
RCTRCT   EQU   RCT
MCTEND   EQU   MCT+96
MCVRSVF3 EQU   MCT+92
MCVRSVF2 EQU   MCT+88
MCVRSVF1 EQU   MCT+84
MCCINTMX EQU   MCT+80
MCCPR1IN EQU   MCT+76
MCCUICIN EQU   MCT+72
MCCUICBD EQU   MCT+68
MCTRSVB1 EQU   MCT+67
MCTXRSVD EQU   MCT+66
MCTFX2   EQU   MCTOFLGS
MCTFX1   EQU   MCTOFLGS
MCTSMS2  EQU   MCTOFLGS
MCTSMS1  EQU   MCTOFLGS
MCTAMS2  EQU   MCTOFLGS
@NM00001 EQU   MCTOFLGS
MCTASM2  EQU   MCTOFLGS
MCTASM1  EQU   MCTOFLGS
MCTSF04  EQU   MCTSFLGS
MCTFAVQ  EQU   MCTSFLGS
MCTAVQ1  EQU   MCTSFLGS
MCTSQA2  EQU   MCTSFLGS
MCTSQA1  EQU   MCTSFLGS
MCVAVQC  EQU   MCT+60
MCVFRCNT EQU   MCT+58
MCVSTCRI EQU   MCT+56
MCCEND   EQU   MCT+56
MCCASMT2 EQU   MCT+54
MCCASMT1 EQU   MCT+52
MCCRSVH1 EQU   MCT+50
MCCPLUS  EQU   MCT+48
MCCMS403 EQU   MCT+44
MCCMS402 EQU   MCT+40
MCCMS401 EQU   MCT+36
MCCMS400 EQU   MCT+32
MCCMS203 EQU   MCT+28
MCCMS202 EQU   MCT+24
MCCMS201 EQU   MCT+20
MCCMS200 EQU   MCT+16
MCCMS102 EQU   MCT+12
MCCMS101 EQU   MCT+8
MCCMS100 EQU   MCT+4
MCTMCT   EQU   MCT
ICTEND   EQU   ICT+88
ICTRSVB3 EQU   ICT+87
ICTRSVB2 EQU   ICT+86
ICTRSVB1 EQU   ICT+85
ICT003   EQU   ICTFLAGS
ICTIOOT  EQU   ICTFLAGS
ICTIOL   EQU   ICTFLAGS
ICTDRSV4 EQU   ICTFLAGS
ICVIRSV3 EQU   ICT+80
ICVULCBT EQU   ICT+76
ICVOLCBT EQU   ICT+72
ICVLCBPT EQU   ICT+68
ICVLUTBT EQU   ICT+64
ICCEND   EQU   ICT+64
ICCRSV01 EQU   ICT+62
ICCEDSUT EQU   ICT+60
ICCSRSV2 EQU   ICT+58
ICCSIGUP EQU   ICT+56
ICCINDAT EQU   ICT+52
ICCINLOT EQU   ICT+48
ICCINHIT EQU   ICT+44
ICCDAUTH EQU   ICT+42
ICCLOUTH EQU   ICT+40
ICCHIUTH EQU   ICT+38
ICCDASF2 EQU   ICT+36
ICCDASF1 EQU   ICT+34
ICCMINRV EQU   ICT+32
ICCMAXRV EQU   ICT+30
ICCRVSCF EQU   ICT+28
ICCMNIOR EQU   ICT+26
ICCLCHN  EQU   ICT+24
ICCLCLST EQU   ICT+20
ICCMNSWP EQU   ICT+16
ICCMNUIN EQU   ICT+12
ICCMXICT EQU   ICT+8
ICCMRSV1 EQU   ICT+4
ICTICT   EQU   ICT
CCVEND   EQU   CCT+128
CCTFLG2  EQU   CCT+125
CCVCPUCT EQU   CCT+122
CCVLGFMC EQU   CCT+118
CCVR07   EQU   CCT+114
CCVR06   EQU   CCT+112
CCVR05   EQU   CCT+108
CCVPGCPF EQU   CCT+96
CCVR04   EQU   CCT+84
CCVR03   EQU   CCT+76
CCCEND   EQU   CCT+76
CCCRSVH1 EQU   CCT+74
CCCR02   EQU   CCT+68
CCCSIGDP EQU   CCT+64
CCCR01   EQU   CCT+44
CCCAPBDP EQU   CCT+36
CCCRSVF1 EQU   CCT+28
CCCMNUIN EQU   CCT+20
CCTCCT   EQU   CCT
RMCTEND  EQU   RMCT+192
RMCTR50  EQU   RMCT+190
RMCTDMNC EQU   RMCT+188
RMCTDMDE EQU   RMCT+184
RMCTDMDT EQU   RMCT+180
RMCTSRBT EQU   RMCT+176
RMCTOUXB EQU   RMCT+172
RMCTOUCB EQU   RMCT+168
RMCTTOCI EQU   RMCT+160
RMCTCPID EQU   RMCT+156
RMCTTELM EQU   RMCT+152
RMCTF09  EQU   RMCTFLGS+1
RMCTMFS  EQU   RMCTFLGS+1
RMCTF07  EQU   RMCTFLGS+1
RMCTF06  EQU   RMCTFLGS
RMCTRSV2 EQU   RMCTFLGS
RMCTSTW  EQU   RMCTFLGS
RMCTRSV1 EQU   RMCTFLGS
RMCTINIT EQU   RMCTFLGS
RMCTF03  EQU   RMCTFLGS
RMCTCPS1 EQU   RMCTFLGS
RMCTMFA  EQU   RMCTFLGS
RMCTRQSV EQU   RMCT+144
RMCTALR  EQU   RMCT+140
RMCTALA  EQU   RMCT+136
RMCTTOC  EQU   RMCT+128
RMCTTBS  EQU   RMCT+120
RMCTR10  EQU   RMCT+116
RMCTOTQE EQU   RMCT+108
RMCTWTQE EQU   RMCT+104
RMCTAQHD EQU   RMCT+100
RMCTAQCT EQU   RMCT+96
RMCTTMQE EQU   RMCT+92
RMCTWAMT EQU   RMCT+88
RMCTWAST EQU   RMCT+84
RMCTEPPR EQU   RMCT+80
RMCTFLTM EQU   RMCT+76
RMCTEPET EQU   RMCT+72
RMCTITT  EQU   RMCT+68
RMCTADJC EQU   RMCT+64
RMCTEPBG EQU   RMCT+60
RMCTEPAT EQU   RMCT+56
RMCTEPDT EQU   RMCT+52
RMCTEPPA EQU   RMCT+48
RMCTRMSB EQU   RMCT+44
RMCTRMEX EQU   RMCT+40
RMCTRMPD EQU   RMCT+36
RMCTRMSA EQU   RMCT+32
RMCTRLCT EQU   RMCT+28
RMCTWMST EQU   RMCT+24
RMCTRMCA EQU   RMCT+20
RMCTRMPT EQU   RMCT+16
RMCTMCT  EQU   RMCT+12
RMCTICT  EQU   RMCT+8
RMCTCCT  EQU   RMCT+4
RMCTNAME EQU   RMCT
@NM00028 EQU   PSA+3668
PSASTAK  EQU   PSA+3072
@NM00027 EQU   PSA+1048
PSAUSEND EQU   PSA+1048
PSARV062 EQU   PSA+1044
PSACDAL  EQU   PSA+1040
PSAWTCOD EQU   PSA+1036
PSAATCVT EQU   PSA+1032
PSAPCPSW EQU   PSA+1024
PSAPIR2  EQU   PSA+1020
PSARV059 EQU   PSA+1018
PSASVC13 EQU   PSA+1016
PSALSFCC EQU   PSA+1012
PSASFACC EQU   PSA+1008
PSASTOP  EQU   PSA+992
PSASTART EQU   PSA+976
PSARSPSW EQU   PSA+968
PSASRPSW EQU   PSA+960
PSARV045 EQU   PSA+892
PSARV044 EQU   PSA+888
PSARV043 EQU   PSA+884
PSARV042 EQU   PSA+880
PSARV041 EQU   PSA+876
PSARV040 EQU   PSA+872
PSARV025 EQU   PSA+868
PSADSSED EQU   PSA+868
PSADSSPR EQU   PSA+864
PSADSSFW EQU   PSA+860
PSADSS14 EQU   PSA+856
PSADSSPP EQU   PSA+848
PSADSSRP EQU   PSA+840
PSADSS05 EQU   PSADSSF4
PSADSS10 EQU   PSADSSF4
PSADSSVE EQU   PSADSSF4
PSADSSDE EQU   PSADSSF4
PSADSSC0 EQU   PSADSSF4
PSADSSIE EQU   PSADSSF4
PSADSS12 EQU   PSADSSF4
PSADSSRC EQU   PSADSSF4
PSARV057 EQU   PSADSSF3
PSARV056 EQU   PSADSSF3
PSARV055 EQU   PSADSSF3
PSADSSMC EQU   PSADSSF3
PSADSSRW EQU   PSADSSF3
PSADSSNM EQU   PSADSSF3
PSADSSES EQU   PSADSSF3
PSADSSGP EQU   PSADSSF3
PSADSSF2 EQU   PSADSSFL+1
PSADSSPI EQU   PSADSSF1
PSADSSOI EQU   PSADSSF1
PSADSSSP EQU   PSADSSF1
PSADSSTP EQU   PSADSSF1
PSADSSDW EQU   PSADSSF1
PSADSSDD EQU   PSADSSF1
PSADSSDM EQU   PSADSSF1
PSADSSMV EQU   PSADSSF1
PSADSSTS EQU   PSA+816
PSADSSWK EQU   PSA+812
PSADSSR3 EQU   PSA+808
PSADSSR2 EQU   PSA+804
PSADSSRS EQU   PSA+800
PSASTOR  EQU   PSA+796
PSACPUSA EQU   PSA+794
PSAVSTAP EQU   PSA+792
PSAWKVAP EQU   PSA+788
PSAWKRAP EQU   PSA+784
PSAMCHIC EQU   PSA+783
PSARV061 EQU   PSA+782
PSASYMSK EQU   PSA+781
PSAMCHFL EQU   PSA+780
PSACR0   EQU   PSA+776
PSAPSWSV EQU   PSA+768
PSALITA  EQU   PSA+764
PSACLHS  EQU   PSAHLHI
PSALKR15 EQU   PSALKSA+60
PSALKR14 EQU   PSALKSA+56
PSALKR13 EQU   PSALKSA+52
PSALKR12 EQU   PSALKSA+48
PSALKR11 EQU   PSALKSA+44
PSALKR10 EQU   PSALKSA+40
PSALKR9  EQU   PSALKSA+36
PSALKR8  EQU   PSALKSA+32
PSALKR7  EQU   PSALKSA+28
PSALKR6  EQU   PSALKSA+24
PSALKR5  EQU   PSALKSA+20
PSALKR4  EQU   PSALKSA+16
PSALKR3  EQU   PSALKSA+12
PSALKR2  EQU   PSALKSA+8
PSALKR1  EQU   PSALKSA+4
PSALKR0  EQU   PSALKSA
PSARV023 EQU   PSACLHT+52
PSALOCAL EQU   PSACLHT+48
PSACMSL  EQU   PSACLHT+44
PSAOPTL  EQU   PSACLHT+40
PSATPACL EQU   PSACLHT+36
PSATPDNL EQU   PSACLHT+32
PSATPNCL EQU   PSACLHT+28
PSAIOSLL EQU   PSACLHT+24
PSAIOSUL EQU   PSACLHT+20
PSAIOSCL EQU   PSACLHT+16
PSAIOSSL EQU   PSACLHT+12
PSASALCL EQU   PSACLHT+8
PSAASML  EQU   PSACLHT+4
PSADISPL EQU   PSACLHT
PSASRSA  EQU   PSA+636
PSARV050 EQU   PSA+634
PSADSSGO EQU   PSA+633
PSARECUR EQU   PSA+632
PSAHLHIS EQU   PSA+628
PSAIPCSA EQU   PSA+624
@NM00026 EQU   PSA+621
PSAIPCDM EQU   PSA+620
PSAIPCD  EQU   PSA+616
@NM00025 EQU   PSA+613
PSAIPCRM EQU   PSA+612
PSAIPCR  EQU   PSA+608
PSAMCHEX EQU   PSA+600
PSAMPSW  EQU   PSA+592
PSAEXPS2 EQU   PSA+584
PSAEXPS1 EQU   PSA+576
PSAPIREG EQU   PSA+572
PSARSREG EQU   PSA+568
PSAGPREG EQU   PSA+556
PSARV022 EQU   PSASUP4
PSARV021 EQU   PSASUP4
PSARV020 EQU   PSASUP4
PSARV019 EQU   PSASUP4
PSARV018 EQU   PSASUP4
PSARV017 EQU   PSASUP4
PSARV016 EQU   PSASUP4
PSARV015 EQU   PSASUP4
PSARV014 EQU   PSASUP3
PSAULCMS EQU   PSASUP3
PSARV012 EQU   PSASUP3
PSAESTA  EQU   PSASUP3
PSASPR   EQU   PSASUP3
PSAPSREG EQU   PSASUP3
PSAPI2   EQU   PSASUP3
PSAIOSUP EQU   PSASUP3
PSALCR   EQU   PSASUP2
PSARTM   EQU   PSASUP2
PSAACR   EQU   PSASUP2
PSAIPCE2 EQU   PSASUP2
PSAIPCES EQU   PSASUP2
PSAIPCEC EQU   PSASUP2
PSAGTF   EQU   PSASUP2
PSAIPCRI EQU   PSASUP2
PSATYPE6 EQU   PSASUP1
PSATCTL  EQU   PSASUP1
PSADISP  EQU   PSASUP1
PSALOCK  EQU   PSASUP1
PSAPI    EQU   PSASUP1
PSAEXT   EQU   PSASUP1
PSASVC   EQU   PSASUP1
PSAIO    EQU   PSASUP1
PSAAOLD  EQU   PSA+548
PSAANEW  EQU   PSA+544
PSATOLD  EQU   PSA+540
PSATNEW  EQU   PSA+536
PSALCCAR EQU   PSA+532
PSALCCAV EQU   PSA+528
PSAPCCAR EQU   PSA+524
PSAPCCAV EQU   PSA+520
PSACPULA EQU   PSA+518
PSACPUPA EQU   PSA+516
PSAPSA   EQU   PSA+512
FLCHDEND EQU   PSA+512
FLCCRSAV EQU   FLCMCLA+280
FLCGRSAV EQU   FLCMCLA+216
FLCFPSAV EQU   FLCMCLA+184
FLCFLA   EQU   FLCMCLA+88
FLCRGNCD EQU   FLCMCLA+84
FLCFSAA  EQU   FLCFSA+1
@NM00024 EQU   FLCFSA
@NM00023 EQU   FLCMCLA+72
FLCMCIC  EQU   FLCMCLA+64
@NM00022 EQU   FLCMCLA+20
FLCIOAA  EQU   FLCIOA+1
@NM00021 EQU   FLCIOA
@NM00020 EQU   FLCMCLA+15
@NM00019 EQU   FLCMCLA+14
@NM00018 EQU   FLCMCLA+12
FLCLCL   EQU   FLCMCLA+8
FLCIOELA EQU   FLCIOEL+1
@NM00017 EQU   FLCIOEL
FLCCHNID EQU   FLCMCLA
@NM00016 EQU   PSA+160
FLCMTRCD EQU   PSA+157
@NM00015 EQU   PSA+156
FLCPERA  EQU   FLCPER+1
@NM00014 EQU   FLCPER
@NM00013 EQU   PSA+151
FLCPERCD EQU   PSA+150
FLCMCNUM EQU   PSA+149
@NM00012 EQU   PSA+148
FLCTEAA  EQU   FLCTEA+1
@NM00011 EQU   FLCTEA
PSAPIPC  EQU   PSAPICOD
PSAPIMC  EQU   PSAPICOD
PSAPIPER EQU   PSAPICOD
PSARV049 EQU   FLCPICOD
FLCPILCB EQU   FLCPIILC
@NM00010 EQU   FLCPIILC
@NM00009 EQU   PSAEPPSW
FLCSVCN  EQU   PSAESPSW+2
FLCSILCB EQU   FLCSVILC
@NM00008 EQU   FLCSVILC
@NM00007 EQU   PSAESPSW
FLCEICOD EQU   PSAEEPSW+2
PSASPAD  EQU   PSAEEPSW
@NM00006 EQU   PSA+128
FLCINPSW EQU   PSA+120
FLCMNPSW EQU   PSA+112
FLCPNPSW EQU   PSA+104
FLCSNPSW EQU   PSA+96
FLCENPSW EQU   PSA+88
FLCTRACE EQU   PSA+84
FLCTIMER EQU   PSA+80
FLCCVT2  EQU   PSA+76
FLCCAW   EQU   PSA+72
FLCCSW   EQU   PSA+64
FLCIOPSW EQU   PSA+56
FLCMOPSW EQU   PSA+48
FLCPOPSW EQU   PSA+40
FLCSOPSW EQU   PSA+32
FLCEOPSW EQU   PSA+24
@NM00005 EQU   FLCICCW2+4
FLCICCW1 EQU   FLCROPSW
FLCIPPSW EQU   FLCRNPSW
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RF00052 EQU   @RC00049
@RC00164 EQU   @RC00161
@RC00162 EQU   @RC00161
@RC00246 EQU   @EL00004
@RC00268 EQU   @EL00005
@RF00267 EQU   @EL00005
@RC00265 EQU   @EL00005
@RF00288 EQU   @RC00285
@RF00316 EQU   @EL00006
@RC00282 EQU   @EL00006
@RC00251 EQU   @RC00246
@ENDDATA EQU   *
         END   IRARMCPM,(C'PLS2132',0701,78024)
