B910     TITLE 'IEECB910  DISPLAY DUMP COMMAND PROCESSOR               *
                        '
IEECB910 CSECT ,                                                   0001
@MAINENT DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL1(22)                                             0001
         DC    C'IEECB910 UZ19365 78157'                           0001
         DROP  @15
@PROLOG  BALR  @12,0                                               0001
@PSTART  DS    0H                                                  0001
         USING @PSTART,@12                                         0001
         LR    @10,@01                                             0001
         L     @00,@SIZDATD                                        0001
         GETMAIN  R,LV=(0)
         LR    @11,@01                                             0001
         USING @DATD,@11                                           0001
         LR    @01,@10                                             0001
         ST    @13,@SA00001+4                                      0001
         LR    @13,@11                                             0001
         MVC   @PC00001(4),0(@01)                                  0001
*                                                                  0092
*   /*****************************************************************/
*   /*                                                               */
*   /* INIT                                                          */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0092
*   CSCBPTR=R1;                     /* SAVE ADDR OF THE ENTRY      0092
*                                      PARMLIST                      */
         ST    R1,CSCBPTR                                          0092
*   R14SAVE=R14;                    /* SAVE THIS TO RETURN WITH      */
         ST    R14,R14SAVE                                         0093
*   RFY                                                            0094
*    (R1,                                                          0094
*     R14) UNRSTD;                                                 0094
*                                                                  0094
*   /*****************************************************************/
*   /*                                                               */
*   /* USE IEECB860 TO PROVIDE ESTAE COVERAGE. THE ESTAE AND SYSTEM  */
*   /* RESOURCES OBTAINED BY IEECB860 WILL BE CLEANED UP BY TASK     */
*   /* TERMINATION                                                   */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0095
*   RFY                                                            0095
*    (R0,                                                          0095
*     R13) RSTD;                    /*                       @ZA25262*/
*   STM(R0,R14,SAVEAREA);           /* SAVE REGS                     */
         STM   R0,R14,SAVEAREA(R13)                                0096
*   DO;                             /* LOAD DCB(0) EP(NAME860)       */
*     RESPECIFY                                                    0098
*      (GPR00P,                                                    0098
*       GPR01P) RESTRICTED;                                        0098
*     GPR00P=ADDR(NAME860);         /* LOAD ENTRY POINT NAME ADDRESS */
         LA    GPR00P,NAME860                                      0099
*     GPR01P=0;                     /* JOBLIB OR LINKLIB DCB         */
         SLR   GPR01P,GPR01P                                       0100
*     SVC(8);                       /* ISSUE LOAD SVC                */
         SVC   8                                                   0101
*     RESPECIFY                                                    0102
*      (GPR00P,                                                    0102
*       GPR01P) UNRESTRICTED;                                      0102
*   END;                            /* LOAD DCB(0) EP(NAME860)       */
*/*@ZA25262                                                          */
*                                                                  0104
*   RFY                                                            0104
*     RETCODE RSTD;                                                0104
*   CALL IEECB860(CHAIN,CB860CMD);  /*                       @ZA25262*/
         L     @14,CSCBPTR                                         0105
         ST    @14,@AL00001                                        0105
         LA    @14,CB860CMD                                        0105
         ST    @14,@AL00001+4                                      0105
         LR    @15,R0                                              0105
         LA    @01,@AL00001                                        0105
         BALR  @14,@15                                             0105
*   LM(R0,R14,SAVEAREA);            /* RESTORE REGS                  */
         LM    R0,R14,SAVEAREA(R13)                                0106
*   RFY                                                            0107
*    (R0,                                                          0107
*     R13) UNRSTD;                  /*                       @ZA25262*/
*   IF RETCODE=0                    /* CHECK THE RETURN CODE FROM  0108
*                                      IEECB860                      */
*     THEN                          /* IF IT IS OK GO AHEAD          */
         LTR   RETCODE,RETCODE                                     0108
         BNZ   @RF00108                                            0108
*     DO;                                                          0109
*       RFY                                                        0110
*         RETCODE UNRSTD;                                          0110
*                                                                  0111
*       /*************************************************************/
*       /*                                                           */
*       /* PARSE THE DISPLAY COMMAND OPERAND                         */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0111
*       FCFLAGS=''B;                /* INIT                          */
         MVI   FCFLAGS,X'00'                                       0111
*       RFY                                                        0112
*         OPTPTR RSTD;                                             0112
*       OPTPTR=ADDR(CHBUF);         /* BEGIN PARSE AT THE BEGINNING
*                                      OF THE OPERAND FIELD PASSED IN
*                                      THE CSCB                      */
*                                                                  0113
         L     OPTPTR,CSCBPTR                                      0113
         LA    OPTPTR,CHBUF(,OPTPTR)                               0113
*       /*************************************************************/
*       /*                                                           */
*       /* THE FIRST PARM MUST HAVE BEEN ONE OF THE VALID FORMS OF   */
*       /* DUMP OR THIS RTN WOULD NOT BE ATTACHED                    */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0114
*       IF OPERAND(1:5)='DUMP '×OPERAND(1:2)='D '/* CHECK FOR JUST 0114
*                                      THE FIRST POSITIONAL WITH THE
*                                      SECOND PARM DEFAULTED         */
*         THEN                                                     0114
         CLC   OPERAND(5,OPTPTR),@CC02196                          0114
         BE    @RT00114                                            0114
         CLC   OPERAND(2,OPTPTR),@CC02197                          0114
         BNE   @RF00114                                            0114
@RT00114 DS    0H                                                  0115
*         STATUS=YES;                                              0115
         OI    STATUS,B'10000000'                                  0115
*       ELSE                        /* IF IT WASN'T DUMP WITH A    0116
*                                      DEFAULT THEN IT MUST BE     0116
*                                      FOLLOWED BY A 2ND PARM        */
*         DO;                                                      0116
         B     @RC00114                                            0116
@RF00114 DS    0H                                                  0117
*           IF OPERAND(1:5)='DUMP,' /* DETERMINE WHICH OF THE ONLY 0117
*                                      TWO OTHER POSSIBLITIES IT IS,
*                                      SO THAT THE BEGINNING OF THE
*                                      SECOND PARM CAN BE FOUND      */
*             THEN                                                 0117
         CLC   OPERAND(5,OPTPTR),@CC02198                          0117
         BNE   @RF00117                                            0117
*             OPTPTR=OPTPTR+5;                                     0118
         AH    OPTPTR,@CH01013                                     0118
*           ELSE                                                   0119
*             OPTPTR=OPTPTR+2;      /* ASSUME ABBR D,                */
         B     @RC00117                                            0119
@RF00117 AH    OPTPTR,@CH00272                                     0119
*           IF OPERAND(1:2)='S '    /* STATUS                        */
*             THEN                                                 0120
@RC00117 CLC   OPERAND(2,OPTPTR),@CC02199                          0120
         BNE   @RF00120                                            0120
*             STATUS=YES;                                          0121
         OI    STATUS,B'10000000'                                  0121
*           ELSE                                                   0122
*             IF OPERAND(1:2)='O '  /* OPTIONS                       */
*               THEN                                               0122
         B     @RC00120                                            0122
@RF00120 CLC   OPERAND(2,OPTPTR),@CC02200                          0122
         BNE   @RF00122                                            0122
*               OPTIONS=YES;                                       0123
         OI    OPTIONS,B'01000000'                                 0123
*             ELSE                                                 0124
*               IF OPERAND(1:7)='STATUS ' THEN                     0124
         B     @RC00122                                            0124
@RF00122 CLC   OPERAND(7,OPTPTR),@CC02201                          0124
         BNE   @RF00124                                            0124
*                 STATUS=YES;                                      0125
         OI    STATUS,B'10000000'                                  0125
*               ELSE                                               0126
*                 IF OPERAND(1:8)='OPTIONS ' THEN                  0126
         B     @RC00124                                            0126
@RF00124 CLC   OPERAND(8,OPTPTR),@CC02202                          0126
         BNE   @RF00126                                            0126
*                   OPTIONS=YES;                                   0127
         OI    OPTIONS,B'01000000'                                 0127
*                                                                  0128
*           /*********************************************************/
*           /*                                                       */
*           /* TERMINATE WITH ERROR MSG IEE708I BECAUSE NO VALID     */
*           /* COMMAND TEXT COULD BE FOUND                           */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0128
*                 ELSE                                             0128
*                   PARSERR=ON;     /* TERMINATE WITH AN ERROR       */
         B     @RC00126                                            0128
@RF00126 OI    PARSERR,B'00100000'                                 0128
*         END;                      /* OF OPERAND NOT D OR DUMP      */
@RC00126 DS    0H                                                  0129
@RC00124 DS    0H                                                  0129
@RC00122 DS    0H                                                  0129
@RC00120 DS    0H                                                  0130
*       IF PARSERR=ON               /* CHECK FOR A PARSE ERROR       */
*         THEN                      /* IF THERE WAS ONE              */
@RC00114 TM    PARSERR,B'00100000'                                 0130
         BNO   @RF00130                                            0130
*         DO;                                                      0131
*           RFY                                                    0132
*             R13 RSTD;                                            0132
*           STM(R0,R15,SAVEAREA);   /* SAVE REGS                     */
         STM   R0,R15,SAVEAREA(R13)                                0133
*           RFY                                                    0134
*             XSAPTR RSTD;                                         0134
*           XSAPTR=ADDR(BLDAREA);   /* USE THE BUILD AREA TO SET UP A
*                                      TEMP XSA AS A PARM LIST TO  0135
*                                      IEE0503D                      */
         LA    XSAPTR,BLDAREA                                      0135
*           XSAMAP=''B;             /* INIT                          */
         XC    XSAMAP(184,XSAPTR),XSAMAP(XSAPTR)                   0136
*           XAE=IEE708;             /* GIVE MSG ID                   */
         MVI   XAE(XSAPTR),X'3D'                                   0137
*           XAV=OPERAND(1:8);       /* SUPPLY THE VARIABLE PART OF 0138
*                                      THE MSG                       */
         MVC   XAV(8,XSAPTR),OPERAND(OPTPTR)                       0138
*           XAU=CHUCMP;             /* FILL IN MSG DESTINATION WHICH
*                                      IN THIS CASE IS THE ISSUING 0139
*                                      CONSOLE                       */
         L     @10,CSCBPTR                                         0139
         MVC   XAU(1,XSAPTR),CHUCMP(@10)                           0139
*           LNKEXC=LNKLST;          /* COPY LIST FORM LINK INTO    0140
*                                      DYNAMIC LIST AREA             */
         MVC   LNKEXC(8),LNKLST                                    0140
*           DO;                     /* LINK MF(E,LNKEXC) EP(NAME503D)*/
*             LNKEXC01='00'X;       /* EP/DE FLAG                    */
         MVI   LNKEXC01,X'00'                                      0142
*             LNKEXC02=ADDR(NAME503D);/* ADDR OF EP/DE               */
         LA    @10,NAME503D                                        0143
         STCM  @10,7,LNKEXC02                                      0143
*             RESPECIFY                                            0144
*              (GPR15P) RESTRICTED;                                0144
*             GPR15P=ADDR(LNKEXC);  /* ADDR OF LINK LIST             */
         LA    GPR15P,LNKEXC                                       0145
*             SVC(6);               /* ISSUE LINK SVC                */
         SVC   6                                                   0146
*             RESPECIFY                                            0147
*              (GPR15P) UNRESTRICTED;                              0147
*           END;                    /* LINK MF(E,LNKEXC) EP(NAME503D)*/
*           LM(R0,R15,SAVEAREA);    /* RESTORE REGS                  */
         LM    R0,R15,SAVEAREA(R13)                                0149
*           RFY                                                    0150
*             R13 UNRSTD;                                          0150
*           RFY                                                    0151
*            (XSAPTR,                                              0151
*             OPTPTR) UNRSTD;                                      0151
*         END;                      /* OF PUTTING OUT PARSE ERROR MSG*/
*       ELSE                        /* IF THERE WAS NO PARSE ERROR   */
*         DO;                       /* GENERATE THE REQUESTED MSG    */
         B     @RC00130                                            0153
@RF00130 DS    0H                                                  0154
*                                                                  0154
*           /*********************************************************/
*           /*                                                       */
*           /* IF STATUS WAS REQUESTED, FIRST GATHER THE SYS1.DUMP   */
*           /* DATASET INFORMATION TO AVOID HAVING AN ERROR OCCURR   */
*           /* BETWEEN THE LINES OF AN MLWTO                         */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0154
*           IF STATUS=YES           /* CHECK FOR MSG IEE865I         */
*             THEN                  /* IF STATUS WAS REQUESTED       */
         TM    STATUS,B'10000000'                                  0154
         BNO   @RF00154                                            0154
*             DO;                   /* GATHER STATUS DATA            */
*               FULLCNT=0;          /* INIT COUNT OF FULL DUMP     0156
*                                      DATASETS                      */
         SLR   @10,@10                                             0156
         ST    @10,FULLCNT                                         0156
*               DO ENT=1 BY 1       /* GATHER THE DATA FOR DSTABLE   */
*                     WHILE(ENT<=DIM(RTCTSDDS)&RTCTDSNM(ENT)^=0);/*
*                                      CHECK TO SEE IF THIS ENTRY IN
*                                      THE RTCT DEFINES AN ACTIVE  0157
*                                      DUMP DATASET                  */
         LA    ENT,1                                               0157
         B     @DE00157                                            0157
@DL00157 DS    0H                                                  0158
*                 DSTABLE(ENT)=''B; /* INIT                          */
         LR    @10,ENT                                             0158
         MH    @10,@CH02234                                        0158
         LA    @05,DSTABLE-105(@10)                                0158
         XC    0(105,@05),0(@05)                                   0158
*                 NAME(ENT)=RTCTDSNM(ENT);/* SAVE THE DATASET      0159
*                                      SYMBOLIC NAME                 */
         LA    @05,NAME-105(@10)                                   0159
         LR    @15,ENT                                             0159
         MH    @15,@CH01394                                        0159
         L     @01,CVTPTR                                          0159
         L     @14,CVTRTMCT(,@01)                                  0159
         ST    @15,@TF00001                                        0159
         ALR   @15,@14                                             0159
         MVC   0(3,@05),RTCTDSNM-12(@15)                           0159
*                 IF RTCTDETP(ENT)=OFF/* CHECK THE DUMP DATASET TYPE */
*                   THEN            /* FOR TAPE TYPES                */
         AL    @14,@TF00001                                        0160
         TM    RTCTDETP-12(@14),B'00100000'                        0160
         BNZ   @RF00160                                            0160
*                   DO;                                            0161
*                     TAPE(ENT)=ON; /* INDICATE TAPE TYPE IN TABLE   */
*                     AVAIL(ENT)=ON;/* TAPES ARE ALWAYS CONSIDERED TO
*                                      BE AVAILABLE                  */
         LA    @05,TAPE-105(@10)                                   0163
         OI    0(@05),B'10100000'                                  0163
*                   END;                                           0164
*                 ELSE              /* IF IT IS A DASD TYPE DATASET  */
*                   DO;                                            0165
         B     @RC00160                                            0165
@RF00160 DS    0H                                                  0166
*                     DASD(ENT)=ON; /* INDICATE DASD TYPE IN TABLE   */
         LR    @10,ENT                                             0166
         MH    @10,@CH02234                                        0166
         LA    @05,DASD-105(@10)                                   0166
         OI    0(@05),B'00010000'                                  0166
*                     IF RTCTDSUS(ENT)=OFF/* CHECK THE DATASET USED  */
*                         &RTCTDSST(ENT)=OFF/* AND FULL FLAGS        */
*                       THEN        /* IF BOTH ARE OFF THE DATASET IS
*                                      AVAILABLE                     */
         LR    @05,ENT                                             0167
         MH    @05,@CH01394                                        0167
         L     @01,CVTPTR                                          0167
         L     @01,CVTRTMCT(,@01)                                  0167
         ALR   @01,@05                                             0167
         TM    RTCTDSUS-12(@01),B'11000000'                        0167
         BNZ   @RF00167                                            0167
*                       AVAIL(ENT)=ON;/* INDICATE AVAILABLE IN THE 0168
*                                      TABLE                         */
         LA    @05,AVAIL-105(@10)                                  0168
         OI    0(@05),B'10000000'                                  0168
*                     ELSE          /* IF THE RTCT DOES NOT SHOW THE
*                                      DATASET AVAILABLE             */
*                       DO;         /* CHECK IT OUT DIRECTLY         */
         B     @RC00167                                            0169
@RF00167 DS    0H                                                  0170
*                                                                  0170
*                         /*******************************************/
*                         /*                                         */
*                         /* DYNAMIC ALLOC OF THE SYS1.DUMP DATASET  */
*                         /*                                         */
*                         /*******************************************/
*                                                                  0170
*                         S99RBPTR=ADDR(S99RB);/* INIT THE PARMLIST
*                                      TO POINT TO THE REQUEST BLOCK */
         LA    @10,S99RB                                           0170
         ST    @10,S99RBPTR                                        0170
*                         S99RBPND=ON;/* SET THE VARIABLE LENGTH   0171
*                                      PARMLIST END FLAG             */
         OI    S99RBPND,B'10000000'                                0171
*                         S99RB=''B;/* INIT THE REQUEST BLOCK TO   0172
*                                      ZEROS                         */
         XC    S99RB(20),S99RB                                     0172
*                         S99RBLN=LENGTH(S99RB);/* INIT THE LENGTH 0173
*                                      FIELD                         */
         MVI   S99RBLN,X'14'                                       0173
*                         S99VERB=S99VRBAL;/* SET THE VERB CODE TO 0174
*                                      ALLOCATE                      */
         MVI   S99VERB,X'01'                                       0174
*                         S99TXTPP=ADDR(TEXTLIST);/* POINT TO THE  0175
*                                      TEXT UNITS PARMLIST           */
         LA    @10,TEXTLIST                                        0175
         ST    @10,S99TXTPP                                        0175
*                         TUP1=ADDR(TU1);/* INIT THE TEXT UNITS    0176
*                                      PARMLIST                      */
         LA    @10,TU1                                             0176
         ST    @10,TUP1                                            0176
*                         TUP2=ADDR(TU2);                          0177
         LA    @10,TU2                                             0177
         ST    @10,TUP2                                            0177
*                         TUP3=ADDR(TU3);                          0178
         LA    @10,TU3                                             0178
         ST    @10,TUP3                                            0178
*                         TULSTEND=ON;                             0179
         OI    TULSTEND,B'10000000'                                0179
*                         TU1=TU1LIST;/* INIT THE TEXT UNITS         */
         MVC   TU1(17),TU1LIST                                     0180
*                         TU1DSN(LENGTH(TU1DSN)-1:LENGTH(TU1DSN))= 0181
*                             DSNNAME(ENT);/* AMEND THE DATASET NAME
*                                      WITH THE SUFFIX FROM THE RTCT */
         LR    @10,ENT                                             0181
         MH    @10,@CH02234                                        0181
         LA    @05,DSNNAME-105(@10)                                0181
         MVC   TU1DSN+9(2),0(@05)                                  0181
*                         TU2=TU2LIST;/* INIT THE TU2 AS IEFDB400  0182
*                                      WILL STORE INTO THE TEXT UNIT
*                                                            @ZA32470*/
         MVC   TU2(7),TU2LIST                                      0182
*                         TU3=TU3LIST;/* INIT THE TU3 WHICH WILL BE
*                                      FILLED IN BY DYNAM ALLOC WITH
*                                      THE DDNAME                    */
         MVC   TU3(14),TU3LIST                                     0183
*                         S99NOMNT=ON;/* INDICATE VOLUMES ARE NOT TO
*                                      BE MOUNTED TO SATISFY THIS  0184
*                                      REQUEST                       */
         OI    S99NOMNT,B'00100000'                                0184
*                         RFY                                      0185
*                          (R1,                                    0185
*                           RETCODE) RSTD;                         0185
*                         R1=ADDR(S99RBPTR);/* SET UP THE PARM REG 0186
*                                      FOR SVC99                     */
         LA    R1,S99RBPTR                                         0186
*/* MACDATE Y-2 73082                                                */
*                                                                  0187
*                         SVC(99);                                 0187
         SVC   99                                                  0187
*                         RFY                                      0188
*                           R1 UNRSTD;                             0188
*                         IF RETCODE^=0/* CHECK FOR DYNAM ALLOC    0189
*                                      FAILURE                       */
*                           THEN    /* IF IT DIDN'T GO               */
         LTR   RETCODE,RETCODE                                     0189
         BZ    @RF00189                                            0189
*                           DO;                                    0190
*                             RFY                                  0191
*                               RETCODE UNRSTD;                    0191
*                             FULL(ENT)=ON;/* IF THE DATASET CANNOT
*                                      BE ALLOC TO SEE IF IT IS FULL
*                                      ASSUME THE RTCT FLAGS ARE   0192
*                                      CORRECT                       */
         LR    @10,ENT                                             0192
         MH    @10,@CH02234                                        0192
         LA    @05,FULL-105(@10)                                   0192
         OI    0(@05),B'01000000'                                  0192
*                             FULLCNT=FULLCNT+1;/* KEEP A COUNT OF 0193
*                                      THE FULL DATASETS             */
         LA    @05,1                                               0193
         AL    @05,FULLCNT                                         0193
         ST    @05,FULLCNT                                         0193
*                             DYNALERR(ENT)=ON;/* INDICATE THE     0194
*                                      DYNAMIC ALLOCATION ERROR TEXT
*                                      IS TO BE PUT OUT FOR THIS LINE*/
         LA    @05,DYNALERR-105(@10)                               0194
         OI    0(@05),B'00001000'                                  0194
*                           END;                                   0195
*                                                                  0196
*                         /*******************************************/
*                         /*                                         */
*                         /* ONCE THE DYNAM ALLOC IS DONE OPEN THE   */
*                         /* DCB AND READ THE FIRST RECORD           */
*                         /*                                         */
*                         /*******************************************/
*                                                                  0196
*                         ELSE      /* IF DYNAM ALLOC WAS OK         */
*                           DO;     /* OPEN THE DCB, READ THE FIRST
*                                      LOGICAL RECORD, AND CLOSE THE
*                                      DCB                           */
         B     @RC00189                                            0196
@RF00189 DS    0H                                                  0197
*                             DCBEXEC(1:DCBLEN)=DCBLIST(1:DCBLEN);/*
*                                      COPY LIST FORMS INTO DYNAMIC
*                                      STORAGE                       */
         L     @10,DCBLEN                                          0197
         BCTR  @10,0                                               0197
         EX    @10,@SM02246                                        0197
*                             DCBDDN(1:DDNLEN)=DDN(1:DDNLEN);/* COPY
*                                      THE DDNAME ASSIGNED BY DYNAM
*                                      ALLOC INTO THE DCB            */
         LH    @10,DDNLEN                                          0198
         BCTR  @10,0                                               0198
         EX    @10,@SM02248                                        0198
*                             OPENEXEC(1:OPENLEN)=OPENLIST(1:OPENLEN);
         L     @10,OPENLEN                                         0199
         BCTR  @10,0                                               0199
         EX    @10,@SM02250                                        0199
*                             CLOSEXEC(1:CLOSLEN)=CLOSLIST(1:CLOSLEN);
         L     @10,CLOSLEN                                         0200
         BCTR  @10,0                                               0200
         EX    @10,@SM02252                                        0200
*                             READEXEC(1:READLEN)=READLIST(1:READLEN);
         L     @10,READLEN                                         0201
         BCTR  @10,0                                               0201
         EX    @10,@SM02254                                        0201
*                             GEN SETS(DCBEXEC) CODE;              0202
         OPEN  (DCBEXEC),MF=(E,OPENEXEC)
*                             IF DCBOFOPN=OFF/* TEST THE OPEN FLAG   */
*                               THEN/* IF THE OPEN FAILED            */
         TM    DCBOFOPN,B'00010000'                                0203
         BNZ   @RF00203                                            0203
*                               DO;                                0204
*                                 OPENERR(ENT)=ON;/* INDICATE THE  0205
*                                      ERROR IN THE TABLE            */
*                                 FULL(ENT)=ON;/* ASSUME THE DATASET
*                                      IS FULL                       */
         LR    @10,ENT                                             0206
         MH    @10,@CH02234                                        0206
         LA    @05,OPENERR-105(@10)                                0206
         OI    0(@05),B'01000010'                                  0206
*                                 FULLCNT=FULLCNT+1;/* INCR THE FULL
*                                      COUNT                         */
         LA    @10,1                                               0207
         AL    @10,FULLCNT                                         0207
         ST    @10,FULLCNT                                         0207
*                               END;                               0208
*                                                                  0209
*                             /***************************************/
*                             /*                                     */
*                             /* READ THE FIRST RECORD OF THIS DUMP  */
*                             /* DATASET. IF THERE IS A DUMP HEADER  */
*                             /* THERE SAVE THE TITLE, IF NOTHING IS */
*                             /* THERE CONSIDER THE DATASET          */
*                             /* AVAILABLE, OTHERWISE CONSIDER IT    */
*                             /* FULL                                */
*                             /*                                     */
*                             /***************************************/
*                                                                  0209
*                             ELSE  /* IF THE OPEN WAS SUCCESSFUL    */
*                               DO;                                0209
         B     @RC00203                                            0209
@RF00203 DS    0H                                                  0210
*                                 GEN SETS(DCBEXEC) FLOWS(EODFOUND,
*                                     READERR) CODE;               0210
*                                 INVLDHDR(ENT)=ON;/* PRE SET TO BAD
*                                      HEADER                @ZA26869*/
         LR    @10,ENT                                             0211
         MH    @10,@CH02234                                        0211
         LA    @05,INVLDHDR-105(@10)                               0211
         OI    0(@05),B'00000100'                                  0211
*                                 RFY                              0212
*                                  (READCNT) RSTD;/* RESTRICT THE  0212
*                                      LOOP COUNTER          @ZA26869*/
*                                 DO READCNT=1 TO 5;/* GONNA LOOK  0213
*                                      THRU FIVE RECS        @ZA26869*/
         LA    READCNT,1                                           0213
@DL00213 DS    0H                                                  0214
*                                   GEN;                           0214
*                                                         /* @ZA26869*/
         READ  READECB,SF,DCBEXEC,BUFFER,MF=(E,READEXEC)
         CHECK READECB
*                                   IF READCNT=1 THEN/* FIRST TIME 0215
*                                      THROUGH?              @ZA26869*/
         LA    @10,1                                               0215
         CR    READCNT,@10                                         0215
         BNE   @RF00215                                            0215
*                                    DO;/* YES....           @ZA26869*/
*                                     FULL(ENT)=ON;/* SINCE NO END OF
*                                      FILE WAS FOUND ON THE FIRST 0217
*                                      READ THIS DATASET IS BY     0217
*                                      DEFINITION FULL               */
         LR    @05,ENT                                             0217
         MH    @05,@CH02234                                        0217
         LA    @02,FULL-105(@05)                                   0217
         OI    0(@02),B'01000000'                                  0217
*                                     FULLCNT=FULLCNT+1;           0218
         AL    @10,FULLCNT                                         0218
         ST    @10,FULLCNT                                         0218
*                                    END;/* END.... FIRST TIME     0219
*                                      THROUGH               @ZA26869*/
*                                   IF SDHID='FF'X&SDHRID='FF'X/*  0220
*                                      CHECK THE RECORD ID FIELDS FOR
*                                      THE VALID DUMP & HEADER RECORD
*                                      ID                            */
*                                     THEN/* IF THEY ARE VALID       */
@RF00215 CLI   SDHID,X'FF'                                         0220
         BNE   @RF00220                                            0220
         CLI   SDHRID,X'FF'                                        0220
         BNE   @RF00220                                            0220
*                                    DO;                           0221
*                                     TITLE(ENT)=SDHTITLE;/* SAVE THE
*                                      DUMP TITLE                    */
         LR    @10,ENT                                             0222
         MH    @10,@CH02234                                        0222
         LA    @05,TITLE-105(@10)                                  0222
         MVC   0(100,@05),SDHTITLE                                 0222
*                                     TITLEOK(ENT)=ON;             0223
         LA    @05,TITLEOK-105(@10)                                0223
         OI    0(@05),B'10000000'                                  0223
*                                     READCNT=6;/* SET TO EXIT READ
*                                      LOOP                  @ZA26869*/
         LA    READCNT,6                                           0224
*                                     INVLDHDR(ENT)=OFF;/* SET TO  0225
*                                      INDICATE GOOD HEADER  @ZA26869*/
         LA    @05,INVLDHDR-105(@10)                               0225
         NI    0(@05),B'11111011'                                  0225
*                                    END;/* END.... VALID HEADER   0226
*                                                            @ZA26869*/
*                                 END;/* END.... FIVE RECORD SEARCH
*                                                            @ZA26869*/
@RF00220 AH    READCNT,@CH00267                                    0227
         CH    READCNT,@CH01013                                    0227
         BNH   @DL00213                                            0227
*                                 GO TO CLOSE;/* GO CLOSE DCB        */
         B     CLOSE                                               0228
*READERR:                           /* READ WILL BRANCH HERE IF THERE
*                                      IS AN ERROR ON THE READ       */
*                                 READERRR(ENT)=ON;/* INDICATE THE 0229
*                                      ERROR IN THE TABLE            */
READERR  DS    0H                                                  0230
*                                 FULL(ENT)=ON;/* ASSUME THE DATASET
*                                      IS FULL                       */
         LR    @10,ENT                                             0230
         MH    @10,@CH02234                                        0230
         LA    @05,READERRR-105(@10)                               0230
         OI    0(@05),B'01000001'                                  0230
*                                 FULLCNT=FULLCNT+1;/* INCR THE FULL
*                                      COUNT                         */
         LA    @10,1                                               0231
         AL    @10,FULLCNT                                         0231
         ST    @10,FULLCNT                                         0231
*                                 GO TO CLOSE;/* GO CLOSE DCB        */
         B     CLOSE                                               0232
*EODFOUND:                          /* READ WILL BRANCH HERE IF THE
*                                      END OF FILE MARK IS READ      */
*                                 IF READCNT=1 THEN/* FLAG AS EMPTY
*                                      ONLY AFTER 1ST READ   @ZA26869*/
EODFOUND CH    READCNT,@CH00267                                    0233
         BNE   @RF00233                                            0233
*                                   DO;/* ELSE.... JUST CLOSE DATA 0234
*                                      SET                   @ZA26869*/
*                                    INVLDHDR(ENT)=OFF;/* NOT INVALID
*                                      HEADER                @ZA26869*/
*                                    AVAIL(ENT)=ON;/* THIS DATASET IS
*                                      AVAILABLE EVEN THOUGH THE RTCT
*                                      DOES NOT SHOW IT SO           */
         LR    @10,ENT                                             0236
         MH    @10,@CH02234                                        0236
         LA    @05,AVAIL-105(@10)                                  0236
         OI    0(@05),B'10000000'                                  0236
         NI    0(@05),B'11111011'                                  0236
*                                   END;/* END.... FIRST READ CODE 0237
*                                                            @ZA26869*/
*                                                                  0238
*                                 /***********************************/
*                                 /*                                 */
*                                 /* AFTER THE SYS1.DUMP DATASET HAS */
*                                 /* BEEN READ CLOSE THE DCB AND     */
*                                 /* UNALLOCATE THE DATASET          */
*                                 /*                                 */
*                                 /***********************************/
*                                                                  0238
*CLOSE:                             /* PATHS FOR BOTH DATA READ AND
*                                      END OF DATA REACHED COME    0238
*                                      TOGETHER HERE                 */
*                                 GEN SETS(DCBEXEC,CLOSEXEC) CODE  0238
*(CLOSE  (DCBEXEC),MF=(E,CLOSEXEC));                               0238
@RF00233 DS    0H                                                  0238
CLOSE    CLOSE  (DCBEXEC),MF=(E,CLOSEXEC)
*                               END;/* OF SUCCESSFUL OPEN            */
*                             S99VERB=S99VRBUN;/* CHANGE DYNAM ALLOC
*                                      VERB CODE TO UNALLOCATE       */
@RC00203 MVI   S99VERB,X'02'                                       0240
*                             TU3KEY=DUNDDNAM;/* CHANGE KEY TO     0241
*                                      UNALLOCATE BY DDNAME  @ZA26855*/
         MVC   TU3KEY(2),@CB00038                                  0241
*                             TULSTE2=ON;/* END THE TEST UNITS LIST
*                                      BEFORE THE DISP TU LEAVING  0242
*                                      ONLY THE DDNAME & DSNAME TUS  */
         OI    TULSTE2,B'10000000'                                 0242
*                             RFY                                  0243
*                               R1 RSTD;                           0243
*                             R1=ADDR(S99RBPTR);                   0244
*                                                                  0244
         LA    R1,S99RBPTR                                         0244
*/* MACDATE Y-2 73082                                                */
*                                                                  0245
*                             SVC(99);                             0245
         SVC   99                                                  0245
*                             RFY                                  0246
*                               R1 UNRSTD;                         0246
*                           END;    /* OF SUCCESSFUL ALLOC           */
*                       END;        /* OF CHECKING DATASET           */
@RC00189 DS    0H                                                  0249
*                   END;            /* OF DASD TYPE DATASET          */
@RC00167 DS    0H                                                  0250
*               END;                /* OF TABLE BUILDING LOOP        */
@RC00160 AH    ENT,@CH00267                                        0250
@DE00157 CH    ENT,@CH01463                                        0250
         BH    @DC00157                                            0250
         LR    @10,ENT                                             0250
         MH    @10,@CH01394                                        0250
         L     @05,CVTPTR                                          0250
         L     @05,CVTRTMCT(,@05)                                  0250
         L     @10,RTCTDSNM-13(@10,@05)                            0250
         LA    @10,0(,@10)                                         0250
         LTR   @10,@10                                             0250
         BNZ   @DL00157                                            0250
@DC00157 DS    0H                                                  0251
*               LASTENT=ENT-1;      /* SAVE THE INDEX OF THE LAST  0251
*                                      ENTRY IN THE TABLE            */
         LR    @10,ENT                                             0251
         BCTR  @10,0                                               0251
         ST    @10,LASTENT                                         0251
*               AVAILCNT=LASTENT-FULLCNT;/* WHAT IS NOT FULL IS AVAIL*/
         SL    @10,FULLCNT                                         0252
         ST    @10,AVAILCNT                                        0252
*                                                                  0253
*               /*****************************************************/
*               /*                                                   */
*               /* PUT OUT APPROPRIATE MLWTO CONTROL LINE            */
*               /*                                                   */
*               /*****************************************************/
*                                                                  0253
*               RFY                                                0253
*                 MSGPTR RSTD;                                     0253
*               MSGPTR=ADDR(CNTL856);/* INDICATE THE STATUS MSG    0254
*                                      CONTROL LINE                  */
         L     MSGPTR,@CA02042                                     0254
*             END;                  /* OF SETUP FOR STATUS MESSAGE   */
*           ELSE                    /* IF IT WASN'T THE ERROR MSG AND
*                                      IT WASN'T THE STATUS MSG THE
*                                      THE OPTIONS MSG MUST HAVE BEEN
*                                      REQUESTED                     */
*             MSGPTR=ADDR(CNTL857); /* SO POINT TO ITS CNTL LINE TEXT*/
         B     @RC00154                                            0256
@RF00154 L     MSGPTR,@CA02043                                     0256
*           RFY                                                    0257
*             WPLPTR RSTD;                                         0257
@RC00154 DS    0H                                                  0258
*           WPLPTR=ADDR(BLDAREA);   /* SET UP THE BASE FOR THE WPL 0258
*                                      MAP                           */
         LA    WPLPTR,BLDAREA                                      0258
*           BLDAREA(1:MSGLEN)=MSG(1:MSGLEN);/* COPY OVER THE LIST  0259
*                                      FORM WTO                      */
         SLR   @10,@10                                             0259
         IC    @10,MSGLEN(,MSGPTR)                                 0259
         BCTR  @10,0                                               0259
         EX    @10,@SM02258                                        0259
*           RFY                                                    0260
*             MSGPTR UNRSTD;                                       0260
*           RFY                                                    0261
*            (R0,                                                  0261
*             R1,                                                  0261
*             R14,                                                 0261
*             R15) RSTD;                                           0261
*           GEN SETS(R0,R1,R14,R15) CODE(TIME DEC,ERRET=TIMERR);/* 0262
*                                      GET TIME                      */
         TIME DEC,ERRET=TIMERR
*           TIME=R0;                                               0263
         ST    R0,TIME                                             0263
*           RFY                                                    0264
*            (R0,                                                  0264
*             R1,                                                  0264
*             R14,                                                 0264
*             R15) UNRSTD;                                         0264
*           UNPK(UNPKAREA,TIME);    /* UNPACK THE TIME VALUE TO MAKE
*                                      IT PRINTABLE                  */
         UNPK  UNPKAREA(7),TIME(4)                                 0265
*           HH=UNPKAREA(1:2);       /* MOVE THE PIECES INTO THE MSG  */
         MVC   HH(2,WPLPTR),UNPKAREA                               0266
*           MM=UNPKAREA(3:4);       /* TEXT                          */
         MVC   MM(2,WPLPTR),UNPKAREA+2                             0267
*           SS=UNPKAREA(5:6);                                      0268
         MVC   SS(2,WPLPTR),UNPKAREA+4                             0268
*TIMERR:                            /* IF NO TIME RETURNED LEAVE 00
*                                      IN THE MSG                    */
*           WPLPTR=ADDR(WPLTXT)+WPLLGH;/* MOVE WPL MAP TO MLWTO FIELD*/
TIMERR   LA    @10,WPLTXT(,WPLPTR)                                 0269
         AH    @10,WPLLGH(,WPLPTR)                                 0269
         LR    WPLPTR,@10                                          0269
*           WPLAREA=CHARID;         /* DISPLAY AREA ID               */
         L     @10,CSCBPTR                                         0270
         MVC   WPLAREA(1,WPLPTR),CHARID(@10)                       0270
*           RFY                                                    0271
*            (R1,                                                  0271
*             R0) RSTD;                                            0271
*           R0=CHCNID;              /* THE LAST BYTE MUST BE THE   0272
*                                      CONSOLE ID THE REST SHOULD BE
*                                      ZERO                          */
         SLR   R0,R0                                               0272
         IC    R0,CHCNID(,@10)                                     0272
*           GEN SETS(R1) REFS(BLDAREA) CODE(WTO MF=(E,BLDAREA));/* 0273
*                                      WRITE OUT THE CONTROL LINE    */
         WTO MF=(E,BLDAREA)
*           MLWTOID=R1;             /* SAVE THE ID FOR WTO CONTINUES */
         STCM  R1,7,MLWTOID                                        0274
*           MLWTOCN=CHCNID;         /* ALSO SAVE THE TARGET CONSOLE
*                                      ID                            */
         L     @10,CSCBPTR                                         0275
         MVC   MLWTOCN(1),CHCNID(@10)                              0275
*           WCINIT=0;               /* ALSO INIT THE WORKAREA FOR THE
*                                      FIRST CALL TO IEECB912        */
         SLR   @10,@10                                             0276
         ST    @10,WCINIT                                          0276
*           RFY                                                    0277
*            (R0,                                                  0277
*             R1,                                                  0277
*             WPLPTR) UNRSTD;                                      0277
*                                                                  0278
*           /*********************************************************/
*           /*                                                       */
*           /* GENERATE MSG IEE856I DISPLAY DUMP STATUS              */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0278
*           IF STATUS=YES           /* WAS THIS MSG REQUESTED ?      */
*             THEN                                                 0278
         TM    STATUS,B'10000000'                                  0278
         BNO   @RF00278                                            0278
*             DO;                                                  0279
*                                                                  0279
*               /*****************************************************/
*               /*                                                   */
*               /* BUILD THE LABEL LINE FOR IEE856I                  */
*               /*                                                   */
*               /*****************************************************/
*                                                                  0280
*               RFY                                                0280
*                (NEWPTR,                                          0280
*                 TXTPTR) RSTD;                                    0280
*               NEWPTR=ADDR(BLDLINE);/* LOCATE THE AREA WHERE THE  0281
*                                      LINE WILL BE BUILT            */
         LA    @09,BLDLINE                                         0281
         LR    NEWPTR,@09                                          0281
*               TXTPTR=ADDR(LABEL856);/* LOCATE THE TEXT FOR THE   0282
*                                      SUMMARY LINE                  */
         L     TXTPTR,@CA02055                                     0282
*               NEWTXT(1:TXTLEN)=TXT(1:TXTLEN);/* MOVE IN THE FIRST
*                                      PART                          */
         SLR   @15,@15                                             0283
         IC    @15,TXTLEN(,TXTPTR)                                 0283
         LR    @14,@15                                             0283
         BCTR  @14,0                                               0283
         EX    @14,@SM02260                                        0283
*               NEWPTR=NEWPTR+TXTLEN;                              0284
         ALR   NEWPTR,@15                                          0284
*               TXTPTR=ADDR(TXT)+TXTLEN;                           0285
         LA    @14,TXT(,TXTPTR)                                    0285
         ALR   @14,@15                                             0285
         LR    TXTPTR,@14                                          0285
*               CVD(AVAILCNT,CVDAREA);/* CONVERT COUNT TO DECIMAL    */
         L     @15,AVAILCNT                                        0286
         CVD   @15,CVDAREA                                         0286
*               CVDAREA(8)=CVDAREA(8)×ZONE;/* CONVERT SIGN TO A ZONE */
         OI    CVDAREA+7,X'0F'                                     0287
*               UNPK(NEWTXT(1:2),CVDAREA(7:8));/* ADD THE NUMBER OF
*                                      AVAILABLE DS TO THE MSG       */
         UNPK  NEWTXT(2,NEWPTR),CVDAREA+6(2)                       0288
*               NEWPTR=NEWPTR+2;                                   0289
         LA    @15,2                                               0289
         ALR   NEWPTR,@15                                          0289
*               NEWTXT(1:TXTLEN)=TXT(1:TXTLEN);/* MOVE IN THE REST OF
*                                      THE TEXT                      */
         SLR   @14,@14                                             0290
         IC    @14,TXTLEN(,TXTPTR)                                 0290
         LR    @07,@14                                             0290
         BCTR  @07,0                                               0290
         EX    @07,@SM02260                                        0290
*               NEWPTR=NEWPTR+TXTLEN;                              0291
         ALR   NEWPTR,@14                                          0291
*               CVD(FULLCNT,CVDAREA);                              0292
         L     @14,FULLCNT                                         0292
         CVD   @14,CVDAREA                                         0292
*               CVDAREA(8)=CVDAREA(8)×ZONE;                        0293
         OI    CVDAREA+7,X'0F'                                     0293
*               UNPK(NEWTXT(1:2),CVDAREA(7:8));/* ADD NUMBER OF FULL
*                                      DATASETS TO THE MSG           */
         UNPK  NEWTXT(2,NEWPTR),CVDAREA+6(2)                       0294
*               BLDLEN=NEWPTR+2-ADDR(BLDLINE);/* CALC THE LENGTH OF
*                                      THE LINE                      */
         ALR   @15,NEWPTR                                          0295
         SLR   @15,@09                                             0295
         STC   @15,BLDLEN                                          0295
*                                                                  0296
*               /*****************************************************/
*               /*                                                   */
*               /* IF THERE ARE NO DUMP DATASETS DEFINED THE LABEL   */
*               /* LINE WILL BE PUT OUT AS THE ENDING DATA LINE AND  */
*               /* THE NORMAL DATA LINE GENERATION WILL NOT BE DONE. */
*               /*                                                   */
*               /*****************************************************/
*                                                                  0296
*               IF LASTENT=0        /* ARE THERE NO DUMP DATASETS?   */
*                 THEN              /* YES THERE ARE NONE            */
         C     @10,LASTENT                                         0296
         BNE   @RF00296                                            0296
*                 CALL IEECB912(BLDAREA,1,1,ENDTYPE,MLWTOID,WTOCONTA);
         LA    @10,BLDAREA                                         0297
         ST    @10,@AL00001                                        0297
         LA    @10,@CF00267                                        0297
         ST    @10,@AL00001+4                                      0297
         LA    @10,@CF00267                                        0297
         ST    @10,@AL00001+8                                      0297
         LA    @10,@CB02003                                        0297
         ST    @10,@AL00001+12                                     0297
         LA    @10,MLWTOID                                         0297
         ST    @10,@AL00001+16                                     0297
         LA    @10,WTOCONTA                                        0297
         ST    @10,@AL00001+20                                     0297
         L     @15,@CV01998                                        0297
         LA    @01,@AL00001                                        0297
         BALR  @14,@15                                             0297
*                                   /* WRITE OUT THE LINE. SEE     0298
*                                      IEECB912 FOR PARM EXPLANATION */
*               ELSE                                               0298
*                 DO;               /* THERE WILL BE DATA LINES TO 0298
*                                      FOLLOW                        */
         B     @RC00296                                            0298
@RF00296 DS    0H                                                  0299
*                   CALL IEECB912(BLDAREA,1,1,LABLTYPE,MLWTOID,WTOCONTA
*                       );          /* WRITE OUT THE LINE. SEE     0299
*                                      WTOCOUNT FOR PARM EXPLANATION */
         LA    @10,BLDAREA                                         0299
         ST    @10,@AL00001                                        0299
         LA    @10,@CF00267                                        0299
         ST    @10,@AL00001+4                                      0299
         LA    @10,@CF00267                                        0299
         ST    @10,@AL00001+8                                      0299
         LA    @10,@CB00302                                        0299
         ST    @10,@AL00001+12                                     0299
         LA    @10,MLWTOID                                         0299
         ST    @10,@AL00001+16                                     0299
         LA    @10,WTOCONTA                                        0299
         ST    @10,@AL00001+20                                     0299
         L     @15,@CV01998                                        0299
         LA    @01,@AL00001                                        0299
         BALR  @14,@15                                             0299
*                                                                  0300
*                   /*************************************************/
*                   /*                                               */
*                   /* BUILD THE DATA LINES FOR MSG IEE856I          */
*                   /*                                               */
*                   /*************************************************/
*                                                                  0300
*                   DO ENT=1 TO LASTENT;/* GENERATE A DATA LINE FOR
*                                      EACH ENTRY IN DSTABLE         */
         LA    ENT,1                                               0300
         B     @DE00300                                            0300
@DL00300 DS    0H                                                  0301
*                     NEWPTR=ADDR(BLDLINE);                        0301
         LA    NEWPTR,BLDLINE                                      0301
*                     TXTPTR=ADDR(DATA856);/* LOCATE THE TEXT FOR THE
*                                      DATA SET LINE                 */
*                                                                  0302
         L     TXTPTR,@CA02056                                     0302
*                     /***********************************************/
*                     /*                                             */
*                     /* BIT INTERPRETATION. EACH BIT IN MSGBITS     */
*                     /* INDICATES A PORTION OF TEXT TO BE ADDED TO  */
*                     /* THE LINE TO CONSTRUCT THE TOTAL LINE. EACH  */
*                     /* BIT IS TESTED AND IF IT IS ON THE           */
*                     /* CORRESPONDING TEXT IS MOVED INTO THE LINE.  */
*                     /* CSECT IEECB911 CONTAINS A STRING OF         */
*                     /* LENGTH&TEXT ELEMENTS IN THE SAME ORDER AS   */
*                     /* THE BITS.                                   */
*                     /*                                             */
*                     /***********************************************/
*                                                                  0303
*                     RFY                                          0303
*                      (BYTEREG,                                   0303
*                       BITREG) RSTD;                              0303
*                     BYTEREG=ADDR(MSGBITS(ENT));/* LOCATE THE MSG 0304
*                                      BITS THAT DESCRIBE THE      0304
*                                      CONDITION OF THE DATASET AND
*                                      CAN BE USED TO BUILD THE TEXT */
         LR    BYTEREG,ENT                                         0304
         MH    BYTEREG,@CH02234                                    0304
         LA    BYTEREG,MSGBITS-105(BYTEREG)                        0304
*                     BITREG='00000100'X;/* INIT THE BIT MASK WHICH
*                                      CONTROLS WHICH BIT IN THE BYTE
*                                      POINTED TO BY BYTEREG IS TO BE
*                                      TESTED                        */
         LA    BITREG,256                                          0305
*                     DO WHILE BITREG>1;/* TEST EACH BIT IN THE BYTE */
         B     @DE00306                                            0306
@DL00306 DS    0H                                                  0307
*                       GEN SETS(BITREG) REFS(BYTEREG,TMINST) CODE;
         SRA   BITREG,1              SHIFT TO THE NEXT BIT POSITION
         EX    BITREG,TMINST
*                       BC(8,NOTEXT);/* IF THE TM SHOWED THE BIT TO
*                                      BE OFF SKIP THE CODE THAT   0308
*                                      MOVES IN THE TEXT FOR THE BIT
*                                      BEING ON                      */
         BC    8,NOTEXT                                            0308
*                       NEWTXT(1:TXTLEN)=TXT(1:TXTLEN);/* IF BIT IS
*                                      ON MOVE IN ITS TEXT           */
         SLR   @09,@09                                             0309
         IC    @09,TXTLEN(,TXTPTR)                                 0309
         LR    @07,@09                                             0309
         BCTR  @07,0                                               0309
         EX    @07,@SM02260                                        0309
*                       NEWPTR=NEWPTR+TXTLEN;/* MOVE TO THE NEXT SLOT*/
         ALR   NEWPTR,@09                                          0310
*                       IF BITREG=16×BITREG=32/* CHECK TO SEE IF THE
*                                      NAME SHOULD BE MOVED IN       */
*                         THEN                                     0311
         CH    BITREG,@CH00037                                     0311
         BE    @RT00311                                            0311
         CH    BITREG,@CH00400                                     0311
         BNE   @RF00311                                            0311
@RT00311 DS    0H                                                  0312
*                         DO;                                      0312
*                           NEWTXT(1:LENGTH(NAME))=NAME(ENT);/* COPY
*                                      IN THE NAME FROM THE DSTABLE  */
         LR    @09,ENT                                             0313
         MH    @09,@CH02234                                        0313
         LA    @07,NAME-105(@09)                                   0313
         MVC   NEWTXT(3,NEWPTR),0(@07)                             0313
*                           NEWPTR=NEWPTR+LENGTH(NAME);            0314
         AH    NEWPTR,@CH00582                                     0314
*                         END;                                     0315
*NOTEXT:                            /* BRANCH HERE TO AVOID ADDING 0316
*                                      TEXT TO THE LINE              */
*                       TXTPTR=ADDR(TXT)+TXTLEN;/* MOVE TO THE TEXT
*                                      FOR THE NEXT OPTION BIT       */
@RF00311 DS    0H                                                  0316
NOTEXT   LA    @09,TXT(,TXTPTR)                                    0316
         SLR   @07,@07                                             0316
         IC    @07,TXTLEN(,TXTPTR)                                 0316
         ALR   @09,@07                                             0316
         LR    TXTPTR,@09                                          0316
*                     END;          /* IF THE NEXT TXTLEN IS 0 OR THE
*                                      BIT MASK IN BITREG IS 1,    0317
*                                      INDICATING THE LAST BIT OF THE
*                                      BYTE HAS BEEN TESTED, END THE
*                                      LOOP                          */
@DE00306 CH    BITREG,@CH00267                                     0317
         BH    @DL00306                                            0317
*                     RFY                                          0318
*                      (BITREG,                                    0318
*                       BYTEREG) UNRSTD;                           0318
*                     IF TITLEOK(ENT)=ON/* CHECK FOR A TITLE IN    0319
*                                      DSTABLE                       */
*                       THEN        /* IF THERE IS ONE               */
         LR    @10,ENT                                             0319
         MH    @10,@CH02234                                        0319
         LA    @09,TITLEOK-105(@10)                                0319
         TM    0(@09),B'10000000'                                  0319
         BNO   @RF00319                                            0319
*                       DO;                                        0320
*                         NEWTXT(1:TXTLEN)=TXT(1:TXTLEN);/* COPY IN
*                                      TITLE HEADER WHICH WILL BE THE
*                                      TEXT POINTED TO AFTER THE BIT
*                                      LOOP IS DONE                  */
         SLR   @09,@09                                             0321
         IC    @09,TXTLEN(,TXTPTR)                                 0321
         LR    @05,@09                                             0321
         BCTR  @05,0                                               0321
         EX    @05,@SM02260                                        0321
*                         NEWPTR=NEWPTR+TXTLEN;                    0322
         ALR   NEWPTR,@09                                          0322
*                         NEWTXT(1:LENGTH(TITLE))=TITLE(ENT);/* THEN
*                                      COPY IN THE TITLE ITSELF      */
         LA    @09,TITLE-105(@10)                                  0323
         MVC   NEWTXT(100,NEWPTR),0(@09)                           0323
*                         NEWPTR=NEWPTR+LENGTH(TITLE);             0324
         AH    NEWPTR,@CH02102                                     0324
*                       END;                                       0325
*                     BLDLEN=NEWPTR-ADDR(BLDLINE);/* CALC THE LENGTH
*                                      OF THIS LINE                  */
@RF00319 LA    @10,BLDLINE                                         0326
         LCR   @10,@10                                             0326
         ALR   @10,NEWPTR                                          0326
         STC   @10,BLDLEN                                          0326
*                     IF ENT=LASTENT/* IS THIS THE LAST LINE         */
*                       THEN        /* IT IS THE LAST                */
         C     ENT,LASTENT                                         0327
         BNE   @RF00327                                            0327
*                       TYPELINE=ENDTYPE;                          0328
         MVI   TYPELINE,X'FF'                                      0328
*                     ELSE          /* IT IS NOT THE LAST            */
*                       TYPELINE=DATATYPE;                         0329
         B     @RC00327                                            0329
@RF00327 MVI   TYPELINE,X'02'                                      0329
*                     CALL IEECB912(BLDAREA,15,35,TYPELINE,MLWTOID,
*                         WTOCONTA);                               0330
@RC00327 LA    @10,BLDAREA                                         0330
         ST    @10,@AL00001                                        0330
         LA    @10,@CF00323                                        0330
         ST    @10,@AL00001+4                                      0330
         LA    @10,@CF02219                                        0330
         ST    @10,@AL00001+8                                      0330
         LA    @10,TYPELINE                                        0330
         ST    @10,@AL00001+12                                     0330
         LA    @10,MLWTOID                                         0330
         ST    @10,@AL00001+16                                     0330
         LA    @10,WTOCONTA                                        0330
         ST    @10,@AL00001+20                                     0330
         L     @15,@CV01998                                        0330
         LA    @01,@AL00001                                        0330
         BALR  @14,@15                                             0330
*                   END;            /* OF LOOP TO BUILD IEE856I DATA
*                                      LINES                         */
         AL    ENT,@CF00267                                        0331
@DE00300 C     ENT,LASTENT                                         0331
         BNH   @DL00300                                            0331
*                   RFY                                            0332
*                    (NEWPTR,                                      0332
*                     TXTPTR) UNRSTD;                              0332
*                 END;              /* OF DATA LINES FOLLOWING THE 0333
*                                      LABEL LINE                    */
*             END;                  /* OF BUILDING MSG IEE856I       */
*                                                                  0335
*           /*********************************************************/
*           /*                                                       */
*           /* GENERATE MSG IEE857I DISPLAY DUMP OPTIONS DATA LINES  */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0335
*           ELSE                    /* ASSUME THAT OPTIONS WAS     0335
*                                      REQUESTED IF NONE OF THE OTHER
*                                      FLAGS WAS ON                  */
*             DO;                                                  0335
         B     @RC00278                                            0335
@RF00278 DS    0H                                                  0336
*               RTCTCOPY=RTCTOPT;   /* SAVE A COPY OF THE RTCT     0336
*                                      EFFECTIVE DUMP OPTIONS FOR  0336
*                                      STABILITY                     */
         L     @10,CVTPTR                                          0336
         L     @10,CVTRTMCT(,@10)                                  0336
         MVC   RTCTCOPY(16),RTCTOPT(@10)                           0336
*               RFY                                                0337
*                (NEWPTR,                                          0337
*                 TXTPTR) RSTD;                                    0337
*               DO DT=1 TO 4;       /* LOOP ONCE FOR EACH DUMP TYPE  */
         LA    DT,1                                                0338
@DL00338 DS    0H                                                  0339
*                 NEWPTR=ADDR(BLDLINE);/* LOCATE THE AREA WHERE THE
*                                      TEXT WILL BE BUILT            */
         LA    NEWPTR,BLDLINE                                      0339
*                 TXTPTR=DUMPTYPE(DT);/* USING THE ARRAY DUMPTYPE  0340
*                                      OBTAIN THE ADDRESS OF THE DUMP
*                                      TYPE TEXT IN IEECB911         */
         LR    @10,DT                                              0340
         SLA   @10,2                                               0340
         L     @05,@CA02062                                        0340
         AL    @05,@CF02262                                        0340
         L     TXTPTR,DUMPTYPE-DUMPTYPE(@10,@05)                   0340
*                 NEWTXT(1:TXTLEN)=TXT(1:TXTLEN);/* MOVE IN THE DUMP
*                                      TYPE AND ITS TRAILING BLANK   */
         SLR   @09,@09                                             0341
         IC    @09,TXTLEN(,TXTPTR)                                 0341
         LR    @05,@09                                             0341
         BCTR  @05,0                                               0341
         EX    @05,@SM02260                                        0341
*                 NEWPTR=NEWPTR+TXTLEN;/* MOVE NEWTXT BASE           */
         ALR   NEWPTR,@09                                          0342
*                 IF IGNOROPT(DT)=ON/* CHECK TO SEE IF THE EXCLUSIVE
*                                      IGNORE DUMP REQUESTS OPTION IS
*                                      ON                            */
*                   THEN                                           0343
         LA    @09,IGNOROPT-4(@10)                                 0343
         TM    0(@09),B'00000001'                                  0343
         BNO   @RF00343                                            0343
*                   DO;                                            0344
*                     TXTPTR=ADDR(NODUMPS);/* GET THE TXT ADDR IN  0345
*                                      IEECB911                      */
         L     TXTPTR,@CA02046                                     0345
*                     NEWTXT(1:TXTLEN)=TXT(1:TXTLEN);/* MOVE IN THE
*                                      TEXT                          */
         SLR   @10,@10                                             0346
         IC    @10,TXTLEN(,TXTPTR)                                 0346
         LR    @09,@10                                             0346
         BCTR  @09,0                                               0346
         EX    @09,@SM02260                                        0346
*                     NEWPTR=NEWPTR+TXTLEN;/* MOVE NEWTXT TO THE NEXT
*                                      EMPTY POSITION                */
         ALR   NEWPTR,@10                                          0347
*                   END;                                           0348
*                 ELSE                                             0349
*                   DO;             /* IF NOT NO DUMPS               */
         B     @RC00343                                            0349
@RF00343 DS    0H                                                  0350
*                     IF OPTWORD(DT)=ADDONLY/* ARE ANY OPTIONS     0350
*                                      SPECIFIED                     */
*                       THEN        /* IF NOT SKIP THE OPTION      0350
*                                      GENERATION                    */
         LR    @10,DT                                              0350
         SLA   @10,2                                               0350
         L     @10,OPTWORD-4(@10)                                  0350
         LTR   @10,@10                                             0350
         BNZ   @RF00350                                            0350
*                       DO;                                        0351
*                         TXTPTR=ADDR(ADDNOOPT);/* GET THE TXT ADDR
*                                      IN IEECB911                   */
         L     TXTPTR,@CA02048                                     0352
*                         NEWTXT(1:TXTLEN)=TXT(1:TXTLEN);/* MOVE IN
*                                      THE TEXT                      */
         SLR   @10,@10                                             0353
         IC    @10,TXTLEN(,TXTPTR)                                 0353
         LR    @09,@10                                             0353
         BCTR  @09,0                                               0353
         EX    @09,@SM02260                                        0353
*                         NEWPTR=NEWPTR+TXTLEN;/* MOVE NEWTXT TO THE
*                                      NEXT EMPTY POSITION           */
         ALR   NEWPTR,@10                                          0354
*                       END;                                       0355
*                     ELSE          /* IF THERE ARE OPTIONS          */
*                       DO;         /* A LIST WILL NEED TO BE      0356
*                                      GENERATED                     */
         B     @RC00350                                            0356
@RF00350 DS    0H                                                  0357
*                         IF OVEROPT(DT)=ON/* DETERMINE THE MODE     */
*                           THEN    /* OVERRIDE MODE                 */
         LR    @10,DT                                              0357
         SLA   @10,2                                               0357
         LA    @09,OVEROPT-4(@10)                                  0357
         TM    0(@09),B'00000010'                                  0357
         BNO   @RF00357                                            0357
*                           DO;                                    0358
*                             TXTPTR=ADDR(OVERMODE);/* GET THE TXT 0359
*                                      ADDR IN IEECB911              */
         L     TXTPTR,@CA02045                                     0359
*                             NEWTXT(1:TXTLEN)=TXT(1:TXTLEN);/* MOVE
*                                      IN THE TEXT                   */
         SLR   @10,@10                                             0360
         IC    @10,TXTLEN(,TXTPTR)                                 0360
         LR    @09,@10                                             0360
         BCTR  @09,0                                               0360
         EX    @09,@SM02260                                        0360
*                             NEWPTR=NEWPTR+TXTLEN;/* MOVE NEWTXT TO
*                                      THE NEXT EMPTY POSITION       */
         ALR   NEWPTR,@10                                          0361
*                           END;                                   0362
*                         ELSE      /* ADD MODE                      */
*                           IF DT=SVCTYPE×/* IF IT IS SDUMP WE     0363
*                                      ALREADY KNOW THERE ARE CHANGES
*                                      BECAUSE IT HAS NO PARMLIB   0363
*                                      VALUES                        */
*                               OPTWORD(DT)^=PLIBOPT(DT)/* IF IT IS
*                                      ANY OTHER DUMP TYPE COMPARE 0363
*                                      WITH PARM LIB TO SEE IF THERE
*                                      HAVE BEEN ANY CHANGES         */
*                             THEN  /* FOR OPTIONS DIFFERENT FROM  0363
*                                      PARMLIB                       */
         B     @RC00357                                            0363
@RF00357 CH    DT,@CH00280                                         0363
         BE    @RT00363                                            0363
         LR    @10,DT                                              0363
         SLA   @10,2                                               0363
         L     @09,CVTPTR                                          0363
         L     @09,CVTRTMCT(,@09)                                  0363
         L     @05,OPTWORD-4(@10)                                  0363
         CL    @05,PLIBOPT-4(@10,@09)                              0363
         BE    @RF00363                                            0363
@RT00363 DS    0H                                                  0364
*                             DO;                                  0364
*                               TXTPTR=ADDR(ADDOPTS);/* GET THE TXT
*                                      ADDR IN IEECB911              */
         L     TXTPTR,@CA02047                                     0365
*                               NEWTXT(1:TXTLEN)=TXT(1:TXTLEN);/*  0366
*                                      MOVE IN THE TEXT              */
         SLR   @10,@10                                             0366
         IC    @10,TXTLEN(,TXTPTR)                                 0366
         LR    @09,@10                                             0366
         BCTR  @09,0                                               0366
         EX    @09,@SM02260                                        0366
*                               NEWPTR=NEWPTR+TXTLEN;/* MOVE NEWTXT
*                                      TO THE NEXT EMPTY POSITION    */
         ALR   NEWPTR,@10                                          0367
*                             END;                                 0368
*                           ELSE    /* FOR DUMP TYPES WHERE THE    0369
*                                      EFFECTIVE OPTIONS MATCH THE 0369
*                                      PARMLIB OPTIONS               */
*                             DO;                                  0369
         B     @RC00363                                            0369
@RF00363 DS    0H                                                  0370
*                               TXTPTR=ADDR(ADDPLIB);/* GET THE TXT
*                                      ADDR IN IEECB911              */
         L     TXTPTR,@CA02049                                     0370
*                               NEWTXT(1:TXTLEN)=TXT(1:TXTLEN);/*  0371
*                                      MOVE IN THE TEXT              */
         SLR   @10,@10                                             0371
         IC    @10,TXTLEN(,TXTPTR)                                 0371
         LR    @09,@10                                             0371
         BCTR  @09,0                                               0371
         EX    @09,@SM02260                                        0371
*                               NEWPTR=NEWPTR+TXTLEN;/* MOVE NEWTXT
*                                      TO THE NEXT EMPTY POSITION    */
         ALR   NEWPTR,@10                                          0372
*                             END;                                 0373
*                                                                  0374
*                         /*******************************************/
*                         /*                                         */
*                         /* BUILD OPTION LIST FROM RTCT BITS        */
*                         /*                                         */
*                         /*******************************************/
*                                                                  0374
*                         RFY                                      0374
*                          (BITREG,                                0374
*                           BYTEREG) RSTD;                         0374
@RC00363 DS    0H                                                  0374
@RC00357 DS    0H                                                  0375
*                         IF(DT=SATYPE×DT=SUTYPE)/* CHECK DUMPTYPE 0375
*                                      FOR SDATA OR PDATA PROCESSING */
*                           THEN                                   0375
         CH    DT,@CH00267                                         0375
         BE    @RT00375                                            0375
         CH    DT,@CH00272                                         0375
         BNE   @RF00375                                            0375
@RT00375 DS    0H                                                  0376
*                           DO;     /* SETUP SDATA                   */
*                             IF SDATOPTS(DT)=SDATONLY/* IF IF THERE
*                                      ARE NO SDATA OPTIONS          */
*                               THEN/* THEN JUST SAY SO              */
         LR    @09,DT                                              0377
         SLA   @09,2                                               0377
         LA    @07,SDATOPTS-4(@09)                                 0377
         CLC   0(2,@07),@CB02071                                   0377
         BNE   @RF00377                                            0377
*                               TXTPTR=ADDR(NOSDATA);/* POINT TO TEXT
*                                      IN IEECB911                   */
         L     TXTPTR,@CA02051                                     0378
*                             ELSE  /* BEGIN THE OPTIONS LIST        */
*                               TXTPTR=ADDR(SDATA);/* POINT TO TEXT
*                                      IN IEECB911                   */
         B     @RC00377                                            0379
@RF00377 L     TXTPTR,@CA02053                                     0379
*                           END;                                   0380
*                         ELSE                                     0381
*                           IF DT=SVCTYPE/* CHECK FOR THE ONLY OTHER
*                                      TWO DUMP TYPES                */
*                             THEN                                 0381
         B     @RC00375                                            0381
@RF00375 CH    DT,@CH00280                                         0381
         BNE   @RF00381                                            0381
*                             TXTPTR=ADDR(SVCDATA);/* SVC DUMP       */
         L     TXTPTR,@CA02054                                     0382
*                           ELSE    /* ASSUME                        */
*                             TXTPTR=ADDR(SMDATA);/* SYSMDUMP        */
         B     @RC00381                                            0383
@RF00381 L     TXTPTR,@CA02044                                     0383
*                         NEWTXT(1:TXTLEN)=TXT(1:TXTLEN);/* MOVE IN
*                                      LIST BEGINNING                */
@RC00381 DS    0H                                                  0384
@RC00375 SLR   @09,@09                                             0384
         IC    @09,TXTLEN(,TXTPTR)                                 0384
         LR    @07,@09                                             0384
         BCTR  @07,0                                               0384
         EX    @07,@SM02260                                        0384
*                         NEWPTR=NEWPTR+TXTLEN;/* MOVE NEWTXT TO NEXT
*                                      SLOT                          */
         ALR   NEWPTR,@09                                          0385
*                         TXTPTR=TXTPTR+TXTLEN+1;/* POINT TO THE NEXT
*                                      TEXT IN THE LIST              */
         LA    @07,1                                               0386
         ALR   @09,TXTPTR                                          0386
         ALR   @09,@07                                             0386
         LR    TXTPTR,@09                                          0386
*                         BYTEREG=ADDR(OPTWORD(DT));/* INIT THE BYTE
*                                      PTR FOR THE BIT ANALYSIS LOOP */
         LR    BYTEREG,DT                                          0387
         SLA   BYTEREG,2                                           0387
         LA    BYTEREG,OPTWORD-4(BYTEREG)                          0387
*                                                                  0388
*                         /*******************************************/
*                         /*                                         */
*                         /* LOOP THROUGH THE OPTION BYTES TO BUILD  */
*                         /* THE OPTIONS LIST                        */
*                         /*                                         */
*                         /*******************************************/
*                                                                  0388
*                         DO BYTE=1 TO 4;/* DO EACH BYTE OF DUMP   0388
*                                      OITIONS                       */
         LR    BYTE,@07                                            0388
@DL00388 DS    0H                                                  0389
*                           BITREG='00000100'X;/* INIT BIT SELECTOR
*                                      MASK FOR EX OF TM INST        */
         LA    BITREG,256                                          0389
*                           IF(DT=SATYPE×DT=SUTYPE)/* CHECK FOR SDATA
*                                      PDATA PROCESSING              */
*                               &BYTE=3/* SDATA TEXT ENDING AND PDATA
*                                      TEXT BEGINNING                */
*                             THEN                                 0390
         CH    DT,@CH00267                                         0390
         BE    @GL00007                                            0390
         CH    DT,@CH00272                                         0390
         BNE   @RF00390                                            0390
@GL00007 CH    BYTE,@CH00582                                       0390
         BNE   @RF00390                                            0390
*                             DO;   /* SET UP FOR PDATA              */
*                               IF SDATOPTS(DT)^=SDATONLY/* IF THERE
*                                      WERE SDATA OPTIONS            */
*                                 THEN/* THEN CLOSE UP THE LIST TEXT */
         LR    @09,DT                                              0392
         SLA   @09,2                                               0392
         LA    @07,SDATOPTS-4(@09)                                 0392
         CLC   0(2,@07),@CB02071                                   0392
         BE    @RF00392                                            0392
*                                 EVAL(NEWPTR-1)->NEWTXT(1)=')';/* 0393
*                                      OVERLAY THE LAST COMMA IN THE
*                                      LIST OF OPTIONS WITH A CLOSE
*                                      PAREN                         */
         LR    @09,NEWPTR                                          0393
         BCTR  @09,0                                               0393
         MVI   NEWTXT(@09),C')'                                    0393
*                               IF PDATOPTS(DT)=PDATONLY/* IF THERE
*                                      ARE NO PDATA OPTIONS          */
*                                 THEN/* THEN JUST SAY SO            */
@RF00392 LR    @09,DT                                              0394
         SLA   @09,2                                               0394
         LA    @07,PDATOPTS-4(@09)                                 0394
         MVC   @TS00001(2),0(@07)                                  0394
         NC    @TS00001(2),@CB02263                                0394
         BNZ   @RF00394                                            0394
*                                 TXTPTR=ADDR(NOPDATA);            0395
         L     TXTPTR,@CA02050                                     0395
*                               ELSE/* BEGIN THE OPTIONS LIST        */
*                                 TXTPTR=ADDR(PDATA);/* POINT TO TEXT
*                                      IN IEECB911                   */
         B     @RC00394                                            0396
@RF00394 L     TXTPTR,@CA02052                                     0396
*                               NEWTXT(1:TXTLEN)=TXT(1:TXTLEN);/*  0397
*                                      MOVE IN KEYWORD               */
@RC00394 SLR   @09,@09                                             0397
         IC    @09,TXTLEN(,TXTPTR)                                 0397
         LR    @07,@09                                             0397
         BCTR  @07,0                                               0397
         EX    @07,@SM02260                                        0397
*                               NEWPTR=NEWPTR+TXTLEN;/* MOVE NEWTXT
*                                      TO NEXT SLOT                  */
         ALR   NEWPTR,@09                                          0398
*                               TXTPTR=TXTPTR+TXTLEN+1;/* POINT TO 0399
*                                      THE NEXT TEXT IN THE LIST     */
         ALR   @09,TXTPTR                                          0399
         AL    @09,@CF00267                                        0399
         LR    TXTPTR,@09                                          0399
*                             END;                                 0400
*                                                                  0401
*                           /*****************************************/
*                           /*                                       */
*                           /* BIT INTERPRETATION. EACH BIT IN AN OPT*/
*                           /* BYTE INDICATES A PORTION OF TEXT TO BE*/
*                           /* ADDED TO THE LINE TO CONSTRUCT THE    */
*                           /* TOTAL LINE. EACH BIT IS TESTED AND IF */
*                           /* IT IS ON THE CORRESPONDING TEXT IS    */
*                           /* MOVED INTO THE LINE. CSECT IEECB911   */
*                           /* CONTAINS A STRING OF LENGTH&TEXT      */
*                           /* ELEMENTS IN THE SAME ORDER AS THE     */
*                           /* BITS.                                 */
*                           /*                                       */
*                           /*****************************************/
*                                                                  0401
*                           DO WHILE(BITREG>1&TXTLEN^=0);/* TEST EACH
*                                      BIT IN THE BYTE               */
@RF00390 B     @DE00401                                            0401
@DL00401 DS    0H                                                  0402
*                             GEN SETS(BITREG) REFS(BYTEREG,TMINST)
*                                 CODE;                            0402
         SRA   BITREG,1              SHIFT TO THE NEXT BIT POSITION
         EX    BITREG,TMINST
*                             BC(8,NOOPT);/* IF THE TM SHOWED THE BIT
*                                      TO BE OFF SKIP THE CODE THAT
*                                      MOVES IN THE TEXT FOR THE BIT
*                                      BEING ON                      */
         BC    8,NOOPT                                             0403
*                             NEWTXT(1:TXTLEN)=TXT(1:TXTLEN);/* IF 0404
*                                      BIT IS ON MOVE IN ITS TEXT    */
         SLR   @09,@09                                             0404
         IC    @09,TXTLEN(,TXTPTR)                                 0404
         LR    @07,@09                                             0404
         BCTR  @07,0                                               0404
         EX    @07,@SM02260                                        0404
*                             NEWPTR=NEWPTR+TXTLEN;/* MOVE TO THE  0405
*                                      NEXT SLOT                     */
         ALR   NEWPTR,@09                                          0405
*NOOPT:                             /* BRANCH HERE TO AVOID ADDING 0406
*                                      TEXT TO THE LINE              */
*                             TXTPTR=TXTPTR+TXTLEN+1;/* MOVE TO THE
*                                      TEXT FOR THE NEXT OPTION BIT  */
NOOPT    LR    @09,TXTPTR                                          0406
         SLR   @07,@07                                             0406
         IC    @07,TXTLEN(,TXTPTR)                                 0406
         ALR   @09,@07                                             0406
         AL    @09,@CF00267                                        0406
         LR    TXTPTR,@09                                          0406
*                           END;    /* IF THE NEXT TXTLEN IS 0 OR THE
*                                      BIT MASK IN BITREG IS 1,    0407
*                                      INDICATING THE LAST BIT OF THE
*                                      BYTE HAS BEEN TESTED, END THE
*                                      LOOP                          */
@DE00401 CH    BITREG,@CH00267                                     0407
         BNH   @DC00401                                            0407
         CLI   TXTLEN(TXTPTR),0                                    0407
         BNE   @DL00401                                            0407
@DC00401 DS    0H                                                  0408
*                           BYTEREG=BYTEREG+1;/* MOVE TO THE NEXT  0408
*                                      BYTE OF OPTIONS               */
         AL    BYTEREG,@CF00267                                    0408
*                         END;      /* OF BIT INTERPRETATION BYTE  0409
*                                      LOOP                          */
         AL    BYTE,@CF00267                                       0409
         CH    BYTE,@CH00280                                       0409
         BNH   @DL00388                                            0409
*                         RFY                                      0410
*                          (BITREG,                                0410
*                           BYTEREG) UNRSTD;                       0410
*                         IF(DT=SATYPE×DT=SUTYPE)/* FOR THE DUMPTYPES
*                                      THAT HAVE PDATA               */
*                             &PDATOPTS(DT)=PDATONLY/* IF THERE WERE
*                                      NO PDATA OPTIONS              */
*                           THEN                                   0411
         CH    DT,@CH00267                                         0411
         BE    @GL00010                                            0411
         CH    DT,@CH00272                                         0411
         BNE   @RF00411                                            0411
@GL00010 LR    @10,DT                                              0411
         SLA   @10,2                                               0411
         LA    @09,PDATOPTS-4(@10)                                 0411
         MVC   @TS00001(2),0(@09)                                  0411
         NC    @TS00001(2),@CB02263                                0411
         BZ    @RT00411                                            0411
*                           ;       /* DON'T CLOSE THE LIST          */
*                         ELSE                                     0413
*                           EVAL(NEWPTR-1)->NEWTXT(1)=')';/* OVERLAY
*                                      THE LAST COMMA IN THE LIST OF
*                                      OPTIONS WITH A CLOSE PAREN    */
@RF00411 LR    @10,NEWPTR                                          0413
         BCTR  @10,0                                               0413
         MVI   NEWTXT(@10),C')'                                    0413
*                       END;        /* OF OPTION GENERATION          */
@RT00411 DS    0H                                                  0415
*                   END;            /* OF THERE ARE NO OPTIONS       */
@RC00350 DS    0H                                                  0416
*                                                                  0416
*                 /***************************************************/
*                 /*                                                 */
*                 /* NOW THAT THIS UNIT OF TEXT IS BUILT CALL        */
*                 /* IEECB912 TO HAVE IT BROKEN UP INTO MLWTO LISTS  */
*                 /* AND WRITTEN OUT                                 */
*                 /*                                                 */
*                 /***************************************************/
*                                                                  0416
*                 BLDLEN=ADDR(NEWTXT)-ADDR(BLDLINE);/* CALC LENGTH OF
*                                      TEXT IN BLDLINE FOR IEECB912  */
@RC00343 LA    @10,BLDLINE                                         0416
         LCR   @10,@10                                             0416
         ALR   @10,NEWPTR                                          0416
         STC   @10,BLDLEN                                          0416
*                 IF DT=4           /* CHECK TO SEE IF THE MSG     0417
*                                      BUILDING IS AT AN END         */
*                   THEN                                           0417
         CH    DT,@CH00280                                         0417
         BNE   @RF00417                                            0417
*                   TYPELINE=ENDTYPE;/* SIGNAL THE MLWTO SHOULD BE 0418
*                                      ENDED AFTER THIS LINE         */
         MVI   TYPELINE,X'FF'                                      0418
*                 ELSE                                             0419
*                   TYPELINE=DATATYPE;/* SHOW THAT MORE LINES ARE TO
*                                      COME FOR THE MLWTO            */
         B     @RC00417                                            0419
@RF00417 MVI   TYPELINE,X'02'                                      0419
*                 CALL IEECB912(BLDAREA,15,23,TYPELINE,MLWTOID,WTOCONTA
*                     );            /* SEE THE IEECB912 PROLOG FOR AN
*                                      EXPLANATION OF THE PARMS      */
@RC00417 LA    @10,BLDAREA                                         0420
         ST    @10,@AL00001                                        0420
         LA    @10,@CF00323                                        0420
         ST    @10,@AL00001+4                                      0420
         LA    @10,@CF02224                                        0420
         ST    @10,@AL00001+8                                      0420
         LA    @10,TYPELINE                                        0420
         ST    @10,@AL00001+12                                     0420
         LA    @10,MLWTOID                                         0420
         ST    @10,@AL00001+16                                     0420
         LA    @10,WTOCONTA                                        0420
         ST    @10,@AL00001+20                                     0420
         L     @15,@CV01998                                        0420
         LA    @01,@AL00001                                        0420
         BALR  @14,@15                                             0420
*               END;                /* END OF DUMP TYPE LOOP         */
         AL    DT,@CF00267                                         0421
         CH    DT,@CH00280                                         0421
         BNH   @DL00338                                            0421
*               RFY                                                0422
*                (NEWPTR,                                          0422
*                 TXTPTR) UNRSTD;                                  0422
*             END;                  /* OF BUILDING MSG IEE857I       */
*           RFY                                                    0424
*             R14 RSTD;                                            0424
@RC00278 DS    0H                                                  0425
*         END;                      /* OF SUCCESSFUL PARSE OF OPERAND*/
*     END;                          /* OF SUCCESSFUL CALL TO IEECB860*/
@RC00130 DS    0H                                                  0427
*EXITCODE:                                                         0427
*                                                                  0427
*   /*****************************************************************/
*   /*                                                               */
*   /* COMMON EXIT CODE                                              */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0427
*   CHFC=ON;                        /* INDICATE THE CSCB IS TO BE  0427
*                                      FREED                         */
@RF00108 DS    0H                                                  0427
EXITCODE L     @15,CSCBPTR                                         0427
         OI    CHFC(@15),B'00000010'                               0427
*   RFY                                                            0428
*     R1 RSTD;                                                     0428
*   R1=ADDR(CHAIN);                                                0429
         LR    R1,@15                                              0429
*   GEN REFS(R1,CHAIN) CODE( MGCR (R1),CHAIN);/* FREE THE CSCB       */
          MGCR (R1),CHAIN
*   RFY                                                            0431
*     R1 UNRSTD;                                                   0431
*   DO;                             /* DELETE EP(NAME860)            */
*     RESPECIFY                                                    0433
*      (GPR00P) RESTRICTED;                                        0433
*     GPR00P=ADDR(NAME860);         /* ->ENTRY NAME                  */
         LA    GPR00P,NAME860                                      0434
*     SVC(9);                       /* DELETE SVC                    */
         SVC   9                                                   0435
*     RESPECIFY                                                    0436
*      (GPR00P) UNRESTRICTED;                                      0436
*   END;                            /* DELETE EP(NAME860)            */
*   R14=R14SAVE;                                                   0438
         L     R14,R14SAVE                                         0438
*   RETURN CODE(0);                                                0439
         L     @13,4(,@13)                                         0439
         L     @00,@SIZDATD                                        0439
         LR    @01,@11                                             0439
         FREEMAIN R,LV=(0),A=(1)
         SLR   @15,@15                                             0439
         BR    @14                                                 0439
*   RFY                                                            0440
*     R14 UNRSTD;                                                  0440
*   DECLARE                         /* GENERAL PURPOSE REGISTERS     */
*     GPR00P PTR(31) REG(0),                                       0441
*     GPR01P PTR(31) REG(1),                                       0441
*     GPR15P PTR(31) REG(15);                                      0441
*   DECLARE                         /* COMMON VARIABLES              */
*     I256C CHAR(256) BASED,                                       0442
*     I031F FIXED(31) BASED,                                       0442
*     I031P PTR(31) BASED,                                         0442
*     I015F FIXED(15) BASED,                                       0442
*     I015P PTR(15) BASED,                                         0442
*     I008P PTR(8) BASED,                                          0442
*     I001C CHAR(1) BASED;                                         0442
*   END IEECB910                                                   0443
*                                                                  0443
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (IEFZB4D2)                                       */
*/*%INCLUDE SYSLIB  (IEFZB4D0)                                       */
*/*%INCLUDE SYSLIB  (CVT     )                                       */
*/*%INCLUDE SYSLIB  (IHAPSA  )                                       */
*/*%INCLUDE SYSLIB  (IEECHAIN)                                       */
*/*%INCLUDE SYSLIB  (IHARTCT )                                       */
*/*%INCLUDE SYSLIB  (IEEXSA  )                                       */
*/*%INCLUDE SYSLIB  (IEZWPL  )                                       */
*                                                                  0443
*       ;                                                          0443
@DATA    DS    0H
@CH00272 DC    H'2'
@CH00582 DC    H'3'
@CH00280 DC    H'4'
@CH01013 DC    H'5'
@CH01463 DC    H'10'
@CH01394 DC    H'12'
@CH00037 DC    H'16'
@CH00400 DC    H'32'
@CH02102 DC    H'100'
@CH02234 DC    H'105'
@SM02246 MVC   DCBEXEC(0),DCBLIST
@SM02248 MVC   DCBDDN(0),DDN
@SM02250 MVC   OPENEXEC(0),OPENLIST
@SM02252 MVC   CLOSEXEC(0),CLOSLIST
@SM02254 MVC   READEXEC(0),READLIST
@SM02258 MVC   BLDAREA(0),MSG(MSGPTR)
@SM02260 MVC   NEWTXT(0,NEWPTR),TXT(TXTPTR)
@DATD    DSECT
         DS    0F
@SA00001 DS    18F
@PC00001 DS    1F
@AL00001 DS    6A
@TF00001 DS    F
IEECB910 CSECT
         DS    0F
@CF00267 DC    F'1'
@CH00267 EQU   @CF00267+2
@CF00323 DC    F'15'
@CF02224 DC    F'23'
@CF02219 DC    F'35'
@CF02262 DC    F'-4'
@DATD    DSECT
         DS    0D
S99RBPTR DS    AL4
         ORG   S99RBPTR
S99RBPND DS    BL1
         ORG   S99RBPTR+4
CSCBPTR  DS    A
R14SAVE  DS    A
@NM00057 DS    AL4
         ORG   @NM00057
MLWTOID  DS    CL3
MLWTOCN  DS    CL1
         ORG   @NM00057+4
LASTENT  DS    F
FULLCNT  DS    F
AVAILCNT DS    F
@TS00001 DS    CL2
         DS    CL2
S99RB    DS    CL20
         ORG   S99RB
S99RBLN  DS    CL1
S99VERB  DS    CL1
S99FLAG1 DS    CL2
         ORG   S99FLAG1
S99FLG11 DS    CL1
         ORG   S99FLG11
S99ONCNV DS    BL1
S99NOCNV EQU   S99FLG11+0
S99NOMNT EQU   S99FLG11+0
S99JBSYS EQU   S99FLG11+0
         ORG   S99FLAG1+1
S99FLG12 DS    CL1
         ORG   S99RB+4
S99RSC   DS    CL4
         ORG   S99RSC
S99ERROR DS    CL2
S99INFO  DS    CL2
         ORG   S99RB+8
S99TXTPP DS    AL4
S99RSV01 DS    FL4
S99FLAG2 DS    CL4
         ORG   S99FLAG2
S99FLG21 DS    CL1
         ORG   S99FLG21
S99WTVOL DS    BL1
S99WTDSN EQU   S99FLG21+0
S99NORES EQU   S99FLG21+0
S99WTUNT EQU   S99FLG21+0
S99OFFLN EQU   S99FLG21+0
S99TIONQ EQU   S99FLG21+0
S99CATLG EQU   S99FLG21+0
S99MOUNT EQU   S99FLG21+0
         ORG   S99FLAG2+1
S99FLG22 DS    CL1
         ORG   S99FLG22
S99UDEVT DS    BL1
S99PCINT EQU   S99FLG22+0
         ORG   S99FLAG2+2
S99FLG23 DS    CL1
S99FLG24 DS    CL1
         ORG   S99RB+20
LNKEXC   DS    CL8
         ORG   LNKEXC
LNKEXC01 DS    CL1
LNKEXC02 DS    AL3
LNKEXC03 DS    CL1
LNKEXC04 DS    AL3
         ORG   LNKEXC+8
TYPELINE DS    BL1
         DS    CL3
WTOCONTA DS    CL776
         ORG   WTOCONTA
WCINIT   DS    AL4
         ORG   WTOCONTA+776
BLDAREA  DS    CL256
         ORG   BLDAREA
BLDLEN   DS    AL1
BLDLINE  DS    CL255
         ORG   BLDAREA+256
FCFLAGS  DS    BL1
         ORG   FCFLAGS
STATUS   DS    BL1
OPTIONS  EQU   FCFLAGS+0
PARSERR  EQU   FCFLAGS+0
         ORG   FCFLAGS+1
UNPKAREA DS    CL7
CVDAREA  DS    CL8
TIME     DS    CL4
RTCTCOPY DS    CL16
TEXTLIST DS    CL12
         ORG   TEXTLIST
TUP3     DS    AL4
         ORG   TUP3
TULSTE2  DS    BL1
         ORG   TEXTLIST+4
TUP1     DS    AL4
TUP2     DS    AL4
         ORG   TUP2
TULSTEND DS    BL1
         ORG   TEXTLIST+12
TU1      DS    CL17
         ORG   TU1
TU1KEY   DS    CL2
TU1NUM   DS    FL2
TU1LNG   DS    FL2
TU1DSN   DS    CL11
         ORG   TU1+17
         DS    CL1
TU2      DS    CL7
         ORG   TU2
@NM00075 DS    CL2
@NM00076 DS    FL2
@NM00077 DS    FL2
@NM00078 DS    BL1
         ORG   TU2+7
         DS    CL1
TU3      DS    CL14
         ORG   TU3
TU3KEY   DS    CL2
@NM00079 DS    FL2
DDNLEN   DS    FL2
DDN      DS    CL8
         ORG   TU3+14
DSTABLE  DS    CL105
         ORG   DSTABLE+0
NAME     DS    CL3
         ORG   NAME+0
DSNNAME  DS    CL2
@NM00062 DS    CL1
         ORG   DSTABLE+3
MSGBITS  DS    BL2
         ORG   MSGBITS+0
AVAIL    DS    BL1
FULL     EQU   MSGBITS+0
TAPE     EQU   MSGBITS+0
DASD     EQU   MSGBITS+0
DYNALERR EQU   MSGBITS+0
INVLDHDR EQU   MSGBITS+0
OPENERR  EQU   MSGBITS+0
READERRR EQU   MSGBITS+0
TITLEOK  DS    BL1
         ORG   DSTABLE+5
TITLE    DS    CL100
         ORG   DSTABLE+1050
IEECB910 CSECT
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
@CV01998 DC    V(IEECB912)
@CA02042 DC    A(CNTL856)
@CA02043 DC    A(CNTL857)
@CA02044 DC    A(SMDATA)
@CA02045 DC    A(OVERMODE)
@CA02046 DC    A(NODUMPS)
@CA02047 DC    A(ADDOPTS)
@CA02048 DC    A(ADDNOOPT)
@CA02049 DC    A(ADDPLIB)
@CA02050 DC    A(NOPDATA)
@CA02051 DC    A(NOSDATA)
@CA02052 DC    A(PDATA)
@CA02053 DC    A(SDATA)
@CA02054 DC    A(SVCDATA)
@CA02055 DC    A(LABEL856)
@CA02056 DC    A(DATA856)
@CA02062 DC    A(DUMPTYPE)
         DS    0D
@CC02202 DC    C'OPTIONS '
@CC02201 DC    C'STATUS '
@CC02196 DC    C'DUMP '
@CC02198 DC    C'DUMP,'
@CC02197 DC    C'D '
@CC02199 DC    C'S '
@CC02200 DC    C'O '
@CB00038 DC    X'0001'
@CB02071 DC    X'0000'
@CB00302 DC    X'01'
@CB02003 DC    X'FF'
@CB02263 DC    B'1111111111111100'
CB860CMD DS    CL7
         ORG   CB860CMD
@NM00055 DC    AL1(6)
@NM00056 DC    CL6'D DUMP'
         ORG   CB860CMD+7
         DS    CL2
LNKLST   DS    CL8
         ORG   LNKLST
LNKLST01 DC    X'00'
LNKLST02 DC    AL3(NAME503D)
LNKLST03 DC    X'00'
LNKLST04 DC    AL3(0)
         ORG   LNKLST+8
NAME503D DC    CL8'IEE0503D'
NAME860  DC    CL8'IEECB860'
TU1LIST  DS    CL17
         ORG   TU1LIST
@NM00063 DC    X'0002'
@NM00064 DC    H'1'
@NM00065 DC    H'11'
@NM00066 DC    CL11'SYS1.DUMP00'
         ORG   TU1LIST+17
         DS    CL1
TU2LIST  DS    CL7
         ORG   TU2LIST
@NM00067 DC    X'0004'
@NM00068 DC    H'1'
@NM00069 DC    H'1'
@NM00070 DC    X'08'
         ORG   TU2LIST+7
         DS    CL1
TU3LIST  DS    CL14
         ORG   TU3LIST
@NM00071 DC    X'0055'
@NM00072 DC    H'1'
@NM00073 DC    H'8'
@NM00074 DC    CL8'        '
         ORG   TU3LIST+14
PATCHLOC DC    CL256'*** PATCHAREA FOR IEECB910.  256 BYTES LONG. ***'
IEECB910 CSECT
TMINST TM 0(BYTEREG),0
IEECB910 CSECT
DCBLIST  DCB                   DSORG=PS,BLKSIZE=4104,LRECL=4104,NCP=1, *
               BUFNO=1,DEVD=DA,EODAD=EODFOUND,MACRF=R,RECFM=F,         *
               SYNAD=READERR
DCBLEN   DC    A(DCBLEN-DCBLIST)
         SPACE 2
OPENLIST OPEN  (,(INPUT)),MF=L
OPENLEN  DC    A(OPENLEN-OPENLIST)
         SPACE 2
CLOSLIST CLOSE (,LEAVE),MF=L
CLOSLEN  DC    A(CLOSLEN-CLOSLIST)
         SPACE 2
READLIST READ  READECBL,SF,MF=L
READLEN  DC    A(READLEN-READLIST)
@DATD    DSECT
DCBEXEC  DCB                   DSORG=PS,BLKSIZE=4104,LRECL=4104,NCP=1, *
               BUFNO=1,DEVD=DA,EODAD=EODFOUND,MACRF=R,RECFM=F,         *
               SYNAD=READERR
         SPACE 2
OPENEXEC OPEN  (,(INPUT)),MF=L
         SPACE 2
CLOSEXEC CLOSE (,LEAVE),MF=L
         SPACE 2
READEXEC READ  READECB,SF,MF=L
BUFFER   DS    CL4104
@DATD    DSECT
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
IEECB910 CSECT
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
ENT      EQU   @04
BYTE     EQU   @05
DT       EQU   @04
XSAPTR   EQU   @02
WPLPTR   EQU   @06
R1       EQU   @01
R0       EQU   @00
R15      EQU   @15
RETCODE  EQU   @15
R14      EQU   @14
READCNT  EQU   @03
R13      EQU   @13
MSGPTR   EQU   @03
NEWPTR   EQU   @02
TXTPTR   EQU   @08
OPTPTR   EQU   @03
BITREG   EQU   @10
BYTEREG  EQU   @06
GPR00P   EQU   @00
GPR01P   EQU   @01
GPR15P   EQU   @15
         EXTRN CNTL856
         EXTRN CNTL857
         EXTRN SMDATA
         EXTRN OVERMODE
         EXTRN NODUMPS
         EXTRN ADDOPTS
         EXTRN ADDNOOPT
         EXTRN ADDPLIB
         EXTRN NOPDATA
         EXTRN NOSDATA
         EXTRN PDATA
         EXTRN SDATA
         EXTRN SVCDATA
         EXTRN LABEL856
         EXTRN DATA856
         EXTRN DUMPTYPE
PSA      EQU   0
FLCRNPSW EQU   PSA
FLCROPSW EQU   PSA+8
FLCICCW2 EQU   PSA+16
FLCCVT   EQU   FLCICCW2
PSAEEPSW EQU   PSA+132
PSAESPSW EQU   PSA+136
FLCSVILC EQU   PSAESPSW+1
PSAEPPSW EQU   PSA+140
FLCPIILC EQU   PSAEPPSW+1
FLCPICOD EQU   PSAEPPSW+2
PSAPICOD EQU   FLCPICOD+1
FLCTEA   EQU   PSAEPPSW+4
FLCPER   EQU   PSA+152
FLCMCLA  EQU   PSA+168
FLCIOEL  EQU   FLCMCLA+4
FLCIOA   EQU   FLCMCLA+16
FLCFSA   EQU   FLCMCLA+80
PSASUPER EQU   PSA+552
PSASUP1  EQU   PSASUPER
PSASUP2  EQU   PSASUPER+1
PSASUP3  EQU   PSASUPER+2
PSASUP4  EQU   PSASUPER+3
PSACLHT  EQU   PSA+640
PSALKSA  EQU   PSA+696
PSAHLHI  EQU   PSA+760
PSADSSFL EQU   PSA+836
PSADSSF1 EQU   PSADSSFL
PSADSSF3 EQU   PSADSSFL+2
PSADSSF4 EQU   PSADSSFL+3
PSARSVT  EQU   PSA+896
S99TUPL  EQU   0
S99TUPTR EQU   S99TUPL
S99TUP   EQU   0
S99TUNIT EQU   0
S99TUENT EQU   S99TUNIT+4
S99TUFLD EQU   0
CVTMAP   EQU   0
CVTDAR   EQU   CVTMAP+72
CVTFLGS1 EQU   CVTDAR
CVTDCB   EQU   CVTMAP+116
CVTIOQET EQU   CVTMAP+120
CVTIERLC EQU   CVTMAP+144
CVTHEAD  EQU   CVTMAP+160
CVTSV76C EQU   CVTHEAD
CVTOPTA  EQU   CVTMAP+182
CVTOPTB  EQU   CVTMAP+183
CVTGTF   EQU   CVTMAP+236
CVTGTFST EQU   CVTGTF
CVTGTFS  EQU   CVTGTFST
CVTSTATE EQU   CVTGTFST
CVTTMODE EQU   CVTGTFST
CVTFORM  EQU   CVTGTFST
CVTAQAVT EQU   CVTMAP+240
CVTTCMFG EQU   CVTAQAVT
CVTVOLM2 EQU   CVTMAP+244
CVTTATA  EQU   CVTVOLM2
CVTTSKS  EQU   CVTTATA
CVTVOLF2 EQU   CVTTSKS
CVTTAT   EQU   CVTTATA+1
CVTATER  EQU   CVTMAP+248
CVTEXT1  EQU   CVTMAP+252
CVTPURG  EQU   CVTMAP+260
CVTQMSG  EQU   CVTMAP+268
CVTDMSR  EQU   CVTMAP+272
CVTRSV37 EQU   CVTDMSR
CVTDMSRF EQU   CVTRSV37
CVTERPV  EQU   CVTMAP+316
CVTINTLA EQU   CVTMAP+320
CVTAPF   EQU   CVTMAP+324
CVTEXT2  EQU   CVTMAP+328
CVTHJES  EQU   CVTMAP+332
CVTPGSIA EQU   CVTMAP+348
CVTA1F1  EQU   CVTMAP+356
CVTSYSK  EQU   CVTMAP+357
CVTVOLM1 EQU   CVTMAP+380
CVTVOLF1 EQU   CVTVOLM1
CVTXTNT1 EQU   0
CVTXTNT2 EQU   0
CVTDSSV  EQU   CVTXTNT2
CVTFLGBT EQU   CVTXTNT2+5
CVTQID   EQU   CVTXTNT2+24
CVTRV400 EQU   CVTXTNT2+52
CVTRV409 EQU   CVTXTNT2+53
CVTATCVT EQU   CVTXTNT2+64
CVTRV429 EQU   CVTXTNT2+84
CVTRV438 EQU   CVTXTNT2+85
CVTRV457 EQU   CVTXTNT2+112
CVTRV466 EQU   CVTXTNT2+113
CVTFIX   EQU   0
CVTRELNO EQU   CVTFIX+252
CHAIN    EQU   0
CHFLG    EQU   CHAIN+4
CHSTS    EQU   CHFLG+2
CHFC     EQU   CHSTS
CHACT    EQU   CHFLG+3
CHIFY    EQU   CHACT
CHKEY    EQU   CHAIN+8
CHPARM   EQU   CHKEY
CHPKE    EQU   CHAIN+28
CHUCMP   EQU   CHAIN+29
CHTJID   EQU   CHAIN+30
CHPROCSN EQU   CHAIN+32
CHACT1   EQU   CHPROCSN+3
CHASM    EQU   CHAIN+40
CHCIBP   EQU   CHASM+4
CHRGNSZ  EQU   CHASM+8
CHSTEP   EQU   CHASM+24
CHSWT    EQU   CHSTEP
CHSHORT  EQU   CHASM+32
RTCT     EQU   0
RTCTPLIB EQU   RTCT+4
RTCTSAP  EQU   RTCTPLIB
RTCTSAP1 EQU   RTCTSAP
RTCTSAP2 EQU   RTCTSAP+1
RTCTSAP3 EQU   RTCTSAP+2
RTCTSUP  EQU   RTCTPLIB+4
RTCTSUP1 EQU   RTCTSUP
RTCTSUP2 EQU   RTCTSUP+1
RTCTSUP3 EQU   RTCTSUP+2
RTCTSYD  EQU   RTCTPLIB+8
RTCTSY01 EQU   RTCTSYD
RTCTSDDS EQU   RTCT+36
RTCTDSNM EQU   RTCTSDDS
RTCTFLG  EQU   RTCTSDDS+3
RTCTDSST EQU   RTCTFLG
RTCTDSUS EQU   RTCTFLG
RTCTDETP EQU   RTCTFLG
RTCTSDPL EQU   RTCT+156
RTCTRFLG EQU   RTCT+176
RTCTERID EQU   RTCT+224
RTCTOPT  EQU   RTCT+236
RTCTASO  EQU   RTCT+252
RTCTASO1 EQU   RTCTASO
RTCTASO2 EQU   RTCTASO+1
RTCTSDI  EQU   RTCT+254
RTCTSDF  EQU   RTCT+264
RTCTSDF1 EQU   RTCTSDF
RTCTSDF2 EQU   RTCTSDF+1
RTCTR2D2 EQU   RTCTSDF+2
RTCTC3PO EQU   RTCTSDF+3
RTCTSDF3 EQU   RTCT+268
RTCTSDF4 EQU   RTCTSDF3+2
RTCTMOPT EQU   0
RTCTMSAO EQU   RTCTMOPT
RTCTSASD EQU   RTCTMSAO
RTCTSAO1 EQU   RTCTSASD
RTCTSAO2 EQU   RTCTSASD+1
RTCTSAPD EQU   RTCTMSAO+2
RTCTSAO3 EQU   RTCTSAPD
RTCTSAO4 EQU   RTCTSAPD+1
RTCTSAMG EQU   RTCTSAO4
RTCTMSUO EQU   RTCTMOPT+4
RTCTSUSD EQU   RTCTMSUO
RTCTSUO1 EQU   RTCTSUSD
RTCTSUO2 EQU   RTCTSUSD+1
RTCTSUPD EQU   RTCTMSUO+2
RTCTSUO3 EQU   RTCTSUPD
RTCTSUO4 EQU   RTCTSUPD+1
RTCTSUMG EQU   RTCTSUO4
RTCTMSYO EQU   RTCTMOPT+8
RTCTSD01 EQU   RTCTMSYO
RTCTSD04 EQU   RTCTMSYO+3
RTCTSMMG EQU   RTCTSD04
RTCTMSDO EQU   RTCTMOPT+12
RTCTSDOD EQU   RTCTMSDO
RTCTSDO1 EQU   RTCTSDOD
RTCTSDO2 EQU   RTCTSDOD+1
RTCTSDO3 EQU   RTCTMSDO+2
RTCTSDO4 EQU   RTCTMSDO+3
RTCTSDMG EQU   RTCTSDO4
XSAMAP   EQU   0
XASVRB   EQU   XSAMAP
XSA      EQU   XASVRB
XAD      EQU   XSA+4
XAX      EQU   XASVRB+8
@NM00046 EQU   XASVRB+16
XAE      EQU   @NM00046
@NM00047 EQU   XASVRB+20
XAV      EQU   XASVRB+24
XAS      EQU   XASVRB+32
XAU      EQU   XASVRB+40
XAA      EQU   XASVRB+42
XASAVLOC EQU   XSAMAP+48
XASAVLOX EQU   XASAVLOC
XASAVSTD EQU   XSAMAP+64
XASAVSTR EQU   XASAVSTD
@NM00049 EQU   XSAMAP+136
XACMFLGS EQU   @NM00049
XACMFLGA EQU   XACMFLGS
XACMFLG1 EQU   XACMFLGA
XACMFLG2 EQU   XACMFLGA+1
XACMFLGB EQU   XACMFLGS+2
XAWORK   EQU   XSAMAP+152
EEXSAS01 EQU   0
EEXSAS02 EQU   0
XADUSWIT EQU   EEXSAS02
EEXSAS03 EQU   0
XASDS    EQU   EEXSAS03+2
@NM00051 EQU   EEXSAS03+4
EEXSAS04 EQU   0
XAXMASK  EQU   EEXSAS04
EEXSAS05 EQU   0
XASOPCOD EQU   EEXSAS05
XASWITCH EQU   EEXSAS05+1
XALTCHG  EQU   XASWITCH
XACOMPMS EQU   XASWITCH
XARESV   EQU   EEXSAS05+2
EEXSAS06 EQU   0
XAAVRANG EQU   EEXSAS06
XAAVRNG2 EQU   EEXSAS06+1
WPLRF    EQU   0
WPLRPTR  EQU   WPLRF
WPL      EQU   0
WPLLGH   EQU   WPL
WPLMCSF  EQU   WPL+2
WPLMCSF1 EQU   WPLMCSF
WPLMCSF2 EQU   WPLMCSF+1
WPLTXT   EQU   WPL+4
WPLFLGS  EQU   0
WPLDESC  EQU   WPLFLGS
WPLDESC1 EQU   WPLDESC
WPLDESC2 EQU   WPLDESC+1
WPLROUT  EQU   WPLFLGS+2
WPLROUT1 EQU   WPLROUT
WPLROUT2 EQU   WPLROUT+1
WPLMSGTY EQU   WPLFLGS+4
WPLMSGT1 EQU   WPLMSGTY
WPLMSGT2 EQU   WPLMSGTY+1
WPLLS01  EQU   0
WPLLTF   EQU   WPLLS01
WPLLTF1  EQU   WPLLTF
WPLAREA  EQU   WPLLS01+2
WPLML    EQU   0
WPLMLLTF EQU   WPLML+2
WPLMLLT1 EQU   WPLMLLTF
SAVEAREA EQU   0
IEECB860 EQU   0
MSGMAP   EQU   0
MSGLEN   EQU   MSGMAP
MSG      EQU   MSGMAP+1
NEWTXT   EQU   0
TXTMAP   EQU   0
TXTLEN   EQU   TXTMAP
TXT      EQU   TXTMAP+1
OPERAND  EQU   0
I001C    EQU   0
I008P    EQU   0
I015F    EQU   0
I015P    EQU   0
I031F    EQU   0
I031P    EQU   0
I256C    EQU   0
X        EQU   0
S99TUFP  EQU   S99TUP
CVTPTR   EQU   FLCCVT
CVTS01   EQU   CVTPGSIA
CVTLPDIA EQU   CVTS01+12
CVTDIRST EQU   CVTLPDIA
CVTSLIDA EQU   CVTS01+24
CVTCTLFG EQU   CVTS01+50
CVTRTMCT EQU   CVTS01+224
CVTRV210 EQU   CVTS01+424
CVTRV219 EQU   CVTS01+425
CVTRV228 EQU   CVTS01+426
CVTRV237 EQU   CVTS01+427
CVTMFRTR EQU   CVTS01+452
CVTRV262 EQU   CVTS01+468
CVTRV271 EQU   CVTS01+469
CVTRV280 EQU   CVTS01+470
CVTRV289 EQU   CVTS01+471
CVTGSDA  EQU   CVTS01+600
PSARSVTE EQU   PSARSVT
CHAINS01 EQU   CHASM
CHBUF    EQU   CHAINS01
CHTYPE   EQU   CHAINS01+124
CHTRSTAT EQU   CHAINS01+125
CHCNID   EQU   CHAINS01+126
CHARID   EQU   CHAINS01+127
CHCSYSO  EQU   CHAINS01+134
@NM00058 EQU   WPLTXT
HH       EQU   @NM00058+8
MM       EQU   @NM00058+11
SS       EQU   @NM00058+14
OPTWORD  EQU   RTCTCOPY
SDATOPTS EQU   OPTWORD
PDATOPTS EQU   OPTWORD+2
OVEROPT  EQU   OPTWORD+3
IGNOROPT EQU   OPTWORD+3
PLIBOPT  EQU   RTCTPLIB
DCBMAP   EQU   DCBEXEC
DCBDDN   EQU   DCBMAP+40
DCBOFLGS EQU   DCBMAP+48
DCBOFOPN EQU   DCBOFLGS
SDHEADER EQU   BUFFER
SDHID    EQU   SDHEADER
SDHRID   EQU   SDHEADER+1
SDHTITLE EQU   SDHEADER+20
FLC      EQU   PSA
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
SDHTOD   EQU   SDHEADER+12
SDHMODNM EQU   SDHEADER+4
SDHASID  EQU   SDHEADER+2
@NM00081 EQU   DCBOFLGS
@NM00080 EQU   DCBMAP
@NM00061 EQU   @NM00058+13
@NM00060 EQU   @NM00058+10
@NM00059 EQU   @NM00058
CHLAST   EQU   CHAINS01+136
CHSPA    EQU   CHAINS01+135
CHUSERID EQU   CHCSYSO
CHJB     EQU   CHCSYSO
CHDUMP   EQU   CHCSYSO
CHQUE    EQU   CHCSYSO
CHHOLD   EQU   CHCSYSO
CHOUT    EQU   CHCSYSO
CHINN    EQU   CHCSYSO
CHALL    EQU   CHCSYSO
CHINC    EQU   CHAINS01+132
CHPEND   EQU   CHAINS01+128
@NM00030 EQU   CHTRSTAT
CHTSL    EQU   CHTRSTAT
CHTS     EQU   CHTRSTAT
CHINITL  EQU   CHTRSTAT
CHINIT   EQU   CHTRSTAT
CHJOBSL  EQU   CHTRSTAT
CHJOBS   EQU   CHTRSTAT
CHDEF    EQU   CHTYPE
CHHIAR   EQU   CHTYPE
CHARSV29 EQU   CHTYPE
CHARSV28 EQU   CHTYPE
CHARSV27 EQU   CHTYPE
CHARSV26 EQU   CHTYPE
CHARSV25 EQU   CHTYPE
CHDSTAT  EQU   CHTYPE
PSARSAV  EQU   PSARSVTE+60
PSARSTK  EQU   PSARSVTE+56
PSAESAV3 EQU   PSARSVTE+52
PSAESTK3 EQU   PSARSVTE+48
PSAESAV2 EQU   PSARSVTE+44
PSAESTK2 EQU   PSARSVTE+40
PSAESAV1 EQU   PSARSVTE+36
PSAESTK1 EQU   PSARSVTE+32
PSAPSAV  EQU   PSARSVTE+28
PSAPSTK  EQU   PSARSVTE+24
PSAMSAV  EQU   PSARSVTE+20
PSAMSTK  EQU   PSARSVTE+16
PSASSAV  EQU   PSARSVTE+12
PSASSTK  EQU   PSARSVTE+8
PSANSTK  EQU   PSARSVTE+4
PSACSTK  EQU   PSARSVTE
CVTRV628 EQU   CVTS01+728
CVTRV627 EQU   CVTS01+724
CVTRV626 EQU   CVTS01+720
CVTRV625 EQU   CVTS01+716
CVTRV624 EQU   CVTS01+712
CVTRV623 EQU   CVTS01+708
CVTRV622 EQU   CVTS01+704
CVTRV621 EQU   CVTS01+700
CVTIHASU EQU   CVTS01+696
CVTSUSP  EQU   CVTS01+692
CVTT6SVC EQU   CVTS01+688
CVTCDAL  EQU   CVTS01+684
CVTTCTL  EQU   CVTS01+680
CVTRSUME EQU   CVTS01+676
CVTJTERM EQU   CVTS01+672
CVTASMRM EQU   CVTS01+668
CVTTCASP EQU   CVTS01+664
CVT0PT03 EQU   CVTS01+660
CVT0PT0E EQU   CVTS01+656
CVTRV609 EQU   CVTS01+652
CVTCGK   EQU   CVTS01+648
CVTRAC   EQU   CVTS01+644
CVTHSM   EQU   CVTS01+640
CVTRV605 EQU   CVTS01+636
CVTRV604 EQU   CVTS01+632
CVTEFF02 EQU   CVTS01+628
CVTCBBR  EQU   CVTS01+624
CVTSSCR  EQU   CVTS01+620
CVTEVENT EQU   CVTS01+616
CVTCRCA  EQU   CVTS01+612
CVTTPIO  EQU   CVTS01+608
CVTADV   EQU   CVTS01+604
CVTGSDAB EQU   CVTGSDA
CVTQV3   EQU   CVTS01+596
CVTQV2   EQU   CVTS01+592
CVTQV1   EQU   CVTS01+588
CVTRPT   EQU   CVTS01+584
CVTSSRB  EQU   CVTS01+580
CVTCSDRL EQU   CVTS01+576
CVTEXP1  EQU   CVTS01+572
CVTRMPMT EQU   CVTS01+568
CVTRMPTT EQU   CVTS01+564
CVTVPSA  EQU   CVTS01+560
CVTVSTOP EQU   CVTS01+556
CVTGTFR8 EQU   CVTS01+552
CVTQUIT  EQU   CVTS01+548
CVTVACR  EQU   CVTS01+544
CVTWTCB  EQU   CVTS01+540
CVTSTPRS EQU   CVTS01+536
CVT0PT02 EQU   CVTS01+532
CVTDARCM EQU   CVTS01+528
CVTIRECM EQU   CVTS01+524
CVTJRECM EQU   CVTS01+520
CVTVEMS0 EQU   CVTS01+516
CVTSPFRR EQU   CVTS01+512
CVTRLSTG EQU   CVTS01+508
CVT0TC0A EQU   CVTS01+504
CVTGMBR  EQU   CVTS01+500
CVTLFRM  EQU   CVTS01+496
CVTRMBR  EQU   CVTS01+492
CVTVIOP  EQU   CVTS01+488
CVTRV307 EQU   CVTS01+486
CVTRV306 EQU   CVTS01+484
CVTRV305 EQU   CVTS01+482
CVTRV304 EQU   CVTS01+480
CVTRV303 EQU   CVTS01+478
CVTRV302 EQU   CVTS01+476
CVTTRCA  EQU   CVTS01+472
CVTRV297 EQU   CVTRV289
CVTRV296 EQU   CVTRV289
CVTRV295 EQU   CVTRV289
CVTRV294 EQU   CVTRV289
CVTRV293 EQU   CVTRV289
CVTRV292 EQU   CVTRV289
CVTRV291 EQU   CVTRV289
CVTRV290 EQU   CVTRV289
CVTRV288 EQU   CVTRV280
CVTRV287 EQU   CVTRV280
CVTRV286 EQU   CVTRV280
CVTRV285 EQU   CVTRV280
CVTRV284 EQU   CVTRV280
CVTRV283 EQU   CVTRV280
CVTRV282 EQU   CVTRV280
CVTRV281 EQU   CVTRV280
CVTRV279 EQU   CVTRV271
CVTRV278 EQU   CVTRV271
CVTRV277 EQU   CVTRV271
CVTRV276 EQU   CVTRV271
CVTRV275 EQU   CVTRV271
CVTRV274 EQU   CVTRV271
CVTRV273 EQU   CVTRV271
CVTRV272 EQU   CVTRV271
CVTRV270 EQU   CVTRV262
CVTRV269 EQU   CVTRV262
CVTRV268 EQU   CVTRV262
CVTRV267 EQU   CVTRV262
CVTRV266 EQU   CVTRV262
CVTRV265 EQU   CVTRV262
CVTRV264 EQU   CVTRV262
CVTRV263 EQU   CVTRV262
CVTVFP   EQU   CVTS01+464
CVTVSI   EQU   CVTS01+460
CVTVPSIB EQU   CVTS01+456
CVTMFACT EQU   CVTMFRTR
CVTMFCTL EQU   CVTS01+448
CVTPVBP  EQU   CVTS01+444
CVTPWI   EQU   CVTS01+440
CVTRV254 EQU   CVTS01+438
CVTRV253 EQU   CVTS01+436
CVTRV252 EQU   CVTS01+434
CVTRV251 EQU   CVTS01+433
CVTRV250 EQU   CVTS01+432
CVTRV249 EQU   CVTS01+431
CVTRV248 EQU   CVTS01+430
CVTRV247 EQU   CVTS01+429
CVTRV246 EQU   CVTS01+428
CVTRV245 EQU   CVTRV237
CVTRV244 EQU   CVTRV237
CVTRV243 EQU   CVTRV237
CVTRV242 EQU   CVTRV237
CVTRV241 EQU   CVTRV237
CVTRV240 EQU   CVTRV237
CVTRV239 EQU   CVTRV237
CVTRV238 EQU   CVTRV237
CVTRV236 EQU   CVTRV228
CVTRV235 EQU   CVTRV228
CVTRV234 EQU   CVTRV228
CVTRV233 EQU   CVTRV228
CVTRV232 EQU   CVTRV228
CVTRV231 EQU   CVTRV228
CVTRV230 EQU   CVTRV228
CVTRV229 EQU   CVTRV228
CVTRV227 EQU   CVTRV219
CVTRV226 EQU   CVTRV219
CVTRV225 EQU   CVTRV219
CVTRV224 EQU   CVTRV219
CVTRV223 EQU   CVTRV219
CVTRV222 EQU   CVTRV219
CVTRV221 EQU   CVTRV219
CVTRV220 EQU   CVTRV219
CVTRV218 EQU   CVTRV210
CVTRV217 EQU   CVTRV210
CVTRV216 EQU   CVTRV210
CVTRV215 EQU   CVTRV210
CVTRV214 EQU   CVTRV210
CVTRV213 EQU   CVTRV210
CVTRV212 EQU   CVTRV210
CVTRV211 EQU   CVTRV210
CVTLCCAT EQU   CVTS01+420
CVTPCCAT EQU   CVTS01+416
CVTIPCRP EQU   CVTS01+412
CVTIPCRI EQU   CVTS01+408
CVTIPCDS EQU   CVTS01+404
CVTAIDVT EQU   CVTS01+400
CVTSSAP  EQU   CVTS01+396
CVTEHCIR EQU   CVTS01+392
CVTEHDEF EQU   CVTS01+388
CVTDAIR  EQU   CVTS01+384
CVTPERFM EQU   CVTS01+380
CVT044R2 EQU   CVTS01+376
CVTFETCH EQU   CVTS01+372
CVTRSTWD EQU   CVTS01+368
CVTSPOST EQU   CVTS01+364
CVTIOBP  EQU   CVTS01+360
CVTASMVT EQU   CVTS01+356
CVTRECRQ EQU   CVTS01+352
CVTWSAC  EQU   CVTS01+348
CVTRV149 EQU   CVTS01+344
CVTWSAL  EQU   CVTS01+340
CVTSPSA  EQU   CVTS01+336
CVTGLMN  EQU   CVTS01+332
CVTVEAC0 EQU   CVTS01+328
CVT062R1 EQU   CVTS01+324
CVTRPOST EQU   CVTS01+320
CVTDQIQE EQU   CVTS01+316
CVTCSD   EQU   CVTS01+312
CVTLKRMA EQU   CVTS01+308
CVTRSPIE EQU   CVTS01+304
CVTRENQ  EQU   CVTS01+300
CVTLQCB  EQU   CVTS01+296
CVTFQCB  EQU   CVTS01+292
CVTQCS01 EQU   CVTS01+288
CVTAPFT  EQU   CVTS01+284
CVTPARRL EQU   CVTS01+280
CVTVWAIT EQU   CVTS01+276
CVTGSPL  EQU   CVTS01+272
CVTLSMQ  EQU   CVTS01+268
CVTGSMQ  EQU   CVTS01+264
CVTEXPRO EQU   CVTS01+260
CVTOPCTP EQU   CVTS01+256
CVTSIC   EQU   CVTS01+252
CVTTPIOS EQU   CVTS01+248
CVTRTMS  EQU   CVTS01+244
CVTSDBF  EQU   CVTS01+240
CVTSCBP  EQU   CVTS01+236
CVTSDMP  EQU   CVTS01+232
CVTSV60  EQU   CVTS01+228
CVTASCBL EQU   CVTS01+220
CVTASCBH EQU   CVTS01+216
CVTGDA   EQU   CVTS01+212
CVTASVT  EQU   CVTS01+208
CVTVVMDI EQU   CVTS01+204
CVTAQTOP EQU   CVTS01+200
CVTIOSCS EQU   CVTS01+196
CVTSDRM  EQU   CVTS01+192
CVTOPTE  EQU   CVTS01+188
CVTSTXU  EQU   CVTS01+184
CVTQUIS  EQU   CVTS01+180
CVTPARS  EQU   CVTS01+176
CVTS1EE  EQU   CVTS01+172
CVTFRAS  EQU   CVTS01+168
CVTQSAS  EQU   CVTS01+164
CVTCRAS  EQU   CVTS01+160
CVTCRMN  EQU   CVTS01+156
CVTDELCP EQU   CVTS01+152
CVTFRECL EQU   CVTS01+148
CVTGETCL EQU   CVTS01+144
CVTBLDCP EQU   CVTS01+140
CVTAUTHL EQU   CVTS01+136
CVTSCAN  EQU   CVTS01+132
CVTRV144 EQU   CVTS01+130
CVTMAXMP EQU   CVTS01+128
CVTSTCK  EQU   CVTS01+124
CVTRV139 EQU   CVTS01+123
CVTDSSAC EQU   CVTS01+122
CVTRV513 EQU   CVTS01+121
CVTIOSPL EQU   CVTS01+120
CVTPTGT  EQU   CVTS01+116
CVTCSPIE EQU   CVTS01+112
CVTSMFEX EQU   CVTS01+108
CVTOLT0A EQU   CVTS01+104
CVTSRBRT EQU   CVTS01+100
CVTPUTL  EQU   CVTS01+96
CVTASCRL EQU   CVTS01+92
CVTASCRF EQU   CVTS01+88
CVTRV326 EQU   CVTS01+84
CVTRV325 EQU   CVTS01+80
CVTRV324 EQU   CVTS01+76
CVT0VL01 EQU   CVTS01+72
CVTSHRVM EQU   CVTS01+68
CVTRV332 EQU   CVTS01+64
CVTTAS   EQU   CVTS01+60
CVTRSCN  EQU   CVTS01+56
CVTTRAC2 EQU   CVTS01+54
CVTTRACE EQU   CVTS01+52
CVTAPG   EQU   CVTS01+51
CVTSDTRC EQU   CVTCTLFG
CVTGTRCE EQU   CVTCTLFG
CVTNOMP  EQU   CVTCTLFG
CVTRSV79 EQU   CVTCTLFG
CVTDSTAT EQU   CVTCTLFG
CVTRSV78 EQU   CVTCTLFG
CVTRV333 EQU   CVTCTLFG
CVTRV323 EQU   CVTCTLFG
CVTSPVLK EQU   CVTS01+49
CVTRSV77 EQU   CVTS01+48
CVTRV331 EQU   CVTS01+44
CVTRV330 EQU   CVTS01+40
CVTRV329 EQU   CVTS01+36
CVTRV328 EQU   CVTS01+32
CVTRV322 EQU   CVTS01+28
CVTSLID  EQU   CVTSLIDA+1
CVTSYLK  EQU   CVTSLIDA
CVTRV321 EQU   CVTS01+20
CVTRV320 EQU   CVTS01+16
CVTLPDIR EQU   CVTLPDIA+1
CVTRSV69 EQU   CVTDIRST
CVTRSV68 EQU   CVTDIRST
CVTRSV67 EQU   CVTDIRST
CVTRSV66 EQU   CVTDIRST
CVTRSV65 EQU   CVTDIRST
CVTRSV64 EQU   CVTDIRST
CVTRSV63 EQU   CVTDIRST
CVTDICOM EQU   CVTDIRST
CVTPVTP  EQU   CVTS01+8
CVTLPDSR EQU   CVTS01+4
CVTGETL  EQU   CVTS01
WPLMLTXT EQU   WPLML+4
WPLMLLT2 EQU   WPLMLLTF+1
WPLRSV24 EQU   WPLMLLT1
WPLRSV23 EQU   WPLMLLT1
WPLRSV22 EQU   WPLMLLT1
WPLRSV21 EQU   WPLMLLT1
WPLMLLTD EQU   WPLMLLT1
WPLMLLTC EQU   WPLMLLT1
WPLMLLTB EQU   WPLMLLT1
WPLMLLTA EQU   WPLMLLT1
WPLMLLEN EQU   WPLML+1
WPLML0   EQU   WPLML
WPLLINES EQU   WPLLS01+3
WPLLTF2  EQU   WPLLTF+1
WPLRSV20 EQU   WPLLTF1
WPLRSV19 EQU   WPLLTF1
WPLRSV18 EQU   WPLLTF1
WPLRSV17 EQU   WPLLTF1
WPLLTFD  EQU   WPLLTF1
WPLLTFC  EQU   WPLLTF1
WPLLTFB  EQU   WPLLTF1
WPLLTFA  EQU   WPLLTF1
WPLQID   EQU   WPLFLGS+6
WPLRSV32 EQU   WPLMSGT2
WPLRSV31 EQU   WPLMSGT2
WPLRSV30 EQU   WPLMSGT2
WPLRSV29 EQU   WPLMSGT2
WPLRSV28 EQU   WPLMSGT2
WPLRSV27 EQU   WPLMSGT2
WPLRSV26 EQU   WPLMSGT2
WPLRSV25 EQU   WPLMSGT2
WPLRSV16 EQU   WPLMSGT1
WPLRSV15 EQU   WPLMSGT1
WPLMSGTF EQU   WPLMSGT1
WPLRSV14 EQU   WPLMSGT1
WPLMSGTD EQU   WPLMSGT1
WPLMSGTC EQU   WPLMSGT1
WPLMSGTB EQU   WPLMSGT1
WPLMSGTA EQU   WPLMSGT1
WPLRSV13 EQU   WPLROUT2
WPLROUTO EQU   WPLROUT2
WPLROUTN EQU   WPLROUT2
WPLROUTM EQU   WPLROUT2
WPLROUTL EQU   WPLROUT2
WPLROUTK EQU   WPLROUT2
WPLROUTJ EQU   WPLROUT2
WPLROUTI EQU   WPLROUT2
WPLROUTH EQU   WPLROUT1
WPLROUTG EQU   WPLROUT1
WPLROUTF EQU   WPLROUT1
WPLROUTE EQU   WPLROUT1
WPLROUTD EQU   WPLROUT1
WPLROUTC EQU   WPLROUT1
WPLROUTB EQU   WPLROUT1
WPLROUTA EQU   WPLROUT1
WPLRSV12 EQU   WPLDESC2
WPLRSV11 EQU   WPLDESC2
WPLRSV10 EQU   WPLDESC2
WPLRSV09 EQU   WPLDESC2
WPLRSV08 EQU   WPLDESC2
WPLRSV07 EQU   WPLDESC2
WPLDESCJ EQU   WPLDESC2
WPLDESCI EQU   WPLDESC2
WPLDESCH EQU   WPLDESC1
WPLDESCG EQU   WPLDESC1
WPLDESCF EQU   WPLDESC1
WPLDESCE EQU   WPLDESC1
WPLDESCD EQU   WPLDESC1
WPLDESCC EQU   WPLDESC1
WPLDESCB EQU   WPLDESC1
WPLDESCA EQU   WPLDESC1
WPLTXTL  EQU   WPLTXT+125
@NM00054 EQU   WPLTXT
WPLRSV05 EQU   WPLMCSF2
WPLRSV04 EQU   WPLMCSF2
WPLMCSFN EQU   WPLMCSF2
WPLRSV03 EQU   WPLMCSF2
WPLNOWTP EQU   WPLMCSF2
WPLMCSFK EQU   WPLMCSF2
WPLMCSFJ EQU   WPLMCSF2
WPLMCSFI EQU   WPLMCSF2
WPLMCSFH EQU   WPLMCSF1
WPLMCSFG EQU   WPLMCSF1
WPLMCSFF EQU   WPLMCSF1
WPLMCSFE EQU   WPLMCSF1
WPLMCSFD EQU   WPLMCSF1
WPLMCSFC EQU   WPLMCSF1
WPLMCSFB EQU   WPLMCSF1
WPLMCSFA EQU   WPLMCSF1
WPLRECB  EQU   WPLRF+4
WPLRPTRA EQU   WPLRPTR+1
WPLRLN   EQU   WPLRPTR
XAARNG16 EQU   XAAVRNG2
XAARNG15 EQU   XAAVRNG2
XAARNG14 EQU   XAAVRNG2
XAARNG13 EQU   XAAVRNG2
XAARNG12 EQU   XAAVRNG2
XAARNG11 EQU   XAAVRNG2
XAARNG10 EQU   XAAVRNG2
XAARNG9  EQU   XAAVRNG2
XAARNG8  EQU   XAAVRANG
XAARNG7  EQU   XAAVRANG
XAARNG6  EQU   XAAVRANG
XAARNG5  EQU   XAAVRANG
XAARNG4  EQU   XAAVRANG
XAARNG3  EQU   XAAVRANG
XAARNG2  EQU   XAAVRANG
XAARNG1  EQU   XAAVRANG
XARTCODE EQU   EEXSAS05+6
XACMDATH EQU   EEXSAS05+4
XALTPTR  EQU   EEXSAS05+3
XACRT2   EQU   XARESV
XACENDCK EQU   XARESV
XARES1   EQU   XASWITCH
XASMF44  EQU   XASWITCH
XASMF42  EQU   XASWITCH
XAHRDREQ EQU   XASWITCH
XASTHDCP EQU   XACOMPMS
XAINHDCP EQU   XALTCHG
XAHRDCMD EQU   XASWITCH
XAROUT   EQU   XASWITCH
XALTCON  EQU   XASOPCOD
XACMD    EQU   XASOPCOD
XALTCOM  EQU   XASOPCOD
XARESB   EQU   XASOPCOD
XAOFF    EQU   XASOPCOD
XAON     EQU   XASOPCOD
XARESA   EQU   XASOPCOD
XACON    EQU   XASOPCOD
XAXSACB  EQU   EEXSAS04+4
XAXUTME  EQU   EEXSAS04+2
XAXFREE  EQU   EEXSAS04+1
@NM00053 EQU   XAXMASK
XAXTSL   EQU   XAXMASK
XAXTS    EQU   XAXMASK
@NM00052 EQU   XAXMASK
XAXJOBSL EQU   XAXMASK
XAXJOBS  EQU   XAXMASK
XASOPTR  EQU   @NM00051+1
XASTSAVE EQU   @NM00051
XASPLS3  EQU   EEXSAS03+3
XASSDS8  EQU   XASDS
XASSDS7  EQU   XASDS
XASSDS6  EQU   XASDS
XASSDS5  EQU   XASDS
XASSDS4  EQU   XASDS
XASSDS3  EQU   XASDS
XASSDS2  EQU   XASDS
XASSDS1  EQU   XASDS
XASDID   EQU   EEXSAS03+1
XASCID   EQU   EEXSAS03
XACAHOLD EQU   EEXSAS02+2
XADRES1  EQU   EEXSAS02+1
XAUBLANK EQU   XADUSWIT
XAOUNIT  EQU   XADUSWIT
XAIOCOMP EQU   XADUSWIT
XARES3   EQU   XADUSWIT
XAUDVC   EQU   XADUSWIT
XARES2   EQU   XADUSWIT
XAIPAREN EQU   XADUSWIT
XAXPAREN EQU   XADUSWIT
@NM00050 EQU   EEXSAS01+44
XAT      EQU   EEXSAS01+20
XAF      EQU   EEXSAS01+12
XAI      EQU   EEXSAS01+4
XAH      EQU   EEXSAS01
XAWORKH  EQU   XAWORK+28
XAWORKG  EQU   XAWORK+24
XAWORKF  EQU   XAWORK+20
XAWORKE  EQU   XAWORK+16
XAWORKD  EQU   XAWORK+12
XAWORKC  EQU   XAWORK+8
XAWORKB  EQU   XAWORK+4
XAWORKA  EQU   XAWORK
XARESRZ  EQU   @NM00049+12
XARESRY  EQU   @NM00049+8
XARESRX  EQU   @NM00049+4
XACMFLG4 EQU   XACMFLGB+1
XACMFLG3 EQU   XACMFLGB
XACMF28  EQU   XACMFLG2
XACMF27  EQU   XACMFLG2
XACMF26  EQU   XACMFLG2
XACMF25  EQU   XACMFLG2
XACMF24  EQU   XACMFLG2
XACMF23  EQU   XACMFLG2
XACMF22  EQU   XACMFLG2
XACMF21  EQU   XACMFLG2
XACMF18  EQU   XACMFLG1
XACMF17  EQU   XACMFLG1
XACMF16  EQU   XACMFLG1
XACMF15  EQU   XACMFLG1
XACMF14  EQU   XACMFLG1
XACMF13  EQU   XACMFLG1
XACMF12  EQU   XACMFLG1
XACMF11  EQU   XACMFLG1
XASAVSDR EQU   XASAVSTR+68
XASAVSDQ EQU   XASAVSTR+64
XASAVSDP EQU   XASAVSTR+60
XASAVSDO EQU   XASAVSTR+56
XASAVSDN EQU   XASAVSTR+52
XASAVSDM EQU   XASAVSTR+48
XASAVSDL EQU   XASAVSTR+44
XASAVSDK EQU   XASAVSTR+40
XASAVSDJ EQU   XASAVSTR+36
XASAVSDI EQU   XASAVSTR+32
XASAVSDH EQU   XASAVSTR+28
XASAVSDG EQU   XASAVSTR+24
XASAVSDF EQU   XASAVSTR+20
XASAVSDE EQU   XASAVSTR+16
XASAVSDD EQU   XASAVSTR+12
XASAVSDC EQU   XASAVSTR+8
XASAVSDB EQU   XASAVSTR+4
XASAVSDA EQU   XASAVSTR
XASAVLC4 EQU   XASAVLOX+12
XASAVLC3 EQU   XASAVLOX+8
XASAVLC2 EQU   XASAVLOX+4
XASAVLC1 EQU   XASAVLOX
XAK      EQU   XASVRB+44
@NM00048 EQU   XASVRB+41
XAL      EQU   @NM00047+1
XAN      EQU   @NM00047
XAR      EQU   @NM00046+1
XAP      EQU   XSA
RTCTISVC EQU   RTCTSDO4
RTCTSDOV EQU   RTCTSDMG
@NM00045 EQU   RTCTSDO4
@NM00044 EQU   RTCTSDO3
RTCTSDPH EQU   RTCTSDO3
RTCTSDPG EQU   RTCTSDO3
@NM00043 EQU   RTCTSDO2
RTCTSDPD EQU   RTCTSDO2
RTCTSDPC EQU   RTCTSDO2
RTCTSDPB EQU   RTCTSDO2
RTCTSDPA EQU   RTCTSDO2
RTCTSDP9 EQU   RTCTSDO2
RTCTSDP8 EQU   RTCTSDO2
RTCTSDP7 EQU   RTCTSDO1
RTCTSDP6 EQU   RTCTSDO1
RTCTSDP5 EQU   RTCTSDO1
RTCTSDP4 EQU   RTCTSDO1
RTCTSDP3 EQU   RTCTSDO1
RTCTSDP2 EQU   RTCTSDO1
RTCTSDP1 EQU   RTCTSDO1
RTCTSDP0 EQU   RTCTSDO1
RTCTISYM EQU   RTCTSD04
RTCTSMOV EQU   RTCTSMMG
@NM00042 EQU   RTCTSD04
RTCTSD03 EQU   RTCTMSYO+2
RTCTSD02 EQU   RTCTMSYO+1
RTCTSDS7 EQU   RTCTSD01
RTCTSDS6 EQU   RTCTSD01
RTCTSDS5 EQU   RTCTSD01
RTCTSDS4 EQU   RTCTSD01
RTCTSDS3 EQU   RTCTSD01
RTCTSDS2 EQU   RTCTSD01
RTCTSDS1 EQU   RTCTSD01
RTCTSDS0 EQU   RTCTSD01
RTCTISYU EQU   RTCTSUO4
RTCTSUOV EQU   RTCTSUMG
@NM00041 EQU   RTCTSUO4
RTCTSYDF EQU   RTCTSUO3
RTCTSYDE EQU   RTCTSUO3
RTCTSYDD EQU   RTCTSUO3
RTCTSYDC EQU   RTCTSUO3
RTCTSYDB EQU   RTCTSUO3
RTCTSYDA EQU   RTCTSUO3
RTCTSYD9 EQU   RTCTSUO3
RTCTSYD8 EQU   RTCTSUO3
@NM00040 EQU   RTCTSUO2
RTCTSYDH EQU   RTCTSUO2
RTCTSYDG EQU   RTCTSUO2
RTCTSYD7 EQU   RTCTSUO1
RTCTSYD6 EQU   RTCTSUO1
RTCTSYD5 EQU   RTCTSUO1
RTCTSYD4 EQU   RTCTSUO1
RTCTSYD3 EQU   RTCTSUO1
RTCTSYD2 EQU   RTCTSUO1
RTCTSYD1 EQU   RTCTSUO1
RTCTSYD0 EQU   RTCTSUO1
RTCTISAB EQU   RTCTSAO4
RTCTSAOV EQU   RTCTSAMG
@NM00039 EQU   RTCTSAO4
RTCTSADF EQU   RTCTSAO3
RTCTSADE EQU   RTCTSAO3
RTCTSADD EQU   RTCTSAO3
RTCTSADC EQU   RTCTSAO3
RTCTSADB EQU   RTCTSAO3
RTCTSADA EQU   RTCTSAO3
RTCTSAD9 EQU   RTCTSAO3
RTCTSAD8 EQU   RTCTSAO3
@NM00038 EQU   RTCTSAO2
RTCTSADH EQU   RTCTSAO2
RTCTSADG EQU   RTCTSAO2
RTCTSAD7 EQU   RTCTSAO1
RTCTSAD6 EQU   RTCTSAO1
RTCTSAD5 EQU   RTCTSAO1
RTCTSAD4 EQU   RTCTSAO1
RTCTSAD3 EQU   RTCTSAO1
RTCTSAD2 EQU   RTCTSAO1
RTCTSAD1 EQU   RTCTSAO1
RTCTSAD0 EQU   RTCTSAO1
RTCTZZZ5 EQU   RTCT+340
RTCTZZZ4 EQU   RTCT+336
RTCTMRMQ EQU   RTCT+332
RTCTSDF5 EQU   RTCTSDF3+3
RTCTSDDO EQU   RTCTSDF4
RTCTSDEN EQU   RTCTSDF4
RTCTSDEQ EQU   RTCTSDF4
RTCTSDTR EQU   RTCTSDF4
RTCTSDRM EQU   RTCTSDF4
RTCTSDAN EQU   RTCTSDF4
RTCTSDNC EQU   RTCTSDF4
RTCTSDSS EQU   RTCTSDF4
RTCTSDAS EQU   RTCTSDF3
@NM00037 EQU   RTCTC3PO
@NM00036 EQU   RTCTR2D2
RTCTSDFX EQU   RTCTSDF2
RTCTSDRW EQU   RTCTSDF2
RTCTSDSL EQU   RTCTSDF2
RTCTSDWF EQU   RTCTSDF2
RTCTSDLA EQU   RTCTSDF2
RTCTSDDI EQU   RTCTSDF2
RTCTSDTQ EQU   RTCTSDF2
RTCTSDMR EQU   RTCTSDF2
RTCTSDSC EQU   RTCTSDF1
RTCTSDRS EQU   RTCTSDF1
RTCTSDSD EQU   RTCTSDF1
RTCTSDEP EQU   RTCTSDF1
RTCTSDMA EQU   RTCTSDF1
RTCTSDSH EQU   RTCTSDF1
RTCTSDND EQU   RTCTSDF1
RTCTSDNO EQU   RTCTSDF1
RTCTZZZ2 EQU   RTCT+257
RTCTSDPR EQU   RTCTSDI+2
RTCTINDX EQU   RTCTSDI+1
RTCTSDNA EQU   RTCTSDI
@NM00035 EQU   RTCTASO2
RTCTASNQ EQU   RTCTASO2
RTCTASNA EQU   RTCTASO2
RTCTASNS EQU   RTCTASO2
RTCTASSU EQU   RTCTASO2
RTCTASSW EQU   RTCTASO2
RTCTASCS EQU   RTCTASO2
RTCTASTR EQU   RTCTASO1
RTCTASLP EQU   RTCTASO1
RTCTASRG EQU   RTCTASO1
RTCTASLS EQU   RTCTASO1
RTCTASSQ EQU   RTCTASO1
RTCTASNU EQU   RTCTASO1
RTCTASPS EQU   RTCTASO1
RTCTASAL EQU   RTCTASO1
RTCTSDO  EQU   RTCTOPT+12
RTCTSYO  EQU   RTCTOPT+8
RTCTSUO  EQU   RTCTOPT+4
RTCTSAO  EQU   RTCTOPT
RTCTXXX2 EQU   RTCT+234
RTCTETIM EQU   RTCTERID+6
RTCTEASD EQU   RTCTERID+4
RTCTECPU EQU   RTCTERID+2
RTCTESEQ EQU   RTCTERID
RTCTSDWK EQU   RTCT+220
RTCTTDCB EQU   RTCT+184
RTCTSDSW EQU   RTCT+180
RTCTSEQ# EQU   RTCT+178
RTCTXXX1 EQU   RTCT+177
@NM00034 EQU   RTCTRFLG
RTCTRSTF EQU   RTCTRFLG
RTCTRPER EQU   RTCTRFLG
RTCTRTER EQU   RTCTRFLG
RTCTTEST EQU   RTCT+172
RTCTMSRB EQU   RTCT+168
RTCTMLCK EQU   RTCT+164
RTCTFMT  EQU   RTCT+160
RTCTSDIP EQU   RTCTSDPL
RTCTDEV  EQU   RTCTSDDS+8
RTCTDCB  EQU   RTCTSDDS+4
@NM00033 EQU   RTCTFLG
RTCTRCB  EQU   RTCT+32
RTCTRECB EQU   RTCT+28
RTCTFASB EQU   RTCT+24
RTCTMECB EQU   RTCT+20
RTCTSDID EQU   RTCT+18
RTCTYYY1 EQU   RTCT+16
RTCTSY04 EQU   RTCTSYD+3
RTCTSY03 EQU   RTCTSYD+2
RTCTSY02 EQU   RTCTSYD+1
RTCTSYM7 EQU   RTCTSY01
RTCTSYM6 EQU   RTCTSY01
RTCTSYM5 EQU   RTCTSY01
RTCTSYM4 EQU   RTCTSY01
RTCTSYM3 EQU   RTCTSY01
RTCTSYM2 EQU   RTCTSY01
RTCTSYM1 EQU   RTCTSY01
RTCTSYM0 EQU   RTCTSY01
RTCTSUP4 EQU   RTCTSUP+3
RTCTSUDF EQU   RTCTSUP3
RTCTSUDE EQU   RTCTSUP3
RTCTSUDD EQU   RTCTSUP3
RTCTSUDC EQU   RTCTSUP3
RTCTSUDB EQU   RTCTSUP3
RTCTSUDA EQU   RTCTSUP3
RTCTSUD9 EQU   RTCTSUP3
RTCTSUD8 EQU   RTCTSUP3
@NM00032 EQU   RTCTSUP2
RTCTSUDH EQU   RTCTSUP2
RTCTSUDG EQU   RTCTSUP2
RTCTSUD7 EQU   RTCTSUP1
RTCTSUD6 EQU   RTCTSUP1
RTCTSUD5 EQU   RTCTSUP1
RTCTSUD4 EQU   RTCTSUP1
RTCTSUD3 EQU   RTCTSUP1
RTCTSUD2 EQU   RTCTSUP1
RTCTSUD1 EQU   RTCTSUP1
RTCTSUD0 EQU   RTCTSUP1
RTCTSAP4 EQU   RTCTSAP+3
RTCTSABF EQU   RTCTSAP3
RTCTSABE EQU   RTCTSAP3
RTCTSABD EQU   RTCTSAP3
RTCTSABC EQU   RTCTSAP3
RTCTSABB EQU   RTCTSAP3
RTCTSABA EQU   RTCTSAP3
RTCTSAB9 EQU   RTCTSAP3
RTCTSAB8 EQU   RTCTSAP3
@NM00031 EQU   RTCTSAP2
RTCTSABH EQU   RTCTSAP2
RTCTSABG EQU   RTCTSAP2
RTCTSAB7 EQU   RTCTSAP1
RTCTSAB6 EQU   RTCTSAP1
RTCTSAB5 EQU   RTCTSAP1
RTCTSAB4 EQU   RTCTSAP1
RTCTSAB3 EQU   RTCTSAP1
RTCTSAB2 EQU   RTCTSAP1
RTCTSAB1 EQU   RTCTSAP1
RTCTSAB0 EQU   RTCTSAP1
RTCTNAME EQU   RTCT
CHSAVWD2 EQU   CHSHORT+100
CHSAVWD1 EQU   CHSHORT+96
CHJSCBVS EQU   CHSHORT+92
CHUSCVS  EQU   CHSHORT+88
@NM00029 EQU   CHSHORT+84
@NM00028 EQU   CHSHORT+80
CHSQA    EQU   CHSHORT+44
CHQPA    EQU   CHSHORT+8
CHJCL    EQU   CHSHORT+4
CHSPC    EQU   CHSHORT
CHSPB    EQU   CHSTEP+4
CHTCB    EQU   CHSTEP+1
CHARSV23 EQU   CHSWT
CHARSV22 EQU   CHSWT
CHARSV21 EQU   CHSWT
CHAC     EQU   CHSWT
CHPSF    EQU   CHSWT
CHPSD    EQU   CHSWT
CHJCT    EQU   CHSWT
CHARSV20 EQU   CHSWT
CHCECB   EQU   CHASM+20
CHECB    EQU   CHASM+16
CHRGNAD  EQU   CHASM+12
CHARSV18 EQU   CHRGNSZ+1
CHRPRTY  EQU   CHRGNSZ
@NM00027 EQU   CHCIBP
CHEND    EQU   CHCIBP
CHECBP   EQU   CHASM
CHDER    EQU   CHPROCSN+4
CHARSV10 EQU   CHACT1
CHARSV09 EQU   CHACT1
CHARSV08 EQU   CHACT1
CHARSV07 EQU   CHACT1
CHARSV06 EQU   CHACT1
CHARSV05 EQU   CHACT1
CHMODIFY EQU   CHACT1
CHRDWTR  EQU   CHACT1
CHARSV30 EQU   CHPROCSN+2
CHQID    EQU   CHPROCSN
CHASID   EQU   CHTJID
CHTRKID  EQU   CHPKE
CHCIBCTR EQU   CHAIN+27
CHUNIT   EQU   CHAIN+24
CHCLS    EQU   CHAIN+16
CHPCOI   EQU   CHPARM
CHAFORCE EQU   CHIFY
CHAIFX   EQU   CHACT
CHCLD    EQU   CHACT
CHCL     EQU   CHACT
CHDSI    EQU   CHACT
CHDISC   EQU   CHACT
CHTERM   EQU   CHACT
CHSWAP   EQU   CHACT
CHABTERM EQU   CHSTS
CHDL     EQU   CHSTS
CHAD     EQU   CHSTS
CHQSPC   EQU   CHSTS
CHSOUT   EQU   CHSTS
CHSYS    EQU   CHSTS
CHAP     EQU   CHSTS
CHSZE    EQU   CHFLG+1
CHVCD    EQU   CHFLG
CHPTR    EQU   CHAIN
CVTLEVL  EQU   CVTRELNO+2
CVTNUMB  EQU   CVTRELNO
CVTMDL   EQU   CVTFIX+250
@NM00002 EQU   CVTFIX+248
@NM00001 EQU   CVTFIX
CVTRV482 EQU   CVTXTNT2+128
CVTRV481 EQU   CVTXTNT2+124
CVTRV480 EQU   CVTXTNT2+120
CVTRV479 EQU   CVTXTNT2+118
CVTRV478 EQU   CVTXTNT2+117
CVTRV477 EQU   CVTXTNT2+116
CVTRV476 EQU   CVTXTNT2+115
CVTRV475 EQU   CVTXTNT2+114
CVTRV474 EQU   CVTRV466
CVTRV473 EQU   CVTRV466
CVTRV472 EQU   CVTRV466
CVTRV471 EQU   CVTRV466
CVTRV470 EQU   CVTRV466
CVTRV469 EQU   CVTRV466
CVTRV468 EQU   CVTRV466
CVTRV467 EQU   CVTRV466
CVTRV465 EQU   CVTRV457
CVTRV464 EQU   CVTRV457
CVTRV463 EQU   CVTRV457
CVTRV462 EQU   CVTRV457
CVTRV461 EQU   CVTRV457
CVTRV460 EQU   CVTRV457
CVTRV459 EQU   CVTRV457
CVTRV458 EQU   CVTRV457
CVTRV456 EQU   CVTXTNT2+108
CVTRV455 EQU   CVTXTNT2+104
CVTRV454 EQU   CVTXTNT2+100
CVTRV453 EQU   CVTXTNT2+96
CVTRV452 EQU   CVTXTNT2+94
CVTRV451 EQU   CVTXTNT2+92
CVTRV450 EQU   CVTXTNT2+90
CVTRV449 EQU   CVTXTNT2+88
CVTRV448 EQU   CVTXTNT2+87
CVTRV447 EQU   CVTXTNT2+86
CVTRV446 EQU   CVTRV438
CVTRV445 EQU   CVTRV438
CVTRV444 EQU   CVTRV438
CVTRV443 EQU   CVTRV438
CVTRV442 EQU   CVTRV438
CVTRV441 EQU   CVTRV438
CVTRV440 EQU   CVTRV438
CVTRV439 EQU   CVTRV438
CVTRV437 EQU   CVTRV429
CVTRV436 EQU   CVTRV429
CVTRV435 EQU   CVTRV429
CVTRV434 EQU   CVTRV429
CVTRV433 EQU   CVTRV429
CVTRV432 EQU   CVTRV429
CVTRV431 EQU   CVTRV429
CVTRV430 EQU   CVTRV429
CVTRV428 EQU   CVTXTNT2+80
CVTRV427 EQU   CVTXTNT2+76
CVTRV426 EQU   CVTXTNT2+72
CVTRV425 EQU   CVTXTNT2+68
CVTATACT EQU   CVTATCVT
CVTRV423 EQU   CVTXTNT2+62
CVTRV422 EQU   CVTXTNT2+60
CVTRV421 EQU   CVTXTNT2+58
CVTRV420 EQU   CVTXTNT2+56
CVTRV419 EQU   CVTXTNT2+55
CVTRV418 EQU   CVTXTNT2+54
CVTRV417 EQU   CVTRV409
CVTRV416 EQU   CVTRV409
CVTRV415 EQU   CVTRV409
CVTRV414 EQU   CVTRV409
CVTRV413 EQU   CVTRV409
CVTRV412 EQU   CVTRV409
CVTRV411 EQU   CVTRV409
CVTRV410 EQU   CVTRV409
CVTRV408 EQU   CVTRV400
CVTRV407 EQU   CVTRV400
CVTRV406 EQU   CVTRV400
CVTRV405 EQU   CVTRV400
CVTRV404 EQU   CVTRV400
CVTRV403 EQU   CVTRV400
CVTRV402 EQU   CVTRV400
CVTRV401 EQU   CVTRV400
CVTICB   EQU   CVTXTNT2+48
CVTSKTA  EQU   CVTXTNT2+44
CVTCCVT  EQU   CVTXTNT2+40
CVTRSV98 EQU   CVTXTNT2+36
CVTRSV97 EQU   CVTXTNT2+34
CVTRSV96 EQU   CVTXTNT2+32
CVTOLTEP EQU   CVTXTNT2+28
CVTQIDA  EQU   CVTQID+1
CVTRSV95 EQU   CVTQID
CVTRSV94 EQU   CVTXTNT2+20
CVTRSV93 EQU   CVTXTNT2+16
CVTRSV92 EQU   CVTXTNT2+12
CVTDEBVR EQU   CVTXTNT2+8
CVTRSV91 EQU   CVTXTNT2+6
CVTRSV9H EQU   CVTFLGBT
CVTRSV9G EQU   CVTFLGBT
CVTRSV9F EQU   CVTFLGBT
CVTRSV9E EQU   CVTFLGBT
CVTRSV9D EQU   CVTFLGBT
CVTBAH   EQU   CVTFLGBT
CVTVME   EQU   CVTFLGBT
CVTNPE   EQU   CVTFLGBT
CVTNUCLS EQU   CVTXTNT2+4
CVTDSSVA EQU   CVTDSSV+1
CVTRSV89 EQU   CVTDSSV
CVTRSV88 EQU   CVTXTNT1+8
CVTRSV87 EQU   CVTXTNT1+4
CVTFACHN EQU   CVTXTNT1
CVTRV488 EQU   CVTMAP+412
CVTRV487 EQU   CVTMAP+408
CVTRV486 EQU   CVTMAP+404
CVTRV485 EQU   CVTMAP+400
CVTACTAP EQU   CVTMAP+396
CVTAUTH  EQU   CVTMAP+392
CVTRV490 EQU   CVTMAP+388
CVTSU    EQU   CVTMAP+384
CVTVOLT1 EQU   CVTVOLM1+1
CVTVOLI1 EQU   CVTVOLF1
CVTSTOA  EQU   CVTMAP+376
CVTRSV58 EQU   CVTMAP+374
CVTRSV57 EQU   CVTMAP+372
CVTDDCE  EQU   CVTMAP+368
CVTPNWFR EQU   CVTMAP+364
CVTSMF   EQU   CVTMAP+360
CVTSULK  EQU   CVTMAP+358
CVTSLKO  EQU   CVTSYSK
CVTSLKP  EQU   CVTSYSK
CVTSLKQ  EQU   CVTSYSK
CVTSLKR  EQU   CVTSYSK
CVTRSV56 EQU   CVTSYSK
CVTRSV55 EQU   CVTSYSK
CVTRSV54 EQU   CVTSYSK
CVTRSV53 EQU   CVTSYSK
CVTRSV52 EQU   CVTA1F1
CVTRSV51 EQU   CVTA1F1
CVTRSV50 EQU   CVTA1F1
CVTRSV49 EQU   CVTA1F1
CVTRSV48 EQU   CVTA1F1
CVTRSV47 EQU   CVTA1F1
CVTSRSW  EQU   CVTA1F1
CVTPFSW  EQU   CVTA1F1
CVTPCVT  EQU   CVTMAP+352
CVTRSV46 EQU   CVTMAP+344
CVTRSV45 EQU   CVTMAP+340
CVTRSV44 EQU   CVTMAP+338
CVTRSV43 EQU   CVTMAP+336
CVTHJESA EQU   CVTHJES+1
CVTRSV42 EQU   CVTHJES
CVTEXT2A EQU   CVTEXT2+1
CVTRSV41 EQU   CVTEXT2
CVTAPFA  EQU   CVTAPF+1
CVTRSV40 EQU   CVTAPF
CVTRV518 EQU   CVTINTLA
CVTRV517 EQU   CVTERPV
CVTEORM  EQU   CVTMAP+312
CVTMCHPR EQU   CVTMAP+308
CVTTZ    EQU   CVTMAP+304
CVTJEPS  EQU   CVTMAP+300
CVTJESCT EQU   CVTMAP+296
CVTMODE  EQU   CVTMAP+292
CVTPTRV  EQU   CVTMAP+288
CVTREAL  EQU   CVTMAP+284
CVTRSV39 EQU   CVTMAP+280
CVTRSV38 EQU   CVTMAP+276
CVTDMSRA EQU   CVTDMSR+1
CVTRV634 EQU   CVTDMSRF
CVTRV633 EQU   CVTDMSRF
CVTRV632 EQU   CVTDMSRF
CVTRV631 EQU   CVTDMSRF
CVTRV630 EQU   CVTDMSRF
CVTRV629 EQU   CVTDMSRF
CVTUDUMP EQU   CVTDMSRF
CVTSDUMP EQU   CVTDMSRF
CVTQMSGA EQU   CVTQMSG+1
CVTRSV36 EQU   CVTQMSG
CVTAMFF  EQU   CVTMAP+264
CVTPURGA EQU   CVTPURG+1
CVTRSV35 EQU   CVTPURG
CVTCBSP  EQU   CVTMAP+256
CVTATERA EQU   CVTATER+1
CVTSYST  EQU   CVTATER
CVTVOLT2 EQU   CVTTAT
CVTVOLI2 EQU   CVTVOLF2
CVTAQAVB EQU   CVTAQAVT+1
CVTRSV34 EQU   CVTTCMFG
CVTRSV33 EQU   CVTTCMFG
CVTRSV32 EQU   CVTTCMFG
CVTRSV31 EQU   CVTTCMFG
CVTRSV30 EQU   CVTTCMFG
CVTRSV29 EQU   CVTTCMFG
CVTLDEV  EQU   CVTTCMFG
CVTTCRDY EQU   CVTTCMFG
CVTGTFA  EQU   CVTGTF+1
CVTRSV27 EQU   CVTGTFST
CVTRNIO  EQU   CVTGTFST
CVTUSR   EQU   CVTGTFST
CVTRV318 EQU   CVTFORM
CVTRV317 EQU   CVTTMODE
CVTRV316 EQU   CVTSTATE
CVTRV315 EQU   CVTGTFS
CVTGTFAV EQU   CVTGTFS
CVT0SCR1 EQU   CVTMAP+232
CVTRV515 EQU   CVTMAP+228
CVTRMS   EQU   CVTMAP+224
CVTPATCH EQU   CVTMAP+220
CVTTSCE  EQU   CVTMAP+216
CVTLNKSC EQU   CVTMAP+214
CVTQABST EQU   CVTMAP+212
CVTMDLDS EQU   CVTMAP+208
CVTUSER  EQU   CVTMAP+204
CVTABEND EQU   CVTMAP+200
CVTSMCA  EQU   CVTMAP+196
CVTRSV18 EQU   CVTMAP+192
CVTQLPAQ EQU   CVTMAP+188
CVTQCDSR EQU   CVTMAP+184
CVTVS1B  EQU   CVTOPTB
CVTVS1A  EQU   CVTOPTB
CVTFP    EQU   CVTOPTB
CVTAPTHR EQU   CVTOPTB
CVTNLOG  EQU   CVTOPTB
CVTTOD   EQU   CVTOPTB
CVTCTIMS EQU   CVTOPTB
CVTPROT  EQU   CVTOPTB
CVTXPFP  EQU   CVTOPTA
CVTASCII EQU   CVTOPTA
CVTRSV13 EQU   CVTOPTA
CVTRSV12 EQU   CVTOPTA
CVTNIP   EQU   CVTOPTA
CVTDDR   EQU   CVTOPTA
CVTAPR   EQU   CVTOPTA
CVTCCH   EQU   CVTOPTA
CVTSNCTR EQU   CVTMAP+180
CVTQMWR  EQU   CVTMAP+176
CVTQOCR  EQU   CVTMAP+172
CVT1EF00 EQU   CVTMAP+168
CVTMZ00  EQU   CVTMAP+164
CVTSV76Q EQU   CVTSV76C
CVTRSV11 EQU   CVTMAP+156
CVT0PT01 EQU   CVTMAP+152
CVTMSER  EQU   CVTMAP+148
CVTRV516 EQU   CVTIERLC
CVTILCH  EQU   CVTMAP+140
CVT0DS   EQU   CVTMAP+136
CVTFBOSV EQU   CVTMAP+132
CVTNUCB  EQU   CVTMAP+128
CVTIXAVL EQU   CVTMAP+124
CVTSV76M EQU   CVTIOQET
CVTDCBA  EQU   CVTMAP+117
CVTMVS2  EQU   CVTDCB
CVT6DAT  EQU   CVTDCB
CVT4MPS  EQU   CVTDCB
CVTRSV09 EQU   CVTDCB
CVT4MS1  EQU   CVTDCB
CVT2SPS  EQU   CVTDCB
CVT1SSS  EQU   CVTDCB
CVTRSV08 EQU   CVTDCB
CVTSTB   EQU   CVTMAP+112
CVTQTD00 EQU   CVTMAP+108
CVTQTE00 EQU   CVTMAP+104
CVTCUCB  EQU   CVTMAP+100
CVTSJQ   EQU   CVTMAP+96
CVTPBLDL EQU   CVTMAP+92
CVTTPC   EQU   CVTMAP+88
CVTSVDCB EQU   CVTMAP+84
CVTBRET  EQU   CVTMAP+82
CVTEXIT  EQU   CVTMAP+80
CVT0FN00 EQU   CVTMAP+76
CVTDARA  EQU   CVTDAR+1
CVTRSV07 EQU   CVTFLGS1
CVTRSV06 EQU   CVTFLGS1
CVTRSV05 EQU   CVTFLGS1
CVTRSV04 EQU   CVTFLGS1
CVTRSV03 EQU   CVTFLGS1
CVTRSV02 EQU   CVTFLGS1
CVTRSV01 EQU   CVTFLGS1
CVTDMPLK EQU   CVTFLGS1
CVTXITP  EQU   CVTMAP+68
CVTZDTAB EQU   CVTMAP+64
CVTMSLT  EQU   CVTMAP+60
CVTDATE  EQU   CVTMAP+56
CVTBTERM EQU   CVTMAP+52
CVTSYSAD EQU   CVTMAP+48
CVTXTLER EQU   CVTMAP+44
CVTILK2  EQU   CVTMAP+40
CVTILK1  EQU   CVTMAP+36
CVTPRLTV EQU   CVTMAP+32
CVTPCNVT EQU   CVTMAP+28
CVT0VL00 EQU   CVTMAP+24
CVTXAPG  EQU   CVTMAP+20
CVTBUF   EQU   CVTMAP+16
CVTJOB   EQU   CVTMAP+12
CVTLINK  EQU   CVTMAP+8
CVT0EF00 EQU   CVTMAP+4
CVTTCBP  EQU   CVTMAP
CVT      EQU   CVTMAP
S99TUPRM EQU   S99TUFLD+2
S99TULEN EQU   S99TUFLD
S99TUPAR EQU   S99TUENT+2
S99TULNG EQU   S99TUENT
S99TUNUM EQU   S99TUNIT+2
S99TUKEY EQU   S99TUNIT
S99TUPND EQU   S99TUP
S99TUPLN EQU   S99TUPTR
@NM00026 EQU   PSA+3668
PSASTAK  EQU   PSA+3072
@NM00025 EQU   PSA+1048
PSAUSEND EQU   PSA+1048
PSARV062 EQU   PSA+1044
PSACDAL  EQU   PSA+1040
PSAWTCOD EQU   PSA+1036
PSAATCVT EQU   PSA+1032
PSAPCPSW EQU   PSA+1024
PSAPIR2  EQU   PSA+1020
PSARV059 EQU   PSA+1018
PSASVC13 EQU   PSA+1016
PSALSFCC EQU   PSA+1012
PSASFACC EQU   PSA+1008
PSASTOP  EQU   PSA+992
PSASTART EQU   PSA+976
PSARSPSW EQU   PSA+968
PSASRPSW EQU   PSA+960
PSARV045 EQU   PSA+892
PSARV044 EQU   PSA+888
PSARV043 EQU   PSA+884
PSARV042 EQU   PSA+880
PSARV041 EQU   PSA+876
PSARV040 EQU   PSA+872
PSARV025 EQU   PSA+868
PSADSSED EQU   PSA+868
PSADSSPR EQU   PSA+864
PSADSSFW EQU   PSA+860
PSADSS14 EQU   PSA+856
PSADSSPP EQU   PSA+848
PSADSSRP EQU   PSA+840
PSADSS05 EQU   PSADSSF4
PSADSS10 EQU   PSADSSF4
PSADSSVE EQU   PSADSSF4
PSADSSDE EQU   PSADSSF4
PSADSSC0 EQU   PSADSSF4
PSADSSIE EQU   PSADSSF4
PSADSS12 EQU   PSADSSF4
PSADSSRC EQU   PSADSSF4
PSARV057 EQU   PSADSSF3
PSARV056 EQU   PSADSSF3
PSARV055 EQU   PSADSSF3
PSADSSMC EQU   PSADSSF3
PSADSSRW EQU   PSADSSF3
PSADSSNM EQU   PSADSSF3
PSADSSES EQU   PSADSSF3
PSADSSGP EQU   PSADSSF3
PSADSSF2 EQU   PSADSSFL+1
PSADSSPI EQU   PSADSSF1
PSADSSOI EQU   PSADSSF1
PSADSSSP EQU   PSADSSF1
PSADSSTP EQU   PSADSSF1
PSADSSDW EQU   PSADSSF1
PSADSSDD EQU   PSADSSF1
PSADSSDM EQU   PSADSSF1
PSADSSMV EQU   PSADSSF1
PSADSSTS EQU   PSA+816
PSADSSWK EQU   PSA+812
PSADSSR3 EQU   PSA+808
PSADSSR2 EQU   PSA+804
PSADSSRS EQU   PSA+800
PSASTOR  EQU   PSA+796
PSACPUSA EQU   PSA+794
PSAVSTAP EQU   PSA+792
PSAWKVAP EQU   PSA+788
PSAWKRAP EQU   PSA+784
PSAMCHIC EQU   PSA+783
PSARV061 EQU   PSA+782
PSASYMSK EQU   PSA+781
PSAMCHFL EQU   PSA+780
PSACR0   EQU   PSA+776
PSAPSWSV EQU   PSA+768
PSALITA  EQU   PSA+764
PSACLHS  EQU   PSAHLHI
PSALKR15 EQU   PSALKSA+60
PSALKR14 EQU   PSALKSA+56
PSALKR13 EQU   PSALKSA+52
PSALKR12 EQU   PSALKSA+48
PSALKR11 EQU   PSALKSA+44
PSALKR10 EQU   PSALKSA+40
PSALKR9  EQU   PSALKSA+36
PSALKR8  EQU   PSALKSA+32
PSALKR7  EQU   PSALKSA+28
PSALKR6  EQU   PSALKSA+24
PSALKR5  EQU   PSALKSA+20
PSALKR4  EQU   PSALKSA+16
PSALKR3  EQU   PSALKSA+12
PSALKR2  EQU   PSALKSA+8
PSALKR1  EQU   PSALKSA+4
PSALKR0  EQU   PSALKSA
PSARV023 EQU   PSACLHT+52
PSALOCAL EQU   PSACLHT+48
PSACMSL  EQU   PSACLHT+44
PSAOPTL  EQU   PSACLHT+40
PSATPACL EQU   PSACLHT+36
PSATPDNL EQU   PSACLHT+32
PSATPNCL EQU   PSACLHT+28
PSAIOSLL EQU   PSACLHT+24
PSAIOSUL EQU   PSACLHT+20
PSAIOSCL EQU   PSACLHT+16
PSAIOSSL EQU   PSACLHT+12
PSASALCL EQU   PSACLHT+8
PSAASML  EQU   PSACLHT+4
PSADISPL EQU   PSACLHT
PSASRSA  EQU   PSA+636
PSARV050 EQU   PSA+634
PSADSSGO EQU   PSA+633
PSARECUR EQU   PSA+632
PSAHLHIS EQU   PSA+628
PSAIPCSA EQU   PSA+624
@NM00024 EQU   PSA+621
PSAIPCDM EQU   PSA+620
PSAIPCD  EQU   PSA+616
@NM00023 EQU   PSA+613
PSAIPCRM EQU   PSA+612
PSAIPCR  EQU   PSA+608
PSAMCHEX EQU   PSA+600
PSAMPSW  EQU   PSA+592
PSAEXPS2 EQU   PSA+584
PSAEXPS1 EQU   PSA+576
PSAPIREG EQU   PSA+572
PSARSREG EQU   PSA+568
PSAGPREG EQU   PSA+556
PSARV022 EQU   PSASUP4
PSARV021 EQU   PSASUP4
PSARV020 EQU   PSASUP4
PSARV019 EQU   PSASUP4
PSARV018 EQU   PSASUP4
PSARV017 EQU   PSASUP4
PSARV016 EQU   PSASUP4
PSARV015 EQU   PSASUP4
PSARV014 EQU   PSASUP3
PSAULCMS EQU   PSASUP3
PSARV012 EQU   PSASUP3
PSAESTA  EQU   PSASUP3
PSASPR   EQU   PSASUP3
PSAPSREG EQU   PSASUP3
PSAPI2   EQU   PSASUP3
PSAIOSUP EQU   PSASUP3
PSALCR   EQU   PSASUP2
PSARTM   EQU   PSASUP2
PSAACR   EQU   PSASUP2
PSAIPCE2 EQU   PSASUP2
PSAIPCES EQU   PSASUP2
PSAIPCEC EQU   PSASUP2
PSAGTF   EQU   PSASUP2
PSAIPCRI EQU   PSASUP2
PSATYPE6 EQU   PSASUP1
PSATCTL  EQU   PSASUP1
PSADISP  EQU   PSASUP1
PSALOCK  EQU   PSASUP1
PSAPI    EQU   PSASUP1
PSAEXT   EQU   PSASUP1
PSASVC   EQU   PSASUP1
PSAIO    EQU   PSASUP1
PSAAOLD  EQU   PSA+548
PSAANEW  EQU   PSA+544
PSATOLD  EQU   PSA+540
PSATNEW  EQU   PSA+536
PSALCCAR EQU   PSA+532
PSALCCAV EQU   PSA+528
PSAPCCAR EQU   PSA+524
PSAPCCAV EQU   PSA+520
PSACPULA EQU   PSA+518
PSACPUPA EQU   PSA+516
PSAPSA   EQU   PSA+512
FLCHDEND EQU   PSA+512
FLCCRSAV EQU   FLCMCLA+280
FLCGRSAV EQU   FLCMCLA+216
FLCFPSAV EQU   FLCMCLA+184
FLCFLA   EQU   FLCMCLA+88
FLCRGNCD EQU   FLCMCLA+84
FLCFSAA  EQU   FLCFSA+1
@NM00022 EQU   FLCFSA
@NM00021 EQU   FLCMCLA+72
FLCMCIC  EQU   FLCMCLA+64
@NM00020 EQU   FLCMCLA+20
FLCIOAA  EQU   FLCIOA+1
@NM00019 EQU   FLCIOA
@NM00018 EQU   FLCMCLA+15
@NM00017 EQU   FLCMCLA+14
@NM00016 EQU   FLCMCLA+12
FLCLCL   EQU   FLCMCLA+8
FLCIOELA EQU   FLCIOEL+1
@NM00015 EQU   FLCIOEL
FLCCHNID EQU   FLCMCLA
@NM00014 EQU   PSA+160
FLCMTRCD EQU   PSA+157
@NM00013 EQU   PSA+156
FLCPERA  EQU   FLCPER+1
@NM00012 EQU   FLCPER
@NM00011 EQU   PSA+151
FLCPERCD EQU   PSA+150
FLCMCNUM EQU   PSA+149
@NM00010 EQU   PSA+148
FLCTEAA  EQU   FLCTEA+1
@NM00009 EQU   FLCTEA
PSAPIPC  EQU   PSAPICOD
PSAPIMC  EQU   PSAPICOD
PSAPIPER EQU   PSAPICOD
PSARV049 EQU   FLCPICOD
FLCPILCB EQU   FLCPIILC
@NM00008 EQU   FLCPIILC
@NM00007 EQU   PSAEPPSW
FLCSVCN  EQU   PSAESPSW+2
FLCSILCB EQU   FLCSVILC
@NM00006 EQU   FLCSVILC
@NM00005 EQU   PSAESPSW
FLCEICOD EQU   PSAEEPSW+2
PSASPAD  EQU   PSAEEPSW
@NM00004 EQU   PSA+128
FLCINPSW EQU   PSA+120
FLCMNPSW EQU   PSA+112
FLCPNPSW EQU   PSA+104
FLCSNPSW EQU   PSA+96
FLCENPSW EQU   PSA+88
FLCTRACE EQU   PSA+84
FLCTIMER EQU   PSA+80
FLCCVT2  EQU   PSA+76
FLCCAW   EQU   PSA+72
FLCCSW   EQU   PSA+64
FLCIOPSW EQU   PSA+56
FLCMOPSW EQU   PSA+48
FLCPOPSW EQU   PSA+40
FLCSOPSW EQU   PSA+32
FLCEOPSW EQU   PSA+24
@NM00003 EQU   FLCICCW2+4
FLCICCW1 EQU   FLCROPSW
FLCIPPSW EQU   FLCRNPSW
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RC00296 EQU   @RC00278
@RC00377 EQU   @RC00375
@ENDDATA EQU   *
         END   IEECB910,(C'PLS1033',0701,78157)
