         TITLE 'IKJEFT40, PUTLINE SERVICE ROUTINE                      *
                        '
IKJEFT40 CSECT ,                                                   0001
IKJPUTL  DS    0H                                                  0001
         ENTRY IKJPUTL
@MAINENT DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL2(@EP00001-@MAINENT)
         DC    AL1(16)                                             0001
         DC    C'IKJEFT40  74.131'                                 0001
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                     0001
         BALR  @12,0                                               0001
@PSTART  DS    0H                                                  0001
         USING @PSTART,@12                                         0001
         L     @00,@SIZDATD                                        0001
         GETMAIN  R,LV=(0)
         LR    @11,@01                                             0001
         USING @DATD,@11                                           0001
         ST    @13,@SA00001+4                                      0001
         LM    @15,@01,16(@13)                                     0001
         ST    @11,8(,@13)                                         0001
         LR    @13,@11                                             0001
         AH    @15,4(,@15)                                         0001
         BR    @15                                                 0001
@EP00001 MVC   @PC00001(16),0(@01)                                 0001
*                                                                  0025
*   /*****************************************************************/
*   /*                                                               */
*   /* START EXECUTABLE CODE.                                        */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0025
*   SAVEREG1=R1;                                                   0025
         LR    SAVEREG1,R1                                         0025
*   FRESWICH=0;                     /* INITIALIZE FREEMAIN TO OFF  0026
*                                      (DON'T FREE)                  */
         SLR   @14,@14                                             0026
         ST    @14,FRESWICH                                        0026
*WRITERTN:                                                         0027
*   TXIFONLY=ADDR(FORMONLY);        /* FILL IN TEXTIN PARM           */
WRITERTN LA    @14,FORMONLY                                        0027
         ST    @14,TXIFONLY                                        0027
*   IF PARMFORM='1'B THEN           /* FORMAT ONLY BIT ON            */
         L     @14,PTPBPTR(,R1)                                    0028
         TM    PARMFORM(@14),B'00100000'                           0028
         BNO   @RF00028                                            0028
*     DO;                                                          0029
*       FORMONLY=1;                 /* INDICATE FORMAT ONLY FOR    0030
*                                      TEXTIN                        */
         MVC   FORMONLY(4),@CF00040                                0030
*       TXIFRMSG=ADDR(PARMAFRM);    /* USER'S PTPB FIELD             */
         LA    @10,PARMAFRM(,@14)                                  0031
         ST    @10,TXIFRMSG                                        0031
*       PARMAFRM='00000000'X;       /* TURN CHAIN FLAG OFF           */
         SLR   @10,@10                                             0032
         ST    @10,PARMAFRM(,@14)                                  0032
*       TXISEGMT=PARMAOUT;          /* POINT TO MSG SEGS BLOCK       */
         L     @14,PARMAOUT(,@14)                                  0033
         ST    @14,TXISEGMT                                        0033
*       R1=ADDR(TXINPARM);          /* TEXTIN'S PARMS                */
         LA    R1,TXINPARM                                         0034
*       CALL IKJEFT54;              /* PERFORM TEXT INSERTION        */
         L     @15,@CV00211                                        0035
         BALR  @14,@15                                             0035
*       GOTO EXIT;                                                 0036
         B     EXIT                                                0036
*     END;                                                         0037
*   TRMOPARM(1:12)=PUTLPARM;        /* MOVE IOPL TO OWN CORE         */
@RF00028 MVC   TRMOPARM(12),PUTLPARM(R1)                           0038
*   ADRDPRMB=ADDR(DPARMBLK);        /* POINT TO DUPLICATE PTPB       */
         LA    @14,DPARMBLK                                        0039
         ST    @14,ADRDPRMB                                        0039
*   DPARMBLK=PTPB;                  /* COPY PTPB IN MY        STORAGE*/
         L     @14,PTPBPTR(,R1)                                    0040
         MVC   DPARMBLK(12),PTPB(@14)                              0040
*   IF PARMDTMS='1'B THEN           /* DATA-MESSAGE BIT = DATA       */
         TM    PARMDTMS(@14),B'00100000'                           0041
         BNO   @RF00041                                            0041
*     DO;                                                          0042
*TERMOUT:                                                          0043
*       R1=ADDR(TRMOPARM);          /* POINT TO DUPLICATE IOPL       */
TERMOUT  LA    R1,TRMOPARM                                         0043
*       CALL IKJEFT56;              /* GOTO TERM-OUT                 */
         L     @15,@CV00215                                        0044
         BALR  @14,@15                                             0044
*       GOTO EXIT;                                                 0045
         B     EXIT                                                0045
*     END;                          /* END WRITE DATA PROCESSING     */
*   IF PARMIFOR='1'B THEN           /* INFORMATIONAL BIT ON          */
@RF00041 L     @14,PTPBPTR(,R1)                                    0047
         TM    PARMIFOR(@14),B'00000010'                           0047
         BNO   @RF00047                                            0047
*     DO;                                                          0048
*       IF ECTIOWA^=0&INSEXEC='1'B& /* NOMSG Y30PQJM                 */
*           INSTERM='0'B&NOMSG='1'B THEN/* Y30PQJM                   */
         L     @14,ECTPTR(,R1)                                     0049
         L     @14,ECTIOWA(,@14)                                   0049
         LTR   @14,@14                                             0049
         BZ    @RF00049                                            0049
         L     @14,IOSTELM(,@14)                                   0049
         TM    INSEXEC(@14),B'00001000'                            0049
         BNO   @RF00049                                            0049
         TM    INSTERM(@14),B'10000000'                            0049
         BNZ   @RF00049                                            0049
         L     @14,LSDPTR-1(,@14)                                  0049
         LA    @14,0(,@14)                                         0049
         L     @14,LSDEXEC(,@14)                                   0049
         TM    NOMSG(@14),B'00000010'                              0049
         BO    @RT00049                                            0049
*         GOTO NORMEND;             /* RC = ZERO Y30PQJM             */
*       IF PARMAOUT=0 THEN          /* NO OUTPUT LINE                */
@RF00049 L     @14,PTPBPTR(,R1)                                    0051
         L     @14,PARMAOUT(,@14)                                  0051
         LTR   @14,@14                                             0051
         BNZ   @RF00051                                            0051
*         DO;                       /* PRESENT.                      */
*           R1=ADDR(TRMOPARM);      /* POINT TO DUP IOPL             */
         LA    R1,TRMOPARM                                         0053
*           CALL IKJEFT52;          /* CHAIN OUT SUBROUTINE          */
         L     @15,@CV00218                                        0054
         BALR  @14,@15                                             0054
*           GOTO EXIT;                                             0055
         B     EXIT                                                0055
*         END;                                                     0056
*PUTOUT:                                                           0057
*       TXIFRMSG=ADRDPRMB+4;        /* PLACE FORMATTED MSG IN      0057
*                                      TERMOUTS PARM BLOCK           */
@RF00051 DS    0H                                                  0057
PUTOUT   LA    @14,4                                               0057
         AL    @14,ADRDPRMB                                        0057
         ST    @14,TXIFRMSG                                        0057
*       IF PARMMLEV='0'B THEN       /* IF THIS IS SINGLE LEVEL       */
         L     @14,PTPBPTR(,R1)                                    0058
         TM    PARMMLEV(@14),B'00000100'                           0058
         BNZ   @RF00058                                            0058
*         TXISEGMT=PARMAOUT;        /* PLACE FRMTD MSG IN P BLK      */
         L     @14,PARMAOUT(,@14)                                  0059
         ST    @14,TXISEGMT                                        0059
*       ELSE                        /* IF THIS IS MULTI LEVEL THEN 0060
*                                      BUMP ADDR BY 4                */
*         TXISEGMT=PARMAOUT+4;                                     0060
         B     @RC00058                                            0060
@RF00058 L     @14,PTPBPTR(,R1)                                    0060
         LA    @10,4                                               0060
         AL    @10,PARMAOUT(,@14)                                  0060
         ST    @10,TXISEGMT                                        0060
*       R1=ADDR(TXINPARM);                                         0061
@RC00058 LA    R1,TXINPARM                                         0061
*       CALL IKJEFT54;              /* TEXT INSERTION                */
         L     @15,@CV00211                                        0062
         BALR  @14,@15                                             0062
*       IF R15^=0 THEN              /* ERROR FROM SUBROUTINE?        */
         LTR   R15,R15                                             0063
         BNZ   @RT00063                                            0063
*         GOTO EXIT;                                               0064
*       R1=ADDR(TRMOPARM);          /* POINT TO DUPLICATE IOPL       */
         LA    R1,TRMOPARM                                         0065
*       CALL IKJEFT56;              /* TERM OUT                      */
         L     @15,@CV00215                                        0066
         BALR  @14,@15                                             0066
*       RETURNCD=R15;               /* SAVE TERMOUT RETURN CODE      */
         LR    RETURNCD,R15                                        0067
*       IF FRESWICH=1 THEN          /* IF CORE IS TO BE FREED        */
         CLC   FRESWICH(4),@CF00040                                0068
         BNE   @RF00068                                            0068
*         DO;                                                      0069
*           SPOOL=1;                /* NON SHARED SUBPOOL            */
         MVI   SPOOL,X'01'                                         0070
*           FLENGTH=OUTBUFF->VRECLENG;/* LENGTH TO BE FREED          */
         L     @14,OUTBUFF                                         0071
         LH    @10,VRECLENG(,@14)                                  0071
         STCM  @10,7,FLENGTH                                       0071
*           R0=FREEREG0;            /* FREEMAIN PARM REG             */
         L     R0,FREEREG0                                         0072
*           R1=OUTBUFF;                                            0073
         LR    R1,@14                                              0073
*           GEN(FREEMAIN R,LV=(0),A=(1));                          0074
         FREEMAIN R,LV=(0),A=(1)
*         END;                      /* END FREE SECTION              */
*       IF RETURNCD^=0 THEN         /* ERROR FROM TERMOUT?           */
@RF00068 SLR   @14,@14                                             0076
         CR    RETURNCD,@14                                        0076
         BNE   @RT00076                                            0076
*         GOTO THEEND;                                             0077
*       R1=SAVEREG1;                /* POINT TO USERS IOPL           */
         LR    R1,SAVEREG1                                         0078
*       IF                          /* IF MULTI LEVEL BIT ON         */
*           PARMMLEV='1'B THEN                                     0079
         L     @10,PTPBPTR(,R1)                                    0079
         TM    PARMMLEV(@10),B'00000100'                           0079
         BNO   @RF00079                                            0079
*         DO;                                                      0080
*           IF PARMAOUT->MLEANEXT=0 THEN/* IF 2ND LEVEL NOT GIVEN    */
         L     @07,PARMAOUT(,@10)                                  0081
         L     @07,MLEANEXT-1(,@07)                                0081
         LA    @07,0(,@07)                                         0081
         LTR   @07,@07                                             0081
         BZ    @RT00081                                            0081
*             GOTO NORMEND;         /* EXIT                          */
*           IF ECTIOWA^=0&INSOTDD='1'B THEN/* IF IN BKGRND    Y30PQJM*/
         L     @09,ECTPTR(,R1)                                     0083
         L     @09,ECTIOWA(,@09)                                   0083
         CR    @09,@14                                             0083
         BE    @RF00083                                            0083
         L     @14,IOSTELM(,@09)                                   0083
         TM    INSOTDD(@14),B'00010000'                            0083
         BNO   @RF00083                                            0083
*             DO;                                                  0084
*               PARMAOUT=PARMAOUT->MLEANEXT;/* POINT TO SEC LEV MSG  */
         ST    @07,PARMAOUT(,@10)                                  0085
*               GO TO PUTOUT;       /* PUT OUT SEC LEVEL MSG         */
         B     PUTOUT                                              0086
*             END;                                                 0087
*           TXISEGMT=PARMAOUT->MLEANEXT+4;/* POINT TO THE LIN TO BE
*                                      FORMATTED                     */
@RF00083 L     @14,PTPBPTR(,R1)                                    0088
         L     @14,PARMAOUT(,@14)                                  0088
         LA    @10,4                                               0088
         L     @14,MLEANEXT-1(,@14)                                0088
         LA    @14,0(,@14)                                         0088
         ALR   @10,@14                                             0088
         ST    @10,TXISEGMT                                        0088
*           TXIFRMSG=ADDR(FORMMSG);                                0089
*                                                                  0089
         LA    @14,FORMMSG                                         0089
         ST    @14,TXIFRMSG                                        0089
*           /*********************************************************/
*           /*                                                       */
*           /* PLACE FOR THE AD OF THE FORMTD MESAGE                 */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0090
*           CHAINFLG='FF'X;         /* CHAIN INDICATION              */
         MVI   CHAINFLG,X'FF'                                      0090
*           R1=ADDR(TXINPARM);                                     0091
         LA    R1,TXINPARM                                         0091
*           CALL IKJEFT54;          /* TEXT-INSERT                   */
         L     @15,@CV00211                                        0092
         BALR  @14,@15                                             0092
*           IF R15^=0 THEN                                         0093
         LTR   R15,R15                                             0093
         BNZ   @RT00093                                            0093
*             GOTO EXIT;                                           0094
*           R1=SAVEREG1;                                           0095
         LR    R1,SAVEREG1                                         0095
*           IF ECTSMSG=0 THEN       /* EMPTY CHAIN                   */
         L     @14,ECTPTR(,R1)                                     0096
         L     @14,ECTSMSG-1(,@14)                                 0096
         LA    @14,0(,@14)                                         0096
         LTR   @14,@14                                             0096
         BNZ   @RF00096                                            0096
*             DO;                                                  0097
*FIRSTELM:                                                         0098
*               ECTMSGF=0;          /* SET FLAG OFF                  */
FIRSTELM L     @14,ECTPTR(,R1)                                     0098
         MVI   ECTMSGF(@14),X'00'                                  0098
*               ECTSMSG=FORMMSG;                                   0099
         MVC   ECTSMSG(3,@14),FORMMSG+1                            0099
*               GOTO NORMEND;                                      0100
         B     NORMEND                                             0100
*             END;                                                 0101
*           IF ECTMSGF>='80'X THEN  /* CHAIN IS                      */
@RF00096 L     @14,ECTPTR(,R1)                                     0102
         CLI   ECTMSGF(@14),X'80'                                  0102
         BL    @RF00102                                            0102
*             DO;                   /* FLAGGED                       */
*               CALL IKJEFT53;                                     0104
         L     @15,@CV00226                                        0104
         BALR  @14,@15                                             0104
*               GOTO FIRSTELM;                                     0105
         B     FIRSTELM                                            0105
*             END;                                                 0106
*           MLEVLPTR=ECTSMSG;                                      0107
@RF00102 L     @14,ECTPTR(,R1)                                     0107
         L     MLEVLPTR,ECTSMSG-1(,@14)                            0107
         LA    MLEVLPTR,0(,MLEVLPTR)                               0107
*CHANLOOP:                                                         0108
*           IF MULANEXT=0 THEN      /* EMPTY                         */
CHANLOOP L     @14,MULANEXT(,MLEVLPTR)                             0108
         LTR   @14,@14                                             0108
         BNZ   @RF00108                                            0108
*             DO;                   /* CHAIN SLOT                    */
*               MULANEXT=FORMMSG;                                  0110
         L     @14,FORMMSG                                         0110
         ST    @14,MULANEXT(,MLEVLPTR)                             0110
*               GOTO NORMEND;                                      0111
         B     NORMEND                                             0111
*             END;                                                 0112
*           MLEVLPTR=MULANEXT;      /* POINT TO NEXT MESSAGE LINE    */
@RF00108 L     MLEVLPTR,MULANEXT(,MLEVLPTR)                        0113
*           GOTO CHANLOOP;                                         0114
         B     CHANLOOP                                            0114
*         END;                                                     0115
*       GOTO NORMEND;               /* GO TO NORMAL EXIT             */
         B     NORMEND                                             0116
*     END;                                                         0117
*                                                                  0117
*   /*****************************************************************/
*   /*                                                               */
*   /* IF THE WRITE-TYPE CANNOT BE DETERMINED FROM THE INPUT         */
*   /* PARAMETERS - RETURN WITH ERROR INDICATION.                    */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0118
*INVALID:                                                          0118
*   R15=12;                         /* INDICATE INVALID PARMS        */
@RF00047 DS    0H                                                  0118
INVALID  LA    R15,12                                              0118
*   GOTO EXIT;                                                     0119
         B     EXIT                                                0119
*NORMEND:                                                          0120
*   R15=0;                          /* SET RETURN CODE=0             */
NORMEND  SLR   R15,R15                                             0120
*EXIT:                                                             0121
*   RETURNCD=R15;                   /* PUT R15 IN CALER       SAVAREA*/
EXIT     LR    RETURNCD,R15                                        0121
*THEEND:                                                           0122
*   RETURN CODE(RETURNCD);                                         0122
THEEND   L     @13,4(,@13)                                         0122
         L     @00,@SIZDATD                                        0122
         LR    @01,@11                                             0122
         FREEMAIN R,LV=(0),A=(1)
         LR    @15,@05                                             0122
         L     @14,12(,@13)                                        0122
         LM    @00,@12,20(@13)                                     0122
         BR    @14                                                 0122
*   END IKJEFT40                                                   0123
*                                                                  0123
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (IKJUPT  )                                       */
*/*%INCLUDE SYSLIB  (IKJECT  )                                       */
*/*%INCLUDE SYSLIB  (IKJEXEC )                                       */
*/*%INCLUDE SYSLIB  (IKJLSD  )                                       */
*                                                                  0123
*       ;                                                          0123
@DATA    DS    0H
@DATD    DSECT
         DS    0F
@SA00001 DS    18F
@PC00001 DS    4F
IKJEFT40 CSECT
         DS    0F
@CF00040 DC    F'1'
@DATD    DSECT
         DS    0D
FORMONLY DS    A
FORMMSG  DS    AL4
         ORG   FORMMSG
CHAINFLG DS    AL1
MSGADDR  DS    AL3
         ORG   FORMMSG+4
FREEREG0 DS    AL4
         ORG   FREEREG0
SPOOL    DS    AL1
FLENGTH  DS    AL3
         ORG   FREEREG0+4
TXINPARM DS    CL12
         ORG   TXINPARM
TXISEGMT DS    AL4
TXIFRMSG DS    AL4
TXIFONLY DS    AL4
         ORG   TXINPARM+12
TRMOPARM DS    CL16
         ORG   TRMOPARM
@NM00008 DS    CL12
ADRDPRMB DS    AL4
         ORG   TRMOPARM+16
DPARMBLK DS    CL12
         ORG   DPARMBLK
@NM00009 DS    FL4
OUTBUFF  DS    AL4
         ORG   DPARMBLK+12
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
IKJEFT40 CSECT
         DS    0F
@SIZDATD DC    AL1(1)
         DC    AL3(@ENDDATD-@DATD)
@CV00211 DC    V(IKJEFT54)
@CV00215 DC    V(IKJEFT56)
@CV00218 DC    V(IKJEFT52)
@CV00226 DC    V(IKJEFT53)
         DS    0D
PATCH    DC    8F'0'
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
RETURNCD EQU   @05
SAVEREG1 EQU   @06
MLEVLPTR EQU   @05
R1       EQU   @01
R15      EQU   @15
R0       EQU   @00
XPRMLIST EQU   0
UPTPTR   EQU   XPRMLIST
ECTPTR   EQU   XPRMLIST+4
PTPBPTR  EQU   XPRMLIST+12
UPT      EQU   0
UPTSWS   EQU   UPT+12
ECT      EQU   0
ECTIOWA  EQU   ECT+4
ECTMSGF  EQU   ECT+8
ECTSMSG  EQU   ECT+9
ECTSWS   EQU   ECT+28
PTPB     EQU   0
PARMCNTL EQU   PTPB
PARMDTMS EQU   PARMCNTL
PARMMLEV EQU   PARMCNTL
PARMIFOR EQU   PARMCNTL
PARMFORM EQU   PARMCNTL+1
PARMAOUT EQU   PTPB+4
PARMAFRM EQU   PTPB+8
IOSRL    EQU   0
IOSTELM  EQU   IOSRL
INSTACK  EQU   0
INSCODE  EQU   INSTACK
INSTERM  EQU   INSCODE
INSOTDD  EQU   INSCODE
INSEXEC  EQU   INSCODE
INSADLSD EQU   INSTACK+1
MULTLINE EQU   0
MULANEXT EQU   MULTLINE
MLEVLMSG EQU   0
MLEANEXT EQU   MLEVLMSG+1
VRECORD  EQU   0
VRECLENG EQU   VRECORD
PUTLPARM EQU   0
EXECDATA EQU   0
@NM00010 EQU   EXECDATA+16
EXDATFLG EQU   EXECDATA+32
@NM00011 EQU   EXDATFLG
NOMSG    EQU   @NM00011
LSD      EQU   0
LSDEXEC  EQU   LSD+12
UPTX     EQU   0
ECTX     EQU   0
ECB      EQU   0
PTPBX    EQU   0
FRESWICH EQU   FORMONLY
LSDPTR   EQU   INSADLSD
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
ECBCOMPC EQU   ECB
ECBCBIT  EQU   ECB
ECBWBIT  EQU   ECB
LSDANEXT EQU   LSD+8
LSDTOTLN EQU   LSD+6
LSDRCLEN EQU   LSD+4
LSDADATA EQU   LSD
EXDLMPTR EQU   EXECDATA+40
GEXECCNT EQU   EXECDATA+36
CMAIN    EQU   @NM00011
ERINCNTL EQU   @NM00011
SYMLST   EQU   @NM00011
NOFLUSH  EQU   @NM00011
ERRCMD   EQU   @NM00011
CONLST   EQU   @NM00011
RETPTR   EQU   EXECDATA+28
ERACTEND EQU   EXECDATA+24
ERACTSTR EQU   EXECDATA+20
EXINSAVE EQU   @NM00010
LASTTSO  EQU   EXECDATA+12
GEXECDAT EQU   EXECDATA+8
SVTABFST EQU   EXECDATA+4
SNTABFST EQU   EXECDATA
VRECDATA EQU   VRECORD+4
VRECOFFS EQU   VRECORD+2
MLEADSEG EQU   MLEVLMSG+8
MLENUMSG EQU   MLEVLMSG+4
@NM00007 EQU   MLEVLMSG
MULDATA  EQU   MULTLINE+6
MULLENGH EQU   MULTLINE+4
INSLIST  EQU   INSCODE
INSPROC  EQU   INSCODE
INSPROM  EQU   INSCODE
INSINDD  EQU   INSCODE
INSSTOR  EQU   INSCODE
IOSUNUSD EQU   IOSRL+12
IOSNELM  EQU   IOSRL+10
IOSTLEN  EQU   IOSRL+8
IOSBELM  EQU   IOSRL+4
PARMTPUT EQU   PTPB+2
PARMUNUS EQU   PARMCNTL+1
PARMDMND EQU   PARMCNTL+1
PARMMODE EQU   PARMCNTL+1
PARMPRMT EQU   PARMCNTL
PARMMLIN EQU   PARMCNTL
PARMSNGL EQU   PARMCNTL
PARMPUT  EQU   PARMCNTL
PARMPBT0 EQU   PARMCNTL
ECTBKPB  EQU   ECT+36
ECTUSER  EQU   ECT+32
ECTDDNUM EQU   ECT+29
@NM00006 EQU   ECTSWS
ECTBKGRD EQU   ECTSWS
ECTNNOT  EQU   ECTSWS
ECTNMAL  EQU   ECTSWS
ECTLOGF  EQU   ECTSWS
ECTATRM  EQU   ECTSWS
@NM00005 EQU   ECTSWS
ECTNOPD  EQU   ECTSWS
ECTSCMD  EQU   ECT+20
ECTPCMD  EQU   ECT+12
ECTRTCD  EQU   ECT+1
ECTRCDF  EQU   ECT
UPTPREFL EQU   UPT+23
UPTPREFX EQU   UPT+16
@NM00004 EQU   UPT+15
UPTLDEL  EQU   UPT+14
UPTCDEL  EQU   UPT+13
UPTWTP   EQU   UPTSWS
UPTMODE  EQU   UPTSWS
UPTALD   EQU   UPTSWS
UPTPAUS  EQU   UPTSWS
UPTNCOM  EQU   UPTSWS
UPTMID   EQU   UPTSWS
UPTNPRM  EQU   UPTSWS
@NM00003 EQU   UPTSWS
UPTUSER  EQU   UPT+2
@NM00002 EQU   UPT
@NM00001 EQU   XPRMLIST+8
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RT00049 EQU   NORMEND
@RT00063 EQU   EXIT
@RT00076 EQU   THEEND
@RT00081 EQU   NORMEND
@RT00093 EQU   EXIT
@RF00079 EQU   NORMEND
@ENDDATA EQU   *
         END   IKJEFT40
