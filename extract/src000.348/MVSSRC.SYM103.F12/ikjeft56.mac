         TITLE 'IKJEFT56, TERMINAL OUTPUT ROUTINE                    '
IKJEFT56 CSECT ,                                                   0001
@MAINENT DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL1(16)                                             0001
         DC    C'IKJEFT56  73.151'                                 0001
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                     0001
         BALR  @12,0                                               0001
@PSTART  DS    0H                                                  0001
         USING @PSTART,@12                                         0001
         L     @00,@SIZDATD                                        0001
         GETMAIN R,LV=(0)
         LR    @11,@01                                             0001
         USING @DATD,@11                                           0001
         ST    @13,@SA00001+4                                      0001
         LM    @00,@01,20(@13)                                     0001
         ST    @11,8(,@13)                                         0001
         LR    @13,@11                                             0001
         MVC   @PC00001(16),0(@01)                                 0001
*                                                                  0017
*   /*****************************************************************/
*   /*                                                               */
*   /* START EXECUTABLE CODE                                         */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0017
*   SAVEREG1=R1;                    /* SAVE REGISTER ONE             */
         LR    SAVEREG1,R1                                         0017
*   PTPBPTR=PTPBPTRX;               /* ESTABLISH REG POINTER         */
         L     PTPBPTR,PTPBPTRX(,R1)                               0018
*   IF TPUTTGET='1'B THEN           /* IF TGET IS INDICATED          */
         TM    TPUTTGET(PTPBPTR),B'10000000'                       0019
         BO    @RT00019                                            0019
*     GOTO INVALID;                                                0020
*   TPUTOPTN=PARMOPTN;              /* FILL IN TPUT OPTON BYTE       */
         MVC   TPUTOPTN(1),PARMOPTN(PTPBPTR)                       0021
*   APOINTR=0;                      /* ZERO OUT TEMP POINTER         */
         SR    @14,@14                                             0022
         ST    @14,APOINTR                                         0022
*   IF PARMMLIN='1'B THEN           /* IS MULTILINE BIT ON ?         */
         TM    PARMMLIN(PTPBPTR),B'00001000'                       0023
         BNO   @RF00023                                            0023
*     DO;                                                          0024
*MULTLINE:                                                         0025
*       APOINTR=CHAINPTR;           /* POINT TO NEXT LINE            */
MULTLINE L     @14,PARMAOUT(,PTPBPTR)                              0025
         MVC   APOINTR(4),CHAINPTR(@14)                            0025
*       IF PARMDTMS='1'B THEN       /* IF THIS IS A DATA             */
         TM    PARMDTMS(PTPBPTR),B'00100000'                       0026
         BO    @RT00026                                            0026
*         GOTO MDATA;                                              0027
*       MSGLEN=PARMAOUT->CHAINLL-4; /* CALCULATE TEXT LENGTH         */
         LH    MSGLEN,CHAINLL(,@14)                                0028
         SH    MSGLEN,@CH00164                                     0028
*       DO MSGIDLEN=1 TO MSGLEN;    /* SEARCH FOR FIRST BLANK        */
         LA    MSGIDLEN,1                                          0029
         B     @DE00029                                            0029
@DL00029 DS    0H                                                  0030
*         IF PARMAOUT->CHAINTXT(MSGIDLEN)=' ' THEN                 0030
         L     @14,PARMAOUT(,PTPBPTR)                              0030
         ALR   @14,MSGIDLEN                                        0030
         CLI   CHAINTXT-1(@14),C' '                                0030
         BE    @RT00030                                            0030
*           GOTO CONTINUE;          /* IF BLANK IS FOUND EXIT        */
*       END;                        /* END MSG-ID LENGTH LOOP        */
         AH    MSGIDLEN,@CH00036                                   0032
@DE00029 CR    MSGIDLEN,MSGLEN                                     0032
         BNH   @DL00029                                            0032
*       GOTO INVALID;               /* IF NO BLANK FOUND             */
         B     INVALID                                             0033
*CONTINUE:                                                         0034
*       IF MSGIDLEN=1 THEN          /* IF NO MSG ID INDICATION       */
CONTINUE CH    MSGIDLEN,@CH00036                                   0034
         BE    @RT00034                                            0034
*         GOTO STRIPID1;                                           0035
*       IF UPTMID='1'B THEN         /* IF NO MESSAGE I.D.            */
         L     @14,UPTPTR(,R1)                                     0036
         TM    UPTMID(@14),B'00100000'                             0036
         BNO   @RF00036                                            0036
*         DO;                       /* STRIPPING IS REQUESTED.       */
*MDATA:                                                            0038
*           LENGTH=CHAINLL-4;       /* USE LENGTH IN HEADER-4        */
MDATA    L     @14,PARMAOUT(,PTPBPTR)                              0038
         LH    @10,CHAINLL(,@14)                                   0038
         SH    @10,@CH00164                                        0038
         ST    @10,LENGTH                                          0038
*           TBUFADR=PARMAOUT+(4+4); /* TEXT BEGINS 8 BYTES BEGINNING
*                                      OF CHAINELEM                  */
         AH    @14,@CH00069                                        0039
         STCM  @14,7,TBUFADR                                       0039
*           GOTO SETUPPUT;                                         0040
         B     SETUPPUT                                            0040
*         END;                      /* END NO-STRIP PROCESSING       */
*STRIPID1:                                                         0042
*       LENGTH=CHAINLL-(4+MSGIDLEN);/* LENGTH OF OUTPUT LINE = THE 0042
*                                      LENGTH OF ENTIRE RECORD - THE
*                                      THE LENGTH OF THE MSG-ID + 4  */
@RF00036 DS    0H                                                  0042
STRIPID1 L     @14,PARMAOUT(,PTPBPTR)                              0042
         LA    @10,4                                               0042
         AR    @10,MSGIDLEN                                        0042
         LCR   @10,@10                                             0042
         AH    @10,CHAINLL(,@14)                                   0042
         ST    @10,LENGTH                                          0042
*       TBUFADR=PARMAOUT+(4+4+MSGIDLEN);/* THE ADDRESS OF THE OUT PUT
*                                      LINE = THE ADDRESS OF THE   0043
*                                      CHAIN ELEMENT + THE LENGTH OF
*                                      THE CHAIN FORWARD POINTER + 0043
*                                      THE LENGTH OF THE MSG-ID + 4
*                                      (HEADR OF VRIABLE RCRD        */
         LA    @10,8                                               0043
         AR    @10,MSGIDLEN                                        0043
         AR    @14,@10                                             0043
         STCM  @14,7,TBUFADR                                       0043
*       GOTO SETUPPUT;                                             0044
*                                                                  0044
         B     SETUPPUT                                            0044
*       /*************************************************************/
*       /*                                                           */
*       /* END STRIP ID PROCESSING                                   */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0045
*     END;                          /* END MULT-LINE PROCESING       */
*   IF PARMDTMS='1'B THEN           /* IF THIS IS A DATA LINE        */
@RF00023 TM    PARMDTMS(PTPBPTR),B'00100000'                       0046
         BO    @RT00046                                            0046
*     GOTO DATALINE;                                               0047
*                                                                  0047
*   /*****************************************************************/
*   /*                                                               */
*   /* SINGLE LEVEL MESSAGE PROCESSING                               */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0048
*   MSGLEN=PARMAOUT->MSGLL-4;                                      0048
         L     @14,PARMAOUT(,PTPBPTR)                              0048
         LH    MSGLEN,MSGLL(,@14)                                  0048
         SH    MSGLEN,@CH00164                                     0048
*   DO MSGIDLEN=1 TO MSGLEN;        /* FIND FIRST BLANK              */
         LA    MSGIDLEN,1                                          0049
         B     @DE00049                                            0049
@DL00049 DS    0H                                                  0050
*     IF PARMAOUT->MSGTEXT(MSGIDLEN)=' ' THEN/* BLANK FOUND BRANCH   */
         L     @14,PARMAOUT(,PTPBPTR)                              0050
         ALR   @14,MSGIDLEN                                        0050
         CLI   MSGTEXT-1(@14),C' '                                 0050
         BE    @RT00050                                            0050
*       GOTO CONTINU2;                                             0051
*   END;                            /* END DETERMINE LENGTH LOOP     */
         AH    MSGIDLEN,@CH00036                                   0052
@DE00049 CR    MSGIDLEN,MSGLEN                                     0052
         BNH   @DL00049                                            0052
*   GOTO INVALID;                   /* IF NO BLANK IS FOUND          */
         B     INVALID                                             0053
*CONTINU2:                                                         0054
*   IF MSGIDLEN=1 THEN                                             0054
CONTINU2 CH    MSGIDLEN,@CH00036                                   0054
         BE    @RT00054                                            0054
*     GOTO STRIPID;                                                0055
*   IF UPTMID='0'B THEN             /* DISPLAY ID BIT OFF            */
         L     @14,UPTPTR(,R1)                                     0056
         TM    UPTMID(@14),B'00100000'                             0056
         BNZ   @RF00056                                            0056
*     DO;                                                          0057
*STRIPID:                                                          0058
*       LENGTH=MSGLL-(4+MSGIDLEN);  /* LENGTH OF OUTPUT LINE = LENGHT
*                                      OF MESSAGE BUFFER - THE LENGTH
*                                      OF THE MSG ID + 4             */
STRIPID  L     @14,PARMAOUT(,PTPBPTR)                              0058
         LA    @10,4                                               0058
         AR    @10,MSGIDLEN                                        0058
         LH    @04,MSGLL(,@14)                                     0058
         SR    @04,@10                                             0058
         ST    @04,LENGTH                                          0058
*       TBUFADR=PARMAOUT+(4+MSGIDLEN);/* ADDRESS OF THE OUTPUT LINE =
*                                      ADDRESS OF MSG BUFFER + THE 0059
*                                      LENGTH OF THE MSGID + 4       */
         AR    @14,@10                                             0059
         STCM  @14,7,TBUFADR                                       0059
*       GOTO SETUPPUT;                                             0060
         B     SETUPPUT                                            0060
*     END;                                                         0061
*                                                                  0061
*   /*****************************************************************/
*   /*                                                               */
*   /* NO MESSAGE I.D. STRIPPING REQUIRED                            */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0062
*   ELSE                                                           0062
*     DO;                                                          0062
@RF00056 DS    0H                                                  0063
*DATALINE:                                                         0063
*       LENGTH=MSGLL-4;             /* LENGTH OF OUTPUT LINE = LENGTH
*                                      OF OUTPUT RECORD - 4          */
DATALINE LA    @14,4                                               0063
         L     @10,PARMAOUT(,PTPBPTR)                              0063
         LH    @04,MSGLL(,@10)                                     0063
         SR    @04,@14                                             0063
         ST    @04,LENGTH                                          0063
*       TBUFADR=PARMAOUT+4;         /* ADDRESS OF OUTPUT LINE =    0064
*                                      ADDRESS OF OUTPUT RECORD + 4  */
         AR    @10,@14                                             0064
         STCM  @10,7,TBUFADR                                       0064
*     END;                                                         0065
*SETUPPUT:                                                         0066
*   IF ECBCBIT='1'B THEN            /* FLUSH BIT ON                  */
SETUPPUT L     @14,@PC00001+8                                      0066
         TM    ECBCBIT(@14),B'01000000'                            0066
         BNO   @RF00066                                            0066
*     DO;                                                          0067
*       RETURNCD=4;                 /* SET RETURN CODE               */
         LA    RETURNCD,4                                          0068
*       GOTO EXIT;                                                 0069
         B     EXIT                                                0069
*     END;                                                         0070
*   IF INSOTDD='1'B THEN            /* IF IN BACKGROUND MODE         */
@RF00066 L     @14,ECTPTR(,R1)                                     0071
         L     @10,ECTIOWA(,@14)                                   0071
         L     @10,IOSTELM(,@10)                                   0071
         TM    INSOTDD(@10),B'00010000'                            0071
         BNO   @RF00071                                            0071
*     CALL IKJRBBMC(TBUFADR,LENGTH,ECT,1);                         0072
         LA    @10,TBUFADR                                         0072
         ST    @10,@AL00001                                        0072
         LA    @10,LENGTH                                          0072
         ST    @10,@AL00001+4                                      0072
         ST    @14,@AL00001+8                                      0072
         LA    @14,@CF00036                                        0072
         ST    @14,@AL00001+12                                     0072
         L     @15,@CV00181                                        0072
         LA    @01,@AL00001                                        0072
         BALR  @14,@15                                             0072
*   ELSE                                                           0073
*     DO;                                                          0073
         B     @RC00071                                            0073
@RF00071 DS    0H                                                  0074
*       R0=LENGTH;                  /* FILL IN PARM REGISTERS        */
         L     R0,LENGTH                                           0074
*       R1=TPUTPARM;                                               0075
         L     R1,TPUTPARM                                         0075
*       GEN(TPUT (1),(0),R);        /* TPUT LINE TO TERMINAL         */
         TPUT (1),(0),R
*     END;                                                         0077
*   TPUTCODE=R15;                   /* SAVE RETURN CODE              */
@RC00071 LR    TPUTCODE,R15                                        0078
*   R1=SAVEREG1;                    /* RESTORE PARM REG              */
         LR    R1,SAVEREG1                                         0079
*   IF TPUTCODE^=0                  /* IF ERROR FROM TPUT      Y02996*/
*     THEN                                                         0080
         LTR   TPUTCODE,TPUTCODE                                   0080
         BZ    @RF00080                                            0080
*     DO;                                                          0081
*       IF TPUTCODE=8               /* ATTN INTERRUPT          Y02996*/
*         THEN                                                     0082
         CH    TPUTCODE,@CH00069                                   0082
         BNE   @RF00082                                            0082
*         DO;                                                      0083
*           RETURNCD=4;             /* SET ATTN RETURNCD       Y02996*/
         LA    RETURNCD,4                                          0084
*           GO TO EXIT;             /* END                     Y02996*/
         B     EXIT                                                0085
*         END;                                                     0086
*       IF TPUTCODE=4 THEN          /* NO WAIT ERROR                 */
@RF00082 CH    TPUTCODE,@CH00164                                   0087
         BNE   @RF00087                                            0087
*         DO;                                                      0088
*           RETURNCD=8;             /* INDICATE NOWAIT ERROR         */
         LA    RETURNCD,8                                          0089
*           GOTO EXIT;                                             0090
         B     EXIT                                                0090
*         END;                                                     0091
*       IF TPUTCODE=20              /* IF LINEDROP SET         Y02996*/
*         THEN                                                     0092
@RF00087 LA    @14,20                                              0092
         CR    TPUTCODE,@14                                        0092
         BNE   @RF00092                                            0092
*         RETURNCD=20;              /* LINEDROP RC             Y02996*/
         LR    RETURNCD,@14                                        0093
*       ELSE                        /* ELSE SET INVAL          Y02996*/
*INVALID:                                                          0094
*         RETURNCD=12;              /* PARMS RC                Y02996*/
         B     @RC00092                                            0094
@RF00092 DS    0H                                                  0094
INVALID  LA    RETURNCD,12                                         0094
*       GOTO EXIT;                  /* END                     Y02996*/
         B     EXIT                                                0095
*     END;                                                         0096
*   IF APOINTER^=0 THEN             /* END OF MULTI-LINE CHAIN       */
@RF00080 ICM   @14,7,APOINTER                                      0097
         BZ    @RF00097                                            0097
*     DO;                                                          0098
*       PARMAOUT=APOINTR;           /* POINT TO NEXT LINE            */
         MVC   PARMAOUT(4,PTPBPTR),APOINTR                         0099
*       GOTO MULTLINE;                                             0100
         B     MULTLINE                                            0100
*     END;                                                         0101
*   RETURNCD=0;                     /* INDICATE NORMAL END           */
@RF00097 SR    RETURNCD,RETURNCD                                   0102
*EXIT:                                                             0103
*   RETURN CODE(RETURNCD);                                         0103
EXIT     L     @13,4(,@13)                                         0103
         L     @00,@SIZDATD                                        0103
         LR    @01,@11                                             0103
         FREEMAIN R,LV=(0),A=(1)
         LR    @15,@02                                             0103
         L     @14,12(,@13)                                        0103
         LM    @00,@12,20(@13)                                     0103
         BR    @14                                                 0103
*   END IKJEFT56                                                   0104
*                                                                  0104
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (IKJUPT  )                                       */
*/*%INCLUDE SYSLIB  (IKJECT  )                                       */
*                                                                  0104
*       ;                                                          0104
@DATA    DS    0H
@CH00164 DC    H'4'
@CH00069 DC    H'8'
@DATD    DSECT
         DS    0F
@SA00001 DS    18F
@PC00001 DS    4F
@AL00001 DS    4A
IKJEFT56 CSECT
         DS    0F
@CF00036 DC    F'1'
@CH00036 EQU   @CF00036+2
@DATD    DSECT
         DS    0D
TPUTPARM DS    AL4
         ORG   TPUTPARM
TPUTOPTN DS    AL1
TBUFADR  DS    AL3
         ORG   TPUTPARM+4
APOINTR  DS    AL4
         ORG   APOINTR
@NM00007 DS    AL1
APOINTER DS    AL3
         ORG   APOINTR+4
LENGTH   DS    F
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
IKJEFT56 CSECT
         DS    0F
@SIZDATD DC    AL1(1)
         DC    AL3(@ENDDATD-@DATD)
@CV00181 DC    V(IKJRBBMC)
         DS    0D
PATCH    DC    10F'0'
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
RETURNCD EQU   @02
SAVEREG1 EQU   @05
MSGIDLEN EQU   @03
MSGLEN   EQU   @04
TPUTCODE EQU   @03
PTPBPTR  EQU   @02
R1       EQU   @01
R0       EQU   @00
R15      EQU   @15
XPRMLIST EQU   0
UPTPTR   EQU   XPRMLIST
ECTPTR   EQU   XPRMLIST+4
PTPBPTRX EQU   XPRMLIST+12
UPT      EQU   0
UPTSWS   EQU   UPT+12
UPTMID   EQU   UPTSWS
ECT      EQU   0
ECTIOWA  EQU   ECT+4
ECTSWS   EQU   ECT+28
PTPB     EQU   0
PARMCNTL EQU   PTPB
PARMDTMS EQU   PARMCNTL
PARMMLIN EQU   PARMCNTL
PARMTPUT EQU   PTPB+2
PARMOPTN EQU   PARMTPUT
TPUTTGET EQU   PARMOPTN
PARMAOUT EQU   PTPB+4
CHAIN    EQU   0
CHAINPTR EQU   CHAIN
CHAINLL  EQU   CHAIN+4
CHAINTXT EQU   CHAIN+8
MESSAGE  EQU   0
MSGLL    EQU   MESSAGE
MSGTEXT  EQU   MESSAGE+4
IOSRL    EQU   0
IOSTELM  EQU   IOSRL
INSTACK  EQU   0
INSCODE  EQU   INSTACK
INSOTDD  EQU   INSCODE
UPTX     EQU   0
ECTX     EQU   0
ECB      EQU   0
ECBCBIT  EQU   ECB
PTPBX    EQU   0
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
ECBCOMPC EQU   ECB
ECBWBIT  EQU   ECB
INSADLSD EQU   INSTACK+1
INSLIST  EQU   INSCODE
INSPROC  EQU   INSCODE
INSPROM  EQU   INSCODE
INSRSVD  EQU   INSCODE
INSINDD  EQU   INSCODE
INSSTOR  EQU   INSCODE
INSTERM  EQU   INSCODE
IOSUNUSD EQU   IOSRL+12
IOSNELM  EQU   IOSRL+10
IOSTLEN  EQU   IOSRL+8
IOSBELM  EQU   IOSRL+4
MSGOO    EQU   MESSAGE+2
CHAINOO  EQU   CHAIN+6
@NM00006 EQU   PARMTPUT+1
PARMFORM EQU   PARMCNTL+1
PARMDMND EQU   PARMCNTL+1
PARMMODE EQU   PARMCNTL+1
PARMPRMT EQU   PARMCNTL
PARMIFOR EQU   PARMCNTL
PARMMLEV EQU   PARMCNTL
PARMSNGL EQU   PARMCNTL
PARMPUT  EQU   PARMCNTL
PARMPBT0 EQU   PARMCNTL
ECTBKPB  EQU   ECT+36
ECTUSER  EQU   ECT+32
ECTDDNUM EQU   ECT+29
@NM00005 EQU   ECTSWS
ECTBKGRD EQU   ECTSWS
ECTNNOT  EQU   ECTSWS
ECTNMAL  EQU   ECTSWS
ECTLOGF  EQU   ECTSWS
ECTATRM  EQU   ECTSWS
@NM00004 EQU   ECTSWS
ECTNOPD  EQU   ECTSWS
ECTSCMD  EQU   ECT+20
ECTPCMD  EQU   ECT+12
ECTSMSG  EQU   ECT+9
ECTMSGF  EQU   ECT+8
ECTRTCD  EQU   ECT+1
ECTRCDF  EQU   ECT
UPTPREFL EQU   UPT+23
UPTPREFX EQU   UPT+16
@NM00003 EQU   UPT+15
UPTLDEL  EQU   UPT+14
UPTCDEL  EQU   UPT+13
UPTWTP   EQU   UPTSWS
UPTMODE  EQU   UPTSWS
UPTALD   EQU   UPTSWS
UPTPAUS  EQU   UPTSWS
UPTNCOM  EQU   UPTSWS
UPTNPRM  EQU   UPTSWS
@NM00002 EQU   UPTSWS
UPTUSER  EQU   UPT+2
@NM00001 EQU   UPT
ECBPTR   EQU   XPRMLIST+8
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RT00019 EQU   INVALID
@RT00026 EQU   MDATA
@RT00030 EQU   CONTINUE
@RT00034 EQU   STRIPID1
@RT00046 EQU   DATALINE
@RT00050 EQU   CONTINU2
@RT00054 EQU   STRIPID
@RC00092 EQU   EXIT
@ENDDATA EQU   *
         END   IKJEFT56
