         TITLE 'IKJEFT55, GETLINE SERVICE ROUTINE - EXEC VERSION       *
                        '
IKJEFT55 CSECT ,                                                   0001
@MAINENT DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL2(@EP00001-@MAINENT)
         DC    AL1(16)                                             0001
         DC    C'IKJEFT55  77.010'                                 0001
IKJGETL  DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL2(@EP00030-IKJGETL)
         ENTRY IKJGETL
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                     0001
         BALR  @12,0                                               0001
@PSTART  DS    0H                                                  0001
         USING @PSTART,@12                                         0001
         L     @00,@SIZDATD                                        0001
         GETMAIN  R,LV=(0)
         LR    @11,@01                                             0001
         USING @DATD,@11                                           0001
         ST    @13,@SA00001+4                                      0001
         LM    @15,@01,16(@13)                                     0001
         ST    @11,8(,@13)                                         0001
         LR    @13,@11                                             0001
         AH    @15,4(,@15)                                         0001
         BR    @15                                                 0001
@EP00001 MVC   @PC00001(16),0(@01)                                 0001
*                                                                  0028
*   /*****************************************************************/
*   /*                                                               */
*   /* START EXECUTABLE CODE                                         */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0028
*   GETLINE=NO;                     /* NOT IKJGETL ENTRY             */
         NI    GETLINE,B'01111111'                                 0028
*   GOTO RESTRT2A;                  /* PROCESS                       */
         B     RESTRT2A                                            0029
*IKJGETL:                                                          0030
*   ENTRY(UPTX,ECTX,ECB,GTPB);                                     0030
@EP00030 MVC   @PC00001(16),0(@01)                                 0030
*   GETLINE=YES;                    /* IKJGETL ENTRY                 */
         OI    GETLINE,B'10000000'                                 0031
*RESTRT2A:                                                         0032
*   ATTNBIT=NO;                     /* INIT CLIST ATTN CONTROL       */
RESTRT2A NI    ATTNBIT,B'01111111'                                 0032
*RESTRT2:                                                          0033
*   STACKL(1:MACSLEN)=MACROS(1:MACSLEN);/* COPY LIST MACROS          */
RESTRT2  L     @06,MACSLEN                                         0033
         BCTR  @06,0                                               0033
         EX    @06,@SM00388                                        0033
*   LSDPTR=INSADLSD;                /* INIT LSDPTR                   */
         L     @15,@PC00001+4                                      0034
         L     @01,ECTIOWA(,@15)                                   0034
         L     @01,IOSTELM(,@01)                                   0034
         L     LSDPTR,INSADLSD-1(,@01)                             0034
         LA    LSDPTR,0(,LSDPTR)                                   0034
*   ATTNBIT=NO;                     /* ZERO ATTENTION BIT    @ZA11841*/
         NI    ATTNBIT,B'01111111'                                 0035
*   TRUNC=NO;                       /* INIT TRUNCATION BIT OFF       */
         NI    TRUNC,B'01111111'                                   0036
*   COMMENTS=NO;                    /* INIT COMMENT SWITCH OFF       */
         NI    COMMENTS,B'01111111'                                0037
*   CONTEXP=NO;                     /* INIT CONTEXP XM0670           */
         NI    CONTEXP,B'01111111'                                 0038
*   IF PARMTGET(1)=NO THEN                                         0039
         L     @06,@PC00001+12                                     0039
         TM    PARMTGET(@06),B'10000000'                           0039
         BNZ   @RF00039                                            0039
*     DO;                           /* IF TGET BIT IS NOT ON         */
*INVALID:                                                          0041
*       RETURNCD=20;                /* SET INVALID PARM RTRNCD       */
INVALID  LA    RETURNCD,20                                         0041
*       GOTO EXIT;                  /* BRANCH TO END PROC            */
         B     EXIT                                                0042
*     END;                          /* END INVALID PARM PROCES       */
*   IF ECTATTN=YES THEN             /* BYPASS NORMAL PROCESS ON    0044
*                                                            @ZA08099*/
@RF00039 L     @06,@PC00001+4                                      0044
         TM    ECTATTN(@06),B'00000001'                            0044
         BNO   @RF00044                                            0044
*     DO;                           /* CLIST ATTN PROCESSING @ZA08099*/
*       SSELMPTR=F0;                /* INIT SUSPENDED ELEMENT PTR  0046
*                                                            @ZA08099*/
         SLR   SSELMPTR,SSELMPTR                                   0046
*       GOTO CLIST;                 /* HANDLED IN CLIST PROCESSING 0047
*                                                            @ZA08099*/
         B     CLIST                                               0047
*     END;                          /*                       @ZA08099*/
*   IF PARMTERM=YES×                /* DEMAND FROM TERMINAL OR       */
*       INSTERM=YES×                /* CURRENT SOURCE IS TERM        */
*       INSINDD=YES THEN            /* IN DATESET MODE               */
@RF00044 L     @06,@PC00001+12                                     0049
         TM    PARMTERM(@06),B'00010000'                           0049
         BO    @RT00049                                            0049
         L     @06,@PC00001+4                                      0049
         L     @06,ECTIOWA(,@06)                                   0049
         L     @06,IOSTELM(,@06)                                   0049
         TM    INSTERM(@06),B'10100000'                            0049
         BZ    @RF00049                                            0049
@RT00049 DS    0H                                                  0050
*     DO;                                                          0050
*       IF INSINDD=YES&PARMTERM=NO THEN                            0051
         L     @06,@PC00001+4                                      0051
         L     @06,ECTIOWA(,@06)                                   0051
         L     @06,IOSTELM(,@06)                                   0051
         TM    INSINDD(@06),B'00100000'                            0051
         BNO   @RF00051                                            0051
         L     @15,@PC00001+12                                     0051
         TM    PARMTERM(@15),B'00010000'                           0051
         BNZ   @RF00051                                            0051
*         GETLEN=DSDMINBF+4;                                       0052
         L     @06,INSADLSD-1(,@06)                                0052
         LA    GETLEN,4                                            0052
         AH    GETLEN,DSDMINBF(,@06)                               0052
*       ELSE                                                       0053
*         GETLEN=136;                                              0053
         B     @RC00051                                            0053
@RF00051 LA    GETLEN,136                                          0053
*       RFY                                                        0054
*        (R15) RSTD;                                               0054
@RC00051 DS    0H                                                  0055
*       DO;                         /* GETMAIN (EC) LV(GETLEN)     0055
*                                      A(OBTAINAD) SP(1)             */
*         RESPECIFY                                                0056
*          (GPR01P) RESTRICTED;                                    0056
*         I004=I004&&I004;          /* INIT LIST                     */
         XC    I004(10),I004                                       0057
*         I00404='20'X;             /* TYPE                          */
         MVI   I00404,X'20'                                        0058
*         I00401=GETLEN;            /* LENGTH                        */
         ST    GETLEN,I00401                                       0059
*         I00403=ADDR(OBTAINAD);    /* ADDR OF ADDR LIST             */
         LA    @14,OBTAINAD                                        0060
         STCM  @14,7,I00403                                        0060
*         I00405=1;                 /* SUBPOOL VALUE                 */
         MVI   I00405,X'01'                                        0061
*         GPR01P=ADDR(I004);        /* REG1 POINTS TO LIST           */
         LA    GPR01P,I004                                         0062
*         SVC(4);                   /* STANDARD-FORM OF GETMAIN      */
         SVC   4                                                   0063
*         RESPECIFY                                                0064
*          (GPR01P) UNRESTRICTED;                                  0064
*       END;                        /* GETMAIN (EC) LV(GETLEN)     0065
*                                      A(OBTAINAD) SP(1)             */
*       IF R15^=0 THEN              /* GETMAIN FAILURE               */
         LTR   R15,R15                                             0066
         BZ    @RF00066                                            0066
*         DO;                                                      0067
*           RFY                                                    0068
*            (R15) UNRSTD;                                         0068
*GETMNER:                                                          0069
*           RETURNCD=24;            /* INDICATE GETMAIN FAILUR       */
GETMNER  LA    RETURNCD,24                                         0069
*           GOTO EXIT;                                             0070
         B     EXIT                                                0070
*         END;                                                     0071
*       LL=4;                       /* SET INIT BUF LEN TO 4         */
@RF00066 LA    @09,4                                               0072
         L     @06,OBTAINAD                                        0072
         STH   @09,LL(,@06)                                        0072
*       BUFLEN=GETLEN-4;            /* INIT BUFFR LEN FOR TGET       */
         LR    BUFLEN,GETLEN                                       0073
         SLR   BUFLEN,@09                                          0073
*       TGOPTION=PARMTGET;          /* MOVE TGET OPTON IN PARM       */
         L     @05,@PC00001+12                                     0074
         IC    @15,PARMTGET(,@05)                                  0074
         STC   @15,TGOPTION                                        0074
*       IBUFADR=OBTAINAD+4;         /* BUFFER ADDRESS FOR TGET       */
         ALR   @06,@09                                             0075
         STCM  @06,7,IBUFADR                                       0075
*CHECKECB:                                                         0076
*       IF ECBCBIT=YES              /* IF ATTN ECB IS POSTED         */
*         THEN                                                     0076
CHECKECB L     @09,@PC00001+8                                      0076
         TM    ECBCBIT(@09),B'01000000'                            0076
         BNO   @RF00076                                            0076
*         DO;                                                      0077
*           RETURNCD=8;             /* SET ATTN RC             Y02996*/
         LA    RETURNCD,8                                          0078
*           GO TO EREXIT;           /* THEN TAKE EREXIT        Y02996*/
         B     EREXIT                                              0079
*         END;                                                     0080
*       IF INSINDD=NO×              /* IF NOT IN DATASET MODE        */
*           (IOSBELM->INSINDD=NO&PARMTERM=YES) THEN                0081
@RF00076 L     @09,@PC00001+4                                      0081
         L     @09,ECTIOWA(,@09)                                   0081
         L     @06,IOSTELM(,@09)                                   0081
         TM    INSINDD(@06),B'00100000'                            0081
         BZ    @RT00081                                            0081
         L     @09,IOSBELM(,@09)                                   0081
         TM    INSINDD(@09),B'00100000'                            0081
         BNZ   @RF00081                                            0081
         L     @09,@PC00001+12                                     0081
         TM    PARMTERM(@09),B'00010000'                           0081
         BO    @RT00081                                            0081
*         GO TO SETUPGET;           /* PREPARE FOR TGET              */
*       LINELEN=BUFLEN;             /*                               */
@RF00081 ST    BUFLEN,LINELEN                                      0083
*       IF LINELEN<DSDMINBF THEN    /* IF NOT ENOUGH BUFFER          */
         L     @09,LINELEN                                         0084
         L     @06,@PC00001+4                                      0084
         L     @01,ECTIOWA(,@06)                                   0084
         L     @01,IOSTELM(,@01)                                   0084
         L     @01,INSADLSD-1(,@01)                                0084
         CH    @09,DSDMINBF(,@01)                                  0084
         BL    @RT00084                                            0084
*         GO TO GETBIGBF;           /* GET MORE BUFFER               */
*       RFY                                                        0086
*        (R15) RSTD;                                               0086
*       CALL IKJRBBMC(IBUFADR,LINELEN,ECT,0);                      0087
         LA    @14,IBUFADR                                         0087
         ST    @14,@AL00001                                        0087
         LA    @14,LINELEN                                         0087
         ST    @14,@AL00001+4                                      0087
         ST    @06,@AL00001+8                                      0087
         LA    @14,@CF00256                                        0087
         ST    @14,@AL00001+12                                     0087
         L     @15,@CV00315                                        0087
         LA    @01,@AL00001                                        0087
         BALR  @14,@15                                             0087
*       TGETCODE=R15;               /* SAVE RET CODE FROM BMC        */
         LR    TGETCODE,R15                                        0088
*       RFY                                                        0089
*        (R15) UNRSTD;                                             0089
*       IF TGETCODE^=0 THEN         /* IF EOD OCCURRED               */
         SLR   @09,@09                                             0090
         CR    TGETCODE,@09                                        0090
         BE    @RF00090                                            0090
*         DO;                                                      0091
*           IF CONTEXP=YES THEN     /* IF CONT EXP XM0670            */
         TM    CONTEXP,B'10000000'                                 0092
         BO    @RT00092                                            0092
*             GO TO NORMEND;        /* SET RETURN CODE/EXIT  @ZA15801*/
*           IF IOSTELM=IOSBELM THEN /* IF EOF ON BACKGRND            */
         L     @10,@PC00001+4                                      0094
         L     @04,ECTIOWA(,@10)                                   0094
         CLC   IOSTELM(4,@04),IOSBELM(@04)                         0094
         BNE   @RF00094                                            0094
*             DO;                   /* SOURCE, THEN FAKE AN END      */
*               ECTLOGF=YES;        /* SET LOGOFF BIT                */
         OI    ECTLOGF(@10),B'00010000'                            0096
*               OO=0;               /* ZERO OFFSET YM2737            */
         L     @10,OBTAINAD                                        0097
         STH   @09,OO(,@10)                                        0097
*               LL=LL+3;                                           0098
         LA    @09,3                                               0098
         AH    @09,LL(,@10)                                        0098
         STH   @09,LL(,@10)                                        0098
*               DTAA(1:3)='END';    /* FAKE END COMMAND              */
         MVC   DTAA(3,@10),@CC00317                                0099
*               TGETCODE=0;                                        0100
         SLR   TGETCODE,TGETCODE                                   0100
*             END;                                                 0101
*           ELSE                                                   0102
*             LL=LL-4;                                             0102
         B     @RC00094                                            0102
@RF00094 L     @10,OBTAINAD                                        0102
         LH    @09,LL(,@10)                                        0102
         SL    @09,@CF00055                                        0102
         STH   @09,LL(,@10)                                        0102
*           GO TO NORMEND;                                         0103
         B     NORMEND                                             0103
*         END;                                                     0104
*       LL=LL+LINELEN;              /* ESTABLISH BUFF LENGTH         */
@RF00090 L     @09,OBTAINAD                                        0105
         LH    @06,LL(,@09)                                        0105
         AL    @06,LINELEN                                         0105
         STH   @06,LL(,@09)                                        0105
*       OO=0;                       /* ZERO OUT OFFSET               */
         SLR   @06,@06                                             0106
         STH   @06,OO(,@09)                                        0106
*       GO TO CKLOGPHY;             /* CHECK LINE PROCNG TYPE        */
         B     CKLOGPHY                                            0107
*SETUPGET:                                                         0108
*       RFY                                                        0108
*        (R0,                                                      0108
*         R1,                                                      0108
*         R15) RSTD;                                               0108
SETUPGET DS    0H                                                  0109
*       R0=BUFLEN;                  /* FILL IN TGET PARM REG 0       */
         LR    R0,BUFLEN                                           0109
*       R1=TGETPARM;                /* FILL IN TGET PARM REG 1       */
         L     R1,TGETPARM                                         0110
*       GEN SETS(R1) REFS(R0)(TGET (1),(0),R);                     0111
         TGET (1),(0),R
*       TGETCODE=R15;               /* SAVE RETRN CODE FROM TGET     */
         LR    TGETCODE,R15                                        0112
*       LINELEN=R1;                 /* SAVE LEN OF RETURNED LINE     */
         ST    R1,LINELEN                                          0113
*       RFY                                                        0114
*        (R0,                                                      0114
*         R1,                                                      0114
*         R15) UNRSTD;                                             0114
*       IF TGETCODE=0×              /* IF A LINE WAS RETURNED        */
*           TGETCODE=12 THEN        /* FROM TGET                     */
         LTR   TGETCODE,TGETCODE                                   0115
         BZ    @RT00115                                            0115
         C     TGETCODE,@CF00320                                   0115
         BNE   @RF00115                                            0115
@RT00115 DS    0H                                                  0116
*         DO;                                                      0116
*           LL=LL+LINELEN;          /* ESTABLISH BUFLEN              */
         L     @09,OBTAINAD                                        0117
         LH    @06,LL(,@09)                                        0117
         AL    @06,LINELEN                                         0117
         STH   @06,LL(,@09)                                        0117
*           OO=0;                   /* ZERO OUT OFFSET               */
         SLR   @06,@06                                             0118
         STH   @06,OO(,@09)                                        0118
*         END;                                                     0119
*       IF TGETCODE^=0 THEN         /* IF OTHER ERR FROM TGET        */
@RF00115 LTR   TGETCODE,TGETCODE                                   0120
         BZ    @RF00120                                            0120
*         DO;                                                      0121
*           IF TGETCODE=8 THEN      /* IF AN ATTN INTRPT             */
         C     TGETCODE,@CF00050                                   0122
         BE    @RT00122                                            0122
*             GOTO CHECKECB;        /* TRY AGAIN                     */
*           IF TGETCODE=12 THEN     /* BUFFR TOO SMALL               */
         LA    @09,12                                              0124
         CR    TGETCODE,@09                                        0124
         BE    @RT00124                                            0124
*             GOTO GETBIGBF;                                       0125
*           IF TGETCODE=4 THEN      /* IF NWAIT & NLINE              */
         C     TGETCODE,@CF00055                                   0126
         BNE   @RF00126                                            0126
*             DO;                   /* SET NOWAIT RETURN CODE        */
*               RETURNCD=12;                                       0128
         LR    RETURNCD,@09                                        0128
*               GOTO EREXIT;        /* TERMINATE PROCESSING          */
         B     EREXIT                                              0129
*             END;                                                 0130
*           IF TGETCODE=20          /* IF TERM HUNG UP SET LINEDROP
*                                      RETURN CODE                   */
*             THEN                                                 0131
@RF00126 C     TGETCODE,@CF00277                                   0131
         BNE   @RF00131                                            0131
*             RETURNCD=28;          /*                         Y02996*/
         LA    RETURNCD,28                                         0132
*           ELSE                                                   0133
*             RETURNCD=20;          /* OTHERWISE SET INVALID       0133
*                                      PARAMETERS RETURN CODE  Y02996*/
         B     @RC00131                                            0133
@RF00131 LA    RETURNCD,20                                         0133
*           GOTO EREXIT;                                           0134
         B     EREXIT                                              0134
*         END;                                                     0135
*                                                                  0136
*       /*************************************************************/
*       /*                                                           */
*       /* IF THIS IS CONTINUATION PROCESSING AND PLUS SIGN          */
*       /* PROCESSING IS IN EFFECT, THEN SCAN CONTINUED PORTION OF   */
*       /* THE BUFFER AND REMOVE ALL LEADING DELIMITERS AND COMMENTS.*/
*       /* UPON RETURN FROM SCAN, THE BUFFER POINTER IS CHECKED TO   */
*       /* SEE IF IT HAS CHANGED. IF SO, THEN THE BUFFER IS MOVED    */
*       /* DOWN, REMOVING THE DELIMITERS. IF SCAN MADE THE BUFFER    */
*       /* POINTER GREATER THAN THE END OF THE BUFFER, THE CONTINUED */
*       /* PORTION OF THE BUFFER IS DISCARDED AND PROCESSING         */
*       /* TERMINATES                                                */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0136
*CKLOGPHY:                                                         0136
*       IF CONTEXP=YES&TRUNC=YES THEN                              0136
@RF00120 DS    0H                                                  0136
CKLOGPHY TM    CONTEXP,B'10000000'                                 0136
         BNO   @RF00136                                            0136
         TM    TRUNC,B'10000000'                                   0136
         BNO   @RF00136                                            0136
*         DO;                                                      0137
*           ENDLOC=IBUFADR+LINELEN-1;                              0138
         L     @09,IBUFADR-1                                       0138
         LA    @09,0(,@09)                                         0138
         LR    ENDLOC,@09                                          0138
         AL    ENDLOC,LINELEN                                      0138
         BCTR  ENDLOC,0                                            0138
*           BUFPTR=IBUFADR;                                        0139
         LR    BUFPTR,@09                                          0139
*           CALL SCAN;                                             0140
         BAL   @14,SCAN                                            0140
*           IF BUFPTR>IBUFADR&ENDLOC>=BUFPTR THEN                  0141
         L     @09,IBUFADR-1                                       0141
         LA    @09,0(,@09)                                         0141
         CR    BUFPTR,@09                                          0141
         BNH   @RF00141                                            0141
         CR    ENDLOC,BUFPTR                                       0141
         BL    @RF00141                                            0141
*             DO;                                                  0142
*               MOVELEN=ENDLOC-BUFPTR+1;                           0143
         LR    MOVELEN,ENDLOC                                      0143
         SLR   MOVELEN,BUFPTR                                      0143
         AL    MOVELEN,@CF00036                                    0143
*               MASTBFR(1:MOVELEN)=CBUF(1:MOVELEN);                0144
         LR    @06,MOVELEN                                         0144
         BCTR  @06,0                                               0144
         EX    @06,@SM00391                                        0144
*               LL=LL-(LINELEN-MOVELEN);                           0145
         L     @09,OBTAINAD                                        0145
         L     @06,LINELEN                                         0145
         SLR   @06,MOVELEN                                         0145
         LCR   @06,@06                                             0145
         AH    @06,LL(,@09)                                        0145
         STH   @06,LL(,@09)                                        0145
*             END;                                                 0146
*           IF BUFPTR>ENDLOC THEN                                  0147
@RF00141 CR    BUFPTR,ENDLOC                                       0147
         BNH   @RF00147                                            0147
*             DO;                                                  0148
*               LL=LL-LINELEN;                                     0149
         L     @09,OBTAINAD                                        0149
         LH    @06,LL(,@09)                                        0149
         SL    @06,LINELEN                                         0149
         STH   @06,LL(,@09)                                        0149
*               GO TO DELIMCK;                                     0150
         B     DELIMCK                                             0150
*             END;                                                 0151
*         END;                                                     0152
@RF00147 DS    0H                                                  0153
*       IF PARMPHYS=NO THEN         /* IF NOT PHYSICAL LINE          */
@RF00136 L     @09,@PC00001+12                                     0153
         TM    PARMPHYS(@09),B'00100000'                           0153
         BNZ   @RF00153                                            0153
*         DO;                                                      0154
*           APOINTER=OBTAINAD+LL-1; /* POINT TO LAST CHAR            */
         L     @09,OBTAINAD                                        0155
         LH    APOINTER,LL(,@09)                                   0155
         ALR   APOINTER,@09                                        0155
         BCTR  APOINTER,0                                          0155
*           IF LASTCHAR='+'×LASTCHAR='-' THEN/* LINE IS TO BE      0156
*                                      CONTINUED                     */
         CLI   LASTCHAR(APOINTER),C'+'                             0156
         BE    @RT00156                                            0156
         CLI   LASTCHAR(APOINTER),C'-'                             0156
         BNE   @RF00156                                            0156
@RT00156 DS    0H                                                  0157
*             DO;                                                  0157
*               IF LASTCHAR='+' THEN                               0158
         CLI   LASTCHAR(APOINTER),C'+'                             0158
         BNE   @RF00158                                            0158
*                 TRUNC=YES;                                       0159
         OI    TRUNC,B'10000000'                                   0159
*               CONTEXP=YES;                                       0160
@RF00158 OI    CONTEXP,B'10000000'                                 0160
*               LL=LL-1;            /* CAUSE '-' TO BE OVRLAID       */
         L     @09,OBTAINAD                                        0161
         LH    @06,LL(,@09)                                        0161
         BCTR  @06,0                                               0161
         STH   @06,LL(,@09)                                        0161
*               BUFLEN=GETLEN-LL;   /* INDICATE HOW MANY BYTES ARE 0162
*                                      LEFT IN INPUT BUFFER          */
         LR    BUFLEN,GETLEN                                       0162
         SLR   BUFLEN,@06                                          0162
*               IBUFADR=OBTAINAD+LL;/* POINT TO NEXT AVAIL BYT       */
         ALR   @09,@06                                             0163
         STCM  @09,7,IBUFADR                                       0163
*               GOTO CHECKECB;                                     0164
         B     CHECKECB                                            0164
*             END;                  /* OF CONTINUED LINE PROCESSING  */
*         END;                      /* OF LOGICAL LINE PROCESSING    */
@RF00156 DS    0H                                                  0167
*DELIMCK:                                                          0167
*       COUNT=1;                    /* INIT COUNT                    */
@RF00153 DS    0H                                                  0167
DELIMCK  LA    COUNT,1                                             0167
*       IF PARMTERM=NO&             /* NOT DEMAND FROM TERMINAL      */
*           INSEXEC=YES&EXDLMPTR^=0 THEN/* IF TERMIN DELIM THEN CHECK*/
         L     @06,@PC00001+12                                     0168
         TM    PARMTERM(@06),B'00010000'                           0168
         BNZ   @RF00168                                            0168
         L     @06,@PC00001+4                                      0168
         L     @06,ECTIOWA(,@06)                                   0168
         L     @06,IOSTELM(,@06)                                   0168
         TM    INSEXEC(@06),B'00001000'                            0168
         BNO   @RF00168                                            0168
         L     @06,LSDEXEC(,LSDPTR)                                0168
         L     @06,EXDLMPTR(,@06)                                  0168
         LTR   @06,@06                                             0168
         BZ    @RF00168                                            0168
*         DO;                       /* FOR MATCHING DELIMETER        */
*           BUFPTR=OBTAINAD+4;      /* POINT TO BIGIN OF BFR         */
         L     @06,OBTAINAD                                        0170
         LA    BUFPTR,4                                            0170
         ALR   BUFPTR,@06                                          0170
*           ENDLOC=BUFPTR+LL-5;     /* POINT TO END OF BFR           */
         LR    ENDLOC,BUFPTR                                       0171
         AH    ENDLOC,LL(,@06)                                     0171
         SL    ENDLOC,@CF00259                                     0171
*           CALL SCAN;              /* SKIP DELIMETERS               */
         BAL   @14,SCAN                                            0172
*           IF BUFPTR<=ENDLOC THEN  /* AS LONG AS AT LEAST ONE       */
         CR    BUFPTR,ENDLOC                                       0173
         BH    @RF00173                                            0173
*             DO;                   /* PROCESS                       */
*               ENDBUF=ENDLOC-BUFPTR+1;/* SET COUNT OF CHARS         */
         LA    @03,1                                               0175
         LR    ENDBUF,ENDLOC                                       0175
         SLR   ENDBUF,BUFPTR                                       0175
         ALR   ENDBUF,@03                                          0175
*               DO I=1 TO ENDBUF WHILE/* FIND END OF FIRST STRING    */
*                     CBUF(I)^=' '&CBUF(I)^=','&CBUF(I)^='05'X&/*    */
*                     (I=ENDBUF×CBUF(I:I+1)^='/*');/*                */
         LA    @15,1                                               0176
         LR    I,@15                                               0176
         B     @DE00176                                            0176
@DL00176 LR    @01,BUFPTR                                          0176
         ALR   @01,I                                               0176
         BCTR  @01,0                                               0176
         CLI   CBUF(@01),C' '                                      0176
         BE    @DC00176                                            0176
         LR    @01,BUFPTR                                          0176
         ALR   @01,I                                               0176
         BCTR  @01,0                                               0176
         CLI   CBUF(@01),C','                                      0176
         BE    @DC00176                                            0176
         LR    @01,BUFPTR                                          0176
         ALR   @01,I                                               0176
         BCTR  @01,0                                               0176
         CLI   CBUF(@01),X'05'                                     0176
         BE    @DC00176                                            0176
         CR    I,ENDBUF                                            0176
         BE    @DB00176                                            0176
         LR    @01,BUFPTR                                          0176
         ALR   @01,I                                               0176
         BCTR  @01,0                                               0176
         CLC   CBUF(2,@01),@CC00331                                0176
         BE    @DC00176                                            0176
@DB00176 DS    0H                                                  0177
*               END;                /*                               */
         AL    I,@CF00036                                          0177
@DE00176 CR    I,ENDBUF                                            0177
         BNH   @DL00176                                            0177
@DC00176 DS    0H                                                  0178
*               I=I-1;              /* DECREMENT I                   */
         BCTR  I,0                                                 0178
*             END;                  /* END                           */
*           ELSE                    /* OTHERWISE ALL DELIMS          */
*             I=0;                  /* I=0                           */
         B     @RC00173                                            0180
@RF00173 SLR   I,I                                                 0180
*           FOLDAREA='';            /* CLEAR FOLDAREA TO BLANK       */
@RC00173 MVI   FOLDAREA,C' '                                       0181
         MVC   FOLDAREA+1(255),FOLDAREA                            0181
*           IF I>0 THEN             /* IF NOT NULL                   */
         LTR   I,I                                                 0182
         BNP   @RF00182                                            0182
*             FOLDAREA(1:I)=FOLDAREA(1:I)×CBUF(1:I);/* FOLD INPUT LN */
         LR    @06,I                                               0183
         BCTR  @06,0                                               0183
         EX    @06,@SO00393                                        0183
*           DO DELIMPTR=EXDLMPTR+2 BY DELIMLL WHILE/* FIND A MATCH   */
*                 DELIMPTR<EXDLMPTR+EXDLMPTR->DELIMLL;/* END OF LST  */
@RF00182 L     @01,LSDEXEC(,LSDPTR)                                0184
         LA    DELIMPTR,2                                          0184
         AL    DELIMPTR,EXDLMPTR(,@01)                             0184
         B     @DE00184                                            0184
@DL00184 DS    0H                                                  0185
*             IF I+2=DELIMLL&(I=0×  /* LENGTH MATCH                  */
*                 FOLDAREA(1:I)=DELIM(1:I)) THEN                   0185
         LA    @15,2                                               0185
         ALR   @15,I                                               0185
         CH    @15,DELIMLL(,DELIMPTR)                              0185
         BNE   @RF00185                                            0185
         LTR   I,I                                                 0185
         BZ    @RT00185                                            0185
         LR    @15,I                                               0185
         BCTR  @15,0                                               0185
         EX    @15,@SC00395                                        0185
         BNE   @RF00185                                            0185
@RT00185 DS    0H                                                  0186
*               DO;                 /*                               */
*                 LOCPTR=ADDR(SYSDLM);/* SYSDLM FIRST                */
         LA    @06,@CC00252                                        0187
         ST    @06,LOCPTR                                          0187
*                 LOCLEN=LENGTH(SYSDLM);/* LENGTH                    */
         MVC   LOCLEN(4),@CF00134                                  0188
*                 VALPTR=ADDR(OUTA);/* VALUE                         */
         LA    @06,OUTA                                            0189
         ST    @06,VALPTR                                          0189
*                 CVD(COUNT,WORKAREA);/* CONVERT TO DECIMAL          */
         CVD   COUNT,WORKAREA                                      0190
*                 UNPK(OUTA,WORKAREA);/* UNPACK TO PRINTABLE         */
         UNPK  OUTA(2),WORKAREA(8)                                 0191
*                 OUTA(2)=OUTA(2)×'0';/* GET RID OF SIGN             */
         OI    OUTA+1,C'0'                                         0192
*                 IF OUTA(1)='0' THEN/* IF LEADING ZERO              */
         CLI   OUTA,C'0'                                           0193
         BNE   @RF00193                                            0193
*                   DO;             /* REMOVE                        */
*                     OUTA(1)=OUTA(2);/* SHIFT OUTA                  */
         MVC   OUTA(1),OUTA+1                                      0195
*                     VALLEN=1;     /* VALUE LENGTH IS ONE           */
         MVC   VALLEN(4),@CF00036                                  0196
*                   END;            /*                               */
*                 ELSE              /* OTHERWISE                     */
*                   VALLEN=2;       /* VALLEN IS TWO                 */
         B     @RC00193                                            0198
@RF00193 MVC   VALLEN(4),@CF00087                                  0198
*                 CALL IKJUPDT(UPT,ECT,ECB,UPLIST);/* UPDATE         */
@RC00193 L     @09,@PC00001                                        0199
         ST    @09,@AL00001                                        0199
         L     @09,@PC00001+4                                      0199
         ST    @09,@AL00001+4                                      0199
         L     @09,@PC00001+8                                      0199
         ST    @09,@AL00001+8                                      0199
         LA    @09,UPLIST                                          0199
         ST    @09,@AL00001+12                                     0199
         L     @15,@CV00336                                        0199
         LA    @01,@AL00001                                        0199
         BALR  @14,@15                                             0199
*                 LOCPTR=ADDR(SYSDVAL);/* UPDATE VALUE               */
         LA    @09,@CC00254                                        0200
         ST    @09,LOCPTR                                          0200
*                 LOCLEN=LENGTH(SYSDVAL);/* LENGTH                   */
         MVC   LOCLEN(4),@CF00103                                  0201
*                 VALPTR=ADDR(CBUF(I+1));/* VALUE                    */
         LA    @09,CBUF(I,BUFPTR)                                  0202
         ST    @09,VALPTR                                          0202
*                 VALLEN=ENDLOC-VALPTR+1;/* LENGTH                   */
         LA    @06,1                                               0203
         LCR   @09,@09                                             0203
         ALR   @09,ENDLOC                                          0203
         ALR   @09,@06                                             0203
         ST    @09,VALLEN                                          0203
*                 DO I=1 TO VALLEN; /* FOLD TO UPPER CASE            */
         LR    I,@06                                               0204
         B     @DE00204                                            0204
@DL00204 DS    0H                                                  0205
*                   TR(VAL(I),TRTABUP);/* FOLD TO UPPER CASE         */
         L     @09,VALPTR                                          0205
         ALR   @09,I                                               0205
         BCTR  @09,0                                               0205
         L     @06,@CA00206                                        0205
         TR    VAL(1,@09),TRTABUP-TRTABUP(@06)                     0205
*                 END;              /*                               */
         AL    I,@CF00036                                          0206
@DE00204 C     I,VALLEN                                            0206
         BNH   @DL00204                                            0206
*                 CALL IKJUPDT(UPT,ECT,ECB,UPLIST);/* UPDATE         */
         L     @09,@PC00001                                        0207
         ST    @09,@AL00001                                        0207
         L     @09,@PC00001+4                                      0207
         ST    @09,@AL00001+4                                      0207
         L     @09,@PC00001+8                                      0207
         ST    @09,@AL00001+8                                      0207
         LA    @09,UPLIST                                          0207
         ST    @09,@AL00001+12                                     0207
         L     @15,@CV00336                                        0207
         LA    @01,@AL00001                                        0207
         BALR  @14,@15                                             0207
*                 CALL FREETIN;     /* FREE TERMIN BLKS              */
         BAL   @14,FREETIN                                         0208
*                 DO;               /* FREEMAIN (E) LV(GETLEN)     0209
*                                      A(OBTAINAD) SP(1)             */
*                   RESPECIFY                                      0210
*                    (GPR01P) RESTRICTED;                          0210
*                   I005=I005&&I005;/* INIT LIST                     */
         XC    I005(10),I005                                       0211
*                   I00505='00'X;   /* SET TYPE                      */
         MVI   I00505,X'00'                                        0212
*                   I00502=GETLEN;  /* LENGTH                        */
         STCM  GETLEN,7,I00502                                     0213
*                   I00504=ADDR(OBTAINAD);/* ADDR OF ADDR LIST       */
         LA    @06,OBTAINAD                                        0214
         STCM  @06,7,I00504                                        0214
*                   I00506=1;       /* SUBPOOL VALUE                 */
         MVI   I00506,X'01'                                        0215
*                   GPR01P=ADDR(I005);/* REG1 POINTS TO LIST         */
         LA    GPR01P,I005                                         0216
*                   SVC(5);         /* STANDARD-FORM OF GETMAIN      */
         SVC   5                                                   0217
*                   RESPECIFY                                      0218
*                    (GPR01P) UNRESTRICTED;                        0218
*                 END;              /* FREEMAIN (E) LV(GETLEN)     0219
*                                      A(OBTAINAD) SP(1)             */
*                 GOTO CLIST;       /* PROCESS CLIST                 */
         B     CLIST                                               0220
*               END;                                               0221
*             ELSE                                                 0222
*               COUNT=COUNT+1;      /* INCREMENT COUNT               */
@RF00185 AL    COUNT,@CF00036                                      0222
*           END;                                                   0223
         AH    DELIMPTR,DELIMLL(,DELIMPTR)                         0223
@DE00184 L     @15,LSDEXEC(,LSDPTR)                                0223
         L     @14,EXDLMPTR(,@15)                                  0223
         LH    @01,DELIMLL(,@14)                                   0223
         ALR   @01,@14                                             0223
         CR    DELIMPTR,@01                                        0223
         BL    @DL00184                                            0223
*           IF ATTNBIT=YES THEN     /* IF WE ARE IN CLIST ATT        */
         TM    ATTNBIT,B'10000000'                                 0224
         BNO   @RF00224                                            0224
*             DO;                   /* PROCESSING THEN WE MUST     0225
*                                      RESTORE               @ZA08099*/
*               ATTNBIT=NO;         /* OR DELETE ANY SUSPENDED ELMTS
*                                                            @ZA08099*/
         NI    ATTNBIT,B'01111111'                                 0226
*               IF ATINCNTL=YES THEN/* IF WE ARE STILL IN THE ATTN 0227
*                                                            @ZA08099*/
         TM    ATINCNTL(@15),B'10000000'                           0227
         BNO   @RF00227                                            0227
*                 DO;               /* ACTION THEN FORCE END OF ATTN
*                                                            @ZA08099*/
*                   ATINCNTL=NO;    /* ACTION AND RESTORE LSD TO   0229
*                                      POINT                 @ZA08099*/
         NI    ATINCNTL(@15),B'01111111'                           0229
*                   LSDANEXT=RETPTR;/* OF INTERRUPTION       @ZA08099*/
         L     @10,RETPTR(,@15)                                    0230
         ST    @10,LSDANEXT(,LSDPTR)                               0230
*                 END;              /*                       @ZA08099*/
*               CALL FREETIN;       /* FREE TERMIN CONTROL BLKS    0232
*                                                            @ZA08099*/
@RF00227 BAL   @14,FREETIN                                         0232
*               IF BUFPTR<=ENDLOC THEN/* IF DATA IS NOT A NULL LINE
*                                                            @ZA08099*/
         CR    BUFPTR,ENDLOC                                       0233
         BH    @RF00233                                            0233
*                 DO;               /* THEN DELETE SUSPENDED ELMTS 0234
*                                                            @ZA08099*/
*                   DLBASE=IOSTELM; /* OTHERWISE RESTORE THEM      0235
*                                                            @ZA08099*/
         L     @10,@PC00001+4                                      0235
         L     @10,ECTIOWA(,@10)                                   0235
         L     DLBASE,IOSTELM(,@10)                                0235
*                   IOSTELM=SUSPENDI;/*                      @ZA08099*/
         MVC   IOSTELM(4,@10),SUSPENDI                             0236
*                   DO WHILE IOSTELM^=DLBASE;/* DELETE THE ELMTS   0237
*                                                            @ZA08099*/
         B     @DE00237                                            0237
@DL00237 DS    0H                                                  0238
*                     RFY                                          0238
*                       LSD BASED(INSADLSD);/*               @ZA08099*/
*                     IF INSEXEC=YES THEN/* IGNORE MAIN CLISTS     0239
*                                                            @ZA08099*/
         L     @10,@PC00001+4                                      0239
         L     @10,ECTIOWA(,@10)                                   0239
         L     @10,IOSTELM(,@10)                                   0239
         TM    INSEXEC(@10),B'00001000'                            0239
         BNO   @RF00239                                            0239
*                       CMAIN=NO;   /* STACK SERRTN ADJUSTS IOSTELM
*                                                            @ZA08099*/
         L     @10,INSADLSD-1(,@10)                                0240
         L     @10,LSDEXEC(,@10)                                   0240
         NI    CMAIN(@10),B'11111011'                              0240
*                     CALL IKJEFT30(UPT,ECT,ECB,STACKL);/*   @ZA08099*/
@RF00239 L     @10,@PC00001                                        0241
         ST    @10,@AL00001                                        0241
         L     @10,@PC00001+4                                      0241
         ST    @10,@AL00001+4                                      0241
         L     @10,@PC00001+8                                      0241
         ST    @10,@AL00001+8                                      0241
         LA    @10,STACKL                                          0241
         ST    @10,@AL00001+12                                     0241
         L     @15,@CV00346                                        0241
         LA    @01,@AL00001                                        0241
         BALR  @14,@15                                             0241
*                     RFY                                          0242
*                       LSD BASED(LSDPTR);/*                 @ZA08099*/
*                   END;            /*                       @ZA08099*/
@DE00237 L     @10,@PC00001+4                                      0243
         L     @10,ECTIOWA(,@10)                                   0243
         C     DLBASE,IOSTELM(,@10)                                0243
         BNE   @DL00237                                            0243
*                 END;              /*                       @ZA08099*/
*               ELSE                /*                       @ZA08099*/
*                 IOSTELM=SUSPENDI; /*                       @ZA08099*/
         B     @RC00233                                            0245
@RF00233 L     @10,@PC00001+4                                      0245
         L     @10,ECTIOWA(,@10)                                   0245
         MVC   IOSTELM(4,@10),SUSPENDI                             0245
*             END;                  /*                       @ZA08099*/
@RC00233 DS    0H                                                  0247
*         END;                      /*                       @ZA08099*/
@RF00224 DS    0H                                                  0248
*NORMEND:                                                          0248
*       PARMADIN=OBTAINAD;          /* PLACE BUFFR ADDR IN PARM      */
@RF00168 DS    0H                                                  0248
NORMEND  L     @10,OBTAINAD                                        0248
         L     @04,@PC00001+12                                     0248
         ST    @10,PARMADIN(,@04)                                  0248
*       FREEADDR=(((OBTAINAD+LL)+7)/8)*8;/* ROUND ADDR TO DOUBL WRD  */
         LA    @04,8                                               0249
         LA    @15,7                                               0249
         LH    @00,LL(,@10)                                        0249
         ALR   @00,@10                                             0249
         ALR   @00,@15                                             0249
         SRDA  @00,32                                              0249
         DR    @00,@04                                             0249
         SLA   @01,3                                               0249
         ST    @01,FREEADDR                                        0249
*       FREELEN=((GETLEN+7)/8*8)-(FREEADDR-OBTAINAD);/* CALC AMOUNT
*                                      TO FREE                       */
         LR    @02,@15                                             0250
         ALR   @02,GETLEN                                          0250
         SRDA  @02,32                                              0250
         DR    @02,@04                                             0250
         SLA   @03,3                                               0250
         SLR   @01,@10                                             0250
         SLR   @03,@01                                             0250
         LR    FREELEN,@03                                         0250
*       DO;                         /* FREEMAIN (E) LV(FREELEN)    0251
*                                      A(FREEADDR) SP(1)             */
*         RESPECIFY                                                0252
*          (GPR01P) RESTRICTED;                                    0252
*         I005=I005&&I005;          /* INIT LIST                     */
         XC    I005(10),I005                                       0253
*         I00505='00'X;             /* SET TYPE                      */
         MVI   I00505,X'00'                                        0254
*         I00502=FREELEN;           /* LENGTH                        */
         STCM  FREELEN,7,I00502                                    0255
*         I00504=ADDR(FREEADDR);    /* ADDR OF ADDR LIST             */
         LA    @10,FREEADDR                                        0256
         STCM  @10,7,I00504                                        0256
*         I00506=1;                 /* SUBPOOL VALUE                 */
         MVI   I00506,X'01'                                        0257
*         GPR01P=ADDR(I005);        /* REG1 POINTS TO LIST           */
         LA    GPR01P,I005                                         0258
*         SVC(5);                   /* STANDARD-FORM OF GETMAIN      */
         SVC   5                                                   0259
*         RESPECIFY                                                0260
*          (GPR01P) UNRESTRICTED;                                  0260
*       END;                        /* FREEMAIN (E) LV(FREELEN)    0261
*                                      A(FREEADDR) SP(1)             */
*       IF INSINDD=YES&PARMTERM=NO THEN/* IF DEMAND NOT TO TERMINAL
*                                      AND                           */
         L     @10,@PC00001+4                                      0262
         L     @10,ECTIOWA(,@10)                                   0262
         L     @10,IOSTELM(,@10)                                   0262
         TM    INSINDD(@10),B'00100000'                            0262
         BNO   @RF00262                                            0262
         L     @10,@PC00001+12                                     0262
         TM    PARMTERM(@10),B'00010000'                           0262
         BNZ   @RF00262                                            0262
*         DO;                       /* IN DATASET MODE THEN          */
*           IF TGETCODE=4 THEN      /* ON DATASET EOF OTHER          */
         LA    @10,4                                               0264
         CR    TGETCODE,@10                                        0264
         BE    @RT00264                                            0264
*             GO TO DELETE;         /* THAN BACKGD STREAM GO TO DELET*/
*           RETURNCD=4;             /* SET NORMAL DS RCODE           */
         LR    RETURNCD,@10                                        0266
*           GO TO EXIT;                                            0267
         B     EXIT                                                0267
*         END;                                                     0268
*       RETURNCD=0;                 /* SET NORMAL RETURN CODE        */
@RF00262 SLR   RETURNCD,RETURNCD                                   0269
*       GOTO EXIT;                                                 0270
         B     EXIT                                                0270
*GETBIGBF:                                                         0271
*       FREEADDR=OBTAINAD;          /* ADDR OF STORAGE TO FREE       */
GETBIGBF L     @06,OBTAINAD                                        0271
         ST    @06,FREEADDR                                        0271
*       FREELEN=GETLEN;             /* DETERMIN AMOUNT TO FREE       */
         LR    FREELEN,GETLEN                                      0272
*       IF INSINDD=YES&PARMTERM=NO THEN/* IF DATASET I/O             */
         L     @06,@PC00001+4                                      0273
         L     @06,ECTIOWA(,@06)                                   0273
         L     @06,IOSTELM(,@06)                                   0273
         TM    INSINDD(@06),B'00100000'                            0273
         BNO   @RF00273                                            0273
         L     @15,@PC00001+12                                     0273
         TM    PARMTERM(@15),B'00010000'                           0273
         BNZ   @RF00273                                            0273
*         GETLEN=GETLEN+DSDMINBF;   /* ADJUST BY MINIMUM BFR         */
         L     @06,INSADLSD-1(,@06)                                0274
         AH    GETLEN,DSDMINBF(,@06)                               0274
*       ELSE                                                       0275
*         GETLEN=GETLEN+136;                                       0275
         B     @RC00273                                            0275
@RF00273 AL    GETLEN,@CF00299                                     0275
*       RFY                                                        0276
*        (R15) RSTD;                                               0276
@RC00273 DS    0H                                                  0277
*       DO;                         /* GETMAIN (EC) LV(GETLEN)     0277
*                                      A(OBTAINAD) SP(1)             */
*         RESPECIFY                                                0278
*          (GPR01P) RESTRICTED;                                    0278
*         I004=I004&&I004;          /* INIT LIST                     */
         XC    I004(10),I004                                       0279
*         I00404='20'X;             /* TYPE                          */
         MVI   I00404,X'20'                                        0280
*         I00401=GETLEN;            /* LENGTH                        */
         ST    GETLEN,I00401                                       0281
*         I00403=ADDR(OBTAINAD);    /* ADDR OF ADDR LIST             */
         LA    @14,OBTAINAD                                        0282
         STCM  @14,7,I00403                                        0282
*         I00405=1;                 /* SUBPOOL VALUE                 */
         MVI   I00405,X'01'                                        0283
*         GPR01P=ADDR(I004);        /* REG1 POINTS TO LIST           */
         LA    GPR01P,I004                                         0284
*         SVC(4);                   /* STANDARD-FORM OF GETMAIN      */
         SVC   4                                                   0285
*         RESPECIFY                                                0286
*          (GPR01P) UNRESTRICTED;                                  0286
*       END;                        /* GETMAIN (EC) LV(GETLEN)     0287
*                                      A(OBTAINAD) SP(1)             */
*       IF R15^=0 THEN              /* GETMAIN ERROR                 */
         LTR   R15,R15                                             0288
         BNZ   @RT00288                                            0288
*         GOTO GETMNER;                                            0289
*       RFY                                                        0290
*        (R15) UNRSTD;                                             0290
*       RFY                                                        0291
*        (R2,                                                      0291
*         R3,                                                      0291
*         R4,                                                      0291
*         R5) RSTD;                                                0291
*       R4=FREEADDR;                                               0292
         L     R4,FREEADDR                                         0292
*       R2=OBTAINAD;                                               0293
         L     R2,OBTAINAD                                         0293
*       R3=FREELEN;                                                0294
         LR    R3,FREELEN                                          0294
*       R5=R3;                                                     0295
         LR    R5,R3                                               0295
*       MVCL(R2,R4);                                               0296
         MVCL  R2,R4                                               0296
*       RFY                                                        0297
*        (R2,                                                      0297
*         R3,                                                      0297
*         R4,                                                      0297
*         R5) UNRSTD;                                              0297
*       DO;                         /* FREEMAIN (E) LV(FREELEN)    0298
*                                      A(FREEADDR) SP(1)             */
*         RESPECIFY                                                0299
*          (GPR01P) RESTRICTED;                                    0299
*         I005=I005&&I005;          /* INIT LIST                     */
         XC    I005(10),I005                                       0300
*         I00505='00'X;             /* SET TYPE                      */
         MVI   I00505,X'00'                                        0301
*         I00502=FREELEN;           /* LENGTH                        */
         STCM  FREELEN,7,I00502                                    0302
*         I00504=ADDR(FREEADDR);    /* ADDR OF ADDR LIST             */
         LA    @09,FREEADDR                                        0303
         STCM  @09,7,I00504                                        0303
*         I00506=1;                 /* SUBPOOL VALUE                 */
         MVI   I00506,X'01'                                        0304
*         GPR01P=ADDR(I005);        /* REG1 POINTS TO LIST           */
         LA    GPR01P,I005                                         0305
*         SVC(5);                   /* STANDARD-FORM OF GETMAIN      */
         SVC   5                                                   0306
*         RESPECIFY                                                0307
*          (GPR01P) UNRESTRICTED;                                  0307
*       END;                        /* FREEMAIN (E) LV(FREELEN)    0308
*                                      A(FREEADDR) SP(1)             */
*       IBUFADR=OBTAINAD+LL;        /* SET UP PARMS FOR TGET         */
         L     @09,OBTAINAD                                        0309
         LH    @06,LL(,@09)                                        0309
         ALR   @09,@06                                             0309
         STCM  @09,7,IBUFADR                                       0309
*       BUFLEN=GETLEN-LL;           /* ESATABLISH NEW BUF SIZE       */
         LCR   @06,@06                                             0310
         ALR   @06,GETLEN                                          0310
         LR    BUFLEN,@06                                          0310
*       GOTO CHECKECB;              /* BRANCH TO TGET PROCESS        */
         B     CHECKECB                                            0311
*EREXIT:                                                           0312
*       DO;                         /* FREEMAIN (E) LV(GETLEN)     0312
*                                      A(OBTAINAD) SP(1)             */
EREXIT   DS    0H                                                  0313
*         RESPECIFY                                                0313
*          (GPR01P) RESTRICTED;                                    0313
*         I005=I005&&I005;          /* INIT LIST                     */
         XC    I005(10),I005                                       0314
*         I00505='00'X;             /* SET TYPE                      */
         MVI   I00505,X'00'                                        0315
*         I00502=GETLEN;            /* LENGTH                        */
         STCM  GETLEN,7,I00502                                     0316
*         I00504=ADDR(OBTAINAD);    /* ADDR OF ADDR LIST             */
         LA    @10,OBTAINAD                                        0317
         STCM  @10,7,I00504                                        0317
*         I00506=1;                 /* SUBPOOL VALUE                 */
         MVI   I00506,X'01'                                        0318
*         GPR01P=ADDR(I005);        /* REG1 POINTS TO LIST           */
         LA    GPR01P,I005                                         0319
*         SVC(5);                   /* STANDARD-FORM OF GETMAIN      */
         SVC   5                                                   0320
*         RESPECIFY                                                0321
*          (GPR01P) UNRESTRICTED;                                  0321
*       END;                        /* FREEMAIN (E) LV(GETLEN)     0322
*                                      A(OBTAINAD) SP(1)             */
*       GOTO EXIT;                                                 0323
         B     EXIT                                                0323
*     END;                          /* END TERMIN LOGIC              */
*                                                                  0325
*   /*****************************************************************/
*   /*                                                               */
*   /* BEGINNING OF INSTORAGE LIST PROCESSING (STACK)                */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0325
*CLIST:                                                            0325
*   IF ECBCBIT=YES THEN             /* IF ATTN ECB POSTED            */
@RF00049 DS    0H                                                  0325
CLIST    L     @06,@PC00001+8                                      0325
         TM    ECBCBIT(@06),B'01000000'                            0325
         BNO   @RF00325                                            0325
*     DO;                           /* RETURN CODE 8                 */
*       RETURNCD=8;                 /* RETURN CODE OF EIGHT          */
         LA    RETURNCD,8                                          0327
*       GO TO EXIT;                 /* RETURN                        */
         B     EXIT                                                0328
*     END;                                                         0329
*   RFY                                                            0330
*     R15 RSTD;                                                    0330
@RF00325 DS    0H                                                  0331
*   PARM433=''B;                    /* CLEAR 433 PARMS               */
         XC    PARM433(8),PARM433                                  0331
*   IF ATTNBIT=YES THEN             /* WHEN GETLINE HAS BEEN @ZA08099*/
         TM    ATTNBIT,B'10000000'                                 0332
         BNO   @RF00332                                            0332
*     SUSPENDI=SSELMPTR;            /* REENTERED FOR CLIST   @ZA08099
*                                      ATTN PROCESSING THEN  @ZA08099
*                                      RELOAD ANY SUSPENDED  @ZA08099
*                                      ELEMENT ADDR          @ZA08099*/
         STCM  SSELMPTR,15,SUSPENDI                                0333
*   IF ECTATTN=YES THEN             /* INITIAL ENTRY FOR ATT @ZA08099*/
@RF00332 L     @14,@PC00001+4                                      0334
         TM    ECTATTN(@14),B'00000001'                            0334
         BNO   @RF00334                                            0334
*     DO;                           /* PROCESSING THEN FIND  @ZA08099*/
*       SUSPENDI=IOSTELM;           /* ELEMENT WITH ATTN-IN-CNTL   0336
*                                                            @ZA08099*/
         L     @14,ECTIOWA(,@14)                                   0336
         L     @14,IOSTELM(,@14)                                   0336
         STCM  @14,15,SUSPENDI                                     0336
*       SSELMPTR=IOSTELM;           /* SAVE ADDRESS OF TOP IF WE   0337
*                                                            @ZA08099*/
         LR    SSELMPTR,@14                                        0337
*       ATTNBIT=YES;                /* MUST RETORE INSTACK AND     0338
*                                      INDICATE TO GETLINE         0338
*                                      ATTENTION-IN-CNTL     @ZA08099*/
         OI    ATTNBIT,B'10000000'                                 0338
*       LOOPA=YES;                  /* LOOP CONTROL          @ZA08099*/
         OI    LOOPA,B'10000000'                                   0339
*       DO WHILE LOOPA=YES;         /* FIND A CLIST ELEMENT WITH   0340
*                                                            @ZA08099*/
         B     @DE00340                                            0340
@DL00340 DS    0H                                                  0341
*         IF INSEXEC=YES&           /* ATTENTION-IN-CNTL     @ZA08099*/
*             ATTNCMD=YES THEN      /*                       @ZA08099*/
         L     @14,@PC00001+4                                      0341
         L     @14,ECTIOWA(,@14)                                   0341
         L     @14,IOSTELM(,@14)                                   0341
         TM    INSEXEC(@14),B'00001000'                            0341
         BNO   @RF00341                                            0341
         L     @14,LSDEXEC(,LSDPTR)                                0341
         TM    ATTNCMD(@14),B'00000001'                            0341
         BNO   @RF00341                                            0341
*           LOOPA=NO;               /* WE HAVE FOUND IT      @ZA08099*/
         NI    LOOPA,B'01111111'                                   0342
*         ELSE                      /* CHECK NEXT ELEMENT    @ZA08099*/
*           DO;                     /*                       @ZA08099*/
         B     @RC00341                                            0343
@RF00341 DS    0H                                                  0344
*             IOSTELM=IOSTELM-F4;   /*                       @ZA08099*/
         L     @14,@PC00001+4                                      0344
         L     @14,ECTIOWA(,@14)                                   0344
         L     @06,IOSTELM(,@14)                                   0344
         SL    @06,@CF00055                                        0344
         ST    @06,IOSTELM(,@14)                                   0344
*             LSDPTR=INSADLSD;      /* UPDATE LSD BASE ADDR  @ZA08099*/
         L     LSDPTR,INSADLSD-1(,@06)                             0345
         LA    LSDPTR,0(,LSDPTR)                                   0345
*           END;                    /*                       @ZA08099*/
*       END;                        /*                       @ZA08099*/
@RC00341 DS    0H                                                  0347
@DE00340 TM    LOOPA,B'10000000'                                   0347
         BO    @DL00340                                            0347
*     END;                                                         0348
*   GEN REFS(DEFERYES)(STAX MF=(E,DEFERYES));                      0349
@RF00334 DS    0H                                                  0349
         STAX MF=(E,DEFERYES)
*   IF R15=0 THEN                   /* IF ATTNS DEFERED              */
         LTR   R15,R15                                             0350
         BNZ   @RF00350                                            0350
*     PARMDEFR=YES;                 /* SAY OK TO CHANGE              */
         OI    PARMDEFR,B'10000000'                                0351
*   RFY                                                            0352
*     R15 UNRSTD;                                                  0352
@RF00350 DS    0H                                                  0353
*   IF INSEXEC=YES THEN             /* IF THIS IS AN EXEC CLIST      */
         L     @06,@PC00001+4                                      0353
         L     @06,ECTIOWA(,@06)                                   0353
         L     @06,IOSTELM(,@06)                                   0353
         TM    INSEXEC(@06),B'00001000'                            0353
         BNO   @RF00353                                            0353
*     DO;                           /* CHECK FOR END OF BLOCK        */
*       ECDACBLK=LSDADATA;          /* POINT TO FIRST BLOCK          */
         L     @06,LSDADATA(,LSDPTR)                               0355
         ST    @06,ECDACBLK                                        0355
*       DO WHILE ECDACBK2^=0;       /* DO UNTIL MATCH OR DONE        */
         B     @DE00356                                            0356
@DL00356 DS    0H                                                  0357
*         IF CURID=COMPRID&         /* IF THIS IS THE BLOCK          */
*             CURADDR>=ECDACBK2+COMPRLNG THEN/* IF END OF BLK        */
         L     @06,ECDACBLK                                        0357
         CLC   CURID(1,LSDPTR),COMPRID(@06)                        0357
         BNE   @RF00357                                            0357
         L     @15,ECDACBK2-1                                      0357
         LA    @15,0(,@15)                                         0357
         AL    @15,COMPRLNG(,@06)                                  0357
         L     @14,CURADDR-1(,LSDPTR)                              0357
         LA    @14,0(,@14)                                         0357
         CR    @15,@14                                             0357
         BH    @RF00357                                            0357
*           IF COMPRNXT=0 THEN      /* AND NO MORE BLOCKS, END LIST  */
         L     @06,COMPRNXT-1(,@06)                                0358
         LA    @06,0(,@06)                                         0358
         LTR   @06,@06                                             0358
         BNZ   @RF00358                                            0358
*             DO;                                                  0359
*               CMAIN=NO;           /* RESET MAIN OPTION FOR STACK   */
         L     @10,LSDEXEC(,LSDPTR)                                0360
         NI    CMAIN(@10),B'11111011'                              0360
*DELETE:                                                           0361
*               CALL IKJEFT30(UPT,ECT,ECB,STACKL);                 0361
DELETE   L     @10,@PC00001                                        0361
         ST    @10,@AL00001                                        0361
         L     @10,@PC00001+4                                      0361
         ST    @10,@AL00001+4                                      0361
         L     @10,@PC00001+8                                      0361
         ST    @10,@AL00001+8                                      0361
         LA    @10,STACKL                                          0361
         ST    @10,@AL00001+12                                     0361
         L     @15,@CV00346                                        0361
         LA    @01,@AL00001                                        0361
         BALR  @14,@15                                             0361
*RESTRT:                                                           0362
*               IF PARMDEFR=YES THEN/* IF OK TO CHANGE               */
RESTRT   TM    PARMDEFR,B'10000000'                                0362
         BNO   @RF00362                                            0362
*                 GEN REFS(DEFERNO)(STAX MF=(E,DEFERNO));          0363
         STAX MF=(E,DEFERNO)
*               PARMDEFR=NO;        /* TURN OFF BIT                  */
@RF00362 NI    PARMDEFR,B'01111111'                                0364
*               IF CONTEXP=YES THEN /* CONTINUATION EXPECTED?@ZA15801*/
         TM    CONTEXP,B'10000000'                                 0365
         BNO   @RF00365                                            0365
*                 RETURNCD=36;      /* CONTINUATION NOT RECEIVED   0366
*                                      BEFORE EOD            @ZA15801*/
         LA    RETURNCD,36                                         0366
*               ELSE                /* CONTINUATION NOT EXPECTED   0367
*                                                            @ZA15801*/
*                 RETURNCD=16;      /* SET NORMAL END OF DATA@ZA15801*/
         B     @RC00365                                            0367
@RF00365 LA    RETURNCD,16                                         0367
*               GOTO EXIT;                                         0368
         B     EXIT                                                0368
*             END;                                                 0369
*           ELSE                                                   0370
*             DO;                                                  0370
@RF00358 DS    0H                                                  0371
*               CURADDR=COMPRNXT+LENGTH(COMPROC);                  0371
         L     @06,ECDACBLK                                        0371
         LA    @15,12                                              0371
         L     @14,COMPRNXT-1(,@06)                                0371
         LA    @14,0(,@14)                                         0371
         ALR   @15,@14                                             0371
         STCM  @15,7,CURADDR(LSDPTR)                               0371
*               CURID=COMPRID+1;                                   0372
         LA    @15,1                                               0372
         SLR   @14,@14                                             0372
         IC    @14,COMPRID(,@06)                                   0372
         ALR   @15,@14                                             0372
         STC   @15,CURID(,LSDPTR)                                  0372
*               ECDACBLK=0;         /* EXIT LOOP                     */
         SLR   @06,@06                                             0373
         ST    @06,ECDACBLK                                        0373
*             END;                                                 0374
*         ELSE                                                     0375
*           ECDACBLK=COMPRPTR;      /* POINT TO NEXT BLOCK           */
         B     @RC00357                                            0375
@RF00357 L     @06,ECDACBLK                                        0375
         L     @06,COMPRPTR(,@06)                                  0375
         ST    @06,ECDACBLK                                        0375
*       END;                                                       0376
@RC00357 DS    0H                                                  0376
@DE00356 L     @06,ECDACBK2-1                                      0376
         LA    @06,0(,@06)                                         0376
         LTR   @06,@06                                             0376
         BNZ   @DL00356                                            0376
*       PARMADIN=LSDANEXT;                                         0377
         L     @06,@PC00001+12                                     0377
         L     @15,LSDANEXT(,LSDPTR)                               0377
         ST    @15,PARMADIN(,@06)                                  0377
*       IF LSDRCLEN^=0 THEN         /* IF NOT VARIABLE RECS          */
         LH    @14,LSDRCLEN(,LSDPTR)                               0378
         LTR   @14,@14                                             0378
         BNZ   @RT00378                                            0378
*         GO TO INVALID;            /* INVALID FOR EXEC CLIST        */
*       LSDANEXT=LSDANEXT+VRECLL;                                  0380
         ICM   @03,12,VRECLL(@15)                                  0380
         SRA   @03,16                                              0380
         ALR   @03,@15                                             0380
         ST    @03,LSDANEXT(,LSDPTR)                               0380
*       RFY                                                        0381
*        (R15) RSTD;                                               0381
*       CALL IKJCT433(UPT,ECT,ECB,GTPB,PARM433);                   0382
         L     @14,@PC00001                                        0382
         ST    @14,@AL00001                                        0382
         L     @14,@PC00001+4                                      0382
         ST    @14,@AL00001+4                                      0382
         L     @14,@PC00001+8                                      0382
         ST    @14,@AL00001+8                                      0382
         ST    @06,@AL00001+12                                     0382
         LA    @14,PARM433                                         0382
         ST    @14,@AL00001+16                                     0382
         L     @15,@CV00359                                        0382
         LA    @01,@AL00001                                        0382
         BALR  @14,@15                                             0382
*       RETURNCD=R15;               /* SAVE RETURN CODE              */
         LR    RETURNCD,R15                                        0383
*       IF PARMDEFR=YES THEN        /* IF OK WAS SET                 */
         TM    PARMDEFR,B'10000000'                                0384
         BNO   @RF00384                                            0384
*         GEN REFS(DEFERNO)(STAX MF=(E,DEFERNO));                  0385
         STAX MF=(E,DEFERNO)
*       PARMDEFR=NO;                /* TURN OFF SWITCH               */
@RF00384 NI    PARMDEFR,B'01111111'                                0386
*       IF RETURNCD=4 THEN          /* IF GETTING NEXT RECORD        */
         C     RETURNCD,@CF00055                                   0387
         BNE   @RF00387                                            0387
*         DO;                                                      0388
*           IF ATTNBIT=YES&         /* IF END OF ATTENTION PROCESSING
*                                                            @ZA08099*/
*               EXITSTMT=YES×       /*                       @ZA08099*/
*               ATTNBIT=YES&INSTERM=NO THEN/*                @ZA08099*/
         TM    ATTNBIT,B'10000000'                                 0389
         BNO   @GL00021                                            0389
         TM    EXITSTMT,B'00100000'                                0389
         BO    @RT00389                                            0389
@GL00021 TM    ATTNBIT,B'10000000'                                 0389
         BNO   @RF00389                                            0389
         L     @14,@PC00001+4                                      0389
         L     @14,ECTIOWA(,@14)                                   0389
         L     @14,IOSTELM(,@14)                                   0389
         TM    INSTERM(@14),B'10000000'                            0389
         BNZ   @RF00389                                            0389
@RT00389 DS    0H                                                  0390
*             DO;                   /* THEN RESTORE ANY SUSPENDED  0390
*                                                            @ZA08099*/
*               ATTNBIT=NO;         /* ELEMENTS              @ZA08099*/
         NI    ATTNBIT,B'01111111'                                 0391
*               IF EOCLIST=YES THEN /* ON END OF CLIST WE MUST     0392
*                                                            @ZA08099*/
         TM    EOCLIST,B'01000000'                                 0392
         BNO   @RF00392                                            0392
*                 DO;               /* DELETE ALL SUSPENDED ELMTS  0393
*                                                            @ZA08099*/
*                   EOCLIST=NO;     /* BEFORE RESUMING NORMAL      0394
*                                                            @ZA08099*/
         NI    EOCLIST,B'10111111'                                 0394
*                   DLBASE=IOSTELM; /* CURRENT ELMT ADDR FOR LOOP  0395
*                                                            @ZA08099*/
         L     @14,@PC00001+4                                      0395
         L     @14,ECTIOWA(,@14)                                   0395
         L     DLBASE,IOSTELM(,@14)                                0395
*                   IOSTELM=SUSPENDI;/* CONTROL AND INIT FIRST     0396
*                                                            @ZA08099*/
         MVC   IOSTELM(4,@14),SUSPENDI                             0396
*                   DO WHILE DLBASE^=IOSTELM;/* ELMT TO DELETE     0397
*                                                            @ZA08099*/
         B     @DE00397                                            0397
@DL00397 DS    0H                                                  0398
*                     RFY                                          0398
*                       LSD BASED(INSADLSD);/*               @ZA08099*/
*                     IF INSEXEC=YES THEN/* IGNORE ANY MAIN  @ZA08099*/
         L     @14,@PC00001+4                                      0399
         L     @14,ECTIOWA(,@14)                                   0399
         L     @14,IOSTELM(,@14)                                   0399
         TM    INSEXEC(@14),B'00001000'                            0399
         BNO   @RF00399                                            0399
*                       CMAIN=NO;   /* CLISTS                @ZA08099*/
*                                                                  0400
         L     @14,INSADLSD-1(,@14)                                0400
         L     @14,LSDEXEC(,@14)                                   0400
         NI    CMAIN(@14),B'11111011'                              0400
*                     /***********************************************/
*                     /*                                             */
*                     /* STACK SERRTN ADJUSTS IOSTELM                */
*                     /*                                             */
*                     /***********************************************/
*                                                                  0401
*                     CALL IKJEFT30(UPT,ECT,ECB,STACKL);/*   @ZA08099*/
@RF00399 L     @14,@PC00001                                        0401
         ST    @14,@AL00001                                        0401
         L     @14,@PC00001+4                                      0401
         ST    @14,@AL00001+4                                      0401
         L     @14,@PC00001+8                                      0401
         ST    @14,@AL00001+8                                      0401
         LA    @14,STACKL                                          0401
         ST    @14,@AL00001+12                                     0401
         L     @15,@CV00346                                        0401
         LA    @01,@AL00001                                        0401
         BALR  @14,@15                                             0401
*                     RFY                                          0402
*                       LSD BASED(LSDPTR);/*                 @ZA08099*/
*                   END;            /*                       @ZA08099*/
@DE00397 L     @14,@PC00001+4                                      0403
         L     @14,ECTIOWA(,@14)                                   0403
         C     DLBASE,IOSTELM(,@14)                                0403
         BNE   @DL00397                                            0403
*                 END;              /*                       @ZA08099*/
*             END;                  /*                       @ZA08099*/
@RF00392 DS    0H                                                  0406
*           IF GETLINE=YES×         /* IF GETLINE ENTRY              */
*               ATTNBIT=YES&EOCLIST=NO THEN/*                @ZA08099*/
@RF00389 TM    GETLINE,B'10000000'                                 0406
         BO    @RT00406                                            0406
         TM    ATTNBIT,B'10000000'                                 0406
         BNO   @RF00406                                            0406
         TM    EOCLIST,B'01000000'                                 0406
         BZ    @RT00406                                            0406
*             GOTO RESTRT2;         /* RESTART GETLINE               */
*           ELSE                    /* OTHERWISE                     */
*             GOTO RESTRT;          /* GO BACK TO PUTGET             */
         B     RESTRT                                              0408
*         END;                                                     0409
*       IF RETURNCD=8 THEN          /* IF ATTN RETURN CODE           */
@RF00387 C     RETURNCD,@CF00050                                   0410
         BE    @RT00410                                            0410
*         GOTO EXIT;                /* RETURN WITH ATTN RC           */
*       IF RETURNCD^=0 THEN         /* IF RETURN CODE NOT ZERO       */
         LTR   RETURNCD,RETURNCD                                   0412
         BNZ   @RT00412                                            0412
*         GOTO INVALID;             /*                               */
*       ELSE                        /* RESTORE ANY SUSPENDED ELMTS   */
*         IF ATTNBIT=YES THEN       /*                       @ZA08099*/
         TM    ATTNBIT,B'10000000'                                 0414
         BNO   @RF00414                                            0414
*           DO;                     /*                       @ZA08099*/
*             ATTNBIT=NO;           /*                       @ZA08099*/
         NI    ATTNBIT,B'01111111'                                 0416
*             IF ATINCNTL=YES THEN  /* IF THE USER IS STILL IN     0417
*                                                            @ZA08099*/
         L     @14,LSDEXEC(,LSDPTR)                                0417
         TM    ATINCNTL(@14),B'10000000'                           0417
         BNO   @RF00417                                            0417
*               DO;                 /* ATTENTION EXIT THEN FORCE   0418
*                                                            @ZA08099*/
*                 ATINCNTL=NO;      /* END OF CLIST ATTENTION ACTION
*                                                            @ZA08099*/
         NI    ATINCNTL(@14),B'01111111'                           0419
*                 LSDANEXT=RETPTR;  /* USER IS ALLOWED ONLY 1 TSO  0420
*                                      STMT                  @ZA08099*/
         L     @14,RETPTR(,@14)                                    0420
         ST    @14,LSDANEXT(,LSDPTR)                               0420
*               END;                /*                       @ZA08099*/
*             BUFPTR=PARMADIN+F4;   /* IF TSO STMT IS NULL LINE    0422
*                                                            @ZA08099*/
@RF00417 L     @14,@PC00001+12                                     0422
         L     @14,PARMADIN(,@14)                                  0422
         LA    BUFPTR,4                                            0422
         ALR   BUFPTR,@14                                          0422
*             ENDLOC=BUFPTR+PARMADIN->LL-F5;/* THEN RESTORE ALL    0423
*                                                            @ZA08099*/
         LR    ENDLOC,BUFPTR                                       0423
         AH    ENDLOC,LL(,@14)                                     0423
         SL    ENDLOC,@CF00259                                     0423
*             CALL SCAN;            /* SUSPENDED ELMTS OTHERWISE   0424
*                                                            @ZA08099*/
         BAL   @14,SCAN                                            0424
*             IF BUFPTR<=ENDLOC THEN/* DELETE ALL SUSPENDED  @ZA08099*/
         CR    BUFPTR,ENDLOC                                       0425
         BH    @RF00425                                            0425
*               DO;                 /* ELEMENTS              @ZA08099*/
*                 DLBASE=IOSTELM;   /* CURRENT ELMT ADDRESS  @ZA08099*/
         L     @14,@PC00001+4                                      0427
         L     @14,ECTIOWA(,@14)                                   0427
         L     DLBASE,IOSTELM(,@14)                                0427
*                 IOSTELM=SUSPENDI; /* FIRST ELMT TO DELETE  @ZA08099*/
         MVC   IOSTELM(4,@14),SUSPENDI                             0428
*                 DO WHILE IOSTELM^=DLBASE;/* DELETE THE ELMTS     0429
*                                                            @ZA08099*/
         B     @DE00429                                            0429
@DL00429 DS    0H                                                  0430
*                   RFY                                            0430
*                     LSD BASED(INSADLSD);/*                 @ZA08099*/
*                   IF INSEXEC=YES THEN/* IGNORE MAIN CLISTS @ZA08099*/
         L     @14,@PC00001+4                                      0431
         L     @14,ECTIOWA(,@14)                                   0431
         L     @14,IOSTELM(,@14)                                   0431
         TM    INSEXEC(@14),B'00001000'                            0431
         BNO   @RF00431                                            0431
*                     CMAIN=NO;     /*                       @ZA08099*/
         L     @14,INSADLSD-1(,@14)                                0432
         L     @14,LSDEXEC(,@14)                                   0432
         NI    CMAIN(@14),B'11111011'                              0432
*                   CALL IKJEFT30(UPT,ECT,ECB,STACKL);             0433
*                                                                  0433
@RF00431 L     @14,@PC00001                                        0433
         ST    @14,@AL00001                                        0433
         L     @14,@PC00001+4                                      0433
         ST    @14,@AL00001+4                                      0433
         L     @14,@PC00001+8                                      0433
         ST    @14,@AL00001+8                                      0433
         LA    @14,STACKL                                          0433
         ST    @14,@AL00001+12                                     0433
         L     @15,@CV00346                                        0433
         LA    @01,@AL00001                                        0433
         BALR  @14,@15                                             0433
*                   /*************************************************/
*                   /*                                               */
*                   /* STACK SERRTN ADJUSTS IOSTELM@ZA08099          */
*                   /*                                               */
*                   /*************************************************/
*                                                                  0434
*                   RFY                                            0434
*                     LSD BASED(LSDPTR);/*                   @ZA08099*/
*                 END;              /*                       @ZA08099*/
@DE00429 L     @14,@PC00001+4                                      0435
         L     @14,ECTIOWA(,@14)                                   0435
         C     DLBASE,IOSTELM(,@14)                                0435
         BNE   @DL00429                                            0435
*               END;                /*                       @ZA08099*/
*             ELSE                  /*                       @ZA08099*/
*               IOSTELM=SUSPENDI;   /*                       @ZA08099*/
         B     @RC00425                                            0437
@RF00425 L     @14,@PC00001+4                                      0437
         L     @14,ECTIOWA(,@14)                                   0437
         MVC   IOSTELM(4,@14),SUSPENDI                             0437
*           END;                    /*                       @ZA08099*/
@RC00425 DS    0H                                                  0439
*       RFY                                                        0439
*        (R15) UNRSTD;                                             0439
@RF00414 DS    0H                                                  0440
*     END;                                                         0440
*                                                                  0441
*   /*****************************************************************/
*   /*                                                               */
*   /* NORMAL INSTORAGE LIST PROCESSING                              */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0441
*   ELSE                                                           0441
*     DO;                                                          0441
         B     @RC00353                                            0441
@RF00353 DS    0H                                                  0442
*       IF LSDANEXT>=LSDADATA+LSDTOTLN THEN                        0442
         L     @10,LSDANEXT(,LSDPTR)                               0442
         LH    @06,LSDTOTLN(,LSDPTR)                               0442
         AL    @06,LSDADATA(,LSDPTR)                               0442
         CR    @10,@06                                             0442
         BNL   @RT00442                                            0442
*         GO TO DELETE;                                            0443
*       IF LSDRCLEN=0 THEN                                         0444
         LH    @06,LSDRCLEN(,LSDPTR)                               0444
         LTR   @06,@06                                             0444
         BNZ   @RF00444                                            0444
*         GETLEN=VRECLL;                                           0445
         ICM   GETLEN,12,VRECLL(@10)                               0445
         SRA   GETLEN,16                                           0445
*       ELSE                                                       0446
*         GETLEN=LSDRCLEN+4;                                       0446
         B     @RC00444                                            0446
@RF00444 LA    GETLEN,4                                            0446
         AH    GETLEN,LSDRCLEN(,LSDPTR)                            0446
*       RFY                                                        0447
*        (R15) RSTD;                                               0447
@RC00444 DS    0H                                                  0448
*       DO;                         /* GETMAIN (EC) LV(GETLEN)     0448
*                                      A(OBTAINAD) SP(1)             */
*         RESPECIFY                                                0449
*          (GPR01P) RESTRICTED;                                    0449
*         I004=I004&&I004;          /* INIT LIST                     */
         XC    I004(10),I004                                       0450
*         I00404='20'X;             /* TYPE                          */
         MVI   I00404,X'20'                                        0451
*         I00401=GETLEN;            /* LENGTH                        */
         ST    GETLEN,I00401                                       0452
*         I00403=ADDR(OBTAINAD);    /* ADDR OF ADDR LIST             */
         LA    @14,OBTAINAD                                        0453
         STCM  @14,7,I00403                                        0453
*         I00405=1;                 /* SUBPOOL VALUE                 */
         MVI   I00405,X'01'                                        0454
*         GPR01P=ADDR(I004);        /* REG1 POINTS TO LIST           */
         LA    GPR01P,I004                                         0455
*         SVC(4);                   /* STANDARD-FORM OF GETMAIN      */
         SVC   4                                                   0456
*         RESPECIFY                                                0457
*          (GPR01P) UNRESTRICTED;                                  0457
*       END;                        /* GETMAIN (EC) LV(GETLEN)     0458
*                                      A(OBTAINAD) SP(1)             */
*       IF R15^=0 THEN              /* GETMAIN ERROR                 */
         SLR   @14,@14                                             0459
         CR    R15,@14                                             0459
         BNE   @RT00459                                            0459
*         GOTO GETMNER;                                            0460
*       RFY                                                        0461
*        (R15) UNRSTD;                                             0461
*       RFY                                                        0462
*        (R2,                                                      0462
*         R3,                                                      0462
*         R4,                                                      0462
*         R5) RSTD;                                                0462
*       R2=OBTAINAD;                /* POINTER TO NEW RECORD         */
         L     @10,OBTAINAD                                        0463
         LR    R2,@10                                              0463
*       R3=GETLEN;                  /* LENGTH FOR TOTAL MOVE         */
         LR    R3,GETLEN                                           0464
*       R4=LSDANEXT;                /* POINTER TO FROM RECORD        */
         L     R4,LSDANEXT(,LSDPTR)                                0465
*       IF LSDRCLEN^=0 THEN         /* IF FIXED LENGTH RECORD        */
         CH    @14,LSDRCLEN(,LSDPTR)                               0466
         BE    @RF00466                                            0466
*         DO;                                                      0467
*           LL=GETLEN;              /* LL FOR FIXED RECORD           */
         STH   GETLEN,LL(,@10)                                     0468
*           R2=R2+4;                /* ADJUST FOR NO HEADER          */
         LA    @09,4                                               0469
         ALR   R2,@09                                              0469
*           R3=R3-4;                /*                               */
         SLR   R3,@09                                              0470
*           GETLEN=GETLEN-4;                                       0471
         SLR   GETLEN,@09                                          0471
*           OO=0;                   /* OFFSET FIELD ZERO             */
         STH   @14,OO(,@10)                                        0472
*         END;                                                     0473
*       R3=GETLEN;                  /* LENGTH FOR MOVE               */
@RF00466 LR    R3,GETLEN                                           0474
*       R5=R3;                      /*                               */
         LR    R5,R3                                               0475
*       MVCL(R2,R4);                                               0476
         MVCL  R2,R4                                               0476
*       RFY                                                        0477
*        (R2,                                                      0477
*         R3,                                                      0477
*         R4,                                                      0477
*         R5) UNRSTD;                                              0477
*       PARMADIN=OBTAINAD;          /* PUT PTR TO BUFF IN PARM       */
         L     @10,@PC00001+12                                     0478
         L     @09,OBTAINAD                                        0478
         ST    @09,PARMADIN(,@10)                                  0478
*       LSDANEXT=LSDANEXT+GETLEN;   /* UPDATE LSD POINTER            */
         LR    @10,GETLEN                                          0479
         AL    @10,LSDANEXT(,LSDPTR)                               0479
         ST    @10,LSDANEXT(,LSDPTR)                               0479
*     END;                                                         0480
*   IF PARMDEFR=YES THEN            /* IF DEFER SET                  */
@RC00353 TM    PARMDEFR,B'10000000'                                0481
         BNO   @RF00481                                            0481
*     GEN REFS(DEFERNO)(STAX MF=(E,DEFERNO));                      0482
         STAX MF=(E,DEFERNO)
*   PARMDEFR=NO;                    /* CLEAR BIT                     */
@RF00481 NI    PARMDEFR,B'01111111'                                0483
*   IF PARMTERM=YES THEN            /* DEMAND FROM TERMINAL          */
         L     @10,@PC00001+12                                     0484
         TM    PARMTERM(@10),B'00010000'                           0484
         BNO   @RF00484                                            0484
*     RETURNCD=0;                   /* FORCE ZERO RETURN CODE        */
         SLR   RETURNCD,RETURNCD                                   0485
*   ELSE                            /* OTHERWISE                     */
*     RETURNCD=4;                   /* INDICATE RECORD NOT FROM THE
*                                      TERMINAL                      */
         B     @RC00484                                            0486
@RF00484 LA    RETURNCD,4                                          0486
*EXIT:                                                             0487
*   RETURN CODE(RETURNCD);                                         0487
@RC00484 DS    0H                                                  0487
EXIT     L     @13,4(,@13)                                         0487
         L     @00,@SIZDATD                                        0487
         LR    @01,@11                                             0487
         FREEMAIN R,LV=(0),A=(1)
         LR    @15,@02                                             0487
         L     @14,12(,@13)                                        0487
         LM    @00,@12,20(@13)                                     0487
         BR    @14                                                 0487
*                                                                  0488
*/********************************************************************/
*/* SCAN ROUTINE-                                                    */
*/*      THE SCAN ROUTINE LOOKS AT THE INPUT BUFFER RETURNED BY      */
*/*      THE LAST TGET. IF THE BIGINNING CHARACTER STRING IS AN      */
*/*      OPEN COMMENT DELIMETER, THEN A SWITCH IS SET. IF THE        */
*/*      COMMENT SWITCH IS SET, THE SEARCH CONTINUES UNTIL A         */
*/*      CLOSE COMMENT DELIMETER IS FOUND OR UNTIL THE END OF        */
*/*      THE BUFFER. IF AT THE END OF THE BUFFER, A CHECK IS         */
*/*      MADE TO SEE IF THE COMMENT WAS CONTINUED. IF NO             */
*/*      COMMENT DELIMETER WAS FOUND, THEN BLANKS, COMMAS,           */
*/*      AND TABS ARE PASSED OVER. THIS SCAN GOES UNTIL              */
*/*      AN OPEN COMMENT OR A CHARACTER IS FOUND OR UNTIL            */
*/*      END OF BUFFER. IF ANOTHER COMMENT WAS FOUND, THEN           */
*/*      THE LOOP CONTINUES AS SPECIFIED FOR BEGINNING               */
*/*      COMMENTS. THE OVERALL RESULTS ARE RETURNED TO               */
*/*      THE CALLER IN BUFPTR.                                       */
*/*                                                                  */
*/*      BUFPTR= ADDR OF START  -> NO COMMENTS - NO MOVE             */
*/*      BUFPTR> ENDLOC         -> ALL DELIMETERS - THROW AWAY       */
*/*      BUFPTR= ENDLOC         -> CONTINUATION POSSIBLE - MOVE DOWN */
*/*      BUFPTR> ADDR OF START  -> DELIMS FOUND - MOVE DOWN          */
*/*                                                                  */
*/********************************************************************/
*                                                                  0488
*SCAN:                                                             0488
*   PROC;                                                          0488
SCAN     STM   @14,@01,12(@13)                                     0488
         STM   @03,@12,32(@13)                                     0488
*   EXITA=NO;                       /* TURN OFF EXIT SWITCH          */
         NI    EXITA,B'01111111'                                   0489
*   DO WHILE EXITA=NO;                                             0490
         B     @DE00490                                            0490
@DL00490 DS    0H                                                  0491
*     IF BUFPTR<ENDLOC&CBUF(1:2)='/*'&COMMENTS=NO THEN             0491
         CR    BUFPTR,ENDLOC                                       0491
         BNL   @RF00491                                            0491
         CLC   CBUF(2,BUFPTR),@CC00331                             0491
         BNE   @RF00491                                            0491
         TM    COMMENTS,B'10000000'                                0491
         BNZ   @RF00491                                            0491
*       DO;                                                        0492
*         COMMENTS=YES;                                            0493
         OI    COMMENTS,B'10000000'                                0493
*         BUFPTR=BUFPTR+2;                                         0494
         AL    BUFPTR,@CF00087                                     0494
*       END;                                                       0495
*     ELSE                                                         0496
*       IF BUFPTR<ENDLOC&CBUF(1:2)='*/'&COMMENTS=YES THEN          0496
         B     @RC00491                                            0496
@RF00491 CR    BUFPTR,ENDLOC                                       0496
         BNL   @RF00496                                            0496
         CLC   CBUF(2,BUFPTR),@CC00368                             0496
         BNE   @RF00496                                            0496
         TM    COMMENTS,B'10000000'                                0496
         BNO   @RF00496                                            0496
*         DO;                                                      0497
*           COMMENTS=NO;                                           0498
         NI    COMMENTS,B'01111111'                                0498
*           BUFPTR=BUFPTR+2;                                       0499
         AL    BUFPTR,@CF00087                                     0499
*         END;                                                     0500
*       ELSE                                                       0501
*         IF BUFPTR<=ENDLOC&CBUF(1)=' '×CBUF(1)='6B'X×CBUF(1)='05'X×(
*             COMMENTS=YES&BUFPTR<ENDLOC) THEN                     0501
         B     @RC00496                                            0501
@RF00496 CR    BUFPTR,ENDLOC                                       0501
         BH    @GL00032                                            0501
         CLI   CBUF(BUFPTR),C' '                                   0501
         BE    @RT00501                                            0501
@GL00032 CLI   CBUF(BUFPTR),X'6B'                                  0501
         BE    @RT00501                                            0501
         CLI   CBUF(BUFPTR),X'05'                                  0501
         BE    @RT00501                                            0501
         TM    COMMENTS,B'10000000'                                0501
         BNO   @RF00501                                            0501
         CR    BUFPTR,ENDLOC                                       0501
         BNL   @RF00501                                            0501
@RT00501 DS    0H                                                  0502
*           BUFPTR=BUFPTR+1;                                       0502
         AL    BUFPTR,@CF00036                                     0502
*         ELSE                                                     0503
*           IF BUFPTR=ENDLOC&COMMENTS=YES&CBUF(1)^='+'&CBUF(1)^='-'
*             THEN                                                 0503
         B     @RC00501                                            0503
@RF00501 CR    BUFPTR,ENDLOC                                       0503
         BNE   @RF00503                                            0503
         TM    COMMENTS,B'10000000'                                0503
         BNO   @RF00503                                            0503
         CLI   CBUF(BUFPTR),C'+'                                   0503
         BE    @RF00503                                            0503
         CLI   CBUF(BUFPTR),C'-'                                   0503
         BE    @RF00503                                            0503
*             BUFPTR=BUFPTR+1;                                     0504
         AL    BUFPTR,@CF00036                                     0504
*           ELSE                                                   0505
*             EXITA=YES;                                           0505
         B     @RC00503                                            0505
@RF00503 OI    EXITA,B'10000000'                                   0505
*   END;                                                           0506
@RC00503 DS    0H                                                  0506
@RC00501 DS    0H                                                  0506
@RC00496 DS    0H                                                  0506
@RC00491 DS    0H                                                  0506
@DE00490 TM    EXITA,B'10000000'                                   0506
         BZ    @DL00490                                            0506
*   END SCAN;                                                      0507
*                                                                  0507
@EL00002 DS    0H                                                  0507
@EF00002 DS    0H                                                  0507
@ER00002 LM    @14,@01,12(@13)                                     0507
         LM    @03,@12,32(@13)                                     0507
         BR    @14                                                 0507
*   /*****************************************************************/
*   /*                                                               */
*   /* FREETIN IS USED TO FREE TERMIN CONTROL BLOCKS                 */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0508
*FREETIN:                                                          0508
*   PROC OPTIONS(SAVEAREA);                                        0508
FREETIN  STM   @14,@12,12(@13)                                     0508
         ST    @13,@SA00003+4                                      0508
         LA    @14,@SA00003                                        0508
         ST    @14,8(,@13)                                         0508
         LR    @13,@14                                             0508
*   FREEADDR=EXDLMPTR;              /* ADDR OF STORAGE TO BE FREED   */
         L     @10,LSDEXEC(,LSDPTR)                                0509
         L     @08,EXDLMPTR(,@10)                                  0509
         ST    @08,FREEADDR                                        0509
*   FREELEN=EXDLMPTR->DELIMLL;      /* LENGTH OF AREA                */
         LH    FREELEN,DELIMLL(,@08)                               0510
*   INSCODE=EXINSAVE;               /* RESTORE PARMS                 */
         L     @08,@PC00001+4                                      0511
         L     @06,ECTIOWA(,@08)                                   0511
         L     @06,IOSTELM(,@06)                                   0511
         IC    @15,EXINSAVE(,@10)                                  0511
         STC   @15,INSCODE(,@06)                                   0511
*   EXDLMPTR=0;                     /* ZERO DLM PTR                  */
         SLR   @06,@06                                             0512
         ST    @06,EXDLMPTR(,@10)                                  0512
*   ECTRCDF=''B;                    /* CLEAR ECT TO ZERO             */
         MVI   ECTRCDF(@08),X'00'                                  0513
*   ECTRTCD=0;                      /* SET RETURN CODE TO ZERO       */
         STCM  @06,7,ECTRTCD(@08)                                  0514
*   DO;                             /* FREEMAIN (E) LV(FREELEN)    0515
*                                      A(FREEADDR) SP(78)            */
*     RESPECIFY                                                    0516
*      (GPR01P) RESTRICTED;                                        0516
*     I005=I005&&I005;              /* INIT LIST                     */
         XC    I005(10),I005                                       0517
*     I00505='00'X;                 /* SET TYPE                      */
         MVI   I00505,X'00'                                        0518
*     I00502=FREELEN;               /* LENGTH                        */
         STCM  FREELEN,7,I00502                                    0519
*     I00504=ADDR(FREEADDR);        /* ADDR OF ADDR LIST             */
         LA    @10,FREEADDR                                        0520
         STCM  @10,7,I00504                                        0520
*     I00506=78;                    /* SUBPOOL VALUE                 */
         MVI   I00506,X'4E'                                        0521
*     GPR01P=ADDR(I005);            /* REG1 POINTS TO LIST           */
         LA    GPR01P,I005                                         0522
*     SVC(5);                       /* STANDARD-FORM OF GETMAIN      */
         SVC   5                                                   0523
*     RESPECIFY                                                    0524
*      (GPR01P) UNRESTRICTED;                                      0524
*   END;                            /* FREEMAIN (E) LV(FREELEN)    0525
*                                      A(FREEADDR)             SP(78)*/
*   END FREETIN;                                                   0526
@EL00003 L     @13,4(,@13)                                         0526
@EF00003 DS    0H                                                  0526
@ER00003 LM    @14,@12,12(@13)                                     0526
         BR    @14                                                 0526
*   DECLARE                         /* GENERAL PURPOSE REGISTERS     */
*     GPR01P PTR(31) REG(1);                                       0527
*   DCL                                                            0528
*     1 I004 DEF(ILIST) BDY(WORD),  /* LIST FOR GETMAIN              */
*      2 I00401 PTR(31),            /* LENGTH                        */
*      2 I00402 CHAR(1),            /* HIARCHY                       */
*      2 I00403 PTR(24),            /* ADDR OF ADDR LIST             */
*      2 I00404 CHAR(1),            /* TYPE OF REQUEST               */
*      2 I00405 PTR(8);             /* SUBPOOL VALUE                 */
*   DCL                                                            0529
*     1 I005 DEF(ILIST) BDY(WORD),  /* LIST FOR FREEMAIN             */
*       3 I00501 PTR(8),            /* RESERVED                      */
*       3 I00502 PTR(24),           /* LENGTH                        */
*       3 I00503 PTR(8),            /* RESERVED                      */
*       3 I00504 PTR(24),           /* ADDR OF ADDR LIST             */
*       3 I00505 BIT(8),            /* TYPE OF FREEMAIN              */
*       3 I00506 PTR(8);            /* SUBPOOL VALUE                 */
*   DECLARE                                                        0530
*     ILIST CHAR(10) BDY(DWORD);    /* STANDARD LIST                 */
*   DECLARE                         /* COMMON VARIABLES              */
*     I256C CHAR(256) BASED,                                       0531
*     I031F FIXED(31) BASED,                                       0531
*     I031P PTR(31) BASED,                                         0531
*     I015F FIXED(15) BASED,                                       0531
*     I015P PTR(15) BASED,                                         0531
*     I008P PTR(8) BASED,                                          0531
*     I001C CHAR(1) BASED;                                         0531
*   END IKJEFT55                    /* END OF GETLINE                */
*                                                                  0532
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (IKJEXEC )                                       */
*/*%INCLUDE SYSLIB  (IKJUPT  )                                       */
*/*%INCLUDE SYSLIB  (IKJECT  )                                       */
*/*%INCLUDE SYSLIB  (IKJLSD  )                                       */
*                                                                  0532
*       ;                                                          0532
@DATA    DS    0H
@SM00388 MVC   STACKL(0),MACROS
@SM00391 MVC   MASTBFR(0,@09),CBUF(BUFPTR)
@SO00393 OC    FOLDAREA(0),CBUF(BUFPTR)
@SC00395 CLC   FOLDAREA(0),DELIM(DELIMPTR)
@DATD    DSECT
         DS    0F
@SA00001 DS    18F
@PC00001 DS    4F
@SA00003 DS    18F
@AL00001 DS    5A
IKJEFT55 CSECT
         DS    0F
@CF00256 DC    F'0'
@CF00036 DC    F'1'
@CF00087 DC    F'2'
@CF00055 DC    F'4'
@CF00259 DC    F'5'
@CF00134 DC    F'6'
@CF00103 DC    F'7'
@CF00050 DC    F'8'
@CF00320 DC    F'12'
@CF00277 DC    F'20'
@CF00299 DC    F'136'
@DATD    DSECT
         DS    0D
ECDACBLK DS    AL4
         ORG   ECDACBLK
@NM00015 DS    AL1
ECDACBK2 DS    AL3
         ORG   ECDACBLK+4
UPTPTR   DS    A
ECTPTR   DS    A
OBTAINAD DS    A
TGETPARM DS    AL4
         ORG   TGETPARM
TGOPTION DS    AL1
IBUFADR  DS    AL3
         ORG   TGETPARM+4
LINELEN  DS    F
FREEADDR DS    A
FOLDAREA DS    CL256
         DS    CL4
WORKAREA DS    CL8
ATTNBIT  DS    BL1
LOOPA    DS    BL1
GETLINE  DS    BL1
COMMENTS DS    BL1
TRUNC    DS    BL1
EXITA    DS    BL1
PARM433  DS    CL8
         ORG   PARM433
@NM00016 DS    FL4
         ORG   @NM00016
PARMDEFR DS    BL1
EOCLIST  EQU   @NM00016+0
EXITSTMT EQU   @NM00016+0
         ORG   PARM433+4
SUSPENDI DS    AL4
         ORG   PARM433+8
OUTA     DS    CL2
UPLIST   DS    CL16
         ORG   UPLIST
LOCPTR   DS    AL4
LOCLEN   DS    FL4
VALPTR   DS    AL4
VALLEN   DS    FL4
         ORG   UPLIST+16
CONTEXP  DS    BL1
         DS    CL7
ILIST    DS    CL10
IKJEFT55 CSECT
         DS    0F
@SIZDATD DC    AL1(1)
         DC    AL3(@ENDDATD-@DATD)
@CA00206 DC    A(TRTABUP)
@CV00315 DC    V(IKJRBBMC)
@CV00336 DC    V(IKJUPDT)
@CV00346 DC    V(IKJEFT30)
@CV00359 DC    V(IKJCT433)
         DS    0D
@CC00254 DC    C'SYSDVAL'
@CC00252 DC    C'SYSDLM'
@CC00317 DC    C'END'
@CC00331 DC    C'/*'
@CC00368 DC    C'*/'
PATCH    DC    20F'0'
IKJEFT55 CSECT
MACROS  STACK  DELETE=TOP,MF=L
        STAX   DEFER=NO,MF=L
        STAX   DEFER=YES,MF=L
MACSLEN DC     A(MACSLEN-MACROS)
@DATD    DSECT
STACKL   STACK DELETE=TOP,MF=L
DEFERNO  STAX  DEFER=NO,MF=L
DEFERYES STAX  DEFER=YES,MF=L
@DATD    DSECT
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
IKJEFT55 CSECT
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
I        EQU   @03
DELIMPTR EQU   @06
FREELEN  EQU   @09
MOVELEN  EQU   @03
ENDLOC   EQU   @04
ENDBUF   EQU   @06
DLBASE   EQU   @02
BUFPTR   EQU   @02
GETLEN   EQU   @08
APOINTER EQU   @02
TGETCODE EQU   @05
COUNT    EQU   @09
BUFLEN   EQU   @04
SSELMPTR EQU   @10
RETURNCD EQU   @02
LSDPTR   EQU   @07
R0       EQU   @00
R1       EQU   @01
R2       EQU   @02
R3       EQU   @03
R4       EQU   @04
R5       EQU   @05
R15      EQU   @15
GPR01P   EQU   @01
         EXTRN TRTABUP
EXECDATA EQU   0
@NM00001 EQU   EXECDATA+16
EXINSAVE EQU   @NM00001
RETPTR   EQU   EXECDATA+28
EXDATFLG EQU   EXECDATA+32
@NM00002 EQU   EXDATFLG
CMAIN    EQU   @NM00002
ATTNCMD  EQU   @NM00002
ATINCNTL EQU   @NM00002+1
EXDLMPTR EQU   EXECDATA+40
COMPROC  EQU   0
COMPRPTR EQU   COMPROC
COMPRID  EQU   COMPRPTR
COMPRNXT EQU   COMPRPTR+1
COMPRLNG EQU   COMPROC+4
UPT      EQU   0
UPTSWS   EQU   UPT+12
ECT      EQU   0
ECTRCDF  EQU   ECT
ECTRTCD  EQU   ECT+1
ECTIOWA  EQU   ECT+4
ECTSWS   EQU   ECT+28
ECTLOGF  EQU   ECTSWS
ECTATTN  EQU   ECTSWS
ECTSWS2  EQU   ECT+40
ECTSWS21 EQU   ECTSWS2
IOSRL    EQU   0
IOSTELM  EQU   IOSRL
IOSBELM  EQU   IOSRL+4
INSTACK  EQU   0
INSCODE  EQU   INSTACK
INSTERM  EQU   INSCODE
INSINDD  EQU   INSCODE
INSEXEC  EQU   INSCODE
INSADLSD EQU   INSTACK+1
LSD      EQU   0
LSDADATA EQU   LSD
LSDRCLEN EQU   LSD+4
LSDTOTLN EQU   LSD+6
LSDANEXT EQU   LSD+8
LSDEXEC  EQU   LSD+12
CBUF     EQU   0
MASTBFR  EQU   0
IODSD    EQU   0
DSDMINBF EQU   IODSD+4
@NM00022 EQU   0
DELIMLL  EQU   @NM00022
DELIM    EQU   @NM00022+2
VAL      EQU   0
LASTCHAR EQU   0
RECORDBF EQU   0
LL       EQU   RECORDBF
OO       EQU   RECORDBF+2
DTAA     EQU   RECORDBF+4
VRECORD  EQU   0
VRECLL   EQU   VRECORD
I001C    EQU   0
I008P    EQU   0
I015F    EQU   0
I015P    EQU   0
I031F    EQU   0
I031P    EQU   0
I256C    EQU   0
UPTX     EQU   0
ECTX     EQU   0
ECB      EQU   0
ECBCBIT  EQU   ECB
GTPB     EQU   0
PARMCNTL EQU   GTPB
PARMPHYS EQU   PARMCNTL
PARMTERM EQU   PARMCNTL
PARMTGT  EQU   GTPB+2
PARMTGET EQU   PARMTGT
PARMADIN EQU   GTPB+4
@NM00013 EQU   LSDANEXT
CURID    EQU   @NM00013
CURADDR  EQU   @NM00013+1
I004     EQU   ILIST
I00401   EQU   I004
I00403   EQU   I004+5
I00404   EQU   I004+8
I00405   EQU   I004+9
I005     EQU   ILIST
I00502   EQU   I005+1
I00504   EQU   I005+5
I00505   EQU   I005+8
I00506   EQU   I005+9
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
I00503   EQU   I005+4
I00501   EQU   I005
I00402   EQU   I004+4
@NM00014 EQU   PARMTGT+1
PARMGET  EQU   PARMCNTL
PARMBIT0 EQU   PARMCNTL
ECBCOMPC EQU   ECB
ECBWBIT  EQU   ECB
IODADLSD EQU   IODSD+8
@NM00021 EQU   IODSD+6
@NM00020 EQU   IODSD+3
@NM00019 EQU   IODSD+2
@NM00018 EQU   IODSD+1
@NM00017 EQU   IODSD
INSLIST  EQU   INSCODE
INSPROC  EQU   INSCODE
INSPROM  EQU   INSCODE
INSOTDD  EQU   INSCODE
INSSTOR  EQU   INSCODE
IOSUNUSD EQU   IOSRL+12
IOSNELM  EQU   IOSRL+10
IOSTLEN  EQU   IOSRL+8
@NM00012 EQU   ECT+52
@NM00011 EQU   ECT+48
@NM00010 EQU   ECT+44
@NM00009 EQU   ECTSWS2+1
@NM00008 EQU   ECTSWS21
ECTTABND EQU   ECTSWS21
ECTDEFCS EQU   ECTSWS21
ECTBKPB  EQU   ECT+36
ECTUSER  EQU   ECT+32
ECTDDNUM EQU   ECT+29
ECTBKGRD EQU   ECTSWS
ECTNNOT  EQU   ECTSWS
ECTNMAL  EQU   ECTSWS
ECTATRM  EQU   ECTSWS
@NM00007 EQU   ECTSWS
ECTNOPD  EQU   ECTSWS
ECTSCMD  EQU   ECT+20
ECTPCMD  EQU   ECT+12
ECTSMSG  EQU   ECT+9
ECTMSGF  EQU   ECT+8
UPTPREFL EQU   UPT+23
UPTPREFX EQU   UPT+16
@NM00006 EQU   UPT+15
UPTLDEL  EQU   UPT+14
UPTCDEL  EQU   UPT+13
UPTWTP   EQU   UPTSWS
UPTMODE  EQU   UPTSWS
UPTALD   EQU   UPTSWS
UPTPAUS  EQU   UPTSWS
UPTNCOM  EQU   UPTSWS
UPTMID   EQU   UPTSWS
UPTNPRM  EQU   UPTSWS
@NM00005 EQU   UPTSWS
UPTUSER  EQU   UPT+2
@NM00004 EQU   UPT
COMRCDS  EQU   COMPROC+12
COMPRUSE EQU   COMPROC+8
@NM00003 EQU   EXECDATA+60
FILEDCBS EQU   EXECDATA+56
RETPTR2  EQU   EXECDATA+52
ATACTEND EQU   EXECDATA+48
ATACTSTR EQU   EXECDATA+44
GEXECCNT EQU   EXECDATA+36
NOLASTCC EQU   @NM00002+1
NOMSG    EQU   @NM00002
ERINCNTL EQU   @NM00002
SYMLST   EQU   @NM00002
NOFLUSH  EQU   @NM00002
ERRCMD   EQU   @NM00002
CONLST   EQU   @NM00002
ERACTEND EQU   EXECDATA+24
ERACTSTR EQU   EXECDATA+20
LASTTSO  EQU   EXECDATA+12
GEXECDAT EQU   EXECDATA+8
SVTABFST EQU   EXECDATA+4
SNTABFST EQU   EXECDATA
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RT00081 EQU   SETUPGET
@RT00084 EQU   GETBIGBF
@RT00092 EQU   NORMEND
@RC00094 EQU   NORMEND
@RT00122 EQU   CHECKECB
@RT00124 EQU   GETBIGBF
@RC00131 EQU   EREXIT
@RT00264 EQU   DELETE
@RT00288 EQU   GETMNER
@RC00365 EQU   EXIT
@RT00378 EQU   INVALID
@RT00406 EQU   RESTRT2
@RF00406 EQU   RESTRT
@RT00410 EQU   EXIT
@RT00412 EQU   INVALID
@RT00442 EQU   DELETE
@RT00459 EQU   GETMNER
@ENDDATA EQU   *
         END   IKJEFT55,(C'PLS1751',0701,77010)
