         TITLE 'IKJEFT45, PUTGET SERVICE ROUTINE                       *
                        '
IKJEFT45 CSECT ,                                                   0001
IKJPTGT  DS    0H                                                  0001
         ENTRY IKJPTGT
@MAINENT DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL2(@EP00001-@MAINENT)
         DC    AL1(16)                                             0001
         DC    C'IKJEFT45  74.131'                                 0001
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                     0001
         BALR  @12,0                                               0001
@PSTART  DS    0H                                                  0001
         USING @PSTART,@12                                         0001
         L     @00,@SIZDATD                                        0001
         GETMAIN  R,LV=(0)
         LR    @11,@01                                             0001
         USING @DATD,@11                                           0001
         ST    @13,@SA00001+4                                      0001
         LM    @15,@01,16(@13)                                     0001
         ST    @11,8(,@13)                                         0001
         LR    @13,@11                                             0001
         AH    @15,4(,@15)                                         0001
         BR    @15                                                 0001
@EP00001 MVC   @PC00001(16),0(@01)                                 0001
*                                                                  0026
*   /*****************************************************************/
*   /*                                                               */
*   /* START EXECUTABLE CODE                                         */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0026
*   SAVEREG1=R1;                                                   0026
         ST    R1,SAVEREG1                                         0026
*   PGPBPTR=XPGPBPTR;               /* INITIALIZE REG PTRS           */
         L     PGPBPTR,XPGPBPTR(,R1)                               0027
*   UPTPTR=XUPTPTR;                                                0028
         L     @14,XUPTPTR(,R1)                                    0028
         ST    @14,UPTPTR                                          0028
*   ECTPTR=XECTPTR;                                                0029
         L     ECTPTR,XECTPTR(,R1)                                 0029
*   TRMOPARM(1:12)=R1->PTGTPARM;    /* COPY 1ST 3 WORDS OF PARAMETER
*                                      LIST                          */
         MVC   TRMOPARM(12),PTGTPARM(R1)                           0030
*   DUPRMBLK(1:16)=PGPB;            /* COPY PARM BLOCK               */
         MVC   DUPRMBLK(16),PGPB(PGPBPTR)                          0031
*   ADPRMBLK=ADDR(DUPRMBLK);        /* POINT TO DUPLICATE PARM BLOCK
*                                      IN DUP PARM LIST              */
         LA    @14,DUPRMBLK                                        0032
         ST    @14,ADPRMBLK                                        0032
*   IF PTGPMLEV='0'B THEN           /* IF THE MULTI LEVEL SWITCH IS
*                                      OFF                           */
         TM    PTGPMLEV(PGPBPTR),B'00000100'                       0033
         BNZ   @RF00033                                            0033
*     TXISEGMT=PTGPAOUT;            /* THEN THE PTGPAOUT POINTS    0034
*                                      DIRECTLY TO THE OLD SO PUT  0034
*                                      ADDR IN TEXTIN PARM           */
         L     @14,PTGPAOUT(,PGPBPTR)                              0034
         ST    @14,TXISEGMT                                        0034
*   ELSE                            /* ELSE IF THIS IS A MULTI LEVL
*                                      MSG BUMP ADDR BY 4            */
*     DO;                                                          0035
         B     @RC00033                                            0035
@RF00033 DS    0H                                                  0036
*       NEXTLEV=PTGPAOUT->CHAINPTR; /* SAVE PTR NXT LVL              */
         L     @14,PTGPAOUT(,PGPBPTR)                              0036
         L     NEXTLEV,CHAINPTR-1(,@14)                            0036
         LA    NEXTLEV,0(,NEXTLEV)                                 0036
*       TXISEGMT=PTGPAOUT+4;                                       0037
         AL    @14,@CF00210                                        0037
         ST    @14,TXISEGMT                                        0037
*     END;                                                         0038
*   TXIFRMSG=ADDR(DPUTAOUT);        /* THIS WILL CAUSE TEXTIN TO   0039
*                                      PLACE ADDR OF THE FORMTD MSG
*                                      IN THE PRM BLK.               */
@RC00033 LA    @14,DPUTAOUT                                        0039
         ST    @14,TXIFRMSG                                        0039
*   DPUTAOUT=0;                     /* TURN CHAIN FLAG OFF           */
         SLR   @14,@14                                             0040
         ST    @14,DPUTAOUT                                        0040
*   TXIFONLY=ADDR(FORMONLY);        /* FILL IN 3RD TEXTIN PARM       */
         LA    @08,FORMONLY                                        0041
         ST    @08,TXIFONLY                                        0041
*   FORMONLY=0;                     /* ZERO FORMAT ONLY BIT          */
         ST    @14,FORMONLY                                        0042
*   BYPSFLAG=0;                     /* TURN OFF BYPASS FLAG          */
         STH   @14,BYPSFLAG                                        0043
*   IF PTGPMODE='1'B THEN           /* IF MODE BIT IS ON             */
         TM    PTGPMODE(PGPBPTR),B'10000000'                       0044
         BNO   @RF00044                                            0044
*     DO;                                                          0045
*       IF PTGPATTN='1'B THEN       /* ATTN PROCESING REQUSTED       */
         TM    PTGPATTN(PGPBPTR),B'00001000'                       0046
         BNO   @RF00046                                            0046
*         DO;                                                      0047
*           T2=ADDR(CONTMODE);      /* POINT TO RETURN TO AFTER    0048
*                                      PUTLGETL SUBROUTINE HAS     0048
*                                      FININSHED                     */
         LA    T2,CONTMODE                                         0048
*           GOTO GETINPUT;          /* BYPASS PUTL LOGIC AND GO    0049
*                                      DIRECTLY TO GETL LOGIC        */
         B     GETINPUT                                            0049
*         END;                                                     0050
*TERMSORC:                                                         0051
*       IF INSTERM='1'B×            /* CURRENT SOURCE TERMINAL       */
*           PTGGTERM='1'B×          /* OR                            */
*           INSINDD='1'B THEN       /* IF INPUT DCB PRESENT          */
@RF00046 DS    0H                                                  0051
TERMSORC L     @14,ECTIOWA(,ECTPTR)                                0051
         L     @14,IOSTELM(,@14)                                   0051
         TM    INSTERM(@14),B'10000000'                            0051
         BO    @RT00051                                            0051
         TM    PTGGTERM(PGPBPTR),B'00010000'                       0051
         BO    @RT00051                                            0051
         TM    INSINDD(@14),B'00100000'                            0051
         BNO   @RF00051                                            0051
@RT00051 DS    0H                                                  0052
*         DO;                                                      0052
*           T2=ADDR(CONTMODE);      /* POINT TO RETURN TO AFTER    0053
*                                      PUTLGETL SUBROUTINE HAS     0053
*                                      FININSHED                     */
         LA    T2,CONTMODE                                         0053
*           IF PTGPAOUT=0×          /* NO OUTPUT SUPPLD              */
*               INSOTDD='1'B THEN   /* OR OUTPUT TO FILE             */
         L     @14,PTGPAOUT(,PGPBPTR)                              0054
         LTR   @14,@14                                             0054
         BZ    @RT00054                                            0054
         L     @14,ECTIOWA(,ECTPTR)                                0054
         L     @14,IOSTELM(,@14)                                   0054
         TM    INSOTDD(@14),B'00010000'                            0054
         BO    @RT00054                                            0054
*             GOTO GETINPUT;        /* BYPASS PUTL LOGIC AND GO    0055
*                                      DIRECTLY TO GETL LOGIC        */
*           ELSE                    /* OUTPUT LINE PROVIDED          */
*             GOTO FORMAT;          /* GOTO PUTLGETL SUBROUTNE       */
         B     FORMAT                                              0056
*CONTMODE:                                                         0057
*           IF PTGGADIN->INBUFTXT(1)='?' THEN                      0057
CONTMODE L     @14,PTGGADIN(,PGPBPTR)                              0057
         CLI   INBUFTXT(@14),C'?'                                  0057
         BNE   @RF00057                                            0057
*             DO;                                                  0058
*               T1=ADDR(CHAINOUT);  /* POINT TO RETURN TO AFTER    0059
*                                      FREEMAIN SUBROUTINE HAS     0059
*                                      FININSHED                     */
         LA    T1,CHAINOUT                                         0059
*               GOTO FREEBUFF;      /* FREE QUESTION MK BUFFER       */
         B     FREEBUFF                                            0060
*CHAINOUT:                                                         0061
*               R1=ADDR(TRMOPARM);  /* CHAINOUT PARMS                */
CHAINOUT LA    R1,TRMOPARM                                         0061
*               CALL IKJEFT52;      /* CHAIN OUT SUBROUTINE          */
         L     @15,@CV00222                                        0062
         BALR  @14,@15                                             0062
*               ERCODE=R15;         /* SAVE RETURN CODE              */
         LR    ERCODE,R15                                          0063
*               IF ERCODE^=0 THEN   /* CHAINOUT ERROR                */
         SLR   @14,@14                                             0064
         CR    ERCODE,@14                                          0064
         BNE   @RT00064                                            0064
*                 GOTO TRMOUTER;                                   0065
*               ELSE                /* IF NO CHAINOUT ERROR          */
*                 DPUTAOUT=0;                                      0066
         ST    @14,DPUTAOUT                                        0066
*               GOTO TERMSORC;      /* WHEN PUTLGETL PROCESSING    0067
*                                      COMPLETES CONTROL WILL RETURN
*                                      TO 'CONTMODE'                 */
         B     TERMSORC                                            0067
*             END;                  /* END '?' PROCESSING            */
*           IF ECTSMSG^=0 THEN      /* IF A CHAIN EXISTS WHICH THE 0069
*                                      USER DOES NOT WISH TO BE    0069
*                                      DISPLAYED                     */
@RF00057 L     @14,ECTSMSG-1(,ECTPTR)                              0069
         LA    @14,0(,@14)                                         0069
         LTR   @14,@14                                             0069
         BZ    @RF00069                                            0069
*             CALL IKJEFT53;        /* CALL UNCHAIN SUBROUTINE       */
         L     @15,@CV00224                                        0070
         BALR  @14,@15                                             0070
*           GOTO CKLIST;                                           0071
         B     CKLIST                                              0071
*         END;                      /* END TERMINAL SOURCE PROCESSING*/
*                                                                  0072
*       /*************************************************************/
*       /*                                                           */
*       /* NON-TERMINAL SOURCE PROCESSING                            */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0073
*       DPUTTPUT=0;                 /* CAUSE ALL OUTPUT TO HAVE    0073
*                                      DEFAULT TPUT OPTIONS          */
@RF00051 MVI   DPUTTPUT,X'00'                                      0073
*       IF ECTMSGF>='80'X THEN                                     0074
         CLI   ECTMSGF(ECTPTR),X'80'                               0074
         BNL   @RT00074                                            0074
*         GOTO UNCHAIN;             /* CHAIN FLAGGED ?               */
*       IF ECTSMSG=0 THEN           /* IF NO CHAIN EXISTS            */
         L     @14,ECTSMSG-1(,ECTPTR)                              0076
         LA    @14,0(,@14)                                         0076
         LTR   @14,@14                                             0076
         BNZ   @RF00076                                            0076
*         DO;                                                      0077
*GETALINE:                                                         0078
*           ADPRMBLK=PGPBPTR+8;     /* 'GET' PARMS                   */
GETALINE LA    @14,8                                               0078
         ALR   @14,PGPBPTR                                         0078
         ST    @14,ADPRMBLK                                        0078
*           R1=ADDR(TRMOPARM);      /* SUBROUTINE PARMS              */
         LA    R1,TRMOPARM                                         0079
*           CALL IKJEFT55;          /* CALL GETINPUT                 */
         L     @15,@CV00230                                        0080
         BALR  @14,@15                                             0080
*           ERCODE=R15;             /* SAVE REG 15                   */
         LR    ERCODE,R15                                          0081
*           GETCODE=R15;            /* GETLINE RETURN CODE           */
         LR    GETCODE,R15                                         0082
*           ADPRMBLK=ADDR(DUPRMBLK);/* D-PARMBLOCK                   */
         LA    @14,DUPRMBLK                                        0083
         ST    @14,ADPRMBLK                                        0083
*           IF ERCODE=16 THEN       /* IF END OF DATA                */
         C     ERCODE,@CF00103                                     0084
         BNE   @RF00084                                            0084
*             DO;                                                  0085
*               R1=SAVEREG1;        /* POINT TO REAL IOPL            */
         L     R1,SAVEREG1                                         0086
*               DPUTTPUT=PTGPTPUT;  /* RESTORE USER TPUT OPTIONS     */
         MVC   DPUTTPUT(1),PTGPTPUT(PGPBPTR)                       0087
*               GOTO TERMSORC;                                     0088
         B     TERMSORC                                            0088
*             END;                                                 0089
*           IF ERCODE>4 THEN                                       0090
@RF00084 C     ERCODE,@CF00210                                     0090
         BH    @RT00090                                            0090
*             GOTO GETINPER;        /* HANDLE ANY ERROR              */
*CKLIST:                                                           0092
*           IF INSLIST='1'B&(INSOTDD='1'B×PTGGTERM='0'B) THEN/* LIST
*                                      OP                            */
CKLIST   L     @14,ECTIOWA(,ECTPTR)                                0092
         L     @14,IOSTELM(,@14)                                   0092
         TM    INSLIST(@14),B'00000001'                            0092
         BNO   @RF00092                                            0092
         TM    INSOTDD(@14),B'00010000'                            0092
         BO    @RT00092                                            0092
         TM    PTGGTERM(PGPBPTR),B'00010000'                       0092
         BNZ   @RF00092                                            0092
@RT00092 DS    0H                                                  0093
*             DO;                                                  0093
*               DPUTTPUT=0;         /* DEFAULT TPUT OPTIONS          */
         MVI   DPUTTPUT,X'00'                                      0094
*               DPUTAOUT=PTGGADIN;  /* MAKE TERMOUT'S OUTPUT LINE  0095
*                                      EQUAL GETINPUT'S LAST INPUT 0095
*                                      LINE.                         */
         L     @14,PTGGADIN(,PGPBPTR)                              0095
         ST    @14,DPUTAOUT                                        0095
*               DPUTDATA='1'B;      /* TURN ON DATA BIT              */
         OI    DPUTDATA,B'00100000'                                0096
*               CALL IKJEFT56;      /* GOTO TERMOUT                  */
         L     @15,@CV00233                                        0097
         BALR  @14,@15                                             0097
*               ERCODE=R15;         /* SAVE RETURN CODE              */
         LR    ERCODE,R15                                          0098
*               IF ERCODE^=0 THEN                                  0099
         LTR   ERCODE,ERCODE                                       0099
         BNZ   @RT00099                                            0099
*                 GOTO TRMOUTER;    /* HANDLE ERRORS                 */
*             END;                  /* END LIST PROCESSING           */
*           GOTO NORMEND;                                          0102
         B     NORMEND                                             0102
*         END;                      /* END NO CHAIN PROCESSING       */
*       IF UPTPAUS='1'B THEN        /* PAUSE PROC REQUESTED          */
@RF00076 L     @14,UPTPTR                                          0104
         TM    UPTPAUS(@14),B'00001000'                            0104
         BNO   @RF00104                                            0104
*         DO;                                                      0105
*           DPUTAOUT=ADDR(PAUSMSG); /* POINT TO PAUSE MSG            */
         L     @14,@CA00204                                        0106
         ST    @14,DPUTAOUT                                        0106
*TELLTERM:                                                         0107
*           ADPRMBLK=ADDR(DUPRMBLK);/* POINT TO D PARMBLK            */
TELLTERM LA    @14,DUPRMBLK                                        0107
         ST    @14,ADPRMBLK                                        0107
*           R1=ADDR(TRMOPARM);      /* SUBROUTINE PARMLIST           */
         LA    R1,TRMOPARM                                         0108
*           CALL IKJEFT56;          /* PUT MSG TO TERMINAL           */
         L     @15,@CV00233                                        0109
         BALR  @14,@15                                             0109
*           ERCODE=R15;             /* SAVE RETURN CODE              */
         LR    ERCODE,R15                                          0110
*           IF ERCODE^=0 THEN       /* TERMOUT ERROR                 */
         LTR   ERCODE,ERCODE                                       0111
         BNZ   @RT00111                                            0111
*             GOTO TRMOUTER;                                       0112
*           DGETTERM='1'B;          /* TURN ON DEMAND FROM TERM      */
         OI    DGETTERM,B'00010000'                                0113
*           ADPRMBLK=ADDR(DUPRMBLK)+8;/* GET PARMS                   */
         LA    @14,DUPRMBLK                                        0114
         AL    @14,@CF00075                                        0114
         ST    @14,ADPRMBLK                                        0114
*           CALL IKJEFT55;          /* CALL GETINPUT ROUTINE         */
         L     @15,@CV00230                                        0115
         BALR  @14,@15                                             0115
*           ERCODE=R15;             /* SAVE RETURN CODE              */
         LR    ERCODE,R15                                          0116
*           IF ERCODE^=0 THEN       /* GETINPUT ERROR                */
         LTR   ERCODE,ERCODE                                       0117
         BNZ   @RT00117                                            0117
*             GOTO GETINPER;                                       0118
*           IF DGETADIN->INBUFTXT(1)='?' THEN/* ? RETRN              */
         L     @14,DGETADIN                                        0119
         CLI   INBUFTXT(@14),C'?'                                  0119
         BNE   @RF00119                                            0119
*             DO;                                                  0120
*               T1=ADDR(CALLCHAN);  /* SET RETURN ADDR               */
         LA    T1,CALLCHAN                                         0121
*FREEDUMY:                                                         0122
*               FLENGTH=DGETADIN->INBUFLL;/* LENGTH                  */
FREEDUMY L     @14,DGETADIN                                        0122
         LH    @04,INBUFLL(,@14)                                   0122
         STCM  @04,7,FLENGTH                                       0122
*               R1=DGETADIN;        /* POINT TO ? BUFFER             */
         LR    R1,@14                                              0123
*               GOTO FREEMAIN;      /* FREE QUESTION MARK BUF        */
         B     FREEMAIN                                            0124
*CALLCHAN:                                                         0125
*               ADPRMBLK=ADDR(DUPRMBLK);/* D-PARMBLK                 */
CALLCHAN LA    @14,DUPRMBLK                                        0125
         ST    @14,ADPRMBLK                                        0125
*               R1=ADDR(TRMOPARM);  /* SUBROUTINE PARMS              */
         LA    R1,TRMOPARM                                         0126
*               CALL IKJEFT52;      /* CALL CHAIN OUT                */
         L     @15,@CV00222                                        0127
         BALR  @14,@15                                             0127
*               ERCODE=R15;         /* SAVE RETURN CODE              */
         LR    ERCODE,R15                                          0128
*               IF ERCODE^=0 THEN   /* CHAIN OUT ERROR               */
         LTR   ERCODE,ERCODE                                       0129
         BNZ   @RT00129                                            0129
*                 GOTO TRMOUTER;                                   0130
*               GOTO GETALINE;                                     0131
         B     GETALINE                                            0131
*             END;                  /* END ? PROCESSING              */
*           IF DGETADIN->INBUFLL=4 THEN/* NULL LINE ?                */
@RF00119 L     @14,DGETADIN                                        0133
         CLC   INBUFLL(2,@14),@CH00210                             0133
         BNE   @RF00133                                            0133
*             DO;                                                  0134
*               T1=ADDR(UNCHAIN);   /* SET RETURN ADDR               */
         LA    T1,UNCHAIN                                          0135
*               GOTO FREEDUMY;      /* FREE DUMMY BUFFER             */
         B     FREEDUMY                                            0136
*UNCHAIN:                                                          0137
*               CALL IKJEFT53;      /* UNCHAIN SUBROUTINE            */
UNCHAIN  L     @15,@CV00224                                        0137
         BALR  @14,@15                                             0137
*               GOTO GETALINE;      /* GET REAL LINE                 */
         B     GETALINE                                            0138
*             END;                  /* END OF NULL LINE PROCESSING   */
*           DPUTAOUT=ADDR(PRMPTMSG);                               0140
@RF00133 L     @14,@CA00203                                        0140
         ST    @14,DPUTAOUT                                        0140
*           GOTO TELLTERM;          /* PROMPT FOR GOOD ANSWER        */
         B     TELLTERM                                            0141
*         END;                      /* END PAUSE PROCESSING          */
*       RETURNCD=12;                /* CHAIN EXISTS BUT              */
@RF00104 LA    RETURNCD,12                                         0143
*       GOTO EXIT;                  /* NOPAUSE WAS SPECIFIED         */
         B     EXIT                                                0144
*     END;                          /* END MODE PROCESSING           */
*PROMPT:                                                           0146
*   IF PTGPPRMT='1'B THEN           /* PROMPT BIT ON                 */
@RF00044 DS    0H                                                  0146
PROMPT   TM    PTGPPRMT(PGPBPTR),B'00000001'                       0146
         BNO   @RF00146                                            0146
*     DO;                                                          0147
*       IF UPTNPRM='1'B×            /* IF NO PROMPT BIT IS ON        */
*           IOSBELM->INSPROC='1'B×  /* BOTTOM ELEMENT BAKGND         */
*           (INSPROC='1'B&INSPROM='0'B) THEN/* OR CURRENT SRCE A PROC*/
         L     @14,UPTPTR                                          0148
         TM    UPTNPRM(@14),B'01000000'                            0148
         BO    @RT00148                                            0148
         L     @14,ECTIOWA(,ECTPTR)                                0148
         L     @10,IOSBELM(,@14)                                   0148
         TM    INSPROC(@10),B'00000010'                            0148
         BO    @RT00148                                            0148
         L     @14,IOSTELM(,@14)                                   0148
         TM    INSPROC(@14),B'00000010'                            0148
         BNO   @RF00148                                            0148
         TM    INSPROM(@14),B'00000100'                            0148
         BNZ   @RF00148                                            0148
@RT00148 DS    0H                                                  0149
*         DO;                                                      0149
*           RETURNCD=12;            /* NO PROMPTING ALLOWED          */
         LA    RETURNCD,12                                         0150
*           GOTO EXIT;              /* EXIT                          */
         B     EXIT                                                0151
*         END;                      /* END NOPROMPT PROCESSING       */
*                                                                  0152
*       /*************************************************************/
*       /*                                                           */
*       /* PUTL-GETL INTERFACE                                       */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0153
*       PTGGTERM='1'B;              /* TURN ON DEMND FROM TERM       */
@RF00148 OI    PTGGTERM(PGPBPTR),B'00010000'                       0153
*       IF PTGPBYPS='1'B THEN       /* IF BYPASS BIT ON              */
         TM    PTGPBYPS(PGPBPTR),B'00010000'                       0154
         BNO   @RF00154                                            0154
*         BYPSFLAG=1;                                              0155
         MVC   BYPSFLAG(2),@CH00040                                0155
*       T2=ADDR(CONTPRMT);          /* POINT TO RETURN TO AFTER    0156
*                                      PUTLGETL SUBROUTINE HAS     0156
*                                      FININSHED                     */
@RF00154 LA    T2,CONTPRMT                                         0156
*       GEN(TCLEARQ  INPUT);                                       0157
         TCLEARQ  INPUT
*       GOTO FORMAT;                /* PUT MSG & GET RESPONSE        */
         B     FORMAT                                              0158
*CONTPRMT:                                                         0159
*       IF PTGGADIN->INBUFTXT(1)='?' THEN/* MORE INFOR WANTED        */
CONTPRMT L     @14,PTGGADIN(,PGPBPTR)                              0159
         CLI   INBUFTXT(@14),C'?'                                  0159
         BNE   @RF00159                                            0159
*         DO;                                                      0160
*           T1=ADDR(CHEKMLEV);      /* SET RETURN ADDR               */
         LA    T1,CHEKMLEV                                         0161
*           GOTO FREEBUFF;          /* FREE QUESTION MARK BUFR       */
         B     FREEBUFF                                            0162
*CHEKMLEV:                                                         0163
*           IF PTGPMLEV='1'B THEN   /* MULTI LEVEL OUTPUT            */
CHEKMLEV TM    PTGPMLEV(PGPBPTR),B'00000100'                       0163
         BNO   @RF00163                                            0163
*             DO;                                                  0164
*               IF NEXTLEV^=0 THEN  /* IF ANOTHER LEVEL MESSAGE    0165
*                                      EXISTS                        */
         SLR   @14,@14                                             0165
         CR    NEXTLEV,@14                                         0165
         BE    @RF00165                                            0165
*                 DO;                                              0166
*                   FORMONLY=0;                                    0167
         ST    @14,FORMONLY                                        0167
*                   TXISEGMT=NEXTLEV+4;                            0168
         LA    @14,4                                               0168
         ALR   @14,NEXTLEV                                         0168
         ST    @14,TXISEGMT                                        0168
*                   NEXTLEV=NEXTLEV->CHAINPTR;/* SAVE ADDR OF NEXT 0169
*                                      LEVEL                         */
         L     @14,CHAINPTR-1(,NEXTLEV)                            0169
         LA    @14,0(,@14)                                         0169
         LR    NEXTLEV,@14                                         0169
*                   GOTO FORMAT;    /* FORMAT 2ND LEV MESSAGE        */
         B     FORMAT                                              0170
*                 END;              /* END CHAIN PROCESSING          */
*             END;                  /* END MULTI-LEVEL MESSAGE     0172
*                                      PROCESSING                    */
@RF00165 DS    0H                                                  0173
*           DPUTAOUT=ADDR(NOIFRMSG);/* POINT TO 'NO INFORMATION MSG  */
@RF00163 L     @14,@CA00202                                        0173
         ST    @14,DPUTAOUT                                        0173
*           GOTO PUTMSG;            /* PUT MESSAGE OUT               */
         B     PUTMSG                                              0174
*         END;                      /* END ? PROCESSING              */
*       GOTO NORMEND;               /* INDICATE NORMAL END           */
         B     NORMEND                                             0176
*     END;                          /* END PROMPT MSG SECTION        */
*   GOTO INVLPARM;                  /* IF NOT MODE OR PROMPT INDICATE
*                                      INVAL INPUT                   */
         B     INVLPARM                                            0178
*FORMAT:                                                           0179
*   R1=ADDR(TXINPARM);              /* POINT OT TEXTIN PARMS         */
FORMAT   LA    R1,TXINPARM                                         0179
*   CALL IKJEFT54;                  /* PERFORM TEXT INSERTION        */
         L     @15,@CV00253                                        0180
         BALR  @14,@15                                             0180
*   ERCODE=R15;                     /* SAVE RETURN CODE              */
         LR    ERCODE,R15                                          0181
*   IF ERCODE^=0 THEN               /* TEXTIN FAILURE                */
         LTR   ERCODE,ERCODE                                       0182
         BZ    @RF00182                                            0182
*     DO;                                                          0183
*TEXTINER:                                                         0184
*       IF ERCODE=12 THEN                                          0184
TEXTINER C     ERCODE,@CF00130                                     0184
         BE    @RT00184                                            0184
*         GOTO INVLPARM;                                           0185
*       ELSE                                                       0186
*         DO;                                                      0186
*GETMNER:                                                          0187
*           RETURNCD=28;                                           0187
GETMNER  LA    RETURNCD,28                                         0187
*           GOTO EXIT;              /* BRNCH TO EXIT                 */
         B     EXIT                                                0188
*         END;                                                     0189
*     END;                          /* END TEXTN ERROR        SECTION*/
*PUTMSG:                                                           0191
*   R1=ADDR(TRMOPARM);              /* POINT TO TRMOUT PARMS         */
@RF00182 DS    0H                                                  0191
PUTMSG   LA    R1,TRMOPARM                                         0191
*   CALL IKJEFT56;                  /* GO TO TERMOUT                 */
         L     @15,@CV00233                                        0192
         BALR  @14,@15                                             0192
*   ERCODE=R15;                     /* SAVE RETURN CODE              */
         LR    ERCODE,R15                                          0193
*   IF FRESWICH=1 THEN              /* IF BUFFER WAS OBTAINED        */
         CLC   FRESWICH(4),@CF00040                                0194
         BNE   @RF00194                                            0194
*     DO;                                                          0195
*       FRESWICH=0;                 /* TURN OFF FREEMAIN SWICH       */
         SLR   @14,@14                                             0196
         ST    @14,FRESWICH                                        0196
*       FLENGTH=DPUTAOUT->INBUFLL;                                 0197
         L     @14,DPUTAOUT                                        0197
         LH    @04,INBUFLL(,@14)                                   0197
         STCM  @04,7,FLENGTH                                       0197
*       R1=DPUTAOUT;                                               0198
         LR    R1,@14                                              0198
*       T1=ADDR(OUTERR);            /* POINT TO RETURN TO AFTER    0199
*                                      FREEMAIN SUBROUTINE HAS     0199
*                                      FININSHED                     */
         LA    T1,OUTERR                                           0199
*       GOTO FREEMAIN;                                             0200
         B     FREEMAIN                                            0200
*     END;                                                         0201
*OUTERR:                                                           0202
*   IF ERCODE^=0 THEN               /* TERMINAL OUTPUT ERROR         */
@RF00194 DS    0H                                                  0202
OUTERR   LTR   ERCODE,ERCODE                                       0202
         BZ    @RF00202                                            0202
*     DO;                                                          0203
*TRMOUTER:                                                         0204
*       IF ERCODE=20 THEN           /* WAS RETURN CODE LINEDROP    0204
*                                      Y02996                        */
TRMOUTER C     ERCODE,@CF00206                                     0204
         BNE   @RF00204                                            0204
*         DO;                       /* Y02996                        */
*           RETURNCD=32;            /* Y02996                        */
         LA    RETURNCD,32                                         0206
*           GO TO EXIT;             /* Y02996                        */
         B     EXIT                                                0207
*         END;                      /* Y02996                        */
*       IF ERCODE=4 THEN            /* ATTN INTER-ECB POSTED         */
@RF00204 C     ERCODE,@CF00210                                     0209
         BNE   @RF00209                                            0209
*         DO;                                                      0210
*ATTNER:                                                           0211
*           RETURNCD=8;                                            0211
ATTNER   LA    RETURNCD,8                                          0211
*           GOTO EXIT;                                             0212
         B     EXIT                                                0212
*         END;                                                     0213
*       IF ERCODE=8 THEN            /* NOWAIT REQ-NOLINE RETRN       */
@RF00209 C     ERCODE,@CF00075                                     0214
         BNE   @RF00214                                            0214
*NWAITER:                                                          0215
*         RETURNCD=16;                                             0215
NWAITER  LA    RETURNCD,16                                         0215
*       ELSE                                                       0216
*INVLPARM:                                                         0216
*         RETURNCD=24;              /* INDICATE INVALID PARMS        */
         B     @RC00214                                            0216
@RF00214 DS    0H                                                  0216
INVLPARM LA    RETURNCD,24                                         0216
*       GOTO EXIT;                                                 0217
         B     EXIT                                                0217
*     END;                          /* END TERMOUT ERR        SECTION*/
*   IF BYPSFLAG=1 THEN              /* IS BYPASS BIT ON              */
@RF00202 CLC   BYPSFLAG(2),@CH00040                                0219
         BNE   @RF00219                                            0219
*     DO;                                                          0220
*BYPAS:                                                            0221
*       R1=ADDR(BYPASS);            /* POINT TO BYPASS CHAR          */
BYPAS    LA    R1,BYPASS                                           0221
*       R0=1;                       /* LENGTH OF OUTPUT              */
         LA    R0,1                                                0222
*       GEN(TPUT (1),(0),CONTROL);                                 0223
         TPUT (1),(0),CONTROL
*     END;                          /* END BYPASS PROCESSING         */
*GETINPUT:                                                         0225
*   ADPRMBLK=PGPBPTR+8;             /* UPDATE SUBROUTINE PARM TO   0225
*                                      POINT TO GTPB PART OF PGPB FOR
*                                      IKJEFT55                      */
@RF00219 DS    0H                                                  0225
GETINPUT LA    @14,8                                               0225
         ALR   @14,PGPBPTR                                         0225
         ST    @14,ADPRMBLK                                        0225
*   R1=ADDR(TRMOPARM);              /* POINT TO MODIFIED IOPL        */
         LA    R1,TRMOPARM                                         0226
*   CALL IKJEFT55;                  /* CALL GETINPUT                 */
         L     @15,@CV00230                                        0227
         BALR  @14,@15                                             0227
*   ERCODE=R15;                     /* SAVE RETURN CODE              */
         LR    ERCODE,R15                                          0228
*   GETCODE=R15;                    /* SAVE GETLINE CODE      Y30PQJM*/
         LR    GETCODE,R15                                         0229
*   ADPRMBLK=ADDR(DUPRMBLK);        /* RESTORE PARMADDR              */
         LA    @14,DUPRMBLK                                        0230
         ST    @14,ADPRMBLK                                        0230
*   IF BYPSFLAG=1 THEN              /* BYPASS INDICATED WAS BYPASS 0231
*                                      CHAR SENT                     */
         LA    @14,1                                               0231
         CH    @14,BYPSFLAG                                        0231
         BNE   @RF00231                                            0231
*     DO;                                                          0232
*       R1=ADDR(RESTORE);           /* POINT TO RESTORE CHAR         */
         LA    R1,RESTORE                                          0233
*       R0=1;                       /* LENGTH OF OUTPUT              */
         LR    R0,@14                                              0234
*       GEN(TPUT (1),(0),CONTROL);                                 0235
         TPUT (1),(0),CONTROL
*     END;                          /* END RESTORE PROCESSING        */
*   IF ERCODE>4 THEN                /* GETINPUT ERROR                */
@RF00231 C     ERCODE,@CF00210                                     0237
         BNH   @RF00237                                            0237
*     DO;                                                          0238
*GETINPER:                                                         0239
*       IF ERCODE=28                /* LINEDROP                Y02996*/
*         THEN                      /*                         Y02996*/
GETINPER C     ERCODE,@CF00257                                     0239
         BNE   @RF00239                                            0239
*         DO;                       /*                         Y02996*/
*           RETURNCD=32;            /* SET RETURNCD            Y02996*/
         LA    RETURNCD,32                                         0241
*           GO TO EXIT;             /* END                     Y02996*/
         B     EXIT                                                0242
*         END;                      /*                         Y02996*/
*       IF ERCODE=8 THEN            /* ATTN ECB POSTED               */
@RF00239 C     ERCODE,@CF00075                                     0244
         BE    @RT00244                                            0244
*         GOTO ATTNER;                                             0245
*       IF ERCODE=16 THEN                                          0246
         C     ERCODE,@CF00103                                     0246
         BNE   @RF00246                                            0246
*         DO;                       /* IF END OF FILE                */
*           R1=SAVEREG1;            /* GO GET ANOTHER LINE           */
         L     R1,SAVEREG1                                         0248
*           DPUTTPUT=PTGPTPUT;                                     0249
         MVC   DPUTTPUT(1),PTGPTPUT(PGPBPTR)                       0249
*           GOTO TERMSORC;                                         0250
         B     TERMSORC                                            0250
*         END;                                                     0251
*       IF ERCODE=12 THEN           /* NOWAIT-NOLINE                 */
@RF00246 C     ERCODE,@CF00130                                     0252
         BNE   @RF00252                                            0252
*         DO;                                                      0253
*           RETURNCD=20;            /* NOWAIT-TGET                   */
         LA    RETURNCD,20                                         0254
*           GOTO EXIT;                                             0255
         B     EXIT                                                0255
*         END;                      /* END NOWAIT PROCESSING         */
*       IF ERCODE=20 THEN           /* INVALID PARMS                 */
@RF00252 C     ERCODE,@CF00206                                     0257
         BE    @RT00257                                            0257
*         GOTO INVLPARM;                                           0258
*       ELSE                                                       0259
*         GOTO GETMNER;             /* GETMAIN FAILURE               */
         B     GETMNER                                             0259
*     END;                          /* END GETINPUT ERROR            */
*EXITPLGL:                                                         0261
*   GOTO T2->ALABEL;                /* RETURN TO CALLER              */
*                                                                  0261
@RF00237 DS    0H                                                  0261
EXITPLGL BR    T2                                                  0261
*   /*****************************************************************/
*   /*                                                               */
*   /* FREEMAIN INTERNAL SUBROUTINE                                  */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0262
*FREEBUFF:                                                         0262
*   ADPRMBLK=ADDR(DUPRMBLK);        /* RESTORE PARMLIST FOR TERMOUT
*                                      AND CHAINOUT                  */
FREEBUFF LA    @14,DUPRMBLK                                        0262
         ST    @14,ADPRMBLK                                        0262
*   FLENGTH=PTGGADIN->INBUFLL;                                     0263
         L     @14,PTGGADIN(,PGPBPTR)                              0263
         LH    @04,INBUFLL(,@14)                                   0263
         STCM  @04,7,FLENGTH                                       0263
*   R1=PTGGADIN;                    /* POINT TO ? BUFFER             */
         LR    R1,@14                                              0264
*FREEMAIN:                                                         0265
*   SPOOL=1;                        /* INDICATE NON SHARED SPL       */
FREEMAIN MVI   SPOOL,X'01'                                         0265
*   R0=FREEREG0;                    /* FILL IN FREEMAIN REG          */
         L     R0,FREEREG0                                         0266
*   GEN(FREEMAIN R,LV=(0),A=(1));                                  0267
         FREEMAIN R,LV=(0),A=(1)
*   R1=SAVEREG1;                    /* RESTORE PARM REG              */
         L     R1,SAVEREG1                                         0268
*   GOTO T1->ALABEL;                /* RETURN TO CALLER              */
         BR    T1                                                  0269
*NORMEND:                                                          0270
*   RETURNCD=GETCODE;               /* PASS ON GETLINE CODE   Y30PQJM*/
NORMEND  LR    RETURNCD,GETCODE                                    0270
*EXIT:                                                             0271
*   RETURN CODE(RETURNCD);                                         0271
EXIT     L     @13,4(,@13)                                         0271
         L     @00,@SIZDATD                                        0271
         LR    @01,@11                                             0271
         FREEMAIN R,LV=(0),A=(1)
         LR    @15,@05                                             0271
         L     @14,12(,@13)                                        0271
         LM    @00,@12,20(@13)                                     0271
         BR    @14                                                 0271
*   END IKJEFT45                                                   0272
*                                                                  0272
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (IKJUPT  )                                       */
*/*%INCLUDE SYSLIB  (IKJECT  )                                       */
*                                                                  0272
*       ;                                                          0272
@DATA    DS    0H
@DATD    DSECT
         DS    0F
@SA00001 DS    18F
@PC00001 DS    4F
IKJEFT45 CSECT
         DS    0F
@CF00040 DC    F'1'
@CH00040 EQU   @CF00040+2
@CF00210 DC    F'4'
@CH00210 EQU   @CF00210+2
@CF00075 DC    F'8'
@CF00130 DC    F'12'
@CF00103 DC    F'16'
@CF00206 DC    F'20'
@CF00257 DC    F'28'
@DATD    DSECT
         DS    0D
UPTPTR   DS    A
SAVEREG1 DS    F
FORMONLY DS    A
FREEREG0 DS    AL4
         ORG   FREEREG0
SPOOL    DS    AL1
FLENGTH  DS    AL3
         ORG   FREEREG0+4
BYPSFLAG DS    H
         DS    CL2
TXINPARM DS    CL12
         ORG   TXINPARM
TXISEGMT DS    AL4
TXIFRMSG DS    AL4
TXIFONLY DS    AL4
         ORG   TXINPARM+12
TRMOPARM DS    CL16
DUPRMBLK DS    CL16
         ORG   DUPRMBLK
DPUTPARM DS    AL4
         ORG   DPUTPARM
@NM00009 DS    BL1
DPUTDATA EQU   DPUTPARM+0
@NM00010 EQU   DPUTPARM+0
         DS    CL1
DPUTTPUT DS    AL1
         ORG   DUPRMBLK+4
DPUTAOUT DS    AL4
DGETPARM DS    AL4
         ORG   DGETPARM
@NM00011 DS    BL1
DGETTERM EQU   DGETPARM+0
         ORG   DUPRMBLK+12
DGETADIN DS    AL4
         ORG   DUPRMBLK+16
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
IKJEFT45 CSECT
         DS    0F
@SIZDATD DC    AL1(1)
         DC    AL3(@ENDDATD-@DATD)
@CA00202 DC    A(NOIFRMSG)
@CA00203 DC    A(PRMPTMSG)
@CA00204 DC    A(PAUSMSG)
@CV00222 DC    V(IKJEFT52)
@CV00224 DC    V(IKJEFT53)
@CV00230 DC    V(IKJEFT55)
@CV00233 DC    V(IKJEFT56)
@CV00253 DC    V(IKJEFT54)
         DS    0D
BYPASS   DC    X'24'
RESTORE  DC    X'14'
         DS    CL2
PATCH    DC    20F'0'
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
NEXTLEV  EQU   @09
ERCODE   EQU   @05
RETURNCD EQU   @05
GETCODE  EQU   @08
T2       EQU   @10
T1       EQU   @08
PGPBPTR  EQU   @06
ECTPTR   EQU   @07
R1       EQU   @01
R15      EQU   @15
R0       EQU   @00
         EXTRN NOIFRMSG
         EXTRN PRMPTMSG
         EXTRN PAUSMSG
XPRMLIST EQU   0
XUPTPTR  EQU   XPRMLIST
XECTPTR  EQU   XPRMLIST+4
XPGPBPTR EQU   XPRMLIST+12
UPT      EQU   0
UPTSWS   EQU   UPT+12
UPTNPRM  EQU   UPTSWS
UPTPAUS  EQU   UPTSWS
ECT      EQU   0
ECTIOWA  EQU   ECT+4
ECTMSGF  EQU   ECT+8
ECTSMSG  EQU   ECT+9
ECTSWS   EQU   ECT+28
PGPB     EQU   0
PTGPCNTL EQU   PGPB
PTGPMLEV EQU   PTGPCNTL
PTGPPRMT EQU   PTGPCNTL
PTGPMODE EQU   PTGPCNTL+1
PTGPBYPS EQU   PTGPCNTL+1
PTGPATTN EQU   PTGPCNTL+1
@NM00006 EQU   PGPB+2
PTGPTPUT EQU   @NM00006
PTGPAOUT EQU   PGPB+4
PTGGCNTL EQU   PGPB+8
PTGGTERM EQU   PTGGCNTL
PTGGADIN EQU   PGPB+12
IOSRL    EQU   0
IOSTELM  EQU   IOSRL
IOSBELM  EQU   IOSRL+4
INSTACK  EQU   0
INSCODE  EQU   INSTACK
INSTERM  EQU   INSCODE
INSINDD  EQU   INSCODE
INSOTDD  EQU   INSCODE
INSPROM  EQU   INSCODE
INSPROC  EQU   INSCODE
INSLIST  EQU   INSCODE
PTGTPARM EQU   0
INBUF    EQU   0
INBUFLL  EQU   INBUF
INBUFTXT EQU   INBUF+4
CHAIN    EQU   0
CHAINPTR EQU   CHAIN+1
ALABEL   EQU   0
UPTX     EQU   0
ECTX     EQU   0
ECB      EQU   0
PGPBX    EQU   0
FRESWICH EQU   FORMONLY
DUPPRMLS EQU   TRMOPARM
ADPRMBLK EQU   DUPPRMLS+12
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
@NM00008 EQU   DUPPRMLS
ECBCOMPC EQU   ECB
ECBCBIT  EQU   ECB
ECBWBIT  EQU   ECB
CHAINTXT EQU   CHAIN+8
CHAINOO  EQU   CHAIN+6
CHAINLL  EQU   CHAIN+4
@NM00012 EQU   CHAIN
INBUFOO  EQU   INBUF+2
INSADLSD EQU   INSTACK+1
INSRSVD  EQU   INSCODE
INSSTOR  EQU   INSCODE
IOSUNUSD EQU   IOSRL+12
IOSNELM  EQU   IOSRL+10
IOSTLEN  EQU   IOSRL+8
PTGGTGET EQU   PGPB+10
PTGGBRSV EQU   PTGGCNTL
PTGGPHYS EQU   PTGGCNTL
PTGGGET  EQU   PTGGCNTL
PTGGBIT0 EQU   PTGGCNTL
@NM00007 EQU   @NM00006+1
PTGPUNUS EQU   PTGPCNTL+1
PTGPFORM EQU   PTGPCNTL+1
PTGPDMND EQU   PTGPCNTL+1
PTGPIFOR EQU   PTGPCNTL
PTGPMLIN EQU   PTGPCNTL
PTGPSNGL EQU   PTGPCNTL
PTGPDTMS EQU   PTGPCNTL
PTGPPUT  EQU   PTGPCNTL
PTGPBT0  EQU   PTGPCNTL
ECTBKPB  EQU   ECT+36
ECTUSER  EQU   ECT+32
ECTDDNUM EQU   ECT+29
@NM00005 EQU   ECTSWS
ECTBKGRD EQU   ECTSWS
ECTNNOT  EQU   ECTSWS
ECTNMAL  EQU   ECTSWS
ECTLOGF  EQU   ECTSWS
ECTATRM  EQU   ECTSWS
@NM00004 EQU   ECTSWS
ECTNOPD  EQU   ECTSWS
ECTSCMD  EQU   ECT+20
ECTPCMD  EQU   ECT+12
ECTRTCD  EQU   ECT+1
ECTRCDF  EQU   ECT
UPTPREFL EQU   UPT+23
UPTPREFX EQU   UPT+16
@NM00003 EQU   UPT+15
UPTLDEL  EQU   UPT+14
UPTCDEL  EQU   UPT+13
UPTWTP   EQU   UPTSWS
UPTMODE  EQU   UPTSWS
UPTALD   EQU   UPTSWS
UPTNCOM  EQU   UPTSWS
UPTMID   EQU   UPTSWS
@NM00002 EQU   UPTSWS
UPTUSER  EQU   UPT+2
@NM00001 EQU   UPT
XECBPTR  EQU   XPRMLIST+8
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RT00054 EQU   GETINPUT
@RF00054 EQU   FORMAT
@RT00064 EQU   TRMOUTER
@RF00069 EQU   CKLIST
@RT00074 EQU   UNCHAIN
@RT00090 EQU   GETINPER
@RT00099 EQU   TRMOUTER
@RF00092 EQU   NORMEND
@RT00111 EQU   TRMOUTER
@RT00117 EQU   GETINPER
@RT00129 EQU   TRMOUTER
@RF00159 EQU   NORMEND
@RF00146 EQU   INVLPARM
@RT00184 EQU   INVLPARM
@RC00214 EQU   EXIT
@RT00244 EQU   ATTNER
@RT00257 EQU   INVLPARM
@RF00257 EQU   GETMNER
@ENDDATA EQU   *
         END   IKJEFT45
