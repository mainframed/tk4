         TITLE 'IKJEFT05 -- TMP STAE EXIT ROUTINE                      *
                        '
IKJEFT05 CSECT ,                                                01S0001
@MAINENT DS    0H                                               01S0001
         USING *,@15                                            01S0001
         B     @PROLOG                                          01S0001
         DC    AL1(16)                                          01S0001
         DC    C'IKJEFT05  78.177'                              01S0001
         DROP  @15
@PROLOG  DS    0H                                               01S0002
         USING   IKJEFT05,R15
*                                                               01S0105
*        /************************************************************/
*        /*   CHECK THE CODE IN REGISTER 0.  IF IT IS 12, NO SYSTEM  */
*        /*   SAVE AREA (POINTER IN REGISTER 13) HAS BEEN PROVIDED   */
*        /*   BY THE STAE PROCESSOR.  A SIMULATED SYSTEM SAVE AREA   */
*        /*   IS SUPPLIED AND REGISTER 13 SET AS POINTER             */
*        /************************************************************/
*                                                               01S0106
*        IF R0 = STAIWA             /* CHK IF STAI WA SUPPLIED       */
*          THEN DO;                 /* NO,                           */
         C     R0,@CF00033                                      01S0106
         BNE   @RF00106                                         01S0106
*            R0 = R2;               /* RESERVE ENTRY REG 2           */
         LR    R0,R2                                            01S0108
*            GEN(L    R2,8(R2));    /* PTR TO ENTRY SAVE AREA        */
         L    R2,8(R2)
*            GEN(STM   R14,R12,12(R2));  /* SAVE ENTRY REGS          */
         STM   R14,R12,12(R2)
*            R13 = R2;              /* SET ENTRY SAVE AREA PTR       */
         LR    R13,R2                                           01S0111
*            RESPECIFY (SAVARY) BASED(R13);                     01S0112
*            SR13BAK = R13;         /* INDICATE END OF SAVE CHAIN    */
         ST    R13,SR13BAK(,R13)                                01S0113
*            REG0 = STAIWA;         /* SET ENTRY NO-SDWA FLAG        */
         MVC   REG0(4,R13),@CF00033                             01S0114
*            WRKAPTR2 = R0;         /* SET PTR TO PROTECTED TMPWA    */
         LR    WRKAPTR2,R0                                      01S0115
*            R6 = R1;               /* RESERVE ABEND CODE FROM REG1  */
         LR    R6,R1                                            01S0116
*            END;                                               01S0117
*          ELSE DO;                 /* YES, STAI WORK AREA SUPPLIED  */
         B     @RC00106                                         01S0118
@RF00106 DS    0H                                               01S0119
*            GEN(STM  R14,R12,12(R13));  /* SAVE ENTRY REGS          */
         STM  R14,R12,12(R13)
*            R0 = R0&&R0;           /* SET NON NO-WORK-AREA FLAG     */
         XR    R0,R0                                            01S0120
*            WRKAPTR2 = SDWAPARM;   /* SET TMPWA PTR (8) VIA PARM    */
         L     WRKAPTR2,SDWAPARM(,SDWAPTR)                      01S0121
*            R6 = ABCODE;           /* RESERVE ABEND CODE            */
         L     R6,ABCODE(,PARMPTR)                              01S0122
*            RESPECIFY (SDWA) BASED(REG1);                      01S0123
*          END;                                                 01S0124
*                                                               01S0124
*        RESPECIFY (TMPWA2) BASED(TMPWA2P);                     01S0125
@RC00106 DS    0H                                               01S0126
*        WRKAPTR1 = WRKA1PTR;        /* SET PP WA PTR VIA SUP WA     */
         L     WRKAPTR1,WRKA1PTR(,WRKAPTR2)                     01S0126
*        RESPECIFY  (R11,R15) RESTRICTED;                       01S0127
*        GEN(USING IKJEFT05,R11);                               01S0128
         USING IKJEFT05,R11
*        R11 = R15;            /* SET CODE ADDRESSABILITY            */
         LR    R11,R15                                          01S0129
*        GEN(DROP    R15);                                      01S0130
*                                                               01S0130
         DROP    R15
*        RESPECIFY (PARMPTR) UNRESTRICTED;                      01S0131
*        /* ESTABLISH SAVE AREA ADDRESSABILITY                       */
*        SVT041A=SVT041A&&SVT041A;  /* CLEAR SAVE AREA               */
         L     @12,TMPWA2P(,WRKAPTR2)                           01S0132
         XC    SVT041A(72,@12),SVT041A(@12)                     01S0132
*        SAVT041(2) = R13;     /* SET CURRENT BACKCHAIN PTR          */
         ST    R13,SAVT041+4(,@12)                              01S0133
*        R15 = ADDR(SAVT041);  /* RESERVE CURRENT SAVE AREA PTR      */
         LA    R15,SAVT041(,@12)                                01S0134
*        SR13FOR = R15;        /* SET OLD FORWARD CHAIN PTR          */
         ST    R15,SR13FOR(,R13)                                01S0135
*        R13 = R15;            /* SET CURRENT SAVE AREA PTR          */
*                                                               01S0136
         LR    R13,R15                                          01S0136
*        ECTRTCD = SDWACMPC;   /* ABEND CODE FOR CLIST               */
         L     @10,ECTPTR(,WRKAPTR2)                            01S0137
         L     @07,REG1(,R13)                                   01S0137
         MVC   ECTRTCD(3,@10),SDWACMPC(@07)                     01S0137
*        ECTRCDF = ECTRCDF×HIORDR;  /* ABEND FLAG FOR CLIST          */
*                                                               01S0138
         OI    ECTRCDF(@10),X'80'                               01S0138
*        RESPECIFY (R10,R12) RESTRICTED;                        01S0139
*        RESPECIFY (ABMSGAR) BASED(R10);                        01S0140
*        R2 = GMLNG+MACSP5L;   /* SET LENGTH OF REQUEST              */
         LH    R2,MACSP5L                                       01S0141
         AL    R2,GMLNG                                         01S0141
*        GMLNG5 = R2;          /* RESERVE GETMAIN LENGTH             */
         L     @07,TMPWA2P(,WRKAPTR2)                           01S0142
         ST    R2,GMLNG5(,@07)                                  01S0142
*        DO; /*GETMAIN (RC) LV(R2) SP(SPNUM) RTCD(R15)*/        01S0143
*        RESPECIFY (GPR01F,GPR15F,GPR00F) RESTRICTED;           01S0144
*        GPR01F = 0; /* REG 1 MUST BE ZERO*/                    01S0145
         SLR   GPR01F,GPR01F                                    01S0145
*        GPR15F = 0; /* RC-TYPE GETMAIN */                      01S0146
         SLR   GPR15F,GPR15F                                    01S0146
*        GPR00F = R2; /* LENGTH REQUESTED*/                     01S0147
         LR    GPR00F,R2                                        01S0147
*        GPR15F = GPR15F×((SPNUM)*256); /* SP IN BYTE 2 */      01S0148
*        SVC(120); /*RC/RU-FORM OF GETMAIN*/                    01S0149
         SVC   120                                              01S0149
*        R15 = GPR15F; /* SET RETURN CODE */                    01S0150
*        RESPECIFY (GPR01F,GPR15F,GPR00F) UNRESTRICTED;         01S0151
*        END; /*GETMAIN (RC) LV(R2) SP(SPNUM) RTCD(R15)*/       01S0152
*        RESPECIFY (R15) RESTRICTED;                            01S0153
*                                                               01S0153
*        GMLOC5 = ZERO;        /* CLEAR AREA PTR AS FLAG             */
         SLR   @07,@07                                          01S0154
         L     @03,TMPWA2P(,WRKAPTR2)                           01S0154
         ST    @07,GMLOC5(,@03)                                 01S0154
*        IF R15 = ZERO         /* CHK FOR SUCCESSFUL GETMAIN         */
*          THEN                /* YES,                               */
         CR    R15,@07                                          01S0155
         BNE   @RF00155                                         01S0155
*            DO;                                                01S0156
*              GEN(USING @DATD,R12);                            01S0157
         USING @DATD,R12
*              R12 = R1;       /* SET REENTRANT ADDRESSABILITY       */
         LR    R12,R1                                           01S0158
*              GMLOC5 = R1;    /* RESERVE LOCATION OF GETMAIN AREA   */
         L     @07,TMPWA2P(,WRKAPTR2)                           01S0159
         ST    R1,GMLOC5(,@07)                                  01S0159
*              GEN(USING T05WA,R12);                            01S0160
         USING T05WA,R12
*            END;                                               01S0161
*                                                               01S0161
*        R10 = ADDR(ABMSGSP);  /* SET PTR TO MESSAGE BUILD AREA      */
*                                                               01S0162
@RF00155 LA    R10,ABMSGSP(,WRKAPTR1)                           01S0162
*        IF SUBCODE > MAXCDE   /* CHK IF RESON CODE > FFF            */
*          THEN                /* YES,                               */
         L     @07,REG1(,R13)                                   01S0163
         CLC   SUBCODE(4,@07),@CF00072                          01S0163
         BNH   @RF00163                                         01S0163
*            SUBCDRS = ZERO;   /*   NOT SIGNIFICANT CODE             */
         SLR   @07,@07                                          01S0164
         ST    @07,SUBCDRS(,R10)                                01S0164
*          ELSE                /* NOT GREATER, IS POSSIBLE CODE      */
*            SUBCDRS=SUBCODE;  /* ERROR SUBCODE INTO WORK AREA       */
*                                                               01S0165
         B     @RC00163                                         01S0165
@RF00163 L     @07,REG1(,R13)                                   01S0165
         L     @07,SUBCODE(,@07)                                01S0165
         ST    @07,SUBCDRS(,R10)                                01S0165
*        ABNDCD = R6;          /* REGISTER 6 TO ABEND CODE           */
@RC00163 ST    R6,ABNDCD(,R10)                                  01S0166
*        RESPECIFY (R7) RESTRICTED;                             01S0167
*        GEN(SLL    R6,4);     /* DROP HIGH ORDER                    */
         SLL    R6,4
*        GEN(SRDL   R6,16);    /* SET SYSTEM ABEND CODE IN REG 6     */
         SRDL   R6,16
*        GEN(SRL    R7,20);    /* SET USER ABEND CODE IN REG 7       */
         SRL    R7,20
*        NONSCUR = NO;         /* RESET SECURITY FAILURE FLAG        */
         NI    NONSCUR(WRKAPTR1),B'11111110'                    01S0171
*        IF (R6 = CD913        /* CHK FOR OPEN FAILURE CODE          */
*           &(SUBCODE = CD38   /*   WITH REASON CODE 38              */
*            ×SUBCODE = CD3C   /*   OR REASON CODE 3C                */
*            ×SUBCODE = CD40)) /*   OR REASON CODE 40                */
*          ×(R6 = CD937        /* CHK FOR EOV FAILURE CODE           */
*           &(SUBCODE = CD28   /*   WITH REASON CODE 28              */
*            ×SUBCODE = CD2C   /*   OR REASON CODE 2C                */
*            ×SUBCODE = CD30   /*   OR REASON CODE 30                */
*            ×SUBCODE = CD34   /*   OR REASON CODE 34                */
*            ×SUBCODE = CD38   /*   OR REASON CODE 38                */
*            ×SUBCODE = CD3C)) /*   OR REASON CODE 3C                */
*          THEN                /* YES, IS SECURITY FAILURE           */
         C     R6,@CF00056                                      01S0172
         BNE   @GL00001                                         01S0172
         L     @03,REG1(,R13)                                   01S0172
         L     @03,SUBCODE(,@03)                                01S0172
         C     @03,@CF00050                                     01S0172
         BE    @RT00172                                         01S0172
         C     @03,@CF00052                                     01S0172
         BE    @RT00172                                         01S0172
         C     @03,@CF00054                                     01S0172
         BE    @RT00172                                         01S0172
@GL00001 C     R6,@CF00058                                      01S0172
         BNE   @RF00172                                         01S0172
         L     @03,REG1(,R13)                                   01S0172
         L     @03,SUBCODE(,@03)                                01S0172
         C     @03,@CF00042                                     01S0172
         BE    @RT00172                                         01S0172
         C     @03,@CF00044                                     01S0172
         BE    @RT00172                                         01S0172
         C     @03,@CF00046                                     01S0172
         BE    @RT00172                                         01S0172
         C     @03,@CF00048                                     01S0172
         BE    @RT00172                                         01S0172
         C     @03,@CF00050                                     01S0172
         BE    @RT00172                                         01S0172
         C     @03,@CF00052                                     01S0172
         BNE   @RF00172                                         01S0172
@RT00172 DS    0H                                               01S0173
*            NONSCUR = YES;    /*   SET SECURITY FAILURE FLAG        */
*                                                               01S0173
         OI    NONSCUR(WRKAPTR1),B'00000001'                    01S0173
*        IF R7 = ZERO          /* CHK IF ANY USER CODE               */
*          THEN DO;            /* NO,                                */
@RF00172 LTR   R7,R7                                            01S0174
         BNZ   @RF00174                                         01S0174
*            HOLCHAR = SCHAR;  /* RESERVE SYSTEM FLAG                */
         MVI   HOLCHAR(R10),C'2'                                01S0176
*            UNPK  (CODEAR,SYSCDAR);   /* PREPARE TO TRANSLATE       */
         UNPK  CODEAR(6,R10),SYSCDAR(3,R10)                     01S0177
*            EBCDPTR = ADDR(XLATAB)-D240;  /* FOR TRANSLATION        */
         LA    @03,XLATAB                                       01S0178
         SL    @03,@CF00068                                     01S0178
         ST    @03,EBCDPTR(,WRKAPTR1)                           01S0178
*            TR  (VALAR,EBCDTAB);    /* SET PRINTABLE CHARS          */
         TR    VALAR(3,R10),EBCDTAB(@03)                        01S0179
*            VALAR6(4) = CBLNK;      /* SET TERMINAL BLANK           */
         MVI   VALAR6+3(R10),C' '                               01S0180
*            UNPK (SUBCAR,SUBCDBI);  /* PREPARE TO TRANSLATE         */
         UNPK  SUBCAR(6,R10),SUBCDBI(3,R10)                     01S0181
*            EBCDPTR=ADDR(XLATAB)-D240;  /* PTR TO START OF TABLE    */
         ST    @03,EBCDPTR(,WRKAPTR1)                           01S0182
*            TR  (SUBCTXT,EBCDTAB);  /* GET PRINTABLE CHARACTERS     */
         TR    SUBCTXT(3,R10),EBCDTAB(@03)                      01S0183
*            SUBCLEN = RCDELEN;      /* LEN OF REASON CODE SEGMENT   */
         MVC   SUBCLEN(2,R10),@CH00091                          01S0184
*            SUBCOFF = RCDEOFF;      /* OFFSET FOR REASON SEGMENT    */
         MVC   SUBCOFF(2,R10),@CH00093                          01S0185
*          END;                                                 01S0186
*          ELSE DO;            /* IS USER CODE                       */
         B     @RC00174                                         01S0187
@RF00174 DS    0H                                               01S0188
*            HOLCHAR = UCHAR;  /* RESERVE USER FLAG                  */
         MVI   HOLCHAR(R10),C'U'                                01S0188
*            CVD   (USRCDBI,CVDAR);   /* OBTAIN DECIMAL VALUE        */
         LH    @03,USRCDBI(,R10)                                01S0189
         CVD   @03,CVDAR(,R10)                                  01S0189
*            UNPK  (VALAR6,USRCDEC);  /* PREBARE TO PRINT            */
         UNPK  VALAR6(6,R10),USRCDEC(4,R10)                     01S0190
*          END;                                                 01S0191
*                                                               01S0191
*        IF R15 ^= ZERO        /* CHK FOR GETMAIN FAILURE            */
*            × REG0 = STAIWA   /*   OR NO STAE WORK AREA             */
*            ×  (R6 = ZERO     /* NO SYS ABEND CODE                  */
*               & R7 = ZERO)   /*   & NO USER ABEND CODE             */
*          THEN DO;            /* YES,                               */
@RC00174 SLR   @03,@03                                          01S0192
         CR    R15,@03                                          01S0192
         BNE   @RT00192                                         01S0192
         CLC   REG0(4,R13),@CF00033                             01S0192
         BE    @RT00192                                         01S0192
         CR    R6,@03                                           01S0192
         BNE   @RF00192                                         01S0192
         CR    R7,@03                                           01S0192
         BNE   @RF00192                                         01S0192
@RT00192 DS    0H                                               01S0193
*            RESPECIFY  (R15) UNRSTD;                           01S0194
*            TYPAR = HOLCHAR;  /* INDICATE TYPE OF ABEND             */
         MVC   TYPAR(1,R10),HOLCHAR(R10)                        01S0195
*            MSGTXT = M603BAS; /* INSERT MESSAGE TEXT                */
         L     @15,@CA03001                                     01S0196
         MVC   MSGTXT(16,R10),M603BAS-MSG56603(@15)             01S0196
*            IF BKGMODE=BKGDNOW  /* CHK FOR BACKGROUND TASK          */
*              THEN DO;        /* YES,                               */
         TM    BKGMODE(WRKAPTR2),B'10000000'                    01S0197
         BNO   @RF00197                                         01S0197
*                ABMLEN = LENGTH(MSGBASE);  /* LENGTH OF MESSAGE     */
         MVC   ABMLEN(2,R10),@CH01820                           01S0199
*                ABMOFF = ZERO;  /* MESSAGE OFFSET                   */
         SLR   @15,@15                                          01S0200
         STH   @15,ABMOFF(,R10)                                 01S0200
*                RESPECIFY (R1,R2,R3,R15) RSTD;                 01S0201
*                R3 = ADDR(NUMSEG);  /* PTR TO SEGMENT LIST          */
         LA    R3,NUMSEG(,WRKAPTR1)                             01S0202
*                NUMSEG = SEGMT1;    /* SINGLE SEGMENT               */
         MVC   NUMSEG(4,WRKAPTR1),@CF00037                      01S0203
*                MSGSEG(1) = ADDR(ABMSGAR);  /* PTR TO MESSAGE       */
         ST    R10,MSGSEG(,WRKAPTR1)                            01S0204
*                R2 = ADDR(PTPBSP);  /* PTR TO PUTLINE PARM BLOCK    */
         LA    R2,PTPBSP(,WRKAPTR1)                             01S0205
*                R1 = ADDR(IOPL);  /* PTR TO SERVICE RTN PARM LIST   */
         L     R1,IOPLPTR(,WRKAPTR1)                            01S0206
*                R15 = ADDR(TPUTLS); /* PTR TO PUTLINE ROUTINE       */
         LA    R15,TPUTLS                                       01S0207
*                GEN FLOWS(TPUTLS) (SYNCH  (15));  /* TO PUTLINE     */
         SYNCH  (15)
*              END;                                             01S0209
*              ELSE DO;        /* NO, IS FOREGROUND TASK             */
         B     @RC00197                                         01S0210
@RF00197 DS    0H                                               01S0211
*                R3=LENGTH(TRUMSG);  /* SET LENGTH OF MESSAGE        */
         LA    R3,21                                            01S0211
*                R2 = ADDR(TRUMSG);  /* PTR TO MESSAGE TEXT          */
         LA    R2,TRUMSG(,R10)                                  01S0212
*                GEN(TPUT (2),(3));  /* ISSUE MESSAGE                */
         TPUT (2),(3)
*              END;                                             01S0214
*            GO TO ABENDRTN;   /* TERMINATION EXIT                   */
         B     ABENDRTN                                         01S0215
*          END;                                                 01S0216
*          RESPECIFY (R1,R2,R3,R15) UNRSTD;                     01S0217
*                                                               01S0217
@RF00192 DS    0H                                               01S0218
*        IF CALLNOW = YES      /* CHK IF CALL FUNCTION ACTIVE        */
*          THEN DO;            /* YES,                               */
         TM    CALLNOW(WRKAPTR1),B'00001000'                    01S0218
         BNO   @RF00218                                         01S0218
*            CALL  CONVTCC;    /*   ISSUE ERROR MESSAGE              */
         BAL   @14,CONVTCC                                      01S0220
*CONVTCR:                      /* FOR PSEUDO-RETURN                  */
*            IF BKGMODE = BKGDNOW  /* CHK IF IN BACKGROUND MODE      */
*              THEN DO;        /* YES,                               */
CONVTCR  TM    BKGMODE(WRKAPTR2),B'10000000'                    01S0221
         BNO   @RF00221                                         01S0221
*                ECTLOGF=YES;  /*   SET TERMINATE FLAGS IN ECT       */
         L     @01,ECTPTR(,WRKAPTR2)                            01S0223
         OI    ECTLOGF(@01),B'00010000'                         01S0223
*                DODONE = YES; /*   AND IN TMP FLOW CONTROL          */
         OI    DODONE(WRKAPTR1),B'00001000'                     01S0224
*              END;                                             01S0225
*              ELSE DO;        /* IS NOT BACKGROUND MODE,            */
         B     @RC00221                                         01S0226
@RF00221 DS    0H                                               01S0227
*                FLOFLGS=ZERO; /* CLEAR FLOW CONTROL FLAGS           */
         SLR   @15,@15                                          01S0227
         ST    @15,FLOFLGS(,WRKAPTR1)                           01S0227
*                DOGETC = YES; /*   SET TO CONTINUE PROCESSING       */
         OI    DOGETC(WRKAPTR1),B'00010000'                     01S0228
*              END;                                             01S0229
*            GO TO RETRYRTN;   /* GO TO EXIT                         */
         B     RETRYRTN                                         01S0230
*          END;                                                 01S0231
*                                                               01S0232
*        /************************************************************/
*COREIN: /* GET POINTER TO THE STAE EXIT PARAMETER LIST              */
*        /************************************************************/
*                                                               01S0232
*        I=ONE;                /* INITIALIZE INDEX TO 1              */
*                                                               01S0232
@RF00218 DS    0H                                               01S0232
COREIN   MVC   I(2),@CH00037                                    01S0232
*        /************************************************************/
*        /* THE USER ABEND CODE IS IN REGISTER 7.  THE SYSTEM ABEND  */
*        /* CODE OR SVC CODE IS IN REGISTER 6                        */
*        /************************************************************/
*        IF R7 ^= ZERO         /* IS IT NOT A USER ABEND CODE        */
*          THEN                /* IT IS A USER CODE                  */
         LTR   R7,R7                                            01S0233
         BZ    @RF00233                                         01S0233
*            DO;                                                01S0234
*              RESPECIFY (R3) RESTRICTED;  /* BRANCH INDEX REGISTER  */
*                                                               01S0235
*              /******************************************************/
*USELOOP:      /* SEARCH THE USER ABEND CODE TABLE FOR THE CODE.     */
*              /******************************************************/
*              IF R7=USECODE(I)/* IS THE CODE IN THE USER TABLE?     */
*                THEN          /* YES, IT IS IN THE TABLE            */
USELOOP  LH    @15,I                                            01S0236
         SLA   @15,2                                            01S0236
         CH    R7,USECODE-4(@15)                                01S0236
         BNE   @RF00236                                         01S0236
*                  DO;                                          01S0237
*                    R3=USEACT(I);  /*INITIALIZE BRANCH REGISTER     */
         LH    R3,USEACT-4(@15)                                 01S0238
*                    GO TO BRNCHTAB;  /* GO TO BRANCH TABLE          */
         B     BRNCHTAB                                         01S0239
*                  END;                                         01S0240
*              IF USECODE(I)=ZERO   /* IS THIS THE END IF TABLE      */
*                THEN          /* YES,SO CODE IS NOT IN TABLE        */
@RF00236 LH    @15,I                                            01S0241
         LR    @02,@15                                          01S0241
         SLA   @02,2                                            01S0241
         LH    @02,USECODE-4(@02)                               01S0241
         LTR   @02,@02                                          01S0241
         BZ    @RT00241                                         01S0241
*                  GO TO NORETRY;  /* ERROR IS UNRECOVERABLE         */
*              I=I+ONE;        /* UPDATE INDEX FOR NEXT ELEMENT      */
         LA    @15,1(,@15)                                      01S0243
         STH   @15,I                                            01S0243
*              GO TO USELOOP;  /* CONTINUE SEARCHING THE TABLE       */
         B     USELOOP                                          01S0244
*            END;              /* END USER TABLE SEARCH              */
*        /************************************************************/
*        /* IS THE CODE A PROGRAM CHECK ABEND CODE?                  */
*        /************************************************************/
*        IF R6>='C1'X          /* ABEND CODE A PROGRAM CHECK?        */
*         & R6<='CF'X                                           01S0246
*           THEN               /* YES,SEARCH PROGRAM CHECK TABLE     */
@RF00233 C     R6,@CF03078                                      01S0246
         BL    @RF00246                                         01S0246
         C     R6,@CF03079                                      01S0246
         BH    @RF00246                                         01S0246
*             DO;                                               01S0247
*               /*****************************************************/
*PROGLOOP:      /* SEARCH THE PROGRAM CHECK CODE ABEND TABLE.        */
*               /*****************************************************/
*               IF R6=PROGCODE(I)  /* IS THE CODE IN THE TABLE?      */
*                 THEN         /* YES, IT IS                         */
PROGLOOP LH    @15,I                                            01S0248
         SLA   @15,2                                            01S0248
         CH    R6,PROGCODE-4(@15)                               01S0248
         BNE   @RF00248                                         01S0248
*                   DO;                                         01S0249
*                     R3=PROGACT(I);  /* GET BRANCH INDEX            */
         LH    R3,PROGACT-4(@15)                                01S0250
*                     GO TO BRNCHTAB; /* GO TO BRANCH TABLE          */
         B     BRNCHTAB                                         01S0251
*                   END;                                        01S0252
*               IF PROGCODE(I)=ZERO  /* IS THIS THE END OF TABLE?    */
*                 THEN         /* YES, IT IS                         */
@RF00248 LH    @15,I                                            01S0253
         LR    @02,@15                                          01S0253
         SLA   @02,2                                            01S0253
         LH    @02,PROGCODE-4(@02)                              01S0253
         LTR   @02,@02                                          01S0253
         BZ    @RT00253                                         01S0253
*                   GO TO NORETRY;  /* CONTINUE THE ABEND            */
*               I=I+ONE;       /* UPDATE INDEX TO NEXT ELEMENT       */
         LA    @15,1(,@15)                                      01S0255
         STH   @15,I                                            01S0255
*               GO TO PROGLOOP;  /* CONTINUE SEARCHING TABLE         */
         B     PROGLOOP                                         01S0256
*             END;             /* END PROGRAM CHECK LOOP             */
*                                                               01S0257
*                                                               01S0257
*                                                               01S0257
*        /************************************************************/
*SVCLOOP:/* SEARCH THE SVC CODE TABLE FOR THE ABEND CODE             */
*        /************************************************************/
*        IF R6=SVCCODE(I)      /* IS THE SVC ABEND CODE IN TABLE     */
*           THEN               /* YES IT IS                          */
@RF00246 DS    0H                                               01S0258
SVCLOOP  LH    @15,I                                            01S0258
         SLA   @15,2                                            01S0258
         CH    R6,SVCCODE-4(@15)                                01S0258
         BNE   @RF00258                                         01S0258
*             DO;                                               01S0259
*               R3=SVCACT(I);  /* GET THE BRANCH INDEX               */
         LH    R3,SVCACT-4(@15)                                 01S0260
*               GO TO BRNCHTAB;  /* GO TO THE BRANCH TABLE           */
         B     BRNCHTAB                                         01S0261
*             END;                                              01S0262
*        IF SVCCODE(I)=ZERO    /* IS THIS THE END OF TABLE?          */
*          THEN                /* YES, IT IS                         */
@RF00258 LH    @15,I                                            01S0263
         LR    @02,@15                                          01S0263
         SLA   @02,2                                            01S0263
         LH    @02,SVCCODE-4(@02)                               01S0263
         LTR   @02,@02                                          01S0263
         BZ    @RT00263                                         01S0263
*            GO TO NORETRY;    /* CONTINUE THE ABEND                 */
*        I=I+ONE;              /* UPDATE INDEX TO NEXT ELEMENT       */
         LA    @15,1(,@15)                                      01S0265
         STH   @15,I                                            01S0265
*        GO TO SVCLOOP;        /* CONTINUE SEARCHING THE TABLE       */
         B     SVCLOOP                                          01S0266
*/* BRANCH TO PROCESSING INDICATED BY ERROR CODE                     */
*BRNCHTAB: ;                                                    01S0267
BRNCHTAB DS    0H                                               01S0268
*        /************************************************************/
*        /* THIS TABLE IS USED TO BRANCH TO THE APPROPRIATE ROUTINE. */
*        /* REGISTER 3 MAY CONTAIN 4,8 OR 12 AS A BRANCH INDEX.      */
*        /************************************************************/
*        RESPECIFY (R7) UNRSTD;                                 01S0268
*        GENERATE;                                              01S0269
*                                                               01S0269
*                                                               01S0269
        B     BRNCHTAB(R3)          GET TO APPROPRIATE PROCEDURE
        B     INITPROC              4  - RE-INITIALIZE USER CORE
        B     RECOVER               8  - RE-INITIALIZE TMP
        B     CMDNFND               12 - NO-COMMAND-FOUND TO LOAD
*       B     NORETRY               16 - NO RECOVERY ATTEMPTED
*        /************************************************************/
*NORETRY:/* INDICATE NO RECOVERY ATTEMPT BY ISSUING A MESSAGE        */
*        /* TO THE TERMINAL USER                                     */
*        /************************************************************/
*                                                               01S0270
*                                                               01S0270
*        IF BKGMODE = YES      /* CHK IF IN BACKGROUND MODE          */
*          THEN                /* YES,                               */
NORETRY  TM    BKGMODE(WRKAPTR2),B'10000000'                    01S0270
         BNO   @RF00270                                         01S0270
*            DO;                                                01S0271
*              RESPECIFY (R1,R2,R3,R15) RSTD;                   01S0272
*              R1 = ADDR(IOPL);   /* PTR TO SERVICE RTN PL           */
         L     R1,IOPLPTR(,WRKAPTR1)                            01S0273
*              R2 = PTPBPTR;   /* PTR TO SERVICE RTN PARM BLOCK      */
         L     R2,PTPBPTR(,WRKAPTR1)                            01S0274
*              R3 = ADDR(MSG56600);  /* PTR TO MESSAGE TEXT          */
         L     R3,@CA02998                                      01S0275
*              R15 = ADDR(TPUTLS); /* PTR TO PUTLINE ROUTINE         */
         LA    R15,TPUTLS                                       01S0276
*              GEN FLOWS(TPUTLS) (SYNCH  (15));  /* TO PUTLINE       */
         SYNCH  (15)
*            END;                                               01S0278
*          ELSE                /* NOT IN BACKGROUND MODE             */
*            DO;                                                01S0279
         B     @RC00270                                         01S0279
@RF00270 DS    0H                                               01S0280
*              R1=ADDR(MSG56600);  /* NON-RECOVERY MESSAGE POINTER   */
         L     R1,@CA02998                                      01S0280
*              R0=MSGLEN-D4;       /* GET LENGTH OF THE MESSAGE      */
         LA    @07,4                                            01S0281
         LH    R0,MSGLEN(,R1)                                   01S0281
         SLR   R0,@07                                           01S0281
*              R1=R1+D4;           /* POINT TO MESSAGE TEXT          */
         ALR   R1,@07                                           01S0282
*              GEN(TPUT  (1),(0));  /* ISSUE MESSAGE VIA TPUT MACRO  */
         TPUT  (1),(0)
*              RESPECIFY (R1,R2,R3,R15) UNRSTD;                 01S0284
*            END;                                               01S0285
*        GEN(TCLEARQ INPUT);   /* CLEAR INPUT BUFFERS                */
@RC00270 DS    0H                                               01S0286
         TCLEARQ INPUT
*                                                               01S0287
*        /************************************************************/
*ABENDRTN:/* INDICATE TO ABEND ROUTINE THAT ABEND IS TO CONTINUE     */
*        /************************************************************/
*                                                               01S0287
*        IF BKGMODE = YES      /* CHK IF IN BACKGROUND MODE          */
*          THEN                /* YES,                               */
ABENDRTN TM    BKGMODE(WRKAPTR2),B'10000000'                    01S0287
         BNO   @RF00287                                         01S0287
*            DO;                                                01S0288
*              /* STACK TO CLOSE SYSIN/SYSPRINT                      */
*              R1 = ADDR(IOPL);     /* SET PTR TO STACK PL           */
         L     @15,IOPLPTR(,WRKAPTR1)                           01S0289
         LR    R1,@15                                           01S0289
*              IOPLIOPB = STPBPTR;  /* PTR TO STACK PARM BLOCK       */
         L     @07,STPBPTR(,WRKAPTR1)                           01S0290
         ST    @07,IOPLIOPB(,@15)                               01S0290
*              R15 = ADDR(TSTAKDS); /* PTR TO STACK ROUTINE          */
         LA    R15,TSTAKDS                                      01S0291
*              GEN FLOWS(TSTAKDS)  (SYNCH  (15));  /* TO STACK       */
         SYNCH  (15)
*            END;                                               01S0293
*        RESPECIFY (R14,R15) RSTD;                              01S0294
@RF00287 DS    0H                                               01S0295
*        R14 = REG0;           /* GET ENTRY REG 0                    */
         L     R14,REG0(,R13)                                   01S0295
*        R15 = ZERO;           /* SET TO INDICATE NO RETRY           */
         SLR   R15,R15                                          01S0296
*        REG15 = R15;          /* INDICATE ERROR IS UNRECOVERABLE    */
*                                                               01S0297
         ST    R15,REG15(,R13)                                  01S0297
*TRETURN:   /* RESTORE ENTRY ENVIRONMENT                             */
*                                                               01S0298
*        R13 = SAVRBAK;        /* RESTORE ENTRY SAVE AREA PTR        */
TRETURN  L     R13,SAVRBAK(,R13)                                01S0298
*        RESPECIFY (SAVARY) BASED(R13);                         01S0299
*        IF R14 = STAIWA       /* CHK IF SDWA SUPPLIED               */
*          THEN DO;            /* NO, SDWA NOT SUPPLIED              */
         C     R14,@CF00033                                     01S0300
         BNE   @RF00300                                         01S0300
*            GEN(LM   R14,R12,12(R13));  /* RESTORE ENTRY REGISTERS  */
         LM   R14,R12,12(R13)
*            RETURN;           /* RETURN TO ABEND ROUTINE            */
@EL00001 DS    0H                                               01S0303
@EF00001 DS    0H                                               01S0303
@ER00001 BR    @14                                              01S0303
*          END;                                                 01S0304
*          ELSE DO;            /* YES, SDWA SUPPLIED                 */
@RF00300 DS    0H                                               01S0306
*            R1 = REG1;        /* GET ENTRY REGISTER 1               */
         L     R1,REG1(,R13)                                    01S0306
*            IF R15 = ZERO     /* CHECK FOR RETRY                    */
*              THEN DO;        /* NO RETRY                           */
         LTR   R15,R15                                          01S0307
         BNZ   @RF00307                                         01S0307
*                DO;  /*SETRP REGS(14,12)DUMP(NO)RECORD(NO)RC(0)*/
*                  RESPECIFY (GPR00P,GPR01P,GPR14P,GPR15P) RSTD;
*                  GPR01P->SDWARCDE = 0;  /*SAVE RC VALUE*/     01S0311
         MVI   SDWARCDE(GPR01P),X'00'                           01S0311
*                  GPR01P->SDWARCRD = '0'B;  /*TURN OFF RECORD INDICATO
**/                                                             01S0312
         NI    SDWARCRD(GPR01P),B'01111111'                     01S0312
*                  GPR01P->SDWAREQ = '0'B;  /*TURN OFF DUMP INDICATOR*/
         NI    SDWAREQ(GPR01P),B'01111111'                      01S0313
*                  GEN (RETURN (14,12));                        01S0314
         RETURN (14,12)
*                  RESPECIFY (GPR00P,GPR01P,GPR14P,GPR15P) UNRSTD;
*                END;                                           01S0316
*              END;                                             01S0317
*              ELSE DO;        /* YES, RETRY                         */
         B     @RC00307                                         01S0318
@RF00307 DS    0H                                               01S0319
*                DO;  /*SETRP REGS(14,12)DUMP(NO)RECORD(NO)RC(4)RETADDR
*RETRYEP)*/                                                     01S0319
*                  RESPECIFY (GPR00P,GPR01P,GPR14P,GPR15P) RSTD;
*                  GPR01P->SDWARCDE = 4; /*STORE RC INTO SDWA*/ 01S0321
         MVI   SDWARCDE(GPR01P),X'04'                           01S0321
*                  GPR01P->SDWARTYA = ADDR(RETRYEP);  /*SAVE RETRY ADDR
*SS*/                                                           01S0322
         L     @07,REG0(,R13)                                   01S0322
         ST    @07,SDWARTYA(,GPR01P)                            01S0322
*                  GPR01P->SDWARCRD = '0'B;  /*TURN OFF RECORD INDICATO
**/                                                             01S0323
         NI    SDWARCRD(GPR01P),B'01111111'                     01S0323
*                  GPR01P->SDWAREQ = '0'B;  /*TURN OFF DUMP INDICATOR*/
         NI    SDWAREQ(GPR01P),B'01111111'                      01S0324
*                  GEN (RETURN (14,12));                        01S0325
         RETURN (14,12)
*                  RESPECIFY (GPR00P,GPR01P,GPR14P,GPR15P) UNRSTD;
*                END;                                           01S0327
*              END;                                             01S0328
*          END;                                                 01S0329
@RC00307 DS    0H                                               01S0330
*          RESPECIFY  (SAVARY) BASED(SAVRBAK);                  01S0330
*          RESPECIFY (R14,R15) UNRSTD;                          01S0331
*                                                               01S0331
*                                                               01S0331
*        /************************************************************/
*CMDNFND:  /* INDICATE COMMAND NOT FOUND AND GO TO RETRY ROUTINE     */
*        /************************************************************/
*        ABND806=YES;          /* SET COMMAND-NOT-FOUND FLAG         */
CMDNFND  OI    ABND806(WRKAPTR1),B'00000100'                    01S0332
*        GOTO  RETRYRTN;       /* GO TO INDICATE RETRY ATTEMPT       */
         B     RETRYRTN                                         01S0333
*                                                               01S0334
*        /************************************************************/
*INITPROC:/* PREPARE TO INITIALIZE THE USERS CORE BY:                */
*        /************************************************************/
*        /* 1. DETERMINING WHETHER INITIALIZATION HAS OCCURRED       */
*        /*    FOR THIS SAME COMMAND IMMEDIATELY PRIOR TO THIS       */
*        /*    ATTEMPT. IF NOT, A BIT IS SET TO INDICATE THE         */
*        /*    FIRST TIME.  IF INITIALIZATION HAS OCCURRED FOR       */
*        /*    THIS COMMAND, THERE IS NO NEED TO ATTEMPT AGAIN       */
*        /*    SO THE ABEND CONTINUES.                               */
*        /* 2. INFORMING THE USER OF AN ATTEMPT TO                   */
*        /*    RE-INITIALIZE HIS CORE.                               */
*        /* 3. CALLING THE SUBROUTINE 'SNAPPIT' WHOSE PURPOSE        */
*        /*    IS TO DETERMINE IF A SYSUDUMP OR SYSABEND DD ENTRY    */
*        /*    IS IN THE TIOT. IF THERE IS, A SNAP DUMP IS           */
*        /*    TAKEN OF THE USER'S CORE.                             */
*        /* 4. CALLING THE SUBROUTINE 'DETACH' TO DETACH ALL         */
*        /*    SUBTASKS OF THIS TASK.                                */
*        /* 5. CALLING THE SUBROUTINE 'FREESUPB' WHICH FREES THE     */
*        /*    CORE USED BY THE USER                                 */
*        /* 6. ZERO-ING OUT THE TMP WORK AREA POINTER TO BE USED     */
*        /*    BY THE STAE RETRY ROUTINE TO DETERMINE WHETHER        */
*        /*    COMPLETE INITIALIZATION IS TO TAKE PLACE OR           */
*        /*    WHETHER A SIMPLE RECOVERY WILL BE ATTEMPTED.          */
*        /* 7. BRANCHING TO 'RETRYRTN' WHICH LOADS THE STAE RETRY    */
*        /*    ROUTINE AND INDICATE TO ABEND THAT A RETRY            */
*        /*    IS TO BE ATTEMPTED.                                   */
*        /************************************************************/
*                                                               01S0334
*        IF TMPRINIT='1'B      /* IF REINITIALIZATION WAS ATTEMPTED  */
*            × BKGMODE = YES   /*       OR IF IN BACKGROUND MODE     */
*          THEN                /* YES,                               */
INITPROC L     @07,TMPWA2P(,WRKAPTR2)                           01S0334
         TM    TMPRINIT(@07),B'10000000'                        01S0334
         BO    @RT00334                                         01S0334
         TM    BKGMODE(WRKAPTR2),B'10000000'                    01S0334
         BO    @RT00334                                         01S0334
*            GOTO NORETRY;     /* DONT REINITIALIZE AGAIN            */
*        TMPRINIT = YES;       /* ELSE, INDICATE FIRST TIME          */
*                                                               01S0336
         OI    TMPRINIT(@07),B'10000000'                        01S0336
*        R1=ADDR(MSG56601);    /* 'REINITIALIZATION' MESSAGE         */
         L     R1,@CA02999                                      01S0337
*        R0=MSGLEN-D4;         /* GET LENGTH OF MESSAGE TEXT         */
         LA    @07,4                                            01S0338
         LH    R0,MSGLEN(,R1)                                   01S0338
         SLR   R0,@07                                           01S0338
*        R1=R1+D4;             /* POINT TO MESSAGE TEXT              */
         ALR   R1,@07                                           01S0339
*        GEN(TPUT  (1),(0));   /* ISSUE MESSAGE VIA TPUT             */
         TPUT  (1),(0)
*        RESPECIFY (R15) RESTRICTED;                            01S0341
*        IF R15 ^= ZERO        /* WAS TPUT SUCCESSFUL?               */
*          THEN                /* TPUT WAS UNSUCCESSFUL              */
         LTR   R15,R15                                          01S0342
         BNZ   @RT00342                                         01S0342
*            GO TO ABENDRTN;   /* GO TO CONTINUE ABEND               */
*        RESPECIFY (R15) UNRESTRICTED;                          01S0344
*                                                               01S0344
*        CALL SNAPPIT;         /* GO TAKE SNAP DUMP IF SYSUDUMP 01S0345
*                                 OR SYSABEND DD ENTRY               */
         BAL   @14,SNAPPIT                                      01S0345
*        CALL DETACH;          /* GO DETACH SUBTASKS                 */
         BAL   @14,DETACH                                       01S0346
*        CALL FREESUBP;        /* GO TO FREE SUBPOOLS 1-127          */
         BAL   @14,FREESUBP                                     01S0347
*        DO; /*MODESET  KEYADDR(SPROK1) WORKREG(R2)*/           01S0348
*          R2 = SPROK1; /*GET KEY FORM SAVE LOCATION*/          01S0349
         L     R2,SPROK1                                        01S0349
*          SPKA (R2); /*SET PSW KEY*/                           01S0350
         SPKA  0(R2)                                            01S0350
*        END; /*MODESET  KEYADDR(SPROK1) WORKREG(R2)*/          01S0351
*        WRKA1PTR = ZERO;      /* ZERO OUT TMP WORKAREA POINTER      */
         SLR   @07,@07                                          01S0352
         ST    @07,WRKA1PTR(,WRKAPTR2)                          01S0352
*        DO; /*MODESET  KEYADDR(TEPKEY) WORKREG(R2)*/           01S0353
*          R2 = TEPKEY; /*GET KEY FORM SAVE LOCATION*/          01S0354
         L     R2,TEPKEY(,WRKAPTR2)                             01S0354
*          SPKA (R2); /*SET PSW KEY*/                           01S0355
         SPKA  0(R2)                                            01S0355
*        END; /*MODESET  KEYADDR(TEPKEY) WORKREG(R2)*/          01S0356
*        GO TO RETRYRTN;       /* GO TO INDICATE RETRY ATTEMPT       */
         B     RETRYRTN                                         01S0357
*RECOVER:/************************************************************/
*        /* THE PURPOSE OF THIS BLOCK OF CODE IS TO AID  IN THE      */
*        /* SIMPLE RECOVERY PROCESS BY:                              */
*        /* 1. DETERMINING WHETHER A SIMPLE RECOVERY HAS OCCURRED    */
*        /*    FOR THIS COMMAND IMMEDIATELY PRIOR TO THIS ATTEMPT.   */
*        /* 2. IF NOT, A BIT IS SET TO INDICATE THE FIRST ATTEMPT.   */
*        /* 3. ISSUING A MESSAGE TO THE USER TO INFORM HIM OF THE    */
*        /*    RECOVERY ATTEMPT.                                     */
*        /* 4. 'SNAPPIT' IS CALLED TO TAKE A SNAP DUMP IF A          */
*        /*    'SYSUDUMP' OR SYSABEND' DD ENTRY IS PRESENT           */
*        /* 5. 'RETRYRTN' IS CALLED TO LOAD THE RETRY ROUTINE AND    */
*        /*    INDICATE TO ABEND THAT A RETRY WILL BE ATTEMPTED.     */
*        /************************************************************/
*                                                               01S0358
*        IF TMPRTRY = YES      /* IF RECOVERY WAS ATTEMPTED          */
*            × BKGMODE = YES   /*       OR IF IN BACKGROUND MODE     */
*          THEN                /* RECOVERY WAS NOT ATTEMPTED?        */
RECOVER  L     @07,TMPWA2P(,WRKAPTR2)                           01S0358
         TM    TMPRTRY(@07),B'01000000'                         01S0358
         BO    @RT00358                                         01S0358
         TM    BKGMODE(WRKAPTR2),B'10000000'                    01S0358
         BO    @RT00358                                         01S0358
*            GOTO INITPROC;    /* GO TO INITIALIZATION PROCEDURE     */
*        TMPRTRY='1'B;         /* INDICATE RECOVERY ATTEMPT          */
*                                                               01S0360
         OI    TMPRTRY(@07),B'01000000'                         01S0360
*        R1=ADDR(MSG56602);    /*POINT TO START OF MESSAGE BUFFER    */
         L     R1,@CA03000                                      01S0361
*        R0=MSGLEN-D4;         /* GET LENGTH OF MESSAGE TEXT         */
         LA    @07,4                                            01S0362
         LH    R0,MSGLEN(,R1)                                   01S0362
         SLR   R0,@07                                           01S0362
*        R1=R1+D4;             /* POINT TO START OF MESSAGE TEXT     */
         ALR   R1,@07                                           01S0363
*        GENERATE(TPUT (1),(0));/* ISSUE MESSAGE VIA TPUT MACRO      */
         TPUT (1),(0)
*        RESPECIFY (R15) RESTRICTED;                            01S0365
*        IF R15 ^= ZERO        /* WAS TPUT SUCCESSFUL?               */
*          THEN                /* NO, IT WAS NOT                     */
         LTR   R15,R15                                          01S0366
         BNZ   @RT00366                                         01S0366
*            GO TO ABENDRTN;   /* GO TO ABEND ROUTINE                */
*        RESPECIFY (R15) UNRESTRICTED;                          01S0368
*                                                               01S0368
*        CALL SNAPPIT;         /* TAKE A SNAP DUMP                   */
         BAL   @14,SNAPPIT                                      01S0369
*        CALL DETACH;          /* GO DETACH SUBTASKS                 */
         BAL   @14,DETACH                                       01S0370
*        TPLCTCB = ZERO;       /* ZERO ATTACHED TCB PTR              */
         SLR   @07,@07                                          01S0371
         ST    @07,TPLCTCB(,WRKAPTR1)                           01S0371
*        TMPCECB = ZERO;       /* ZERO ATTACHED CP ECB               */
         ST    @07,TMPCECB(,WRKAPTR1)                           01S0372
*        TMPACTRL = '0'B;      /* ZERO ATTENTION CONTROL IND         */
*        TMPSCTRL = '0'B;      /* ZERO TMP STAI CONTROL IND          */
*                                                               01S0374
*                                                               01S0374
         NI    TMPACTRL(WRKAPTR1),B'11100111'                   01S0374
*RETRYRTN:/***********************************************************/
*        /* THE PURPOSE OF THIS BODY OF CODE IS TO LOAD THE TMP      */
*        /* STAE EXIT RETRY ROUTINE AND TO SET A RETURN CODE OF      */
*        /* 4 IN REGISTER 15 TO INDICATE TO THE ABEND ROUTINE        */
*        /* THAT A RETRY WILL BE ATTEMPTED.CONTROL IS THEN           */
*        /* RETURNED THE ABEND ROUTINE.                              */
*        /************************************************************/
*                                                               01S0375
*        RESPECIFY (R14,R15) RSTD;                              01S0375
RETRYRTN DS    0H                                               01S0376
*        R14 = REG0;           /* RESERVE SDWA INDICATOR             */
         L     @01,SAVRBAK(,R13)                                01S0376
         L     R14,REG0(,@01)                                   01S0376
*        GEN(LOAD  EP=IKJEFT07); /* LOAD STAE RETRY MODULE           */
         LOAD  EP=IKJEFT07
*        REG0=R0;              /* GET RETRY ROUTINE POINTER          */
         L     @07,SAVRBAK(,R13)                                01S0378
         ST    R0,REG0(,@07)                                    01S0378
*        R15 = D4;             /* SET RETRY INDICATOR                */
         LA    R15,4                                            01S0379
*        REG15 = R15;          /* RESERVE RETRY-ATTEMPT INDICATOR    */
         ST    R15,REG15(,@07)                                  01S0380
*        GO TO TRETURN;        /* RETURN TO CALLER TO RETRY          */
         B     TRETURN                                          01S0381
*FREESUBP:                                                      01S0382
*        /************************************************************/
*        /* THIS ROUTINE SEARCHES DOWN THE SPQE CHAIN AND FREES      */
*        /* ALL CORE THAT IS IN SUBPOOLS 1 TO 127.                   */
*        /************************************************************/
*                                                               01S0382
*        PROCEDURE                                              01S0382
*          OPTIONS (                                            01S0382
*          DONTSAVE,           /* DONT SAVE CALLER'S REGISTERS       */
*          NOSAVEAREA);        /* NO SAVE AREA IS REQUIRED           */
FREESUBP DS    0H                                               01S0383
*        RESPECIFY (R3) RESTRICTED;  /* RETURN ADDRESS               */
*        R3 = R14;             /* SAVE THE RETURN ADDRESS            */
*                                                               01S0384
         LR    R3,R14                                           01S0384
*        SPQESPTR = TCBMSS;    /* GET SPQE POINTER                   */
         L     @01,TCBPTR(,WRKAPTR2)                            01S0385
         L     @07,TCBMSS(,@01)                                 01S0385
         ST    @07,SPQESPTR                                     01S0385
*SPCHK:                                                         01S0386
*        IF SPQEID>MINSP       /* CHECK FOR MINUMUM SUBPOOL -- 1     */
*             & SPQEID<MAXSP   /* CHECK FOR MAXIMUM SUBPOOL -- 127   */
*          THEN                /* SUBPOOL ID IS BETWEEN 1-127        */
SPCHK    L     @07,SPQESPTR                                     01S0386
         CLI   SPQEID(@07),0                                    01S0386
         BNH   @RF00386                                         01S0386
         CLI   SPQEID(@07),128                                  01S0386
         BNL   @RF00386                                         01S0386
*            DO;               /* PREPARE TO FREE SUBPOOL            */
*              R0=SPQEID*SP01; /* GET SUBPOOL ID                     */
         SLR   R0,R0                                            01S0388
         IC    R0,SPQEID(,@07)                                  01S0388
         SLA   R0,24                                            01S0388
*              GEN(FREEMAIN R,SP=(0)); /* FREE SUBPOOL               */
         FREEMAIN R,SP=(0)
*            END;                                               01S0390
*        IF SPQEAD ^= ZERO     /* END OF THE SPQE CHAIN?             */
*          THEN                /* NOT THE END OF THE CHAIN           */
@RF00386 L     @07,SPQESPTR                                     01S0391
         L     @07,SPQEAD(,@07)                                 01S0391
         LTR   @07,@07                                          01S0391
         BZ    @RF00391                                         01S0391
*            DO;               /* PREPARE NEXT CHECK SUBPOOL ID      */
*              SPQESPTR=SPQEAD;  /* GET NEXT SPQE POINTER            */
         ST    @07,SPQESPTR                                     01S0393
*              GO TO SPCHK;    /* CHECK SUBPOOL ID                   */
         B     SPCHK                                            01S0394
*            END;              /* END SUBPOOL ID CHECK               */
*                                                               01S0395
*        R14 = R3;             /* RESTORE RETURN ADDRESS             */
@RF00391 LR    R14,R3                                           01S0396
*        RESPECIFY (R3) UNRSTD;                                 01S0397
*                                                               01S0397
*        END FREESUBP;         /* END OF 'FREE SUBPOOL' PROCEDURE    */
@EL00002 DS    0H                                               01S0398
@EF00002 DS    0H                                               01S0398
@ER00002 BR    @14                                              01S0398
*SNAPPIT:                                                       01S0399
*        /************************************************************/
*        /* THIS SUBROUTINE SEARCHES THE TASK INPUT-OUTPUT           */
*        /* TABLE (TIOT) FOR A 'SYSABEND' OR 'SYSUDUMP' DD ENTRY.    */
*        /* IF NOT, NO SNAP DUMP IS TAKEN. IF SO, A CHECK IS MADE    */
*        /* TO DETERMINE IF THE SYSTEM ABEND DATA SET IS OPEN.       */
*        /* IF SO, ITS DCB IS USED IN TAKING THE SNAP DUMP.          */
*        /* BUT IF IT IS NOT OPEN, A DCB IS USED THAT HAS BEEN       */
*        /* SPECIFIED IN THIS ROUTINE.                               */
*        /************************************************************/
*                                                               01S0399
*        PROCEDURE                                              01S0399
*          OPTIONS  (                                           01S0399
*          DONTSAVE,           /* DONT SAVE CALLER'S REGISTERS       */
*          NOSAVEAREA);        /* NO SAVE AREA IS REQUIRED           */
SNAPPIT  DS    0H                                               01S0400
*        RESPECIFY (R1,R4,R6) RESTRICTED;  /* INTERNAL USE REGISTERS */
*        R4=R14;               /* SAVE RETURN ADDRESS                */
         LR    R4,R14                                           01S0401
*        R6=ADDR(DCBLIST);     /* GET DCB LIST POINTER               */
         LA    R6,DCBLIST                                       01S0402
*        GEN(MVC   DCBLIST(DCBLNG),DUMPDCB);  /* INITIALIZE DCB LIST */
         MVC   DCBLIST(DCBLNG),DUMPDCB
*        TIOTPTR=TCBTIO;       /* INITIALIZE TIOT POINTER            */
         L     @07,TCBPTR(,WRKAPTR2)                            01S0404
         L     @07,TCBTIO(,@07)                                 01S0404
         ST    @07,TIOTPTR                                      01S0404
*NEXTENT:                                                       01S0405
*        IF TIOEDDNM='SYSUDUMP'  /* CHECK FOR 'SYSUDUMP' DD NAME     */
*          THEN                /* DDNAME IS PRESENT                  */
NEXTENT  L     @07,TIOTPTR                                      01S0405
         CLC   TIOEDDNM(8,@07),@CC03113                         01S0405
         BE    @RT00405                                         01S0405
*            GO TO OPEN;       /* GO OPEN SNAP DATA SET              */
*        IF TIOEDDNM='SYSABEND'  /* CHECK FOR 'SYSABEND' DD NAME     */
*          THEN                /* SYSABEND DD SPECIFIED              */
         CLC   TIOEDDNM(8,@07),@CC03116                         01S0407
         BNE   @RF00407                                         01S0407
*            DO;                                                01S0408
*              DCBDDNAM='SYSABEND';  /* PLACE DD NAME IN DCB         */
         L     @07,DCBPTR(,WRKAPTR1)                            01S0409
         MVC   DCBDDNAM+40(8,@07),@CC03116                      01S0409
*OPEN:                                                          01S0410
*              IF TCBJSTCB->TCBFDSOP^='1'B  /* DUMP DATA SET OPEN?   */
*              THEN            /* THE DATA SET IS NOT OPEN           */
OPEN     L     @07,TCBPTR(,WRKAPTR2)                            01S0410
         L     @07,TCBJSTCB(,@07)                               01S0410
         TM    TCBFDSOP(@07),B'00000100'                        01S0410
         BO    @RF00410                                         01S0410
*              DO;               /* GO TO OPEN DATA SET              */
*                                                               01S0411
*              R1=ADDR(OPENLIST);  /* GET OPEN LIST POINTER          */
         LA    R1,OPENLIST                                      01S0412
*              GENERATE;                                        01S0413
           MVC  OPENLIST(OPENLNG),OPENL    INITIALIZE OPEN LIST
           OPEN   ((6),OUTPUT),MF=(E,(1))  OPEN DUMP DATA SET DCB
*               END;                                            01S0414
*              ELSE                                             01S0415
*              IF DCBOPEN=YES  /* CHECK THE DCB OPEN FLAG            */
*                THEN          /* DCB HAS BEEN OPENED                */
         B     @RC00410                                         01S0415
@RF00410 L     @07,DCBPTR(,WRKAPTR1)                            01S0415
         TM    DCBOPEN+40(@07),B'00010000'                      01S0415
         BO    @RT00415                                         01S0415
*                  GO TO SNAP; /* GO TAKE SNAP DUMP                  */
*                ELSE          /* DCB HAS NOT BEEN OPENED            */
*                  GEN(BR    4);  /* RETURN TO MAIN PROCEDURE        */
         BR    4
*            END;                                               01S0418
@RC00410 DS    0H                                               01S0419
*        IF TIOELNGH ^= ZERO   /* IS THIS THE TIOT END               */
*          THEN                /* NO,GO TO NEXT DD ENTRY             */
@RF00407 L     @07,TIOTPTR                                      01S0419
         CLI   TIOELNGH(@07),0                                  01S0419
         BE    @RF00419                                         01S0419
*            DO;                                                01S0420
*              TIOTPTR=TIOTPTR+TIOELNGH;  /* GET NEXT DD POINTER     */
         SLR   @03,@03                                          01S0421
         IC    @03,TIOELNGH(,@07)                               01S0421
         ALR   @03,@07                                          01S0421
         ST    @03,TIOTPTR                                      01S0421
*              GO TO NEXTENT;  /* GO CHECK NEXT ENTRY                */
         B     NEXTENT                                          01S0422
*            END;                                               01S0423
*        GO TO SNAPND;         /* NO DUMP TO BE TAKEN                */
*                                                               01S0424
*                                                               01S0424
         B     SNAPND                                           01S0424
*SNAP:                                                          01S0425
*        R1=ADDR(SNAPLIST);    /* GET POINTER TO SNAP LIST           */
SNAP     LA    R1,SNAPLIST                                      01S0425
*        RESPECIFY (R2,R3) RESTRICTED;  /* LIST POINTERS             */
*        R2=SNAPID;            /* SNAP DUMP IDENTIFIER IS 007        */
         LA    R2,7                                             01S0427
*        R3=TCURTCB;           /* GET TCB POINTER                    */
         L     @07,CVTPTR                                       01S0428
         L     @07,CVTTCBP(,@07)                                01S0428
         L     R3,TCURTCB(,@07)                                 01S0428
*        GENERATE;             /* ISSUE SNAP MACRO                   */
         MVC   SNAPLIST(SNAPLNG),SNAPL   INITIALIZE SNAP LIST
         SNAP   TCB=(3),DCB=(6),ID=(2),SDATA=(Q,CB),                   *
               PDATA=(SA,ALLPA,SPLS),MF=(E,(1))
*        RESPECIFY (R2,R3) UNRESTRICTED;  /* RELEASE LIST POINTERS   */
*              IF TCBJSTCB->TCBFDSOP='1'B  /* DUMP DATA SET OPEN?    */
*                THEN          /* DATA SET WAS NOT OPENED BY    01S0431
*                                 STAE EXIT                          */
         L     @07,TCBPTR(,WRKAPTR2)                            01S0431
         L     @07,TCBJSTCB(,@07)                               01S0431
         TM    TCBFDSOP(@07),B'00000100'                        01S0431
         BO    @RT00431                                         01S0431
*                  GO TO SNAPND;  /* RETURN TO MAIN LINE             */
*                                                               01S0432
*                                                               01S0432
*CLOSE:                                                         01S0433
*        R1=ADDR(OPENLIST);    /* GET POINTER TO OPEN LIST           */
CLOSE    LA    R1,OPENLIST                                      01S0433
*        GEN(CLOSE ((6),LEAVE),MF=(E,(1)));  /* CLOSE DATA SET       */
         CLOSE ((6),LEAVE),MF=(E,(1))
*SNAPND:                                                        01S0435
*        R14=R4;               /* RESTORE RETURN ADDRESS             */
*                                                               01S0435
SNAPND   LR    R14,R4                                           01S0435
*        END SNAPPIT;          /* END SNAP DUMP ROUTINE              */
@EL00003 DS    0H                                               01S0436
@EF00003 DS    0H                                               01S0436
@ER00003 BR    @14                                              01S0436
*DETACH:                                                        01S0437
*        /************************************************************/
*        /* THIS SUBROUTINE SEARCHES DOWN THE TASK CONTROL           */
*        /* BLOCK CHAIN (TCB) FOR SUBTASKS OF THIS TASK              */
*        /* AND DETACHES THEM ALL.                                   */
*        /************************************************************/
*                                                               01S0437
*        PROCEDURE                                              01S0437
*          OPTIONS  (                                           01S0437
*          DONTSAVE,           /* DONT SAVE CALLER'S REGISTERS       */
*          NOSAVEAREA);        /* NO SAVE AREA REQUIRED              */
DETACH   DS    0H                                               01S0438
*        RESPECIFY (R1,R3) RESTRICTED;  /* REGISTERS FOR USE IN 01S0438
*                                 THIS INTERNAL ROUTINE              */
*        R3=R14;               /* SAVE THE RETURN ADDRESS            */
         LR    R3,R14                                           01S0439
*STASKCHK:                     /* DETACH SUBTASK                     */
*        IF TCBLTC ^= ZERO     /* DOES SUBTASK EXIST?                */
*          THEN                /* SUBTASK DOES EXIST                 */
STASKCHK L     @07,TCBPTR(,WRKAPTR2)                            01S0440
         L     @07,TCBLTC(,@07)                                 01S0440
         LTR   @07,@07                                          01S0440
         BZ    @RF00440                                         01S0440
*            DO;               /* PREPARE TO DETACH SUBTASK          */
*              SUBTASKP=TCBLTC;  /* GET POINTER TO SUBTASK           */
         ST    @07,SUBTASKP                                     01S0442
*              R1=ADDR(SUBTASKP);  /* GET PTR TO SUBTASK POINTER     */
         LA    R1,SUBTASKP                                      01S0443
*              GEN(DETACH (1));  /* DETACH THE SUBTASK               */
         DETACH (1)
*              GOTO STASKCHK;  /* CONTINUE SEARCH FOR SUBTASKS       */
         B     STASKCHK                                         01S0445
*            END;                                               01S0446
*        R14=R3;               /* RESTORE RETURN ADDRESS             */
@RF00440 LR    R14,R3                                           01S0447
*        END DETACH;           /* END DETACH PROCEDURE               */
@EL00004 DS    0H                                               01S0448
@EF00004 DS    0H                                               01S0448
@ER00004 BR    @14                                              01S0448
*/********************************************************************/
*/* THIS SUBROUTINE  FUNCTIONS  AS AN ABEND COMPLETION CODE CONVER-  */
*/* SION ROUTINE.  IT PREPARES THE CODE TO BE PRINTED OUT, SETS UP   */
*/* THE MESSAGE SEGMENT LISTS  AND  ISSUES  THE PUTLINE WITH MULTI-  */
*/* LEVEL OPTION FOR SECOND LEVEL MESSAGE.                           */
*/********************************************************************/
*                                                               01S0449
*CONVTCC:  /* EP TO CONVERSION AND PRINT ROUTINE                     */
*                                                               01S0449
*    PROC  OPTIONS(DONTSAVE,NOSAVEAREA);                        01S0449
*                                                               01S0449
CONVTCC  DS    0H                                               01S0450
*    RESPECIFY  (R1,R2,R3,WRKAPTR1,R11,R12,R13) RESTRICTED;     01S0450
*                                                               01S0450
*    IF POSTCODE = NO                /* CHK FOR ATTENTION            */
*      THEN DO;                      /* NO, CONTINUE                 */
*                                                               01S0451
         L     @07,TPLAECB-1(,WRKAPTR1)                         01S0451
         TM    POSTCODE(@07),B'01000000'                        01S0451
         BNZ   @RF00451                                         01S0451
*        R10 = ADDR(ABMSGSP);        /* GET PTR TO WORK AREA         */
         LA    R10,ABMSGSP(,WRKAPTR1)                           01S0453
*        TRUMSG(1:4) = VALAR6;       /* SET ABEND CODE TEXT          */
         MVC   TRUMSG(4,R10),VALAR6(R10)                        01S0454
*        ABMLEN = ACLEN;             /* LEN OF COMPLETION CODE MSG   */
         MVC   ABMLEN(2,R10),@CH00035                           01S0455
*        ABMOFF = ACDEOFF;           /* OFFSET IN MESSAGE            */
*                                                               01S0456
         MVC   ABMOFF(2,R10),@CH00033                           01S0456
*        IF NONSCUR = YES            /* CHK FOR ABEND FROM SECURITY  */
*          THEN DO;                  /* YES,                         */
         TM    NONSCUR(WRKAPTR1),B'00000001'                    01S0457
         BNO   @RF00457                                         01S0457
*            ACTSL = TM01SL;         /*   INITIALIZE SEGMENT LIST    */
         L     @07,@CA02996                                     01S0459
         MVC   ACTSL(112,WRKAPTR1),TM01SL-TM01SL(@07)           01S0459
*            ACTSEG(1)=ADDR(ACTSEG(5)); /* SET 2ND SEGMENT LIST PTR  */
         LA    @07,ACTSEG+16(,WRKAPTR1)                         01S0460
         ST    @07,ACTSEG(,WRKAPTR1)                            01S0460
*            ACTSEG(9)=ADDR(ABMSGAR);  /* SET PTR TO ABEND CODE TEXT */
         ST    R10,ACTSEG+32(,WRKAPTR1)                         01S0461
*            ACTSEG(11)=ADDR(SUBCDAR);  /* PTR TO REASON CODE TEXT   */
         LA    @07,SUBCDAR(,R10)                                01S0462
         ST    @07,ACTSEG+40(,WRKAPTR1)                         01S0462
*            R2 = ADDR(PTPBSP);      /* SET PTR TO PUTLINE PARM LIST */
         LA    R2,PTPBSP(,WRKAPTR1)                             01S0463
*            R3 = ADDR(ACTSL);       /* SET PTR TO MESSAGE LIST      */
         LA    R3,ACTSL(,WRKAPTR1)                              01S0464
*            R1 = ADDR(CSPLSP);      /* PREPARE TO LINK TO PUTLINE   */
*                                                               01S0465
         LA    R1,CSPLSP(,WRKAPTR1)                             01S0465
*            /* ISSUE THE E-FORM OF THE PUTLINE MACRO WITH THE       */
*            /*     MULTILEVEL OPTION                                */
*            R15 = ADDR(TPUTLM);     /* PTR TO PUTLINE ROUTINE       */
         LA    R15,TPUTLM                                       01S0466
*            GEN FLOWS(TPUTLM) (SYNCH  (15));  /* TO PUTLINE         */
         SYNCH  (15)
*          END;                                                 01S0468
*                                                               01S0468
*        ACTSL = TM41SL;             /* INITIALIZE SEGMENT LIST      */
@RF00457 L     @07,@CA02997                                     01S0469
         MVC   ACTSL(112,WRKAPTR1),TM41SL-TM41SL(@07)           01S0469
*        ACTSEG(1)=ADDR(ACTSEG(6));  /* SET PTR TO 2ND SEGMENT LIST  */
         LA    @07,ACTSEG+20(,WRKAPTR1)                         01S0470
         ST    @07,ACTSEG(,WRKAPTR1)                            01S0470
*        IF HOLCHAR = SCHAR          /* CHK IF USER CODE IS ZERO     */
*          THEN DO;                  /* YES, IS SYSTEM CODE          */
         CLI   HOLCHAR(R10),C'2'                                01S0471
         BNE   @RF00471                                         01S0471
*            ACTSEG(9)=ADDR(SYSTMSG);  /* INITIALIZE MESSAGE FIELD   */
         L     @07,@CA03002                                     01S0473
         ST    @07,ACTSEG+32(,WRKAPTR1)                         01S0473
*            ACTSEG(13)=ADDR(SUBCDAR); /* PTR TO REASON CODE TEXT    */
         LA    @07,SUBCDAR(,R10)                                01S0474
         ST    @07,ACTSEG+48(,WRKAPTR1)                         01S0474
*          END;                                                 01S0475
*          ELSE DO;                  /* IS USER ABEND ERROR          */
         B     @RC00471                                         01S0476
@RF00471 DS    0H                                               01S0477
*            ACTSEG(9)=ADDR(USERMSG);  /* INITIALIZE MESSAGE FIELD   */
         L     @07,@CA03003                                     01S0477
         ST    @07,ACTSEG+32(,WRKAPTR1)                         01S0477
*            ACTSEG(7) = D4;         /* SET NUMBER OF SEGMENTS       */
         MVC   ACTSEG+24(4,WRKAPTR1),@CF00062                   01S0478
*          END;                                                 01S0479
*                                                               01S0479
*        /* SET UP BUFFERS FOR THE ABEND ERROR MESSAGES              */
*        CMDLEN = MESSLEN;           /* LENGTH OF MESSAGE            */
@RC00471 MVC   CMDLEN(2),@CH00033                               01S0480
*        CMDOFF = MESSOFF;           /* OFFSET IN MESSAGE            */
         MVC   CMDOFF(2),@CH00077                               01S0481
*        CMDDATA = ECTPCMD;          /* GET COMMAND NAME             */
         L     @07,ECTPTR(,WRKAPTR2)                            01S0482
         MVC   CMDDATA(8),ECTPCMD(@07)                          01S0482
*        ACTSEG(4)=ADDR(CMDMSG);     /* TO ABEND PROGRAM NAME        */
         LA    @07,CMDMSG                                       01S0483
         ST    @07,ACTSEG+12(,WRKAPTR1)                         01S0483
*        ACTSEG(11)=ADDR(ABMSGAR);   /* PTR TO ABEND CODE TEXT       */
*                                                               01S0484
         ST    R10,ACTSEG+40(,WRKAPTR1)                         01S0484
*        /* SET UP TO GO TO PUTLINE TO ISSUE MESSAGE                 */
*        R2 = ADDR(PTPBSP);          /* PTR TO PUTLINE PARM LIST     */
         LA    R2,PTPBSP(,WRKAPTR1)                             01S0485
*        R3=ADDR(MULTLLST);          /* PTR TO MESSAGE SEGMENT LIST  */
         LA    R3,MULTLLST(,WRKAPTR1)                           01S0486
*        R1 = ADDR(CSPLSP);          /* PREPARE TO LINK TO PUTLINE   */
*                                                               01S0487
         LA    R1,CSPLSP(,WRKAPTR1)                             01S0487
*        /* ISSUE E-FORM OF PUTLINE MACRO WITH MULTILEVEL OPTION     */
*        R15 = ADDR(TPUTLM);         /* PTR TO PUTLINE ROUTINE       */
         LA    R15,TPUTLM                                       01S0488
*        GEN FLOWS(TPUTLM)  (SYNCH  (15));  /* GO TO PUTLINE         */
         SYNCH  (15)
*      END;                                                     01S0490
*                                                               01S0490
*LEAVE:  /* EXIT FROM CONVERSION-PRINT ROUTINE                       */
*                                                               01S0491
*    RESPECIFY (R14) RSTD;                                      01S0491
@RF00451 DS    0H                                               01S0491
LEAVE    DS    0H                                               01S0492
*    R14 = ADDR(CONVTCR);            /* SET FOR PSEUDO-RETURN        */
         LA    R14,CONVTCR                                      01S0492
*    RETURN;                         /* RETURN TO CALLER             */
@EL00005 DS    0H                                               01S0493
@EF00005 DS    0H                                               01S0493
@ER00005 BR    @14                                              01S0493
*    RESPECIFY (R1,R2,R3,WRKAPTR1,R11,R12,R14) UNRSTD;          01S0494
*    END  CONVTCC;                   /* END CONVERSION ROUTINE       */
*/* * * * * * * * * * * * * * * * **** * * * * * * * * * * * * * * * */
*/*                                                                  */
*/*  INVOKE STACK TO CLOSE BACKGROUND DATA SETS, SYSTSIN & SYSTSPRT  */
*/*                                                                  */
*/* * * * * * * * * * * * * * * * **** * * * * * * * * * * * * * * * */
*                                                               01S0496
*TSTAKDS:   /* EP TO STACK-CLOSE ROUTINE                             */
*                                                               01S0496
*    PROC  OPTIONS(NOSAVE,NOSAVEAREA,NORETREG);                 01S0496
*                                                               01S0496
*                                                               01S0496
TSTAKDS  DS    0H                                               01S0497
*    GEN(STACK  DATASET=(CLOSE),MF=(E,(1)));  /* ISSUE STACK-CLOSE   */
*                                                               01S0497
*                                                               01S0497
         STACK  DATASET=(CLOSE),MF=(E,(1))
*    GEN(SVC    3);                     /* RETURN TO CALLER          */
*                                                               01S0498
*                                                               01S0498
         SVC    3
*    END  TSTAKDS;                                              01S0499
@EL00006 DS    0H                                               01S0499
@EF00006 DS    0H                                               01S0499
@ER00006 BR    @14                                              01S0499
*/* * * * * * * * * * * * * * * * **** * * * * * * * * * * * * * * * */
*/*                                                                  */
*/*  INVOKE PUTLINE TO ISSUE ERROR MESSAGE (MULTILEVEL MESSAGE)      */
*/*                                                                  */
*/* * * * * * * * * * * * * * * * **** * * * * * * * * * * * * * * * */
*                                                               01S0500
*TPUTLM:   /* EP TO PUTLINE-MULTILEVEL-OPTION ROUTINE                */
*                                                               01S0500
*    PROC  OPTIONS(NOSAVE,NOSAVEAREA,NORETREG);                 01S0500
*                                                               01S0500
*                                                               01S0500
TPUTLM   DS    0H                                               01S0501
*    /* ISSUE E-FORM OF PUTLINE MACRO WITH MULTILEVEL OPTION         */
*    GENERATE;                                                  01S0501
*                                                               01S0501
         PUTLINE  PARM=(R2),OUTPUT=((R3),MULTLVL),                     *
               TERMPUT=(EDIT),MF=(E,(1))
*    GEN(SVC   3);                       /* RETURN TO CALLER         */
*                                                               01S0502
         SVC   3
*    END  TPUTLM;                                               01S0503
@EL00007 DS    0H                                               01S0503
@EF00007 DS    0H                                               01S0503
@ER00007 BR    @14                                              01S0503
*/* * * * * * * * * * * * * * * * **** * * * * * * * * * * * * * * * */
*/*                                                                  */
*/*  INVOKE PUTLINE TO ISSUE ERROR MESSAGE (SINGLE LEVEL MESSAGE)   */
*/*                                                                  */
*/* * * * * * * * * * * * * * * * **** * * * * * * * * * * * * * * * */
*                                                               01S0504
*TPUTLS:   /* EP TO PUTLINE-SINGLE-LEVEL-OPTION ROUTINE              */
*                                                               01S0504
*    PROC  OPTIONS(NOSAVE,NOSAVEAREA,NORETREG);                 01S0504
*                                                               01S0504
*                                                               01S0504
TPUTLS   DS    0H                                               01S0505
*    /* ISSUE E-FORM OF PUTLINE MACRO WITH SINGLE LEVEL OPTION       */
*    GENERATE;                                                  01S0505
*                                                               01S0505
         PUTLINE  PARM=(R2),OUTPUT=((R3),SINGLE),                      *
               TERMPUT=(EDIT),MF=(E,(1))
*    GEN(SVC   3);                   /* RETURN TO CALLER             */
*                                                               01S0506
         SVC   3
*    END  TPUTLS;                                               01S0507
@EL00008 DS    0H                                               01S0507
@EF00008 DS    0H                                               01S0507
@ER00008 BR    @14                                              01S0507
*                                                               01S0508
*                                                               01S0508
*    DECLARE /*GENERAL PURPOSE REGISTERS */                     01S0508
*      GPR00F FIXED(31) REG(0),                                 01S0508
*      GPR01F FIXED(31) REG(1),                                 01S0508
*      GPR15F FIXED(31) REG(15),                                01S0508
*      GPR00P PTR(31) REG(0),                                   01S0508
*      GPR01P PTR(31) REG(1),                                   01S0508
*      GPR14P PTR(31) REG(14),                                  01S0508
*      GPR15P PTR(31) REG(15);                                  01S0508
*                                                               01S0508
*    DECLARE /* COMMON VARIABLES */                             01S0509
*      I256C CHAR(256) BASED,                                   01S0509
*      I031F FIXED(31) BASED,                                   01S0509
*      I031P PTR(31)   BASED,                                   01S0509
*      I015F FIXED(15) BASED,                                   01S0509
*      I015P PTR(15)   BASED,                                   01S0509
*      I008P PTR(8)    BASED,                                   01S0509
*      I001C CHAR(1)   BASED;                                   01S0509
*FINISH: END IKJEFT05                /* END OF MODULE                */
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.      *
*/*%INCLUDE SYSLIB  (IEZDEB  )                                        *
*/*%INCLUDE SYSLIB  (IKJTCB  )                                        *
*/*%INCLUDE SYSLIB  (IHASDWA )                                        *
*/*%INCLUDE SYSLIB  (IKJUPT  )                                        *
*/*%INCLUDE SYSLIB  (IKJTMPWA)                                        *
*/*%INCLUDE SYSLIB  (IKJDAPL )                                        *
*/*%INCLUDE SYSLIB  (IKJDAP08)                                        *
*/*%INCLUDE SYSLIB  (IKJCPPL )                                        *
*/*%INCLUDE SYSLIB  (IKJCSPL )                                        *
*/*%INCLUDE SYSLIB  (IKJCSOA )                                        *
*/*%INCLUDE SYSLIB  (IKJECT  )                                        *
*/*%INCLUDE SYSLIB  (IKJIOPL )                                        *
*/*%INCLUDE SYSLIB  (IKJGTPB )                                        *
*/*%INCLUDE SYSLIB  (IKJPGPB )                                        *
*/*%INCLUDE SYSLIB  (IKJPTPB )                                        *
*/*%INCLUDE SYSLIB  (IKJSTPB )                                        *
*/*%INCLUDE SYSLIB  (IKJPSCB )                                        *
*/*%INCLUDE SYSLIB  (IEZATTCH)                                        *
*/*%INCLUDE SYSLIB  (IKJLSD  )                                        *
*/*%INCLUDE SYSLIB  (IKJEXEC )                                        *
*/*%INCLUDE SYSLIB  (IHADCBDF)                                        *
*/*%INCLUDE SYSLIB  (IHADCB  )                                        *
*/*%INCLUDE SYSLIB  (IKJPPL  )                                        *
*/*%INCLUDE SYSLIB  (IKJSTPL )                                        *
*/*%INCLUDE SYSLIB  (IKJTPL  )                                        *
*/*%INCLUDE SYSLIB  (CVT     )                                        *
*/*%INCLUDE SYSLIB  (IEFTIOT1)                                        *
*/*%INCLUDE SYSLIB  (IHASPQE )                                        *
*;                                                              01S0510
@DATA    DS    0H
@CH00091 DC    H'7'
@CH00035 DC    H'8'
@CH00077 DC    H'10'
@CH00093 DC    H'15'
@CH01820 DC    H'25'
@DATD    DSECT
         DS    0F
IKJEFT05 CSECT
         DS    0F
@CF00037 DC    F'1'
@CH00037 EQU   @CF00037+2
@CF00062 DC    F'4'
@CF00033 DC    F'12'
@CH00033 EQU   @CF00033+2
@CF00042 DC    F'40'
@CF00044 DC    F'44'
@CF00046 DC    F'48'
@CF00048 DC    F'52'
@CF00050 DC    F'56'
@CF00052 DC    F'60'
@CF00054 DC    F'64'
@CF00068 DC    F'240'
@CF00056 DC    F'2323'
@CF00058 DC    F'2359'
@CF00072 DC    F'4095'
@CF03078 DC    XL4'C1'
@CF03079 DC    XL4'CF'
@DATD    DSECT
         DS    0D
T05WA    DS    CL38
         ORG   T05WA
DEBPTR   DS    AL4
WA2PTR   DS    AL4
TIOTPTR  DS    AL4
SPQESPTR DS    AL4
SUBTASKP DS    AL4
SAVLNK   DS    AL4
CMDMSG   DS    CL12
         ORG   CMDMSG
CMDLEN   DS    AL2
CMDOFF   DS    AL2
CMDDATA  DS    CL8
         ORG   T05WA+36
I        DS    AL2
         ORG   T05WA+38
IKJEFT05 CSECT
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
@CA02996 DC    A(TM01SL)
@CA02997 DC    A(TM41SL)
@CA02998 DC    A(MSG56600)
@CA02999 DC    A(MSG56601)
@CA03000 DC    A(MSG56602)
@CA03001 DC    A(MSG56603)
@CA03002 DC    A(SYSTMSG)
@CA03003 DC    A(USERMSG)
         DS    0D
SPROK1   DC    A((16777215+251658257))
GMLNG    DC    AL4(38)
@CC03113 DC    C'SYSUDUMP'
@CC03116 DC    C'SYSABEND'
XLATAB   DC    CL16'0123456789ABCDEF'
USERTAB  DC    XL4'00C90004'
         ORG   USERTAB+0
USECODE  DS    FL2
USEACT   DS    FL2
         ORG   USERTAB+4
         DC    XL4'00CA0008'
         ORG   USERTAB+8
         DC    XL4'00CB0008'
         ORG   USERTAB+12
         DC    XL4'00CC0008'
         ORG   USERTAB+16
         DC    XL4'00CD0008'
         ORG   USERTAB+20
         DC    XL4'00CE0008'
         ORG   USERTAB+24
         DC    XL4'00CF0004'
         ORG   USERTAB+28
         DC    XL4'00D00004'
         ORG   USERTAB+32
         DC    XL4'012D0008'
         ORG   USERTAB+36
         DC    XL4'012E0008'
         ORG   USERTAB+40
         DC    XL4'012F0008'
         ORG   USERTAB+44
         DC    XL4'02BD0008'
         ORG   USERTAB+48
         DC    XL4'0000'
         ORG   USERTAB+52
PROGTAB  DC    XL4'00C10008'
         ORG   PROGTAB+0
PROGCODE DS    FL2
PROGACT  DS    FL2
         ORG   PROGTAB+4
         DC    XL4'00C20004'
         ORG   PROGTAB+8
         DC    XL4'00C30004'
         ORG   PROGTAB+12
         DC    XL4'00C40004'
         ORG   PROGTAB+16
         DC    XL4'00C50004'
         ORG   PROGTAB+20
         DC    XL4'00C60004'
         ORG   PROGTAB+24
         DC    XL4'0000'
         ORG   PROGTAB+64
SVCTAB   DC    XL4'023E0004'
         ORG   SVCTAB+0
SVCCODE  DS    FL2
SVCACT   DS    FL2
         ORG   SVCTAB+4
         DC    XL4'08040008'
         ORG   SVCTAB+8
         DC    XL4'0806000C'
         ORG   SVCTAB+12
         DC    XL4'0A0A0004'
         ORG   SVCTAB+16
         DC    XL4'0000'
         ORG   SVCTAB+20
@DATD    DSECT
DCBLIST  DCB   DSORG=PS,MACRF=(W),DDNAME=SYSUDUMP
OPENLIST OPEN  (,OUTPUT),MF=L
SNAPLIST SNAP  ,MF=L
IKJEFT05 CSECT
DUMPDCB  DCB   DSORG=PS,RECFM=VBA,MACRF=(W),BLKSIZE=1632,LRECL=125,    *
               DDNAME=SYSUDUMP
DCBLNG   EQU   *-DUMPDCB
OPENL    OPEN  (,OUTPUT),MF=L
OPENLNG  EQU   *-OPENL
SNAPL    SNAP  ,MF=L
SNAPLNG  EQU   *-SNAPL
MACSP    EQU   *-DUMPDCB
MACSP5L  DC    AL2(MACSP)           LENGTH OF MACRO SPACE
IKJEFT05 CSECT
PATCH5   DC    12A(0)               LOCAL PATCH AREA
@DATD    DSECT
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
IKJEFT05 CSECT
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
R0       EQU   @00
R1       EQU   @01
PARMPTR  EQU   @01
R2       EQU   @02
R3       EQU   @03
R4       EQU   @04
R5       EQU   @05
R6       EQU   @06
R7       EQU   @07
WRKAPTR2 EQU   @08
WRKAPTR1 EQU   @09
R10      EQU   @10
R11      EQU   @11
R12      EQU   @12
R14      EQU   @14
R15      EQU   @15
SDWAPTR  EQU   @01
R13      EQU   @13
GPR01F   EQU   @01
GPR15F   EQU   @15
GPR00F   EQU   @00
GPR00P   EQU   @00
GPR01P   EQU   @01
GPR14P   EQU   @14
GPR15P   EQU   @15
R8       EQU   @08
         EXTRN TM01SL
         EXTRN TM41SL
         EXTRN MSG56600
         EXTRN MSG56601
         EXTRN MSG56602
         EXTRN MSG56603
         EXTRN SYSTMSG
         EXTRN USERMSG
CVTPTR   EQU   16
DEBBASIC EQU   0
DEBTCBAD EQU   DEBBASIC
DEBDEBAD EQU   DEBBASIC+4
DEBIRBAD EQU   DEBBASIC+8
DEBOFLGS EQU   DEBIRBAD
DEBOPATB EQU   DEBBASIC+12
DEBFLGS1 EQU   DEBBASIC+14
DEBUSRPG EQU   DEBBASIC+16
DEBRRQ   EQU   DEBBASIC+20
DEBECBAD EQU   DEBRRQ
DEBDCBAD EQU   DEBBASIC+24
DEBPROTG EQU   DEBDCBAD
DEBAPPAD EQU   DEBBASIC+28
DEBBASND EQU   DEBBASIC+32
DEBDASD  EQU   0
DEBUCBAD EQU   DEBDASD
DEBACSMD EQU   0
DEBVOLSQ EQU   DEBACSMD
DEBVOLBT EQU   DEBVOLSQ
DEBDSNM  EQU   DEBACSMD+4
DEBUTSAA EQU   DEBDSNM
DEBACS01 EQU   0
DEBDSNAM EQU   DEBACS01
DEBACS02 EQU   0
DEBDBLK  EQU   DEBACS02
DEBACS03 EQU   0
DEBACS04 EQU   0
DEBTBFRA EQU   DEBACS04
DEBTCCWA EQU   DEBACS04+4
DEBACS05 EQU   0
DEBFUCBA EQU   DEBACS05
DEBLUCBA EQU   DEBACS05+4
DEBACS06 EQU   0
DEBACS07 EQU   0
DEBACS08 EQU   0
DEBSUBNM EQU   0
DEB      EQU   0
DEBAVT   EQU   DEB
DEBEOEA  EQU   DEBAVT
DEBEOEAB EQU   DEBEOEA
DEBSIOA  EQU   DEBAVT+4
DEBSIOAB EQU   DEBSIOA
DEBPCIA  EQU   DEBAVT+8
DEBPCIAB EQU   DEBPCIA
DEBCEA   EQU   DEBAVT+12
DEBCEAB  EQU   DEBCEA
DEBXCEA  EQU   DEBAVT+16
DEBXCEAB EQU   DEBXCEA
DEBPREFX EQU   DEB+20
DEBXTNP  EQU   DEBPREFX+8
DEBXTN   EQU   0
DEBXFLG1 EQU   DEBXTN+2
TCBFIX   EQU   0
TCBFRS   EQU   TCBFIX
TCB      EQU   0
TCBPIE   EQU   TCB+4
TCBPMASK EQU   TCBPIE
TCBTIO   EQU   TCB+12
TCBCMP   EQU   TCB+16
TCBCMPF  EQU   TCBCMP
TCBCPP   EQU   TCBCMPF
TCBSTCC  EQU   TCBCMPF
TCBCDBL  EQU   TCBCMPF
TCBCWTO  EQU   TCBCMPF
TCBCIND  EQU   TCBCMPF
TCBCMSG  EQU   TCBCMPF
TCBTRN   EQU   TCB+20
TCBABF   EQU   TCBTRN
TCBMSS   EQU   TCB+24
TCBPKF   EQU   TCB+28
TCBFLGS  EQU   TCB+29
TCBFLGS1 EQU   TCBFLGS
TCBFLGS2 EQU   TCBFLGS+1
TCBFDSOP EQU   TCBFLGS2
TCBFLGS3 EQU   TCBFLGS+2
TCBFLGS4 EQU   TCBFLGS+3
TCBFLGS5 EQU   TCBFLGS+4
TCBABWF  EQU   TCBFLGS5
TCBJPQ   EQU   TCB+44
TCBPURGE EQU   TCBJPQ
TCBGRS   EQU   TCB+48
TCBFSA   EQU   TCB+112
TCBTME   EQU   TCB+120
TCBJSTCB EQU   TCB+124
TCBLTC   EQU   TCB+136
TCBTSFLG EQU   TCB+148
TCBTSTSK EQU   TCBTSFLG
TCBSTAB  EQU   TCB+160
TCBNSTAE EQU   TCBSTAB
TCBTCT   EQU   TCB+164
TCBTCTGF EQU   TCBTCT
TCBSCNDY EQU   TCB+172
TCBNDSP  EQU   TCBSCNDY
TCBNDSP1 EQU   TCBNDSP+1
TCBNDSP2 EQU   TCBNDSP+2
TCBNDSP3 EQU   TCBNDSP+3
TCBJSCB  EQU   TCB+180
TCBRECDE EQU   TCBJSCB
TCBEXT1  EQU   TCB+196
TCBBITS  EQU   TCB+200
TCBNDSP4 EQU   TCBBITS
TCBNDSP5 EQU   TCBBITS+1
TCBFLGS6 EQU   TCBBITS+2
TCBFLGS7 EQU   TCBBITS+3
TCBDAR   EQU   TCB+204
TCBDARC  EQU   TCBDAR
TCBEXT2  EQU   TCB+208
TCBFOE   EQU   TCB+244
TCBESTAE EQU   TCB+264
TCBESTRM EQU   TCBESTAE+1
TCBFBYT1 EQU   TCB+276
TCBFBYT2 EQU   TCB+277
TCBRV124 EQU   TCB+278
TCBRV133 EQU   TCB+279
TCBXTNT2 EQU   0
TCBGTF   EQU   TCBXTNT2
TCBTFLG  EQU   TCBGTF
TCBRV146 EQU   TCBXTNT2+28
TCBRV155 EQU   TCBXTNT2+29
TCBRV164 EQU   TCBXTNT2+30
TCBRV173 EQU   TCBXTNT2+31
SDWA     EQU   0
SDWAPARM EQU   SDWA
SDWAFIOB EQU   SDWA+4
SDWAABCC EQU   SDWAFIOB
SDWACMPF EQU   SDWAABCC
SDWAREQ  EQU   SDWACMPF
SDWACMPC EQU   SDWAABCC+1
SDWACTL1 EQU   SDWA+8
SDWACMKA EQU   SDWACTL1
SDWAMWPA EQU   SDWACTL1+1
SDWAPMKA EQU   SDWACTL1+4
SDWACTL2 EQU   SDWA+16
SDWACMKP EQU   SDWACTL2
SDWAMWPP EQU   SDWACTL2+1
SDWAPMKP EQU   SDWACTL2+4
SDWAGRSV EQU   SDWA+24
SDWAGR15 EQU   SDWAGRSV+60
SDWANAME EQU   SDWA+88
SDWAEC1  EQU   SDWA+104
SDWAEMK1 EQU   SDWAEC1
SDWAMWP1 EQU   SDWAEC1+1
SDWAINT1 EQU   SDWAEC1+2
SDWANXT1 EQU   SDWAEC1+4
SDWAAEC1 EQU   SDWA+112
SDWAILC1 EQU   SDWAAEC1+1
SDWAINC1 EQU   SDWAAEC1+2
SDWAICD1 EQU   SDWAINC1+1
SDWAEC2  EQU   SDWA+120
SDWAEMK2 EQU   SDWAEC2
SDWAMWP2 EQU   SDWAEC2+1
SDWAINT2 EQU   SDWAEC2+2
SDWANXT2 EQU   SDWAEC2+4
SDWAAEC2 EQU   SDWA+128
SDWAILC2 EQU   SDWAAEC2+1
SDWAINC2 EQU   SDWAAEC2+2
SDWAICD2 EQU   SDWAINC2+1
SDWASRSV EQU   SDWA+136
SDWAIDNT EQU   SDWA+200
SDWAMCH  EQU   SDWA+204
SDWASTCK EQU   SDWAMCH
SDWAMCHI EQU   SDWAMCH+8
SDWAMCHS EQU   SDWAMCHI
SDWAMCHD EQU   SDWAMCHI+1
SDWARSR1 EQU   SDWAMCH+12
SDWARSR2 EQU   SDWAMCH+13
SDWAFLGS EQU   SDWA+232
SDWAERRA EQU   SDWAFLGS
SDWAERRB EQU   SDWAFLGS+1
SDWAERRC EQU   SDWAFLGS+2
SDWAERRD EQU   SDWAFLGS+3
SDWAIOFS EQU   SDWA+238
SDWARTYA EQU   SDWA+240
SDWACPUA EQU   SDWA+248
SDWAPARQ EQU   SDWA+252
SDWARCDE EQU   SDWAPARQ
SDWAACF2 EQU   SDWAPARQ+1
SDWARCRD EQU   SDWAACF2
SDWAACF3 EQU   SDWAPARQ+2
SDWAACF4 EQU   SDWAPARQ+3
SDWALKWA EQU   SDWA+256
SDWALKWS EQU   SDWALKWA
SDWARECP EQU   SDWA+292
SDWASNPA EQU   SDWA+320
SDWADUMP EQU   SDWASNPA
SDWADPFS EQU   SDWADUMP+1
SDWADDAT EQU   SDWASNPA+4
SDWASDAT EQU   SDWADDAT
SDWAPDAT EQU   SDWADDAT+2
SDWADPSA EQU   SDWA+328
SDWADPSL EQU   SDWADPSA
SDWARA   EQU   SDWA+400
SDWADPVA EQU   SDWARA+2
UPT      EQU   0
UPTSWS   EQU   UPT+12
DAPL     EQU   0
DAPB08   EQU   0
DA08FLG  EQU   DAPB08+2
DA08DSP1 EQU   DAPB08+68
DA08DPS2 EQU   DAPB08+69
DA08DPS3 EQU   DAPB08+70
DA08CTL  EQU   DAPB08+71
CPPL     EQU   0
CSPL     EQU   0
CSOA     EQU   0
CSOAFLG  EQU   CSOA+6
ECT      EQU   0
ECTRCDF  EQU   ECT
ECTRTCD  EQU   ECT+1
ECTIOWA  EQU   ECT+4
ECTPCMD  EQU   ECT+12
ECTSWS   EQU   ECT+28
ECTLOGF  EQU   ECTSWS
ECTSWS2  EQU   ECT+40
ECTSWS21 EQU   ECTSWS2
IOPL     EQU   0
IOPLIOPB EQU   IOPL+12
GTPB     EQU   0
PGPB     EQU   0
PTPB     EQU   0
STPB     EQU   0
@NM00092 EQU   STPB
PSCB     EQU   0
PSCBATR1 EQU   PSCB+16
ATTCHLST EQU   0
ATPGNADA EQU   ATTCHLST
ATDEFLAG EQU   ATPGNADA
ATDCBADA EQU   ATTCHLST+4
ATECBADR EQU   ATTCHLST+8
ATECBFLG EQU   ATECBADR
ATGSFLDA EQU   ATTCHLST+12
ATGSFLAG EQU   ATGSFLDA
ATSHFLDA EQU   ATTCHLST+16
ATSHFLAG EQU   ATSHFLDA
ATETXRA  EQU   ATTCHLST+20
ATROLL   EQU   ATETXRA
ATINDS2  EQU   ATROLL
ATINDS   EQU   ATTCHLST+27
ATJSCBAD EQU   ATTCHLST+36
ATSTAIAD EQU   ATTCHLST+40
ATSTAIEX EQU   ATTCHLST+44
ATSTAIF  EQU   ATSTAIEX
ATFLAGS1 EQU   ATTCHLST+52
LSD      EQU   0
LSDEXEC  EQU   LSD+12
EXECDATA EQU   0
@NM00100 EQU   EXECDATA+16
EXDATFLG EQU   EXECDATA+32
@NM00101 EQU   EXDATFLG
IHADCB   EQU   0
IHADCS00 EQU   0
DCBFDAD  EQU   IHADCS00+5
IHADCS01 EQU   0
DCBDVTBL EQU   IHADCS01
IHADCS11 EQU   0
DCBRELB  EQU   IHADCS11
DCBREL   EQU   DCBRELB+1
DCBBUFCB EQU   IHADCS11+4
DCBDSORG EQU   IHADCS11+10
DCBDSRG1 EQU   DCBDSORG
DCBDSRG2 EQU   DCBDSORG+1
DCBIOBAD EQU   IHADCS11+12
DCBODEB  EQU   DCBIOBAD
DCBLNP   EQU   DCBODEB
DCBQSLM  EQU   DCBLNP
DCBIOBAA EQU   DCBODEB+1
IHADCS50 EQU   0
DCBSVCXL EQU   IHADCS50
DCBEODAD EQU   IHADCS50+4
DCBBFALN EQU   DCBEODAD
DCBHIARC EQU   DCBBFALN
DCBBFTEK EQU   DCBHIARC
DCBBFT   EQU   DCBBFTEK
DCBEXLST EQU   IHADCS50+8
DCBRECFM EQU   DCBEXLST
DCBRECLA EQU   DCBRECFM
IHADCS24 EQU   0
DCBDDNAM EQU   IHADCS24
DCBOFLGS EQU   IHADCS24+8
DCBOFLWR EQU   DCBOFLGS
DCBIFLG  EQU   IHADCS24+9
DCBIBPCT EQU   DCBIFLG
DCBMACR  EQU   IHADCS24+10
DCBMACR1 EQU   DCBMACR
DCBMRFE  EQU   DCBMACR1
DCBMRGET EQU   DCBMRFE
DCBMRAPG EQU   DCBMACR1
DCBMRRD  EQU   DCBMRAPG
DCBMRCI  EQU   DCBMACR1
DCBMRMVG EQU   DCBMRCI
DCBMRLCG EQU   DCBMACR1
DCBMRABC EQU   DCBMACR1
DCBMRPT1 EQU   DCBMRABC
DCBMRSBG EQU   DCBMRPT1
DCBMRCRL EQU   DCBMACR1
DCBMRCHK EQU   DCBMRCRL
DCBMRRDX EQU   DCBMRCHK
DCBMRDMG EQU   DCBMACR1
DCBMACR2 EQU   DCBMACR+1
DCBMRPUT EQU   DCBMACR2
DCBMRWRT EQU   DCBMACR2
DCBMRMVP EQU   DCBMACR2
DCBMR5WD EQU   DCBMACR2
DCBMRLDM EQU   DCBMR5WD
DCBMRLCP EQU   DCBMRLDM
DCBMR4WD EQU   DCBMACR2
DCBMRPT2 EQU   DCBMR4WD
DCBMRTMD EQU   DCBMRPT2
DCBMR3WD EQU   DCBMACR2
DCBMRCTL EQU   DCBMR3WD
DCBMRSTK EQU   DCBMRCTL
DCBMR1WD EQU   DCBMACR2
DCBMRSWA EQU   DCBMR1WD
DCBMRDMD EQU   DCBMRSWA
IHADCS25 EQU   0
DCBMACRF EQU   IHADCS25+2
DCBMACF1 EQU   DCBMACRF
DCBMFFE  EQU   DCBMACF1
DCBMFGET EQU   DCBMFFE
DCBMFAPG EQU   DCBMACF1
DCBMFRD  EQU   DCBMFAPG
DCBMFCI  EQU   DCBMACF1
DCBMFMVG EQU   DCBMFCI
DCBMFLCG EQU   DCBMACF1
DCBMFABC EQU   DCBMACF1
DCBMFPT1 EQU   DCBMFABC
DCBMFSBG EQU   DCBMFPT1
DCBMFCRL EQU   DCBMACF1
DCBMFCHK EQU   DCBMFCRL
DCBMFDMG EQU   DCBMACF1
DCBMACF2 EQU   DCBMACRF+1
DCBMFPUT EQU   DCBMACF2
DCBMFWRT EQU   DCBMACF2
DCBMFMVP EQU   DCBMACF2
DCBMF5WD EQU   DCBMACF2
DCBMFLDM EQU   DCBMF5WD
DCBMFLCP EQU   DCBMFLDM
DCBMF4WD EQU   DCBMACF2
DCBMFPT2 EQU   DCBMF4WD
DCBMFTMD EQU   DCBMFPT2
DCBMF3WD EQU   DCBMACF2
DCBMFCTL EQU   DCBMF3WD
DCBMFSTK EQU   DCBMFCTL
DCBMF1WD EQU   DCBMACF2
DCBMFSWA EQU   DCBMF1WD
DCBMFDMD EQU   DCBMFSWA
DCBDEBAD EQU   IHADCS25+4
DCBIFLGS EQU   DCBDEBAD
DCBIFPCT EQU   DCBIFLGS
IHADCS26 EQU   0
DCBWRITE EQU   IHADCS26
DCBREAD  EQU   DCBWRITE
DCBWRITA EQU   DCBREAD+1
IHADCS36 EQU   0
DCBGERR  EQU   IHADCS36
DCBPERR  EQU   DCBGERR
DCBCHECK EQU   DCBPERR
DCBOPTCD EQU   DCBCHECK
DCBOPTH  EQU   DCBOPTCD
DCBOPTO  EQU   DCBOPTH
DCBOPTZ  EQU   DCBOPTCD
DCBGERRA EQU   DCBCHECK+1
DCBPERRA EQU   DCBGERRA
DCBSYNAD EQU   IHADCS36+4
DCBCIND1 EQU   IHADCS36+8
DCBCIND2 EQU   IHADCS36+9
DCBIOBA  EQU   IHADCS36+16
DCBCICB  EQU   DCBIOBA
IHADCS52 EQU   0
DCBDIRCT EQU   IHADCS52
DCBQSWS  EQU   DCBDIRCT
DCBUSASI EQU   DCBQSWS
DCBQADFS EQU   DCBUSASI
DCBBUFOF EQU   DCBDIRCT+1
IHADCS37 EQU   0
DCBFLAG1 EQU   IHADCS37
IHADCS38 EQU   0
DCBEOBR  EQU   IHADCS38
DCBPOINT EQU   IHADCS38+12
DCBCNTRL EQU   DCBPOINT
PPL      EQU   0
STPL     EQU   0
ABMSGAR  EQU   0
MSGBASE  EQU   ABMSGAR
@NM00123 EQU   MSGBASE
CVDAR    EQU   @NM00123
@NM00124 EQU   CVDAR
@NM00125 EQU   @NM00124
ABMLEN   EQU   @NM00125
ABMOFF   EQU   @NM00125+2
TRUMSG   EQU   @NM00125+4
MSGTXT   EQU   TRUMSG
TYPAR    EQU   TRUMSG+16
CODEAR   EQU   TYPAR
VALAR6   EQU   CODEAR+1
VALAR    EQU   VALAR6
USRCDEC  EQU   CVDAR+5
ABNDCD   EQU   MSGBASE+12
ABNDCDA  EQU   ABNDCD
@NM00127 EQU   ABNDCDA
SYSCDAR  EQU   @NM00127+1
USRCDBI  EQU   ABNDCDA+2
HOLCHAR  EQU   ABNDCDA+4
SUBCDAR  EQU   ABMSGAR+28
SUBCDRS  EQU   SUBCDAR
SUBCLEN  EQU   SUBCDRS
SUBCDBI  EQU   SUBCDRS+2
SUBCOFF  EQU   SUBCDBI
SUBCAR   EQU   SUBCOFF
SUBCTXT  EQU   SUBCAR+2
PRSMAR   EQU   0
PRSMCVA  EQU   PRSMAR
PRSMSAV  EQU   PRSMCVA
PARSRC   EQU   PRSMSAV
PRSMVAL  EQU   PARSRC+4
PRSMTXT  EQU   PRSMVAL
DYNAPARM EQU   0
TIOSRL   EQU   0
TOPSTKL  EQU   0
@NM00134 EQU   TOPSTKL
@NM00135 EQU   @NM00134
STLLSDP  EQU   @NM00134+1
LSDPTR   EQU   STLLSDP
MDLGML   EQU   0
MDLFML   EQU   0
STYNQL   EQU   0
STYNQL02 EQU   STYNQL+8
STYDQL   EQU   0
STYDQL02 EQU   STYDQL+4
CURPTRS  EQU   0
SAVRBAK  EQU   CURPTRS+4
SAVARY   EQU   0
SR13BAK  EQU   SAVARY+4
SR13FOR  EQU   SAVARY+8
REG15    EQU   SAVARY+16
REG0     EQU   SAVARY+20
REG1     EQU   SAVARY+24
TMPWRKA2 EQU   0
TWRKA2A  EQU   TMPWRKA2
WRKA1PTR EQU   TWRKA2A
TMPWA2P  EQU   TWRKA2A+8
TEPKEY   EQU   TWRKA2A+32
TCBPTR   EQU   TWRKA2A+36
UPTPTR   EQU   TWRKA2A+40
ECTPTR   EQU   TWRKA2A+44
PSCBPTR  EQU   TWRKA2A+48
SAVLNKRS EQU   TWRKA2A+120
SAVLNKL  EQU   SAVLNKRS+40
TWRKA2B  EQU   TMPWRKA2+168
MCTLFLGS EQU   TWRKA2B
MCFLGS1  EQU   MCTLFLGS
BKGMODE  EQU   MCFLGS1
MTPL     EQU   TWRKA2B+4
MTPLPS   EQU   MTPL+4
RTRYSA   EQU   TWRKA2B+20
TMPWRKA1 EQU   0
TPL      EQU   TMPWRKA1
TPLCBUF  EQU   TPL
TPLCTCB  EQU   TPL+20
TPLECBL  EQU   TPL+44
TPLAECB  EQU   TPLECBL+9
TMPCECB  EQU   TMPWRKA1+64
TMPIECB  EQU   TMPWRKA1+68
TMPSWS   EQU   TMPWRKA1+80
TMPACTRL EQU   TMPSWS
TMPSCTRL EQU   TMPSWS
ABND806  EQU   TMPSWS
NONSCUR  EQU   TMPSWS
CALLNOW  EQU   TMPSWS+1
CALLSWS  EQU   TMPSWS+3
FLOFLGS  EQU   TMPWRKA1+148
FLOFLGS1 EQU   FLOFLGS
DOGETC   EQU   FLOFLGS1
DODONE   EQU   FLOFLGS1
FLOFLGS2 EQU   FLOFLGS+1
DOATTN   EQU   FLOFLGS2
FLOFLGS3 EQU   FLOFLGS+2
FLOFLGS4 EQU   FLOFLGS+3
CPPLPTR  EQU   TMPWRKA1+152
CSOAPTR  EQU   TMPWRKA1+156
CSPLPTR  EQU   TMPWRKA1+160
DAPLPTR  EQU   TMPWRKA1+164
GTPBPTR  EQU   TMPWRKA1+168
IOPLPTR  EQU   TMPWRKA1+172
PGPBPTR  EQU   TMPWRKA1+176
PPLPTR   EQU   TMPWRKA1+180
PTPBPTR  EQU   TMPWRKA1+184
STPLPTR  EQU   TMPWRKA1+188
ATTCHPTR EQU   TMPWRKA1+204
DCBPTR   EQU   TMPWRKA1+212
DYNAPPTR EQU   TMPWRKA1+216
EBCDPTR  EQU   TMPWRKA1+220
READYPTR EQU   TMPWRKA1+224
STAXPPTR EQU   TMPWRKA1+236
STPBPTR  EQU   TMPWRKA1+240
ABMSGSP  EQU   TMPWRKA1+248
ACTSL    EQU   TMPWRKA1+288
ACTSEG   EQU   ACTSL
AMSGLIST EQU   TMPWRKA1+400
BLDLLST  EQU   TMPWRKA1+500
XTRCLST  EQU   BLDLLST
CSPLSP   EQU   TMPWRKA1+752
CTLBKSP  EQU   TMPWRKA1+800
PTPBSP   EQU   TMPWRKA1+1248
CALLWA   EQU   TMPWRKA1+1448
PPWORKAR EQU   CALLWA
PPLIST   EQU   PPWORKAR
PARMFLD  EQU   PPWORKAR+4
WORK1    EQU   CALLWA+108
PARSPARM EQU   WORK1
DSNBUFFR EQU   WORK1+8
DAPB0PTR EQU   CALLWA+168
MBRSEG   EQU   CALLWA+172
MBRDSEG  EQU   CALLWA+184
DSSEG    EQU   CALLWA+196
TMPWA2   EQU   0
TMPWA2A  EQU   TMPWA2
SVT040A  EQU   TMPWA2A
SVT041A  EQU   TMPWA2A+72
SAVT041  EQU   SVT041A
SVT042A  EQU   TMPWA2A+144
STYNQWA  EQU   TMPWA2A+216
TMPWA2B  EQU   TMPWA2+256
RETRYFLG EQU   TMPWA2B+8
TMPRINIT EQU   RETRYFLG
TMPRTRY  EQU   RETRYFLG
GMLNG5   EQU   TMPWA2B+12
GMLOC5   EQU   TMPWA2B+16
CBUF     EQU   0
STRTPARM EQU   0
CVTMAP   EQU   0
CVTTCBP  EQU   CVTMAP
CVTDAR   EQU   CVTMAP+72
CVTFLGS1 EQU   CVTDAR
CVTDCB   EQU   CVTMAP+116
CVTIOQET EQU   CVTMAP+120
CVTIERLC EQU   CVTMAP+144
CVTHEAD  EQU   CVTMAP+160
CVTSV76C EQU   CVTHEAD
CVTOPTA  EQU   CVTMAP+182
CVTOPTB  EQU   CVTMAP+183
CVTGTF   EQU   CVTMAP+236
CVTGTFST EQU   CVTGTF
CVTGTFS  EQU   CVTGTFST
CVTSTATE EQU   CVTGTFST
CVTTMODE EQU   CVTGTFST
CVTFORM  EQU   CVTGTFST
CVTAQAVT EQU   CVTMAP+240
CVTTCMFG EQU   CVTAQAVT
CVTVOLM2 EQU   CVTMAP+244
CVTTATA  EQU   CVTVOLM2
CVTTSKS  EQU   CVTTATA
CVTVOLF2 EQU   CVTTSKS
CVTTAT   EQU   CVTTATA+1
CVTATER  EQU   CVTMAP+248
CVTEXT1  EQU   CVTMAP+252
CVTPURG  EQU   CVTMAP+260
CVTQMSG  EQU   CVTMAP+268
CVTDMSR  EQU   CVTMAP+272
CVTRSV37 EQU   CVTDMSR
CVTDMSRF EQU   CVTRSV37
CVTERPV  EQU   CVTMAP+316
CVTINTLA EQU   CVTMAP+320
CVTAPF   EQU   CVTMAP+324
CVTEXT2  EQU   CVTMAP+328
CVTHJES  EQU   CVTMAP+332
CVTPGSIA EQU   CVTMAP+348
CVTA1F1  EQU   CVTMAP+356
CVTSYSK  EQU   CVTMAP+357
CVTVOLM1 EQU   CVTMAP+380
CVTVOLF1 EQU   CVTVOLM1
CVTATMCT EQU   CVTMAP+388
CVTXTNT1 EQU   0
CVTXTNT2 EQU   0
CVTDSSV  EQU   CVTXTNT2
CVTFLGBT EQU   CVTXTNT2+5
CVTQID   EQU   CVTXTNT2+24
CVTRV400 EQU   CVTXTNT2+52
CVTRV409 EQU   CVTXTNT2+53
CVTATCVT EQU   CVTXTNT2+64
CVTRV429 EQU   CVTXTNT2+84
CVTRV438 EQU   CVTXTNT2+85
CVTRV457 EQU   CVTXTNT2+112
CVTRV466 EQU   CVTXTNT2+113
CVTFIX   EQU   0
CVTRELNO EQU   CVTFIX+252
TIOT1    EQU   0
SPQESECT EQU   0
SPQEAD   EQU   SPQESECT
SPDQEPTR EQU   SPQESECT+4
SPQEFLGS EQU   SPQESECT+8
SPQEID   EQU   SPQESECT+10
TTCBTAB  EQU   0
TCURTCB  EQU   TTCBTAB+4
EBCDTAB  EQU   0
ATTNXECB EQU   0
POSTCODE EQU   ATTNXECB
STPARM   EQU   0
ABCODE   EQU   STPARM+4
DUMMSG   EQU   0
MSGLEN   EQU   DUMMSG
RETRYEP  EQU   0
I001C    EQU   0
I008P    EQU   0
I015F    EQU   0
I015P    EQU   0
I031F    EQU   0
I031P    EQU   0
I256C    EQU   0
MODEMSG  EQU   0
SAVEA    EQU   4
SAVEA2   EQU   8
STAXSP   EQU   0
DEBBAS02 EQU   DEBBASND
DEBDDS1  EQU   DEBBAS02
DEBSUCBA EQU   DEBDDS1
DEBDEVED EQU   DEBDDS1+4
DEBRDCB  EQU   DEBDDS1+4
DEBPDCB  EQU   DEBDDS1+8
DEBWDCB  EQU   DEBDDS1+12
DEBACS09 EQU   DEBDEVED
DEBASC09 EQU   DEBACS09
DEBEAMFG EQU   DEBASC09+3
DEBDSID  EQU   DEBASC09+4
DEBEOD   EQU   DEBASC09+12
DEBBOE   EQU   DEBEOD
DEBEODRV EQU   DEBBOE
DEBEODTT EQU   DEBBOE+1
DEBEOD0  EQU   DEBBOE+2
DEBEODSS EQU   DEBBOE+3
DEBBAS01 EQU   DEBBASND
DEBISAM  EQU   DEBBAS01
DEBFIEAD EQU   DEBISAM
DEBFPEAD EQU   DEBISAM+4
DEBFOEAD EQU   DEBISAM+8
DEBEXPT  EQU   DEBISAM+12
DEBRPSID EQU   DEBEXPT
CPPLRF   EQU   CPPL
TPLRF    EQU   TPL
TDCBFLGS EQU   DCBOFLGS
DCBOPEN  EQU   TDCBFLGS
MULTLLST EQU   ACTSL
MSGLIST  EQU   MULTLLST+4
NUMSEG   EQU   MSGLIST
MSGSEG   EQU   MSGLIST+4
SECLLIST EQU   MULTLLST+20
CVTS01   EQU   CVTPGSIA
CVTLPDIA EQU   CVTS01+12
CVTDIRST EQU   CVTLPDIA
CVTSLIDA EQU   CVTS01+24
CVTCTLFG EQU   CVTS01+50
CVTRV210 EQU   CVTS01+424
CVTRV219 EQU   CVTS01+425
CVTRV228 EQU   CVTS01+426
CVTRV237 EQU   CVTS01+427
CVTMFRTR EQU   CVTS01+452
CVTRV262 EQU   CVTS01+468
CVTRV271 EQU   CVTS01+469
CVTRV280 EQU   CVTS01+470
CVTRV289 EQU   CVTS01+471
CVTGSDA  EQU   CVTS01+600
TIOENTRY EQU   TIOT1+24
TIOELNGH EQU   TIOENTRY
TIOESTTA EQU   TIOENTRY+1
TIOERLOC EQU   TIOENTRY+2
TIOELINK EQU   TIOERLOC+1
TIOESYOT EQU   TIOELINK
TIOEDDNM EQU   TIOENTRY+4
TIOESTTC EQU   TIOENTRY+15
TIOESTTB EQU   TIOENTRY+16
POOLSTAR EQU   TIOENTRY+20
TIOEDEVE EQU   TIOESTTB
TIOSTTB  EQU   TIOEDEVE
M603BAS  EQU   MSG56603+4
SUBCODE  EQU   SDWAGR15
SDWARGSA EQU   SDWASRSV
SAVLNK5S EQU   SAVLNKL
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
SDWARGS  EQU   SDWARGSA
TIOUCBP  EQU   TIOEDEVE+1
TIOVERF  EQU   TIOSTTB
TIOUNLD  EQU   TIOSTTB
TIOMNTD  EQU   TIOSTTB
TIOSETU  EQU   TIOSTTB
TIOVLSR  EQU   TIOSTTB
TIOPVIO  EQU   TIOSTTB
TIOREQD  EQU   TIOSTTB
TIOUSED  EQU   TIOSTTB
TIOTFEND EQU   POOLSTAR+16
TIOPSLOT EQU   POOLSTAR+13
TIOPSTTB EQU   POOLSTAR+12
TIOPPOOL EQU   POOLSTAR+4
TIOPNSRT EQU   POOLSTAR+3
@NM00171 EQU   POOLSTAR+2
TIOPNSLT EQU   POOLSTAR+1
@NM00170 EQU   POOLSTAR
TIOEFSRT EQU   TIOENTRY+17
TIOSVERF EQU   TIOESTTB
TIOSUNLD EQU   TIOESTTB
TIOSMNTD EQU   TIOESTTB
TIOSSETU EQU   TIOESTTB
TIOSVLSR EQU   TIOESTTB
TIOSPVIO EQU   TIOESTTB
TIOSREQD EQU   TIOESTTB
TIOSUSED EQU   TIOESTTB
TIOSBALS EQU   TIOESTTC
TIOSBALP EQU   TIOESTTC
TIOSVOLS EQU   TIOESTTC
TIOSVOLP EQU   TIOESTTC
TIOSAFFS EQU   TIOESTTC
TIOSAFFP EQU   TIOESTTC
TIOSDEFR EQU   TIOESTTC
TIOSDKCR EQU   TIOESTTC
TIOEJFCB EQU   TIOENTRY+12
TIOTREM  EQU   TIOELINK
TIOESSDS EQU   TIOESYOT
TIOESYIN EQU   TIOELINK
TIOEQNAM EQU   TIOELINK
TIOEDYNM EQU   TIOELINK
TIOTTERM EQU   TIOELINK
TIOTRV01 EQU   TIOELINK
TIOSYOUT EQU   TIOELINK
TIOEWTCT EQU   TIOERLOC
TIOSDSP2 EQU   TIOESTTA
TIOSDSP1 EQU   TIOESTTA
TIOSLABL EQU   TIOESTTA
TIOSDADS EQU   TIOESTTA
TIOSJBLB EQU   TIOESTTA
TIOSPLTS EQU   TIOESTTA
TIOSPLTP EQU   TIOESTTA
TIOSLTYP EQU   TIOESTTA
CVTRV628 EQU   CVTS01+728
CVTRV627 EQU   CVTS01+724
CVTRV626 EQU   CVTS01+720
CVTRV625 EQU   CVTS01+716
CVTRV624 EQU   CVTS01+712
CVTRV623 EQU   CVTS01+708
CVTRV622 EQU   CVTS01+704
CVTRV621 EQU   CVTS01+700
CVTIHASU EQU   CVTS01+696
CVTRV619 EQU   CVTS01+692
CVTRV618 EQU   CVTS01+688
CVTRV617 EQU   CVTS01+684
CVTRV616 EQU   CVTS01+680
CVTRV615 EQU   CVTS01+676
CVTRV614 EQU   CVTS01+672
CVTRV613 EQU   CVTS01+668
CVTTCASP EQU   CVTS01+664
CVT0PT03 EQU   CVTS01+660
CVT0PT0E EQU   CVTS01+656
CVTRV609 EQU   CVTS01+652
CVTCGK   EQU   CVTS01+648
CVTRAC   EQU   CVTS01+644
CVTHSM   EQU   CVTS01+640
CVTRV605 EQU   CVTS01+636
CVTRV604 EQU   CVTS01+632
CVTEFF02 EQU   CVTS01+628
CVTCBBR  EQU   CVTS01+624
CVTSSCR  EQU   CVTS01+620
CVTEVENT EQU   CVTS01+616
CVTCRCA  EQU   CVTS01+612
CVTTPIO  EQU   CVTS01+608
CVTADV   EQU   CVTS01+604
CVTGSDAB EQU   CVTGSDA
CVTQV3   EQU   CVTS01+596
CVTQV2   EQU   CVTS01+592
CVTQV1   EQU   CVTS01+588
CVTRPT   EQU   CVTS01+584
CVTSSRB  EQU   CVTS01+580
CVTCSDRL EQU   CVTS01+576
CVTEXP1  EQU   CVTS01+572
CVTRMPMT EQU   CVTS01+568
CVTRMPTT EQU   CVTS01+564
CVTVPSA  EQU   CVTS01+560
CVTVSTOP EQU   CVTS01+556
CVTGTFR8 EQU   CVTS01+552
CVTQUIT  EQU   CVTS01+548
CVTVACR  EQU   CVTS01+544
CVTWTCB  EQU   CVTS01+540
CVTSTPRS EQU   CVTS01+536
CVT0PT02 EQU   CVTS01+532
CVTDARCM EQU   CVTS01+528
CVTIRECM EQU   CVTS01+524
CVTJRECM EQU   CVTS01+520
CVTVEMS0 EQU   CVTS01+516
CVTSPFRR EQU   CVTS01+512
CVTRLSTG EQU   CVTS01+508
CVT0TC0A EQU   CVTS01+504
CVTGMBR  EQU   CVTS01+500
CVTLFRM  EQU   CVTS01+496
CVTRMBR  EQU   CVTS01+492
CVTVIOP  EQU   CVTS01+488
CVTRV307 EQU   CVTS01+486
CVTRV306 EQU   CVTS01+484
CVTRV305 EQU   CVTS01+482
CVTRV304 EQU   CVTS01+480
CVTRV303 EQU   CVTS01+478
CVTRV302 EQU   CVTS01+476
CVTTRCA  EQU   CVTS01+472
CVTRV297 EQU   CVTRV289
CVTRV296 EQU   CVTRV289
CVTRV295 EQU   CVTRV289
CVTRV294 EQU   CVTRV289
CVTRV293 EQU   CVTRV289
CVTRV292 EQU   CVTRV289
CVTRV291 EQU   CVTRV289
CVTRV290 EQU   CVTRV289
CVTRV288 EQU   CVTRV280
CVTRV287 EQU   CVTRV280
CVTRV286 EQU   CVTRV280
CVTRV285 EQU   CVTRV280
CVTRV284 EQU   CVTRV280
CVTRV283 EQU   CVTRV280
CVTRV282 EQU   CVTRV280
CVTRV281 EQU   CVTRV280
CVTRV279 EQU   CVTRV271
CVTRV278 EQU   CVTRV271
CVTRV277 EQU   CVTRV271
CVTRV276 EQU   CVTRV271
CVTRV275 EQU   CVTRV271
CVTRV274 EQU   CVTRV271
CVTRV273 EQU   CVTRV271
CVTRV272 EQU   CVTRV271
CVTRV270 EQU   CVTRV262
CVTRV269 EQU   CVTRV262
CVTRV268 EQU   CVTRV262
CVTRV267 EQU   CVTRV262
CVTRV266 EQU   CVTRV262
CVTRV265 EQU   CVTRV262
CVTRV264 EQU   CVTRV262
CVTRV263 EQU   CVTRV262
CVTVFP   EQU   CVTS01+464
CVTVSI   EQU   CVTS01+460
CVTVPSIB EQU   CVTS01+456
CVTMFACT EQU   CVTMFRTR
CVTMFCTL EQU   CVTS01+448
CVTPVBP  EQU   CVTS01+444
CVTPWI   EQU   CVTS01+440
CVTRV254 EQU   CVTS01+438
CVTRV253 EQU   CVTS01+436
CVTRV252 EQU   CVTS01+434
CVTRV251 EQU   CVTS01+433
CVTRV250 EQU   CVTS01+432
CVTRV249 EQU   CVTS01+431
CVTRV248 EQU   CVTS01+430
CVTRV247 EQU   CVTS01+429
CVTRV246 EQU   CVTS01+428
CVTRV245 EQU   CVTRV237
CVTRV244 EQU   CVTRV237
CVTRV243 EQU   CVTRV237
CVTRV242 EQU   CVTRV237
CVTRV241 EQU   CVTRV237
CVTRV240 EQU   CVTRV237
CVTRV239 EQU   CVTRV237
CVTRV238 EQU   CVTRV237
CVTRV236 EQU   CVTRV228
CVTRV235 EQU   CVTRV228
CVTRV234 EQU   CVTRV228
CVTRV233 EQU   CVTRV228
CVTRV232 EQU   CVTRV228
CVTRV231 EQU   CVTRV228
CVTRV230 EQU   CVTRV228
CVTRV229 EQU   CVTRV228
CVTRV227 EQU   CVTRV219
CVTRV226 EQU   CVTRV219
CVTRV225 EQU   CVTRV219
CVTRV224 EQU   CVTRV219
CVTRV223 EQU   CVTRV219
CVTRV222 EQU   CVTRV219
CVTRV221 EQU   CVTRV219
CVTRV220 EQU   CVTRV219
CVTRV218 EQU   CVTRV210
CVTRV217 EQU   CVTRV210
CVTRV216 EQU   CVTRV210
CVTRV215 EQU   CVTRV210
CVTRV214 EQU   CVTRV210
CVTRV213 EQU   CVTRV210
CVTRV212 EQU   CVTRV210
CVTRV211 EQU   CVTRV210
CVTLCCAT EQU   CVTS01+420
CVTPCCAT EQU   CVTS01+416
CVTIPCRP EQU   CVTS01+412
CVTIPCRI EQU   CVTS01+408
CVTIPCDS EQU   CVTS01+404
CVTAIDVT EQU   CVTS01+400
CVTSSAP  EQU   CVTS01+396
CVTEHCIR EQU   CVTS01+392
CVTEHDEF EQU   CVTS01+388
CVTDAIR  EQU   CVTS01+384
CVTPERFM EQU   CVTS01+380
CVT044R2 EQU   CVTS01+376
CVTFETCH EQU   CVTS01+372
CVTRSTWD EQU   CVTS01+368
CVTSPOST EQU   CVTS01+364
CVTIOBP  EQU   CVTS01+360
CVTASMVT EQU   CVTS01+356
CVTRECRQ EQU   CVTS01+352
CVTWSAC  EQU   CVTS01+348
CVTRV149 EQU   CVTS01+344
CVTWSAL  EQU   CVTS01+340
CVTSPSA  EQU   CVTS01+336
CVTGLMN  EQU   CVTS01+332
CVTVEAC0 EQU   CVTS01+328
CVT062R1 EQU   CVTS01+324
CVTRPOST EQU   CVTS01+320
CVTDQIQE EQU   CVTS01+316
CVTCSD   EQU   CVTS01+312
CVTLKRMA EQU   CVTS01+308
CVTRSPIE EQU   CVTS01+304
CVTRENQ  EQU   CVTS01+300
CVTLQCB  EQU   CVTS01+296
CVTFQCB  EQU   CVTS01+292
CVTQCS01 EQU   CVTS01+288
CVTAPFT  EQU   CVTS01+284
CVTPARRL EQU   CVTS01+280
CVTVWAIT EQU   CVTS01+276
CVTGSPL  EQU   CVTS01+272
CVTLSMQ  EQU   CVTS01+268
CVTGSMQ  EQU   CVTS01+264
CVTEXPRO EQU   CVTS01+260
CVTOPCTP EQU   CVTS01+256
CVTSIC   EQU   CVTS01+252
CVTTPIOS EQU   CVTS01+248
CVTRTMS  EQU   CVTS01+244
CVTSDBF  EQU   CVTS01+240
CVTSCBP  EQU   CVTS01+236
CVTSDMP  EQU   CVTS01+232
CVTSV60  EQU   CVTS01+228
CVTRTMCT EQU   CVTS01+224
CVTASCBL EQU   CVTS01+220
CVTASCBH EQU   CVTS01+216
CVTGDA   EQU   CVTS01+212
CVTASVT  EQU   CVTS01+208
CVTVVMDI EQU   CVTS01+204
CVTAQTOP EQU   CVTS01+200
CVTIOSCS EQU   CVTS01+196
CVTSDRM  EQU   CVTS01+192
CVTOPTE  EQU   CVTS01+188
CVTSTXU  EQU   CVTS01+184
CVTQUIS  EQU   CVTS01+180
CVTPARS  EQU   CVTS01+176
CVTS1EE  EQU   CVTS01+172
CVTFRAS  EQU   CVTS01+168
CVTQSAS  EQU   CVTS01+164
CVTCRAS  EQU   CVTS01+160
CVTCRMN  EQU   CVTS01+156
CVTDELCP EQU   CVTS01+152
CVTFRECL EQU   CVTS01+148
CVTGETCL EQU   CVTS01+144
CVTBLDCP EQU   CVTS01+140
CVTAUTHL EQU   CVTS01+136
CVTSCAN  EQU   CVTS01+132
CVTRV144 EQU   CVTS01+130
CVTMAXMP EQU   CVTS01+128
CVTSTCK  EQU   CVTS01+124
CVTRV139 EQU   CVTS01+123
CVTDSSAC EQU   CVTS01+122
CVTRV513 EQU   CVTS01+121
CVTIOSPL EQU   CVTS01+120
CVTPTGT  EQU   CVTS01+116
CVTCSPIE EQU   CVTS01+112
CVTSMFEX EQU   CVTS01+108
CVTOLT0A EQU   CVTS01+104
CVTSRBRT EQU   CVTS01+100
CVTPUTL  EQU   CVTS01+96
CVTASCRL EQU   CVTS01+92
CVTASCRF EQU   CVTS01+88
CVTRV326 EQU   CVTS01+84
CVTRV325 EQU   CVTS01+80
CVTRV324 EQU   CVTS01+76
CVT0VL01 EQU   CVTS01+72
CVTSHRVM EQU   CVTS01+68
CVTRV332 EQU   CVTS01+64
CVTTAS   EQU   CVTS01+60
CVTRSCN  EQU   CVTS01+56
CVTTRAC2 EQU   CVTS01+54
CVTTRACE EQU   CVTS01+52
CVTAPG   EQU   CVTS01+51
CVTSDTRC EQU   CVTCTLFG
CVTGTRCE EQU   CVTCTLFG
CVTNOMP  EQU   CVTCTLFG
CVTRSV79 EQU   CVTCTLFG
CVTDSTAT EQU   CVTCTLFG
CVTRSV78 EQU   CVTCTLFG
CVTRV333 EQU   CVTCTLFG
CVTRV323 EQU   CVTCTLFG
CVTSPVLK EQU   CVTS01+49
CVTRSV77 EQU   CVTS01+48
CVTRV331 EQU   CVTS01+44
CVTRV330 EQU   CVTS01+40
CVTRV329 EQU   CVTS01+36
CVTRV328 EQU   CVTS01+32
CVTRV322 EQU   CVTS01+28
CVTSLID  EQU   CVTSLIDA+1
CVTSYLK  EQU   CVTSLIDA
CVTRV321 EQU   CVTS01+20
CVTRV320 EQU   CVTS01+16
CVTLPDIR EQU   CVTLPDIA+1
CVTRSV69 EQU   CVTDIRST
CVTRSV68 EQU   CVTDIRST
CVTRSV67 EQU   CVTDIRST
CVTRSV66 EQU   CVTDIRST
CVTRSV65 EQU   CVTDIRST
CVTRSV64 EQU   CVTDIRST
CVTRSV63 EQU   CVTDIRST
CVTDICOM EQU   CVTDIRST
CVTPVTP  EQU   CVTS01+8
CVTLPDSR EQU   CVTS01+4
CVTGETL  EQU   CVTS01
SMSGSEG  EQU   SECLLIST+8
SNUMSEG  EQU   SECLLIST+4
SMSGLCHP EQU   SECLLIST
MSGLCHP  EQU   MULTLLST
@NM00133 EQU   TDCBFLGS
TPLPS    EQU   TPLRF+4
@NM00132 EQU   TPLRF
CPPLPS   EQU   CPPLRF+4
@NM00131 EQU   CPPLRF
DEBEXPTA EQU   DEBEXPT+1
DEBRSV12 EQU   DEBRPSID
DEBRSV11 EQU   DEBRPSID
DEBRSV10 EQU   DEBRPSID
DEBRSV09 EQU   DEBRPSID
DEBRPSAP EQU   DEBRPSID
DEBRPSO  EQU   DEBRPSID
DEBRPSI  EQU   DEBRPSID
DEBRPSP  EQU   DEBRPSID
DEBFOEB  EQU   DEBFOEAD+1
DEBNOEE  EQU   DEBFOEAD
DEBFPEB  EQU   DEBFPEAD+1
DEBNPEE  EQU   DEBFPEAD
DEBFIEB  EQU   DEBFIEAD+1
DEBNIEE  EQU   DEBFIEAD
DEBBOESS EQU   DEBEODSS
DEBBOE0  EQU   DEBEOD0
DEBBOETT EQU   DEBEODTT
DEBBOERV EQU   DEBEODRV
DEBRV008 EQU   DEBDSID+7
DEBWTPTI EQU   DEBDSID+6
DEBEXDTE EQU   DEBDSID
DEBRV007 EQU   DEBEAMFG
DEBRV006 EQU   DEBEAMFG
DEBRV005 EQU   DEBEAMFG
DEBRV004 EQU   DEBEAMFG
DEBSECVL EQU   DEBEAMFG
DEBVAMSG EQU   DEBEAMFG
DEBDSOPN EQU   DEBEAMFG
DEBMULTI EQU   DEBEAMFG
DEBVSEQU EQU   DEBASC09+2
DEBDSSQL EQU   DEBASC09+1
DEBVOLAC EQU   DEBASC09
DEBWDCBA EQU   DEBWDCB+1
DEBRSV08 EQU   DEBWDCB
DEBPDCBA EQU   DEBPDCB+1
DEBRSV07 EQU   DEBPDCB
DEBRDCBA EQU   DEBRDCB+1
DEBRSV06 EQU   DEBRDCB
DEBSUCBB EQU   DEBSUCBA+1
DEBSDVM  EQU   DEBSUCBA
MSGOFF   EQU   DUMMSG+2
PARM     EQU   STPARM
WBIT     EQU   ATTNXECB
TCUASCB  EQU   TTCBTAB+12
TNXASCB  EQU   TTCBTAB+8
TNEXTCB  EQU   TTCBTAB
SPQERES2 EQU   SPQESECT+12
SPQEKEY  EQU   SPQESECT+11
SPQERES1 EQU   SPQESECT+9
SPQEOWN  EQU   SPQEFLGS
LASTSPQE EQU   SPQEFLGS
SPSHARE  EQU   SPQEFLGS
SPDQEAD  EQU   SPDQEPTR
SPQEPTR  EQU   SPQEAD
TIOCSTEP EQU   TIOT1+8
TIOCNJOB EQU   TIOT1
CVTLEVL  EQU   CVTRELNO+2
CVTNUMB  EQU   CVTRELNO
CVTMDL   EQU   CVTFIX+250
@NM00169 EQU   CVTFIX+248
@NM00168 EQU   CVTFIX
CVTRV482 EQU   CVTXTNT2+128
CVTRV481 EQU   CVTXTNT2+124
CVTRV480 EQU   CVTXTNT2+120
CVTRV479 EQU   CVTXTNT2+118
CVTRV478 EQU   CVTXTNT2+117
CVTRV477 EQU   CVTXTNT2+116
CVTRV476 EQU   CVTXTNT2+115
CVTRV475 EQU   CVTXTNT2+114
CVTRV474 EQU   CVTRV466
CVTRV473 EQU   CVTRV466
CVTRV472 EQU   CVTRV466
CVTRV471 EQU   CVTRV466
CVTRV470 EQU   CVTRV466
CVTRV469 EQU   CVTRV466
CVTRV468 EQU   CVTRV466
CVTRV467 EQU   CVTRV466
CVTRV465 EQU   CVTRV457
CVTRV464 EQU   CVTRV457
CVTRV463 EQU   CVTRV457
CVTRV462 EQU   CVTRV457
CVTRV461 EQU   CVTRV457
CVTRV460 EQU   CVTRV457
CVTRV459 EQU   CVTRV457
CVTRV458 EQU   CVTRV457
CVTRV456 EQU   CVTXTNT2+108
CVTRV455 EQU   CVTXTNT2+104
CVTRV454 EQU   CVTXTNT2+100
CVTRV453 EQU   CVTXTNT2+96
CVTRV452 EQU   CVTXTNT2+94
CVTRV451 EQU   CVTXTNT2+92
CVTRV450 EQU   CVTXTNT2+90
CVTRV449 EQU   CVTXTNT2+88
CVTRV448 EQU   CVTXTNT2+87
CVTRV447 EQU   CVTXTNT2+86
CVTRV446 EQU   CVTRV438
CVTRV445 EQU   CVTRV438
CVTRV444 EQU   CVTRV438
CVTRV443 EQU   CVTRV438
CVTRV442 EQU   CVTRV438
CVTRV441 EQU   CVTRV438
CVTRV440 EQU   CVTRV438
CVTRV439 EQU   CVTRV438
CVTRV437 EQU   CVTRV429
CVTRV436 EQU   CVTRV429
CVTRV435 EQU   CVTRV429
CVTRV434 EQU   CVTRV429
CVTRV433 EQU   CVTRV429
CVTRV432 EQU   CVTRV429
CVTRV431 EQU   CVTRV429
CVTRV430 EQU   CVTRV429
CVTRV428 EQU   CVTXTNT2+80
CVTRV427 EQU   CVTXTNT2+76
CVTRV426 EQU   CVTXTNT2+72
CVTRV425 EQU   CVTXTNT2+68
CVTATACT EQU   CVTATCVT
CVTRV423 EQU   CVTXTNT2+62
CVTRV422 EQU   CVTXTNT2+60
CVTRV421 EQU   CVTXTNT2+58
CVTRV420 EQU   CVTXTNT2+56
CVTRV419 EQU   CVTXTNT2+55
CVTRV418 EQU   CVTXTNT2+54
CVTRV417 EQU   CVTRV409
CVTRV416 EQU   CVTRV409
CVTRV415 EQU   CVTRV409
CVTRV414 EQU   CVTRV409
CVTRV413 EQU   CVTRV409
CVTRV412 EQU   CVTRV409
CVTRV411 EQU   CVTRV409
CVTRV410 EQU   CVTRV409
CVTRV408 EQU   CVTRV400
CVTRV407 EQU   CVTRV400
CVTRV406 EQU   CVTRV400
CVTRV405 EQU   CVTRV400
CVTRV404 EQU   CVTRV400
CVTRV403 EQU   CVTRV400
CVTRV402 EQU   CVTRV400
CVTRV401 EQU   CVTRV400
CVTICB   EQU   CVTXTNT2+48
CVTSKTA  EQU   CVTXTNT2+44
CVTCCVT  EQU   CVTXTNT2+40
CVTRSV98 EQU   CVTXTNT2+36
CVTRSV97 EQU   CVTXTNT2+34
CVTRSV96 EQU   CVTXTNT2+32
CVTOLTEP EQU   CVTXTNT2+28
CVTQIDA  EQU   CVTQID+1
CVTRSV95 EQU   CVTQID
CVTRSV94 EQU   CVTXTNT2+20
CVTRSV93 EQU   CVTXTNT2+16
CVTRSV92 EQU   CVTXTNT2+12
CVTDEBVR EQU   CVTXTNT2+8
CVTRSV91 EQU   CVTXTNT2+6
CVTRSV9H EQU   CVTFLGBT
CVTRSV9G EQU   CVTFLGBT
CVTRSV9F EQU   CVTFLGBT
CVTRSV9E EQU   CVTFLGBT
CVTRSV9D EQU   CVTFLGBT
CVTRSV9C EQU   CVTFLGBT
CVTVME   EQU   CVTFLGBT
CVTNPE   EQU   CVTFLGBT
CVTNUCLS EQU   CVTXTNT2+4
CVTDSSVA EQU   CVTDSSV+1
CVTRSV89 EQU   CVTDSSV
CVTRSV88 EQU   CVTXTNT1+8
CVTRSV87 EQU   CVTXTNT1+4
CVTFACHN EQU   CVTXTNT1
CVTRV488 EQU   CVTMAP+412
CVTRV487 EQU   CVTMAP+408
CVTRV486 EQU   CVTMAP+404
CVTRV485 EQU   CVTMAP+400
CVTACTAP EQU   CVTMAP+396
CVTAUTH  EQU   CVTMAP+392
CVTATMCA EQU   CVTATMCT+1
CVTATMST EQU   CVTATMCT
CVTRSV61 EQU   CVTMAP+384
CVTVOLT1 EQU   CVTVOLM1+1
CVTVOLI1 EQU   CVTVOLF1
CVTSTOA  EQU   CVTMAP+376
CVTRSV58 EQU   CVTMAP+374
CVTRSV57 EQU   CVTMAP+372
CVTDDCE  EQU   CVTMAP+368
CVTPNWFR EQU   CVTMAP+364
CVTSMF   EQU   CVTMAP+360
CVTSULK  EQU   CVTMAP+358
CVTSLKO  EQU   CVTSYSK
CVTSLKP  EQU   CVTSYSK
CVTSLKQ  EQU   CVTSYSK
CVTSLKR  EQU   CVTSYSK
CVTRSV56 EQU   CVTSYSK
CVTRSV55 EQU   CVTSYSK
CVTRSV54 EQU   CVTSYSK
CVTRSV53 EQU   CVTSYSK
CVTRSV52 EQU   CVTA1F1
CVTRSV51 EQU   CVTA1F1
CVTRSV50 EQU   CVTA1F1
CVTRSV49 EQU   CVTA1F1
CVTRSV48 EQU   CVTA1F1
CVTRSV47 EQU   CVTA1F1
CVTSRSW  EQU   CVTA1F1
CVTPFSW  EQU   CVTA1F1
CVTPCVT  EQU   CVTMAP+352
CVTRSV46 EQU   CVTMAP+344
CVTRSV45 EQU   CVTMAP+340
CVTRSV44 EQU   CVTMAP+338
CVTRSV43 EQU   CVTMAP+336
CVTHJESA EQU   CVTHJES+1
CVTRSV42 EQU   CVTHJES
CVTEXT2A EQU   CVTEXT2+1
CVTRSV41 EQU   CVTEXT2
CVTAPFA  EQU   CVTAPF+1
CVTRSV40 EQU   CVTAPF
CVTRV518 EQU   CVTINTLA
CVTRV517 EQU   CVTERPV
CVTEORM  EQU   CVTMAP+312
CVTMCHPR EQU   CVTMAP+308
CVTTZ    EQU   CVTMAP+304
CVTJEPS  EQU   CVTMAP+300
CVTJESCT EQU   CVTMAP+296
CVTMODE  EQU   CVTMAP+292
CVTPTRV  EQU   CVTMAP+288
CVTREAL  EQU   CVTMAP+284
CVTRSV39 EQU   CVTMAP+280
CVTRSV38 EQU   CVTMAP+276
CVTDMSRA EQU   CVTDMSR+1
CVTRV634 EQU   CVTDMSRF
CVTRV633 EQU   CVTDMSRF
CVTRV632 EQU   CVTDMSRF
CVTRV631 EQU   CVTDMSRF
CVTRV630 EQU   CVTDMSRF
CVTRV629 EQU   CVTDMSRF
CVTUDUMP EQU   CVTDMSRF
CVTSDUMP EQU   CVTDMSRF
CVTQMSGA EQU   CVTQMSG+1
CVTRSV36 EQU   CVTQMSG
CVTAMFF  EQU   CVTMAP+264
CVTPURGA EQU   CVTPURG+1
CVTRSV35 EQU   CVTPURG
CVTCBSP  EQU   CVTMAP+256
CVTATERA EQU   CVTATER+1
CVTSYST  EQU   CVTATER
CVTVOLT2 EQU   CVTTAT
CVTVOLI2 EQU   CVTVOLF2
CVTAQAVB EQU   CVTAQAVT+1
CVTRSV34 EQU   CVTTCMFG
CVTRSV33 EQU   CVTTCMFG
CVTRSV32 EQU   CVTTCMFG
CVTRSV31 EQU   CVTTCMFG
CVTRSV30 EQU   CVTTCMFG
CVTRSV29 EQU   CVTTCMFG
CVTRSV28 EQU   CVTTCMFG
CVTTCRDY EQU   CVTTCMFG
CVTGTFA  EQU   CVTGTF+1
CVTRSV27 EQU   CVTGTFST
CVTRNIO  EQU   CVTGTFST
CVTUSR   EQU   CVTGTFST
CVTRV318 EQU   CVTFORM
CVTRV317 EQU   CVTTMODE
CVTRV316 EQU   CVTSTATE
CVTRV315 EQU   CVTGTFS
CVTGTFAV EQU   CVTGTFS
CVT0SCR1 EQU   CVTMAP+232
CVTRV515 EQU   CVTMAP+228
CVTRMS   EQU   CVTMAP+224
CVTPATCH EQU   CVTMAP+220
CVTTSCE  EQU   CVTMAP+216
CVTLNKSC EQU   CVTMAP+214
CVTQABST EQU   CVTMAP+212
CVTMDLDS EQU   CVTMAP+208
CVTUSER  EQU   CVTMAP+204
CVTABEND EQU   CVTMAP+200
CVTSMCA  EQU   CVTMAP+196
CVTRSV18 EQU   CVTMAP+192
CVTQLPAQ EQU   CVTMAP+188
CVTQCDSR EQU   CVTMAP+184
CVTRSV17 EQU   CVTOPTB
CVTRSV16 EQU   CVTOPTB
CVTFP    EQU   CVTOPTB
CVTAPTHR EQU   CVTOPTB
CVTNLOG  EQU   CVTOPTB
CVTTOD   EQU   CVTOPTB
CVTCTIMS EQU   CVTOPTB
CVTPROT  EQU   CVTOPTB
CVTXPFP  EQU   CVTOPTA
CVTASCII EQU   CVTOPTA
CVTRSV13 EQU   CVTOPTA
CVTRSV12 EQU   CVTOPTA
CVTNIP   EQU   CVTOPTA
CVTDDR   EQU   CVTOPTA
CVTAPR   EQU   CVTOPTA
CVTCCH   EQU   CVTOPTA
CVTSNCTR EQU   CVTMAP+180
CVTQMWR  EQU   CVTMAP+176
CVTQOCR  EQU   CVTMAP+172
CVT1EF00 EQU   CVTMAP+168
CVTMZ00  EQU   CVTMAP+164
CVTSV76Q EQU   CVTSV76C
CVTRSV11 EQU   CVTMAP+156
CVT0PT01 EQU   CVTMAP+152
CVTMSER  EQU   CVTMAP+148
CVTRV516 EQU   CVTIERLC
CVTILCH  EQU   CVTMAP+140
CVT0DS   EQU   CVTMAP+136
CVTFBOSV EQU   CVTMAP+132
CVTNUCB  EQU   CVTMAP+128
CVTIXAVL EQU   CVTMAP+124
CVTSV76M EQU   CVTIOQET
CVTDCBA  EQU   CVTMAP+117
CVTMVS2  EQU   CVTDCB
CVT6DAT  EQU   CVTDCB
CVT4MPS  EQU   CVTDCB
CVTRSV09 EQU   CVTDCB
CVT4MS1  EQU   CVTDCB
CVT2SPS  EQU   CVTDCB
CVT1SSS  EQU   CVTDCB
CVTRSV08 EQU   CVTDCB
CVTSTB   EQU   CVTMAP+112
CVTQTD00 EQU   CVTMAP+108
CVTQTE00 EQU   CVTMAP+104
CVTCUCB  EQU   CVTMAP+100
CVTSJQ   EQU   CVTMAP+96
CVTPBLDL EQU   CVTMAP+92
CVTTPC   EQU   CVTMAP+88
CVTSVDCB EQU   CVTMAP+84
CVTBRET  EQU   CVTMAP+82
CVTEXIT  EQU   CVTMAP+80
CVT0FN00 EQU   CVTMAP+76
CVTDARA  EQU   CVTDAR+1
CVTRSV07 EQU   CVTFLGS1
CVTRSV06 EQU   CVTFLGS1
CVTRSV05 EQU   CVTFLGS1
CVTRSV04 EQU   CVTFLGS1
CVTRSV03 EQU   CVTFLGS1
CVTRSV02 EQU   CVTFLGS1
CVTRSV01 EQU   CVTFLGS1
CVTDMPLK EQU   CVTFLGS1
CVTXITP  EQU   CVTMAP+68
CVTZDTAB EQU   CVTMAP+64
CVTMSLT  EQU   CVTMAP+60
CVTDATE  EQU   CVTMAP+56
CVTBTERM EQU   CVTMAP+52
CVTSYSAD EQU   CVTMAP+48
CVTXTLER EQU   CVTMAP+44
CVTILK2  EQU   CVTMAP+40
CVTILK1  EQU   CVTMAP+36
CVTPRLTV EQU   CVTMAP+32
CVTPCNVT EQU   CVTMAP+28
CVT0VL00 EQU   CVTMAP+24
CVTXAPG  EQU   CVTMAP+20
CVTBUF   EQU   CVTMAP+16
CVTJOB   EQU   CVTMAP+12
CVTLINK  EQU   CVTMAP+8
CVT0EF00 EQU   CVTMAP+4
CVT      EQU   CVTMAP
STRTDYNA EQU   STRTPARM+12
STRTBASE EQU   STRTPARM+8
STRTTMPA EQU   STRTPARM+4
STRTPTR  EQU   STRTPARM
CBUFDATA EQU   CBUF+4
CBUFOFF  EQU   CBUF+2
CBUFLNG  EQU   CBUF
@NM00167 EQU   TMPWA2B+20
@NM00166 EQU   TMPWA2B+9
GMRETC   EQU   TMPWA2B+4
REG14SAV EQU   TMPWA2B
@NM00165 EQU   TMPWA2A+244
MINQNAM  EQU   STYNQWA+20
STYNQLA  EQU   STYNQWA
SAVT042  EQU   SVT042A
SAVT040  EQU   SVT040A
CRCODE   EQU   CALLWA+256
PUTLRC   EQU   CALLWA+252
DAIRRC   EQU   CALLWA+248
BLDLRC   EQU   CALLWA+244
DSSGTXT  EQU   DSSEG+4
DSSGOFF  EQU   DSSEG+2
DSSGLEN  EQU   DSSEG
MBRDTXT  EQU   MBRDSEG+2
MBRDLEN  EQU   MBRDSEG
MBRSTXT  EQU   MBRSEG+4
MBRSOFF  EQU   MBRSEG+2
MBRSLEN  EQU   MBRSEG
MSGNO    EQU   CALLWA+164
@NM00164 EQU   DSNBUFFR+46
DSNBUF   EQU   DSNBUFFR+2
DSNLENG  EQU   DSNBUFFR
PDLADDR2 EQU   PARSPARM+4
PDLADDR  EQU   PARSPARM
PARMS    EQU   PARMFLD+2
LENPARM  EQU   PARMFLD
@NM00163 EQU   PPLIST+1
SWBIT    EQU   PPLIST
@NM00162 EQU   TMPWRKA1+1428
MODEMSP  EQU   TMPWRKA1+1408
TMPZEROS EQU   TMPWRKA1+1404
STPLSP   EQU   TMPWRKA1+1388
STPBSP   EQU   TMPWRKA1+1368
SNAPSP   EQU   TMPWRKA1+1328
SCANFLG  EQU   TMPWRKA1+1324
SAVAR    EQU   TMPWRKA1+1268
R3SAVE   EQU   TMPWRKA1+1264
RCODE    EQU   TMPWRKA1+1260
PRSMSSP  EQU   TMPWRKA1+1236
PPLSP    EQU   TMPWRKA1+1208
PGPBSP   EQU   TMPWRKA1+1192
OPENSP   EQU   TMPWRKA1+1180
NXTCMD   EQU   TMPWRKA1+1172
MODESSP  EQU   TMPWRKA1+1168
GTPBSP   EQU   TMPWRKA1+1160
FMLCSP   EQU   TMPWRKA1+1148
ECTSP    EQU   TMPWRKA1+1092
DYNASP   EQU   TMPWRKA1+1060
DCBSP    EQU   TMPWRKA1+920
DAPLSP   EQU   TMPWRKA1+896
DAPBSP   EQU   TMPWRKA1+812
CTLBLKN  EQU   CTLBKSP+8
CTLBLKA  EQU   CTLBKSP+4
CTLBLKL  EQU   CTLBKSP
CSPLSP2  EQU   TMPWRKA1+776
CSOASP2  EQU   TMPWRKA1+744
CSOASP   EQU   TMPWRKA1+736
CPPLSP   EQU   TMPWRKA1+720
CLOSESP  EQU   TMPWRKA1+708
CDCBSP   EQU   TMPWRKA1+568
@NM00161 EQU   BLDLLST+12
BLDLNAME EQU   XTRCLST+4
BLDLELNG EQU   XTRCLST+2
BLDLENT  EQU   XTRCLST
ATTCHSP  EQU   TMPWRKA1+440
ASRPARM  EQU   TMPWRKA1+420
ASCANFLG EQU   TMPWRKA1+416
ARCODE   EQU   TMPWRKA1+412
AMSGSEG  EQU   AMSGLIST+4
ANUMSEG  EQU   AMSGLIST
ACTSEGB  EQU   ACTSEG+2
ACTSEGA  EQU   ACTSEG
SRPLPTR  EQU   TMPWRKA1+232
SCANAP   EQU   TMPWRKA1+228
CDCBPTR  EQU   TMPWRKA1+208
ASRPLPTR EQU   TMPWRKA1+200
ASCANAP  EQU   TMPWRKA1+196
ACEEPTR  EQU   TMPWRKA1+192
@NM00160 EQU   FLOFLGS4
@NM00159 EQU   FLOFLGS3
DOSETTB  EQU   FLOFLGS3
DOSETBF  EQU   FLOFLGS3
DOTEST   EQU   FLOFLGS3
DOIMPLX  EQU   FLOFLGS3
@NM00158 EQU   FLOFLGS3
@NM00157 EQU   FLOFLGS2
DOCHKCP  EQU   DOATTN
DOWAIT   EQU   FLOFLGS2
DOCHKAT  EQU   FLOFLGS2
DOACTV   EQU   FLOFLGS2
DOPSTRT  EQU   FLOFLGS2
DOFRECB  EQU   FLOFLGS2
DOPUTM   EQU   FLOFLGS2
@NM00156 EQU   FLOFLGS1
DOSCAN   EQU   FLOFLGS1
DOINVOK  EQU   FLOFLGS1
DOLIST   EQU   FLOFLGS1
@NM00155 EQU   FLOFLGS1
@NM00154 EQU   FLOFLGS1
RESCOM4  EQU   TMPWRKA1+132
RESCOM3  EQU   TMPWRKA1+116
RESCOM2  EQU   TMPWRKA1+100
RESCOMM  EQU   TMPWRKA1+84
@NM00153 EQU   CALLSWS
GMBRNOW  EQU   CALLSWS
DORELS   EQU   CALLSWS
BLANKB   EQU   CALLSWS
@NM00152 EQU   CALLSWS
DSOPEN   EQU   CALLSWS
PDLPRES  EQU   CALLSWS
@NM00151 EQU   TMPSWS+2
@NM00150 EQU   TMPSWS+1
FRSTEX   EQU   TMPSWS+1
LINKNOW  EQU   TMPSWS+1
LOADNOW  EQU   TMPSWS+1
ATCHNOW  EQU   TMPSWS+1
FRSTLAB  EQU   TMPSWS
TMPNFCMD EQU   TMPSWS
TMPCMDW  EQU   TMPSWS
TMPTEST  EQU   TMPSWS
TMPCMDWT EQU   TMPWRKA1+76
TMPAECB  EQU   TMPWRKA1+72
TMPNECB  EQU   TMPWRKA1+60
TPLRESV  EQU   TPL+56
TPLLEND  EQU   TPLECBL+8
TPLIECB  EQU   TPLECBL+4
TPLCECB  EQU   TPLECBL
TPLMECB  EQU   TPL+40
TPLNTCB  EQU   TPL+36
TPLNECB  EQU   TPL+32
TPLSPLS  EQU   TPL+28
TPLSTAI  EQU   TPL+24
TPLTBUF  EQU   TPL+16
TPLECT   EQU   TPL+12
TPLPSCB  EQU   TPL+8
TPLUPT   EQU   TPL+4
MDYNASP  EQU   TWRKA2B+32
RTRY53   EQU   RTRYSA+8
RTRY52   EQU   RTRYSA+4
RTRY51   EQU   RTRYSA
MTPLECT  EQU   MTPLPS+8
MTPLPSCB EQU   MTPLPS+4
MTPLUPT  EQU   MTPLPS
MTPLCBUF EQU   MTPL
@NM00149 EQU   MCTLFLGS+1
@NM00148 EQU   MCFLGS1
DRSAPF   EQU   MCFLGS1
SAVLNKM  EQU   SAVLNKRS+44
SAVLNKK  EQU   SAVLNKRS+36
SAVLNKJ  EQU   SAVLNKRS+32
SAVLNKH  EQU   SAVLNKRS+28
SAVLNKG  EQU   SAVLNKRS+24
SAVLNKF  EQU   SAVLNKRS+20
SAVLNKE  EQU   SAVLNKRS+16
SAVLNKD  EQU   SAVLNKRS+12
SAVLNKC  EQU   SAVLNKRS+8
SAVLNKB  EQU   SAVLNKRS+4
SAVLNKA  EQU   SAVLNKRS
SVLNKE   EQU   TWRKA2A+116
SAVRM    EQU   TWRKA2A+112
SAVRC    EQU   TWRKA2A+108
SAVRB    EQU   TWRKA2A+104
SAVRA    EQU   TWRKA2A+100
@NM00147 EQU   TWRKA2A+96
@NM00146 EQU   TWRKA2A+92
@NM00145 EQU   TWRKA2A+88
@NM00144 EQU   TWRKA2A+84
@NM00143 EQU   TWRKA2A+80
@NM00142 EQU   TWRKA2A+76
@NM00141 EQU   TWRKA2A+72
JSCBPTR  EQU   TWRKA2A+68
LWAPTR   EQU   TWRKA2A+64
RLGBPTR  EQU   TWRKA2A+60
ASXBPTR  EQU   TWRKA2A+56
ASCBPTR  EQU   TWRKA2A+52
TMPT05   EQU   TWRKA2A+28
TMPT042  EQU   TWRKA2A+24
TMPT04   EQU   TWRKA2A+20
TMPTIME  EQU   TWRKA2A+16
SAVARPTR EQU   TWRKA2A+12
WRKA2PTR EQU   TWRKA2A+4
REG12    EQU   SAVARY+68
REG11    EQU   SAVARY+64
REG10    EQU   SAVARY+60
REG9     EQU   SAVARY+56
REG8     EQU   SAVARY+52
REG7     EQU   SAVARY+48
REG6     EQU   SAVARY+44
REG5     EQU   SAVARY+40
REG4     EQU   SAVARY+36
REG3     EQU   SAVARY+32
REG2     EQU   SAVARY+28
REG14    EQU   SAVARY+12
@NM00140 EQU   SAVARY
SAVRFOR  EQU   CURPTRS+8
@NM00139 EQU   CURPTRS
STYDQL08 EQU   STYDQL+16
STYDQL07 EQU   STYDQL02+8
STYDQL06 EQU   STYDQL02+4
@NM00138 EQU   STYDQL02+3
STYDQL05 EQU   STYDQL02+2
STYDQL04 EQU   STYDQL02+1
STYDQL03 EQU   STYDQL02
STYDQL01 EQU   STYDQL
STYNQL07 EQU   STYNQL02+8
STYNQL06 EQU   STYNQL02+4
STYNQL55 EQU   STYNQL02+3
STYNQL05 EQU   STYNQL02+2
STYNQL04 EQU   STYNQL02+1
STYNQL03 EQU   STYNQL02
STYNQL01 EQU   STYNQL+4
STYNQL00 EQU   STYNQL
MDLFML06 EQU   MDLFML+9
MDLFML05 EQU   MDLFML+8
MDLFML04 EQU   MDLFML+5
MDLFML03 EQU   MDLFML+4
MDLFML02 EQU   MDLFML+1
MDLFML01 EQU   MDLFML
MDLGML05 EQU   MDLGML+9
MDLGML04 EQU   MDLGML+8
MDLGML03 EQU   MDLGML+5
MDLGML02 EQU   MDLGML+4
MDLGML01 EQU   MDLGML
@NM00137 EQU   @NM00135
XECNOW   EQU   @NM00135
@NM00136 EQU   @NM00135
DYNATU   EQU   DYNAPARM+28
DYNATUP  EQU   DYNAPARM+24
DYNARB   EQU   DYNAPARM+4
DYNARBP  EQU   DYNAPARM
PRSMDEC  EQU   PRSMTXT+1
@NM00130 EQU   PRSMTXT
PRSMOFF  EQU   PARSRC+2
PRSMLEN  EQU   PARSRC
@NM00129 EQU   SUBCAR
@NM00128 EQU   @NM00127
@NM00126 EQU   CODEAR
STPLSTPB EQU   STPL+12
STPLECB  EQU   STPL+8
STPLECT  EQU   STPL+4
STPLUPT  EQU   STPL
PPLUWA   EQU   PPL+24
PPLCBUF  EQU   PPL+20
PPLANS   EQU   PPL+16
PPLPCL   EQU   PPL+12
PPLECB   EQU   PPL+8
PPLECT   EQU   PPL+4
PPLUPT   EQU   PPL
DCBNOTE  EQU   DCBCNTRL
DCBLRECL EQU   IHADCS38+10
@NM00122 EQU   IHADCS38+8
DCBEOBW  EQU   IHADCS38+4
DCBEOBRA EQU   DCBEOBR+1
DCBNCP   EQU   DCBEOBR
@NM00121 EQU   DCBFLAG1
DCBSTFLS EQU   DCBFLAG1
DCBSTQCK EQU   DCBFLAG1
DCBDIRCQ EQU   DCBBUFOF
DCBQSTRU EQU   DCBUSASI
@NM00120 EQU   DCBUSASI
DCBQADF3 EQU   DCBQADFS
DCBQADF2 EQU   DCBQADFS
DCBQADF1 EQU   DCBQADFS
DCBBLBP  EQU   DCBUSASI
@NM00119 EQU   DCBUSASI
DCBCICBA EQU   DCBCICB+1
@NM00118 EQU   DCBCICB
DCBOFFSW EQU   IHADCS36+15
DCBOFFSR EQU   IHADCS36+14
DCBWCPL  EQU   IHADCS36+13
DCBWCPO  EQU   IHADCS36+12
DCBBLKSI EQU   IHADCS36+10
DCBCNQSM EQU   DCBCIND2
DCBCNFEO EQU   DCBCIND2
DCBCNCHS EQU   DCBCIND2
DCBCNBFP EQU   DCBCIND2
DCBCNIOE EQU   DCBCIND2
DCBCNCLO EQU   DCBCIND2
DCBCNWRO EQU   DCBCIND2
DCBCNSTO EQU   DCBCIND2
DCBCNEXB EQU   DCBCIND1
@NM00117 EQU   DCBCIND1
DCBCNBRM EQU   DCBCIND1
@NM00116 EQU   DCBCIND1
DCBCNEVA EQU   DCBCIND1
DCBCNEVB EQU   DCBCIND1
DCBCNSRD EQU   DCBCIND1
DCBCNTOV EQU   DCBCIND1
DCBSYNA  EQU   DCBSYNAD+1
DCBIOBL  EQU   DCBSYNAD
DCBCHCKA EQU   DCBPERRA
DCBOPTJ  EQU   DCBOPTCD
DCBOPTT  EQU   DCBOPTCD
DCBSRCHD EQU   DCBOPTZ
DCBOPTQ  EQU   DCBOPTCD
DCBBCKPT EQU   DCBOPTO
DCBOPTC  EQU   DCBOPTCD
DCBOPTU  EQU   DCBOPTCD
DCBOPTW  EQU   DCBOPTCD
DCBREADA EQU   DCBWRITA
@NM00115 EQU   DCBREAD
DCBDEBA  EQU   DCBDEBAD+1
@NM00114 EQU   DCBIFLGS
DCBIFIOE EQU   DCBIFLGS
DCBCH12  EQU   DCBIFPCT
DCBCH9   EQU   DCBIFPCT
DCBIFEC  EQU   DCBIFLGS
DCBMFSTI EQU   DCBMFDMD
DCBMFAWR EQU   DCBMFSTK
DCBMFUIP EQU   DCBMFTMD
DCBMFIDW EQU   DCBMFLCP
DCBMFWRK EQU   DCBMFMVP
DCBMFRDQ EQU   DCBMFWRT
DCBMFGTQ EQU   DCBMFPUT
DCBMFSTL EQU   DCBMACF2
DCBMFCK  EQU   DCBMFDMG
DCBMFRDX EQU   DCBMFCHK
DCBMFDBF EQU   DCBMFSBG
DCBMFRDI EQU   DCBMFLCG
DCBMFRDK EQU   DCBMFMVG
DCBMFWRQ EQU   DCBMFRD
DCBMFPTQ EQU   DCBMFGET
DCBMFECP EQU   DCBMACF1
DCBTIOT  EQU   IHADCS25
DCBMRSTI EQU   DCBMRDMD
DCBMRAWR EQU   DCBMRSTK
DCBMRUIP EQU   DCBMRTMD
DCBMRIDW EQU   DCBMRLCP
DCBMRWRK EQU   DCBMRMVP
DCBMRRDQ EQU   DCBMRWRT
DCBMRGTQ EQU   DCBMRPUT
DCBMRSTL EQU   DCBMACR2
DCBMRCK  EQU   DCBMRDMG
DCBPGFXA EQU   DCBMRRDX
DCBMRDBF EQU   DCBMRSBG
DCBMRRDI EQU   DCBMRLCG
DCBMRRDK EQU   DCBMRMVG
DCBMRWRQ EQU   DCBMRRD
DCBMRPTQ EQU   DCBMRGET
DCBMRECP EQU   DCBMACR1
@NM00113 EQU   DCBIFLG
DCBIBIOE EQU   DCBIFLG
DCBICH12 EQU   DCBIBPCT
DCBICH9  EQU   DCBIBPCT
DCBIBEC  EQU   DCBIFLG
DCBOFIOF EQU   DCBOFLGS
DCBOFUEX EQU   DCBOFLGS
DCBOFTM  EQU   DCBOFLGS
DCBOFPPC EQU   DCBOFLGS
DCBOFOPN EQU   DCBOFLGS
DCBOFEOV EQU   DCBOFLGS
DCBOFLRB EQU   DCBOFLGS
DCBOFIOD EQU   DCBOFLWR
DCBEXLSA EQU   DCBEXLST+1
DCBRECKL EQU   DCBRECFM
DCBRECCC EQU   DCBRECFM
DCBRECSB EQU   DCBRECFM
DCBRECBR EQU   DCBRECFM
DCBRECTO EQU   DCBRECLA
DCBRECL  EQU   DCBRECLA
DCBEODA  EQU   DCBEODAD+1
DCBBFA   EQU   DCBBFTEK
DCBH0    EQU   DCBBFTEK
DCBBFTKD EQU   DCBBFTEK
DCBBFTE  EQU   DCBBFT
DCBBFTKR EQU   DCBBFT
DCBBFTS  EQU   DCBBFT
DCBH1    EQU   DCBBFTEK
DCBSVCXA EQU   DCBSVCXL+1
@NM00112 EQU   DCBSVCXL
DCBODEBA EQU   DCBIOBAA
@NM00111 EQU   DCBQSLM
DCBUPDBT EQU   DCBQSLM
DCBUPDCM EQU   DCBQSLM
DCB1DVDS EQU   DCBQSLM
@NM00110 EQU   DCBDSRG2
DCBDSGTR EQU   DCBDSRG2
DCBACBM  EQU   DCBDSRG2
@NM00109 EQU   DCBDSRG2
DCBDSGTQ EQU   DCBDSRG2
DCBDSGTX EQU   DCBDSRG2
DCBDSGGS EQU   DCBDSRG2
DCBDSGU  EQU   DCBDSRG1
DCBDSGPO EQU   DCBDSRG1
@NM00108 EQU   DCBDSRG1
@NM00107 EQU   DCBDSRG1
DCBDSGCX EQU   DCBDSRG1
DCBDSGDA EQU   DCBDSRG1
DCBDSGPS EQU   DCBDSRG1
DCBDSGIS EQU   DCBDSRG1
DCBBUFL  EQU   IHADCS11+8
DCBBUFCA EQU   DCBBUFCB+1
DCBBUFNO EQU   DCBBUFCB
DCBDEVT  EQU   DCBREL
DCBKEYLE EQU   DCBRELB
DCBTRBAL EQU   IHADCS01+6
@NM00106 EQU   IHADCS01+5
@NM00105 EQU   IHADCS01+4
DCBDVTBA EQU   DCBDVTBL+1
@NM00104 EQU   DCBDVTBL
DCBKEYCN EQU   IHADCS00+4
DCBRELAD EQU   IHADCS00
@NM00103 EQU   IHADCB
@NM00102 EQU   EXECDATA+60
FILEDCBS EQU   EXECDATA+56
RETPTR2  EQU   EXECDATA+52
ATACTEND EQU   EXECDATA+48
ATACTSTR EQU   EXECDATA+44
EXDLMPTR EQU   EXECDATA+40
GEXECCNT EQU   EXECDATA+36
NOLASTCC EQU   @NM00101+1
ATINCNTL EQU   @NM00101+1
ATTNCMD  EQU   @NM00101
NOMSG    EQU   @NM00101
CMAIN    EQU   @NM00101
ERINCNTL EQU   @NM00101
SYMLST   EQU   @NM00101
NOFLUSH  EQU   @NM00101
ERRCMD   EQU   @NM00101
CONLST   EQU   @NM00101
RETPTR   EQU   EXECDATA+28
ERACTEND EQU   EXECDATA+24
ERACTSTR EQU   EXECDATA+20
EXINSAVE EQU   @NM00100
LASTTSO  EQU   EXECDATA+12
GEXECDAT EQU   EXECDATA+8
SVTABFST EQU   EXECDATA+4
SNTABFST EQU   EXECDATA
LSDANEXT EQU   LSD+8
LSDTOTLN EQU   LSD+6
LSDRCLEN EQU   LSD+4
LSDADATA EQU   LSD
ATTNSHLV EQU   ATTCHLST+56
ATTPLNG  EQU   ATTCHLST+54
ATRSV038 EQU   ATTCHLST+53
ATRSV037 EQU   ATFLAGS1
ATRSV036 EQU   ATFLAGS1
ATRSV035 EQU   ATFLAGS1
ATRSV034 EQU   ATFLAGS1
ATRSV033 EQU   ATFLAGS1
ATRSV032 EQU   ATFLAGS1
ATRSAPF  EQU   ATFLAGS1
ATNSHRSP EQU   ATFLAGS1
ATTASKLB EQU   ATTCHLST+48
ATSTAIXT EQU   ATSTAIEX+1
ATPURGE  EQU   ATSTAIF
ATSYNCH  EQU   ATSTAIF
ATESTAI  EQU   ATSTAIF
ATTERM   EQU   ATSTAIF
ATRSV031 EQU   ATSTAIF
ATRSV030 EQU   ATSTAIF
ATRSV029 EQU   ATSTAIF
ATSTAIA  EQU   ATSTAIAD+1
ATTID    EQU   ATSTAIAD
ATJSCBA  EQU   ATJSCBAD+1
ATLSQA   EQU   ATJSCBAD
ATPRGNM  EQU   ATTCHLST+28
ATMODE   EQU   ATINDS
ATJSTCB  EQU   ATINDS
ATSVAREA EQU   ATINDS
ATSZERO  EQU   ATINDS
ATKEY    EQU   ATINDS
ATJPQ    EQU   ATINDS
ATJSCB   EQU   ATINDS
ATDISP   EQU   ATINDS
ATLPMOD  EQU   ATTCHLST+26
ATDPMOD  EQU   ATTCHLST+24
ATETXRB  EQU   ATETXRA+1
ATRLLOUT EQU   ATINDS2
ATRLABLE EQU   ATINDS2
ATRSV028 EQU   ATINDS2
ATRSV027 EQU   ATINDS2
ATRSV026 EQU   ATINDS2
ATEXTN   EQU   ATINDS2
ATNFPRSA EQU   ATINDS2
ATNTQE   EQU   ATINDS2
ATSHFLDB EQU   ATSHFLDA+1
ATSHARSP EQU   ATSHFLAG
ATRSV025 EQU   ATSHFLAG
ATRSV024 EQU   ATSHFLAG
ATRSV023 EQU   ATSHFLAG
ATRSV022 EQU   ATSHFLAG
ATRSV021 EQU   ATSHFLAG
ATRSV020 EQU   ATSHFLAG
ATRSV019 EQU   ATSHFLAG
ATGSFLDB EQU   ATGSFLDA+1
ATGIVESP EQU   ATGSFLAG
ATRSV018 EQU   ATGSFLAG
ATRSV017 EQU   ATGSFLAG
ATRSV016 EQU   ATGSFLAG
ATRSV015 EQU   ATGSFLAG
ATRSV014 EQU   ATGSFLAG
ATRSV013 EQU   ATGSFLAG
ATRSV012 EQU   ATGSFLAG
ATECBADB EQU   ATECBADR+1
ATTSTAI  EQU   ATECBFLG
ATTSKLB  EQU   ATECBFLG
ATLOGON  EQU   ATECBFLG
ATEXTN2  EQU   ATECBFLG
ATRSV011 EQU   ATECBFLG
ATRSV010 EQU   ATECBFLG
ATRSV009 EQU   ATECBFLG
ATRSV008 EQU   ATECBFLG
ATDCBADB EQU   ATDCBADA+1
ATHARCHY EQU   ATDCBADA
ATPGNADB EQU   ATPGNADA+1
ATRSV007 EQU   ATDEFLAG
ATRSV006 EQU   ATDEFLAG
ATRSV005 EQU   ATDEFLAG
ATRSV004 EQU   ATDEFLAG
ATRSV003 EQU   ATDEFLAG
ATRSV002 EQU   ATDEFLAG
ATRSV001 EQU   ATDEFLAG
ATDENTRY EQU   ATDEFLAG
PSCBU    EQU   PSCB+64
PSCBRSZ  EQU   PSCB+60
PSCBLINE EQU   PSCB+59
PSCBCHAR EQU   PSCB+58
PSCBUPTL EQU   PSCB+56
PSCBUPT  EQU   PSCB+52
PSCBRLGB EQU   PSCB+48
PSCBDEST EQU   PSCB+40
@NM00099 EQU   PSCB+36
@NM00098 EQU   PSCB+32
PSCBSOUT EQU   PSCB+31
PSCBSUBM EQU   PSCB+30
PSCBSUBC EQU   PSCB+29
PSCBSUBH EQU   PSCB+28
PSCBLTI2 EQU   PSCB+24
PSCBLTIM EQU   PSCB+20
PSCBATR2 EQU   PSCB+18
@NM00097 EQU   PSCBATR1
@NM00096 EQU   PSCBATR1
PSCBRCVR EQU   PSCBATR1
PSCBATTN EQU   PSCBATR1
PSCBVMNT EQU   PSCBATR1
PSCBJCL  EQU   PSCBATR1
PSCBACCT EQU   PSCBATR1
PSCBCTRL EQU   PSCBATR1
PSCBGPNM EQU   PSCB+8
PSCBUSRL EQU   PSCB+7
PSCBUSER EQU   PSCB
STPBMBRN EQU   STPB+16
STPBOTDD EQU   STPB+12
STPBINDD EQU   STPB+8
STPBALSD EQU   STPB+4
@NM00095 EQU   @NM00092+1
SPBFLUSH EQU   @NM00092+1
@NM00094 EQU   @NM00092+1
@NM00093 EQU   @NM00092
PTPBFLN  EQU   PTPB+8
PTPBOPUT EQU   PTPB+4
@NM00091 EQU   PTPB
PGPBIBUF EQU   PGPB+12
@NM00090 EQU   PGPB
GTPBIBUF EQU   GTPB+4
@NM00089 EQU   GTPB
IOPLECB  EQU   IOPL+8
IOPLECT  EQU   IOPL+4
IOPLUPT  EQU   IOPL
@NM00088 EQU   ECT+52
@NM00087 EQU   ECT+48
@NM00086 EQU   ECT+44
@NM00085 EQU   ECTSWS2+1
@NM00084 EQU   ECTSWS21
ECTTABND EQU   ECTSWS21
ECTDEFCS EQU   ECTSWS21
ECTBKPB  EQU   ECT+36
ECTUSER  EQU   ECT+32
ECTDDNUM EQU   ECT+29
ECTATTN  EQU   ECTSWS
ECTBKGRD EQU   ECTSWS
ECTNNOT  EQU   ECTSWS
ECTNMAL  EQU   ECTSWS
ECTATRM  EQU   ECTSWS
@NM00083 EQU   ECTSWS
ECTNOPD  EQU   ECTSWS
ECTSCMD  EQU   ECT+20
ECTSMSG  EQU   ECT+9
ECTMSGF  EQU   ECT+8
@NM00082 EQU   CSOA+7
@NM00081 EQU   CSOAFLG
@NM00080 EQU   CSOAFLG
CSOAEXEC EQU   CSOAFLG
CSOABAD  EQU   CSOAFLG
CSOANOC  EQU   CSOAFLG
CSOAQM   EQU   CSOAFLG
CSOAVNP  EQU   CSOAFLG
CSOAVWP  EQU   CSOAFLG
CSOALNM  EQU   CSOA+4
CSOACNM  EQU   CSOA
CSPLCBUF EQU   CSPL+20
CSPLOA   EQU   CSPL+16
CSPLFLG  EQU   CSPL+12
CSPLECB  EQU   CSPL+8
CSPLECT  EQU   CSPL+4
CSPLUPT  EQU   CSPL
CPPLECT  EQU   CPPL+12
CPPLPSCB EQU   CPPL+8
CPPLUPT  EQU   CPPL+4
CPPLCBUF EQU   CPPL
DA08ALN  EQU   DAPB08+76
DA08DSO  EQU   DAPB08+75
@NM00079 EQU   DAPB08+72
@NM00078 EQU   DA08CTL
DA08ATRL EQU   DA08CTL
DA08DMMY EQU   DA08CTL
DA08PERM EQU   DA08CTL
DA08RLSE EQU   DA08CTL
DA08UID  EQU   DA08CTL
DA08ABKL EQU   DA08CTL
DA08TRKS EQU   DA08CTL
DA08UNCT EQU   DA08DPS3
DA08CATL EQU   DA08DPS3
DA08DELE EQU   DA08DPS3
DA08KEP  EQU   DA08DPS3
@NM00077 EQU   DA08DPS3
@NM00076 EQU   DA08DPS3
@NM00075 EQU   DA08DPS3
@NM00074 EQU   DA08DPS3
DA08UCAT EQU   DA08DPS2
DA08CAT  EQU   DA08DPS2
DA08DEL  EQU   DA08DPS2
DA08KEEP EQU   DA08DPS2
@NM00073 EQU   DA08DPS2
@NM00072 EQU   DA08DPS2
@NM00071 EQU   DA08DPS2
@NM00070 EQU   DA08DPS2
DA08OLD  EQU   DA08DSP1
DA08MOD  EQU   DA08DSP1
DA08NEW  EQU   DA08DSP1
DA08SHR  EQU   DA08DSP1
@NM00069 EQU   DA08DSP1
@NM00068 EQU   DA08DSP1
@NM00067 EQU   DA08DSP1
@NM00066 EQU   DA08DSP1
DA08PSWD EQU   DAPB08+60
DA08MNM  EQU   DAPB08+52
DA08DQTY EQU   DAPB08+48
DA08SQTY EQU   DAPB08+44
DA08PQTY EQU   DAPB08+40
DA08BLK  EQU   DAPB08+36
DA08SER  EQU   DAPB08+28
DA08UNIT EQU   DAPB08+20
DA08DDN  EQU   DAPB08+12
DA08PDSN EQU   DAPB08+8
DA08CTRC EQU   DAPB08+6
DA08DARC EQU   DAPB08+4
@NM00065 EQU   DA08FLG
@NM00064 EQU   DA08FLG
@NM00063 EQU   DA08FLG
@NM00062 EQU   DA08FLG
@NM00061 EQU   DA08FLG
@NM00060 EQU   DA08FLG
@NM00059 EQU   DA08FLG
DA08FPE  EQU   DA08FLG
DA08CD   EQU   DAPB08
DAPLDAPB EQU   DAPL+16
DAPLPSCB EQU   DAPL+12
DAPLECB  EQU   DAPL+8
DAPLECT  EQU   DAPL+4
DAPLUPT  EQU   DAPL
UPTPREFL EQU   UPT+23
UPTPREFX EQU   UPT+16
@NM00058 EQU   UPT+15
UPTLDEL  EQU   UPT+14
UPTCDEL  EQU   UPT+13
UPTWTP   EQU   UPTSWS
UPTMODE  EQU   UPTSWS
UPTALD   EQU   UPTSWS
UPTPAUS  EQU   UPTSWS
UPTNCOM  EQU   UPTSWS
UPTMID   EQU   UPTSWS
UPTNPRM  EQU   UPTSWS
UPTRCVR  EQU   UPTSWS
UPTUSER  EQU   UPT+2
@NM00057 EQU   UPT
@NM00056 EQU   SDWA+512
SDWAVRA  EQU   SDWARA+4
SDWAURAL EQU   SDWARA+3
@NM00055 EQU   SDWADPVA
SDWAEBC  EQU   SDWADPVA
SDWAHEX  EQU   SDWADPVA
SDWAVRAL EQU   SDWARA
@NM00054 EQU   SDWA+396
SDWACOMP EQU   SDWA+392
SDWARCPL EQU   SDWA+364
@NM00053 EQU   SDWADPSA+32
SDWATO4  EQU   SDWADPSL+28
SDWAFRM4 EQU   SDWADPSL+24
SDWATO3  EQU   SDWADPSL+20
SDWAFRM3 EQU   SDWADPSL+16
SDWATO2  EQU   SDWADPSL+12
SDWAFRM2 EQU   SDWADPSL+8
SDWATO1  EQU   SDWADPSL+4
SDWAFRM1 EQU   SDWADPSL
@NM00052 EQU   SDWADDAT+3
@NM00051 EQU   SDWAPDAT
SDWAUSPL EQU   SDWAPDAT
SDWADPSW EQU   SDWAPDAT
SDWATJPA EQU   SDWAPDAT
SDWATLPA EQU   SDWAPDAT
SDWADREG EQU   SDWAPDAT
SDWADSAH EQU   SDWAPDAT
SDWADSAS EQU   SDWAPDAT
@NM00050 EQU   SDWADDAT+1
@NM00049 EQU   SDWASDAT
SDWAQQS  EQU   SDWASDAT
SDWACBS  EQU   SDWASDAT
SDWAGTF  EQU   SDWASDAT
SDWASWA  EQU   SDWASDAT
SDWALSQA EQU   SDWASDAT
SDWASQA  EQU   SDWASDAT
SDWANUC  EQU   SDWASDAT
@NM00048 EQU   SDWADUMP+2
@NM00047 EQU   SDWADPFS
SDWASLST EQU   SDWADPFS
@NM00046 EQU   SDWADPFS
SDWADLST EQU   SDWADPFS
SDWADPT  EQU   SDWADPFS
SDWADPID EQU   SDWADUMP
SDWADPLA EQU   SDWA+316
SDWAREXN EQU   SDWARECP+16
SDWACSCT EQU   SDWARECP+8
SDWAMODN EQU   SDWARECP
@NM00045 EQU   SDWALKWA+32
SDWATALW EQU   SDWALKWS+28
SDWATDLW EQU   SDWALKWS+24
SDWATNLW EQU   SDWALKWS+20
SDWAAPLW EQU   SDWALKWS+16
SDWAIPLW EQU   SDWALKWS+12
SDWAILLW EQU   SDWALKWS+8
SDWAIULW EQU   SDWALKWS+4
SDWAICLW EQU   SDWALKWS
SDWAFLLK EQU   SDWAACF4
SDWACMS  EQU   SDWAACF4
SDWAOPTM EQU   SDWAACF4
SDWATADB EQU   SDWAACF4
SDWATDNB EQU   SDWAACF4
SDWATNCB EQU   SDWAACF4
SDWAILCH EQU   SDWAACF4
SDWAIUCB EQU   SDWAACF4
SDWAICAT EQU   SDWAACF3
SDWAIPRG EQU   SDWAACF3
SDWASALL EQU   SDWAACF3
SDWAASMP EQU   SDWAACF3
SDWADISP EQU   SDWAACF3
@NM00044 EQU   SDWAACF3
@NM00043 EQU   SDWAACF2
SDWAFREE EQU   SDWAACF2
SDWAUPRG EQU   SDWAACF2
@NM00042 EQU   SDWAACF2
SDWASPIN EQU   SDWAACF2
@NM00041 EQU   SDWAACF2
SDWALCPU EQU   SDWACPUA+2
@NM00040 EQU   SDWACPUA
SDWARECA EQU   SDWA+244
@NM00039 EQU   SDWA+239
@NM00038 EQU   SDWAIOFS
SDWANIOP EQU   SDWAIOFS
SDWANOIO EQU   SDWAIOFS
SDWAIOHT EQU   SDWAIOFS
SDWAIOQR EQU   SDWAIOFS
SDWAFMID EQU   SDWA+236
@NM00037 EQU   SDWAERRD
SDWAMCIV EQU   SDWAERRD
SDWARPIV EQU   SDWAERRD
SDWAMABD EQU   SDWAERRD
SDWACTS  EQU   SDWAERRD
SDWASTAE EQU   SDWAERRD
SDWANRBE EQU   SDWAERRD
SDWACLUP EQU   SDWAERRD
@NM00036 EQU   SDWAERRC
SDWAEAS  EQU   SDWAERRC
SDWAPERC EQU   SDWAERRC
SDWAIRB  EQU   SDWAERRC
SDWASTAI EQU   SDWAERRC
SDWASTAF EQU   SDWAERRC
SDWASRBM EQU   SDWAERRB
SDWALDIS EQU   SDWAERRB
SDWAENRB EQU   SDWAERRB
SDWATYP1 EQU   SDWAERRB
@NM00035 EQU   SDWAERRB
SDWAPGIO EQU   SDWAERRA
SDWATEXC EQU   SDWAERRA
SDWASVCE EQU   SDWAERRA
SDWAABTM EQU   SDWAERRA
SDWASVCD EQU   SDWAERRA
SDWARKEY EQU   SDWAERRA
SDWAPCHK EQU   SDWAERRA
SDWAMCHK EQU   SDWAERRA
SDWATIME EQU   SDWAMCH+20
SDWARFSA EQU   SDWAMCH+16
@NM00034 EQU   SDWAMCH+14
SDWAVEQR EQU   SDWARSR2
SDWAPGFX EQU   SDWARSR2
SDWAFLSQ EQU   SDWARSR2
SDWAFSQA EQU   SDWARSR2
SDWANUCL EQU   SDWARSR2
SDWASPER EQU   SDWARSR2
SDWAINTC EQU   SDWARSR2
SDWAOFLN EQU   SDWARSR2
SDWACHNG EQU   SDWARSR1
SDWAMSER EQU   SDWARSR1
@NM00033 EQU   SDWARSR1
SDWACPID EQU   SDWAMCH+10
SDWATERR EQU   SDWAMCHD
SDWAFPRX EQU   SDWAMCHD
SDWAINSF EQU   SDWAMCHD
SDWAACR  EQU   SDWAMCHD
SDWASCK  EQU   SDWAMCHD
SDWAPSWU EQU   SDWAMCHD
SDWAREGU EQU   SDWAMCHD
SDWASKYF EQU   SDWAMCHD
@NM00032 EQU   SDWAMCHS
SDWARSRF EQU   SDWAMCHS
SDWARSRC EQU   SDWAMCHS
SDWAINVP EQU   SDWAMCHS
SDWATSVL EQU   SDWAMCHS
SDWARCDF EQU   SDWAMCHS
SDWASRVL EQU   SDWAMCHS
SDWASCKE EQU   SDWASTCK+4
SDWASCKB EQU   SDWASTCK
SDWALNTH EQU   SDWAIDNT+1
SDWASPID EQU   SDWAIDNT
SDWASR15 EQU   SDWASRSV+60
SDWASR14 EQU   SDWASRSV+56
SDWASR13 EQU   SDWASRSV+52
SDWASR12 EQU   SDWASRSV+48
SDWASR11 EQU   SDWASRSV+44
SDWASR10 EQU   SDWASRSV+40
SDWASR09 EQU   SDWASRSV+36
SDWASR08 EQU   SDWASRSV+32
SDWASR07 EQU   SDWASRSV+28
SDWASR06 EQU   SDWASRSV+24
SDWASR05 EQU   SDWASRSV+20
SDWASR04 EQU   SDWASRSV+16
SDWASR03 EQU   SDWASRSV+12
SDWASR02 EQU   SDWASRSV+8
SDWASR01 EQU   SDWASRSV+4
SDWASR00 EQU   SDWASRSV
SDWATRN2 EQU   SDWAAEC2+4
SDWAIPC2 EQU   SDWAICD2
SDWAIMC2 EQU   SDWAICD2
SDWAIPR2 EQU   SDWAICD2
@NM00031 EQU   SDWAINC2
@NM00030 EQU   SDWAILC2
SDWAIL2  EQU   SDWAILC2
@NM00029 EQU   SDWAILC2
@NM00028 EQU   SDWAAEC2
SDWAADD2 EQU   SDWANXT2+1
@NM00027 EQU   SDWANXT2
@NM00026 EQU   SDWAEC2+3
SDWASGN2 EQU   SDWAINT2
SDWAEXP2 EQU   SDWAINT2
SDWADEC2 EQU   SDWAINT2
SDWAFPO2 EQU   SDWAINT2
SDWACC2  EQU   SDWAINT2
@NM00025 EQU   SDWAINT2
SDWAPGM2 EQU   SDWAMWP2
SDWAWAT2 EQU   SDWAMWP2
SDWAMCK2 EQU   SDWAMWP2
SDWAECT2 EQU   SDWAMWP2
SDWAKEY2 EQU   SDWAMWP2
SDWAEXT2 EQU   SDWAEMK2
SDWAIO2  EQU   SDWAEMK2
SDWATRM2 EQU   SDWAEMK2
@NM00024 EQU   SDWAEMK2
SDWAPER2 EQU   SDWAEMK2
@NM00023 EQU   SDWAEMK2
SDWATRAN EQU   SDWAAEC1+4
SDWAIPC1 EQU   SDWAICD1
SDWAIMC1 EQU   SDWAICD1
SDWAIPR1 EQU   SDWAICD1
@NM00022 EQU   SDWAINC1
@NM00021 EQU   SDWAILC1
SDWAIL1  EQU   SDWAILC1
@NM00020 EQU   SDWAILC1
@NM00019 EQU   SDWAAEC1
SDWAADD1 EQU   SDWANXT1+1
@NM00018 EQU   SDWANXT1
@NM00017 EQU   SDWAEC1+3
SDWASGN1 EQU   SDWAINT1
SDWAEXP1 EQU   SDWAINT1
SDWADEC1 EQU   SDWAINT1
SDWAFPO1 EQU   SDWAINT1
SDWACC1  EQU   SDWAINT1
@NM00016 EQU   SDWAINT1
SDWAPGM1 EQU   SDWAMWP1
SDWAWAT1 EQU   SDWAMWP1
SDWAMCK1 EQU   SDWAMWP1
SDWAECT1 EQU   SDWAMWP1
SDWAKEY1 EQU   SDWAMWP1
SDWAEXT1 EQU   SDWAEMK1
SDWAIO1  EQU   SDWAEMK1
SDWATRM1 EQU   SDWAEMK1
@NM00015 EQU   SDWAEMK1
SDWAPER1 EQU   SDWAEMK1
@NM00014 EQU   SDWAEMK1
SDWAIOBR EQU   SDWA+100
SDWAEPA  EQU   SDWA+96
@NM00013 EQU   SDWANAME+4
SDWARBAD EQU   SDWANAME
SDWAGR14 EQU   SDWAGRSV+56
SDWAGR13 EQU   SDWAGRSV+52
SDWAGR12 EQU   SDWAGRSV+48
SDWAGR11 EQU   SDWAGRSV+44
SDWAGR10 EQU   SDWAGRSV+40
SDWAGR09 EQU   SDWAGRSV+36
SDWAGR08 EQU   SDWAGRSV+32
SDWAGR07 EQU   SDWAGRSV+28
SDWAGR06 EQU   SDWAGRSV+24
SDWAGR05 EQU   SDWAGRSV+20
SDWAGR04 EQU   SDWAGRSV+16
SDWAGR03 EQU   SDWAGRSV+12
SDWAGR02 EQU   SDWAGRSV+8
SDWAGR01 EQU   SDWAGRSV+4
SDWAGR00 EQU   SDWAGRSV
SDWANXTP EQU   SDWACTL2+5
SDWASGP  EQU   SDWAPMKP
SDWAEUP  EQU   SDWAPMKP
SDWADOP  EQU   SDWAPMKP
SDWAFPP  EQU   SDWAPMKP
SDWACCP  EQU   SDWAPMKP
SDWAILP  EQU   SDWAPMKP
SDWAINTP EQU   SDWACTL2+2
SDWASPVP EQU   SDWAMWPP
SDWAWATP EQU   SDWAMWPP
SDWAMCKP EQU   SDWAMWPP
@NM00012 EQU   SDWAMWPP
SDWAKEYP EQU   SDWAMWPP
SDWAEXTP EQU   SDWACMKP
SDWAIOP  EQU   SDWACMKP
SDWANXTA EQU   SDWACTL1+5
SDWASGA  EQU   SDWAPMKA
SDWAEUA  EQU   SDWAPMKA
SDWADOA  EQU   SDWAPMKA
SDWAFPA  EQU   SDWAPMKA
SDWACCA  EQU   SDWAPMKA
SDWAILA  EQU   SDWAPMKA
SDWAINTA EQU   SDWACTL1+2
SDWASPVA EQU   SDWAMWPA
SDWAWATA EQU   SDWAMWPA
SDWAMCKA EQU   SDWAMWPA
@NM00011 EQU   SDWAMWPA
SDWAKEYA EQU   SDWAMWPA
SDWAEXTA EQU   SDWACMKA
SDWAIOA  EQU   SDWACMKA
@NM00010 EQU   SDWACMPF
SDWASTCC EQU   SDWACMPF
@NM00009 EQU   SDWACMPF
SDWASTEP EQU   SDWACMPF
@NM00008 EQU   TCBXTNT2+32
TCBRV181 EQU   TCBRV173
TCBRV180 EQU   TCBRV173
TCBRV179 EQU   TCBRV173
TCBRV178 EQU   TCBRV173
TCBRV177 EQU   TCBRV173
TCBRV176 EQU   TCBRV173
TCBRV175 EQU   TCBRV173
TCBRV174 EQU   TCBRV173
TCBRV172 EQU   TCBRV164
TCBRV171 EQU   TCBRV164
TCBRV170 EQU   TCBRV164
TCBRV169 EQU   TCBRV164
TCBRV168 EQU   TCBRV164
TCBRV167 EQU   TCBRV164
TCBRV166 EQU   TCBRV164
TCBRV165 EQU   TCBRV164
TCBRV163 EQU   TCBRV155
TCBRV162 EQU   TCBRV155
TCBRV161 EQU   TCBRV155
TCBRV160 EQU   TCBRV155
TCBRV159 EQU   TCBRV155
TCBRV158 EQU   TCBRV155
TCBRV157 EQU   TCBRV155
TCBRV156 EQU   TCBRV155
TCBRV154 EQU   TCBRV146
TCBRV153 EQU   TCBRV146
TCBRV152 EQU   TCBRV146
TCBRV151 EQU   TCBRV146
TCBRV150 EQU   TCBRV146
TCBRV149 EQU   TCBRV146
TCBRV148 EQU   TCBRV146
TCBRV147 EQU   TCBRV146
TCBRV145 EQU   TCBXTNT2+26
TCBRV144 EQU   TCBXTNT2+24
TCBCAUF  EQU   TCBXTNT2+20
TCBRV142 EQU   TCBXTNT2+16
TCBRSV49 EQU   TCBXTNT2+12
TCBEVENT EQU   TCBXTNT2+8
TCBRCMP  EQU   TCBXTNT2+5
TCBRSVAB EQU   TCBXTNT2+4
TCBGTFA  EQU   TCBGTF+1
TCBRSV47 EQU   TCBTFLG
TCBRSV46 EQU   TCBTFLG
TCBRSV45 EQU   TCBTFLG
TCBRSV44 EQU   TCBTFLG
TCBRSV43 EQU   TCBTFLG
TCBDSPIT EQU   TCBTFLG
TCBERRTN EQU   TCBTFLG
TCBASYNC EQU   TCBTFLG
@NM00007 EQU   TCB+296
TCBSVCA2 EQU   TCB+292
TCBSWASA EQU   TCB+288
TCBDBTB  EQU   TCB+284
TCBRPT   EQU   TCB+280
TCBRV141 EQU   TCBRV133
TCBRV140 EQU   TCBRV133
TCBRV139 EQU   TCBRV133
TCBRV138 EQU   TCBRV133
TCBRV137 EQU   TCBRV133
TCBRV136 EQU   TCBRV133
TCBRV135 EQU   TCBRV133
TCBRV134 EQU   TCBRV133
TCBRV132 EQU   TCBRV124
TCBRV131 EQU   TCBRV124
TCBRV130 EQU   TCBRV124
TCBRV129 EQU   TCBRV124
TCBRV128 EQU   TCBRV124
TCBRV127 EQU   TCBRV124
TCBRV126 EQU   TCBRV124
TCBRV125 EQU   TCBRV124
TCBRV123 EQU   TCBFBYT2
TCBRV122 EQU   TCBFBYT2
TCBECBNV EQU   TCBFBYT2
TCBSSSYN EQU   TCBFBYT2
TCBFPRAP EQU   TCBFBYT2
TCBFDW   EQU   TCBFBYT2
TCBFMW   EQU   TCBFBYT2
TCBCNCB  EQU   TCBFBYT2
TCBLLH   EQU   TCBFBYT1
TCBRV113 EQU   TCBFBYT1
TCBEOT   EQU   TCBFBYT1
TCBRTM2  EQU   TCBFBYT1
TCBPGNLY EQU   TCBFBYT1
TCBNDIOS EQU   TCBFBYT1
TCBACTIV EQU   TCBFBYT1
TCBEOTFM EQU   TCBFBYT1
TCBAFFN  EQU   TCB+274
TCBCCPVI EQU   TCB+272
TCBUKYSP EQU   TCB+268
TCBMODE  EQU   TCBESTAE+3
TCBERTYP EQU   TCBESTAE+2
TCBRV314 EQU   TCBESTRM
TCBRV313 EQU   TCBESTRM
TCBRV312 EQU   TCBESTRM
TCBRV311 EQU   TCBESTRM
TCBRV310 EQU   TCBESTRM
TCBRV309 EQU   TCBESTRM
TCBRV308 EQU   TCBESTRM
TCBETERM EQU   TCBESTRM
TCBSCBKY EQU   TCBESTAE
TCBRTM12 EQU   TCB+260
TCBTCBID EQU   TCB+256
TCBRSV96 EQU   TCB+252
TCBSWA   EQU   TCB+248
TCBFOEA  EQU   TCBFOE+1
TCBRSV42 EQU   TCBFOE
TCBRV306 EQU   TCB+240
TCBRSV41 EQU   TCB+239
TCBTID   EQU   TCB+238
TCBRSVAA EQU   TCB+237
TCBABCUR EQU   TCB+236
TCBTMSAV EQU   TCB+232
TCBIOTIM EQU   TCB+228
TCBRTWA  EQU   TCB+224
TCBBACK  EQU   TCB+220
TCBTIRB  EQU   TCB+216
TCBAECB  EQU   TCB+212
TCBEXT2A EQU   TCBEXT2+1
TCBRSV39 EQU   TCBEXT2
TCBSTMCT EQU   TCB+207
TCBSYSCT EQU   TCB+206
TCBRSV37 EQU   TCB+205
TCBEXSVC EQU   TCBDAR
TCBDARMS EQU   TCBDAR
TCBDARWT EQU   TCBDAR
TCBDARO  EQU   TCBDAR
TCBDARMC EQU   TCBDARC
TCBDARD  EQU   TCBDAR
TCBDARS  EQU   TCBDAR
TCBDARP  EQU   TCBDAR
TCBGTOFM EQU   TCBFLGS7
TCBADMP  EQU   TCBFLGS7
TCBRSTSK EQU   TCBFLGS7
TCBSVCS  EQU   TCBFLGS7
TCBSTACK EQU   TCBFLGS7
TCBRSV34 EQU   TCBFLGS7
TCBRSV33 EQU   TCBFLGS7
TCBGPECB EQU   TCBFLGS7
TCBNTJS  EQU   TCBFLGS6
TCBAPG   EQU   TCBFLGS6
TCBMIGR  EQU   TCBFLGS6
TCBRV303 EQU   TCBFLGS6
TCBSPVLK EQU   TCBFLGS6
TCBCPU   EQU   TCBFLGS6
TCBPIE17 EQU   TCBFLGS6
TCBRV    EQU   TCBFLGS6
TCBRSV79 EQU   TCBNDSP5
TCBRSV78 EQU   TCBNDSP5
TCBRSV77 EQU   TCBNDSP5
TCBRSV76 EQU   TCBNDSP5
TCBRSV75 EQU   TCBNDSP5
TCBRSV74 EQU   TCBNDSP5
TCBRSV95 EQU   TCBNDSP5
TCBRSV94 EQU   TCBNDSP5
TCBRSV93 EQU   TCBNDSP4
TCBRSV92 EQU   TCBNDSP4
TCBRSV91 EQU   TCBNDSP4
TCBRSV90 EQU   TCBNDSP4
TCBRSV89 EQU   TCBNDSP4
TCBRSV88 EQU   TCBNDSP4
TCBRSV87 EQU   TCBNDSP4
TCBRSV86 EQU   TCBNDSP4
TCBEXT1A EQU   TCBEXT1+1
TCBRSV32 EQU   TCBEXT1
TCBEXCPD EQU   TCB+192
TCBIOBRC EQU   TCB+188
TCBDDWTC EQU   TCB+186
TCBDDEXC EQU   TCB+184
TCBJSCBB EQU   TCBJSCB+1
@NM00006 EQU   TCBRECDE
TCBREC   EQU   TCBRECDE
TCBMDIDS EQU   TCB+176
TCBNDINT EQU   TCBNDSP3
TCBRSV27 EQU   TCBNDSP3
TCBRSV26 EQU   TCBNDSP3
TCBRSV25 EQU   TCBNDSP3
TCBRSV24 EQU   TCBNDSP3
TCBSRBND EQU   TCBNDSP3
TCBRV302 EQU   TCBNDSP3
TCBLJSND EQU   TCBNDSP3
TCBABE   EQU   TCBNDSP2
TCBDSS   EQU   TCBNDSP2
TCBOWAIT EQU   TCBNDSP2
TCBIWAIT EQU   TCBNDSP2
TCBNDTS  EQU   TCBNDSP2
TCBNDSVC EQU   TCBNDSP2
TCBSTPP  EQU   TCBNDSP2
TCBABD   EQU   TCBNDSP2
TCBRSV22 EQU   TCBNDSP1
TCBPIEND EQU   TCBNDSP1
TCBTPSP  EQU   TCBNDSP1
TCBDDRND EQU   TCBNDSP1
TCBRSPND EQU   TCBNDSP1
TCBRSTND EQU   TCBNDSP1
TCBDARPN EQU   TCBNDSP1
TCBDARTN EQU   TCBNDSP1
TCBNDSP0 EQU   TCBNDSP
TCBUSER  EQU   TCB+168
TCBTCTB  EQU   TCBTCT+1
TCBRSV9C EQU   TCBTCTGF
TCBRSV9B EQU   TCBTCTGF
TCBRSV9A EQU   TCBTCTGF
TCBRSV99 EQU   TCBTCTGF
TCBRSV98 EQU   TCBTCTGF
TCBRSV97 EQU   TCBTCTGF
TCBRSV20 EQU   TCBTCTGF
TCBSMFGF EQU   TCBTCTGF
TCBSTABB EQU   TCBSTAB+1
TCBSTCUR EQU   TCBNSTAE
TCBRV301 EQU   TCBNSTAE
TCBSYNCH EQU   TCBNSTAE
TCBHALT  EQU   TCBNSTAE
TCBPPSUP EQU   TCBNSTAE
TCB33E   EQU   TCBNSTAE
TCBQUIES EQU   TCBNSTAE
TCBSTABE EQU   TCBNSTAE
TCBAQE   EQU   TCB+156
TCBPQE   EQU   TCB+152
TCBTSDP  EQU   TCB+151
TCBTSLP  EQU   TCB+150
TCBSTPCT EQU   TCB+149
TCBCPUBN EQU   TCBTSFLG
TCBDYDSP EQU   TCBTSFLG
TCBRSV18 EQU   TCBTSFLG
TCBRSV17 EQU   TCBTSFLG
TCBTIOTG EQU   TCBTSFLG
TCBATT   EQU   TCBTSFLG
TCBSTPPR EQU   TCBTSFLG
TCBRV300 EQU   TCBTSTSK
TCBECB   EQU   TCB+144
TCBIQE   EQU   TCB+140
TCBOTC   EQU   TCB+132
TCBNTC   EQU   TCB+128
TCBJSTCA EQU   TCBJSTCB+1
TCBRSV16 EQU   TCBJSTCB
TCBTQET  EQU   TCBTME
TCBTCB   EQU   TCB+116
TCBFSAB  EQU   TCBFSA+1
TCBQEL   EQU   TCBFSA
TCBGRS15 EQU   TCBGRS+60
TCBGRS14 EQU   TCBGRS+56
TCBGRS13 EQU   TCBGRS+52
TCBGRS12 EQU   TCBGRS+48
TCBGRS11 EQU   TCBGRS+44
TCBGRS10 EQU   TCBGRS+40
TCBGRS9  EQU   TCBGRS+36
TCBGRS8  EQU   TCBGRS+32
TCBGRS7  EQU   TCBGRS+28
TCBGRS6  EQU   TCBGRS+24
TCBGRS5  EQU   TCBGRS+20
TCBGRS4  EQU   TCBGRS+16
TCBGRS3  EQU   TCBGRS+12
TCBGRS2  EQU   TCBGRS+8
TCBGRS1  EQU   TCBGRS+4
TCBGRS0  EQU   TCBGRS
TCBJPQB  EQU   TCBJPQ+1
TCBRSV15 EQU   TCBPURGE
TCBRSV14 EQU   TCBPURGE
TCBRSV13 EQU   TCBPURGE
TCBRSV12 EQU   TCBPURGE
TCBRSV11 EQU   TCBPURGE
TCBRSV10 EQU   TCBPURGE
TCBRSV09 EQU   TCBPURGE
TCBJPQF  EQU   TCBPURGE
TCBJLB   EQU   TCB+40
TCBLLS   EQU   TCB+36
TCBDSP   EQU   TCB+35
TCBLMP   EQU   TCB+34
TCBPNDSP EQU   TCBFLGS5
TCBFCD1  EQU   TCBFLGS5
TCBSTP   EQU   TCBFLGS5
TCBSYS   EQU   TCBFLGS5
TCBANDSP EQU   TCBFLGS5
TCBPAGE  EQU   TCBFLGS5
TCBUXNDF EQU   TCBABWF
TCBFC    EQU   TCBFLGS5
TCBONDSP EQU   TCBFLGS4
TCBMPCND EQU   TCBFLGS4
TCBMPCVQ EQU   TCBFLGS4
TCBUXNDV EQU   TCBFLGS4
TCBHNDSP EQU   TCBFLGS4
TCBRQENA EQU   TCBFLGS4
TCBSER   EQU   TCBFLGS4
TCBNDUMP EQU   TCBFLGS4
TCBDWSTA EQU   TCBFLGS3
TCBRSV08 EQU   TCBFLGS3
TCBRSV07 EQU   TCBFLGS3
TCBRSV06 EQU   TCBFLGS3
TCBABGM  EQU   TCBFLGS3
TCBABTRM EQU   TCBFLGS3
TCBADINP EQU   TCBFLGS3
TCBFSM   EQU   TCBFLGS3
TCBFTS   EQU   TCBFLGS2
TCBFETXR EQU   TCBFLGS2
TCBFJMC  EQU   TCBFLGS2
TCBFSMC  EQU   TCBFLGS2
TCBFABOP EQU   TCBFLGS2
TCBFSTI  EQU   TCBFLGS2
TCBFOINP EQU   TCBFLGS2
TCBFX    EQU   TCBFLGS1
TCBFS    EQU   TCBFLGS1
TCBFT    EQU   TCBFLGS1
TCBPDUMP EQU   TCBFLGS1
TCBNONPR EQU   TCBFLGS1
TCBFERA  EQU   TCBFLGS1
TCBFE    EQU   TCBFLGS1
TCBFA    EQU   TCBFLGS1
TCBZERO  EQU   TCBPKF
TCBFLAG  EQU   TCBPKF
TCBMSSB  EQU   TCBMSS+1
TCBRSV03 EQU   TCBMSS
TCBTRNB  EQU   TCBTRN+1
TCBRSV02 EQU   TCBABF
TCBOLTEP EQU   TCBABF
TCBTCP   EQU   TCBABF
TCBTCPP  EQU   TCBABF
TCBRSV01 EQU   TCBABF
TCBGRPH  EQU   TCBABF
TCBNOCHK EQU   TCBABF
TCBMOD91 EQU   TCBABF
TCBCMPC  EQU   TCBCMP+1
TCBRV318 EQU   TCBCMSG
TCBRV317 EQU   TCBCIND
TCBRV316 EQU   TCBCWTO
TCBCASID EQU   TCBCDBL
TCBNOCC  EQU   TCBSTCC
TCBDMPO  EQU   TCBCPP
TCBCSTEP EQU   TCBCMPF
TCBCREQ  EQU   TCBCMPF
TCBDEB   EQU   TCB+8
TCBPIEA  EQU   TCBPIE+1
TCBPM    EQU   TCBPMASK
@NM00005 EQU   TCBPMASK
TCBRBP   EQU   TCB
TCBFRS6  EQU   TCBFRS+24
TCBFRS4  EQU   TCBFRS+16
TCBFRS2  EQU   TCBFRS+8
TCBFRS0  EQU   TCBFRS
DEBXSAMB EQU   DEBXTN+28
DEBXOPNJ EQU   DEBXTN+24
DEBXXARG EQU   DEBXTN+20
DEBXMCF2 EQU   DEBXTN+19
DEBXMCF1 EQU   DEBXTN+18
DEBXDSO2 EQU   DEBXTN+17
DEBXDSO1 EQU   DEBXTN+16
DEBXDBPR EQU   DEBXTN+12
DEBXDCBM EQU   DEBXTN+8
DEBXDSAB EQU   DEBXTN+4
DEBXRV48 EQU   DEBXTN+3
DEBXRV47 EQU   DEBXFLG1
DEBXRV46 EQU   DEBXFLG1
DEBXRV45 EQU   DEBXFLG1
DEBXRV44 EQU   DEBXFLG1
DEBXRV43 EQU   DEBXFLG1
DEBXDSSI EQU   DEBXFLG1
DEBXTSKC EQU   DEBXFLG1
DEBXCDCB EQU   DEBXFLG1
DEBXLNGH EQU   DEBXTN
DEBTBLOF EQU   DEBPREFX+14
DEBAMTYP EQU   DEBPREFX+13
DEBLNGTH EQU   DEBPREFX+12
DEBDCBMK EQU   DEBXTNP
DEBDSCBA EQU   DEBPREFX+1
DEBWKARA EQU   DEBPREFX
DEBXCEAD EQU   DEBXCEA+1
DEBXCENP EQU   DEBXCEAB
DEBRSV35 EQU   DEBXCEAB
DEBRSV34 EQU   DEBXCEAB
DEBRSV33 EQU   DEBXCEAB
DEBRSV32 EQU   DEBXCEAB
DEBCEAD  EQU   DEBCEA+1
DEBCENP  EQU   DEBCEAB
DEBRSV31 EQU   DEBCEAB
DEBRSV30 EQU   DEBCEAB
DEBRSV29 EQU   DEBCEAB
DEBRSV28 EQU   DEBCEAB
DEBPCIAD EQU   DEBPCIA+1
DEBPCINP EQU   DEBPCIAB
DEBRSV27 EQU   DEBPCIAB
DEBRSV26 EQU   DEBPCIAB
DEBRSV25 EQU   DEBPCIAB
DEBRSV24 EQU   DEBPCIAB
DEBSIOAD EQU   DEBSIOA+1
DEBSIONP EQU   DEBSIOAB
DEBFIX   EQU   DEBSIOAB
DEBIOVR  EQU   DEBSIOAB
DEBSIOX  EQU   DEBSIOAB
DEBPGFX  EQU   DEBSIOAB
DEBEOEAD EQU   DEBEOEA+1
DEBEOENP EQU   DEBEOEAB
DEBRSV22 EQU   DEBEOEAB
DEBRSV21 EQU   DEBEOEAB
DEBRSV20 EQU   DEBEOEAB
DEBESMVR EQU   DEBEOEAB
DEBSUBID EQU   DEBSUBNM
DEBSIOA2 EQU   DEBACS08+24
DEBRPSIO EQU   DEBACS08+20
DEBFREED EQU   DEBACS08+16
@NM00004 EQU   DEBACS08+12
@NM00003 EQU   DEBACS08+8
DEBDISAD EQU   DEBACS08+4
@NM00002 EQU   DEBACS08
DEBRPSST EQU   DEBACS07+64
DEBARECK EQU   DEBACS07+60
DEBAREWT EQU   DEBACS07+56
DEBACHK  EQU   DEBACS07+52
DEBAWRIT EQU   DEBACS07+48
DEBASETL EQU   DEBACS07+44
DEBAREAD EQU   DEBACS07+40
DEBCRECK EQU   DEBACS07+36
DEBCREWT EQU   DEBACS07+32
DEBCCHK  EQU   DEBACS07+28
DEBCWRIT EQU   DEBACS07+24
DEBCSETL EQU   DEBACS07+20
DEBCREAD EQU   DEBACS07+16
DEBWKPT5 EQU   DEBACS07+12
DEBWKPT4 EQU   DEBACS07+8
DEBGET   EQU   DEBACS07+4
@NM00001 EQU   DEBACS07
DEBPUT   EQU   DEBACS06+4
DEBDCBFA EQU   DEBACS06
DEBLUCBB EQU   DEBLUCBA+1
DEBRSV18 EQU   DEBLUCBA
DEBFUCBB EQU   DEBFUCBA+1
DEBRSV17 EQU   DEBFUCBA
DEBTCCWB EQU   DEBTCCWA+1
DEBRSV16 EQU   DEBTCCWA
DEBTBFRB EQU   DEBTBFRA+1
DEBRSV15 EQU   DEBTBFRA
DEBDBPEF EQU   DEBACS03+8
DEBDBPP  EQU   DEBACS03+4
DEBDTPP  EQU   DEBACS03
DEBDBPE  EQU   DEBDBLK+1
DEBDBPT  EQU   DEBDBLK
DEBEXTNM EQU   DEBDSNAM
DEBLRECL EQU   DEBACSMD+14
DEBBLKSI EQU   DEBACSMD+12
DEBRSV14 EQU   DEBDSNM+4
DEBUTSAB EQU   DEBUTSAA+1
DEBRSV13 EQU   DEBUTSAA
DEBVOLNM EQU   DEBACSMD+2
DEBVLSEQ EQU   DEBVOLSQ+1
DEBRSV42 EQU   DEBVOLBT
DEBRSV41 EQU   DEBVOLBT
DEBRSV40 EQU   DEBVOLBT
DEBRSV39 EQU   DEBVOLBT
DEBRSV38 EQU   DEBVOLBT
DEBRSV37 EQU   DEBVOLBT
DEBRSV36 EQU   DEBVOLBT
DEBEXFUL EQU   DEBVOLBT
DEBNMTRK EQU   DEBDASD+14
DEBENDHH EQU   DEBDASD+12
DEBENDCC EQU   DEBDASD+10
DEBSTRHH EQU   DEBDASD+8
DEBSTRCC EQU   DEBDASD+6
DEBBINUM EQU   DEBDASD+4
DEBUCBA  EQU   DEBUCBAD+1
DEBDVMOD EQU   DEBUCBAD
DEBAPPB  EQU   DEBAPPAD+1
DEBEXSCL EQU   DEBAPPAD
DEBDCBB  EQU   DEBDCBAD+1
DEBDEBID EQU   DEBPROTG
DEBECBB  EQU   DEBECBAD+1
DEBPRIOR EQU   DEBECBAD
DEBUSRPB EQU   DEBUSRPG+1
DEBNMEXT EQU   DEBUSRPG
DEBRSV05 EQU   DEBBASIC+15
DEBXTNIN EQU   DEBFLGS1
DEBAPFIN EQU   DEBFLGS1
DEBF1CEV EQU   DEBFLGS1
DEBCINDI EQU   DEBFLGS1
DEBRSV02 EQU   DEBFLGS1
DEBRSIOA EQU   DEBFLGS1
DEBEOFDF EQU   DEBFLGS1
DEBPWCKD EQU   DEBFLGS1
DEBQSCNT EQU   DEBBASIC+13
DEBACCS  EQU   DEBOPATB
DEBPOSIT EQU   DEBOPATB
DEBZERO  EQU   DEBOPATB
DEBABEND EQU   DEBOPATB
DEBIRBB  EQU   DEBIRBAD+1
DEBRERR  EQU   DEBOFLGS
DEBLABEL EQU   DEBOFLGS
DEBSPLIT EQU   DEBOFLGS
DEBDCB   EQU   DEBOFLGS
DEBRLSE  EQU   DEBOFLGS
DEBEOF   EQU   DEBOFLGS
DEBDISP  EQU   DEBOFLGS
DEBDEBB  EQU   DEBDEBAD+1
DEBAMLNG EQU   DEBDEBAD
DEBTCBB  EQU   DEBTCBAD+1
DEBNMSUB EQU   DEBTCBAD
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RC00197 EQU   ABENDRTN
@RC00221 EQU   RETRYRTN
@RT00241 EQU   NORETRY
@RT00253 EQU   NORETRY
@RT00263 EQU   NORETRY
@RT00334 EQU   NORETRY
@RT00342 EQU   ABENDRTN
@RT00358 EQU   INITPROC
@RT00366 EQU   ABENDRTN
@RT00405 EQU   OPEN
@RT00415 EQU   SNAP
@RF00419 EQU   SNAPND
@RT00431 EQU   SNAPND
FINISH   EQU   @EL00001
@ENDDATA EQU   *
         END   IKJEFT05,(C'PLS2005',0701,78177)
