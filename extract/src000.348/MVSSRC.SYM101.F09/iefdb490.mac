         TITLE 'IEFDB490-DDNALLOC                                      *
                        '
IEFDB490 CSECT ,                                                01S0001
@MAINENT DS    0H                                               01S0001
         USING *,@15                                            01S0001
         B     @PROLOG                                          01S0001
         DC    AL1(16)                                          01S0001
         DC    C'IEFDB490  75.024'                              01S0001
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                  01S0001
         BALR  @12,0                                            01S0001
@PSTART  DS    0H                                               01S0001
         USING @PSTART,@12                                      01S0001
         L     @00,@SIZDATD                                     01S0001
         GSPACE   R,LV=(0)
         LR    @11,@01                                          01S0001
         USING @DATD,@11                                        01S0001
         ST    @13,@SA00001+4                                   01S0001
         LM    @00,@01,20(@13)                                  01S0001
         ST    @11,8(,@13)                                      01S0001
         LR    @13,@11                                          01S0001
         MVC   @PC00001(28),0(@01)                              01S0001
JSCBDISP EQU 188
JSCBAOS1 EQU  72
JSCBAOS2 EQU 192
*SWITCHES = SWITCHES && SWITCHES;      /*ZERO SWITCHES               */
         XC    SWITCHES(1),SWITCHES                             01S0047
*/********************************************************************/
*/*                                                                  */
*/* SEGMENT NAME - DDNLCCHK                                          */
*/*                                                                  */
*/* DESCRIPTIVE NAME = ENVIRONMENTAL CHECK ROUTINE                   */
*/*                                                                  */
*/* FUNCTION - THIS ROUTINE DETERMINES IF THE TEXT ENTERED IS VALID, */
*/*            IF THE DDNAME SPECIFIED IS IN THE DSAB CHAIN AND      */
*/*            CHECKS THE ATTRIBUTES OF THE DSAB (OR FIRST DSAB OF A */
*/*            CONCATENATED GROUP)                                   */
*/*                                                                  */
*/* OPERATION - IEFDB4FF IS INVOKED TO CHECK TEXT UNIT SYNTAX.       */
*/*             IEFDB4FC IS INVOKED TO SEARCH DSAB CHAIN FOR         */
*/*                      DSAB ASSOCIATED WITH SPECIFIED DDNAME       */
*/*             IF THE SEARCH IS SUCCESSFUL THEN THE DSAB IS         */
*/*             CHECKED FOR THE FOLLOWING:                           */
*/*               1. DSAB MARKED IN-USE                              */
*/*               2. DATA SET OPEN                                   */
*/*               3. DSAB NOT MARKED PERMANENTLY CONCATENATED OR IS  */
*/*                  CONVERTIBLE                                     */
*/*             IF ANY OF THE ABOVE CONDITIONS ARE MET, THEN AN      */
*/*             APPROPRIATE ERROR RETURN CODE IS SET.                */
*/*                                                                  */
*/* ENTRY - DDNLCCHK (INCLUDED SEGMENT)                              */
*/*                                                                  */
*/*  PURPOSE - SEE FUNCTION                                          */
*/*                                                                  */
*/*  INPUT DATA - TEXT UNIT PTRS - POINTER TO TEXT UNITS             */
*/*                                                                  */
*/* EXITS - ALL ARE TO NEXT SEQUENTIAL INSTRUCTION                   */
*/*                                                                  */
*/*  NORMAL - DSAB(S) ARE USABLE AND CAN BE MARKED IN-USE            */
*/*                                                                  */
*/*   RETURN CODE - ERRCODE = ZERO                                   */
*/*                                                                  */
*/*  ERROR - DSAB(S) ARE NOT USABLE OR TEXT IS INVALID               */
*/*                                                                  */
*/*  RETURN CODE - ERRCODE = ONE OF THE FOLLOWING HEX CODES:         */
*/*                1. RCINVKEY - INVALID KEY SPECIFIED IN TEXT       */
*/*                2. RCRSVDDN - JOBLIB/STEPLIB/JOBCAT/STEPCAT REQ   */
*/*                3. RCINNUMB - INVALID NUMBER OF KEY PARAMETERS    */
*/*                4. RCDUPKEY - DUPLICATE KEYS SPECIFIED IN TEXT    */
*/*                5. RCINKEYL - INVALID KEY PARAMETER LENGTH        */
*/*                6. RCKEYREQ - REQUIRED KEY NOT SPECIFIED          */
*/*                7. RCDDUNAV - SPECIFIED DDNAME IN-USE             */
*/*                8. RCOPENDS - SPECIFIED DDNAME ASSOCIATED WITH    */
*/*                              OPEN DATA SET                       */
*/*                9. RCDDCONV - SPECIFIED DDNAME CONVERTIBLE OR NOT */
*/*                              PERMANENTLY CONCATENATED            */
*/*               10. RCDDNFND - SPECIFIED DDNAME NOT FOUND          */
*/*                                                                  */
*/*                                                                  */
*/********************************************************************/
*KEYTABLE = KEYTABLE && KEYTABLE;      /*ZERO KEYTABLE               */
         XC    KEYTABLE(8),KEYTABLE                             02S0048
*MASKS = MASKS && MASKS;               /*ZERO MUTUAL & DUPE MASKS    */
         XC    MASKS(2),MASKS                                   02S0049
*CALL IEFDB4FF(DDNALCTP,ADDR(KEYDICT),ADDR(DUPEMASK),ADDR(MUTEMASK),
*              ADDR(KEYTABLE),DDNRETN);                         02S0050
         L     @10,@PC00001                                     02S0050
         ST    @10,@AL00001                                     02S0050
         LA    @10,KEYDICT                                      02S0050
         ST    @10,@TF00001                                     02S0050
         LA    @10,@TF00001                                     02S0050
         ST    @10,@AL00001+4                                   02S0050
         LA    @10,DUPEMASK                                     02S0050
         ST    @10,@TF00002                                     02S0050
         LA    @10,@TF00002                                     02S0050
         ST    @10,@AL00001+8                                   02S0050
         LA    @10,MUTEMASK                                     02S0050
         ST    @10,@TF00003                                     02S0050
         LA    @10,@TF00003                                     02S0050
         ST    @10,@AL00001+12                                  02S0050
         LA    @10,KEYTABLE                                     02S0050
         ST    @10,@TF00004                                     02S0050
         LA    @10,@TF00004                                     02S0050
         ST    @10,@AL00001+16                                  02S0050
         L     @10,@PC00001+4                                   02S0050
         ST    @10,@AL00001+20                                  02S0050
         L     @15,@CV00108                                     02S0050
         LA    @01,@AL00001                                     02S0050
         BALR  @14,@15                                          02S0050
*                                      /*CALL SYNTAX CHECKER         */
*IF ERRCODE = ZERO THEN                /* IS SYNTAX GOOD ?           */
         SLR   @10,@10                                          02S0051
         L     @15,@PC00001+4                                   02S0051
         SLR   @14,@14                                          02S0051
         ICM   @14,3,ERRCODE(@15)                               02S0051
         CR    @10,@14                                          02S0051
         BNE   @RF00051                                         02S0051
*  DO;                                 /*YES, PROCESS THE TEXT       */
*    IF DDNAMTUP ^= ZERO THEN          /*WAS KEY 0001 SPECIFIED ?    */
         L     @15,DDNAMTUP                                     02S0053
         CR    @15,@10                                          02S0053
         BE    @RF00053                                         02S0053
*      DO;                             /*PROCESS KEY 0001            */
*        TEXTPTR = DDNAMTUP;           /*GET TEXT KEY 0001 ADDRESS   */
         LR    TEXTPTR,@15                                      02S0055
*        DDNAREA = '';                 /*BLANK DDNAME AREA           */
         MVI   DDNAREA,C' '                                     02S0056
         MVC   DDNAREA+1(7),DDNAREA                             02S0056
*        DDNAREA(1:TEXTULNG) = TEXTUPAR(1:TEXTULNG); /* MOVE DDNAME  */
         ICM   @10,12,TEXTULNG(TEXTPTR)                         02S0057
         SRA   @10,16                                           02S0057
         BCTR  @10,0                                            02S0057
         EX    @10,@SM00879                                     02S0057
*        IF DDNAREA = JOBLIB × DDNAREA = STEPLIB                02S0058
*        × DDNAREA = JOBCAT                                     02S0058
*        × DDNAREA = STEPCAT THEN      /*RESERVED DDNAME SPECIFIED ? */
         CLC   DDNAREA(8),@CC00094                              02S0058
         BE    @RT00058                                         02S0058
         CLC   DDNAREA(8),@CC00104                              02S0058
         BE    @RT00058                                         02S0058
         CLC   DDNAREA(8),@CC00092                              02S0058
         BE    @RT00058                                         02S0058
         CLC   DDNAREA(8),@CC00102                              02S0058
         BNE   @RF00058                                         02S0058
@RT00058 DS    0H                                               02S0059
*          ERRCODE = RCRSVDDN;         /*SET RESERVED DDN ERROR CODE */
         L     @10,@PC00001+4                                   02S0059
         MVC   ERRCODE(2,@10),@CB00520                          02S0059
*      END;                            /*END TEST FOR RESERVED DDN   */
*    ELSE                              /* KEY 0001 NOT SPECIFIED     */
*      ERRCODE = RCKEYREQ;             /* SET REQUIRED KEY NOT  02S0061
*                                         FOUND ERROR CODE           */
         B     @RC00053                                         02S0061
@RF00053 L     @10,@PC00001+4                                   02S0061
         MVC   ERRCODE(2,@10),@CB00536                          02S0061
*  END;                                /*END TESTS FOR KEY 0001 02S0062
*                                        PRESENT AND RESERVED DDNAME */
@RC00053 DS    0H                                               02S0063
*/********************************************************************/
*/* IF ERRCODE IS ZERO AT THIS POINT, THEN CALL SEARCH ROUTINE TO    */
*/* FIND THE DSAB ASSOCIATED WITH THE SPECIFIED DDNAME               */
*/********************************************************************/
*IF ERRCODE = ZERO THEN                /*IS RETURN CODE STILL ZERO?  */
@RF00051 SLR   @10,@10                                          02S0063
         L     @15,@PC00001+4                                   02S0063
         SLR   @14,@14                                          02S0063
         ICM   @14,3,ERRCODE(@15)                               02S0063
         CR    @10,@14                                          02S0063
         BNE   @RF00063                                         02S0063
*  DO;                                 /*YES, CONTINUE               */
*    DSABPTR = DSQFRSTP;               /*GET FIRST DSAB ADDRESS      */
         L     @15,@PC00001+8                                   02S0065
         L     @01,DDNJSCBP(,@15)                               02S0065
         L     @01,JSCDSABQ(,@01)                               02S0065
         L     @15,DSQFRSTP(,@01)                               02S0065
         ST    @15,DSABPTR                                      02S0065
*    DDNAMEP = ADDR(DDNAREA);          /*GET ADDRESS OF DDNAME AREA  */
         LA    @15,DDNAREA                                      02S0066
         ST    @15,DDNAMEP                                      02S0066
*    RTNDDNAD = ZERO;                  /*ZERO RETURN AREA            */
         ST    @10,RTNDDNAD                                     02S0067
*    RTNAREAP = ADDR(RTNDDNAD);        /*GET RETURN AREA ADDRESS     */
         LA    @10,RTNDDNAD                                     02S0068
         ST    @10,RTNAREAP                                     02S0068
*    CALL IEFDB4FC(DSABPTR,DDNAMEP,RTNAREAP); /*SEARCH FOR DDNAME    */
         LA    @10,DSABPTR                                      02S0069
         ST    @10,@AL00001                                     02S0069
         LA    @10,DDNAMEP                                      02S0069
         ST    @10,@AL00001+4                                   02S0069
         LA    @10,RTNAREAP                                     02S0069
         ST    @10,@AL00001+8                                   02S0069
         L     @15,@CV00107                                     02S0069
         LA    @01,@AL00001                                     02S0069
         BALR  @14,@15                                          02S0069
*    IF RTNDDNAD = ZERO THEN           /*WAS DDNAME FOUND IN DSABS?  */
         L     @10,RTNDDNAD                                     02S0070
         LTR   @10,@10                                          02S0070
         BNZ   @RF00070                                         02S0070
*      ERRCODE = RCDDNFND;             /*NO, SET DD NOT FND ERR CODE */
         L     @10,@PC00001+4                                   02S0071
         MVC   ERRCODE(2,@10),@CB00556                          02S0071
*    ELSE                              /*DDNAME FOUND                */
*      DSABPTR = RTNDDNAD;             /* SAVE DSAB ADDRESS FOR 02S0072
*                                         SPECIFIED DDNAME           */
         B     @RC00070                                         02S0072
@RF00070 L     @10,RTNDDNAD                                     02S0072
         ST    @10,DSABPTR                                      02S0072
*  END;                                /*END SEARCH FOR DDNAME       */
@RC00070 DS    0H                                               02S0074
*/********************************************************************/
*/* IF ERRCODE IS ZERO AT THIS POINT, THEN CHECK DSAB ASSOCIATED     */
*/* WITH THE SPECIFIED DDNAME FOR BEING IN-USE AND DATASET BEING OPEN*/
*/********************************************************************/
*IF ERRCODE = ZERO THEN                /*IS RETURN CODE STILL ZERO?  */
@RF00063 L     @10,@PC00001+4                                   02S0074
         ICM   @15,3,ERRCODE(@10)                               02S0074
         BNZ   @RF00074                                         02S0074
*  DO;                                 /*YES, CONTINUE               */
*    IF DSABNUSE = ON THEN             /*IS DSAB MARKED IN-USE?      */
         L     @01,DSABPTR                                      02S0076
         TM    DSABNUSE(@01),B'00000001'                        02S0076
         BNO   @RF00076                                         02S0076
*      ERRCODE = RCDDUNAV;             /*YES, SET IN-USE ERROR CODE  */
         MVC   ERRCODE(2,@10),@CB00548                          02S0077
*    ELSE;                             /*NOT IN USE                  */
@RF00076 DS    0H                                               02S0079
*    IF DSABOPCT ^= ZERO THEN          /*IS DATA SET OPEN ?          */
         L     @10,DSABPTR                                      02S0079
         LH    @10,DSABOPCT(,@10)                               02S0079
         LTR   @10,@10                                          02S0079
         BZ    @RF00079                                         02S0079
*      ERRCODE = RCOPENDS;             /*YES, SET DS OPEN ERROR CODE */
         L     @10,@PC00001+4                                   02S0080
         MVC   ERRCODE(2,@10),@CB00550                          02S0080
*  END;                                /*END TEST FOR IN-USE & OPEN  */
@RF00079 DS    0H                                               02S0082
*/********************************************************************/
*/* IF ERRCODE IS ZERO AT THIS POINT, THEN CHECK FOR PERMANENTLY     */
*/* CONCATENATED OR DSAB NOT CONVERTIBLE.                            */
*/********************************************************************/
*IF ERRCODE = ZERO THEN                /*IS RETURN CODE STILL ZERO?  */
@RF00074 L     @10,@PC00001+4                                   02S0082
         ICM   @15,3,ERRCODE(@10)                               02S0082
         BNZ   @RF00082                                         02S0082
*  DO;                                 /*YES, CONTINUE               */
*    IF DSABPCAT = OFF & DSABCONV = ON THEN /*IS ENTRY USABLE ?      */
         L     @01,DSABPTR                                      02S0084
         TM    DSABCONV(@01),B'00010000'                        02S0084
         BNO   @RF00084                                         02S0084
         TM    DSABPCAT(@01),B'00000100'                        02S0084
         BNZ   @RF00084                                         02S0084
*      ERRCODE = RCDDCONV;              /*NO, SET NOT PERM CONCAT &
*                                        ENTRY CONVERTIBLE ERR CODE  */
         MVC   ERRCODE(2,@10),@CB00554                          02S0085
*  END;                                /*END FINAL ATTRIBUTE CHECKS  */
@RF00084 DS    0H                                               02S0087
*/********************************************************************/
*/* IF ERRCODE IS ZERO AT THIS POINT, THEN THE DSAB (OR DSABS FOR    */
*/* A CONCATENATED GROUP) CAN BE MARKED IN-USE                       */
*/********************************************************************/
*IF ERRCODE = ZERO THEN                /*IS RETURN CODE STILL ZERO?  */
@RF00082 L     @10,@PC00001+4                                   01S0087
         ICM   @15,3,ERRCODE(@10)                               01S0087
         BNZ   @RF00087                                         01S0087
*  DO;                                 /*YES, MARK DSAB(S) IN USE    */
*    CONTINUE = ON;                    /*INIT LOOP CONTROL SWITCH    */
         OI    CONTINUE,B'10000000'                             01S0089
*    DO WHILE CONTINUE = ON;           /*LOOP CONTROL                */
         B     @DE00090                                         01S0090
@DL00090 DS    0H                                               01S0091
*      DSABNUSE = ON;                  /*TURN ON IN-USE ATTRIBUTE    */
         L     @10,DSABPTR                                      01S0091
         OI    DSABNUSE(@10),B'00000001'                        01S0091
*      DSABTCBP = DDNTCBP;             /* STORE TCB ADDRESS IN DSAB  */
         L     @15,@PC00001+8                                   01S0092
         L     @15,DDNTCBP(,@15)                                01S0092
         ST    @15,DSABTCBP(,@10)                               01S0092
*      IF DUMRETUP ^= ZERO & REALDATA = OFF THEN /* RETURN DUMMY ?   */
         L     @15,DUMRETUP                                     01S0093
         LTR   @15,@15                                          01S0093
         BZ    @RF00093                                         01S0093
         TM    REALDATA,B'01000000'                             01S0093
         BNZ   @RF00093                                         01S0093
*       DO;                            /* CHECK FOR DUMMY            */
*         IF TIOEQNAM = ON × TIOTTERM = ON × TIOEFSRT ^= 0      01S0095
*           × SCTDUMMY = OFF THEN      /* NON DUMMY ?                */
         L     @15,DSABTIOT(,@10)                               01S0095
         TM    TIOEQNAM(@15),B'00101000'                        01S0095
         BNZ   @RT00095                                         01S0095
         L     @15,TIOEFSRT-1(,@15)                             01S0095
         LA    @15,0(,@15)                                      01S0095
         LTR   @15,@15                                          01S0095
         BNZ   @RT00095                                         01S0095
         L     @10,DSABSIOT(,@10)                               01S0095
         TM    SCTDUMMY(@10),B'10000000'                        01S0095
         BNZ   @RF00095                                         01S0095
@RT00095 DS    0H                                               01S0096
*         REALDATA = ON;               /* YES INDICATE NON-DUMMY     */
         OI    REALDATA,B'01000000'                             01S0096
*       END;                           /* END TEST FOR DUMMY         */
@RF00095 DS    0H                                               01S0098
*      IF DSABCATM = ON THEN           /* IS THIS A CONCAT GROUP ?   */
@RF00093 L     @10,DSABPTR                                      01S0098
         TM    DSABCATM(@10),B'00000010'                        01S0098
         BNO   @RF00098                                         01S0098
*        DO;                           /* YES                        */
*          IF DSABFCHN = ZERO THEN     /*MORE DSABS TO PROCESS ?     */
         L     @10,DSABFCHN(,@10)                               01S0100
         LTR   @10,@10                                          01S0100
         BNZ   @RF00100                                         01S0100
*            CONTINUE = OFF;           /*NO, END PROCESSING          */
         NI    CONTINUE,B'01111111'                             01S0101
*          ELSE                        /*YES, MORE DSABS             */
*            DO;                       /* UPDATE DSABPTR             */
         B     @RC00100                                         01S0102
@RF00100 DS    0H                                               01S0103
*              DSABPTR = DSABFCHN;     /*GET NEXT DSAB ADDRESS       */
         L     @10,DSABPTR                                      01S0103
         L     @10,DSABFCHN(,@10)                               01S0103
         ST    @10,DSABPTR                                      01S0103
*              IF TIOEDDNM(1) ^= BLANK THEN                     01S0104
         L     @10,DSABTIOT(,@10)                               01S0104
         CLI   TIOEDDNM(@10),C' '                               01S0104
         BE    @RF00104                                         01S0104
*                CONTINUE = OFF;       /*STOP IF NON-BLANK DDNAME    */
         NI    CONTINUE,B'01111111'                             01S0105
*              ELSE;                   /* FALL THROUGH               */
@RF00104 DS    0H                                               01S0107
*            END;                      /*END UPDATE OF DSAB PTR      */
*        END;                          /*END CONCAT GROUP PROCESSING */
*      ELSE                            /* STOP PROCESSING            */
*        CONTINUE = OFF;               /* TURN OFF SWITCH,END LOOP   */
         B     @RC00098                                         01S0109
@RF00098 NI    CONTINUE,B'01111111'                             01S0109
*     END;                             /* END MARK IN-USE LOOP       */
@RC00098 DS    0H                                               01S0110
@DE00090 TM    CONTINUE,B'10000000'                             01S0110
         BO    @DL00090                                         01S0110
*    IF DUMRETUP ^= ZERO THEN          /* RETURN DUMMY INDICATOR ?   */
         L     @10,DUMRETUP                                     01S0111
         LTR   @10,@10                                          01S0111
         BZ    @RF00111                                         01S0111
*      DO;                             /* YES                        */
*        TEXTPTR = DUMRETUP;           /* POINT TO TEXT UNIT         */
         LR    TEXTPTR,@10                                      01S0113
*        IF REALDATA = ON THEN         /* WAS A NON-DUMMY DATASET FND*/
         TM    REALDATA,B'01000000'                             01S0114
         BNO   @RF00114                                         01S0114
*          TEXTUPAR(1) = NONDUMMY;     /* YES, INDICATE NON-DUMMY    */
         MVI   TEXTUPAR(TEXTPTR),X'00'                          01S0115
*        ELSE                          /* OTHERWISE DUMMY FOUND      */
*          TEXTUPAR(1) = DUMMY;        /* INDICATE DUMMY DATASET     */
         B     @RC00114                                         01S0116
@RF00114 MVI   TEXTUPAR(TEXTPTR),X'80'                          01S0116
*      END;                            /* END DUMMY INDICATOR PROCESS*/
*    ELSE;                             /* NO INDICATOR REQUESTED     */
@RF00111 DS    0H                                               01S0119
*  END;                                /*END SUCCESSFUL PROCESSING   */
*ELSE;                                 /*ERRCODE NOT ZERO            */
@RF00087 DS    0H                                               01S0121
*RETURN CODE(0);                       /*PASS RETURN CODE            */
@RC00087 L     @13,4(,@13)                                      01S0121
         L     @00,@SIZDATD                                     01S0121
         LR    @01,@11                                          01S0121
         FSPACE   R,LV=(0),A=(1)
         SLR   @15,@15                                          01S0121
         L     @14,12(,@13)                                     01S0121
         LM    @00,@12,20(@13)                                  01S0121
         BR    @14                                              01S0121
*END IEFDB490                                                   01S0122
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.      *
*/*%INCLUDE SYSLIB  (DDNALCSP)                                        *
*/*%INCLUDE SYSLIB  (DDNALCDT)                                        *
*/*%INCLUDE SYSLIB  (IEFASIOT)                                        *
*/*%INCLUDE SYSLIB  (IEFTIOT1)                                        *
*/*%INCLUDE SYSLIB  (IEFZB436)                                        *
*/*%INCLUDE SYSLIB  (IEFZB4D1)                                        *
*/*%INCLUDE SYSLIB  (IEFZB4D5)                                        *
*/*%INCLUDE SYSLIB  (IEFZB4D7)                                        *
*/*%INCLUDE SYSLIB  (IEFZB4D9)                                        *
*/*%INCLUDE SYSLIB  (IEFZB4DA)                                        *
*/*%INCLUDE SYSLIB  (IEZJSCB )                                        *
*/*%INCLUDE SYSLIB  (IHADSAB )                                        *
*/*%INCLUDE SYSLIB  (IHAQDB  )                                        *
*/*%INCLUDE SYSLIB  (DDNLCCHK)                                        *
*/*%INCLUDE SYSLIB  (DDNCHKSP)                                        *
*;                                                              01S0122
@DATA    DS    0H
@SM00879 MVC   DDNAREA(0),TEXTUPAR(TEXTPTR)
@DATD    DSECT
         DS    0F
@SA00001 DS    18F
@PC00001 DS    7F
@AL00001 DS    6A
@TF00001 DS    F
@TF00002 DS    F
@TF00003 DS    F
@TF00004 DS    F
IEFDB490 CSECT
         DS    0F
@DATD    DSECT
         DS    0D
DDNAMEP  DS    A
DSABPTR  DS    A
RTNAREAP DS    A
RTNDDNAD DS    A
TIOTPTR  DS    A
S99TXTPP DS    A
TXTUFLDP DS    A
TCBJSCB  DS    A
QDBPTR   DS    A
SWACTLS  DS    FL2
         ORG   SWACTLS
SWASN    DS    BL1
SWDEL    EQU   SWACTLS+0
SWREAD   EQU   SWACTLS+0
SWWRT    EQU   SWACTLS+0
SWNEW    EQU   SWACTLS+0
SWFREE   EQU   SWACTLS+0
SWMOD    EQU   SWACTLS+0
SWOLD    EQU   SWACTLS+0
SWCHN    DS    BL1
@NM00022 EQU   SWACTLS+1
         ORG   SWACTLS+2
DDNAREA  DS    CL8
MASKS    DS    CL2
         ORG   MASKS
DUPEMASK DS    CL1
MUTEMASK DS    CL1
         ORG   MASKS+2
SVALIST  DS    CL4
         ORG   SVALIST
SVAONE   DS    AL4
         ORG   SVAONE
SVA01PTR DS    AL3
@NM00001 DS    BL1
         ORG   SVALIST+4
SVABLIST DS    CL4
         ORG   SVABLIST
SIOTPTR  DS    AL4
         ORG   SVABLIST+4
SWITCHES DS    BL1
         ORG   SWITCHES
CONTINUE DS    BL1
REALDATA EQU   SWITCHES+0
@NM00002 EQU   SWITCHES+0
         ORG   SWITCHES+1
         DS    CL3
KEYTABLE DS    CL8
         ORG   KEYTABLE
DDNAMTUP DS    AL4
DUMRETUP DS    AL4
         ORG   KEYTABLE+8
IEFDB490 CSECT
         DS    0F
@SIZDATD DC    AL1(230)
         DC    AL3(@ENDDATD-@DATD)
@CV00107 DC    V(IEFDB4FC)
@CV00108 DC    V(IEFDB4FF)
         DS    0D
@CC00092 DC    C'JOBCAT  '
@CC00094 DC    C'JOBLIB  '
@CC00102 DC    C'STEPCAT '
@CC00104 DC    C'STEPLIB '
@CB00520 DC    X'0364'
@CB00536 DC    X'0388'
@CB00548 DC    X'0410'
@CB00550 DC    X'0420'
@CB00554 DC    X'0434'
@CB00556 DC    X'0438'
KEYDICT  DS    CL29
         ORG   KEYDICT
KYDDNAME DS    CL13
         ORG   KYDDNAME
DDNAMLEN DC    AL1(13)
DDNAMHEX DC    X'0001'
DDNAMMXL DC    X'0008'
DDNAMMNL DC    X'0001'
DDNAMMXN DC    X'0001'
DDNAMMNN DC    X'0001'
DDNAMKTB DC    X'0000'
         ORG   KEYDICT+13
KYDUMRET DS    CL13
         ORG   KYDUMRET
DUMRTLEN DC    AL1(13)
DUMRTHEX DC    X'0002'
DUMRTMXL DC    X'0001'
DUMRTMNL DC    X'0001'
DUMRTMXN DC    X'0001'
DUMRTMNN DC    X'0001'
DUMRTKTB DC    X'0004'
         ORG   KEYDICT+26
KYENDDCT DS    CL3
         ORG   KYENDDCT
ENDDCLEN DC    AL1(3)
ENDDCHEX DC    X'FFFF'
         ORG   KEYDICT+29
IEFDB490 CSECT
         DS   0H
PATCHLOC DC ((@DATA-@PSTART)/20)X'00'
@DATD    DSECT
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
IEFDB490 CSECT
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
TEXTPTR  EQU   @02
INDMSIOT EQU   0
SCTUSADD EQU   INDMSIOT+20
SIOTBYT1 EQU   INDMSIOT+43
SIOTBYT3 EQU   INDMSIOT+46
SIOTTSTC EQU   INDMSIOT+47
SIOTBYT0 EQU   INDMSIOT+52
SCTSDISP EQU   INDMSIOT+55
SCTSBYT1 EQU   INDMSIOT+56
SCTDUMMY EQU   SCTSBYT1
SCTSBYT2 EQU   INDMSIOT+57
SCTSBYT3 EQU   INDMSIOT+58
SCTSBYT4 EQU   INDMSIOT+59
SCTUTYPE EQU   INDMSIOT+60
SIOTDEVT EQU   SCTUTYPE
SIOUBYT3 EQU   SIOTDEVT+2
SIOTALTD EQU   INDMSIOT+92
SIOTBYT2 EQU   INDMSIOT+103
TIOT1    EQU   0
TIOENTRY EQU   0
TIOESTTA EQU   TIOENTRY+1
TIOERLOC EQU   TIOENTRY+2
TIOELINK EQU   TIOERLOC+1
TIOTTERM EQU   TIOELINK
TIOEQNAM EQU   TIOELINK
TIOESYOT EQU   TIOELINK
TIOEDDNM EQU   TIOENTRY+4
TIOESTTC EQU   TIOENTRY+15
TIOESTTB EQU   TIOENTRY+16
TIOEFSRT EQU   TIOENTRY+17
POOLSTAR EQU   TIOENTRY+20
TEXTUNIT EQU   0
TEXTUENT EQU   TEXTUNIT+4
TEXTULNG EQU   TEXTUENT
TEXTUPAR EQU   TEXTUENT+2
TXTUPLST EQU   0
TXTUNITP EQU   TXTUPLST
TXTUPELM EQU   0
TXTPLENT EQU   TXTUPELM
TEXTUFLD EQU   0
QDB      EQU   0
IEZJSCB  EQU   0
JSCBSEC1 EQU   IEZJSCB+188
JSCHPCE  EQU   JSCBSEC1+4
JSCBDCB  EQU   JSCBSEC1+36
JSCBOPTS EQU   JSCBSEC1+48
JSCBSWT1 EQU   JSCBSEC1+55
JSCBWTP  EQU   JSCBSEC1+64
JSCBWTFG EQU   JSCBWTP
JSCBEND1 EQU   IEZJSCB+260
DSAB     EQU   0
DSABFCHN EQU   DSAB+4
DSABOPCT EQU   DSAB+14
DSABTIOT EQU   DSAB+16
DSABGIDP EQU   DSAB+24
DSABANMP EQU   DSAB+28
DSABORG  EQU   DSAB+32
DSABORG1 EQU   DSABORG
DSABORG2 EQU   DSABORG+1
DSABFLG1 EQU   DSAB+34
DSABCONV EQU   DSABFLG1
DSABPCAT EQU   DSABFLG1
DSABCATM EQU   DSABFLG1
DSABNUSE EQU   DSABFLG1
DSABFLG2 EQU   DSAB+35
DSABFLG3 EQU   DSAB+36
DSABFLG4 EQU   DSAB+37
DSABTCBP EQU   DSAB+40
DSABSIOT EQU   DSAB+64
DSABANMI EQU   0
DSABGIDL EQU   0
DDNALCTP EQU   0
DDNRETN  EQU   0
ERRCODE  EQU   DDNRETN
DDNCTRLP EQU   0
DDNJSCBP EQU   DDNCTRLP
DDNTCBP  EQU   DDNCTRLP+8
ALFNCMAP EQU   0
INPUTSW  EQU   ALFNCMAP
PROCESSW EQU   ALFNCMAP+6
ERRPROSW EQU   PROCESSW
DEPARMS  EQU   0
DENQRETN EQU   DEPARMS+232
DEDMYEPA EQU   DEPARMS+240
DEDMYAS  EQU   DEPARMS+260
LASTEPAP EQU   0
SMFPARMS EQU   0
TIOEDEVE EQU   TIOESTTB
TIOSTTB  EQU   TIOEDEVE
DSABQDB  EQU   QDB
DSQFRSTP EQU   DSABQDB+12
DSQLASTP EQU   DSABQDB+16
JSCBSEC2 EQU   JSCBEND1
JSCBSEC3 EQU   JSCBEND1
JSCBJCT  EQU   JSCBSEC3
JSCBJCTA EQU   JSCBJCT+1
JSCBASID EQU   JSCBSEC3+8
JSCBJNL  EQU   JSCBSEC3+28
JSCBJJSB EQU   JSCBJNL
JSCBSUB  EQU   JSCBSEC3+40
JSCDSABQ EQU   JSCBSEC3+60
JSCSCT   EQU   JSCBSEC3+68
JSCRSV35 EQU   JSCBSEC3+96
JSCRSV36 EQU   JSCRSV35
JSCRSV37 EQU   JSCRSV35+2
JSCRSV45 EQU   JSCBSEC3+112
JSCRSV46 EQU   JSCRSV45
JSCRSV47 EQU   JSCRSV45+2
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
JSCBEND3 EQU   JSCBSEC3+120
JSCRSV52 EQU   JSCBSEC3+116
JSCRSV51 EQU   JSCRSV47+1
JSCRSV50 EQU   JSCRSV47
JSCRSV49 EQU   JSCRSV46+1
JSCRSV48 EQU   JSCRSV46
JSCRSV44 EQU   JSCBSEC3+108
JSCRSV43 EQU   JSCBSEC3+104
JSCRSV42 EQU   JSCBSEC3+100
JSCRSV41 EQU   JSCRSV37+1
JSCRSV40 EQU   JSCRSV37
JSCRSV39 EQU   JSCRSV36+1
JSCRSV38 EQU   JSCRSV36
JSCBUFPT EQU   JSCBSEC3+92
JSCBACT  EQU   JSCBSEC3+88
JSCBSWSP EQU   JSCBSEC3+87
JSCRSV33 EQU   JSCBSEC3+86
JSCDDNUM EQU   JSCBSEC3+84
JSCRSV53 EQU   JSCBSEC3+82
JSCDDNNO EQU   JSCBSEC3+80
JSCBVATA EQU   JSCBSEC3+76
JSCTMCOR EQU   JSCBSEC3+72
JSCSCTP  EQU   JSCSCT+1
JSCRSV55 EQU   JSCSCT
JSCRSV54 EQU   JSCBSEC3+64
JSCBSSIB EQU   JSCBSEC3+56
JSCBFRBA EQU   JSCBSEC3+48
JSCRSV28 EQU   JSCBSEC3+46
JSCBSONO EQU   JSCBSEC3+44
JSCBSUBA EQU   JSCBSUB+1
JSCRSV31 EQU   JSCBSUB
JSCBSMLR EQU   JSCBSEC3+36
JSCBJNLR EQU   JSCBSEC3+32
JSCBJNLA EQU   JSCBJNL+1
JSCBJSBT EQU   JSCBJJSB
JSCBJSBX EQU   JSCBJJSB
JSCBJSBA EQU   JSCBJJSB
JSCBJSBI EQU   JSCBJJSB
@NM00034 EQU   JSCBJJSB
JSCBJNLE EQU   JSCBJJSB
JSCBJNLF EQU   JSCBJJSB
JSCBJNLN EQU   JSCBJJSB
@NM00033 EQU   JSCBSEC3+24
JSCBJRBA EQU   JSCBSEC3+16
JSCBIECB EQU   JSCBSEC3+12
JSCRSV25 EQU   JSCBSEC3+10
JSCBTJID EQU   JSCBASID
JSCBPSCB EQU   JSCBSEC3+4
JSCJCTP  EQU   JSCBJCTA
JSCRSV24 EQU   JSCBJCT
JSCBEND2 EQU   JSCBSEC2
@NM00023 EQU   DSABQDB+24
DSQBDSP  EQU   DSABQDB+22
DSQFDSP  EQU   DSABQDB+20
DSQBADFC EQU   DSQLASTP
DSQBADBC EQU   DSQFRSTP
DSQNELMS EQU   DSABQDB+8
DSQDBLN  EQU   DSABQDB+6
DSQATTRS EQU   DSABQDB+4
DSQDBID  EQU   DSABQDB
TIOUCBP  EQU   TIOEDEVE+1
TIOVERF  EQU   TIOSTTB
TIOUNLD  EQU   TIOSTTB
TIOMNTD  EQU   TIOSTTB
TIOSETU  EQU   TIOSTTB
TIOVLSR  EQU   TIOSTTB
TIOPVIO  EQU   TIOSTTB
TIOREQD  EQU   TIOSTTB
TIOUSED  EQU   TIOSTTB
SMFBUFLP EQU   SMFPARMS+4
SMFBUF1P EQU   SMFPARMS
@NM00030 EQU   DEPARMS+304
DETCTIOL EQU   DEPARMS+300
DETCTIOP EQU   DEPARMS+296
DETDQLST EQU   DEPARMS+280
DEALASTP EQU   DEPARMS+276
DEASGNP  EQU   DEDMYAS+12
@NM00029 EQU   DEDMYAS
DEWLASTP EQU   DEPARMS+256
DEWRITP  EQU   DEDMYEPA+12
@NM00028 EQU   DEDMYEPA
DEDSNQRC EQU   DENQRETN+4
DEDSNQEN EQU   DENQRETN
DECPYLEN EQU   DEPARMS+228
DECPYLOC EQU   DEPARMS+224
DEJSCB   EQU   DEPARMS+220
DESCT    EQU   DEPARMS+216
DEJCT    EQU   DEPARMS+212
DESIOT   EQU   DEPARMS+208
DETCB    EQU   DEPARMS+204
DEALFMAP EQU   DEPARMS+200
DECORE   EQU   DEPARMS
@NM00027 EQU   PROCESSW+1
HSKPDQSW EQU   PROCESSW+1
DISMSGSW EQU   PROCESSW+1
USERERSW EQU   PROCESSW+1
EPALSISW EQU   PROCESSW+1
EPASCTSW EQU   PROCESSW+1
EPAJCTSW EQU   PROCESSW
FRRPERSW EQU   PROCESSW
DCBSPCSW EQU   PROCESSW
NQEXCLSW EQU   PROCESSW
UNALOCSW EQU   ERRPROSW
DEQDSNSW EQU   ERRPROSW
COPYSW   EQU   PROCESSW
@NM00026 EQU   PROCESSW
@NM00025 EQU   INPUTSW+3
PCATINIT EQU   INPUTSW+3
UNITDEVT EQU   INPUTSW+3
MOUNTSW  EQU   INPUTSW+2
CATLOGSW EQU   INPUTSW+2
TIOTNQSW EQU   INPUTSW+2
OFFLINSW EQU   INPUTSW+2
WTUNTSW  EQU   INPUTSW+2
NORESSW  EQU   INPUTSW+2
WTDSNSW  EQU   INPUTSW+2
WTVOLSW  EQU   INPUTSW+2
@NM00024 EQU   INPUTSW
JOBRLSYS EQU   INPUTSW
NOMONTSW EQU   INPUTSW
NOCNVTSW EQU   INPUTSW
ONCNVTSW EQU   INPUTSW
DDNSCTP  EQU   DDNCTRLP+16
DDNJCTP  EQU   DDNCTRLP+12
DDNASCBP EQU   DDNCTRLP+4
INFOCODE EQU   DDNRETN+2
DSABGRID EQU   DSABGIDL+4
DSABLLEN EQU   DSABGIDL
DSABANAM EQU   DSABANMI+1
DSABANML EQU   DSABANMI
DSABRS04 EQU   DSAB+68
DSABRS03 EQU   DSAB+62
DSABDCBM EQU   DSAB+56
DSABSSCM EQU   DSAB+52
DSABSSNM EQU   DSAB+48
DSABPTTR EQU   DSAB+44
DSABRS02 EQU   DSAB+38
@NM00039 EQU   DSABFLG4
DSABCKSI EQU   DSABFLG4
DSABCKVL EQU   DSABFLG4
DSABCKDS EQU   DSABFLG4
@NM00038 EQU   DSABFLG3
DSABJSCT EQU   DSABFLG3
DSABCATL EQU   DSABFLG3
DSABVMSC EQU   DSABFLG3
DSABVAM  EQU   DSABFLG3
DSABPASS EQU   DSABFLG3
DSABDEFR EQU   DSABFLG3
@NM00037 EQU   DSABFLG2
DSABUNAL EQU   DSABFLG2
DSABIRM  EQU   DSABFLG2
DSABOPEN EQU   DSABFLG2
DSABDCAT EQU   DSABFLG1
DSABDCNV EQU   DSABFLG1
DSABPALC EQU   DSABFLG1
DSABDALC EQU   DSABFLG1
@NM00036 EQU   DSABORG2
DSABTR   EQU   DSABORG2
DSABAM   EQU   DSABORG2
@NM00035 EQU   DSABORG2
DSABTQ   EQU   DSABORG2
DSABTX   EQU   DSABORG2
DSABGS   EQU   DSABORG2
DSABU    EQU   DSABORG1
DSABPO   EQU   DSABORG1
DSABMQ   EQU   DSABORG1
DSABCQ   EQU   DSABORG1
DSABCX   EQU   DSABORG1
DSABDA   EQU   DSABORG1
DSABPS   EQU   DSABORG1
DSABIS   EQU   DSABORG1
DSABSSVA EQU   DSAB+21
DSABRS01 EQU   DSAB+20
DSABLNTH EQU   DSAB+12
DSABBCHN EQU   DSAB+8
DSABID   EQU   DSAB
JSCBCSCB EQU   JSCBSEC1+68
JSCBPMG  EQU   JSCBWTP+2
JSCBWTSP EQU   JSCBWTP+1
JSCRSV23 EQU   JSCBWTFG
JSCRSV22 EQU   JSCBWTFG
JSCRSV21 EQU   JSCBWTFG
JSCRSV20 EQU   JSCBWTFG
JSCRSV19 EQU   JSCBWTFG
JSCRSV18 EQU   JSCBWTFG
JSCBRET  EQU   JSCBWTFG
JSCBIOFG EQU   JSCBWTFG
@NM00032 EQU   JSCBSEC1+60
JSCBQMPI EQU   JSCBSEC1+56
JSCBPMSG EQU   JSCBSWT1
JSCRSV16 EQU   JSCBSWT1
JSCRSV15 EQU   JSCBSWT1
JSCRSV14 EQU   JSCBSWT1
JSCRSV13 EQU   JSCBSWT1
JSCRSV12 EQU   JSCBSWT1
JSCRSV11 EQU   JSCBSWT1
JSCBPASS EQU   JSCBSWT1
JSCBTTTR EQU   JSCBSEC1+52
JSCRSV10 EQU   JSCBSEC1+49
JSCBAUTH EQU   JSCBOPTS
JSCSIOTS EQU   JSCBOPTS
JSCRSV08 EQU   JSCBOPTS
JSCRSV07 EQU   JSCBOPTS
JSCRSV06 EQU   JSCBOPTS
JSCBLONG EQU   JSCBOPTS
JSCRSV05 EQU   JSCBOPTS
JSCRSV04 EQU   JSCBOPTS
JSCBSECB EQU   JSCBSEC1+44
JSCRSV03 EQU   JSCBSEC1+41
JSCBSTEP EQU   JSCBSEC1+40
JSCBDCBA EQU   JSCBDCB+1
JSCRSV02 EQU   JSCBDCB
JSCBID   EQU   JSCBSEC1+32
JSCBDBTB EQU   JSCBSEC1+28
JSCBIJSC EQU   JSCBSEC1+24
JSCBTCBP EQU   JSCBSEC1+20
JSCBPCC  EQU   JSCBSEC1+16
JSCBTCP  EQU   JSCBSEC1+12
JSCBSHR  EQU   JSCBSEC1+8
JSCHPCEA EQU   JSCHPCE+1
JSCRSV32 EQU   JSCHPCE
JSCRSV01 EQU   JSCBSEC1
@NM00031 EQU   IEZJSCB
QDBRV002 EQU   QDB+28
QDBPRDS  EQU   QDB+26
QDBPRSZ  EQU   QDB+24
QDBBPTDS EQU   QDB+22
QDBFPTDS EQU   QDB+20
QDBLELMP EQU   QDB+16
QDBFELMP EQU   QDB+12
QDBNELMS EQU   QDB+8
QDBRV001 EQU   QDB+6
QDBATTR  EQU   QDB+4
QDBQDB   EQU   QDB
TEXTUPRM EQU   TEXTUFLD+2
TEXTULEN EQU   TEXTUFLD
TXTPLEND EQU   TXTPLENT
TXTUPEND EQU   TXTUNITP
TEXTUNUM EQU   TEXTUNIT+2
TEXTUKEY EQU   TEXTUNIT
TIOTFEND EQU   POOLSTAR+16
TIOPSLOT EQU   POOLSTAR+13
TIOPSTTB EQU   POOLSTAR+12
TIOPPOOL EQU   POOLSTAR+4
TIOPNSRT EQU   POOLSTAR+3
@NM00021 EQU   POOLSTAR+2
TIOPNSLT EQU   POOLSTAR+1
@NM00020 EQU   POOLSTAR
TIOSVERF EQU   TIOESTTB
TIOSUNLD EQU   TIOESTTB
TIOSMNTD EQU   TIOESTTB
TIOSSETU EQU   TIOESTTB
TIOSVLSR EQU   TIOESTTB
TIOSPVIO EQU   TIOESTTB
TIOSREQD EQU   TIOESTTB
TIOSUSED EQU   TIOESTTB
TIOSBALS EQU   TIOESTTC
TIOSBALP EQU   TIOESTTC
TIOSVOLS EQU   TIOESTTC
TIOSVOLP EQU   TIOESTTC
TIOSAFFS EQU   TIOESTTC
TIOSAFFP EQU   TIOESTTC
TIOSDEFR EQU   TIOESTTC
TIOSDKCR EQU   TIOESTTC
TIOEJFCB EQU   TIOENTRY+12
TIOTREM  EQU   TIOELINK
TIOESSDS EQU   TIOESYOT
TIOESYIN EQU   TIOELINK
TIOEDYNM EQU   TIOELINK
TIOTRV01 EQU   TIOELINK
TIOSYOUT EQU   TIOELINK
TIOEWTCT EQU   TIOERLOC
TIOSDSP2 EQU   TIOESTTA
TIOSDSP1 EQU   TIOESTTA
TIOSLABL EQU   TIOESTTA
TIOSDADS EQU   TIOESTTA
TIOSJBLB EQU   TIOESTTA
TIOSPLTS EQU   TIOESTTA
TIOSPLTP EQU   TIOESTTA
TIOSLTYP EQU   TIOESTTA
TIOELNGH EQU   TIOENTRY
TIOCSTEP EQU   TIOT1+8
TIOCNJOB EQU   TIOT1
SIODDSNL EQU   INDMSIOT+173
SIOVDSNL EQU   INDMSIOT+172
SIOVDSNT EQU   INDMSIOT+170
SVOLUNNO EQU   INDMSIOT+168
SIOTVMVP EQU   INDMSIOT+164
SIOTJFX  EQU   INDMSIOT+160
SJFCBPTR EQU   INDMSIOT+156
SIOTNPTR EQU   INDMSIOT+152
SIOTETIO EQU   INDMSIOT+148
SIOTATE  EQU   INDMSIOT+144
SVOLUNAD EQU   INDMSIOT+140
SIOTEDLP EQU   INDMSIOT+136
SIOTEDLS EQU   INDMSIOT+132
SIOTRSNC EQU   INDMSIOT+130
SCTANAME EQU   INDMSIOT+122
@NM00019 EQU   INDMSIOT+108
SIOTSSNM EQU   INDMSIOT+104
SIODDQCR EQU   SIOTBYT2
SIOVDQCR EQU   SIOTBYT2
SIOTCVOL EQU   SIOTBYT2
SIOTCNEW EQU   SIOTBYT2
SIOTCALC EQU   SIOTBYT2
SIOTGALL EQU   SIOTBYT2
SIOTDSPD EQU   SIOTBYT2
SIOTDMND EQU   SIOTBYT2
SIOTOPUC EQU   INDMSIOT+99
SIOTOUTR EQU   INDMSIOT+97
SIOTOUTC EQU   INDMSIOT+96
@NM00018 EQU   INDMSIOT+93
SIOTAUNC EQU   SIOTALTD
SIOTACAT EQU   SIOTALTD
SIOTADEL EQU   SIOTALTD
SIOTAKEP EQU   SIOTALTD
SIOTNPRV EQU   SIOTALTD
SIOJCATS EQU   SIOTALTD
@NM00017 EQU   SIOTALTD
@NM00016 EQU   SIOTALTD
@NM00015 EQU   INDMSIOT+91
SIOTNDSB EQU   INDMSIOT+88
@NM00014 EQU   INDMSIOT+84
SIOTDPCD EQU   INDMSIOT+82
@NM00013 EQU   INDMSIOT+81
SCTOUTPN EQU   INDMSIOT+80
SCTOUTNO EQU   INDMSIOT+76
SCTOUTNM EQU   INDMSIOT+68
SIOUCBAD EQU   SCTUTYPE+5
SIOUCNVT EQU   SCTUTYPE+4
SIOUBYT4 EQU   SIOTDEVT+3
@NM00012 EQU   SIOUBYT3
SIO3UREC EQU   SIOUBYT3
SIO3DISP EQU   SIOUBYT3
SIO3DACC EQU   SIOUBYT3
SIO3COMM EQU   SIOUBYT3
SIO3TAPE EQU   SIOUBYT3
SIOUBYT2 EQU   SIOTDEVT+1
SIOUBYT1 EQU   SIOTDEVT
SIOTOMN  EQU   SCTSBYT4
SIOTIPDI EQU   SCTSBYT4
SIOTVAFF EQU   SCTSBYT4
SIOTSTEP EQU   SCTSBYT4
SIOTASCI EQU   SCTSBYT4
@NM00011 EQU   SCTSBYT4
SIOTGDGA EQU   SCTSBYT4
SCTSGDGS EQU   SCTSBYT4
SCTSOLD  EQU   SCTSBYT3
SCTSMOD  EQU   SCTSBYT3
SCTSNEW  EQU   SCTSBYT3
SCTSYSOU EQU   SCTSBYT3
SCTVREF  EQU   SCTSBYT3
@NM00010 EQU   SCTSBYT3
SCTSYSNE EQU   SCTSBYT3
SCTDSNRF EQU   SCTSBYT3
SCTRECVD EQU   SCTSBYT2
SCTDEFER EQU   SCTSBYT2
SCTLABEL EQU   SCTSBYT2
SCTUNLBD EQU   SCTSBYT2
SCTJOBLB EQU   SCTSBYT2
SCTVOLAF EQU   SCTSBYT2
SIOTCATL EQU   SCTSBYT2
SIOCLUNL EQU   SCTSBYT2
SIOTJSCT EQU   SCTSBYT1
SCTUNAFF EQU   SCTSBYT1
SCTPARLM EQU   SCTSBYT1
SIOTQDSN EQU   SCTSBYT1
SIOTGDSN EQU   SCTSBYT1
SIOTCCAT EQU   SCTSBYT1
SCTSYSIN EQU   SCTSBYT1
SIOTUNCT EQU   SCTSDISP
SIOTCTLG EQU   SCTSDISP
SIOTDLET EQU   SCTSDISP
SIOTKEEP EQU   SCTSDISP
SIOTPASS EQU   SCTSDISP
SIOTPRIV EQU   SCTSDISP
S3400DSP EQU   SCTSDISP
@NM00009 EQU   SCTSDISP
SIOTVLCT EQU   INDMSIOT+54
SCTNMBUT EQU   INDMSIOT+53
SIOTRTRY EQU   SIOTBYT0
SIOTPUPV EQU   SIOTBYT0
SIOTNOPV EQU   SIOTBYT0
SIOTGIGN EQU   SIOTBYT0
SPVTAMSG EQU   SIOTBYT0
SIOTFUDA EQU   SIOTBYT0
SIOTDYAL EQU   SIOTBYT0
SIOTSSDS EQU   SIOTBYT0
SIOTGIID EQU   INDMSIOT+50
SCTVOLCT EQU   INDMSIOT+49
SCTSPOOL EQU   INDMSIOT+48
SIOTQNAM EQU   SIOTTSTC
@NM00008 EQU   SIOTTSTC
SIOTTERM EQU   SIOTTSTC
@NM00007 EQU   SIOTTSTC
@NM00006 EQU   SIOTBYT3
SIOTJES3 EQU   SIOTBYT3
SIOCDEVT EQU   SIOTBYT3
SIOALIAS EQU   SIOTBYT3
SCTDDINO EQU   INDMSIOT+44
SIOTDDNT EQU   SIOTBYT1
SIOTALCD EQU   SIOTBYT1
SIODADSM EQU   SIOTBYT1
SIOTDADR EQU   SIOTBYT1
SIODUNAL EQU   SIOTBYT1
SIOVAMDS EQU   SIOTBYT1
SIOTHOLD EQU   SIOTBYT1
SIOTOCKP EQU   SIOTBYT1
SIOPSCNT EQU   INDMSIOT+42
SIOTREFN EQU   INDMSIOT+40
SIOTOTUN EQU   INDMSIOT+39
SIOTVRSB EQU   INDMSIOT+36
@NM00005 EQU   INDMSIOT+35
SCTPJFCB EQU   INDMSIOT+32
@NM00004 EQU   INDMSIOT+31
SCTPSIOT EQU   INDMSIOT+28
SIOTAFID EQU   INDMSIOT+26
@NM00003 EQU   INDMSIOT+24
SIODSNTE EQU   INDMSIOT+22
SIOTUNAF EQU   SCTUSADD
SIOTDEST EQU   INDMSIOT+12
SCTDDNAM EQU   INDMSIOT+4
SIOTTYPE EQU   INDMSIOT+3
SIOTDSKA EQU   INDMSIOT
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RF00058 EQU   @RC00053
@RC00100 EQU   @RC00098
@RC00111 EQU   @RC00087
@RC00114 EQU   @RC00111
@ENDDATA EQU   *
         END   IEFDB490,(C'PLS0114',0603,75024)
