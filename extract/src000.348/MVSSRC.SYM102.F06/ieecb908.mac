         TITLE 'IEECB908-SLIP MESSAGE MODULE                           *
                        '
IEECB908 CSECT ,                                                   0001
@MAINENT DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL1(16)                                             0001
         DC    C'IEECB908  76.190'                                 0001
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                     0001
         BALR  @12,0                                               0001
@PSTART  DS    0H                                                  0001
         USING @PSTART,@12                                         0001
         L     @00,@SIZDATD                                        0001
         GETMAIN  R,LV=(0)
         LR    @10,@01                                             0001
         USING @DATD,@10                                           0001
         ST    @13,@SA00001+4                                      0001
         LM    @00,@01,20(@13)                                     0001
         ST    @10,8(,@13)                                         0001
         LR    @13,@10                                             0001
*   PARMPTR=R1;                     /* INIT PARM PTR                 */
         LR    PARMPTR,R1                                          0029
*   RFY                                                            0030
*     R1 UNRSTD;                                                   0030
*   DO I=ONE TO SEVEN WHILE LASTIND(I)=OFF;                        0031
         LA    I,1                                                 0031
@DL00031 LR    @14,I                                               0031
         SLA   @14,2                                               0031
         ALR   @14,PARMPTR                                         0031
         AL    @14,@CF00762                                        0031
         TM    LASTIND(@14),B'10000000'                            0031
         BNZ   @DC00031                                            0031
*   END;                                                           0032
         AL    I,@CF00050                                          0032
         C     I,@CF00190                                          0032
         BNH   @DL00031                                            0032
@DC00031 DS    0H                                                  0033
*   IF I<TWO×                       /* IF NOT ENOUGH INFO PASSED     */
*       I>SEVEN THEN                /* IF NO HI-ORDER BIT SET        */
         C     I,@CF00047                                          0033
         BL    @RT00033                                            0033
         C     I,@CF00190                                          0033
         BNH   @RF00033                                            0033
@RT00033 DS    0H                                                  0034
*     R15=FOUR;                     /* IND ERROR                     */
         LA    R15,4                                               0034
*   ELSE                            /* WHEN LAST PARM FOUND          */
*     DO;                                                          0035
         B     @RC00033                                            0035
@RF00033 DS    0H                                                  0036
*       LASTIND(I)=OFF;             /* SET IND OFF                   */
         LR    @14,I                                               0036
         SLA   @14,2                                               0036
         ALR   @14,PARMPTR                                         0036
         AL    @14,@CF00762                                        0036
         NI    LASTIND(@14),B'01111111'                            0036
*/********************************************************************
**   INDX PARM SHOULD CONTAIN A NUMBER TO INDEX THE MESSAGE TABLE. 0037
**   CHECK INDX TO ENSURE IT IS WITHIN THE LIMITS OF THE TABLE AND 0037
**   THEN CHECK MESSAGE ENTRY TO ENSURE THAT ENTRY STILL EXISTS.   0037
**********************************************************************/
*                                                                  0037
*       IF INDX>ZERO&               /* IF INDX IS WITHIN THE TABLE   */
*           INDX<MSGTSIZE+ONE THEN                                 0037
         SLR   @14,@14                                             0037
         L     @11,PARM(,PARMPTR)                                  0037
         LH    @11,INDX(,@11)                                      0037
         CR    @11,@14                                             0037
         BNH   @RF00037                                            0037
         C     @11,@CF00224                                        0037
         BNL   @RF00037                                            0037
*         IF MSGLN(INDX)^=ZERO THEN /* IF ENTRY CONTAINS A MESSAGE   */
         MH    @11,@CH00761                                        0038
         CH    @14,MSGLN-106(@11)                                  0038
         BE    @RF00038                                            0038
*           DO;                                                    0039
*                                                                  0039
*/********************************************************************
**          SETUP MESSAGE AND FILL IN ANY VARIABLE AREAS NEEDED    0040
**********************************************************************/
*                                                                  0040
*             MESSAGE=MSG(INDX);    /* COPY MSG INTO GETMAIN AREA    */
         LA    @06,MSG-106(@11)                                    0040
         MVC   MESSAGE(96),0(@06)                                  0040
*             IF V1LN(INDX)^=ZERO&  /* IF MSG REQUIRES DATA AND      */
*                 I>TWO&            /* DATA IS SUPPLIED              */
*                 PARM(3)^=ZERO THEN                               0041
         LH    @06,V1LN-106(@11)                                   0041
         CR    @06,@14                                             0041
         BE    @RF00041                                            0041
         C     I,@CF00047                                          0041
         BNH   @RF00041                                            0041
         L     @03,PARM+8(,PARMPTR)                                0041
         CLR   @03,@14                                             0041
         BE    @RF00041                                            0041
*               DO;                                                0042
*                 MSGTEXT(V1LOC(INDX):(V1LOC(INDX)+V1LN(INDX)-1))=FILL1
*                     (1:V1LN(INDX));/* COPY DATA INTO MESSAGE       */
         LH    @01,V1LOC-106(@11)                                  0043
         LA    @09,MSGTEXT-1(@01)                                  0043
         BCTR  @06,0                                               0043
         EX    @06,@SM00764                                        0043
*                 IF V2LN(INDX)^=ZERO&/* IF MSG REQUIRES MORE DATA   */
*                     I>THREE&      /* AND DATA IS SUPPLIED          */
*                     PARM(4)^=ZERO THEN                           0044
         LH    @06,V2LN-106(@11)                                   0044
         CR    @06,@14                                             0044
         BE    @RF00044                                            0044
         C     I,@CF00171                                          0044
         BNH   @RF00044                                            0044
         L     @03,PARM+12(,PARMPTR)                               0044
         CLR   @03,@14                                             0044
         BE    @RF00044                                            0044
*                   MSGTEXT(V2LOC(INDX):(V2LOC(INDX)+V2LN(INDX)-1))=
*                       FILL2(1:V2LN(INDX));/* COPY DATA INTO MESSAGE*/
         LH    @14,V2LOC-106(@11)                                  0045
         LA    @11,MSGTEXT-1(@14)                                  0045
         BCTR  @06,0                                               0045
         EX    @06,@SM00766                                        0045
*               END;                                               0046
@RF00044 DS    0H                                                  0047
*             IF MSGTYPE=DECISION THEN/* IF MESSAGE IS A WTOR        */
@RF00041 CLI   MSGTYPE,C'D'                                        0047
         BNE   @RF00047                                            0047
*               IF I>FIVE&          /* IF A REPLY BUFFER AND AN      */
*                   PARM(5)^=ZERO&  /* ECB IS SUPPLIED BY CALLER     */
*                   PARM(6)^=ZERO THEN                             0048
         C     I,@CF00197                                          0048
         BNH   @RF00048                                            0048
         SLR   @14,@14                                             0048
         CL    @14,PARM+16(,PARMPTR)                               0048
         BE    @RF00048                                            0048
         CL    @14,PARM+20(,PARMPTR)                               0048
         BE    @RF00048                                            0048
*                 DO;                                              0049
*                                                                  0049
*/********************************************************************
**          IF THE MESSAGE IS A WTOR, ISSUE EXECUTE FORM OF THE MACRO
**********************************************************************/
*                                                                  0050
*                   IF I=SEVEN THEN /* IF BUFFER LENGTH SPECIFIED    */
         C     I,@CF00190                                          0050
         BNE   @RF00050                                            0050
*                     ACTLN=BUFLN;  /* USE LENGTH                    */
         L     @14,PARM+24(,PARMPTR)                               0051
         LH    ACTLN,BUFLN(,@14)                                   0051
*                   ELSE            /* IF LENGTH NOT SPEC            */
*                     ACTLN=REPLYLN;/* USE DEFAULT LENGTH OF 119     */
         B     @RC00050                                            0052
@RF00050 LA    ACTLN,119                                           0052
*                   REPLYBUF(1:ACTLN)=BLANKS(1:ACTLN);/* INIT BUFFER */
@RC00050 L     @14,PARM+16(,PARMPTR)                               0053
         LR    @11,ACTLN                                           0053
         BCTR  @11,0                                               0053
         EX    @11,@SM00768                                        0053
*                   RECB=RECB&&RECB;/* CLEAR ECB                     */
         L     @11,PARM+20(,PARMPTR)                               0054
         XC    RECB(4,@11),RECB(@11)                               0054
*                   RFY                                            0055
*                    (R0,                                          0055
*                     R1,                                          0055
*                     R2,                                          0055
*                     R3,                                          0055
*                     R4) RSTD;                                    0055
*                   R0=DEST;        /* DESTINATION CONSOLE ID        */
         ST    @11,@TF00001                                        0056
         L     @11,PARM+4(,PARMPTR)                                0056
         SLR   R0,R0                                               0056
         IC    R0,DEST(,@11)                                       0056
*                   R1=ADDR(WTORAREA);/* ADDRESS OF MESSAGE & PREFIX */
         LA    R1,WTORAREA                                         0057
*                   R2=PARM(5);     /* ADDR OF REPLY BUFFER PASSED   */
         LR    R2,@14                                              0058
*                   R3=REPLYLN;     /* LENGTH OF REPLY BUFFER        */
         LA    R3,119                                              0059
*                   R4=PARM(6);     /* ADDR OF ECB PASSED            */
         L     R4,@TF00001                                         0060
*                   GEN(WTOR ,(R2),(R3),(R4),MF=(E,(R1)));         0061
         WTOR ,(R2),(R3),(R4),MF=(E,(R1))
*                   R1=PARM(6);     /* ADDR OF ECB PASSED            */
         L     R1,PARM+20(,PARMPTR)                                0062
*                   GEN(WAIT ECB=(R1));                            0063
         WAIT ECB=(R1)
*                   REPLYBUF(1:ACTLN)=/* CONV LOWER CASE TO UPPER    */
*                       REPLYBUF(1:ACTLN)×BLANKS(1:ACTLN);         0064
         L     @14,PARM+16(,PARMPTR)                               0064
         LR    @11,ACTLN                                           0064
         BCTR  @11,0                                               0064
         EX    @11,@SO00770                                        0064
*                   R15=ZERO;       /* IND SUCC                      */
         SLR   R15,R15                                             0065
*                   RFY                                            0066
*                    (R0,                                          0066
*                     R1,                                          0066
*                     R2,                                          0066
*                     R3,                                          0066
*                     R4) UNRSTD;                                  0066
*                 END;                                             0067
*               ELSE                /* IF NO REPLY BUF OR ECB        */
*                 R15=FOUR;         /* IND ERROR                     */
         B     @RC00048                                            0068
@RF00048 LA    R15,4                                               0068
*             ELSE                                                 0069
*               DO;                                                0069
*                                                                  0069
         B     @RC00047                                            0069
@RF00047 DS    0H                                                  0070
*/********************************************************************
**          IF THE MESSAGE IS A WTO, ISSUE EXECUTE FORM OF THE MACRO
**********************************************************************/
*                                                                  0070
*                 RFY                                              0070
*                  (R0,                                            0070
*                   R1) RSTD;                                      0070
*                 R0=DEST;          /* CONSOLE ID                    */
         L     @14,PARM+4(,PARMPTR)                                0071
         SLR   R0,R0                                               0071
         IC    R0,DEST(,@14)                                       0071
*                 R1=ADDR(MESSAGE); /* ADDR OF MESSAGE               */
         LA    R1,MESSAGE                                          0072
*                 GEN(WTO MF=(E,(R1)));                            0073
         WTO MF=(E,(R1))
*                 R15=ZERO;         /* IND SUCC                      */
         SLR   R15,R15                                             0074
*                 RFY                                              0075
*                  (R0,                                            0075
*                   R1) UNRSTD;                                    0075
*               END;                                               0076
*           END;                                                   0077
*         ELSE                      /* IF MSG TABLE ENTRY IS EMPTY   */
*           R15=FOUR;               /* IND MSG MOD UNSUCC            */
         B     @RC00038                                            0078
@RF00038 LA    R15,4                                               0078
*       ELSE                        /* IF BAD INDX BALUE             */
*         R15=FOUR;                 /* IND MSG MOD UNSUCC            */
         B     @RC00037                                            0079
@RF00037 LA    R15,4                                               0079
*     END;                                                         0080
@RC00037 DS    0H                                                  0081
*   RETURN CODE(R15);                                              0081
@RC00033 LR    @11,@15                                             0081
         L     @13,4(,@13)                                         0081
         L     @00,@SIZDATD                                        0081
         LR    @01,@10                                             0081
         FREEMAIN R,LV=(0),A=(1)
         LR    @15,@11                                             0081
         L     @14,12(,@13)                                        0081
         LM    @00,@12,20(@13)                                     0081
         BR    @14                                                 0081
*   RFY                                                            0082
*     R15 UNRSTD;                                                  0082
*   END IEECB908                                                   0083
*                                                                  0083
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (PROLOG  )                                       */
*/*%INCLUDE SYSLIB  (DCLS    )                                       */
*/*%INCLUDE SYSLIB  (IEZWPL  )                                       */
*/*%INCLUDE SYSLIB  (IHAECB  )                                       */
*                                                                  0083
*       ;                                                          0083
@DATA    DS    0H
@CH00761 DC    H'106'
@SM00764 MVC   0(0,@09),FILL1(@03)
@SM00766 MVC   0(0,@11),FILL2(@03)
@SM00768 MVC   REPLYBUF(0,@14),BLANKS
@SO00770 OC    REPLYBUF(0,@14),BLANKS
@DATD    DSECT
         DS    0F
@SA00001 DS    18F
@TF00001 DS    F
IEECB908 CSECT
         DS    0F
@CF00050 DC    F'1'
@CF00047 DC    F'2'
@CF00171 DC    F'3'
@CF00197 DC    F'5'
@CF00190 DC    F'7'
@CF00224 DC    F'14'
@CF00762 DC    F'-4'
@DATD    DSECT
         DS    0D
WPLPTR   DS    A
ECBPTR   DS    A
WTORAREA DS    CL104
         ORG   WTORAREA
WTORPREF DS    CL8
         ORG   WTORPREF
@NM00324 DS    AL4
@NM00325 DS    AL4
         ORG   WTORAREA+8
MESSAGE  DS    CL96
         ORG   MESSAGE
LNHDR    DS    CL2
MCSFLAGS DS    CL2
MSGNO    DS    CL6
MSGTYPE  DS    CL1
MSGTEXT  DS    CL85
         ORG   WTORAREA+104
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
IEECB908 CSECT
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
         DS    0D
KEYINIT  DS    CL270
         ORG   KEYINIT
@NM00006 DC    H'4'
@NM00007 DC    CL8'E'
@NM00008 DC    H'2'
@NM00009 DC    CL8'D'
@NM00010 DC    H'7'
@NM00011 DC    CL8'M='
@NM00012 DC    H'8'
@NM00013 DC    CL8'C='
@NM00014 DC    H'5'
@NM00015 DC    CL8'A='
@NM00016 DC    H'12'
@NM00017 DC    CL8'L='
@NM00018 DC    H'11'
@NM00019 DC    CL8'P='
@NM00020 DC    H'9'
@NM00021 DC    CL8'J='
@NM00022 DC    H'1'
@NM00023 DC    CL8'EN'
@NM00024 DC    H'4'
@NM00025 DC    CL8'END'
@NM00026 DC    H'3'
@NM00027 DC    CL8'ID='
@NM00028 DC    H'6'
@NM00029 DC    CL8'ER='
@NM00030 DC    H'14'
@NM00031 DC    CL8'AS='
@NM00032 DC    H'13'
@NM00033 DC    CL8'AD='
@NM00034 DC    H'10'
@NM00035 DC    CL8'JS='
@NM00036 DC    H'7'
@NM00037 DC    CL8'MODE='
@NM00038 DC    H'8'
@NM00039 DC    CL8'COMP='
@NM00040 DC    H'14'
@NM00041 DC    CL8'ASID='
@NM00042 DC    H'10'
@NM00043 DC    CL8'JSPGM='
@NM00044 DC    H'1'
@NM00045 DC    CL8'ENABLE'
@NM00046 DC    H'6'
@NM00047 DC    CL8'ERRTYP='
@NM00048 DC    H'5'
@NM00049 DC    CL8'ACTION='
@NM00050 DC    H'2'
@NM00051 DC    CL8'DISABLE'
@NM00052 DC    H'12'
@NM00053 DC    CL8'LPAMOD='
@NM00054 DC    H'11'
@NM00055 DC    CL8'PVTMOD='
@NM00056 DC    H'9'
@NM00057 DC    CL8'JOBNAME='
@NM00058 DC    H'13'
@NM00059 DC    CL8'ADDRESS='
         ORG   KEYINIT+270
KTLNINIT DS    CL32
         ORG   KTLNINIT
@NM00060 DC    AL2(1)
@NM00061 DC    AL2(2)
@NM00062 DC    AL2(3)
@NM00063 DC    AL2(9)
@NM00064 DC    AL2(10)
@NM00065 DC    AL2(15)
@NM00066 DC    AL2(99)
@NM00067 DC    AL2(0)
@NM00068 DC    AL2(16)
@NM00069 DC    AL2(18)
@NM00070 DC    AL2(19)
@NM00071 DC    AL2(20)
@NM00072 DC    AL2(21)
@NM00073 DC    AL2(25)
@NM00074 DC    AL2(26)
@NM00075 DC    AL2(27)
         ORG   KTLNINIT+32
MODKINIT DS    CL60
         ORG   MODKINIT
@NM00076 DC    H'2'
@NM00077 DC    CL8'D'
@NM00078 DC    H'1'
@NM00079 DC    CL8'EN'
@NM00080 DC    H'3'
@NM00081 DC    CL8'ID='
@NM00082 DC    H'0'
@NM00083 DC    CL8'ALL'
@NM00084 DC    H'1'
@NM00085 DC    CL8'ENABLE'
@NM00086 DC    H'2'
@NM00087 DC    CL8'DISABLE'
         ORG   MODKINIT+60
MLNINIT  DS    CL28
         ORG   MLNINIT
@NM00088 DC    AL2(1)
@NM00089 DC    AL2(1)
@NM00090 DC    AL2(2)
@NM00091 DC    AL2(2)
@NM00092 DC    AL2(3)
@NM00093 DC    AL2(4)
@NM00094 DC    AL2(99)
@NM00095 DC    AL2(0)
@NM00096 DC    AL2(99)
@NM00097 DC    AL2(0)
@NM00098 DC    AL2(5)
@NM00099 DC    AL2(5)
@NM00100 DC    AL2(6)
@NM00101 DC    AL2(6)
         ORG   MLNINIT+28
ERTINIT  DS    CL72
         ORG   ERTINIT
@NM00102 DC    X'02'
@NM00103 DC    CL7'DAT'
@NM00104 DC    X'FF'
@NM00105 DC    CL7'ALL'
@NM00106 DC    X'40'
@NM00107 DC    CL7'PROG'
@NM00108 DC    X'80'
@NM00109 DC    CL7'MACH'
@NM00110 DC    X'01'
@NM00111 DC    CL7'PGIO'
@NM00112 DC    X'20'
@NM00113 DC    CL7'REST'
@NM00114 DC    X'10'
@NM00115 DC    CL7'ABEND'
@NM00116 DC    X'04'
@NM00117 DC    CL7'SVCERR'
@NM00118 DC    X'08'
@NM00119 DC    CL7'MEMTERM'
         ORG   ERTINIT+72
ERLNINIT DS    CL28
         ORG   ERLNINIT
@NM00120 DC    AL2(99)
@NM00121 DC    AL2(0)
@NM00122 DC    AL2(99)
@NM00123 DC    AL2(0)
@NM00124 DC    AL2(1)
@NM00125 DC    AL2(2)
@NM00126 DC    AL2(3)
@NM00127 DC    AL2(6)
@NM00128 DC    AL2(7)
@NM00129 DC    AL2(7)
@NM00130 DC    AL2(8)
@NM00131 DC    AL2(8)
@NM00132 DC    AL2(9)
@NM00133 DC    AL2(9)
         ORG   ERLNINIT+28
MDEINIT  DS    CL144
         ORG   MDEINIT
@NM00134 DC    X'0040'
@NM00135 DC    CL6'PP'
@NM00136 DC    X'0000'
@NM00137 DC    CL6'ANY'
@NM00138 DC    X'4000'
@NM00139 DC    CL6'DIS'
@NM00140 DC    X'0200'
@NM00141 DC    CL6'SRB'
@NM00142 DC    X'0100'
@NM00143 DC    CL6'TCB'
@NM00144 DC    X'FFFF'
@NM00145 DC    CL6'ALL'
@NM00146 DC    X'8000'
@NM00147 DC    CL6'SUPR'
@NM00148 DC    X'3004'
@NM00149 DC    CL6'GLOC'
@NM00150 DC    X'0800'
@NM00151 DC    CL6'LLOC'
@NM00152 DC    X'3806'
@NM00153 DC    CL6'LOCK'
@NM00154 DC    X'0400'
@NM00155 DC    CL6'TYP1'
@NM00156 DC    X'0010'
@NM00157 DC    CL6'SKEY'
@NM00158 DC    X'0008'
@NM00159 DC    CL6'PKEY'
@NM00160 DC    X'0080'
@NM00161 DC    CL6'RECV'
@NM00162 DC    X'0000'
@NM00163 DC    CL6'EVERY'
@NM00164 DC    X'0020'
@NM00165 DC    CL6'SUPER'
@NM00166 DC    X'2000'
@NM00167 DC    CL6'GLOCSP'
@NM00168 DC    X'1000'
@NM00169 DC    CL6'GLOCSD'
         ORG   MDEINIT+144
MDELNINT DS    CL24
         ORG   MDELNINT
@NM00170 DC    AL2(99)
@NM00171 DC    AL2(0)
@NM00172 DC    AL2(1)
@NM00173 DC    AL2(1)
@NM00174 DC    AL2(2)
@NM00175 DC    AL2(6)
@NM00176 DC    AL2(7)
@NM00177 DC    AL2(14)
@NM00178 DC    AL2(15)
@NM00179 DC    AL2(16)
@NM00180 DC    AL2(17)
@NM00181 DC    AL2(18)
         ORG   MDELNINT+24
SCANTAB  DS    CL256
         ORG   SCANTAB
@NM00182 DC    64X'02'
@NM00183 DC    X'01'
@NM00184 DC    28X'02'
@NM00185 DC    X'01'
@NM00186 DC    13X'02'
@NM00187 DC    X'01'
@NM00188 DC    85X'02'
@NM00189 DC    9X'00'
@NM00190 DC    7X'02'
@NM00191 DC    9X'00'
@NM00192 DC    8X'02'
@NM00193 DC    8X'00'
@NM00194 DC    6X'02'
@NM00195 DC    10X'00'
@NM00196 DC    6X'02'
         ORG   SCANTAB+256
MSGTINIT DS    CL1378
         ORG   MSGTINIT
@NM00197 DC    AL2(0)
@NM00198 DC    AL2(0)
@NM00199 DC    AL2(0)
@NM00200 DC    AL2(0)
@NM00201 DC    AL2(60)
@NM00202 DC    X'0038E000'
@NM00203 DC    CL38'IEE726D ENTER ADDITIONAL SLIP PARAMETE'
@NM00204 DC    CL14'RS OR ''CANCEL'''
@NM00205 DC    X'08000000'
@NM00206 DC    CL36' '
@NM00207 DC    AL2(15)
@NM00208 DC    AL2(4)
@NM00209 DC    AL2(0)
@NM00210 DC    AL2(0)
@NM00211 DC    AL2(37)
@NM00212 DC    X'0021E000'
@NM00213 DC    CL29'IEE727I SLIP TRAP ID=     SET'
@NM00214 DC    X'08000040'
@NM00215 DC    CL59' '
@NM00216 DC    AL2(15)
@NM00217 DC    AL2(4)
@NM00218 DC    AL2(0)
@NM00219 DC    AL2(0)
@NM00220 DC    AL2(41)
@NM00221 DC    X'0025E000'
@NM00222 DC    CL33'IEE727I SLIP TRAP ID=     ENABLED'
@NM00223 DC    X'08000040'
@NM00224 DC    CL55' '
@NM00225 DC    AL2(15)
@NM00226 DC    AL2(4)
@NM00227 DC    AL2(0)
@NM00228 DC    AL2(0)
@NM00229 DC    AL2(42)
@NM00230 DC    X'0026E000'
@NM00231 DC    CL34'IEE727I SLIP TRAP ID=     DISABLED'
@NM00232 DC    X'08000040'
@NM00233 DC    CL54' '
@NM00234 DC    AL2(15)
@NM00235 DC    AL2(4)
@NM00236 DC    AL2(0)
@NM00237 DC    AL2(0)
@NM00238 DC    AL2(41)
@NM00239 DC    X'0025E000'
@NM00240 DC    CL33'IEE727I SLIP TRAP ID=     DELETED'
@NM00241 DC    X'08000040'
@NM00242 DC    CL55' '
@NM00243 DC    AL2(2)
@NM00244 DC    AL2(8)
@NM00245 DC    AL2(31)
@NM00246 DC    AL2(4)
@NM00247 DC    AL2(90)
@NM00248 DC    X'0056E000'
@NM00249 DC    CL38'IEE728D          INVALID FOR SLIP ID= '
@NM00250 DC    CL37'   . REENTER KEYWORD, NULL LINE, OR '''
@NM00251 DC    CL7'CANCEL'''
@NM00252 DC    X'08000000'
@NM00253 DC    CL6' '
@NM00254 DC    AL2(10)
@NM00255 DC    AL2(4)
@NM00256 DC    AL2(0)
@NM00257 DC    AL2(0)
@NM00258 DC    AL2(75)
@NM00259 DC    X'0047E000'
@NM00260 DC    CL38'IEE729D SLIP ID=     ALREADY EXISTS. R'
@NM00261 DC    CL29'EENTER ID KEYWORD OR ''CANCEL'''
@NM00262 DC    X'08000000'
@NM00263 DC    CL21' '
@NM00264 DC    AL2(0)
@NM00265 DC    AL2(0)
@NM00266 DC    AL2(0)
@NM00267 DC    AL2(0)
@NM00268 DC    AL2(49)
@NM00269 DC    X'002DE000'
@NM00270 DC    CL38'IEE756I SLIP COMMAND CANCELED BY OPERA'
@NM00271 DC    CL3'TOR'
@NM00272 DC    X'08000000'
@NM00273 DC    CL47' '
@NM00274 DC    AL2(0)
@NM00275 DC    AL2(0)
@NM00276 DC    AL2(0)
@NM00277 DC    AL2(0)
@NM00278 DC    AL2(51)
@NM00279 DC    X'002FE000'
@NM00280 DC    CL38'IEE756I D SLIP COMMAND CANCELED BY OPE'
@NM00281 DC    CL5'RATOR'
@NM00282 DC    X'08000000'
@NM00283 DC    CL45' '
@NM00284 DC    AL2(10)
@NM00285 DC    AL2(4)
@NM00286 DC    AL2(0)
@NM00287 DC    AL2(0)
@NM00288 DC    AL2(60)
@NM00289 DC    X'0038E000'
@NM00290 DC    CL38'IEE731I SLIP ID=     DOES NOT EXIST, R'
@NM00291 DC    CL14'EQUEST IGNORED'
@NM00292 DC    X'08000000'
@NM00293 DC    CL36' '
@NM00294 DC    AL2(0)
@NM00295 DC    AL2(0)
@NM00296 DC    AL2(0)
@NM00297 DC    AL2(0)
@NM00298 DC    AL2(63)
@NM00299 DC    X'003BE000'
@NM00300 DC    CL37'IEE732D SLIP FUNCTION IN USE. ENTER '''
@NM00301 DC    CL18'RETRY'' OR ''CANCEL'''
@NM00302 DC    X'08000000'
@NM00303 DC    CL33' '
@NM00304 DC    AL2(0)
@NM00305 DC    AL2(0)
@NM00306 DC    AL2(0)
@NM00307 DC    AL2(0)
@NM00308 DC    AL2(39)
@NM00309 DC    X'0023E000'
@NM00310 DC    CL31'IEE733I NO SLIP TRAPS IN EFFECT'
@NM00311 DC    X'08000000'
@NM00312 DC    CL57' '
@NM00313 DC    AL2(10)
@NM00314 DC    AL2(4)
@NM00315 DC    AL2(16)
@NM00316 DC    AL2(8)
@NM00317 DC    AL2(95)
@NM00318 DC    X'005BE000'
@NM00319 DC    CL38'IEE736D SLIP ID=    ,          IS NOT '
@NM00320 DC    CL38'IN THE LPA. ENTER KEYWORD, NULL LINE, '
@NM00321 DC    CL11'OR ''CANCEL'''
@NM00322 DC    X'08000000'
@NM00323 DC    CL1' '
         ORG   MSGTINIT+1378
BLANKS   DC    CL119' '
PATCH908 DC    CL100' '
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
ACTLN    EQU   @08
I        EQU   @02
R0       EQU   @00
R1       EQU   @01
R2       EQU   @02
R3       EQU   @03
R4       EQU   @04
PARMPTR  EQU   @07
R15      EQU   @15
         ENTRY SCANTAB
         ENTRY MDELNINT
         ENTRY MDEINIT
         ENTRY ERLNINIT
         ENTRY ERTINIT
         ENTRY MLNINIT
         ENTRY MODKINIT
         ENTRY KTLNINIT
         ENTRY KEYINIT
WPLRF    EQU   0
WPLRPTR  EQU   WPLRF
WPL      EQU   0
WPLMCSF  EQU   WPL+2
WPLMCSF1 EQU   WPLMCSF
WPLMCSF2 EQU   WPLMCSF+1
WPLTXT   EQU   WPL+4
WPLFLGS  EQU   0
WPLDESC  EQU   WPLFLGS
WPLDESC1 EQU   WPLDESC
WPLDESC2 EQU   WPLDESC+1
WPLROUT  EQU   WPLFLGS+2
WPLROUT1 EQU   WPLROUT
WPLROUT2 EQU   WPLROUT+1
WPLMSGTY EQU   WPLFLGS+4
WPLMSGT1 EQU   WPLMSGTY
WPLMSGT2 EQU   WPLMSGTY+1
WPLLS01  EQU   0
WPLLTF   EQU   WPLLS01
WPLLTF1  EQU   WPLLTF
WPLML    EQU   0
WPLMLLTF EQU   WPLML+2
WPLMLLT1 EQU   WPLMLLTF
ECB      EQU   0
ECBRB    EQU   ECB
ECBEVTB  EQU   ECBRB
ECBEXTB  EQU   ECBEVTB
ECBCC    EQU   ECBEXTB
ECBCCCNT EQU   ECBEXTB+1
ECBRBA   EQU   ECBCCCNT
ECBEVTBA EQU   ECBRBA
ECBEXTBA EQU   ECBEVTBA
ECBBYTE3 EQU   ECBEXTBA+2
ECBEXTND EQU   ECBBYTE3
PARM     EQU   0
LASTIND  EQU   PARM
INDX     EQU   0
DEST     EQU   0
FILL1    EQU   0
FILL2    EQU   0
REPLYBUF EQU   0
RECB     EQU   0
BUFLN    EQU   0
MSGTABLE EQU   MSGTINIT
V1LOC    EQU   MSGTABLE
V1LN     EQU   MSGTABLE+2
V2LOC    EQU   MSGTABLE+4
V2LN     EQU   MSGTABLE+6
MSGLN    EQU   MSGTABLE+8
MSG      EQU   MSGTABLE+10
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
@NM00326 EQU   PARM
ECBEVNT  EQU   ECBEXTND
@NM00005 EQU   ECBEXTND
@NM00004 EQU   ECBBYTE3
@NM00003 EQU   ECBEXTBA
@NM00002 EQU   ECBCC
ECBPOSTB EQU   ECBCC
ECBWAITB EQU   ECBCC
WPLMLTXT EQU   WPLML+4
WPLMLLT2 EQU   WPLMLLTF+1
WPLRSV24 EQU   WPLMLLT1
WPLRSV23 EQU   WPLMLLT1
WPLRSV22 EQU   WPLMLLT1
WPLRSV21 EQU   WPLMLLT1
WPLMLLTD EQU   WPLMLLT1
WPLMLLTC EQU   WPLMLLT1
WPLMLLTB EQU   WPLMLLT1
WPLMLLTA EQU   WPLMLLT1
WPLMLLEN EQU   WPLML+1
WPLML0   EQU   WPLML
WPLLINES EQU   WPLLS01+3
WPLAREA  EQU   WPLLS01+2
WPLLTF2  EQU   WPLLTF+1
WPLRSV20 EQU   WPLLTF1
WPLRSV19 EQU   WPLLTF1
WPLRSV18 EQU   WPLLTF1
WPLRSV17 EQU   WPLLTF1
WPLLTFD  EQU   WPLLTF1
WPLLTFC  EQU   WPLLTF1
WPLLTFB  EQU   WPLLTF1
WPLLTFA  EQU   WPLLTF1
WPLQID   EQU   WPLFLGS+6
WPLRSV32 EQU   WPLMSGT2
WPLRSV31 EQU   WPLMSGT2
WPLRSV30 EQU   WPLMSGT2
WPLRSV29 EQU   WPLMSGT2
WPLRSV28 EQU   WPLMSGT2
WPLRSV27 EQU   WPLMSGT2
WPLRSV26 EQU   WPLMSGT2
WPLRSV25 EQU   WPLMSGT2
WPLRSV16 EQU   WPLMSGT1
WPLRSV15 EQU   WPLMSGT1
WPLMSGTF EQU   WPLMSGT1
WPLRSV14 EQU   WPLMSGT1
WPLMSGTD EQU   WPLMSGT1
WPLMSGTC EQU   WPLMSGT1
WPLMSGTB EQU   WPLMSGT1
WPLMSGTA EQU   WPLMSGT1
WPLRSV13 EQU   WPLROUT2
WPLROUTO EQU   WPLROUT2
WPLROUTN EQU   WPLROUT2
WPLROUTM EQU   WPLROUT2
WPLROUTL EQU   WPLROUT2
WPLROUTK EQU   WPLROUT2
WPLROUTJ EQU   WPLROUT2
WPLROUTI EQU   WPLROUT2
WPLROUTH EQU   WPLROUT1
WPLROUTG EQU   WPLROUT1
WPLROUTF EQU   WPLROUT1
WPLROUTE EQU   WPLROUT1
WPLROUTD EQU   WPLROUT1
WPLROUTC EQU   WPLROUT1
WPLROUTB EQU   WPLROUT1
WPLROUTA EQU   WPLROUT1
WPLRSV12 EQU   WPLDESC2
WPLRSV11 EQU   WPLDESC2
WPLRSV10 EQU   WPLDESC2
WPLRSV09 EQU   WPLDESC2
WPLRSV08 EQU   WPLDESC2
WPLRSV07 EQU   WPLDESC2
WPLDESCJ EQU   WPLDESC2
WPLDESCI EQU   WPLDESC2
WPLDESCH EQU   WPLDESC1
WPLDESCG EQU   WPLDESC1
WPLDESCF EQU   WPLDESC1
WPLDESCE EQU   WPLDESC1
WPLDESCD EQU   WPLDESC1
WPLDESCC EQU   WPLDESC1
WPLDESCB EQU   WPLDESC1
WPLDESCA EQU   WPLDESC1
WPLTXTL  EQU   WPLTXT+125
@NM00001 EQU   WPLTXT
WPLRSV05 EQU   WPLMCSF2
WPLRSV04 EQU   WPLMCSF2
WPLMCSFN EQU   WPLMCSF2
WPLRSV03 EQU   WPLMCSF2
WPLNOWTP EQU   WPLMCSF2
WPLMCSFK EQU   WPLMCSF2
WPLMCSFJ EQU   WPLMCSF2
WPLMCSFI EQU   WPLMCSF2
WPLMCSFH EQU   WPLMCSF1
WPLMCSFG EQU   WPLMCSF1
WPLMCSFF EQU   WPLMCSF1
WPLMCSFE EQU   WPLMCSF1
WPLMCSFD EQU   WPLMCSF1
WPLMCSFC EQU   WPLMCSF1
WPLMCSFB EQU   WPLMCSF1
WPLMCSFA EQU   WPLMCSF1
WPLLGH   EQU   WPL
WPLRECB  EQU   WPLRF+4
WPLRPTRA EQU   WPLRPTR+1
WPLRLN   EQU   WPLRPTR
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RC00038 EQU   @RC00037
@RC00047 EQU   @RC00038
@RC00048 EQU   @RC00047
@ENDDATA EQU   *
         END   IEECB908,(C'PLS1816',0701,76190)
