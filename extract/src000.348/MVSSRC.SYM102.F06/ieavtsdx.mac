         TITLE 'IEAVTSDX - SVC DUMP BRANCH ENTRY AND SCHEDULE DUMP ROUT*
               TINE     '
IEAVTSDX CSECT ,                                                   0001
@MAINENT DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL1(16)                                             0001
         DC    C'IEAVTSDX  78.125'                                 0001
         DROP  @15
@PROLOG  ST    @14,12(,@13)                                        0001
         STM   @00,@12,20(@13)                                     0001
         BALR  @09,0                                               0001
@PSTART  LA    @03,4095(,@09)                                      0001
         USING @PSTART,@09                                         0001
         USING @PSTART+4095,@03                                    0001
         STOSM 0(R13),0
*   IF PSASUPER=NULL&               /* IF CALLER IS NOT DISABLE AND  */
*       PSATOLD^=NULL THEN          /* NOT IN SRB MODE,      @G33VPHD*/
         SLR   @12,@12                                             0127
         CL    @12,PSASUPER                                        0127
         BNE   @RF00127                                            0127
         C     @12,PSATOLD                                         0127
         BE    @RF00127                                            0127
*     DO;                           /* SEE IF ANY LOCKS ARE HELD     */
*       RFY                                                        0129
*         R10 RSTD;                                                0129
*       GEN(SETLOCK TEST,TYPE=ALL,REGS=(R10));/* ARE ANY LOCKS HELD  */
         SETLOCK TEST,TYPE=ALL,REGS=(R10)
*       IF R15^=NULL THEN           /* NO LOCKS-NOT DISABLD-NOT SRB  */
         LTR   R15,R15                                             0131
         BZ    @RF00131                                            0131
*         DO;                       /* CALLER NOT AUTHORIZED         */
*           R1=CC133;               /* INTERFACE ABEND 133,DUMP      */
         L     R1,@CF05023                                         0133
*           SVC(13);                /* ABEND CALLER WITH DUMP        */
         SVC   13                                                  0134
*         END;                                                     0135
*       ELSE                                                       0136
*         ;                                                        0136
@RF00131 DS    0H                                                  0137
*       RFY                                                        0137
*         R10 UNRSTD;                                              0137
*     END;                                                         0138
*   ELSE                                                           0139
*     ;                                                            0139
@RF00127 DS    0H                                                  0140
*   RFY                                                            0140
*    (R10,                                                         0140
*     R11,                                                         0140
*     R4) RSTD;                                                    0140
*                                                                  0140
*   /*****************************************************************/
*   /*                                                               */
*   /* SET UP AN FRR RECOVERY EXIT                                   */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0141
*   GEN REFS(SCHFRRAD,FRRS,FRRSCURR,FRRSLAST,PSALSFCC,FRRSFRRA,FRRSENTR
*       ,FRRSPARM);                                                0141
*                                /*ESTABLISH A RECOVERY EXIT @G33VPHD*/
         SETFRR   A,FRRAD=SCHFRRAD,                                    X
               PARMAD=(R4),WRKREGS=(R10,R11)
*   RFY                                                            0142
*    (R10,                                                         0142
*     R11) UNRSTD;                                                 0142
*   RFY                                                            0143
*     SCHFRR6W BASED(R4);           /* FRR6WPTR POINTS TO FRR 6 WDS  */
*   SCHFRRBR=R9;                    /* SAVE BASE REGISTER            */
         ST    R9,SCHFRRBR(,R4)                                    0144
*   SCHFRRSA=R13;                   /* SAVE ADDR OF CALLERS   SAVEARA*/
         ST    R13,SCHFRRSA(,R4)                                   0145
*   SCHFRRRT=ADDR(RECNODMP);        /* GET NEXT RETRY ADDRESS      0146
*                                                            @G33VPHD*/
         LA    @12,RECNODMP                                        0146
         ST    @12,SCHFRRRT(,R4)                                   0146
*                                                                  0147
*/* ******************************************************************/
*/*    THIS SEGMENT DETERMINES WHETHER OR NOT A DUMP CAN BE TAKEN.   */
*/*    ONLY ONE SVC DUMP CAN BE TAKEN AT A TIME.  IF ANOTHER DUMP    */
*/*    IS IN PROGRESS, THIS REQUEST MUST BE DENIED.  IF NO           */
*/*    SYS1.DUMP DATASETS WERE DEFINED AT IPL AND THE CALLER DID     */
*/*    NOT SUPPLY A DCB, THE DUMP CANNOT BE TAKEN.  IF THE ADDRESS   */
*/*    SPACE IS NOT ACTIVE OR THE DUMP TASK IS NOT ACTIVE IN THE     */
*/*    ADDRESS SPACE THE DUMP CANNOT BE TAKEN.                       */
*/*                                                                  */
*/*    INPUT: SDUMP PARM LIST, RTMCT, CVTSDBF, ASVT AND ASCB FOR     */
*/*           TARGET ADDRESS SPACE                                   */
*/*                                                                  */
*/*    OUTPUT: SVC DUMP LOCKED FOR THIS REQUEST OR ABEND CALLER      */
*/*            WITH 233 COMPLETION CODE (INVALID PARMS) OR SCHFRREN  */
*/*            SET TO INDICATE ANOTHER DUMP IS IN PROGRESS           */
*/*                                                                  */
*/*    INCLUDED BY: TOP SEQMENT                                      */
*/* ******************************************************************/
*                                                                  0147
*   RFY                                                            0147
*    (R10,                                                         0147
*     R11) RSTD;                                                   0147
*   R10=CVTSDBF&HIGHBIT0;           /* 4K SQA BUFFER LOCK WORD, LOCK
*                                      BIT INDICATES UNLOCKED STATE  */
         L     @12,CVTPTR                                          0148
         L     @08,CVTSDBF(,@12)                                   0148
         LR    R10,@08                                             0148
         N     R10,@CF04983                                        0148
*   R11=CVTSDBF×HIGHBIT1;           /* 4K SQA BUFFER LOCK WORD, LOCK
*                                      BIT INDICATES LOCKED STATE    */
         L     @05,@CF04985                                        0149
         OR    @08,@05                                             0149
         LR    R11,@08                                             0149
*   R15=R11;                        /* CONSTANT LOCKED VALUE OF BUF  */
         LR    R15,R11                                             0150
*   CS(R10,R11,CVTSDBF);            /* IF UNLOCKED, LOCK 4K SQA BUF  */
         CS    R10,@11,CVTSDBF(@12)                                0151
*   IF R15=R10 THEN                 /* IF BUFFER WAS LOCKED DID      */
         CR    R15,R10                                             0152
         BNE   @RF00152                                            0152
*     DO;                           /* CALLER LOCK IT                */
*       IF SDUBUF='1'B THEN         /* IF CALLER REQUESTED BUFFER    */
         TM    SDUBUF(R1),B'01000000'                              0154
         BNO   @RF00154                                            0154
*         DO;                       /* IS A DUMP IN PROGRESS         */
*           R10=NULL;               /* SVC DUMP UNLOCKED VALUE       */
         SLR   R10,R10                                             0156
*           R11=ADDR(SCHPARML)×HIGHBIT1;/* SVC DUMP LOCKED VALUE     */
         LA    R11,SCHPARML                                        0157
         OR    R11,@05                                             0157
*           CS(R10,R11,RTCTSDPL);   /* IS A DUMP IN PROGRESS         */
         L     @12,CVTRTMCT(,@12)                                  0158
         CS    R10,@11,RTCTSDPL(@12)                               0158
*           BC(CSCC0,SWAPPED1);     /* NO-GO IND THIS CURR BUFFER=YES
*                                      BAD PARM                      */
         BC    8,SWAPPED1                                          0159
*           R1=CC233;               /* INTERFACE ABEND 233           */
         L     R1,@CF05025                                         0160
*           R15=RSN38;              /* PUT REASON CODE IN R15      0161
*                                                            @G33VPHD*/
         LA    R15,56                                              0161
*           SVC(13);                /* ABEND CALLER WITH DMP         */
         SVC   13                                                  0162
*SWAPPED1:                                                         0163
*           ;                                                      0163
SWAPPED1 DS    0H                                                  0164
*           SCHFRRSD='1'B;          /* IND THIS IS CURRENT DUMP      */
         OI    SCHFRRSD(R4),B'10000000'                            0164
*           RTCTSDID=PSAAOLD->ASCBASID;/* A.S. ID OF ACTIVE   SVCDUMP*/
         L     @12,CVTPTR                                          0165
         L     @12,CVTRTMCT(,@12)                                  0165
         L     @08,PSAAOLD                                         0165
         LH    @08,ASCBASID(,@08)                                  0165
         N     @08,@CF05164                                        0165
         STH   @08,RTCTSDID(,@12)                                  0165
*         END;                                                     0166
*       ELSE                                                       0167
*         SCHFRREN='1'B;            /* IF BUFFER LOCKED AND CALLER 0167
*                                      DID NOT LOCK IT, ANOTHER DUMP
*                                      IS ALREADY IN PROGRESS        */
         B     @RC00154                                            0167
@RF00154 OI    SCHFRREN(R4),B'01000000'                            0167
*     END;                                                         0168
*   ELSE                            /* IF BUFFER WAS UNLOCKED        */
*     DO;                           /* IS ANOTHER DUMP IN PROGRESS   */
         B     @RC00152                                            0169
@RF00152 DS    0H                                                  0170
*       R10=NULL;                   /* SVC DUMP UNLOCKED VALUE       */
         SLR   R10,R10                                             0170
*       R11=ADDR(SCHPARML)×HIGHBIT1;/* SVC DUMP LOCKED VALUE         */
         LA    R11,SCHPARML                                        0171
         O     R11,@CF04985                                        0171
*       CS(R10,R11,RTCTSDPL);       /* IS A DUMP IN PROGRESS         */
         L     @12,CVTPTR                                          0172
         L     @12,CVTRTMCT(,@12)                                  0172
         CS    R10,@11,RTCTSDPL(@12)                               0172
*       BC(CSCC0,SWAPPED2);         /* NO-GO IND THIS IS CURR DUMP 0173
*                                      YES & BUF UNLOCKED-ERROR      */
         BC    8,SWAPPED2                                          0173
*       R1=CC233;                   /* INTERFACE-ABEND 233,DUMP      */
         L     R1,@CF05025                                         0174
*       R15=RSN18;                  /* SAVE REASON CODE FOR ABEND  0175
*                                                            @G33VPHD*/
         LA    R15,24                                              0175
*       SVC(13);                    /* ABEND CALLER WITH DUMP        */
         SVC   13                                                  0176
*SWAPPED2:                                                         0177
*       ;                                                          0177
SWAPPED2 DS    0H                                                  0178
*       SCHFRRSD='1'B;              /* IND THIS IS CURRENT SVC DUMP  */
         OI    SCHFRRSD(R4),B'10000000'                            0178
*       RTCTSDID=PSAAOLD->ASCBASID; /* A.S. ID OF ACTIVE SVC DUMP    */
         L     @12,CVTPTR                                          0179
         L     @12,CVTRTMCT(,@12)                                  0179
         L     @08,PSAAOLD                                         0179
         LH    @08,ASCBASID(,@08)                                  0179
         N     @08,@CF05164                                        0179
         STH   @08,RTCTSDID(,@12)                                  0179
*       IF SDUBUF='1'B THEN         /* IF BUF REQ BY CALLER BUT NOT  */
         TM    SDUBUF(R1),B'01000000'                              0180
         BNO   @RF00180                                            0180
*         DO;                       /* LOCKED BY HIM, ERROR          */
*           R15=RSN18;              /* SAVE REASON CODE FOR ABEND  0182
*                                                            @G33VPHD*/
         LA    R15,24                                              0182
*           R1=CC233;               /* INTERFACE ABEND 233,DUMP      */
         L     R1,@CF05025                                         0183
*           SVC(13);                /* ABEND CALLER WITH DUMP        */
         SVC   13                                                  0184
*         END;                                                     0185
*     END;                                                         0186
@RF00180 DS    0H                                                  0187
*   IF RTCTISVC='1'B×               /* IF CHNGDUMP=NO SVC DUMPS OR   */
*       (SDUDCB='0'B&               /* NO CALLER SUPPLIED DATASET    */
*       RTCTSDNO='1'B) THEN         /* AND NO SYS1.DUMP DATASETS     */
@RC00152 L     @12,CVTPTR                                          0187
         L     @12,CVTRTMCT(,@12)                                  0187
         TM    RTCTISVC+236(@12),B'00000001'                       0187
         BO    @RT00187                                            0187
         TM    SDUDCB(R1),B'10000000'                              0187
         BNZ   @RF00187                                            0187
         TM    RTCTSDNO(@12),B'10000000'                           0187
         BNO   @RF00187                                            0187
@RT00187 DS    0H                                                  0188
*     SCHFRREN='1'B;                /* DUMP CANNOT BE TAKEN          */
         OI    SCHFRREN(R4),B'01000000'                            0188
*   IF(SDUBRANH=ON                  /* FOR BRANCH ENTRY      @G33NPHE*/
*       &ADDR(PSACSTK->RT1WLPTA)->RT1TLPN='FF'X/* CHECK FOR A VALID
*                                      RT1 WORK AREA         @G33NPHE*/
*       &PSACSTK->RT1NODMP=ON)      /* AND IF THE SLIP NODUMP FLAG IS
*                                      ON                    @G33NPHE*/
*       ×                           /* OR                    @G33NPHE*/
*       (SDUBRANH=OFF               /* FOR NONBRANCH ENTRY   @G33NPHE*/
*       &PSATOLD^=0                 /* WITH A CURRENT TCB    @G33NPHE*/
*       &PSATOLD->TCBRTM2=ON        /* THAT SHOWS RTM2 ENTERED     0189
*                                                            @G33NPHE*/
*       &PSATOLD->TCBRTWA^=0        /* AND SHOWS AN RTM2 WORK AREA 0189
*                                                            @G33NPHE*/
*       &PSATOLD->TCBRTWA->RTM2NODP=ON)/* IF THE SLIP NODUMP FLAG IS
*                                      ON                    @G33NPHE*/
*     THEN                          /* SLIP HAS REQUESTED DUMPS BE 0189
*                                      SUPRESSED FOR THIS CALL TO RTM
*                                                            @G33NPHE*/
@RF00187 TM    SDUBRANH(R1),B'00000001'                            0189
         BNO   @GL00004                                            0189
         L     @12,PSACSTK                                         0189
         CLI   RT1TLPN+16(@12),255                                 0189
         BNE   @GL00004                                            0189
         TM    RT1NODMP(@12),B'00000100'                           0189
         BO    @RT00189                                            0189
@GL00004 TM    SDUBRANH(R1),B'00000001'                            0189
         BNZ   @RF00189                                            0189
         L     @12,PSATOLD                                         0189
         SLR   @08,@08                                             0189
         CR    @12,@08                                             0189
         BE    @RF00189                                            0189
         TM    TCBRTM2(@12),B'00001000'                            0189
         BNO   @RF00189                                            0189
         L     @12,TCBRTWA(,@12)                                   0189
         CR    @12,@08                                             0189
         BE    @RF00189                                            0189
         TM    RTM2NODP(@12),B'00010000'                           0189
         BNO   @RF00189                                            0189
@RT00189 DS    0H                                                  0190
*     SCHFRREN='1'B;                /* SO DUMP CANNOT BE TAKEN     0190
*                                                            @G33NPHE*/
         OI    SCHFRREN(R4),B'01000000'                            0190
*   RFY                                                            0191
*    (R10,                                                         0191
*     R11) UNRSTD;                                                 0191
@RF00189 DS    0H                                                  0192
*   IF SCHFRREN='0'B THEN           /* IF A DUMP CAN STILL BE TAKEN  */
         TM    SCHFRREN(R4),B'01000000'                            0192
         BNZ   @RF00192                                            0192
*     DO;                           /* MOVE PARAMETER LIST           */
*       SCHFRRRP='1'B;              /* INDICATE PARAMETER LIST     0194
*                                      REFERENCED            @G33VPHD*/
         OI    SCHFRRRP(R4),B'00001000'                            0194
*       IF SDUNEW='0'B THEN         /* IF OLD PARAMTER LIST  @G33VPHD*/
         TM    SDUNEW(R1),B'00100000'                              0195
         BNZ   @RF00195                                            0195
*         SCHPARML(1:24)=SDUMP(1:24);/* MOVE PARAMETER LIST USING OLD
*                                      LENGTH                @G33VPHD*/
         MVC   SCHPARML(24),SDUMP(R1)                              0196
*       ELSE                                                       0197
*         SCHPARML=SDUMP;           /* NEW PARAMTER LIST USE FULL  0197
*                                      LENGTH                @G33VPHD*/
         B     @RC00195                                            0197
@RF00195 MVC   SCHPARML(40),SDUMP(R1)                              0197
*       RFY                                                        0198
*         SDUMP BASED(RTCTSDPL);    /* MAP CALLER PARAMETER LIST   0198
*                                                            @G33VPHD*/
@RC00195 DS    0H                                                  0199
*/********************************************************************/
*/*   THIS SEGMENT VALIDATES THE INFORMATION IN THE SDUMP PARAM      */
*/*   LIST.  THE PARAM LIST AND WHAT IT POINTS TO CANNOT BE IN       */
*/*   THE 4K SQA BUFFER.  IF THE CALLER PASSED A DCB ADDRESS, THE    */
*/*   DCB MUST BE OPEN AND THE DATASET MUST RESIDE ON A SUPPORTED    */
*/*   DEVICE.                                                        */
*/*                                                                  */
*/*   INPUT: SVC DUMP PARAMETER LIST                                 */
*/*                                                                  */
*/*   OUTPUT: ABAEND CALLER WITH X'233' COMPLETION CODE IF           */
*/*           ANY INFORMATION IN THE SDUMP PARAM LIST IS INVALID     */
*/*                                                                  */
*/*   INCLUDED BY: SDTOP                                     @ZM44936*/
*/********************************************************************/
*                                                                  0199
*       RFY                                                        0199
*        (R10,                                                     0199
*         R11) RSTD;                                               0199
*       R10=CVTSDBF&HIGHBIT0;       /* ADDRESS OF BEGINNING OF 4K SQA
*                                      BUFFER WITH HIGH ORDER BIT  0200
*                                      ZERO                          */
         L     @12,@CF04983                                        0200
         L     @08,CVTPTR                                          0200
         L     R10,CVTSDBF(,@08)                                   0200
         NR    R10,@12                                             0200
*       R11=R10+FOURK;              /* ADDRESS OF END OF BUFFER      */
         LR    R11,R10                                             0201
         AL    R11,@CF04971                                        0201
*       IF(R10<=(ADDR(SDUMP)&HIGHBIT0))&/* IF PARM LIST IN   @G33VPHD*/
*           ((ADDR(SDUMP)&HIGHBIT0)<R11) THEN/* SDUMP 4K BUFFER    0202
*                                                            @G33VPHD*/
         L     @08,CVTRTMCT(,@08)                                  0202
         N     @12,RTCTSDPL(,@08)                                  0202
         CR    R10,@12                                             0202
         BH    @RF00202                                            0202
         CR    @12,R11                                             0202
         BNL   @RF00202                                            0202
*         DO;                       /* ABEND CALLER W/233    @G33VPHD*/
*           R15=RSN1C;              /* SET REASON CODE REG   @G33VPHD*/
         LA    R15,28                                              0204
*           GEN(ABEND X'233',DUMP,,SYSTEM);/* ABEND CALLER           */
         ABEND X'233',DUMP,,SYSTEM
*         END;                      /* END ABEND CALLER      @G33VPHD*/
*       IF SDUDCB='1'B THEN         /* IF DCB SUPPLIED, VALIDATE     */
@RF00202 L     @12,CVTPTR                                          0207
         L     @12,CVTRTMCT(,@12)                                  0207
         L     @12,RTCTSDPL(,@12)                                  0207
         TM    SDUDCB(@12),B'10000000'                             0207
         BNO   @RF00207                                            0207
*         DO;                                                      0208
*           RFY                                                    0209
*             IHADCB BASED(SDUDCBAD);/* ADDRESS OF DCB IN PARM LIST  */
*           RFY                                                    0210
*             DEBBASIC BASED(DCBDEBAD);/* ADDRESS OF DEB IN DCB      */
*           RFY                                                    0211
*             UCBOB BASED(DEBSUCBA);/* ADDRESS OF UCB IN DEB         */
*           IF(R10<=SDUDCBAD&       /* IF DCB IN 4K SQA BUFFER OR    */
*               SDUDCBAD<R11)×(DCBOFOPN^='1'B)×/* DCB NOT OPENED OR  */
*               (UCB3TAPE='0'B&     /* DATASET NOT ON TAPE AND       */
*               UCB3DACC='0'B) THEN /* DATASET NOT ON DASD THEN      */
         L     @12,SDUDCBAD(,@12)                                  0212
         CR    R10,@12                                             0212
         BH    @GL00013                                            0212
         CR    @12,R11                                             0212
         BL    @RT00212                                            0212
@GL00013 L     @12,CVTPTR                                          0212
         L     @12,CVTRTMCT(,@12)                                  0212
         L     @12,RTCTSDPL(,@12)                                  0212
         LA    @08,40                                              0212
         AL    @08,SDUDCBAD(,@12)                                  0212
         TM    DCBOFOPN(@08),B'00010000'                           0212
         BNO   @RT00212                                            0212
         L     @12,DCBDEBAD(,@08)                                  0212
         L     @12,DEBSUCBA(,@12)                                  0212
         TM    UCB3TAPE(@12),B'10100000'                           0212
         BNZ   @RF00212                                            0212
@RT00212 DS    0H                                                  0213
*             DO;                   /* ABEND CALLER W/233    @G33VPHD*/
*               R15=RSN20;          /* SET REASON CODE REG   @G33VPHD*/
         LA    R15,32                                              0214
*               GEN(ABEND X'233',DUMP,,SYSTEM);/* ABEND CALLER       */
         ABEND X'233',DUMP,,SYSTEM
*             END;                  /* END ABEND CALLER      @G33VPHD*/
*           ELSE                                                   0217
*             ;                                                    0217
@RF00212 DS    0H                                                  0218
*           IF UCB3TAPE='1'B&       /* IF DATASET ON TAPE BUT TAPE   */
*               (UCBTBYT4^='03'X&   /* IS NOT 2400 SERIES            */
*               UCBTBYT4^='01'X) THEN/* COMPATIBLE THEN              */
         L     @12,CVTPTR                                          0218
         L     @12,CVTRTMCT(,@12)                                  0218
         L     @12,RTCTSDPL(,@12)                                  0218
         L     @12,SDUDCBAD(,@12)                                  0218
         L     @12,DCBDEBAD+40(,@12)                               0218
         L     @12,DEBSUCBA(,@12)                                  0218
         TM    UCB3TAPE(@12),B'10000000'                           0218
         BNO   @RF00218                                            0218
         CLI   UCBTBYT4(@12),X'03'                                 0218
         BE    @RF00218                                            0218
         CLI   UCBTBYT4(@12),X'01'                                 0218
         BE    @RF00218                                            0218
*             DO;                   /* ABEND CALLER W/233    @G33VPHD*/
*               R15=RSN0C;          /* SET REASON CODE REG   @G33VPHD*/
         LA    R15,12                                              0220
*               GEN(ABEND X'233',DUMP,,SYSTEM);/* ABEND CALLER       */
         ABEND X'233',DUMP,,SYSTEM
*             END;                  /* END ABEND CALLER      @G33VPHD*/
*           ELSE                                                   0223
*             ;                                                    0223
@RF00218 DS    0H                                                  0224
*           IF UCB3DACC='1'B&       /* IF DATASET ON DASD BUT DASD IS
*                                      NOT SUPPORTED BY SVC DUMP     */
*               (UCBTBYT4^=DA23051)&/* 2305 MODEL 1 IS SUPPORTED     */
*               (UCBTBYT4^=DA23052)&/* 2305 MODEL 2 IS SUPPORTED     */
*               (UCBTBYT4^=DA2314)& /* 2314/2319 IS SUPPORTED        */
*               (UCBTBYT4^=DA3330A)&/* 3330 TYPE A IS SUPPORTED      */
*               (UCBTBYT4^=DA3330C)&/* 3330 TYPE C IS SUPPORTED      */
*               (UCBTBYT4^=DA3350)& /* 3350 SUPPORTED        @Z40RSTA*/
*               (UCBTBYT4^=DA3340) THEN/* 3340 IS SUPPORTED          */
         L     @12,CVTPTR                                          0224
         L     @12,CVTRTMCT(,@12)                                  0224
         L     @12,RTCTSDPL(,@12)                                  0224
         L     @12,SDUDCBAD(,@12)                                  0224
         L     @12,DCBDEBAD+40(,@12)                               0224
         L     @12,DEBSUCBA(,@12)                                  0224
         TM    UCB3DACC(@12),B'00100000'                           0224
         BNO   @RF00224                                            0224
         CLI   UCBTBYT4(@12),X'06'                                 0224
         BE    @RF00224                                            0224
         CLI   UCBTBYT4(@12),X'07'                                 0224
         BE    @RF00224                                            0224
         CLI   UCBTBYT4(@12),X'08'                                 0224
         BE    @RF00224                                            0224
         CLI   UCBTBYT4(@12),X'09'                                 0224
         BE    @RF00224                                            0224
         CLI   UCBTBYT4(@12),X'0D'                                 0224
         BE    @RF00224                                            0224
         CLI   UCBTBYT4(@12),X'0B'                                 0224
         BE    @RF00224                                            0224
         CLI   UCBTBYT4(@12),X'0A'                                 0224
         BE    @RF00224                                            0224
*             DO;                   /* ABEND CALLER W/233    @G33VPHD*/
*               R15=RSN0C;          /* SET REASON CODE REG   @G33VPHD*/
         LA    R15,12                                              0226
*               GEN(ABEND X'233',DUMP,,SYSTEM);/* ABEND CALLER       */
         ABEND X'233',DUMP,,SYSTEM
*             END;                  /* END ABEND CALLER      @G33VPHD*/
*           ELSE                                                   0229
*             ;                                                    0229
@RF00224 DS    0H                                                  0230
*           RFY                                                    0230
*            (IHADCB,                                              0230
*             DEBBASIC,                                            0230
*             UCBOB) BASED;                                        0230
*         END;                                                     0231
*       ELSE                                                       0232
*         ;                                                        0232
@RF00207 DS    0H                                                  0233
*       IF SDUHDR='1'B&             /* IF USER DATA SUPPLIED BUT IS  */
*           ((R10<=SDUHDRAD&        /* IN THE 4K SQA BUFFER OR       */
*           SDUHDRAD<R11)×(SDUHDRLN>MAXHDRLN)) THEN/* IS TOO LONG    */
         L     @12,CVTPTR                                          0233
         L     @12,CVTRTMCT(,@12)                                  0233
         L     @12,RTCTSDPL(,@12)                                  0233
         TM    SDUHDR(@12),B'00010000'                             0233
         BNO   @RF00233                                            0233
         L     @12,SDUHDRAD(,@12)                                  0233
         CR    R10,@12                                             0233
         BH    @GL00025                                            0233
         CR    @12,R11                                             0233
         BL    @RT00233                                            0233
@GL00025 L     @12,CVTPTR                                          0233
         L     @12,CVTRTMCT(,@12)                                  0233
         L     @12,RTCTSDPL(,@12)                                  0233
         L     @12,SDUHDRAD(,@12)                                  0233
         CLI   SDUHDRLN(@12),100                                   0233
         BNH   @RF00233                                            0233
@RT00233 DS    0H                                                  0234
*         DO;                       /* ABEND CALLER W/233    @G33VPHD*/
*           R15=RSN14;              /* SET REASON CODE REG   @G33VPHD*/
         LA    R15,20                                              0235
*           GEN(ABEND X'233',DUMP,,SYSTEM);/* ABEND CALLER           */
         ABEND X'233',DUMP,,SYSTEM
*         END;                      /* END ABEND CALLER      @G33VPHD*/
*       ELSE                                                       0238
*         DO;                       /* USER DATA NOT SUPPLIED OR WAS
*                                      VALID                 @ZM44942*/
         B     @RC00233                                            0238
@RF00233 DS    0H                                                  0239
*           IF SDUHDR='1'B THEN     /* IF HDR SPECIFIED HEADER VALID
*                                                            @ZM44942*/
         L     @12,CVTPTR                                          0239
         L     @12,CVTRTMCT(,@12)                                  0239
         L     @12,RTCTSDPL(,@12)                                  0239
         TM    SDUHDR(@12),B'00010000'                             0239
         BNO   @RF00239                                            0239
*             DO;                   /* MOVE HEADER INTO SDX STORAGE
*                                                            @ZM44942*/
*               SCHHDR(1:SDUHDRLN+1)=USERDATA(1:SDUHDRLN+1);/* MOVE
*                                      USER SUPPLIED HEADER  @ZM44942*/
         L     @08,SDUHDRAD(,@12)                                  0241
         SLR   @05,@05                                             0241
         IC    @05,SDUHDRLN(,@08)                                  0241
         EX    @05,@SM05167                                        0241
*               SDUHDRAD=ADDR(SCHHDR);/* CHANGE PARMLIST HEADER    0242
*                                      ADDRESS               @ZM44942*/
         LA    @08,SCHHDR                                          0242
         ST    @08,SDUHDRAD(,@12)                                  0242
*             END;                  /* END MOVE HEADER INTO SDX    0243
*                                      STORAGE               @ZM44942*/
*         END;                      /* END USER DATA NOT SUPPLIED OR
*                                      WAS VALID             @ZM44942*/
@RF00239 DS    0H                                                  0245
*       IF SDUSTOR='1'B THEN        /* IF STORAGE RANGE(S) SUPPLIED  */
@RC00233 L     @12,CVTPTR                                          0245
         L     @12,CVTRTMCT(,@12)                                  0245
         L     @12,RTCTSDPL(,@12)                                  0245
         TM    SDUSTOR(@12),B'00100000'                            0245
         BNO   @RF00245                                            0245
*         DO;                       /* VALIDATE                      */
*           IF(R10<=SDUSTORA&       /* IF RANGE(S) IN 4K SQA BUFFER  */
*               SDUSTORA<R11) THEN                                 0247
         L     @12,SDUSTORA(,@12)                                  0247
         CR    R10,@12                                             0247
         BH    @RF00247                                            0247
         CR    @12,R11                                             0247
         BNL   @RF00247                                            0247
*             DO;                   /* ABEND CALLER W/233    @G33VPHD*/
*               R15=RSN1C;          /* SET REASON CODE REG   @G33VPHD*/
         LA    R15,28                                              0249
*               GEN(ABEND X'233',DUMP,,SYSTEM);/* ABEND CALLER       */
         ABEND X'233',DUMP,,SYSTEM
*             END;                  /* END ABEND CALLER      @G33VPHD*/
*           ELSE                                                   0252
*             DO;                                                  0252
         B     @RC00247                                            0252
@RF00247 DS    0H                                                  0253
*               RFY                                                0253
*                 STORANGE BASED(R10);                             0253
*               R10=SDUSTORA;       /* ADDR OF FIRST RANGE           */
         L     @12,CVTPTR                                          0254
         L     @12,CVTRTMCT(,@12)                                  0254
         L     @12,RTCTSDPL(,@12)                                  0254
         L     R10,SDUSTORA(,@12)                                  0254
*               DO WHILE(R10^=NULL);/* CHECK EACH RANGE              */
         B     @DE00255                                            0255
@DL00255 DS    0H                                                  0256
*                 IF STARTADR>=     /* IF FIRST ADDRESS GREATER THAN
*                                      OR EQUAL TO SECOND            */
*                     (ENDADDR&HIGHBIT0) THEN                      0256
         L     @12,ENDADDR(,R10)                                   0256
         N     @12,@CF04983                                        0256
         C     @12,STARTADR(,R10)                                  0256
         BH    @RF00256                                            0256
*                   DO;             /* ABEND CALLER W/233    @G33VPHD*/
*                     R15=RSN10;    /* SET REASON CODE REG   @G33VPHD*/
         LA    R15,16                                              0258
*                     GEN(ABEND X'233',DUMP,,SYSTEM);/* ABEND CALLER */
         ABEND X'233',DUMP,,SYSTEM
*                   END;            /* END ABEND CALLER      @G33VPHD*/
*                 ELSE                                             0261
*                   IF LASTRNGE='1'B THEN/* END CHECK IF LAST        */
         B     @RC00256                                            0261
@RF00256 TM    LASTRNGE(R10),B'10000000'                           0261
         BNO   @RF00261                                            0261
*                     R10=NULL;     /* RANGE                         */
         SLR   R10,R10                                             0262
*                   ELSE                                           0263
*                     R10=R10+LEN1ADRN;/* ADDR OF NEXT RANGE         */
         B     @RC00261                                            0263
@RF00261 AL    R10,@CF00038                                        0263
*               END;                                               0264
@RC00261 DS    0H                                                  0264
@RC00256 DS    0H                                                  0264
@DE00255 LTR   R10,R10                                             0264
         BNZ   @DL00255                                            0264
*               RFY                                                0265
*                 STORANGE BASED;                                  0265
*             END;                                                 0266
*         END;                                                     0267
*       ELSE                                                       0268
*         ;                                                        0268
@RF00245 DS    0H                                                  0269
*       RFY                                                        0269
*        (R10,                                                     0269
*         R11) UNRSTD;                                             0269
@RC00245 DS    0H                                                  0270
*       IF SDUNEW='1'B&             /* IF NEW PARAMTER LIST AND    0270
*                                                            @G33VPHD*/
*           SDUASLST='1'B THEN      /* ASIDLST WAS SPECIFIED @G33VPHD*/
         L     @12,CVTPTR                                          0270
         L     @12,CVTRTMCT(,@12)                                  0270
         L     @08,RTCTSDPL(,@12)                                  0270
         TM    SDUNEW(@08),B'00110000'                             0270
         BNO   @RF00270                                            0270
*         DO;                       /* PERFORM MULTIPLE ADDRESS SPACE
*                                      DUMP                  @G33VPHD*/
*/********************************************************************/
*/*  THIS SEGMENT WILL PROCESS MULTIPLE ADDRESS SPACE SCHEDULE DUMP  */
*/*  REQUESTS. THE CALLER SUPPLIED ASID LIST WILL BE EXAMINED.  EACH */
*/*  VALID ASID WILL BE SAVED IN THE RTCT ASID ARRAY.  THE NUMBER OF */
*/*  ADDRESS SPACES TO BE DUMPED WILL BE CALCULATED.  THE USER WILL  */
*/*  BE ABENDED WITH COMPLETION CODE X'233' IF ANY OF THE SPECIFIED  */
*/*  ASIDS ARE GREATER THAN THE ASVTMAXU VALUE. DUPLICATE ASID       */
*/*  VALUES WILL BE IGNORED. THE NUMBER OF ADDRESS SPACES TO BE      */
*/*  DUMPED WILL NOT INCLUDE DUPLICATE ASID ENTRIES.                 */
*/*                                                                  */
*/*  INPUT:  USER ASID LIST, RTCT, ASVT                              */
*/*                                                                  */
*/*  OUTPUT: RTCT ADDRESS SPACE ARRAY INITIALIZED.                   */
*/*                                                                  */
*/*  INCLUDED BY:  TOP SEGMENT                                       */
*/********************************************************************/
*                                                                  0272
*           RTCTSDMA=ON;            /* INDICATE MULTIPLE ADDRESS   0272
*                                      SPACE DUMP IN PROGRESS      0272
*                                                            @G33VPHD*/
         OI    RTCTSDMA(@12),B'00010000'                           0272
*           IF ASCBASID=WAITADSP THEN/* IF CURRENT ADDRESS SPACE IS
*                                      WAIT ADDRESS SPACE    @G33VPHD*/
         L     @12,ASCBPTR                                         0273
         LH    @12,ASCBASID(,@12)                                  0273
         N     @12,@CF05164                                        0273
         LTR   @12,@12                                             0273
         BNZ   @RF00273                                            0273
*             SDUCASID=MASTASID;    /* SET THE CALLERS ASID TO MASTER
*                                                            @G33VPHD*/
         MVC   SDUCASID(2,@08),@CH00068                            0274
*           ELSE                                                   0275
*             SDUCASID=ASCBASID;    /* NOT IN WAIT ADDRESS SPACE   0275
*                                      CALLERS ASID IS THE CURRENT 0275
*                                      ASID                  @G33VPHD*/
         B     @RC00273                                            0275
@RF00273 L     @12,CVTPTR                                          0275
         L     @12,CVTRTMCT(,@12)                                  0275
         L     @12,RTCTSDPL(,@12)                                  0275
         L     @08,ASCBPTR                                         0275
         LH    @08,ASCBASID(,@08)                                  0275
         N     @08,@CF05164                                        0275
         STH   @08,SDUCASID(,@12)                                  0275
*           RFY                                                    0276
*             R12 RSTD;             /* SAVE INDEX REGISTER   @G33VPHD*/
@RC00273 DS    0H                                                  0277
*           RTCTSDNA=0;             /* INITIALIZE NUMBER ADDRESS   0277
*                                      SPACES                @G33VPHD*/
         L     @08,CVTPTR                                          0277
         L     @08,CVTRTMCT(,@08)                                  0277
         MVI   RTCTSDNA(@08),X'00'                                 0277
*           DO RTCTINDX=ONE TO MAXASIDS;/* PROCESS ALL REQUESTED   0278
*                                      ADDRESS               @G33VPHD*/
         LA    @08,1                                               0278
         L     @05,CVTPTR                                          0278
         L     @05,CVTRTMCT(,@05)                                  0278
         STC   @08,RTCTINDX(,@05)                                  0278
@DL00278 DS    0H                                                  0279
*             IF(ASIDNUMB(RTCTINDX)&HIBIT0H)>ASVTMAXU THEN/* IF THIS
*                                      SPECIFIED ASID IS INVALID   0279
*                                                            @G33VPHD*/
         L     @08,CVTPTR                                          0279
         L     @05,CVTRTMCT(,@08)                                  0279
         SLR   @02,@02                                             0279
         IC    @02,RTCTINDX(,@05)                                  0279
         ALR   @02,@02                                             0279
         L     @05,RTCTSDPL(,@05)                                  0279
         L     @05,SDUASIDP(,@05)                                  0279
         L     @00,@CF04989                                        0279
         BCTR  @05,0                                               0279
         BCTR  @05,0                                               0279
         LH    @05,ASIDNUMB(@02,@05)                               0279
         NR    @00,@05                                             0279
         L     @08,ASVTPTR(,@08)                                   0279
         C     @00,ASVTMAXU(,@08)                                  0279
         BNH   @RF00279                                            0279
*               DO;                 /* ABEND USER - BAD PARAMETERS 0280
*                                                            @G33VPHD*/
*                 R15=RSN28;        /* SAVE REASON CODE FOR ABEND  0281
*                                                            @G33VPHD*/
         LA    R15,40                                              0281
*                 R1=CC233;         /* INTERFACE ABEND 233   @G33VPHD*/
         L     R1,@CF05025                                         0282
*                 SVC(13);          /* ABEND USER WITH COMPLETION AND
*                                      REASON CODES          @G33VPHD*/
         SVC   13                                                  0283
*               END;                /* END OF INVALID ASID ABEND   0284
*                                                            @G33VPHD*/
*             ELSE                                                 0285
*               DO;                 /* THIS ASID IS VALID SO PROCESS
*                                      IT                    @G33VPHD*/
*                                                                  0285
         B     @RC00279                                            0285
@RF00279 DS    0H                                                  0286
*                 /***************************************************/
*                 /*                                                 */
*                 /* SAVE SPECIFIED ASID SO IT CAN BE CONVERTED      */
*                 /*                                                 */
*                 /***************************************************/
*                                                                  0286
*                 RTCTSDAS(16)=ASIDNUMB(RTCTINDX)&HIBIT0H;/* PUT ASID
*                                      IN SAVED AREA FOR TRANSLATE 0286
*                                                            @G33VPHD*/
*                                                                  0286
         L     @08,CVTPTR                                          0286
         L     @08,CVTRTMCT(,@08)                                  0286
         SLR   @05,@05                                             0286
         IC    @05,RTCTINDX(,@08)                                  0286
         ALR   @05,@05                                             0286
         L     @02,RTCTSDPL(,@08)                                  0286
         L     @02,SDUASIDP(,@02)                                  0286
         L     @00,@CF04989                                        0286
         BCTR  @02,0                                               0286
         BCTR  @02,0                                               0286
         LH    @05,ASIDNUMB(@05,@02)                               0286
         NR    @00,@05                                             0286
         STCM  @00,3,RTCTSDAS+60(@08)                              0286
*                 /***************************************************/
*                 /*                                                 */
*                 /* IF THE CURRENT ASID INDICATOR WAS SPECIFIED (0) */
*                 /* SET THE SAVED ASID TO THE PROPER CURRENT ASID   */
*                 /*                                                 */
*                 /***************************************************/
*                                                                  0287
*                 IF RTCTSDAS(16)=CURRIND THEN/* IF CURRENT ADDRESS
*                                      SPACE INDICATOR SPECIFIED   0287
*                                                            @G33VPHD*/
         LTR   @00,@00                                             0287
         BNZ   @RF00287                                            0287
*                   DO;             /* CONVERT CURRENT INDICATOR TO
*                                      VALID ASID            @G33VPHD*/
*                     IF ASCBASID=WAITADSP THEN/* IF CURRENT ADDRESS
*                                      SPACE IS WAIT ADDRESS SPACE 0289
*                                                            @G33VPHD*/
         L     @05,ASCBPTR                                         0289
         LH    @05,ASCBASID(,@05)                                  0289
         N     @05,@CF05164                                        0289
         LTR   @05,@05                                             0289
         BNZ   @RF00289                                            0289
*                       RTCTSDAS(16)=MASTASID;/* REPLACE INDICATOR 0290
*                                      WITH MASTER ASID      @G33VPHD*/
         MVC   RTCTSDAS+60(2,@08),@CH00068                         0290
*                     ELSE                                         0291
*                       RTCTSDAS(16)=ASCBASID;/* NOT IN WAIT ADDRESS
*                                      SPACE USE CURRENT ASID      0291
*                                                            @G33VPHD*/
         B     @RC00289                                            0291
@RF00289 L     @08,CVTPTR                                          0291
         L     @08,CVTRTMCT(,@08)                                  0291
         L     @05,ASCBPTR                                         0291
         MVC   RTCTSDAS+60(2,@08),ASCBASID(@05)                    0291
*                   END;            /* END CONVERT CURRENT ASID    0292
*                                                            @G33VPHD*/
*                                                                  0292
@RC00289 DS    0H                                                  0293
*                 /***************************************************/
*                 /*                                                 */
*                 /* THIS LOOP SEARCHES THE SAVED ASIDS AND          */
*                 /* ELIMINATES DUPLICATE ASID ENTRIES               */
*                 /*                                                 */
*                 /***************************************************/
*                                                                  0293
*                 SCHFRRND=OFF;     /* INITIALIZE DUPLICATE ASID FLAG
*                                                            @G33VPHD*/
@RF00287 NI    SCHFRRND(R4),B'11111011'                            0293
*                 DO R12=1 TO RTCTSDNA WHILE(SCHFRRND=OFF);/* SEARCH
*                                      ALL PREVIOUSLY SAVED ASID   0294
*                                      ENTRIES               @G33VPHD*/
         LA    R12,1                                               0294
         B     @DE00294                                            0294
@DL00294 TM    SCHFRRND(R4),B'00000100'                            0294
         BNZ   @DC00294                                            0294
*                   IF RTCTSDAS(R12)=RTCTSDAS(16) THEN/* IF THIS ASID
*                                      IS A DUPLICATE        @G33VPHD*/
         LR    @08,R12                                             0295
         SLA   @08,2                                               0295
         L     @05,CVTPTR                                          0295
         L     @05,CVTRTMCT(,@05)                                  0295
         ALR   @08,@05                                             0295
         CLC   RTCTSDAS-4(2,@08),RTCTSDAS+60(@05)                  0295
         BNE   @RF00295                                            0295
*                     SCHFRRND=ON;  /* INDICATE DUPLICATE ASID FOUND
*                                      AND EXIT LOOP         @G33VPHD*/
         OI    SCHFRRND(R4),B'00000100'                            0296
*                 END;              /* END OF SEARCH FOR DUPLICATES
*                                                            @G33VPHD*/
@RF00295 AL    R12,@CF00068                                        0297
@DE00294 L     @08,CVTPTR                                          0297
         L     @08,CVTRTMCT(,@08)                                  0297
         SLR   @05,@05                                             0297
         IC    @05,RTCTSDNA(,@08)                                  0297
         CR    R12,@05                                             0297
         BNH   @DL00294                                            0297
@DC00294 DS    0H                                                  0298
*                 IF SCHFRRND=OFF THEN/* IF NO DUPLICATE FOUND     0298
*                                                            @G33VPHD*/
         TM    SCHFRRND(R4),B'00000100'                            0298
         BNZ   @RF00298                                            0298
*                   DO;             /* ADD ASID TO TABLE     @G33VPHD*/
*                     RTCTSDAS(R12)=RTCTSDAS(16);/* SAVE THE       0300
*                                      SPECIFIED ASID IN THE PROPER
*                                      ARRAY ENTRY           @G33VPHD*/
         LR    @08,R12                                             0300
         SLA   @08,2                                               0300
         L     @05,CVTPTR                                          0300
         L     @05,CVTRTMCT(,@05)                                  0300
         ALR   @08,@05                                             0300
         MVC   @TS00001(2),RTCTSDAS+60(@05)                        0300
         MVC   RTCTSDAS-4(2,@08),@TS00001                          0300
*                     RTCTSDNA=RTCTSDNA+ONE;/* ADD 1 TO THE ASIDS TO
*                                      DUMP COUNT            @G33VPHD*/
         LA    @08,1                                               0301
         SLR   @02,@02                                             0301
         IC    @02,RTCTSDNA(,@05)                                  0301
         ALR   @08,@02                                             0301
         STC   @08,RTCTSDNA(,@05)                                  0301
*                   END;            /* END ADD ASID TO TABLE @G33VPHD*/
*                 RTCTSDAS(16)=ZEROH;/* REINITIALIZE MASTER ENTRY  0303
*                                                            @G33VPHD*/
@RF00298 L     @08,CVTPTR                                          0303
         L     @08,CVTRTMCT(,@08)                                  0303
         SLR   @05,@05                                             0303
         STCM  @05,3,RTCTSDAS+60(@08)                              0303
*               END;                /* END THIS ASID IS VALID      0304
*                                                            @G33VPHD*/
*             IF ASIDLSTF(RTCTINDX)=ON THEN/* IF THIS IS LAST ASID 0305
*                                                            @G33VPHD*/
@RC00279 L     @08,CVTPTR                                          0305
         L     @08,CVTRTMCT(,@08)                                  0305
         SLR   @05,@05                                             0305
         IC    @05,RTCTINDX(,@08)                                  0305
         ALR   @05,@05                                             0305
         L     @02,RTCTSDPL(,@08)                                  0305
         L     @02,SDUASIDP(,@02)                                  0305
         ALR   @02,@05                                             0305
         BCTR  @02,0                                               0305
         BCTR  @02,0                                               0305
         TM    ASIDLSTF(@02),B'10000000'                           0305
         BNO   @RF00305                                            0305
*               RTCTINDX=MAXASIDS;  /* MAKE INDEX GREATERTHAN MAXIMUM
*                                      TO END LOOP           @G33VPHD*/
         MVI   RTCTINDX(@08),X'0F'                                 0306
*           END;                    /* END PROCESS ALL REQUESTED   0307
*                                      ADDRESS SPACES        @G33VPHD*/
@RF00305 L     @05,CVTPTR                                          0307
         L     @05,CVTRTMCT(,@05)                                  0307
         LA    @08,1                                               0307
         SLR   @02,@02                                             0307
         IC    @02,RTCTINDX(,@05)                                  0307
         ALR   @08,@02                                             0307
         L     @05,CVTPTR                                          0307
         L     @05,CVTRTMCT(,@05)                                  0307
         STC   @08,RTCTINDX(,@05)                                  0307
         C     @08,@CF00034                                        0307
         BNH   @DL00278                                            0307
*           RFY                                                    0308
*             R12 UNRSTD;           /*                       @G33VPHD*/
*         END;                      /* END OF PERFORM MULTIPLE     0309
*                                      ADDRESS SPACE         @G33VPHD*/
*                                                                  0309
*       /*************************************************************/
*       /*                                                           */
*       /* PROCESSING TO DUMP A SINGLE ADDRESS SPACE         @G33VPHD*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0310
*       ELSE                                                       0310
*         DO;                       /* REGULAR SCHED DUMP    @G33VPHD*/
         B     @RC00270                                            0310
@RF00270 DS    0H                                                  0311
*           IF SDUTASID<ZERO×       /* IF ASID IS NEGATIVE OR        */
*               SDUTASID>ASVTMAXU THEN/* LARGER THAN MAX DEFINED     */
         L     @12,CVTPTR                                          0311
         L     @08,CVTRTMCT(,@12)                                  0311
         L     @08,RTCTSDPL(,@08)                                  0311
         LH    @08,SDUTASID(,@08)                                  0311
         N     @08,@CF05164                                        0311
         C     @08,ZERO                                            0311
         BL    @RT00311                                            0311
         L     @12,ASVTPTR(,@12)                                   0311
         C     @08,ASVTMAXU(,@12)                                  0311
         BNH   @RF00311                                            0311
@RT00311 DS    0H                                                  0312
*             DO;                   /* ASID IS BAD PARAMETER         */
*               R15=RSN24;          /* GIVE INVALID ASID REASON CODE
*                                                            @G33VPHD*/
         LA    R15,36                                              0313
*               R1=CC233;           /* INTERFACE ABEND 233,          */
         L     R1,@CF05025                                         0314
*               SVC(13);            /* ABEND CALLER WITH DUMP        */
         SVC   13                                                  0315
*             END;                                                 0316
*                                                                  0316
*           /*********************************************************/
*           /*                                                       */
*           /* IF WE ARE IN THE WAIT ADDRESS SPACE THE CURRENT ASID  */
*           /* MUST BE CONVERT TO THE MASTER ASID. ALSO IF THE       */
*           /* CURRENT ASID INDICATOR (0) WAS SPECIFIED IT MUST BE   */
*           /* CONVERTED TO THE CURRENT ASID                 @G33VPHD*/
*           /*                                                       */
*           /*********************************************************/
*                                                                  0317
*           IF PSAAOLD->ASCBASID=WAITADSP/* ASID IS VALID    @G33VPHD*/
*             THEN                                                 0317
@RF00311 L     @12,PSAAOLD                                         0317
         LH    @12,ASCBASID(,@12)                                  0317
         N     @12,@CF05164                                        0317
         LTR   @12,@12                                             0317
         BNZ   @RF00317                                            0317
*             DO;                   /* IF IN WAIT ADDR       @G33VPHD*/
*               SDUCASID=MASTASID;  /* SPACE IND MAST        @G33VPHD*/
         LA    @12,1                                               0319
         L     @08,CVTPTR                                          0319
         L     @08,CVTRTMCT(,@08)                                  0319
         L     @08,RTCTSDPL(,@08)                                  0319
         STH   @12,SDUCASID(,@08)                                  0319
*               IF SDUTASID=CURRIND THEN/* CURRENT IND       @G33VPHD*/
         LH    @05,SDUTASID(,@08)                                  0320
         N     @05,@CF05164                                        0320
         LTR   @05,@05                                             0320
         BNZ   @RF00320                                            0320
*                 SDUTASID=MASTASID;/* MASTER TARGET         @G33VPHD*/
         STH   @12,SDUTASID(,@08)                                  0321
*             END;                  /* END IN WAI ADDRESS SPACE    0322
*                                                            @G33VPHD*/
*           ELSE                                                   0323
*             DO;                                                  0323
         B     @RC00317                                            0323
@RF00317 DS    0H                                                  0324
*               SDUCASID=PSAAOLD->ASCBASID;/* CALLER ASID    @G33VPHD*/
         L     @12,CVTPTR                                          0324
         L     @12,CVTRTMCT(,@12)                                  0324
         L     @12,RTCTSDPL(,@12)                                  0324
         L     @08,PSAAOLD                                         0324
         LH    @05,ASCBASID(,@08)                                  0324
         N     @05,@CF05164                                        0324
         STH   @05,SDUCASID(,@12)                                  0324
*               IF SDUTASID=CURRIND THEN/* IF TARGET CURR    @G33VPHD*/
         LH    @05,SDUTASID(,@12)                                  0325
         N     @05,@CF05164                                        0325
         LTR   @05,@05                                             0325
         BNZ   @RF00325                                            0325
*                 SDUTASID=PSAAOLD->ASCBASID;/* TARGET ASID  @G33VPHD*/
         LH    @08,ASCBASID(,@08)                                  0326
         N     @08,@CF05164                                        0326
         STH   @08,SDUTASID(,@12)                                  0326
*             END;                                                 0327
@RF00325 DS    0H                                                  0328
*           RTCTSDAS(1)=SDUTASID;   /* PUT ASID IN RTCT      @G33VPHD*/
@RC00317 L     @12,CVTPTR                                          0328
         L     @12,CVTRTMCT(,@12)                                  0328
         L     @08,RTCTSDPL(,@12)                                  0328
         MVC   RTCTSDAS(2,@12),SDUTASID(@08)                       0328
*           RTCTSDNA=1;             /* NUMBER OF ADDR SPACES TO DUMP
*                                      IS ONE                @G33VPHD*/
         MVI   RTCTSDNA(@12),X'01'                                 0329
*         END;                      /* END OF REGULAR SCHEDULE DUMP
*                                      PROC                  @G33VPHD*/
*       SCHFRRRP='0'B;              /* INDICATE PARAMETER NO LONGER
*                                      REFERENCED            @G33VPHD*/
@RC00270 NI    SCHFRRRP(R4),B'11110111'                            0331
*/* ******************************************************************/
*/*   THIS SEGMENT CALCULATES THE EFFECTIVE SDUMP OPTIONS            */
*/*   USING THE CALLER SPECIFIED SDUMP PARAMETER LIST AND            */
*/*   THE OPTIONS SET IN THE RTCT BY THE CHNGDUMP COMMAND.           */
*/*   IF NO CHNGDUMP OPTIONS WERE SPECIFIED THE OPTIONS              */
*/*   USED ARE THOSE SPECIFIED IN THE SDUMP PARAMETER LIST           */
*/*   IF THE DUMP OPTIONS ON CHNGDUMP                                */
*/*   ARE IN ADD MODE, THE EFFECTIVE DUMP OPTIONS ARE THE            */
*/*   CHNGDUMP OPTIONS OR'ED TOGETHER WITH THE REQUESTED             */
*/*   OPTIONS. IF THE CHNGDUMP OPTIONS ARE IN OVER MODE              */
*/*   THEY BECOME THE EFFECTIVE DUMP OPTIONS. IF NO CHNGDUMP         */
*/*   OPTIONS WERE SPECIFIED ADD MODE IS THE DEFAULT         @G33VPHD*/
*/* ******************************************************************/
*                                                                  0332
*       RTCTASO=RTCTASO&&RTCTASO;   /* CLEAR SVC DUMP OPTION BITS  0332
*                                                            @G33VPHD*/
         L     @12,CVTPTR                                          0332
         L     @12,CVTRTMCT(,@12)                                  0332
         XC    RTCTASO(2,@12),RTCTASO(@12)                         0332
*       IF RTCTSDMG='0'B THEN       /* IF IN ADD MODE        @G33VPHD*/
         LA    @08,236                                             0333
         ALR   @08,@12                                             0333
         TM    RTCTSDMG(@08),B'00000010'                           0333
         BNZ   @RF00333                                            0333
*         DO;                       /* ADD OPTIONS TOGETHER  @G33VPHD*/
*           RTCTASO1=SDUSDAT1×RTCTSDO1;/* MERGE RTCT AND     @G33VPHD*/
         L     @05,RTCTSDPL(,@12)                                  0335
         MVC   RTCTASO1(1,@12),SDUSDAT1(@05)                       0335
         OC    RTCTASO1(1,@12),RTCTSDO1(@08)                       0335
*           RTCTASO2=SDUSDAT2×RTCTSDO2;/* PARM LIST OPTIONS  @G33VPHD*/
         MVC   RTCTASO2(1,@12),SDUSDAT2(@05)                       0336
         OC    RTCTASO2(1,@12),RTCTSDO2(@08)                       0336
*         END;                      /* END OF RTCT IN ADD MODE     0337
*                                                            @G33VPHD*/
*       ELSE                                                       0338
*         DO;                       /* RTCT OPTIONS OVER MODE      0338
*                                                            @G33VPHD*/
         B     @RC00333                                            0338
@RF00333 DS    0H                                                  0339
*           RTCTASO1=RTCTSDO1;      /* RTCT OPTIONS OVERRIDE @G33VPHD*/
         L     @12,CVTPTR                                          0339
         L     @12,CVTRTMCT(,@12)                                  0339
         LA    @08,236                                             0339
         ALR   @08,@12                                             0339
         MVC   RTCTASO1(1,@12),RTCTSDO1(@08)                       0339
*           RTCTASO2=RTCTSDO2;      /* SDUMP PARMLIST OPTIONS      0340
*                                                            @G33VPHD*/
         MVC   RTCTASO2(1,@12),RTCTSDO2(@08)                       0340
*         END;                      /* END OF RTCT OVER MODE @G33VPHD*/
*                                                                  0342
*       /*************************************************************/
*       /*                                                           */
*       /* INDICATE THAT SRB SCHEDULING CAN BE PERFORMED AND THIS IS */
*       /* A SCHEDULE DUMP REQUEST                           @G33VPHD*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0342
*       RTCTSDSH='1'B;              /* INDICATE CURRENT DUMP IS A  0342
*                                      SCHEDULED DUMP REQUEST        */
@RC00333 L     @12,CVTPTR                                          0342
         L     @12,CVTRTMCT(,@12)                                  0342
         OI    RTCTSDSH(@12),B'00100000'                           0342
*       SMWKPSSE=NULL;              /* INITIALIZE PSEUDO ADDRESS FOR
*                                      ENABLED SUMMARY DUMP  @ZM45052*/
         L     @08,RTCTSDSW(,@12)                                  0343
         SLR   @05,@05                                             0343
         ST    @05,SMWKPSSE(,@08)                                  0343
*       RTCTSDPR=NULL;              /* INITIALIZE PERMENANT RETURN 0344
*                                      CODE                  @ZM45082*/
*                                                                  0344
         MVI   RTCTSDPR(@12),X'00'                                 0344
*       /*************************************************************/
*       /*                                                           */
*       /* THIS SECTION SETS UP A SAVE AREA AND CALLS THE SUMMARY    */
*       /* DUMP PROCESSOR IF SUMMARY DUMP WAS REQUESTED      @G33VPHD*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0345
*       SCHFRRRT=ADDR(NOSUMDMP);    /* GET NEXT RETRY ADDRESS      0345
*                                                            @G33VPHD*/
         LA    @05,NOSUMDMP                                        0345
         ST    @05,SCHFRRRT(,R4)                                   0345
*       IF RTCTASNS='0'B&SDUBRANH='1'B/* IF SUMMARY DUMP SHOULD BE 0346
*                                      DUMPED AND THIS IS BRANCH   0346
*                                      ENTRY                 @G33VPHD*/
*         THEN                                                     0346
         TM    RTCTASNS(@12),B'00010000'                           0346
         BNZ   @RF00346                                            0346
         L     @12,RTCTSDPL(,@12)                                  0346
         TM    SDUBRANH(@12),B'00000001'                           0346
         BNO   @RF00346                                            0346
*         DO;                       /* CALL SUMMARY DUMP PROCESSOR 0347
*                                                            @G33VPHD*/
*           R13=ADDR(SMWKSAVE);     /* SETUP SAVE AREA       @G33VPHD*/
         LA    R13,SMWKSAVE(,@08)                                  0348
*           CALL IEAVTSSD;          /* CALL SUMMARY DUMP     @G33VPHD*/
*                                                                  0349
         L     @15,SMWKENTY(,@08)                                  0349
         BALR  @14,@15                                             0349
*           /*********************************************************/
*           /*                                                       */
*           /* THIS SECTION BUILDS THE TQE AND USES SETDIE TO SET THE*/
*           /* DIE INTERVAL FOR SUMMARY DUMP IF SUMMARY DUMP DUMPED  */
*           /* AT LEAST ONE RECORD                                   */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0350
*           IF RTCTSDRW='1'B THEN   /* IF SUMDUMP TO WRITE   @G33VPHD*/
         L     @12,CVTPTR                                          0350
         L     @12,CVTRTMCT(,@12)                                  0350
         TM    RTCTSDRW(@12),B'00000010'                           0350
         BNO   @RF00350                                            0350
*             DO;                   /* SET UP TIMER DIE USING SETDIE
*                                      FUNCTION              @ZM44936*/
*               SMWKTQE=SMWKTQE&&SMWKTQE;/* INIT TQE-TIMER   @G33VPHD*/
         L     @12,RTCTSDSW(,@12)                                  0352
         XC    SMWKTQE(128,@12),SMWKTQE(@12)                       0352
*               TQEVALLH=INTVALLH;  /* PUT INTERVAL VALUE IN TQE   0353
*                                                            @G33VPHD*/
         L     @12,SMWKTQEA(,@12)                                  0353
         MVC   TQEVALLH(4,@12),@CF01052                            0353
*               TQEVALRH=INTVALRH;  /* PUT INTERVAL VALUE IN TQE   0354
*                                                            @G33VPHD*/
         SLR   @08,@08                                             0354
         ST    @08,TQEVALRH(,@12)                                  0354
*               TQEEXIT=ADDR(SCHDIE);/* PUT EXIT ADDR IN TQE @G33VPHD*/
         LA    @08,SCHDIE                                          0355
         ST    @08,TQEEXIT(,@12)                                   0355
*               TQEASCB=PSAAOLD;    /* GET CURRENT ASCB ADDR @G33VPHD*/
         L     @08,PSAAOLD                                         0356
         ST    @08,TQEASCB(,@12)                                   0356
*               R1=SMWKTQEA;        /* GET ADDRESS OF TQE FOR SETDIE
*                                                            @G33VPHD*/
         LR    R1,@12                                              0357
*               RFY                                                0358
*                 TPC BASED(CVTTPC);/* MAP TIMER WORK AREA   @G33VPHD*/
*               GEN(STM  14,12,12(13));/* SAVE REGS FOR SETDIE     0359
*                                                            @ZM44936*/
         STM  14,12,12(13)
*               CALL SETDIE;        /* SET FIRST 10 SEC INTERVAL   0360
*                                                            @G33VPHD*/
         L     @12,CVTPTR                                          0360
         L     @12,CVTTPC(,@12)                                    0360
         L     @15,TPCSDIE(,@12)                                   0360
         BALR  @14,@15                                             0360
*               R13=ADDR(SMWKSAVE); /* GET SAVE AREA ADDR    @ZM44936*/
         L     @08,CVTPTR                                          0361
         L     @08,CVTRTMCT(,@08)                                  0361
         L     R13,RTCTSDSW(,@08)                                  0361
         LA    R13,SMWKSAVE(,R13)                                  0361
*               GEN(LM   14,12,12(13));/* RESTORE REGS AFTER SETDIE
*                                                            @ZM44936*/
         LM   14,12,12(13)
*               RFY                                                0363
*                 TPC BASED;        /*                       @G33VPHD*/
*               IF R15=NULL THEN    /* IF TQE WAS QUEUED OK  @G33VPHD*/
         LTR   R15,R15                                             0364
         BNZ   @RF00364                                            0364
*                 RTCTSDTQ=ON;      /* INDICATE TQE WAS QUEUED     0365
*                                                            @G33VPHD*/
         L     @12,CVTPTR                                          0365
         L     @12,CVTRTMCT(,@12)                                  0365
         OI    RTCTSDTQ(@12),B'01000000'                           0365
*             END;                  /* END OF TQE INITIALIZE @G33VPHD*/
@RF00364 DS    0H                                                  0367
*         END;                      /* END OF SUMMARY DUMP   @G33VPHD*/
@RF00350 DS    0H                                                  0368
*NOSUMDMP:                                                         0368
*       SCHFRRRT=ADDR(RECNODMP);    /* GET NEXT RETRY ADDRESS      0368
*                                                            @G33VPHD*/
@RF00346 DS    0H                                                  0368
NOSUMDMP LA    @12,RECNODMP                                        0368
         ST    @12,SCHFRRRT(,R4)                                   0368
*                                                                  0369
*/* ******************************************************************/
*/*                                                                  */
*/*  SAVERRID MOVES THE ERRORID INTO THE RTCTERID FIELD OF THE       */
*/*  RTCT SO THAT IT CAN BE INCLUDED IN THE DUMP.  IF AN             */
*/*  FRR REQUESTED THE DUMP, THEN RT1TLPN ='FF'X AND FRRSRCUR='1'B   */
*/*  IN THE CURRENT FRR ADDRESSED BY THE CURRENT STACK.  THE ERRORID */
*/*  INFORMATION IS FOUND IN THE SDWA POINTED TO BY RT1WRTCA.        */
*/*  OTHERWISE, IF AN AUTHORIZED ROUTINE INVOKED BY RTM2 REQUESTED   */
*/*  THE DUMP, THE TCBRTM2=1.  THE ERRORID IS FOUND IN RTM2WA POINTED*/
*/*  TO BY THE CURRENT TCB .  OTHERWISE, NO ERRORID EXISTS AND       */
*/*  THE ERRORID FIELD IN THE SDUMP WORKAREA IS ZEROED.              */
*/*                                                                  */
*/*  INPUT: RTCT,RT1W,RTM2WA,SDWA                                    */
*/*                                                                  */
*/*  OUTPUT: RTCTERID CONTAINS ERRORID OR ZEROES                     */
*/*                                                                  */
*/*  INCLUDED BY: TOP SEGMENT                                        */
*/*                                                                  */
*/* ******************************************************************/
*                                                                  0369
*       DO;                         /* BEGIN SAVERRID SEGMENT      0369
*                                                            @G17EP5W*/
*         ERRORID=ERRORID&&ERRORID; /* ZERO ERRORID IN RTCT  @G17EP5W*/
         L     @12,CVTPTR                                          0370
         L     @12,CVTRTMCT(,@12)                                  0370
         XC    ERRORID(10,@12),ERRORID(@12)                        0370
*         RFY                                                      0371
*           R6 RSTD;                /* USE REG FOR EFFICIENCY      0371
*                                                            @G17EP5W*/
*         RFY                                                      0372
*           FRRS BASED(R6);         /* STACK ADDRESSABILTY   @G17EP5W*/
*         RFY                                                      0373
*           RT1TRACK BASED(ADDR(RT1WLPTA));/* TRACKING FIELD @G17EP5W*/
*         R6=PSACSTK;               /* GET ADDR OF CURRENT STACK   0374
*                                                            @G17EP5W*/
         L     R6,PSACSTK                                          0374
*         RFY                                                      0375
*           FRRSENTR BASED(FRRSCURR);/* CURRENT FRR ENTRY    @G17EP5W*/
*         IF((FRRSCURR^=FRRSEMP)&   /* IF FRR EXISTS IN STACK      0376
*                                                            @G33VPHD*/
*             (RT1WRTCA^=NULL)&     /* AND AN SDWA EXISTS    @G17EP5W*/
*             (RT1TLPN=VALIDREC)) THEN/* THEN CHECK IF RTM1 HAS    0376
*                                                            @G17EP5W*/
         L     @12,FRRSCURR(,R6)                                   0376
         C     @12,FRRSEMP(,R6)                                    0376
         BE    @RF00376                                            0376
         L     @08,RT1WRTCA(,R6)                                   0376
         LTR   @08,@08                                             0376
         BZ    @RF00376                                            0376
         CLI   RT1TLPN+16(R6),255                                  0376
         BNE   @RF00376                                            0376
*           DO;                     /* ENTERED AN FRR        @G17EP5W*/
*             RFY                                                  0378
*               R7 RSTD;            /* RESTRICT REG          @G17EP5W*/
*             R7=FRRSCURR;          /* ADDR OF CURRENT FRR   @G17EP5W*/
         LR    R7,@12                                              0379
*             DO WHILE(R7->FRRSRCUR=OFF&/* CHECK IF RTM1 HAS ENTERED */
*                   R7>=ADDR(FRRSENTS));/* ANY FFRS ON THE STACK   0380
*                                                            @G17EP5W*/
         B     @DE00380                                            0380
@DL00380 DS    0H                                                  0381
*               R7=R7-FRRSESZE;     /* LOOK AT NEXT FRR      @G17EP5W*/
         SL    R7,@CF00125                                         0381
*             END;                  /* END CHECK FRRS        @G17EP5W*/
@DE00380 TM    FRRSRCUR(R7),B'10000000'                            0382
         BNZ   @DC00380                                            0382
         LA    @12,FRRSENTS(,R6)                                   0382
         CR    R7,@12                                              0382
         BNL   @DL00380                                            0382
@DC00380 DS    0H                                                  0383
*             IF R7>=ADDR(FRRSENTS) THEN/* IF FRR ENTRY FOUND      0383
*                                                            @G17EP5W*/
         LA    @12,FRRSENTS(,R6)                                   0383
         CR    R7,@12                                              0383
         BL    @RF00383                                            0383
*               DO;                 /* ERRORID IS IN SDWA    @G17EP5W*/
*                 RFY                                              0385
*                   R7 RSTD;        /*                       @G17EP5W*/
*                 RFY                                              0386
*                   SDWA BASED(R7); /* ADDRESSABILITY TO SDWA      0386
*                                                            @G17EP5W*/
*                 R7=RT1WRTCA;      /* GET SDWA ADDRESS      @G17EP5W*/
         L     R7,RT1WRTCA(,R6)                                    0387
*                 ERRSEQ#=SDWASEQ#; /* ERRORID SEQUENCE NUMBER     0388
*                                                            @G17EP5W*/
         L     @12,CVTPTR                                          0388
         L     @12,CVTRTMCT(,@12)                                  0388
         MVC   ERRSEQ#(2,@12),SDWASEQ#(R7)                         0388
*                 ERRCPUID=SDWACPUI;/* ERRORID CPI ID        @G17EP5W*/
         SLR   @08,@08                                             0389
         IC    @08,SDWACPUI(,R7)                                   0389
         STH   @08,ERRCPUID(,@12)                                  0389
*                 ERRTIME=SDWAERTM; /* TIME STAMP            @G17EP5W*/
         MVC   ERRTIME(4,@12),SDWAERTM(R7)                         0390
*                 IF(SDWAFMID^=ZERO)&/* IF ASID NOT ZEROS AND      0391
*                                                            @G17EP5W*/
*                     (SDWAFMID^=INVLASID) THEN/* NOT INVALID      0391
*                                                            @G17EP5W*/
         LH    @08,SDWAFMID(,R7)                                   0391
         N     @08,@CF05164                                        0391
         C     @08,ZERO                                            0391
         BE    @RF00391                                            0391
         CLC   SDWAFMID(2,R7),@CB05029                             0391
         BE    @RF00391                                            0391
*                   ERRASID=SDWAFMID;/* USE IT FOR ERRORID   @G17EP5W*/
         MVC   ERRASID(2,@12),SDWAFMID(R7)                         0392
*                 ELSE              /* OTHERWISE USE LOGREC  @G17EP5W*/
*                   ERRASID=SDWAASID;/* ASID FIELD IN SDWA   @G17EP5W*/
         B     @RC00391                                            0393
@RF00391 L     @12,CVTPTR                                          0393
         L     @12,CVTRTMCT(,@12)                                  0393
         MVC   ERRASID(2,@12),SDWAASID(R7)                         0393
*                 RFY                                              0394
*                   R7 UNRSTD;      /* FREE REGISTER         @G17EP5W*/
@RC00391 DS    0H                                                  0395
*               END;                /* END ERRODID FROM RTM1 @G17EP5W*/
*           END;                    /* END RTM1 CHECK        @G17EP5W*/
@RF00383 DS    0H                                                  0397
*         IF ERRCPUID=NOCPU THEN    /* IF NO ERRORID FROM RTM1     0397
*                                                            @G17EP5W*/
@RF00376 L     @12,CVTPTR                                          0397
         L     @12,CVTRTMCT(,@12)                                  0397
         CLC   ERRCPUID(2,@12),@CB03926                            0397
         BNE   @RF00397                                            0397
*           DO;                     /* THEN LOOK IN RTM2 AREAS     0398
*                                                            @G17EP5W*/
*             RFY                                                  0399
*               R7 RSTD;            /* RESTRICT TCBPTR       @G17EP5W*/
*             R7=PSATOLD;           /* GET CUURECNT TCB ADDR.      0400
*                                                            @G17EP5W*/
         L     R7,PSATOLD                                          0400
*             IF R7^=NULL THEN      /* IF VALID ADDRESS EXISTS     0401
*                                                            @G17EP5W*/
         SLR   @08,@08                                             0401
         CR    R7,@08                                              0401
         BE    @RF00401                                            0401
*               IF R7->TCBRTM2=ON&  /* AND RTM2 WAS ENTERED AND    0402
*                                                            @G17EP5W*/
*                   R7->TCBRTWA^=NULL THEN/* RTM2WA ADDRESS EXISTS 0402
*                                                            @G17EP5W*/
         TM    TCBRTM2(R7),B'00001000'                             0402
         BNO   @RF00402                                            0402
         L     @05,TCBRTWA(,R7)                                    0402
         CR    @05,@08                                             0402
         BE    @RF00402                                            0402
*                 DO;               /* THEN CHECK RTM2WA     @G17EP5W*/
*                   R7=R7->TCBRTWA; /* MOVE RTM2WA INTO REG WHICH  0404
*                                      CONTAINED TCB ADDR    @G33VPHD*/
         LR    R7,@05                                              0404
*                   IF R7->RTM2ERFL=ON THEN/* IF ERRORID EXISTS    0405
*                                                            @G17EP5W*/
         TM    RTM2ERFL(R7),B'00000001'                            0405
         BNO   @RF00405                                            0405
*                     ERRORID=R7->RTM2ERID;/* THEN MOVE IT TO SDUMP
*                                      AREA                  @G17EP5W*/
         MVC   ERRORID(10,@12),RTM2ERID(R7)                        0406
*                 END;              /* END MOVE RTM2WA ERRORID     0407
*                                                            @G17EP5W*/
@RF00405 DS    0H                                                  0408
*             RFY                                                  0408
*               R7 UNRSTD;          /* FREE UP REGISTER      @G17EP5W*/
@RF00402 DS    0H                                                  0408
@RF00401 DS    0H                                                  0409
*           END;                    /* END RTM2 ERRORID      @G17EP5W*/
*         RFY                                                      0410
*           R6 UNRSTD;              /* FREE UP RESTRICTED REG      0410
*                                                            @G17EP5W*/
@RF00397 DS    0H                                                  0411
*       END;                        /* END ERRORID PROCESSING      0411
*                                                            @G17EP5W*/
*                                                                  0412
*       /*************************************************************/
*       /*                                                           */
*       /* THIS SECTION CALLS THE BUILD AND SCHEDULE SRB SUBROUTINE  */
*       /* TO BUILD AND SCHEDULE SRBS IN THE REQUESTED ADDRESS SPACES*/
*       /* THE SCHEDULED SRB ROUTINES WILL RESUME THE DUMP TASK IN   */
*       /* THE REQUESTED ADDRESS SPACE.                      @G33VPHD*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0412
*       CALL SCHBDSRB;              /* BUILD SRBS TO RESUME DUMP TASK
*                                                            @G33VPHD*/
         BAL   @14,SCHBDSRB                                        0412
*     END;                          /* END OF CAN DUMP BE TAKEN    0413
*                                                            @G33VPHD*/
*                                                                  0413
*   /*****************************************************************/
*   /*                                                               */
*   /* CLEAN UP AND RETURN TO CALLER WITH A RETURN CODE      @G33VPHD*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0414
*RECNODMP:                                                         0414
*   ;                               /* RETRY ADDR FOR FRR    @G33VPHD*/
@RF00192 DS    0H                                                  0414
RECNODMP DS    0H                                                  0415
*   IF SCHFRROS^=ON THEN            /* IF NODUMP HAS BEEN SCHEDULED
*                                      IN ANY ADDRESS SPACE  @G33VPHD*/
         TM    SCHFRROS(R4),B'00010000'                            0415
         BO    @RF00415                                            0415
*     DO;                                                          0416
*       IF SCHFRRSD='1'B THEN       /* IF SVC DUMP IS LOCKED UNLOCK
*                                      IT                            */
         TM    SCHFRRSD(R4),B'10000000'                            0417
         BNO   @RF00417                                            0417
*         DO;                                                      0418
*           RTCTSDPL=NULL;          /* SVC DUMP UNLOCKED             */
         SLR   @12,@12                                             0419
         L     @08,CVTPTR                                          0419
         L     @05,CVTRTMCT(,@08)                                  0419
         ST    @12,RTCTSDPL(,@05)                                  0419
*           RTCTSDID=NULL;          /* SVC DUMP NOT ACTIVE           */
         STH   @12,RTCTSDID(,@05)                                  0420
*           CVTSDBF=CVTSDBF&HIGHBIT0;/* 4K SQA BUFFER UNLOCK         */
         L     @12,CVTSDBF(,@08)                                   0421
         N     @12,@CF04983                                        0421
         ST    @12,CVTSDBF(,@08)                                   0421
*         END;                                                     0422
*       R15=NODUMP;                 /* CANNOT SCHEDULE DUMP          */
@RF00417 LA    R15,8                                               0423
*     END;                          /* END OF NODUMP PROCESSING      */
*   ELSE                                                           0425
*     DO;                           /* DUMP SCHEDULED AT LEAST 1 ADDR
*                                      SPACE                 @G33VPHD*/
         B     @RC00415                                            0425
@RF00415 DS    0H                                                  0426
*       R15=SCHEDUMP;               /* RETURN CODE INDICATES DUMP HAS
*                                      BEEN SCHEDULED        @G33VPHD*/
         SLR   R15,R15                                             0426
*       IF SCHFRRNS=ON THEN         /* IF AT LEAST ONE DUMP NOT    0427
*                                                            @G33VPHD*/
         TM    SCHFRRNS(R4),B'00100000'                            0427
         BNO   @RF00427                                            0427
*         RTCTSDPR=PARTDUMP;        /* SCHEDULED SAVE PARTIAL DUMP 0428
*                                      RETURN CODE TO BE POSTED IN 0428
*                                      SUPPLIED ECB          @G33VPHD*/
         L     @12,CVTPTR                                          0428
         L     @12,CVTRTMCT(,@12)                                  0428
         MVI   RTCTSDPR(@12),X'04'                                 0428
*     END;                                                         0429
@RF00427 DS    0H                                                  0430
*   R13=SCHFRRSA;                   /* RESTORE ADDR OF CALLERS SAVE  */
@RC00415 L     R13,SCHFRRSA(,R4)                                   0430
*   GEN REFS(PSA,PSACSTK,FRRS,FRRSCURR,FRRSEMP);                   0431
*                                                         /* @G33VPHD*/
    SETFRR    D,WRKREGS=(R10,R11) DELETE RECOVERY EXIT
*   RETURN CODE(R15);               /* RETURN A RETURN CODE  @G33VPHD*/
@EL00001 DS    0H                                                  0432
@EF00001 DS    0H                                                  0432
@ER00001 L     @14,12(,@13)                                        0432
         LM    @00,@12,20(@13)                                     0432
         BR    @14                                                 0432
*                                                                  0433
*/* ******************************************************************/
*/*    THIS SEGMENT WILL BUILD AND SCHEDULE THE SRB(S) INTO THE      */
*/*    ADDRESS SPACE(S) TO BE DUMPED. IF SUMMARY DUMP INFORMATION    */
*/*    IS TO BE WRITTEN OUT A GLOBAL SRB WILL BE SCHEDULED IN THE    */
*/*    REQUESTED ADDRESS SPACE(S).  IF A DUMP IS REQUESTED OF MORE   */
*/*    THAN ONE ADDRESS SPACE AND GLOBAL AREAS SUCH AS               */
*/*    CSA AND SQA ARE REQUESTED, A GLOBAL SRB WILL BE               */
*/*    SCHEDULED IN THE MASTER ADDRESS SPACE. FOR DUMPS              */
*/*    OF ONLY ONE ADDRESS SPACE, A GLOBAL SRB WILL BE SCHEDULED IN  */
*/*    THE REQUESTED ADDRESS SPACE. FOR MULTIPLE ADDRESS SPACE       */
*/*    DUMPS WHERE NO GLOBAL STORAGE AREAS ARE REQUESTED A GLOBAL    */
*/*    SRB WILL BE SCHEDULED IN EACH OF THE REQUESTED ADDRESS        */
*/*    SPACES. THE SRB(S) WHICH ARE SCHEDULED ARE LOCATED IN         */
*/*    MODULE IEAVTSDX STORAGE. THE FOLLOWING FIELDS IN EACH SRB     */
*/*    ARE INITIALIZED TO ZERO:                                      */
*/*         SRBCPAFF  - NO CPU AFFINITY                              */
*/*         SRBRMTR   - NO RESOURCE MANAGER                          */
*/*         SRBSAVE   - NO SAVE AREA                                 */
*/*         SRBPKF    - NO RUNS IN KEY 0                             */
*/*         SRBPRIOR  - SYSTEM PRIORITY (SRBPSYS)                    */
*/*                                                                  */
*/*    IN  CASES WHERE THE GLOBAL SRB IS SCHEDULED INTO THE MASTER   */
*/*    ADDRESS SPACE, THE DUMP TASK IN THE MASTER ADDRESS SPACE      */
*/*    WILL SCHEDULE GLOBAL SRBS IN ALL OF THE REQUESTED LOCAL       */
*/*    ADDRESS SPACES                                                */
*/*                                                                  */
*/*    INPUT: SDUMP PARMETER LIST, ASID LIST, SVCDSRB                */
*/*                                                                  */
*/*    OUTPUT: INITIALIZED AND SCHEDULED SRB(S)                      */
*/*                                                                  */
*/*    INCLUDED BY: TOP SEGMENT                                      */
*/* ******************************************************************/
*                                                                  0433
*SCHBDSRB:                                                         0433
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0433
         B     @EL00001                                            0433
SCHBDSRB DS    0H                                                  0434
*   RFY                                                            0434
*     SRBSECT BASED(R1);            /* BASE SRB MAPPING ON R1      0434
*                                                            @G33VPHD*/
*   SCHFRRBS=ON;                    /* INDICATE TRYING TO SCHEDULE 0435
*                                      SRBS                  @G33VPHD*/
         OI    SCHFRRBS(R4),B'00100000'                            0435
*   RFY                                                            0436
*     R10 RSTD;                     /* SAVE WORK REGISTER    @G33VPHD*/
*                                                                  0436
*   /*****************************************************************/
*   /*                                                               */
*   /* SCHEDULE A GLOBAL SRB IN THE MASTER ADDRESS SPACE IF A GLOBAL */
*   /* STORAGE AREA IS REQUESTED                                     */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0437
*   IF(RTCTSDNA>1&                  /* OR NUMBER ASIDS > × AND     0437
*                                                            @G33VPHD*/
*       (RTCTASNA=OFF×              /* ONE OF THE GLOBAL AREAS     0437
*                                                            @G33VPHD*/
*       RTCTASPS=ON×                /* SPECIFIED IN THE      @G33VPHD*/
*       RTCTASNU=ON×                /* EFFECTIVE DUMP OPTIONS      0437
*                                                            @G33VPHD*/
*       RTCTASTR=ON×                /*                       @G33VPHD*/
*       RTCTASNQ=OFF×               /*                       @G33VPHD*/
*       RTCTASCS=ON)) THEN          /* SCHEDULE A GLOBAL SRB @ZM44936*/
         L     @12,CVTPTR                                          0437
         L     @12,CVTRTMCT(,@12)                                  0437
         CLI   RTCTSDNA(@12),1                                     0437
         BNH   @RF00437                                            0437
         TM    RTCTASNA(@12),B'00001000'                           0437
         BZ    @RT00437                                            0437
         TM    RTCTASPS(@12),B'01100001'                           0437
         BNZ   @RT00437                                            0437
         TM    RTCTASCS(@12),B'10000000'                           0437
         BNZ   @RT00437                                            0437
         TM    RTCTASNQ(@12),B'00000100'                           0437
         BO    @RF00437                                            0437
@RT00437 DS    0H                                                  0438
*     DO;                           /* IN MASTERS ADDR SPACE @G33VPHD*/
*       R1=ADDR(SVCDSRB(1));        /* GET ADDR FIRST SRB    @G33VPHD*/
         LA    R1,SVCDSRB                                          0439
*       SRBID=SRBACRON;             /* INITIALIZE SRB ID FIELD     0440
*                                                            @G33VPHD*/
         MVC   SRBID(4,R1),@CC04955                                0440
*       SRBPASID=MASTASID;          /* INITIALIZE SRB ASID NUMBER  0441
*                                                            @G33VPHD*/
         LA    @12,1                                               0441
         STH   @12,SRBPASID(,R1)                                   0441
*       SRBPTCB=ASVTENTY(MASTASID)->ASCBDUMP;/* PUT DUMP TASK TSB  0442
*                                      ADDRESS INTO SRB FIELD      0442
*                                                            @G33VPHD*/
         L     @11,CVTPTR                                          0442
         L     @08,ASVTPTR(,@11)                                   0442
         L     @08,ASVTENTY(,@08)                                  0442
         L     @05,ASCBDUMP(,@08)                                  0442
         ST    @05,SRBPTCB(,R1)                                    0442
*       SRBASCB=ASVTENTY(MASTASID); /* PUT ASCB ADDR IN SRB  @G33VPHD*/
         ST    @08,SRBASCB(,R1)                                    0443
*       SRBEP=ADDR(SCHSRB);         /* ENTRY POINT OF SRB ROUTINE    */
         LA    @08,SCHSRB                                          0444
         ST    @08,SRBEP(,R1)                                      0444
*       SRBPARM=R9;                 /* PARM TO SRB IS BASE REG       */
         ST    R9,SRBPARM(,R1)                                     0445
*       SRBRMTR=ADDR(CVTBRET);      /* NO RESOURCE MANAGER   @G33VPHD*/
         LA    @08,CVTBRET(,@11)                                   0446
         ST    @08,SRBRMTR(,R1)                                    0446
*       RTCTSDAS(16)=MASTASID;      /* DUMP TASK WILL RUN IN @G33VPHD*/
         L     @11,CVTRTMCT(,@11)                                  0447
         STCM  @12,3,RTCTSDAS+60(@11)                              0447
*       RTCTSDSS(16)='1'B;          /* MASTER AND SRB SCHED  @G33VPHD*/
         OI    RTCTSDSS+60(@11),B'10000000'                        0448
*       SCHFRROS='1'B;              /* INDICATE 1 DUMP SCHEDULE    0449
*                                                            @G33VPHD*/
         OI    SCHFRROS(R4),B'00010000'                            0449
*       GEN REFS(CVT,CVTMAP,CVTGSMQ,SRBSECT,SRBFLNK);              0450
*                                                        /*  @G33VPHD*/
        SCHEDULE SRB=(1),SCOPE=GLOBAL
*     END;                          /* END OF SRB IN MASTER ADDRESS
*                                      SPACE                 @G33VPHD*/
*                                                                  0451
*   /*****************************************************************/
*   /*                                                               */
*   /* SCHEDULE GLOBAL SRBS IN REQUESTED LOCAL ADDRESS SPACES        */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0452
*   ELSE                                                           0452
*     DO;                           /* SCHEDULE GLOBAL SRBS TO     0452
*                                      REQUESTED ADDRESS SPACES    0452
*                                                            @G33VPHD*/
         B     @RC00437                                            0452
@RF00437 DS    0H                                                  0453
*       DO RTCTINDX=ONE TO RTCTSDNA;/* DUMP ALL REQUESTED ADDRESS  0453
*                                      SPACES                @G33VPHD*/
         LA    @12,1                                               0453
         B     @DE00453                                            0453
@DL00453 DS    0H                                                  0454
*         R1=ADDR(SVCDSRB(RTCTINDX));/* GET SRB ADDRESS      @G33VPHD*/
         L     @12,CVTPTR                                          0454
         L     @11,CVTRTMCT(,@12)                                  0454
         SLR   @08,@08                                             0454
         IC    @08,RTCTINDX(,@11)                                  0454
         LR    R1,@08                                              0454
         MH    R1,@CH00115                                         0454
         LA    R1,SVCDSRB-44(R1)                                   0454
*         SRBID=SRBACRON;           /* INITIAIZE SRB ID FIELD      0455
*                                                            @G33VPHD*/
         MVC   SRBID(4,R1),@CC04955                                0455
*         R10=RTCTSDAS(RTCTINDX);   /* GET ASID REQUESTED    @G33VPHD*/
         SLA   @08,2                                               0456
         ST    @08,@TF00001                                        0456
         ALR   @08,@11                                             0456
         SLR   R10,R10                                             0456
         ICM   R10,3,RTCTSDAS-4(@08)                               0456
*         IF ASVTAVAL(R10)='1'B THEN/* IF ASID NOT ASSIGNED  @G33VPHD*/
         LR    @08,R10                                             0457
         SLA   @08,2                                               0457
         L     @12,ASVTPTR(,@12)                                   0457
         ALR   @12,@08                                             0457
         TM    ASVTAVAL-4(@12),B'10000000'                         0457
         BNO   @RF00457                                            0457
*           DO;                     /* MARK DUMP COMPLETE AND ONE  0458
*                                      ASID NOT DUMPED       @ZM44943*/
*             RTCTSDDO(RTCTINDX)='1'B;/* INDICATE DUMP COMPLETE THIS
*                                      ASID                  @ZM44943*/
         AL    @11,@TF00001                                        0459
         OI    RTCTSDDO-4(@11),B'00000001'                         0459
*             SCHFRRNS=ON;          /* ONE ADDR SPACE NOT DUMPED   0460
*                                                            @G33VPHD*/
         OI    SCHFRRNS(R4),B'00100000'                            0460
*           END;                    /* END MARK DUMP COMPLETE      0461
*                                                            @ZM44943*/
*         ELSE                                                     0462
*           DO;                     /* ASID ASSIGNED INSPECT IT    0462
*                                                            @G33VPHD*/
         B     @RC00457                                            0462
@RF00457 DS    0H                                                  0463
*             RFY                                                  0463
*               ASCB BASED(ASVTENTY(R10));/*                 @G33VPHD*/
*             IF ASCBDUMP=NULL×     /* IF DUMP TASK NOT ACTIVE     0464
*                                                            @G33VPHD*/
*                 ASCBFAIL=ON×      /* OR ADDR SPACE NON-DISPATCHABLE
*                                                            @G33VPHD*/
*                 ASCBABNT=ON×      /* OR ADDRESS SPACE TERMINATED 0464
*                                      ABNORMALLY            @G33VPHD*/
*                 ASCBTERM=ON THEN  /* OR ADDRESS SPACE ENDING     0464
*                                                            @G33VPHD*/
         LR    @12,R10                                             0464
         SLA   @12,2                                               0464
         L     @11,CVTPTR                                          0464
         L     @11,ASVTPTR(,@11)                                   0464
         L     @12,ASVTENTY-4(@12,@11)                             0464
         L     @11,ASCBDUMP(,@12)                                  0464
         LTR   @11,@11                                             0464
         BZ    @RT00464                                            0464
         TM    ASCBFAIL(@12),B'01000000'                           0464
         BO    @RT00464                                            0464
         TM    ASCBABNT(@12),B'00011000'                           0464
         BZ    @RF00464                                            0464
@RT00464 DS    0H                                                  0465
*               DO;                 /* MARK DUMP COMPLETE AND ONE  0465
*                                      ASID NOT DUMPED       @ZM44943*/
*                 RTCTSDDO(RTCTINDX)='1'B;/* INDICATE DUMP COMPLETE
*                                      THIS ASID             @ZM44943*/
         L     @12,CVTPTR                                          0466
         L     @12,CVTRTMCT(,@12)                                  0466
         SLR   @11,@11                                             0466
         IC    @11,RTCTINDX(,@12)                                  0466
         SLA   @11,2                                               0466
         ALR   @12,@11                                             0466
         OI    RTCTSDDO-4(@12),B'00000001'                         0466
*                 SCHFRRNS=ON;      /* ONE ADDR SPACE NOT DUMPED   0467
*                                                            @G33VPHD*/
         OI    SCHFRRNS(R4),B'00100000'                            0467
*               END;                /* END MARK DUMP COMPLETE      0468
*                                                            @ZM44943*/
*             ELSE                                                 0469
*               DO;                 /* DUMP THIS ADDR SPACE  @G33VPHD*/
         B     @RC00464                                            0469
@RF00464 DS    0H                                                  0470
*                 SRBPASID=R10;     /* INITIALIZE SRB ASID FIELD   0470
*                                                            @G33VPHD*/
         STH   R10,SRBPASID(,R1)                                   0470
*                 SRBPTCB=ASVTENTY(R10)->ASCBDUMP;/* PUT DUMP TASK 0471
*                                      TCB ADDRESS IN SRB    @G33VPHD*/
         LR    @12,R10                                             0471
         SLA   @12,2                                               0471
         L     @11,CVTPTR                                          0471
         L     @08,ASVTPTR(,@11)                                   0471
         L     @12,ASVTENTY-4(@12,@08)                             0471
         L     @08,ASCBDUMP(,@12)                                  0471
         ST    @08,SRBPTCB(,R1)                                    0471
*                 SRBASCB=ASVTENTY(R10);/* PUT ASCB ADDR IN SRB    0472
*                                                            @G33VPHD*/
         ST    @12,SRBASCB(,R1)                                    0472
*                 SRBEP=ADDR(SCHSRB);/* ENTRY POINT OF SRB CODE    0473
*                                                            @G33VPHD*/
         LA    @12,SCHSRB                                          0473
         ST    @12,SRBEP(,R1)                                      0473
*                 SRBPARM=R9;       /* PARM TO SRB IS BASE REG     0474
*                                                            @G33VPHD*/
         ST    R9,SRBPARM(,R1)                                     0474
*                 SRBRMTR=ADDR(CVTBRET);/* NO RESOURCE MANAGER     0475
*                                                            @G33VPHD*/
         LA    @12,CVTBRET(,@11)                                   0475
         ST    @12,SRBRMTR(,R1)                                    0475
*                 RTCTSDSS(RTCTINDX)=ON;/* SRB SCHED THIS ASID     0476
*                                                            @G33VPHD*/
         L     @12,CVTRTMCT(,@11)                                  0476
         SLR   @11,@11                                             0476
         IC    @11,RTCTINDX(,@12)                                  0476
         SLA   @11,2                                               0476
         ALR   @12,@11                                             0476
         OI    RTCTSDSS-4(@12),B'10000000'                         0476
*                 SCHFRROS=ON;      /* INDICATE 1 DUMP SCHEDULED   0477
*                                                            @G33VPHD*/
         OI    SCHFRROS(R4),B'00010000'                            0477
*                 GEN REFS(CVTMAP,CVTGSMQ,SRBSECT,SRBFLNK);        0478
*                                                        /*  @G33VPHD*/
              SCHEDULE SRB=(1),SCOPE=GLOBAL
*               END;                /* END OF DUMP THIS ADDRESS SPACE
*                                                            @G33VPHD*/
*           END;                    /* END OF ASID ASSIGNED  @G33VPHD*/
@RC00464 DS    0H                                                  0481
*         RFY                                                      0481
*           ASCB BASED(PSAAOLD);    /*                       @G33VPHD*/
@RC00457 DS    0H                                                  0482
*       END;                        /* END OF DUMP ALL REQUESTED   0482
*                                      ASIDS                 @G33VPHD*/
         L     @11,CVTPTR                                          0482
         L     @11,CVTRTMCT(,@11)                                  0482
         LA    @12,1                                               0482
         SLR   @08,@08                                             0482
         IC    @08,RTCTINDX(,@11)                                  0482
         ALR   @12,@08                                             0482
@DE00453 L     @11,CVTPTR                                          0482
         L     @11,CVTRTMCT(,@11)                                  0482
         STC   @12,RTCTINDX(,@11)                                  0482
         L     @11,CVTPTR                                          0482
         L     @11,CVTRTMCT(,@11)                                  0482
         SLR   @08,@08                                             0482
         IC    @08,RTCTSDNA(,@11)                                  0482
         CR    @12,@08                                             0482
         BNH   @DL00453                                            0482
*       RTCTSDMA=OFF;               /* INDICATE NO LONGER A MULTI  0483
*                                      ASID DUMP TO SRB      @ZM45193*/
         L     @12,CVTPTR                                          0483
         L     @12,CVTRTMCT(,@12)                                  0483
         NI    RTCTSDMA(@12),B'11101111'                           0483
*     END;                          /* END OF SCHEDULE SRB(S) IN   0484
*                                      OTHER ADDRESS SPACES  @G33VPHD*/
*   RFY                                                            0485
*     R10 UNRSTD;                   /*                       @G33VPHD*/
@RC00437 DS    0H                                                  0486
*   SCHFRRBS=OFF;                   /* INDICATE NOT TRYING TO      0486
*                                      SCHEDULE SRBS         @G33VPHD*/
         NI    SCHFRRBS(R4),B'11011111'                            0486
*   END SCHBDSRB;                                                  0487
@EL00002 DS    0H                                                  0487
@EF00002 DS    0H                                                  0487
@ER00002 BR    @14                                                 0487
*                                                                  0488
*/* ******************************************************************/
*/*    INTERNAL PROCEDURE NAME: SCHFRR                               */
*/*                                                                  */
*/*    THIS SEGMENT IS THE FRR FOR SCHEDULE DUMP MAINLINE AND        */
*/*    FOR THE SUMMARY DUMP DISABLED INTERRUPT EXIT (DIE). RETRY     */
*/*    WILL BE ATTEMPTED WHEN ALLOWED BY RTM EXCEPT   WHEN THE       */
*/*    CALLER'S PARAMETER LIST IS BEING REFERENCED OR                */
*/*    WHEN ABEND COMPLETION CODE X'233' IS ISSUED.   IN THOSE       */
*/*    CASES PERCOLATION WILL BE REQUESTED.  RETRY WILL BE TO        */
*/*    LABELS RECNODMP AND SCHNOSUM IN IEAVTSDX AND TO LABEL         */
*/*    SUMDIEND IN THE DIE EXIT.  IN PERCOLATION CASES INTERNAL      */
*/*    PROCEDURE SCHBDSRB WILL BE CALLED TO SCHEDULE THE SVC DUMP    */
*/*    IF THIS ROUTINE WAS NOT IN CONTROL WHEN THE ERROR OCCURRED.   */
*/*    THE REAL STORAGE BUFFER WILL BE FREED IF IT IS HELD AND THE   */
*/*    SUMMARY DUMP DIE WAS IN CONTROL, OR SUMMARY DUMP IS IN        */
*/*    CONTROL OR WHEN NO DUMP CAN BE SCHEDULED.                     */
*/*                                                                  */
*/*    INPUT: R1->SDWA, SCHFRR6W                                     */
*/*                                                                  */
*/*    OUTPUT: RECORDING, RETRY OR PERCOLATION, SVC DUMP CLEAN UP    */
*/* ******************************************************************/
*                                                                  0488
*SCHFRR:                                                           0488
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);/*                       @G33VPHD*/
SCHFRR   DS    0H                                                  0489
*   RFY                                                            0489
*     SDWA BASED(R1);               /* ADDR OF SDWA PASSED IN R1     */
*   R4=SDWAPARM;                    /* RESTORE ADDR TO FRR WK AREA   */
         L     R4,SDWAPARM(,R1)                                    0490
*   R9=SCHFRRBR;                    /* RESTORE BASE REGISTER         */
         L     R9,SCHFRRBR(,R4)                                    0491
*   R3=R9+4095;                     /* RESTORE SECOND BASE REGISTER
*                                                            @ZM45082*/
         LA    R3,4095                                             0492
         ALR   R3,R9                                               0492
*   SCHFRRND=OFF;                   /* INIT CLEAN UP FLAG    @G33VPHD*/
         NI    SCHFRRND(R4),B'11111011'                            0493
*   SDWAMODN=LMODNAME;              /* LOAD MODULE NAME              */
         MVC   SDWAMODN(8,R1),@CC04949                             0494
*   SDWACSCT=CSECTNAM;              /* CSECT NAME                    */
         MVC   SDWACSCT(8,R1),@CC04951                             0495
*   SDWAREXN=FRRNAME;               /* FRR NAME                      */
         MVC   SDWAREXN(8,R1),@CC04953                             0496
*   SDWARTYA=R14;                   /* SAVE RTM RETURN ADDRESS     0497
*                                                            @ZM43803*/
*                                                                  0497
         ST    R14,SDWARTYA(,R1)                                   0497
*   /*****************************************************************/
*   /*                                                               */
*   /* FREE THE SUMMARY DUMP REAL STORAGE BUFFER IF IT NEEDS TO BE   */
*   /* FREED FOR BOTH RETRY AND PERCOLATE CASES                      */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0498
*   IF SMWKRBUF=ON&                 /* IF A REAL STORAGE BUFFER IS 0498
*                                      HELD                  @G33VPHD*/
*       ((SCHFRRDI=ON)×             /* AND THE DIE WAS IN CONTROL OR
*                                                            @G33VPHD*/
*       (RTCTSDSC=OFF)×             /* SUMMARY DUMP IS NOT COMPLETE
*                                                            @G33VPHD*/
*       ((SCHFRRBS=ON)&             /* OR WERE TRYING TO SCHEDULE A
*                                      DUMP                  @G33VPHD*/
*       (SCHFRROS=OFF))) THEN       /* BUT HAVE NOT SCHEDULED A DUMP
*                                                            @G33VPHD*/
         L     @12,CVTPTR                                          0498
         L     @12,CVTRTMCT(,@12)                                  0498
         L     @08,RTCTSDSW(,@12)                                  0498
         TM    SMWKRBUF(@08),B'01000000'                           0498
         BNO   @RF00498                                            0498
         TM    SCHFRRDI(R4),B'00000010'                            0498
         BO    @RT00498                                            0498
         TM    RTCTSDSC(@12),B'00000001'                           0498
         BZ    @RT00498                                            0498
         TM    SCHFRRBS(R4),B'00100000'                            0498
         BNO   @RF00498                                            0498
         TM    SCHFRROS(R4),B'00010000'                            0498
         BNZ   @RF00498                                            0498
@RT00498 DS    0H                                                  0499
*     DO;                           /* FREE REAL STORAGE BUFFER AND
*                                      CLEAN UP SUMDUMP      @G33VPHD*/
*       GEN REFS(PSALITA);                                         0500
*                                    /*OBTAIN SALLOC LOCK    @G33VPHD*/
GETLOCKF SETLOCK   OBTAIN,TYPE=SALLOC,MODE=UNCOND,                     X
               RELATED=(SVCDUMP,IEAVTSDX(FRELOCKF))
*       SMWKRBUF=OFF;               /* INDICATE SUMDUMP NOLONGER HAS
*                                      BUFFER                @G33VPHD*/
         L     @12,CVTPTR                                          0501
         L     @12,CVTRTMCT(,@12)                                  0501
         L     @12,RTCTSDSW(,@12)                                  0501
         NI    SMWKRBUF(@12),B'10111111'                           0501
*       SMWKNFAV=ZEROH;             /* ZERO FRAMES AVAIL COUNT     0502
*                                                            @G33VPHD*/
         SLR   @08,@08                                             0502
         STH   @08,SMWKNFAV(,@12)                                  0502
*       SMWKFRHD=ZEROH;             /* ZERO FRAMES HELD COUNT      0503
*                                                            @G33VPHD*/
         LA    @05,196                                             0503
         ALR   @05,@12                                             0503
         STH   @08,SMWKFRHD(,@05)                                  0503
*       SMWKFRUS=ZEROH;             /* ZERO FRAMES USED COUNT      0504
*                                                            @G33VPHD*/
         STH   @08,SMWKFRUS(,@12)                                  0504
*       SMWKRSIX=ZEROH;             /* ZERO REAL FRAME INDEX @G33VPHD*/
         STH   @08,SMWKRSIX(,@12)                                  0505
*       R1=ADDR(SMWKRSM);           /* GET WORK AREA ADDRESS @G33VPHD*/
         LA    R1,SMWKRSM(,@12)                                    0506
*       R13=ADDR(SMWKSAV1);         /* GET SAVE AREA ADDRESS @G33VPHD*/
         LA    R13,SMWKSAV1(,@12)                                  0507
*       SMWKEVRY='1'B;              /* TELL RSM FREE ALL FRAMES    0508
*                                                            @G33VPHD*/
         OI    SMWKEVRY(@05),B'10000000'                           0508
*       SMWKFRPT=NULL;              /* RSM DOES NOT NEED ADDRESS   0509
*                                                            @G33VPHD*/
         ST    @08,SMWKFRPT(,@05)                                  0509
*       CALL IEAVPRSR;              /* CALL RSM AND FREE FRAMES    0510
*                                                            @G33VPHD*/
         L     @15,SMWKPRSR(,@05)                                  0510
         BALR  @14,@15                                             0510
*       GEN REFS(PSALITA);                                         0511
*                                     /*RELEASE SALLOC LOCK  @G33VPHD*/
FRELOCKF SETLOCK   RELEASE,TYPE=SALLOC,                                X
               RELATED=(SVCDUMP,IEAVTSDX(GETLOCKF))
*     END;                          /* END OF CLEAN UP SUM DUMP    0512
*                                                            @G33VPHD*/
*                                                                  0512
*   /*****************************************************************/
*   /*                                                               */
*   /* RECOVERY RETRY LOGIC                                  @G33VPHD*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0513
*   IF SDWACLUP=OFF&                /* IF RTM WILL ALLOW A RETRY   0513
*                                                            @G33VPHD*/
*       SDWACMPC^=BADPARMS&         /* AND USER NOT ABENDED WITH   0513
*                                      X'233'                @G33VPHD*/
*       SCHFRRRP=OFF THEN           /* AND USER PARAMETER LIST NOT 0513
*                                      BEING REFERENCED      @G33VPHD*/
@RF00498 TM    SDWACLUP(R1),B'10000000'                            0513
         BNZ   @RF00513                                            0513
         CLC   SDWACMPC(3,R1),@CB05027                             0513
         BE    @RF00513                                            0513
         TM    SCHFRRRP(R4),B'00001000'                            0513
         BNZ   @RF00513                                            0513
*     DO;                           /* SET UP TO RETRY       @G33VPHD*/
*       SDWARCDE=SDWARETY;          /* INDICATE RETRY TO RTM @G33VPHD*/
         MVI   SDWARCDE(R1),X'04'                                  0515
*       SDWASR04=R4;                /* RESTORE ADDRESS OF FRR WAREA  */
         ST    R4,SDWASR04(,R1)                                    0516
*       SDWASR09=R9;                /* RESTORE BASE REGISTER         */
         ST    R9,SDWASR09(,R1)                                    0517
*       SDWASR03=R3;                /* RESTORE BASE REGISTER2      0518
*                                                            @ZM45082*/
         ST    R3,SDWASR03(,R1)                                    0518
*       SDWASR13=SCHFRRSA;          /* ADDR OF CALLERS SAVE AREA     */
         L     @12,SCHFRRSA(,R4)                                   0519
         ST    @12,SDWASR13(,R1)                                   0519
*       SDWASR14=SCHFRRRA;          /* RESTORE CALLERS RETURN ADDRESS
*                                                            @G33VPHD*/
         L     @12,SCHFRRRA(,R4)                                   0520
         ST    @12,SDWASR14(,R1)                                   0520
*       SDWAUPRG='1'B;              /* PRIME REGISTERS ON RETRY    0521
*                                                            @G33VPHD*/
*       SDWARCRD='1'B;              /* REQUEST RECORDING BY RTM    0522
*                                                            @G33VPHD*/
         OI    SDWAUPRG(R1),B'10001000'                            0522
*       IF SCHFRRBS=OFF&            /* IF NOT SCHEDULING SRBS AND  0523
*                                                            @G33VPHD*/
*           SCHFRROS=OFF&           /* HAVE NOT SCHEDULED ANY SRBS 0523
*                                                            @G33VPHD*/
*           RTCTSDSH=ON&            /* AND ITS OK TO SCHEDULE SRBS 0523
*                                                            @G33VPHD*/
*           SCHFRRRT=ADDR(RECNODMP) THEN/* AND RETRY IS TO END     0523
*                                                            @G33VPHD*/
         TM    SCHFRRBS(R4),B'00100000'                            0523
         BNZ   @RF00523                                            0523
         TM    SCHFRROS(R4),B'00010000'                            0523
         BNZ   @RF00523                                            0523
         L     @12,CVTPTR                                          0523
         L     @12,CVTRTMCT(,@12)                                  0523
         TM    RTCTSDSH(@12),B'00100000'                           0523
         BNO   @RF00523                                            0523
         LA    @12,RECNODMP                                        0523
         C     @12,SCHFRRRT(,R4)                                   0523
         BNE   @RF00523                                            0523
*         CALL SCHBDSRB;            /* TRY TO SCHEDULE THE DUMP    0524
*                                                            @G33VPHD*/
         BAL   @14,SCHBDSRB                                        0524
*       R14=SDWARTYA;               /* RESTORE RTMS RETURN SAVED ADDR
*                                                            @ZM43803*/
@RF00523 L     R14,SDWARTYA(,R1)                                   0525
*       SDWARTYA=SCHFRRRT;          /* RESTORE RETRY ADDRESS @G33VPHD*/
         L     @12,SCHFRRRT(,R4)                                   0526
         ST    @12,SDWARTYA(,R1)                                   0526
*     END;                          /* END OF SET UP TO RETRY      0527
*                                                            @G33VPHD*/
*                                                                  0528
*   /*****************************************************************/
*   /*                                                               */
*   /* SET UP TO PERCOLATE TO NEXT LEVEL OF RECOVERY         @G33VPHD*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0528
*   ELSE                                                           0528
*     DO;                           /* NOT ALLOWED OR DONT WANT TO 0528
*                                      RETRY SO PERCOLATE    @G33VPHD*/
         B     @RC00513                                            0528
@RF00513 DS    0H                                                  0529
*       SCHFRRRT=SDWARTYA;          /* SAVE RTMS SAVED RETURN ADDRESS
*                                                            @ZM43830*/
         L     @12,SDWARTYA(,R1)                                   0529
         ST    @12,SCHFRRRT(,R4)                                   0529
*       SDWARTYA=NULL;              /* INDICATE NO RETRY TO RTM    0530
*                                                            @G33VPHD*/
         SLR   @12,@12                                             0530
         ST    @12,SDWARTYA(,R1)                                   0530
*       SDWARCDE=SDWACWT;           /* INDICATE PERCOLATE TO RTM   0531
*                                                            @G33VPHD*/
         MVI   SDWARCDE(R1),X'00'                                  0531
*       IF RTCTSDSH=ON&             /* IF ITS OK TO SCHEDULE SRBS  0532
*                                                            @G33VPHD*/
*           SCHFRRBS=OFF&           /* AND NOT SCHEDULING SRBS     0532
*                                                            @G33VPHD*/
*           SCHFRROS=OFF THEN       /* AND NO SRBS HAVE BEEN       0532
*                                      SCHEDULED             @G33VPHD*/
         L     @12,CVTPTR                                          0532
         L     @12,CVTRTMCT(,@12)                                  0532
         TM    RTCTSDSH(@12),B'00100000'                           0532
         BNO   @RF00532                                            0532
         TM    SCHFRRBS(R4),B'00100000'                            0532
         BNZ   @RF00532                                            0532
         TM    SCHFRROS(R4),B'00010000'                            0532
         BNZ   @RF00532                                            0532
*         CALL SCHBDSRB;            /* TRY TO SCHEDULE THE DUMP SRBS
*                                                            @G33VPHD*/
         BAL   @14,SCHBDSRB                                        0533
*       IF SCHFRROS=OFF THEN        /* IF NO DUMP HAS BEEN SCHEDULED
*                                                            @G33VPHD*/
@RF00532 TM    SCHFRROS(R4),B'00010000'                            0534
         BNZ   @RF00534                                            0534
*         DO;                       /* CHECK IF SVC DUMP SHOULD BE 0535
*                                      UNLOCKED              @G33VPHD*/
*           IF SCHFRRSD=ON THEN     /* IF SVC DUMP WAS LOCKED      0536
*                                                            @G33VPHD*/
         TM    SCHFRRSD(R4),B'10000000'                            0536
         BNO   @RF00536                                            0536
*             DO;                   /* UNLOCK SVC DUMP LOCK WORDS  0537
*                                                            @G33VPHD*/
*               RTCTSDPL=NULL;      /* SVC DUMP UNLOCKED     @G33VPHD*/
         SLR   @12,@12                                             0538
         L     @08,CVTPTR                                          0538
         L     @05,CVTRTMCT(,@08)                                  0538
         ST    @12,RTCTSDPL(,@05)                                  0538
*               RTCTSDID=NULL;      /* SVC DUMP NOT ACTIVE   @G33VPHD*/
         STH   @12,RTCTSDID(,@05)                                  0539
*               CVTSDBF=CVTSDBF&HIGHBIT0;/* 4K SQA BUFFER UNLOCKED 0540
*                                                            @G33VPHD*/
         L     @12,CVTSDBF(,@08)                                   0540
         N     @12,@CF04983                                        0540
         ST    @12,CVTSDBF(,@08)                                   0540
*             END;                  /* END SVC DUMP WAS LOCKED     0541
*                                                            @G33VPHD*/
*           R15=NODUMP;             /* NO DUMP SCHEDULED RETURN CODE
*                                                            @G33VPHD*/
@RF00536 LA    R15,8                                               0542
*         END;                      /* END OF NODUMP SCHEDULED     0543
*                                                            @G33VPHD*/
*       ELSE                                                       0544
*         DO;                       /* DUMP SCHEDULED AT LEAST 1 ADDR
*                                      SPACE                 @G33VPHD*/
         B     @RC00534                                            0544
@RF00534 DS    0H                                                  0545
*           R15=SCHEDUMP;           /* RETURN CODE INDICATES DUMP HAS
*                                      BEEN SCHEDULED        @G33VPHD*/
         SLR   R15,R15                                             0545
*           IF SCHFRRNS=ON THEN     /* IF AT LEAST ONE DUMP NOT    0546
*                                                            @G33VPHD*/
         TM    SCHFRRNS(R4),B'00100000'                            0546
         BNO   @RF00546                                            0546
*             RTCTSDPR=PARTDUMP;    /* SCHEDULED SAVE PARTIAL DUMP 0547
*                                      RETURN CODE TO BE POSTED IN 0547
*                                      SUPPLIED ECB          @G33VPHD*/
         L     @12,CVTPTR                                          0547
         L     @12,CVTRTMCT(,@12)                                  0547
         MVI   RTCTSDPR(@12),X'04'                                 0547
*         END;                      /* END DUMP SCHEDULED AT LEAST 1
*                                      ADDRESS SPACE         @G33VPHD*/
@RF00546 DS    0H                                                  0549
*       R14=SCHFRRRT;               /* RETORE RTMS SAVE RETURN     0549
*                                      ADDRESS               @ZM43803*/
@RC00534 L     R14,SCHFRRRT(,R4)                                   0549
*     END;                          /* END OF CANT RETRY SO PERCOLATE
*                                                            @G33VPHD*/
*   END SCHFRR;                                                    0551
@EL00003 DS    0H                                                  0551
@EF00003 DS    0H                                                  0551
@ER00003 BR    @14                                                 0551
*                                                                  0552
*/* ******************************************************************/
*/*    INTERNAL PROCEDURE NAME: SCHSRB                               */
*/*                                                                  */
*/*    THIS SEGMENT IS THE SRB SCHEDULED BY SCHEDULE DUMP MAINLINE.  */
*/*    IT WILL ESTABLISH A RECOVERY EXIT, AND OBTAIN THE LOCAL       */
*/*    LOCK.  IF THIS SRB IS EXECUTING IN THE MASTER ADDRESS SPACE   */
*/*    AND A SUMMARY DUMP IS REQUESTED OR SQA, CSA AND QUIESCE=YES   */
*/*    ARE REQUESTED, THE SYSTEM IS SET NONDISPATCHABLE.  IN ALL     */
*/*    CASES ALL OF THE TASKS IN THE ADDRESS SPACE EXCEPT COMM TASK  */
*/*    RCT, AND DSS ARE SET NONDISPATCHABLE.  IF A SUMMARY DUMP IS   */
*/*    TO BE WRITTEN A TIMER DIE EXIT INTERVAL IS ESTABLISHED USING  */
*/*    SETDIE. FINALLY THE LOCAL LOCK IS RELEASED AND THE DUMP       */
*/*    TASK IN THIS ADDRESS SPACE IS RESUMED.  CONTROL DOES NOT      */
*/*    RETURN FROM RESUME.  CONTROL IS PASSED DIRECTLY TO THE DUMP   */
*/*    TASK.                                                         */
*/*                                                                  */
*/*    INPUT: REG0 - ADDRESS OF SRB                                  */
*/*           REG1 - CONTENTS OF SRBPARM FIELD(BASEREG)              */
*/*           REG14- RETURN ADDRESS                                  */
*/*           REG15- ENTRY POINT ADDRESS                             */
*/*    SVC DUMP IS LOCKED, SDUMP PARM LIST IS IN SCHPARML, ADDRESS   */
*/*    OF SDUMP PARM LIST IS IN RTCTSDPL                             */
*/*                                                                  */
*/*    OUTPUT: DUMP TASK IS RESUMED                                  */
*/* ******************************************************************/
*                                                                  0552
*SCHSRB:                                                           0552
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0552
SCHSRB   DS    0H                                                  0553
*   R9=R1;                          /* RESTORE BASE REGISTER         */
         LR    R9,R1                                               0553
*   R3=R9+4095;                     /* RESTORE SECOND BASE REGISTER
*                                                            @ZM45082*/
         LA    R3,4095                                             0554
         ALR   R3,R9                                               0554
*   RFY                                                            0555
*    (R10,                                                         0555
*     R11) RSTD;                                                   0555
*   IF CVTSDRM^=NULL THEN           /* IEAVTSDR FOUND DURING NIP     */
         L     @12,CVTPTR                                          0556
         L     @12,CVTSDRM(,@12)                                   0556
         LTR   @12,@12                                             0556
         BZ    @RF00556                                            0556
*     R15=CVTSDRM-LENPREFX;         /* FRR FOR SRB IS IN IEAVTSDR    */
         SL    @12,@CF01311                                        0557
         LR    R15,@12                                             0557
*   ELSE                                                           0558
*     R15=ADDR(CVTBRET);            /* FRR IS A BR 14 INSTRUCTION    */
         B     @RC00556                                            0558
@RF00556 L     R15,CVTPTR                                          0558
         LA    R15,CVTBRET(,R15)                                   0558
*                                                                  0559
*   /*****************************************************************/
*   /*                                                               */
*   /* GET THE LOCAL LOCK AND ESTABLISH A RECOVERY EXIT      @G33VPHD*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0559
*   GEN REFS(PSALITA,PSA,PSACSTK,FRRS,FRRSCURR,FRRSLAST,PSALSFCC,  0559
*       FRRSFRRA,FRRSENTR);                                        0559
@RC00556 DS    0H                                                  0559
*                                /*SET UP IEAVTSDR           @G33VPHD*/
GETLOCK  SETLOCK   OBTAIN,TYPE=LOCAL,MODE=UNCOND,                      X
               RELATED=(SCHSDUMP,IEAVTSDX(FREELOCK))
         SETFRR    A,FRRAD=(R15),WRKREGS=(R10,R11),                    X
               PARMAD=(R4)
*   RFY                                                            0560
*    (R10,                                                         0560
*     R11) UNRSTD;                  /*                       @G33VPHD*/
*   SCHFRRBR=R9;                    /* SAVE BASE REGISTER FOR      0561
*                                      RECOVERY              @G33VPHD*/
*                                                                  0561
         ST    R9,SCHFRRBR(,R4)                                    0561
*   /*****************************************************************/
*   /*                                                               */
*   /* CHECK ASCBDUMP FOR ZERO INDICATING THIS ADDRESS SPACE IS IN   */
*   /* THE PROCESS OF TERMINATING. IF ASCBDUMP IS ZERO CLEAN UP AND  */
*   /* EXIT.... DON'T DO ANY DUMP PROCESSING.                @ZA27930*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0562
*   IF ASCBDUMP^=NULL THEN          /* IF DUMP TASK STILL OKAY     0562
*                                                            @ZA27930*/
         L     @12,PSAAOLD                                         0562
         L     @08,ASCBDUMP(,@12)                                  0562
         LTR   @08,@08                                             0562
         BZ    @RF00562                                            0562
*     DO;                           /* DO SDUMP SRB PROCESSING.    0563
*                                                            @ZA27930*/
*                                                                  0563
*       /*************************************************************/
*       /*                                                           */
*       /* THIS LOOP FINDS THE CURRENT ENTRY IN THE RTCT ASID ARRAY  */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0564
*       RFY                                                        0564
*         R12 RSTD;                 /*                       @G33VPHD*/
*       IF RTCTSDMA='1'B&           /* IF THIS IS THE GLOBAL AREA SRB
*                                                            @ZM44937*/
*           ASCBASID=MASTASID THEN  /* USE TABLE ENTRY 16 ONLY     0565
*                                                            @ZM44937*/
         L     @08,CVTPTR                                          0565
         L     @08,CVTRTMCT(,@08)                                  0565
         TM    RTCTSDMA(@08),B'00010000'                           0565
         BNO   @RF00565                                            0565
         L     @05,PSAAOLD                                         0565
         CLC   ASCBASID(2,@05),@CH00068                            0565
         BNE   @RF00565                                            0565
*         DO;                       /* SET UP INDEX AND INDICATE SRB
*                                      IN CONTROL            @ZM44937*/
*           R12=MASTINDX;           /* SET UP INDEX FOR GLOBAL AREA
*                                      SRB                   @ZM44937*/
         LA    R12,16                                              0567
*           RTCTSDNC(R12)=ON;       /* NON-DISP SRB GOT CONTROL    0568
*                                                            @ZM44937*/
         LR    @05,R12                                             0568
         SLA   @05,2                                               0568
         ALR   @08,@05                                             0568
         OI    RTCTSDNC-4(@08),B'01000000'                         0568
*         END;                      /* END SET UP INDEX      @ZM44937*/
*       ELSE                                                       0570
*         DO;                       /* NOT GLOBAL AREA SRB SO DO   0570
*                                      CURRENT ENTRY LOOP    @ZM44937*/
         B     @RC00565                                            0570
@RF00565 DS    0H                                                  0571
*           R12=ONE;                /* SET INDEX FOR SEARCH  @G33VPHD*/
         LA    R12,1                                               0571
*           DO WHILE(SCHFRRND=OFF&R12<=DIM(RTCTSDAS));/* SEARCH ALL
*                                      SCHEDULED ADDRESS SPACES    0572
*                                                            @G33VPHD*/
         B     @DE00572                                            0572
@DL00572 DS    0H                                                  0573
*             IF RTCTSDAS(R12)=ASCBASID/* FIND TABLE ENTRY FOR     0573
*                                      CURRENT ADDRESS SPACE @G33VPHD*/
*               THEN                                               0573
         LR    @08,R12                                             0573
         SLA   @08,2                                               0573
         L     @05,CVTPTR                                          0573
         L     @05,CVTRTMCT(,@05)                                  0573
         ST    @08,@TF00001                                        0573
         ALR   @08,@05                                             0573
         L     @02,PSAAOLD                                         0573
         CLC   RTCTSDAS-4(2,@08),ASCBASID(@02)                     0573
         BNE   @RF00573                                            0573
*               DO;                 /* THIS IS CURRENT ENTRY @G33VPHD*/
*                 RTCTSDNC(R12)=ON; /* NON-DISP SRB GOT CONTROL    0575
*                                                            @G33VPHD*/
         AL    @05,@TF00001                                        0575
         OI    RTCTSDNC-4(@05),B'01000000'                         0575
*                 SCHFRRND=ON;      /* END LOOP ENTRY FOUND  @G33VPHD*/
         OI    SCHFRRND(R4),B'00000100'                            0576
*               END;                /* END OF FOUND TABLE ENTRY    0577
*                                                            @G33VPHD*/
*             ELSE                                                 0578
*               R12=R12+ONE;        /* MOVE TO NEXT ENTRY    @G33VPHD*/
         B     @RC00573                                            0578
@RF00573 AL    R12,@CF00068                                        0578
*           END;                    /* END OF SEARCH LOOP    @G33VPHD*/
@RC00573 DS    0H                                                  0579
@DE00572 TM    SCHFRRND(R4),B'00000100'                            0579
         BNZ   @DC00572                                            0579
         C     R12,@CF00127                                        0579
         BNH   @DL00572                                            0579
@DC00572 DS    0H                                                  0580
*         END;                      /* END OF NOT GLOBAL AREA SRB  0580
*                                      CURRENT ENTRY LOOP    @ZM44937*/
*                                                                  0580
*       /*************************************************************/
*       /*                                                           */
*       /* THIS SECTION PERFORMS THE LOGIC TO SET THE SYSTEM NON     */
*       /* DISPATCHABLE IF SUMDUMP OR CSA OR SQA IS SPECIFIED AND    */
*       /* QUIESCE=NO HAS NOT BEEN SPECIFED ON THE SDUMP MACRO OR ON */
*       /* THE CHNGDUMP OPERATOR COMMAND IF THIS CODE IS NOT RUNNING */
*       /* IN THE MASTER ADDRESS                             @ZM44936*/
*       /* SPACE THE SYSEVENT FUNCTION IS USED TO TELL THE SRM       */
*       /*                                                   @ZM44936*/
*       /* NOT TO SWAP OUT THIS ADDRESS SPACE                @ZM44936*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0581
*       IF(ASCBASID=MASTASID×       /* IF IN MASTER ADDRESS SPACE  0581
*                                                            @G33VPHD*/
*           RTCTSDNA=1)&            /* OR IN ONLY SCHEDULED ADDRESS
*                                      SPACE                 @G33VPHD*/
*           (RTCTSDRW='1'B×         /* AND SUMMARY DUMP TO WRITE OR
*                                                            @G33VPHD*/
*           ((RTCTASNQ='0'B×RTCTASCS='1'B)&/* CSA OR SQA AND @G33VPHD*/
*           ((RTCTSDPG='1'B×SDUQUIET='1'B)&/* QUIESCE REQUESTED    0581
*                                                            @G33VPHD*/
*           RTCTSDPH='0'B))) THEN   /* AND QUIESCE=NO NOT ON CHNGDUMP
*                                                            @G33VPHD*/
@RC00565 L     @08,PSAAOLD                                         0581
         CLC   ASCBASID(2,@08),@CH00068                            0581
         BE    @GL00053                                            0581
         L     @08,CVTPTR                                          0581
         L     @08,CVTRTMCT(,@08)                                  0581
         CLI   RTCTSDNA(@08),1                                     0581
         BNE   @RF00581                                            0581
@GL00053 L     @08,CVTPTR                                          0581
         L     @08,CVTRTMCT(,@08)                                  0581
         TM    RTCTSDRW(@08),B'00000010'                           0581
         BO    @RT00581                                            0581
         TM    RTCTASCS(@08),B'10000000'                           0581
         BNZ   @GL00056                                            0581
         TM    RTCTASNQ(@08),B'00000100'                           0581
         BO    @RF00581                                            0581
@GL00056 L     @08,CVTPTR                                          0581
         L     @08,CVTRTMCT(,@08)                                  0581
         TM    RTCTSDPG+236(@08),B'10000000'                       0581
         BO    @GL00057                                            0581
         L     @08,RTCTSDPL(,@08)                                  0581
         TM    SDUQUIET(@08),B'00000010'                           0581
         BNO   @RF00581                                            0581
@GL00057 L     @08,CVTPTR                                          0581
         L     @08,CVTRTMCT(,@08)                                  0581
         TM    RTCTSDPH+236(@08),B'01000000'                       0581
         BNZ   @RF00581                                            0581
@RT00581 DS    0H                                                  0582
*         DO;                       /* SET THE SYSTEM NON          0582
*                                      DISPATCHABLE          @G33VPHD*/
*           RFY                                                    0583
*             R0 RSTD;              /*                       @ZM44936*/
*           R13=WSALSDMP;           /* GET LOCAL SAVE AREA ADDR    0584
*                                                            @ZM44936*/
         L     @08,PSAAOLD                                         0584
         L     @08,ASXBPTR(,@08)                                   0584
         L     @08,ASXBSPSA(,@08)                                  0584
         L     R13,WSALSDMP(,@08)                                  0584
*           GEN(SYSEVENT DONTSWAP,ENTRY=BRANCH)                    0585
*           REFS(CVTOPTE);          /* TELL SRM NOT TO SWAP  @ZM44936*/
         SYSEVENT DONTSWAP,ENTRY=BRANCH
*           RTCTSDND='1'B;          /* INDICATE SYSTEM NON-DISP    0586
*                                                            @G33VPHD*/
         L     @08,CVTPTR                                          0586
         L     @08,CVTRTMCT(,@08)                                  0586
         OI    RTCTSDND(@08),B'01000000'                           0586
*           R0=SYSDISP;             /* SET SYSTEM NON-DISP CODE    0587
*                                                            @G33VPHD*/
         LA    R0,9                                                0587
*           R1=NULL;                /* NO TCB ADDR, SET FUNCTION   0588
*                                                            @G33VPHD*/
         SLR   R1,R1                                               0588
*           R13=SDISPFLG;           /* SVC DUMP NON-DISP FLAG      0589
*                                                            @G33VPHD*/
         L     R13,@CF04979                                        0589
*           IF ASCBDUMP->TCBFX='0'B THEN/* DISALLOW ASYNCRONOUS    0590
*                                                            @ZA29469*/
         L     @05,PSAAOLD                                         0590
         L     @05,ASCBDUMP(,@05)                                  0590
         TM    TCBFX(@05),B'00000001'                              0590
         BNZ   @RF00590                                            0590
*             DO;                   /* INTERRUPTS WHILE THE  @ZA27434*/
*               ASCBDUMP->TCBFX='1'B;/* SYSTEM IS NON-       @ZA29469*/
         OI    TCBFX(@05),B'00000001'                              0592
*               RTCTSDFX='1'B;      /* DISPATCHABLE.         @ZA27434*/
         OI    RTCTSDFX(@08),B'00000001'                           0593
*             END;                  /*                       @ZA27434*/
*           ELSE                                                   0595
*             ;                     /*                       @ZA27434*/
@RF00590 DS    0H                                                  0596
*           CALL STATUS;            /* SET SYSTEM NON-DISP   @G33VPHD*/
         L     @08,CVTPTR                                          0596
         L     @08,SCVTSPTR(,@08)                                  0596
         L     @15,SCVTSTAT(,@08)                                  0596
         BALR  @14,@15                                             0596
*           RFY                                                    0597
*             R0 UNRSTD;            /*                       @ZM44936*/
*         END;                      /* END OF MASTER A.S. GLOBAL   0598
*                                                            @G33VPHD*/
*                                                                  0598
*       /*************************************************************/
*       /*                                                           */
*       /* SET THE TASKS IN THE ADDRESS SPACE NON DISPATCHABLE. NOTE:*/
*       /* COMM TASK, DSS AND RCT ARE NOT SET NON DISPATCHABLE DUMP  */
*       /* TASK OF CURRENT ADDRESS SPACE IS ALSO NOT SET NON         */
*       /* DISPATCHABLE                                              */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0599
*       RFY                                                        0599
*         R0 RSTD;                  /*                       @ZM44936*/
@RF00581 DS    0H                                                  0600
*       RTCTSDAN(R12)=ON;           /* TASKS THIS A.S. NON-DISP    0600
*                                                            @G33VPHD*/
         LR    @08,R12                                             0600
         SLA   @08,2                                               0600
         L     @05,CVTPTR                                          0600
         L     @05,CVTRTMCT(,@05)                                  0600
         ALR   @05,@08                                             0600
         OI    RTCTSDAN-4(@05),B'00100000'                         0600
*       R0=TCBSDISP;                /* SET TCBS NON-DISP CODE      0601
*                                                            @G33VPHD*/
         LA    R0,10                                               0601
*       R1=ASXBFTCB;                /* GET ADDRESS TOP TCB IN ADDRESS
*                                      SPACE                 @G33VPHD*/
         L     @08,PSAAOLD                                         0602
         L     @08,ASXBPTR(,@08)                                   0602
         L     R1,ASXBFTCB(,@08)                                   0602
*       R1=R1->TCBLTC&HIGHBYT0;     /* SET LAST ATTACHED DAUGHTER  0603
*                                                            @G33VPHD*/
         L     @08,TCBLTC(,R1)                                     0603
         N     @08,@CF04987                                        0603
         LR    R1,@08                                              0603
*       R13=SDISPFLG;               /* SET SVC DUMP DISPATCHABILITY
*                                      FLAG                  @G33VPHD*/
         L     R13,@CF04979                                        0604
*       DO WHILE(R1^=NULL);                                        0605
         B     @DE00605                                            0605
@DL00605 DS    0H                                                  0606
*         IF R1^=ASCBDUMP&R1->TCBTID^='FD'X&/*               @ZA12446*/
*             R1->TCBTID^='F9'X THEN/* IF THIS TCB IS NOT THE DUMP 0606
*                                      DUMP TASK AND NOT COMM TASK 0606
*                                      AND NOT DSS SET THE TASK    0606
*                                      NONDISPATCHABLE       @ZA12446*/
         L     @08,PSAAOLD                                         0606
         C     R1,ASCBDUMP(,@08)                                   0606
         BE    @RF00606                                            0606
         CLI   TCBTID(R1),X'FD'                                    0606
         BE    @RF00606                                            0606
         CLI   TCBTID(R1),X'F9'                                    0606
         BE    @RF00606                                            0606
*           CALL STATUS;            /* SET THE TASKS OF THE ADDRESS
*                                      SPACE NONDISPATCHABLE @ZA12446*/
         L     @08,CVTPTR                                          0607
         L     @08,SCVTSPTR(,@08)                                  0607
         L     @15,SCVTSTAT(,@08)                                  0607
         BALR  @14,@15                                             0607
*         ELSE                                                     0608
*           ;                       /* SKIP COMM TASK DUMP TASK AND
*                                      DSS                   @ZA12446*/
@RF00606 DS    0H                                                  0609
*         R1=R1->TCBNTC&HIGHBYT0;   /* GET NEXT ATTACHED DAUGHTER  0609
*                                                            @ZA12446*/
         L     @08,TCBNTC(,R1)                                     0609
         N     @08,@CF04987                                        0609
         LR    R1,@08                                              0609
*       END;                        /* END OF SET ALL DAUGTHERS NON
*                                      DISPATCHABLE          @G33VPHD*/
*                                                                  0610
@DE00605 LTR   R1,R1                                               0610
         BNZ   @DL00605                                            0610
*       /*************************************************************/
*       /*                                                           */
*       /* PASS SRB ROUTINE ADDRESS AND SRB AREA ADDRESS TO MODULE   */
*       /* IEAVTSDT SO IT CAN SCHEDULE SRBS USING AREAS IN THIS      */
*       /* MODULE, SET DUMP TASK DISPATCHABLE                @G33VPHD*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0611
*       IF ASCBASID=MASTASID        /* RUNNING IN MASTER ADDRESS   0611
*                                      SPACE                 @G33VPHD*/
*         THEN                                                     0611
         L     @08,PSAAOLD                                         0611
         CLC   ASCBASID(2,@08),@CH00068                            0611
         BNE   @RF00611                                            0611
*         DO;                       /* MAKE SURE DUMP TASK GETS ADDR
*                                      OF SRB AND BASE REGISTER    0612
*                                                            @G33VPHD*/
*           R0=TCBDISP;             /* OBTAIN DISPATCHABILITY FLAG 0613
*                                                            @G33VPHD*/
         LA    R0,11                                               0613
*           R1=ASCBDUMP×HIGHBIT1;   /* GET MASTER DUMP TASK TCB    0614
*                                      ADDRESS               @G33VPHD*/
         L     R1,ASCBDUMP(,@08)                                   0614
         O     R1,@CF04985                                         0614
*           R13=SDISPFLG;           /* SET SVC DUMP DISPATCHABILITY
*                                      FLAG                  @G33VPHD*/
         L     R13,@CF04979                                        0615
*           CALL STATUS;            /* SET DUMP TASK IN MASTER     0616
*                                      DISPATCHABLE          @G33VPHD*/
         L     @08,CVTPTR                                          0616
         L     @08,SCVTSPTR(,@08)                                  0616
         L     @15,SCVTSTAT(,@08)                                  0616
         BALR  @14,@15                                             0616
*           RFY                                                    0617
*             R0 UNRSTD;            /*                       @ZM44936*/
*           RFY                                                    0618
*             SDWORK BASED(RTCTSDWK);/* ADDRESS SDUMP WORK AREA    0618
*                                                            @G33VPHD*/
*           SVCDSRBA=ADDR(SVCDSRB); /* PUT ADDR SRBS IN WORK AREA  0619
*                                                            @G33VPHD*/
         L     @08,CVTPTR                                          0619
         L     @08,CVTRTMCT(,@08)                                  0619
         L     @08,RTCTSDWK(,@08)                                  0619
         LA    @05,SVCDSRB                                         0619
         ST    @05,SVCDSRBA(,@08)                                  0619
*           SDSRBADR=ADDR(SCHSRB);  /* GET SRB ROUTINE ADDRESS     0620
*                                                            @G33VPHD*/
         LA    @05,SCHSRB                                          0620
         ST    @05,SDSRBADR(,@08)                                  0620
*           SDSRBBAS=R9;            /* GET BASE REGISTER CONTENTS  0621
*                                                            @G33VPHD*/
         ST    R9,SDSRBBAS(,@08)                                   0621
*         END;                      /* END OF THIS IS MASTER @G33VPHD*/
*     END;                          /*                       @ZA27930*/
@RF00611 DS    0H                                                  0624
*   RFY                                                            0624
*    (R4,                                                          0624
*     R5) RSTD;                     /*                       @G33VPHD*/
@RF00562 DS    0H                                                  0625
*   RTCTSDRM(R12)=ON;               /* INDICATE DUMP TASK RESUMED  0625
*                                                            @G33VPHD*/
         LR    @08,R12                                             0625
         SLA   @08,2                                               0625
         L     @02,CVTPTR                                          0625
         L     @02,CVTRTMCT(,@02)                                  0625
         ALR   @02,@08                                             0625
         OI    RTCTSDRM-4(@02),B'00010000'                         0625
*   R4=ASCBDUMP;                    /* ADDR DUMP TASK TCB    @G33VPHD*/
         L     @08,PSAAOLD                                         0626
         L     R4,ASCBDUMP(,@08)                                   0626
*   R5=R4->TCBRBP;                  /* ADDR DUMP TASK RB     @G33VPHD*/
*                                                                  0627
         L     R5,TCBRBP(,R4)                                      0627
*   /*****************************************************************/
*   /*                                                               */
*   /* FREE LOCAL LOCK AND RESUME DUMP TASK THIS ADDR SPACE CONTROL  */
*   /* WILL GO DIRECTLY TO THE DUMP TASK IN THIS ADDRESS SPACE       */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0628
*   GEN REFS(PSALITA,FLC,FLCCVT,CVTRSUME,CVT);                     0628
*                                              /*FREE LOCK   @G33VPHD*/
FREELOCK SETLOCK RELEASE,TYPE=LOCAL,                                   X
               RELATED=(SCHSDUMP,IEAVTSDX(GETLOCK))
         RESUME  RETURN=N
*   RFY                                                            0629
*    (R12,                                                         0629
*     R4,                                                          0629
*     R5) UNRSTD;                   /*                       @G33VPHD*/
*   END SCHSRB;                                                    0630
@EL00004 DS    0H                                                  0630
@EF00004 DS    0H                                                  0630
@ER00004 BR    @14                                                 0630
*                                                                  0631
*/* ******************************************************************/
*/*   INTERNAL PROCEDURE: SCHDIE                                     */
*/*                                                                  */
*/*   THIS SEGMENT IS THE SUMMARY DUMP TIME INTERVAL DISABLED        */
*/*   INTERRUPT EXIT (DIE).  THE GLOBAL SRB IN THE MASTER ADDRESS    */
*/*   SPACE SETS THIS ROUTINE UP USING THE SETDIE FUNCTION.          */
*/*   THIS ROUTINE WILL BE GIVEN CONTROL EVERY TEN   SECONDS WHILE   */
*/*   THE REAL STORAGE BUFFER IS HELD. UPON ENTRY THIS REOUTINE      */
*/*   CHECKS INTERVAL COUNTERS IN THE SMWK TO SEE IF ANY FRAMES      */
*/*   HAVE BEEN FREED IN THE LAST TEN   SECOND INTERVAL.  IF NO      */
*/*   FRAMES HAVE BEEN FREED,  A CHECK IS MADE TO SEE HOW MANY       */
*/*   CONSECUTIVE TIMES THE ROUTINE WAS ENTERED WITH NO FRAMES       */
*/*   FREED.  IF THIS ROUTINE IS ENTERED 3 TIMES WITH NO FRAMES      */
*/*   FREED(CONSECTUTIVELY) ALL OF THE FRAMES OF THE REAL STORAGE    */
*/*   BUFFER ARE FREED.  IF THIS COUNT IS LESS THAN THREE ONLY TWO   */
*/*   REAL STORAGE FRAMES ARE FREED.  THE TIMER TQE IS RE-QUEUED ON  */
*/*   THE TIMER SUPERVISOR QUEUE AND THE INTERVAL COUNTERS ARE       */
*/*   REINITIALIZED.  IF THE SUMMARY DUMP WRITER HAS FINISHED OR     */
*/*   IF THE SUMMARY DUMP BUFFER NO LONGER IS HELD, THE DIE          */
*/*   DOES NOT REQUEUE THE TQE AND TERMINATES NORMALLY               */
*/*                                                                  */
*/*   INPUT = ALL REGISTERS WILL CONTAIN THE VALUES THEY HAD         */
*/*           WHEN THE SCHSRB ROUTINE ISSUED THE SETDIE MACRO        */
*/*                                                                  */
*/*   OUTPUT = SOME OR ALL OF THE REAL STORAGE FRAMES FREED          */
*/*            TQE ZERO OR RE-QUEUED ON THE TIMER QUEUE              */
*/*                                                                  */
*/*   NOTES: THIS ROUTINE GETS CONTROL PHYSICALLY DISPABLED FOR      */
*/*          ALL INTERRUPTS EXCEPT PROGRAM CHECK AND MACHINE CHECK.  */
*/*          IT IS CALLED DIRCTLY OUT OF THE EXTERNAL INTERRUPT      */
*/*          SLIH.                                                   */
*/* ******************************************************************/
*                                                                  0631
*SCHDIE:                                                           0631
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);/*                       @G33VPHD*/
SCHDIE   DS    0H                                                  0632
*   RFY                                                            0632
*    (R10,                                                         0632
*     R11,                                                         0632
*     R4) RSTD;                     /*                       @G33VPHD*/
*   GEN REFS(SCHFRRAD,FRRS,FRRSCURR,FRRSLAST,PSALSFCC,FRRSFRRA,FRRSENTR
*       ,FRRSPARM);                                                0633
*                                /*ESTABLISH A RECOVERY EXIT @G33VPHD*/
         SETFRR  A,FRRAD=SCHFRRAD,                                     X
               PARMAD=(R4),WRKREGS=(R10,R11)
*   RFY                                                            0634
*    (R10,                                                         0634
*     R11) UNRSTD;                  /*                       @G33VPHD*/
*   RFY                                                            0635
*     SCHFRR6W BASED(R4);           /* MAP FRR 6 WORD AREA   @G33VPHD*/
*   RTCTSDTQ=OFF;                   /* INDICATE TQE NOT ON TIMER   0636
*                                      QUEUE                 @ZM45059*/
         L     @12,CVTPTR                                          0636
         L     @12,CVTRTMCT(,@12)                                  0636
         NI    RTCTSDTQ(@12),B'10111111'                           0636
*   SCHFRRBR=R9;                    /* SAVE BASE REGISTER    @G33VPHD*/
         ST    R9,SCHFRRBR(,R4)                                    0637
*   SCHFRRPL=R1;                    /* SAVE ADDRESS OF TQE   @G33VPHD*/
         ST    R1,SCHFRRPL(,R4)                                    0638
*   SCHFRRRA=R14;                   /* SAVE RETURN ADDRESS   @G33VPHD*/
         ST    R14,SCHFRRRA(,R4)                                   0639
*   RTCTSDDI=ON;                    /* DIE GOT CONTROL       @G33VPHD*/
         OI    RTCTSDDI(@12),B'00100000'                           0640
*   SCHFRRDI=ON;                    /* TELL FRR DIE GOT CONTROL    0641
*                                                            @G33VPHD*/
         OI    SCHFRRDI(R4),B'00000010'                            0641
*   SMWKNTDI=SMWKNTDI+1;            /* INCREMENT NUMBER OF TIMES DIE
*                                      ROUTINE ENTERED       @ZM45073*/
         L     @12,RTCTSDSW(,@12)                                  0642
         LA    @08,1                                               0642
         AH    @08,SMWKNTDI(,@12)                                  0642
         STH   @08,SMWKNTDI(,@12)                                  0642
*   SCHFRRRT=ADDR(SCHDIEND);        /* GET RETRY LOCATION ADDRESS  0643
*                                                            @G33VPHD*/
         LA    @08,SCHDIEND                                        0643
         ST    @08,SCHFRRRT(,R4)                                   0643
*   IF SMWKFRHD^=ZEROH THEN         /* IF SUMDUMP WRITER IS NOT DONE
*                                                            @G33VPHD*/
         LH    @08,SMWKFRHD+196(,@12)                              0644
         N     @08,@CF05164                                        0644
         LTR   @08,@08                                             0644
         BZ    @RF00644                                            0644
*     DO;                           /* DO BUFFER CALCULATIONS      0645
*                                                            @G33VPHD*/
*                                                                  0645
*       /*************************************************************/
*       /*                                                           */
*       /* LOGIC TO FREE REAL STORAGE FRAMES IF NO FRAMES WERE FREED */
*       /* DURING THE LAST TEN SECOND TIME INTERVAL                  */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0646
*       IF SMWKNFRI=ZERO THEN       /* IF NO FRAMES WERE FREED     0646
*                                                            @G33VPHD*/
         LH    @12,SMWKNFRI(,@12)                                  0646
         C     @12,ZERO                                            0646
         BNE   @RF00646                                            0646
*         DO;                       /* LOCKOUT SO FREE SOME FRAMES 0647
*                                                            @G33VPHD*/
*           GEN REFS(PSALITA);                                     0648
*                                /*TRY TO OBTAIN SALLOC LOCK @G33VPHD*/
GETLOCKS SETLOCK   OBTAIN,TYPE=SALLOC,MODE=UNCOND,DISABLED,REGS=USE,   X
               RELATED=(SUMDUMP,SCHDIE(FRELOCKS))
*           SCHFRRSL=ON;            /* INDICATE SALLOC LOCK HELD   0649
*                                                            @G33VPHD*/
         OI    SCHFRRSL(R4),B'10000000'                            0649
*           SMWKNDIE=SMWKNDIE+ONE;  /* ADD 1 TO LOCKOUT COUNT      0650
*                                                            @G33VPHD*/
*                                                                  0650
         L     @12,CVTPTR                                          0650
         L     @12,CVTRTMCT(,@12)                                  0650
         L     @12,RTCTSDSW(,@12)                                  0650
         LA    @08,1                                               0650
         AH    @08,SMWKNDIE(,@12)                                  0650
         STH   @08,SMWKNDIE(,@12)                                  0650
*           /*********************************************************/
*           /*                                                       */
*           /* FREE THE WHOLE REAL STORAGE BUFFER                    */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0651
*           IF SMWKNDIE>MAXLOCK THEN/* IF LOCKOUT PERSISTS   @G33VPHD*/
         C     @08,@CF00033                                        0651
         BNH   @RF00651                                            0651
*             DO;                   /* TROUBLE FREE WHOLE BUFFER   0652
*                                                            @G33VPHD*/
*               R1=ADDR(SMWKRSM);   /* GET RSM WORK AREA ADDRESS   0653
*                                                            @G33VPHD*/
         LA    R1,SMWKRSM(,@12)                                    0653
*               R13=ADDR(SMWKSAV1); /* SAVE AREA ADDRESS     @ZM44932*/
         LA    R13,SMWKSAV1(,@12)                                  0654
*               SMWKEVRY=ON;        /* TELL RSM FREE ALL FRAMES    0655
*                                                            @G33VPHD*/
         LA    @08,196                                             0655
         ALR   @08,@12                                             0655
         OI    SMWKEVRY(@08),B'10000000'                           0655
*               SMWKFRPT=ZERO;      /* NO FRAME ADDRESS NEEDED     0656
*                                                            @G33VPHD*/
         L     @05,ZERO                                            0656
         ST    @05,SMWKFRPT(,@08)                                  0656
*               SMWKRBUF=OFF;       /* INDICATE SUMDUMP NO LONGER HAS
*                                      BUFFER                @G33VPHD*/
         NI    SMWKRBUF(@12),B'10111111'                           0657
*               SMWKNFFD=SMWKNFFD+SMWKFRHD;/* CALCULATE NUMBER OF  0658
*                                      FRAMES FREED          @ZM45073*/
         LH    @05,SMWKFRHD(,@08)                                  0658
         N     @05,@CF05164                                        0658
         AH    @05,SMWKNFFD(,@12)                                  0658
         STH   @05,SMWKNFFD(,@12)                                  0658
*               SMWKFRHD=ZEROH;     /* FRAMES HELD SET TO ZERO     0659
*                                                            @G33VPHD*/
         SLR   @05,@05                                             0659
         STH   @05,SMWKFRHD(,@08)                                  0659
*               SMWKFRUS=ZEROH;     /* FRAMES USED SET TO ZERO     0660
*                                                            @G33VPHD*/
         STH   @05,SMWKFRUS(,@12)                                  0660
*               SMWKRSIX=ZEROH;     /* ZERO FRAME INDEX      @G33VPHD*/
         STH   @05,SMWKRSIX(,@12)                                  0661
*               SCHFRRDT=ON;        /* INDICATE DIE TERMINATION    0662
*                                                            @G33VPHD*/
         OI    SCHFRRDT(R4),B'00000001'                            0662
*               CALL IEAVPRSR;      /* CALL RSM AND FREE FRAMES    0663
*                                                            @G33VPHD*/
         L     @15,SMWKPRSR(,@08)                                  0663
         BALR  @14,@15                                             0663
*             END;                  /* END OF FREE WHOLE BUFFER    0664
*                                                            @G33VPHD*/
*                                                                  0664
*           /*********************************************************/
*           /*                                                       */
*           /* FREE TWO REAL STORAGE FRAMES                          */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0665
*           ELSE                                                   0665
*             DO;                   /* LOCKOUT NOT BAD FREE A FEW  0665
*                                      FRAMES                @G33VPHD*/
         B     @RC00651                                            0665
@RF00651 DS    0H                                                  0666
*               SMWKIDX1=SMWKRSIX;  /* SAVE INDEX LAST FRAME @G33VPHD*/
         L     @12,CVTPTR                                          0666
         L     @12,CVTRTMCT(,@12)                                  0666
         L     @12,RTCTSDSW(,@12)                                  0666
         LH    @08,SMWKRSIX(,@12)                                  0666
         STH   @08,SMWKIDX1(,@12)                                  0666
*               SMWKRSIX=SMWKRSIX-LOCKFREE;/* CALC LAST      @G33VPHD*/
         BCTR  @08,0                                               0667
         BCTR  @08,0                                               0667
         STH   @08,SMWKRSIX(,@12)                                  0667
*               DO WHILE(SMWKFRHD>ZERO&SMWKRSIX<SMWKIDX1);/* LOOP  0668
*                                      FREEING ONE FRAME AT ONCE   0668
*                                                            @G33VPHD*/
         B     @DE00668                                            0668
@DL00668 DS    0H                                                  0669
*                 SMWKFRPT=SMWKFRMA(SMWKIDX1);/* ADDR OF FRAME TO BE
*                                      FREED                 @G33VPHD*/
         L     @12,CVTPTR                                          0669
         L     @12,CVTRTMCT(,@12)                                  0669
         L     @12,RTCTSDSW(,@12)                                  0669
         LA    @08,196                                             0669
         ALR   @08,@12                                             0669
         LH    @05,SMWKIDX1(,@12)                                  0669
         SLA   @05,2                                               0669
         L     @05,SMWKFRMA-4(@05,@08)                             0669
         ST    @05,SMWKFRPT(,@08)                                  0669
*                 SMWKFRHD=SMWKFRHD-ONE;/* NUMBER HELD       @G33VPHD*/
         LH    @05,SMWKFRHD(,@08)                                  0670
         N     @05,@CF05164                                        0670
         BCTR  @05,0                                               0670
         STH   @05,SMWKFRHD(,@08)                                  0670
*                 SMWKFRUS=SMWKFRUS-ONE;/* NUMBER USED       @G33VPHD*/
         LH    @08,SMWKFRUS(,@12)                                  0671
         BCTR  @08,0                                               0671
         STH   @08,SMWKFRUS(,@12)                                  0671
*                 SMWKNFFD=SMWKNFFD+ONE;/* NUMBER FREED      @ZM45073*/
         LA    @08,1                                               0672
         AH    @08,SMWKNFFD(,@12)                                  0672
         STH   @08,SMWKNFFD(,@12)                                  0672
*                 IF SMWKFRHD=ZERO THEN/* IF FREEING LAST    @G33VPHD*/
         C     @05,ZERO                                            0673
         BNE   @RF00673                                            0673
*                   DO;             /* SET FLAGS & PTRS      @G33VPHD*/
*                     SMWKRBUF=OFF; /* NO BUFFER HELD        @G33VPHD*/
         NI    SMWKRBUF(@12),B'10111111'                           0675
*                     SMWKFRUS=ZEROH;/* NO FRAMES USED       @G33VPHD*/
         SLR   @08,@08                                             0676
         STH   @08,SMWKFRUS(,@12)                                  0676
*                     SCHFRRDT=ON;  /* DIE ROUTINE WILL QUIT @G33VPHD*/
         OI    SCHFRRDT(R4),B'00000001'                            0677
*                     SMWKRSIX=ZEROH;/* ZERO STORAGE INDEX   @G33VPHD*/
         STH   @08,SMWKRSIX(,@12)                                  0678
*                   END;            /* END OF FREEING LAST FRAME   0679
*                                                            @G33VPHD*/
*                 R1=ADDR(SMWKRSM); /* GET PARM LIST         @G33VPHD*/
@RF00673 L     @12,CVTPTR                                          0680
         L     @12,CVTRTMCT(,@12)                                  0680
         L     @12,RTCTSDSW(,@12)                                  0680
         LA    R1,SMWKRSM(,@12)                                    0680
*                 R13=ADDR(SMWKSAV1);/* SAVE AREA PTR        @ZM44932*/
         LA    R13,SMWKSAV1(,@12)                                  0681
*                 CALL IEAVPRSR;    /* CALL RSM FREE FRAME   @G33VPHD*/
         L     @15,SMWKPRSR+196(,@12)                              0682
         BALR  @14,@15                                             0682
*                 SMWKIDX1=SMWKIDX1-ONE;/* DECREMENT INDX    @G33VPHD*/
         L     @12,CVTPTR                                          0683
         L     @12,CVTRTMCT(,@12)                                  0683
         L     @12,RTCTSDSW(,@12)                                  0683
         LH    @08,SMWKIDX1(,@12)                                  0683
         BCTR  @08,0                                               0683
         STH   @08,SMWKIDX1(,@12)                                  0683
*               END;                /* END OF FREE DO LOOP   @G33VPHD*/
@DE00668 L     @12,CVTPTR                                          0684
         L     @12,CVTRTMCT(,@12)                                  0684
         L     @12,RTCTSDSW(,@12)                                  0684
         LH    @08,SMWKFRHD+196(,@12)                              0684
         N     @08,@CF05164                                        0684
         C     @08,ZERO                                            0684
         BNH   @DC00668                                            0684
         LH    @08,SMWKRSIX(,@12)                                  0684
         CH    @08,SMWKIDX1(,@12)                                  0684
         BL    @DL00668                                            0684
@DC00668 DS    0H                                                  0685
*             END;                  /* END OF LOCKOUT NOT BAD      0685
*                                                            @G33VPHD*/
*           GEN REFS(PSALITA);                                     0686
@RC00651 DS    0H                                                  0686
*                                 /*RELEASE SALLOC LOCK      @G33VPHD*/
FRELOCKS SETLOCK   RELEASE,TYPE=SALLOC,DISABLED,REGS=USE,              X
               RELATED=(SUMDUMP,SCHDIE(GETLOCKS))
*           SCHFRRSL=OFF;           /* SALLOC LOCK NOT HELD  @G33VPHD*/
         NI    SCHFRRSL(R4),B'01111111'                            0687
*         END;                      /* END OF NO FRAMES WERE FREED 0688
*                                                            @G33VPHD*/
*       ELSE                                                       0689
*         DO;                       /* FRAMES WERE FREED THIS      0689
*                                      INTERVAL              @G33VPHD*/
         B     @RC00646                                            0689
@RF00646 DS    0H                                                  0690
*           SMWKNDIE=ZEROH;         /* REINITIALIZE LOCKOUT COUNT  0690
*                                                            @G33VPHD*/
         L     @12,CVTPTR                                          0690
         L     @12,CVTRTMCT(,@12)                                  0690
         L     @12,RTCTSDSW(,@12)                                  0690
         SLR   @08,@08                                             0690
         STH   @08,SMWKNDIE(,@12)                                  0690
*         END;                      /* END OF FRAMES WERE FREED    0691
*                                                            @G33VPHD*/
*     END;                          /* END OF SUM DUMP WRITER NOT  0692
*                                      COMPLETED             @G33VPHD*/
*   ELSE                                                           0693
*     SCHFRRDT=ON;                  /* SUM DUMP WRITER DONE -      0693
*                                      TERMINATE             @G33VPHD*/
*                                                                  0693
         B     @RC00644                                            0693
@RF00644 OI    SCHFRRDT(R4),B'00000001'                            0693
*   /*****************************************************************/
*   /*                                                               */
*   /* RE-ENQUE THE TQE TO SET ANOTHER TIME INTERVAL                 */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0694
*   IF SCHFRRDT=OFF THEN            /* IF DIE SHOULD NOT TERMINATE 0694
*                                                            @G33VPHD*/
@RC00644 TM    SCHFRRDT(R4),B'00000001'                            0694
         BNZ   @RF00694                                            0694
*     DO;                           /* RE ENQUEUE TQE AND INIT CNTRS
*                                                            @G33VPHD*/
*       SMWKNFRI=ZEROH;             /* REINITIALIZE FRAME FREE COUNT
*                                                            @G33VPHD*/
         L     @12,CVTPTR                                          0696
         L     @12,CVTRTMCT(,@12)                                  0696
         L     @12,RTCTSDSW(,@12)                                  0696
         SLR   @08,@08                                             0696
         STH   @08,SMWKNFRI(,@12)                                  0696
*       GEN REFS(PSALITA);                                         0697
*                                  /*OBTAIN DISPATCHER LOCK  @ZM45204*/
GETLOCKD SETLOCK  OBTAIN,TYPE=DISP,MODE=UNCOND,DISABLED,               X
               RELATED=(SUMDUMP,SCHDIE(FRELOCKD))
*       SCHFRRDL=ON;                /* INDICATE DISPATCHER LOCK HELD
*                                                            @G33VPHD*/
         OI    SCHFRRDL(R4),B'01000000'                            0698
*       RFY                                                        0699
*         TQE BASED(R1);            /* MAP CURRENT TQE       @G33VPHD*/
*       R1=SMWKTQEA;                /* GET ADDR OF TQE FOR ENQUEUE 0700
*                                                            @G33VPHD*/
         L     @12,CVTPTR                                          0700
         L     @08,CVTRTMCT(,@12)                                  0700
         L     @08,RTCTSDSW(,@08)                                  0700
         L     R1,SMWKTQEA(,@08)                                   0700
*       TQEVALLH=TQEVALLH+INTVALLH; /* CALC NEXT INTERVAL    @G33VPHD*/
         LA    @08,10                                              0701
         AL    @08,TQEVALLH(,R1)                                   0701
         ST    @08,TQEVALLH(,R1)                                   0701
*       TQEVALRH=TQEVALRH+INTVALRH; /* CAL NEXT INTERVAL     @G33VPHD*/
         L     @08,TQEVALRH(,R1)                                   0702
         ST    @08,TQEVALRH(,R1)                                   0702
*       RFY                                                        0703
*         R2 RSTD;                  /*                       @G33VPHD*/
*       R2=ADDR(RTRNADDR);          /* GET RETURN ADDR IN R2 @G33VPHD*/
         LA    R2,RTRNADDR                                         0704
*       CALL TQENQ;                 /* PUT TQE ON TIMER QUEUE      0705
*                                                            @G33VPHD*/
         L     @15,CVTQTE00(,@12)                                  0705
         BALR  @14,@15                                             0705
*RTRNADDR:                          /*                       @G33VPHD*/
*       RFY                                                        0706
*         R2 UNRSTD;                /*                       @G33VPHD*/
RTRNADDR DS    0H                                                  0707
*       RTCTSDTQ=ON;                /* INDICATE TQE QUEUED ON TIMER
*                                      QUEUE                 @ZM45059*/
         L     @12,CVTPTR                                          0707
         L     @12,CVTRTMCT(,@12)                                  0707
         OI    RTCTSDTQ(@12),B'01000000'                           0707
*       SMWKNTDQ=SMWKNTDQ+ONE;      /* INCREMENT NUMBER OF TIMES DIE
*                                      QUEUED                @ZM45073*/
         L     @12,RTCTSDSW(,@12)                                  0708
         LA    @08,1                                               0708
         AH    @08,SMWKNTDQ(,@12)                                  0708
         STH   @08,SMWKNTDQ(,@12)                                  0708
*       GEN REFS(PSALITA);                                         0709
*                              /*RELEASE THE DISPATCHER LOCK @G33VPHD*/
FRELOCKD SETLOCK RELEASE,TYPE=DISP,DISABLED,REGS=USE,                  X
               RELATED=(SUMDUMP,SCHDIE(GETLOCKD))
*       SCHFRRDL=OFF;               /* DISPATCHER LOCK NOT HELD    0710
*                                                            @G33VPHD*/
         NI    SCHFRRDL(R4),B'10111111'                            0710
*     END;                          /* END OF DIE SHOULD NOT QUIT  0711
*                                                            @G33VPHD*/
*   ELSE                                                           0712
*     DO;                           /* DIE SHOULD TERMINATE  @G33VPHD*/
         B     @RC00694                                            0712
@RF00694 DS    0H                                                  0713
*SCHDIEND:                          /* DIE RETRY ADDRESS     @G33VPHD*/
*       SMWKTQE=SMWKTQE&&SMWKTQE;   /* CLEAR TQE FOR USE     @G33VPHD*/
SCHDIEND L     @12,CVTPTR                                          0713
         L     @12,CVTRTMCT(,@12)                                  0713
         L     @12,RTCTSDSW(,@12)                                  0713
         XC    SMWKTQE(128,@12),SMWKTQE(@12)                       0713
*       SMWKNDIE=ZEROH;             /* ZERO COUNTERS         @G33VPHD*/
         ST    @12,@TF00001                                        0714
         SLR   @12,@12                                             0714
         L     @08,@TF00001                                        0714
         STH   @12,SMWKNDIE(,@08)                                  0714
*       SMWKNFRI=ZEROH;             /* ZERO COUNTERS         @G33VPHD*/
         L     @08,@TF00001                                        0715
         STH   @12,SMWKNFRI(,@08)                                  0715
*     END;                          /*                       @G33VPHD*/
*   SCHFRRDI=OFF;                   /* IND DIE NO LONGER IN CONTROL
*                                                            @G33VPHD*/
@RC00694 NI    SCHFRRDI(R4),B'11111101'                            0717
*   RTCTSDDI=OFF;                   /* INDICATE DIE NO LONGER IN   0718
*                                      CONTROL               @G33VPHD*/
         L     @12,CVTPTR                                          0718
         L     @12,CVTRTMCT(,@12)                                  0718
         NI    RTCTSDDI(@12),B'11011111'                           0718
*   R14=SCHFRRRA;                   /* RESTORE SAVED RETURN ADDRESS
*                                                            @G33VPHD*/
         L     R14,SCHFRRRA(,R4)                                   0719
*   RFY                                                            0720
*    (R10,                                                         0720
*     R11) RSTD;                    /*                       @G33VPHD*/
*   GEN REFS(PSA,PSACSTK,FRRS,FRRSCURR,FRRSEMP,FRRSELEN);          0721
*                                                         /* @G33VPHD*/
        SETFRR  D,WRKREGS=(R10,R11)   DELETE RECOVERY
*   RFY                                                            0722
*    (R10,                                                         0722
*     R11) UNRSTD;                  /*                       @G33VPHD*/
*   END SCHDIE;                     /*                       @G33VPHD*/
@EL00005 DS    0H                                                  0723
@EF00005 DS    0H                                                  0723
@ER00005 BR    @14                                                 0723
*   DECLARE                         /* COMMON VARIABLES              */
*     I256C CHAR(256) BASED,                                       0724
*     I031F FIXED(31) BASED,                                       0724
*     I031P PTR(31) BASED,                                         0724
*     I015F FIXED(15) BASED,                                       0724
*     I015P PTR(15) BASED,                                         0724
*     I008P PTR(8) BASED,                                          0724
*     I001C CHAR(1) BASED;                                         0724
*   END IEAVTSDX                                                   0725
*                                                                  0725
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (SDXSPEC )                                       */
*/*%INCLUDE SYSLIB  (SDXDCL  )                                       */
*/*%INCLUDE SYSLIB  (IHAPSA  )                                       */
*/*%INCLUDE SYSLIB  (CVT     )                                       */
*/*%INCLUDE SYSLIB  (IHARTCT )                                       */
*/*%INCLUDE SYSLIB  (IHASMDLR)                                       */
*/*%INCLUDE SYSLIB  (IHASDRSB)                                       */
*/*%INCLUDE SYSLIB  (IHASMWK )                                       */
*/*%INCLUDE SYSLIB  (IHASDUMP)                                       */
*/*%INCLUDE SYSLIB  (IKJTCB  )                                       */
*/*%INCLUDE SYSLIB  (IHARTM2A)                                       */
*/*%INCLUDE SYSLIB  (IHASNP  )                                       */
*/*%INCLUDE SYSLIB  (IHARMPL )                                       */
*/*%INCLUDE SYSLIB  (IHASRB  )                                       */
*/*%INCLUDE SYSLIB  (IHAASCB )                                       */
*/*%INCLUDE SYSLIB  (IHASCVT )                                       */
*/*%INCLUDE SYSLIB  (IHASDWA )                                       */
*/*%INCLUDE SYSLIB  (IHAFRRS )                                       */
*/*%INCLUDE SYSLIB  (IHAESTA )                                       */
*/*%INCLUDE SYSLIB  (IHAPVT  )                                       */
*/*%INCLUDE SYSLIB  (IHAASVT )                                       */
*/*%INCLUDE SYSLIB  (IHALCCA )                                       */
*/*%INCLUDE SYSLIB  (IHART1W )                                       */
*/*%INCLUDE SYSLIB  (IHASDWRK)                                       */
*/*%INCLUDE SYSLIB  (IHAASXB )                                       */
*/*%INCLUDE SYSLIB  (IHATQE  )                                       */
*/*%INCLUDE SYSLIB  (IEAVVTPC)                                       */
*/*%INCLUDE SYSLIB  (IHAWSAVT)                                       */
*/*%INCLUDE SYSLIB  (IEFUCBOB)                                       */
*/*%INCLUDE SYSLIB  (IHADCBDF)                                       */
*/*%INCLUDE SYSLIB  (IHADCB  )                                       */
*/*%INCLUDE SYSLIB  (IEZDEB  )                                       */
*/*%INCLUDE SYSLIB  (SCHVALID)                                       */
*/*%INCLUDE SYSLIB  (POSSIBLE)                                       */
*/*%INCLUDE SYSLIB  (SDVALID )                                       */
*/*%INCLUDE SYSLIB  (SCHMULTA)                                       */
*/*%INCLUDE SYSLIB  (SCHDPRMS)                                       */
*/*%INCLUDE SYSLIB  (SAVERRID)                                       */
*/*%INCLUDE SYSLIB  (SCHBDSRB)                                       */
*/*%INCLUDE SYSLIB  (SCHFRR  )                                       */
*/*%INCLUDE SYSLIB  (SCHSRB  )                                       */
*/*%INCLUDE SYSLIB  (SCHDIE  )                                       */
*                                                                  0725
*       ;                                                          0725
@DATA    DS    0H
@CH00115 DC    H'44'
@SM05167 MVC   SCHHDR(0),USERDATA(@08)
         DS    0F
@TF00001 DS    F
         DS    0F
@CF00068 DC    F'1'
@CH00068 EQU   @CF00068+2
@CF00033 DC    F'3'
@CF00038 DC    F'8'
@CF01052 DC    F'10'
@CF00034 DC    F'15'
@CF00127 DC    F'16'
@CF01311 DC    F'20'
@CF00125 DC    F'32'
@CF04971 DC    F'4096'
@CF04979 DC    XL4'00002000'
@CF04983 DC    XL4'7FFFFFFF'
@CF04985 DC    XL4'80000000'
@CF04987 DC    XL4'00FFFFFF'
@CF05023 DC    XL4'80133000'
@CF05025 DC    XL4'80233000'
@CF05164 DC    XL4'0000FFFF'
@CF04989 DC    XL4'7FFF'
         DS    0D
SMWKLEN  DC    AL4(980)
ZERO     DC    F'0'
SCHFRRAD DC    AL4(SCHFRR)
@TS00001 DS    CL2
@CC04949 DC    C'IEANUC01'
@CC04951 DC    C'IEAVTSDX'
@CC04953 DC    C'SCHFRR  '
@CC04955 DC    C'SRB '
@CB05027 DC    X'233000'
@CB03926 DC    X'0000'
@CB05029 DC    X'FFFF'
         DS    CL3
SCHPARML DS    CL40
SCHHDR   DS    CL101
         DS    CL1
SMDWSAG  DC    AL2(6)
         DC    AL2(7)
         DC    AL2(8)
         DC    AL2(9)
         DC    AL2(10)
         DC    AL2(11)
         DC    AL2(12)
         DC    AL2(13)
         DC    AL2(14)
         DC    AL2(15)
         DC    AL2(16)
SMDWSAC  DC    AL2(17)
         DC    AL2(18)
         DC    AL2(19)
         DC    AL2(20)
         DC    AL2(21)
         DC    AL2(22)
         DC    AL2(23)
         DC    AL2(24)
         DC    AL2(25)
         DC    AL2(26)
         DC    AL2(27)
         DC    AL2(28)
         DC    AL2(29)
         DC    AL2(30)
         DC    AL2(54)
         DC    AL2(55)
SMDWSAL  DC    AL2(31)
         DC    AL2(32)
         DC    AL2(33)
         DC    AL2(34)
         DC    AL2(35)
         DC    AL2(36)
         DC    AL2(37)
         DC    AL2(38)
         DC    AL2(39)
         DC    AL2(40)
         DC    AL2(41)
         DC    AL2(42)
         DC    AL2(43)
         DC    AL2(44)
         DC    AL2(45)
         DS    CL2
SVCDSRB  DC    X'00'
         DC    XL43'0'
         DC    X'00'
         DC    XL43'0'
         DC    X'00'
         DC    XL43'0'
         DC    X'00'
         DC    XL43'0'
         DC    X'00'
         DC    XL43'0'
         DC    X'00'
         DC    XL43'0'
         DC    X'00'
         DC    XL43'0'
         DC    X'00'
         DC    XL43'0'
         DC    X'00'
         DC    XL43'0'
         DC    X'00'
         DC    XL43'0'
         DC    X'00'
         DC    XL43'0'
         DC    X'00'
         DC    XL43'0'
         DC    X'00'
         DC    XL43'0'
         DC    X'00'
         DC    XL43'0'
         DC    X'00'
         DC    XL43'0'
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
R7       EQU   @07
R0       EQU   @00
R1       EQU   @01
R2       EQU   @02
R3       EQU   @03
R4       EQU   @04
R5       EQU   @05
R6       EQU   @06
R9       EQU   @09
R10      EQU   @10
R11      EQU   @11
R12      EQU   @12
R13      EQU   @13
R14      EQU   @14
R15      EQU   @15
R8       EQU   @08
PSA      EQU   0
FLCRNPSW EQU   PSA
FLCROPSW EQU   PSA+8
FLCICCW2 EQU   PSA+16
FLCCVT   EQU   FLCICCW2
PSAEEPSW EQU   PSA+132
PSAESPSW EQU   PSA+136
FLCSVILC EQU   PSAESPSW+1
PSAEPPSW EQU   PSA+140
FLCPIILC EQU   PSAEPPSW+1
FLCPICOD EQU   PSAEPPSW+2
PSAPICOD EQU   FLCPICOD+1
FLCTEA   EQU   PSAEPPSW+4
FLCPER   EQU   PSA+152
FLCMCLA  EQU   PSA+168
FLCIOEL  EQU   FLCMCLA+4
FLCIOA   EQU   FLCMCLA+16
FLCFSA   EQU   FLCMCLA+80
PSALCCAV EQU   PSA+528
PSATOLD  EQU   PSA+540
PSAAOLD  EQU   PSA+548
PSASUPER EQU   PSA+552
PSASUP1  EQU   PSASUPER
PSASUP2  EQU   PSASUPER+1
PSASUP3  EQU   PSASUPER+2
PSASUP4  EQU   PSASUPER+3
PSACLHT  EQU   PSA+640
PSALKSA  EQU   PSA+696
PSAHLHI  EQU   PSA+760
PSALITA  EQU   PSA+764
PSADSSFL EQU   PSA+836
PSADSSF1 EQU   PSADSSFL
PSADSSF3 EQU   PSADSSFL+2
PSADSSF4 EQU   PSADSSFL+3
PSARSVT  EQU   PSA+896
PSALSFCC EQU   PSA+1012
CVTMAP   EQU   0
CVT      EQU   CVTMAP
CVTBTERM EQU   CVTMAP+52
CVTDAR   EQU   CVTMAP+72
CVTFLGS1 EQU   CVTDAR
CVTBRET  EQU   CVTMAP+82
CVTTPC   EQU   CVTMAP+88
CVTQTE00 EQU   CVTMAP+104
CVTDCB   EQU   CVTMAP+116
CVTIOQET EQU   CVTMAP+120
CVTIERLC EQU   CVTMAP+144
CVTHEAD  EQU   CVTMAP+160
CVTSV76C EQU   CVTHEAD
CVTOPTA  EQU   CVTMAP+182
CVTOPTB  EQU   CVTMAP+183
CVTABEND EQU   CVTMAP+200
CVTGTF   EQU   CVTMAP+236
CVTGTFST EQU   CVTGTF
CVTGTFS  EQU   CVTGTFST
CVTSTATE EQU   CVTGTFST
CVTTMODE EQU   CVTGTFST
CVTFORM  EQU   CVTGTFST
CVTAQAVT EQU   CVTMAP+240
CVTTCMFG EQU   CVTAQAVT
CVTVOLM2 EQU   CVTMAP+244
CVTTATA  EQU   CVTVOLM2
CVTTSKS  EQU   CVTTATA
CVTVOLF2 EQU   CVTTSKS
CVTTAT   EQU   CVTTATA+1
CVTATER  EQU   CVTMAP+248
CVTEXT1  EQU   CVTMAP+252
CVTPURG  EQU   CVTMAP+260
CVTQMSG  EQU   CVTMAP+268
CVTDMSR  EQU   CVTMAP+272
CVTRSV37 EQU   CVTDMSR
CVTDMSRF EQU   CVTRSV37
CVTERPV  EQU   CVTMAP+316
CVTINTLA EQU   CVTMAP+320
CVTAPF   EQU   CVTMAP+324
CVTEXT2  EQU   CVTMAP+328
CVTHJES  EQU   CVTMAP+332
CVTPGSIA EQU   CVTMAP+348
CVTA1F1  EQU   CVTMAP+356
CVTSYSK  EQU   CVTMAP+357
CVTVOLM1 EQU   CVTMAP+380
CVTVOLF1 EQU   CVTVOLM1
CVTXTNT1 EQU   0
CVTXTNT2 EQU   0
CVTDSSV  EQU   CVTXTNT2
CVTFLGBT EQU   CVTXTNT2+5
CVTQID   EQU   CVTXTNT2+24
CVTRV400 EQU   CVTXTNT2+52
CVTRV409 EQU   CVTXTNT2+53
CVTATCVT EQU   CVTXTNT2+64
CVTRV429 EQU   CVTXTNT2+84
CVTRV438 EQU   CVTXTNT2+85
CVTRV457 EQU   CVTXTNT2+112
CVTRV466 EQU   CVTXTNT2+113
CVTFIX   EQU   0
CVTRELNO EQU   CVTFIX+252
RTCT     EQU   0
RTCTPLIB EQU   RTCT+4
RTCTSAP  EQU   RTCTPLIB
RTCTSAP1 EQU   RTCTSAP
RTCTSAP2 EQU   RTCTSAP+1
RTCTSAP3 EQU   RTCTSAP+2
RTCTSUP  EQU   RTCTPLIB+4
RTCTSUP1 EQU   RTCTSUP
RTCTSUP2 EQU   RTCTSUP+1
RTCTSUP3 EQU   RTCTSUP+2
RTCTSYD  EQU   RTCTPLIB+8
RTCTSY01 EQU   RTCTSYD
RTCTSDID EQU   RTCT+18
RTCTSDDS EQU   RTCT+36
RTCTFLG  EQU   RTCTSDDS+3
RTCTSDPL EQU   RTCT+156
RTCTRFLG EQU   RTCT+176
RTCTSDSW EQU   RTCT+180
RTCTSDWK EQU   RTCT+220
RTCTERID EQU   RTCT+224
RTCTOPT  EQU   RTCT+236
RTCTASO  EQU   RTCT+252
RTCTASO1 EQU   RTCTASO
RTCTASPS EQU   RTCTASO1
RTCTASNU EQU   RTCTASO1
RTCTASTR EQU   RTCTASO1
RTCTASO2 EQU   RTCTASO+1
RTCTASCS EQU   RTCTASO2
RTCTASNS EQU   RTCTASO2
RTCTASNA EQU   RTCTASO2
RTCTASNQ EQU   RTCTASO2
RTCTSDI  EQU   RTCT+254
RTCTSDNA EQU   RTCTSDI
RTCTINDX EQU   RTCTSDI+1
RTCTSDPR EQU   RTCTSDI+2
RTCTSDF  EQU   RTCT+264
RTCTSDF1 EQU   RTCTSDF
RTCTSDNO EQU   RTCTSDF1
RTCTSDND EQU   RTCTSDF1
RTCTSDSH EQU   RTCTSDF1
RTCTSDMA EQU   RTCTSDF1
RTCTSDSC EQU   RTCTSDF1
RTCTSDF2 EQU   RTCTSDF+1
RTCTSDTQ EQU   RTCTSDF2
RTCTSDDI EQU   RTCTSDF2
RTCTSDRW EQU   RTCTSDF2
RTCTSDFX EQU   RTCTSDF2
RTCTR2D2 EQU   RTCTSDF+2
RTCTC3PO EQU   RTCTSDF+3
RTCTSDF3 EQU   RTCT+268
RTCTSDAS EQU   RTCTSDF3
RTCTSDF4 EQU   RTCTSDF3+2
RTCTSDSS EQU   RTCTSDF4
RTCTSDNC EQU   RTCTSDF4
RTCTSDAN EQU   RTCTSDF4
RTCTSDRM EQU   RTCTSDF4
RTCTSDDO EQU   RTCTSDF4
RTCTMOPT EQU   0
RTCTMSAO EQU   RTCTMOPT
RTCTSASD EQU   RTCTMSAO
RTCTSAO1 EQU   RTCTSASD
RTCTSAO2 EQU   RTCTSASD+1
RTCTSAPD EQU   RTCTMSAO+2
RTCTSAO3 EQU   RTCTSAPD
RTCTSAO4 EQU   RTCTSAPD+1
RTCTSAMG EQU   RTCTSAO4
RTCTMSUO EQU   RTCTMOPT+4
RTCTSUSD EQU   RTCTMSUO
RTCTSUO1 EQU   RTCTSUSD
RTCTSUO2 EQU   RTCTSUSD+1
RTCTSUPD EQU   RTCTMSUO+2
RTCTSUO3 EQU   RTCTSUPD
RTCTSUO4 EQU   RTCTSUPD+1
RTCTSUMG EQU   RTCTSUO4
RTCTMSYO EQU   RTCTMOPT+8
RTCTSD01 EQU   RTCTMSYO
RTCTSD04 EQU   RTCTMSYO+3
RTCTSMMG EQU   RTCTSD04
RTCTMSDO EQU   RTCTMOPT+12
RTCTSDOD EQU   RTCTMSDO
RTCTSDO1 EQU   RTCTSDOD
RTCTSDO2 EQU   RTCTSDOD+1
RTCTSDO3 EQU   RTCTMSDO+2
RTCTSDPG EQU   RTCTSDO3
RTCTSDPH EQU   RTCTSDO3
RTCTSDO4 EQU   RTCTMSDO+3
RTCTSDMG EQU   RTCTSDO4
RTCTISVC EQU   RTCTSDO4
SMDLR    EQU   0
SMDLRHDR EQU   SMDLR
SMWKRSCB EQU   0
SMWKFLGA EQU   SMWKRSCB
SMWKEVRY EQU   SMWKFLGA
SMWKFRHD EQU   SMWKRSCB+2
SMWKFRPT EQU   SMWKRSCB+4
SMWKPRSR EQU   SMWKRSCB+12
SMWKRSFM EQU   SMWKRSCB+16
SMWKFRMA EQU   SMWKRSFM
SMWK     EQU   0
SMWKFLGS EQU   SMWK+4
SMWKFLG1 EQU   SMWKFLGS
SMWKRBUF EQU   SMWKFLG1
SMWKSAVE EQU   SMWK+8
SMWKSAV1 EQU   SMWK+80
SMWKENTY EQU   SMWK+152
SMWKPSW  EQU   SMWK+168
SMWKRSM  EQU   SMWK+196
SMWKNFAV EQU   SMWK+616
SMWKRSIX EQU   SMWK+618
SMWKFRUS EQU   SMWK+620
SMWKREGS EQU   SMWK+676
SMWKIDX1 EQU   SMWK+804
SMWKNFRI EQU   SMWK+814
SMWKNDIE EQU   SMWK+818
SMWKTQEA EQU   SMWK+824
SMWKTQE  EQU   SMWK+832
SMWKPSSE EQU   SMWK+960
SMWKNTDI EQU   SMWK+970
SMWKNTDQ EQU   SMWK+972
SMWKNFFD EQU   SMWK+974
SDUMP    EQU   0
SDUFLAG0 EQU   SDUMP
SDUDCB   EQU   SDUFLAG0
SDUBUF   EQU   SDUFLAG0
SDUSTOR  EQU   SDUFLAG0
SDUHDR   EQU   SDUFLAG0
SDUQUIET EQU   SDUFLAG0
SDUBRANH EQU   SDUFLAG0
SDUFLAG1 EQU   SDUMP+1
SDUNEW   EQU   SDUFLAG1
SDUASLST EQU   SDUFLAG1
SDUSDAT1 EQU   SDUMP+2
SDUSDAT2 EQU   SDUMP+3
SDUDCBAD EQU   SDUMP+4
SDUSTORA EQU   SDUMP+8
SDUHDRAD EQU   SDUMP+12
SDUMASID EQU   SDUMP+20
SDUCASID EQU   SDUMASID
SDUTASID EQU   SDUMASID+2
SDUASIDP EQU   SDUMP+24
SDUMPPTR EQU   0
TCBFIX   EQU   0
TCBFRS   EQU   TCBFIX
TCB      EQU   0
TCBRBP   EQU   TCB
TCBPIE   EQU   TCB+4
TCBPMASK EQU   TCBPIE
TCBCMP   EQU   TCB+16
TCBCMPF  EQU   TCBCMP
TCBCPP   EQU   TCBCMPF
TCBSTCC  EQU   TCBCMPF
TCBCDBL  EQU   TCBCMPF
TCBCWTO  EQU   TCBCMPF
TCBCIND  EQU   TCBCMPF
TCBCMSG  EQU   TCBCMPF
TCBTRN   EQU   TCB+20
TCBABF   EQU   TCBTRN
TCBMSS   EQU   TCB+24
TCBPKF   EQU   TCB+28
TCBFLGS  EQU   TCB+29
TCBFLGS1 EQU   TCBFLGS
TCBFX    EQU   TCBFLGS1
TCBFLGS2 EQU   TCBFLGS+1
TCBFLGS3 EQU   TCBFLGS+2
TCBFLGS4 EQU   TCBFLGS+3
TCBFLGS5 EQU   TCBFLGS+4
TCBABWF  EQU   TCBFLGS5
TCBJPQ   EQU   TCB+44
TCBPURGE EQU   TCBJPQ
TCBGRS   EQU   TCB+48
TCBFSA   EQU   TCB+112
TCBTME   EQU   TCB+120
TCBJSTCB EQU   TCB+124
TCBNTC   EQU   TCB+128
TCBLTC   EQU   TCB+136
TCBTSFLG EQU   TCB+148
TCBTSTSK EQU   TCBTSFLG
TCBSTAB  EQU   TCB+160
TCBNSTAE EQU   TCBSTAB
TCBTCT   EQU   TCB+164
TCBTCTGF EQU   TCBTCT
TCBSCNDY EQU   TCB+172
TCBNDSP  EQU   TCBSCNDY
TCBNDSP1 EQU   TCBNDSP+1
TCBNDSP2 EQU   TCBNDSP+2
TCBNDSP3 EQU   TCBNDSP+3
TCBJSCB  EQU   TCB+180
TCBRECDE EQU   TCBJSCB
TCBEXT1  EQU   TCB+196
TCBBITS  EQU   TCB+200
TCBNDSP4 EQU   TCBBITS
TCBNDSP5 EQU   TCBBITS+1
TCBFLGS6 EQU   TCBBITS+2
TCBFLGS7 EQU   TCBBITS+3
TCBDAR   EQU   TCB+204
TCBDARC  EQU   TCBDAR
TCBEXT2  EQU   TCB+208
TCBRTWA  EQU   TCB+224
TCBTID   EQU   TCB+238
TCBXSCT  EQU   TCB+240
TCBXSCT1 EQU   TCBXSCT
TCBFOE   EQU   TCB+244
TCBESTAE EQU   TCB+264
TCBESTRM EQU   TCBESTAE+1
TCBFBYT1 EQU   TCB+276
TCBRTM2  EQU   TCBFBYT1
TCBFBYT2 EQU   TCB+277
TCBRV124 EQU   TCB+278
TCBRV133 EQU   TCB+279
TCBXTNT2 EQU   0
TCBGTF   EQU   TCBXTNT2
TCBTFLG  EQU   TCBGTF
TCBRV146 EQU   TCBXTNT2+28
TCBRV155 EQU   TCBXTNT2+29
TCBRV164 EQU   TCBXTNT2+30
TCBRV173 EQU   TCBXTNT2+31
SNPPARMS EQU   0
SNPFLAG  EQU   SNPPARMS+1
SNPSDATA EQU   SNPPARMS+4
SNPSDAT0 EQU   SNPSDATA
SNPSDAT1 EQU   SNPSDATA+1
SNPPDATA EQU   SNPPARMS+6
RMPL     EQU   0
RMPLFLG1 EQU   RMPL
RTM2WA   EQU   0
RTM2DESC EQU   RTM2WA
RTM2RT2D EQU   RTM2DESC+8
RTM2CODE EQU   RTM2WA+28
RTM2CCF  EQU   RTM2CODE
RTM2PGCY EQU   RTM2WA+60
RTM2TRRY EQU   RTM2PGCY
RTM2EEDR EQU   RTM2TRRY
RTM2EREG EQU   RTM2EEDR
RTM2APSW EQU   RTM2EEDR+64
RTM2EPSW EQU   RTM2APSW
RTM2EMK1 EQU   RTM2EPSW
RTM2MWP1 EQU   RTM2EPSW+1
RTM2INT1 EQU   RTM2EPSW+2
RTM2NXT1 EQU   RTM2EPSW+4
RTM2AEC1 EQU   RTM2APSW+8
RTM2ILC1 EQU   RTM2AEC1+1
RTM2INC1 EQU   RTM2AEC1+2
RTM2ICD1 EQU   RTM2INC1+1
RTM2EEDH EQU   RTM2TRRY+92
RTM2STCK EQU   RTM2EEDH
RTM2MCHI EQU   RTM2EEDH+8
RTM2MCHS EQU   RTM2MCHI
RTM2MCHD EQU   RTM2MCHI+1
RTM2RSR1 EQU   RTM2EEDH+12
RTM2RSR2 EQU   RTM2EEDH+13
RTM2FLGS EQU   RTM2TRRY+120
RTM2ERRA EQU   RTM2FLGS
RTM2ERRB EQU   RTM2FLGS+1
RTM2ERRC EQU   RTM2FLGS+2
RTM2ERRD EQU   RTM2FLGS+3
RTM2ERFL EQU   RTM2ERRD
RTM2CVER EQU   RTM2WA+186
RTM2TRRC EQU   RTM2CVER
RTM2IOFS EQU   RTM2TRRC
RTM2IOBP EQU   RTM2TRRC+2
RTM2SCBS EQU   RTM2TRRC+14
RTM2RTCD EQU   RTM2TRRC+26
RTM2SPLL EQU   RTM2RTCD+4
RTM2PARQ EQU   RTM2TRRC+46
RTM2CTL1 EQU   RTM2CVER+50
RTM2CMKA EQU   RTM2CTL1
RTM2MWPA EQU   RTM2CTL1+1
RTM2PMKA EQU   RTM2CTL1+4
RTM2CTL2 EQU   RTM2CVER+58
RTM2CMKP EQU   RTM2CTL2
RTM2MWPP EQU   RTM2CTL2+1
RTM2PMKP EQU   RTM2CTL2+4
RTM2SNAP EQU   RTM2CVER+66
RTM2SPRM EQU   RTM2SNAP+4
RTM2DPSL EQU   RTM2SNAP+24
RTM2FRM1 EQU   RTM2DPSL
RTM2TO1  EQU   RTM2DPSL+4
RTM2FRM2 EQU   RTM2DPSL+8
RTM2TO2  EQU   RTM2DPSL+12
RTM2FRM3 EQU   RTM2DPSL+16
RTM2TO3  EQU   RTM2DPSL+20
RTM2FRM4 EQU   RTM2DPSL+24
RTM2TO4  EQU   RTM2DPSL+28
RTM2SECB EQU   RTM2CVER+138
RTM2ECBA EQU   RTM2SECB
RTM2SFRG EQU   RTM2CVER+186
RTM2SCTL EQU   RTM2CVER+259
RTM2CCTL EQU   RTM2SCTL
RTM2NODP EQU   RTM2CCTL+1
RTM2ABDR EQU   RTM2SCTL+4
RTM2ABID EQU   RTM2ABDR
RTM2ABND EQU   RTM2ABDR+1
RTM2RCTL EQU   RTM2SCTL+6
RTM2INTF EQU   RTM2CVER+266
RTM2CTLR EQU   RTM2INTF
RTM2TSKT EQU   RTM2INTF+2
RTM2ABDP EQU   RTM2INTF+4
RTM2ASIR EQU   RTM2INTF+5
RTM2FLX  EQU   RTM2INTF+6
RTM2FLX1 EQU   RTM2FLX
RTM2FLX2 EQU   RTM2FLX+1
RTM2RECL EQU   RTM2CVER+274
RTM2DCTL EQU   RTM2RECL+12
RTM2ECTL EQU   RTM2RECL+13
RTM2TRYR EQU   RTM2RECL+16
RTM2TRF1 EQU   RTM2TRYR
RTM2TRF2 EQU   RTM2TRYR+2
RTM2RECH EQU   RTM2CVER+294
RTM2RRG  EQU   RTM2CVER+314
RTM2CRG  EQU   RTM2CVER+378
RTM2RMIN EQU   RTM2WA+708
RTM2RMPL EQU   RTM2RMIN+4
RTM2RMWA EQU   RTM2RMIN+28
RTM2ERID EQU   RTM2WA+872
RTM2ENSN EQU   RTM2WA+884
RTM2SNLN EQU   RTM2ENSN
RTM2RYRG EQU   RTM2WA+904
STORAGE  EQU   0
STORFRM  EQU   STORAGE
STORTO   EQU   STORAGE+4
SRBSECT  EQU   0
SRB      EQU   SRBSECT
SRBID    EQU   SRB
SRBFLNK  EQU   SRB+4
SRBASCB  EQU   SRB+8
SRBFLC   EQU   SRB+12
SRBPASID EQU   SRBFLC+2
SRBPTCB  EQU   SRBFLC+4
SRBEP    EQU   SRB+20
SRBRMTR  EQU   SRB+24
SRBPARM  EQU   SRB+28
SRBPTR   EQU   0
ASCB     EQU   0
ASCBSUPC EQU   ASCB+16
ASCBASID EQU   ASCB+36
ASCBRSM  EQU   ASCB+52
ASCBRSMF EQU   ASCBRSM
ASCBDUMP EQU   ASCB+96
ASCBFW1  EQU   ASCB+100
ASCBRCTF EQU   ASCBFW1+2
ASCBFLG1 EQU   ASCBFW1+3
ASCBTERM EQU   ASCBFLG1
ASCBABNT EQU   ASCBFLG1
ASCBASXB EQU   ASCB+108
ASCBDSP1 EQU   ASCB+114
ASCBFAIL EQU   ASCBDSP1
ASCBFLG2 EQU   ASCB+115
ASCBLKGP EQU   ASCB+128
ASCBSRQ  EQU   ASCB+180
ASCBSRQ1 EQU   ASCBSRQ
ASCBSRQ2 EQU   ASCBSRQ+1
ASCBSRQ3 EQU   ASCBSRQ+2
ASCBSRQ4 EQU   ASCBSRQ+3
SCVTSECT EQU   0
SCVTSTAT EQU   SCVTSECT+148
SDWA     EQU   0
SDWAPARM EQU   SDWA
SDWAFIOB EQU   SDWA+4
SDWAABCC EQU   SDWAFIOB
SDWACMPF EQU   SDWAABCC
SDWACMPC EQU   SDWAABCC+1
SDWACTL1 EQU   SDWA+8
SDWACMKA EQU   SDWACTL1
SDWAMWPA EQU   SDWACTL1+1
SDWAPMKA EQU   SDWACTL1+4
SDWACTL2 EQU   SDWA+16
SDWACMKP EQU   SDWACTL2
SDWAMWPP EQU   SDWACTL2+1
SDWAPMKP EQU   SDWACTL2+4
SDWAGRSV EQU   SDWA+24
SDWANAME EQU   SDWA+88
SDWAEC1  EQU   SDWA+104
SDWAEMK1 EQU   SDWAEC1
SDWAMWP1 EQU   SDWAEC1+1
SDWAINT1 EQU   SDWAEC1+2
SDWANXT1 EQU   SDWAEC1+4
SDWAAEC1 EQU   SDWA+112
SDWAILC1 EQU   SDWAAEC1+1
SDWAINC1 EQU   SDWAAEC1+2
SDWAICD1 EQU   SDWAINC1+1
SDWAEC2  EQU   SDWA+120
SDWAEMK2 EQU   SDWAEC2
SDWAMWP2 EQU   SDWAEC2+1
SDWAINT2 EQU   SDWAEC2+2
SDWANXT2 EQU   SDWAEC2+4
SDWAAEC2 EQU   SDWA+128
SDWAILC2 EQU   SDWAAEC2+1
SDWAINC2 EQU   SDWAAEC2+2
SDWAICD2 EQU   SDWAINC2+1
SDWASRSV EQU   SDWA+136
SDWASR03 EQU   SDWASRSV+12
SDWASR04 EQU   SDWASRSV+16
SDWASR09 EQU   SDWASRSV+36
SDWASR13 EQU   SDWASRSV+52
SDWASR14 EQU   SDWASRSV+56
SDWAIDNT EQU   SDWA+200
SDWAMCH  EQU   SDWA+204
SDWASTCK EQU   SDWAMCH
SDWAMCHI EQU   SDWAMCH+8
SDWAMCHS EQU   SDWAMCHI
SDWAMCHD EQU   SDWAMCHI+1
SDWARSR1 EQU   SDWAMCH+12
SDWARSR2 EQU   SDWAMCH+13
SDWAFLGS EQU   SDWA+232
SDWAERRA EQU   SDWAFLGS
SDWAERRB EQU   SDWAFLGS+1
SDWAERRC EQU   SDWAFLGS+2
SDWAERRD EQU   SDWAFLGS+3
SDWACLUP EQU   SDWAERRD
SDWAFMID EQU   SDWA+236
SDWAIOFS EQU   SDWA+238
SDWACPUI EQU   SDWA+239
SDWARTYA EQU   SDWA+240
SDWACPUA EQU   SDWA+248
SDWAPARQ EQU   SDWA+252
SDWARCDE EQU   SDWAPARQ
SDWAACF2 EQU   SDWAPARQ+1
SDWARCRD EQU   SDWAACF2
SDWAUPRG EQU   SDWAACF2
SDWAACF3 EQU   SDWAPARQ+2
SDWAACF4 EQU   SDWAPARQ+3
SDWALKWA EQU   SDWA+256
SDWALKWS EQU   SDWALKWA
SDWAASID EQU   SDWA+288
SDWASEQ# EQU   SDWA+290
SDWARECP EQU   SDWA+292
SDWAMODN EQU   SDWARECP
SDWACSCT EQU   SDWARECP+8
SDWAREXN EQU   SDWARECP+16
SDWASNPA EQU   SDWA+320
SDWADUMP EQU   SDWASNPA
SDWADPFS EQU   SDWADUMP+1
SDWADDAT EQU   SDWASNPA+4
SDWASDAT EQU   SDWADDAT
SDWASDA0 EQU   SDWASDAT
SDWASDA1 EQU   SDWASDAT+1
SDWAPDAT EQU   SDWADDAT+2
SDWADPSA EQU   SDWA+328
SDWADPSL EQU   SDWADPSA
SDWAERTM EQU   SDWA+396
SDWARA   EQU   SDWA+400
SDWADPVA EQU   SDWARA+2
SDWAPTR  EQU   0
FRRS     EQU   0
FRRSHEAD EQU   FRRS
FRRSEMP  EQU   FRRSHEAD
FRRSLAST EQU   FRRSHEAD+4
FRRSELEN EQU   FRRSHEAD+8
FRRSCURR EQU   FRRSHEAD+12
FRRSRTMW EQU   FRRS+16
FRRSENTS EQU   FRRS+84
FRRSPTR  EQU   0
FRRSENTR EQU   0
FRRSFRRA EQU   FRRSENTR
FRRSFLGS EQU   FRRSENTR+4
FRRSFLG1 EQU   FRRSFLGS
FRRSRCUR EQU   FRRSFLG1
FRRSPARM EQU   FRRSENTR+8
FRREPTR  EQU   0
ESTA     EQU   0
ESTAEXT  EQU   ESTA
ESTAFLG1 EQU   ESTAEXT
ESTAIO   EQU   ESTAFLG1
ESTAFGRS EQU   ESTA+12
ESTAFLG2 EQU   ESTAFGRS
ESTAPTR  EQU   0
PVT      EQU   0
PVTFLAG1 EQU   PVT
PVTFLAG2 EQU   PVT+1
PVTQS    EQU   PVT+304
PVTWSAX  EQU   PVT+344
PVTPCBQS EQU   PVT+1852
PVTPRSB  EQU   PVT+1892
ASVT     EQU   0
ASVTMAXU EQU   ASVT+516
ASVTFRST EQU   ASVT+524
ASVTENTY EQU   ASVT+528
ASVTAVAL EQU   ASVTENTY
LCCA     EQU   0
LCCAIHRC EQU   LCCA+520
LCCAIHR1 EQU   LCCAIHRC
LCCAIHR2 EQU   LCCAIHRC+1
LCCAIHR3 EQU   LCCAIHRC+2
LCCAIHR4 EQU   LCCAIHRC+3
LCCASPIN EQU   LCCA+524
LCCASPN1 EQU   LCCASPIN
LCCASPN2 EQU   LCCASPIN+1
LCCASPN3 EQU   LCCASPIN+2
LCCASPN4 EQU   LCCASPIN+3
LCCACPUS EQU   LCCA+536
LCCADSF1 EQU   LCCA+540
LCCADSF2 EQU   LCCA+541
LCCASPSA EQU   LCCA+544
LCCACRFL EQU   LCCA+692
LCCACREX EQU   LCCA+693
LCCALKFG EQU   LCCA+694
LCCASRBF EQU   LCCA+720
RT1TRACK EQU   0
RT1TRECC EQU   RT1TRACK
RT1TLPN  EQU   RT1TRECC
RT1TACQR EQU   RT1TRECC+3
RTMBRTAB EQU   0
RTMBTERM EQU   RTMBRTAB
MODEBYTE EQU   0
EED      EQU   0
EEDDES   EQU   EED+4
EEDFLAGS EQU   EEDDES+1
EEDERROR EQU   EED+8
EEDVARBL EQU   EED+12
SDWORK   EQU   0
SDCNTRL  EQU   SDWORK
SVCDSRBA EQU   SDCNTRL+84
SDSRBADR EQU   SDCNTRL+88
SDSRBBAS EQU   SDCNTRL+92
SVCDOPTS EQU   SDCNTRL+100
SVCDOPT1 EQU   SVCDOPTS
SVCDOPT2 EQU   SVCDOPTS+1
FLAGSONE EQU   SDCNTRL+102
CVRT11   EQU   SDCNTRL+368
CVRT1    EQU   CVRT11+4
CVRT2    EQU   SDCNTRL+376
SDCVRT4  EQU   CVRT2+2
SVCNAME  EQU   SDCNTRL+392
SVCNM1T5 EQU   SVCNAME
SVCNM6T8 EQU   SVCNAME+5
SVCNM7T8 EQU   SVCNM6T8+1
CCWCHAIN EQU   SDCNTRL+400
CCW1     EQU   CCWCHAIN
FLAGS1   EQU   CCW1+4
CCW2     EQU   CCWCHAIN+8
FLAGS2   EQU   CCW2+4
CCW3     EQU   CCWCHAIN+16
FLAGS3   EQU   CCW3+4
SDOUTBUF EQU   SDWORK+432
RCDCCHH  EQU   SDOUTBUF
ASXB     EQU   0
ASXBFTCB EQU   ASXB+4
ASXBSPSA EQU   ASXB+112
ASXBAEQ  EQU   ASXB+168
ASXBSECR EQU   ASXB+199
ASCBSFLG EQU   ASXBSECR
ASXBCASW EQU   ASXB+216
ASXBCRB1 EQU   ASXBCASW
TQE      EQU   0
TQEFLGS  EQU   TQE+14
TQEFLGS2 EQU   TQE+15
TQEVAL   EQU   TQE+16
TQEVALLH EQU   TQEVAL
TQEVALRH EQU   TQEVAL+4
TQEEXIT  EQU   TQE+28
TQEASCB  EQU   TQE+36
TQESRB   EQU   TQE+44
TQEFLGS3 EQU   TQE+88
TQESTCK  EQU   TQE+120
TQEPTR   EQU   0
TPC      EQU   0
IEATPC   EQU   TPC
TPCFLGS1 EQU   IEATPC+4
TPCHDCCQ EQU   IEATPC+12
TPCDMTQE EQU   IEATPC+16
DFD      EQU   TPCDMTQE+4
TPCMNTQE EQU   IEATPC+40
MNIGHT   EQU   TPCMNTQE+16
TPCMFTQE EQU   IEATPC+64
IEATSELM EQU   IEATPC+88
TPCLMTQE EQU   IEATPC+112
TPCWORK  EQU   IEATPC+264
TPCSDIE  EQU   IEATPC+412
TPCPTR   EQU   0
WSAL     EQU   0
WSALSDMP EQU   WSAL+12
WSAG     EQU   0
WSAC     EQU   0
UCB      EQU   0
UCBPTR   EQU   0
UCBOB    EQU   0
UCBJBNR  EQU   UCBOB
UCBFL5   EQU   UCBOB+1
UCBAF    EQU   UCBFL5
UCBSTAT  EQU   UCBOB+3
UCBCHAN  EQU   UCBOB+4
UCBSFLS  EQU   UCBOB+6
UCBFLA   EQU   UCBSFLS
UCBFL1   EQU   UCBFLA
UCBBSY   EQU   UCBFL1
UCBNRY   EQU   UCBFL1
UCBPST   EQU   UCBFL1
UCBCUB   EQU   UCBFL1
UCBFLB   EQU   UCBSFLS+1
UCBCHM   EQU   UCBOB+8
UCBCHM1  EQU   UCBCHM
UCBPTH0  EQU   UCBCHM1
UCBPTH1  EQU   UCBCHM1
UCBWGT   EQU   UCBOB+12
UCBTYP   EQU   UCBOB+16
UCBTBYT1 EQU   UCBTYP
UCB1FEA5 EQU   UCBTBYT1
UCB1FEA6 EQU   UCBTBYT1
UCBTBYT2 EQU   UCBTYP+1
UCB2OPT2 EQU   UCBTBYT2
UCBDUDN1 EQU   UCB2OPT2
UCB2OPT3 EQU   UCBTBYT2
UCBDUDN2 EQU   UCB2OPT3
UCB2OPT4 EQU   UCBTBYT2
UCBRWTAU EQU   UCB2OPT4
UCB2OPT6 EQU   UCBTBYT2
UCB2OPT7 EQU   UCBTBYT2
UCBTBYT3 EQU   UCBTYP+2
UCBDVCLS EQU   UCBTBYT3
UCB3TAPE EQU   UCBDVCLS
UCB3DACC EQU   UCBDVCLS
UCBTBYT4 EQU   UCBTYP+3
UCBEXTPT EQU   UCBOB+20
UCBFLC   EQU   UCBEXTPT
UCBDEV   EQU   UCBOB+24
UCBCMEXT EQU   0
UCBATI   EQU   UCBCMEXT+3
@NM00237 EQU   UCBATI
UCBFLP1  EQU   UCBCMEXT+5
UCBMIHTI EQU   UCBCMEXT+16
@NM00238 EQU   UCBMIHTI
UCBMT    EQU   0
UCBOCR   EQU   0
UCB3540X EQU   0
UCBDKBYT EQU   UCB3540X+6
UCB3800X EQU   0
UCBOPTNS EQU   UCB3800X
UCBACTIV EQU   UCB3800X+3
UCBMDRBF EQU   UCB3800X+36
UCBUCS   EQU   0
UCBUCSOP EQU   UCBUCS+4
UCBFCBOP EQU   UCBUCS+5
IHADCB   EQU   0
DCBPTR   EQU   0
IHADCS00 EQU   0
DCBFDAD  EQU   IHADCS00+5
IHADCS01 EQU   0
DCBDVTBL EQU   IHADCS01
IHADCS11 EQU   0
DCBRELB  EQU   IHADCS11
DCBREL   EQU   DCBRELB+1
DCBBUFCB EQU   IHADCS11+4
DCBDSORG EQU   IHADCS11+10
DCBDSRG1 EQU   DCBDSORG
DCBDSRG2 EQU   DCBDSORG+1
DCBIOBAD EQU   IHADCS11+12
DCBODEB  EQU   DCBIOBAD
DCBLNP   EQU   DCBODEB
DCBQSLM  EQU   DCBLNP
DCBIOBAA EQU   DCBODEB+1
IHADCS50 EQU   0
DCBSVCXL EQU   IHADCS50
DCBEODAD EQU   IHADCS50+4
DCBBFALN EQU   DCBEODAD
DCBHIARC EQU   DCBBFALN
DCBBFTEK EQU   DCBHIARC
DCBBFT   EQU   DCBBFTEK
DCBEXLST EQU   IHADCS50+8
DCBRECFM EQU   DCBEXLST
DCBRECLA EQU   DCBRECFM
IHADCS24 EQU   0
DCBOFLGS EQU   IHADCS24+8
DCBOFLWR EQU   DCBOFLGS
DCBOFOPN EQU   DCBOFLGS
DCBIFLG  EQU   IHADCS24+9
DCBIBPCT EQU   DCBIFLG
DCBMACR  EQU   IHADCS24+10
DCBMACR1 EQU   DCBMACR
DCBMRFE  EQU   DCBMACR1
DCBMRGET EQU   DCBMRFE
DCBMRAPG EQU   DCBMACR1
DCBMRRD  EQU   DCBMRAPG
DCBMRCI  EQU   DCBMACR1
DCBMRMVG EQU   DCBMRCI
DCBMRLCG EQU   DCBMACR1
DCBMRABC EQU   DCBMACR1
DCBMRPT1 EQU   DCBMRABC
DCBMRSBG EQU   DCBMRPT1
DCBMRCRL EQU   DCBMACR1
DCBMRCHK EQU   DCBMRCRL
DCBMRRDX EQU   DCBMRCHK
DCBMRDMG EQU   DCBMACR1
DCBMACR2 EQU   DCBMACR+1
DCBMRPUT EQU   DCBMACR2
DCBMRWRT EQU   DCBMACR2
DCBMRMVP EQU   DCBMACR2
DCBMR5WD EQU   DCBMACR2
DCBMRLDM EQU   DCBMR5WD
DCBMRLCP EQU   DCBMRLDM
DCBMR4WD EQU   DCBMACR2
DCBMRPT2 EQU   DCBMR4WD
DCBMRTMD EQU   DCBMRPT2
DCBMR3WD EQU   DCBMACR2
DCBMRCTL EQU   DCBMR3WD
DCBMRSTK EQU   DCBMRCTL
DCBMR1WD EQU   DCBMACR2
DCBMRSWA EQU   DCBMR1WD
DCBMRDMD EQU   DCBMRSWA
IHADCS25 EQU   0
DCBMACRF EQU   IHADCS25+2
DCBMACF1 EQU   DCBMACRF
DCBMFFE  EQU   DCBMACF1
DCBMFGET EQU   DCBMFFE
DCBMFAPG EQU   DCBMACF1
DCBMFRD  EQU   DCBMFAPG
DCBMFCI  EQU   DCBMACF1
DCBMFMVG EQU   DCBMFCI
DCBMFLCG EQU   DCBMACF1
DCBMFABC EQU   DCBMACF1
DCBMFPT1 EQU   DCBMFABC
DCBMFSBG EQU   DCBMFPT1
DCBMFCRL EQU   DCBMACF1
DCBMFCHK EQU   DCBMFCRL
DCBMFDMG EQU   DCBMACF1
DCBMACF2 EQU   DCBMACRF+1
DCBMFPUT EQU   DCBMACF2
DCBMFWRT EQU   DCBMACF2
DCBMFMVP EQU   DCBMACF2
DCBMF5WD EQU   DCBMACF2
DCBMFLDM EQU   DCBMF5WD
DCBMFLCP EQU   DCBMFLDM
DCBMF4WD EQU   DCBMACF2
DCBMFPT2 EQU   DCBMF4WD
DCBMFTMD EQU   DCBMFPT2
DCBMF3WD EQU   DCBMACF2
DCBMFCTL EQU   DCBMF3WD
DCBMFSTK EQU   DCBMFCTL
DCBMF1WD EQU   DCBMACF2
DCBMFSWA EQU   DCBMF1WD
DCBMFDMD EQU   DCBMFSWA
DCBDEBAD EQU   IHADCS25+4
DCBIFLGS EQU   DCBDEBAD
DCBIFPCT EQU   DCBIFLGS
IHADCS28 EQU   0
DCBOPTCD EQU   IHADCS28
DCBOPTZ  EQU   DCBOPTCD
DEBBASIC EQU   0
DEBTCBAD EQU   DEBBASIC
DEBDEBAD EQU   DEBBASIC+4
DEBIRBAD EQU   DEBBASIC+8
DEBOFLGS EQU   DEBIRBAD
DEBOPATB EQU   DEBBASIC+12
DEBFLGS1 EQU   DEBBASIC+14
DEBUSRPG EQU   DEBBASIC+16
DEBRRQ   EQU   DEBBASIC+20
DEBECBAD EQU   DEBRRQ
DEBDCBAD EQU   DEBBASIC+24
DEBPROTG EQU   DEBDCBAD
DEBAPPAD EQU   DEBBASIC+28
DEBBASND EQU   DEBBASIC+32
DEBPTR   EQU   0
DEBDASD  EQU   0
DEBUCBAD EQU   DEBDASD
DEBDAPTR EQU   0
DEBACSMD EQU   0
DEBVOLSQ EQU   DEBACSMD
DEBVOLBT EQU   DEBVOLSQ
DEBDSNM  EQU   DEBACSMD+4
DEBUTSAA EQU   DEBDSNM
DEBEXPTR EQU   0
DEBACS01 EQU   0
DEBDSNAM EQU   DEBACS01
DEBACS02 EQU   0
DEBDBLK  EQU   DEBACS02
DEBACS03 EQU   0
DEBACS04 EQU   0
DEBTBFRA EQU   DEBACS04
DEBTCCWA EQU   DEBACS04+4
DEBACS05 EQU   0
DEBFUCBA EQU   DEBACS05
DEBLUCBA EQU   DEBACS05+4
DEBACS06 EQU   0
DEBACS07 EQU   0
DEBACS08 EQU   0
DEBSUBNM EQU   0
DEBSBPTR EQU   0
DEB      EQU   0
DEBAVT   EQU   DEB
DEBEOEA  EQU   DEBAVT
DEBEOEAB EQU   DEBEOEA
DEBSIOA  EQU   DEBAVT+4
DEBSIOAB EQU   DEBSIOA
DEBPCIA  EQU   DEBAVT+8
DEBPCIAB EQU   DEBPCIA
DEBCEA   EQU   DEBAVT+12
DEBCEAB  EQU   DEBCEA
DEBXCEA  EQU   DEBAVT+16
DEBXCEAB EQU   DEBXCEA
DEBPREFX EQU   DEB+20
DEBXTNP  EQU   DEBPREFX+8
DEBXTN   EQU   0
DEBXFLG1 EQU   DEBXTN+2
SCHFRR6W EQU   0
SCHFRRF1 EQU   SCHFRR6W
SCHFRRSD EQU   SCHFRRF1
SCHFRREN EQU   SCHFRRF1
SCHFRRNS EQU   SCHFRRF1
SCHFRROS EQU   SCHFRRF1
SCHFRRRP EQU   SCHFRRF1
SCHFRRND EQU   SCHFRRF1
SCHFRRDI EQU   SCHFRRF1
SCHFRRDT EQU   SCHFRRF1
SCHFRRF2 EQU   SCHFRR6W+1
SCHFRRSL EQU   SCHFRRF2
SCHFRRDL EQU   SCHFRRF2
SCHFRRBS EQU   SCHFRRF2
SCHFRRBR EQU   SCHFRR6W+4
SCHFRRSA EQU   SCHFRR6W+8
SCHFRRRA EQU   SCHFRR6W+12
SCHFRRPL EQU   SCHFRR6W+16
SCHFRRRT EQU   SCHFRR6W+20
ASIDENTY EQU   0
ASIDNUMB EQU   ASIDENTY
ASIDLSTF EQU   ASIDNUMB
STORANGE EQU   0
STARTADR EQU   STORANGE
ENDADDR  EQU   STORANGE+4
LASTRNGE EQU   ENDADDR
USERDATA EQU   0
SDUHDRLN EQU   USERDATA
SETDIE   EQU   0
STATUS   EQU   0
IEAVTSSD EQU   0
IEAVPRSR EQU   0
TQENQ    EQU   0
DUMPTTCB EQU   0
IEAVPRSB EQU   0
I001C    EQU   0
I008P    EQU   0
I015F    EQU   0
I015P    EQU   0
I031F    EQU   0
I031P    EQU   0
I256C    EQU   0
PRDINPTR EQU   0
UCBBGN   EQU   0
FLC      EQU   PSA
PSARSVTE EQU   PSARSVT
PSACSTK  EQU   PSARSVTE
CVTPTR   EQU   FLCCVT
CVTS01   EQU   CVTPGSIA
CVTPVTP  EQU   CVTS01+8
CVTLPDIA EQU   CVTS01+12
CVTDIRST EQU   CVTLPDIA
CVTSLIDA EQU   CVTS01+24
CVTCTLFG EQU   CVTS01+50
CVTOPTE  EQU   CVTS01+188
CVTSDRM  EQU   CVTS01+192
CVTASVT  EQU   CVTS01+208
CVTRTMCT EQU   CVTS01+224
CVTSDBF  EQU   CVTS01+240
CVTGSMQ  EQU   CVTS01+264
CVTSPSA  EQU   CVTS01+336
CVTRV210 EQU   CVTS01+424
CVTRV219 EQU   CVTS01+425
CVTRV228 EQU   CVTS01+426
CVTRV237 EQU   CVTS01+427
CVTMFRTR EQU   CVTS01+452
CVTRV262 EQU   CVTS01+468
CVTRV271 EQU   CVTS01+469
CVTRV280 EQU   CVTS01+470
CVTRV289 EQU   CVTS01+471
CVTGSDA  EQU   CVTS01+600
CVTRSUME EQU   CVTS01+676
ASCBPTR  EQU   PSAAOLD
SCVTSPTR EQU   CVTABEND
PVTPTR   EQU   CVTPVTP
ASVTPTR  EQU   CVTASVT
LCCAPTR  EQU   PSALCCAV
RT1W     EQU   FRRSRTMW
RT1WNPRS EQU   RT1W
RT1WLPTA EQU   RT1WNPRS
RT1WPRSV EQU   RT1W+52
RT1WRTCA EQU   RT1WPRSV
RT1WENTR EQU   RT1WPRSV+12
RT1WCOVR EQU   RT1WENTR+2
RT1NODMP EQU   RT1WCOVR
RT1RTRN  EQU   FRRSRTMW
RT1RTRRG EQU   RT1RTRN+4
EEDREGSP EQU   EEDVARBL
EEDREGS  EQU   EEDREGSP
EEDPSW   EQU   EEDREGSP+64
EEDPSW1  EQU   EEDPSW
EEDPSW2  EQU   EEDPSW+8
EEDINILC EQU   EEDPSW2
EEDDUMPO EQU   EEDVARBL
EEDSCDMP EQU   EEDDUMPO
EEDSDDAT EQU   EEDSCDMP+4
EEDHWREP EQU   EEDVARBL
EEDHMCHS EQU   EEDHWREP+8
EEDHMCHD EQU   EEDHWREP+9
EEDHRSRS EQU   EEDHWREP+12
EEDHRSR1 EQU   EEDHRSRS
EEDHRSR2 EQU   EEDHRSRS+1
EEDERMAP EQU   EEDVARBL
EEDERRID EQU   EEDERMAP+70
ASXBPTR  EQU   ASCBASXB
UCBOBS01 EQU   UCBDEV
UCBSTAB  EQU   UCBOBS01+10
UCBBSVL  EQU   UCBSTAB
UCBPRSRS EQU   UCBSTAB
UCBDMCT  EQU   UCBOBS01+11
UCBFL4   EQU   UCBOBS01+13
UCBOBS02 EQU   UCBDEV
UCBTFL1  EQU   UCBOBS02+19
UCBXTN   EQU   UCBOBS02+20
UCBVOPT  EQU   UCBXTN
UCBOBS03 EQU   UCBDEV
UCBXTADR EQU   UCBOBS03
UCBOBS04 EQU   UCBDEV
UCBBTA   EQU   UCBOBS04+12
UCBOBS06 EQU   UCBDEV
UCBAOF   EQU   UCBOBS06
UCBAOF1  EQU   UCBAOF
UCBAOF2  EQU   UCBAOF+1
@NM00236 EQU   UCBOBS06+3
UCBIRB   EQU   UCBOBS06+4
UCBGRAF  EQU   UCBIRB
UCBLDNCA EQU   UCBOBS06+8
UCBRDYQ  EQU   UCBLDNCA
UCBIRLN  EQU   UCBRDYQ
UCBLDNCB EQU   UCBRDYQ+1
UCBCTLNK EQU   UCBOBS06+12
UCBOBS07 EQU   UCBDEV
UCBOBS08 EQU   UCBDEV
UCBCTCAD EQU   UCBOBS08
UCBCTCF1 EQU   UCBOBS08+4
UCBOBS09 EQU   UCBDEV
DEBBAS02 EQU   DEBBASND
DEBDDS1  EQU   DEBBAS02
DEBSUCBA EQU   DEBDDS1
DEBDEVED EQU   DEBDDS1+4
DEBRDCB  EQU   DEBDDS1+4
DEBPDCB  EQU   DEBDDS1+8
DEBWDCB  EQU   DEBDDS1+12
DEBACS09 EQU   DEBDEVED
DEBASC09 EQU   DEBACS09
DEBEAMFG EQU   DEBASC09+3
DEBDSID  EQU   DEBASC09+4
DEBEOD   EQU   DEBASC09+12
DEBBOE   EQU   DEBEOD
DEBEODRV EQU   DEBBOE
DEBEODTT EQU   DEBBOE+1
DEBEOD0  EQU   DEBBOE+2
DEBEODSS EQU   DEBBOE+3
DEBBAS01 EQU   DEBBASND
DEBISAM  EQU   DEBBAS01
DEBFIEAD EQU   DEBISAM
DEBFPEAD EQU   DEBISAM+4
DEBFOEAD EQU   DEBISAM+8
DEBEXPT  EQU   DEBISAM+12
DEBRPSID EQU   DEBEXPT
ERRORID  EQU   RTCTERID
ERRSEQ#  EQU   ERRORID
ERRCPUID EQU   ERRORID+2
ERRASID  EQU   ERRORID+4
ERRTIME  EQU   ERRORID+6
TQEECB   EQU   TQEEXIT
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
DEBEXPTA EQU   DEBEXPT+1
DEBRSV12 EQU   DEBRPSID
DEBRSV11 EQU   DEBRPSID
DEBRSV10 EQU   DEBRPSID
DEBRSV09 EQU   DEBRPSID
DEBRPSAP EQU   DEBRPSID
DEBRPSO  EQU   DEBRPSID
DEBRPSI  EQU   DEBRPSID
DEBRPSP  EQU   DEBRPSID
DEBFOEB  EQU   DEBFOEAD+1
DEBNOEE  EQU   DEBFOEAD
DEBFPEB  EQU   DEBFPEAD+1
DEBNPEE  EQU   DEBFPEAD
DEBFIEB  EQU   DEBFIEAD+1
DEBNIEE  EQU   DEBFIEAD
DEBBOESS EQU   DEBEODSS
DEBBOE0  EQU   DEBEOD0
DEBBOETT EQU   DEBEODTT
DEBBOERV EQU   DEBEODRV
DEBRV008 EQU   DEBDSID+7
DEBWTPTI EQU   DEBDSID+6
DEBEXDTE EQU   DEBDSID
DEBRV007 EQU   DEBEAMFG
DEBRV006 EQU   DEBEAMFG
DEBRV005 EQU   DEBEAMFG
DEBRV004 EQU   DEBEAMFG
DEBSECVL EQU   DEBEAMFG
DEBVAMSG EQU   DEBEAMFG
DEBDSOPN EQU   DEBEAMFG
DEBMULTI EQU   DEBEAMFG
DEBVSEQU EQU   DEBASC09+2
DEBDSSQL EQU   DEBASC09+1
DEBVOLAC EQU   DEBASC09
DEBWDCBA EQU   DEBWDCB+1
DEBRSV08 EQU   DEBWDCB
DEBPDCBA EQU   DEBPDCB+1
DEBRSV07 EQU   DEBPDCB
DEBRDCBA EQU   DEBRDCB+1
DEBRSV06 EQU   DEBRDCB
DEBSUCBB EQU   DEBSUCBA+1
DEBSDVM  EQU   DEBSUCBA
UCBRV066 EQU   UCBOBS09+4
UCBIOSBA EQU   UCBOBS09
UCBRV042 EQU   UCBOBS08+5
UCBRV082 EQU   UCBCTCF1
UCBRV081 EQU   UCBCTCF1
UCBRV080 EQU   UCBCTCF1
UCBRV079 EQU   UCBCTCF1
UCBRV078 EQU   UCBCTCF1
UCBRV077 EQU   UCBCTCF1
UCBRV076 EQU   UCBCTCF1
UCBCTC80 EQU   UCBCTCF1
UCBCTCAL EQU   UCBCTCAD
UCBICNCB EQU   UCBOBS07+4
UCBRV040 EQU   UCBOBS07
UCBCTLNA EQU   UCBCTLNK+1
UCBRLN   EQU   UCBCTLNK
UCBRDYQA EQU   UCBLDNCB
UCBINRLN EQU   UCBIRLN
UCBIRBA  EQU   UCBIRB+1
UCBRV039 EQU   UCBGRAF
UCBDWNR  EQU   UCBGRAF
UCBRPND  EQU   UCBGRAF
UCBUPM   EQU   UCBGRAF
UCBBTAM  EQU   UCBGRAF
UCBDRNO  EQU   UCBGRAF
UCBDRO   EQU   UCBGRAF
UCBOIP   EQU   UCBGRAF
UCBATRCD EQU   @NM00236
UCBSKPFG EQU   @NM00236
UCBRIPND EQU   @NM00236
UCBRTIAC EQU   @NM00236
UCBRSV79 EQU   @NM00236
UCBRSV78 EQU   @NM00236
UCBRSV77 EQU   @NM00236
UCBOLTEP EQU   @NM00236
UCBATNCT EQU   UCBOBS06+2
UCBRSV76 EQU   UCBAOF2
UCBRSV75 EQU   UCBAOF2
UCBRSV74 EQU   UCBAOF2
UCBRSV73 EQU   UCBAOF2
UCBRSV72 EQU   UCBAOF2
UCBRSV71 EQU   UCBAOF2
UCBRSV70 EQU   UCBAOF2
UCBRSV69 EQU   UCBAOF2
UCBRSV68 EQU   UCBAOF1
UCBRSV67 EQU   UCBAOF1
UCBRSV66 EQU   UCBAOF1
UCBRSV65 EQU   UCBAOF1
UCBRSV64 EQU   UCBAOF1
UCBOFNL  EQU   UCBAOF1
UCBOFSP  EQU   UCBAOF1
UCBOFMCR EQU   UCBAOF1
UCBBTB   EQU   UCBBTA+1
UCBDI    EQU   UCBBTA
UCBSNS   EQU   UCBOBS04+8
UCBTEB   EQU   UCBOBS04+4
UCBGCB   EQU   UCBOBS04+3
UCBOPEN  EQU   UCBOBS04+2
UCBSTART EQU   UCBOBS04
UCBXTNB  EQU   UCBXTN+1
UCBRSV22 EQU   UCBVOPT
UCBRSV21 EQU   UCBVOPT
UCBRSV20 EQU   UCBVOPT
UCBESVE  EQU   UCBVOPT
UCBERPC  EQU   UCBVOPT
UCBESVC  EQU   UCBVOPT
UCBEVA   EQU   UCBVOPT
UCBESV   EQU   UCBVOPT
UCBRV009 EQU   UCBTFL1
UCBRV008 EQU   UCBTFL1
UCBRV007 EQU   UCBTFL1
UCBRV006 EQU   UCBTFL1
UCBRV005 EQU   UCBTFL1
UCBDQDSP EQU   UCBTFL1
UCBNSLTP EQU   UCBTFL1
UCBNLTP  EQU   UCBTFL1
UCBRES1B EQU   UCBOBS02+18
UCBFSER  EQU   UCBOBS02+12
@NM00235 EQU   UCBOBS02+4
UCBFSEQ  EQU   UCBOBS02+2
UCBFSCT  EQU   UCBOBS02
UCBNEXP  EQU   UCBOBS01+20
UCBBASE  EQU   UCBOBS01+16
UCBRES1A EQU   UCBOBS01+15
UCBUSER  EQU   UCBOBS01+14
UCBFL47  EQU   UCBFL4
UCBFL46  EQU   UCBFL4
UCBFL45  EQU   UCBFL4
UCBRV065 EQU   UCBFL4
UCBDSS   EQU   UCBFL4
UCBRESVP EQU   UCBFL4
UCBWDAV  EQU   UCBFL4
UCBDAVV  EQU   UCBFL4
UCBSQC   EQU   UCBOBS01+12
UCBDATP  EQU   UCBOBS01+12
UCBDMC   EQU   UCBDMCT
UCBMOUNT EQU   UCBDMCT
UCBBNUL  EQU   UCBSTAB
UCBSHAR  EQU   UCBSTAB
UCBBSTR  EQU   UCBSTAB
UCBBPUB  EQU   UCBSTAB
UCBBPRV  EQU   UCBSTAB
UCBBALB  EQU   UCBPRSRS
UCBPGFL  EQU   UCBSTAB
UCBDVSHR EQU   UCBBSVL
UCBVOLI  EQU   UCBOBS01+4
UCBVTOC  EQU   UCBOBS01
EEDETIME EQU   EEDERRID+6
EEDEASID EQU   EEDERRID+4
EEDECPUI EQU   EEDERRID+2
EEDESEQ# EQU   EEDERRID
@NM00186 EQU   EEDERMAP
EEDHTIME EQU   EEDHWREP+20
EEDHRFSA EQU   EEDHWREP+16
@NM00185 EQU   EEDHWREP+14
EEDHVERQ EQU   EEDHRSR2
EEDHPGFX EQU   EEDHRSR2
EEDHFLSQ EQU   EEDHRSR2
EEDHFSQA EQU   EEDHRSR2
EEDHNUCL EQU   EEDHRSR2
EEDHSPER EQU   EEDHRSR2
EEDHINTC EQU   EEDHRSR2
EEDHOFLN EQU   EEDHRSR2
EEDHCHNG EQU   EEDHRSR1
EEDHMSER EQU   EEDHRSR1
@NM00184 EQU   EEDHRSR1
EEDHCPID EQU   EEDHWREP+10
EEDHTERR EQU   EEDHMCHD
EEDHSOFT EQU   EEDHMCHD
EEDHINSF EQU   EEDHMCHD
EEDHACR  EQU   EEDHMCHD
EEDHSCK  EQU   EEDHMCHD
EEDHPSWU EQU   EEDHMCHD
EEDHREGU EQU   EEDHMCHD
EEDHSKYF EQU   EEDHMCHD
@NM00183 EQU   EEDHMCHS
@NM00182 EQU   EEDHMCHS
EEDHRSRF EQU   EEDHMCHS
EEDRSRC  EQU   EEDHMCHS
EEDINVP  EQU   EEDHMCHS
EEDHTSVL EQU   EEDHMCHS
EEDHRCDF EQU   EEDHMCHS
EEDHSRVL EQU   EEDHMCHS
EEDHSCKE EQU   EEDHWREP+4
EEDHSCKB EQU   EEDHWREP
EEDSDPSL EQU   EEDDUMPO+8
EEDSPDAT EQU   EEDSDDAT+2
EEDSSDAT EQU   EEDSDDAT
EEDSDUMP EQU   EEDSCDMP
EEDTRANS EQU   EEDPSW2+4
EEDINTCD EQU   EEDINILC+2
EEDILC   EQU   EEDINILC+1
@NM00181 EQU   EEDINILC
EEDPSWIC EQU   EEDPSW1+4
EEDPSWMK EQU   EEDPSW1
EEDREG15 EQU   EEDREGS+60
EEDREG14 EQU   EEDREGS+56
EEDREG13 EQU   EEDREGS+52
EEDREG12 EQU   EEDREGS+48
EEDREG11 EQU   EEDREGS+44
EEDREG10 EQU   EEDREGS+40
EEDREG9  EQU   EEDREGS+36
EEDREG8  EQU   EEDREGS+32
EEDREG7  EQU   EEDREGS+28
EEDREG6  EQU   EEDREGS+24
EEDREG5  EQU   EEDREGS+20
EEDREG4  EQU   EEDREGS+16
EEDREG3  EQU   EEDREGS+12
EEDREG2  EQU   EEDREGS+8
EEDREG1  EQU   EEDREGS+4
EEDREG0  EQU   EEDREGS
RT1RTYAD EQU   RT1RTRRG+60
RT1R0R14 EQU   RT1RTRRG
@NM00178 EQU   RT1RTRN
RT1WLPN  EQU   RT1WENTR+3
@NM00177 EQU   RT1WCOVR
RT1WEREX EQU   RT1WCOVR
RT1TRTCA EQU   RT1WCOVR
RT1TLOCL EQU   RT1WCOVR
RT1WRTM  EQU   RT1WCOVR
RT1WCLUP EQU   RT1WCOVR
RT1WSRMD EQU   RT1WENTR+1
RT1WMODE EQU   RT1WENTR
RT1WEED  EQU   RT1WPRSV+8
RT1WSRBR EQU   RT1WPRSV+4
RT1WVARI EQU   RT1WNPRS+32
RT1WPSW2 EQU   RT1WNPRS+28
RT1WPSW1 EQU   RT1WNPRS+24
CVTRV628 EQU   CVTS01+728
CVTRV627 EQU   CVTS01+724
CVTRV626 EQU   CVTS01+720
CVTRV625 EQU   CVTS01+716
CVTRV624 EQU   CVTS01+712
CVTRV623 EQU   CVTS01+708
CVTRV622 EQU   CVTS01+704
CVTRV621 EQU   CVTS01+700
CVTIHASU EQU   CVTS01+696
CVTSUSP  EQU   CVTS01+692
CVTT6SVC EQU   CVTS01+688
CVTCDAL  EQU   CVTS01+684
CVTTCTL  EQU   CVTS01+680
CVTJTERM EQU   CVTS01+672
CVTASMRM EQU   CVTS01+668
CVTTCASP EQU   CVTS01+664
CVT0PT03 EQU   CVTS01+660
CVT0PT0E EQU   CVTS01+656
CVTRV609 EQU   CVTS01+652
CVTCGK   EQU   CVTS01+648
CVTRAC   EQU   CVTS01+644
CVTHSM   EQU   CVTS01+640
CVTRV605 EQU   CVTS01+636
CVTRV604 EQU   CVTS01+632
CVTEFF02 EQU   CVTS01+628
CVTCBBR  EQU   CVTS01+624
CVTSSCR  EQU   CVTS01+620
CVTEVENT EQU   CVTS01+616
CVTCRCA  EQU   CVTS01+612
CVTTPIO  EQU   CVTS01+608
CVTADV   EQU   CVTS01+604
CVTGSDAB EQU   CVTGSDA
CVTQV3   EQU   CVTS01+596
CVTQV2   EQU   CVTS01+592
CVTQV1   EQU   CVTS01+588
CVTRPT   EQU   CVTS01+584
CVTSSRB  EQU   CVTS01+580
CVTCSDRL EQU   CVTS01+576
CVTEXP1  EQU   CVTS01+572
CVTRMPMT EQU   CVTS01+568
CVTRMPTT EQU   CVTS01+564
CVTVPSA  EQU   CVTS01+560
CVTVSTOP EQU   CVTS01+556
CVTGTFR8 EQU   CVTS01+552
CVTQUIT  EQU   CVTS01+548
CVTVACR  EQU   CVTS01+544
CVTWTCB  EQU   CVTS01+540
CVTSTPRS EQU   CVTS01+536
CVT0PT02 EQU   CVTS01+532
CVTDARCM EQU   CVTS01+528
CVTIRECM EQU   CVTS01+524
CVTJRECM EQU   CVTS01+520
CVTVEMS0 EQU   CVTS01+516
CVTSPFRR EQU   CVTS01+512
CVTRLSTG EQU   CVTS01+508
CVT0TC0A EQU   CVTS01+504
CVTGMBR  EQU   CVTS01+500
CVTLFRM  EQU   CVTS01+496
CVTRMBR  EQU   CVTS01+492
CVTVIOP  EQU   CVTS01+488
CVTRV307 EQU   CVTS01+486
CVTRV306 EQU   CVTS01+484
CVTRV305 EQU   CVTS01+482
CVTRV304 EQU   CVTS01+480
CVTRV303 EQU   CVTS01+478
CVTRV302 EQU   CVTS01+476
CVTTRCA  EQU   CVTS01+472
CVTRV297 EQU   CVTRV289
CVTRV296 EQU   CVTRV289
CVTRV295 EQU   CVTRV289
CVTRV294 EQU   CVTRV289
CVTRV293 EQU   CVTRV289
CVTRV292 EQU   CVTRV289
CVTRV291 EQU   CVTRV289
CVTRV290 EQU   CVTRV289
CVTRV288 EQU   CVTRV280
CVTRV287 EQU   CVTRV280
CVTRV286 EQU   CVTRV280
CVTRV285 EQU   CVTRV280
CVTRV284 EQU   CVTRV280
CVTRV283 EQU   CVTRV280
CVTRV282 EQU   CVTRV280
CVTRV281 EQU   CVTRV280
CVTRV279 EQU   CVTRV271
CVTRV278 EQU   CVTRV271
CVTRV277 EQU   CVTRV271
CVTRV276 EQU   CVTRV271
CVTRV275 EQU   CVTRV271
CVTRV274 EQU   CVTRV271
CVTRV273 EQU   CVTRV271
CVTRV272 EQU   CVTRV271
CVTRV270 EQU   CVTRV262
CVTRV269 EQU   CVTRV262
CVTRV268 EQU   CVTRV262
CVTRV267 EQU   CVTRV262
CVTRV266 EQU   CVTRV262
CVTRV265 EQU   CVTRV262
CVTRV264 EQU   CVTRV262
CVTRV263 EQU   CVTRV262
CVTVFP   EQU   CVTS01+464
CVTVSI   EQU   CVTS01+460
CVTVPSIB EQU   CVTS01+456
CVTMFACT EQU   CVTMFRTR
CVTMFCTL EQU   CVTS01+448
CVTPVBP  EQU   CVTS01+444
CVTPWI   EQU   CVTS01+440
CVTRV254 EQU   CVTS01+438
CVTRV253 EQU   CVTS01+436
CVTRV252 EQU   CVTS01+434
CVTRV251 EQU   CVTS01+433
CVTRV250 EQU   CVTS01+432
CVTRV249 EQU   CVTS01+431
CVTRV248 EQU   CVTS01+430
CVTRV247 EQU   CVTS01+429
CVTRV246 EQU   CVTS01+428
CVTRV245 EQU   CVTRV237
CVTRV244 EQU   CVTRV237
CVTRV243 EQU   CVTRV237
CVTRV242 EQU   CVTRV237
CVTRV241 EQU   CVTRV237
CVTRV240 EQU   CVTRV237
CVTRV239 EQU   CVTRV237
CVTRV238 EQU   CVTRV237
CVTRV236 EQU   CVTRV228
CVTRV235 EQU   CVTRV228
CVTRV234 EQU   CVTRV228
CVTRV233 EQU   CVTRV228
CVTRV232 EQU   CVTRV228
CVTRV231 EQU   CVTRV228
CVTRV230 EQU   CVTRV228
CVTRV229 EQU   CVTRV228
CVTRV227 EQU   CVTRV219
CVTRV226 EQU   CVTRV219
CVTRV225 EQU   CVTRV219
CVTRV224 EQU   CVTRV219
CVTRV223 EQU   CVTRV219
CVTRV222 EQU   CVTRV219
CVTRV221 EQU   CVTRV219
CVTRV220 EQU   CVTRV219
CVTRV218 EQU   CVTRV210
CVTRV217 EQU   CVTRV210
CVTRV216 EQU   CVTRV210
CVTRV215 EQU   CVTRV210
CVTRV214 EQU   CVTRV210
CVTRV213 EQU   CVTRV210
CVTRV212 EQU   CVTRV210
CVTRV211 EQU   CVTRV210
CVTLCCAT EQU   CVTS01+420
CVTPCCAT EQU   CVTS01+416
CVTIPCRP EQU   CVTS01+412
CVTIPCRI EQU   CVTS01+408
CVTIPCDS EQU   CVTS01+404
CVTAIDVT EQU   CVTS01+400
CVTSSAP  EQU   CVTS01+396
CVTEHCIR EQU   CVTS01+392
CVTEHDEF EQU   CVTS01+388
CVTDAIR  EQU   CVTS01+384
CVTPERFM EQU   CVTS01+380
CVT044R2 EQU   CVTS01+376
CVTFETCH EQU   CVTS01+372
CVTRSTWD EQU   CVTS01+368
CVTSPOST EQU   CVTS01+364
CVTIOBP  EQU   CVTS01+360
CVTASMVT EQU   CVTS01+356
CVTRECRQ EQU   CVTS01+352
CVTWSAC  EQU   CVTS01+348
CVTRV149 EQU   CVTS01+344
CVTWSAL  EQU   CVTS01+340
CVTGLMN  EQU   CVTS01+332
CVTVEAC0 EQU   CVTS01+328
CVT062R1 EQU   CVTS01+324
CVTRPOST EQU   CVTS01+320
CVTDQIQE EQU   CVTS01+316
CVTCSD   EQU   CVTS01+312
CVTLKRMA EQU   CVTS01+308
CVTRSPIE EQU   CVTS01+304
CVTRENQ  EQU   CVTS01+300
CVTLQCB  EQU   CVTS01+296
CVTFQCB  EQU   CVTS01+292
CVTQCS01 EQU   CVTS01+288
CVTAPFT  EQU   CVTS01+284
CVTPARRL EQU   CVTS01+280
CVTVWAIT EQU   CVTS01+276
CVTGSPL  EQU   CVTS01+272
CVTLSMQ  EQU   CVTS01+268
CVTEXPRO EQU   CVTS01+260
CVTOPCTP EQU   CVTS01+256
CVTSIC   EQU   CVTS01+252
CVTTPIOS EQU   CVTS01+248
CVTRTMS  EQU   CVTS01+244
CVTSCBP  EQU   CVTS01+236
CVTSDMP  EQU   CVTS01+232
CVTSV60  EQU   CVTS01+228
CVTASCBL EQU   CVTS01+220
CVTASCBH EQU   CVTS01+216
CVTGDA   EQU   CVTS01+212
CVTVVMDI EQU   CVTS01+204
CVTAQTOP EQU   CVTS01+200
CVTIOSCS EQU   CVTS01+196
CVTSTXU  EQU   CVTS01+184
CVTQUIS  EQU   CVTS01+180
CVTPARS  EQU   CVTS01+176
CVTS1EE  EQU   CVTS01+172
CVTFRAS  EQU   CVTS01+168
CVTQSAS  EQU   CVTS01+164
CVTCRAS  EQU   CVTS01+160
CVTCRMN  EQU   CVTS01+156
CVTDELCP EQU   CVTS01+152
CVTFRECL EQU   CVTS01+148
CVTGETCL EQU   CVTS01+144
CVTBLDCP EQU   CVTS01+140
CVTAUTHL EQU   CVTS01+136
CVTSCAN  EQU   CVTS01+132
CVTRV144 EQU   CVTS01+130
CVTMAXMP EQU   CVTS01+128
CVTSTCK  EQU   CVTS01+124
CVTRV139 EQU   CVTS01+123
CVTDSSAC EQU   CVTS01+122
CVTRV513 EQU   CVTS01+121
CVTIOSPL EQU   CVTS01+120
CVTPTGT  EQU   CVTS01+116
CVTCSPIE EQU   CVTS01+112
CVTSMFEX EQU   CVTS01+108
CVTOLT0A EQU   CVTS01+104
CVTSRBRT EQU   CVTS01+100
CVTPUTL  EQU   CVTS01+96
CVTASCRL EQU   CVTS01+92
CVTASCRF EQU   CVTS01+88
CVTRV326 EQU   CVTS01+84
CVTRV325 EQU   CVTS01+80
CVTRV324 EQU   CVTS01+76
CVT0VL01 EQU   CVTS01+72
CVTSHRVM EQU   CVTS01+68
CVTRV332 EQU   CVTS01+64
CVTTAS   EQU   CVTS01+60
CVTRSCN  EQU   CVTS01+56
CVTTRAC2 EQU   CVTS01+54
CVTTRACE EQU   CVTS01+52
CVTAPG   EQU   CVTS01+51
CVTSDTRC EQU   CVTCTLFG
CVTGTRCE EQU   CVTCTLFG
CVTNOMP  EQU   CVTCTLFG
CVTRSV79 EQU   CVTCTLFG
CVTDSTAT EQU   CVTCTLFG
CVTRSV78 EQU   CVTCTLFG
CVTRV333 EQU   CVTCTLFG
CVTRV323 EQU   CVTCTLFG
CVTSPVLK EQU   CVTS01+49
CVTRSV77 EQU   CVTS01+48
CVTRV331 EQU   CVTS01+44
CVTRV330 EQU   CVTS01+40
CVTRV329 EQU   CVTS01+36
CVTRV328 EQU   CVTS01+32
CVTRV322 EQU   CVTS01+28
CVTSLID  EQU   CVTSLIDA+1
CVTSYLK  EQU   CVTSLIDA
CVTRV321 EQU   CVTS01+20
CVTRV320 EQU   CVTS01+16
CVTLPDIR EQU   CVTLPDIA+1
CVTRSV69 EQU   CVTDIRST
CVTRSV68 EQU   CVTDIRST
CVTRSV67 EQU   CVTDIRST
CVTRSV66 EQU   CVTDIRST
CVTRSV65 EQU   CVTDIRST
CVTRSV64 EQU   CVTDIRST
CVTRSV63 EQU   CVTDIRST
CVTDICOM EQU   CVTDIRST
CVTLPDSR EQU   CVTS01+4
CVTGETL  EQU   CVTS01
PSARSAV  EQU   PSARSVTE+60
PSARSTK  EQU   PSARSVTE+56
PSAESAV3 EQU   PSARSVTE+52
PSAESTK3 EQU   PSARSVTE+48
PSAESAV2 EQU   PSARSVTE+44
PSAESTK2 EQU   PSARSVTE+40
PSAESAV1 EQU   PSARSVTE+36
PSAESTK1 EQU   PSARSVTE+32
PSAPSAV  EQU   PSARSVTE+28
PSAPSTK  EQU   PSARSVTE+24
PSAMSAV  EQU   PSARSVTE+20
PSAMSTK  EQU   PSARSVTE+16
PSASSAV  EQU   PSARSVTE+12
PSASSTK  EQU   PSARSVTE+8
PSANSTK  EQU   PSARSVTE+4
SDUSERDA EQU   USERDATA+1
@NM00259 EQU   SCHFRR6W+2
DEBXSAMB EQU   DEBXTN+28
DEBXOPNJ EQU   DEBXTN+24
DEBXXARG EQU   DEBXTN+20
DEBXMCF2 EQU   DEBXTN+19
DEBXMCF1 EQU   DEBXTN+18
DEBXDSO2 EQU   DEBXTN+17
DEBXDSO1 EQU   DEBXTN+16
DEBXDBPR EQU   DEBXTN+12
DEBXDCBM EQU   DEBXTN+8
DEBXDSAB EQU   DEBXTN+4
DEBXRV48 EQU   DEBXTN+3
DEBXRV47 EQU   DEBXFLG1
DEBXRV46 EQU   DEBXFLG1
DEBXRV45 EQU   DEBXFLG1
DEBXRV44 EQU   DEBXFLG1
DEBXRV43 EQU   DEBXFLG1
DEBXDSSI EQU   DEBXFLG1
DEBXTSKC EQU   DEBXFLG1
DEBXCDCB EQU   DEBXFLG1
DEBXLNGH EQU   DEBXTN
DEBTBLOF EQU   DEBPREFX+14
DEBAMTYP EQU   DEBPREFX+13
DEBLNGTH EQU   DEBPREFX+12
DEBDCBMK EQU   DEBXTNP
DEBDSCBA EQU   DEBPREFX+1
DEBWKARA EQU   DEBPREFX
DEBXCEAD EQU   DEBXCEA+1
DEBXCENP EQU   DEBXCEAB
DEBRSV35 EQU   DEBXCEAB
DEBRSV34 EQU   DEBXCEAB
DEBRSV33 EQU   DEBXCEAB
DEBRSV32 EQU   DEBXCEAB
DEBCEAD  EQU   DEBCEA+1
DEBCENP  EQU   DEBCEAB
DEBRSV31 EQU   DEBCEAB
DEBRSV30 EQU   DEBCEAB
DEBRSV29 EQU   DEBCEAB
DEBRSV28 EQU   DEBCEAB
DEBPCIAD EQU   DEBPCIA+1
DEBPCINP EQU   DEBPCIAB
DEBRSV27 EQU   DEBPCIAB
DEBRSV26 EQU   DEBPCIAB
DEBRSV25 EQU   DEBPCIAB
DEBRSV24 EQU   DEBPCIAB
DEBSIOAD EQU   DEBSIOA+1
DEBSIONP EQU   DEBSIOAB
DEBFIX   EQU   DEBSIOAB
DEBIOVR  EQU   DEBSIOAB
DEBSIOX  EQU   DEBSIOAB
DEBPGFX  EQU   DEBSIOAB
DEBEOEAD EQU   DEBEOEA+1
DEBEOENP EQU   DEBEOEAB
DEBRSV22 EQU   DEBEOEAB
DEBRSV21 EQU   DEBEOEAB
DEBRSV20 EQU   DEBEOEAB
DEBESMVR EQU   DEBEOEAB
DEBSUBID EQU   DEBSUBNM
DEBSIOA2 EQU   DEBACS08+24
DEBRPSIO EQU   DEBACS08+20
DEBFREED EQU   DEBACS08+16
@NM00258 EQU   DEBACS08+12
@NM00257 EQU   DEBACS08+8
DEBDISAD EQU   DEBACS08+4
@NM00256 EQU   DEBACS08
DEBRPSST EQU   DEBACS07+64
DEBARECK EQU   DEBACS07+60
DEBAREWT EQU   DEBACS07+56
DEBACHK  EQU   DEBACS07+52
DEBAWRIT EQU   DEBACS07+48
DEBASETL EQU   DEBACS07+44
DEBAREAD EQU   DEBACS07+40
DEBCRECK EQU   DEBACS07+36
DEBCREWT EQU   DEBACS07+32
DEBCCHK  EQU   DEBACS07+28
DEBCWRIT EQU   DEBACS07+24
DEBCSETL EQU   DEBACS07+20
DEBCREAD EQU   DEBACS07+16
DEBWKPT5 EQU   DEBACS07+12
DEBWKPT4 EQU   DEBACS07+8
DEBGET   EQU   DEBACS07+4
@NM00255 EQU   DEBACS07
DEBPUT   EQU   DEBACS06+4
DEBDCBFA EQU   DEBACS06
DEBLUCBB EQU   DEBLUCBA+1
DEBRSV18 EQU   DEBLUCBA
DEBFUCBB EQU   DEBFUCBA+1
DEBRSV17 EQU   DEBFUCBA
DEBTCCWB EQU   DEBTCCWA+1
DEBRSV16 EQU   DEBTCCWA
DEBTBFRB EQU   DEBTBFRA+1
DEBRSV15 EQU   DEBTBFRA
DEBDBPEF EQU   DEBACS03+8
DEBDBPP  EQU   DEBACS03+4
DEBDTPP  EQU   DEBACS03
DEBDBPE  EQU   DEBDBLK+1
DEBDBPT  EQU   DEBDBLK
DEBEXTNM EQU   DEBDSNAM
DEBLRECL EQU   DEBACSMD+14
DEBBLKSI EQU   DEBACSMD+12
DEBRSV14 EQU   DEBDSNM+4
DEBUTSAB EQU   DEBUTSAA+1
DEBRSV13 EQU   DEBUTSAA
DEBVOLNM EQU   DEBACSMD+2
DEBVLSEQ EQU   DEBVOLSQ+1
DEBRSV42 EQU   DEBVOLBT
DEBRSV41 EQU   DEBVOLBT
DEBRSV40 EQU   DEBVOLBT
DEBRSV39 EQU   DEBVOLBT
DEBRSV38 EQU   DEBVOLBT
DEBRSV37 EQU   DEBVOLBT
DEBRSV36 EQU   DEBVOLBT
DEBEXFUL EQU   DEBVOLBT
DEBNMTRK EQU   DEBDASD+14
DEBENDHH EQU   DEBDASD+12
DEBENDCC EQU   DEBDASD+10
DEBSTRHH EQU   DEBDASD+8
DEBSTRCC EQU   DEBDASD+6
DEBBINUM EQU   DEBDASD+4
DEBUCBA  EQU   DEBUCBAD+1
DEBDVMOD EQU   DEBUCBAD
DEBAPPB  EQU   DEBAPPAD+1
DEBEXSCL EQU   DEBAPPAD
DEBDCBB  EQU   DEBDCBAD+1
DEBDEBID EQU   DEBPROTG
DEBECBB  EQU   DEBECBAD+1
DEBPRIOR EQU   DEBECBAD
DEBUSRPB EQU   DEBUSRPG+1
DEBNMEXT EQU   DEBUSRPG
DEBRSV05 EQU   DEBBASIC+15
DEBXTNIN EQU   DEBFLGS1
DEBAPFIN EQU   DEBFLGS1
DEBF1CEV EQU   DEBFLGS1
DEBCINDI EQU   DEBFLGS1
DEBRSV02 EQU   DEBFLGS1
DEBRSIOA EQU   DEBFLGS1
DEBEOFDF EQU   DEBFLGS1
DEBPWCKD EQU   DEBFLGS1
DEBQSCNT EQU   DEBBASIC+13
DEBACCS  EQU   DEBOPATB
DEBPOSIT EQU   DEBOPATB
DEBZERO  EQU   DEBOPATB
DEBABEND EQU   DEBOPATB
DEBIRBB  EQU   DEBIRBAD+1
DEBRERR  EQU   DEBOFLGS
DEBLABEL EQU   DEBOFLGS
DEBSPLIT EQU   DEBOFLGS
DEBDCB   EQU   DEBOFLGS
DEBRLSE  EQU   DEBOFLGS
DEBEOF   EQU   DEBOFLGS
DEBDISP  EQU   DEBOFLGS
DEBDEBB  EQU   DEBDEBAD+1
DEBAMLNG EQU   DEBDEBAD
DEBTCBB  EQU   DEBTCBAD+1
DEBNMSUB EQU   DEBTCBAD
@NM00254 EQU   IHADCS28+1
@NM00253 EQU   DCBOPTCD
DCBSRCHD EQU   DCBOPTZ
@NM00252 EQU   DCBOPTCD
DCBDEBA  EQU   DCBDEBAD+1
@NM00251 EQU   DCBIFLGS
DCBIFIOE EQU   DCBIFLGS
DCBCH12  EQU   DCBIFPCT
DCBCH9   EQU   DCBIFPCT
DCBIFEC  EQU   DCBIFLGS
DCBMFSTI EQU   DCBMFDMD
DCBMFAWR EQU   DCBMFSTK
DCBMFUIP EQU   DCBMFTMD
DCBMFIDW EQU   DCBMFLCP
DCBMFWRK EQU   DCBMFMVP
DCBMFRDQ EQU   DCBMFWRT
DCBMFGTQ EQU   DCBMFPUT
DCBMFSTL EQU   DCBMACF2
DCBMFCK  EQU   DCBMFDMG
DCBMFRDX EQU   DCBMFCHK
DCBMFDBF EQU   DCBMFSBG
DCBMFRDI EQU   DCBMFLCG
DCBMFRDK EQU   DCBMFMVG
DCBMFWRQ EQU   DCBMFRD
DCBMFPTQ EQU   DCBMFGET
DCBMFECP EQU   DCBMACF1
DCBTIOT  EQU   IHADCS25
DCBMRSTI EQU   DCBMRDMD
DCBMRAWR EQU   DCBMRSTK
DCBMRUIP EQU   DCBMRTMD
DCBMRIDW EQU   DCBMRLCP
DCBMRWRK EQU   DCBMRMVP
DCBMRRDQ EQU   DCBMRWRT
DCBMRGTQ EQU   DCBMRPUT
DCBMRSTL EQU   DCBMACR2
DCBMRCK  EQU   DCBMRDMG
DCBPGFXA EQU   DCBMRRDX
DCBMRDBF EQU   DCBMRSBG
DCBMRRDI EQU   DCBMRLCG
DCBMRRDK EQU   DCBMRMVG
DCBMRWRQ EQU   DCBMRRD
DCBMRPTQ EQU   DCBMRGET
DCBMRECP EQU   DCBMACR1
@NM00250 EQU   DCBIFLG
DCBIBIOE EQU   DCBIFLG
DCBICH12 EQU   DCBIBPCT
DCBICH9  EQU   DCBIBPCT
DCBIBEC  EQU   DCBIFLG
DCBOFIOF EQU   DCBOFLGS
DCBOFUEX EQU   DCBOFLGS
DCBOFTM  EQU   DCBOFLGS
DCBOFPPC EQU   DCBOFLGS
DCBOFEOV EQU   DCBOFLGS
DCBOFLRB EQU   DCBOFLGS
DCBOFIOD EQU   DCBOFLWR
DCBDDNAM EQU   IHADCS24
DCBEXLSA EQU   DCBEXLST+1
DCBRECKL EQU   DCBRECFM
DCBRECCC EQU   DCBRECFM
DCBRECSB EQU   DCBRECFM
DCBRECBR EQU   DCBRECFM
DCBRECTO EQU   DCBRECLA
DCBRECL  EQU   DCBRECLA
DCBEODA  EQU   DCBEODAD+1
DCBBFA   EQU   DCBBFTEK
DCBH0    EQU   DCBBFTEK
DCBBFTKD EQU   DCBBFTEK
DCBBFTE  EQU   DCBBFT
DCBBFTKR EQU   DCBBFT
DCBBFTS  EQU   DCBBFT
DCBH1    EQU   DCBBFTEK
DCBSVCXA EQU   DCBSVCXL+1
@NM00249 EQU   DCBSVCXL
DCBODEBA EQU   DCBIOBAA
@NM00248 EQU   DCBQSLM
DCBUPDBT EQU   DCBQSLM
DCBUPDCM EQU   DCBQSLM
DCB1DVDS EQU   DCBQSLM
@NM00247 EQU   DCBDSRG2
DCBDSGTR EQU   DCBDSRG2
DCBACBM  EQU   DCBDSRG2
@NM00246 EQU   DCBDSRG2
DCBDSGTQ EQU   DCBDSRG2
DCBDSGTX EQU   DCBDSRG2
DCBDSGGS EQU   DCBDSRG2
DCBDSGU  EQU   DCBDSRG1
DCBDSGPO EQU   DCBDSRG1
@NM00245 EQU   DCBDSRG1
@NM00244 EQU   DCBDSRG1
DCBDSGCX EQU   DCBDSRG1
DCBDSGDA EQU   DCBDSRG1
DCBDSGPS EQU   DCBDSRG1
DCBDSGIS EQU   DCBDSRG1
DCBBUFL  EQU   IHADCS11+8
DCBBUFCA EQU   DCBBUFCB+1
DCBBUFNO EQU   DCBBUFCB
DCBDEVT  EQU   DCBREL
DCBKEYLE EQU   DCBRELB
DCBTRBAL EQU   IHADCS01+6
@NM00243 EQU   IHADCS01+5
@NM00242 EQU   IHADCS01+4
DCBDVTBA EQU   DCBDVTBL+1
@NM00241 EQU   DCBDVTBL
DCBKEYCN EQU   IHADCS00+4
DCBRELAD EQU   IHADCS00
@NM00240 EQU   IHADCB
UCBERADR EQU   UCBUCS+12
UCBFCBID EQU   UCBUCS+8
UCBERCNT EQU   UCBUCS+7
UCBRSV51 EQU   UCBUCS+6
UCBFCBPE EQU   UCBFCBOP
UCBRSV49 EQU   UCBFCBOP
UCBRSV48 EQU   UCBFCBOP
UCBRSV47 EQU   UCBFCBOP
UCBRSV46 EQU   UCBFCBOP
UCBRSV45 EQU   UCBFCBOP
UCBRSV44 EQU   UCBFCBOP
UCBFCBO1 EQU   UCBFCBOP
UCBUCSPE EQU   UCBUCSOP
UCBRSV43 EQU   UCBUCSOP
UCBRSV42 EQU   UCBUCSOP
UCBRSV41 EQU   UCBUCSOP
UCBRSV40 EQU   UCBUCSOP
UCBRSV39 EQU   UCBUCSOP
UCBUCSO2 EQU   UCBUCSOP
UCBUCSO1 EQU   UCBUCSOP
UCBUCSID EQU   UCBUCS
UCBMDRBA EQU   UCBMDRBF+1
UCBRV075 EQU   UCBMDRBF
UCBRV074 EQU   UCB3800X+32
UCBIMAGE EQU   UCB3800X+28
UCBFCBNM EQU   UCB3800X+24
UCBCHAR4 EQU   UCB3800X+20
UCBCHAR3 EQU   UCB3800X+16
UCBCHAR2 EQU   UCB3800X+12
UCBCHAR1 EQU   UCB3800X+8
UCBCGMID EQU   UCB3800X+4
UCBBRSTA EQU   UCBACTIV
UCBRV063 EQU   UCBACTIV
UCBRV062 EQU   UCBACTIV
UCBRV061 EQU   UCBACTIV
UCBRV060 EQU   UCBACTIV
UCBRV059 EQU   UCBACTIV
UCBRV058 EQU   UCBACTIV
UCBRV057 EQU   UCBACTIV
UCBRV050 EQU   UCB3800X+2
UCBCGMNO EQU   UCB3800X+1
UCBRV083 EQU   UCBOPTNS
UCBBRSTR EQU   UCBOPTNS
UCBRV056 EQU   UCBOPTNS
UCBRV055 EQU   UCBOPTNS
UCBRV054 EQU   UCBOPTNS
UCBRV053 EQU   UCBOPTNS
UCBRV052 EQU   UCBOPTNS
UCBRV051 EQU   UCBOPTNS
UCBRV073 EQU   UCB3540X+7
UCBRV072 EQU   UCBDKBYT
UCBRV071 EQU   UCBDKBYT
UCBRV070 EQU   UCBDKBYT
UCBRV069 EQU   UCBDKBYT
UCBRV068 EQU   UCBDKBYT
UCBRV067 EQU   UCBDKBYT
UCBVLVER EQU   UCBDKBYT
UCBDKAMX EQU   UCBDKBYT
UCBVLSER EQU   UCB3540X
UCBRDATA EQU   UCBOCR+4
UCBFRID  EQU   UCBOCR
UCBCLN   EQU   UCBMT+14
UCBERG   EQU   UCBMT+12
UCBMS    EQU   UCBMT+11
UCBNB    EQU   UCBMT+10
UCBPW    EQU   UCBMT+9
UCBPR    EQU   UCBMT+8
UCBSIO   EQU   UCBMT+6
UCBTW    EQU   UCBMT+5
UCBTR    EQU   UCBMT+4
UCBTWT   EQU   UCBMT+3
UCBTRT   EQU   UCBMT+2
UCBCTD   EQU   UCBMT
UCBWTOID EQU   UCBCMEXT+17
@NM00239 EQU   @NM00238
UCBMIHSF EQU   @NM00238
UCBASID  EQU   UCBCMEXT+14
UCBMFCNT EQU   UCBCMEXT+12
UCBPMSK  EQU   UCBCMEXT+10
UCBCCWOF EQU   UCBCMEXT+8
UCBRV041 EQU   UCBCMEXT+6
UCBMIHPB EQU   UCBFLP1
UCBMIHTB EQU   UCBFLP1
UCBERLOG EQU   UCBFLP1
UCBSWAPF EQU   UCBFLP1
UCBINHIO EQU   UCBFLP1
UCBNSWAP EQU   UCBFLP1
UCBSHRUP EQU   UCBFLP1
UCBNSRCH EQU   UCBFLP1
UCBSNSCT EQU   UCBCMEXT+4
UCBHPDV  EQU   @NM00237
UCBHALI  EQU   @NM00237
UCBRSV09 EQU   @NM00237
UCBRSV08 EQU   @NM00237
UCBRSV07 EQU   @NM00237
UCBRSV06 EQU   @NM00237
UCBRSV05 EQU   @NM00237
UCBRSV04 EQU   @NM00237
UCBDTI   EQU   UCBCMEXT+2
UCBSTI   EQU   UCBCMEXT+1
UCBETI   EQU   UCBCMEXT
UCBEXTP  EQU   UCBEXTPT+1
UCBDDRSW EQU   UCBFLC
UCBTICBT EQU   UCBFLC
UCBIVRR  EQU   UCBFLC
UCBIVRS  EQU   UCBFLC
UCBITF   EQU   UCBFLC
UCBUDE   EQU   UCBFLC
UCBWAA   EQU   UCBFLC
UCBATTP  EQU   UCBFLC
UCBUNTYP EQU   UCBTBYT4
UCBRSV11 EQU   UCBDVCLS
UCBRSV10 EQU   UCBDVCLS
UCB3CHAR EQU   UCBDVCLS
UCB3UREC EQU   UCBDVCLS
UCB3DISP EQU   UCBDVCLS
UCB3COMM EQU   UCBDVCLS
UCBDVPWR EQU   UCB2OPT7
UCBVLPWR EQU   UCB2OPT6
UCB2OPT5 EQU   UCBTBYT2
UCBRVDEV EQU   UCBRWTAU
UCBRPS   EQU   UCBDUDN2
UCBRR    EQU   UCBDUDN1
UCB2OPT1 EQU   UCBTBYT2
UCB2OPT0 EQU   UCBTBYT2
UCB1FEA7 EQU   UCBTBYT1
UCBD6250 EQU   UCB1FEA6
UCBD1600 EQU   UCB1FEA5
UCB1FEA4 EQU   UCBTBYT1
UCB1FEA3 EQU   UCBTBYT1
UCB1FEA2 EQU   UCBTBYT1
UCB1FEA1 EQU   UCBTBYT1
UCB1FEA0 EQU   UCBTBYT1
UCBNAME  EQU   UCBOB+13
UCBRV029 EQU   UCBWGT
UCBVHRSN EQU   UCBWGT
UCBVORSN EQU   UCBWGT
UCBMTPXP EQU   UCBWGT
UCBREW   EQU   UCBWGT
UCBPUB   EQU   UCBWGT
UCBOUT   EQU   UCBWGT
UCBIN    EQU   UCBWGT
UCBCPU   EQU   UCBOB+11
UCBLCI   EQU   UCBOB+10
UCBCNT   EQU   UCBOB+9
UCBRV017 EQU   UCBCHM1
UCBRV016 EQU   UCBCHM1
UCBRV015 EQU   UCBCHM1
UCBRV014 EQU   UCBCHM1
UCBSPB   EQU   UCBPTH1
UCBPPB   EQU   UCBPTH1
UCBSPA   EQU   UCBPTH0
UCBPPA   EQU   UCBPTH0
UCBSIGP  EQU   UCBFLB
UCBVALPH EQU   UCBFLB
UCBCRHSN EQU   UCBFLB
UCBCRHRV EQU   UCBFLB
UCBRESVH EQU   UCBFLB
UCBSPST  EQU   UCBFLB
UCBASNS  EQU   UCBFLB
UCBIORST EQU   UCBFLB
UCBQISCE EQU   UCBFL1
UCBACTV  EQU   UCBFL1
UCBSAP   EQU   UCBFL1
UCBNOTRC EQU   UCBCUB
UCBPSNS  EQU   UCBFL1
UCBUSING EQU   UCBPST
UCBNOTRD EQU   UCBNRY
UCBBUSYD EQU   UCBBSY
UCBUA    EQU   UCBCHAN+1
UCBCHA   EQU   UCBCHAN
UCBDADI  EQU   UCBSTAT
UCBSYSR  EQU   UCBSTAT
UCBPRES  EQU   UCBSTAT
UCBALOC  EQU   UCBSTAT
UCBUNLD  EQU   UCBSTAT
UCBRESV  EQU   UCBSTAT
UCBCHGS  EQU   UCBSTAT
UCBONLI  EQU   UCBSTAT
UCBID    EQU   UCBOB+2
UCBALTPH EQU   UCBFL5
UCBALTCU EQU   UCBFL5
UCBNALOC EQU   UCBFL5
UCBENVRD EQU   UCBFL5
UCBVSDR  EQU   UCBFL5
UCBSASK  EQU   UCBFL5
UCBAMV   EQU   UCBAF
UCBDCC   EQU   UCBFL5
UCBMONT  EQU   UCBJBNR
UCBRV011 EQU   UCBJBNR
UCBMMSGP EQU   UCBJBNR
UCBOLDSM EQU   UCBJBNR
UCBRV003 EQU   UCBJBNR
UCBDUC   EQU   UCBJBNR
UCBJES3  EQU   UCBJBNR
UCBVRDEV EQU   UCBJBNR
UCBCMSEG EQU   UCBOB
UCBPFXND EQU   UCB+512
UCBIOQ   EQU   UCB+508
UCBLOCK  EQU   UCB+504
UCBPXST  EQU   UCB+504
@NM00234 EQU   UCB
WSACASMS EQU   WSAC+60
WSACASMD EQU   WSAC+56
WSACCCH  EQU   WSAC+52
WSACRRSA EQU   WSAC+48
WSACREST EQU   WSAC+44
WSACRSTI EQU   WSAC+40
WSACABTM EQU   WSAC+36
WSACMF1  EQU   WSAC+32
WSACEDS0 EQU   WSAC+28
WSACIOS  EQU   WSAC+24
WSACRTMK EQU   WSAC+20
WSACACR  EQU   WSAC+16
WSACTIME EQU   WSAC+12
WSACOPTM EQU   WSAC+8
WSACGTF  EQU   WSAC+4
WSACCWSA EQU   WSAC
WSAGSCHE EQU   WSAG+40
WSAGREST EQU   WSAG+36
WSAGNQDQ EQU   WSAG+32
WSAGMEMT EQU   WSAG+28
WSAGOPTM EQU   WSAG+24
WSAGSTAT EQU   WSAG+20
WSAGEMS0 EQU   WSAG+16
WSAGSSRS EQU   WSAG+12
WSAGRSM  EQU   WSAG+8
WSAGGMFM EQU   WSAG+4
WSAGPGIO EQU   WSAG
WSALACHP EQU   WSAL+56
WSALRSM  EQU   WSAL+52
WSALEVNT EQU   WSAL+48
WSALSTAE EQU   WSAL+44
WSALSTAT EQU   WSAL+40
WSALWAIT EQU   WSAL+36
WSALPOST EQU   WSAL+32
WSALEXIT EQU   WSAL+28
WSALS2EE EQU   WSAL+24
WSALCIRB EQU   WSAL+20
WSALABTM EQU   WSAL+16
WSALRTM2 EQU   WSAL+8
WSALVALC EQU   WSAL+4
WSALCWSA EQU   WSAL
TPCOCL   EQU   IEATPC+416
TPCCLA   EQU   IEATPC+408
TPCCKQ   EQU   IEATPC+404
TPCRSRB  EQU   IEATPC+360
TPCTCWA  EQU   IEATPC+356
TPCCRSAV EQU   IEATPC+352
TPCFRRP  EQU   IEATPC+348
TPCVPTR  EQU   IEATPC+344
TPCMISC  EQU   IEATPC+272
TPCWORKR EQU   TPCWORK+4
TPCWORKL EQU   TPCWORK
TPCSAVE2 EQU   IEATPC+200
TPCSAVE1 EQU   IEATPC+136
@NM00233 EQU   TPCLMTQE+16
@NM00232 EQU   TPCLMTQE+15
@NM00231 EQU   TPCLMTQE+14
@NM00230 EQU   TPCLMTQE+12
@NM00229 EQU   TPCLMTQE+8
@NM00228 EQU   TPCLMTQE+4
@NM00227 EQU   TPCLMTQE
@NM00226 EQU   IEATSELM+16
@NM00225 EQU   IEATSELM+15
@NM00224 EQU   IEATSELM+14
@NM00223 EQU   IEATSELM+12
@NM00222 EQU   IEATSELM+8
@NM00221 EQU   IEATSELM+4
@NM00220 EQU   IEATSELM
@NM00219 EQU   TPCMFTQE+16
@NM00218 EQU   TPCMFTQE+15
@NM00217 EQU   TPCMFTQE+14
@NM00216 EQU   TPCMFTQE+12
@NM00215 EQU   TPCMFTQE+8
@NM00214 EQU   TPCMFTQE+4
@NM00213 EQU   TPCMFTQE
MNIGHTRH EQU   MNIGHT+4
MNIGHTLH EQU   MNIGHT
@NM00212 EQU   TPCMNTQE+15
@NM00211 EQU   TPCMNTQE+14
@NM00210 EQU   TPCMNTQE+12
@NM00209 EQU   TPCMNTQE+8
@NM00208 EQU   TPCMNTQE+4
@NM00207 EQU   TPCMNTQE
@NM00206 EQU   TPCDMTQE+16
@NM00205 EQU   TPCDMTQE+15
@NM00204 EQU   TPCDMTQE+14
@NM00203 EQU   TPCDMTQE+12
@NM00202 EQU   TPCDMTQE+8
@NM00201 EQU   TPCDMTQE
TPCTZORG EQU   IEATPC+8
TPCCC    EQU   IEATPC+7
@NM00200 EQU   IEATPC+5
@NM00199 EQU   TPCFLGS1
TPCSYNC  EQU   TPCFLGS1
TPCABND  EQU   TPCFLGS1
TPCTPCA  EQU   IEATPC
TQESTCKR EQU   TQESTCK+4
TQESTCKL EQU   TQESTCK
TQERSAVE EQU   TQE+116
@NM00198 EQU   TQE+89
@NM00197 EQU   TQEFLGS3
TQEDIE   EQU   TQEFLGS3
TQEDREGS EQU   TQESRB
TQELHPSW EQU   TQE+40
TQETCB   EQU   TQE+32
TQESADDR EQU   TQE+24
TQEMIDN  EQU   TQEFLGS2
TQEMF1   EQU   TQEFLGS2
TQEOPT   EQU   TQEFLGS2
TQELM    EQU   TQEFLGS2
TQEDUM   EQU   TQEFLGS2
TQECRH   EQU   TQEFLGS2
TQEUSER  EQU   TQEFLGS2
TQECOMP  EQU   TQEFLGS2
TQETYPE  EQU   TQEFLGS
TQEXITSP EQU   TQEFLGS
TQEINCOM EQU   TQEFLGS
TQEWLIM  EQU   TQEFLGS
@NM00196 EQU   TQEFLGS
TQETOD   EQU   TQEFLGS
TQEOFF   EQU   TQEFLGS
TQEAID   EQU   TQE+12
TQEBLNK  EQU   TQE+8
TQEFLNK  EQU   TQE+4
TQETQE   EQU   TQE
ASXBEND  EQU   ASXB+232
ASXBRV25 EQU   ASXB+228
ASXBRV24 EQU   ASXB+224
ASXBPT0E EQU   ASXB+220
ASXBCRB4 EQU   ASXBCASW+3
ASXBCRB3 EQU   ASXBCASW+2
ASXBCRB2 EQU   ASXBCASW+1
ASXBCR06 EQU   ASXBCRB1
ASXBCR05 EQU   ASXBCRB1
ASXBCR04 EQU   ASXBCRB1
ASXBCR03 EQU   ASXBCRB1
ASXBCR02 EQU   ASXBCRB1
ASXBCR01 EQU   ASXBCRB1
ASXBTFD  EQU   ASXBCRB1
ASXBPIP  EQU   ASXBCRB1
ASXBCTDC EQU   ASXB+212
ASXBTDCB EQU   ASXB+208
ASXBRV19 EQU   ASXB+204
ASXBSENV EQU   ASXBSECR+1
ASXBRV34 EQU   ASCBSFLG
ASXBRV33 EQU   ASCBSFLG
ASXBRV32 EQU   ASCBSFLG
ASXBRV31 EQU   ASCBSFLG
ASXBRV30 EQU   ASCBSFLG
ASXBRV29 EQU   ASCBSFLG
ASXBRV28 EQU   ASCBSFLG
ASXBRV27 EQU   ASCBSFLG
ASXBUSER EQU   ASXB+192
ASXBLSRB EQU   ASXBAEQ+20
ASXBFSRB EQU   ASXBAEQ+16
ASXBLRQE EQU   ASXBAEQ+12
ASXBFRQE EQU   ASXBAEQ+8
ASXBLIQE EQU   ASXBAEQ+4
ASXBFIQE EQU   ASXBAEQ
ASXBETSK EQU   ASXB+164
ASXBSIRB EQU   ASXB+160
ASXBPSWD EQU   ASXB+152
ASXBPRG  EQU   ASXB+136
ASXBRV26 EQU   ASXB+132
ASXBOUSB EQU   ASXB+128
ASXBDDR  EQU   ASXB+124
ASXBRCTD EQU   ASXB+120
ASXBRSMD EQU   ASXB+116
ASXBFRWA EQU   ASXB+108
ASXBFLSA EQU   ASXB+36
ASXBIHSA EQU   ASXB+32
ASXBRV15 EQU   ASXB+28
ASXBRV14 EQU   ASXB+24
ASXBLWA  EQU   ASXB+20
ASXBMPST EQU   ASXB+16
ASXBRS00 EQU   ASXB+14
ASXBTCBS EQU   ASXB+12
ASXBLTCB EQU   ASXB+8
ASXBASXB EQU   ASXB
ASXBEGIN EQU   ASXB
SDBUFFER EQU   SDWORK+440
DATALEN  EQU   SDOUTBUF+6
KEYLEN   EQU   SDOUTBUF+5
RECORDNO EQU   SDOUTBUF+4
RCDHH    EQU   RCDCCHH+2
RCDCC    EQU   RCDCCHH
SDSMDECB EQU   SDCNTRL+428
SDSMBUFF EQU   SDCNTRL+424
BYTECNT3 EQU   CCW3+6
@NM00195 EQU   CCW3+5
PCI3     EQU   FLAGS3
SKIP3    EQU   FLAGS3
SLI3     EQU   FLAGS3
CC3      EQU   FLAGS3
CD3      EQU   FLAGS3
DATAADR3 EQU   CCW3+1
CMDCODE3 EQU   CCW3
BYTECNT2 EQU   CCW2+6
@NM00194 EQU   CCW2+5
PCI2     EQU   FLAGS2
SKIP2    EQU   FLAGS2
SLI2     EQU   FLAGS2
CC2      EQU   FLAGS2
CD2      EQU   FLAGS2
DATAADR2 EQU   CCW2+1
CMDCODE2 EQU   CCW2
BYTECNT1 EQU   CCW1+6
@NM00193 EQU   CCW1+5
PCI1     EQU   FLAGS1
SKIP1    EQU   FLAGS1
SLI1     EQU   FLAGS1
CMDC1    EQU   FLAGS1
CD1      EQU   FLAGS1
DATAADR1 EQU   CCW1+1
CMDCODE1 EQU   CCW1
SVCNM8   EQU   SVCNM7T8+1
SVCNM7   EQU   SVCNM7T8
SVCNM6   EQU   SVCNM6T8
SVCNM1T4 EQU   SVCNM1T5
@NM00192 EQU   SDCNTRL+388
SVC994ID EQU   SDCNTRL+384
CVRT2SGN EQU   SDCVRT4+5
@NM00191 EQU   SDCVRT4
@NM00190 EQU   CVRT2
SDCVRT1  EQU   CVRT1+2
@NM00189 EQU   CVRT1
@NM00188 EQU   CVRT11
CHCNT    EQU   SDCNTRL+366
TIMCNT   EQU   SDCNTRL+364
DSTINDEX EQU   SDCNTRL+360
SDWRGSV2 EQU   SDCNTRL+288
SDWRGSV1 EQU   SDCNTRL+216
SDRETCOD EQU   SDCNTRL+212
ADDADRWD EQU   SDCNTRL+208
ADDADRWC EQU   SDCNTRL+204
ADDADRWB EQU   SDCNTRL+200
ADDADRWA EQU   SDCNTRL+196
USEEND   EQU   SDCNTRL+192
USESTART EQU   SDCNTRL+188
SPQEADDR EQU   SDCNTRL+184
USERRETA EQU   SDCNTRL+180
PGFRRETA EQU   SDCNTRL+176
SPQERETA EQU   SDCNTRL+172
@NM00187 EQU   SDCNTRL+171
SDWKEY   EQU   SDCNTRL+170
AFFNSAV  EQU   SDCNTRL+168
FREERETA EQU   SDCNTRL+164
LPDERETA EQU   SDCNTRL+160
CDERETA  EQU   SDCNTRL+156
DISPRETA EQU   SDCNTRL+152
SDIORETA EQU   SDCNTRL+148
SVCDLPST EQU   SDCNTRL+136
SVCDMPNM EQU   SDCNTRL+128
ERRORWK  EQU   SDCNTRL+104
FLAGSTWO EQU   SDCNTRL+103
SDWPAGOT EQU   FLAGSONE
FLGFLAST EQU   FLAGSONE
FLGTAPEE EQU   FLAGSONE
FLGRTFUL EQU   FLAGSONE
SVCDNSQA EQU   SVCDOPT2
SVCDNAPA EQU   SVCDOPT2
SVCDNSMD EQU   SVCDOPT2
SVCDSMDP EQU   SVCDOPT2
SVCDSWA  EQU   SVCDOPT2
SVCDCSA  EQU   SVCDOPT2
SVCDTRT  EQU   SVCDOPT1
SVCDLPA  EQU   SVCDOPT1
SVCDRGN  EQU   SVCDOPT1
SVCDLSQA EQU   SVCDOPT1
SVCDSQA  EQU   SVCDOPT1
SVCDNUC  EQU   SVCDOPT1
SVCDPSA  EQU   SVCDOPT1
SVCDAPSA EQU   SVCDOPT1
SDWSDPL  EQU   SDCNTRL+96
ENDADRNT EQU   SDCNTRL+80
RANGEPTR EQU   SDCNTRL+76
GLOBADDR EQU   SDCNTRL+72
LOCALADR EQU   SDCNTRL+68
NUCADDR  EQU   SDCNTRL+64
DACHARAD EQU   SDCNTRL+60
LSTESTAE EQU   SDCNTRL+44
SDIOB    EQU   SDCNTRL+4
SDECB    EQU   SDCNTRL
EEDASID  EQU   EEDERROR+2
EEDERTYP EQU   EEDERROR+1
EEDMODE  EQU   EEDERROR
@NM00180 EQU   EEDDES+2
@NM00179 EQU   EEDFLAGS
EEDNODMP EQU   EEDFLAGS
EEDERFL  EQU   EEDFLAGS
EEDID    EQU   EEDDES
EEDFWRDP EQU   EED
MODETCB  EQU   MODEBYTE
MODESRB  EQU   MODEBYTE
MODETYP1 EQU   MODEBYTE
MODELOC  EQU   MODEBYTE
MODEGSUS EQU   MODEBYTE
MODEGSPN EQU   MODEBYTE
MODEDIS  EQU   MODEBYTE
MODESUPR EQU   MODEBYTE
RTMBXABT EQU   RTMBRTAB+44
RTMBACR  EQU   RTMBRTAB+40
RTMBPROG EQU   RTMBRTAB+36
RTMBMEMT EQU   RTMBRTAB+32
RTMBCABT EQU   RTMBRTAB+28
RTMBPGIO EQU   RTMBRTAB+24
RTMBSVC  EQU   RTMBRTAB+20
RTMBMACH EQU   RTMBRTAB+16
RTMBREST EQU   RTMBRTAB+12
RTMBDAT  EQU   RTMBRTAB+8
RTMBPAD2 EQU   RTMBTERM+6
RTMBBRAN EQU   RTMBTERM+2
RTMBBALR EQU   RTMBTERM
RT1TREGS EQU   RT1TRACK+4
RT1TRETY EQU   RT1TACQR
RT1TLLCK EQU   RT1TACQR
RT1TDISP EQU   RT1TACQR
RT1TENPT EQU   RT1TRECC+2
RT1TLPID EQU   RT1TRECC+1
LCCAR125 EQU   LCCA+964
LCCAR124 EQU   LCCA+960
LCCASGPR EQU   LCCA+896
LCCADRT2 EQU   LCCA+888
LCCADRT1 EQU   LCCA+880
LCCAR103 EQU   LCCA+876
LCCAESS2 EQU   LCCA+872
LCCASPLJ EQU   LCCA+868
LCCASMQJ EQU   LCCA+864
LCCAIRT  EQU   LCCA+736
LCCAASID EQU   LCCA+732
LCCARV89 EQU   LCCA+728
LCCAPGTA EQU   LCCASRBF+2
LCCASAFN EQU   LCCASRBF
LCCAECSA EQU   LCCA+716
LCCAICR0 EQU   LCCA+712
LCCALWTM EQU   LCCA+704
LCCARV78 EQU   LCCA+700
LCCAPINV EQU   LCCA+696
LCCARV88 EQU   LCCA+695
LCCARV87 EQU   LCCALKFG
LCCARV86 EQU   LCCALKFG
LCCARV85 EQU   LCCALKFG
LCCARV84 EQU   LCCALKFG
LCCALKRD EQU   LCCALKFG
LCCALKAQ EQU   LCCALKFG
LCCALKSA EQU   LCCALKFG
LCCALKDP EQU   LCCALKFG
LCCACRST EQU   LCCACREX
LCCACRDP EQU   LCCACREX
LCCACRLM EQU   LCCACREX
LCCACRIN EQU   LCCACREX
LCCACRRT EQU   LCCACREX
LCCACRLE EQU   LCCACREX
LCCACRRM EQU   LCCACREX
LCCACREF EQU   LCCACREX
LCCAVARY EQU   LCCACRFL
LCCARV73 EQU   LCCACRFL
LCCARV72 EQU   LCCACRFL
LCCARV71 EQU   LCCACRFL
LCCARV70 EQU   LCCACRFL
LCCARV69 EQU   LCCACRFL
LCCACLMS EQU   LCCACRFL
LCCACRTM EQU   LCCACRFL
LCCALCR0 EQU   LCCA+688
LCCACRLC EQU   LCCA+684
LCCARCPU EQU   LCCA+680
LCCADCPU EQU   LCCA+676
LCCASRBJ EQU   LCCA+672
LCCADSSR EQU   LCCA+668
LCCADSSC EQU   LCCA+660
LCCADSS3 EQU   LCCA+648
LCCADSS2 EQU   LCCA+636
LCCADSS1 EQU   LCCA+624
LCCAWTIM EQU   LCCA+616
LCCAITOD EQU   LCCA+608
LCCADTOD EQU   LCCA+600
LCCASTOD EQU   LCCA+592
LCCARIR5 EQU   LCCASPSA+44
LCCARIR4 EQU   LCCASPSA+40
LCCARIR3 EQU   LCCASPSA+36
LCCARIR2 EQU   LCCASPSA+32
LCCARPR5 EQU   LCCASPSA+28
LCCARPR4 EQU   LCCASPSA+24
LCCARPR3 EQU   LCCASPSA+20
LCCARPR2 EQU   LCCASPSA+16
LCCADSR5 EQU   LCCASPSA+12
LCCADSR4 EQU   LCCASPSA+8
LCCADSR3 EQU   LCCASPSA+4
LCCADSR2 EQU   LCCASPSA
LCCARV68 EQU   LCCA+543
LCCAPSMK EQU   LCCA+542
LCCARV67 EQU   LCCADSF2
LCCARV66 EQU   LCCADSF2
LCCARV65 EQU   LCCADSF2
LCCARV64 EQU   LCCADSF2
LCCADSRW EQU   LCCADSF2
LCCADSPL EQU   LCCADSF2
LCCAGSRB EQU   LCCADSF2
LCCASRBM EQU   LCCADSF2
LCCARV61 EQU   LCCADSF1
LCCARV60 EQU   LCCADSF1
LCCARV59 EQU   LCCADSF1
LCCARV58 EQU   LCCADSF1
LCCATIMR EQU   LCCADSF1
LCCADSS  EQU   LCCADSF1
LCCAVCPU EQU   LCCADSF1
LCCAACR  EQU   LCCADSF1
LCCAASCP EQU   LCCA+532
LCCAESSA EQU   LCCA+528
LCCARV55 EQU   LCCASPN4
LCCARV54 EQU   LCCASPN4
LCCARV53 EQU   LCCASPN4
LCCARV52 EQU   LCCASPN4
LCCARV51 EQU   LCCASPN4
LCCARV50 EQU   LCCASPN4
LCCARV49 EQU   LCCASPN4
LCCARV48 EQU   LCCASPN4
LCCARV47 EQU   LCCASPN3
LCCARV46 EQU   LCCASPN3
LCCARV45 EQU   LCCASPN3
LCCARV44 EQU   LCCASPN3
LCCARV43 EQU   LCCASPN3
LCCARV42 EQU   LCCASPN3
LCCARV41 EQU   LCCASPN3
LCCARV40 EQU   LCCASPN3
LCCARV39 EQU   LCCASPN2
LCCARV38 EQU   LCCASPN2
LCCARV37 EQU   LCCASPN2
LCCARV36 EQU   LCCASPN2
LCCARV35 EQU   LCCASPN2
LCCARV34 EQU   LCCASPN2
LCCARV33 EQU   LCCASPN2
LCCARV32 EQU   LCCASPN2
LCCARV31 EQU   LCCASPN1
LCCARV30 EQU   LCCASPN1
LCCAMFIO EQU   LCCASPN1
LCCARSTR EQU   LCCASPN1
LCCATSPN EQU   LCCASPN1
LCCALOCK EQU   LCCASPN1
LCCASIGP EQU   LCCASPN1
LCCAPTLB EQU   LCCASPN1
LCCARV27 EQU   LCCAIHR4
LCCARV26 EQU   LCCAIHR4
LCCARV25 EQU   LCCAIHR4
LCCARV24 EQU   LCCAIHR4
LCCARV23 EQU   LCCAIHR4
LCCARV22 EQU   LCCAIHR4
LCCARV21 EQU   LCCAIHR4
LCCARV20 EQU   LCCAIHR4
LCCARV19 EQU   LCCAIHR3
LCCARV18 EQU   LCCAIHR3
LCCARV17 EQU   LCCAIHR3
LCCARV16 EQU   LCCAIHR3
LCCARV15 EQU   LCCAIHR3
LCCARV14 EQU   LCCAIHR3
LCCARV13 EQU   LCCAIHR3
LCCARV12 EQU   LCCAIHR3
LCCARV11 EQU   LCCAIHR2
LCCARV10 EQU   LCCAIHR2
LCCARV09 EQU   LCCAIHR2
LCCARV08 EQU   LCCAIHR2
LCCARV07 EQU   LCCAIHR2
LCCARV06 EQU   LCCAIHR2
LCCARV05 EQU   LCCAIHR2
LCCARV04 EQU   LCCAIHR2
LCCARV03 EQU   LCCAIHR1
LCCARV02 EQU   LCCAIHR1
LCCARV01 EQU   LCCAIHR1
LCCAPPIE EQU   LCCAIHR1
LCCAPSG1 EQU   LCCAIHR1
LCCAPDAT EQU   LCCAIHR1
LCCAXRC2 EQU   LCCAIHR1
LCCAXRC1 EQU   LCCAIHR1
LCCAIOPS EQU   LCCA+512
LCCAGPGR EQU   LCCA+448
LCCAR133 EQU   LCCA+444
LCCAR132 EQU   LCCA+440
LCCAR131 EQU   LCCA+436
LCCAR130 EQU   LCCA+432
LCCAR129 EQU   LCCA+428
LCCAR128 EQU   LCCA+424
LCCAR127 EQU   LCCA+420
LCCAR126 EQU   LCCA+416
LCCARSGR EQU   LCCA+352
LCCAXGR3 EQU   LCCA+288
LCCAXGR2 EQU   LCCA+224
LCCAXGR1 EQU   LCCA+160
LCCACR0  EQU   LCCA+156
LCCAMCR1 EQU   LCCA+152
LCCAPVAD EQU   LCCA+148
LCCAPINT EQU   LCCA+144
LCCAPPSW EQU   LCCA+136
LCCAPGR2 EQU   LCCA+72
LCCAPGR1 EQU   LCCA+8
LCCARV77 EQU   LCCA+6
LCCACPUA EQU   LCCA+4
LCCALCCA EQU   LCCA
ASVTEND  EQU   ASVT+528
ASVTAVAI EQU   ASVTFRST
ASVTRS00 EQU   ASVT+520
ASVTASVT EQU   ASVT+512
ASVTBEGN EQU   ASVT+512
@NM00176 EQU   ASVT
PVTEND   EQU   PVT+1944
PVTTASID EQU   PVT+1942
PVTXXXXX EQU   PVT+1940
PVTMVCLC EQU   PVT+1936
PVTVCONS EQU   PVT+1896
PVTCIOQL EQU   PVTPCBQS+36
PVTCIOQF EQU   PVTPCBQS+32
PVTGFADL EQU   PVTPCBQS+28
PVTGFADF EQU   PVTPCBQS+24
PVTFPCBL EQU   PVTPCBQS+20
PVTFPCBF EQU   PVTPCBQS+16
PVTPCBQR EQU   PVTPCBQS
PVTLPAFX EQU   PVT+1850
PVTLSQAF EQU   PVT+1848
PVTLPAR  EQU   PVT+1844
PVTLPAI  EQU   PVT+1840
PVTLPAFC EQU   PVT+1838
PVTCHUIC EQU   PVT+1836
PVTCOMFX EQU   PVT+1834
PVTSQAFX EQU   PVT+1832
PVTCNTFX EQU   PVT+1830
PVTDEFFX EQU   PVT+1828
PVTFIXOK EQU   PVT+1826
PVTPEROK EQU   PVT+1824
PVTMAXFX EQU   PVT+1822
PVTPERFX EQU   PVT+1820
PVTRSRB  EQU   PVT+1776
PVTRESV5 EQU   PVT+1773
PVTSRBS  EQU   PVT+1772
PVTSSRB  EQU   PVT+1768
PVTACA   EQU   PVTWSAX+1400
PVTSAVE  EQU   PVTWSAX+1328
PVTWSA18 EQU   PVTWSAX+1256
PVTWSA17 EQU   PVTWSAX+1184
PVTWSA16 EQU   PVTWSAX+1112
PVTWSA15 EQU   PVTWSAX+1040
PVTWSA14 EQU   PVTWSAX+968
PVTWSA13 EQU   PVTWSAX+896
PVTWSA12 EQU   PVTWSAX+824
PVTWSA11 EQU   PVTWSAX+752
PVTWSA10 EQU   PVTWSAX+672
PVTWSA9  EQU   PVTWSAX+592
PVTWSA8  EQU   PVTWSAX+504
PVTWSA7  EQU   PVTWSAX+432
PVTWSA6  EQU   PVTWSAX+360
PVTWSA5  EQU   PVTWSAX+288
PVTWSA4  EQU   PVTWSAX+216
PVTWSA3  EQU   PVTWSAX+144
PVTWSA2  EQU   PVTWSAX+72
PVTWSA1  EQU   PVTWSAX
PVTPFTQR EQU   PVTQS+20
PVTRSBQL EQU   PVTQS+18
PVTRSBQF EQU   PVTQS+16
PVTSQAQL EQU   PVTQS+14
PVTSQAQF EQU   PVTQS+12
PVTCFQL  EQU   PVTQS+10
PVTCFQF  EQU   PVTQS+8
PVTRSRVL EQU   PVTQS+6
PVTRSRVF EQU   PVTQS+4
PVTAFQL  EQU   PVTQS+2
PVTAFQF  EQU   PVTQS
PVTSPFR  EQU   PVT+302
PVTCFMCT EQU   PVT+300
PVTSPREC EQU   PVT+296
PVTCAREC EQU   PVT+292
PVTCAOUT EQU   PVT+288
PVTCAIN  EQU   PVT+284
PVTNSWPS EQU   PVT+280
PVTNPREC EQU   PVT+276
PVTSPOUT EQU   PVT+272
PVTSPIN  EQU   PVT+268
PVTVAMR  EQU   PVT+264
PVTVAMO  EQU   PVT+260
PVTVAMI  EQU   PVT+256
PVTNPOUT EQU   PVT+252
PVTNPIN  EQU   PVT+248
PVTPRSET EQU   PVT+244
PVTFRSLT EQU   PVT+240
PVTPAGIO EQU   PVT+236
PVTSWPIO EQU   PVT+232
PVTPSWPP EQU   PVT+228
PVTPPREF EQU   PVT+224
PVTPOPBR EQU   PVT+220
PVTPRELF EQU   PVT+216
PVTPRELV EQU   PVT+212
PVTPFREE EQU   PVT+208
PVTPRELS EQU   PVT+204
PVTPOUT  EQU   PVT+200
PVTPFXLD EQU   PVT+196
PVTPITAS EQU   PVT+192
PVTPSRBP EQU   PVT+188
PVTPDSEG EQU   PVT+184
PVTPCSGB EQU   PVT+180
PVTPCSEG EQU   PVT+176
PVTPINV  EQU   PVT+172
PVTPSWPC EQU   PVT+168
PVTPSOUT EQU   PVT+164
PVTPSWIN EQU   PVT+160
PVTPRCV  EQU   PVT+156
PVTPRCFI EQU   PVT+152
PVTPRCF  EQU   PVT+148
PVTPVRC  EQU   PVT+144
PVTPVRIN EQU   PVT+140
PVTPVRLS EQU   PVT+136
PVTPVEQR EQU   PVT+132
PVTPPIOI EQU   PVT+128
PVTPVRPO EQU   PVT+124
PVTPRFR  EQU   PVT+120
PVTPFP2  EQU   PVT+116
PVTPFP   EQU   PVT+112
PVTPFTE  EQU   PVT+108
PVTPCB   EQU   PVT+104
PVTREP2  EQU   PVT+100
PVTPIOCP EQU   PVT+96
PVTPIOP  EQU   PVT+92
PVTPGFAD EQU   PVT+88
PVTPGFA  EQU   PVT+84
PVTPSQA  EQU   PVT+80
PVTPSINT EQU   PVT+76
PVTPSIB  EQU   PVT+72
PVTSRBID EQU   PVT+68
PVTPCIWA EQU   PVT+64
PVTHQSA  EQU   PVT+62
PVTLQSA  EQU   PVT+60
PVTOROOT EQU   PVT+56
PVTPRCA  EQU   PVT+52
PVTREUS  EQU   PVT+48
PVTSQNPC EQU   PVT+47
PVTSQVRC EQU   PVT+46
PVTRSUS  EQU   PVT+44
PVTVROOT EQU   PVT+40
PVTPCBLO EQU   PVT+38
PVTPCBCT EQU   PVT+36
PVTDFRS  EQU   PVT+34
PVTRSQA  EQU   PVT+32
PVTPTLB  EQU   PVT+31
PVTPCBNO EQU   PVT+30
PVTSRBNO EQU   PVT+29
PVTSQDC  EQU   PVT+28
PVTLCSA  EQU   PVT+26
PVTLPRIV EQU   PVT+24
PVTLVR   EQU   PVT+22
PVTFVR   EQU   PVT+20
PVTLPFN  EQU   PVT+18
PVTFPFN  EQU   PVT+16
PVTPFTP  EQU   PVT+12
PVTSSPIN EQU   PVT+11
PVTPCBS  EQU   PVT+10
PVTPOOL  EQU   PVT+8
PVTAFCOK EQU   PVT+6
PVTAFCLO EQU   PVT+4
PVTAFC   EQU   PVT+2
@NM00175 EQU   PVTFLAG2
PVTRSMGM EQU   PVTFLAG2
PVTDUMP  EQU   PVTFLAG1
PVTSIT   EQU   PVTFLAG1
PVTLSI   EQU   PVTFLAG1
PVTAPREF EQU   PVTFLAG1
PVTPCBLT EQU   PVTFLAG1
PVTSRBIU EQU   PVTFLAG1
PVTBGMS  EQU   PVTFLAG1
PVTPMSG  EQU   PVTFLAG1
ESTARSVI EQU   ESTAFGRS+1
@NM00174 EQU   ESTAFLG2
ESTABRNT EQU   ESTAFLG2
@NM00173 EQU   ESTAFLG2
ESTAEREC EQU   ESTAFLG2
ESTATERM EQU   ESTAFLG2
@NM00172 EQU   ESTAFLG2
ESTAOWNR EQU   ESTA+8
ESTAPARM EQU   ESTA+4
ESTAEXIT EQU   ESTAEXT+1
ESTAHALT EQU   ESTAIO
ESTANOIO EQU   ESTAIO
ESTASYNC EQU   ESTAFLG1
@NM00171 EQU   ESTAFLG1
ESTAESTA EQU   ESTAFLG1
@NM00170 EQU   ESTAFLG1
ESTASTAR EQU   ESTAFLG1
ESTASTAI EQU   ESTAFLG1
@NM00169 EQU   FRRSFLGS+1
@NM00168 EQU   FRRSFLG1
FRRSNEST EQU   FRRSFLG1
@NM00167 EQU   SDWA+512
SDWAVRA  EQU   SDWARA+4
SDWAURAL EQU   SDWARA+3
@NM00166 EQU   SDWADPVA
SDWAEBC  EQU   SDWADPVA
SDWAHEX  EQU   SDWADPVA
SDWAVRAL EQU   SDWARA
SDWACOMP EQU   SDWA+392
SDWARCPL EQU   SDWA+364
@NM00165 EQU   SDWADPSA+32
SDWATO4  EQU   SDWADPSL+28
SDWAFRM4 EQU   SDWADPSL+24
SDWATO3  EQU   SDWADPSL+20
SDWAFRM3 EQU   SDWADPSL+16
SDWATO2  EQU   SDWADPSL+12
SDWAFRM2 EQU   SDWADPSL+8
SDWATO1  EQU   SDWADPSL+4
SDWAFRM1 EQU   SDWADPSL
@NM00164 EQU   SDWADDAT+3
@NM00163 EQU   SDWAPDAT
SDWAUSPL EQU   SDWAPDAT
SDWADPSW EQU   SDWAPDAT
SDWATJPA EQU   SDWAPDAT
SDWATLPA EQU   SDWAPDAT
SDWADREG EQU   SDWAPDAT
SDWADSAH EQU   SDWAPDAT
SDWADSAS EQU   SDWAPDAT
@NM00162 EQU   SDWASDA1
SDWAERR  EQU   SDWASDA1
SDWAIO   EQU   SDWASDA1
SDWADM   EQU   SDWASDA0
SDWAQQS  EQU   SDWASDA0
SDWACBS  EQU   SDWASDA0
SDWAGTF  EQU   SDWASDA0
SDWASWA  EQU   SDWASDA0
SDWALSQA EQU   SDWASDA0
SDWASQA  EQU   SDWASDA0
SDWANUC  EQU   SDWASDA0
@NM00161 EQU   SDWADUMP+2
@NM00160 EQU   SDWADPFS
SDWASLST EQU   SDWADPFS
@NM00159 EQU   SDWADPFS
SDWAENSN EQU   SDWADPFS
SDWADLST EQU   SDWADPFS
SDWADPT  EQU   SDWADPFS
SDWADPID EQU   SDWADUMP
SDWADPLA EQU   SDWA+316
SDWATALW EQU   SDWALKWS+28
SDWATDLW EQU   SDWALKWS+24
SDWATNLW EQU   SDWALKWS+20
SDWAAPLW EQU   SDWALKWS+16
SDWAIPLW EQU   SDWALKWS+12
SDWAILLW EQU   SDWALKWS+8
SDWAIULW EQU   SDWALKWS+4
SDWAICLW EQU   SDWALKWS
SDWAFLLK EQU   SDWAACF4
SDWACMS  EQU   SDWAACF4
SDWAOPTM EQU   SDWAACF4
SDWATADB EQU   SDWAACF4
SDWATDNB EQU   SDWAACF4
SDWATNCB EQU   SDWAACF4
SDWAILCH EQU   SDWAACF4
SDWAIUCB EQU   SDWAACF4
SDWAICAT EQU   SDWAACF3
SDWAIPRG EQU   SDWAACF3
SDWASALL EQU   SDWAACF3
SDWAASMP EQU   SDWAACF3
SDWADISP EQU   SDWAACF3
@NM00158 EQU   SDWAACF3
@NM00157 EQU   SDWAACF2
SDWAFREE EQU   SDWAACF2
@NM00156 EQU   SDWAACF2
SDWASPIN EQU   SDWAACF2
@NM00155 EQU   SDWAACF2
SDWALCPU EQU   SDWACPUA+2
@NM00154 EQU   SDWACPUA
SDWARECA EQU   SDWA+244
@NM00153 EQU   SDWAIOFS
SDWANIOP EQU   SDWAIOFS
SDWANOIO EQU   SDWAIOFS
SDWAIOHT EQU   SDWAIOFS
SDWAIOQR EQU   SDWAIOFS
SDWAERFL EQU   SDWAERRD
SDWAMCIV EQU   SDWAERRD
SDWARPIV EQU   SDWAERRD
SDWAMABD EQU   SDWAERRD
SDWACTS  EQU   SDWAERRD
SDWASTAE EQU   SDWAERRD
SDWANRBE EQU   SDWAERRD
@NM00152 EQU   SDWAERRC
SDWAEAS  EQU   SDWAERRC
SDWAPERC EQU   SDWAERRC
SDWAIRB  EQU   SDWAERRC
SDWASTAI EQU   SDWAERRC
SDWASTAF EQU   SDWAERRC
SDWASRBM EQU   SDWAERRB
SDWALDIS EQU   SDWAERRB
SDWAENRB EQU   SDWAERRB
SDWATYP1 EQU   SDWAERRB
@NM00151 EQU   SDWAERRB
SDWAPGIO EQU   SDWAERRA
SDWATEXC EQU   SDWAERRA
SDWASVCE EQU   SDWAERRA
SDWAABTM EQU   SDWAERRA
SDWASVCD EQU   SDWAERRA
SDWARKEY EQU   SDWAERRA
SDWAPCHK EQU   SDWAERRA
SDWAMCHK EQU   SDWAERRA
SDWATIME EQU   SDWAMCH+20
SDWARFSA EQU   SDWAMCH+16
@NM00150 EQU   SDWAMCH+14
SDWAVEQR EQU   SDWARSR2
SDWAPGFX EQU   SDWARSR2
SDWAFLSQ EQU   SDWARSR2
SDWAFSQA EQU   SDWARSR2
SDWANUCL EQU   SDWARSR2
SDWASPER EQU   SDWARSR2
SDWAINTC EQU   SDWARSR2
SDWAOFLN EQU   SDWARSR2
SDWACHNG EQU   SDWARSR1
SDWAMSER EQU   SDWARSR1
@NM00149 EQU   SDWARSR1
SDWACPID EQU   SDWAMCH+10
SDWATERR EQU   SDWAMCHD
SDWAFPRX EQU   SDWAMCHD
SDWAINSF EQU   SDWAMCHD
SDWAACR  EQU   SDWAMCHD
SDWASCK  EQU   SDWAMCHD
SDWAPSWU EQU   SDWAMCHD
SDWAREGU EQU   SDWAMCHD
SDWASKYF EQU   SDWAMCHD
@NM00148 EQU   SDWAMCHS
SDWARSRF EQU   SDWAMCHS
SDWARSRC EQU   SDWAMCHS
SDWAINVP EQU   SDWAMCHS
SDWATSVL EQU   SDWAMCHS
SDWARCDF EQU   SDWAMCHS
SDWASRVL EQU   SDWAMCHS
SDWASCKE EQU   SDWASTCK+4
SDWASCKB EQU   SDWASTCK
SDWALNTH EQU   SDWAIDNT+1
SDWASPID EQU   SDWAIDNT
SDWASR15 EQU   SDWASRSV+60
SDWASR12 EQU   SDWASRSV+48
SDWASR11 EQU   SDWASRSV+44
SDWASR10 EQU   SDWASRSV+40
SDWASR08 EQU   SDWASRSV+32
SDWASR07 EQU   SDWASRSV+28
SDWASR06 EQU   SDWASRSV+24
SDWASR05 EQU   SDWASRSV+20
SDWASR02 EQU   SDWASRSV+8
SDWASR01 EQU   SDWASRSV+4
SDWASR00 EQU   SDWASRSV
SDWATRN2 EQU   SDWAAEC2+4
SDWAIPC2 EQU   SDWAICD2
SDWAIMC2 EQU   SDWAICD2
SDWAIPR2 EQU   SDWAICD2
@NM00147 EQU   SDWAINC2
@NM00146 EQU   SDWAILC2
SDWAIL2  EQU   SDWAILC2
@NM00145 EQU   SDWAILC2
@NM00144 EQU   SDWAAEC2
SDWAADD2 EQU   SDWANXT2+1
@NM00143 EQU   SDWANXT2
@NM00142 EQU   SDWAEC2+3
SDWASGN2 EQU   SDWAINT2
SDWAEXP2 EQU   SDWAINT2
SDWADEC2 EQU   SDWAINT2
SDWAFPO2 EQU   SDWAINT2
SDWACC2  EQU   SDWAINT2
@NM00141 EQU   SDWAINT2
SDWAPGM2 EQU   SDWAMWP2
SDWAWAT2 EQU   SDWAMWP2
SDWAMCK2 EQU   SDWAMWP2
SDWAECT2 EQU   SDWAMWP2
SDWAKEY2 EQU   SDWAMWP2
SDWAEXT2 EQU   SDWAEMK2
SDWAIO2  EQU   SDWAEMK2
SDWATRM2 EQU   SDWAEMK2
@NM00140 EQU   SDWAEMK2
SDWAPER2 EQU   SDWAEMK2
@NM00139 EQU   SDWAEMK2
SDWATRAN EQU   SDWAAEC1+4
SDWAIPC1 EQU   SDWAICD1
SDWAIMC1 EQU   SDWAICD1
SDWAIPR1 EQU   SDWAICD1
@NM00138 EQU   SDWAINC1
@NM00137 EQU   SDWAILC1
SDWAIL1  EQU   SDWAILC1
@NM00136 EQU   SDWAILC1
@NM00135 EQU   SDWAAEC1
SDWAADD1 EQU   SDWANXT1+1
@NM00134 EQU   SDWANXT1
@NM00133 EQU   SDWAEC1+3
SDWASGN1 EQU   SDWAINT1
SDWAEXP1 EQU   SDWAINT1
SDWADEC1 EQU   SDWAINT1
SDWAFPO1 EQU   SDWAINT1
SDWACC1  EQU   SDWAINT1
@NM00132 EQU   SDWAINT1
SDWAPGM1 EQU   SDWAMWP1
SDWAWAT1 EQU   SDWAMWP1
SDWAMCK1 EQU   SDWAMWP1
SDWAECT1 EQU   SDWAMWP1
SDWAKEY1 EQU   SDWAMWP1
SDWAEXT1 EQU   SDWAEMK1
SDWAIO1  EQU   SDWAEMK1
SDWATRM1 EQU   SDWAEMK1
@NM00131 EQU   SDWAEMK1
SDWAPER1 EQU   SDWAEMK1
@NM00130 EQU   SDWAEMK1
SDWAIOBR EQU   SDWA+100
SDWAEPA  EQU   SDWA+96
@NM00129 EQU   SDWANAME+4
SDWARBAD EQU   SDWANAME
SDWAGR15 EQU   SDWAGRSV+60
SDWAGR14 EQU   SDWAGRSV+56
SDWAGR13 EQU   SDWAGRSV+52
SDWAGR12 EQU   SDWAGRSV+48
SDWAGR11 EQU   SDWAGRSV+44
SDWAGR10 EQU   SDWAGRSV+40
SDWAGR09 EQU   SDWAGRSV+36
SDWAGR08 EQU   SDWAGRSV+32
SDWAGR07 EQU   SDWAGRSV+28
SDWAGR06 EQU   SDWAGRSV+24
SDWAGR05 EQU   SDWAGRSV+20
SDWAGR04 EQU   SDWAGRSV+16
SDWAGR03 EQU   SDWAGRSV+12
SDWAGR02 EQU   SDWAGRSV+8
SDWAGR01 EQU   SDWAGRSV+4
SDWAGR00 EQU   SDWAGRSV
SDWANXTP EQU   SDWACTL2+5
SDWASGP  EQU   SDWAPMKP
SDWAEUP  EQU   SDWAPMKP
SDWADOP  EQU   SDWAPMKP
SDWAFPP  EQU   SDWAPMKP
SDWACCP  EQU   SDWAPMKP
SDWAILP  EQU   SDWAPMKP
SDWAINTP EQU   SDWACTL2+2
SDWASPVP EQU   SDWAMWPP
SDWAWATP EQU   SDWAMWPP
SDWAMCKP EQU   SDWAMWPP
@NM00128 EQU   SDWAMWPP
SDWAKEYP EQU   SDWAMWPP
SDWAEXTP EQU   SDWACMKP
SDWAIOP  EQU   SDWACMKP
SDWANXTA EQU   SDWACTL1+5
SDWASGA  EQU   SDWAPMKA
SDWAEUA  EQU   SDWAPMKA
SDWADOA  EQU   SDWAPMKA
SDWAFPA  EQU   SDWAPMKA
SDWACCA  EQU   SDWAPMKA
SDWAILA  EQU   SDWAPMKA
SDWAINTA EQU   SDWACTL1+2
SDWASPVA EQU   SDWAMWPA
SDWAWATA EQU   SDWAMWPA
SDWAMCKA EQU   SDWAMWPA
@NM00127 EQU   SDWAMWPA
SDWAKEYA EQU   SDWAMWPA
SDWAEXTA EQU   SDWACMKA
SDWAIOA  EQU   SDWACMKA
@NM00126 EQU   SDWACMPF
SDWASTCC EQU   SDWACMPF
@NM00125 EQU   SDWACMPF
SDWASTEP EQU   SDWACMPF
SDWAREQ  EQU   SDWACMPF
@NM00124 EQU   SCVTSECT+180
@NM00123 EQU   SCVTSECT+176
SCVTPIQE EQU   SCVTSECT+172
@NM00122 EQU   SCVTSECT+168
SCVTPTRM EQU   SCVTSECT+164
@NM00121 EQU   SCVTSECT+160
@NM00120 EQU   SCVTSECT+156
SCVTQCBR EQU   SCVTSECT+152
@NM00119 EQU   SCVTSECT+144
SCVTTQE  EQU   SCVTSECT+140
@NM00118 EQU   SCVTSECT+136
SCVTSVCT EQU   SCVTSECT+132
@NM00117 EQU   SCVTSECT+128
@NM00116 EQU   SCVTSECT+124
SCVTRXLQ EQU   SCVTSECT+120
@NM00115 EQU   SCVTSECT+116
SCVTCTCB EQU   SCVTSECT+112
@NM00114 EQU   SCVTSECT+108
@NM00113 EQU   SCVTSECT+104
@NM00112 EQU   SCVTSECT+100
@NM00111 EQU   SCVTSECT+96
SCVTCOMM EQU   SCVTSECT+92
@NM00110 EQU   SCVTSECT+88
@NM00109 EQU   SCVTSECT+84
@NM00108 EQU   SCVTSECT+80
@NM00107 EQU   SCVTSECT+76
@NM00106 EQU   SCVTSECT+72
SCVTGMBR EQU   SCVTSECT+68
SCVTRPTR EQU   SCVTSECT+64
SCVTHSKP EQU   SCVTSECT+60
@NM00105 EQU   SCVTSECT+56
@NM00104 EQU   SCVTSECT+52
SCVTLFRM EQU   SCVTSECT+48
SCVTCDCL EQU   SCVTSECT+44
@NM00103 EQU   SCVTSECT+40
SCVTRACE EQU   SCVTSECT+36
@NM00102 EQU   SCVTSECT+32
SCVTRMBR EQU   SCVTSECT+28
@NM00101 EQU   SCVTSECT+24
@NM00100 EQU   SCVTSECT+20
@NM00099 EQU   SCVTSECT+16
@NM00098 EQU   SCVTSECT+14
SCVTBR14 EQU   SCVTSECT+12
SCVTSPET EQU   SCVTSECT+8
SCVTPGWR EQU   SCVTSECT+4
SCVTPGTM EQU   SCVTSECT
ASCBEND  EQU   ASCB+208
ASCBSRBT EQU   ASCB+200
ASCBSWTL EQU   ASCB+196
ASCBRS14 EQU   ASCB+195
ASCBSMCT EQU   ASCB+194
ASCBRS12 EQU   ASCB+192
ASCBPCTT EQU   ASCB+188
ASCBVGTT EQU   ASCB+184
ASCBRV43 EQU   ASCBSRQ4
ASCBRV42 EQU   ASCBSRQ4
ASCBRV41 EQU   ASCBSRQ4
ASCBRV40 EQU   ASCBSRQ4
ASCBRV39 EQU   ASCBSRQ4
ASCBRV38 EQU   ASCBSRQ4
ASCBRV37 EQU   ASCBSRQ4
ASCBRV36 EQU   ASCBSRQ4
ASCBRV35 EQU   ASCBSRQ3
ASCBRV34 EQU   ASCBSRQ3
ASCBRV33 EQU   ASCBSRQ3
ASCBRV32 EQU   ASCBSRQ3
ASCBRV31 EQU   ASCBSRQ3
ASCBRV30 EQU   ASCBSRQ3
ASCBRV29 EQU   ASCBSRQ3
ASCBRV28 EQU   ASCBSRQ3
ASCBRV27 EQU   ASCBSRQ2
ASCBRV26 EQU   ASCBSRQ2
ASCBRV25 EQU   ASCBSRQ2
ASCBRV24 EQU   ASCBSRQ2
ASCBRV23 EQU   ASCBSRQ2
ASCBRV22 EQU   ASCBSRQ2
ASCBRV21 EQU   ASCBSRQ2
ASCBRV20 EQU   ASCBSRQ2
ASCBRV19 EQU   ASCBSRQ1
ASCBRV18 EQU   ASCBSRQ1
ASCBRV17 EQU   ASCBSRQ1
ASCBRV16 EQU   ASCBSRQ1
ASCBRV15 EQU   ASCBSRQ1
ASCBRV14 EQU   ASCBSRQ1
ASCBRV13 EQU   ASCBSRQ1
ASCBSTA  EQU   ASCBSRQ1
ASCBJBNS EQU   ASCB+176
ASCBJBNI EQU   ASCB+172
ASCBMCC  EQU   ASCB+168
ASCBRTWA EQU   ASCB+164
ASCBIQEA EQU   ASCB+160
ASCBXMPQ EQU   ASCB+156
ASCBRS01 EQU   ASCB+154
ASCBFMCT EQU   ASCB+152
ASCBOUXB EQU   ASCB+148
ASCBOUCB EQU   ASCB+144
ASCBMECB EQU   ASCB+140
ASCBQECB EQU   ASCB+136
ASCBLSQH EQU   ASCBLKGP+4
ASCBLOCK EQU   ASCBLKGP
ASCBTCBS EQU   ASCB+124
ASCBNVSC EQU   ASCB+122
ASCBVSC  EQU   ASCB+120
ASCBSRBS EQU   ASCB+118
ASCBSSRB EQU   ASCB+116
ASCBRV06 EQU   ASCBFLG2
ASCBRV05 EQU   ASCBFLG2
ASCBRV04 EQU   ASCBFLG2
ASCBSNQS EQU   ASCBFLG2
ASCBS2S  EQU   ASCBFLG2
ASCBCEXT EQU   ASCBFLG2
ASCBPXMT EQU   ASCBFLG2
ASCBXMPT EQU   ASCBFLG2
ASCBRF07 EQU   ASCBDSP1
ASCBRF06 EQU   ASCBDSP1
ASCBRF05 EQU   ASCBDSP1
ASCBRF04 EQU   ASCBDSP1
ASCBRF03 EQU   ASCBDSP1
ASCBRF02 EQU   ASCBDSP1
ASCBNOQ  EQU   ASCBDSP1
ASCBSWCT EQU   ASCB+112
ASCBTMCH EQU   ASCB+104
ASCBNSWP EQU   ASCBFLG1
ASCBTYP1 EQU   ASCBFLG1
ASCBSTND EQU   ASCBFLG1
ASCBS3S  EQU   ASCBFLG1
ASCBCMSH EQU   ASCBFLG1
ASCBTOFF EQU   ASCBFLG1
ASCBRF01 EQU   ASCBRCTF
ASCBTMLW EQU   ASCBRCTF
ASCBOUT  EQU   ASCBRCTF
ASCBWAIT EQU   ASCBRCTF
ASCBRV08 EQU   ASCBRCTF
ASCBFQU  EQU   ASCBRCTF
ASCBFRS  EQU   ASCBRCTF
ASCBTMNO EQU   ASCBRCTF
ASCBAFFN EQU   ASCBFW1
ASCBRV44 EQU   ASCB+92
ASCBUBET EQU   ASCB+88
ASCBECB  EQU   ASCB+84
ASCBJSTL EQU   ASCB+80
ASCBEWST EQU   ASCB+72
ASCBEJST EQU   ASCB+64
ASCBTSB  EQU   ASCB+60
ASCBCSCB EQU   ASCB+56
ASCBRSMA EQU   ASCBRSM+1
ASCBRV54 EQU   ASCBRSMF
ASCBRV53 EQU   ASCBRSMF
ASCBRV52 EQU   ASCBRSMF
ASCBRV51 EQU   ASCBRSMF
ASCBVEQR EQU   ASCBRSMF
ASCBN2LP EQU   ASCBRSMF
ASCB1LPU EQU   ASCBRSMF
ASCB2LPU EQU   ASCBRSMF
ASCBLDA  EQU   ASCB+48
ASCBSTOR EQU   ASCB+44
ASCBDP   EQU   ASCB+43
ASCBRV07 EQU   ASCB+42
ASCBIOSM EQU   ASCB+40
ASCBSEQN EQU   ASCB+38
ASCBCPUS EQU   ASCB+32
ASCBSPL  EQU   ASCB+28
ASCBIOSP EQU   ASCB+24
ASCBSYNC EQU   ASCBSUPC+4
ASCBSVRB EQU   ASCBSUPC
ASCBCMSF EQU   ASCB+12
ASCBBWDP EQU   ASCB+8
ASCBFWDP EQU   ASCB+4
ASCBASCB EQU   ASCB
ASCBEGIN EQU   ASCB
@NM00097 EQU   SRB+40
@NM00096 EQU   SRB+38
SRBPRIOR EQU   SRB+37
SRBPKF   EQU   SRB+36
SRBSAVE  EQU   SRB+32
SRBCPAFF EQU   SRBFLC
STORBTO  EQU   STORTO
STORB    EQU   STORFRM
RTM2TECB EQU   RTM2RYRG+64
RTM2RYRS EQU   RTM2RYRG
RTM2TRLS EQU   RTM2ENSN+16
RTM2TRFS EQU   RTM2ENSN+12
RTM2TRCU EQU   RTM2ENSN+8
RTM2TRTB EQU   RTM2ENSN+4
RTM2TRLN EQU   RTM2SNLN
@NM00095 EQU   RTM2WA+882
RTM2ERTM EQU   RTM2ERID+6
RTM2ERAS EQU   RTM2ERID+4
RTM2CPUI EQU   RTM2ERID+2
RTM2SEQ# EQU   RTM2ERID
RTM2RMSA EQU   RTM2RMIN+92
RTM2RMWS EQU   RTM2RMWA
RTM2RMPS EQU   RTM2RMIN
RTM2TRSA EQU   RTM2CVER+450
RTM2CREG EQU   RTM2CRG
RTM2RREG EQU   RTM2RRG
RTM2RBRG EQU   RTM2CVER+313
RTM2WARG EQU   RTM2CVER+312
@NM00094 EQU   RTM2CVER+310
RTM2CTRA EQU   RTM2RECH+12
RTM2STRA EQU   RTM2RECH+8
RTM2SKRA EQU   RTM2RECH+4
RTM2TRRA EQU   RTM2RECH
@NM00093 EQU   RTM2TRYR+3
@NM00092 EQU   RTM2TRF2
RTM2GMR  EQU   RTM2TRF2
RTM2PPR  EQU   RTM2TRF2
RTM2IOR  EQU   RTM2TRF2
RTM2AS3R EQU   RTM2TRF1+1
RTM2AS2R EQU   RTM2TRF1+1
RTM2AS1R EQU   RTM2TRF1+1
RTM2XFLG EQU   RTM2TRF1+1
RTM2XABD EQU   RTM2TRF1+1
RTM2XIP  EQU   RTM2TRF1+1
RTM2RTYS EQU   RTM2TRF1+1
RTM2RCD  EQU   RTM2TRF1+1
RTM2FMS  EQU   RTM2TRF1
RTM2VLDY EQU   RTM2TRF1
RTM2HOOK EQU   RTM2TRF1
RTM2PPS  EQU   RTM2TRF1
RTM2GMS  EQU   RTM2TRF1
RTM2IORS EQU   RTM2TRF1
RTM2IOHS EQU   RTM2TRF1
RTM2IOQS EQU   RTM2TRF1
RTM2TMER EQU   RTM2RECL+14
RTM2EQMN EQU   RTM2ECTL
RTM2EDEQ EQU   RTM2ECTL
RTM2EFRM EQU   RTM2ECTL
RTM2ECLS EQU   RTM2ECTL
RTM2ESNP EQU   RTM2ECTL
RTM2EOPN EQU   RTM2ECTL
RTM2EGET EQU   RTM2ECTL
RTM2EENQ EQU   RTM2ECTL
RTM2DFTK EQU   RTM2DCTL
RTM2DDEQ EQU   RTM2DCTL
RTM2DFRM EQU   RTM2DCTL
RTM2DCLS EQU   RTM2DCTL
RTM2DSNP EQU   RTM2DCTL
RTM2DOPN EQU   RTM2DCTL
RTM2DGET EQU   RTM2DCTL
RTM2DENQ EQU   RTM2DCTL
RTM2SCTX EQU   RTM2RECL+8
RTM2SCTR EQU   RTM2RECL+4
RTM2SCTC EQU   RTM2RECL
@NM00091 EQU   RTM2FLX2
RTM2CERX EQU   RTM2FLX2
RTM2RCRX EQU   RTM2FLX2
RTM2RTRX EQU   RTM2FLX1
RTM2LTX  EQU   RTM2FLX1
RTM2PRX  EQU   RTM2FLX1
RTM2CVX  EQU   RTM2FLX1
RTM2DWX  EQU   RTM2FLX1
RTM2ABX  EQU   RTM2FLX1
RTM2EOTX EQU   RTM2FLX1
RTM2MTX  EQU   RTM2FLX1
@NM00090 EQU   RTM2ASIR
RTM2UPRG EQU   RTM2ASIR
RTM2TRME EQU   RTM2ASIR
@NM00089 EQU   RTM2ABDP
RTM2SMDP EQU   RTM2ABDP
RTM2DMP1 EQU   RTM2ABDP
RTM2MEMT EQU   RTM2INTF+3
@NM00088 EQU   RTM2TSKT
RTM2PURG EQU   RTM2TSKT
@NM00087 EQU   RTM2INTF+1
@NM00086 EQU   RTM2CTLR
RTM2WRAP EQU   RTM2CTLR
RTM2TMEM EQU   RTM2CTLR
RTM2RETR EQU   RTM2CTLR
RTM2RECR EQU   RTM2CTLR
@NM00085 EQU   RTM2RCTL
RTM2JPAQ EQU   RTM2RCTL
RTM2LPAQ EQU   RTM2RCTL
RTM2BFTL EQU   RTM2RCTL
RTM2TRSW EQU   RTM2RCTL
RTM2WANA EQU   RTM2RCTL
RTM2WAIN EQU   RTM2RCTL
RTM2STA2 EQU   RTM2RCTL
RTM2STAT EQU   RTM2ABND
RTM2NDMP EQU   RTM2ABND
@NM00084 EQU   RTM2ABID
RTM2OERR EQU   RTM2ABID
RTM2SAV2 EQU   RTM2ABID
RTM2SAVE EQU   RTM2ABID
RTM2REG  EQU   RTM2ABID
RTM2PSW  EQU   RTM2ABID
RTM2ENQ  EQU   RTM2ABID
RTM2CB   EQU   RTM2ABID
RTM2MCTL EQU   RTM2SCTL+3
RTM2TCTL EQU   RTM2SCTL+2
@NM00083 EQU   RTM2CCTL+1
RTM2RGEB EQU   RTM2CCTL+1
RTM2DEND EQU   RTM2CCTL+1
RTM2RSCN EQU   RTM2CCTL+1
RTM2CONT EQU   RTM2CCTL
RTM2SLIP EQU   RTM2CCTL
RTM2HEED EQU   RTM2CCTL
RTM2REED EQU   RTM2CCTL
RTM2ISPC EQU   RTM2CCTL
RTM2SQS  EQU   RTM2CCTL
RTM2CNCL EQU   RTM2CCTL
RTM2STPT EQU   RTM2CCTL
RTM2PKEY EQU   RTM2CVER+258
RTM2SFSA EQU   RTM2SFRG
RTM2PRWA EQU   RTM2CVER+182
RTM2PREV EQU   RTM2CVER+178
RTM2SPWA EQU   RTM2CVER+174
RTM2DCBA EQU   RTM2CVER+170
RTM2ECBS EQU   RTM2SECB+16
RTM2LECB EQU   RTM2ECBA
RTM2DTCB EQU   RTM2SNAP+68
RTM2SNCC EQU   RTM2SNAP+64
RTM2DD   EQU   RTM2SNAP+56
RTM2LTO4 EQU   RTM2TO4
RTM2LFR4 EQU   RTM2FRM4
RTM2LTO3 EQU   RTM2TO3
RTM2LFR3 EQU   RTM2FRM3
RTM2LTO2 EQU   RTM2TO2
RTM2LFR2 EQU   RTM2FRM2
RTM2LTO1 EQU   RTM2TO1
RTM2LFR1 EQU   RTM2FRM1
RTM2DPLA EQU   RTM2SNAP
RTM2NXTP EQU   RTM2CTL2+5
RTM2SGP  EQU   RTM2PMKP
RTM2EUP  EQU   RTM2PMKP
RTM2DOP  EQU   RTM2PMKP
RTM2FPP  EQU   RTM2PMKP
RTM2CCP  EQU   RTM2PMKP
RTM2ILP  EQU   RTM2PMKP
RTM2INTP EQU   RTM2CTL2+2
RTM2SPVP EQU   RTM2MWPP
RTM2WATP EQU   RTM2MWPP
RTM2MCKP EQU   RTM2MWPP
@NM00082 EQU   RTM2MWPP
RTM2KEYP EQU   RTM2MWPP
RTM2EXTP EQU   RTM2CMKP
RTM2IOP  EQU   RTM2CMKP
RTM2NXTA EQU   RTM2CTL1+5
RTM2SGA  EQU   RTM2PMKA
RTM2EUA  EQU   RTM2PMKA
RTM2DOA  EQU   RTM2PMKA
RTM2FPA  EQU   RTM2PMKA
RTM2CCA  EQU   RTM2PMKA
RTM2ILA  EQU   RTM2PMKA
RTM2INTA EQU   RTM2CTL1+2
RTM2SPVA EQU   RTM2MWPA
RTM2WATA EQU   RTM2MWPA
RTM2MCKA EQU   RTM2MWPA
@NM00081 EQU   RTM2MWPA
RTM2KEYA EQU   RTM2MWPA
RTM2EXTA EQU   RTM2CMKA
RTM2IOA  EQU   RTM2CMKA
@NM00080 EQU   RTM2PARQ+1
RTM2RCDE EQU   RTM2PARQ
RTM2RYRB EQU   RTM2TRRC+42
RTM2RTYA EQU   RTM2TRRC+38
RTM2COMP EQU   RTM2TRRC+34
RTM2SIZE EQU   RTM2SPLL+1
RTM2SUBP EQU   RTM2SPLL
RTM2RTCA EQU   RTM2RTCD
RTM2SCBO EQU   RTM2SCBS+8
RTM2SCBN EQU   RTM2SCBS+4
RTM2SCBC EQU   RTM2SCBS
RTM2STAR EQU   RTM2TRRC+10
RTM2RBST EQU   RTM2TRRC+6
RTM2FIOB EQU   RTM2IOBP+1
@NM00079 EQU   RTM2IOBP
@NM00078 EQU   RTM2TRRC+1
@NM00077 EQU   RTM2IOFS
RTM2NIOP EQU   RTM2IOFS
RTM2NOIO EQU   RTM2IOFS
RTM2IOHT EQU   RTM2IOFS
RTM2IOQR EQU   RTM2IOFS
RTM2FMID EQU   RTM2TRRY+124
RTM2MCIV EQU   RTM2ERRD
RTM2RPIV EQU   RTM2ERRD
RTM2MABD EQU   RTM2ERRD
RTM2CTS  EQU   RTM2ERRD
RTM2STAE EQU   RTM2ERRD
RTM2NRBE EQU   RTM2ERRD
RTM2CLUP EQU   RTM2ERRD
@NM00076 EQU   RTM2ERRC
RTM2EAS  EQU   RTM2ERRC
RTM2PERC EQU   RTM2ERRC
RTM2IRB  EQU   RTM2ERRC
RTM2STAI EQU   RTM2ERRC
RTM2STAF EQU   RTM2ERRC
RTM2SRBM EQU   RTM2ERRB
RTM2LDIS EQU   RTM2ERRB
RTM2ENRB EQU   RTM2ERRB
RTM2TYP1 EQU   RTM2ERRB
@NM00075 EQU   RTM2ERRB
RTM2PGIO EQU   RTM2ERRA
RTM2TEXC EQU   RTM2ERRA
RTM2SVCE EQU   RTM2ERRA
RTM2ABTM EQU   RTM2ERRA
RTM2SVCD EQU   RTM2ERRA
RTM2RKEY EQU   RTM2ERRA
RTM2PCHK EQU   RTM2ERRA
RTM2MCHK EQU   RTM2ERRA
RTM2TIME EQU   RTM2EEDH+20
RTM2RFSA EQU   RTM2EEDH+16
@NM00074 EQU   RTM2EEDH+14
RTM2VEQR EQU   RTM2RSR2
RTM2PGFX EQU   RTM2RSR2
RTM2FLSQ EQU   RTM2RSR2
RTM2FSQA EQU   RTM2RSR2
RTM2NUCL EQU   RTM2RSR2
RTM2SPER EQU   RTM2RSR2
RTM2INTC EQU   RTM2RSR2
RTM2OFLN EQU   RTM2RSR2
RTM2CHNG EQU   RTM2RSR1
RTM2MSER EQU   RTM2RSR1
@NM00073 EQU   RTM2RSR1
RTM2CPID EQU   RTM2EEDH+10
RTM2TERR EQU   RTM2MCHD
RTM2SOFT EQU   RTM2MCHD
RTM2INSF EQU   RTM2MCHD
RTM2ACR  EQU   RTM2MCHD
RTM2SCK  EQU   RTM2MCHD
RTM2PSWU EQU   RTM2MCHD
RTM2REGU EQU   RTM2MCHD
RTM2SKYF EQU   RTM2MCHD
@NM00072 EQU   RTM2MCHS
RTM2RSRF EQU   RTM2MCHS
RTM2RSRC EQU   RTM2MCHS
RTM2INVP EQU   RTM2MCHS
RTM2TSVL EQU   RTM2MCHS
RTM2RCDF EQU   RTM2MCHS
RTM2SRVL EQU   RTM2MCHS
RTM2SCKE EQU   RTM2STCK+4
RTM2SCKB EQU   RTM2STCK
RTM2ABEP EQU   RTM2TRRY+88
RTM2ABNM EQU   RTM2TRRY+80
RTM2TRAN EQU   RTM2AEC1+4
RTM2IPC1 EQU   RTM2ICD1
RTM2IMC1 EQU   RTM2ICD1
RTM2IPR1 EQU   RTM2ICD1
@NM00071 EQU   RTM2INC1
@NM00070 EQU   RTM2ILC1
RTM2IL1  EQU   RTM2ILC1
@NM00069 EQU   RTM2ILC1
@NM00068 EQU   RTM2AEC1
RTM2ADD1 EQU   RTM2NXT1+1
@NM00067 EQU   RTM2NXT1
@NM00066 EQU   RTM2EPSW+3
RTM2SGN1 EQU   RTM2INT1
RTM2EXP1 EQU   RTM2INT1
RTM2DEC1 EQU   RTM2INT1
RTM2FPO1 EQU   RTM2INT1
RTM2CC1  EQU   RTM2INT1
@NM00065 EQU   RTM2INT1
RTM2PGM1 EQU   RTM2MWP1
RTM2WAT1 EQU   RTM2MWP1
RTM2MCK1 EQU   RTM2MWP1
RTM2ECT1 EQU   RTM2MWP1
RTM2KEY1 EQU   RTM2MWP1
RTM2EXT1 EQU   RTM2EMK1
RTM2AIO1 EQU   RTM2EMK1
RTM2TRM1 EQU   RTM2EMK1
RTM2EAM1 EQU   RTM2EMK1
@NM00064 EQU   RTM2EMK1
RTM2PER1 EQU   RTM2EMK1
@NM00063 EQU   RTM2EMK1
RTM2ER15 EQU   RTM2EREG+60
RTM2ER14 EQU   RTM2EREG+56
RTM2ER13 EQU   RTM2EREG+52
RTM2ER12 EQU   RTM2EREG+48
RTM2ER11 EQU   RTM2EREG+44
RTM2ER10 EQU   RTM2EREG+40
RTM2ER9  EQU   RTM2EREG+36
RTM2ER8  EQU   RTM2EREG+32
RTM2ER7  EQU   RTM2EREG+28
RTM2ER6  EQU   RTM2EREG+24
RTM2ER5  EQU   RTM2EREG+20
RTM2ER4  EQU   RTM2EREG+16
RTM2ER3  EQU   RTM2EREG+12
RTM2ER2  EQU   RTM2EREG+8
RTM2ER1  EQU   RTM2EREG+4
RTM2ER0  EQU   RTM2EREG
RTM2CT   EQU   RTM2WA+56
RTM2VRBT EQU   RTM2WA+52
RTM2TCBT EQU   RTM2WA+48
RTM2SFWA EQU   RTM2WA+32
RTM2CC   EQU   RTM2CODE+1
@NM00062 EQU   RTM2CCF
RTM2EOT  EQU   RTM2CCF
RTM2EOM  EQU   RTM2CCF
RTM2R0DP EQU   RTM2CCF
RTM2STEP EQU   RTM2CCF
RTM2DREQ EQU   RTM2CCF
RTM2ASC  EQU   RTM2WA+24
RTM2VRBC EQU   RTM2WA+20
RTM2TCBC EQU   RTM2WA+16
RTM2CVT  EQU   RTM2WA+12
RTM2LGTH EQU   RTM2RT2D+1
RTM2SPID EQU   RTM2RT2D
RTM2ADDR EQU   RTM2DESC+4
RTM2ID   EQU   RTM2DESC
RMPLDCBL EQU   RMPL+20
RMPLRMWA EQU   RMPL+16
RMPLRBPA EQU   RMPL+12
RMPLTCBA EQU   RMPL+8
RMPLASCB EQU   RMPL+4
RMPLASID EQU   RMPL+2
RMPLFLG2 EQU   RMPL+1
@NM00061 EQU   RMPLFLG1
RMPLWT1M EQU   RMPLFLG1
RMPLJST  EQU   RMPLFLG1
RMPLRCOV EQU   RMPLFLG1
RMPLIPUF EQU   RMPLFLG1
RMPLRBPP EQU   RMPLFLG1
RMPLTERM EQU   RMPLFLG1
RMPLTYPE EQU   RMPLFLG1
SNPHDRA  EQU   SNPPARMS+20
SNPSTOR  EQU   SNPPARMS+16
SNPTCBA  EQU   SNPPARMS+12
SNPDCB   EQU   SNPPARMS+8
@NM00060 EQU   SNPPARMS+7
@NM00059 EQU   SNPPDATA
SNPSPLS  EQU   SNPPDATA
SNPPSW   EQU   SNPPDATA
SNPJPA   EQU   SNPPDATA
SNPLPA   EQU   SNPPDATA
SNPREGS  EQU   SNPPDATA
SNPSAVE2 EQU   SNPPDATA
SNPSAVE  EQU   SNPPDATA
@NM00058 EQU   SNPSDAT1
SNPERR   EQU   SNPSDAT1
SNPIO    EQU   SNPSDAT1
SNPDM    EQU   SNPSDAT0
SNPQCB   EQU   SNPSDAT0
SNPCB    EQU   SNPSDAT0
SNPTRT   EQU   SNPSDAT0
SNPSWA   EQU   SNPSDAT0
SNPLSQA  EQU   SNPSDAT0
SNPSQA   EQU   SNPSDAT0
SNPNUC   EQU   SNPSDAT0
@NM00057 EQU   SNPPARMS+2
SNPHDR   EQU   SNPFLAG
SNPSLIST EQU   SNPFLAG
SNPTCB   EQU   SNPFLAG
SNPID    EQU   SNPFLAG
SNPABEND EQU   SNPFLAG
SNPVS2EN EQU   SNPFLAG
SNPVS2   EQU   SNPFLAG
SNPSNAP  EQU   SNPFLAG
SNPIDENT EQU   SNPPARMS
@NM00056 EQU   TCBXTNT2+32
TCBRV181 EQU   TCBRV173
TCBRV180 EQU   TCBRV173
TCBRV179 EQU   TCBRV173
TCBRV178 EQU   TCBRV173
TCBRV177 EQU   TCBRV173
TCBRV176 EQU   TCBRV173
TCBRV175 EQU   TCBRV173
TCBRV174 EQU   TCBRV173
TCBRV172 EQU   TCBRV164
TCBRV171 EQU   TCBRV164
TCBRV170 EQU   TCBRV164
TCBRV169 EQU   TCBRV164
TCBRV168 EQU   TCBRV164
TCBRV167 EQU   TCBRV164
TCBRV166 EQU   TCBRV164
TCBRV165 EQU   TCBRV164
TCBRV163 EQU   TCBRV155
TCBRV162 EQU   TCBRV155
TCBRV161 EQU   TCBRV155
TCBRV160 EQU   TCBRV155
TCBRV159 EQU   TCBRV155
TCBRV158 EQU   TCBRV155
TCBRV157 EQU   TCBRV155
TCBRV156 EQU   TCBRV155
TCBRV154 EQU   TCBRV146
TCBRV153 EQU   TCBRV146
TCBRV152 EQU   TCBRV146
TCBRV151 EQU   TCBRV146
TCBRV150 EQU   TCBRV146
TCBRV149 EQU   TCBRV146
TCBRV148 EQU   TCBRV146
TCBRV147 EQU   TCBRV146
TCBRV145 EQU   TCBXTNT2+26
TCBRV144 EQU   TCBXTNT2+24
TCBRV143 EQU   TCBXTNT2+20
TCBRV142 EQU   TCBXTNT2+16
TCBRSV49 EQU   TCBXTNT2+12
TCBEVENT EQU   TCBXTNT2+8
TCBRCMP  EQU   TCBXTNT2+5
TCBRSVAB EQU   TCBXTNT2+4
TCBGTFA  EQU   TCBGTF+1
TCBRSV47 EQU   TCBTFLG
TCBRSV46 EQU   TCBTFLG
TCBRSV45 EQU   TCBTFLG
TCBRSV44 EQU   TCBTFLG
TCBRSV43 EQU   TCBTFLG
TCBDSPIT EQU   TCBTFLG
TCBERRTN EQU   TCBTFLG
TCBASYNC EQU   TCBTFLG
@NM00055 EQU   TCB+296
TCBSVCA2 EQU   TCB+292
TCBSWASA EQU   TCB+288
TCBDBTB  EQU   TCB+284
TCBRPT   EQU   TCB+280
TCBRV141 EQU   TCBRV133
TCBRV140 EQU   TCBRV133
TCBRV139 EQU   TCBRV133
TCBRV138 EQU   TCBRV133
TCBRV137 EQU   TCBRV133
TCBRV136 EQU   TCBRV133
TCBRV135 EQU   TCBRV133
TCBRV134 EQU   TCBRV133
TCBRV132 EQU   TCBRV124
TCBRV131 EQU   TCBRV124
TCBRV130 EQU   TCBRV124
TCBRV129 EQU   TCBRV124
TCBRV128 EQU   TCBRV124
TCBRV127 EQU   TCBRV124
TCBRV126 EQU   TCBRV124
TCBRV125 EQU   TCBRV124
TCBRV123 EQU   TCBFBYT2
TCBRV122 EQU   TCBFBYT2
TCBECBNV EQU   TCBFBYT2
TCBSSSYN EQU   TCBFBYT2
TCBFPRAP EQU   TCBFBYT2
TCBFDW   EQU   TCBFBYT2
TCBFMW   EQU   TCBFBYT2
TCBCNCB  EQU   TCBFBYT2
TCBLLH   EQU   TCBFBYT1
TCBRV113 EQU   TCBFBYT1
TCBEOT   EQU   TCBFBYT1
TCBPGNLY EQU   TCBFBYT1
TCBNDIOS EQU   TCBFBYT1
TCBRV327 EQU   TCBFBYT1
TCBEOTFM EQU   TCBFBYT1
TCBAFFN  EQU   TCB+274
TCBRV326 EQU   TCB+272
TCBUKYSP EQU   TCB+268
TCBMODE  EQU   TCBESTAE+3
TCBERTYP EQU   TCBESTAE+2
TCBRV314 EQU   TCBESTRM
TCBRV313 EQU   TCBESTRM
TCBRV312 EQU   TCBESTRM
TCBRV311 EQU   TCBESTRM
TCBRV310 EQU   TCBESTRM
TCBRV309 EQU   TCBESTRM
TCBRV308 EQU   TCBESTRM
TCBETERM EQU   TCBESTRM
TCBSCBKY EQU   TCBESTAE
TCBRTM12 EQU   TCB+260
TCBTCBID EQU   TCB+256
TCBSTAWA EQU   TCB+252
TCBSWA   EQU   TCB+248
TCBFOEA  EQU   TCBFOE+1
TCBRSV42 EQU   TCBFOE
TCBCCPVI EQU   TCBXSCT+2
TCBRV325 EQU   TCBXSCT+1
TCBRV324 EQU   TCBXSCT1
TCBRV323 EQU   TCBXSCT1
TCBRV322 EQU   TCBXSCT1
TCBRV321 EQU   TCBXSCT1
TCBRV320 EQU   TCBXSCT1
TCBRV319 EQU   TCBXSCT1
TCBS3A   EQU   TCBXSCT1
TCBACTIV EQU   TCBXSCT1
TCBRSV41 EQU   TCB+239
TCBRSVAA EQU   TCB+237
TCBABCUR EQU   TCB+236
TCBTMSAV EQU   TCB+232
TCBIOTIM EQU   TCB+228
TCBBACK  EQU   TCB+220
TCBTIRB  EQU   TCB+216
TCBAECB  EQU   TCB+212
TCBEXT2A EQU   TCBEXT2+1
TCBRSV39 EQU   TCBEXT2
TCBSTMCT EQU   TCB+207
TCBSYSCT EQU   TCB+206
TCBRSV37 EQU   TCB+205
TCBEXSVC EQU   TCBDAR
TCBDARMS EQU   TCBDAR
TCBDARWT EQU   TCBDAR
TCBDARO  EQU   TCBDAR
TCBDARMC EQU   TCBDARC
TCBDARD  EQU   TCBDAR
TCBDARS  EQU   TCBDAR
TCBDARP  EQU   TCBDAR
TCBGTOFM EQU   TCBFLGS7
TCBADMP  EQU   TCBFLGS7
TCBRSTSK EQU   TCBFLGS7
TCBSVCS  EQU   TCBFLGS7
TCBSTACK EQU   TCBFLGS7
TCBRSV34 EQU   TCBFLGS7
TCBRSV33 EQU   TCBFLGS7
TCBGPECB EQU   TCBFLGS7
TCBNTJS  EQU   TCBFLGS6
TCBAPG   EQU   TCBFLGS6
TCBMIGR  EQU   TCBFLGS6
TCBRV303 EQU   TCBFLGS6
TCBSPVLK EQU   TCBFLGS6
TCBCPU   EQU   TCBFLGS6
TCBPIE17 EQU   TCBFLGS6
TCBRV    EQU   TCBFLGS6
TCBRSV79 EQU   TCBNDSP5
TCBRSV78 EQU   TCBNDSP5
TCBRSV77 EQU   TCBNDSP5
TCBRSV76 EQU   TCBNDSP5
TCBRSV75 EQU   TCBNDSP5
TCBRSV74 EQU   TCBNDSP5
TCBRSV95 EQU   TCBNDSP5
TCBRSV94 EQU   TCBNDSP5
TCBRSV93 EQU   TCBNDSP4
TCBRSV92 EQU   TCBNDSP4
TCBRSV91 EQU   TCBNDSP4
TCBRSV90 EQU   TCBNDSP4
TCBRSV89 EQU   TCBNDSP4
TCBRSV88 EQU   TCBNDSP4
TCBRSV87 EQU   TCBNDSP4
TCBRSV86 EQU   TCBNDSP4
TCBEXT1A EQU   TCBEXT1+1
TCBRSV32 EQU   TCBEXT1
TCBEXCPD EQU   TCB+192
TCBIOBRC EQU   TCB+188
TCBDDWTC EQU   TCB+186
TCBDDEXC EQU   TCB+184
TCBJSCBB EQU   TCBJSCB+1
@NM00054 EQU   TCBRECDE
TCBREC   EQU   TCBRECDE
TCBMDIDS EQU   TCB+176
TCBNDINT EQU   TCBNDSP3
TCBRSV27 EQU   TCBNDSP3
TCBRSV26 EQU   TCBNDSP3
TCBRSV25 EQU   TCBNDSP3
TCBRSV24 EQU   TCBNDSP3
TCBSRBND EQU   TCBNDSP3
TCBRV302 EQU   TCBNDSP3
TCBLJSND EQU   TCBNDSP3
TCBABE   EQU   TCBNDSP2
TCBDSS   EQU   TCBNDSP2
TCBOWAIT EQU   TCBNDSP2
TCBIWAIT EQU   TCBNDSP2
TCBNDTS  EQU   TCBNDSP2
TCBNDSVC EQU   TCBNDSP2
TCBSTPP  EQU   TCBNDSP2
TCBABD   EQU   TCBNDSP2
TCBRSV22 EQU   TCBNDSP1
TCBPIEND EQU   TCBNDSP1
TCBTPSP  EQU   TCBNDSP1
TCBDDRND EQU   TCBNDSP1
TCBRSPND EQU   TCBNDSP1
TCBRSTND EQU   TCBNDSP1
TCBDARPN EQU   TCBNDSP1
TCBDARTN EQU   TCBNDSP1
TCBNDSP0 EQU   TCBNDSP
TCBUSER  EQU   TCB+168
TCBTCTB  EQU   TCBTCT+1
TCBRSV9C EQU   TCBTCTGF
TCBRSV9B EQU   TCBTCTGF
TCBRSV9A EQU   TCBTCTGF
TCBRSV99 EQU   TCBTCTGF
TCBRSV98 EQU   TCBTCTGF
TCBRSV97 EQU   TCBTCTGF
TCBRSV20 EQU   TCBTCTGF
TCBSMFGF EQU   TCBTCTGF
TCBSTABB EQU   TCBSTAB+1
TCBSTCUR EQU   TCBNSTAE
TCBRV301 EQU   TCBNSTAE
TCBSYNCH EQU   TCBNSTAE
TCBHALT  EQU   TCBNSTAE
TCBPPSUP EQU   TCBNSTAE
TCB33E   EQU   TCBNSTAE
TCBQUIES EQU   TCBNSTAE
TCBSTABE EQU   TCBNSTAE
TCBAQE   EQU   TCB+156
TCBPQE   EQU   TCB+152
TCBTSDP  EQU   TCB+151
TCBTSLP  EQU   TCB+150
TCBSTPCT EQU   TCB+149
TCBCPUBN EQU   TCBTSFLG
TCBDYDSP EQU   TCBTSFLG
TCBRSV18 EQU   TCBTSFLG
TCBRSV17 EQU   TCBTSFLG
TCBTIOTG EQU   TCBTSFLG
TCBATT   EQU   TCBTSFLG
TCBSTPPR EQU   TCBTSFLG
TCBRV300 EQU   TCBTSTSK
TCBECB   EQU   TCB+144
TCBIQE   EQU   TCB+140
TCBOTC   EQU   TCB+132
TCBJSTCA EQU   TCBJSTCB+1
TCBRSV16 EQU   TCBJSTCB
TCBTQET  EQU   TCBTME
TCBTCB   EQU   TCB+116
TCBFSAB  EQU   TCBFSA+1
TCBQEL   EQU   TCBFSA
TCBGRS15 EQU   TCBGRS+60
TCBGRS14 EQU   TCBGRS+56
TCBGRS13 EQU   TCBGRS+52
TCBGRS12 EQU   TCBGRS+48
TCBGRS11 EQU   TCBGRS+44
TCBGRS10 EQU   TCBGRS+40
TCBGRS9  EQU   TCBGRS+36
TCBGRS8  EQU   TCBGRS+32
TCBGRS7  EQU   TCBGRS+28
TCBGRS6  EQU   TCBGRS+24
TCBGRS5  EQU   TCBGRS+20
TCBGRS4  EQU   TCBGRS+16
TCBGRS3  EQU   TCBGRS+12
TCBGRS2  EQU   TCBGRS+8
TCBGRS1  EQU   TCBGRS+4
TCBGRS0  EQU   TCBGRS
TCBJPQB  EQU   TCBJPQ+1
TCBRSV15 EQU   TCBPURGE
TCBRSV14 EQU   TCBPURGE
TCBRSV13 EQU   TCBPURGE
TCBRSV12 EQU   TCBPURGE
TCBRSV11 EQU   TCBPURGE
TCBRSV10 EQU   TCBPURGE
TCBRSV09 EQU   TCBPURGE
TCBJPQF  EQU   TCBPURGE
TCBJLB   EQU   TCB+40
TCBLLS   EQU   TCB+36
TCBDSP   EQU   TCB+35
TCBLMP   EQU   TCB+34
TCBPNDSP EQU   TCBFLGS5
TCBFCD1  EQU   TCBFLGS5
TCBSTP   EQU   TCBFLGS5
TCBSYS   EQU   TCBFLGS5
TCBANDSP EQU   TCBFLGS5
TCBPAGE  EQU   TCBFLGS5
TCBUXNDF EQU   TCBABWF
TCBFC    EQU   TCBFLGS5
TCBONDSP EQU   TCBFLGS4
TCBMPCND EQU   TCBFLGS4
TCBMPCVQ EQU   TCBFLGS4
TCBUXNDV EQU   TCBFLGS4
TCBHNDSP EQU   TCBFLGS4
TCBRQENA EQU   TCBFLGS4
TCBSER   EQU   TCBFLGS4
TCBNDUMP EQU   TCBFLGS4
TCBDWSTA EQU   TCBFLGS3
TCBRSV08 EQU   TCBFLGS3
TCBRSV07 EQU   TCBFLGS3
TCBRSV06 EQU   TCBFLGS3
TCBABGM  EQU   TCBFLGS3
TCBABTRM EQU   TCBFLGS3
TCBADINP EQU   TCBFLGS3
TCBFSM   EQU   TCBFLGS3
TCBFTS   EQU   TCBFLGS2
TCBFETXR EQU   TCBFLGS2
TCBFDSOP EQU   TCBFLGS2
TCBFJMC  EQU   TCBFLGS2
TCBFSMC  EQU   TCBFLGS2
TCBFABOP EQU   TCBFLGS2
TCBFSTI  EQU   TCBFLGS2
TCBFOINP EQU   TCBFLGS2
TCBFS    EQU   TCBFLGS1
TCBFT    EQU   TCBFLGS1
TCBPDUMP EQU   TCBFLGS1
TCBNONPR EQU   TCBFLGS1
TCBFERA  EQU   TCBFLGS1
TCBFE    EQU   TCBFLGS1
TCBFA    EQU   TCBFLGS1
TCBZERO  EQU   TCBPKF
TCBFLAG  EQU   TCBPKF
TCBMSSB  EQU   TCBMSS+1
TCBRSV03 EQU   TCBMSS
TCBTRNB  EQU   TCBTRN+1
TCBRSV02 EQU   TCBABF
TCBOLTEP EQU   TCBABF
TCBTCP   EQU   TCBABF
TCBTCPP  EQU   TCBABF
TCBRSV01 EQU   TCBABF
TCBGRPH  EQU   TCBABF
TCBNOCHK EQU   TCBABF
TCBMOD91 EQU   TCBABF
TCBCMPC  EQU   TCBCMP+1
TCBRV318 EQU   TCBCMSG
TCBRV317 EQU   TCBCIND
TCBRV316 EQU   TCBCWTO
TCBCASID EQU   TCBCDBL
TCBNOCC  EQU   TCBSTCC
TCBDMPO  EQU   TCBCPP
TCBCSTEP EQU   TCBCMPF
TCBCREQ  EQU   TCBCMPF
TCBTIO   EQU   TCB+12
TCBDEB   EQU   TCB+8
TCBPIEA  EQU   TCBPIE+1
TCBPM    EQU   TCBPMASK
@NM00053 EQU   TCBPMASK
TCBFRS6  EQU   TCBFRS+24
TCBFRS4  EQU   TCBFRS+16
TCBFRS2  EQU   TCBFRS+8
TCBFRS0  EQU   TCBFRS
SDUSYSMC EQU   SDUMP+36
SDUSYSMS EQU   SDUMP+32
SDUSUMLP EQU   SDUMP+28
SDUECBAD EQU   SDUMP+16
@NM00052 EQU   SDUSDAT2
SDUNASQA EQU   SDUSDAT2
SDUNAPSA EQU   SDUSDAT2
SDUNSMDP EQU   SDUSDAT2
SDUSMDMP EQU   SDUSDAT2
SDUSWA   EQU   SDUSDAT2
SDUCSA   EQU   SDUSDAT2
SDUTRT   EQU   SDUSDAT1
SDULPA   EQU   SDUSDAT1
SDURGN   EQU   SDUSDAT1
SDULSQA  EQU   SDUSDAT1
SDUSQA   EQU   SDUSDAT1
SDUNUC   EQU   SDUSDAT1
SDUPSA   EQU   SDUSDAT1
SDUALPSA EQU   SDUSDAT1
@NM00051 EQU   SDUFLAG1
SDUSLIP  EQU   SDUFLAG1
SDUSULST EQU   SDUFLAG1
SDUABEND EQU   SDUFLAG1
DUMPTYPE EQU   SDUFLAG1
SDUASID  EQU   SDUFLAG0
SDUECB   EQU   SDUFLAG0
@NM00050 EQU   SMWK+978
SMWKNSTB EQU   SMWK+976
SMWKNFUS EQU   SMWK+968
SMWKNFAQ EQU   SMWK+966
SMWKNFRQ EQU   SMWK+964
@NM00049 EQU   SMWK+828
SMWKSVLN EQU   SMWK+820
SMWKNFRE EQU   SMWK+816
SMWKALEN EQU   SMWK+812
SMWKSCBF EQU   SMWK+810
SMWKREGN EQU   SMWK+808
SMWKIDX2 EQU   SMWK+806
SMWKSREG EQU   SMWKREGS
SMWKHEAD EQU   SMWK+656
SMWKSMVL EQU   SMWK+652
SMWKSMMV EQU   SMWK+648
SMWKSMBF EQU   SMWK+644
SMWKSMLS EQU   SMWK+640
SMWKSMRG EQU   SMWK+636
SMWKSMDT EQU   SMWK+632
SMWKSDMP EQU   SMWK+628
SMWKSMLK EQU   SMWK+624
@NM00048 EQU   SMWK+622
SMWKRFAD EQU   SMWK+612
SMWKCPUS EQU   SMWK+192
SMWKPEND EQU   SMWK+188
SMWKSAVA EQU   SMWK+184
SMWKENDA EQU   SMWK+180
SMWKVADR EQU   SMWK+176
SMWKPSWA EQU   SMWKPSW+4
@NM00047 EQU   SMWKPSW+2
SMWKPSWK EQU   SMWKPSW+1
SMWKPSWS EQU   SMWKPSW
SMWKPFXE EQU   SMWK+164
SMWKPFXB EQU   SMWK+160
SMWKSSDE EQU   SMWK+156
SMWKFLG4 EQU   SMWKFLGS+3
SMWKFLG3 EQU   SMWKFLGS+2
SMWKFLG2 EQU   SMWKFLGS+1
@NM00046 EQU   SMWKFLG1
@NM00045 EQU   SMWKFLG1
SMWKSTBK EQU   SMWKFLG1
SMWKSLCL EQU   SMWKFLG1
SMWKRSNM EQU   SMWKFLG1
SMWKRBFL EQU   SMWKFLG1
SMWKSLCK EQU   SMWKFLG1
SMWKNAME EQU   SMWK
SMWKTSDS EQU   SMWKRSCB+8
SMWKFLGB EQU   SMWKRSCB+1
@NM00044 EQU   SMWKFLGA
SMDLRDAT EQU   SMDLR+20
@NM00043 EQU   SMDLRHDR+17
SMDLRMSG EQU   SMDLRHDR+16
SMDLRPL  EQU   SMDLRHDR+12
SMDLRADR EQU   SMDLRHDR+8
SMDLRLEN EQU   SMDLRHDR+4
@NM00042 EQU   SMDLRHDR+2
SMDLRID  EQU   SMDLRHDR
RTCTSDOV EQU   RTCTSDMG
@NM00041 EQU   RTCTSDO4
@NM00040 EQU   RTCTSDO3
@NM00039 EQU   RTCTSDO2
RTCTSDPD EQU   RTCTSDO2
RTCTSDPC EQU   RTCTSDO2
RTCTSDPB EQU   RTCTSDO2
RTCTSDPA EQU   RTCTSDO2
RTCTSDP9 EQU   RTCTSDO2
RTCTSDP8 EQU   RTCTSDO2
RTCTSDP7 EQU   RTCTSDO1
RTCTSDP6 EQU   RTCTSDO1
RTCTSDP5 EQU   RTCTSDO1
RTCTSDP4 EQU   RTCTSDO1
RTCTSDP3 EQU   RTCTSDO1
RTCTSDP2 EQU   RTCTSDO1
RTCTSDP1 EQU   RTCTSDO1
RTCTSDP0 EQU   RTCTSDO1
RTCTISYM EQU   RTCTSD04
RTCTSMOV EQU   RTCTSMMG
@NM00038 EQU   RTCTSD04
RTCTSD03 EQU   RTCTMSYO+2
RTCTSD02 EQU   RTCTMSYO+1
RTCTSDS7 EQU   RTCTSD01
RTCTSDS6 EQU   RTCTSD01
RTCTSDS5 EQU   RTCTSD01
RTCTSDS4 EQU   RTCTSD01
RTCTSDS3 EQU   RTCTSD01
RTCTSDS2 EQU   RTCTSD01
RTCTSDS1 EQU   RTCTSD01
RTCTSDS0 EQU   RTCTSD01
RTCTISYU EQU   RTCTSUO4
RTCTSUOV EQU   RTCTSUMG
@NM00037 EQU   RTCTSUO4
RTCTSYDF EQU   RTCTSUO3
RTCTSYDE EQU   RTCTSUO3
RTCTSYDD EQU   RTCTSUO3
RTCTSYDC EQU   RTCTSUO3
RTCTSYDB EQU   RTCTSUO3
RTCTSYDA EQU   RTCTSUO3
RTCTSYD9 EQU   RTCTSUO3
RTCTSYD8 EQU   RTCTSUO3
@NM00036 EQU   RTCTSUO2
RTCTSYDH EQU   RTCTSUO2
RTCTSYDG EQU   RTCTSUO2
RTCTSYD7 EQU   RTCTSUO1
RTCTSYD6 EQU   RTCTSUO1
RTCTSYD5 EQU   RTCTSUO1
RTCTSYD4 EQU   RTCTSUO1
RTCTSYD3 EQU   RTCTSUO1
RTCTSYD2 EQU   RTCTSUO1
RTCTSYD1 EQU   RTCTSUO1
RTCTSYD0 EQU   RTCTSUO1
RTCTISAB EQU   RTCTSAO4
RTCTSAOV EQU   RTCTSAMG
@NM00035 EQU   RTCTSAO4
RTCTSADF EQU   RTCTSAO3
RTCTSADE EQU   RTCTSAO3
RTCTSADD EQU   RTCTSAO3
RTCTSADC EQU   RTCTSAO3
RTCTSADB EQU   RTCTSAO3
RTCTSADA EQU   RTCTSAO3
RTCTSAD9 EQU   RTCTSAO3
RTCTSAD8 EQU   RTCTSAO3
@NM00034 EQU   RTCTSAO2
RTCTSADH EQU   RTCTSAO2
RTCTSADG EQU   RTCTSAO2
RTCTSAD7 EQU   RTCTSAO1
RTCTSAD6 EQU   RTCTSAO1
RTCTSAD5 EQU   RTCTSAO1
RTCTSAD4 EQU   RTCTSAO1
RTCTSAD3 EQU   RTCTSAO1
RTCTSAD2 EQU   RTCTSAO1
RTCTSAD1 EQU   RTCTSAO1
RTCTSAD0 EQU   RTCTSAO1
RTCTZZZ5 EQU   RTCT+340
RTCTZZZ4 EQU   RTCT+336
RTCTMRMQ EQU   RTCT+332
RTCTSDF5 EQU   RTCTSDF3+3
RTCTSDEN EQU   RTCTSDF4
RTCTSDEQ EQU   RTCTSDF4
RTCTSDTR EQU   RTCTSDF4
@NM00033 EQU   RTCTC3PO
@NM00032 EQU   RTCTR2D2
RTCTSDSL EQU   RTCTSDF2
RTCTSDWF EQU   RTCTSDF2
RTCTSDLA EQU   RTCTSDF2
RTCTSDMR EQU   RTCTSDF2
RTCTSDRS EQU   RTCTSDF1
RTCTSDSD EQU   RTCTSDF1
RTCTSDEP EQU   RTCTSDF1
RTCTZZZ2 EQU   RTCT+257
@NM00031 EQU   RTCTASO2
RTCTASSU EQU   RTCTASO2
RTCTASSW EQU   RTCTASO2
RTCTASLP EQU   RTCTASO1
RTCTASRG EQU   RTCTASO1
RTCTASLS EQU   RTCTASO1
RTCTASSQ EQU   RTCTASO1
RTCTASAL EQU   RTCTASO1
RTCTSDO  EQU   RTCTOPT+12
RTCTSYO  EQU   RTCTOPT+8
RTCTSUO  EQU   RTCTOPT+4
RTCTSAO  EQU   RTCTOPT
RTCTXXX2 EQU   RTCT+234
RTCTETIM EQU   RTCTERID+6
RTCTEASD EQU   RTCTERID+4
RTCTECPU EQU   RTCTERID+2
RTCTESEQ EQU   RTCTERID
RTCTTDCB EQU   RTCT+184
RTCTSEQ# EQU   RTCT+178
RTCTXXX1 EQU   RTCT+177
@NM00030 EQU   RTCTRFLG
RTCTRSTF EQU   RTCTRFLG
RTCTRPER EQU   RTCTRFLG
RTCTRTER EQU   RTCTRFLG
RTCTTEST EQU   RTCT+172
RTCTMSRB EQU   RTCT+168
RTCTMLCK EQU   RTCT+164
RTCTFMT  EQU   RTCT+160
RTCTSDIP EQU   RTCTSDPL
RTCTDEV  EQU   RTCTSDDS+8
RTCTDCB  EQU   RTCTSDDS+4
@NM00029 EQU   RTCTFLG
RTCTDETP EQU   RTCTFLG
RTCTDSUS EQU   RTCTFLG
RTCTDSST EQU   RTCTFLG
RTCTDSNM EQU   RTCTSDDS
RTCTRCB  EQU   RTCT+32
RTCTRECB EQU   RTCT+28
RTCTFASB EQU   RTCT+24
RTCTMECB EQU   RTCT+20
RTCTYYY1 EQU   RTCT+16
RTCTSY04 EQU   RTCTSYD+3
RTCTSY03 EQU   RTCTSYD+2
RTCTSY02 EQU   RTCTSYD+1
RTCTSYM7 EQU   RTCTSY01
RTCTSYM6 EQU   RTCTSY01
RTCTSYM5 EQU   RTCTSY01
RTCTSYM4 EQU   RTCTSY01
RTCTSYM3 EQU   RTCTSY01
RTCTSYM2 EQU   RTCTSY01
RTCTSYM1 EQU   RTCTSY01
RTCTSYM0 EQU   RTCTSY01
RTCTSUP4 EQU   RTCTSUP+3
RTCTSUDF EQU   RTCTSUP3
RTCTSUDE EQU   RTCTSUP3
RTCTSUDD EQU   RTCTSUP3
RTCTSUDC EQU   RTCTSUP3
RTCTSUDB EQU   RTCTSUP3
RTCTSUDA EQU   RTCTSUP3
RTCTSUD9 EQU   RTCTSUP3
RTCTSUD8 EQU   RTCTSUP3
@NM00028 EQU   RTCTSUP2
RTCTSUDH EQU   RTCTSUP2
RTCTSUDG EQU   RTCTSUP2
RTCTSUD7 EQU   RTCTSUP1
RTCTSUD6 EQU   RTCTSUP1
RTCTSUD5 EQU   RTCTSUP1
RTCTSUD4 EQU   RTCTSUP1
RTCTSUD3 EQU   RTCTSUP1
RTCTSUD2 EQU   RTCTSUP1
RTCTSUD1 EQU   RTCTSUP1
RTCTSUD0 EQU   RTCTSUP1
RTCTSAP4 EQU   RTCTSAP+3
RTCTSABF EQU   RTCTSAP3
RTCTSABE EQU   RTCTSAP3
RTCTSABD EQU   RTCTSAP3
RTCTSABC EQU   RTCTSAP3
RTCTSABB EQU   RTCTSAP3
RTCTSABA EQU   RTCTSAP3
RTCTSAB9 EQU   RTCTSAP3
RTCTSAB8 EQU   RTCTSAP3
@NM00027 EQU   RTCTSAP2
RTCTSABH EQU   RTCTSAP2
RTCTSABG EQU   RTCTSAP2
RTCTSAB7 EQU   RTCTSAP1
RTCTSAB6 EQU   RTCTSAP1
RTCTSAB5 EQU   RTCTSAP1
RTCTSAB4 EQU   RTCTSAP1
RTCTSAB3 EQU   RTCTSAP1
RTCTSAB2 EQU   RTCTSAP1
RTCTSAB1 EQU   RTCTSAP1
RTCTSAB0 EQU   RTCTSAP1
RTCTNAME EQU   RTCT
CVTLEVL  EQU   CVTRELNO+2
CVTNUMB  EQU   CVTRELNO
CVTMDL   EQU   CVTFIX+250
@NM00026 EQU   CVTFIX+248
@NM00025 EQU   CVTFIX
CVTRV482 EQU   CVTXTNT2+128
CVTRV481 EQU   CVTXTNT2+124
CVTRV480 EQU   CVTXTNT2+120
CVTRV479 EQU   CVTXTNT2+118
CVTRV478 EQU   CVTXTNT2+117
CVTRV477 EQU   CVTXTNT2+116
CVTRV476 EQU   CVTXTNT2+115
CVTRV475 EQU   CVTXTNT2+114
CVTRV474 EQU   CVTRV466
CVTRV473 EQU   CVTRV466
CVTRV472 EQU   CVTRV466
CVTRV471 EQU   CVTRV466
CVTRV470 EQU   CVTRV466
CVTRV469 EQU   CVTRV466
CVTRV468 EQU   CVTRV466
CVTRV467 EQU   CVTRV466
CVTRV465 EQU   CVTRV457
CVTRV464 EQU   CVTRV457
CVTRV463 EQU   CVTRV457
CVTRV462 EQU   CVTRV457
CVTRV461 EQU   CVTRV457
CVTRV460 EQU   CVTRV457
CVTRV459 EQU   CVTRV457
CVTRV458 EQU   CVTRV457
CVTRV456 EQU   CVTXTNT2+108
CVTRV455 EQU   CVTXTNT2+104
CVTRV454 EQU   CVTXTNT2+100
CVTRV453 EQU   CVTXTNT2+96
CVTRV452 EQU   CVTXTNT2+94
CVTRV451 EQU   CVTXTNT2+92
CVTRV450 EQU   CVTXTNT2+90
CVTRV449 EQU   CVTXTNT2+88
CVTRV448 EQU   CVTXTNT2+87
CVTRV447 EQU   CVTXTNT2+86
CVTRV446 EQU   CVTRV438
CVTRV445 EQU   CVTRV438
CVTRV444 EQU   CVTRV438
CVTRV443 EQU   CVTRV438
CVTRV442 EQU   CVTRV438
CVTRV441 EQU   CVTRV438
CVTRV440 EQU   CVTRV438
CVTRV439 EQU   CVTRV438
CVTRV437 EQU   CVTRV429
CVTRV436 EQU   CVTRV429
CVTRV435 EQU   CVTRV429
CVTRV434 EQU   CVTRV429
CVTRV433 EQU   CVTRV429
CVTRV432 EQU   CVTRV429
CVTRV431 EQU   CVTRV429
CVTRV430 EQU   CVTRV429
CVTRV428 EQU   CVTXTNT2+80
CVTRV427 EQU   CVTXTNT2+76
CVTRV426 EQU   CVTXTNT2+72
CVTRV425 EQU   CVTXTNT2+68
CVTATACT EQU   CVTATCVT
CVTRV423 EQU   CVTXTNT2+62
CVTRV422 EQU   CVTXTNT2+60
CVTRV421 EQU   CVTXTNT2+58
CVTRV420 EQU   CVTXTNT2+56
CVTRV419 EQU   CVTXTNT2+55
CVTRV418 EQU   CVTXTNT2+54
CVTRV417 EQU   CVTRV409
CVTRV416 EQU   CVTRV409
CVTRV415 EQU   CVTRV409
CVTRV414 EQU   CVTRV409
CVTRV413 EQU   CVTRV409
CVTRV412 EQU   CVTRV409
CVTRV411 EQU   CVTRV409
CVTRV410 EQU   CVTRV409
CVTRV408 EQU   CVTRV400
CVTRV407 EQU   CVTRV400
CVTRV406 EQU   CVTRV400
CVTRV405 EQU   CVTRV400
CVTRV404 EQU   CVTRV400
CVTRV403 EQU   CVTRV400
CVTRV402 EQU   CVTRV400
CVTRV401 EQU   CVTRV400
CVTICB   EQU   CVTXTNT2+48
CVTSKTA  EQU   CVTXTNT2+44
CVTCCVT  EQU   CVTXTNT2+40
CVTRSV98 EQU   CVTXTNT2+36
CVTRSV97 EQU   CVTXTNT2+34
CVTRSV96 EQU   CVTXTNT2+32
CVTOLTEP EQU   CVTXTNT2+28
CVTQIDA  EQU   CVTQID+1
CVTRSV95 EQU   CVTQID
CVTRSV94 EQU   CVTXTNT2+20
CVTRSV93 EQU   CVTXTNT2+16
CVTRSV92 EQU   CVTXTNT2+12
CVTDEBVR EQU   CVTXTNT2+8
CVTRSV91 EQU   CVTXTNT2+6
CVTRSV9H EQU   CVTFLGBT
CVTRSV9G EQU   CVTFLGBT
CVTRSV9F EQU   CVTFLGBT
CVTRSV9E EQU   CVTFLGBT
CVTRSV9D EQU   CVTFLGBT
CVTBAH   EQU   CVTFLGBT
CVTVME   EQU   CVTFLGBT
CVTNPE   EQU   CVTFLGBT
CVTNUCLS EQU   CVTXTNT2+4
CVTDSSVA EQU   CVTDSSV+1
CVTRSV89 EQU   CVTDSSV
CVTRSV88 EQU   CVTXTNT1+8
CVTRSV87 EQU   CVTXTNT1+4
CVTFACHN EQU   CVTXTNT1
CVTRV488 EQU   CVTMAP+412
CVTRV487 EQU   CVTMAP+408
CVTRV486 EQU   CVTMAP+404
CVTRV485 EQU   CVTMAP+400
CVTACTAP EQU   CVTMAP+396
CVTAUTH  EQU   CVTMAP+392
CVTRV490 EQU   CVTMAP+388
CVTSU    EQU   CVTMAP+384
CVTVOLT1 EQU   CVTVOLM1+1
CVTVOLI1 EQU   CVTVOLF1
CVTSTOA  EQU   CVTMAP+376
CVTRSV58 EQU   CVTMAP+374
CVTRSV57 EQU   CVTMAP+372
CVTDDCE  EQU   CVTMAP+368
CVTPNWFR EQU   CVTMAP+364
CVTSMF   EQU   CVTMAP+360
CVTSULK  EQU   CVTMAP+358
CVTSLKO  EQU   CVTSYSK
CVTSLKP  EQU   CVTSYSK
CVTSLKQ  EQU   CVTSYSK
CVTSLKR  EQU   CVTSYSK
CVTRSV56 EQU   CVTSYSK
CVTRSV55 EQU   CVTSYSK
CVTRSV54 EQU   CVTSYSK
CVTRSV53 EQU   CVTSYSK
CVTRSV52 EQU   CVTA1F1
CVTRSV51 EQU   CVTA1F1
CVTRSV50 EQU   CVTA1F1
CVTRSV49 EQU   CVTA1F1
CVTRSV48 EQU   CVTA1F1
CVTRSV47 EQU   CVTA1F1
CVTSRSW  EQU   CVTA1F1
CVTPFSW  EQU   CVTA1F1
CVTPCVT  EQU   CVTMAP+352
CVTRSV46 EQU   CVTMAP+344
CVTRSV45 EQU   CVTMAP+340
CVTRSV44 EQU   CVTMAP+338
CVTRSV43 EQU   CVTMAP+336
CVTHJESA EQU   CVTHJES+1
CVTRSV42 EQU   CVTHJES
CVTEXT2A EQU   CVTEXT2+1
CVTRSV41 EQU   CVTEXT2
CVTAPFA  EQU   CVTAPF+1
CVTRSV40 EQU   CVTAPF
CVTRV518 EQU   CVTINTLA
CVTRV517 EQU   CVTERPV
CVTEORM  EQU   CVTMAP+312
CVTMCHPR EQU   CVTMAP+308
CVTTZ    EQU   CVTMAP+304
CVTJEPS  EQU   CVTMAP+300
CVTJESCT EQU   CVTMAP+296
CVTMODE  EQU   CVTMAP+292
CVTPTRV  EQU   CVTMAP+288
CVTREAL  EQU   CVTMAP+284
CVTRSV39 EQU   CVTMAP+280
CVTRSV38 EQU   CVTMAP+276
CVTDMSRA EQU   CVTDMSR+1
CVTRV634 EQU   CVTDMSRF
CVTRV633 EQU   CVTDMSRF
CVTRV632 EQU   CVTDMSRF
CVTRV631 EQU   CVTDMSRF
CVTRV630 EQU   CVTDMSRF
CVTRV629 EQU   CVTDMSRF
CVTUDUMP EQU   CVTDMSRF
CVTSDUMP EQU   CVTDMSRF
CVTQMSGA EQU   CVTQMSG+1
CVTRSV36 EQU   CVTQMSG
CVTAMFF  EQU   CVTMAP+264
CVTPURGA EQU   CVTPURG+1
CVTRSV35 EQU   CVTPURG
CVTCBSP  EQU   CVTMAP+256
CVTATERA EQU   CVTATER+1
CVTSYST  EQU   CVTATER
CVTVOLT2 EQU   CVTTAT
CVTVOLI2 EQU   CVTVOLF2
CVTAQAVB EQU   CVTAQAVT+1
CVTRSV34 EQU   CVTTCMFG
CVTRSV33 EQU   CVTTCMFG
CVTRSV32 EQU   CVTTCMFG
CVTRSV31 EQU   CVTTCMFG
CVTRSV30 EQU   CVTTCMFG
CVTRSV29 EQU   CVTTCMFG
CVTLDEV  EQU   CVTTCMFG
CVTTCRDY EQU   CVTTCMFG
CVTGTFA  EQU   CVTGTF+1
CVTRSV27 EQU   CVTGTFST
CVTRNIO  EQU   CVTGTFST
CVTUSR   EQU   CVTGTFST
CVTRV318 EQU   CVTFORM
CVTRV317 EQU   CVTTMODE
CVTRV316 EQU   CVTSTATE
CVTRV315 EQU   CVTGTFS
CVTGTFAV EQU   CVTGTFS
CVT0SCR1 EQU   CVTMAP+232
CVTRV515 EQU   CVTMAP+228
CVTRMS   EQU   CVTMAP+224
CVTPATCH EQU   CVTMAP+220
CVTTSCE  EQU   CVTMAP+216
CVTLNKSC EQU   CVTMAP+214
CVTQABST EQU   CVTMAP+212
CVTMDLDS EQU   CVTMAP+208
CVTUSER  EQU   CVTMAP+204
CVTSMCA  EQU   CVTMAP+196
CVTRSV18 EQU   CVTMAP+192
CVTQLPAQ EQU   CVTMAP+188
CVTQCDSR EQU   CVTMAP+184
CVTVS1B  EQU   CVTOPTB
CVTVS1A  EQU   CVTOPTB
CVTFP    EQU   CVTOPTB
CVTAPTHR EQU   CVTOPTB
CVTNLOG  EQU   CVTOPTB
CVTTOD   EQU   CVTOPTB
CVTCTIMS EQU   CVTOPTB
CVTPROT  EQU   CVTOPTB
CVTXPFP  EQU   CVTOPTA
CVTASCII EQU   CVTOPTA
CVTRSV13 EQU   CVTOPTA
CVTRSV12 EQU   CVTOPTA
CVTNIP   EQU   CVTOPTA
CVTDDR   EQU   CVTOPTA
CVTAPR   EQU   CVTOPTA
CVTCCH   EQU   CVTOPTA
CVTSNCTR EQU   CVTMAP+180
CVTQMWR  EQU   CVTMAP+176
CVTQOCR  EQU   CVTMAP+172
CVT1EF00 EQU   CVTMAP+168
CVTMZ00  EQU   CVTMAP+164
CVTSV76Q EQU   CVTSV76C
CVTRSV11 EQU   CVTMAP+156
CVT0PT01 EQU   CVTMAP+152
CVTMSER  EQU   CVTMAP+148
CVTRV516 EQU   CVTIERLC
CVTILCH  EQU   CVTMAP+140
CVT0DS   EQU   CVTMAP+136
CVTFBOSV EQU   CVTMAP+132
CVTNUCB  EQU   CVTMAP+128
CVTIXAVL EQU   CVTMAP+124
CVTSV76M EQU   CVTIOQET
CVTDCBA  EQU   CVTMAP+117
CVTMVS2  EQU   CVTDCB
CVT6DAT  EQU   CVTDCB
CVT4MPS  EQU   CVTDCB
CVTRSV09 EQU   CVTDCB
CVT4MS1  EQU   CVTDCB
CVT2SPS  EQU   CVTDCB
CVT1SSS  EQU   CVTDCB
CVTRSV08 EQU   CVTDCB
CVTSTB   EQU   CVTMAP+112
CVTQTD00 EQU   CVTMAP+108
CVTCUCB  EQU   CVTMAP+100
CVTSJQ   EQU   CVTMAP+96
CVTPBLDL EQU   CVTMAP+92
CVTSVDCB EQU   CVTMAP+84
CVTEXIT  EQU   CVTMAP+80
CVT0FN00 EQU   CVTMAP+76
CVTDARA  EQU   CVTDAR+1
CVTRSV07 EQU   CVTFLGS1
CVTRSV06 EQU   CVTFLGS1
CVTRSV05 EQU   CVTFLGS1
CVTRSV04 EQU   CVTFLGS1
CVTRSV03 EQU   CVTFLGS1
CVTRSV02 EQU   CVTFLGS1
CVTRSV01 EQU   CVTFLGS1
CVTDMPLK EQU   CVTFLGS1
CVTXITP  EQU   CVTMAP+68
CVTZDTAB EQU   CVTMAP+64
CVTMSLT  EQU   CVTMAP+60
CVTDATE  EQU   CVTMAP+56
CVTSYSAD EQU   CVTMAP+48
CVTXTLER EQU   CVTMAP+44
CVTILK2  EQU   CVTMAP+40
CVTILK1  EQU   CVTMAP+36
CVTPRLTV EQU   CVTMAP+32
CVTPCNVT EQU   CVTMAP+28
CVT0VL00 EQU   CVTMAP+24
CVTXAPG  EQU   CVTMAP+20
CVTBUF   EQU   CVTMAP+16
CVTJOB   EQU   CVTMAP+12
CVTLINK  EQU   CVTMAP+8
CVT0EF00 EQU   CVTMAP+4
CVTTCBP  EQU   CVTMAP
@NM00024 EQU   PSA+3668
PSASTAK  EQU   PSA+3072
@NM00023 EQU   PSA+1048
PSAUSEND EQU   PSA+1048
PSARV062 EQU   PSA+1044
PSACDAL  EQU   PSA+1040
PSAWTCOD EQU   PSA+1036
PSAATCVT EQU   PSA+1032
PSAPCPSW EQU   PSA+1024
PSAPIR2  EQU   PSA+1020
PSARV059 EQU   PSA+1018
PSASVC13 EQU   PSA+1016
PSASFACC EQU   PSA+1008
PSASTOP  EQU   PSA+992
PSASTART EQU   PSA+976
PSARSPSW EQU   PSA+968
PSASRPSW EQU   PSA+960
PSARV045 EQU   PSA+892
PSARV044 EQU   PSA+888
PSARV043 EQU   PSA+884
PSARV042 EQU   PSA+880
PSARV041 EQU   PSA+876
PSARV040 EQU   PSA+872
PSARV025 EQU   PSA+868
PSADSSED EQU   PSA+868
PSADSSPR EQU   PSA+864
PSADSSFW EQU   PSA+860
PSADSS14 EQU   PSA+856
PSADSSPP EQU   PSA+848
PSADSSRP EQU   PSA+840
PSADSS05 EQU   PSADSSF4
PSADSS10 EQU   PSADSSF4
PSADSSVE EQU   PSADSSF4
PSADSSDE EQU   PSADSSF4
PSADSSC0 EQU   PSADSSF4
PSADSSIE EQU   PSADSSF4
PSADSS12 EQU   PSADSSF4
PSADSSRC EQU   PSADSSF4
PSARV057 EQU   PSADSSF3
PSARV056 EQU   PSADSSF3
PSARV055 EQU   PSADSSF3
PSADSSMC EQU   PSADSSF3
PSADSSRW EQU   PSADSSF3
PSADSSNM EQU   PSADSSF3
PSADSSES EQU   PSADSSF3
PSADSSGP EQU   PSADSSF3
PSADSSF2 EQU   PSADSSFL+1
PSADSSPI EQU   PSADSSF1
PSADSSOI EQU   PSADSSF1
PSADSSSP EQU   PSADSSF1
PSADSSTP EQU   PSADSSF1
PSADSSDW EQU   PSADSSF1
PSADSSDD EQU   PSADSSF1
PSADSSDM EQU   PSADSSF1
PSADSSMV EQU   PSADSSF1
PSADSSTS EQU   PSA+816
PSADSSWK EQU   PSA+812
PSADSSR3 EQU   PSA+808
PSADSSR2 EQU   PSA+804
PSADSSRS EQU   PSA+800
PSASTOR  EQU   PSA+796
PSACPUSA EQU   PSA+794
PSAVSTAP EQU   PSA+792
PSAWKVAP EQU   PSA+788
PSAWKRAP EQU   PSA+784
PSAMCHIC EQU   PSA+783
PSARV061 EQU   PSA+782
PSASYMSK EQU   PSA+781
PSAMCHFL EQU   PSA+780
PSACR0   EQU   PSA+776
PSAPSWSV EQU   PSA+768
PSACLHS  EQU   PSAHLHI
PSALKR15 EQU   PSALKSA+60
PSALKR14 EQU   PSALKSA+56
PSALKR13 EQU   PSALKSA+52
PSALKR12 EQU   PSALKSA+48
PSALKR11 EQU   PSALKSA+44
PSALKR10 EQU   PSALKSA+40
PSALKR9  EQU   PSALKSA+36
PSALKR8  EQU   PSALKSA+32
PSALKR7  EQU   PSALKSA+28
PSALKR6  EQU   PSALKSA+24
PSALKR5  EQU   PSALKSA+20
PSALKR4  EQU   PSALKSA+16
PSALKR3  EQU   PSALKSA+12
PSALKR2  EQU   PSALKSA+8
PSALKR1  EQU   PSALKSA+4
PSALKR0  EQU   PSALKSA
PSARV023 EQU   PSACLHT+52
PSALOCAL EQU   PSACLHT+48
PSACMSL  EQU   PSACLHT+44
PSAOPTL  EQU   PSACLHT+40
PSATPACL EQU   PSACLHT+36
PSATPDNL EQU   PSACLHT+32
PSATPNCL EQU   PSACLHT+28
PSAIOSLL EQU   PSACLHT+24
PSAIOSUL EQU   PSACLHT+20
PSAIOSCL EQU   PSACLHT+16
PSAIOSSL EQU   PSACLHT+12
PSASALCL EQU   PSACLHT+8
PSAASML  EQU   PSACLHT+4
PSADISPL EQU   PSACLHT
PSASRSA  EQU   PSA+636
PSARV050 EQU   PSA+634
PSADSSGO EQU   PSA+633
PSARECUR EQU   PSA+632
PSAHLHIS EQU   PSA+628
PSAIPCSA EQU   PSA+624
@NM00022 EQU   PSA+621
PSAIPCDM EQU   PSA+620
PSAIPCD  EQU   PSA+616
@NM00021 EQU   PSA+613
PSAIPCRM EQU   PSA+612
PSAIPCR  EQU   PSA+608
PSAMCHEX EQU   PSA+600
PSAMPSW  EQU   PSA+592
PSAEXPS2 EQU   PSA+584
PSAEXPS1 EQU   PSA+576
PSAPIREG EQU   PSA+572
PSARSREG EQU   PSA+568
PSAGPREG EQU   PSA+556
PSARV022 EQU   PSASUP4
PSARV021 EQU   PSASUP4
PSARV020 EQU   PSASUP4
PSARV019 EQU   PSASUP4
PSARV018 EQU   PSASUP4
PSARV017 EQU   PSASUP4
PSARV016 EQU   PSASUP4
PSARV015 EQU   PSASUP4
PSARV014 EQU   PSASUP3
PSAULCMS EQU   PSASUP3
PSARV012 EQU   PSASUP3
PSAESTA  EQU   PSASUP3
PSASPR   EQU   PSASUP3
PSAPSREG EQU   PSASUP3
PSAPI2   EQU   PSASUP3
PSAIOSUP EQU   PSASUP3
PSALCR   EQU   PSASUP2
PSARTM   EQU   PSASUP2
PSAACR   EQU   PSASUP2
PSAIPCE2 EQU   PSASUP2
PSAIPCES EQU   PSASUP2
PSAIPCEC EQU   PSASUP2
PSAGTF   EQU   PSASUP2
PSAIPCRI EQU   PSASUP2
PSATYPE6 EQU   PSASUP1
PSATCTL  EQU   PSASUP1
PSADISP  EQU   PSASUP1
PSALOCK  EQU   PSASUP1
PSAPI    EQU   PSASUP1
PSAEXT   EQU   PSASUP1
PSASVC   EQU   PSASUP1
PSAIO    EQU   PSASUP1
PSAANEW  EQU   PSA+544
PSATNEW  EQU   PSA+536
PSALCCAR EQU   PSA+532
PSAPCCAR EQU   PSA+524
PSAPCCAV EQU   PSA+520
PSACPULA EQU   PSA+518
PSACPUPA EQU   PSA+516
PSAPSA   EQU   PSA+512
FLCHDEND EQU   PSA+512
FLCCRSAV EQU   FLCMCLA+280
FLCGRSAV EQU   FLCMCLA+216
FLCFPSAV EQU   FLCMCLA+184
FLCFLA   EQU   FLCMCLA+88
FLCRGNCD EQU   FLCMCLA+84
FLCFSAA  EQU   FLCFSA+1
@NM00020 EQU   FLCFSA
@NM00019 EQU   FLCMCLA+72
FLCMCIC  EQU   FLCMCLA+64
@NM00018 EQU   FLCMCLA+20
FLCIOAA  EQU   FLCIOA+1
@NM00017 EQU   FLCIOA
@NM00016 EQU   FLCMCLA+15
@NM00015 EQU   FLCMCLA+14
@NM00014 EQU   FLCMCLA+12
FLCLCL   EQU   FLCMCLA+8
FLCIOELA EQU   FLCIOEL+1
@NM00013 EQU   FLCIOEL
FLCCHNID EQU   FLCMCLA
@NM00012 EQU   PSA+160
FLCMTRCD EQU   PSA+157
@NM00011 EQU   PSA+156
FLCPERA  EQU   FLCPER+1
@NM00010 EQU   FLCPER
@NM00009 EQU   PSA+151
FLCPERCD EQU   PSA+150
FLCMCNUM EQU   PSA+149
@NM00008 EQU   PSA+148
FLCTEAA  EQU   FLCTEA+1
@NM00007 EQU   FLCTEA
PSAPIPC  EQU   PSAPICOD
PSAPIMC  EQU   PSAPICOD
PSAPIPER EQU   PSAPICOD
PSARV049 EQU   FLCPICOD
FLCPILCB EQU   FLCPIILC
@NM00006 EQU   FLCPIILC
@NM00005 EQU   PSAEPPSW
FLCSVCN  EQU   PSAESPSW+2
FLCSILCB EQU   FLCSVILC
@NM00004 EQU   FLCSVILC
@NM00003 EQU   PSAESPSW
FLCEICOD EQU   PSAEEPSW+2
PSASPAD  EQU   PSAEEPSW
@NM00002 EQU   PSA+128
FLCINPSW EQU   PSA+120
FLCMNPSW EQU   PSA+112
FLCPNPSW EQU   PSA+104
FLCSNPSW EQU   PSA+96
FLCENPSW EQU   PSA+88
FLCTRACE EQU   PSA+84
FLCTIMER EQU   PSA+80
FLCCVT2  EQU   PSA+76
FLCCAW   EQU   PSA+72
FLCCSW   EQU   PSA+64
FLCIOPSW EQU   PSA+56
FLCMOPSW EQU   PSA+48
FLCPOPSW EQU   PSA+40
FLCSOPSW EQU   PSA+32
FLCEOPSW EQU   PSA+24
@NM00001 EQU   FLCICCW2+4
FLCICCW1 EQU   FLCROPSW
FLCIPPSW EQU   FLCRNPSW
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RC00154 EQU   @RC00152
@RC00247 EQU   @RC00245
@RF00320 EQU   @RC00317
@RC00513 EQU   @EL00003
@RC00646 EQU   @RC00644
@ENDDATA EQU   *
         END   IEAVTSDX,(C'PLS1125',0701,78125)
