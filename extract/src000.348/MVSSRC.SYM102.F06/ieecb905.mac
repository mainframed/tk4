         TITLE 'IEECB905-SLIP COMMAND PROCESSOR                        *
                        '
IEECB905 CSECT ,                                                   0001
@MAINENT DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL1(16)                                             0001
         DC    C'IEECB905  78.103'                                 0001
         DROP  @15
@PROLOG  BALR  @12,0                                               0001
@PSTART  LA    @11,4095(,@12)                                      0001
         LA    @10,4095(,@11)                                      0001
         USING @PSTART,@12                                         0001
         USING @PSTART+4095,@11                                    0001
         USING @PSTART+8190,@10                                    0001
         LR    @08,@01                                             0001
         L     @00,@SIZDATD                                        0001
         GETMAIN  R,LV=(0)
         LR    @04,@01                                             0001
         USING @DATD,@04                                           0001
         LR    @01,@08                                             0001
         ST    @13,@SA00001+4                                      0001
         LR    @13,@04                                             0001
RBPRFXLN EQU 64
RBPRFLNA EQU 32
PRBLEN   EQU 136
SIRBLEN  EQU 200
TIRBLEN  EQU 136
IRBLEN   EQU 128
SVRBLEN  EQU 224
*   SAVR14=R14;                     /* SAVE RETURN ADDR              */
         LR    SAVR14,R14                                          0127
*   RFY                                                            0128
*     SESTAE BASED(ADDR(STAE906));                                 0128
*   SESTAE=SESTAE&&SESTAE;          /* INIT ESTAE PARMAREA TO ZERO   */
         LA    @15,STAE906                                         0129
         XC    SESTAE(24,@15),SESTAE(@15)                          0129
*   CSCBPTR=R1;                     /* SAVE CSCB ADDR                */
         ST    R1,CSCBPTR(,@15)                                    0130
*   RFY                                                            0131
*    (R1,                                                          0131
*     R14) UNRSTD;                                                 0131
*   CALL SETESTAE;                  /* SET UP ESTAE ENVIRONMENT      */
         BAL   @14,SETESTAE                                        0132
*   WA=WA&&WA;                      /* INIT WORKAREA TO ZERO         */
         XC    WA(86),WA                                           0133
*   WAUCMP=CHUCMP;                  /* SAVE CONSOLE ID OF ISSUER     */
         LA    @15,STAE906                                         0134
         L     @15,CSCBPTR(,@15)                                   0134
         MVC   WAUCMP(1),CHUCMP(@15)                               0134
*   WAID=BLANKS;                    /* INIT WAID TO BLANKS           */
         MVC   WAID(4),@CC03150                                    0135
*   TEXTPTR=ADDR(CHBUF);            /* INIT TO START OF CMD TEXT     */
         LA    @15,CHBUF(,@15)                                     0136
         ST    @15,TEXTPTR                                         0136
*   EOL=TEXTPTR+LENGTH(CHBUF);      /* INIT END-OF-LINE PTR          */
         LA    @14,124                                             0137
         ALR   @14,@15                                             0137
         ST    @14,EOL                                             0137
*   REPLY=ADDR(REPLYBUF);           /* INIT REPLY BUFFER PTR         */
         LA    REPLY,REPLYBUF                                      0138
*   NEWLINE=ADDR(NLINEBUF);         /* INIT NEW-LINE BUFFER PTR      */
         LA    @14,NLINEBUF                                        0139
         ST    @14,NEWLINE                                         0139
*   NXTOP=ZERO;                     /* INIT SCAN PTR SAVE AREA       */
*                                                                  0140
         SLR   @14,@14                                             0140
         ST    @14,NXTOP                                           0140
*   /*****************************************************************/
*   /*                                                               */
*   /* THE OPERAND IS CHECKED FOR ONE OF THE THREE POSSIBLE          */
*   /* POSITIONAL PARAMETERS, 'SET' OR 'MOD' OR 'DEL'. THEN CONTROL  */
*   /* IS PASSED TO THE APPROPRIATE SUBROUTINE.                      */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0141
*   IF IN(1:4)=SETC×                /* IF FIRST KEYWORD IS SET       */
*       IN(1:4)=SETB THEN                                          0141
         CLC   IN(4,@15),@CC03124                                  0141
         BE    @RT00141                                            0141
         CLC   IN(4,@15),@CC03122                                  0141
         BNE   @RF00141                                            0141
@RT00141 DS    0H                                                  0142
*     DO;                                                          0142
*                                                                  0142
*/********************************************************************
**   A SET SLIP HAS BEEN ISSUED IN ORDER TO ADD A TRAP TOS SLIP. THIS
**   ROUTINE WILL SCAN THE OPERANDS AND CALL THE APPROPRIATE       0143
**   SUBROUTINE TO PROCESS THEM.                                   0143
**********************************************************************/
*                                                                  0143
*       SESTSET=ON;                 /* IND TO ESTAE SLIP SET         */
         LA    @15,STAE906                                         0143
         OI    SESTSET(@15),B'00010000'                            0143
*       IF INCHAR4=BLANK THEN       /* IF BLANK FOLLOWS KEYWORD      */
         L     @15,TEXTPTR                                         0144
         CLI   INCHAR4(@15),C' '                                   0144
         BNE   @RF00144                                            0144
*         TEXTPTR=TEXTPTR+THREE;    /* UPDATE PTR TO BLANK           */
         AH    @15,@CH00292                                        0145
         ST    @15,TEXTPTR                                         0145
*       ELSE                        /* IF COMMA                      */
*         TEXTPTR=TEXTPTR+FOUR;     /* UPDATE PTR PAST COMMA         */
*                                                                  0146
         B     @RC00144                                            0146
@RF00144 LA    @15,4                                               0146
         AL    @15,TEXTPTR                                         0146
         ST    @15,TEXTPTR                                         0146
*       /*************************************************************/
*       /*                                                           */
*       /* OBTAIN STORAGE IN FIXED SQA (SUBPOOL 245) FOR AN SCE.     */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0147
*       RFY                                                        0147
*        (R0,                                                      0147
*         R1,                                                      0147
*         R15) RSTD;                                               0147
@RC00144 DS    0H                                                  0148
*       R0=SIZESCE×SP245;           /* SCE LENGTH AND SUBPOOL NUM    */
         L     R0,SIZESCE                                          0148
         O     R0,@CF03117                                         0148
*       GEN(GETMAIN R,LV=(0));                                     0149
         GETMAIN R,LV=(0)
*       SCEPTR=R1;                  /* SAVE ADDR IN PTR              */
         LA    @14,STAE906                                         0150
         ST    R1,SCEPTR(,@14)                                     0150
*       SCE=SCE&&SCE;               /* CLEAR SCE TO ZEROS            */
         LA    @14,STAE906                                         0151
         L     @14,SCEPTR(,@14)                                    0151
         XC    SCE(36,@14),SCE(@14)                                0151
*       SCECBID=IDSCE;              /* INIT CONTROL BLOCK ID         */
         MVC   SCECBID(4,@14),@CC03159                             0152
*       SCEUCMP=WAUCMP;             /* INIT CONSOLE ID OF ISSUER     */
         MVC   SCEUCMP(1,@14),WAUCMP                               0153
*       RFY                                                        0154
*        (R0,                                                      0154
*         R1,                                                      0154
*         R15) UNRSTD;                                             0154
*       DO WHILE WAFIN=OFF;         /* LOOP TO PROCESS THE OPERANDS
*                                      OF THE CMD ONE KEYWORD AT A 0155
*                                      TIME UNTIL FINISHED           */
         B     @DE00155                                            0155
@DL00155 DS    0H                                                  0156
*         WAPAREN=OFF;              /* INIT PARENTHESIS BIT          */
         NI    WAPAREN,B'11111011'                                 0156
*         CALL SCAN;                /* SCAN INPUT FOR NON-ALPHANUM   */
         BAL   @14,SCAN                                            0157
*         IF WAFIN=OFF THEN         /* IF CMD HAS NOT BEEN CANCELED  */
         TM    WAFIN,B'00100000'                                   0158
         BNZ   @RF00158                                            0158
*           DO;                                                    0159
*             RFY                                                  0160
*               IN BASED(SCANPTR);                                 0160
*             IF WARESP=ON THEN     /* IF 1ST NON-ALPHANUMERIC IS    */
         TM    WARESP,B'00010000'                                  0161
         BNO   @RF00161                                            0161
*               DO;                 /* NOT A BLANK,COMMA,OR EOL      */
*                 IF INCHAR^=EQUAL THEN/* CHECK FOR EQUAL SIGN       */
         L     @01,SCANPTR                                         0163
         CLI   INCHAR(@01),C'='                                    0163
         BE    @RF00163                                            0163
*                   DATALN=DATALN-ONE;/* IF NOT, ADJUST LENGTH       */
         LH    @15,DATALN                                          0164
         BCTR  @15,0                                               0164
         STH   @15,DATALN                                          0164
*                 WARESP=OFF;       /* RESET INALID SYNTAX FLAG      */
@RF00163 NI    WARESP,B'11101111'                                  0165
*               END;                                               0166
*             RFY                                                  0167
*               IN BASED(TEXTPTR);                                 0167
@RF00161 DS    0H                                                  0168
*             IF DATALN>ZERO&       /* IF LENGTH OF KEYWORD IS       */
*                 DATALN<NINE THEN  /* WITHIN LIMITS                 */
         LH    @15,DATALN                                          0168
         LTR   @15,@15                                             0168
         BNP   @RF00168                                            0168
         CH    @15,@CH02322                                        0168
         BNL   @RF00168                                            0168
*               DO;                                                0169
*                                                                  0169
*                 /***************************************************/
*                 /*                                                 */
*                 /* SEARCH KEYWORDS IN THE KEYWORD TABLE THAT ARE   */
*                 /* THE SAME LENGTH AS THE INPUT KEYWORD(JUST       */
*                 /* SCANNED) FOR A MATCH.                           */
*                 /*                                                 */
*                 /***************************************************/
*                                                                  0170
*                 UNKNOWN8=IN(1:DATALN);/* COPY FOR TABLE COMPARE    */
         MVI   UNKNOWN8+1,C' '                                     0170
         MVC   UNKNOWN8+2(6),UNKNOWN8+1                            0170
         LR    @14,@15                                             0170
         BCTR  @14,0                                               0170
         L     @01,TEXTPTR                                         0170
         EX    @14,@SM03413                                        0170
*                 KEYWORD=UNKNOWN8; /* SAVE FOR IEE728D ERROR MSG    */
         MVC   KEYWORD(8),UNKNOWN8                                 0171
*                 DO I=KTLNST(DATALN) TO KTLNFN(DATALN) WHILE UNKNOWN8
*                       ^=KTABKEY(I);                              0172
         SLA   @15,2                                               0172
         L     @14,@CV02900                                        0172
         AL    @14,@CF03415                                        0172
         LH    I,KTLNST(@15,@14)                                   0172
         B     @DE00172                                            0172
@DL00172 LR    @02,I                                               0172
         MH    @02,@CH00034                                        0172
         L     @15,@CV02893                                        0172
         ALR   @15,@02                                             0172
         AL    @15,@CF03416                                        0172
         CLC   UNKNOWN8(8),KTABKEY-2(@15)                          0172
         BE    @DC00172                                            0172
*                 END;                                             0173
         AH    I,@CH00063                                          0173
@DE00172 LH    @02,DATALN                                          0173
         SLA   @02,2                                               0173
         L     @15,@CV02900                                        0173
         BCTR  @15,0                                               0173
         BCTR  @15,0                                               0173
         CH    I,KTLNFN-2(@02,@15)                                 0173
         BNH   @DL00172                                            0173
@DC00172 DS    0H                                                  0174
*                 IF I>KTLNFN(DATALN) THEN/* IF NO MATCH,KEYWORD   0174
*                                      INVALID                       */
         LH    @02,DATALN                                          0174
         SLA   @02,2                                               0174
         L     @15,@CV02900                                        0174
         BCTR  @15,0                                               0174
         BCTR  @15,0                                               0174
         CH    I,KTLNFN-2(@02,@15)                                 0174
         BNH   @RF00174                                            0174
*                   WARESP=ON;      /* SETUP TO PROMPT ISSUER        */
         OI    WARESP,B'00010000'                                  0175
*                 ELSE              /* IF MATCH OCCURRED             */
*                   DO;                                            0176
         B     @RC00174                                            0176
@RF00174 DS    0H                                                  0177
*                     TEXTPTR=TEXTPTR+DATALN;/* UPDATE PTR           */
         LH    @02,DATALN                                          0177
         AL    @02,TEXTPTR                                         0177
         ST    @02,TEXTPTR                                         0177
*                     CALL KEYSUB;  /* PROCESS KEYWORD               */
         LR    @02,I                                               0178
         MH    @02,@CH00034                                        0178
         L     @14,@CV02893                                        0178
         AL    @14,@CF03417                                        0178
         LH    @02,KTABKSUB(@02,@14)                               0178
         SLA   @02,2                                               0178
         L     @15,KSUBLIST-4(@02)                                 0178
         BALR  @14,@15                                             0178
*                   END;                                           0179
*               END;                                               0180
*             ELSE                                                 0181
*               DO;                                                0181
         B     @RC00168                                            0181
@RF00168 DS    0H                                                  0182
*                 IF DATALN=ZERO THEN                              0182
         ICM   @15,3,DATALN                                        0182
         BNZ   @RF00182                                            0182
*                   KEYWORD=IN(1:1);                               0183
         MVI   KEYWORD+1,C' '                                      0183
         MVC   KEYWORD+2(6),KEYWORD+1                              0183
         L     @01,TEXTPTR                                         0183
         MVC   KEYWORD(1),IN(@01)                                  0183
*                 ELSE                                             0184
*                   KEYWORD=IN(1:8);                               0184
         B     @RC00182                                            0184
@RF00182 L     @01,TEXTPTR                                         0184
         MVC   KEYWORD(8),IN(@01)                                  0184
*                 WARESP=ON;                                       0185
@RC00182 OI    WARESP,B'00010000'                                  0185
*               END;                                               0186
*             IF WAFIN=OFF THEN     /* IF COMMAND NOT FINISHED       */
@RC00168 TM    WAFIN,B'00100000'                                   0187
         BNZ   @RF00187                                            0187
*               CALL NEXTKEY;       /* PREPARE FOR NEXT KEYWORD      */
         BAL   @14,NEXTKEY                                         0188
*           END;                                                   0189
@RF00187 DS    0H                                                  0190
*       END;                        /* END OF WAFIN DOWHILE          */
@RF00158 DS    0H                                                  0190
@DE00155 TM    WAFIN,B'00100000'                                   0190
         BZ    @DL00155                                            0190
*       IF SCEPTR^=ZERO THEN        /* IF AN SCE WAS OBTAINED BUT NOT
*                                      ADDED TO THE CHAIN            */
         LA    @15,STAE906                                         0191
         ICM   @14,15,SCEPTR(@15)                                  0191
         BZ    @RF00191                                            0191
*         CALL FREESCE;             /* FREE THE SCE                  */
         BAL   @14,FREESCE                                         0192
*     END;                                                         0193
*   ELSE                                                           0194
*     IF IN(1:4)=MODC×              /* IF FIRST KEYWORD IS MOD       */
*         IN(1:4)=MODB THEN                                        0194
         B     @RC00141                                            0194
@RF00141 L     @15,TEXTPTR                                         0194
         CLC   IN(4,@15),@CC03128                                  0194
         BE    @RT00194                                            0194
         CLC   IN(4,@15),@CC03126                                  0194
         BNE   @RF00194                                            0194
@RT00194 DS    0H                                                  0195
*       DO;                                                        0195
*                                                                  0195
*/********************************************************************
**   A MODIFY SLIP HAS BEEN ISSUED IN ORDER TO ENABLE OR DISABLE ONE
**   OR ALL SLIP TRAP(S).                                          0196
**********************************************************************/
*                                                                  0196
*         SESTMOD=ON;               /* IND TO ESTAE SLIP MOD         */
         LA    @15,STAE906                                         0196
         OI    SESTMOD(@15),B'00001000'                            0196
*         IF INCHAR4=BLANK THEN     /* IF BLANK FOLLOWS KEYWORD      */
         L     @15,TEXTPTR                                         0197
         CLI   INCHAR4(@15),C' '                                   0197
         BNE   @RF00197                                            0197
*           TEXTPTR=TEXTPTR+THREE;  /* UPDATE PTR TO BLANK           */
         AH    @15,@CH00292                                        0198
         ST    @15,TEXTPTR                                         0198
*         ELSE                      /* IF COMMA                      */
*           TEXTPTR=TEXTPTR+FOUR;   /* UPDATE PTR PAST COMMA         */
         B     @RC00197                                            0199
@RF00197 LA    @15,4                                               0199
         AL    @15,TEXTPTR                                         0199
         ST    @15,TEXTPTR                                         0199
*         DO WHILE WAFIN=OFF;       /* LOOP TO PROCESS THE OPERAND OF
*                                      THE COMMAND ONE KEYWORD AT A
*                                      TIME UNTIL FINISHED           */
@RC00197 B     @DE00200                                            0200
@DL00200 DS    0H                                                  0201
*           CALL SCAN;              /* SCAN INPUT FOR NON-ALPHANUM   */
         BAL   @14,SCAN                                            0201
*           IF WAFIN=OFF THEN       /* IF CMD HAS NOT BEEN CANCELED  */
         TM    WAFIN,B'00100000'                                   0202
         BNZ   @RF00202                                            0202
*             DO;                                                  0203
*               RFY                                                0204
*                 IN BASED(SCANPTR);                               0204
*               IF WARESP=ON THEN   /* IF 1ST NON-ALPHANUMERIC IS    */
         TM    WARESP,B'00010000'                                  0205
         BNO   @RF00205                                            0205
*                 DO;               /* NOT A BLANK,COMMA,OR EOL      */
*                   IF INCHAR^=EQUAL THEN/* CHECK FOR EQUAL SIGN     */
         L     @01,SCANPTR                                         0207
         CLI   INCHAR(@01),C'='                                    0207
         BE    @RF00207                                            0207
*                     DATALN=DATALN-ONE;/* IF NOT, ADJUST LENGTH     */
         LH    @15,DATALN                                          0208
         BCTR  @15,0                                               0208
         STH   @15,DATALN                                          0208
*                   WARESP=OFF;     /* RESET INVALID SYNTAX FLAG     */
@RF00207 NI    WARESP,B'11101111'                                  0209
*                 END;                                             0210
*               RFY                                                0211
*                 IN BASED(TEXTPTR);                               0211
@RF00205 DS    0H                                                  0212
*               IF DATALN>ZERO&     /* IF LENGTH OF KEYWORD IS       */
*                   DATALN<EIGHT THEN/* WITHIN LIMITS                */
         LH    @15,DATALN                                          0212
         LTR   @15,@15                                             0212
         BNP   @RF00212                                            0212
         CH    @15,@CH00061                                        0212
         BNL   @RF00212                                            0212
*                 DO;                                              0213
*                                                                  0213
*                   /*************************************************/
*                   /*                                               */
*                   /* SEARCH KEYWORDS IN THE KEYWORD TABLE THAT ARE */
*                   /* THE SAME LENGTH AS THE INPUT KEYWORD(JUST     */
*                   /* SCANNED) FOR A MATCH.                         */
*                   /*                                               */
*                   /*************************************************/
*                                                                  0214
*                   UNKNOWN8=IN(1:DATALN);/* COPY FOR TABLE COMPARE  */
         MVI   UNKNOWN8+1,C' '                                     0214
         MVC   UNKNOWN8+2(6),UNKNOWN8+1                            0214
         LR    @14,@15                                             0214
         BCTR  @14,0                                               0214
         L     @01,TEXTPTR                                         0214
         EX    @14,@SM03413                                        0214
*                   KEYWORD=UNKNOWN8;/* SAVE FOR IEE728D ERROR MSG   */
         MVC   KEYWORD(8),UNKNOWN8                                 0215
*                   DO I=MLNST(DATALN) TO MLNFN(DATALN) WHILE UNKNOWN8
*                         ^=MODKKEY(I);                            0216
         SLA   @15,2                                               0216
         L     @14,@CV02911                                        0216
         AL    @14,@CF03415                                        0216
         LH    I,MLNST(@15,@14)                                    0216
         B     @DE00216                                            0216
@DL00216 LR    @02,I                                               0216
         MH    @02,@CH00034                                        0216
         L     @15,@CV02904                                        0216
         ALR   @15,@02                                             0216
         AL    @15,@CF03416                                        0216
         CLC   UNKNOWN8(8),MODKKEY-2(@15)                          0216
         BE    @DC00216                                            0216
*                   END;                                           0217
         AH    I,@CH00063                                          0217
@DE00216 LH    @02,DATALN                                          0217
         SLA   @02,2                                               0217
         L     @15,@CV02911                                        0217
         BCTR  @15,0                                               0217
         BCTR  @15,0                                               0217
         CH    I,MLNFN-2(@02,@15)                                  0217
         BNH   @DL00216                                            0217
@DC00216 DS    0H                                                  0218
*                   IF I>MLNFN(DATALN) THEN/* IF NO MATCH,KEYWORD  0218
*                                      INVALID                       */
         LH    @02,DATALN                                          0218
         SLA   @02,2                                               0218
         L     @15,@CV02911                                        0218
         BCTR  @15,0                                               0218
         BCTR  @15,0                                               0218
         CH    I,MLNFN-2(@02,@15)                                  0218
         BNH   @RF00218                                            0218
*                     WARESP=ON;    /* SETUP TO PROMPT ISSUER        */
         OI    WARESP,B'00010000'                                  0219
*                   ELSE            /* IF MATCH OCCURRED             */
*                     DO;                                          0220
         B     @RC00218                                            0220
@RF00218 DS    0H                                                  0221
*                       TEXTPTR=TEXTPTR+DATALN;/* UPDATE PTR PAST  0221
*                                      KEYWORD                       */
         LH    @02,DATALN                                          0221
         AL    @02,TEXTPTR                                         0221
         ST    @02,TEXTPTR                                         0221
*                       IF I=MODALLX THEN/* IF THE KEYWORD IS ALL    */
         CH    I,@CH00035                                          0222
         BNE   @RF00222                                            0222
*                         DO;                                      0223
*                           WAALLIND=ON;/* IND ALL SPECIFIED         */
         OI    WAALLIND,B'00000001'                                0224
*                           WAID=BLANKS;/* ENSURE WAID IND OFF       */
         MVC   WAID(4),@CC03150                                    0225
*                         END;                                     0226
*                       ELSE        /* IF THE KEYWORD IS NOT ALL     */
*                         CALL MKEYSUB;/* PROCESS KEYWORD            */
         B     @RC00222                                            0227
@RF00222 LR    @02,I                                               0227
         MH    @02,@CH00034                                        0227
         L     @14,@CV02904                                        0227
         AL    @14,@CF03417                                        0227
         LH    @02,MODKSUB(@02,@14)                                0227
         SLA   @02,2                                               0227
         L     @15,KSUBLIST-4(@02)                                 0227
         BALR  @14,@15                                             0227
*                       IF WARESP=OFF&/* IF KEYWORD'S SYNTAX VALID   */
*                           (WAENABLE=ON×/* AND EITHER ENABLE OR     */
*                           WADISABL=ON)&/* DISABLE WAS SPECIFIED AND*/
*                           (WAID^=BLANKS×/* EITHER ID=XXXX OR ALL 0228
*                                      WAS                           */
*                           WAALLIND=ON) THEN/* SPECIFIED            */
@RC00222 TM    WARESP,B'00010000'                                  0228
         BNZ   @RF00228                                            0228
         TM    WAENABLE,B'11000000'                                0228
         BZ    @RF00228                                            0228
         CLC   WAID(4),@CC03150                                    0228
         BNE   @RT00228                                            0228
         TM    WAALLIND,B'00000001'                                0228
         BNO   @RF00228                                            0228
@RT00228 DS    0H                                                  0229
*                         DO;       /* EXECUTE THE MOD COMMAND       */
*/********************************************************************
**THIS SEGMENT IS CALLED TO MODIFY (ENABLE OR DISABLE) ONE OR ALL OF
**THE SCES. THE FLOW IS AS FOLLOWS:                                0230
**     - A CHECK IS MADE TO ENSURE SLIP IS ACTIVE. IF NOT, A MESSAGE
**       IS WRITTEN AND CONTROL EXITS.                             0230
**     - ATTEMPTS (TS INSTRUCTION) ARE MADE TO OBTAIN THE CMD-SEQ  0230
**       BYTE IN THE SHDR. IF UNSUCCESSFUL, A MESSAGE IS WRITTEN   0230
**       ASKING THE ISSUER IF HE WANTS TO RETRY THE TS INSTRUCTION 0230
**       AGAIN OR CANCEL.                                          0230
**     - WHEN CMD-SEQ BYTE OBTAINED, A CHECK IS MADE AGAIN TO ENSURE
**       SLIP IS ACTIVE.                                           0230
**     - IF ALL THE TRAPS WILL BE DISABLED, THE SLIP PROCESSOR,    0230
**       IEAVTSLP, IS DELETED IF IT IS NOT RUNNING. IF IT IS RUNNING,
**       THE 732 MESSAGE IS ISSUED ASKING WHETHER TO RETRY.        0230
**     - IF IEAVTSLP IS NOT LOADED AND AT LEAST ONE TRAP WILL BE   0230
**       ENABLED, LOAD IT.                                         0230
**     - THEN ONE OR ALL OF THE SCES ARE UPDATED TO REFLECT THE    0230
**       REQUEST.                                                  0230
**                                                                 0230
**********************************************************************/
*                                                                  0230
*                           IF CVTRTMS^=ZERO&SHDRCBID^=IDSHDR THEN 0230
         L     @01,CVTPTR                                          0230
         L     @15,CVTRTMS(,@01)                                   0230
         LTR   @15,@15                                             0230
         BZ    @RF00230                                            0230
         CLC   SHDRCBID(4,@15),@CC03157                            0230
         BE    @RF00230                                            0230
*                             GEN(ABEND 102);                      0231
         ABEND 102
*                           IF CVTRTMS=ZERO×SHDRFWD=ZERO THEN/* IF 0232
*                                      SLIP IS NOT ACTIVE            */
@RF00230 SLR   @15,@15                                             0232
         L     @01,CVTPTR                                          0232
         L     @14,CVTRTMS(,@01)                                   0232
         CR    @14,@15                                             0232
         BE    @RT00232                                            0232
         C     @15,SHDRFWD(,@14)                                   0232
         BNE   @RF00232                                            0232
@RT00232 DS    0H                                                  0233
*                             DO;   /* INFORM THE ISSUER             */
*                               CALL IEECB908(MSG733,WAUCMP);      0234
         LA    @15,@CH00032                                        0234
         ST    @15,@AL00001                                        0234
         LA    @15,WAUCMP                                          0234
         ST    @15,@AL00001+4                                      0234
         MVI   @AL00001+4,X'80'                                    0234
         L     @15,@CV02993                                        0234
         LA    @01,@AL00001                                        0234
         BALR  @14,@15                                             0234
*                               WAFIN=ON;/* TERMINATE THE COMMANDS   */
         OI    WAFIN,B'00100000'                                   0235
*                             END;                                 0236
*                           ELSE                                   0237
*                             DO;                                  0237
*                                                                  0237
         B     @RC00232                                            0237
@RF00232 DS    0H                                                  0238
*                               /*************************************/
*                               /*                                   */
*                               /* ATTEMPT TO OBTAIN THE             */
*                               /* COMMAND-SEQUENCING BYTE IN THE    */
*                               /* SHDR                              */
*                               /*                                   */
*                               /*************************************/
*                                                                  0238
*                               CALL GETSEQ;/* ATTEMPT TO GET CMD-SEQ
*                                      BYTE                          */
         BAL   @14,GETSEQ                                          0238
*                               IF SESTSEQ=ON THEN/* IF SEQ BYTE WAS
*                                      OBTAINED                      */
         LA    @15,STAE906                                         0239
         TM    SESTSEQ(@15),B'00100000'                            0239
         BNO   @RF00239                                            0239
*                                 IF SHDRFWD=ZERO THEN/* BUT SLIP IS
*                                      NOT ACTIVE NOW                */
         L     @01,CVTPTR                                          0240
         L     @14,CVTRTMS(,@01)                                   0240
         ICM   @07,15,SHDRFWD(@14)                                 0240
         BNZ   @RF00240                                            0240
*                                   DO;                            0241
*                                    SHDRSEQ=ZEROB;/* RELEASE THE  0242
*                                      CMD-SEQ BYTE                  */
         MVI   SHDRSEQ(@14),X'00'                                  0242
*                                    SESTSEQ=OFF;/* IND CMD-SEQ BYTE
*                                      NOT HELD                      */
         NI    SESTSEQ(@15),B'11011111'                            0243
*                                    CALL IEECB908(MSG733,WAUCMP);/*
*                                      INFORM ISSUER-IEE733I         */
         LA    @15,@CH00032                                        0244
         ST    @15,@AL00001                                        0244
         LA    @15,WAUCMP                                          0244
         ST    @15,@AL00001+4                                      0244
         MVI   @AL00001+4,X'80'                                    0244
         L     @15,@CV02993                                        0244
         LA    @01,@AL00001                                        0244
         BALR  @14,@15                                             0244
*                                    WAFIN=ON;/* TERMINATE THE     0245
*                                      COMMAND                       */
         OI    WAFIN,B'00100000'                                   0245
*                                   END;                           0246
*                                 ELSE/* SLIP IS ACTIVE              */
*                                   DO;                            0247
*                                                                  0247
         B     @RC00240                                            0247
@RF00240 DS    0H                                                  0248
*                                    /********************************/
*                                    /*                              */
*                                    /* AT THIS POINT, THE CMD-SEQ   */
*                                    /* BYTE IS OBTAINED AND SLIP IS */
*                                    /* KNOWN TO BE ACTIVE. THE      */
*                                    /* FOLLOWING CODE WILL LOOP DOWN*/
*                                    /* THE SCE CHAIN IN ORDER TO    */
*                                    /* SATISFY THE REQUEST AS       */
*                                    /* FOLLOWS: - IF ALL, MODIFY    */
*                                    /* EACH SCE AND UPON REACHING   */
*                                    /* END OF CHAIN, WRITE A MESSAGE*/
*                                    /* TO THE ISSUER INFORMING HIM  */
*                                    /* THE COMMAND HAS COMPLETED    */
*                                    /* SUCCESSFULLY. - IF FOR A     */
*                                    /* SPECIFIC SCE(ID=XXXX), THE   */
*                                    /* CHAIN WILL BE SCANNED UNTIL A*/
*                                    /* MATCH OR END OF CHAIN OCCURS.*/
*                                    /* A MESSAGE WILL BE WRITTEN    */
*                                    /* INFORMING THE ISSUER.        */
*                                    /*                              */
*                                    /********************************/
*                                                                  0248
*                                    RFY                           0248
*                                      SCE BASED(SCANSCE);         0248
*                                    IF WADISABL=ON THEN/* IF DISABLE
*                                      WAS SPECIFIED                 */
         TM    WADISABL,B'01000000'                                0249
         BNO   @RF00249                                            0249
*                                     IF SHDRPFC>ZERO THEN/* AND   0250
*                                      IEAVTSLP IS LOADED            */
         L     @01,CVTPTR                                          0250
         L     @01,CVTRTMS(,@01)                                   0250
         ICM   @00,15,SHDRPFC(@01)                                 0250
         BNP   @RF00250                                            0250
*                                      IF WAID=BLANKS THEN/* AND ALL
*                                      WAS THE OPERAND               */
         CLC   WAID(4),@CC03150                                    0251
         BNE   @RF00251                                            0251
*                                       CALL RELVTSLP;/* DELETE    0252
*                                      IEAVTSLP                      */
         BAL   @14,RELVTSLP                                        0252
*                                      ELSE                        0253
*                                       DO;                        0253
         B     @RC00251                                            0253
@RF00251 DS    0H                                                  0254
*                                        SCANSCE=SHDRFWD;/* INIT PTR
*                                      TO SCAN THE SCES              */
         LA    @15,STAE906                                         0254
         L     @01,CVTPTR                                          0254
         L     @01,CVTRTMS(,@01)                                   0254
         MVC   SCANSCE(4,@15),SHDRFWD(@01)                         0254
*                                        DO WHILE SCECBID=IDSCE&SCEFWD
*                                             ^=ZERO&/* LOOP THRU  0255
*                                      SCES UNTIL                    */
*                                             (SCEDSABL=ON×/* END OR
*                                      AN ENABLED SCE                */
*                                             SCEID=WAID);/* OR THE
*                                      SCE SPECIFIED                 */
         B     @DE00255                                            0255
@DL00255 DS    0H                                                  0256
*                                         SCANSCE=SCEFWD;/* UPDATE 0256
*                                      PTR TO NEXT SCE               */
         LA    @15,STAE906                                         0256
         L     @01,SCANSCE(,@15)                                   0256
         L     @14,SCEFWD(,@01)                                    0256
         ST    @14,SCANSCE(,@15)                                   0256
*                                        END;                      0257
@DE00255 LA    @15,STAE906                                         0257
         L     @15,SCANSCE(,@15)                                   0257
         CLC   SCECBID(4,@15),@CC03159                             0257
         BNE   @DC00255                                            0257
         ICM   @14,15,SCEFWD(@15)                                  0257
         BZ    @DC00255                                            0257
         TM    SCEDSABL(@15),B'10000000'                           0257
         BO    @DL00255                                            0257
         CLC   SCEID(4,@15),WAID                                   0257
         BE    @DL00255                                            0257
@DC00255 DS    0H                                                  0258
*                                        IF SCECBID^=IDSCE THEN    0258
         LA    @15,STAE906                                         0258
         L     @01,SCANSCE(,@15)                                   0258
         CLC   SCECBID(4,@01),@CC03159                             0258
         BE    @RF00258                                            0258
*                                         GEN(ABEND 102);          0259
         ABEND 102
*                                        IF(SCEDSABL=ON×/* IF ALL  0260
*                                      TRAPS DISABLED                */
*                                            SCEID=WAID) THEN      0260
@RF00258 LA    @15,STAE906                                         0260
         L     @15,SCANSCE(,@15)                                   0260
         TM    SCEDSABL(@15),B'10000000'                           0260
         BO    @RT00260                                            0260
         CLC   SCEID(4,@15),WAID                                   0260
         BNE   @RF00260                                            0260
@RT00260 DS    0H                                                  0261
*                                         CALL RELVTSLP;/* DELETE  0261
*                                      IEAVTSLP                      */
         BAL   @14,RELVTSLP                                        0261
*                                       END;                       0262
*                                     ELSE                         0263
*                                      ;                           0263
@RF00250 DS    0H                                                  0264
*                                    ELSE/* IF ENABLE WAS SPECIFIED  */
*                                     IF SHDRPFC=ZERO THEN/* AND   0264
*                                      IEAVTSLP NOT LOADED           */
         B     @RC00249                                            0264
@RF00249 L     @01,CVTPTR                                          0264
         L     @01,CVTRTMS(,@01)                                   0264
         ICM   @00,15,SHDRPFC(@01)                                 0264
         BNZ   @RF00264                                            0264
*                                      IF WAID=BLANKS THEN/* IF ALL
*                                      WAS THE OPERAND               */
         CLC   WAID(4),@CC03150                                    0265
         BNE   @RF00265                                            0265
*                                       CALL GETVTSLP;/* LOAD AND  0266
*                                      PGFIX IEAVTSLP                */
         BAL   @14,GETVTSLP                                        0266
*                                      ELSE/* IF AN ID WAS SPECIFIED */
*                                       DO;                        0267
         B     @RC00265                                            0267
@RF00265 DS    0H                                                  0268
*                                        SCANSCE=SHDRFWD;/* INIT PTR
*                                      TO FIRST SCE                  */
         LA    @15,STAE906                                         0268
         L     @01,CVTPTR                                          0268
         L     @01,CVTRTMS(,@01)                                   0268
         MVC   SCANSCE(4,@15),SHDRFWD(@01)                         0268
*                                        DO WHILE SCECBID=IDSCE&SCEFWD
*                                             ^=ZERO&/* SEARCH FOR ID
*                                      SPEC                          */
*                                             SCEID^=WAID;         0269
         B     @DE00269                                            0269
@DL00269 DS    0H                                                  0270
*                                         SCANSCE=SCEFWD;          0270
         LA    @15,STAE906                                         0270
         L     @01,SCANSCE(,@15)                                   0270
         L     @14,SCEFWD(,@01)                                    0270
         ST    @14,SCANSCE(,@15)                                   0270
*                                        END;                      0271
@DE00269 LA    @15,STAE906                                         0271
         L     @15,SCANSCE(,@15)                                   0271
         CLC   SCECBID(4,@15),@CC03159                             0271
         BNE   @DC00269                                            0271
         ICM   @14,15,SCEFWD(@15)                                  0271
         BZ    @DC00269                                            0271
         CLC   SCEID(4,@15),WAID                                   0271
         BNE   @DL00269                                            0271
@DC00269 DS    0H                                                  0272
*                                        IF SCECBID^=IDSCE THEN    0272
         LA    @15,STAE906                                         0272
         L     @01,SCANSCE(,@15)                                   0272
         CLC   SCECBID(4,@01),@CC03159                             0272
         BE    @RF00272                                            0272
*                                         GEN(ABEND 102);          0273
         ABEND 102
*                                        IF SCEID=WAID THEN/* IF ID
*                                      FOUND                         */
@RF00272 LA    @15,STAE906                                         0274
         L     @01,SCANSCE(,@15)                                   0274
         CLC   SCEID(4,@01),WAID                                   0274
         BNE   @RF00274                                            0274
*                                         CALL GETVTSLP;/* LOAD AND
*                                      PGFIX IEAVTSLP                */
         BAL   @14,GETVTSLP                                        0275
*                                       END;                       0276
@RF00274 DS    0H                                                  0277
*                                    IF WAFIN=OFF THEN/* IF COMMAND
*                                      WAS NOT CANCELED              */
@RC00265 DS    0H                                                  0277
@RF00264 DS    0H                                                  0277
@RC00249 TM    WAFIN,B'00100000'                                   0277
         BNZ   @RF00277                                            0277
*                                     DO;                          0278
*                                      SCANSCE=SHDRFWD;/* ADDRESS THE
*                                      FIRST SCE                     */
         LA    @15,STAE906                                         0279
         L     @01,CVTPTR                                          0279
         L     @01,CVTRTMS(,@01)                                   0279
         MVC   SCANSCE(4,@15),SHDRFWD(@01)                         0279
*                                      DO WHILE WAFIN=OFF&/* LOOP  0280
*                                      THRU SCE CHAIN                */
*                                           SCECBID=IDSCE;         0280
         B     @DE00280                                            0280
@DL00280 DS    0H                                                  0281
*                                       IF WAID=BLANKS×/* IF ALL WAS
*                                      SPECIFIED OR                  */
*                                           WAID=SCEID THEN/* THIS 0281
*                                      SCE'S ID IS THE ONE           */
         CLC   WAID(4),@CC03150                                    0281
         BE    @RT00281                                            0281
         LA    @15,STAE906                                         0281
         L     @01,SCANSCE(,@15)                                   0281
         CLC   WAID(4),SCEID(@01)                                  0281
         BNE   @RF00281                                            0281
@RT00281 DS    0H                                                  0282
*                                        IF WADISABL=ON THEN/* IF  0282
*                                      REQUEST WAS DISABLE           */
         TM    WADISABL,B'01000000'                                0282
         BNO   @RF00282                                            0282
*                                         SCEDSABL=ON;/* DISABLE IT  */
         LA    @15,STAE906                                         0283
         L     @01,SCANSCE(,@15)                                   0283
         OI    SCEDSABL(@01),B'10000000'                           0283
*                                        ELSE/* IF REQUEST WAS ENABLE*/
*                                         SCEDSABL=OFF;/* ENABLE IT  */
         B     @RC00282                                            0284
@RF00282 LA    @15,STAE906                                         0284
         L     @01,SCANSCE(,@15)                                   0284
         NI    SCEDSABL(@01),B'01111111'                           0284
*                                       IF SCEFWD=ZERO×/* IF AT END
*                                      OF SCE CHAIN OR               */
*                                           WAID=SCEID THEN/* THIS 0285
*                                      SCE IS THE ONE REQUESTD       */
@RC00282 DS    0H                                                  0285
@RF00281 LA    @15,STAE906                                         0285
         L     @15,SCANSCE(,@15)                                   0285
         ICM   @14,15,SCEFWD(@15)                                  0285
         BZ    @RT00285                                            0285
         CLC   WAID(4),SCEID(@15)                                  0285
         BNE   @RF00285                                            0285
@RT00285 DS    0H                                                  0286
*                                        WAFIN=ON;/* EXIT FROM     0286
*                                      LOOP,IND FINISHED             */
         OI    WAFIN,B'00100000'                                   0286
*                                       ELSE                       0287
*                                        SCANSCE=SCEFWD;/* UPDATE PTR
*                                      TO NEXT SCE                   */
         B     @RC00285                                            0287
@RF00285 LA    @15,STAE906                                         0287
         L     @01,SCANSCE(,@15)                                   0287
         L     @14,SCEFWD(,@01)                                    0287
         ST    @14,SCANSCE(,@15)                                   0287
*                                      END;/* END OF DOWHILE         */
@RC00285 DS    0H                                                  0288
@DE00280 TM    WAFIN,B'00100000'                                   0288
         BNZ   @DC00280                                            0288
         LA    @15,STAE906                                         0288
         L     @01,SCANSCE(,@15)                                   0288
         CLC   SCECBID(4,@01),@CC03159                             0288
         BE    @DL00280                                            0288
@DC00280 DS    0H                                                  0289
*                                      IF SCECBID^=IDSCE THEN      0289
         LA    @15,STAE906                                         0289
         L     @01,SCANSCE(,@15)                                   0289
         CLC   SCECBID(4,@01),@CC03159                             0289
         BE    @RF00289                                            0289
*                                       GEN(ABEND 102);            0290
*                                                                  0290
         ABEND 102
*                                      /******************************/
*                                      /*                            */
*                                      /* SEND APPROPRIATE MESSAGE   */
*                                      /*                            */
*                                      /******************************/
*                                                                  0291
*                                      IF WAID=SCEID THEN/* IF     0291
*                                      SPECIFIED ID WAS MATCHED      */
@RF00289 LA    @15,STAE906                                         0291
         L     @01,SCANSCE(,@15)                                   0291
         CLC   WAID(4),SCEID(@01)                                  0291
         BNE   @RF00291                                            0291
*                                       IF WADISABL=ON THEN/* AND  0292
*                                      DISABLE WAS REQUESTED         */
         TM    WADISABL,B'01000000'                                0292
         BNO   @RF00292                                            0292
*                                        CALL IEECB908(MSG727DS,WAUCMP,
*                                            WAID);/* INFORM ISUR    */
         LA    @15,@CH00035                                        0293
         ST    @15,@AL00001                                        0293
         LA    @15,WAUCMP                                          0293
         ST    @15,@AL00001+4                                      0293
         LA    @15,WAID                                            0293
         ST    @15,@AL00001+8                                      0293
         MVI   @AL00001+8,X'80'                                    0293
         L     @15,@CV02993                                        0293
         LA    @01,@AL00001                                        0293
         BALR  @14,@15                                             0293
*                                       ELSE/* IF ENABLE WAS       0294
*                                      REQUESTED                     */
*                                        CALL IEECB908(MSG727EN,WAUCMP,
*                                            WAID);/* INFORM ISUR    */
         B     @RC00292                                            0294
@RF00292 LA    @15,@CH00292                                        0294
         ST    @15,@AL00001                                        0294
         LA    @15,WAUCMP                                          0294
         ST    @15,@AL00001+4                                      0294
         LA    @15,WAID                                            0294
         ST    @15,@AL00001+8                                      0294
         MVI   @AL00001+8,X'80'                                    0294
         L     @15,@CV02993                                        0294
         LA    @01,@AL00001                                        0294
         BALR  @14,@15                                             0294
*                                      ELSE/* IF NO MATCH            */
*                                       IF WAID=BLANKS THEN/* IF ALL
*                                      WAS SPECIFIED                 */
         B     @RC00291                                            0295
@RF00291 CLC   WAID(4),@CC03150                                    0295
         BNE   @RF00295                                            0295
*                                        DO;                       0296
*                                         RFY                      0297
*                                           XSAPTR RSTD;           0297
*                                         XSAPTR=ADDR(MSGBUF);/* XSA
*                                      IS PARM TO IEE0503D           */
         LA    XSAPTR,MSGBUF                                       0298
*                                         XAE=MSG712;/* INFORM ISSUER
*                                      CMD COMPLETED                 */
         MVI   XAE(XSAPTR),X'03'                                   0299
*                                         CALL MSGMOD05;           0300
         BAL   @14,MSGMOD05                                        0300
*                                         RFY                      0301
*                                           XSAPTR UNRSTD;         0301
*                                        END;                      0302
*                                       ELSE/* IF SPECIFIED ID NOT 0303
*                                      FOUND                         */
*                                        CALL IEECB908(MSG731,WAUCMP,
*                                            WAID);/* INFORM ISSUER  */
         B     @RC00295                                            0303
@RF00295 LA    @15,@CH00034                                        0303
         ST    @15,@AL00001                                        0303
         LA    @15,WAUCMP                                          0303
         ST    @15,@AL00001+4                                      0303
         LA    @15,WAID                                            0303
         ST    @15,@AL00001+8                                      0303
         MVI   @AL00001+8,X'80'                                    0303
         L     @15,@CV02993                                        0303
         LA    @01,@AL00001                                        0303
         BALR  @14,@15                                             0303
*                                     END;                         0304
@RC00295 DS    0H                                                  0304
@RC00291 DS    0H                                                  0305
*                                    SHDRSEQ=ZEROB;/* RELEASE THE  0305
*                                      CMD-SEQ BYTE                  */
@RF00277 L     @01,CVTPTR                                          0305
         L     @01,CVTRTMS(,@01)                                   0305
         MVI   SHDRSEQ(@01),X'00'                                  0305
*                                    SESTSEQ=OFF;/* IND CMD-SEQ BYTE
*                                      NOT HELD                      */
         LA    @15,STAE906                                         0306
         NI    SESTSEQ(@15),B'11011111'                            0306
*                                    RFY                           0307
*                                      SCE BASED(SCEPTR);          0307
*                                   END;                           0308
*                             END;                                 0309
*                         END;                                     0310
*                     END;                                         0311
*                 END;                                             0312
*               ELSE                /* LENGTH OF KEYWORD INVALID     */
*                 DO;                                              0313
         B     @RC00212                                            0313
@RF00212 DS    0H                                                  0314
*                   IF DATALN=ZERO THEN                            0314
         ICM   @15,3,DATALN                                        0314
         BNZ   @RF00314                                            0314
*                     KEYWORD=IN(1:1);                             0315
         MVI   KEYWORD+1,C' '                                      0315
         MVC   KEYWORD+2(6),KEYWORD+1                              0315
         L     @01,TEXTPTR                                         0315
         MVC   KEYWORD(1),IN(@01)                                  0315
*                   ELSE                                           0316
*                     KEYWORD=IN(1:8);                             0316
         B     @RC00314                                            0316
@RF00314 L     @01,TEXTPTR                                         0316
         MVC   KEYWORD(8),IN(@01)                                  0316
*                   WARESP=ON;                                     0317
@RC00314 OI    WARESP,B'00010000'                                  0317
*                 END;                                             0318
*               IF WAFIN=OFF THEN   /* IF COMMAND NOT FINISHED       */
@RC00212 TM    WAFIN,B'00100000'                                   0319
         BNZ   @RF00319                                            0319
*                 CALL NEXTKEY;     /* PREPARE FOR NEXT KEYWORD      */
         BAL   @14,NEXTKEY                                         0320
*             END;                                                 0321
@RF00319 DS    0H                                                  0322
*         END;                      /* END OF WAFIN DO-WHILE         */
@RF00202 DS    0H                                                  0322
@DE00200 TM    WAFIN,B'00100000'                                   0322
         BZ    @DL00200                                            0322
*       END;                                                       0323
*     ELSE                                                         0324
*       IF IN(1:4)=DELC×            /* IF FIRST KEYWORD IS DEL       */
*           IN(1:4)=DELB THEN                                      0324
         B     @RC00194                                            0324
@RF00194 L     @15,TEXTPTR                                         0324
         CLC   IN(4,@15),@CC03132                                  0324
         BE    @RT00324                                            0324
         CLC   IN(4,@15),@CC03130                                  0324
         BNE   @RF00324                                            0324
@RT00324 DS    0H                                                  0325
*         DO;                                                      0325
*                                                                  0325
*/********************************************************************
**   A DELETE SLIP HAS BEEN ISSUED IN ORDER TO REMOVE ONE OR ALL SLIP
**   TRAP(S).                                                      0326
**********************************************************************/
*                                                                  0326
*           SESTDEL=ON;             /* IND TO ESTAE SLIP DEL         */
         LA    @15,STAE906                                         0326
         OI    SESTDEL(@15),B'00000100'                            0326
*           IF INCHAR4=BLANK THEN   /* IF BLANK FOLLOWS KEYWORD      */
         L     @15,TEXTPTR                                         0327
         CLI   INCHAR4(@15),C' '                                   0327
         BNE   @RF00327                                            0327
*             TEXTPTR=TEXTPTR+THREE;/* UPDATE PTR TO BLANK           */
         AH    @15,@CH00292                                        0328
         ST    @15,TEXTPTR                                         0328
*           ELSE                    /* IF COMMA                      */
*             TEXTPTR=TEXTPTR+FOUR; /* UPDATE PTR PAST COMMA         */
         B     @RC00327                                            0329
@RF00327 LA    @15,4                                               0329
         AL    @15,TEXTPTR                                         0329
         ST    @15,TEXTPTR                                         0329
*           DO WHILE WAFIN=OFF;     /* LOOP UNTIL COMMAND FINISHED   */
@RC00327 B     @DE00330                                            0330
@DL00330 DS    0H                                                  0331
*             CALL SCAN;            /* SCAN INPUT FOR NON-ALPHANUM   */
         BAL   @14,SCAN                                            0331
*             IF WAFIN=OFF THEN     /* IF CMD HAS NOT BEEN CANCELED  */
         TM    WAFIN,B'00100000'                                   0332
         BNZ   @RF00332                                            0332
*               DO;                                                0333
*                 RFY                                              0334
*                   IN BASED(SCANPTR);                             0334
*                 IF WARESP=ON THEN /* IF DELIMITER IS NOT A BLANK   */
         TM    WARESP,B'00010000'                                  0335
         BNO   @RF00335                                            0335
*                   DO;             /* COMMA, OR END-OF-LINE         */
*                     IF INCHAR^=EQUAL THEN/* CHECK FOR EQUAL SIGN   */
         L     @01,SCANPTR                                         0337
         CLI   INCHAR(@01),C'='                                    0337
         BE    @RF00337                                            0337
*                       DATALN=DATALN-ONE;/* IF NOT, ADJUST LENGTH   */
         LH    @15,DATALN                                          0338
         BCTR  @15,0                                               0338
         STH   @15,DATALN                                          0338
*                     WARESP=OFF;   /* RESET INVALID SYNTAX FLAG     */
@RF00337 NI    WARESP,B'11101111'                                  0339
*                   END;                                           0340
*                 RFY                                              0341
*                   IN BASED(TEXTPTR);                             0341
@RF00335 DS    0H                                                  0342
*                 IF DATALN=ZERO THEN                              0342
         ICM   @15,3,DATALN                                        0342
         BNZ   @RF00342                                            0342
*                   KEYWORD=IN(1:1);                               0343
         MVI   KEYWORD+1,C' '                                      0343
         MVC   KEYWORD+2(6),KEYWORD+1                              0343
         L     @01,TEXTPTR                                         0343
         MVC   KEYWORD(1),IN(@01)                                  0343
*                 ELSE                                             0344
*                   IF DATALN>EIGHT THEN                           0344
         B     @RC00342                                            0344
@RF00342 CLC   DATALN(2),@CH00061                                  0344
         BNH   @RF00344                                            0344
*                     KEYWORD=IN(1:8);                             0345
         L     @01,TEXTPTR                                         0345
         MVC   KEYWORD(8),IN(@01)                                  0345
*                   ELSE                                           0346
*                     KEYWORD=IN(1:DATALN);                        0346
         B     @RC00344                                            0346
@RF00344 MVI   KEYWORD+1,C' '                                      0346
         MVC   KEYWORD+2(6),KEYWORD+1                              0346
         LH    @15,DATALN                                          0346
         BCTR  @15,0                                               0346
         L     @01,TEXTPTR                                         0346
         EX    @15,@SM03425                                        0346
*                 IF DATALN=THREE THEN/* IF KEYWORD IS THREE CHAR    */
@RC00344 DS    0H                                                  0347
@RC00342 LH    @15,DATALN                                          0347
         CH    @15,@CH00292                                        0347
         BNE   @RF00347                                            0347
*                   DO;                                            0348
*                     UNKNOWN8=IN(1:3);/* COPY FOR TABLE ENTRY COMPAR*/
         MVI   UNKNOWN8+3,C' '                                     0349
         MVC   UNKNOWN8+4(4),UNKNOWN8+3                            0349
         L     @14,TEXTPTR                                         0349
         MVC   UNKNOWN8(3),IN(@14)                                 0349
*                     IF UNKNOWN8=MODKKEY(MODIDX) THEN/* CHECK FOR 0350
*                                      ID=                           */
         L     @07,@CV02904                                        0350
         CLC   UNKNOWN8(8),MODKKEY+20(@07)                         0350
         BNE   @RF00350                                            0350
*                       DO;                                        0351
*                         TEXTPTR=TEXTPTR+DATALN;/* IF SO, UPDATE PTR*/
         ALR   @14,@15                                             0352
         ST    @14,TEXTPTR                                         0352
*                         CALL ID;  /* PROCESS THE ID KEYWORD        */
         BAL   @14,ID                                              0353
*                       END;                                       0354
*                     ELSE          /* IF THE KEYWORD IS NOT ID=     */
*                       IF UNKNOWN8^=MODKKEY(MODALLX) THEN/* AND IF
*                                      NOT ALL                       */
         B     @RC00350                                            0355
@RF00350 L     @15,@CV02904                                        0355
         CLC   UNKNOWN8(8),MODKKEY+30(@15)                         0355
         BE    @RF00355                                            0355
*                         DO;                                      0356
*                           TEXTPTR=TEXTPTR+DATALN;/* UPDATE PTR     */
         LH    @15,DATALN                                          0357
         AL    @15,TEXTPTR                                         0357
         ST    @15,TEXTPTR                                         0357
*                           WARESP=ON;/* IND INVALID SYNTAX          */
         OI    WARESP,B'00010000'                                  0358
*                         END;                                     0359
*                   END;                                           0360
*                 ELSE              /* LENGTH OF KEYOWRD INVALID     */
*                   WARESP=ON;      /* SHOW ISSUER INVALID KEYWORD   */
         B     @RC00347                                            0361
@RF00347 OI    WARESP,B'00010000'                                  0361
*                 IF WARESP=OFF THEN/* IF NO INVALID SYNTAX          */
@RC00347 TM    WARESP,B'00010000'                                  0362
         BNZ   @RF00362                                            0362
*                   DO;                                            0363
*                                                                  0363
*/********************************************************************
**   THIS SEGMENT IS CALLED TO DELETE ONE OR ALL OF THE SCES.      0364
**   THE FLOW IS AS FOLLOWS:                                       0364
**      - A CHECK IS MADE TO ENSURE SLIP IS ACTIVE. IF NOT, A MESSAGE
**        IS WRITTEN AND CONTROL EXISTS.                           0364
**      - (VIA GETSEQ SEGMENT) ATTEMPTS ARE MADE TO OBTAIN (TS INSTRU)
**        THE CMD-SEQ BYTE IN THE SHDR.  IF UNSUCCESSFUL, A MESSAGE IS
**        WRITTEN ASKING THE ISSUER IF HE WANTS TO RETRY THE TS INSTRU
**        AGAIN OR CANCEL.                                         0364
**      - WHEN CMD-SEQ BYTE OBTAINED, A CHECK IS MADE TO ENSURE SLIP
**        IS STILL ACTIVE.                                         0364
**      - IF ID=XXXX IS SPECIFIED,                                 0364
**          - A SEARCH OF THE SCE CHAIN IS DONE FOR AN SCE WITH THIS
**            ID AND IF NOT FOUND, THE CMD-SEQ BYTE IS RELEASED AND
**            A MESSAGE IS WRITTEN INFORMING THE ISSUER.           0364
**          - IF FOUND AND IF IEAVTSLP IS LOADED, A CHECK IS DONE TO
**            SEE IF BY REMOVING THIS TRAP, THERE REMAINS NO ENABLED
**            TRAPS. IF SO, DELETE IEAVTSLP IF NOT RUNNING. IF RUNNING
**            THE ISSUER IS PROMPTED AS TO WHETHER HE WANTS TO CANCEL
**            THE COMMAND OR RETRY.                                0364
**          - THE TRAP IS THEN DELETED (CDS) IF IT IS NOT IN USE BY
**            IEAVTSLP. IF IN USE, THE CMD-SEQ BYTE IS RELEASED AND
**            THE ISSUER IS PROMPTED IF HE WANTS TO RETRY.         0364
**      - IF ALL SPECIFIED,                                        0364
**          - IF THE SLIP PROCESSOR (IEAVTSLP) IS LOADED AND NOT   0364
**            RUNNING, IT IS DELETED. IF LOADED AND RUNNING, THE   0364
**            ISSUER IS PROMPTED AS TO WHETHER HE WANTS TO CANCEL  0364
**            THE COMMAND OR RETRY.                                0364
**          - ONCE IEAVTSLP IS DELETED, THE TRAPS ARE REMOVED.     0364
**********************************************************************/
*                                                                  0364
*                     IF CVTRTMS^=ZERO THEN                        0364
         L     @01,CVTPTR                                          0364
         L     @15,CVTRTMS(,@01)                                   0364
         LTR   @15,@15                                             0364
         BZ    @RF00364                                            0364
*                       IF SHDRCBID^=IDSHDR THEN                   0365
         CLC   SHDRCBID(4,@15),@CC03157                            0365
         BE    @RF00365                                            0365
*                         GEN(ABEND 102);                          0366
         ABEND 102
*                     IF CVTRTMS=ZERO×SHDRFWD=ZERO THEN/* IF SLIP IS
*                                      NOT ACTIVE                    */
@RF00365 DS    0H                                                  0367
@RF00364 SLR   @15,@15                                             0367
         L     @01,CVTPTR                                          0367
         L     @14,CVTRTMS(,@01)                                   0367
         CR    @14,@15                                             0367
         BE    @RT00367                                            0367
         C     @15,SHDRFWD(,@14)                                   0367
         BNE   @RF00367                                            0367
@RT00367 DS    0H                                                  0368
*                       DO;                                        0368
*                         CALL IEECB908(MSG733,WAUCMP);/* INFORM   0369
*                                      ISSUER -MSG IEE733I           */
         LA    @15,@CH00032                                        0369
         ST    @15,@AL00001                                        0369
         LA    @15,WAUCMP                                          0369
         ST    @15,@AL00001+4                                      0369
         MVI   @AL00001+4,X'80'                                    0369
         L     @15,@CV02993                                        0369
         LA    @01,@AL00001                                        0369
         BALR  @14,@15                                             0369
*                         WAFIN=ON; /* TERMINATE THE COMMAND         */
         OI    WAFIN,B'00100000'                                   0370
*                       END;                                       0371
*                     ELSE                                         0372
*                       CALL GETSEQ;/* ATTEMPT TO GET CMD-SEQ BYTE   */
         B     @RC00367                                            0372
@RF00367 BAL   @14,GETSEQ                                          0372
*                     IF SESTSEQ=ON THEN/* IF SEQ BYTE WAS OBTAINED  */
@RC00367 LA    @15,STAE906                                         0373
         TM    SESTSEQ(@15),B'00100000'                            0373
         BNO   @RF00373                                            0373
*                       IF SHDRFWD=ZERO THEN/* CHECK IF SLIP IS NOT
*                                      ACTIVE                        */
         L     @01,CVTPTR                                          0374
         L     @15,CVTRTMS(,@01)                                   0374
         ICM   @14,15,SHDRFWD(@15)                                 0374
         BNZ   @RF00374                                            0374
*                         DO;                                      0375
*                           SHDRSEQ=ZEROB;/* RELEASE CMD-SEQ BYTE    */
         MVI   SHDRSEQ(@15),X'00'                                  0376
*                           CALL IEECB908(MSG733,WAUCMP);/* INFORM 0377
*                                      ISSUER-IEE733I                */
         LA    @15,@CH00032                                        0377
         ST    @15,@AL00001                                        0377
         LA    @15,WAUCMP                                          0377
         ST    @15,@AL00001+4                                      0377
         MVI   @AL00001+4,X'80'                                    0377
         L     @15,@CV02993                                        0377
         LA    @01,@AL00001                                        0377
         BALR  @14,@15                                             0377
*                           WAFIN=ON;/* TERMINATE THE COMMAND        */
         OI    WAFIN,B'00100000'                                   0378
*                         END;                                     0379
*                       ELSE        /* SLIP IS ACTIVE                */
*                                                                  0380
*                         /*******************************************/
*                         /*                                         */
*                         /* AT THIS POINT, THE CMD-SEQ BYTE IS      */
*                         /* OBTAINED AND SLIP IS KNOWN TO BE ACTIVE.*/
*                         /*                                         */
*                         /*******************************************/
*                                                                  0380
*                         IF WAID^=BLANKS THEN/* IF ID=XXXX OPTION 0380
*                                      SPECIFIED                     */
         B     @RC00374                                            0380
@RF00374 CLC   WAID(4),@CC03150                                    0380
         BE    @RF00380                                            0380
*                           DO;                                    0381
*                                                                  0381
*                             /***************************************/
*                             /*                                     */
*                             /* PROCESS DEL,ID=XXXX                 */
*                             /*                                     */
*                             /***************************************/
*                                                                  0382
*                             RFY                                  0382
*                               SCE BASED(SCEPTR);                 0382
*                             SCEPTR=SHDRFWD;/* INIT SCE CHAIN PTR TO
*                                      FIRST                         */
         LA    @15,STAE906                                         0383
         L     @01,CVTPTR                                          0383
         L     @01,CVTRTMS(,@01)                                   0383
         MVC   SCEPTR(4,@15),SHDRFWD(@01)                          0383
*                             DO WHILE SCECBID=IDSCE&WAID^=SCEID&/*
*                                      SEARCH SCE CHAIN FOR ID       */
*                                   SCEFWD^=ZERO;/* MATCH            */
         B     @DE00384                                            0384
@DL00384 DS    0H                                                  0385
*                               SCEPTR=SCEFWD;/* ADDR OF NEXT SCE ON
*                                      CHAIN                         */
         LA    @15,STAE906                                         0385
         L     @01,SCEPTR(,@15)                                    0385
         L     @14,SCEFWD(,@01)                                    0385
         ST    @14,SCEPTR(,@15)                                    0385
*                             END;                                 0386
@DE00384 LA    @15,STAE906                                         0386
         L     @15,SCEPTR(,@15)                                    0386
         CLC   SCECBID(4,@15),@CC03159                             0386
         BNE   @DC00384                                            0386
         CLC   WAID(4),SCEID(@15)                                  0386
         BE    @DC00384                                            0386
         ICM   @14,15,SCEFWD(@15)                                  0386
         BNZ   @DL00384                                            0386
@DC00384 DS    0H                                                  0387
*                             IF SCECBID^=IDSCE×/* VALIDATE POINTERS */
*                                 (SCEBKWD->SCECBID^=IDSCE&SCEBKWD->
*                                 SHDRCBID^=IDSHDR) THEN           0387
         LA    @15,STAE906                                         0387
         L     @15,SCEPTR(,@15)                                    0387
         CLC   SCECBID(4,@15),@CC03159                             0387
         BNE   @RT00387                                            0387
         L     @15,SCEBKWD(,@15)                                   0387
         CLC   SCECBID(4,@15),@CC03159                             0387
         BE    @RF00387                                            0387
         CLC   SHDRCBID(4,@15),@CC03157                            0387
         BE    @RF00387                                            0387
@RT00387 DS    0H                                                  0388
*                               GEN(ABEND 102);                    0388
         ABEND 102
*                             IF WAID=SCEID THEN/* IF MATCHING SCE 0389
*                                      FOUND                         */
@RF00387 LA    @15,STAE906                                         0389
         L     @14,SCEPTR(,@15)                                    0389
         CLC   WAID(4),SCEID(@14)                                  0389
         BNE   @RF00389                                            0389
*                               DO;                                0390
*                                 IF SHDRPFC=ZERO THEN/* IF IEAVTSLP
*                                      NOT LOADED                    */
         L     @01,CVTPTR                                          0391
         L     @01,CVTRTMS(,@01)                                   0391
         ICM   @00,15,SHDRPFC(@01)                                 0391
         BNZ   @RF00391                                            0391
*                                   DO;                            0392
*                                    SESTCHN=ON;/* IND DECHAINING  0393
*                                      STARTED                       */
         OI    SESTCHN(@15),B'00000010'                            0393
*                                    SCEBKWD->SCEFWD=SCEFWD;/* NO CDS
*                                      NEEDED,DELETE                 */
         L     @01,SCEBKWD(,@14)                                   0394
         MVC   SCEFWD(4,@01),SCEFWD(@14)                           0394
*                                   END;                           0395
*                                 ELSE/* IF IEAVTSLP IS LOADED       */
*                                   DO;                            0396
         B     @RC00391                                            0396
@RF00391 DS    0H                                                  0397
*                                    SCANSCE=SHDRFWD;/* INIT PTR TO
*                                      FIRST SCE                     */
         LA    @15,STAE906                                         0397
         L     @01,CVTPTR                                          0397
         L     @01,CVTRTMS(,@01)                                   0397
         MVC   SCANSCE(4,@15),SHDRFWD(@01)                         0397
*                                    RFY                           0398
*                                      SCE BASED(SCANSCE);         0398
*                                    DO WHILE SCECBID=IDSCE&SCEFWD^=
*                                         ZERO&/* CHECK TO SEE IF    */
*                                         (SCEDSABL=ON×/* ALL OTHER
*                                      SCES ARE                      */
*                                         SCEID=WAID);/* DISABLED    */
         B     @DE00399                                            0399
@DL00399 DS    0H                                                  0400
*                                     SCANSCE=SCEFWD;/* UPDATE SCE 0400
*                                      PTR                           */
         LA    @15,STAE906                                         0400
         L     @01,SCANSCE(,@15)                                   0400
         L     @14,SCEFWD(,@01)                                    0400
         ST    @14,SCANSCE(,@15)                                   0400
*                                    END;                          0401
@DE00399 LA    @15,STAE906                                         0401
         L     @15,SCANSCE(,@15)                                   0401
         CLC   SCECBID(4,@15),@CC03159                             0401
         BNE   @DC00399                                            0401
         ICM   @14,15,SCEFWD(@15)                                  0401
         BZ    @DC00399                                            0401
         TM    SCEDSABL(@15),B'10000000'                           0401
         BO    @DL00399                                            0401
         CLC   SCEID(4,@15),WAID                                   0401
         BE    @DL00399                                            0401
@DC00399 DS    0H                                                  0402
*                                    IF SCECBID^=IDSCE THEN        0402
         LA    @15,STAE906                                         0402
         L     @01,SCANSCE(,@15)                                   0402
         CLC   SCECBID(4,@01),@CC03159                             0402
         BE    @RF00402                                            0402
*                                     GEN(ABEND 102);              0403
         ABEND 102
*                                    IF(SCEDSABL=ON×/* IF ALL SCE'S
*                                      WILL BE                       */
*                                        SCEID=WAID) THEN/* DISABLED
*                                      AFTER DELETE                  */
@RF00402 LA    @15,STAE906                                         0404
         L     @15,SCANSCE(,@15)                                   0404
         TM    SCEDSABL(@15),B'10000000'                           0404
         BO    @RT00404                                            0404
         CLC   SCEID(4,@15),WAID                                   0404
         BNE   @RF00404                                            0404
@RT00404 DS    0H                                                  0405
*                                     DO;                          0405
*                                      CALL RELVTSLP;/* PGFREE AND 0406
*                                      DEL IEAVTSLP                  */
         BAL   @14,RELVTSLP                                        0406
*                                      RFY                         0407
*                                        SCE BASED(SCEPTR);        0407
*                                      IF WAFIN=OFF THEN/* IF      0408
*                                      IEAVTSLP DELETED              */
         TM    WAFIN,B'00100000'                                   0408
         BNZ   @RF00408                                            0408
*                                       DO;                        0409
*                                        SESTCHN=ON;/* IND DECHAINING
*                                      STARTED                       */
         LA    @15,STAE906                                         0410
         OI    SESTCHN(@15),B'00000010'                            0410
*                                        SCEBKWD->SCEFWD=SCEFWD;/* 0411
*                                      DELETE SCE                    */
         L     @15,SCEPTR(,@15)                                    0411
         L     @01,SCEBKWD(,@15)                                   0411
         MVC   SCEFWD(4,@01),SCEFWD(@15)                           0411
*                                       END;                       0412
*                                     END;                         0413
*                                    ELSE/* IF IEAVTSLP REMAINS    0414
*                                      LOADED                        */
*                                     DO;                          0414
         B     @RC00404                                            0414
@RF00404 DS    0H                                                  0415
*                                      SESTCHN=ON;/* IND DECHAINING
*                                      STARTED                       */
         LA    @15,STAE906                                         0415
         OI    SESTCHN(@15),B'00000010'                            0415
*                                      IF SCEFWD^=ZERO THEN/* SET  0416
*                                      DELETE PENDNG IN              */
         L     @01,SCEPTR(,@15)                                    0416
         L     @15,SCEFWD(,@01)                                    0416
         LTR   @15,@15                                             0416
         BZ    @RF00416                                            0416
*                                       SCEFWD->SCEDELP=ON;/* NEXT 0417
*                                      SCE BKWDPTR OR                */
         OI    SCEDELP(@15),B'01000000'                            0417
*                                      ELSE/* IF THIS SCE IS LAST ONE
*                                      ON                            */
*                                       SHDRDELP=ON;/* CHAIN,IN    0418
*                                      SHDR'S BKWDPTR                */
         B     @RC00416                                            0418
@RF00416 L     @01,CVTPTR                                          0418
         L     @01,CVTRTMS(,@01)                                   0418
         OI    SHDRDELP(@01),B'01000000'                           0418
*                                      RFY                         0419
*                                       (R6,                       0419
*                                        R7) RSTD;                 0419
@RC00416 DS    0H                                                  0420
*                                      R6=ZERO;/* SETUP REG 6 FOR CDS*/
         SLR   R6,R6                                               0420
*                                      R7=SCEPTR;/* SETUP REG 7 FOR
*                                      CDS                           */
         LA    @15,STAE906                                         0421
         L     R7,SCEPTR(,@15)                                     0421
*                                      SUCCIND=OFF;/* INIT IND       */
         NI    SUCCIND,B'01111111'                                 0422
*                                      DO WHILE SUCCIND=OFF&/* LOOP
*                                      UNTIL SUCC                    */
*                                           WAFIN=OFF;/* OR CANCELED */
         B     @DE00423                                            0423
@DL00423 DS    0H                                                  0424
*                                       DO I=ONE TO FIVE/* ATTEMPT 0424
*                                      CDS MAX OF 5 X                */
*                                            WHILE SUCCIND=OFF;/*  0424
*                                      EXIT ON SUCCESS               */
         LA    I,1                                                 0424
@DL00424 TM    SUCCIND,B'10000000'                                 0424
         BNZ   @DC00424                                            0424
*                                        SUCCIND=ON;/* RESET IND   0425
*                                      PRIOR TO CDS                  */
         OI    SUCCIND,B'10000000'                                 0425
*                                        CDS(R6,SCECTRFW,SCEBKWD-> 0426
*                                            SCECTRFW);            0426
         LA    @02,STAE906                                         0426
         L     @02,SCEPTR(,@02)                                    0426
         LM    @00,@01,SCECTRFW(@02)                               0426
         L     @02,SCEBKWD(,@02)                                   0426
         CDS   R6,@00,SCECTRFW(@02)                                0426
*                                        BC(8,GOODCDS);/* IF       0427
*                                      SUCCESSFUL, EXIT LOOP         */
         BC    8,GOODCDS                                           0427
*                                        SUCCIND=OFF;/* INDICATE NOT
*                                      SUCCESSFUL                    */
         NI    SUCCIND,B'01111111'                                 0428
*                                        IF I<FIVE THEN/* WAIT     0429
*                                      BETWEEN ATTEMPTS              */
         CH    I,@CH00723                                          0429
         BNL   @RF00429                                            0429
*                                         DO;                      0430
*                                          GEN REFS(PAUSE);        0431
                                STIMER WAIT,BINTVL=PAUSE
*                                         END;                     0432
*GOODCDS:                                                          0433
*                                       END;                       0433
@RF00429 DS    0H                                                  0433
GOODCDS  AH    I,@CH00063                                          0433
         CH    I,@CH00723                                          0433
         BNH   @DL00424                                            0433
@DC00424 DS    0H                                                  0434
*                                       IF SUCCIND=OFF THEN/* IF CDS
*                                      NOT SUCC                      */
         TM    SUCCIND,B'10000000'                                 0434
         BNZ   @RF00434                                            0434
*                                        CALL RETRYMSG;/* PROMPT   0435
*                                      ISSUR-RETRY×CANCEL            */
         BAL   @14,RETRYMSG                                        0435
*                                      END;/* END OF DOWHILE WAFIN   */
@RF00434 DS    0H                                                  0436
@DE00423 TM    SUCCIND,B'10000000'                                 0436
         BNZ   @DC00423                                            0436
         TM    WAFIN,B'00100000'                                   0436
         BZ    @DL00423                                            0436
@DC00423 DS    0H                                                  0437
*                                      RFY                         0437
*                                       (R6,                       0437
*                                        R7) UNRSTD;               0437
*                                     END;                         0438
*                                   END;                           0439
@RC00404 DS    0H                                                  0440
*                                 IF WAFIN=OFF THEN/* IF DELETE IS 0440
*                                      SUCC                          */
@RC00391 TM    WAFIN,B'00100000'                                   0440
         BNZ   @RF00440                                            0440
*                                   DO;                            0441
*                                    IF SCEFWD^=ZERO THEN/* SET    0442
*                                      BKWDPTR NEXT SCE              */
         LA    @15,STAE906                                         0442
         L     @15,SCEPTR(,@15)                                    0442
         L     @14,SCEFWD(,@15)                                    0442
         LTR   @14,@14                                             0442
         BZ    @RF00442                                            0442
*                                     SCEFWD->SCEBKWD=SCEBKWD;/* OR
*                                      SHDR, IF                      */
         MVC   SCEBKWD(4,@14),SCEBKWD(@15)                         0443
*                                    ELSE/* DELETED SCE IS LAST,TO PT*/
*                                     SHDRBKWD=SCEBKWD;/* TO PREV SCE*/
         B     @RC00442                                            0444
@RF00442 L     @01,CVTPTR                                          0444
         L     @01,CVTRTMS(,@01)                                   0444
         LA    @15,STAE906                                         0444
         L     @15,SCEPTR(,@15)                                    0444
         MVC   SHDRBKWD(4,@01),SCEBKWD(@15)                        0444
*                                    SESTCHN=OFF;/* IND DECHAINING 0445
*                                      FINISHED                      */
@RC00442 LA    @15,STAE906                                         0445
         NI    SESTCHN(@15),B'11111101'                            0445
*                                    SHDRSEQ=ZEROB;/* RELEASE CMD-SEQ
*                                      BYTE                          */
         L     @01,CVTPTR                                          0446
         L     @01,CVTRTMS(,@01)                                   0446
         MVI   SHDRSEQ(@01),X'00'                                  0446
*                                    SESTSEQ=OFF;/* IND CMD-SEQ BYTE
*                                      NOT HELD                      */
         NI    SESTSEQ(@15),B'11011111'                            0447
*                                    CALL IEECB908(MSG727D,WAUCMP,SCEID
*                                        );/* DELMSG                 */
         LA    @14,@CH00723                                        0448
         ST    @14,@AL00001                                        0448
         LA    @14,WAUCMP                                          0448
         ST    @14,@AL00001+4                                      0448
         L     @01,SCEPTR(,@15)                                    0448
         LA    @15,SCEID(,@01)                                     0448
         ST    @15,@AL00001+8                                      0448
         MVI   @AL00001+8,X'80'                                    0448
         L     @15,@CV02993                                        0448
         LA    @01,@AL00001                                        0448
         BALR  @14,@15                                             0448
*                                    IF SCESCVA^=ZERO THEN/* IF SCE
*                                      HAS A SCVA                    */
         LA    @15,STAE906                                         0449
         L     @01,SCEPTR(,@15)                                    0449
         ICM   @00,15,SCESCVA(@01)                                 0449
         BZ    @RF00449                                            0449
*                                     CALL FREESCVA;/* FREE SCVA     */
         BAL   @14,FREESCVA                                        0450
*                                    CALL FREESCE;/* FREE SCE        */
@RF00449 BAL   @14,FREESCE                                         0451
*                                    WAFIN=ON;/* IND COMMAND FINISHED*/
         OI    WAFIN,B'00100000'                                   0452
*                                   END;                           0453
*                                 ELSE                             0454
*                                   DO;                            0454
         B     @RC00440                                            0454
@RF00440 DS    0H                                                  0455
*                                    SHDRSEQ=ZEROB;/* RELEASE CMD-SEQ
*                                      BYTE                          */
         L     @01,CVTPTR                                          0455
         L     @01,CVTRTMS(,@01)                                   0455
         MVI   SHDRSEQ(@01),X'00'                                  0455
*                                    SESTSEQ=OFF;/* IND CMD-SEQ BYTE
*                                      NOT HELD                      */
         LA    @15,STAE906                                         0456
         NI    SESTSEQ(@15),B'11011111'                            0456
*                                   END;                           0457
*                               END;                               0458
*                             ELSE  /* NO MATCH TO ID SPECIFIED      */
*                               DO;                                0459
         B     @RC00389                                            0459
@RF00389 DS    0H                                                  0460
*                                 SESTCHN=OFF;/* IND DECHAINING    0460
*                                      FINISHED                      */
         LA    @15,STAE906                                         0460
         NI    SESTCHN(@15),B'11111101'                            0460
*                                 SHDRSEQ=OFF;/* RELEASE CMD-SEQ BYTE*/
         L     @01,CVTPTR                                          0461
         L     @01,CVTRTMS(,@01)                                   0461
         MVI   SHDRSEQ(@01),B'00000000'                            0461
*                                 SESTSEQ=OFF;/* IND CMD-SEQ BYTE NOT
*                                      HELD                          */
         NI    SESTSEQ(@15),B'11011111'                            0462
*                                 CALL IEECB908(MSG731,WAUCMP,WAID);
         LA    @15,@CH00034                                        0463
         ST    @15,@AL00001                                        0463
         LA    @15,WAUCMP                                          0463
         ST    @15,@AL00001+4                                      0463
         LA    @15,WAID                                            0463
         ST    @15,@AL00001+8                                      0463
         MVI   @AL00001+8,X'80'                                    0463
         L     @15,@CV02993                                        0463
         LA    @01,@AL00001                                        0463
         BALR  @14,@15                                             0463
*                                   /* INFORM ISUR                   */
*                                 WAFIN=ON;/* TERMINATE THE COMMAND  */
         OI    WAFIN,B'00100000'                                   0464
*                               END;                               0465
*                           END;    /* END ID=XXXX PROCESSING        */
*                         ELSE      /* IF DEL,ALL OPTION SPECIFIED   */
*                           DO;                                    0467
*                                                                  0467
         B     @RC00380                                            0467
@RF00380 DS    0H                                                  0468
*                             /***************************************/
*                             /*                                     */
*                             /* PROCESS DEL,ALL                     */
*                             /*                                     */
*                             /***************************************/
*                                                                  0468
*                             IF SHDRPFC^=ZERO THEN/* IF IEAVTSLP IS
*                                      LOADED                        */
         L     @01,CVTPTR                                          0468
         L     @01,CVTRTMS(,@01)                                   0468
         ICM   @00,15,SHDRPFC(@01)                                 0468
         BZ    @RF00468                                            0468
*                               CALL RELVTSLP;/* DELETE IEAVTSLP     */
         BAL   @14,RELVTSLP                                        0469
*                             IF WAFIN=OFF THEN/* IF IEAVTSLP IS   0470
*                                      DELETED                       */
@RF00468 TM    WAFIN,B'00100000'                                   0470
         BNZ   @RF00470                                            0470
*                               DO;                                0471
*                                 SCEPTR=SHDRFWD;/* SAVE ADDR OF 1ST
*                                      SCE IN CHN                    */
         LA    @15,STAE906                                         0472
         L     @01,CVTPTR                                          0472
         L     @14,CVTRTMS(,@01)                                   0472
         MVC   SCEPTR(4,@15),SHDRFWD(@14)                          0472
*                                 SESTCHN=ON;/* IND DECHAINING     0473
*                                      STARTED                       */
         OI    SESTCHN(@15),B'00000010'                            0473
*                                 SHDRFWD=ZERO;/* DELETE SCES FROM 0474
*                                      HDR                           */
         SLR   @07,@07                                             0474
         ST    @07,SHDRFWD(,@14)                                   0474
*                                 SHDRBKWD=ADDR(SHDR);/* INIT BKWDPTR*/
         ST    @14,SHDRBKWD(,@14)                                  0475
*                                 SHDRIDCT=ZERO;/* INIT ID CTR       */
         STH   @07,SHDRIDCT(,@14)                                  0476
*                                 SHDRFLGS=ZEROB;/* INIT FLAGS       */
         MVI   SHDRFLGS(@14),X'00'                                 0477
*                                 SESTCHN=OFF;/* IND DECHAINING    0478
*                                      FINISHED                      */
         NI    SESTCHN(@15),B'11111101'                            0478
*                                 SHDRSEQ=ZEROB;/* RELEASE CMD-SEQ 0479
*                                      BYTE                          */
         MVI   SHDRSEQ(@14),X'00'                                  0479
*                                 SESTSEQ=OFF;/* IND CMD-SEQ BYTE NOT
*                                      HELD                          */
         NI    SESTSEQ(@15),B'11011111'                            0480
*                                 RFY                              0481
*                                   XSAPTR RSTD;                   0481
*                                 XSAPTR=ADDR(MSGBUF);/* MAP XSA OVER
*                                      MSG BUF                       */
         LA    XSAPTR,MSGBUF                                       0482
*                                 XAE=MSG712;/* INFORM ISSUER CMD  0483
*                                      COMPLETED                     */
         MVI   XAE(XSAPTR),X'03'                                   0483
*                                 CALL MSGMOD05;                   0484
         BAL   @14,MSGMOD05                                        0484
*                                 RFY                              0485
*                                   XSAPTR UNRSTD;                 0485
*                                 DO WHILE SCEPTR^=ZERO&/* LOOP THRU
*                                      SCES DEL                      */
*                                       SCECBID=IDSCE;             0486
         B     @DE00486                                            0486
@DL00486 DS    0H                                                  0487
*                                   SCANSCE=SCEFWD;/* SAVE NEXT SCE
*                                      ON CHAIN                      */
         LA    @15,STAE906                                         0487
         L     @14,SCEPTR(,@15)                                    0487
         MVC   SCANSCE(4,@15),SCEFWD(@14)                          0487
*                                   IF SCESCVA^=ZERO THEN/* IF SCE 0488
*                                      HAS A SCVA                    */
         ICM   @15,15,SCESCVA(@14)                                 0488
         BZ    @RF00488                                            0488
*                                    CALL FREESCVA;/* FREE SCVA      */
         BAL   @14,FREESCVA                                        0489
*                                   CALL FREESCE;/* FREE SCE         */
@RF00488 BAL   @14,FREESCE                                         0490
*                                   SCEPTR=SCANSCE;/* UPDATE PTR TO
*                                      NEXT SCE                      */
         LA    @15,STAE906                                         0491
         MVC   SCEPTR(4,@15),SCANSCE(@15)                          0491
*                                 END;                             0492
@DE00486 LA    @15,STAE906                                         0492
         L     @15,SCEPTR(,@15)                                    0492
         LTR   @15,@15                                             0492
         BZ    @DC00486                                            0492
         CLC   SCECBID(4,@15),@CC03159                             0492
         BE    @DL00486                                            0492
@DC00486 DS    0H                                                  0493
*                                 WAFIN=ON;/* INDICATE COMMAND     0493
*                                      FINISHED                      */
         OI    WAFIN,B'00100000'                                   0493
*                               END;                               0494
*                             ELSE  /* IF IEAVTSLP WAS NOT DELETED   */
*                               DO;                                0495
         B     @RC00470                                            0495
@RF00470 DS    0H                                                  0496
*                                 SHDRSEQ=ZEROB;/* RELEASE CMD-SEQ 0496
*                                      BYTE                          */
         L     @01,CVTPTR                                          0496
         L     @01,CVTRTMS(,@01)                                   0496
         MVI   SHDRSEQ(@01),X'00'                                  0496
*                                 SESTSEQ=OFF;/* IND CMD-SEQ BYTE NOT
*                                      HELD                          */
         LA    @15,STAE906                                         0497
         NI    SESTSEQ(@15),B'11011111'                            0497
*                               END;                               0498
*                           END;    /* END DEL,ALL PROCESSING        */
*                   END;                                           0500
*                 ELSE              /* IF INVALID SYNTAX             */
*                   CALL NEXTKEY;   /* PROMPT ISSUER                 */
         B     @RC00362                                            0501
@RF00362 BAL   @14,NEXTKEY                                         0501
*               END;                                               0502
@RC00362 DS    0H                                                  0503
*           END;                    /* END OF DO-WHILE               */
@RF00332 DS    0H                                                  0503
@DE00330 TM    WAFIN,B'00100000'                                   0503
         BZ    @DL00330                                            0503
*         END;                                                     0504
*       ELSE                                                       0505
*         DO;                       /* IF KEYWORD IS NONE OF ABOVE   */
         B     @RC00324                                            0505
@RF00324 DS    0H                                                  0506
*           RFY                                                    0506
*             XSAPTR RSTD;                                         0506
*           XSAPTR=ADDR(MSGBUF);    /* MAP XSA OVER MSG BUFFER       */
         LA    XSAPTR,MSGBUF                                       0507
*           XAE=MSG310;             /* SETUP FOR MSG IEE310I         */
         MVI   XAE(XSAPTR),X'0A'                                   0508
*           CALL MSGMOD05;          /* INFORM ISSUER KEYWORD MISSNG  */
         BAL   @14,MSGMOD05                                        0509
*           RFY                                                    0510
*             XSAPTR UNRSTD;                                       0510
*         END;                                                     0511
*   IF CSCBPTR^=ZERO THEN           /* IF CSCB HASN'T BEEN FREED     */
@RC00324 DS    0H                                                  0512
@RC00194 DS    0H                                                  0512
@RC00141 LA    @15,STAE906                                         0512
         ICM   @14,15,CSCBPTR(@15)                                 0512
         BZ    @RF00512                                            0512
*     CALL FREECSCB;                /* FREE IT                       */
         BAL   @14,FREECSCB                                        0513
*   R14=SAVR14;                     /* RESTORE RETURN ADDRESS        */
@RF00512 LR    R14,SAVR14                                          0514
*   RETURN;                                                        0515
@EL00001 L     @13,4(,@13)                                         0515
@EF00001 L     @00,@SIZDATD                                        0515
         LR    @01,@04                                             0515
         FREEMAIN R,LV=(0),A=(1)
@ER00001 BR    @14                                                 0515
*                                                                  0516
*/********************************************************************
**  THIS SEGMENT HANDLES THE KEYWORD ACTION= AND IT'S ABBREV A=.   0516
**  THERE ARE THREE AVAILABLE OPTIONS: WAIT, SVCD, AND IGNORE.     0516
**********************************************************************/
*                                                                  0516
*ACTION:                                                           0516
*   PROC;                                                          0516
ACTION   STM   @14,@12,@SA00002                                    0516
*   CALL SCAN;                      /* SCAN FOR NEXT DELIMITER       */
         BAL   @14,SCAN                                            0517
*   IF WAFIN=OFF THEN               /* IF CMD HAS NOT BEEN CANCELED  */
         TM    WAFIN,B'00100000'                                   0518
         BNZ   @RF00518                                            0518
*     DO;                                                          0519
*       IF WARESP=OFF THEN          /* IF SCAN HAD NO PROBLEMS       */
         TM    WARESP,B'00010000'                                  0520
         BNZ   @RF00520                                            0520
*         IF DATALN=FOUR THEN       /* IF LENGTH OF OPERAND IS 4     */
         CLC   DATALN(2),@CH00035                                  0521
         BNE   @RF00521                                            0521
*           IF IN(1:4)=WAIT THEN    /* CHECK IF OPERAND IS WAIT      */
         L     @05,TEXTPTR                                         0522
         CLC   IN(4,@05),@CC03134                                  0522
         BNE   @RF00522                                            0522
*             DO;                                                  0523
*               SCEWAIT=ON;         /* IF SO, IND IN SCE             */
*               SCESVCD=OFF;        /* AND SET SVCD AND              */
*               SCEIGNOR=OFF;       /* IGNORE INDS OFF               */
*               SCENODMP=OFF;       /* NODUMP INDS OFF       @G33NPHE*/
         LA    @05,STAE906                                         0527
         L     @05,SCEPTR(,@05)                                    0527
         OI    SCEWAIT(@05),B'00001000'                            0527
         NI    SCESVCD(@05),B'11101001'                            0527
*             END;                                                 0528
*           ELSE                    /* IF NOT WAIT,                  */
*             IF IN(1:4)=SVCD THEN  /* CHECK IF OPERAND IS SVCD      */
         B     @RC00522                                            0529
@RF00522 L     @05,TEXTPTR                                         0529
         CLC   IN(4,@05),@CC03136                                  0529
         BNE   @RF00529                                            0529
*               DO;                                                0530
*                 SCESVCD=ON;       /* IF SO, IND IN SCE             */
*                 SCEWAIT=OFF;      /* AND SET WAIT AND              */
*                 SCEIGNOR=OFF;     /* IGNORE INDS OFF               */
*                 SCENODMP=OFF;     /* NODUMP INDS OFF       @G33NPHE*/
         LA    @05,STAE906                                         0534
         L     @05,SCEPTR(,@05)                                    0534
         OI    SCESVCD(@05),B'00010000'                            0534
         NI    SCEWAIT(@05),B'11110001'                            0534
*               END;                                               0535
*             ELSE                  /* IF NOT WAIT OR SVCD,          */
*               WARESP=ON;          /* IND INVALID SYNTAX            */
         B     @RC00529                                            0536
@RF00529 OI    WARESP,B'00010000'                                  0536
*         ELSE                      /* OPERAND'S LENGTH IS NOT 4     */
*           IF DATALN=SIX THEN      /* CHECK IF IT'S 6               */
         B     @RC00521                                            0537
@RF00521 CLC   DATALN(2),@CH00737                                  0537
         BNE   @RF00537                                            0537
*             IF IN(1:6)=IGNORE THEN/* IF SO, IS OPERAND IGNORE      */
         L     @05,TEXTPTR                                         0538
         CLC   IN(6,@05),@CC03138                                  0538
         BNE   @RF00538                                            0538
*               DO;                                                0539
*                 SCEIGNOR=ON;      /* IF SO, IND IN SCE             */
*                 SCESVCD=OFF;      /* AND SET SVCD AND              */
*                 SCEWAIT=OFF;      /* WAIT INDS OFF                 */
*                 SCENODMP=OFF;     /* NODUMP INDS OFF       @G33NPHE*/
         LA    @05,STAE906                                         0543
         L     @05,SCEPTR(,@05)                                    0543
         OI    SCEIGNOR(@05),B'00000100'                           0543
         NI    SCESVCD(@05),B'11100101'                            0543
*               END;                                               0544
*             ELSE                  /* IF NOT IGNORE,                */
*               IF IN(1:6)=NODUMP THEN/* IF SO, IS OPERAND NODUMP  0545
*                                                            @G33NPHE*/
         B     @RC00538                                            0545
@RF00538 L     @05,TEXTPTR                                         0545
         CLC   IN(6,@05),@CC03140                                  0545
         BNE   @RF00545                                            0545
*                 DO;               /*                       @G33NPHE*/
*                   SCENODMP=ON;    /* IF SO, IND IN SCE     @G33NPHE*/
*                   SCESVCD=OFF;    /* AND SET SVCD AND      @G33NPHE*/
*                   SCEWAIT=OFF;    /* WAIT INDS OFF         @G33NPHE*/
*                   SCEIGNOR=OFF;   /* IGNORE INDS OFF       @G33NPHE*/
         LA    @05,STAE906                                         0550
         L     @05,SCEPTR(,@05)                                    0550
         OI    SCENODMP(@05),B'00000010'                           0550
         NI    SCESVCD(@05),B'11100011'                            0550
*                 END;              /*                       @G33NPHE*/
*               ELSE                /* IF NOT NODUMP,        @G33NPHE*/
*                 WARESP=ON;        /* IND INVALID SYNTAX            */
         B     @RC00545                                            0552
@RF00545 OI    WARESP,B'00010000'                                  0552
*           ELSE                    /* IF LENGTH IS INAPPROPRIATE    */
*             WARESP=ON;            /* IND INVALID SYNTAX            */
         B     @RC00537                                            0553
@RF00537 OI    WARESP,B'00010000'                                  0553
*       IF WARESP=OFF THEN          /* IF SYNTAX OKAY AND BITS SET   */
@RC00537 DS    0H                                                  0554
@RC00521 DS    0H                                                  0554
@RF00520 TM    WARESP,B'00010000'                                  0554
         BNZ   @RF00554                                            0554
*         TEXTPTR=TEXTPTR+DATALN;   /* UPDATE PTR TO DELIMITER       */
         LH    @05,DATALN                                          0555
         AL    @05,TEXTPTR                                         0555
         ST    @05,TEXTPTR                                         0555
*     END;                                                         0556
*   END ACTION;                                                    0557
@EL00002 DS    0H                                                  0557
@EF00002 DS    0H                                                  0557
@ER00002 LM    @14,@12,@SA00002                                    0557
         BR    @14                                                 0557
*                                                                  0558
*/********************************************************************
**   THIS SEGMENT PROCESSES THE KEYWORD ADDRESS AND ABBREV AD.     0558
**********************************************************************/
*                                                                  0558
*ADDRESS:                                                          0558
*   PROC;                                                          0558
ADDRESS  STM   @14,@12,@SA00003                                    0558
*   IF WAADDRID=SCVIDPVT×           /* IF PVTMOD OR LPAMOD WAS       */
*       WAADDRID=SCVIDLPA THEN      /* SPECIFIED BEFORE              */
         CLI   WAADDRID,6                                          0559
         BE    @RT00559                                            0559
         CLI   WAADDRID,7                                          0559
         BNE   @RF00559                                            0559
@RT00559 DS    0H                                                  0560
*     WASCVALN=WASCVALN-LENGTH(SCVAMOD);/* SUBTRACT LENGTH           */
         LH    @05,WASCVALN                                        0560
         SH    @05,@CH02963                                        0560
         STH   @05,WASCVALN                                        0560
*   ELSE                                                           0561
*     IF WAADDRID=SCVIDAD THEN      /* NO, WAS ADDRESS SPECIFIED     */
         B     @RC00559                                            0561
@RF00559 CLI   WAADDRID,8                                          0561
         BNE   @RF00561                                            0561
*       WASCVALN=WASCVALN-LENGTH(SCVAADDR);/* YES,SUBT LN            */
         LH    @05,WASCVALN                                        0562
         SH    @05,@CH02322                                        0562
         STH   @05,WASCVALN                                        0562
*   WAADDRID=ZERO;                  /* CLEAR ENTRY ID                */
@RF00561 DS    0H                                                  0563
@RC00559 MVI   WAADDRID,X'00'                                      0563
*   CALL SCAN;                      /* SCAN OPERAND TO DELIMITER     */
         BAL   @14,SCAN                                            0564
*   IF INCHAR=LPAREN THEN           /* IF FIRST CHAR IS LEFT PAREN   */
         L     @05,TEXTPTR                                         0565
         CLI   INCHAR(@05),C'('                                    0565
         BNE   @RF00565                                            0565
*     DO;                                                          0566
*       WARESP=OFF;                 /* IND SYNTAX IS VALID           */
*       WAPAREN=ON;                 /* IND PAREN OPEN                */
         OI    WAPAREN,B'00000100'                                 0568
         NI    WARESP,B'11101111'                                  0568
*       TEXTPTR=TEXTPTR+ONE;        /* UPDATE PTR PAST LEFT PAREN    */
         AH    @05,@CH00063                                        0569
         ST    @05,TEXTPTR                                         0569
*       CALL SCAN;                  /* SCAN OPERAND TO DELIMITER     */
         BAL   @14,SCAN                                            0570
*     END;                                                         0571
*   IF WAFIN=OFF&                   /* IF CMD HAS NOT BEEN CANCELED  */
*       WARESP=OFF THEN             /* AND NO SYNTAX ERRORS FOUND    */
@RF00565 TM    WAFIN,B'00110000'                                   0572
         BNZ   @RF00572                                            0572
*     IF DATALN>ZERO&               /* IF LENGTH OKAY                */
*         DATALN<NINE THEN                                         0573
         LH    @05,DATALN                                          0573
         LTR   @05,@05                                             0573
         BNP   @RF00573                                            0573
         CH    @05,@CH02322                                        0573
         BNL   @RF00573                                            0573
*       DO;                                                        0574
*         CALL CONVHEX;             /* CONVERT ADDRESS TO HEX        */
         BAL   @14,CONVHEX                                         0575
*         IF WARESP=OFF THEN        /* IF SYNTAX OKAY                */
         TM    WARESP,B'00010000'                                  0576
         BNZ   @RF00576                                            0576
*           DO;                                                    0577
*             WAADDRID=SCVIDAD;     /* IND ENTRY IS ADDRESS          */
         MVI   WAADDRID,X'08'                                      0578
*             WASCVALN=WASCVALN+LENGTH(SCVAADDR);/* ADD ENTRY LN     */
         LH    @05,WASCVALN                                        0579
         LA    @05,9(,@05)                                         0579
         STH   @05,WASCVALN                                        0579
*             WAADDR1=CONVBUF;      /* PUT ADDRESS IN WA             */
         L     @05,CONVBUF                                         0580
         ST    @05,WAADDR1                                         0580
*             TEXTPTR=TEXTPTR+DATALN;/* UPDATE PTR PAST IT           */
         LH    @15,DATALN                                          0581
         AL    @15,TEXTPTR                                         0581
         ST    @15,TEXTPTR                                         0581
*             WAADDR2=CONVBUF;      /* SET RANGE                     */
         ST    @05,WAADDR2                                         0582
*             IF WAPAREN=ON THEN    /* IF A SECOND ADDR SPECIFIED    */
         TM    WAPAREN,B'00000100'                                 0583
         BNO   @RF00583                                            0583
*               DO;                                                0584
*                 IF EOL>TEXTPTR THEN/* IF NOT AT END-OF-LINE        */
         C     @15,EOL                                             0585
         BNL   @RF00585                                            0585
*                   IF INCHAR=COMMA×/* IF CHAR IS A DELIMITER        */
*                       INCHAR=RPAREN THEN                         0586
         CLI   INCHAR(@15),C','                                    0586
         BE    @RT00586                                            0586
         CLI   INCHAR(@15),C')'                                    0586
         BNE   @RF00586                                            0586
@RT00586 DS    0H                                                  0587
*                     TEXTPTR=TEXTPTR+ONE;/* UPDATE PTR PAST IT      */
         LA    @05,1                                               0587
         AL    @05,TEXTPTR                                         0587
         ST    @05,TEXTPTR                                         0587
*                 CALL SCAN;        /* SCAN OPERAND TO DELIMITER     */
@RF00586 DS    0H                                                  0588
@RF00585 BAL   @14,SCAN                                            0588
*                 IF WAFIN=OFF&     /* IF CMD HAS NOT BEEN CANCELED  */
*                     WARESP=OFF THEN/* AND NO SYNTAX ERRORS         */
         TM    WAFIN,B'00110000'                                   0589
         BNZ   @RF00589                                            0589
*                   IF WAPAREN=OFF& /* IF PAREN CLOSED AND           */
*                       DATALN>ZERO&/* LENGTH OKAY                   */
*                       DATALN<NINE THEN                           0590
         TM    WAPAREN,B'00000100'                                 0590
         BNZ   @RF00590                                            0590
         LH    @05,DATALN                                          0590
         LTR   @05,@05                                             0590
         BNP   @RF00590                                            0590
         CH    @05,@CH02322                                        0590
         BNL   @RF00590                                            0590
*                     DO;                                          0591
*                       CALL CONVHEX;/* CONVERT ADDRESS INTO HEX     */
         BAL   @14,CONVHEX                                         0592
*                       IF WARESP=OFF THEN/* IF SYNTAX OKAY          */
         TM    WARESP,B'00010000'                                  0593
         BNZ   @RF00593                                            0593
*                         DO;                                      0594
*                           WAADDR2=CONVBUF;/* PUT ADDRESS INTO WA   */
         MVC   WAADDR2(4),CONVBUF                                  0595
*                           TEXTPTR=TEXTPTR+DATALN;/* UPDATE PTR     */
         LH    @05,DATALN                                          0596
         AL    @05,TEXTPTR                                         0596
         ST    @05,TEXTPTR                                         0596
*                         END;                                     0597
*                     END;                                         0598
*                   ELSE            /* BAD LNGTH OR OPEN PAREN       */
*                     IF DATALN=ZERO&/* IF ONLY RIGHT PAREN,OKAY     */
*                         INCHAR=RPAREN THEN                       0599
         B     @RC00590                                            0599
@RF00590 ICM   @05,3,DATALN                                        0599
         BNZ   @RF00599                                            0599
         L     @05,TEXTPTR                                         0599
         CLI   INCHAR(@05),C')'                                    0599
         BE    @RT00599                                            0599
*                       ;           /* (POSSIBLE ON NEWLINE REPLY)   */
*                     ELSE                                         0601
*                       WARESP=ON;  /* IND INVALID SYNTAX            */
@RF00599 OI    WARESP,B'00010000'                                  0601
*               END;                                               0602
*           END;                                                   0603
*       END;                                                       0604
*     ELSE                          /* IF OPERAND'S LENGTH INVALID   */
*       WARESP=ON;                  /* IND INVALID SYNTAX            */
         B     @RC00573                                            0605
@RF00573 OI    WARESP,B'00010000'                                  0605
*   IF WAFIN=OFF THEN               /* IF CMD HAS NOT BEEN CANCELED  */
@RC00573 DS    0H                                                  0606
@RF00572 TM    WAFIN,B'00100000'                                   0606
         BNZ   @RF00606                                            0606
*     DO;                                                          0607
*       IF WARESP=ON&               /* IF SYNTAX IS INVALID          */
*           WAADDRID^=ZEROB THEN    /* AND ENTRY LENGTH ADDED        */
         TM    WARESP,B'00010000'                                  0608
         BNO   @RF00608                                            0608
         CLI   WAADDRID,0                                          0608
         BE    @RF00608                                            0608
*         DO;                                                      0609
*           WAADDRID=ZEROB;         /* IND NO ADDR                   */
         MVI   WAADDRID,X'00'                                      0610
*           WASCVALN=WASCVALN-LENGTH(SCVAADDR);/* RESET SCVA LENGTH  */
         LH    @05,WASCVALN                                        0611
         SH    @05,@CH02322                                        0611
         STH   @05,WASCVALN                                        0611
*         END;                                                     0612
*       IF EOL>TEXTPTR&             /* IF NOT AT END-OF-LINE AND     */
*           INCHAR=RPAREN THEN      /* IF OPERAND WAS ENCLOSED IN    */
@RF00608 L     @05,TEXTPTR                                         0613
         C     @05,EOL                                             0613
         BNL   @RF00613                                            0613
         CLI   INCHAR(@05),C')'                                    0613
         BNE   @RF00613                                            0613
*         TEXTPTR=TEXTPTR+ONE;      /* PAREN, UPDATE PTR PAST IT     */
         AH    @05,@CH00063                                        0614
         ST    @05,TEXTPTR                                         0614
*     END;                                                         0615
*   END ADDRESS;                                                   0616
@EL00003 DS    0H                                                  0616
@EF00003 DS    0H                                                  0616
@ER00003 LM    @14,@12,@SA00003                                    0616
         BR    @14                                                 0616
*                                                                  0617
*/********************************************************************
**   THIS SEGMENT PROCESSES THE KEYWORD ASID AND ABBREV AS. UP TO  0617
**   SIXTEEN ASIDS CAN BE SPECIFIED AS THE OPERAND TO THIS KEYWORD.
**********************************************************************/
*                                                                  0617
*ASID:                                                             0617
*   PROC;                                                          0617
ASID     STM   @14,@12,@SA00004                                    0617
*   IF WAASIDID^=ZEROB THEN         /* IF ASID WAS SPECIFIED BEFOR   */
         CLI   WAASIDID,0                                          0618
         BE    @RF00618                                            0618
*     DO;                                                          0619
*       WAASIDID=ZEROB;             /* CLEAR ENTRY ID                */
         MVI   WAASIDID,X'00'                                      0620
*       WASCVALN=WASCVALN-(LENGTH(SCVADHDR)+(WAASIDNO*TWO));       0621
         SLR   @05,@05                                             0621
         IC    @05,WAASIDNO                                        0621
         ALR   @05,@05                                             0621
         AH    @05,@CH00075                                        0621
         LCR   @05,@05                                             0621
         AH    @05,WASCVALN                                        0621
         STH   @05,WASCVALN                                        0621
*     END;                                                         0622
*   CALL SCAN;                      /* SCAN OPERAND TO DELIMITER     */
@RF00618 BAL   @14,SCAN                                            0623
*   IF INCHAR=LPAREN THEN           /* IF FIRST CHAR IS LEFT PAREN   */
         L     @05,TEXTPTR                                         0624
         CLI   INCHAR(@05),C'('                                    0624
         BNE   @RF00624                                            0624
*     DO;                                                          0625
*       WARESP=OFF;                 /* IND SYNTAX IS VALID           */
*       WAPAREN=ON;                 /* IND PAREN OPEN                */
         OI    WAPAREN,B'00000100'                                 0627
         NI    WARESP,B'11101111'                                  0627
*       TEXTPTR=TEXTPTR+ONE;        /* UPDATE PTR PAST LEFT PAREN    */
         AH    @05,@CH00063                                        0628
         ST    @05,TEXTPTR                                         0628
*     END;                                                         0629
*   DO WAASIDNO=ZERO TO SIXTEEN     /* PROCESS STRING OF ASIDS       */
*         WHILE WAFIN=OFF&          /* (MAXIMUM OF 16) UNTIL END     */
*         WARESP=OFF&               /* OF STRING IS INDICATED OR     */
*         (WAASIDNO=ZERO×           /* SYNTAX ERROR IS FOUND         */
*         WAPAREN=ON);                                             0630
@RF00624 SLR   @05,@05                                             0630
         STC   @05,WAASIDNO                                        0630
@DL00630 TM    WAFIN,B'00110000'                                   0630
         BNZ   @DC00630                                            0630
         CLI   WAASIDNO,0                                          0630
         BE    @DB00630                                            0630
         TM    WAPAREN,B'00000100'                                 0630
         BNO   @DC00630                                            0630
@DB00630 DS    0H                                                  0631
*     CALL SCAN;                    /* SCAN OPERAND TO DELIMITER     */
         BAL   @14,SCAN                                            0631
*     IF WAFIN=OFF&                 /* IF CMD HAS NOT BEEN CANCELED  */
*         WARESP=OFF THEN           /* AND NO SYNTAX ERRORS FOUND    */
         TM    WAFIN,B'00110000'                                   0632
         BNZ   @RF00632                                            0632
*       IF DATALN>ZERO&             /* CHECK LENGTH OF OPERAND       */
*           DATALN<FIVE THEN                                       0633
         LH    @05,DATALN                                          0633
         LTR   @05,@05                                             0633
         BNP   @RF00633                                            0633
         CH    @05,@CH00723                                        0633
         BNL   @RF00633                                            0633
*         IF WAASIDNO=SIXTEEN THEN  /* IF OVER MAX NUMBER            */
         CLI   WAASIDNO,16                                         0634
         BNE   @RF00634                                            0634
*           WARESP=ON;              /* INVALID SYNTAX                */
         OI    WARESP,B'00010000'                                  0635
*         ELSE                                                     0636
*           DO;                                                    0636
         B     @RC00634                                            0636
@RF00634 DS    0H                                                  0637
*             CALL CONVHEX;         /* IF OKAY, CONVERT TO BINARY    */
         BAL   @14,CONVHEX                                         0637
*             IF WARESP=OFF THEN                                   0638
         TM    WARESP,B'00010000'                                  0638
         BNZ   @RF00638                                            0638
*               DO;                                                0639
*                 IF WAASIDID=ZEROB THEN/* FIRST TIME THRU           */
         CLI   WAASIDID,0                                          0640
         BNE   @RF00640                                            0640
*                   DO;                                            0641
*                     WAASIDID=SCVIDAS;/* IND ENTRY CONTAINS ASIDS   */
         MVI   WAASIDID,X'03'                                      0642
*                     IF WASCVALN=ZERO THEN/* IF FIRST SCVA ENTRY, 0643
*                                      IND                           */
         ICM   @05,3,WASCVALN                                      0643
         BNZ   @RF00643                                            0643
*                       WASCVALN=ONE;/* SCVA PROCESSING IN CASE THE
*                                      IEE725D MESSAGE IS ISSUED     */
         MVC   WASCVALN(2),@CH00063                                0644
*                   END;                                           0645
@RF00643 DS    0H                                                  0646
*                 WAASIDS(WAASIDNO+1)=CONVBUF;/* MOVE INTO WA        */
@RF00640 SLR   @05,@05                                             0646
         IC    @05,WAASIDNO                                        0646
         ALR   @05,@05                                             0646
         L     @15,CONVBUF                                         0646
         STH   @15,WAASIDS(@05)                                    0646
*                 TEXTPTR=TEXTPTR+DATALN;/* UPDATE PTR PAST IT       */
         LH    @05,DATALN                                          0647
         AL    @05,TEXTPTR                                         0647
         ST    @05,TEXTPTR                                         0647
*                 IF EOL>TEXTPTR THEN/* IF NOT AT END-OF-LINE        */
         C     @05,EOL                                             0648
         BNL   @RF00648                                            0648
*                   IF INCHAR=COMMA×/* IF CHAR IS A DELIMITER        */
*                       INCHAR=RPAREN THEN                         0649
         CLI   INCHAR(@05),C','                                    0649
         BE    @RT00649                                            0649
         CLI   INCHAR(@05),C')'                                    0649
         BNE   @RF00649                                            0649
@RT00649 DS    0H                                                  0650
*                     TEXTPTR=TEXTPTR+ONE;/* UPDATE PTR PAST IT      */
         LA    @05,1                                               0650
         AL    @05,TEXTPTR                                         0650
         ST    @05,TEXTPTR                                         0650
*               END;                                               0651
*           END;                                                   0652
*       ELSE                        /* IF OPERAND'S LENGTH INVALID   */
*         IF DATALN=ZERO&           /* IF ONLY RIGHT PAREN AND AT    */
*             WAASIDNO^=ZERO&       /* LEAST ONE OPTION WAS SPEC     */
*             INCHAR=RPAREN THEN    /* (POSSIBLE ON NEWLINE REPLY)   */
         B     @RC00633                                            0653
@RF00633 ICM   @05,3,DATALN                                        0653
         BNZ   @RF00653                                            0653
         CLI   WAASIDNO,0                                          0653
         BE    @RF00653                                            0653
         L     @05,TEXTPTR                                         0653
         CLI   INCHAR(@05),C')'                                    0653
         BNE   @RF00653                                            0653
*           DO;                                                    0654
*             WAASIDNO=WAASIDNO-ONE;/* ADJUST LENGTH                 */
         SLR   @15,@15                                             0655
         IC    @15,WAASIDNO                                        0655
         BCTR  @15,0                                               0655
         STC   @15,WAASIDNO                                        0655
*             TEXTPTR=TEXTPTR+ONE;  /* UPDATE PTR PAST IT            */
         AH    @05,@CH00063                                        0656
         ST    @05,TEXTPTR                                         0656
*           END;                                                   0657
*         ELSE                                                     0658
*           WARESP=ON;              /* IND INVALID SYNTAX            */
         B     @RC00653                                            0658
@RF00653 OI    WARESP,B'00010000'                                  0658
*   END;                            /* END OF DOWHILE                */
@RC00653 DS    0H                                                  0659
@RC00633 DS    0H                                                  0659
@RF00632 LA    @05,1                                               0659
         SLR   @15,@15                                             0659
         IC    @15,WAASIDNO                                        0659
         ALR   @05,@15                                             0659
         STC   @05,WAASIDNO                                        0659
         CH    @05,@CH00776                                        0659
         BNH   @DL00630                                            0659
@DC00630 DS    0H                                                  0660
*   IF WAFIN=OFF THEN               /* IF CMD HAS NOT BEEN CANCELED  */
         TM    WAFIN,B'00100000'                                   0660
         BNZ   @RF00660                                            0660
*     DO;                                                          0661
*       IF WASCVALN=ONE THEN        /* IF IND FOR IEE725D MSG SET,   */
         CLC   WASCVALN(2),@CH00063                                0662
         BNE   @RF00662                                            0662
*         WASCVALN=ZERO;            /* RESET                         */
         SLR   @05,@05                                             0663
         STH   @05,WASCVALN                                        0663
*       IF WARESP=ON THEN           /* IF SYNTAX IS INVALID          */
@RF00662 TM    WARESP,B'00010000'                                  0664
         BNO   @RF00664                                            0664
*         WAASIDID=ZEROB;           /* IND NO ASID INFO IN WA        */
         MVI   WAASIDID,X'00'                                      0665
*       ELSE                        /* IF KEYWORD OKAY               */
*         WASCVALN=WASCVALN+LENGTH(SCVADHDR)+(WAASIDNO*TWO);       0666
         B     @RC00664                                            0666
@RF00664 LA    @05,2                                               0666
         AH    @05,WASCVALN                                        0666
         SLR   @15,@15                                             0666
         IC    @15,WAASIDNO                                        0666
         ALR   @15,@15                                             0666
         ALR   @05,@15                                             0666
         STH   @05,WASCVALN                                        0666
*     END;                                                         0667
*   END ASID;                                                      0668
@EL00004 DS    0H                                                  0668
@EF00004 DS    0H                                                  0668
@ER00004 LM    @14,@12,@SA00004                                    0668
         BR    @14                                                 0668
*                                                                  0669
*/********************************************************************
**   THIS SEGMENT PROCESSES THE KEYWORD COMP AND ABBREV C. THE OPERAND
**   OF THIS KEYWORD IS EXPECTED TO BE EITHER A 3 DIGIT HEX NUMBER OR
**   A 4 DIGIT DECIMAL NUMBER PRECEEDED BY THE LETTER U. ANY DIGIT CAN
**   BE THE LETTER X INSTEAD OF A NUMBER.                          0669
**   FOR THE OUTPUT FOR THE SCVA, THE NUMBER WILL BE               0669
**   PACKED AND A MASK FIELD WILL INDICATE WHICH DIGITS TO COMPARE.
**********************************************************************/
*                                                                  0669
*COMP:                                                             0669
*   PROC;                                                          0669
COMP     STM   @14,@12,@SA00005                                    0669
*   CALL SCAN;                      /* SCAN TO NON-ALPHANUM CHAR     */
         BAL   @14,SCAN                                            0670
*   IF WAFIN=OFF THEN               /* IF CMD HAS NOT BEEN CANCELED  */
         TM    WAFIN,B'00100000'                                   0671
         BNZ   @RF00671                                            0671
*     DO;                                                          0672
*       IF WARESP=OFF THEN          /* IF NO INVALID SYNTAX FOUND    */
         TM    WARESP,B'00010000'                                  0673
         BNZ   @RF00673                                            0673
*         IF DATALN=THREE×          /* CHECK LENGTH, IT MUST BE      */
*             (DATALN=FIVE&         /* EITHER A 3 CHAR CODE OR A 5   */
*             INCHAR=LETTERU) THEN  /* CHAR CODE STARTING WITH U     */
         LH    @05,DATALN                                          0674
         CH    @05,@CH00292                                        0674
         BE    @RT00674                                            0674
         CH    @05,@CH00723                                        0674
         BNE   @RF00674                                            0674
         L     @05,TEXTPTR                                         0674
         CLI   INCHAR(@05),C'U'                                    0674
         BNE   @RF00674                                            0674
@RT00674 DS    0H                                                  0675
*           DO;                     /* IF VALID LENGTH               */
*             WACOMPB=ZEROB;        /* SET INDICATOR FLAGS TO ZERO   */
         MVI   WACOMPB,X'00'                                       0676
*             WACCMASK=ZERO3B;      /* SET MASK TO ZERO              */
         MVC   WACCMASK(3),@CB03188                                0677
*             WACOMPD=ZERO3B;       /* SET COMP CODE SAVEAREA TO 0   */
         MVC   WACOMPD(3),@CB03188                                 0678
*             IF DATALN=FIVE THEN   /* IF USER CODE SPECIFIED        */
         LH    @05,DATALN                                          0679
         CH    @05,@CH00723                                        0679
         BNE   @RF00679                                            0679
*               DO;                                                0680
*                 TEXTPTR=TEXTPTR+ONE;/* UPDATE PTR PAST THE U       */
         LA    @15,1                                               0681
         AL    @15,TEXTPTR                                         0681
         ST    @15,TEXTPTR                                         0681
*                 DATALN=DATALN-ONE;/* REDUCE TO LENGTH OF CODE      */
         BCTR  @05,0                                               0682
         STH   @05,DATALN                                          0682
*                 WACOMPU=ON;       /* IND USER CODE SPECIFIED       */
         OI    WACOMPU,B'10000000'                                 0683
*               END;                                               0684
*             IF(WACOMPU=OFF&IN(1:3)^=XXX)×(WACOMPU=ON&IN(1:4)^=XXXX)
*               THEN                                               0685
@RF00679 TM    WACOMPU,B'10000000'                                 0685
         BNZ   @GL00047                                            0685
         L     @05,TEXTPTR                                         0685
         CLC   IN(3,@05),@CC03174                                  0685
         BNE   @RT00685                                            0685
@GL00047 TM    WACOMPU,B'10000000'                                 0685
         BNO   @RF00685                                            0685
         L     @05,TEXTPTR                                         0685
         CLC   IN(4,@05),@CC03176                                  0685
         BE    @RF00685                                            0685
@RT00685 DS    0H                                                  0686
*               DO;                                                0686
*                                                                  0686
*                 /***************************************************/
*                 /*                                                 */
*                 /* PROCESS CODE ONE CHAR AT A TIME, SETUP MASK.    */
*                 /*                                                 */
*                 /***************************************************/
*                                                                  0687
*                 TEMPCC=ZEROF;     /* INITIALIZE TEMP AREA          */
         MVC   TEMPCC(4),@CB03190                                  0687
*                 DO I=ONE TO DATALN/* PROCESS EACH CHAR             */
*                       WHILE WARESP=OFF;/* STOP IF INVALID CHAR   0688
*                                      FOUND                         */
         LA    I,1                                                 0688
         B     @DE00688                                            0688
@DL00688 TM    WARESP,B'00010000'                                  0688
         BNZ   @DC00688                                            0688
*                   IF IN(I:I)^=LETTERX THEN/* IF CHAR IS AN X       */
         L     @05,TEXTPTR                                         0689
         LR    @02,@05                                             0689
         ALR   @02,I                                               0689
         BCTR  @02,0                                               0689
         CLI   IN(@02),C'X'                                        0689
         BE    @RF00689                                            0689
*                     IF WACOMPU=ON THEN/* IF A USER CODE SPECIFIED  */
         TM    WACOMPU,B'10000000'                                 0690
         BNO   @RF00690                                            0690
*                       IF IN(I:I)<CHARZERO THEN/* IF NOT A DEC NUM  */
         ALR   @05,I                                               0691
         BCTR  @05,0                                               0691
         CLI   IN(@05),C'0'                                        0691
         BNL   @RF00691                                            0691
*                         WARESP=ON;/* IND INVALID SYNTAX            */
         OI    WARESP,B'00010000'                                  0692
*                       ELSE        /* IF CHAR IS A DECIMAL NUMBER   */
*                         DO;                                      0693
         B     @RC00691                                            0693
@RF00691 DS    0H                                                  0694
*                           TEMPCC(I:I)=IN(I:I);/* COPY INTO TEMP    */
         LA    @05,TEMPCC-1(I)                                     0694
         L     @02,TEXTPTR                                         0694
         ALR   @02,I                                               0694
         BCTR  @02,0                                               0694
         MVC   0(1,@05),IN(@02)                                    0694
*                           WACCMASK=WACCMASK×MASKCC(I);/* SET MSK   */
         LR    @05,I                                               0695
         MH    @05,@CH00292                                        0695
         LA    @02,MASKCC-3(@05)                                   0695
         OC    WACCMASK(3),0(@02)                                  0695
*                         END;                                     0696
*                     ELSE          /* IF SYSTEM CODE SPECIFIED      */
*                       DO;                                        0697
         B     @RC00690                                            0697
@RF00690 DS    0H                                                  0698
*                         IF IN(I:I)<CHARZERO THEN/* IF NOT DEC NUM  */
         L     @05,TEXTPTR                                         0698
         LR    @02,@05                                             0698
         ALR   @02,I                                               0698
         BCTR  @02,0                                               0698
         CLI   IN(@02),C'0'                                        0698
         BNL   @RF00698                                            0698
*                           IF IN(I:I)>LETTERF THEN/* IF NON-HEX     */
         ALR   @05,I                                               0699
         BCTR  @05,0                                               0699
         CLI   IN(@05),C'F'                                        0699
         BNH   @RF00699                                            0699
*                             WARESP=ON;/* IND INVALID SYNTAX        */
         OI    WARESP,B'00010000'                                  0700
*                           ELSE    /* IF HEX CHAR A-F, ADJUST IT    */
*                             TEMPCC(I+1:I+1)=IN(I:I)+PLUS39;      0701
         B     @RC00699                                            0701
@RF00699 LA    @05,57                                              0701
         L     @02,TEXTPTR                                         0701
         BCTR  @02,0                                               0701
         SLR   @15,@15                                             0701
         IC    @15,IN(I,@02)                                       0701
         ALR   @05,@15                                             0701
         STC   @05,TEMPCC(I)                                       0701
*                         ELSE                                     0702
*                           TEMPCC(I+1:I+1)=IN(I:I);/* COPY DEC NUM  */
         B     @RC00698                                            0702
@RF00698 LA    @05,TEMPCC(I)                                       0702
         L     @02,TEXTPTR                                         0702
         ALR   @02,I                                               0702
         BCTR  @02,0                                               0702
         MVC   0(1,@05),IN(@02)                                    0702
*                         WACCMASK=WACCMASK×MASKCC(I+1);/* SET MSK   */
@RC00698 LR    @05,I                                               0703
         MH    @05,@CH00292                                        0703
         LA    @02,MASKCC(@05)                                     0703
         OC    WACCMASK(3),0(@02)                                  0703
*                       END;                                       0704
*                 END;              /* END OF DO-WHILE               */
*                                                                  0705
@RC00690 DS    0H                                                  0705
@RF00689 AH    I,@CH00063                                          0705
@DE00688 CH    I,DATALN                                            0705
         BNH   @DL00688                                            0705
@DC00688 DS    0H                                                  0706
*                 /***************************************************/
*                 /*                                                 */
*                 /* IF SYNTAX VALID, PUT CODE INTO WA               */
*                 /*                                                 */
*                 /***************************************************/
*                                                                  0706
*                 IF WARESP=OFF THEN/* IF SYNTAX IS VALID            */
         TM    WARESP,B'00010000'                                  0706
         BNZ   @RF00706                                            0706
*                   DO;                                            0707
*                     PACK(PACKCC,TEMPCC);/* PACK CODE               */
         PACK  PACKCC(3),TEMPCC(4)                                 0708
*                     WACOMPD=PACKCC&WACCMASK;/* MASK CODE INTO WA   */
         MVC   WACOMPD(3),PACKCC                                   0709
         NC    WACOMPD(3),WACCMASK                                 0709
*                   END;                                           0710
*                 ELSE              /* IF SYNTAX IS INVALID          */
*                   DO;                                            0711
         B     @RC00706                                            0711
@RF00706 DS    0H                                                  0712
*                     IF WACOMPU=ON THEN/* IF A USER CODE            */
         TM    WACOMPU,B'10000000'                                 0712
         BNO   @RF00712                                            0712
*                       DO;                                        0713
*                         TEXTPTR=TEXTPTR-ONE;/* RESET PTR TO U      */
         L     @05,TEXTPTR                                         0714
         BCTR  @05,0                                               0714
         ST    @05,TEXTPTR                                         0714
*                         DATALN=DATALN+ONE;/* RESET LENGTH TO 5     */
         LH    @05,DATALN                                          0715
         LA    @05,1(,@05)                                         0715
         STH   @05,DATALN                                          0715
*                       END;                                       0716
*                     IF WACOMPID^=ZEROB THEN/* IF COMP HAS BEEN     */
@RF00712 CLI   WACOMPID,0                                          0717
         BE    @RF00717                                            0717
*                       DO;         /* PREVIOUSLY SPECIFIED          */
*                         WACOMPID=ZEROB;/* IND NO COMP AND SUBT LN  */
         MVI   WACOMPID,X'00'                                      0719
*                         WASCVALN=WASCVALN-LENGTH(SCVACOMP);      0720
         LH    @05,WASCVALN                                        0720
         SH    @05,@CH00061                                        0720
         STH   @05,WASCVALN                                        0720
*                       END;                                       0721
*                   END;                                           0722
*               END;                /* IF ALL X, LEAVE MASK ZERO     */
*           END;                                                   0724
*         ELSE                      /* IF LENGTH INVALID             */
*           WARESP=ON;              /* IND INVALID SYNTAX            */
         B     @RC00674                                            0725
@RF00674 OI    WARESP,B'00010000'                                  0725
*       IF WARESP=OFF THEN          /* IF SYNTAX IS VALID            */
@RC00674 DS    0H                                                  0726
@RF00673 TM    WARESP,B'00010000'                                  0726
         BNZ   @RF00726                                            0726
*         DO;                                                      0727
*           TEXTPTR=TEXTPTR+DATALN; /* UPDATE PTR PAST COMP          */
         LH    @05,DATALN                                          0728
         AL    @05,TEXTPTR                                         0728
         ST    @05,TEXTPTR                                         0728
*           IF WACOMPID=ZEROB THEN  /* IF COMP HAS NOT BEEN          */
         CLI   WACOMPID,0                                          0729
         BNE   @RF00729                                            0729
*             DO;                   /* PREVIOUSLY SPECIFIED          */
*               WACOMPID=SCVIDCC;   /* IND WA ENTRY CONTAINS COMP    */
         MVI   WACOMPID,X'02'                                      0731
*               WASCVALN=WASCVALN+LENGTH(SCVACOMP);/* ADD TO SCVA LN */
         LH    @05,WASCVALN                                        0732
         LA    @05,8(,@05)                                         0732
         STH   @05,WASCVALN                                        0732
*             END;                                                 0733
*         END;                                                     0734
*     END;                                                         0735
*   END COMP;                                                      0736
@EL00005 DS    0H                                                  0736
@EF00005 DS    0H                                                  0736
@ER00005 LM    @14,@12,@SA00005                                    0736
         BR    @14                                                 0736
*                                                                  0737
*/********************************************************************
**   CONVHEX TAKES UP TO AN 8 CHAR HEX NUMBER AND CONVERTS IT TO A 0737
**   4 BYTE BINARY NUMBER. IT IS CALLED FROM ADDRESS, PVTMOD, LPAMOD
**   AND ASID SEGMENTS.                                            0737
**********************************************************************/
*                                                                  0737
*CONVHEX:                                                          0737
*   PROC;                                                          0737
CONVHEX  STM   @14,@12,12(@13)                                     0737
*   TEMPADDR=F0S;                   /* INIT AREA TO F0F0F0,ETC       */
         MVC   TEMPADDR(8),@CC03182                                0738
*   DO I=ONE TO DATALN              /* PROCESS EACH CHAR OF ADDR     */
*         WHILE WARESP=OFF;         /* UNTIL END OR ERROR            */
         LA    I,1                                                 0739
         B     @DE00739                                            0739
@DL00739 TM    WARESP,B'00010000'                                  0739
         BNZ   @DC00739                                            0739
*     TEMPINDX=(EIGHT-DATALN)+I;    /* CALC POSITION IN TEMP AREA    */
         LA    TEMPINDX,8                                          0740
         SH    TEMPINDX,DATALN                                     0740
         ALR   TEMPINDX,I                                          0740
*     IF IN(I:I)<CHARZERO THEN      /* IF CHAR IS NONDECIMAL(1-10)   */
         L     @05,TEXTPTR                                         0741
         LR    @01,@05                                             0741
         ALR   @01,I                                               0741
         BCTR  @01,0                                               0741
         CLI   IN(@01),C'0'                                        0741
         BNL   @RF00741                                            0741
*       IF IN(I:I)>LETTERF THEN     /* AND IF NOT A HEX CHAR(A-F)    */
         ALR   @05,I                                               0742
         BCTR  @05,0                                               0742
         CLI   IN(@05),C'F'                                        0742
         BNH   @RF00742                                            0742
*         WARESP=ON;                /* IND SYNTAX IS INVALID         */
         OI    WARESP,B'00010000'                                  0743
*       ELSE                        /* IF CHAR IS A HEX A-F CHAR     */
*         DO;                                                      0744
         B     @RC00742                                            0744
@RF00742 DS    0H                                                  0745
*           TEMPNUM=IN(I:I)+PLUS39; /* PREPARE TO PACK               */
         LA    @05,57                                              0745
         L     @01,TEXTPTR                                         0745
         BCTR  @01,0                                               0745
         SLR   @00,@00                                             0745
         IC    @00,IN(I,@01)                                       0745
         ALR   @05,@00                                             0745
         STC   @05,TEMPNUM                                         0745
*           TEMPADDR(TEMPINDX:TEMPINDX)=TEMPNUM;/* COPY CONV CHAR    */
         LA    @05,TEMPADDR-1(TEMPINDX)                            0746
         MVC   0(1,@05),TEMPNUM                                    0746
*         END;                                                     0747
*     ELSE                          /* IF CHAR IS A DECIMAL CHAR     */
*       TEMPADDR(TEMPINDX:TEMPINDX)=IN(I:I);/* COPY CHAR             */
         B     @RC00741                                            0748
@RF00741 LA    @05,TEMPADDR-1(TEMPINDX)                            0748
         L     @01,TEXTPTR                                         0748
         ALR   @01,I                                               0748
         BCTR  @01,0                                               0748
         MVC   0(1,@05),IN(@01)                                    0748
*   END;                                                           0749
@RC00741 AH    I,@CH00063                                          0749
@DE00739 CH    I,DATALN                                            0749
         BNH   @DL00739                                            0749
@DC00739 DS    0H                                                  0750
*   IF WARESP=OFF THEN              /* IF SYNTAX OKAY                */
         TM    WARESP,B'00010000'                                  0750
         BNZ   @RF00750                                            0750
*     DO;                                                          0751
*       PACK(CONVBUFC,TEMPADDR);    /* PACK NUMBER TO BINARY &SIGN   */
         PACK  CONVBUFC(4),TEMPADDR(8)                             0752
*       SRL(CONVBUFC,FOUR);         /* REMOVE SIGN                   */
         L     @05,CONVBUFC                                        0753
         SRL   @05,4                                               0753
         ST    @05,CONVBUFC                                        0753
*     END;                                                         0754
*   END CONVHEX;                                                   0755
@EL00006 DS    0H                                                  0755
@EF00006 DS    0H                                                  0755
@ER00006 LM    @14,@12,12(@13)                                     0755
         BR    @14                                                 0755
*                                                                  0756
*/********************************************************************
**  DISABLE KEYWORD PROCESSOR (BOTH DISABLE AND D)                 0756
**********************************************************************/
*                                                                  0756
*DISABLE:                                                          0756
*   PROC;                                                          0756
DISABLE  STM   @14,@12,12(@13)                                     0756
*   WADISABL=ON;                    /* SET DISABLE BIT               */
*   WAENABLE=OFF;                   /* ENSURE ENABLE BIT OFF         */
         OI    WADISABL,B'01000000'                                0758
         NI    WAENABLE,B'01111111'                                0758
*   END DISABLE;                                                   0759
@EL00007 DS    0H                                                  0759
@EF00007 DS    0H                                                  0759
@ER00007 LM    @14,@12,12(@13)                                     0759
         BR    @14                                                 0759
*                                                                  0760
*/********************************************************************
**  ENABLE KEYWORD PROCESSOR (BOTH ENABLE AND EN)                  0760
**********************************************************************/
*                                                                  0760
*ENABLE:                                                           0760
*   PROC;                                                          0760
ENABLE   STM   @14,@12,12(@13)                                     0760
*   WAENABLE=ON;                    /* SET ENABLE BIT                */
*   WADISABL=OFF;                   /* ENSURE DISABLE BIT OFF        */
         OI    WAENABLE,B'10000000'                                0762
         NI    WADISABL,B'10111111'                                0762
*   END ENABLE;                                                    0763
@EL00008 DS    0H                                                  0763
@EF00008 DS    0H                                                  0763
@ER00008 LM    @14,@12,12(@13)                                     0763
         BR    @14                                                 0763
*                                                                  0764
*/********************************************************************
**   THIS SEGMENT PROCESSES THE KEYWORD END AND ABBREV E. THIS KEYWORD
**   SIGNIFIES THE COMPLETION OF SET COMMAND. FIRST,FOR ANY KEYWORDS
**   THAT WERE NOT SPECIFIED AND HAVE DEFAULTS, THE APPROPRIATE BITS
**   ARE SET IN THE SCE. NEXT, IF ANY KEYWORDS WERE SPECIFIED WHOSE
**   INFO IS STORED IN THE SCVA, THEN STORAGE IS OBTAINED FOR AN SCVA
**   AND IT IS FILLED IN. THEN ADDSCE IS CALLED TO ADD THIS SCE ONTO
**   THE SCE CHAIN.                                                0764
**********************************************************************/
*                                                                  0764
*ENDP:                                                             0764
*   PROC;                                                          0764
ENDP     STM   @14,@12,@SA00009                                    0764
*   IF CSCBPTR^=ZERO THEN           /* IF CSCB IS STILL AROUND       */
         LA    @09,STAE906                                         0765
         ICM   @05,15,CSCBPTR(@09)                                 0765
         BZ    @RF00765                                            0765
*     CALL FREECSCB;                /* FREE IT                       */
         BAL   @14,FREECSCB                                        0766
*   IF SCERRTYP=ZEROB THEN          /* IF ERRTYP NOT SPECIFIED,      */
@RF00765 LA    @09,STAE906                                         0767
         L     @09,SCEPTR(,@09)                                    0767
         CLI   SCERRTYP(@09),0                                     0767
         BNE   @RF00767                                            0767
*     SCERRTYP=FF;                  /* IND THE DEFAULT ALL           */
         MVI   SCERRTYP(@09),X'FF'                                 0768
*   IF SCEMODE=ZEROH THEN           /* IF MODE NOT SPECIFIED,        */
@RF00767 LA    @09,STAE906                                         0769
         L     @09,SCEPTR(,@09)                                    0769
         CLC   SCEMODE(2,@09),@CB03166                             0769
         BNE   @RF00769                                            0769
*     SCEMODE=FFFF;                 /* IND THE DEFAULT ALL,ANY       */
         MVC   SCEMODE(2,@09),@CB03170                             0770
*   IF SCEWAIT=OFF&                 /* IF KEYWORD ACTION WAS NOT     */
*       SCENODMP=OFF&               /*                       @G33NPHE*/
*       SCEIGNOR=OFF THEN           /* SPECIFIED,                    */
@RF00769 LA    @09,STAE906                                         0771
         L     @09,SCEPTR(,@09)                                    0771
         TM    SCEWAIT(@09),B'00001110'                            0771
         BNZ   @RF00771                                            0771
*     SCESVCD=ON;                   /* IND THE DEFAULT SVCD          */
         OI    SCESVCD(@09),B'00010000'                            0772
*   IF WADISABL=ON THEN             /* IF DISABLE WAS SPECIFIED,     */
@RF00771 TM    WADISABL,B'01000000'                                0773
         BNO   @RF00773                                            0773
*     SCEDSABL=ON;                  /* IND DISABLE,OTHERWISE ENABL   */
         LA    @09,STAE906                                         0774
         L     @09,SCEPTR(,@09)                                    0774
         OI    SCEDSABL(@09),B'10000000'                           0774
*   IF WASCVALN^=ZERO THEN          /* IF A SCVA IS NEEDED           */
@RF00773 LH    @09,WASCVALN                                        0775
         LTR   @09,@09                                             0775
         BZ    @RF00775                                            0775
*     DO;                                                          0776
*       RFY                                                        0777
*        (R0,                                                      0777
*         R1) RSTD;                                                0777
*       R0=WASCVALN+LENGTH(SCVAHDR)+ONE;/* CALC SIZE OF SCVA NEEDED  */
         AH    @09,@CH02322                                        0778
         LR    R0,@09                                              0778
*       R0=R0×SP245;                /* ADD SUBPOOL TO HI ORD BYTE    */
         O     R0,@CF03117                                         0779
*       GEN(GETMAIN R,LV=(0));                                     0780
         GETMAIN R,LV=(0)
*       SCESCVA=R1;                 /* SAVE ADDR IN SCE              */
         LA    @09,STAE906                                         0781
         L     @09,SCEPTR(,@09)                                    0781
         ST    R1,SCESCVA(,@09)                                    0781
*       RFY                                                        0782
*        (R0,                                                      0782
*         R1) UNRSTD;                                              0782
*       SCVACBID=IDSCVA;            /* INIT CONTROL BLOCK ID         */
         LA    @09,STAE906                                         0783
         L     @09,SCEPTR(,@09)                                    0783
         L     @09,SCESCVA(,@09)                                   0783
         MVC   SCVACBID(4,@09),@CC03161                            0783
*       SCVALN=WASCVALN+LENGTH(SCVAHDR)+ONE;/* INIT LENGTH OF SCVA 0784
*                                      FIELD                         */
         LA    @05,9                                               0784
         AH    @05,WASCVALN                                        0784
         STH   @05,SCVALN(,@09)                                    0784
*       SCVAPTR=ADDR(SCVADATA);     /* UPDATE PTR TO FIRST           */
         LA    SCVAPTR,SCVADATA(,@09)                              0785
*       IF WACOMPID^=ZERO THEN      /* IF COMP WAS SPECIFIED         */
         CLI   WACOMPID,0                                          0786
         BE    @RF00786                                            0786
*         DO;                                                      0787
*           SCVACOMP=WACOMP;        /* COPY INFO FROM WA INTO SCVA   */
         MVC   SCVACOMP(8,SCVAPTR),WACOMP                          0788
*           SCVAPTR=SCVAPTR+LENGTH(SCVACOMP);/* PT PAST THIS         */
         AH    SCVAPTR,@CH00061                                    0789
*         END;                                                     0790
*       IF WAASIDID^=ZERO THEN      /* IF ASID WAS SPECIFIED         */
@RF00786 CLI   WAASIDID,0                                          0791
         BE    @RF00791                                            0791
*         DO;                       /* COPY INFO FROM WA INTO SCVA   */
*           I=LENGTH(SCVADHDR)+(WAASIDNO*TWO);                     0793
         SLR   I,I                                                 0793
         IC    I,WAASIDNO                                          0793
         ALR   I,I                                                 0793
         AH    I,@CH00075                                          0793
*           SCVAASID(1:I)=WAASID(1:I);                             0794
         LR    @09,I                                               0794
         BCTR  @09,0                                               0794
         EX    @09,@SM03430                                        0794
*           SCVAPTR=SCVAPTR+I;      /* NEXT                          */
         ALR   SCVAPTR,I                                           0795
*         END;                                                     0796
*       IF WAJOBID^=ZERO THEN       /* IF JOBNAME WAS SPECIFIED      */
@RF00791 CLI   WAJOBID,0                                           0797
         BE    @RF00797                                            0797
*         DO;                                                      0798
*           SCVAJOBN=WAJOBNAM;      /* COPY INFO FROM WA INTO SCVA   */
         MVC   SCVAJOBN(9,SCVAPTR),WAJOBNAM                        0799
*           SCVAPTR=SCVAPTR+LENGTH(SCVAJOBN);/* PT PAST THIS         */
         AH    SCVAPTR,@CH02322                                    0800
*         END;                                                     0801
*       IF WAJSPID^=ZERO THEN       /* IF JSPGM WAS SPECIFIED        */
@RF00797 CLI   WAJSPID,0                                           0802
         BE    @RF00802                                            0802
*         DO;                                                      0803
*           SCVAJOBN=WAJSPGM;       /* COPY INFO FROM WA INTO SCVA   */
         MVC   SCVAJOBN(9,SCVAPTR),WAJSPGM                         0804
*           SCVAPTR=SCVAPTR+LENGTH(SCVAJOBN);/* PT PAST THIS         */
         AH    SCVAPTR,@CH02322                                    0805
*         END;                                                     0806
*       IF WAADDRID^=ZERO THEN      /* IF PVT×LPAMOD×ADDRESS SPEC    */
@RF00802 CLI   WAADDRID,0                                          0807
         BE    @RF00807                                            0807
*         IF WAADDRID=SCVIDPVT×     /* IF PVTMOD OR LPAMOD SPEC      */
*             WAADDRID=SCVIDLPA THEN                               0808
         CLI   WAADDRID,6                                          0808
         BE    @RT00808                                            0808
         CLI   WAADDRID,7                                          0808
         BNE   @RF00808                                            0808
@RT00808 DS    0H                                                  0809
*           DO;                                                    0809
*             SCVAMOD=WAADDR;       /* COPY INFO FROM WA INTO SCVA   */
         MVC   SCVAMOD(17,SCVAPTR),WAADDR                          0810
*             SCVAPTR=SCVAPTR+LENGTH(SCVAMOD);/* PT PAST IT          */
         AH    SCVAPTR,@CH02963                                    0811
*           END;                                                   0812
*         ELSE                      /* IF NOT PVTMOD OR LPAMOD       */
*           DO;                     /* THEN ADDRESS WAS SPECIFIED    */
         B     @RC00808                                            0813
@RF00808 DS    0H                                                  0814
*             SCVAADDR=WAADDR;      /* COPY INFO FROM WA INTO SCVA   */
         MVC   SCVAADDR(9,SCVAPTR),WAADDR                          0814
*             SCVAPTR=SCVAPTR+LENGTH(SCVAADDR);/* PT PAST            */
         AH    SCVAPTR,@CH02322                                    0815
*           END;                                                   0816
*       SCVCCID=SCVIDLST;           /* SET AN ID OF 0 TO IND END     */
@RC00808 DS    0H                                                  0817
@RF00807 MVI   SCVCCID(SCVAPTR),X'01'                              0817
*     END;                                                         0818
*   IF WAFIN=OFF THEN               /* IF ALL OKAY                   */
@RF00775 TM    WAFIN,B'00100000'                                   0819
         BNZ   @RF00819                                            0819
*     DO;                                                          0820
*                                                                  0820
*/********************************************************************
**   ADD ONE SCE ONTO THE SCE CHAIN. THE FLOW IS AS FOLLOWS:       0821
**         - IF SLIP IS NOT ACTIVE AND NO SHDR EXISTS (I.E., THIS IS
**           THE FIRST SLIP TRAP SET), CORE IS OBTAINED AND THE SHDR
**           IS INITIALIZED. THE CVT IS UPDATED (VIA CS) WITH THE  0821
**           ADDRESS OF THE SHDR.                                  0821
**         - ATTEMPTS ARE MADE TO OBTAIN (TS INSTRUCTION) THE COMMAND
**           SEQUENCING BYTE IN THE SHDR. IF UNSUCCESSFUL, A MESSAGE
**           IS WRITTEN ASKING THE ISSUER IF HE WANTS TO RETRY THE 0821
**           TS INSTRUCTION OR CANCEL.                             0821
**         - WHEN THE CMD-SEQ BYTE IS OBTAINED, THE WORKAREA IS    0821
**           CHECKED TO SEE IF AN ID WAS SUPPLIED AND IF NOT, ONE IS
**           GENERATED.                                            0821
**         - THE SCE'S ON THE CHAIN ARE EACH CHECKED TO ENSURE THE NEW
**           SCE'S ID IS UNIQUE. IF THE ID IS NOT UNIQUE AND WAS A 0821
**           GENERATED ID, ANOTHER ID IS GENERATED AND THE COMPARISON
**           WITH THE SCE'S ON THE CHAIN IS REPEATED. IF THE ID IS NOT
**           UNIQUE AND WAS A SPECIFIED ID, THE CMD-SEQ BYTE IS    0821
**           RELEASED AND A MESSAGE IS WRITTEN ASKING THE ISSUER TO
**           SPECIFY A NEW ID OR CANCEL. IF HE REPLIES WITH ID,    0821
**           CONTROL RETURNS TO THE CODE WHICH ATTEMPTS TO OBTAIN THE
**           CMD-SEQ BYTE.                                         0821
**         - IF THE SLIP PROCESSOR (IEAVTSLP) HAS NOT BEEN LOADED YET
**           AND THIS TRAP IS ENABLED, IT ATTEMPTS TO LOAD AND PAGEFIX
**           IEAVTSLP. IF UNSUCCESSFUL, IT ISSUES THE 328 MESSAGE AND
**           TERMINATES THE COMMAND.                               0821
**         - IF SUCCESSFUL TO HERE, THE SCE IS ADDED ONTO THE END OF
**           THE CHAIN. THE CMD-SEQ BYTE IS THEN RELEASED AND A MESSAGE
**           SENT INFORMING THE ISSUER THE TRAP IS SET.            0821
**********************************************************************/
*                                                                  0821
*       IF CVTRTMS^=ZERO&SHDRCBID^=IDSHDR THEN                     0821
         L     @09,CVTPTR                                          0821
         L     @09,CVTRTMS(,@09)                                   0821
         LTR   @09,@09                                             0821
         BZ    @RF00821                                            0821
         CLC   SHDRCBID(4,@09),@CC03157                            0821
         BE    @RF00821                                            0821
*         GEN(ABEND 102);                                          0822
         ABEND 102
*       IF CVTRTMS=ZERO THEN        /* IF SLIP HAS NEVER BEEN ACTIV  */
*                                                                  0823
@RF00821 L     @09,CVTPTR                                          0823
         ICM   @05,15,CVTRTMS(@09)                                 0823
         BNZ   @RF00823                                            0823
*         /***********************************************************/
*         /*                                                         */
*         /* PREPARE SLIP TO BECOME ACTIVE BY CREATING AN SHDR       */
*         /*                                                         */
*         /***********************************************************/
*                                                                  0824
*         DO;                                                      0824
*           RFY                                                    0825
*            (R0,                                                  0825
*             R1) RSTD;                                            0825
*           R0=SIZESHDR×SP245;      /* GET SHDR FROM SUBPOOL 245     */
         L     R0,SIZESHDR                                         0826
         O     R0,@CF03117                                         0826
*           GEN(GETMAIN R,LV=(0));                                 0827
         GETMAIN R,LV=(0)
*           SAVSHDR=R1;             /* SAVE ADDR OF SHDR             */
         LA    @09,STAE906                                         0828
         ST    R1,SAVSHDR(,@09)                                    0828
*           RFY                                                    0829
*            (R0,                                                  0829
*             R1) UNRSTD;                                          0829
*           RFY                                                    0830
*             SHDR BASED(SAVSHDR);  /* ACCESS SHDR                   */
*           SHDR=SHDR&&SHDR;        /* CLEAR SHDR                    */
         LA    @09,STAE906                                         0831
         L     @09,SAVSHDR(,@09)                                   0831
         XC    SHDR(28,@09),SHDR(@09)                              0831
*           SHDRCBID=IDSHDR;        /* PUT ID IN                     */
         MVC   SHDRCBID(4,@09),@CC03157                            0832
*           SHDRBKWD=SAVSHDR;       /* INIT BKWD PTR                 */
         ST    @09,SHDRBKWD(,@09)                                  0833
*           RFY                                                    0834
*             SHDR BASED(CVTRTMS);  /* RESET SHDR BASE               */
*           RFY                                                    0835
*            (R6,                                                  0835
*             R7) RSTD;                                            0835
*           R6=ZERO;                /* INIT COMPARING VALUE TO 0     */
         SLR   R6,R6                                               0836
*           R7=SAVSHDR;             /* INIT REPLACE VALUE            */
         LR    R7,@09                                              0837
*           CS(R6,R7,CVTRTMS);      /* FILL IN CVT WITH SHDR ADDR    */
         L     @09,CVTPTR                                          0838
         CS    R6,@07,CVTRTMS(@09)                                 0838
*           BC(8,HDROKAY);          /* IF CS FAILED, FREE STORAGE    */
         BC    8,HDROKAY                                           0839
*           RFY                                                    0840
*            (R6,                                                  0840
*             R7) UNRSTD;                                          0840
*                                                                  0840
*           /*********************************************************/
*           /*                                                       */
*           /* FREE THE SHDR (SUBPOOL=245)                           */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0841
*           RFY                                                    0841
*            (R0,                                                  0841
*             R1) RSTD;                                            0841
*           R0=SIZESHDR×SP245;      /* SETUP SIZE AND SUBPOOL        */
         L     R0,SIZESHDR                                         0842
         O     R0,@CF03117                                         0842
*           R1=SAVSHDR;             /* ADDRESS OF SHDR               */
         LA    @09,STAE906                                         0843
         L     R1,SAVSHDR(,@09)                                    0843
*           GEN(FREEMAIN R,LV=(0),A=(1));/* FREE THE SHDR            */
         FREEMAIN R,LV=(0),A=(1)
*           RFY                                                    0845
*            (R0,                                                  0845
*             R1) UNRSTD;                                          0845
*HDROKAY:                                                          0846
*           SAVSHDR=ZERO;           /* IND SHDR CONNECTED OR FREED   */
HDROKAY  LA    @09,STAE906                                         0846
         SLR   @05,@05                                             0846
         ST    @05,SAVSHDR(,@09)                                   0846
*         END;                                                     0847
*       IF WAFIN=OFF THEN           /* IF NO ERROR, CONTINUE         */
@RF00823 TM    WAFIN,B'00100000'                                   0848
         BNZ   @RF00848                                            0848
*         DO;                                                      0849
*                                                                  0849
*           /*********************************************************/
*           /*                                                       */
*           /* ATTEMPT TO OBTAIN THE COMMAND-SEQUENCING BYTE IN THE  */
*           /* SHDR                                                  */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0850
*           CALL GETSEQ;            /* ATTEMPT TO GET CMD-SEQ BYTE   */
         BAL   @14,GETSEQ                                          0850
*           IF SESTSEQ=ON THEN      /* IF SEQ BYTE WAS OBTAINED      */
         LA    @09,STAE906                                         0851
         TM    SESTSEQ(@09),B'00100000'                            0851
         BNO   @RF00851                                            0851
*             DO;                                                  0852
*                                                                  0852
*               /*****************************************************/
*               /*                                                   */
*               /* CHECK FOR DUPLICATE SCE ID. IF ID NOT PSECIFIED,  */
*               /* ONE IS GENERATED. IF A DUPLICATE OF THE ID        */
*               /* (SPECIFIED OR GENERATED) IS FOUND IN THE SCE      */
*               /* CHAIN, THEN 1) IF THE ID WAS SPECIFIED, A MESSAGE */
*               /* IS SENT TO THE ISSUER ASKING FOR ANOTHER WHICH    */
*               /* WILL BE CHECKED FOR DUPLICATE, 2) IF THE ID WAS   */
*               /* GENERATED, ANOTHER ONE IS GENERATED AND CHECKED.  */
*               /*                                                   */
*               /*****************************************************/
*                                                                  0853
*               DUPID=ON;           /* CHECK ID FOR DUPLICATE        */
         OI    DUPID,B'10000000'                                   0853
*               DO WHILE WAFIN=OFF& /* KEEP CHECKING FOR DUP UNITL   */
*                     DUPID=ON;     /* A UNIQUE ID IS FOUND OR THE 0854
*                                      ISSUER CANCELS THE CMD        */
         B     @DE00854                                            0854
@DL00854 DS    0H                                                  0855
*                 IF WAID=BLANKS THEN/* IF AN ID MUST BE GENERATED   */
         CLC   WAID(4),@CC03150                                    0855
         BNE   @RF00855                                            0855
*                   DO;                                            0856
*                     SHDRIDCT=SHDRIDCT+ONE;/* INCR ID CTR IN SHDR   */
         L     @09,CVTPTR                                          0857
         L     @09,CVTRTMS(,@09)                                   0857
         LA    @05,1                                               0857
         AH    @05,SHDRIDCT(,@09)                                  0857
         STH   @05,SHDRIDCT(,@09)                                  0857
*                     IF SHDRIDCT>NINES THEN/* IF CTR OVER MAX OF  0858
*                                      9999                          */
         CH    @05,@CH03113                                        0858
         BNH   @RF00858                                            0858
*                       SCEID=ZERO; /* THEN DO NOT FILL IN SCE       */
         LA    @09,STAE906                                         0859
         L     @09,SCEPTR(,@09)                                    0859
         SLR   @05,@05                                             0859
         ST    @05,SCEID(,@09)                                     0859
*                     ELSE                                         0860
*                       DO;                                        0860
         B     @RC00858                                            0860
@RF00858 DS    0H                                                  0861
*                         CVD(SHDRIDCT,TEMPID);/* CONVERT ID HEX TO
*                                      DEC                           */
         L     @09,CVTPTR                                          0861
         L     @09,CVTRTMS(,@09)                                   0861
         LH    @09,SHDRIDCT(,@09)                                  0861
         CVD   @09,@TS00001                                        0861
         MVC   TEMPID(4),@TS00001+4                                0861
*                         TEMPID=TEMPID×CHPOS;/* CHANGE SIGN C TO F  */
         OC    TEMPID(4),@CB03192                                  0862
*                         UNPK(SCEID,TEMPID);/* CONVERT TO CHAR INTO
*                                      SCE                           */
         LA    @09,STAE906                                         0863
         L     @09,SCEPTR(,@09)                                    0863
         UNPK  SCEID(4,@09),TEMPID(4)                              0863
*                       END;                                       0864
*                   END;                                           0865
*                 ELSE              /* IF AN ID WAS SPECIFIED        */
*                   SCEID=WAID;     /* FILL IN SCE                   */
         B     @RC00855                                            0866
@RF00855 LA    @09,STAE906                                         0866
         L     @09,SCEPTR(,@09)                                    0866
         MVC   SCEID(4,@09),WAID                                   0866
*                 IF SCEID=ZERO&    /* IF ID WAS GENERATED BUT WAS   */
*                     WAID=BLANKS THEN                             0867
@RC00855 LA    @09,STAE906                                         0867
         L     @09,SCEPTR(,@09)                                    0867
         ICM   @05,15,SCEID(@09)                                   0867
         BNZ   @RF00867                                            0867
         CLC   WAID(4),@CC03150                                    0867
         BE    @RT00867                                            0867
*                   ;               /* OVER MAX, SKIP SCE SEARCH     */
*                 ELSE              /* COMPARE THIS ID TO CHAINSCE   */
*                   DO;                                            0869
@RF00867 DS    0H                                                  0870
*                     TEMPID=SCEID; /* MOVE ID IN ORDER TO ADDR IT   */
         LA    @09,STAE906                                         0870
         L     @05,SCEPTR(,@09)                                    0870
         MVC   TEMPID(4),SCEID(@05)                                0870
*                     SCANSCE=SHDRFWD;/* ADDR OF FIRST SCE           */
         L     @05,CVTPTR                                          0871
         L     @05,CVTRTMS(,@05)                                   0871
         MVC   SCANSCE(4,@09),SHDRFWD(@05)                         0871
*                     RFY                                          0872
*                       SCE BASED(SCANSCE);                        0872
*                     DO WHILE SCANSCE^=ZERO&/* SCAN SCE CHAIN UNTIL */
*                           SCECBID=IDSCE&TEMPID^=SCEID;/* AT END OR
*                                      DUP FOUND                     */
         B     @DE00873                                            0873
@DL00873 DS    0H                                                  0874
*                       SCANSCE=SCEFWD;/* NEXT SCE ON THE CHAIN      */
         LA    @09,STAE906                                         0874
         L     @05,SCANSCE(,@09)                                   0874
         L     @05,SCEFWD(,@05)                                    0874
         ST    @05,SCANSCE(,@09)                                   0874
*                     END;                                         0875
@DE00873 LA    @09,STAE906                                         0875
         L     @09,SCANSCE(,@09)                                   0875
         LTR   @09,@09                                             0875
         BZ    @DC00873                                            0875
         CLC   SCECBID(4,@09),@CC03159                             0875
         BNE   @DC00873                                            0875
         CLC   TEMPID(4),SCEID(@09)                                0875
         BNE   @DL00873                                            0875
@DC00873 DS    0H                                                  0876
*                     IF SCANSCE=ZERO THEN/* IF END OF CHAIN REACHED */
         LA    @09,STAE906                                         0876
         ICM   @05,15,SCANSCE(@09)                                 0876
         BNZ   @RF00876                                            0876
*                       DUPID=OFF;  /* THEN SCE ID IS NOT A DUP      */
         NI    DUPID,B'01111111'                                   0877
*                     ELSE                                         0878
*                       IF SCECBID^=IDSCE THEN                     0878
         B     @RC00876                                            0878
@RF00876 LA    @09,STAE906                                         0878
         L     @09,SCANSCE(,@09)                                   0878
         CLC   SCECBID(4,@09),@CC03159                             0878
         BE    @RF00878                                            0878
*                         GEN(ABEND 102);                          0879
         ABEND 102
*                     RFY                                          0880
*                       SCE BASED(SCEPTR);                         0880
@RF00878 DS    0H                                                  0880
@RC00876 DS    0H                                                  0881
*                   END;                                           0881
*                 IF DUPID=ON THEN  /* IF A UNIQUE ID NOT FOUND      */
@RT00867 TM    DUPID,B'10000000'                                   0882
         BNO   @RF00882                                            0882
*                   IF WAID^=BLANKS×/* AND IF ID WAS SPECIFIED OR    */
*                       SCEID=ZERO THEN/* THE GENERATED ONE WAS > MAX*/
         CLC   WAID(4),@CC03150                                    0883
         BNE   @RT00883                                            0883
         LA    @09,STAE906                                         0883
         L     @09,SCEPTR(,@09)                                    0883
         ICM   @05,15,SCEID(@09)                                   0883
         BNZ   @RF00883                                            0883
@RT00883 DS    0H                                                  0884
*                     DO;                                          0884
*                       SHDRSEQ=ZEROB;/* RELEASE CMD-SEQ BYTE        */
         L     @09,CVTPTR                                          0885
         L     @09,CVTRTMS(,@09)                                   0885
         MVI   SHDRSEQ(@09),X'00'                                  0885
*                       SESTSEQ=OFF;/* IND CMD-SEQ BYTE NOT HELD     */
         LA    @09,STAE906                                         0886
         NI    SESTSEQ(@09),B'11011111'                            0886
*                       BADREPLY=ON;/* INIT CONTROL BIT              */
         OI    BADREPLY,B'10000000'                                0887
*                       DO WHILE WAFIN=OFF&/* ASK ISSUER FOR ANOTHER */
*                             BADREPLY=ON;/* ID UNITL OR REPLY       */
         B     @DE00888                                            0888
@DL00888 DS    0H                                                  0889
*                         REPLYBUF=BLANK;/* CLEAR BUF                */
         MVI   REPLYBUF+1,C' '                                     0889
         MVC   REPLYBUF+2(117),REPLYBUF+1                          0889
         MVI   REPLYBUF,C' '                                       0889
*                         CALL IEECB908(MSG729,WAUCMP,SCEID,MSGVAR2,
*                             REPLYBUF,ECB1);                      0890
         LA    @09,@CH00996                                        0890
         ST    @09,@AL00001                                        0890
         LA    @09,WAUCMP                                          0890
         ST    @09,@AL00001+4                                      0890
         LA    @09,STAE906                                         0890
         L     @09,SCEPTR(,@09)                                    0890
         LA    @09,SCEID(,@09)                                     0890
         ST    @09,@AL00001+8                                      0890
         LA    @09,MSGVAR2                                         0890
         ST    @09,@AL00001+12                                     0890
         LA    @09,REPLYBUF                                        0890
         ST    @09,@AL00001+16                                     0890
         LA    @09,ECB1                                            0890
         ST    @09,@AL00001+20                                     0890
         MVI   @AL00001+20,X'80'                                   0890
         L     @15,@CV02993                                        0890
         LA    @01,@AL00001                                        0890
         BALR  @14,@15                                             0890
*                         RFY                                      0891
*                           IN BASED(REPLY);                       0891
*                         RFY                                      0892
*                           R15 RSTD;                              0892
*                         IF R15^=ZERO THEN/* IF MSG MOD RC BAD      */
         LTR   R15,R15                                             0893
         BZ    @RF00893                                            0893
*                           WAFIN=ON;/* TERMINATE CMD, EXIT LOOP     */
         OI    WAFIN,B'00100000'                                   0894
*                         ELSE      /* MSG MOD RC OKAY               */
*                           IF IN(1:6)=CANCEL THEN                 0895
         B     @RC00893                                            0895
@RF00893 CLC   IN(6,REPLY),@CC03154                                0895
         BNE   @RF00895                                            0895
*                             DO;                                  0896
*                               CALL IEECB908(MSG756,WAUCMP,SLIP); 0897
         MVC   @AL00001(12),@AL00897                               0897
         LA    @14,WAUCMP                                          0897
         ST    @14,@AL00001+4                                      0897
         L     @15,@CV02993                                        0897
         LA    @01,@AL00001                                        0897
         BALR  @14,@15                                             0897
*                               WAFIN=ON;                          0898
         OI    WAFIN,B'00100000'                                   0898
*                             END;                                 0899
*                           ELSE                                   0900
*                             DO;                                  0900
         B     @RC00895                                            0900
@RF00895 DS    0H                                                  0901
*                               UNKNOWN8=IN(1:3);/* COPY FOR TABLE 0901
*                                      TEST                          */
         MVI   UNKNOWN8+3,C' '                                     0901
         MVC   UNKNOWN8+4(4),UNKNOWN8+3                            0901
         MVC   UNKNOWN8(3),IN(REPLY)                               0901
*                               IF UNKNOWN8=KTABKEY(KTIDX) THEN    0902
         L     @14,@CV02893                                        0902
         CLC   UNKNOWN8(8),KTABKEY+100(@14)                        0902
         BNE   @RF00902                                            0902
*                                 DO;/* IF ID= WAS SPECIFIED         */
*                                   DO I=FOUR TO EIGHT WHILE IN(I:I)^=
*                                        BLANK;                    0904
         LA    I,4                                                 0904
@DL00904 LR    @14,REPLY                                           0904
         ALR   @14,I                                               0904
         BCTR  @14,0                                               0904
         CLI   IN(@14),C' '                                        0904
         BE    @DC00904                                            0904
*                                   END;                           0905
         AH    I,@CH00063                                          0905
         CH    I,@CH00061                                          0905
         BNH   @DL00904                                            0905
@DC00904 DS    0H                                                  0906
*                                   IF I>FOUR&/* IF LENGTH OKAY      */
*                                       I<NINE THEN                0906
         CH    I,@CH00035                                          0906
         BNH   @RF00906                                            0906
         CH    I,@CH02322                                          0906
         BNL   @RF00906                                            0906
*                                    DO;                           0907
*                                     WAID=IN(4:I-1);/* PUT INTO WAID*/
         MVI   WAID+1,C' '                                         0908
         MVC   WAID+2(2),WAID+1                                    0908
         LR    @14,I                                               0908
         SH    @14,@CH00723                                        0908
         EX    @14,@SM03432                                        0908
*                                     BADREPLY=OFF;/* EXIT MSG LOOP  */
         NI    BADREPLY,B'01111111'                                0909
*                                    END;                          0910
*                                 END;                             0911
*                               ELSE                               0912
*                                 ; /* BADREPLY                      */
@RF00902 DS    0H                                                  0913
*                             END;                                 0913
@RC00902 DS    0H                                                  0914
*                         RFY                                      0914
*                           R15 UNRSTD;                            0914
@RC00895 DS    0H                                                  0914
@RC00893 DS    0H                                                  0915
*                         RFY                                      0915
*                           IN BASED(TEXTPTR);                     0915
*                       END;        /* END OF BADREPLY DO-WHILE      */
@DE00888 TM    WAFIN,B'00100000'                                   0916
         BNZ   @DC00888                                            0916
         TM    BADREPLY,B'10000000'                                0916
         BO    @DL00888                                            0916
@DC00888 DS    0H                                                  0917
*                       IF WAFIN=OFF THEN/* ISSUER SPECIFIED NEW ID  */
         TM    WAFIN,B'00100000'                                   0917
         BNZ   @RF00917                                            0917
*                         CALL GETSEQ;/* OBTAIN CMD-SEQ BYTE AGAIN   */
         BAL   @14,GETSEQ                                          0918
*                     END;                                         0919
@RF00917 DS    0H                                                  0920
*               END;                /* END OF DUPID DO-WHILE         */
*                                                                  0920
@RF00883 DS    0H                                                  0920
@RF00882 DS    0H                                                  0920
@DE00854 TM    WAFIN,B'00100000'                                   0920
         BNZ   @DC00854                                            0920
         TM    DUPID,B'10000000'                                   0920
         BO    @DL00854                                            0920
@DC00854 DS    0H                                                  0921
*               /*****************************************************/
*               /*                                                   */
*               /* IF NO ERROR OR CANCEL, ID IS UNIQUE, LOAD IEAVTSLP*/
*               /* IF NECCESARY                                      */
*               /*                                                   */
*               /*****************************************************/
*                                                                  0921
*               IF WAFIN=OFF&       /* IF CMD NOT BEING TERMINATED   */
*                   SCEDSABL=OFF&   /* IF NEW SCE IS ENABLED AND     */
*                   SHDRPFC=ZERO THEN/* IEAVTSLP IS NOT LOADED       */
         TM    WAFIN,B'00100000'                                   0921
         BNZ   @RF00921                                            0921
         LA    @09,STAE906                                         0921
         L     @09,SCEPTR(,@09)                                    0921
         TM    SCEDSABL(@09),B'10000000'                           0921
         BNZ   @RF00921                                            0921
         L     @09,CVTPTR                                          0921
         L     @09,CVTRTMS(,@09)                                   0921
         ICM   @05,15,SHDRPFC(@09)                                 0921
         BNZ   @RF00921                                            0921
*                 CALL GETVTSLP;    /* LOAD IEAVTSLP                 */
*                                                                  0922
         BAL   @14,GETVTSLP                                        0922
*               /*****************************************************/
*               /*                                                   */
*               /* IF NO ERROR OR CANCEL, ID IS UNIQUE, ADDSCE TO THE*/
*               /* CHAIN                                             */
*               /*                                                   */
*               /*****************************************************/
*                                                                  0923
*               IF WAFIN=OFF THEN   /* IF CMD NOT BEING TERMINATED   */
@RF00921 TM    WAFIN,B'00100000'                                   0923
         BNZ   @RF00923                                            0923
*                 DO;                                              0924
*                   IF SHDRBKWD->SCECBID^=IDSCE&/* VALIDATE POINTERS */
*                       SHDRBKWD->SHDRCBID^=IDSHDR THEN            0925
         L     @09,CVTPTR                                          0925
         L     @09,CVTRTMS(,@09)                                   0925
         L     @09,SHDRBKWD(,@09)                                  0925
         CLC   SCECBID(4,@09),@CC03159                             0925
         BE    @RF00925                                            0925
         CLC   SHDRCBID(4,@09),@CC03157                            0925
         BE    @RF00925                                            0925
*                     GEN(ABEND 102);                              0926
         ABEND 102
*                   SCEBKWD=SHDRBKWD;/* INIT BKWD TO PREV SCE/SHDR   */
@RF00925 LA    @09,STAE906                                         0927
         L     @05,SCEPTR(,@09)                                    0927
         L     @01,CVTPTR                                          0927
         L     @15,CVTRTMS(,@01)                                   0927
         L     @14,SHDRBKWD(,@15)                                  0927
         ST    @14,SCEBKWD(,@05)                                   0927
*                   SESTCHN=ON;     /* IND CHAINING STARTED          */
         OI    SESTCHN(@09),B'00000010'                            0928
*                   SHDRBKWD->SCEFWD=SCEPTR;/* POINT PREV FWD TO NEW
*                                      SCE                           */
         ST    @05,SCEFWD(,@14)                                    0929
*                   SHDRBKWD=SCEPTR;/* UPDATE SHDR TO POINT TO SCE   */
         ST    @05,SHDRBKWD(,@15)                                  0930
*                   SESTCHN=OFF;    /* IND CHAINING FINISHED         */
         NI    SESTCHN(@09),B'11111101'                            0931
*                   WAID=SCEID;     /* SAVE SCE'S ID                 */
         MVC   WAID(4),SCEID(@05)                                  0932
*                   SCEPTR=ZERO;    /* IND NOT TO FREE SCE ON ERR    */
         SLR   @05,@05                                             0933
         ST    @05,SCEPTR(,@09)                                    0933
*                   SHDRSEQ=ZERO;   /* RELEASE CMD-SEQ BYTE          */
         MVI   SHDRSEQ(@15),X'00'                                  0934
*                   SESTSEQ=OFF;    /* IND CMD-SEQ BYTE NOT HELD     */
         NI    SESTSEQ(@09),B'11011111'                            0935
*                   CALL IEECB908(MSG727S,WAUCMP,WAID);/* TRAP SET 0936
*                                      MSG                           */
         LA    @09,@CH00075                                        0936
         ST    @09,@AL00001                                        0936
         LA    @09,WAUCMP                                          0936
         ST    @09,@AL00001+4                                      0936
         LA    @09,WAID                                            0936
         ST    @09,@AL00001+8                                      0936
         MVI   @AL00001+8,X'80'                                    0936
         L     @15,@CV02993                                        0936
         LA    @01,@AL00001                                        0936
         BALR  @14,@15                                             0936
*                 END;                                             0937
*             END;                                                 0938
@RF00923 DS    0H                                                  0939
*         END;                                                     0939
@RF00851 DS    0H                                                  0940
*       IF WAFIN=ON THEN            /* IF ERROR OR CMD CANCELLED     */
@RF00848 TM    WAFIN,B'00100000'                                   0940
         BNO   @RF00940                                            0940
*         IF SCEPTR^=ZERO&          /* AND AN SCE EXISTS WHICH HAS   */
*             SCESCVA^=ZERO THEN    /* AN SCVA OFF OF IT             */
         SLR   @09,@09                                             0941
         LA    @05,STAE906                                         0941
         L     @05,SCEPTR(,@05)                                    0941
         CR    @05,@09                                             0941
         BE    @RF00941                                            0941
         C     @09,SCESCVA(,@05)                                   0941
         BE    @RF00941                                            0941
*           CALL FREESCVA;          /* FREE SCVA                     */
         BAL   @14,FREESCVA                                        0942
*         ELSE                                                     0943
*           ;                                                      0943
@RF00941 DS    0H                                                  0944
*       ELSE                                                       0944
*         WAFIN=ON;                 /* COMMAND FINISHED              */
         B     @RC00940                                            0944
@RF00940 OI    WAFIN,B'00100000'                                   0944
*     END;                                                         0945
*   END ENDP;                                                      0946
@EL00009 DS    0H                                                  0946
@EF00009 DS    0H                                                  0946
@ER00009 LM    @14,@12,@SA00009                                    0946
         BR    @14                                                 0946
*                                                                  0947
*/********************************************************************
**   THIS SEGMENT PROCESSES THE KEYWORD ERRTYP AND ABBREV ER       0947
**********************************************************************/
*                                                                  0947
*ERRTYP:                                                           0947
*   PROC;                                                          0947
ERRTYP   STM   @14,@12,@SA00010                                    0947
*   SCERRTYP=ZEROB;                 /* INIT ERRTYP IND IN SCE        */
         LA    @05,STAE906                                         0948
         L     @05,SCEPTR(,@05)                                    0948
         MVI   SCERRTYP(@05),X'00'                                 0948
*   CALL SCAN;                      /* SCAN OPERAND TO DELIMITER     */
         BAL   @14,SCAN                                            0949
*   IF INCHAR=LPAREN THEN           /* IF FIRST CHAR IS LEFT PAREN   */
         L     @05,TEXTPTR                                         0950
         CLI   INCHAR(@05),C'('                                    0950
         BNE   @RF00950                                            0950
*     DO;                                                          0951
*       WARESP=OFF;                 /* IND SYNTAX IS VALID           */
*       WAPAREN=ON;                 /* IND PAREN OPEN                */
         OI    WAPAREN,B'00000100'                                 0953
         NI    WARESP,B'11101111'                                  0953
*       TEXTPTR=TEXTPTR+ONE;        /* UPDATE PTR PAST LEFT PAREN    */
         AH    @05,@CH00063                                        0954
         ST    @05,TEXTPTR                                         0954
*     END;                                                         0955
*   DO WHILE WAFIN=OFF&WARESP=OFF&  /* LOOP TO PROCESS EACH OPTION   */
*         (SCERRTYP=ZEROB×          /* UNTIL INVALID SYNTAX IS       */
*         WAPAREN=ON);              /* FOUND OR END OF OPTION LIST   */
@RF00950 B     @DE00956                                            0956
@DL00956 DS    0H                                                  0957
*     CALL SCAN;                    /* SCAN OPERAND TO DELIMITER     */
         BAL   @14,SCAN                                            0957
*     IF WAFIN=OFF&                 /* IF CMD HAS NOT BEEN CANCELED  */
*         WARESP=OFF THEN           /* AND NO SYNTAX ERRORS FOUND    */
         TM    WAFIN,B'00110000'                                   0958
         BNZ   @RF00958                                            0958
*       IF DATALN>TWO&              /* CHECK LENGTH OF OPERAND       */
*           DATALN<EIGHT THEN                                      0959
         LH    @05,DATALN                                          0959
         CH    @05,@CH00075                                        0959
         BNH   @RF00959                                            0959
         CH    @05,@CH00061                                        0959
         BNL   @RF00959                                            0959
*         DO;                       /* AND IF OKAY                   */
*           UNKNOWN7=IN(1:DATALN);  /* COPY FOR TABLE COMPARISON     */
         MVI   UNKNOWN7+1,C' '                                     0961
         MVC   UNKNOWN7+2(5),UNKNOWN7+1                            0961
         LR    @15,@05                                             0961
         BCTR  @15,0                                               0961
         L     @01,TEXTPTR                                         0961
         EX    @15,@SM03434                                        0961
*           DO I=ERLNST(DATALN) TO ERLNFN(DATALN)/* SEARCH TABLE     */
*                 WHILE ERTOPTEN(I)^=/* IN ORDER TO IDENTIFY THIS    */
*                 UNKNOWN7;         /* OPERAND                       */
         SLA   @05,2                                               0962
         L     @15,@CV02919                                        0962
         AL    @15,@CF03415                                        0962
         LH    I,ERLNST(@05,@15)                                   0962
         B     @DE00962                                            0962
@DL00962 LR    @05,I                                               0962
         SLA   @05,3                                               0962
         L     @02,@CV02915                                        0962
         ALR   @02,@05                                             0962
         AL    @02,@CF03436                                        0962
         CLC   ERTOPTEN-1(7,@02),UNKNOWN7                          0962
         BE    @DC00962                                            0962
*           END;                                                   0963
         AH    I,@CH00063                                          0963
@DE00962 LH    @05,DATALN                                          0963
         SLA   @05,2                                               0963
         L     @02,@CV02919                                        0963
         BCTR  @02,0                                               0963
         BCTR  @02,0                                               0963
         CH    I,ERLNFN-2(@05,@02)                                 0963
         BNH   @DL00962                                            0963
@DC00962 DS    0H                                                  0964
*           IF I>ERLNFN(DATALN) THEN/* IF NO MATCH WAS MADE          */
         LH    @05,DATALN                                          0964
         SLA   @05,2                                               0964
         L     @02,@CV02919                                        0964
         BCTR  @02,0                                               0964
         BCTR  @02,0                                               0964
         CH    I,ERLNFN-2(@05,@02)                                 0964
         BNH   @RF00964                                            0964
*             WARESP=ON;            /* IND ERROR                     */
         OI    WARESP,B'00010000'                                  0965
*           ELSE                    /* IF OPERAND WAS IDENTIFIED     */
*             DO;                                                  0966
         B     @RC00964                                            0966
@RF00964 DS    0H                                                  0967
*               SCERRTYP=SCERRTYP×ERTOPTF(I);/* IND OPTION           */
         LA    @05,STAE906                                         0967
         L     @05,SCEPTR(,@05)                                    0967
         LR    @02,I                                               0967
         SLA   @02,3                                               0967
         L     @15,@CV02915                                        0967
         ALR   @15,@02                                             0967
         AL    @15,@CF03416                                        0967
         OC    SCERRTYP(1,@05),ERTOPTF(@15)                        0967
*               TEXTPTR=TEXTPTR+DATALN;/* UPDATE PTR TO NEXT         */
         LH    @05,DATALN                                          0968
         AL    @05,TEXTPTR                                         0968
         ST    @05,TEXTPTR                                         0968
*               IF EOL>TEXTPTR THEN /* IF NOT AT END-OF-LINE         */
         C     @05,EOL                                             0969
         BNL   @RF00969                                            0969
*                 IF INCHAR=COMMA×  /* CHECK FOR DELIMITER           */
*                     INCHAR=RPAREN THEN                           0970
         CLI   INCHAR(@05),C','                                    0970
         BE    @RT00970                                            0970
         CLI   INCHAR(@05),C')'                                    0970
         BNE   @RF00970                                            0970
@RT00970 DS    0H                                                  0971
*                   TEXTPTR=TEXTPTR+ONE;/* UPDATE PTR PAST IT        */
         LA    @05,1                                               0971
         AL    @05,TEXTPTR                                         0971
         ST    @05,TEXTPTR                                         0971
*             END;                                                 0972
*         END;                                                     0973
*       ELSE                        /* LENGTH NOT WITHIN LIMITS      */
*         IF DATALN=ZERO&           /* IF ONLY RIGHT PAREN,OKAY      */
*             INCHAR=RPAREN THEN    /* (POSSIBLE ON NEWLINE REPLY)   */
         B     @RC00959                                            0974
@RF00959 ICM   @05,3,DATALN                                        0974
         BNZ   @RF00974                                            0974
         L     @05,TEXTPTR                                         0974
         CLI   INCHAR(@05),C')'                                    0974
         BNE   @RF00974                                            0974
*           TEXTPTR=TEXTPTR+ONE;    /* UPDATE PTR PAST IT            */
         AH    @05,@CH00063                                        0975
         ST    @05,TEXTPTR                                         0975
*         ELSE                                                     0976
*           WARESP=ON;              /* IND INVALID SYNTAX            */
         B     @RC00974                                            0976
@RF00974 OI    WARESP,B'00010000'                                  0976
*   END;                            /* END OF DOWHILE                */
@RC00974 DS    0H                                                  0977
@RC00959 DS    0H                                                  0977
@RF00958 DS    0H                                                  0977
@DE00956 TM    WAFIN,B'00110000'                                   0977
         BNZ   @DC00956                                            0977
         LA    @05,STAE906                                         0977
         L     @05,SCEPTR(,@05)                                    0977
         CLI   SCERRTYP(@05),0                                     0977
         BE    @DL00956                                            0977
         TM    WAPAREN,B'00000100'                                 0977
         BO    @DL00956                                            0977
@DC00956 DS    0H                                                  0978
*   IF WARESP=ON THEN               /* IF SYNTAX IS INVALID          */
         TM    WARESP,B'00010000'                                  0978
         BNO   @RF00978                                            0978
*     SCERRTYP=ZEROB;               /* CLEAN UP FLAGS                */
         LA    @05,STAE906                                         0979
         L     @05,SCEPTR(,@05)                                    0979
         MVI   SCERRTYP(@05),X'00'                                 0979
*   END ERRTYP;                                                    0980
@EL00010 DS    0H                                                  0980
@EF00010 DS    0H                                                  0980
@ER00010 LM    @14,@12,@SA00010                                    0980
         BR    @14                                                 0980
*                                                                  0981
*/********************************************************************
*                                                                  0981
* FIXPAGE- THIS SEGMENT EITHER PGFIX'S OR PGFREE'S THE SLIP        0981
*          PROCESSOR(IEAVTSLP).                                    0981
*          THE LOCAL LOCK IS OBTAINED TO ALLOW BRANCH ENTRY TO THE 0981
*          PAGE FIX/FREE SERVICE ROUTINE(IEAVPSIB). THE BRANCH ENTRY
*          KEEPS THE PAGES FIXED EVEN AFTER THIS TASK GOES AWAY.   0981
*          SINCE THE LOCK IS AQUIRED AN FRR IS NEEDED TO FREE ANY  0981
*          PAGES THAT MIGHT HAVE BEEN FIXED AND TO FREE THE LOCAL LOCK.
*          SLIP PROCESSOR PAGES ARE FIXED OR FREED DEPENDING UPON THE
*          SETTING OF THE FIX BIT-                                 0981
*              ON = FIX                                            0981
*              OFF = FREE                                          0981
*          PGFREE IS ALSO DONE BY THE FRR SHOULD AN ERROR OCCUR(IE.
*          A 171 ABEND WHEN SOME BUT NOT ALL PAGES ARE FIXED). THE 0981
*          FRR WILL ALSO FREE THE LOCK THEN PERCOLATE TO ALLOW     0981
*          ESTAE ROUTINE CLEANUP BY IEECB906 AND IEECB860.         0981
*          NORMAL PATH WILL DELETE THE FRR AND FREE THE LOCK.      0981
*                                                                  0981
**********************************************************************/
*                                                                  0981
*FIXPAGE:                                                          0981
*   PROC;                                                          0981
FIXPAGE  STM   @14,@12,@SA00011                                    0981
*   RFY                                                            0982
*    (R2,                                                          0982
*     R3,                                                          0982
*     R5,                                                          0982
*     R6) RSTD;                                                    0982
*   GEN REFS(PSALITA,FLC);                                         0983
*                      /* GET THE LOCAL LOCK. */
GL SETLOCK OBTAIN,TYPE=LOCAL,REGS=USE,RELATED=FL,MODE=UNCOND
*   IF R15=0 THEN                   /* GET THE LOCK ?                */
         LTR   R15,R15                                             0984
         BNZ   @RF00984                                            0984
*     FRLOCK=ON;                    /* YES, IT MUST BE FREED.        */
         OI    FRLOCK,B'00010000'                                  0985
*   ELSE                            /* NO, DON'T TRY TO FREE THE   0986
*                                      LOCK.                         */
*     FRLOCK=OFF;                   /* TURN FREE THE LOCK INDICATOR. */
         B     @RC00984                                            0986
@RF00984 NI    FRLOCK,B'11101111'                                  0986
*   R2=ADDR(FIXFRR);                /* GET FRR ADDRESS.              */
@RC00984 LA    R2,FIXFRR                                           0987
*   GEN REFS(PSA,PSACSTK,PSALSFCC,FRRS,FRRSCURR,FRRSLAST,FRRSFRRA, 0988
*       FRRSENTR,FRRSPARM);                                        0988
*                              /* SET FRR */
    SETFRR A,FRRAD=(R2),PARMAD=(R3),WRKREGS=(R5,R6)
*   RFY                                                            0989
*     FRRWA BASED(R3);              /* BASE FRR ON R3 RETURNED FROM
*                                      SETFRR.                       */
*   RFY                                                            0990
*    (R2,                                                          0990
*     R5,                                                          0990
*     R6) UNRSTD;                                                  0990
*   STM(R2,R12,SAVREGS);            /* SAVE REGS FOR FRR.            */
         STM   R2,R12,SAVREGS                                      0991
*   REGSPTR=ADDR(SAVREGS);          /* POINT TO REGS FOR FRR.        */
         LA    @09,SAVREGS                                         0992
         ST    @09,REGSPTR(,R3)                                    0992
*   DOINFREE=OFF;                   /* NOT A PGFREE.                 */
         NI    DOINFREE(R3),B'01111111'                            0993
*   BADFIX=OFF;                     /* NOT A BADFIX YET.             */
         NI    BADFIX,B'10111111'                                  0994
*   PGSTRT=STRTAD;                  /* IEAVTSLP START ADDR.          */
         STCM  STRTAD,7,PGSTRT(R3)                                 0995
*   PGEND=ENDAD;                    /* IEAVTSLP END ADDR. + 1        */
         STCM  ENDAD,7,PGEND(R3)                                   0996
*   PGLONG=ON;                      /* DO A LONG FIX,NO STEALS     0997
*                                      PLEASE.                       */
         OI    PGLONG(R3),B'00000010'                              0997
*   LSTFLG=ON;                      /* LAST VSL INDICATOR.           */
         OI    LSTFLG(R3),B'10000000'                              0998
*   FRRCNTRL=OFF;                   /* NO FRR ENTRY SETUP PROCESSING.*/
         NI    FRRCNTRL,B'11011111'                                0999
*   IF FIX=ON THEN                  /* FIX REQUEST ?                 */
         TM    FIX,B'10000000'                                     1000
         BNO   @RF01000                                            1000
*     PGFIX=ON;                     /* YES, TELL IEAVPSIB.           */
         OI    PGFIX(R3),B'01000000'                               1001
*   ELSE                            /* NOT A FIX, ITS A FREE.        */
*     DO;                           /* DO PGFREE(FRR ALSO).          */
         B     @RC01000                                            1002
@RF01000 DS    0H                                                  1003
*       IF FRRCNTRL=OFF THEN                                       1003
         TM    FRRCNTRL,B'00100000'                                1003
         BZ    @RT01003                                            1003
*         ;                         /* BIT IS NEVER ON IT ONLY SKIPS
*                                      FRR                           */
*       ELSE                        /* SETUP PROCESSING FOR THE    1005
*                                      NORMAL PGFREE REQUESTS.       */
*         DO;                       /* FRR ONLY STUFF.               */
*FIXFRR:                                                           1006
*           ;                       /* GET HERE ONLY IF AN ERROR.    */
FIXFRR   DS    0H                                                  1007
*           RFY                                                    1007
*            (R1,                                                  1007
*             R14) RSTD;                                           1007
*           RFY                                                    1008
*             SDWA BASED(R1);                                      1008
*           LM(R2,R12,SDWAPARM->REGSPTR->SAVREGB);/* GET REGS BACK.  */
         L     @15,SDWAPARM(,R1)                                   1009
         L     @15,REGSPTR(,@15)                                   1009
         LM    R2,R12,SAVREGB(@15)                                 1009
*           RETADD=R14;             /* ERROR RETURN ADDRESS.         */
         ST    R14,RETADD                                          1010
*           RFY                                                    1011
*             R14 UNRSTD;                                          1011
*           SDWAMODN='IEECB905';    /* LOADMOD IN ERROR.             */
         MVC   SDWAMODN(8,R1),@CC03304                             1012
*           SDWACSCT='IEECB905';    /* CSECT IN ERROR.               */
         MVC   SDWACSCT(8,R1),@CC03304                             1013
*           SDWAREXN='IEECB905';    /* FRR IS IN CB905.              */
         MVC   SDWAREXN(8,R1),@CC03304                             1014
*           SDWAVRA(1:8)=VSL(1:8);  /* RECORD VSL                    */
         MVC   SDWAVRA(8,R1),VSL(R3)                               1015
*           SDWAHEX=ON;             /* PRINT IN HEX.                 */
         OI    SDWAHEX(R1),B'10000000'                             1016
*           SDWAURAL=8;             /* LENGTH OF USER DATA(VSL).     */
         MVI   SDWAURAL(R1),X'08'                                  1017
*           GEN REFS(SDWA,SDWARCDE,SDWAACF2,SDWARCRD,SDWACMPF,SDWAREQ);
*                                                           /*RECORD*/
       SETRP RC=0,RECORD=YES,DUMP=NO
*           IF PGFREE=ON THEN       /* IS IT A FREE REQUEST ?        */
         TM    PGFREE(R3),B'00100000'                              1019
         BNO   @RF01019                                            1019
*             DOINFREE=ON;          /* YES, DON'T TRY AGAIN IN FRR.  */
         OI    DOINFREE(R3),B'10000000'                            1020
*           FRLOCK=ON;              /* FRR IN CNTRL, DON'T RELEASE 1021
*                                      LOCK.                         */
@RF01019 DS    0H                                                  1022
*           FRRCNTRL=ON;            /* FRR IN CNTRL, DON'T RESTORE 1022
*                                      REGS.                         */
         OI    FRLOCK,B'00110000'                                  1022
*         END;                      /* END SPECIAL FRR SETUP.        */
*       PGFIX=OFF;                  /* ITS NOT A FIX.                */
@RT01003 DS    0H                                                  1025
*       PGFREE=ON;                  /* ITS A FREE.                   */
         OI    PGFREE(R3),B'00100000'                              1025
         NI    PGFIX(R3),B'10111111'                               1025
*     END;                          /* END PGFREE SETUP.             */
*   IF DOINFREE=OFF THEN            /* NOT IN FRR BECAUSE OF PGFREE
*                                      PROBLEMS,                     */
@RC01000 TM    DOINFREE(R3),B'10000000'                            1027
         BNZ   @RF01027                                            1027
*     DO;                           /* ATTEMPT TO FIX OR FREE.       */
*       RFY                                                        1029
*        (R0,                                                      1029
*         R2,                                                      1029
*         R4,                                                      1029
*         R6) RSTD;                                                1029
*       R0=ADDR(PGECB);             /* ECB IF WAIT IS NEEDE.         */
         L     @07,CVTPTR                                          1030
         L     @05,CVTRTMS(,@07)                                   1030
         LA    R0,PGECB(,@05)                                      1030
*       PGECB=0;                    /* CLEAR OUT BITS.               */
         SLR   @15,@15                                             1031
         ST    @15,PGECB(,@05)                                     1031
*       R1=VSL1;                    /* GET 1ST VSL WORD.             */
         L     R1,VSL1(,R3)                                        1032
*       R2=VSL2;                    /* GET 2ND VSL WORD.             */
         L     R2,VSL2(,R3)                                        1033
*       R6=R4;                      /* SAVE DATA REG.                */
         LR    R6,R4                                               1034
*       R4=0;                       /* SERVICE NOT TCB ASSOCIATED.   */
         SLR   R4,R4                                               1035
*       RFY                                                        1036
*         R15 RSTD;                                                1036
*       R15=CVTPTR->CVTPVTP->PVTPSIB;/* PAGE FIX/FREE ROUTINE.       */
         L     @07,CVTPVTP(,@07)                                   1037
         L     R15,PVTPSIB(,@07)                                   1037
*       GEN(BALR R14,R15);          /* USE THE PGFIX/FREE SERVICE.   */
         BALR R14,R15
*       R4=R6;                      /* GET DATA REG BACK.            */
         LR    R4,R6                                               1039
*       RFY                                                        1040
*         R4 UNRSTD;                                               1040
*       IF R15=8 THEN               /* NEED A WAIT ?                 */
         CH    R15,@CH00061                                        1041
         BNE   @RF01041                                            1041
*         DO;                       /* YES.                          */
*           RFY                                                    1043
*             TCB BASED(PSATOLD);                                  1043
*           RFY                                                    1044
*             RBBASIC BASED(TCBRBP);                               1044
*           PHALF1=UPPSW;           /* SETUP RBOPSW                  */
         L     @14,PSATOLD                                         1045
         L     @07,TCBRBP(,@14)                                    1045
         MVC   PHALF1(4,@07),@CB03075                              1045
*           PHALF2=ADDR(PGFXWAIT);  /* PUT RESUME ADDR IN            */
         LA    @05,PGFXWAIT                                        1046
         ST    @05,PHALF2(,@07)                                    1046
*           STM(R0,R15,TCBGRS);     /* SAVE REGS IN TCB              */
         STM   R0,R15,TCBGRS(@14)                                  1047
*           R1=ADDR(PGECB);         /* ADDR OF ECB FOR WAIT          */
         L     @14,CVTPTR                                          1048
         L     R1,CVTRTMS(,@14)                                    1048
         LA    R1,PGECB(,R1)                                       1048
*           R0=ONE;                 /* WAIT FOR ONE EVENT            */
         LA    R0,1                                                1049
*           R15=CVTVWAIT;           /* GET ADDR OF WAIT RTN          */
         L     R15,CVTVWAIT(,@14)                                  1050
*           GEN(BALR R14,R15);                                     1051
         BALR R14,R15
*PGFXWAIT:                                                         1052
*           ;                                                      1052
PGFXWAIT DS    0H                                                  1053
*           FRLOCK=OFF;             /* IND LOCK FREED BY WAIT        */
         NI    FRLOCK,B'11101111'                                  1053
*           IF PGCOMP^=0 THEN       /* FIX/FREE OK ?                 */
         L     @14,CVTPTR                                          1054
         L     @14,CVTRTMS(,@14)                                   1054
         ICM   @07,7,PGCOMP(@14)                                   1054
         BZ    @RF01054                                            1054
*             BADFIX=ON;            /* NO, END COMMAND/GIVE MSG.     */
         OI    BADFIX,B'01000000'                                  1055
*         END;                      /* END NEED WAIT.                */
*       ELSE                        /* NO WAIT NEEDED.               */
*         IF R15^=0 THEN            /* WAS THE FIX/FREE OK ?         */
         B     @RC01041                                            1057
@RF01041 LTR   R15,R15                                             1057
         BZ    @RF01057                                            1057
*           BADFIX=ON;              /* NO IT WAS NOT.                */
         OI    BADFIX,B'01000000'                                  1058
*     END;                          /* END PGFIX/FREE.               */
@RF01057 DS    0H                                                  1059
@RC01041 DS    0H                                                  1060
*   IF FRRCNTRL=OFF THEN            /* NORMAL CALL(NOT IN THE FRR) ? */
@RF01027 TM    FRRCNTRL,B'00100000'                                1060
         BNZ   @RF01060                                            1060
*     DO;                                                          1061
*       GEN REFS(PSA,PSACSTK,FRRS,FRRSCURR,FRRSELEN,FRRSEMP);      1062
*                                                     /*YES,DEL FRR*/
        SETFRR D,WRKREGS=(R5,R6)
*     END;                                                         1063
*   IF FRLOCK=ON THEN               /* DID WE GET THE LOCK ?         */
@RF01060 TM    FRLOCK,B'00010000'                                  1064
         BNO   @RF01064                                            1064
*     DO;                           /* YES, BETTER RELEASE IT.       */
*       GEN REFS(PSALITA,FLC);                                     1066
*                       /* FREE THE LOCK. */
FL SETLOCK RELEASE,TYPE=LOCAL,REGS=USE,RELATED=GL
*     END;                                                         1067
*   IF FRRCNTRL=ON THEN             /* IN THE FRR                    */
@RF01064 TM    FRRCNTRL,B'00100000'                                1068
         BNO   @RF01068                                            1068
*     DO;                                                          1069
*       R14=RETADD;                 /* GET RETURN ADDRESS.           */
         L     R14,RETADD                                          1070
*       GEN(BR R14);                /* RETURN TO RTM OR IEECB905.    */
         BR R14
*     END;                                                         1072
*   RFY                                                            1073
*    (R0,                                                          1073
*     R1,                                                          1073
*     R2,                                                          1073
*     R3,                                                          1073
*     R6,                                                          1073
*     R15) UNRSTD;                                                 1073
*   END FIXPAGE;                    /* END SUBROUTINE.               */
@EL00011 DS    0H                                                  1074
@EF00011 DS    0H                                                  1074
@ER00011 LM    @14,@12,@SA00011                                    1074
         BR    @14                                                 1074
*                                                                  1075
*/********************************************************************
**   THIS SEGMENT IS CALLED TO FREE THE CSCB STORAGE VIA MGCR MACRO.
**********************************************************************/
*                                                                  1075
*FREECSCB:                                                         1075
*   PROC;                                                          1075
FREECSCB STM   @14,@12,@SA00012                                    1075
*   CHFC=ON;                        /* IND FREE CSCB                 */
         LA    @05,STAE906                                         1076
         L     @05,CSCBPTR(,@05)                                   1076
         OI    CHFC(@05),B'00000010'                               1076
*   RFY                                                            1077
*     R1 RSTD;                                                     1077
*   R1=CSCBPTR;                     /* INIT REG 1 WITH CSCB ADDR     */
         LR    R1,@05                                              1078
*   GEN(MGCR (1),CHAIN);            /* FREE CSCB                     */
         MGCR (1),CHAIN
*   RFY                                                            1080
*     R1 UNRSTD;                                                   1080
*   CSCBPTR=ZERO;                   /* IND CSCB FREED                */
         LA    @05,STAE906                                         1081
         SLR   @15,@15                                             1081
         ST    @15,CSCBPTR(,@05)                                   1081
*   END FREECSCB;                                                  1082
@EL00012 DS    0H                                                  1082
@EF00012 DS    0H                                                  1082
@ER00012 LM    @14,@12,@SA00012                                    1082
         BR    @14                                                 1082
*                                                                  1083
*/********************************************************************
* * FREE THE SCE STORAGE POINTED TO BY SCEPTR (SUBPOOL=245)        1083
* ********************************************************************/
*                                                                  1083
*FREESCE:                                                          1083
*   PROC;                                                          1083
FREESCE  STM   @14,@12,@SA00013                                    1083
*   RFY                                                            1084
*    (R0,                                                          1084
*     R1) RSTD;                                                    1084
*   R0=SIZESCE×SP245;               /* SETUP SIZE AND SUBPOOL        */
         L     R0,SIZESCE                                          1085
         O     R0,@CF03117                                         1085
*   R1=SCEPTR;                      /* ADDRESS OF SCE                */
         LA    @05,STAE906                                         1086
         L     R1,SCEPTR(,@05)                                     1086
*   GEN(FREEMAIN R,LV=(0),A=(1));   /* FREE THE SCE                  */
         FREEMAIN R,LV=(0),A=(1)
*   RFY                                                            1088
*    (R0,                                                          1088
*     R1) UNRSTD;                                                  1088
*   END FREESCE;                                                   1089
@EL00013 DS    0H                                                  1089
@EF00013 DS    0H                                                  1089
@ER00013 LM    @14,@12,@SA00013                                    1089
         BR    @14                                                 1089
*                                                                  1090
*/********************************************************************
**    FREE THE SCVA STORAGE POINTED TO OUT OF THE SCE (SUBPOOL=245)
**********************************************************************/
*                                                                  1090
*FREESCVA:                                                         1090
*   PROC;                                                          1090
FREESCVA STM   @14,@12,@SA00014                                    1090
*   RFY                                                            1091
*    (R0,                                                          1091
*     R1) RSTD;                                                    1091
*   R0=SCVALN;                      /* LENGTH OF SCVA                */
         LA    @05,STAE906                                         1092
         L     @05,SCEPTR(,@05)                                    1092
         L     @05,SCESCVA(,@05)                                   1092
         LH    R0,SCVALN(,@05)                                     1092
*   R0=R0×SP245;                    /* INDICATE SUBPOOL              */
         O     R0,@CF03117                                         1093
*   R1=SCESCVA;                     /* ADDR OF SCVA                  */
         LR    R1,@05                                              1094
*   GEN(FREEMAIN R,LV=(0),A=(1));   /* FREE SCVA                     */
         FREEMAIN R,LV=(0),A=(1)
*   RFY                                                            1096
*    (R0,                                                          1096
*     R1) UNRSTD;                                                  1096
*   END FREESCVA;                                                  1097
@EL00014 DS    0H                                                  1097
@EF00014 DS    0H                                                  1097
@ER00014 LM    @14,@12,@SA00014                                    1097
         BR    @14                                                 1097
*                                                                  1098
*/********************************************************************
**    ATTEMPT TO OBTAIN THE COMMAND-SEQUENCE BYTE LOCATED IN THE   1098
**    SHDR (SHDRSEQ). THE TS INSTRUCTION IS USED TO OBTAIN IT. IF THE
**    FIRST ATTEMPT FAILS, WAIT FOR A SHORT INTERVAL OF TIME (STIMER)
**    AND ATTEMPT AGAIN. AFTER THE FIFTH FAILURE, WRITE A MESSAGE  1098
**    (IEE738D) ASKING THE ISSUER WHETHER HE WISHES TO MAKE FIVE MORE
**    ATTEMPTS FOR THE SEQ BYTE OR CANCEL THIS COMMAND AND INTERPRET
**    HIS REPLY.                                                   1098
**********************************************************************/
*                                                                  1098
*GETSEQ:                                                           1098
*   PROC;                                                          1098
GETSEQ   STM   @14,@12,@SA00015                                    1098
*   SESTSEQ=OFF;                    /* INIT SUCCESS INDICATOR        */
         LA    @09,STAE906                                         1099
         NI    SESTSEQ(@09),B'11011111'                            1099
*   DO WHILE WAFIN=OFF&             /* ATTEMPT TO OBTAIN THE BYTE    */
*         SESTSEQ=OFF;              /* AS MANY TIMES AS REQUESTED    */
         B     @DE01100                                            1100
@DL01100 DS    0H                                                  1101
*     DO I=ONE TO FIVE              /* ATTEMPT TS A MAX OF 5 TIMES   */
*           WHILE SESTSEQ=OFF;      /* EXIT ON SUCCESS               */
         LA    I,1                                                 1101
@DL01101 LA    @09,STAE906                                         1101
         TM    SESTSEQ(@09),B'00100000'                            1101
         BNZ   @DC01101                                            1101
*       SESTSEQ=ON;                 /* RESET FLAG PRIOR TO TS        */
         OI    SESTSEQ(@09),B'00100000'                            1102
*       TS(SHDRSEQ);                /* ATTEMPT TO OBTAIN CMD-SEQ     */
         L     @09,CVTPTR                                          1103
         L     @09,CVTRTMS(,@09)                                   1103
         TS    SHDRSEQ(@09)                                        1103
*       BC(8,EXIT);                 /* IF SUCCESSFUL, EXIT LOOP      */
         BC    8,EXIT                                              1104
*       SESTSEQ=OFF;                /* INDICATE NOT SUCCESSFUL       */
         LA    @09,STAE906                                         1105
         NI    SESTSEQ(@09),B'11011111'                            1105
*       IF I<FIVE THEN              /* WAIT BETWEEN EACH ATTEMPT     */
         CH    I,@CH00723                                          1106
         BNL   @RF01106                                            1106
*         DO;                                                      1107
*           GEN REFS(PAUSE);                                       1108
              STIMER WAIT,BINTVL=PAUSE
*         END;                                                     1109
*EXIT:                                                             1110
*     END;                                                         1110
@RF01106 DS    0H                                                  1110
EXIT     AH    I,@CH00063                                          1110
         CH    I,@CH00723                                          1110
         BNH   @DL01101                                            1110
@DC01101 DS    0H                                                  1111
*     IF SESTSEQ=OFF THEN           /* IF SEQ BYTE NOT OBTAINED      */
*                                                                  1111
         LA    @09,STAE906                                         1111
         TM    SESTSEQ(@09),B'00100000'                            1111
         BNZ   @RF01111                                            1111
*       /*************************************************************/
*       /*                                                           */
*       /* IF CMD-SEQ BYTE WAS NOT OBTAINED, WRITE THE MESSAGE TO THE*/
*       /* USER ASKING HIM WHETHER HE WISHES TO RETRY OR CANCEL      */
*       /*                                                           */
*       /*************************************************************/
*                                                                  1112
*       CALL RETRYMSG;                                             1112
         BAL   @14,RETRYMSG                                        1112
*   END;                            /* END OF SUCCIND DOWHILE        */
@RF01111 DS    0H                                                  1113
@DE01100 TM    WAFIN,B'00100000'                                   1113
         BNZ   @DC01100                                            1113
         LA    @09,STAE906                                         1113
         TM    SESTSEQ(@09),B'00100000'                            1113
         BZ    @DL01100                                            1113
@DC01100 DS    0H                                                  1114
*   END GETSEQ;                                                    1114
@EL00015 DS    0H                                                  1114
@EF00015 DS    0H                                                  1114
@ER00015 LM    @14,@12,@SA00015                                    1114
         BR    @14                                                 1114
*                                                                  1115
*/********************************************************************
** LOAD IEAVTSLP AND PGFIX IT                                      1115
**********************************************************************/
*                                                                  1115
*GETVTSLP:                                                         1115
*   PROC;                                                          1115
GETVTSLP STM   @14,@12,@SA00016                                    1115
*   GEN(LOAD EP=IEAVTSLP);          /* LOAD SLIP PROCESSOR           */
         LOAD EP=IEAVTSLP
*   RFY                                                            1117
*    (R0,                                                          1117
*     R1,                                                          1117
*     R6) RSTD;                                                    1117
*   SAVPROC=R0;                     /* SAVE ADDR OF IEAVTSLP         */
         LR    SAVPROC,R0                                          1118
*   R6=R1&MASKHI;                   /* LOAD REG6 WITH MOD LENGTH     */
         LR    R6,R1                                               1119
         N     R6,@CF03120                                         1119
*   R6=R6*EIGHT;                    /* CONVERT DOUBLEWORD TO BYTE    */
         SLL   R6,3                                                1120
*   ENDAD=R0+R6;                    /* CALC ENDING ADDR OF MOD       */
         LR    ENDAD,R0                                            1121
         ALR   ENDAD,R6                                            1121
*   STRTAD=R0;                      /* MOD ADDRESS                   */
         LR    STRTAD,R0                                           1122
*   GEN(DELETE EP=IEAVTSLP);        /* DEREMENT USE COUNT.           */
         DELETE EP=IEAVTSLP
*   FIX=ON;                         /* PAGE FIX IEAVTSLP.            */
         OI    FIX,B'10000000'                                     1124
*   CALL FIXPAGE;                   /* SUBROUTINE FOR PAGE FIX.      */
         BAL   @14,FIXPAGE                                         1125
*   IF BADFIX=OFF THEN              /* IF FIX OKAY                   */
         TM    BADFIX,B'01000000'                                  1126
         BNZ   @RF01126                                            1126
*     DO;                                                          1127
*       SHDRPROC=SAVPROC;           /* PUT IEAVTSLP ADDR INTO SHDR   */
         L     @07,CVTPTR                                          1128
         L     @07,CVTRTMS(,@07)                                   1128
         ST    SAVPROC,SHDRPROC(,@07)                              1128
*       SHDRPFC=ONE;                /* IND SUCC                      */
         MVC   SHDRPFC(4,@07),@CF00063                             1129
*     END;                                                         1130
*   ELSE                                                           1131
*     DO;                                                          1131
         B     @RC01126                                            1131
@RF01126 DS    0H                                                  1132
*       WAFIN=ON;                   /* TERMINATE THE COMMAND         */
         OI    WAFIN,B'00100000'                                   1132
*       RFY                                                        1133
*         XSAPTR RSTD;                                             1133
*       XSAPTR=ADDR(MSGBUF);        /* XSA IS PARM TO IEE0503D       */
         LA    XSAPTR,MSGBUF                                       1134
*       XAE=MSG328;                 /* INFORM USER RESOURCE UNAVAIL  */
         MVI   XAE(XSAPTR),X'3A'                                   1135
*       CALL MSGMOD05;                                             1136
         BAL   @14,MSGMOD05                                        1136
*     END;                                                         1137
*   RFY                                                            1138
*     R15 UNRSTD;                                                  1138
*   END GETVTSLP;                                                  1139
@EL00016 DS    0H                                                  1139
@EF00016 DS    0H                                                  1139
@ER00016 LM    @14,@12,@SA00016                                    1139
         BR    @14                                                 1139
*                                                                  1140
*/********************************************************************
** THIS SEGMENT PROCESSES THE ID KEYWORD. THE ID IS FROM ONE       1140
** TO FOUR ALPHANUMERIC CHARS.                                     1140
**********************************************************************/
*                                                                  1140
*ID:                                                               1140
*   PROC;                                                          1140
ID       STM   @14,@12,@SA00017                                    1140
*   CALL SCAN;                      /* SCAN TO NEXT DELIMITER        */
         BAL   @14,SCAN                                            1141
*   IF WAFIN=OFF THEN               /* IF CMD HAS NOT BEEN CANCELED  */
         TM    WAFIN,B'00100000'                                   1142
         BNZ   @RF01142                                            1142
*     IF WARESP=OFF&                /* IF NO ERROR                   */
*         DATALN>ZERO&              /* CHECK LENGTH OF ID (1 TO 4)   */
*         DATALN<FIVE THEN                                         1143
         TM    WARESP,B'00010000'                                  1143
         BNZ   @RF01143                                            1143
         LH    @07,DATALN                                          1143
         LTR   @07,@07                                             1143
         BNP   @RF01143                                            1143
         CH    @07,@CH00723                                        1143
         BNL   @RF01143                                            1143
*       DO;                                                        1144
*         WAID=IN(1:DATALN);        /* IF LENGTH OKAY,MOVE INOT WA   */
         MVI   WAID+1,C' '                                         1145
         MVC   WAID+2(2),WAID+1                                    1145
         LR    @05,@07                                             1145
         BCTR  @05,0                                               1145
         L     @03,TEXTPTR                                         1145
         EX    @05,@SM03438                                        1145
*         TEXTPTR=TEXTPTR+DATALN;   /* UPDATE PTR TO DELIMITER       */
         ALR   @03,@07                                             1146
         ST    @03,TEXTPTR                                         1146
*         WAALLIND=OFF;             /* FOR MOD, ENSURE ALL IND OFF   */
         NI    WAALLIND,B'11111110'                                1147
*       END;                                                       1148
*     ELSE                          /* IF SYNTAX IS INVALID          */
*       WARESP=ON;                  /* SETUP VARIABLE AREA FOR MSG   */
         B     @RC01143                                            1149
@RF01143 OI    WARESP,B'00010000'                                  1149
*   END ID;                                                        1150
@EL00017 DS    0H                                                  1150
@EF00017 DS    0H                                                  1150
@ER00017 LM    @14,@12,@SA00017                                    1150
         BR    @14                                                 1150
*                                                                  1151
*/********************************************************************
**   THIS SEGMNET PROCESSES THE KEYWORD JOBNAME AND IT'S ABBREV J. 1151
**   THIS KEYWORD IS FOLLOWED BY A 1 TO 8 CHARACTER JOBNAME.       1151
**********************************************************************/
*                                                                  1151
*JOBNAME:                                                          1151
*   PROC;                                                          1151
JOBNAME  STM   @14,@12,@SA00018                                    1151
*   CALL SCAN;                      /* SCAN OPERAND TO NEXT DELIM    */
         BAL   @14,SCAN                                            1152
*   IF WAFIN=OFF THEN               /* IF CMD HAS NOT BEEN CANCELED  */
         TM    WAFIN,B'00100000'                                   1153
         BNZ   @RF01153                                            1153
*     DO;                                                          1154
*       IF WARESP=OFF THEN          /* IF SCAN FOUND SYNTAX OKAY     */
         TM    WARESP,B'00010000'                                  1155
         BNZ   @RF01155                                            1155
*         IF DATALN>ZERO&           /* CHECK IF LENGTH OKAY          */
*             DATALN<NINE THEN                                     1156
         LH    @07,DATALN                                          1156
         LTR   @07,@07                                             1156
         BNP   @RF01156                                            1156
         LA    @05,9                                               1156
         CR    @07,@05                                             1156
         BNL   @RF01156                                            1156
*           DO;                     /* IF SO THEN                    */
*             IF WAJOBID=ZEROB THEN /* IF JOBNAME NOT PREVIOUSLY     */
         CLI   WAJOBID,0                                           1158
         BNE   @RF01158                                            1158
*               DO;                 /* STORED IN WA                  */
*                 WAJOBID=SCVIDJN;  /* INIT ENTRY ID                 */
         MVI   WAJOBID,X'04'                                       1160
*                 WASCVALN=WASCVALN+LENGTH(SCVAJOBN);/* ADD IN LNGTH */
         AH    @05,WASCVALN                                        1161
         STH   @05,WASCVALN                                        1161
*               END;                                               1162
*             WAJOBD=IN(1:DATALN);  /* COPY JOBNAME INTO WA          */
@RF01158 MVI   WAJOBD+1,C' '                                       1163
         MVC   WAJOBD+2(6),WAJOBD+1                                1163
         LH    @07,DATALN                                          1163
         LR    @05,@07                                             1163
         BCTR  @05,0                                               1163
         L     @03,TEXTPTR                                         1163
         EX    @05,@SM03441                                        1163
*             TEXTPTR=TEXTPTR+DATALN;/* UPDATE PTR PAST OPERAND      */
         ALR   @03,@07                                             1164
         ST    @03,TEXTPTR                                         1164
*           END;                                                   1165
*         ELSE                      /* IF LENGTH IS INVALID          */
*           WARESP=ON;              /* IND SYNTAX IS INVALID         */
         B     @RC01156                                            1166
@RF01156 OI    WARESP,B'00010000'                                  1166
*     END;                                                         1167
*   END JOBNAME;                                                   1168
@EL00018 DS    0H                                                  1168
@EF00018 DS    0H                                                  1168
@ER00018 LM    @14,@12,@SA00018                                    1168
         BR    @14                                                 1168
*                                                                  1169
*/********************************************************************
* *  THIS SEGMENT PROCESSES THE KWYWORD JSPGM AND ABBREV JS.       1169
* ********************************************************************/
*                                                                  1169
*JSPGM:                                                            1169
*   PROC;                                                          1169
JSPGM    STM   @14,@12,@SA00019                                    1169
*   CALL SCAN;                      /* SCAN OPERAND TO NEXT DELIM    */
         BAL   @14,SCAN                                            1170
*   IF WAFIN=OFF THEN               /* IF CMD HAS NOT BEEN CANCELED  */
         TM    WAFIN,B'00100000'                                   1171
         BNZ   @RF01171                                            1171
*     DO;                                                          1172
*       IF WARESP=OFF THEN          /* IF SCAN FOUND SYNTAX OKAY     */
         TM    WARESP,B'00010000'                                  1173
         BNZ   @RF01173                                            1173
*         IF DATALN>ZERO&           /* CHECK IF LENGTH OKAY          */
*             DATALN<NINE THEN                                     1174
         LH    @07,DATALN                                          1174
         LTR   @07,@07                                             1174
         BNP   @RF01174                                            1174
         LA    @05,9                                               1174
         CR    @07,@05                                             1174
         BNL   @RF01174                                            1174
*           DO;                     /* IF SO THEN                    */
*             IF WAJSPID=ZEROB THEN /* IF JSPGM NOT PREVIOUSLY       */
         CLI   WAJSPID,0                                           1176
         BNE   @RF01176                                            1176
*               DO;                 /* STORED IN WA                  */
*                 WAJSPID=SCVIDJS;  /* INIT ENTRY ID                 */
         MVI   WAJSPID,X'05'                                       1178
*                 WASCVALN=WASCVALN+LENGTH(SCVAJOBN);/* ADD IN LNGTH */
         AH    @05,WASCVALN                                        1179
         STH   @05,WASCVALN                                        1179
*               END;                                               1180
*             WAJSPD=IN(1:DATALN);  /* COPY JSPGM INTO WA            */
@RF01176 MVI   WAJSPD+1,C' '                                       1181
         MVC   WAJSPD+2(6),WAJSPD+1                                1181
         LH    @07,DATALN                                          1181
         LR    @05,@07                                             1181
         BCTR  @05,0                                               1181
         L     @03,TEXTPTR                                         1181
         EX    @05,@SM03443                                        1181
*             TEXTPTR=TEXTPTR+DATALN;/* UPDATE PTR PAST OPERAND      */
         ALR   @03,@07                                             1182
         ST    @03,TEXTPTR                                         1182
*           END;                                                   1183
*         ELSE                      /* IF LENGTH IS INVALID          */
*           WARESP=ON;              /* IND SYNTAX IS INVALID         */
         B     @RC01174                                            1184
@RF01174 OI    WARESP,B'00010000'                                  1184
*     END;                                                         1185
*   END JSPGM;                                                     1186
@EL00019 DS    0H                                                  1186
@EF00019 DS    0H                                                  1186
@ER00019 LM    @14,@12,@SA00019                                    1186
         BR    @14                                                 1186
*                                                                  1187
*/********************************************************************
**    THIS SEGMENT PROCESSES THE KEYWORD LPAMOD AND ABBREV L.      1187
**********************************************************************/
*                                                                  1187
*LPAMOD:                                                           1187
*   PROC;                                                          1187
LPAMOD   STM   @14,@12,@SA00020                                    1187
*   IF WAADDRID=SCVIDPVT×           /* IF PVTMOD OR LPAMOD WAS       */
*       WAADDRID=SCVIDLPA THEN      /* SPECIFIED BEFORE              */
         CLI   WAADDRID,6                                          1188
         BE    @RT01188                                            1188
         CLI   WAADDRID,7                                          1188
         BNE   @RF01188                                            1188
@RT01188 DS    0H                                                  1189
*     WASCVALN=WASCVALN-LENGTH(SCVAMOD);/* SUBTRACT LENGTH           */
         LH    @07,WASCVALN                                        1189
         SH    @07,@CH02963                                        1189
         STH   @07,WASCVALN                                        1189
*   ELSE                                                           1190
*     IF WAADDRID=SCVIDAD THEN      /* NO, WAS ADDRESS SPECIFIED     */
         B     @RC01188                                            1190
@RF01188 CLI   WAADDRID,8                                          1190
         BNE   @RF01190                                            1190
*       WASCVALN=WASCVALN-LENGTH(SCVAADDR);/* YES,SUBT LN            */
         LH    @07,WASCVALN                                        1191
         SH    @07,@CH02322                                        1191
         STH   @07,WASCVALN                                        1191
*   WAADDRID=ZERO;                  /* CLEAR ENTRY ID                */
@RF01190 DS    0H                                                  1192
@RC01188 MVI   WAADDRID,X'00'                                      1192
*   CALL SCAN;                      /* SCAN OPERAND TO DELIMITER     */
         BAL   @14,SCAN                                            1193
*   IF INCHAR=LPAREN THEN           /* IF FIRST CHAR IS LEFT PAREN   */
         L     @07,TEXTPTR                                         1194
         CLI   INCHAR(@07),C'('                                    1194
         BNE   @RF01194                                            1194
*     DO;                                                          1195
*       WARESP=OFF;                 /* IND SYNTAX IS VALID           */
*       WAPAREN=ON;                 /* IND PAREN OPEN                */
         OI    WAPAREN,B'00000100'                                 1197
         NI    WARESP,B'11101111'                                  1197
*       TEXTPTR=TEXTPTR+ONE;        /* UPDATE PTR PAST LEFT PAREN    */
         AL    @07,@CF00063                                        1198
         ST    @07,TEXTPTR                                         1198
*       CALL SCAN;                  /* SCAN OPERAND TO DELIMITER     */
         BAL   @14,SCAN                                            1199
*     END;                                                         1200
*                                                                  1200
*   /*****************************************************************/
*   /*                                                               */
*   /* PROCESS MODULE NAME                                           */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1201
*   IF WAFIN=OFF&                   /* IF CMD HAS NOT BEEN CANCELED  */
*       WARESP=OFF THEN             /* AND NO SYNTAX ERRORS FOUND    */
@RF01194 TM    WAFIN,B'00110000'                                   1201
         BNZ   @RF01201                                            1201
*     IF DATALN>ZERO&               /* IF LENGTH OKAY                */
*         DATALN<NINE THEN                                         1202
         LH    @07,DATALN                                          1202
         LTR   @07,@07                                             1202
         BNP   @RF01202                                            1202
         CH    @07,@CH02322                                        1202
         BNL   @RF01202                                            1202
*       DO;                                                        1203
*         WASCVALN=WASCVALN+LENGTH(SCVAMOD);/* ADD LPAENTRY LENGTH   */
         LH    @05,WASCVALN                                        1204
         LA    @05,17(,@05)                                        1204
         STH   @05,WASCVALN                                        1204
*         WAADDRID=SCVIDLPA;        /* IND ENTRY IS LPAMOD           */
         MVI   WAADDRID,X'07'                                      1205
*         WAPVTLPA=IN(1:DATALN);    /* COPY MODULE NAME INTO WA      */
         MVI   WAPVTLPA+1,C' '                                     1206
         MVC   WAPVTLPA+2(6),WAPVTLPA+1                            1206
         BCTR  @07,0                                               1206
         L     @05,TEXTPTR                                         1206
         EX    @07,@SM03445                                        1206
*/********************************************************************
**   SCAN THE LINK PACK AREA DIRECTORIES FOR THE SPECIFIED MODULE  1207
**   UTILIZING THE TWO SEARCH ROUTINES IN IEAVLK00 POINTED TO BY   1207
**   THE CVT (CVTQCDSR - CDE SEARCH, CVTLPDSR - LPDE SEARCH).      1207
**********************************************************************/
*                                                                  1207
*         DO;                                                      1207
*           RFY                                                    1208
*            (R0,                                                  1208
*             R1,                                                  1208
*             R3,                                                  1208
*             R5,                                                  1208
*             R8,                                                  1208
*             R9,                                                  1208
*             R14,                                                 1208
*             R15) RSTD;                                           1208
*           R3=CVTPTR;              /* CVT ADDRESS                   */
         L     @07,CVTPTR                                          1209
         LR    R3,@07                                              1209
*           R5=PSATOLD;             /* POINT TO TCB                  */
         L     R5,PSATOLD                                          1210
*           R9=ADDR(WAPVTLPA);      /* ADDR OF MODULE NAME           */
         LA    R9,WAPVTLPA                                         1211
*           R8=CVTQLPAQ;            /* QUEUE TO BE SEARCHED          */
         L     R8,CVTQLPAQ(,@07)                                   1212
*           R15=CVTQCDSR;           /* ENTRY PT ADDR FOR CDE SRCH    */
         L     R15,CVTQCDSR(,@07)                                  1213
*           RFY                                                    1214
*            (R7,                                                  1214
*             R11) RSTD;                                           1214
*           R7=R11;                 /* SAVE BASE REG                 */
         LR    R7,R11                                              1215
*           GENERATE REFS(CVTLPDSR);                               1216
      BALR  R14,R15    LINK TO SEARCH ROUTINE
      SR    R14,R14    INDICATE CDE FOUND
      LR    R0,R11     SAVE CDE ADDRESS
*           R11=R7;                 /* RESTORE BASE REG              */
         LR    R11,R7                                              1217
*           RFY                                                    1218
*            (R7,                                                  1218
*             R11) UNRSTD;                                         1218
*           IF R14=ZERO THEN        /* IF CDE FOUND ON ACTIVE Q      */
         LTR   R14,R14                                             1219
         BNZ   @RF01219                                            1219
*             DO;                                                  1220
*               RFY                                                1221
*                 R14 UNRSTD;                                      1221
*               CDENTPTR=R0;        /* ADDRESS OF THIS CDE           */
         LR    CDENTPTR,R0                                         1222
*               MODEP=CDENTPT;      /* SAVE ENTRY POINT ADDRESS      */
         MVC   MODEP(4),CDENTPT(CDENTPTR)                          1223
*               IF CDMIN=ON THEN    /* IF CDE IS MINOR, ADDR MAJOR   */
         TM    CDMIN(CDENTPTR),B'00000100'                         1224
         BNO   @RF01224                                            1224
*                 XTLSTPTR=CDXLMJP->CDXLMJP;/* OBTAIN EXTENT LIST  1225
*                                      ADDRESS                       */
         L     @14,CDXLMJP(,CDENTPTR)                              1225
         MVC   XTLSTPTR(4),CDXLMJP(@14)                            1225
*               ELSE                                               1226
*                 XTLSTPTR=CDXLMJP; /* OBTAIN EXTENT LIST ADDRESS    */
         B     @RC01224                                            1226
@RF01224 MVC   XTLSTPTR(4),CDXLMJP(CDENTPTR)                       1226
*               MODADDR=XTLMSBAD&HIORDBIT;/* SAVE MODULE START     1227
*                                      ADDRESS                       */
@RC01224 L     @14,@CF03194                                        1227
         L     @07,XTLSTPTR                                        1227
         ST    @14,@TF00001                                        1227
         SLR   @14,@14                                             1227
         ICM   @14,7,XTLMSBAD(@07)                                 1227
         N     @14,@TF00001                                        1227
         ST    @14,MODADDR                                         1227
*               MODLN=XTLMSBLN&HIORDBIT;/* SAVE MODULE LENGTH        */
         SLR   @14,@14                                             1228
         ICM   @14,7,XTLMSBLN(@07)                                 1228
         N     @14,@TF00001                                        1228
         ST    @14,MODLN                                           1228
*             END;                                                 1229
*           ELSE                    /* IF NO CDE ON ACTIVE QUEUE,    */
*             DO;                   /* SEARCH THE LPA DIRECTORY      */
         B     @RC01219                                            1230
@RF01219 DS    0H                                                  1231
*               RFY                                                1231
*                 R14 RSTD;                                        1231
*               R14=ADDR(WAPVTLPA); /* ADDR OF MODULE NAME           */
         LA    R14,WAPVTLPA                                        1232
*               R15=CVTLPDSR;       /* ENTRY PT ADDR FOR LPDE SRCH   */
         L     @07,CVTPTR                                          1233
         L     R15,CVTLPDSR(,@07)                                  1233
*               GENERATE;                                          1234
      LM     R0,R1,0(R14)    LOAD NAME
      BALR   R14,R15
      SR     R14,R14         INDICATE LPDE FOUND
      SR     R14,R14
*               IF R14=ZERO THEN    /* IF FOUND IN LPA DIRECTORY     */
         LTR   R14,R14                                             1235
         BNZ   @RF01235                                            1235
*                 DO;                                              1236
*                   LPDEPTR=R0;     /* ADDRESS OF THIS LPDE          */
         LR    LPDEPTR,R0                                          1237
*                   MODEP=LPDENTP;  /* SAVE ENTRY POINT ADDRESS      */
         MVC   MODEP(4),LPDENTP(LPDEPTR)                           1238
*                   IF LPDEMIN=ON THEN/* IF THIS IS A MINOR LPDE     */
         TM    LPDEMIN(LPDEPTR),B'00000100'                        1239
         BNO   @RF01239                                            1239
*                     DO;           /* SEARCH FOR THE MAJOR          */
*                       R14=ADDR(LPDEMJNM);/* ADDRESS OF MODULE NAME */
         LA    R14,LPDEMJNM(,LPDEPTR)                              1241
*                       R3=CVTPTR;  /* CVT ADDRESS                   */
         L     R3,CVTPTR                                           1242
*                       R15=CVTLPDSR;/* ENTRY PT ADDR FOR LPDE SRCH  */
         L     R15,CVTPTR                                          1243
         L     R15,CVTLPDSR(,R15)                                  1243
*                       GENERATE;                                  1244
      LM    R0,R1,0(R14)    LOAD NAME
      BALR  R14,R15
      SR    R14,R14         INDICATE LPDE FOUND
      SR    R14,R14
*                       IF R14=ZERO THEN/* IF MAJOR LPDE FOUND       */
         LTR   R14,R14                                             1245
         BNZ   @RF01245                                            1245
*                         LPDEPTR=R0;/* ADDRESS OF THIS LPDE         */
         LR    LPDEPTR,R0                                          1246
*                       ELSE        /* IF NOT FOUND, ISSUE 732 MSG   */
*                         DO;                                      1247
         B     @RC01245                                            1247
@RF01245 DS    0H                                                  1248
*                           WARESP=ON;/* IND ERROR                   */
*                           WARESPL=ON;/* IND MODULE NOT FOUND IN LPA*/
         OI    WARESP,B'00011000'                                  1249
*                         END;                                     1250
*                     END;                                         1251
@RC01245 DS    0H                                                  1252
*                   RFY                                            1252
*                     R14 UNRSTD;                                  1252
@RF01239 DS    0H                                                  1253
*                   IF WARESP=OFF THEN/* IF MODULES MAJOR LPDE FOUND */
         TM    WARESP,B'00010000'                                  1253
         BNZ   @RF01253                                            1253
*                     DO;                                          1254
*                       MODADDR=LPDEXTAD&HIORDBIT;/* SAVE MODULE   1255
*                                      START ADDRESS                 */
         L     @14,@CF03194                                        1255
         ST    @14,@TF00001                                        1255
         L     @14,LPDEXTAD(,LPDEPTR)                              1255
         N     @14,@TF00001                                        1255
         ST    @14,MODADDR                                         1255
*                       MODLN=LPDEXTLN&HIORDBIT;/* SAVE MODULE LENGTH*/
         L     @14,LPDEXTLN(,LPDEPTR)                              1256
         N     @14,@TF00001                                        1256
         ST    @14,MODLN                                           1256
*                     END;                                         1257
*                 END;                                             1258
*               ELSE                /* IF MODULE WAS NOT FOUND IN    */
*                 DO;               /* EITHER PLACE, ISSUE 732 MSG   */
         B     @RC01235                                            1259
@RF01235 DS    0H                                                  1260
*                   WARESP=ON;      /* IND ERROR                     */
*                   WARESPL=ON;     /* IND MODULE NOT FOUND IN LPA   */
         OI    WARESP,B'00011000'                                  1261
*                 END;                                             1262
*             END;                                                 1263
@RC01235 DS    0H                                                  1264
*           RFY                                                    1264
*            (R0,                                                  1264
*             R1,                                                  1264
*             R3,                                                  1264
*             R5,                                                  1264
*             R8,                                                  1264
*             R9,                                                  1264
*             R15) UNRSTD;                                         1264
@RC01219 DS    0H                                                  1265
*         END;                                                     1265
*         IF WARESP=OFF THEN        /* IF MOD RESIDES IN LPA, CONT   */
         TM    WARESP,B'00010000'                                  1266
         BNZ   @RF01266                                            1266
*           DO;                                                    1267
*             WAADDR3=MODADDR;      /* SET RANGE FOR THE ENTIRE      */
         L     @07,MODADDR                                         1268
         ST    @07,WAADDR3                                         1268
*             WAADDR4=MODADDR+MODLN;/* MODULE -THIS IS THE DEFAULT   */
         AL    @07,MODLN                                           1269
         ST    @07,WAADDR4                                         1269
*             TEXTPTR=TEXTPTR+DATALN;/* UPDATE PTR PAST MODULE NAME  */
         LH    @07,DATALN                                          1270
         AL    @07,TEXTPTR                                         1270
         ST    @07,TEXTPTR                                         1270
*             IF WAPAREN=ON THEN    /* IF A DISPLACEMENT IS SPEC     */
         TM    WAPAREN,B'00000100'                                 1271
         BNO   @RF01271                                            1271
*               CALL LPAPVTAD;      /* PROCESS ADDRESSES             */
         BAL   @14,LPAPVTAD                                        1272
*           END;                                                   1273
*       END;                                                       1274
*     ELSE                          /* IF LENGTH OF NAME INVALID     */
*       WARESP=ON;                  /* IND INVALID SYNTAX            */
         B     @RC01202                                            1275
@RF01202 OI    WARESP,B'00010000'                                  1275
*   IF WAFIN=OFF THEN               /* IF CMD HAS NOT BEEN CANCELED  */
@RC01202 DS    0H                                                  1276
@RF01201 TM    WAFIN,B'00100000'                                   1276
         BNZ   @RF01276                                            1276
*     DO;                                                          1277
*       IF WARESP=ON&               /* IF THE SYNTAX IS INVALID      */
*           WAADDRID^=ZERO THEN     /* AND THE LENGTH WAS ADDED      */
         TM    WARESP,B'00010000'                                  1278
         BNO   @RF01278                                            1278
         CLI   WAADDRID,0                                          1278
         BE    @RF01278                                            1278
*         DO;                                                      1279
*           WAADDRID=ZEROB;         /* IND NO LPAMOD ENTRY IN WA     */
         MVI   WAADDRID,X'00'                                      1280
*           WASCVALN=WASCVALN-LENGTH(SCVAMOD);/* SUBT LENGTH OF ENTRY*/
         LH    @07,WASCVALN                                        1281
         SH    @07,@CH02963                                        1281
         STH   @07,WASCVALN                                        1281
*         END;                                                     1282
*       IF EOL>TEXTPTR&             /* IF NOT AT END-OF-LINE AND     */
*           INCHAR=RPAREN THEN      /* IF OPERAND WAS ENCLOSED IN    */
@RF01278 L     @07,TEXTPTR                                         1283
         C     @07,EOL                                             1283
         BNL   @RF01283                                            1283
         CLI   INCHAR(@07),C')'                                    1283
         BNE   @RF01283                                            1283
*         TEXTPTR=TEXTPTR+ONE;      /* PAREN, UPDATE PTR PAST IT     */
         AL    @07,@CF00063                                        1284
         ST    @07,TEXTPTR                                         1284
*     END;                                                         1285
*   END LPAMOD;                                                    1286
@EL00020 DS    0H                                                  1286
@EF00020 DS    0H                                                  1286
@ER00020 LM    @14,@12,@SA00020                                    1286
         BR    @14                                                 1286
*                                                                  1287
*/********************************************************************
**    THIS SEGMENT PROCESSES THE ADDRESS OPTION ON LPAMOD AND PVTMOD
**********************************************************************/
*                                                                  1287
*LPAPVTAD:                                                         1287
*   PROC;                                                          1287
*                                                                  1287
LPAPVTAD STM   @14,@12,@SA00021                                    1287
*   /*****************************************************************/
*   /*                                                               */
*   /* PROCESS FIRST ADDRESS                                         */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1288
*   IF EOL>TEXTPTR THEN             /* IF NOT AT END-OF-LINE         */
         L     @07,TEXTPTR                                         1288
         C     @07,EOL                                             1288
         BNL   @RF01288                                            1288
*     IF INCHAR=COMMA×              /* IF CHAR IS A DELIMITER        */
*         INCHAR=RPAREN THEN                                       1289
         CLI   INCHAR(@07),C','                                    1289
         BE    @RT01289                                            1289
         CLI   INCHAR(@07),C')'                                    1289
         BNE   @RF01289                                            1289
@RT01289 DS    0H                                                  1290
*       TEXTPTR=TEXTPTR+ONE;        /* UPDATE PTR PAST IT            */
         LA    @07,1                                               1290
         AL    @07,TEXTPTR                                         1290
         ST    @07,TEXTPTR                                         1290
*   CALL SCAN;                      /* SCAN FOR FIRST DISP NUMBER    */
@RF01289 DS    0H                                                  1291
@RF01288 BAL   @14,SCAN                                            1291
*   IF WAFIN=OFF&                   /* IF CMD HAS NOT BEEN CANCELED  */
*       WARESP=OFF THEN             /* AND NO SYNTAX ERRORS FOUND    */
         TM    WAFIN,B'00110000'                                   1292
         BNZ   @RF01292                                            1292
*     IF DATALN>ZERO&               /* IF LENGTH OF INPUT OKAY       */
*         DATALN<SEVEN THEN                                        1293
         LH    @07,DATALN                                          1293
         LTR   @07,@07                                             1293
         BNP   @RF01293                                            1293
         CH    @07,@CH00996                                        1293
         BNL   @RF01293                                            1293
*       DO;                                                        1294
*         CALL CONVHEX;             /* CONVERT DISP TO BINARY        */
         BAL   @14,CONVHEX                                         1295
*         IF WARESP=OFF THEN        /* IF SYNTAX OF NUMBER OKAY &    */
         TM    WARESP,B'00010000'                                  1296
         BNZ   @RF01296                                            1296
*           DO;                                                    1297
*             IF WAADDRID=SCVIDLPA THEN/* IF LPAMOD                  */
         CLI   WAADDRID,7                                          1298
         BNE   @RF01298                                            1298
*               IF CONVBUF^>MODLN THEN/* IS WITHIN THE MODULE        */
         L     @07,CONVBUF                                         1299
         C     @07,MODLN                                           1299
         BH    @RF01299                                            1299
*                 WAADDR3=MODADDR+CONVBUF;/* PUT ADDR INTO WA        */
         AL    @07,MODADDR                                         1300
         ST    @07,WAADDR3                                         1300
*               ELSE                /* IF DISPL LARGER THAN MODULE   */
*                 WARESP=ON;        /* IND SYNTAX IS INVALID         */
         B     @RC01299                                            1301
@RF01299 OI    WARESP,B'00010000'                                  1301
*             ELSE                  /* IF PVTMOD                     */
*               WAADDR3=CONVBUF;    /* PUT DISPLACEMENT INTO WA      */
         B     @RC01298                                            1302
@RF01298 MVC   WAADDR3(4),CONVBUF                                  1302
*             IF WARESP=OFF THEN    /* IF DISPLACEMENT OKAY          */
@RC01298 TM    WARESP,B'00010000'                                  1303
         BNZ   @RF01303                                            1303
*               DO;                                                1304
*                 WAADDR4=WAADDR3;  /* SET RANGE TO THAT ADDR        */
         MVC   WAADDR4(4),WAADDR3                                  1305
*                 TEXTPTR=TEXTPTR+DATALN;/* UPDATE PTR               */
         LH    @07,DATALN                                          1306
         AL    @07,TEXTPTR                                         1306
         ST    @07,TEXTPTR                                         1306
*                 IF WAPAREN=ON THEN/* IF AN ADDR RANGE IS SPEC      */
         TM    WAPAREN,B'00000100'                                 1307
         BNO   @RF01307                                            1307
*                   DO;                                            1308
*                                                                  1308
*                     /***********************************************/
*                     /*                                             */
*                     /* PROCESS SECOND ADDRESS                      */
*                     /*                                             */
*                     /***********************************************/
*                                                                  1309
*                     IF EOL>TEXTPTR THEN/* IF NOT AT END-OF-LINE    */
         C     @07,EOL                                             1309
         BNL   @RF01309                                            1309
*                       IF INCHAR=COMMA×/* IF CHAR IS A DELIMITER    */
*                           INCHAR=RPAREN THEN                     1310
         CLI   INCHAR(@07),C','                                    1310
         BE    @RT01310                                            1310
         CLI   INCHAR(@07),C')'                                    1310
         BNE   @RF01310                                            1310
@RT01310 DS    0H                                                  1311
*                         TEXTPTR=TEXTPTR+ONE;/* UPDATE PTR PAST IT  */
         LA    @07,1                                               1311
         AL    @07,TEXTPTR                                         1311
         ST    @07,TEXTPTR                                         1311
*                     CALL SCAN;    /* SCAN FOR SECOND DISP NUMBER   */
@RF01310 DS    0H                                                  1312
@RF01309 BAL   @14,SCAN                                            1312
*                     IF WAFIN=OFF& /* IF CMD NOT CANCELED           */
*                         WARESP=OFF THEN/* AND NOT SYNTAX ERRORS    */
         TM    WAFIN,B'00110000'                                   1313
         BNZ   @RF01313                                            1313
*                       IF WAPAREN=OFF&/* IF PAREN CLOSED AND        */
*                           DATALN>ZERO&/* LENGTH OF INPUT OKAY      */
*                           DATALN<SEVEN THEN                      1314
         TM    WAPAREN,B'00000100'                                 1314
         BNZ   @RF01314                                            1314
         LH    @07,DATALN                                          1314
         LTR   @07,@07                                             1314
         BNP   @RF01314                                            1314
         CH    @07,@CH00996                                        1314
         BNL   @RF01314                                            1314
*                         DO;                                      1315
*                           CALL CONVHEX;/* CONVERT DISP TO BINARY   */
         BAL   @14,CONVHEX                                         1316
*                           IF WARESP=OFF THEN/* IF SYNTAX OF NUM OK */
         TM    WARESP,B'00010000'                                  1317
         BNZ   @RF01317                                            1317
*                             IF WAADDRID=SCVIDLPA THEN/* IF LPAMOD  */
         CLI   WAADDRID,7                                          1318
         BNE   @RF01318                                            1318
*                               IF CONVBUF^>MODLN THEN/* AND IS WITH-*/
         L     @07,CONVBUF                                         1319
         C     @07,MODLN                                           1319
         BH    @RF01319                                            1319
*                                 DO;/* IN THE MODULE                */
*                                   WAADDR4=MODADDR+CONVBUF;/*     1321
*                                      ADDRESS                       */
         AL    @07,MODADDR                                         1321
         ST    @07,WAADDR4                                         1321
*                                   TEXTPTR=TEXTPTR+DATALN;/* UPDATE */
         LH    @07,DATALN                                          1322
         AL    @07,TEXTPTR                                         1322
         ST    @07,TEXTPTR                                         1322
*                                 END;                             1323
*                               ELSE/* IF DISP LARGER THAN MODULE    */
*                                 WARESP=ON;/* IND SYNTAX INVALID    */
         B     @RC01319                                            1324
@RF01319 OI    WARESP,B'00010000'                                  1324
*                             ELSE  /* IF PVTMOD                     */
*                               DO;                                1325
         B     @RC01318                                            1325
@RF01318 DS    0H                                                  1326
*                                 WAADDR4=CONVBUF;/* COPY ADDR INTO
*                                      WA                            */
         MVC   WAADDR4(4),CONVBUF                                  1326
*                                 TEXTPTR=TEXTPTR+DATALN;/* UPDATE   */
         LH    @07,DATALN                                          1327
         AL    @07,TEXTPTR                                         1327
         ST    @07,TEXTPTR                                         1327
*                               END;                               1328
*                         END;                                     1329
*                       ELSE        /* IF LENGTH WRONG OR NO PAREN   */
*                         IF DATALN=ZERO&/* IF ONLY RIGHT PAREN,OKAY */
*                             INCHAR=RPAREN THEN                   1330
         B     @RC01314                                            1330
@RF01314 ICM   @07,3,DATALN                                        1330
         BNZ   @RF01330                                            1330
         L     @07,TEXTPTR                                         1330
         CLI   INCHAR(@07),C')'                                    1330
         BE    @RT01330                                            1330
*                           ;       /* (POSSIBLE ON NEWLINE REPLY)   */
*                         ELSE                                     1332
*                           WARESP=ON;/* IND INVALID SYNTAX          */
@RF01330 OI    WARESP,B'00010000'                                  1332
*                   END;                                           1333
*               END;                                               1334
*           END;                                                   1335
*       END;                                                       1336
*     ELSE                          /* IF LENGTH INVALID             */
*       IF DATALN=ZERO&             /* IF ONLY RIGHT PAREN,OKAY      */
*           INCHAR=RPAREN THEN                                     1337
         B     @RC01293                                            1337
@RF01293 ICM   @07,3,DATALN                                        1337
         BNZ   @RF01337                                            1337
         L     @07,TEXTPTR                                         1337
         CLI   INCHAR(@07),C')'                                    1337
         BE    @RT01337                                            1337
*         ;                         /* (POSSIBLE ON NEWLINE REPLY)   */
*       ELSE                                                       1339
*         WARESP=ON;                /* IND SYNTAX IS INVALID         */
@RF01337 OI    WARESP,B'00010000'                                  1339
*   END LPAPVTAD;                                                  1340
@EL00021 DS    0H                                                  1340
@EF00021 DS    0H                                                  1340
@ER00021 LM    @14,@12,@SA00021                                    1340
         BR    @14                                                 1340
*                                                                  1341
*/********************************************************************
**   THIS SEGMENT PROCESSES THE OPERAND ON KEYWORD MODE AND ABBREV M
**********************************************************************/
*                                                                  1341
*MODE:                                                             1341
*   PROC;                                                          1341
MODE     STM   @14,@12,@SA00022                                    1341
*   SCEMODE=ZERO;                   /* INIT MODE IND IN SCE          */
         LA    @07,STAE906                                         1342
         L     @07,SCEPTR(,@07)                                    1342
         SLR   @05,@05                                             1342
         STH   @05,SCEMODE(,@07)                                   1342
*   SCEEVERY=OFF;                   /* INIT ANY-EVERY IND            */
         NI    SCEEVERY(@07),B'11011111'                           1343
*   WAANY=OFF;                      /* INIT ANY IND                  */
         NI    WAANY,B'11111101'                                   1344
*   CALL SCAN;                      /* SCAN OPERAND TO DELIMITER     */
         BAL   @14,SCAN                                            1345
*   IF INCHAR=LPAREN THEN           /* IF FIRST CHAR IS LEFT PAREN   */
         L     @07,TEXTPTR                                         1346
         CLI   INCHAR(@07),C'('                                    1346
         BNE   @RF01346                                            1346
*     DO;                                                          1347
*       WARESP=OFF;                 /* IND SYNTAX IS VALID           */
*       WAPAREN=ON;                 /* IND PAREN OPEN                */
         OI    WAPAREN,B'00000100'                                 1349
         NI    WARESP,B'11101111'                                  1349
*       TEXTPTR=TEXTPTR+ONE;        /* UPDATE PTR PAST LEFT PAREN    */
         AL    @07,@CF00063                                        1350
         ST    @07,TEXTPTR                                         1350
*     END;                                                         1351
*   DO WHILE WAFIN=OFF&WARESP=OFF&  /* LOOP TO PROCESS EACH OPTION   */
*         ((SCEMODE=ZERO&           /* UNTIL INVALID SYNTAX IS       */
*         SCEEVERY=OFF&             /* FOUND OR THE END OF THE       */
*         WAANY=OFF)×               /* OPTION LIST IS REACHED        */
*         WAPAREN=ON);                                             1352
@RF01346 B     @DE01352                                            1352
@DL01352 DS    0H                                                  1353
*     CALL SCAN;                    /* SCAN OPERAND TO DELIMITER     */
         BAL   @14,SCAN                                            1353
*     IF WAFIN=OFF&                 /* IF CMD HAS NOT BEEN CANCELED  */
*         WARESP=OFF THEN           /* AND NO SYNTAX ERRORS FOUND    */
         TM    WAFIN,B'00110000'                                   1354
         BNZ   @RF01354                                            1354
*       IF DATALN>ONE&              /* CHECK LENGTH OF OPERAND       */
*           DATALN<SEVEN THEN                                      1355
         LH    @07,DATALN                                          1355
         CH    @07,@CH00063                                        1355
         BNH   @RF01355                                            1355
         CH    @07,@CH00996                                        1355
         BNL   @RF01355                                            1355
*         DO;                                                      1356
*           UNKNOWN6=IN(1:DATALN);  /* COPY FOR TABLE COMPARISON     */
         MVI   UNKNOWN6+1,C' '                                     1357
         MVC   UNKNOWN6+2(4),UNKNOWN6+1                            1357
         LR    @05,@07                                             1357
         BCTR  @05,0                                               1357
         L     @03,TEXTPTR                                         1357
         EX    @05,@SM03447                                        1357
*           DO I=MDELNST(DATALN) TO MDELNFN(DATALN)/* SEARCH MODE    */
*                 WHILE MDEOPTEN(I)^=UNKNOWN6;/* OPTION TABL         */
         SLA   @07,2                                               1358
         L     @05,@CV02929                                        1358
         AL    @05,@CF03415                                        1358
         LH    I,MDELNST(@07,@05)                                  1358
         B     @DE01358                                            1358
@DL01358 LR    @07,I                                               1358
         SLA   @07,3                                               1358
         L     @05,@CV02923                                        1358
         ALR   @05,@07                                             1358
         AL    @05,@CF03449                                        1358
         CLC   MDEOPTEN-2(6,@05),UNKNOWN6                          1358
         BE    @DC01358                                            1358
*           END;                                                   1359
         AL    I,@CF00063                                          1359
@DE01358 LH    @07,DATALN                                          1359
         SLA   @07,2                                               1359
         L     @05,@CV02929                                        1359
         BCTR  @05,0                                               1359
         BCTR  @05,0                                               1359
         CH    I,MDELNFN-2(@07,@05)                                1359
         BNH   @DL01358                                            1359
@DC01358 DS    0H                                                  1360
*           IF I>MDELNFN(DATALN) THEN/* IF NOT FOUND,                */
         LH    @07,DATALN                                          1360
         SLA   @07,2                                               1360
         L     @05,@CV02929                                        1360
         BCTR  @05,0                                               1360
         BCTR  @05,0                                               1360
         CH    I,MDELNFN-2(@07,@05)                                1360
         BNH   @RF01360                                            1360
*             WARESP=ON;            /* IND INVALID OPTION            */
         OI    WARESP,B'00010000'                                  1361
*           ELSE                    /* IF OPTION FOUND IN TABLE      */
*             DO;                                                  1362
         B     @RC01360                                            1362
@RF01360 DS    0H                                                  1363
*               IF I=MDEANYX THEN   /* IF OPTION IS ANY              */
         CH    I,@CH00075                                          1363
         BNE   @RF01363                                            1363
*                 IF SCEEVERY=OFF THEN/* IF EVERY HAS NOT BEEN SPEC  */
         LA    @07,STAE906                                         1364
         L     @07,SCEPTR(,@07)                                    1364
         TM    SCEEVERY(@07),B'00100000'                           1364
         BNZ   @RF01364                                            1364
*                   WAANY=ON;       /* IND IN WA THAT ANY SPEC       */
         OI    WAANY,B'00000010'                                   1365
*                 ELSE              /* IF EVERY HAS BEEN SPECIFIED   */
*                   WARESP=ON;      /* IND INVALID SYNTAX            */
         B     @RC01364                                            1366
@RF01364 OI    WARESP,B'00010000'                                  1366
*               ELSE                                               1367
*                 IF I=MDEEVERY THEN/* IF OPTION IS EVERY            */
         B     @RC01363                                            1367
@RF01363 CH    I,@CH00116                                          1367
         BNE   @RF01367                                            1367
*                   IF WAANY=OFF THEN/* IF ANY HAS NOT BEEN SPEC     */
         TM    WAANY,B'00000010'                                   1368
         BNZ   @RF01368                                            1368
*                     SCEEVERY=ON;  /* IND OPTION EVERY SPEC         */
         LA    @07,STAE906                                         1369
         L     @07,SCEPTR(,@07)                                    1369
         OI    SCEEVERY(@07),B'00100000'                           1369
*                   ELSE            /* IF ANY HAS BEEN SPECIFIED     */
*                     WARESP=ON;    /* IND INVALID SYNTAX            */
         B     @RC01368                                            1370
@RF01368 OI    WARESP,B'00010000'                                  1370
*                 ELSE              /* IF OPT OTHER THAN ANY/EVERY   */
*                   SCEMODE=SCEMODE×MDEOPTF(I);/* IND OPTION SPEC    */
         B     @RC01367                                            1371
@RF01367 LA    @07,STAE906                                         1371
         L     @07,SCEPTR(,@07)                                    1371
         LR    @05,I                                               1371
         SLA   @05,3                                               1371
         L     @15,@CV02923                                        1371
         ALR   @15,@05                                             1371
         AL    @15,@CF03416                                        1371
         OC    SCEMODE(2,@07),MDEOPTF(@15)                         1371
*               IF WARESP=OFF THEN  /* IF OPTION WAS OKAY            */
@RC01367 DS    0H                                                  1372
@RC01363 TM    WARESP,B'00010000'                                  1372
         BNZ   @RF01372                                            1372
*                 DO;                                              1373
*                   TEXTPTR=TEXTPTR+DATALN;/* UPDATE PTR             */
         LH    @07,DATALN                                          1374
         AL    @07,TEXTPTR                                         1374
         ST    @07,TEXTPTR                                         1374
*                   IF EOL>TEXTPTR THEN/* IF NOT AT END-OF-LINE      */
         C     @07,EOL                                             1375
         BNL   @RF01375                                            1375
*                     IF INCHAR=COMMA×/* IF CHAR IS A DELIMITER      */
*                         INCHAR=RPAREN THEN                       1376
         CLI   INCHAR(@07),C','                                    1376
         BE    @RT01376                                            1376
         CLI   INCHAR(@07),C')'                                    1376
         BNE   @RF01376                                            1376
@RT01376 DS    0H                                                  1377
*                       TEXTPTR=TEXTPTR+ONE;/* UPDATE PTR PAST IT    */
         LA    @07,1                                               1377
         AL    @07,TEXTPTR                                         1377
         ST    @07,TEXTPTR                                         1377
*                 END;                                             1378
*             END;                                                 1379
*         END;                                                     1380
*       ELSE                        /* IF LNGTH OF OPERAND INVALID   */
*         IF DATALN=ZERO&           /* IF ONLY RIGHT PAREN,OKAY      */
*             INCHAR=RPAREN THEN    /* (POSSIBLE ON NEWLINE REPLY)   */
         B     @RC01355                                            1381
@RF01355 ICM   @07,3,DATALN                                        1381
         BNZ   @RF01381                                            1381
         L     @07,TEXTPTR                                         1381
         CLI   INCHAR(@07),C')'                                    1381
         BNE   @RF01381                                            1381
*           TEXTPTR=TEXTPTR+ONE;    /* UPDATE PTR PAST IT            */
         AL    @07,@CF00063                                        1382
         ST    @07,TEXTPTR                                         1382
*         ELSE                                                     1383
*           WARESP=ON;              /* IND INVALID SYNTAX            */
         B     @RC01381                                            1383
@RF01381 OI    WARESP,B'00010000'                                  1383
*   END;                            /* END OF DOWHILE                */
@RC01381 DS    0H                                                  1384
@RC01355 DS    0H                                                  1384
@RF01354 DS    0H                                                  1384
@DE01352 TM    WAFIN,B'00110000'                                   1384
         BNZ   @DC01352                                            1384
         LA    @07,STAE906                                         1384
         L     @07,SCEPTR(,@07)                                    1384
         ICM   @05,3,SCEMODE(@07)                                  1384
         BNZ   @GL00088                                            1384
         TM    SCEEVERY(@07),B'00100000'                           1384
         BNZ   @GL00088                                            1384
         TM    WAANY,B'00000010'                                   1384
         BZ    @DL01352                                            1384
@GL00088 TM    WAPAREN,B'00000100'                                 1384
         BO    @DL01352                                            1384
@DC01352 DS    0H                                                  1385
*   IF WAFIN=OFF THEN               /* IF CMD HAS NOT BEEN CANCELED  */
         TM    WAFIN,B'00100000'                                   1385
         BNZ   @RF01385                                            1385
*     IF WARESP=ON THEN             /* IF SYNTAX IS INVALID          */
         TM    WARESP,B'00010000'                                  1386
         BNO   @RF01386                                            1386
*       DO;                                                        1387
*         SCEEVERY=OFF;             /* CLEAN UP FLAGS                */
         LA    @07,STAE906                                         1388
         L     @07,SCEPTR(,@07)                                    1388
         NI    SCEEVERY(@07),B'11011111'                           1388
*         SCEMODE=ZERO;                                            1389
         SLR   @05,@05                                             1389
         STH   @05,SCEMODE(,@07)                                   1389
*       END;                                                       1390
*     ELSE                          /* IF SYNTAX IS VALID            */
*       IF SCEMODE=ZERO THEN        /* BUT ONLY ANY OR EVERY SPEC    */
         B     @RC01386                                            1391
@RF01386 LA    @07,STAE906                                         1391
         L     @07,SCEPTR(,@07)                                    1391
         ICM   @05,3,SCEMODE(@07)                                  1391
         BNZ   @RF01391                                            1391
*         DO;                       /* THEN INVALID SYNTAX           */
*           SCEEVERY=OFF;                                          1393
         NI    SCEEVERY(@07),B'11011111'                           1393
*           WARESP=ON;              /* IND INVALID SYNTAX            */
         OI    WARESP,B'00010000'                                  1394
*         END;                                                     1395
*   END MODE;                                                      1396
@EL00022 DS    0H                                                  1396
@EF00022 DS    0H                                                  1396
@ER00022 LM    @14,@12,@SA00022                                    1396
         BR    @14                                                 1396
*                                                                  1397
*/********************************************************************
**   MSGMOD05 SETS UP COMMON PARAMETERS, LOADS AND BALR'S TO       1397
**   IEE0503D IN ORDER TO SEND A MSG TO THE COMMAND ISSUER         1397
**********************************************************************/
*                                                                  1397
*MSGMOD05:                                                         1397
*   PROC;                                                          1397
MSGMOD05 STM   @14,@12,@SA00023                                    1397
*   RFY                                                            1398
*     XSAPTR RSTD;                                                 1398
*   XAV=SLIP;                       /* VARIABLE TEXT IN MSG          */
         MVI   XAV+4(XSAPTR),C' '                                  1399
         MVC   XAV+5(3,XSAPTR),XAV+4(XSAPTR)                       1399
         MVC   XAV(4,XSAPTR),@CC03087                              1399
*   XAU=WAUCMP;                     /* CONSOLE ID OF ISSUER          */
         MVC   XAU(1,XSAPTR),WAUCMP                                1400
*   XAA=ZERO;                       /* INIT TERM ID TO ZERO          */
         SLR   @07,@07                                             1401
         STH   @07,XAA(,XSAPTR)                                    1401
*   GEN(LOAD EP=IEE0503D);                                         1402
         LOAD EP=IEE0503D
*   RFY                                                            1403
*    (R0,                                                          1403
*     R1,                                                          1403
*     R3,                                                          1403
*     R4,                                                          1403
*     R5,                                                          1403
*     R13,                                                         1403
*     R15) RSTD;                    /* IEE0503D DESTROYS CONTENTS OF
*                                      REGS 0,1,3,4,5 - LM ON EXIT 1403
*                                      FROM MSGMOD05 RESTORES REGS   */
*   R15=R0;                         /* ADDRESS OF IEE0503D           */
         LR    R15,R0                                              1404
*   R13->SAVREGB(1:4)=R4;           /* SAVE THE DATA REG.            */
         ST    R4,SAVREGB(,R13)                                    1405
*   GEN(BALR R14,R15);              /* ISSUE MESSAGE                 */
         BALR R14,R15
*   R4=R13->SAVREGB(1:4);           /* GET DATA REG BACK.            */
         L     R4,SAVREGB(,R13)                                    1407
*   GEN(DELETE EP=IEE0503D);                                       1408
         DELETE EP=IEE0503D
*   RFY                                                            1409
*    (R0,                                                          1409
*     R1,                                                          1409
*     XSAPTR,                                                      1409
*     R3,                                                          1409
*     R4,                                                          1409
*     R5,                                                          1409
*     R13,                                                         1409
*     R15) UNRSTD;                                                 1409
*   END MSGMOD05;                                                  1410
@EL00023 DS    0H                                                  1410
@EF00023 DS    0H                                                  1410
@ER00023 LM    @14,@12,@SA00023                                    1410
         BR    @14                                                 1410
*                                                                  1411
*/********************************************************************
**   NEXTKEY PREPARES COMMAND PROCESSOR TO PROCESS THE NEXT KEYWORD.
**   IF A SYNTAX ERROR WAS FOUND PROCESSING THE PREVIOUS KEYWORD,  1411
**   THE ISSUER IS PROMPTED.                                       1411
**********************************************************************/
*                                                                  1411
*NEXTKEY:                                                          1411
*   PROC;                                                          1411
NEXTKEY  STM   @14,@08,@SA00024                                    1411
         STM   @10,@12,@SA00024+44                                 1411
*   IF WARESP=ON THEN               /* BUT THE SYNTAX IS INVALID     */
         TM    WARESP,B'00010000'                                  1412
         BNO   @RF01412                                            1412
*     CALL RESP;                    /* INFORM THE ISSUER             */
         BAL   @14,RESP                                            1413
*   ELSE                            /* IF THE SYNTAX IS OK SO FAR    */
*     IF NXTOP^=ZERO THEN           /* IF AN ADDR SAVED IN NXTOP     */
         B     @RC01412                                            1414
@RF01412 L     @08,NXTOP                                           1414
         SLR   @07,@07                                             1414
         CR    @08,@07                                             1414
         BE    @RF01414                                            1414
*       DO;                         /* (NXTOP HOLDS RESUME ADDR)     */
*         TEXTPTR=NXTOP;            /* RESTORE PTR TO NEXT KEYWORD   */
         ST    @08,TEXTPTR                                         1416
*         NXTOP=ZERO;               /* RESET                         */
         ST    @07,NXTOP                                           1417
*         EOL=SAVEEOL;              /* RESTORE END-OF-LINE IND       */
         ST    SAVEEOL,EOL                                         1418
*       END;                                                       1419
*   IF WAFIN=OFF&                   /* IF CMD NOT BEING TERMINATED   */
*       NXTOP=ZERO&                 /* AND NOT PROCESSING AN ERROR   */
*       EOL>TEXTPTR&                /* AND NOT AT END-OF-LINE        */
*       INCHAR=COMMA THEN           /* CHECK FOR COMMA AND IF SO     */
@RF01414 DS    0H                                                  1420
@RC01412 TM    WAFIN,B'00100000'                                   1420
         BNZ   @RF01420                                            1420
         ICM   @08,15,NXTOP                                        1420
         BNZ   @RF01420                                            1420
         L     @08,TEXTPTR                                         1420
         C     @08,EOL                                             1420
         BNL   @RF01420                                            1420
         CLI   INCHAR(@08),C','                                    1420
         BNE   @RF01420                                            1420
*     TEXTPTR=TEXTPTR+ONE;          /* UPDATE PTR PAST COMMA         */
         AL    @08,@CF00063                                        1421
         ST    @08,TEXTPTR                                         1421
*   END NEXTKEY;                                                   1422
@EL00024 DS    0H                                                  1422
@EF00024 DS    0H                                                  1422
@ER00024 LM    @14,@08,@SA00024                                    1422
         LM    @10,@12,@SA00024+44                                 1422
         BR    @14                                                 1422
*                                                                  1423
*/********************************************************************
* *   THIS SEGMENT PROCESSES THE KEYWORD PVTMOD AND ABBREV P.      1423
* ********************************************************************/
*                                                                  1423
*PVTMOD:                                                           1423
*   PROC;                                                          1423
PVTMOD   STM   @14,@12,@SA00025                                    1423
*   IF WAADDRID=SCVIDPVT×           /* IF PVTMOD OR LPAMOD WAS       */
*       WAADDRID=SCVIDLPA THEN      /* SPECIFIED BEFORE              */
         CLI   WAADDRID,6                                          1424
         BE    @RT01424                                            1424
         CLI   WAADDRID,7                                          1424
         BNE   @RF01424                                            1424
@RT01424 DS    0H                                                  1425
*     WASCVALN=WASCVALN-LENGTH(SCVAMOD);/* SUBTRACT LENGTH           */
         LH    @07,WASCVALN                                        1425
         SH    @07,@CH02963                                        1425
         STH   @07,WASCVALN                                        1425
*   ELSE                                                           1426
*     IF WAADDRID=SCVIDAD THEN      /* NO, WAS ADDRESS SPECIFIED     */
         B     @RC01424                                            1426
@RF01424 CLI   WAADDRID,8                                          1426
         BNE   @RF01426                                            1426
*       WASCVALN=WASCVALN-LENGTH(SCVAADDR);/* YES,SUBT LN            */
         LH    @07,WASCVALN                                        1427
         SH    @07,@CH02322                                        1427
         STH   @07,WASCVALN                                        1427
*   WAADDRID=ZERO;                  /* CLEAR ENTRY ID                */
@RF01426 DS    0H                                                  1428
@RC01424 MVI   WAADDRID,X'00'                                      1428
*   CALL SCAN;                      /* SCAN OPERAND TO DELIMITER     */
         BAL   @14,SCAN                                            1429
*   IF INCHAR=LPAREN THEN           /* IF FIRST CHAR IS LEFT PAREN   */
         L     @07,TEXTPTR                                         1430
         CLI   INCHAR(@07),C'('                                    1430
         BNE   @RF01430                                            1430
*     DO;                                                          1431
*       WARESP=OFF;                 /* IND SYNTAX IS VALID           */
*       WAPAREN=ON;                 /* IND PAREN OPEN                */
         OI    WAPAREN,B'00000100'                                 1433
         NI    WARESP,B'11101111'                                  1433
*       TEXTPTR=TEXTPTR+ONE;        /* UPDATE PTR PAST LEFT PAREN    */
         AL    @07,@CF00063                                        1434
         ST    @07,TEXTPTR                                         1434
*       CALL SCAN;                  /* SCAN OPERAND TO DELIMITER     */
         BAL   @14,SCAN                                            1435
*     END;                                                         1436
*                                                                  1436
*   /*****************************************************************/
*   /*                                                               */
*   /* PROCESS MODULE NAME                                           */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1437
*   IF WAFIN=OFF&                   /* IF CMD HAS NOT BEEN CANCELED  */
*       WARESP=OFF THEN             /* AND NO SYNTAX ERRORS FOUND    */
@RF01430 TM    WAFIN,B'00110000'                                   1437
         BNZ   @RF01437                                            1437
*     IF DATALN>ZERO&               /* IF LENGTH OKAY                */
*         DATALN<NINE THEN                                         1438
         LH    @07,DATALN                                          1438
         SLR   @05,@05                                             1438
         CR    @07,@05                                             1438
         BNH   @RF01438                                            1438
         CH    @07,@CH02322                                        1438
         BNL   @RF01438                                            1438
*       DO;                                                        1439
*         WASCVALN=WASCVALN+LENGTH(SCVAMOD);/* ADD IN LENGTH         */
         LH    @01,WASCVALN                                        1440
         LA    @01,17(,@01)                                        1440
         STH   @01,WASCVALN                                        1440
*         WAADDRID=SCVIDPVT;        /* IND ENTRY IS PVTMOD           */
         MVI   WAADDRID,X'06'                                      1441
*         WAPVTLPA=IN(1:DATALN);    /* COPY MODULE NAME INTO WA      */
         MVI   WAPVTLPA+1,C' '                                     1442
         MVC   WAPVTLPA+2(6),WAPVTLPA+1                            1442
         LR    @15,@07                                             1442
         BCTR  @15,0                                               1442
         L     @14,TEXTPTR                                         1442
         EX    @15,@SM03450                                        1442
*         WAADDR3=ZERO;             /* IN CASE NO ADDR IS SPECIFIED  */
         ST    @05,WAADDR3                                         1443
*         WAADDR4=MAXADDR;          /* DEFAULT IS ENTIRE MODULE      */
         MVC   WAADDR4(4),@CF03194                                 1444
*         TEXTPTR=TEXTPTR+DATALN;   /* UPDATE PTR PAST MODULE NAME   */
         ALR   @14,@07                                             1445
         ST    @14,TEXTPTR                                         1445
*         IF WAPAREN=ON THEN        /* IF AN ADDR IS SPECIFIED       */
         TM    WAPAREN,B'00000100'                                 1446
         BNO   @RF01446                                            1446
*           CALL LPAPVTAD;          /* PROCESS ADDRESSES             */
         BAL   @14,LPAPVTAD                                        1447
*       END;                                                       1448
*     ELSE                          /* IF LENGTH OF NAME INVALID     */
*       WARESP=ON;                  /* IND INVALID SYNTAX            */
         B     @RC01438                                            1449
@RF01438 OI    WARESP,B'00010000'                                  1449
*   IF WAFIN=OFF THEN               /* IF CMD HAS NOT BEEN CANCELED  */
@RC01438 DS    0H                                                  1450
@RF01437 TM    WAFIN,B'00100000'                                   1450
         BNZ   @RF01450                                            1450
*     DO;                                                          1451
*       IF WARESP=ON&               /* IF THE SYNTAX IS INVALID      */
*           WAADDRID^=ZEROB THEN    /* AND THE LENGTH WAS ADDED IN   */
         TM    WARESP,B'00010000'                                  1452
         BNO   @RF01452                                            1452
         CLI   WAADDRID,0                                          1452
         BE    @RF01452                                            1452
*         DO;                                                      1453
*           WAADDRID=ZEROB;         /* IND NO PVTMOD ENTRY IN WA     */
         MVI   WAADDRID,X'00'                                      1454
*           WASCVALN=WASCVALN-LENGTH(SCVAMOD);/* SUB LNGTH OF ENTRY  */
         LH    @07,WASCVALN                                        1455
         SH    @07,@CH02963                                        1455
         STH   @07,WASCVALN                                        1455
*         END;                                                     1456
*       IF EOL>TEXTPTR&             /* IF NOT AT END-OF-LINE AND     */
*           INCHAR=RPAREN THEN      /* IF OPERAND WAS ENCLOSED IN    */
@RF01452 L     @07,TEXTPTR                                         1457
         C     @07,EOL                                             1457
         BNL   @RF01457                                            1457
         CLI   INCHAR(@07),C')'                                    1457
         BNE   @RF01457                                            1457
*         TEXTPTR=TEXTPTR+ONE;      /* PAREN, UPDATE PTR PAST IT     */
         AL    @07,@CF00063                                        1458
         ST    @07,TEXTPTR                                         1458
*     END;                                                         1459
*   END PVTMOD;                                                    1460
@EL00025 DS    0H                                                  1460
@EF00025 DS    0H                                                  1460
@ER00025 LM    @14,@12,@SA00025                                    1460
         BR    @14                                                 1460
*                                                                  1461
*/********************************************************************
** THE SHDRPFC COUNTER MUST CONTAIN ONE WHICH MEANS THAT IEAVTSLP IS
** PAGE FIXED BUT THE MODULE IEAVTSLP IS NOT CURRENTLY EXECUTING.  1461
** IF THIS IS THE CASE, A CS TO ZERO IS DONE TO INDICATE SLIP IS NOT
** ACTIVE AND IEAVTSLP IS NOT PAGE FIXED.  THEN A PAGE FREE IS     1461
** DONE.  IF SHDRPFC COUNTER IS GREATER THAN ONE, THEN IEAVTSLP IS 1461
** EXECUTING AND THE MESSAGE IEE732D (RETRY OR CANCEL) IS WRITTEN. 1461
**********************************************************************/
*                                                                  1461
*RELVTSLP:                                                         1461
*   PROC;                                                          1461
RELVTSLP STM   @14,@12,@SA00026                                    1461
*   RFY                                                            1462
*    (R6,                                                          1462
*     R7) RSTD;                                                    1462
*   DO WHILE SHDRPFC^=ZERO&         /* ATTEMPT TO OBTAIN PFC CTR     */
*         WAFIN=OFF;                /* LOOP AS MANY TIMES AS       1463
*                                      REQUESTED UNTIL CTR IS      1463
*                                      OBTAINED OR THE COMMAND IS  1463
*                                      CANCELED                      */
         B     @DE01463                                            1463
@DL01463 DS    0H                                                  1464
*     DO I=ONE TO FIVE              /* ATTEMPT FIVE TIMES BEFORE     */
*           WHILE SHDRPFC^=ZERO;    /* ISSUING RETRY/CANCEL MSG      */
         LA    I,1                                                 1464
@DL01464 L     @09,CVTPTR                                          1464
         L     @09,CVTRTMS(,@09)                                   1464
         ICM   @05,15,SHDRPFC(@09)                                 1464
         BZ    @DC01464                                            1464
*       R6=ONE;                     /* VALUE IF LOADED & NOT IN USE  */
         LA    R6,1                                                1465
*       R7=ZERO;                    /* VALUE IND IEAVTSLP NOT LOADED */
         SLR   R7,R7                                               1466
*       CS(R6,R7,SHDRPFC);          /* ATTEMPT TO OBTAIN PFC CTR     */
         CS    R6,@07,SHDRPFC(@09)                                 1467
*       BC(8,PFCZERO);              /* IF OBTAINED, BR PAST    STIMER*/
         BC    8,PFCZERO                                           1468
*       IF I<FIVE THEN              /* ISSUE STIMER BETWEEN TRYS     */
         CH    I,@CH00723                                          1469
         BNL   @RF01469                                            1469
*         DO;                                                      1470
*           GEN REFS(PAUSE);                                       1471
              STIMER WAIT,BINTVL=PAUSE
*         END;                                                     1472
*PFCZERO:                                                          1473
*       ;                                                          1473
@RF01469 DS    0H                                                  1473
PFCZERO  DS    0H                                                  1474
*     END;                                                         1474
         AL    I,@CF00063                                          1474
         CH    I,@CH00723                                          1474
         BNH   @DL01464                                            1474
@DC01464 DS    0H                                                  1475
*     IF SHDRPFC^=ZERO THEN         /* IF PFC CTR NOT OBTAINED       */
         L     @09,CVTPTR                                          1475
         L     @09,CVTRTMS(,@09)                                   1475
         ICM   @05,15,SHDRPFC(@09)                                 1475
         BZ    @RF01475                                            1475
*       CALL RETRYMSG;              /* ISSUE RETRY/CANCEL MSG -732   */
         BAL   @14,RETRYMSG                                        1476
*   END;                                                           1477
@RF01475 DS    0H                                                  1477
@DE01463 L     @09,CVTPTR                                          1477
         L     @09,CVTRTMS(,@09)                                   1477
         ICM   @05,15,SHDRPFC(@09)                                 1477
         BZ    @DC01463                                            1477
         TM    WAFIN,B'00100000'                                   1477
         BZ    @DL01463                                            1477
@DC01463 DS    0H                                                  1478
*   RFY                                                            1478
*    (R6,                                                          1478
*     R7) UNRSTD;                                                  1478
*   IF WAFIN=OFF THEN               /* IF SHDRPFC CTR OBTAINED       */
         TM    WAFIN,B'00100000'                                   1479
         BNZ   @RF01479                                            1479
*     DO;                                                          1480
*       GEN(LOAD EP=IEAVTSLP);      /* OBTAIN ADDR AND LENGTH        */
         LOAD EP=IEAVTSLP
*       RFY                                                        1482
*        (R0,                                                      1482
*         R1,                                                      1482
*         R6) RSTD;                                                1482
*       R6=R1&MASKHI;               /* LOAD REG6 WITH MOD LENGTH     */
         LR    R6,R1                                               1483
         N     R6,@CF03120                                         1483
*       R6=R6*EIGHT;                /* CONVERT DOUBLEWORD TO BYTE    */
         SLL   R6,3                                                1484
*       ENDAD=R0+R6;                /* CALC ENDING ADDR OF MOD       */
         LR    ENDAD,R0                                            1485
         ALR   ENDAD,R6                                            1485
*       STRTAD=R0;                  /* MOD ADDRESS                   */
         LR    STRTAD,R0                                           1486
*       FIX=OFF;                    /* DO A PGFREE.                  */
         NI    FIX,B'01111111'                                     1487
*       CALL FIXPAGE;               /* GO FREE FIXED PAGES.          */
         BAL   @14,FIXPAGE                                         1488
*       RFY                                                        1489
*        (R0,                                                      1489
*         R1,                                                      1489
*         R6) UNRSTD;                                              1489
*       RFY                                                        1490
*         R15 RSTD;                                                1490
*       GEN(DELETE EP=IEAVTSLP);                                   1491
         DELETE EP=IEAVTSLP
*     END;                                                         1492
*   RFY                                                            1493
*     R15 UNRSTD;                                                  1493
*   END RELVTSLP;                                                  1494
@EL00026 DS    0H                                                  1494
@EF00026 DS    0H                                                  1494
@ER00026 LM    @14,@12,@SA00026                                    1494
         BR    @14                                                 1494
*                                                                  1495
*/********************************************************************
**  THIS SEGMENT UPDATES THE TEXTPTR TO THE NEXT KEYWORD, CALLS    1495
**  IEECB908 TO WRITE THE 728 (INVALID,PROMPT FOR CORRECTION) MESSAGE,
**  OR 736 (MODULE NOT IN THE LPA) MESSAGE,                        1495
**  ANALYZES THE REPLY, AND SAVES AND UPDATES PTRS.                1495
**********************************************************************/
*                                                                  1495
*RESP:                                                             1495
*   PROC;                                                          1495
RESP     STM   @14,@08,@SA00027                                    1495
         STM   @10,@12,@SA00027+44                                 1495
*   DO WHILE WARESP=ON;             /* SCAN TO NEXT KEYWORD          */
         B     @DE01496                                            1496
@DL01496 DS    0H                                                  1497
*     IF TEXTPTR=EOL×               /* IF AT END OF LINE OR THIS     */
*         INCHAR=BLANK THEN         /* CHAR IS BLANK                 */
         L     @05,TEXTPTR                                         1497
         C     @05,EOL                                             1497
         BE    @RT01497                                            1497
         CLI   INCHAR(@05),C' '                                    1497
         BNE   @RF01497                                            1497
@RT01497 DS    0H                                                  1498
*       WARESP=OFF;                 /* YES, GET OUT OF LOOP          */
         NI    WARESP,B'11101111'                                  1498
*     ELSE                          /* NO,                           */
*       IF INCHAR=COMMA THEN        /* IF CHAR IS A COMMA            */
         B     @RC01497                                            1499
@RF01497 L     @05,TEXTPTR                                         1499
         CLI   INCHAR(@05),C','                                    1499
         BNE   @RF01499                                            1499
*         IF WAPAREN=OFF THEN       /* DOES AN OPEN PAREN EXIST      */
         TM    WAPAREN,B'00000100'                                 1500
         BNZ   @RF01500                                            1500
*           WARESP=OFF;             /* NO OPEN PAREN, EXIT LOOP      */
         NI    WARESP,B'11101111'                                  1501
*         ELSE                      /* OPEN PAREN DOES EXIST,        */
*           TEXTPTR=TEXTPTR+ONE;    /* LOOK AT NEXT CHAR             */
         B     @RC01500                                            1502
@RF01500 LA    @05,1                                               1502
         AL    @05,TEXTPTR                                         1502
         ST    @05,TEXTPTR                                         1502
*       ELSE                                                       1503
*         IF INCHAR=RPAREN THEN     /* IF CHAR IS A RIGHT PAREN      */
         B     @RC01499                                            1503
@RF01499 L     @05,TEXTPTR                                         1503
         CLI   INCHAR(@05),C')'                                    1503
         BNE   @RF01503                                            1503
*           DO;                     /* YES,                          */
*             WAPAREN=OFF;          /* IND PAREN CLOSED              */
         NI    WAPAREN,B'11111011'                                 1505
*             TEXTPTR=TEXTPTR+ONE;  /* LOOK AT NEXT CHAR             */
         AL    @05,@CF00063                                        1506
         ST    @05,TEXTPTR                                         1506
*           END;                                                   1507
*         ELSE                      /* NOT A CLOSE PAREN,            */
*           IF INCHAR=LPAREN THEN   /* IF CHAR IS A LEFT PAREN       */
         B     @RC01503                                            1508
@RF01503 L     @05,TEXTPTR                                         1508
         CLI   INCHAR(@05),C'('                                    1508
         BNE   @RF01508                                            1508
*             DO;                   /* YES,                          */
*               WAPAREN=ON;         /* IND PAREN OPEN                */
         OI    WAPAREN,B'00000100'                                 1510
*               TEXTPTR=TEXTPTR+ONE;/* LOOK AT NEXT CHAR             */
         AL    @05,@CF00063                                        1511
         ST    @05,TEXTPTR                                         1511
*             END;                                                 1512
*           ELSE                    /* NOT AN OPEN PAREN,            */
*             TEXTPTR=TEXTPTR+ONE;  /* LOOK AT NEXT CHAR             */
         B     @RC01508                                            1513
@RF01508 LA    @05,1                                               1513
         AL    @05,TEXTPTR                                         1513
         ST    @05,TEXTPTR                                         1513
*   END;                            /* END OF DO-WHILE               */
@RC01508 DS    0H                                                  1514
@RC01503 DS    0H                                                  1514
@RC01499 DS    0H                                                  1514
@RC01497 DS    0H                                                  1514
@DE01496 TM    WARESP,B'00010000'                                  1514
         BO    @DL01496                                            1514
*   REPLYBUF=BLANK;                                                1515
*                                                                  1515
         MVI   REPLYBUF+1,C' '                                     1515
         MVC   REPLYBUF+2(117),REPLYBUF+1                          1515
         MVI   REPLYBUF,C' '                                       1515
*/*  CALL IEECB908 - THE MESSAGE MODULE WILL WRITE THE MESSAGE     1516
*    OUT AND WAIT FOR THE REPLY                                      */
*                                                                  1516
*   IF WARESPL=ON THEN              /* IF 736 MSG TO BE ISSUED       */
         TM    WARESPL,B'00001000'                                 1516
         BNO   @RF01516                                            1516
*     DO;                                                          1517
*       WARESPL=OFF;                /* SET 736MSG IND OFF            */
         NI    WARESPL,B'11110111'                                 1518
*       CALL IEECB908(MSG736,WAUCMP,WAID,WAPVTLPA,REPLYBUF,ECB1);  1519
         LA    @05,@CH03107                                        1519
         ST    @05,@AL00001                                        1519
         LA    @05,WAUCMP                                          1519
         ST    @05,@AL00001+4                                      1519
         LA    @05,WAID                                            1519
         ST    @05,@AL00001+8                                      1519
         LA    @05,WAPVTLPA                                        1519
         ST    @05,@AL00001+12                                     1519
         LA    @05,REPLYBUF                                        1519
         ST    @05,@AL00001+16                                     1519
         LA    @05,ECB1                                            1519
         ST    @05,@AL00001+20                                     1519
         MVI   @AL00001+20,X'80'                                   1519
         L     @15,@CV02993                                        1519
         LA    @01,@AL00001                                        1519
         BALR  @14,@15                                             1519
*     END;                                                         1520
*   ELSE                            /* IF 728 MSG TO BE ISSUED       */
*     DO;                                                          1521
         B     @RC01516                                            1521
@RF01516 DS    0H                                                  1522
*       DO I=8 TO 2 BY-1;           /* REMOVE EQUAL SIGN FROM KEYWORD*/
         LA    I,8                                                 1522
@DL01522 DS    0H                                                  1523
*         IF KEYWORD(I:I)=EQUAL THEN                               1523
         LA    @05,KEYWORD-1(I)                                    1523
         CLI   0(@05),C'='                                         1523
         BNE   @RF01523                                            1523
*           DO;                                                    1524
*             KEYWORD(I:I)=BLANK;                                  1525
         LA    @05,KEYWORD-1(I)                                    1525
         MVI   0(@05),C' '                                         1525
*             I=2;                                                 1526
         LA    I,2                                                 1526
*           END;                                                   1527
*         ELSE                                                     1528
*           IF KEYWORD(I:I)^=BLANK THEN                            1528
         B     @RC01523                                            1528
@RF01523 LA    @05,KEYWORD-1(I)                                    1528
         CLI   0(@05),C' '                                         1528
         BE    @RF01528                                            1528
*             I=2;                                                 1529
         LA    I,2                                                 1529
*       END;                                                       1530
@RF01528 DS    0H                                                  1530
@RC01523 BCTR  I,0                                                 1530
         CH    I,@CH00075                                          1530
         BNL   @DL01522                                            1530
*       CALL IEECB908(MSG728,WAUCMP,KEYWORD,WAID,REPLYBUF,ECB1);   1531
         LA    @05,@CH00737                                        1531
         ST    @05,@AL00001                                        1531
         LA    @05,WAUCMP                                          1531
         ST    @05,@AL00001+4                                      1531
         LA    @05,KEYWORD                                         1531
         ST    @05,@AL00001+8                                      1531
         LA    @05,WAID                                            1531
         ST    @05,@AL00001+12                                     1531
         LA    @05,REPLYBUF                                        1531
         ST    @05,@AL00001+16                                     1531
         LA    @05,ECB1                                            1531
         ST    @05,@AL00001+20                                     1531
         MVI   @AL00001+20,X'80'                                   1531
         L     @15,@CV02993                                        1531
         LA    @01,@AL00001                                        1531
         BALR  @14,@15                                             1531
*     END;                                                         1532
*   RFY                                                            1533
*     IN BASED(REPLY);                                             1533
@RC01516 DS    0H                                                  1534
*   RFY                                                            1534
*     R15 RSTD;                                                    1534
*   IF R15=ZERO THEN                /* IF THE MSG MOD WAS SUCC       */
         LTR   R15,R15                                             1535
         BNZ   @RF01535                                            1535
*     IF INCHAR^=BLANK THEN         /* IF THE REPLY IS NOT NULL      */
         CLI   INCHAR(REPLY),C' '                                  1536
         BE    @RF01536                                            1536
*       IF IN(1:6)=CANCEL THEN      /* IF THE REPLY IS CANCEL,       */
         CLC   IN(6,REPLY),@CC03154                                1537
         BNE   @RF01537                                            1537
*         DO;                       /* INFORM ISSUER ITS ACCEPTED    */
*           CALL IEECB908(MSG756,WAUCMP,SLIP);                     1539
         MVC   @AL00001(12),@AL01539                               1539
         LA    @14,WAUCMP                                          1539
         ST    @14,@AL00001+4                                      1539
         L     @15,@CV02993                                        1539
         LA    @01,@AL00001                                        1539
         BALR  @14,@15                                             1539
*           WAFIN=ON;               /* TERMIANTE THE COMMAND         */
         OI    WAFIN,B'00100000'                                   1540
*         END;                                                     1541
*       ELSE                        /* REPLY IS NOT CANCEL           */
*         DO;                                                      1542
         B     @RC01537                                            1542
@RF01537 DS    0H                                                  1543
*           IF NXTOP=ZERO THEN      /* IF RESUME ADDR OF MAIN TEXT   */
         ICM   @14,15,NXTOP                                        1543
         BNZ   @RF01543                                            1543
*             DO;                   /* WAS NOT PREVIOUSLY SAVED      */
*               NXTOP=TEXTPTR;      /* SAVE PTR TO NEXT KEYWORD      */
         MVC   NXTOP(4),TEXTPTR                                    1545
*               SAVEEOL=EOL;        /* SAVE END-OF-LINE INDICATOR    */
         L     SAVEEOL,EOL                                         1546
*             END;                                                 1547
*           ELSE                                                   1548
*             ;                                                    1548
@RF01543 DS    0H                                                  1549
*           TEXTPTR=REPLY;          /* RESET PTR TO PROCESS REPLY    */
         ST    REPLY,TEXTPTR                                       1549
*           EOL=REPLY+LENGTH(REPLYBUF);/* RESET END-OF-LINE IND      */
         LA    @14,119                                             1550
         ALR   @14,REPLY                                           1550
         ST    @14,EOL                                             1550
*         END;                                                     1551
*     ELSE                          /* IF REPLY IS NULL AND PTR TO   */
*       IF NXTOP^=ZERO THEN         /* NEXT KEYWORD HAD BEEN SAVED   */
         B     @RC01536                                            1552
@RF01536 L     @14,NXTOP                                           1552
         SLR   @08,@08                                             1552
         CR    @14,@08                                             1552
         BE    @RF01552                                            1552
*         DO;                                                      1553
*           TEXTPTR=NXTOP;          /* RESTORE PTR WITH SAVED ADDR   */
         ST    @14,TEXTPTR                                         1554
*           NXTOP=ZERO;             /* RESET                         */
         ST    @08,NXTOP                                           1555
*           EOL=SAVEEOL;            /* RESTORE END-OF-LINE IND       */
         ST    SAVEEOL,EOL                                         1556
*         END;                                                     1557
*       ELSE                                                       1558
*         ;                                                        1558
@RF01552 DS    0H                                                  1559
*   ELSE                            /* IF MSG MOD WAS NOT SUCC       */
*     WAFIN=ON;                     /* TERMINATE THE COMMAND         */
         B     @RC01535                                            1559
@RF01535 OI    WAFIN,B'00100000'                                   1559
*   RFY                                                            1560
*     R15 UNRSTD;                                                  1560
*   RFY                                                            1561
*     IN BASED(TEXTPTR);                                           1561
*   END RESP;                                                      1562
@EL00027 DS    0H                                                  1562
@EF00027 DS    0H                                                  1562
@ER00027 LM    @14,@08,@SA00027                                    1562
         LM    @10,@12,@SA00027+44                                 1562
         BR    @14                                                 1562
*                                                                  1563
*/********************************************************************
**   THIS SEGMENT IS CALLED WHEN AN ATTEMPT FOR A SEQUENCING BYTE OR
**   WORD FAILED AND THE ISSUER MUST BE PROMPTED AS TO WHETHER HE  1563
**   WANTS TO RETRY (MAKE ANOTHER ATTEMPT TO OBTAIN THE SEQ BYTE OR
**   WORD) OR CANCEL (TERMINATE THE COMMAND). THE MESSAGE IS IEE732D.
**********************************************************************/
*                                                                  1563
*RETRYMSG:                                                         1563
*   PROC;                                                          1563
RETRYMSG STM   @14,@12,@SA00028                                    1563
*   BADREPLY=ON;                    /* INIT TO ISSUER MSG 1ST TIME   */
         OI    BADREPLY,B'10000000'                                1564
*   DO WHILE WAFIN=OFF&             /* ISSUE MSG UNTIL REPLY IS      */
*         BADREPLY=ON;              /* ACCEPTABLE                    */
         B     @DE01565                                            1565
@DL01565 DS    0H                                                  1566
*     REPLYBUF=BLANK;               /* CLEAR REPLY BUFFER            */
         MVI   REPLYBUF+1,C' '                                     1566
         MVC   REPLYBUF+2(117),REPLYBUF+1                          1566
         MVI   REPLYBUF,C' '                                       1566
*     CALL IEECB908(MSG732,WAUCMP,MSGVAR1,MSGVAR2,REPLYBUF,ECB1);  1567
         LA    @09,@CH00033                                        1567
         ST    @09,@AL00001                                        1567
         LA    @09,WAUCMP                                          1567
         ST    @09,@AL00001+4                                      1567
         LA    @09,MSGVAR1                                         1567
         ST    @09,@AL00001+8                                      1567
         LA    @09,MSGVAR2                                         1567
         ST    @09,@AL00001+12                                     1567
         LA    @09,REPLYBUF                                        1567
         ST    @09,@AL00001+16                                     1567
         LA    @09,ECB1                                            1567
         ST    @09,@AL00001+20                                     1567
         MVI   @AL00001+20,X'80'                                   1567
         L     @15,@CV02993                                        1567
         LA    @01,@AL00001                                        1567
         BALR  @14,@15                                             1567
*     RFY                                                          1568
*       IN BASED(REPLY);                                           1568
*     RFY                                                          1569
*       R15 RSTD;                                                  1569
*     IF R15=ZERO THEN              /* IF MSG MOD SUCC               */
         LTR   R15,R15                                             1570
         BNZ   @RF01570                                            1570
*       IF IN(1:6)=CANCEL THEN      /* IF THE REPLY IS CANCEL        */
         CLC   IN(6,REPLY),@CC03154                                1571
         BNE   @RF01571                                            1571
*         DO;                       /* INFORM ISSUER ITS ACCEPTED    */
*           CALL IEECB908(MSG756,WAUCMP,SLIP);                     1573
         MVC   @AL00001(12),@AL01573                               1573
         LA    @14,WAUCMP                                          1573
         ST    @14,@AL00001+4                                      1573
         L     @15,@CV02993                                        1573
         LA    @01,@AL00001                                        1573
         BALR  @14,@15                                             1573
*           WAFIN=ON;               /* TERMINATE THE COMMAND         */
         OI    WAFIN,B'00100000'                                   1574
*         END;                      /* IF NOT CANCEL                 */
*       ELSE                        /* IF THE REPLY IS RETRY         */
*         IF IN(1:5)=RETRY THEN     /* TRY TO OBTAIN AGAIN           */
         B     @RC01571                                            1576
@RF01571 CLC   IN(5,REPLY),@CC03152                                1576
         BNE   @RF01576                                            1576
*           BADREPLY=OFF;           /* IF RC FROM MSG MOD IS BAD     */
         NI    BADREPLY,B'01111111'                                1577
*         ELSE                                                     1578
*           ;                       /* TERMINATE THE COMMAND         */
@RF01576 DS    0H                                                  1579
*     ELSE                                                         1579
*       WAFIN=ON;                                                  1579
         B     @RC01570                                            1579
@RF01570 OI    WAFIN,B'00100000'                                   1579
*     RFY                                                          1580
*       R15 UNRSTD;                                                1580
@RC01570 DS    0H                                                  1581
*     RFY                                                          1581
*       IN BASED(TEXTPTR);                                         1581
*   END;                                                           1582
@DE01565 TM    WAFIN,B'00100000'                                   1582
         BNZ   @DC01565                                            1582
         TM    BADREPLY,B'10000000'                                1582
         BO    @DL01565                                            1582
@DC01565 DS    0H                                                  1583
*   END RETRYMSG;                                                  1583
@EL00028 DS    0H                                                  1583
@EF00028 DS    0H                                                  1583
@ER00028 LM    @14,@12,@SA00028                                    1583
         BR    @14                                                 1583
*                                                                  1584
*/********************************************************************
**   SCAN WILL SCAN THE CHAR STRING POINTED TO BY THE TEXTPTR      1584
**   USING A TRANSLATE -AND-TEST TABLE.  THE SCAN WILL STOP ON ANY 1584
**   NON-ALPHANUMERIC CHARACTER. THE ONLY ACCEPTABLE NON-ALPHANUMERIC
**   CHARS ARE A BLANK, A COMMA, AND A RIGHT PARENTHESIS. THE RIGHT
**   PAREN IS ONLY ACCEPTABLE IF A LEFT PAREN PRECEEDED IT AND A   1584
**   COMMA, BLANK, OR END-OF-LINE CONDITION IS FOUND ON THE NEXT CHAR.
**   THE LENGTH OF THE DATA SCANNED (DATALN), A PTR TO THE FIRST   1584
**   CHAR(TEXTPTR) AND A PTR TO THE NON-ALPHANUMERIC STOPPED ON ARE
**   SUPPLIED TO THE CALLER.                                       1584
**********************************************************************/
*                                                                  1584
*SCAN:                                                             1584
*   PROC;                                                          1584
SCAN     STM   @14,@12,@SA00029                                    1584
*   IF EOL<TEXTPTR+ONE×             /* IF AT THE END OF THE BUFFER   */
*       INCHAR=BLANK THEN           /* OR CHAR IS A BLANK            */
         L     @05,TEXTPTR                                         1585
         LA    @15,1                                               1585
         ALR   @15,@05                                             1585
         C     @15,EOL                                             1585
         BH    @RT01585                                            1585
         CLI   INCHAR(@05),C' '                                    1585
         BNE   @RF01585                                            1585
@RT01585 DS    0H                                                  1586
*     IF NXTOP=ZERO THEN            /* CHECK IF PROCESSING MAIN      */
         ICM   @05,15,NXTOP                                        1586
         BNZ   @RF01586                                            1586
*       DO;                         /* ASK FOR ADDITIONAL OPERANDS   */
*/********************************************************************
**   MULTIWTO IS CALLED WHEN A BLANK OR END-OF-LINE IS REACHED ON A
**   SLIP SET COMMAND AND END KEYWORD HAS NOT BEEN ENTERED YET.    1588
**   MULTIWTO SEND OUT THE MESSAGES IEE725I AND IEE726D TO THE ISSUER.
**   IEE725I IS A MULTI-LINE WTO WHICH SHOWS THE ISSUER WHAT DATA HAS
**   BEEN ENTERED SUCCESSFULLY FOR THIS TRAP AND ALSO ANY DEFAULTS 1588
**   FOR KEYWORDS NOT ENTERED SUCCESSFULLY YET. IT SHOWS WHAT THE  1588
**   TRAP WOULD LOOK LIKE IF THE ISSUER WERE TO ENTER THE END KEYWORD
**   TO IEE726D. IEE726D IS THE PROMPTING MESSAGE (WTOR) FOR       1588
**   ADDITIONAL KEYWORDS.                                          1588
**********************************************************************/
*                                                                  1588
*         IF SESTSET=ON THEN        /* IF SETTING A TRAP             */
         LA    @05,STAE906                                         1588
         TM    SESTSET(@05),B'00010000'                            1588
         BNO   @RF01588                                            1588
*           DO;                                                    1589
*             EDEFAULT=OFF;                                        1590
         NI    EDEFAULT,B'01111111'                                1590
*             MDEFAULT=OFF;                                        1591
         NI    MDEFAULT,B'01111111'                                1591
*             IF SCERRTYP=ZEROB THEN/* IF ERRTYP HAS NOT BEEN SPEC   */
         L     @05,SCEPTR(,@05)                                    1592
         CLI   SCERRTYP(@05),0                                     1592
         BNE   @RF01592                                            1592
*               DO;                                                1593
*                 SCERRTYP=FF;      /* SET DEFAULT -ALL              */
         MVI   SCERRTYP(@05),X'FF'                                 1594
*                 EDEFAULT=ON;      /* IND ERRTYP DEFAULT USED       */
         OI    EDEFAULT,B'10000000'                                1595
*               END;                                               1596
*             IF SCEMODE=ZEROH&     /* IF MODE HAS NOT BEEN SPEC     */
*                 SCEEVERY=OFF THEN                                1597
@RF01592 LA    @05,STAE906                                         1597
         L     @05,SCEPTR(,@05)                                    1597
         CLC   SCEMODE(2,@05),@CB03166                             1597
         BNE   @RF01597                                            1597
         TM    SCEEVERY(@05),B'00100000'                           1597
         BNZ   @RF01597                                            1597
*               DO;                                                1598
*                 SCEMODE=FFFF;     /* SET DEFAULT -ALL,ANY          */
         MVC   SCEMODE(2,@05),@CB03170                             1599
*                 MDEFAULT=ON;      /* IND MODE DEFAULT USED         */
         OI    MDEFAULT,B'10000000'                                1600
*               END;                                               1601
*             IF SCEWAIT=OFF&       /* IF WAIT NOR IGNORE NOT SET    */
*                 SCENODMP=OFF&     /*                       @G33NPHE*/
*                 SCEIGNOR=OFF THEN                                1602
@RF01597 LA    @05,STAE906                                         1602
         L     @05,SCEPTR(,@05)                                    1602
         TM    SCEWAIT(@05),B'00001110'                            1602
         BNZ   @RF01602                                            1602
*               SCESVCD=ON;         /* ENSURE DEFAULT ACTION SVCD    */
         OI    SCESVCD(@05),B'00010000'                            1603
*             IF WADISABL=ON THEN   /* IF DISABLE SPEC               */
@RF01602 TM    WADISABL,B'01000000'                                1604
         BNO   @RF01604                                            1604
*               SCEDSABL=ON;        /* IND DISABLE                   */
         LA    @05,STAE906                                         1605
         L     @05,SCEPTR(,@05)                                    1605
         OI    SCEDSABL(@05),B'10000000'                           1605
*             SCEID=WAID;           /* PUT ID INTO SCE FOR CB907     */
@RF01604 LA    @05,STAE906                                         1606
         L     @05,SCEPTR(,@05)                                    1606
         MVC   SCEID(4,@05),WAID                                   1606
*             IF WASCVALN>ZERO THEN /* IF SCVA KEYWORDS HAVE BEEN    */
         ICM   @05,3,WASCVALN                                      1607
         BNP   @RF01607                                            1607
*               DO;                 /* SPECIFIED, INCLUDE WA         */
*                 IF WACOMPID=ZERO THEN/* IF COMP NOT SPECIFIED      */
         CLI   WACOMPID,0                                          1609
         BNE   @RF01609                                            1609
*                   WACOMPB=EIGHT;  /* IND WACOMP LENGTH FOR CB907   */
         MVI   WACOMPB,X'08'                                       1610
*                 IF WAJOBID=ZERO THEN/* IF JOBNAME NOT SPECIFIED    */
@RF01609 CLI   WAJOBID,0                                           1611
         BNE   @RF01611                                            1611
*                   WAJOBLN=NINE;   /* IND WAJOBNAM LENGTH FOR 907   */
         MVI   WAJOBLN,X'09'                                       1612
*                 IF WAJSPID=ZERO THEN/* IF JSPGM NOT SPECIFIED      */
@RF01611 CLI   WAJSPID,0                                           1613
         BNE   @RF01613                                            1613
*                   WAJSPLN=NINE;   /* IND WAJSPGM LNGTH FOR CB907   */
         MVI   WAJSPLN,X'09'                                       1614
*                 IF WAADDRID=ZERO THEN/* IF ADDR/PVT/LPAMOD NOT SPEC*/
@RF01613 CLI   WAADDRID,0                                          1615
         BNE   @RF01615                                            1615
*                   WAADDRLN=SEVNTEEN;/* IND WAADDR LENGTH FOR CB907 */
         MVI   WAADDRLN,X'11'                                      1616
*                 IF WAASIDID=ZERO THEN/* IF ASID NOT SPECIFIED      */
@RF01615 CLI   WAASIDID,0                                          1617
         BNE   @RF01617                                            1617
*                   WAASIDNO=THIRTY4;/* IND WAASID LENGTH FOR CB907  */
         MVI   WAASIDNO,X'22'                                      1618
*                 WAEND=SCVIDLST;   /* IND LAST ENTRY FOR CB907      */
@RF01617 MVI   WAEND,X'01'                                         1619
*                 SCESCVA=ADDR(WACOMP)-LENGTH(SCVAHDR);/* POINT SCE
*                                      TO WA                         */
         LA    @05,STAE906                                         1620
         L     @05,SCEPTR(,@05)                                    1620
         LA    @15,WACOMP                                          1620
         SH    @15,@CH00061                                        1620
         ST    @15,SCESCVA(,@05)                                   1620
*               END;                                               1621
*             CALL WRITE725;                                       1622
@RF01607 BAL   @14,WRITE725                                        1622
*             SCESCVA=ZERO;         /* RESTORE IND SHOWING NO SCVA   */
         SLR   @05,@05                                             1623
         LA    @15,STAE906                                         1623
         L     @15,SCEPTR(,@15)                                    1623
         ST    @05,SCESCVA(,@15)                                   1623
*             SCEID=ZERO;                                          1624
         ST    @05,SCEID(,@15)                                     1624
*             IF EDEFAULT=ON THEN   /* IF ERRTYP DEFAULT SET         */
         TM    EDEFAULT,B'10000000'                                1625
         BNO   @RF01625                                            1625
*               SCERRTYP=ZEROB;     /* SET FLAGS OFF                 */
         MVI   SCERRTYP(@15),X'00'                                 1626
*             IF MDEFAULT=ON THEN   /* IF MODE DEFAULT SET           */
@RF01625 TM    MDEFAULT,B'10000000'                                1627
         BNO   @RF01627                                            1627
*               SCEMODE=ZEROH;      /* SET FLAGS OFF                 */
         LA    @05,STAE906                                         1628
         L     @05,SCEPTR(,@05)                                    1628
         MVC   SCEMODE(2,@05),@CB03166                             1628
*           END;                                                   1629
@RF01627 DS    0H                                                  1630
*         TEXTPTR=NEWLINE;          /* SETUP PTR TO TEXT             */
@RF01588 L     @05,NEWLINE                                         1630
         ST    @05,TEXTPTR                                         1630
*         INCHAR=BLANK;             /* SET FOR DO WHILE TEST         */
         MVI   INCHAR(@05),C' '                                    1631
*         DO WHILE WAFIN=OFF&       /* PROMPT FOR A NEW LINE UNTIL   */
*               INCHAR=BLANK;       /* A NON-NULL REPLY OR ERROR     */
         B     @DE01632                                            1632
@DL01632 DS    0H                                                  1633
*           TEXTPTR=NEWLINE;        /* SETUP PTR TO TEXT             */
         MVC   TEXTPTR(4),NEWLINE                                  1633
*           NLINEBUF=BLANK;         /* CLEAR REPLY AREA              */
         MVI   NLINEBUF+1,C' '                                     1634
         MVC   NLINEBUF+2(117),NLINEBUF+1                          1634
         MVI   NLINEBUF,C' '                                       1634
*           CALL IEECB908(MSG726,WAUCMP,MSGVAR1,MSGVAR2,NLINEBUF,ECB1);
         LA    @05,@CH00063                                        1635
         ST    @05,@AL00001                                        1635
         LA    @05,WAUCMP                                          1635
         ST    @05,@AL00001+4                                      1635
         LA    @05,MSGVAR1                                         1635
         ST    @05,@AL00001+8                                      1635
         LA    @05,MSGVAR2                                         1635
         ST    @05,@AL00001+12                                     1635
         LA    @05,NLINEBUF                                        1635
         ST    @05,@AL00001+16                                     1635
         LA    @05,ECB1                                            1635
         ST    @05,@AL00001+20                                     1635
         MVI   @AL00001+20,X'80'                                   1635
         L     @15,@CV02993                                        1635
         LA    @01,@AL00001                                        1635
         BALR  @14,@15                                             1635
*           IF R15=ZERO THEN                                       1636
         LTR   R15,R15                                             1636
         BNZ   @RF01636                                            1636
*             DO;                                                  1637
*               IF IN(1:6)=CANCEL THEN/* IF CANCEL ENTERED           */
         L     @05,TEXTPTR                                         1638
         CLC   IN(6,@05),@CC03154                                  1638
         BNE   @RF01638                                            1638
*                 DO;                                              1639
*                   CALL IEECB908(MSG756,WAUCMP,SLIP);/* INFORM    1640
*                                      ISSUER                        */
         MVC   @AL00001(12),@AL01640                               1640
         LA    @05,WAUCMP                                          1640
         ST    @05,@AL00001+4                                      1640
         L     @15,@CV02993                                        1640
         LA    @01,@AL00001                                        1640
         BALR  @14,@15                                             1640
*                   WAFIN=ON;       /* TERMINATE THE COMMAND         */
         OI    WAFIN,B'00100000'                                   1641
*                 END;                                             1642
*               ELSE                /* IF CANCEL NOT ENTERED         */
*                 DO;                                              1643
         B     @RC01638                                            1643
@RF01638 DS    0H                                                  1644
*                   EOL=TEXTPTR+LENGTH(NLINEBUF);/* SETUP EOL IND    */
         L     @05,TEXTPTR                                         1644
         LA    @15,119                                             1644
         ALR   @15,@05                                             1644
         ST    @15,EOL                                             1644
*                   NXTOP=ZERO;     /* ENSURE IT'S CLEAR             */
         SLR   @15,@15                                             1645
         ST    @15,NXTOP                                           1645
*                   IF INCHAR=COMMA THEN/* IF FIRST CHARACTER COMMA  */
         CLI   INCHAR(@05),C','                                    1646
         BNE   @RF01646                                            1646
*                     TEXTPTR=TEXTPTR+ONE;/* UPDATE POINTER          */
         AL    @05,@CF00063                                        1647
         ST    @05,TEXTPTR                                         1647
*                 END;                                             1648
*             END;                                                 1649
*           ELSE                    /* IF MSG MOD WAS UNSUCCESSFUL   */
*             WAFIN=ON;             /* TERMINATE THE COMMAND         */
         B     @RC01636                                            1650
@RF01636 OI    WAFIN,B'00100000'                                   1650
*         END;                      /* END OF DO-WHILE               */
@RC01636 DS    0H                                                  1651
@DE01632 TM    WAFIN,B'00100000'                                   1651
         BNZ   @DC01632                                            1651
         L     @05,TEXTPTR                                         1651
         CLI   INCHAR(@05),C' '                                    1651
         BE    @DL01632                                            1651
@DC01632 DS    0H                                                  1652
*       END;                                                       1652
*     ELSE                          /* IF PROCESSING AN ERR REPLY    */
*       DO;                                                        1653
         B     @RC01586                                            1653
@RF01586 DS    0H                                                  1654
*         DATALN=ZERO;              /* IND NO MORE OPERANDS          */
         SLR   @05,@05                                             1654
         STH   @05,DATALN                                          1654
*         WARESP=ON;                /* IND INVALID SYNTAX            */
         OI    WARESP,B'00010000'                                  1655
*       END;                                                       1656
*   IF WAFIN=OFF&                   /* IF EVERYTHING IS OKAY         */
*       WARESP=OFF THEN                                            1657
@RC01586 DS    0H                                                  1657
@RF01585 TM    WAFIN,B'00110000'                                   1657
         BNZ   @RF01657                                            1657
*     DO;                                                          1658
*       RFY                                                        1659
*        (R1,                                                      1659
*         R2) RSTD;                                                1659
*       R2=ZERO;                    /* INIT FOR TRT RETURN CODE      */
         SLR   R2,R2                                               1660
*       DATALN=EOL-TEXTPTR;         /* LENGTH OF BUFFER LEFT         */
         L     @05,EOL                                             1661
         SL    @05,TEXTPTR                                         1661
         STH   @05,DATALN                                          1661
*       TRT(IN(1:DATALN),SCANTAB);  /* SCAN LINE FOR NON-ALPHANUM    */
         L     @03,TEXTPTR                                         1662
         LH    @05,DATALN                                          1662
         BCTR  @05,0                                               1662
         L     @15,@CA02932                                        1662
         EX    @05,@SB03453                                        1662
*       BC(8,EOLHIT);               /* IF NONE FOUND, EXIT           */
         BC    8,EOLHIT                                            1663
*       SCANPTR=R1;                 /* SAVE ADDR OF NON-ALPHANUM     */
         ST    R1,SCANPTR                                          1664
*       DATALN=SCANPTR-TEXTPTR;     /* CALC LENGTH OF ALPHANUMERIC   */
         L     @05,SCANPTR                                         1665
         LR    @03,@05                                             1665
         SL    @03,TEXTPTR                                         1665
         STH   @03,DATALN                                          1665
*       RFY                                                        1666
*         IN BASED(SCANPTR);                                       1666
*       IF R2=ONE THEN              /* IF BLANK,COMMA,OR PAREN       */
         LA    @03,1                                               1667
         CR    R2,@03                                              1667
         BNE   @RF01667                                            1667
*         IF INCHAR=RPAREN THEN     /* IF SO, CHECK IF RIGHT PAREN   */
         CLI   INCHAR(@05),C')'                                    1668
         BNE   @RF01668                                            1668
*           IF WAPAREN=ON&          /* IF SO, THEN IF PAREN OPEN     */
*               (EOL=SCANPTR+ONE×   /* AND EITHER AT END-OF-LINE OR  */
*               INCHAR2=COMMA×      /* A BLANK OR A COMMA FOLLOW     */
*               INCHAR2=BLANK) THEN                                1669
         TM    WAPAREN,B'00000100'                                 1669
         BNO   @RF01669                                            1669
         ALR   @03,@05                                             1669
         C     @03,EOL                                             1669
         BE    @RT01669                                            1669
         CLI   INCHAR2(@05),C','                                   1669
         BE    @RT01669                                            1669
         CLI   INCHAR2(@05),C' '                                   1669
         BNE   @RF01669                                            1669
@RT01669 DS    0H                                                  1670
*             WAPAREN=OFF;          /* SYNTAX OK, IND PAREN CLOSED   */
         NI    WAPAREN,B'11111011'                                 1670
*           ELSE                    /* IF RIGHT PAREN OUT OF PLACE   */
*             DO;                                                  1671
         B     @RC01669                                            1671
@RF01669 DS    0H                                                  1672
*               WARESP=ON;          /* IND INVALID SYNTAX            */
         OI    WARESP,B'00010000'                                  1672
*               DATALN=DATALN+ONE;  /* INCLUDE RIGHT PAREN IN LN     */
         LH    @05,DATALN                                          1673
         LA    @05,1(,@05)                                         1673
         STH   @05,DATALN                                          1673
*             END;                                                 1674
*         ELSE                                                     1675
*           ;                       /* IF BLANK OR COMMA, OKAY       */
@RF01668 DS    0H                                                  1676
*       ELSE                        /* IF NOT A BLANK/COMMA/RPAREN   */
*         DO;                                                      1676
         B     @RC01667                                            1676
@RF01667 DS    0H                                                  1677
*           WARESP=ON;              /* IND INVALID SYNTAX            */
         OI    WARESP,B'00010000'                                  1677
*           DATALN=DATALN+ONE;      /* INCLUDE INVALID CHAR IN LN    */
         LH    @05,DATALN                                          1678
         LA    @05,1(,@05)                                         1678
         STH   @05,DATALN                                          1678
*         END;                                                     1679
*       RFY                                                        1680
*        (R1,                                                      1680
*         R2) UNRSTD;                                              1680
@RC01667 DS    0H                                                  1681
*       RFY                                                        1681
*         IN BASED(TEXTPTR);                                       1681
*EOLHIT:                                                           1682
*       ;                                                          1682
EOLHIT   DS    0H                                                  1683
*     END;                                                         1683
*   END SCAN;                                                      1684
@EL00029 DS    0H                                                  1684
@EF00029 DS    0H                                                  1684
@ER00029 LM    @14,@12,@SA00029                                    1684
         BR    @14                                                 1684
*                                                                  1685
*/********************************************************************
**   SETUP ESTAE ENVIRONMENT                                       1685
**********************************************************************/
*                                                                  1685
*SETESTAE:                                                         1685
*   PROC;                                                          1685
SETESTAE STM   @14,@12,@SA00030                                    1685
*   CSCBADDR=CSCBPTR;               /* INIT PARM LIST FOR IEECB860   */
         LA    @08,STAE906                                         1686
         MVC   CSCBADDR(4),CSCBPTR(@08)                            1686
*   BUFPTR=ADDR(STAEBUF);                                          1687
         LA    @08,STAEBUF                                         1687
         ST    @08,BUFPTR                                          1687
*   GEN SETS(R0,R1)(LOAD EP=IEECB860);                             1688
         LOAD EP=IEECB860
*   RFY                                                            1689
*    (R0,                                                          1689
*     R1,                                                          1689
*     R13,                                                         1689
*     R15) RSTD;                                                   1689
*   R1=ADDR(STAE860);                                              1690
         LA    R1,STAE860                                          1690
*   R15=R0;                                                        1691
         LR    R15,R0                                              1691
*   GENERATE;                                                      1692
       STM   R2,R12,0(R13)    SAVE REGS
       BALR  R14,R15    BRANCH TO IEECB860
       LM    R2,R12,0(R13)    RESTORE REGS
*   IF R15=ZERO THEN                /* IF IEECB860 ESTAE SET         */
         LTR   R15,R15                                             1693
         BNZ   @RF01693                                            1693
*     DO;                                                          1694
*       SESTSLP=ON;                 /* SETUP IEECB906 ESTAE PARM     */
         LA    @14,STAE906                                         1695
         OI    SESTSLP(@14),B'10000000'                            1695
*       STAELST(1:STAELN)=STAEFRM(1:STAELN);                       1696
         L     @08,STAELN                                          1696
         BCTR  @08,0                                               1696
         EX    @08,@SM03455                                        1696
*       R1=ADDR(STAELST);                                          1697
         LA    R1,STAELST                                          1697
*       RFY                                                        1698
*        (R2,                                                      1698
*         R3) RSTD;                                                1698
*       R2=ADDR(IEECB906);                                         1699
         L     R2,@CV02991                                         1699
*       R3=ADDR(STAE906);                                          1700
         LR    R3,@14                                              1700
*       GENERATE REFS(IEECB906,SESTAE,R1,R2,R3)                    1701
*           (ESTAE (R2),PARAM=(R3),MF=(E,(1)));                    1701
         ESTAE (R2),PARAM=(R3),MF=(E,(1))
*       IF R15^=ZERO THEN                                          1702
         LTR   R15,R15                                             1702
         BZ    @RF01702                                            1702
*         GEN(ABEND 102);                                          1703
         ABEND 102
*       RFY                                                        1704
*        (R0,                                                      1704
*         R1,                                                      1704
*         R2,                                                      1704
*         R3,                                                      1704
*         R13,                                                     1704
*         R15) UNRSTD;                                             1704
@RF01702 DS    0H                                                  1705
*     END;                                                         1705
*   ELSE                                                           1706
*     GEN(ABEND 102);                                              1706
         B     @RC01693                                            1706
@RF01693 DS    0H                                                  1706
         ABEND 102
*   END SETESTAE;                                                  1707
@EL00030 DS    0H                                                  1707
@EF00030 DS    0H                                                  1707
@ER00030 LM    @14,@12,@SA00030                                    1707
         BR    @14                                                 1707
*                                                                  1708
*/********************************************************************
**   THIS SEGMENT CALLS IEECB907, DISPLAY SLIP, TO WRITE THE MLWTO 1708
**   IEE725I MESSAGE. AS INPUT, CB907 IS SENT REGISTER ONE POINTING
**   TO THE SCE BEING BUILT. IF SCVA KEYWORDS HAVE BEEN ENTERED,   1708
**   THE SCESCVA POINTER HAS THE ADDRESS OF THE WA WORKAREA WHERE  1708
**   THESE KEYWORD VALUES ARE STORED. SINCE THE CONTENTS OF REGISTER
**   TWO ARE NOT CHANGED BY IEECB907, REGISTER THIRTEEN IS SAVED   1708
**   THERE. THE CALL TO IEECB907 WAS CODED IN A PROC TO SAVE THE   1708
**   CONTENTS OF REGISTERS SINCE IEECB907 DOESN'T.                 1708
**********************************************************************/
*                                                                  1708
*WRITE725:                                                         1708
*   PROC;                                                          1708
WRITE725 STM   @14,@12,@SA00031                                    1708
*   RFY                                                            1709
*    (R1,                                                          1709
*     R2,                                                          1709
*     R13) RSTD;                                                   1709
*   R2=R13;                                                        1710
         LR    R2,R13                                              1710
*   R1=SCEPTR;                                                     1711
         LA    @05,STAE906                                         1711
         L     R1,SCEPTR(,@05)                                     1711
*   CALL IEECB907;                                                 1712
         L     @15,@CV02992                                        1712
         BALR  @14,@15                                             1712
*   R13=R2;                                                        1713
         LR    R13,R2                                              1713
*   RFY                                                            1714
*    (R1,                                                          1714
*     R2,                                                          1714
*     R13) UNRSTD;                                                 1714
*   END WRITE725;                                                  1715
@EL00031 DS    0H                                                  1715
@EF00031 DS    0H                                                  1715
@ER00031 LM    @14,@12,@SA00031                                    1715
         BR    @14                                                 1715
*   END IEECB905                                                   1716
*                                                                  1716
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (PROLOG  )                                       */
*/*%INCLUDE SYSLIB  (DCLS    )                                       */
*/*%INCLUDE SYSLIB  (CVT     )                                       */
*/*%INCLUDE SYSLIB  (IHAPSA  )                                       */
*/*%INCLUDE SYSLIB  (IHAPVT  )                                       */
*/*%INCLUDE SYSLIB  (IHASDWA )                                       */
*/*%INCLUDE SYSLIB  (IKJTCB  )                                       */
*/*%INCLUDE SYSLIB  (IHARB   )                                       */
*/*%INCLUDE SYSLIB  (IKJRB   )                                       */
*/*%INCLUDE SYSLIB  (IEECHAIN)                                       */
*/*%INCLUDE SYSLIB  (IHASHDR )                                       */
*/*%INCLUDE SYSLIB  (IHASCE  )                                       */
*/*%INCLUDE SYSLIB  (IHASCVA )                                       */
*/*%INCLUDE SYSLIB  (IEEXSA  )                                       */
*/*%INCLUDE SYSLIB  (IEZWPL  )                                       */
*/*%INCLUDE SYSLIB  (IHACDE  )                                       */
*/*%INCLUDE SYSLIB  (IHAXTLST)                                       */
*/*%INCLUDE SYSLIB  (IHALPDE )                                       */
*/*%INCLUDE SYSLIB  (IEEZB906)                                       */
*/*%INCLUDE SYSLIB  (IHAFRRS )                                       */
*/*%INCLUDE SYSLIB  (SET     )                                       */
*/*%INCLUDE SYSLIB  (GETSCE  )                                       */
*/*%INCLUDE SYSLIB  (MOD     )                                       */
*/*%INCLUDE SYSLIB  (SCEUPDAT)                                       */
*/*%INCLUDE SYSLIB  (DEL     )                                       */
*/*%INCLUDE SYSLIB  (DELETSCE)                                       */
*/*%INCLUDE SYSLIB  (ACTION  )                                       */
*/*%INCLUDE SYSLIB  (ADDRESS )                                       */
*/*%INCLUDE SYSLIB  (ASID    )                                       */
*/*%INCLUDE SYSLIB  (COMP    )                                       */
*/*%INCLUDE SYSLIB  (CONVHEX )                                       */
*/*%INCLUDE SYSLIB  (DISABLE )                                       */
*/*%INCLUDE SYSLIB  (ENABLE  )                                       */
*/*%INCLUDE SYSLIB  (ENDP    )                                       */
*/*%INCLUDE SYSLIB  (ADDSCE  )                                       */
*/*%INCLUDE SYSLIB  (BUILDHDR)                                       */
*/*%INCLUDE SYSLIB  (FREESHDR)                                       */
*/*%INCLUDE SYSLIB  (ERRTYP  )                                       */
*/*%INCLUDE SYSLIB  (FIXSEG  )                                       */
*/*%INCLUDE SYSLIB  (FREECSCB)                                       */
*/*%INCLUDE SYSLIB  (FREESCE )                                       */
*/*%INCLUDE SYSLIB  (FREESCVA)                                       */
*/*%INCLUDE SYSLIB  (GETSEQ  )                                       */
*/*%INCLUDE SYSLIB  (GETVTSLP)                                       */
*/*%INCLUDE SYSLIB  (ID      )                                       */
*/*%INCLUDE SYSLIB  (JOBNAME )                                       */
*/*%INCLUDE SYSLIB  (JSPGM   )                                       */
*/*%INCLUDE SYSLIB  (LPAMOD  )                                       */
*/*%INCLUDE SYSLIB  (LPASRCH )                                       */
*/*%INCLUDE SYSLIB  (LPAPVTAD)                                       */
*/*%INCLUDE SYSLIB  (MODE    )                                       */
*/*%INCLUDE SYSLIB  (MSGMOD05)                                       */
*/*%INCLUDE SYSLIB  (NEXTKEY )                                       */
*/*%INCLUDE SYSLIB  (PVTMOD  )                                       */
*/*%INCLUDE SYSLIB  (RELVTSLP)                                       */
*/*%INCLUDE SYSLIB  (RESP    )                                       */
*/*%INCLUDE SYSLIB  (RETRYMSG)                                       */
*/*%INCLUDE SYSLIB  (SCAN    )                                       */
*/*%INCLUDE SYSLIB  (MULTIWTO)                                       */
*/*%INCLUDE SYSLIB  (SETESTAE)                                       */
*/*%INCLUDE SYSLIB  (WRITE725)                                       */
*                                                                  1716
*       ;                                                          1716
@DATA    DS    0H
@CH00075 DC    H'2'
@CH00292 DC    H'3'
@CH00035 DC    H'4'
@CH00723 DC    H'5'
@CH00737 DC    H'6'
@CH00996 DC    H'7'
@CH00061 DC    H'8'
@CH02322 DC    H'9'
@CH00034 DC    H'10'
@CH00033 DC    H'11'
@CH00032 DC    H'12'
@CH03107 DC    H'13'
@CH00116 DC    H'15'
@CH00776 DC    H'16'
@CH02963 DC    H'17'
@CH03113 DC    H'9999'
@SM03413 MVC   UNKNOWN8(0),IN(@01)
@SM03425 MVC   KEYWORD(0),IN(@01)
@SM03430 MVC   SCVAASID(0,SCVAPTR),WAASID
@SM03432 MVC   WAID(0),IN+3(REPLY)
@SM03434 MVC   UNKNOWN7(0),IN(@01)
@SM03438 MVC   WAID(0),IN(@03)
@SM03441 MVC   WAJOBD(0),IN(@03)
@SM03443 MVC   WAJSPD(0),IN(@03)
@SM03445 MVC   WAPVTLPA(0),IN(@05)
@SM03447 MVC   UNKNOWN6(0),IN(@03)
@SM03450 MVC   WAPVTLPA(0),IN(@14)
@SB03453 TRT   IN(0,@03),SCANTAB-SCANTAB(@15)
@SM03455 MVC   STAELST(0),STAEFRM
         DS    0F
@AL00897 EQU   *                       LIST WITH   3 ARGUMENT(S)
@AL01539 EQU   *                       LIST WITH   3 ARGUMENT(S)
@AL01573 EQU   *                       LIST WITH   3 ARGUMENT(S)
@AL01640 DC    A(@CH00061)             LIST WITH   3 ARGUMENT(S)
         DS    F
         DC    AL1(X'80')
         DC    AL3(@CC03087)
@DATD    DSECT
         DS    0F
@SA00001 DS    18F
@SA00017 DS    15F
@SA00009 DS    15F
@SA00002 DS    15F
@SA00010 DS    15F
@SA00022 DS    15F
@SA00005 DS    15F
@SA00018 DS    15F
@SA00019 DS    15F
@SA00025 DS    15F
@SA00020 DS    15F
@SA00003 DS    15F
@SA00004 DS    15F
@SA00030 DS    15F
@SA00029 DS    15F
@SA00024 DS    14F
@SA00013 DS    15F
@SA00015 DS    15F
@SA00026 DS    15F
@SA00016 DS    15F
@SA00023 DS    15F
@SA00014 DS    15F
@SA00012 DS    15F
@SA00011 DS    15F
@SA00021 DS    15F
@SA00031 DS    0F
@SA00027 DS    0F
@SA00028 DS    0F
         DS    15F
@AL00001 DS    6A
@TF00001 DS    F
IEECB905 CSECT
         DS    0F
@CF00063 DC    F'1'
@CH00063 EQU   @CF00063+2
@CF03417 DC    F'-10'
@CF03416 DC    F'-8'
@CF03436 DC    F'-7'
@CF03449 DC    F'-6'
@CF03415 DC    F'-4'
@CF03117 DC    XL4'F5000000'
@CF03120 DC    XL4'00FFFFFF'
@CF03194 DC    XL4'7FFFFFFF'
@DATD    DSECT
         DS    0D
TCBPTR   DS    A
RBSECPTR DS    A
WPLPTR   DS    A
XTLSTPTR DS    A
FRRSPTR  DS    A
FRREPTR  DS    A
TEXTPTR  DS    A
EOL      DS    A
NEWLINE  DS    A
NXTOP    DS    A
SCANPTR  DS    A
CONVBUF  DS    A
MODEP    DS    A
MODADDR  DS    A
MODLN    DS    A
RETADD   DS    A
DATALN   DS    H
FIXFLAGS DS    AL1
         ORG   FIXFLAGS
FIX      DS    BL1
BADFIX   EQU   FIXFLAGS+0
FRRCNTRL EQU   FIXFLAGS+0
FRLOCK   EQU   FIXFLAGS+0
@NM00148 EQU   FIXFLAGS+0
         ORG   FIXFLAGS+1
         DS    0D
@TS00001 DS    CL8
WA       DS    CL86
         ORG   WA
WAFLG    DS    BL1
         ORG   WAFLG
WAENABLE DS    BL1
WADISABL EQU   WAFLG+0
WAFIN    EQU   WAFLG+0
WARESP   EQU   WAFLG+0
WARESPL  EQU   WAFLG+0
WAPAREN  EQU   WAFLG+0
WAANY    EQU   WAFLG+0
WAALLIND EQU   WAFLG+0
         ORG   WA+1
WAUCMP   DS    CL1
WASCVALN DS    AL2
WAID     DS    CL4
WACOMP   DS    CL8
         ORG   WACOMP
WACOMPID DS    AL1
WACOMPB  DS    BL1
         ORG   WACOMPB
WACOMPU  DS    BL1
@NM00138 EQU   WACOMPB+0
         ORG   WACOMP+2
WACCMASK DS    CL3
WACOMPD  DS    CL3
         ORG   WA+16
WAASID   DS    CL34
         ORG   WAASID
WAASIDID DS    AL1
WAASIDNO DS    AL1
WAASIDS  DS    16AL2
         ORG   WA+50
WAJOBNAM DS    CL9
         ORG   WAJOBNAM
WAJOBID  DS    AL1
WAJOBD   DS    CL8
         ORG   WAJOBD
WAJOBLN  DS    AL1
         ORG   WA+59
WAADDR   DS    CL17
         ORG   WAADDR
WAADDRID DS    AL1
WAPVTLPA DS    CL8
         ORG   WAPVTLPA
WAADDR1  DS    AL4
         ORG   WAADDR1
WAADDRLN DS    AL1
         ORG   WAPVTLPA+4
WAADDR2  DS    AL4
         ORG   WAADDR+9
WAADDR3  DS    AL4
WAADDR4  DS    AL4
         ORG   WA+76
WAJSPGM  DS    CL9
         ORG   WAJSPGM
WAJSPID  DS    AL1
WAJSPD   DS    CL8
         ORG   WAJSPD
WAJSPLN  DS    AL1
         ORG   WA+85
WAEND    DS    AL1
         ORG   WA+86
         DS    CL2
MSGBUF   DS    CL48
         ORG   MSGBUF
MSGVAR1  DS    CL12
MSGVAR2  DS    CL12
@NM00139 DS    CL24
         ORG   MSGBUF+48
REPLYBUF DS    CL119
NLINEBUF DS    CL119
         DS    CL2
ECB1     DS    CL4
SUCCIND  DS    BL1
BADREPLY DS    BL1
DUPID    DS    BL1
EDEFAULT DS    BL1
MDEFAULT DS    BL1
TEMPID   DS    CL4
KEYWORD  DS    CL8
TEMPADDR DS    CL8
TEMPNUM  DS    CL1
TEMPCC   DS    CL4
PACKCC   DS    CL3
UNKNOWN8 DS    CL8
         ORG   UNKNOWN8
@NM00141 DS    CL1
UNKNOWN7 DS    CL7
         ORG   UNKNOWN7
@NM00142 DS    CL1
UNKNOWN6 DS    CL6
         ORG   UNKNOWN8+8
         DS    CL3
SAVREGS  DS    CL44
STAE860  DS    CL8
         ORG   STAE860
CSCBADDR DS    AL4
BUFPTR   DS    AL4
         ORG   STAE860+8
STAE906  DS    CL24
IEECB905 CSECT
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
@CV02893 DC    V(KEYINIT)
@CV02900 DC    V(KTLNINIT)
@CV02904 DC    V(MODKINIT)
@CV02911 DC    V(MLNINIT)
@CV02915 DC    V(ERTINIT)
@CV02919 DC    V(ERLNINIT)
@CV02923 DC    V(MDEINIT)
@CV02929 DC    V(MDELNINT)
@CA02932 DC    A(SCANTAB)
@CV02991 DC    V(IEECB906)
@CV02992 DC    V(IEECB907)
@CV02993 DC    V(IEECB908)
         DS    0D
SIZESCE  DC    AL4(36)
SIZESHDR DC    AL4(28)
PAUSE    DC    A(10)
@CC03182 DC    C'00000000'
@CC03304 DC    C'IEECB905'
@CC03138 DC    C'IGNORE'
@CC03140 DC    C'NODUMP'
@CC03154 DC    C'CANCEL'
@CC03152 DC    C'RETRY'
@CC03087 DC    C'SLIP'
@CC03122 DC    C'SET '
@CC03124 DC    C'SET,'
@CC03126 DC    C'MOD '
@CC03128 DC    C'MOD,'
@CC03130 DC    C'DEL '
@CC03132 DC    C'DEL,'
@CC03134 DC    C'WAIT'
@CC03136 DC    C'SVCD'
@CC03150 DC    C'    '
@CC03157 DC    C'SHDR'
@CC03159 DC    C'SCE '
@CC03161 DC    C'SCVA'
@CC03176 DC    C'XXXX'
@CC03174 EQU   @CC03176
@CB03075 DC    X'070C0000'
@CB03190 DC    X'00000000'
@CB03192 DC    X'0000000F'
@CB03188 EQU   @CB03190
@CB03166 EQU   @CB03190
@CB03170 DC    X'FFFF'
STAEBUF  DS    CL5
         ORG   STAEBUF
CMDSIZE  DC    AL1(4)
COMMAND  DC    CL4'SLIP'
         ORG   STAEBUF+5
PATCH905 DC    CL100' '
         DS    CL2
KSUBLIST DC    AL4(ENABLE)
         DC    AL4(DISABLE)
         DC    AL4(ID)
         DC    AL4(ENDP)
         DC    AL4(ACTION)
         DC    AL4(ERRTYP)
         DC    AL4(MODE)
         DC    AL4(COMP)
         DC    AL4(JOBNAME)
         DC    AL4(JSPGM)
         DC    AL4(PVTMOD)
         DC    AL4(LPAMOD)
         DC    AL4(ADDRESS)
         DC    AL4(ASID)
MASKCC   DC    X'0F0000'
         DC    X'00F000'
         DC    X'000F00'
         DC    X'0000F0'
IEECB905 CSECT
STAEFRM ESTAE RECORD=YES,TERM=YES,MF=L
STAELN DC A(*-STAEFRM)
@DATD    DSECT
STAELST ESTAE RECORD=YES,TERM=YES,MF=L
@DATD    DSECT
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
IEECB905 CSECT
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
ENDAD    EQU   @07
STRTAD   EQU   @08
TEMPINDX EQU   @02
SAVR14   EQU   @05
SAVPROC  EQU   @02
SAVEEOL  EQU   @09
REPLY    EQU   @08
I        EQU   @03
LPDEPTR  EQU   @07
CDENTPTR EQU   @07
SCVAPTR  EQU   @02
SDWAPTR  EQU   @01
XSAPTR   EQU   @02
R0       EQU   @00
R1       EQU   @01
R2       EQU   @02
R3       EQU   @03
R4       EQU   @04
R5       EQU   @05
R6       EQU   @06
R7       EQU   @07
R8       EQU   @08
R9       EQU   @09
R11      EQU   @11
R12      EQU   @12
R13      EQU   @13
R14      EQU   @14
R15      EQU   @15
         EXTRN SCANTAB
PSA      EQU   0
FLCRNPSW EQU   PSA
FLCROPSW EQU   PSA+8
FLCICCW2 EQU   PSA+16
FLCCVT   EQU   FLCICCW2
PSAEEPSW EQU   PSA+132
PSAESPSW EQU   PSA+136
FLCSVILC EQU   PSAESPSW+1
PSAEPPSW EQU   PSA+140
FLCPIILC EQU   PSAEPPSW+1
FLCPICOD EQU   PSAEPPSW+2
PSAPICOD EQU   FLCPICOD+1
FLCTEA   EQU   PSAEPPSW+4
FLCPER   EQU   PSA+152
FLCMCLA  EQU   PSA+168
FLCIOEL  EQU   FLCMCLA+4
FLCIOA   EQU   FLCMCLA+16
FLCFSA   EQU   FLCMCLA+80
PSATOLD  EQU   PSA+540
PSASUPER EQU   PSA+552
PSASUP1  EQU   PSASUPER
PSASUP2  EQU   PSASUPER+1
PSASUP3  EQU   PSASUPER+2
PSASUP4  EQU   PSASUPER+3
PSACLHT  EQU   PSA+640
PSALKSA  EQU   PSA+696
PSAHLHI  EQU   PSA+760
PSALITA  EQU   PSA+764
PSADSSFL EQU   PSA+836
PSADSSF1 EQU   PSADSSFL
PSADSSF3 EQU   PSADSSFL+2
PSADSSF4 EQU   PSADSSFL+3
PSARSVT  EQU   PSA+896
PSALSFCC EQU   PSA+1012
CVTMAP   EQU   0
CVTDAR   EQU   CVTMAP+72
CVTFLGS1 EQU   CVTDAR
CVTDCB   EQU   CVTMAP+116
CVTIOQET EQU   CVTMAP+120
CVTIERLC EQU   CVTMAP+144
CVTHEAD  EQU   CVTMAP+160
CVTSV76C EQU   CVTHEAD
CVTOPTA  EQU   CVTMAP+182
CVTOPTB  EQU   CVTMAP+183
CVTQCDSR EQU   CVTMAP+184
CVTQLPAQ EQU   CVTMAP+188
CVTGTF   EQU   CVTMAP+236
CVTGTFST EQU   CVTGTF
CVTGTFS  EQU   CVTGTFST
CVTSTATE EQU   CVTGTFST
CVTTMODE EQU   CVTGTFST
CVTFORM  EQU   CVTGTFST
CVTAQAVT EQU   CVTMAP+240
CVTTCMFG EQU   CVTAQAVT
CVTVOLM2 EQU   CVTMAP+244
CVTTATA  EQU   CVTVOLM2
CVTTSKS  EQU   CVTTATA
CVTVOLF2 EQU   CVTTSKS
CVTTAT   EQU   CVTTATA+1
CVTATER  EQU   CVTMAP+248
CVTEXT1  EQU   CVTMAP+252
CVTPURG  EQU   CVTMAP+260
CVTQMSG  EQU   CVTMAP+268
CVTDMSR  EQU   CVTMAP+272
CVTRSV37 EQU   CVTDMSR
CVTDMSRF EQU   CVTRSV37
CVTERPV  EQU   CVTMAP+316
CVTINTLA EQU   CVTMAP+320
CVTAPF   EQU   CVTMAP+324
CVTEXT2  EQU   CVTMAP+328
CVTHJES  EQU   CVTMAP+332
CVTPGSIA EQU   CVTMAP+348
CVTA1F1  EQU   CVTMAP+356
CVTSYSK  EQU   CVTMAP+357
CVTVOLM1 EQU   CVTMAP+380
CVTVOLF1 EQU   CVTVOLM1
CVTXTNT1 EQU   0
CVTXTNT2 EQU   0
CVTDSSV  EQU   CVTXTNT2
CVTFLGBT EQU   CVTXTNT2+5
CVTQID   EQU   CVTXTNT2+24
CVTRV400 EQU   CVTXTNT2+52
CVTRV409 EQU   CVTXTNT2+53
CVTATCVT EQU   CVTXTNT2+64
CVTRV429 EQU   CVTXTNT2+84
CVTRV438 EQU   CVTXTNT2+85
CVTRV457 EQU   CVTXTNT2+112
CVTRV466 EQU   CVTXTNT2+113
CVTFIX   EQU   0
CVTRELNO EQU   CVTFIX+252
PVT      EQU   0
PVTFLAG1 EQU   PVT
PVTFLAG2 EQU   PVT+1
PVTPSIB  EQU   PVT+72
PVTQS    EQU   PVT+304
PVTWSAX  EQU   PVT+344
PVTPCBQS EQU   PVT+1852
SDWA     EQU   0
SDWAPARM EQU   SDWA
SDWAFIOB EQU   SDWA+4
SDWAABCC EQU   SDWAFIOB
SDWACMPF EQU   SDWAABCC
SDWAREQ  EQU   SDWACMPF
SDWACTL1 EQU   SDWA+8
SDWACMKA EQU   SDWACTL1
SDWAMWPA EQU   SDWACTL1+1
SDWAPMKA EQU   SDWACTL1+4
SDWACTL2 EQU   SDWA+16
SDWACMKP EQU   SDWACTL2
SDWAMWPP EQU   SDWACTL2+1
SDWAPMKP EQU   SDWACTL2+4
SDWAGRSV EQU   SDWA+24
SDWANAME EQU   SDWA+88
SDWAEC1  EQU   SDWA+104
SDWAEMK1 EQU   SDWAEC1
SDWAMWP1 EQU   SDWAEC1+1
SDWAINT1 EQU   SDWAEC1+2
SDWANXT1 EQU   SDWAEC1+4
SDWAAEC1 EQU   SDWA+112
SDWAILC1 EQU   SDWAAEC1+1
SDWAINC1 EQU   SDWAAEC1+2
SDWAICD1 EQU   SDWAINC1+1
SDWAEC2  EQU   SDWA+120
SDWAEMK2 EQU   SDWAEC2
SDWAMWP2 EQU   SDWAEC2+1
SDWAINT2 EQU   SDWAEC2+2
SDWANXT2 EQU   SDWAEC2+4
SDWAAEC2 EQU   SDWA+128
SDWAILC2 EQU   SDWAAEC2+1
SDWAINC2 EQU   SDWAAEC2+2
SDWAICD2 EQU   SDWAINC2+1
SDWASRSV EQU   SDWA+136
SDWAIDNT EQU   SDWA+200
SDWAMCH  EQU   SDWA+204
SDWASTCK EQU   SDWAMCH
SDWAMCHI EQU   SDWAMCH+8
SDWAMCHS EQU   SDWAMCHI
SDWAMCHD EQU   SDWAMCHI+1
SDWARSR1 EQU   SDWAMCH+12
SDWARSR2 EQU   SDWAMCH+13
SDWAFLGS EQU   SDWA+232
SDWAERRA EQU   SDWAFLGS
SDWAERRB EQU   SDWAFLGS+1
SDWAERRC EQU   SDWAFLGS+2
SDWAERRD EQU   SDWAFLGS+3
SDWAIOFS EQU   SDWA+238
SDWACPUA EQU   SDWA+248
SDWAPARQ EQU   SDWA+252
SDWARCDE EQU   SDWAPARQ
SDWAACF2 EQU   SDWAPARQ+1
SDWARCRD EQU   SDWAACF2
SDWAACF3 EQU   SDWAPARQ+2
SDWAACF4 EQU   SDWAPARQ+3
SDWALKWA EQU   SDWA+256
SDWALKWS EQU   SDWALKWA
SDWARECP EQU   SDWA+292
SDWAMODN EQU   SDWARECP
SDWACSCT EQU   SDWARECP+8
SDWAREXN EQU   SDWARECP+16
SDWASNPA EQU   SDWA+320
SDWADUMP EQU   SDWASNPA
SDWADPFS EQU   SDWADUMP+1
SDWADDAT EQU   SDWASNPA+4
SDWASDAT EQU   SDWADDAT
SDWASDA0 EQU   SDWASDAT
SDWASDA1 EQU   SDWASDAT+1
SDWAPDAT EQU   SDWADDAT+2
SDWADPSA EQU   SDWA+328
SDWADPSL EQU   SDWADPSA
SDWARA   EQU   SDWA+400
SDWADPVA EQU   SDWARA+2
SDWAHEX  EQU   SDWADPVA
SDWAURAL EQU   SDWARA+3
SDWAVRA  EQU   SDWARA+4
TCBFIX   EQU   0
TCBFRS   EQU   TCBFIX
TCB      EQU   0
TCBRBP   EQU   TCB
TCBPIE   EQU   TCB+4
TCBPMASK EQU   TCBPIE
TCBCMP   EQU   TCB+16
TCBCMPF  EQU   TCBCMP
TCBCPP   EQU   TCBCMPF
TCBSTCC  EQU   TCBCMPF
TCBCDBL  EQU   TCBCMPF
TCBCWTO  EQU   TCBCMPF
TCBCIND  EQU   TCBCMPF
TCBCMSG  EQU   TCBCMPF
TCBTRN   EQU   TCB+20
TCBABF   EQU   TCBTRN
TCBMSS   EQU   TCB+24
TCBPKF   EQU   TCB+28
TCBFLGS  EQU   TCB+29
TCBFLGS1 EQU   TCBFLGS
TCBFLGS2 EQU   TCBFLGS+1
TCBFLGS3 EQU   TCBFLGS+2
TCBFLGS4 EQU   TCBFLGS+3
TCBFLGS5 EQU   TCBFLGS+4
TCBABWF  EQU   TCBFLGS5
TCBJPQ   EQU   TCB+44
TCBPURGE EQU   TCBJPQ
TCBGRS   EQU   TCB+48
TCBFSA   EQU   TCB+112
TCBTME   EQU   TCB+120
TCBJSTCB EQU   TCB+124
TCBTSFLG EQU   TCB+148
TCBTSTSK EQU   TCBTSFLG
TCBSTAB  EQU   TCB+160
TCBNSTAE EQU   TCBSTAB
TCBTCT   EQU   TCB+164
TCBTCTGF EQU   TCBTCT
TCBSCNDY EQU   TCB+172
TCBNDSP  EQU   TCBSCNDY
TCBNDSP1 EQU   TCBNDSP+1
TCBNDSP2 EQU   TCBNDSP+2
TCBNDSP3 EQU   TCBNDSP+3
TCBJSCB  EQU   TCB+180
TCBRECDE EQU   TCBJSCB
TCBEXT1  EQU   TCB+196
TCBBITS  EQU   TCB+200
TCBNDSP4 EQU   TCBBITS
TCBNDSP5 EQU   TCBBITS+1
TCBFLGS6 EQU   TCBBITS+2
TCBFLGS7 EQU   TCBBITS+3
TCBDAR   EQU   TCB+204
TCBDARC  EQU   TCBDAR
TCBEXT2  EQU   TCB+208
TCBXSCT  EQU   TCB+240
TCBXSCT1 EQU   TCBXSCT
TCBFOE   EQU   TCB+244
TCBESTAE EQU   TCB+264
TCBESTRM EQU   TCBESTAE+1
TCBFBYT1 EQU   TCB+276
TCBFBYT2 EQU   TCB+277
TCBRV124 EQU   TCB+278
TCBRV133 EQU   TCB+279
TCBXTNT2 EQU   0
TCBGTF   EQU   TCBXTNT2
TCBTFLG  EQU   TCBGTF
TCBRV146 EQU   TCBXTNT2+28
TCBRV155 EQU   TCBXTNT2+29
TCBRV164 EQU   TCBXTNT2+30
TCBRV173 EQU   TCBXTNT2+31
RBPRFX   EQU   0
RBBASIC  EQU   0
RBEXRTNM EQU   RBBASIC
RBTMFLD  EQU   RBEXRTNM
RBSTAB   EQU   RBBASIC+10
XSTAB    EQU   RBSTAB
RBSTAB1  EQU   XSTAB
XSTAB1   EQU   RBSTAB1
RBFTCKPT EQU   XSTAB1
RBSTAB2  EQU   XSTAB+1
XSTAB2   EQU   RBSTAB2
RBTCBNXT EQU   XSTAB2
RBFACTV  EQU   XSTAB2
RBFDYN   EQU   XSTAB2
RBECBWT  EQU   XSTAB2
RBOPSW   EQU   RBBASIC+16
XRBPSW   EQU   RBOPSW
RBOPSWB2 EQU   XRBPSW+1
RBLINK   EQU   RBBASIC+28
XRBLNK   EQU   RBLINK
RBWCF    EQU   XRBLNK
RBLINKB  EQU   XRBLNK+1
RBGRSAVE EQU   RBBASIC+32
XRBREG   EQU   RBGRSAVE
RBGRS0   EQU   XRBREG
RBGRS1   EQU   XRBREG+4
RBGRS2   EQU   XRBREG+8
RBGRS3   EQU   XRBREG+12
RBGRS4   EQU   XRBREG+16
RBGRS5   EQU   XRBREG+20
RBGRS6   EQU   XRBREG+24
RBGRS7   EQU   XRBREG+28
RBGRS8   EQU   XRBREG+32
RBGRS9   EQU   XRBREG+36
RBGRS10  EQU   XRBREG+40
RBGRS11  EQU   XRBREG+44
RBGRS12  EQU   XRBREG+48
RBGRS13  EQU   XRBREG+52
RBGRS14  EQU   XRBREG+56
RBGRS15  EQU   XRBREG+60
XRBESA   EQU   RBBASIC+96
RBPREFIX EQU   0
RBRSV019 EQU   RBPREFIX+14
RBRSV028 EQU   RBPREFIX+15
RBRSV041 EQU   RBPREFIX+27
RBRSV054 EQU   RBPREFIX+39
RBRTOPSW EQU   RBPREFIX+40
RBRTPSW2 EQU   RBRTOPSW+8
RBRTICIL EQU   RBRTPSW2
RBFLAGS1 EQU   RBPREFIX+56
RBINTCDA EQU   RBPREFIX+61
RBSECT   EQU   0
RBPPSAV  EQU   RBSECT
@NM00086 EQU   RBSECT+10
@NM00087 EQU   @NM00086
RBTRSVRB EQU   @NM00087
@NM00089 EQU   @NM00086+1
RBETXR   EQU   @NM00089
RBEP     EQU   RBSECT+12
RBPGMQ   EQU   RBSECT+24
@NM00096 EQU   RBSECT+28
@NM00097 EQU   @NM00096
IRBEND   EQU   RBSECT+96
@NM00100 EQU   RBSECT+96
RBRSV138 EQU   @NM00100+7
RBSCBB   EQU   RBSECT+144
RBSPARM  EQU   RBSCBB+8
RBSFLGS1 EQU   RBSPARM
RBSIOPRC EQU   RBSFLGS1
RBSOWNR  EQU   RBSCBB+12
RBSFLGS2 EQU   RBSOWNR
RBSDATA  EQU   RBSCBB+16
RBSFLG3  EQU   RBSDATA
RBRSV150 EQU   RBSECT+167
CHAIN    EQU   0
CHFLG    EQU   CHAIN+4
CHSTS    EQU   CHFLG+2
CHFC     EQU   CHSTS
CHACT    EQU   CHFLG+3
CHIFY    EQU   CHACT
CHKEY    EQU   CHAIN+8
CHPARM   EQU   CHKEY
CHPKE    EQU   CHAIN+28
CHUCMP   EQU   CHAIN+29
CHTJID   EQU   CHAIN+30
CHPROCSN EQU   CHAIN+32
CHACT1   EQU   CHPROCSN+3
CHASM    EQU   CHAIN+40
CHCIBP   EQU   CHASM+4
CHRGNSZ  EQU   CHASM+8
CHSTEP   EQU   CHASM+24
CHSWT    EQU   CHSTEP
CHSHORT  EQU   CHASM+32
SHDR     EQU   0
SHDRCBID EQU   SHDR
SHDRPFC  EQU   SHDR+4
SHDRCTFW EQU   SHDR+8
SHDRFWD  EQU   SHDRCTFW+4
SHDRBKWD EQU   SHDR+16
SHDRFLGS EQU   SHDR+20
SHDRDELP EQU   SHDRFLGS
SHDRSEQ  EQU   SHDR+21
SHDRIDCT EQU   SHDR+22
SHDRPROC EQU   SHDR+24
SCE      EQU   0
SCECBID  EQU   SCE
SCECTRFW EQU   SCE+8
SCEFWD   EQU   SCECTRFW+4
SCEBKWD  EQU   SCE+16
SCEFLG1  EQU   SCE+20
SCEDSABL EQU   SCEFLG1
SCEDELP  EQU   SCEFLG1
SCEEVERY EQU   SCEFLG1
SCESVCD  EQU   SCEFLG1
SCEWAIT  EQU   SCEFLG1
SCEIGNOR EQU   SCEFLG1
SCENODMP EQU   SCEFLG1
SCERRTYP EQU   SCE+21
SCEMODE  EQU   SCE+22
SCEMODE1 EQU   SCEMODE
SCEMODE2 EQU   SCEMODE+1
SCEUCMP  EQU   SCE+27
SCEID    EQU   SCE+28
SCESCVA  EQU   SCE+32
SCVA     EQU   0
SCVAHDR  EQU   SCVA
SCVACBID EQU   SCVAHDR
SCVALN   EQU   SCVAHDR+4
SCVADATA EQU   SCVA+8
SCVACOMP EQU   0
SCVCCID  EQU   SCVACOMP
SCVCCB   EQU   SCVACOMP+1
SCVAASID EQU   0
SCVADHDR EQU   SCVAASID
SCVAJOBN EQU   0
SCVAMOD  EQU   0
SCVAADDR EQU   0
XSAMAP   EQU   0
XASVRB   EQU   XSAMAP
XSA      EQU   XASVRB
XAD      EQU   XSA+4
XAX      EQU   XASVRB+8
@NM00113 EQU   XASVRB+16
XAE      EQU   @NM00113
@NM00114 EQU   XASVRB+20
XAV      EQU   XASVRB+24
XAS      EQU   XASVRB+32
XAU      EQU   XASVRB+40
XAA      EQU   XASVRB+42
XASAVLOC EQU   XSAMAP+48
XASAVLOX EQU   XASAVLOC
XASAVSTD EQU   XSAMAP+64
XASAVSTR EQU   XASAVSTD
@NM00116 EQU   XSAMAP+136
XACMFLGS EQU   @NM00116
XACMFLGA EQU   XACMFLGS
XACMFLG1 EQU   XACMFLGA
XACMFLG2 EQU   XACMFLGA+1
XACMFLGB EQU   XACMFLGS+2
XAWORK   EQU   XSAMAP+152
EEXSAS01 EQU   0
EEXSAS02 EQU   0
XADUSWIT EQU   EEXSAS02
EEXSAS03 EQU   0
XASDS    EQU   EEXSAS03+2
@NM00118 EQU   EEXSAS03+4
EEXSAS04 EQU   0
XAXMASK  EQU   EEXSAS04
EEXSAS05 EQU   0
XASOPCOD EQU   EEXSAS05
XASWITCH EQU   EEXSAS05+1
XALTCHG  EQU   XASWITCH
XACOMPMS EQU   XASWITCH
XARESV   EQU   EEXSAS05+2
EEXSAS06 EQU   0
XAAVRANG EQU   EEXSAS06
XAAVRNG2 EQU   EEXSAS06+1
WPLRF    EQU   0
WPLRPTR  EQU   WPLRF
WPL      EQU   0
WPLMCSF  EQU   WPL+2
WPLMCSF1 EQU   WPLMCSF
WPLMCSF2 EQU   WPLMCSF+1
WPLTXT   EQU   WPL+4
WPLFLGS  EQU   0
WPLDESC  EQU   WPLFLGS
WPLDESC1 EQU   WPLDESC
WPLDESC2 EQU   WPLDESC+1
WPLROUT  EQU   WPLFLGS+2
WPLROUT1 EQU   WPLROUT
WPLROUT2 EQU   WPLROUT+1
WPLMSGTY EQU   WPLFLGS+4
WPLMSGT1 EQU   WPLMSGTY
WPLMSGT2 EQU   WPLMSGTY+1
WPLLS01  EQU   0
WPLLTF   EQU   WPLLS01
WPLLTF1  EQU   WPLLTF
WPLML    EQU   0
WPLMLLTF EQU   WPLML+2
WPLMLLT1 EQU   WPLMLLTF
CDENTRY  EQU   0
CDENTPT  EQU   CDENTRY+16
CDXLMJP  EQU   CDENTRY+20
CDATTR   EQU   CDENTRY+28
CDMIN    EQU   CDATTR
CDATTR2  EQU   CDENTRY+29
XTLST    EQU   0
XTLMSBLA EQU   XTLST+8
XTLMSBLN EQU   XTLMSBLA+1
XTLMSBAA EQU   XTLST+12
XTLMSBAD EQU   XTLMSBAA+1
LPDE     EQU   0
LPDENTP  EQU   LPDE+16
LPDEATTR EQU   LPDE+28
LPDEMIN  EQU   LPDEATTR
LPDEATT2 EQU   LPDE+29
LPDEMJNM EQU   LPDE+32
LPDEXTLN EQU   LPDEMJNM
LPDEXTAD EQU   LPDEMJNM+4
SESTAE   EQU   0
SESTFLG  EQU   SESTAE
SESTSLP  EQU   SESTFLG
SESTSEQ  EQU   SESTFLG
SESTSET  EQU   SESTFLG
SESTMOD  EQU   SESTFLG
SESTDEL  EQU   SESTFLG
SESTCHN  EQU   SESTFLG
SESTFLG2 EQU   SESTAE+1
SESTCSCB EQU   SESTAE+4
SESTSHDR EQU   SESTAE+8
SESTSCE  EQU   SESTAE+12
SESTSCAN EQU   SESTAE+20
FRRS     EQU   0
FRRSHEAD EQU   FRRS
FRRSEMP  EQU   FRRSHEAD
FRRSLAST EQU   FRRSHEAD+4
FRRSELEN EQU   FRRSHEAD+8
FRRSCURR EQU   FRRSHEAD+12
FRRSENTR EQU   0
FRRSFRRA EQU   FRRSENTR
FRRSFLGS EQU   FRRSENTR+4
FRRSFLG1 EQU   FRRSFLGS
FRRSPARM EQU   FRRSENTR+8
KEYTABLE EQU   0
KTABKSUB EQU   KEYTABLE
KTABKEY  EQU   KEYTABLE+2
KEYSUB   EQU   0
KTLNTAB  EQU   0
KTLNST   EQU   KTLNTAB
KTLNFN   EQU   KTLNTAB+2
MODKTAB  EQU   0
MODKSUB  EQU   MODKTAB
MODKKEY  EQU   MODKTAB+2
MKEYSUB  EQU   0
MODLNTAB EQU   0
MLNST    EQU   MODLNTAB
MLNFN    EQU   MODLNTAB+2
ERTOPTAB EQU   0
ERTOPTF  EQU   ERTOPTAB
ERTOPTEN EQU   ERTOPTAB+1
ERLNTAB  EQU   0
ERLNST   EQU   ERLNTAB
ERLNFN   EQU   ERLNTAB+2
MDEOPTAB EQU   0
MDEOPTF  EQU   MDEOPTAB
MDEOPTEN EQU   MDEOPTAB+2
MDELNTAB EQU   0
MDELNST  EQU   MDELNTAB
MDELNFN  EQU   MDELNTAB+2
IN       EQU   0
INCHAR   EQU   IN
INCHAR2  EQU   IN+1
INCHAR4  EQU   IN+3
FRRWA    EQU   0
VSL      EQU   FRRWA
VSL1     EQU   VSL
PFFLG    EQU   VSL1
PGFIX    EQU   PFFLG
PGFREE   EQU   PFFLG
PGLONG   EQU   PFFLG
PGSTRT   EQU   VSL1+1
VSL2     EQU   VSL+4
PRFLG    EQU   VSL2
LSTFLG   EQU   PRFLG
PGEND    EQU   VSL2+1
FRRFLGS  EQU   FRRWA+8
DOINFREE EQU   FRRFLGS
REGSPTR  EQU   FRRWA+12
SAVREGB  EQU   0
CVTPTR   EQU   FLCCVT
CVTS01   EQU   CVTPGSIA
CVTLPDSR EQU   CVTS01+4
CVTPVTP  EQU   CVTS01+8
CVTLPDIA EQU   CVTS01+12
CVTDIRST EQU   CVTLPDIA
CVTSLIDA EQU   CVTS01+24
CVTCTLFG EQU   CVTS01+50
CVTRTMS  EQU   CVTS01+244
CVTVWAIT EQU   CVTS01+276
CVTRV210 EQU   CVTS01+424
CVTRV219 EQU   CVTS01+425
CVTRV228 EQU   CVTS01+426
CVTRV237 EQU   CVTS01+427
CVTMFRTR EQU   CVTS01+452
CVTRV262 EQU   CVTS01+468
CVTRV271 EQU   CVTS01+469
CVTRV280 EQU   CVTS01+470
CVTRV289 EQU   CVTS01+471
CVTGSDA  EQU   CVTS01+600
FLC      EQU   PSA
PSARSVTE EQU   PSARSVT
PSACSTK  EQU   PSARSVTE
PVTPTR   EQU   CVTPVTP
RBSECS03 EQU   RBEP
RBCDE    EQU   RBSECS03
RBCDFLGS EQU   RBCDE
RBSECS05 EQU   RBPGMQ
RBSQE    EQU   RBSECS05
RBSECS06 EQU   RBPGMQ
RBIQE    EQU   RBSECS06
RBSECS07 EQU   RBPGMQ
RBIQE2   EQU   RBSECS07
RBSECS08 EQU   IRBEND
RBSECS09 EQU   IRBEND
CSCBPTR  EQU   SESTCSCB
CHAINS01 EQU   CHASM
CHBUF    EQU   CHAINS01
CHTYPE   EQU   CHAINS01+124
CHTRSTAT EQU   CHAINS01+125
CHCSYSO  EQU   CHAINS01+134
SCEPTR   EQU   SESTSCE
SAVSHDR  EQU   SESTSHDR
SCANSCE  EQU   SESTSCAN
CONVBUFC EQU   CONVBUF
PGECB    EQU   SHDRPROC
PGCOMP   EQU   PGECB+1
RESUMPSW EQU   RBOPSW
PHALF1   EQU   RESUMPSW
PHALF2   EQU   RESUMPSW+4
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
@NM00147 EQU   PGECB
CHLAST   EQU   CHAINS01+136
CHSPA    EQU   CHAINS01+135
CHUSERID EQU   CHCSYSO
CHJB     EQU   CHCSYSO
CHDUMP   EQU   CHCSYSO
CHQUE    EQU   CHCSYSO
CHHOLD   EQU   CHCSYSO
CHOUT    EQU   CHCSYSO
CHINN    EQU   CHCSYSO
CHALL    EQU   CHCSYSO
CHINC    EQU   CHAINS01+132
CHPEND   EQU   CHAINS01+128
CHARID   EQU   CHAINS01+127
CHCNID   EQU   CHAINS01+126
@NM00105 EQU   CHTRSTAT
CHTSL    EQU   CHTRSTAT
CHTS     EQU   CHTRSTAT
CHINITL  EQU   CHTRSTAT
CHINIT   EQU   CHTRSTAT
CHJOBSL  EQU   CHTRSTAT
CHJOBS   EQU   CHTRSTAT
CHDEF    EQU   CHTYPE
CHHIAR   EQU   CHTYPE
CHARSV29 EQU   CHTYPE
CHARSV28 EQU   CHTYPE
CHARSV27 EQU   CHTYPE
CHARSV26 EQU   CHTYPE
CHARSV25 EQU   CHTYPE
CHDSTAT  EQU   CHTYPE
RBRSV161 EQU   RBSECS09+64
RBSIRBWA EQU   RBSECS09
RBIQEWRK EQU   RBSECS08+4
RBNEXAV  EQU   RBSECS08
RBIQEA   EQU   RBIQE2
RBIQE1   EQU   RBIQE+1
RBUSE    EQU   RBIQE
RBSQEA   EQU   RBSQE+1
@NM00101 EQU   RBSQE
RBCDE1   EQU   RBCDE+1
RBCDLOAD EQU   RBCDFLGS
RBCDXCTL EQU   RBCDFLGS
RBCDSYNC EQU   RBCDFLGS
RBCDNODE EQU   RBCDFLGS
RBRSV010 EQU   RBCDFLGS
RBCDATCH EQU   RBCDFLGS
RBRSV009 EQU   RBCDFLGS
RBNOCELL EQU   RBCDFLGS
PSARSAV  EQU   PSARSVTE+60
PSARSTK  EQU   PSARSVTE+56
PSAESAV3 EQU   PSARSVTE+52
PSAESTK3 EQU   PSARSVTE+48
PSAESAV2 EQU   PSARSVTE+44
PSAESTK2 EQU   PSARSVTE+40
PSAESAV1 EQU   PSARSVTE+36
PSAESTK1 EQU   PSARSVTE+32
PSAPSAV  EQU   PSARSVTE+28
PSAPSTK  EQU   PSARSVTE+24
PSAMSAV  EQU   PSARSVTE+20
PSAMSTK  EQU   PSARSVTE+16
PSASSAV  EQU   PSARSVTE+12
PSASSTK  EQU   PSARSVTE+8
PSANSTK  EQU   PSARSVTE+4
CVTRV628 EQU   CVTS01+728
CVTRV627 EQU   CVTS01+724
CVTRV626 EQU   CVTS01+720
CVTRV625 EQU   CVTS01+716
CVTRV624 EQU   CVTS01+712
CVTRV623 EQU   CVTS01+708
CVTRV622 EQU   CVTS01+704
CVTRV621 EQU   CVTS01+700
CVTIHASU EQU   CVTS01+696
CVTSUSP  EQU   CVTS01+692
CVTT6SVC EQU   CVTS01+688
CVTCDAL  EQU   CVTS01+684
CVTTCTL  EQU   CVTS01+680
CVTRSUME EQU   CVTS01+676
CVTJTERM EQU   CVTS01+672
CVTASMRM EQU   CVTS01+668
CVTTCASP EQU   CVTS01+664
CVT0PT03 EQU   CVTS01+660
CVT0PT0E EQU   CVTS01+656
CVTRV609 EQU   CVTS01+652
CVTCGK   EQU   CVTS01+648
CVTRAC   EQU   CVTS01+644
CVTHSM   EQU   CVTS01+640
CVTRV605 EQU   CVTS01+636
CVTRV604 EQU   CVTS01+632
CVTEFF02 EQU   CVTS01+628
CVTCBBR  EQU   CVTS01+624
CVTSSCR  EQU   CVTS01+620
CVTEVENT EQU   CVTS01+616
CVTCRCA  EQU   CVTS01+612
CVTTPIO  EQU   CVTS01+608
CVTADV   EQU   CVTS01+604
CVTGSDAB EQU   CVTGSDA
CVTQV3   EQU   CVTS01+596
CVTQV2   EQU   CVTS01+592
CVTQV1   EQU   CVTS01+588
CVTRPT   EQU   CVTS01+584
CVTSSRB  EQU   CVTS01+580
CVTCSDRL EQU   CVTS01+576
CVTEXP1  EQU   CVTS01+572
CVTRMPMT EQU   CVTS01+568
CVTRMPTT EQU   CVTS01+564
CVTVPSA  EQU   CVTS01+560
CVTVSTOP EQU   CVTS01+556
CVTGTFR8 EQU   CVTS01+552
CVTQUIT  EQU   CVTS01+548
CVTVACR  EQU   CVTS01+544
CVTWTCB  EQU   CVTS01+540
CVTSTPRS EQU   CVTS01+536
CVT0PT02 EQU   CVTS01+532
CVTDARCM EQU   CVTS01+528
CVTIRECM EQU   CVTS01+524
CVTJRECM EQU   CVTS01+520
CVTVEMS0 EQU   CVTS01+516
CVTSPFRR EQU   CVTS01+512
CVTRLSTG EQU   CVTS01+508
CVT0TC0A EQU   CVTS01+504
CVTGMBR  EQU   CVTS01+500
CVTLFRM  EQU   CVTS01+496
CVTRMBR  EQU   CVTS01+492
CVTVIOP  EQU   CVTS01+488
CVTRV307 EQU   CVTS01+486
CVTRV306 EQU   CVTS01+484
CVTRV305 EQU   CVTS01+482
CVTRV304 EQU   CVTS01+480
CVTRV303 EQU   CVTS01+478
CVTRV302 EQU   CVTS01+476
CVTTRCA  EQU   CVTS01+472
CVTRV297 EQU   CVTRV289
CVTRV296 EQU   CVTRV289
CVTRV295 EQU   CVTRV289
CVTRV294 EQU   CVTRV289
CVTRV293 EQU   CVTRV289
CVTRV292 EQU   CVTRV289
CVTRV291 EQU   CVTRV289
CVTRV290 EQU   CVTRV289
CVTRV288 EQU   CVTRV280
CVTRV287 EQU   CVTRV280
CVTRV286 EQU   CVTRV280
CVTRV285 EQU   CVTRV280
CVTRV284 EQU   CVTRV280
CVTRV283 EQU   CVTRV280
CVTRV282 EQU   CVTRV280
CVTRV281 EQU   CVTRV280
CVTRV279 EQU   CVTRV271
CVTRV278 EQU   CVTRV271
CVTRV277 EQU   CVTRV271
CVTRV276 EQU   CVTRV271
CVTRV275 EQU   CVTRV271
CVTRV274 EQU   CVTRV271
CVTRV273 EQU   CVTRV271
CVTRV272 EQU   CVTRV271
CVTRV270 EQU   CVTRV262
CVTRV269 EQU   CVTRV262
CVTRV268 EQU   CVTRV262
CVTRV267 EQU   CVTRV262
CVTRV266 EQU   CVTRV262
CVTRV265 EQU   CVTRV262
CVTRV264 EQU   CVTRV262
CVTRV263 EQU   CVTRV262
CVTVFP   EQU   CVTS01+464
CVTVSI   EQU   CVTS01+460
CVTVPSIB EQU   CVTS01+456
CVTMFACT EQU   CVTMFRTR
CVTMFCTL EQU   CVTS01+448
CVTPVBP  EQU   CVTS01+444
CVTPWI   EQU   CVTS01+440
CVTRV254 EQU   CVTS01+438
CVTRV253 EQU   CVTS01+436
CVTRV252 EQU   CVTS01+434
CVTRV251 EQU   CVTS01+433
CVTRV250 EQU   CVTS01+432
CVTRV249 EQU   CVTS01+431
CVTRV248 EQU   CVTS01+430
CVTRV247 EQU   CVTS01+429
CVTRV246 EQU   CVTS01+428
CVTRV245 EQU   CVTRV237
CVTRV244 EQU   CVTRV237
CVTRV243 EQU   CVTRV237
CVTRV242 EQU   CVTRV237
CVTRV241 EQU   CVTRV237
CVTRV240 EQU   CVTRV237
CVTRV239 EQU   CVTRV237
CVTRV238 EQU   CVTRV237
CVTRV236 EQU   CVTRV228
CVTRV235 EQU   CVTRV228
CVTRV234 EQU   CVTRV228
CVTRV233 EQU   CVTRV228
CVTRV232 EQU   CVTRV228
CVTRV231 EQU   CVTRV228
CVTRV230 EQU   CVTRV228
CVTRV229 EQU   CVTRV228
CVTRV227 EQU   CVTRV219
CVTRV226 EQU   CVTRV219
CVTRV225 EQU   CVTRV219
CVTRV224 EQU   CVTRV219
CVTRV223 EQU   CVTRV219
CVTRV222 EQU   CVTRV219
CVTRV221 EQU   CVTRV219
CVTRV220 EQU   CVTRV219
CVTRV218 EQU   CVTRV210
CVTRV217 EQU   CVTRV210
CVTRV216 EQU   CVTRV210
CVTRV215 EQU   CVTRV210
CVTRV214 EQU   CVTRV210
CVTRV213 EQU   CVTRV210
CVTRV212 EQU   CVTRV210
CVTRV211 EQU   CVTRV210
CVTLCCAT EQU   CVTS01+420
CVTPCCAT EQU   CVTS01+416
CVTIPCRP EQU   CVTS01+412
CVTIPCRI EQU   CVTS01+408
CVTIPCDS EQU   CVTS01+404
CVTAIDVT EQU   CVTS01+400
CVTSSAP  EQU   CVTS01+396
CVTEHCIR EQU   CVTS01+392
CVTEHDEF EQU   CVTS01+388
CVTDAIR  EQU   CVTS01+384
CVTPERFM EQU   CVTS01+380
CVT044R2 EQU   CVTS01+376
CVTFETCH EQU   CVTS01+372
CVTRSTWD EQU   CVTS01+368
CVTSPOST EQU   CVTS01+364
CVTIOBP  EQU   CVTS01+360
CVTASMVT EQU   CVTS01+356
CVTRECRQ EQU   CVTS01+352
CVTWSAC  EQU   CVTS01+348
CVTRV149 EQU   CVTS01+344
CVTWSAL  EQU   CVTS01+340
CVTSPSA  EQU   CVTS01+336
CVTGLMN  EQU   CVTS01+332
CVTVEAC0 EQU   CVTS01+328
CVT062R1 EQU   CVTS01+324
CVTRPOST EQU   CVTS01+320
CVTDQIQE EQU   CVTS01+316
CVTCSD   EQU   CVTS01+312
CVTLKRMA EQU   CVTS01+308
CVTRSPIE EQU   CVTS01+304
CVTRENQ  EQU   CVTS01+300
CVTLQCB  EQU   CVTS01+296
CVTFQCB  EQU   CVTS01+292
CVTQCS01 EQU   CVTS01+288
CVTAPFT  EQU   CVTS01+284
CVTPARRL EQU   CVTS01+280
CVTGSPL  EQU   CVTS01+272
CVTLSMQ  EQU   CVTS01+268
CVTGSMQ  EQU   CVTS01+264
CVTEXPRO EQU   CVTS01+260
CVTOPCTP EQU   CVTS01+256
CVTSIC   EQU   CVTS01+252
CVTTPIOS EQU   CVTS01+248
CVTSDBF  EQU   CVTS01+240
CVTSCBP  EQU   CVTS01+236
CVTSDMP  EQU   CVTS01+232
CVTSV60  EQU   CVTS01+228
CVTRTMCT EQU   CVTS01+224
CVTASCBL EQU   CVTS01+220
CVTASCBH EQU   CVTS01+216
CVTGDA   EQU   CVTS01+212
CVTASVT  EQU   CVTS01+208
CVTVVMDI EQU   CVTS01+204
CVTAQTOP EQU   CVTS01+200
CVTIOSCS EQU   CVTS01+196
CVTSDRM  EQU   CVTS01+192
CVTOPTE  EQU   CVTS01+188
CVTSTXU  EQU   CVTS01+184
CVTQUIS  EQU   CVTS01+180
CVTPARS  EQU   CVTS01+176
CVTS1EE  EQU   CVTS01+172
CVTFRAS  EQU   CVTS01+168
CVTQSAS  EQU   CVTS01+164
CVTCRAS  EQU   CVTS01+160
CVTCRMN  EQU   CVTS01+156
CVTDELCP EQU   CVTS01+152
CVTFRECL EQU   CVTS01+148
CVTGETCL EQU   CVTS01+144
CVTBLDCP EQU   CVTS01+140
CVTAUTHL EQU   CVTS01+136
CVTSCAN  EQU   CVTS01+132
CVTRV144 EQU   CVTS01+130
CVTMAXMP EQU   CVTS01+128
CVTSTCK  EQU   CVTS01+124
CVTRV139 EQU   CVTS01+123
CVTDSSAC EQU   CVTS01+122
CVTRV513 EQU   CVTS01+121
CVTIOSPL EQU   CVTS01+120
CVTPTGT  EQU   CVTS01+116
CVTCSPIE EQU   CVTS01+112
CVTSMFEX EQU   CVTS01+108
CVTOLT0A EQU   CVTS01+104
CVTSRBRT EQU   CVTS01+100
CVTPUTL  EQU   CVTS01+96
CVTASCRL EQU   CVTS01+92
CVTASCRF EQU   CVTS01+88
CVTRV326 EQU   CVTS01+84
CVTRV325 EQU   CVTS01+80
CVTRV324 EQU   CVTS01+76
CVT0VL01 EQU   CVTS01+72
CVTSHRVM EQU   CVTS01+68
CVTRV332 EQU   CVTS01+64
CVTTAS   EQU   CVTS01+60
CVTRSCN  EQU   CVTS01+56
CVTTRAC2 EQU   CVTS01+54
CVTTRACE EQU   CVTS01+52
CVTAPG   EQU   CVTS01+51
CVTSDTRC EQU   CVTCTLFG
CVTGTRCE EQU   CVTCTLFG
CVTNOMP  EQU   CVTCTLFG
CVTRSV79 EQU   CVTCTLFG
CVTDSTAT EQU   CVTCTLFG
CVTRSV78 EQU   CVTCTLFG
CVTRV333 EQU   CVTCTLFG
CVTRV323 EQU   CVTCTLFG
CVTSPVLK EQU   CVTS01+49
CVTRSV77 EQU   CVTS01+48
CVTRV331 EQU   CVTS01+44
CVTRV330 EQU   CVTS01+40
CVTRV329 EQU   CVTS01+36
CVTRV328 EQU   CVTS01+32
CVTRV322 EQU   CVTS01+28
CVTSLID  EQU   CVTSLIDA+1
CVTSYLK  EQU   CVTSLIDA
CVTRV321 EQU   CVTS01+20
CVTRV320 EQU   CVTS01+16
CVTLPDIR EQU   CVTLPDIA+1
CVTRSV69 EQU   CVTDIRST
CVTRSV68 EQU   CVTDIRST
CVTRSV67 EQU   CVTDIRST
CVTRSV66 EQU   CVTDIRST
CVTRSV65 EQU   CVTDIRST
CVTRSV64 EQU   CVTDIRST
CVTRSV63 EQU   CVTDIRST
CVTDICOM EQU   CVTDIRST
CVTGETL  EQU   CVTS01
@NM00146 EQU   FRRFLGS
@NM00145 EQU   PRFLG
@NM00144 EQU   PFFLG
@NM00143 EQU   PFFLG
PGCHN    EQU   PFFLG
@NM00140 EQU   IN+4
INCHAR3  EQU   IN+2
@NM00137 EQU   FRRSFLGS+1
@NM00136 EQU   FRRSFLG1
FRRSNEST EQU   FRRSFLG1
FRRSRCUR EQU   FRRSFLG1
FRRSENTS EQU   FRRS+84
FRRSRTMW EQU   FRRS+16
SESTWTOI EQU   SESTAE+16
@NM00135 EQU   SESTAE+2
@NM00134 EQU   SESTFLG2
SESTVTSL EQU   SESTFLG2
SEST503D EQU   SESTFLG2
@NM00133 EQU   SESTFLG
SESTDSLP EQU   SESTFLG
LPDEATT3 EQU   LPDE+30
LPDEAUTH EQU   LPDEATT2
LPDESYSL EQU   LPDEATT2
@NM00132 EQU   LPDEATT2
@NM00131 EQU   LPDEATT2
LPDERLC  EQU   LPDEATT2
LPDEXLE  EQU   LPDEATT2
@NM00130 EQU   LPDEATT2
LPDENLR  EQU   LPDEATTR
@NM00129 EQU   LPDEATTR
@NM00128 EQU   LPDEATTR
LPDESER  EQU   LPDEATTR
LPDEREN  EQU   LPDEATTR
@NM00127 EQU   LPDEATTR
LPDENIP  EQU   LPDEATTR
@NM00126 EQU   LPDE+26
LPDEUSE  EQU   LPDE+24
LPDEXLP  EQU   LPDE+20
LPDENAME EQU   LPDE+8
LPDERBP  EQU   LPDE+4
LPDECHN  EQU   LPDE
@NM00125 EQU   XTLMSBAA
@NM00124 EQU   XTLMSBLA
XTLNRFAC EQU   XTLST+4
XTLLNTH  EQU   XTLST
CDATTR3  EQU   CDENTRY+30
CDAUTH   EQU   CDATTR2
CDSYSLIB EQU   CDATTR2
CDOLY    EQU   CDATTR2
@NM00123 EQU   CDATTR2
CDRLC    EQU   CDATTR2
CDXLE    EQU   CDATTR2
CDREL    EQU   CDATTR2
CDSPZ    EQU   CDATTR2
CDNLR    EQU   CDATTR
CDJPA    EQU   CDATTR
CDNFN    EQU   CDATTR
CDSER    EQU   CDATTR
CDREN    EQU   CDATTR
CDNIC    EQU   CDATTR
CDNIP    EQU   CDATTR
@NM00122 EQU   CDENTRY+26
CDUSE    EQU   CDENTRY+24
CDNAME   EQU   CDENTRY+8
CDRRBP   EQU   CDENTRY+4
CDCHAIN  EQU   CDENTRY
WPLMLTXT EQU   WPLML+4
WPLMLLT2 EQU   WPLMLLTF+1
WPLRSV24 EQU   WPLMLLT1
WPLRSV23 EQU   WPLMLLT1
WPLRSV22 EQU   WPLMLLT1
WPLRSV21 EQU   WPLMLLT1
WPLMLLTD EQU   WPLMLLT1
WPLMLLTC EQU   WPLMLLT1
WPLMLLTB EQU   WPLMLLT1
WPLMLLTA EQU   WPLMLLT1
WPLMLLEN EQU   WPLML+1
WPLML0   EQU   WPLML
WPLLINES EQU   WPLLS01+3
WPLAREA  EQU   WPLLS01+2
WPLLTF2  EQU   WPLLTF+1
WPLRSV20 EQU   WPLLTF1
WPLRSV19 EQU   WPLLTF1
WPLRSV18 EQU   WPLLTF1
WPLRSV17 EQU   WPLLTF1
WPLLTFD  EQU   WPLLTF1
WPLLTFC  EQU   WPLLTF1
WPLLTFB  EQU   WPLLTF1
WPLLTFA  EQU   WPLLTF1
WPLQID   EQU   WPLFLGS+6
WPLRSV32 EQU   WPLMSGT2
WPLRSV31 EQU   WPLMSGT2
WPLRSV30 EQU   WPLMSGT2
WPLRSV29 EQU   WPLMSGT2
WPLRSV28 EQU   WPLMSGT2
WPLRSV27 EQU   WPLMSGT2
WPLRSV26 EQU   WPLMSGT2
WPLRSV25 EQU   WPLMSGT2
WPLRSV16 EQU   WPLMSGT1
WPLRSV15 EQU   WPLMSGT1
WPLMSGTF EQU   WPLMSGT1
WPLRSV14 EQU   WPLMSGT1
WPLMSGTD EQU   WPLMSGT1
WPLMSGTC EQU   WPLMSGT1
WPLMSGTB EQU   WPLMSGT1
WPLMSGTA EQU   WPLMSGT1
WPLRSV13 EQU   WPLROUT2
WPLROUTO EQU   WPLROUT2
WPLROUTN EQU   WPLROUT2
WPLROUTM EQU   WPLROUT2
WPLROUTL EQU   WPLROUT2
WPLROUTK EQU   WPLROUT2
WPLROUTJ EQU   WPLROUT2
WPLROUTI EQU   WPLROUT2
WPLROUTH EQU   WPLROUT1
WPLROUTG EQU   WPLROUT1
WPLROUTF EQU   WPLROUT1
WPLROUTE EQU   WPLROUT1
WPLROUTD EQU   WPLROUT1
WPLROUTC EQU   WPLROUT1
WPLROUTB EQU   WPLROUT1
WPLROUTA EQU   WPLROUT1
WPLRSV12 EQU   WPLDESC2
WPLRSV11 EQU   WPLDESC2
WPLRSV10 EQU   WPLDESC2
WPLRSV09 EQU   WPLDESC2
WPLRSV08 EQU   WPLDESC2
WPLRSV07 EQU   WPLDESC2
WPLDESCJ EQU   WPLDESC2
WPLDESCI EQU   WPLDESC2
WPLDESCH EQU   WPLDESC1
WPLDESCG EQU   WPLDESC1
WPLDESCF EQU   WPLDESC1
WPLDESCE EQU   WPLDESC1
WPLDESCD EQU   WPLDESC1
WPLDESCC EQU   WPLDESC1
WPLDESCB EQU   WPLDESC1
WPLDESCA EQU   WPLDESC1
WPLTXTL  EQU   WPLTXT+125
@NM00121 EQU   WPLTXT
WPLRSV05 EQU   WPLMCSF2
WPLRSV04 EQU   WPLMCSF2
WPLMCSFN EQU   WPLMCSF2
WPLRSV03 EQU   WPLMCSF2
WPLNOWTP EQU   WPLMCSF2
WPLMCSFK EQU   WPLMCSF2
WPLMCSFJ EQU   WPLMCSF2
WPLMCSFI EQU   WPLMCSF2
WPLMCSFH EQU   WPLMCSF1
WPLMCSFG EQU   WPLMCSF1
WPLMCSFF EQU   WPLMCSF1
WPLMCSFE EQU   WPLMCSF1
WPLMCSFD EQU   WPLMCSF1
WPLMCSFC EQU   WPLMCSF1
WPLMCSFB EQU   WPLMCSF1
WPLMCSFA EQU   WPLMCSF1
WPLLGH   EQU   WPL
WPLRECB  EQU   WPLRF+4
WPLRPTRA EQU   WPLRPTR+1
WPLRLN   EQU   WPLRPTR
XAARNG16 EQU   XAAVRNG2
XAARNG15 EQU   XAAVRNG2
XAARNG14 EQU   XAAVRNG2
XAARNG13 EQU   XAAVRNG2
XAARNG12 EQU   XAAVRNG2
XAARNG11 EQU   XAAVRNG2
XAARNG10 EQU   XAAVRNG2
XAARNG9  EQU   XAAVRNG2
XAARNG8  EQU   XAAVRANG
XAARNG7  EQU   XAAVRANG
XAARNG6  EQU   XAAVRANG
XAARNG5  EQU   XAAVRANG
XAARNG4  EQU   XAAVRANG
XAARNG3  EQU   XAAVRANG
XAARNG2  EQU   XAAVRANG
XAARNG1  EQU   XAAVRANG
XARTCODE EQU   EEXSAS05+6
XACMDATH EQU   EEXSAS05+4
XALTPTR  EQU   EEXSAS05+3
XACRT2   EQU   XARESV
XACENDCK EQU   XARESV
XARES1   EQU   XASWITCH
XASMF44  EQU   XASWITCH
XASMF42  EQU   XASWITCH
XAHRDREQ EQU   XASWITCH
XASTHDCP EQU   XACOMPMS
XAINHDCP EQU   XALTCHG
XAHRDCMD EQU   XASWITCH
XAROUT   EQU   XASWITCH
XALTCON  EQU   XASOPCOD
XACMD    EQU   XASOPCOD
XALTCOM  EQU   XASOPCOD
XARESB   EQU   XASOPCOD
XAOFF    EQU   XASOPCOD
XAON     EQU   XASOPCOD
XARESA   EQU   XASOPCOD
XACON    EQU   XASOPCOD
XAXSACB  EQU   EEXSAS04+4
XAXUTME  EQU   EEXSAS04+2
XAXFREE  EQU   EEXSAS04+1
@NM00120 EQU   XAXMASK
XAXTSL   EQU   XAXMASK
XAXTS    EQU   XAXMASK
@NM00119 EQU   XAXMASK
XAXJOBSL EQU   XAXMASK
XAXJOBS  EQU   XAXMASK
XASOPTR  EQU   @NM00118+1
XASTSAVE EQU   @NM00118
XASPLS3  EQU   EEXSAS03+3
XASSDS8  EQU   XASDS
XASSDS7  EQU   XASDS
XASSDS6  EQU   XASDS
XASSDS5  EQU   XASDS
XASSDS4  EQU   XASDS
XASSDS3  EQU   XASDS
XASSDS2  EQU   XASDS
XASSDS1  EQU   XASDS
XASDID   EQU   EEXSAS03+1
XASCID   EQU   EEXSAS03
XACAHOLD EQU   EEXSAS02+2
XADRES1  EQU   EEXSAS02+1
XAUBLANK EQU   XADUSWIT
XAOUNIT  EQU   XADUSWIT
XAIOCOMP EQU   XADUSWIT
XARES3   EQU   XADUSWIT
XAUDVC   EQU   XADUSWIT
XARES2   EQU   XADUSWIT
XAIPAREN EQU   XADUSWIT
XAXPAREN EQU   XADUSWIT
@NM00117 EQU   EEXSAS01+44
XAT      EQU   EEXSAS01+20
XAF      EQU   EEXSAS01+12
XAI      EQU   EEXSAS01+4
XAH      EQU   EEXSAS01
XAWORKH  EQU   XAWORK+28
XAWORKG  EQU   XAWORK+24
XAWORKF  EQU   XAWORK+20
XAWORKE  EQU   XAWORK+16
XAWORKD  EQU   XAWORK+12
XAWORKC  EQU   XAWORK+8
XAWORKB  EQU   XAWORK+4
XAWORKA  EQU   XAWORK
XARESRZ  EQU   @NM00116+12
XARESRY  EQU   @NM00116+8
XARESRX  EQU   @NM00116+4
XACMFLG4 EQU   XACMFLGB+1
XACMFLG3 EQU   XACMFLGB
XACMF28  EQU   XACMFLG2
XACMF27  EQU   XACMFLG2
XACMF26  EQU   XACMFLG2
XACMF25  EQU   XACMFLG2
XACMF24  EQU   XACMFLG2
XACMF23  EQU   XACMFLG2
XACMF22  EQU   XACMFLG2
XACMF21  EQU   XACMFLG2
XACMF18  EQU   XACMFLG1
XACMF17  EQU   XACMFLG1
XACMF16  EQU   XACMFLG1
XACMF15  EQU   XACMFLG1
XACMF14  EQU   XACMFLG1
XACMF13  EQU   XACMFLG1
XACMF12  EQU   XACMFLG1
XACMF11  EQU   XACMFLG1
XASAVSDR EQU   XASAVSTR+68
XASAVSDQ EQU   XASAVSTR+64
XASAVSDP EQU   XASAVSTR+60
XASAVSDO EQU   XASAVSTR+56
XASAVSDN EQU   XASAVSTR+52
XASAVSDM EQU   XASAVSTR+48
XASAVSDL EQU   XASAVSTR+44
XASAVSDK EQU   XASAVSTR+40
XASAVSDJ EQU   XASAVSTR+36
XASAVSDI EQU   XASAVSTR+32
XASAVSDH EQU   XASAVSTR+28
XASAVSDG EQU   XASAVSTR+24
XASAVSDF EQU   XASAVSTR+20
XASAVSDE EQU   XASAVSTR+16
XASAVSDD EQU   XASAVSTR+12
XASAVSDC EQU   XASAVSTR+8
XASAVSDB EQU   XASAVSTR+4
XASAVSDA EQU   XASAVSTR
XASAVLC4 EQU   XASAVLOX+12
XASAVLC3 EQU   XASAVLOX+8
XASAVLC2 EQU   XASAVLOX+4
XASAVLC1 EQU   XASAVLOX
XAK      EQU   XASVRB+44
@NM00115 EQU   XASVRB+41
XAL      EQU   @NM00114+1
XAN      EQU   @NM00114
XAR      EQU   @NM00113+1
XAP      EQU   XSA
SCVARD2  EQU   SCVAADDR+5
SCVARD1  EQU   SCVAADDR+1
SCVARID  EQU   SCVAADDR
SCVMDA2  EQU   SCVAMOD+13
SCVMDA1  EQU   SCVAMOD+9
SCVMDNM  EQU   SCVAMOD+1
SCVMDID  EQU   SCVAMOD
SCVJND   EQU   SCVAJOBN+1
SCVJNID  EQU   SCVAJOBN
SCVADD   EQU   SCVAASID+2
SCVADNO  EQU   SCVADHDR+1
SCVADID  EQU   SCVADHDR
SCVCCD   EQU   SCVACOMP+5
SCVCCM   EQU   SCVACOMP+2
@NM00112 EQU   SCVCCB
SCVCCU   EQU   SCVCCB
@NM00111 EQU   SCVAHDR+6
@NM00110 EQU   SCE+24
@NM00109 EQU   SCEMODE2
SCELOCK  EQU   SCEMODE2
SCEGLOC  EQU   SCEMODE2
SCEPKEY  EQU   SCEMODE2
SCESKEY  EQU   SCEMODE2
SCESUPER EQU   SCEMODE2
SCEPP    EQU   SCEMODE2
SCERECV  EQU   SCEMODE2
SCETCB   EQU   SCEMODE1
SCESRB   EQU   SCEMODE1
SCETYP1  EQU   SCEMODE1
SCELLOC  EQU   SCEMODE1
SCEGLSD  EQU   SCEMODE1
SCEGLSP  EQU   SCEMODE1
SCEDIS   EQU   SCEMODE1
SCESUPR  EQU   SCEMODE1
SCEPGIO  EQU   SCERRTYP
SCEDAT   EQU   SCERRTYP
SCESVCER EQU   SCERRTYP
SCEMEMTM EQU   SCERRTYP
SCEABEND EQU   SCERRTYP
SCEREST  EQU   SCERRTYP
SCEPROG  EQU   SCERRTYP
SCEMACH  EQU   SCERRTYP
@NM00108 EQU   SCEFLG1
SCECTR   EQU   SCECTRFW
@NM00107 EQU   SCE+4
@NM00106 EQU   SHDRFLGS
SHDRFRR  EQU   SHDRFLGS
SHDRCTR  EQU   SHDRCTFW
CHSAVWD2 EQU   CHSHORT+100
CHSAVWD1 EQU   CHSHORT+96
CHJSCBVS EQU   CHSHORT+92
CHUSCVS  EQU   CHSHORT+88
@NM00104 EQU   CHSHORT+84
@NM00103 EQU   CHSHORT+80
CHSQA    EQU   CHSHORT+44
CHQPA    EQU   CHSHORT+8
CHJCL    EQU   CHSHORT+4
CHSPC    EQU   CHSHORT
CHSPB    EQU   CHSTEP+4
CHTCB    EQU   CHSTEP+1
CHARSV23 EQU   CHSWT
CHARSV22 EQU   CHSWT
CHARSV21 EQU   CHSWT
CHAC     EQU   CHSWT
CHPSF    EQU   CHSWT
CHPSD    EQU   CHSWT
CHJCT    EQU   CHSWT
CHARSV20 EQU   CHSWT
CHCECB   EQU   CHASM+20
CHECB    EQU   CHASM+16
CHRGNAD  EQU   CHASM+12
CHARSV18 EQU   CHRGNSZ+1
CHRPRTY  EQU   CHRGNSZ
@NM00102 EQU   CHCIBP
CHEND    EQU   CHCIBP
CHECBP   EQU   CHASM
CHDER    EQU   CHPROCSN+4
CHARSV10 EQU   CHACT1
CHARSV09 EQU   CHACT1
CHARSV08 EQU   CHACT1
CHARSV07 EQU   CHACT1
CHARSV06 EQU   CHACT1
CHARSV05 EQU   CHACT1
CHMODIFY EQU   CHACT1
CHRDWTR  EQU   CHACT1
CHARSV30 EQU   CHPROCSN+2
CHQID    EQU   CHPROCSN
CHASID   EQU   CHTJID
CHTRKID  EQU   CHPKE
CHCIBCTR EQU   CHAIN+27
CHUNIT   EQU   CHAIN+24
CHCLS    EQU   CHAIN+16
CHPCOI   EQU   CHPARM
CHAFORCE EQU   CHIFY
CHAIFX   EQU   CHACT
CHCLD    EQU   CHACT
CHCL     EQU   CHACT
CHDSI    EQU   CHACT
CHDISC   EQU   CHACT
CHTERM   EQU   CHACT
CHSWAP   EQU   CHACT
CHABTERM EQU   CHSTS
CHDL     EQU   CHSTS
CHAD     EQU   CHSTS
CHQSPC   EQU   CHSTS
CHSOUT   EQU   CHSTS
CHSYS    EQU   CHSTS
CHAP     EQU   CHSTS
CHSZE    EQU   CHFLG+1
CHVCD    EQU   CHFLG
CHPTR    EQU   CHAIN
SVRBEND  EQU   RBSECT+192
RBFEPARM EQU   RBSECT+168
SIRBEND  EQU   RBSECT+168
RBRSV158 EQU   RBRSV150
RBRSV157 EQU   RBRSV150
RBRSV156 EQU   RBRSV150
RBRSV155 EQU   RBRSV150
RBRSV154 EQU   RBRSV150
RBRSV153 EQU   RBRSV150
RBRSV152 EQU   RBRSV150
RBRSV151 EQU   RBRSV150
RBRSV149 EQU   RBSECT+166
RBRSV148 EQU   RBSECT+164
RBRSV169 EQU   RBSDATA+3
RBSID    EQU   RBSDATA+2
RBSPKEY  EQU   RBSDATA+1
RBRSV168 EQU   RBSFLG3
RBSTERMO EQU   RBSFLG3
RBSBRNTR EQU   RBSFLG3
RBSPRNTR EQU   RBSFLG3
RBSCNCEL EQU   RBSFLG3
RBSRECRD EQU   RBSFLG3
RBSTERMI EQU   RBSFLG3
RBRSV167 EQU   RBSFLG3
RBSOWNRA EQU   RBSOWNR+1
RBSSUPER EQU   RBSFLGS2
RBSKEY0  EQU   RBSFLGS2
RBRSV166 EQU   RBSFLGS2
RBRSV165 EQU   RBSFLGS2
RBSINUSE EQU   RBSFLGS2
RBRSV164 EQU   RBSFLGS2
RBSXCTL2 EQU   RBSFLGS2
RBRSV163 EQU   RBSFLGS2
RBSPARMA EQU   RBSPARM+1
RBSHALT  EQU   RBSIOPRC
RBSNOIOP EQU   RBSIOPRC
RBSASYNC EQU   RBSFLGS1
RBRSV162 EQU   RBSFLGS1
RBSESTAE EQU   RBSFLGS1
RBSDUMMY EQU   RBSFLGS1
RBSSTAR  EQU   RBSFLGS1
RBSSTAI  EQU   RBSFLGS1
RBSEXIT  EQU   RBSCBB+4
RBSCHAIN EQU   RBSCBB
TIRBEND  EQU   @NM00100+8
PRBEND   EQU   @NM00100+8
RBRSV146 EQU   RBRSV138
RBRSV145 EQU   RBRSV138
RBRSV144 EQU   RBRSV138
RBRSV143 EQU   RBRSV138
RBRSV142 EQU   RBRSV138
RBRSV141 EQU   RBRSV138
RBRSV140 EQU   RBRSV138
RBRSV139 EQU   RBRSV138
RBRSV137 EQU   @NM00100+6
RBRSV136 EQU   @NM00100+4
RBRSV135 EQU   @NM00100
@NM00099 EQU   RBSECT+32
@NM00098 EQU   @NM00096+1
RBSCF    EQU   @NM00097
RBPGMQ1  EQU   RBPGMQ+1
@NM00095 EQU   RBPGMQ
@NM00094 EQU   RBSECT+16
@NM00093 EQU   @NM00089
@NM00092 EQU   @NM00089
RBIQETP  EQU   @NM00089
RBUSIQE  EQU   RBETXR
RBATTN   EQU   @NM00089
@NM00091 EQU   @NM00089
@NM00090 EQU   @NM00089
RBPMSVRB EQU   @NM00087
RBATNXIT EQU   @NM00087
@NM00088 EQU   @NM00087
RBWAITP  EQU   @NM00087
RBFNSVRB EQU   RBTRSVRB
RBFTP    EQU   @NM00087
RBSIZE   EQU   RBSECT+8
RBABOPSW EQU   RBSECT+4
RBPPSAV1 EQU   RBPPSAV+1
@NM00085 EQU   RBPPSAV
RBPRFXND EQU   RBPREFIX+64
RBINTCOD EQU   RBINTCDA+1
RBINLNTH EQU   RBINTCDA
RBWCSA   EQU   RBPREFIX+60
RBRSV004 EQU   RBPREFIX+57
RBSSSYN  EQU   RBFLAGS1
RBSCB    EQU   RBFLAGS1
RBLONGWT EQU   RBFLAGS1
RBASIR   EQU   RBFLAGS1
RBRSV159 EQU   RBFLAGS1
RBABEND  EQU   RBFLAGS1
RBXWAIT  EQU   RBFLAGS1
RBSLOCK  EQU   RBFLAGS1
RBRTRAN  EQU   RBRTPSW2+4
RBRTINCD EQU   RBRTICIL+2
RBRTILC  EQU   RBRTICIL+1
RBRSV160 EQU   RBRTICIL
RBRTPSW1 EQU   RBRTOPSW
RBRSV062 EQU   RBRSV054
RBRSV061 EQU   RBRSV054
RBRSV060 EQU   RBRSV054
RBRSV059 EQU   RBRSV054
RBRSV058 EQU   RBRSV054
RBRSV057 EQU   RBRSV054
RBRSV056 EQU   RBRSV054
RBRSV055 EQU   RBRSV054
RBRSV053 EQU   RBPREFIX+38
RBRSV052 EQU   RBPREFIX+36
RBRSV051 EQU   RBPREFIX+32
RBPRFXST EQU   RBPREFIX+32
RBRSV050 EQU   RBPREFIX+28
RBRSV049 EQU   RBRSV041
RBRSV048 EQU   RBRSV041
RBRSV047 EQU   RBRSV041
RBRSV046 EQU   RBRSV041
RBRSV045 EQU   RBRSV041
RBRSV044 EQU   RBRSV041
RBRSV043 EQU   RBRSV041
RBRSV042 EQU   RBRSV041
RBRSV040 EQU   RBPREFIX+26
RBRSV039 EQU   RBPREFIX+24
RBRSV038 EQU   RBPREFIX+20
RBRSV037 EQU   RBPREFIX+16
RBRSV036 EQU   RBRSV028
RBRSV035 EQU   RBRSV028
RBRSV034 EQU   RBRSV028
RBRSV033 EQU   RBRSV028
RBRSV032 EQU   RBRSV028
RBRSV031 EQU   RBRSV028
RBRSV030 EQU   RBRSV028
RBRSV029 EQU   RBRSV028
RBRSV027 EQU   RBRSV019
RBRSV026 EQU   RBRSV019
RBRSV025 EQU   RBRSV019
RBRSV024 EQU   RBRSV019
RBRSV023 EQU   RBRSV019
RBRSV022 EQU   RBRSV019
RBRSV021 EQU   RBRSV019
RBRSV020 EQU   RBRSV019
RBRSV018 EQU   RBPREFIX+13
RBRSV017 EQU   RBPREFIX+12
RBSRV016 EQU   RBPREFIX+11
RBRSV015 EQU   RBPREFIX+10
RBRSV014 EQU   RBPREFIX+8
RBRSV013 EQU   RBPREFIX+4
RBRSV012 EQU   RBPREFIX
RBEXSAVE EQU   XRBESA
XRBREG15 EQU   RBGRS15
XRBREG14 EQU   RBGRS14
XRBREG13 EQU   RBGRS13
XRBREG12 EQU   RBGRS12
XRBREG11 EQU   RBGRS11
XRBREG10 EQU   RBGRS10
XRBREG9  EQU   RBGRS9
XRBREG8  EQU   RBGRS8
XRBREG7  EQU   RBGRS7
XRBREG6  EQU   RBGRS6
XRBREG5  EQU   RBGRS5
XRBREG4  EQU   RBGRS4
XRBREG3  EQU   RBGRS3
XRBREG2  EQU   RBGRS2
XRBREG1  EQU   RBGRS1
XRBREG0  EQU   RBGRS0
XRBLNKA  EQU   RBLINKB
XRBWT    EQU   RBWCF
@NM00084 EQU   RBBASIC+24
RBOPSWPS EQU   RBOPSWB2
@NM00083 EQU   RBOPSWB2
@NM00082 EQU   XRBPSW
@NM00081 EQU   RBBASIC+12
XRBWAIT  EQU   RBECBWT
XRBFRRB  EQU   RBFDYN
@NM00080 EQU   XSTAB2
XRBACTV  EQU   RBFACTV
XRBTCBP  EQU   RBTCBNXT
@NM00079 EQU   XSTAB1
XRBCKPT  EQU   RBFTCKPT
@NM00078 EQU   XSTAB1
@NM00077 EQU   RBBASIC+8
@NM00076 EQU   RBEXRTNM+1
RBTMIND3 EQU   RBTMFLD
RBTMIND2 EQU   RBTMFLD
RBTMCMP  EQU   RBTMFLD
RBWLIM   EQU   RBTMFLD
RBRSV005 EQU   RBTMFLD
RBTMTOD  EQU   RBTMFLD
RBTMQUE  EQU   RBTMFLD
@NM00075 EQU   RBPRFX
@NM00074 EQU   TCBXTNT2+32
TCBRV181 EQU   TCBRV173
TCBRV180 EQU   TCBRV173
TCBRV179 EQU   TCBRV173
TCBRV178 EQU   TCBRV173
TCBRV177 EQU   TCBRV173
TCBRV176 EQU   TCBRV173
TCBRV175 EQU   TCBRV173
TCBRV174 EQU   TCBRV173
TCBRV172 EQU   TCBRV164
TCBRV171 EQU   TCBRV164
TCBRV170 EQU   TCBRV164
TCBRV169 EQU   TCBRV164
TCBRV168 EQU   TCBRV164
TCBRV167 EQU   TCBRV164
TCBRV166 EQU   TCBRV164
TCBRV165 EQU   TCBRV164
TCBRV163 EQU   TCBRV155
TCBRV162 EQU   TCBRV155
TCBRV161 EQU   TCBRV155
TCBRV160 EQU   TCBRV155
TCBRV159 EQU   TCBRV155
TCBRV158 EQU   TCBRV155
TCBRV157 EQU   TCBRV155
TCBRV156 EQU   TCBRV155
TCBRV154 EQU   TCBRV146
TCBRV153 EQU   TCBRV146
TCBRV152 EQU   TCBRV146
TCBRV151 EQU   TCBRV146
TCBRV150 EQU   TCBRV146
TCBRV149 EQU   TCBRV146
TCBRV148 EQU   TCBRV146
TCBRV147 EQU   TCBRV146
TCBRV145 EQU   TCBXTNT2+26
TCBRV144 EQU   TCBXTNT2+24
TCBRV143 EQU   TCBXTNT2+20
TCBRV142 EQU   TCBXTNT2+16
TCBRSV49 EQU   TCBXTNT2+12
TCBEVENT EQU   TCBXTNT2+8
TCBRCMP  EQU   TCBXTNT2+5
TCBRSVAB EQU   TCBXTNT2+4
TCBGTFA  EQU   TCBGTF+1
TCBRSV47 EQU   TCBTFLG
TCBRSV46 EQU   TCBTFLG
TCBRSV45 EQU   TCBTFLG
TCBRSV44 EQU   TCBTFLG
TCBRSV43 EQU   TCBTFLG
TCBDSPIT EQU   TCBTFLG
TCBERRTN EQU   TCBTFLG
TCBASYNC EQU   TCBTFLG
@NM00073 EQU   TCB+296
TCBSVCA2 EQU   TCB+292
TCBSWASA EQU   TCB+288
TCBDBTB  EQU   TCB+284
TCBRPT   EQU   TCB+280
TCBRV141 EQU   TCBRV133
TCBRV140 EQU   TCBRV133
TCBRV139 EQU   TCBRV133
TCBRV138 EQU   TCBRV133
TCBRV137 EQU   TCBRV133
TCBRV136 EQU   TCBRV133
TCBRV135 EQU   TCBRV133
TCBRV134 EQU   TCBRV133
TCBRV132 EQU   TCBRV124
TCBRV131 EQU   TCBRV124
TCBRV130 EQU   TCBRV124
TCBRV129 EQU   TCBRV124
TCBRV128 EQU   TCBRV124
TCBRV127 EQU   TCBRV124
TCBRV126 EQU   TCBRV124
TCBRV125 EQU   TCBRV124
TCBRV123 EQU   TCBFBYT2
TCBRV122 EQU   TCBFBYT2
TCBECBNV EQU   TCBFBYT2
TCBSSSYN EQU   TCBFBYT2
TCBFPRAP EQU   TCBFBYT2
TCBFDW   EQU   TCBFBYT2
TCBFMW   EQU   TCBFBYT2
TCBCNCB  EQU   TCBFBYT2
TCBLLH   EQU   TCBFBYT1
TCBRV113 EQU   TCBFBYT1
TCBEOT   EQU   TCBFBYT1
TCBRTM2  EQU   TCBFBYT1
TCBPGNLY EQU   TCBFBYT1
TCBNDIOS EQU   TCBFBYT1
TCBRV327 EQU   TCBFBYT1
TCBEOTFM EQU   TCBFBYT1
TCBAFFN  EQU   TCB+274
TCBRV326 EQU   TCB+272
TCBUKYSP EQU   TCB+268
TCBMODE  EQU   TCBESTAE+3
TCBERTYP EQU   TCBESTAE+2
TCBRV314 EQU   TCBESTRM
TCBRV313 EQU   TCBESTRM
TCBRV312 EQU   TCBESTRM
TCBRV311 EQU   TCBESTRM
TCBRV310 EQU   TCBESTRM
TCBRV309 EQU   TCBESTRM
TCBRV308 EQU   TCBESTRM
TCBETERM EQU   TCBESTRM
TCBSCBKY EQU   TCBESTAE
TCBRTM12 EQU   TCB+260
TCBTCBID EQU   TCB+256
TCBSTAWA EQU   TCB+252
TCBSWA   EQU   TCB+248
TCBFOEA  EQU   TCBFOE+1
TCBRSV42 EQU   TCBFOE
TCBCCPVI EQU   TCBXSCT+2
TCBRV325 EQU   TCBXSCT+1
TCBRV324 EQU   TCBXSCT1
TCBRV323 EQU   TCBXSCT1
TCBRV322 EQU   TCBXSCT1
TCBRV321 EQU   TCBXSCT1
TCBRV320 EQU   TCBXSCT1
TCBRV319 EQU   TCBXSCT1
TCBS3A   EQU   TCBXSCT1
TCBACTIV EQU   TCBXSCT1
TCBRSV41 EQU   TCB+239
TCBTID   EQU   TCB+238
TCBRSVAA EQU   TCB+237
TCBABCUR EQU   TCB+236
TCBTMSAV EQU   TCB+232
TCBIOTIM EQU   TCB+228
TCBRTWA  EQU   TCB+224
TCBBACK  EQU   TCB+220
TCBTIRB  EQU   TCB+216
TCBAECB  EQU   TCB+212
TCBEXT2A EQU   TCBEXT2+1
TCBRSV39 EQU   TCBEXT2
TCBSTMCT EQU   TCB+207
TCBSYSCT EQU   TCB+206
TCBRSV37 EQU   TCB+205
TCBEXSVC EQU   TCBDAR
TCBDARMS EQU   TCBDAR
TCBDARWT EQU   TCBDAR
TCBDARO  EQU   TCBDAR
TCBDARMC EQU   TCBDARC
TCBDARD  EQU   TCBDAR
TCBDARS  EQU   TCBDAR
TCBDARP  EQU   TCBDAR
TCBGTOFM EQU   TCBFLGS7
TCBADMP  EQU   TCBFLGS7
TCBRSTSK EQU   TCBFLGS7
TCBSVCS  EQU   TCBFLGS7
TCBSTACK EQU   TCBFLGS7
TCBRSV34 EQU   TCBFLGS7
TCBRSV33 EQU   TCBFLGS7
TCBGPECB EQU   TCBFLGS7
TCBNTJS  EQU   TCBFLGS6
TCBAPG   EQU   TCBFLGS6
TCBMIGR  EQU   TCBFLGS6
TCBRV303 EQU   TCBFLGS6
TCBSPVLK EQU   TCBFLGS6
TCBCPU   EQU   TCBFLGS6
TCBPIE17 EQU   TCBFLGS6
TCBRV    EQU   TCBFLGS6
TCBRSV79 EQU   TCBNDSP5
TCBRSV78 EQU   TCBNDSP5
TCBRSV77 EQU   TCBNDSP5
TCBRSV76 EQU   TCBNDSP5
TCBRSV75 EQU   TCBNDSP5
TCBRSV74 EQU   TCBNDSP5
TCBRSV95 EQU   TCBNDSP5
TCBRSV94 EQU   TCBNDSP5
TCBRSV93 EQU   TCBNDSP4
TCBRSV92 EQU   TCBNDSP4
TCBRSV91 EQU   TCBNDSP4
TCBRSV90 EQU   TCBNDSP4
TCBRSV89 EQU   TCBNDSP4
TCBRSV88 EQU   TCBNDSP4
TCBRSV87 EQU   TCBNDSP4
TCBRSV86 EQU   TCBNDSP4
TCBEXT1A EQU   TCBEXT1+1
TCBRSV32 EQU   TCBEXT1
TCBEXCPD EQU   TCB+192
TCBIOBRC EQU   TCB+188
TCBDDWTC EQU   TCB+186
TCBDDEXC EQU   TCB+184
TCBJSCBB EQU   TCBJSCB+1
@NM00072 EQU   TCBRECDE
TCBREC   EQU   TCBRECDE
TCBMDIDS EQU   TCB+176
TCBNDINT EQU   TCBNDSP3
TCBRSV27 EQU   TCBNDSP3
TCBRSV26 EQU   TCBNDSP3
TCBRSV25 EQU   TCBNDSP3
TCBRSV24 EQU   TCBNDSP3
TCBSRBND EQU   TCBNDSP3
TCBRV302 EQU   TCBNDSP3
TCBLJSND EQU   TCBNDSP3
TCBABE   EQU   TCBNDSP2
TCBDSS   EQU   TCBNDSP2
TCBOWAIT EQU   TCBNDSP2
TCBIWAIT EQU   TCBNDSP2
TCBNDTS  EQU   TCBNDSP2
TCBNDSVC EQU   TCBNDSP2
TCBSTPP  EQU   TCBNDSP2
TCBABD   EQU   TCBNDSP2
TCBRSV22 EQU   TCBNDSP1
TCBPIEND EQU   TCBNDSP1
TCBTPSP  EQU   TCBNDSP1
TCBDDRND EQU   TCBNDSP1
TCBRSPND EQU   TCBNDSP1
TCBRSTND EQU   TCBNDSP1
TCBDARPN EQU   TCBNDSP1
TCBDARTN EQU   TCBNDSP1
TCBNDSP0 EQU   TCBNDSP
TCBUSER  EQU   TCB+168
TCBTCTB  EQU   TCBTCT+1
TCBRSV9C EQU   TCBTCTGF
TCBRSV9B EQU   TCBTCTGF
TCBRSV9A EQU   TCBTCTGF
TCBRSV99 EQU   TCBTCTGF
TCBRSV98 EQU   TCBTCTGF
TCBRSV97 EQU   TCBTCTGF
TCBRSV20 EQU   TCBTCTGF
TCBSMFGF EQU   TCBTCTGF
TCBSTABB EQU   TCBSTAB+1
TCBSTCUR EQU   TCBNSTAE
TCBRV301 EQU   TCBNSTAE
TCBSYNCH EQU   TCBNSTAE
TCBHALT  EQU   TCBNSTAE
TCBPPSUP EQU   TCBNSTAE
TCB33E   EQU   TCBNSTAE
TCBQUIES EQU   TCBNSTAE
TCBSTABE EQU   TCBNSTAE
TCBAQE   EQU   TCB+156
TCBPQE   EQU   TCB+152
TCBTSDP  EQU   TCB+151
TCBTSLP  EQU   TCB+150
TCBSTPCT EQU   TCB+149
TCBCPUBN EQU   TCBTSFLG
TCBDYDSP EQU   TCBTSFLG
TCBRSV18 EQU   TCBTSFLG
TCBRSV17 EQU   TCBTSFLG
TCBTIOTG EQU   TCBTSFLG
TCBATT   EQU   TCBTSFLG
TCBSTPPR EQU   TCBTSFLG
TCBRV300 EQU   TCBTSTSK
TCBECB   EQU   TCB+144
TCBIQE   EQU   TCB+140
TCBLTC   EQU   TCB+136
TCBOTC   EQU   TCB+132
TCBNTC   EQU   TCB+128
TCBJSTCA EQU   TCBJSTCB+1
TCBRSV16 EQU   TCBJSTCB
TCBTQET  EQU   TCBTME
TCBTCB   EQU   TCB+116
TCBFSAB  EQU   TCBFSA+1
TCBQEL   EQU   TCBFSA
TCBGRS15 EQU   TCBGRS+60
TCBGRS14 EQU   TCBGRS+56
TCBGRS13 EQU   TCBGRS+52
TCBGRS12 EQU   TCBGRS+48
TCBGRS11 EQU   TCBGRS+44
TCBGRS10 EQU   TCBGRS+40
TCBGRS9  EQU   TCBGRS+36
TCBGRS8  EQU   TCBGRS+32
TCBGRS7  EQU   TCBGRS+28
TCBGRS6  EQU   TCBGRS+24
TCBGRS5  EQU   TCBGRS+20
TCBGRS4  EQU   TCBGRS+16
TCBGRS3  EQU   TCBGRS+12
TCBGRS2  EQU   TCBGRS+8
TCBGRS1  EQU   TCBGRS+4
TCBGRS0  EQU   TCBGRS
TCBJPQB  EQU   TCBJPQ+1
TCBRSV15 EQU   TCBPURGE
TCBRSV14 EQU   TCBPURGE
TCBRSV13 EQU   TCBPURGE
TCBRSV12 EQU   TCBPURGE
TCBRSV11 EQU   TCBPURGE
TCBRSV10 EQU   TCBPURGE
TCBRSV09 EQU   TCBPURGE
TCBJPQF  EQU   TCBPURGE
TCBJLB   EQU   TCB+40
TCBLLS   EQU   TCB+36
TCBDSP   EQU   TCB+35
TCBLMP   EQU   TCB+34
TCBPNDSP EQU   TCBFLGS5
TCBFCD1  EQU   TCBFLGS5
TCBSTP   EQU   TCBFLGS5
TCBSYS   EQU   TCBFLGS5
TCBANDSP EQU   TCBFLGS5
TCBPAGE  EQU   TCBFLGS5
TCBUXNDF EQU   TCBABWF
TCBFC    EQU   TCBFLGS5
TCBONDSP EQU   TCBFLGS4
TCBMPCND EQU   TCBFLGS4
TCBMPCVQ EQU   TCBFLGS4
TCBUXNDV EQU   TCBFLGS4
TCBHNDSP EQU   TCBFLGS4
TCBRQENA EQU   TCBFLGS4
TCBSER   EQU   TCBFLGS4
TCBNDUMP EQU   TCBFLGS4
TCBDWSTA EQU   TCBFLGS3
TCBRSV08 EQU   TCBFLGS3
TCBRSV07 EQU   TCBFLGS3
TCBRSV06 EQU   TCBFLGS3
TCBABGM  EQU   TCBFLGS3
TCBABTRM EQU   TCBFLGS3
TCBADINP EQU   TCBFLGS3
TCBFSM   EQU   TCBFLGS3
TCBFTS   EQU   TCBFLGS2
TCBFETXR EQU   TCBFLGS2
TCBFDSOP EQU   TCBFLGS2
TCBFJMC  EQU   TCBFLGS2
TCBFSMC  EQU   TCBFLGS2
TCBFABOP EQU   TCBFLGS2
TCBFSTI  EQU   TCBFLGS2
TCBFOINP EQU   TCBFLGS2
TCBFX    EQU   TCBFLGS1
TCBFS    EQU   TCBFLGS1
TCBFT    EQU   TCBFLGS1
TCBPDUMP EQU   TCBFLGS1
TCBNONPR EQU   TCBFLGS1
TCBFERA  EQU   TCBFLGS1
TCBFE    EQU   TCBFLGS1
TCBFA    EQU   TCBFLGS1
TCBZERO  EQU   TCBPKF
TCBFLAG  EQU   TCBPKF
TCBMSSB  EQU   TCBMSS+1
TCBRSV03 EQU   TCBMSS
TCBTRNB  EQU   TCBTRN+1
TCBRSV02 EQU   TCBABF
TCBOLTEP EQU   TCBABF
TCBTCP   EQU   TCBABF
TCBTCPP  EQU   TCBABF
TCBRSV01 EQU   TCBABF
TCBGRPH  EQU   TCBABF
TCBNOCHK EQU   TCBABF
TCBMOD91 EQU   TCBABF
TCBCMPC  EQU   TCBCMP+1
TCBRV318 EQU   TCBCMSG
TCBRV317 EQU   TCBCIND
TCBRV316 EQU   TCBCWTO
TCBCASID EQU   TCBCDBL
TCBNOCC  EQU   TCBSTCC
TCBDMPO  EQU   TCBCPP
TCBCSTEP EQU   TCBCMPF
TCBCREQ  EQU   TCBCMPF
TCBTIO   EQU   TCB+12
TCBDEB   EQU   TCB+8
TCBPIEA  EQU   TCBPIE+1
TCBPM    EQU   TCBPMASK
@NM00071 EQU   TCBPMASK
TCBFRS6  EQU   TCBFRS+24
TCBFRS4  EQU   TCBFRS+16
TCBFRS2  EQU   TCBFRS+8
TCBFRS0  EQU   TCBFRS
@NM00070 EQU   SDWA+512
@NM00069 EQU   SDWADPVA
SDWAEBC  EQU   SDWADPVA
SDWAVRAL EQU   SDWARA
SDWAERTM EQU   SDWA+396
SDWACOMP EQU   SDWA+392
SDWARCPL EQU   SDWA+364
@NM00068 EQU   SDWADPSA+32
SDWATO4  EQU   SDWADPSL+28
SDWAFRM4 EQU   SDWADPSL+24
SDWATO3  EQU   SDWADPSL+20
SDWAFRM3 EQU   SDWADPSL+16
SDWATO2  EQU   SDWADPSL+12
SDWAFRM2 EQU   SDWADPSL+8
SDWATO1  EQU   SDWADPSL+4
SDWAFRM1 EQU   SDWADPSL
@NM00067 EQU   SDWADDAT+3
@NM00066 EQU   SDWAPDAT
SDWAUSPL EQU   SDWAPDAT
SDWADPSW EQU   SDWAPDAT
SDWATJPA EQU   SDWAPDAT
SDWATLPA EQU   SDWAPDAT
SDWADREG EQU   SDWAPDAT
SDWADSAH EQU   SDWAPDAT
SDWADSAS EQU   SDWAPDAT
@NM00065 EQU   SDWASDA1
SDWAERR  EQU   SDWASDA1
SDWAIO   EQU   SDWASDA1
SDWADM   EQU   SDWASDA0
SDWAQQS  EQU   SDWASDA0
SDWACBS  EQU   SDWASDA0
SDWAGTF  EQU   SDWASDA0
SDWASWA  EQU   SDWASDA0
SDWALSQA EQU   SDWASDA0
SDWASQA  EQU   SDWASDA0
SDWANUC  EQU   SDWASDA0
@NM00064 EQU   SDWADUMP+2
@NM00063 EQU   SDWADPFS
SDWASLST EQU   SDWADPFS
@NM00062 EQU   SDWADPFS
SDWAENSN EQU   SDWADPFS
SDWADLST EQU   SDWADPFS
SDWADPT  EQU   SDWADPFS
SDWADPID EQU   SDWADUMP
SDWADPLA EQU   SDWA+316
SDWASEQ# EQU   SDWA+290
SDWAASID EQU   SDWA+288
SDWATALW EQU   SDWALKWS+28
SDWATDLW EQU   SDWALKWS+24
SDWATNLW EQU   SDWALKWS+20
SDWAAPLW EQU   SDWALKWS+16
SDWAIPLW EQU   SDWALKWS+12
SDWAILLW EQU   SDWALKWS+8
SDWAIULW EQU   SDWALKWS+4
SDWAICLW EQU   SDWALKWS
SDWAFLLK EQU   SDWAACF4
SDWACMS  EQU   SDWAACF4
SDWAOPTM EQU   SDWAACF4
SDWATADB EQU   SDWAACF4
SDWATDNB EQU   SDWAACF4
SDWATNCB EQU   SDWAACF4
SDWAILCH EQU   SDWAACF4
SDWAIUCB EQU   SDWAACF4
SDWAICAT EQU   SDWAACF3
SDWAIPRG EQU   SDWAACF3
SDWASALL EQU   SDWAACF3
SDWAASMP EQU   SDWAACF3
SDWADISP EQU   SDWAACF3
@NM00061 EQU   SDWAACF3
@NM00060 EQU   SDWAACF2
SDWAFREE EQU   SDWAACF2
SDWAUPRG EQU   SDWAACF2
@NM00059 EQU   SDWAACF2
SDWASPIN EQU   SDWAACF2
@NM00058 EQU   SDWAACF2
SDWALCPU EQU   SDWACPUA+2
@NM00057 EQU   SDWACPUA
SDWARECA EQU   SDWA+244
SDWARTYA EQU   SDWA+240
SDWACPUI EQU   SDWA+239
@NM00056 EQU   SDWAIOFS
SDWANIOP EQU   SDWAIOFS
SDWANOIO EQU   SDWAIOFS
SDWAIOHT EQU   SDWAIOFS
SDWAIOQR EQU   SDWAIOFS
SDWAFMID EQU   SDWA+236
SDWAERFL EQU   SDWAERRD
SDWAMCIV EQU   SDWAERRD
SDWARPIV EQU   SDWAERRD
SDWAMABD EQU   SDWAERRD
SDWACTS  EQU   SDWAERRD
SDWASTAE EQU   SDWAERRD
SDWANRBE EQU   SDWAERRD
SDWACLUP EQU   SDWAERRD
@NM00055 EQU   SDWAERRC
SDWAEAS  EQU   SDWAERRC
SDWAPERC EQU   SDWAERRC
SDWAIRB  EQU   SDWAERRC
SDWASTAI EQU   SDWAERRC
SDWASTAF EQU   SDWAERRC
SDWASRBM EQU   SDWAERRB
SDWALDIS EQU   SDWAERRB
SDWAENRB EQU   SDWAERRB
SDWATYP1 EQU   SDWAERRB
@NM00054 EQU   SDWAERRB
SDWAPGIO EQU   SDWAERRA
SDWATEXC EQU   SDWAERRA
SDWASVCE EQU   SDWAERRA
SDWAABTM EQU   SDWAERRA
SDWASVCD EQU   SDWAERRA
SDWARKEY EQU   SDWAERRA
SDWAPCHK EQU   SDWAERRA
SDWAMCHK EQU   SDWAERRA
SDWATIME EQU   SDWAMCH+20
SDWARFSA EQU   SDWAMCH+16
@NM00053 EQU   SDWAMCH+14
SDWAVEQR EQU   SDWARSR2
SDWAPGFX EQU   SDWARSR2
SDWAFLSQ EQU   SDWARSR2
SDWAFSQA EQU   SDWARSR2
SDWANUCL EQU   SDWARSR2
SDWASPER EQU   SDWARSR2
SDWAINTC EQU   SDWARSR2
SDWAOFLN EQU   SDWARSR2
SDWACHNG EQU   SDWARSR1
SDWAMSER EQU   SDWARSR1
@NM00052 EQU   SDWARSR1
SDWACPID EQU   SDWAMCH+10
SDWATERR EQU   SDWAMCHD
SDWAFPRX EQU   SDWAMCHD
SDWAINSF EQU   SDWAMCHD
SDWAACR  EQU   SDWAMCHD
SDWASCK  EQU   SDWAMCHD
SDWAPSWU EQU   SDWAMCHD
SDWAREGU EQU   SDWAMCHD
SDWASKYF EQU   SDWAMCHD
@NM00051 EQU   SDWAMCHS
SDWARSRF EQU   SDWAMCHS
SDWARSRC EQU   SDWAMCHS
SDWAINVP EQU   SDWAMCHS
SDWATSVL EQU   SDWAMCHS
SDWARCDF EQU   SDWAMCHS
SDWASRVL EQU   SDWAMCHS
SDWASCKE EQU   SDWASTCK+4
SDWASCKB EQU   SDWASTCK
SDWALNTH EQU   SDWAIDNT+1
SDWASPID EQU   SDWAIDNT
SDWASR15 EQU   SDWASRSV+60
SDWASR14 EQU   SDWASRSV+56
SDWASR13 EQU   SDWASRSV+52
SDWASR12 EQU   SDWASRSV+48
SDWASR11 EQU   SDWASRSV+44
SDWASR10 EQU   SDWASRSV+40
SDWASR09 EQU   SDWASRSV+36
SDWASR08 EQU   SDWASRSV+32
SDWASR07 EQU   SDWASRSV+28
SDWASR06 EQU   SDWASRSV+24
SDWASR05 EQU   SDWASRSV+20
SDWASR04 EQU   SDWASRSV+16
SDWASR03 EQU   SDWASRSV+12
SDWASR02 EQU   SDWASRSV+8
SDWASR01 EQU   SDWASRSV+4
SDWASR00 EQU   SDWASRSV
SDWATRN2 EQU   SDWAAEC2+4
SDWAIPC2 EQU   SDWAICD2
SDWAIMC2 EQU   SDWAICD2
SDWAIPR2 EQU   SDWAICD2
@NM00050 EQU   SDWAINC2
@NM00049 EQU   SDWAILC2
SDWAIL2  EQU   SDWAILC2
@NM00048 EQU   SDWAILC2
@NM00047 EQU   SDWAAEC2
SDWAADD2 EQU   SDWANXT2+1
@NM00046 EQU   SDWANXT2
@NM00045 EQU   SDWAEC2+3
SDWASGN2 EQU   SDWAINT2
SDWAEXP2 EQU   SDWAINT2
SDWADEC2 EQU   SDWAINT2
SDWAFPO2 EQU   SDWAINT2
SDWACC2  EQU   SDWAINT2
@NM00044 EQU   SDWAINT2
SDWAPGM2 EQU   SDWAMWP2
SDWAWAT2 EQU   SDWAMWP2
SDWAMCK2 EQU   SDWAMWP2
SDWAECT2 EQU   SDWAMWP2
SDWAKEY2 EQU   SDWAMWP2
SDWAEXT2 EQU   SDWAEMK2
SDWAIO2  EQU   SDWAEMK2
SDWATRM2 EQU   SDWAEMK2
@NM00043 EQU   SDWAEMK2
SDWAPER2 EQU   SDWAEMK2
@NM00042 EQU   SDWAEMK2
SDWATRAN EQU   SDWAAEC1+4
SDWAIPC1 EQU   SDWAICD1
SDWAIMC1 EQU   SDWAICD1
SDWAIPR1 EQU   SDWAICD1
@NM00041 EQU   SDWAINC1
@NM00040 EQU   SDWAILC1
SDWAIL1  EQU   SDWAILC1
@NM00039 EQU   SDWAILC1
@NM00038 EQU   SDWAAEC1
SDWAADD1 EQU   SDWANXT1+1
@NM00037 EQU   SDWANXT1
@NM00036 EQU   SDWAEC1+3
SDWASGN1 EQU   SDWAINT1
SDWAEXP1 EQU   SDWAINT1
SDWADEC1 EQU   SDWAINT1
SDWAFPO1 EQU   SDWAINT1
SDWACC1  EQU   SDWAINT1
@NM00035 EQU   SDWAINT1
SDWAPGM1 EQU   SDWAMWP1
SDWAWAT1 EQU   SDWAMWP1
SDWAMCK1 EQU   SDWAMWP1
SDWAECT1 EQU   SDWAMWP1
SDWAKEY1 EQU   SDWAMWP1
SDWAEXT1 EQU   SDWAEMK1
SDWAIO1  EQU   SDWAEMK1
SDWATRM1 EQU   SDWAEMK1
@NM00034 EQU   SDWAEMK1
SDWAPER1 EQU   SDWAEMK1
@NM00033 EQU   SDWAEMK1
SDWAIOBR EQU   SDWA+100
SDWAEPA  EQU   SDWA+96
@NM00032 EQU   SDWANAME+4
SDWARBAD EQU   SDWANAME
SDWAGR15 EQU   SDWAGRSV+60
SDWAGR14 EQU   SDWAGRSV+56
SDWAGR13 EQU   SDWAGRSV+52
SDWAGR12 EQU   SDWAGRSV+48
SDWAGR11 EQU   SDWAGRSV+44
SDWAGR10 EQU   SDWAGRSV+40
SDWAGR09 EQU   SDWAGRSV+36
SDWAGR08 EQU   SDWAGRSV+32
SDWAGR07 EQU   SDWAGRSV+28
SDWAGR06 EQU   SDWAGRSV+24
SDWAGR05 EQU   SDWAGRSV+20
SDWAGR04 EQU   SDWAGRSV+16
SDWAGR03 EQU   SDWAGRSV+12
SDWAGR02 EQU   SDWAGRSV+8
SDWAGR01 EQU   SDWAGRSV+4
SDWAGR00 EQU   SDWAGRSV
SDWANXTP EQU   SDWACTL2+5
SDWASGP  EQU   SDWAPMKP
SDWAEUP  EQU   SDWAPMKP
SDWADOP  EQU   SDWAPMKP
SDWAFPP  EQU   SDWAPMKP
SDWACCP  EQU   SDWAPMKP
SDWAILP  EQU   SDWAPMKP
SDWAINTP EQU   SDWACTL2+2
SDWASPVP EQU   SDWAMWPP
SDWAWATP EQU   SDWAMWPP
SDWAMCKP EQU   SDWAMWPP
@NM00031 EQU   SDWAMWPP
SDWAKEYP EQU   SDWAMWPP
SDWAEXTP EQU   SDWACMKP
SDWAIOP  EQU   SDWACMKP
SDWANXTA EQU   SDWACTL1+5
SDWASGA  EQU   SDWAPMKA
SDWAEUA  EQU   SDWAPMKA
SDWADOA  EQU   SDWAPMKA
SDWAFPA  EQU   SDWAPMKA
SDWACCA  EQU   SDWAPMKA
SDWAILA  EQU   SDWAPMKA
SDWAINTA EQU   SDWACTL1+2
SDWASPVA EQU   SDWAMWPA
SDWAWATA EQU   SDWAMWPA
SDWAMCKA EQU   SDWAMWPA
@NM00030 EQU   SDWAMWPA
SDWAKEYA EQU   SDWAMWPA
SDWAEXTA EQU   SDWACMKA
SDWAIOA  EQU   SDWACMKA
SDWACMPC EQU   SDWAABCC+1
@NM00029 EQU   SDWACMPF
SDWASTCC EQU   SDWACMPF
@NM00028 EQU   SDWACMPF
SDWASTEP EQU   SDWACMPF
PVTEND   EQU   PVT+1944
PVTTASID EQU   PVT+1942
PVTXXXXX EQU   PVT+1940
PVTMVCLC EQU   PVT+1936
PVTVCONS EQU   PVT+1896
PVTPRSB  EQU   PVT+1892
PVTCIOQL EQU   PVTPCBQS+36
PVTCIOQF EQU   PVTPCBQS+32
PVTGFADL EQU   PVTPCBQS+28
PVTGFADF EQU   PVTPCBQS+24
PVTFPCBL EQU   PVTPCBQS+20
PVTFPCBF EQU   PVTPCBQS+16
PVTPCBQR EQU   PVTPCBQS
PVTLPAFX EQU   PVT+1850
PVTLSQAF EQU   PVT+1848
PVTLPAR  EQU   PVT+1844
PVTLPAI  EQU   PVT+1840
PVTLPAFC EQU   PVT+1838
PVTCHUIC EQU   PVT+1836
PVTCOMFX EQU   PVT+1834
PVTSQAFX EQU   PVT+1832
PVTCNTFX EQU   PVT+1830
PVTDEFFX EQU   PVT+1828
PVTFIXOK EQU   PVT+1826
PVTPEROK EQU   PVT+1824
PVTMAXFX EQU   PVT+1822
PVTPERFX EQU   PVT+1820
PVTRSRB  EQU   PVT+1776
PVTRESV5 EQU   PVT+1773
PVTSRBS  EQU   PVT+1772
PVTSSRB  EQU   PVT+1768
PVTACA   EQU   PVTWSAX+1400
PVTSAVE  EQU   PVTWSAX+1328
PVTWSA18 EQU   PVTWSAX+1256
PVTWSA17 EQU   PVTWSAX+1184
PVTWSA16 EQU   PVTWSAX+1112
PVTWSA15 EQU   PVTWSAX+1040
PVTWSA14 EQU   PVTWSAX+968
PVTWSA13 EQU   PVTWSAX+896
PVTWSA12 EQU   PVTWSAX+824
PVTWSA11 EQU   PVTWSAX+752
PVTWSA10 EQU   PVTWSAX+672
PVTWSA9  EQU   PVTWSAX+592
PVTWSA8  EQU   PVTWSAX+504
PVTWSA7  EQU   PVTWSAX+432
PVTWSA6  EQU   PVTWSAX+360
PVTWSA5  EQU   PVTWSAX+288
PVTWSA4  EQU   PVTWSAX+216
PVTWSA3  EQU   PVTWSAX+144
PVTWSA2  EQU   PVTWSAX+72
PVTWSA1  EQU   PVTWSAX
PVTPFTQR EQU   PVTQS+20
PVTRSBQL EQU   PVTQS+18
PVTRSBQF EQU   PVTQS+16
PVTSQAQL EQU   PVTQS+14
PVTSQAQF EQU   PVTQS+12
PVTCFQL  EQU   PVTQS+10
PVTCFQF  EQU   PVTQS+8
PVTRSRVL EQU   PVTQS+6
PVTRSRVF EQU   PVTQS+4
PVTAFQL  EQU   PVTQS+2
PVTAFQF  EQU   PVTQS
PVTSPFR  EQU   PVT+302
PVTCFMCT EQU   PVT+300
PVTSPREC EQU   PVT+296
PVTCAREC EQU   PVT+292
PVTCAOUT EQU   PVT+288
PVTCAIN  EQU   PVT+284
PVTNSWPS EQU   PVT+280
PVTNPREC EQU   PVT+276
PVTSPOUT EQU   PVT+272
PVTSPIN  EQU   PVT+268
PVTVAMR  EQU   PVT+264
PVTVAMO  EQU   PVT+260
PVTVAMI  EQU   PVT+256
PVTNPOUT EQU   PVT+252
PVTNPIN  EQU   PVT+248
PVTPRSET EQU   PVT+244
PVTFRSLT EQU   PVT+240
PVTPAGIO EQU   PVT+236
PVTSWPIO EQU   PVT+232
PVTPSWPP EQU   PVT+228
PVTPPREF EQU   PVT+224
PVTPOPBR EQU   PVT+220
PVTPRELF EQU   PVT+216
PVTPRELV EQU   PVT+212
PVTPFREE EQU   PVT+208
PVTPRELS EQU   PVT+204
PVTPOUT  EQU   PVT+200
PVTPFXLD EQU   PVT+196
PVTPITAS EQU   PVT+192
PVTPSRBP EQU   PVT+188
PVTPDSEG EQU   PVT+184
PVTPCSGB EQU   PVT+180
PVTPCSEG EQU   PVT+176
PVTPINV  EQU   PVT+172
PVTPSWPC EQU   PVT+168
PVTPSOUT EQU   PVT+164
PVTPSWIN EQU   PVT+160
PVTPRCV  EQU   PVT+156
PVTPRCFI EQU   PVT+152
PVTPRCF  EQU   PVT+148
PVTPVRC  EQU   PVT+144
PVTPVRIN EQU   PVT+140
PVTPVRLS EQU   PVT+136
PVTPVEQR EQU   PVT+132
PVTPPIOI EQU   PVT+128
PVTPVRPO EQU   PVT+124
PVTPRFR  EQU   PVT+120
PVTPFP2  EQU   PVT+116
PVTPFP   EQU   PVT+112
PVTPFTE  EQU   PVT+108
PVTPCB   EQU   PVT+104
PVTREP2  EQU   PVT+100
PVTPIOCP EQU   PVT+96
PVTPIOP  EQU   PVT+92
PVTPGFAD EQU   PVT+88
PVTPGFA  EQU   PVT+84
PVTPSQA  EQU   PVT+80
PVTPSINT EQU   PVT+76
PVTSRBID EQU   PVT+68
PVTPCIWA EQU   PVT+64
PVTHQSA  EQU   PVT+62
PVTLQSA  EQU   PVT+60
PVTOROOT EQU   PVT+56
PVTPRCA  EQU   PVT+52
PVTREUS  EQU   PVT+48
PVTSQNPC EQU   PVT+47
PVTSQVRC EQU   PVT+46
PVTRSUS  EQU   PVT+44
PVTVROOT EQU   PVT+40
PVTPCBLO EQU   PVT+38
PVTPCBCT EQU   PVT+36
PVTDFRS  EQU   PVT+34
PVTRSQA  EQU   PVT+32
PVTPTLB  EQU   PVT+31
PVTPCBNO EQU   PVT+30
PVTSRBNO EQU   PVT+29
PVTSQDC  EQU   PVT+28
PVTLCSA  EQU   PVT+26
PVTLPRIV EQU   PVT+24
PVTLVR   EQU   PVT+22
PVTFVR   EQU   PVT+20
PVTLPFN  EQU   PVT+18
PVTFPFN  EQU   PVT+16
PVTPFTP  EQU   PVT+12
PVTSSPIN EQU   PVT+11
PVTPCBS  EQU   PVT+10
PVTPOOL  EQU   PVT+8
PVTAFCOK EQU   PVT+6
PVTAFCLO EQU   PVT+4
PVTAFC   EQU   PVT+2
@NM00027 EQU   PVTFLAG2
PVTRSMGM EQU   PVTFLAG2
PVTDUMP  EQU   PVTFLAG1
PVTSIT   EQU   PVTFLAG1
PVTLSI   EQU   PVTFLAG1
PVTAPREF EQU   PVTFLAG1
PVTPCBLT EQU   PVTFLAG1
PVTSRBIU EQU   PVTFLAG1
PVTBGMS  EQU   PVTFLAG1
PVTPMSG  EQU   PVTFLAG1
CVTLEVL  EQU   CVTRELNO+2
CVTNUMB  EQU   CVTRELNO
CVTMDL   EQU   CVTFIX+250
@NM00002 EQU   CVTFIX+248
@NM00001 EQU   CVTFIX
CVTRV482 EQU   CVTXTNT2+128
CVTRV481 EQU   CVTXTNT2+124
CVTRV480 EQU   CVTXTNT2+120
CVTRV479 EQU   CVTXTNT2+118
CVTRV478 EQU   CVTXTNT2+117
CVTRV477 EQU   CVTXTNT2+116
CVTRV476 EQU   CVTXTNT2+115
CVTRV475 EQU   CVTXTNT2+114
CVTRV474 EQU   CVTRV466
CVTRV473 EQU   CVTRV466
CVTRV472 EQU   CVTRV466
CVTRV471 EQU   CVTRV466
CVTRV470 EQU   CVTRV466
CVTRV469 EQU   CVTRV466
CVTRV468 EQU   CVTRV466
CVTRV467 EQU   CVTRV466
CVTRV465 EQU   CVTRV457
CVTRV464 EQU   CVTRV457
CVTRV463 EQU   CVTRV457
CVTRV462 EQU   CVTRV457
CVTRV461 EQU   CVTRV457
CVTRV460 EQU   CVTRV457
CVTRV459 EQU   CVTRV457
CVTRV458 EQU   CVTRV457
CVTRV456 EQU   CVTXTNT2+108
CVTRV455 EQU   CVTXTNT2+104
CVTRV454 EQU   CVTXTNT2+100
CVTRV453 EQU   CVTXTNT2+96
CVTRV452 EQU   CVTXTNT2+94
CVTRV451 EQU   CVTXTNT2+92
CVTRV450 EQU   CVTXTNT2+90
CVTRV449 EQU   CVTXTNT2+88
CVTRV448 EQU   CVTXTNT2+87
CVTRV447 EQU   CVTXTNT2+86
CVTRV446 EQU   CVTRV438
CVTRV445 EQU   CVTRV438
CVTRV444 EQU   CVTRV438
CVTRV443 EQU   CVTRV438
CVTRV442 EQU   CVTRV438
CVTRV441 EQU   CVTRV438
CVTRV440 EQU   CVTRV438
CVTRV439 EQU   CVTRV438
CVTRV437 EQU   CVTRV429
CVTRV436 EQU   CVTRV429
CVTRV435 EQU   CVTRV429
CVTRV434 EQU   CVTRV429
CVTRV433 EQU   CVTRV429
CVTRV432 EQU   CVTRV429
CVTRV431 EQU   CVTRV429
CVTRV430 EQU   CVTRV429
CVTRV428 EQU   CVTXTNT2+80
CVTRV427 EQU   CVTXTNT2+76
CVTRV426 EQU   CVTXTNT2+72
CVTRV425 EQU   CVTXTNT2+68
CVTATACT EQU   CVTATCVT
CVTRV423 EQU   CVTXTNT2+62
CVTRV422 EQU   CVTXTNT2+60
CVTRV421 EQU   CVTXTNT2+58
CVTRV420 EQU   CVTXTNT2+56
CVTRV419 EQU   CVTXTNT2+55
CVTRV418 EQU   CVTXTNT2+54
CVTRV417 EQU   CVTRV409
CVTRV416 EQU   CVTRV409
CVTRV415 EQU   CVTRV409
CVTRV414 EQU   CVTRV409
CVTRV413 EQU   CVTRV409
CVTRV412 EQU   CVTRV409
CVTRV411 EQU   CVTRV409
CVTRV410 EQU   CVTRV409
CVTRV408 EQU   CVTRV400
CVTRV407 EQU   CVTRV400
CVTRV406 EQU   CVTRV400
CVTRV405 EQU   CVTRV400
CVTRV404 EQU   CVTRV400
CVTRV403 EQU   CVTRV400
CVTRV402 EQU   CVTRV400
CVTRV401 EQU   CVTRV400
CVTICB   EQU   CVTXTNT2+48
CVTSKTA  EQU   CVTXTNT2+44
CVTCCVT  EQU   CVTXTNT2+40
CVTRSV98 EQU   CVTXTNT2+36
CVTRSV97 EQU   CVTXTNT2+34
CVTRSV96 EQU   CVTXTNT2+32
CVTOLTEP EQU   CVTXTNT2+28
CVTQIDA  EQU   CVTQID+1
CVTRSV95 EQU   CVTQID
CVTRSV94 EQU   CVTXTNT2+20
CVTRSV93 EQU   CVTXTNT2+16
CVTRSV92 EQU   CVTXTNT2+12
CVTDEBVR EQU   CVTXTNT2+8
CVTRSV91 EQU   CVTXTNT2+6
CVTRSV9H EQU   CVTFLGBT
CVTRSV9G EQU   CVTFLGBT
CVTRSV9F EQU   CVTFLGBT
CVTRSV9E EQU   CVTFLGBT
CVTRSV9D EQU   CVTFLGBT
CVTBAH   EQU   CVTFLGBT
CVTVME   EQU   CVTFLGBT
CVTNPE   EQU   CVTFLGBT
CVTNUCLS EQU   CVTXTNT2+4
CVTDSSVA EQU   CVTDSSV+1
CVTRSV89 EQU   CVTDSSV
CVTRSV88 EQU   CVTXTNT1+8
CVTRSV87 EQU   CVTXTNT1+4
CVTFACHN EQU   CVTXTNT1
CVTRV488 EQU   CVTMAP+412
CVTRV487 EQU   CVTMAP+408
CVTRV486 EQU   CVTMAP+404
CVTRV485 EQU   CVTMAP+400
CVTACTAP EQU   CVTMAP+396
CVTAUTH  EQU   CVTMAP+392
CVTRV490 EQU   CVTMAP+388
CVTSU    EQU   CVTMAP+384
CVTVOLT1 EQU   CVTVOLM1+1
CVTVOLI1 EQU   CVTVOLF1
CVTSTOA  EQU   CVTMAP+376
CVTRSV58 EQU   CVTMAP+374
CVTRSV57 EQU   CVTMAP+372
CVTDDCE  EQU   CVTMAP+368
CVTPNWFR EQU   CVTMAP+364
CVTSMF   EQU   CVTMAP+360
CVTSULK  EQU   CVTMAP+358
CVTSLKO  EQU   CVTSYSK
CVTSLKP  EQU   CVTSYSK
CVTSLKQ  EQU   CVTSYSK
CVTSLKR  EQU   CVTSYSK
CVTRSV56 EQU   CVTSYSK
CVTRSV55 EQU   CVTSYSK
CVTRSV54 EQU   CVTSYSK
CVTRSV53 EQU   CVTSYSK
CVTRSV52 EQU   CVTA1F1
CVTRSV51 EQU   CVTA1F1
CVTRSV50 EQU   CVTA1F1
CVTRSV49 EQU   CVTA1F1
CVTRSV48 EQU   CVTA1F1
CVTRSV47 EQU   CVTA1F1
CVTSRSW  EQU   CVTA1F1
CVTPFSW  EQU   CVTA1F1
CVTPCVT  EQU   CVTMAP+352
CVTRSV46 EQU   CVTMAP+344
CVTRSV45 EQU   CVTMAP+340
CVTRSV44 EQU   CVTMAP+338
CVTRSV43 EQU   CVTMAP+336
CVTHJESA EQU   CVTHJES+1
CVTRSV42 EQU   CVTHJES
CVTEXT2A EQU   CVTEXT2+1
CVTRSV41 EQU   CVTEXT2
CVTAPFA  EQU   CVTAPF+1
CVTRSV40 EQU   CVTAPF
CVTRV518 EQU   CVTINTLA
CVTRV517 EQU   CVTERPV
CVTEORM  EQU   CVTMAP+312
CVTMCHPR EQU   CVTMAP+308
CVTTZ    EQU   CVTMAP+304
CVTJEPS  EQU   CVTMAP+300
CVTJESCT EQU   CVTMAP+296
CVTMODE  EQU   CVTMAP+292
CVTPTRV  EQU   CVTMAP+288
CVTREAL  EQU   CVTMAP+284
CVTRSV39 EQU   CVTMAP+280
CVTRSV38 EQU   CVTMAP+276
CVTDMSRA EQU   CVTDMSR+1
CVTRV634 EQU   CVTDMSRF
CVTRV633 EQU   CVTDMSRF
CVTRV632 EQU   CVTDMSRF
CVTRV631 EQU   CVTDMSRF
CVTRV630 EQU   CVTDMSRF
CVTRV629 EQU   CVTDMSRF
CVTUDUMP EQU   CVTDMSRF
CVTSDUMP EQU   CVTDMSRF
CVTQMSGA EQU   CVTQMSG+1
CVTRSV36 EQU   CVTQMSG
CVTAMFF  EQU   CVTMAP+264
CVTPURGA EQU   CVTPURG+1
CVTRSV35 EQU   CVTPURG
CVTCBSP  EQU   CVTMAP+256
CVTATERA EQU   CVTATER+1
CVTSYST  EQU   CVTATER
CVTVOLT2 EQU   CVTTAT
CVTVOLI2 EQU   CVTVOLF2
CVTAQAVB EQU   CVTAQAVT+1
CVTRSV34 EQU   CVTTCMFG
CVTRSV33 EQU   CVTTCMFG
CVTRSV32 EQU   CVTTCMFG
CVTRSV31 EQU   CVTTCMFG
CVTRSV30 EQU   CVTTCMFG
CVTRSV29 EQU   CVTTCMFG
CVTLDEV  EQU   CVTTCMFG
CVTTCRDY EQU   CVTTCMFG
CVTGTFA  EQU   CVTGTF+1
CVTRSV27 EQU   CVTGTFST
CVTRNIO  EQU   CVTGTFST
CVTUSR   EQU   CVTGTFST
CVTRV318 EQU   CVTFORM
CVTRV317 EQU   CVTTMODE
CVTRV316 EQU   CVTSTATE
CVTRV315 EQU   CVTGTFS
CVTGTFAV EQU   CVTGTFS
CVT0SCR1 EQU   CVTMAP+232
CVTRV515 EQU   CVTMAP+228
CVTRMS   EQU   CVTMAP+224
CVTPATCH EQU   CVTMAP+220
CVTTSCE  EQU   CVTMAP+216
CVTLNKSC EQU   CVTMAP+214
CVTQABST EQU   CVTMAP+212
CVTMDLDS EQU   CVTMAP+208
CVTUSER  EQU   CVTMAP+204
CVTABEND EQU   CVTMAP+200
CVTSMCA  EQU   CVTMAP+196
CVTRSV18 EQU   CVTMAP+192
CVTVS1B  EQU   CVTOPTB
CVTVS1A  EQU   CVTOPTB
CVTFP    EQU   CVTOPTB
CVTAPTHR EQU   CVTOPTB
CVTNLOG  EQU   CVTOPTB
CVTTOD   EQU   CVTOPTB
CVTCTIMS EQU   CVTOPTB
CVTPROT  EQU   CVTOPTB
CVTXPFP  EQU   CVTOPTA
CVTASCII EQU   CVTOPTA
CVTRSV13 EQU   CVTOPTA
CVTRSV12 EQU   CVTOPTA
CVTNIP   EQU   CVTOPTA
CVTDDR   EQU   CVTOPTA
CVTAPR   EQU   CVTOPTA
CVTCCH   EQU   CVTOPTA
CVTSNCTR EQU   CVTMAP+180
CVTQMWR  EQU   CVTMAP+176
CVTQOCR  EQU   CVTMAP+172
CVT1EF00 EQU   CVTMAP+168
CVTMZ00  EQU   CVTMAP+164
CVTSV76Q EQU   CVTSV76C
CVTRSV11 EQU   CVTMAP+156
CVT0PT01 EQU   CVTMAP+152
CVTMSER  EQU   CVTMAP+148
CVTRV516 EQU   CVTIERLC
CVTILCH  EQU   CVTMAP+140
CVT0DS   EQU   CVTMAP+136
CVTFBOSV EQU   CVTMAP+132
CVTNUCB  EQU   CVTMAP+128
CVTIXAVL EQU   CVTMAP+124
CVTSV76M EQU   CVTIOQET
CVTDCBA  EQU   CVTMAP+117
CVTMVS2  EQU   CVTDCB
CVT6DAT  EQU   CVTDCB
CVT4MPS  EQU   CVTDCB
CVTRSV09 EQU   CVTDCB
CVT4MS1  EQU   CVTDCB
CVT2SPS  EQU   CVTDCB
CVT1SSS  EQU   CVTDCB
CVTRSV08 EQU   CVTDCB
CVTSTB   EQU   CVTMAP+112
CVTQTD00 EQU   CVTMAP+108
CVTQTE00 EQU   CVTMAP+104
CVTCUCB  EQU   CVTMAP+100
CVTSJQ   EQU   CVTMAP+96
CVTPBLDL EQU   CVTMAP+92
CVTTPC   EQU   CVTMAP+88
CVTSVDCB EQU   CVTMAP+84
CVTBRET  EQU   CVTMAP+82
CVTEXIT  EQU   CVTMAP+80
CVT0FN00 EQU   CVTMAP+76
CVTDARA  EQU   CVTDAR+1
CVTRSV07 EQU   CVTFLGS1
CVTRSV06 EQU   CVTFLGS1
CVTRSV05 EQU   CVTFLGS1
CVTRSV04 EQU   CVTFLGS1
CVTRSV03 EQU   CVTFLGS1
CVTRSV02 EQU   CVTFLGS1
CVTRSV01 EQU   CVTFLGS1
CVTDMPLK EQU   CVTFLGS1
CVTXITP  EQU   CVTMAP+68
CVTZDTAB EQU   CVTMAP+64
CVTMSLT  EQU   CVTMAP+60
CVTDATE  EQU   CVTMAP+56
CVTBTERM EQU   CVTMAP+52
CVTSYSAD EQU   CVTMAP+48
CVTXTLER EQU   CVTMAP+44
CVTILK2  EQU   CVTMAP+40
CVTILK1  EQU   CVTMAP+36
CVTPRLTV EQU   CVTMAP+32
CVTPCNVT EQU   CVTMAP+28
CVT0VL00 EQU   CVTMAP+24
CVTXAPG  EQU   CVTMAP+20
CVTBUF   EQU   CVTMAP+16
CVTJOB   EQU   CVTMAP+12
CVTLINK  EQU   CVTMAP+8
CVT0EF00 EQU   CVTMAP+4
CVTTCBP  EQU   CVTMAP
CVT      EQU   CVTMAP
@NM00026 EQU   PSA+3668
PSASTAK  EQU   PSA+3072
@NM00025 EQU   PSA+1048
PSAUSEND EQU   PSA+1048
PSARV062 EQU   PSA+1044
PSACDAL  EQU   PSA+1040
PSAWTCOD EQU   PSA+1036
PSAATCVT EQU   PSA+1032
PSAPCPSW EQU   PSA+1024
PSAPIR2  EQU   PSA+1020
PSARV059 EQU   PSA+1018
PSASVC13 EQU   PSA+1016
PSASFACC EQU   PSA+1008
PSASTOP  EQU   PSA+992
PSASTART EQU   PSA+976
PSARSPSW EQU   PSA+968
PSASRPSW EQU   PSA+960
PSARV045 EQU   PSA+892
PSARV044 EQU   PSA+888
PSARV043 EQU   PSA+884
PSARV042 EQU   PSA+880
PSARV041 EQU   PSA+876
PSARV040 EQU   PSA+872
PSARV025 EQU   PSA+868
PSADSSED EQU   PSA+868
PSADSSPR EQU   PSA+864
PSADSSFW EQU   PSA+860
PSADSS14 EQU   PSA+856
PSADSSPP EQU   PSA+848
PSADSSRP EQU   PSA+840
PSADSS05 EQU   PSADSSF4
PSADSS10 EQU   PSADSSF4
PSADSSVE EQU   PSADSSF4
PSADSSDE EQU   PSADSSF4
PSADSSC0 EQU   PSADSSF4
PSADSSIE EQU   PSADSSF4
PSADSS12 EQU   PSADSSF4
PSADSSRC EQU   PSADSSF4
PSARV057 EQU   PSADSSF3
PSARV056 EQU   PSADSSF3
PSARV055 EQU   PSADSSF3
PSADSSMC EQU   PSADSSF3
PSADSSRW EQU   PSADSSF3
PSADSSNM EQU   PSADSSF3
PSADSSES EQU   PSADSSF3
PSADSSGP EQU   PSADSSF3
PSADSSF2 EQU   PSADSSFL+1
PSADSSPI EQU   PSADSSF1
PSADSSOI EQU   PSADSSF1
PSADSSSP EQU   PSADSSF1
PSADSSTP EQU   PSADSSF1
PSADSSDW EQU   PSADSSF1
PSADSSDD EQU   PSADSSF1
PSADSSDM EQU   PSADSSF1
PSADSSMV EQU   PSADSSF1
PSADSSTS EQU   PSA+816
PSADSSWK EQU   PSA+812
PSADSSR3 EQU   PSA+808
PSADSSR2 EQU   PSA+804
PSADSSRS EQU   PSA+800
PSASTOR  EQU   PSA+796
PSACPUSA EQU   PSA+794
PSAVSTAP EQU   PSA+792
PSAWKVAP EQU   PSA+788
PSAWKRAP EQU   PSA+784
PSAMCHIC EQU   PSA+783
PSARV061 EQU   PSA+782
PSASYMSK EQU   PSA+781
PSAMCHFL EQU   PSA+780
PSACR0   EQU   PSA+776
PSAPSWSV EQU   PSA+768
PSACLHS  EQU   PSAHLHI
PSALKR15 EQU   PSALKSA+60
PSALKR14 EQU   PSALKSA+56
PSALKR13 EQU   PSALKSA+52
PSALKR12 EQU   PSALKSA+48
PSALKR11 EQU   PSALKSA+44
PSALKR10 EQU   PSALKSA+40
PSALKR9  EQU   PSALKSA+36
PSALKR8  EQU   PSALKSA+32
PSALKR7  EQU   PSALKSA+28
PSALKR6  EQU   PSALKSA+24
PSALKR5  EQU   PSALKSA+20
PSALKR4  EQU   PSALKSA+16
PSALKR3  EQU   PSALKSA+12
PSALKR2  EQU   PSALKSA+8
PSALKR1  EQU   PSALKSA+4
PSALKR0  EQU   PSALKSA
PSARV023 EQU   PSACLHT+52
PSALOCAL EQU   PSACLHT+48
PSACMSL  EQU   PSACLHT+44
PSAOPTL  EQU   PSACLHT+40
PSATPACL EQU   PSACLHT+36
PSATPDNL EQU   PSACLHT+32
PSATPNCL EQU   PSACLHT+28
PSAIOSLL EQU   PSACLHT+24
PSAIOSUL EQU   PSACLHT+20
PSAIOSCL EQU   PSACLHT+16
PSAIOSSL EQU   PSACLHT+12
PSASALCL EQU   PSACLHT+8
PSAASML  EQU   PSACLHT+4
PSADISPL EQU   PSACLHT
PSASRSA  EQU   PSA+636
PSARV050 EQU   PSA+634
PSADSSGO EQU   PSA+633
PSARECUR EQU   PSA+632
PSAHLHIS EQU   PSA+628
PSAIPCSA EQU   PSA+624
@NM00024 EQU   PSA+621
PSAIPCDM EQU   PSA+620
PSAIPCD  EQU   PSA+616
@NM00023 EQU   PSA+613
PSAIPCRM EQU   PSA+612
PSAIPCR  EQU   PSA+608
PSAMCHEX EQU   PSA+600
PSAMPSW  EQU   PSA+592
PSAEXPS2 EQU   PSA+584
PSAEXPS1 EQU   PSA+576
PSAPIREG EQU   PSA+572
PSARSREG EQU   PSA+568
PSAGPREG EQU   PSA+556
PSARV022 EQU   PSASUP4
PSARV021 EQU   PSASUP4
PSARV020 EQU   PSASUP4
PSARV019 EQU   PSASUP4
PSARV018 EQU   PSASUP4
PSARV017 EQU   PSASUP4
PSARV016 EQU   PSASUP4
PSARV015 EQU   PSASUP4
PSARV014 EQU   PSASUP3
PSAULCMS EQU   PSASUP3
PSARV012 EQU   PSASUP3
PSAESTA  EQU   PSASUP3
PSASPR   EQU   PSASUP3
PSAPSREG EQU   PSASUP3
PSAPI2   EQU   PSASUP3
PSAIOSUP EQU   PSASUP3
PSALCR   EQU   PSASUP2
PSARTM   EQU   PSASUP2
PSAACR   EQU   PSASUP2
PSAIPCE2 EQU   PSASUP2
PSAIPCES EQU   PSASUP2
PSAIPCEC EQU   PSASUP2
PSAGTF   EQU   PSASUP2
PSAIPCRI EQU   PSASUP2
PSATYPE6 EQU   PSASUP1
PSATCTL  EQU   PSASUP1
PSADISP  EQU   PSASUP1
PSALOCK  EQU   PSASUP1
PSAPI    EQU   PSASUP1
PSAEXT   EQU   PSASUP1
PSASVC   EQU   PSASUP1
PSAIO    EQU   PSASUP1
PSAAOLD  EQU   PSA+548
PSAANEW  EQU   PSA+544
PSATNEW  EQU   PSA+536
PSALCCAR EQU   PSA+532
PSALCCAV EQU   PSA+528
PSAPCCAR EQU   PSA+524
PSAPCCAV EQU   PSA+520
PSACPULA EQU   PSA+518
PSACPUPA EQU   PSA+516
PSAPSA   EQU   PSA+512
FLCHDEND EQU   PSA+512
FLCCRSAV EQU   FLCMCLA+280
FLCGRSAV EQU   FLCMCLA+216
FLCFPSAV EQU   FLCMCLA+184
FLCFLA   EQU   FLCMCLA+88
FLCRGNCD EQU   FLCMCLA+84
FLCFSAA  EQU   FLCFSA+1
@NM00022 EQU   FLCFSA
@NM00021 EQU   FLCMCLA+72
FLCMCIC  EQU   FLCMCLA+64
@NM00020 EQU   FLCMCLA+20
FLCIOAA  EQU   FLCIOA+1
@NM00019 EQU   FLCIOA
@NM00018 EQU   FLCMCLA+15
@NM00017 EQU   FLCMCLA+14
@NM00016 EQU   FLCMCLA+12
FLCLCL   EQU   FLCMCLA+8
FLCIOELA EQU   FLCIOEL+1
@NM00015 EQU   FLCIOEL
FLCCHNID EQU   FLCMCLA
@NM00014 EQU   PSA+160
FLCMTRCD EQU   PSA+157
@NM00013 EQU   PSA+156
FLCPERA  EQU   FLCPER+1
@NM00012 EQU   FLCPER
@NM00011 EQU   PSA+151
FLCPERCD EQU   PSA+150
FLCMCNUM EQU   PSA+149
@NM00010 EQU   PSA+148
FLCTEAA  EQU   FLCTEA+1
@NM00009 EQU   FLCTEA
PSAPIPC  EQU   PSAPICOD
PSAPIMC  EQU   PSAPICOD
PSAPIPER EQU   PSAPICOD
PSARV049 EQU   FLCPICOD
FLCPILCB EQU   FLCPIILC
@NM00008 EQU   FLCPIILC
@NM00007 EQU   PSAEPPSW
FLCSVCN  EQU   PSAESPSW+2
FLCSILCB EQU   FLCSVILC
@NM00006 EQU   FLCSVILC
@NM00005 EQU   PSAESPSW
FLCEICOD EQU   PSAEEPSW+2
PSASPAD  EQU   PSAEEPSW
@NM00004 EQU   PSA+128
FLCINPSW EQU   PSA+120
FLCMNPSW EQU   PSA+112
FLCPNPSW EQU   PSA+104
FLCSNPSW EQU   PSA+96
FLCENPSW EQU   PSA+88
FLCTRACE EQU   PSA+84
FLCTIMER EQU   PSA+80
FLCCVT2  EQU   PSA+76
FLCCAW   EQU   PSA+72
FLCCSW   EQU   PSA+64
FLCIOPSW EQU   PSA+56
FLCMOPSW EQU   PSA+48
FLCPOPSW EQU   PSA+40
FLCSOPSW EQU   PSA+32
FLCEOPSW EQU   PSA+24
@NM00003 EQU   FLCICCW2+4
FLCICCW1 EQU   FLCROPSW
FLCIPPSW EQU   FLCRNPSW
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RC00174 EQU   @RC00168
@RF00191 EQU   @RC00141
@RC00250 EQU   @RC00249
@RC00292 EQU   @RC00291
@RC00218 EQU   @RC00212
@RF00228 EQU   @RC00212
@RC00232 EQU   @RC00212
@RC00240 EQU   @RC00212
@RF00239 EQU   @RC00212
@RF00355 EQU   @RC00347
@RC00350 EQU   @RC00347
@RF00408 EQU   @RC00404
@RC00380 EQU   @RC00362
@RC00374 EQU   @RC00362
@RF00373 EQU   @RC00362
@RC00470 EQU   @RC00362
@RC00529 EQU   @RC00521
@RC00522 EQU   @RC00521
@RC00545 EQU   @RC00537
@RC00538 EQU   @RC00537
@RF00518 EQU   @EL00002
@RF00554 EQU   @EL00002
@RF00576 EQU   @RC00573
@RF00583 EQU   @RC00573
@RT00599 EQU   @RC00573
@RC00590 EQU   @RC00573
@RF00589 EQU   @RC00573
@RF00606 EQU   @EL00003
@RF00613 EQU   @EL00003
@RC00634 EQU   @RC00633
@RF00638 EQU   @RC00633
@RF00649 EQU   @RC00633
@RF00648 EQU   @RC00633
@RF00660 EQU   @EL00004
@RC00664 EQU   @EL00004
@RC00691 EQU   @RC00690
@RC00699 EQU   @RC00698
@RF00685 EQU   @RC00674
@RC00706 EQU   @RC00674
@RF00717 EQU   @RC00674
@RF00671 EQU   @EL00005
@RF00726 EQU   @EL00005
@RF00729 EQU   @EL00005
@RC00742 EQU   @RC00741
@RF00750 EQU   @EL00006
@RC00858 EQU   @RC00855
@RF00906 EQU   @RC00902
@RF00819 EQU   @EL00009
@RC00940 EQU   @EL00009
@RC00964 EQU   @RC00959
@RF00970 EQU   @RC00959
@RF00969 EQU   @RC00959
@RF00978 EQU   @EL00010
@RF01054 EQU   @RC01041
@RF01068 EQU   @EL00011
@RC01126 EQU   @EL00016
@RC01143 EQU   @EL00017
@RF01142 EQU   @EL00017
@RF01153 EQU   @EL00018
@RC01156 EQU   @EL00018
@RF01155 EQU   @EL00018
@RF01171 EQU   @EL00019
@RC01174 EQU   @EL00019
@RF01173 EQU   @EL00019
@RF01253 EQU   @RC01235
@RF01266 EQU   @RC01202
@RF01271 EQU   @RC01202
@RF01276 EQU   @EL00020
@RF01283 EQU   @EL00020
@RC01299 EQU   @RC01298
@RT01337 EQU   @EL00021
@RC01293 EQU   @EL00021
@RF01292 EQU   @EL00021
@RC01364 EQU   @RC01363
@RC01368 EQU   @RC01367
@RC01360 EQU   @RC01355
@RF01372 EQU   @RC01355
@RF01376 EQU   @RC01355
@RF01375 EQU   @RC01355
@RF01391 EQU   @EL00022
@RC01386 EQU   @EL00022
@RF01385 EQU   @EL00022
@RF01420 EQU   @EL00024
@RF01446 EQU   @RC01438
@RF01450 EQU   @EL00025
@RF01457 EQU   @EL00025
@RF01479 EQU   @EL00026
@RC01500 EQU   @RC01499
@RC01535 EQU   @EL00027
@RC01571 EQU   @RC01570
@RC01638 EQU   @RC01636
@RF01646 EQU   @RC01636
@RC01668 EQU   @RC01667
@RF01657 EQU   @EL00029
@RC01693 EQU   @EL00030
@RC00251 EQU   @RC00250
@RF00260 EQU   @RC00250
@RC00389 EQU   @RC00380
@RF00593 EQU   @RC00590
@RF01296 EQU   @RC01293
@RF01303 EQU   @RC01293
@RF01307 EQU   @RC01293
@RT01330 EQU   @RC01293
@RC01314 EQU   @RC01293
@RF01313 EQU   @RC01293
@RC01536 EQU   @RC01535
@RC01669 EQU   @RC01668
@RC00440 EQU   @RC00389
@RC01318 EQU   @RC01314
@RF01317 EQU   @RC01314
@RC01537 EQU   @RC01536
@RC01319 EQU   @RC01318
@ENDDATA EQU   *
         END   IEECB905,(C'PLS2114',0701,78103)
