         TITLE 'IEAVTSDR - SVC DUMP RESOURCE MGR AND SRB FRR           *
                        '
IEAVTSDR CSECT
*                                      ENTRY FOR SRB FRR
         L    13,PSAAOLD(0)            ADDRESS OF CURRENT ASCB
         L    13,ASCBASXB(13)          ADDRESS OF ASXB FOR CURRENT ASCB
         L    13,ASXBSPSA(13)          ADDR OF LOCAL W/S AREA VEC TAB
         L    13,WSALSDMP(13)          ADDRESS OF SVC DUMP SAVE AREA
         LA   15,SDRM-IEAVTSDR(15)     SYNC ENTRY POINT ADDRESSES
SDRM     EQU   *                       ENTRY POINT FOR SVC DUMP RES MGR
         USING *,15                    ON EITHER ENTRY, EP ADDR IN R15
         MODID BR=YES                  IDENTIFY MODULE, DATE OF COMPILE
         SAVE  (14,12)                 SAVE CALLERS REGISTERS
         DROP  15
         BALR  5,0                     REGISTER 5 IS BASE REGISTER
         USING *,5
*                                      TO ADDR OF RMPL IF SDRM       */
*   IF PSATOLD=0 THEN               /* IF CPU IS IN SRB MODE, MODULE
*                                      IS ENTERED TO RECOVER SCHEDULE
*                                      REQUEST SRB (SRB FRR) @G33VPHD*/
         L     @15,PSATOLD                                         0058
         LTR   @15,@15                                             0058
         BNZ   @RF00058                                            0058
*     DO;                                                          0059
*                                                                  0059
*       /*************************************************************/
*       /*                                                           */
*       /* THIS SEGMENT IS THE FRR FOR THE SRB SCHEDULED BY IEAVTSDX */
*       /* (SCHEDULE DUMP ROUTINE). THE SRB IS LOCATED IN IEAVTSDX.  */
*       /* THIS ROUTINE WILL SET THE SYSTEM DISPATCHABLE IF IT WAS   */
*       /* SET NON DISPATCHABLE BY THE SRB HE SUPPLIED AN ECB. THIS  */
*       /* FRR WILL REQUEST RECORDING AND PERCOLATE. THE SRB WAS     */
*       /* SCHEDULED WITHOUT ANY AFFINITY. INPUT: REG1 CONTAINS      */
*       /* ADDRESS OF SDWA, REG14 CONTAINS RETURN ADDRESS TO RTM, CPU*/
*       /* IS IN SRB MODE, LOCAL LOCK IS HELD. SVC DUMP IS LOCKED,   */
*       /* ADDRESS OF SDUMP PARAMETER LIST IS IN RTCTSDPL. OUTPUT:   */
*       /* SVC DUMP IS UNLOCKED, CALLER IS POSTED IF AN ECB IS       */
*       /* SUPPLIED. INCLUDED BY: TOP SEGMENT.                       */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0060
*       RFY                                                        0060
*         SDWA BASED(R1);                                          0060
*       SDWARCRD='1'B;              /* REQUEST RECORDING             */
         OI    SDWARCRD(R1),B'10000000'                            0061
*       SDWAMODN=NUCNAME;           /* LOAD MODULE NAME - IEANUC01   */
         MVC   SDWAMODN(8,R1),@CC03009                             0062
*       SDWACSCT=SRBNAME;           /* CSECT NAME - IEAVTSDX         */
         MVC   SDWACSCT(8,R1),@CC03011                             0063
*       SDWAREXN=FRRNAME;           /* FRR NAME - IEAVTSDR           */
         MVC   SDWAREXN(8,R1),@CC03004                             0064
*       SDWARCDE=SDWACWT;           /* INDICATE PERCOLATION          */
         MVI   SDWARCDE(R1),X'00'                                  0065
*       SDWAFLLK=ON;                /* INDICATE FREE LOCAL LOCK    0066
*                                                            @ZM45208*/
         OI    SDWAFLLK(R1),B'00000001'                            0066
*       RFY                                                        0067
*         R3 RSTD;                  /* SAVE WORK AREA POINTER      0067
*                                                            @G33VPHD*/
*       R3=SDWAPARM;                /* GET WORK AREA ADDRESS @G33VPHD*/
         L     R3,SDWAPARM(,R1)                                    0068
*       SCHFRRRT=R14;               /* SAVE RETURN ADDRESS   @G33VPHD*/
*                                                                  0069
         ST    R14,SCHFRRRT(,R3)                                   0069
*       /*************************************************************/
*       /*                                                           */
*       /* THIS SECTION HANDLES THE CASE WHERE THE SRB THAT FAILED   */
*       /* WAS THE ONLY ASID SCHEDULED OR IT IS THE FIRST SRB TO GET */
*       /* CONTROL FOR A MULTIPLE ASID DUMP                  @G33VPHD*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0070
*       IF(ASCBASID=MASTASID)×(RTCTSDNA=1) THEN/* MASTER ADDRESS   0070
*                                      SPACE OR ONLY ONE ASID TO BE
*                                      DUMPED                @ZM45193*/
         L     @15,ASCBPTR                                         0070
         CLC   ASCBASID(2,@15),@CH00082                            0070
         BE    @RT00070                                            0070
         L     @15,CVTPTR                                          0070
         L     @15,CVTRTMCT(,@15)                                  0070
         CLI   RTCTSDNA(@15),1                                     0070
         BNE   @RF00070                                            0070
@RT00070 DS    0H                                                  0071
*         DO;                       /* CLEAN UP THE ENTIRE SVC DUMP
*                                                            @G33VPHD*/
*           IF RTCTSDND='1'B THEN   /* IF SVC DUMP SET THE SYSTEM  0072
*                                      NON- DISPATCHABLE     @G33VPHD*/
         L     @15,CVTPTR                                          0072
         L     @12,CVTRTMCT(,@15)                                  0072
         TM    RTCTSDND(@12),B'01000000'                           0072
         BNO   @RF00072                                            0072
*             DO;                   /* SET SYSTEM DISPATCHABLE AGAIN
*                                                            @G33VPHD*/
*               RFY                                                0074
*                 R0 RSTD;          /* SAVE REGISTERS        @G33VPHD*/
*               R0=SYSDISP;         /* GET SYSTEM DISPATCHABILITY  0075
*                                      CODE                  @G33VPHD*/
         LA    R0,9                                                0075
*               R1=NULL×HIGHBIT1;   /* SET RESET FUNCTION    @G33VPHD*/
         L     R1,@CF03119                                         0076
*               R13=SDISPFLG;       /* GET SVC DUMP DISPATCHABILITY
*                                      CODE                  @G33VPHD*/
         L     R13,@CF03019                                        0077
*               CALL STATUS;        /* SET SYSTEM DISPATCHABLE     0078
*                                                            @G33VPHD*/
         L     @12,SCVTSPTR(,@15)                                  0078
         L     @15,SCVTSTAT(,@12)                                  0078
         BALR  @14,@15                                             0078
*               RFY                                                0079
*                 R0 UNRSTD;        /* RELEASE REGISTERS     @G33VPHD*/
*               RTCTSDND='0'B;      /* SYSTEM SET DISPTACHABLE AGAIN
*                                                            @G33VPHD*/
         L     @15,CVTPTR                                          0080
         L     @15,CVTRTMCT(,@15)                                  0080
         NI    RTCTSDND(@15),B'10111111'                           0080
*               IF RTCTSDFX='1'B THEN/* ALLOW FOR ASYNC-     @ZA27434*/
         TM    RTCTSDFX(@15),B'00000001'                           0081
         BNO   @RF00081                                            0081
*                 DO;               /* RONOUS INTERRUPTS     @ZA27434*/
*                   PSATOLD->TCBFX='0'B;/*                   @ZA27434*/
         L     @12,PSATOLD                                         0083
         NI    TCBFX(@12),B'11111110'                              0083
*                   RTCTSDFX='0'B;  /*                       @ZA27434*/
         NI    RTCTSDFX(@15),B'11111110'                           0084
*                 END;              /*                       @ZA27434*/
*               ELSE                                               0086
*                 ;                 /*                       @ZA27434*/
@RF00081 DS    0H                                                  0087
*               IF ASCBASID^=MASTASID THEN/* IF THIS IS NOT MASTER 0087
*                                      ASID                  @G33VPHD*/
         L     @15,ASCBPTR                                         0087
         CLC   ASCBASID(2,@15),@CH00082                            0087
         BE    @RF00087                                            0087
*                 DO;               /* NOTIFY SRM ITS OK TO SWAP THIS
*                                      ADDRESS SPACE         @G33VPHD*/
*                   R13=ADDR(SMWKSAV1);/* GET SAVE AREA FOR SRM    0089
*                                                            @G33VPHD*/
         L     @15,CVTPTR                                          0089
         L     @15,CVTRTMCT(,@15)                                  0089
         L     R13,RTCTSDSW(,@15)                                  0089
         LA    R13,SMWKSAV1(,R13)                                  0089
*                   GEN REFS(CVTOPTE);                             0090
*                                  /* TELL RSM ITS OK TO SWAP @G33VPHD*
                   SYSEVENT   OKSWAP,ENTRY=BRANCH
*                 END;              /* END NOTIFY SRM SWAP THIS    0091
*                                      ADDRESS SPACE         @G33VPHD*/
*             END;                  /* END SET SYSTEM DISPATCHABLE 0092
*                                      AGAIN                 @G33VPHD*/
@RF00087 DS    0H                                                  0093
*           RFY                                                    0093
*             SMWKRSCB BASED(ADDR(SMWKRSM));/* MAP RSM PART OF THE 0093
*                                      SUMMARY DUMP WORK AREA      0093
*                                                            @G33VPHD*/
@RF00072 DS    0H                                                  0094
*           IF SMWKFRHD>ZEROH THEN  /* IF REAL STORAGE FRAMES HELD 0094
*                                                            @G33VPHD*/
         L     @15,CVTPTR                                          0094
         L     @15,CVTRTMCT(,@15)                                  0094
         L     @15,RTCTSDSW(,@15)                                  0094
         CLC   SMWKFRHD+196(2,@15),@CH00052                        0094
         BNH   @RF00094                                            0094
*             DO;                   /* CALL RSM AND FREE FRAMES    0095
*                                                            @G33VPHD*/
*               GEN REFS(PSALITA);                                 0096
*                                 /*OBTAIN THE SALLOC LOCK   @G33VPHD*/
GETLOCKS SETLOCK  OBTAIN,TYPE=SALLOC,MODE=UNCOND,                      X
               RELATED=(SVCDUMP,IEAVTSDR(FRELOCKS))
*               SMWKRBUF='0'B;      /* INDICATE SUM DUMP BUFFER FREED
*                                                            @G33VPHD*/
         L     @15,CVTPTR                                          0097
         L     @15,CVTRTMCT(,@15)                                  0097
         L     @15,RTCTSDSW(,@15)                                  0097
         NI    SMWKRBUF(@15),B'10111111'                           0097
*               SMWKNFAV=ZEROH;     /* ZERO NUMBER OF FRAMES       0098
*                                      AVAILABLE             @G33VPHD*/
         SLR   @12,@12                                             0098
         STH   @12,SMWKNFAV(,@15)                                  0098
*               SMWKFRHD=ZEROH;     /* ZERO NUMBER OF FRAMES HELD  0099
*                                                            @G33VPHD*/
         LA    @04,196                                             0099
         ALR   @04,@15                                             0099
         STH   @12,SMWKFRHD(,@04)                                  0099
*               SMWKFRUS=ZEROH;     /* ZERO NUMBER OF FRAMES IN USE
*                                                            @G33VPHD*/
         STH   @12,SMWKFRUS(,@15)                                  0100
*               SMWKRSIX=ZEROH;     /* ZERO CURRENT INDEX VALUE    0101
*                                                            @G33VPHD*/
         STH   @12,SMWKRSIX(,@15)                                  0101
*               R1=ADDR(SMWKRSM);   /* GET PARAMETER LIST ADDRESS  0102
*                                                            @G33VPHD*/
         LA    R1,SMWKRSM(,@15)                                    0102
*               R13=ADDR(SMWKSAV1); /* GET SAVE AREA ADDRESS @G33VPHD*/
         LA    R13,SMWKSAV1(,@15)                                  0103
*               SMWKEVRY='1'B;      /* INDICATE TO RSM FREE ALL    0104
*                                      FRAMES                @ZM45193*/
         OI    SMWKEVRY(@04),B'10000000'                           0104
*               SMWKFRPT=NULL;      /* ZERO FRAME ADDRESS FOR ALL  0105
*                                      FRAMES                @G33VPHD*/
         ST    @12,SMWKFRPT(,@04)                                  0105
*               CALL IEAVPRSR;      /* CALL RSM TO FREE ALL FRAMES 0106
*                                                            @G33VPHD*/
         L     @15,SMWKPRSR(,@04)                                  0106
         BALR  @14,@15                                             0106
*               GEN REFS(PSALITA);                                 0107
*                                 /*RELEASE SALLOC LOCK      @G33VPHD*/
FRELOCKS SETLOCK  RELEASE,TYPE=SALLOC,                                 X
               RELATED=(SVCDUMP,IEAVTSDR(GETLOCKS))
*             END;                  /* END OF REAL STORAGE FRAMES  0108
*                                      HELD FREE THEM        @G33VPHD*/
*                                                                  0108
*           /*********************************************************/
*           /*                                                       */
*           /* THIS SECTION TEST TO SEE IF THE SUMMARY DUMP TIMER DIE*/
*           /* TQE IS STILL ON THE REAL TIME QUEUE. IF IT IS THE     */
*           /* DISPATCHER LOCK IS OBTAINED AND THE TQE DEQUE ROUTINE */
*           /* IS CALLED TO REMOVE THE TQE FROM THE QUEUE    @ZM45208*/
*           /*                                                       */
*           /*********************************************************/
*                                                                  0109
*           IF RTCTSDTQ=ON THEN     /* IF SUMDUMP TQE ON TIMER QUEUE
*                                                            @ZM45208*/
@RF00094 L     @15,CVTPTR                                          0109
         L     @15,CVTRTMCT(,@15)                                  0109
         TM    RTCTSDTQ(@15),B'01000000'                           0109
         BNO   @RF00109                                            0109
*             DO;                   /* OBTAIN DISPATCHER LOCK AND DEQ
*                                      TQE                   @ZM45208*/
*               GEN REFS(PSALITA);                                 0111
*                                /*OBTAIN DISPATCHER LOCK    @ZM45208*/
GETLOCKD SETLOCK OBTAIN,TYPE=DISP,MODE=UNCOND,                         X
               RELATED=(SVCDUMP,IEAVTSDR(FRELOCKD))            @ZM45208
*               R1=SMWKTQEA;        /* GET TQE ADDRESS FOR TQEDEQ  0112
*                                                            @ZM45208*/
         L     @15,CVTPTR                                          0112
         L     @12,CVTRTMCT(,@15)                                  0112
         L     @12,RTCTSDSW(,@12)                                  0112
         L     R1,SMWKTQEA(,@12)                                   0112
*               RFY                                                0113
*                 R2 RSTD;          /* RESTRICT RETURN REGISTER    0113
*                                                            @ZM45208*/
*               R2=ADDR(SDRETURN);  /* OBTAIN RETURN ADDRESS @ZM45208*/
         LA    R2,SDRETURN                                         0114
*               CALL TQEDEQ;        /* REMOVE SUMDUMP TQE FROM TIMER
*                                      QUEUE                 @ZM45208*/
         L     @15,CVTQTD00(,@15)                                  0115
         BALR  @14,@15                                             0115
*SDRETURN:                                                         0116
*               RTCTSDTQ=OFF;       /* INDICATE SUMDUMP TQE NO LONGER
*                                      ON QUEUE              @ZM45208*/
SDRETURN L     @15,CVTPTR                                          0116
         L     @15,CVTRTMCT(,@15)                                  0116
         NI    RTCTSDTQ(@15),B'10111111'                           0116
*               RFY                                                0117
*                 R2 UNRSTD;        /* FREE RETURN REGISTER  @ZM45208*/
*               GEN REFS(PSALITA);                                 0118
*                                /*OBTAIN DISPATCHER LOCK    @ZM45208*/
FRELOCKD SETLOCK RELEASE,TYPE=DISP,                                    X
               RELATED=(SVCDUMP,IEAVTSDR(GETLOCKD))            @ZM45208
*             END;                  /* END OF REMOVE TQE FROM QUEUE
*                                                            @ZM45208*/
*                                                                  0119
*           /*********************************************************/
*           /*                                                       */
*           /* THIS LOOP MARKS ALL OF THE REQUESTED ADDRESS SPACE    */
*           /* DUMPS COMPLETE. THIS WILL CAUSE A TOTAL CLEANUP       */
*           /*                                               @G33VPHD*/
*           /*                                                       */
*           /*********************************************************/
*                                                                  0120
*           DO RTCTINDX=1 TO RTCTSDNA;/* LOOP FOR ALL ASIDS  @G33VPHD*/
@RF00109 LA    @15,1                                               0120
         B     @DE00120                                            0120
@DL00120 DS    0H                                                  0121
*             RTCTSDDO(RTCTINDX)='1'B;/* MARK DUMP COMPLETE THIS ASID
*                                                            @G33VPHD*/
         L     @15,CVTPTR                                          0121
         L     @15,CVTRTMCT(,@15)                                  0121
         SLR   @12,@12                                             0121
         IC    @12,RTCTINDX(,@15)                                  0121
         SLA   @12,2                                               0121
         ALR   @15,@12                                             0121
         OI    RTCTSDDO-4(@15),B'00000001'                         0121
*           END;                    /* END MARK DUMP COMPLETE ALL  0122
*                                      ASIDS                 @G33VPHD*/
         L     @12,CVTPTR                                          0122
         L     @12,CVTRTMCT(,@12)                                  0122
         LA    @15,1                                               0122
         SLR   @04,@04                                             0122
         IC    @04,RTCTINDX(,@12)                                  0122
         ALR   @15,@04                                             0122
@DE00120 L     @12,CVTPTR                                          0122
         L     @12,CVTRTMCT(,@12)                                  0122
         STC   @15,RTCTINDX(,@12)                                  0122
         L     @12,CVTPTR                                          0122
         L     @12,CVTRTMCT(,@12)                                  0122
         SLR   @04,@04                                             0122
         IC    @04,RTCTSDNA(,@12)                                  0122
         CR    @15,@04                                             0122
         BNH   @DL00120                                            0122
*           IF RTCTSDNA>1 THEN      /* IF MORE THAN ONE ASID BEING 0123
*                                      DUMPED                @G33VPHD*/
         L     @15,CVTPTR                                          0123
         L     @15,CVTRTMCT(,@15)                                  0123
         CLI   RTCTSDNA(@15),1                                     0123
         BNH   @RF00123                                            0123
*             RTCTINDX=MASTINDX;    /* USE LAST ENTRY AS CURRENT   0124
*                                      ENTRY                 @G33VPHD*/
         MVI   RTCTINDX(@15),X'10'                                 0124
*           ELSE                                                   0125
*             RTCTINDX=1;           /* USE FIRST ENTRY AS CURRENT  0125
*                                      ENTRY                 @G33VPHD*/
         B     @RC00123                                            0125
@RF00123 L     @15,CVTPTR                                          0125
         L     @15,CVTRTMCT(,@15)                                  0125
         MVI   RTCTINDX(@15),X'01'                                 0125
*         END;                      /* END OF MASTER OF FIRST AND  0126
*                                      ONLY ASID             @G33VPHD*/
*                                                                  0126
*       /*************************************************************/
*       /*                                                           */
*       /* THIS SECTION HANDLES RECOVERY FOR OTHER THAN FIRST OR ONLY*/
*       /* SCHEDULED SRBS                                    @G33VPHD*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0127
*       ELSE                                                       0127
*         DO;                       /* FIND CURRENT ENTRY AND MARK IT
*                                      COMPLETE              @G33VPHD*/
*                                                                  0127
         B     @RC00070                                            0127
@RF00070 DS    0H                                                  0128
*           /*********************************************************/
*           /*                                                       */
*           /* FIND RTCT ENTRY FOR THIS ADDRESS SPACE        @G33VPHD*/
*           /*                                                       */
*           /*********************************************************/
*                                                                  0128
*           DO RTCTINDX=ONE TO MAXENTRY WHILE(RTCTSDAS(RTCTINDX)^= 0128
*                 ASCBASID);                                       0128
         LA    @15,1                                               0128
         L     @12,CVTPTR                                          0128
         L     @12,CVTRTMCT(,@12)                                  0128
         STC   @15,RTCTINDX(,@12)                                  0128
@DL00128 L     @15,CVTPTR                                          0128
         L     @15,CVTRTMCT(,@15)                                  0128
         SLR   @12,@12                                             0128
         IC    @12,RTCTINDX(,@15)                                  0128
         SLA   @12,2                                               0128
         ALR   @15,@12                                             0128
         L     @12,ASCBPTR                                         0128
         CLC   RTCTSDAS-4(2,@15),ASCBASID(@12)                     0128
         BE    @DC00128                                            0128
*           END;                    /* END OF FIND CURRENT TABLE   0129
*                                      ENTRY                 @G33VPHD*/
         L     @12,CVTPTR                                          0129
         L     @12,CVTRTMCT(,@12)                                  0129
         LA    @15,1                                               0129
         SLR   @04,@04                                             0129
         IC    @04,RTCTINDX(,@12)                                  0129
         ALR   @15,@04                                             0129
         L     @12,CVTPTR                                          0129
         L     @12,CVTRTMCT(,@12)                                  0129
         STC   @15,RTCTINDX(,@12)                                  0129
         C     @15,@CF00141                                        0129
         BNH   @DL00128                                            0129
@DC00128 DS    0H                                                  0130
*           RTCTSDDO(RTCTINDX)='1'B;/* MARK CURRENT RTCT ASID ENTRY
*                                      COMPLETE              @G33VPHD*/
         L     @15,CVTPTR                                          0130
         L     @15,CVTRTMCT(,@15)                                  0130
         SLR   @12,@12                                             0130
         IC    @12,RTCTINDX(,@15)                                  0130
         SLA   @12,2                                               0130
         ALR   @15,@12                                             0130
         OI    RTCTSDDO-4(@15),B'00000001'                         0130
*         END;                      /* END FIND CURRENT ENTRY AND  0131
*                                      MARK IT COMPLETE      @G33VPHD*/
*                                                                  0132
*       /*************************************************************/
*       /*                                                           */
*       /* THIS SECTION IS EXECUTED FOR ALL SRBS. THIS TASKS OF THE  */
*       /* ADDRESS SPACE ARE SET DISPATCHABLE AND THE CALLERS ECB IS */
*       /* POSTED IF ONE WAS SPECIFIED AND THIS IS THE LAST ACTIVE   */
*       /* ADDRESS SPACE OF THIS DUMP REQUEST                @G33VPHD*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0132
*       IF RTCTSDAN(RTCTINDX)='1'B THEN/* IF TASKS SET NON DISP    0132
*                                                            @G33VPHD*/
@RC00070 L     @15,CVTPTR                                          0132
         L     @15,CVTRTMCT(,@15)                                  0132
         SLR   @12,@12                                             0132
         IC    @12,RTCTINDX(,@15)                                  0132
         SLA   @12,2                                               0132
         ALR   @15,@12                                             0132
         TM    RTCTSDAN-4(@15),B'00100000'                         0132
         BNO   @RF00132                                            0132
*         DO;                       /* SET THE TASKS OF THE ADDRESS
*                                      SPACE DISPATCHABLE    @G33VPHD*/
*           RFY                                                    0134
*            (R0,                                                  0134
*             R13) RSTD;            /* SAVE REGS             @G33VPHD*/
*           R0=TCBSDISP;            /* GET DISPATCHABLILITY CODE   0135
*                                                            @G33VPHD*/
         LA    R0,10                                               0135
*           R1=ASXBFTCB;            /* GET TOP TCB IN THE ADDRESS  0136
*                                      SPACE                 @G33VPHD*/
         L     @15,ASCBPTR                                         0136
         L     @15,ASXBPTR(,@15)                                   0136
         L     R1,ASXBFTCB(,@15)                                   0136
*           R1=R1->TCBLTC;          /* GET NEXT TCB IN CHAIN @G33VPHD*/
         L     R1,TCBLTC(,R1)                                      0137
*           R13=SDISPFLG;           /* GET SVC DUMP DISPATCHABILITY
*                                      FLAG                  @G33VPHD*/
         L     R13,@CF03019                                        0138
*           DO WHILE(R1^=NULL);     /* SET ALL TASKS DISPATCHABLE  0139
*                                                            @G33VPHD*/
         B     @DE00139                                            0139
@DL00139 DS    0H                                                  0140
*             R1=R1×HIGHBIT1;       /* SET RESET FUNCTION    @G33VPHD*/
         O     R1,@CF02996                                         0140
*             IF R1^=ASCBDUMP&R1->TCBTID^='FD'X&R1->TCBTID^='F9'X THEN
         L     @15,ASCBPTR                                         0141
         C     R1,ASCBDUMP(,@15)                                   0141
         BE    @RF00141                                            0141
         CLI   TCBTID(R1),X'FD'                                    0141
         BE    @RF00141                                            0141
         CLI   TCBTID(R1),X'F9'                                    0141
         BE    @RF00141                                            0141
*                                   /* NOT DUMP TASK, DSS OR COMM  0142
*                                      TASK SET DISPATCHABLE @G33VPHD*/
*               CALL STATUS;        /* SET TASKS DISPATCHABLE      0142
*                                                            @G33VPHD*/
         L     @12,CVTPTR                                          0142
         L     @12,SCVTSPTR(,@12)                                  0142
         L     @15,SCVTSTAT(,@12)                                  0142
         BALR  @14,@15                                             0142
*             ELSE                                                 0143
*               ;                   /* DSS, COMM TASK OR DUMP TASK 0143
*                                      SKIP                  @G33VPHD*/
@RF00141 DS    0H                                                  0144
*             R1=R1->TCBNTC;        /* MOVE TO NEXT TCB      @G33VPHD*/
         L     R1,TCBNTC(,R1)                                      0144
*           END;                    /* END SET ALL TASKS DISPATCHABLE
*                                                            @G33VPHD*/
@DE00139 LTR   R1,R1                                               0145
         BNZ   @DL00139                                            0145
*           RFY                                                    0146
*            (R0,                                                  0146
*             R13) UNRSTD;          /* FREE REGS             @G33VPHD*/
*         END;                      /* END TASKS SET NONDISPATCHABLE
*                                                            @G33VPHD*/
*                                                                  0147
*       /*************************************************************/
*       /*                                                           */
*       /* THIS LOOP CHECKS TO SEE IF ANY OTHER ADDRESS SPACE DUMPS  */
*       /* ARE ACTIVE.                                       @G33VPHD*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0148
*       DO RTCTINDX=ONE TO RTCTSDNA WHILE(RTCTSDDO(RTCTINDX)='1'B);/*
*                                      CHECK ALL OTHER REQUESTED   0148
*                                      ASIDS                 @G33VPHD*/
@RF00132 LA    @15,1                                               0148
         B     @DE00148                                            0148
@DL00148 L     @15,CVTPTR                                          0148
         L     @15,CVTRTMCT(,@15)                                  0148
         SLR   @12,@12                                             0148
         IC    @12,RTCTINDX(,@15)                                  0148
         SLA   @12,2                                               0148
         ALR   @15,@12                                             0148
         TM    RTCTSDDO-4(@15),B'00000001'                         0148
         BNO   @DC00148                                            0148
*       END;                        /* END CHECK ALL OTHER REQUESTED
*                                      ASIDS                 @G33VPHD*/
         L     @12,CVTPTR                                          0149
         L     @12,CVTRTMCT(,@12)                                  0149
         LA    @15,1                                               0149
         SLR   @04,@04                                             0149
         IC    @04,RTCTINDX(,@12)                                  0149
         ALR   @15,@04                                             0149
@DE00148 L     @12,CVTPTR                                          0149
         L     @12,CVTRTMCT(,@12)                                  0149
         STC   @15,RTCTINDX(,@12)                                  0149
         L     @12,CVTPTR                                          0149
         L     @12,CVTRTMCT(,@12)                                  0149
         SLR   @04,@04                                             0149
         IC    @04,RTCTSDNA(,@12)                                  0149
         CR    @15,@04                                             0149
         BNH   @DL00148                                            0149
@DC00148 DS    0H                                                  0150
*       IF RTCTINDX>RTCTSDNA THEN   /* IF NO OTHER ASID DUMPS ACTIVE
*                                                            @G33VPHD*/
         L     @15,CVTPTR                                          0150
         L     @12,CVTRTMCT(,@15)                                  0150
         CLC   RTCTINDX(1,@12),RTCTSDNA(@12)                       0150
         BNH   @RF00150                                            0150
*         DO;                       /* POST CALLERS ECB AND        0151
*                                      REINITIALIZE SVC DUMP @G33VPHD*/
*           RFY                                                    0152
*             SDUMP BASED(RTCTSDPL);/* ADDRESS OF SDUMP PARMAMETER 0152
*                                      LIST                  @G33VPHD*/
*           RFY                                                    0153
*            (R11,                                                 0153
*             R13) RSTD;                                           0153
*           IF SDUECB='1'B&         /* IF CALLER SUPPLIED ECB AND    */
*               SDUECBAD^=NULL&     /* ECB ADDRESS IS NOT ZERO AND   */
*               ASVTAVAL(SDUCASID)='0'B THEN/* CALLER STILL ACTIVE   */
         L     @12,RTCTSDPL(,@12)                                  0154
         TM    SDUECB(@12),B'00001000'                             0154
         BNO   @RF00154                                            0154
         L     @10,SDUECBAD(,@12)                                  0154
         LTR   @10,@10                                             0154
         BZ    @RF00154                                            0154
         LH    @12,SDUCASID(,@12)                                  0154
         N     @12,@CF03126                                        0154
         SLA   @12,2                                               0154
         L     @15,ASVTPTR(,@15)                                   0154
         ALR   @15,@12                                             0154
         TM    ASVTAVAL-4(@15),B'10000000'                         0154
         BNZ   @RF00154                                            0154
*             DO;                                                  0155
*SRBFRR01:                                                         0156
*               ;                   /* LABEL-RESET COMPILER HISTORY  */
SRBFRR01 DS    0H                                                  0157
*               R13=ASVTENTY(SDUCASID);/* ADDR OF CALLERS ASCB       */
         L     @15,CVTPTR                                          0157
         L     @10,CVTRTMCT(,@15)                                  0157
         L     @10,RTCTSDPL(,@10)                                  0157
         LH    @04,SDUCASID(,@10)                                  0157
         N     @04,@CF03126                                        0157
         SLA   @04,2                                               0157
         L     @15,ASVTPTR(,@15)                                   0157
         L     R13,ASVTENTY-4(@04,@15)                             0157
*               R11=SDUECBAD×HIGHBIT1;/* ADDR OF CALLERS ECB         */
         L     R11,SDUECBAD(,@10)                                  0158
         O     R11,@CF02996                                        0158
*             END;                                                 0159
*           ELSE                                                   0160
*             R11=NULL;             /* IND NO ECB TO POST            */
         B     @RC00154                                            0160
@RF00154 SLR   R11,R11                                             0160
*           IF R11^=NULL THEN       /* IF CALLER SUPPLIED AN ECB     */
@RC00154 LTR   R11,R11                                             0161
         BZ    @RF00161                                            0161
*             DO;                   /* POST CALLERS ECB              */
*               RFY                                                0163
*                (R10,                                             0163
*                 R12) RSTD;                                       0163
*               GEN REFS(PSALITA);                                 0164
*                              /*MAKE SURE LOCAL LOCK IS HELD @ZM45208*
GETLOCKL SETLOCK OBTAIN,TYPE=LOCAL,MODE=UNCOND,REGS=USE,               X
               RELATED=(SVCDUMP,IEAVTSDR(RTM))                 @ZM45208
*               R10=NODUMP;         /* COMP CODE, NO DUMP TAKEN      */
         LA    R10,8                                               0165
*               R12=ADDR(CVTBRET);  /* NO ERR EXIT                   */
         L     @15,CVTPTR                                          0166
         LA    R12,CVTBRET(,@15)                                   0166
*               CALL XMPOST;        /* POST CALLERS ECB              */
         L     @15,CVT0PT01(,@15)                                  0167
         BALR  @14,@15                                             0167
*               RFY                                                0168
*                (R10,                                             0168
*                 R12) UNRSTD;                                     0168
*             END;                                                 0169
*           RTCTSDI=RTCTSDI&&RTCTSDI;/* ZERO RTCT FLAG FIELD @G33VPHD*/
@RF00161 L     @15,CVTPTR                                          0170
         L     @15,CVTRTMCT(,@15)                                  0170
         XC    RTCTSDI(3,@15),RTCTSDI(@15)                         0170
*           RTCTSDF=RTCTSDF&&RTCTSDF;/* ZERO RTCT FLAG FIELD @G33VPHD*/
         XC    RTCTSDF(4,@15),RTCTSDF(@15)                         0171
*           DO RTCTINDX=1 TO DIM(RTCTSDAS);/* ZERO WHOLE RTCT ASID 0172
*                                      TABLE                 @G33VPHD*/
         LA    @15,1                                               0172
         L     @12,CVTPTR                                          0172
         L     @12,CVTRTMCT(,@12)                                  0172
         STC   @15,RTCTINDX(,@12)                                  0172
@DL00172 DS    0H                                                  0173
*             RTCTSDF3(RTCTINDX)=NULL;/* ZERO ASID ENTRY     @G33VPHD*/
         L     @15,CVTPTR                                          0173
         L     @15,CVTRTMCT(,@15)                                  0173
         SLR   @12,@12                                             0173
         IC    @12,RTCTINDX(,@15)                                  0173
         SLA   @12,2                                               0173
         SLR   @10,@10                                             0173
         ALR   @15,@12                                             0173
         STCM  @10,15,RTCTSDF3-4(@15)                              0173
*           END;                    /* END OF ZERO WHOLE RTCT ASID 0174
*                                      TABLE                 @G33VPHD*/
         L     @12,CVTPTR                                          0174
         L     @12,CVTRTMCT(,@12)                                  0174
         LA    @15,1                                               0174
         SLR   @10,@10                                             0174
         IC    @10,RTCTINDX(,@12)                                  0174
         ALR   @15,@10                                             0174
         L     @12,CVTPTR                                          0174
         L     @12,CVTRTMCT(,@12)                                  0174
         STC   @15,RTCTINDX(,@12)                                  0174
         C     @15,@CF00141                                        0174
         BNH   @DL00172                                            0174
*           RFY                                                    0175
*             SDWORK BASED(RTCTSDWK);/* MAP SVC DUMP WORK AREA     0175
*                                                            @G33VPHD*/
*           ERRORWK=''B;            /* ZERO ERROR WORK AREA FOR NEXT
*                                      DUMP                  @G33VPHD*/
         L     @15,CVTPTR                                          0176
         L     @12,CVTRTMCT(,@15)                                  0176
         L     @10,RTCTSDWK(,@12)                                  0176
         XC    ERRORWK(24,@10),ERRORWK(@10)                        0176
*           RTCTSDID=NULL;          /* SVC DUMP NOT ACTIVE           */
         SLR   @10,@10                                             0177
         STH   @10,RTCTSDID(,@12)                                  0177
*           RTCTSDF2=NULL;          /* CLEAR SVC DUMP STATUS FLAGS   */
         MVI   RTCTSDF2(@12),X'00'                                 0178
*           RTCTSDPL=NULL;          /* UNLOCK SVC DUMP               */
         ST    @10,RTCTSDPL(,@12)                                  0179
*           CVTSDBF=CVTSDBF&HIGHBIT0;/* UNLOCK 4K SQA BUFFER         */
         L     @12,CVTSDBF(,@15)                                   0180
         N     @12,@CF02994                                        0180
         ST    @12,CVTSDBF(,@15)                                   0180
*           RFY                                                    0181
*             R11 UNRSTD;                                          0181
*         END;                      /* END POST CALLERS ECB AND    0182
*                                      REINITIALIZE          @G33VPHD*/
*       RFY                                                        0183
*        (SDWA,                                                    0183
*         SDUMP) BASED;                                            0183
@RF00150 DS    0H                                                  0184
*       R13=WSALSDMP;               /* ADDRESS OF SAVE AREA          */
         L     @15,ASCBPTR                                         0184
         L     @15,ASXBPTR(,@15)                                   0184
         L     @15,ASXBSPSA(,@15)                                  0184
         L     R13,WSALSDMP(,@15)                                  0184
*       R14=SCHFRRRT;               /* RESTORE SAVED RETURN ADDRESS
*                                                            @G33VPHD*/
         L     R14,SCHFRRRT(,R3)                                   0185
*     END;                                                         0186
*   ELSE                            /* MODULE IS ENTERED BECAUSE AN  */
*     DO;                           /* ADDRESS SPACE IS TERMINATING  */
*                                                                  0187
         B     @RC00058                                            0187
@RF00058 DS    0H                                                  0188
*       /*************************************************************/
*       /*                                                           */
*       /* THIS SEGMENT IS THE SVC DUMP RESOURCE MANAGER. IT IS      */
*       /* CALLED WHENEVER A ADDRESS SPACE TERMINATES, EITHER        */
*       /* NORMALLY OR ABNORMALLY BY IEAVTMMT. IF SVC DUMP IS ACTIVE */
*       /* IN THE TERMINATING ADDRESS SPACE, ACQUIRED SYSTEM LEVEL   */
*       /* RESOURCES WILL BE FREED. IF THE DUMP WAS SCHEDULED AND THE*/
*       /* CALLER SUPPLIED AN ECB IT WILL BE POSTED. IF A DUMP WAS   */
*       /* SCHEDULED WITH A ECB AND THE CALLERS ADDRESS SPACE IS     */
*       /* TERMINATING, ECB INDICATORS IN THE SDUMP PARM LIST WILL BE*/
*       /* TURNED OFF. IF A SUMMARY DUMP BUFFER IS HELD AND ONLY ONE */
*       /* ADDRESS SPACE WAS REQUESTED AND THAT ADDRESS SPACE IS     */
*       /* TERMINATING, THE FRAMES OF THE BUFFER ARE FREED. IF THIS  */
*       /* ADDRESS SPACE IS ENQ'D ON THE SDUMP RESOURCE A DEQ IS     */
*       /* PERFORMED. INPUT: PARMLPTR CONTAINS ADDRESS OF A POINTER  */
*       /* TO THE RMPL, RTCTSDPL CONTAINS ADDRESS OF SDUMP PARM LIST */
*       /* AND RTCTSDID CONTAINS ASID OF ADDRESS SPACE IN WHICH SVC  */
*       /* DUMP IS RUNNING, IF SVC DUMP IS ACTIVE. OUTPUT: SYSTEM    */
*       /* LEVEL RESOURCES FREED, CALLERS ECB POSTED INCLUDED BY: TOP*/
*       /* SEGMENT                                                   */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0188
*       RFY                                                        0188
*         R8 RSTD;                                                 0188
*       R8=ADDRRMPL;                /* ADDRESS OF RMPL               */
         L     R8,ADDRRMPL(,R1)                                    0189
*       RMPLASCB->ASCBDUMP=NULL;    /* DONT SCHEDULE DUMPS INTO    0190
*                                      TERMINATING ADDRESS SPACE     */
         SLR   @15,@15                                             0190
         L     @12,RMPLASCB(,R8)                                   0190
         ST    @15,ASCBDUMP(,@12)                                  0190
*       IF RTCTSDPL^=NULL THEN      /* IF SVC DUMP IN PROGRESS,      */
         L     @12,CVTPTR                                          0191
         L     @12,CVTRTMCT(,@12)                                  0191
         C     @15,RTCTSDPL(,@12)                                  0191
         BE    @RF00191                                            0191
*         DO;                       /* CHECK FUTHER                  */
*           RFY                                                    0193
*             R10 RSTD;                                            0193
*           R10=RMPLRMWA;           /* ADDR OF WK AREA - ESTAE PARM  */
         L     @15,RMPLRMWA(,R8)                                   0194
         LR    R10,@15                                             0194
*           ESTAELST=LFESTAE;       /* MOVE ESTAE PARM LIST TO WARA  */
         MVC   ESTAELST(16,@15),LFESTAE                            0195
*           R1=ADDR(ESTAELST);      /* ADDR OF LIST FOR EXEC FORM    */
         LR    R1,@15                                              0196
*           GEN(ESTAE SDRMERRX,PARAM=(R10),RECORD=YES,MF=(E,(1))); 0197
         ESTAE SDRMERRX,PARAM=(R10),RECORD=YES,MF=(E,(1))
*           ERRRMPLA=R8;            /* PRESERVE ADDRESS OF RMPL      */
         L     @15,RMPLRMWA(,R8)                                   0198
         ST    R8,ERRRMPLA(,@15)                                   0198
*           ERRBASE=R5;             /* PRESERVE BASE REGISTER        */
         ST    R5,ERRBASE(,@15)                                    0199
*           ERRSAVE=R13;            /* PRESERVE SAVE AREA ADDRESS    */
         ST    R13,ERRSAVE(,@15)                                   0200
*           ERRRETRY=ADDR(SDRMRTY3);/* RETRY LOCATION ADDRESS        */
         LA    @12,SDRMRTY3                                        0201
         ST    @12,ERRRETRY(,@15)                                  0201
*           RFY                                                    0202
*             SDUMP BASED(RTCTSDPL);                               0202
*           IF RTCTSDSH='1'B THEN   /* IF SCHEDULE DUMP REQUEST,     */
         L     @15,CVTPTR                                          0203
         L     @15,CVTRTMCT(,@15)                                  0203
         TM    RTCTSDSH(@15),B'00100000'                           0203
         BNO   @RF00203                                            0203
*             DO;                   /* PARM LIST IS ADDRESSABLE      */
*               IF RMPLASID=SDUCASID THEN/* IF CALLERS ADDR SPACE  0205
*                                      ENDING                        */
         L     @15,RTCTSDPL(,@15)                                  0205
         CLC   RMPLASID(2,R8),SDUCASID(@15)                        0205
         BNE   @RF00205                                            0205
*                 DO;               /* INSURE NO XMPOST TO IT        */
*                   SDUECB='0'B;    /* ZERO ECB INDICATOR            */
         NI    SDUECB(@15),B'11110111'                             0207
*                   SDUECBAD=NULL;  /* ZERO ECB ADDRESS              */
         SLR   @12,@12                                             0208
         ST    @12,SDUECBAD(,@15)                                  0208
*                 END;                                             0209
*             END;                                                 0210
@RF00205 DS    0H                                                  0211
*SDRMRTY3:                                                         0211
*           ERRRETRY=ADDR(SDRMRTY9);/* GET NEXT RETRY ADDRESS      0211
*                                                            @G33VPHD*/
*                                                                  0211
@RF00203 DS    0H                                                  0211
SDRMRTY3 L     @15,RMPLRMWA(,R8)                                   0211
         LA    @12,SDRMRTY9                                        0211
         ST    @12,ERRRETRY(,@15)                                  0211
*           /*********************************************************/
*           /*                                                       */
*           /* THIS LOOP TRIES TO FIND THE ASID OF THE ADDRESS SPACE */
*           /* THAT IS TERMINATING, IN THE RTCT ASID TABLE   @G33VPHD*/
*           /*                                                       */
*           /*********************************************************/
*                                                                  0212
*           RFY                                                    0212
*             R6 RSTD;              /* SAVE INDEX REGISTER   @G33VPHD*/
*           IF RTCTSDMA='1'B&       /* IF A MULTIPLE ASID DUMP     0213
*                                                            @G33VPHD*/
*               RMPLASID=MASTASID THEN/* AND THIS IS MASTER ASID   0213
*                                                            @G33VPHD*/
         L     @15,CVTPTR                                          0213
         L     @15,CVTRTMCT(,@15)                                  0213
         TM    RTCTSDMA(@15),B'00010000'                           0213
         BNO   @RF00213                                            0213
         CLC   RMPLASID(2,R8),@CH00082                             0213
         BNE   @RF00213                                            0213
*             R6=MAXENTRY;          /* USE LAST ENTRY IN TABLE     0214
*                                                            @G33VPHD*/
         LA    R6,16                                               0214
*           ELSE                                                   0215
*             DO;                   /* NOT LAST ENTRY SEARCH THE   0215
*                                      TABLE                 @G33VPHD*/
         B     @RC00213                                            0215
@RF00213 DS    0H                                                  0216
*               DO R6=1 TO MAXENTRY WHILE(RTCTSDAS(R6)^=RMPLASID);/*
*                                      SEARCH ALL ENTRIES IN THE   0216
*                                      TABLE                 @G33VPHD*/
         LA    R6,1                                                0216
@DL00216 LR    @15,R6                                              0216
         SLA   @15,2                                               0216
         L     @12,CVTPTR                                          0216
         L     @12,CVTRTMCT(,@12)                                  0216
         ALR   @12,@15                                             0216
         CLC   RTCTSDAS-4(2,@12),RMPLASID(R8)                      0216
         BE    @DC00216                                            0216
*               END;                /* END SEARCH ALL ENTRIES IN THE
*                                      TABLE                 @G33VPHD*/
         AL    R6,@CF00082                                         0217
         C     R6,@CF00141                                         0217
         BNH   @DL00216                                            0217
@DC00216 DS    0H                                                  0218
*             END;                  /* END NOT LAST ENTRY SEARCH   0218
*                                      TABLE                 @G33VPHD*/
*           IF R6<=MAXENTRY THEN    /* IF THIS ASID IS DUMPING     0219
*                                                            @G33VPHD*/
@RC00213 C     R6,@CF00141                                         0219
         BH    @RF00219                                            0219
*             DO;                   /* CLEAN UP RESOURCES FOR THIS 0220
*                                      ASID                  @G33VPHD*/
*               ERRRETRY=ADDR(SDRMRTY5);/* GET NEXT RETRY ADDRESS  0221
*                                                            @G33VPHD*/
         L     @15,RMPLRMWA(,R8)                                   0221
         LA    @12,SDRMRTY5                                        0221
         ST    @12,ERRRETRY(,@15)                                  0221
*               RFY                                                0222
*                 SMWKRSCB BASED(ADDR(SMWKRSM));/* MAP RSM PART OF 0222
*                                      THE SUMMARY DUMP WORK AREA  0222
*                                                            @G33VPHD*/
*               IF SMWKFRHD>ZEROH&  /* IF REAL STORAGE BUFFER HELD 0223
*                                      AND                   @G33VPHD*/
*                   RTCTSDNA=1 THEN /* THIS IS ONLY ASID TO DUMP   0223
*                                                            @G33VPHD*/
         L     @15,CVTPTR                                          0223
         L     @15,CVTRTMCT(,@15)                                  0223
         L     @12,RTCTSDSW(,@15)                                  0223
         CLC   SMWKFRHD+196(2,@12),@CH00052                        0223
         BNH   @RF00223                                            0223
         CLI   RTCTSDNA(@15),1                                     0223
         BNE   @RF00223                                            0223
*                 DO;               /* FREE THE REAL STORAGE BUFFER
*                                                            @G33VPHD*/
*                   GEN REFS(PSALITA);                             0225
*                                   /*OBTAIN THE SALLOC LOCK @G33VPHD*/
GETLOCKR SETLOCK  OBTAIN,TYPE=SALLOC,MODE=UNCOND,                      X
               RELATED=(SVCDUMP,IEAVTSDR(FRELOCKR))
*                   SMWKRBUF='0'B;  /* INDICATE BUFFER FREED @G33VPHD*/
         L     @15,CVTPTR                                          0226
         L     @15,CVTRTMCT(,@15)                                  0226
         L     @15,RTCTSDSW(,@15)                                  0226
         NI    SMWKRBUF(@15),B'10111111'                           0226
*                   SMWKNFAV=ZEROH; /* ZERO NUMBER FRAMES AVAIL    0227
*                                                            @G33VPHD*/
         SLR   @12,@12                                             0227
         STH   @12,SMWKNFAV(,@15)                                  0227
*                   SMWKFRHD=ZEROH; /* ZERO NUMBER FRAMES HELD     0228
*                                                            @G33VPHD*/
         LA    @11,196                                             0228
         ALR   @11,@15                                             0228
         STH   @12,SMWKFRHD(,@11)                                  0228
*                   SMWKFRUS=ZEROH; /* ZERO NUMBER FRAMES USED     0229
*                                                            @G33VPHD*/
         STH   @12,SMWKFRUS(,@15)                                  0229
*                   SMWKRSIX=ZEROH; /* ZERO CURRENT INDEX VALUE    0230
*                                                            @G33VPHD*/
         STH   @12,SMWKRSIX(,@15)                                  0230
*                   R1=ADDR(SMWKRSM);/* GET PARAMETER LIST ADDRESS 0231
*                                                            @G33VPHD*/
         LA    R1,SMWKRSM(,@15)                                    0231
*                   R13=ADDR(SMWKSAV1);/* GET SAVE AREA ADDRESS    0232
*                                                            @G33VPHD*/
         LA    R13,SMWKSAV1(,@15)                                  0232
*                   SMWKEVRY='1'B;  /* INDICATE TO RSM FREE ALL    0233
*                                      FRAMES                @ZM45193*/
         OI    SMWKEVRY(@11),B'10000000'                           0233
*                   SMWKFRPT=NULL;  /* ZERO FRAME ADDRESS FOR ALL  0234
*                                      FRAMES                @G33VPHD*/
         ST    @12,SMWKFRPT(,@11)                                  0234
*                   CALL IEAVPRSR;  /* CALL RSM FREE ALL FRAMES    0235
*                                                            @G33VPHD*/
         L     @15,SMWKPRSR(,@11)                                  0235
         BALR  @14,@15                                             0235
*                   GEN REFS(PSALITA);                             0236
*                                                                  0236
*                                    /*RELEASE SALLOC LOCK   @G33VPHD*/
FRELOCKR SETLOCK  RELEASE,TYPE=SALLOC,                                 X
               RELATED=(SVCDUMP,IEAVTSDR(GETLOCKR))
*                   /*************************************************/
*                   /*                                               */
*                   /* THIS SECTION TEST TO SEE IF THE SUMMARY DUMP  */
*                   /* TIMER DIE TQE IS STILL ON THE REAL TIME QUEUE.*/
*                   /* IF IT IS THE DISPATCHER LOCK IS OBTAINED AND  */
*                   /* THE TQE DEQUE ROUTINE IS CALLED TO REMOVE THE */
*                   /* TQE FROM THE QUEUE                    @ZM45208*/
*                   /*                                               */
*                   /*************************************************/
*                                                                  0237
*                   IF RTCTSDTQ=ON THEN/* IF SUMDUMP TQE ON TIMER  0237
*                                      QUEUE                 @ZM45208*/
         L     @15,CVTPTR                                          0237
         L     @15,CVTRTMCT(,@15)                                  0237
         TM    RTCTSDTQ(@15),B'01000000'                           0237
         BNO   @RF00237                                            0237
*                     DO;           /* OBTAIN DISPATCHER LOCK AND DEQ
*                                      TQE                   @ZM45208*/
*                       GEN REFS(PSALITA);                         0239
*                                /*OBTAIN DISPATCHER LOCK    @ZM45208*/
GETLOCKE SETLOCK OBTAIN,TYPE=DISP,MODE=UNCOND,                         X
               RELATED=(SVCDUMP,IEAVTSDR(FRELOCKE))            @ZM45208
*                       R1=SMWKTQEA;/* GET TQE ADDRESS FOR TQEDEQ  0240
*                                                            @ZM45208*/
         L     @15,CVTPTR                                          0240
         L     @12,CVTRTMCT(,@15)                                  0240
         L     @12,RTCTSDSW(,@12)                                  0240
         L     R1,SMWKTQEA(,@12)                                   0240
*                       RFY                                        0241
*                         R2 RSTD;  /* RESTRICT RETURN REGISTER    0241
*                                                            @ZM45208*/
*                       R2=ADDR(SDRTRN);/* OBTAIN RETURN ADDRESS   0242
*                                                            @ZM45208*/
         LA    R2,SDRTRN                                           0242
*                       CALL TQEDEQ;/* REMOVE SUMDUMP TQE FROM TIMER
*                                      QUEUE                 @ZM45208*/
         L     @15,CVTQTD00(,@15)                                  0243
         BALR  @14,@15                                             0243
*SDRTRN:                                                           0244
*                       RTCTSDTQ=OFF;/* INDICATE SUMDUMP TQE NO    0244
*                                      LONGER ON QUEUE       @ZM45208*/
SDRTRN   L     @15,CVTPTR                                          0244
         L     @15,CVTRTMCT(,@15)                                  0244
         NI    RTCTSDTQ(@15),B'10111111'                           0244
*                       RFY                                        0245
*                         R2 UNRSTD;/* FREE RETURN REGISTER  @ZM45208*/
*                       GEN REFS(PSALITA);                         0246
*                                /*OBTAIN DISPATCHER LOCK    @ZM45208*/
FRELOCKE SETLOCK RELEASE,TYPE=DISP,                                    X
               RELATED=(SVCDUMP,IEAVTSDR(GETLOCKE))            @ZM45208
*                     END;          /* END OF REMOVE TQE FROM QUEUE
*                                                            @ZM45208*/
*                 END;              /* END OF REAL STORAGE FRAMES  0248
*                                      HELD                  @G33VPHD*/
@RF00237 DS    0H                                                  0249
*SDRMRTY5:                                                         0249
*               ERRRETRY=ADDR(SDRMRTY6);/* GET NEXT RETRY ADDRESS  0249
*                                                            @G33VPHD*/
*                                                                  0249
@RF00223 DS    0H                                                  0249
SDRMRTY5 L     @15,RMPLRMWA(,R8)                                   0249
         LA    @12,SDRMRTY6                                        0249
         ST    @12,ERRRETRY(,@15)                                  0249
*               /*****************************************************/
*               /*                                                   */
*               /* THIS SEGMENT WILL FREE SYSTEM LEVEL RESOURCES     */
*               /* ACQUIRED BY SVC DUMP. IF THE SYSTEM IS            */
*               /* NON-DISPATCHABLE BECAUSE OF SVC DUMP (RTCTSDND),  */
*               /* STATUS WILL BE CALLED TO SET THE SYSTEM           */
*               /* DISPATCHABLE. IF THE SUPERVISOR TRACE TABLE HAS   */
*               /* BEEN                                        STOPED*/
*               /* BY SVC DUMP, IT WILL BE STARTED. INPUT: RTCT,     */
*               /* FLCTRACE, CVTSDTRC OUTPUT: SYSTEM IS DISPATCHABLE,*/
*               /* TRACE TABLE STARTED INCLUDED BY: SDRM             */
*               /*                                                   */
*               /*****************************************************/
*                                                                  0250
*               IF RTCTSDND='1'B THEN/* IF SVC DUMP LEFT SYS NON-DSP */
         L     @15,CVTPTR                                          0250
         L     @15,CVTRTMCT(,@15)                                  0250
         TM    RTCTSDND(@15),B'01000000'                           0250
         BNO   @RF00250                                            0250
*                 DO;               /* SET SYSTEM DISPATCHABLE       */
*                   RTCTSDND='0'B;  /* IND SYS DISPATCH.             */
         NI    RTCTSDND(@15),B'10111111'                           0252
*                   GEN(STATUS    RESET,SD,SYSTEM,(19));/* SET SYS 0253
*                                      DISPATCH.                     */
         STATUS    RESET,SD,SYSTEM,(19)
*                 END;                                             0254
*               RTCTSDEN(R6)='0'B;  /* INDICATE SVC DUMP NOT ENTERED
*                                                            @G33VPHD*/
@RF00250 LR    @15,R6                                              0255
         SLA   @15,2                                               0255
         L     @12,CVTPTR                                          0255
         L     @11,CVTRTMCT(,@12)                                  0255
         ALR   @11,@15                                             0255
         NI    RTCTSDEN-4(@11),B'11111101'                         0255
*               IF CVTSDTRC='1'B THEN/* IF SVC DUMP STOPPED SUPR TRT */
         TM    CVTSDTRC(@12),B'00000001'                           0256
         BNO   @RF00256                                            0256
*                 DO;               /* START SUPR TRACE TABLE        */
*                   CVTSDTRC='0'B;  /* IND SVC DUMP NOT USING TRT    */
         NI    CVTSDTRC(@12),B'11111110'                           0258
*                   IF FLCTRACE^=NULL&/* IF SUPERVISOR TRT EXISTS AND*/
*                       CVTGTRCE='0'B THEN/* IS NOT STOPPED BY GTF   */
         L     @15,FLCTRACE                                        0259
         LTR   @15,@15                                             0259
         BZ    @RF00259                                            0259
         TM    CVTGTRCE(@12),B'00000010'                           0259
         BNZ   @RF00259                                            0259
*                     DO;           /* START SUPERVISOR TRACE TABLE  */
*                       RFY                                        0261
*                        (R10,                                     0261
*                         R11) RSTD;                               0261
*                       R10=TRTSTOP;/* TRACE STOPPED CVT VALUE       */
         L     R10,@CF02990                                        0262
*                       R11=TRTACTVE;/* TRACE ACTIVE CVT VALUE       */
         L     R11,@CF02992                                        0263
*                       CS(R10,R11,TRTCVTWD);/* IF TRT STOPPED, START
*                                      IT                            */
         L     @15,CVTPTR                                          0264
         CS    R10,@11,TRTCVTWD(@15)                               0264
*                       RFY                                        0265
*                        (R10,                                     0265
*                         R11) UNRSTD;                             0265
*                     END;                                         0266
*                 END;                                             0267
@RF00259 DS    0H                                                  0268
*SDRMRTY6:                                                         0268
*               ERRRETRY=ADDR(SDRMRTY9);/* GET NEXT RETRY ADDRESS  0268
*                                                            @G33VPHD*/
@RF00256 DS    0H                                                  0268
SDRMRTY6 L     @15,RMPLRMWA(,R8)                                   0268
         LA    @12,SDRMRTY9                                        0268
         ST    @12,ERRRETRY(,@15)                                  0268
*               RTCTSDDO(R6)='1'B;  /* MARK DUMP COMPLETE    @G33VPHD*/
*                                                                  0269
         LR    @15,R6                                              0269
         SLA   @15,2                                               0269
         L     @12,CVTPTR                                          0269
         L     @12,CVTRTMCT(,@12)                                  0269
         ALR   @12,@15                                             0269
         OI    RTCTSDDO-4(@12),B'00000001'                         0269
*               /*****************************************************/
*               /*                                                   */
*               /* THIS LOOP CHECKS TO SEE IF ANY OTHER ADDRESS SPACE*/
*               /* DUMPS ARE IN PROGRESS                     @G33VPHD*/
*               /*                                                   */
*               /*****************************************************/
*                                                                  0270
*               DO R6=1 TO MAXENTRY WHILE(RTCTSDAS(R6)=NULL×RTCTSDDO(R6
*                     )='1'B);      /* SEARCH ALL ENTRIES    @G33VPHD*/
         LA    R6,1                                                0270
@DL00270 LR    @15,R6                                              0270
         SLA   @15,2                                               0270
         L     @12,CVTPTR                                          0270
         L     @12,CVTRTMCT(,@12)                                  0270
         ALR   @15,@12                                             0270
         SLR   @09,@09                                             0270
         ICM   @09,3,RTCTSDAS-4(@15)                               0270
         LTR   @09,@09                                             0270
         BZ    @DB00270                                            0270
         LR    @15,R6                                              0270
         SLA   @15,2                                               0270
         ALR   @12,@15                                             0270
         TM    RTCTSDDO-4(@12),B'00000001'                         0270
         BNO   @DC00270                                            0270
@DB00270 DS    0H                                                  0271
*               END;                /* END SEARCH ALL ASID ENTRIES 0271
*                                                            @G33VPHD*/
         AL    R6,@CF00082                                         0271
         C     R6,@CF00141                                         0271
         BNH   @DL00270                                            0271
@DC00270 DS    0H                                                  0272
*               IF R6>MAXENTRY THEN /* IF ALL ASIDS ARE DONE @G33VPHD*/
         C     R6,@CF00141                                         0272
         BNH   @RF00272                                            0272
*                 DO;               /* DO A TOTAL DUMP CLEAN UP    0273
*                                                            @G33VPHD*/
*                   RFY                                            0274
*                    (R11,                                         0274
*                     R9) RSTD;                                    0274
*                   R11=NULL;       /* PRESET NO ECB TO XMPOST     0275
*                                                            @G33VPHD*/
         SLR   R11,R11                                             0275
*                   IF RTCTSDSH='1'B THEN/* IF DUMP WAS SCHEDULED,   */
         L     @15,CVTPTR                                          0276
         L     @12,CVTRTMCT(,@15)                                  0276
         TM    RTCTSDSH(@12),B'00100000'                           0276
         BNO   @RF00276                                            0276
*                     DO;           /* CHECK FOR ECB TO XMPOST       */
*                       IF SDUECB='1'B&/* IF CALLER SUPPLIED ECB     */
*                           SDUECBAD^=NULL&/* AND ECB ADDR NOT ZERO &*/
*                           ASVTAVAL(SDUCASID)='0'B THEN/* CALLER  0278
*                                      ACTIVE                        */
         L     @12,RTCTSDPL(,@12)                                  0278
         TM    SDUECB(@12),B'00001000'                             0278
         BNO   @RF00278                                            0278
         L     @10,SDUECBAD(,@12)                                  0278
         LTR   @10,@10                                             0278
         BZ    @RF00278                                            0278
         LH    @12,SDUCASID(,@12)                                  0278
         N     @12,@CF03126                                        0278
         SLA   @12,2                                               0278
         L     @15,ASVTPTR(,@15)                                   0278
         ALR   @12,@15                                             0278
         TM    ASVTAVAL-4(@12),B'10000000'                         0278
         BNZ   @RF00278                                            0278
*                         DO;                                      0279
*                           R9=ASVTENTY(SDUCASID);/* ASCB ADDRESS    */
         L     @12,CVTPTR                                          0280
         L     @12,CVTRTMCT(,@12)                                  0280
         L     @12,RTCTSDPL(,@12)                                  0280
         LH    @12,SDUCASID(,@12)                                  0280
         N     @12,@CF03126                                        0280
         SLA   @12,2                                               0280
         L     R9,ASVTENTY-4(@12,@15)                              0280
*                           R11=SDUECBAD;/* ECB ADDRESS              */
         LR    R11,@10                                             0281
*                         END;                                     0282
*                     END;          /* END CHECK FOR ECB TO XMPOST 0283
*                                                            @G33VPHD*/
@RF00278 DS    0H                                                  0284
*                   ERRRETRY=ADDR(SDRMRTY9);/* NEXT RETRY LOCATION 0284
*                                      ADR                           */
@RF00276 L     @15,RMPLRMWA(,R8)                                   0284
         LA    @12,SDRMRTY9                                        0284
         ST    @12,ERRRETRY(,@15)                                  0284
*                   RTCTSDID=NULL;  /* SVC DUMP NOT ACTIVE           */
         L     @15,CVTPTR                                          0285
         L     @15,CVTRTMCT(,@15)                                  0285
         SLR   @12,@12                                             0285
         STH   @12,RTCTSDID(,@15)                                  0285
*                   RTCTSDI=''B;    /* ZERO SVC DUMP FLAGS   @G33VPHD*/
         XC    RTCTSDI(3,@15),RTCTSDI(@15)                         0286
*                   RTCTSDF=''B;    /* ZERO SVC DUMP FLAGS   @G33VPHD*/
         XC    RTCTSDF(4,@15),RTCTSDF(@15)                         0287
*                   RTCTSDF2=NULL;  /* CLEAR STATUS FLAGS            */
         MVI   RTCTSDF2(@15),X'00'                                 0288
*                   DO R6=1 TO MAXENTRY;/* CLEAR WHOLE ARRAY @G33VPHD*/
         LA    R6,1                                                0289
@DL00289 DS    0H                                                  0290
*                     RTCTSDF3(R6)=''B;/* CLEAR ONE ARRAY ENTRY    0290
*                                                            @G33VPHD*/
         LR    @15,R6                                              0290
         SLA   @15,2                                               0290
         L     @12,CVTPTR                                          0290
         L     @12,CVTRTMCT(,@12)                                  0290
         ALR   @12,@15                                             0290
         XC    RTCTSDF3-4(4,@12),RTCTSDF3-4(@12)                   0290
*                   END;            /* END CLEAR WHOLE ARRAY @G33VPHD*/
         AL    R6,@CF00082                                         0291
         C     R6,@CF00141                                         0291
         BNH   @DL00289                                            0291
*                   RFY                                            0292
*                     SDWORK BASED(RTCTSDWK);/* MAP SDUMP WORK AREA
*                                                            @ZM45193*/
*                   ERRORWK=''B;    /* CLEAR ESTAE WORK AREA FLAGS 0293
*                                                            @G33VPHD*/
         L     @15,CVTPTR                                          0293
         L     @12,CVTRTMCT(,@15)                                  0293
         L     @10,RTCTSDWK(,@12)                                  0293
         XC    ERRORWK(24,@10),ERRORWK(@10)                        0293
*                   RTCTSDPL=NULL;  /* UNLOCK SVC DUMP               */
         SLR   @10,@10                                             0294
         ST    @10,RTCTSDPL(,@12)                                  0294
*                   CVTSDBF=CVTSDBF&HIGHBIT0;/* UNLOCK 4K SQA BUFFER */
         L     @12,CVTSDBF(,@15)                                   0295
         N     @12,@CF02994                                        0295
         ST    @12,CVTSDBF(,@15)                                   0295
*                   IF R11^=NULL THEN/* IF CALLER SUPPLIED ECB       */
         CR    R11,@10                                             0296
         BE    @RF00296                                            0296
*                     DO;           /* XMPOST ECB                    */
*                       RFY                                        0298
*                        (R10,                                     0298
*                         R12) RSTD;                               0298
*                       R10=NODUMP; /* IND NO DUMP TAKEN             */
         LA    R10,8                                               0299
*                       R12=ADDR(CVTBRET);/* NO ERROR EXIT           */
         LA    R12,CVTBRET(,@15)                                   0300
*                       POSTLIST=LFPOST;/* PARM LIST TO WAREA        */
         L     @15,RMPLRMWA(,R8)                                   0301
         MVC   POSTLIST(12,@15),LFPOST                             0301
*                       R1=ADDR(POSTLIST);/* ADDR OF POST LIST       */
         LA    R1,POSTLIST(,@15)                                   0302
*                       GEN;                                       0303
*                                                /*XMPOST CALLER     */
         POST  (R11),(R10),ERRET=(R12),ASCB=(R9),MF=(E,(1))
*                       RFY                                        0304
*                        (R10,                                     0304
*                         R12) RSTD;                               0304
*                     END;                                         0305
*                   RFY                                            0306
*                    (R11,                                         0306
*                     R9) UNRSTD;                                  0306
@RF00296 DS    0H                                                  0307
*                 END;              /* END OF PERFORM TOTAL CLEAN UP
*                                                            @G33VPHD*/
*SDRMRTY9:                                                         0308
*               ;                   /* RETRY LOCATION                */
@RF00272 DS    0H                                                  0308
SDRMRTY9 DS    0H                                                  0309
*             END;                  /* END.... THIS ASID INVLOVED IN
*                                      ACTIVE DUMP           @ZA27048*/
*           R13=ERRSAVE;            /* RESTORE SAVE AREA ADDRESS   0310
*                                                            @ZA27048*/
@RF00219 L     @15,RMPLRMWA(,R8)                                   0310
         L     R13,ERRSAVE(,@15)                                   0310
*           GEN(ESTAE 0);           /* DELETE THE ESTAE ERROR EXIT   */
         ESTAE 0
*         END;                      /* END.... SVC DUMP IN PROGRESS
*                                                            @G33VPHD*/
*       RFY                                                        0313
*         RMPL BASED;               /* RMPL IS NOT ADDRESSABLE IF  0313
*                                      RETRY TO THIS LOCATION FROM 0313
*                                      SDRMERRX ESTAE ERROR EXIT     */
@RF00191 DS    0H                                                  0314
*       RFY                                                        0314
*         R15 RSTD;                                                0314
*       R15=NULL;                   /* SVC DUMP RES MGR COMPLETED    */
         SLR   R15,R15                                             0315
*       RFY                                                        0316
*         R15 UNRSTD;               /* ANY SYSTEM LEVEL RESOURCES    */
*     END;                                                         0317
*                                                                  0317
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS SEGMENT CONTAINS THE ESTAE ERROR EXIT. IT IS ACTIVE WHEN */
*   /* IEAVTSDR IS INVOKED AS THE SVC DUMP RESOURCE MANAGER. THIS    */
*   /* EXIT WILL RETRY, IF ALLOWED, ELSE PERCOLATE. RECORDING WILL   */
*   /* ALWAYS BE REQUESTED. INPUT: SDWA, RMPL OUTPUT: RECORDING,     */
*   /* RETRY OR PERCOLATE                                            */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0318
*SDRMERRX:                                                         0318
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0318
@EL00001 DS    0H                                                  0318
@EF00001 DS    0H                                                  0318
@ER00001 L     @14,12(,@13)                                        0318
         LM    @00,@12,20(@13)                                     0318
         BR    @14                                                 0318
SDRMERRX DS    0H                                                  0319
*   RFY                                                            0319
*     R14 RSTD;                                                    0319
*   RFY                                                            0320
*     R10 RSTD;                     /* WORKA WILL POINT TO WK AREA 0320
*                                      FOR RES MGR - RMPLRMWA        */
*   RFY                                                            0321
*     SDRMWORK BASED(R10);          /* MAP ERROR WORK AREA   @G33VPHD*/
*   DO;                             /* ENTESTAE (R5)ERREXIT(ERRXPERC)
*                                      PARMREG(R10)                  */
*                                                                  0322
*     /***************************************************************/
*     /*                                                             */
*     /* ENTRY CODE FOR ESTAE ROUTINE. IF RTCA ALLOCATED THEN RESTORE*/
*     /* CODE AND DATA REGS FROM START OF USERS PARM LIST, AND       */
*     /* ESTABLISH ADDR TO ESTAE SAVE AREA IF REQUIRED. IF NO RTCA   */
*     /* AVAILABLE THEN BRANCH TO ERROR CODE AFTER ESTABLISHING      */
*     /* ADDRESSABILITY                                              */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0323
*     GEN(USING *,GPR15P);                                         0323
         USING *,GPR15P
*     GEN(CH    GPR00F,*+18);       /* CHECK IF RTCA ALLOC FAILED    */
         CH    GPR00F,*+18
*     GEN(BNE   *+16);              /* NO,SAVE RTM REGS              */
         BNE   *+16
*     GEN(DROP  GPR15P);            /* DROP LOCAL ADDR               */
         DROP  GPR15P
*     GEN(LR    R10,GPR02P);        /* PTR TO USER PARM LIST         */
         LR    R10,GPR02P
*     GEN(L     R5,00(R10));                                       0328
         L     R5,00(R10)
*     GEN(B     ERRXPERC);          /* BRANCH TO ERROR EXIT          */
         B     ERRXPERC
*     GEN(DC    H'12');             /* NO RTCA AVAIL RC              */
         DC    H'12'
*     GEN(STM   GPR14P,GPR12F,12(GPR13P));/* GOOD R13, SAVE RTM'S  0331
*                                      REGS                          */
         STM   GPR14P,GPR12F,12(GPR13P)
*     GEN(L     R10,0(GPR01P));     /* PTR TO USER PARM LIST         */
         L     R10,0(GPR01P)
*     GEN(L     R5,00(R10));                                       0333
         L     R5,00(R10)
*   END;                            /* ENTESTAE (R5)ERREXIT(ERRXPERC)
*                                      PARMREG(R10)                  */
*   RFY                                                            0335
*     SDWA BASED(R1);                                              0335
*   SDWARCRD='1'B;                  /* REQUEST RECORDING             */
         OI    SDWARCRD(R1),B'10000000'                            0336
*   SDWACSCT=CSECTNAM;              /* CSECT NAME                    */
         MVC   SDWACSCT(8,R1),@CC03004                             0337
*   SDWAMODN=LMODNAME;              /* LOAD MODULE NAME              */
         MVC   SDWAMODN(8,R1),@CC03004                             0338
*   SDWAREXN=ESTAENAM;              /* ESTAE ERROR EXIT NAME         */
         MVC   SDWAREXN(8,R1),@CC03007                             0339
*   SDWAFREE='1'B;                  /* FREE SDWA ON RETURN           */
         OI    SDWAFREE(R1),B'00000100'                            0340
*   IF SDWACLUP='0'B&               /* IF RETRY IS ALLOWED AND       */
*       SDWASTAE='0'B THEN          /* EXIT HAS NOT BEEN ENT BEFORE  */
         TM    SDWACLUP(R1),B'10100000'                            0341
         BNZ   @RF00341                                            0341
*     DO;                           /* SETUP TO RETRY                */
*       SDWARCDE=SDWARETY;          /* INDICATE RETRY                */
         MVI   SDWARCDE(R1),X'04'                                  0343
*       SDWAUPRG='1'B;              /* PRIME REGS ON RETRY           */
         OI    SDWAUPRG(R1),B'00001000'                            0344
*       SDWASR05=R5;                /* PRIME BASE REGISTER           */
         ST    R5,SDWASR05(,R1)                                    0345
*       SDWASR13=ERRSAVE;           /* PRIME CALLERS SAVE AREA ADDR
*                                                            @G33VPHD*/
         L     @15,ERRSAVE(,R10)                                   0346
         ST    @15,SDWASR13(,R1)                                   0346
*       SDWASR08=ERRRMPLA;          /* RESTORE ADDR OF RMPL  @G33VPHD*/
         L     @15,ERRRMPLA(,R10)                                  0347
         ST    @15,SDWASR08(,R1)                                   0347
*       SDWARTYA=ERRRETRY;          /* RETRY AT THAT LOCATION      0348
*                                                            @G33VPHD*/
         L     @15,ERRRETRY(,R10)                                  0348
         ST    @15,SDWARTYA(,R1)                                   0348
*     END;                                                         0349
*   ELSE                            /* PERCOLATE                     */
*     DO;                                                          0350
         B     @RC00341                                            0350
@RF00341 DS    0H                                                  0351
*       SDWARCDE=SDWACWT;           /* INDICATE PERCOLATION          */
         MVI   SDWARCDE(R1),X'00'                                  0351
*       RFY                                                        0352
*         SDWA BASED;                                              0352
*ERRXPERC:                                                         0353
*       ;                           /* ENTRY IF NO SDWA EXISTS       */
ERRXPERC DS    0H                                                  0354
*       RFY                                                        0354
*         R15 RSTD;                                                0354
*       R15=NULL;                   /* IND PERCOLATE IF NO SDWA      */
         SLR   R15,R15                                             0355
*       RFY                                                        0356
*         R15 UNRSTD;                                              0356
*     END;                                                         0357
*   RFY                                                            0358
*     SDRMWORK BASED(RMPLRMWA);     /*                       @G33VPHD*/
*   RFY                                                            0359
*     R10 UNRSTD;                                                  0359
*   END SDRMERRX;                                                  0360
@EL00002 DS    0H                                                  0360
@EF00002 DS    0H                                                  0360
@ER00002 BR    @14                                                 0360
*   DECLARE                         /* GENERAL PURPOSE REGISTERS     */
*     GPR00F FIXED(31) REG(0),                                     0361
*     GPR12F FIXED(31) REG(12),                                    0361
*     GPR01P PTR(31) REG(1),                                       0361
*     GPR02P PTR(31) REG(2),                                       0361
*     GPR13P PTR(31) REG(13),                                      0361
*     GPR14P PTR(31) REG(14),                                      0361
*     GPR15P PTR(31) REG(15);                                      0361
*   DECLARE                         /* COMMON VARIABLES              */
*     I256C CHAR(256) BASED,                                       0362
*     I031F FIXED(31) BASED,                                       0362
*     I031P PTR(31) BASED,                                         0362
*     I015F FIXED(15) BASED,                                       0362
*     I015P PTR(15) BASED,                                         0362
*     I008P PTR(8) BASED,                                          0362
*     I001C CHAR(1) BASED;                                         0362
*   END IEAVTSDR                                                   0363
*                                                                  0363
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (DRSPEC  )                                       */
*/*%INCLUDE SYSLIB  (DRDCL   )                                       */
*/*%INCLUDE SYSLIB  (IHAPSA  )                                       */
*/*%INCLUDE SYSLIB  (IHAASXB )                                       */
*/*%INCLUDE SYSLIB  (IHALCCA )                                       */
*/*%INCLUDE SYSLIB  (CVT     )                                       */
*/*%INCLUDE SYSLIB  (IKJTCB  )                                       */
*/*%INCLUDE SYSLIB  (IHARTCT )                                       */
*/*%INCLUDE SYSLIB  (IHASDUMP)                                       */
*/*%INCLUDE SYSLIB  (IHASDWRK)                                       */
*/*%INCLUDE SYSLIB  (IHAASCB )                                       */
*/*%INCLUDE SYSLIB  (IHASDWA )                                       */
*/*%INCLUDE SYSLIB  (IHAASVT )                                       */
*/*%INCLUDE SYSLIB  (IHAWSAVT)                                       */
*/*%INCLUDE SYSLIB  (IHASCVT )                                       */
*/*%INCLUDE SYSLIB  (IHAESTA )                                       */
*/*%INCLUDE SYSLIB  (IHARMPL )                                       */
*/*%INCLUDE SYSLIB  (IHASDRSB)                                       */
*/*%INCLUDE SYSLIB  (IHASMDLR)                                       */
*/*%INCLUDE SYSLIB  (IHASMWK )                                       */
*/*%INCLUDE SYSLIB  (SRBFRR  )                                       */
*/*%INCLUDE SYSLIB  (SDRM    )                                       */
*/*%INCLUDE SYSLIB  (FREERES )                                       */
*/*%INCLUDE SYSLIB  (SDRMERRX)                                       */
*                                                                  0363
*       ;                                                          0363
@DATA    DS    0H
@CH00052 DC    H'0'
@DATD    DSECT
         DS    0F
IEAVTSDR CSECT
         DS    0F
@CF00082 DC    F'1'
@CH00082 EQU   @CF00082+2
@CF00141 DC    F'16'
@CF03119 DC    F'-2147483648'
@CF02990 DC    XL4'070A07FB'
@CF02992 DC    XL4'07FA07FB'
@CF02994 DC    XL4'7FFFFFFF'
@CF02996 DC    XL4'80000000'
@CF03019 DC    XL4'00002000'
@CF03126 DC    XL4'0000FFFF'
@DATD    DSECT
         DS    0D
IEAVTSDR CSECT
         NOPR  ((@ENDDATD-@DATD)*16)
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
         DS    0D
SMWKLEN  DC    AL4(980)
@CC03004 DC    C'IEAVTSDR'
@CC03007 DC    C'SDRMERRX'
@CC03009 DC    C'IEANUC01'
@CC03011 DC    C'IEAVTSDX'
QNAMEA   DC    CL8'SDUMPQNM'
RNAMEA   DC    CL8'SDUMPRNM'
SMDWSAG  DC    AL2(6)
         DC    AL2(7)
         DC    AL2(8)
         DC    AL2(9)
         DC    AL2(10)
         DC    AL2(11)
         DC    AL2(12)
         DC    AL2(13)
         DC    AL2(14)
         DC    AL2(15)
         DC    AL2(16)
SMDWSAC  DC    AL2(17)
         DC    AL2(18)
         DC    AL2(19)
         DC    AL2(20)
         DC    AL2(21)
         DC    AL2(22)
         DC    AL2(23)
         DC    AL2(24)
         DC    AL2(25)
         DC    AL2(26)
         DC    AL2(27)
         DC    AL2(28)
         DC    AL2(29)
         DC    AL2(30)
         DC    AL2(54)
         DC    AL2(55)
SMDWSAL  DC    AL2(31)
         DC    AL2(32)
         DC    AL2(33)
         DC    AL2(34)
         DC    AL2(35)
         DC    AL2(36)
         DC    AL2(37)
         DC    AL2(38)
         DC    AL2(39)
         DC    AL2(40)
         DC    AL2(41)
         DC    AL2(42)
         DC    AL2(43)
         DC    AL2(44)
         DC    AL2(45)
@DATD    DSECT
*                                 /*MACRO LIST FORMS         @G33VPHD*/
IEAVTSDR CSECT
LFESTAE  ESTAE 0,MF=L                  LIST FORM OF ESTAE
LFPOST   POST  ,MF=L                   LIST FORM OF POST
SDRPATCH DC    25F'0'                  IEAVTSDR PATCH AREA
@DATD    DSECT
@ENDDATD EQU   *
IEAVTSDR CSECT
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
R8       EQU   @08
R0       EQU   @00
R1       EQU   @01
R2       EQU   @02
R3       EQU   @03
R5       EQU   @05
R6       EQU   @06
R9       EQU   @09
R10      EQU   @10
R11      EQU   @11
R12      EQU   @12
R13      EQU   @13
R14      EQU   @14
R15      EQU   @15
GPR00F   EQU   @00
GPR01P   EQU   @01
GPR02P   EQU   @02
GPR12F   EQU   @12
GPR13P   EQU   @13
GPR14P   EQU   @14
GPR15P   EQU   @15
R4       EQU   @04
R7       EQU   @07
PSA      EQU   0
FLCRNPSW EQU   PSA
FLCROPSW EQU   PSA+8
FLCICCW2 EQU   PSA+16
FLCCVT   EQU   FLCICCW2
FLCTRACE EQU   PSA+84
PSAEEPSW EQU   PSA+132
PSAESPSW EQU   PSA+136
FLCSVILC EQU   PSAESPSW+1
PSAEPPSW EQU   PSA+140
FLCPIILC EQU   PSAEPPSW+1
FLCPICOD EQU   PSAEPPSW+2
PSAPICOD EQU   FLCPICOD+1
FLCTEA   EQU   PSAEPPSW+4
FLCPER   EQU   PSA+152
FLCMCLA  EQU   PSA+168
FLCIOEL  EQU   FLCMCLA+4
FLCIOA   EQU   FLCMCLA+16
FLCFSA   EQU   FLCMCLA+80
PSALCCAV EQU   PSA+528
PSATOLD  EQU   PSA+540
PSAAOLD  EQU   PSA+548
PSASUPER EQU   PSA+552
PSASUP1  EQU   PSASUPER
PSASUP2  EQU   PSASUPER+1
PSASUP3  EQU   PSASUPER+2
PSASUP4  EQU   PSASUPER+3
PSACLHT  EQU   PSA+640
PSALKSA  EQU   PSA+696
PSAHLHI  EQU   PSA+760
PSALITA  EQU   PSA+764
PSADSSFL EQU   PSA+836
PSADSSF1 EQU   PSADSSFL
PSADSSF3 EQU   PSADSSFL+2
PSADSSF4 EQU   PSADSSFL+3
PSARSVT  EQU   PSA+896
SDUMPPTR EQU   0
ESTAPTR  EQU   0
SDWAPTR  EQU   0
TCBPTR   EQU   0
ASXB     EQU   0
ASXBFTCB EQU   ASXB+4
ASXBSPSA EQU   ASXB+112
ASXBAEQ  EQU   ASXB+168
ASXBSECR EQU   ASXB+199
ASCBSFLG EQU   ASXBSECR
ASXBCASW EQU   ASXB+216
ASXBCRB1 EQU   ASXBCASW
LCCA     EQU   0
LCCAIHRC EQU   LCCA+520
LCCAIHR1 EQU   LCCAIHRC
LCCAIHR2 EQU   LCCAIHRC+1
LCCAIHR3 EQU   LCCAIHRC+2
LCCAIHR4 EQU   LCCAIHRC+3
LCCASPIN EQU   LCCA+524
LCCASPN1 EQU   LCCASPIN
LCCASPN2 EQU   LCCASPIN+1
LCCASPN3 EQU   LCCASPIN+2
LCCASPN4 EQU   LCCASPIN+3
LCCACPUS EQU   LCCA+536
LCCADSF1 EQU   LCCA+540
LCCADSF2 EQU   LCCA+541
LCCASPSA EQU   LCCA+544
LCCACRFL EQU   LCCA+692
LCCACREX EQU   LCCA+693
LCCALKFG EQU   LCCA+694
LCCASRBF EQU   LCCA+720
CVTMAP   EQU   0
CVTDAR   EQU   CVTMAP+72
CVTFLGS1 EQU   CVTDAR
CVTBRET  EQU   CVTMAP+82
CVTQTD00 EQU   CVTMAP+108
CVTDCB   EQU   CVTMAP+116
CVTIOQET EQU   CVTMAP+120
CVTIERLC EQU   CVTMAP+144
CVT0PT01 EQU   CVTMAP+152
CVTHEAD  EQU   CVTMAP+160
CVTSV76C EQU   CVTHEAD
CVTOPTA  EQU   CVTMAP+182
CVTOPTB  EQU   CVTMAP+183
CVTABEND EQU   CVTMAP+200
CVTGTF   EQU   CVTMAP+236
CVTGTFST EQU   CVTGTF
CVTGTFS  EQU   CVTGTFST
CVTSTATE EQU   CVTGTFST
CVTTMODE EQU   CVTGTFST
CVTFORM  EQU   CVTGTFST
CVTAQAVT EQU   CVTMAP+240
CVTTCMFG EQU   CVTAQAVT
CVTVOLM2 EQU   CVTMAP+244
CVTTATA  EQU   CVTVOLM2
CVTTSKS  EQU   CVTTATA
CVTVOLF2 EQU   CVTTSKS
CVTTAT   EQU   CVTTATA+1
CVTATER  EQU   CVTMAP+248
CVTEXT1  EQU   CVTMAP+252
CVTPURG  EQU   CVTMAP+260
CVTQMSG  EQU   CVTMAP+268
CVTDMSR  EQU   CVTMAP+272
CVTRSV37 EQU   CVTDMSR
CVTDMSRF EQU   CVTRSV37
CVTERPV  EQU   CVTMAP+316
CVTINTLA EQU   CVTMAP+320
CVTAPF   EQU   CVTMAP+324
CVTEXT2  EQU   CVTMAP+328
CVTHJES  EQU   CVTMAP+332
CVTPGSIA EQU   CVTMAP+348
CVTA1F1  EQU   CVTMAP+356
CVTSYSK  EQU   CVTMAP+357
CVTVOLM1 EQU   CVTMAP+380
CVTVOLF1 EQU   CVTVOLM1
CVTXTNT1 EQU   0
CVTXTNT2 EQU   0
CVTDSSV  EQU   CVTXTNT2
CVTFLGBT EQU   CVTXTNT2+5
CVTQID   EQU   CVTXTNT2+24
CVTRV400 EQU   CVTXTNT2+52
CVTRV409 EQU   CVTXTNT2+53
CVTATCVT EQU   CVTXTNT2+64
CVTRV429 EQU   CVTXTNT2+84
CVTRV438 EQU   CVTXTNT2+85
CVTRV457 EQU   CVTXTNT2+112
CVTRV466 EQU   CVTXTNT2+113
CVTFIX   EQU   0
CVTRELNO EQU   CVTFIX+252
TCBFIX   EQU   0
TCBFRS   EQU   TCBFIX
TCB      EQU   0
TCBPIE   EQU   TCB+4
TCBPMASK EQU   TCBPIE
TCBCMP   EQU   TCB+16
TCBCMPF  EQU   TCBCMP
TCBCPP   EQU   TCBCMPF
TCBSTCC  EQU   TCBCMPF
TCBCDBL  EQU   TCBCMPF
TCBCWTO  EQU   TCBCMPF
TCBCIND  EQU   TCBCMPF
TCBCMSG  EQU   TCBCMPF
TCBTRN   EQU   TCB+20
TCBABF   EQU   TCBTRN
TCBMSS   EQU   TCB+24
TCBPKF   EQU   TCB+28
TCBFLGS  EQU   TCB+29
TCBFLGS1 EQU   TCBFLGS
TCBFX    EQU   TCBFLGS1
TCBFLGS2 EQU   TCBFLGS+1
TCBFLGS3 EQU   TCBFLGS+2
TCBFLGS4 EQU   TCBFLGS+3
TCBFLGS5 EQU   TCBFLGS+4
TCBABWF  EQU   TCBFLGS5
TCBJPQ   EQU   TCB+44
TCBPURGE EQU   TCBJPQ
TCBGRS   EQU   TCB+48
TCBFSA   EQU   TCB+112
TCBTME   EQU   TCB+120
TCBJSTCB EQU   TCB+124
TCBNTC   EQU   TCB+128
TCBLTC   EQU   TCB+136
TCBTSFLG EQU   TCB+148
TCBTSTSK EQU   TCBTSFLG
TCBSTAB  EQU   TCB+160
TCBNSTAE EQU   TCBSTAB
TCBTCT   EQU   TCB+164
TCBTCTGF EQU   TCBTCT
TCBSCNDY EQU   TCB+172
TCBNDSP  EQU   TCBSCNDY
TCBNDSP1 EQU   TCBNDSP+1
TCBNDSP2 EQU   TCBNDSP+2
TCBNDSP3 EQU   TCBNDSP+3
TCBJSCB  EQU   TCB+180
TCBRECDE EQU   TCBJSCB
TCBEXT1  EQU   TCB+196
TCBBITS  EQU   TCB+200
TCBNDSP4 EQU   TCBBITS
TCBNDSP5 EQU   TCBBITS+1
TCBFLGS6 EQU   TCBBITS+2
TCBFLGS7 EQU   TCBBITS+3
TCBDAR   EQU   TCB+204
TCBDARC  EQU   TCBDAR
TCBEXT2  EQU   TCB+208
TCBTID   EQU   TCB+238
TCBXSCT  EQU   TCB+240
TCBXSCT1 EQU   TCBXSCT
TCBFOE   EQU   TCB+244
TCBESTAE EQU   TCB+264
TCBESTRM EQU   TCBESTAE+1
TCBFBYT1 EQU   TCB+276
TCBFBYT2 EQU   TCB+277
TCBRV124 EQU   TCB+278
TCBRV133 EQU   TCB+279
TCBXTNT2 EQU   0
TCBGTF   EQU   TCBXTNT2
TCBTFLG  EQU   TCBGTF
TCBRV146 EQU   TCBXTNT2+28
TCBRV155 EQU   TCBXTNT2+29
TCBRV164 EQU   TCBXTNT2+30
TCBRV173 EQU   TCBXTNT2+31
RTCT     EQU   0
RTCTPLIB EQU   RTCT+4
RTCTSAP  EQU   RTCTPLIB
RTCTSAP1 EQU   RTCTSAP
RTCTSAP2 EQU   RTCTSAP+1
RTCTSAP3 EQU   RTCTSAP+2
RTCTSUP  EQU   RTCTPLIB+4
RTCTSUP1 EQU   RTCTSUP
RTCTSUP2 EQU   RTCTSUP+1
RTCTSUP3 EQU   RTCTSUP+2
RTCTSYD  EQU   RTCTPLIB+8
RTCTSY01 EQU   RTCTSYD
RTCTSDID EQU   RTCT+18
RTCTSDDS EQU   RTCT+36
RTCTFLG  EQU   RTCTSDDS+3
RTCTSDPL EQU   RTCT+156
RTCTRFLG EQU   RTCT+176
RTCTSDSW EQU   RTCT+180
RTCTSDWK EQU   RTCT+220
RTCTERID EQU   RTCT+224
RTCTOPT  EQU   RTCT+236
RTCTASO  EQU   RTCT+252
RTCTASO1 EQU   RTCTASO
RTCTASO2 EQU   RTCTASO+1
RTCTSDI  EQU   RTCT+254
RTCTSDNA EQU   RTCTSDI
RTCTINDX EQU   RTCTSDI+1
RTCTSDF  EQU   RTCT+264
RTCTSDF1 EQU   RTCTSDF
RTCTSDND EQU   RTCTSDF1
RTCTSDSH EQU   RTCTSDF1
RTCTSDMA EQU   RTCTSDF1
RTCTSDF2 EQU   RTCTSDF+1
RTCTSDTQ EQU   RTCTSDF2
RTCTSDFX EQU   RTCTSDF2
RTCTR2D2 EQU   RTCTSDF+2
RTCTC3PO EQU   RTCTSDF+3
RTCTSDF3 EQU   RTCT+268
RTCTSDAS EQU   RTCTSDF3
RTCTSDF4 EQU   RTCTSDF3+2
RTCTSDAN EQU   RTCTSDF4
RTCTSDEN EQU   RTCTSDF4
RTCTSDDO EQU   RTCTSDF4
RTCTMOPT EQU   0
RTCTMSAO EQU   RTCTMOPT
RTCTSASD EQU   RTCTMSAO
RTCTSAO1 EQU   RTCTSASD
RTCTSAO2 EQU   RTCTSASD+1
RTCTSAPD EQU   RTCTMSAO+2
RTCTSAO3 EQU   RTCTSAPD
RTCTSAO4 EQU   RTCTSAPD+1
RTCTSAMG EQU   RTCTSAO4
RTCTMSUO EQU   RTCTMOPT+4
RTCTSUSD EQU   RTCTMSUO
RTCTSUO1 EQU   RTCTSUSD
RTCTSUO2 EQU   RTCTSUSD+1
RTCTSUPD EQU   RTCTMSUO+2
RTCTSUO3 EQU   RTCTSUPD
RTCTSUO4 EQU   RTCTSUPD+1
RTCTSUMG EQU   RTCTSUO4
RTCTMSYO EQU   RTCTMOPT+8
RTCTSD01 EQU   RTCTMSYO
RTCTSD04 EQU   RTCTMSYO+3
RTCTSMMG EQU   RTCTSD04
RTCTMSDO EQU   RTCTMOPT+12
RTCTSDOD EQU   RTCTMSDO
RTCTSDO1 EQU   RTCTSDOD
RTCTSDO2 EQU   RTCTSDOD+1
RTCTSDO3 EQU   RTCTMSDO+2
RTCTSDO4 EQU   RTCTMSDO+3
RTCTSDMG EQU   RTCTSDO4
SDUMP    EQU   0
SDUFLAG0 EQU   SDUMP
SDUECB   EQU   SDUFLAG0
SDUFLAG1 EQU   SDUMP+1
SDUSDAT1 EQU   SDUMP+2
SDUSDAT2 EQU   SDUMP+3
SDUECBAD EQU   SDUMP+16
SDUMASID EQU   SDUMP+20
SDUCASID EQU   SDUMASID
SDWORK   EQU   0
SDCNTRL  EQU   SDWORK
SVCDOPTS EQU   SDCNTRL+100
SVCDOPT1 EQU   SVCDOPTS
SVCDOPT2 EQU   SVCDOPTS+1
FLAGSONE EQU   SDCNTRL+102
ERRORWK  EQU   SDCNTRL+104
CVRT11   EQU   SDCNTRL+368
CVRT1    EQU   CVRT11+4
CVRT2    EQU   SDCNTRL+376
SDCVRT4  EQU   CVRT2+2
SVCNAME  EQU   SDCNTRL+392
SVCNM1T5 EQU   SVCNAME
SVCNM6T8 EQU   SVCNAME+5
SVCNM7T8 EQU   SVCNM6T8+1
CCWCHAIN EQU   SDCNTRL+400
CCW1     EQU   CCWCHAIN
FLAGS1   EQU   CCW1+4
CCW2     EQU   CCWCHAIN+8
FLAGS2   EQU   CCW2+4
CCW3     EQU   CCWCHAIN+16
FLAGS3   EQU   CCW3+4
SDOUTBUF EQU   SDWORK+432
RCDCCHH  EQU   SDOUTBUF
ASCB     EQU   0
ASCBSUPC EQU   ASCB+16
ASCBASID EQU   ASCB+36
ASCBRSM  EQU   ASCB+52
ASCBRSMF EQU   ASCBRSM
ASCBDUMP EQU   ASCB+96
ASCBFW1  EQU   ASCB+100
ASCBRCTF EQU   ASCBFW1+2
ASCBFLG1 EQU   ASCBFW1+3
ASCBASXB EQU   ASCB+108
ASCBDSP1 EQU   ASCB+114
ASCBFLG2 EQU   ASCB+115
ASCBLKGP EQU   ASCB+128
ASCBSRQ  EQU   ASCB+180
ASCBSRQ1 EQU   ASCBSRQ
ASCBSRQ2 EQU   ASCBSRQ+1
ASCBSRQ3 EQU   ASCBSRQ+2
ASCBSRQ4 EQU   ASCBSRQ+3
SDWA     EQU   0
SDWAPARM EQU   SDWA
SDWAFIOB EQU   SDWA+4
SDWAABCC EQU   SDWAFIOB
SDWACMPF EQU   SDWAABCC
SDWACTL1 EQU   SDWA+8
SDWACMKA EQU   SDWACTL1
SDWAMWPA EQU   SDWACTL1+1
SDWAPMKA EQU   SDWACTL1+4
SDWACTL2 EQU   SDWA+16
SDWACMKP EQU   SDWACTL2
SDWAMWPP EQU   SDWACTL2+1
SDWAPMKP EQU   SDWACTL2+4
SDWAGRSV EQU   SDWA+24
SDWANAME EQU   SDWA+88
SDWAEC1  EQU   SDWA+104
SDWAEMK1 EQU   SDWAEC1
SDWAMWP1 EQU   SDWAEC1+1
SDWAINT1 EQU   SDWAEC1+2
SDWANXT1 EQU   SDWAEC1+4
SDWAAEC1 EQU   SDWA+112
SDWAILC1 EQU   SDWAAEC1+1
SDWAINC1 EQU   SDWAAEC1+2
SDWAICD1 EQU   SDWAINC1+1
SDWAEC2  EQU   SDWA+120
SDWAEMK2 EQU   SDWAEC2
SDWAMWP2 EQU   SDWAEC2+1
SDWAINT2 EQU   SDWAEC2+2
SDWANXT2 EQU   SDWAEC2+4
SDWAAEC2 EQU   SDWA+128
SDWAILC2 EQU   SDWAAEC2+1
SDWAINC2 EQU   SDWAAEC2+2
SDWAICD2 EQU   SDWAINC2+1
SDWASRSV EQU   SDWA+136
SDWASR05 EQU   SDWASRSV+20
SDWASR08 EQU   SDWASRSV+32
SDWASR13 EQU   SDWASRSV+52
SDWAIDNT EQU   SDWA+200
SDWAMCH  EQU   SDWA+204
SDWASTCK EQU   SDWAMCH
SDWAMCHI EQU   SDWAMCH+8
SDWAMCHS EQU   SDWAMCHI
SDWAMCHD EQU   SDWAMCHI+1
SDWARSR1 EQU   SDWAMCH+12
SDWARSR2 EQU   SDWAMCH+13
SDWAFLGS EQU   SDWA+232
SDWAERRA EQU   SDWAFLGS
SDWAERRB EQU   SDWAFLGS+1
SDWAERRC EQU   SDWAFLGS+2
SDWAERRD EQU   SDWAFLGS+3
SDWACLUP EQU   SDWAERRD
SDWASTAE EQU   SDWAERRD
SDWAIOFS EQU   SDWA+238
SDWARTYA EQU   SDWA+240
SDWACPUA EQU   SDWA+248
SDWAPARQ EQU   SDWA+252
SDWARCDE EQU   SDWAPARQ
SDWAACF2 EQU   SDWAPARQ+1
SDWARCRD EQU   SDWAACF2
SDWAUPRG EQU   SDWAACF2
SDWAFREE EQU   SDWAACF2
SDWAACF3 EQU   SDWAPARQ+2
SDWAACF4 EQU   SDWAPARQ+3
SDWAFLLK EQU   SDWAACF4
SDWALKWA EQU   SDWA+256
SDWALKWS EQU   SDWALKWA
SDWARECP EQU   SDWA+292
SDWAMODN EQU   SDWARECP
SDWACSCT EQU   SDWARECP+8
SDWAREXN EQU   SDWARECP+16
SDWASNPA EQU   SDWA+320
SDWADUMP EQU   SDWASNPA
SDWADPFS EQU   SDWADUMP+1
SDWADDAT EQU   SDWASNPA+4
SDWASDAT EQU   SDWADDAT
SDWASDA0 EQU   SDWASDAT
SDWASDA1 EQU   SDWASDAT+1
SDWAPDAT EQU   SDWADDAT+2
SDWADPSA EQU   SDWA+328
SDWADPSL EQU   SDWADPSA
SDWARA   EQU   SDWA+400
SDWADPVA EQU   SDWARA+2
ASVT     EQU   0
ASVTFRST EQU   ASVT+524
ASVTENTY EQU   ASVT+528
ASVTAVAL EQU   ASVTENTY
WSAL     EQU   0
WSALSDMP EQU   WSAL+12
WSAG     EQU   0
WSAC     EQU   0
SCVTSECT EQU   0
SCVTSTAT EQU   SCVTSECT+148
ESTA     EQU   0
ESTAEXT  EQU   ESTA
ESTAFLG1 EQU   ESTAEXT
ESTAIO   EQU   ESTAFLG1
ESTAFGRS EQU   ESTA+12
ESTAFLG2 EQU   ESTAFGRS
RMPL     EQU   0
RMPLFLG1 EQU   RMPL
RMPLASID EQU   RMPL+2
RMPLASCB EQU   RMPL+4
RMPLRMWA EQU   RMPL+16
SMWKRSCB EQU   0
SMWKFLGA EQU   SMWKRSCB
SMWKEVRY EQU   SMWKFLGA
SMWKFRHD EQU   SMWKRSCB+2
SMWKFRPT EQU   SMWKRSCB+4
SMWKPRSR EQU   SMWKRSCB+12
SMWKRSFM EQU   SMWKRSCB+16
SMDLR    EQU   0
SMDLRHDR EQU   SMDLR
SMWK     EQU   0
SMWKFLGS EQU   SMWK+4
SMWKFLG1 EQU   SMWKFLGS
SMWKRBUF EQU   SMWKFLG1
SMWKSAV1 EQU   SMWK+80
SMWKPSW  EQU   SMWK+168
SMWKRSM  EQU   SMWK+196
SMWKNFAV EQU   SMWK+616
SMWKRSIX EQU   SMWK+618
SMWKFRUS EQU   SMWK+620
SMWKREGS EQU   SMWK+676
SMWKTQEA EQU   SMWK+824
ADDRRMPL EQU   0
XMPOST   EQU   0
STATUS   EQU   0
TQEDEQ   EQU   0
IEAVPRSR EQU   0
SDRMWORK EQU   0
ERRBASE  EQU   SDRMWORK
ERRSAVE  EQU   SDRMWORK+4
ERRRETRY EQU   SDRMWORK+8
ERRRMPLA EQU   SDRMWORK+12
SCHFRR6W EQU   0
SCHFRRF1 EQU   SCHFRR6W
SCHFRRF2 EQU   SCHFRR6W+1
SCHFRRRT EQU   SCHFRR6W+20
I001C    EQU   0
I008P    EQU   0
I015F    EQU   0
I015P    EQU   0
I031F    EQU   0
I031P    EQU   0
I256C    EQU   0
ASCBPTR  EQU   PSAAOLD
SCVTSPTR EQU   CVTABEND
ASXBPTR  EQU   ASCBASXB
LCCAPTR  EQU   PSALCCAV
CVTS01   EQU   CVTPGSIA
CVTLPDIA EQU   CVTS01+12
CVTDIRST EQU   CVTLPDIA
CVTSLIDA EQU   CVTS01+24
CVTCTLFG EQU   CVTS01+50
CVTGTRCE EQU   CVTCTLFG
CVTSDTRC EQU   CVTCTLFG
CVTTRACE EQU   CVTS01+52
CVTOPTE  EQU   CVTS01+188
CVTASVT  EQU   CVTS01+208
CVTRTMCT EQU   CVTS01+224
CVTSDBF  EQU   CVTS01+240
CVTSPSA  EQU   CVTS01+336
CVTRV210 EQU   CVTS01+424
CVTRV219 EQU   CVTS01+425
CVTRV228 EQU   CVTS01+426
CVTRV237 EQU   CVTS01+427
CVTMFRTR EQU   CVTS01+452
CVTRV262 EQU   CVTS01+468
CVTRV271 EQU   CVTS01+469
CVTRV280 EQU   CVTS01+470
CVTRV289 EQU   CVTS01+471
CVTGSDA  EQU   CVTS01+600
ASVTPTR  EQU   CVTASVT
CVTPTR   EQU   FLCCVT
PSARSVTE EQU   PSARSVT
TRTCVTWD EQU   CVTTRACE
POSTLIST EQU   ERRRETRY
ESTAELST EQU   SDRMWORK
FLC      EQU   PSA
*                                      START UNREFERENCED COMPONENTS
PSARSAV  EQU   PSARSVTE+60
PSARSTK  EQU   PSARSVTE+56
PSAESAV3 EQU   PSARSVTE+52
PSAESTK3 EQU   PSARSVTE+48
PSAESAV2 EQU   PSARSVTE+44
PSAESTK2 EQU   PSARSVTE+40
PSAESAV1 EQU   PSARSVTE+36
PSAESTK1 EQU   PSARSVTE+32
PSAPSAV  EQU   PSARSVTE+28
PSAPSTK  EQU   PSARSVTE+24
PSAMSAV  EQU   PSARSVTE+20
PSAMSTK  EQU   PSARSVTE+16
PSASSAV  EQU   PSARSVTE+12
PSASSTK  EQU   PSARSVTE+8
PSANSTK  EQU   PSARSVTE+4
PSACSTK  EQU   PSARSVTE
CVTRV628 EQU   CVTS01+728
CVTRV627 EQU   CVTS01+724
CVTRV626 EQU   CVTS01+720
CVTRV625 EQU   CVTS01+716
CVTRV624 EQU   CVTS01+712
CVTRV623 EQU   CVTS01+708
CVTRV622 EQU   CVTS01+704
CVTRV621 EQU   CVTS01+700
CVTIHASU EQU   CVTS01+696
CVTSUSP  EQU   CVTS01+692
CVTT6SVC EQU   CVTS01+688
CVTCDAL  EQU   CVTS01+684
CVTTCTL  EQU   CVTS01+680
CVTRSUME EQU   CVTS01+676
CVTJTERM EQU   CVTS01+672
CVTASMRM EQU   CVTS01+668
CVTTCASP EQU   CVTS01+664
CVT0PT03 EQU   CVTS01+660
CVT0PT0E EQU   CVTS01+656
CVTRV609 EQU   CVTS01+652
CVTCGK   EQU   CVTS01+648
CVTRAC   EQU   CVTS01+644
CVTHSM   EQU   CVTS01+640
CVTRV605 EQU   CVTS01+636
CVTRV604 EQU   CVTS01+632
CVTEFF02 EQU   CVTS01+628
CVTCBBR  EQU   CVTS01+624
CVTSSCR  EQU   CVTS01+620
CVTEVENT EQU   CVTS01+616
CVTCRCA  EQU   CVTS01+612
CVTTPIO  EQU   CVTS01+608
CVTADV   EQU   CVTS01+604
CVTGSDAB EQU   CVTGSDA
CVTQV3   EQU   CVTS01+596
CVTQV2   EQU   CVTS01+592
CVTQV1   EQU   CVTS01+588
CVTRPT   EQU   CVTS01+584
CVTSSRB  EQU   CVTS01+580
CVTCSDRL EQU   CVTS01+576
CVTEXP1  EQU   CVTS01+572
CVTRMPMT EQU   CVTS01+568
CVTRMPTT EQU   CVTS01+564
CVTVPSA  EQU   CVTS01+560
CVTVSTOP EQU   CVTS01+556
CVTGTFR8 EQU   CVTS01+552
CVTQUIT  EQU   CVTS01+548
CVTVACR  EQU   CVTS01+544
CVTWTCB  EQU   CVTS01+540
CVTSTPRS EQU   CVTS01+536
CVT0PT02 EQU   CVTS01+532
CVTDARCM EQU   CVTS01+528
CVTIRECM EQU   CVTS01+524
CVTJRECM EQU   CVTS01+520
CVTVEMS0 EQU   CVTS01+516
CVTSPFRR EQU   CVTS01+512
CVTRLSTG EQU   CVTS01+508
CVT0TC0A EQU   CVTS01+504
CVTGMBR  EQU   CVTS01+500
CVTLFRM  EQU   CVTS01+496
CVTRMBR  EQU   CVTS01+492
CVTVIOP  EQU   CVTS01+488
CVTRV307 EQU   CVTS01+486
CVTRV306 EQU   CVTS01+484
CVTRV305 EQU   CVTS01+482
CVTRV304 EQU   CVTS01+480
CVTRV303 EQU   CVTS01+478
CVTRV302 EQU   CVTS01+476
CVTTRCA  EQU   CVTS01+472
CVTRV297 EQU   CVTRV289
CVTRV296 EQU   CVTRV289
CVTRV295 EQU   CVTRV289
CVTRV294 EQU   CVTRV289
CVTRV293 EQU   CVTRV289
CVTRV292 EQU   CVTRV289
CVTRV291 EQU   CVTRV289
CVTRV290 EQU   CVTRV289
CVTRV288 EQU   CVTRV280
CVTRV287 EQU   CVTRV280
CVTRV286 EQU   CVTRV280
CVTRV285 EQU   CVTRV280
CVTRV284 EQU   CVTRV280
CVTRV283 EQU   CVTRV280
CVTRV282 EQU   CVTRV280
CVTRV281 EQU   CVTRV280
CVTRV279 EQU   CVTRV271
CVTRV278 EQU   CVTRV271
CVTRV277 EQU   CVTRV271
CVTRV276 EQU   CVTRV271
CVTRV275 EQU   CVTRV271
CVTRV274 EQU   CVTRV271
CVTRV273 EQU   CVTRV271
CVTRV272 EQU   CVTRV271
CVTRV270 EQU   CVTRV262
CVTRV269 EQU   CVTRV262
CVTRV268 EQU   CVTRV262
CVTRV267 EQU   CVTRV262
CVTRV266 EQU   CVTRV262
CVTRV265 EQU   CVTRV262
CVTRV264 EQU   CVTRV262
CVTRV263 EQU   CVTRV262
CVTVFP   EQU   CVTS01+464
CVTVSI   EQU   CVTS01+460
CVTVPSIB EQU   CVTS01+456
CVTMFACT EQU   CVTMFRTR
CVTMFCTL EQU   CVTS01+448
CVTPVBP  EQU   CVTS01+444
CVTPWI   EQU   CVTS01+440
CVTRV254 EQU   CVTS01+438
CVTRV253 EQU   CVTS01+436
CVTRV252 EQU   CVTS01+434
CVTRV251 EQU   CVTS01+433
CVTRV250 EQU   CVTS01+432
CVTRV249 EQU   CVTS01+431
CVTRV248 EQU   CVTS01+430
CVTRV247 EQU   CVTS01+429
CVTRV246 EQU   CVTS01+428
CVTRV245 EQU   CVTRV237
CVTRV244 EQU   CVTRV237
CVTRV243 EQU   CVTRV237
CVTRV242 EQU   CVTRV237
CVTRV241 EQU   CVTRV237
CVTRV240 EQU   CVTRV237
CVTRV239 EQU   CVTRV237
CVTRV238 EQU   CVTRV237
CVTRV236 EQU   CVTRV228
CVTRV235 EQU   CVTRV228
CVTRV234 EQU   CVTRV228
CVTRV233 EQU   CVTRV228
CVTRV232 EQU   CVTRV228
CVTRV231 EQU   CVTRV228
CVTRV230 EQU   CVTRV228
CVTRV229 EQU   CVTRV228
CVTRV227 EQU   CVTRV219
CVTRV226 EQU   CVTRV219
CVTRV225 EQU   CVTRV219
CVTRV224 EQU   CVTRV219
CVTRV223 EQU   CVTRV219
CVTRV222 EQU   CVTRV219
CVTRV221 EQU   CVTRV219
CVTRV220 EQU   CVTRV219
CVTRV218 EQU   CVTRV210
CVTRV217 EQU   CVTRV210
CVTRV216 EQU   CVTRV210
CVTRV215 EQU   CVTRV210
CVTRV214 EQU   CVTRV210
CVTRV213 EQU   CVTRV210
CVTRV212 EQU   CVTRV210
CVTRV211 EQU   CVTRV210
CVTLCCAT EQU   CVTS01+420
CVTPCCAT EQU   CVTS01+416
CVTIPCRP EQU   CVTS01+412
CVTIPCRI EQU   CVTS01+408
CVTIPCDS EQU   CVTS01+404
CVTAIDVT EQU   CVTS01+400
CVTSSAP  EQU   CVTS01+396
CVTEHCIR EQU   CVTS01+392
CVTEHDEF EQU   CVTS01+388
CVTDAIR  EQU   CVTS01+384
CVTPERFM EQU   CVTS01+380
CVT044R2 EQU   CVTS01+376
CVTFETCH EQU   CVTS01+372
CVTRSTWD EQU   CVTS01+368
CVTSPOST EQU   CVTS01+364
CVTIOBP  EQU   CVTS01+360
CVTASMVT EQU   CVTS01+356
CVTRECRQ EQU   CVTS01+352
CVTWSAC  EQU   CVTS01+348
CVTRV149 EQU   CVTS01+344
CVTWSAL  EQU   CVTS01+340
CVTGLMN  EQU   CVTS01+332
CVTVEAC0 EQU   CVTS01+328
CVT062R1 EQU   CVTS01+324
CVTRPOST EQU   CVTS01+320
CVTDQIQE EQU   CVTS01+316
CVTCSD   EQU   CVTS01+312
CVTLKRMA EQU   CVTS01+308
CVTRSPIE EQU   CVTS01+304
CVTRENQ  EQU   CVTS01+300
CVTLQCB  EQU   CVTS01+296
CVTFQCB  EQU   CVTS01+292
CVTQCS01 EQU   CVTS01+288
CVTAPFT  EQU   CVTS01+284
CVTPARRL EQU   CVTS01+280
CVTVWAIT EQU   CVTS01+276
CVTGSPL  EQU   CVTS01+272
CVTLSMQ  EQU   CVTS01+268
CVTGSMQ  EQU   CVTS01+264
CVTEXPRO EQU   CVTS01+260
CVTOPCTP EQU   CVTS01+256
CVTSIC   EQU   CVTS01+252
CVTTPIOS EQU   CVTS01+248
CVTRTMS  EQU   CVTS01+244
CVTSCBP  EQU   CVTS01+236
CVTSDMP  EQU   CVTS01+232
CVTSV60  EQU   CVTS01+228
CVTASCBL EQU   CVTS01+220
CVTASCBH EQU   CVTS01+216
CVTGDA   EQU   CVTS01+212
CVTVVMDI EQU   CVTS01+204
CVTAQTOP EQU   CVTS01+200
CVTIOSCS EQU   CVTS01+196
CVTSDRM  EQU   CVTS01+192
CVTSTXU  EQU   CVTS01+184
CVTQUIS  EQU   CVTS01+180
CVTPARS  EQU   CVTS01+176
CVTS1EE  EQU   CVTS01+172
CVTFRAS  EQU   CVTS01+168
CVTQSAS  EQU   CVTS01+164
CVTCRAS  EQU   CVTS01+160
CVTCRMN  EQU   CVTS01+156
CVTDELCP EQU   CVTS01+152
CVTFRECL EQU   CVTS01+148
CVTGETCL EQU   CVTS01+144
CVTBLDCP EQU   CVTS01+140
CVTAUTHL EQU   CVTS01+136
CVTSCAN  EQU   CVTS01+132
CVTRV144 EQU   CVTS01+130
CVTMAXMP EQU   CVTS01+128
CVTSTCK  EQU   CVTS01+124
CVTRV139 EQU   CVTS01+123
CVTDSSAC EQU   CVTS01+122
CVTRV513 EQU   CVTS01+121
CVTIOSPL EQU   CVTS01+120
CVTPTGT  EQU   CVTS01+116
CVTCSPIE EQU   CVTS01+112
CVTSMFEX EQU   CVTS01+108
CVTOLT0A EQU   CVTS01+104
CVTSRBRT EQU   CVTS01+100
CVTPUTL  EQU   CVTS01+96
CVTASCRL EQU   CVTS01+92
CVTASCRF EQU   CVTS01+88
CVTRV326 EQU   CVTS01+84
CVTRV325 EQU   CVTS01+80
CVTRV324 EQU   CVTS01+76
CVT0VL01 EQU   CVTS01+72
CVTSHRVM EQU   CVTS01+68
CVTRV332 EQU   CVTS01+64
CVTTAS   EQU   CVTS01+60
CVTRSCN  EQU   CVTS01+56
CVTTRAC2 EQU   CVTS01+54
CVTAPG   EQU   CVTS01+51
CVTNOMP  EQU   CVTCTLFG
CVTRSV79 EQU   CVTCTLFG
CVTDSTAT EQU   CVTCTLFG
CVTRSV78 EQU   CVTCTLFG
CVTRV333 EQU   CVTCTLFG
CVTRV323 EQU   CVTCTLFG
CVTSPVLK EQU   CVTS01+49
CVTRSV77 EQU   CVTS01+48
CVTRV331 EQU   CVTS01+44
CVTRV330 EQU   CVTS01+40
CVTRV329 EQU   CVTS01+36
CVTRV328 EQU   CVTS01+32
CVTRV322 EQU   CVTS01+28
CVTSLID  EQU   CVTSLIDA+1
CVTSYLK  EQU   CVTSLIDA
CVTRV321 EQU   CVTS01+20
CVTRV320 EQU   CVTS01+16
CVTLPDIR EQU   CVTLPDIA+1
CVTRSV69 EQU   CVTDIRST
CVTRSV68 EQU   CVTDIRST
CVTRSV67 EQU   CVTDIRST
CVTRSV66 EQU   CVTDIRST
CVTRSV65 EQU   CVTDIRST
CVTRSV64 EQU   CVTDIRST
CVTRSV63 EQU   CVTDIRST
CVTDICOM EQU   CVTDIRST
CVTPVTP  EQU   CVTS01+8
CVTLPDSR EQU   CVTS01+4
CVTGETL  EQU   CVTS01
SCHFRRPL EQU   SCHFRR6W+16
SCHFRRRA EQU   SCHFRR6W+12
SCHFRRSA EQU   SCHFRR6W+8
SCHFRRBR EQU   SCHFRR6W+4
@NM00144 EQU   SCHFRR6W+2
SCHFRRBS EQU   SCHFRRF2
SCHFRRDL EQU   SCHFRRF2
SCHFRRSL EQU   SCHFRRF2
SCHFRRDT EQU   SCHFRRF1
SCHFRRDI EQU   SCHFRRF1
SCHFRRND EQU   SCHFRRF1
SCHFRRRP EQU   SCHFRRF1
SCHFRROS EQU   SCHFRRF1
SCHFRRNS EQU   SCHFRRF1
SCHFRREN EQU   SCHFRRF1
SCHFRRSD EQU   SCHFRRF1
@NM00143 EQU   SDRMWORK+16
@NM00142 EQU   SMWK+978
SMWKNSTB EQU   SMWK+976
SMWKNFFD EQU   SMWK+974
SMWKNTDQ EQU   SMWK+972
SMWKNTDI EQU   SMWK+970
SMWKNFUS EQU   SMWK+968
SMWKNFAQ EQU   SMWK+966
SMWKNFRQ EQU   SMWK+964
SMWKPSSE EQU   SMWK+960
SMWKTQE  EQU   SMWK+832
@NM00141 EQU   SMWK+828
SMWKSVLN EQU   SMWK+820
SMWKNDIE EQU   SMWK+818
SMWKNFRE EQU   SMWK+816
SMWKNFRI EQU   SMWK+814
SMWKALEN EQU   SMWK+812
SMWKSCBF EQU   SMWK+810
SMWKREGN EQU   SMWK+808
SMWKIDX2 EQU   SMWK+806
SMWKIDX1 EQU   SMWK+804
SMWKSREG EQU   SMWKREGS
SMWKHEAD EQU   SMWK+656
SMWKSMVL EQU   SMWK+652
SMWKSMMV EQU   SMWK+648
SMWKSMBF EQU   SMWK+644
SMWKSMLS EQU   SMWK+640
SMWKSMRG EQU   SMWK+636
SMWKSMDT EQU   SMWK+632
SMWKSDMP EQU   SMWK+628
SMWKSMLK EQU   SMWK+624
@NM00140 EQU   SMWK+622
SMWKRFAD EQU   SMWK+612
SMWKCPUS EQU   SMWK+192
SMWKPEND EQU   SMWK+188
SMWKSAVA EQU   SMWK+184
SMWKENDA EQU   SMWK+180
SMWKVADR EQU   SMWK+176
SMWKPSWA EQU   SMWKPSW+4
@NM00139 EQU   SMWKPSW+2
SMWKPSWK EQU   SMWKPSW+1
SMWKPSWS EQU   SMWKPSW
SMWKPFXE EQU   SMWK+164
SMWKPFXB EQU   SMWK+160
SMWKSSDE EQU   SMWK+156
SMWKENTY EQU   SMWK+152
SMWKSAVE EQU   SMWK+8
SMWKFLG4 EQU   SMWKFLGS+3
SMWKFLG3 EQU   SMWKFLGS+2
SMWKFLG2 EQU   SMWKFLGS+1
@NM00138 EQU   SMWKFLG1
@NM00137 EQU   SMWKFLG1
SMWKSTBK EQU   SMWKFLG1
SMWKSLCL EQU   SMWKFLG1
SMWKRSNM EQU   SMWKFLG1
SMWKRBFL EQU   SMWKFLG1
SMWKSLCK EQU   SMWKFLG1
SMWKNAME EQU   SMWK
SMDLRDAT EQU   SMDLR+20
@NM00136 EQU   SMDLRHDR+17
SMDLRMSG EQU   SMDLRHDR+16
SMDLRPL  EQU   SMDLRHDR+12
SMDLRADR EQU   SMDLRHDR+8
SMDLRLEN EQU   SMDLRHDR+4
@NM00135 EQU   SMDLRHDR+2
SMDLRID  EQU   SMDLRHDR
SMWKFRMA EQU   SMWKRSFM
SMWKTSDS EQU   SMWKRSCB+8
SMWKFLGB EQU   SMWKRSCB+1
@NM00134 EQU   SMWKFLGA
RMPLDCBL EQU   RMPL+20
RMPLRBPA EQU   RMPL+12
RMPLTCBA EQU   RMPL+8
RMPLFLG2 EQU   RMPL+1
@NM00133 EQU   RMPLFLG1
RMPLWT1M EQU   RMPLFLG1
RMPLJST  EQU   RMPLFLG1
RMPLRCOV EQU   RMPLFLG1
RMPLIPUF EQU   RMPLFLG1
RMPLRBPP EQU   RMPLFLG1
RMPLTERM EQU   RMPLFLG1
RMPLTYPE EQU   RMPLFLG1
ESTARSVI EQU   ESTAFGRS+1
@NM00132 EQU   ESTAFLG2
ESTABRNT EQU   ESTAFLG2
@NM00131 EQU   ESTAFLG2
ESTAEREC EQU   ESTAFLG2
ESTATERM EQU   ESTAFLG2
@NM00130 EQU   ESTAFLG2
ESTAOWNR EQU   ESTA+8
ESTAPARM EQU   ESTA+4
ESTAEXIT EQU   ESTAEXT+1
ESTAHALT EQU   ESTAIO
ESTANOIO EQU   ESTAIO
ESTASYNC EQU   ESTAFLG1
@NM00129 EQU   ESTAFLG1
ESTAESTA EQU   ESTAFLG1
@NM00128 EQU   ESTAFLG1
ESTASTAR EQU   ESTAFLG1
ESTASTAI EQU   ESTAFLG1
@NM00127 EQU   SCVTSECT+180
@NM00126 EQU   SCVTSECT+176
SCVTPIQE EQU   SCVTSECT+172
@NM00125 EQU   SCVTSECT+168
SCVTPTRM EQU   SCVTSECT+164
@NM00124 EQU   SCVTSECT+160
@NM00123 EQU   SCVTSECT+156
SCVTQCBR EQU   SCVTSECT+152
@NM00122 EQU   SCVTSECT+144
SCVTTQE  EQU   SCVTSECT+140
@NM00121 EQU   SCVTSECT+136
SCVTSVCT EQU   SCVTSECT+132
@NM00120 EQU   SCVTSECT+128
@NM00119 EQU   SCVTSECT+124
SCVTRXLQ EQU   SCVTSECT+120
@NM00118 EQU   SCVTSECT+116
SCVTCTCB EQU   SCVTSECT+112
@NM00117 EQU   SCVTSECT+108
@NM00116 EQU   SCVTSECT+104
@NM00115 EQU   SCVTSECT+100
@NM00114 EQU   SCVTSECT+96
SCVTCOMM EQU   SCVTSECT+92
@NM00113 EQU   SCVTSECT+88
@NM00112 EQU   SCVTSECT+84
@NM00111 EQU   SCVTSECT+80
@NM00110 EQU   SCVTSECT+76
@NM00109 EQU   SCVTSECT+72
SCVTGMBR EQU   SCVTSECT+68
SCVTRPTR EQU   SCVTSECT+64
SCVTHSKP EQU   SCVTSECT+60
@NM00108 EQU   SCVTSECT+56
@NM00107 EQU   SCVTSECT+52
SCVTLFRM EQU   SCVTSECT+48
SCVTCDCL EQU   SCVTSECT+44
@NM00106 EQU   SCVTSECT+40
SCVTRACE EQU   SCVTSECT+36
@NM00105 EQU   SCVTSECT+32
SCVTRMBR EQU   SCVTSECT+28
@NM00104 EQU   SCVTSECT+24
@NM00103 EQU   SCVTSECT+20
@NM00102 EQU   SCVTSECT+16
@NM00101 EQU   SCVTSECT+14
SCVTBR14 EQU   SCVTSECT+12
SCVTSPET EQU   SCVTSECT+8
SCVTPGWR EQU   SCVTSECT+4
SCVTPGTM EQU   SCVTSECT
WSACASMS EQU   WSAC+60
WSACASMD EQU   WSAC+56
WSACCCH  EQU   WSAC+52
WSACRRSA EQU   WSAC+48
WSACREST EQU   WSAC+44
WSACRSTI EQU   WSAC+40
WSACABTM EQU   WSAC+36
WSACMF1  EQU   WSAC+32
WSACEDS0 EQU   WSAC+28
WSACIOS  EQU   WSAC+24
WSACRTMK EQU   WSAC+20
WSACACR  EQU   WSAC+16
WSACTIME EQU   WSAC+12
WSACOPTM EQU   WSAC+8
WSACGTF  EQU   WSAC+4
WSACCWSA EQU   WSAC
WSAGSCHE EQU   WSAG+40
WSAGREST EQU   WSAG+36
WSAGNQDQ EQU   WSAG+32
WSAGMEMT EQU   WSAG+28
WSAGOPTM EQU   WSAG+24
WSAGSTAT EQU   WSAG+20
WSAGEMS0 EQU   WSAG+16
WSAGSSRS EQU   WSAG+12
WSAGRSM  EQU   WSAG+8
WSAGGMFM EQU   WSAG+4
WSAGPGIO EQU   WSAG
WSALACHP EQU   WSAL+56
WSALRSM  EQU   WSAL+52
WSALEVNT EQU   WSAL+48
WSALSTAE EQU   WSAL+44
WSALSTAT EQU   WSAL+40
WSALWAIT EQU   WSAL+36
WSALPOST EQU   WSAL+32
WSALEXIT EQU   WSAL+28
WSALS2EE EQU   WSAL+24
WSALCIRB EQU   WSAL+20
WSALABTM EQU   WSAL+16
WSALRTM2 EQU   WSAL+8
WSALVALC EQU   WSAL+4
WSALCWSA EQU   WSAL
ASVTEND  EQU   ASVT+528
ASVTAVAI EQU   ASVTFRST
ASVTRS00 EQU   ASVT+520
ASVTMAXU EQU   ASVT+516
ASVTASVT EQU   ASVT+512
ASVTBEGN EQU   ASVT+512
@NM00100 EQU   ASVT
@NM00099 EQU   SDWA+512
SDWAVRA  EQU   SDWARA+4
SDWAURAL EQU   SDWARA+3
@NM00098 EQU   SDWADPVA
SDWAEBC  EQU   SDWADPVA
SDWAHEX  EQU   SDWADPVA
SDWAVRAL EQU   SDWARA
SDWAERTM EQU   SDWA+396
SDWACOMP EQU   SDWA+392
SDWARCPL EQU   SDWA+364
@NM00097 EQU   SDWADPSA+32
SDWATO4  EQU   SDWADPSL+28
SDWAFRM4 EQU   SDWADPSL+24
SDWATO3  EQU   SDWADPSL+20
SDWAFRM3 EQU   SDWADPSL+16
SDWATO2  EQU   SDWADPSL+12
SDWAFRM2 EQU   SDWADPSL+8
SDWATO1  EQU   SDWADPSL+4
SDWAFRM1 EQU   SDWADPSL
@NM00096 EQU   SDWADDAT+3
@NM00095 EQU   SDWAPDAT
SDWAUSPL EQU   SDWAPDAT
SDWADPSW EQU   SDWAPDAT
SDWATJPA EQU   SDWAPDAT
SDWATLPA EQU   SDWAPDAT
SDWADREG EQU   SDWAPDAT
SDWADSAH EQU   SDWAPDAT
SDWADSAS EQU   SDWAPDAT
@NM00094 EQU   SDWASDA1
SDWAERR  EQU   SDWASDA1
SDWAIO   EQU   SDWASDA1
SDWADM   EQU   SDWASDA0
SDWAQQS  EQU   SDWASDA0
SDWACBS  EQU   SDWASDA0
SDWAGTF  EQU   SDWASDA0
SDWASWA  EQU   SDWASDA0
SDWALSQA EQU   SDWASDA0
SDWASQA  EQU   SDWASDA0
SDWANUC  EQU   SDWASDA0
@NM00093 EQU   SDWADUMP+2
@NM00092 EQU   SDWADPFS
SDWASLST EQU   SDWADPFS
@NM00091 EQU   SDWADPFS
SDWAENSN EQU   SDWADPFS
SDWADLST EQU   SDWADPFS
SDWADPT  EQU   SDWADPFS
SDWADPID EQU   SDWADUMP
SDWADPLA EQU   SDWA+316
SDWASEQ# EQU   SDWA+290
SDWAASID EQU   SDWA+288
SDWATALW EQU   SDWALKWS+28
SDWATDLW EQU   SDWALKWS+24
SDWATNLW EQU   SDWALKWS+20
SDWAAPLW EQU   SDWALKWS+16
SDWAIPLW EQU   SDWALKWS+12
SDWAILLW EQU   SDWALKWS+8
SDWAIULW EQU   SDWALKWS+4
SDWAICLW EQU   SDWALKWS
SDWACMS  EQU   SDWAACF4
SDWAOPTM EQU   SDWAACF4
SDWATADB EQU   SDWAACF4
SDWATDNB EQU   SDWAACF4
SDWATNCB EQU   SDWAACF4
SDWAILCH EQU   SDWAACF4
SDWAIUCB EQU   SDWAACF4
SDWAICAT EQU   SDWAACF3
SDWAIPRG EQU   SDWAACF3
SDWASALL EQU   SDWAACF3
SDWAASMP EQU   SDWAACF3
SDWADISP EQU   SDWAACF3
@NM00090 EQU   SDWAACF3
@NM00089 EQU   SDWAACF2
@NM00088 EQU   SDWAACF2
SDWASPIN EQU   SDWAACF2
@NM00087 EQU   SDWAACF2
SDWALCPU EQU   SDWACPUA+2
@NM00086 EQU   SDWACPUA
SDWARECA EQU   SDWA+244
SDWACPUI EQU   SDWA+239
@NM00085 EQU   SDWAIOFS
SDWANIOP EQU   SDWAIOFS
SDWANOIO EQU   SDWAIOFS
SDWAIOHT EQU   SDWAIOFS
SDWAIOQR EQU   SDWAIOFS
SDWAFMID EQU   SDWA+236
SDWAERFL EQU   SDWAERRD
SDWAMCIV EQU   SDWAERRD
SDWARPIV EQU   SDWAERRD
SDWAMABD EQU   SDWAERRD
SDWACTS  EQU   SDWAERRD
SDWANRBE EQU   SDWAERRD
@NM00084 EQU   SDWAERRC
SDWAEAS  EQU   SDWAERRC
SDWAPERC EQU   SDWAERRC
SDWAIRB  EQU   SDWAERRC
SDWASTAI EQU   SDWAERRC
SDWASTAF EQU   SDWAERRC
SDWASRBM EQU   SDWAERRB
SDWALDIS EQU   SDWAERRB
SDWAENRB EQU   SDWAERRB
SDWATYP1 EQU   SDWAERRB
@NM00083 EQU   SDWAERRB
SDWAPGIO EQU   SDWAERRA
SDWATEXC EQU   SDWAERRA
SDWASVCE EQU   SDWAERRA
SDWAABTM EQU   SDWAERRA
SDWASVCD EQU   SDWAERRA
SDWARKEY EQU   SDWAERRA
SDWAPCHK EQU   SDWAERRA
SDWAMCHK EQU   SDWAERRA
SDWATIME EQU   SDWAMCH+20
SDWARFSA EQU   SDWAMCH+16
@NM00082 EQU   SDWAMCH+14
SDWAVEQR EQU   SDWARSR2
SDWAPGFX EQU   SDWARSR2
SDWAFLSQ EQU   SDWARSR2
SDWAFSQA EQU   SDWARSR2
SDWANUCL EQU   SDWARSR2
SDWASPER EQU   SDWARSR2
SDWAINTC EQU   SDWARSR2
SDWAOFLN EQU   SDWARSR2
SDWACHNG EQU   SDWARSR1
SDWAMSER EQU   SDWARSR1
@NM00081 EQU   SDWARSR1
SDWACPID EQU   SDWAMCH+10
SDWATERR EQU   SDWAMCHD
SDWAFPRX EQU   SDWAMCHD
SDWAINSF EQU   SDWAMCHD
SDWAACR  EQU   SDWAMCHD
SDWASCK  EQU   SDWAMCHD
SDWAPSWU EQU   SDWAMCHD
SDWAREGU EQU   SDWAMCHD
SDWASKYF EQU   SDWAMCHD
@NM00080 EQU   SDWAMCHS
SDWARSRF EQU   SDWAMCHS
SDWARSRC EQU   SDWAMCHS
SDWAINVP EQU   SDWAMCHS
SDWATSVL EQU   SDWAMCHS
SDWARCDF EQU   SDWAMCHS
SDWASRVL EQU   SDWAMCHS
SDWASCKE EQU   SDWASTCK+4
SDWASCKB EQU   SDWASTCK
SDWALNTH EQU   SDWAIDNT+1
SDWASPID EQU   SDWAIDNT
SDWASR15 EQU   SDWASRSV+60
SDWASR14 EQU   SDWASRSV+56
SDWASR12 EQU   SDWASRSV+48
SDWASR11 EQU   SDWASRSV+44
SDWASR10 EQU   SDWASRSV+40
SDWASR09 EQU   SDWASRSV+36
SDWASR07 EQU   SDWASRSV+28
SDWASR06 EQU   SDWASRSV+24
SDWASR04 EQU   SDWASRSV+16
SDWASR03 EQU   SDWASRSV+12
SDWASR02 EQU   SDWASRSV+8
SDWASR01 EQU   SDWASRSV+4
SDWASR00 EQU   SDWASRSV
SDWATRN2 EQU   SDWAAEC2+4
SDWAIPC2 EQU   SDWAICD2
SDWAIMC2 EQU   SDWAICD2
SDWAIPR2 EQU   SDWAICD2
@NM00079 EQU   SDWAINC2
@NM00078 EQU   SDWAILC2
SDWAIL2  EQU   SDWAILC2
@NM00077 EQU   SDWAILC2
@NM00076 EQU   SDWAAEC2
SDWAADD2 EQU   SDWANXT2+1
@NM00075 EQU   SDWANXT2
@NM00074 EQU   SDWAEC2+3
SDWASGN2 EQU   SDWAINT2
SDWAEXP2 EQU   SDWAINT2
SDWADEC2 EQU   SDWAINT2
SDWAFPO2 EQU   SDWAINT2
SDWACC2  EQU   SDWAINT2
@NM00073 EQU   SDWAINT2
SDWAPGM2 EQU   SDWAMWP2
SDWAWAT2 EQU   SDWAMWP2
SDWAMCK2 EQU   SDWAMWP2
SDWAECT2 EQU   SDWAMWP2
SDWAKEY2 EQU   SDWAMWP2
SDWAEXT2 EQU   SDWAEMK2
SDWAIO2  EQU   SDWAEMK2
SDWATRM2 EQU   SDWAEMK2
@NM00072 EQU   SDWAEMK2
SDWAPER2 EQU   SDWAEMK2
@NM00071 EQU   SDWAEMK2
SDWATRAN EQU   SDWAAEC1+4
SDWAIPC1 EQU   SDWAICD1
SDWAIMC1 EQU   SDWAICD1
SDWAIPR1 EQU   SDWAICD1
@NM00070 EQU   SDWAINC1
@NM00069 EQU   SDWAILC1
SDWAIL1  EQU   SDWAILC1
@NM00068 EQU   SDWAILC1
@NM00067 EQU   SDWAAEC1
SDWAADD1 EQU   SDWANXT1+1
@NM00066 EQU   SDWANXT1
@NM00065 EQU   SDWAEC1+3
SDWASGN1 EQU   SDWAINT1
SDWAEXP1 EQU   SDWAINT1
SDWADEC1 EQU   SDWAINT1
SDWAFPO1 EQU   SDWAINT1
SDWACC1  EQU   SDWAINT1
@NM00064 EQU   SDWAINT1
SDWAPGM1 EQU   SDWAMWP1
SDWAWAT1 EQU   SDWAMWP1
SDWAMCK1 EQU   SDWAMWP1
SDWAECT1 EQU   SDWAMWP1
SDWAKEY1 EQU   SDWAMWP1
SDWAEXT1 EQU   SDWAEMK1
SDWAIO1  EQU   SDWAEMK1
SDWATRM1 EQU   SDWAEMK1
@NM00063 EQU   SDWAEMK1
SDWAPER1 EQU   SDWAEMK1
@NM00062 EQU   SDWAEMK1
SDWAIOBR EQU   SDWA+100
SDWAEPA  EQU   SDWA+96
@NM00061 EQU   SDWANAME+4
SDWARBAD EQU   SDWANAME
SDWAGR15 EQU   SDWAGRSV+60
SDWAGR14 EQU   SDWAGRSV+56
SDWAGR13 EQU   SDWAGRSV+52
SDWAGR12 EQU   SDWAGRSV+48
SDWAGR11 EQU   SDWAGRSV+44
SDWAGR10 EQU   SDWAGRSV+40
SDWAGR09 EQU   SDWAGRSV+36
SDWAGR08 EQU   SDWAGRSV+32
SDWAGR07 EQU   SDWAGRSV+28
SDWAGR06 EQU   SDWAGRSV+24
SDWAGR05 EQU   SDWAGRSV+20
SDWAGR04 EQU   SDWAGRSV+16
SDWAGR03 EQU   SDWAGRSV+12
SDWAGR02 EQU   SDWAGRSV+8
SDWAGR01 EQU   SDWAGRSV+4
SDWAGR00 EQU   SDWAGRSV
SDWANXTP EQU   SDWACTL2+5
SDWASGP  EQU   SDWAPMKP
SDWAEUP  EQU   SDWAPMKP
SDWADOP  EQU   SDWAPMKP
SDWAFPP  EQU   SDWAPMKP
SDWACCP  EQU   SDWAPMKP
SDWAILP  EQU   SDWAPMKP
SDWAINTP EQU   SDWACTL2+2
SDWASPVP EQU   SDWAMWPP
SDWAWATP EQU   SDWAMWPP
SDWAMCKP EQU   SDWAMWPP
@NM00060 EQU   SDWAMWPP
SDWAKEYP EQU   SDWAMWPP
SDWAEXTP EQU   SDWACMKP
SDWAIOP  EQU   SDWACMKP
SDWANXTA EQU   SDWACTL1+5
SDWASGA  EQU   SDWAPMKA
SDWAEUA  EQU   SDWAPMKA
SDWADOA  EQU   SDWAPMKA
SDWAFPA  EQU   SDWAPMKA
SDWACCA  EQU   SDWAPMKA
SDWAILA  EQU   SDWAPMKA
SDWAINTA EQU   SDWACTL1+2
SDWASPVA EQU   SDWAMWPA
SDWAWATA EQU   SDWAMWPA
SDWAMCKA EQU   SDWAMWPA
@NM00059 EQU   SDWAMWPA
SDWAKEYA EQU   SDWAMWPA
SDWAEXTA EQU   SDWACMKA
SDWAIOA  EQU   SDWACMKA
SDWACMPC EQU   SDWAABCC+1
@NM00058 EQU   SDWACMPF
SDWASTCC EQU   SDWACMPF
@NM00057 EQU   SDWACMPF
SDWASTEP EQU   SDWACMPF
SDWAREQ  EQU   SDWACMPF
ASCBEND  EQU   ASCB+208
ASCBSRBT EQU   ASCB+200
ASCBSWTL EQU   ASCB+196
ASCBRS14 EQU   ASCB+195
ASCBSMCT EQU   ASCB+194
ASCBRS12 EQU   ASCB+192
ASCBPCTT EQU   ASCB+188
ASCBVGTT EQU   ASCB+184
ASCBRV43 EQU   ASCBSRQ4
ASCBRV42 EQU   ASCBSRQ4
ASCBRV41 EQU   ASCBSRQ4
ASCBRV40 EQU   ASCBSRQ4
ASCBRV39 EQU   ASCBSRQ4
ASCBRV38 EQU   ASCBSRQ4
ASCBRV37 EQU   ASCBSRQ4
ASCBRV36 EQU   ASCBSRQ4
ASCBRV35 EQU   ASCBSRQ3
ASCBRV34 EQU   ASCBSRQ3
ASCBRV33 EQU   ASCBSRQ3
ASCBRV32 EQU   ASCBSRQ3
ASCBRV31 EQU   ASCBSRQ3
ASCBRV30 EQU   ASCBSRQ3
ASCBRV29 EQU   ASCBSRQ3
ASCBRV28 EQU   ASCBSRQ3
ASCBRV27 EQU   ASCBSRQ2
ASCBRV26 EQU   ASCBSRQ2
ASCBRV25 EQU   ASCBSRQ2
ASCBRV24 EQU   ASCBSRQ2
ASCBRV23 EQU   ASCBSRQ2
ASCBRV22 EQU   ASCBSRQ2
ASCBRV21 EQU   ASCBSRQ2
ASCBRV20 EQU   ASCBSRQ2
ASCBRV19 EQU   ASCBSRQ1
ASCBRV18 EQU   ASCBSRQ1
ASCBRV17 EQU   ASCBSRQ1
ASCBRV16 EQU   ASCBSRQ1
ASCBRV15 EQU   ASCBSRQ1
ASCBRV14 EQU   ASCBSRQ1
ASCBRV13 EQU   ASCBSRQ1
ASCBSTA  EQU   ASCBSRQ1
ASCBJBNS EQU   ASCB+176
ASCBJBNI EQU   ASCB+172
ASCBMCC  EQU   ASCB+168
ASCBRTWA EQU   ASCB+164
ASCBIQEA EQU   ASCB+160
ASCBXMPQ EQU   ASCB+156
ASCBRS01 EQU   ASCB+154
ASCBFMCT EQU   ASCB+152
ASCBOUXB EQU   ASCB+148
ASCBOUCB EQU   ASCB+144
ASCBMECB EQU   ASCB+140
ASCBQECB EQU   ASCB+136
ASCBLSQH EQU   ASCBLKGP+4
ASCBLOCK EQU   ASCBLKGP
ASCBTCBS EQU   ASCB+124
ASCBNVSC EQU   ASCB+122
ASCBVSC  EQU   ASCB+120
ASCBSRBS EQU   ASCB+118
ASCBSSRB EQU   ASCB+116
ASCBRV06 EQU   ASCBFLG2
ASCBRV05 EQU   ASCBFLG2
ASCBRV04 EQU   ASCBFLG2
ASCBSNQS EQU   ASCBFLG2
ASCBS2S  EQU   ASCBFLG2
ASCBCEXT EQU   ASCBFLG2
ASCBPXMT EQU   ASCBFLG2
ASCBXMPT EQU   ASCBFLG2
ASCBRF07 EQU   ASCBDSP1
ASCBRF06 EQU   ASCBDSP1
ASCBRF05 EQU   ASCBDSP1
ASCBRF04 EQU   ASCBDSP1
ASCBRF03 EQU   ASCBDSP1
ASCBRF02 EQU   ASCBDSP1
ASCBFAIL EQU   ASCBDSP1
ASCBNOQ  EQU   ASCBDSP1
ASCBSWCT EQU   ASCB+112
ASCBTMCH EQU   ASCB+104
ASCBNSWP EQU   ASCBFLG1
ASCBTYP1 EQU   ASCBFLG1
ASCBSTND EQU   ASCBFLG1
ASCBABNT EQU   ASCBFLG1
ASCBTERM EQU   ASCBFLG1
ASCBS3S  EQU   ASCBFLG1
ASCBCMSH EQU   ASCBFLG1
ASCBTOFF EQU   ASCBFLG1
ASCBRF01 EQU   ASCBRCTF
ASCBTMLW EQU   ASCBRCTF
ASCBOUT  EQU   ASCBRCTF
ASCBWAIT EQU   ASCBRCTF
ASCBRV08 EQU   ASCBRCTF
ASCBFQU  EQU   ASCBRCTF
ASCBFRS  EQU   ASCBRCTF
ASCBTMNO EQU   ASCBRCTF
ASCBAFFN EQU   ASCBFW1
ASCBRV44 EQU   ASCB+92
ASCBUBET EQU   ASCB+88
ASCBECB  EQU   ASCB+84
ASCBJSTL EQU   ASCB+80
ASCBEWST EQU   ASCB+72
ASCBEJST EQU   ASCB+64
ASCBTSB  EQU   ASCB+60
ASCBCSCB EQU   ASCB+56
ASCBRSMA EQU   ASCBRSM+1
ASCBRV54 EQU   ASCBRSMF
ASCBRV53 EQU   ASCBRSMF
ASCBRV52 EQU   ASCBRSMF
ASCBRV51 EQU   ASCBRSMF
ASCBVEQR EQU   ASCBRSMF
ASCBN2LP EQU   ASCBRSMF
ASCB1LPU EQU   ASCBRSMF
ASCB2LPU EQU   ASCBRSMF
ASCBLDA  EQU   ASCB+48
ASCBSTOR EQU   ASCB+44
ASCBDP   EQU   ASCB+43
ASCBRV07 EQU   ASCB+42
ASCBIOSM EQU   ASCB+40
ASCBSEQN EQU   ASCB+38
ASCBCPUS EQU   ASCB+32
ASCBSPL  EQU   ASCB+28
ASCBIOSP EQU   ASCB+24
ASCBSYNC EQU   ASCBSUPC+4
ASCBSVRB EQU   ASCBSUPC
ASCBCMSF EQU   ASCB+12
ASCBBWDP EQU   ASCB+8
ASCBFWDP EQU   ASCB+4
ASCBASCB EQU   ASCB
ASCBEGIN EQU   ASCB
SDBUFFER EQU   SDWORK+440
DATALEN  EQU   SDOUTBUF+6
KEYLEN   EQU   SDOUTBUF+5
RECORDNO EQU   SDOUTBUF+4
RCDHH    EQU   RCDCCHH+2
RCDCC    EQU   RCDCCHH
SDSMDECB EQU   SDCNTRL+428
SDSMBUFF EQU   SDCNTRL+424
BYTECNT3 EQU   CCW3+6
@NM00056 EQU   CCW3+5
PCI3     EQU   FLAGS3
SKIP3    EQU   FLAGS3
SLI3     EQU   FLAGS3
CC3      EQU   FLAGS3
CD3      EQU   FLAGS3
DATAADR3 EQU   CCW3+1
CMDCODE3 EQU   CCW3
BYTECNT2 EQU   CCW2+6
@NM00055 EQU   CCW2+5
PCI2     EQU   FLAGS2
SKIP2    EQU   FLAGS2
SLI2     EQU   FLAGS2
CC2      EQU   FLAGS2
CD2      EQU   FLAGS2
DATAADR2 EQU   CCW2+1
CMDCODE2 EQU   CCW2
BYTECNT1 EQU   CCW1+6
@NM00054 EQU   CCW1+5
PCI1     EQU   FLAGS1
SKIP1    EQU   FLAGS1
SLI1     EQU   FLAGS1
CMDC1    EQU   FLAGS1
CD1      EQU   FLAGS1
DATAADR1 EQU   CCW1+1
CMDCODE1 EQU   CCW1
SVCNM8   EQU   SVCNM7T8+1
SVCNM7   EQU   SVCNM7T8
SVCNM6   EQU   SVCNM6T8
SVCNM1T4 EQU   SVCNM1T5
@NM00053 EQU   SDCNTRL+388
SVC994ID EQU   SDCNTRL+384
CVRT2SGN EQU   SDCVRT4+5
@NM00052 EQU   SDCVRT4
@NM00051 EQU   CVRT2
SDCVRT1  EQU   CVRT1+2
@NM00050 EQU   CVRT1
@NM00049 EQU   CVRT11
CHCNT    EQU   SDCNTRL+366
TIMCNT   EQU   SDCNTRL+364
DSTINDEX EQU   SDCNTRL+360
SDWRGSV2 EQU   SDCNTRL+288
SDWRGSV1 EQU   SDCNTRL+216
SDRETCOD EQU   SDCNTRL+212
ADDADRWD EQU   SDCNTRL+208
ADDADRWC EQU   SDCNTRL+204
ADDADRWB EQU   SDCNTRL+200
ADDADRWA EQU   SDCNTRL+196
USEEND   EQU   SDCNTRL+192
USESTART EQU   SDCNTRL+188
SPQEADDR EQU   SDCNTRL+184
USERRETA EQU   SDCNTRL+180
PGFRRETA EQU   SDCNTRL+176
SPQERETA EQU   SDCNTRL+172
@NM00048 EQU   SDCNTRL+171
SDWKEY   EQU   SDCNTRL+170
AFFNSAV  EQU   SDCNTRL+168
FREERETA EQU   SDCNTRL+164
LPDERETA EQU   SDCNTRL+160
CDERETA  EQU   SDCNTRL+156
DISPRETA EQU   SDCNTRL+152
SDIORETA EQU   SDCNTRL+148
SVCDLPST EQU   SDCNTRL+136
SVCDMPNM EQU   SDCNTRL+128
FLAGSTWO EQU   SDCNTRL+103
SDWPAGOT EQU   FLAGSONE
FLGFLAST EQU   FLAGSONE
FLGTAPEE EQU   FLAGSONE
FLGRTFUL EQU   FLAGSONE
SVCDNSQA EQU   SVCDOPT2
SVCDNAPA EQU   SVCDOPT2
SVCDNSMD EQU   SVCDOPT2
SVCDSMDP EQU   SVCDOPT2
SVCDSWA  EQU   SVCDOPT2
SVCDCSA  EQU   SVCDOPT2
SVCDTRT  EQU   SVCDOPT1
SVCDLPA  EQU   SVCDOPT1
SVCDRGN  EQU   SVCDOPT1
SVCDLSQA EQU   SVCDOPT1
SVCDSQA  EQU   SVCDOPT1
SVCDNUC  EQU   SVCDOPT1
SVCDPSA  EQU   SVCDOPT1
SVCDAPSA EQU   SVCDOPT1
SDWSDPL  EQU   SDCNTRL+96
SDSRBBAS EQU   SDCNTRL+92
SDSRBADR EQU   SDCNTRL+88
SVCDSRBA EQU   SDCNTRL+84
ENDADRNT EQU   SDCNTRL+80
RANGEPTR EQU   SDCNTRL+76
GLOBADDR EQU   SDCNTRL+72
LOCALADR EQU   SDCNTRL+68
NUCADDR  EQU   SDCNTRL+64
DACHARAD EQU   SDCNTRL+60
LSTESTAE EQU   SDCNTRL+44
SDIOB    EQU   SDCNTRL+4
SDECB    EQU   SDCNTRL
SDUSYSMC EQU   SDUMP+36
SDUSYSMS EQU   SDUMP+32
SDUSUMLP EQU   SDUMP+28
SDUASIDP EQU   SDUMP+24
SDUTASID EQU   SDUMASID+2
SDUHDRAD EQU   SDUMP+12
SDUSTORA EQU   SDUMP+8
SDUDCBAD EQU   SDUMP+4
@NM00047 EQU   SDUSDAT2
SDUNASQA EQU   SDUSDAT2
SDUNAPSA EQU   SDUSDAT2
SDUNSMDP EQU   SDUSDAT2
SDUSMDMP EQU   SDUSDAT2
SDUSWA   EQU   SDUSDAT2
SDUCSA   EQU   SDUSDAT2
SDUTRT   EQU   SDUSDAT1
SDULPA   EQU   SDUSDAT1
SDURGN   EQU   SDUSDAT1
SDULSQA  EQU   SDUSDAT1
SDUSQA   EQU   SDUSDAT1
SDUNUC   EQU   SDUSDAT1
SDUPSA   EQU   SDUSDAT1
SDUALPSA EQU   SDUSDAT1
@NM00046 EQU   SDUFLAG1
SDUSLIP  EQU   SDUFLAG1
SDUSULST EQU   SDUFLAG1
SDUASLST EQU   SDUFLAG1
SDUNEW   EQU   SDUFLAG1
SDUABEND EQU   SDUFLAG1
DUMPTYPE EQU   SDUFLAG1
SDUBRANH EQU   SDUFLAG0
SDUQUIET EQU   SDUFLAG0
SDUASID  EQU   SDUFLAG0
SDUHDR   EQU   SDUFLAG0
SDUSTOR  EQU   SDUFLAG0
SDUBUF   EQU   SDUFLAG0
SDUDCB   EQU   SDUFLAG0
RTCTISVC EQU   RTCTSDO4
RTCTSDOV EQU   RTCTSDMG
@NM00045 EQU   RTCTSDO4
@NM00044 EQU   RTCTSDO3
RTCTSDPH EQU   RTCTSDO3
RTCTSDPG EQU   RTCTSDO3
@NM00043 EQU   RTCTSDO2
RTCTSDPD EQU   RTCTSDO2
RTCTSDPC EQU   RTCTSDO2
RTCTSDPB EQU   RTCTSDO2
RTCTSDPA EQU   RTCTSDO2
RTCTSDP9 EQU   RTCTSDO2
RTCTSDP8 EQU   RTCTSDO2
RTCTSDP7 EQU   RTCTSDO1
RTCTSDP6 EQU   RTCTSDO1
RTCTSDP5 EQU   RTCTSDO1
RTCTSDP4 EQU   RTCTSDO1
RTCTSDP3 EQU   RTCTSDO1
RTCTSDP2 EQU   RTCTSDO1
RTCTSDP1 EQU   RTCTSDO1
RTCTSDP0 EQU   RTCTSDO1
RTCTISYM EQU   RTCTSD04
RTCTSMOV EQU   RTCTSMMG
@NM00042 EQU   RTCTSD04
RTCTSD03 EQU   RTCTMSYO+2
RTCTSD02 EQU   RTCTMSYO+1
RTCTSDS7 EQU   RTCTSD01
RTCTSDS6 EQU   RTCTSD01
RTCTSDS5 EQU   RTCTSD01
RTCTSDS4 EQU   RTCTSD01
RTCTSDS3 EQU   RTCTSD01
RTCTSDS2 EQU   RTCTSD01
RTCTSDS1 EQU   RTCTSD01
RTCTSDS0 EQU   RTCTSD01
RTCTISYU EQU   RTCTSUO4
RTCTSUOV EQU   RTCTSUMG
@NM00041 EQU   RTCTSUO4
RTCTSYDF EQU   RTCTSUO3
RTCTSYDE EQU   RTCTSUO3
RTCTSYDD EQU   RTCTSUO3
RTCTSYDC EQU   RTCTSUO3
RTCTSYDB EQU   RTCTSUO3
RTCTSYDA EQU   RTCTSUO3
RTCTSYD9 EQU   RTCTSUO3
RTCTSYD8 EQU   RTCTSUO3
@NM00040 EQU   RTCTSUO2
RTCTSYDH EQU   RTCTSUO2
RTCTSYDG EQU   RTCTSUO2
RTCTSYD7 EQU   RTCTSUO1
RTCTSYD6 EQU   RTCTSUO1
RTCTSYD5 EQU   RTCTSUO1
RTCTSYD4 EQU   RTCTSUO1
RTCTSYD3 EQU   RTCTSUO1
RTCTSYD2 EQU   RTCTSUO1
RTCTSYD1 EQU   RTCTSUO1
RTCTSYD0 EQU   RTCTSUO1
RTCTISAB EQU   RTCTSAO4
RTCTSAOV EQU   RTCTSAMG
@NM00039 EQU   RTCTSAO4
RTCTSADF EQU   RTCTSAO3
RTCTSADE EQU   RTCTSAO3
RTCTSADD EQU   RTCTSAO3
RTCTSADC EQU   RTCTSAO3
RTCTSADB EQU   RTCTSAO3
RTCTSADA EQU   RTCTSAO3
RTCTSAD9 EQU   RTCTSAO3
RTCTSAD8 EQU   RTCTSAO3
@NM00038 EQU   RTCTSAO2
RTCTSADH EQU   RTCTSAO2
RTCTSADG EQU   RTCTSAO2
RTCTSAD7 EQU   RTCTSAO1
RTCTSAD6 EQU   RTCTSAO1
RTCTSAD5 EQU   RTCTSAO1
RTCTSAD4 EQU   RTCTSAO1
RTCTSAD3 EQU   RTCTSAO1
RTCTSAD2 EQU   RTCTSAO1
RTCTSAD1 EQU   RTCTSAO1
RTCTSAD0 EQU   RTCTSAO1
RTCTZZZ5 EQU   RTCT+340
RTCTZZZ4 EQU   RTCT+336
RTCTMRMQ EQU   RTCT+332
RTCTSDF5 EQU   RTCTSDF3+3
RTCTSDEQ EQU   RTCTSDF4
RTCTSDTR EQU   RTCTSDF4
RTCTSDRM EQU   RTCTSDF4
RTCTSDNC EQU   RTCTSDF4
RTCTSDSS EQU   RTCTSDF4
@NM00037 EQU   RTCTC3PO
@NM00036 EQU   RTCTR2D2
RTCTSDRW EQU   RTCTSDF2
RTCTSDSL EQU   RTCTSDF2
RTCTSDWF EQU   RTCTSDF2
RTCTSDLA EQU   RTCTSDF2
RTCTSDDI EQU   RTCTSDF2
RTCTSDMR EQU   RTCTSDF2
RTCTSDSC EQU   RTCTSDF1
RTCTSDRS EQU   RTCTSDF1
RTCTSDSD EQU   RTCTSDF1
RTCTSDEP EQU   RTCTSDF1
RTCTSDNO EQU   RTCTSDF1
RTCTZZZ2 EQU   RTCT+257
RTCTSDPR EQU   RTCTSDI+2
@NM00035 EQU   RTCTASO2
RTCTASNQ EQU   RTCTASO2
RTCTASNA EQU   RTCTASO2
RTCTASNS EQU   RTCTASO2
RTCTASSU EQU   RTCTASO2
RTCTASSW EQU   RTCTASO2
RTCTASCS EQU   RTCTASO2
RTCTASTR EQU   RTCTASO1
RTCTASLP EQU   RTCTASO1
RTCTASRG EQU   RTCTASO1
RTCTASLS EQU   RTCTASO1
RTCTASSQ EQU   RTCTASO1
RTCTASNU EQU   RTCTASO1
RTCTASPS EQU   RTCTASO1
RTCTASAL EQU   RTCTASO1
RTCTSDO  EQU   RTCTOPT+12
RTCTSYO  EQU   RTCTOPT+8
RTCTSUO  EQU   RTCTOPT+4
RTCTSAO  EQU   RTCTOPT
RTCTXXX2 EQU   RTCT+234
RTCTETIM EQU   RTCTERID+6
RTCTEASD EQU   RTCTERID+4
RTCTECPU EQU   RTCTERID+2
RTCTESEQ EQU   RTCTERID
RTCTTDCB EQU   RTCT+184
RTCTSEQ# EQU   RTCT+178
RTCTXXX1 EQU   RTCT+177
@NM00034 EQU   RTCTRFLG
RTCTRSTF EQU   RTCTRFLG
RTCTRPER EQU   RTCTRFLG
RTCTRTER EQU   RTCTRFLG
RTCTTEST EQU   RTCT+172
RTCTMSRB EQU   RTCT+168
RTCTMLCK EQU   RTCT+164
RTCTFMT  EQU   RTCT+160
RTCTSDIP EQU   RTCTSDPL
RTCTDEV  EQU   RTCTSDDS+8
RTCTDCB  EQU   RTCTSDDS+4
@NM00033 EQU   RTCTFLG
RTCTDETP EQU   RTCTFLG
RTCTDSUS EQU   RTCTFLG
RTCTDSST EQU   RTCTFLG
RTCTDSNM EQU   RTCTSDDS
RTCTRCB  EQU   RTCT+32
RTCTRECB EQU   RTCT+28
RTCTFASB EQU   RTCT+24
RTCTMECB EQU   RTCT+20
RTCTYYY1 EQU   RTCT+16
RTCTSY04 EQU   RTCTSYD+3
RTCTSY03 EQU   RTCTSYD+2
RTCTSY02 EQU   RTCTSYD+1
RTCTSYM7 EQU   RTCTSY01
RTCTSYM6 EQU   RTCTSY01
RTCTSYM5 EQU   RTCTSY01
RTCTSYM4 EQU   RTCTSY01
RTCTSYM3 EQU   RTCTSY01
RTCTSYM2 EQU   RTCTSY01
RTCTSYM1 EQU   RTCTSY01
RTCTSYM0 EQU   RTCTSY01
RTCTSUP4 EQU   RTCTSUP+3
RTCTSUDF EQU   RTCTSUP3
RTCTSUDE EQU   RTCTSUP3
RTCTSUDD EQU   RTCTSUP3
RTCTSUDC EQU   RTCTSUP3
RTCTSUDB EQU   RTCTSUP3
RTCTSUDA EQU   RTCTSUP3
RTCTSUD9 EQU   RTCTSUP3
RTCTSUD8 EQU   RTCTSUP3
@NM00032 EQU   RTCTSUP2
RTCTSUDH EQU   RTCTSUP2
RTCTSUDG EQU   RTCTSUP2
RTCTSUD7 EQU   RTCTSUP1
RTCTSUD6 EQU   RTCTSUP1
RTCTSUD5 EQU   RTCTSUP1
RTCTSUD4 EQU   RTCTSUP1
RTCTSUD3 EQU   RTCTSUP1
RTCTSUD2 EQU   RTCTSUP1
RTCTSUD1 EQU   RTCTSUP1
RTCTSUD0 EQU   RTCTSUP1
RTCTSAP4 EQU   RTCTSAP+3
RTCTSABF EQU   RTCTSAP3
RTCTSABE EQU   RTCTSAP3
RTCTSABD EQU   RTCTSAP3
RTCTSABC EQU   RTCTSAP3
RTCTSABB EQU   RTCTSAP3
RTCTSABA EQU   RTCTSAP3
RTCTSAB9 EQU   RTCTSAP3
RTCTSAB8 EQU   RTCTSAP3
@NM00031 EQU   RTCTSAP2
RTCTSABH EQU   RTCTSAP2
RTCTSABG EQU   RTCTSAP2
RTCTSAB7 EQU   RTCTSAP1
RTCTSAB6 EQU   RTCTSAP1
RTCTSAB5 EQU   RTCTSAP1
RTCTSAB4 EQU   RTCTSAP1
RTCTSAB3 EQU   RTCTSAP1
RTCTSAB2 EQU   RTCTSAP1
RTCTSAB1 EQU   RTCTSAP1
RTCTSAB0 EQU   RTCTSAP1
RTCTNAME EQU   RTCT
@NM00030 EQU   TCBXTNT2+32
TCBRV181 EQU   TCBRV173
TCBRV180 EQU   TCBRV173
TCBRV179 EQU   TCBRV173
TCBRV178 EQU   TCBRV173
TCBRV177 EQU   TCBRV173
TCBRV176 EQU   TCBRV173
TCBRV175 EQU   TCBRV173
TCBRV174 EQU   TCBRV173
TCBRV172 EQU   TCBRV164
TCBRV171 EQU   TCBRV164
TCBRV170 EQU   TCBRV164
TCBRV169 EQU   TCBRV164
TCBRV168 EQU   TCBRV164
TCBRV167 EQU   TCBRV164
TCBRV166 EQU   TCBRV164
TCBRV165 EQU   TCBRV164
TCBRV163 EQU   TCBRV155
TCBRV162 EQU   TCBRV155
TCBRV161 EQU   TCBRV155
TCBRV160 EQU   TCBRV155
TCBRV159 EQU   TCBRV155
TCBRV158 EQU   TCBRV155
TCBRV157 EQU   TCBRV155
TCBRV156 EQU   TCBRV155
TCBRV154 EQU   TCBRV146
TCBRV153 EQU   TCBRV146
TCBRV152 EQU   TCBRV146
TCBRV151 EQU   TCBRV146
TCBRV150 EQU   TCBRV146
TCBRV149 EQU   TCBRV146
TCBRV148 EQU   TCBRV146
TCBRV147 EQU   TCBRV146
TCBRV145 EQU   TCBXTNT2+26
TCBRV144 EQU   TCBXTNT2+24
TCBRV143 EQU   TCBXTNT2+20
TCBRV142 EQU   TCBXTNT2+16
TCBRSV49 EQU   TCBXTNT2+12
TCBEVENT EQU   TCBXTNT2+8
TCBRCMP  EQU   TCBXTNT2+5
TCBRSVAB EQU   TCBXTNT2+4
TCBGTFA  EQU   TCBGTF+1
TCBRSV47 EQU   TCBTFLG
TCBRSV46 EQU   TCBTFLG
TCBRSV45 EQU   TCBTFLG
TCBRSV44 EQU   TCBTFLG
TCBRSV43 EQU   TCBTFLG
TCBDSPIT EQU   TCBTFLG
TCBERRTN EQU   TCBTFLG
TCBASYNC EQU   TCBTFLG
@NM00029 EQU   TCB+296
TCBSVCA2 EQU   TCB+292
TCBSWASA EQU   TCB+288
TCBDBTB  EQU   TCB+284
TCBRPT   EQU   TCB+280
TCBRV141 EQU   TCBRV133
TCBRV140 EQU   TCBRV133
TCBRV139 EQU   TCBRV133
TCBRV138 EQU   TCBRV133
TCBRV137 EQU   TCBRV133
TCBRV136 EQU   TCBRV133
TCBRV135 EQU   TCBRV133
TCBRV134 EQU   TCBRV133
TCBRV132 EQU   TCBRV124
TCBRV131 EQU   TCBRV124
TCBRV130 EQU   TCBRV124
TCBRV129 EQU   TCBRV124
TCBRV128 EQU   TCBRV124
TCBRV127 EQU   TCBRV124
TCBRV126 EQU   TCBRV124
TCBRV125 EQU   TCBRV124
TCBRV123 EQU   TCBFBYT2
TCBRV122 EQU   TCBFBYT2
TCBECBNV EQU   TCBFBYT2
TCBSSSYN EQU   TCBFBYT2
TCBFPRAP EQU   TCBFBYT2
TCBFDW   EQU   TCBFBYT2
TCBFMW   EQU   TCBFBYT2
TCBCNCB  EQU   TCBFBYT2
TCBLLH   EQU   TCBFBYT1
TCBRV113 EQU   TCBFBYT1
TCBEOT   EQU   TCBFBYT1
TCBRTM2  EQU   TCBFBYT1
TCBPGNLY EQU   TCBFBYT1
TCBNDIOS EQU   TCBFBYT1
TCBRV327 EQU   TCBFBYT1
TCBEOTFM EQU   TCBFBYT1
TCBAFFN  EQU   TCB+274
TCBRV326 EQU   TCB+272
TCBUKYSP EQU   TCB+268
TCBMODE  EQU   TCBESTAE+3
TCBERTYP EQU   TCBESTAE+2
TCBRV314 EQU   TCBESTRM
TCBRV313 EQU   TCBESTRM
TCBRV312 EQU   TCBESTRM
TCBRV311 EQU   TCBESTRM
TCBRV310 EQU   TCBESTRM
TCBRV309 EQU   TCBESTRM
TCBRV308 EQU   TCBESTRM
TCBETERM EQU   TCBESTRM
TCBSCBKY EQU   TCBESTAE
TCBRTM12 EQU   TCB+260
TCBTCBID EQU   TCB+256
TCBSTAWA EQU   TCB+252
TCBSWA   EQU   TCB+248
TCBFOEA  EQU   TCBFOE+1
TCBRSV42 EQU   TCBFOE
TCBCCPVI EQU   TCBXSCT+2
TCBRV325 EQU   TCBXSCT+1
TCBRV324 EQU   TCBXSCT1
TCBRV323 EQU   TCBXSCT1
TCBRV322 EQU   TCBXSCT1
TCBRV321 EQU   TCBXSCT1
TCBRV320 EQU   TCBXSCT1
TCBRV319 EQU   TCBXSCT1
TCBS3A   EQU   TCBXSCT1
TCBACTIV EQU   TCBXSCT1
TCBRSV41 EQU   TCB+239
TCBRSVAA EQU   TCB+237
TCBABCUR EQU   TCB+236
TCBTMSAV EQU   TCB+232
TCBIOTIM EQU   TCB+228
TCBRTWA  EQU   TCB+224
TCBBACK  EQU   TCB+220
TCBTIRB  EQU   TCB+216
TCBAECB  EQU   TCB+212
TCBEXT2A EQU   TCBEXT2+1
TCBRSV39 EQU   TCBEXT2
TCBSTMCT EQU   TCB+207
TCBSYSCT EQU   TCB+206
TCBRSV37 EQU   TCB+205
TCBEXSVC EQU   TCBDAR
TCBDARMS EQU   TCBDAR
TCBDARWT EQU   TCBDAR
TCBDARO  EQU   TCBDAR
TCBDARMC EQU   TCBDARC
TCBDARD  EQU   TCBDAR
TCBDARS  EQU   TCBDAR
TCBDARP  EQU   TCBDAR
TCBGTOFM EQU   TCBFLGS7
TCBADMP  EQU   TCBFLGS7
TCBRSTSK EQU   TCBFLGS7
TCBSVCS  EQU   TCBFLGS7
TCBSTACK EQU   TCBFLGS7
TCBRSV34 EQU   TCBFLGS7
TCBRSV33 EQU   TCBFLGS7
TCBGPECB EQU   TCBFLGS7
TCBNTJS  EQU   TCBFLGS6
TCBAPG   EQU   TCBFLGS6
TCBMIGR  EQU   TCBFLGS6
TCBRV303 EQU   TCBFLGS6
TCBSPVLK EQU   TCBFLGS6
TCBCPU   EQU   TCBFLGS6
TCBPIE17 EQU   TCBFLGS6
TCBRV    EQU   TCBFLGS6
TCBRSV79 EQU   TCBNDSP5
TCBRSV78 EQU   TCBNDSP5
TCBRSV77 EQU   TCBNDSP5
TCBRSV76 EQU   TCBNDSP5
TCBRSV75 EQU   TCBNDSP5
TCBRSV74 EQU   TCBNDSP5
TCBRSV95 EQU   TCBNDSP5
TCBRSV94 EQU   TCBNDSP5
TCBRSV93 EQU   TCBNDSP4
TCBRSV92 EQU   TCBNDSP4
TCBRSV91 EQU   TCBNDSP4
TCBRSV90 EQU   TCBNDSP4
TCBRSV89 EQU   TCBNDSP4
TCBRSV88 EQU   TCBNDSP4
TCBRSV87 EQU   TCBNDSP4
TCBRSV86 EQU   TCBNDSP4
TCBEXT1A EQU   TCBEXT1+1
TCBRSV32 EQU   TCBEXT1
TCBEXCPD EQU   TCB+192
TCBIOBRC EQU   TCB+188
TCBDDWTC EQU   TCB+186
TCBDDEXC EQU   TCB+184
TCBJSCBB EQU   TCBJSCB+1
@NM00028 EQU   TCBRECDE
TCBREC   EQU   TCBRECDE
TCBMDIDS EQU   TCB+176
TCBNDINT EQU   TCBNDSP3
TCBRSV27 EQU   TCBNDSP3
TCBRSV26 EQU   TCBNDSP3
TCBRSV25 EQU   TCBNDSP3
TCBRSV24 EQU   TCBNDSP3
TCBSRBND EQU   TCBNDSP3
TCBRV302 EQU   TCBNDSP3
TCBLJSND EQU   TCBNDSP3
TCBABE   EQU   TCBNDSP2
TCBDSS   EQU   TCBNDSP2
TCBOWAIT EQU   TCBNDSP2
TCBIWAIT EQU   TCBNDSP2
TCBNDTS  EQU   TCBNDSP2
TCBNDSVC EQU   TCBNDSP2
TCBSTPP  EQU   TCBNDSP2
TCBABD   EQU   TCBNDSP2
TCBRSV22 EQU   TCBNDSP1
TCBPIEND EQU   TCBNDSP1
TCBTPSP  EQU   TCBNDSP1
TCBDDRND EQU   TCBNDSP1
TCBRSPND EQU   TCBNDSP1
TCBRSTND EQU   TCBNDSP1
TCBDARPN EQU   TCBNDSP1
TCBDARTN EQU   TCBNDSP1
TCBNDSP0 EQU   TCBNDSP
TCBUSER  EQU   TCB+168
TCBTCTB  EQU   TCBTCT+1
TCBRSV9C EQU   TCBTCTGF
TCBRSV9B EQU   TCBTCTGF
TCBRSV9A EQU   TCBTCTGF
TCBRSV99 EQU   TCBTCTGF
TCBRSV98 EQU   TCBTCTGF
TCBRSV97 EQU   TCBTCTGF
TCBRSV20 EQU   TCBTCTGF
TCBSMFGF EQU   TCBTCTGF
TCBSTABB EQU   TCBSTAB+1
TCBSTCUR EQU   TCBNSTAE
TCBRV301 EQU   TCBNSTAE
TCBSYNCH EQU   TCBNSTAE
TCBHALT  EQU   TCBNSTAE
TCBPPSUP EQU   TCBNSTAE
TCB33E   EQU   TCBNSTAE
TCBQUIES EQU   TCBNSTAE
TCBSTABE EQU   TCBNSTAE
TCBAQE   EQU   TCB+156
TCBPQE   EQU   TCB+152
TCBTSDP  EQU   TCB+151
TCBTSLP  EQU   TCB+150
TCBSTPCT EQU   TCB+149
TCBCPUBN EQU   TCBTSFLG
TCBDYDSP EQU   TCBTSFLG
TCBRSV18 EQU   TCBTSFLG
TCBRSV17 EQU   TCBTSFLG
TCBTIOTG EQU   TCBTSFLG
TCBATT   EQU   TCBTSFLG
TCBSTPPR EQU   TCBTSFLG
TCBRV300 EQU   TCBTSTSK
TCBECB   EQU   TCB+144
TCBIQE   EQU   TCB+140
TCBOTC   EQU   TCB+132
TCBJSTCA EQU   TCBJSTCB+1
TCBRSV16 EQU   TCBJSTCB
TCBTQET  EQU   TCBTME
TCBTCB   EQU   TCB+116
TCBFSAB  EQU   TCBFSA+1
TCBQEL   EQU   TCBFSA
TCBGRS15 EQU   TCBGRS+60
TCBGRS14 EQU   TCBGRS+56
TCBGRS13 EQU   TCBGRS+52
TCBGRS12 EQU   TCBGRS+48
TCBGRS11 EQU   TCBGRS+44
TCBGRS10 EQU   TCBGRS+40
TCBGRS9  EQU   TCBGRS+36
TCBGRS8  EQU   TCBGRS+32
TCBGRS7  EQU   TCBGRS+28
TCBGRS6  EQU   TCBGRS+24
TCBGRS5  EQU   TCBGRS+20
TCBGRS4  EQU   TCBGRS+16
TCBGRS3  EQU   TCBGRS+12
TCBGRS2  EQU   TCBGRS+8
TCBGRS1  EQU   TCBGRS+4
TCBGRS0  EQU   TCBGRS
TCBJPQB  EQU   TCBJPQ+1
TCBRSV15 EQU   TCBPURGE
TCBRSV14 EQU   TCBPURGE
TCBRSV13 EQU   TCBPURGE
TCBRSV12 EQU   TCBPURGE
TCBRSV11 EQU   TCBPURGE
TCBRSV10 EQU   TCBPURGE
TCBRSV09 EQU   TCBPURGE
TCBJPQF  EQU   TCBPURGE
TCBJLB   EQU   TCB+40
TCBLLS   EQU   TCB+36
TCBDSP   EQU   TCB+35
TCBLMP   EQU   TCB+34
TCBPNDSP EQU   TCBFLGS5
TCBFCD1  EQU   TCBFLGS5
TCBSTP   EQU   TCBFLGS5
TCBSYS   EQU   TCBFLGS5
TCBANDSP EQU   TCBFLGS5
TCBPAGE  EQU   TCBFLGS5
TCBUXNDF EQU   TCBABWF
TCBFC    EQU   TCBFLGS5
TCBONDSP EQU   TCBFLGS4
TCBMPCND EQU   TCBFLGS4
TCBMPCVQ EQU   TCBFLGS4
TCBUXNDV EQU   TCBFLGS4
TCBHNDSP EQU   TCBFLGS4
TCBRQENA EQU   TCBFLGS4
TCBSER   EQU   TCBFLGS4
TCBNDUMP EQU   TCBFLGS4
TCBDWSTA EQU   TCBFLGS3
TCBRSV08 EQU   TCBFLGS3
TCBRSV07 EQU   TCBFLGS3
TCBRSV06 EQU   TCBFLGS3
TCBABGM  EQU   TCBFLGS3
TCBABTRM EQU   TCBFLGS3
TCBADINP EQU   TCBFLGS3
TCBFSM   EQU   TCBFLGS3
TCBFTS   EQU   TCBFLGS2
TCBFETXR EQU   TCBFLGS2
TCBFDSOP EQU   TCBFLGS2
TCBFJMC  EQU   TCBFLGS2
TCBFSMC  EQU   TCBFLGS2
TCBFABOP EQU   TCBFLGS2
TCBFSTI  EQU   TCBFLGS2
TCBFOINP EQU   TCBFLGS2
TCBFS    EQU   TCBFLGS1
TCBFT    EQU   TCBFLGS1
TCBPDUMP EQU   TCBFLGS1
TCBNONPR EQU   TCBFLGS1
TCBFERA  EQU   TCBFLGS1
TCBFE    EQU   TCBFLGS1
TCBFA    EQU   TCBFLGS1
TCBZERO  EQU   TCBPKF
TCBFLAG  EQU   TCBPKF
TCBMSSB  EQU   TCBMSS+1
TCBRSV03 EQU   TCBMSS
TCBTRNB  EQU   TCBTRN+1
TCBRSV02 EQU   TCBABF
TCBOLTEP EQU   TCBABF
TCBTCP   EQU   TCBABF
TCBTCPP  EQU   TCBABF
TCBRSV01 EQU   TCBABF
TCBGRPH  EQU   TCBABF
TCBNOCHK EQU   TCBABF
TCBMOD91 EQU   TCBABF
TCBCMPC  EQU   TCBCMP+1
TCBRV318 EQU   TCBCMSG
TCBRV317 EQU   TCBCIND
TCBRV316 EQU   TCBCWTO
TCBCASID EQU   TCBCDBL
TCBNOCC  EQU   TCBSTCC
TCBDMPO  EQU   TCBCPP
TCBCSTEP EQU   TCBCMPF
TCBCREQ  EQU   TCBCMPF
TCBTIO   EQU   TCB+12
TCBDEB   EQU   TCB+8
TCBPIEA  EQU   TCBPIE+1
TCBPM    EQU   TCBPMASK
@NM00027 EQU   TCBPMASK
TCBRBP   EQU   TCB
TCBFRS6  EQU   TCBFRS+24
TCBFRS4  EQU   TCBFRS+16
TCBFRS2  EQU   TCBFRS+8
TCBFRS0  EQU   TCBFRS
CVTLEVL  EQU   CVTRELNO+2
CVTNUMB  EQU   CVTRELNO
CVTMDL   EQU   CVTFIX+250
@NM00026 EQU   CVTFIX+248
@NM00025 EQU   CVTFIX
CVTRV482 EQU   CVTXTNT2+128
CVTRV481 EQU   CVTXTNT2+124
CVTRV480 EQU   CVTXTNT2+120
CVTRV479 EQU   CVTXTNT2+118
CVTRV478 EQU   CVTXTNT2+117
CVTRV477 EQU   CVTXTNT2+116
CVTRV476 EQU   CVTXTNT2+115
CVTRV475 EQU   CVTXTNT2+114
CVTRV474 EQU   CVTRV466
CVTRV473 EQU   CVTRV466
CVTRV472 EQU   CVTRV466
CVTRV471 EQU   CVTRV466
CVTRV470 EQU   CVTRV466
CVTRV469 EQU   CVTRV466
CVTRV468 EQU   CVTRV466
CVTRV467 EQU   CVTRV466
CVTRV465 EQU   CVTRV457
CVTRV464 EQU   CVTRV457
CVTRV463 EQU   CVTRV457
CVTRV462 EQU   CVTRV457
CVTRV461 EQU   CVTRV457
CVTRV460 EQU   CVTRV457
CVTRV459 EQU   CVTRV457
CVTRV458 EQU   CVTRV457
CVTRV456 EQU   CVTXTNT2+108
CVTRV455 EQU   CVTXTNT2+104
CVTRV454 EQU   CVTXTNT2+100
CVTRV453 EQU   CVTXTNT2+96
CVTRV452 EQU   CVTXTNT2+94
CVTRV451 EQU   CVTXTNT2+92
CVTRV450 EQU   CVTXTNT2+90
CVTRV449 EQU   CVTXTNT2+88
CVTRV448 EQU   CVTXTNT2+87
CVTRV447 EQU   CVTXTNT2+86
CVTRV446 EQU   CVTRV438
CVTRV445 EQU   CVTRV438
CVTRV444 EQU   CVTRV438
CVTRV443 EQU   CVTRV438
CVTRV442 EQU   CVTRV438
CVTRV441 EQU   CVTRV438
CVTRV440 EQU   CVTRV438
CVTRV439 EQU   CVTRV438
CVTRV437 EQU   CVTRV429
CVTRV436 EQU   CVTRV429
CVTRV435 EQU   CVTRV429
CVTRV434 EQU   CVTRV429
CVTRV433 EQU   CVTRV429
CVTRV432 EQU   CVTRV429
CVTRV431 EQU   CVTRV429
CVTRV430 EQU   CVTRV429
CVTRV428 EQU   CVTXTNT2+80
CVTRV427 EQU   CVTXTNT2+76
CVTRV426 EQU   CVTXTNT2+72
CVTRV425 EQU   CVTXTNT2+68
CVTATACT EQU   CVTATCVT
CVTRV423 EQU   CVTXTNT2+62
CVTRV422 EQU   CVTXTNT2+60
CVTRV421 EQU   CVTXTNT2+58
CVTRV420 EQU   CVTXTNT2+56
CVTRV419 EQU   CVTXTNT2+55
CVTRV418 EQU   CVTXTNT2+54
CVTRV417 EQU   CVTRV409
CVTRV416 EQU   CVTRV409
CVTRV415 EQU   CVTRV409
CVTRV414 EQU   CVTRV409
CVTRV413 EQU   CVTRV409
CVTRV412 EQU   CVTRV409
CVTRV411 EQU   CVTRV409
CVTRV410 EQU   CVTRV409
CVTRV408 EQU   CVTRV400
CVTRV407 EQU   CVTRV400
CVTRV406 EQU   CVTRV400
CVTRV405 EQU   CVTRV400
CVTRV404 EQU   CVTRV400
CVTRV403 EQU   CVTRV400
CVTRV402 EQU   CVTRV400
CVTRV401 EQU   CVTRV400
CVTICB   EQU   CVTXTNT2+48
CVTSKTA  EQU   CVTXTNT2+44
CVTCCVT  EQU   CVTXTNT2+40
CVTRSV98 EQU   CVTXTNT2+36
CVTRSV97 EQU   CVTXTNT2+34
CVTRSV96 EQU   CVTXTNT2+32
CVTOLTEP EQU   CVTXTNT2+28
CVTQIDA  EQU   CVTQID+1
CVTRSV95 EQU   CVTQID
CVTRSV94 EQU   CVTXTNT2+20
CVTRSV93 EQU   CVTXTNT2+16
CVTRSV92 EQU   CVTXTNT2+12
CVTDEBVR EQU   CVTXTNT2+8
CVTRSV91 EQU   CVTXTNT2+6
CVTRSV9H EQU   CVTFLGBT
CVTRSV9G EQU   CVTFLGBT
CVTRSV9F EQU   CVTFLGBT
CVTRSV9E EQU   CVTFLGBT
CVTRSV9D EQU   CVTFLGBT
CVTBAH   EQU   CVTFLGBT
CVTVME   EQU   CVTFLGBT
CVTNPE   EQU   CVTFLGBT
CVTNUCLS EQU   CVTXTNT2+4
CVTDSSVA EQU   CVTDSSV+1
CVTRSV89 EQU   CVTDSSV
CVTRSV88 EQU   CVTXTNT1+8
CVTRSV87 EQU   CVTXTNT1+4
CVTFACHN EQU   CVTXTNT1
CVTRV488 EQU   CVTMAP+412
CVTRV487 EQU   CVTMAP+408
CVTRV486 EQU   CVTMAP+404
CVTRV485 EQU   CVTMAP+400
CVTACTAP EQU   CVTMAP+396
CVTAUTH  EQU   CVTMAP+392
CVTRV490 EQU   CVTMAP+388
CVTSU    EQU   CVTMAP+384
CVTVOLT1 EQU   CVTVOLM1+1
CVTVOLI1 EQU   CVTVOLF1
CVTSTOA  EQU   CVTMAP+376
CVTRSV58 EQU   CVTMAP+374
CVTRSV57 EQU   CVTMAP+372
CVTDDCE  EQU   CVTMAP+368
CVTPNWFR EQU   CVTMAP+364
CVTSMF   EQU   CVTMAP+360
CVTSULK  EQU   CVTMAP+358
CVTSLKO  EQU   CVTSYSK
CVTSLKP  EQU   CVTSYSK
CVTSLKQ  EQU   CVTSYSK
CVTSLKR  EQU   CVTSYSK
CVTRSV56 EQU   CVTSYSK
CVTRSV55 EQU   CVTSYSK
CVTRSV54 EQU   CVTSYSK
CVTRSV53 EQU   CVTSYSK
CVTRSV52 EQU   CVTA1F1
CVTRSV51 EQU   CVTA1F1
CVTRSV50 EQU   CVTA1F1
CVTRSV49 EQU   CVTA1F1
CVTRSV48 EQU   CVTA1F1
CVTRSV47 EQU   CVTA1F1
CVTSRSW  EQU   CVTA1F1
CVTPFSW  EQU   CVTA1F1
CVTPCVT  EQU   CVTMAP+352
CVTRSV46 EQU   CVTMAP+344
CVTRSV45 EQU   CVTMAP+340
CVTRSV44 EQU   CVTMAP+338
CVTRSV43 EQU   CVTMAP+336
CVTHJESA EQU   CVTHJES+1
CVTRSV42 EQU   CVTHJES
CVTEXT2A EQU   CVTEXT2+1
CVTRSV41 EQU   CVTEXT2
CVTAPFA  EQU   CVTAPF+1
CVTRSV40 EQU   CVTAPF
CVTRV518 EQU   CVTINTLA
CVTRV517 EQU   CVTERPV
CVTEORM  EQU   CVTMAP+312
CVTMCHPR EQU   CVTMAP+308
CVTTZ    EQU   CVTMAP+304
CVTJEPS  EQU   CVTMAP+300
CVTJESCT EQU   CVTMAP+296
CVTMODE  EQU   CVTMAP+292
CVTPTRV  EQU   CVTMAP+288
CVTREAL  EQU   CVTMAP+284
CVTRSV39 EQU   CVTMAP+280
CVTRSV38 EQU   CVTMAP+276
CVTDMSRA EQU   CVTDMSR+1
CVTRV634 EQU   CVTDMSRF
CVTRV633 EQU   CVTDMSRF
CVTRV632 EQU   CVTDMSRF
CVTRV631 EQU   CVTDMSRF
CVTRV630 EQU   CVTDMSRF
CVTRV629 EQU   CVTDMSRF
CVTUDUMP EQU   CVTDMSRF
CVTSDUMP EQU   CVTDMSRF
CVTQMSGA EQU   CVTQMSG+1
CVTRSV36 EQU   CVTQMSG
CVTAMFF  EQU   CVTMAP+264
CVTPURGA EQU   CVTPURG+1
CVTRSV35 EQU   CVTPURG
CVTCBSP  EQU   CVTMAP+256
CVTATERA EQU   CVTATER+1
CVTSYST  EQU   CVTATER
CVTVOLT2 EQU   CVTTAT
CVTVOLI2 EQU   CVTVOLF2
CVTAQAVB EQU   CVTAQAVT+1
CVTRSV34 EQU   CVTTCMFG
CVTRSV33 EQU   CVTTCMFG
CVTRSV32 EQU   CVTTCMFG
CVTRSV31 EQU   CVTTCMFG
CVTRSV30 EQU   CVTTCMFG
CVTRSV29 EQU   CVTTCMFG
CVTLDEV  EQU   CVTTCMFG
CVTTCRDY EQU   CVTTCMFG
CVTGTFA  EQU   CVTGTF+1
CVTRSV27 EQU   CVTGTFST
CVTRNIO  EQU   CVTGTFST
CVTUSR   EQU   CVTGTFST
CVTRV318 EQU   CVTFORM
CVTRV317 EQU   CVTTMODE
CVTRV316 EQU   CVTSTATE
CVTRV315 EQU   CVTGTFS
CVTGTFAV EQU   CVTGTFS
CVT0SCR1 EQU   CVTMAP+232
CVTRV515 EQU   CVTMAP+228
CVTRMS   EQU   CVTMAP+224
CVTPATCH EQU   CVTMAP+220
CVTTSCE  EQU   CVTMAP+216
CVTLNKSC EQU   CVTMAP+214
CVTQABST EQU   CVTMAP+212
CVTMDLDS EQU   CVTMAP+208
CVTUSER  EQU   CVTMAP+204
CVTSMCA  EQU   CVTMAP+196
CVTRSV18 EQU   CVTMAP+192
CVTQLPAQ EQU   CVTMAP+188
CVTQCDSR EQU   CVTMAP+184
CVTVS1B  EQU   CVTOPTB
CVTVS1A  EQU   CVTOPTB
CVTFP    EQU   CVTOPTB
CVTAPTHR EQU   CVTOPTB
CVTNLOG  EQU   CVTOPTB
CVTTOD   EQU   CVTOPTB
CVTCTIMS EQU   CVTOPTB
CVTPROT  EQU   CVTOPTB
CVTXPFP  EQU   CVTOPTA
CVTASCII EQU   CVTOPTA
CVTRSV13 EQU   CVTOPTA
CVTRSV12 EQU   CVTOPTA
CVTNIP   EQU   CVTOPTA
CVTDDR   EQU   CVTOPTA
CVTAPR   EQU   CVTOPTA
CVTCCH   EQU   CVTOPTA
CVTSNCTR EQU   CVTMAP+180
CVTQMWR  EQU   CVTMAP+176
CVTQOCR  EQU   CVTMAP+172
CVT1EF00 EQU   CVTMAP+168
CVTMZ00  EQU   CVTMAP+164
CVTSV76Q EQU   CVTSV76C
CVTRSV11 EQU   CVTMAP+156
CVTMSER  EQU   CVTMAP+148
CVTRV516 EQU   CVTIERLC
CVTILCH  EQU   CVTMAP+140
CVT0DS   EQU   CVTMAP+136
CVTFBOSV EQU   CVTMAP+132
CVTNUCB  EQU   CVTMAP+128
CVTIXAVL EQU   CVTMAP+124
CVTSV76M EQU   CVTIOQET
CVTDCBA  EQU   CVTMAP+117
CVTMVS2  EQU   CVTDCB
CVT6DAT  EQU   CVTDCB
CVT4MPS  EQU   CVTDCB
CVTRSV09 EQU   CVTDCB
CVT4MS1  EQU   CVTDCB
CVT2SPS  EQU   CVTDCB
CVT1SSS  EQU   CVTDCB
CVTRSV08 EQU   CVTDCB
CVTSTB   EQU   CVTMAP+112
CVTQTE00 EQU   CVTMAP+104
CVTCUCB  EQU   CVTMAP+100
CVTSJQ   EQU   CVTMAP+96
CVTPBLDL EQU   CVTMAP+92
CVTTPC   EQU   CVTMAP+88
CVTSVDCB EQU   CVTMAP+84
CVTEXIT  EQU   CVTMAP+80
CVT0FN00 EQU   CVTMAP+76
CVTDARA  EQU   CVTDAR+1
CVTRSV07 EQU   CVTFLGS1
CVTRSV06 EQU   CVTFLGS1
CVTRSV05 EQU   CVTFLGS1
CVTRSV04 EQU   CVTFLGS1
CVTRSV03 EQU   CVTFLGS1
CVTRSV02 EQU   CVTFLGS1
CVTRSV01 EQU   CVTFLGS1
CVTDMPLK EQU   CVTFLGS1
CVTXITP  EQU   CVTMAP+68
CVTZDTAB EQU   CVTMAP+64
CVTMSLT  EQU   CVTMAP+60
CVTDATE  EQU   CVTMAP+56
CVTBTERM EQU   CVTMAP+52
CVTSYSAD EQU   CVTMAP+48
CVTXTLER EQU   CVTMAP+44
CVTILK2  EQU   CVTMAP+40
CVTILK1  EQU   CVTMAP+36
CVTPRLTV EQU   CVTMAP+32
CVTPCNVT EQU   CVTMAP+28
CVT0VL00 EQU   CVTMAP+24
CVTXAPG  EQU   CVTMAP+20
CVTBUF   EQU   CVTMAP+16
CVTJOB   EQU   CVTMAP+12
CVTLINK  EQU   CVTMAP+8
CVT0EF00 EQU   CVTMAP+4
CVTTCBP  EQU   CVTMAP
CVT      EQU   CVTMAP
LCCAR125 EQU   LCCA+964
LCCAR124 EQU   LCCA+960
LCCASGPR EQU   LCCA+896
LCCADRT2 EQU   LCCA+888
LCCADRT1 EQU   LCCA+880
LCCAR103 EQU   LCCA+876
LCCAESS2 EQU   LCCA+872
LCCASPLJ EQU   LCCA+868
LCCASMQJ EQU   LCCA+864
LCCAIRT  EQU   LCCA+736
LCCAASID EQU   LCCA+732
LCCARV89 EQU   LCCA+728
LCCAPGTA EQU   LCCASRBF+2
LCCASAFN EQU   LCCASRBF
LCCAECSA EQU   LCCA+716
LCCAICR0 EQU   LCCA+712
LCCALWTM EQU   LCCA+704
LCCARV78 EQU   LCCA+700
LCCAPINV EQU   LCCA+696
LCCARV88 EQU   LCCA+695
LCCARV87 EQU   LCCALKFG
LCCARV86 EQU   LCCALKFG
LCCARV85 EQU   LCCALKFG
LCCARV84 EQU   LCCALKFG
LCCALKRD EQU   LCCALKFG
LCCALKAQ EQU   LCCALKFG
LCCALKSA EQU   LCCALKFG
LCCALKDP EQU   LCCALKFG
LCCACRST EQU   LCCACREX
LCCACRDP EQU   LCCACREX
LCCACRLM EQU   LCCACREX
LCCACRIN EQU   LCCACREX
LCCACRRT EQU   LCCACREX
LCCACRLE EQU   LCCACREX
LCCACRRM EQU   LCCACREX
LCCACREF EQU   LCCACREX
LCCAVARY EQU   LCCACRFL
LCCARV73 EQU   LCCACRFL
LCCARV72 EQU   LCCACRFL
LCCARV71 EQU   LCCACRFL
LCCARV70 EQU   LCCACRFL
LCCARV69 EQU   LCCACRFL
LCCACLMS EQU   LCCACRFL
LCCACRTM EQU   LCCACRFL
LCCALCR0 EQU   LCCA+688
LCCACRLC EQU   LCCA+684
LCCARCPU EQU   LCCA+680
LCCADCPU EQU   LCCA+676
LCCASRBJ EQU   LCCA+672
LCCADSSR EQU   LCCA+668
LCCADSSC EQU   LCCA+660
LCCADSS3 EQU   LCCA+648
LCCADSS2 EQU   LCCA+636
LCCADSS1 EQU   LCCA+624
LCCAWTIM EQU   LCCA+616
LCCAITOD EQU   LCCA+608
LCCADTOD EQU   LCCA+600
LCCASTOD EQU   LCCA+592
LCCARIR5 EQU   LCCASPSA+44
LCCARIR4 EQU   LCCASPSA+40
LCCARIR3 EQU   LCCASPSA+36
LCCARIR2 EQU   LCCASPSA+32
LCCARPR5 EQU   LCCASPSA+28
LCCARPR4 EQU   LCCASPSA+24
LCCARPR3 EQU   LCCASPSA+20
LCCARPR2 EQU   LCCASPSA+16
LCCADSR5 EQU   LCCASPSA+12
LCCADSR4 EQU   LCCASPSA+8
LCCADSR3 EQU   LCCASPSA+4
LCCADSR2 EQU   LCCASPSA
LCCARV68 EQU   LCCA+543
LCCAPSMK EQU   LCCA+542
LCCARV67 EQU   LCCADSF2
LCCARV66 EQU   LCCADSF2
LCCARV65 EQU   LCCADSF2
LCCARV64 EQU   LCCADSF2
LCCADSRW EQU   LCCADSF2
LCCADSPL EQU   LCCADSF2
LCCAGSRB EQU   LCCADSF2
LCCASRBM EQU   LCCADSF2
LCCARV61 EQU   LCCADSF1
LCCARV60 EQU   LCCADSF1
LCCARV59 EQU   LCCADSF1
LCCARV58 EQU   LCCADSF1
LCCATIMR EQU   LCCADSF1
LCCADSS  EQU   LCCADSF1
LCCAVCPU EQU   LCCADSF1
LCCAACR  EQU   LCCADSF1
LCCAASCP EQU   LCCA+532
LCCAESSA EQU   LCCA+528
LCCARV55 EQU   LCCASPN4
LCCARV54 EQU   LCCASPN4
LCCARV53 EQU   LCCASPN4
LCCARV52 EQU   LCCASPN4
LCCARV51 EQU   LCCASPN4
LCCARV50 EQU   LCCASPN4
LCCARV49 EQU   LCCASPN4
LCCARV48 EQU   LCCASPN4
LCCARV47 EQU   LCCASPN3
LCCARV46 EQU   LCCASPN3
LCCARV45 EQU   LCCASPN3
LCCARV44 EQU   LCCASPN3
LCCARV43 EQU   LCCASPN3
LCCARV42 EQU   LCCASPN3
LCCARV41 EQU   LCCASPN3
LCCARV40 EQU   LCCASPN3
LCCARV39 EQU   LCCASPN2
LCCARV38 EQU   LCCASPN2
LCCARV37 EQU   LCCASPN2
LCCARV36 EQU   LCCASPN2
LCCARV35 EQU   LCCASPN2
LCCARV34 EQU   LCCASPN2
LCCARV33 EQU   LCCASPN2
LCCARV32 EQU   LCCASPN2
LCCARV31 EQU   LCCASPN1
LCCARV30 EQU   LCCASPN1
LCCAMFIO EQU   LCCASPN1
LCCARSTR EQU   LCCASPN1
LCCATSPN EQU   LCCASPN1
LCCALOCK EQU   LCCASPN1
LCCASIGP EQU   LCCASPN1
LCCAPTLB EQU   LCCASPN1
LCCARV27 EQU   LCCAIHR4
LCCARV26 EQU   LCCAIHR4
LCCARV25 EQU   LCCAIHR4
LCCARV24 EQU   LCCAIHR4
LCCARV23 EQU   LCCAIHR4
LCCARV22 EQU   LCCAIHR4
LCCARV21 EQU   LCCAIHR4
LCCARV20 EQU   LCCAIHR4
LCCARV19 EQU   LCCAIHR3
LCCARV18 EQU   LCCAIHR3
LCCARV17 EQU   LCCAIHR3
LCCARV16 EQU   LCCAIHR3
LCCARV15 EQU   LCCAIHR3
LCCARV14 EQU   LCCAIHR3
LCCARV13 EQU   LCCAIHR3
LCCARV12 EQU   LCCAIHR3
LCCARV11 EQU   LCCAIHR2
LCCARV10 EQU   LCCAIHR2
LCCARV09 EQU   LCCAIHR2
LCCARV08 EQU   LCCAIHR2
LCCARV07 EQU   LCCAIHR2
LCCARV06 EQU   LCCAIHR2
LCCARV05 EQU   LCCAIHR2
LCCARV04 EQU   LCCAIHR2
LCCARV03 EQU   LCCAIHR1
LCCARV02 EQU   LCCAIHR1
LCCARV01 EQU   LCCAIHR1
LCCAPPIE EQU   LCCAIHR1
LCCAPSG1 EQU   LCCAIHR1
LCCAPDAT EQU   LCCAIHR1
LCCAXRC2 EQU   LCCAIHR1
LCCAXRC1 EQU   LCCAIHR1
LCCAIOPS EQU   LCCA+512
LCCAGPGR EQU   LCCA+448
LCCAR133 EQU   LCCA+444
LCCAR132 EQU   LCCA+440
LCCAR131 EQU   LCCA+436
LCCAR130 EQU   LCCA+432
LCCAR129 EQU   LCCA+428
LCCAR128 EQU   LCCA+424
LCCAR127 EQU   LCCA+420
LCCAR126 EQU   LCCA+416
LCCARSGR EQU   LCCA+352
LCCAXGR3 EQU   LCCA+288
LCCAXGR2 EQU   LCCA+224
LCCAXGR1 EQU   LCCA+160
LCCACR0  EQU   LCCA+156
LCCAMCR1 EQU   LCCA+152
LCCAPVAD EQU   LCCA+148
LCCAPINT EQU   LCCA+144
LCCAPPSW EQU   LCCA+136
LCCAPGR2 EQU   LCCA+72
LCCAPGR1 EQU   LCCA+8
LCCARV77 EQU   LCCA+6
LCCACPUA EQU   LCCA+4
LCCALCCA EQU   LCCA
ASXBEND  EQU   ASXB+232
ASXBRV25 EQU   ASXB+228
ASXBRV24 EQU   ASXB+224
ASXBPT0E EQU   ASXB+220
ASXBCRB4 EQU   ASXBCASW+3
ASXBCRB3 EQU   ASXBCASW+2
ASXBCRB2 EQU   ASXBCASW+1
ASXBCR06 EQU   ASXBCRB1
ASXBCR05 EQU   ASXBCRB1
ASXBCR04 EQU   ASXBCRB1
ASXBCR03 EQU   ASXBCRB1
ASXBCR02 EQU   ASXBCRB1
ASXBCR01 EQU   ASXBCRB1
ASXBTFD  EQU   ASXBCRB1
ASXBPIP  EQU   ASXBCRB1
ASXBCTDC EQU   ASXB+212
ASXBTDCB EQU   ASXB+208
ASXBRV19 EQU   ASXB+204
ASXBSENV EQU   ASXBSECR+1
ASXBRV34 EQU   ASCBSFLG
ASXBRV33 EQU   ASCBSFLG
ASXBRV32 EQU   ASCBSFLG
ASXBRV31 EQU   ASCBSFLG
ASXBRV30 EQU   ASCBSFLG
ASXBRV29 EQU   ASCBSFLG
ASXBRV28 EQU   ASCBSFLG
ASXBRV27 EQU   ASCBSFLG
ASXBUSER EQU   ASXB+192
ASXBLSRB EQU   ASXBAEQ+20
ASXBFSRB EQU   ASXBAEQ+16
ASXBLRQE EQU   ASXBAEQ+12
ASXBFRQE EQU   ASXBAEQ+8
ASXBLIQE EQU   ASXBAEQ+4
ASXBFIQE EQU   ASXBAEQ
ASXBETSK EQU   ASXB+164
ASXBSIRB EQU   ASXB+160
ASXBPSWD EQU   ASXB+152
ASXBPRG  EQU   ASXB+136
ASXBRV26 EQU   ASXB+132
ASXBOUSB EQU   ASXB+128
ASXBDDR  EQU   ASXB+124
ASXBRCTD EQU   ASXB+120
ASXBRSMD EQU   ASXB+116
ASXBFRWA EQU   ASXB+108
ASXBFLSA EQU   ASXB+36
ASXBIHSA EQU   ASXB+32
ASXBRV15 EQU   ASXB+28
ASXBRV14 EQU   ASXB+24
ASXBLWA  EQU   ASXB+20
ASXBMPST EQU   ASXB+16
ASXBRS00 EQU   ASXB+14
ASXBTCBS EQU   ASXB+12
ASXBLTCB EQU   ASXB+8
ASXBASXB EQU   ASXB
ASXBEGIN EQU   ASXB
@NM00024 EQU   PSA+3668
PSASTAK  EQU   PSA+3072
@NM00023 EQU   PSA+1048
PSAUSEND EQU   PSA+1048
PSARV062 EQU   PSA+1044
PSACDAL  EQU   PSA+1040
PSAWTCOD EQU   PSA+1036
PSAATCVT EQU   PSA+1032
PSAPCPSW EQU   PSA+1024
PSAPIR2  EQU   PSA+1020
PSARV059 EQU   PSA+1018
PSASVC13 EQU   PSA+1016
PSALSFCC EQU   PSA+1012
PSASFACC EQU   PSA+1008
PSASTOP  EQU   PSA+992
PSASTART EQU   PSA+976
PSARSPSW EQU   PSA+968
PSASRPSW EQU   PSA+960
PSARV045 EQU   PSA+892
PSARV044 EQU   PSA+888
PSARV043 EQU   PSA+884
PSARV042 EQU   PSA+880
PSARV041 EQU   PSA+876
PSARV040 EQU   PSA+872
PSARV025 EQU   PSA+868
PSADSSED EQU   PSA+868
PSADSSPR EQU   PSA+864
PSADSSFW EQU   PSA+860
PSADSS14 EQU   PSA+856
PSADSSPP EQU   PSA+848
PSADSSRP EQU   PSA+840
PSADSS05 EQU   PSADSSF4
PSADSS10 EQU   PSADSSF4
PSADSSVE EQU   PSADSSF4
PSADSSDE EQU   PSADSSF4
PSADSSC0 EQU   PSADSSF4
PSADSSIE EQU   PSADSSF4
PSADSS12 EQU   PSADSSF4
PSADSSRC EQU   PSADSSF4
PSARV057 EQU   PSADSSF3
PSARV056 EQU   PSADSSF3
PSARV055 EQU   PSADSSF3
PSADSSMC EQU   PSADSSF3
PSADSSRW EQU   PSADSSF3
PSADSSNM EQU   PSADSSF3
PSADSSES EQU   PSADSSF3
PSADSSGP EQU   PSADSSF3
PSADSSF2 EQU   PSADSSFL+1
PSADSSPI EQU   PSADSSF1
PSADSSOI EQU   PSADSSF1
PSADSSSP EQU   PSADSSF1
PSADSSTP EQU   PSADSSF1
PSADSSDW EQU   PSADSSF1
PSADSSDD EQU   PSADSSF1
PSADSSDM EQU   PSADSSF1
PSADSSMV EQU   PSADSSF1
PSADSSTS EQU   PSA+816
PSADSSWK EQU   PSA+812
PSADSSR3 EQU   PSA+808
PSADSSR2 EQU   PSA+804
PSADSSRS EQU   PSA+800
PSASTOR  EQU   PSA+796
PSACPUSA EQU   PSA+794
PSAVSTAP EQU   PSA+792
PSAWKVAP EQU   PSA+788
PSAWKRAP EQU   PSA+784
PSAMCHIC EQU   PSA+783
PSARV061 EQU   PSA+782
PSASYMSK EQU   PSA+781
PSAMCHFL EQU   PSA+780
PSACR0   EQU   PSA+776
PSAPSWSV EQU   PSA+768
PSACLHS  EQU   PSAHLHI
PSALKR15 EQU   PSALKSA+60
PSALKR14 EQU   PSALKSA+56
PSALKR13 EQU   PSALKSA+52
PSALKR12 EQU   PSALKSA+48
PSALKR11 EQU   PSALKSA+44
PSALKR10 EQU   PSALKSA+40
PSALKR9  EQU   PSALKSA+36
PSALKR8  EQU   PSALKSA+32
PSALKR7  EQU   PSALKSA+28
PSALKR6  EQU   PSALKSA+24
PSALKR5  EQU   PSALKSA+20
PSALKR4  EQU   PSALKSA+16
PSALKR3  EQU   PSALKSA+12
PSALKR2  EQU   PSALKSA+8
PSALKR1  EQU   PSALKSA+4
PSALKR0  EQU   PSALKSA
PSARV023 EQU   PSACLHT+52
PSALOCAL EQU   PSACLHT+48
PSACMSL  EQU   PSACLHT+44
PSAOPTL  EQU   PSACLHT+40
PSATPACL EQU   PSACLHT+36
PSATPDNL EQU   PSACLHT+32
PSATPNCL EQU   PSACLHT+28
PSAIOSLL EQU   PSACLHT+24
PSAIOSUL EQU   PSACLHT+20
PSAIOSCL EQU   PSACLHT+16
PSAIOSSL EQU   PSACLHT+12
PSASALCL EQU   PSACLHT+8
PSAASML  EQU   PSACLHT+4
PSADISPL EQU   PSACLHT
PSASRSA  EQU   PSA+636
PSARV050 EQU   PSA+634
PSADSSGO EQU   PSA+633
PSARECUR EQU   PSA+632
PSAHLHIS EQU   PSA+628
PSAIPCSA EQU   PSA+624
@NM00022 EQU   PSA+621
PSAIPCDM EQU   PSA+620
PSAIPCD  EQU   PSA+616
@NM00021 EQU   PSA+613
PSAIPCRM EQU   PSA+612
PSAIPCR  EQU   PSA+608
PSAMCHEX EQU   PSA+600
PSAMPSW  EQU   PSA+592
PSAEXPS2 EQU   PSA+584
PSAEXPS1 EQU   PSA+576
PSAPIREG EQU   PSA+572
PSARSREG EQU   PSA+568
PSAGPREG EQU   PSA+556
PSARV022 EQU   PSASUP4
PSARV021 EQU   PSASUP4
PSARV020 EQU   PSASUP4
PSARV019 EQU   PSASUP4
PSARV018 EQU   PSASUP4
PSARV017 EQU   PSASUP4
PSARV016 EQU   PSASUP4
PSARV015 EQU   PSASUP4
PSARV014 EQU   PSASUP3
PSAULCMS EQU   PSASUP3
PSARV012 EQU   PSASUP3
PSAESTA  EQU   PSASUP3
PSASPR   EQU   PSASUP3
PSAPSREG EQU   PSASUP3
PSAPI2   EQU   PSASUP3
PSAIOSUP EQU   PSASUP3
PSALCR   EQU   PSASUP2
PSARTM   EQU   PSASUP2
PSAACR   EQU   PSASUP2
PSAIPCE2 EQU   PSASUP2
PSAIPCES EQU   PSASUP2
PSAIPCEC EQU   PSASUP2
PSAGTF   EQU   PSASUP2
PSAIPCRI EQU   PSASUP2
PSATYPE6 EQU   PSASUP1
PSATCTL  EQU   PSASUP1
PSADISP  EQU   PSASUP1
PSALOCK  EQU   PSASUP1
PSAPI    EQU   PSASUP1
PSAEXT   EQU   PSASUP1
PSASVC   EQU   PSASUP1
PSAIO    EQU   PSASUP1
PSAANEW  EQU   PSA+544
PSATNEW  EQU   PSA+536
PSALCCAR EQU   PSA+532
PSAPCCAR EQU   PSA+524
PSAPCCAV EQU   PSA+520
PSACPULA EQU   PSA+518
PSACPUPA EQU   PSA+516
PSAPSA   EQU   PSA+512
FLCHDEND EQU   PSA+512
FLCCRSAV EQU   FLCMCLA+280
FLCGRSAV EQU   FLCMCLA+216
FLCFPSAV EQU   FLCMCLA+184
FLCFLA   EQU   FLCMCLA+88
FLCRGNCD EQU   FLCMCLA+84
FLCFSAA  EQU   FLCFSA+1
@NM00020 EQU   FLCFSA
@NM00019 EQU   FLCMCLA+72
FLCMCIC  EQU   FLCMCLA+64
@NM00018 EQU   FLCMCLA+20
FLCIOAA  EQU   FLCIOA+1
@NM00017 EQU   FLCIOA
@NM00016 EQU   FLCMCLA+15
@NM00015 EQU   FLCMCLA+14
@NM00014 EQU   FLCMCLA+12
FLCLCL   EQU   FLCMCLA+8
FLCIOELA EQU   FLCIOEL+1
@NM00013 EQU   FLCIOEL
FLCCHNID EQU   FLCMCLA
@NM00012 EQU   PSA+160
FLCMTRCD EQU   PSA+157
@NM00011 EQU   PSA+156
FLCPERA  EQU   FLCPER+1
@NM00010 EQU   FLCPER
@NM00009 EQU   PSA+151
FLCPERCD EQU   PSA+150
FLCMCNUM EQU   PSA+149
@NM00008 EQU   PSA+148
FLCTEAA  EQU   FLCTEA+1
@NM00007 EQU   FLCTEA
PSAPIPC  EQU   PSAPICOD
PSAPIMC  EQU   PSAPICOD
PSAPIPER EQU   PSAPICOD
PSARV049 EQU   FLCPICOD
FLCPILCB EQU   FLCPIILC
@NM00006 EQU   FLCPIILC
@NM00005 EQU   PSAEPPSW
FLCSVCN  EQU   PSAESPSW+2
FLCSILCB EQU   FLCSVILC
@NM00004 EQU   FLCSVILC
@NM00003 EQU   PSAESPSW
FLCEICOD EQU   PSAEEPSW+2
PSASPAD  EQU   PSAEEPSW
@NM00002 EQU   PSA+128
FLCINPSW EQU   PSA+120
FLCMNPSW EQU   PSA+112
FLCPNPSW EQU   PSA+104
FLCSNPSW EQU   PSA+96
FLCENPSW EQU   PSA+88
FLCTIMER EQU   PSA+80
FLCCVT2  EQU   PSA+76
FLCCAW   EQU   PSA+72
FLCCSW   EQU   PSA+64
FLCIOPSW EQU   PSA+56
FLCMOPSW EQU   PSA+48
FLCPOPSW EQU   PSA+40
FLCSOPSW EQU   PSA+32
FLCEOPSW EQU   PSA+24
@NM00001 EQU   FLCICCW2+4
FLCICCW1 EQU   FLCROPSW
FLCIPPSW EQU   FLCRNPSW
*                                      END UNREFERENCED COMPONENTS
@RC00123 EQU   @RC00070
@RC00341 EQU   @EL00002
@PB00002 EQU   @EL00001
@RC00058 EQU   @PB00002
@ENDDATA EQU   *
         END   IEAVTSDR,(C'PLS1148',0701,78188)
