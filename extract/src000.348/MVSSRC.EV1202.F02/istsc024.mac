         TITLE 'ISTSC024-DPRINT'
ISTSC024 CSECT ,                                                   0001
@MAINENT DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL1(16)                                             0001
         DC    C'ISTSC024  79.101'                                 0001
         DROP  @15
@PROLOG  ST    @14,12(,@13)                                        0001
         STM   @00,@12,20(@13)                                     0001
         BALR  @12,0                                               0001
@PSTART  DS    0H                                                  0001
         USING @PSTART,@12                                         0001
*   R14=R13;                        /* HOLD CALLER'S SVAREA PTR      */
         LR    R14,R13                                             0077
*   R13=ADDR(SVESC024);             /* POINT TO MY SAVE AREA         */
         LA    R13,SVESC024(,WAPTR)                                0078
*   BACKSAVE(3)=R13;                /* PUT MY SVAREA PTR IN CALLR    */
         STCM  R13,15,BACKSAVE+8(R14)                              0079
*   SVESC024(2)=R14;                /* PUT CALLER'S SVAREA PTR IN MY
*                                      SAVE AREA                     */
         ST    R14,SVESC024+4(,WAPTR)                              0080
*   $24SAV13=$R13PTR;               /* SAVE PTR TO DPR CALLER        */
         L     @14,$R13PTR(,WAPTR)                                 0081
         ST    @14,$24SAV13(,WAPTR)                                0081
*   $R13PTR=R13;                    /* MAKE RCM RET TO ME            */
         ST    R13,$R13PTR(,WAPTR)                                 0082
*   $NOTRRCH=ON;                    /* NO RC HDLG & TRACE YET        */
         OI    $NOTRRCH(WAPTR),B'00000010'                         0083
*   $24FLGS=0;                      /* RESET DPR FLAGS               */
         MVI   $24FLGS(WAPTR),X'00'                                0084
*   $24RETCD=0;                     /* RESET DPR RET CODE            */
         MVI   $24RETCD(WAPTR),X'00'                               0085
*   $PRTONLY=ON;                    /* PRINT ON AP ONLY              */
         OI    $PRTONLY(WAPTR),B'00001000'                         0086
*   DPRPTR=R1;                      /* GET DPR LIST PTR VIA R1       */
         LR    DPRPTR,R1                                           0087
*   PRTPTR=$PRTCTLW;                /* SET UP PTR TO CTL WORD        */
         L     PRTPTR,$PRTCTLW(,DPRPTR)                            0088
*   TECBPTR=$PRTTECB;               /* SET UP TECB BASE REG          */
         L     TECBPTR,$PRTTECB(,DPRPTR)                           0089
*   IF $ERRORDP=ON                  /* IF AN ERROR DPRINT,           */
*     THEN                          /* TURN ON ERROR BITS            */
         TM    $ERRORDP(PRTPTR),B'00000010'                        0090
         BNO   @RF00090                                            0090
*     DO;                           /* IN SCT                        */
*       $TESTERR=ON;                                               0092
*       $ASTERIK=ON;                                               0093
         OI    $TESTERR(WAPTR),B'11000000'                         0093
*     END;                                                         0094
*   IF($LOOPTST=ON×$LOOPERR=ON)     /* IF TL OR EL OPTIONS AND       */
*       &$NOPRT=OFF                 /* NPR OPTIONSS IN EFFECT        */
*     THEN                          /* THEN                          */
@RF00090 TM    $LOOPTST(WAPTR),B'00000011'                         0095
         BZ    @RF00095                                            0095
         TM    $NOPRT(WAPTR),B'00000100'                           0095
         BNZ   @RF00095                                            0095
*     DO;                           /* TURN OFF $CATERR IN SCT       */
*       $CATERR=OFF;                /* AND                           */
         NI    $CATERR(WAPTR),B'11011111'                          0097
*       GOTO S24C9990;              /* RETURN TO OLT                 */
         B     S24C9990                                            0098
*     END;                                                         0099
*                                                                  0099
*/********************************************************************/
*/* AN ERROR DPRINT CAN BE EXECUTED WHEN NO-ERROR-PRINT OPTION IS IN */
*/* EFFECT ONLY WHEN THERE IS A CATASTROPHIC OR A FIRST ERROR        */
*/* MESSAGE TO BE PRINTED                                            */
*/********************************************************************/
*                                                                  0100
*   IF $ERRORDP=ON&$NERRPRT=ON      /* IF ERROR                      */
*     THEN                          /* DPRINT &                      */
@RF00095 TM    $ERRORDP(PRTPTR),B'00000010'                        0100
         BNO   @RF00100                                            0100
         TM    $NERRPRT(WAPTR),B'00000100'                         0100
         BNO   @RF00100                                            0100
*     DO;                           /* NEP, AND                      */
*       IF($CATERR=ON               /* IF CAT ERR                    */
*           &$FSTCAT=OFF)×          /* & MSG NOT                     */
*           ($FSTCOMM=ON            /* PRNTD OR FE                   */
*           &$FSTFE=OFF)            /* & MSG NOT                     */
*         THEN                                                     0102
         TM    $CATERR(WAPTR),B'00100000'                          0102
         BNO   @GL00003                                            0102
         TM    $FSTCAT(WAPTR),B'01000000'                          0102
         BZ    @RT00102                                            0102
@GL00003 TM    $FSTCOMM(WAPTR),B'00000001'                         0102
         BNO   @RF00102                                            0102
         TM    $FSTFE(WAPTR),B'10000000'                           0102
         BZ    @RT00102                                            0102
*         GOTO S24C0100;            /* PRTD GO ON                    */
*       ELSE                                                       0104
*         GOTO S24C9990;            /* ELSE RC=0                     */
         B     S24C9990                                            0104
*     END;                                                         0105
*S24C0100:                                                         0106
*   CVD($RTN#,DPRWORK2);            /* CONV BIN RTN# TO DECIMAL      */
@RF00100 DS    0H                                                  0106
S24C0100 L     @14,$LOWADDR(,WAPTR)                                0106
         LH    @11,RTNDISP(,@14)                                   0106
         ALR   @11,@14                                             0106
         SLR   @14,@14                                             0106
         IC    @14,$RTN#(,@11)                                     0106
         CVD   @14,@TS00001                                        0106
         MVC   DPRWORK2(2,WAPTR),@TS00001+6                        0106
*   DPRWORK2=DPRWORK2/16;           /* GET RID OF SIGN BITS CONVERT
*                                      RTN# TO EBCDIC                */
*                                                                  0107
         LH    @14,DPRWORK2(,WAPTR)                                0107
         N     @14,@CF01082                                        0107
         SRL   @14,4                                               0107
         STH   @14,DPRWORK2(,WAPTR)                                0107
*   /*****************************************************************/
*   /*                                                               */
*   /* ITACONV FROM(DPRWORK2)TO($ESECTID(8))COUNT(2)TYPE(HE) INVOKED */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0108
*   DCL                                                            0108
*     1 ITATCPRM BDY(WORD),         /* CONVERT PARAMETER LIST        */
*      2 * CHAR(4) INIT('0102F4F1'X),                              0108
*      2 ITATCFR PTR,               /* ADDRESS OF FROM FIELD         */
*      2 ITATCTO PTR,               /* ADDRESS OF TO FIELD           */
*      2 * BIT(8) INIT(0),          /* FLAGS FOR CONVERT MODULE      */
*       3 ITATCTP BIT(1),           /* TYPE OF CONVERT REQUIRED      */
*      2 ITATCNT FIXED(8);          /* NUMBER OF BYTES TO CONVERT    */
*   ITATCFR=ADDR(DPRWORK2);         /* SET THE FROM ADDRESS          */
         LA    @14,DPRWORK2(,WAPTR)                                0109
         ST    @14,ITATCFR                                         0109
*   ITATCTO=ADDR($ESECTID(8));      /* SET THE TO ADDRESS            */
         LA    @14,$ESECTID+7(,WAPTR)                              0110
         ST    @14,ITATCTO                                         0110
*   ITATCTP='1'B;                   /* SET THE TYPE OF CONVERT BIT   */
         OI    ITATCTP,B'10000000'                                 0111
*   ITATCNT=2;                      /* GIVE THE CONVERT BYTE COUNT   */
         MVI   ITATCNT,X'02'                                       0112
*   R1=ADDR(ITATCPRM);              /* POINT TO CONVERT PARM LIST    */
         LA    R1,ITATCPRM                                         0113
*   CALL ISTSC021;                  /* CALL CONVERT DIRECTLY         */
         L     @15,@CV00877                                        0114
         BALR  @14,@15                                             0114
*   $ESECTID=SECTID;                /* SAVE FOR FE & CATERR MSGS     */
         L     @14,$LOWADDR(,WAPTR)                                0115
         MVC   $ESECTID(8,WAPTR),SECTID(@14)                       0115
*/********************************************************************/
*/* SEARCH FOR DEVICE ADDRESS                                        */
*/********************************************************************/
*                                                                  0116
*   $24CATMG=' ';                   /* BLANK OUT DEVADR & SYMNME     */
         MVI   $24CATMG+1(WAPTR),C' '                              0116
         MVC   $24CATMG+2(10,WAPTR),$24CATMG+1(WAPTR)              0116
         MVI   $24CATMG(WAPTR),C' '                                0116
*   IF $PTDEVAD^=0                  /* IF DEV ADDR WAS SPECIFIED IN
*                                      DPRINT PARM LIST              */
*     THEN                                                         0117
         ICM   @14,3,$PTDEVAD(PRTPTR)                              0117
         BZ    @RF00117                                            0117
*     DO;                                                          0118
*       $24UNADR(3:4)=$PTDEVAD;     /* USE IT                        */
         MVC   $24UNADR+2(2,WAPTR),$PTDEVAD(PRTPTR)                0119
*       GOTO S24C0120;              /* AND CONVERT IT                */
         B     S24C0120                                            0120
*     END;                                                         0121
*   IF $PRTTECB=0×TECBEVOC=0        /* IF TECB PTR NOT SPECIFIED     */
*     THEN                          /* OR NO POSTED EVENT IN TECB    */
@RF00117 L     @14,$PRTTECB(,DPRPTR)                               0122
         LTR   @14,@14                                             0122
         BZ    @RT00122                                            0122
         CLI   TECBEVOC(TECBPTR),0                                 0122
         BNE   @RF00122                                            0122
@RT00122 DS    0H                                                  0123
*     DO;                                                          0123
*       IF $NDR=ON                  /* IF THERE IS NO PRIM DEV       */
*         THEN                                                     0124
         TM    $NDR(WAPTR),B'00100000'                             0124
         BNO   @RF00124                                            0124
*         DO;                                                      0125
*           $24DEVAD='NONE';        /* DEV ADDR IS 'NONE'            */
         MVC   $24DEVAD(4,WAPTR),@CC00880                          0126
*           GOTO S24C0150;          /* BYPASS CONVERT OF UNIT ADR    */
         B     S24C0150                                            0127
*         END;                                                     0128
*       ELSE                                                       0129
*         DO;                                                      0129
@RF00124 DS    0H                                                  0130
*           $24UNADR=$PDEVADR;      /* ELSE USE PRIMARY DEVICE       */
         L     @14,$PDEVADR(,WAPTR)                                0130
         ST    @14,$24UNADR(,WAPTR)                                0130
*           IF $SYMNAME=ON          /* IF THERE IS A SYMB            */
*             THEN                                                 0131
         TM    $SYMNAME(WAPTR),B'00001000'                         0131
         BNO   @RF00131                                            0131
*             $24SYMNE=$SYNAME;     /* NAME, USE IT                  */
         MVC   $24SYMNE(8,WAPTR),$SYNAME(WAPTR)                    0132
*         END;                                                     0133
@RF00131 DS    0H                                                  0134
*     END;                                                         0134
*   ELSE                                                           0135
*     DO;                           /* OTHERWISE                     */
         B     @RC00122                                            0135
@RF00122 DS    0H                                                  0136
*       $24UNADR(2:4)=              /* USE ADDR FROM FIRST           */
*           TECBEVT1(2:4);          /* EVENT FIELD OF TECB           */
         MVC   $24UNADR+1(3,WAPTR),TECBEVT1+1(TECBPTR)             0136
*     END;                                                         0137
*S24C0120:                          /* CONV UNITADDR TO SAVE AREA    */
*                                                                  0138
*   /*****************************************************************/
*   /*                                                               */
*   /* ITACONV FROM($24UNADR(3))TO($24DEVAD)COUNT(2)TYPE(HE) INVOKED */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0138
*   ITATCFR=ADDR($24UNADR(3));      /* SET THE FROM ADDRESS          */
@RC00122 DS    0H                                                  0138
S24C0120 LA    @14,$24UNADR+2(,WAPTR)                              0138
         ST    @14,ITATCFR                                         0138
*   ITATCTO=ADDR($24DEVAD);         /* SET THE TO ADDRESS            */
         LA    @14,$24DEVAD(,WAPTR)                                0139
         ST    @14,ITATCTO                                         0139
*   ITATCTP='1'B;                   /* SET THE TYPE OF CONVERT BIT   */
         OI    ITATCTP,B'10000000'                                 0140
*   ITATCNT=2;                      /* GIVE THE CONVERT BYTE COUNT   */
         MVI   ITATCNT,X'02'                                       0141
*   R1=ADDR(ITATCPRM);              /* POINT TO CONVERT PARM LIST    */
         LA    R1,ITATCPRM                                         0142
*   CALL ISTSC021;                  /* CALL CONVERT DIRECTLY         */
         L     @15,@CV00877                                        0143
         BALR  @14,@15                                             0143
*/********************************************************************/
*/*      HEADER                                                      */
*/********************************************************************/
*                                                                  0144
*S24C0150:                                                         0144
*   CALL S24C2600;                  /* CLEAR PRINT BUFFER            */
S24C0150 BAL   @14,S24C2600                                        0144
*   IF $DPHEADR=OFF                 /* IF HEADER FLAG OFF,           */
*     THEN                                                         0145
         TM    $DPHEADR(PRTPTR),B'00010000'                        0145
         BZ    @RT00145                                            0145
*     GOTO S24C0200;                /* BYPASS, HEADER SET UP         */
*   IF $ALTPRNT=ON                  /* IF PP IS IN EFFECT,           */
*     THEN                                                         0147
         TM    $ALTPRNT(WAPTR),B'00010000'                         0147
         BNO   @RF00147                                            0147
*     $PRTONLY=OFF;                 /* TURN OFF PRINTR ONLY FLAG     */
         NI    $PRTONLY(WAPTR),B'11110111'                         0148
*   HDRPTR=ADDR($BUFFER);           /* POINT HDR STRUC TO BUFR       */
@RF00147 LA    HDRPTR,$BUFFER(,WAPTR)                              0149
*   IF $ERRORDP=ON                  /* IF THIS IS AN ERROR DPRINT    */
*     THEN                                                         0150
         TM    $ERRORDP(PRTPTR),B'00000010'                        0150
         BNO   @RF00150                                            0150
*     HDRERROR='*';                 /* PREFIX LINE WITH AN *         */
         MVI   HDRERROR(HDRPTR),C'*'                               0151
*   HDRTSTID=SECTID;                /* GET SECTION ID IN PRT BFR     */
@RF00150 L     @14,$LOWADDR(,WAPTR)                                0152
         MVC   HDRTSTID(8,HDRPTR),SECTID(@14)                      0152
*   HDRHYPHN='-';                   /* HYPHEN                        */
         MVI   HDRHYPHN(HDRPTR),C'-'                               0153
*   HDRLEVEL=LEVEL;                 /* SECTION LEVEL IN PRT BFR      */
         MVC   HDRLEVEL(2,HDRPTR),LEVEL(@14)                       0154
*   HDRRTN='RTN';                   /* PUT CHARACTERS 'RTN' IN       */
         MVC   HDRRTN(3,HDRPTR),@CC00888                           0155
*   HDROUTN#=$24RTN#;               /* GET ROUTINE #                 */
         MVC   HDROUTN#(3,HDRPTR),$24RTN#(WAPTR)                   0156
*   HDRDEVLN='DEV/LN';              /* SET UP DEV ADDR               */
         MVI   HDRDEVLN+6(HDRPTR),C' '                             0157
         MVC   HDRDEVLN(6,HDRPTR),@CC00889                         0157
*   HDRUNADR=$24DEVAD;              /* PUT UNIT ADR IN HDR           */
         MVC   HDRUNADR(4,HDRPTR),$24DEVAD(WAPTR)                  0158
*   IF $24SYMNE^='        '         /* IF THERE IS A SYM NME,        */
*     THEN                                                         0159
         CLC   $24SYMNE(8,WAPTR),@CC00890                          0159
         BE    @RF00159                                            0159
*     HDRSYMNM=$24SYMNE;            /* THEN USE IT                   */
         MVC   HDRSYMNM(8,HDRPTR),$24SYMNE(WAPTR)                  0160
*   ELSE                                                           0161
*     HDRPTR=HDRPTR-LENGTH(HDRSYMNM);/* IF NOT UP PTR IN BUFR        */
         B     @RC00159                                            0161
@RF00159 SL    HDRPTR,@CF00039                                     0161
*   HDRECA='ECA';                   /* PUT 'ECA' IN BUFFER           */
@RC00159 MVC   HDRECA(3,HDRPTR),@CC00892                           0162
*   HDRECA#=$ECA;                   /* GET ECA# FROM SECT PREF       */
         L     @14,$LOWADDR(,WAPTR)                                0163
         LH    @09,RTNDISP(,@14)                                   0163
         ALR   @09,@14                                             0163
         MVC   HDRECA#(3,HDRPTR),$ECA(@09)                         0163
*   IF $DPREFNM=ON                  /* IF REFNUM TO BE               */
*     THEN                          /* PRINTED,                      */
         TM    $DPREFNM(PRTPTR),B'00000001'                        0164
         BNO   @RF00164                                            0164
*     DO;                           /*                               */
*       HDREFNUM='REFNUM';          /* 'REFNUM' IN BUFR              */
         MVC   HDREFNUM(6,HDRPTR),@CC00893                         0166
*       DPRWORK2=$PTRENUM;          /* PT 2 FROM PARM LIST           */
         MVC   DPRWORK2(2,WAPTR),$PTRENUM(PRTPTR)                  0167
*       MVO(DPRWORK(4:5),$REFNUM);  /* CONV REFNUM TO OUT BUFR       */
*                                                                  0168
         MVO   DPRWORK+3(2,WAPTR),$REFNUM(1,@09)                   0168
*       /*************************************************************/
*       /*                                                           */
*       /* ITACONV FROM(DPRWORK1)TO(HDREF#)COUNT(3)TYPE(HE) INVOKED  */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0169
*       ITATCFR=ADDR(DPRWORK1);     /* SET THE FROM ADDRESS          */
         LA    @14,DPRWORK1(,WAPTR)                                0169
         ST    @14,ITATCFR                                         0169
*       ITATCTO=ADDR(HDREF#);       /* SET THE TO ADDRESS            */
         LA    @14,HDREF#(,HDRPTR)                                 0170
         ST    @14,ITATCTO                                         0170
*       ITATCTP='1'B;               /* SET THE TYPE OF CONVERT BIT   */
         OI    ITATCTP,B'10000000'                                 0171
*       ITATCNT=3;                  /* GIVE THE CONVERT BYTE COUNT   */
         MVI   ITATCNT,X'03'                                       0172
*       R1=ADDR(ITATCPRM);          /* POINT TO CONVERT PARM LIST    */
         LA    R1,ITATCPRM                                         0173
*       CALL ISTSC021;              /* CALL CONVERT DIRECTLY         */
         L     @15,@CV00877                                        0174
         BALR  @14,@15                                             0174
*       HDREF#(1:1)=' ';            /* BLANK 1ST CHAR                */
         MVI   HDREF#(HDRPTR),C' '                                 0175
*     END;                                                         0176
*   CALL S24C2500;                  /* PUT OUT THE HEADER            */
@RF00164 BAL   @14,S24C2500                                        0177
*/********************************************************************/
*/*      TEST DESCRIPTION                                            */
*/********************************************************************/
*                                                                  0178
*S24C0200:                                                         0178
*   IF $DESCRIP=OFF                 /* IF NOT TO PRINT DESCP LINE    */
*     THEN                                                         0178
S24C0200 TM    $DESCRIP(PRTPTR),B'10000000'                        0178
         BZ    @RT00178                                            0178
*     GOTO S24C0250;                /* BYPASS THIS SECTION           */
*   $DDRPTR=ADDR($PTDESCA);         /* PTR TO DESC LINE ADDR LIST    */
         LA    @14,$PTDESCA(,DPRPTR)                               0180
         ST    @14,$DDRPTR(,WAPTR)                                 0180
*   $OUNTPTR=ADDR($PTDESCC);        /* PTR TO DESC BYTE CNT LIST     */
         LA    @14,$PTDESCC(,PRTPTR)                               0181
         ST    @14,$OUNTPTR(,WAPTR)                                0181
*   $UMXX=$PTDESCL;                 /* INDEX = # OF DESC LINES       */
         IC    @14,$PTDESCL(,PRTPTR)                               0182
         STC   @14,$UMXX(,WAPTR)                                   0182
*   CALL S24C1000;                  /* CHK PP LEV 1&3 & PRT LINE     */
         BAL   @14,S24C1000                                        0183
*/********************************************************************/
*/*      CAW CCW LINE                                                */
*/********************************************************************/
*                                                                  0184
*S24C0250:                                                         0184
*   IF $DPCCW=OFF                   /* IF CCW'S NOT TO BE PRINTD     */
*     THEN                                                         0184
S24C0250 TM    $DPCCW(PRTPTR),B'01000000'                          0184
         BZ    @RT00184                                            0184
*     GOTO S24C0300;                /* GO ON TO CC'S                 */
*   IF $PTCCWA=0                    /* IF CCW POINTER = 0            */
*     THEN                          /* THEN SET                      */
         L     @14,$PTCCWA(,DPRPTR)                                0186
         LTR   @14,@14                                             0186
         BNZ   @RF00186                                            0186
*S24C0252:                                                         0187
*     DO;                           /* RC = 0C                       */
S24C0252 DS    0H                                                  0188
*       $24RETCD='0C'X;             /* GO TO CHK FOR CC'S            */
         MVI   $24RETCD(WAPTR),X'0C'                               0188
*       GOTO S24C0300;                                             0189
         B     S24C0300                                            0189
*     END;                                                         0190
*   IF $PTNCCWS=0                   /* IF CCW COUNT =0               */
*     THEN                                                         0191
@RF00186 CLI   $PTNCCWS(PRTPTR),0                                  0191
         BE    @RT00191                                            0191
*     GOTO S24C0252;                /* SET RC=0C AND CHK FOR CC      */
*   DPRCAW='CAW';                   /* MOVE 'CAW' INTO OUT BUFR CONV
*                                      CAW TO OUT BUFR               */
*                                                                  0193
         LA    @14,1976                                            0193
         ALR   @14,WAPTR                                           0193
         MVC   DPRCAW(3,@14),@CC00904                              0193
*   /*****************************************************************/
*   /*                                                               */
*   /* ITACONV FROM($PTCCWA)TO(DPRCAWAD)COUNT(4)TYPE(HE) INVOKED     */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0194
*   ITATCFR=ADDR($PTCCWA);          /* SET THE FROM ADDRESS          */
         LA    @00,$PTCCWA(,DPRPTR)                                0194
         ST    @00,ITATCFR                                         0194
*   ITATCTO=ADDR(DPRCAWAD);         /* SET THE TO ADDRESS            */
         LA    @14,DPRCAWAD(,@14)                                  0195
         ST    @14,ITATCTO                                         0195
*   ITATCTP='1'B;                   /* SET THE TYPE OF CONVERT BIT   */
         OI    ITATCTP,B'10000000'                                 0196
*   ITATCNT=4;                      /* GIVE THE CONVERT BYTE COUNT   */
         MVI   ITATCNT,X'04'                                       0197
*   R1=ADDR(ITATCPRM);              /* POINT TO CONVERT PARM LIST    */
         LA    R1,ITATCPRM                                         0198
*   CALL ISTSC021;                  /* CALL CONVERT DIRECTLY         */
         L     @15,@CV00877                                        0199
         BALR  @14,@15                                             0199
*   DO $CTR=1 TO $PTNCCWS;          /* LOOP THRU CCW LIST            */
         LA    @14,1                                               0200
         B     @DE00200                                            0200
@DL00200 DS    0H                                                  0201
*     DPRCCW='CCW';                 /* PUT 'CCW' IN BUFFER           */
         LA    @14,1976                                            0201
         ALR   @14,WAPTR                                           0201
         MVC   DPRCCW(3,@14),@CC00905                              0201
*     CVD($CTR,DPRWORK2);           /* CONVERT CCW # TO DECIMAL      */
         LH    @00,$CTR(,WAPTR)                                    0202
         CVD   @00,@TS00001                                        0202
         MVC   DPRWORK2(2,WAPTR),@TS00001+6                        0202
*     DPRWORK2=DPRWORK2/16;         /* GET RID OF SIGN BITS CONV CCW
*                                      # TO OUT BUFR                 */
*                                                                  0203
         LH    @00,DPRWORK2(,WAPTR)                                0203
         N     @00,@CF01082                                        0203
         SRL   @00,4                                               0203
         STH   @00,DPRWORK2(,WAPTR)                                0203
*     /***************************************************************/
*     /*                                                             */
*     /* ITACONV FROM(DPRWORK2(2))TO(DPRCCW#)COUNT(1)TYPE(HE) INVOKED*/
*     /*                                                             */
*     /***************************************************************/
*                                                                  0204
*     ITATCFR=ADDR(DPRWORK2(2));    /* SET THE FROM ADDRESS          */
         LA    @00,DPRWORK2+1(,WAPTR)                              0204
         ST    @00,ITATCFR                                         0204
*     ITATCTO=ADDR(DPRCCW#);        /* SET THE TO ADDRESS            */
         LA    @14,DPRCCW#(,@14)                                   0205
         ST    @14,ITATCTO                                         0205
*     ITATCTP='1'B;                 /* SET THE TYPE OF CONVERT BIT   */
         OI    ITATCTP,B'10000000'                                 0206
*     ITATCNT=1;                    /* GIVE THE CONVERT BYTE COUNT   */
         MVI   ITATCNT,X'01'                                       0207
*     R1=ADDR(ITATCPRM);            /* POINT TO CONVERT PARM LIST    */
         LA    R1,ITATCPRM                                         0208
*     CALL ISTSC021;                /* CALL CONVERT DIRECTLY CONVERT
*                                      CCW TO WORK AREA              */
*                                                                  0209
         L     @15,@CV00877                                        0209
         BALR  @14,@15                                             0209
*     /***************************************************************/
*     /*                                                             */
*     /* ITACONV FROM(S24CCWA($CTR))TO(DPRWORK)COUNT(8)TYPE(HE)      */
*     /* INVOKED                                                     */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0210
*     ITATCFR=ADDR(S24CCWA($CTR));  /* SET THE FROM ADDRESS          */
         LH    @14,$CTR(,WAPTR)                                    0210
         SLA   @14,3                                               0210
         L     @11,$PTCCWA(,DPRPTR)                                0210
         AL    @11,@CF01084                                        0210
         LA    @14,S24CCWA(@14,@11)                                0210
         ST    @14,ITATCFR                                         0210
*     ITATCTO=ADDR(DPRWORK);        /* SET THE TO ADDRESS            */
         LA    @14,DPRWORK(,WAPTR)                                 0211
         ST    @14,ITATCTO                                         0211
*     ITATCTP='1'B;                 /* SET THE TYPE OF CONVERT BIT   */
         OI    ITATCTP,B'10000000'                                 0212
*     ITATCNT=8;                    /* GIVE THE CONVERT BYTE COUNT   */
         MVI   ITATCNT,X'08'                                       0213
*     R1=ADDR(ITATCPRM);            /* POINT TO CONVERT PARM LIST    */
         LA    R1,ITATCPRM                                         0214
*     CALL ISTSC021;                /* CALL CONVERT DIRECTLY         */
         L     @15,@CV00877                                        0215
         BALR  @14,@15                                             0215
*     DPRCMDCD=S24CCWCD;            /* MOVE CMND CODE TO BUFR        */
         LA    @14,1976                                            0216
         ALR   @14,WAPTR                                           0216
         LA    @11,2376                                            0216
         ALR   @11,WAPTR                                           0216
         MVC   DPRCMDCD(2,@14),S24CCWCD(@11)                       0216
*     DPRDATA=S24CCWDA;             /* MOVE ADDR TO BUFR             */
         MVC   DPRDATA(6,@14),S24CCWDA(@11)                        0217
*     DPRSPARE=S24CCWEX;            /* MOVE IN UNUSED BYTES          */
         MVC   DPRSPARE(2,@14),S24CCWEX(@11)                       0218
*     DPRFLAGS=S24CCWFL;            /* MOVE FLAGS TO BUFR            */
         MVC   DPRFLAGS(2,@14),S24CCWFL(@11)                       0219
*     DPRCOUNT=S24CCWCT;            /* MOVE COUNT TO BUFR            */
         MVC   DPRCOUNT(4,@14),S24CCWCT(@11)                       0220
*     IF $CTR=$PTFCCWS&             /* IF THIS IS THE FAILING CCW    */
*         $CCWERR=ON                /* AND IT REALLY WAS AN ERROR    */
*       THEN                                                       0221
         LH    @00,$CTR(,WAPTR)                                    0221
         SLR   @11,@11                                             0221
         IC    @11,$PTFCCWS(,PRTPTR)                               0221
         CR    @00,@11                                             0221
         BNE   @RF00221                                            0221
         TM    $CCWERR(PRTPTR),B'01000000'                         0221
         BNO   @RF00221                                            0221
*       DPRCCWER='*';               /* PUT AN '*' IN THE PRT BFR     */
         MVI   DPRCCWER(@14),C'*'                                  0222
*     CALL S24C2000;                /* CHECK FOR PP LEVELS 2 & 3 AND
*                                      PUT OUT LINE                  */
@RF00221 BAL   @14,S24C2000                                        0223
*   END;                                                           0224
*                                                                  0224
         LA    @14,1                                               0224
         AH    @14,$CTR(,WAPTR)                                    0224
@DE00200 STH   @14,$CTR(,WAPTR)                                    0224
         SLR   @00,@00                                             0224
         IC    @00,$PTNCCWS(,PRTPTR)                               0224
         CR    @14,@00                                             0224
         BNH   @DL00200                                            0224
*/********************************************************************/
*/*      EXPECTED/RECEIVED CONDITION CODE LINE                       */
*/********************************************************************/
*                                                                  0225
*S24C0300:                                                         0225
*   IF $CONCODE=OFF                 /* IF NOT TO PRINT CC LINE       */
*     THEN                                                         0225
S24C0300 TM    $CONCODE(PRTPTR),B'00000100'                        0225
         BZ    @RT00225                                            0225
*     GOTO S24C0350;                /* GO CHECK FOR CSW LINE         */
*   IF $PTECC=0                     /* IF NO EXPECTED CC IS GIVEN    */
*     THEN                          /*                               */
         CLI   $PTECC(PRTPTR),0                                    0227
         BNE   @RF00227                                            0227
*S24C0310:                                                         0228
*     DO;                           /* THEN                          */
S24C0310 DS    0H                                                  0229
*       CALL S24C2600;              /* BLANK OUT BUFFER              */
         BAL   @14,S24C2600                                        0229
*       $24RETCD='0C'X;             /* SET RC = 0C &                 */
         MVI   $24RETCD(WAPTR),X'0C'                               0230
*       GOTO S24C0350;              /* GO CHK FOR XPTD CSW           */
         B     S24C0350                                            0231
*     END;                                                         0232
*   CCXPTDCD=$PTECC;                /* PUT XPTD CC IN PRT BFR        */
@RF00227 LA    @14,1976                                            0233
         ALR   @14,WAPTR                                           0233
         MVC   CCXPTDCD(1,@14),$PTECC(PRTPTR)                      0233
*   IF $PRTACCC^=0                  /* IF ACTUAL CC ADDR GIVEN       */
*     THEN                                                         0234
         L     @11,$PRTACCC(,DPRPTR)                               0234
         LTR   @11,@11                                             0234
         BZ    @RF00234                                            0234
*     CCCONDCD=S24CC;               /* PUT CC IN PRT BUFR            */
         IC    @00,S24CC(,@11)                                     0235
         STC   @00,CCCONDCD(,@14)                                  0235
*   ELSE                                                           0236
*     DO;                           /* IF CC ADDRESS NOT GIVEN       */
         B     @RC00234                                            0236
@RF00234 DS    0H                                                  0237
*       S24CCREQ=ON;                /* SEARCH TECB                   */
         OI    S24CCREQ+2680(WAPTR),B'10000000'                    0237
*       CALL S24C3000;                                             0238
         BAL   @14,S24C3000                                        0238
*       S24CCREQ=OFF;               /* TURN OFF CC SRCH FLG          */
         LA    @14,2680                                            0239
         ALR   @14,WAPTR                                           0239
         NI    S24CCREQ(@14),B'01111111'                           0239
*       IF S24TCBER=ON              /* IF NO TECB ADDR GIVEN         */
*         THEN                                                     0240
         TM    S24TCBER(@14),B'00010000'                           0240
         BO    @RT00240                                            0240
*         GOTO S24C0310;            /* (RC=0C) CHK XPTD CSW          */
*       IF S24SCHFL=ON THEN         /* IF SEARCH FAILED              */
         TM    S24SCHFL(@14),B'00001000'                           0242
         BNO   @RF00242                                            0242
*         DO;                       /* AND                           */
*           IF TCBQUEUE=ON          /* IF I/O QUEUED                 */
*             THEN                  /* PUT 'QUEUED' IN BFR           */
         TM    TCBQUEUE(TECBPTR),B'10000000'                       0244
         BNO   @RF00244                                            0244
*             DO;                                                  0245
*               CCQUEUED='QUEUED';  /* IF NOT QUEUED, PUT 0          */
         MVC   CCQUEUED+1976(6,WAPTR),@CC00912                     0246
*               GOTO S24C0320;                                     0247
         B     S24C0320                                            0247
*             END;                                                 0248
*           ELSE                    /* IN BFR- SIO ISSUED            */
*             CCCONDCD='0';         /* NO INTERRUPTS                 */
@RF00244 MVI   CCCONDCD+1976(WAPTR),C'0'                           0249
*         END;                      /* IF SEARCH SUCCESS PUT         */
*     END;                                                         0251
@RF00242 DS    0H                                                  0252
*   IF CCCONDCD='FF'X               /* IF CONDITION CODE IS FF       */
*     THEN                                                         0252
@RC00234 LA    @14,1976                                            0252
         ALR   @14,WAPTR                                           0252
         CLI   CCCONDCD(@14),X'FF'                                 0252
         BNE   @RF00252                                            0252
*     CCCONDCD='0';                 /* (FROM OLD EXIO) CHANG TO 0    */
         MVI   CCCONDCD(@14),C'0'                                  0253
*   IF CCCONDCD(1:4)^='1111'B THEN  /* IF IT IS NOT A PRINTABLE #    */
@RF00252 TM    CCCONDCD+1976(WAPTR),B'11110000'                    0254
         BNO   @RT00254                                            0254
*     GOTO S24C0310;                /* RC=0C, GO CHK FOR XPTD CSW    */
*S24C0320:                                                         0256
*   CCXPTDCC='XPTD CC';             /* PUT 'XPTD CC' IN PRT BUFR     */
S24C0320 LA    @14,1976                                            0256
         ALR   @14,WAPTR                                           0256
         MVC   CCXPTDCC(7,@14),@CC00917                            0256
*   CCRCVDCC='RCVD CC';             /* PUT 'RCVD CC' IN PRT BUFR     */
         MVC   CCRCVDCC(7,@14),@CC00919                            0257
*   IF $CCERROR=ON                  /* IF CC WAS IN ERROR            */
*     THEN                                                         0258
         TM    $CCERROR(PRTPTR),B'00000010'                        0258
         BNO   @RF00258                                            0258
*     CCERROR='*';                  /* PUT '*' IN PRINT LINE         */
         MVI   CCERROR(@14),C'*'                                   0259
*   CALL S24C2000;                  /* CHK FOR PP LEVELS 2 & 3 OUTPUT
*                                      LINE                          */
@RF00258 BAL   @14,S24C2000                                        0260
*/********************************************************************/
*/*      EXPECTED CSW/PSW LINE                                       */
*/********************************************************************/
*                                                                  0261
*S24C0350:                                                         0261
*   CSWXPTRC='XPTD CSW1';           /* PUT 'XPTD CSW1' IN PRT BFR    */
S24C0350 LA    @14,1976                                            0261
         ALR   @14,WAPTR                                           0261
         MVC   CSWXPTRC(9,@14),@CC00920                            0261
*   IF $PSWCSW=ON                   /* IF THIS IS A PSW LINE         */
*     THEN                                                         0262
         TM    $PSWCSW(PRTPTR),B'00000001'                         0262
         BNO   @RF00262                                            0262
*     CSWPSW1='P';                  /* CHANGE CSW TO PSW IN BFR      */
         MVI   CSWPSW1(@14),C'P'                                   0263
*   BFRPTR=ADDR(CSW1KEY);           /* LOC IN BUFR FOR CSW/PSW       */
@RF00262 LA    BFRPTR,CSW1KEY+1976(,WAPTR)                         0264
*   MASK=$PTXCSWM;                  /* SET UP CSW1 MASK              */
         MVC   MASK(1),$PTXCSWM(PRTPTR)                            0265
*   IF $XPDCSW1=OFF THEN            /* IF NOT TO PRT XPTD CSW1       */
         TM    $XPDCSW1(PRTPTR),B'00100000'                        0266
         BNZ   @RF00266                                            0266
*S24C0353:                                                         0267
*     DO;                                                          0267
S24C0353 DS    0H                                                  0268
*       IF $XPDCSW2=OFF             /* AND NO CSW2 EITHER            */
*         THEN                                                     0268
         TM    $XPDCSW2(PRTPTR),B'00001000'                        0268
         BZ    @RT00268                                            0268
*         GOTO S24C0400;            /* CHK FOR RECEIVED CSW          */
*       CSW#='2';                   /* ELSE CHNG CSW/PSW1 TO 2       */
         MVI   CSW#+1976(WAPTR),C'2'                               0270
*       GOTO S24C0355;              /* GO CHK ON CSW/PSW2            */
         B     S24C0355                                            0271
*     END;                                                         0272
*   IF $PTXCSW1=0                   /* IF CSW1 ADDR = 0              */
*     THEN                          /*                               */
@RF00266 L     @14,$PTXCSW1(,DPRPTR)                               0273
         LTR   @14,@14                                             0273
         BNZ   @RF00273                                            0273
*     DO;                           /*                               */
*       $24RETCD='0C'X;             /* SET RC = 0C                   */
         MVI   $24RETCD(WAPTR),X'0C'                               0275
*       GOTO S24C0353;              /* CHK FOR CSW2 PRINT            */
         B     S24C0353                                            0276
*     END;                                                         0277
*   CSWPSWPT=$PTXCSW1;              /* PT TO PSW1/CSW1 TO XLATE      */
@RF00273 L     @14,$PTXCSW1(,DPRPTR)                               0278
         ST    @14,CSWPSWPT                                        0278
*   CALL S24C5000;                  /* XLATE & PUT CSW/PSW IN BUF    */
         BAL   @14,S24C5000                                        0279
*   IF $XPDCSW2=OFF                 /* IF NOT TO PRINT CSW2          */
*     THEN                                                         0280
         TM    $XPDCSW2(PRTPTR),B'00001000'                        0280
         BZ    @RT00280                                            0280
*     GOTO S24C0360;                /* THEN OUTPUT LINE              */
*   CSW2CSW2='CSW2';                /* ELSE PUT 'CSW2' IN BFR        */
         LA    @14,1976                                            0282
         ALR   @14,WAPTR                                           0282
         MVC   CSW2CSW2(4,@14),@CC00931                            0282
*   IF $PSWCSW=ON                   /* IF PSW PRINT,                 */
*     THEN                                                         0283
         TM    $PSWCSW(PRTPTR),B'00000001'                         0283
         BNO   @RF00283                                            0283
*     CSWPSW2='P';                  /* CHANGE CSW2 TO PSW2           */
         MVI   CSWPSW2(@14),C'P'                                   0284
*   BFRPTR=ADDR(CSW2KEY);           /* LOC IN BFR FOR CSW2/PSW2      */
@RF00283 LA    BFRPTR,CSW2KEY+1976(,WAPTR)                         0285
*S24C0355:                                                         0286
*   MASK=MASK*16;                   /* SHIFT CSW2 MSK TO POSITION    */
S24C0355 SLR   @14,@14                                             0286
         IC    @14,MASK                                            0286
         SLA   @14,4                                               0286
         STC   @14,MASK                                            0286
*   IF $PTXCSW2=0                   /* IF CSW2 ADDR = 0              */
*     THEN                          /*                               */
         L     @14,$PTXCSW2(,DPRPTR)                               0287
         LTR   @14,@14                                             0287
         BNZ   @RF00287                                            0287
*     DO;                           /*                               */
*       $24RETCD='0C'X;             /* SET RC = 0C                   */
         MVI   $24RETCD(WAPTR),X'0C'                               0289
*       GOTO S24C0400;              /* CHK FOR RCVD CSW              */
         B     S24C0400                                            0290
*     END;                                                         0291
*   CSWPSWPT=$PTXCSW2;              /* PT TO PSW2/CSW2 TO XLATE      */
@RF00287 L     @14,$PTXCSW2(,DPRPTR)                               0292
         ST    @14,CSWPSWPT                                        0292
*   CALL S24C5000;                  /* XLATE & PUT CSW/PSW IN BFR    */
         BAL   @14,S24C5000                                        0293
*S24C0360:                                                         0294
*   CALL S24C2000;                  /* CHK PP LEVL 2&3, PRT LINE     */
S24C0360 BAL   @14,S24C2000                                        0294
*/********************************************************************/
*/*      RECEIVED CSW/PSW LINE                                       */
*/********************************************************************/
*                                                                  0295
*S24C0400:                                                         0295
*   CSWXPTRC='RCVD CSW1';           /* PUT'RCVD CSW1' IN BUFR        */
S24C0400 LA    @14,1976                                            0295
         ALR   @14,WAPTR                                           0295
         MVC   CSWXPTRC(9,@14),@CC00934                            0295
*   CSW1NONE='NONE';                /* ASSUME CSW1 NONE              */
         MVC   CSW1NONE(4,@14),@CC00880                            0296
*   IF $PSWCSW=ON                   /* IF TO PRINT PSW               */
*     THEN                                                         0297
         TM    $PSWCSW(PRTPTR),B'00000001'                         0297
         BNO   @RF00297                                            0297
*     CSWPSW1='P';                  /* CHANGE CSW1 TO PSW1           */
         MVI   CSWPSW1(@14),C'P'                                   0298
*   IF $CSW1ERR=ON                  /* IF ERROR PSW/CSW 1/2          */
*     THEN                                                         0299
@RF00297 TM    $CSW1ERR(PRTPTR),B'00100000'                        0299
         BNO   @RF00299                                            0299
*     CSWPSWER='*';                 /* PREFIX LINE WITH *            */
         MVI   CSWPSWER+1976(WAPTR),C'*'                           0300
*   BFRPTR=ADDR(CSW1KEY);           /* POINT TO FLD IN BFR           */
@RF00299 LA    BFRPTR,CSW1KEY+1976(,WAPTR)                         0301
*   MASK='1111'B;                   /* SET MASK TO PRT ALL FLDS      */
         MVI   MASK,B'11110000'                                    0302
*   IF $RCVCSW1=OFF                 /* IF NOT TO PRT RCVD CSW/       */
*     THEN                          /*                               */
         TM    $RCVCSW1(PRTPTR),B'00010000'                        0303
         BNZ   @RF00303                                            0303
*     DO;                           /* AND                           */
*       IF $RCVCSW2=OFF             /* NOT PRT CSW2 EITHER           */
*         THEN                      /*                               */
         TM    $RCVCSW2(PRTPTR),B'00000100'                        0305
         BNZ   @RF00305                                            0305
*S24C0402:                                                         0306
*         DO;                       /*                               */
S24C0402 DS    0H                                                  0307
*           CALL S24C2600;          /* BLANK OUT BUFFER              */
         BAL   @14,S24C2600                                        0307
*           GOTO S24C0450;          /* CHK ON XPTD SENSE             */
         B     S24C0450                                            0308
*         END;                                                     0309
*       ELSE                                                       0310
*         DO;                       /* ELSE                          */
@RF00305 DS    0H                                                  0311
*S24C0405:                                                         0311
*           CSW#='2';               /* CHNG CSW1 TO 2                */
S24C0405 MVI   CSW#+1976(WAPTR),C'2'                               0311
*           GOTO S24C0440;          /* GO PICK UP RCVD CSW2          */
         B     S24C0440                                            0312
*         END;                                                     0313
*     END;                                                         0314
*   IF $PTRCSW1=0                   /* IF CSW1 ADDR = 0              */
*     THEN                          /* THEN                          */
@RF00303 L     @14,$PTRCSW1(,DPRPTR)                               0315
         LTR   @14,@14                                             0315
         BNZ   @RF00315                                            0315
*     DO;                           /* SEARCH TECB                   */
*       CALL S24C3000;                                             0317
         BAL   @14,S24C3000                                        0317
*       IF S24TCBER=ON              /* IF TECB ADDR = 0              */
*         THEN                      /* (RC = 0C SET IN SRCH RTN)     */
         LA    @14,2680                                            0318
         ALR   @14,WAPTR                                           0318
         TM    S24TCBER(@14),B'00010000'                           0318
         BO    @RT00318                                            0318
*         GOTO S24C0405;            /* CHK ON CSW2                   */
*       IF S24SCHFL=ON              /* IF TECB SEARCH FAILED,        */
*         THEN                                                     0320
         TM    S24SCHFL(@14),B'00001000'                           0320
         BO    @RT00320                                            0320
*         GOTO S24C0430;            /* GO CHK FOR CSW/PSW2           */
*     END;                                                         0322
*   ELSE                                                           0323
*     CSWPSWPT=$PTRCSW1;            /* USE CSWTPR GIVEN              */
         B     @RC00315                                            0323
@RF00315 L     @14,$PTRCSW1(,DPRPTR)                               0323
         ST    @14,CSWPSWPT                                        0323
*   CALL S24C5000;                  /* XLATE & PUT CSW/PSW IN BFR    */
@RC00315 BAL   @14,S24C5000                                        0324
*S24C0430:                                                         0325
*   IF $RCVCSW2=OFF                 /* IF NO CSW2 TO PRINT           */
*     THEN                                                         0325
S24C0430 TM    $RCVCSW2(PRTPTR),B'00000100'                        0325
         BZ    @RT00325                                            0325
*     GOTO S24C0445;                /* OUTPUT LINE                   */
*   CSW2CSW2='CSW2';                /* PUT 'CSW2' IN BUFR            */
         LA    @14,1976                                            0327
         ALR   @14,WAPTR                                           0327
         MVC   CSW2CSW2(4,@14),@CC00931                            0327
*   CSW2NONE='NONE';                /* ASSUME NONE FOR CSW2          */
         MVC   CSW2NONE(4,@14),@CC00880                            0328
*   IF $PSWCSW=ON                   /* IF A PSW TO PRINT             */
*     THEN                                                         0329
         TM    $PSWCSW(PRTPTR),B'00000001'                         0329
         BNO   @RF00329                                            0329
*     CSWPSW2='P';                  /* CHANGE CSW2 TO PSW2           */
         MVI   CSWPSW2(@14),C'P'                                   0330
*   BFRPTR=ADDR(CSW2KEY);           /* LOC IN PRT BFR FOR RCVDCSW    */
@RF00329 LA    BFRPTR,CSW2KEY+1976(,WAPTR)                         0331
*S24C0440:                                                         0332
*   IF $PTRCSW2=0                   /* IF NO RCVD CSW2 ADDR GIVEN    */
*     THEN                          /* SEARCH TECB	                  */
S24C0440 L     @14,$PTRCSW2(,DPRPTR)                               0332
         LTR   @14,@14                                             0332
         BNZ   @RF00332                                            0332
*     DO;                                                          0333
*       S24CSW2R=ON;                /* LOOK FOR 2ND CSW              */
         OI    S24CSW2R+2680(WAPTR),B'01000000'                    0334
*       CALL S24C3000;              /*                               */
         BAL   @14,S24C3000                                        0335
*       S24CSW2R=OFF;               /* RESET 2ND CSW SRCH FLG        */
         LA    @14,2680                                            0336
         ALR   @14,WAPTR                                           0336
         NI    S24CSW2R(@14),B'10111111'                           0336
*       IF S24TCBER=ON              /* IF TECB ADDR = 0              */
*         THEN                      /* (RC=0C SET IN SRCH RTN)       */
         TM    S24TCBER(@14),B'00010000'                           0337
         BO    @RT00337                                            0337
*         GOTO S24C0450;            /* GO CHK ON XPTD SENSE          */
*       IF S24SCHFL=ON THEN         /* IF SEARCH FAILED, PRNT        */
         TM    S24SCHFL(@14),B'00001000'                           0339
         BO    @RT00339                                            0339
*         GOTO S24C0445;            /* BYPASS LINE SETUP             */
*     END;                                                         0341
*   ELSE                                                           0342
*     CSWPSWPT=$PTRCSW2;            /* USE CSW2 PTR GIVNE            */
         B     @RC00332                                            0342
@RF00332 L     @14,$PTRCSW2(,DPRPTR)                               0342
         ST    @14,CSWPSWPT                                        0342
*   CALL S24C5000;                  /* XLATE & PUT CSW/PSW IN BFR    */
@RC00332 BAL   @14,S24C5000                                        0343
*S24C0445:                                                         0344
*   CALL S24C2000;                  /* CHK PP LEV 2/3,OUTPUT LINE    */
S24C0445 BAL   @14,S24C2000                                        0344
*/********************************************************************/
*/*      EXPECTED SENSE LINES                                        */
*/********************************************************************/
*                                                                  0345
*S24C0450:                                                         0345
*   IF $XPTDSNS=OFF                 /* IF NOT TO PRT XPTD SENSE      */
*     THEN                                                         0345
S24C0450 TM    $XPTDSNS(PRTPTR),B'00000010'                        0345
         BZ    @RT00345                                            0345
*     GOTO S24C0500;                /* GO CHK FOR RCVD SNS           */
*   IF $PTXSNSA=0×$PTXSNSC=0        /* IF XPTD SNS ADDR OR COUNT     */
*     THEN                          /* = 0                           */
         L     @14,$PTXSNSA(,DPRPTR)                               0347
         LTR   @14,@14                                             0347
         BZ    @RT00347                                            0347
         CLI   $PTXSNSC(PRTPTR),0                                  0347
         BNE   @RF00347                                            0347
@RT00347 DS    0H                                                  0348
*     DO;                           /* THEN                          */
*       $24RETCD='0C'X;             /* RC = 0C                       */
         MVI   $24RETCD(WAPTR),X'0C'                               0349
*       GOTO S24C0500;              /* GO CHK FOR RCVD SNS           */
         B     S24C0500                                            0350
*     END;                                                         0351
*   $NSXX=$PTXSNSC;                 /* COUNT OF SENSE DATA           */
@RF00347 SLR   @14,@14                                             0352
         IC    @14,$PTXSNSC(,PRTPTR)                               0352
         STH   @14,$NSXX(,WAPTR)                                   0352
*   $NSPTR=$PTXSNSA;                /* PTR TO SENSE DATA             */
         L     @14,$PTXSNSA(,DPRPTR)                               0353
         ST    @14,$NSPTR(,WAPTR)                                  0353
*   SNSXPRCV='XPTD SNS';            /* PUT'XPTD SNS' IN BUFR         */
         MVC   SNSXPRCV+1976(8,WAPTR),@CC00950                     0354
*   CALL S24C6000;                  /* STRUCTURE & PRINT SNS LNES    */
         BAL   @14,S24C6000                                        0355
*/********************************************************************/
*/*      RECEIVED SENSE LINES                                        */
*/********************************************************************/
*                                                                  0356
*S24C0500:                                                         0356
*   IF $RCVDSNS=OFF                 /* IF NOT TO PRT RCVD SNS        */
*     THEN                                                         0356
S24C0500 TM    $RCVDSNS(PRTPTR),B'00000001'                        0356
         BZ    @RT00356                                            0356
*     GOTO S24C0550;                /* GO CHK OUT XPTD DATA          */
*   IF $PTRSNSC=0                   /* IF SENSE COUNT IS 0           */
*     THEN                          /*                               */
         CLI   $PTRSNSC(PRTPTR),0                                  0358
         BNE   @RF00358                                            0358
*     DO;                           /*                               */
*S24C0510:                                                         0360
*       CALL S24C2600;              /* BLANK BUFFER                  */
S24C0510 BAL   @14,S24C2600                                        0360
*       $24RETCD='0C'X;             /* SET RC=0C                     */
         MVI   $24RETCD(WAPTR),X'0C'                               0361
*       GOTO S24C0550;              /* AND GO CHK XPTD DATA          */
         B     S24C0550                                            0362
*     END;                                                         0363
*   SNSXPRCV='RCVD SNS';            /* PUT 'RCVD SNS' IN BUFR        */
@RF00358 LA    @14,1976                                            0364
         ALR   @14,WAPTR                                           0364
         MVC   SNSXPRCV(8,@14),@CC00956                            0364
*   IF $SENSERR=ON                  /* IF SNS AN ERROR               */
*     THEN                                                         0365
         TM    $SENSERR(PRTPTR),B'00000010'                        0365
         BNO   @RF00365                                            0365
*     SNSASTRK='*';                 /* PRECEDE LINE WITH *           */
         MVI   SNSASTRK(@14),C'*'                                  0366
*   IF $PTRSNSA^=0                  /* IF ADDR OF RCVD SNS GIVEN     */
*     THEN                                                         0367
@RF00365 L     @14,$PTRSNSA(,DPRPTR)                               0367
         LTR   @14,@14                                             0367
         BZ    @RF00367                                            0367
*     $NSPTR=$PTRSNSA;              /* USE IT TO PRINT OUT LINES     */
         ST    @14,$NSPTR(,WAPTR)                                  0368
*   ELSE                            /*                               */
*     DO;                           /* IF ADDR NOT GIVEN             */
         B     @RC00367                                            0369
@RF00367 DS    0H                                                  0370
*       S24SNSRQ=ON;                /* SEARCH TECB FOR SNS FLD       */
         OI    S24SNSRQ+2680(WAPTR),B'00100000'                    0370
*       CALL S24C3000;                                             0371
         BAL   @14,S24C3000                                        0371
*       S24SNSRQ=OFF;                                              0372
         LA    @14,2680                                            0372
         ALR   @14,WAPTR                                           0372
         NI    S24SNSRQ(@14),B'11011111'                           0372
*       IF S24TCBER=ON              /* IF TECB ADDR = 0              */
*         THEN                                                     0373
         TM    S24TCBER(@14),B'00010000'                           0373
         BO    @RT00373                                            0373
*         GOTO S24C0510;            /* RC=0C GO CHK ON XPTD DATA     */
*       IF S24SCHFL=ON              /* IF SEARCH FAILED              */
*         THEN                      /* PUT 'NONE' IN PRT BUFR        */
         TM    S24SCHFL(@14),B'00001000'                           0375
         BNO   @RF00375                                            0375
*         DO;                                                      0376
*           SNSNONE='NONE';                                        0377
         MVC   SNSNONE+1976(4,WAPTR),@CC00880                      0377
*           CALL S24C2000;          /* CHK PP 2&3 AND PRT LINE       */
         BAL   @14,S24C2000                                        0378
*           GOTO S24C0550;          /* THAT'S IT, CHK XPTD DATA      */
         B     S24C0550                                            0379
*         END;                                                     0380
*     END;                                                         0381
@RF00375 DS    0H                                                  0382
*   $NSXX=$PTRSNSC;                 /* # OF SNS BYTES TO PRINT       */
@RC00367 SLR   @14,@14                                             0382
         IC    @14,$PTRSNSC(,PRTPTR)                               0382
         STH   @14,$NSXX(,WAPTR)                                   0382
*   CALL S24C6000;                  /* GO SET UP & OUTPUT LINE(S)    */
         BAL   @14,S24C6000                                        0383
*/********************************************************************/
*/*      EXPECTED DATA LINE(S)                                       */
*/********************************************************************/
*                                                                  0384
*S24C0550:                                                         0384
*   IF $XPTDATA=OFF                 /* IF NOT TO PRINT XPTD DATA     */
*     THEN                                                         0384
S24C0550 TM    $XPTDATA(PRTPTR),B'10000000'                        0384
         BZ    @RT00384                                            0384
*     GOTO S24C0600;                /* GO CHK RCVD DATA              */
*   $ATAPTR=$PTXDATA;               /* PT TO XPTD DATA               */
         L     @14,$PTXDATA(,DPRPTR)                               0386
         ST    @14,$ATAPTR(,WAPTR)                                 0386
*   $ATACNT=$PTXDATC;               /* XPTD DATA COUNT               */
         MVC   $ATACNT(2,WAPTR),$PTXDATC(PRTPTR)                   0387
*   DATAXPRC='XPTD DATA';           /* PUT 'XPTD DATA IN BFR         */
         MVC   DATAXPRC+1976(9,WAPTR),@CC00959                     0388
*   CALL S24C7000;                  /* SET UP & OUTPUT LINES         */
         BAL   @14,S24C7000                                        0389
*/********************************************************************/
*/*      RECEIVED DATA LINE(S)                                       */
*/********************************************************************/
*                                                                  0390
*S24C0600:                                                         0390
*   IF $RCVDATA=OFF                 /* IF NOT TO PRT RCVD DATA       */
*     THEN                                                         0390
S24C0600 TM    $RCVDATA(PRTPTR),B'01000000'                        0390
         BZ    @RT00390                                            0390
*     GOTO S24C0650;                /* GO CHK ON WRITTEN DATA        */
*   $ATAPTR=$PTRDATA;               /* PT TO RCVD DATA               */
         L     @14,$PTRDATA(,DPRPTR)                               0392
         ST    @14,$ATAPTR(,WAPTR)                                 0392
*   $ATACNT=$PTRDATC;               /* COUNT OF RCVD DATA            */
         MVC   $ATACNT(2,WAPTR),$PTRDATC(PRTPTR)                   0393
*   DATAXPRC='RCVD DATA';           /* PUT 'RCVD DATA' IN PRT BFR    */
         LA    @14,1976                                            0394
         ALR   @14,WAPTR                                           0394
         MVC   DATAXPRC(9,@14),@CC00964                            0394
*   IF $DATAERR=ON                  /* IF ERROR IN DATA              */
*     THEN                                                         0395
         TM    $DATAERR(PRTPTR),B'00001000'                        0395
         BNO   @RF00395                                            0395
*     DATAERR='*';                  /* MARK WITH AN *                */
         MVI   DATAERR(@14),C'*'                                   0396
*   CALL S24C7000;                  /* SET UP & OUTPUT LINE          */
@RF00395 BAL   @14,S24C7000                                        0397
*/********************************************************************/
*/*      WRITTEN DATA LINE(S)                                        */
*/********************************************************************/
*                                                                  0398
*S24C0650:                                                         0398
*   IF $WRTDATA=OFF                 /* IF NO WRT DATA TO PRINT       */
*     THEN                                                         0398
S24C0650 TM    $WRTDATA(PRTPTR),B'00100000'                        0398
         BZ    @RT00398                                            0398
*     GOTO S24C0700;                /* CHK ON MSG LINES              */
*   $ATAPTR=$PTWDATA;               /* PT TO WRITTEN DATA            */
         L     @14,$PTWDATA(,DPRPTR)                               0400
         ST    @14,$ATAPTR(,WAPTR)                                 0400
*   $ATACNT=$PTWDATC;               /* COUNT OF WRT DATA             */
         MVC   $ATACNT(2,WAPTR),$PTWDATC(PRTPTR)                   0401
*   DATAWRT='WRTN DATA';            /* PUT 'WRTN DATA' IN BUFR       */
         MVC   DATAWRT+1976(9,WAPTR),@CC00968                      0402
*   CALL S24C7000;                  /* SET UP & OUTPUT LINES         */
         BAL   @14,S24C7000                                        0403
*/********************************************************************/
*/*      MESSAGE (COMMENT) LINES                                     */
*/********************************************************************/
*                                                                  0404
*S24C0700:                                                         0404
*   IF $MESSAGE=OFF                 /* IF NO MESSAGE LINES           */
*     THEN                                                         0404
S24C0700 TM    $MESSAGE(PRTPTR),B'00000001'                        0404
         BZ    @RT00404                                            0404
*     GOTO S24C0750;                /* DO SOMETHING WITH FORMSCTL    */
*   $DDRPTR=$PRTMSGL;               /* PT TO ARRAY OF MSG PTRS       */
         L     @14,$PRTMSGL(,DPRPTR)                               0406
         ST    @14,$DDRPTR(,WAPTR)                                 0406
*   $OUNTPTR=$PTMSGOF+$PRTCTLW;     /* PT TO ARRAY OF MSG COUNTS     */
         SLR   @14,@14                                             0407
         IC    @14,$PTMSGOF(,PRTPTR)                               0407
         AL    @14,$PRTCTLW(,DPRPTR)                               0407
         ST    @14,$OUNTPTR(,WAPTR)                                0407
*   $UMXX=$PTMSGLC;                 /* NUMBER OF MSG LINES           */
         IC    @14,$PTMSGLC(,PRTPTR)                               0408
         STC   @14,$UMXX(,WAPTR)                                   0408
*   CALL S24C1000;                  /* SET UP & PRT MSG LINES        */
         BAL   @14,S24C1000                                        0409
*/********************************************************************/
*/*     FORMS CONTROL                                                */
*/********************************************************************/
*                                                                  0410
*S24C0750:                                                         0410
*   $PRTFORM=$PTCNTWD(1:1);         /* SET UP PRINT FORMS            */
S24C0750 MVC   $PRTFORM(1,WAPTR),$PTCNTWD(PRTPTR)                  0410
*   $PRTFORM=$PRTFORM/32;           /* MOVE TO LOWER 3 BITS          */
         SLR   @14,@14                                             0411
         IC    @14,$PRTFORM(,WAPTR)                                0411
         SRL   @14,5                                               0411
         STC   @14,$PRTFORM(,WAPTR)                                0411
*   IF $PRTFORM^=2&                 /* IF NOT TO SPACE 2 LINES       */
*       $PRTFORM^=3                 /* AND NOT 3 LINES               */
*     THEN                                                         0412
         CLI   $PRTFORM(WAPTR),2                                   0412
         BE    @RF00412                                            0412
         CLI   $PRTFORM(WAPTR),3                                   0412
         BNE   @RT00412                                            0412
*     GOTO S24C0755;                /* DON'T GO TO MSG I/0           */
*   ELSE                                                           0414
*     DO $CTR=1 TO $PRTFORM-1;      /* DO BLANK LINES                */
@RF00412 LA    @14,1                                               0414
         B     @DE00414                                            0414
@DL00414 DS    0H                                                  0415
*       CALL S24C2500;              /* GO TO MSG I/O                 */
         BAL   @14,S24C2500                                        0415
*     END;                                                         0416
         LA    @14,1                                               0416
         AH    @14,$CTR(,WAPTR)                                    0416
@DE00414 STH   @14,$CTR(,WAPTR)                                    0416
         SLR   @00,@00                                             0416
         IC    @00,$PRTFORM(,WAPTR)                                0416
         BCTR  @00,0                                               0416
         CR    @14,@00                                             0416
         BNH   @DL00414                                            0416
*S24C0755:                                                         0417
*   IF $PRTFORM=4                   /* IF FOR PRT &RESTORE           */
*       ×$PRTFORM=5                 /* OR FOR RESTORE                */
*     THEN                                                         0417
S24C0755 CLI   $PRTFORM(WAPTR),4                                   0417
         BE    @RT00417                                            0417
         CLI   $PRTFORM(WAPTR),5                                   0417
         BNE   @RF00417                                            0417
@RT00417 DS    0H                                                  0418
*     CALL S24C2500;                /* THEN GOTO MSG I/O             */
         BAL   @14,S24C2500                                        0418
*   $PRTONLY=OFF;                   /* RESET PRINTER ONLY            */
@RF00417 NI    $PRTONLY(WAPTR),B'11110111'                         0419
*   R15=$24RETCD;                   /* PICK UP DPRINT RETURN CODE    */
         SLR   R15,R15                                             0420
         IC    R15,$24RETCD(,WAPTR)                                0420
*   $NOTRRCH=OFF;                   /* DO RC HDLG & TRACE NOW        */
         NI    $NOTRRCH(WAPTR),B'11111101'                         0421
*   $R13PTR=$24SAV13;               /* PT RCM TO MY CALLER'S SAVE  0422
*                                      AREA                          */
         L     @14,$24SAV13(,WAPTR)                                0422
         ST    @14,$R13PTR(,WAPTR)                                 0422
*   IF $ERRORDP=ON&(($FSTCOMM=ON&   /* IF THERE IS A FE MSG          */
*       $FSTFE=OFF)×($CATERR=ON     /* OR CATERR MSG TO SEND         */
*       &$FSTCAT=OFF))              /*                               */
*     THEN                          /*                               */
         TM    $ERRORDP(PRTPTR),B'00000010'                        0423
         BNO   @RF00423                                            0423
         TM    $FSTCOMM(WAPTR),B'00000001'                         0423
         BNO   @GL00012                                            0423
         TM    $FSTFE(WAPTR),B'10000000'                           0423
         BZ    @RT00423                                            0423
@GL00012 TM    $CATERR(WAPTR),B'00100000'                          0423
         BNO   @RF00423                                            0423
         TM    $FSTCAT(WAPTR),B'01000000'                          0423
         BNZ   @RF00423                                            0423
@RT00423 DS    0H                                                  0424
*     DO;                                                          0424
*       IF $DPCHAIN=OFF             /* AND IF DPRINT NOT CHAINED     */
*         THEN                                                     0425
         TM    $DPCHAIN(PRTPTR),B'00001000'                        0425
         BZ    @RT00425                                            0425
*         GOTO S24C0850;            /* GO CHK ON 1ST ERR             */
*     END;                                                         0427
*   ELSE                            /* ELSE                          */
*     GOTO S24C9999;                /* RETURN TO RCM                 */
*/********************************************************************/
*/*      FIRST ERROR MESSAGE                                         */
*/********************************************************************/
*                                                                  0429
*S24C0850:                                                         0429
*   IF $ERRORDP=ON&$FSTCOMM=ON&     /* IF THIS IS AN ERROR DP,FE     */
*       $FSTFE=OFF                  /* OPTN ON AND FE MSG HASN'T BEEN
*                                      ISSUED	                       */
*     THEN                                                         0429
S24C0850 TM    $ERRORDP(PRTPTR),B'00000010'                        0429
         BNO   @RF00429                                            0429
         TM    $FSTCOMM(WAPTR),B'00000001'                         0429
         BNO   @RF00429                                            0429
         TM    $FSTFE(WAPTR),B'10000000'                           0429
         BNZ   @RF00429                                            0429
*     DO;                                                          0430
*       $FSTFE=ON;                  /* FE MSG HAS BEEN ISSUED        */
         OI    $FSTFE(WAPTR),B'10000000'                           0431
*       $INBUFR(1:23)=              /* GATHER UP FE VARIABLES        */
*           $24FEMSG;               /* GO TO CECOM WITH THEN         */
*                                                                  0432
         MVC   $INBUFR(23,WAPTR),$24FEMSG(WAPTR)                   0432
*       /*************************************************************/
*       /*                                                           */
*       /* TCEC MSGN(129)SUB(YES) INVOKED                            */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0433
*       $TCECM='1'B;                /* SET TCEC SW IN RCA            */
         OI    $TCECM(WAPTR),B'00000001'                           0433
*       R1=ADDR($TCA15);            /* SET UP PARM LIST $TR          */
         LA    R1,$TCA15                                           0434
*       CALL #EXIT;                 /* CALL CECOM                    */
         L     @15,#EXITA(,WAPTR)                                  0435
         BALR  @14,@15                                             0435
*       DCL                                                        0436
*         1 $TCA15,                 /* TCEC PARM LIST                */
*          2 $TCB15 FIXED(32) INIT(129),/* MSG NUMBER                */
*          2 $TCC15 FIXED(32) INIT(0),/* INCT LEN                    */
*          2 $TCD15 BIT(8) INIT('10000000'B),/* FLAG                 */
*          2 $TCE15 CHAR(4) INIT('FFFFFFFF'X);/* MSSAGE MASK         */
*     END;                                                         0437
*                                                                  0437
*/********************************************************************/
*/*      CATASTROPHIC ERROR MESSAGE                                  */
*/********************************************************************/
*                                                                  0438
*   IF $CATERR=ON&$FSTCAT=OFF THEN                                 0438
@RF00429 TM    $CATERR(WAPTR),B'00100000'                          0438
         BNO   @RF00438                                            0438
         TM    $FSTCAT(WAPTR),B'01000000'                          0438
         BNZ   @RF00438                                            0438
*     DO;                                                          0439
*       $FSTCAT=ON;                 /* CATERR MSG HAS BEEN ISSUED    */
         OI    $FSTCAT(WAPTR),B'01000000'                          0440
*       $CATMSG=ON;                 /* CATERR MSG CAUSED COMM INT    */
         OI    $CATMSG(WAPTR),B'00000100'                          0441
*       $INBUFR(1:12)=              /* SET UP CAT ERR MSGS           */
*           $24CATMG;               /* LINK TO CECOM                 */
*                                                                  0442
         MVC   $INBUFR(12,WAPTR),$24CATMG(WAPTR)                   0442
*       /*************************************************************/
*       /*                                                           */
*       /* TCEC MSGN(157)SUB(YES) INVOKED                            */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0443
*       $TCECM='1'B;                /* SET TCEC SW IN RCA            */
         OI    $TCECM(WAPTR),B'00000001'                           0443
*       R1=ADDR($TCA16);            /* SET UP PARM LIST $TR          */
         LA    R1,$TCA16                                           0444
*       CALL #EXIT;                 /* CALL CECOM                    */
         L     @15,#EXITA(,WAPTR)                                  0445
         BALR  @14,@15                                             0445
*       DCL                                                        0446
*         1 $TCA16,                 /* TCEC PARM LIST                */
*          2 $TCB16 FIXED(32) INIT(157),/* MSG NUMBER                */
*          2 $TCC16 FIXED(32) INIT(0),/* INCT LEN                    */
*          2 $TCD16 BIT(8) INIT('10000000'B),/* FLAG                 */
*          2 $TCE16 CHAR(4) INIT('FFFFFFFF'X);/* MSSAGE MASK         */
*     END;                                                         0447
*   IF $TESTMDE(1)=ON               /* IF CT IN TESTMODE             */
*     THEN                                                         0448
@RF00438 TM    $TESTMDE(WAPTR),B'00000010'                         0448
         BO    @RT00448                                            0448
*     GO TO S24C0875;               /* ISSUE MESSAGE 240             */
*                                                                  0449
*   /*****************************************************************/
*   /*                                                               */
*   /* CHECK IF CT LINE ISIN TEST MODE                               */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0450
*   IF $SYSMN(1)^='SYS CON ' THEN   /* CHECK FOR DEVICE IN TEST AND
*                                      CT ON SAME LINE ONLY IF NOT 0450
*                                      SYSTEM CONSOLE        @DM44278*/
         CLC   $SYSMN(8,WAPTR),@CC00994                            0450
         BE    @RF00450                                            0450
*     DO J=3 TO $DEVCNTS;           /* CHECK ALL TEST DEVICES        */
         LA    J,3                                                 0451
         B     @DE00451                                            0451
@DL00451 DS    0H                                                  0452
*       IF $TESTMDE(J)=ON&          /* IF DEVICE IN TEST             */
*           $LINENME(1)=$LINENME(J) /* AND IF ON THE CT LINE         */
*         THEN                                                     0452
         LR    @14,J                                               0452
         MH    @14,@CH00326                                        0452
         ST    @14,@TF00001                                        0452
         ALR   @14,WAPTR                                           0452
         TM    $TESTMDE-68(@14),B'00000010'                        0452
         BNO   @RF00452                                            0452
         LR    @14,WAPTR                                           0452
         AL    @14,@TF00001                                        0452
         CLC   $LINENME(8,WAPTR),$LINENME-68(@14)                  0452
         BE    @RT00452                                            0452
*         GO TO S24C0875;           /* SKIP COMMUNICATION INTERVAL   */
*     END;                          /* END OF BUSY CT LINE CHECK     */
@RF00452 AL    J,@CF00043                                          0454
@DE00451 CH    J,$DEVCNTS(,WAPTR)                                  0454
         BNH   @DL00451                                            0454
*   CALL ISTIC002;                  /* CALL COMM INTERVAL            */
@RF00450 L     @15,@CV00995                                        0455
         BALR  @14,@15                                             0455
*S24C0900:                                                         0456
*   R15=$24RETCD;                   /* RESET COND CODE               */
S24C0900 SLR   R15,R15                                             0456
         IC    R15,$24RETCD(,WAPTR)                                0456
*   GOTO S24C9999;                  /* RETURN                        */
         B     S24C9999                                            0457
*S24C0875:                                                         0458
*                                                                  0458
*   /*****************************************************************/
*   /*                                                               */
*   /* TCEC MSGN(240) INVOKED                                        */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0458
*   $TCECM='1'B;                    /* SET TCEC SW IN RCA            */
S24C0875 OI    $TCECM(WAPTR),B'00000001'                           0458
*   R1=ADDR($TCA17);                /* SET UP PARM LIST $TR          */
         LA    R1,$TCA17                                           0459
*   CALL #EXIT;                     /* CALL CECOM                    */
         L     @15,#EXITA(,WAPTR)                                  0460
         BALR  @14,@15                                             0460
*   DCL                                                            0461
*     1 $TCA17,                     /* TCEC PARM LIST                */
*      2 $TCB17 FIXED(32) INIT(240),/* MSG NUMBER                    */
*      2 $TCC17 FIXED(32) INIT(0),  /* INCT LEN                      */
*      2 $TCD17 BIT(8) INIT('00000000'B),/* FLAG                     */
*      2 $TCE17 CHAR(4) INIT('FFFFFFFF'X);/* MSSAGE MASK             */
*   $CATERR=OFF;                    /* RESET CATASTROPHIC ERROR BIT  */
         NI    $CATERR(WAPTR),B'11011111'                          0462
*   GO TO S24C0900;                 /* LEAVE                         */
         B     S24C0900                                            0463
*/********************************************************************/
*/*  ROUTINE TO PICK UP AND OUTPUT DESCRIPTION AND MESSAGE LINES     */
*/*      INPUT:                                                      */
*/*            $DDRPTR -  POINTER TO ARRAY OF ADDRESSES OF LINES TO  */
*/*                       BE OUTPUT                                  */
*/*            $OUNTPTR-  POINTER TO ARRAY OF LENGTHS OF LINES       */
*/*            $UMXX -    TOTAL NUMBER OF LINES TO BE OUTPUT         */
*/********************************************************************/
*                                                                  0464
*S24C1000:                                                         0464
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0464
S24C1000 DS    0H                                                  0465
*   $24SAVE1=R14;                   /* SAVE RETURN ADDRESS           */
         ST    R14,$24SAVE1(,WAPTR)                                0465
*   IF $ALTPRNT=ON&                 /* IF PP IS IN EFFECT            */
*       ($PRNTLVL='1'×              /* AND PRINT LEVEL IS 1          */
*       $PRNTLVL='3')               /* OR 3                          */
*     THEN                                                         0466
         TM    $ALTPRNT(WAPTR),B'00010000'                         0466
         BNO   @RF00466                                            0466
         CLI   $PRNTLVL(WAPTR),C'1'                                0466
         BE    @RT00466                                            0466
         CLI   $PRNTLVL(WAPTR),C'3'                                0466
         BNE   @RF00466                                            0466
@RT00466 DS    0H                                                  0467
*     $PRTONLY=OFF;                 /* PRINT ON CT ALSO              */
         NI    $PRTONLY(WAPTR),B'11110111'                         0467
*   IF $UMXX=0 THEN                 /* IF NO. OF LINES IS ZERO       */
@RF00466 CLI   $UMXX(WAPTR),0                                      0468
         BNE   @RF00468                                            0468
*     DO;                                                          0469
*       $24RETCD='0C'X;             /* RETURN TO CALLER, RC=0C       */
         MVI   $24RETCD(WAPTR),X'0C'                               0470
*       GOTO S24C1020;                                             0471
         B     S24C1020                                            0471
*     END;                                                         0472
*   DO $CTR=1 TO $UMXX;             /* LOOP THRU ARRAY OF LINES      */
@RF00468 LA    @14,1                                               0473
         B     @DE00473                                            0473
@DL00473 DS    0H                                                  0474
*     IF S24BYTEA($CTR)=0           /* IF A BYTE COUNT OF A LINE     */
*       THEN                        /* IS 0                          */
         LH    @14,$CTR(,WAPTR)                                    0474
         L     @11,$OUNTPTR(,WAPTR)                                0474
         BCTR  @11,0                                               0474
         SLR   @00,@00                                             0474
         IC    @00,S24BYTEA(@14,@11)                               0474
         C     @00,@CF00864                                        0474
         BNE   @RF00474                                            0474
*       DO;                         /*                               */
*         $24RETCD='0C'X;           /* SET RETURN CODE = 0C          */
         MVI   $24RETCD(WAPTR),X'0C'                               0476
*         GOTO S24C1010;            /* TRY NEXT ENTRY                */
         B     S24C1010                                            0477
*       END;                        /*                               */
*     IF S24BYTEA($CTR)>120         /* IF LENGTH OF LINE > MAX       */
*       THEN                                                       0479
@RF00474 LH    @14,$CTR(,WAPTR)                                    0479
         L     @11,$OUNTPTR(,WAPTR)                                0479
         BCTR  @11,0                                               0479
         SLR   @00,@00                                             0479
         IC    @00,S24BYTEA(@14,@11)                               0479
         C     @00,@CF00435                                        0479
         BNH   @RF00479                                            0479
*       $ENXX=120;                  /* SET IT TO MAX                 */
         MVI   $ENXX(WAPTR),X'78'                                  0480
*     ELSE                                                         0481
*       $ENXX=S24BYTEA($CTR);       /* OTHERWISE USE LGTH AS IS      */
         B     @RC00479                                            0481
@RF00479 LH    @14,$CTR(,WAPTR)                                    0481
         L     @11,$OUNTPTR(,WAPTR)                                0481
         BCTR  @11,0                                               0481
         SLR   @00,@00                                             0481
         IC    @00,S24BYTEA(@14,@11)                               0481
         STC   @00,$ENXX(,WAPTR)                                   0481
*     $BUFFER(1:$ENXX)=             /* PUT LINE IN BUFR              */
*         S24LINE(1:$ENXX);                                        0482
@RC00479 SLR   @14,@14                                             0482
         IC    @14,$ENXX(,WAPTR)                                   0482
         BCTR  @14,0                                               0482
         LH    @11,$CTR(,WAPTR)                                    0482
         SLA   @11,2                                               0482
         L     @10,$DDRPTR(,WAPTR)                                 0482
         AL    @10,@CF01092                                        0482
         L     @11,S24ADDRA(@11,@10)                               0482
         EX    @14,@SM01093                                        0482
*     CALL S24C2500;                /* PRINT THE LINE                */
         BAL   @14,S24C2500                                        0483
*S24C1010:                                                         0484
*     $UMXX=$UMXX;                  /* KEEP PLS HONEST               */
S24C1010 SLR   @14,@14                                             0484
         IC    @14,$UMXX(,WAPTR)                                   0484
         STC   @14,$UMXX(,WAPTR)                                   0484
*   END;                                                           0485
         LA    @14,1                                               0485
         AH    @14,$CTR(,WAPTR)                                    0485
@DE00473 STH   @14,$CTR(,WAPTR)                                    0485
         SLR   @00,@00                                             0485
         IC    @00,$UMXX(,WAPTR)                                   0485
         CR    @14,@00                                             0485
         BNH   @DL00473                                            0485
*S24C1020:                                                         0486
*   R14=$24SAVE1;                   /* RESTORE RETURN ADDR           */
S24C1020 L     R14,$24SAVE1(,WAPTR)                                0486
*   END S24C1000;                                                  0487
*                                                                  0487
@EL00002 DS    0H                                                  0487
@EF00002 DS    0H                                                  0487
@ER00002 BR    @14                                                 0487
*/********************************************************************/
*/*      ROUTINE TO OUTPUT A DPRINT LINE                             */
*/*      ENTRY POINTS:                                               */
*/*            S24C2000:  CHK FOR PP LEVELS 2 & 3 AND OUTPUT LINE    */
*/*            S24C2500:  OUTPUT LINE WITH NO PP LEVEL CHK           */
*/*            S24C2550:  BLANK OUT BUFFER                           */
*/********************************************************************/
*                                                                  0488
*                                   /* ENTRY FOR PP LEVELS 2&3       */
*S24C2000:                                                         0488
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0488
S24C2000 DS    0H                                                  0489
*   IF $ALTPRNT=ON&($PRNTLVL='2'×$PRNTLVL='3')/* IF PRINT LVL IS 2 OR
*                                      3                             */
*     THEN                                                         0489
         TM    $ALTPRNT(WAPTR),B'00010000'                         0489
         BNO   @RF00489                                            0489
         CLI   $PRNTLVL(WAPTR),C'2'                                0489
         BE    @RT00489                                            0489
         CLI   $PRNTLVL(WAPTR),C'3'                                0489
         BNE   @RF00489                                            0489
@RT00489 DS    0H                                                  0490
*     $PRTONLY=OFF;                 /* THEN PRINT ON CT ALSO         */
         NI    $PRTONLY(WAPTR),B'11110111'                         0490
*S24C2500:                                                         0491
*   ENTRY;                                                         0491
         B     @EC00491                                            0491
S24C2500 DS    0H                                                  0491
@EC00491 DS    0H                                                  0492
*   $24SAVE2=R14;                   /* SAVE RETURN ADDRESS           */
         ST    R14,$24SAVE2(,WAPTR)                                0492
*   $COUTAD=ADDR($BUFFER);          /* POINT TO OUT BUFR             */
         LA    @14,$BUFFER(,WAPTR)                                 0493
         ST    @14,$COUTAD(,WAPTR)                                 0493
*   $COUTCT=120;                    /* LENGTH OF OUT BUFR            */
         MVC   $COUTCT(4,WAPTR),@CF00435                           0494
*   $CINADR=0;                      /* ZERO IN ADR FOR 1-WAY MSG     */
         SLR   @14,@14                                             0495
         ST    @14,$CINADR(,WAPTR)                                 0495
*   CALL ISTCC011;                  /* GO TO MSG I/O                 */
         L     @15,@CV01021                                        0496
         BALR  @14,@15                                             0496
*   SVESC024(4)=ADDR(S24C2550);     /* SET UP R14 FOR RCM            */
         LA    @14,S24C2550                                        0497
         ST    @14,SVESC024+12(,WAPTR)                             0497
*   BC(15,S24C9999);                /* RETURN TO RCM WHEN RCM      0498
*                                      BRANCHES ON R14.. CONTROL   0498
*                                      RETURNS HERE.....             */
         BC    15,S24C9999                                         0498
*S24C2550:                                                         0499
*   R14=$24SAVE2;                   /* RESTORE RETURN ADDRESS        */
S24C2550 L     R14,$24SAVE2(,WAPTR)                                0499
*S24C2600:                                                         0500
*   ENTRY;                                                         0500
         B     @EC00500                                            0500
S24C2600 DS    0H                                                  0500
@EC00500 DS    0H                                                  0501
*   $BUFFER=' ';                    /* BLANK OUT BUFFER              */
         MVI   $BUFFER+1(WAPTR),C' '                               0501
         MVC   $BUFFER+2(126,WAPTR),$BUFFER+1(WAPTR)               0501
         MVI   $BUFFER(WAPTR),C' '                                 0501
*   $PRTONLY=ON;                    /* TURN ON PRINTER ONLY FLAG     */
         OI    $PRTONLY(WAPTR),B'00001000'                         0502
*S24C2650:                                                         0503
*   ;                                                              0503
*   END S24C2000;                                                  0504
*                                                                  0504
@EL00003 DS    0H                                                  0504
@EF00003 DS    0H                                                  0504
@ER00003 BR    @14                                                 0504
*/********************************************************************/
*/*      ROUTINE TO SEARCH TECB                                      */
*/*      INPUT:                                                      */
*/*            FLAGS                                                 */
*/*                 S24CCREQ - SEARCH FOR CONDITION CODE             */
*/*                 S24CSW2R - SEARCH FOR SECOND CSW2/PSW2           */
*/*                 S24SNSRQ - SEARCH FOR SENSE FIELD                */
*/*                                                                  */
*/*      OUTPUT:                                                     */
*/*            FLAGS                                                 */
*/*                 S24TCBER - TECB ADDR = 0 (RC SET TO 0C)          */
*/*                 S24SCHFL - SEARCH FAILED                         */
*/********************************************************************/
*                                                                  0505
*S24C3000:                                                         0505
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0505
S24C3000 DS    0H                                                  0506
*   $24SAVE1=R14;                   /* SAVE RETURN ADDRESS TURN OFF
*                                      ERROR FLAGS:                  */
         ST    R14,$24SAVE1(,WAPTR)                                0506
*   S24TCBER=OFF;                   /* TECB NOT FOUND                */
*   S24SCHFL=OFF;                   /* SEARCH ERROR                  */
         LA    @14,2680                                            0508
         ALR   @14,WAPTR                                           0508
         NI    S24TCBER(@14),B'11100111'                           0508
*   IF $PRTTECB=0                   /* IF NO PTR TO TECB GIVEN       */
*     THEN                          /*                               */
         L     @08,$PRTTECB(,DPRPTR)                               0509
         LTR   @08,@08                                             0509
         BNZ   @RF00509                                            0509
*     DO;                           /*                               */
*       S24TCBER=ON;                /* SET NO TECB ERROR FLAG        */
         OI    S24TCBER(@14),B'00010000'                           0511
*       GOTO S24C3020;              /* SET RC = 0C & RETURN          */
         B     S24C3020                                            0512
*     END;                                                         0513
*   IF S24SNSRQ=ON                  /* IF REQ FOR A SNS FLD SCH      */
*     THEN                                                         0514
@RF00509 TM    S24SNSRQ+2680(WAPTR),B'00100000'                    0514
         BO    @RT00514                                            0514
*     GOTO S24C3012;                /* GO SEARCH SENSE ENTRIES       */
*   IF TECBEVOC=0                   /* IF NO EVENTS HAVE BEEN        */
*     THEN                          /* POSTED,                       */
         CLI   TECBEVOC(TECBPTR),0                                 0516
         BNE   @RF00516                                            0516
*     DO;                           /*                               */
*S24C3003:                                                         0518
*       S24SCHFL=ON;                /* SET NO EVENTS ERROR FLAG      */
S24C3003 OI    S24SCHFL+2680(WAPTR),B'00001000'                    0518
*       GOTO S24C3025;              /* AND RETURN                    */
         B     S24C3025                                            0519
*     END;                                                         0520
*   IF TECBFDCT>TECBEVOC            /* IF TOTAL # OF EVENT FIELDS    */
*     THEN                                                         0521
@RF00516 CLC   TECBFDCT(1,TECBPTR),TECBEVOC(TECBPTR)               0521
         BNH   @RF00521                                            0521
*     SEARCHCT=TECBEVOC;            /* GREATER THAN THOSE FILLED     */
         SLR   SEARCHCT,SEARCHCT                                   0522
         IC    SEARCHCT,TECBEVOC(,TECBPTR)                         0522
*   ELSE                                                           0523
*     SEARCHCT=TECBFDCT;            /* IN, SEARCH ONLY THOSE USED    */
         B     @RC00521                                            0523
@RF00521 SLR   SEARCHCT,SEARCHCT                                   0523
         IC    SEARCHCT,TECBFDCT(,TECBPTR)                         0523
*   RFY                                                            0524
*     TECBFD01 BASED(ADDR(TECBEVT1)+$CTR*TECBFDLN);/*        @DY04695*/
@RC00521 DS    0H                                                  0525
*   RFY                                                            0525
*     TECBSNS1 BASED(ADDR(TECBEVT1)+TECBFDLN*TECBFDCT+$CTR*TECBSNLN);
*                                   /*                       @DM15067*/
*   DO $CTR=0 TO SEARCHCT-1;        /* SEARCH THRU THE TECB          */
         SLR   @14,@14                                             0526
         B     @DE00526                                            0526
@DL00526 DS    0H                                                  0527
*     IF TCBEVDEV^=$24UNADR(2:4)    /* IF THE DEVADDR IN TECB        */
*       THEN                                                       0527
         LA    @14,TECBEVT1(,TECBPTR)                              0527
         SLR   @11,@11                                             0527
         IC    @11,TECBFDLN(,TECBPTR)                              0527
         MH    @11,$CTR(,WAPTR)                                    0527
         ALR   @14,@11                                             0527
         CLC   TCBEVDEV(3,@14),$24UNADR+1(WAPTR)                   0527
         BNE   @RT00527                                            0527
*       GOTO S24C3010;              /* NOT SAME AS DPR PARMLST DEV,
*                                      GO GET NEXT ENTRY             */
*     IF S24CCREQ=ON THEN           /* IF LOOKING FOR CC &           */
         TM    S24CCREQ+2680(WAPTR),B'10000000'                    0529
         BNO   @RF00529                                            0529
*       DO;                         /* THIS IS AN EBCDIC #           */
*         IF TCBEVTYP(1:4)='1111'B  /* (CONDITION CODE)              */
*           THEN                                                   0531
         TM    TCBEVTYP(@14),B'11110000'                           0531
         BNO   @RF00531                                            0531
*           DO;                                                    0532
*             CCCONDCD=TCBEVTYP;    /* PUT CC IN PRT LINE            */
         MVC   CCCONDCD+1976(1,WAPTR),TCBEVTYP(@14)                0533
*             GOTO S24C3025;        /* RETURN                        */
         B     S24C3025                                            0534
*           END;                                                   0535
*         ELSE                                                     0536
*           GOTO S24C3010;          /* ELSE GET NEXT ENTRY           */
*       END;                                                       0537
*     IF $PSWCSW=ON                 /* IF LOOKING FOR PSW            */
*       THEN                        /* AND                           */
@RF00529 TM    $PSWCSW(PRTPTR),B'00000001'                         0538
         BNO   @RF00538                                            0538
*       DO;                         /* IF THIS IS A PSW NTRY         */
*         IF TCBEVTYP(1:4)^='1111'B THEN                           0540
         LA    @14,TECBEVT1(,TECBPTR)                              0540
         SLR   @11,@11                                             0540
         IC    @11,TECBFDLN(,TECBPTR)                              0540
         MH    @11,$CTR(,WAPTR)                                    0540
         ALR   @14,@11                                             0540
         TM    TCBEVTYP(@14),B'11110000'                           0540
         BNO   @RT00540                                            0540
*           GOTO S24C3005;          /* THEN CHK FOR PSW1/2           */
*         ELSE                                                     0542
*           GOTO S24C3010;          /* ELSE CHK NEXT ENTRY           */
         B     S24C3010                                            0542
*       END;                                                       0543
*     IF TCBEVTYP='0'               /* IF CC = 0 FOR THIS ENTRY      */
*       THEN                                                       0544
@RF00538 LA    @14,TECBEVT1(,TECBPTR)                              0544
         SLR   @11,@11                                             0544
         IC    @11,TECBFDLN(,TECBPTR)                              0544
         MH    @11,$CTR(,WAPTR)                                    0544
         ALR   @14,@11                                             0544
         CLI   TCBEVTYP(@14),C'0'                                  0544
         BE    @RT00544                                            0544
*       GOTO S24C3010;              /* THEN THERE IS NO CSW          */
*     IF TCBEVTYP(1:4)^='1111'B     /* IF EVENT TYPE NOT EBCDIC #    */
*       THEN                                                       0546
         TM    TCBEVTYP(@14),B'11110000'                           0546
         BNO   @RT00546                                            0546
*       GOTO S24C3010;              /* THEN THIS NOT A CSW ENTRY     */
*S24C3005:                                                         0548
*     IF S24CSW2R=OFF               /* IF NOT REQ FOR 2ND CSW/PSW    */
*       THEN                                                       0548
S24C3005 TM    S24CSW2R+2680(WAPTR),B'01000000'                    0548
         BNZ   @RF00548                                            0548
*       DO;                                                        0549
*         CSWPSWPT=ADDR(TCBEVCSW);  /* PT TO CSW                     */
         LA    @14,TECBEVT1(,TECBPTR)                              0550
         SLR   @08,@08                                             0550
         IC    @08,TECBFDLN(,TECBPTR)                              0550
         MH    @08,$CTR(,WAPTR)                                    0550
         ALR   @14,@08                                             0550
         LA    @14,TCBEVCSW(,@14)                                  0550
         ST    @14,CSWPSWPT                                        0550
*         GOTO S24C3025;            /* AND RETURN                    */
         B     S24C3025                                            0551
*       END;                                                       0552
*     ELSE                          /* ELSE WE WANT NEXT CSW/PSW     */
*       DO;                         /* KEEP LOOKING THRU TECB        */
@RF00548 DS    0H                                                  0554
*         S24CSW2R=OFF;                                            0554
         NI    S24CSW2R+2680(WAPTR),B'10111111'                    0554
*         GOTO S24C3010;                                           0555
         B     S24C3010                                            0555
*       END;                                                       0556
*S24C3010:                                                         0557
*   END;                            /* END OF DO LOOP                */
S24C3010 LA    @14,1                                               0557
         AH    @14,$CTR(,WAPTR)                                    0557
@DE00526 STH   @14,$CTR(,WAPTR)                                    0557
         LR    @00,SEARCHCT                                        0557
         BCTR  @00,0                                               0557
         CR    @14,@00                                             0557
         BNH   @DL00526                                            0557
*   GOTO S24C3003;                  /* SET SEARCH ERROR FLG & RET    */
         B     S24C3003                                            0558
*S24C3012:                                                         0559
*   IF TECBSNOC=0                   /* IF NO SENSE FIELDS USED       */
*     THEN                                                         0559
S24C3012 CLI   TECBSNOC(TECBPTR),0                                 0559
         BE    @RT00559                                            0559
*     GOTO S24C3003;                /* SET SRCH FAIL FLG & RETURN    */
*   IF TECBSNCT>TECBSNOC            /* IF TOTAL # OF SNS FIELDS      */
*     THEN                                                         0561
         CLC   TECBSNCT(1,TECBPTR),TECBSNOC(TECBPTR)               0561
         BNH   @RF00561                                            0561
*     SEARCHCT=TECBSNOC;            /* GREATER THAN THOSE FILLED     */
         SLR   SEARCHCT,SEARCHCT                                   0562
         IC    SEARCHCT,TECBSNOC(,TECBPTR)                         0562
*   ELSE                                                           0563
*     SEARCHCT=TECBSNCT;            /* IN, SEARCH ONLY THOSE USED    */
         B     @RC00561                                            0563
@RF00561 SLR   SEARCHCT,SEARCHCT                                   0563
         IC    SEARCHCT,TECBSNCT(,TECBPTR)                         0563
*   DO $CTR=0 TO SEARCHCT-1;                                       0564
@RC00561 SLR   @14,@14                                             0564
         B     @DE00564                                            0564
@DL00564 DS    0H                                                  0565
*     IF TCBSNDEV=$24UNADR(2:4)     /* IF DEV ADDR IN SNS ENTRY      */
*       THEN                        /* SAME AS IN DPR PARM LIST      */
         LA    @14,TECBEVT1(,TECBPTR)                              0565
         SLR   @07,@07                                             0565
         IC    @07,TECBFDCT(,TECBPTR)                              0565
         SLR   @11,@11                                             0565
         IC    @11,TECBFDLN(,TECBPTR)                              0565
         MR    @06,@11                                             0565
         ALR   @14,@07                                             0565
         LH    @11,$CTR(,WAPTR)                                    0565
         MH    @11,TECBSNLN(,TECBPTR)                              0565
         ALR   @14,@11                                             0565
         CLC   TCBSNDEV(3,@14),$24UNADR+1(WAPTR)                   0565
         BNE   @RF00565                                            0565
*       DO;                                                        0566
*         $NSPTR=ADDR(TCBSENSE);    /* SET UP PTR TO SENSE           */
         LA    @14,TCBSENSE(,@14)                                  0567
         ST    @14,$NSPTR(,WAPTR)                                  0567
*         GOTO S24C3025;            /* RETURN                        */
         B     S24C3025                                            0568
*       END;                        /* RETURN                        */
*   END;                                                           0570
@RF00565 LA    @14,1                                               0570
         AH    @14,$CTR(,WAPTR)                                    0570
@DE00564 STH   @14,$CTR(,WAPTR)                                    0570
         LR    @00,SEARCHCT                                        0570
         BCTR  @00,0                                               0570
         CR    @14,@00                                             0570
         BNH   @DL00564                                            0570
*S24C3020:                                                         0571
*   $24RETCD='0C'X;                 /* SET RC = 0C                   */
S24C3020 MVI   $24RETCD(WAPTR),X'0C'                               0571
*S24C3025:                                                         0572
*   R14=$24SAVE1;                   /* RESTORE RETURN ADDRESS        */
S24C3025 L     R14,$24SAVE1(,WAPTR)                                0572
*   END S24C3000;                                                  0573
*                                                                  0573
@EL00004 DS    0H                                                  0573
@EF00004 DS    0H                                                  0573
@ER00004 BR    @14                                                 0573
*/********************************************************************/
*/*      ROUTINE TO CONVERT AND MOVE CSW/PSW INTO PRINT BUFFER       */
*/********************************************************************/
*                                                                  0574
*S24C5000:                                                         0574
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0574
S24C5000 DS    0H                                                  0575
*   $24SAVE1=R14;                   /* SAVE RETURN ADDRESS CONVERT 0575
*                                      CSW/PSW TO EBCDIC             */
*                                                                  0575
         ST    R14,$24SAVE1(,WAPTR)                                0575
*   /*****************************************************************/
*   /*                                                               */
*   /* ITACONV FROM(FROMFLD)TO(DPRWORK)COUNT(8)TYPE(HE) INVOKED      */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0576
*   ITATCFR=ADDR(FROMFLD);          /* SET THE FROM ADDRESS          */
         L     @14,CSWPSWPT                                        0576
         ST    @14,ITATCFR                                         0576
*   ITATCTO=ADDR(DPRWORK);          /* SET THE TO ADDRESS            */
         LA    @14,DPRWORK(,WAPTR)                                 0577
         ST    @14,ITATCTO                                         0577
*   ITATCTP='1'B;                   /* SET THE TYPE OF CONVERT BIT   */
         OI    ITATCTP,B'10000000'                                 0578
*   ITATCNT=8;                      /* GIVE THE CONVERT BYTE COUNT   */
         MVI   ITATCNT,X'08'                                       0579
*   R1=ADDR(ITATCPRM);              /* POINT TO CONVERT PARM LIST    */
         LA    R1,ITATCPRM                                         0580
*   CALL ISTSC021;                  /* CALL CONVERT DIRECTLY         */
         L     @15,@CV00877                                        0581
         BALR  @14,@15                                             0581
*   IF $PSWCSW=ON                   /* IF THIS IS A PSW,             */
*     THEN                          /*                               */
         TM    $PSWCSW(PRTPTR),B'00000001'                         0582
         BNO   @RF00582                                            0582
*     DO;                           /*                               */
*       PSWFLD=DPRWORK(1:16);       /* MOVE WHOLE FIELD INTO BFR     */
         MVC   PSWFLD(16,BFRPTR),DPRWORK(WAPTR)                    0584
*       GOTO S24C5010;              /* RETURN                        */
         B     S24C5010                                            0585
*     END;                                                         0586
*   WORKPTR=ADDR(DPRWORK);          /* SET UP FROM PTR               */
@RF00582 LA    WORKPTR,DPRWORK(,WAPTR)                             0587
*   IF MASK(1:1)=ON                 /* IF CSW KEY THERE              */
*     THEN                          /* PUT IT IN PRINT BUFR          */
         TM    MASK,B'10000000'                                    0588
         BNO   @RF00588                                            0588
*     DO;                                                          0589
*       CSWKEY=WORKCSW(1:LENGTH(CSWKEY));                          0590
         MVC   CSWKEY(2,BFRPTR),WORKCSW(WORKPTR)                   0590
*       WORKPTR=WORKPTR+LENGTH(CSWKEY);                            0591
         AL    WORKPTR,@CF00086                                    0591
*     END;                                                         0592
*   ELSE                                                           0593
*     CSWKEY=                       /* IF NOT, SET TO X'S            */
*         CSWXXXXX(1:LENGTH(CSWKEY));                              0593
         B     @RC00588                                            0593
@RF00588 MVC   CSWKEY(2,BFRPTR),CSWXXXXX                           0593
*   CSWBLANK=' ';                   /* BLANK OUT N OF 'NONE'         */
@RC00588 MVI   CSWBLANK(BFRPTR),C' '                               0594
*   IF MASK(2:2)=ON                 /* IF CSW ADDR TO BE USED,       */
*     THEN                          /* PUT IT IN PRINT BUFR          */
         TM    MASK,B'01000000'                                    0595
         BNO   @RF00595                                            0595
*     DO;                                                          0596
*       CSWADDR=WORKCSW(1:LENGTH(CSWADDR));                        0597
         MVC   CSWADDR(6,BFRPTR),WORKCSW(WORKPTR)                  0597
*       WORKPTR=WORKPTR+LENGTH(CSWADDR);                           0598
         AL    WORKPTR,@CF00399                                    0598
*     END;                                                         0599
*   ELSE                                                           0600
*     CSWADDR=                      /* IF NOT, SET IT TO X'S         */
*         CSWXXXXX(1:LENGTH(CSWADDR));                             0600
         B     @RC00595                                            0600
@RF00595 MVC   CSWADDR(6,BFRPTR),CSWXXXXX                          0600
*   IF MASK(3:3)=ON                 /* IF STATUS TO BE PRINTED,      */
*     THEN                          /* PUT IT IN PRT BUFR            */
@RC00595 TM    MASK,B'00100000'                                    0601
         BNO   @RF00601                                            0601
*     DO;                                                          0602
*       CSWSTAT=WORKCSW(1:LENGTH(CSWSTAT));                        0603
         MVC   CSWSTAT(4,BFRPTR),WORKCSW(WORKPTR)                  0603
*       WORKPTR=WORKPTR+LENGTH(CSWSTAT);                           0604
         AL    WORKPTR,@CF00041                                    0604
*     END;                                                         0605
*   ELSE                                                           0606
*     CSWSTAT=                      /* IF NOT USE X'S                */
*         CSWXXXXX(1:LENGTH(CSWSTAT));                             0606
         B     @RC00601                                            0606
@RF00601 MVC   CSWSTAT(4,BFRPTR),CSWXXXXX                          0606
*   IF MASK(4:4)=ON                 /* IF RESIDUAL CNT TO BE PRTD    */
*     THEN                          /* PUT IT IN BUFR                */
@RC00601 TM    MASK,B'00010000'                                    0607
         BNO   @RF00607                                            0607
*     DO;                                                          0608
*       CSWCOUNT=WORKCSW(1:LENGTH(CSWCOUNT));                      0609
         MVC   CSWCOUNT(4,BFRPTR),WORKCSW(WORKPTR)                 0609
*       WORKPTR=WORKPTR+LENGTH(CSWCOUNT);                          0610
         AL    WORKPTR,@CF00041                                    0610
*     END;                                                         0611
*   ELSE                                                           0612
*     CSWCOUNT=                     /* IF NOT, PUT IN X'S            */
*         CSWXXXXX(1:LENGTH(CSWCOUNT));                            0612
         B     @RC00607                                            0612
@RF00607 MVC   CSWCOUNT(4,BFRPTR),CSWXXXXX                         0612
*S24C5010:                                                         0613
*   R14=$24SAVE1;                   /* RESTORE RETURN ADDRESS        */
@RC00607 DS    0H                                                  0613
S24C5010 L     R14,$24SAVE1(,WAPTR)                                0613
*   END S24C5000;                                                  0614
*                                                                  0614
@EL00005 DS    0H                                                  0614
@EF00005 DS    0H                                                  0614
@ER00005 BR    @14                                                 0614
*/********************************************************************/
*/*      ROUTINE TO STURCTURE & PRINT SENSE LINES                    */
*/*      INPUT:                                                      */
*/*            $NSPTR - POINTER TO HEX SENSE DATA                    */
*/*            COUNT - TOTAL COUNT OF SENSE DATA PROVIDED            */
*/********************************************************************/
*                                                                  0615
*S24C6000:                                                         0615
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0615
S24C6000 DS    0H                                                  0616
*   $24SAVE1=R14;                   /* SAVE RETURN ADDRESS           */
         ST    R14,$24SAVE1(,WAPTR)                                0616
*   $INDEX=1;                       /* FROM ARRAY INDEX              */
         MVI   $INDEX(WAPTR),X'01'                                 0617
*S24C6010:                                                         0618
*   IF $NSXX<=MAXSNS                /* IF LESS THAN OR = 17 BYTES    */
*     THEN                                                         0618
S24C6010 LH    @14,$NSXX(,WAPTR)                                   0618
         C     @14,@CF00452                                        0618
         BH    @RF00618                                            0618
*     $NSCNT=$NSXX;                 /* ALL WILL FIT ON 1 LINE        */
         STH   @14,$NSCNT(,WAPTR)                                  0619
*   ELSE                                                           0620
*     $NSCNT=MAXSNS;                /* ELSE PRINT 1 LINE OF MAX CONV
*                                      SENSE TO WORK AREA            */
*                                                                  0620
         B     @RC00618                                            0620
@RF00618 MVC   $NSCNT(2,WAPTR),@CH00452                            0620
*   /*****************************************************************/
*   /*                                                               */
*   /* ITACONV FROM(FROMSNS($INDEX))TO(TOSENSE)COUNT($NSCNT)TYPE(HE) */
*   /* INVOKED                                                       */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0621
*   ITATCFR=ADDR(FROMSNS($INDEX));  /* SET THE FROM ADDRESS          */
@RC00618 SLR   @14,@14                                             0621
         IC    @14,$INDEX(,WAPTR)                                  0621
         MH    @14,@CH00452                                        0621
         L     @11,$NSPTR(,WAPTR)                                  0621
         AL    @11,@CF01096                                        0621
         LA    @14,FROMSNS(@14,@11)                                0621
         ST    @14,ITATCFR                                         0621
*   ITATCTO=ADDR(TOSENSE);          /* SET THE TO ADDRESS            */
         LA    @14,2376                                            0622
         ALR   @14,WAPTR                                           0622
         ST    @14,ITATCTO                                         0622
*   ITATCTP='1'B;                   /* SET THE TYPE OF CONVERT BIT   */
         OI    ITATCTP,B'10000000'                                 0623
*   ITATCNT=$NSCNT;                 /* GIVE THE CONVERT BYTE COUNT   */
         LH    @14,$NSCNT(,WAPTR)                                  0624
         STC   @14,ITATCNT                                         0624
*   R1=ADDR(ITATCPRM);              /* POINT TO CONVERT PARM LIST    */
         LA    R1,ITATCPRM                                         0625
*   CALL ISTSC021;                  /* CALL CONVERT DIRECTLY         */
         L     @15,@CV00877                                        0626
         BALR  @14,@15                                             0626
*   DO $CTR=1 TO $NSCNT;            /* MOVE CONVERTED SENSE          */
         LA    @14,1                                               0627
         B     @DE00627                                            0627
@DL00627 DS    0H                                                  0628
*     SNSDATA($CTR)=TOSENSE($CTR);  /* BYTES INTO BUFFER             */
         LH    @14,$CTR(,WAPTR)                                    0628
         LR    @11,@14                                             0628
         MH    @11,@CH00180                                        0628
         ALR   @11,WAPTR                                           0628
         ALR   @14,@14                                             0628
         ALR   @14,WAPTR                                           0628
         MVC   SNSDATA+1983(2,@11),TOSENSE+2374(@14)               0628
*   END;                                                           0629
         LA    @14,1                                               0629
         AH    @14,$CTR(,WAPTR)                                    0629
@DE00627 STH   @14,$CTR(,WAPTR)                                    0629
         CH    @14,$NSCNT(,WAPTR)                                  0629
         BNH   @DL00627                                            0629
*   CALL S24C2000;                  /* CHK PP LVLS 2&3 OUTPUT LIN    */
         BAL   @14,S24C2000                                        0630
*   $NSXX=$NSXX-MAXSNS;             /* SUBTRACT BYTES JUST PRNTD     */
         LH    @14,$NSXX(,WAPTR)                                   0631
         SL    @14,@CF00452                                        0631
         STH   @14,$NSXX(,WAPTR)                                   0631
*   $INDEX=$INDEX+1;                /* INCREMENT INDEX               */
         LA    @11,1                                               0632
         SLR   @00,@00                                             0632
         IC    @00,$INDEX(,WAPTR)                                  0632
         ALR   @00,@11                                             0632
         STC   @00,$INDEX(,WAPTR)                                  0632
*   IF $NSXX<1                      /* IF THAT WAS IT, RETURN        */
*     THEN                                                         0633
         CR    @14,@11                                             0633
         BL    @RT00633                                            0633
*     GOTO S24C6020;                                               0634
*   ELSE                                                           0635
*     GOTO S24C6010;                /* OR GO TO TOP AND GET NEXT   0635
*                                      SERIES OF SNS BYTES           */
         B     S24C6010                                            0635
*S24C6020:                                                         0636
*   R14=$24SAVE1;                   /* RESTORE RET ADDR              */
S24C6020 L     R14,$24SAVE1(,WAPTR)                                0636
*   END S24C6000;                                                  0637
*                                                                  0637
@EL00006 DS    0H                                                  0637
@EF00006 DS    0H                                                  0637
@ER00006 BR    @14                                                 0637
*/********************************************************************/
*/* ROUTINE TO SET UP AND PRINT EXPECTED, RECEIVED, & WRITTEN DATA   */
*/*                                                                  */
*/*      INPUT:                                                      */
*/*            $ATAPTR - POINTER TO DATA                             */
*/*            $ATACNT - COUNT OF TOTAL DATA BYTES                   */
*/********************************************************************/
*                                                                  0638
*S24C7000:                                                         0638
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0638
S24C7000 DS    0H                                                  0639
*   $24SAVE1=R14;                   /* SAVE RETURN ADDRESS           */
         ST    R14,$24SAVE1(,WAPTR)                                0639
*   $DDRPTR=$ATAPTR;                /* PT TO DATA                    */
         L     @14,$ATAPTR(,WAPTR)                                 0640
         ST    @14,$DDRPTR(,WAPTR)                                 0640
*   IF $ATAPTR=0×$ATACNT<=0         /* IF NO ADDR GIVEN FOR DATA     */
*     THEN                          /* OR COUNT NOT POSITIVE         */
         SLR   @11,@11                                             0641
         CR    @14,@11                                             0641
         BE    @RT00641                                            0641
         CH    @11,$ATACNT(,WAPTR)                                 0641
         BL    @RF00641                                            0641
@RT00641 DS    0H                                                  0642
*     DO;                           /*                               */
*       $24RETCD='0C'X;             /* SET RC=0C                     */
         MVI   $24RETCD(WAPTR),X'0C'                               0643
*       GOTO S24C7020;              /* RETURN                        */
         B     S24C7020                                            0644
*     END;                                                         0645
*S24C7010:                                                         0646
*   IF $DONTCVT=OFF                 /* IF DON'T CONVERT DATA FLAG    */
*     THEN                          /* IS OFF                        */
@RF00641 DS    0H                                                  0646
S24C7010 TM    $DONTCVT(PRTPTR),B'00001000'                        0646
         BNZ   @RF00646                                            0646
*     DO;                           /* THEN DATA WILL BE CONVERTD    */
*       IF $ATACNT<=25              /* IF COUNT < = MAX FOR LINE     */
*         THEN                                                     0648
         LH    @14,$ATACNT(,WAPTR)                                 0648
         C     @14,@CF00851                                        0648
         BH    @RF00648                                            0648
*         $IMITX=                   /* DO WHOLE THING                */
*             $ATACNT;              /*                               */
         STC   @14,$IMITX(,WAPTR)                                  0649
*       ELSE                                                       0650
*         $IMITX=25;                /* ELSE CONVERT JUST 1 LINE    0650
*                                      CONVERT DATA TO WORK AREA     */
*                                                                  0650
         B     @RC00648                                            0650
@RF00648 MVI   $IMITX(WAPTR),X'19'                                 0650
*       /*************************************************************/
*       /*                                                           */
*       /* ITACONV FROM(CNVDATA)TO(DPRWORK)COUNT($IMITX)TYPE(HE)     */
*       /* INVOKED                                                   */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0651
*       ITATCFR=ADDR(CNVDATA);      /* SET THE FROM ADDRESS          */
@RC00648 L     @14,$DDRPTR(,WAPTR)                                 0651
         ST    @14,ITATCFR                                         0651
*       ITATCTO=ADDR(DPRWORK);      /* SET THE TO ADDRESS            */
         LA    @14,DPRWORK(,WAPTR)                                 0652
         ST    @14,ITATCTO                                         0652
*       ITATCTP='1'B;               /* SET THE TYPE OF CONVERT BIT   */
         OI    ITATCTP,B'10000000'                                 0653
*       ITATCNT=$IMITX;             /* GIVE THE CONVERT BYTE COUNT   */
         IC    @14,$IMITX(,WAPTR)                                  0654
         STC   @14,ITATCNT                                         0654
*       R1=ADDR(ITATCPRM);          /* POINT TO CONVERT PARM LIST    */
         LA    R1,ITATCPRM                                         0655
*       CALL ISTSC021;              /* CALL CONVERT DIRECTLY         */
         L     @15,@CV00877                                        0656
         BALR  @14,@15                                             0656
*       $ATACNT=$ATACNT-            /* SUBTRACT LINE PRINTED         */
*           $IMITX;                                                0657
         SLR   @14,@14                                             0657
         IC    @14,$IMITX(,WAPTR)                                  0657
         LH    @00,$ATACNT(,WAPTR)                                 0657
         SLR   @00,@14                                             0657
         STH   @00,$ATACNT(,WAPTR)                                 0657
*       $IMITX=2*$IMITX;            /* CONVERTED DATA COUNT          */
         ALR   @14,@14                                             0658
         STC   @14,$IMITX(,WAPTR)                                  0658
*       $ATAPTR=ADDR(DPRWORK);      /* DATA TO PRINT                 */
         LA    @14,DPRWORK(,WAPTR)                                 0659
         ST    @14,$ATAPTR(,WAPTR)                                 0659
*     END;                                                         0660
*   ELSE                                                           0661
*     DO;                                                          0661
         B     @RC00646                                            0661
@RF00646 DS    0H                                                  0662
*       IF $ATACNT<=50              /* IF DATA COUNT IS              */
*         THEN                                                     0662
         LH    @14,$ATACNT(,WAPTR)                                 0662
         C     @14,@CF00719                                        0662
         BH    @RF00662                                            0662
*         $IMITX=                   /* < = LINE LIMIT                */
*             $ATACNT;              /* PRINT ALL OF IT               */
         STC   @14,$IMITX(,WAPTR)                                  0663
*       ELSE                                                       0664
*         $IMITX=50;                /* ELSE PRINT 1 LINE OF IT       */
         B     @RC00662                                            0664
@RF00662 MVI   $IMITX(WAPTR),X'32'                                 0664
*       $ATACNT=$ATACNT-            /* SUBTRACT LINE PRINTED         */
*           $IMITX;                                                0665
@RC00662 LH    @14,$ATACNT(,WAPTR)                                 0665
         SLR   @00,@00                                             0665
         IC    @00,$IMITX(,WAPTR)                                  0665
         SLR   @14,@00                                             0665
         STH   @14,$ATACNT(,WAPTR)                                 0665
*     END;                                                         0666
*   DATAFLD(1:$IMITX)=              /* MOVE DATA INTO PRINT LINE     */
*       DATARRAY(1:$IMITX);                                        0667
@RC00646 SLR   @14,@14                                             0667
         IC    @14,$IMITX(,WAPTR)                                  0667
         BCTR  @14,0                                               0667
         L     @11,$ATAPTR(,WAPTR)                                 0667
         EX    @14,@SM01097                                        0667
*   CALL S24C2000;                  /* CHK PP 2&3 OUTPUT LINE        */
         BAL   @14,S24C2000                                        0668
*   IF $DONTCVT=OFF                 /* IF DATA TO BE CONVERTED       */
*     THEN                          /* THEN                          */
         TM    $DONTCVT(PRTPTR),B'00001000'                        0669
         BNZ   @RF00669                                            0669
*     $DDRPTR=$DDRPTR+($IMITX/2);   /* POINT TO NEXT DATA TO CONVERT */
         SLR   @14,@14                                             0670
         IC    @14,$IMITX(,WAPTR)                                  0670
         SRL   @14,1                                               0670
         AL    @14,$DDRPTR(,WAPTR)                                 0670
         ST    @14,$DDRPTR(,WAPTR)                                 0670
*   ELSE                            /* ESLE                          */
*     $ATAPTR=$ATAPTR+$IMITX;       /* POINT TO NEXT PART            */
         B     @RC00669                                            0671
@RF00669 SLR   @14,@14                                             0671
         IC    @14,$IMITX(,WAPTR)                                  0671
         AL    @14,$ATAPTR(,WAPTR)                                 0671
         ST    @14,$ATAPTR(,WAPTR)                                 0671
*   IF $ATACNT>0                    /* IF MORE TO PRINT              */
*     THEN                                                         0672
@RC00669 LH    @14,$ATACNT(,WAPTR)                                 0672
         LTR   @14,@14                                             0672
         BP    @RT00672                                            0672
*     GOTO S24C7010;                /* KEEP PROCESSING               */
*S24C7020:                                                         0674
*   R14=$24SAVE1;                   /* RESTORE RET ADDR              */
S24C7020 L     R14,$24SAVE1(,WAPTR)                                0674
*   END S24C7000;                                                  0675
@EL00007 DS    0H                                                  0675
@EF00007 DS    0H                                                  0675
@ER00007 BR    @14                                                 0675
*S24C9990:                                                         0676
*   R15=0;                          /* SET RC = 0                    */
S24C9990 SLR   R15,R15                                             0676
*   $R13PTR=$24SAV13;               /* PT RCM TO MY CALLER           */
         L     @14,$24SAV13(,WAPTR)                                0677
         ST    @14,$R13PTR(,WAPTR)                                 0677
*   $NOTRRCH=OFF;                   /* DO RC HDLG & TRACE NOW        */
         NI    $NOTRRCH(WAPTR),B'11111101'                         0678
*S24C9999:                                                         0679
*   R13=SVESC024(2);                /* PTR TO CALLER'S SVAREA        */
S24C9999 L     R13,SVESC024+4(,WAPTR)                              0679
*   DO;                             /* ATDSPLY                       */
*   END;                            /* ATDSPLY                       */
*   END ISTSC024;                                                  0682
@EL00001 DS    0H                                                  0682
@EF00001 DS    0H                                                  0682
@ER00001 L     @14,12(,@13)                                        0682
         LM    @00,@12,20(@13)                                     0682
         BR    @14                                                 0682
@DATA    DS    0H
@CH00180 DC    H'3'
@CH00326 DC    H'68'
@SM01093 MVC   $BUFFER(0,WAPTR),S24LINE(@11)
@SM01097 MVC   DATAFLD+1976(0,WAPTR),DATARRAY(@11)
         DS    0F
@TF00001 DS    F
         DS    0F
@CF00864 DC    F'0'
@CF00043 DC    F'1'
@CF00086 DC    F'2'
@CF00041 DC    F'4'
@CF00399 DC    F'6'
@CF00039 DC    F'8'
@CF00452 DC    F'17'
@CH00452 EQU   @CF00452+2
@CF00851 DC    F'25'
@CF00719 DC    F'50'
@CF00435 DC    F'120'
@CF01096 DC    F'-17'
@CF01084 DC    F'-8'
@CF01092 DC    F'-4'
@CF01082 DC    XL4'0000FFFF'
@CV00877 DC    V(ISTSC021)
@CV00995 DC    V(ISTIC002)
@CV01021 DC    V(ISTCC011)
         DS    0D
CSWPSWPT DS    A
         DS    0D
@TS00001 DS    CL8
@CC00920 DC    C'XPTD CSW1'
@CC00934 DC    C'RCVD CSW1'
@CC00959 DC    C'XPTD DATA'
@CC00964 DC    C'RCVD DATA'
@CC00968 DC    C'WRTN DATA'
@CC00890 DC    C'        '
@CC00950 DC    C'XPTD SNS'
@CC00956 DC    C'RCVD SNS'
@CC00994 DC    C'SYS CON '
@CC00917 DC    C'XPTD CC'
@CC00919 DC    C'RCVD CC'
@CC00889 DC    C'DEV/LN'
@CC00893 DC    C'REFNUM'
@CC00912 DC    C'QUEUED'
@CC00880 DC    C'NONE'
@CC00931 DC    C'CSW2'
@CC00888 DC    C'RTN'
@CC00892 DC    C'ECA'
@CC00904 DC    C'CAW'
@CC00905 DC    C'CCW'
MASK     DS    BL1
CSWXXXXX DC    CL6'XXXXXX'
ITATCPRM DS    CL14
         ORG   ITATCPRM
@NM00100 DC    X'0102F4F1'
ITATCFR  DS    AL4
ITATCTO  DS    AL4
@NM00101 DC    AL1(0)
         ORG   @NM00101
ITATCTP  DS    BL1
         ORG   ITATCPRM+13
ITATCNT  DS    FL1
         ORG   ITATCPRM+14
         DS    CL2
$TCA15   DS    CL13
         ORG   $TCA15
$TCB15   DC    A(129)
$TCC15   DC    A(0)
$TCD15   DC    B'10000000'
$TCE15   DC    X'FFFFFFFF'
         ORG   $TCA15+13
         DS    CL3
$TCA16   DS    CL13
         ORG   $TCA16
$TCB16   DC    A(157)
$TCC16   DC    A(0)
$TCD16   DC    B'10000000'
$TCE16   DC    X'FFFFFFFF'
         ORG   $TCA16+13
         DS    CL3
$TCA17   DS    CL13
         ORG   $TCA17
$TCB17   DC    A(240)
$TCC17   DC    A(0)
$TCD17   DC    B'00000000'
$TCE17   DC    X'FFFFFFFF'
         ORG   $TCA17+13
         DS    CL3
S24REP   DS    10F
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
SEARCHCT EQU   @08
J        EQU   @08
BFRPTR   EQU   @09
WORKPTR  EQU   @08
HDRPTR   EQU   @08
WAPTR    EQU   @02
DPRPTR   EQU   @03
PRTPTR   EQU   @04
R1       EQU   @01
R13      EQU   @13
R15      EQU   @15
R14      EQU   @14
TECBPTR  EQU   @05
TOLTEPWA EQU   0
$SCTTBLE EQU   TOLTEPWA
$TESTOPT EQU   $SCTTBLE+2
$NOPRT   EQU   $TESTOPT
$FSTCOMM EQU   $TESTOPT
$ERROPT  EQU   $SCTTBLE+3
$TESTERR EQU   $ERROPT
$ASTERIK EQU   $ERROPT
$CATERR  EQU   $ERROPT
$ALTPRNT EQU   $ERROPT
$NERRPRT EQU   $ERROPT
$LOOPERR EQU   $ERROPT
$LOOPTST EQU   $ERROPT
$PDEVFLG EQU   $SCTTBLE+10
$CDSFLGS EQU   $SCTTBLE+11
$SYMNAME EQU   $CDSFLGS
$PDEVADR EQU   $SCTTBLE+12
$CDS8T19 EQU   $SCTTBLE+20
$SYNAME  EQU   $CDS8T19+4
$EXECFLG EQU   $SCTTBLE+33
$OLTFLGS EQU   $SCTTBLE+36
$OLTFLG2 EQU   $SCTTBLE+37
$TOTFLG1 EQU   $SCTTBLE+38
$ROUTMSK EQU   $SCTTBLE+40
$CDA     EQU   TOLTEPWA+100
$RCA     EQU   $CDA+44
$OLTPTR  EQU   $CDA+52
$LOWADDR EQU   $OLTPTR
$HIMOREC EQU   $CDA+60
$R13PTR  EQU   $CDA+80
$PRNTLVL EQU   $CDA+104
$PRTFORM EQU   $CDA+116
$COMMFLG EQU   TOLTEPWA+224
$FLAG1   EQU   $COMMFLG
$FLAG2   EQU   $COMMFLG+1
$NDR     EQU   $FLAG2
$FLAG3   EQU   $COMMFLG+2
$PRTONLY EQU   $FLAG3
$FLAG4   EQU   $COMMFLG+3
$FLAG5   EQU   $COMMFLG+4
$FSTFE   EQU   $FLAG5
$FSTCAT  EQU   $FLAG5
$EOJ     EQU   $FLAG5
$CANCEL  EQU   $EOJ
$FLAG6   EQU   $COMMFLG+5
$ABNDBIT EQU   $FLAG6
$FLAG7   EQU   $COMMFLG+6
$FLAG8   EQU   $COMMFLG+7
$TCECM   EQU   $FLAG8
$FLAG9   EQU   $COMMFLG+8
$NOTRRCH EQU   $FLAG9
$FLAG10  EQU   $COMMFLG+9
$FLAG11  EQU   $COMMFLG+10
$FLAG12  EQU   $COMMFLG+11
$FLAG13  EQU   $COMMFLG+12
$CATMSG  EQU   $FLAG13
$DEVTBLE EQU   TOLTEPWA+240
$DEVCDS  EQU   $DEVTBLE
$DEVUNAD EQU   $DEVCDS
@NM00035 EQU   $DEVUNAD+2
$DEVFEAT EQU   $DEVCDS+4
$DEVCDSF EQU   $DEVCDS+9
$DEVSDCF EQU   $DEVCDS+10
$$SYMNME EQU   $DEVCDS+12
$DEVFLG1 EQU   $DEVTBLE+20
$EVNCPLT EQU   $DEVFLG1
$ATTNEXP EQU   $DEVFLG1
$INTOCC  EQU   $DEVFLG1
$DEVFLG2 EQU   $DEVTBLE+21
$TESTMDE EQU   $DEVFLG2
$DEVTECB EQU   $DEVTBLE+22
$OPIS    EQU   $DEVTECB
$OPND    EQU   $DEVTECB+2
$DEVFLG3 EQU   $DEVTBLE+27
$SIOFLG  EQU   $DEVFLG3
$SYSMN   EQU   $DEVTBLE+28
$IFTOUT  EQU   $DEVTBLE+36
$DEVSESP EQU   $IFTOUT
$SSCPDAF EQU   $IFTOUT+6
$LDNCBPT EQU   $DEVTBLE+48
$RNINFO  EQU   $DEVTBLE+56
$LINENME EQU   $RNINFO
$DEVFLG5 EQU   $RNINFO+8
$DEVFLG4 EQU   $DEVTBLE+65
$DEVCNTS EQU   TOLTEPWA+1464
$BUFFER  EQU   TOLTEPWA+1976
$INBUFR  EQU   TOLTEPWA+2104
$WORK    EQU   TOLTEPWA+2376
#EXITA   EQU   TOLTEPWA+2632
$CCOMDAT EQU   TOLTEPWA+2644
$COUTAD  EQU   $CCOMDAT
$COUTCT  EQU   $CCOMDAT+4
$CINADR  EQU   $CCOMDAT+8
$CFLGS   EQU   $CCOMDAT+16
$24RETCD EQU   TOLTEPWA+2663
$24SAV13 EQU   TOLTEPWA+2664
$24UNADR EQU   TOLTEPWA+2668
$24SAVE1 EQU   TOLTEPWA+2672
$24SAVE2 EQU   TOLTEPWA+2676
$24FLGS  EQU   TOLTEPWA+2680
$24FEMSG EQU   TOLTEPWA+2681
$ESECTID EQU   $24FEMSG
$24RTN#  EQU   $24FEMSG+8
$24CATMG EQU   $24FEMSG+11
$24DEVAD EQU   $24CATMG
$24SYMNE EQU   $24CATMG+4
@NM00043 EQU   TOLTEPWA+2776
$DDRPTR  EQU   @NM00043
$OUNTPTR EQU   @NM00043+4
$NSPTR   EQU   $OUNTPTR
$ATAPTR  EQU   $NSPTR
$CTR     EQU   @NM00043+8
$NSCNT   EQU   @NM00043+10
$ATACNT  EQU   $NSCNT
$NSXX    EQU   @NM00043+12
$UMXX    EQU   @NM00043+14
$ENXX    EQU   @NM00043+15
$IMITX   EQU   $ENXX
$INDEX   EQU   $IMITX
SVESC033 EQU   TOLTEPWA+3160
SVECC013 EQU   TOLTEPWA+3232
SVEIC003 EQU   TOLTEPWA+3592
SVESC022 EQU   TOLTEPWA+3736
SVECC011 EQU   TOLTEPWA+4024
#EXIT    EQU   0
@NM00046 EQU   0
SECTID   EQU   @NM00046
LEVEL    EQU   @NM00046+8
RTNDISP  EQU   @NM00046+10
INST     EQU   @NM00046+12
$NEWSPRF EQU   0
$RTN#    EQU   $NEWSPRF
#FLAGS   EQU   $NEWSPRF+16
$REFNUM  EQU   $NEWSPRF+17
$ECA     EQU   $NEWSPRF+32
DPRNTMAP EQU   0
$PRTCTLW EQU   DPRNTMAP+4
$PRTMSGL EQU   DPRNTMAP+8
$PRTTECB EQU   DPRNTMAP+12
$PRTACCC EQU   DPRNTMAP+16
$PTCCWA  EQU   DPRNTMAP+20
$PTXCSW1 EQU   DPRNTMAP+24
$PTRCSW1 EQU   DPRNTMAP+28
$PTXCSW2 EQU   DPRNTMAP+32
$PTRCSW2 EQU   DPRNTMAP+36
$PTXSNSA EQU   DPRNTMAP+40
$PTRSNSA EQU   DPRNTMAP+44
$PTXDATA EQU   DPRNTMAP+48
$PTRDATA EQU   DPRNTMAP+52
$PTWDATA EQU   DPRNTMAP+56
$PTDESCA EQU   DPRNTMAP+60
PRNTMAPA EQU   0
$PTCNTWD EQU   PRNTMAPA
$DPHEADR EQU   $PTCNTWD
$DPCHAIN EQU   $PTCNTWD
$ERRORDP EQU   $PTCNTWD
$DPREFNM EQU   $PTCNTWD
$CCWERR  EQU   $PTCNTWD+1
$CSW1ERR EQU   $PTCNTWD+1
$DONTCVT EQU   $PTCNTWD+1
$SENSERR EQU   $PTCNTWD+1
$MESSAGE EQU   $PTCNTWD+1
$DESCRIP EQU   $PTCNTWD+2
$DPCCW   EQU   $PTCNTWD+2
$XPDCSW1 EQU   $PTCNTWD+2
$RCVCSW1 EQU   $PTCNTWD+2
$XPDCSW2 EQU   $PTCNTWD+2
$RCVCSW2 EQU   $PTCNTWD+2
$XPTDSNS EQU   $PTCNTWD+2
$RCVDSNS EQU   $PTCNTWD+2
$XPTDATA EQU   $PTCNTWD+3
$RCVDATA EQU   $PTCNTWD+3
$WRTDATA EQU   $PTCNTWD+3
$DATAERR EQU   $PTCNTWD+3
$CONCODE EQU   $PTCNTWD+3
$CCERROR EQU   $PTCNTWD+3
$PSWCSW  EQU   $PTCNTWD+3
$PTMSGLC EQU   PRNTMAPA+4
$PTMSGOF EQU   PRNTMAPA+5
$PTECC   EQU   PRNTMAPA+6
$PTRENUM EQU   PRNTMAPA+7
$PTDEVAD EQU   PRNTMAPA+9
$PTNCCWS EQU   PRNTMAPA+11
$PTFCCWS EQU   PRNTMAPA+12
$PTXCSWM EQU   PRNTMAPA+13
$PTXSNSC EQU   PRNTMAPA+14
$PTRSNSC EQU   PRNTMAPA+15
$PTDESCL EQU   PRNTMAPA+16
$PTXDATC EQU   PRNTMAPA+17
$PTRDATC EQU   PRNTMAPA+19
$PTWDATC EQU   PRNTMAPA+21
$PTDESCC EQU   PRNTMAPA+23
TECBMAPS EQU   0
TECBFDCT EQU   TECBMAPS
TECBFDLN EQU   TECBMAPS+1
TECBSNLN EQU   TECBMAPS+2
TECBFLGS EQU   TECBMAPS+4
TCBQUEUE EQU   TECBFLGS
TECBSNCT EQU   TECBMAPS+5
TECBSNOC EQU   TECBMAPS+6
TECBEVOC EQU   TECBMAPS+7
TECBEVT1 EQU   TECBMAPS+8
TECBFD01 EQU   0
TCBEVTYP EQU   TECBFD01
TCBEVDEV EQU   TECBFD01+1
@NM00055 EQU   TECBFD01+4
TCBEVCSW EQU   @NM00055
TECBSNS1 EQU   0
TCBSNDEV EQU   TECBSNS1
TCBSENSE EQU   TECBSNS1+3
TECBSEND EQU   0
TCBRESP  EQU   TECBSEND+4
TCBRTYPE EQU   TECBSEND+7
TCBRKCHG EQU   TECBSEND+8
S24ADDRA EQU   0
S24LINE  EQU   0
S24BYTEA EQU   0
S24FLAG1 EQU   0
S24CCREQ EQU   S24FLAG1
S24CSW2R EQU   S24FLAG1
S24SNSRQ EQU   S24FLAG1
S24TCBER EQU   S24FLAG1
S24SCHFL EQU   S24FLAG1
@NM00062 EQU   0
HDRERROR EQU   @NM00062
HDRTSTID EQU   @NM00062+1
HDRHYPHN EQU   @NM00062+9
HDRLEVEL EQU   @NM00062+10
HDRRTN   EQU   @NM00062+14
HDRRTN#  EQU   @NM00062+17
HDROUTN# EQU   HDRRTN#+1
HDRDEVLN EQU   @NM00062+24
HDRUNADR EQU   @NM00062+31
HDRSYMNM EQU   @NM00062+36
HDRECA   EQU   @NM00062+46
HDRECA#  EQU   @NM00062+50
HDREFNUM EQU   @NM00062+55
HDREF#   EQU   @NM00062+61
@NM00069 EQU   0
DPRCCWER EQU   @NM00069
DPRCCW   EQU   @NM00069+1
DPRCCW#  EQU   @NM00069+4
DPRCMDCD EQU   @NM00069+7
DPRDATA  EQU   @NM00069+10
DPRSPARE EQU   @NM00069+17
DPRFLAGS EQU   @NM00069+20
DPRCOUNT EQU   @NM00069+23
DPRCAW   EQU   @NM00069+32
DPRCAWAD EQU   @NM00069+36
S24CCWA  EQU   0
@NM00077 EQU   0
S24CCWCD EQU   @NM00077
S24CCWDA EQU   @NM00077+2
S24CCWEX EQU   @NM00077+8
S24CCWFL EQU   @NM00077+10
S24CCWCT EQU   @NM00077+12
@NM00078 EQU   0
CCERROR  EQU   @NM00078
CCXPTDCC EQU   @NM00078+1
CCXPTDCD EQU   @NM00078+9
CCRCVDCC EQU   @NM00078+14
CCQUEUED EQU   @NM00078+22
CCCONDCD EQU   CCQUEUED
S24CC    EQU   0
@NM00083 EQU   0
CSWPSWER EQU   @NM00083
CSWXPTRC EQU   @NM00083+1
CSWPSW1  EQU   CSWXPTRC+5
CSW#     EQU   CSWXPTRC+8
CSW1KEY  EQU   @NM00083+11
CSW1NONE EQU   CSW1KEY
CSW2CSW2 EQU   @NM00083+32
CSWPSW2  EQU   CSW2CSW2
CSW2KEY  EQU   @NM00083+37
CSW2NONE EQU   CSW2KEY
WORKCSW  EQU   0
PSWFLD   EQU   0
@NM00092 EQU   0
CSWKEY   EQU   @NM00092
CSWBLANK EQU   @NM00092+2
CSWADDR  EQU   @NM00092+3
CSWSTAT  EQU   @NM00092+10
CSWCOUNT EQU   @NM00092+15
FROMFLD  EQU   0
@NM00095 EQU   0
SNSASTRK EQU   @NM00095
SNSXPRCV EQU   @NM00095+1
SNSNONE  EQU   @NM00095+10
SNSFLDS  EQU   0
SNSDATA  EQU   SNSFLDS
FROMSNS  EQU   0
TOSENSE  EQU   0
@NM00098 EQU   0
DATAERR  EQU   @NM00098
DATAXPRC EQU   @NM00098+1
DATAWRT  EQU   DATAXPRC
DATAFLD  EQU   @NM00098+11
DATARRAY EQU   0
CNVDATA  EQU   0
BACKSAVE EQU   0
$PTMSGCA EQU   0
$PTMSGCC EQU   0
OLTENTRY EQU   0
SVESC024 EQU   SVESC022
DPRWORK  EQU   $WORK
DPRWORK1 EQU   DPRWORK+3
DPRWORK2 EQU   DPRWORK+4
I        EQU   $CTR
SVECC012 EQU   SVESC022
SVEIC00A EQU   SVEIC003
SVEIC004 EQU   SVEIC003
SVEIC005 EQU   SVEIC003
SVESC02A EQU   SVESC022
SVESC02B EQU   SVESC022
SVESC02D EQU   SVESC022
SVESC02E EQU   SVESC022
SVESC02F EQU   SVECC013
SVESC027 EQU   SVESC022
SVESC029 EQU   SVESC033
SVESC031 EQU   SVECC013
SVESC032 EQU   SVECC011
SVETC037 EQU   SVEIC003
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
@NM00060 EQU   DPRWORK
@NM00099 EQU   @NM00098+10
@NM00097 EQU   SNSFLDS+2
@NM00096 EQU   @NM00095+9
@NM00094 EQU   @NM00092+14
@NM00093 EQU   @NM00092+9
@NM00091 EQU   CSW2KEY+4
@NM00090 EQU   @NM00083+36
@NM00089 EQU   CSW2CSW2+1
@NM00088 EQU   @NM00083+27
@NM00087 EQU   CSW1KEY+4
@NM00086 EQU   @NM00083+10
@NM00085 EQU   CSWXPTRC+6
@NM00084 EQU   CSWXPTRC
@NM00082 EQU   CCQUEUED+1
@NM00081 EQU   @NM00078+21
@NM00080 EQU   @NM00078+10
@NM00079 EQU   @NM00078+8
@NM00076 EQU   @NM00069+35
@NM00075 EQU   @NM00069+27
@NM00074 EQU   @NM00069+22
@NM00073 EQU   @NM00069+19
@NM00072 EQU   @NM00069+16
@NM00071 EQU   @NM00069+9
@NM00070 EQU   @NM00069+6
@NM00068 EQU   @NM00062+53
@NM00067 EQU   @NM00062+49
@NM00066 EQU   @NM00062+44
@NM00065 EQU   @NM00062+35
@NM00064 EQU   @NM00062+21
HDRBLANK EQU   HDRRTN#
@NM00063 EQU   @NM00062+12
@NM00061 EQU   S24FLAG1
TCBOBSQL EQU   TECBSEND+23
TCBOBSQ  EQU   TECBSEND+22
TCBIBSQL EQU   TECBSEND+20
TCBIBSQ  EQU   TECBSEND+19
TCBSIGDA EQU   TECBSEND+15
TCBSEQNO EQU   TECBSEND+13
TCBCNTRL EQU   TECBSEND+10
TCBCHAIN EQU   TECBSEND+9
@NM00059 EQU   TCBRKCHG
TCBALT   EQU   TCBRKCHG
TCBREQ   EQU   TCBRKCHG
TCBCMD   EQU   TCBRKCHG
TCBEB    EQU   TCBRKCHG
TCBBB    EQU   TCBRKCHG
@NM00058 EQU   TCBRTYPE
TCBDFAS  EQU   TCBRTYPE
TCBNDFS  EQU   TCBRTYPE
TCBRSP   EQU   TCBRTYPE
@NM00057 EQU   TCBRTYPE
TCBRECLN EQU   TECBSEND+5
TCBRRN   EQU   TCBRESP
TCBNFME  EQU   TCBRESP
TCBEX    EQU   TCBRESP
@NM00056 EQU   TCBRESP
TCBUSEN  EQU   TECBSEND+2
TCBSSENM EQU   TECBSEND+1
TCBSSEN  EQU   TECBSEND
@NM00054 EQU   TECBFLGS
@NM00053 EQU   $PTCNTWD+3
@NM00052 EQU   $PTCNTWD+1
$CSW2ERR EQU   $PTCNTWD+1
@NM00051 EQU   $PTCNTWD+1
@NM00050 EQU   $PTCNTWD
$DPFORMS EQU   $PTCNTWD
$DPRIDNT EQU   DPRNTMAP+2
$DPRLEVL EQU   DPRNTMAP+1
$DPRTRMG EQU   DPRNTMAP
$RME     EQU   $NEWSPRF+36
@NM00049 EQU   $NEWSPRF+35
$DCHB    EQU   $NEWSPRF+28
$MOSIZE  EQU   $NEWSPRF+24
$RTSIZE  EQU   $NEWSPRF+20
$COUNT   EQU   $NEWSPRF+18
@NM00048 EQU   #FLAGS
#MSGIDRQ EQU   #FLAGS
#PLKMCOR EQU   #FLAGS
@NM00047 EQU   #FLAGS
$VIRTUAL EQU   #FLAGS
$PLINK$  EQU   $NEWSPRF+12
$SCTREQ  EQU   $NEWSPRF+11
$RM      EQU   $NEWSPRF+9
$CTYPE   EQU   $NEWSPRF+8
$CCLASS  EQU   $NEWSPRF+7
$CFEAT   EQU   $NEWSPRF+6
$CMODEL  EQU   $NEWSPRF+5
$TYPE    EQU   $NEWSPRF+4
$CLASS   EQU   $NEWSPRF+3
$FEAT    EQU   $NEWSPRF+2
$MODEL   EQU   $NEWSPRF+1
#MSGID   EQU   @NM00046+16
SVECC010 EQU   TOLTEPWA+3952
SVETC035 EQU   TOLTEPWA+3880
SVESC030 EQU   TOLTEPWA+3808
SVESC020 EQU   TOLTEPWA+3664
SVEIC002 EQU   TOLTEPWA+3520
SVECC014 EQU   TOLTEPWA+3376
SVESC120 EQU   TOLTEPWA+3304
SVESC025 EQU   TOLTEPWA+3088
@NM00045 EQU   TOLTEPWA+2980
$RPLERR  EQU   TOLTEPWA+2977
@NM00044 EQU   TOLTEPWA+2976
$R13PR3  EQU   TOLTEPWA+2972
$CEINT2  EQU   TOLTEPWA+2968
$CEINT1  EQU   TOLTEPWA+2964
$MSGGET  EQU   TOLTEPWA+2960
$ACQLIST EQU   TOLTEPWA+2956
$R4SAVE1 EQU   TOLTEPWA+2952
$CLSISS  EQU   TOLTEPWA+2950
$CLSCNT  EQU   TOLTEPWA+2948
$CUTABLE EQU   TOLTEPWA+2868
$BUFSZ2  EQU   TOLTEPWA+2864
$RESID2  EQU   TOLTEPWA+2860
$OLTCCW2 EQU   TOLTEPWA+2856
$ENDBFR2 EQU   TOLTEPWA+2852
$1STBFR2 EQU   TOLTEPWA+2848
$TECB2   EQU   TOLTEPWA+2844
$BUFSZ1  EQU   TOLTEPWA+2840
$RESID1  EQU   TOLTEPWA+2836
$OLTCCW1 EQU   TOLTEPWA+2832
$ENDBFR1 EQU   TOLTEPWA+2828
$1STBFR1 EQU   TOLTEPWA+2824
$TECB1   EQU   TOLTEPWA+2820
$WAITIME EQU   TOLTEPWA+2816
$TRTN#   EQU   TOLTEPWA+2815
$WIODEV  EQU   TOLTEPWA+2814
$RQSTSZE EQU   TOLTEPWA+2812
$RQSTPTR EQU   TOLTEPWA+2808
$R4SAVE  EQU   TOLTEPWA+2804
$PARTADR EQU   TOLTEPWA+2800
$TBSDATA EQU   TOLTEPWA+2796
$CTWIDTH EQU   TOLTEPWA+2795
$CTLINE  EQU   TOLTEPWA+2794
$APWIDTH EQU   TOLTEPWA+2793
$APLINE  EQU   TOLTEPWA+2792
$DTORESP EQU   TOLTEPWA+2712
$APNAME  EQU   TOLTEPWA+2704
$MACID   EQU   TOLTEPWA+2661
$CSPARE  EQU   $CFLGS
$C2WAY   EQU   $CFLGS
$CINCT   EQU   $CCOMDAT+12
ROOTLOC  EQU   TOLTEPWA+2640
$RETREG  EQU   TOLTEPWA+2636
$EXTA    EQU   TOLTEPWA+2320
$PASSONA EQU   TOLTEPWA+2264
$TRMINPT EQU   TOLTEPWA+2184
$TLTRPL3 EQU   TOLTEPWA+1856
$TLTRPL2 EQU   TOLTEPWA+1736
$TLTRPL1 EQU   TOLTEPWA+1616
$SLTBL   EQU   TOLTEPWA+1468
$CDEVPT  EQU   TOLTEPWA+1466
$FEEDBCK EQU   $DEVTBLE+66
$WTISUED EQU   $DEVFLG4
$EXIOISD EQU   $DEVFLG4
$REMWRIT EQU   $DEVFLG4
$REMDONE EQU   $DEVFLG4
$2NDUSED EQU   $DEVFLG4
$1STUSED EQU   $DEVFLG4
$IGLXIFB EQU   $DEVFLG4
$EXIOLV3 EQU   $DEVFLG4
@NM00042 EQU   $DEVFLG5
$DVBASIC EQU   $DEVFLG5
$ASCII   EQU   $DEVFLG5
$DEVLU   EQU   $DEVFLG5
$OPNDFAL EQU   $DEVFLG5
$ACQNCB  EQU   $DEVFLG5
$REMOTE  EQU   $DEVFLG5
$ENDNODE EQU   $DEVFLG5
$CID     EQU   $DEVTBLE+52
$DVCOL   EQU   $LDNCBPT+2
$DVROW   EQU   $LDNCBPT
$NCSPLP  EQU   $DEVTBLE+44
$DVLN    EQU   $SSCPDAF
$DAF     EQU   $DEVSESP+4
$VARYPAB EQU   $DEVSESP
@NM00041 EQU   $DEVFLG3
$CLRSNT  EQU   $DEVFLG3
$OLTERR  EQU   $DEVFLG3
$SRTEST  EQU   $DEVFLG3
$DVSNDOK EQU   $SIOFLG
$POLLREQ EQU   $DEVFLG3
$ACQRED  EQU   $DEVFLG3
$NOTDEV  EQU   $DEVFLG3
$DVINCT  EQU   $DEVTBLE+26
$DVBRKST EQU   $OPND+1
$DVBRKSN EQU   $OPND
$DVSEQNO EQU   $OPIS
$CEINTRP EQU   $DEVFLG2
$DEVALOC EQU   $DEVFLG2
$ALLDATA EQU   $DEVFLG2
$ENDCNTL EQU   $DEVFLG2
$CTLDEV  EQU   $DEVFLG2
$NOCDS   EQU   $DEVFLG2
$DATAIN  EQU   $DEVFLG2
$PRIMARY EQU   $DEVFLG1
$DVCTBYT EQU   $INTOCC
$DEVACT  EQU   $DEVFLG1
$DVLGMDE EQU   $ATTNEXP
$DVSPRM  EQU   $EVNCPLT
$GRABBED EQU   $DEVFLG1
$CATASTR EQU   $DEVFLG1
$LETGO   EQU   $DEVFLG1
$CURELEM EQU   $$SYMNME+4
$MSGOTSD EQU   $$SYMNME
$EXTDEV  EQU   $DEVCDS+11
@NM00040 EQU   $DEVSDCF
$NOTPRIM EQU   $DEVSDCF
@NM00039 EQU   $DEVCDSF
@NM00038 EQU   $DEVCDSF
@NM00037 EQU   $DEVCDSF
$CDSNAME EQU   $DEVCDSF
$EXTRN   EQU   $DEVCDSF
$CEVOLUM EQU   $DEVCDSF
$SHARD   EQU   $DEVCDSF
$DEVFPM  EQU   $DEVCDSF
$DEVCNT  EQU   $DEVCDS+8
$DEVTYPE EQU   $DEVFEAT+3
$DEVCLAS EQU   $DEVFEAT+2
$DEVFRRS EQU   $DEVFEAT+1
$DEVMOD  EQU   $DEVFEAT
$DEVRDGT EQU   @NM00035+1
$DEVCTLU EQU   @NM00035+1
$DEVCHAN EQU   @NM00035
@NM00036 EQU   @NM00035
$CTINDX  EQU   $DEVUNAD
$FLAG16  EQU   $COMMFLG+15
$FLAG15  EQU   $COMMFLG+14
$FLAG14  EQU   $COMMFLG+13
$TEP2ND  EQU   $FLAG13
$TEP1ST  EQU   $FLAG13
$PRMPTSW EQU   $FLAG13
$DEVENT  EQU   $FLAG13
$OLTMACC EQU   $FLAG13
$LGON    EQU   $FLAG13
$CTLOGON EQU   $FLAG13
@NM00034 EQU   $FLAG12
$VARYINP EQU   $FLAG12
$ENDTEST EQU   $FLAG12
$VRYHRD  EQU   $FLAG12
$VRYSFT  EQU   $FLAG12
$POSTFLG EQU   $FLAG12
$OPTMSG  EQU   $FLAG12
$FEORCAT EQU   $FLAG11
@NM00033 EQU   $FLAG11
@NM00032 EQU   $FLAG10
$INBND   EQU   $FLAG10
$WAITFLG EQU   $FLAG10
$DPRINT  EQU   $FLAG10
$HOLD    EQU   $FLAG9
@NM00031 EQU   $FLAG9
$COPY    EQU   $FLAG9
$LSTLNSW EQU   $FLAG9
$MULLNSW EQU   $FLAG9
$REMSW   EQU   $FLAG9
$IGRES   EQU   $FLAG9
$VS2     EQU   $FLAG8
$VS1     EQU   $FLAG8
$EDOS    EQU   $FLAG8
@NM00030 EQU   $FLAG8
$TWOWAY  EQU   $FLAG8
@NM00029 EQU   $FLAG8
$RCVMSG  EQU   $FLAG7
$RCVRFLG EQU   $FLAG7
$SNDRFLG EQU   $FLAG7
$LDOIS   EQU   $FLAG7
$DCONTCT EQU   $FLAG7
$EXIOWAT EQU   $FLAG7
$2NDDATA EQU   $FLAG7
$1STDATA EQU   $FLAG7
$CIREQ   EQU   $FLAG6
$ABTERM  EQU   $ABNDBIT
$FSTMCIS EQU   $FLAG6
$DISCREQ EQU   $FLAG6
$DISCISS EQU   $FLAG6
$CHANGE  EQU   $FLAG6
$CTERROR EQU   $FLAG6
$RECAL11 EQU   $FLAG6
@NM00028 EQU   $FLAG5
$PROGCK  EQU   $CANCEL
$PRINTAP EQU   $FLAG5
@NM00027 EQU   $FLAG5
$MSG922  EQU   $FLAG5
$CT924   EQU   $FLAG5
$ACTOPND EQU   $FLAG4
$ACQCUTT EQU   $FLAG4
$CLSSACT EQU   $FLAG4
$BACKINT EQU   $FLAG4
$DMSGSW  EQU   $FLAG4
$TSTDEVP EQU   $FLAG4
$APRQPER EQU   $FLAG4
$OPCOM   EQU   $FLAG4
$NEWAP   EQU   $FLAG3
$ALTPRTR EQU   $FLAG3
$OPTERR  EQU   $FLAG3
$REQSTOR EQU   $FLAG3
$LOGOFFE EQU   $FLAG3
$TSTERR  EQU   $FLAG3
$DEVERR  EQU   $FLAG3
$PARTIAL EQU   $FLAG2
$NRMTERM EQU   $FLAG2
$VALDTST EQU   $FLAG2
$VALDDEV EQU   $FLAG2
$DBLSLSH EQU   $FLAG2
@NM00026 EQU   $FLAG2
$FTTHR   EQU   $FLAG2
$OLTACT  EQU   $FLAG1
$NORELDV EQU   $FLAG1
@NM00025 EQU   $FLAG1
$OPTCHNG EQU   $FLAG1
$DEVCHNG EQU   $FLAG1
$TESTCNG EQU   $FLAG1
$CNSLFG  EQU   $FLAG1
$TEP3RD  EQU   $FLAG1
@NM00024 EQU   $CDA+120
$CUCNT   EQU   $CDA+118
@NM00023 EQU   $CDA+117
$OPISCNT EQU   $CDA+114
$OPNDCNT EQU   $CDA+112
$GETMSZE EQU   $CDA+110
$GRCNTS  EQU   $CDA+108
$CTLCNT  EQU   $CDA+106
$ACTLVL  EQU   $CDA+105
$ERRCNTA EQU   $CDA+102
$TLCNT   EQU   $CDA+100
$TIMEALW EQU   $CDA+96
$PTRAREA EQU   $CDA+92
$GETMPTR EQU   $CDA+88
$R13PTRT EQU   $CDA+84
$TEPEND  EQU   $CDA+76
$PLINKDL EQU   $CDA+72
$TEPBEGN EQU   $CDA+68
$FRELPTR EQU   $CDA+64
$HIGHADR EQU   $HIMOREC
$LOMOREC EQU   $CDA+56
$ENDCOMM EQU   $CDA+48
$COMMON  EQU   $RCA
$SLASHAD EQU   $CDA+32
$PASSON  EQU   $CDA+28
$TOLBRTB EQU   $CDA+24
$SCTPTR8 EQU   $CDA+20
$SCTPTR  EQU   $CDA+16
$TBWDPTR EQU   $CDA+12
$TFWDPTR EQU   $CDA+8
@NM00022 EQU   $CDA
@NM00021 EQU   $SCTTBLE+98
$SCTLWTC EQU   $SCTTBLE+96
$SCTLWTA EQU   $SCTTBLE+92
#EXT     EQU   $SCTTBLE+88
#PASS    EQU   $SCTTBLE+84
#TABLE   EQU   $SCTTBLE+80
#MSGIDAC EQU   $SCTTBLE+78
@NM00020 EQU   $SCTTBLE+71
$RETMASK EQU   $SCTTBLE+70
$R249255 EQU   $ROUTMSK+29
$R241248 EQU   $ROUTMSK+28
$R233240 EQU   $ROUTMSK+27
$R225232 EQU   $ROUTMSK+26
$R217224 EQU   $ROUTMSK+25
$R209216 EQU   $ROUTMSK+24
$R201208 EQU   $ROUTMSK+23
$R193200 EQU   $ROUTMSK+22
$R185192 EQU   $ROUTMSK+21
$R177184 EQU   $ROUTMSK+20
$R169176 EQU   $ROUTMSK+19
$R161168 EQU   $ROUTMSK+18
$R153160 EQU   $ROUTMSK+17
$R145152 EQU   $ROUTMSK+16
$R137144 EQU   $ROUTMSK+15
$R129136 EQU   $ROUTMSK+14
$R121128 EQU   $ROUTMSK+13
$R113120 EQU   $ROUTMSK+12
$R105112 EQU   $ROUTMSK+11
$R097104 EQU   $ROUTMSK+10
$R089096 EQU   $ROUTMSK+9
$R081088 EQU   $ROUTMSK+8
$R073080 EQU   $ROUTMSK+7
$R065072 EQU   $ROUTMSK+6
$R057064 EQU   $ROUTMSK+5
$R049056 EQU   $ROUTMSK+4
$R041048 EQU   $ROUTMSK+3
$R033040 EQU   $ROUTMSK+2
$R025032 EQU   $ROUTMSK+1
$R017024 EQU   $ROUTMSK
$TOTFLG2 EQU   $SCTTBLE+39
@NM00019 EQU   $TOTFLG1
@NM00018 EQU   $TOTFLG1
@NM00017 EQU   $TOTFLG1
$CURELOD EQU   $TOTFLG1
$CTEQTT  EQU   $TOTFLG1
@NM00016 EQU   $TOTFLG1
@NM00015 EQU   $TOTFLG1
$LINESHR EQU   $TOTFLG1
@NM00014 EQU   $OLTFLG2
@NM00013 EQU   $OLTFLG2
@NM00012 EQU   $OLTFLG2
@NM00011 EQU   $OLTFLG2
@NM00010 EQU   $OLTFLG2
@NM00009 EQU   $OLTFLG2
@NM00008 EQU   $OLTFLG2
$TALK    EQU   $OLTFLG2
$DYCOM   EQU   $OLTFLGS
@NM00007 EQU   $OLTFLGS
$TRACE   EQU   $OLTFLGS
$RETCODE EQU   $OLTFLGS
$CONTCB  EQU   $OLTFLGS
$RETAIN  EQU   $OLTFLGS
$CLEANRT EQU   $OLTFLGS
$MANINTV EQU   $OLTFLGS
$OLTSIZE EQU   $SCTTBLE+34
$QSCTMOD EQU   $EXECFLG
$CTRLMOD EQU   $EXECFLG
$CLEANUP EQU   $EXECFLG
$LSTPDEV EQU   $EXECFLG
$ERRCNT  EQU   $EXECFLG
$RTNSLCT EQU   $EXECFLG
$MULTDEV EQU   $EXECFLG
@NM00006 EQU   $EXECFLG
$RMSKCNT EQU   $SCTTBLE+32
$EXTSIG  EQU   $CDS8T19+3
$CDFLGS  EQU   $CDS8T19+1
$CDSCNT  EQU   $CDS8T19
$PDEVDSC EQU   $SCTTBLE+16
$COMMCN  EQU   $CDSFLGS
$CUSTSYM EQU   $CDSFLGS
$TWOCHSW EQU   $CDSFLGS
$EXTINTC EQU   $CDSFLGS
$CEVOL   EQU   $CDSFLGS
$SHARED  EQU   $CDSFLGS
$FPM     EQU   $CDSFLGS
$LASTSUB EQU   $PDEVFLG
@NM00005 EQU   $PDEVFLG
@NM00004 EQU   $PDEVFLG
@NM00003 EQU   $PDEVFLG
$LASTDEV EQU   $PDEVFLG
@NM00002 EQU   $PDEVFLG
$EXFILPT EQU   $PDEVFLG
$FPMOLD  EQU   $PDEVFLG
$TSSSYM  EQU   $SCTTBLE+8
$SCTLEVL EQU   $SCTTBLE+7
$DRIVER  EQU   $SCTTBLE+6
$RT0916  EQU   $SCTTBLE+5
$RT0108  EQU   $SCTTBLE+4
$NOCNTRL EQU   $ERROPT
$INDEFLP EQU   $TESTOPT
$PARAPRT EQU   $TESTOPT
@NM00001 EQU   $TESTOPT
$ERRLPCT EQU   $SCTTBLE
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RT00102 EQU   S24C0100
@RF00102 EQU   S24C9990
@RT00145 EQU   S24C0200
@RT00178 EQU   S24C0250
@RT00184 EQU   S24C0300
@RT00191 EQU   S24C0252
@RT00225 EQU   S24C0350
@RT00240 EQU   S24C0310
@RT00254 EQU   S24C0310
@RT00268 EQU   S24C0400
@RT00280 EQU   S24C0360
@RT00318 EQU   S24C0405
@RT00320 EQU   S24C0430
@RT00325 EQU   S24C0445
@RT00337 EQU   S24C0450
@RT00339 EQU   S24C0445
@RT00345 EQU   S24C0500
@RT00356 EQU   S24C0550
@RT00373 EQU   S24C0510
@RT00384 EQU   S24C0600
@RT00390 EQU   S24C0650
@RT00398 EQU   S24C0700
@RT00404 EQU   S24C0750
@RT00412 EQU   S24C0755
@RT00425 EQU   S24C0850
@RF00423 EQU   S24C9999
@RT00448 EQU   S24C0875
@RT00452 EQU   S24C0875
@RF00489 EQU   @EC00491
S24C2650 EQU   @EL00003
@RT00514 EQU   S24C3012
@RT00527 EQU   S24C3010
@RF00531 EQU   S24C3010
@RT00540 EQU   S24C3005
@RF00540 EQU   S24C3010
@RT00544 EQU   S24C3010
@RT00546 EQU   S24C3010
@RT00559 EQU   S24C3003
@RT00633 EQU   S24C6020
@RF00633 EQU   S24C6010
@RT00672 EQU   S24C7010
@ENDDATA EQU   *
         END   ISTSC024,(C'PLS0003',0702,79101)
