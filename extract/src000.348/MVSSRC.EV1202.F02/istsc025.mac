         TITLE 'ISTSC025 - INITIAL SEND/RECEIVE INTERFACE'
*  IBM DISK OPERATING SYSTEM
*  TOLTEP
          ISEQ 73,80
ISTSC025 CSECT ,                                                   0002
@MAINENT DS    0H                                                  0002
         USING *,@15                                               0002
         B     @PROLOG                                             0002
         DC    AL2(@EP00002-@MAINENT)
         DC    AL1(16)                                             0002
         DC    C'ISTSC025  78.336'                                 0002
S25C2000 DS    0H                                                  0002
         USING *,@15                                               0002
         B     @PROLOG                                             0002
         DC    AL2(@EP00285-S25C2000)
         ENTRY S25C2000
         DROP  @15
@PROLOG  ST    @14,12(,@13)                                        0002
         STM   @00,@12,20(@13)                                     0002
         BALR  @12,0                                               0002
@PSTART  DS    0H                                                  0002
         USING @PSTART,@12                                         0002
         AH    @15,4(,@15)                                         0002
         BR    @15                                                 0002
@EP00002 DS    0H                                                  0003
         PRINT OFF
         PRINT ON
*                                                                  0110
*   /*****************************************************************/
*   /*                                                               */
*   /* ENTRY FROM RCM                                                */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0111
*   R14=R13;                        /* CALLER SAVEAREA PTR           */
         LR    R14,R13                                             0111
*   R13=ADDR(SVESC025);             /* PT TO MY SAVEAREA             */
         LA    R13,SVESC025(,WAPTR)                                0112
*   BACKSAVE(3)=R13;                /* PUT MY SAVE PTR IN CALLERS    */
         STCM  R13,15,BACKSAVE+8(R14)                              0113
*   SVESC025(2)=R14;                /* SAVE CALLER SAVE PTR          */
         ST    R14,SVESC025+4(,WAPTR)                              0114
*   SENDPTR=R1;                     /* BASE FOR SEND PARM LIST       */
         LR    SENDPTR,R1                                          0115
*   RFY                                                            0116
*    (R1,                                                          0116
*     R14) UNRSTD;                                                 0116
*   RFY                                                            0117
*     SENDMAP BASED(SENDPTR);       /* SET BASE                      */
*   RFY                                                            0118
*     IFGRPL BASED(ADDR($TLTRPL3)); /* SEND-RECEIVE RPL              */
*   RFY                                                            0119
*     CDSMAP BASED(CDSPTR);         /* BASE CDS MAP                  */
*   IF $SENDCDS=0 THEN              /* IF CDS PTR NOT GIVEN          */
         L     @14,$SENDCDS(,SENDPTR)                              0120
         LTR   @14,@14                                             0120
         BNZ   @RF00120                                            0120
*     CDSPTR=ADDR($PDEVADR);        /* USE PRIMARY DEVICE            */
         LA    CDSPTR,$PDEVADR(,WAPTR)                             0121
*   ELSE                                                           0122
*     CDSPTR=$SENDCDS;              /* ELSE USE DEVICE GIVEN         */
*                                                                  0122
         B     @RC00120                                            0122
@RF00120 L     CDSPTR,$SENDCDS(,SENDPTR)                           0122
*   /*****************************************************************/
*   /*                                                               */
*   /* SEARCH DEVICE TABLE TO INSURE DEVICE IS PRIMARY OR GRABBED,   */
*   /* AND NOT LETGO, AND IS ACQUIRED                                */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0123
*   DO I=3 TO $DEVCNTS;             /* SEARCH DEVICE TABLE           */
@RC00120 LA    I,3                                                 0123
         B     @DE00123                                            0123
@DL00123 DS    0H                                                  0124
*     IF CDSSYMB=ON THEN            /* IF DEV HAS SYM NAME IN CDS    */
         TM    CDSSYMB(CDSPTR),B'00001000'                         0124
         BNO   @RF00124                                            0124
*       DO;                                                        0125
*         IF CDSSYMBN=$$SYMNME(I)   /* MATCH                         */
*           THEN                                                   0126
         LR    @14,I                                               0126
         MH    @14,@CH00375                                        0126
         ALR   @14,WAPTR                                           0126
         CLC   CDSSYMBN(8,CDSPTR),$$SYMNME-68(@14)                 0126
         BE    @RT00126                                            0126
*           GOTO S25C0100;          /* CHK FOR VALID DEV             */
*         ELSE                                                     0128
*           GOTO S25C0200;          /* CHK NEXT DEV                  */
         B     S25C0200                                            0128
*       END;                                                       0129
*     ELSE                                                         0130
*       DO;                                                        0130
@RF00124 DS    0H                                                  0131
*         IF CDSUA^=$DEVUNAD(I)     /* DO UNIT ADDRS MATCH           */
*           THEN                                                   0131
         LR    @14,I                                               0131
         MH    @14,@CH00375                                        0131
         L     @11,CDSUA(,CDSPTR)                                  0131
         CL    @11,$DEVUNAD-68(@14,WAPTR)                          0131
         BNE   @RT00131                                            0131
*           GOTO S25C0200;          /* NO,CHK NEXT DEVICE            */
*       END;                                                       0133
*S25C0100:                                                         0134
*     IF $DEVLU(I)=OFF THEN         /* IF DEVICE IS NOT AN LU        */
S25C0100 LR    @14,I                                               0134
         MH    @14,@CH00375                                        0134
         ALR   @14,WAPTR                                           0134
         TM    $DEVLU-68(@14),B'00001000'                          0134
         BNZ   @RF00134                                            0134
*       DO;                                                        0135
*         R15=4;                    /* SET ERROR RET CODE            */
         LA    R15,4                                               0136
*         GOTO S25C9999;            /* RETURN                        */
         B     S25C9999                                            0137
*       END;                                                       0138
*     IF($PRIMARY(I)=ON×            /* DEV MUST BE PRIMARY OR        */
*         ($GRABBED(I)=ON&          /* GRABBED AND                   */
*         $LETGO(I)=OFF))&          /* NOT LETGO                     */
*         $ACQRED(I)=ON THEN        /* AND ACQUIRED                  */
@RF00134 LR    @14,I                                               0139
         MH    @14,@CH00375                                        0139
         ST    @14,@TF00001                                        0139
         ALR   @14,WAPTR                                           0139
         TM    $PRIMARY-68(@14),B'00000001'                        0139
         BO    @GL00001                                            0139
         LR    @14,WAPTR                                           0139
         AL    @14,@TF00001                                        0139
         TM    $GRABBED-68(@14),B'00100000'                        0139
         BNO   @RF00139                                            0139
         TM    $LETGO-68(@14),B'10000000'                          0139
         BNZ   @RF00139                                            0139
@GL00001 LR    @14,I                                               0139
         MH    @14,@CH00375                                        0139
         ALR   @14,WAPTR                                           0139
         TM    $ACQRED-68(@14),B'01000000'                         0139
         BO    @RT00139                                            0139
*       GOTO S25C0300;              /* O.K. TO CONTINUE              */
*     ELSE                                                         0141
*       GOTO S25C0250;              /* DEV DOES NOT MEET REQS        */
         B     S25C0250                                            0141
*S25C0200:                                                         0142
*   END;                                                           0142
S25C0200 AL    I,@CF00072                                          0142
@DE00123 CH    I,$DEVCNTS(,WAPTR)                                  0142
         BNH   @DL00123                                            0142
*S25C0250:                                                         0143
*   R15=8;                          /* RETURN CODE=8                 */
S25C0250 LA    R15,8                                               0143
*   GOTO S25C9999;                                                 0144
*                                                                  0144
         B     S25C9999                                            0144
*   /*****************************************************************/
*   /*                                                               */
*   /* CHECK FOR CONTROL TERMINAL = TEST TERMINAL                    */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0145
*S25C0300:                                                         0145
*   $SNDRFLG=ON;                    /* TURN RCM RECALL FLAG ON       */
S25C0300 OI    $SNDRFLG(WAPTR),B'00000100'                         0145
*   IF $CID(I)=$CID(1) THEN         /* IF CT=TT THEN                 */
         LR    @14,I                                               0146
         MH    @14,@CH00375                                        0146
         ST    @14,@TF00001                                        0146
         ALR   @14,WAPTR                                           0146
         CLC   $CID-68(4,@14),$CID(WAPTR)                          0146
         BNE   @RF00146                                            0146
*     DO;                                                          0147
*       IF $MSGOTSD(1)^=0×          /* API MSGS OUTSTANDING          */
*           $CLRSNT(I)=ON THEN      /* OR CLEAR HAS BEEN SENT        */
         L     @14,$MSGOTSD(,WAPTR)                                0148
         LTR   @14,@14                                             0148
         BNZ   @RT00148                                            0148
         LR    @14,WAPTR                                           0148
         AL    @14,@TF00001                                        0148
         TM    $CLRSNT-68(@14),B'00000010'                         0148
         BO    @RT00148                                            0148
*         GOTO S25C9999;            /* RETURN TO RCM                 */
*       $CTLINE=0;                  /* TELL ISTCC016 SCREEN        0150
*                                      UNPREDICTABLE                 */
         MVI   $CTLINE(WAPTR),X'00'                                0150
*     END;                                                         0151
*   IF $SRTEST(I)=OFF THEN          /* HAS A CLEAR SDT BEEN SENT     */
@RF00146 LR    @14,I                                               0152
         MH    @14,@CH00375                                        0152
         ALR   @14,WAPTR                                           0152
         TM    $SRTEST-68(@14),B'00001000'                         0152
         BNZ   @RF00152                                            0152
*     DO;                                                          0153
*       RFY                                                        0154
*         R1 RSTD;                                                 0154
*       R1=ADDR($TLTRPL3);          /* NO,GET ADDRESS OF S-R RPL     */
         LA    R1,$TLTRPL3(,WAPTR)                                 0155
*       CALL S25C1000;              /* ISSUE CLEAR SDT               */
         BAL   @14,S25C1000                                        0156
*       RFY                                                        0157
*         R1 UNRSTD;                                               0157
*       GOTO S25C9999;              /* RETURN TO RCM                 */
         B     S25C9999                                            0158
*     END;                                                         0159
*                                                                  0159
*   /*****************************************************************/
*   /*                                                               */
*   /* CHECK FOR PERMANENT ERROR ON CLEAR COMMAND                    */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0160
*   IF $CATASTR(I)=ON THEN          /* PERMANENT ERROR ?             */
@RF00152 LR    @14,I                                               0160
         MH    @14,@CH00375                                        0160
         ST    @14,@TF00001                                        0160
         ALR   @14,WAPTR                                           0160
         TM    $CATASTR-68(@14),B'01000000'                        0160
         BNO   @RF00160                                            0160
*     DO;                           /* YES                           */
*       $CATASTR(I)=OFF;            /* RESET ERROR FLAG              */
         LR    @14,WAPTR                                           0162
         AL    @14,@TF00001                                        0162
         NI    $CATASTR-68(@14),B'10111111'                        0162
*       $SNDRFLG=OFF;               /* DONT RECALL           @ZD10888*/
         NI    $SNDRFLG(WAPTR),B'11111011'                         0163
*       R15=8;                      /* PERMANENT ERROR RET CODE      */
         LA    R15,8                                               0164
*       GOTO S25C9999;              /* RETURN                        */
         B     S25C9999                                            0165
*     END;                                                         0166
*   $SNDRFLG=OFF;                   /* SET RCM RECALL FLAG OFF       */
*                                                                  0167
@RF00160 NI    $SNDRFLG(WAPTR),B'11111011'                         0167
*   /*****************************************************************/
*   /*                                                               */
*   /* HAS API SEND A MSG DURING TEST MODE                           */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0168
*   IF $OLTERR(I)=ON THEN           /* HAS API SENT A MSG            */
         LR    @14,I                                               0168
         MH    @14,@CH00375                                        0168
         ST    @14,@TF00001                                        0168
         ALR   @14,WAPTR                                           0168
         TM    $OLTERR-68(@14),B'00000100'                         0168
         BNO   @RF00168                                            0168
*     DO;                           /* YES,BRACKETING MAY BE UPSET   */
*       $OLTERR(I)=OFF;             /* RESET FLAG                    */
         LR    @14,WAPTR                                           0170
         AL    @14,@TF00001                                        0170
         NI    $OLTERR-68(@14),B'11111011'                         0170
*       R15=20;                     /* RET CODE FOR OLT TO REISSUE   */
         LA    R15,20                                              0171
*       GOTO S25C9999;                                             0172
         B     S25C9999                                            0172
*     END;                                                         0173
*                                                                  0173
*   /*****************************************************************/
*   /*                                                               */
*   /* DETERMINE IF THIS IS SEND OR RECEIVE REQUEST                  */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0174
*   IF $SENDMID='33' THEN           /* RECEIVE REQUEST               */
@RF00168 CLC   $SENDMID(2,SENDPTR),@CC01361                        0174
         BNE   @RF00174                                            0174
*     DO;                           /* YES                           */
*       RFY                                                        0176
*        (R1,                                                      0176
*         R3) RSTD;                                                0176
*       R3=I;                       /* DEVICE TABLE INDEX            */
         LR    R3,I                                                0177
*       R1=SENDPTR;                 /* PARM LIST PTR                 */
         LR    R1,SENDPTR                                          0178
*       CALL ISTSC033;              /* CALL RECEIVE                  */
         L     @15,@CV01362                                        0179
         BALR  @14,@15                                             0179
*       RFY                                                        0180
*        (R1,                                                      0180
*         R3) UNRSTD;                                              0180
*       GOTO S25C9999;              /* RETURN TO RCM                 */
         B     S25C9999                                            0181
*     END;                                                         0182
*                                                                  0182
*   /*****************************************************************/
*   /*                                                               */
*   /* PROCESS SEND REQUEST                                          */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0183
*   TCBSNCNT=9;                     /* NUMBER OF SENSE FIELD         */
@RF00174 LA    TCBSNCNT,9                                          0183
*   $INBUFR(1:TECBDLEN)=TECBDFLT(1:TECBDLEN);/* MOVE DEFLT TECB      */
         L     @14,TECBDLEN                                        0184
         BCTR  @14,0                                               0184
         EX    @14,@SM01396                                        0184
*   IF $SENDTCB^=0 THEN             /* OLT SPECIFY TECB              */
         L     @14,$SENDTCB(,SENDPTR)                              0185
         LTR   @14,@14                                             0185
         BZ    @RF00185                                            0185
*     DO;                                                          0186
*       RFY                                                        0187
*         TECBMAPS BASED($SENDTCB); /* POINT TO OLT'S TECB           */
*       IF TECBSNCT^=0&             /* IF SENSE FIELD COUNT          */
*           TECBSNOC^=0 THEN        /* AND SENSES OCCURRED^=0        */
         CLI   TECBSNCT(@14),0                                     0188
         BE    @RF00188                                            0188
         CLI   TECBSNOC(@14),0                                     0188
         BE    @RF00188                                            0188
*         DO;                                                      0189
*           $INBUFR(1:15)=TCBSENSE(1:25);/* THEN MOVE IN OLT SNS     */
         LA    @11,TECBEVT1(,@14)                                  0190
         SLR   @01,@01                                             0190
         IC    @01,TECBFDCT(,@14)                                  0190
         SLR   @08,@08                                             0190
         IC    @08,TECBFDLN(,@14)                                  0190
         MR    @00,@08                                             0190
         ALR   @11,@01                                             0190
         SLR   @08,@08                                             0190
         IC    @08,TECBSNOC(,@14)                                  0190
         MH    @08,TECBSNLN(,@14)                                  0190
         ALR   @11,@08                                             0190
         MVC   $INBUFR(15,WAPTR),TCBSENSE(@11)                     0190
*           TCBSNCNT=TECBSNCT-3;    /* AND SENSE FIELD COUNT         */
         SLR   TCBSNCNT,TCBSNCNT                                   0191
         IC    TCBSNCNT,TECBSNCT(,@14)                             0191
         SL    TCBSNCNT,@CF00081                                   0191
*         END;                                                     0192
*     END;                                                         0193
*                                                                  0193
@RF00188 DS    0H                                                  0194
*   /*****************************************************************/
*   /*                                                               */
*   /* BUILD RPL FROM TECB AND PARMLIST                              */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0194
*   RFY                                                            0194
*     TECBSEND BASED(ADDR($INBUFR));/* MAP INBUFR                    */
@RF00185 DS    0H                                                  0195
*   TECBSEND(1:25)=TECBSEND(1:25)&  /* MASK OUT UNUSED BITS          */
*       TECBMASK(1:25);             /* IN TECB                       */
         NC    TECBSEND+2104(25,WAPTR),TECBMASK                    0195
*   RPLVTFL2=RPLVTFL2&MSKRESP;      /* MASK OUT RESPOND FLD          */
         LA    @14,1872                                            0196
         ALR   @14,WAPTR                                           0196
         NI    RPLVTFL2(@14),X'F8'                                 0196
*   RPLRLEN=0;                      /* MASK OUT RECLEN               */
         SLR   @11,@11                                             0197
         ST    @11,RPLRLEN+1856(,WAPTR)                            0197
*   RPLSRTYP=RPLSRTYP&MSKRTYP;      /* MASK OUT RTYPE                */
         NI    RPLSRTYP(@14),X'71'                                 0198
*   RPLRH3=RPLRH3&MSKBRCHG;         /* MSK BRACKT,CHDIR,CDSEL        */
         NI    RPLRH3(@14),X'07'                                   0199
*   IF $SENDBB=ON THEN              /* BEGIN BRACKET                 */
         TM    $SENDBB(SENDPTR),B'10000000'                        0200
         BNO   @RF00200                                            0200
*     RPLBB=ON;                     /* YES SET ON IN RPL             */
         OI    RPLBB(@14),B'10000000'                              0201
*   IF $SENDEB=ON THEN              /* END BRACKET                   */
@RF00200 TM    $SENDEB(SENDPTR),B'01000000'                        0202
         BNO   @RF00202                                            0202
*     RPLEB=ON;                     /* YES SET ON IN RPL             */
         OI    RPLEB+1872(WAPTR),B'01000000'                       0203
*   IF $SENDFME=OFF THEN            /* FINAL DESTINATION RESPONSE    */
@RF00202 TM    $SENDFME(SENDPTR),B'00100000'                       0204
         BNZ   @RF00204                                            0204
*     RPLNFME=ON;                   /* NO, SET IN RPL                */
         OI    RPLNFME+1872(WAPTR),B'00000010'                     0205
*   IF $SENDEX=ON THEN              /* EXCEPTION RESPONSE            */
@RF00204 TM    $SENDEX(SENDPTR),B'00010000'                        0206
         BNO   @RF00206                                            0206
*     RPLEX=ON;                     /* YES, SET IN RPL               */
         OI    RPLEX+1872(WAPTR),B'00000100'                       0207
*   IF $SENDRRN=ON THEN             /* RECOVERY EXCEPTED             */
@RF00206 TM    $SENDRRN(SENDPTR),B'00001000'                       0208
         BNO   @RF00208                                            0208
*     RPLRRN=ON;                    /* YES, SET IN RPL               */
         OI    RPLRRN+1872(WAPTR),B'00000001'                      0209
*   IF $SENDCSL=ON THEN             /* CODE SELECT=ALT               */
@RF00208 TM    $SENDCSL(SENDPTR),B'00000100'                       0210
         BNO   @RF00210                                            0210
*     RPLCSI=ON;                    /* YES, SET IN RPL               */
         OI    RPLCSI+1872(WAPTR),B'00001000'                      0211
*   IF $SENDSTP=ON THEN             /* STYPE = RESP                  */
@RF00210 TM    $SENDSTP(SENDPTR),B'00000010'                       0212
         BNO   @RF00212                                            0212
*     RPLSRESP=ON;                  /* YES, SET IN RPL               */
         OI    RPLSRESP+1872(WAPTR),B'10000000'                    0213
*   IF $SENDFMH=OFF THEN            /* OPTCD=FMHDR           @AX11982*/
@RF00212 TM    $SENDFMH(SENDPTR),B'00000001'                       0214
         BNZ   @RF00214                                            0214
*     RPLFMHDR=ON;                  /* YES, SET IN RPL               */
         OI    RPLFMHDR+1856(WAPTR),B'00000001'                    0215
*   IF $SENDCMD=OFF THEN            /* CHNG DIRECTION COMMAND      0216
*                                                            @DA04694*/
@RF00214 TM    $SENDCMD(SENDPTR),B'10000000'                       0216
         BNZ   @RF00216                                            0216
*     RPLCMD=ON;                    /* YES, SET IN RPL               */
         OI    RPLCMD+1872(WAPTR),B'00100000'                      0217
*   IF $SENDREQ=OFF THEN            /* REQUEST CHANGE DIRECTION    0218
*                                                            @DA04694*/
@RF00216 TM    $SENDREQ(SENDPTR),B'01000000'                       0218
         BNZ   @RF00218                                            0218
*     RPLCHREQ=ON;                  /* YES, SET IN RPL               */
*                                                                  0219
         OI    RPLCHREQ+1872(WAPTR),B'00010000'                    0219
*   /*****************************************************************/
*   /*                                                               */
*   /* DETERMINE BY TECB FIELD COUNT WHAT TO UPDATE IN RPL           */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0220
*   IF TCBSNCNT>=1 THEN             /* 1 OR MORE FIELDS?             */
@RF00218 C     TCBSNCNT,@CF00072                                   0220
         BL    @RF00220                                            0220
*     RPLSSEO=TCBSSEN;              /* YES, SYSTEM SENSE TO RPL      */
         MVC   RPLSSEO+1856(1,WAPTR),TCBSSEN+2104(WAPTR)           0221
*   IF TCBSNCNT>=2 THEN             /* 2 OR MORE FIELDS?             */
@RF00220 C     TCBSNCNT,@CF00139                                   0222
         BL    @RF00222                                            0222
*     RPLSSMO=TCBSSENM;             /* YES, SYS SENSE MOD TO RPL     */
         IC    @14,TCBSSENM+2104(,WAPTR)                           0223
         STC   @14,RPLSSMO+1856(,WAPTR)                            0223
*   IF TCBSNCNT>=3 THEN             /* 3 OR MORE FIELDS?             */
@RF00222 C     TCBSNCNT,@CF00081                                   0224
         BL    @RF00224                                            0224
*     RPLUSNSO=TCBUSEN;             /* YES, USER SENSE TO RPL        */
         MVC   RPLUSNSO+1856(2,WAPTR),TCBUSEN+2104(WAPTR)          0225
*   IF TCBSNCNT>=8 THEN             /* 8 OR MORE FIELDS?             */
@RF00224 C     TCBSNCNT,@CF00055                                   0226
         BL    @RF00226                                            0226
*     DO;                           /* YES                           */
*       RPLCHN=RPLCHN&MSKCHAIN;     /* N USED FLAGS IN RPL           */
         LA    @14,1872                                            0228
         ALR   @14,WAPTR                                           0228
         NI    RPLCHN(@14),X'0F'                                   0228
*       RPLCHN=RPLCHN×TCBCHAIN;     /* OR CHAIN FLG IN RPL           */
         OC    RPLCHN(1,@14),TCBCHAIN+2104(WAPTR)                  0229
*     END;                                                         0230
*   IF TCBSNCNT>=9 THEN             /* 9 OR MORE FIELDS?             */
@RF00226 C     TCBSNCNT,@CF00087                                   0231
         BL    @RF00231                                            0231
*     DO;                           /* YES                           */
*       RPLCNTRL=RPLCNTRL&MSKCNTRL; /* N USED FLAGS IN RPL           */
         LA    @14,1872                                            0233
         ALR   @14,WAPTR                                           0233
         NC    RPLCNTRL(3,@14),@CB01342                            0233
*       RPLCNTRL=RPLCNTRL×TCBCNTRL; /* OR CNTRL FLGS IN RPL          */
         OC    RPLCNTRL(3,@14),TCBCNTRL+2104(WAPTR)                0234
*     END;                                                         0235
*   IF TCBSNCNT>=10 THEN            /* 10 OR MORE FIELDS             */
@RF00231 C     TCBSNCNT,@CF01301                                   0236
         BL    @RF00236                                            0236
*     RPLSEQNO=TCBSEQNO;            /* YES, MOVE SEQ NO. TO RPL      */
         MVC   RPLSEQNO+1916(2,WAPTR),TCBSEQNO+2104(WAPTR)         0237
*   IF TCBSNCNT>=11 THEN            /* 11 OR MORE FIELDS             */
@RF00236 C     TCBSNCNT,@CF00783                                   0238
         BL    @RF00238                                            0238
*     RPLSIGDA=TCBSIGDA;            /* YES,MOVE SIGNAL DAT TO RPL    */
         MVC   RPLSIGDA+1856(4,WAPTR),TCBSIGDA+2104(WAPTR)         0239
*   IF TCBSNCNT>=12 THEN            /* 12 OR MORE FIELDS             */
@RF00238 C     TCBSNCNT,@CF00136                                   0240
         BL    @RF00240                                            0240
*     DO;                           /* YES                           */
*       RPLIBSQ=RPLIBSQ&MSKIBSQ;    /* N IBSQ FIELD IN RPL           */
         LA    @14,1916                                            0242
         ALR   @14,WAPTR                                           0242
         NI    RPLIBSQ(@14),X'01'                                  0242
*       RPLIBSQ=RPLIBSQ×TCBIBSQ;    /* OR ON IBSQ FLAGS IN RPL       */
         OC    RPLIBSQ(1,@14),TCBIBSQ+2104(WAPTR)                  0243
*     END;                                                         0244
*   IF TCBSNCNT>=13 THEN            /* 13 OR MORE FIELDS             */
@RF00240 C     TCBSNCNT,@CF00800                                   0245
         BL    @RF00245                                            0245
*     RPLIBSQV=TCBIBSQL;            /* YES,MOVE IBSQ LENGTH IN RPL   */
         MVC   RPLIBSQV+1916(2,WAPTR),TCBIBSQL+2104(WAPTR)         0246
*   IF TCBSNCNT>=14 THEN            /* 14 OR MORE FIELDS             */
@RF00245 C     TCBSNCNT,@CF01306                                   0247
         BL    @RF00247                                            0247
*     DO;                           /* YES                           */
*       RPLOBSQ=RPLOBSQ&MSKOBSQ;    /* N OBSQ FIELD IN RPL           */
         LA    @14,1916                                            0249
         ALR   @14,WAPTR                                           0249
         NI    RPLOBSQ(@14),X'01'                                  0249
*       RPLOBSQ=RPLOBSQ×TCBOBSQ;    /* OR ON OBSQ FLAGS IN RPL       */
         OC    RPLOBSQ(1,@14),TCBOBSQ+2104(WAPTR)                  0250
*     END;                                                         0251
*   IF TCBSNCNT>=15 THEN            /* 15 FIELDS                     */
@RF00247 C     TCBSNCNT,@CF00032                                   0252
         BL    @RF00252                                            0252
*     RPLOBSQV=TCBOBSQL;            /* MOVE OBSQ LENGTH IN RPL       */
*                                                                  0253
         MVC   RPLOBSQV+1916(2,WAPTR),TCBOBSQL+2104(WAPTR)         0253
*   /*****************************************************************/
*   /*                                                               */
*   /* SETUP AND ISSUE SEND                                          */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0254
*   RFY                                                            0254
*    (R1,                                                          0254
*     R4,                                                          0254
*     R5,                                                          0254
*     R6) RSTD;                                                    0254
@RF00252 DS    0H                                                  0255
*   R1=ADDR($TLTRPL3);              /* ADDR OF SND-REL RPL           */
         LA    R1,$TLTRPL3(,WAPTR)                                 0255
*   R4=$CID(I);                     /* GET CID OF DEV FOR SEND       */
         LR    @14,I                                               0256
         MH    @14,@CH00375                                        0256
         ALR   @14,WAPTR                                           0256
         ICM   R4,15,$CID-68(@14)                                  0256
*   R5=$SENDARA;                    /* GET DATA                      */
         L     R5,$SENDARA(,SENDPTR)                               0257
*   R6=$SENDRLN;                    /* GET LENGTH OF DATA            */
         LH    R6,$SENDRLN(,SENDPTR)                               0258
*   GEN;                                                           0259
         SEND  RPL=(1),ARG=(R4),AREA=(R5),RECLEN=(R6),OPTCD=SYN,       X
               POST=SCHED
*   IF R15^=0 THEN                  /* BAD RC FROM SEND              */
         LTR   R15,R15                                             0260
         BZ    @RF00260                                            0260
*     DO;                           /* YES                           */
*       R15=12;                                                    0262
         LA    R15,12                                              0262
*       GOTO S25C9999;                                             0263
         B     S25C9999                                            0263
*     END;                                                         0264
*   RFY                                                            0265
*    (R1,                                                          0265
*     R4,                                                          0265
*     R5,                                                          0265
*     R6) UNRSTD;                                                  0265
*   GOTO S25C9999;                                                 0266
*                                                                  0266
         B     S25C9999                                            0266
*   /*****************************************************************/
*   /*                                                               */
*   /* CLEAR START DATA TRAFFIC ROUTINE -R1 = RPL ADDRESS            */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0267
*S25C1000:                                                         0267
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0267
S25C1000 DS    0H                                                  0268
*   RFY                                                            0268
*     R14 RSTD;                                                    0268
*   R14SAVE=R14;                    /* SAVE RETURN REG               */
         LR    R14SAVE,R14                                         0269
*   RFY                                                            0270
*     R14 UNRSTD;                                                  0270
*   $CLRSNT(I)=ON;                  /* SET CLEAR SENT FLAG ON        */
         LR    @14,I                                               0271
         MH    @14,@CH00375                                        0271
         ST    @14,@TF00001                                        0271
         ALR   @14,WAPTR                                           0271
         OI    $CLRSNT-68(@14),B'00000010'                         0271
*   $POSTFLG=ON;                    /* TELL RCM THERE IS AN IO     0272
*                                      OPERATION IN PROGRESS         */
         OI    $POSTFLG(WAPTR),B'01000000'                         0272
*   R15=0;                          /* INIT REG 15                   */
         SLR   R15,R15                                             0273
*   R0=$CID(I);                     /* GET TERM CID                  */
         LR    @14,WAPTR                                           0274
         AL    @14,@TF00001                                        0274
         ICM   R0,15,$CID-68(@14)                                  0274
*   R1->RPLUSFLD=WAPTR;             /* SAVE WAPTR            @DM30407*/
         ST    WAPTR,RPLUSFLD(,R1)                                 0275
*   GEN REFS(S25C3000);                                            0276
*                                       /* ISSUE CLEAR COMMAND       */
         SESSIONC RPL=(1),EXIT=S25C3000,OPTCD=ASY,ARG=(R0),            X
               CONTROL=CLEAR
*   IF R15=4 THEN                   /* ERROR ISSUING CLEAR           */
         C     R15,@CF00068                                        0277
         BNE   @RF00277                                            0277
*     DO;                           /* YES                           */
*       $SRTEST(I)=ON;              /* SET S-R TEST FLAG ON          */
*       $CLRSNT(I)=OFF;             /* SET CLEAR SENT FLAG OFF       */
         LR    @14,I                                               0280
         MH    @14,@CH00375                                        0280
         ALR   @14,WAPTR                                           0280
         OI    $SRTEST-68(@14),B'00001000'                         0280
         NI    $CLRSNT-68(@14),B'11111101'                         0280
*     END;                                                         0281
*   RFY                                                            0282
*     R14 RSTD;                                                    0282
@RF00277 DS    0H                                                  0283
*   R14=R14SAVE;                    /* RESTORE RETURN REG            */
         LR    R14,R14SAVE                                         0283
*   END S25C1000;                                                  0284
*                                                                  0284
@EL00002 DS    0H                                                  0284
@EF00002 DS    0H                                                  0284
@ER00002 BR    @14                                                 0284
*   /*****************************************************************/
*   /*                                                               */
*   /* ENTRY FROM EXTERNAL MODULES FOR CLEAR SDT ROUTINE             */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0285
*S25C2000:                                                         0285
*   ENTRY;                                                         0285
@EP00285 DS    0H                                                  0286
*   RFY                                                            0286
*    (R14,                                                         0286
*     R15) RSTD;                                                   0286
*   R14=R13;                        /* HOLD CALLER SAVEAREA PTR      */
         LR    R14,R13                                             0287
*   R13=ADDR(SVESC025);             /* PT TO MY SAVEAREA             */
         LA    R13,SVESC025(,WAPTR)                                0288
*   BACKSAVE(3)=R13;                /* PUT MY SAVEPTR IN CALLERS     */
         STCM  R13,15,BACKSAVE+8(R14)                              0289
*   SVESC025(2)=R14;                /* PUT CALLER SAVE PTR IN MINE   */
         ST    R14,SVESC025+4(,WAPTR)                              0290
*   I=$CTINDX(1);                   /* SET UP I                      */
         LH    I,$CTINDX(,WAPTR)                                   0291
*   CALL S25C1000;                  /* CALL CLEAR SDT ROUTINE        */
         BAL   @14,S25C1000                                        0292
*   RFY                                                            0293
*    (R14,                                                         0293
*     R15) UNRSTD;                                                 0293
*   GOTO S25C9999;                  /* RETURN                        */
*                                                                  0294
         B     S25C9999                                            0294
*   /*****************************************************************/
*   /*                                                               */
*   /* RPL EXIT ROUTINE FOR CLEAR SDT,ENTRY FROM VTAM                */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0295
*S25C3000:                                                         0295
*   RFY                                                            0295
*     IFGRPL BASED(R1);                                            0295
S25C3000 DS    0H                                                  0296
*   DCL                                                            0296
*     N FIXED(15);                                                 0296
*   R2=RPLUSFLD;                    /* SET UP REG 2 TO PT TO TWA     */
         L     R2,RPLUSFLD(,R1)                                    0297
*   RESPECIFY                                                      0298
*     $RCAAREA BASED($RCA);         /* GET ADDRESSABILITY TO RCA     */
*   RFY                                                            0299
*    (R0,                                                          0299
*     R1,                                                          0299
*     R4,                                                          0299
*     R5,                                                          0299
*     R13,                                                         0299
*     R14,                                                         0299
*     R15) RSTD;                                                   0299
*   R4=R15;                         /* SAVE ENTRY POINT              */
         LR    R4,R15                                              0300
*   GEN(USING S25C3000,R4);         /* SET UP BASE                   */
         USING S25C3000,R4
*   R5=R14;                         /* SAVE RETURN REG               */
         LR    R5,R14                                              0302
*   RFY                                                            0303
*     R14 UNRSTD;                                                  0303
*   R13=ADDR($EXITSAV);             /* PT TO MY SAVE                 */
         L     R13,$RCA(,WAPTR)                                    0304
         LA    R13,$EXITSAV(,R13)                                  0304
*   R15=0;                          /* INIT REG 15                   */
         SLR   R15,R15                                             0305
*   GEN;                                                           0306
*                                       /* CHK OPERATION & DEACT RPL */
         CHECK RPL=(R1)
*   IF R0=8 THEN                    /* TEMPORARY ERROR?              */
         C     R0,@CF00055                                         0307
         BNE   @RF00307                                            0307
*     DO;                           /* YES, RE-EXECUTE REQUEST       */
*       GEN;                                                       0309
         EXECRPL RPL=(R1)
*       GOTO S25C3999;              /* RETURN TO VTAM                */
         B     S25C3999                                            0310
*     END;                                                         0311
*                                                                  0311
*/* COMPUTE DEVTABLE INDEX                                           */
*                                                                  0312
*   DO N=3 TO $DEVCNTS;             /* LOOP FOR INDEX                */
@RF00307 LA    N,3                                                 0312
         B     @DE00312                                            0312
@DL00312 DS    0H                                                  0313
*     IF RPLARG=$CID(N) THEN        /* CIDS MATCH?                   */
         LR    @14,N                                               0313
         MH    @14,@CH00375                                        0313
         L     @11,RPLARG(,R1)                                     0313
         ALR   @14,WAPTR                                           0313
         ICM   @10,15,$CID-68(@14)                                 0313
         CLR   @11,@10                                             0313
         BE    @RT00313                                            0313
*       GOTO S25C3050;              /* YES,GET OUT                   */
*   END;                                                           0315
         AL    N,@CF00072                                          0315
@DE00312 CH    N,$DEVCNTS(,WAPTR)                                  0315
         BNH   @DL00312                                            0315
*S25C3050:                                                         0316
*   IF $SRTEST(N)=OFF THEN          /* WAS SDT LAST OPERATION?       */
S25C3050 LR    @14,N                                               0316
         MH    @14,@CH00375                                        0316
         ST    @14,@TF00001                                        0316
         ALR   @14,WAPTR                                           0316
         TM    $SRTEST-68(@14),B'00001000'                         0316
         BNZ   @RF00316                                            0316
*     DO;                           /* NO                            */
*       $SRTEST(N)=ON;              /* SET FLAG ON                   */
         LR    @14,WAPTR                                           0318
         AL    @14,@TF00001                                        0318
         OI    $SRTEST-68(@14),B'00001000'                         0318
*       IF BINTS='02'X THEN                                        0319
         L     @14,@TF00001                                        0319
         LA    @14,$DEVSESP-68(@14,WAPTR)                          0319
         CLI   BINTS-1(@14),2                                      0319
         BE    @RT00319                                            0319
*         GOTO S25C3100;                                           0320
*       IF R15^=0 THEN              /* BAD RET CODE FROM CLEAR       */
         LTR   R15,R15                                             0321
         BZ    @RF00321                                            0321
*         DO;                       /* YES                           */
*           $CATASTR(N)=ON;         /* SET PERMANENT ERROR ON        */
         LR    @14,WAPTR                                           0323
         AL    @14,@TF00001                                        0323
         OI    $CATASTR-68(@14),B'01000000'                        0323
*           GOTO S25C3100;                                         0324
         B     S25C3100                                            0324
*         END;                                                     0325
*       R1->RPLUSFLD=WAPTR;         /* SAVE WAPTR            @DM30407*/
@RF00321 ST    WAPTR,RPLUSFLD(,R1)                                 0326
*       GEN REFS(S25C3000);                                        0327
*                                      /* ISSUE START DATA TRAFFIC  */
         SESSIONC RPL=(1),EXIT=S25C3000,OPTCD=ASY,                     X
               CONTROL=SDT
*       IF R15=0 THEN               /* ERROR ON SDT                  */
         LTR   R15,R15                                             0328
         BZ    @RT00328                                            0328
*         GOTO S25C3999;            /* NO                            */
*     END;                                                         0330
*S25C3100:                                                         0331
*   $CLRSNT(N)=OFF;                 /* TURN CLEAR SENT FLAG OFF      */
@RF00316 DS    0H                                                  0331
S25C3100 LR    @14,N                                               0331
         MH    @14,@CH00375                                        0331
         ALR   @14,WAPTR                                           0331
         NI    $CLRSNT-68(@14),B'11111101'                         0331
*   $POSTFLG=OFF;                   /* TELL RCM RECEIVE IS DONE      */
         NI    $POSTFLG(WAPTR),B'10111111'                         0332
*   R1=ADDR($TLTECB2);              /* ECB TO BE POSTED              */
         L     R1,$RCA(,WAPTR)                                     0333
         LA    R1,$TLTECB2(,R1)                                    0333
*   CALL I00C1001;                  /* POST THE ECB                  */
         L     @15,@CV01383                                        0334
         BALR  @14,@15                                             0334
*S25C3999:                                                         0335
*   RFY                                                            0335
*    (R13,                                                         0335
*     R14) RSTD;                                                   0335
S25C3999 DS    0H                                                  0336
*   R14=R5;                         /* RESTORE RETURN REG            */
         LR    R14,R5                                              0336
*   GEN(BR   R14);                  /* RETURN TO VTAM                */
         BR   R14
*   GEN REFS(R4)(DROP  R4);                                        0338
         DROP  R4
*S25C9999:                                                         0339
*   R13=SVESC025(2);                /* PTR TO CALLER'S SAVEAREA      */
S25C9999 L     R13,SVESC025+4(,WAPTR)                              0339
*   END ISTSC025                                                   0340
*                                                                  0340
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (IFGRPL  )                                       */
*/*%INCLUDE SYSLIB  (IFGRPLVT)                                       */
*/*%INCLUDE SYSLIB  (ISTRPLFB)                                       */
*                                                                  0340
*       ;                                                          0340
@EL00001 DS    0H                                                  0340
@EF00001 DS    0H                                                  0340
@ER00001 L     @14,12(,@13)                                        0340
         LM    @00,@12,20(@13)                                     0340
         BR    @14                                                 0340
@DATA    DS    0H
@CH00375 DC    H'68'
@SM01396 MVC   $INBUFR(0,WAPTR),TECBDFLT
         DS    0F
@TF00001 DS    F
         DS    0F
@CF00072 DC    F'1'
@CF00139 DC    F'2'
@CF00081 DC    F'3'
@CF00068 DC    F'4'
@CF00055 DC    F'8'
@CF00087 DC    F'9'
@CF01301 DC    F'10'
@CF00783 DC    F'11'
@CF00136 DC    F'12'
@CF00800 DC    F'13'
@CF01306 DC    F'14'
@CF00032 DC    F'15'
@CV01362 DC    V(ISTSC033)
@CV01383 DC    V(I00C1001)
         DS    0D
RCAPTR   DS    A
TECBDLEN DC    AL4(13)
@CC01361 DC    C'33'
@CB01342 DC    X'030F01'
TECBDFLT DC    X'00000000000000000010800000'
TECBMASK DC    X'FFFFFFFF0700000EF8F0FCF0FEFFFFFFFFFFFFFEFFFFFEFFFF'
         DS    CL1
S25REP   DC    40F'0'
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
TCBSNCNT EQU   @03
I        EQU   @10
CDSPTR   EQU   @03
R14SAVE  EQU   @04
SENDPTR  EQU   @09
N        EQU   @03
WAPTR    EQU   @02
R0       EQU   @00
R1       EQU   @01
R2       EQU   @02
R3       EQU   @03
R4       EQU   @04
R5       EQU   @05
R6       EQU   @06
R13      EQU   @13
R14      EQU   @14
R15      EQU   @15
R10      EQU   @10
R11      EQU   @11
R12      EQU   @12
R7       EQU   @07
R8       EQU   @08
R9       EQU   @09
$RCAAREA EQU   0
$POINTER EQU   $RCAAREA+100
$TLTECB2 EQU   $POINTER+28
$TRTBLA  EQU   $POINTER+124
$CONSTNT EQU   $RCAAREA+244
$RCAFLG  EQU   $RCAAREA+604
$EXITSAV EQU   $RCAAREA+864
TOLTEPWA EQU   0
$SCTTBLE EQU   TOLTEPWA
$TESTOPT EQU   $SCTTBLE+2
$ERROPT  EQU   $SCTTBLE+3
$PDEVFLG EQU   $SCTTBLE+10
$CDSFLGS EQU   $SCTTBLE+11
$PDEVADR EQU   $SCTTBLE+12
$CDS8T19 EQU   $SCTTBLE+20
$EXECFLG EQU   $SCTTBLE+33
$OLTFLGS EQU   $SCTTBLE+36
$OLTFLG2 EQU   $SCTTBLE+37
$TOTFLG1 EQU   $SCTTBLE+38
$ROUTMSK EQU   $SCTTBLE+40
$CDA     EQU   TOLTEPWA+100
$RCA     EQU   $CDA+44
$OLTPTR  EQU   $CDA+52
$HIMOREC EQU   $CDA+60
$COMMFLG EQU   TOLTEPWA+224
$FLAG1   EQU   $COMMFLG
$FLAG2   EQU   $COMMFLG+1
$FLAG3   EQU   $COMMFLG+2
$FLAG4   EQU   $COMMFLG+3
$FLAG5   EQU   $COMMFLG+4
$EOJ     EQU   $FLAG5
$CANCEL  EQU   $EOJ
$FLAG6   EQU   $COMMFLG+5
$ABNDBIT EQU   $FLAG6
$FLAG7   EQU   $COMMFLG+6
$SNDRFLG EQU   $FLAG7
$FLAG8   EQU   $COMMFLG+7
$FLAG9   EQU   $COMMFLG+8
$FLAG10  EQU   $COMMFLG+9
$FLAG11  EQU   $COMMFLG+10
$FLAG12  EQU   $COMMFLG+11
$POSTFLG EQU   $FLAG12
$FLAG13  EQU   $COMMFLG+12
$DEVTBLE EQU   TOLTEPWA+240
$DEVCDS  EQU   $DEVTBLE
$DEVUNAD EQU   $DEVCDS
$CTINDX  EQU   $DEVUNAD
@NM00039 EQU   $DEVUNAD+2
$DEVFEAT EQU   $DEVCDS+4
$DEVCDSF EQU   $DEVCDS+9
$DEVSDCF EQU   $DEVCDS+10
$$SYMNME EQU   $DEVCDS+12
$MSGOTSD EQU   $$SYMNME
$DEVFLG1 EQU   $DEVTBLE+20
$LETGO   EQU   $DEVFLG1
$CATASTR EQU   $DEVFLG1
$GRABBED EQU   $DEVFLG1
$EVNCPLT EQU   $DEVFLG1
$ATTNEXP EQU   $DEVFLG1
$INTOCC  EQU   $DEVFLG1
$PRIMARY EQU   $DEVFLG1
$DEVFLG2 EQU   $DEVTBLE+21
$DEVTECB EQU   $DEVTBLE+22
$OPIS    EQU   $DEVTECB
$OPND    EQU   $DEVTECB+2
$DEVFLG3 EQU   $DEVTBLE+27
$ACQRED  EQU   $DEVFLG3
$SIOFLG  EQU   $DEVFLG3
$SRTEST  EQU   $DEVFLG3
$OLTERR  EQU   $DEVFLG3
$CLRSNT  EQU   $DEVFLG3
$IFTOUT  EQU   $DEVTBLE+36
$DEVSESP EQU   $IFTOUT
$SSCPDAF EQU   $IFTOUT+6
$LDNCBPT EQU   $DEVTBLE+48
$CID     EQU   $DEVTBLE+52
$RNINFO  EQU   $DEVTBLE+56
$DEVFLG5 EQU   $RNINFO+8
$DEVLU   EQU   $DEVFLG5
$DEVFLG4 EQU   $DEVTBLE+65
$DEVCNTS EQU   TOLTEPWA+1464
$TLTRPL3 EQU   TOLTEPWA+1856
$INBUFR  EQU   TOLTEPWA+2104
#EXITA   EQU   TOLTEPWA+2632
$CCOMDAT EQU   TOLTEPWA+2644
$CFLGS   EQU   $CCOMDAT+16
$24FEMSG EQU   TOLTEPWA+2681
$24CATMG EQU   $24FEMSG+11
@NM00047 EQU   TOLTEPWA+2776
$OUNTPTR EQU   @NM00047+4
$NSPTR   EQU   $OUNTPTR
$NSCNT   EQU   @NM00047+10
$ENXX    EQU   @NM00047+15
$IMITX   EQU   $ENXX
$CTLINE  EQU   TOLTEPWA+2794
SVESC025 EQU   TOLTEPWA+3088
SVESC033 EQU   TOLTEPWA+3160
SVECC013 EQU   TOLTEPWA+3232
SVEIC003 EQU   TOLTEPWA+3592
SVESC022 EQU   TOLTEPWA+3736
SVECC011 EQU   TOLTEPWA+4024
TECBMAPS EQU   0
TECBFDCT EQU   TECBMAPS
TECBFDLN EQU   TECBMAPS+1
TECBSNLN EQU   TECBMAPS+2
TECBFLGS EQU   TECBMAPS+4
TECBSNCT EQU   TECBMAPS+5
TECBSNOC EQU   TECBMAPS+6
TECBEVOC EQU   TECBMAPS+7
TECBEVT1 EQU   TECBMAPS+8
TECBFD01 EQU   0
@NM00051 EQU   TECBFD01+4
TECBSNS1 EQU   0
TCBSENSE EQU   TECBSNS1+3
TECBSEND EQU   0
TCBSSEN  EQU   TECBSEND
TCBSSENM EQU   TECBSEND+1
TCBUSEN  EQU   TECBSEND+2
TCBRESP  EQU   TECBSEND+4
TCBRTYPE EQU   TECBSEND+7
TCBRKCHG EQU   TECBSEND+8
TCBCHAIN EQU   TECBSEND+9
TCBCNTRL EQU   TECBSEND+10
TCBSEQNO EQU   TECBSEND+13
TCBSIGDA EQU   TECBSEND+15
TCBIBSQ  EQU   TECBSEND+19
TCBIBSQL EQU   TECBSEND+20
TCBOBSQ  EQU   TECBSEND+22
TCBOBSQL EQU   TECBSEND+23
CDSMAP   EQU   0
CDSUA    EQU   CDSMAP
CDSMFCT  EQU   CDSMAP+4
CDSFEAT  EQU   CDSMFCT+1
CDSFLAG  EQU   CDSMAP+9
CDSSYMB  EQU   CDSFLAG
CDSSYMBN EQU   CDSMAP+12
SENDMAP  EQU   0
$SENDMID EQU   SENDMAP+2
$SENDTCB EQU   SENDMAP+4
$SENDCDS EQU   SENDMAP+8
$SENDARA EQU   SENDMAP+12
$SENDRLN EQU   SENDMAP+16
$SENDFLG EQU   SENDMAP+18
$SENDBB  EQU   $SENDFLG
$SENDEB  EQU   $SENDFLG
$SENDFME EQU   $SENDFLG
$SENDEX  EQU   $SENDFLG
$SENDRRN EQU   $SENDFLG
$SENDCSL EQU   $SENDFLG
$SENDSTP EQU   $SENDFLG
$SENDFMH EQU   $SENDFLG
$SENDCMD EQU   $SENDFLG+1
$SENDREQ EQU   $SENDFLG+1
ISTBIND  EQU   0
BINFMTY  EQU   ISTBIND
BINTS    EQU   ISTBIND+2
BINPRIP  EQU   ISTBIND+3
BINSECP  EQU   ISTBIND+4
BINCMNP  EQU   ISTBIND+5
BINCMNP2 EQU   ISTBIND+6
BINTSU   EQU   ISTBIND+7
BINAPACE EQU   BINTSU
BINRPACE EQU   BINTSU+1
BINRUSZ  EQU   BINTSU+2
BINSRUSZ EQU   BINRUSZ
BINPRUSZ EQU   BINRUSZ+1
BINSPACE EQU   BINTSU+4
BINBPACE EQU   BINTSU+5
BINPRSVC EQU   ISTBIND+13
BINLUP   EQU   BINPRSVC
BINPSCHR EQU   BINPRSVC+1
BINCRYPT EQU   ISTBIND+25
BINCRYRL EQU   0
BINCRCTL EQU   BINCRYRL
BINCRPFL EQU   BINCRYRL+1
BINPNAU  EQU   0
BINAUNML EQU   BINPNAU
BINAUNM  EQU   BINPNAU+1
BINUSEDT EQU   0
BINUSDTL EQU   BINUSEDT
BINUSDTA EQU   BINUSEDT+1
BINURC   EQU   0
BINURCL  EQU   BINURC
BINURCD  EQU   BINURC+1
BINSLUNM EQU   0
IFGRPL   EQU   0
RPLCOMN  EQU   IFGRPL
RPLIDWD  EQU   RPLCOMN
RPLLEN   EQU   RPLIDWD+3
RPLECB   EQU   RPLCOMN+8
RPLEXITP EQU   RPLECB
RPLFDBWD EQU   RPLCOMN+12
RPLFDBK  EQU   RPLFDBWD+1
RPLRTNCD EQU   RPLFDBK
RPLCNDCD EQU   RPLFDBK+1
RPLCMPON EQU   RPLCNDCD
RPLFDB2  EQU   RPLCMPON
RPLERRCD EQU   RPLCNDCD+1
RPLFDB3  EQU   RPLERRCD
RPLKEYLE EQU   RPLCOMN+16
RPLARG   EQU   RPLCOMN+36
RPLOPTCD EQU   RPLCOMN+40
RPLOPT1  EQU   RPLOPTCD
RPLECBSW EQU   RPLOPT1
RPLOPT2  EQU   RPLOPTCD+1
RPLADR   EQU   RPLOPT2
RPLOPT3  EQU   RPLOPTCD+2
RPLOPT4  EQU   RPLOPTCD+3
RPLNXTRP EQU   RPLCOMN+44
RPLRLEN  EQU   RPLCOMN+48
RPLOPTC2 EQU   RPLCOMN+56
RPLOPT5  EQU   RPLOPTC2
RPLWRTYP EQU   RPLOPT5
RPLOPT6  EQU   RPLOPTC2+1
RPLUNTYP EQU   RPLOPT6
RPLOPT7  EQU   RPLOPTC2+2
RPLCNOPT EQU   RPLOPT7
RPLOPT8  EQU   RPLOPTC2+3
RPLRBAR  EQU   RPLCOMN+60
RPLAIXID EQU   RPLRBAR+2
RPLEXTDS EQU   RPLCOMN+68
RPLEXTD1 EQU   RPLEXTDS
RPLVTEXT EQU   IFGRPL+76
RPLFDBK2 EQU   RPLVTEXT+12
RPLSSNSI EQU   RPLFDBK2
RPLDSB   EQU   RPLSSNSI
RPLDSB1  EQU   RPLDSB
RPLSSEI  EQU   RPLDSB1
RPLDSB2  EQU   RPLDSB+1
RPLUSNSI EQU   RPLFDBK2+2
RPLUSFLD EQU   RPLVTEXT+16
RPLOPTC3 EQU   RPLVTEXT+20
RPLOPT9  EQU   RPLOPTC3
RPLOPT10 EQU   RPLOPTC3+1
RPLOPT11 EQU   RPLOPTC3+2
RPLOPT12 EQU   RPLOPTC3+3
RPLFMHDR EQU   RPLOPT12
RPLOSENS EQU   RPLVTEXT+24
RPLSSNSO EQU   RPLOSENS
RPLSSEO  EQU   RPLSSNSO
RPLSSMO  EQU   RPLSSNSO+1
RPLUSNSO EQU   RPLOSENS+2
RPLSIGDA EQU   RPLVTEXT+32
RPLOF16  EQU   0
RPLRH3   EQU   RPLOF16
RPLBB    EQU   RPLRH3
RPLEB    EQU   RPLRH3
RPLCMD   EQU   RPLRH3
RPLCHREQ EQU   RPLRH3
RPLCSI   EQU   RPLRH3
RPLSRTYP EQU   RPLOF16+1
RPLSTYPE EQU   RPLSRTYP
RPLSRESP EQU   RPLSTYPE
RPLRTYPE EQU   RPLSRTYP
RPLCHN   EQU   RPLOF16+2
RPLVTFL1 EQU   RPLOF16+3
RPLVTFL2 EQU   RPLOF16+4
RPLPOSTV EQU   RPLVTFL2
RPLRESP  EQU   RPLVTFL2
RPLEX    EQU   RPLRESP
RPLNFME  EQU   RPLRESP
RPLRRN   EQU   RPLRESP
RPLCNTRL EQU   RPLOF16+5
RPLCNTDF EQU   RPLCNTRL
RPLCNTDC EQU   RPLCNTRL+1
RPLCNTSC EQU   RPLCNTRL+2
RPLOF60  EQU   0
RPLOBSQV EQU   RPLOF60
RPLIBSQV EQU   RPLOF60+2
RPLOBSQ  EQU   RPLOF60+4
RPLIBSQ  EQU   RPLOF60+5
RPLSEQNO EQU   RPLOF60+6
BACKSAVE EQU   0
$TRTBL   EQU   0
#EXIT    EQU   0
ISTRPL   EQU   0
BINLUP1  EQU   BINPSCHR
BINLUS   EQU   BINPSCHR
BINFMF1  EQU   BINLUS
@NM00068 EQU   BINFMF1
BINDSPF1 EQU   BINLUS+2
BINMEDIA EQU   BINLUS+4
BINLUP2  EQU   BINPSCHR
BINSCRSZ EQU   BINLUP2+5
BINLUP3  EQU   BINPSCHR
BINBFRSZ EQU   BINLUP3+5
BINBDESC EQU   BINLUP3+9
BINLUP4  EQU   BINPSCHR
BINPSNDO EQU   BINLUP4
BINPDSPP EQU   BINPSNDO
BINADSPP EQU   BINPSNDO+1
BINFMHUP EQU   BINPSNDO+3
BINSSNDO EQU   BINLUP4+4
BINCSO   EQU   BINLUP4+8
BINCSOR  EQU   BINCSO
BINGENCO EQU   BINLUP4+9
SVECC012 EQU   SVESC022
SVEIC00A EQU   SVEIC003
SVEIC004 EQU   SVEIC003
SVEIC005 EQU   SVEIC003
SVESC02A EQU   SVESC022
SVESC02B EQU   SVESC022
SVESC02D EQU   SVESC022
SVESC02E EQU   SVESC022
SVESC02F EQU   SVECC013
SVESC024 EQU   SVESC022
SVESC027 EQU   SVESC022
SVESC029 EQU   SVESC033
SVESC031 EQU   SVECC013
SVESC032 EQU   SVECC011
SVETC037 EQU   SVEIC003
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
BINRSV35 EQU   BINLUP4+10
BINRVS34 EQU   BINGENCO
BINAAO   EQU   BINGENCO
BINIAO   EQU   BINGENCO
BINRSV33 EQU   BINGENCO
BINWSDF  EQU   BINGENCO
BINRSV32 EQU   BINGENCO
BINCSOC2 EQU   BINCSO
BINCSOC1 EQU   BINCSO
BINRSV31 EQU   BINCSOR
BINRSV30 EQU   BINCSOR
BINCSOAI EQU   BINCSOR
BINCSOE  EQU   BINCSOR
BINFMHUS EQU   BINSSNDO+3
BINCSLS  EQU   BINSSNDO+2
BINADSPS EQU   BINSSNDO+1
BINPDSPS EQU   BINSSNDO
BINKIXS  EQU   BINFMHUP
BINQFDO  EQU   BINFMHUP
BINWPFMO EQU   BINFMHUP
BINPDIRO EQU   BINFMHUP
BINCOMPO EQU   BINFMHUP
BINDSSTO EQU   BINFMHUP
BINSSDAT EQU   BINFMHUP
BINCSLP  EQU   BINPSNDO+2
BINRSV29 EQU   BINADSPP
BINADSRF EQU   BINADSPP
BINADSSF EQU   BINADSPP
BINADSBE EQU   BINADSPP
BINADSEC EQU   BINADSPP
BINADSCD EQU   BINADSPP
BINADSEP EQU   BINADSPP
BINPEP   EQU   BINPDSPP
BINDPP   EQU   BINPDSPP
BINRSV28 EQU   BINPDSPP
@NM00079 EQU   BINLUP3+10
BINBFSIZ EQU   BINBDESC
@NM00078 EQU   BINBDESC
BINBDRAC EQU   BINBFRSZ+3
BINBFRAR EQU   BINBFRSZ+2
BINBFRDC EQU   BINBFRSZ+1
BINBFRDR EQU   BINBFRSZ
@NM00077 EQU   BINLUP3
@NM00076 EQU   BINLUP2+10
BINPRESZ EQU   BINLUP2+9
BINSALTC EQU   BINSCRSZ+3
BINSALTR EQU   BINSCRSZ+2
BINSPRIC EQU   BINSCRSZ+1
BINSPRIR EQU   BINSCRSZ
@NM00075 EQU   BINLUP2+1
@NM00074 EQU   BINLUP2
BINSEDS  EQU   BINLUP2
@NM00073 EQU   BINMEDIA
BINCDEDS EQU   BINMEDIA
BINXDOCF EQU   BINMEDIA
BINXCDF  EQU   BINMEDIA
BINDISK  EQU   BINMEDIA
BINXCHNG EQU   BINMEDIA
BINCARD  EQU   BINMEDIA
BINDOCMT EQU   BINMEDIA
@NM00072 EQU   BINDSPF1+1
BINUAALT EQU   BINDSPF1+1
BINUAINT EQU   BINDSPF1+1
BINTRNDS EQU   BINDSPF1
@NM00071 EQU   BINDSPF1
BINSLD   EQU   BINDSPF1
BINVSDS  EQU   BINDSPF1
BINVTDS  EQU   BINDSPF1
BINHFDS  EQU   BINDSPF1
BININTR  EQU   BINDSPF1
@NM00070 EQU   @NM00068+1
BINXFPD  EQU   @NM00068+1
BINCSDS  EQU   @NM00068+1
BINQDSI  EQU   @NM00068+1
@NM00069 EQU   @NM00068+1
BINARRR  EQU   @NM00068
BINSIDS  EQU   @NM00068
BINSAI   EQU   @NM00068
BINSDSI  EQU   @NM00068
BINKDDSI EQU   @NM00068
BINPDIR  EQU   BINFMF1
BINCMPCT EQU   BINFMF1
BINDESTS EQU   BINFMF1
BINSLUS1 EQU   BINLUP1+6
BINPLUS1 EQU   BINLUP1+1
BINDSP1  EQU   BINLUP1
BINFMHS1 EQU   BINLUP1
@NM00102 EQU   RPLIBSQ
RPLIINV  EQU   RPLIBSQ
RPLINEG  EQU   RPLIBSQ
RPLIPOS  EQU   RPLIBSQ
RPLIIGN  EQU   RPLIBSQ
RPLIRSET EQU   RPLIBSQ
RPLITST  EQU   RPLIBSQ
RPLISET  EQU   RPLIBSQ
@NM00101 EQU   RPLOBSQ
RPLOINV  EQU   RPLOBSQ
RPLONEG  EQU   RPLOBSQ
RPLOPOS  EQU   RPLOBSQ
RPLOIGN  EQU   RPLOBSQ
RPLORSET EQU   RPLOBSQ
RPLOTST  EQU   RPLOBSQ
RPLOSET  EQU   RPLOBSQ
@NM00100 EQU   RPLCNTSC
RPLRSHUT EQU   RPLCNTSC
RPLRQR   EQU   RPLCNTSC
RPLSHUTC EQU   RPLCNTSC
RPLSHUTD EQU   RPLCNTSC
RPLSTSN  EQU   RPLCNTSC
RPLCLEAR EQU   RPLCNTSC
RPLSDT   EQU   RPLCNTSC
RPLBIS   EQU   RPLCNTDC
RPLSBI   EQU   RPLCNTDC
RPLTUNBD EQU   RPLCNTDC
RPLTBIND EQU   RPLCNTDC
RPLSIGNL EQU   RPLCNTDC
RPLLUS   EQU   RPLCNTDC
RPLRTR   EQU   RPLCNTDC
RPLBID   EQU   RPLCNTDC
@NM00099 EQU   RPLCNTDF
RPLQI    EQU   RPLCNTDF
RPLRELQ  EQU   RPLCNTDF
RPLCHASE EQU   RPLCNTDF
RPLQEC   EQU   RPLCNTDF
RPLQC    EQU   RPLCNTDF
RPLCNCEL EQU   RPLCNTDF
RPLDATA  EQU   RPLCNTDF
RPLQRI   EQU   RPLRESP
@NM00098 EQU   RPLPOSTV
RPLSCHED EQU   RPLPOSTV
@NM00097 EQU   RPLVTFL1
RPLTLGAC EQU   RPLVTFL1
RPLTNDSP EQU   RPLVTFL1
RPLAUTUS EQU   RPLVTFL1
RPLVTUSE EQU   RPLVTFL1
@NM00096 EQU   RPLVTFL1
@NM00095 EQU   RPLCHN
RPLONLY  EQU   RPLCHN
RPLLAST  EQU   RPLCHN
RPLMIDLE EQU   RPLCHN
RPLFIRST EQU   RPLCHN
@NM00094 EQU   RPLRTYPE
RPLDFASY EQU   RPLRTYPE
RPLNFSYN EQU   RPLRTYPE
RPLRRESP EQU   RPLRTYPE
@NM00093 EQU   RPLSTYPE
@NM00092 EQU   RPLRH3
RPLSAV13 EQU   RPLVTEXT+28
@NM00091 EQU   RPLSSEO
RPLRRO   EQU   RPLSSEO
RPLFIO   EQU   RPLSSEO
RPLSTATO EQU   RPLSSEO
RPLCPMO  EQU   RPLSSEO
@NM00090 EQU   RPLSSEO
@NM00089 EQU   RPLOPT12
@NM00088 EQU   RPLOPT12
@NM00087 EQU   RPLOPT12
RPLNIBTK EQU   RPLOPT12
RPLTRUNC EQU   RPLOPT12
RPLKEEP  EQU   RPLOPT12
@NM00086 EQU   RPLOPT12
RPLRSVE8 EQU   RPLOPT11
RPLRSVE7 EQU   RPLOPT11
RPLRSVE6 EQU   RPLOPT11
RPLRSVE5 EQU   RPLOPT11
RPLRSVE4 EQU   RPLOPT11
RPLSTOP  EQU   RPLOPT11
RPLSTART EQU   RPLOPT11
RPLQUIES EQU   RPLOPT11
RPLRSVI6 EQU   RPLOPT10
RPLRSVI5 EQU   RPLOPT10
RPLRSVI4 EQU   RPLOPT10
RPLRSVI3 EQU   RPLOPT10
RPLTSKY  EQU   RPLOPT10
RPLSPARM EQU   RPLOPT10
RPLDSPLY EQU   RPLOPT10
RPLBSCID EQU   RPLOPT10
RPLTOPL  EQU   RPLOPT9
RPLCIDE  EQU   RPLOPT9
RPLRNNM  EQU   RPLOPT9
RPLAPPST EQU   RPLOPT9
RPLCOUNT EQU   RPLOPT9
RPLTERMS EQU   RPLOPT9
RPLDEVCH EQU   RPLOPT9
RPLLOGON EQU   RPLOPT9
RPLESR2  EQU   RPLUSNSI+1
RPLESR1  EQU   RPLUSNSI
RPLSSMI  EQU   RPLDSB2
@NM00085 EQU   RPLSSEI
RPLRRI   EQU   RPLSSEI
RPLFII   EQU   RPLSSEI
RPLSTATI EQU   RPLSSEI
RPLCPMI  EQU   RPLSSEI
RPLPATHI EQU   RPLSSEI
RPLARCLN EQU   RPLVTEXT+8
RPLAARLN EQU   RPLVTEXT+4
RPLAAREA EQU   RPLVTEXT
RPLERMSA EQU   RPLCOMN+72
RPLEMLEN EQU   RPLCOMN+70
RPLACTIV EQU   RPLCOMN+69
RPLBRANC EQU   RPLEXTD1
RPLNIB   EQU   RPLEXTD1
RPLTCRYP EQU   RPLEXTD1
@NM00084 EQU   RPLEXTD1
RPLEXIT  EQU   RPLEXTD1
RPLNEXIT EQU   RPLEXTD1
RPLEXSCH EQU   RPLEXTD1
RPLDDDD  EQU   RPLRBAR+4
@NM00083 EQU   RPLRBAR+3
@NM00082 EQU   RPLAIXID
RPLAXPKP EQU   RPLAIXID
RPLAIXPC EQU   RPLRBAR
RPLRSV88 EQU   RPLOPT8
RPLUNCON EQU   RPLOPT8
RPLACTV  EQU   RPLOPT8
RPLSESS  EQU   RPLOPT8
RPLPEND  EQU   RPLOPT8
RPLODPRM EQU   RPLOPT8
RPLODACP EQU   RPLOPT8
RPLODACQ EQU   RPLOPT8
RPLRSV78 EQU   RPLOPT7
RPLTCRNO EQU   RPLOPT7
RPLRLSOP EQU   RPLOPT7
RPLTPOST EQU   RPLOPT7
RPLQOPT  EQU   RPLOPT7
RPLCNIMM EQU   RPLCNOPT
RPLCNANY EQU   RPLCNOPT
RPLCNALL EQU   RPLCNOPT
RPLRSV68 EQU   RPLOPT6
RPLRSV67 EQU   RPLOPT6
RPLLOCK  EQU   RPLOPT6
RPLNCOND EQU   RPLOPT6
RPLCOND  EQU   RPLOPT6
RPLEOT   EQU   RPLUNTYP
RPLEOM   EQU   RPLUNTYP
RPLEOB   EQU   RPLUNTYP
RPLWROPT EQU   RPLOPT5
RPLNODE  EQU   RPLOPT5
RPLERACE EQU   RPLWRTYP
RPLEAU   EQU   RPLWRTYP
RPLNERAS EQU   RPLWRTYP
RPLPSOPT EQU   RPLOPT5
@NM00081 EQU   RPLOPT5
RPLDLGIN EQU   RPLOPT5
RPLBUFL  EQU   RPLCOMN+52
RPLCHAIN EQU   RPLNXTRP
@NM00080 EQU   RPLOPT4
RPLMKFRM EQU   RPLOPT4
RPLENDTR EQU   RPLOPT4
RPLALIGN EQU   RPLOPT3
RPLFMT   EQU   RPLOPT3
RPLFLD   EQU   RPLOPT3
RPLVFY   EQU   RPLOPT3
RPLBLK   EQU   RPLOPT3
RPLSFORM EQU   RPLOPT3
RPLEODS  EQU   RPLOPT3
RPLNSP   EQU   RPLOPT2
RPLUPD   EQU   RPLOPT2
RPLWAITX EQU   RPLOPT2
RPLLRD   EQU   RPLOPT2
RPLBWD   EQU   RPLOPT2
RPLCNV   EQU   RPLOPT2
RPLADD   EQU   RPLADR
RPLKEY   EQU   RPLOPT2
RPLECBIN EQU   RPLECBSW
RPLGEN   EQU   RPLOPT1
RPLKGE   EQU   RPLOPT1
RPLASY   EQU   RPLOPT1
RPLSKP   EQU   RPLOPT1
RPLSEQ   EQU   RPLOPT1
RPLDIR   EQU   RPLOPT1
RPLLOC   EQU   RPLOPT1
RPLDAF   EQU   RPLARG+2
RPLSAF   EQU   RPLARG
RPLAREA  EQU   RPLCOMN+32
RPLTCBPT EQU   RPLCOMN+28
RPLDACB  EQU   RPLCOMN+24
RPLCCHAR EQU   RPLCOMN+20
RPLSTRID EQU   RPLCOMN+18
RPLKEYL  EQU   RPLKEYLE
RPLRDSOH EQU   RPLFDB3
RPLRLG   EQU   RPLFDB3
RPLLGFRC EQU   RPLFDB3
RPLREOT  EQU   RPLFDB3
RPLREOM  EQU   RPLFDB3
RPLREOB  EQU   RPLFDB3
RPLSV32  EQU   RPLFDB3
RPLUINPT EQU   RPLFDB3
RPLSTSAV EQU   RPLFDB2
RPLCUERR EQU   RPLFDB2
RPLDLGFL EQU   RPLFDB2
RPLIOERR EQU   RPLFDB2
RPLDVUNS EQU   RPLFDB2
RPLATND  EQU   RPLFDB2
RPLRVID  EQU   RPLFDB2
RPLERLK  EQU   RPLFDB2
RPLERREG EQU   RPLRTNCD
RPLSTAT  EQU   RPLFDBWD
RPLPOST  EQU   RPLEXITP
RPLWAIT  EQU   RPLEXITP
RPLPLHPT EQU   RPLCOMN+4
RPLLEN2  EQU   RPLLEN
RPLREQ   EQU   RPLIDWD+2
RPLSTYP  EQU   RPLIDWD+1
RPLID    EQU   RPLIDWD
BINSNMD  EQU   BINSLUNM+1
BINSNML  EQU   BINSLUNM
BINCRKEY EQU   BINCRYRL+2
BINCCIPH EQU   BINCRPFL
BINCRSV1 EQU   BINCRPFL
BINCKEYT EQU   BINCRPFL
BINCLEN  EQU   BINCRCTL
BINCSESS EQU   BINCRCTL
BINCEUMB EQU   BINCRCTL
BINUSE   EQU   ISTBIND+36
BINUSEL  EQU   ISTBIND+35
BINPRIM  EQU   ISTBIND+27
BINPRIML EQU   ISTBIND+26
BINLUTYP EQU   BINLUP
@NM00067 EQU   BINLUP
BINBPACM EQU   BINBPACE
@NM00066 EQU   BINBPACE
BINSPACM EQU   BINSPACE
@NM00065 EQU   BINSPACE
BINPS1ST EQU   BINSPACE
BINPRUSE EQU   BINPRUSZ
BINPRUSM EQU   BINPRUSZ
BINSRUSE EQU   BINSRUSZ
BINSRUSM EQU   BINSRUSZ
BINRPACM EQU   BINRPACE
@NM00064 EQU   BINRPACE
BINAPACM EQU   BINAPACE
@NM00063 EQU   BINAPACE
BINSP2ST EQU   BINAPACE
BINCONR  EQU   BINCMNP2
BINRCHN  EQU   BINCMNP2
BINMDIBK EQU   BINCMNP2
BINBKFS  EQU   BINCMNP2
BINRCVR  EQU   BINCMNP2
BINFMTRM EQU   BINCMNP2
@NM00062 EQU   BINCMNP
BINALT   EQU   BINCMNP
BINBKTR  EQU   BINCMNP
BINBRAK  EQU   BINCMNP
BINFMHD  EQU   BINCMNP
@NM00061 EQU   BINCMNP
BINSSEB  EQU   BINSECP
BINSCMP  EQU   BINSECP
@NM00060 EQU   BINSECP
BINSCHNR EQU   BINSECP
BINSMCH  EQU   BINSECP
BINSCHN  EQU   BINSECP
BINPSEB  EQU   BINPRIP
BINPCMP  EQU   BINPRIP
@NM00059 EQU   BINPRIP
BINPCHNR EQU   BINPRIP
BINPMCH  EQU   BINPRIP
BINPCHN  EQU   BINPRIP
BINFM    EQU   ISTBIND+1
BINTYPE  EQU   BINFMTY
BINFMT   EQU   BINFMTY
@NM00058 EQU   $SENDFLG+1
$SENDLVL EQU   SENDMAP+1
$SENDCPF EQU   SENDMAP
CDSEXARA EQU   CDSMAP+20
CDSEXTM  EQU   CDSFLAG+2
CDSEXTB  EQU   CDSFLAG+2
CDSTMERB EQU   CDSFLAG+2
@NM00057 EQU   CDSFLAG+1
CDSDVPRO EQU   CDSFLAG+1
CDSNTPRI EQU   CDSFLAG+1
CDSLINCN EQU   CDSFLAG
CDSREMSY EQU   CDSFLAG
CDS2CHAN EQU   CDSFLAG
CDSEXTPR EQU   CDSFLAG
CDSFEVOL EQU   CDSFLAG
CDSSHAR  EQU   CDSFLAG
CDSFPMD  EQU   CDSFLAG
CDSBYTCT EQU   CDSMAP+8
CDSTYPE  EQU   CDSMFCT+3
CDSCLASS EQU   CDSMFCT+2
@NM00056 EQU   CDSFEAT
CDSDEVM  EQU   CDSFEAT
CDSDEVT  EQU   CDSFEAT
CDSASCII EQU   CDSFEAT
CDSMODEL EQU   CDSMFCT
@NM00055 EQU   TCBRKCHG
TCBALT   EQU   TCBRKCHG
TCBREQ   EQU   TCBRKCHG
TCBCMD   EQU   TCBRKCHG
TCBEB    EQU   TCBRKCHG
TCBBB    EQU   TCBRKCHG
@NM00054 EQU   TCBRTYPE
TCBDFAS  EQU   TCBRTYPE
TCBNDFS  EQU   TCBRTYPE
TCBRSP   EQU   TCBRTYPE
@NM00053 EQU   TCBRTYPE
TCBRECLN EQU   TECBSEND+5
TCBRRN   EQU   TCBRESP
TCBNFME  EQU   TCBRESP
TCBEX    EQU   TCBRESP
@NM00052 EQU   TCBRESP
TCBSNDEV EQU   TECBSNS1
TCBEVCSW EQU   @NM00051
TCBEVDEV EQU   TECBFD01+1
TCBEVTYP EQU   TECBFD01
@NM00050 EQU   TECBFLGS
TCBQUEUE EQU   TECBFLGS
SVECC010 EQU   TOLTEPWA+3952
SVETC035 EQU   TOLTEPWA+3880
SVESC030 EQU   TOLTEPWA+3808
SVESC020 EQU   TOLTEPWA+3664
SVEIC002 EQU   TOLTEPWA+3520
SVECC014 EQU   TOLTEPWA+3376
SVESC120 EQU   TOLTEPWA+3304
@NM00049 EQU   TOLTEPWA+2980
$RPLERR  EQU   TOLTEPWA+2977
@NM00048 EQU   TOLTEPWA+2976
$R13PR3  EQU   TOLTEPWA+2972
$CEINT2  EQU   TOLTEPWA+2968
$CEINT1  EQU   TOLTEPWA+2964
$MSGGET  EQU   TOLTEPWA+2960
$ACQLIST EQU   TOLTEPWA+2956
$R4SAVE1 EQU   TOLTEPWA+2952
$CLSISS  EQU   TOLTEPWA+2950
$CLSCNT  EQU   TOLTEPWA+2948
$CUTABLE EQU   TOLTEPWA+2868
$BUFSZ2  EQU   TOLTEPWA+2864
$RESID2  EQU   TOLTEPWA+2860
$OLTCCW2 EQU   TOLTEPWA+2856
$ENDBFR2 EQU   TOLTEPWA+2852
$1STBFR2 EQU   TOLTEPWA+2848
$TECB2   EQU   TOLTEPWA+2844
$BUFSZ1  EQU   TOLTEPWA+2840
$RESID1  EQU   TOLTEPWA+2836
$OLTCCW1 EQU   TOLTEPWA+2832
$ENDBFR1 EQU   TOLTEPWA+2828
$1STBFR1 EQU   TOLTEPWA+2824
$TECB1   EQU   TOLTEPWA+2820
$WAITIME EQU   TOLTEPWA+2816
$TRTN#   EQU   TOLTEPWA+2815
$WIODEV  EQU   TOLTEPWA+2814
$RQSTSZE EQU   TOLTEPWA+2812
$RQSTPTR EQU   TOLTEPWA+2808
$R4SAVE  EQU   TOLTEPWA+2804
$PARTADR EQU   TOLTEPWA+2800
$TBSDATA EQU   TOLTEPWA+2796
$CTWIDTH EQU   TOLTEPWA+2795
$APWIDTH EQU   TOLTEPWA+2793
$APLINE  EQU   TOLTEPWA+2792
$INDEX   EQU   $IMITX
$UMXX    EQU   @NM00047+14
$NSXX    EQU   @NM00047+12
$ATACNT  EQU   $NSCNT
$CTR     EQU   @NM00047+8
$ATAPTR  EQU   $NSPTR
$DDRPTR  EQU   @NM00047
$DTORESP EQU   TOLTEPWA+2712
$APNAME  EQU   TOLTEPWA+2704
$24SYMNE EQU   $24CATMG+4
$24DEVAD EQU   $24CATMG
$24RTN#  EQU   $24FEMSG+8
$ESECTID EQU   $24FEMSG
$24FLGS  EQU   TOLTEPWA+2680
$24SAVE2 EQU   TOLTEPWA+2676
$24SAVE1 EQU   TOLTEPWA+2672
$24UNADR EQU   TOLTEPWA+2668
$24SAV13 EQU   TOLTEPWA+2664
$24RETCD EQU   TOLTEPWA+2663
$MACID   EQU   TOLTEPWA+2661
$CSPARE  EQU   $CFLGS
$C2WAY   EQU   $CFLGS
$CINCT   EQU   $CCOMDAT+12
$CINADR  EQU   $CCOMDAT+8
$COUTCT  EQU   $CCOMDAT+4
$COUTAD  EQU   $CCOMDAT
ROOTLOC  EQU   TOLTEPWA+2640
$RETREG  EQU   TOLTEPWA+2636
$WORK    EQU   TOLTEPWA+2376
$EXTA    EQU   TOLTEPWA+2320
$PASSONA EQU   TOLTEPWA+2264
$TRMINPT EQU   TOLTEPWA+2184
$BUFFER  EQU   TOLTEPWA+1976
$TLTRPL2 EQU   TOLTEPWA+1736
$TLTRPL1 EQU   TOLTEPWA+1616
$SLTBL   EQU   TOLTEPWA+1468
$CDEVPT  EQU   TOLTEPWA+1466
$FEEDBCK EQU   $DEVTBLE+66
$WTISUED EQU   $DEVFLG4
$EXIOISD EQU   $DEVFLG4
$REMWRIT EQU   $DEVFLG4
$REMDONE EQU   $DEVFLG4
$2NDUSED EQU   $DEVFLG4
$1STUSED EQU   $DEVFLG4
$IGLXIFB EQU   $DEVFLG4
$EXIOLV3 EQU   $DEVFLG4
@NM00046 EQU   $DEVFLG5
$DVBASIC EQU   $DEVFLG5
$ASCII   EQU   $DEVFLG5
$OPNDFAL EQU   $DEVFLG5
$ACQNCB  EQU   $DEVFLG5
$REMOTE  EQU   $DEVFLG5
$ENDNODE EQU   $DEVFLG5
$LINENME EQU   $RNINFO
$DVCOL   EQU   $LDNCBPT+2
$DVROW   EQU   $LDNCBPT
$NCSPLP  EQU   $DEVTBLE+44
$DVLN    EQU   $SSCPDAF
$DAF     EQU   $DEVSESP+4
$VARYPAB EQU   $DEVSESP
$SYSMN   EQU   $DEVTBLE+28
@NM00045 EQU   $DEVFLG3
$DVSNDOK EQU   $SIOFLG
$POLLREQ EQU   $DEVFLG3
$NOTDEV  EQU   $DEVFLG3
$DVINCT  EQU   $DEVTBLE+26
$DVBRKST EQU   $OPND+1
$DVBRKSN EQU   $OPND
$DVSEQNO EQU   $OPIS
$CEINTRP EQU   $DEVFLG2
$TESTMDE EQU   $DEVFLG2
$DEVALOC EQU   $DEVFLG2
$ALLDATA EQU   $DEVFLG2
$ENDCNTL EQU   $DEVFLG2
$CTLDEV  EQU   $DEVFLG2
$NOCDS   EQU   $DEVFLG2
$DATAIN  EQU   $DEVFLG2
$DVCTBYT EQU   $INTOCC
$DEVACT  EQU   $DEVFLG1
$DVLGMDE EQU   $ATTNEXP
$DVSPRM  EQU   $EVNCPLT
$CURELEM EQU   $$SYMNME+4
$EXTDEV  EQU   $DEVCDS+11
@NM00044 EQU   $DEVSDCF
$NOTPRIM EQU   $DEVSDCF
@NM00043 EQU   $DEVCDSF
@NM00042 EQU   $DEVCDSF
@NM00041 EQU   $DEVCDSF
$CDSNAME EQU   $DEVCDSF
$EXTRN   EQU   $DEVCDSF
$CEVOLUM EQU   $DEVCDSF
$SHARD   EQU   $DEVCDSF
$DEVFPM  EQU   $DEVCDSF
$DEVCNT  EQU   $DEVCDS+8
$DEVTYPE EQU   $DEVFEAT+3
$DEVCLAS EQU   $DEVFEAT+2
$DEVFRRS EQU   $DEVFEAT+1
$DEVMOD  EQU   $DEVFEAT
$DEVRDGT EQU   @NM00039+1
$DEVCTLU EQU   @NM00039+1
$DEVCHAN EQU   @NM00039
@NM00040 EQU   @NM00039
$FLAG16  EQU   $COMMFLG+15
$FLAG15  EQU   $COMMFLG+14
$FLAG14  EQU   $COMMFLG+13
$TEP2ND  EQU   $FLAG13
$TEP1ST  EQU   $FLAG13
$CATMSG  EQU   $FLAG13
$PRMPTSW EQU   $FLAG13
$DEVENT  EQU   $FLAG13
$OLTMACC EQU   $FLAG13
$LGON    EQU   $FLAG13
$CTLOGON EQU   $FLAG13
@NM00038 EQU   $FLAG12
$VARYINP EQU   $FLAG12
$ENDTEST EQU   $FLAG12
$VRYHRD  EQU   $FLAG12
$VRYSFT  EQU   $FLAG12
$OPTMSG  EQU   $FLAG12
$FEORCAT EQU   $FLAG11
@NM00037 EQU   $FLAG11
@NM00036 EQU   $FLAG10
$INBND   EQU   $FLAG10
$WAITFLG EQU   $FLAG10
$DPRINT  EQU   $FLAG10
$HOLD    EQU   $FLAG9
$NOTRRCH EQU   $FLAG9
@NM00035 EQU   $FLAG9
$COPY    EQU   $FLAG9
$LSTLNSW EQU   $FLAG9
$MULLNSW EQU   $FLAG9
$REMSW   EQU   $FLAG9
$IGRES   EQU   $FLAG9
$TCECM   EQU   $FLAG8
$VS2     EQU   $FLAG8
$VS1     EQU   $FLAG8
$EDOS    EQU   $FLAG8
@NM00034 EQU   $FLAG8
$TWOWAY  EQU   $FLAG8
@NM00033 EQU   $FLAG8
$RCVMSG  EQU   $FLAG7
$RCVRFLG EQU   $FLAG7
$LDOIS   EQU   $FLAG7
$DCONTCT EQU   $FLAG7
$EXIOWAT EQU   $FLAG7
$2NDDATA EQU   $FLAG7
$1STDATA EQU   $FLAG7
$CIREQ   EQU   $FLAG6
$ABTERM  EQU   $ABNDBIT
$FSTMCIS EQU   $FLAG6
$DISCREQ EQU   $FLAG6
$DISCISS EQU   $FLAG6
$CHANGE  EQU   $FLAG6
$CTERROR EQU   $FLAG6
$RECAL11 EQU   $FLAG6
@NM00032 EQU   $FLAG5
$PROGCK  EQU   $CANCEL
$PRINTAP EQU   $FLAG5
@NM00031 EQU   $FLAG5
$MSG922  EQU   $FLAG5
$CT924   EQU   $FLAG5
$FSTCAT  EQU   $FLAG5
$FSTFE   EQU   $FLAG5
$ACTOPND EQU   $FLAG4
$ACQCUTT EQU   $FLAG4
$CLSSACT EQU   $FLAG4
$BACKINT EQU   $FLAG4
$DMSGSW  EQU   $FLAG4
$TSTDEVP EQU   $FLAG4
$APRQPER EQU   $FLAG4
$OPCOM   EQU   $FLAG4
$NEWAP   EQU   $FLAG3
$ALTPRTR EQU   $FLAG3
$OPTERR  EQU   $FLAG3
$PRTONLY EQU   $FLAG3
$REQSTOR EQU   $FLAG3
$LOGOFFE EQU   $FLAG3
$TSTERR  EQU   $FLAG3
$DEVERR  EQU   $FLAG3
$PARTIAL EQU   $FLAG2
$NRMTERM EQU   $FLAG2
$VALDTST EQU   $FLAG2
$VALDDEV EQU   $FLAG2
$DBLSLSH EQU   $FLAG2
$NDR     EQU   $FLAG2
@NM00030 EQU   $FLAG2
$OLTACT  EQU   $FLAG1
$NORELDV EQU   $FLAG1
@NM00029 EQU   $FLAG1
$OPTCHNG EQU   $FLAG1
$DEVCHNG EQU   $FLAG1
$TESTCNG EQU   $FLAG1
$CNSLFG  EQU   $FLAG1
$TEP3RD  EQU   $FLAG1
@NM00028 EQU   $CDA+120
$CUCNT   EQU   $CDA+118
@NM00027 EQU   $CDA+117
$PRTFORM EQU   $CDA+116
$OPISCNT EQU   $CDA+114
$OPNDCNT EQU   $CDA+112
$GETMSZE EQU   $CDA+110
$GRCNTS  EQU   $CDA+108
$CTLCNT  EQU   $CDA+106
$ACTLVL  EQU   $CDA+105
$PRNTLVL EQU   $CDA+104
$ERRCNTA EQU   $CDA+102
$TLCNT   EQU   $CDA+100
$TIMEALW EQU   $CDA+96
$PTRAREA EQU   $CDA+92
$GETMPTR EQU   $CDA+88
$R13PTRT EQU   $CDA+84
$R13PTR  EQU   $CDA+80
$TEPEND  EQU   $CDA+76
$PLINKDL EQU   $CDA+72
$TEPBEGN EQU   $CDA+68
$FRELPTR EQU   $CDA+64
$HIGHADR EQU   $HIMOREC
$LOMOREC EQU   $CDA+56
$LOWADDR EQU   $OLTPTR
$ENDCOMM EQU   $CDA+48
$COMMON  EQU   $RCA
$SLASHAD EQU   $CDA+32
$PASSON  EQU   $CDA+28
$TOLBRTB EQU   $CDA+24
$SCTPTR8 EQU   $CDA+20
$SCTPTR  EQU   $CDA+16
$TBWDPTR EQU   $CDA+12
$TFWDPTR EQU   $CDA+8
@NM00026 EQU   $CDA
@NM00025 EQU   $SCTTBLE+98
$SCTLWTC EQU   $SCTTBLE+96
$SCTLWTA EQU   $SCTTBLE+92
#EXT     EQU   $SCTTBLE+88
#PASS    EQU   $SCTTBLE+84
#TABLE   EQU   $SCTTBLE+80
#MSGIDAC EQU   $SCTTBLE+78
@NM00024 EQU   $SCTTBLE+71
$RETMASK EQU   $SCTTBLE+70
$R249255 EQU   $ROUTMSK+29
$R241248 EQU   $ROUTMSK+28
$R233240 EQU   $ROUTMSK+27
$R225232 EQU   $ROUTMSK+26
$R217224 EQU   $ROUTMSK+25
$R209216 EQU   $ROUTMSK+24
$R201208 EQU   $ROUTMSK+23
$R193200 EQU   $ROUTMSK+22
$R185192 EQU   $ROUTMSK+21
$R177184 EQU   $ROUTMSK+20
$R169176 EQU   $ROUTMSK+19
$R161168 EQU   $ROUTMSK+18
$R153160 EQU   $ROUTMSK+17
$R145152 EQU   $ROUTMSK+16
$R137144 EQU   $ROUTMSK+15
$R129136 EQU   $ROUTMSK+14
$R121128 EQU   $ROUTMSK+13
$R113120 EQU   $ROUTMSK+12
$R105112 EQU   $ROUTMSK+11
$R097104 EQU   $ROUTMSK+10
$R089096 EQU   $ROUTMSK+9
$R081088 EQU   $ROUTMSK+8
$R073080 EQU   $ROUTMSK+7
$R065072 EQU   $ROUTMSK+6
$R057064 EQU   $ROUTMSK+5
$R049056 EQU   $ROUTMSK+4
$R041048 EQU   $ROUTMSK+3
$R033040 EQU   $ROUTMSK+2
$R025032 EQU   $ROUTMSK+1
$R017024 EQU   $ROUTMSK
$TOTFLG2 EQU   $SCTTBLE+39
@NM00023 EQU   $TOTFLG1
@NM00022 EQU   $TOTFLG1
@NM00021 EQU   $TOTFLG1
$CURELOD EQU   $TOTFLG1
$CTEQTT  EQU   $TOTFLG1
@NM00020 EQU   $TOTFLG1
@NM00019 EQU   $TOTFLG1
$LINESHR EQU   $TOTFLG1
@NM00018 EQU   $OLTFLG2
@NM00017 EQU   $OLTFLG2
@NM00016 EQU   $OLTFLG2
@NM00015 EQU   $OLTFLG2
@NM00014 EQU   $OLTFLG2
@NM00013 EQU   $OLTFLG2
@NM00012 EQU   $OLTFLG2
$TALK    EQU   $OLTFLG2
$DYCOM   EQU   $OLTFLGS
@NM00011 EQU   $OLTFLGS
$TRACE   EQU   $OLTFLGS
$RETCODE EQU   $OLTFLGS
$CONTCB  EQU   $OLTFLGS
$RETAIN  EQU   $OLTFLGS
$CLEANRT EQU   $OLTFLGS
$MANINTV EQU   $OLTFLGS
$OLTSIZE EQU   $SCTTBLE+34
$QSCTMOD EQU   $EXECFLG
$CTRLMOD EQU   $EXECFLG
$CLEANUP EQU   $EXECFLG
$LSTPDEV EQU   $EXECFLG
$ERRCNT  EQU   $EXECFLG
$RTNSLCT EQU   $EXECFLG
$MULTDEV EQU   $EXECFLG
@NM00010 EQU   $EXECFLG
$RMSKCNT EQU   $SCTTBLE+32
$SYNAME  EQU   $CDS8T19+4
$EXTSIG  EQU   $CDS8T19+3
$CDFLGS  EQU   $CDS8T19+1
$CDSCNT  EQU   $CDS8T19
$PDEVDSC EQU   $SCTTBLE+16
$COMMCN  EQU   $CDSFLGS
$CUSTSYM EQU   $CDSFLGS
$TWOCHSW EQU   $CDSFLGS
$SYMNAME EQU   $CDSFLGS
$EXTINTC EQU   $CDSFLGS
$CEVOL   EQU   $CDSFLGS
$SHARED  EQU   $CDSFLGS
$FPM     EQU   $CDSFLGS
$LASTSUB EQU   $PDEVFLG
@NM00009 EQU   $PDEVFLG
@NM00008 EQU   $PDEVFLG
@NM00007 EQU   $PDEVFLG
$LASTDEV EQU   $PDEVFLG
@NM00006 EQU   $PDEVFLG
$EXFILPT EQU   $PDEVFLG
$FPMOLD  EQU   $PDEVFLG
$TSSSYM  EQU   $SCTTBLE+8
$SCTLEVL EQU   $SCTTBLE+7
$DRIVER  EQU   $SCTTBLE+6
$RT0916  EQU   $SCTTBLE+5
$RT0108  EQU   $SCTTBLE+4
$LOOPTST EQU   $ERROPT
$LOOPERR EQU   $ERROPT
$NERRPRT EQU   $ERROPT
$NOCNTRL EQU   $ERROPT
$ALTPRNT EQU   $ERROPT
$CATERR  EQU   $ERROPT
$ASTERIK EQU   $ERROPT
$TESTERR EQU   $ERROPT
$FSTCOMM EQU   $TESTOPT
$INDEFLP EQU   $TESTOPT
$NOPRT   EQU   $TESTOPT
$PARAPRT EQU   $TESTOPT
@NM00005 EQU   $TESTOPT
$ERRLPCT EQU   $SCTTBLE
$TLTEND  EQU   $RCAAREA+945
$CNSLID  EQU   $RCAAREA+936
$TRASCII EQU   $RCAAREA+608
@NM00004 EQU   $RCAAREA+605
$VTAMEND EQU   $RCAFLG
$TPPOSTD EQU   $RCAFLG
$NEWCT   EQU   $RCAFLG
$ABNDALL EQU   $RCAFLG
$CUTESTB EQU   $RCAFLG
$CONSOLE EQU   $RCAFLG
$TPLOGON EQU   $RCAFLG
$UPDATE  EQU   $RCAFLG
$DEVAREA EQU   $RCAAREA+600
$CTDVAR  EQU   $RCAAREA+596
$BUFFS   EQU   $RCAAREA+464
$TLTNIB  EQU   $CONSTNT+140
$TLTPRPL EQU   $CONSTNT+20
@NM00003 EQU   $CONSTNT+4
@NM00002 EQU   $CONSTNT+2
$USECNT  EQU   $CONSTNT
$CURRTWA EQU   $POINTER+140
$CTNAME  EQU   $POINTER+132
$CTARGX  EQU   $POINTER+128
$COMINT  EQU   $POINTER+120
$QUEHNDL EQU   $POINTER+116
@NM00001 EQU   $POINTER+36
$RTNPTR  EQU   $POINTER+32
$TLTECB1 EQU   $POINTER+24
$CLEANP  EQU   $POINTER+20
$ABEND   EQU   $POINTER+16
$LSTAREA EQU   $POINTER+12
$FSTAREA EQU   $POINTER+8
$CVTSAVE EQU   $POINTER+4
$TOLTEP  EQU   $POINTER
$TLTACB  EQU   $RCAAREA
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RT00126 EQU   S25C0100
@RF00126 EQU   S25C0200
@RT00131 EQU   S25C0200
@RT00139 EQU   S25C0300
@RF00139 EQU   S25C0250
@RT00148 EQU   S25C9999
@RF00260 EQU   S25C9999
@RT00313 EQU   S25C3050
@RT00319 EQU   S25C3100
@RT00328 EQU   S25C3999
@ENDDATA EQU   *
         END   ISTSC025,(C'PLS1050',0702,78336)
