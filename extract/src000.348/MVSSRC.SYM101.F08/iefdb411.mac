         TITLE 'IEFDB411 - DYNAMIC ALLOCATION CONVERT ROUTINE          *
                        '
IEFDB411 CSECT ,                                                01S0001
@MAINENT DS    0H                                               01S0001
         USING *,@15                                            01S0001
         B     @PROLOG                                          01S0001
         DC    AL1(16)                                          01S0001
         DC    C'IEFDB411  74.169'                              01S0001
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                  01S0001
         BALR  @09,0                                            01S0001
@PSTART  LA    @12,4095(,@09)                                   01S0001
         USING @PSTART,@09                                      01S0001
         USING @PSTART+4095,@12                                 01S0001
         L     @00,@SIZDATD                                     01S0001
         GSPACE   R,LV=(0)
         LR    @11,@01                                          01S0001
         USING @DATD,@11                                        01S0001
         ST    @13,@SA00001+4                                   01S0001
         LM    @00,@01,20(@13)                                  01S0001
         ST    @11,8(,@13)                                      01S0001
         LR    @13,@11                                          01S0001
         MVC   @PC00001(24),0(@01)                              01S0001
JSCBDISP EQU 188
JSCBAOS1 EQU  72
JSCBAOS2 EQU 192
*CONVRTSW = '';                        /*INIT INTERNAL SWITCHES      */
         MVI   CONVRTSW,X'00'                                   01S0077
*DSABPTR  = ADDRDSAB;                  /* BASE FOR DSAB MAP          */
         L     @10,@PC00001+8                                   01S0078
         L     DSABPTR,ADDRDSAB(,@10)                           01S0078
*SIOTPTR  = DSABSIOT;                  /* BASE FOR SIOT MAP          */
         L     SIOTPTR,DSABSIOT(,DSABPTR)                       01S0079
*JFCBPTR  = SJFCBPTR;                  /* BASE FOR JFCB MAP          */
*                                                               01S0080
         L     @10,SJFCBPTR(,SIOTPTR)                           01S0080
         LR    JFCBPTR,@10                                      01S0080
*IF  STATSTUP->TEXTUPAR(1)^=SHR        /*REQUESTED STATUS NOT SHR    */
*  & JFCSHARE='1'B                     /*EXISTING ALLOC IS SHR AND   */
*  & (SCTDUMMY=OFF                     /*DATASET NOT DUMMY TYPE      */
*     & SIOTSSDS=OFF) THEN             /* OR SUBSYSTEM DATASET       */
         L     @08,@PC00001+4                                   01S0081
         L     @08,KEYTABP(,@08)                                01S0081
         L     @08,STATSTUP(,@08)                               01S0081
         CLI   TEXTUPAR(@08),X'08'                              01S0081
         BE    @RF00081                                         01S0081
         TM    JFCSHARE(@10),B'00001000'                        01S0081
         BNO   @RF00081                                         01S0081
         TM    SCTDUMMY(SIOTPTR),B'10000000'                    01S0081
         BNZ   @RF00081                                         01S0081
         TM    SIOTSSDS(SIOTPTR),B'10000000'                    01S0081
         BNZ   @RF00081                                         01S0081
*  DO;                                 /*THEN DSENQ IS NECESSARY     */
*    DSRRFMAP = DSRRFMAP && DSRRFMAP;  /* INIT FUNCTION MAP          */
         XC    DSRRFMAP(2),DSRRFMAP                             01S0083
*    ADCHENQ = ON;                     /* REQUEST CHANGE OF ENTRY    */
*    ENQEXCL = ON;                     /* CHANGE ENQ FROM SHR TO EXCL*/
         OI    ADCHENQ,B'00100001'                              01S0085
*    IF JSCBTCBP^=0 THEN               /* IF INIT. TCB IS IN JSCB
*                                                            @YM03580*/
         L     @10,@PC00001+20                                  01S0086
         L     @10,JSCBPTR(,@10)                                01S0086
         L     @10,JSCBTCBP(,@10)                               01S0086
         LTR   @10,@10                                          01S0086
         BZ    @RF00086                                         01S0086
*      ENQTCBP=JSCBTCBP;               /* DIRECT ENQ UNDER IT   01S0087
*                                                            @YM03580*/
         ST    @10,ENQTCBP                                      01S0087
*    ELSE                              /* INITIATORS TCB FLD IS ZERO
*                                                            @YM03580*/
*      ENQTCBP=TCBPTR;                 /* DIRECT ENQ TO CURRENT TCB
*                                                            @YM03580*/
         B     @RC00086                                         01S0088
@RF00086 L     @10,@PC00001+20                                  01S0088
         L     @10,TCBPTR(,@10)                                 01S0088
         ST    @10,ENQTCBP                                      01S0088
*    CALL IEFAB4DC (DSRRFMAP,JCTPTR,DSNAMTUP->TEXTUENT,EPACHNP, 01S0089
*                   ENQTCBP,SCTSNUMB,0,ALFNCMAP,RSCODE,0,0);    01S0089
@RC00086 LA    @10,DSRRFMAP                                     01S0089
         ST    @10,@AL00001                                     01S0089
         L     @10,@PC00001+20                                  01S0089
         LA    @08,JCTPTR(,@10)                                 01S0089
         ST    @08,@AL00001+4                                   01S0089
         L     @08,@PC00001+4                                   01S0089
         L     @08,KEYTABP(,@08)                                01S0089
         L     @08,DSNAMTUP(,@08)                               01S0089
         LA    @08,TEXTUENT(,@08)                               01S0089
         ST    @08,@AL00001+8                                   01S0089
         L     @08,@PC00001+16                                  01S0089
         ST    @08,@AL00001+12                                  01S0089
         LA    @08,ENQTCBP                                      01S0089
         ST    @08,@AL00001+16                                  01S0089
         L     @10,SCTPTR(,@10)                                 01S0089
         LA    @10,SCTSNUMB(,@10)                               01S0089
         ST    @10,@AL00001+20                                  01S0089
         LA    @10,@CF00093                                     01S0089
         ST    @10,@AL00001+24                                  01S0089
         L     @10,@PC00001+12                                  01S0089
         ST    @10,@AL00001+28                                  01S0089
         L     @10,@PC00001                                     01S0089
         ST    @10,@AL00001+32                                  01S0089
         LA    @10,@CF00093                                     01S0089
         ST    @10,@AL00001+36                                  01S0089
         LA    @10,@CF00093                                     01S0089
         ST    @10,@AL00001+40                                  01S0089
         L     @15,@CV00071                                     01S0089
         LA    @01,@AL00001                                     01S0089
         BALR  @14,@15                                          01S0089
*                                      /*DATASET RESERVATION @YM03580*/
*  END;                                /*END DSENQ                   */
*ELSE;                                 /*NO DSENQ NECESSARY          */
*                                                               01S0091
@RF00081 DS    0H                                               01S0092
*IF ERRCODE=0 THEN                     /*NO ERROR OCCURRED ABOVE     */
         L     @10,@PC00001                                     01S0092
         LH    @10,ERRCODE(,@10)                                01S0092
         LTR   @10,@10                                          01S0092
         BNZ   @RF00092                                         01S0092
*  DO;                                 /*CONTINUE PROCESSING         */
*    IF STATSTUP->TEXTUPAR(1)=NEW      /*NEW DATASET REQUESTED       */
*      × DSABCONV=ON THEN              /*OR ALLOCATION IS CONVERTIBLE*/
         L     @10,@PC00001+4                                   01S0094
         L     @10,KEYTABP(,@10)                                01S0094
         L     @10,STATSTUP(,@10)                               01S0094
         CLI   TEXTUPAR(@10),X'04'                              01S0094
         BE    @RT00094                                         01S0094
         TM    DSABCONV(DSABPTR),B'00010000'                    01S0094
         BNO   @RF00094                                         01S0094
@RT00094 DS    0H                                               01S0095
*      DSABDCBM = DSABDCBM && DSABDCBM;/*FORCE ZEROING OF DCB FIELDS */
         XC    DSABDCBM(6,DSABPTR),DSABDCBM(DSABPTR)            01S0095
*    IF STATSTUP->TEXTUPAR(1)=NEW      /*NEW DATASET REQUESTED       */
*      × DSABCONV=ON                   /*OR ALLOCATION IS CONVERTIBLE*/
*      × DSABIRM=ON THEN               /*OR DATA MGT REVERSED MERGED
*                                        SOME DCB FIELDS AT OPEN     */
@RF00094 L     @10,@PC00001+4                                   01S0096
         L     @10,KEYTABP(,@10)                                01S0096
         L     @10,STATSTUP(,@10)                               01S0096
         CLI   TEXTUPAR(@10),X'04'                              01S0096
         BE    @RT00096                                         01S0096
         TM    DSABCONV(DSABPTR),B'00010000'                    01S0096
         BO    @RT00096                                         01S0096
         TM    DSABIRM(DSABPTR),B'01000000'                     01S0096
         BNO   @RF00096                                         01S0096
@RT00096 DS    0H                                               01S0097
*      DO;                                                      01S0097
*/********************************************************************/
*/*                                                                  */
*/* SEGMENT NAME - ZERODCB                                           */
*/*                                                                  */
*/* FUNCTION -                                                       */
*/*            ZERO OUT DCB FIELDS IN THE JFCB FOR WHICH             */
*/*            CORRESPONDING BITS IN DSABDCBM ARE ZERO.              */
*/*            SEE THE MODULE PROLOGUE AND CONTROL SEGMENT FOR       */
*/*            THE CASES IN WHICH THIS SEGMENT IS INVOKED.           */
*/*                                                                  */
*/*   INPUT DATA - JFCB WHOSE DCB FIELDS ARE TO BE CLEARED           */
*/*              - DSABDCBM WHOSE BITS DIRECT THE CLEARING           */
*/*                                                                  */
*/*   OUTPUT DATA - UPDATED JFCB                                     */
*/*                                                                  */
*/********************************************************************/
*    IF MSKBFALN=OFF THEN                                       02S0098
         TM    MSKBFALN(DSABPTR),B'10000000'                    02S0098
         BNZ   @RF00098                                         02S0098
*      JFCBFALN = JFCBFALN & CLRBFALN;                          02S0099
         L     @10,SJFCBPTR(,SIOTPTR)                           02S0099
         NI    JFCBFALN(@10),B'11111100'                        02S0099
*    IF MSKBFTEK=OFF THEN                                       02S0100
@RF00098 TM    MSKBFTEK(DSABPTR),B'01000000'                    02S0100
         BNZ   @RF00100                                         02S0100
*      JFCBFTEK(2:5) = ''B;                                     02S0101
         L     @10,SJFCBPTR(,SIOTPTR)                           02S0101
         NI    JFCBFTEK(@10),B'10000111'                        02S0101
*    IF MSKBLKSI=OFF THEN                                       02S0102
@RF00100 TM    MSKBLKSI(DSABPTR),B'00100000'                    02S0102
         BNZ   @RF00102                                         02S0102
*      JFCBLKSI = 0;                                            02S0103
         L     @10,SJFCBPTR(,SIOTPTR)                           02S0103
         SLR   @08,@08                                          02S0103
         STH   @08,JFCBLKSI(,@10)                               02S0103
*    IF MSKBUFIN=OFF THEN                                       02S0104
@RF00102 TM    MSKBUFIN(DSABPTR),B'00010000'                    02S0104
         BNZ   @RF00104                                         02S0104
*      JFCBUFIN = ''B;                                          02S0105
         L     @10,SJFCBPTR(,SIOTPTR)                           02S0105
         NI    JFCBUFIN(@10),B'00001111'                        02S0105
*    IF MSKBUFL=OFF THEN                                        02S0106
@RF00104 TM    MSKBUFL(DSABPTR),B'00001000'                     02S0106
         BNZ   @RF00106                                         02S0106
*      JFCBUFL = 0;                                             02S0107
         L     @10,SJFCBPTR(,SIOTPTR)                           02S0107
         SLR   @08,@08                                          02S0107
         STH   @08,JFCBUFL(,@10)                                02S0107
*    IF MSKBUFMX=OFF THEN                                       02S0108
@RF00106 TM    MSKBUFMX(DSABPTR),B'00000100'                    02S0108
         BNZ   @RF00108                                         02S0108
*      JFCBUFMX = '00'X;                                        02S0109
         L     @10,SJFCBPTR(,SIOTPTR)                           02S0109
         MVI   JFCBUFMX(@10),X'00'                              02S0109
*    IF MSKBUFNO=OFF THEN                                       02S0110
@RF00108 TM    MSKBUFNO(DSABPTR),B'00000010'                    02S0110
         BNZ   @RF00110                                         02S0110
*      JFCBUFNO = '00'X;                                        02S0111
         L     @10,SJFCBPTR(,SIOTPTR)                           02S0111
         MVI   JFCBUFNO(@10),X'00'                              02S0111
*    IF MSKBUFOF=OFF & JFCBBUFF=ON THEN                         02S0112
@RF00110 TM    MSKBUFOF(DSABPTR),B'00000001'                    02S0112
         BNZ   @RF00112                                         02S0112
         L     @10,SJFCBPTR(,SIOTPTR)                           02S0112
         TM    JFCBBUFF(@10),B'00000010'                        02S0112
         BNO   @RF00112                                         02S0112
*      DO;                                                      02S0113
*        JFCBUFOF = '00'X;                                      02S0114
         MVI   JFCBUFOF(@10),X'00'                              02S0114
*        JFCBBUFF = ''B;                                        02S0115
         NI    JFCBBUFF(@10),B'11111101'                        02S0115
*      END;                                                     02S0116
*    IF MSKBFOUT=OFF THEN                                       02S0117
@RF00112 TM    MSKBFOUT(DSABPTR),B'10000000'                    02S0117
         BNZ   @RF00117                                         02S0117
*      JFCBFOUT = ''B;                                          02S0118
         L     @10,SJFCBPTR(,SIOTPTR)                           02S0118
         NI    JFCBFOUT(@10),B'11110000'                        02S0118
*    IF MSKBUFRQ=OFF THEN                                       02S0119
@RF00117 TM    MSKBUFRQ(DSABPTR),B'01000000'                    02S0119
         BNZ   @RF00119                                         02S0119
*      JFCBUFRQ = '00'X;                                        02S0120
         L     @10,SJFCBPTR(,SIOTPTR)                           02S0120
         MVI   JFCBUFRQ(@10),X'00'                              02S0120
*    IF MSKBUFSI=OFF THEN                                       02S0121
@RF00119 TM    MSKBUFSI(DSABPTR),B'00100000'                    02S0121
         BNZ   @RF00121                                         02S0121
*      JFCBUFSI = 0;                                            02S0122
         L     @10,SJFCBPTR(,SIOTPTR)                           02S0122
         SLR   @08,@08                                          02S0122
         STH   @08,JFCBUFSI(,@10)                               02S0122
*    IF MSKCODE=OFF THEN                                        02S0123
@RF00121 TM    MSKCODE(DSABPTR),B'00010000'                     02S0123
         BNZ   @RF00123                                         02S0123
*      JFCCODE = '00'X;                                         02S0124
         L     @10,SJFCBPTR(,SIOTPTR)                           02S0124
         MVI   JFCCODE(@10),X'00'                               02S0124
*    IF MSKCPRI=OFF THEN                                        02S0125
@RF00123 TM    MSKCPRI(DSABPTR),B'00001000'                     02S0125
         BNZ   @RF00125                                         02S0125
*      JFCCPRI = '00'X;                                         02S0126
         L     @10,SJFCBPTR(,SIOTPTR)                           02S0126
         MVI   JFCCPRI(@10),X'00'                               02S0126
*    IF MSKDEN=OFF THEN                                         02S0127
@RF00125 TM    MSKDEN(DSABPTR),B'00000100'                      02S0127
         BNZ   @RF00127                                         02S0127
*      JFCDEN = '00'X;                                          02S0128
         L     @10,SJFCBPTR(,SIOTPTR)                           02S0128
         MVI   JFCDEN(@10),X'00'                                02S0128
*    IF MSKDSORG=OFF THEN                                       02S0129
@RF00127 TM    MSKDSORG(DSABPTR),B'00000010'                    02S0129
         BNZ   @RF00129                                         02S0129
*      JFCDSORG = JFCDSORG && JFCDSORG;                         02S0130
         L     @10,SJFCBPTR(,SIOTPTR)                           02S0130
         XC    JFCDSORG(2,@10),JFCDSORG(@10)                    02S0130
*    IF MSKEROPT=OFF THEN                                       02S0131
@RF00129 TM    MSKEROPT(DSABPTR),B'00000001'                    02S0131
         BNZ   @RF00131                                         02S0131
*      JFCEROPT = '00'X;                                        02S0132
         L     @10,SJFCBPTR(,SIOTPTR)                           02S0132
         MVI   JFCEROPT(@10),X'00'                              02S0132
*    IF MSKGNCP=OFF THEN                                        02S0133
@RF00131 TM    MSKGNCP(DSABPTR),B'10000000'                     02S0133
         BNZ   @RF00133                                         02S0133
*      JFCBGNCP = '00'X;                                        02S0134
         L     @10,SJFCBPTR(,SIOTPTR)                           02S0134
         MVI   JFCBGNCP(@10),X'00'                              02S0134
*    IF MSKINTVL=OFF THEN                                       02S0135
@RF00133 TM    MSKINTVL(DSABPTR),B'01000000'                    02S0135
         BNZ   @RF00135                                         02S0135
*      JFCINTVL = '00'X;                                        02S0136
         L     @10,SJFCBPTR(,SIOTPTR)                           02S0136
         MVI   JFCINTVL(@10),X'00'                              02S0136
*    IF MSKKEYLE=OFF THEN                                       02S0137
@RF00135 TM    MSKKEYLE(DSABPTR),B'00100000'                    02S0137
         BNZ   @RF00137                                         02S0137
*      JFCKEYLE = '00'X;                                        02S0138
         L     @10,SJFCBPTR(,SIOTPTR)                           02S0138
         MVI   JFCKEYLE(@10),X'00'                              02S0138
*    IF MSKLIMCT=OFF THEN                                       02S0139
@RF00137 TM    MSKLIMCT(DSABPTR),B'00010000'                    02S0139
         BNZ   @RF00139                                         02S0139
*      JFCLIMCT = JFCLIMCT && JFCLIMCT;                         02S0140
         L     @10,SJFCBPTR(,SIOTPTR)                           02S0140
         XC    JFCLIMCT(3,@10),JFCLIMCT(@10)                    02S0140
*    IF MSKLRECL=OFF THEN                                       02S0141
@RF00139 TM    MSKLRECL(DSABPTR),B'00001000'                    02S0141
         BNZ   @RF00141                                         02S0141
*      JFCLRECL = 0;                                            02S0142
         L     @10,SJFCBPTR(,SIOTPTR)                           02S0142
         SLR   @08,@08                                          02S0142
         STH   @08,JFCLRECL(,@10)                               02S0142
*    IF MSKMODE=OFF THEN                                        02S0143
@RF00141 TM    MSKMODE(DSABPTR),B'00000100'                     02S0143
         BNZ   @RF00143                                         02S0143
*      JFCMODE(1:4) = ''B;                                      02S0144
         L     @10,SJFCBPTR(,SIOTPTR)                           02S0144
         NI    JFCMODE(@10),B'00001111'                         02S0144
*    IF MSKNCP=OFF THEN                                         02S0145
@RF00143 TM    MSKNCP(DSABPTR),B'00000010'                      02S0145
         BNZ   @RF00145                                         02S0145
*     JFCNCP = '00'X;                                           02S0146
         L     @10,SJFCBPTR(,SIOTPTR)                           02S0146
         MVI   JFCNCP(@10),X'00'                                02S0146
*    IF MSKOPTCD=OFF THEN                                       02S0147
@RF00145 TM    MSKOPTCD(DSABPTR),B'00000001'                    02S0147
         BNZ   @RF00147                                         02S0147
*     JFCOPTCD = '00'X;                                         02S0148
         L     @10,SJFCBPTR(,SIOTPTR)                           02S0148
         MVI   JFCOPTCD(@10),X'00'                              02S0148
*    IF MSKPCIR=OFF THEN                                        02S0149
@RF00147 TM    MSKPCIR(DSABPTR),B'10000000'                     02S0149
         BNZ   @RF00149                                         02S0149
*      JFCPCI = JFCPCI & CLRPCIR;                               02S0150
         L     @10,SJFCBPTR(,SIOTPTR)                           02S0150
         NI    JFCPCI(@10),B'01010101'                          02S0150
*    IF MSKPCIS=OFF THEN                                        02S0151
@RF00149 TM    MSKPCIS(DSABPTR),B'01000000'                     02S0151
         BNZ   @RF00151                                         02S0151
*      JFCPCI = JFCPCI & CLRPCIS;                               02S0152
         L     @10,SJFCBPTR(,SIOTPTR)                           02S0152
         NI    JFCPCI(@10),B'10101010'                          02S0152
*    IF MSKPRTSP=OFF THEN                                       02S0153
@RF00151 TM    MSKPRTSP(DSABPTR),B'00100000'                    02S0153
         BNZ   @RF00153                                         02S0153
*     JFCPRTSP = '00'X;                                         02S0154
         L     @10,SJFCBPTR(,SIOTPTR)                           02S0154
         MVI   JFCPRTSP(@10),X'00'                              02S0154
*    IF MSKRECFM=OFF THEN                                       02S0155
@RF00153 TM    MSKRECFM(DSABPTR),B'00010000'                    02S0155
         BNZ   @RF00155                                         02S0155
*      JFCRECFM = '00'X;                                        02S0156
         L     @10,SJFCBPTR(,SIOTPTR)                           02S0156
         MVI   JFCRECFM(@10),X'00'                              02S0156
*    IF MSKRSRVF=OFF THEN                                       02S0157
@RF00155 TM    MSKRSRVF(DSABPTR),B'00001000'                    02S0157
         BNZ   @RF00157                                         02S0157
*      JFCRESRV(1) = 0;                                         02S0158
         L     @10,SJFCBPTR(,SIOTPTR)                           02S0158
         MVI   JFCRESRV(@10),X'00'                              02S0158
*    IF MSKRSRVS=OFF THEN                                       02S0159
@RF00157 TM    MSKRSRVS(DSABPTR),B'00000100'                    02S0159
         BNZ   @RF00159                                         02S0159
*      JFCRESRV(2) = 0;                                         02S0160
         L     @10,SJFCBPTR(,SIOTPTR)                           02S0160
         MVI   JFCRESRV+1(@10),X'00'                            02S0160
*    IF MSKSOWA=OFF THEN                                        02S0161
@RF00159 TM    MSKSOWA(DSABPTR),B'00000010'                     02S0161
         BNZ   @RF00161                                         02S0161
*      JFCSOWA = 0;                                             02S0162
         L     @10,SJFCBPTR(,SIOTPTR)                           02S0162
         SLR   @08,@08                                          02S0162
         STH   @08,JFCSOWA(,@10)                                02S0162
*    IF MSKSTACK=OFF THEN                                       02S0163
@RF00161 TM    MSKSTACK(DSABPTR),B'00000001'                    02S0163
         BNZ   @RF00163                                         02S0163
*      JFCSTACK(5:8) = ''B;                                     02S0164
         L     @10,SJFCBPTR(,SIOTPTR)                           02S0164
         NI    JFCSTACK(@10),B'11110000'                        02S0164
*    IF MSKTHRSH=OFF THEN                                       02S0165
@RF00163 TM    MSKTHRSH(DSABPTR),B'10000000'                    02S0165
         BNZ   @RF00165                                         02S0165
*      JFCTHRSH = '00'X;                                        02S0166
         L     @10,SJFCBPTR(,SIOTPTR)                           02S0166
         MVI   JFCTHRSH(@10),X'00'                              02S0166
*    IF MSKTRTCH=OFF THEN                                       02S0167
@RF00165 TM    MSKTRTCH(DSABPTR),B'01000000'                    02S0167
         BNZ   @RF00167                                         02S0167
*      JFCTRTCH = '00'X;                                        02S0168
         L     @10,SJFCBPTR(,SIOTPTR)                           02S0168
         MVI   JFCTRTCH(@10),X'00'                              02S0168
*    IF MSKTRACE=OFF THEN                                       02S0169
@RF00167 TM    MSKTRACE(DSABPTR),B'00100000'                    02S0169
         BNZ   @RF00169                                         02S0169
*      JFCTRACE = '0'B;                                         02S0170
         L     @10,SJFCBPTR(,SIOTPTR)                           02S0170
         NI    JFCTRACE(@10),B'11111011'                        02S0170
*    IF MSKFUNC=OFF THEN                                        02S0171
@RF00169 TM    MSKFUNC(DSABPTR),B'00010000'                     02S0171
         BNZ   @RF00171                                         02S0171
*      JFCFUNC = JFCFUNC & CLRFUNC;                             02S0172
         L     @10,SJFCBPTR(,SIOTPTR)                           02S0172
         NI    JFCFUNC(@10),B'00000001'                         02S0172
*                                      /*ZERO JFCB-DCB FIELDS   01S0173
*                                        UNDER CONTROL OF DSABDCBM   */
*        DSABIRM = OFF;                /* RESET REV MERGE SW         */
@RF00171 NI    DSABIRM(DSABPTR),B'10111111'                     01S0173
*        UPDJFCB = ON;                 /* REMEMBER UPDATED JFCB      */
         OI    UPDJFCB,B'10000000'                              01S0174
*      END;                                                     01S0175
*/********************************************************************/
*/*                                                                  */
*/* SEGMENT NAME - CONJFCCD                                          */
*/*                                                                  */
*/* DESCRIPTIVE NAME - UPDATE JFCB                                   */
*/*                                                                  */
*/* FUNCTION -                                                       */
*/*            UPDATE FIELDS IN THE JFCB AS PER TEXT-UNIT REQUEST    */
*/*                                                                  */
*/* OPERATION -                                                      */
*/*             THE KEY TABLE IS EXAMINED FOR                        */
*/*             ENTRIES WHICH CAUSE THE EXISTING                     */
*/*             JFCB TO BE UPDATED. THE JFCB IS THEN UPDATED TO      */
*/*             MATCH THE ALLOCATION SPECIFICATIONS DESIRED.         */
*/*             A FIELD WILL ONLY BE UPDATED IF THE NEW VALUE        */
*/*             DIFFERS FROM THE EXISTING ONE - WITH THE EXCEPTIONS  */
*/*             OF DCB PARMS AND SPACE VALUES.                       */
*/*             ALSO, FOR DUMMY/TERMINAL DATASETS, MOST PROCESSING   */
*/*             CAN BE ELIMINATED,                                   */
*/*             PREVENTING A POSSIBLY OTHERWISE NEEDLESS WRITE OF    */
*/*             THE JFCB BACK TO SWA.                                */
*/*             THUS THE JFCB WILL NOT BE WRITTEN BACK TO SWA UNLESS */
*/*             SOME FIELD WAS FILLED IN BY THIS SEGMENT, OR         */
*/*             DCB FIELDS WERE SET BY THE ZERODCB SEGMENT.          */
*/*                                                                  */
*/*   INPUT DATA - EXISTING JFCB FOR ALLOCATION BEING CONVERTED      */
*/*              - KEYTABLE CONTAINING POINTERS TO TEXT UNITS        */
*/*              - IEFAB445 CSECT CONTAINING DEFAULT SPACE VALUES    */
*/*              - DSABVAM BIT - ON IF A VAM DATASET                 */
*/*              - SIOTGDSN BIT - ON IF DATASET NAME IS SYSTEM GEN'D */
*/*              - SCTDUMMY BIT - ON IF DATASET IS DUMMY-TYPE        */
*/*                                                                  */
*/*    OUTPUT DATA -                                                 */
*/*                  UPDATED JFCB FIELDS:                            */
*/*                     DCB FIELDS                                   */
*/*                     SPACE ATTRIBUTES                             */
*/*                     OPEN WITH INOUT/OUTIN ONLY ALLOWED FOR       */
*/*                        INPUT/OUTPUT ONLY  ATTRIBUTE              */
*/*                     DATASET STATUS (NEW, OLD, MOD)               */
*/*                     MEMBER NAME FOR PARTITIONED DATASET          */
*/*                  UPDJFCB - SET ON IF JFCB UPDATED                */
*/*                  JFCNDSCB - SET ON TO PROHIBIT FORWARD MERGE OF  */
*/*                             OLD DSCB FOR A 'NEW' REQUEST         */
*/*                  JFCTEMP - TURNED OFF IF ON FOR THE DATASET      */
*/*                            BEING CONVERTED, AND THE CONVERSION   */
*/*                            RESULTS IN A NON-TEMPORARY DATASET    */
*/********************************************************************/
*IF DCBSPCSW = ON THEN                 /* DCB TEXTUNITS SPECIFIED    */
@RF00096 L     @10,@PC00001+12                                  02S0176
         TM    DCBSPCSW(@10),B'00000100'                        02S0176
         BNO   @RF00176                                         02S0176
*  DO;                                                          02S0177
*    CALL IEFDB417 (ADDR(INFMJFCB),ADDR(KEYTABLE)); /* UPDATE JFCB'S
*                                               DCB FIELDS           */
         LA    @10,SJFCBPTR(,SIOTPTR)                           02S0178
         ST    @10,@AL00001                                     02S0178
         L     @10,@PC00001+4                                   02S0178
         ST    @10,@AL00001+4                                   02S0178
         L     @15,@CV00072                                     02S0178
         LA    @01,@AL00001                                     02S0178
         BALR  @14,@15                                          02S0178
*    UPDJFCB='1'B;                     /* REMEMBER JFCB WAS UPDATED  */
         OI    UPDJFCB,B'10000000'                              02S0179
*  END;                                                         02S0180
*                                                               02S0180
*RFY TEXTUNIT BASED(INOUTTUP);                                  02S0181
@RF00176 DS    0H                                               02S0182
*IF INOUTTUP^=0                        /* IN/OUT ONLY STATUS REQUESTED*
*  & (JFCBFLG2×TEXTUPAR(1))^=JFCBFLG2 THEN /* DIFFERS FROM CRNT VALUE *
         L     @10,@PC00001+4                                   02S0182
         L     @10,KEYTABP(,@10)                                02S0182
         L     @10,INOUTTUP(,@10)                               02S0182
         LTR   @10,@10                                          02S0182
         BZ    @RF00182                                         02S0182
         L     @08,SJFCBPTR(,SIOTPTR)                           02S0182
         MVC   @TS00001(1),JFCBFLG2(@08)                        02S0182
         OC    @TS00001(1),TEXTUPAR(@10)                        02S0182
         CLC   @TS00001(1),JFCBFLG2(@08)                        02S0182
         BE    @RF00182                                         02S0182
*  DO;                                                          02S0183
*    JFCBFLG2 = (JFCBFLG2 & '00111111'B) × TEXTUPAR(1);         02S0184
         MVC   @TS00001(1),JFCBFLG2(@08)                        02S0184
         NI    @TS00001,B'00111111'                             02S0184
         OC    @TS00001(1),TEXTUPAR(@10)                        02S0184
         MVC   JFCBFLG2(1,@08),@TS00001                         02S0184
*    UPDJFCB = ON;                     /* REMEMBER UPDATED JFCB      */
         OI    UPDJFCB,B'10000000'                              02S0185
*  END;                                                         02S0186
*                                                               02S0186
*WORK(1:8) = '';                       /* INIT MEM NAME WORK AREA    */
@RF00182 MVI   WORK,C' '                                        02S0187
         MVC   WORK+1(7),WORK                                   02S0187
*RFY TEXTUNIT BASED(MEMBRTUP);                                  02S0188
*IF MEMBRTUP^=0 THEN                   /* MEMBER NAME REQUESTED      */
         L     @10,@PC00001+4                                   02S0189
         L     @10,KEYTABP(,@10)                                02S0189
         L     @10,MEMBRTUP(,@10)                               02S0189
         LTR   @10,@10                                          02S0189
         BZ    @RF00189                                         02S0189
*  WORK(1:TEXTULNG) = TEXTUPAR(1:TEXTULNG);                     02S0190
         ICM   @08,12,TEXTULNG(@10)                             02S0190
         SRA   @08,16                                           02S0190
         BCTR  @08,0                                            02S0190
         EX    @08,@SM01375                                     02S0190
*IF WORK^=JFCBELNM THEN                /* NAME TO BE CHANGED         */
@RF00189 L     @10,SJFCBPTR(,SIOTPTR)                           02S0191
         CLC   WORK(8),JFCBELNM(@10)                            02S0191
         BE    @RF00191                                         02S0191
*  DO;                                                          02S0192
*    UPDJFCB = ON;                     /* REMEMBER CHANGED JFCB      */
         OI    UPDJFCB,B'10000000'                              02S0193
*    JFCBELNM = WORK;                  /* NEW MEMBER NAME            */
         MVC   JFCBELNM(8,@10),WORK                             02S0194
*    IF JFCBELNM(1) = ' ' THEN         /* BLANK MEMBER NAME          */
         CLI   JFCBELNM(@10),C' '                               02S0195
         BNE   @RF00195                                         02S0195
*      JFCPDS='0'B;                    /* TURN OFF MEMBER NAME BIT   */
         NI    JFCPDS(@10),B'11111110'                          02S0196
*    ELSE                              /* NON-BLANK MEMBER NAME      */
*      JFCPDS='1'B;                    /* TURN ON MEMBER NAME BIT    */
         B     @RC00195                                         02S0197
@RF00195 L     @10,SJFCBPTR(,SIOTPTR)                           02S0197
         OI    JFCPDS(@10),B'00000001'                          02S0197
*  END;                                                         02S0198
*ELSE;                                 /* NO CHANGE IN MEMBER NAME   */
*                                                               02S0199
@RF00191 DS    0H                                               02S0200
*IF SCTDUMMY='0'B THEN                 /* NON-DUMMY-TYPE DATASET     */
@RC00191 TM    SCTDUMMY(SIOTPTR),B'10000000'                    02S0200
         BNZ   @RF00200                                         02S0200
*  DO;                                                          02S0201
*    RFY TEXTUNIT BASED(STATSTUP);     /* BASE FOR TEXT UNIT         */
*    IF TEXTUPAR(1)^=NEW & JFCNDSCB='1'B THEN  /* FORWARD DSCB-JFCB
*                                                 MERGE WRONGLY 02S0203
*                                                 PROHIBITED         */
         L     @10,@PC00001+4                                   02S0203
         L     @10,KEYTABP(,@10)                                02S0203
         L     @10,STATSTUP(,@10)                               02S0203
         CLI   TEXTUPAR(@10),X'04'                              02S0203
         BE    @RF00203                                         02S0203
         L     @10,SJFCBPTR(,SIOTPTR)                           02S0203
         TM    JFCNDSCB(@10),B'00000100'                        02S0203
         BNO   @RF00203                                         02S0203
*      DO;                                                      02S0204
*        UPDJFCB = '1'B;               /* REMEMBER UPDATED JFCB      */
         OI    UPDJFCB,B'10000000'                              02S0205
*        JFCNDSCB = '0'B;              /* ALLOW FORWARD MERGE        */
         NI    JFCNDSCB(@10),B'11111011'                        02S0206
*      END;                                                     02S0207
*                                                               02S0207
*    IF TEXTUPAR(1)=OLD                /* CHANGE STATUS TO OLD       */
*      & (JFCDISP^='01'B × JFCSHARE=ON) THEN  /* CURRENTLY NOT OLD   */
@RF00203 L     @10,@PC00001+4                                   02S0208
         L     @10,KEYTABP(,@10)                                02S0208
         L     @10,STATSTUP(,@10)                               02S0208
         CLI   TEXTUPAR(@10),X'01'                              02S0208
         BNE   @RF00208                                         02S0208
         L     @10,SJFCBPTR(,SIOTPTR)                           02S0208
         TM    JFCDISP(@10),B'01000000'                         02S0208
         BNO   @RT00208                                         02S0208
         TM    JFCDISP(@10),B'10000000'                         02S0208
         BNZ   @RT00208                                         02S0208
         TM    JFCSHARE(@10),B'00001000'                        02S0208
         BNO   @RF00208                                         02S0208
@RT00208 DS    0H                                               02S0209
*      DO;                                                      02S0209
*        UPDJFCB = '1'B;               /* REMEMBER CHANGED JFCB      */
         OI    UPDJFCB,B'10000000'                              02S0210
*        JFCDISP = '01'B;              /* CHANGE STATUS TO OLD       */
         L     @10,SJFCBPTR(,SIOTPTR)                           02S0211
         NI    JFCDISP(@10),B'01111111'                         02S0211
         OI    JFCDISP(@10),B'01000000'                         02S0211
*        JFCSHARE = '0'B;              /* REMOVE POSS. SHARE SW      */
         NI    JFCSHARE(@10),B'11110111'                        02S0212
*        JFCMODNW = '0'B;              /* REMOVE POSS. MOD-AS-NEW SW */
         NI    JFCMODNW(@10),B'11101111'                        02S0213
*      END;                                                     02S0214
*    ELSE                                                       02S0215
*      IF TEXTUPAR(1)=MOD & JFCDISP^='10'B THEN   /* CHANGE STATUS TO
*                                                    MOD             */
         B     @RC00208                                         02S0215
@RF00208 L     @10,@PC00001+4                                   02S0215
         L     @10,KEYTABP(,@10)                                02S0215
         L     @10,STATSTUP(,@10)                               02S0215
         CLI   TEXTUPAR(@10),X'02'                              02S0215
         BNE   @RF00215                                         02S0215
         L     @10,SJFCBPTR(,SIOTPTR)                           02S0215
         TM    JFCDISP(@10),B'10000000'                         02S0215
         BNO   @RT00215                                         02S0215
         TM    JFCDISP(@10),B'01000000'                         02S0215
         BZ    @RF00215                                         02S0215
@RT00215 DS    0H                                               02S0216
*        DO;                                                    02S0216
*          UPDJFCB = '1'B;             /* REMEMBER CHANGED JFCB      */
         OI    UPDJFCB,B'10000000'                              02S0217
*          JFCDISP = '10'B;            /* CHANGE STATUS TO MOD       */
         L     @10,SJFCBPTR(,SIOTPTR)                           02S0218
         NI    JFCDISP(@10),B'10111111'                         02S0218
         OI    JFCDISP(@10),B'10000000'                         02S0218
*          JFCSHARE = '0'B;            /* REMOVE POSS. SHARE SW      */
         NI    JFCSHARE(@10),B'11110111'                        02S0219
*        END;                                                   02S0220
*      ELSE                                                     02S0221
*        IF TEXTUPAR(1)=NEW            /* NEW STATUS REQUESTED       */
*          & (JFCDISP^='11'B           /* CURRENT STATUS NOT NEW     */
*             × JFCMODNW='1'B          /* IS MOD-TREATED-AS-NEW      */
*             × JFCNDSCB='0'B) THEN    /* STOP DSCB MERGE NOT SET    */
         B     @RC00215                                         02S0221
@RF00215 L     @10,@PC00001+4                                   02S0221
         L     @10,KEYTABP(,@10)                                02S0221
         L     @10,STATSTUP(,@10)                               02S0221
         CLI   TEXTUPAR(@10),X'04'                              02S0221
         BNE   @RF00221                                         02S0221
         L     @10,SJFCBPTR(,SIOTPTR)                           02S0221
         TM    JFCDISP(@10),B'11000000'                         02S0221
         BNO   @RT00221                                         02S0221
         TM    JFCMODNW(@10),B'00010000'                        02S0221
         BO    @RT00221                                         02S0221
         TM    JFCNDSCB(@10),B'00000100'                        02S0221
         BNZ   @RF00221                                         02S0221
@RT00221 DS    0H                                               02S0222
*          DO;                                                  02S0222
*            UPDJFCB = '1'B;           /* REMEMBER CHANGED JFCB      */
         OI    UPDJFCB,B'10000000'                              02S0223
*            JFCDISP = '11'B;          /* CHANGE STATUS TO NEW       */
         L     @10,SJFCBPTR(,SIOTPTR)                           02S0224
         OI    JFCDISP(@10),B'11000000'                         02S0224
*            JFCSHARE = '0'B;          /* REMOVE POSS. SHARE SW      */
         NI    JFCSHARE(@10),B'11110111'                        02S0225
*            JFCMODNW = '0'B;          /* REMOVE POSS. MOD-AS-NEW SW */
         NI    JFCMODNW(@10),B'11101111'                        02S0226
*            JFCNDSCB = '1'B;          /* INHIBIT FORWARD MERGE OF
*                                         PREVIOUS USAGE'S DSCB      */
         OI    JFCNDSCB(@10),B'00000100'                        02S0227
*          END;                                                 02S0228
*        ELSE                                                   02S0229
*          IF TEXTUPAR(1)=SHR & JFCSHARE^='1'B THEN /* CHG STATUS TO
*                                                      SHR           */
         B     @RC00221                                         02S0229
@RF00221 L     @10,@PC00001+4                                   02S0229
         L     @10,KEYTABP(,@10)                                02S0229
         L     @10,STATSTUP(,@10)                               02S0229
         CLI   TEXTUPAR(@10),X'08'                              02S0229
         BNE   @RF00229                                         02S0229
         L     @10,SJFCBPTR(,SIOTPTR)                           02S0229
         TM    JFCSHARE(@10),B'00001000'                        02S0229
         BO    @RF00229                                         02S0229
*            DO;                       /* NEVER CHANGE EXCL. CNTRL TO
*                                         SHARED CONTROL             */
*              IF JFCDISP^='01'B THEN  /* NOT CURRENTLY OLD          */
         TM    JFCDISP(@10),B'01000000'                         02S0231
         BNO   @RT00231                                         02S0231
         TM    JFCDISP(@10),B'10000000'                         02S0231
         BZ    @RF00231                                         02S0231
@RT00231 DS    0H                                               02S0232
*                DO;                                            02S0232
*                  JFCDISP = '01'B;    /* MAKE IT OLD                */
         L     @10,SJFCBPTR(,SIOTPTR)                           02S0233
         NI    JFCDISP(@10),B'01111111'                         02S0233
         OI    JFCDISP(@10),B'01000000'                         02S0233
*                  JFCMODNW = '0'B;    /* REMOVE POSS. MOD-AS-NEW SW */
         NI    JFCMODNW(@10),B'11101111'                        02S0234
*                  UPDJFCB = '1'B;     /* REMEMBER CHANGED JFCB      */
         OI    UPDJFCB,B'10000000'                              02S0235
*                END;                                           02S0236
*            END;                                               02S0237
*                                                               02S0237
@RF00231 DS    0H                                               02S0238
*    IF NDISPTUP^=0 THEN               /* NORMAL DISP REQUESTED      */
@RF00229 DS    0H                                               02S0238
@RC00221 DS    0H                                               02S0238
@RC00215 DS    0H                                               02S0238
@RC00208 L     @10,@PC00001+4                                   02S0238
         L     @10,KEYTABP(,@10)                                02S0238
         L     @10,NDISPTUP(,@10)                               02S0238
         LTR   @10,@10                                          02S0238
         BZ    @RF00238                                         02S0238
*      IF JFCTEMP='1'B                 /* TEMPORARY DATASET          */
*        & NDISPTUP->TEXTUPAR(1)^=DLT  /* REQ NOT FOR DELETE         */
*        & SIOTGDSN^='1'B THEN         /* NOT SYSTEM-GEN'D NAME      */
         L     @08,SJFCBPTR(,SIOTPTR)                           02S0239
         TM    JFCTEMP(@08),B'00000001'                         02S0239
         BNO   @RF00239                                         02S0239
         CLI   TEXTUPAR(@10),X'04'                              02S0239
         BE    @RF00239                                         02S0239
         TM    SIOTGDSN(SIOTPTR),B'00010000'                    02S0239
         BO    @RF00239                                         02S0239
*        DO;                           /* TURN OFF TEMP BIT          */
*          JFCTEMP = ''B;              /* RESULT IS A NON-TEMP       */
         NI    JFCTEMP(@08),B'11111110'                         02S0241
*          UPDJFCB = '1'B;             /* REMEMBER CHANGED JFCB      */
         OI    UPDJFCB,B'10000000'                              02S0242
*        END;                                                   02S0243
*                                                               02S0243
*    IF PRIMETUP^=0 × SECNDTUP^=0 × RLSETUP^=0                  02S0244
*                   × SPFRMTUP^=0 × ROUNDTUP^=0 THEN            02S0244
@RF00239 DS    0H                                               02S0244
@RF00238 SLR   @10,@10                                          02S0244
         L     @08,@PC00001+4                                   02S0244
         L     @08,KEYTABP(,@08)                                02S0244
         C     @10,PRIMETUP(,@08)                               02S0244
         BNE   @RT00244                                         02S0244
         C     @10,SECNDTUP(,@08)                               02S0244
         BNE   @RT00244                                         02S0244
         C     @10,RLSETUP(,@08)                                02S0244
         BNE   @RT00244                                         02S0244
         C     @10,SPFRMTUP(,@08)                               02S0244
         BNE   @RT00244                                         02S0244
         C     @10,ROUNDTUP(,@08)                               02S0244
         BE    @RF00244                                         02S0244
@RT00244 DS    0H                                               02S0245
*                                      /* ANY SPACE PARAMETERS SPEC'D*/
*                                      /* NOTE - OTHER SPACE KEYS
*                                         REQUIRE SOME OF THE   02S0245
*                                         TESTED KEYS                */
*      DO;                                                      02S0245
*        UPDJFCB = ON;                 /* REMEMBER JFCB WAS CHANGED  */
         OI    UPDJFCB,B'10000000'                              02S0246
*        IF TRKTUP^=0 THEN             /* ALLOCATION IN TRACKS       */
         L     @10,@PC00001+4                                   02S0247
         L     @10,KEYTABP(,@10)                                02S0247
         L     @10,TRKTUP(,@10)                                 02S0247
         LTR   @10,@10                                          02S0247
         BZ    @RF00247                                         02S0247
*          JFCBSPAC = '10'B;                                    02S0248
         L     @10,SJFCBPTR(,SIOTPTR)                           02S0248
         NI    JFCBSPAC(@10),B'10111111'                        02S0248
         OI    JFCBSPAC(@10),B'10000000'                        02S0248
*        ELSE                                                   02S0249
*          IF CYLTUP^=0 THEN           /* ALLOCATION IN CYLINDERS    */
         B     @RC00247                                         02S0249
@RF00247 L     @10,@PC00001+4                                   02S0249
         L     @10,KEYTABP(,@10)                                02S0249
         L     @10,CYLTUP(,@10)                                 02S0249
         LTR   @10,@10                                          02S0249
         BZ    @RF00249                                         02S0249
*            JFCBSPAC = '11'B;                                  02S0250
         L     @10,SJFCBPTR(,SIOTPTR)                           02S0250
         OI    JFCBSPAC(@10),B'11000000'                        02S0250
*          ELSE                                                 02S0251
*            IF BLKLNTUP^=0 THEN       /* ALLOCATION IN AVG BLK LEN  */
         B     @RC00249                                         02S0251
@RF00249 L     @10,@PC00001+4                                   02S0251
         L     @10,KEYTABP(,@10)                                02S0251
         L     @10,BLKLNTUP(,@10)                               02S0251
         LTR   @10,@10                                          02S0251
         BZ    @RF00251                                         02S0251
*              JFCBSPAC = '01'B;                                02S0252
         L     @10,SJFCBPTR(,SIOTPTR)                           02S0252
         NI    JFCBSPAC(@10),B'01111111'                        02S0252
         OI    JFCBSPAC(@10),B'01000000'                        02S0252
*            ELSE                      /* TYPE OF ALLOC NOT GIVEN    */
*              JFCBSPAC = ''B;         /* ERASE ANY PREVIOUS VALUE   */
         B     @RC00251                                         02S0253
@RF00251 L     @10,SJFCBPTR(,SIOTPTR)                           02S0253
         NI    JFCBSPAC(@10),B'00111111'                        02S0253
*        JFCONTIG = '0'B;              /* ERASE ANY PREVIOUS TYPE    */
@RC00251 DS    0H                                               02S0254
@RC00249 DS    0H                                               02S0254
@RC00247 DS    0H                                               02S0255
*        JFCMIXG  = '0'B;              /* ERASE ANY PREVIOUS TYPE    */
*        JFCALX  = '0'B;               /* ERASE ANY PREVIOUS TYPE    */
         L     @10,SJFCBPTR(,SIOTPTR)                           02S0256
         NI    JFCONTIG(@10),B'11110001'                        02S0256
*        RFY TEXTUNIT BASED(SPFRMTUP); /* BASE FOR TEXTUNIT MAP      */
*        IF SPFRMTUP^=0 THEN           /* SPACE FORMAT               */
         L     @08,@PC00001+4                                   02S0258
         L     @08,KEYTABP(,@08)                                02S0258
         L     @08,SPFRMTUP(,@08)                               02S0258
         LTR   @08,@08                                          02S0258
         BZ    @RF00258                                         02S0258
*          JFCBCTRI = JFCBCTRI × TEXTUPAR(1); /* SET NEW REQUEST     */
         OC    JFCBCTRI(1,@10),TEXTUPAR(@08)                    02S0259
*        IF ROUNDTUP^=0 THEN           /* ROUND TO CYL SPECIFIED     */
@RF00258 L     @10,@PC00001+4                                   02S0260
         L     @10,KEYTABP(,@10)                                02S0260
         L     @10,ROUNDTUP(,@10)                               02S0260
         LTR   @10,@10                                          02S0260
         BZ    @RF00260                                         02S0260
*          JFCROUND = '1'B;                                     02S0261
         L     @10,SJFCBPTR(,SIOTPTR)                           02S0261
         OI    JFCROUND(@10),B'00000001'                        02S0261
*        ELSE                                                   02S0262
*          JFCROUND = '0'B;                                     02S0262
         B     @RC00260                                         02S0262
@RF00260 L     @10,SJFCBPTR(,SIOTPTR)                           02S0262
         NI    JFCROUND(@10),B'11111110'                        02S0262
*        IF PRIMETUP^=0 THEN           /* PRIME QUANTITY SPECIFIED   */
@RC00260 L     @10,@PC00001+4                                   02S0263
         L     @10,KEYTABP(,@10)                                02S0263
         L     @10,PRIMETUP(,@10)                               02S0263
         LTR   @10,@10                                          02S0263
         BZ    @RF00263                                         02S0263
*          JFCBPQTY = PRIMETUP->TEXTUPAR(1:3);                  02S0264
         L     @08,SJFCBPTR(,SIOTPTR)                           02S0264
         MVC   JFCBPQTY(3,@08),TEXTUPAR(@10)                    02S0264
*        ELSE                                                   02S0265
*          JFCBPQTY = 0;               /* ERASE POSS. PREVIOUS VALUE */
         B     @RC00263                                         02S0265
@RF00263 L     @10,SJFCBPTR(,SIOTPTR)                           02S0265
         SLR   @08,@08                                          02S0265
         STCM  @08,7,JFCBPQTY(@10)                              02S0265
*        IF SECNDTUP^=0 THEN           /* SECONDARY QUANTITY    02S0266
*                                         SPECIFIED                  */
@RC00263 L     @10,@PC00001+4                                   02S0266
         L     @10,KEYTABP(,@10)                                02S0266
         L     @10,SECNDTUP(,@10)                               02S0266
         LTR   @10,@10                                          02S0266
         BZ    @RF00266                                         02S0266
*          JFCBSQTY = SECNDTUP->TEXTUPAR(1:3);                  02S0267
         L     @08,SJFCBPTR(,SIOTPTR)                           02S0267
         MVC   JFCBSQTY(3,@08),TEXTUPAR(@10)                    02S0267
*        ELSE                                                   02S0268
*          JFCBSQTY = 0;               /* ERASE POSS. PREVIOUS VALUE */
         B     @RC00266                                         02S0268
@RF00266 L     @10,SJFCBPTR(,SIOTPTR)                           02S0268
         SLR   @08,@08                                          02S0268
         STCM  @08,7,JFCBSQTY(@10)                              02S0268
*        IF BLKLNTUP^=0 THEN           /* AVG BLKLEN REQ'D           */
@RC00266 L     @10,@PC00001+4                                   02S0269
         L     @10,KEYTABP(,@10)                                02S0269
         L     @10,BLKLNTUP(,@10)                               02S0269
         LTR   @10,@10                                          02S0269
         BZ    @RF00269                                         02S0269
*          JFCBDRLH = BLKLNTUP->TEXTUPAR(1:3);                  02S0270
         L     @08,SJFCBPTR(,SIOTPTR)                           02S0270
         MVC   JFCBDRLH(3,@08),TEXTUPAR(@10)                    02S0270
*        IF DIRTUP^=0 THEN             /* DIRECTORY QUANTITY REQ'D   */
@RF00269 L     @10,@PC00001+4                                   02S0271
         L     @10,KEYTABP(,@10)                                02S0271
         L     @10,DIRTUP(,@10)                                 02S0271
         LTR   @10,@10                                          02S0271
         BZ    @RF00271                                         02S0271
*          JFCBDQTY = DIRTUP->TEXTUPAR(1:3);                    02S0272
         L     @08,SJFCBPTR(,SIOTPTR)                           02S0272
         MVC   JFCBDQTY(3,@08),TEXTUPAR(@10)                    02S0272
*        ELSE                                                   02S0273
*          JFCBDQTY = 0;             /* ERASE POSS. PREVIOUS VALUE   */
         B     @RC00271                                         02S0273
@RF00271 L     @10,SJFCBPTR(,SIOTPTR)                           02S0273
         SLR   @08,@08                                          02S0273
         STCM  @08,7,JFCBDQTY(@10)                              02S0273
*        IF RLSETUP^=0 THEN          /* RELEASE UNUSED SPACE         */
@RC00271 L     @10,@PC00001+4                                   02S0274
         L     @10,KEYTABP(,@10)                                02S0274
         L     @10,RLSETUP(,@10)                                02S0274
         LTR   @10,@10                                          02S0274
         BZ    @RF00274                                         02S0274
*          JFCRLSE = '11'B;                                     02S0275
         L     @10,SJFCBPTR(,SIOTPTR)                           02S0275
         OI    JFCRLSE(@10),B'11000000'                         02S0275
*        ELSE                                                   02S0276
*          JFCRLSE = '00'B;          /* ERASE POSS. PREVIOUS VALUE   */
         B     @RC00274                                         02S0276
@RF00274 L     @10,SJFCBPTR(,SIOTPTR)                           02S0276
         NI    JFCRLSE(@10),B'00111111'                         02S0276
*      END;                                                     02S0277
*                                                               02S0277
*    ELSE                            /* SPACE PARMS NOT SPECIFIED    */
*      IF JFCDISP='11'B & DSABVAM='1'B THEN  /* NEW VAM & NO SPACE
*                                               GIVEN                */
         B     @RC00244                                         02S0278
@RF00244 L     @10,SJFCBPTR(,SIOTPTR)                           02S0278
         TM    JFCDISP(@10),B'11000000'                         02S0278
         BNO   @RF00278                                         02S0278
         TM    DSABVAM(DSABPTR),B'00100000'                     02S0278
         BNO   @RF00278                                         02S0278
*      DO;                             /* USE DEFAULTS IN CSECT      */
*        JFCBPQTY = DEFPQTY;           /* PRIMARY QUANTITY           */
         L     @08,@CA00120                                     02S0280
         MVC   JFCBPQTY(3,@10),DEFPQTY-IEFAB445(@08)            02S0280
*        JFCBSQTY = DEFSQTY;           /* SECONDARY QUANTIT          */
         MVC   JFCBSQTY(3,@10),DEFSQTY-IEFAB445(@08)            02S0281
*        JFCBDRLH = DEFDRLH;           /* AVG BLOCK LENGTH           */
         MVC   JFCBDRLH(3,@10),DEFDRLH-IEFAB445(@08)            02S0282
*        JFCBDQTY = DEFDQTY;           /* DIRECTORY QUANTITY         */
         MVC   JFCBDQTY(3,@10),DEFDQTY-IEFAB445(@08)            02S0283
*        IF DEFTRK='1'B THEN           /* QUANTITY IS IN TRACKS      */
         TM    DEFTRK-IEFAB445(@08),B'10000000'                 02S0284
         BNO   @RF00284                                         02S0284
*          JFCBSPAC = '10'B;                                    02S0285
         NI    JFCBSPAC(@10),B'10111111'                        02S0285
         OI    JFCBSPAC(@10),B'10000000'                        02S0285
*        ELSE                                                   02S0286
*          IF DEFCYL='1'B THEN         /* QUANTITY IS IN CYLINDERS   */
         B     @RC00284                                         02S0286
@RF00284 L     @10,@CA00120                                     02S0286
         TM    DEFCYL-IEFAB445(@10),B'01000000'                 02S0286
         BNO   @RF00286                                         02S0286
*            JFCBSPAC = '11'B;                                  02S0287
         L     @10,SJFCBPTR(,SIOTPTR)                           02S0287
         OI    JFCBSPAC(@10),B'11000000'                        02S0287
*          ELSE                                                 02S0288
*            IF DEFBLKLN = '1'B THEN                            02S0288
         B     @RC00286                                         02S0288
@RF00286 L     @10,@CA00120                                     02S0288
         TM    DEFBLKLN-IEFAB445(@10),B'00100000'               02S0288
         BNO   @RF00288                                         02S0288
*              JFCBSPAC = '01'B;       /* QUANTITY IS IN AVG BLKLEN  */
         L     @10,SJFCBPTR(,SIOTPTR)                           02S0289
         NI    JFCBSPAC(@10),B'01111111'                        02S0289
         OI    JFCBSPAC(@10),B'01000000'                        02S0289
*        IF DEFRLSE='1'B THEN          /* RELEASE SPACE REQUESTED    */
@RF00288 DS    0H                                               02S0290
@RC00286 DS    0H                                               02S0290
@RC00284 L     @10,@CA00120                                     02S0290
         TM    DEFRLSE-IEFAB445(@10),B'00010000'                02S0290
         BNO   @RF00290                                         02S0290
*          JFCRLSE = '11'B;                                     02S0291
         L     @10,SJFCBPTR(,SIOTPTR)                           02S0291
         OI    JFCRLSE(@10),B'11000000'                         02S0291
*        ELSE                                                   02S0292
*          JFCRLSE = ''B;                                       02S0292
         B     @RC00290                                         02S0292
@RF00290 L     @10,SJFCBPTR(,SIOTPTR)                           02S0292
         NI    JFCRLSE(@10),B'00111111'                         02S0292
*        JFCONTIG = '0'B;              /* ERASE POSS. OLD VALUE      */
@RC00290 DS    0H                                               02S0294
*        JFCMIXG  = '0'B;              /* ERASE POSS. OLD VALUE      */
*        JFCALX   = '0'B;              /* ERASE POSS. OLD VALUE      */
         L     @10,SJFCBPTR(,SIOTPTR)                           02S0295
         NI    JFCONTIG(@10),B'11110001'                        02S0295
*        IF DEFCONTG='1'B THEN         /* CONTIGUOUS SPACE REQ'D     */
         L     @08,@CA00120                                     02S0296
         TM    DEFCONTG-IEFAB445(@08),B'00001000'               02S0296
         BNO   @RF00296                                         02S0296
*          JFCONTIG = '1'B;                                     02S0297
         OI    JFCONTIG(@10),B'00001000'                        02S0297
*        IF DEFMIXG='1'B THEN          /* MAX CONTIG SPACE REQ'D     */
@RF00296 L     @10,@CA00120                                     02S0298
         TM    DEFMIXG-IEFAB445(@10),B'00000100'                02S0298
         BNO   @RF00298                                         02S0298
*          JFCMIXG = '1'B;                                      02S0299
         L     @10,SJFCBPTR(,SIOTPTR)                           02S0299
         OI    JFCMIXG(@10),B'00000100'                         02S0299
*        IF DEFALX='1'B THEN           /* ALLOC SEP CONTIG AREAS     */
@RF00298 L     @10,@CA00120                                     02S0300
         TM    DEFALX-IEFAB445(@10),B'00000010'                 02S0300
         BNO   @RF00300                                         02S0300
*          JFCALX = '1'B;                                       02S0301
         L     @10,SJFCBPTR(,SIOTPTR)                           02S0301
         OI    JFCALX(@10),B'00000010'                          02S0301
*        IF DEFROUND = '1'B THEN       /* ROUND TO NEAREST CYL REQ'D */
@RF00300 L     @10,@CA00120                                     02S0302
         TM    DEFROUND-IEFAB445(@10),B'00000001'               02S0302
         BNO   @RF00302                                         02S0302
*          JFCROUND = '1'B;                                     02S0303
         L     @10,SJFCBPTR(,SIOTPTR)                           02S0303
         OI    JFCROUND(@10),B'00000001'                        02S0303
*        ELSE                                                   02S0304
*          JFCROUND = '0'B;                                     02S0304
         B     @RC00302                                         02S0304
@RF00302 L     @10,SJFCBPTR(,SIOTPTR)                           02S0304
         NI    JFCROUND(@10),B'11111110'                        02S0304
*      END;                            /* END VAM SPACE DEFAULTING   */
@RC00302 DS    0H                                               02S0306
*  END;                                /* END NON-DUMMY PROCESSING   */
@RF00278 DS    0H                                               02S0306
@RC00244 DS    0H                                               02S0307
*    CALL IEFAB4E9 (ADDR(DSAB),ADDR(INFMJFCB));/*SET DSABDCBM BITS ON*/
@RF00200 ST    DSABPTR,@TF00001                                 01S0307
         LA    @10,@TF00001                                     01S0307
         ST    @10,@AL00001                                     01S0307
         LA    @10,SJFCBPTR(,SIOTPTR)                           01S0307
         ST    @10,@AL00001+4                                   01S0307
         L     @15,@CV00073                                     01S0307
         LA    @01,@AL00001                                     01S0307
         BALR  @14,@15                                          01S0307
*/********************************************************************/
*/*                                                                  */
*/* SEGMENT NAME - CONSIOCD                                          */
*/*                                                                  */
*/* DESCRIPTIVE NAME - UPDATE SIOT                                   */
*/*                                                                  */
*/* FUNCTION - UPDATE FIELDS IN THE JFCB AS PER TEXT UNIT REQUEST    */
*/*                                                                  */
*/* OPERATION -                                                      */
*/*             THE KEY TABLE IS EXAMINED FOR ENTRIES WHICH CAUSE    */
*/*             THE EXISTING SIOT TO BE UPDATED.                     */
*/*             EACH UPDATE IS CHECKED TO SEE IF IT IS REALLY        */
*/*             A CHANGE FROM THE EXISTING VALUE - IF NO             */
*/*             ACTUAL CHANGES ARE NEEDED, THE SIOT WILL             */
*/*             NOT BE WRITTEN BACK TO SWA.                          */
*/*             NOTE THAT IF THE DATASET IS VSAM, TEMPORARY,         */
*/*             DUMMY, OR TERMINAL, THEN                             */
*/*             CHANGES TO DATASET DISPOSITION ARE IGNORED.          */
*/*             IF THE DDNAME IS TO BE CHANGED, THE TIOT             */
*/*             ENTRY IS ALSO UPDATED FOR THIS. THE          @Y30QPPB*/
*/*             INFORMATION ABOUT THE OLD AND NEW DDNAME AND @Y30QPPB*/
*/*             RELATIVE POSITION NUMBER IS SAVED TO BE      @Y30QPPB*/
*/*             PASSED TO IEFDB4FB,THE CHANGE DDNAME/JES3    @Y30QPPB*/
*/*             EXIT.                                        @Y30QPPB*/
*/*                                                                  */
*/*   INPUT DATA -                                                   */
*/*                SIOT TO BE UPDATED                                */
*/*                KEYTABLE CONTAINING POINTERS TO TEXT UNITS        */
*/*                TIOT ENTRY FOR THIS ALLOCATION                    */
*/*                JFCORGAM BIT - ON IF A VSAM DATASET               */
*/*                SIOTGDSN - ON IF DATASET NAME IS SYSTEM GENERATED */
*/*                                                                  */
*/*   OUTPUT DATA -                                                  */
*/*                 SIOT FIELDS UPDATED -                            */
*/*                     SCTSBYT3 - STATUS BITS                       */
*/*                     SCTDISP  - NORMAL DISPOSITION                */
*/*                     SIOTALTD - CONDITIONAL DISPOSITION           */
*/*                     SIOCLUNL - UNALLOCATE AT CLOSE               */
*/*                     SCTDDNAM - DDNAME                            */
*/*                     SIOTCNEW - STATUS CONVERTED FROM NEW         */
*/*                 TIOEDDNM - DDNAME IN TIOT ENTRY                  */
*/*                 UPDSIOT - BIT SET ON IF SIOT ACTUALLY            */
*/*                           CHANGED                                */
*/*                 UPDDNAME - BIT SET ON IF DDNAME CHANGED  @Y30QPPB*/
*/********************************************************************/
*IF SCTDUMMY='0'B THEN                 /* NON-DUMMY DATASET          */
         TM    SCTDUMMY(SIOTPTR),B'10000000'                    02S0308
         BNZ   @RF00308                                         02S0308
*  DO;                                                          02S0309
*    WORK(1) = STATSTUP->TEXTUPAR(1);  /* STATUS TO WORKAREA         */
         L     @10,@PC00001+4                                   02S0310
         L     @10,KEYTABP(,@10)                                02S0310
         L     @10,STATSTUP(,@10)                               02S0310
         MVC   WORK(1),TEXTUPAR(@10)                            02S0310
*    IF WORK(1) = SHR THEN             /* SIOT RECORDS SHR AS OLD    */
         CLI   WORK,X'08'                                       02S0311
         BNE   @RF00311                                         02S0311
*      WORK(1) = OLD;                                           02S0312
         MVI   WORK,X'01'                                       02S0312
*    IF SCTSBYT3^=(SCTSBYT3 × WORK(1)) THEN /* STATUS CHANGE         */
@RF00311 MVC   @TS00001(1),SCTSBYT3(SIOTPTR)                    02S0313
         OC    @TS00001(1),WORK                                 02S0313
         CLC   SCTSBYT3(1,SIOTPTR),@TS00001                     02S0313
         BE    @RF00313                                         02S0313
*      DO;                                                      02S0314
*         UPDSIOT = ON;                /* REMEMBER UPDATED SIOT      */
         OI    UPDSIOT,B'01000000'                              02S0315
*         IF SCTSNEW=ON THEN           /* IS CURRENT STATUS NEW?     */
         TM    SCTSNEW(SIOTPTR),B'00000100'                     02S0316
         BNO   @RF00316                                         02S0316
*           SIOTCNEW = ON;             /* YES, REMEMBER FOR RESTART  */
*                                                               02S0317
         OI    SIOTCNEW(SIOTPTR),B'00001000'                    02S0317
*         SCTSBYT3(6:8) = ''B;         /* ERASE CURRENT VALUE        */
@RF00316 NI    SCTSBYT3(SIOTPTR),B'11111000'                    02S0318
*         SCTSBYT3 = SCTSBYT3 × WORK(1); /* SET NEW STATUS           */
         OC    SCTSBYT3(1,SIOTPTR),WORK                         02S0319
*      END;                                                     02S0320
*                                                               02S0320
*    IF JFCORGAM^='1'B                 /* NOT A VSAM DATASET         */
*       & SIOTGDSN^='1'B THEN          /* NOT SYSTEM-GEN'D NAME      */
@RF00313 L     @10,SJFCBPTR(,SIOTPTR)                           02S0321
         TM    JFCORGAM(@10),B'00001000'                        02S0321
         BO    @RF00321                                         02S0321
         TM    SIOTGDSN(SIOTPTR),B'00010000'                    02S0321
         BO    @RF00321                                         02S0321
*                                      /* NEVER CHANGE DISP IF SO
*                                         SINCE VSAM REQUIRES UTILITY
*                                         AND TEMPS MUST REMAIN SUCH */
*      DO;                                                      02S0322
*        RFY TEXTUNIT BASED(NDISPTUP);                          02S0323
*        IF NDISPTUP^=0                /* NORMAL DISP REQ'D          */
*         & SCTSDISP^=(SCTSDISP×TEXTUPAR(1)) THEN /* REQ'D DISP ^=
*                                                    CURRENT         */
         L     @10,@PC00001+4                                   02S0324
         L     @10,KEYTABP(,@10)                                02S0324
         L     @10,NDISPTUP(,@10)                               02S0324
         LTR   @10,@10                                          02S0324
         BZ    @RF00324                                         02S0324
         MVC   @TS00001(1),SCTSDISP(SIOTPTR)                    02S0324
         OC    @TS00001(1),TEXTUPAR(@10)                        02S0324
         CLC   SCTSDISP(1,SIOTPTR),@TS00001                     02S0324
         BE    @RF00324                                         02S0324
*            DO;                                                02S0325
*              SCTSDISP = SCTSDISP & '11100000'B; /* TURN OFF CURRENT
*                                                    DISP            */
         NI    SCTSDISP(SIOTPTR),B'11100000'                    02S0326
*              SCTSDISP = SCTSDISP × TEXTUPAR(1); /* SET REQUESTED
*                                                    DISP            */
         OC    SCTSDISP(1,SIOTPTR),TEXTUPAR(@10)                02S0327
*              UPDSIOT = ON;           /* REMEMBER UPDATED SIOT      */
         OI    UPDSIOT,B'01000000'                              02S0328
*            END;                                               02S0329
*        ELSE;                         /* NORMAL DISP UNCHANGED      */
@RF00324 DS    0H                                               02S0331
*        RFY TEXTUNIT BASED(CDISPTUP);                          02S0331
*        IF CDISPTUP^=0                /* COND DISP REQUESTED        */
*          & SIOTALTD^=(SIOTALTD × TEXTUPAR(1)) THEN/* REQ ^= TO
*                                                     CURRENT        */
         L     @10,@PC00001+4                                   02S0332
         L     @10,KEYTABP(,@10)                                02S0332
         L     @10,CDISPTUP(,@10)                               02S0332
         LTR   @10,@10                                          02S0332
         BZ    @RF00332                                         02S0332
         MVC   @TS00001(1),SIOTALTD(SIOTPTR)                    02S0332
         OC    @TS00001(1),TEXTUPAR(@10)                        02S0332
         CLC   SIOTALTD(1,SIOTPTR),@TS00001                     02S0332
         BE    @RF00332                                         02S0332
*          DO;                                                  02S0333
*            SIOTALTD = SIOTALTD & '11110000'B; /* ERASE CURRENT DISP*/
         NI    SIOTALTD(SIOTPTR),B'11110000'                    02S0334
*            SIOTALTD = SIOTALTD × TEXTUPAR(1); /* SET REQUESTED DISP*/
         OC    SIOTALTD(1,SIOTPTR),TEXTUPAR(@10)                02S0335
*            UPDSIOT = ON;             /* REMEMBER UPDATED SIOT      */
         OI    UPDSIOT,B'01000000'                              02S0336
*          END;                                                 02S0337
*        ELSE;                         /* COND DISP NOT CHANGED      */
@RF00332 DS    0H                                               02S0339
*      END;                            /* END OF DISPOSITION PROC.   */
*  END;                                /* END NON-DUMMY PROCESSING   */
*                                                               02S0340
@RF00321 DS    0H                                               02S0341
*IF CLOSETUP^=0 & SIOCLUNL^='1'B THEN  /* FREE AT CLOSE TIME REQ'D   */
@RF00308 L     @10,@PC00001+4                                   02S0341
         L     @10,KEYTABP(,@10)                                02S0341
         L     @10,CLOSETUP(,@10)                               02S0341
         LTR   @10,@10                                          02S0341
         BZ    @RF00341                                         02S0341
         TM    SIOCLUNL(SIOTPTR),B'10000000'                    02S0341
         BO    @RF00341                                         02S0341
*  DO;                                                          02S0342
*    UPDSIOT = ON;                     /* REMEMBER UPDATED SIOT      */
         OI    UPDSIOT,B'01000000'                              02S0343
*    SIOCLUNL = '1'B;                  /* SET SIOT INDICATOR         */
         OI    SIOCLUNL(SIOTPTR),B'10000000'                    02S0344
*  END;                                                         02S0345
*                                                               02S0345
*IF DDNAMTUP^=0 THEN                   /* POSSIBLE DDNAME CHANGE     */
@RF00341 SLR   @10,@10                                          02S0346
         L     @08,@PC00001+4                                   02S0346
         L     @08,KEYTABP(,@08)                                02S0346
         L     @08,DDNAMTUP(,@08)                               02S0346
         CR    @08,@10                                          02S0346
         BE    @RF00346                                         02S0346
*  DO;                                                          02S0347
*    RFY TEXTUNIT BASED(DDNAMTUP);                              02S0348
*    WORK = '';                        /* INIT DDNAME BUFFER         */
         MVI   WORK,C' '                                        02S0349
         MVC   WORK+1(7),WORK                                   02S0349
*    WORK(1:TEXTULNG) = TEXTUPAR(1:TEXTULNG);  /* DDNAME REQUESTED   */
         ICM   @05,12,TEXTULNG(@08)                             02S0350
         SRA   @05,16                                           02S0350
         BCTR  @05,0                                            02S0350
         EX    @05,@SM01387                                     02S0350
*    IF WORK^=TIOEDDNM THEN            /* IF DIFFERENT FROM CURRENT  */
         L     @08,DSABTIOT(,DSABPTR)                           02S0351
         CLC   WORK(8),TIOEDDNM(@08)                            02S0351
         BE    @RF00351                                         02S0351
*      DO;                             /* UPDATE CONTROL BLOCKS      */
*        OLDDDNAM = TIOEDDNM;          /* OLD DDN FOR JES3   @Y30QPPB*/
         MVC   OLDDDNAM(8),TIOEDDNM(@08)                        02S0353
*        OLDPOSNO = ZERO;              /* DD NOT CONCATENATD @Y30QPPB*/
         STH   @10,OLDPOSNO                                     02S0354
*        NEWDDNAM = WORK;              /* NEW DDN FOR JES3   @Y30QPPB*/
         MVC   NEWDDNAM(8),WORK                                 02S0355
*        NEWPOSNO = ZERO;              /* DD NOT CONCATENATD @Y30QPPB*/
         STH   @10,NEWPOSNO                                     02S0356
*        UPDDNAME = ON;                /* DDNAME CHANGED     @Y30QPPB*/
         OI    UPDDNAME,B'00100000'                             02S0357
*        TIOEDDNM = WORK;              /* UPDATE TIOT                */
         MVC   TIOEDDNM(8,@08),WORK                             02S0358
*        SCTDDNAM = WORK;              /* UPDATE SIOT                */
         MVC   SCTDDNAM(8,SIOTPTR),WORK                         02S0359
*        UPDSIOT = ON;                 /* REMEMBER UPDATED SIOT      */
         OI    UPDSIOT,B'01000000'                              02S0360
*      END;                                                     02S0361
*  END;                                                         02S0362
@RF00351 DS    0H                                               02S0363
*/********************************************************************/
*/*                                                                  */
*/* SEGMENT NAME - CONDSASP                                          */
*/*                                                                  */
*/* DESCRIPTIVE NAME - UPDATE DSAB                                   */
*/*                                                                  */
*/* FUNCTION - UPDATE FIELDS IN THE DSAB AS PER TEXT-UNIT REQUEST.   */
*/*                                                                  */
*/* OPERATION -                                                      */
*/*             THE KEYTABLE IS EXAMINED TO SEE WHAT ALLOCATION      */
*/*             ATTRIBUTES WERE REQUESTED, AND CORRESPONDING BITS    */
*/*             IN THE DSAB ARE SET ON.   IF A PASSWORD WAS          */
*/*             GIVEN, THEN THE PROTECT SVC IS ISSUED TO             */
*/*             OBTAIN THE TTR OF THE MEMBER IN THE PASSWORD         */
*/*             DATA SET, AND THIS IS PLACED IN THE DSAB.            */
*/*             NOTE THAT COMMON DSAB UPDATING, E.G.,                */
*/*             TURNING ON THE 'DYNAMICALLY ALLOCATED' BIT, ETC.     */
*/*             IS DONE IN THE CONTROL SEGMENT ONLY.                 */
*/*                                                                  */
*/*   INPUT DATA -                                                   */
*/*                DSAB BEING CONVERTED                              */
*/*                KEYTABLE POINTING TO TEXT UNITS                   */
*/*                                                                  */
*/*   OUTPUT DATA -                                                  */
*/*                DSABPALC - SET ON IF PERMANENTLY ALLOCATED        */
*/*                           ATTRIBUTE REQUESTED.                   */
*/*                DSABCONV - SET ON IF THE CONVERTIBLE ATTRIBUTE IS */
*/*                           REQUESTED - OFF IF THE PERM ALLOC.     */
*/*                           ATTRIBUTE IS REQUESTED AND THE CONVERT.*/
*/*                           ATTRIBUTE IS NOT REQUESTED.            */
*/*                DSABPTTR - FILLED IN WITH TTR OF ENTRY IN         */
*/*                           PASSWORD DATA SET IF PASSWORD          */
*/*                           GIVEN - ZERO IF TTR CAN'T BE OBTAINED. */
*/*                DSABUNAL - SET ON IF UNALLOCATE AT CLOSE REQUESTED*/
*/*                                                                  */
*/********************************************************************/
*IF PERMATUP^=0 THEN                   /* IF PERM ALLOC ATTRIB REQ'D */
@RF00346 L     @10,@PC00001+4                                   02S0363
         L     @10,KEYTABP(,@10)                                02S0363
         L     @10,PERMATUP(,@10)                               02S0363
         LTR   @10,@10                                          02S0363
         BZ    @RF00363                                         02S0363
*  DO;                                                          02S0364
*    DSABPALC = ON;                    /* ASSIGN ATTRIBUTE           */
*    DSABCONV = OFF;                   /* DEFAULT - NOT CONVERTIBLE  */
         OI    DSABPALC(DSABPTR),B'01000000'                    02S0366
         NI    DSABCONV(DSABPTR),B'11101111'                    02S0366
*  END;                                                         02S0367
*IF CNVRTTUP^=0 THEN                   /* CONV. ATTRIBUTE REQUESTED  */
@RF00363 L     @10,@PC00001+4                                   02S0368
         L     @10,KEYTABP(,@10)                                02S0368
         L     @10,CNVRTTUP(,@10)                               02S0368
         LTR   @10,@10                                          02S0368
         BZ    @RF00368                                         02S0368
*  DSABCONV = ON;                      /* SET IT IN DSAB             */
*                                                               02S0369
         OI    DSABCONV(DSABPTR),B'00010000'                    02S0369
*IF CLOSETUP^=0 THEN                   /* UNALLOC AT CLOSE REQ'D     */
@RF00368 L     @10,@PC00001+4                                   02S0370
         L     @10,KEYTABP(,@10)                                02S0370
         L     @10,CLOSETUP(,@10)                               02S0370
         LTR   @10,@10                                          02S0370
         BZ    @RF00370                                         02S0370
*  DSABUNAL = ON;                      /* TELL DATA MANAGEMENT       */
*                                                               02S0371
         OI    DSABUNAL(DSABPTR),B'00100000'                    02S0371
*IF PASSWTUP^=0 THEN                   /* IF PASSWORD PROVIDED       */
@RF00370 SLR   @10,@10                                          02S0372
         L     @08,@PC00001+4                                   02S0372
         L     @08,KEYTABP(,@08)                                02S0372
         L     @08,PASSWTUP(,@08)                               02S0372
         CR    @08,@10                                          02S0372
         BE    @RF00372                                         02S0372
*  DO;                                 /* BUILD PROTECT PARM LIST    */
*    RFY TEXTUNIT BASED(PASSWTUP);                              02S0374
*    PWTTRADR = ADDR(DSABPTTR);        /* PUT TTR INTO DSAB          */
         LA    @05,DSABPTTR(,DSABPTR)                           02S0375
         ST    @05,PWTTRADR                                     02S0375
*    DSABPTTR = 0;                     /* INIT TTR RETURN AREA (DFLT)*/
         ST    @10,DSABPTTR(,DSABPTR)                           02S0376
*    PWENTRCD = 5;                     /* ENTRY CODE = RETN TTR      */
         MVI   PWENTRCD,X'05'                                   02S0377
*    PWDSNADR = ADDR(JFCBDSNM);        /* ADDR OF DATA SET NAME      */
         L     @10,SJFCBPTR(,SIOTPTR)                           02S0378
         ST    @10,PWDSNADR                                     02S0378
*    PWDSNLEN = LENGTH(JFCBDSNM);      /* LENGTH OF DSNAME IN JFCB   */
         MVI   PWDSNLEN,X'2C'                                   02S0379
*    WORK = '';                        /* INIT PADDED PASSWORD       */
         MVI   WORK,C' '                                        02S0380
         MVC   WORK+1(7),WORK                                   02S0380
*    WORK(1:TEXTULNG) = TEXTUPAR(1:TEXTULNG); /* PAD PASSWD WITH ' ' */
         ICM   @10,12,TEXTULNG(@08)                             02S0381
         SRA   @10,16                                           02S0381
         BCTR  @10,0                                            02S0381
         EX    @10,@SM01387                                     02S0381
*    PWPASADR = ADDR(WORK);            /* ADDR OF PASSWORD           */
         LA    @10,WORK                                         02S0382
         ST    @10,PWPASADR                                     02S0382
*    GEN(PROTECT PWPARMS);             /* INVOKE PROTECT ROUTINE     */
         PROTECT PWPARMS
*                                      /* NOTE - IF ERROR, A TTR OF
*                                         ZERO (NONE) IS DEFAULTED   */
*  END;                                                         02S0384
*  END;                                                         01S0385
*                                                               01S0385
@RF00372 DS    0H                                               01S0386
*IF ERRCODE = 0 THEN                   /*NO ERROR ABOVE              */
@RF00092 L     @10,@PC00001                                     01S0386
         LH    @10,ERRCODE(,@10)                                01S0386
         LTR   @10,@10                                          01S0386
         BNZ   @RF00386                                         01S0386
*  IF (UPDJFCB='1'B                    /*WAS JFCB OR                 */
*     × (UPDSIOT='1'B                  /*SIOT UPDATED AND EPA FOR
*                                        IT NOT ALREADY ON CHAIN     */
*        & (EPALSISW=OFF × SIOTDSKA^=SCTLSIOT))) THEN           01S0387
         TM    UPDJFCB,B'10000000'                              01S0387
         BO    @RT00387                                         01S0387
         TM    UPDSIOT,B'01000000'                              01S0387
         BNO   @RF00387                                         01S0387
         L     @10,@PC00001+12                                  01S0387
         TM    EPALSISW(@10),B'01000000'                        01S0387
         BZ    @RT00387                                         01S0387
         L     @10,@PC00001+20                                  01S0387
         L     @10,SCTPTR(,@10)                                 01S0387
         CLC   SIOTDSKA(3,SIOTPTR),SCTLSIOT(@10)                01S0387
         BE    @RF00387                                         01S0387
@RT00387 DS    0H                                               01S0388
*    DO;                               /*WRITE BACK FOR JOURNALING   */
*/********************************************************************/
*/*                                                                  */
*/* SEGMENT NAME - CONEPACD                                          */
*/*                                                                  */
*/* DESCRIPTIVE NAME - EPA PROCESSING                                */
*/*                                                                  */
*/* FUNCTION - IF THE SIOT AND/OR JFCB HAVE BEEN UPDATED,            */
*/*            ADD EPA'S FOR THEM ONTO THE 'WRITE EPA CHAIN'.        */
*/*                                                                  */
*/* OPERATION - A GETMAIN IS ISSUED FOR ONE OR TWO EPA'S DEPENDING ON*/
*/*             WHETHER THE SIOT OR JFCB OR BOTH HAVE BEEN UPDATED.  */
*/*             THE FIELDS OF THE EPA(S) ARE THEN FILLED IN AND THE  */
*/*             AND THE EPA(S) ARE CHAINED TOGETHER AND THEN         */
*/*             TO EACH OTHER, SO THAT IF THIS ROUTINE IS            */
*/*             ABNORMALLY TERMINATED, THE EPA CHAIN WILL REFLECT    */
*/*             EITHER BOTH UPDATED BLOCKS, OR NEITHER.              */
*/*             THE POINTER TO THE LAST EPA (EPACHNP) IS             */
*/*             THEN UPDATED TO REFLECT THIS ADDITION TO THE CHAIN.  */
*/*             NOTE THAT THIS ROUTINE ZEROES OUT THE CORE           */
*/*             IT GETS AND THEREFORE THE SWCHNPTR FIELD IN THE NEW  */
*/*             LAST EPA ADDED WILL BE ZEROES.                       */
*/*                                                                  */
*/*   INPUT DATA - UPDJFCB - BIT SET ON IF JFCB HAS BEEN UPDATED     */
*/*                UPDSIOT - BIT SET ON IF SIOT HAS BEEN UPDATED     */
*/*                EPACHNP - PTR TO LAST EPA ON CHAIN                */
*/*                JFCB    - JFCB FOR CONVERTED ALLOCATION           */
*/*                SIOT    - SIOT FOR CONVERTED ALLOCATION           */
*/*                                                                  */
*/*   OUTPUT DATA - EPA(S) ADDED TO THE CHAIN, AND EPACHNP UPDATED   */
*/*                                                                  */
*/********************************************************************/
*GETEPALN=0;                           /*INITIALIZE 0 GETMAIN LENGTH */
         SLR   GETEPALN,GETEPALN                                02S0389
*IF UPDJFCB='1'B THEN                  /*IF JFCB WAS UPDATED THEN    */
         TM    UPDJFCB,B'10000000'                              02S0390
         BNO   @RF00390                                         02S0390
*  GETEPALN=LENGTH(SWAEPA);            /*GET CORE FOR AN EPA FOR SIOT*/
         LA    GETEPALN,16                                      02S0391
*IF UPDSIOT='1'B THEN                  /*IF SIOT WAS UPDATED THEN    */
@RF00390 TM    UPDSIOT,B'01000000'                              02S0392
         BNO   @RF00392                                         02S0392
*  GETEPALN=GETEPALN + LENGTH(SWAEPA); /*GET CORE FOR AN EPA FOR SIOT*/
         AL    GETEPALN,@CF00477                                02S0393
*R0 = GETEPALN;                        /*LENGTH FOR GETMAIN          */
@RF00392 LR    R0,GETEPALN                                      02S0394
*R0 = R0 × SCHDSUBP;                   /*GET FROM CORRECT SUBPOOL    */
         O     R0,@CF00091                                      02S0395
*GEN(GETMAIN R,LV=(0));                /*GET 1 OR 2 EPA'S            */
         GETMAIN R,LV=(0)
*SWEPAPTR = R1;                        /*SET EPA BASE                */
         LR    SWEPAPTR,R1                                      02S0397
*SWAEPA(1:GETEPALN) = SWAEPA(1:GETEPALN) && SWAEPA(1:GETEPALN); 02S0398
         LR    @10,GETEPALN                                     02S0398
         BCTR  @10,0                                            02S0398
         EX    @10,@SX01391                                     02S0398
*                                      /*CLEAR 1 OR BOTH EPA'S       */
*EPAJFCB = 0;                          /*INIT PTR TO EPA FOR JFCB    */
         SLR   @10,@10                                          02S0399
         LR    EPAJFCB,@10                                      02S0399
*EPASIOT = 0;                          /*INIT PTR TO EPA FOR SIOT    */
         LR    EPASIOT,@10                                      02S0400
*    IF UPDJFCB='1'B THEN              /*WAS JFCB UPDATED            */
         TM    UPDJFCB,B'10000000'                              02S0401
         BNO   @RF00401                                         02S0401
*      DO;                             /*YES, THEN FILL IN EPA       */
*        EPAJFCB = ADDR(SWAEPA);       /*REMEMBER CREATED EPA        */
         LR    EPAJFCB,SWEPAPTR                                 02S0403
*        SWBLKPTR=ADDR(INFMJFCB);      /*SET PTR TO JFCB             */
         L     @10,SJFCBPTR(,SIOTPTR)                           02S0404
         ST    @10,SWBLKPTR(,SWEPAPTR)                          02S0404
*        SWVA=SCTPJFCB;                /*SET DISK ADDR OF JFCB       */
         MVC   SWVA(3,SWEPAPTR),SCTPJFCB(SIOTPTR)               02S0405
*        SWBLKID=28;                   /*SET TABLE ID OF JFCB        */
         MVI   SWBLKID(SWEPAPTR),X'1C'                          02S0406
*        SWLNGTH=176;                  /*SET LENGTH OF JFCB          */
         MVC   SWLNGTH(4,SWEPAPTR),@CF00391                     02S0407
*        SWEPAPTR=SWEPAPTR+LENGTH(SWAEPA); /*POINT PAST THIS EPA IN
*                                        CASE THERE IS A SIOT EPA TOO*/
         AL    SWEPAPTR,@CF00477                                02S0408
*      END;                            /*END OF JFCB EPA PROCESSING  */
*    ELSE;                             /*JFCB WAS NOT UPDATED        */
@RF00401 DS    0H                                               02S0411
*    IF UPDSIOT='1'B THEN              /*WAS SIOT UPDATED            */
         TM    UPDSIOT,B'01000000'                              02S0411
         BNO   @RF00411                                         02S0411
*      DO;                             /*YES, THEN FILL IN EPA       */
*        EPASIOT = ADDR(SWAEPA);       /*REMEMBER CREATED EPA        */
         LR    EPASIOT,SWEPAPTR                                 02S0413
*        SWBLKPTR=SIOTPTR;             /*SET CORE ADDR OF SIOT       */
         ST    SIOTPTR,SWBLKPTR(,SWEPAPTR)                      02S0414
*        SWVA=SIOTDSKA;                /*SET DISK ADDR OF SIOT       */
         MVC   SWVA(3,SWEPAPTR),SIOTDSKA(SIOTPTR)               02S0415
*        SWBLKID=3;                    /*SET TABLE ID OF SIOT        */
         MVI   SWBLKID(SWEPAPTR),X'03'                          02S0416
*        SWLNGTH=176;                  /*SET LENGTH OF SIOT          */
         MVC   SWLNGTH(4,SWEPAPTR),@CF00391                     02S0417
*      END;                            /*END OF SIOT EPA PROCESSING  */
*    ELSE;                             /*SIOT WAS NOT UPDATED        */
*                                                               02S0419
@RF00411 DS    0H                                               02S0420
*/*NOW CHAIN EPA'S TOGETHER, THEN TO MAIN CHAIN                      */
*IF EPAJFCB^=0 THEN                    /*JFCB EPA CREATED?           */
         SLR   @10,@10                                          02S0420
         CR    EPAJFCB,@10                                      02S0420
         BE    @RF00420                                         02S0420
*  DO;                                                          02S0421
*    EPAJFCB->SWCHNPTR = EPASIOT;      /*LINK SIOT EPA OR 0 INTO JFCB
*                                        EPA                         */
         ST    EPASIOT,SWCHNPTR(,EPAJFCB)                       02S0422
*    EPACHNP->SWCHNPTR = EPAJFCB;      /*AND ADD TO MAIN CHAIN       */
         L     @08,@PC00001+16                                  02S0423
         L     @02,EPACHNP(,@08)                                02S0423
         ST    EPAJFCB,SWCHNPTR(,@02)                           02S0423
*    IF EPASIOT^=0 THEN                /*IS SIOT-EPA LAST?           */
         CR    EPASIOT,@10                                      02S0424
         BE    @RF00424                                         02S0424
*      EPACHNP = EPASIOT;              /* YES, CORRECT END-OF-CHAIN
*                                         PTR                        */
         ST    EPASIOT,EPACHNP(,@08)                            02S0425
*    ELSE                              /*NO, JFCB EPA IS LAST        */
*      EPACHNP = EPAJFCB;              /*CORRECT END-OF-CHAIN PTR    */
         B     @RC00424                                         02S0426
@RF00424 L     @10,@PC00001+16                                  02S0426
         ST    EPAJFCB,EPACHNP(,@10)                            02S0426
*  END;                                                         02S0427
*ELSE                                  /*NO JFCB EPA CREATED         */
*  DO;                                                          02S0428
         B     @RC00420                                         02S0428
@RF00420 DS    0H                                               02S0429
*    EPACHNP->SWCHNPTR = EPASIOT;      /*ADD SIOT ONLY TO MAIN CHAIN */
         L     @10,@PC00001+16                                  02S0429
         L     @08,EPACHNP(,@10)                                02S0429
         ST    EPASIOT,SWCHNPTR(,@08)                           02S0429
*    EPACHNP = EPASIOT;                /*CORRECT END-OF-CHAIN PTR    */
         ST    EPASIOT,EPACHNP(,@10)                            02S0430
*  END;                                                         02S0431
*    END;                              /*END EPA PROCESSING          */
*                                                               01S0432
@RC00420 DS    0H                                               01S0433
*IF UPDDNAME=ON THEN                   /*DDNAME CHANGED      @Y30QPPB*/
@RF00387 DS    0H                                               01S0433
@RF00386 TM    UPDDNAME,B'00100000'                             01S0433
         BNO   @RF00433                                         01S0433
*  DO;                                 /*YES,EXIT TO IEFDB4FB@Y30QPPB*/
*    NUMBDDNS=ONE;                     /*DDNS IN LIST        @Y30QPPB*/
         MVC   NUMBDDNS(4),@CF00063                             01S0435
*    CALL IEFDB4FB (NUMBDDNS,ADDR(CHNGDDNM)); /*CHANGE DDNAME/JES3
*                                               EXIT         @Y30QPPB*/
         LA    @10,NUMBDDNS                                     01S0436
         ST    @10,@AL00001                                     01S0436
         LA    @10,CHNGDDNM                                     01S0436
         ST    @10,@TF00001                                     01S0436
         LA    @10,@TF00001                                     01S0436
         ST    @10,@AL00001+4                                   01S0436
         L     @15,@CV00074                                     01S0436
         LA    @01,@AL00001                                     01S0436
         BALR  @14,@15                                          01S0436
*  END;                                /*END EXIT TO IEFDB4FB@Y30QPPB*/
*                                      /*                    @Y30QPPB*/
*IF ERRCODE=0 THEN                     /*IF NO ERROR OCCURRED        */
@RF00433 L     @10,@PC00001                                     01S0438
         LH    @10,ERRCODE(,@10)                                01S0438
         LTR   @10,@10                                          01S0438
         BNZ   @RF00438                                         01S0438
*  DO;                                 /*CONTINUE PROCESSING         */
*    DSABNUSE='1'B;                    /*MARK CONVERTED DSAB IN-USE  */
*    DSABDCNV='1'B;                    /*MARK DSAB DYNAM. CONVERTED  */
         OI    DSABNUSE(DSABPTR),B'00100001'                    01S0441
*    DSABTCBP = TCBPTR;                /*TCB FOR WHICH MARKED IN-USE */
         L     @10,@PC00001+20                                  01S0442
         L     @10,TCBPTR(,@10)                                 01S0442
         ST    @10,DSABTCBP(,DSABPTR)                           01S0442
*  END;                                /*END NO ERROR AFTER EPA CODE */
*                                                               01S0443
*RETURN CODE(0);                       /*RETURN - ERROR CODE IS SET  */
@RF00438 L     @13,4(,@13)                                      01S0444
         L     @00,@SIZDATD                                     01S0444
         LR    @01,@11                                          01S0444
         FSPACE   R,LV=(0),A=(1)
         SLR   @15,@15                                          01S0444
         L     @14,12(,@13)                                     01S0444
         LM    @00,@12,20(@13)                                  01S0444
         BR    @14                                              01S0444
*END IEFDB411                                                   01S0445
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.      *
*/*%INCLUDE SYSLIB  (CONVRTSP)                                        *
*/*%INCLUDE SYSLIB  (CONVRTDT)                                        *
*/*%INCLUDE SYSLIB  (IEFZB445)                                        *
*/*%INCLUDE SYSLIB  (IEFZB4D1)                                        *
*/*%INCLUDE SYSLIB  (IEFZB4D3)                                        *
*/*%INCLUDE SYSLIB  (IEFZB4D6)                                        *
*/*%INCLUDE SYSLIB  (IEFZB4D7)                                        *
*/*%INCLUDE SYSLIB  (IEFASCTB)                                        *
*/*%INCLUDE SYSLIB  (IHADSAB )                                        *
*/*%INCLUDE SYSLIB  (IEFTIOT1)                                        *
*/*%INCLUDE SYSLIB  (IEFASIOT)                                        *
*/*%INCLUDE SYSLIB  (IEFJFCBN)                                        *
*/*%INCLUDE SYSLIB  (IEZJSCB )                                        *
*/*%INCLUDE SYSLIB  (IEFZB505)                                        *
*/*%INCLUDE SYSLIB  (IEFZB4D8)                                        *
*/*%INCLUDE SYSLIB  (IEFZB4DA)                                        *
*/*%INCLUDE SYSLIB  (ZERODCB )                                        *
*/*%INCLUDE SYSLIB  (ZERODCBS)                                        *
*/*%INCLUDE SYSLIB  (CONJFCCD)                                        *
*/*%INCLUDE SYSLIB  (CONJFCSP)                                        *
*/*%INCLUDE SYSLIB  (CONSIOCD)                                        *
*/*%INCLUDE SYSLIB  (CONSIOSP)                                        *
*/*%INCLUDE SYSLIB  (CONDSACD)                                        *
*/*%INCLUDE SYSLIB  (CONDSASP)                                        *
*/*%INCLUDE SYSLIB  (CONEPACD)                                        *
*/*%INCLUDE SYSLIB  (CONEPASP)                                        *
*;                                                              01S0445
@DATA    DS    0H
@SM01375 MVC   WORK(0),TEXTUPAR(@10)
@SM01387 MVC   WORK(0),TEXTUPAR(@08)
@SX01391 XC    SWAEPA(0,SWEPAPTR),SWAEPA(SWEPAPTR)
@DATD    DSECT
         DS    0F
@SA00001 DS    18F
@PC00001 DS    6F
@AL00001 DS    11A
@TF00001 DS    F
IEFDB411 CSECT
         DS    0F
@CF00093 DC    F'0'
@CF00063 DC    F'1'
@CF00477 DC    F'16'
@CF00391 DC    F'176'
@CF00091 DC    XL4'E6000000'
@DATD    DSECT
         DS    0D
ENQTCBP  DS    A
NUMBDDNS DS    F
S99TXTPP DS    A
TXTUFLDP DS    A
TIOTPTR  DS    A
TCBJSCB  DS    A
@TS00001 DS    CL1
CONVRTSW DS    BL1
         ORG   CONVRTSW
UPDJFCB  DS    BL1
UPDSIOT  EQU   CONVRTSW+0
UPDDNAME EQU   CONVRTSW+0
@NM00001 EQU   CONVRTSW+0
         ORG   CONVRTSW+1
WORK     DS    CL8
         DS    CL2
PWPARMS  DS    CL12
         ORG   PWPARMS
PWTTRADR DS    AL4
         ORG   PWTTRADR
PWENTRCD DS    AL1
         ORG   PWPARMS+4
PWDSNADR DS    AL4
         ORG   PWDSNADR
PWDSNLEN DS    AL1
         ORG   PWPARMS+8
PWPASADR DS    AL4
         ORG   PWPARMS+12
CHNGDDNM DS    CL20
         ORG   CHNGDDNM
OLDDDNAM DS    CL8
OLDPOSNO DS    FL2
NEWDDNAM DS    CL8
NEWPOSNO DS    FL2
         ORG   CHNGDDNM+20
DSRRFMAP DS    CL2
         ORG   DSRRFMAP
ADDRPASS DS    BL1
ADCHONLY EQU   DSRRFMAP+0
ADCHENQ  EQU   DSRRFMAP+0
DELEONLY EQU   DSRRFMAP+0
DELEDEQ  EQU   DSRRFMAP+0
NOSHRXCL EQU   DSRRFMAP+0
ENQSHR   EQU   DSRRFMAP+0
ENQEXCL  EQU   DSRRFMAP+0
ENQWAIT  DS    BL1
RETADDR  EQU   DSRRFMAP+1
RETINDIC EQU   DSRRFMAP+1
READALL  EQU   DSRRFMAP+1
INCORREC EQU   DSRRFMAP+1
EPAJCTEX EQU   DSRRFMAP+1
SRCHDSNM EQU   DSRRFMAP+1
@NM00003 EQU   DSRRFMAP+1
         ORG   DSRRFMAP+2
IEFDB411 CSECT
         DS    0F
@SIZDATD DC    AL1(230)
         DC    AL3(@ENDDATD-@DATD)
@CV00071 DC    V(IEFAB4DC)
@CV00072 DC    V(IEFDB417)
@CV00073 DC    V(IEFAB4E9)
@CV00074 DC    V(IEFDB4FB)
@CA00120 DC    A(IEFAB445)
         DS    0D
IEFDB411 CSECT
         DS   0H
PATCHLOC DC ((@DATA-@PSTART)/20)X'00'
@DATD    DSECT
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
IEFDB411 CSECT
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
GETEPALN EQU   @06
EPASIOT  EQU   @06
EPAJFCB  EQU   @07
SWEPAPTR EQU   @05
JFCBPTR  EQU   @02
SIOTPTR  EQU   @04
DSABPTR  EQU   @03
R0       EQU   @00
R1       EQU   @01
         EXTRN IEFAB445
TXTUPLST EQU   0
TXTUNITP EQU   TXTUPLST
TXTUPELM EQU   0
TXTPLENT EQU   TXTUPELM
TEXTUNIT EQU   0
TEXTUENT EQU   TEXTUNIT+4
TEXTULNG EQU   TEXTUENT
TEXTUPAR EQU   TEXTUENT+2
TEXTUFLD EQU   0
KEYTABLE EQU   0
DDNAMTUP EQU   KEYTABLE
DSNAMTUP EQU   KEYTABLE+4
MEMBRTUP EQU   KEYTABLE+8
STATSTUP EQU   KEYTABLE+12
NDISPTUP EQU   KEYTABLE+16
CDISPTUP EQU   KEYTABLE+20
TRKTUP   EQU   KEYTABLE+24
CYLTUP   EQU   KEYTABLE+28
BLKLNTUP EQU   KEYTABLE+32
PRIMETUP EQU   KEYTABLE+36
SECNDTUP EQU   KEYTABLE+40
DIRTUP   EQU   KEYTABLE+44
RLSETUP  EQU   KEYTABLE+48
SPFRMTUP EQU   KEYTABLE+52
ROUNDTUP EQU   KEYTABLE+56
CLOSETUP EQU   KEYTABLE+108
INOUTTUP EQU   KEYTABLE+128
PASSWTUP EQU   KEYTABLE+316
PERMATUP EQU   KEYTABLE+324
CNVRTTUP EQU   KEYTABLE+328
INSMSCT  EQU   0
SCTSSTAT EQU   INSMSCT+4
SCTLSIOT EQU   INSMSCT+24
SCTSNUMB EQU   INSMSCT+64
SCTSTYPE EQU   INSMSCT+67
SCTSDPTY EQU   INSMSCT+94
SCTSTAT2 EQU   INSMSCT+104
SCTBCT   EQU   SCTSTAT2
SCTCDENT EQU   INSMSCT+118
SCTSTEND EQU   INSMSCT+172
@NM00029 EQU   0
SCTABCND EQU   @NM00029
DSAB     EQU   0
DSABTIOT EQU   DSAB+16
DSABGIDP EQU   DSAB+24
DSABANMP EQU   DSAB+28
DSABORG  EQU   DSAB+32
DSABORG1 EQU   DSABORG
DSABORG2 EQU   DSABORG+1
DSABFLG1 EQU   DSAB+34
DSABPALC EQU   DSABFLG1
DSABDCNV EQU   DSABFLG1
DSABCONV EQU   DSABFLG1
DSABNUSE EQU   DSABFLG1
DSABFLG2 EQU   DSAB+35
DSABIRM  EQU   DSABFLG2
DSABUNAL EQU   DSABFLG2
DSABFLG3 EQU   DSAB+36
DSABVAM  EQU   DSABFLG3
DSABFLG4 EQU   DSAB+37
DSABTCBP EQU   DSAB+40
DSABPTTR EQU   DSAB+44
DSABDCBM EQU   DSAB+56
DSABSIOT EQU   DSAB+64
DSABANMI EQU   0
DSABGIDL EQU   0
TIOT1    EQU   0
TIOENTRY EQU   0
TIOESTTA EQU   TIOENTRY+1
TIOERLOC EQU   TIOENTRY+2
TIOELINK EQU   TIOERLOC+1
TIOESYOT EQU   TIOELINK
TIOEDDNM EQU   TIOENTRY+4
TIOESTTC EQU   TIOENTRY+15
TIOESTTB EQU   TIOENTRY+16
POOLSTAR EQU   TIOENTRY+20
INDMSIOT EQU   0
SIOTDSKA EQU   INDMSIOT
SCTDDNAM EQU   INDMSIOT+4
SCTUSADD EQU   INDMSIOT+20
SCTPJFCB EQU   INDMSIOT+32
SIOTBYT1 EQU   INDMSIOT+43
SIOTBYT3 EQU   INDMSIOT+46
SIOTTSTC EQU   INDMSIOT+47
SIOTBYT0 EQU   INDMSIOT+52
SIOTSSDS EQU   SIOTBYT0
SCTSDISP EQU   INDMSIOT+55
SCTSBYT1 EQU   INDMSIOT+56
SCTDUMMY EQU   SCTSBYT1
SIOTGDSN EQU   SCTSBYT1
SCTSBYT2 EQU   INDMSIOT+57
SIOCLUNL EQU   SCTSBYT2
SCTSBYT3 EQU   INDMSIOT+58
SCTSNEW  EQU   SCTSBYT3
SCTSBYT4 EQU   INDMSIOT+59
SCTUTYPE EQU   INDMSIOT+60
SIOTDEVT EQU   SCTUTYPE
SIOUBYT3 EQU   SIOTDEVT+2
SIOTALTD EQU   INDMSIOT+92
SIOTBYT2 EQU   INDMSIOT+103
SIOTCNEW EQU   SIOTBYT2
SJFCBPTR EQU   INDMSIOT+156
INFMJFCB EQU   0
JFCBDSNM EQU   INFMJFCB
JFCBELNM EQU   INFMJFCB+44
JFCBTSDM EQU   INFMJFCB+52
JFCNDSCB EQU   JFCBTSDM
JFCFCBID EQU   INFMJFCB+56
JFCBFRID EQU   JFCFCBID
JFCBLTYP EQU   INFMJFCB+66
JFCBOTTR EQU   INFMJFCB+67
JFCBUFOF EQU   JFCBOTTR
JFCBFLSQ EQU   JFCBOTTR+1
JFCFUNC  EQU   JFCBFLSQ
JFCBMASK EQU   INFMJFCB+72
JFCBFLG1 EQU   JFCBMASK+5
JFCOPEN  EQU   JFCBFLG1
JFCBFLG2 EQU   JFCBMASK+6
JFCDEFER EQU   JFCBFLG2
JFCMODNW EQU   JFCBFLG2
JFCTRACE EQU   JFCBFLG2
JFCBBUFF EQU   JFCBFLG2
JFCBIND1 EQU   INFMJFCB+86
JFCRLSE  EQU   JFCBIND1
JFCPDS   EQU   JFCBIND1
JFCBIND2 EQU   INFMJFCB+87
JFCDISP  EQU   JFCBIND2
JFCSHARE EQU   JFCBIND2
JFCTEMP  EQU   JFCBIND2
JFCAMPTR EQU   INFMJFCB+88
JFCBUFRQ EQU   JFCAMPTR
JFCBUFNO EQU   JFCBUFRQ
JFCBUFIN EQU   JFCBUFNO
JFCBFOUT EQU   JFCBUFNO
JFCBGNCP EQU   JFCAMPTR+1
JFCBHIAR EQU   JFCBGNCP
JFCBFALN EQU   JFCBHIAR
JFCBFTEK EQU   JFCBFALN
JFCBBFTA EQU   JFCBFTEK
JFCBUFL  EQU   JFCAMPTR+2
JFCEROPT EQU   INFMJFCB+92
JFCTRTCH EQU   INFMJFCB+93
IEZJSCB  EQU   0
JSCBSEC1 EQU   IEZJSCB+188
JSCHPCE  EQU   JSCBSEC1+4
JSCBTCBP EQU   JSCBSEC1+20
JSCBDCB  EQU   JSCBSEC1+36
JSCBOPTS EQU   JSCBSEC1+48
JSCBSWT1 EQU   JSCBSEC1+55
JSCBWTP  EQU   JSCBSEC1+64
JSCBWTFG EQU   JSCBWTP
JSCBEND1 EQU   IEZJSCB+260
SWAEPA   EQU   0
SWBLKPTR EQU   SWAEPA
SWVAFW   EQU   SWAEPA+4
SWVA     EQU   SWVAFW
SWBLKID  EQU   SWVAFW+3
SWLNGTH  EQU   SWAEPA+8
SWCHNPTR EQU   SWAEPA+12
INDMDSNT EQU   0
DEFSPACE EQU   IEFAB445
DEFPQTY  EQU   DEFSPACE
DEFSQTY  EQU   DEFSPACE+3
DEFDRLH  EQU   DEFSPACE+6
DEFDQTY  EQU   DEFSPACE+9
@NM00002 EQU   DEFSPACE+12
DEFTRK   EQU   @NM00002
DEFCYL   EQU   @NM00002
DEFBLKLN EQU   @NM00002
DEFRLSE  EQU   @NM00002
DEFCONTG EQU   @NM00002
DEFMIXG  EQU   @NM00002
DEFALX   EQU   @NM00002
DEFROUND EQU   @NM00002
RSCODE   EQU   0
ERRCODE  EQU   RSCODE
KEYTABP  EQU   0
ADDRDSAB EQU   0
ALFNCMAP EQU   0
INPUTSW  EQU   ALFNCMAP
PROCESSW EQU   ALFNCMAP+6
ERRPROSW EQU   PROCESSW
DCBSPCSW EQU   PROCESSW
EPALSISW EQU   PROCESSW+1
EPACHNP  EQU   0
SYSCTBLK EQU   0
JSCBPTR  EQU   SYSCTBLK
TCBPTR   EQU   SYSCTBLK+8
JCTPTR   EQU   SYSCTBLK+12
SCTPTR   EQU   SYSCTBLK+16
TIOEDEVE EQU   TIOESTTB
TIOSTTB  EQU   TIOEDEVE
JFCKEYLE EQU   JFCTRTCH
JFCCODE  EQU   JFCKEYLE
JFCSTACK EQU   JFCTRTCH
JFCMODE  EQU   JFCSTACK
JFCSPPRT EQU   JFCTRTCH
JFCPRTSP EQU   JFCSPPRT
JFCDEN   EQU   JFCSPPRT+1
JFCBABFS EQU   JFCSPPRT+2
JFCLIMCT EQU   JFCBABFS
JFCDSORG EQU   JFCSPPRT+5
JFCDSRG1 EQU   JFCDSORG
JFCDSRG2 EQU   JFCDSORG+1
JFCORGAM EQU   JFCDSRG2
JFCRECFM EQU   JFCSPPRT+7
JFCRCFM  EQU   JFCRECFM
JFCOPTCD EQU   JFCSPPRT+8
JFCWVCSP EQU   JFCOPTCD
JFCWVCIS EQU   JFCWVCSP
JFCWVCBD EQU   JFCWVCIS
JFCALLOW EQU   JFCOPTCD
JFCRSV17 EQU   JFCALLOW
JFCOVER  EQU   JFCRSV17
JFCPCIBT EQU   JFCOPTCD
JFCMAST  EQU   JFCPCIBT
JFCEXT   EQU   JFCMAST
JFCBCKPT EQU   JFCOPTCD
JFCIND   EQU   JFCBCKPT
JFCRSV18 EQU   JFCOPTCD
JFCCYL   EQU   JFCRSV18
JFCACT   EQU   JFCCYL
JFCREDUC EQU   JFCOPTCD
JFCRSV19 EQU   JFCREDUC
JFCRSV20 EQU   JFCRSV19
JFCRSV21 EQU   JFCOPTCD
JFCDEL   EQU   JFCRSV21
JFCRSV23 EQU   JFCOPTCD
JFCREORG EQU   JFCRSV23
JFCBLKSI EQU   JFCSPPRT+9
JFCBUFSI EQU   JFCBLKSI
JFCAMSYN EQU   JFCSPPRT+11
JFCLRECL EQU   JFCAMSYN
JFCNCP   EQU   JFCAMSYN+2
JFCBUFMX EQU   JFCNCP
JFCNTM   EQU   JFCAMSYN+3
JFCBFSEQ EQU   JFCNTM
JFCPCI   EQU   JFCBFSEQ
JFCRESRV EQU   JFCAMSYN+4
JFCINTVL EQU   JFCSPPRT+19
JFCUCSEG EQU   JFCRESRV
JFCUCSOP EQU   JFCUCSEG+4
JFCOUTLI EQU   JFCUCSEG+5
JFCTHRSH EQU   JFCOUTLI
JFCCPRI  EQU   JFCTHRSH
JFCSOWA  EQU   JFCOUTLI+1
JFCBVOLS EQU   JFCUCSEG+10
JFCBS001 EQU   JFCBVOLS
JFCBPQTY EQU   JFCBS001+34
JFCBCTRI EQU   JFCBS001+37
JFCBSPAC EQU   JFCBCTRI
JFCONTIG EQU   JFCBCTRI
JFCMIXG  EQU   JFCBCTRI
JFCALX   EQU   JFCBCTRI
JFCROUND EQU   JFCBCTRI
JFCBSQTY EQU   JFCBS001+38
JFCFLGS1 EQU   JFCBS001+41
JFCBDQTY EQU   JFCBS001+42
JFCBDRLH EQU   JFCBS001+53
JSCBSEC2 EQU   JSCBEND1
JSCBSEC3 EQU   JSCBEND1
JSCBJCT  EQU   JSCBSEC3
JSCBJCTA EQU   JSCBJCT+1
JSCBASID EQU   JSCBSEC3+8
JSCBJNL  EQU   JSCBSEC3+28
JSCBJJSB EQU   JSCBJNL
JSCBSUB  EQU   JSCBSEC3+40
JSCSCT   EQU   JSCBSEC3+68
JSCRSV35 EQU   JSCBSEC3+96
JSCRSV36 EQU   JSCRSV35
JSCRSV37 EQU   JSCRSV35+2
JSCRSV45 EQU   JSCBSEC3+112
JSCRSV46 EQU   JSCRSV45
JSCRSV47 EQU   JSCRSV45+2
MSK      EQU   DSABDCBM
MSK1     EQU   MSK
MSKBFALN EQU   MSK1
MSKBFTEK EQU   MSK1
MSKBLKSI EQU   MSK1
MSKBUFIN EQU   MSK1
MSKBUFL  EQU   MSK1
MSKBUFMX EQU   MSK1
MSKBUFNO EQU   MSK1
MSKBUFOF EQU   MSK1
MSK2     EQU   MSK+1
MSKBFOUT EQU   MSK2
MSKBUFRQ EQU   MSK2
MSKBUFSI EQU   MSK2
MSKCODE  EQU   MSK2
MSKCPRI  EQU   MSK2
MSKDEN   EQU   MSK2
MSKDSORG EQU   MSK2
MSKEROPT EQU   MSK2
MSK3     EQU   MSK+2
MSKGNCP  EQU   MSK3
MSKINTVL EQU   MSK3
MSKKEYLE EQU   MSK3
MSKLIMCT EQU   MSK3
MSKLRECL EQU   MSK3
MSKMODE  EQU   MSK3
MSKNCP   EQU   MSK3
MSKOPTCD EQU   MSK3
MSK4     EQU   MSK+3
MSKPCIR  EQU   MSK4
MSKPCIS  EQU   MSK4
MSKPRTSP EQU   MSK4
MSKRECFM EQU   MSK4
MSKRSRVF EQU   MSK4
MSKRSRVS EQU   MSK4
MSKSOWA  EQU   MSK4
MSKSTACK EQU   MSK4
MSK5     EQU   MSK+4
MSKTHRSH EQU   MSK5
MSKTRTCH EQU   MSK5
MSKTRACE EQU   MSK5
MSKFUNC  EQU   MSK5
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
MSK6     EQU   MSK+5
MSKRSV00 EQU   MSK5
JSCBEND3 EQU   JSCBSEC3+120
JSCRSV52 EQU   JSCBSEC3+116
JSCRSV51 EQU   JSCRSV47+1
JSCRSV50 EQU   JSCRSV47
JSCRSV49 EQU   JSCRSV46+1
JSCRSV48 EQU   JSCRSV46
JSCRSV44 EQU   JSCBSEC3+108
JSCRSV43 EQU   JSCBSEC3+104
JSCRSV42 EQU   JSCBSEC3+100
JSCRSV41 EQU   JSCRSV37+1
JSCRSV40 EQU   JSCRSV37
JSCRSV39 EQU   JSCRSV36+1
JSCRSV38 EQU   JSCRSV36
JSCBUFPT EQU   JSCBSEC3+92
JSCBACT  EQU   JSCBSEC3+88
JSCBSWSP EQU   JSCBSEC3+87
JSCRSV33 EQU   JSCBSEC3+86
JSCDDNUM EQU   JSCBSEC3+84
JSCRSV53 EQU   JSCBSEC3+82
JSCDDNNO EQU   JSCBSEC3+80
JSCBVATA EQU   JSCBSEC3+76
JSCTMCOR EQU   JSCBSEC3+72
JSCSCTP  EQU   JSCSCT+1
JSCRSV55 EQU   JSCSCT
JSCRSV54 EQU   JSCBSEC3+64
JSCDSABQ EQU   JSCBSEC3+60
JSCBSSIB EQU   JSCBSEC3+56
JSCBFRBA EQU   JSCBSEC3+48
JSCRSV28 EQU   JSCBSEC3+46
JSCBSONO EQU   JSCBSEC3+44
JSCBSUBA EQU   JSCBSUB+1
JSCRSV31 EQU   JSCBSUB
JSCBSMLR EQU   JSCBSEC3+36
JSCBJNLR EQU   JSCBSEC3+32
JSCBJNLA EQU   JSCBJNL+1
JSCBJSBT EQU   JSCBJJSB
JSCBJSBX EQU   JSCBJJSB
JSCBJSBA EQU   JSCBJJSB
JSCBJSBI EQU   JSCBJJSB
@NM00063 EQU   JSCBJJSB
JSCBJNLE EQU   JSCBJJSB
JSCBJNLF EQU   JSCBJJSB
JSCBJNLN EQU   JSCBJJSB
@NM00062 EQU   JSCBSEC3+24
JSCBJRBA EQU   JSCBSEC3+16
JSCBIECB EQU   JSCBSEC3+12
JSCRSV25 EQU   JSCBSEC3+10
JSCBTJID EQU   JSCBASID
JSCBPSCB EQU   JSCBSEC3+4
JSCJCTP  EQU   JSCBJCTA
JSCRSV24 EQU   JSCBJCT
JSCBEND2 EQU   JSCBSEC2
JFCBEND  EQU   JFCBS001+58
JFCBSPTN EQU   JFCBS001+57
JFCBVLCT EQU   JFCBS001+56
JFCBSBNM EQU   JFCBS001+50
JFCBABST EQU   JFCBS001+48
JFCBSPNM EQU   JFCBS001+45
JFCBUAFF EQU   JFCFLGS1
JFCRSV45 EQU   JFCFLGS1
JFCVRDS  EQU   JFCFLGS1
JFCRSV43 EQU   JFCFLGS1
JFCRSV42 EQU   JFCFLGS1
JFCRSV41 EQU   JFCFLGS1
JFCTOPEN EQU   JFCFLGS1
JFCBDLET EQU   JFCFLGS1
JFCRQID  EQU   JFCBSQTY
JFCRSV29 EQU   JFCBCTRI
JFCBVVG  EQU   JFCBCTRI
JFCRUNIT EQU   JFCBPQTY
JFCBEXAD EQU   JFCBS001+31
JFCBEXTL EQU   JFCBS001+30
JFCVVGRP EQU   JFCBS001+22
@NM00059 EQU   JFCBS001
JFCAVOLS EQU   JFCBVOLS
JFCBNVOL EQU   JFCUCSEG+9
JFCBNTCS EQU   JFCUCSEG+8
JFCSEND  EQU   JFCCPRI
JFCEQUAL EQU   JFCCPRI
JFCRECV  EQU   JFCCPRI
JFCRSV34 EQU   JFCCPRI
JFCRSV33 EQU   JFCCPRI
JFCRSV55 EQU   JFCCPRI
JFCRSV54 EQU   JFCCPRI
JFCRSV53 EQU   JFCCPRI
JFCRSV27 EQU   JFCUCSOP
JFCRSV26 EQU   JFCUCSOP
JFCFCBVR EQU   JFCUCSOP
JFCFCBAL EQU   JFCUCSOP
JFCVER   EQU   JFCUCSOP
JFCRSV25 EQU   JFCUCSOP
JFCFOLD  EQU   JFCUCSOP
JFCRSV24 EQU   JFCUCSOP
JFCUCSID EQU   JFCUCSEG
JFCDBUFN EQU   JFCRESRV+3
JFCCYLOF EQU   JFCRESRV+2
JFCRKP   EQU   JFCRESRV
JFCPCIR2 EQU   JFCPCI
JFCPCIR1 EQU   JFCPCI
JFCPCIN2 EQU   JFCPCI
JFCPCIN1 EQU   JFCPCI
JFCPCIA2 EQU   JFCPCI
JFCPCIA1 EQU   JFCPCI
JFCPCIX2 EQU   JFCPCI
JFCPCIX1 EQU   JFCPCI
JFCBAXBF EQU   JFCBUFSI
JFCREL   EQU   JFCREORG
JFCRSV22 EQU   JFCDEL
JFCSRCHD EQU   JFCRSV20
JFCOPTQ  EQU   JFCACT
JFCFEED  EQU   JFCIND
JFCCBWU  EQU   JFCEXT
JFCWUMSG EQU   JFCOVER
JFCSDNAM EQU   JFCWVCBD
@NM00058 EQU   JFCRECFM
JFCCHAR  EQU   JFCRECFM
JFCRFS   EQU   JFCRECFM
JFCRFB   EQU   JFCRECFM
JFCRFO   EQU   JFCRCFM
JFCFMREC EQU   JFCRCFM
JFCRSV16 EQU   JFCDSRG2
JFCRSV15 EQU   JFCDSRG2
JFCORGTR EQU   JFCDSRG2
JFCRSV13 EQU   JFCDSRG2
JFCORGTQ EQU   JFCDSRG2
JFCORGTX EQU   JFCDSRG2
JFCORGGS EQU   JFCDSRG2
JFCORGU  EQU   JFCDSRG1
JFCORGPO EQU   JFCDSRG1
JFCORGMQ EQU   JFCDSRG1
JFCORGCQ EQU   JFCDSRG1
JFCORGCX EQU   JFCDSRG1
JFCORGDA EQU   JFCDSRG1
JFCORGPS EQU   JFCDSRG1
JFCORGIS EQU   JFCDSRG1
JFCTRKBL EQU   JFCLIMCT+1
@NM00057 EQU   JFCLIMCT
JFCONE   EQU   JFCMODE
JFCTWO   EQU   JFCMODE
JFCRSV07 EQU   JFCMODE
JFCRSV06 EQU   JFCMODE
JFCMODER EQU   JFCMODE
JFCMODEO EQU   JFCMODE
JFCEBCD  EQU   JFCMODE
JFCBIN   EQU   JFCMODE
JFCRSV32 EQU   JFCCODE
JFCTTY   EQU   JFCCODE
JFCASCII EQU   JFCCODE
JFCNCR   EQU   JFCCODE
JFCBUR   EQU   JFCCODE
JFCFRI   EQU   JFCCODE
JFCBCD   EQU   JFCCODE
JFCNOCON EQU   JFCCODE
TIOUCBP  EQU   TIOEDEVE+1
TIOVERF  EQU   TIOSTTB
TIOUNLD  EQU   TIOSTTB
TIOMNTD  EQU   TIOSTTB
TIOSETU  EQU   TIOSTTB
TIOVLSR  EQU   TIOSTTB
TIOPVIO  EQU   TIOSTTB
TIOREQD  EQU   TIOSTTB
TIOUSED  EQU   TIOSTTB
ASCBPTR  EQU   SYSCTBLK+4
@NM00007 EQU   PROCESSW+1
HSKPDQSW EQU   PROCESSW+1
DISMSGSW EQU   PROCESSW+1
USERERSW EQU   PROCESSW+1
EPASCTSW EQU   PROCESSW+1
EPAJCTSW EQU   PROCESSW
FRRPERSW EQU   PROCESSW
NQEXCLSW EQU   PROCESSW
UNALOCSW EQU   ERRPROSW
DEQDSNSW EQU   ERRPROSW
COPYSW   EQU   PROCESSW
@NM00006 EQU   PROCESSW
@NM00005 EQU   INPUTSW+3
PCATINIT EQU   INPUTSW+3
UNITDEVT EQU   INPUTSW+3
MOUNTSW  EQU   INPUTSW+2
CATLOGSW EQU   INPUTSW+2
TIOTNQSW EQU   INPUTSW+2
OFFLINSW EQU   INPUTSW+2
WTUNTSW  EQU   INPUTSW+2
NORESSW  EQU   INPUTSW+2
WTDSNSW  EQU   INPUTSW+2
WTVOLSW  EQU   INPUTSW+2
@NM00004 EQU   INPUTSW
JOBRLSYS EQU   INPUTSW
NOMONTSW EQU   INPUTSW
NOCNVTSW EQU   INPUTSW
ONCNVTSW EQU   INPUTSW
INFOCODE EQU   RSCODE+2
DEFUNIT  EQU   IEFAB445+13
JSCBCSCB EQU   JSCBSEC1+68
JSCBPMG  EQU   JSCBWTP+2
JSCBWTSP EQU   JSCBWTP+1
JSCRSV23 EQU   JSCBWTFG
JSCRSV22 EQU   JSCBWTFG
JSCRSV21 EQU   JSCBWTFG
JSCRSV20 EQU   JSCBWTFG
JSCRSV19 EQU   JSCBWTFG
JSCRSV18 EQU   JSCBWTFG
JSCBRET  EQU   JSCBWTFG
JSCBIOFG EQU   JSCBWTFG
@NM00061 EQU   JSCBSEC1+60
JSCBQMPI EQU   JSCBSEC1+56
JSCBPMSG EQU   JSCBSWT1
JSCRSV16 EQU   JSCBSWT1
JSCRSV15 EQU   JSCBSWT1
JSCRSV14 EQU   JSCBSWT1
JSCRSV13 EQU   JSCBSWT1
JSCRSV12 EQU   JSCBSWT1
JSCRSV11 EQU   JSCBSWT1
JSCBPASS EQU   JSCBSWT1
JSCBTTTR EQU   JSCBSEC1+52
JSCRSV10 EQU   JSCBSEC1+49
JSCBAUTH EQU   JSCBOPTS
JSCSIOTS EQU   JSCBOPTS
JSCRSV08 EQU   JSCBOPTS
JSCRSV07 EQU   JSCBOPTS
JSCRSV06 EQU   JSCBOPTS
JSCBLONG EQU   JSCBOPTS
JSCRSV05 EQU   JSCBOPTS
JSCRSV04 EQU   JSCBOPTS
JSCBSECB EQU   JSCBSEC1+44
JSCRSV03 EQU   JSCBSEC1+41
JSCBSTEP EQU   JSCBSEC1+40
JSCBDCBA EQU   JSCBDCB+1
JSCRSV02 EQU   JSCBDCB
JSCBID   EQU   JSCBSEC1+32
JSCBDBTB EQU   JSCBSEC1+28
JSCBIJSC EQU   JSCBSEC1+24
JSCBPCC  EQU   JSCBSEC1+16
JSCBTCP  EQU   JSCBSEC1+12
JSCBSHR  EQU   JSCBSEC1+8
JSCHPCEA EQU   JSCHPCE+1
JSCRSV32 EQU   JSCHPCE
JSCRSV01 EQU   JSCBSEC1
@NM00060 EQU   IEZJSCB
JFCRSV05 EQU   JFCEROPT
JFCRSV04 EQU   JFCEROPT
JFCRSV03 EQU   JFCEROPT
JFCRSV02 EQU   JFCEROPT
JFCTOPT  EQU   JFCEROPT
JFCABN   EQU   JFCEROPT
JFCSKP   EQU   JFCEROPT
JFCACC   EQU   JFCEROPT
JFCFWORD EQU   JFCBFTEK
JFCDWORD EQU   JFCBFTEK
JFCHIER1 EQU   JFCBFTEK
JFCDYN   EQU   JFCBFTEK
JFCEXC   EQU   JFCBFTEK
JFCBBFTR EQU   JFCBBFTA
JFCSIM   EQU   JFCBBFTA
JFCHIER  EQU   JFCBFTEK
JFCREQ   EQU   JFCBIND2
JFCENT   EQU   JFCBIND2
JFCSECUR EQU   JFCBIND2
JFCGDG   EQU   JFCBIND1
JFCADDED EQU   JFCBIND1
JFCLOC   EQU   JFCBIND1
JFCBXPDT EQU   INFMJFCB+83
JFCBCRDT EQU   INFMJFCB+80
JFCBOPS2 EQU   JFCBMASK+7
JFCRCTLG EQU   JFCBFLG2
JFCSDRPS EQU   JFCBFLG2
JFCNRPS  EQU   JFCDEFER
JFCOUTOP EQU   JFCBFLG2
JFCINOP  EQU   JFCBFLG2
JFCBPWBP EQU   JFCOPEN
@NM00056 EQU   JFCOPEN
JFCDUAL  EQU   JFCBFLG1
JFCSLDES EQU   JFCBFLG1
JFCSLCRE EQU   JFCBFLG1
JFCSTAND EQU   JFCBFLG1
JFCBOPS1 EQU   JFCBMASK
JFCBVLSQ EQU   INFMJFCB+70
JFCRSV31 EQU   JFCFUNC
JFCFNCBT EQU   JFCFUNC
JFCFNCBX EQU   JFCFUNC
JFCFNCBD EQU   JFCFUNC
JFCFNCBW EQU   JFCFUNC
JFCFNCBP EQU   JFCFUNC
JFCFNCBR EQU   JFCFUNC
JFCFNCBI EQU   JFCFUNC
JFCBFOFL EQU   JFCBUFOF
JFCNL    EQU   JFCBLTYP
JFCSL    EQU   JFCBLTYP
JFCNSL   EQU   JFCBLTYP
JFCSUL   EQU   JFCBLTYP
JFCBLP   EQU   JFCBLTYP
JFCBLTM  EQU   JFCBLTYP
JFCBAL   EQU   JFCBLTYP
JFCRSV38 EQU   JFCBLTYP
JFCVINDX EQU   INFMJFCB+64
JFCNLREC EQU   INFMJFCB+62
JFCBADBF EQU   INFMJFCB+60
JFCAMSTR EQU   JFCBFRID+2
JFCAMCRO EQU   JFCBFRID
JFCBDSCB EQU   INFMJFCB+53
JFCPAT   EQU   JFCBTSDM
JFCNDCB  EQU   JFCBTSDM
JFCNWRIT EQU   JFCBTSDM
JFCTTR   EQU   JFCBTSDM
JFCSDS   EQU   JFCBTSDM
JFCVSL   EQU   JFCBTSDM
JFCCAT   EQU   JFCBTSDM
JFCIPLTX EQU   JFCBELNM
JFCBQNAM EQU   JFCBDSNM
SIODDSNL EQU   INDMSIOT+173
SIOVDSNL EQU   INDMSIOT+172
SIOVDSNT EQU   INDMSIOT+170
SVOLUNNO EQU   INDMSIOT+168
SIOTVMVP EQU   INDMSIOT+164
SIOTJFX  EQU   INDMSIOT+160
SIOTNPTR EQU   INDMSIOT+152
SIOTETIO EQU   INDMSIOT+148
SIOTATE  EQU   INDMSIOT+144
SVOLUNAD EQU   INDMSIOT+140
SIOTEDLP EQU   INDMSIOT+136
SIOTEDLS EQU   INDMSIOT+132
SIOTRSNC EQU   INDMSIOT+130
SCTANAME EQU   INDMSIOT+122
@NM00055 EQU   INDMSIOT+108
SIOTSSNM EQU   INDMSIOT+104
SIODDQCR EQU   SIOTBYT2
SIOVDQCR EQU   SIOTBYT2
SIOTCVOL EQU   SIOTBYT2
SIOTCALC EQU   SIOTBYT2
SIOTGALL EQU   SIOTBYT2
SIOTDSPD EQU   SIOTBYT2
SIOTDMND EQU   SIOTBYT2
SIOTOPUC EQU   INDMSIOT+99
SIOTOUTR EQU   INDMSIOT+97
SIOTOUTC EQU   INDMSIOT+96
@NM00054 EQU   INDMSIOT+93
SIOTAUNC EQU   SIOTALTD
SIOTACAT EQU   SIOTALTD
SIOTADEL EQU   SIOTALTD
SIOTAKEP EQU   SIOTALTD
SIOTNPRV EQU   SIOTALTD
SIOJCATS EQU   SIOTALTD
@NM00053 EQU   SIOTALTD
@NM00052 EQU   SIOTALTD
@NM00051 EQU   INDMSIOT+91
SIOTNDSB EQU   INDMSIOT+88
@NM00050 EQU   INDMSIOT+84
SIOTDPCD EQU   INDMSIOT+82
@NM00049 EQU   INDMSIOT+81
SCTOUTPN EQU   INDMSIOT+80
SCTOUTNO EQU   INDMSIOT+76
SCTOUTNM EQU   INDMSIOT+68
SIOUCBAD EQU   SCTUTYPE+5
SIOUCNVT EQU   SCTUTYPE+4
SIOUBYT4 EQU   SIOTDEVT+3
@NM00048 EQU   SIOUBYT3
SIO3UREC EQU   SIOUBYT3
SIO3DISP EQU   SIOUBYT3
SIO3DACC EQU   SIOUBYT3
SIO3COMM EQU   SIOUBYT3
SIO3TAPE EQU   SIOUBYT3
SIOUBYT2 EQU   SIOTDEVT+1
SIOUBYT1 EQU   SIOTDEVT
SIOTOMN  EQU   SCTSBYT4
SIOTIPDI EQU   SCTSBYT4
SIOTVAFF EQU   SCTSBYT4
SIOTSTEP EQU   SCTSBYT4
SIOTASCI EQU   SCTSBYT4
@NM00047 EQU   SCTSBYT4
SIOTGDGA EQU   SCTSBYT4
SCTSGDGS EQU   SCTSBYT4
SCTSOLD  EQU   SCTSBYT3
SCTSMOD  EQU   SCTSBYT3
SCTSYSOU EQU   SCTSBYT3
SCTVREF  EQU   SCTSBYT3
@NM00046 EQU   SCTSBYT3
SCTSYSNE EQU   SCTSBYT3
SCTDSNRF EQU   SCTSBYT3
SCTRECVD EQU   SCTSBYT2
SCTDEFER EQU   SCTSBYT2
SCTLABEL EQU   SCTSBYT2
SCTUNLBD EQU   SCTSBYT2
SCTJOBLB EQU   SCTSBYT2
SCTVOLAF EQU   SCTSBYT2
SIOTCATL EQU   SCTSBYT2
SIOTJSCT EQU   SCTSBYT1
SCTUNAFF EQU   SCTSBYT1
SCTPARLM EQU   SCTSBYT1
SIOTQDSN EQU   SCTSBYT1
SIOTCCAT EQU   SCTSBYT1
SCTSYSIN EQU   SCTSBYT1
SIOTUNCT EQU   SCTSDISP
SIOTCTLG EQU   SCTSDISP
SIOTDLET EQU   SCTSDISP
SIOTKEEP EQU   SCTSDISP
SIOTPASS EQU   SCTSDISP
SIOTPRIV EQU   SCTSDISP
S3400DSP EQU   SCTSDISP
@NM00045 EQU   SCTSDISP
SIOTVLCT EQU   INDMSIOT+54
SCTNMBUT EQU   INDMSIOT+53
SIOTRTRY EQU   SIOTBYT0
SIOTPUPV EQU   SIOTBYT0
SIOTNOPV EQU   SIOTBYT0
SIOTGIGN EQU   SIOTBYT0
SPVTAMSG EQU   SIOTBYT0
SIOTFUDA EQU   SIOTBYT0
SIOTDYAL EQU   SIOTBYT0
SIOTGIID EQU   INDMSIOT+50
SCTVOLCT EQU   INDMSIOT+49
SCTSPOOL EQU   INDMSIOT+48
SIOTQNAM EQU   SIOTTSTC
@NM00044 EQU   SIOTTSTC
SIOTTERM EQU   SIOTTSTC
@NM00043 EQU   SIOTTSTC
@NM00042 EQU   SIOTBYT3
SIOTJES3 EQU   SIOTBYT3
SIOCDEVT EQU   SIOTBYT3
SIOALIAS EQU   SIOTBYT3
SCTDDINO EQU   INDMSIOT+44
SIOTDDNT EQU   SIOTBYT1
SIOTALCD EQU   SIOTBYT1
SIODADSM EQU   SIOTBYT1
SIOTDADR EQU   SIOTBYT1
SIODUNAL EQU   SIOTBYT1
SIOVAMDS EQU   SIOTBYT1
SIOTHOLD EQU   SIOTBYT1
SIOTOCKP EQU   SIOTBYT1
SIOPSCNT EQU   INDMSIOT+42
SIOTREFN EQU   INDMSIOT+40
SIOTOTUN EQU   INDMSIOT+39
SIOTVRSB EQU   INDMSIOT+36
@NM00041 EQU   INDMSIOT+35
@NM00040 EQU   INDMSIOT+31
SCTPSIOT EQU   INDMSIOT+28
SIOTAFID EQU   INDMSIOT+26
@NM00039 EQU   INDMSIOT+24
SIODSNTE EQU   INDMSIOT+22
SIOTUNAF EQU   SCTUSADD
SIOTDEST EQU   INDMSIOT+12
SIOTTYPE EQU   INDMSIOT+3
TIOTFEND EQU   POOLSTAR+16
TIOPSLOT EQU   POOLSTAR+13
TIOPSTTB EQU   POOLSTAR+12
TIOPPOOL EQU   POOLSTAR+4
TIOPNSRT EQU   POOLSTAR+3
@NM00038 EQU   POOLSTAR+2
TIOPNSLT EQU   POOLSTAR+1
@NM00037 EQU   POOLSTAR
TIOEFSRT EQU   TIOENTRY+17
TIOSVERF EQU   TIOESTTB
TIOSUNLD EQU   TIOESTTB
TIOSMNTD EQU   TIOESTTB
TIOSSETU EQU   TIOESTTB
TIOSVLSR EQU   TIOESTTB
TIOSPVIO EQU   TIOESTTB
TIOSREQD EQU   TIOESTTB
TIOSUSED EQU   TIOESTTB
TIOSBALS EQU   TIOESTTC
TIOSBALP EQU   TIOESTTC
TIOSVOLS EQU   TIOESTTC
TIOSVOLP EQU   TIOESTTC
TIOSAFFS EQU   TIOESTTC
TIOSAFFP EQU   TIOESTTC
TIOSDEFR EQU   TIOESTTC
TIOSDKCR EQU   TIOESTTC
TIOEJFCB EQU   TIOENTRY+12
TIOTREM  EQU   TIOELINK
TIOESSDS EQU   TIOESYOT
TIOESYIN EQU   TIOELINK
TIOEQNAM EQU   TIOELINK
TIOEDYNM EQU   TIOELINK
TIOTTERM EQU   TIOELINK
TIOTRV01 EQU   TIOELINK
TIOSYOUT EQU   TIOELINK
TIOEWTCT EQU   TIOERLOC
TIOSDSP2 EQU   TIOESTTA
TIOSDSP1 EQU   TIOESTTA
TIOSLABL EQU   TIOESTTA
TIOSDADS EQU   TIOESTTA
TIOSJBLB EQU   TIOESTTA
TIOSPLTS EQU   TIOESTTA
TIOSPLTP EQU   TIOESTTA
TIOSLTYP EQU   TIOESTTA
TIOELNGH EQU   TIOENTRY
TIOCSTEP EQU   TIOT1+8
TIOCNJOB EQU   TIOT1
DSABGRID EQU   DSABGIDL+4
DSABLLEN EQU   DSABGIDL
DSABANAM EQU   DSABANMI+1
DSABANML EQU   DSABANMI
DSABRS04 EQU   DSAB+68
DSABRS03 EQU   DSAB+62
DSABSSCM EQU   DSAB+52
DSABSSNM EQU   DSAB+48
DSABRS02 EQU   DSAB+38
@NM00036 EQU   DSABFLG4
DSABCKSI EQU   DSABFLG4
DSABCKVL EQU   DSABFLG4
DSABCKDS EQU   DSABFLG4
@NM00035 EQU   DSABFLG3
DSABJSCT EQU   DSABFLG3
DSABCATL EQU   DSABFLG3
DSABVMSC EQU   DSABFLG3
DSABPASS EQU   DSABFLG3
DSABDEFR EQU   DSABFLG3
@NM00034 EQU   DSABFLG2
DSABOPEN EQU   DSABFLG2
DSABCATM EQU   DSABFLG1
DSABPCAT EQU   DSABFLG1
DSABDCAT EQU   DSABFLG1
DSABDALC EQU   DSABFLG1
@NM00033 EQU   DSABORG2
DSABTR   EQU   DSABORG2
DSABAM   EQU   DSABORG2
@NM00032 EQU   DSABORG2
DSABTQ   EQU   DSABORG2
DSABTX   EQU   DSABORG2
DSABGS   EQU   DSABORG2
DSABU    EQU   DSABORG1
DSABPO   EQU   DSABORG1
DSABMQ   EQU   DSABORG1
DSABCQ   EQU   DSABORG1
DSABCX   EQU   DSABORG1
DSABDA   EQU   DSABORG1
DSABPS   EQU   DSABORG1
DSABIS   EQU   DSABORG1
DSABSSVA EQU   DSAB+21
DSABRS01 EQU   DSAB+20
DSABOPCT EQU   DSAB+14
DSABLNTH EQU   DSAB+12
DSABBCHN EQU   DSAB+8
DSABFCHN EQU   DSAB+4
DSABID   EQU   DSAB
@NM00031 EQU   @NM00029+1
SCTONLY  EQU   SCTABCND
SCTEVEN  EQU   SCTABCND
SCTABEND EQU   SCTABCND
SCTONLYC EQU   SCTABCND
SCTABCAN EQU   SCTABCND
@NM00030 EQU   SCTABCND
@NM00028 EQU   INSMSCT+173
@NM00027 EQU   SCTSTEND
SCTSYSCK EQU   SCTSTEND
SCTSTPND EQU   SCTSTEND
SCTSTSRT EQU   SCTSTEND
@NM00026 EQU   INSMSCT+168
SCTCATCT EQU   INSMSCT+166
SCTSDPSA EQU   SCTCDENT+3
SCTSDPOP EQU   SCTCDENT+2
SCTSDPCD EQU   SCTCDENT
@NM00025 EQU   INSMSCT+117
SCTPRFMF EQU   INSMSCT+116
SCTPGMNM EQU   INSMSCT+108
SCTTIOT  EQU   INSMSCT+105
@NM00024 EQU   SCTBCT
SCTJBEND EQU   SCTBCT
SCTSPSYS EQU   SCTBCT
SCTSTPLB EQU   SCTBCT
@NM00023 EQU   SCTBCT
SCTMCVOL EQU   SCTBCT
@NM00022 EQU   SCTBCT
SCTGOTTR EQU   INSMSCT+100
SCTSMF   EQU   INSMSCT+96
@NM00021 EQU   SCTSDPTY+1
SCTSDP   EQU   SCTSDPTY
SCTFSTEP EQU   SCTSDPTY
@NM00020 EQU   SCTSDPTY
@NM00019 EQU   SCTSDPTY
SCTNIUSL EQU   INSMSCT+92
@NM00018 EQU   INSMSCT+90
SCTMSSZE EQU   INSMSCT+88
SCTPCAT  EQU   INSMSCT+84
SCTLDSTB EQU   INSMSCT+80
SCTSRBT  EQU   INSMSCT+76
SCTMSADR EQU   INSMSCT+72
@NM00017 EQU   INSMSCT+71
SCTXBTTR EQU   INSMSCT+68
SCTJSCAT EQU   SCTSTYPE
SCTINITB EQU   SCTSTYPE
SCTSJFHK EQU   SCTSTYPE
SCTOUTMC EQU   SCTSTYPE
SCTINPUT EQU   SCTSTYPE
SCTGOSTP EQU   SCTSTYPE
@NM00016 EQU   INSMSCT+66
SCTNSMSG EQU   INSMSCT+65
@NM00015 EQU   INSMSCT+62
SCTRPACT EQU   INSMSCT+60
SCTSNAME EQU   INSMSCT+52
SCTSCLPC EQU   INSMSCT+44
@NM00014 EQU   INSMSCT+43
SCTADSTB EQU   INSMSCT+40
@NM00013 EQU   INSMSCT+36
@NM00012 EQU   INSMSCT+35
SCTAFACT EQU   INSMSCT+32
SCTDDNT  EQU   INSMSCT+28
@NM00011 EQU   INSMSCT+27
@NM00010 EQU   INSMSCT+23
SCTANSCT EQU   INSMSCT+20
@NM00009 EQU   INSMSCT+19
SCTAALOC EQU   INSMSCT+16
@NM00008 EQU   INSMSCT+15
SCTFSIOT EQU   INSMSCT+12
SCTLALOC EQU   INSMSCT+10
SCTSEXEC EQU   INSMSCT+8
SCTSTIME EQU   INSMSCT+5
INCMSSTS EQU   SCTSSTAT
SCTGRPH  EQU   SCTSSTAT
SCTKEY0  EQU   SCTSSTAT
SCTDORST EQU   SCTSSTAT
SCTNOCKP EQU   SCTSSTAT
SCTNORST EQU   SCTSSTAT
EACAUSER EQU   SCTSSTAT
EAADDRBT EQU   SCTSSTAT
SCTTBLID EQU   INSMSCT+3
SCTDISKA EQU   INSMSCT
RTVOLTUP EQU   KEYTABLE+368
SSREQTUP EQU   KEYTABLE+364
FRIDTUP  EQU   KEYTABLE+360
FUNCTUP  EQU   KEYTABLE+356
SHOLDTUP EQU   KEYTABLE+352
SUSERTUP EQU   KEYTABLE+348
RTORGTUP EQU   KEYTABLE+344
RTDSNTUP EQU   KEYTABLE+340
RTDDNTUP EQU   KEYTABLE+336
DIAGNTUP EQU   KEYTABLE+332
IPLTXTUP EQU   KEYTABLE+320
TRTCHTUP EQU   KEYTABLE+312
THRSHTUP EQU   KEYTABLE+308
STACKTUP EQU   KEYTABLE+304
SOWATUP  EQU   KEYTABLE+300
RSRVSTUP EQU   KEYTABLE+296
RSRVFTUP EQU   KEYTABLE+292
RECFMTUP EQU   KEYTABLE+288
PRTSPTUP EQU   KEYTABLE+284
PCISTUP  EQU   KEYTABLE+280
PCIRTUP  EQU   KEYTABLE+276
OPTCDTUP EQU   KEYTABLE+272
NCPTUP   EQU   KEYTABLE+268
MODETUP  EQU   KEYTABLE+264
LRECLTUP EQU   KEYTABLE+260
LIMCTTUP EQU   KEYTABLE+256
KYLENTUP EQU   KEYTABLE+252
INTVLTUP EQU   KEYTABLE+248
GNCPTUP  EQU   KEYTABLE+244
EROPTTUP EQU   KEYTABLE+240
DSORGTUP EQU   KEYTABLE+236
DENTUP   EQU   KEYTABLE+232
CPRITUP  EQU   KEYTABLE+228
CODETUP  EQU   KEYTABLE+224
BUFSZTUP EQU   KEYTABLE+220
BUFRQTUP EQU   KEYTABLE+216
BUFOUTUP EQU   KEYTABLE+212
BUFOFTUP EQU   KEYTABLE+208
BUFNOTUP EQU   KEYTABLE+204
BUFMXTUP EQU   KEYTABLE+200
BUFLTUP  EQU   KEYTABLE+196
BUFINTUP EQU   KEYTABLE+192
BLKSZTUP EQU   KEYTABLE+188
BFTEKTUP EQU   KEYTABLE+184
BFALNTUP EQU   KEYTABLE+180
DCBDDTUP EQU   KEYTABLE+176
DCBDSTUP EQU   KEYTABLE+172
UVRFYTUP EQU   KEYTABLE+168
UFOLDTUP EQU   KEYTABLE+164
UCSTUP   EQU   KEYTABLE+160
TERMTUP  EQU   KEYTABLE+156
QNAMETUP EQU   KEYTABLE+152
FCBAVTUP EQU   KEYTABLE+148
FCBIMTUP EQU   KEYTABLE+144
DUMMYTUP EQU   KEYTABLE+140
RETPDTUP EQU   KEYTABLE+136
EXPDTTUP EQU   KEYTABLE+132
PASPRTUP EQU   KEYTABLE+124
DSSEQTUP EQU   KEYTABLE+120
LABELTUP EQU   KEYTABLE+116
COPYSTUP EQU   KEYTABLE+112
OUTLMTUP EQU   KEYTABLE+104
SFMNOTUP EQU   KEYTABLE+100
SPGNMTUP EQU   KEYTABLE+96
SYSOUTUP EQU   KEYTABLE+92
PARALTUP EQU   KEYTABLE+88
UNCNTTUP EQU   KEYTABLE+84
UNITTUP  EQU   KEYTABLE+80
VLRDSTUP EQU   KEYTABLE+76
VLCNTTUP EQU   KEYTABLE+72
VLSEQTUP EQU   KEYTABLE+68
PRIVTTUP EQU   KEYTABLE+64
VLSERTUP EQU   KEYTABLE+60
TEXTUPRM EQU   TEXTUFLD+2
TEXTULEN EQU   TEXTUFLD
TEXTUNUM EQU   TEXTUNIT+2
TEXTUKEY EQU   TEXTUNIT
TXTPLEND EQU   TXTPLENT
TXTUPEND EQU   TXTUNITP
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RC00195 EQU   @RC00191
@RC00274 EQU   @RC00244
@RC00424 EQU   @RC00420
@ENDDATA EQU   *
         END   IEFDB411,(C'PLS1700',0603,74169)
