         TITLE 'IEFDB402 - DYNAMIC ALLOCATION ESTAE EXIT               *
                        '
IEFDB402   CSECT
*
* NOTE - REGISTER USAGE IN THESE STATEMENTS MUST AGREE WITH THE PLS/2
* PROCEDURE OPTIONS.
*
           BALR   12,0
           USING  *,12
           B      SKIPID                 SKIP MODULE ID
           DC     AL1(16)                LENGTH OF ID
           DC     C'IEFDB402  73.227'
SKIPID     DS     0H
           LA     11,12
           CR     0,11
           BNE    SETPTR                 BR IF SDWA EXISTS
           LR     11,2                   ADDR OF DEPARMS
           B      COMMON
SETPTR     L      11,0(1)                ADDR OF DEPARMS
COMMON     EQU    *
           USING  @DATD,11               DEPARMS HOLDS AUTO-STORAGE
*
JSCBDISP EQU 188
JSCBAOS1 EQU  72
JSCBAOS2 EQU 192
*SAVREG13 = R13;                       /*SAVE INPUT R13      @Z40FPPG*/
         LR    SAVREG13,R13                                     01S0039
*SAVREG14 = R14;                       /*SAVE RETURN ADDR            */
         LR    SAVREG14,R14                                     01S0040
*R13 = R11;                            /*ADDR OF SAVE AREA   @Z40FPPG*/
         LR    R13,R11                                          01S0041
*IF R0=12 THEN                         /*SDWA PRESENT                */
         C     R0,@CF00032                                      01S0042
         BNE   @RF00042                                         01S0042
*  SDWAPTR = 0;                        /*NO                          */
         SLR   SDWAPTR,SDWAPTR                                  01S0043
*ELSE                                                           01S0044
*  SDWAPTR = R1;                       /*YES, INIT MACRO'S BASE      */
         B     @RC00042                                         01S0044
@RF00042 LR    SDWAPTR,R1                                       01S0044
*RFY (R0,R1,R13,R14) UNRESTRICTED;                              01S0045
*                                                               01S0045
@RC00042 DS    0H                                               01S0046
* DO; /*MODESET  EXTKEY(SCHED)*/                                01S0046
*   SPKA (16); /*SET PSW KEY*/                                  01S0047
         LA    @10,16                                           01S0047
         SPKA  0(@10)                                           01S0047
* END; /*MODESET  EXTKEY(SCHED)*/               /*SCHED KEY FOR CHAIN
*                                                 MANIPULATION, ETC.
*      */                                                       01S0048
*IF DSQBADFC=ON                        /*DSAB FWD-CHAIN BAD          */
*  × DSQBADBC=ON THEN                  /*DSAB BACK-CHAIN BAD         */
         L     @10,DEJSCB(,R11)                                 01S0049
         L     @10,JSCDSABQ(,@10)                               01S0049
         TM    DSQBADFC(@10),B'10000000'                        01S0049
         BO    @RT00049                                         01S0049
         TM    DSQBADBC(@10),B'10000000'                        01S0049
         BNO   @RF00049                                         01S0049
@RT00049 DS    0H                                               01S0050
*  DO;                                                          01S0050
*/********************************************************************/
*/*                                                                  */
*/* SEGMENT NAME - FIXCHAIN                                          */
*/*                                                                  */
*/* DESCRIPTIVE NAME - FIX DSAB CHAIN                                */
*/*                                                                  */
*/* FUNCTION - IF BITS IN THE DSAB QDB INDICATE THAT EITHER THE      */
*/*            FORWARD OR THE BACK-CHAINS ARE INVALID, CORRECT THE   */
*/*            INVALID CHAIN.                                        */
*/*                                                                  */
*/* OPERATION -                                                      */
*/*            IF BIT DSQBADBC (IN THE QDB) IS ON, THE BACK CHAIN    */
*/*            WILL BE RECONSTRUCTED,                                */
*/*            OTHERWISE THE FORWARD CHAIN IS RECONSTRUCTED.         */
*/*            THIS ORDER IS MEANINGFUL - BOTH BITS, DSQBADBC AND    */
*/*            DSQBADFC, ARE ON IF MARK-NOT-IN-USE PROCESSING HAD    */
*/*            FINISHED ORDERING THE FORWARD CHAIN, BUT HAD NOT      */
*/*            YET BEGUN MANIUPLATING THE BACK CHAIN. THE            */
*/*            REORDERING IS THUS CORRECTLY COMPLETED HERE.          */
*/*                                                                  */
*/*                                                                  */
*/* INPUT -                                                          */
*/*        . QDB BITS INDICATING THE STATUS OF THE FORWARD AND       */
*/*          BACKWARD DSAB CHAINS                                    */
*/*        . QDB POINTERS TO THE FIRST/LAST DSAB'S ON THE CHAIN.     */
*/*                                                                  */
*/*                                                                  */
*/* OUTPUT -                                                         */
*/*         . CORRECTLY CHAINED DSAB'S                               */
*/*                                                                  */
*/*                                                                  */
*/********************************************************************/
*IF DSQBADBC=ON THEN                   /*BACK CHAIN INVALID          */
         L     @10,DEJSCB(,R11)                                 02S0051
         L     @10,JSCDSABQ(,@10)                               02S0051
         TM    DSQBADBC(@10),B'10000000'                        02S0051
         BNO   @RF00051                                         02S0051
*  DO;                                                          02S0052
*    SAVPTR = 0;                       /*BACK PTR FOR 1ST DSAB       */
         SLR   SAVPTR,SAVPTR                                    02S0053
*    DSABPTR = DSQFRSTP;               /*ADDR OF 1ST DSAB ON CHAIN   */
         L     DSABPTR,DSQFRSTP(,@10)                           02S0054
*    DO WHILE DSABPTR^=0;              /*LOOP THRU CHAIN             */
         B     @DE00055                                         02S0055
@DL00055 DS    0H                                               02S0056
*      DSABPTR->DSABBCHN = SAVPTR;     /*FIX BACK CHAIN              */
         ST    SAVPTR,DSABBCHN(,DSABPTR)                        02S0056
*      SAVPTR = DSABPTR;               /*BACK PTR FOR NEXT DSAB      */
         LR    SAVPTR,DSABPTR                                   02S0057
*      DSABPTR = DSABPTR->DSABFCHN;    /*NEXT DSAB TO FIX            */
         L     DSABPTR,DSABFCHN(,DSABPTR)                       02S0058
*    END;                                                       02S0059
@DE00055 LTR   DSABPTR,DSABPTR                                  02S0059
         BNZ   @DL00055                                         02S0059
*    DSQLASTP = SAVPTR;                /*FINALLY, FIX THE QDB        */
         L     @10,DEJSCB(,R11)                                 02S0060
         L     @10,JSCDSABQ(,@10)                               02S0060
         ST    SAVPTR,DSQLASTP(,@10)                            02S0060
*  END;                                                         02S0061
*ELSE                                  /*FORWARD CHAIN INVALID       */
*  DO;                                                          02S0062
         B     @RC00051                                         02S0062
@RF00051 DS    0H                                               02S0063
*    SAVPTR = 0;                       /*FWD PTR FOR LAST DSAB       */
         SLR   SAVPTR,SAVPTR                                    02S0063
*    DSABPTR = DSQLASTP;               /*ADDR OF LAST DSAB           */
         L     @10,DEJSCB(,R11)                                 02S0064
         L     @10,JSCDSABQ(,@10)                               02S0064
         L     DSABPTR,DSQLASTP(,@10)                           02S0064
*    DO WHILE DSABPTR^=0;              /*LOOP THRU CHAIN             */
         B     @DE00065                                         02S0065
@DL00065 DS    0H                                               02S0066
*      DSABPTR->DSABFCHN = SAVPTR;     /*FIX FORWARD CHAIN           */
         ST    SAVPTR,DSABFCHN(,DSABPTR)                        02S0066
*      SAVPTR = DSABPTR;               /*FWD CHAIN FOR NEXT DSAB     */
         LR    SAVPTR,DSABPTR                                   02S0067
*      DSABPTR = DSABPTR->DSABBCHN;    /*NEXT DSAB TO FIX            */
         L     DSABPTR,DSABBCHN(,DSABPTR)                       02S0068
*    END;                                                       02S0069
@DE00065 LTR   DSABPTR,DSABPTR                                  02S0069
         BNZ   @DL00065                                         02S0069
*    DSQFRSTP = SAVPTR;                /*FINALLY, FIX THE QDB        */
         L     @10,DEJSCB(,R11)                                 02S0070
         L     @10,JSCDSABQ(,@10)                               02S0070
         ST    SAVPTR,DSQFRSTP(,@10)                            02S0070
*  END;                                                         02S0071
*    DSQBADFC = OFF;                   /*SHOW CHAIN NOW OK           */
@RC00051 L     @10,DEJSCB(,R11)                                 01S0072
         L     @10,JSCDSABQ(,@10)                               01S0072
         NI    DSQBADFC(@10),B'01111111'                        01S0072
*    DSQBADBC = OFF;                                            01S0073
         NI    DSQBADBC(@10),B'01111111'                        01S0073
*  END;                                                         01S0074
*                                                               01S0074
*CALL IEFDB418 (DEPARMS);              /*CALL NORMALOC ERR PROC.     */
*                                                               01S0075
@RF00049 ST    R11,@AL00001                                     01S0075
         L     @15,@CV00058                                     01S0075
         LA    @01,@AL00001                                     01S0075
         BALR  @14,@15                                          01S0075
*IF DSQFRSTP^=0 THEN                   /*DSAB'S PRESENT              */
         SLR   @10,@10                                          01S0076
         L     @07,DEJSCB(,R11)                                 01S0076
         L     @07,JSCDSABQ(,@07)                               01S0076
         L     @07,DSQFRSTP(,@07)                               01S0076
         CR    @07,@10                                          01S0076
         BE    @RF00076                                         01S0076
*  DSQFRSTP->DSABSIOT=0;               /*FORCE RE-READ OF SWA BLOCKS */
*                                                               01S0077
         ST    @10,DSABSIOT(,@07)                               01S0077
*IF DETCTIOP^=0 & DETCTIOL^=0 THEN     /*TCT TIOT ENTRY PASSED       */
@RF00076 SLR   @10,@10                                          01S0078
         L     @07,DETCTIOP(,R11)                               01S0078
         CR    @07,@10                                          01S0078
         BE    @RF00078                                         01S0078
         L     @04,DETCTIOL(,R11)                               01S0078
         CR    @04,@10                                          01S0078
         BE    @RF00078                                         01S0078
*  DO;                                 /*FREE THE ENTRY              */
*    RFY (R0,R1) RSTD;                                          01S0080
*    R0 = DETCTIOL;                    /*SET LENGTH, SUBPOOL         */
         LR    R0,@04                                           01S0081
*    R1 = DETCTIOP;                    /*ADDR OF ENTRY               */
         LR    R1,@07                                           01S0082
*    GEN(FREEMAIN R,LV=(0),A=(1));                              01S0083
         FREEMAIN R,LV=(0),A=(1)
*    RFY (R0,R1) UNRSTD;                                        01S0084
*  END;                                                         01S0085
*                                                               01S0085
*IF TIOTNQSW=OFF                       /*TIOT ENQ DONE BY SVC 99     */
*  & DETDQLST^=(DETDQLST&&DETDQLST) THEN /*AND LIST FORM AVAILABLE   */
@RF00078 L     @10,DEALFMAP(,R11)                               01S0086
         TM    TIOTNQSW(@10),B'00000100'                        01S0086
         BNZ   @RF00086                                         01S0086
         MVC   @TS00001(16),DETDQLST(R11)                       01S0086
         XC    @TS00001(16),DETDQLST(R11)                       01S0086
         CLC   DETDQLST(16,R11),@TS00001                        01S0086
         BE    @RF00086                                         01S0086
*  DO;                                                          01S0087
*    RFY (R1) RSTD;                                             01S0088
*    R1 = ADDR(DETDQLST);              /*PTR TO DEQ LIST FORM        */
         LA    R1,DETDQLST(,R11)                                01S0089
*    GEN(DEQ (,,,,),RET=HAVE,MF=(E,(1)) ); /*DEQ FROM TIOT - USE
*                                            RET=HAVE IN CASE   01S0090
*                                            IEFDB400 LOST CONTROL
*                                            BEFORE ENQ WAS ISSUED   */
         DEQ (,,,,),RET=HAVE,MF=(E,(1))
*    RFY (R1) UNRSTD;                                           01S0091
*  END;                                                         01S0092
*                                                               01S0092
*IF DECPYLOC^=0 & DECPYLEN^=0 THEN     /*COPY OF PARM LIST TO BE FREED*
@RF00086 SLR   @10,@10                                          01S0093
         L     @07,DECPYLOC(,R11)                               01S0093
         CR    @07,@10                                          01S0093
         BE    @RF00093                                         01S0093
         L     @04,DECPYLEN(,R11)                               01S0093
         CR    @04,@10                                          01S0093
         BE    @RF00093                                         01S0093
*  DO;                                                          01S0094
*    RFY(R0,R1) RSTD;                                           01S0095
*    R0 = DECPYLEN;                          /*SET UP R0 FOR FREEMAIN*/
         LR    R0,@04                                           01S0096
*    R1 = DECPYLOC;                          /*R1 PTS TO AREA TO FREE*/
         LR    R1,@07                                           01S0097
*    GEN(FREEMAIN R,LV=(0),A=(1) );                             01S0098
         FREEMAIN R,LV=(0),A=(1)
*    RFY (R0,R1) UNRSTD;                                        01S0099
*  END;                                                         01S0100
*                                                               01S0100
* DO; /*MODESET  KEYADDR(KEY0)*/                                01S0101
@RF00093 DS    0H                                               01S0102
*   SPKA (KEY0); /*SET PSW KEY*/                                01S0102
         L     @10,KEY0                                         01S0102
         SPKA  0(@10)                                           01S0102
* END; /*MODESET  KEYADDR(KEY0)*/               /*END USE OF SCHED KEY
*      */                                                       01S0103
*                                                               01S0103
*R13 = SAVREG13;                       /*RESTORE INPUT R13   @Z40FPPG*/
         LR    R13,SAVREG13                                     01S0104
*GOTO SAVREG14;                        /*RETURN TO CALLER            */
         BR    SAVREG14                                         01S0105
*END IEFDB402                                                   01S0106
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.      *
*/*%INCLUDE SYSLIB  (ESTADATA)                                        *
*/*%INCLUDE SYSLIB  (IEFZB4D9)                                        *
*/*%INCLUDE SYSLIB  (IHASDWA )                                        *
*/*%INCLUDE SYSLIB  (IHADSAB )                                        *
*/*%INCLUDE SYSLIB  (IHAQDB  )                                        *
*/*%INCLUDE SYSLIB  (IEFZB4D5)                                        *
*/*%INCLUDE SYSLIB  (IEZJSCB )                                        *
*/*%INCLUDE SYSLIB  (IEFZB4D7)                                        *
*/*%INCLUDE SYSLIB  (FIXCHAIN)                                        *
*;                                                              01S0106
@DATA    DS    0H
@DATD    DSECT
         DS    0F
@SA00001 DS    18F
@AL00001 DS    1A
IEFDB402 CSECT
         DS    0F
@CF00032 DC    F'12'
@DATD    DSECT
         DS    0D
QDBPTR   DS    A
TCBJSCB  DS    A
@TS00001 DS    CL16
IEFDB402 CSECT
         NOPR  ((@ENDDATD-@DATD)/201*16)
         DS    0F
@SIZDATD DC    AL1(230)
         DC    AL3(@ENDDATD-@DATD)
@CV00058 DC    V(IEFDB418)
         DS    0D
KEY0     DC    F'0'
IEFDB402 CSECT
         DS   0H
PATCHLOC DC (50)X'00'
@DATD    DSECT
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
IEFDB402 CSECT
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
SDWAPTR  EQU   @07
SAVREG14 EQU   @06
SAVREG13 EQU   @05
DSABPTR  EQU   @02
SAVPTR   EQU   @03
R0       EQU   @00
R1       EQU   @01
R11      EQU   @11
R13      EQU   @13
R14      EQU   @14
R15      EQU   @15
R2       EQU   @02
DEPARMS  EQU   0
DEALFMAP EQU   DEPARMS+200
DEJSCB   EQU   DEPARMS+220
DECPYLOC EQU   DEPARMS+224
DECPYLEN EQU   DEPARMS+228
DENQRETN EQU   DEPARMS+232
DEDMYEPA EQU   DEPARMS+240
DEDMYAS  EQU   DEPARMS+260
DETDQLST EQU   DEPARMS+280
DETCTIOP EQU   DEPARMS+296
DETCTIOL EQU   DEPARMS+300
SDWA     EQU   0
SDWAFIOB EQU   SDWA+4
SDWAABCC EQU   SDWAFIOB
SDWACMPF EQU   SDWAABCC
SDWACTL1 EQU   SDWA+8
SDWACMKA EQU   SDWACTL1
SDWAMWPA EQU   SDWACTL1+1
SDWAPMKA EQU   SDWACTL1+4
SDWACTL2 EQU   SDWA+16
SDWACMKP EQU   SDWACTL2
SDWAMWPP EQU   SDWACTL2+1
SDWAPMKP EQU   SDWACTL2+4
SDWAGRSV EQU   SDWA+24
SDWANAME EQU   SDWA+88
SDWAEC1  EQU   SDWA+104
SDWAEMK1 EQU   SDWAEC1
SDWAMWP1 EQU   SDWAEC1+1
SDWAINT1 EQU   SDWAEC1+2
SDWANXT1 EQU   SDWAEC1+4
SDWAAEC1 EQU   SDWA+112
SDWAILC1 EQU   SDWAAEC1+1
SDWAINC1 EQU   SDWAAEC1+2
SDWAICD1 EQU   SDWAINC1+1
SDWAEC2  EQU   SDWA+120
SDWAEMK2 EQU   SDWAEC2
SDWAMWP2 EQU   SDWAEC2+1
SDWAINT2 EQU   SDWAEC2+2
SDWANXT2 EQU   SDWAEC2+4
SDWAAEC2 EQU   SDWA+128
SDWAILC2 EQU   SDWAAEC2+1
SDWAINC2 EQU   SDWAAEC2+2
SDWAICD2 EQU   SDWAINC2+1
SDWASRSV EQU   SDWA+136
SDWAIDNT EQU   SDWA+200
SDWAMCH  EQU   SDWA+204
SDWASTCK EQU   SDWAMCH
SDWAMCHI EQU   SDWAMCH+8
SDWAMCHS EQU   SDWAMCHI
SDWAMCHD EQU   SDWAMCHI+1
SDWARSR1 EQU   SDWAMCH+12
SDWARSR2 EQU   SDWAMCH+13
SDWAFLGS EQU   SDWA+232
SDWAERRA EQU   SDWAFLGS
SDWAERRB EQU   SDWAFLGS+1
SDWAERRC EQU   SDWAFLGS+2
SDWAERRD EQU   SDWAFLGS+3
SDWAIOFS EQU   SDWA+238
SDWACPUA EQU   SDWA+248
SDWAPARQ EQU   SDWA+252
SDWAACF2 EQU   SDWAPARQ+1
SDWAACF3 EQU   SDWAPARQ+2
SDWAACF4 EQU   SDWAPARQ+3
SDWALKWA EQU   SDWA+256
SDWALKWS EQU   SDWALKWA
SDWARECP EQU   SDWA+292
SDWASNPA EQU   SDWA+320
SDWADUMP EQU   SDWASNPA
SDWADPFS EQU   SDWADUMP+1
SDWADDAT EQU   SDWASNPA+4
SDWASDAT EQU   SDWADDAT
SDWAPDAT EQU   SDWADDAT+2
SDWADPSA EQU   SDWA+328
SDWADPSL EQU   SDWADPSA
SDWARA   EQU   SDWA+400
SDWADPVA EQU   SDWARA+2
DSAB     EQU   0
DSABFCHN EQU   DSAB+4
DSABBCHN EQU   DSAB+8
DSABGIDP EQU   DSAB+24
DSABANMP EQU   DSAB+28
DSABORG  EQU   DSAB+32
DSABORG1 EQU   DSABORG
DSABORG2 EQU   DSABORG+1
DSABFLG1 EQU   DSAB+34
DSABFLG2 EQU   DSAB+35
DSABFLG3 EQU   DSAB+36
DSABFLG4 EQU   DSAB+37
DSABSIOT EQU   DSAB+64
DSABANMI EQU   0
DSABGIDL EQU   0
QDB      EQU   0
IEZJSCB  EQU   0
JSCBSEC1 EQU   IEZJSCB+188
JSCHPCE  EQU   JSCBSEC1+4
JSCBDCB  EQU   JSCBSEC1+36
JSCBOPTS EQU   JSCBSEC1+48
JSCBSWT1 EQU   JSCBSEC1+55
JSCBWTP  EQU   JSCBSEC1+64
JSCBWTFG EQU   JSCBWTP
JSCBEND1 EQU   IEZJSCB+260
ALFNCMAP EQU   0
INPUTSW  EQU   ALFNCMAP
TIOTNQSW EQU   INPUTSW+2
PROCESSW EQU   ALFNCMAP+6
ERRPROSW EQU   PROCESSW
DSABQDB  EQU   QDB
DSQFRSTP EQU   DSABQDB+12
DSQBADBC EQU   DSQFRSTP
DSQLASTP EQU   DSABQDB+16
DSQBADFC EQU   DSQLASTP
JSCBSEC2 EQU   JSCBEND1
JSCBSEC3 EQU   JSCBEND1
JSCBJCT  EQU   JSCBSEC3
JSCBJCTA EQU   JSCBJCT+1
JSCBASID EQU   JSCBSEC3+8
JSCBFBYT EQU   JSCBSEC3+10
JSCBJNL  EQU   JSCBSEC3+28
JSCBJJSB EQU   JSCBJNL
JSCBSUB  EQU   JSCBSEC3+40
JSCDSABQ EQU   JSCBSEC3+60
JSCSCT   EQU   JSCBSEC3+68
JSCRSV45 EQU   JSCBSEC3+112
JSCRSV46 EQU   JSCRSV45
JSCRSV47 EQU   JSCRSV45+2
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
JSCBEND3 EQU   JSCBSEC3+120
JSCRSV52 EQU   JSCBSEC3+116
JSCRSV51 EQU   JSCRSV47+1
JSCRSV50 EQU   JSCRSV47
JSCRSV49 EQU   JSCRSV46+1
JSCRSV48 EQU   JSCRSV46
JSCRSV44 EQU   JSCBSEC3+108
JSCRSV43 EQU   JSCBSEC3+104
JSCRSV42 EQU   JSCBSEC3+100
JSCBASWA EQU   JSCBSEC3+96
JSCBUFPT EQU   JSCBSEC3+92
JSCBACT  EQU   JSCBSEC3+88
JSCBSWSP EQU   JSCBSEC3+87
JSCRSV33 EQU   JSCBSEC3+86
JSCDDNUM EQU   JSCBSEC3+84
JSCRSV53 EQU   JSCBSEC3+82
JSCDDNNO EQU   JSCBSEC3+80
JSCBVATA EQU   JSCBSEC3+76
JSCTMCOR EQU   JSCBSEC3+72
JSCSCTP  EQU   JSCSCT+1
JSCRSV55 EQU   JSCSCT
JSCRSV54 EQU   JSCBSEC3+64
JSCBSSIB EQU   JSCBSEC3+56
JSCBFRBA EQU   JSCBSEC3+48
JSCRSV28 EQU   JSCBSEC3+46
JSCBSONO EQU   JSCBSEC3+44
JSCBSUBA EQU   JSCBSUB+1
JSCRSV31 EQU   JSCBSUB
JSCBSMLR EQU   JSCBSEC3+36
JSCBJNLR EQU   JSCBSEC3+32
JSCBJNLA EQU   JSCBJNL+1
JSCBJSBT EQU   JSCBJJSB
JSCBJSBX EQU   JSCBJJSB
JSCBJSBA EQU   JSCBJJSB
JSCBJSBI EQU   JSCBJJSB
@NM00061 EQU   JSCBJJSB
JSCBJNLE EQU   JSCBJJSB
JSCBJNLF EQU   JSCBJJSB
JSCBJNLN EQU   JSCBJJSB
@NM00060 EQU   JSCBSEC3+24
JSCBJRBA EQU   JSCBSEC3+16
JSCBIECB EQU   JSCBSEC3+12
JSCBRV08 EQU   JSCBSEC3+11
JSCBRV07 EQU   JSCBFBYT
JSCBRV06 EQU   JSCBFBYT
JSCBRV05 EQU   JSCBFBYT
JSCBRV04 EQU   JSCBFBYT
JSCBRV03 EQU   JSCBFBYT
JSCBRV02 EQU   JSCBFBYT
JSCBADSP EQU   JSCBFBYT
JSCBRV01 EQU   JSCBFBYT
JSCBTJID EQU   JSCBASID
JSCBPSCB EQU   JSCBSEC3+4
JSCJCTP  EQU   JSCBJCTA
JSCRSV24 EQU   JSCBJCT
JSCBEND2 EQU   JSCBSEC2
@NM00057 EQU   DSABQDB+24
DSQBDSP  EQU   DSABQDB+22
DSQFDSP  EQU   DSABQDB+20
DSQNELMS EQU   DSABQDB+8
DSQDBLN  EQU   DSABQDB+6
DSQATTRS EQU   DSABQDB+4
DSQDBID  EQU   DSABQDB
@NM00064 EQU   PROCESSW+1
DYNMSSOK EQU   PROCESSW+1
HSKPDQSW EQU   PROCESSW+1
DISMSGSW EQU   PROCESSW+1
USERERSW EQU   PROCESSW+1
EPALSISW EQU   PROCESSW+1
EPASCTSW EQU   PROCESSW+1
EPAJCTSW EQU   PROCESSW
FRRPERSW EQU   PROCESSW
DCBSPCSW EQU   PROCESSW
NQEXCLSW EQU   PROCESSW
UNALOCSW EQU   ERRPROSW
DEQDSNSW EQU   ERRPROSW
COPYSW   EQU   PROCESSW
DYNMSSTM EQU   PROCESSW
@NM00063 EQU   INPUTSW+3
PCATINIT EQU   INPUTSW+3
UNITDEVT EQU   INPUTSW+3
MOUNTSW  EQU   INPUTSW+2
CATLOGSW EQU   INPUTSW+2
OFFLINSW EQU   INPUTSW+2
WTUNTSW  EQU   INPUTSW+2
NORESSW  EQU   INPUTSW+2
WTDSNSW  EQU   INPUTSW+2
WTVOLSW  EQU   INPUTSW+2
@NM00062 EQU   INPUTSW
JOBRLSYS EQU   INPUTSW
NOMONTSW EQU   INPUTSW
NOCNVTSW EQU   INPUTSW
ONCNVTSW EQU   INPUTSW
JSCBCSCB EQU   JSCBSEC1+68
JSCBPMG  EQU   JSCBWTP+2
JSCBWTSP EQU   JSCBWTP+1
JSCRSV23 EQU   JSCBWTFG
JSCRSV22 EQU   JSCBWTFG
JSCRSV21 EQU   JSCBWTFG
JSCRSV20 EQU   JSCBWTFG
JSCRSV19 EQU   JSCBWTFG
JSCRSV18 EQU   JSCBWTFG
JSCBRET  EQU   JSCBWTFG
JSCBIOFG EQU   JSCBWTFG
@NM00059 EQU   JSCBSEC1+60
JSCBQMPI EQU   JSCBSEC1+56
JSCBPMSG EQU   JSCBSWT1
JSCRSV16 EQU   JSCBSWT1
JSCRSV15 EQU   JSCBSWT1
JSCRSV14 EQU   JSCBSWT1
JSCRSV13 EQU   JSCBSWT1
JSCRSV12 EQU   JSCBSWT1
JSCRSV11 EQU   JSCBSWT1
JSCBPASS EQU   JSCBSWT1
JSCBTTTR EQU   JSCBSEC1+52
JSCRSV10 EQU   JSCBSEC1+49
JSCBAUTH EQU   JSCBOPTS
JSCSIOTS EQU   JSCBOPTS
JSCRSV08 EQU   JSCBOPTS
JSCRSV07 EQU   JSCBOPTS
JSCRSV06 EQU   JSCBOPTS
JSCBLONG EQU   JSCBOPTS
JSCRSV05 EQU   JSCBOPTS
JSCRSV04 EQU   JSCBOPTS
JSCBSECB EQU   JSCBSEC1+44
JSCRSV03 EQU   JSCBSEC1+41
JSCBSTEP EQU   JSCBSEC1+40
JSCBDCBA EQU   JSCBDCB+1
JSCRSV02 EQU   JSCBDCB
JSCBID   EQU   JSCBSEC1+32
JSCBDBTB EQU   JSCBSEC1+28
JSCBIJSC EQU   JSCBSEC1+24
JSCBTCBP EQU   JSCBSEC1+20
JSCBPCC  EQU   JSCBSEC1+16
JSCBTCP  EQU   JSCBSEC1+12
JSCBSHR  EQU   JSCBSEC1+8
JSCHPCEA EQU   JSCHPCE+1
JSCRSV32 EQU   JSCHPCE
JSCRSV01 EQU   JSCBSEC1
@NM00058 EQU   IEZJSCB
QDBRV002 EQU   QDB+28
QDBPRDS  EQU   QDB+26
QDBPRSZ  EQU   QDB+24
QDBBPTDS EQU   QDB+22
QDBFPTDS EQU   QDB+20
QDBLELMP EQU   QDB+16
QDBFELMP EQU   QDB+12
QDBNELMS EQU   QDB+8
QDBRV001 EQU   QDB+6
QDBATTR  EQU   QDB+4
QDBQDB   EQU   QDB
DSABGRID EQU   DSABGIDL+4
DSABLLEN EQU   DSABGIDL
DSABANAM EQU   DSABANMI+1
DSABANML EQU   DSABANMI
DSABRS04 EQU   DSAB+68
DSABRS03 EQU   DSAB+62
DSABDCBM EQU   DSAB+56
DSABSSCM EQU   DSAB+52
DSABSSNM EQU   DSAB+48
DSABPTTR EQU   DSAB+44
DSABTCBP EQU   DSAB+40
DSABRS02 EQU   DSAB+38
@NM00056 EQU   DSABFLG4
DSABCKSI EQU   DSABFLG4
DSABCKVL EQU   DSABFLG4
DSABCKDS EQU   DSABFLG4
@NM00055 EQU   DSABFLG3
DSABJSCT EQU   DSABFLG3
DSABCATL EQU   DSABFLG3
DSABVMSC EQU   DSABFLG3
DSABVAM  EQU   DSABFLG3
DSABPASS EQU   DSABFLG3
DSABDEFR EQU   DSABFLG3
@NM00054 EQU   DSABFLG2
DSABUNAL EQU   DSABFLG2
DSABIRM  EQU   DSABFLG2
DSABOPEN EQU   DSABFLG2
DSABNUSE EQU   DSABFLG1
DSABCATM EQU   DSABFLG1
DSABPCAT EQU   DSABFLG1
DSABDCAT EQU   DSABFLG1
DSABCONV EQU   DSABFLG1
DSABDCNV EQU   DSABFLG1
DSABPALC EQU   DSABFLG1
DSABDALC EQU   DSABFLG1
@NM00053 EQU   DSABORG2
DSABTR   EQU   DSABORG2
DSABAM   EQU   DSABORG2
@NM00052 EQU   DSABORG2
DSABTQ   EQU   DSABORG2
DSABTX   EQU   DSABORG2
DSABGS   EQU   DSABORG2
DSABU    EQU   DSABORG1
DSABPO   EQU   DSABORG1
DSABMQ   EQU   DSABORG1
DSABCQ   EQU   DSABORG1
DSABCX   EQU   DSABORG1
DSABDA   EQU   DSABORG1
DSABPS   EQU   DSABORG1
DSABIS   EQU   DSABORG1
DSABSSVA EQU   DSAB+21
DSABRS01 EQU   DSAB+20
DSABTIOT EQU   DSAB+16
DSABOPCT EQU   DSAB+14
DSABLNTH EQU   DSAB+12
DSABID   EQU   DSAB
@NM00051 EQU   SDWA+512
SDWAVRA  EQU   SDWARA+4
SDWAURAL EQU   SDWARA+3
@NM00050 EQU   SDWADPVA
SDWAEBC  EQU   SDWADPVA
SDWAHEX  EQU   SDWADPVA
SDWAVRAL EQU   SDWARA
@NM00049 EQU   SDWA+396
SDWACOMP EQU   SDWA+392
SDWARCPL EQU   SDWA+364
@NM00048 EQU   SDWADPSA+32
SDWATO4  EQU   SDWADPSL+28
SDWAFRM4 EQU   SDWADPSL+24
SDWATO3  EQU   SDWADPSL+20
SDWAFRM3 EQU   SDWADPSL+16
SDWATO2  EQU   SDWADPSL+12
SDWAFRM2 EQU   SDWADPSL+8
SDWATO1  EQU   SDWADPSL+4
SDWAFRM1 EQU   SDWADPSL
@NM00047 EQU   SDWADDAT+3
@NM00046 EQU   SDWAPDAT
SDWAUSPL EQU   SDWAPDAT
SDWADPSW EQU   SDWAPDAT
SDWATJPA EQU   SDWAPDAT
SDWATLPA EQU   SDWAPDAT
SDWADREG EQU   SDWAPDAT
SDWADSAH EQU   SDWAPDAT
SDWADSAS EQU   SDWAPDAT
@NM00045 EQU   SDWADDAT+1
@NM00044 EQU   SDWASDAT
SDWAQQS  EQU   SDWASDAT
SDWACBS  EQU   SDWASDAT
SDWAGTF  EQU   SDWASDAT
SDWASWA  EQU   SDWASDAT
SDWALSQA EQU   SDWASDAT
SDWASQA  EQU   SDWASDAT
SDWANUC  EQU   SDWASDAT
@NM00043 EQU   SDWADUMP+2
@NM00042 EQU   SDWADPFS
SDWASLST EQU   SDWADPFS
@NM00041 EQU   SDWADPFS
SDWADLST EQU   SDWADPFS
SDWADPT  EQU   SDWADPFS
SDWADPID EQU   SDWADUMP
SDWADPLA EQU   SDWA+316
SDWAREXN EQU   SDWARECP+16
SDWACSCT EQU   SDWARECP+8
SDWAMODN EQU   SDWARECP
@NM00040 EQU   SDWA+290
SDWAASID EQU   SDWA+288
SDWATALW EQU   SDWALKWS+28
SDWATDLW EQU   SDWALKWS+24
SDWATNLW EQU   SDWALKWS+20
SDWAAPLW EQU   SDWALKWS+16
SDWAIPLW EQU   SDWALKWS+12
SDWAILLW EQU   SDWALKWS+8
SDWAIULW EQU   SDWALKWS+4
SDWAICLW EQU   SDWALKWS
SDWAFLLK EQU   SDWAACF4
SDWACMS  EQU   SDWAACF4
SDWAOPTM EQU   SDWAACF4
SDWATADB EQU   SDWAACF4
SDWATDNB EQU   SDWAACF4
SDWATNCB EQU   SDWAACF4
SDWAILCH EQU   SDWAACF4
SDWAIUCB EQU   SDWAACF4
SDWAICAT EQU   SDWAACF3
SDWAIPRG EQU   SDWAACF3
SDWASALL EQU   SDWAACF3
SDWAASMP EQU   SDWAACF3
SDWADISP EQU   SDWAACF3
@NM00039 EQU   SDWAACF3
@NM00038 EQU   SDWAACF2
SDWAFREE EQU   SDWAACF2
SDWAUPRG EQU   SDWAACF2
@NM00037 EQU   SDWAACF2
SDWASPIN EQU   SDWAACF2
@NM00036 EQU   SDWAACF2
SDWARCRD EQU   SDWAACF2
SDWARCDE EQU   SDWAPARQ
SDWALCPU EQU   SDWACPUA+2
@NM00035 EQU   SDWACPUA
SDWARECA EQU   SDWA+244
SDWARTYA EQU   SDWA+240
@NM00034 EQU   SDWA+239
@NM00033 EQU   SDWAIOFS
SDWANIOP EQU   SDWAIOFS
SDWANOIO EQU   SDWAIOFS
SDWAIOHT EQU   SDWAIOFS
SDWAIOQR EQU   SDWAIOFS
SDWAFMID EQU   SDWA+236
@NM00032 EQU   SDWAERRD
SDWAMCIV EQU   SDWAERRD
SDWARPIV EQU   SDWAERRD
SDWAMABD EQU   SDWAERRD
SDWACTS  EQU   SDWAERRD
SDWASTAE EQU   SDWAERRD
SDWANRBE EQU   SDWAERRD
SDWACLUP EQU   SDWAERRD
@NM00031 EQU   SDWAERRC
SDWAEAS  EQU   SDWAERRC
SDWAPERC EQU   SDWAERRC
SDWAIRB  EQU   SDWAERRC
SDWASTAI EQU   SDWAERRC
SDWASTAF EQU   SDWAERRC
SDWASRBM EQU   SDWAERRB
SDWALDIS EQU   SDWAERRB
SDWAENRB EQU   SDWAERRB
SDWATYP1 EQU   SDWAERRB
@NM00030 EQU   SDWAERRB
SDWAPGIO EQU   SDWAERRA
SDWATEXC EQU   SDWAERRA
SDWASVCE EQU   SDWAERRA
SDWAABTM EQU   SDWAERRA
SDWASVCD EQU   SDWAERRA
SDWARKEY EQU   SDWAERRA
SDWAPCHK EQU   SDWAERRA
SDWAMCHK EQU   SDWAERRA
SDWATIME EQU   SDWAMCH+20
SDWARFSA EQU   SDWAMCH+16
@NM00029 EQU   SDWAMCH+14
SDWAVEQR EQU   SDWARSR2
SDWAPGFX EQU   SDWARSR2
SDWAFLSQ EQU   SDWARSR2
SDWAFSQA EQU   SDWARSR2
SDWANUCL EQU   SDWARSR2
SDWASPER EQU   SDWARSR2
SDWAINTC EQU   SDWARSR2
SDWAOFLN EQU   SDWARSR2
SDWACHNG EQU   SDWARSR1
SDWAMSER EQU   SDWARSR1
@NM00028 EQU   SDWARSR1
SDWACPID EQU   SDWAMCH+10
SDWATERR EQU   SDWAMCHD
SDWAFPRX EQU   SDWAMCHD
SDWAINSF EQU   SDWAMCHD
SDWAACR  EQU   SDWAMCHD
SDWASCK  EQU   SDWAMCHD
SDWAPSWU EQU   SDWAMCHD
SDWAREGU EQU   SDWAMCHD
SDWASKYF EQU   SDWAMCHD
@NM00027 EQU   SDWAMCHS
SDWARSRF EQU   SDWAMCHS
SDWARSRC EQU   SDWAMCHS
SDWAINVP EQU   SDWAMCHS
SDWATSVL EQU   SDWAMCHS
SDWARCDF EQU   SDWAMCHS
SDWASRVL EQU   SDWAMCHS
SDWASCKE EQU   SDWASTCK+4
SDWASCKB EQU   SDWASTCK
SDWALNTH EQU   SDWAIDNT+1
SDWASPID EQU   SDWAIDNT
SDWASR15 EQU   SDWASRSV+60
SDWASR14 EQU   SDWASRSV+56
SDWASR13 EQU   SDWASRSV+52
SDWASR12 EQU   SDWASRSV+48
SDWASR11 EQU   SDWASRSV+44
SDWASR10 EQU   SDWASRSV+40
SDWASR09 EQU   SDWASRSV+36
SDWASR08 EQU   SDWASRSV+32
SDWASR07 EQU   SDWASRSV+28
SDWASR06 EQU   SDWASRSV+24
SDWASR05 EQU   SDWASRSV+20
SDWASR04 EQU   SDWASRSV+16
SDWASR03 EQU   SDWASRSV+12
SDWASR02 EQU   SDWASRSV+8
SDWASR01 EQU   SDWASRSV+4
SDWASR00 EQU   SDWASRSV
SDWATRN2 EQU   SDWAAEC2+4
SDWAIPC2 EQU   SDWAICD2
SDWAIMC2 EQU   SDWAICD2
SDWAIPR2 EQU   SDWAICD2
@NM00026 EQU   SDWAINC2
@NM00025 EQU   SDWAILC2
SDWAIL2  EQU   SDWAILC2
@NM00024 EQU   SDWAILC2
@NM00023 EQU   SDWAAEC2
SDWAADD2 EQU   SDWANXT2+1
@NM00022 EQU   SDWANXT2
@NM00021 EQU   SDWAEC2+3
SDWASGN2 EQU   SDWAINT2
SDWAEXP2 EQU   SDWAINT2
SDWADEC2 EQU   SDWAINT2
SDWAFPO2 EQU   SDWAINT2
SDWACC2  EQU   SDWAINT2
@NM00020 EQU   SDWAINT2
SDWAPGM2 EQU   SDWAMWP2
SDWAWAT2 EQU   SDWAMWP2
SDWAMCK2 EQU   SDWAMWP2
SDWAECT2 EQU   SDWAMWP2
SDWAKEY2 EQU   SDWAMWP2
SDWAEXT2 EQU   SDWAEMK2
SDWAIO2  EQU   SDWAEMK2
SDWATRM2 EQU   SDWAEMK2
@NM00019 EQU   SDWAEMK2
SDWAPER2 EQU   SDWAEMK2
@NM00018 EQU   SDWAEMK2
SDWATRAN EQU   SDWAAEC1+4
SDWAIPC1 EQU   SDWAICD1
SDWAIMC1 EQU   SDWAICD1
SDWAIPR1 EQU   SDWAICD1
@NM00017 EQU   SDWAINC1
@NM00016 EQU   SDWAILC1
SDWAIL1  EQU   SDWAILC1
@NM00015 EQU   SDWAILC1
@NM00014 EQU   SDWAAEC1
SDWAADD1 EQU   SDWANXT1+1
@NM00013 EQU   SDWANXT1
@NM00012 EQU   SDWAEC1+3
SDWASGN1 EQU   SDWAINT1
SDWAEXP1 EQU   SDWAINT1
SDWADEC1 EQU   SDWAINT1
SDWAFPO1 EQU   SDWAINT1
SDWACC1  EQU   SDWAINT1
@NM00011 EQU   SDWAINT1
SDWAPGM1 EQU   SDWAMWP1
SDWAWAT1 EQU   SDWAMWP1
SDWAMCK1 EQU   SDWAMWP1
SDWAECT1 EQU   SDWAMWP1
SDWAKEY1 EQU   SDWAMWP1
SDWAEXT1 EQU   SDWAEMK1
SDWAIO1  EQU   SDWAEMK1
SDWATRM1 EQU   SDWAEMK1
@NM00010 EQU   SDWAEMK1
SDWAPER1 EQU   SDWAEMK1
@NM00009 EQU   SDWAEMK1
SDWAIOBR EQU   SDWA+100
SDWAEPA  EQU   SDWA+96
@NM00008 EQU   SDWANAME+4
SDWARBAD EQU   SDWANAME
SDWAGR15 EQU   SDWAGRSV+60
SDWAGR14 EQU   SDWAGRSV+56
SDWAGR13 EQU   SDWAGRSV+52
SDWAGR12 EQU   SDWAGRSV+48
SDWAGR11 EQU   SDWAGRSV+44
SDWAGR10 EQU   SDWAGRSV+40
SDWAGR09 EQU   SDWAGRSV+36
SDWAGR08 EQU   SDWAGRSV+32
SDWAGR07 EQU   SDWAGRSV+28
SDWAGR06 EQU   SDWAGRSV+24
SDWAGR05 EQU   SDWAGRSV+20
SDWAGR04 EQU   SDWAGRSV+16
SDWAGR03 EQU   SDWAGRSV+12
SDWAGR02 EQU   SDWAGRSV+8
SDWAGR01 EQU   SDWAGRSV+4
SDWAGR00 EQU   SDWAGRSV
SDWANXTP EQU   SDWACTL2+5
SDWASGP  EQU   SDWAPMKP
SDWAEUP  EQU   SDWAPMKP
SDWADOP  EQU   SDWAPMKP
SDWAFPP  EQU   SDWAPMKP
SDWACCP  EQU   SDWAPMKP
SDWAILP  EQU   SDWAPMKP
SDWAINTP EQU   SDWACTL2+2
SDWASPVP EQU   SDWAMWPP
SDWAWATP EQU   SDWAMWPP
SDWAMCKP EQU   SDWAMWPP
@NM00007 EQU   SDWAMWPP
SDWAKEYP EQU   SDWAMWPP
SDWAEXTP EQU   SDWACMKP
SDWAIOP  EQU   SDWACMKP
SDWANXTA EQU   SDWACTL1+5
SDWASGA  EQU   SDWAPMKA
SDWAEUA  EQU   SDWAPMKA
SDWADOA  EQU   SDWAPMKA
SDWAFPA  EQU   SDWAPMKA
SDWACCA  EQU   SDWAPMKA
SDWAILA  EQU   SDWAPMKA
SDWAINTA EQU   SDWACTL1+2
SDWASPVA EQU   SDWAMWPA
SDWAWATA EQU   SDWAMWPA
SDWAMCKA EQU   SDWAMWPA
@NM00006 EQU   SDWAMWPA
SDWAKEYA EQU   SDWAMWPA
SDWAEXTA EQU   SDWACMKA
SDWAIOA  EQU   SDWACMKA
SDWACMPC EQU   SDWAABCC+1
@NM00005 EQU   SDWACMPF
SDWASTCC EQU   SDWACMPF
@NM00004 EQU   SDWACMPF
SDWASTEP EQU   SDWACMPF
SDWAREQ  EQU   SDWACMPF
SDWAPARM EQU   SDWA
@NM00003 EQU   DEPARMS+304
DEALASTP EQU   DEPARMS+276
DEASGNP  EQU   DEDMYAS+12
@NM00002 EQU   DEDMYAS
DEWLASTP EQU   DEPARMS+256
DEWRITP  EQU   DEDMYEPA+12
@NM00001 EQU   DEDMYEPA
DEDSNQRC EQU   DENQRETN+4
DEDSNQEN EQU   DENQRETN
DESCT    EQU   DEPARMS+216
DEJCT    EQU   DEPARMS+212
DESIOT   EQU   DEPARMS+208
DETCB    EQU   DEPARMS+204
DECORE   EQU   DEPARMS
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@ENDDATA EQU   *
         END   IEFDB402,(C'PLS1347',0701,78089)
