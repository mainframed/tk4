         TITLE 'IEFDB410 - ALLOC FUNCTION CONTROL                      *
                        '
IEFDB410 CSECT ,                                                01S0001
@MAINENT DS    0H                                               01S0001
         USING *,@15                                            01S0001
         B     @PROLOG                                          01S0001
         DC    AL1(16)                                          01S0001
         DC    C'IEFDB410  78.089'                              01S0001
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                  01S0001
         BALR  @09,0                                            01S0001
@PSTART  LA    @12,4095(,@09)                                   01S0001
         USING @PSTART,@09                                      01S0001
         USING @PSTART+4095,@12                                 01S0001
         L     @00,@SIZDATD                                     01S0001
         GSPACE   R,LV=(0)
         LR    @11,@01                                          01S0001
         USING @DATD,@11                                        01S0001
         ST    @13,@SA00001+4                                   01S0001
         LM    @00,@01,20(@13)                                  01S0001
         ST    @11,8(,@13)                                      01S0001
         LR    @13,@11                                          01S0001
         MVC   @PC00001(28),0(@01)                              01S0001
JSCBDISP EQU 188
JSCBAOS1 EQU  72
JSCBAOS2 EQU 192
*KEYTABP = ADDR(KEYTABA);              /* BASE FOR KEYTABLE MAP      */
         LA    KEYTABP,KEYTABA                                  01S0115
*KEYTABLE(1:256) = KEYTABLE(1:256)&&KEYTABLE(1:256); /* INIT TO ZERO */
         XC    KEYTABLE(256,KEYTABP),KEYTABLE(KEYTABP)          01S0116
*KEYTABLE(257:LENGTH(KEYTABLE)) = KEYTABLE(257:LENGTH(KEYTABLE))
*       && KEYTABLE(257:LENGTH(KEYTABLE));                      01S0117
*                                                               01S0117
         XC    KEYTABLE+256(132,KEYTABP),KEYTABLE+256(KEYTABP)  01S0117
*IF S99TXTPP ^= 0 THEN                 /* NON-NULL LIST OF PTRS      */
         L     @10,@PC00001                                     01S0118
         L     @08,S99TXTPP(,@10)                               01S0118
         LTR   @08,@08                                          01S0118
         BZ    @RF00118                                         01S0118
*  CALL IEFDB412 (ALCRSCDE,S99TXTPP,ADDR(KEYTABLE));            01S0119
         L     @08,@PC00001+4                                   01S0119
         ST    @08,@AL00001                                     01S0119
         ST    @10,@AL00001+4                                   01S0119
         ST    KEYTABP,@TF00001                                 01S0119
         LA    @10,@TF00001                                     01S0119
         ST    @10,@AL00001+8                                   01S0119
         L     @15,@CV00096                                     01S0119
         LA    @01,@AL00001                                     01S0119
         BALR  @14,@15                                          01S0119
*                                      /* VALIDITY CHECK TEXT UNITS  */
*                                                               01S0120
*COPYDSAB = 0;                         /* INIT PTR TO DSAB AVAILABLE
*                                         FOR COPYING VOL/UNIT INFO  */
@RF00118 SLR   @10,@10                                          01S0120
         ST    @10,COPYDSAB                                     01S0120
*ALCDDSAB = 0;                         /* INIT PTR TO ALLOCATED DSAB,
*                                         (MUST BE SET BEFORE ANY
*                                         ERROR PATHS-SEE 'CLEANUP') */
*                                                               01S0121
         ST    @10,ALCDDSAB                                     01S0121
*IF ERRCODE = 0 THEN                   /* NO ERROR IN TEXT UNITS     */
         L     @08,@PC00001+4                                   01S0122
         ICM   @05,3,ERRCODE(@08)                               01S0122
         BNZ   @RF00122                                         01S0122
*  DO;                                                          01S0123
*/********************************************************************/
*/* SEGMENT NAME - FXSYNTX                                           */
*/*                                                                  */
*/* DESCRIPTIVE NAME - SYNTAX CHANGES                                */
*/*                                                                  */
*/* FUNCTION - ONCE THE KEYTABLE HAS BEEN BUILT FROM THE             */
*/*            TEXTUNITS GIVEN BY THE CALLER, ANALYZE IT             */
*/*            AND SUPPLY DEFAULTS, OR MODIFY VALUES TO ALLOW FOR    */
*/*            INTERNAL LOGIC PECULIARITIES, ETC.                    */
*/*                                                                  */
*/* OPERATION -                                                      */
*/*           . DEFAULT VALUES EFFECTIVELY THE SAME WAY AS THE       */
*/*             INTERPRETER DOES. IN ADDITION, IF A STATUS OF SHARE  */
*/*             IS REQUESTED AND EITHER THE COND OR NORM DISP IS     */
*/*             DELETE, THEN CHANGE THE STATUS TO OLD TO INSURE      */
*/*             EXCLUSIVE CONTROL.                                   */
*/*             NOTE - IF OLD, SHARE, OR MOD ARE REQUESTED,          */
*/*             A DISPOSITION OF KEEP IS -NOT- DEFAULTED HERE.       */
*/*             'KEEP' WILL BE DEFAULTED BY NORMAL                   */
*/*             ALLOCATION IF IT IS INVOKED.                         */
*/*             THE DISPOSITION(S) OF CONVERTED DATASETS WILL        */
*/*             BE CHANGED AS PER REQUEST, UNDER RESTRICTIONS        */
*/*             SPECIFIED IN IEFDB411.                               */
*/*                                                                  */
*/*           . IF A DSNAME WAS GIVEN, AND IT IS OF THE FORM         */
*/*             &&NAME, THEN CONSTRUCT A TEXT UNIT CONTAINING JUST   */
*/*             &NAME, SO THAT &&NAME AND &NAME ARE TREATED AS       */
*/*             THE SAME NAME. THIS IS CONSISTENT WITH THE           */
*/*             INTERPRETER.                                         */
*/*             POINT THE KEYTABLE TO THIS NEW TEXT UNIT.            */
*/*                                                                  */
*/* INPUT DATA - KEYTABLE WITH POINTERS TO TEXTUNITS                 */
*/*                                                                  */
*/* OUTPUT DATA - UPDATED KEYTABLE ENTRIES POINTING TO DEFAULT       */
*/*               VALUES, MODIFIED COPIES OF TEXT UNITS, ETC.        */
*/*                                                                  */
*/* NOTES - THE EXACT DEFAULTS SUPPLIED ARE DOCUMENTED BY THE CODE.  */
*/********************************************************************/
*DFLTSTAT = OFF;                       /* INITIALIZE SWITCH  @Z40NQPE*/
*DFLTNDSP = OFF;                       /* INITIALIZE SWITCH  @Z40NQPE*/
         NI    DFLTSTAT,B'00111111'                             02S0125
*IF STATSTUP=0 THEN                    /* STATUS NOT SUPPLIED        */
         C     @10,STATSTUP(,KEYTABP)                           02S0126
         BNE   @RF00126                                         02S0126
*  DO;                                 /*                    @Z40NQPE*/
*    STATSTUP = ADDR(DFLTNEW);         /* DEFAULT TO NEW             */
         LA    @10,DFLTNEW                                      02S0128
         ST    @10,STATSTUP(,KEYTABP)                           02S0128
*    DFLTSTAT = ON;                    /*INDICATE STATUS        02S0129
*                                             DEFAULT        @Z40NQPE*/
         OI    DFLTSTAT,B'10000000'                             02S0129
*  END;                                /*                    @Z40NQPE*/
*IF NDISPTUP=0 THEN                    /* NORMAL DISP NOT SUPPLIED   */
@RF00126 L     @10,NDISPTUP(,KEYTABP)                           02S0131
         LTR   @10,@10                                          02S0131
         BNZ   @RF00131                                         02S0131
*  DO;                                                          02S0132
*    IF STATSTUP->TEXTUPAR(1)=NEW THEN /* IF STATUS IS NEW,          */
         L     @10,STATSTUP(,KEYTABP)                           02S0133
         CLI   TEXTUPAR(@10),X'04'                              02S0133
         BNE   @RF00133                                         02S0133
*      DO;                             /*                    @Z40NQPE*/
*        NDISPTUP = ADDR(DFLTDELE);    /* DEFAULT DISP IS DELETE     */
         LA    @10,DFLTDELE                                     02S0135
         ST    @10,NDISPTUP(,KEYTABP)                           02S0135
*        DFLTNDSP = ON;                /* DEFAULT NORMAL DISP@Z40NQPE*/
         OI    DFLTNDSP,B'01000000'                             02S0136
*      END;                            /*                    @Z40NQPE*/
*  END;                                                         02S0138
*                                                               02S0138
@RF00133 DS    0H                                               02S0139
*IF STATSTUP->TEXTUPAR(1)=SHR THEN     /* STATUS OF SHARE SUPPLIED   */
@RF00131 L     @10,STATSTUP(,KEYTABP)                           02S0139
         CLI   TEXTUPAR(@10),X'08'                              02S0139
         BNE   @RF00139                                         02S0139
*  IF (NDISPTUP^=0 & NDISPTUP->TEXTUPAR(1)=DLT) /* WITH DISP OF DLT  */
*    × (CDISPTUP^=0 & CDISPTUP->TEXTUPAR(1)=DLT) THEN           02S0140
         L     @10,NDISPTUP(,KEYTABP)                           02S0140
         LTR   @10,@10                                          02S0140
         BZ    @GL00001                                         02S0140
         CLI   TEXTUPAR(@10),X'04'                              02S0140
         BE    @RT00140                                         02S0140
@GL00001 L     @10,CDISPTUP(,KEYTABP)                           02S0140
         LTR   @10,@10                                          02S0140
         BZ    @RF00140                                         02S0140
         CLI   TEXTUPAR(@10),X'04'                              02S0140
         BNE   @RF00140                                         02S0140
@RT00140 DS    0H                                               02S0141
*    STATSTUP = ADDR(DFLTOLD);         /* CHANGE STATUS TO OLD  02S0141
*                                         TO INSURE EXCLUSIVE CONTROL*/
*                                                               02S0141
         LA    @10,DFLTOLD                                      02S0141
         ST    @10,STATSTUP(,KEYTABP)                           02S0141
*RFY TEXTUNIT BASED(DSNAMTUP);                                  02S0142
@RF00140 DS    0H                                               02S0142
@RF00139 DS    0H                                               02S0143
*IF DSNAMTUP^=0                        /* DSNAME GIVEN               */
*  & TEXTUPAR(1:2)='&&' THEN           /* AND ITS AN &&-NAME         */
         L     @10,DSNAMTUP(,KEYTABP)                           02S0143
         LTR   @10,@10                                          02S0143
         BZ    @RF00143                                         02S0143
         CLC   TEXTUPAR(2,@10),@CC02662                         02S0143
         BNE   @RF00143                                         02S0143
*  DO;                                 /* BUILD TU FOR &-NAME        */
*    AMPDSNTU(1:4) = TEXTUNIT(1:4);    /* COPY KEY AND NUMBER        */
         MVC   AMPDSNTU(4),TEXTUNIT(@10)                        02S0145
*    AMPDSNTU(5:6) = TEXTULNG-1;       /* LENGTH MINUS ONE AMPERSAND */
         ICM   @08,12,TEXTULNG(@10)                             02S0146
         SRA   @08,16                                           02S0146
         LR    @05,@08                                          02S0146
         BCTR  @05,0                                            02S0146
         STCM  @05,3,AMPDSNTU+4                                 02S0146
*    AMPDSNTU(7:TEXTULNG+5) = TEXTUPAR(2:TEXTULNG); /* MOVE &-DSNAME */
         BCTR  @08,0                                            02S0147
         BCTR  @08,0                                            02S0147
         EX    @08,@SM02700                                     02S0147
*    DSNAMTUP = ADDR(AMPDSNTU);        /* NOW POINT TO &-NAME TU.    */
         LA    @10,AMPDSNTU                                     02S0148
         ST    @10,DSNAMTUP(,KEYTABP)                           02S0148
*  END;                                                         02S0149
*    DSNCNP = 0;                       /*WILL BE SET TO ADDR OF DSAB
*                                        TO CONVERT, IF FOUND        */
@RF00143 SLR   @10,@10                                          01S0150
         ST    @10,DSNCNP                                       01S0150
*/********************************************************************/
*/*                                                                  */
*/* SEGMENT NAME - CKCONVRT                                          */
*/*                                                                  */
*/* DESCRIPTIVE NAME - CHECK IF CAN CONVERT AN EXISTING ALLOCATION   */
*/*                                                                  */
*/* FUNCTION - CKCONVRT DETERMINES IF AN EXISTING ALLOCATION CAN BE  */
*/*            USED TO SATISFY THE REQUEST OR IF IT'S NECESSARY      */
*/*            (AND POSSIBLE, I.E., MORE RESOURCES CAN BE ALLOCATED  */
*/*            TO THE USER) TO GO TO NORMAL ALLOCATION.              */
*/*                                                                  */
*/*   OPERATION -                                                    */
*/*     .'CHECK ENVIRONMENT'. THIS SEGMENT WILL DETERMINE IF         */
*/*      AN EXISTING ALLOCATION CAN BE CONVERTED TO SATISFY          */
*/*      THE REQUEST. THE MAIN OUTPUT OF THIS SEGMENT IS             */
*/*      POINTERS TO VARIOUS DSABS -                                 */
*/*         . POINTER TO DSAB TO CONVERT IF ONE IS FOUND.            */
*/*         . POINTER TO THE DSAB OF THE ALLOCATION FROM WHICH A     */
*/*           DDNAME MUST BE DISASSOCIATED, IF NECESSARY.            */
*/*         . POINTER TO THE DSAB OF AN ALLOCATION WHICH, ALTHOUGH   */
*/*           NOT ELIGIBLE FOR CONVERSION, CONTAINED                 */
*/*           VOL/UNIT INFORMATION WHICH MAY BE USED BY NORMAL       */
*/*           ALLOCATION (IEFDB413) PROCESSING.                      */
*/*                                                                  */
*/*     .'LIMIT PROCESSING'. IF NO EXISTING ALLOCATION WAS ELIGIBLE  */
*/*      FOR CONVERSION, THEN THIS SEGMENT WILL ATTEMPT TO           */
*/*      UNALLOCATE NOT-IN-USE ALLOCATIONS, IF NECESSARY, TO         */
*/*      BRING THEIR NUMBER DOWN TO THE LIMIT DETERMINED BY THE      */
*/*      SUM OF 'DYNAMNBR' PLUS THE TOTAL NO. OF DD CARDS            */
*/*      SPECIFIED IN JCL, OTHERWISE CALLED THE 'CONTROL VALUE' OR   */
*/*      THE 'NOT IN USE LIMIT'.                                     */
*/*                                                                  */
*/*     .'FREE DDNAME'. IF A DDNAME WAS SPECIFIED IN THE REQUEST,    */
*/*      BUT WAS FOUND (BY 'CHECK ENVIRONMENT') TO BE ASSOCIATED     */
*/*      WITH AN EXISTING ALLOCATION FROM WHICH IT CAN BE            */
*/*      DISASSOCIATED, THEN THIS SEGMENT PROCESSES THE              */
*/*      DISASSOCIATION.                                             */
*/*      NOTE THAT THIS IS DONE ONLY IF 'LIMIT PROCESSING' WAS       */
*/*      EITHER NOT DONE OR WAS SUCCESSFUL.                          */
*/*                                                                  */
*/*      NOTE THAT IT IS POSSIBLE FOR TWO ALLOCATIONS                */
*/*      TO BE MODIFIED IN THE CONVERSION PROCESS.                   */
*/*               1 - THE ALLOCATION WITH A MATCHING DSNAME WHICH    */
*/*                   WILL BE USED TO SATISFY THE REQUEST.           */
*/*               2 - THE ALLOCATION FROM WHICH A DDNAME IS TO BE    */
*/*                   DISASSOCIATED.                                 */
*/*                                                                  */
*/********************************************************************/
*DDNCNP = 0;                           /*INIT PTR TO DSAB CORRESPONDING
*                                        TO DDNAME TO BE 'FREED'     */
         ST    @10,DDNCNP                                       02S0151
*/********************************************************************/
*/*                                                                  */
*/* SEGMENT NAME - CKENVRON                                          */
*/*                                                                  */
*/* DESCRIPTIVE NAME - CHECK CURRENT ALLOCATION ENVIRONMENT          */
*/*                                                                  */
*/* FUNCTION - COMPARE THE INPUT REQUEST TO THE CURRENT              */
*/*            ALLOCATION ENVIRONMENT AND DETERMINE WHAT PROCESSING  */
*/*            (I.E., CONVERSION OR NORMAL ALLOCATION) IS            */
*/*            NECESSARY TO HANDLE THE REQUEST.                      */
*/*                                                                  */
*/* OPERATION -                                                      */
*/*     .'SET UP' . THIS SEGMENT EXAMINES THE REQUEST AND SETS       */
*/*      VALUES WHICH CONTROL ALL ENVIRONMENT CHECKING.              */
*/*                                                                  */
*/*     .LOOP UP THE DSAB CHAIN (I.E. BEGIN WITH THOSE ALLOCATIONS   */
*/*      MOST RECENTLY MARKED NOT-IN-USE).                           */
*/*      WITHIN THIS LOOP:                                           */
*/*                                                                  */
*/*         .KEEP A COUNT OF THE NUMBER OF NOT-IN-USE RESOURCES      */
*/*          IN CASE 'LIMIT PROCESSING'                              */
*/*          NEEDS TO BE DONE LATER.                                 */
*/*                                                                  */
*/*         .'DSNAME EQUAL'. THIS SEGMENT DETERMINES IF THE          */
*/*          REQUESTED DATASET NAME MATCHES THAT OF THE ALLOCATION   */
*/*          BEING EXAMINED. AN ALLOCATION IS ELIGIBLE FOR           */
*/*          CONVERSION ONLY IF THE DSNAME REQUESTED MATCHES         */
*/*          THE DSNAME IN THE ALLOCATION.                           */
*/*                                                                  */
*/*         .'CKECK DATASET NAME ENVIRONMENT'. FOR EQUAL             */
*/*          DATASET NAMES, THIS SEGMENT DETERMINES IF PROPERTIES    */
*/*          OF THE EXISTING ALLOCATION PREVENT IT FROM BEING        */
*/*          CONVERTED, OR PREVENT THE REQUEST FROM BEING SATISFIED  */
*/*          AT ALL.                                                 */
*/*                                                                  */
*/*         .'CKDDNENV'. IF A REQUESTED DDNAME MATCHES THE DDNAME    */
*/*          OF THE ALLOCATION UNDER EXAMINATION, AND THIS           */
*/*          ALLOCATION IS INELIGIBLE FOR CONVERSION, THEN DETERMINE */
*/*          IF THE DDNAME CAN BE DISASSOCIATED FROM THIS            */
*/*          ALLOCATION. IF NOT, THEN THE REQUEST IS FAILED.         */
*/*                                                                  */
*/*     .'OBTAIN DSORG'. IF AN EXISTING ALLOCATION WAS FOUND         */
*/*      ELIGIBLE FOR CONVERSION, AND THE USER REQUESTED             */
*/*      THAT DSORG BE RETURNED, THEN CALL A SUBROUTINE              */
*/*      TO OBTAIN IT.  IF THE OBTAIN FAILS, THEN FAIL THE           */
*/*      REQUEST NOW, RATHER THAN USELESSLY PERFORMING               */
*/*      THE CONVERSION.                                             */
*/*                                                                  */
*/*      NOTE - . IF MORE THAN ONE EXISTING ALLOCATION IS            */
*/*               ELIGIBLE FOR CONVERSION, THEN THE ONE SELECTED IS: */
*/*                 1) THE ONE ASSOCIATED WITH THE REQUESTED DDNAME, */
*/*                    OR, IF NOT IS AVAILABLE, THEN                 */
*/*                 2) THE ALLOCATION MOST RECENTLY MARKED NOT-IN-USE,*
*/*                    I.E., THE ONE FOUND FIRST.                    */
*/*                                                                  */
*/* EXTERNAL REFERENCES - IEFDB4FE - OBTAIN DATA SET ORGANIZATION    */
*/*                                                                  */
*/********************************************************************/
*CKENVMAP = CKENVMAP && CKENVMAP;      /*ZERO CKENVRON CONTROL SWS   */
         XC    CKENVMAP(1),CKENVMAP                             03S0152
*/********************************************************************/
*/*                                                                  */
*/* SEGMENT NAME - CKENSTUP                                          */
*/*                                                                  */
*/* DESCRIPTIVE NAME - SET UP INPUT FOR CKENVRON DSAB CHAIN SEARCH   */
*/*                                                                  */
*/* FUNCTION - THE USER'S REQUEST IS EXAMINED AND VALUES             */
*/*            USED IN SEARCHING THE DSAB CHAIN ARE SET.             */
*/*                                                                  */
*/* OPERATION -                                                      */
*/*    .SWITCHES ARE INITIALLY SET TO                                */
*/*     END THE EXAMINATION OF EXISTING ALLOCATIONS.                 */
*/*     EXAMINATION OF THE REQUEST CAN THEN ALTER THESE SWITCHES     */
*/*     (I.E., CAUSE THE DSAB LOOP IN 'CKENVRON' TO RESUME).         */
*/*     EXAMINATION OF THE REQUEST ALSO CAUSES OTHER SWITCHES/       */
*/*     VALUES TO BE SET TO CONTROL PATHS WITHIN THE LOOP.           */
*/*     ITEMS EXAMINED IN THE REQUESTOR'S TEXTUNITS ARE (IN          */
*/*     THIS ORDER) -                                                */
*/*                                                                  */
*/*       DDNAME -        IF PRESENT, SEARCHING ON DDNAME IS         */
*/*                       RESUMED.                                   */
*/*                                                                  */
*/*       DSNAME -        IF PRESENT AND NOT A GDG-SINGLE REQUEST    */
*/*                       (GDG'S ARE NEVER CONVERTED SO THAT GDG     */
*/*                       IDIOSYNCRASIES ARE ISOLATED TO JFCB        */
*/*                       HOUSEKEEPING), THE  SEARCHING ON DSNAME    */
*/*                       IS RESUMED.                                */
*/*                                                                  */
*/*       SYSOUT -        IN CASE BOTH DSNAME AND SYSOUT WERE        */
*/*                       REQUESTED, THE DSNAME SEARCH IS ENDED.     */
*/*                       SYSOUT IS NEVER CONVERTED. (SYSOUT IS      */
*/*                       REALLY A SUBSYSTEM DATASET REQUEST).       */
*/*                                                                  */
*/*       SUBSYSTEM -     TREATED THE SAME AS SYSOUT.                */
*/*                                                                  */
*/*       DUMMY     -     THE DATASET NAME IS SET TO 'NULLFILE', AND */
*/*                       THE SEARCH ON DSNAME IS RESUMED. NOTE THAT */
*/*                       REQUESTING DUMMY OVERRIDES THE ABOVE       */
*/*                       REQUESTS.                                  */
*/*                                                                  */
*/*       TERMINAL -      IF THE USER IS A TSO USER, THE DATASET     */
*/*                       NAME IS SET TO 'NULLFILE', AND THE DSNAME  */
*/*                       SEARCH IS RESUMED.  A SWITCH IS SET TO     */
*/*                       REMEMBER THIS IS A TERMINAL REQUEST, TO    */
*/*                       DISTINGUISH IT FROM A DUMMY REQUEST.       */
*/*                       NOTE THAT REQUESTING TERMINAL OVERRIDES THE*/
*/*                       ABOVE REQUESTS IF THE USER IS A TSO USER.  */
*/*                       HOWEVER, IF THE USER IS NOT A TSO USER,    */
*/*                       (I.E., IF THIS IS A NON-TSO        @Z40NQPE*/
*/*                       DYNAMIC REQUEST FOR A TERMINAL),   @Z40NQPE*/
*/*                       A CHECK OF THE SPECIFIED PARAMETERS@Z40NQPE*/
*/*                       IS MADE TO SEE IF THE REQUEST IS TO@Z40NQPE*/
*/*                       BE CONVERTED TO A SYSOUT REQUEST.  @Z40NQPE*/
*/*                       THE FOLLOWING PARAMETERS ARE       @Z40NQPE*/
*/*                       ACCEPTABLE AND WILL BE PROCESSED:  @Z40NQPE*/
*/*                          DCB PARAMETERS (ALL)            @Z40NQPE*/
*/*                          DCB REF                         @Z40NQPE*/
*/*                          DDNAME                          @Z40NQPE*/
*/*                          UNALLOCATE AT CLOSE             @Z40NQPE*/
*/*                          PERMANENTLY ALLOCATED ATTRIBUTE @Z40NQPE*/
*/*                          CONVERTIBLE ATTRIBUTE           @Z40NQPE*/
*/*                          RETURN PARAMETERS (ALL)         @Z40NQPE*/
*/*                       IF ANY OTHER PARAMETERS ARE USED,  @Z40NQPE*/
*/*                       THEN THE TERMINAL REQUEST IS IGNORED, AND  */
*/*                       THE INPUT REQUEST IS TREATED AS IF THIS    */
*/*                       PARTICULAR TEXT UNIT WAS NOT SPECIFIED.    */
*/*                                                                  */
*/*       VOL/UNIT INFO - (SEE THE CODE FOR THE EXACT VALUES CHECKED)*/
*/*                       IF VOLUME REQUESTS (OTHER THAN VOLSER)     */
*/*                       AND/OR UNIT REQUESTS                       */
*/*                       ARE MADE, SET A SWITCH WHICH DOES NOT      */
*/*                       INHIBIT ANY SEARCHES ACTIVIATED ABOVE, BUT */
*/*                       WHICH INDICATES THAT CONVERSION CAN'T BE   */
*/*                       DONE.  THIS ALLOWS ANY CONFLICTS           */
*/*                       BETWEEN THE REQUEST AND EXISTING           */
*/*                       ALLOCATIONS TO BE DISCOVERED.              */
*/*                                                                  */
*/*       DON'T CONVERT SW - IF THE USER HAS REQUESTED THAT          */
*/*                          CONVERSION NOT BE DONE, TREAT THIS THE  */
*/*                          SAME AS VOL/UNIT INFORMATION IS         */
*/*                          TREATED ABOVE, I.E., SEARCH             */
*/*                          TO TEST FOR CONFLICTS ONLY.             */
*/*                                                                  */
*/*    . A SEGMENT IS INCLUDED WHICH SETS A SWITCH ON IF ANY         */
*/*      DCB PARAMETERS WERE REQUESTED IN THE TEXT UNITS.            */
*/*                                                                  */
*/*   OUTPUT DATA -                                                  */
*/*     CKENVMAP - WITH FOLLOWING SWITCHES TURNED ON IF NECESSARY:   */
*/*                DSNREQSW - DSNAME ALLOC REQUESTED                 */
*/*                DDNREQSW - DDNAME ALLOC REQUESTED                 */
*/*                ENDDNSSW - DON'T SEARCH FOR DDNAME                */
*/*                DSNTRMSW - TERM=TS REQUESTED                      */
*/*                CKDSCFSW - DON'T USE EXISTING ALLOCATION, CHECK   */
*/*                           FOR CONFLICTS ONLY                     */
*/*     ALFNCMAP - DCBSPSW SET ON IF ANY DCB PARMS REQUESTED         */
*/*     DDNREQ - DDNAME SPECIFIED IN INPUT, PADDED TO 8-CHARACTERS   */
*/*     DSNREQ - DSNAME SPECIFIED IN INPUT, PADDED TO 44-CHARACTERS  */
*/*                                                                  */
*/********************************************************************/
*ENDDNSSW = ON;                        /*INIT END DDN SEARCH SW ON   */
         OI    ENDDNSSW,B'00100000'                             04S0153
*IF DDNAMTUP ^= ZERO THEN              /*DDNAME SPECIFIED IN REQUEST */
         L     @08,DDNAMTUP(,KEYTABP)                           04S0154
         CR    @08,@10                                          04S0154
         BE    @RF00154                                         04S0154
*  DO;                                 /*SET UP FOR DDN SEARCH LOOP  */
*    RFY TEXTUNIT BASED(DDNAMTUP);                              04S0156
*    DDNREQ = TEXTUPAR(1:TEXTULNG);    /*COPY DDN INTO 8-BYTE FIELD  */
         MVI   DDNREQ+1,C' '                                    04S0157
         MVC   DDNREQ+2(6),DDNREQ+1                             04S0157
         ICM   @10,12,TEXTULNG(@08)                             04S0157
         SRA   @10,16                                           04S0157
         BCTR  @10,0                                            04S0157
         EX    @10,@SM02703                                     04S0157
*    DDNREQSW = ON;                    /*INDICATE HAVE A DDN REQUESTD*/
*    ENDDNSSW = OFF;                   /*WANT TO SEARCH DSAB'S FOR DD*/
         OI    DDNREQSW,B'01000000'                             04S0159
         NI    ENDDNSSW,B'11011111'                             04S0159
*  END;                                                         04S0160
*                                                               04S0160
*RFY TEXTUNIT BASED(MEMBRTUP);                                  04S0161
@RF00154 DS    0H                                               04S0162
*IF DSNAMTUP ^= ZERO                   /*DSNAME SPECIFIED IN REQUEST */
* & (MEMBRTUP=0                        /*NOT GDG SINGLE REQUEST      */
*    × (TEXTUNIT(1)^='+' & TEXTUNIT(1)^='-' & TEXTUNIT(1)^='0')) THEN
         SLR   @10,@10                                          04S0162
         C     @10,DSNAMTUP(,KEYTABP)                           04S0162
         BE    @RF00162                                         04S0162
         L     @08,MEMBRTUP(,KEYTABP)                           04S0162
         CR    @08,@10                                          04S0162
         BE    @RT00162                                         04S0162
         CLI   TEXTUNIT(@08),C'+'                               04S0162
         BE    @RF00162                                         04S0162
         CLI   TEXTUNIT(@08),C'-'                               04S0162
         BE    @RF00162                                         04S0162
         CLI   TEXTUNIT(@08),C'0'                               04S0162
         BE    @RF00162                                         04S0162
@RT00162 DS    0H                                               04S0163
*  DO;                                 /*SET UP FOR DSN SEARCH LOOP  */
*    RFY TEXTUNIT BASED(DSNAMTUP);                              04S0164
*    DSNREQ = TEXTUPAR(1:TEXTULNG);    /*COPY DSN INTO 44 BYTE FIELD */
         MVI   DSNREQ+1,C' '                                    04S0165
         MVC   DSNREQ+2(42),DSNREQ+1                            04S0165
         L     @10,DSNAMTUP(,KEYTABP)                           04S0165
         ICM   @08,12,TEXTULNG(@10)                             04S0165
         SRA   @08,16                                           04S0165
         BCTR  @08,0                                            04S0165
         EX    @08,@SM02705                                     04S0165
*    DSNREQSW = ON;                    /*INDICATE HAVE A DSN REQUESTD*/
         OI    DSNREQSW,B'10000000'                             04S0166
*  END;                                                         04S0167
*                                                               04S0167
*IF SYSOUTUP ^= ZERO                   /*SYSOUT REQUESTED            */
*  × SSREQTUP^=ZERO                    /*SUBSYSTEM REQUEST           */
*  × SSNMTUP ^=ZERO THEN               /*SUBSYSTEM NAME REQ  @G29AN2F*/
@RF00162 SLR   @10,@10                                          04S0168
         C     @10,SYSOUTUP(,KEYTABP)                           04S0168
         BNE   @RT00168                                         04S0168
         C     @10,SSREQTUP(,KEYTABP)                           04S0168
         BNE   @RT00168                                         04S0168
         C     @10,SSNMTUP(,KEYTABP)                            04S0168
         BE    @RF00168                                         04S0168
@RT00168 DS    0H                                               04S0169
*    DSNREQSW = OFF;                   /*DON'T SEARCH ON DSNAME      */
*                                                               04S0169
         NI    DSNREQSW,B'01111111'                             04S0169
*IF DUMMYTUP ^= ZERO THEN              /*DUMMY DATASET REQUESTED     */
@RF00168 L     @10,DUMMYTUP(,KEYTABP)                           04S0170
         LTR   @10,@10                                          04S0170
         BZ    @RF00170                                         04S0170
*  DO;                                 /*OVERRIDE ANY PREVIOUS SETUP */
*    DSNREQ = '';                      /* INIT TO BLANKS             */
         MVI   DSNREQ,C' '                                      04S0172
         MVC   DSNREQ+1(43),DSNREQ                              04S0172
*    DSNREQ(1:8) = 'NULLFILE';         /*SEARCH ON NAME NULLFILE     */
         MVC   DSNREQ(8),@CC02670                               04S0173
*    DSNREQSW = ON;                    /*INDICATE DSN REQUESTED      */
         OI    DSNREQSW,B'10000000'                             04S0174
*  END;                                                         04S0175
*                                                               04S0175
*IF TERMTUP^=0 THEN                    /*TERM=TS REQUESTED           */
@RF00170 SLR   @10,@10                                          04S0176
         C     @10,TERMTUP(,KEYTABP)                            04S0176
         BE    @RF00176                                         04S0176
*  IF ASCBTSB^=0 THEN                  /*USER IS A TSO USER          */
         L     @08,@PC00001+8                                   04S0177
         L     @08,ASCBPTR(,@08)                                04S0177
         C     @10,ASCBTSB(,@08)                                04S0177
         BE    @RF00177                                         04S0177
*    DO;                               /*OVERIDE ANY PREVIOUS SETUP  */
*      DSNREQ = '';                    /*INIT TO BLANKS              */
         MVI   DSNREQ,C' '                                      04S0179
         MVC   DSNREQ+1(43),DSNREQ                              04S0179
*      DSNREQ(1:8) = 'NULLFILE';       /*DEFAULT DSNAME              */
         MVC   DSNREQ(8),@CC02670                               04S0180
*      DSNREQSW = ON;                  /*INDICATE DSNAME REQUESTED   */
*      DSNTRMSW = ON;                  /*INDICATE TERMINAL REQUESTED */
         OI    DSNREQSW,B'10000010'                             04S0182
*    END;                                                       04S0183
*  ELSE                                /*TERM REQ'D-CALLER NOT TSO
*                                        USER                @Z40NQPE*/
*    IF SU11BIT = ON THEN              /* IS SU11 INSTALLED? @G29AN2F*/
         B     @RC00177                                         04S0184
@RF00177 L     @10,CVTPTR                                       04S0184
         L     @10,CVTIHASU(,@10)                               04S0184
         TM    SU11BIT(@10),B'00010000'                         04S0184
         BNO   @RF00184                                         04S0184
*      DO;                             /*THIS IS A NON-TSO DYNAMIC
*                                        REQUEST FOR A TERM. @Z40NQPE*/
*        SOUTCONV=ON;                  /*INITIALIZE SWITCH THAT 04S0186
*                                        INDICATES THAT A NON-TSO
*                                        TERMINAL REQUEST IS TO BE
*                                        CONVERTED TO SYSOUT REQUEST
*                                                            @Z40NQPE*/
         OI    SOUTCONV,B'10000000'                             04S0186
*/***********************************************************@Z40NQPE*/
*/*                                                          @Z40NQPE*/
*/* SEGMENT NAME - CHKPARMS                                  @Z40NQPE*/
*/*                                                          @Z40NQPE*/
*/* DESCRIPTIVE NAME - CHECK INPUT FOR SPECIFIED PARAMETERS  @Z40NQPE*/
*/*                                                          @Z40NQPE*/
*/* FUNCTION - THE INPUT IS CHECKED TO SEE IF ANY PARAMETERS @Z40NQPE*/
*/*            OTHER THAN THE FOLLOWING ARE SPECIFIED: IF    @Z40NQPE*/
*/*            SO, THEN AN INDICATOR IS SET.                 @Z40NQPE*/
*/*                       DCB PARAMETERS (ALL)               @Z40NQPE*/
*/*                       DCB REF                            @Z40NQPE*/
*/*                       DDNAME                             @Z40NQPE*/
*/*                       UNALLOCATE AT CLOSE                @Z40NQPE*/
*/*                       PERMANENTLY ALLOCATED ATTRIBUTE    @Z40NQPE*/
*/*                       CONVERTIBLE ATTRIBUTE              @Z40NQPE*/
*/*                       RETURN PARAMETERS (ALL)            @Z40NQPE*/
*/*                                                          @Z40NQPE*/
*/* INPUT DATA -                                             @Z40NQPE*/
*/*   KEYTABLE - TABLE OF POINTERS TO INPUT TEXT UNITS.      @Z40NQPE*/
*/*   SOUTCONV - ON AS INITIALIZED.                          @Z40NQPE*/
*/*                                                          @Z40NQPE*/
*/* OUTPUT DATA -                                            @Z40NQPE*/
*/*   SOUTCONV - OFF IF AT LEAST ONE PARAMETER OTHER THAN    @Z40NQPE*/
*/*              THOSE LISTED ABOVE WAS FOUND IN THE INPUT   @Z40NQPE*/
*/*              TEXT.                                       @Z40NQPE*/
*/*                                                          @Z40NQPE*/
*/***********************************************************@Z40NQPE*/
*IF DSNAMTUP^=ZERO ×                   /*DSNAME              @Z40NQPE*/
*   MEMBRTUP^=ZERO ×                   /*MEMBER NAME         @Z40NQPE*/
*   (STATSTUP^=ZERO &  DFLTSTAT=OFF) × /* DATA SET STATUS       05S0187
*                                      AND NOT DEFAULT       @Z40NQPE*/
*   (NDISPTUP^=ZERO & DFLTNDSP=OFF) ×  /*NORMAL DISPOSITION     05S0187
*                                           AND NOT DEFAULT  @Z40NQPE*/
*   CDISPTUP^=ZERO ×                   /*CONDITIONAL DISP.   @Z40NQPE*/
*   TRKTUP^=ZERO ×                     /*TRACK SPACE TYPE    @Z40NQPE*/
*   CYLTUP^=ZERO ×                     /*CYLINDER SPACE TYPE @Z40NQPE*/
*   BLKLNTUP^=ZERO ×                   /*DATA BLOCK LENGTH   @Z40NQPE*/
*   PRIMETUP^=ZERO ×                   /*PRIMARY SPACE QNTY  @Z40NQPE*/
*   SECNDTUP^=ZERO ×                   /*SECONDARY SPACE QNTY@Z40NQPE*/
*   DIRTUP^=ZERO ×                     /*DIRECTORY SPACE     @Z40NQPE*/
*   RLSETUP^=ZERO ×                    /*UNUSED SPACE RELEASE@Z40NQPE*/
*   SPFRMTUP^=ZERO ×                   /*CONTIG MXIG ALX SPCE@Z40NQPE*/
*   ROUNDTUP^=ZERO ×                   /*CYLINDER ROUND SPACE@Z40NQPE*/
*   VLSERTUP^=ZERO ×                   /*VOLUME SERIAL       @Z40NQPE*/
*   PRIVTTUP^=ZERO ×                   /*PRIVATE VOL         @Z40NQPE*/
*   VLSEQTUP^=ZERO ×                   /*VOL SEQUENCE NUMBER @Z40NQPE*/
*   VLCNTTUP^=ZERO ×                   /*VOLUME COUNT        @Z40NQPE*/
*   VLRDSTUP^=ZERO ×                   /*DSN VOL REF         @Z40NQPE*/
*   UNITTUP^=ZERO ×                    /*UNIT DESCRIPTION    @Z40NQPE*/
*   UNCNTTUP^=ZERO ×                   /*UNIT COUNT          @Z40NQPE*/
*   PARALTUP^=ZERO ×                   /*PARALLEL MOUNT      @Z40NQPE*/
*   SYSOUTUP^=ZERO ×                   /*SYSOUT CLASS        @Z40NQPE*/
*   SPGNMTUP^=ZERO ×                   /*SYSOUT PROG. NAME   @Z40NQPE*/
*   SFMNOTUP^=ZERO ×                   /*SYSOUT FORM NUMBER  @Z40NQPE*/
*   OUTLMTUP^=ZERO ×                   /*OUTPUT LIMIT        @Z40NQPE*/
*   COPYSTUP^=ZERO ×                   /*SYSOUT COPIES       @Z40NQPE*/
*   LABELTUP^=ZERO ×                   /*LABEL TYPE          @Z40NQPE*/
*   DSSEQTUP^=ZERO ×                   /*D.S. SEQUENCE NUMBER@Z40NQPE*/
*   PASPRTUP^=ZERO ×                   /*PASSWORD PROTECTION @Z40NQPE*/
*   INOUTTUP^=ZERO ×                   /*INPUT OR OUTPUT ONLY@Z40NQPE*/
*   EXPDTTUP^=ZERO ×                   /*EXPIRATION DATE     @Z40NQPE*/
*   RETPDTUP^=ZERO ×                   /*RETENTION PERIOD    @Z40NQPE*/
*   DUMMYTUP^=ZERO ×                   /*DUMMY ALLOCATION    @Z40NQPE*/
*   FCBIMTUP^=ZERO ×                   /*FCB IMAGE ID.       @Z40NQPE*/
*   FCBAVTUP^=ZERO ×                   /*FCB FORM ALIGNMENT, IMAGE
*                                        VERIFY              @Z40NQPE*/
*   QNAMETUP^=ZERO ×                   /*QNAME ALLOCATION    @Z40NQPE*/
*   UCSTUP^=ZERO ×                     /*UNIVERSAL CHAR. SET @Z40NQPE*/
*   UFOLDTUP^=ZERO ×                   /*UCS FOLD MODE       @Z40NQPE*/
*   UVRFYTUP^=ZERO ×                   /*UCS VERIFY CHAR. SET@Z40NQPE*/
*   PASSWTUP^=ZERO ×                   /*PASSWORD            @Z40NQPE*/
*   SUSERTUP^=ZERO ×                   /*SYSOUT REMOTE USER  @Z40NQPE*/
*   SHOLDTUP^=ZERO ×                   /*SYSOUT HOLD QUEUE   @Z40NQPE*/
*   SSREQTUP^=ZERO ×                   /*SUBSYSTEM REQUEST   @Z40NQPE*/
*   SSNMTUP^=ZERO ×                    /*SUBSYSTEM NAME REQ  @G29AN2F*/
*   MSVGPTUP^=ZERO THEN                /*MSVGP SPECIFIED     @Z40NQPE*/
         SLR   @10,@10                                          05S0187
         C     @10,DSNAMTUP(,KEYTABP)                           05S0187
         BNE   @RT00187                                         05S0187
         C     @10,MEMBRTUP(,KEYTABP)                           05S0187
         BNE   @RT00187                                         05S0187
         C     @10,STATSTUP(,KEYTABP)                           05S0187
         BE    @GL00053                                         05S0187
         TM    DFLTSTAT,B'10000000'                             05S0187
         BZ    @RT00187                                         05S0187
@GL00053 L     @10,NDISPTUP(,KEYTABP)                           05S0187
         LTR   @10,@10                                          05S0187
         BZ    @GL00052                                         05S0187
         TM    DFLTNDSP,B'01000000'                             05S0187
         BZ    @RT00187                                         05S0187
@GL00052 SLR   @10,@10                                          05S0187
         C     @10,CDISPTUP(,KEYTABP)                           05S0187
         BNE   @RT00187                                         05S0187
         C     @10,TRKTUP(,KEYTABP)                             05S0187
         BNE   @RT00187                                         05S0187
         C     @10,CYLTUP(,KEYTABP)                             05S0187
         BNE   @RT00187                                         05S0187
         C     @10,BLKLNTUP(,KEYTABP)                           05S0187
         BNE   @RT00187                                         05S0187
         C     @10,PRIMETUP(,KEYTABP)                           05S0187
         BNE   @RT00187                                         05S0187
         C     @10,SECNDTUP(,KEYTABP)                           05S0187
         BNE   @RT00187                                         05S0187
         C     @10,DIRTUP(,KEYTABP)                             05S0187
         BNE   @RT00187                                         05S0187
         C     @10,RLSETUP(,KEYTABP)                            05S0187
         BNE   @RT00187                                         05S0187
         C     @10,SPFRMTUP(,KEYTABP)                           05S0187
         BNE   @RT00187                                         05S0187
         C     @10,ROUNDTUP(,KEYTABP)                           05S0187
         BNE   @RT00187                                         05S0187
         C     @10,VLSERTUP(,KEYTABP)                           05S0187
         BNE   @RT00187                                         05S0187
         C     @10,PRIVTTUP(,KEYTABP)                           05S0187
         BNE   @RT00187                                         05S0187
         C     @10,VLSEQTUP(,KEYTABP)                           05S0187
         BNE   @RT00187                                         05S0187
         C     @10,VLCNTTUP(,KEYTABP)                           05S0187
         BNE   @RT00187                                         05S0187
         C     @10,VLRDSTUP(,KEYTABP)                           05S0187
         BNE   @RT00187                                         05S0187
         C     @10,UNITTUP(,KEYTABP)                            05S0187
         BNE   @RT00187                                         05S0187
         C     @10,UNCNTTUP(,KEYTABP)                           05S0187
         BNE   @RT00187                                         05S0187
         C     @10,PARALTUP(,KEYTABP)                           05S0187
         BNE   @RT00187                                         05S0187
         C     @10,SYSOUTUP(,KEYTABP)                           05S0187
         BNE   @RT00187                                         05S0187
         C     @10,SPGNMTUP(,KEYTABP)                           05S0187
         BNE   @RT00187                                         05S0187
         C     @10,SFMNOTUP(,KEYTABP)                           05S0187
         BNE   @RT00187                                         05S0187
         C     @10,OUTLMTUP(,KEYTABP)                           05S0187
         BNE   @RT00187                                         05S0187
         C     @10,COPYSTUP(,KEYTABP)                           05S0187
         BNE   @RT00187                                         05S0187
         C     @10,LABELTUP(,KEYTABP)                           05S0187
         BNE   @RT00187                                         05S0187
         C     @10,DSSEQTUP(,KEYTABP)                           05S0187
         BNE   @RT00187                                         05S0187
         C     @10,PASPRTUP(,KEYTABP)                           05S0187
         BNE   @RT00187                                         05S0187
         C     @10,INOUTTUP(,KEYTABP)                           05S0187
         BNE   @RT00187                                         05S0187
         C     @10,EXPDTTUP(,KEYTABP)                           05S0187
         BNE   @RT00187                                         05S0187
         C     @10,RETPDTUP(,KEYTABP)                           05S0187
         BNE   @RT00187                                         05S0187
         C     @10,DUMMYTUP(,KEYTABP)                           05S0187
         BNE   @RT00187                                         05S0187
         C     @10,FCBIMTUP(,KEYTABP)                           05S0187
         BNE   @RT00187                                         05S0187
         C     @10,FCBAVTUP(,KEYTABP)                           05S0187
         BNE   @RT00187                                         05S0187
         C     @10,QNAMETUP(,KEYTABP)                           05S0187
         BNE   @RT00187                                         05S0187
         C     @10,UCSTUP(,KEYTABP)                             05S0187
         BNE   @RT00187                                         05S0187
         C     @10,UFOLDTUP(,KEYTABP)                           05S0187
         BNE   @RT00187                                         05S0187
         C     @10,UVRFYTUP(,KEYTABP)                           05S0187
         BNE   @RT00187                                         05S0187
         C     @10,PASSWTUP(,KEYTABP)                           05S0187
         BNE   @RT00187                                         05S0187
         C     @10,SUSERTUP(,KEYTABP)                           05S0187
         BNE   @RT00187                                         05S0187
         C     @10,SHOLDTUP(,KEYTABP)                           05S0187
         BNE   @RT00187                                         05S0187
         C     @10,SSREQTUP(,KEYTABP)                           05S0187
         BNE   @RT00187                                         05S0187
         C     @10,SSNMTUP(,KEYTABP)                            05S0187
         BNE   @RT00187                                         05S0187
         C     @10,MSVGPTUP(,KEYTABP)                           05S0187
         BE    @RF00187                                         05S0187
@RT00187 DS    0H                                               05S0188
*     DO;                              /*IF ANY OF THE ABOVE @Z40NQPE*/
*       SOUTCONV=OFF;                  /*PARAMETERS HAVE BEEN@Z40NQPE*/
         NI    SOUTCONV,B'01111111'                             05S0189
*     END;                             /*SPECIFIED THEN TURN SOUTCONV
*                                        OFF SO THAT REQUEST WILL NOT
*                                        BE CONVERTED TO SYSOUT.
*                                                            @Z40NQPE*/
*        IF SOUTCONV=ON THEN           /*YES? CONVERT TO     @Z40NQPE*/
@RF00187 TM    SOUTCONV,B'10000000'                             04S0191
         BNO   @RF00191                                         04S0191
*          DO;                         /*SYSOUT REQUEST      @Z40NQPE*/
*            DSNREQSW=OFF;             /*DONT SEARCH ON DSNAME IF
*                                        SYSOUT REQUEST.     @Z40NQPE*/
         NI    DSNREQSW,B'01111111'                             04S0193
*            SYSOUTUP=ADDR(SOUTXUNT);  /*POINT THE SYSOUT TEXT UNIT
*                                        POINTER IN THE KEY TABLE TO
*                                        THE DEFAULT SYSOUT TEXT UNIT
*                                                            @Z40NQPE*/
         LA    @10,SOUTXUNT                                     04S0194
         ST    @10,SYSOUTUP(,KEYTABP)                           04S0194
*          END;                        /*                    @Z40NQPE*/
*        ELSE;                         /*                    @Z40NQPE*/
@RF00191 DS    0H                                               04S0197
*      END;                            /*                    @Z40NQPE*/
*    ELSE;                             /* SU11 NOT INSTALLED @G29AN2F*/
@RF00184 DS    0H                                               04S0199
*ELSE;                                 /*TERM NOT REQUESTED          */
*                                                               04S0199
@RF00176 DS    0H                                               04S0200
*IF DSNREQSW=ON THEN                   /*DSNAME,TERM,DUMMY SPECIFIED */
@RC00176 TM    DSNREQSW,B'10000000'                             04S0200
         BNO   @RF00200                                         04S0200
*                                      /*SEE IF VOL/UNIT/LABEL INFO  */
*  IF DSSEQTUP^=ZERO × LABELTUP^=ZERO × /*DS SEQ NO., LABEL TYPE     */
*  (DSNREQ(ONE)^=AMPSAND & UNITTUP^=ZERO) × /*NON-AMP. DSN & UNIT DSC*/
*  UNCNTTUP^=ZERO × PARALTUP^=ZERO ×   /*UNIT COUNT, PARALLEL MOUNTNG*/
*  VLSEQTUP^=ZERO × VLCNTTUP^=ZERO ×   /*VOL SEQ NO, VOL COUNT       */
*  VLRDSTUP^=ZERO × PRIVTTUP^=ZERO ×   /*VOL REF, PRIVATE VOL        */
*  DCBDSTUP^=ZERO × DCBDDTUP^=ZERO THEN /*DSN OR DDN DCB REFERENCE   */
         SLR   @10,@10                                          04S0201
         C     @10,DSSEQTUP(,KEYTABP)                           04S0201
         BNE   @RT00201                                         04S0201
         C     @10,LABELTUP(,KEYTABP)                           04S0201
         BNE   @RT00201                                         04S0201
         CLI   DSNREQ,C'&&'                                     04S0201
         BE    @GL00065                                         04S0201
         C     @10,UNITTUP(,KEYTABP)                            04S0201
         BNE   @RT00201                                         04S0201
@GL00065 SLR   @10,@10                                          04S0201
         C     @10,UNCNTTUP(,KEYTABP)                           04S0201
         BNE   @RT00201                                         04S0201
         C     @10,PARALTUP(,KEYTABP)                           04S0201
         BNE   @RT00201                                         04S0201
         C     @10,VLSEQTUP(,KEYTABP)                           04S0201
         BNE   @RT00201                                         04S0201
         C     @10,VLCNTTUP(,KEYTABP)                           04S0201
         BNE   @RT00201                                         04S0201
         C     @10,VLRDSTUP(,KEYTABP)                           04S0201
         BNE   @RT00201                                         04S0201
         C     @10,PRIVTTUP(,KEYTABP)                           04S0201
         BNE   @RT00201                                         04S0201
         C     @10,DCBDSTUP(,KEYTABP)                           04S0201
         BNE   @RT00201                                         04S0201
         C     @10,DCBDDTUP(,KEYTABP)                           04S0201
         BE    @RF00201                                         04S0201
@RT00201 DS    0H                                               04S0202
*  CKDSCFSW=ON;                        /*CK EXIST ALOC CONFLICTS ONLY*/
         OI    CKDSCFSW,B'00000001'                             04S0202
*  ELSE;                                                        04S0203
@RF00201 DS    0H                                               04S0204
*ELSE;                                                          04S0204
@RF00200 DS    0H                                               04S0205
*IF NOCNVTSW=ON THEN                   /*INPUT-DON'T CNVRT EXIST ALOC*/
         L     @10,@PC00001+12                                  04S0205
         TM    NOCNVTSW(@10),B'01000000'                        04S0205
         BNO   @RF00205                                         04S0205
*  CKDSCFSW=ON;                        /*CK EXIST ALOC CONFLICTS ONLY*/
         OI    CKDSCFSW,B'00000001'                             04S0206
*/********************************************************************/
*/*                                                                  */
*/* SEGMENT NAME - CKREQDCB                                          */
*/*                                                                  */
*/* DESCRIPTIVE NAME - CHECK INPUT FOR ANY DCB PARAMETERS            */
*/*                                                                  */
*/* FUNCTION - CKREQDCB CHECKS THE INPUT TO SEE IF ANY DCB PARAMETERS*/
*/*            HAVE BEEN SPECIFIED. IF SO, THEN AN                   */
*/*            INDICATOR IS SET.                                     */
*/*                                                                  */
*/*  INPUT DATA -                                                    */
*/*    DCBSPCSW - OFF ON ENTRY, TURNED ON IF AT LEAST ONE DCB        */
*/*               PARAMETER FOUND IN INPUT.                          */
*/*    KEYTABLE - TABLE OF POINTERS TO INPUT TEXT UNITS.             */
*/*                                                                  */
*/*  OUTPUT DATA -                                                   */
*/*    DCBSPCSW - ON IF AT LEAST ONE DCB PARAMETER WAS FOUND         */
*/*               IN THE INPUT TEXT.                                 */
*/*                                                                  */
*/********************************************************************/
*IF BFALNTUP^=ZERO ×                   /*BUFFER ALIGNMENT            */
*   BFTEKTUP^=ZERO ×                   /*BUFFERING TECHNIQUE         */
*   BLKSZTUP^=ZERO ×                   /*BLOCKSIZE                   */
*   BUFINTUP^=ZERO ×                   /*NO. INPUT BUFFERS           */
*   BUFLTUP^=ZERO ×                    /*BUFFER LENGTH               */
*   BUFMXTUP^=ZERO ×                   /*MAX NB BUFFERS              */
*   BUFNOTUP^=ZERO ×                   /*NO. DCB BUFFERS             */
*   BUFOFTUP^=ZERO ×                   /*BUFFER OFFSET               */
*   BUFOUTUP^=ZERO ×                   /*NB OUTPUT BUFFERS           */
*   BUFRQTUP^=ZERO ×                   /*NO. GET MACRO BUFFERS       */
*   BUFSZTUP^=ZERO ×                   /*LINE BUFFER SIZE            */
*   CODETUP^=ZERO ×                    /*PAPER TAPE CODE             */
*   CPRITUP^=ZERO ×                    /*SEND/RECEIVE PRIORITY       */
*   DENTUP^=ZERO ×                     /*TAPE DENSITY                */
*   DIAGNTUP^=ZERO ×                   /*DIAGNOSTIC TRACE            */
*   DSORGTUP^=ZERO ×                   /*DSORG                       */
*   EROPTTUP^=ZERO ×                   /*ERROR OPTIONS               */
*   FRIDTUP^=ZERO ×                    /*SHARK IMAGELIB MEMBER       */
*   FUNCTUP^=ZERO ×                    /*3525 DATASET TYPE           */
*   GNCPTUP^=ZERO ×                    /*NB GAM BEFORE WAIT          */
*   INTVLTUP^=ZERO ×                   /*POLLING INTERVAL            */
*   IPLTXTUP^=ZERO ×                   /*IPL TEXT ID                 */
*   KYLENTUP^=ZERO ×                   /*DATA SET KEYS LENGTH        */
*   LIMCTTUP^=ZERO ×                   /*SEARCH LIMIT                */
*   LRECLTUP^=ZERO ×                   /*LRECL                       */
*   MODETUP^=ZERO ×                    /*CARD RDR/PUNCH MODE         */
*   NCPTUP^= ZERO ×                    /*NB READ/WRITE BEFORE CHECKS */
*   OPTCDTUP^=ZERO ×                   /*OPTIONAL SERVICES           */
*   PCIRTUP^=ZERO ×                    /*RECEIVING PCI               */
*   PCISTUP^=ZERO ×                    /*SENDING PCI                 */
*   PRTSPTUP^=ZERO ×                   /*PRINTER LINE SPACING        */
*   RECFMTUP^=ZERO ×                   /*RECORD FORMAT               */
*   RSRVFTUP^=ZERO ×                   /*FIRST BUFFER RESERVE        */
*   RSRVSTUP^=ZERO ×                   /*SECOND BUFFER RESERVE       */
*   SOWATUP^=ZERO ×                    /*TCAM USER WORK AREA SIZE    */
*   STACKTUP^=ZERO ×                   /*STACKER BIN                 */
*   THRSHTUP^=ZERO ×                   /*MSG Q PERCENTAGE            */
*   TRTCHTUP^=ZERO THEN                /*7-TRACK RECORDING TECHNIQUE */
@RF00205 SLR   @10,@10                                          05S0207
         C     @10,BFALNTUP(,KEYTABP)                           05S0207
         BNE   @RT00207                                         05S0207
         C     @10,BFTEKTUP(,KEYTABP)                           05S0207
         BNE   @RT00207                                         05S0207
         C     @10,BLKSZTUP(,KEYTABP)                           05S0207
         BNE   @RT00207                                         05S0207
         C     @10,BUFINTUP(,KEYTABP)                           05S0207
         BNE   @RT00207                                         05S0207
         C     @10,BUFLTUP(,KEYTABP)                            05S0207
         BNE   @RT00207                                         05S0207
         C     @10,BUFMXTUP(,KEYTABP)                           05S0207
         BNE   @RT00207                                         05S0207
         C     @10,BUFNOTUP(,KEYTABP)                           05S0207
         BNE   @RT00207                                         05S0207
         C     @10,BUFOFTUP(,KEYTABP)                           05S0207
         BNE   @RT00207                                         05S0207
         C     @10,BUFOUTUP(,KEYTABP)                           05S0207
         BNE   @RT00207                                         05S0207
         C     @10,BUFRQTUP(,KEYTABP)                           05S0207
         BNE   @RT00207                                         05S0207
         C     @10,BUFSZTUP(,KEYTABP)                           05S0207
         BNE   @RT00207                                         05S0207
         C     @10,CODETUP(,KEYTABP)                            05S0207
         BNE   @RT00207                                         05S0207
         C     @10,CPRITUP(,KEYTABP)                            05S0207
         BNE   @RT00207                                         05S0207
         C     @10,DENTUP(,KEYTABP)                             05S0207
         BNE   @RT00207                                         05S0207
         C     @10,DIAGNTUP(,KEYTABP)                           05S0207
         BNE   @RT00207                                         05S0207
         C     @10,DSORGTUP(,KEYTABP)                           05S0207
         BNE   @RT00207                                         05S0207
         C     @10,EROPTTUP(,KEYTABP)                           05S0207
         BNE   @RT00207                                         05S0207
         C     @10,FRIDTUP(,KEYTABP)                            05S0207
         BNE   @RT00207                                         05S0207
         C     @10,FUNCTUP(,KEYTABP)                            05S0207
         BNE   @RT00207                                         05S0207
         C     @10,GNCPTUP(,KEYTABP)                            05S0207
         BNE   @RT00207                                         05S0207
         C     @10,INTVLTUP(,KEYTABP)                           05S0207
         BNE   @RT00207                                         05S0207
         C     @10,IPLTXTUP(,KEYTABP)                           05S0207
         BNE   @RT00207                                         05S0207
         C     @10,KYLENTUP(,KEYTABP)                           05S0207
         BNE   @RT00207                                         05S0207
         C     @10,LIMCTTUP(,KEYTABP)                           05S0207
         BNE   @RT00207                                         05S0207
         C     @10,LRECLTUP(,KEYTABP)                           05S0207
         BNE   @RT00207                                         05S0207
         C     @10,MODETUP(,KEYTABP)                            05S0207
         BNE   @RT00207                                         05S0207
         C     @10,NCPTUP(,KEYTABP)                             05S0207
         BNE   @RT00207                                         05S0207
         C     @10,OPTCDTUP(,KEYTABP)                           05S0207
         BNE   @RT00207                                         05S0207
         C     @10,PCIRTUP(,KEYTABP)                            05S0207
         BNE   @RT00207                                         05S0207
         C     @10,PCISTUP(,KEYTABP)                            05S0207
         BNE   @RT00207                                         05S0207
         C     @10,PRTSPTUP(,KEYTABP)                           05S0207
         BNE   @RT00207                                         05S0207
         C     @10,RECFMTUP(,KEYTABP)                           05S0207
         BNE   @RT00207                                         05S0207
         C     @10,RSRVFTUP(,KEYTABP)                           05S0207
         BNE   @RT00207                                         05S0207
         C     @10,RSRVSTUP(,KEYTABP)                           05S0207
         BNE   @RT00207                                         05S0207
         C     @10,SOWATUP(,KEYTABP)                            05S0207
         BNE   @RT00207                                         05S0207
         C     @10,STACKTUP(,KEYTABP)                           05S0207
         BNE   @RT00207                                         05S0207
         C     @10,THRSHTUP(,KEYTABP)                           05S0207
         BNE   @RT00207                                         05S0207
         C     @10,TRTCHTUP(,KEYTABP)                           05S0207
         BE    @RF00207                                         05S0207
@RT00207 DS    0H                                               05S0208
*     DCBSPCSW = ON;                   /*TELL NORMALOC / CONVERT     */
         L     @10,@PC00001+12                                  05S0208
         OI    DCBSPCSW(@10),B'00000100'                        05S0208
*DSABPTR  = DSQLASTP;                  /*INIT PTR TO DSAB FOR SEARCH */
@RF00207 L     @10,@PC00001+8                                   03S0209
         L     @10,JSCBPTR(,@10)                                03S0209
         L     @10,JSCDSABQ(,@10)                               03S0209
         L     DSABPTR,DSQLASTP(,@10)                           03S0209
*LIMCOUNT = 0;                         /* INIT NOT-IN-USE COUNT      */
         SLR   @10,@10                                          03S0210
         STH   @10,LIMCOUNT                                     03S0210
*DO WHILE (ERRCODE=0 & DSABPTR^=ZERO   /*ERROR OR 'END' OF CHAIN     */
*  & (DSNCNP=0                         /*FOUND NOTHING TO CONVERT YET*/
*    × ENDDNSSW=OFF));                 /*OR FOUND A DSAB TO CONVERT BUT
*                                        STILL SEARCHING ON DDNAME   */
*                                                               03S0211
         B     @DE00211                                         03S0211
@DL00211 DS    0H                                               03S0212
*  IF DSABNUSE=NOTINUSE & DSABOPCT=0   /*DSAB NOT IN USE             */
*     & SIOTGDGA=OFF THEN              /*NOT A SYSTEM-GEN'D ALLOC.   */
         TM    DSABNUSE(DSABPTR),B'00000001'                    03S0212
         BNZ   @RF00212                                         03S0212
         LH    @10,DSABOPCT(,DSABPTR)                           03S0212
         LTR   @10,@10                                          03S0212
         BNZ   @RF00212                                         03S0212
         L     @10,DSABSIOT(,DSABPTR)                           03S0212
         TM    SIOTGDGA(@10),B'01000000'                        03S0212
         BNZ   @RF00212                                         03S0212
*    LIMCOUNT = LIMCOUNT+1;            /*BUMP COUNT FOR LIMIT   03S0213
*                                        PROCESSING, IF NECESSARY    */
*                                                               03S0213
         LH    @10,LIMCOUNT                                     03S0213
         LA    @10,1(,@10)                                      03S0213
         STH   @10,LIMCOUNT                                     03S0213
*  DSNEQUSW = OFF;                     /*INIT RESULT OF DSNAME COMPARE*
@RF00212 NI    DSNEQUSW,B'11110111'                             03S0214
*  IF DSNREQSW=ON THEN                 /*IF CHECKING FOR EQUAL DSNAMES*
         TM    DSNREQSW,B'10000000'                             03S0215
         BNO   @RF00215                                         03S0215
*/********************************************************************/
*/*                                                                  */
*/* SEGMENT NAME - DSNEQUAL                                          */
*/*                                                                  */
*/* DESCRIPTIVE NAME - VERIFY IF DATASET NAME REQUESTED EQUALS THE   */
*/*                    DATASET NAME IN CURRENT ALLOCATION.           */
*/*                                                                  */
*/* OPERATION - THE FOLLOWING COMPARES ARE DONE:                     */
*/*             AT LEAST ONE TEST IN GROUP (1) MUST SUCCEED, AND ALL */
*/*             TESTS IN GROUP (2) MUST SUCCEED, IN ORDER FOR THE    */
*/*             'DSNEQUSW' TO BE SET ON UPON EXIT FROM THIS SEGMENT. */
*/*                                                                  */
*/*         (1)  COMPARE:                                            */
*/*            . REQUEST TO DATASET NAME IN THE JFCB                 */
*/*            . REQUEST TO ALTERNATE DATASET NAME POINTED TO BY     */
*/*              BY THE DSAB IF ANY.                                 */
*/*            . REQUEST TO THE ALIAS DATASET NAME IF ANY.   @YM03581*/
*/*                                                                  */
*/*         (2)  IT MUST BE TRUE THAT:                               */
*/*            . THE CURRENT ALLOCATION IS NOT GDG-ALL OR SINGLE     */
*/*              (BECAUSE GDG REQUESTS ARE ALWAYS ASSIGNED           */
*/*              NEW ALLOCATIONS TO ALLOW JFCB HOUSEKEEPING          */
*/*              TO HANDLE GDG IDIOSYNCRASIES).                      */
*/*            . IF THE REQUEST IS FOR A TERMINAL, THE 'NULLFILE'    */
*/*              NAME IN THE CURRENT ALLOCATION IS FOR A TERMINAL    */
*/*            . THE CURRENT ALLOCATION IS NOT FOR QNAME             */
*/*            . IF THE REQUEST IS FOR A DUMMY DATASET, THE          */
*/*              'NULLFILE' NAME IN THE CURRENT ALLOCATION IS FOR A  */
*/*              DUMMY DATASET.                                      */
*/*            . THE CURRENT ALLOCATION IS NOT FOR SUBSYS    @G29AN2F*/
*/*            . VOLUME SERIAL(S) IF REQUESTED MATCH THOSE           */
*/*              FOR THE CURRENT ALLOCATION                          */
*/*                                                                  */
*/* INPUT DATA -                                                     */
*/*              KEYTABLE - POINTS TO TEXT UNITS                     */
*/*              SIOT - CONTAINS GDG INFORMATION BITS                */
*/*                     AND 'DATASET IS A TERMINAL' BIT              */
*/*              JFCB - CONTAINS DATASET NAME, AND VOLUME SERIALS    */
*/*              JFCBX - CONTAINS VOLUME SERIALS                     */
*/*              DSAB - CONTAINS POINTER TO ALTERNATE DATASET NAME   */
*/*                     ( E.G. THE &DSN , WHEREAS THE JFCB CONTAINS  */
*/*                       THE SYSTEM GENERATED NAME).                */
*/*              DSNTRMSW - BIT IN CKENVMAP - ON IF TERMINAL REQUESTED*
*/*                                                                  */
*/* OUTPUT DATA -                                                    */
*/*               DSNEQUSW - BIT IN CKENVMAP - ON IF AFTER ALL       */
*/*                          TESTS, DATASET NAMES ARE 'EQUAL',       */
*/*                          LEFT OFF OTHERWISE                      */
*/********************************************************************/
*IF (SIOTGALL=OFF & SCTSGDGS=OFF)      /*DSNAME FOUND NOT GDG        */
*   & SIOTQNAM=OFF                     /*AND NOT TCAM QNAME          */
*   & ((DSNTRMSW=ON & SIOTTERM=ON) × (DSNTRMSW=OFF & SIOTTERM=OFF))
*                                      /*AND TERM:TERM OR DUMMY:DUMMY
*                                        NOT DUMMY:TERM OR VICE VERSA*/
*   & SIOTSSGP = OFF                   /*AND NOT SUBSYS      @G29AN2F*/
*   THEN                               /*OK TO COMPARE NAMES         */
         L     @10,DSABSIOT(,DSABPTR)                           04S0216
         TM    SIOTGALL(@10),B'00100000'                        04S0216
         BNZ   @RF00216                                         04S0216
         TM    SCTSGDGS(@10),B'10000000'                        04S0216
         BNZ   @RF00216                                         04S0216
         TM    SIOTQNAM(@10),B'00000001'                        04S0216
         BNZ   @RF00216                                         04S0216
         TM    DSNTRMSW,B'00000010'                             04S0216
         BNO   @GL00112                                         04S0216
         TM    SIOTTERM(@10),B'01000000'                        04S0216
         BO    @GL00108                                         04S0216
@GL00112 TM    DSNTRMSW,B'00000010'                             04S0216
         BNZ   @RF00216                                         04S0216
         L     @10,DSABSIOT(,DSABPTR)                           04S0216
         TM    SIOTTERM(@10),B'01000000'                        04S0216
         BNZ   @RF00216                                         04S0216
@GL00108 L     @10,DSABSIOT(,DSABPTR)                           04S0216
         TM    SIOTSSGP(@10),B'00010000'                        04S0216
         BNZ   @RF00216                                         04S0216
*    DO;                               /*SET DSNEQUSW ON IF SAME     */
*      IF DSNREQ=JFCBDSNM THEN         /* NAMES MATCH                */
         L     @10,SJFCBPTR(,@10)                               04S0218
         CLC   DSNREQ(44),JFCBDSNM(@10)                         04S0218
         BNE   @RF00218                                         04S0218
*        DSNEQUSW = ON;                /* REMEMBER WERE EQUAL        */
         OI    DSNEQUSW,B'00001000'                             04S0219
*      ELSE                            /*TRY ALIAS OR ALTERNATE 04S0220
*                                        DSNAME              @YM03581*/
*        IF SIOALIAS = ON &            /*ALIAS DSN PRESENT?  @YM03581*/
*           DSNREQ = SIOTJFX->JFCBXNAM THEN /*COMPARE DSNAMES   04S0220
*                                                            @YM03581*/
         B     @RC00218                                         04S0220
@RF00218 L     @10,DSABSIOT(,DSABPTR)                           04S0220
         TM    SIOALIAS(@10),B'10000000'                        04S0220
         BNO   @RF00220                                         04S0220
         L     @10,SIOTJFX(,@10)                                04S0220
         CLC   DSNREQ(44),JFCBXNAM(@10)                         04S0220
         BNE   @RF00220                                         04S0220
*            DSNEQUSW = ON;            /*REMEMBER WERE EQUAL @YM03581*/
         OI    DSNEQUSW,B'00001000'                             04S0221
*        ELSE                          /*NO ALIAS OR MATCH   @YM03581*/
*          IF DSABANMP^=0 THEN         /*ALT DSNAME PRESENT? @YM03581*/
         B     @RC00220                                         04S0222
@RF00220 L     @10,DSABANMP(,DSABPTR)                           04S0222
         LTR   @10,@10                                          04S0222
         BZ    @RF00222                                         04S0222
*            DO;                       /*TRY ALTERNATE DSN   @YM03581*/
*              DSNEXIST = DSABANAM(1:DSABANML); /*COPY ALTERNATE
*                                                 DSNAME     @YM03581*/
         MVI   DSNEXIST+1,C' '                                  04S0224
         MVC   DSNEXIST+2(42),DSNEXIST+1                        04S0224
         SLR   @08,@08                                          04S0224
         IC    @08,DSABANML(,@10)                               04S0224
         BCTR  @08,0                                            04S0224
         EX    @08,@SM02712                                     04S0224
*              IF DSNREQ = DSNEXIST THEN /*DO NAMES MATCH ?  @YM03581*/
         CLC   DSNREQ(44),DSNEXIST                              04S0225
         BNE   @RF00225                                         04S0225
*                DSNEQUSW = ON;        /*REMEMBER WERE EQUAL @YM03581*/
         OI    DSNEQUSW,B'00001000'                             04S0226
*            END;                      /*END ALT NAME TEST   @YM03581*/
@RF00225 DS    0H                                               04S0228
*    END;                                                       04S0228
*                                                               04S0228
@RF00222 DS    0H                                               04S0228
@RC00220 DS    0H                                               04S0228
@RC00218 DS    0H                                               04S0229
*IF VLSERTUP^=ZERO & DSNEQUSW=ON THEN  /*VOL SER SPECIFIED AND NAMES
*                                        ARE EQUAL                   */
@RF00216 DS    0H                                               04S0229
@RF00215 L     @10,VLSERTUP(,KEYTABP)                           04S0229
         LTR   @10,@10                                          04S0229
         BZ    @RF00229                                         04S0229
         TM    DSNEQUSW,B'00001000'                             04S0229
         BNO   @RF00229                                         04S0229
*  DO;                                                          04S0230
*    RFY TEXTUNIT BASED(VLSERTUP);     /*EXAMINE VOLSER TEXT ENTRY   */
*    TXTUFLDP = ADDR(TEXTUENT);        /* INDEX SUCCESSIVE VOLSERS   */
         LA    @08,TEXTUENT(,@10)                               04S0232
         ST    @08,TXTUFLDP                                     04S0232
*    NBVOLSER=JFCBNVOL;                /*COPY NB VOLSER ENTRIES JFCB */
         L     @08,DSABSIOT(,DSABPTR)                           04S0233
         L     @08,SJFCBPTR(,@08)                               04S0233
         SLR   @05,@05                                          04S0233
         IC    @05,JFCBNVOL(,@08)                               04S0233
         STH   @05,NBVOLSER                                     04S0233
*    IF TEXTUNUM^=NBVOLSER THEN        /*NB VOL SER IN REQ=NB IN JFCB*/
         ICM   @10,12,TEXTUNUM(@10)                             04S0234
         SRA   @10,16                                           04S0234
         CR    @05,@10                                          04S0234
         BE    @RF00234                                         04S0234
*      DSNEQUSW=OFF;                   /*DSAB NOT ELG TO SATISFY REQ */
         NI    DSNEQUSW,B'11110111'                             04S0235
*    ELSE                              /*CONTINUE COMPARISON         */
*      DO;                                                      04S0236
         B     @RC00234                                         04S0236
@RF00234 DS    0H                                               04S0237
*        INDXVLSR=ZERO;                /*INIT JFCB VOL SER INDEX     */
         SLR   @10,@10                                          04S0237
         ST    @10,INDXVLSR                                     04S0237
*        VLSRJFCP=ADDR(JFCBVOLS);      /*COMP JFCB VOLSER FIRST      */
         L     @10,DSABSIOT(,DSABPTR)                           04S0238
         L     @10,SJFCBPTR(,@10)                               04S0238
         LA    @10,JFCBVOLS(,@10)                               04S0238
         ST    @10,VLSRJFCP                                     04S0238
*        DO I=ONE TO NBVOLSER          /*DO COMP ON INPUT REQ        */
*          WHILE (DSNEQUSW=ON);        /*STOP WHEN FIND FIRST^=COMPAR*/
         LA    @10,1                                            04S0239
         B     @DE00239                                         04S0239
@DL00239 TM    DSNEQUSW,B'00001000'                             04S0239
         BNO   @DC00239                                         04S0239
*          INDXVLSR=INDXVLSR+ONE;      /*INCREMENT INDEX INTO JFCB(X)*/
         LA    @10,1                                            04S0240
         AL    @10,INDXVLSR                                     04S0240
         ST    @10,INDXVLSR                                     04S0240
*          HOLD6BYT=TEXTUPRM(ONE:TEXTULEN);/*PAD VOLSER WITH BLANKS  */
         MVI   HOLD6BYT+1,C' '                                  04S0241
         MVC   HOLD6BYT+2(4),HOLD6BYT+1                         04S0241
         L     @08,TXTUFLDP                                     04S0241
         ICM   @05,12,TEXTULEN(@08)                             04S0241
         SRA   @05,16                                           04S0241
         BCTR  @05,0                                            04S0241
         EX    @05,@SM02714                                     04S0241
*          IF HOLD6BYT^=VOLSRJFC(INDXVLSR) THEN /*SAME VOLUME SERIALS*/
         MH    @10,@CH00071                                     04S0242
         L     @08,VLSRJFCP                                     04S0242
         ALR   @08,@10                                          04S0242
         AL    @08,@CF02716                                     04S0242
         CLC   HOLD6BYT(6),VOLSRJFC(@08)                        04S0242
         BE    @RF00242                                         04S0242
*            DSNEQUSW=OFF;             /*NO, DATASETS NOT SAME       */
         NI    DSNEQUSW,B'11110111'                             04S0243
*          ELSE                        /*YES, CONTINUE COMPARISONS   */
*            DO;                                                04S0244
         B     @RC00242                                         04S0244
@RF00242 DS    0H                                               04S0245
*              TXTUFLDP=TXTUFLDP+TEXTULEN+LENGTH(TEXTULEN);     04S0245
         L     @10,TXTUFLDP                                     04S0245
         ICM   @08,12,TEXTULEN(@10)                             04S0245
         SRA   @08,16                                           04S0245
         ALR   @08,@10                                          04S0245
         AL    @08,@CF00209                                     04S0245
         ST    @08,TXTUFLDP                                     04S0245
*                                      /*POINT TO NEXT ENTRY         */
*              IF I=5 THEN             /*JFCB IS DONE AFTER 5 VOL SERS,
*                                        SO GO TO JFCBX              */
         CLC   I(4),@CF01071                                    04S0246
         BNE   @RF00246                                         04S0246
*                DO;                                            04S0247
*                  INDXVLSR=ZERO;      /*INIT INDEX INTO JFCBX VOLSER*/
         SLR   @10,@10                                          04S0248
         ST    @10,INDXVLSR                                     04S0248
*                  JFCBXPTR=SIOTJFX;   /*POINT TO JFCBX FOR NEXT COMP*/
         L     @10,DSABSIOT(,DSABPTR)                           04S0249
         L     @10,SIOTJFX(,@10)                                04S0249
         ST    @10,JFCBXPTR                                     04S0249
*                  VLSRJFCP=ADDR(JFCBXVOL);/*COMP VOL SERS IN JFCBX  */
         LA    @10,JFCBXVOL(,@10)                               04S0250
         ST    @10,VLSRJFCP                                     04S0250
*                END;                                           04S0251
*              IF INDXVLSR=15 THEN     /*15 VOL SER IN EACH JFCBX    */
@RF00246 CLC   INDXVLSR(4),@CF00076                             04S0252
         BNE   @RF00252                                         04S0252
*                DO;                                            04S0253
*                  INDXVLSR=ZERO;      /*INIT INDEX INTO JFCBX VOLSER*/
         SLR   @10,@10                                          04S0254
         ST    @10,INDXVLSR                                     04S0254
*                  JFCBXPTR=JFCBXNXT;  /*POINT TO NEXT JFCBX FOR COMP*/
         L     @10,JFCBXPTR                                     04S0255
         L     @10,JFCBXNXT(,@10)                               04S0255
         ST    @10,JFCBXPTR                                     04S0255
*                  VLSRJFCP=ADDR(JFCBXVOL);/*COMP VOL SERS IN JFCBX  */
         LA    @10,JFCBXVOL(,@10)                               04S0256
         ST    @10,VLSRJFCP                                     04S0256
*                END;                                           04S0257
*            END;                                               04S0258
@RF00252 DS    0H                                               04S0259
*        END;                                                   04S0259
@RC00242 LA    @10,1                                            04S0259
         AL    @10,I                                            04S0259
@DE00239 ST    @10,I                                            04S0259
         CH    @10,NBVOLSER                                     04S0259
         BNH   @DL00239                                         04S0259
@DC00239 DS    0H                                               04S0260
*      END;                                                     04S0260
*  END;                                                         04S0261
@RC00234 DS    0H                                               04S0262
*                                                               03S0262
*  IF DDNREQSW=ON & DDNREQ=TIOEDDNM THEN /*DDN SPECIFIED=DDN W/ DSAB */
@RF00229 TM    DDNREQSW,B'01000000'                             03S0262
         BNO   @RF00262                                         03S0262
         L     @10,DSABTIOT(,DSABPTR)                           03S0262
         CLC   DDNREQ(8),TIOEDDNM(@10)                          03S0262
         BNE   @RF00262                                         03S0262
*    DDNEQUSW = ON;                    /*THIS DSAB RELATED TO DDN    */
         OI    DDNEQUSW,B'00000100'                             03S0263
*  ELSE                                /*THIS DSAB NOT RELATED TO DDN*/
*    DDNEQUSW = OFF;                                            03S0264
*                                                               03S0264
         B     @RC00262                                         03S0264
@RF00262 NI    DDNEQUSW,B'11111011'                             03S0264
*  IF DSNEQUSW=ON & DDNEQUSW=ON THEN   /*DSAB HAS BOTH DSN,DDN SPECFD*/
@RC00262 TM    DSNEQUSW,B'00001100'                             03S0265
         BNO   @RF00265                                         03S0265
*    SAMDSASW = ON;                    /*ONE DSAB HAS BOTH DSN, DDN  */
         OI    SAMDSASW,B'00010000'                             03S0266
*  ELSE                                                         03S0267
*    SAMDSASW = OFF;                   /*DSN, DDN NOT BOTH MATCHED   */
*                                                               03S0267
         B     @RC00265                                         03S0267
@RF00265 NI    SAMDSASW,B'11101111'                             03S0267
*  IF DSNEQUSW = ON &                  /*REQUESTED DSN FOUND         */
*    (DSNCNP=0 × SAMDSASW=ON) THEN     /*TAKE 1ST DSN OR DSN WITH DDN*/
@RC00265 TM    DSNEQUSW,B'00001000'                             03S0268
         BNO   @RF00268                                         03S0268
         L     @10,DSNCNP                                       03S0268
         LTR   @10,@10                                          03S0268
         BZ    @RT00268                                         03S0268
         TM    SAMDSASW,B'00010000'                             03S0268
         BNO   @RF00268                                         03S0268
@RT00268 DS    0H                                               03S0269
*    DO;                                                        03S0269
*/********************************************************************/
*/*                                                                  */
*/* SEGMENT NAME - CKDSNENV                                          */
*/*                                                                  */
*/* DESCRIPTIVE NAME - CKECK DATASET NAME ENVIRONMENT                */
*/*                                                                  */
*/* FUNCTION - CKDSNENV IS INVOKED BY CKENVRON TO EXAMINE AN EXISTING*/
*/*     ALLOCATION OF THE REQUESTED DSNAME. IT DETERMINES WHETHER    */
*/*     OR NOT THE EXISTING ALLOCATION CAN BE USED TO SATISFY        */
*/*     THE REQUEST.                                                 */
*/*                                                                  */
*/*   OPERATION - THE DSAB IS FIRST CHECKED FOR ENVIRONMENTAL        */
*/*       CONFLICTS WITH THE REQUEST. IF THE REQUEST SPECIFIES A     */
*/*       STATUS OF NEW, THEN FINDING IT                             */
*/*       ASSOCIATED WITH AN EXISTING ALLOCATION IS AN ERROR.        */
*/*       IF THE REQUEST SPECIFIES A STATUS OF SHR OR OLD            */
*/*       AND AN EXISTING ALLOCATION IS FOUND NON-                   */
*/*       PERMANENTLY ALLOCATED, NOT IN-USE, AND WITH A DISPOSITION  */
*/*       OF DELETE, THEN AN ERROR EXISTS, SINCE THE USER COULD NOT  */
*/*       PREDICT THAT THE DATA SET WOULD NOT HAVE BEEN UNALLOCATED, */
*/*       AND THUS ACTUALLY DELETED, BY LIMIT PROCESSING.  IN BOTH   */
*/*       CASES AN ERROR CODE IS SET AND PROCESSING TERMINATES. SEE  */
*/*       THE CODE FOR THE EXACT TESTS MADE.                         */
*/*       THIS ENDS ALL CONFLICT-ONLY CHECKING (SEE CKENSTUP).       */
*/*                                                                  */
*/*       'CHECK ELIGIBILITY SEGMENT'.                               */
*/*       UNLESS THE USER HAS PRECLUDED THE USE OF EXISTING          */
*/*       ALLOCATIONS, THE DSAB IS CHECKED TO SEE IF IT HAS THE      */
*/*       NECESSARY PROPERTIES TO BE ELIGIBLE TO SATISFY THE REQUEST.*/
*/*       THE DSAB IS ASSUMED ELIGIBLE UNTIL IT                      */
*/*       FAILS ONE OF THE TESTS.                                    */
*/*                                                                  */
*/*       IF THE DSAB IS ELIGIBLE TO SATISFY THE REQUEST, THEN THE   */
*/*       DSNAME SEARCH PART OF THE DSAB CHAIN SEARCH IS ENDED.      */
*/*       IF A DDNAME WAS REQUESTED AND IS ASSOCIATED WITH THE DSAB, */
*/*       THEN THE DDNAME PART OF THE DSAB CHAIN SEARCH IS ALSO ENDED.*
*/*                                                                  */
*/*       IF THE DSAB IS NOT ELIGIBLE TO SATISFY THE REQUEST, THEN   */
*/*       THE ADDRESS OF THE DSAB IS SAVED FOR POSSIBLE COPY OF      */
*/*       VOL/UNIT INFORMATION. THIS IS DONE ONLY IF:                */
*/*       . VOL/UNIT INFORMATION WAS NOT SPECIFIED IN THE REQUEST.   */
*/*         (SINCE IF VOL/UNIT INFORMATION OTHER THAN VOLUME SERIAL  */
*/*         WAS REQUESTED THEN CONFLICTS ONLY CHECKING WAS DONE, ONLY*/
*/*         THE PRESENCE OF THE VOLUME SERIAL TEXT UNIT IS TESTED    */
*/*         FOR AT THIS POINT IN THE CODE.)                          */
*/*       . THE REQUEST IS NOT FOR A NEW DATA SET. (FOR A    @YM08653*/
*/*         NEW REQUEST WHEN AN EXISTING ALLOCATION OF THE   @YM08653*/
*/*         DATA SET CANNOT BE CONVERTED, IT IS ASSUMED A    @YM08653*/
*/*         DIFFERENT DATA SET IS REQUESTED AND THEREFORE,   @YM08653*/
*/*         A COPY OF VOL/UNIT INFORMATION WON'T BE DONE)    @YM08653*/
*/*       . THE REQUEST DOES NOT SPECIFY MOD FOR A NON-      @YM08653*/
*/*         PERMANENTLY ALLOCATED DATA SET WITH A DISP OF    @YM08653*/
*/*         DELETE THAT IS NOT IN-USE. (THE REQUESTOR IN THIS@YM08653*/
*/*         CASE CANNOT BE CERTAIN THAT THE DATA SET HAD NOT @YM08653*/
*/*         BEEN UNALLOCATED AND DELETED AND THEREFORE, NO   @YM08653*/
*/*         ATTEMPT IS MADE TO GIVE HIM THE SAME DATA SET.)  @YM08653*/
*/*       . THE EXISTING ALLOCATION IS NOT A VSAM DATA SET.  @YA00068*/
*/*         THIS IS TO AVOID ANY PROBLEMS OF COPYING         @YA00068*/
*/*         INFORMATION FOR ONLY THE FIRST DEVICE TYPE OF A  @YA00068*/
*/*         MULTI DEVICE TYPE VSAM DATASET AND TO AVOID      @YA00068*/
*/*         PROBLEMS IN THE GENERAL CASE OF VSAM DATASETS    @YA00068*/
*/*         WHERE VSAM LOCATE FILLS ADDITIONAL JFCB FIELDS.  @YA00068*/
*/*                                                                  */
*/*       NOTE ALSO:                                                 */
*/*       IF THE EXISTING ALLOCATION IS NOT ELIGIBLE FOR CONVERSION, */
*/*       BUT IS ASSOCIATED WITH THE REQUESTED DDNAME,               */
*/*       THEN IN CKDDNENV IT WILL BE DETERMINED EITHER              */
*/*       THAT THE DDNAME CAN BE DISASSOCIATED FROM THE EXISTING     */
*/*       ALLOCATION OR, IF NOT, THAT THE EXISTING ALLOCATION IS     */
*/*       IN CONFLICT WITH THE REQUEST.                              */
*/*                                                                  */
*/*   OUTPUT -                                                       */
*/*       DSNCNP   - ADDRESS OF DSNAME DSAB TO CONVERT               */
*/*       COPYDSAB - ADDRESS OF DSAB OF ALLOCATION FROM WHICH        */
*/*                  VOL/UNIT INFORMATION CAN BE COPIED              */
*/*       ENDDNSSW - ON IF DDNAME ASSOCIATED WITH DSAB AND DSAB      */
*/*                  ELIGIBLE TO SATISFY REQUEST                     */
*/*       ERRCODE SET FOR -                                          */
*/*               - STATUS OF NEW SPECIFIED WITH A DSNAME            */
*/*                 WHICH HAS BEEN FOUND ASSOCIATED WITH AN          */
*/*                 EXISTING ALLOCATION                              */
*/*               - STATUS OF SHR OR OLD SPECIFIED,                  */
*/*                 AND AN EXISTING ALLOCATION WAS FOUND WITH A      */
*/*                 DISPOSITION OF DELETE.                           */
*/*                                                                  */
*/********************************************************************/
*RFY TEXTUNIT BASED(STATSTUP);                                  04S0270
*IF TEXTUPAR(ONE) = NEW                /*STATUS NEW SPECIFIED IN REQ */
*  & SCTDUMMY=OFF                      /*DATASET NOT DUMMY TYPE      */
*  & DSNREQ(ONE) ^= AMPSAND THEN       /*NON-&DSNAME SPECIFIED IN REQ*/
         L     @10,STATSTUP(,KEYTABP)                           04S0271
         CLI   TEXTUPAR(@10),X'04'                              04S0271
         BNE   @RF00271                                         04S0271
         L     @10,DSABSIOT(,DSABPTR)                           04S0271
         TM    SCTDUMMY(@10),B'10000000'                        04S0271
         BNZ   @RF00271                                         04S0271
         CLI   DSNREQ,C'&&'                                     04S0271
         BE    @RF00271                                         04S0271
*  ERRCODE = RCNEWFND;                 /*NEW DS REQ BUT FOUND CODE   */
*                                                               04S0272
         L     @10,@PC00001+4                                   04S0272
         MVC   ERRCODE(2,@10),@CB02420                          04S0272
*IF (TEXTUPAR(ONE) =SHR ×              /*STATUS SHR SPECIFIED IN REQ */
*  TEXTUPAR(ONE)=OLD) &                /*STATUS OLD SPECIFIED IN REQ */
*  SCTDUMMY=OFF &                      /*DATASET NOT DUMMY TYPE      */
*  DSABPALC = OFF &                    /*NOT PERMANENTLY ALLOCATED   */
*  (DSABNUSE = OFF & DSABOPCT = 0) &   /*NOT IN USE                  */
*  SIOTDLET = ON  THEN                 /*NORMAL DISP OF DELETE       */
@RF00271 L     @10,STATSTUP(,KEYTABP)                           04S0273
         CLI   TEXTUPAR(@10),X'08'                              04S0273
         BE    @GL00125                                         04S0273
         CLI   TEXTUPAR(@10),X'01'                              04S0273
         BNE   @RF00273                                         04S0273
@GL00125 L     @10,DSABSIOT(,DSABPTR)                           04S0273
         TM    SCTDUMMY(@10),B'10000000'                        04S0273
         BNZ   @RF00273                                         04S0273
         TM    DSABPALC(DSABPTR),B'01000000'                    04S0273
         BNZ   @RF00273                                         04S0273
         TM    DSABNUSE(DSABPTR),B'00000001'                    04S0273
         BNZ   @RF00273                                         04S0273
         SLR   @08,@08                                          04S0273
         CH    @08,DSABOPCT(,DSABPTR)                           04S0273
         BNE   @RF00273                                         04S0273
         TM    SIOTDLET(@10),B'00000100'                        04S0273
         BNO   @RF00273                                         04S0273
*    DO;                               /*THE DATASET COULD HAVE BEEN
*                                        UNALLOCATED BY LIMIT PROC. &
*                                        THEN IT WOULDN'T BE FOUND  */
*      IF VLSERTUP^=ZERO THEN          /*IF VOLSER SPEC IN REQ       */
         C     @08,VLSERTUP(,KEYTABP)                           04S0275
         BE    @RF00275                                         04S0275
*        ERRCODE = RCDELETE;           /*SET DYNAMIC ALOC ERROR CODE */
         L     @10,@PC00001+4                                   04S0276
         MVC   ERRCODE(2,@10),@CB02422                          04S0276
*      ELSE                            /*VOLSER NOT SPEC IN REQ      */
*        ERRCODE = RCLCAT08;           /*ERROR CODE=LOCATE ERROR SINCE
*                                        LOCATE WOULD HAVE FAILED IN
*                                        NORMAL ALLOC IF LET REQ THRU*/
         B     @RC00275                                         04S0277
@RF00275 L     @10,@PC00001+4                                   04S0277
         MVC   ERRCODE(2,@10),@CB02484                          04S0277
*    END;                                                       04S0278
*                                                               04S0278
@RC00275 DS    0H                                               04S0279
*IF ERRCODE = 0 &                      /*NO ERROR                    */
*  CKDSCFSW=OFF THEN                   /*AND DID NOT DECIDE TO  04S0279
*                                        CHECK ONLY FOR CONFLICTS    */
@RF00273 L     @10,@PC00001+4                                   04S0279
         ICM   @08,3,ERRCODE(@10)                               04S0279
         BNZ   @RF00279                                         04S0279
         TM    CKDSCFSW,B'00000001'                             04S0279
         BNZ   @RF00279                                         04S0279
*  DO;                                                          04S0280
*    ELIGBLSW=ON;                      /*ASSUME DSAB ELIGIBLE TO
*                                        SATISFY REQUEST INITIALLY   */
         OI    ELIGBLSW,B'10000000'                             04S0281
*/********************************************************************/
*/*                                                                  */
*/* SEGMENT NAME - CKDSNELG                                          */
*/*                                                                  */
*/* DESCRIPTIVE NAME - CHECK ALLOCATION FOR ELIGIBILITY FOR          */
*/*                    FOR CONVERSION.                               */
*/*                                                                  */
*/* FUNCTION - CKDSNELG DETERMINES IF THE                            */
*/*            EXISTING ALLOCATION IS ELIGIBLE FOR CONVERSION.       */
*/*                                                                  */
*/*   OPERATION - THE EXISTING ALLOCATION IS CHECKED FOR THE FOLLOWING*
*/*       PROPERTIES TO SEE IF IT IS ELIGIBLE TO SATISFY THE REQUEST:*/
*/*       1) IT MUST NOT BE IN USE                                   */
*/*       2) IT MUST NOT BE A MEMBER OF A CONCATENATED               */
*/*          GROUP                                                   */
*/*       3) IF IT IS NOT PERMANENTLY ALLOCATED, IS NOT IN USE AND   */
*/*          HAS A DISPOSITION OF DELETE, THEN THE STATUS OF MOD     */
*/*          MUST NOT HAVE BEEN SPECIFIED IN THE REQUEST             */
*/*       4) IT MUST HAVE THE CONVERTIBLE ATTRIBUTE OR IF NOT, MUST  */
*/*          SATISFY AN ADDITIONAL SET OF REQUIREMENTS (SEE CKDSNOCV */
*/*          SEGMENT).                                               */
*/*       THE 'ELIGBLSW' REMAINS ON UNTIL THE EXISTING ALLOCATION    */
*/*       FAILS ONE OF THE TESTS. IT IS THEN TURNED OFF TO INDICATE  */
*/*       THAT THE DSAB IS NOT ELIGIBLE AND THAT DSAB CHAIN          */
*/*       PROCESSING MUST CONTINUE.                                  */
*/*                                                                  */
*/*   INPUT DATA  - ELIGBLSW - SET ON BY AN OUTER SEGMENT            */
*/*                                                                  */
*/*   OUTPUT DATA - ELIGBLSW - ON IF DSAB HAD ALL NECESSARY          */
*/*                            REQUIREMENTS SO THAT IT CAN BE USED   */
*/*                            TO SATISFY REQUEST.                   */
*/*                                                                  */
*/********************************************************************/
*IF DSABNUSE=ON ×                      /*DSAB IN USE                 */
*  DSABOPCT^=0 ×                       /*DATASET IS OPEN             */
*  DSABCATM=ON THEN                    /*MEMBER OF A CONCAT GROUP    */
         TM    DSABNUSE(DSABPTR),B'00000001'                    05S0282
         BO    @RT00282                                         05S0282
         LH    @10,DSABOPCT(,DSABPTR)                           05S0282
         LTR   @10,@10                                          05S0282
         BNZ   @RT00282                                         05S0282
         TM    DSABCATM(DSABPTR),B'00000010'                    05S0282
         BNO   @RF00282                                         05S0282
@RT00282 DS    0H                                               05S0283
*    ELIGBLSW=OFF;                     /*DSAB NOT ELIG TO SATISFY REQ*/
*                                                               05S0283
         NI    ELIGBLSW,B'01111111'                             05S0283
*IF ELIGBLSW=ON THEN                   /*REQUEST ELIGIBLE SO FAR     */
@RF00282 TM    ELIGBLSW,B'10000000'                             05S0284
         BNO   @RF00284                                         05S0284
*  IF STATSTUP->TEXTUPAR(ONE) = MOD &  /*STATUS MOD SPECIFIED IN REQ */
*    DSABPALC = OFF &                  /*EXIST ALOC NOT PERM ALLOC   */
*    SIOTDLET = ON THEN                /*EXIST ALOC HAS DISP=DELETE  */
         L     @10,STATSTUP(,KEYTABP)                           05S0285
         CLI   TEXTUPAR(@10),X'02'                              05S0285
         BNE   @RF00285                                         05S0285
         TM    DSABPALC(DSABPTR),B'01000000'                    05S0285
         BNZ   @RF00285                                         05S0285
         L     @10,DSABSIOT(,DSABPTR)                           05S0285
         TM    SIOTDLET(@10),B'00000100'                        05S0285
         BNO   @RF00285                                         05S0285
*      ELIGBLSW = OFF;                 /*DSAB NOT ELIG TO SATISFY REQ*/
*                                                               05S0286
         NI    ELIGBLSW,B'01111111'                             05S0286
*IF DSABCONV=OFF & ELIGBLSW=ON THEN    /*ELG DSAB W/O CONVERT ATTRIB.*/
@RF00285 DS    0H                                               05S0287
@RF00284 TM    DSABCONV(DSABPTR),B'00010000'                    05S0287
         BNZ   @RF00287                                         05S0287
         TM    ELIGBLSW,B'10000000'                             05S0287
         BNO   @RF00287                                         05S0287
*  DO;                                                          05S0288
*/********************************************************************/
*/*                                                                  */
*/* SEGMENT NAME - CKDSNOCV                                          */
*/*                                                                  */
*/* DESCRIPTIVE NAME - CHECK NON-CONVERTIBLE ALLOCATIONS             */
*/*                                                                  */
*/* FUNCTION - EXAMINE THE EXISTING ALLOCATION (WHICH DOES NOT HAVE  */
*/*            THE CONVERTIBLE ATTRUBUTE) TO SEE IF IT FULFILLS      */
*/*            REQUIREMENTS WHICH WOULD STILL ALLOW IT               */
*/*            TO BE CONVERTED TO SATISFY THE REQUEST.               */
*/*                                                                  */
*/*   OPERATION - THE FOLLOWING CONDITIONS ARE CHECKED. ALL          */
*/*       OF THEM MUST HOLD IF THE EXISTING ALLOCATION IS TO BE USED */
*/*       TO SATISFY THE REQUEST, EXCEPT THAT ONLY THE FIRST         */
*/*       CONDITION MUST HOLD FOR AN &DSNAME.                        */
*/*       1) THE REQUEST DOES NOT SPECIFY A DDNAME OR THE SPECIFIED  */
*/*          DDNAME MATCHES THE DDNAME ASSOCIATED WITH THE EXISTING  */
*/*          ALLOCATION. (A TERMINAL REQUEST WHICH DOES NOT SPECIFY  */
*/*          A DDNAME CAN NOT BE SATISFIED BY A NON-CONVERTIBLE      */
*/*          EXISTING ALLOCATION BECAUSE OF POSSIBLE JFCB-DCB PARM   */
*/*          CONFLICTS).                                             */
*/*       2) THE USER HAS NOT REQUESTED THAT THE CONVERTIBLE         */
*/*          ATTRIBUTE BE ASSIGNED TO THE RESULTANT ALLOCATION.      */
*/*       3) THE USER HAS NOT SPECIFIED IN THE REQUEST THAT ONLY     */
*/*          CONVERTIBLE ALLOCATIONS MAY BE USED TO SATISFY          */
*/*          THE REQUEST.                                            */
*/*       4) THE MEMBER NAME SPECIFIED IN THE REQUEST IS ASSOCIATED  */
*/*          WITH THE EXISTING ALLOCATION OR A MEMBER NAME IS NOT    */
*/*          SPECIFIED IN THE REQUEST AND NO MEMBER NAME IS ASSOCI-  */
*/*          ATED WITH THE EXISTING ALLOCATION.                      */
*/*       5) DCB PARAMETERS, INPUT ONLY, OR OUTPUT ONLY ARE NOT      */
*/*          SPECIFIED IN THE REQUEST.                               */
*/*       6) A STATUS OF MOD IS (IS NOT) SPECIFIED IN THE REQUEST    */
*/*          AND IS (IS NOT) ASSOCIATED WITH THE EXISTING ALLOCATION.*/
*/*                                                                  */
*/*       THE 'ELIGBLSW' REMAINS ON UNTIL THE EXISTING ALLOCATION    */
*/*       FAILS ONE OF THE TESTS. IT IS THEN TURNED OFF TO INDICATE  */
*/*       THAT THE DSAB IS NOT ELIGIBLE AND THAT DSAB CHAIN PROCESS- */
*/*       ING MUST CONTINUE.                                         */
*/*                                                                  */
*/*   INPUT  - ELIBLSW - SET ON BY AN OUTER SEGMENT                  */
*/*                                                                  */
*/*   OUTPUT - ELIGBLSW - ON IF DSAB HAD ALL REQUIREMENTS SO THAT IT */
*/*                       BE USED TO SATISFY THE REQUEST. OTHERWISE, */
*/*                       TURNED OFF.                                */
*/*                                                                  */
*/********************************************************************/
*IF DDNREQSW=ON                        /*DDNAME REQUESTED            */
*   & SAMDSASW=OFF THEN                /*NOT SAME AS DDNAME IN ALLOC */
         TM    DDNREQSW,B'01000000'                             06S0289
         BNO   @RF00289                                         06S0289
         TM    SAMDSASW,B'00010000'                             06S0289
         BNZ   @RF00289                                         06S0289
*  ELIGBLSW=OFF;                       /*NO, THEN DSAB NOT ELIGIBLE  */
*                                                               06S0290
         NI    ELIGBLSW,B'01111111'                             06S0290
*IF DDNREQSW=OFF &                     /*TERM REQ WITH NO DDN SPECIFD*/
*  DSNTRMSW=ON THEN                                             06S0291
@RF00289 TM    DSNTRMSW,B'00000010'                             06S0291
         BNO   @RF00291                                         06S0291
         TM    DDNREQSW,B'01000000'                             06S0291
         BNZ   @RF00291                                         06S0291
*  ELIGBLSW=OFF;                       /*CAN'T BE SATISFIED BY EXISTING
*                                        ALLOC W/O CONVERTIBLE ATTRIB*/
         NI    ELIGBLSW,B'01111111'                             06S0292
*IF DSNREQ(ONE)^=AMPSAND THEN          /*REQ NOT &NAME MUST ALSO
*                                        SATISFY THE FOLLOWING  06S0293
*                                        CONDITIONS                  */
@RF00291 CLI   DSNREQ,C'&&'                                     06S0293
         BE    @RF00293                                         06S0293
*  DO;                                                          06S0294
*    IF ONCNVTSW=ON                    /*CONVERT ONLY CONVERTIBLE'S
*                                        REQUESTED IN S99RB FLAGS    */
*      × CNVRTTUP^=0 THEN              /*OR CONVERT. ATTRIBUTE REQ'D
*                                        TO BE ASSIGNED              */
         L     @10,@PC00001+12                                  06S0295
         TM    ONCNVTSW(@10),B'10000000'                        06S0295
         BO    @RT00295                                         06S0295
         L     @10,CNVRTTUP(,KEYTABP)                           06S0295
         LTR   @10,@10                                          06S0295
         BZ    @RF00295                                         06S0295
@RT00295 DS    0H                                               06S0296
*      ELIGBLSW=OFF;                   /*YES, DSAB NOT ELIGIBLE      */
         NI    ELIGBLSW,B'01111111'                             06S0296
*    ELSE                              /*STILL ELG TO SATISFY REQ    */
*      DO;                                                      06S0297
         B     @RC00295                                         06S0297
@RF00295 DS    0H                                               06S0298
*        IF MEMBRTUP^=ZERO THEN        /*MEMBER NAME IN REQ          */
         L     @10,MEMBRTUP(,KEYTABP)                           06S0298
         LTR   @10,@10                                          06S0298
         BZ    @RF00298                                         06S0298
*          DO;                                                  06S0299
*            RFY TEXTUNIT BASED(MEMBRTUP); /*POINT TO TEXT UNIT      */
*            HOLD8BYT=TEXTUPAR(ONE:TEXTULNG); /*COPY NAME FOR COMPARE*/
         MVI   HOLD8BYT+1,C' '                                  06S0301
         MVC   HOLD8BYT+2(6),HOLD8BYT+1                         06S0301
         ICM   @08,12,TEXTULNG(@10)                             06S0301
         SRA   @08,16                                           06S0301
         BCTR  @08,0                                            06S0301
         EX    @08,@SM02720                                     06S0301
*          END;                                                 06S0302
*        ELSE                          /*NO MEMBER NAME SPECFD IN REQ*/
*          HOLD8BYT='';                /*COMP DONE TO BLANK ENTRY    */
*                                                               06S0303
         B     @RC00298                                         06S0303
@RF00298 MVI   HOLD8BYT,C' '                                    06S0303
         MVC   HOLD8BYT+1(7),HOLD8BYT                           06S0303
*        IF HOLD8BYT^=JFCBELNM THEN    /*MEMBER NAME WITH EXIST ALLOC*/
@RC00298 L     @10,DSABSIOT(,DSABPTR)                           06S0304
         L     @10,SJFCBPTR(,@10)                               06S0304
         CLC   HOLD8BYT(8),JFCBELNM(@10)                        06S0304
         BE    @RF00304                                         06S0304
*          ELIGBLSW=OFF;               /*NOT EQUAL, DSAB NOT ELIGIBLE*/
*                                                               06S0305
         NI    ELIGBLSW,B'01111111'                             06S0305
*        IF DCBSPCSW=ON ×              /*DCB PARMS SPECIFIED IN REQ  */
*          INOUTTUP^=ZERO THEN         /*INPUT, OUTPUT ONLY IN REQ   */
@RF00304 L     @10,@PC00001+12                                  06S0306
         TM    DCBSPCSW(@10),B'00000100'                        06S0306
         BO    @RT00306                                         06S0306
         L     @10,INOUTTUP(,KEYTABP)                           06S0306
         LTR   @10,@10                                          06S0306
         BZ    @RF00306                                         06S0306
@RT00306 DS    0H                                               06S0307
*          ELIGBLSW=OFF;               /*YES, DSAB NOT ELIGIBLE      */
*                                                               06S0307
         NI    ELIGBLSW,B'01111111'                             06S0307
*        IF STATSTUP->TEXTUPAR(1)=MOD THEN /*MOD SPECIFIED IN REQ    */
@RF00306 L     @10,STATSTUP(,KEYTABP)                           06S0308
         CLI   TEXTUPAR(@10),X'02'                              06S0308
         BNE   @RF00308                                         06S0308
*          IF JFCDISP^='10'B           /*BUT EXISTING ALLOC NOT MOD  */
*            & JFCMODNW^=ON THEN                                06S0309
         L     @10,DSABSIOT(,DSABPTR)                           06S0309
         L     @10,SJFCBPTR(,@10)                               06S0309
         TM    JFCDISP(@10),B'10000000'                         06S0309
         BNO   @GL00136                                         06S0309
         TM    JFCDISP(@10),B'01000000'                         06S0309
         BZ    @RF00309                                         06S0309
@GL00136 L     @10,DSABSIOT(,DSABPTR)                           06S0309
         L     @10,SJFCBPTR(,@10)                               06S0309
         TM    JFCMODNW(@10),B'00010000'                        06S0309
         BO    @RF00309                                         06S0309
*            ELIGBLSW=OFF;             /*YES, DSAB NOT ELIGIBLE      */
         NI    ELIGBLSW,B'01111111'                             06S0310
*          ELSE;                       /*NO, DSAB STILL ELIBIBLE     */
@RF00309 DS    0H                                               06S0312
*        ELSE                          /*MOD NOT SPECIFIED IN REQ    */
*          IF JFCDISP='10'B            /*BUT EXISTING ALLOC. IS MOD  */
*            × JFCMODNW=ON THEN                                 06S0312
         B     @RC00308                                         06S0312
@RF00308 L     @10,DSABSIOT(,DSABPTR)                           06S0312
         L     @10,SJFCBPTR(,@10)                               06S0312
         TM    JFCDISP(@10),B'10000000'                         06S0312
         BNO   @GL00137                                         06S0312
         TM    JFCDISP(@10),B'01000000'                         06S0312
         BZ    @RT00312                                         06S0312
@GL00137 L     @10,DSABSIOT(,DSABPTR)                           06S0312
         L     @10,SJFCBPTR(,@10)                               06S0312
         TM    JFCMODNW(@10),B'00010000'                        06S0312
         BNO   @RF00312                                         06S0312
@RT00312 DS    0H                                               06S0313
*            ELIGBLSW=OFF;             /*YES, DSAB NOT ELIBIBLE      */
         NI    ELIGBLSW,B'01111111'                             06S0313
*     END;                                                      06S0314
@RF00312 DS    0H                                               06S0314
@RC00308 DS    0H                                               06S0315
*  END;                                                         06S0315
@RC00295 DS    0H                                               06S0316
*  END;                                                         05S0316
@RF00293 DS    0H                                               05S0317
*    IF ELIGBLSW=ON THEN               /*DSAB ELIGIBLE TO SATISFY REQ*/
@RF00287 TM    ELIGBLSW,B'10000000'                             04S0317
         BNO   @RF00317                                         04S0317
*      DO;                                                      04S0318
*        DSNCNP=ADDR(DSAB);            /*SAVE ADDRESS OF DSAB TO CNVT*/
         ST    DSABPTR,DSNCNP                                   04S0319
*        IF SAMDSASW=ON THEN           /*DSAB HAS BOTH DDN + DSN REQ */
         TM    SAMDSASW,B'00010000'                             04S0320
         BNO   @RF00320                                         04S0320
*          ENDDNSSW=ON;                /*DON'T SEARCH FOR DDN REQ    */
         OI    ENDDNSSW,B'00100000'                             04S0321
*      END;                                                     04S0322
*    ELSE                              /*CONVT REJECTED BUT VOL/UNIT
*                                        INFORMATION AVAILABLE       */
*      IF VLSERTUP=0                   /*NO VOL/UNIT INFO SPECIFIED
*                                        IN REQUEST (NOTE THAT OTHER
*                                        VOL/UNIT INFO CAUSED   04S0323
*                                        CKDSCFSW TO BE SET ON)      */
*        & COPYDSAB=0                  /*NEWER REFERENCE NOT SAVED   */
*        & STATSTUP -> TEXTUPAR(ONE)^=NEW /*NOT NEW REQUEST  @YM08653*/
*        & (STATSTUP->TEXTUPAR(ONE)^=MOD × /*NOT MOD REQ OR  @YM08653*/
*           DSABPALC = ON                × /*PERM ALLOC'D OR @YM08653*/
*           SIOTDLET = OFF               × /*NON-DELETE OR   @YM08653*/
*           (DSABNUSE=ON × DSABOPCT^=0)) /*NOT CONVERTED BECAUSE
*                                        DSAB IS IN-USE      @YM08653*/
*           & JFCORGAM = OFF THEN      /*NOT A VSAM DATASET  @YA00068*/
         B     @RC00317                                         04S0323
@RF00317 SLR   @10,@10                                          04S0323
         C     @10,VLSERTUP(,KEYTABP)                           04S0323
         BNE   @RF00323                                         04S0323
         C     @10,COPYDSAB                                     04S0323
         BNE   @RF00323                                         04S0323
         L     @08,STATSTUP(,KEYTABP)                           04S0323
         CLI   TEXTUPAR(@08),X'04'                              04S0323
         BE    @RF00323                                         04S0323
         CLI   TEXTUPAR(@08),X'02'                              04S0323
         BNE   @GL00138                                         04S0323
         TM    DSABPALC(DSABPTR),B'01000000'                    04S0323
         BO    @GL00138                                         04S0323
         L     @08,DSABSIOT(,DSABPTR)                           04S0323
         TM    SIOTDLET(@08),B'00000100'                        04S0323
         BZ    @GL00138                                         04S0323
         TM    DSABNUSE(DSABPTR),B'00000001'                    04S0323
         BO    @GL00138                                         04S0323
         CH    @10,DSABOPCT(,DSABPTR)                           04S0323
         BE    @RF00323                                         04S0323
@GL00138 L     @10,DSABSIOT(,DSABPTR)                           04S0323
         L     @10,SJFCBPTR(,@10)                               04S0323
         TM    JFCORGAM(@10),B'00001000'                        04S0323
         BNZ   @RF00323                                         04S0323
*        DO;                                                    04S0324
*          COPYDSAB = ADDR(DSAB);      /* SAVE ADDR OF DSAB IN CASE
*                                         NEED TO DO A COPY LATER    */
         ST    DSABPTR,COPYDSAB                                 04S0325
*          COPYSW = ON;                /*TELL NORMALOC ABOUT IT      */
         L     @10,@PC00001+12                                  04S0326
         OI    COPYSW(@10),B'01000000'                          04S0326
*        END;                                                   04S0327
*  END;                                                         04S0328
@RF00323 DS    0H                                               04S0328
@RC00317 DS    0H                                               04S0329
*    END;                                                       03S0329
*                                                               03S0329
@RF00279 DS    0H                                               03S0330
*  IF DDNEQUSW = ON & ERRCODE = 0 &    /*DDN SPECIFIED FOUND         */
*    ENDDNSSW = OFF THEN               /*NOT HANDLED BY CKDSNENV     */
@RF00268 TM    DDNEQUSW,B'00000100'                             03S0330
         BNO   @RF00330                                         03S0330
         L     @10,@PC00001+4                                   03S0330
         ICM   @08,3,ERRCODE(@10)                               03S0330
         BNZ   @RF00330                                         03S0330
         TM    ENDDNSSW,B'00100000'                             03S0330
         BNZ   @RF00330                                         03S0330
*    DO;                                                        03S0331
*/********************************************************************/
*/*                                                                  */
*/* SEGMENT NAME - CKDDNENV                                          */
*/*                                                                  */
*/* DESCRIPTIVE NAME - CHECK EXISTING ALLOCATION OF SPECIFIED DDNAME */
*/*                                                                  */
*/* FUNCTION - DETERMINE WHETHER THE DDNAME ASSOCIATED WITH THE      */
*/*            EXISTING ALLOCATION CAN BE DISASSOCIATED FROM IT.     */
*/*                                                                  */
*/*   OPERATION - THE DSAB IS CHECKED FOR ENVIRONMENTAL              */
*/*     CONFLICTS. IF THE SPECIFIED DDNAME IS ASSOCIATED WITH AN     */
*/*     EXISTING ALLOCATION WHICH IS IN-USE, OPEN, DOES NOT          */
*/*     HAVE THE CONVERTIBLE ATTRIBUTE, OR IS ASSOCIATED WITH        */
*/*     A PERMANENTLY CONCATENATED GROUP THAT IS NOT SYSTEM          */
*/*     GENERATED (E.G. GDG-ALL OR VSAM MULTI-DEVICE),               */
*/*     THEN AN ERROR CODE IS SET AND PROCESSING TERMINATES.         */
*/*     OTHERWISE, THE DDNAME SPECIFIED CAN BE DISASSOCIATED FROM THE*/
*/*     EXISTING ALLOCATION.  THE DDNAME SEARCH IS ENDED.            */
*/*                                                                  */
*/*   OUTPUT DATA -                                                  */
*/*     DDNCNP   - ADDRESS OF DSAB FROM WHICH THE DDNAME             */
*/*                IS TO BE DISASSOCIATED.                           */
*/*     ENDDNSSW - ON TO END DDNAME SEARCH                           */
*/*     ERRCODE  -                                                   */
*/*                        - SPECIFIED DDNAME NOT AVAILABLE          */
*/*                          (NOT CONVERTIBLE OR MARKED IN-USE, ETC.)*/
*/*                        - SPECIFIED DDNAME IS ASSOCIATED WITH AN  */
*/*                          OPEN DATA SET                           */
*/*                                                                  */
*/********************************************************************/
*IF DSABNUSE = ON ×                    /*DATA SET IN USE             */
*  DSABCONV = OFF ×                    /*DATA SET NOT CONVERTIBLE    */
*  (DSABPCAT = ON &                    /*DATA SET PART OF PERMANENTLY
*                                        CONCATENATED GROUP WHICH IS
*                                        NOT SYSTEM-GEN'D ALLOCATION */
*  DSABFCHN->DSABSIOT->SIOTGDGA = OFF) THEN                     04S0332
         TM    DSABNUSE(DSABPTR),B'00000001'                    04S0332
         BNZ   @RT00332                                         04S0332
         TM    DSABCONV(DSABPTR),B'00010000'                    04S0332
         BNO   @RT00332                                         04S0332
         TM    DSABPCAT(DSABPTR),B'00000100'                    04S0332
         BNO   @RF00332                                         04S0332
         L     @10,DSABFCHN(,DSABPTR)                           04S0332
         L     @10,DSABSIOT(,@10)                               04S0332
         TM    SIOTGDGA(@10),B'01000000'                        04S0332
         BNZ   @RF00332                                         04S0332
@RT00332 DS    0H                                               04S0333
*  ERRCODE = RCDDUNAV;                 /*DDNAME NOT AVAILABLE ERROR  */
         L     @10,@PC00001+4                                   04S0333
         MVC   ERRCODE(2,@10),@CB02404                          04S0333
*ELSE                                  /*NO ERROR                    */
*  IF DSABOPCT^=0 THEN                 /*DATASET IS OPEN             */
         B     @RC00332                                         04S0334
@RF00332 LH    @10,DSABOPCT(,DSABPTR)                           04S0334
         LTR   @10,@10                                          04S0334
         BZ    @RF00334                                         04S0334
*    ERRCODE = RCOPENDS;               /*DDNAME WITH OPEN D.S. ERROR */
         L     @10,@PC00001+4                                   04S0335
         MVC   ERRCODE(2,@10),@CB02406                          04S0335
*  ELSE                                /*NOT OPEN                    */
*    DO;                               /*SET UP TO FREE DDNAME       */
         B     @RC00334                                         04S0336
@RF00334 DS    0H                                               04S0337
*      DDNCNP = DSABPTR;               /*SAVE ADDR OF DSAB WITH DDNAME
*                                        TO FREE                     */
         ST    DSABPTR,DDNCNP                                   04S0337
*      ENDDNSSW = ON;                  /*INDICATE WANT TO END DDNAME
*                                        SEARCH                      */
         OI    ENDDNSSW,B'00100000'                             04S0338
*    END;                                                       04S0339
*    END;                                                       03S0340
@RC00334 DS    0H                                               03S0340
@RC00332 DS    0H                                               03S0341
*  DSABPTR = DSABBCHN;                 /*POINT TO NEXT DSAB IN CHAIN */
@RF00330 L     DSABPTR,DSABBCHN(,DSABPTR)                       03S0341
*END;                                  /* END OF MAJOR SEARCH LOOP   */
*                                                               03S0342
*                                                               03S0342
@DE00211 L     @10,@PC00001+4                                   03S0342
         ICM   @08,3,ERRCODE(@10)                               03S0342
         BNZ   @DC00211                                         03S0342
         SLR   @10,@10                                          03S0342
         CR    DSABPTR,@10                                      03S0342
         BE    @DC00211                                         03S0342
         C     @10,DSNCNP                                       03S0342
         BE    @DL00211                                         03S0342
         TM    ENDDNSSW,B'00100000'                             03S0342
         BZ    @DL00211                                         03S0342
@DC00211 DS    0H                                               03S0343
*IF ERRCODE = 0 THEN                   /*NO ERROR                    */
         L     @10,@PC00001+4                                   03S0343
         ICM   @08,3,ERRCODE(@10)                               03S0343
         BNZ   @RF00343                                         03S0343
*  DO;                                                          03S0344
*    IF DSNCNP^=ZERO & RTORGTUP^=ZERO THEN /*REQ TO RETN DSORG       */
         SLR   @10,@10                                          03S0345
         C     @10,DSNCNP                                       03S0345
         BE    @RF00345                                         03S0345
         C     @10,RTORGTUP(,KEYTABP)                           03S0345
         BE    @RF00345                                         03S0345
*      DO;                             /*RETURN DSORG                */
*        CALL IEFDB4FE (DSNCNP);       /*GET DATA SET ORGANIZATION   */
         LA    @10,DSNCNP                                       03S0347
         ST    @10,@AL00001                                     03S0347
         L     @15,@CV00136                                     03S0347
         LA    @01,@AL00001                                     03S0347
         BALR  @14,@15                                          03S0347
*        IF R15 ^= ZERO THEN           /*ERROR RETURN                */
         LTR   R15,R15                                          03S0348
         BZ    @RF00348                                         03S0348
*          ERRCODE = RCOBTNER × R15;   /*SET REASON CODE             */
         L     @14,@PC00001+4                                   03S0349
         L     @10,@CF02534                                     03S0349
         OR    @10,R15                                          03S0349
         STCM  @10,3,ERRCODE(@14)                               03S0349
*      END;                                                     03S0350
@RF00348 DS    0H                                               03S0351
*  END;                                                         03S0351
@RF00345 DS    0H                                               03S0352
*                                                               02S0352
*IF ERRCODE=0 & DSNCNP=0 THEN          /*NO ERROR & NEW ALLOC NEC.   */
@RF00343 L     @10,@PC00001+4                                   02S0352
         ICM   @08,3,ERRCODE(@10)                               02S0352
         BNZ   @RF00352                                         02S0352
         L     @10,DSNCNP                                       02S0352
         LTR   @10,@10                                          02S0352
         BNZ   @RF00352                                         02S0352
*  DO;                                                          02S0353
*/********************************************************************/
*/*                                                                  */
*/* SEGMENT NAME - UPTOLIM                                           */
*/*                                                                  */
*/* DESCRIPTIVE NAME - LIMIT PROCESSING ROUTINE                      */
*/*                                                                  */
*/* FUNCTION - DETERMINE IF THE DYNAMIC ALLOCATION CONTROL VALUE     */
*/*   FOR THE NUMBER OF RESOURCES HELD IN ANTICIPATION OF REUSE HAS  */
*/*   BEEN EXCEEDED AND, IF SO, UNALLOCATE EXISTING ALLOCATIONS      */
*/*   IN ORDER TO RETURN TO THE CONTROL VALUE.                       */
*/*                                                                  */
*/* OPERATION - LOOP THROUGH THE DSAB CHAIN BEGINNING AT THE TOP,    */
*/*     I.E., WITH THE DSABS NOT IN USE FOR THE LONGEST TIME.        */
*/*     FOR A NON-CONCATENATED DSAB THAT IS NOT-IN-USE AND NOT       */
*/*     PERMANENTLY ALLOCATED, UNALLOCATE IT.  FOR A CONCATENATED    */
*/*     GROUP, IF IT IS NOT-IN-USE AND AT LEAST 1 MEMBER IS NOT      */
*/*     PERMANENTLY ALLOCATED, DECONCATENATE IT AND THEN RESUME      */
*/*     THE LOOP AT THAT NON-PERMANENTLY ALLOCATED DSAB.             */
*/*     NOTE THAT IN A PERMANENTLY CONCATENATED GROUP EITHER ALL     */
*/*     MEMBERS ARE PERMANENTLY ALLOCATED, OR IN THE CASE OF A       */
*/*     SYSTEM-GENERATED 'PCAT' GROUP, IT MAY BE THAT NO             */
*/*     MEMBERS ARE PERMANENTLY ALLOCATED. NOTE ALSO THAT A SYSTEM-  */
*/*     GENERATED PCAT GROUP COUNTED AS ONLY ONE TOWARD THE          */
*/*     LIMIT COUNT.                                                 */
*/*                                                                  */
*/* NOTES -                                                          */
*/*      .NO ATTEMPT IS MADE TO RECOVER FROM AN ERROR DURING         */
*/*       UNALLOCATION - PROCESSING CONTINUES AND ANOTHER AVAILABLE  */
*/*       DSAB IS UNALLOCATED IF POSSIBLE. IF UNALLOCATION ERRORS    */
*/*       PREVENT SUCCESSFUL LIMIT PROCESSING - AN ERROR CODE IS SET.*/
*/*                                                                  */
*/*      .IT IS NECESSARY TO WRITE UPDATED CONTROL BLOCKS TO SWA     */
*/*       AFTER EACH CALL TO UNALLOCATION INSTEAD OF ACCUMULATING    */
*/*       THEM ON THE EPA CHAIN, IN ORDER TO HANDLE THE FOLLOWING    */
*/*       CASE - ONE CALL TO UNALLOCATION ADDS AN UPDATED SIOT TO    */
*/*       THE CHAIN AND A FOLLOWING CALL DELETES THIS SAME SIOT.     */
*/*       IF THE EPA FOR THE UPDATED SIOT HAD NOT YET BEEN PROCESSED */
*/*       AND REMOVED FROM THE CHAIN, THAT EPA WOULD REFER TO        */
*/*       A DELETED SIOT.                                            */
*/*                                                                  */
*/*  INPUT DATA -                                                    */
*/*             - SCTNIUSL - TOTAL NO. OF DD'S + DYNAMNBR            */
*/*             - LIMCOUNT - COUNT OF NOT-IN-USE DSABS ON THE CHAIN  */
*/*                                                                  */
*/*  OUTPUT DATA -                                                   */
*/*              - REDUCTION OF NOT-IN-USE ALLOCATIONS, IF NECESSARY.*/
*/*              - ERRCODE  - SET IF REQUEST CAN'T BE PROCESSED      */
*/*                                                                  */
*/* EXTERNAL REFERENCES -                                            */
*/*                     IEFDB460 - DECONCATENATION                   */
*/*                     IEFDB4A0 - UNALLOCATION                      */
*/********************************************************************/
*IF LIMCOUNT>SCTNIUSL THEN             /* IF THE CURRENT NUMBER OF
*                                         ALLOCATIONS HELD FOR REUSE
*                                         EXCEEDS THE CONTROL VALUE  */
         L     @10,@PC00001+8                                   03S0354
         L     @08,SCTPTR(,@10)                                 03S0354
         LH    @08,SCTNIUSL(,@08)                               03S0354
         N     @08,@CF02722                                     03S0354
         CH    @08,LIMCOUNT                                     03S0354
         BNL   @RF00354                                         03S0354
*  DO;                                 /* FIND DATASETS TO UNALLOC   */
*    DSABPTR=DSQFRSTP;                 /* SEARCH ENTIRE DSAB CHAIN   */
         L     @10,JSCBPTR(,@10)                                03S0356
         L     @10,JSCDSABQ(,@10)                               03S0356
         L     DSABPTR,DSQFRSTP(,@10)                           03S0356
*    RFY TXTUPELM BASED(ADDR(LIMTUP)); /* BASE FOR TEXTUNIT MAP      */
*    TXTPLENT = ADDR(LIMTU);           /* POINT TO ACTUAL TU TO BUILD
*                                         FOR DECONCAT/UNALLOC CALLS */
         LA    @10,LIMTUP                                       03S0358
         LA    @08,LIMTU                                        03S0358
         ST    @08,TXTPLENT(,@10)                               03S0358
*    TXTPLEND = ON;                    /* TURN ON LAST TUP INDICATOR */
         OI    TXTPLEND(@10),B'10000000'                        03S0359
*    RFY TEXTUNIT BASED(TXTPLENT);                              03S0360
*    TEXTUNUM = 1;                     /* SET NO. OF PARMS           */
         L     @10,TXTPLENT(,@10)                               03S0361
         MVC   TEXTUNUM(2,@10),@CH00084                         03S0361
*    TEXTULNG = 8;                     /* LENGTH OF DDNAME           */
         MVC   TEXTULNG(2,@10),@CH00073                         03S0362
*                                      /* KEY IS FILLED IN LATER     */
*    DO WHILE (LIMCOUNT>SCTNIUSL & DSABPTR^=ZERO);              03S0363
         B     @DE00363                                         03S0363
@DL00363 DS    0H                                               03S0364
*                                      /* PROCESS WHILE THE CONTROL
*                                         VALUE IS STILL EXCEEDED AND
*                                         NOT AT CHAIN END           */
*      DMYRSCD = 0;                    /* INIT DUMMY REASON CODE TO BE
*                                         SET BY DECONCAT AND UNALLOC*/
         SLR   @10,@10                                          03S0364
         ST    @10,DMYRSCD                                      03S0364
*      NXTPTR = DSABFCHN;              /*DEFAULT - NEXT DSAB TO SRCH */
         L     @08,DSABFCHN(,DSABPTR)                           03S0365
         ST    @08,NXTPTR                                       03S0365
*      IF DSABNUSE=NOTINUSE & DSABOPCT=0 THEN /*ONLY FREE NOTINUSE
*                                               DSABS                */
         TM    DSABNUSE(DSABPTR),B'00000001'                    03S0366
         BNZ   @RF00366                                         03S0366
         CH    @10,DSABOPCT(,DSABPTR)                           03S0366
         BNE   @RF00366                                         03S0366
*        DO;                                                    03S0367
*          IF DSABCATM=ON  THEN        /* 1ST MEMBER OF CONCAT GROUP */
         TM    DSABCATM(DSABPTR),B'00000010'                    03S0368
         BNO   @RF00368                                         03S0368
*            DO;                       /* SO SEE IF SHOULD DECONCAT  */
*              QUIT  = OFF;            /* ON - QUIT BELOW LOOP       */
*              FOUND = OFF;            /* ON - AT LEAST ONE MEMBER OF
*                                         GROUP NOT PERM. ALLOC'D    */
         NI    QUIT,B'00111111'                                 03S0371
*              NXTPTR = ADDR(DSAB);    /* BEGIN LOOP AT TOP OF GROUP */
         ST    DSABPTR,NXTPTR                                   03S0372
*              DO WHILE QUIT=OFF;      /* SEARCH FOR A NON-PERM ALLOC
*                                         MEMBER                     */
         B     @DE00373                                         03S0373
@DL00373 DS    0H                                               03S0374
*                                      /* LEAVE NXTPTR POINTING TO 1ST
*                                         DSAB AFTER THE GROUP       */
*                IF NXTPTR->DSABPALC=OFF /* FOUND A NON-PERMALC      */
*                   & FOUND=OFF THEN     /* AND ITS 1ST OR ONLY      */
         L     @10,NXTPTR                                       03S0374
         TM    DSABPALC(@10),B'01000000'                        03S0374
         BNZ   @RF00374                                         03S0374
         TM    FOUND,B'10000000'                                03S0374
         BNZ   @RF00374                                         03S0374
*                  DO;                                          03S0375
*                    FOUND = ON;       /* REMEMBER AT LEAST ONE FOUND*/
         OI    FOUND,B'10000000'                                03S0376
*                    NPALCPTR = NXTPTR;/* REMEMBER ITS LOCATION     */
         ST    @10,NPALCPTR                                     03S0377
*                  END;                                         03S0378
*                NXTPTR = NXTPTR->DSABFCHN; /* FIND NEXT DSAB        */
@RF00374 L     @10,NXTPTR                                       03S0379
         L     @10,DSABFCHN(,@10)                               03S0379
         ST    @10,NXTPTR                                       03S0379
*                IF NXTPTR=0           /* IF END OF CHAIN OR GROUP   */
*                  × NXTPTR->DSABTIOT->TIOEDDNM(1)^=' ' THEN    03S0380
         LTR   @10,@10                                          03S0380
         BZ    @RT00380                                         03S0380
         L     @10,DSABTIOT(,@10)                               03S0380
         CLI   TIOEDDNM(@10),C' '                               03S0380
         BE    @RF00380                                         03S0380
@RT00380 DS    0H                                               03S0381
*                  QUIT = ON;          /* THEN EXIT LOOP             */
         OI    QUIT,B'01000000'                                 03S0381
*              END;                    /* END CONCAT GROUP SEARCH    */
*                                                               03S0382
@RF00380 DS    0H                                               03S0382
@DE00373 TM    QUIT,B'01000000'                                 03S0382
         BZ    @DL00373                                         03S0382
*              IF FOUND=ON  THEN       /* WORTHWHILE DECONCAT'ING GRP*/
         TM    FOUND,B'10000000'                                03S0383
         BNO   @RF00383                                         03S0383
*                DO;                   /* YES - CALL DECONCAT PROC   */
*                  TEXTUKEY = DCCDDNAM;/* BUILD DECONCAT TEXT UNIT   */
         LA    @10,LIMTUP                                       03S0385
         L     @08,TXTPLENT(,@10)                               03S0385
         MVC   TEXTUKEY(2,@08),@CB01830                         03S0385
*                  TEXTUPAR(1:8) = TIOEDDNM;/* DDNAME OF GROUP       */
         L     @05,DSABTIOT(,DSABPTR)                           03S0386
         MVC   TEXTUPAR(8,@08),TIOEDDNM(@05)                    03S0386
*                  CALL IEFDB460 (ADDR(TXTPLENT),DMYRSCD,       03S0387
*                                SYSCTBLK,ALFNCMAP,DEPARMS,EPALSTP,
*                                SMFPARMS); /*               @ZA02706*/
         ST    @10,@TF00001                                     03S0387
         LA    @10,@TF00001                                     03S0387
         ST    @10,@AL00001                                     03S0387
         LA    @10,DMYRSCD                                      03S0387
         ST    @10,@AL00001+4                                   03S0387
         L     @10,@PC00001+8                                   03S0387
         ST    @10,@AL00001+8                                   03S0387
         L     @10,@PC00001+12                                  03S0387
         ST    @10,@AL00001+12                                  03S0387
         L     @10,@PC00001+16                                  03S0387
         ST    @10,@AL00001+16                                  03S0387
         L     @10,@PC00001+20                                  03S0387
         ST    @10,@AL00001+20                                  03S0387
         L     @10,@PC00001+24                                  03S0387
         ST    @10,@AL00001+24                                  03S0387
         L     @15,@CV00154                                     03S0387
         LA    @01,@AL00001                                     03S0387
         BALR  @14,@15                                          03S0387
*                                      /* NOTE - NOP FOR A PCAT GROUP*/
*                  IF DMYRSCD=0 THEN   /* IF DECONCAT SUCCESSFUL     */
         L     @10,DMYRSCD                                      03S0388
         LTR   @10,@10                                          03S0388
         BNZ   @RF00388                                         03S0388
*                    DO;                                        03S0389
*                      DSABPTR = NPALCPTR;/* UNALLOC 1ST NON-PALC DSAB*
         L     DSABPTR,NPALCPTR                                 03S0390
*                      NXTPTR = DSABFCHN; /* NEXT DSAB AFTER UNALLOC */
*                                                               03S0391
         L     @10,DSABFCHN(,DSABPTR)                           03S0391
         ST    @10,NXTPTR                                       03S0391
*                      /* IF HAVE A SYSTEM-GENERATED PCAT-GROUP TO BE*/
*                      /* UNALLOCATED, SET 'NXTPTR' PAST THE GROUP   */
*                      /* NOTE THAT THE 'WHILE' CONDITIONS WILL BE   */
*                      /* SATISFIED FOR ALL BUT A PCAT GROUP.        */
*                      DO WHILE (NXTPTR^=0 /*LOOP UNTIL END OF GROUP */
*                            & NXTPTR->DSABTIOT->TIOEDDNM(1)=' ');
         B     @DE00392                                         03S0392
@DL00392 DS    0H                                               03S0393
*                        NXTPTR = NXTPTR->DSABFCHN; /*NEXT DSAB      */
         L     @10,NXTPTR                                       03S0393
         L     @10,DSABFCHN(,@10)                               03S0393
         ST    @10,NXTPTR                                       03S0393
*                      END;                                     03S0394
@DE00392 L     @10,NXTPTR                                       03S0394
         LTR   @10,@10                                          03S0394
         BZ    @DC00392                                         03S0394
         L     @10,DSABTIOT(,@10)                               03S0394
         CLI   TIOEDDNM(@10),C' '                               03S0394
         BE    @DL00392                                         03S0394
@DC00392 DS    0H                                               03S0395
*                    END;                                       03S0395
*                  ELSE;               /* DECONCAT FAILED            */
@RF00388 DS    0H                                               03S0397
*                END;                  /* FOUND=ON                   */
*              ELSE;                   /* ALL GRP MEMBERS PALC       */
@RF00383 DS    0H                                               03S0399
*            END;                      /* END CONCAT GRP PROCESSING  */
*          ELSE;                       /* DSAB NOT CONCAT MEMBER     */
@RF00368 DS    0H                                               03S0401
*          IF DSABPALC=OFF             /* IF ELIG. FOR UNALLOCATE    */
*           & DMYRSCD=0 THEN           /* ENTRY NOT FROM DECAT FAIL  */
         TM    DSABPALC(DSABPTR),B'01000000'                    03S0401
         BNZ   @RF00401                                         03S0401
         SLR   @10,@10                                          03S0401
         C     @10,DMYRSCD                                      03S0401
         BNE   @RF00401                                         03S0401
*            DO;                       /* THEN CALL UNALLOC PROC     */
*              TEXTUKEY = DUNDDNAM;    /* BUILD TEXT UNIT            */
         LA    @08,LIMTUP                                       03S0403
         L     @05,TXTPLENT(,@08)                               03S0403
         MVC   TEXTUKEY(2,@05),@CB01830                         03S0403
*              TEXTUPAR(1:8) = TIOEDDNM; /* DDNAME TO UNALLOCATED    */
         L     @02,DSABTIOT(,DSABPTR)                           03S0404
         MVC   TEXTUPAR(8,@05),TIOEDDNM(@02)                    03S0404
*              DMYRSCD = 0;            /* INIT DUMMY REASON CODE     */
         ST    @10,DMYRSCD                                      03S0405
*              CALL IEFDB4A0 (ADDR(TXTPLENT),DMYRSCD,           03S0406
*                            SYSCTBLK,ALFNCMAP,DEPARMS,EPALSTP, 03S0406
*                            SMFPARMS); /*                   @ZA02706*/
         ST    @08,@TF00001                                     03S0406
         LA    @10,@TF00001                                     03S0406
         ST    @10,@AL00001                                     03S0406
         LA    @10,DMYRSCD                                      03S0406
         ST    @10,@AL00001+4                                   03S0406
         L     @10,@PC00001+8                                   03S0406
         ST    @10,@AL00001+8                                   03S0406
         L     @10,@PC00001+12                                  03S0406
         ST    @10,@AL00001+12                                  03S0406
         L     @10,@PC00001+16                                  03S0406
         ST    @10,@AL00001+16                                  03S0406
         L     @10,@PC00001+20                                  03S0406
         ST    @10,@AL00001+20                                  03S0406
         L     @10,@PC00001+24                                  03S0406
         ST    @10,@AL00001+24                                  03S0406
         L     @15,@CV00155                                     03S0406
         LA    @01,@AL00001                                     03S0406
         BALR  @14,@15                                          03S0406
*              IF DEWRITP^=0 THEN      /*SWA BLOCKS UPDATED?         */
         L     @10,@PC00001+16                                  03S0407
         L     @08,DEWRITP(,@10)                                03S0407
         LTR   @08,@08                                          03S0407
         BZ    @RF00407                                         03S0407
*                DO;                   /*WRITE THEM BACK TO SWA      */
*                  SWACTLS = SWACTLS && SWACTLS; /*INIT FUNCTION MAP */
         LH    @08,SWACTLS                                      03S0409
         N     @08,@CF02722                                     03S0409
         LR    @05,@08                                          03S0409
         XR    @05,@08                                          03S0409
         STH   @05,SWACTLS                                      03S0409
*                  SWWRT = ON;         /*WRITE FUNCTION              */
*                  SWFREE = ON;        /*FREE EPA'S WHEN DONE        */
*                  SWOLD = ON;         /*EPA'S ALREADY EXIST         */
         OI    SWWRT,B'00010101'                                03S0412
*                  CALL IEFAB4F7 (SWACTLS,DEWRITP,0,0,0,0,0);   03S0413
         MVC   @AL00001+8(20),@AL00413                          03S0413
         LA    @08,SWACTLS                                      03S0413
         ST    @08,@AL00001                                     03S0413
         LA    @10,DEWRITP(,@10)                                03S0413
         ST    @10,@AL00001+4                                   03S0413
         L     @15,@CV00156                                     03S0413
         LA    @01,@AL00001                                     03S0413
         BALR  @14,@15                                          03S0413
*                                      /*CALL SWA MGR I/F            */
*                  EPALSTP = ADDR(DEDMYEPA);/*RE-INIT PTR TO DUMMY EPA*
         L     @10,@PC00001+20                                  03S0414
         L     @08,@PC00001+16                                  03S0414
         LA    @08,DEDMYEPA(,@08)                               03S0414
         ST    @08,EPALSTP(,@10)                                03S0414
*                                      /*NOTE: IEFAB4F7 ZEROED DEWRITP*
*                END;                                           03S0415
*                                                               03S0415
*              IF DMYRSCD=0 THEN       /* UNALLOC SUCCESSFUL         */
@RF00407 L     @10,DMYRSCD                                      03S0416
         LTR   @10,@10                                          03S0416
         BNZ   @RF00416                                         03S0416
*                LIMCOUNT = LIMCOUNT-1;     /* DECREMENT NOTINUSE
*                                              COUNT BY NUMBER OF DSABS
*                                              UNALLOCATED           */
         LH    @10,LIMCOUNT                                     03S0417
         BCTR  @10,0                                            03S0417
         STH   @10,LIMCOUNT                                     03S0417
*              ELSE;                   /* UNALLOCATE FAILED          */
@RF00416 DS    0H                                               03S0419
*            END;                      /* END UNALLOCATE PROCESSING  */
*          ELSE;                       /* NOT ELIG FOR UNALLOCATE    */
@RF00401 DS    0H                                               03S0421
*        END;                          /* END NOTINUSE PROCESSING    */
*      ELSE;                           /* DSAB WAS IN USE OR OPEN    */
@RF00366 DS    0H                                               03S0423
*      DSABPTR = NXTPTR;               /* POINT TO NEXT DSAB TO SRCH */
         L     DSABPTR,NXTPTR                                   03S0423
*    END;                              /* ENDWHILE FOR LIMIT PROCESS */
@DE00363 L     @10,@PC00001+8                                   03S0424
         L     @10,SCTPTR(,@10)                                 03S0424
         LH    @10,SCTNIUSL(,@10)                               03S0424
         N     @10,@CF02722                                     03S0424
         CH    @10,LIMCOUNT                                     03S0424
         BNL   @DC00363                                         03S0424
         LTR   DSABPTR,DSABPTR                                  03S0424
         BNZ   @DL00363                                         03S0424
@DC00363 DS    0H                                               03S0425
*    IF LIMCOUNT>SCTNIUSL THEN         /* IF CONTROL STILL EXCEEDED  */
         L     @10,@PC00001+8                                   03S0425
         L     @10,SCTPTR(,@10)                                 03S0425
         LH    @10,SCTNIUSL(,@10)                               03S0425
         N     @10,@CF02722                                     03S0425
         CH    @10,LIMCOUNT                                     03S0425
         BNL   @RF00425                                         03S0425
*      ERRCODE = RCNTUNLC;             /* INHIBIT NORM ALLOCATION    */
         L     @10,@PC00001+4                                   03S0426
         MVC   ERRCODE(2,@10),@CB02414                          03S0426
*    ELSE;                             /* OTHERWISE, CAN ALLOCATE    */
@RF00425 DS    0H                                               03S0428
*  END;                                                         03S0428
*ELSE;                                 /* CONTROL NOT EXCEEDED=NO-OP */
@RF00354 DS    0H                                               03S0430
*  END;                                                         02S0430
*                                                               02S0430
*IF (DDNCNP^=0                         /* DDN TO BE FREED FOR CONVERT
*                                         OR NORMAL ALLOC PROCESSING */
*    × (DSNCNP^=0 & DDNAMTUP^=0 & DSNCNP->DSABTIOT->TIOEDDNM^=DDNREQ))
*                                      /* HAVE DSAB TO CONVERT, 02S0431
*                                         DDNAME WAS REQUESTED AND IS
*                                         DIFFERENT THAN THE CURRENT
*                                         DDNAME                     */
*                                                               02S0431
*  & ERRCODE=0 THEN                    /* NO ERRORS YET              */
@RF00352 SLR   @10,@10                                          02S0431
         C     @10,DDNCNP                                       02S0431
         BNE   @GL00161                                         02S0431
         L     @08,DSNCNP                                       02S0431
         CR    @08,@10                                          02S0431
         BE    @RF00431                                         02S0431
         C     @10,DDNAMTUP(,KEYTABP)                           02S0431
         BE    @RF00431                                         02S0431
         L     @10,DSABTIOT(,@08)                               02S0431
         CLC   TIOEDDNM(8,@10),DDNREQ                           02S0431
         BE    @RF00431                                         02S0431
@GL00161 L     @10,@PC00001+4                                   02S0431
         ICM   @08,3,ERRCODE(@10)                               02S0431
         BNZ   @RF00431                                         02S0431
*  DO;                                 /* MAKE DDNAME AVAILABLE FOR USE
*                                         AND PREVENT AUTO-RESTARTS  */
*/********************************************************************/
*/*                                                                  */
*/* SEGMENT NAME - FREEDDN                                           */
*/*                                                                  */
*/* DESCRIPTIVE NAME - PROCESS THE DISASSOCIATION OF A DDNAME FROM   */
*/*                    AN EXISTING ALLOCATION.                       */
*/*                                                                  */
*/* FUNCTION - IF AN EXISTING DDNAME IS TO BE CHANGED VIA CONVERT OR */
*/*            NORMAL ALLOCATION, THEN AUTO-RESTARTS ARE PREVENTED.  */
*/*            IF THE DDNAME IS CURRENTLY ASSOCIATED WITH ANOTHER    */
*/*            ALLOCATION FROM WHICH IT IS TO BE FREED,              */
*/*            A NEW DDNAME IS GENERATED AND GIVEN TO THAT           */
*/*            ALLOCATION. THIS FREES THE DDNAME FROM ITS CURRENT    */
*/*            ASSOCIATION AND MAKES IT AVAILABLE FOR USE.           */
*/*                                                                  */
*/* OPERATION -                                                      */
*/*          - IF A CHECKPOINT HAS BEEN TAKEN AND AUTO-RESTARTS HAVE */
*/*            NOT YET BEEN PREVENTED, THEN SET 'JCTNARST' ON TO     */
*/*            INHIBIT AUTO-RESTARTS, AND                            */
*/*            ADD AN EPA FOR THE JCT TO THE EPA CHAIN.              */
*/*                                                                  */
*/*          - IF THERE IS A DDNAME TO ACTUALLY BE FREED FROM        */
*/*            A CURRENT ALLOCATION, THEN                            */
*/*            INVOKE IEFDB4FD TO GENERATE A NEW DDNAME.             */
*/*            THIS NEW DDNAME IS THEN PUT IN BOTH THE TIOT ENTRY    */
*/*            AND THE SIOT ASSOCIATED WITH THE INPUT DSAB.          */
*/*            AN EPA IS ADDED TO THE EPA CHAIN TO WRITE THE UPDATED */
*/*            SIOT BACK TO SWA.                                     */
*/*                                                                  */
*/*          - SWITCHES ARE SET IN THE FUNCTION MAP IF       @Y30QPPB*/
*/*            EITHER THE JCT IS UPDATED OR IF THE LAST SIOT ON THE  */
*/*            CHAIN IS UPDATED.  THIS ALLOWS FUTURE PROCESSING TO   */
*/*            AVOID ADDING DUPLICATE EPA'S ONTO THE EPA CHAIN       */
*/*            FOR THESE BLOCKS.                             @Y30QPPB*/
*/*                                                          @Y30QPPB*/
*/*          - BUILD THE PARAMETER LIST AND INVOKE THE       @Y30QPPB*/
*/*            CHANGE DDNAME/JES3 EXIT, IEFDB4FB, TO INFORM  @Y30QPPB*/
*/*            THE SUBSYSTEM OF THE DDNAME CHANGE.           @Y30QPPB*/
*/*                                                                  */
*/* EXTERNAL REFERENCES -                                            */
*/*                      IEFDB4FD - GENERATE DDNAME                  */
*/*                      IEFDB4FB - CHANGE DDN/JES3 EXIT     @Y30QPPB*/
*/********************************************************************/
*GETSPLN = 0;                          /* INIT NO. OF EPA'S          */
         SLR   @10,@10                                          03S0433
         ST    @10,GETSPLN                                      03S0433
*IF JCTCKFT=ON                         /* CHECKPT NOT YET TAKEN      */
*   & JCTNARST=OFF THEN                /* AUTO-RESTART NOT PROHIBITED
*                                         PROHIBIT AUTO-RESTARTS     */
         L     @08,@PC00001+8                                   03S0434
         L     @08,JCTPTR(,@08)                                 03S0434
         TM    JCTCKFT(@08),B'00010000'                         03S0434
         BNO   @RF00434                                         03S0434
         TM    JCTNARST(@08),B'01000000'                        03S0434
         BNZ   @RF00434                                         03S0434
*  GETSPLN = GETSPLN  + LENGTH(SWAEPA);/* GET EPA TO WRITE JCT       */
         AL    @10,@CF00050                                     03S0435
         ST    @10,GETSPLN                                      03S0435
*IF DDNCNP^=0 THEN                     /* SIOT DDNAME TO BE UPDATED  */
@RF00434 L     @10,DDNCNP                                       03S0436
         LTR   @10,@10                                          03S0436
         BZ    @RF00436                                         03S0436
*  GETSPLN = GETSPLN + LENGTH(SWAEPA); /* GET EPA TO WRITE SIOT      */
         LA    @10,16                                           03S0437
         AL    @10,GETSPLN                                      03S0437
         ST    @10,GETSPLN                                      03S0437
*IF GETSPLN^=0 THEN                    /* AT LEAST ONE EPA TO GET    */
@RF00436 L     @10,GETSPLN                                      03S0438
         LTR   @10,@10                                          03S0438
         BZ    @RF00438                                         03S0438
*  DO;                                                          03S0439
*    RFY (R0,R1) RSTD;                 /*                            */
*    R0 = GETSPLN;                     /* SET UP FOR GETMAIN MACRO   */
         LR    R0,@10                                           03S0441
*    R0 = R0 × SCHDSUBP;               /* GET FROM CORRECT SUBPOOL   */
         O     R0,@CF00095                                      03S0442
*    GEN(GETMAIN R,LV=(0));            /* GET 1 OR 2 EPA'S           */
         GETMAIN R,LV=(0)
*    SWEPAPTR = R1;                    /* RESULT IS (1ST) EPA ADDR   */
         ST    R1,SWEPAPTR                                      03S0444
*    RFY (R0,R1) UNRSTD;               /*                            */
*    SWAEPA(1:GETSPLN) = SWAEPA(1:GETSPLN) && SWAEPA(1:GETSPLN);
         L     @10,SWEPAPTR                                     03S0446
         L     @08,GETSPLN                                      03S0446
         BCTR  @08,0                                            03S0446
         EX    @08,@SX02723                                     03S0446
*                                      /* CLEAR ALL GOTTEN CORE      */
*    IF JCTCKFT=ON & JCTNARST=OFF THEN /* NEED TO STOP AUTO-RESTARTS */
         L     @10,@PC00001+8                                   03S0447
         L     @10,JCTPTR(,@10)                                 03S0447
         TM    JCTCKFT(@10),B'00010000'                         03S0447
         BNO   @RF00447                                         03S0447
         TM    JCTNARST(@10),B'01000000'                        03S0447
         BNZ   @RF00447                                         03S0447
*      DO;                                                      03S0448
*        JCTNARST=ON;                  /* NO AUTO-RESTARTS ALLOWED   */
         OI    JCTNARST(@10),B'01000000'                        03S0449
*        SWBLKPTR = ADDR(INJMJCT);     /* CORE ADDR OF JCT           */
         L     @08,SWEPAPTR                                     03S0450
         ST    @10,SWBLKPTR(,@08)                               03S0450
*        SWVA    = JCTDSKAD;           /* SVA OF JCT                 */
         MVC   SWVA(3,@08),JCTDSKAD(@10)                        03S0451
*        SWBLKID = JCTIDENT;           /* ID OF THE JCT              */
         MVC   SWBLKID(1,@08),JCTIDENT(@10)                     03S0452
*        SWLNGTH = LENGTH(INJMJCT);    /* LENGTH OF JCT              */
         MVC   SWLNGTH(4,@08),@CF00932                          03S0453
*        EPALSTP->SWCHNPTR = SWEPAPTR; /* FWD LINK IN PREVIOUS EPA   */
         L     @10,@PC00001+20                                  03S0454
         L     @05,EPALSTP(,@10)                                03S0454
         ST    @08,SWCHNPTR(,@05)                               03S0454
*        EPALSTP = SWEPAPTR;           /* JCT-EPA IS NEW LAST EPA    */
         ST    @08,EPALSTP(,@10)                                03S0455
*        SWEPAPTR = SWEPAPTR+LENGTH(SWAEPA);/* ADDR OF NEXT EPA IF
*                                         ANY                        */
         AL    @08,@CF00050                                     03S0456
         ST    @08,SWEPAPTR                                     03S0456
*        EPAJCTSW = ON;                /* REMEMBER ADDED JCT TO CHAIN
*                                         SO ANY FUTURE UPDATES DON'T
*                                         RESULT IN A DUPLICATE EPA  */
         L     @10,@PC00001+12                                  03S0457
         OI    EPAJCTSW(@10),B'00000001'                        03S0457
*      END;                                                     03S0458
*    IF DDNCNP^=0 THEN                 /* SIOT DDNAME TO BE FREED    */
@RF00447 L     @10,DDNCNP                                       03S0459
         LTR   @10,@10                                          03S0459
         BZ    @RF00459                                         03S0459
*      DO;                                                      03S0460
*        DSABPTR  = DDNCNP;            /* BASE FOR DSAB MAP          */
         LR    DSABPTR,@10                                      03S0461
*        OLDDDNAM = SCTDDNAM;          /* SAVE DDN FOR JES3  @Y30QPPB*/
         L     @10,DSABSIOT(,DSABPTR)                           03S0462
         MVC   OLDDDNAM(8),SCTDDNAM(@10)                        03S0462
*        CALL IEFDB4FD (JSCBPTR,ADDR(TIOEDDNM),0,0);/* CREATE A DDNAME
*                                                   TO REPLACE CURRENT*
         L     @10,@PC00001+8                                   03S0463
         ST    @10,@AL00001                                     03S0463
         L     @10,DSABTIOT(,DSABPTR)                           03S0463
         LA    @10,TIOEDDNM(,@10)                               03S0463
         ST    @10,@TF00001                                     03S0463
         LA    @10,@TF00001                                     03S0463
         ST    @10,@AL00001+4                                   03S0463
         LA    @10,@CF00092                                     03S0463
         ST    @10,@AL00001+8                                   03S0463
         LA    @10,@CF00092                                     03S0463
         ST    @10,@AL00001+12                                  03S0463
         L     @15,@CV00145                                     03S0463
         LA    @01,@AL00001                                     03S0463
         BALR  @14,@15                                          03S0463
*        SCTDDNAM = TIOEDDNM;          /* NEW DDNAME INTO SIOT       */
         L     @10,DSABSIOT(,DSABPTR)                           03S0464
         L     @08,DSABTIOT(,DSABPTR)                           03S0464
         MVC   SCTDDNAM(8,@10),TIOEDDNM(@08)                    03S0464
*        SWBLKPTR = DSABSIOT;          /* CORE ADDR OF SIOT          */
         L     @08,SWEPAPTR                                     03S0465
         ST    @10,SWBLKPTR(,@08)                               03S0465
*        SWVA    = SIOTDSKA;           /* SVA OF SIOT                */
         MVC   SWVA(3,@08),SIOTDSKA(@10)                        03S0466
*        SWBLKID = SIOTTYPE;           /* ID OF THE SIOT CNTL BLOCK  */
         MVC   SWBLKID(1,@08),SIOTTYPE(@10)                     03S0467
*        SWLNGTH = 176;                /* LENGTH OF SIOT             */
         MVC   SWLNGTH(4,@08),@CF00932                          03S0468
*        EPALSTP->SWCHNPTR = SWEPAPTR; /* FWD CHAIN IN PREVIOUS EPA  */
         L     @05,@PC00001+20                                  03S0469
         L     @02,EPALSTP(,@05)                                03S0469
         ST    @08,SWCHNPTR(,@02)                               03S0469
*        EPALSTP = SWEPAPTR;           /* SIOT-EPA IS NEW LAST EPA   */
         ST    @08,EPALSTP(,@05)                                03S0470
*        IF SCTLSIOT=SIOTDSKA THEN     /* IF THIS WAS -LAST- SIOT    */
         L     @08,@PC00001+8                                   03S0471
         L     @08,SCTPTR(,@08)                                 03S0471
         CLC   SCTLSIOT(3,@08),SIOTDSKA(@10)                    03S0471
         BNE   @RF00471                                         03S0471
*          EPALSISW = ON;              /* REMEMBER ADDED LAST   03S0472
*                                         SIOT TO CHAIN SO FUTURE
*                                         UPDATES WON'T RESULT IN A
*                                         DUPLICATE EPA.             */
         L     @10,@PC00001+12                                  03S0472
         OI    EPALSISW(@10),B'01000000'                        03S0472
*        OLDPOSNO = ZERO;              /* DDN NOT CONCATENTD @Y30QPPB*/
@RF00471 SLR   @10,@10                                          03S0473
         STH   @10,OLDPOSNO                                     03S0473
*        NEWDDNAM = SCTDDNAM;          /* NEW DDN FOR JES3   @Y30QPPB*/
         L     @08,DSABSIOT(,DSABPTR)                           03S0474
         MVC   NEWDDNAM(8),SCTDDNAM(@08)                        03S0474
*        NEWPOSNO = ZERO;              /* DDN NOT CONCATENTD @Y30QPPB*/
         STH   @10,NEWPOSNO                                     03S0475
*        NUMBDDNS = ONE;               /* ONE DDNAME CHANGED @Y30QPPB*/
         MVC   NUMBDDNS(4),@CF00084                             03S0476
*        CALL IEFDB4FB (NUMBDDNS,ADDR(CHNGDDNM)); /* CHANGE  @Y30QPPB
*                                         DDNAME/JES3 EXIT   @Y30QPPB*/
         LA    @10,NUMBDDNS                                     03S0477
         ST    @10,@AL00001                                     03S0477
         LA    @10,CHNGDDNM                                     03S0477
         ST    @10,@TF00001                                     03S0477
         LA    @10,@TF00001                                     03S0477
         ST    @10,@AL00001+4                                   03S0477
         L     @15,@CV00144                                     03S0477
         LA    @01,@AL00001                                     03S0477
         BALR  @14,@15                                          03S0477
*      END;                                                     03S0478
*    ELSE;                             /* DDNAME NOT TO BE CHANGED   */
@RF00459 DS    0H                                               03S0480
*  END;                                                         03S0480
*  END;                                                         02S0481
*ELSE;                                 /* NO DDNAME WILL BE CHANGED  */
@RF00431 DS    0H                                               02S0483
*    IF ERRCODE=0 THEN                 /*NO ERROR IN CKCONVRT        */
@RC00431 L     @10,@PC00001+4                                   01S0483
         ICM   @08,3,ERRCODE(@10)                               01S0483
         BNZ   @RF00483                                         01S0483
*      IF DSNCNP^=0 THEN               /*DSAB TO CONVERT?            */
         L     @08,DSNCNP                                       01S0484
         LTR   @08,@08                                          01S0484
         BZ    @RF00484                                         01S0484
*        DO;                                                    01S0485
*          CALL IEFDB411(ALCRSCDE,ADDR(KEYTABLE),DSNCNP,ALFNCMAP,
*              EPALSTP,SYSCTBLK,JCTPTR);  /*SATISFY INPUT REQUEST    */
         ST    @10,@AL00001                                     01S0486
         ST    KEYTABP,@TF00001                                 01S0486
         LA    @10,@TF00001                                     01S0486
         ST    @10,@AL00001+4                                   01S0486
         LA    @10,DSNCNP                                       01S0486
         ST    @10,@AL00001+8                                   01S0486
         L     @10,@PC00001+12                                  01S0486
         ST    @10,@AL00001+12                                  01S0486
         L     @10,@PC00001+20                                  01S0486
         ST    @10,@AL00001+16                                  01S0486
         L     @10,@PC00001+8                                   01S0486
         ST    @10,@AL00001+20                                  01S0486
         LA    @10,JCTPTR(,@10)                                 01S0486
         ST    @10,@AL00001+24                                  01S0486
         L     @15,@CV00097                                     01S0486
         LA    @01,@AL00001                                     01S0486
         BALR  @14,@15                                          01S0486
*          IF ERRCODE=0 THEN           /*CONVERT SUCCESSFUL          */
         L     @10,@PC00001+4                                   01S0487
         ICM   @08,3,ERRCODE(@10)                               01S0487
         BNZ   @RF00487                                         01S0487
*            ALCDDSAB = DSNCNP;        /*REMEMBER DSAB ALLOCATED     */
         L     @10,DSNCNP                                       01S0488
         ST    @10,ALCDDSAB                                     01S0488
*        END;                                                   01S0489
*      ELSE                            /* NO DSAB TO CONVERT         */
*        CALL IEFDB413 (ADDR(KEYTABLE),SYSCTBLK,EPALSTP,        01S0490
*                       NORMDSAB,ALCRSCDE,ALFNCMAP,DEPARMS,SMFPARMS);
         B     @RC00484                                         01S0490
@RF00484 ST    KEYTABP,@TF00001                                 01S0490
         LA    @10,@TF00001                                     01S0490
         ST    @10,@AL00001                                     01S0490
         L     @10,@PC00001+8                                   01S0490
         ST    @10,@AL00001+4                                   01S0490
         L     @10,@PC00001+20                                  01S0490
         ST    @10,@AL00001+8                                   01S0490
         LA    @10,NORMDSAB                                     01S0490
         ST    @10,@AL00001+12                                  01S0490
         L     @10,@PC00001+4                                   01S0490
         ST    @10,@AL00001+16                                  01S0490
         L     @10,@PC00001+12                                  01S0490
         ST    @10,@AL00001+20                                  01S0490
         L     @10,@PC00001+16                                  01S0490
         ST    @10,@AL00001+24                                  01S0490
         L     @10,@PC00001+24                                  01S0490
         ST    @10,@AL00001+28                                  01S0490
         L     @15,@CV00098                                     01S0490
         LA    @01,@AL00001                                     01S0490
         BALR  @14,@15                                          01S0490
*                                      /*NORMAL ALLOC PROCESSING
*                                                            @ZA02706*/
*    ELSE;                             /*ERROR IN CKCONVRT           */
@RF00483 DS    0H                                               01S0492
*  END;                                                         01S0492
*ELSE;                                 /* ERROR IN SYNTAX            */
*                                                               01S0493
@RF00122 DS    0H                                               01S0494
*/********************************************************************/
*/*                                                                  */
*/* SEGMENT NAME - CLEANUP                                           */
*/*                                                                  */
*/* DESCRIPTIVE NAME - CLEANUP CODE FOR DYNAMIC ALLOCATION           */
*/*                                                                  */
*/* FUNCTION -                                                       */
*/*            BEFORE RETURNING TO THE CONTROL ROUTINE (CALLER),     */
*/*            DO THE FOLLOWING -                                    */
*/*             . RESTORE REQUESTED INFORMATION INTO THE TEXTUNITS   */
*/*                                                                  */
*/*  INPUT DATA -                                                    */
*/*               ALCDDSAB - 0, OR ADDRESS OF DSAB ALLOCATED         */
*/*               RTDDNTUP - 0, OR REQUEST TO RETURN DDNAME          */
*/*               RTDSNTUP - 0, OR REQUEST TO RETURN DSNAME          */
*/*               RTORGTUP - 0, OR REQUEST TO RETURN DSORG           */
*/*               RTVOLTUP - 0, OR REQUEST TO RETURN VOLUME SERIAL   */
*/*                                                                  */
*/*  OUTPUT DATA -                                                   */
*/*              .TEXTUNITS UPDATED WITH RETURN INFORMATION          */
*/*                                                                  */
*/********************************************************************/
*IF ALCDDSAB^=0                        /*DATASET APPARENTLY ALLOCATED*/
*  & ERRCODE=0 THEN                    /*AND NO ERRORS AT ALL        */
@RC00122 L     @10,ALCDDSAB                                     02S0494
         SLR   @08,@08                                          02S0494
         CR    @10,@08                                          02S0494
         BE    @RF00494                                         02S0494
         L     @05,@PC00001+4                                   02S0494
         ICM   @02,3,ERRCODE(@05)                               02S0494
         BNZ   @RF00494                                         02S0494
*  DO;                                                          02S0495
*    RFY DSAB BASED(ALCDDSAB);         /* PREPARE TO RETURN INFO     */
*                                                               02S0496
*    IF RTDDNTUP^=0 THEN               /* RETURN DDNAME REQUESTED    */
         L     @05,RTDDNTUP(,KEYTABP)                           02S0497
         CR    @05,@08                                          02S0497
         BE    @RF00497                                         02S0497
*      DO;                                                      02S0498
*        RFY TEXTUNIT BASED(RTDDNTUP);                          02S0499
*        TEXTUPAR(1:8) = TIOEDDNM(1:8);                         02S0500
         L     @10,DSABTIOT(,@10)                               02S0500
         MVC   TEXTUPAR(8,@05),TIOEDDNM(@10)                    02S0500
*        TEXTULNG = 8;                 /* INIT BEFORE USE AS SW      */
         MVC   TEXTULNG(2,@05),@CH00073                         02S0501
*        DO I=2 TO 8 BY 1 WHILE TEXTULNG=8;/* FIND LENGTH OF DDNAME  */
         LA    @10,2                                            02S0502
         ST    @10,I                                            02S0502
@DL00502 L     @08,RTDDNTUP(,KEYTABP)                           02S0502
         CLC   TEXTULNG(2,@08),@CH00073                         02S0502
         BNE   @DC00502                                         02S0502
*          IF TIOEDDNM(I) = ' ' THEN                            02S0503
         L     @05,ALCDDSAB                                     02S0503
         L     @05,DSABTIOT(,@05)                               02S0503
         ALR   @05,@10                                          02S0503
         CLI   TIOEDDNM-1(@05),C' '                             02S0503
         BNE   @RF00503                                         02S0503
*            TEXTULNG = I-1;                                    02S0504
         BCTR  @10,0                                            02S0504
         STCM  @10,3,TEXTULNG(@08)                              02S0504
*        END;                                                   02S0505
@RF00503 LA    @10,1                                            02S0505
         AL    @10,I                                            02S0505
         ST    @10,I                                            02S0505
         C     @10,@CF00073                                     02S0505
         BNH   @DL00502                                         02S0505
@DC00502 DS    0H                                               02S0506
*      END;                                                     02S0506
*                                                               02S0506
*    IF RTDSNTUP^=0 THEN               /* RETURN DSNAME REQUESTED    */
@RF00497 L     @10,RTDSNTUP(,KEYTABP)                           02S0507
         LTR   @10,@10                                          02S0507
         BZ    @RF00507                                         02S0507
*      DO;                                                      02S0508
*        RFY TEXTUNIT BASED(RTDSNTUP);                          02S0509
*        TEXTUPAR(1:44) = JFCBDSNM;                             02S0510
         L     @08,ALCDDSAB                                     02S0510
         L     @08,DSABSIOT(,@08)                               02S0510
         L     @08,SJFCBPTR(,@08)                               02S0510
         MVC   TEXTUPAR(44,@10),JFCBDSNM(@08)                   02S0510
*        TEXTULNG = 44;                /* INIT BEFORE USE AS SW      */
         MVC   TEXTULNG(2,@10),@CH00125                         02S0511
*        DO I=2 TO 44 BY 1 WHILE TEXTULNG=44;/* FIND LENGTH OF DSNAME*/
         LA    @10,2                                            02S0512
         ST    @10,I                                            02S0512
@DL00512 L     @08,RTDSNTUP(,KEYTABP)                           02S0512
         CLC   TEXTULNG(2,@08),@CH00125                         02S0512
         BNE   @DC00512                                         02S0512
*          IF JFCBDSNM(I) = ' ' THEN                            02S0513
         L     @05,ALCDDSAB                                     02S0513
         L     @05,DSABSIOT(,@05)                               02S0513
         L     @05,SJFCBPTR(,@05)                               02S0513
         ALR   @05,@10                                          02S0513
         BCTR  @05,0                                            02S0513
         CLI   JFCBDSNM(@05),C' '                               02S0513
         BNE   @RF00513                                         02S0513
*            TEXTULNG = I-1;                                    02S0514
         BCTR  @10,0                                            02S0514
         STCM  @10,3,TEXTULNG(@08)                              02S0514
*        END;                                                   02S0515
@RF00513 LA    @10,1                                            02S0515
         AL    @10,I                                            02S0515
         ST    @10,I                                            02S0515
         C     @10,@CF00125                                     02S0515
         BNH   @DL00512                                         02S0515
@DC00512 DS    0H                                               02S0516
*      END;                                                     02S0516
*                                                               02S0516
*    IF RTORGTUP^=0 THEN               /* RETURN DSORG  REQUESTED    */
@RF00507 L     @10,RTORGTUP(,KEYTABP)                           02S0517
         LTR   @10,@10                                          02S0517
         BZ    @RF00517                                         02S0517
*      DO;                                                      02S0518
*        RFY TEXTUNIT BASED(RTORGTUP);                          02S0519
*        TEXTUPAR(1:2) = DSABORG;                               02S0520
         L     @08,ALCDDSAB                                     02S0520
         MVC   TEXTUPAR(2,@10),DSABORG(@08)                     02S0520
*      END;                                                     02S0521
*                                                               02S0521
*    IF RTVOLTUP^=0 THEN               /*RETURN VOL SERIAL REQUESTED */
@RF00517 L     @10,RTVOLTUP(,KEYTABP)                           02S0522
         LTR   @10,@10                                          02S0522
         BZ    @RF00522                                         02S0522
*      DO;                                                      02S0523
*        RFY TEXTUNIT BASED(RTVOLTUP);                          02S0524
*        IF JFCBVOLS(1)=' ' ×          /*DATASET HAS NO VOL  @ZA03887*/
*                                      /* (E.G. VIO OR SUBSYSTEM)    */
*           JFCBVOLS(1)='FF'X ×        /*VOLSER NOT VERIFIED @ZA03887*/
*           JFCBVOLS(1)='FE'X THEN     /*MULTIVOL NOT VERF'D @ZA03887*/
         L     @10,ALCDDSAB                                     02S0525
         L     @10,DSABSIOT(,@10)                               02S0525
         L     @10,SJFCBPTR(,@10)                               02S0525
         CLI   JFCBVOLS(@10),C' '                               02S0525
         BE    @RT00525                                         02S0525
         CLI   JFCBVOLS(@10),X'FF'                              02S0525
         BE    @RT00525                                         02S0525
         CLI   JFCBVOLS(@10),X'FE'                              02S0525
         BNE   @RF00525                                         02S0525
@RT00525 DS    0H                                               02S0526
*          TEXTULNG = 0;               /*INDICATE TO CALLER          */
         L     @10,RTVOLTUP(,KEYTABP)                           02S0526
         SLR   @08,@08                                          02S0526
         STCM  @08,3,TEXTULNG(@10)                              02S0526
*        ELSE                          /*ONE OR MORE VOL SERS        */
*          TEXTUPAR(1:6) = JFCBVOLS(1:6);/*RETURN 1ST OR ONLY VOL SER*/
         B     @RC00525                                         02S0527
@RF00525 L     @10,RTVOLTUP(,KEYTABP)                           02S0527
         L     @08,ALCDDSAB                                     02S0527
         L     @08,DSABSIOT(,@08)                               02S0527
         L     @08,SJFCBPTR(,@08)                               02S0527
         MVC   TEXTUPAR(6,@10),JFCBVOLS(@08)                    02S0527
*      END;                                                     02S0528
*                                                               02S0528
@RC00525 DS    0H                                               02S0529
*  END;                                                         02S0529
@RF00522 DS    0H                                               02S0530
*RETURN CODE(0);                                                01S0530
@RF00494 L     @13,4(,@13)                                      01S0530
         L     @00,@SIZDATD                                     01S0530
         LR    @01,@11                                          01S0530
         FSPACE   R,LV=(0),A=(1)
         SLR   @15,@15                                          01S0530
         L     @14,12(,@13)                                     01S0530
         LM    @00,@12,20(@13)                                  01S0530
         BR    @14                                              01S0530
*END IEFDB410                                                   01S0531
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.      *
*/*%INCLUDE SYSLIB  (ALCTRLDT)                                        *
*/*%INCLUDE SYSLIB  (CVT     )                                        *
*/*%INCLUDE SYSLIB  (IEFAJCTB)                                        *
*/*%INCLUDE SYSLIB  (IEFASIOT)                                        *
*/*%INCLUDE SYSLIB  (IEFASCTB)                                        *
*/*%INCLUDE SYSLIB  (IHAASCB )                                        *
*/*%INCLUDE SYSLIB  (IEFTIOT1)                                        *
*/*%INCLUDE SYSLIB  (IEFJFCBN)                                        *
*/*%INCLUDE SYSLIB  (IEFJFCBX)                                        *
*/*%INCLUDE SYSLIB  (IEZJSCB )                                        *
*/*%INCLUDE SYSLIB  (IEFZB4D1)                                        *
*/*%INCLUDE SYSLIB  (IEFZB4D2)                                        *
*/*%INCLUDE SYSLIB  (IEFZB4D3)                                        *
*/*%INCLUDE SYSLIB  (IHAQDB  )                                        *
*/*%INCLUDE SYSLIB  (IEFZB4D5)                                        *
*/*%INCLUDE SYSLIB  (IEFZB505)                                        *
*/*%INCLUDE SYSLIB  (IHADSAB )                                        *
*/*%INCLUDE SYSLIB  (IEFZB436)                                        *
*/*%INCLUDE SYSLIB  (IEFZB4D7)                                        *
*/*%INCLUDE SYSLIB  (IEFZB4D9)                                        *
*/*%INCLUDE SYSLIB  (IEFZB4DA)                                        *
*/*%INCLUDE SYSLIB  (IHASUBIT)                                        *
*/*%INCLUDE SYSLIB  (FXSYNTX )                                        *
*/*%INCLUDE SYSLIB  (CKCONVRT)                                        *
*/*%INCLUDE SYSLIB  (CKENVRON)                                        *
*/*%INCLUDE SYSLIB  (CKENSTUP)                                        *
*/*%INCLUDE SYSLIB  (CHKPARMS)                                        *
*/*%INCLUDE SYSLIB  (CKREQDCB)                                        *
*/*%INCLUDE SYSLIB  (DSNEQUAL)                                        *
*/*%INCLUDE SYSLIB  (CKDSNENV)                                        *
*/*%INCLUDE SYSLIB  (CKDSNELG)                                        *
*/*%INCLUDE SYSLIB  (CKDSNOCV)                                        *
*/*%INCLUDE SYSLIB  (CKDDNENV)                                        *
*/*%INCLUDE SYSLIB  (UPTOLIM )                                        *
*/*%INCLUDE SYSLIB  (FREEDDN )                                        *
*/*%INCLUDE SYSLIB  (CLEANUP )                                        *
*;                                                              01S0531
@DATA    DS    0H
@CH00071 DC    H'6'
@SM02700 MVC   AMPDSNTU+6(0),TEXTUPAR+1(@10)
@SM02703 MVC   DDNREQ(0),TEXTUPAR(@08)
@SM02705 MVC   DSNREQ(0),TEXTUPAR(@10)
@SM02712 MVC   DSNEXIST(0),DSABANAM(@10)
@SM02714 MVC   HOLD6BYT(0),TEXTUPRM(@08)
@SM02720 MVC   HOLD8BYT(0),TEXTUPAR(@10)
@SX02723 XC    SWAEPA(0,@10),SWAEPA(@10)
         DS    0F
@AL00413 DC    A(@CF00092)             LIST WITH   5 ARGUMENT(S)
         DC    A(@CF00092)
         DC    A(@CF00092)
         DC    A(@CF00092)
         DC    A(@CF00092)
@DATD    DSECT
         DS    0F
@SA00001 DS    18F
@PC00001 DS    7F
@AL00001 DS    8A
@TF00001 DS    F
IEFDB410 CSECT
         DS    0F
@CF00092 DC    F'0'
@CF00084 DC    F'1'
@CH00084 EQU   @CF00084+2
@CF00209 DC    F'2'
@CF01071 DC    F'5'
@CF00073 DC    F'8'
@CH00073 EQU   @CF00073+2
@CF00076 DC    F'15'
@CF00050 DC    F'16'
@CF00125 DC    F'44'
@CH00125 EQU   @CF00125+2
@CF00932 DC    F'176'
@CF02716 DC    F'-6'
@CF00095 DC    XL4'E6000000'
@CF02722 DC    XL4'0000FFFF'
@CF02534 DC    XL4'6700'
@DATD    DSECT
         DS    0D
DSNCNP   DS    A
JFCBXPTR DS    A
SWEPAPTR DS    A
TXTUFLDP DS    A
I        DS    F
DMYRSCD  DS    FL4
         ORG   DMYRSCD
DMYERRCD DS    FL2
DMYINFCD DS    FL2
         ORG   DMYRSCD+4
DDNCNP   DS    A
GETSPLN  DS    F
NUMBDDNS DS    F
NXTPTR   DS    A
NPALCPTR DS    A
LIMTUP   DS    A
VLSRJFCP DS    A
INDXVLSR DS    F
SIOTPTR  DS    A
TIOTPTR  DS    A
JFCBPTR  DS    A
TCBJSCB  DS    A
QDBPTR   DS    A
LIMCOUNT DS    H
NBVOLSER DS    H
SWACTLS  DS    FL2
         ORG   SWACTLS
SWASN    DS    BL1
SWDEL    EQU   SWACTLS+0
SWREAD   EQU   SWACTLS+0
SWWRT    EQU   SWACTLS+0
SWNEW    EQU   SWACTLS+0
SWFREE   EQU   SWACTLS+0
SWMOD    EQU   SWACTLS+0
SWOLD    EQU   SWACTLS+0
SWCHN    DS    BL1
@NM00078 EQU   SWACTLS+1
         ORG   SWACTLS+2
         DS    CL2
NORMDSAB DS    CL8
         ORG   NORMDSAB
COPYDSAB DS    AL4
ALCDDSAB DS    AL4
         ORG   NORMDSAB+8
HOLD6BYT DS    CL6
HOLD8BYT DS    CL8
AMPDSNTU DS    CL50
SNTXSWCH DS    BL1
         ORG   SNTXSWCH
DFLTSTAT DS    BL1
DFLTNDSP EQU   SNTXSWCH+0
         ORG   SNTXSWCH+1
DDNREQ   DS    CL8
DSNEXIST DS    CL44
DSNREQ   DS    CL44
CKENVMAP DS    BL1
         ORG   CKENVMAP
DSNREQSW DS    BL1
DDNREQSW EQU   CKENVMAP+0
ENDDNSSW EQU   CKENVMAP+0
SAMDSASW EQU   CKENVMAP+0
DSNEQUSW EQU   CKENVMAP+0
DDNEQUSW EQU   CKENVMAP+0
DSNTRMSW EQU   CKENVMAP+0
CKDSCFSW EQU   CKENVMAP+0
         ORG   CKENVMAP+1
         DS    CL2
CHNGDDNM DS    CL20
         ORG   CHNGDDNM
OLDDDNAM DS    CL8
OLDPOSNO DS    FL2
NEWDDNAM DS    CL8
NEWPOSNO DS    FL2
         ORG   CHNGDDNM+20
@NM00001 DS    BL1
         ORG   @NM00001
FOUND    DS    BL1
QUIT     EQU   @NM00001+0
         ORG   @NM00001+1
LIMTU    DS    CL14
DSNSW    DS    BL1
         ORG   DSNSW
ELIGBLSW DS    BL1
         ORG   DSNSW+1
SOUTCONV DS    BL1
         DS    CL3
KEYTABA  DS    CL388
IEFDB410 CSECT
         DS    0F
@SIZDATD DC    AL1(230)
         DC    AL3(@ENDDATD-@DATD)
@CV00096 DC    V(IEFDB412)
@CV00097 DC    V(IEFDB411)
@CV00098 DC    V(IEFDB413)
@CV00136 DC    V(IEFDB4FE)
@CV00144 DC    V(IEFDB4FB)
@CV00145 DC    V(IEFDB4FD)
@CV00154 DC    V(IEFDB460)
@CV00155 DC    V(IEFDB4A0)
@CV00156 DC    V(IEFAB4F7)
         DS    0D
TEXTINDX DC    AL4(2+2)
@CC02670 DC    C'NULLFILE'
@CC02662 DC    C'&&&&'
@CB01830 DC    X'0001'
@CB02404 DC    X'0410'
@CB02406 DC    X'0420'
@CB02414 DC    X'043C'
@CB02420 DC    X'0448'
@CB02422 DC    X'044C'
@CB02484 DC    X'1708'
DFLTNEW  DC    X'00040001000104'
DFLTOLD  DC    X'00040001000101'
DFLTDELE DC    X'00050001000104'
SOUTXUNT DC    X'00180000'
IEFDB410 CSECT
         DS   0H
PATCHLOC DC ((@DATA-@PSTART)/20)X'00'
@DATD    DSECT
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
IEFDB410 CSECT
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
DSABPTR  EQU   @04
KEYTABP  EQU   @03
R0       EQU   @00
R1       EQU   @01
R15      EQU   @15
CVTPTR   EQU   16
VOLSRJFC EQU   0
CVTMAP   EQU   0
CVTDAR   EQU   CVTMAP+72
CVTFLGS1 EQU   CVTDAR
CVTDCB   EQU   CVTMAP+116
CVTIOQET EQU   CVTMAP+120
CVTIERLC EQU   CVTMAP+144
CVTHEAD  EQU   CVTMAP+160
CVTSV76C EQU   CVTHEAD
CVTOPTA  EQU   CVTMAP+182
CVTOPTB  EQU   CVTMAP+183
CVTGTF   EQU   CVTMAP+236
CVTGTFST EQU   CVTGTF
CVTGTFS  EQU   CVTGTFST
CVTSTATE EQU   CVTGTFST
CVTTMODE EQU   CVTGTFST
CVTFORM  EQU   CVTGTFST
CVTAQAVT EQU   CVTMAP+240
CVTTCMFG EQU   CVTAQAVT
CVTVOLM2 EQU   CVTMAP+244
CVTTATA  EQU   CVTVOLM2
CVTTSKS  EQU   CVTTATA
CVTVOLF2 EQU   CVTTSKS
CVTTAT   EQU   CVTTATA+1
CVTATER  EQU   CVTMAP+248
CVTEXT1  EQU   CVTMAP+252
CVTPURG  EQU   CVTMAP+260
CVTQMSG  EQU   CVTMAP+268
CVTDMSR  EQU   CVTMAP+272
CVTRSV37 EQU   CVTDMSR
CVTDMSRF EQU   CVTRSV37
CVTERPV  EQU   CVTMAP+316
CVTINTLA EQU   CVTMAP+320
CVTAPF   EQU   CVTMAP+324
CVTEXT2  EQU   CVTMAP+328
CVTHJES  EQU   CVTMAP+332
CVTPGSIA EQU   CVTMAP+348
CVTA1F1  EQU   CVTMAP+356
CVTSYSK  EQU   CVTMAP+357
CVTVOLM1 EQU   CVTMAP+380
CVTVOLF1 EQU   CVTVOLM1
CVTATMCT EQU   CVTMAP+388
CVTXTNT1 EQU   0
CVTXTNT2 EQU   0
CVTDSSV  EQU   CVTXTNT2
CVTFLGBT EQU   CVTXTNT2+5
CVTQID   EQU   CVTXTNT2+24
CVTRV400 EQU   CVTXTNT2+52
CVTRV409 EQU   CVTXTNT2+53
CVTATCVT EQU   CVTXTNT2+64
CVTRV429 EQU   CVTXTNT2+84
CVTRV438 EQU   CVTXTNT2+85
CVTRV457 EQU   CVTXTNT2+112
CVTRV466 EQU   CVTXTNT2+113
CVTFIX   EQU   0
CVTRELNO EQU   CVTFIX+252
INJMJCT  EQU   0
JCTDSKAD EQU   INJMJCT
JCTIDENT EQU   INJMJCT+3
JCTJSTAT EQU   INJMJCT+5
INDMCTLG EQU   JCTJSTAT
JCTJBYTE EQU   INJMJCT+7
JCTJMGLV EQU   JCTJBYTE
JCTCCODE EQU   INJMJCT+54
JCTRSW1  EQU   INJMJCT+86
JCTCKFT  EQU   JCTRSW1
JCTRSW2  EQU   INJMJCT+87
JCTNARST EQU   JCTRSW2
JCTJSB   EQU   INJMJCT+111
JCTSTAT2 EQU   INJMJCT+116
IEFAACTB EQU   0
INDMSIOT EQU   0
SIOTDSKA EQU   INDMSIOT
SIOTTYPE EQU   INDMSIOT+3
SCTDDNAM EQU   INDMSIOT+4
SCTUSADD EQU   INDMSIOT+20
SIOTBYT1 EQU   INDMSIOT+43
SIOTBYT3 EQU   INDMSIOT+46
SIOALIAS EQU   SIOTBYT3
SIOTTSTC EQU   INDMSIOT+47
SIOTTERM EQU   SIOTTSTC
SIOTSSGP EQU   SIOTTSTC
SIOTQNAM EQU   SIOTTSTC
SIOTBYT0 EQU   INDMSIOT+52
SCTSDISP EQU   INDMSIOT+55
SIOTDLET EQU   SCTSDISP
SCTSBYT1 EQU   INDMSIOT+56
SCTDUMMY EQU   SCTSBYT1
SCTSBYT2 EQU   INDMSIOT+57
SCTSBYT3 EQU   INDMSIOT+58
SCTSBYT4 EQU   INDMSIOT+59
SCTSGDGS EQU   SCTSBYT4
SIOTGDGA EQU   SCTSBYT4
SCTUTYPE EQU   INDMSIOT+60
SIOTDEVT EQU   SCTUTYPE
SIOUBYT3 EQU   SIOTDEVT+2
SIOTBYT4 EQU   INDMSIOT+81
SIOTALTD EQU   INDMSIOT+92
SIOTBYT2 EQU   INDMSIOT+103
SIOTGALL EQU   SIOTBYT2
SJFCBPTR EQU   INDMSIOT+156
SIOTJFX  EQU   INDMSIOT+160
INSMSCT  EQU   0
SCTSSTAT EQU   INSMSCT+4
SCTLSIOT EQU   INSMSCT+24
SCTSTYPE EQU   INSMSCT+67
SCTNIUSL EQU   INSMSCT+92
SCTSDPTY EQU   INSMSCT+94
SCTSTAT2 EQU   INSMSCT+104
SCTBCT   EQU   SCTSTAT2
SCTCDENT EQU   INSMSCT+118
SCTSTEND EQU   INSMSCT+172
@NM00056 EQU   0
SCTABCND EQU   @NM00056
ASCB     EQU   0
ASCBTSB  EQU   ASCB+60
ASCBFW1  EQU   ASCB+100
ASCBRCTF EQU   ASCBFW1+2
ASCBFLG1 EQU   ASCBFW1+3
ASCBDSP1 EQU   ASCB+114
ASCBFLG2 EQU   ASCB+115
TIOT1    EQU   0
TIOENTRY EQU   0
TIOESTTA EQU   TIOENTRY+1
TIOERLOC EQU   TIOENTRY+2
TIOELINK EQU   TIOERLOC+1
TIOESYOT EQU   TIOELINK
TIOEDDNM EQU   TIOENTRY+4
TIOESTTC EQU   TIOENTRY+15
TIOESTTB EQU   TIOENTRY+16
POOLSTAR EQU   TIOENTRY+20
INFMJFCB EQU   0
JFCBDSNM EQU   INFMJFCB
JFCBELNM EQU   INFMJFCB+44
JFCBTSDM EQU   INFMJFCB+52
JFCFCBID EQU   INFMJFCB+56
JFCBFRID EQU   JFCFCBID
JFCBLTYP EQU   INFMJFCB+66
JFCBOTTR EQU   INFMJFCB+67
JFCBUFOF EQU   JFCBOTTR
JFCBFLSQ EQU   JFCBOTTR+1
JFCFUNC  EQU   JFCBFLSQ
JFCBMASK EQU   INFMJFCB+72
JFCBFLG1 EQU   JFCBMASK+5
JFCOPEN  EQU   JFCBFLG1
JFCBFLG2 EQU   JFCBMASK+6
JFCDEFER EQU   JFCBFLG2
JFCMODNW EQU   JFCBFLG2
JFCBIND1 EQU   INFMJFCB+86
JFCBIND2 EQU   INFMJFCB+87
JFCDISP  EQU   JFCBIND2
JFCAMPTR EQU   INFMJFCB+88
JFCBUFRQ EQU   JFCAMPTR
JFCBUFNO EQU   JFCBUFRQ
JFCBGNCP EQU   JFCAMPTR+1
JFCBHIAR EQU   JFCBGNCP
JFCBFALN EQU   JFCBHIAR
JFCBFTEK EQU   JFCBFALN
JFCBBFTA EQU   JFCBFTEK
JFCEROPT EQU   INFMJFCB+92
JFCTRTCH EQU   INFMJFCB+93
JFCBX    EQU   0
JFCBXVOL EQU   JFCBX+4
JFCBXNAM EQU   JFCBX+96
JFCBXNXT EQU   JFCBX+172
IEZJSCB  EQU   0
JSCBSEC1 EQU   IEZJSCB+188
JSCHPCE  EQU   JSCBSEC1+4
JSCBDCB  EQU   JSCBSEC1+36
JSCBOPTS EQU   JSCBSEC1+48
JSCBSWT1 EQU   JSCBSEC1+55
JSCBWTP  EQU   JSCBSEC1+64
JSCBWTFG EQU   JSCBWTP
JSCBEND1 EQU   IEZJSCB+260
TXTUPLST EQU   0
TXTUNITP EQU   TXTUPLST
TXTUPELM EQU   0
TXTPLENT EQU   TXTUPELM
TXTPLEND EQU   TXTPLENT
TEXTUNIT EQU   0
TEXTUKEY EQU   TEXTUNIT
TEXTUNUM EQU   TEXTUNIT+2
TEXTUENT EQU   TEXTUNIT+4
TEXTULNG EQU   TEXTUENT
TEXTUPAR EQU   TEXTUENT+2
TEXTUFLD EQU   0
TEXTULEN EQU   TEXTUFLD
TEXTUPRM EQU   TEXTUFLD+2
KEYTABLE EQU   0
DDNAMTUP EQU   KEYTABLE
DSNAMTUP EQU   KEYTABLE+4
MEMBRTUP EQU   KEYTABLE+8
STATSTUP EQU   KEYTABLE+12
NDISPTUP EQU   KEYTABLE+16
CDISPTUP EQU   KEYTABLE+20
TRKTUP   EQU   KEYTABLE+24
CYLTUP   EQU   KEYTABLE+28
BLKLNTUP EQU   KEYTABLE+32
PRIMETUP EQU   KEYTABLE+36
SECNDTUP EQU   KEYTABLE+40
DIRTUP   EQU   KEYTABLE+44
RLSETUP  EQU   KEYTABLE+48
SPFRMTUP EQU   KEYTABLE+52
ROUNDTUP EQU   KEYTABLE+56
VLSERTUP EQU   KEYTABLE+60
PRIVTTUP EQU   KEYTABLE+64
VLSEQTUP EQU   KEYTABLE+68
VLCNTTUP EQU   KEYTABLE+72
VLRDSTUP EQU   KEYTABLE+76
UNITTUP  EQU   KEYTABLE+80
UNCNTTUP EQU   KEYTABLE+84
PARALTUP EQU   KEYTABLE+88
SYSOUTUP EQU   KEYTABLE+92
SPGNMTUP EQU   KEYTABLE+96
SFMNOTUP EQU   KEYTABLE+100
OUTLMTUP EQU   KEYTABLE+104
COPYSTUP EQU   KEYTABLE+112
LABELTUP EQU   KEYTABLE+116
DSSEQTUP EQU   KEYTABLE+120
PASPRTUP EQU   KEYTABLE+124
INOUTTUP EQU   KEYTABLE+128
EXPDTTUP EQU   KEYTABLE+132
RETPDTUP EQU   KEYTABLE+136
DUMMYTUP EQU   KEYTABLE+140
FCBIMTUP EQU   KEYTABLE+144
FCBAVTUP EQU   KEYTABLE+148
QNAMETUP EQU   KEYTABLE+152
TERMTUP  EQU   KEYTABLE+156
UCSTUP   EQU   KEYTABLE+160
UFOLDTUP EQU   KEYTABLE+164
UVRFYTUP EQU   KEYTABLE+168
DCBDSTUP EQU   KEYTABLE+172
DCBDDTUP EQU   KEYTABLE+176
BFALNTUP EQU   KEYTABLE+180
BFTEKTUP EQU   KEYTABLE+184
BLKSZTUP EQU   KEYTABLE+188
BUFINTUP EQU   KEYTABLE+192
BUFLTUP  EQU   KEYTABLE+196
BUFMXTUP EQU   KEYTABLE+200
BUFNOTUP EQU   KEYTABLE+204
BUFOFTUP EQU   KEYTABLE+208
BUFOUTUP EQU   KEYTABLE+212
BUFRQTUP EQU   KEYTABLE+216
BUFSZTUP EQU   KEYTABLE+220
CODETUP  EQU   KEYTABLE+224
CPRITUP  EQU   KEYTABLE+228
DENTUP   EQU   KEYTABLE+232
DSORGTUP EQU   KEYTABLE+236
EROPTTUP EQU   KEYTABLE+240
GNCPTUP  EQU   KEYTABLE+244
INTVLTUP EQU   KEYTABLE+248
KYLENTUP EQU   KEYTABLE+252
LIMCTTUP EQU   KEYTABLE+256
LRECLTUP EQU   KEYTABLE+260
MODETUP  EQU   KEYTABLE+264
NCPTUP   EQU   KEYTABLE+268
OPTCDTUP EQU   KEYTABLE+272
PCIRTUP  EQU   KEYTABLE+276
PCISTUP  EQU   KEYTABLE+280
PRTSPTUP EQU   KEYTABLE+284
RECFMTUP EQU   KEYTABLE+288
RSRVFTUP EQU   KEYTABLE+292
RSRVSTUP EQU   KEYTABLE+296
SOWATUP  EQU   KEYTABLE+300
STACKTUP EQU   KEYTABLE+304
THRSHTUP EQU   KEYTABLE+308
TRTCHTUP EQU   KEYTABLE+312
PASSWTUP EQU   KEYTABLE+316
IPLTXTUP EQU   KEYTABLE+320
CNVRTTUP EQU   KEYTABLE+328
DIAGNTUP EQU   KEYTABLE+332
RTDDNTUP EQU   KEYTABLE+336
RTDSNTUP EQU   KEYTABLE+340
RTORGTUP EQU   KEYTABLE+344
SUSERTUP EQU   KEYTABLE+348
SHOLDTUP EQU   KEYTABLE+352
FUNCTUP  EQU   KEYTABLE+356
FRIDTUP  EQU   KEYTABLE+360
SSREQTUP EQU   KEYTABLE+364
RTVOLTUP EQU   KEYTABLE+368
MSVGPTUP EQU   KEYTABLE+372
SSNMTUP  EQU   KEYTABLE+376
QDB      EQU   0
SWAEPA   EQU   0
SWBLKPTR EQU   SWAEPA
SWVAFW   EQU   SWAEPA+4
SWVA     EQU   SWVAFW
SWBLKID  EQU   SWVAFW+3
SWLNGTH  EQU   SWAEPA+8
SWCHNPTR EQU   SWAEPA+12
DSAB     EQU   0
DSABFCHN EQU   DSAB+4
DSABBCHN EQU   DSAB+8
DSABOPCT EQU   DSAB+14
DSABTIOT EQU   DSAB+16
DSABGIDP EQU   DSAB+24
DSABANMP EQU   DSAB+28
DSABORG  EQU   DSAB+32
DSABORG1 EQU   DSABORG
DSABORG2 EQU   DSABORG+1
DSABFLG1 EQU   DSAB+34
DSABPALC EQU   DSABFLG1
DSABCONV EQU   DSABFLG1
DSABPCAT EQU   DSABFLG1
DSABCATM EQU   DSABFLG1
DSABNUSE EQU   DSABFLG1
DSABFLG2 EQU   DSAB+35
DSABFLG3 EQU   DSAB+36
DSABFLG4 EQU   DSAB+37
DSABSIOT EQU   DSAB+64
DSABANMI EQU   0
DSABANML EQU   DSABANMI
DSABANAM EQU   DSABANMI+1
DSABGIDL EQU   0
SUBITS   EQU   0
SUBYTE1  EQU   SUBITS
SUBYTE2  EQU   SUBITS+1
SU11BIT  EQU   SUBYTE2
SUBYTE3  EQU   SUBITS+2
SUBYTE4  EQU   SUBITS+3
SUBYTE5  EQU   SUBITS+4
SUBYTE6  EQU   SUBITS+5
SUBYTE7  EQU   SUBITS+6
SUBYTE8  EQU   SUBITS+7
SUBYTE9  EQU   SUBITS+8
SUBYTE10 EQU   SUBITS+9
SUBYTE11 EQU   SUBITS+10
SUBYTE12 EQU   SUBITS+11
SUBYTE13 EQU   SUBITS+12
INDMDSNT EQU   0
S99TXTPP EQU   0
ALCRSCDE EQU   0
ERRCODE  EQU   ALCRSCDE
SYSCTBLK EQU   0
JSCBPTR  EQU   SYSCTBLK
ASCBPTR  EQU   SYSCTBLK+4
JCTPTR   EQU   SYSCTBLK+12
SCTPTR   EQU   SYSCTBLK+16
ALFNCMAP EQU   0
INPUTSW  EQU   ALFNCMAP
ONCNVTSW EQU   INPUTSW
NOCNVTSW EQU   INPUTSW
PROCESSW EQU   ALFNCMAP+6
COPYSW   EQU   PROCESSW
ERRPROSW EQU   PROCESSW
DCBSPCSW EQU   PROCESSW
EPAJCTSW EQU   PROCESSW
EPALSISW EQU   PROCESSW+1
DEPARMS  EQU   0
DENQRETN EQU   DEPARMS+232
DEDMYEPA EQU   DEPARMS+240
DEWRITP  EQU   DEDMYEPA+12
DEDMYAS  EQU   DEPARMS+260
EPALSTP  EQU   0
SMFPARMS EQU   0
CVTS01   EQU   CVTPGSIA
CVTLPDIA EQU   CVTS01+12
CVTDIRST EQU   CVTLPDIA
CVTSLIDA EQU   CVTS01+24
CVTCTLFG EQU   CVTS01+50
CVTRV210 EQU   CVTS01+424
CVTRV219 EQU   CVTS01+425
CVTRV228 EQU   CVTS01+426
CVTRV237 EQU   CVTS01+427
CVTMFRTR EQU   CVTS01+452
CVTRV262 EQU   CVTS01+468
CVTRV271 EQU   CVTS01+469
CVTRV280 EQU   CVTS01+470
CVTRV289 EQU   CVTS01+471
CVTGSDA  EQU   CVTS01+600
CVTIHASU EQU   CVTS01+696
TIOEDEVE EQU   TIOESTTB
TIOSTTB  EQU   TIOEDEVE
JFCKEYLE EQU   JFCTRTCH
JFCCODE  EQU   JFCKEYLE
JFCSTACK EQU   JFCTRTCH
JFCMODE  EQU   JFCSTACK
JFCSPPRT EQU   JFCTRTCH
JFCBABFS EQU   JFCSPPRT+2
JFCLIMCT EQU   JFCBABFS
JFCDSORG EQU   JFCSPPRT+5
JFCDSRG1 EQU   JFCDSORG
JFCDSRG2 EQU   JFCDSORG+1
JFCORGAM EQU   JFCDSRG2
JFCRECFM EQU   JFCSPPRT+7
JFCRCFM  EQU   JFCRECFM
JFCOPTCD EQU   JFCSPPRT+8
JFCWVCSP EQU   JFCOPTCD
JFCWVCIS EQU   JFCWVCSP
JFCWVCBD EQU   JFCWVCIS
JFCALLOW EQU   JFCOPTCD
JFCRSV17 EQU   JFCALLOW
JFCOVER  EQU   JFCRSV17
JFCPCIBT EQU   JFCOPTCD
JFCMAST  EQU   JFCPCIBT
JFCEXT   EQU   JFCMAST
JFCBCKPT EQU   JFCOPTCD
JFCIND   EQU   JFCBCKPT
JFCRSV18 EQU   JFCOPTCD
JFCCYL   EQU   JFCRSV18
JFCACT   EQU   JFCCYL
JFCREDUC EQU   JFCOPTCD
JFCRSV19 EQU   JFCREDUC
JFCRSV20 EQU   JFCRSV19
JFCRSV21 EQU   JFCOPTCD
JFCDEL   EQU   JFCRSV21
JFCOPTJ  EQU   JFCOPTCD
JFCREORG EQU   JFCOPTJ
JFCBLKSI EQU   JFCSPPRT+9
JFCBUFSI EQU   JFCBLKSI
JFCAMSYN EQU   JFCSPPRT+11
JFCNCP   EQU   JFCAMSYN+2
JFCNTM   EQU   JFCAMSYN+3
JFCBFSEQ EQU   JFCNTM
JFCPCI   EQU   JFCBFSEQ
JFCRESRV EQU   JFCAMSYN+4
JFCUCSEG EQU   JFCRESRV
JFCUCSOP EQU   JFCUCSEG+4
JFCOUTLI EQU   JFCUCSEG+5
JFCTHRSH EQU   JFCOUTLI
JFCCPRI  EQU   JFCTHRSH
JFCBNVOL EQU   JFCUCSEG+9
JFCBVOLS EQU   JFCUCSEG+10
JFCBS001 EQU   JFCBVOLS
JFCBPQTY EQU   JFCBS001+34
JFCBCTRI EQU   JFCBS001+37
JFCBSQTY EQU   JFCBS001+38
JFCFLGS1 EQU   JFCBS001+41
JFCBSPNM EQU   JFCBS001+45
JFCBFLG3 EQU   JFCBSPNM
JSCBSEC2 EQU   JSCBEND1
JSCBSEC3 EQU   JSCBEND1
JSCBJCT  EQU   JSCBSEC3
JSCBJCTA EQU   JSCBJCT+1
JSCBASID EQU   JSCBSEC3+8
JSCBFBYT EQU   JSCBSEC3+10
JSCBJNL  EQU   JSCBSEC3+28
JSCBJJSB EQU   JSCBJNL
JSCBSUB  EQU   JSCBSEC3+40
JSCDSABQ EQU   JSCBSEC3+60
JSCSCT   EQU   JSCBSEC3+68
JSCRSV45 EQU   JSCBSEC3+112
JSCRSV46 EQU   JSCRSV45
JSCRSV47 EQU   JSCRSV45+2
DSABQDB  EQU   QDB
DSQFRSTP EQU   DSABQDB+12
DSQLASTP EQU   DSABQDB+16
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
@NM00072 EQU   DSABQDB+24
DSQBDSP  EQU   DSABQDB+22
DSQFDSP  EQU   DSABQDB+20
DSQBADFC EQU   DSQLASTP
DSQBADBC EQU   DSQFRSTP
DSQNELMS EQU   DSABQDB+8
DSQDBLN  EQU   DSABQDB+6
DSQATTRS EQU   DSABQDB+4
DSQDBID  EQU   DSABQDB
JSCBEND3 EQU   JSCBSEC3+120
JSCRSV52 EQU   JSCBSEC3+116
JSCRSV51 EQU   JSCRSV47+1
JSCRSV50 EQU   JSCRSV47
JSCRSV49 EQU   JSCRSV46+1
JSCRSV48 EQU   JSCRSV46
JSCRSV44 EQU   JSCBSEC3+108
JSCRSV43 EQU   JSCBSEC3+104
JSCRSV42 EQU   JSCBSEC3+100
JSCBASWA EQU   JSCBSEC3+96
JSCBUFPT EQU   JSCBSEC3+92
JSCBACT  EQU   JSCBSEC3+88
JSCBSWSP EQU   JSCBSEC3+87
JSCRSV33 EQU   JSCBSEC3+86
JSCDDNUM EQU   JSCBSEC3+84
JSCRSV53 EQU   JSCBSEC3+82
JSCDDNNO EQU   JSCBSEC3+80
JSCBVATA EQU   JSCBSEC3+76
JSCTMCOR EQU   JSCBSEC3+72
JSCSCTP  EQU   JSCSCT+1
JSCRSV55 EQU   JSCSCT
JSCRSV54 EQU   JSCBSEC3+64
JSCBSSIB EQU   JSCBSEC3+56
JSCBFRBA EQU   JSCBSEC3+48
JSCRSV28 EQU   JSCBSEC3+46
JSCBSONO EQU   JSCBSEC3+44
JSCBSUBA EQU   JSCBSUB+1
JSCRSV31 EQU   JSCBSUB
JSCBSMLR EQU   JSCBSEC3+36
JSCBJNLR EQU   JSCBSEC3+32
JSCBJNLA EQU   JSCBJNL+1
JSCBJSBT EQU   JSCBJJSB
JSCBJSBX EQU   JSCBJJSB
JSCBJSBA EQU   JSCBJJSB
JSCBJSBI EQU   JSCBJJSB
@NM00071 EQU   JSCBJJSB
JSCBJNLE EQU   JSCBJJSB
JSCBJNLF EQU   JSCBJJSB
JSCBJNLN EQU   JSCBJJSB
@NM00070 EQU   JSCBSEC3+24
JSCBJRBA EQU   JSCBSEC3+16
JSCBIECB EQU   JSCBSEC3+12
JSCBRV08 EQU   JSCBSEC3+11
JSCBRV07 EQU   JSCBFBYT
JSCBRV06 EQU   JSCBFBYT
JSCBRV05 EQU   JSCBFBYT
JSCBRV04 EQU   JSCBFBYT
JSCBRV03 EQU   JSCBFBYT
JSCBRV02 EQU   JSCBFBYT
JSCBADSP EQU   JSCBFBYT
JSCBRV01 EQU   JSCBFBYT
JSCBTJID EQU   JSCBASID
JSCBPSCB EQU   JSCBSEC3+4
JSCJCTP  EQU   JSCBJCTA
JSCRSV24 EQU   JSCBJCT
JSCBEND2 EQU   JSCBSEC2
JFCBEND  EQU   JFCBS001+58
JFCBSPTN EQU   JFCBS001+57
JFCBVLCT EQU   JFCBS001+56
JFCBDRLH EQU   JFCBS001+53
JFCBSBNM EQU   JFCBS001+50
JFCBABST EQU   JFCBS001+48
JFCBRV08 EQU   JFCBSPNM+1
JFCBRV07 EQU   JFCBFLG3
JFCBRV06 EQU   JFCBFLG3
JFCBRV05 EQU   JFCBFLG3
JFCBRV04 EQU   JFCBFLG3
JFCBRV03 EQU   JFCBFLG3
JFCBRV02 EQU   JFCBFLG3
JFCBEXP  EQU   JFCBFLG3
JFCDQDSP EQU   JFCBFLG3
JFCBDQTY EQU   JFCBS001+42
JFCBUAFF EQU   JFCFLGS1
JFCRSV45 EQU   JFCFLGS1
JFCVRDS  EQU   JFCFLGS1
JFCBCEOV EQU   JFCFLGS1
JFCRSV42 EQU   JFCFLGS1
JFCBADSP EQU   JFCFLGS1
JFCTOPEN EQU   JFCFLGS1
JFCBDLET EQU   JFCFLGS1
JFCRQID  EQU   JFCBSQTY
JFCROUND EQU   JFCBCTRI
JFCALX   EQU   JFCBCTRI
JFCMIXG  EQU   JFCBCTRI
JFCONTIG EQU   JFCBCTRI
JFCRSV29 EQU   JFCBCTRI
JFCBMSGP EQU   JFCBCTRI
JFCBSPAC EQU   JFCBCTRI
JFCRUNIT EQU   JFCBPQTY
JFCBEXAD EQU   JFCBS001+31
JFCBEXTL EQU   JFCBS001+30
JFCMSVGP EQU   JFCBS001+22
@NM00064 EQU   JFCBS001
JFCAVOLS EQU   JFCBVOLS
JFCBNTCS EQU   JFCUCSEG+8
JFCSOWA  EQU   JFCOUTLI+1
JFCSEND  EQU   JFCCPRI
JFCEQUAL EQU   JFCCPRI
JFCRECV  EQU   JFCCPRI
JFCRSV34 EQU   JFCCPRI
JFCRSV33 EQU   JFCCPRI
JFCRSV55 EQU   JFCCPRI
JFCRSV54 EQU   JFCCPRI
JFCRSV53 EQU   JFCCPRI
JFCRSV27 EQU   JFCUCSOP
JFCRSV26 EQU   JFCUCSOP
JFCFCBVR EQU   JFCUCSOP
JFCFCBAL EQU   JFCUCSOP
JFCVER   EQU   JFCUCSOP
JFCRSV25 EQU   JFCUCSOP
JFCFOLD  EQU   JFCUCSOP
JFCBEXTP EQU   JFCUCSOP
JFCUCSID EQU   JFCUCSEG
JFCINTVL EQU   JFCSPPRT+19
JFCDBUFN EQU   JFCRESRV+3
JFCCYLOF EQU   JFCRESRV+2
JFCRKP   EQU   JFCRESRV
JFCPCIR2 EQU   JFCPCI
JFCPCIR1 EQU   JFCPCI
JFCPCIN2 EQU   JFCPCI
JFCPCIN1 EQU   JFCPCI
JFCPCIA2 EQU   JFCPCI
JFCPCIA1 EQU   JFCPCI
JFCPCIX2 EQU   JFCPCI
JFCPCIX1 EQU   JFCPCI
JFCBUFMX EQU   JFCNCP
JFCLRECL EQU   JFCAMSYN
JFCBAXBF EQU   JFCBUFSI
JFCREL   EQU   JFCREORG
JFCRSV22 EQU   JFCDEL
JFCSRCHD EQU   JFCRSV20
JFCOPTQ  EQU   JFCACT
JFCFEED  EQU   JFCIND
JFCCBWU  EQU   JFCEXT
JFCWUMSG EQU   JFCOVER
JFCSDNAM EQU   JFCWVCBD
@NM00063 EQU   JFCRECFM
JFCCHAR  EQU   JFCRECFM
JFCRFS   EQU   JFCRECFM
JFCRFB   EQU   JFCRECFM
JFCRFO   EQU   JFCRCFM
JFCFMREC EQU   JFCRCFM
JFCRSV16 EQU   JFCDSRG2
JFCRSV15 EQU   JFCDSRG2
JFCORGTR EQU   JFCDSRG2
JFCRSV13 EQU   JFCDSRG2
JFCORGTQ EQU   JFCDSRG2
JFCORGTX EQU   JFCDSRG2
JFCORGGS EQU   JFCDSRG2
JFCORGU  EQU   JFCDSRG1
JFCORGPO EQU   JFCDSRG1
JFCORGMQ EQU   JFCDSRG1
JFCORGCQ EQU   JFCDSRG1
JFCORGCX EQU   JFCDSRG1
JFCORGDA EQU   JFCDSRG1
JFCORGPS EQU   JFCDSRG1
JFCORGIS EQU   JFCDSRG1
JFCTRKBL EQU   JFCLIMCT+1
@NM00062 EQU   JFCLIMCT
JFCDEN   EQU   JFCSPPRT+1
JFCPRTSP EQU   JFCSPPRT
JFCONE   EQU   JFCMODE
JFCTWO   EQU   JFCMODE
JFCRSV07 EQU   JFCMODE
JFCRSV06 EQU   JFCMODE
JFCMODER EQU   JFCMODE
JFCMODEO EQU   JFCMODE
JFCEBCD  EQU   JFCMODE
JFCBIN   EQU   JFCMODE
JFCRSV32 EQU   JFCCODE
JFCTTY   EQU   JFCCODE
JFCASCII EQU   JFCCODE
JFCNCR   EQU   JFCCODE
JFCBUR   EQU   JFCCODE
JFCFRI   EQU   JFCCODE
JFCBCD   EQU   JFCCODE
JFCNOCON EQU   JFCCODE
TIOUCBP  EQU   TIOEDEVE+1
TIOVERF  EQU   TIOSTTB
TIOUNLD  EQU   TIOSTTB
TIOMNTD  EQU   TIOSTTB
TIOSETU  EQU   TIOSTTB
TIOVLSR  EQU   TIOSTTB
TIOPVIO  EQU   TIOSTTB
TIOREQD  EQU   TIOSTTB
TIOUSED  EQU   TIOSTTB
CVTRV628 EQU   CVTS01+728
CVTRV627 EQU   CVTS01+724
CVTRV626 EQU   CVTS01+720
CVTRV625 EQU   CVTS01+716
CVTRV624 EQU   CVTS01+712
CVTRV623 EQU   CVTS01+708
CVTRV622 EQU   CVTS01+704
CVTRV621 EQU   CVTS01+700
CVTRV619 EQU   CVTS01+692
CVTRV618 EQU   CVTS01+688
CVTRV617 EQU   CVTS01+684
CVTRV616 EQU   CVTS01+680
CVTRV615 EQU   CVTS01+676
CVTRV614 EQU   CVTS01+672
CVTRV613 EQU   CVTS01+668
CVTTCASP EQU   CVTS01+664
CVT0PT03 EQU   CVTS01+660
CVT0PT0E EQU   CVTS01+656
CVTRV609 EQU   CVTS01+652
CVTCGK   EQU   CVTS01+648
CVTRAC   EQU   CVTS01+644
CVTHSM   EQU   CVTS01+640
CVTRV605 EQU   CVTS01+636
CVTRV604 EQU   CVTS01+632
CVTEFF02 EQU   CVTS01+628
CVTCBBR  EQU   CVTS01+624
CVTSSCR  EQU   CVTS01+620
CVTEVENT EQU   CVTS01+616
CVTCRCA  EQU   CVTS01+612
CVTTPIO  EQU   CVTS01+608
CVTADV   EQU   CVTS01+604
CVTGSDAB EQU   CVTGSDA
CVTQV3   EQU   CVTS01+596
CVTQV2   EQU   CVTS01+592
CVTQV1   EQU   CVTS01+588
CVTRPT   EQU   CVTS01+584
CVTSSRB  EQU   CVTS01+580
CVTCSDRL EQU   CVTS01+576
CVTEXP1  EQU   CVTS01+572
CVTRMPMT EQU   CVTS01+568
CVTRMPTT EQU   CVTS01+564
CVTVPSA  EQU   CVTS01+560
CVTVSTOP EQU   CVTS01+556
CVTGTFR8 EQU   CVTS01+552
CVTQUIT  EQU   CVTS01+548
CVTVACR  EQU   CVTS01+544
CVTWTCB  EQU   CVTS01+540
CVTSTPRS EQU   CVTS01+536
CVT0PT02 EQU   CVTS01+532
CVTDARCM EQU   CVTS01+528
CVTIRECM EQU   CVTS01+524
CVTJRECM EQU   CVTS01+520
CVTVEMS0 EQU   CVTS01+516
CVTSPFRR EQU   CVTS01+512
CVTRLSTG EQU   CVTS01+508
CVT0TC0A EQU   CVTS01+504
CVTGMBR  EQU   CVTS01+500
CVTLFRM  EQU   CVTS01+496
CVTRMBR  EQU   CVTS01+492
CVTVIOP  EQU   CVTS01+488
CVTRV307 EQU   CVTS01+486
CVTRV306 EQU   CVTS01+484
CVTRV305 EQU   CVTS01+482
CVTRV304 EQU   CVTS01+480
CVTRV303 EQU   CVTS01+478
CVTRV302 EQU   CVTS01+476
CVTTRCA  EQU   CVTS01+472
CVTRV297 EQU   CVTRV289
CVTRV296 EQU   CVTRV289
CVTRV295 EQU   CVTRV289
CVTRV294 EQU   CVTRV289
CVTRV293 EQU   CVTRV289
CVTRV292 EQU   CVTRV289
CVTRV291 EQU   CVTRV289
CVTRV290 EQU   CVTRV289
CVTRV288 EQU   CVTRV280
CVTRV287 EQU   CVTRV280
CVTRV286 EQU   CVTRV280
CVTRV285 EQU   CVTRV280
CVTRV284 EQU   CVTRV280
CVTRV283 EQU   CVTRV280
CVTRV282 EQU   CVTRV280
CVTRV281 EQU   CVTRV280
CVTRV279 EQU   CVTRV271
CVTRV278 EQU   CVTRV271
CVTRV277 EQU   CVTRV271
CVTRV276 EQU   CVTRV271
CVTRV275 EQU   CVTRV271
CVTRV274 EQU   CVTRV271
CVTRV273 EQU   CVTRV271
CVTRV272 EQU   CVTRV271
CVTRV270 EQU   CVTRV262
CVTRV269 EQU   CVTRV262
CVTRV268 EQU   CVTRV262
CVTRV267 EQU   CVTRV262
CVTRV266 EQU   CVTRV262
CVTRV265 EQU   CVTRV262
CVTRV264 EQU   CVTRV262
CVTRV263 EQU   CVTRV262
CVTVFP   EQU   CVTS01+464
CVTVSI   EQU   CVTS01+460
CVTVPSIB EQU   CVTS01+456
CVTMFACT EQU   CVTMFRTR
CVTMFCTL EQU   CVTS01+448
CVTPVBP  EQU   CVTS01+444
CVTPWI   EQU   CVTS01+440
CVTRV254 EQU   CVTS01+438
CVTRV253 EQU   CVTS01+436
CVTRV252 EQU   CVTS01+434
CVTRV251 EQU   CVTS01+433
CVTRV250 EQU   CVTS01+432
CVTRV249 EQU   CVTS01+431
CVTRV248 EQU   CVTS01+430
CVTRV247 EQU   CVTS01+429
CVTRV246 EQU   CVTS01+428
CVTRV245 EQU   CVTRV237
CVTRV244 EQU   CVTRV237
CVTRV243 EQU   CVTRV237
CVTRV242 EQU   CVTRV237
CVTRV241 EQU   CVTRV237
CVTRV240 EQU   CVTRV237
CVTRV239 EQU   CVTRV237
CVTRV238 EQU   CVTRV237
CVTRV236 EQU   CVTRV228
CVTRV235 EQU   CVTRV228
CVTRV234 EQU   CVTRV228
CVTRV233 EQU   CVTRV228
CVTRV232 EQU   CVTRV228
CVTRV231 EQU   CVTRV228
CVTRV230 EQU   CVTRV228
CVTRV229 EQU   CVTRV228
CVTRV227 EQU   CVTRV219
CVTRV226 EQU   CVTRV219
CVTRV225 EQU   CVTRV219
CVTRV224 EQU   CVTRV219
CVTRV223 EQU   CVTRV219
CVTRV222 EQU   CVTRV219
CVTRV221 EQU   CVTRV219
CVTRV220 EQU   CVTRV219
CVTRV218 EQU   CVTRV210
CVTRV217 EQU   CVTRV210
CVTRV216 EQU   CVTRV210
CVTRV215 EQU   CVTRV210
CVTRV214 EQU   CVTRV210
CVTRV213 EQU   CVTRV210
CVTRV212 EQU   CVTRV210
CVTRV211 EQU   CVTRV210
CVTLCCAT EQU   CVTS01+420
CVTPCCAT EQU   CVTS01+416
CVTIPCRP EQU   CVTS01+412
CVTIPCRI EQU   CVTS01+408
CVTIPCDS EQU   CVTS01+404
CVTAIDVT EQU   CVTS01+400
CVTSSAP  EQU   CVTS01+396
CVTEHCIR EQU   CVTS01+392
CVTEHDEF EQU   CVTS01+388
CVTDAIR  EQU   CVTS01+384
CVTPERFM EQU   CVTS01+380
CVT044R2 EQU   CVTS01+376
CVTFETCH EQU   CVTS01+372
CVTRSTWD EQU   CVTS01+368
CVTSPOST EQU   CVTS01+364
CVTIOBP  EQU   CVTS01+360
CVTASMVT EQU   CVTS01+356
CVTRECRQ EQU   CVTS01+352
CVTWSAC  EQU   CVTS01+348
CVTRV149 EQU   CVTS01+344
CVTWSAL  EQU   CVTS01+340
CVTSPSA  EQU   CVTS01+336
CVTGLMN  EQU   CVTS01+332
CVTVEAC0 EQU   CVTS01+328
CVT062R1 EQU   CVTS01+324
CVTRPOST EQU   CVTS01+320
CVTDQIQE EQU   CVTS01+316
CVTCSD   EQU   CVTS01+312
CVTLKRMA EQU   CVTS01+308
CVTRSPIE EQU   CVTS01+304
CVTRENQ  EQU   CVTS01+300
CVTLQCB  EQU   CVTS01+296
CVTFQCB  EQU   CVTS01+292
CVTQCS01 EQU   CVTS01+288
CVTAPFT  EQU   CVTS01+284
CVTPARRL EQU   CVTS01+280
CVTVWAIT EQU   CVTS01+276
CVTGSPL  EQU   CVTS01+272
CVTLSMQ  EQU   CVTS01+268
CVTGSMQ  EQU   CVTS01+264
CVTEXPRO EQU   CVTS01+260
CVTOPCTP EQU   CVTS01+256
CVTSIC   EQU   CVTS01+252
CVTTPIOS EQU   CVTS01+248
CVTRTMS  EQU   CVTS01+244
CVTSDBF  EQU   CVTS01+240
CVTSCBP  EQU   CVTS01+236
CVTSDMP  EQU   CVTS01+232
CVTSV60  EQU   CVTS01+228
CVTRTMCT EQU   CVTS01+224
CVTASCBL EQU   CVTS01+220
CVTASCBH EQU   CVTS01+216
CVTGDA   EQU   CVTS01+212
CVTASVT  EQU   CVTS01+208
CVTVVMDI EQU   CVTS01+204
CVTAQTOP EQU   CVTS01+200
CVTIOSCS EQU   CVTS01+196
CVTSDRM  EQU   CVTS01+192
CVTOPTE  EQU   CVTS01+188
CVTSTXU  EQU   CVTS01+184
CVTQUIS  EQU   CVTS01+180
CVTPARS  EQU   CVTS01+176
CVTS1EE  EQU   CVTS01+172
CVTFRAS  EQU   CVTS01+168
CVTQSAS  EQU   CVTS01+164
CVTCRAS  EQU   CVTS01+160
CVTCRMN  EQU   CVTS01+156
CVTDELCP EQU   CVTS01+152
CVTFRECL EQU   CVTS01+148
CVTGETCL EQU   CVTS01+144
CVTBLDCP EQU   CVTS01+140
CVTAUTHL EQU   CVTS01+136
CVTSCAN  EQU   CVTS01+132
CVTRV144 EQU   CVTS01+130
CVTMAXMP EQU   CVTS01+128
CVTSTCK  EQU   CVTS01+124
CVTRV139 EQU   CVTS01+123
CVTDSSAC EQU   CVTS01+122
CVTRV513 EQU   CVTS01+121
CVTIOSPL EQU   CVTS01+120
CVTPTGT  EQU   CVTS01+116
CVTCSPIE EQU   CVTS01+112
CVTSMFEX EQU   CVTS01+108
CVTOLT0A EQU   CVTS01+104
CVTSRBRT EQU   CVTS01+100
CVTPUTL  EQU   CVTS01+96
CVTASCRL EQU   CVTS01+92
CVTASCRF EQU   CVTS01+88
CVTRV326 EQU   CVTS01+84
CVTRV325 EQU   CVTS01+80
CVTRV324 EQU   CVTS01+76
CVT0VL01 EQU   CVTS01+72
CVTSHRVM EQU   CVTS01+68
CVTRV332 EQU   CVTS01+64
CVTTAS   EQU   CVTS01+60
CVTRSCN  EQU   CVTS01+56
CVTTRAC2 EQU   CVTS01+54
CVTTRACE EQU   CVTS01+52
CVTAPG   EQU   CVTS01+51
CVTSDTRC EQU   CVTCTLFG
CVTGTRCE EQU   CVTCTLFG
CVTNOMP  EQU   CVTCTLFG
CVTRSV79 EQU   CVTCTLFG
CVTDSTAT EQU   CVTCTLFG
CVTRSV78 EQU   CVTCTLFG
CVTRV333 EQU   CVTCTLFG
CVTRV323 EQU   CVTCTLFG
CVTSPVLK EQU   CVTS01+49
CVTRSV77 EQU   CVTS01+48
CVTRV331 EQU   CVTS01+44
CVTRV330 EQU   CVTS01+40
CVTRV329 EQU   CVTS01+36
CVTRV328 EQU   CVTS01+32
CVTRV322 EQU   CVTS01+28
CVTSLID  EQU   CVTSLIDA+1
CVTSYLK  EQU   CVTSLIDA
CVTRV321 EQU   CVTS01+20
CVTRV320 EQU   CVTS01+16
CVTLPDIR EQU   CVTLPDIA+1
CVTRSV69 EQU   CVTDIRST
CVTRSV68 EQU   CVTDIRST
CVTRSV67 EQU   CVTDIRST
CVTRSV66 EQU   CVTDIRST
CVTRSV65 EQU   CVTDIRST
CVTRSV64 EQU   CVTDIRST
CVTRSV63 EQU   CVTDIRST
CVTDICOM EQU   CVTDIRST
CVTPVTP  EQU   CVTS01+8
CVTLPDSR EQU   CVTS01+4
CVTGETL  EQU   CVTS01
SMFBUFLP EQU   SMFPARMS+4
SMFBUF1P EQU   SMFPARMS
@NM00084 EQU   DEPARMS+304
DETCTIOL EQU   DEPARMS+300
DETCTIOP EQU   DEPARMS+296
DETDQLST EQU   DEPARMS+280
DEALASTP EQU   DEPARMS+276
DEASGNP  EQU   DEDMYAS+12
@NM00083 EQU   DEDMYAS
DEWLASTP EQU   DEPARMS+256
@NM00082 EQU   DEDMYEPA
DEDSNQRC EQU   DENQRETN+4
DEDSNQEN EQU   DENQRETN
DECPYLEN EQU   DEPARMS+228
DECPYLOC EQU   DEPARMS+224
DEJSCB   EQU   DEPARMS+220
DESCT    EQU   DEPARMS+216
DEJCT    EQU   DEPARMS+212
DESIOT   EQU   DEPARMS+208
DETCB    EQU   DEPARMS+204
DEALFMAP EQU   DEPARMS+200
DECORE   EQU   DEPARMS
@NM00081 EQU   PROCESSW+1
DYNMSSOK EQU   PROCESSW+1
HSKPDQSW EQU   PROCESSW+1
DISMSGSW EQU   PROCESSW+1
USERERSW EQU   PROCESSW+1
EPASCTSW EQU   PROCESSW+1
FRRPERSW EQU   PROCESSW
NQEXCLSW EQU   PROCESSW
UNALOCSW EQU   ERRPROSW
DEQDSNSW EQU   ERRPROSW
DYNMSSTM EQU   PROCESSW
@NM00080 EQU   INPUTSW+3
PCATINIT EQU   INPUTSW+3
UNITDEVT EQU   INPUTSW+3
MOUNTSW  EQU   INPUTSW+2
CATLOGSW EQU   INPUTSW+2
TIOTNQSW EQU   INPUTSW+2
OFFLINSW EQU   INPUTSW+2
WTUNTSW  EQU   INPUTSW+2
NORESSW  EQU   INPUTSW+2
WTDSNSW  EQU   INPUTSW+2
WTVOLSW  EQU   INPUTSW+2
@NM00079 EQU   INPUTSW
JOBRLSYS EQU   INPUTSW
NOMONTSW EQU   INPUTSW
TCBPTR   EQU   SYSCTBLK+8
INFOCODE EQU   ALCRSCDE+2
SURV104  EQU   SUBITS+13
SURV103  EQU   SUBYTE13
SURV102  EQU   SUBYTE13
SURV101  EQU   SUBYTE13
SU100BT  EQU   SUBYTE13
SU99BIT  EQU   SUBYTE13
SU98BIT  EQU   SUBYTE13
SU97BIT  EQU   SUBYTE13
SU96BIT  EQU   SUBYTE13
SU95BIT  EQU   SUBYTE12
SU94BIT  EQU   SUBYTE12
SU93BIT  EQU   SUBYTE12
SU92BIT  EQU   SUBYTE12
SU91BIT  EQU   SUBYTE12
SU90BIT  EQU   SUBYTE12
SU89BIT  EQU   SUBYTE12
SU88BIT  EQU   SUBYTE12
SU87BIT  EQU   SUBYTE11
SU86BIT  EQU   SUBYTE11
SU85BIT  EQU   SUBYTE11
SU84BIT  EQU   SUBYTE11
SU83BIT  EQU   SUBYTE11
SU82BIT  EQU   SUBYTE11
SU81BIT  EQU   SUBYTE11
SU80BIT  EQU   SUBYTE11
SU79BIT  EQU   SUBYTE10
SU78BIT  EQU   SUBYTE10
SU77BIT  EQU   SUBYTE10
SU76BIT  EQU   SUBYTE10
SU75BIT  EQU   SUBYTE10
SU74BIT  EQU   SUBYTE10
SU73BIT  EQU   SUBYTE10
SU72BIT  EQU   SUBYTE10
SU71BIT  EQU   SUBYTE9
SU70BIT  EQU   SUBYTE9
SU69BIT  EQU   SUBYTE9
SU68BIT  EQU   SUBYTE9
SU67BIT  EQU   SUBYTE9
SU66BIT  EQU   SUBYTE9
SU65BIT  EQU   SUBYTE9
SU64BIT  EQU   SUBYTE9
SU63BIT  EQU   SUBYTE8
SU62BIT  EQU   SUBYTE8
SU61BIT  EQU   SUBYTE8
SU60BIT  EQU   SUBYTE8
SU59BIT  EQU   SUBYTE8
SU58BIT  EQU   SUBYTE8
SU57BIT  EQU   SUBYTE8
SU56BIT  EQU   SUBYTE8
SU55BIT  EQU   SUBYTE7
SU54BIT  EQU   SUBYTE7
SU53BIT  EQU   SUBYTE7
SU52BIT  EQU   SUBYTE7
SU51BIT  EQU   SUBYTE7
SU50BIT  EQU   SUBYTE7
SU49BIT  EQU   SUBYTE7
SU48BIT  EQU   SUBYTE7
SU47BIT  EQU   SUBYTE6
SU46BIT  EQU   SUBYTE6
SU45BIT  EQU   SUBYTE6
SU44BIT  EQU   SUBYTE6
SU43BIT  EQU   SUBYTE6
SU42BIT  EQU   SUBYTE6
SU41BIT  EQU   SUBYTE6
SU40BIT  EQU   SUBYTE6
SU39BIT  EQU   SUBYTE5
SU38BIT  EQU   SUBYTE5
SU37BIT  EQU   SUBYTE5
SU36BIT  EQU   SUBYTE5
SU35BIT  EQU   SUBYTE5
SU34BIT  EQU   SUBYTE5
SU33BIT  EQU   SUBYTE5
SU32BIT  EQU   SUBYTE5
SU31BIT  EQU   SUBYTE4
SU30BIT  EQU   SUBYTE4
SU29BIT  EQU   SUBYTE4
SU28BIT  EQU   SUBYTE4
SU27BIT  EQU   SUBYTE4
SU26BIT  EQU   SUBYTE4
SU25BIT  EQU   SUBYTE4
SU24BIT  EQU   SUBYTE4
SU23BIT  EQU   SUBYTE3
SU22BIT  EQU   SUBYTE3
SU21BIT  EQU   SUBYTE3
SU20BIT  EQU   SUBYTE3
SU19BIT  EQU   SUBYTE3
SU18BIT  EQU   SUBYTE3
SU17BIT  EQU   SUBYTE3
SU16BIT  EQU   SUBYTE3
SU15BIT  EQU   SUBYTE2
SU14BIT  EQU   SUBYTE2
SU13BIT  EQU   SUBYTE2
SU12BIT  EQU   SUBYTE2
SU10BIT  EQU   SUBYTE2
SU9BIT   EQU   SUBYTE2
SU8BIT   EQU   SUBYTE2
SU7BIT   EQU   SUBYTE1
SU6BIT   EQU   SUBYTE1
SU5BIT   EQU   SUBYTE1
SU4BIT   EQU   SUBYTE1
SU3BIT   EQU   SUBYTE1
SU2BIT   EQU   SUBYTE1
SU1BIT   EQU   SUBYTE1
SU0BIT   EQU   SUBYTE1
DSABGRID EQU   DSABGIDL+4
DSABLLEN EQU   DSABGIDL
DSABRS04 EQU   DSAB+68
DSABRS03 EQU   DSAB+62
DSABDCBM EQU   DSAB+56
DSABSSCM EQU   DSAB+52
DSABSSNM EQU   DSAB+48
DSABPTTR EQU   DSAB+44
DSABTCBP EQU   DSAB+40
DSABRS02 EQU   DSAB+38
@NM00077 EQU   DSABFLG4
DSABCKSI EQU   DSABFLG4
DSABCKVL EQU   DSABFLG4
DSABCKDS EQU   DSABFLG4
@NM00076 EQU   DSABFLG3
DSABJSCT EQU   DSABFLG3
DSABCATL EQU   DSABFLG3
DSABVMSC EQU   DSABFLG3
DSABVAM  EQU   DSABFLG3
DSABPASS EQU   DSABFLG3
DSABDEFR EQU   DSABFLG3
@NM00075 EQU   DSABFLG2
DSABUNAL EQU   DSABFLG2
DSABIRM  EQU   DSABFLG2
DSABOPEN EQU   DSABFLG2
DSABDCAT EQU   DSABFLG1
DSABDCNV EQU   DSABFLG1
DSABDALC EQU   DSABFLG1
@NM00074 EQU   DSABORG2
DSABTR   EQU   DSABORG2
DSABAM   EQU   DSABORG2
@NM00073 EQU   DSABORG2
DSABTQ   EQU   DSABORG2
DSABTX   EQU   DSABORG2
DSABGS   EQU   DSABORG2
DSABU    EQU   DSABORG1
DSABPO   EQU   DSABORG1
DSABMQ   EQU   DSABORG1
DSABCQ   EQU   DSABORG1
DSABCX   EQU   DSABORG1
DSABDA   EQU   DSABORG1
DSABPS   EQU   DSABORG1
DSABIS   EQU   DSABORG1
DSABSSVA EQU   DSAB+21
DSABRS01 EQU   DSAB+20
DSABLNTH EQU   DSAB+12
DSABID   EQU   DSAB
QDBRV002 EQU   QDB+28
QDBPRDS  EQU   QDB+26
QDBPRSZ  EQU   QDB+24
QDBBPTDS EQU   QDB+22
QDBFPTDS EQU   QDB+20
QDBLELMP EQU   QDB+16
QDBFELMP EQU   QDB+12
QDBNELMS EQU   QDB+8
QDBRV001 EQU   QDB+6
QDBATTR  EQU   QDB+4
QDBQDB   EQU   QDB
PROTTUP  EQU   KEYTABLE+384
SSPRMTUP EQU   KEYTABLE+380
PERMATUP EQU   KEYTABLE+324
CLOSETUP EQU   KEYTABLE+108
TXTUPEND EQU   TXTUNITP
JSCBCSCB EQU   JSCBSEC1+68
JSCBPMG  EQU   JSCBWTP+2
JSCBWTSP EQU   JSCBWTP+1
JSCRSV23 EQU   JSCBWTFG
JSCRSV22 EQU   JSCBWTFG
JSCRSV21 EQU   JSCBWTFG
JSCRSV20 EQU   JSCBWTFG
JSCRSV19 EQU   JSCBWTFG
JSCRSV18 EQU   JSCBWTFG
JSCBRET  EQU   JSCBWTFG
JSCBIOFG EQU   JSCBWTFG
@NM00069 EQU   JSCBSEC1+60
JSCBQMPI EQU   JSCBSEC1+56
JSCBPMSG EQU   JSCBSWT1
JSCRSV16 EQU   JSCBSWT1
JSCRSV15 EQU   JSCBSWT1
JSCRSV14 EQU   JSCBSWT1
JSCRSV13 EQU   JSCBSWT1
JSCRSV12 EQU   JSCBSWT1
JSCRSV11 EQU   JSCBSWT1
JSCBPASS EQU   JSCBSWT1
JSCBTTTR EQU   JSCBSEC1+52
JSCRSV10 EQU   JSCBSEC1+49
JSCBAUTH EQU   JSCBOPTS
JSCSIOTS EQU   JSCBOPTS
JSCRSV08 EQU   JSCBOPTS
JSCRSV07 EQU   JSCBOPTS
JSCRSV06 EQU   JSCBOPTS
JSCBLONG EQU   JSCBOPTS
JSCRSV05 EQU   JSCBOPTS
JSCRSV04 EQU   JSCBOPTS
JSCBSECB EQU   JSCBSEC1+44
JSCRSV03 EQU   JSCBSEC1+41
JSCBSTEP EQU   JSCBSEC1+40
JSCBDCBA EQU   JSCBDCB+1
JSCRSV02 EQU   JSCBDCB
JSCBID   EQU   JSCBSEC1+32
JSCBDBTB EQU   JSCBSEC1+28
JSCBIJSC EQU   JSCBSEC1+24
JSCBTCBP EQU   JSCBSEC1+20
JSCBPCC  EQU   JSCBSEC1+16
JSCBTCP  EQU   JSCBSEC1+12
JSCBSHR  EQU   JSCBSEC1+8
JSCHPCEA EQU   JSCHPCE+1
JSCRSV32 EQU   JSCHPCE
JSCRSV01 EQU   JSCBSEC1
@NM00068 EQU   IEZJSCB
@NM00067 EQU   JFCBX+144
JFCBXDEV EQU   JFCBX+140
@NM00066 EQU   JFCBX+94
@NM00065 EQU   JFCBX+3
JFCBXTTR EQU   JFCBX
JFCRSV05 EQU   JFCEROPT
JFCRSV04 EQU   JFCEROPT
JFCRSV03 EQU   JFCEROPT
JFCRSV02 EQU   JFCEROPT
JFCTOPT  EQU   JFCEROPT
JFCABN   EQU   JFCEROPT
JFCSKP   EQU   JFCEROPT
JFCACC   EQU   JFCEROPT
JFCBUFL  EQU   JFCAMPTR+2
JFCFWORD EQU   JFCBFTEK
JFCDWORD EQU   JFCBFTEK
JFCHIER1 EQU   JFCBFTEK
JFCDYN   EQU   JFCBFTEK
JFCEXC   EQU   JFCBFTEK
JFCBBFTR EQU   JFCBBFTA
JFCSIM   EQU   JFCBBFTA
JFCHIER  EQU   JFCBFTEK
JFCBFOUT EQU   JFCBUFNO
JFCBUFIN EQU   JFCBUFNO
JFCTEMP  EQU   JFCBIND2
JFCREQ   EQU   JFCBIND2
JFCENT   EQU   JFCBIND2
JFCSHARE EQU   JFCBIND2
JFCSECUR EQU   JFCBIND2
JFCPDS   EQU   JFCBIND1
JFCGDG   EQU   JFCBIND1
JFCADDED EQU   JFCBIND1
JFCLOC   EQU   JFCBIND1
JFCRLSE  EQU   JFCBIND1
JFCBXPDT EQU   INFMJFCB+83
JFCBCRDT EQU   INFMJFCB+80
JFCBOPS2 EQU   JFCBMASK+7
JFCRCTLG EQU   JFCBFLG2
JFCBBUFF EQU   JFCBFLG2
JFCTRACE EQU   JFCBFLG2
JFCSDRPS EQU   JFCBFLG2
JFCNRPS  EQU   JFCDEFER
JFCOUTOP EQU   JFCBFLG2
JFCINOP  EQU   JFCBFLG2
JFCBPWBP EQU   JFCOPEN
@NM00061 EQU   JFCOPEN
JFCDUAL  EQU   JFCBFLG1
JFCSLDES EQU   JFCBFLG1
JFCSLCRE EQU   JFCBFLG1
JFCSTAND EQU   JFCBFLG1
JFCBOPS1 EQU   JFCBMASK
JFCBVLSQ EQU   INFMJFCB+70
JFCRSV31 EQU   JFCFUNC
JFCFNCBT EQU   JFCFUNC
JFCFNCBX EQU   JFCFUNC
JFCFNCBD EQU   JFCFUNC
JFCFNCBW EQU   JFCFUNC
JFCFNCBP EQU   JFCFUNC
JFCFNCBR EQU   JFCFUNC
JFCFNCBI EQU   JFCFUNC
JFCBFOFL EQU   JFCBUFOF
JFCNL    EQU   JFCBLTYP
JFCSL    EQU   JFCBLTYP
JFCNSL   EQU   JFCBLTYP
JFCSUL   EQU   JFCBLTYP
JFCBLP   EQU   JFCBLTYP
JFCBLTM  EQU   JFCBLTYP
JFCBAL   EQU   JFCBLTYP
JFCRSV38 EQU   JFCBLTYP
JFCVINDX EQU   INFMJFCB+64
JFCNLREC EQU   INFMJFCB+62
JFCBADBF EQU   INFMJFCB+60
JFCAMSTR EQU   JFCBFRID+2
JFCAMCRO EQU   JFCBFRID
JFCBDSCB EQU   INFMJFCB+53
JFCPAT   EQU   JFCBTSDM
JFCNDCB  EQU   JFCBTSDM
JFCNDSCB EQU   JFCBTSDM
JFCNWRIT EQU   JFCBTSDM
JFCTTR   EQU   JFCBTSDM
JFCSDS   EQU   JFCBTSDM
JFCVSL   EQU   JFCBTSDM
JFCCAT   EQU   JFCBTSDM
JFCIPLTX EQU   JFCBELNM
JFCBQNAM EQU   JFCBDSNM
TIOTFEND EQU   POOLSTAR+16
TIOPSLOT EQU   POOLSTAR+13
TIOPSTTB EQU   POOLSTAR+12
TIOPPOOL EQU   POOLSTAR+4
TIOPNSRT EQU   POOLSTAR+3
@NM00060 EQU   POOLSTAR+2
TIOPNSLT EQU   POOLSTAR+1
@NM00059 EQU   POOLSTAR
TIOEFSRT EQU   TIOENTRY+17
TIOSVERF EQU   TIOESTTB
TIOSUNLD EQU   TIOESTTB
TIOSMNTD EQU   TIOESTTB
TIOSSETU EQU   TIOESTTB
TIOSVLSR EQU   TIOESTTB
TIOSPVIO EQU   TIOESTTB
TIOSREQD EQU   TIOESTTB
TIOSUSED EQU   TIOESTTB
TIOSBALS EQU   TIOESTTC
TIOSBALP EQU   TIOESTTC
TIOSVOLS EQU   TIOESTTC
TIOSVOLP EQU   TIOESTTC
TIOSAFFS EQU   TIOESTTC
TIOSAFFP EQU   TIOESTTC
TIOSDEFR EQU   TIOESTTC
TIOSDKCR EQU   TIOESTTC
TIOEJFCB EQU   TIOENTRY+12
TIOTREM  EQU   TIOELINK
TIOESSDS EQU   TIOESYOT
TIOESYIN EQU   TIOELINK
TIOEQNAM EQU   TIOELINK
TIOEDYNM EQU   TIOELINK
TIOTTERM EQU   TIOELINK
TIOTRV01 EQU   TIOELINK
TIOSYOUT EQU   TIOELINK
TIOEWTCT EQU   TIOERLOC
TIOSDSP2 EQU   TIOESTTA
TIOSDSP1 EQU   TIOESTTA
TIOSLABL EQU   TIOESTTA
TIOSDADS EQU   TIOESTTA
TIOSJBLB EQU   TIOESTTA
TIOSPLTS EQU   TIOESTTA
TIOSPLTP EQU   TIOESTTA
TIOSLTYP EQU   TIOESTTA
TIOELNGH EQU   TIOENTRY
TIOCSTEP EQU   TIOT1+8
TIOCNJOB EQU   TIOT1
ASCBEND  EQU   ASCB+208
ASCBSRBT EQU   ASCB+200
ASCBSWTL EQU   ASCB+196
ASCBRS14 EQU   ASCB+195
ASCBSMCT EQU   ASCB+194
ASCBRS12 EQU   ASCB+192
ASCBPCTT EQU   ASCB+188
ASCBVGTT EQU   ASCB+184
ASCBLGCB EQU   ASCB+180
ASCBJBNS EQU   ASCB+176
ASCBJBNI EQU   ASCB+172
ASCBMCC  EQU   ASCB+168
ASCBRTWA EQU   ASCB+164
ASCBIQEA EQU   ASCB+160
ASCBXMPQ EQU   ASCB+156
ASCBRS01 EQU   ASCB+154
ASCBFMCT EQU   ASCB+152
ASCBOUXB EQU   ASCB+148
ASCBOUCB EQU   ASCB+144
ASCBMECB EQU   ASCB+140
ASCBQECB EQU   ASCB+136
ASCBCMSB EQU   ASCB+132
ASCBCMSF EQU   ASCB+128
ASCBTCBS EQU   ASCB+124
ASCBNVSC EQU   ASCB+122
ASCBVSC  EQU   ASCB+120
ASCBSRBS EQU   ASCB+118
ASCBSSRB EQU   ASCB+116
ASCBRV06 EQU   ASCBFLG2
ASCBRV05 EQU   ASCBFLG2
ASCBRV04 EQU   ASCBFLG2
ASCBSNQS EQU   ASCBFLG2
ASCBS2S  EQU   ASCBFLG2
ASCBCEXT EQU   ASCBFLG2
ASCBPXMT EQU   ASCBFLG2
ASCBXMPT EQU   ASCBFLG2
ASCBRF07 EQU   ASCBDSP1
ASCBRF06 EQU   ASCBDSP1
ASCBRF05 EQU   ASCBDSP1
ASCBRF04 EQU   ASCBDSP1
ASCBRF03 EQU   ASCBDSP1
ASCBRF02 EQU   ASCBDSP1
ASCBFAIL EQU   ASCBDSP1
ASCBNOQ  EQU   ASCBDSP1
ASCBSWCT EQU   ASCB+112
ASCBASXB EQU   ASCB+108
ASCBTMCH EQU   ASCB+104
ASCBNSWP EQU   ASCBFLG1
ASCBTYP1 EQU   ASCBFLG1
ASCBSTND EQU   ASCBFLG1
ASCBABNT EQU   ASCBFLG1
ASCBTERM EQU   ASCBFLG1
ASCBS3S  EQU   ASCBFLG1
ASCBCMSH EQU   ASCBFLG1
ASCBTOFF EQU   ASCBFLG1
ASCBRF01 EQU   ASCBRCTF
ASCBTMLW EQU   ASCBRCTF
ASCBOUT  EQU   ASCBRCTF
ASCBWAIT EQU   ASCBRCTF
ASCBRV08 EQU   ASCBRCTF
ASCBFQU  EQU   ASCBRCTF
ASCBFRS  EQU   ASCBRCTF
ASCBTMNO EQU   ASCBRCTF
ASCBAFFN EQU   ASCBFW1
ASCBDUMP EQU   ASCB+96
ASCBQSVC EQU   ASCB+92
ASCBUBET EQU   ASCB+88
ASCBECB  EQU   ASCB+84
ASCBJSTL EQU   ASCB+80
ASCBEWST EQU   ASCB+72
ASCBEJST EQU   ASCB+64
ASCBCSCB EQU   ASCB+56
ASCBRSM  EQU   ASCB+52
ASCBLDA  EQU   ASCB+48
ASCBSTOR EQU   ASCB+44
ASCBDP   EQU   ASCB+43
ASCBRV07 EQU   ASCB+42
ASCBIOSM EQU   ASCB+40
ASCBSEQN EQU   ASCB+38
ASCBASID EQU   ASCB+36
ASCBCPUS EQU   ASCB+32
ASCBSPL  EQU   ASCB+28
ASCBLSLQ EQU   ASCB+24
ASCBFSLQ EQU   ASCB+20
ASCBIOSP EQU   ASCB+16
ASCBLOCK EQU   ASCB+12
ASCBBWDP EQU   ASCB+8
ASCBFWDP EQU   ASCB+4
ASCBASCB EQU   ASCB
ASCBEGIN EQU   ASCB
@NM00058 EQU   @NM00056+1
SCTONLY  EQU   SCTABCND
SCTEVEN  EQU   SCTABCND
SCTABEND EQU   SCTABCND
SCTONLYC EQU   SCTABCND
SCTABCAN EQU   SCTABCND
@NM00057 EQU   SCTABCND
@NM00055 EQU   INSMSCT+173
@NM00054 EQU   SCTSTEND
SCTSYSCK EQU   SCTSTEND
SCTSTPND EQU   SCTSTEND
SCTSTSRT EQU   SCTSTEND
@NM00053 EQU   INSMSCT+168
SCTCATCT EQU   INSMSCT+166
SCTSDPSA EQU   SCTCDENT+3
SCTSDPOP EQU   SCTCDENT+2
SCTSDPCD EQU   SCTCDENT
@NM00052 EQU   INSMSCT+117
SCTPRFMF EQU   INSMSCT+116
SCTPGMNM EQU   INSMSCT+108
SCTTIOT  EQU   INSMSCT+105
@NM00051 EQU   SCTBCT
SCTJBEND EQU   SCTBCT
SCTSPSYS EQU   SCTBCT
SCTSTPLB EQU   SCTBCT
@NM00050 EQU   SCTBCT
SCTMCVOL EQU   SCTBCT
@NM00049 EQU   SCTBCT
SCTGOTTR EQU   INSMSCT+100
SCTSMF   EQU   INSMSCT+96
@NM00048 EQU   SCTSDPTY+1
SCTSDP   EQU   SCTSDPTY
SCTFSTEP EQU   SCTSDPTY
@NM00047 EQU   SCTSDPTY
@NM00046 EQU   SCTSDPTY
@NM00045 EQU   INSMSCT+90
SCTMSSZE EQU   INSMSCT+88
SCTPCAT  EQU   INSMSCT+84
SCTLDSTB EQU   INSMSCT+80
SCTSRBT  EQU   INSMSCT+76
SCTMSADR EQU   INSMSCT+72
@NM00044 EQU   INSMSCT+71
SCTXBTTR EQU   INSMSCT+68
SCTJSCAT EQU   SCTSTYPE
SCTINITB EQU   SCTSTYPE
SCTSJFHK EQU   SCTSTYPE
SCTOUTMC EQU   SCTSTYPE
SCTINPUT EQU   SCTSTYPE
SCTGOSTP EQU   SCTSTYPE
@NM00043 EQU   INSMSCT+66
SCTNSMSG EQU   INSMSCT+65
SCTSNUMB EQU   INSMSCT+64
@NM00042 EQU   INSMSCT+62
SCTRPACT EQU   INSMSCT+60
SCTSNAME EQU   INSMSCT+52
SCTSCLPC EQU   INSMSCT+44
@NM00041 EQU   INSMSCT+43
SCTADSTB EQU   INSMSCT+40
@NM00040 EQU   INSMSCT+36
@NM00039 EQU   INSMSCT+35
SCTAFACT EQU   INSMSCT+32
SCTDDNT  EQU   INSMSCT+28
@NM00038 EQU   INSMSCT+27
@NM00037 EQU   INSMSCT+23
SCTANSCT EQU   INSMSCT+20
@NM00036 EQU   INSMSCT+19
SCTAALOC EQU   INSMSCT+16
@NM00035 EQU   INSMSCT+15
SCTFSIOT EQU   INSMSCT+12
SCTLALOC EQU   INSMSCT+10
SCTSEXEC EQU   INSMSCT+8
SCTSTIME EQU   INSMSCT+5
INCMSSTS EQU   SCTSSTAT
SCTGRPH  EQU   SCTSSTAT
SCTKEY0  EQU   SCTSSTAT
SCTDORST EQU   SCTSSTAT
SCTNOCKP EQU   SCTSSTAT
SCTNORST EQU   SCTSSTAT
EACAUSER EQU   SCTSSTAT
EAADDRBT EQU   SCTSSTAT
SCTTBLID EQU   INSMSCT+3
SCTDISKA EQU   INSMSCT
SIODDSNL EQU   INDMSIOT+173
SIOVDSNL EQU   INDMSIOT+172
SIOVDSNT EQU   INDMSIOT+170
SVOLUNNO EQU   INDMSIOT+168
SIOTVMVP EQU   INDMSIOT+164
SIOTNPTR EQU   INDMSIOT+152
SIOTETIO EQU   INDMSIOT+148
SIOTATE  EQU   INDMSIOT+144
SVOLUNAD EQU   INDMSIOT+140
SIOTEDLP EQU   INDMSIOT+136
SIOTEDLS EQU   INDMSIOT+132
SIOTRSNC EQU   INDMSIOT+130
SCTANAME EQU   INDMSIOT+122
SIOTSSIC EQU   INDMSIOT+120
@NM00034 EQU   INDMSIOT+108
SIOTSSNM EQU   INDMSIOT+104
@NM00033 EQU   SIOTBYT2
SIOTCVOL EQU   SIOTBYT2
SIOTCNEW EQU   SIOTBYT2
SIOTCALC EQU   SIOTBYT2
SIOTDSPD EQU   SIOTBYT2
SIOTDMND EQU   SIOTBYT2
SIOTOPUC EQU   INDMSIOT+99
SIOTOUTR EQU   INDMSIOT+97
SIOTOUTC EQU   INDMSIOT+96
SIOTSSWA EQU   INDMSIOT+93
SIOTAUNC EQU   SIOTALTD
SIOTACAT EQU   SIOTALTD
SIOTADEL EQU   SIOTALTD
SIOTAKEP EQU   SIOTALTD
SIOTNPRV EQU   SIOTALTD
SIOJCATS EQU   SIOTALTD
@NM00032 EQU   SIOTALTD
@NM00031 EQU   SIOTALTD
@NM00030 EQU   INDMSIOT+91
SIOTNDSB EQU   INDMSIOT+88
@NM00029 EQU   INDMSIOT+84
SIOTDPCD EQU   INDMSIOT+82
@NM00028 EQU   SIOTBYT4
SIOTRACT EQU   SIOTBYT4
SIOTRACD EQU   SIOTBYT4
SIOTPROT EQU   SIOTBYT4
SCTOUTPN EQU   INDMSIOT+80
SCTOUTNO EQU   INDMSIOT+76
SCTOUTNM EQU   INDMSIOT+68
SIOUCBAD EQU   SCTUTYPE+5
SIOUCNVT EQU   SCTUTYPE+4
SIOUBYT4 EQU   SIOTDEVT+3
@NM00027 EQU   SIOUBYT3
SIO3UREC EQU   SIOUBYT3
SIO3DISP EQU   SIOUBYT3
SIO3DACC EQU   SIOUBYT3
SIO3COMM EQU   SIOUBYT3
SIO3TAPE EQU   SIOUBYT3
SIOUBYT2 EQU   SIOTDEVT+1
SIOUBYT1 EQU   SIOTDEVT
SIOTOMN  EQU   SCTSBYT4
SIOTIPDI EQU   SCTSBYT4
SIOTVAFF EQU   SCTSBYT4
SIOTSTEP EQU   SCTSBYT4
SIOTASCI EQU   SCTSBYT4
@NM00026 EQU   SCTSBYT4
SCTSOLD  EQU   SCTSBYT3
SCTSMOD  EQU   SCTSBYT3
SCTSNEW  EQU   SCTSBYT3
SCTSYSOU EQU   SCTSBYT3
SCTVREF  EQU   SCTSBYT3
SCTALCHK EQU   SCTSBYT3
SCTSYSNE EQU   SCTSBYT3
SCTDSNRF EQU   SCTSBYT3
SCTRECVD EQU   SCTSBYT2
SCTDEFER EQU   SCTSBYT2
SCTLABEL EQU   SCTSBYT2
SCTUNLBD EQU   SCTSBYT2
SCTJOBLB EQU   SCTSBYT2
SCTVOLAF EQU   SCTSBYT2
SIOTCATL EQU   SCTSBYT2
SIOCLUNL EQU   SCTSBYT2
SIOTJSCT EQU   SCTSBYT1
SCTUNAFF EQU   SCTSBYT1
SCTPARLM EQU   SCTSBYT1
SIOTQDSN EQU   SCTSBYT1
SIOTGDSN EQU   SCTSBYT1
SIOTCCAT EQU   SCTSBYT1
SCTSYSIN EQU   SCTSBYT1
SIOTUNCT EQU   SCTSDISP
SIOTCTLG EQU   SCTSDISP
SIOTKEEP EQU   SCTSDISP
SIOTPASS EQU   SCTSDISP
SIOTPRIV EQU   SCTSDISP
S3400DSP EQU   SCTSDISP
SIOTRETN EQU   SCTSDISP
SIOTVLCT EQU   INDMSIOT+54
SCTNMBUT EQU   INDMSIOT+53
SIOTRTRY EQU   SIOTBYT0
SIOTPUPV EQU   SIOTBYT0
SIOTNOPV EQU   SIOTBYT0
SIOTGIGN EQU   SIOTBYT0
SPVTAMSG EQU   SIOTBYT0
SIOTFUDA EQU   SIOTBYT0
SIOTDYAL EQU   SIOTBYT0
SIOTSSDS EQU   SIOTBYT0
SIOTGIID EQU   INDMSIOT+50
SCTVOLCT EQU   INDMSIOT+49
SCTSPOOL EQU   INDMSIOT+48
SIOTDSNM EQU   SIOTTSTC
SIOTTRKM EQU   SIOTTSTC
SIOTSSMG EQU   SIOTTSTC
@NM00025 EQU   SIOTTSTC
SIOTINFC EQU   SIOTTSTC
@NM00024 EQU   SIOTBYT3
SIOTDSID EQU   SIOTBYT3
S3400OFF EQU   SIOTBYT3
SIOTJES3 EQU   SIOTBYT3
SIOCDEVT EQU   SIOTBYT3
SCTDDINO EQU   INDMSIOT+44
SIOTDDNT EQU   SIOTBYT1
SIOTALCD EQU   SIOTBYT1
SIODADSM EQU   SIOTBYT1
SIOTDADR EQU   SIOTBYT1
SIODUNAL EQU   SIOTBYT1
SIOVAMDS EQU   SIOTBYT1
SIOTHOLD EQU   SIOTBYT1
SIOTOCKP EQU   SIOTBYT1
SIOPSCNT EQU   INDMSIOT+42
SIOTREFN EQU   INDMSIOT+40
SIOTOTUN EQU   INDMSIOT+39
SIOTVRSB EQU   INDMSIOT+36
@NM00023 EQU   INDMSIOT+35
SCTPJFCB EQU   INDMSIOT+32
@NM00022 EQU   INDMSIOT+31
SCTPSIOT EQU   INDMSIOT+28
SIOTAFID EQU   INDMSIOT+26
SIOTVLSP EQU   INDMSIOT+24
SIODSNTE EQU   INDMSIOT+22
SIOTUNAF EQU   SCTUSADD
SIOTDEST EQU   INDMSIOT+12
ACTACCNT EQU   IEFAACTB+32
ACTJNFLD EQU   IEFAACTB+31
ACTJTIME EQU   IEFAACTB+28
ACTPRGNM EQU   IEFAACTB+8
@NM00021 EQU   IEFAACTB+7
ACTNEXT  EQU   IEFAACTB+4
ACTIDENT EQU   IEFAACTB+3
ACTDSKAD EQU   IEFAACTB
@NM00020 EQU   INJMJCT+175
JCTVULDP EQU   INJMJCT+172
JCTACODE EQU   INJMJCT+168
JCTPRFMF EQU   INJMJCT+167
JCTUSER  EQU   INJMJCT+160
JCTSSD   EQU   INJMJCT+157
@NM00019 EQU   INJMJCT+156
JCTSRBT  EQU   INJMJCT+152
JCTJMRJD EQU   INJMJCT+149
JCTJMRJT EQU   INJMJCT+146
JCTJMRSS EQU   INJMJCT+143
JCTJMRTL EQU   INJMJCT+140
JCTJMRCL EQU   INJMJCT+139
JCTJMROP EQU   INJMJCT+138
JCTJMRD  EQU   INJMJCT+137
JCTJMR   EQU   INJMJCT+134
JCTCKIDT EQU   INJMJCT+118
JCTCKIDL EQU   INJMJCT+117
@NM00018 EQU   JCTSTAT2
JCTBLP   EQU   JCTSTAT2
JCTPERFM EQU   JCTSTAT2
JCTSWSM  EQU   JCTSTAT2
JCTENDIT EQU   JCTSTAT2
JCTADSPC EQU   JCTSTAT2
JCTSPSYS EQU   JCTSTAT2
@NM00017 EQU   INJMJCT+115
JCTSSTR  EQU   INJMJCT+112
JCTJSBTM EQU   JCTJSB
JCTJSBEX EQU   JCTJSB
JCTJSBAL EQU   JCTJSB
JCTJSBIN EQU   JCTJSB
@NM00016 EQU   JCTJSB
JCTVOLSQ EQU   INJMJCT+110
JCTNRCKP EQU   INJMJCT+108
JCTNTRK  EQU   INJMJCT+107
JCTCKTTR EQU   INJMJCT+104
JCTDEVT  EQU   INJMJCT+100
@NM00015 EQU   INJMJCT+99
JCTSTIOT EQU   INJMJCT+96
JCTSNUMB EQU   INJMJCT+95
JCTQIDNT EQU   INJMJCT+94
JCTEQREG EQU   INJMJCT+92
@NM00014 EQU   INJMJCT+91
JCTDETDA EQU   INJMJCT+88
JCTDSDRA EQU   JCTRSW2
JCTDSOJB EQU   JCTRSW2
JCTDSOCR EQU   JCTRSW2
JCTRESTT EQU   JCTRSW2
JCTNOCKP EQU   JCTRSW2
JCTNORST EQU   JCTRSW2
JCTSYSCK EQU   JCTRSW2
@NM00013 EQU   JCTRSW1
JCTSTEPR EQU   JCTRSW1
JCTCKPTR EQU   JCTRSW1
JCTCONTR EQU   JCTRSW1
JCTSTERM EQU   JCTRSW1
JCTWARMS EQU   JCTRSW1
@NM00012 EQU   JCTCCODE+3
JCTJDPOP EQU   JCTCCODE+2
JCTJDPCD EQU   JCTCCODE
@NM00011 EQU   INJMJCT+53
JCTSCT   EQU   INJMJCT+52
JCTSMRBA EQU   INJMJCT+44
@NM00010 EQU   INJMJCT+43
JCTACTAD EQU   INJMJCT+40
@NM00009 EQU   INJMJCT+39
JCTJCTX  EQU   INJMJCT+36
@NM00008 EQU   INJMJCT+35
JCTSDKAD EQU   INJMJCT+32
JCTJCSMF EQU   INJMJCT+31
JCTGDGNT EQU   INJMJCT+28
@NM00007 EQU   INJMJCT+27
JCTPDIP  EQU   INJMJCT+24
JCTJTPTN EQU   INJMJCT+16
JCTJNAME EQU   INJMJCT+8
JCTJPRTY EQU   JCTJBYTE
INCMMGL1 EQU   JCTJMGLV
INCMMGL2 EQU   JCTJMGLV
@NM00006 EQU   JCTJMGLV
INCMALL  EQU   JCTJMGLV
JCTJMGPO EQU   INJMJCT+6
INCMNSET EQU   JCTJSTAT
INCMCAT  EQU   INDMCTLG
INCMSTS  EQU   JCTJSTAT
JCTABEND EQU   JCTJSTAT
@NM00005 EQU   JCTJSTAT
JCTJSTPC EQU   JCTJSTAT
@NM00004 EQU   JCTJSTAT
JCTJBLBS EQU   JCTJSTAT
JCTJSRNO EQU   INJMJCT+4
CVTLEVL  EQU   CVTRELNO+2
CVTNUMB  EQU   CVTRELNO
CVTMDL   EQU   CVTFIX+250
@NM00003 EQU   CVTFIX+248
@NM00002 EQU   CVTFIX
CVTRV482 EQU   CVTXTNT2+128
CVTRV481 EQU   CVTXTNT2+124
CVTRV480 EQU   CVTXTNT2+120
CVTRV479 EQU   CVTXTNT2+118
CVTRV478 EQU   CVTXTNT2+117
CVTRV477 EQU   CVTXTNT2+116
CVTRV476 EQU   CVTXTNT2+115
CVTRV475 EQU   CVTXTNT2+114
CVTRV474 EQU   CVTRV466
CVTRV473 EQU   CVTRV466
CVTRV472 EQU   CVTRV466
CVTRV471 EQU   CVTRV466
CVTRV470 EQU   CVTRV466
CVTRV469 EQU   CVTRV466
CVTRV468 EQU   CVTRV466
CVTRV467 EQU   CVTRV466
CVTRV465 EQU   CVTRV457
CVTRV464 EQU   CVTRV457
CVTRV463 EQU   CVTRV457
CVTRV462 EQU   CVTRV457
CVTRV461 EQU   CVTRV457
CVTRV460 EQU   CVTRV457
CVTRV459 EQU   CVTRV457
CVTRV458 EQU   CVTRV457
CVTRV456 EQU   CVTXTNT2+108
CVTRV455 EQU   CVTXTNT2+104
CVTRV454 EQU   CVTXTNT2+100
CVTRV453 EQU   CVTXTNT2+96
CVTRV452 EQU   CVTXTNT2+94
CVTRV451 EQU   CVTXTNT2+92
CVTRV450 EQU   CVTXTNT2+90
CVTRV449 EQU   CVTXTNT2+88
CVTRV448 EQU   CVTXTNT2+87
CVTRV447 EQU   CVTXTNT2+86
CVTRV446 EQU   CVTRV438
CVTRV445 EQU   CVTRV438
CVTRV444 EQU   CVTRV438
CVTRV443 EQU   CVTRV438
CVTRV442 EQU   CVTRV438
CVTRV441 EQU   CVTRV438
CVTRV440 EQU   CVTRV438
CVTRV439 EQU   CVTRV438
CVTRV437 EQU   CVTRV429
CVTRV436 EQU   CVTRV429
CVTRV435 EQU   CVTRV429
CVTRV434 EQU   CVTRV429
CVTRV433 EQU   CVTRV429
CVTRV432 EQU   CVTRV429
CVTRV431 EQU   CVTRV429
CVTRV430 EQU   CVTRV429
CVTRV428 EQU   CVTXTNT2+80
CVTRV427 EQU   CVTXTNT2+76
CVTRV426 EQU   CVTXTNT2+72
CVTRV425 EQU   CVTXTNT2+68
CVTATACT EQU   CVTATCVT
CVTRV423 EQU   CVTXTNT2+62
CVTRV422 EQU   CVTXTNT2+60
CVTRV421 EQU   CVTXTNT2+58
CVTRV420 EQU   CVTXTNT2+56
CVTRV419 EQU   CVTXTNT2+55
CVTRV418 EQU   CVTXTNT2+54
CVTRV417 EQU   CVTRV409
CVTRV416 EQU   CVTRV409
CVTRV415 EQU   CVTRV409
CVTRV414 EQU   CVTRV409
CVTRV413 EQU   CVTRV409
CVTRV412 EQU   CVTRV409
CVTRV411 EQU   CVTRV409
CVTRV410 EQU   CVTRV409
CVTRV408 EQU   CVTRV400
CVTRV407 EQU   CVTRV400
CVTRV406 EQU   CVTRV400
CVTRV405 EQU   CVTRV400
CVTRV404 EQU   CVTRV400
CVTRV403 EQU   CVTRV400
CVTRV402 EQU   CVTRV400
CVTRV401 EQU   CVTRV400
CVTICB   EQU   CVTXTNT2+48
CVTSKTA  EQU   CVTXTNT2+44
CVTCCVT  EQU   CVTXTNT2+40
CVTRSV98 EQU   CVTXTNT2+36
CVTRSV97 EQU   CVTXTNT2+34
CVTRSV96 EQU   CVTXTNT2+32
CVTOLTEP EQU   CVTXTNT2+28
CVTQIDA  EQU   CVTQID+1
CVTRSV95 EQU   CVTQID
CVTRSV94 EQU   CVTXTNT2+20
CVTRSV93 EQU   CVTXTNT2+16
CVTRSV92 EQU   CVTXTNT2+12
CVTDEBVR EQU   CVTXTNT2+8
CVTRSV91 EQU   CVTXTNT2+6
CVTRSV9H EQU   CVTFLGBT
CVTRSV9G EQU   CVTFLGBT
CVTRSV9F EQU   CVTFLGBT
CVTRSV9E EQU   CVTFLGBT
CVTRSV9D EQU   CVTFLGBT
CVTRSV9C EQU   CVTFLGBT
CVTVME   EQU   CVTFLGBT
CVTNPE   EQU   CVTFLGBT
CVTNUCLS EQU   CVTXTNT2+4
CVTDSSVA EQU   CVTDSSV+1
CVTRSV89 EQU   CVTDSSV
CVTRSV88 EQU   CVTXTNT1+8
CVTRSV87 EQU   CVTXTNT1+4
CVTFACHN EQU   CVTXTNT1
CVTRV488 EQU   CVTMAP+412
CVTRV487 EQU   CVTMAP+408
CVTRV486 EQU   CVTMAP+404
CVTRV485 EQU   CVTMAP+400
CVTACTAP EQU   CVTMAP+396
CVTAUTH  EQU   CVTMAP+392
CVTATMCA EQU   CVTATMCT+1
CVTATMST EQU   CVTATMCT
CVTRSV61 EQU   CVTMAP+384
CVTVOLT1 EQU   CVTVOLM1+1
CVTVOLI1 EQU   CVTVOLF1
CVTSTOA  EQU   CVTMAP+376
CVTRSV58 EQU   CVTMAP+374
CVTRSV57 EQU   CVTMAP+372
CVTDDCE  EQU   CVTMAP+368
CVTPNWFR EQU   CVTMAP+364
CVTSMF   EQU   CVTMAP+360
CVTSULK  EQU   CVTMAP+358
CVTSLKO  EQU   CVTSYSK
CVTSLKP  EQU   CVTSYSK
CVTSLKQ  EQU   CVTSYSK
CVTSLKR  EQU   CVTSYSK
CVTRSV56 EQU   CVTSYSK
CVTRSV55 EQU   CVTSYSK
CVTRSV54 EQU   CVTSYSK
CVTRSV53 EQU   CVTSYSK
CVTRSV52 EQU   CVTA1F1
CVTRSV51 EQU   CVTA1F1
CVTRSV50 EQU   CVTA1F1
CVTRSV49 EQU   CVTA1F1
CVTRSV48 EQU   CVTA1F1
CVTRSV47 EQU   CVTA1F1
CVTSRSW  EQU   CVTA1F1
CVTPFSW  EQU   CVTA1F1
CVTPCVT  EQU   CVTMAP+352
CVTRSV46 EQU   CVTMAP+344
CVTRSV45 EQU   CVTMAP+340
CVTRSV44 EQU   CVTMAP+338
CVTRSV43 EQU   CVTMAP+336
CVTHJESA EQU   CVTHJES+1
CVTRSV42 EQU   CVTHJES
CVTEXT2A EQU   CVTEXT2+1
CVTRSV41 EQU   CVTEXT2
CVTAPFA  EQU   CVTAPF+1
CVTRSV40 EQU   CVTAPF
CVTRV518 EQU   CVTINTLA
CVTRV517 EQU   CVTERPV
CVTEORM  EQU   CVTMAP+312
CVTMCHPR EQU   CVTMAP+308
CVTTZ    EQU   CVTMAP+304
CVTJEPS  EQU   CVTMAP+300
CVTJESCT EQU   CVTMAP+296
CVTMODE  EQU   CVTMAP+292
CVTPTRV  EQU   CVTMAP+288
CVTREAL  EQU   CVTMAP+284
CVTRSV39 EQU   CVTMAP+280
CVTRSV38 EQU   CVTMAP+276
CVTDMSRA EQU   CVTDMSR+1
CVTRV634 EQU   CVTDMSRF
CVTRV633 EQU   CVTDMSRF
CVTRV632 EQU   CVTDMSRF
CVTRV631 EQU   CVTDMSRF
CVTRV630 EQU   CVTDMSRF
CVTRV629 EQU   CVTDMSRF
CVTUDUMP EQU   CVTDMSRF
CVTSDUMP EQU   CVTDMSRF
CVTQMSGA EQU   CVTQMSG+1
CVTRSV36 EQU   CVTQMSG
CVTAMFF  EQU   CVTMAP+264
CVTPURGA EQU   CVTPURG+1
CVTRSV35 EQU   CVTPURG
CVTCBSP  EQU   CVTMAP+256
CVTATERA EQU   CVTATER+1
CVTSYST  EQU   CVTATER
CVTVOLT2 EQU   CVTTAT
CVTVOLI2 EQU   CVTVOLF2
CVTAQAVB EQU   CVTAQAVT+1
CVTRSV34 EQU   CVTTCMFG
CVTRSV33 EQU   CVTTCMFG
CVTRSV32 EQU   CVTTCMFG
CVTRSV31 EQU   CVTTCMFG
CVTRSV30 EQU   CVTTCMFG
CVTRSV29 EQU   CVTTCMFG
CVTRSV28 EQU   CVTTCMFG
CVTTCRDY EQU   CVTTCMFG
CVTGTFA  EQU   CVTGTF+1
CVTRSV27 EQU   CVTGTFST
CVTRNIO  EQU   CVTGTFST
CVTUSR   EQU   CVTGTFST
CVTRV318 EQU   CVTFORM
CVTRV317 EQU   CVTTMODE
CVTRV316 EQU   CVTSTATE
CVTRV315 EQU   CVTGTFS
CVTGTFAV EQU   CVTGTFS
CVT0SCR1 EQU   CVTMAP+232
CVTRV515 EQU   CVTMAP+228
CVTRMS   EQU   CVTMAP+224
CVTPATCH EQU   CVTMAP+220
CVTTSCE  EQU   CVTMAP+216
CVTLNKSC EQU   CVTMAP+214
CVTQABST EQU   CVTMAP+212
CVTMDLDS EQU   CVTMAP+208
CVTUSER  EQU   CVTMAP+204
CVTABEND EQU   CVTMAP+200
CVTSMCA  EQU   CVTMAP+196
CVTRSV18 EQU   CVTMAP+192
CVTQLPAQ EQU   CVTMAP+188
CVTQCDSR EQU   CVTMAP+184
CVTRSV17 EQU   CVTOPTB
CVTRSV16 EQU   CVTOPTB
CVTFP    EQU   CVTOPTB
CVTAPTHR EQU   CVTOPTB
CVTNLOG  EQU   CVTOPTB
CVTTOD   EQU   CVTOPTB
CVTCTIMS EQU   CVTOPTB
CVTPROT  EQU   CVTOPTB
CVTXPFP  EQU   CVTOPTA
CVTASCII EQU   CVTOPTA
CVTRSV13 EQU   CVTOPTA
CVTRSV12 EQU   CVTOPTA
CVTNIP   EQU   CVTOPTA
CVTDDR   EQU   CVTOPTA
CVTAPR   EQU   CVTOPTA
CVTCCH   EQU   CVTOPTA
CVTSNCTR EQU   CVTMAP+180
CVTQMWR  EQU   CVTMAP+176
CVTQOCR  EQU   CVTMAP+172
CVT1EF00 EQU   CVTMAP+168
CVTMZ00  EQU   CVTMAP+164
CVTSV76Q EQU   CVTSV76C
CVTRSV11 EQU   CVTMAP+156
CVT0PT01 EQU   CVTMAP+152
CVTMSER  EQU   CVTMAP+148
CVTRV516 EQU   CVTIERLC
CVTILCH  EQU   CVTMAP+140
CVT0DS   EQU   CVTMAP+136
CVTFBOSV EQU   CVTMAP+132
CVTNUCB  EQU   CVTMAP+128
CVTIXAVL EQU   CVTMAP+124
CVTSV76M EQU   CVTIOQET
CVTDCBA  EQU   CVTMAP+117
CVTMVS2  EQU   CVTDCB
CVT6DAT  EQU   CVTDCB
CVT4MPS  EQU   CVTDCB
CVTRSV09 EQU   CVTDCB
CVT4MS1  EQU   CVTDCB
CVT2SPS  EQU   CVTDCB
CVT1SSS  EQU   CVTDCB
CVTRSV08 EQU   CVTDCB
CVTSTB   EQU   CVTMAP+112
CVTQTD00 EQU   CVTMAP+108
CVTQTE00 EQU   CVTMAP+104
CVTCUCB  EQU   CVTMAP+100
CVTSJQ   EQU   CVTMAP+96
CVTPBLDL EQU   CVTMAP+92
CVTTPC   EQU   CVTMAP+88
CVTSVDCB EQU   CVTMAP+84
CVTBRET  EQU   CVTMAP+82
CVTEXIT  EQU   CVTMAP+80
CVT0FN00 EQU   CVTMAP+76
CVTDARA  EQU   CVTDAR+1
CVTRSV07 EQU   CVTFLGS1
CVTRSV06 EQU   CVTFLGS1
CVTRSV05 EQU   CVTFLGS1
CVTRSV04 EQU   CVTFLGS1
CVTRSV03 EQU   CVTFLGS1
CVTRSV02 EQU   CVTFLGS1
CVTRSV01 EQU   CVTFLGS1
CVTDMPLK EQU   CVTFLGS1
CVTXITP  EQU   CVTMAP+68
CVTZDTAB EQU   CVTMAP+64
CVTMSLT  EQU   CVTMAP+60
CVTDATE  EQU   CVTMAP+56
CVTBTERM EQU   CVTMAP+52
CVTSYSAD EQU   CVTMAP+48
CVTXTLER EQU   CVTMAP+44
CVTILK2  EQU   CVTMAP+40
CVTILK1  EQU   CVTMAP+36
CVTPRLTV EQU   CVTMAP+32
CVTPCNVT EQU   CVTMAP+28
CVT0VL00 EQU   CVTMAP+24
CVTXAPG  EQU   CVTMAP+20
CVTBUF   EQU   CVTMAP+16
CVTJOB   EQU   CVTMAP+12
CVTLINK  EQU   CVTMAP+8
CVT0EF00 EQU   CVTMAP+4
CVTTCBP  EQU   CVTMAP
CVT      EQU   CVTMAP
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RC00177 EQU   @RC00176
@RF00320 EQU   @RC00317
@RF00438 EQU   @RC00431
@RC00483 EQU   @RC00122
@RC00484 EQU   @RC00483
@RF00487 EQU   @RC00484
@ENDDATA EQU   *
         END   IEFDB410,(C'PLS1443',0701,78089)
