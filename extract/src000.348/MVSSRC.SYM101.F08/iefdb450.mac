         TITLE 'IEFDB450 - CONCATENATION ROUTINE                       *
                        '
IEFDB450 CSECT ,                                                01S0001
@MAINENT DS    0H                                               01S0001
         USING *,@15                                            01S0001
         B     @PROLOG                                          01S0001
         DC    AL1(16)                                          01S0001
         DC    C'IEFDB450  75.037'                              01S0001
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                  01S0001
         BALR  @12,0                                            01S0001
@PSTART  DS    0H                                               01S0001
         USING @PSTART,@12                                      01S0001
         L     @00,@SIZDATD                                     01S0001
         GSPACE   R,LV=(0)
         LR    @11,@01                                          01S0001
         USING @DATD,@11                                        01S0001
         ST    @13,@SA00001+4                                   01S0001
         LM    @00,@01,20(@13)                                  01S0001
         ST    @11,8(,@13)                                      01S0001
         LR    @13,@11                                          01S0001
         MVC   @PC00001(28),0(@01)                              01S0001
JSCBDISP EQU 188
JSCBAOS1 EQU  72
JSCBAOS2 EQU 192
*RETINFO = ZERO;                       /* ZERO ERRCODE AND INFO CODE */
         SLR   @10,@10                                          01S0058
         L     @07,@PC00001+4                                   01S0058
         STCM  @10,15,RETINFO(@07)                              01S0058
*LISTSIZE = ZERO;                      /* ZERO DSAB ADDR LIST SIZE   */
         LR    LISTSIZE,@10                                     01S0059
*SVASIZE = ZERO;                       /* ZERO SVA & SVAB LIST SIZE  */
         LR    SVASIZE,@10                                      01S0060
*/********************************************************************/
*/*                                                                  */
*/* SEGMENT NAME - CCSYNCHK                                          */
*/*                                                                  */
*/* DESCRIPTIVE NAME - CONCATENATION SYNTAX CHECK ROUTINE            */
*/*                                                                  */
*/* FUNCTION - THIS ROUTINE DETERMINES IF THE TEXT ENTERED IS VALID  */
*/*                                                                  */
*/* OPERATION - IEFDB4FF IS INVOKED TO CHECK TEXT UNIT SYNTAX.       */
*/*             IF VALID, THE TEXT IS CHECKED TO DETERMINE IF        */
*/*             THE REQUIRED KEY IS NOT PRESENT, IF THE DDNAME IS    */
*/*             BLANK, OR IF A RESERVED DDNAME HAS BEEN SPECIFIED.   */
*/*             IF ANY OF THE ABOVE ERRORS ARE FOUND(OR THE TEXT     */
*/*             WAS INVALID) AN ERROR CODE IS SET (SEE RETURN CODE). */
*/*             IF NO ERROR, ERRCODE REMAINS ZERO.                   */
*/*                                                                  */
*/* ENTRY - CCSYNCHK ( INCLUDED SEGMENT)                             */
*/*                                                                  */
*/*  PURPOSE - SEE FUNCTION                                          */
*/*                                                                  */
*/*  INPUT DATA - TEXT UNIT PTRS - POINTER TO TEXT UNITS             */
*/*                                                                  */
*/* EXITS - ALL ARE TO NEXT SEQUENTIAL INSTRUCTION                   */
*/*                                                                  */
*/*  NORMAL - SYNTAX IS GOOD                                         */
*/*                                                                  */
*/*   RETURN CODE - ERRCODE = 0 (ZERO)                               */
*/*                                                                  */
*/*  ERROR - TEXT IS NOT VALID OR REQUIRED KEY IS MISSING            */
*/*                                                                  */
*/*   RETURN CODE - ERRCODE = ONE OF THE FOLLOWING HEX CODES         */
*/*                1. RCINPARM - BLANK DDNAME SPECIFIED              */
*/*                         '0001' (FAILING KEY) STORED IN INFO CODE */
*/*                2. RCINVKEY - INVALID KEY SPECIFIED IN TEXT       */
*/*                3. RCRSVDDN - JOBLIB/STEPLIB/ JOBCAT/STEPCAT      */
*/*                              REQUESTED                           */
*/*                4. RCINNUMB - INVALID NUMBER OF KEY PARAMETERS    */
*/*                5. RCDUPKEY - DUPLICATE KEYS SPECIFIED IN TEXT    */
*/*                6. RCINKEYL - INVALID KEY PARAMETER LENGTH        */
*/*                7. RCKEYREQ - REQUIRED KEY NOT SPECIFIED          */
*/*                                                                  */
*/********************************************************************/
*KEYTABLE = KEYTABLE && KEYTABLE;      /* ZERO KEYTABLE              */
         XC    KEYTABLE(8),KEYTABLE                             02S0061
*MASKS = ZERO;                         /* ZERO MUTUAL & DUPE MASKS   */
         STCM  @10,3,MASKS                                      02S0062
*CALL IEFDB4FF(S99TXTPP,ADDR(KEYDICT),ADDR(DUPEMASK),ADDR(MUTEMASK),
*              ADDR(KEYTABLE),RETINFO); /* CALL SYNTAX CHECKER       */
         L     @10,@PC00001                                     02S0063
         ST    @10,@AL00001                                     02S0063
         LA    @10,KEYDICT                                      02S0063
         ST    @10,@TF00001                                     02S0063
         LA    @10,@TF00001                                     02S0063
         ST    @10,@AL00001+4                                   02S0063
         LA    @10,DUPEMASK                                     02S0063
         ST    @10,@TF00002                                     02S0063
         LA    @10,@TF00002                                     02S0063
         ST    @10,@AL00001+8                                   02S0063
         LA    @10,MUTEMASK                                     02S0063
         ST    @10,@TF00003                                     02S0063
         LA    @10,@TF00003                                     02S0063
         ST    @10,@AL00001+12                                  02S0063
         LA    @10,KEYTABLE                                     02S0063
         ST    @10,@TF00004                                     02S0063
         LA    @10,@TF00004                                     02S0063
         ST    @10,@AL00001+16                                  02S0063
         ST    @07,@AL00001+20                                  02S0063
         L     @15,@CV00164                                     02S0063
         LA    @01,@AL00001                                     02S0063
         BALR  @14,@15                                          02S0063
*IF ERRCODE = ZERO THEN                /* IS SYNTAX GOOD ?           */
         SLR   @10,@10                                          02S0064
         L     @04,@PC00001+4                                   02S0064
         SLR   @15,@15                                          02S0064
         ICM   @15,3,ERRCODE(@04)                               02S0064
         CR    @10,@15                                          02S0064
         BNE   @RF00064                                         02S0064
*  IF CCDDNTUP ^= ZERO THEN            /* YES, IS REQUIRED KEY SPEC'D*/
         L     @04,CCDDNTUP                                     02S0065
         CR    @04,@10                                          02S0065
         BE    @RF00065                                         02S0065
*    DO;                               /* YES, MAKE ADDITIONAL TESTS */
*      TXTUFLDP = ADDR(TEXTUENT);      /* GET ADDRESS OF 1ST ENTRY   */
         LA    TXTUFLDP,TEXTUENT(,@04)                          02S0067
*      DO I = 1 BY 1 TO TEXTUNUM WHILE (ERRCODE = ZERO);        02S0068
         LA    I,1                                              02S0068
         B     @DE00068                                         02S0068
@DL00068 L     @10,@PC00001+4                                   02S0068
         ICM   @04,3,ERRCODE(@10)                               02S0068
         BNZ   @DC00068                                         02S0068
*                                      /* TEST DDNAME LOOP           */
*        DDNAME = '';                  /* CLEAR DDNAME               */
         MVI   DDNAME,C' '                                      02S0069
         MVC   DDNAME+1(7),DDNAME                               02S0069
*        DDNAME(1:TEXTULEN) = TEXTUPRM(1:TEXTULEN); /* MOVE TEXT PARM*/
         ICM   @04,12,TEXTULEN(TXTUFLDP)                        02S0070
         SRA   @04,16                                           02S0070
         BCTR  @04,0                                            02S0070
         EX    @04,@SM01151                                     02S0070
*        IF DDNAME(1) = ' ' THEN       /* IS DDNAME BLANK ?          */
         CLI   DDNAME,C' '                                      02S0071
         BNE   @RF00071                                         02S0071
*          DO;                         /* YES, SET ERROR & INFO CODES*/
*            ERRCODE = RCINPARM;       /* INDICATE INVALID PARM      */
         MVC   ERRCODE(2,@10),@CB00781                          02S0073
*            INFOCODE = DCCDDNAM;      /* INDICATE FAILING KEY       */
         MVC   INFOCODE(2,@10),@CB00138                         02S0074
*          END;                        /* END BLANK DDNAME TEST      */
*        ELSE                          /* DDNAME NOT BLANK           */
*          IF DDNAME = JOBLIB × DDNAME = STEPLIB                02S0076
*            × DDNAME = JOBCAT × DDNAME = STEPCAT THEN          02S0076
         B     @RC00071                                         02S0076
@RF00071 CLC   DDNAME(8),@CC00110                               02S0076
         BE    @RT00076                                         02S0076
         CLC   DDNAME(8),@CC00121                               02S0076
         BE    @RT00076                                         02S0076
         CLC   DDNAME(8),@CC00108                               02S0076
         BE    @RT00076                                         02S0076
         CLC   DDNAME(8),@CC00119                               02S0076
         BNE   @RF00076                                         02S0076
@RT00076 DS    0H                                               02S0077
*            ERRCODE = RCRSVDDN;       /* RESERVED DDNAME SPECIFIED  */
         L     @10,@PC00001+4                                   02S0077
         MVC   ERRCODE(2,@10),@CB00785                          02S0077
*          ELSE                        /* NOT A RESERVED DDNAME      */
*            TXTUFLDP = TXTUFLDP + TEXTULEN + LENGTH(TEXTULEN); 02S0078
         B     @RC00076                                         02S0078
@RF00076 LR    @10,TXTUFLDP                                     02S0078
         ICM   @04,12,TEXTULEN(TXTUFLDP)                        02S0078
         SRA   @04,16                                           02S0078
         ALR   @10,@04                                          02S0078
         AL    @10,@CF00050                                     02S0078
         LR    TXTUFLDP,@10                                     02S0078
*                                      /* INCREMENT TO NEXT TXT ENTRY*/
*      END;                            /* END TEST DDNAME LOOP       */
@RC00076 DS    0H                                               02S0079
@RC00071 AL    I,@CF00080                                       02S0079
@DE00068 L     @10,CCDDNTUP                                     02S0079
         ICM   @10,12,TEXTUNUM(@10)                             02S0079
         SRA   @10,16                                           02S0079
         CR    I,@10                                            02S0079
         BNH   @DL00068                                         02S0079
@DC00068 DS    0H                                               02S0080
*    END;                              /* END REQUIRED KEY PRESENT   */
*  ELSE                                /* REQUIRE KEY NOT SPECIFIED  */
*    ERRCODE = RCKEYREQ;               /* INDICATE REQUIRED KEY NOT
*                                         SPECIFIED                  */
         B     @RC00065                                         02S0081
@RF00065 L     @10,@PC00001+4                                   02S0081
         MVC   ERRCODE(2,@10),@CB00801                          02S0081
*ELSE;                                 /* ERRCODE NOT ZERO           */
@RF00064 DS    0H                                               02S0083
*IF ERRCODE = ZERO THEN                /* ANY ERRORS FOUND IN SYNTAX?*/
@RC00064 SLR   @10,@10                                          01S0083
         L     @04,@PC00001+4                                   01S0083
         SLR   @15,@15                                          01S0083
         ICM   @15,3,ERRCODE(@04)                               01S0083
         CR    @10,@15                                          01S0083
         BNE   @RF00083                                         01S0083
*  DO;                                 /* NO, INITIALIZE TIOT MGR REQ
*                                         BLOCK & SEARCH FOR DDNAMES */
*    TIORBPTR = ADDR(TMGRCORE);        /* PTR TO TIOT MGR REQ BLOCK  */
         LA    @04,TMGRCORE                                     01S0085
         ST    @04,TIORBPTR                                     01S0085
*    TIOMGRRB = TIOMGRRB && TIOMGRRB;  /* ZERO REQUEST BLOCK         */
         XC    TIOMGRRB(38,@04),TIOMGRRB(@04)                   01S0086
*    TIOMCCAT = ON;                    /* TURN ON CONCAT BIT         */
         OI    TIOMCCAT(@04),B'00000100'                        01S0087
*    TIOMJSCP = CCJSCBP;               /* STORE JSCB ADDR IN REQ BLK */
         L     @02,@PC00001+8                                   01S0088
         L     @02,CCJSCBP(,@02)                                01S0088
         ST    @02,TIOMJSCP(,@04)                               01S0088
*    TIOMNDSA = TEXTUNUM;              /* INDICATE NUMBER OF DSABS   */
         L     @02,CCDDNTUP                                     01S0089
         ICM   @15,12,TEXTUNUM(@02)                             01S0089
         SRA   @15,16                                           01S0089
         STH   @15,TIOMNDSA(,@04)                               01S0089
*/********************************************************************/
*/*                                                                  */
*/* SEGMENT NAME - CCDDSRCH                                          */
*/*                                                                  */
*/* DESCRIPTIVE NAME - CONCAT DDNAME SEARCH ROUTINE                  */
*/*                                                                  */
*/* FUNCTION - THIS ROUTINE SEARCHES THE DSAB CHAIN TO VERIFY        */
*/*            THAT EVERY DDNAME SPECIFIED IN THE TEXT UNIT IS       */
*/*            CURRENTLY ALLOCATED AND BUILDS A LIST OF CORRESPOND-  */
*/*            ING DSAB ADDRESSES.  THIS ROUTINE ALSO DETERMINES     */
*/*            IF DUPLICATE DDNAMES HAVE BEEN SPECIFIED OR IF THE    */
*/*            DSAB IS ASSOCIATED WITH AN OPEN DATASET.              */
*/*                                                                  */
*/* OPERATION - A CALCULATION IS MADE TO DETERMINE THE SIZE          */
*/*             OF THE DSAB ADDRESS LIST TO BE BUILT AND A           */
*/*             GETMAIN IS ISSUED FOR IT, AND FOR THE SVAB LIST      */
*/*             (IDENTICAL SIZE).  IEFDB4FC IS INVOKED TO SEARCH THE */
*/*             TIOT FOR EACH DDNAME SPECIFIED IN THE TEXT.  IF THE  */
*/*             DDNAME IS NOT FOUND, AN ERROR CODE IS SET (SEE       */
*/*             RETURN CODE) AND NO FURTHER PROCESSING IS DONE.      */
*/*             IF FOUND, THE DSAB ADDRESS IS STORED IN              */
*/*             THE DSAB ADDRESS LIST.                               */
*/*                                                                  */
*/*             TO DETERMINE IF DUPLICATE DDNAMES HAVE BEEN          */
*/*             ENTERED, A TEST OF THE DSAB ADDRESSES IS MADE.       */
*/*             IF A DUPLICATE ADDRESS IS FOUND, AN ERROR CODE IS    */
*/*             SET (SEE RETURN CODE) AND NO FURTHER PROCESSING IS   */
*/*             DONE.  IF NO ERROR, PROCESSING CONTINUES UNTIL ALL   */
*/*             DSAB ADDRESSES (FOR THE SPECIFIED DDNAMES) ARE       */
*/*             GOTTEN.                                              */
*/*                                                                  */
*/*             AFTER ALL DSAB ADDRESSES HAVE BEEN FOUND AND IT HAS  */
*/*             BEEN DETERMINED THAT NO DUPLICATE DDNAMES HAVE BEEN  */
*/*             SPECIFIED, EACH DSAB IS CHECKED FOR DSABOPCT BEING   */
*/*             ZERO.  IF NOT ZERO, DSAB IS ASSOCIATED WITH AN OPEN  */
*/*             DATASET AND AN ERROR CODE IS SET.                    */
*/*                                                                  */
*/* ENTRY - CCDDSRCH (INCLUDED SEGMENT)                              */
*/*                                                                  */
*/*  PURPOSE - SEE FUNCTION                                          */
*/*                                                                  */
*/*  INPUT - CCDDNTUP - POINTER TO TEXT UNIT                         */
*/*          DSQFRSTP - ADDRESS OF 1ST DSAB IN CHAIN                 */
*/*          LISTSIZE - INIT TO 0, INDICATING DSAB ADDRESS LIST      */
*/*                     AND SIOT SVAB LIST NOT GETMAINED             */
*/*          TIOMGRRB - TIOT MANAGER REQUEST BLOCK                   */
*/*                                                                  */
*/* EXITS - ALL ARE TO NEXT SEQUENTIAL INSTRUCTION                   */
*/*                                                                  */
*/*  NORMAL - ALL DDNAMES FOUND DURING SEARCH AND NO DUPLICATE       */
*/*           DDNAMES SPECIFIED                                      */
*/*                                                                  */
*/*   OUTPUT - 1. LISTSIZE SET TO SIZE OF DSAB ADDRESS LIST          */
*/*            2. TIOMDSAP(IN TIOMGRRB) SET TO ADDRESS OF            */
*/*               DSAB ADDRESS LIST                                  */
*/*            3. DSABNTRY (DSAB ADDRESS LIST) SET TO DSAB           */
*/*               ADDRESS ASSOCIATED WITH THE DDNAMES SPECIFIED      */
*/*               IN THE TEXT.                                       */
*/*                                                                  */
*/*   RETURN CODE - ERRCODE REMAINS ZERO                             */
*/*                                                                  */
*/*  ERROR - DDNAME NOT FOUND IN TIOT OR DUPLICATE DDNAMES           */
*/*          SPECIFIED                                               */
*/*                                                                  */
*/*   OUTPUT - 1. LISTSIZE SET TO SIZE OF DSAB ADDRESS LIST          */
*/*            2. TIOMDSAP(IN TIOMGRRB) SET TO ADDRESS OF            */
*/*               DSAB ADDRESS LIST                                  */
*/*            3. DSABNTRY(DSAB ADDRESS LIST) FILLED IN WITH DSAB    */
*/*               ADDRESSES UP TO THE TIME OF AN ERROR               */
*/*                                                                  */
*/*   RETURN CODE - ERRCODE = ONE OF THE FOLLOWING HEX CODES         */
*/*                 RCDUPDDN - DUPLICATE DDNAMES SPECIFIED           */
*/*                 RCOPENDS - DDNAME ASSOCIATED WITH AN OPEN DATASET*/
*/*                 RCDDNFND - DDNAME NOT FOUND                      */
*/*                                                                  */
*/********************************************************************/
*NUMBDSAB = ZERO;                      /* INIT DSAB COUNTER          */
         ST    @10,NUMBDSAB                                     02S0090
*TXTUFLDP = ADDR(TEXTUENT);            /* GET ADDR OF 1ST TEXT ENTRY */
         LA    TXTUFLDP,TEXTUENT(,@02)                          02S0091
*LISTSIZE = TIOMNDSA * 4;              /* CALCULATE SIZE OF     02S0092
*                                         DSAB ADDRESS LIST          */
         SLA   @15,2                                            02S0092
         LR    LISTSIZE,@15                                     02S0092
*RESPECIFY (R0,R1) RESTRICTED;         /* RESTRICT REGS 0 AND 1      */
*R0 = LISTSIZE;                        /* GET ENOUGH CORE FOR LIST   */
         LR    R0,LISTSIZE                                      02S0094
*R0 = R0 × SCHDSUBP;                   /* GET FROM CORRECT SUBPOOL   */
         O     R0,@CF00126                                      02S0095
*GEN CODE (GETMAIN R,LV=(0));          /* ISSUE GETMAIN              */
         GETMAIN R,LV=(0)
*TIOMDSAP = R1;                        /* SET PTR TO DSAB ADDR LIST  */
         L     @10,TIORBPTR                                     02S0097
         ST    R1,TIOMDSAP(,@10)                                02S0097
*RESPECIFY (R0,R1) UNRESTRICTED;       /* RELEASE REGS 0 AND 1       */
*DO I = 1 BY 1 TO TIOMNDSA WHILE(ERRCODE = ZERO); /* DDNAME SRCH LOOP*/
         LA    I,1                                              02S0099
         B     @DE00099                                         02S0099
@DL00099 SLR   @10,@10                                          02S0099
         L     @04,@PC00001+4                                   02S0099
         SLR   @15,@15                                          02S0099
         ICM   @15,3,ERRCODE(@04)                               02S0099
         CR    @10,@15                                          02S0099
         BNE   @DC00099                                         02S0099
*  DSABPTR = DSQFRSTP;                 /* GET 1ST DSAB ADDRESS       */
         L     @04,@PC00001+8                                   02S0100
         L     @04,CCJSCBP(,@04)                                02S0100
         L     @04,JSCDSABQ(,@04)                               02S0100
         L     @04,DSQFRSTP(,@04)                               02S0100
         ST    @04,DSABPTR                                      02S0100
*  DDNAME = '';                        /* BLANK DDNAME               */
         MVI   DDNAME,C' '                                      02S0101
         MVC   DDNAME+1(7),DDNAME                               02S0101
*  DDNAME(1:TEXTULEN) = TEXTUPRM(1:TEXTULEN); /* GET SEARCH DDNAME   */
         ICM   @04,12,TEXTULEN(TXTUFLDP)                        02S0102
         SRA   @04,16                                           02S0102
         BCTR  @04,0                                            02S0102
         EX    @04,@SM01151                                     02S0102
*  RTRNADDR = ZERO;                    /* ZERO RETURN AREA           */
         ST    @10,RTRNADDR                                     02S0103
*  CALL IEFDB4FC(DSABPTR,ADDR(DDNAME),ADDR(RTRNADDR));          02S0104
         LA    @10,DSABPTR                                      02S0104
         ST    @10,@AL00001                                     02S0104
         LA    @10,DDNAME                                       02S0104
         ST    @10,@TF00001                                     02S0104
         LA    @10,@TF00001                                     02S0104
         ST    @10,@AL00001+4                                   02S0104
         LA    @10,RTRNADDR                                     02S0104
         ST    @10,@TF00002                                     02S0104
         LA    @10,@TF00002                                     02S0104
         ST    @10,@AL00001+8                                   02S0104
         L     @15,@CV00163                                     02S0104
         LA    @01,@AL00001                                     02S0104
         BALR  @14,@15                                          02S0104
*                                      /* CALL DDNAME SEARCH         */
*  IF RTRNADDR = ZERO THEN             /* WAS DDNAME FOUND IN TIOT ? */
         L     @10,RTRNADDR                                     02S0105
         LTR   @10,@10                                          02S0105
         BNZ   @RF00105                                         02S0105
*    ERRCODE = RCDDNFND;               /* INDICATE DDNAME NOT FOUND  */
         L     @10,@PC00001+4                                   02S0106
         MVC   ERRCODE(2,@10),@CB00821                          02S0106
*  ELSE                                /* OTHERWISE DDNAME FOUND     */
*    DO;                               /* SAVE DSAB ADDRESS AND TEST
*                                         FOR DUPLICATE DDNAMES      */
         B     @RC00105                                         02S0107
@RF00105 DS    0H                                               02S0108
*      DSABNTRY(I) = RTRNADDR;         /* STORE DSAB ADDRESS         */
         LR    @10,I                                            02S0108
         SLA   @10,2                                            02S0108
         L     @04,TIORBPTR                                     02S0108
         L     @04,TIOMDSAP(,@04)                               02S0108
         L     @15,RTRNADDR                                     02S0108
         AL    @04,@CF01154                                     02S0108
         ST    @15,DSABNTRY(@10,@04)                            02S0108
*      NUMBDSAB = NUMBDSAB + 1;        /* INCREMENT COUNT OF DSABS   */
         LA    @10,1                                            02S0109
         AL    @10,NUMBDSAB                                     02S0109
         ST    @10,NUMBDSAB                                     02S0109
*      IF DSABNTRY(I) -> DSABOPCT ^= ZERO THEN /* IS DD ASSOCIATED
*                                                 WITH OPEN DATA SET?*/
         LH    @10,DSABOPCT(,@15)                               02S0110
         LTR   @10,@10                                          02S0110
         BZ    @RF00110                                         02S0110
*        ERRCODE = RCOPENDS;           /*YES, SET ERRCODE TO RCOPENDS*/
         L     @10,@PC00001+4                                   02S0111
         MVC   ERRCODE(2,@10),@CB00815                          02S0111
*      ELSE                            /* NOT OPEN                   */
*        DO J = 1 BY 1 TO (I-1) WHILE((I > 1) & (ERRCODE = ZERO));
         B     @RC00110                                         02S0112
@RF00110 LA    J,1                                              02S0112
         B     @DE00112                                         02S0112
@DL00112 C     I,@CF00080                                       02S0112
         BNH   @DC00112                                         02S0112
         L     @10,@PC00001+4                                   02S0112
         ICM   @15,3,ERRCODE(@10)                               02S0112
         BNZ   @DC00112                                         02S0112
*                                      /* SEARCH FOR DUPLICATE  02S0113
*                                         DDNAME ENTRIES LOOP        */
*          IF DSABNTRY(J) = RTRNADDR THEN /* DUPLICATE ENTRY ?       */
         LR    @15,J                                            02S0113
         SLA   @15,2                                            02S0113
         L     @01,TIORBPTR                                     02S0113
         L     @01,TIOMDSAP(,@01)                               02S0113
         AL    @01,@CF01154                                     02S0113
         L     @15,DSABNTRY(@15,@01)                            02S0113
         C     @15,RTRNADDR                                     02S0113
         BNE   @RF00113                                         02S0113
*            ERRCODE = RCDUPDDN;       /* INDICATE DUPLICATE DDNAMES */
         MVC   ERRCODE(2,@10),@CB00803                          02S0114
*          ELSE;                       /* NOT A DUPLICATE DDNAME     */
@RF00113 DS    0H                                               02S0116
*        END;                          /* END SEARCH FOR DUPES       */
         AL    J,@CF00080                                       02S0116
@DE00112 LR    @10,I                                            02S0116
         BCTR  @10,0                                            02S0116
         CR    J,@10                                            02S0116
         BNH   @DL00112                                         02S0116
@DC00112 DS    0H                                               02S0117
*      IF DSABNTRY(I) -> DSABCATM = ON THEN /* IS THIS A CONCAT GRP ?*/
@RC00110 LR    @10,I                                            02S0117
         SLA   @10,2                                            02S0117
         L     @04,TIORBPTR                                     02S0117
         L     @04,TIOMDSAP(,@04)                               02S0117
         AL    @04,@CF01154                                     02S0117
         L     @10,DSABNTRY(@10,@04)                            02S0117
         TM    DSABCATM(@10),B'00000010'                        02S0117
         BNO   @RF00117                                         02S0117
*        DO;                           /* YES, COUNT NUMBER OF DD'S IN
*                                         GROUP                      */
*          DSABPTR = DSABNTRY(I)->DSABFCHN; /* GET 2ND CONCAT MBR
*                                                            @Y30QPPB*/
         L     @10,DSABFCHN(,@10)                               02S0119
         ST    @10,DSABPTR                                      02S0119
*          DO WHILE (DSABPTR^=0 & TIOEDDNM(1)=' ' & DSABCATM=ON);
         B     @DE00120                                         02S0120
@DL00120 DS    0H                                               02S0121
*            NUMBDSAB = NUMBDSAB + 1;  /* INCREMENT COUNT OF DSABS   */
         LA    @10,1                                            02S0121
         AL    @10,NUMBDSAB                                     02S0121
         ST    @10,NUMBDSAB                                     02S0121
*            DSABPTR = DSABFCHN;       /* GET NEXT DSAB ADDRESS      */
         L     @10,DSABPTR                                      02S0122
         L     @10,DSABFCHN(,@10)                               02S0122
         ST    @10,DSABPTR                                      02S0122
*          END;                        /* END DO WHILE LOOP          */
@DE00120 L     @10,DSABPTR                                      02S0123
         LTR   @10,@10                                          02S0123
         BZ    @DC00120                                         02S0123
         L     @04,DSABTIOT(,@10)                               02S0123
         CLI   TIOEDDNM(@04),C' '                               02S0123
         BNE   @DC00120                                         02S0123
         TM    DSABCATM(@10),B'00000010'                        02S0123
         BO    @DL00120                                         02S0123
@DC00120 DS    0H                                               02S0124
*        END;                          /* END CONCAT GROUP PROCESSING*/
*      ELSE;                           /* NOT A CONCAT GROUP MBR     */
@RF00117 DS    0H                                               02S0126
*    TXTUFLDP = TXTUFLDP + TEXTULEN + LENGTH(TEXTULEN);         02S0126
         LR    @10,TXTUFLDP                                     02S0126
         ICM   @04,12,TEXTULEN(TXTUFLDP)                        02S0126
         SRA   @04,16                                           02S0126
         ALR   @10,@04                                          02S0126
         AL    @10,@CF00050                                     02S0126
         LR    TXTUFLDP,@10                                     02S0126
*                                      /* GET NEXT TEXT ENTRY        */
*    END;                              /* END SAVING DSAB ADDRESSES  */
*END;                                  /* END DDNAME SEARCH          */
@RC00105 AL    I,@CF00080                                       02S0128
@DE00099 L     @10,TIORBPTR                                     02S0128
         CH    I,TIOMNDSA(,@10)                                 02S0128
         BNH   @DL00099                                         02S0128
@DC00099 DS    0H                                               02S0129
*  END;                                /* END INIT & SEARCH CODE     */
*IF ERRCODE = ZERO THEN                /* ANY ENVIRONMENTAL ERROR ?  */
@RF00083 L     @10,@PC00001+4                                   01S0130
         ICM   @04,3,ERRCODE(@10)                               01S0130
         BNZ   @RF00130                                         01S0130
*  DO;                                 /* NO, REORDER TIOT ENTRIES   */
*    CALL IEFAB4FC (TIORBPTR);         /* INVOKE TIOT MANAGER        */
         LA    @10,TIORBPTR                                     01S0132
         ST    @10,@AL00001                                     01S0132
         L     @15,@CV00160                                     01S0132
         LA    @01,@AL00001                                     01S0132
         BALR  @14,@15                                          01S0132
*    RESPECIFY R15 RESTRICTED;         /* RESTRICT REG 15            */
*    IF R15 ^= ZERO THEN               /* DID TIOT MANAGER FAIL ?    */
         LTR   R15,R15                                          01S0134
         BZ    @RF00134                                         01S0134
*      ERRCODE = RCNSTIOT;             /* YES, SET ERRCODE TO   01S0135
*                                         RCNSTIOT,NO SPACE IN TIOT  */
         L     @14,@PC00001+4                                   01S0135
         MVC   ERRCODE(2,@14),@CB00769                          01S0135
*    ELSE                              /* TIOT ENTRIES ARE REORDERED */
*      DO;                             /* CONCATENATE THE DDNAMES    */
         B     @RC00134                                         01S0136
@RF00134 DS    0H                                               01S0137
*/********************************************************************/
*/*                                                                  */
*/* SEGMENT NAME - CONCAT                                            */
*/*                                                                  */
*/* DESCRIPTIVE NAME - CONCATENATION ROUTINE                         */
*/*                                                                  */
*/* FUNCTION - COMPLETE THE CONCATENATION, I.E. SET THE              */
*/*            APPROPRIATE BITS IN THE DSABS, AND, IF PERM CONCAT    */
*/*            REQUESTED, BLANK THE DDNAMES IN THE SIOTS.            */
*/*                                                                  */
*/* OPERATION - THIS ROUTINE TURNS ON THE DSABDCAT, AND              */
*/*             DSABNUSE BITS AND STORES THE TCB ADDRESS (FROM THE   */
*/*             INPUT PARAMETERS) IN DSABTCBP FOR ALL DSABS IN       */
*/*             THE GROUP.  IN ADDITION, IF PERM CONCAT IS           */
*/*             REQUESTED:                                           */
*/*                      1. THE DSABPCAT BIT IS SET ON FOR           */
*/*                         EVERY MEMBER IN THE GROUP.               */
*/*                      2. THE DSABPALC BIT IS SET ON FOR           */
*/*                         EVERY MEMBER IN THE GROUP.               */
*/*                      3. THE DSABCONV BIT IS SET OFF FOR          */
*/*                         EVERY MEMBER IN THE GROUP.               */
*/*                      4. THE DDNAME IN THE SIOT IS BLANKED        */
*/*                         FOR ALL BUT THE FIRST MEMBER OF          */
*/*                         THE GROUP.                               */
*/*                      5. CORE IS GOTTEN FOR THE PARAMETER @Y30QPPB*/
*/*                         LIST FOR THE CHANGE DDNAME/JES3  @Y30QPPB*/
*/*                         EXIT.  THIS PARAMETER LIST IS    @Y30QPPB*/
*/*                         FILLED IN WITH THE OLD AND NEW   @Y30QPPB*/
*/*                         DDNAME AND RELATIVE POSITION     @Y30QPPB*/
*/*                         NUMBER FOR EACH DD IN THE        @Y30QPPB*/
*/*                         RESULTANT CONCATENATION.         @Y30QPPB*/
*/*                                                                  */
*/* ENTRY - CONCAT (INCLUDED SEGMENT)                                */
*/*                                                                  */
*/*  PURPOSE - SEE FUNCTION                                          */
*/*                                                                  */
*/*  INPUT - DSABNTRY - DSAB ADDRESS LIST                            */
*/*          CCPCATUP - PERM CONCAT TEXT UNIT POINTER                */
*/*                     IF ZERO - PERM CONCAT NOT REQUESTED          */
*/*                     IF NON-ZERO - PERM CONCAT REQUESTED          */
*/*          NUMBDSAB - NUMBER OF DD ENTRIES IN THE RESULTANT@Y30QPPB*/
*/*                     CONCATENATED DATA GROUP.             @Y30QPPB*/
*/*                                                                  */
*/* EXITS - ALL ARE TO NEXT SEQUENTIAL INSTRUCTION                   */
*/*                                                                  */
*/*  NORMAL - DSABS UPDATED WITH APPROPRIATE BIT SETTINGS            */
*/*                                                                  */
*/*   OUTPUT -  DSABDCAT BIT SET ON - IN ALL CASES                   */
*/*             DSABNUSE BIT SET ON - IN ALL CASES                   */
*/*             DSABTCBP - TCB ADDRESS FROM INPUT PARAMETERS STORED  */
*/*                        IN ALL CASES                              */
*/*             DSABPCAT BIT SET ON - ONLY IF PERM CONCAT REQUESTED  */
*/*             DSABPALC BIT SET ON - ONLY IF PERM CONCAT REQUESTED  */
*/*             DSABCONV BIT SET OFF - ONLY IF PERM CONCAT REQUESTED */
*/*             SCTDDNAM - BLANKED FOR ALL BUT THE FIRST DD OF A     */
*/*                        PERMANENTLY CONCATENATED GROUP            */
*/*             DDNMPTR - ADDRESS OF THE OLD AND NEW DDNAME  @Y30QPPB*/
*/*                       INFORMATION FOR THE JES3 EXIT (IF  @Y30QPPB*/
*/*                       THE PERMANENTLY CONCATENATED       @Y30QPPB*/
*/*                       ATTRIBUTE WAS REQUESTED.)          @Y30QPPB*/
*/*                                                                  */
*/*   RETURN CODE - ERRCODE REMAINS ZERO                             */
*/*                                                                  */
*/*  ERROR - NONE                                                    */
*/*                                                                  */
*/********************************************************************/
*FIRSTIME = ON;                        /* SET 1ST TIME SWITCH        */
         OI    FIRSTIME,B'10000000'                             02S0137
*DSABPTR = DSABNTRY(1);                /* GET FIRST DSAB ADDRESS     */
         L     @14,TIORBPTR                                     02S0138
         L     @14,TIOMDSAP(,@14)                               02S0138
         L     @14,DSABNTRY(,@14)                               02S0138
         ST    @14,DSABPTR                                      02S0138
*IF CCPCATUP ^= ZERO THEN              /* PERM CONCAT REQUEST@Y30QPPB*/
         L     @14,CCPCATUP                                     02S0139
         LTR   @14,@14                                          02S0139
         BZ    @RF00139                                         02S0139
*  DO;                                 /* YES, GET JES3 CORE @Y30QPPB*/
*    RESPECIFY (R0,R1) RESTRICTED;     /* RESTRICT REGS 0,1  @Y30QPPB*/
*    R0 = NUMBDSAB * LENGTH(DDENTRY);  /* LNG OF JES3 CORE   @Y30QPPB*/
         L     R0,NUMBDSAB                                      02S0142
         MH    R0,@CH00068                                      02S0142
*    R0 = R0 × SCHDSUBP;               /* SUBPOOL FOR GET    @Y30QPPB*/
         O     R0,@CF00126                                      02S0143
*    GENERATE;                         /* GET CORE FOR JES3  @Y30QPPB*/
     GETMAIN R,LV=(0)                 JES3 CORE             @Y30QPPB
*    DDNMPTR = R1;                     /* ADDR OF JES3 CORE  @Y30QPPB*/
         ST    R1,DDNMPTR                                       02S0145
*    RESPECIFY (R0,R1) UNRESTRICTED;   /* RELEASE REGS 0,1   @Y30QPPB*/
*  END;                                /* END GET JES3 CORE  @Y30QPPB*/
*DO I = 1 BY 1 TO NUMBDSAB;            /* DSAB,TIOT,SIOT UPDATE LOOP */
@RF00139 LA    I,1                                              02S0148
         B     @DE00148                                         02S0148
@DL00148 DS    0H                                               02S0149
*  DSABDCAT = ON;                      /* TURN ON DYN CONCAT BIT     */
*  DSABNUSE = ON;                      /* TURN ON IN-USE BIT         */
         L     @14,DSABPTR                                      02S0150
         OI    DSABDCAT(@14),B'00001001'                        02S0150
*  DSABTCBP = CCTCBP;                  /* TCB UNDER WHICH SET IN-USE */
         L     @10,@PC00001+8                                   02S0151
         L     @10,CCTCBP(,@10)                                 02S0151
         ST    @10,DSABTCBP(,@14)                               02S0151
*  IF CCPCATUP ^= ZERO THEN            /* WAS PERM CONCAT REQUESTED ?*/
         L     @10,CCPCATUP                                     02S0152
         LTR   @10,@10                                          02S0152
         BZ    @RF00152                                         02S0152
*    DO;                               /* YES, PERM CONCAT           */
*      DSABPCAT = ON;                  /* INDICATE PERM CONCAT       */
*      DSABPALC = ON;                  /* TURN ON PERM ALLOC BIT     */
*      DSABCONV = OFF;                 /* TURN OFF CONVERTIBLE  02S0156
*                                         ATTRIBUTE                  */
         OI    DSABPCAT(@14),B'01000100'                        02S0156
         NI    DSABCONV(@14),B'11101111'                        02S0156
*      IF FIRSTIME = OFF THEN          /* NOT PROCESSING 1ST DD ENTRY*/
         TM    FIRSTIME,B'10000000'                             02S0157
         BNZ   @RF00157                                         02S0157
*        DO;                           /* YES,HANDLE NOT 1ST @Y30QPPB*/
*          IF SCTDDNAM = BLANKS THEN   /* ALREADY CONCATENATD@Y30QPPB*/
         L     @14,DSABSIOT(,@14)                               02S0159
         CLC   SCTDDNAM(8,@14),@CC00106                         02S0159
         BNE   @RF00159                                         02S0159
*            DO;                       /* YES, SAVE OLD DDN  @Y30QPPB*/
*              OLDDDNAM(I) = OLDDDNAM(I-1); /* DDN=PREVIOUS  @Y30QPPB*/
         L     @14,DDNMPTR                                      02S0161
         LR    @10,I                                            02S0161
         MH    @10,@CH00068                                     02S0161
         ST    @10,@TF00001                                     02S0161
         ALR   @10,@14                                          02S0161
         AL    @10,@CF01156                                     02S0161
         LR    @04,@14                                          02S0161
         AL    @04,@TF00001                                     02S0161
         AL    @04,@CF01157                                     02S0161
         MVC   OLDDDNAM(8,@10),OLDDDNAM(@04)                    02S0161
*              OLDPOSNO(I) = OLDPOSNO(I-1) + ONE; /* INCR CT @Y30QPPB*/
         LA    @10,1                                            02S0162
         L     @04,@TF00001                                     02S0162
         AL    @04,@CF01158                                     02S0162
         AH    @10,OLDPOSNO-8(@04,@14)                          02S0162
         L     @04,@TF00001                                     02S0162
         AL    @14,@CF01159                                     02S0162
         STH   @10,OLDPOSNO-8(@04,@14)                          02S0162
*            END;                      /* END SAVE OLD DDN   @Y30QPPB*/
*          ELSE                        /* NOT YET CONCATENTD @Y30QPPB*/
*            DO;                       /* SAVE OLD DDNAME    @Y30QPPB*/
         B     @RC00159                                         02S0164
@RF00159 DS    0H                                               02S0165
*              OLDDDNAM(I) = SCTDDNAM; /* OLD DDN FROM SIOT  @Y30QPPB*/
         L     @14,DDNMPTR                                      02S0165
         LR    @10,I                                            02S0165
         MH    @10,@CH00068                                     02S0165
         ST    @10,@TF00001                                     02S0165
         ALR   @10,@14                                          02S0165
         AL    @10,@CF01156                                     02S0165
         L     @04,DSABPTR                                      02S0165
         L     @04,DSABSIOT(,@04)                               02S0165
         MVC   OLDDDNAM(8,@10),SCTDDNAM(@04)                    02S0165
*              OLDPOSNO(I) = ZERO;     /* ZERO POSITION NUMB @Y30QPPB*/
         SLR   @10,@10                                          02S0166
         L     @04,@TF00001                                     02S0166
         AL    @14,@CF01159                                     02S0166
         STH   @10,OLDPOSNO-8(@04,@14)                          02S0166
*            END;                      /* END SAVE OLD DDN   @Y30QPPB*/
*          NEWDDNAM(I) = NEWDDNAM(I-1); /* NEW DDN ALL SAME  @Y30QPPB*/
@RC00159 L     @14,DDNMPTR                                      02S0168
         LR    @10,I                                            02S0168
         MH    @10,@CH00068                                     02S0168
         ST    @10,@TF00001                                     02S0168
         ALR   @10,@14                                          02S0168
         AL    @10,@CF01160                                     02S0168
         LR    @04,@14                                          02S0168
         AL    @04,@TF00001                                     02S0168
         AL    @04,@CF01161                                     02S0168
         MVC   NEWDDNAM-10(8,@10),NEWDDNAM-10(@04)              02S0168
*          NEWPOSNO(I) = NEWPOSNO(I-1) + ONE; /* INCR COUNT  @Y30QPPB*/
         LA    @10,1                                            02S0169
         L     @04,@TF00001                                     02S0169
         AL    @04,@CF01162                                     02S0169
         AH    @10,NEWPOSNO-18(@04,@14)                         02S0169
         L     @04,@TF00001                                     02S0169
         AL    @14,@CF01163                                     02S0169
         STH   @10,NEWPOSNO-18(@04,@14)                         02S0169
*          SCTDDNAM = BLANKS;          /* BLANK DDN IN SIOT  @Y30QPPB*/
         L     @14,DSABPTR                                      02S0170
         L     @14,DSABSIOT(,@14)                               02S0170
         MVC   SCTDDNAM(8,@14),@CC00106                         02S0170
*        END;                          /* END NOT FIRST TIME @Y30QPPB*/
*      ELSE                            /* THIS IS 1ST DD ENTRY       */
*        DO;                           /* HANDLE FIRST TIME  @Y30QPPB*/
         B     @RC00157                                         02S0172
@RF00157 DS    0H                                               02S0173
*          OLDDDNAM(I) = SCTDDNAM;     /* SAVE DDN FROM SIOT @Y30QPPB*/
         L     @14,DDNMPTR                                      02S0173
         LR    @10,I                                            02S0173
         MH    @10,@CH00068                                     02S0173
         ST    @10,@TF00001                                     02S0173
         ALR   @10,@14                                          02S0173
         AL    @10,@CF01156                                     02S0173
         L     @04,DSABPTR                                      02S0173
         L     @04,DSABSIOT(,@04)                               02S0173
         MVC   OLDDDNAM(8,@10),SCTDDNAM(@04)                    02S0173
*          OLDPOSNO(I) = ZERO;         /* POSITION IS ZERO   @Y30QPPB*/
         SLR   @10,@10                                          02S0174
         L     @03,@TF00001                                     02S0174
         AL    @03,@CF01159                                     02S0174
         STH   @10,OLDPOSNO-8(@03,@14)                          02S0174
*          NEWDDNAM(I) = SCTDDNAM;     /* FIRST IS GROUP NAME@Y30QPPB*/
         LR    @03,@14                                          02S0175
         AL    @03,@TF00001                                     02S0175
         AL    @03,@CF01160                                     02S0175
         MVC   NEWDDNAM-10(8,@03),SCTDDNAM(@04)                 02S0175
*          NEWPOSNO(I) = ZERO;         /* POSITION IS ZERO   @Y30QPPB*/
         L     @04,@TF00001                                     02S0176
         AL    @14,@CF01163                                     02S0176
         STH   @10,NEWPOSNO-18(@04,@14)                         02S0176
*          FIRSTIME = OFF;             /* INDIC 1ST DD PROC'D@Y30QPPB*/
         NI    FIRSTIME,B'01111111'                             02S0177
*        END;                          /* END FIRST TIME     @Y30QPPB*/
*    END;                              /* END PERM CONCAT PROCESSING */
*  ELSE;                               /* PERM CONCAT NOT REQUESTED  */
@RF00152 DS    0H                                               02S0181
*  DSABPTR = DSABFCHN;                 /* GET NEXT DSAB ADDRESS      */
@RC00152 L     @14,DSABPTR                                      02S0181
         L     @14,DSABFCHN(,@14)                               02S0181
         ST    @14,DSABPTR                                      02S0181
*END;                                  /* END DSAB, TIOT & SIOT 02S0182
*                                         UPDATE                     */
         AL    I,@CF00080                                       02S0182
@DE00148 C     I,NUMBDSAB                                       02S0182
         BNH   @DL00148                                         02S0182
*      END;                            /* END CONCAT CODE            */
*    RESPECIFY R15 UNRESTRICTED;       /* RESTRICT REG 15            */
@RC00134 DS    0H                                               01S0185
*  END;                                /* END ENVIRONMENT TEST AND
*                                         CONCATENATION OF DDNAMES   */
*IF ERRCODE = ZERO THEN                /* ANY ERRORS FOUND ?         */
@RF00130 L     @10,@PC00001+4                                   01S0186
         ICM   @04,3,ERRCODE(@10)                               01S0186
         BNZ   @RF00186                                         01S0186
*  DO;                                 /* NO, CALL SMF ROUTINE       */
*    FUNCMAP = '03'X;                  /* INDICATE CONCAT CALL       */
         MVI   FUNCMAP,X'03'                                    01S0188
*    CALL IEFDB4F9(FUNCMAP,CCTCBP,0,DEPARMS,JSCDSABQ,SMFPARMS); 01S0189
         LA    @10,FUNCMAP                                      01S0189
         ST    @10,@AL00001                                     01S0189
         L     @10,@PC00001+8                                   01S0189
         LA    @04,CCTCBP(,@10)                                 01S0189
         ST    @04,@AL00001+4                                   01S0189
         LA    @04,@CF00123                                     01S0189
         ST    @04,@AL00001+8                                   01S0189
         L     @04,@PC00001+16                                  01S0189
         ST    @04,@AL00001+12                                  01S0189
         L     @10,CCJSCBP(,@10)                                01S0189
         LA    @10,JSCDSABQ(,@10)                               01S0189
         ST    @10,@AL00001+16                                  01S0189
         L     @10,@PC00001+24                                  01S0189
         ST    @10,@AL00001+20                                  01S0189
         L     @15,@CV00161                                     01S0189
         LA    @01,@AL00001                                     01S0189
         BALR  @14,@15                                          01S0189
*                                      /* CALL SMF MODULE    @ZA02706*/
*  END;                                /* END SMF CALL               */
*IF ERRCODE = ZERO THEN                /* ANY ERRORS FOUND ?         */
@RF00186 SLR   @10,@10                                          01S0191
         L     @04,@PC00001+4                                   01S0191
         SLR   @15,@15                                          01S0191
         ICM   @15,3,ERRCODE(@04)                               01S0191
         CR    @10,@15                                          01S0191
         BNE   @RF00191                                         01S0191
*  IF CCPCATUP ^= ZERO THEN            /* WAS PERM CONCAT REQUESTED ?*/
         C     @10,CCPCATUP                                     01S0192
         BE    @RF00192                                         01S0192
*    DO;                               /* WRITE SIOTS IF NO ERROR AND
*                                         PERM CONCAT REQUESTED      */
*      RESPECIFY (R0,R1) RESTRICTED;   /* RESTRICT USAGE OF REGS 0 &1*/
*      SVASIZE = NUMBDSAB * 4;         /* CALCULATE SIZE OF SVA LIST */
         L     SVASIZE,NUMBDSAB                                 01S0195
         SLA   SVASIZE,2                                        01S0195
*      R0 = SVASIZE * 2;               /* GET ENOUGH CORE FOR SVA
*                                         AND SVAB LISTS             */
         LR    R0,SVASIZE                                       01S0196
         ALR   R0,R0                                            01S0196
*      R0 = R0 × SCHDSUBP;             /* GET FROM CORRECT SUBPOOL   */
         O     R0,@CF00126                                      01S0197
*      GEN CODE(GETMAIN R,LV=(0));     /* ISSUE GETMAIN              */
         GETMAIN R,LV=(0)
*      SVALISTP = R1;                  /* SET PTR TO SVA LIST        */
         LR    SVALISTP,R1                                      01S0199
*      RESPECIFY (R0,R1) UNRESTRICTED; /* RELEASE USAGE OF REGS 0 & 1*/
*      SVABLSTP = SVALISTP + SVASIZE;  /* GET ADDRESS OF SVAB LIST   */
         LR    SVABLSTP,SVALISTP                                01S0201
         ALR   SVABLSTP,SVASIZE                                 01S0201
*      DSABPTR = DSABNTRY(1);          /* GET FIRST DSAB ADDRESS     */
         L     @10,TIORBPTR                                     01S0202
         L     @10,TIOMDSAP(,@10)                               01S0202
         L     @10,DSABNTRY(,@10)                               01S0202
         ST    @10,DSABPTR                                      01S0202
*      DO I = 1 BY 1 TO NUMBDSAB;      /* SVA & SVAB LIST BUILD LOOP */
         LA    I,1                                              01S0203
         B     @DE00203                                         01S0203
@DL00203 DS    0H                                               01S0204
*        SVABLIST(I) = DSABSIOT;       /* GET SIOT ADDRESS           */
         LR    @10,I                                            01S0204
         SLA   @10,2                                            01S0204
         L     @04,DSABPTR                                      01S0204
         L     @15,DSABSIOT(,@04)                               01S0204
         LR    @14,SVABLSTP                                     01S0204
         AL    @14,@CF01154                                     01S0204
         ST    @15,SVABLIST(@10,@14)                            01S0204
*        SVA(I) = SIOTDSKA;            /* GET SIOT SVA ADDRESS       */
         ST    @10,@TF00001                                     01S0205
         ALR   @10,SVALISTP                                     01S0205
         AL    @10,@CF01154                                     01S0205
         MVC   SVA(3,@10),SIOTDSKA(@15)                         01S0205
*        SVID(I) = SIOTTYPE;           /* GET SIOT ID                */
         LR    @10,SVALISTP                                     01S0206
         AL    @10,@TF00001                                     01S0206
         AL    @10,@CF01165                                     01S0206
         MVC   SVID-3(1,@10),SIOTTYPE(@15)                      01S0206
*        DSABPTR = DSABFCHN;           /* GET NEXT DSAB ADDRESS      */
         L     @10,DSABFCHN(,@04)                               01S0207
         ST    @10,DSABPTR                                      01S0207
*      END;                            /* END SVA & SVAB LIST BUILD  */
         AL    I,@CF00080                                       01S0208
@DE00203 C     I,NUMBDSAB                                       01S0208
         BNH   @DL00203                                         01S0208
*      SWACTLS = SWACTLS && SWACTLS;   /* ZERO SWA INTERFACE FUNC MAP*/
         LH    @10,SWACTLS                                      01S0209
         N     @10,@CF01166                                     01S0209
         LR    @04,@10                                          01S0209
         XR    @04,@10                                          01S0209
         STH   @04,SWACTLS                                      01S0209
*      SWNEW = ON;                     /* INDICATE NEW EPA'S         */
*      SWFREE = ON;                    /* INDICATE FREEMAIN EPA'S    */
*      SWWRT = ON;                     /* INDICATE WRITE BLOCKS      */
         OI    SWNEW,B'00011100'                                01S0212
*      CALL IEFAB4F7(SWACTLS,0,0,ADDR(SVALIST) + 4,ADDR(SVABLIST) + 4,
*                    SIZESIOT,(NUMBDSAB-1));                    01S0213
         LA    @10,SWACTLS                                      01S0213
         ST    @10,@AL00001                                     01S0213
         LA    @10,@CF00123                                     01S0213
         ST    @10,@AL00001+4                                   01S0213
         LA    @10,@CF00123                                     01S0213
         ST    @10,@AL00001+8                                   01S0213
         LA    @10,4                                            01S0213
         LR    @04,SVALISTP                                     01S0213
         ALR   @04,@10                                          01S0213
         ST    @04,@TF00001                                     01S0213
         LA    @04,@TF00001                                     01S0213
         ST    @04,@AL00001+12                                  01S0213
         ALR   @10,SVABLSTP                                     01S0213
         ST    @10,@TF00002                                     01S0213
         LA    @10,@TF00002                                     01S0213
         ST    @10,@AL00001+16                                  01S0213
         LA    @10,@CH00117                                     01S0213
         ST    @10,@AL00001+20                                  01S0213
         L     @10,NUMBDSAB                                     01S0213
         BCTR  @10,0                                            01S0213
         ST    @10,@TF00003                                     01S0213
         LA    @10,@TF00003                                     01S0213
         ST    @10,@AL00001+24                                  01S0213
         L     @15,@CV00159                                     01S0213
         LA    @01,@AL00001                                     01S0213
         BALR  @14,@15                                          01S0213
*                                      /* CALL SWA MGR INTERFACE
*                                         TO WRITE ALL BUT 1ST SIOT  */
*      RESPECIFY (R0,R1) RESTRICTED;   /* RESTRICT REG 0 & 1 USAGE   */
*      R0 = SVASIZE * 2;               /* CALCULATE SIZE OF CORE     */
         LR    R0,SVASIZE                                       01S0215
         ALR   R0,R0                                            01S0215
*      R1 = SVALISTP;                  /* GET ADDRESS OF CORE        */
         LR    R1,SVALISTP                                      01S0216
*      R0 = R0 × SCHDSUBP;             /* FREE FROM CORRECT SUBPOOL  */
         O     R0,@CF00126                                      01S0217
*      GEN CODE(FREEMAIN R,LV=(0),A=(1)); /* FREEMAIN LISTS          */
         FREEMAIN R,LV=(0),A=(1)
*      RESPECIFY (R0,R1) UNRESTRICTED; /* RELEASE USE OF REGS 0 & 1  */
*    END;                              /* END SIOT WRITE PROCESSING  */
*RESPECIFY (R0,R1) RESTRICTED;         /* RESTRICT REGS 0 AND 1      */
@RF00192 DS    0H                                               01S0221
@RF00191 DS    0H                                               01S0222
*IF CCPCATUP ^= ZERO &                 /* PERM CONCAT REQUEST@Y30QPPB*/
*   ERRCODE = ZERO THEN                /* AND NO ERRORS      @ZM00447*/
         SLR   @10,@10                                          01S0222
         C     @10,CCPCATUP                                     01S0222
         BE    @RF00222                                         01S0222
         L     @04,@PC00001+4                                   01S0222
         SLR   @15,@15                                          01S0222
         ICM   @15,3,ERRCODE(@04)                               01S0222
         CR    @10,@15                                          01S0222
         BNE   @RF00222                                         01S0222
*  DO;                                 /* YES,FREE JES3 CORE @Y30QPPB*/
*    CALL IEFDB4FB(NUMBDSAB,DDNMPTR);  /* JES3 CHANGE DDN    @Y30QPPB*/
         LA    @10,NUMBDSAB                                     01S0224
         ST    @10,@AL00001                                     01S0224
         LA    @10,DDNMPTR                                      01S0224
         ST    @10,@AL00001+4                                   01S0224
         L     @15,@CV00162                                     01S0224
         LA    @01,@AL00001                                     01S0224
         BALR  @14,@15                                          01S0224
*    R0 = NUMBDSAB * LENGTH(DDENTRY);  /* LNG OF JES3 CORE   @Y30QPPB*/
         L     R0,NUMBDSAB                                      01S0225
         MH    R0,@CH00068                                      01S0225
*    R0 = R0 × SCHDSUBP;               /* SUBPOOL FOR FREE   @Y30QPPB*/
         O     R0,@CF00126                                      01S0226
*    R1 = DDNMPTR;                     /* ADDR OF JES3 CORE  @Y30QPPB*/
         L     R1,DDNMPTR                                       01S0227
*    GENERATE;                         /* FREE JES3 CORE     @Y30QPPB*/
     FREEMAIN R,LV=(0),A=(1)           FREE JES3 CORE       @Y30QPPB
*  END;                                /* END FREE JES3 CORE @Y30QPPB*/
*IF LISTSIZE ^= ZERO THEN              /* WAS DSAB ADDRESS LIST 01S0230
*                                         CREATED ?                  */
@RF00222 LTR   LISTSIZE,LISTSIZE                                01S0230
         BZ    @RF00230                                         01S0230
*  DO;                                 /* YES, FREEMAIN CORE         */
*    R0 = LISTSIZE;                    /* GET SIZE OF LIST           */
         LR    R0,LISTSIZE                                      01S0232
*    R0 = R0 × SCHDSUBP;               /* FREE FROM CORRECT SUBPOOL  */
         O     R0,@CF00126                                      01S0233
*    R1 = TIOMDSAP;                    /* GET ADDRESS OF DSAB LIST   */
         L     @10,TIORBPTR                                     01S0234
         L     R1,TIOMDSAP(,@10)                                01S0234
*    GEN CODE (FREEMAIN R,LV=(0),A=(1)); /* FREEMAIN DSAB LIST       */
         FREEMAIN R,LV=(0),A=(1)
*  END;                                /* END FREEMAIN DSAB LIST     */
*RESPECIFY (R0,R1) UNRESTRICTED;       /* RELEASE USAGE OF REGS 0 & 1*/
@RF00230 DS    0H                                               01S0238
*RETURN CODE(ZERO);                    /* RETURN CODE IN REG 15      */
         L     @13,4(,@13)                                      01S0238
         L     @00,@SIZDATD                                     01S0238
         LR    @01,@11                                          01S0238
         FSPACE   R,LV=(0),A=(1)
         SLR   @15,@15                                          01S0238
         L     @14,12(,@13)                                     01S0238
         LM    @00,@12,20(@13)                                  01S0238
         BR    @14                                              01S0238
*END IEFDB450                                                   01S0239
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.      *
*/*%INCLUDE SYSLIB  (DB450SPC)                                        *
*/*%INCLUDE SYSLIB  (CONCATDT)                                        *
*/*%INCLUDE SYSLIB  (IEFASIOT)                                        *
*/*%INCLUDE SYSLIB  (IEFTIOT1)                                        *
*/*%INCLUDE SYSLIB  (IEFZB424)                                        *
*/*%INCLUDE SYSLIB  (IEFZB436)                                        *
*/*%INCLUDE SYSLIB  (IEFZB4D1)                                        *
*/*%INCLUDE SYSLIB  (IEFZB4D2)                                        *
*/*%INCLUDE SYSLIB  (IEFZB4D5)                                        *
*/*%INCLUDE SYSLIB  (IEFZB4D7)                                        *
*/*%INCLUDE SYSLIB  (IEFZB4D9)                                        *
*/*%INCLUDE SYSLIB  (IEFZB4DA)                                        *
*/*%INCLUDE SYSLIB  (IEZJSCB )                                        *
*/*%INCLUDE SYSLIB  (IHADSAB )                                        *
*/*%INCLUDE SYSLIB  (IHAQDB  )                                        *
*/*%INCLUDE SYSLIB  (CCSYNCHK)                                        *
*/*%INCLUDE SYSLIB  (CCSYNCSP)                                        *
*/*%INCLUDE SYSLIB  (CCDDSRCH)                                        *
*/*%INCLUDE SYSLIB  (CCDDSSPC)                                        *
*/*%INCLUDE SYSLIB  (CONCAT  )                                        *
*/*%INCLUDE SYSLIB  (CONCATSP)                                        *
*;                                                              01S0239
@DATA    DS    0H
@CH00068 DC    H'20'
@CH00117 DC    H'176'
@SM01151 MVC   DDNAME(0),TEXTUPRM(TXTUFLDP)
@DATD    DSECT
         DS    0F
@SA00001 DS    18F
@PC00001 DS    7F
@AL00001 DS    7A
@TF00001 DS    F
@TF00002 DS    F
@TF00003 DS    F
@TF00004 DS    F
IEFDB450 CSECT
         DS    0F
@CF00123 DC    F'0'
@CF00080 DC    F'1'
@CF00050 DC    F'2'
@CF01157 DC    F'-40'
@CF01158 DC    F'-32'
@CF01161 DC    F'-30'
@CF01162 DC    F'-22'
@CF01156 DC    F'-20'
@CF01159 DC    F'-12'
@CF01160 DC    F'-10'
@CF01154 DC    F'-4'
@CF01163 DC    F'-2'
@CF01165 DC    F'-1'
@CF00126 DC    XL4'E6000000'
@CF01166 DC    XL4'0000FFFF'
@DATD    DSECT
         DS    0D
DDNMPTR  DS    A
DSABPTR  DS    A
RTRNADDR DS    A
TIORBPTR DS    A
NUMBDSAB DS    F
SIOTPTR  DS    A
TIOTPTR  DS    A
TCBJSCB  DS    A
QDBPTR   DS    A
SWACTLS  DS    FL2
         ORG   SWACTLS
SWASN    DS    BL1
SWDEL    EQU   SWACTLS+0
SWREAD   EQU   SWACTLS+0
SWWRT    EQU   SWACTLS+0
SWNEW    EQU   SWACTLS+0
SWFREE   EQU   SWACTLS+0
SWMOD    EQU   SWACTLS+0
SWOLD    EQU   SWACTLS+0
SWCHN    DS    BL1
@NM00029 EQU   SWACTLS+1
         ORG   SWACTLS+2
         DS    CL2
KEYTABLE DS    CL8
         ORG   KEYTABLE
CCDDNTUP DS    AL4
CCPCATUP DS    AL4
         ORG   KEYTABLE+8
MASKS    DS    CL2
         ORG   MASKS
DUPEMASK DS    CL1
MUTEMASK DS    CL1
         ORG   MASKS+2
DDNAME   DS    CL8
FUNCMAP  DS    CL1
SWITCHES DS    BL1
         ORG   SWITCHES
FIRSTIME DS    BL1
QUIT     EQU   SWITCHES+0
@NM00001 EQU   SWITCHES+0
         ORG   SWITCHES+1
TMGRCORE DS    CL38
IEFDB450 CSECT
         DS    0F
@SIZDATD DC    AL1(230)
         DC    AL3(@ENDDATD-@DATD)
@CV00159 DC    V(IEFAB4F7)
@CV00160 DC    V(IEFAB4FC)
@CV00161 DC    V(IEFDB4F9)
@CV00162 DC    V(IEFDB4FB)
@CV00163 DC    V(IEFDB4FC)
@CV00164 DC    V(IEFDB4FF)
         DS    0D
@CC00106 DC    C'        '
@CC00108 DC    C'JOBCAT  '
@CC00110 DC    C'JOBLIB  '
@CC00119 DC    C'STEPCAT '
@CC00121 DC    C'STEPLIB '
@CB00138 DC    X'0001'
@CB00769 DC    X'0238'
@CB00781 DC    X'035C'
@CB00785 DC    X'0364'
@CB00801 DC    X'0388'
@CB00803 DC    X'038C'
@CB00815 DC    X'0420'
@CB00821 DC    X'0438'
KEYDICT  DS    CL29
         ORG   KEYDICT
KYDDNAME DS    CL13
         ORG   KYDDNAME
DDNAMLEN DC    AL1(13)
DDNAMHEX DC    X'0001'
DDNAMMXL DC    X'0008'
DDNAMMNL DC    X'0001'
DDNAMMXN DC    X'0663'
DDNAMMNN DC    X'0002'
DDNAMKTB DC    X'0000'
         ORG   KEYDICT+13
KYPRMCAT DS    CL13
         ORG   KYPRMCAT
PCATLEN  DC    AL1(13)
PCATHEX  DC    X'0004'
PCATMXL  DC    X'0000'
PCATMNL  DC    X'0000'
PCATMXN  DC    X'0000'
PCATMNN  DC    X'0000'
PCATKTB  DC    X'0004'
         ORG   KEYDICT+26
KYENDDCT DS    CL3
         ORG   KYENDDCT
ENDDCLEN DC    AL1(3)
ENDDCHEX DC    X'FFFF'
         ORG   KEYDICT+29
IEFDB450 CSECT
         DS   0H
PATCHLOC DC ((@DATA-@PSTART)/20)X'00'
@DATD    DSECT
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
IEFDB450 CSECT
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
SVASIZE  EQU   @06
LISTSIZE EQU   @05
J        EQU   @04
I        EQU   @02
TXTUFLDP EQU   @03
SVALISTP EQU   @03
SVABLSTP EQU   @07
R0       EQU   @00
R1       EQU   @01
R15      EQU   @15
CHNGDDNM EQU   0
DDENTRY  EQU   CHNGDDNM
OLDDDNAM EQU   DDENTRY
OLDPOSNO EQU   DDENTRY+8
NEWDDNAM EQU   DDENTRY+10
NEWPOSNO EQU   DDENTRY+18
DSABNTRY EQU   0
SVABLIST EQU   0
SVALIST  EQU   0
SVAENTRY EQU   SVALIST
SVA      EQU   SVAENTRY
SVID     EQU   SVAENTRY+3
INDMSIOT EQU   0
SIOTDSKA EQU   INDMSIOT
SIOTTYPE EQU   INDMSIOT+3
SCTDDNAM EQU   INDMSIOT+4
SCTUSADD EQU   INDMSIOT+20
SIOTBYT1 EQU   INDMSIOT+43
SIOTBYT3 EQU   INDMSIOT+46
SIOTTSTC EQU   INDMSIOT+47
SIOTBYT0 EQU   INDMSIOT+52
SCTSDISP EQU   INDMSIOT+55
SCTSBYT1 EQU   INDMSIOT+56
SCTSBYT2 EQU   INDMSIOT+57
SCTSBYT3 EQU   INDMSIOT+58
SCTSBYT4 EQU   INDMSIOT+59
SCTUTYPE EQU   INDMSIOT+60
SIOTDEVT EQU   SCTUTYPE
SIOUBYT3 EQU   SIOTDEVT+2
SIOTALTD EQU   INDMSIOT+92
SIOTBYT2 EQU   INDMSIOT+103
TIOT1    EQU   0
TIOENTRY EQU   0
TIOESTTA EQU   TIOENTRY+1
TIOERLOC EQU   TIOENTRY+2
TIOELINK EQU   TIOERLOC+1
TIOESYOT EQU   TIOELINK
TIOEDDNM EQU   TIOENTRY+4
TIOESTTC EQU   TIOENTRY+15
TIOESTTB EQU   TIOENTRY+16
POOLSTAR EQU   TIOENTRY+20
TIOMGRRB EQU   0
TIOMFMAP EQU   TIOMGRRB
TIOMCCAT EQU   TIOMFMAP
TIOMTSZE EQU   TIOMGRRB+2
TIOMJSCP EQU   TIOMGRRB+4
TIOMDSAP EQU   TIOMGRRB+20
TEXTUNIT EQU   0
TEXTUNUM EQU   TEXTUNIT+2
TEXTUENT EQU   TEXTUNIT+4
TXTUPLST EQU   0
TXTUNITP EQU   TXTUPLST
TXTUPELM EQU   0
TXTPLENT EQU   TXTUPELM
TEXTUFLD EQU   0
TEXTULEN EQU   TEXTUFLD
TEXTUPRM EQU   TEXTUFLD+2
QDB      EQU   0
IEZJSCB  EQU   0
JSCBSEC1 EQU   IEZJSCB+188
JSCHPCE  EQU   JSCBSEC1+4
JSCBDCB  EQU   JSCBSEC1+36
JSCBOPTS EQU   JSCBSEC1+48
JSCBSWT1 EQU   JSCBSEC1+55
JSCBWTP  EQU   JSCBSEC1+64
JSCBWTFG EQU   JSCBWTP
JSCBEND1 EQU   IEZJSCB+260
DSAB     EQU   0
DSABFCHN EQU   DSAB+4
DSABOPCT EQU   DSAB+14
DSABTIOT EQU   DSAB+16
DSABGIDP EQU   DSAB+24
DSABANMP EQU   DSAB+28
DSABORG  EQU   DSAB+32
DSABORG1 EQU   DSABORG
DSABORG2 EQU   DSABORG+1
DSABFLG1 EQU   DSAB+34
DSABPALC EQU   DSABFLG1
DSABCONV EQU   DSABFLG1
DSABDCAT EQU   DSABFLG1
DSABPCAT EQU   DSABFLG1
DSABCATM EQU   DSABFLG1
DSABNUSE EQU   DSABFLG1
DSABFLG2 EQU   DSAB+35
DSABFLG3 EQU   DSAB+36
DSABFLG4 EQU   DSAB+37
DSABTCBP EQU   DSAB+40
DSABSIOT EQU   DSAB+64
DSABANMI EQU   0
DSABGIDL EQU   0
S99TXTPP EQU   0
RETINFO  EQU   0
ERRCODE  EQU   RETINFO
INFOCODE EQU   RETINFO+2
CONCATLP EQU   0
CCJSCBP  EQU   CONCATLP
CCTCBP   EQU   CONCATLP+8
ALFNCMAP EQU   0
INPUTSW  EQU   ALFNCMAP
PROCESSW EQU   ALFNCMAP+6
ERRPROSW EQU   PROCESSW
DEPARMS  EQU   0
DENQRETN EQU   DEPARMS+232
DEDMYEPA EQU   DEPARMS+240
DEDMYAS  EQU   DEPARMS+260
LASTEPAP EQU   0
SMFPARMS EQU   0
TIOEDEVE EQU   TIOESTTB
TIOSTTB  EQU   TIOEDEVE
TIOMNDSA EQU   TIOMTSZE
DSABQDB  EQU   QDB
DSQFRSTP EQU   DSABQDB+12
DSQLASTP EQU   DSABQDB+16
JSCBSEC2 EQU   JSCBEND1
JSCBSEC3 EQU   JSCBEND1
JSCBJCT  EQU   JSCBSEC3
JSCBJCTA EQU   JSCBJCT+1
JSCBASID EQU   JSCBSEC3+8
JSCBJNL  EQU   JSCBSEC3+28
JSCBJJSB EQU   JSCBJNL
JSCBSUB  EQU   JSCBSEC3+40
JSCDSABQ EQU   JSCBSEC3+60
JSCSCT   EQU   JSCBSEC3+68
JSCRSV35 EQU   JSCBSEC3+96
JSCRSV36 EQU   JSCRSV35
JSCRSV37 EQU   JSCRSV35+2
JSCRSV45 EQU   JSCBSEC3+112
JSCRSV46 EQU   JSCRSV45
JSCRSV47 EQU   JSCRSV45+2
TIOMELEN EQU   TIOMTSZE
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
JSCBEND3 EQU   JSCBSEC3+120
JSCRSV52 EQU   JSCBSEC3+116
JSCRSV51 EQU   JSCRSV47+1
JSCRSV50 EQU   JSCRSV47
JSCRSV49 EQU   JSCRSV46+1
JSCRSV48 EQU   JSCRSV46
JSCRSV44 EQU   JSCBSEC3+108
JSCRSV43 EQU   JSCBSEC3+104
JSCRSV42 EQU   JSCBSEC3+100
JSCRSV41 EQU   JSCRSV37+1
JSCRSV40 EQU   JSCRSV37
JSCRSV39 EQU   JSCRSV36+1
JSCRSV38 EQU   JSCRSV36
JSCBUFPT EQU   JSCBSEC3+92
JSCBACT  EQU   JSCBSEC3+88
JSCBSWSP EQU   JSCBSEC3+87
JSCRSV33 EQU   JSCBSEC3+86
JSCDDNUM EQU   JSCBSEC3+84
JSCRSV53 EQU   JSCBSEC3+82
JSCDDNNO EQU   JSCBSEC3+80
JSCBVATA EQU   JSCBSEC3+76
JSCTMCOR EQU   JSCBSEC3+72
JSCSCTP  EQU   JSCSCT+1
JSCRSV55 EQU   JSCSCT
JSCRSV54 EQU   JSCBSEC3+64
JSCBSSIB EQU   JSCBSEC3+56
JSCBFRBA EQU   JSCBSEC3+48
JSCRSV28 EQU   JSCBSEC3+46
JSCBSONO EQU   JSCBSEC3+44
JSCBSUBA EQU   JSCBSUB+1
JSCRSV31 EQU   JSCBSUB
JSCBSMLR EQU   JSCBSEC3+36
JSCBJNLR EQU   JSCBSEC3+32
JSCBJNLA EQU   JSCBJNL+1
JSCBJSBT EQU   JSCBJJSB
JSCBJSBX EQU   JSCBJJSB
JSCBJSBA EQU   JSCBJJSB
JSCBJSBI EQU   JSCBJJSB
@NM00041 EQU   JSCBJJSB
JSCBJNLE EQU   JSCBJJSB
JSCBJNLF EQU   JSCBJJSB
JSCBJNLN EQU   JSCBJJSB
@NM00040 EQU   JSCBSEC3+24
JSCBJRBA EQU   JSCBSEC3+16
JSCBIECB EQU   JSCBSEC3+12
JSCRSV25 EQU   JSCBSEC3+10
JSCBTJID EQU   JSCBASID
JSCBPSCB EQU   JSCBSEC3+4
JSCJCTP  EQU   JSCBJCTA
JSCRSV24 EQU   JSCBJCT
JSCBEND2 EQU   JSCBSEC2
@NM00030 EQU   DSABQDB+24
DSQBDSP  EQU   DSABQDB+22
DSQFDSP  EQU   DSABQDB+20
DSQBADFC EQU   DSQLASTP
DSQBADBC EQU   DSQFRSTP
DSQNELMS EQU   DSABQDB+8
DSQDBLN  EQU   DSABQDB+6
DSQATTRS EQU   DSABQDB+4
DSQDBID  EQU   DSABQDB
TIOUCBP  EQU   TIOEDEVE+1
TIOVERF  EQU   TIOSTTB
TIOUNLD  EQU   TIOSTTB
TIOMNTD  EQU   TIOSTTB
TIOSETU  EQU   TIOSTTB
TIOVLSR  EQU   TIOSTTB
TIOPVIO  EQU   TIOSTTB
TIOREQD  EQU   TIOSTTB
TIOUSED  EQU   TIOSTTB
SMFBUFLP EQU   SMFPARMS+4
SMFBUF1P EQU   SMFPARMS
@NM00037 EQU   DEPARMS+304
DETCTIOL EQU   DEPARMS+300
DETCTIOP EQU   DEPARMS+296
DETDQLST EQU   DEPARMS+280
DEALASTP EQU   DEPARMS+276
DEASGNP  EQU   DEDMYAS+12
@NM00036 EQU   DEDMYAS
DEWLASTP EQU   DEPARMS+256
DEWRITP  EQU   DEDMYEPA+12
@NM00035 EQU   DEDMYEPA
DEDSNQRC EQU   DENQRETN+4
DEDSNQEN EQU   DENQRETN
DECPYLEN EQU   DEPARMS+228
DECPYLOC EQU   DEPARMS+224
DEJSCB   EQU   DEPARMS+220
DESCT    EQU   DEPARMS+216
DEJCT    EQU   DEPARMS+212
DESIOT   EQU   DEPARMS+208
DETCB    EQU   DEPARMS+204
DEALFMAP EQU   DEPARMS+200
DECORE   EQU   DEPARMS
@NM00034 EQU   PROCESSW+1
HSKPDQSW EQU   PROCESSW+1
DISMSGSW EQU   PROCESSW+1
USERERSW EQU   PROCESSW+1
EPALSISW EQU   PROCESSW+1
EPASCTSW EQU   PROCESSW+1
EPAJCTSW EQU   PROCESSW
FRRPERSW EQU   PROCESSW
DCBSPCSW EQU   PROCESSW
NQEXCLSW EQU   PROCESSW
UNALOCSW EQU   ERRPROSW
DEQDSNSW EQU   ERRPROSW
COPYSW   EQU   PROCESSW
@NM00033 EQU   PROCESSW
@NM00032 EQU   INPUTSW+3
PCATINIT EQU   INPUTSW+3
UNITDEVT EQU   INPUTSW+3
MOUNTSW  EQU   INPUTSW+2
CATLOGSW EQU   INPUTSW+2
TIOTNQSW EQU   INPUTSW+2
OFFLINSW EQU   INPUTSW+2
WTUNTSW  EQU   INPUTSW+2
NORESSW  EQU   INPUTSW+2
WTDSNSW  EQU   INPUTSW+2
WTVOLSW  EQU   INPUTSW+2
@NM00031 EQU   INPUTSW
JOBRLSYS EQU   INPUTSW
NOMONTSW EQU   INPUTSW
NOCNVTSW EQU   INPUTSW
ONCNVTSW EQU   INPUTSW
CCSCTP   EQU   CONCATLP+16
CCJCTP   EQU   CONCATLP+12
CCASCBP  EQU   CONCATLP+4
DSABGRID EQU   DSABGIDL+4
DSABLLEN EQU   DSABGIDL
DSABANAM EQU   DSABANMI+1
DSABANML EQU   DSABANMI
DSABRS04 EQU   DSAB+68
DSABRS03 EQU   DSAB+62
DSABDCBM EQU   DSAB+56
DSABSSCM EQU   DSAB+52
DSABSSNM EQU   DSAB+48
DSABPTTR EQU   DSAB+44
DSABRS02 EQU   DSAB+38
@NM00046 EQU   DSABFLG4
DSABCKSI EQU   DSABFLG4
DSABCKVL EQU   DSABFLG4
DSABCKDS EQU   DSABFLG4
@NM00045 EQU   DSABFLG3
DSABJSCT EQU   DSABFLG3
DSABCATL EQU   DSABFLG3
DSABVMSC EQU   DSABFLG3
DSABVAM  EQU   DSABFLG3
DSABPASS EQU   DSABFLG3
DSABDEFR EQU   DSABFLG3
@NM00044 EQU   DSABFLG2
DSABUNAL EQU   DSABFLG2
DSABIRM  EQU   DSABFLG2
DSABOPEN EQU   DSABFLG2
DSABDCNV EQU   DSABFLG1
DSABDALC EQU   DSABFLG1
@NM00043 EQU   DSABORG2
DSABTR   EQU   DSABORG2
DSABAM   EQU   DSABORG2
@NM00042 EQU   DSABORG2
DSABTQ   EQU   DSABORG2
DSABTX   EQU   DSABORG2
DSABGS   EQU   DSABORG2
DSABU    EQU   DSABORG1
DSABPO   EQU   DSABORG1
DSABMQ   EQU   DSABORG1
DSABCQ   EQU   DSABORG1
DSABCX   EQU   DSABORG1
DSABDA   EQU   DSABORG1
DSABPS   EQU   DSABORG1
DSABIS   EQU   DSABORG1
DSABSSVA EQU   DSAB+21
DSABRS01 EQU   DSAB+20
DSABLNTH EQU   DSAB+12
DSABBCHN EQU   DSAB+8
DSABID   EQU   DSAB
JSCBCSCB EQU   JSCBSEC1+68
JSCBPMG  EQU   JSCBWTP+2
JSCBWTSP EQU   JSCBWTP+1
JSCRSV23 EQU   JSCBWTFG
JSCRSV22 EQU   JSCBWTFG
JSCRSV21 EQU   JSCBWTFG
JSCRSV20 EQU   JSCBWTFG
JSCRSV19 EQU   JSCBWTFG
JSCRSV18 EQU   JSCBWTFG
JSCBRET  EQU   JSCBWTFG
JSCBIOFG EQU   JSCBWTFG
@NM00039 EQU   JSCBSEC1+60
JSCBQMPI EQU   JSCBSEC1+56
JSCBPMSG EQU   JSCBSWT1
JSCRSV16 EQU   JSCBSWT1
JSCRSV15 EQU   JSCBSWT1
JSCRSV14 EQU   JSCBSWT1
JSCRSV13 EQU   JSCBSWT1
JSCRSV12 EQU   JSCBSWT1
JSCRSV11 EQU   JSCBSWT1
JSCBPASS EQU   JSCBSWT1
JSCBTTTR EQU   JSCBSEC1+52
JSCRSV10 EQU   JSCBSEC1+49
JSCBAUTH EQU   JSCBOPTS
JSCSIOTS EQU   JSCBOPTS
JSCRSV08 EQU   JSCBOPTS
JSCRSV07 EQU   JSCBOPTS
JSCRSV06 EQU   JSCBOPTS
JSCBLONG EQU   JSCBOPTS
JSCRSV05 EQU   JSCBOPTS
JSCRSV04 EQU   JSCBOPTS
JSCBSECB EQU   JSCBSEC1+44
JSCRSV03 EQU   JSCBSEC1+41
JSCBSTEP EQU   JSCBSEC1+40
JSCBDCBA EQU   JSCBDCB+1
JSCRSV02 EQU   JSCBDCB
JSCBID   EQU   JSCBSEC1+32
JSCBDBTB EQU   JSCBSEC1+28
JSCBIJSC EQU   JSCBSEC1+24
JSCBTCBP EQU   JSCBSEC1+20
JSCBPCC  EQU   JSCBSEC1+16
JSCBTCP  EQU   JSCBSEC1+12
JSCBSHR  EQU   JSCBSEC1+8
JSCHPCEA EQU   JSCHPCE+1
JSCRSV32 EQU   JSCHPCE
JSCRSV01 EQU   JSCBSEC1
@NM00038 EQU   IEZJSCB
QDBRV002 EQU   QDB+28
QDBPRDS  EQU   QDB+26
QDBPRSZ  EQU   QDB+24
QDBBPTDS EQU   QDB+22
QDBFPTDS EQU   QDB+20
QDBLELMP EQU   QDB+16
QDBFELMP EQU   QDB+12
QDBNELMS EQU   QDB+8
QDBRV001 EQU   QDB+6
QDBATTR  EQU   QDB+4
QDBQDB   EQU   QDB
TXTPLEND EQU   TXTPLENT
TXTUPEND EQU   TXTUNITP
TEXTUPAR EQU   TEXTUENT+2
TEXTULNG EQU   TEXTUENT
TEXTUKEY EQU   TEXTUNIT
TIOMIUSL EQU   TIOMGRRB+36
TIOMPSNP EQU   TIOMGRRB+32
TIOMRETP EQU   TIOMGRRB+28
TIOMSIOP EQU   TIOMGRRB+24
TIOMENTP EQU   TIOMGRRB+16
TIOMSNMP EQU   TIOMGRRB+12
TIOMJNMP EQU   TIOMGRRB+8
@NM00028 EQU   TIOMFMAP+1
@NM00027 EQU   TIOMFMAP+1
@NM00026 EQU   TIOMFMAP+1
@NM00025 EQU   TIOMFMAP+1
@NM00024 EQU   TIOMFMAP+1
@NM00023 EQU   TIOMFMAP+1
@NM00022 EQU   TIOMFMAP+1
TIOMRENT EQU   TIOMFMAP+1
TIOMFREE EQU   TIOMFMAP
TIOMUNAL EQU   TIOMFMAP
TIOMUPD  EQU   TIOMFMAP
TIOMRLSE EQU   TIOMFMAP
TIOMALOC EQU   TIOMFMAP
@NM00021 EQU   TIOMFMAP
TIOMBLD  EQU   TIOMFMAP
TIOTFEND EQU   POOLSTAR+16
TIOPSLOT EQU   POOLSTAR+13
TIOPSTTB EQU   POOLSTAR+12
TIOPPOOL EQU   POOLSTAR+4
TIOPNSRT EQU   POOLSTAR+3
@NM00020 EQU   POOLSTAR+2
TIOPNSLT EQU   POOLSTAR+1
@NM00019 EQU   POOLSTAR
TIOEFSRT EQU   TIOENTRY+17
TIOSVERF EQU   TIOESTTB
TIOSUNLD EQU   TIOESTTB
TIOSMNTD EQU   TIOESTTB
TIOSSETU EQU   TIOESTTB
TIOSVLSR EQU   TIOESTTB
TIOSPVIO EQU   TIOESTTB
TIOSREQD EQU   TIOESTTB
TIOSUSED EQU   TIOESTTB
TIOSBALS EQU   TIOESTTC
TIOSBALP EQU   TIOESTTC
TIOSVOLS EQU   TIOESTTC
TIOSVOLP EQU   TIOESTTC
TIOSAFFS EQU   TIOESTTC
TIOSAFFP EQU   TIOESTTC
TIOSDEFR EQU   TIOESTTC
TIOSDKCR EQU   TIOESTTC
TIOEJFCB EQU   TIOENTRY+12
TIOTREM  EQU   TIOELINK
TIOESSDS EQU   TIOESYOT
TIOESYIN EQU   TIOELINK
TIOEQNAM EQU   TIOELINK
TIOEDYNM EQU   TIOELINK
TIOTTERM EQU   TIOELINK
TIOTRV01 EQU   TIOELINK
TIOSYOUT EQU   TIOELINK
TIOEWTCT EQU   TIOERLOC
TIOSDSP2 EQU   TIOESTTA
TIOSDSP1 EQU   TIOESTTA
TIOSLABL EQU   TIOESTTA
TIOSDADS EQU   TIOESTTA
TIOSJBLB EQU   TIOESTTA
TIOSPLTS EQU   TIOESTTA
TIOSPLTP EQU   TIOESTTA
TIOSLTYP EQU   TIOESTTA
TIOELNGH EQU   TIOENTRY
TIOCSTEP EQU   TIOT1+8
TIOCNJOB EQU   TIOT1
SIODDSNL EQU   INDMSIOT+173
SIOVDSNL EQU   INDMSIOT+172
SIOVDSNT EQU   INDMSIOT+170
SVOLUNNO EQU   INDMSIOT+168
SIOTVMVP EQU   INDMSIOT+164
SIOTJFX  EQU   INDMSIOT+160
SJFCBPTR EQU   INDMSIOT+156
SIOTNPTR EQU   INDMSIOT+152
SIOTETIO EQU   INDMSIOT+148
SIOTATE  EQU   INDMSIOT+144
SVOLUNAD EQU   INDMSIOT+140
SIOTEDLP EQU   INDMSIOT+136
SIOTEDLS EQU   INDMSIOT+132
SIOTRSNC EQU   INDMSIOT+130
SCTANAME EQU   INDMSIOT+122
@NM00018 EQU   INDMSIOT+108
SIOTSSNM EQU   INDMSIOT+104
SIODDQCR EQU   SIOTBYT2
SIOVDQCR EQU   SIOTBYT2
SIOTCVOL EQU   SIOTBYT2
SIOTCNEW EQU   SIOTBYT2
SIOTCALC EQU   SIOTBYT2
SIOTGALL EQU   SIOTBYT2
SIOTDSPD EQU   SIOTBYT2
SIOTDMND EQU   SIOTBYT2
SIOTOPUC EQU   INDMSIOT+99
SIOTOUTR EQU   INDMSIOT+97
SIOTOUTC EQU   INDMSIOT+96
@NM00017 EQU   INDMSIOT+93
SIOTAUNC EQU   SIOTALTD
SIOTACAT EQU   SIOTALTD
SIOTADEL EQU   SIOTALTD
SIOTAKEP EQU   SIOTALTD
SIOTNPRV EQU   SIOTALTD
SIOJCATS EQU   SIOTALTD
@NM00016 EQU   SIOTALTD
@NM00015 EQU   SIOTALTD
@NM00014 EQU   INDMSIOT+91
SIOTNDSB EQU   INDMSIOT+88
@NM00013 EQU   INDMSIOT+84
SIOTDPCD EQU   INDMSIOT+82
@NM00012 EQU   INDMSIOT+81
SCTOUTPN EQU   INDMSIOT+80
SCTOUTNO EQU   INDMSIOT+76
SCTOUTNM EQU   INDMSIOT+68
SIOUCBAD EQU   SCTUTYPE+5
SIOUCNVT EQU   SCTUTYPE+4
SIOUBYT4 EQU   SIOTDEVT+3
@NM00011 EQU   SIOUBYT3
SIO3UREC EQU   SIOUBYT3
SIO3DISP EQU   SIOUBYT3
SIO3DACC EQU   SIOUBYT3
SIO3COMM EQU   SIOUBYT3
SIO3TAPE EQU   SIOUBYT3
SIOUBYT2 EQU   SIOTDEVT+1
SIOUBYT1 EQU   SIOTDEVT
SIOTOMN  EQU   SCTSBYT4
SIOTIPDI EQU   SCTSBYT4
SIOTVAFF EQU   SCTSBYT4
SIOTSTEP EQU   SCTSBYT4
SIOTASCI EQU   SCTSBYT4
@NM00010 EQU   SCTSBYT4
SIOTGDGA EQU   SCTSBYT4
SCTSGDGS EQU   SCTSBYT4
SCTSOLD  EQU   SCTSBYT3
SCTSMOD  EQU   SCTSBYT3
SCTSNEW  EQU   SCTSBYT3
SCTSYSOU EQU   SCTSBYT3
SCTVREF  EQU   SCTSBYT3
@NM00009 EQU   SCTSBYT3
SCTSYSNE EQU   SCTSBYT3
SCTDSNRF EQU   SCTSBYT3
SCTRECVD EQU   SCTSBYT2
SCTDEFER EQU   SCTSBYT2
SCTLABEL EQU   SCTSBYT2
SCTUNLBD EQU   SCTSBYT2
SCTJOBLB EQU   SCTSBYT2
SCTVOLAF EQU   SCTSBYT2
SIOTCATL EQU   SCTSBYT2
SIOCLUNL EQU   SCTSBYT2
SIOTJSCT EQU   SCTSBYT1
SCTUNAFF EQU   SCTSBYT1
SCTPARLM EQU   SCTSBYT1
SIOTQDSN EQU   SCTSBYT1
SIOTGDSN EQU   SCTSBYT1
SIOTCCAT EQU   SCTSBYT1
SCTSYSIN EQU   SCTSBYT1
SCTDUMMY EQU   SCTSBYT1
SIOTUNCT EQU   SCTSDISP
SIOTCTLG EQU   SCTSDISP
SIOTDLET EQU   SCTSDISP
SIOTKEEP EQU   SCTSDISP
SIOTPASS EQU   SCTSDISP
SIOTPRIV EQU   SCTSDISP
S3400DSP EQU   SCTSDISP
@NM00008 EQU   SCTSDISP
SIOTVLCT EQU   INDMSIOT+54
SCTNMBUT EQU   INDMSIOT+53
SIOTRTRY EQU   SIOTBYT0
SIOTPUPV EQU   SIOTBYT0
SIOTNOPV EQU   SIOTBYT0
SIOTGIGN EQU   SIOTBYT0
SPVTAMSG EQU   SIOTBYT0
SIOTFUDA EQU   SIOTBYT0
SIOTDYAL EQU   SIOTBYT0
SIOTSSDS EQU   SIOTBYT0
SIOTGIID EQU   INDMSIOT+50
SCTVOLCT EQU   INDMSIOT+49
SCTSPOOL EQU   INDMSIOT+48
SIOTQNAM EQU   SIOTTSTC
@NM00007 EQU   SIOTTSTC
SIOTTERM EQU   SIOTTSTC
@NM00006 EQU   SIOTTSTC
@NM00005 EQU   SIOTBYT3
SIOTJES3 EQU   SIOTBYT3
SIOCDEVT EQU   SIOTBYT3
SIOALIAS EQU   SIOTBYT3
SCTDDINO EQU   INDMSIOT+44
SIOTDDNT EQU   SIOTBYT1
SIOTALCD EQU   SIOTBYT1
SIODADSM EQU   SIOTBYT1
SIOTDADR EQU   SIOTBYT1
SIODUNAL EQU   SIOTBYT1
SIOVAMDS EQU   SIOTBYT1
SIOTHOLD EQU   SIOTBYT1
SIOTOCKP EQU   SIOTBYT1
SIOPSCNT EQU   INDMSIOT+42
SIOTREFN EQU   INDMSIOT+40
SIOTOTUN EQU   INDMSIOT+39
SIOTVRSB EQU   INDMSIOT+36
@NM00004 EQU   INDMSIOT+35
SCTPJFCB EQU   INDMSIOT+32
@NM00003 EQU   INDMSIOT+31
SCTPSIOT EQU   INDMSIOT+28
SIOTAFID EQU   INDMSIOT+26
@NM00002 EQU   INDMSIOT+24
SIODSNTE EQU   INDMSIOT+22
SIOTUNAF EQU   SCTUSADD
SIOTDEST EQU   INDMSIOT+12
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RC00065 EQU   @RC00064
@RC00157 EQU   @RC00152
@ENDDATA EQU   *
         END   IEFDB450,(C'PLS2338',0603,75037)
