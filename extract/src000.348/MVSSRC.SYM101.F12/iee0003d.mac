         TITLE '   IEE0003D   STAE ENVIRONMENT CREATION MODULE'
         LCLA  &T,&SPN                                            0001
.@001    ANOP                                                     0001
IEE0003D CSECT ,                                                  0001
         BALR  @B,0                                               0001
@PSTART  DS    0H                                                 0001
         USING @PSTART+00000,@B                                   0001
*         GEN(MODID BRANCH=YES);      /* INSERT MODID         @YM00095*
         MODID BRANCH=YES
         DS    0H
*         R2=ADDR(XSASTART);          /* SET PTR TO CURRENT XSA Y02669*
         LA    @2,96(0,@5)                                        0034
*         REG0 = R0;                  /* REGISTER 0.            */
         ST    @0,0(0,@2)                                         0035
*         REG1 = R1;                  /* REGISTER 1.            */
         ST    @1,4(0,@2)                                         0036
*         REG5 = R5;                  /* REGISTER 5.            */
         ST    @5,8(0,@2)                                         0037
*         REG14= R14;                 /* SAVE CALLER RTN ADDR   Y02653*
         ST    @E,12(0,@2)                                        0038
*         REG15= R15;                 /* REGISTER 15.           */
         ST    @F,20(0,@2)                                        0039
*         DXSAP=0;                    /*ZERO DUMMY XSA PTR    @YM6763P*
         SR    @F,@F                                              0040
         ST    @F,24(0,@2)                                        0040
*         RBASE= R11;                 /* SAVE ROUTINE BASE ADDR Y02669*
         ST    @B,36(0,@2)                                        0041
* /************************************************************ Y02653*
* /*      SET UP STAE ENVIRONMENT                               Y02653*
* /************************************************************ Y02653*
*         RESTRICT (R8);              /* RESTRICT PARM BASE     Y02653*
*         R0 = LENGTH(EPARMS);        /* GET LGTH OF STAE AREA  Y02653*
         LA    @0,96                                              0043
*         R0 = R0 × SPXSA;            /* INDICATE SUBPOOL       Y02653*
         O     @0,SPXSA                                           0044
*         GEN(GETMAIN R,LV=(0));      /* GET THE STAE AREA      Y02653*
         GETMAIN R,LV=(0)
         DS    0H
*         STAEP = R1;                 /* SAVE PTR TO STAE AREA  Y02653*
         ST    @1,32(0,@2)                                        0046
*         R8 = R1;                    /* SET BASE TO AREA       Y02653*
         LR    @8,@1                                              0047
*         EPARMS = EPARMS && EPARMS;  /* ZERO THE PARM AREA     Y02653*
         XC    0(96,@8),0(@8)                                     0048
*         PARMRETY = ADDR(COMMEXIT);  /* SET RETRY ADDRESS      Y02653*
         LA    @F,COMMEXIT                                        0049
         ST    @F,8(0,@8)                                         0049
*         PARMTYPE = REG0;            /* PUT SOURCE INFORMATION Y02653*
         MVC   16(4,@8),0(@2)                                     0050
*         R1 = ADDR(PARMMESG);        /* SET ADDR FOR MACRO     Y02653*
         LA    @1,32(0,@8)                                        0051
*         R6 = ADDR(IEE5103D);        /* SET ADDRESS OF EXIT    Y02653*
         L     @9,@V1              ADDRESS OF IEE5103D            0052
         LR    @6,@9                                              0052
*         GEN;
         ESTAE (6),PARAM=(8),RECORD=YES,PURGE=NONE,ASYNCH=YES,         X
               MF=(E,(1))
         DS    0H
*                                       /* ISSUE ESTAE        @ZA08177*
* /************************************************************ Y02669*
* /*      AT THIS POINT, GET AN AREA FOR USE BY SVC 34.         Y02669*
* /************************************************************ Y02669*
*         CALL GETBUFSZ;              /* COMPUTE SIZE OF NEW
*                                        INPUT BUFFER           Y02669*
         BAL   @E,GETBUFSZ                                        0054
*         R0 = LENGTH(XSAMAP)+ R3;    /* GET LGTH OF DUMMY XSA  Y02669*
         LR    @F,@3                                              0055
         AH    @F,@D1                                             0055
         LR    @0,@F                                              0055
*                                     /* AND NEW INPUT BUF      Y02669*
*         R0 = R0 × SPXSA;            /* INDICATE SUBPOOL       Y02669*
         O     @0,SPXSA                                           0056
*         DXSALEN = R0;               /*SAVE LENGTH OF DUMMY    Y02669*
         ST    @0,28(0,@2)                                        0057
*         GEN(GETMAIN R,LV=(0));      /* GET THE DUMMY XSA      Y02669*
         GETMAIN R,LV=(0)
         DS    0H
*                                     /* AND NEW INPUT BUF      Y02669*
*         DXSAP = R1;                 /* SET PTR IN REAL XSA    Y02669*
         ST    @1,24(0,@2)                                        0059
*         R1-> XSAMAP = R1-> XSAMAP && R1-> XSAMAP;          /* Y02669*
         XC    0(204,@1),0(@1)                                    0060
*                                     /* XERO THE AREA          Y02669*
*         R1->REGSAVE = REGSAVE;      /* MOVE REGISTERS SAVED ON
*                                        FIRST ENTRY TO SVC 34
*                                        TO CURRENT XSA.        */
         MVC   0(24,@1),0(@2)                                     0061
*         R2 = R1;                    /* SET BASE OF DUMMY XSA  Y02669*
         LR    @2,@1                                              0062
*         R1 = REG1;                  /*RESTORE ENTERING REG 1  Y02669*
         L     @1,4(0,@2)                                         0063
*         R14 = REG14;                /*RESTORE ENTERING REG 14 Y02669*
         L     @E,12(0,@2)                                        0064
* /************************************************************ Y02669*
* /*      CHECK IF REGISTER 1 ON ENTRY TO THIS MODULE WAS       Y02669*
* /*      NEGATIVE. IF SO THEN GO TO IEE0303D. OTHERWISE        Y02669*
* /*      MOVE COMMAND INTO THE NEW INPUT BUFFER.               Y02669*
* /************************************************************ Y02669*
*         IF R1 <= 0                  /* IF R1 IS NOT POSITIVE, */
*            THEN GOTO TO0303D;       /* CONTINUE WITH SVC.     Y02669*
         LTR   @1,@1                                              0065
         BC    12,TO0303D                                         0066
*         CALL MOVECMD;               /* MOVE CMD FROM OLD BUFFER
*                                        TO NEW BUFFER          Y02669*
         BAL   @E,MOVECMD                                         0067
* /************************************************************ Y02669*
* /*      SCAN FOR COMMAND VERB AND SAVE IT                     Y02669*
* /************************************************************ Y02669*
*         RESTRICT (R6,ENDBUF,VLEN);  /* RESTRICT SCAN REGS     Y02669*
*         ENDBUF = BUFLEN + R1 - 1;   /* CALC BUFF END ADDR.    Y02669*
         LH    @9,@D2                                             0069
         AR    @9,@1                                              0069
         AH    @9,0(0,@1)                                         0069
*         R6 = R1 + 4;                /* BYPASS  COUNT FIELD.   Y02669*
         LA    @6,4                                               0070
         AR    @6,@1                                              0070
* /************************************************************ Y02669*
* /*      IF BUFFER PRECEDED BY  '// ', BYPASS HEADER.          Y02669*
* /************************************************************ Y02669*
*         IF COMBUF(1:3)=XSLASH       /* HEADER PRESENT?        Y02669*
*            THEN R6 = R6 + 3;        /* YES - BUMP PAST IT.    Y02669*
         CLC   0(3,@6),XSLASH                                     0071
         BC    07,@9FF                                            0071
         AH    @6,@D3                                             0072
* /************************************************************ Y02669*
* /*      SCAN PRECEDING BLANKS FOR FIRST CHARACTER OF VERB     */
* /************************************************************ Y02669*
*         DO R6 = R6 TO ENDBUF;       /* SCAN BUFFER            Y02669*
         BC    15,@DO9FD                                          0073
*            IF COMBUF ^= ' '         /* IF CURRENT CHAR IS NOT Y02669*
*               THEN GOTO SAVEPTR;    /* BLANK, SAVE PTR.       Y02669*
@DO9FE   CLI   0(@6),C' '                                         0074
         BC    07,SAVEPTR                                         0075
*         END;                        /* OTHERWISE, SCAN ON.    Y02669*
* /************************************************************ Y02669*
* /*      IF LOOP COMPLETES WITHOUT A HIT, THE COMMAND EXCEEDED */
* /*      THE BUFFER,NO VERB WAS FOUND, OR A NO-OP WAS PRESENT. */
* /************************************************************ Y02669*
*         GOTO TO0303D;               /* HENCE, CALL IEE0303D   Y02669*
         AH    @6,@D4                                             0076
@DO9FD   CR    @6,@9                                              0076
         BC    12,@DO9FE                                          0076
         BC    15,TO0303D                                         0077
*         RESTRICT (R7);              /* RESTRICT PTR SAVE REG. */
* SAVEPTR:R7 = R6;                    /* SAVE PTR TO VERB.      Y02669*
SAVEPTR  LR    @7,@6                                              0079
*         VLEN = R6 + 8;              /* SET MAXIMUM VERB ADDR  Y02669*
         LA    @C,8                                               0080
         AR    @C,@6                                              0080
*         IF VLEN > ENDBUF            /* IF VERB EXCEEDS BUFFER Y02669*
*            THEN VLEN = ENDBUF;      /* LIMIT SEARCH TO BUFFER Y02669*
         CR    @C,@9                                              0081
         BC    12,@9FA                                            0081
         LR    @C,@9                                              0082
* /************************************************************ Y02669*
* /*      SCAN FOR END OF VERB.                                 */
* /************************************************************ Y02669*
*         DO R6 = R6+1 TO VLEN;       /* SCAN FOR END OF VERB.  Y02669*
@9FA     LA    @F,1                                               0083
         AR    @6,@F                                              0083
         BC    15,@DO9F8                                          0083
*            IF COMBUF = ' '          /* IF CURRENT CHAR IS     Y02669*
*               THEN GOTO XDISCAN;    /* BLANK,DISCONTINUE SCAN Y02669*
@DO9F9   CLI   0(@6),C' '                                         0084
         BC    08,XDISCAN                                         0085
*         END;                        /* IF NOT, GET NEXT BYTE. Y02669*
* /************************************************************ Y02669*
* /*      MOVE VERB TO STAE LINKAGE AREA FOR EXIT RTN USE       Y02669*
* /************************************************************ Y02669*
* XDISCAN:PARMLNCM = R6 - R7;         /* SET LENGTH OF COMMAND  Y02653*
         AH    @6,@D4                                             0086
@DO9F8   CR    @6,@C                                              0086
         BC    12,@DO9F9                                          0086
XDISCAN  LR    @F,@6                                              0087
         SR    @F,@7                                              0087
         STH   @F,22(0,@8)                                        0087
*         R6 = R6 - R7 - 1;           /* COMPUTE LEN FOR EXEC   Y02653*
         LH    @F,@D2                                             0088
         SR    @F,@7                                              0088
         AR    @6,@F                                              0088
*         R3 = ADDR(PARMCOMM);        /* ADDR OF SLOT FOR VERB  Y02653*
         LA    @3,24(0,@8)                                        0089
*         GEN(EX    6,XMVC);          /* MOVE VERB TO STAE AREA Y02653*
         EX    6,XMVC
         DS    0H
*         PARMCOMD = '1'B;            /* INDICATE COMD PRESENT  Y02653*
         OI    20(@8),B'00100000'                                 0091
*         RELEASE (R7,ENDBUF,VLEN);   /* RELEASE SCAN REGISTERS Y02669*
* /************************************************************ Y02669*
* /*      CALL IEE0303D                                         Y02669*
* /************************************************************ Y02669*
* TO0303D:R0 = REG0;                  /* RESTORE REG 0          Y02669*
TO0303D  L     @0,0(0,@2)                                         0093
*         R5 = REG5;                  /* RESTORE REG 5          Y02669*
         L     @5,8(0,@2)                                         0094
*         R14 = ADDR(COMMEXIT);       /* SET SVC 34 RTN POINT   Y02669*
         LA    @E,COMMEXIT                                        0095
*         EXITR = ADDR(IEE0303D);     /* GET ADDR OF IEE0303D   Y02669*
         L     @7,@V2              ADDRESS OF IEE0303D            0096
         LR    @F,@7                                              0096
*         GOTO EXITR;                 /* INVOKE IEE0303D        Y02669*
         BCR   15,@F                                              0097
* /************************************************************ Y02669*
* /*      COMMON EXIT POINT                                     Y02669*
* /************************************************************ Y02669*
* COMMEXIT:                                                  /* Y02669*
*         R6 = R15;                   /* SAVE THE RETURN CODE   Y02669*
COMMEXIT LR    @6,@F                                              0098
*         R7 = R0;                    /* SAVE ASID FOR TIOC     Y02669*
         LR    @7,@0                                              0099
*         R5 = CVTPTR;                /* GET ADDRESS OF CVT     Y02669*
         L     @5,CVTPTR                                          0100
*         R5 = R5->CVTTCBP;           /* GET TCB POINTERS       Y02669*
         L     @5,0(0,@5)                                         0101
*         R5 = R5->TCBCURR;           /* GET CURRENT TCB PTR    Y02669*
         L     @5,4(0,@5)                                         0102
*         R5 = R5->TCBRBP;            /* SET RB POINTER         Y02669*
         L     @5,0(0,@5)                                         0103
*         R2 = ADDR(XSASTART);        /* SET XSA BASE           Y02669*
         LA    @2,96(0,@5)                                        0104
*         R11 = RBASE;                /* RESET BASE ADDRESS     Y02653*
         L     @B,36(0,@2)                                        0105
*         R1 = DXSAP;                 /* GET DUMMY ADDRESS      Y02669*
         L     @1,24(0,@2)                                        0106
*         IF R1^= 0 THEN              /*IF NO DUMMY DON'T     @YM6005P*
         LTR   @1,@1                                              0107
         BC    08,@9F5                                            0107
*            DO;                      /*ISSUE FREEMAIN        @YM6005P*
*              R0 = DXSALEN;          /* GET LENGTH TO FREE     Y02669*
         L     @0,28(0,@2)                                        0109
*              GEN(FREEMAIN R,LV=(0),A=(1));                 /* Y02669*
         FREEMAIN R,LV=(0),A=(1)
         DS    0H
*            END;                                           /*@YM6005P*
*         GEN(ESTAE 0);               /* NULLIFY ESTAE          Y02653*
@9F5     EQU   *                                                  0112
         ESTAE 0
         DS    0H
*         R1 = STAEP;                 /* GET ADDR OF STAE AREA  Y02653*
         L     @1,32(0,@2)                                        0113
*         R0 = LENGTH(EPARMS);        /* SET LENGTH OF AREA     Y02653*
         LA    @0,96                                              0114
*         R0 = R0 × SPXSA;            /* SET SUBPOOL FOR FREE   Y02669*
         O     @0,SPXSA                                           0115
*         GEN(FREEMAIN R,LV=(0),A=(1));                      /* Y02669*
         FREEMAIN R,LV=(0),A=(1)
         DS    0H
*         R0 = R7;                    /*PUT ASID  IN REG 0      Y02669*
         LR    @0,@7                                              0117
*         R15 = R6;                   /* SET RETURN CODE        Y02669*
         LR    @F,@6                                              0118
*         R14 = REG14;                /* SET RETURN ADDRESS     Y02669*
         L     @E,12(0,@2)                                        0119
*         RETURN;                                            /* Y02669*
*         GENERATE DATA;              /* EXECUTE TO MOVE VERB   Y02669*
* GETBUFSZ: PROC OPTIONS(DONTSAVE,NOSAVEAREA);
@EL01    BCR   15,@E                                              0122
GETBUFSZ EQU   *                                                  0122
* /*************************************************************Y02669*
* /* THIS ROUTINE CALCULATES THE LENGTH FOR A NEW INPUT         Y02669*
* /* BUFFER. IT ADDS 24 BYTES TO THE LENGTH OF THE OLD INPUT    Y02669*
* /* BUFFER, DIVIDES THIS LENGTH BY 8 TO DETERMINE THE NUMBER   Y02669*
* /* OF DOUBLE WORDS NEEDED (GETMAIN GETS CORE IN DOUBLE        Y02669*
* /* WORD INCREMENTS) DISREGARDING THE REMAINDER IF ANY.        Y02669*
* /* THE DOUBLEWORDS ARE CHANGED BACK TO BYTES BY MULTIPLYING   Y02669*
* /* BY 8. THIS QUANTITY IS SAVED IN REG 3 TO BE PASSED TO      Y02669*
* /* GETMAIN.  IF REGISTER 1 IS NEGATIVE NO NEW INPUT BUFFER    Y02669*
* /* IS NEEDED SO REGISTER 3 IS ZEROED OUT.                     Y02669*
* /*************************************************************Y02669*
* RESTRICT (R1,R2,R3,R4,R9);
* R9 = R14;                           /* SAVE RETURN ADDRESS    Y02669*
         LR    @9,@E                                              0124
* R1 = REG1;                          /*GET PTR TO OLD BUFFER   Y02669*
         L     @1,4(0,@2)                                         0125
* IF R1 > 0 THEN                      /*CK IF BUF PTR IS NEG    Y02669*
         LTR   @1,@1                                              0126
         BC    12,@9F4                                            0126
*    DO;                              /*NO, THEN CONTINUE       Y02669*
*       R3 = BUFLEN;                  /*GET LENGTH OF OLD BUF   Y02669*
         LH    @3,0(0,@1)                                         0128
*       R3 = R3 + 24;               /*ADD 24 BYTES TO OLD LEN @YM4372P*
         AH    @3,@D5                                             0129
*       R3 = R3/8;                    /*CALCULATE THE NUMBER    Y02669*
         LR    @E,@3                                              0130
         SRA   @E,3                                               0130
         LR    @3,@E                                              0130
*                                     /*OF DOUBLE WORDS NEEDED  Y02669*
*                                     /*DISREGARD THE REMAINDER Y02669*
*       R3 = R3 * 8;                  /*CALCULATE THE NUMBER    Y02669*
         SLA   @3,3                                               0131
         BC    15,@9F3                                            0133
*                                     /*OF BYTES NEEDED         Y02669*
*    END;
* ELSE R3 = 0;                        /*YES,NO BUFFER NEEDED    Y02669*
@9F4     SR    @3,@3                                              0133
*                                     /*ON OUR WAY TO IEE0303D  Y02669*
* R14 = R9;                           /*RESTORE RETURN ADDRESS  Y02669*
@9F3     LR    @E,@9                                              0134
* END;
@EL02    BCR   15,@E                                              0135
* MOVECMD: PROC OPTIONS(DONTSAVE,NOSAVEAREA);
MOVECMD  EQU   *                                                  0136
* /*************************************************************Y02669*
* /* THIS ROUTINE MOVES THE COMMAND FROM THE OLD BUFFER TO      Y02669*
* /* THE NEW BUFFER. THE NEW BUFFER IS BLANKED OUT AND THE      Y02669*
* /* LENGTH OF THE OLD BUFFER MOVED INTO THE LENGTH FIELD OF    Y02669*
* /* THE NEW BUFFER.  A NEW BUFFER HAS NOW BEEN CREATED THAT    Y02669*
* /* IS LONGER THEN THE LENGTH FIELD INDICATES. THIS IS NEEDED  Y02669*
* /* TO PREVENT KEYWORD SCANS FROM EXCEEDING THE END OF THE     Y02669*
* /* BUFFER.                                                    Y02669*
* /*************************************************************Y02669*
*         RESTRICT (R1,R2,R3,R4,R9);
*         R9 = R14;                   /*SAVE RETURN ADDRESS     Y02669*
         LR    @9,@E                                              0138
*         R1 = R2 + LENGTH(XSAMAP);   /*GET PTR TO NEW BUF      Y02669*
         LA    @1,204(0,@2)                                       0139
*         R1->COMBUF(1)= ' ';         /*BLANK OUT THE NEW BUF   Y02669*
         MVI   0(@1),C' '                                         0140
*         R1->COMBUF(2:R3)=R1->COMBUF(1:R3-1); /*PROPAGATE BLNK Y02669*
         LR    @E,@1                                              0141
         LR    @5,@3                                              0141
         SH    @5,@D6                                             0141
         LA    @A,1(0,@1)                                         0141
         EX    @5,@MVC                                            0141
*         R3 = REG1;                  /*GET PTR TO OLD CMD BUF  Y02669*
         L     @3,4(0,@2)                                         0142
*         R4 = R3->BUFLEN;            /*GET LEN OF OLD CMD BUF  Y02669*
         LH    @4,0(0,@3)                                         0143
*         BUFLEN= R3->BUFLEN +8; /*INCREASE NEW BUFFER LENGTH @YM4372P*
         LA    @F,8                                               0144
         AH    @F,0(0,@3)                                         0144
         STH   @F,0(0,@1)                                         0144
*         R1 ->COMBUF(3:4)= R3->COMBUF(3:4); /*MOVE IN REST   @YM4372P*
         MVC   2(2,@1),2(@3)                                      0145
*                                       /* OF FIRST WORD      @YM4372P*
*         R4 = R4-4;                  /*SUBTRACT 4 FOR LENGTH   Y02669
*                                       FIELD OF OLD BUFFER     Y02669*
         SH    @4,@D7                                             0146
*         R1 ->COMBUF(5:R4+4) = R3->COMBUF(5:R4+4);
         LA    @E,4(0,@3)                                         0147
         LA    @5,4                                               0147
         AR    @5,@4                                              0147
         SH    @5,@D8                                             0147
         LA    @A,4(0,@1)                                         0147
         EX    @5,@MVC                                            0147
*                                     /*COPY CMD FROM OLD BUF   Y02669
*                                       TO NEW BUFFER           Y02669*
*         REG1 = R1;                  /*NEW BUF PTR TO SAVAREA  Y02669*
         ST    @1,4(0,@2)                                         0148
*         R14 = R9;                   /*RESTORE RETURN ADDRESS  Y02669*
         LR    @E,@9                                              0149
* END;
@EL03    BCR   15,@E                                              0150
*         END IEE0003D                /* END OF PROCEDURE.      */
* /* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.
* /*%INCLUDE SYSLIB  (IEEXSA  )
* /*%INCLUDE SYSLIB  (IKJTCB  )
* /*%INCLUDE SYSLIB  (CVT     )
* ;
@DATA1   EQU   *
@0       EQU   00                  EQUATES FOR REGISTERS 0-15
@1       EQU   01
@2       EQU   02
@3       EQU   03
@4       EQU   04
@5       EQU   05
@6       EQU   06
@7       EQU   07
@8       EQU   08
@9       EQU   09
@A       EQU   10
@B       EQU   11
@C       EQU   12
@D       EQU   13
@E       EQU   14
@F       EQU   15
@D1      DC    H'204'
@D2      DC    H'-1'
@D3      DC    H'3'
@D4      DC    H'1'
@D5      DC    H'24'
@D6      DC    H'2'
@D7      DC    H'4'
@D8      DC    H'5'
@MVC     MVC   0(1,@A),0(@E)
@V1      DC    V(IEE5103D)
@V2      DC    V(IEE0303D)
         DS    0F
         DS    0D
@DATA    EQU   *
R0       EQU   00000000            FULLWORD POINTER REGISTER
R1       EQU   00000001            3  BYTE  POINTER REGISTER
R2       EQU   00000002            FULLWORD POINTER REGISTER
R3       EQU   00000003            FULLWORD POINTER REGISTER
R4       EQU   00000004            FULLWORD POINTER REGISTER
R5       EQU   00000005            FULLWORD POINTER REGISTER
R6       EQU   00000006            FULLWORD POINTER REGISTER
R7       EQU   00000007            FULLWORD POINTER REGISTER
R8       EQU   00000008            FULLWORD POINTER REGISTER
R9       EQU   00000009            FULLWORD POINTER REGISTER
ENDBUF   EQU   00000009            FULLWORD POINTER REGISTER
VLEN     EQU   00000012            FULLWORD POINTER REGISTER
R11      EQU   00000011            FULLWORD POINTER REGISTER
R14      EQU   00000014            FULLWORD POINTER REGISTER
R15      EQU   00000015            FULLWORD POINTER REGISTER
EXITR    EQU   00000015            FULLWORD POINTER REGISTER
XSAMAP   EQU   00000000            204 BYTE(S) ON WORD
XASVRB   EQU   XSAMAP+00000000     48 BYTE(S) ON WORD
XSA      EQU   XSAMAP+00000000     8 BYTE(S) ON WORD
XAP      EQU   XSAMAP+00000000     FULLWORD POINTER
XAD      EQU   XSAMAP+00000004     FULLWORD POINTER
XAX      EQU   XSAMAP+00000008     8 BYTE(S) ON WORD
A00000   EQU   XSAMAP+00000016     FULLWORD INTEGER
XAE      EQU   XSAMAP+00000016     1 BYTE(S)
XAR      EQU   XSAMAP+00000017     3  BYTE  POINTER ON WORD+1
A00001   EQU   XSAMAP+00000020     FULLWORD INTEGER
XAN      EQU   XSAMAP+00000020     1 BYTE(S)
XAL      EQU   XSAMAP+00000021     3  BYTE  POINTER ON WORD+1
XAV      EQU   XSAMAP+00000024     8 BYTE(S) ON WORD
XAS      EQU   XSAMAP+00000032     8 BYTE(S) ON WORD
XAU      EQU   XSAMAP+00000040     1 BYTE(S)
A00002   EQU   XSAMAP+00000041     1 BYTE(S)
XAA      EQU   XSAMAP+00000042     HALFWORD INTEGER
XAK      EQU   XSAMAP+00000044     FULLWORD INTEGER
XASAVLOC EQU   XSAMAP+00000048     4*FULLWORD INTEGER
XASAVLOX EQU   XSAMAP+00000048     16 BYTE(S) ON WORD
XASAVLC1 EQU   XSAMAP+00000048     FULLWORD INTEGER
XASAVLC2 EQU   XSAMAP+00000052     FULLWORD INTEGER
XASAVLC3 EQU   XSAMAP+00000056     FULLWORD INTEGER
XASAVLC4 EQU   XSAMAP+00000060     FULLWORD INTEGER
XASAVSTD EQU   XSAMAP+00000064     18*FULLWORD INTEGER
XASAVSTR EQU   XSAMAP+00000064     72 BYTE(S) ON WORD
XASAVSDA EQU   XSAMAP+00000064     FULLWORD INTEGER
XASAVSDB EQU   XSAMAP+00000068     FULLWORD INTEGER
XASAVSDC EQU   XSAMAP+00000072     FULLWORD INTEGER
XASAVSDD EQU   XSAMAP+00000076     FULLWORD INTEGER
XASAVSDE EQU   XSAMAP+00000080     FULLWORD INTEGER
XASAVSDF EQU   XSAMAP+00000084     FULLWORD INTEGER
XASAVSDG EQU   XSAMAP+00000088     FULLWORD INTEGER
XASAVSDH EQU   XSAMAP+00000092     FULLWORD INTEGER
XASAVSDI EQU   XSAMAP+00000096     FULLWORD INTEGER
XASAVSDJ EQU   XSAMAP+00000100     FULLWORD INTEGER
XASAVSDK EQU   XSAMAP+00000104     FULLWORD INTEGER
XASAVSDL EQU   XSAMAP+00000108     FULLWORD INTEGER
XASAVSDM EQU   XSAMAP+00000112     FULLWORD INTEGER
XASAVSDN EQU   XSAMAP+00000116     FULLWORD INTEGER
XASAVSDO EQU   XSAMAP+00000120     FULLWORD INTEGER
XASAVSDP EQU   XSAMAP+00000124     FULLWORD INTEGER
XASAVSDQ EQU   XSAMAP+00000128     FULLWORD INTEGER
XASAVSDR EQU   XSAMAP+00000132     FULLWORD INTEGER
EEXSAS01 EQU   00000000            48 BYTE(S) ON WORD
XAH      EQU   EEXSAS01+00000000   4 BYTE(S)
XAI      EQU   EEXSAS01+00000004   8 BYTE(S)
XAF      EQU   EEXSAS01+00000012   8 BYTE(S)
XAT      EQU   EEXSAS01+00000020   24 BYTE(S)
A00003   EQU   EEXSAS01+00000044   FULLWORD INTEGER
EEXSAS02 EQU   00000004            4 BYTE(S) ON WORD
XADUSWIT EQU   EEXSAS02+00000000   1 BYTE(S)
XAXPAREN EQU   EEXSAS02+00000000   1 BIT(S)
XAIPAREN EQU   EEXSAS02+00000000   1 BIT(S)
XARES2   EQU   EEXSAS02+00000000   1 BIT(S)
XAUDVC   EQU   EEXSAS02+00000000   1 BIT(S)
XARES3   EQU   EEXSAS02+00000000   1 BIT(S)
XAIOCOMP EQU   EEXSAS02+00000000   1 BIT(S)
XAOUNIT  EQU   EEXSAS02+00000000   1 BIT(S)
XAUBLANK EQU   EEXSAS02+00000000   1 BIT(S)
XADRES1  EQU   EEXSAS02+00000001   1 BYTE(S)
XACAHOLD EQU   EEXSAS02+00000002   2 BYTE(S)
EEXSAS03 EQU   00000032            8 BYTE(S) ON WORD
XASCID   EQU   EEXSAS03+00000000   1  BYTE  POINTER
XASDID   EQU   EEXSAS03+00000001   1 BYTE(S)
XASDS    EQU   EEXSAS03+00000002   1 BYTE(S)
XASSDS1  EQU   EEXSAS03+00000002   1 BIT(S)
XASSDS2  EQU   EEXSAS03+00000002   1 BIT(S)
XASSDS3  EQU   EEXSAS03+00000002   1 BIT(S)
XASSDS4  EQU   EEXSAS03+00000002   1 BIT(S)
XASSDS5  EQU   EEXSAS03+00000002   1 BIT(S)
XASSDS6  EQU   EEXSAS03+00000002   1 BIT(S)
XASSDS7  EQU   EEXSAS03+00000002   1 BIT(S)
XASSDS8  EQU   EEXSAS03+00000002   1 BIT(S)
XASPLS3  EQU   EEXSAS03+00000003   1  BYTE  POINTER
A00004   EQU   EEXSAS03+00000004   FULLWORD INTEGER
XASTSAVE EQU   EEXSAS03+00000004   1  BYTE  POINTER
XASOPTR  EQU   EEXSAS03+00000005   3  BYTE  POINTER ON WORD+1
EEXSAS04 EQU   00000008            8 BYTE(S) ON WORD
XAXMASK  EQU   EEXSAS04+00000000   1 BYTE(S)
XAXJOBS  EQU   EEXSAS04+00000000   1 BIT(S)
XAXJOBSL EQU   EEXSAS04+00000000   1 BIT(S)
A00005   EQU   EEXSAS04+00000000   2 BIT(S)
XAXTS    EQU   EEXSAS04+00000000   1 BIT(S)
XAXTSL   EQU   EEXSAS04+00000000   1 BIT(S)
A00006   EQU   EEXSAS04+00000000   2 BIT(S)
XAXFREE  EQU   EEXSAS04+00000001   1 BYTE(S)
XAXUTME  EQU   EEXSAS04+00000002   HALFWORD INTEGER
XAXSACB  EQU   EEXSAS04+00000004   FULLWORD POINTER
EEXSAS05 EQU   00000032            8 BYTE(S) ON WORD
XASOPCOD EQU   EEXSAS05+00000000   1 BYTE(S)
XACON    EQU   EEXSAS05+00000000   1 BIT(S)
XARESA   EQU   EEXSAS05+00000000   1 BIT(S)
XAON     EQU   EEXSAS05+00000000   1 BIT(S)
XAOFF    EQU   EEXSAS05+00000000   1 BIT(S)
XARESB   EQU   EEXSAS05+00000000   1 BIT(S)
XALTCOM  EQU   EEXSAS05+00000000   1 BIT(S)
XACMD    EQU   EEXSAS05+00000000   1 BIT(S)
XALTCON  EQU   EEXSAS05+00000000   1 BIT(S)
XASWITCH EQU   EEXSAS05+00000001   1 BYTE(S)
XAROUT   EQU   EEXSAS05+00000001   1 BIT(S)
XAHRDCMD EQU   EEXSAS05+00000001   1 BIT(S)
XALTCHG  EQU   EEXSAS05+00000001   1 BIT(S)
XAINHDCP EQU   EEXSAS05+00000001   1 BIT(S)
XACOMPMS EQU   EEXSAS05+00000001   1 BIT(S)
XASTHDCP EQU   EEXSAS05+00000001   1 BIT(S)
XAHRDREQ EQU   EEXSAS05+00000001   1 BIT(S)
XASMF42  EQU   EEXSAS05+00000001   1 BIT(S)
XASMF44  EQU   EEXSAS05+00000001   1 BIT(S)
XARES1   EQU   EEXSAS05+00000001   1 BIT(S)
XARESV   EQU   EEXSAS05+00000002   1 BYTE(S)
XACENDCK EQU   EEXSAS05+00000002   1 BIT(S)
XACRT2   EQU   EEXSAS05+00000002   1 BIT(S)
XALTPTR  EQU   EEXSAS05+00000003   1 BYTE(S)
XACMDATH EQU   EEXSAS05+00000004   2 BYTE(S)
XARTCODE EQU   EEXSAS05+00000006   2 BYTE(S)
EEXSAS06 EQU   00000042            2 BYTE(S) ON WORD
XAAVRANG EQU   EEXSAS06+00000000   1 BYTE(S)
XAARNG1  EQU   EEXSAS06+00000000   1 BIT(S)
XAARNG2  EQU   EEXSAS06+00000000   1 BIT(S)
XAARNG3  EQU   EEXSAS06+00000000   1 BIT(S)
XAARNG4  EQU   EEXSAS06+00000000   1 BIT(S)
XAARNG5  EQU   EEXSAS06+00000000   1 BIT(S)
XAARNG6  EQU   EEXSAS06+00000000   1 BIT(S)
XAARNG7  EQU   EEXSAS06+00000000   1 BIT(S)
XAARNG8  EQU   EEXSAS06+00000000   1 BIT(S)
XAAVRNG2 EQU   EEXSAS06+00000001   1 BYTE(S)
XAARNG9  EQU   EEXSAS06+00000001   1 BIT(S)
XAARNG10 EQU   EEXSAS06+00000001   1 BIT(S)
XAARNG11 EQU   EEXSAS06+00000001   1 BIT(S)
XAARNG12 EQU   EEXSAS06+00000001   1 BIT(S)
XAARNG13 EQU   EEXSAS06+00000001   1 BIT(S)
XAARNG14 EQU   EEXSAS06+00000001   1 BIT(S)
XAARNG15 EQU   EEXSAS06+00000001   1 BIT(S)
XAARNG16 EQU   EEXSAS06+00000001   1 BIT(S)
TCBFIX   EQU   00000032            32 BYTE(S) ON DWORD
TCBFRS   EQU   TCBFIX+00000000     32 BYTE(S) ON DWORD
TCBFRS0  EQU   TCBFIX+00000000     8 BYTE(S) ON DWORD
TCBFRS2  EQU   TCBFIX+00000008     8 BYTE(S) ON DWORD
TCBFRS4  EQU   TCBFIX+00000016     8 BYTE(S) ON DWORD
TCBFRS6  EQU   TCBFIX+00000024     8 BYTE(S) ON DWORD
TCB      EQU   00000000            296 BYTE(S) ON DWORD
TCBRBP   EQU   TCB+00000000        FULLWORD POINTER
TCBPIE   EQU   TCB+00000004        FULLWORD POINTER
TCBPMASK EQU   TCB+00000004        1 BYTE(S)
A00007   EQU   TCB+00000004        4 BIT(S)
TCBPM    EQU   TCB+00000004        4 BIT(S)
TCBPIEA  EQU   TCB+00000005        3  BYTE  POINTER ON WORD+1
TCBDEB   EQU   TCB+00000008        FULLWORD POINTER
TCBTIO   EQU   TCB+00000012        FULLWORD POINTER
TCBCMP   EQU   TCB+00000016        4 BYTE(S) ON WORD
TCBCMPF  EQU   TCB+00000016        1 BYTE(S)
TCBCREQ  EQU   TCB+00000016        1 BIT(S)
TCBCSTEP EQU   TCB+00000016        1 BIT(S)
TCBCPP   EQU   TCB+00000016        1 BIT(S)
TCBDMPO  EQU   TCB+00000016        1 BIT(S)
TCBSTCC  EQU   TCB+00000016        1 BIT(S)
TCBNOCC  EQU   TCB+00000016        1 BIT(S)
TCBCDBL  EQU   TCB+00000016        1 BIT(S)
TCBCASID EQU   TCB+00000016        1 BIT(S)
TCBCWTO  EQU   TCB+00000016        1 BIT(S)
TCBRV316 EQU   TCB+00000016        1 BIT(S)
TCBCIND  EQU   TCB+00000016        1 BIT(S)
TCBRV317 EQU   TCB+00000016        1 BIT(S)
TCBCMSG  EQU   TCB+00000016        1 BIT(S)
TCBRV318 EQU   TCB+00000016        1 BIT(S)
TCBCMPC  EQU   TCB+00000017        3 BYTE(S)
TCBTRN   EQU   TCB+00000020        FULLWORD POINTER
TCBABF   EQU   TCB+00000020        1 BYTE(S)
TCBMOD91 EQU   TCB+00000020        1 BIT(S)
TCBNOCHK EQU   TCB+00000020        1 BIT(S)
TCBGRPH  EQU   TCB+00000020        1 BIT(S)
TCBRSV01 EQU   TCB+00000020        1 BIT(S)
TCBTCPP  EQU   TCB+00000020        1 BIT(S)
TCBTCP   EQU   TCB+00000020        1 BIT(S)
TCBOLTEP EQU   TCB+00000020        1 BIT(S)
TCBRSV02 EQU   TCB+00000020        1 BIT(S)
TCBTRNB  EQU   TCB+00000021        3  BYTE  POINTER ON WORD+1
TCBMSS   EQU   TCB+00000024        FULLWORD POINTER
TCBRSV03 EQU   TCB+00000024        1  BYTE  POINTER
TCBMSSB  EQU   TCB+00000025        3  BYTE  POINTER ON WORD+1
TCBPKF   EQU   TCB+00000028        1 BYTE(S)
TCBFLAG  EQU   TCB+00000028        4 BIT(S)
TCBZERO  EQU   TCB+00000028        4 BIT(S)
TCBFLGS  EQU   TCB+00000029        5 BYTE(S)
TCBFLGS1 EQU   TCB+00000029        1 BYTE(S)
TCBFA    EQU   TCB+00000029        1 BIT(S)
TCBFE    EQU   TCB+00000029        1 BIT(S)
TCBFERA  EQU   TCB+00000029        1 BIT(S)
TCBRSV04 EQU   TCB+00000029        1 BIT(S)
TCBPDUMP EQU   TCB+00000029        1 BIT(S)
TCBFT    EQU   TCB+00000029        1 BIT(S)
TCBFS    EQU   TCB+00000029        1 BIT(S)
TCBFX    EQU   TCB+00000029        1 BIT(S)
TCBFLGS2 EQU   TCB+00000030        1 BYTE(S)
TCBFOINP EQU   TCB+00000030        1 BIT(S)
TCBFSTI  EQU   TCB+00000030        1 BIT(S)
TCBFABOP EQU   TCB+00000030        1 BIT(S)
TCBFSMC  EQU   TCB+00000030        1 BIT(S)
TCBFJMC  EQU   TCB+00000030        1 BIT(S)
TCBFDSOP EQU   TCB+00000030        1 BIT(S)
TCBFETXR EQU   TCB+00000030        1 BIT(S)
TCBFTS   EQU   TCB+00000030        1 BIT(S)
TCBFLGS3 EQU   TCB+00000031        1 BYTE(S)
TCBFSM   EQU   TCB+00000031        1 BIT(S)
TCBADINP EQU   TCB+00000031        1 BIT(S)
TCBABTRM EQU   TCB+00000031        1 BIT(S)
TCBABGM  EQU   TCB+00000031        1 BIT(S)
TCBRSV06 EQU   TCB+00000031        1 BIT(S)
TCBRSV07 EQU   TCB+00000031        1 BIT(S)
TCBRSV08 EQU   TCB+00000031        1 BIT(S)
TCBDWSTA EQU   TCB+00000031        1 BIT(S)
TCBFLGS4 EQU   TCB+00000032        1 BYTE(S)
TCBNDUMP EQU   TCB+00000032        1 BIT(S)
TCBSER   EQU   TCB+00000032        1 BIT(S)
TCBRQENA EQU   TCB+00000032        1 BIT(S)
TCBHNDSP EQU   TCB+00000032        1 BIT(S)
TCBUXNDV EQU   TCB+00000032        1 BIT(S)
TCBMPCVQ EQU   TCB+00000032        1 BIT(S)
TCBMPCND EQU   TCB+00000032        1 BIT(S)
TCBONDSP EQU   TCB+00000032        1 BIT(S)
TCBFLGS5 EQU   TCB+00000033        1 BYTE(S)
TCBFC    EQU   TCB+00000033        1 BIT(S)
TCBABWF  EQU   TCB+00000033        1 BIT(S)
TCBUXNDF EQU   TCB+00000033        1 BIT(S)
TCBPAGE  EQU   TCB+00000033        1 BIT(S)
TCBANDSP EQU   TCB+00000033        1 BIT(S)
TCBSYS   EQU   TCB+00000033        1 BIT(S)
TCBSTP   EQU   TCB+00000033        1 BIT(S)
TCBFCD1  EQU   TCB+00000033        1 BIT(S)
TCBPNDSP EQU   TCB+00000033        1 BIT(S)
TCBLMP   EQU   TCB+00000034        1  BYTE  POINTER
TCBDSP   EQU   TCB+00000035        1  BYTE  POINTER
TCBLLS   EQU   TCB+00000036        FULLWORD POINTER
TCBJLB   EQU   TCB+00000040        FULLWORD POINTER
TCBJPQ   EQU   TCB+00000044        FULLWORD POINTER
TCBPURGE EQU   TCB+00000044        1 BYTE(S)
TCBJPQF  EQU   TCB+00000044        1 BIT(S)
TCBRSV09 EQU   TCB+00000044        1 BIT(S)
TCBRSV10 EQU   TCB+00000044        1 BIT(S)
TCBRSV11 EQU   TCB+00000044        1 BIT(S)
TCBRSV12 EQU   TCB+00000044        1 BIT(S)
TCBRSV13 EQU   TCB+00000044        1 BIT(S)
TCBRSV14 EQU   TCB+00000044        1 BIT(S)
TCBRSV15 EQU   TCB+00000044        1 BIT(S)
TCBJPQB  EQU   TCB+00000045        3  BYTE  POINTER ON WORD+1
TCBGRS   EQU   TCB+00000048        64 BYTE(S) ON WORD
TCBGRS0  EQU   TCB+00000048        FULLWORD POINTER
TCBGRS1  EQU   TCB+00000052        FULLWORD POINTER
TCBGRS2  EQU   TCB+00000056        FULLWORD POINTER
TCBGRS3  EQU   TCB+00000060        FULLWORD POINTER
TCBGRS4  EQU   TCB+00000064        FULLWORD POINTER
TCBGRS5  EQU   TCB+00000068        FULLWORD POINTER
TCBGRS6  EQU   TCB+00000072        FULLWORD POINTER
TCBGRS7  EQU   TCB+00000076        FULLWORD POINTER
TCBGRS8  EQU   TCB+00000080        FULLWORD POINTER
TCBGRS9  EQU   TCB+00000084        FULLWORD POINTER
TCBGRS10 EQU   TCB+00000088        FULLWORD POINTER
TCBGRS11 EQU   TCB+00000092        FULLWORD POINTER
TCBGRS12 EQU   TCB+00000096        FULLWORD POINTER
TCBGRS13 EQU   TCB+00000100        FULLWORD POINTER
TCBGRS14 EQU   TCB+00000104        FULLWORD POINTER
TCBGRS15 EQU   TCB+00000108        FULLWORD POINTER
TCBFSA   EQU   TCB+00000112        FULLWORD POINTER
TCBQEL   EQU   TCB+00000112        1  BYTE  POINTER
TCBFSAB  EQU   TCB+00000113        3  BYTE  POINTER ON WORD+1
TCBTCB   EQU   TCB+00000116        FULLWORD POINTER
TCBTME   EQU   TCB+00000120        FULLWORD POINTER
TCBTQET  EQU   TCB+00000120        1 BIT(S)
TCBJSTCB EQU   TCB+00000124        FULLWORD POINTER
TCBRSV16 EQU   TCB+00000124        1  BYTE  POINTER
TCBJSTCA EQU   TCB+00000125        3  BYTE  POINTER ON WORD+1
TCBNTC   EQU   TCB+00000128        FULLWORD POINTER
TCBOTC   EQU   TCB+00000132        FULLWORD POINTER
TCBLTC   EQU   TCB+00000136        FULLWORD POINTER
TCBIQE   EQU   TCB+00000140        FULLWORD POINTER
TCBECB   EQU   TCB+00000144        FULLWORD POINTER
TCBTSFLG EQU   TCB+00000148        8 BIT(S)
TCBTSTSK EQU   TCB+00000148        1 BIT(S)
TCBRV300 EQU   TCB+00000148        1 BIT(S)
TCBSTPPR EQU   TCB+00000148        1 BIT(S)
TCBATT   EQU   TCB+00000148        1 BIT(S)
TCBTIOTG EQU   TCB+00000148        1 BIT(S)
TCBRSV17 EQU   TCB+00000148        1 BIT(S)
TCBRSV18 EQU   TCB+00000148        1 BIT(S)
TCBDYDSP EQU   TCB+00000148        1 BIT(S)
TCBCPUBN EQU   TCB+00000148        1 BIT(S)
TCBSTPCT EQU   TCB+00000149        1  BYTE  POINTER
TCBTSLP  EQU   TCB+00000150        1  BYTE  POINTER
TCBTSDP  EQU   TCB+00000151        1 BYTE(S)
TCBPQE   EQU   TCB+00000152        FULLWORD POINTER
TCBAQE   EQU   TCB+00000156        FULLWORD POINTER
TCBSTAB  EQU   TCB+00000160        FULLWORD POINTER
TCBNSTAE EQU   TCB+00000160        1 BYTE(S)
TCBSTABE EQU   TCB+00000160        1 BIT(S)
TCBQUIES EQU   TCB+00000160        1 BIT(S)
TCB33E   EQU   TCB+00000160        1 BIT(S)
TCBPPSUP EQU   TCB+00000160        1 BIT(S)
TCBHALT  EQU   TCB+00000160        1 BIT(S)
TCBSYNCH EQU   TCB+00000160        1 BIT(S)
TCBRV301 EQU   TCB+00000160        1 BIT(S)
TCBSTCUR EQU   TCB+00000160        1 BIT(S)
TCBSTABB EQU   TCB+00000161        3  BYTE  POINTER ON WORD+1
TCBTCT   EQU   TCB+00000164        FULLWORD POINTER
TCBTCTGF EQU   TCB+00000164        8 BIT(S)
TCBSMFGF EQU   TCB+00000164        1 BIT(S)
TCBRSV20 EQU   TCB+00000164        1 BIT(S)
TCBRSV97 EQU   TCB+00000164        1 BIT(S)
TCBRSV98 EQU   TCB+00000164        1 BIT(S)
TCBRSV99 EQU   TCB+00000164        1 BIT(S)
TCBRSV9A EQU   TCB+00000164        1 BIT(S)
TCBRSV9B EQU   TCB+00000164        1 BIT(S)
TCBRSV9C EQU   TCB+00000164        1 BIT(S)
TCBTCTB  EQU   TCB+00000165        3  BYTE  POINTER ON WORD+1
TCBUSER  EQU   TCB+00000168        FULLWORD POINTER
TCBSCNDY EQU   TCB+00000172        4 BYTE(S) ON WORD
TCBNDSP  EQU   TCB+00000172        4 BYTE(S) ON WORD
TCBNDSP0 EQU   TCB+00000172        1 BYTE(S)
TCBNDSP1 EQU   TCB+00000173        1 BYTE(S)
TCBDARTN EQU   TCB+00000173        1 BIT(S)
TCBDARPN EQU   TCB+00000173        1 BIT(S)
TCBRSTND EQU   TCB+00000173        1 BIT(S)
TCBRSPND EQU   TCB+00000173        1 BIT(S)
TCBDDRND EQU   TCB+00000173        1 BIT(S)
TCBTPSP  EQU   TCB+00000173        1 BIT(S)
TCBPIEND EQU   TCB+00000173        1 BIT(S)
TCBRSV22 EQU   TCB+00000173        1 BIT(S)
TCBNDSP2 EQU   TCB+00000174        1 BYTE(S)
TCBABD   EQU   TCB+00000174        1 BIT(S)
TCBSTPP  EQU   TCB+00000174        1 BIT(S)
TCBNDSVC EQU   TCB+00000174        1 BIT(S)
TCBNDTS  EQU   TCB+00000174        1 BIT(S)
TCBIWAIT EQU   TCB+00000174        1 BIT(S)
TCBOWAIT EQU   TCB+00000174        1 BIT(S)
TCBDSS   EQU   TCB+00000174        1 BIT(S)
TCBABE   EQU   TCB+00000174        1 BIT(S)
TCBNDSP3 EQU   TCB+00000175        1 BYTE(S)
TCBLJSND EQU   TCB+00000175        1 BIT(S)
TCBRV302 EQU   TCB+00000175        1 BIT(S)
TCBSRBND EQU   TCB+00000175        1 BIT(S)
TCBRSV24 EQU   TCB+00000175        1 BIT(S)
TCBRSV25 EQU   TCB+00000175        1 BIT(S)
TCBRSV26 EQU   TCB+00000175        1 BIT(S)
TCBRSV27 EQU   TCB+00000175        1 BIT(S)
TCBNDINT EQU   TCB+00000175        1 BIT(S)
TCBMDIDS EQU   TCB+00000176        FULLWORD INTEGER
TCBJSCB  EQU   TCB+00000180        FULLWORD POINTER
TCBRECDE EQU   TCB+00000180        1 BYTE(S)
TCBREC   EQU   TCB+00000180        1 BIT(S)
A00008   EQU   TCB+00000180        7 BIT(S)
TCBJSCBB EQU   TCB+00000181        3  BYTE  POINTER ON WORD+1
TCBDDEXC EQU   TCB+00000184        HALFWORD INTEGER
TCBDDWTC EQU   TCB+00000186        HALFWORD INTEGER
TCBIOBRC EQU   TCB+00000188        FULLWORD POINTER
TCBEXCPD EQU   TCB+00000192        FULLWORD POINTER
TCBEXT1  EQU   TCB+00000196        FULLWORD POINTER
TCBRSV32 EQU   TCB+00000196        1  BYTE  POINTER
TCBEXT1A EQU   TCB+00000197        3  BYTE  POINTER ON WORD+1
TCBBITS  EQU   TCB+00000200        4 BYTE(S) ON WORD
TCBNDSP4 EQU   TCB+00000200        8 BIT(S)
TCBRSV86 EQU   TCB+00000200        1 BIT(S)
TCBRSV87 EQU   TCB+00000200        1 BIT(S)
TCBRSV88 EQU   TCB+00000200        1 BIT(S)
TCBRSV89 EQU   TCB+00000200        1 BIT(S)
TCBRSV90 EQU   TCB+00000200        1 BIT(S)
TCBRSV91 EQU   TCB+00000200        1 BIT(S)
TCBRSV92 EQU   TCB+00000200        1 BIT(S)
TCBRSV93 EQU   TCB+00000200        1 BIT(S)
TCBNDSP5 EQU   TCB+00000201        8 BIT(S)
TCBRSV94 EQU   TCB+00000201        1 BIT(S)
TCBRSV95 EQU   TCB+00000201        1 BIT(S)
TCBRSV74 EQU   TCB+00000201        1 BIT(S)
TCBRSV75 EQU   TCB+00000201        1 BIT(S)
TCBRSV76 EQU   TCB+00000201        1 BIT(S)
TCBRSV77 EQU   TCB+00000201        1 BIT(S)
TCBRSV78 EQU   TCB+00000201        1 BIT(S)
TCBRSV79 EQU   TCB+00000201        1 BIT(S)
TCBFLGS6 EQU   TCB+00000202        1 BYTE(S)
TCBRV    EQU   TCB+00000202        1 BIT(S)
TCBPIE17 EQU   TCB+00000202        1 BIT(S)
TCBCPU   EQU   TCB+00000202        1 BIT(S)
TCBSPVLK EQU   TCB+00000202        1 BIT(S)
TCBRV303 EQU   TCB+00000202        1 BIT(S)
TCBMIGR  EQU   TCB+00000202        1 BIT(S)
TCBAPG   EQU   TCB+00000202        1 BIT(S)
TCBNTJS  EQU   TCB+00000202        1 BIT(S)
TCBFLGS7 EQU   TCB+00000203        1 BYTE(S)
TCBGPECB EQU   TCB+00000203        1 BIT(S)
TCBRSV33 EQU   TCB+00000203        1 BIT(S)
TCBRSV34 EQU   TCB+00000203        1 BIT(S)
TCBSTACK EQU   TCB+00000203        1 BIT(S)
TCBRSV35 EQU   TCB+00000203        1 BIT(S)
TCBRSTSK EQU   TCB+00000203        1 BIT(S)
TCBADMP  EQU   TCB+00000203        1 BIT(S)
TCBGTOFM EQU   TCB+00000203        1 BIT(S)
TCBDAR   EQU   TCB+00000204        1 BYTE(S)
TCBDARP  EQU   TCB+00000204        1 BIT(S)
TCBDARS  EQU   TCB+00000204        1 BIT(S)
TCBDARD  EQU   TCB+00000204        1 BIT(S)
TCBDARC  EQU   TCB+00000204        1 BIT(S)
TCBDARMC EQU   TCB+00000204        1 BIT(S)
TCBDARO  EQU   TCB+00000204        1 BIT(S)
TCBDARWT EQU   TCB+00000204        1 BIT(S)
TCBDARMS EQU   TCB+00000204        1 BIT(S)
TCBEXSVC EQU   TCB+00000204        1 BIT(S)
TCBRSV37 EQU   TCB+00000205        1  BYTE  POINTER
TCBSYSCT EQU   TCB+00000206        1  BYTE  POINTER
TCBSTMCT EQU   TCB+00000207        1  BYTE  POINTER
TCBEXT2  EQU   TCB+00000208        4  BYTE  POINTER ON DWORD
TCBRSV39 EQU   TCB+00000208        1  BYTE  POINTER
TCBEXT2A EQU   TCB+00000209        3  BYTE  POINTER ON WORD+1
TCBAECB  EQU   TCB+00000212        4 BYTE(S) ON DWORD+4
TCBTIRB  EQU   TCB+00000216        FULLWORD POINTER
TCBBACK  EQU   TCB+00000220        FULLWORD POINTER
TCBRTWA  EQU   TCB+00000224        FULLWORD POINTER
TCBIOTIM EQU   TCB+00000228        FULLWORD INTEGER
TCBTMSAV EQU   TCB+00000232        FULLWORD INTEGER
TCBABCUR EQU   TCB+00000236        1 BYTE(S)
TCBRSVAA EQU   TCB+00000237        1  BYTE  POINTER
TCBTID   EQU   TCB+00000238        1 BYTE(S)
TCBRSV41 EQU   TCB+00000239        1  BYTE  POINTER
TCBRV306 EQU   TCB+00000240        FULLWORD POINTER
TCBFOE   EQU   TCB+00000244        FULLWORD POINTER
TCBRSV42 EQU   TCB+00000244        1  BYTE  POINTER
TCBFOEA  EQU   TCB+00000245        3  BYTE  POINTER ON WORD+1
TCBSWA   EQU   TCB+00000248        FULLWORD POINTER
TCBRSV96 EQU   TCB+00000252        FULLWORD POINTER
TCBTCBID EQU   TCB+00000256        4 BYTE(S) ON WORD
TCBRTM12 EQU   TCB+00000260        FULLWORD POINTER
TCBESTAE EQU   TCB+00000264        4 BYTE(S) ON WORD
TCBSCBKY EQU   TCB+00000264        1 BYTE(S)
TCBESTRM EQU   TCB+00000265        8 BIT(S)
TCBETERM EQU   TCB+00000265        1 BIT(S)
TCBRV308 EQU   TCB+00000265        1 BIT(S)
TCBRV309 EQU   TCB+00000265        1 BIT(S)
TCBRV310 EQU   TCB+00000265        1 BIT(S)
TCBRV311 EQU   TCB+00000265        1 BIT(S)
TCBRV312 EQU   TCB+00000265        1 BIT(S)
TCBRV313 EQU   TCB+00000265        1 BIT(S)
TCBRV314 EQU   TCB+00000265        1 BIT(S)
TCBERTYP EQU   TCB+00000266        1  BYTE  POINTER
TCBMODE  EQU   TCB+00000267        1  BYTE  POINTER
TCBUKYSP EQU   TCB+00000268        FULLWORD POINTER
TCBCCPVI EQU   TCB+00000272        HALFWORD INTEGER
TCBAFFN  EQU   TCB+00000274        16 BIT(S)
TCBFBYT1 EQU   TCB+00000276        8 BIT(S)
TCBEOTFM EQU   TCB+00000276        1 BIT(S)
TCBACTIV EQU   TCB+00000276        1 BIT(S)
TCBNDIOS EQU   TCB+00000276        1 BIT(S)
TCBPGNLY EQU   TCB+00000276        1 BIT(S)
TCBRTM2  EQU   TCB+00000276        1 BIT(S)
TCBEOT   EQU   TCB+00000276        1 BIT(S)
TCBRV113 EQU   TCB+00000276        1 BIT(S)
TCBLLH   EQU   TCB+00000276        1 BIT(S)
TCBFBYT2 EQU   TCB+00000277        8 BIT(S)
TCBCNCB  EQU   TCB+00000277        1 BIT(S)
TCBFMW   EQU   TCB+00000277        1 BIT(S)
TCBFDW   EQU   TCB+00000277        1 BIT(S)
TCBFPRAP EQU   TCB+00000277        1 BIT(S)
TCBSSSYN EQU   TCB+00000277        1 BIT(S)
TCBECBNV EQU   TCB+00000277        1 BIT(S)
TCBRV122 EQU   TCB+00000277        1 BIT(S)
TCBRV123 EQU   TCB+00000277        1 BIT(S)
TCBRV124 EQU   TCB+00000278        8 BIT(S)
TCBRV125 EQU   TCB+00000278        1 BIT(S)
TCBRV126 EQU   TCB+00000278        1 BIT(S)
TCBRV127 EQU   TCB+00000278        1 BIT(S)
TCBRV128 EQU   TCB+00000278        1 BIT(S)
TCBRV129 EQU   TCB+00000278        1 BIT(S)
TCBRV130 EQU   TCB+00000278        1 BIT(S)
TCBRV131 EQU   TCB+00000278        1 BIT(S)
TCBRV132 EQU   TCB+00000278        1 BIT(S)
TCBRV133 EQU   TCB+00000279        8 BIT(S)
TCBRV134 EQU   TCB+00000279        1 BIT(S)
TCBRV135 EQU   TCB+00000279        1 BIT(S)
TCBRV136 EQU   TCB+00000279        1 BIT(S)
TCBRV137 EQU   TCB+00000279        1 BIT(S)
TCBRV138 EQU   TCB+00000279        1 BIT(S)
TCBRV139 EQU   TCB+00000279        1 BIT(S)
TCBRV140 EQU   TCB+00000279        1 BIT(S)
TCBRV141 EQU   TCB+00000279        1 BIT(S)
TCBRPT   EQU   TCB+00000280        FULLWORD POINTER
TCBDBTB  EQU   TCB+00000284        FULLWORD POINTER
TCBSWASA EQU   TCB+00000288        FULLWORD POINTER
TCBRV185 EQU   TCB+00000292        FULLWORD POINTER
A00009   EQU   TCB+00000296        BYTE(S) ON DWORD
TCBXTNT2 EQU   00000000            32 BYTE(S) ON DWORD
TCBGTF   EQU   TCBXTNT2+00000000   FULLWORD POINTER
TCBTFLG  EQU   TCBXTNT2+00000000   8 BIT(S)
TCBASYNC EQU   TCBXTNT2+00000000   1 BIT(S)
TCBERRTN EQU   TCBXTNT2+00000000   1 BIT(S)
TCBDSPIT EQU   TCBXTNT2+00000000   1 BIT(S)
TCBRSV43 EQU   TCBXTNT2+00000000   1 BIT(S)
TCBRSV44 EQU   TCBXTNT2+00000000   1 BIT(S)
TCBRSV45 EQU   TCBXTNT2+00000000   1 BIT(S)
TCBRSV46 EQU   TCBXTNT2+00000000   1 BIT(S)
TCBRSV47 EQU   TCBXTNT2+00000000   1 BIT(S)
TCBGTFA  EQU   TCBXTNT2+00000001   3  BYTE  POINTER ON WORD+1
TCBRSVAB EQU   TCBXTNT2+00000004   1  BYTE  POINTER
TCBRCMP  EQU   TCBXTNT2+00000005   24 BIT(S)
TCBEVENT EQU   TCBXTNT2+00000008   FULLWORD POINTER
TCBRSV49 EQU   TCBXTNT2+00000012   FULLWORD POINTER
TCBRV142 EQU   TCBXTNT2+00000016   FULLWORD POINTER
TCBRV143 EQU   TCBXTNT2+00000020   FULLWORD POINTER
TCBRV144 EQU   TCBXTNT2+00000024   HALFWORD INTEGER
TCBRV145 EQU   TCBXTNT2+00000026   HALFWORD INTEGER
TCBRV146 EQU   TCBXTNT2+00000028   8 BIT(S)
TCBRV147 EQU   TCBXTNT2+00000028   1 BIT(S)
TCBRV148 EQU   TCBXTNT2+00000028   1 BIT(S)
TCBRV149 EQU   TCBXTNT2+00000028   1 BIT(S)
TCBRV150 EQU   TCBXTNT2+00000028   1 BIT(S)
TCBRV151 EQU   TCBXTNT2+00000028   1 BIT(S)
TCBRV152 EQU   TCBXTNT2+00000028   1 BIT(S)
TCBRV153 EQU   TCBXTNT2+00000028   1 BIT(S)
TCBRV154 EQU   TCBXTNT2+00000028   1 BIT(S)
TCBRV155 EQU   TCBXTNT2+00000029   8 BIT(S)
TCBRV156 EQU   TCBXTNT2+00000029   1 BIT(S)
TCBRV157 EQU   TCBXTNT2+00000029   1 BIT(S)
TCBRV158 EQU   TCBXTNT2+00000029   1 BIT(S)
TCBRV159 EQU   TCBXTNT2+00000029   1 BIT(S)
TCBRV160 EQU   TCBXTNT2+00000029   1 BIT(S)
TCBRV161 EQU   TCBXTNT2+00000029   1 BIT(S)
TCBRV162 EQU   TCBXTNT2+00000029   1 BIT(S)
TCBRV163 EQU   TCBXTNT2+00000029   1 BIT(S)
TCBRV164 EQU   TCBXTNT2+00000030   8 BIT(S)
TCBRV165 EQU   TCBXTNT2+00000030   1 BIT(S)
TCBRV166 EQU   TCBXTNT2+00000030   1 BIT(S)
TCBRV167 EQU   TCBXTNT2+00000030   1 BIT(S)
TCBRV168 EQU   TCBXTNT2+00000030   1 BIT(S)
TCBRV169 EQU   TCBXTNT2+00000030   1 BIT(S)
TCBRV170 EQU   TCBXTNT2+00000030   1 BIT(S)
TCBRV171 EQU   TCBXTNT2+00000030   1 BIT(S)
TCBRV172 EQU   TCBXTNT2+00000030   1 BIT(S)
TCBRV173 EQU   TCBXTNT2+00000031   8 BIT(S)
TCBRV174 EQU   TCBXTNT2+00000031   1 BIT(S)
TCBRV175 EQU   TCBXTNT2+00000031   1 BIT(S)
TCBRV176 EQU   TCBXTNT2+00000031   1 BIT(S)
TCBRV177 EQU   TCBXTNT2+00000031   1 BIT(S)
TCBRV178 EQU   TCBXTNT2+00000031   1 BIT(S)
TCBRV179 EQU   TCBXTNT2+00000031   1 BIT(S)
TCBRV180 EQU   TCBXTNT2+00000031   1 BIT(S)
TCBRV181 EQU   TCBXTNT2+00000031   1 BIT(S)
A00010   EQU   TCBXTNT2+00000032   BYTE(S) ON DWORD
CVTPTR   EQU   00000016            FULLWORD POINTER
CVTMAP   EQU   00000000            416 BYTE(S) ON WORD
CVT      EQU   CVTMAP+00000000     BYTE(S) ON WORD
CVTTCBP  EQU   CVTMAP+00000000     FULLWORD POINTER
CVT0EF00 EQU   CVTMAP+00000004     FULLWORD POINTER
CVTLINK  EQU   CVTMAP+00000008     FULLWORD POINTER
CVTJOB   EQU   CVTMAP+00000012     FULLWORD POINTER
CVTBUF   EQU   CVTMAP+00000016     FULLWORD POINTER
CVTXAPG  EQU   CVTMAP+00000020     FULLWORD POINTER
CVT0VL00 EQU   CVTMAP+00000024     FULLWORD POINTER
CVTPCNVT EQU   CVTMAP+00000028     FULLWORD POINTER
CVTPRLTV EQU   CVTMAP+00000032     FULLWORD POINTER
CVTILK1  EQU   CVTMAP+00000036     FULLWORD POINTER
CVTILK2  EQU   CVTMAP+00000040     FULLWORD POINTER
CVTXTLER EQU   CVTMAP+00000044     FULLWORD POINTER
CVTSYSAD EQU   CVTMAP+00000048     FULLWORD POINTER
CVTBTERM EQU   CVTMAP+00000052     FULLWORD POINTER
CVTDATE  EQU   CVTMAP+00000056     4 BYTE(S) ON WORD
CVTMSLT  EQU   CVTMAP+00000060     FULLWORD POINTER
CVTZDTAB EQU   CVTMAP+00000064     FULLWORD POINTER
CVTXITP  EQU   CVTMAP+00000068     FULLWORD POINTER
CVTDAR   EQU   CVTMAP+00000072     FULLWORD POINTER
CVTFLGS1 EQU   CVTMAP+00000072     8 BIT(S)
CVTDMPLK EQU   CVTMAP+00000072     1 BIT(S)
CVTRSV01 EQU   CVTMAP+00000072     1 BIT(S)
CVTRSV02 EQU   CVTMAP+00000072     1 BIT(S)
CVTRSV03 EQU   CVTMAP+00000072     1 BIT(S)
CVTRSV04 EQU   CVTMAP+00000072     1 BIT(S)
CVTRSV05 EQU   CVTMAP+00000072     1 BIT(S)
CVTRSV06 EQU   CVTMAP+00000072     1 BIT(S)
CVTRSV07 EQU   CVTMAP+00000072     1 BIT(S)
CVTDARA  EQU   CVTMAP+00000073     3  BYTE  POINTER ON WORD+1
CVT0FN00 EQU   CVTMAP+00000076     FULLWORD POINTER
CVTEXIT  EQU   CVTMAP+00000080     2 BYTE(S) ON WORD
CVTBRET  EQU   CVTMAP+00000082     2 BYTE(S) ON WORD+2
CVTSVDCB EQU   CVTMAP+00000084     FULLWORD POINTER
CVTTPC   EQU   CVTMAP+00000088     FULLWORD POINTER
CVTPBLDL EQU   CVTMAP+00000092     FULLWORD POINTER
CVTSJQ   EQU   CVTMAP+00000096     FULLWORD POINTER
CVTCUCB  EQU   CVTMAP+00000100     FULLWORD POINTER
CVTQTE00 EQU   CVTMAP+00000104     FULLWORD POINTER
CVTQTD00 EQU   CVTMAP+00000108     FULLWORD POINTER
CVTSTB   EQU   CVTMAP+00000112     FULLWORD POINTER
CVTDCB   EQU   CVTMAP+00000116     1 BYTE(S) ON WORD
CVTRSV08 EQU   CVTMAP+00000116     1 BIT(S)
CVT1SSS  EQU   CVTMAP+00000116     1 BIT(S)
CVT2SPS  EQU   CVTMAP+00000116     1 BIT(S)
CVT4MS1  EQU   CVTMAP+00000116     1 BIT(S)
CVTRSV09 EQU   CVTMAP+00000116     1 BIT(S)
CVT4MPS  EQU   CVTMAP+00000116     1 BIT(S)
CVT6DAT  EQU   CVTMAP+00000116     1 BIT(S)
CVTMVS2  EQU   CVTMAP+00000116     1 BIT(S)
CVTDCBA  EQU   CVTMAP+00000117     3  BYTE  POINTER ON WORD+1
CVTIOQET EQU   CVTMAP+00000120     FULLWORD POINTER
CVTIXAVL EQU   CVTMAP+00000124     FULLWORD POINTER
CVTNUCB  EQU   CVTMAP+00000128     FULLWORD POINTER
CVTFBOSV EQU   CVTMAP+00000132     FULLWORD POINTER
CVT0DS   EQU   CVTMAP+00000136     FULLWORD POINTER
CVTILCH  EQU   CVTMAP+00000140     FULLWORD POINTER
CVTIERLC EQU   CVTMAP+00000144     FULLWORD POINTER
CVTRV516 EQU   CVTMAP+00000144     FULLWORD POINTER
CVTMSER  EQU   CVTMAP+00000148     FULLWORD POINTER
CVT0PT01 EQU   CVTMAP+00000152     FULLWORD POINTER
CVTRSV11 EQU   CVTMAP+00000156     FULLWORD POINTER
CVTHEAD  EQU   CVTMAP+00000160     FULLWORD POINTER
CVTMZ00  EQU   CVTMAP+00000164     FULLWORD POINTER
CVT1EF00 EQU   CVTMAP+00000168     FULLWORD POINTER
CVTQOCR  EQU   CVTMAP+00000172     FULLWORD POINTER
CVTQMWR  EQU   CVTMAP+00000176     FULLWORD POINTER
CVTSNCTR EQU   CVTMAP+00000180     HALFWORD INTEGER
CVTOPTA  EQU   CVTMAP+00000182     1 BYTE(S)
CVTCCH   EQU   CVTMAP+00000182     1 BIT(S)
CVTAPR   EQU   CVTMAP+00000182     1 BIT(S)
CVTDDR   EQU   CVTMAP+00000182     1 BIT(S)
CVTNIP   EQU   CVTMAP+00000182     1 BIT(S)
CVTRSV12 EQU   CVTMAP+00000182     1 BIT(S)
CVTRSV13 EQU   CVTMAP+00000182     1 BIT(S)
CVTASCII EQU   CVTMAP+00000182     1 BIT(S)
CVTXPFP  EQU   CVTMAP+00000182     1 BIT(S)
CVTOPTB  EQU   CVTMAP+00000183     1 BYTE(S)
CVTPROT  EQU   CVTMAP+00000183     1 BIT(S)
CVTCTIMS EQU   CVTMAP+00000183     1 BIT(S)
CVTTOD   EQU   CVTMAP+00000183     1 BIT(S)
CVTNLOG  EQU   CVTMAP+00000183     1 BIT(S)
CVTAPTHR EQU   CVTMAP+00000183     1 BIT(S)
CVTFP    EQU   CVTMAP+00000183     1 BIT(S)
CVTRSV16 EQU   CVTMAP+00000183     1 BIT(S)
CVTRSV17 EQU   CVTMAP+00000183     1 BIT(S)
CVTQCDSR EQU   CVTMAP+00000184     FULLWORD POINTER
CVTQLPAQ EQU   CVTMAP+00000188     FULLWORD POINTER
CVTRSV18 EQU   CVTMAP+00000192     FULLWORD POINTER
CVTSMCA  EQU   CVTMAP+00000196     FULLWORD POINTER
CVTABEND EQU   CVTMAP+00000200     FULLWORD POINTER
CVTUSER  EQU   CVTMAP+00000204     FULLWORD POINTER
CVTMDLDS EQU   CVTMAP+00000208     FULLWORD POINTER
CVTQABST EQU   CVTMAP+00000212     2 BYTE(S) ON WORD
CVTLNKSC EQU   CVTMAP+00000214     2 BYTE(S) ON WORD+2
CVTTSCE  EQU   CVTMAP+00000216     FULLWORD POINTER
CVTPATCH EQU   CVTMAP+00000220     FULLWORD POINTER
CVTRMS   EQU   CVTMAP+00000224     FULLWORD POINTER
CVTRV515 EQU   CVTMAP+00000228     FULLWORD POINTER
CVT0SCR1 EQU   CVTMAP+00000232     FULLWORD POINTER
CVTGTF   EQU   CVTMAP+00000236     FULLWORD POINTER
CVTGTFST EQU   CVTMAP+00000236     8 BIT(S)
CVTGTFS  EQU   CVTMAP+00000236     2 BIT(S)
CVTGTFAV EQU   CVTMAP+00000236     1 BIT(S)
CVTRV315 EQU   CVTMAP+00000236     1 BIT(S)
CVTSTATE EQU   CVTMAP+00000236     1 BIT(S)
CVTRV316 EQU   CVTMAP+00000236     1 BIT(S)
CVTTMODE EQU   CVTMAP+00000236     1 BIT(S)
CVTRV317 EQU   CVTMAP+00000236     1 BIT(S)
CVTFORM  EQU   CVTMAP+00000236     1 BIT(S)
CVTRV318 EQU   CVTMAP+00000236     1 BIT(S)
CVTUSR   EQU   CVTMAP+00000236     1 BIT(S)
CVTRNIO  EQU   CVTMAP+00000236     1 BIT(S)
CVTRSV27 EQU   CVTMAP+00000236     1 BIT(S)
CVTGTFA  EQU   CVTMAP+00000237     3  BYTE  POINTER ON WORD+1
CVTAQAVT EQU   CVTMAP+00000240     FULLWORD POINTER
CVTTCMFG EQU   CVTMAP+00000240     1 BYTE(S)
CVTTCRDY EQU   CVTMAP+00000240     1 BIT(S)
CVTRSV28 EQU   CVTMAP+00000240     1 BIT(S)
CVTRSV29 EQU   CVTMAP+00000240     1 BIT(S)
CVTRSV30 EQU   CVTMAP+00000240     1 BIT(S)
CVTRSV31 EQU   CVTMAP+00000240     1 BIT(S)
CVTRSV32 EQU   CVTMAP+00000240     1 BIT(S)
CVTRSV33 EQU   CVTMAP+00000240     1 BIT(S)
CVTRSV34 EQU   CVTMAP+00000240     1 BIT(S)
CVTAQAVB EQU   CVTMAP+00000241     3  BYTE  POINTER ON WORD+1
CVTVOLM2 EQU   CVTMAP+00000244     FULLWORD POINTER
CVTTATA  EQU   CVTMAP+00000244     FULLWORD POINTER
CVTTSKS  EQU   CVTMAP+00000244     1  BYTE  POINTER
CVTVOLF2 EQU   CVTMAP+00000244     8 BIT(S)
CVTVOLI2 EQU   CVTMAP+00000244     1 BIT(S)
CVTTAT   EQU   CVTMAP+00000245     3  BYTE  POINTER ON WORD+1
CVTVOLT2 EQU   CVTMAP+00000245     3  BYTE  POINTER ON WORD+1
CVTATER  EQU   CVTMAP+00000248     FULLWORD POINTER
CVTSYST  EQU   CVTMAP+00000248     1  BYTE  POINTER
CVTATERA EQU   CVTMAP+00000249     3  BYTE  POINTER ON WORD+1
CVTEXT1  EQU   CVTMAP+00000252     FULLWORD POINTER
CVTCBSP  EQU   CVTMAP+00000256     FULLWORD POINTER
CVTPURG  EQU   CVTMAP+00000260     FULLWORD POINTER
CVTRSV35 EQU   CVTMAP+00000260     1  BYTE  POINTER
CVTPURGA EQU   CVTMAP+00000261     3  BYTE  POINTER ON WORD+1
CVTAMFF  EQU   CVTMAP+00000264     4 BYTE(S)
CVTQMSG  EQU   CVTMAP+00000268     FULLWORD POINTER
CVTRSV36 EQU   CVTMAP+00000268     1  BYTE  POINTER
CVTQMSGA EQU   CVTMAP+00000269     3  BYTE  POINTER ON WORD+1
CVTDMSR  EQU   CVTMAP+00000272     FULLWORD POINTER
CVTRSV37 EQU   CVTMAP+00000272     1  BYTE  POINTER
CVTDMSRA EQU   CVTMAP+00000273     3  BYTE  POINTER ON WORD+1
CVTRSV38 EQU   CVTMAP+00000276     FULLWORD POINTER
CVTRSV39 EQU   CVTMAP+00000280     FULLWORD POINTER
CVTREAL  EQU   CVTMAP+00000284     FULLWORD POINTER
CVTPTRV  EQU   CVTMAP+00000288     FULLWORD POINTER
CVTMODE  EQU   CVTMAP+00000292     FULLWORD POINTER
CVTJESCT EQU   CVTMAP+00000296     FULLWORD POINTER
CVTJEPS  EQU   CVTMAP+00000300     FULLWORD POINTER
CVTTZ    EQU   CVTMAP+00000304     FULLWORD INTEGER
CVTMCHPR EQU   CVTMAP+00000308     FULLWORD POINTER
CVTEORM  EQU   CVTMAP+00000312     FULLWORD POINTER
CVTERPV  EQU   CVTMAP+00000316     FULLWORD POINTER
CVTRV517 EQU   CVTMAP+00000316     FULLWORD POINTER
CVTINTLA EQU   CVTMAP+00000320     FULLWORD POINTER
CVTRV518 EQU   CVTMAP+00000320     FULLWORD POINTER
CVTAPF   EQU   CVTMAP+00000324     FULLWORD POINTER
CVTRSV40 EQU   CVTMAP+00000324     1  BYTE  POINTER
CVTAPFA  EQU   CVTMAP+00000325     3  BYTE  POINTER ON WORD+1
CVTEXT2  EQU   CVTMAP+00000328     FULLWORD POINTER
CVTRSV41 EQU   CVTMAP+00000328     1  BYTE  POINTER
CVTEXT2A EQU   CVTMAP+00000329     3  BYTE  POINTER ON WORD+1
CVTHJES  EQU   CVTMAP+00000332     FULLWORD POINTER
CVTRSV42 EQU   CVTMAP+00000332     1  BYTE  POINTER
CVTHJESA EQU   CVTMAP+00000333     3  BYTE  POINTER ON WORD+1
CVTRSV43 EQU   CVTMAP+00000336     HALFWORD INTEGER
CVTRSV44 EQU   CVTMAP+00000338     HALFWORD INTEGER
CVTRSV45 EQU   CVTMAP+00000340     FULLWORD POINTER
CVTRSV46 EQU   CVTMAP+00000344     FULLWORD POINTER
CVTPGSIA EQU   CVTMAP+00000348     FULLWORD POINTER
CVTPCVT  EQU   CVTMAP+00000352     FULLWORD POINTER
CVTA1F1  EQU   CVTMAP+00000356     1 BYTE(S)
CVTPFSW  EQU   CVTMAP+00000356     1 BIT(S)
CVTSRSW  EQU   CVTMAP+00000356     1 BIT(S)
CVTRSV47 EQU   CVTMAP+00000356     1 BIT(S)
CVTRSV48 EQU   CVTMAP+00000356     1 BIT(S)
CVTRSV49 EQU   CVTMAP+00000356     1 BIT(S)
CVTRSV50 EQU   CVTMAP+00000356     1 BIT(S)
CVTRSV51 EQU   CVTMAP+00000356     1 BIT(S)
CVTRSV52 EQU   CVTMAP+00000356     1 BIT(S)
CVTSYSK  EQU   CVTMAP+00000357     1 BYTE(S)
CVTRSV53 EQU   CVTMAP+00000357     1 BIT(S)
CVTRSV54 EQU   CVTMAP+00000357     1 BIT(S)
CVTRSV55 EQU   CVTMAP+00000357     1 BIT(S)
CVTRSV56 EQU   CVTMAP+00000357     1 BIT(S)
CVTSLKR  EQU   CVTMAP+00000357     1 BIT(S)
CVTSLKQ  EQU   CVTMAP+00000357     1 BIT(S)
CVTSLKP  EQU   CVTMAP+00000357     1 BIT(S)
CVTSLKO  EQU   CVTMAP+00000357     1 BIT(S)
CVTSULK  EQU   CVTMAP+00000358     HALFWORD INTEGER
CVTSMF   EQU   CVTMAP+00000360     FULLWORD POINTER
CVTPNWFR EQU   CVTMAP+00000364     FULLWORD POINTER
CVTDDCE  EQU   CVTMAP+00000368     FULLWORD POINTER
CVTRSV57 EQU   CVTMAP+00000372     HALFWORD INTEGER
CVTRSV58 EQU   CVTMAP+00000374     HALFWORD INTEGER
CVTSTOA  EQU   CVTMAP+00000376     FULLWORD INTEGER
CVTVOLM1 EQU   CVTMAP+00000380     FULLWORD POINTER
CVTVOLF1 EQU   CVTMAP+00000380     8 BIT(S)
CVTVOLI1 EQU   CVTMAP+00000380     1 BIT(S)
CVTVOLT1 EQU   CVTMAP+00000381     3  BYTE  POINTER ON WORD+1
CVTRSV61 EQU   CVTMAP+00000384     FULLWORD POINTER
CVTATMCT EQU   CVTMAP+00000388     FULLWORD POINTER
CVTATMST EQU   CVTMAP+00000388     1 BYTE(S)
CVTATMCA EQU   CVTMAP+00000389     3  BYTE  POINTER ON WORD+1
CVTAUTH  EQU   CVTMAP+00000392     FULLWORD POINTER
CVTACTAP EQU   CVTMAP+00000396     FULLWORD POINTER
CVTRV485 EQU   CVTMAP+00000400     FULLWORD POINTER
CVTRV486 EQU   CVTMAP+00000404     FULLWORD POINTER
CVTRV487 EQU   CVTMAP+00000408     FULLWORD POINTER
CVTRV488 EQU   CVTMAP+00000412     FULLWORD POINTER
CVTS01   EQU   00000348            732 BYTE(S) ON WORD
CVTGETL  EQU   CVTS01+00000000     FULLWORD POINTER
CVTLPDSR EQU   CVTS01+00000004     FULLWORD POINTER
CVTPVTP  EQU   CVTS01+00000008     FULLWORD POINTER
CVTLPDIA EQU   CVTS01+00000012     FULLWORD POINTER
CVTDIRST EQU   CVTS01+00000012     1 BYTE(S)
CVTDICOM EQU   CVTS01+00000012     1 BIT(S)
CVTRSV63 EQU   CVTS01+00000012     1 BIT(S)
CVTRSV64 EQU   CVTS01+00000012     1 BIT(S)
CVTRSV65 EQU   CVTS01+00000012     1 BIT(S)
CVTRSV66 EQU   CVTS01+00000012     1 BIT(S)
CVTRSV67 EQU   CVTS01+00000012     1 BIT(S)
CVTRSV68 EQU   CVTS01+00000012     1 BIT(S)
CVTRSV69 EQU   CVTS01+00000012     1 BIT(S)
CVTLPDIR EQU   CVTS01+00000013     3  BYTE  POINTER ON WORD+1
CVTRV320 EQU   CVTS01+00000016     FULLWORD POINTER
CVTRV321 EQU   CVTS01+00000020     FULLWORD POINTER
CVTSLIDA EQU   CVTS01+00000024     4 BYTE(S) ON WORD
CVTSYLK  EQU   CVTS01+00000024     1 BYTE(S)
CVTSLID  EQU   CVTS01+00000025     3 BYTE(S)
CVTRV322 EQU   CVTS01+00000028     FULLWORD POINTER
CVTRV328 EQU   CVTS01+00000032     FULLWORD POINTER
CVTRV329 EQU   CVTS01+00000036     FULLWORD POINTER
CVTRV330 EQU   CVTS01+00000040     FULLWORD POINTER
CVTRV331 EQU   CVTS01+00000044     FULLWORD POINTER
CVTRSV77 EQU   CVTS01+00000048     1  BYTE  POINTER
CVTSPVLK EQU   CVTS01+00000049     1  BYTE  POINTER
CVTCTLFG EQU   CVTS01+00000050     1 BYTE(S)
CVTRV323 EQU   CVTS01+00000050     1 BIT(S)
CVTRV333 EQU   CVTS01+00000050     1 BIT(S)
CVTRSV78 EQU   CVTS01+00000050     1 BIT(S)
CVTDSTAT EQU   CVTS01+00000050     1 BIT(S)
CVTRSV79 EQU   CVTS01+00000050     1 BIT(S)
CVTNOMP  EQU   CVTS01+00000050     1 BIT(S)
CVTGTRCE EQU   CVTS01+00000050     1 BIT(S)
CVTSDTRC EQU   CVTS01+00000050     1 BIT(S)
CVTAPG   EQU   CVTS01+00000051     1 BYTE(S)
CVTTRACE EQU   CVTS01+00000052     2 BYTE(S) ON WORD
CVTTRAC2 EQU   CVTS01+00000054     2 BYTE(S) ON WORD+2
CVTRSCN  EQU   CVTS01+00000056     FULLWORD POINTER
CVTTAS   EQU   CVTS01+00000060     FULLWORD POINTER
CVTRV332 EQU   CVTS01+00000064     FULLWORD POINTER
CVTSHRVM EQU   CVTS01+00000068     FULLWORD POINTER
CVT0VL01 EQU   CVTS01+00000072     FULLWORD POINTER
CVTRV324 EQU   CVTS01+00000076     FULLWORD POINTER
CVTRV325 EQU   CVTS01+00000080     FULLWORD POINTER
CVTRV326 EQU   CVTS01+00000084     FULLWORD POINTER
CVTRV327 EQU   CVTS01+00000088     FULLWORD POINTER
CVTRV519 EQU   CVTS01+00000092     FULLWORD POINTER
CVTPUTL  EQU   CVTS01+00000096     FULLWORD POINTER
CVTSRBRT EQU   CVTS01+00000100     FULLWORD POINTER
CVTOLT0A EQU   CVTS01+00000104     FULLWORD POINTER
CVTSMFEX EQU   CVTS01+00000108     FULLWORD POINTER
CVTCSPIE EQU   CVTS01+00000112     FULLWORD POINTER
CVTPTGT  EQU   CVTS01+00000116     FULLWORD POINTER
CVTIOSPL EQU   CVTS01+00000120     1  BYTE  POINTER
CVTRV513 EQU   CVTS01+00000121     1 BYTE(S)
CVTDSSAC EQU   CVTS01+00000122     1 BYTE(S)
CVTRV139 EQU   CVTS01+00000123     1  BYTE  POINTER
CVTSTCK  EQU   CVTS01+00000124     FULLWORD POINTER
CVTMAXMP EQU   CVTS01+00000128     HALFWORD POINTER
CVTRV144 EQU   CVTS01+00000130     HALFWORD INTEGER
CVTSCAN  EQU   CVTS01+00000132     FULLWORD POINTER
CVTAUTHL EQU   CVTS01+00000136     FULLWORD POINTER
CVTBLDCP EQU   CVTS01+00000140     FULLWORD POINTER
CVTGETCL EQU   CVTS01+00000144     FULLWORD POINTER
CVTFRECL EQU   CVTS01+00000148     FULLWORD POINTER
CVTDELCP EQU   CVTS01+00000152     FULLWORD POINTER
CVTCRMN  EQU   CVTS01+00000156     FULLWORD POINTER
CVTCRAS  EQU   CVTS01+00000160     FULLWORD POINTER
CVTQSAS  EQU   CVTS01+00000164     FULLWORD POINTER
CVTFRAS  EQU   CVTS01+00000168     FULLWORD POINTER
CVTS1EE  EQU   CVTS01+00000172     FULLWORD POINTER
CVTPARS  EQU   CVTS01+00000176     FULLWORD POINTER
CVTQUIS  EQU   CVTS01+00000180     FULLWORD POINTER
CVTSTXU  EQU   CVTS01+00000184     FULLWORD POINTER
CVTOPTE  EQU   CVTS01+00000188     FULLWORD POINTER
CVTSDRM  EQU   CVTS01+00000192     FULLWORD POINTER
CVTIOSCS EQU   CVTS01+00000196     FULLWORD POINTER
CVTAQTOP EQU   CVTS01+00000200     FULLWORD POINTER
CVTVVMDI EQU   CVTS01+00000204     FULLWORD POINTER
CVTASVT  EQU   CVTS01+00000208     FULLWORD POINTER
CVTGDA   EQU   CVTS01+00000212     FULLWORD POINTER
CVTASCBH EQU   CVTS01+00000216     FULLWORD POINTER
CVTASCBL EQU   CVTS01+00000220     FULLWORD POINTER
CVTRTMCT EQU   CVTS01+00000224     FULLWORD POINTER
CVTSV60  EQU   CVTS01+00000228     FULLWORD POINTER
CVTSDMP  EQU   CVTS01+00000232     FULLWORD POINTER
CVTSCBP  EQU   CVTS01+00000236     FULLWORD POINTER
CVTSDBF  EQU   CVTS01+00000240     FULLWORD POINTER
CVTRTMS  EQU   CVTS01+00000244     FULLWORD POINTER
CVTTPIOS EQU   CVTS01+00000248     FULLWORD POINTER
CVTSIC   EQU   CVTS01+00000252     FULLWORD POINTER
CVTOPCTP EQU   CVTS01+00000256     FULLWORD POINTER
CVTEXPRO EQU   CVTS01+00000260     FULLWORD POINTER
CVTGSMQ  EQU   CVTS01+00000264     FULLWORD POINTER
CVTLSMQ  EQU   CVTS01+00000268     FULLWORD POINTER
CVTGSPL  EQU   CVTS01+00000272     FULLWORD POINTER
CVTVWAIT EQU   CVTS01+00000276     FULLWORD POINTER
CVTPARRL EQU   CVTS01+00000280     FULLWORD POINTER
CVTAPFT  EQU   CVTS01+00000284     FULLWORD POINTER
CVTQCS01 EQU   CVTS01+00000288     FULLWORD POINTER
CVTFQCB  EQU   CVTS01+00000292     FULLWORD POINTER
CVTLQCB  EQU   CVTS01+00000296     FULLWORD POINTER
CVTRENQ  EQU   CVTS01+00000300     FULLWORD POINTER
CVTRSPIE EQU   CVTS01+00000304     FULLWORD POINTER
CVTLKRMA EQU   CVTS01+00000308     FULLWORD POINTER
CVTCSD   EQU   CVTS01+00000312     FULLWORD POINTER
CVTDQIQE EQU   CVTS01+00000316     FULLWORD POINTER
CVTRPOST EQU   CVTS01+00000320     FULLWORD POINTER
CVT062R1 EQU   CVTS01+00000324     FULLWORD POINTER
CVTVEAC0 EQU   CVTS01+00000328     FULLWORD POINTER
CVTGLMN  EQU   CVTS01+00000332     FULLWORD POINTER
CVTSPSA  EQU   CVTS01+00000336     FULLWORD POINTER
CVTWSAL  EQU   CVTS01+00000340     FULLWORD POINTER
CVTRV149 EQU   CVTS01+00000344     FULLWORD POINTER
CVTWSAC  EQU   CVTS01+00000348     FULLWORD POINTER
CVTRECRQ EQU   CVTS01+00000352     FULLWORD POINTER
CVTASMVT EQU   CVTS01+00000356     FULLWORD POINTER
CVTIOBP  EQU   CVTS01+00000360     FULLWORD POINTER
CVTSPOST EQU   CVTS01+00000364     FULLWORD POINTER
CVTRSTWD EQU   CVTS01+00000368     FULLWORD INTEGER
CVTFETCH EQU   CVTS01+00000372     FULLWORD POINTER
CVT044R2 EQU   CVTS01+00000376     FULLWORD POINTER
CVTPERFM EQU   CVTS01+00000380     FULLWORD POINTER
CVTDAIR  EQU   CVTS01+00000384     FULLWORD POINTER
CVTEHDEF EQU   CVTS01+00000388     FULLWORD POINTER
CVTEHCIR EQU   CVTS01+00000392     FULLWORD POINTER
CVTSSAP  EQU   CVTS01+00000396     FULLWORD POINTER
CVTAIDVT EQU   CVTS01+00000400     FULLWORD POINTER
CVTIPCDS EQU   CVTS01+00000404     FULLWORD POINTER
CVTIPCRI EQU   CVTS01+00000408     FULLWORD POINTER
CVTIPCRP EQU   CVTS01+00000412     FULLWORD POINTER
CVTPCCAT EQU   CVTS01+00000416     FULLWORD POINTER
CVTLCCAT EQU   CVTS01+00000420     FULLWORD POINTER
CVTRV210 EQU   CVTS01+00000424     8 BIT(S)
CVTRV211 EQU   CVTS01+00000424     1 BIT(S)
CVTRV212 EQU   CVTS01+00000424     1 BIT(S)
CVTRV213 EQU   CVTS01+00000424     1 BIT(S)
CVTRV214 EQU   CVTS01+00000424     1 BIT(S)
CVTRV215 EQU   CVTS01+00000424     1 BIT(S)
CVTRV216 EQU   CVTS01+00000424     1 BIT(S)
CVTRV217 EQU   CVTS01+00000424     1 BIT(S)
CVTRV218 EQU   CVTS01+00000424     1 BIT(S)
CVTRV219 EQU   CVTS01+00000425     8 BIT(S)
CVTRV220 EQU   CVTS01+00000425     1 BIT(S)
CVTRV221 EQU   CVTS01+00000425     1 BIT(S)
CVTRV222 EQU   CVTS01+00000425     1 BIT(S)
CVTRV223 EQU   CVTS01+00000425     1 BIT(S)
CVTRV224 EQU   CVTS01+00000425     1 BIT(S)
CVTRV225 EQU   CVTS01+00000425     1 BIT(S)
CVTRV226 EQU   CVTS01+00000425     1 BIT(S)
CVTRV227 EQU   CVTS01+00000425     1 BIT(S)
CVTRV228 EQU   CVTS01+00000426     8 BIT(S)
CVTRV229 EQU   CVTS01+00000426     1 BIT(S)
CVTRV230 EQU   CVTS01+00000426     1 BIT(S)
CVTRV231 EQU   CVTS01+00000426     1 BIT(S)
CVTRV232 EQU   CVTS01+00000426     1 BIT(S)
CVTRV233 EQU   CVTS01+00000426     1 BIT(S)
CVTRV234 EQU   CVTS01+00000426     1 BIT(S)
CVTRV235 EQU   CVTS01+00000426     1 BIT(S)
CVTRV236 EQU   CVTS01+00000426     1 BIT(S)
CVTRV237 EQU   CVTS01+00000427     8 BIT(S)
CVTRV238 EQU   CVTS01+00000427     1 BIT(S)
CVTRV239 EQU   CVTS01+00000427     1 BIT(S)
CVTRV240 EQU   CVTS01+00000427     1 BIT(S)
CVTRV241 EQU   CVTS01+00000427     1 BIT(S)
CVTRV242 EQU   CVTS01+00000427     1 BIT(S)
CVTRV243 EQU   CVTS01+00000427     1 BIT(S)
CVTRV244 EQU   CVTS01+00000427     1 BIT(S)
CVTRV245 EQU   CVTS01+00000427     1 BIT(S)
CVTRV246 EQU   CVTS01+00000428     1  BYTE  POINTER
CVTRV247 EQU   CVTS01+00000429     1  BYTE  POINTER
CVTRV248 EQU   CVTS01+00000430     1  BYTE  POINTER
CVTRV249 EQU   CVTS01+00000431     1  BYTE  POINTER
CVTRV250 EQU   CVTS01+00000432     1  BYTE  POINTER
CVTRV251 EQU   CVTS01+00000433     1  BYTE  POINTER
CVTRV252 EQU   CVTS01+00000434     HALFWORD POINTER
CVTRV253 EQU   CVTS01+00000436     HALFWORD INTEGER
CVTRV254 EQU   CVTS01+00000438     HALFWORD INTEGER
CVTPWI   EQU   CVTS01+00000440     FULLWORD POINTER
CVTPVBP  EQU   CVTS01+00000444     FULLWORD POINTER
CVTMFCTL EQU   CVTS01+00000448     FULLWORD POINTER
CVTMFRTR EQU   CVTS01+00000452     FULLWORD POINTER
CVTMFACT EQU   CVTS01+00000452     1 BIT(S)
CVTVPSIB EQU   CVTS01+00000456     FULLWORD POINTER
CVTVSI   EQU   CVTS01+00000460     FULLWORD POINTER
CVTVFP   EQU   CVTS01+00000464     FULLWORD POINTER
CVTRV262 EQU   CVTS01+00000468     8 BIT(S)
CVTRV263 EQU   CVTS01+00000468     1 BIT(S)
CVTRV264 EQU   CVTS01+00000468     1 BIT(S)
CVTRV265 EQU   CVTS01+00000468     1 BIT(S)
CVTRV266 EQU   CVTS01+00000468     1 BIT(S)
CVTRV267 EQU   CVTS01+00000468     1 BIT(S)
CVTRV268 EQU   CVTS01+00000468     1 BIT(S)
CVTRV269 EQU   CVTS01+00000468     1 BIT(S)
CVTRV270 EQU   CVTS01+00000468     1 BIT(S)
CVTRV271 EQU   CVTS01+00000469     8 BIT(S)
CVTRV272 EQU   CVTS01+00000469     1 BIT(S)
CVTRV273 EQU   CVTS01+00000469     1 BIT(S)
CVTRV274 EQU   CVTS01+00000469     1 BIT(S)
CVTRV275 EQU   CVTS01+00000469     1 BIT(S)
CVTRV276 EQU   CVTS01+00000469     1 BIT(S)
CVTRV277 EQU   CVTS01+00000469     1 BIT(S)
CVTRV278 EQU   CVTS01+00000469     1 BIT(S)
CVTRV279 EQU   CVTS01+00000469     1 BIT(S)
CVTRV280 EQU   CVTS01+00000470     8 BIT(S)
CVTRV281 EQU   CVTS01+00000470     1 BIT(S)
CVTRV282 EQU   CVTS01+00000470     1 BIT(S)
CVTRV283 EQU   CVTS01+00000470     1 BIT(S)
CVTRV284 EQU   CVTS01+00000470     1 BIT(S)
CVTRV285 EQU   CVTS01+00000470     1 BIT(S)
CVTRV286 EQU   CVTS01+00000470     1 BIT(S)
CVTRV287 EQU   CVTS01+00000470     1 BIT(S)
CVTRV288 EQU   CVTS01+00000470     1 BIT(S)
CVTRV289 EQU   CVTS01+00000471     8 BIT(S)
CVTRV290 EQU   CVTS01+00000471     1 BIT(S)
CVTRV291 EQU   CVTS01+00000471     1 BIT(S)
CVTRV292 EQU   CVTS01+00000471     1 BIT(S)
CVTRV293 EQU   CVTS01+00000471     1 BIT(S)
CVTRV294 EQU   CVTS01+00000471     1 BIT(S)
CVTRV295 EQU   CVTS01+00000471     1 BIT(S)
CVTRV296 EQU   CVTS01+00000471     1 BIT(S)
CVTRV297 EQU   CVTS01+00000471     1 BIT(S)
CVTTRCA  EQU   CVTS01+00000472     FULLWORD POINTER
CVTRV302 EQU   CVTS01+00000476     HALFWORD POINTER
CVTRV303 EQU   CVTS01+00000478     HALFWORD POINTER
CVTRV304 EQU   CVTS01+00000480     HALFWORD INTEGER
CVTRV305 EQU   CVTS01+00000482     HALFWORD INTEGER
CVTRV306 EQU   CVTS01+00000484     HALFWORD INTEGER
CVTRV307 EQU   CVTS01+00000486     HALFWORD INTEGER
CVTVIOP  EQU   CVTS01+00000488     FULLWORD POINTER
CVTRMBR  EQU   CVTS01+00000492     FULLWORD POINTER
CVTLFRM  EQU   CVTS01+00000496     FULLWORD POINTER
CVTGMBR  EQU   CVTS01+00000500     FULLWORD POINTER
CVT0TC0A EQU   CVTS01+00000504     FULLWORD POINTER
CVTRLSTG EQU   CVTS01+00000508     FULLWORD INTEGER
CVTSPFRR EQU   CVTS01+00000512     FULLWORD POINTER
CVTVEMS0 EQU   CVTS01+00000516     FULLWORD POINTER
CVTJRECM EQU   CVTS01+00000520     FULLWORD POINTER
CVTIRECM EQU   CVTS01+00000524     FULLWORD POINTER
CVTDARCM EQU   CVTS01+00000528     FULLWORD POINTER
CVT0PT02 EQU   CVTS01+00000532     FULLWORD POINTER
CVTSTPRS EQU   CVTS01+00000536     FULLWORD POINTER
CVTWTCB  EQU   CVTS01+00000540     FULLWORD POINTER
CVTVACR  EQU   CVTS01+00000544     FULLWORD POINTER
CVTQUIT  EQU   CVTS01+00000548     FULLWORD POINTER
CVTGTFR8 EQU   CVTS01+00000552     FULLWORD POINTER
CVTVSTOP EQU   CVTS01+00000556     FULLWORD POINTER
CVTVPSA  EQU   CVTS01+00000560     FULLWORD POINTER
CVTRMPTT EQU   CVTS01+00000564     FULLWORD POINTER
CVTRMPMT EQU   CVTS01+00000568     FULLWORD POINTER
CVTEXP1  EQU   CVTS01+00000572     FULLWORD POINTER
CVTCSDRL EQU   CVTS01+00000576     FULLWORD POINTER
CVTSSRB  EQU   CVTS01+00000580     FULLWORD POINTER
CVTRPT   EQU   CVTS01+00000584     FULLWORD POINTER
CVTQV1   EQU   CVTS01+00000588     FULLWORD POINTER
CVTQV2   EQU   CVTS01+00000592     FULLWORD POINTER
CVTQV3   EQU   CVTS01+00000596     FULLWORD POINTER
CVTGSDA  EQU   CVTS01+00000600     FULLWORD POINTER
CVTGSDAB EQU   CVTS01+00000600     1 BIT(S)
CVTADV   EQU   CVTS01+00000604     FULLWORD POINTER
CVTTPIO  EQU   CVTS01+00000608     FULLWORD POINTER
CVTCRCA  EQU   CVTS01+00000612     FULLWORD POINTER
CVTEVENT EQU   CVTS01+00000616     FULLWORD POINTER
CVTSSCR  EQU   CVTS01+00000620     FULLWORD POINTER
CVTCBBR  EQU   CVTS01+00000624     FULLWORD POINTER
CVTEFF02 EQU   CVTS01+00000628     FULLWORD POINTER
CVTRV604 EQU   CVTS01+00000632     FULLWORD POINTER
CVTRV605 EQU   CVTS01+00000636     FULLWORD POINTER
CVTRV606 EQU   CVTS01+00000640     FULLWORD POINTER
CVTRV607 EQU   CVTS01+00000644     FULLWORD POINTER
CVTRV608 EQU   CVTS01+00000648     FULLWORD POINTER
CVTRV609 EQU   CVTS01+00000652     FULLWORD POINTER
CVTRV610 EQU   CVTS01+00000656     FULLWORD POINTER
CVTRV611 EQU   CVTS01+00000660     FULLWORD POINTER
CVTRV612 EQU   CVTS01+00000664     FULLWORD POINTER
CVTRV613 EQU   CVTS01+00000668     FULLWORD POINTER
CVTRV614 EQU   CVTS01+00000672     FULLWORD POINTER
CVTRV615 EQU   CVTS01+00000676     FULLWORD POINTER
CVTRV616 EQU   CVTS01+00000680     FULLWORD POINTER
CVTRV617 EQU   CVTS01+00000684     FULLWORD POINTER
CVTRV618 EQU   CVTS01+00000688     FULLWORD POINTER
CVTRV619 EQU   CVTS01+00000692     FULLWORD POINTER
CVTRV620 EQU   CVTS01+00000696     FULLWORD POINTER
CVTRV621 EQU   CVTS01+00000700     FULLWORD POINTER
CVTRV622 EQU   CVTS01+00000704     FULLWORD POINTER
CVTRV623 EQU   CVTS01+00000708     FULLWORD POINTER
CVTRV624 EQU   CVTS01+00000712     FULLWORD POINTER
CVTRV625 EQU   CVTS01+00000716     FULLWORD POINTER
CVTRV626 EQU   CVTS01+00000720     FULLWORD POINTER
CVTRV627 EQU   CVTS01+00000724     FULLWORD POINTER
CVTRV628 EQU   CVTS01+00000728     FULLWORD POINTER
CVTXTNT1 EQU   00000000            12 BYTE(S) ON WORD
CVTFACHN EQU   CVTXTNT1+00000000   FULLWORD POINTER
CVTRSV87 EQU   CVTXTNT1+00000004   FULLWORD POINTER
CVTRSV88 EQU   CVTXTNT1+00000008   FULLWORD POINTER
CVTXTNT2 EQU   00000000            132 BYTE(S) ON WORD
CVTDSSV  EQU   CVTXTNT2+00000000   FULLWORD POINTER
CVTRSV89 EQU   CVTXTNT2+00000000   1  BYTE  POINTER
CVTDSSVA EQU   CVTXTNT2+00000001   3  BYTE  POINTER ON WORD+1
CVTNUCLS EQU   CVTXTNT2+00000004   1 BYTE(S)
CVTFLGBT EQU   CVTXTNT2+00000005   8 BIT(S)
CVTNPE   EQU   CVTXTNT2+00000005   1 BIT(S)
CVTVME   EQU   CVTXTNT2+00000005   1 BIT(S)
CVTRSV9C EQU   CVTXTNT2+00000005   1 BIT(S)
CVTRSV9D EQU   CVTXTNT2+00000005   1 BIT(S)
CVTRSV9E EQU   CVTXTNT2+00000005   1 BIT(S)
CVTRSV9F EQU   CVTXTNT2+00000005   1 BIT(S)
CVTRSV9G EQU   CVTXTNT2+00000005   1 BIT(S)
CVTRSV9H EQU   CVTXTNT2+00000005   1 BIT(S)
CVTRSV91 EQU   CVTXTNT2+00000006   HALFWORD INTEGER
CVTDEBVR EQU   CVTXTNT2+00000008   FULLWORD POINTER
CVTRSV92 EQU   CVTXTNT2+00000012   FULLWORD POINTER
CVTRSV93 EQU   CVTXTNT2+00000016   FULLWORD POINTER
CVTRSV94 EQU   CVTXTNT2+00000020   FULLWORD POINTER
CVTQID   EQU   CVTXTNT2+00000024   FULLWORD POINTER
CVTRSV95 EQU   CVTXTNT2+00000024   1  BYTE  POINTER
CVTQIDA  EQU   CVTXTNT2+00000025   3  BYTE  POINTER ON WORD+1
CVTOLTEP EQU   CVTXTNT2+00000028   FULLWORD POINTER
CVTRSV96 EQU   CVTXTNT2+00000032   HALFWORD INTEGER
CVTRSV97 EQU   CVTXTNT2+00000034   HALFWORD INTEGER
CVTRSV98 EQU   CVTXTNT2+00000036   FULLWORD POINTER
CVTRSV99 EQU   CVTXTNT2+00000040   FULLWORD POINTER
CVTSKTA  EQU   CVTXTNT2+00000044   FULLWORD POINTER
CVTICB   EQU   CVTXTNT2+00000048   FULLWORD POINTER
CVTRV400 EQU   CVTXTNT2+00000052   8 BIT(S)
CVTRV401 EQU   CVTXTNT2+00000052   1 BIT(S)
CVTRV402 EQU   CVTXTNT2+00000052   1 BIT(S)
CVTRV403 EQU   CVTXTNT2+00000052   1 BIT(S)
CVTRV404 EQU   CVTXTNT2+00000052   1 BIT(S)
CVTRV405 EQU   CVTXTNT2+00000052   1 BIT(S)
CVTRV406 EQU   CVTXTNT2+00000052   1 BIT(S)
CVTRV407 EQU   CVTXTNT2+00000052   1 BIT(S)
CVTRV408 EQU   CVTXTNT2+00000052   1 BIT(S)
CVTRV409 EQU   CVTXTNT2+00000053   8 BIT(S)
CVTRV410 EQU   CVTXTNT2+00000053   1 BIT(S)
CVTRV411 EQU   CVTXTNT2+00000053   1 BIT(S)
CVTRV412 EQU   CVTXTNT2+00000053   1 BIT(S)
CVTRV413 EQU   CVTXTNT2+00000053   1 BIT(S)
CVTRV414 EQU   CVTXTNT2+00000053   1 BIT(S)
CVTRV415 EQU   CVTXTNT2+00000053   1 BIT(S)
CVTRV416 EQU   CVTXTNT2+00000053   1 BIT(S)
CVTRV417 EQU   CVTXTNT2+00000053   1 BIT(S)
CVTRV418 EQU   CVTXTNT2+00000054   1  BYTE  POINTER
CVTRV419 EQU   CVTXTNT2+00000055   1  BYTE  POINTER
CVTRV420 EQU   CVTXTNT2+00000056   HALFWORD POINTER
CVTRV421 EQU   CVTXTNT2+00000058   HALFWORD INTEGER
CVTRV422 EQU   CVTXTNT2+00000060   HALFWORD INTEGER
CVTRV423 EQU   CVTXTNT2+00000062   HALFWORD INTEGER
CVTATCVT EQU   CVTXTNT2+00000064   FULLWORD POINTER
CVTATACT EQU   CVTXTNT2+00000064   1 BIT(S)
CVTRV425 EQU   CVTXTNT2+00000068   FULLWORD POINTER
CVTRV426 EQU   CVTXTNT2+00000072   FULLWORD POINTER
CVTRV427 EQU   CVTXTNT2+00000076   FULLWORD POINTER
CVTRV428 EQU   CVTXTNT2+00000080   FULLWORD INTEGER
CVTRV429 EQU   CVTXTNT2+00000084   8 BIT(S)
CVTRV430 EQU   CVTXTNT2+00000084   1 BIT(S)
CVTRV431 EQU   CVTXTNT2+00000084   1 BIT(S)
CVTRV432 EQU   CVTXTNT2+00000084   1 BIT(S)
CVTRV433 EQU   CVTXTNT2+00000084   1 BIT(S)
CVTRV434 EQU   CVTXTNT2+00000084   1 BIT(S)
CVTRV435 EQU   CVTXTNT2+00000084   1 BIT(S)
CVTRV436 EQU   CVTXTNT2+00000084   1 BIT(S)
CVTRV437 EQU   CVTXTNT2+00000084   1 BIT(S)
CVTRV438 EQU   CVTXTNT2+00000085   8 BIT(S)
CVTRV439 EQU   CVTXTNT2+00000085   1 BIT(S)
CVTRV440 EQU   CVTXTNT2+00000085   1 BIT(S)
CVTRV441 EQU   CVTXTNT2+00000085   1 BIT(S)
CVTRV442 EQU   CVTXTNT2+00000085   1 BIT(S)
CVTRV443 EQU   CVTXTNT2+00000085   1 BIT(S)
CVTRV444 EQU   CVTXTNT2+00000085   1 BIT(S)
CVTRV445 EQU   CVTXTNT2+00000085   1 BIT(S)
CVTRV446 EQU   CVTXTNT2+00000085   1 BIT(S)
CVTRV447 EQU   CVTXTNT2+00000086   1  BYTE  POINTER
CVTRV448 EQU   CVTXTNT2+00000087   1  BYTE  POINTER
CVTRV449 EQU   CVTXTNT2+00000088   HALFWORD POINTER
CVTRV450 EQU   CVTXTNT2+00000090   HALFWORD INTEGER
CVTRV451 EQU   CVTXTNT2+00000092   HALFWORD INTEGER
CVTRV452 EQU   CVTXTNT2+00000094   HALFWORD INTEGER
CVTRV453 EQU   CVTXTNT2+00000096   FULLWORD POINTER
CVTRV454 EQU   CVTXTNT2+00000100   FULLWORD POINTER
CVTRV455 EQU   CVTXTNT2+00000104   FULLWORD POINTER
CVTRV456 EQU   CVTXTNT2+00000108   FULLWORD POINTER
CVTRV457 EQU   CVTXTNT2+00000112   8 BIT(S)
CVTRV458 EQU   CVTXTNT2+00000112   1 BIT(S)
CVTRV459 EQU   CVTXTNT2+00000112   1 BIT(S)
CVTRV460 EQU   CVTXTNT2+00000112   1 BIT(S)
CVTRV461 EQU   CVTXTNT2+00000112   1 BIT(S)
CVTRV462 EQU   CVTXTNT2+00000112   1 BIT(S)
CVTRV463 EQU   CVTXTNT2+00000112   1 BIT(S)
CVTRV464 EQU   CVTXTNT2+00000112   1 BIT(S)
CVTRV465 EQU   CVTXTNT2+00000112   1 BIT(S)
CVTRV466 EQU   CVTXTNT2+00000113   8 BIT(S)
CVTRV467 EQU   CVTXTNT2+00000113   1 BIT(S)
CVTRV468 EQU   CVTXTNT2+00000113   1 BIT(S)
CVTRV469 EQU   CVTXTNT2+00000113   1 BIT(S)
CVTRV470 EQU   CVTXTNT2+00000113   1 BIT(S)
CVTRV471 EQU   CVTXTNT2+00000113   1 BIT(S)
CVTRV472 EQU   CVTXTNT2+00000113   1 BIT(S)
CVTRV473 EQU   CVTXTNT2+00000113   1 BIT(S)
CVTRV474 EQU   CVTXTNT2+00000113   1 BIT(S)
CVTRV475 EQU   CVTXTNT2+00000114   1  BYTE  POINTER
CVTRV476 EQU   CVTXTNT2+00000115   1  BYTE  POINTER
CVTRV477 EQU   CVTXTNT2+00000116   1  BYTE  POINTER
CVTRV478 EQU   CVTXTNT2+00000117   1  BYTE  POINTER
CVTRV479 EQU   CVTXTNT2+00000118   HALFWORD INTEGER
CVTRV480 EQU   CVTXTNT2+00000120   FULLWORD POINTER
CVTRV481 EQU   CVTXTNT2+00000124   FULLWORD POINTER
CVTRV482 EQU   CVTXTNT2+00000128   FULLWORD POINTER
CVTFIX   EQU   00000256            256 BYTE(S) ON WORD
A00011   EQU   CVTFIX+00000000     248 BYTE(S) ON WORD
A00012   EQU   CVTFIX+00000248     2 BYTE(S) ON WORD
CVTMDL   EQU   CVTFIX+00000250     2 BYTE(S) ON WORD+2
CVTRELNO EQU   CVTFIX+00000252     4 BYTE(S) ON WORD
CVTNUMB  EQU   CVTFIX+00000252     2 BYTE(S) ON WORD
CVTLEVL  EQU   CVTFIX+00000254     2 BYTE(S) ON WORD+2
SVRB     EQU   00000000            144 BYTE(S) ON WORD
A00013   EQU   SVRB+00000000       96 BYTE(S)
XSASTART EQU   SVRB+00000096       48 BYTE(S)
SAVEREG  EQU   00000000            40 BYTE(S) ON WORD
REGSAVE  EQU   SAVEREG+00000000    24 BYTE(S)
REG0     EQU   SAVEREG+00000000    4  BYTE  POINTER
REG1     EQU   SAVEREG+00000004    4  BYTE  POINTER
REG5     EQU   SAVEREG+00000008    4  BYTE  POINTER
REG14    EQU   SAVEREG+00000012    4  BYTE  POINTER
A00014   EQU   SAVEREG+00000016    4  BYTE  POINTER
REG15    EQU   SAVEREG+00000020    4  BYTE  POINTER
DXSAP    EQU   SAVEREG+00000024    FULLWORD POINTER
DXSALEN  EQU   SAVEREG+00000028    FULLWORD INTEGER
STAEP    EQU   SAVEREG+00000032    FULLWORD POINTER
RBASE    EQU   SAVEREG+00000036    FULLWORD POINTER
TCBS     EQU   00000000            8 BYTE(S) ON WORD
TCBNEXT  EQU   TCBS+00000000       FULLWORD POINTER
TCBCURR  EQU   TCBS+00000004       FULLWORD POINTER
EPARMS   EQU   00000000            96 BYTE(S) ON WORD
PARMCODE EQU   EPARMS+00000000     FULLWORD INTEGER
PARMABND EQU   EPARMS+00000004     FULLWORD INTEGER
PARMRETY EQU   EPARMS+00000008     FULLWORD POINTER
PARMWORK EQU   EPARMS+00000012     FULLWORD POINTER
PARMTYPE EQU   EPARMS+00000016     FULLWORD INTEGER
PARMFLGS EQU   EPARMS+00000020     8 BIT(S)
PARMDUMP EQU   EPARMS+00000020     1 BIT(S)
PARMCHOP EQU   EPARMS+00000020     1 BIT(S)
PARMCOMD EQU   EPARMS+00000020     1 BIT(S)
A00015   EQU   EPARMS+00000020     5 BIT(S)
A00016   EQU   EPARMS+00000021     1 BYTE(S)
PARMLNCM EQU   EPARMS+00000022     HALFWORD INTEGER
PARMCOMM EQU   EPARMS+00000024     8 BYTE(S)
PARMMESG EQU   EPARMS+00000032     64 BYTE(S)
BUFLEN   EQU   00000000            HALFWORD INTEGER
COMBUF   EQU   00000000            124 BYTE(S)
XSLASH   EQU   *                   3 BYTE(S)
         DC    C'// '
         ORG   @DATA+00000004
SPXSA    EQU   *                   FULLWORD INTEGER
         DC    XL4'E5000000'
PATCH    EQU   *                   50 BYTE(S)
         DC    C'IEE0003D'
         DC    00042C' '
         ORG   @DATA
         DS    00000064C
@TEMPS   DS    0F
XMVC     MVC   0(0,3),0(7)                                     Y02669
@DATEND  EQU   *
@9FF     EQU   @DO9FD
         END   IEE0003D
