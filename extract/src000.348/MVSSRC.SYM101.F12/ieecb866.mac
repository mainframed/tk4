         TITLE 'IEECB866-CONSOLE DUMP                                  *
                        '
IEECB866 CSECT ,                                                   0001
@MAINENT DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL1(15)                                             0001
         DC    C'IEECB866 77003 '                                  0001
         DROP  @15
@PROLOG  BALR  @10,0                                               0001
@PSTART  LA    @12,4095(,@10)                                      0001
         USING @PSTART,@10                                         0001
         USING @PSTART+4095,@12                                    0001
         LR    @07,@01                                             0001
         L     @00,@SIZDATD                                        0001
         GETMAIN  R,LV=(0)
         LR    @11,@01                                             0001
         USING @DATD,@11                                           0001
         LR    @01,@07                                             0001
         XC    @ZTEMPS(@ZLEN),@ZTEMPS
         MVC   @PC00001(4),0(@01)                                  0001
*                                                                  0180
*/* ******************************************************************/
*/*    THE DUMP COMMAND PROCESOR,WHEN ATTACHED BY IEEVWAIT,          */
*/*    WILL HAVE ITS OWN CSCB ADDRESS IN REGISTER ONE.               */
*/*                                                                  */
*/*                  ---------OPERATION----------                    */
*/*             1. ESTABLISH ESTAE PROTECTION                        */
*/* ******************************************************************/
*                                                                  0180
*   R14SAV7=REG14;                  /* SAVE RETURN ADDRESS           */
         ST    REG14,R14SAV7                                       0180
*   CALL GETESTAE;                                                 0181
         BAL   @14,GETESTAE                                        0181
*   IF REG15=0 THEN                 /* PROCESS DUMP COMMAND          */
         LTR   REG15,REG15                                         0182
         BNZ   @RF00182                                            0182
*     DO;                                                          0183
*                                                                  0183
*       /*************************************************************/
*       /*                                                           */
*       /* 2. CONSOLE ID CHECK CONSOLE DUMP CAN ONLY BE ISSUED BY    */
*       /* MASTER CONSOLE                                            */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0184
*       CSCBPTR=REG6;               /* LOCATE IEECB866 CSCB          */
         ST    REG6,CSCBPTR                                        0184
*       SAVEUCMP=CHUCMP;            /* SAVE CONSOLE ID FROM CSCB FOR
*                                      WTOR AFTER DUMP CSCB FREED  0185
*                                                            @ZA14247*/
         L     @07,CSCBPTR                                         0185
         MVC   SAVEUCMP(1),CHUCMP(@07)                             0185
*       IF CHUCMP=UCMID THEN        /* PROCESS DUMP COMMAND          */
         L     @09,CVTPTR                                          0186
         L     @09,UCMBASPT(,@09)                                  0186
         AL    @09,@CF02033                                        0186
         L     @09,UCMMCSPT(,@09)                                  0186
         L     @09,UCMDVEPT(,@09)                                  0186
         CLC   CHUCMP(1,@07),UCMID(@09)                            0186
         BNE   @RF00186                                            0186
*         DO;                                                      0187
*                                                                  0187
*           /*********************************************************/
*           /*                                                       */
*           /* 3. ANALYZE THE DUMP COMMAND                           */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0188
*           CALL CMDCHECK;          /* ANALYZE THE COMMAND           */
         BAL   @14,CMDCHECK                                        0188
*           CALL SETUP;             /* SET UP DATA AREAS     @G33CPMR*/
         BAL   @14,SETUP                                           0189
*           IF MSGCODE=ZERO THEN    /* NO ERROR YET                  */
         CLI   MSGCODE,0                                           0190
         BNE   @RF00190                                            0190
*             DO UNTIL MSGCODE^=ZERO×CONTINUE=OFE;/* LOOP UNTIL DATA
*                                      END                   @G33CPMR*/
@DL00191 DS    0H                                                  0192
*               CALL INITWTOR;      /* INIT WTOR AREA                */
*                                                                  0192
         BAL   @14,INITWTOR                                        0192
*               /*****************************************************/
*               /*                                                   */
*               /* 4. ISSUE A WTOR AND WAIT                          */
*               /*                                                   */
*               /*****************************************************/
*                                                                  0193
*               GEN;                                               0193
         WTOR  MF=(E,(REG1))
         WAIT  ECB=ECB
*               CALL FOLD;          /* FOLD UP TO UPPER CASE @G33CPMR*/
         BAL   @14,FOLD                                            0194
*                                                                  0195
*               /*****************************************************/
*               /*                                                   */
*               /* 5. ANALYZE THE REPLY THE DMPREPLY ROUTINE WILL    */
*               /* ANALYZE THE OPERATOR REPLY.                       */
*               /*                                                   */
*               /*****************************************************/
*                                                                  0195
*               CALL DMPREPLY;      /* REPLY PROCESSING              */
         BAL   @14,DMPREPLY                                        0195
*             END;                  /* OF LOOP UNTIL DATA END        */
*                                                                  0196
@DE00191 CLI   MSGCODE,0                                           0196
         BNE   @DC00191                                            0196
         TM    CONTINUE,B'10000000'                                0196
         BNZ   @DL00191                                            0196
@DC00191 DS    0H                                                  0197
*           /*********************************************************/
*           /*                                                       */
*           /* 6. ISSUE SVC 51                                       */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0197
*           IF MSGCODE=ZERO THEN                                   0197
@RF00190 CLI   MSGCODE,0                                           0197
         BNE   @RF00197                                            0197
*             DO;                                                  0198
*               CALL ISUSDUMP;      /* ISSUE SDUMP MACRO             */
*                                                                  0199
         BAL   @14,ISUSDUMP                                        0199
*               /*****************************************************/
*               /*                                                   */
*               /* 7. CHECK THE RETURN CODE FROM SVC 51              */
*               /*                                                   */
*               /*****************************************************/
*                                                                  0200
*               IF ECBCODE=EIGHT THEN/* NO DUMP TAKEN        @YM4790P*/
         CLC   ECBCODE(3),@CF00049+1                               0200
         BNE   @RF00200                                            0200
*                 DO;                                              0201
*                   MSGCODE='3F'X;  /* RT CODE=8 FROM SVC51  @YM4786P*/
         MVI   MSGCODE,X'3F'                                       0202
*                   KEYWDERR=SVC51ERR;/* SYS UNABLE TO DUMP  @YM4786P*/
         MVC   KEYWDERR(8),SVC51ERR                                0203
*                 END;                                             0204
*             END;                                                 0205
*         END;                      /* VALID CONSOLE PROCESSING      */
*       ELSE                                                       0207
*         CALL IDCHECK;             /* INVALID CONSOLE               */
         B     @RC00186                                            0207
@RF00186 BAL   @14,IDCHECK                                         0207
*       IF MSGCODE^=ZERO THEN                                      0208
@RC00186 CLI   MSGCODE,0                                           0208
         BE    @RF00208                                            0208
*         CALL NODUMP;              /* ERROR ROUTINE                 */
         BAL   @14,NODUMP                                          0209
*     END;                                                         0210
*   ELSE                            /* IF BAD ESTAE RETURN   @ZA14247*/
*     CALL CSCBFREE;                /* THEN FREE THE CSCB    @ZA14247*/
         B     @RC00182                                            0211
@RF00182 BAL   @14,CSCBFREE                                        0211
*   REG14=R14SAV7;                                                 0212
@RC00182 L     REG14,R14SAV7                                       0212
*   RETURN;                                                        0213
@EL00001 DS    0H                                                  0213
@EF00001 L     @00,@SIZDATD                                        0213
         LR    @01,@11                                             0213
         FREEMAIN R,LV=(0),A=(1)
@ER00001 BR    @14                                                 0213
*GETESTAE:                                                         0214
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0214
*                                                                  0214
GETESTAE DS    0H                                                  0215
*/* ******************************************************************/
*/*                                                                  */
*/*   THIS ROUTINE CREATES AN ESTAE INVIRONMENT THRU IEECB866        */
*/*   A PARAMETER LIST IS BUILT AND PASSED TO IEECB860 IN REGISTER 1 */
*/*                                                                  */
*/* ******************************************************************/
*                                                                  0215
*   RESPECIFY                                                      0215
*    (REG2) RSTD;                                                  0215
*   REG6=REG1;                      /* SAVE DUMP CSCB PTR            */
         LR    REG6,REG1                                           0216
*   REG1=ADDR(STAEAREA);            /* GET STORAGE FOR PARM LIST     */
         LA    REG1,STAEAREA                                       0217
*   STAEAREA=STAEAREA&&STAEAREA;    /* INIT STORAGE                  */
         XC    STAEAREA(44),STAEAREA                               0218
*   REG2=REG1;                      /* SAVE PARM LIST ADDRESS        */
         LR    REG2,REG1                                           0219
*   CSCBADDR=REG6;                  /* STORE CSCB PTR IN THE LIST    */
         ST    REG6,CSCBADDR(,REG1)                                0220
*   REG6=ADDR(STAEBUF);             /* GET PTR TO CMD BUF            */
         LA    REG6,STAEBUF(,REG1)                                 0221
*   BUFPTR=REG6;                    /* STOR CMD BUF PTR IN PARM LIST */
         ST    REG6,BUFPTR(,REG1)                                  0222
*   CMDSIZE=4;                      /* STORE LENGTH OF CMD           */
         MVI   CMDSIZE(REG1),X'04'                                 0223
*   COMMAND=DUMP;                   /* STORE VERB                    */
         MVI   COMMAND+4(REG1),C' '                                0224
         MVC   COMMAND+5(6,REG1),COMMAND+4(REG1)                   0224
         MVC   COMMAND(4,REG1),DUMP                                0224
*   RESPECIFY                                                      0225
*    (REG10,                                                       0225
*     REG11,                                                       0225
*     REG12,                                                       0225
*     REG13) RSTD;                                                 0225
*   REG14SAV=REG14;                 /* SAVE RETURN ADDRESS           */
         ST    REG14,REG14SAV(,REG1)                               0226
*   REG6SAV=CSCBADDR;               /* SAVE CSCB PTR                 */
         L     @07,CSCBADDR(,REG1)                                 0227
         ST    @07,REG6SAV(,REG1)                                  0227
*   REG10SAV=REG10;                 /* SAVE BASE REG         @G33CPMR*/
         ST    REG10,REG10SAV(,REG1)                               0228
*   REG11SAV=REG11;                 /* SAVE DATA REG                 */
         ST    REG11,REG11SAV(,REG1)                               0229
*   REG12SAV=REG12;                 /* SAVE BASE REG                 */
         ST    REG12,REG12SAV(,REG1)                               0230
*   REG13SAV=REG13;                 /* SAVE SAVE AREA PTR            */
         ST    REG13,REG13SAV(,REG1)                               0231
*   RESPECIFY                                                      0232
*    (REG10,                                                       0232
*     REG11,                                                       0232
*     REG12,                                                       0232
*     REG13) UNRSTD;                                               0232
*   RESPECIFY                                                      0233
*    (REG0) RSTD;                                                  0233
*   GEN(LOAD EP=IEECB860);          /* LOAD IEECB860                 */
         LOAD EP=IEECB860
*   REG15=REG0;                     /* PUT ENTRY ADDRESS IN REG 15   */
         LR    REG15,REG0                                          0235
*   REG1=REG2;                      /* RESTORE PARM PTR              */
         LR    REG1,REG2                                           0236
*   RESPECIFY                                                      0237
*    (REG0) UNRSTD;                                                0237
*   GEN(BALR REG14,REG15);          /* BRANCH TO IEECB860            */
         BALR REG14,REG15
*   REG6=CSCBADDR;                  /* RESTORE CSCB PTR              */
         L     REG6,CSCBADDR(,REG1)                                0239
*   RESPECIFY                                                      0240
*    (REG5,                                                        0240
*     REG10,                                                       0240
*     REG11,                                                       0240
*     REG12,                                                       0240
*     REG13) RSTD;                                                 0240
*   REG10=REG10SAV;                 /* RESTORE BASE REG PTR  @G33CPMR*/
         L     REG10,REG10SAV(,REG1)                               0241
*   REG11=REG11SAV;                 /* RESTORE DATA REG PTR          */
         L     REG11,REG11SAV(,REG1)                               0242
*   REG12=REG12SAV;                 /* RESTORE BASE REG PTR          */
         L     REG12,REG12SAV(,REG1)                               0243
*   REG13=REG13SAV;                 /* RESTORE SAVE AREA PTR         */
         L     REG13,REG13SAV(,REG1)                               0244
*   REG5=REG15;                     /* SAVE RETURN CODE              */
         LR    REG5,REG15                                          0245
*   RESPECIFY                                                      0246
*    (REG10,                                                       0246
*     REG11,                                                       0246
*     REG12,                                                       0246
*     REG13) UNRSTD;                                               0246
*   GEN(DELETE EP=IEECB860);        /* DELETE STAE CREATE MODULE     */
         DELETE EP=IEECB860
*   REG15=REG5;                     /* PUT RETURN CODE IN REG 15     */
         LR    REG15,REG5                                          0248
*   KEYWDERR=KEYWDERR&&KEYWDERR;    /* INIT STORAGE                  */
         XC    KEYWDERR(8),KEYWDERR                                0249
*   REG14=REG14SAV;                 /* RESTORE THE RETURN ADDRESS    */
         L     REG14,REG14SAV(,REG1)                               0250
*   RESPECIFY                                                      0251
*    (REG2,                                                        0251
*     REG5) UNRSTD;                                                0251
*   END;                                                           0252
@EL00002 DS    0H                                                  0252
@EF00002 DS    0H                                                  0252
@ER00002 BR    @14                                                 0252
*CMDCHECK:                                                         0253
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0253
*                                                                  0253
CMDCHECK DS    0H                                                  0254
*/* ******************************************************************/
*/*                                                                  */
*/*   THIE ROUTINE WILL DETERMINE THE LENGTH OF THE DUMP COMM=(TEXT) */
*/*   THEN CALL CSCBFREE TO FREE THE CSCB                            */
*/*                                                                  */
*/* ******************************************************************/
*                                                                  0254
*   R14SAV3=REG14;                  /* SAVE REG 14                   */
         ST    REG14,R14SAV3                                       0254
*   DO CMDINDEX=7 TO 124 WHILE CHBUF(CMDINDEX)^=RTPRN;             0255
         LA    CMDINDEX,7                                          0255
@DL00255 L     @07,CSCBPTR                                         0255
         ALR   @07,CMDINDEX                                        0255
         CLI   CHBUF-1(@07),C')'                                   0255
         BE    @DC00255                                            0255
*   END;                            /* SCAN THE DUMP COMMAND TEXT    */
         AH    CMDINDEX,@CH00047                                   0256
         CH    CMDINDEX,@CH00134                                   0256
         BNH   @DL00255                                            0256
@DC00255 DS    0H                                                  0257
*   MSGCODE=0;                      /* INIT MESSAGE CODE     @YM4798P*/
         MVI   MSGCODE,X'00'                                       0257
*   IF CHBUF(CMDINDEX)=RTPRN THEN   /* END OF THE TEXT               */
         L     @07,CSCBPTR                                         0258
         ALR   @07,CMDINDEX                                        0258
         CLI   CHBUF-1(@07),C')'                                   0258
         BNE   @RF00258                                            0258
*     DO;                                                          0259
*       IF CMDINDEX>7 THEN          /* TEXT EXISTS                   */
         LA    @07,7                                               0260
         CR    CMDINDEX,@07                                        0260
         BNH   @RF00260                                            0260
*         DO;                                                      0261
*           TEXT=TEXT&&TEXT;        /* ZERO OUT TEXT AREA            */
         XC    TEXT(100),TEXT                                      0262
*           TEXTLNTH=CMDINDEX-7;    /* DETERMINE LGTH OF TEXT        */
         LCR   @07,@07                                             0263
         ALR   @07,CMDINDEX                                        0263
         STC   @07,TEXTLNTH                                        0263
*           IF TEXTLNTH>100 THEN    /* TEXT LONGER 100 CHAR          */
         CLI   TEXTLNTH,100                                        0264
         BNH   @RF00264                                            0264
*             TEXTLNTH=100;         /* TEXT = 100 CHARACTERS         */
         MVI   TEXTLNTH,X'64'                                      0265
*           ELSE                                                   0266
*             ;                                                    0266
@RF00264 DS    0H                                                  0267
*           TEXT(1:TEXTLNTH)=CHBUF(7:TEXTLNTH+7);/* STORE THE TEXT   */
         SLR   @07,@07                                             0267
         IC    @07,TEXTLNTH                                        0267
         BCTR  @07,0                                               0267
         L     @09,CSCBPTR                                         0267
         EX    @07,@SM02034                                        0267
*         END;                                                     0268
*       ELSE                                                       0269
*         TEXTLNTH=0;               /* NO TEXT                       */
         B     @RC00260                                            0269
@RF00260 MVI   TEXTLNTH,X'00'                                      0269
*     END;                                                         0270
*   ELSE                                                           0271
*     DO;                                                          0271
         B     @RC00258                                            0271
@RF00258 DS    0H                                                  0272
*       MSGCODE='07'X;              /* MISSING RIGHT PARN            */
         MVI   MSGCODE,X'07'                                       0272
*       KEYWDERR=DUMP;              /* DELIMITER ERROR               */
         MVI   KEYWDERR+4,C' '                                     0273
         MVC   KEYWDERR+5(3),KEYWDERR+4                            0273
         MVC   KEYWDERR(4),DUMP                                    0273
*     END;                                                         0274
*   CALL CSCBFREE;                  /* FREE THE CSCB                 */
@RC00258 BAL   @14,CSCBFREE                                        0275
*   REG14=R14SAV3;                  /* RESTORE REG 14                */
         L     REG14,R14SAV3                                       0276
*   END;                                                           0277
@EL00003 DS    0H                                                  0277
@EF00003 DS    0H                                                  0277
@ER00003 BR    @14                                                 0277
*INITWTOR:                                                         0278
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0278
*                                                                  0278
INITWTOR DS    0H                                                  0279
*/* ******************************************************************/
*/*                                                                  */
*/*      THIS ROUTINE WILL INITIALIZE THE DATA AREAS USED BY         */
*/*      THE WTOR.                                                   */
*/*      1. WTORAREA 68 CHARACTERS TO ISSUE THE WTOR                 */
*/*      2. REPLY 120 CHARACTERS FOR THE OPERATOR REPLY              */
*/*                                                                  */
*/* ******************************************************************/
*                                                                  0279
*   R14SA10=REG14;                  /* SAVE RETURN ADDRESS           */
         ST    REG14,R14SA10                                       0279
*   REG1=ADDR(WTORAREA);            /* ADDRESS OF WTORAREA           */
         LA    REG1,WTORAREA                                       0280
*   WTORAREA=WTORAREA&&WTORAREA;    /* INIT STORAGE                  */
         XC    WTORAREA(68),WTORAREA                               0281
*   WTORAREA=WTORDATA;              /* MOVE DATA TO WTOR AREA        */
         MVI   WTORAREA+60,C' '                                    0282
         MVC   WTORAREA+61(7),WTORAREA+60                          0282
         MVC   WTORAREA(60),WTORDATA                               0282
*   RPLYAD=ADDR(REPLY);             /* WTOR REPLY ADDRESS            */
         LA    @07,REPLY                                           0283
         ST    @07,@TF00001                                        0283
         MVC   RPLYAD(3),@TF00001+1                                0283
*   ECBAD=ADDR(ECB);                /* ECB ADDRESS                   */
         LA    @07,ECB                                             0284
         ST    @07,ECBAD                                           0284
*   ECB=ECB&&ECB;                   /* INITIALIZE THE ECB    @YM4798P*/
         L     @07,ECB                                             0285
         LR    @00,@07                                             0285
         XR    @00,@07                                             0285
         ST    @00,ECB                                             0285
*   REPLY=BLANK;                    /* BLANK OUT THE REPLY   @G33CPMR*/
         MVI   REPLY+1,C' '                                        0286
         MVC   REPLY+2(119),REPLY+1                                0286
         MVI   REPLY,C' '                                          0286
*   REG0=SAVEUCMP;                  /* GET CONSOLE ID FOR WTOR     0287
*                                                            @ZA07752*/
         SLR   REG0,REG0                                           0287
         IC    REG0,SAVEUCMP                                       0287
*   REG14=R14SA10;                  /* RESTORE RETURN ADDR           */
         L     @07,R14SA10                                         0288
         LR    REG14,@07                                           0288
*   END;                                                           0289
@EL00004 DS    0H                                                  0289
@EF00004 DS    0H                                                  0289
@ER00004 BR    @14                                                 0289
*SETUP:                                                            0290
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0290
*                                                                  0290
SETUP    DS    0H                                                  0291
*/* ******************************************************************/
*/*                                                                  */
*/*     THIS ROUTINE WILL SET UP DATA AREAS                          */
*/*       1.  ZERO OUT SWITCHES                                      */
*/*       2.  ZERO OUT STORAGE SDUMP PARM LIST                       */
*/*       3.  FILL IN PART ON THE SDUMP PARM LIST                    */
*/*                                                                  */
*/* ******************************************************************/
*                                                                  0291
*   R14SAV9=REG14;                  /* SAVE RETURN ADDRESS           */
         ST    REG14,R14SAV9                                       0291
*   BITSW=ZERO;                     /* SWITCHES = 0                  */
         SLR   @07,@07                                             0292
         ST    @07,@TF00001                                        0292
         MVC   BITSW(2),@TF00001+2                                 0292
*   REPLYCK=ON;                     /* ERROR FLAG FOR REPLY          */
         OI    REPLYCK,B'10000000'                                 0293
*   SDUMPPTR=ADDR(SDUMPLF);         /* STORAGE FOR SDUMP             */
         LA    @07,SDUMPLF                                         0294
         ST    @07,SDUMPPTR                                        0294
*   SDUMPLF(ONE:LENGTH(SDUMP))=SDUMPLF(ONE:LENGTH(SDUMP))&&SDUMPLF(ONE:
*       LENGTH(SDUMP));             /* ZERO OUT AREA                 */
         XC    SDUMPLF(40),SDUMPLF                                 0295
*   SDUMPLF(ONE:LENGTH(SDUMP))=LFSDUMP(ONE:LENGTH(SDUMP));/* MOVE  0296
*                                      LIST FORM                     */
         MVC   SDUMPLF(40),LFSDUMP                                 0296
*   SDUASID=ON;                     /* ASID SPECIFIED                */
*   SDUECB=ON;                      /* INDICATE WAIT ON SDUMP      0298
*                                                            @YM4790P*/
         OI    SDUASID(@07),B'00001100'                            0298
*   IF TEXTLNTH>0 THEN              /* THERE IS A DUMP HEADER        */
         CLI   TEXTLNTH,0                                          0299
         BNH   @RF00299                                            0299
*     DO;                                                          0300
*       SDUHDR=ON;                  /* DUMP HEADER SPECIFIED         */
         OI    SDUHDR(@07),B'00010000'                             0301
*       SDUHDRAD=ADDR(DUMPHDR);     /* LOCATE DUMP HEADER            */
         LA    @00,DUMPHDR                                         0302
         ST    @00,SDUHDRAD(,@07)                                  0302
*     END;                                                         0303
*   SDUFLAG1='80'X;                 /* SET FOR SDUMP                 */
@RF00299 L     @07,SDUMPPTR                                        0304
         MVI   SDUFLAG1(@07),X'80'                                 0304
*   USERADDR=0;                     /* ZERO OUT AREA                 */
         SLR   @07,@07                                             0305
         ST    @07,USERADDR                                        0305
*   REG14=R14SAV9;                  /* RESTORE RETURN ADDR           */
         L     REG14,R14SAV9                                       0306
*   END;                                                           0307
@EL00005 DS    0H                                                  0307
@EF00005 DS    0H                                                  0307
@ER00005 BR    @14                                                 0307
*FOLD:                                                             0308
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);/*                       @G33CPMR*/
FOLD     DS    0H                                                  0309
*/* ******************************************************************/
*/*                                                                  */
*/*     THIS ROUTINE WILL FOLD THE REPLY TO UPPER CASE CHARACTERS    */
*/*                                                                  */
*/* ******************************************************************/
*                                                                  0309
*   R14SAV9=REG14;                  /* SAVE RETURN ADDRESS   @G33CPMR*/
         ST    REG14,R14SAV9                                       0309
*   DO I=ONE TO ONETWOOH;           /* FOLD TO UPPER CASE    @G33CPMR*/
         LA    I,1                                                 0310
@DL00310 DS    0H                                                  0311
*     REPLY(I)=REPLY(I)×UPFOLD;     /* FOLD ONE CHAR         @G33CPMR*/
         LA    @07,REPLY-1(I)                                      0311
         OI    0(@07),X'40'                                        0311
*   END;                            /*                       @G33CPMR*/
         AH    I,@CH00047                                          0312
         CH    I,@CH01766                                          0312
         BNH   @DL00310                                            0312
*   I=ONE;                          /* RESET INDEX           @G33CPMR*/
         LA    I,1                                                 0313
*   REG14=R14SAV9;                  /* RESTORE RETURN ADDR   @G33CPMR*/
         L     REG14,R14SAV9                                       0314
*   END;                            /*                       @G33CPMR*/
@EL00006 DS    0H                                                  0315
@EF00006 DS    0H                                                  0315
@ER00006 BR    @14                                                 0315
*DMPREPLY:                                                         0316
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0316
*                                                                  0316
DMPREPLY DS    0H                                                  0317
*/* ******************************************************************/
*/*                                                                  */
*/*          THIS ROUTINE WILL ANALYZE THE OPERATOR REPLY AND        */
*/*          ASSIGN ROUTINES TO HANDLE VARIOUS FUNCTIONS             */
*/*                                                                  */
*/* ******************************************************************/
*                                                                  0317
*   R14SAV6=REG14;                  /* SAVE RETURN ADDRESS           */
         ST    REG14,R14SAV6                                       0317
*   IF CONTINUE=OFE THEN            /* FIRST TIME?           @G33CPMR*/
         TM    CONTINUE,B'10000000'                                0318
         BNZ   @RF00318                                            0318
*     DO;                           /* YES, PROCESS          @G33CPMR*/
*       IF REPLY(ONE:TWO)=UBLANK THEN                              0320
*                                                                  0320
         CLC   REPLY(2),UBLANK                                     0320
         BNE   @RF00320                                            0320
*         /***********************************************************/
*         /*                                                         */
*         /* THE REPLY IS U                                          */
*         /*                                                         */
*         /***********************************************************/
*                                                                  0321
*         DO;                                                      0321
*           REPLYEND=ON;            /* END OF THE REPLY              */
*           REPLYCK=OFE;            /* NO ERROR YET                  */
         OI    REPLYEND,B'00000010'                                0323
         NI    REPLYCK,B'01111111'                                 0323
*           SDUTASID=MASTER;        /* MASTER SCHEDULER ASID         */
         L     @07,SDUMPPTR                                        0324
         MVC   SDUTASID(2,@07),MASTER                              0324
*           CALL DEFAULT;           /* DEFAULT ROUTINE               */
         BAL   @14,DEFAULT                                         0325
*         END;                                                     0326
*       ELSE                                                       0327
*         DO;                                                      0327
         B     @RC00320                                            0327
@RF00320 DS    0H                                                  0328
*           IF REPLY(ONE)=UERROR THEN/* EXAMPLE 'UL' OR 'UM'         */
         CLC   REPLY(1),UERROR                                     0328
         BNE   @RF00328                                            0328
*             DO;                                                  0329
*               REPLYCK=OFE;        /* ERROR CONDITION               */
         NI    REPLYCK,B'01111111'                                 0330
*               MSGCODE='3D'X;      /* KEYWORD VALIE,INVALID         */
         MVI   MSGCODE,X'3D'                                       0331
*               KEYWDERR=DUMP;                                     0332
         MVI   KEYWDERR+4,C' '                                     0332
         MVC   KEYWDERR+5(3),KEYWDERR+4                            0332
         MVC   KEYWDERR(4),DUMP                                    0332
*             END;                                                 0333
*           ELSE                                                   0334
*             ;                                                    0334
@RF00328 DS    0H                                                  0335
*         END;                                                     0335
*       IF REPLY(ONE:FIVE)=ASID&MSGCODE=ZERO THEN                  0336
*                                                                  0336
@RC00320 CLC   REPLY(5),ASID                                       0336
         BNE   @RF00336                                            0336
         CLI   MSGCODE,0                                           0336
         BNE   @RF00336                                            0336
*         /***********************************************************/
*         /*                                                         */
*         /* THE REPLY IS ASID                                       */
*         /*                                                         */
*         /***********************************************************/
*                                                                  0337
*         CALL ITSASID;             /* ASID ROUTINE                  */
         BAL   @14,ITSASID                                         0337
*       ELSE                                                       0338
*         DO;                                                      0338
         B     @RC00336                                            0338
@RF00336 DS    0H                                                  0339
*           IF REPLY(ONE:EIGHT)=JOBNAME&MSGCODE=ZERO×REPLY(ONE:EIGHT)=
*               TSONAME&MSGCODE=ZERO THEN/*                  @G33CPMR*/
*                                                                  0339
         CLC   REPLY(8),JOBNAME                                    0339
         BNE   @GL00003                                            0339
         CLI   MSGCODE,0                                           0339
         BE    @RT00339                                            0339
@GL00003 CLC   REPLY(8),TSONAME                                    0339
         BNE   @RF00339                                            0339
         CLI   MSGCODE,0                                           0339
         BNE   @RF00339                                            0339
@RT00339 DS    0H                                                  0340
*             /*******************************************************/
*             /*                                                     */
*             /* THE REPLY IS JOBNAME OR TSONAME                     */
*             /*                                                     */
*             /*******************************************************/
*                                                                  0340
*             CALL JOBNAMES;        /* PROCESS JOB/TSO NAME          */
         BAL   @14,JOBNAMES                                        0340
*           ELSE                                                   0341
*                                                                  0341
*             /*******************************************************/
*             /*                                                     */
*             /* MASTER SCHEDULER MEMORY WITH SDUMP SVC DEFAULTS     */
*             /*                                                     */
*             /*******************************************************/
*                                                                  0341
*             SDUTASID=MASTER;      /* MASTER SCHEDULER ASID         */
         B     @RC00339                                            0341
@RF00339 L     @07,SDUMPPTR                                        0341
         MVC   SDUTASID(2,@07),MASTER                              0341
*         END;                                                     0342
*     END;                          /*                       @G33CPMR*/
*   ELSE                                                           0344
*     ;                             /*                       @G33CPMR*/
@RF00318 DS    0H                                                  0345
*   IF REPLYEND=OFE&MSGCODE=0 THEN                                 0345
@RC00318 TM    REPLYEND,B'00000010'                                0345
         BNZ   @RF00345                                            0345
         CLI   MSGCODE,0                                           0345
         BNE   @RF00345                                            0345
*     CALL REPLYTWO;                /* CONTINUE THE SCAN             */
         BAL   @14,REPLYTWO                                        0346
*   IF REPLYCK=ON THEN                                             0347
@RF00345 TM    REPLYCK,B'10000000'                                 0347
         BNO   @RF00347                                            0347
*     DO;                                                          0348
*       MSGCODE='3D'X;              /* ERROR CONDITION               */
         MVI   MSGCODE,X'3D'                                       0349
*       KEYWDERR=DUMP;              /* NO KEYWORD FOUND              */
         MVI   KEYWDERR+4,C' '                                     0350
         MVC   KEYWDERR+5(3),KEYWDERR+4                            0350
         MVC   KEYWDERR(4),DUMP                                    0350
*     END;                                                         0351
*   REG14=R14SAV6;                  /* RESTORE RETURN REG            */
@RF00347 L     REG14,R14SAV6                                       0352
*   END;                                                           0353
@EL00007 DS    0H                                                  0353
@EF00007 DS    0H                                                  0353
@ER00007 BR    @14                                                 0353
*REPLYTWO:                                                         0354
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0354
REPLYTWO DS    0H                                                  0355
*   R14SA20=REG14;                  /* SAVE RETURN ADDRESS           */
         ST    REG14,R14SA20                                       0355
*   CONTINUE=OFE;                   /* CLEAR BIT             @G33CPMR*/
         NI    CONTINUE,B'01111111'                                0356
*   DO WHILE REPLYEND=OFE&MSGCODE=ZERO&CONTINUE=OFE;               0357
*                                                                  0357
         B     @DE00357                                            0357
@DL00357 DS    0H                                                  0358
*     /***************************************************************/
*     /*                                                             */
*     /* THE REPLY IS SDATA OR STOR                                  */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0358
*     REPLYCK=OFE;                  /* NO ERROR YET                  */
         NI    REPLYCK,B'01111111'                                 0358
*     IF REPLY(I:I+FIVE)=SDATAB×REPLY(I:I+FIVE)=SDATAC THEN        0359
         LA    @07,REPLY-1(I)                                      0359
         CLC   0(6,@07),SDATAB                                     0359
         BE    @RT00359                                            0359
         LA    @07,REPLY-1(I)                                      0359
         CLC   0(6,@07),SDATAC                                     0359
         BNE   @RF00359                                            0359
@RT00359 DS    0H                                                  0360
*       DO;                                                        0360
*                                                                  0360
*         /***********************************************************/
*         /*                                                         */
*         /* SDATA WITH DEFAULTS                                     */
*         /*                                                         */
*         /***********************************************************/
*                                                                  0361
*         IF SDATDONE=OFE THEN      /* SDATA SPECIFIED BEFORE?     0361
*                                                            @G33CPMR*/
         TM    SDATDONE,B'00100000'                                0361
         BNZ   @RF00361                                            0361
*           DO;                     /* NO, PROCEED           @G33CPMR*/
*             CALL DEFAULT;         /* SDATA DEFAULT OPTIONS         */
         BAL   @14,DEFAULT                                         0363
*             SDATDONE=ON;          /* OPERAND DONE          @G33CPMR*/
         OI    SDATDONE,B'00100000'                                0364
*             I=I+SIX;              /* ADVANCE INDEX                 */
         AH    I,@CH00599                                          0365
*             IF REPLY(I)=BLANK THEN/* END OF THE REPLY              */
         LA    @07,REPLY-1(I)                                      0366
         CLI   0(@07),C' '                                         0366
         BNE   @RF00366                                            0366
*               REPLYEND=ON;        /* INDICATE THE END              */
         OI    REPLYEND,B'00000010'                                0367
*             ELSE                                                 0368
*               ;                                                  0368
@RF00366 DS    0H                                                  0369
*           END;                    /*                       @G33CPMR*/
*         ELSE                      /*                       @G33CPMR*/
*           CALL CONFLICT;          /* YES, ERROR            @G33CPMR*/
         B     @RC00361                                            0370
@RF00361 BAL   @14,CONFLICT                                        0370
*       END;                        /* END OF 'SDATA ' SUBROUTINE  0371
*                                                            @G33CPMR*/
*     ELSE                                                         0372
*       IF REPLY(I:I+SIX)=SDATAE THEN/* SELECTIVE OPTIONS            */
*                                                                  0372
         B     @RC00359                                            0372
@RF00359 LA    @07,REPLY-1(I)                                      0372
         CLC   0(7,@07),SDATAE                                     0372
         BNE   @RF00372                                            0372
*         /***********************************************************/
*         /*                                                         */
*         /* SDATA WITH OPTIONS                                      */
*         /*                                                         */
*         /***********************************************************/
*                                                                  0373
*         DO;                       /* YES, PROCEED          @G33CPMR*/
*           IF SDATDONE=OFE THEN    /* SPECIFIED BEFORE?     @G33CPMR*/
         TM    SDATDONE,B'00100000'                                0374
         BNZ   @RF00374                                            0374
*             CALL ITSSDATA;        /* SDATA WITH OPTIONS            */
         BAL   @14,ITSSDATA                                        0375
*           ELSE                    /*                       @G33CPMR*/
*             CALL CONFLICT;        /* YES, ERROR            @G33CPMR*/
         B     @RC00374                                            0376
@RF00374 BAL   @14,CONFLICT                                        0376
*         END;                      /* END OF 'SDATA=' SUBROUTINE  0377
*                                                            @G33CPMR*/
*       ELSE                                                       0378
*                                                                  0378
*         /***********************************************************/
*         /*                                                         */
*         /* STOR WITH ADDRESS RANGE(S)                              */
*         /*                                                         */
*         /***********************************************************/
*                                                                  0378
*         IF REPLY(I:I+THREE)=STOR THEN/* KEYWORD IS STOR            */
         B     @RC00372                                            0378
@RF00372 LA    @07,REPLY-1(I)                                      0378
         CLC   0(4,@07),STOR                                       0378
         BNE   @RF00378                                            0378
*           DO;                     /*                       @G33CPMR*/
*             IF STORDONE=OFE THEN  /* SPECIFIED BEFORE?     @G33CPMR*/
         TM    STORDONE,B'01000000'                                0380
         BNZ   @RF00380                                            0380
*               CALL ITSSTOR;       /* STOR ADDRESS                  */
         BAL   @14,ITSSTOR                                         0381
*             ELSE                  /*                       @G33CPMR*/
*               CALL CONFLICT;      /* YES, ERROR            @G33CPMR*/
         B     @RC00380                                            0382
@RF00380 BAL   @14,CONFLICT                                        0382
*           END;                    /* END OF STOR SUBROUTINE      0383
*                                                            @G33CPMR*/
*         ELSE                      /*                       @G33CPMR*/
*                                                                  0384
*           /*********************************************************/
*           /*                                                       */
*           /* OPERAND 'CONT' IS SPECIFIED'                  @G33CPMR*/
*           /*                                                       */
*           /*********************************************************/
*                                                                  0384
*           IF REPLY(I:I+THREE)=CONT THEN/* 'CONT' SPECIFIED?      0384
*                                                            @G33CPMR*/
         B     @RC00378                                            0384
@RF00378 LA    @07,REPLY-1(I)                                      0384
         CLC   0(4,@07),CONT                                       0384
         BNE   @RF00384                                            0384
*             DO;                   /* YES, PROCEED          @G33CPMR*/
*               IF REPLY(I+FOUR)^=BLANK THEN/* BLANK AFTERWARD?    0386
*                                                            @G33CPMR*/
         LA    @07,REPLY+3(I)                                      0386
         CLI   0(@07),C' '                                         0386
         BE    @RF00386                                            0386
*                 DO;               /* YES!                  @G33CPMR*/
*                   MSGCODE=IEE307I;/* ERR CONDITION         @G33CPMR*/
         MVI   MSGCODE,X'07'                                       0388
*                   KEYWDERR=DUMP;  /* INV KEYWORD           @G33CPMR*/
         MVI   KEYWDERR+4,C' '                                     0389
         MVC   KEYWDERR+5(3),KEYWDERR+4                            0389
         MVC   KEYWDERR(4),DUMP                                    0389
*                 END;              /*                       @G33CPMR*/
*               ELSE                /*                       @G33CPMR*/
*                 DO;               /*                       @G33CPMR*/
         B     @RC00386                                            0391
@RF00386 DS    0H                                                  0392
*                   CONTINUE=ON;    /* NO, END OF DATA LINE  @G33CPMR*/
         OI    CONTINUE,B'10000000'                                0392
*                   IF SDATDONE=OFE THEN/* OPTIONS SPECIFIED?      0393
*                                                            @G33CPMR*/
         TM    SDATDONE,B'00100000'                                0393
         BNZ   @RF00393                                            0393
*                     CALL DEFAULT; /* NO, SET DEFAULTS      @G33CPMR*/
         BAL   @14,DEFAULT                                         0394
*                   ELSE                                           0395
*                     ;             /*                       @G33CPMR*/
@RF00393 DS    0H                                                  0396
*                 END;              /*                       @G33CPMR*/
*             END;                  /* END OF CONT SUBROUTINE      0397
*                                                            @G33CPMR*/
*           ELSE                    /* NOT 'CONT'            @G33CPMR*/
*                                                                  0398
*             /*******************************************************/
*             /*                                                     */
*             /* OPERAND 'END' IS SPECIFIED'                 @G33CPMR*/
*             /*                                                     */
*             /*******************************************************/
*                                                                  0398
*             IF REPLY(I:I+TWO)=ENDC THEN/* 'END' SPECIFIED? @G33CPMR*/
         B     @RC00384                                            0398
@RF00384 LA    @07,REPLY-1(I)                                      0398
         CLC   0(3,@07),ENDC                                       0398
         BNE   @RF00398                                            0398
*               DO;                 /* YES, PROCEED          @G33CPMR*/
*                 IF REPLY(I+THREE)^=BLANK THEN/* BLANK AFTERWARD? 0400
*                                                            @G33CPMR*/
         LA    @07,REPLY+2(I)                                      0400
         CLI   0(@07),C' '                                         0400
         BE    @RF00400                                            0400
*                   DO;             /* NO, PROCEED           @G33CPMR*/
*                     MSGCODE=IEE307I;/* ERR CONDITION       @G33CPMR*/
         MVI   MSGCODE,X'07'                                       0402
*                     KEYWDERR=DUMP;/* INV KEYWORD           @G33CPMR*/
         MVI   KEYWDERR+4,C' '                                     0403
         MVC   KEYWDERR+5(3),KEYWDERR+4                            0403
         MVC   KEYWDERR(4),DUMP                                    0403
*                   END;            /*                       @G33CPMR*/
*                 ELSE              /*                       @G33CPMR*/
*                   DO;             /*                       @G33CPMR*/
         B     @RC00400                                            0405
@RF00400 DS    0H                                                  0406
*                     REPLYEND=ON;  /* YES, END OF COMMAND INPUT   0406
*                                                            @G33CPMR*/
         OI    REPLYEND,B'00000010'                                0406
*                     IF STORDONE=ON&SDATDONE=OFE THEN/* DEFAULTS  0407
*                                      SET?                  @G33CPMR*/
         TM    STORDONE,B'01000000'                                0407
         BNO   @RF00407                                            0407
         TM    SDATDONE,B'00100000'                                0407
         BNZ   @RF00407                                            0407
*                       DUMPOPTS=DUMPOPTS&&DUMPOPTS;/* CLEAR       0408
*                                      PRESETTED DEFAULTS    @G33CPMR*/
         L     @07,SDUMPPTR                                        0408
         XC    DUMPOPTS(2,@07),DUMPOPTS(@07)                       0408
*                     ELSE                                         0409
*                       ;           /*                       @G33CPMR*/
@RF00407 DS    0H                                                  0410
*                   END;            /*                       @G33CPMR*/
*               END;                /* END OF 'END' SUBROUTINE     0411
*                                                            @G33CPMR*/
*             ELSE                  /*                       @G33CPMR*/
*                                                                  0412
*               /*****************************************************/
*               /*                                                   */
*               /* NO VAILD OPERAND FOUND - PREPARE FOR ERROR MESSAGE*/
*               /*                                           @G33CPMR*/
*               /*                                                   */
*               /*****************************************************/
*                                                                  0412
*               DO;                 /*                       @G33CPMR*/
         B     @RC00398                                            0412
@RF00398 DS    0H                                                  0413
*                 MSGCODE=IEE309I;  /* ERROR CONDITION       @G33CPMR*/
         MVI   MSGCODE,X'09'                                       0413
*                 KEYWDERR=DUMP;    /* INVALID KEYWORD       @G33CPMR*/
         MVI   KEYWDERR+4,C' '                                     0414
         MVC   KEYWDERR+5(3),KEYWDERR+4                            0414
         MVC   KEYWDERR(4),DUMP                                    0414
*               END;                /*                       @G33CPMR*/
*   END;                                                           0416
@RC00398 DS    0H                                                  0416
@RC00384 DS    0H                                                  0416
@RC00378 DS    0H                                                  0416
@RC00372 DS    0H                                                  0416
@RC00359 DS    0H                                                  0416
@DE00357 TM    REPLYEND,B'00000010'                                0416
         BNZ   @DC00357                                            0416
         CLI   MSGCODE,0                                           0416
         BNE   @DC00357                                            0416
         TM    CONTINUE,B'10000000'                                0416
         BZ    @DL00357                                            0416
@DC00357 DS    0H                                                  0417
*   REG14=R14SA20;                  /* RESTORE RETURN REG            */
         L     REG14,R14SA20                                       0417
*   END;                                                           0418
@EL00008 DS    0H                                                  0418
@EF00008 DS    0H                                                  0418
@ER00008 BR    @14                                                 0418
*ITSASID:                                                          0419
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0419
*                                                                  0419
ITSASID  DS    0H                                                  0420
*/* ******************************************************************/
*/*                                                                  */
*/*    THIS ROUTINE WILL DO THE FOLLOWING                            */
*/*      1.  DETERMINE THE LENGTH OF THE ASID FIELD                  */
*/*      2.  DETERMINE IF THE EBCDIC CHARACTERS ARE BETWEEN          */
*/*          ZERO AND NINE                                           */
*/*      3.  DETERMINE ERROR CONDITIONS                              */
*/*      4.  CALL  FINDASID TO PACK AND CVB THE ASID                 */
*/*      5.  DETERMINE IF A KEYWORD FOLLOWS THE ASID                 */
*/*                                                                  */
*/* ******************************************************************/
*                                                                  0420
*   R14SA12=REG14;                  /* SAVE RETURN ADDRESS           */
         ST    REG14,R14SA12                                       0420
*   REPLYCK=OFE;                    /* NO ERROR YET                  */
         NI    REPLYCK,B'01111111'                                 0421
*   IF REPLY(SIX)^=LFTPRN THEN      /* A LEFT PARENTHESIS?   @G33CPMR*/
*                                                                  0422
         CLI   REPLY+5,C'('                                        0422
         BE    @RF00422                                            0422
*     /***************************************************************/
*     /*                                                             */
*     /* A SINGLE ASID NUMBER HAS BEEN SPECIFIED             @G33CPMR*/
*     /*                                                             */
*     /***************************************************************/
*                                                                  0423
*     DO;                           /* NO, A SINGLE ASID     @G33CPMR*/
*       I2=SIX;                     /* SET INDEX TO 1ST CHAR.      0424
*                                                            @G33CPMR*/
         LA    @07,6                                               0424
         ST    @07,I2                                              0424
*       LOOPCNT=ONE;                /* LOOP ONLY ONCE        @G33CPMR*/
         MVC   LOOPCNT(2),@CH00047                                 0425
*       DO I=SIX TO ELEVEN WHILE REPLY(I)^=COMMA&REPLY(I)^=BLANK&  0426
*             MSGCODE=ZERO;         /* SYNTAX LOOP           @G33CPMR*/
         LR    I,@07                                               0426
@DL00426 LA    @07,REPLY-1(I)                                      0426
         CLI   0(@07),C','                                         0426
         BE    @DC00426                                            0426
         LA    @07,REPLY-1(I)                                      0426
         CLI   0(@07),C' '                                         0426
         BE    @DC00426                                            0426
         CLI   MSGCODE,0                                           0426
         BNE   @DC00426                                            0426
*         IF REPLY(I)>CHARNINE×REPLY(I)<CHARZERO THEN              0427
         LA    @07,REPLY-1(I)                                      0427
         CLI   0(@07),C'9'                                         0427
         BH    @RT00427                                            0427
         LA    @07,REPLY-1(I)                                      0427
         CLI   0(@07),C'0'                                         0427
         BNL   @RF00427                                            0427
@RT00427 DS    0H                                                  0428
*           DO;                     /* THEN ASID NOT DECIMAL         */
*             MSGCODE=IEE306I;      /* ERROR CONDITION               */
         MVI   MSGCODE,X'06'                                       0429
*             KEYWDERR=NOTASID;     /* INVALID CHARACTER             */
         MVI   KEYWDERR+4,C' '                                     0430
         MVC   KEYWDERR+5(3),KEYWDERR+4                            0430
         MVC   KEYWDERR(4),NOTASID                                 0430
*           END;                    /*                       @G33CPMR*/
*         ELSE                                                     0432
*           ;                       /*                       @G33CPMR*/
@RF00427 DS    0H                                                  0433
*       END;                        /*                       @G33CPMR*/
         AH    I,@CH00047                                          0433
         CH    I,@CH00035                                          0433
         BNH   @DL00426                                            0433
@DC00426 DS    0H                                                  0434
*       IF I=SIX×I=TWELVE THEN      /* VALID INDEX?          @G33CPMR*/
         CH    I,@CH00599                                          0434
         BE    @RT00434                                            0434
         CH    I,@CH00034                                          0434
         BNE   @RF00434                                            0434
@RT00434 DS    0H                                                  0435
*         DO;                       /* NO                    @G33CPMR*/
*           MSGCODE=IEE308I;        /* ERROR CONDITION               */
         MVI   MSGCODE,X'08'                                       0436
*           KEYWDERR=NOTASID;       /* NO ASID SPECIFIED             */
         MVI   KEYWDERR+4,C' '                                     0437
         MVC   KEYWDERR+5(3),KEYWDERR+4                            0437
         MVC   KEYWDERR(4),NOTASID                                 0437
*         END;                      /*                               */
*       ELSE                                                       0439
*         ;                         /*                       @G33CPMR*/
@RF00434 DS    0H                                                  0440
*     END;                          /*                       @G33CPMR*/
*   ELSE                            /*                       @G33CPMR*/
*     IF SU33BIT=ON THEN            /* SU33 INSTALLED?       @G33CPMR*/
*                                                                  0441
         B     @RC00422                                            0441
@RF00422 L     @07,CVTPTR                                          0441
         L     @07,CVTIHASU(,@07)                                  0441
         TM    SU33BIT(@07),B'01000000'                            0441
         BNO   @RF00441                                            0441
*       /*************************************************************/
*       /*                                                           */
*       /* MULTIPLE ASID'S HAVE BEEN SPECIFIED               @G33CPMR*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0442
*       DO;                         /* YES, MULTIPLE ASID'S  @G33CPMR*/
*         I2=SEVEN;                 /* SET INDEX TO 1ST CHAR.      0443
*                                                            @G33CPMR*/
         LA    @07,7                                               0443
         ST    @07,I2                                              0443
*         I=I2;                     /* SET INDEX TO 1ST CHAR.      0444
*                                                            @G33CPMR*/
         LR    I,@07                                               0444
*         LOOPCNT=ZERO;             /* INITIALIZE LOOP COUNT @G33CPMR*/
         SLR   @07,@07                                             0445
         STH   @07,LOOPCNT                                         0445
*         DO WHILE REPLY(I)^=RTPRN&MSGCODE=ZERO;/*           @G33CPMR*/
         B     @DE00446                                            0446
@DL00446 DS    0H                                                  0447
*           COUNT=ZERO;             /* CLEAR LENGTH COUNT    @G33CPMR*/
         SLR   @07,@07                                             0447
         STH   @07,COUNT                                           0447
*           DO WHILE REPLY(I)^=RTPRN&REPLY(I)^=COMMA&MSGCODE=ZERO&I<=
*                 ONETWOOH;         /*                       @G33CPMR*/
         B     @DE00448                                            0448
@DL00448 DS    0H                                                  0449
*             IF REPLY(I)>CHARNINE×REPLY(I)<CHARZERO THEN          0449
         LA    @07,REPLY-1(I)                                      0449
         CLI   0(@07),C'9'                                         0449
         BH    @RT00449                                            0449
         LA    @07,REPLY-1(I)                                      0449
         CLI   0(@07),C'0'                                         0449
         BNL   @RF00449                                            0449
@RT00449 DS    0H                                                  0450
*               DO;                 /* VALID CHARACTERS?     @G33CPMR*/
*                 MSGCODE=IEE306I;  /* NO, ERROR CONDITION           */
         MVI   MSGCODE,X'06'                                       0451
*                 KEYWDERR=NOTASID; /* NO ASID SPECIFIED             */
         MVI   KEYWDERR+4,C' '                                     0452
         MVC   KEYWDERR+5(3),KEYWDERR+4                            0452
         MVC   KEYWDERR(4),NOTASID                                 0452
*               END;                /*                       @G33CPMR*/
*             ELSE                  /*                       @G33CPMR*/
*               DO;                 /* YES, PROCEED          @G33CPMR*/
         B     @RC00449                                            0454
@RF00449 DS    0H                                                  0455
*                 COUNT=COUNT+ONE;  /* UP LENGTH COUNT       @G33CPMR*/
         LA    @07,1                                               0455
         LH    @02,COUNT                                           0455
         ALR   @02,@07                                             0455
         STH   @02,COUNT                                           0455
*                 I=I+ONE;          /* BUMP INDEX            @G33CPMR*/
         ALR   I,@07                                               0456
*               END;                /*                       @G33CPMR*/
*           END;                    /*                       @G33CPMR*/
@RC00449 DS    0H                                                  0458
@DE00448 LA    @07,REPLY-1(I)                                      0458
         CLI   0(@07),C')'                                         0458
         BE    @DC00448                                            0458
         LA    @07,REPLY-1(I)                                      0458
         CLI   0(@07),C','                                         0458
         BE    @DC00448                                            0458
         CLI   MSGCODE,0                                           0458
         BNE   @DC00448                                            0458
         CH    I,@CH01766                                          0458
         BNH   @DL00448                                            0458
@DC00448 DS    0H                                                  0459
*           IF MSGCODE=ZERO THEN    /* ERROR-FREE NOW?       @G33CPMR*/
         CLI   MSGCODE,0                                           0459
         BNE   @RF00459                                            0459
*             DO;                   /* YES, PROCEED          @G33CPMR*/
*                                                                  0460
*               /*****************************************************/
*               /*                                                   */
*               /* CHECK FOR CORRECT ASID LENGTH             @G33CPMR*/
*               /*                                                   */
*               /*****************************************************/
*                                                                  0461
*               IF COUNT<=ZERO×COUNT>FIVE THEN/* ASID LENGTH?      0461
*                                                            @G33CPMR*/
         LH    @07,COUNT                                           0461
         LTR   @07,@07                                             0461
         BNP   @RT00461                                            0461
         CH    @07,@CH00367                                        0461
         BNH   @RF00461                                            0461
@RT00461 DS    0H                                                  0462
*                 DO;               /* ERROR                 @G33CPMR*/
*                   MSGCODE=IEE308I;/* TERM LENGTH           @G33CPMR*/
         MVI   MSGCODE,X'08'                                       0463
*                   KEYWDERR=NOTASID;/* NO ASID SPECIFIED            */
         MVI   KEYWDERR+4,C' '                                     0464
         MVC   KEYWDERR+5(3),KEYWDERR+4                            0464
         MVC   KEYWDERR(4),NOTASID                                 0464
*                 END;              /*                       @G33CPMR*/
*               ELSE                /* FIVE OR LESS          @G33CPMR*/
*                 DO;               /* ALL OKAY!!!           @G33CPMR*/
         B     @RC00461                                            0466
@RF00461 DS    0H                                                  0467
*                   LOOPCNT=LOOPCNT+ONE;/* UP LOOP COUNT     @G33CPMR*/
         LA    @07,1                                               0467
         LH    @02,LOOPCNT                                         0467
         ALR   @02,@07                                             0467
         STH   @02,LOOPCNT                                         0467
*                   IF REPLY(I)=COMMA THEN/* A COMMA?        @G33CPMR*/
         LA    @02,REPLY-1(I)                                      0468
         CLI   0(@02),C','                                         0468
         BNE   @RF00468                                            0468
*                     I=I+ONE;      /* YES, BUMP INDEX       @G33CPMR*/
         ALR   I,@07                                               0469
*                   ELSE                                           0470
*                     ;             /*                       @G33CPMR*/
@RF00468 DS    0H                                                  0471
*                 END;              /*                       @G33CPMR*/
*             END;                  /*                       @G33CPMR*/
*           ELSE                                                   0473
*             ;                     /*                       @G33CPMR*/
@RF00459 DS    0H                                                  0474
*         END;                      /*                       @G33CPMR*/
@RC00459 DS    0H                                                  0474
@DE00446 LA    @07,REPLY-1(I)                                      0474
         CLI   0(@07),C')'                                         0474
         BE    @DC00446                                            0474
         CLI   MSGCODE,0                                           0474
         BE    @DL00446                                            0474
@DC00446 DS    0H                                                  0475
*         IF MSGCODE=ZERO THEN      /* STILL ERROR-FREE?     @G33CPMR*/
*                                                                  0475
         CLI   MSGCODE,0                                           0475
         BNE   @RF00475                                            0475
*           /*********************************************************/
*           /*                                                       */
*           /* CHECK FOR NUMBER OF ALLOWABLE ASID'S          @G33CPMR*/
*           /*                                                       */
*           /*********************************************************/
*                                                                  0476
*           DO;                     /* YES                   @G33CPMR*/
*             IF LOOPCNT>FIFTEEN THEN/* LOOP COUNT?          @G33CPMR*/
         LH    @07,LOOPCNT                                         0477
         CH    @07,@CH00080                                        0477
         BNH   @RF00477                                            0477
*               DO;                 /* MORE THAN 15          @G33CPMR*/
*                 MSGCODE=IEE308I;  /* ERROR CONDITION       @G33CPMR*/
         MVI   MSGCODE,X'08'                                       0479
*                 KEYWDERR=DUMP;    /* SET FILLER            @G33CPMR*/
         MVI   KEYWDERR+4,C' '                                     0480
         MVC   KEYWDERR+5(3),KEYWDERR+4                            0480
         MVC   KEYWDERR(4),DUMP                                    0480
*               END;                /*                       @G33CPMR*/
*             ELSE                                                 0482
*               ;                   /*                       @G33CPMR*/
@RF00477 DS    0H                                                  0483
*           END;                    /*                       @G33CPMR*/
*         ELSE                                                     0484
*           ;                       /*                       @G33CPMR*/
@RF00475 DS    0H                                                  0485
*       END;                        /*                       @G33CPMR*/
*     ELSE                          /* SU33 NOT INSTALLED    @G33CPMR*/
*                                                                  0486
*       /*************************************************************/
*       /*                                                           */
*       /* MULTIPLES NOT PERMITTED ON NON-SU33 SYSTEMS       @G33CPMR*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0486
*       DO;                         /*                       @G33CPMR*/
         B     @RC00441                                            0486
@RF00441 DS    0H                                                  0487
*         MSGCODE=IEE308I;          /* ERROR CONDITION       @G33CPMR*/
         MVI   MSGCODE,X'08'                                       0487
*         KEYWDERR=DUMP;            /* SET FILLER            @G33CPMR*/
         MVI   KEYWDERR+4,C' '                                     0488
         MVC   KEYWDERR+5(3),KEYWDERR+4                            0488
         MVC   KEYWDERR(4),DUMP                                    0488
*       END;                        /*                       @G33CPMR*/
*   IF MSGCODE=0 THEN               /* VALID ASID SYNTAX             */
*                                                                  0490
@RC00441 DS    0H                                                  0490
@RC00422 CLI   MSGCODE,0                                           0490
         BNE   @RF00490                                            0490
*     /***************************************************************/
*     /*                                                             */
*     /* STILL ERROR FREE - PREPARE THE ASID                 @G33CPMR*/
*     /*                                                             */
*     /***************************************************************/
*                                                                  0491
*     DO;                                                          0491
*       I=I2;                       /* RESET INDEX           @G33CPMR*/
         L     I,I2                                                0492
*       IF LOOPCNT>ONE THEN         /* LOOP ONLY ONCE?       @G33CPMR*/
         LA    @07,1                                               0493
         CH    @07,LOOPCNT                                         0493
         BNL   @RF00493                                            0493
*         DO;                       /* NO.....               @G33CPMR*/
*           SDUNEW=ON;              /* SET NEW DUMP BIT      @G33CPMR*/
*           SDUASLST=ON;            /* INDICATE MULTIPLE ASID      0496
*                                                            @G33CPMR*/
         L     @02,SDUMPPTR                                        0496
         OI    SDUNEW(@02),B'00110000'                             0496
*           SDUASIDP=ADDR(ASIDAREA);/* SET ADDRESS           @G33CPMR*/
         LA    @00,ASIDAREA                                        0497
         ST    @00,SDUASIDP(,@02)                                  0497
*           COUNT=ONE;              /* INITIALIZE ARRAY INDEX      0498
*                                                            @G33CPMR*/
         STH   @07,COUNT                                           0498
*         END;                      /*                       @G33CPMR*/
*       ELSE                                                       0500
*         ;                         /*                       @G33CPMR*/
@RF00493 DS    0H                                                  0501
*       DO UNTIL LOOPCNT=ZERO×MSGCODE^=ZERO;/* LOOP UNTIL ZERO     0501
*                                                            @G33CPMR*/
@DL00501 DS    0H                                                  0502
*         DO UNTIL REPLY(I)=COMMA×REPLY(I)=BLANK×REPLY(I)=RTPRN;/* 0502
*                                      LOOP TO GET LENGTH    @G33CPMR*/
@DL00502 DS    0H                                                  0503
*           I=I+ONE;                /* BUMP INDEX            @G33CPMR*/
         AH    I,@CH00047                                          0503
*         END;                      /*                       @G33CPMR*/
@DE00502 LA    @07,REPLY-1(I)                                      0504
         CLI   0(@07),C','                                         0504
         BE    @DC00502                                            0504
         LA    @07,REPLY-1(I)                                      0504
         CLI   0(@07),C' '                                         0504
         BE    @DC00502                                            0504
         LA    @07,REPLY-1(I)                                      0504
         CLI   0(@07),C')'                                         0504
         BNE   @DL00502                                            0504
@DC00502 DS    0H                                                  0505
*         I3=I-I2-ONE;              /* COMPUTE LENGTH        @G33CPMR*/
         LR    @07,I                                               0505
         SL    @07,I2                                              0505
         BCTR  @07,0                                               0505
         ST    @07,I3                                              0505
*         CALL FINDASID;            /* PACK AND CVB THE ASID         */
         BAL   @14,FINDASID                                        0506
*                                                                  0507
*         /***********************************************************/
*         /*                                                         */
*         /* AN ASID WAS PROCESSED                           @G33CPMR*/
*         /*                                                         */
*         /***********************************************************/
*                                                                  0507
*         IF MSGCODE=ZERO THEN      /* VALID ASID?           @G33CPMR*/
         CLI   MSGCODE,0                                           0507
         BNE   @RF00507                                            0507
*           DO;                     /* YES                   @G33CPMR*/
*             IF SDUASIDP^=ZERO THEN/* MULTIPLE ASID?        @G33CPMR*/
         L     @07,SDUMPPTR                                        0509
         L     @02,SDUASIDP(,@07)                                  0509
         LTR   @02,@02                                             0509
         BZ    @RF00509                                            0509
*               DO;                 /* YES                   @G33CPMR*/
*                 IF REPLY(I)=RTPRN THEN/* LAST ONE?         @G33CPMR*/
         LA    @02,REPLY-1(I)                                      0511
         CLI   0(@02),C')'                                         0511
         BNE   @RF00511                                            0511
*                   SDUTASID=SDUTASID×HIGHBIT;/* YES, SET HIGH ORDER
*                                      BIT                   @G33CPMR*/
         L     @02,@CF01860                                        0512
         MVC   @ZT00002+2(2),SDUTASID(@07)                         0512
         O     @02,@ZT00002                                        0512
         STH   @02,SDUTASID(,@07)                                  0512
*                 ELSE                                             0513
*                   ;               /*                       @G33CPMR*/
@RF00511 DS    0H                                                  0514
*                 ASIDAREA(COUNT)=SDUTASID;/* PUT IN THE ARRAY     0514
*                                                            @G33CPMR*/
         LH    @07,COUNT                                           0514
         ALR   @07,@07                                             0514
         L     @02,SDUMPPTR                                        0514
         MVC   @ZT00002+2(2),SDUTASID(@02)                         0514
         L     @09,@ZT00002                                        0514
         STH   @09,ASIDAREA-2(@07)                                 0514
*                 SDUTASID=SDUTASID&&SDUTASID;/* CLEAR TEMP. AREA  0515
*                                                            @G33CPMR*/
         LR    @07,@09                                             0515
         XR    @07,@09                                             0515
         STH   @07,SDUTASID(,@02)                                  0515
*               END;                /*                       @G33CPMR*/
*             ELSE                                                 0517
*               ;                   /*                       @G33CPMR*/
@RF00509 DS    0H                                                  0518
*             IF REPLY(I)=COMMA×REPLY(I)=RTPRN THEN/*        @G33CPMR*/
         LA    @07,REPLY-1(I)                                      0518
         CLI   0(@07),C','                                         0518
         BE    @RT00518                                            0518
         LA    @07,REPLY-1(I)                                      0518
         CLI   0(@07),C')'                                         0518
         BNE   @RF00518                                            0518
@RT00518 DS    0H                                                  0519
*               DO;                 /* THERE ARE MORE TO COME      0519
*                                                            @G33CPMR*/
*                 I=I+ONE;          /* BUMP INDEX            @G33CPMR*/
         AH    I,@CH00047                                          0520
*                 I2=I;             /* SET INDEX             @G33CPMR*/
         ST    I,I2                                                0521
*               END;                /*                       @G33CPMR*/
*             ELSE                                                 0523
*               ;                   /*                       @G33CPMR*/
@RF00518 DS    0H                                                  0524
*             LOOPCNT=LOOPCNT-ONE;  /* DECREASE LOOP COUNTER @G33CPMR*/
         LH    @07,LOOPCNT                                         0524
         BCTR  @07,0                                               0524
         STH   @07,LOOPCNT                                         0524
*             COUNT=COUNT+ONE;      /* BUMP ARRAY INDEX      @G33CPMR*/
         LH    @07,COUNT                                           0525
         LA    @07,1(,@07)                                         0525
         STH   @07,COUNT                                           0525
*           END;                    /*                       @G33CPMR*/
*         ELSE                                                     0527
*           ;                       /*                       @G33CPMR*/
@RF00507 DS    0H                                                  0528
*       END;                        /*                       @G33CPMR*/
@DE00501 LH    @07,LOOPCNT                                         0528
         LTR   @07,@07                                             0528
         BZ    @DC00501                                            0528
         CLI   MSGCODE,0                                           0528
         BE    @DL00501                                            0528
@DC00501 DS    0H                                                  0529
*                                                                  0529
*       /*************************************************************/
*       /*                                                           */
*       /* CHECK FOR BLANK AFTER PROCESSED ASID              @G33CPMR*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0529
*       IF REPLY(I)=BLANK×REPLY(I-ONE:I)=PRNBLANK×REPLY(I-ONE:I+THREE)=
*           PRNCMEND THEN           /*                       @G33CPMR*/
         LA    @07,REPLY-1(I)                                      0529
         CLI   0(@07),C' '                                         0529
         BE    @RT00529                                            0529
         LA    @07,REPLY-2(I)                                      0529
         CLC   0(2,@07),@CC01734                                   0529
         BE    @RT00529                                            0529
         LA    @07,REPLY-2(I)                                      0529
         CLC   0(5,@07),@CC01736                                   0529
         BNE   @RF00529                                            0529
@RT00529 DS    0H                                                  0530
*         DO;                                                      0530
*           REPLYEND=ON;            /* END OF THE REPLY              */
         OI    REPLYEND,B'00000010'                                0531
*           CALL DEFAULT;           /* DEFAULT SDATA OPTIONS         */
         BAL   @14,DEFAULT                                         0532
*         END;                                                     0533
*       ELSE                                                       0534
*         ;                                                        0534
@RF00529 DS    0H                                                  0535
*       IF REPLY(I-ONE:I)=PRNCOM THEN/* A '),'?              @G33CPMR*/
         LA    @07,REPLY-2(I)                                      0535
         CLC   0(2,@07),@CC01732                                   0535
         BNE   @RF00535                                            0535
*         I=I+1;                    /* ADVANCE INDEX                 */
         AH    I,@CH00047                                          0536
*       ELSE                                                       0537
*         ;                         /* NO                    @G33CPMR*/
@RF00535 DS    0H                                                  0538
*     END;                          /*                       @G33CPMR*/
*   ELSE                                                           0539
*     ;                             /*                       @G33CPMR*/
@RF00490 DS    0H                                                  0540
*   REG14=R14SA12;                  /* RESTORE RETURN ADDR           */
         L     REG14,R14SA12                                       0540
*   END;                                                           0541
@EL00009 DS    0H                                                  0541
@EF00009 DS    0H                                                  0541
@ER00009 BR    @14                                                 0541
*JOBNAMES:                                                         0542
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0542
*                                                                  0542
JOBNAMES DS    0H                                                  0543
*/* ******************************************************************/
*/*                                                                  */
*/*            JOBNAMES WILL DO THE FOLLOWING                        */
*/*              1.  DETERMINE LENGTH OF THE JOBNAME                 */
*/*              2.  CALL FINDJOB TO FIND THE JOB ON                 */
*/*                  THE CSCB CHAIN AND GET ITS ASID                 */
*/*              3.  CALL DEFAULT ROUTINE IF DEFAULT                 */
*/*                  OPTIONS ARE INDICATED                           */
*/*                                                                  */
*/* ******************************************************************/
*                                                                  0543
*   R14SAV8=REG14;                  /* SAVE RETURN ADDRESS           */
         ST    REG14,R14SAV8                                       0543
*   IF REPLY(ONE:EIGHT)=TSONAME THEN/* TSO JOB ID            @ZA00880*/
         CLC   REPLY(8),TSONAME                                    0544
         BNE   @RF00544                                            0544
*     TSOBIT=ON;                    /* SET TSO INDICATOR     @ZA00880*/
         OI    TSOBIT,B'00000001'                                  0545
*   REPLYCK=OFE;                    /* NO ERROR YET                  */
@RF00544 NI    REPLYCK,B'01111111'                                 0546
*   IF REPLY(NINE)^=LFTPRN THEN     /* A LEFT PARENTHESIS?   @G33CPMR*/
*                                                                  0547
         CLI   REPLY+8,C'('                                        0547
         BE    @RF00547                                            0547
*     /***************************************************************/
*     /*                                                             */
*     /* A SINGLE JOBNAME/TSONAME HAS BEEN SPECIFIED         @G33CPMR*/
*     /*                                                             */
*     /***************************************************************/
*                                                                  0548
*     DO;                           /* NO, A SINGLE NAME     @G33CPMR*/
*       I2=NINE;                    /* SET INDEX TO 1ST CHAR.      0549
*                                                            @G33CPMR*/
         LA    @07,9                                               0549
         ST    @07,I2                                              0549
*       LOOPCNT=ONE;                /* LOOP ONLY ONCE        @G33CPMR*/
         MVC   LOOPCNT(2),@CH00047                                 0550
*       DO I=NINE TO SEVNTEEN WHILE REPLY(I)^=BLANK&REPLY(I)^=COMMA;
         LR    I,@07                                               0551
@DL00551 LA    @07,REPLY-1(I)                                      0551
         CLI   0(@07),C' '                                         0551
         BE    @DC00551                                            0551
         LA    @07,REPLY-1(I)                                      0551
         CLI   0(@07),C','                                         0551
         BE    @DC00551                                            0551
*                                   /* LENGTH OF JOBNAME             */
*       END;                                                       0552
         AH    I,@CH00047                                          0552
         CH    I,@CH01764                                          0552
         BNH   @DL00551                                            0552
@DC00551 DS    0H                                                  0553
*       NAMELGTH=I-NINE;            /* LENGTH JOBNAME                */
         LR    @07,I                                               0553
         SH    @07,@CH00124                                        0553
         STH   @07,NAMELGTH                                        0553
*       IF NAMELGTH<=ZERO×NAMELGTH>EIGHT THEN/*              @G33CPMR*/
         LTR   @07,@07                                             0554
         BNP   @RT00554                                            0554
         CH    @07,@CH00049                                        0554
         BNH   @RF00554                                            0554
@RT00554 DS    0H                                                  0555
*         DO;                                                      0555
*           KEYWDERR=REPLY(ONE:SEVEN);/* INVALID JOBNAME     @G33CPMR*/
         MVI   KEYWDERR+7,C' '                                     0556
         MVC   KEYWDERR(7),REPLY                                   0556
*           MSGCODE=IEE308I;        /* TERM LENGTH ERROR     @G33CPMR*/
         MVI   MSGCODE,X'08'                                       0557
*         END;                      /*                       @G33CPMR*/
*       ELSE                                                       0559
*         ;                         /*                       @G33CPMR*/
@RF00554 DS    0H                                                  0560
*     END;                          /*                       @G33CPMR*/
*   ELSE                            /*                       @G33CPMR*/
*     IF SU33BIT=ON THEN            /* SU33 INSTALLED?       @G33CPMR*/
*                                                                  0561
         B     @RC00547                                            0561
@RF00547 L     @07,CVTPTR                                          0561
         L     @07,CVTIHASU(,@07)                                  0561
         TM    SU33BIT(@07),B'01000000'                            0561
         BNO   @RF00561                                            0561
*       /*************************************************************/
*       /*                                                           */
*       /* MULTIPLE JOBNAMES/TSONAMES HAVE BEEN SPECIFIED    @G33CPMR*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0562
*       DO;                         /* YES, MULTIPLE NAMES   @G33CPMR*/
*         I2=TEN;                   /* SET INDEX TO 1ST CHAR @G33CPMR*/
         LA    @07,10                                              0563
         ST    @07,I2                                              0563
*         I=I2;                     /* SET INDEX TO 1ST CHAR @G33CPMR*/
         LR    I,@07                                               0564
*         LOOPCNT=ZERO;             /* INITIALIZE LOOP COUNT @G33CPMR*/
         SLR   @07,@07                                             0565
         STH   @07,LOOPCNT                                         0565
*         DO WHILE REPLY(I)^=RTPRN&MSGCODE=ZERO;/*           @G33CPMR*/
         B     @DE00566                                            0566
@DL00566 DS    0H                                                  0567
*           NAMELGTH=ZERO;          /* CLEAR LENGTH COUNT    @G33CPMR*/
         SLR   @07,@07                                             0567
         STH   @07,NAMELGTH                                        0567
*           DO WHILE REPLY(I)^=RTPRN&REPLY(I)^=COMMA&I<=ONETWOOH;/*
*                                                            @G33CPMR*/
         B     @DE00568                                            0568
@DL00568 DS    0H                                                  0569
*             NAMELGTH=NAMELGTH+ONE;/* UP LENGTH COUNT       @G33CPMR*/
         LA    @07,1                                               0569
         LH    @02,NAMELGTH                                        0569
         ALR   @02,@07                                             0569
         STH   @02,NAMELGTH                                        0569
*             I=I+ONE;              /* BUMP INDEX            @G33CPMR*/
         ALR   I,@07                                               0570
*           END;                    /*                       @G33CPMR*/
@DE00568 LA    @07,REPLY-1(I)                                      0571
         CLI   0(@07),C')'                                         0571
         BE    @DC00568                                            0571
         LA    @07,REPLY-1(I)                                      0571
         CLI   0(@07),C','                                         0571
         BE    @DC00568                                            0571
         CH    I,@CH01766                                          0571
         BNH   @DL00568                                            0571
@DC00568 DS    0H                                                  0572
*           IF NAMELGTH<=ZERO×NAMELGTH>EIGHT THEN/*          @G33CPMR*/
         LH    @07,NAMELGTH                                        0572
         LTR   @07,@07                                             0572
         BNP   @RT00572                                            0572
         CH    @07,@CH00049                                        0572
         BNH   @RF00572                                            0572
@RT00572 DS    0H                                                  0573
*             DO;                   /* VALID NAME LENGTH?    @G33CPMR*/
*               KEYWDERR=REPLY(ONE:SEVEN);/* NO, SET FILLER  @G33CPMR*/
         MVI   KEYWDERR+7,C' '                                     0574
         MVC   KEYWDERR(7),REPLY                                   0574
*               MSGCODE=IEE308I;    /* SET ERROR CODE        @G33CPMR*/
         MVI   MSGCODE,X'08'                                       0575
*             END;                  /*                       @G33CPMR*/
*           ELSE                                                   0577
*             ;                     /*                       @G33CPMR*/
@RF00572 DS    0H                                                  0578
*           IF MSGCODE=ZERO THEN    /* ERROR-FREE NOW?       @G33CPMR*/
         CLI   MSGCODE,0                                           0578
         BNE   @RF00578                                            0578
*             DO;                   /*                       @G33CPMR*/
*               LOOPCNT=LOOPCNT+ONE;/* UP LOOP COUNT         @G33CPMR*/
         LA    @07,1                                               0580
         LH    @02,LOOPCNT                                         0580
         ALR   @02,@07                                             0580
         STH   @02,LOOPCNT                                         0580
*               IF REPLY(I)=COMMA THEN/* A COMMA?            @G33CPMR*/
         LA    @02,REPLY-1(I)                                      0581
         CLI   0(@02),C','                                         0581
         BNE   @RF00581                                            0581
*                 I=I+ONE;          /* YES, BUMP INDEX       @G33CPMR*/
         ALR   I,@07                                               0582
*               ELSE                                               0583
*                 ;                 /*                       @G33CPMR*/
@RF00581 DS    0H                                                  0584
*             END;                  /*                       @G33CPMR*/
*           ELSE                                                   0585
*             ;                     /*                       @G33CPMR*/
@RF00578 DS    0H                                                  0586
*         END;                      /*                       @G33CPMR*/
@DE00566 LA    @07,REPLY-1(I)                                      0586
         CLI   0(@07),C')'                                         0586
         BE    @DC00566                                            0586
         CLI   MSGCODE,0                                           0586
         BE    @DL00566                                            0586
@DC00566 DS    0H                                                  0587
*         IF MSGCODE=ZERO THEN      /* STILL ERROR-FREE?     @G33CPMR*/
*                                                                  0587
         CLI   MSGCODE,0                                           0587
         BNE   @RF00587                                            0587
*           /*********************************************************/
*           /*                                                       */
*           /* CHECK FOR NUMBER OF ALLOWABLE ASID'S          @G33CPMR*/
*           /*                                                       */
*           /*********************************************************/
*                                                                  0588
*           DO;                     /* YES                   @G33CPMR*/
*             IF LOOPCNT>FIFTEEN THEN/* LOOP COUNT?          @G33CPMR*/
         LH    @07,LOOPCNT                                         0589
         CH    @07,@CH00080                                        0589
         BNH   @RF00589                                            0589
*               DO;                 /* MORE THAN 15          @G33CPMR*/
*                 MSGCODE=IEE308I;  /* ERROR CONDITION       @G33CPMR*/
         MVI   MSGCODE,X'08'                                       0591
*                 KEYWDERR=DUMP;    /* SET FILLER            @G33CPMR*/
         MVI   KEYWDERR+4,C' '                                     0592
         MVC   KEYWDERR+5(3),KEYWDERR+4                            0592
         MVC   KEYWDERR(4),DUMP                                    0592
*               END;                /*                       @G33CPMR*/
*             ELSE                                                 0594
*               ;                   /*                       @G33CPMR*/
@RF00589 DS    0H                                                  0595
*           END;                    /*                       @G33CPMR*/
*         ELSE                                                     0596
*           ;                       /*                       @G33CPMR*/
@RF00587 DS    0H                                                  0597
*       END;                        /*                       @G33CPMR*/
*     ELSE                          /* SU33 NOT INSTALLED    @G33CPMR*/
*                                                                  0598
*       /*************************************************************/
*       /*                                                           */
*       /* MULTIPLES NOT PERMITTED ON NON-SU33 SYSTEMS       @G33CPMR*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0598
*       DO;                         /*                       @G33CPMR*/
         B     @RC00561                                            0598
@RF00561 DS    0H                                                  0599
*         MSGCODE=IEE308I;          /* ERROR CONDITION       @G33CPMR*/
         MVI   MSGCODE,X'08'                                       0599
*         KEYWDERR=DUMP;            /* SET FILLER            @G33CPMR*/
         MVI   KEYWDERR+4,C' '                                     0600
         MVC   KEYWDERR+5(3),KEYWDERR+4                            0600
         MVC   KEYWDERR(4),DUMP                                    0600
*       END;                        /*                       @G33CPMR*/
*   IF MSGCODE=ZERO THEN            /* VALID NAME SYNTAX     @G33CPMR*/
*                                                                  0602
@RC00561 DS    0H                                                  0602
@RC00547 CLI   MSGCODE,0                                           0602
         BNE   @RF00602                                            0602
*     /***************************************************************/
*     /*                                                             */
*     /* STILL ERROR FREE - PROCESS THE JOBNAME/TSONAME      @G33CPMR*/
*     /*                                                             */
*     /***************************************************************/
*                                                                  0603
*     DO;                           /*                       @G33CPMR*/
*       I=I2;                       /* RESET INDEX           @G33CPMR*/
         L     I,I2                                                0604
*       IF LOOPCNT>ONE THEN         /* LOOP ONLY ONCE?       @G33CPMR*/
         LA    @07,1                                               0605
         CH    @07,LOOPCNT                                         0605
         BNL   @RF00605                                            0605
*         DO;                       /* NO.....               @G33CPMR*/
*           SDUNEW=ON;              /* SET NEW DUMP BIT      @G33CPMR*/
*           SDUASLST=ON;            /* INDICATE MULTIPLE ASID      0608
*                                                            @G33CPMR*/
         L     @02,SDUMPPTR                                        0608
         OI    SDUNEW(@02),B'00110000'                             0608
*           SDUASIDP=ADDR(ASIDAREA);/* SET ADDRESS           @G33CPMR*/
         LA    @00,ASIDAREA                                        0609
         ST    @00,SDUASIDP(,@02)                                  0609
*           COUNT=ONE;              /* INITIALIZE ARRAY INDEX      0610
*                                                            @G33CPMR*/
         STH   @07,COUNT                                           0610
*         END;                      /*                       @G33CPMR*/
*       ELSE                                                       0612
*         ;                         /*                       @G33CPMR*/
@RF00605 DS    0H                                                  0613
*       DO UNTIL LOOPCNT=ZERO×MSGCODE^=ZERO;/* LOOP UNTIL ZERO     0613
*                                                            @G33CPMR*/
@DL00613 DS    0H                                                  0614
*         DO UNTIL REPLY(I)=COMMA×REPLY(I)=BLANK×REPLY(I)=RTPRN;/* 0614
*                                      LOOP TO GET LENGTH    @G33CPMR*/
@DL00614 DS    0H                                                  0615
*           I=I+ONE;                /* BUMP INDEX            @G33CPMR*/
         AH    I,@CH00047                                          0615
*         END;                      /*                       @G33CPMR*/
@DE00614 LA    @07,REPLY-1(I)                                      0616
         CLI   0(@07),C','                                         0616
         BE    @DC00614                                            0616
         LA    @07,REPLY-1(I)                                      0616
         CLI   0(@07),C' '                                         0616
         BE    @DC00614                                            0616
         LA    @07,REPLY-1(I)                                      0616
         CLI   0(@07),C')'                                         0616
         BNE   @DL00614                                            0616
@DC00614 DS    0H                                                  0617
*         NAME=NAME&&NAME;          /* INIT STORAGE                  */
         XC    NAME(8),NAME                                        0617
*         NAME=REPLY(I2:I-ONE);     /* GET NAME              @G33CPMR*/
         MVI   NAME+1,C' '                                         0618
         MVC   NAME+2(6),NAME+1                                    0618
         L     @07,I2                                              0618
         LR    @02,I                                               0618
         SLR   @02,@07                                             0618
         BCTR  @02,0                                               0618
         LA    @09,REPLY-1(@07)                                    0618
         EX    @02,@SM02042                                        0618
*         CALL FINDJOB;             /* LOCATE JOBNAME                */
         BAL   @14,FINDJOB                                         0619
*                                                                  0620
*         /***********************************************************/
*         /*                                                         */
*         /* AN ASID WAS FOUND AFTER THE CALL                @G33CPMR*/
*         /*                                                         */
*         /***********************************************************/
*                                                                  0620
*         IF MSGCODE=ZERO THEN      /* ERROR-FREE?           @G33CPMR*/
         CLI   MSGCODE,0                                           0620
         BNE   @RF00620                                            0620
*           DO;                     /* YES                   @G33CPMR*/
*             IF SDUASIDP^=ZERO THEN/* MULTIPLE ASID?        @G33CPMR*/
         L     @07,SDUMPPTR                                        0622
         L     @02,SDUASIDP(,@07)                                  0622
         LTR   @02,@02                                             0622
         BZ    @RF00622                                            0622
*               DO;                 /* YES                   @G33CPMR*/
*                 IF REPLY(I)=RTPRN THEN/* LAST ONE?         @G33CPMR*/
         LA    @02,REPLY-1(I)                                      0624
         CLI   0(@02),C')'                                         0624
         BNE   @RF00624                                            0624
*                   SDUTASID=SDUTASID×HIGHBIT;/* YES, SET HIGH ORDER
*                                      BIT                   @G33CPMR*/
         L     @02,@CF01860                                        0625
         MVC   @ZT00002+2(2),SDUTASID(@07)                         0625
         O     @02,@ZT00002                                        0625
         STH   @02,SDUTASID(,@07)                                  0625
*                 ELSE                                             0626
*                   ;               /*                       @G33CPMR*/
@RF00624 DS    0H                                                  0627
*                 ASIDAREA(COUNT)=SDUTASID;/* PUT IN THE ARRAY     0627
*                                                            @G33CPMR*/
         LH    @07,COUNT                                           0627
         ALR   @07,@07                                             0627
         L     @02,SDUMPPTR                                        0627
         MVC   @ZT00002+2(2),SDUTASID(@02)                         0627
         L     @09,@ZT00002                                        0627
         STH   @09,ASIDAREA-2(@07)                                 0627
*                 SDUTASID=SDUTASID&&SDUTASID;/* CLEAR TEMP. AREA  0628
*                                                            @G33CPMR*/
         LR    @07,@09                                             0628
         XR    @07,@09                                             0628
         STH   @07,SDUTASID(,@02)                                  0628
*               END;                /*                       @G33CPMR*/
*             ELSE                                                 0630
*               ;                   /*                       @G33CPMR*/
@RF00622 DS    0H                                                  0631
*             IF REPLY(I)=COMMA×REPLY(I)=RTPRN THEN                0631
         LA    @07,REPLY-1(I)                                      0631
         CLI   0(@07),C','                                         0631
         BE    @RT00631                                            0631
         LA    @07,REPLY-1(I)                                      0631
         CLI   0(@07),C')'                                         0631
         BNE   @RF00631                                            0631
@RT00631 DS    0H                                                  0632
*               DO;                 /* THERE ARE MORE TO COME      0632
*                                                            @G33CPMR*/
*                 I=I+ONE;          /* BUMP INDEX            @G33CPMR*/
         AH    I,@CH00047                                          0633
*                 I2=I;             /* SET INDEX             @G33CPMR*/
         ST    I,I2                                                0634
*               END;                /*                       @G33CPMR*/
*             ELSE                                                 0636
*               ;                   /*                       @G33CPMR*/
@RF00631 DS    0H                                                  0637
*             LOOPCNT=LOOPCNT-ONE;  /* DECREASE LOOP COUNT   @G33CPMR*/
         LH    @07,LOOPCNT                                         0637
         BCTR  @07,0                                               0637
         STH   @07,LOOPCNT                                         0637
*             COUNT=COUNT+ONE;      /* BUMP ARRAY INDEX      @G33CPMR*/
         LH    @07,COUNT                                           0638
         LA    @07,1(,@07)                                         0638
         STH   @07,COUNT                                           0638
*           END;                    /*                       @G33CPMR*/
*         ELSE                                                     0640
*           ;                       /*                       @G33CPMR*/
@RF00620 DS    0H                                                  0641
*       END;                        /*                       @G33CPMR*/
@DE00613 LH    @07,LOOPCNT                                         0641
         LTR   @07,@07                                             0641
         BZ    @DC00613                                            0641
         CLI   MSGCODE,0                                           0641
         BE    @DL00613                                            0641
@DC00613 DS    0H                                                  0642
*       IF REPLY(I)=BLANK×REPLY(I-ONE:I)=PRNBLANK×REPLY(I-ONE:I+THREE)=
*           PRNCMEND THEN           /*                       @G33CPMR*/
*                                                                  0642
         LA    @07,REPLY-1(I)                                      0642
         CLI   0(@07),C' '                                         0642
         BE    @RT00642                                            0642
         LA    @07,REPLY-2(I)                                      0642
         CLC   0(2,@07),@CC01734                                   0642
         BE    @RT00642                                            0642
         LA    @07,REPLY-2(I)                                      0642
         CLC   0(5,@07),@CC01736                                   0642
         BNE   @RF00642                                            0642
@RT00642 DS    0H                                                  0643
*         /***********************************************************/
*         /*                                                         */
*         /* CHECK FOR BLANK AFTER PROCESSED JOBNAME/TSONAME @G33CPMR*/
*         /*                                                         */
*         /***********************************************************/
*                                                                  0643
*         DO;                                                      0643
*           CALL DEFAULT;           /* FOR DEFAULT OPTIONS           */
         BAL   @14,DEFAULT                                         0644
*           REPLYEND=ON;            /* END OF THE REPLY              */
         OI    REPLYEND,B'00000010'                                0645
*         END;                                                     0646
*       ELSE                                                       0647
*         IF REPLY(I-ONE:I)=PRNCOM THEN/* A '),'?            @G33CPMR*/
         B     @RC00642                                            0647
@RF00642 LA    @07,REPLY-2(I)                                      0647
         CLC   0(2,@07),@CC01732                                   0647
         BNE   @RF00647                                            0647
*           I=I+1;                  /* ADVANCE INDEX         @G33CPMR*/
         AH    I,@CH00047                                          0648
*         ELSE                                                     0649
*           ;                       /* NO                    @G33CPMR*/
@RF00647 DS    0H                                                  0650
*     END;                          /*                       @G33CPMR*/
*   ELSE                                                           0651
*     ;                             /*                       @G33CPMR*/
@RF00602 DS    0H                                                  0652
*   REG14=R14SAV8;                  /* RESTORE RETURN ADDR           */
@RC00602 L     REG14,R14SAV8                                       0652
*   END;                                                           0653
@EL00010 DS    0H                                                  0653
@EF00010 DS    0H                                                  0653
@ER00010 BR    @14                                                 0653
*ITSSDATA:                                                         0654
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0654
*                                                                  0654
ITSSDATA DS    0H                                                  0655
*/* ******************************************************************/
*/*                                                                  */
*/*            ITSSDATA WILL DO THE FOLLOWING                        */
*/*              1.  DETERMINE THE LENGTH OF SDATA                   */
*/*              2.  CALL SDATAOPS TO DETERMINE THE                  */
*/*                  SDATA OPTIONS                                   */
*/*              3.  CHECK TO SEE IF STOR FOLLOWS                    */
*/*                                                                  */
*/* ******************************************************************/
*                                                                  0655
*   R14SA13=REG14;                  /* SAVE RETURN ADDRESS           */
         ST    REG14,R14SA13                                       0655
*   SDATDONE=ON;                    /* SDATA DONE            @G33CPMR*/
         OI    SDATDONE,B'00100000'                                0656
*   BEGIN=0;                        /* ZERO OUT INDEX                */
         SLR   @07,@07                                             0657
         STH   @07,BEGIN                                           0657
*   BEGIN=I+7;                      /* ADVANCE INDEX                 */
         LR    @07,I                                               0658
         AH    @07,@CH00100                                        0658
         STH   @07,BEGIN                                           0658
*   DO I=BEGIN TO 120 WHILE REPLY(I)^=RTPRN;                       0659
         LR    I,@07                                               0659
         B     @DE00659                                            0659
@DL00659 LA    @07,REPLY-1(I)                                      0659
         CLI   0(@07),C')'                                         0659
         BE    @DC00659                                            0659
*   END;                            /* LENGTH SDATA OPTIONS          */
         AH    I,@CH00047                                          0660
@DE00659 CH    I,@CH01766                                          0660
         BNH   @DL00659                                            0660
@DC00659 DS    0H                                                  0661
*   IF REPLY(I)=RTPRN THEN          /* END OF OPTIONS                */
         LA    @07,REPLY-1(I)                                      0661
         CLI   0(@07),C')'                                         0661
         BNE   @RF00661                                            0661
*     DO;                                                          0662
*       CALL SDATAOPS;              /* SDATA OPTIONS                 */
         BAL   @14,SDATAOPS                                        0663
*       IF REPLY(I)=COMMA×REPLY(I)=BLANK THEN                      0664
         LA    @07,REPLY-1(I)                                      0664
         CLI   0(@07),C','                                         0664
         BE    @RT00664                                            0664
         LA    @07,REPLY-1(I)                                      0664
         CLI   0(@07),C' '                                         0664
         BNE   @RF00664                                            0664
@RT00664 DS    0H                                                  0665
*         DO;                                                      0665
*           IF REPLY(I)=COMMA THEN                                 0666
         LA    @07,REPLY-1(I)                                      0666
         CLI   0(@07),C','                                         0666
         BNE   @RF00666                                            0666
*             I=I+ONE;                                             0667
         AH    I,@CH00047                                          0667
*           ELSE                                                   0668
*             REPLYEND=ON;          /* END OF THE REPLY              */
         B     @RC00666                                            0668
@RF00666 OI    REPLYEND,B'00000010'                                0668
*         END;                                                     0669
*       ELSE                                                       0670
*         DO;                                                      0670
         B     @RC00664                                            0670
@RF00664 DS    0H                                                  0671
*           MSGCODE='08'X;          /* TERM LENGTH ERROR             */
         MVI   MSGCODE,X'08'                                       0671
*           KEYWDERR=DUMP;          /* ERROR CONDITION               */
         MVI   KEYWDERR+4,C' '                                     0672
         MVC   KEYWDERR+5(3),KEYWDERR+4                            0672
         MVC   KEYWDERR(4),DUMP                                    0672
*         END;                                                     0673
*     END;                                                         0674
*   ELSE                                                           0675
*     DO;                                                          0675
         B     @RC00661                                            0675
@RF00661 DS    0H                                                  0676
*       KEYWDERR=DUMP;              /* NO RIGHT PRN                  */
         MVI   KEYWDERR+4,C' '                                     0676
         MVC   KEYWDERR+5(3),KEYWDERR+4                            0676
         MVC   KEYWDERR(4),DUMP                                    0676
*       MSGCODE='07'X;              /* DELIMITER ERROR               */
         MVI   MSGCODE,X'07'                                       0677
*     END;                                                         0678
*   REG14=R14SA13;                  /* RESTORE RETURN ADDR           */
@RC00661 L     REG14,R14SA13                                       0679
*   END;                                                           0680
@EL00011 DS    0H                                                  0680
@EF00011 DS    0H                                                  0680
@ER00011 BR    @14                                                 0680
*ITSSTOR:                                                          0681
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0681
*                                                                  0681
ITSSTOR  DS    0H                                                  0682
*/* ******************************************************************/
*/*                                                                  */
*/*            ITSSTOR WILL DO THE FOLLOWING                         */
*/*              1.  DETERMINE IF ADDRESS RANGES ARE                 */
*/*                  SPECIFIED                                       */
*/*              2.  CALL STORSCAN TO HANDLE THE                     */
*/*                  ADDRESS RANGES                                  */
*/*              3.  IF NO ADDRESS RANGES THEN AN ERROR              */
*/*                  CONDITION EXISTS                                */
*/*                                                                  */
*/* ******************************************************************/
*                                                                  0682
*   R14SA14=REG14;                  /* SAVE RETURN ADDRESS           */
         ST    REG14,R14SA14                                       0682
*   STORDONE=ON;                    /* STOR DONE             @G33CPMR*/
         OI    STORDONE,B'01000000'                                0683
*   IF REPLY(I+4:I+5)='=(' THEN     /* VALID KEYWORD                 */
         LA    @07,REPLY+3(I)                                      0684
         CLC   0(2,@07),@CC01980                                   0684
         BNE   @RF00684                                            0684
*     DO;                                                          0685
*       REPLYCK=OFE;                /* NO ERROR YET                  */
         NI    REPLYCK,B'01111111'                                 0686
*       I=I+FIVE;                   /* POINT FIRST ADDRESS           */
         AH    I,@CH00367                                          0687
*       CALL STORSCAN;              /* DETERMINE ADDRESSES           */
         BAL   @14,STORSCAN                                        0688
*       IF MSGCODE=0 THEN           /*                        @YM2729*/
         CLI   MSGCODE,0                                           0689
         BNE   @RF00689                                            0689
*         DO;                       /*                        @YM2729*/
*           IF REPLY(I+ONE)=COMMA×REPLY(I+ONE)=BLANK THEN          0691
         LA    @07,REPLY(I)                                        0691
         CLI   0(@07),C','                                         0691
         BE    @RT00691                                            0691
         LA    @07,REPLY(I)                                        0691
         CLI   0(@07),C' '                                         0691
         BNE   @RF00691                                            0691
@RT00691 DS    0H                                                  0692
*             DO;                                                  0692
*               IF REPLY(I+1)=COMMA THEN                           0693
         LA    @07,REPLY(I)                                        0693
         CLI   0(@07),C','                                         0693
         BNE   @RF00693                                            0693
*                 I=I+TWO;          /* ADVANCE INDEX                 */
         AH    I,@CH00152                                          0694
*               ELSE                                               0695
*                 REPLYEND=ON;      /* END OF THE REPLY              */
         B     @RC00693                                            0695
@RF00693 OI    REPLYEND,B'00000010'                                0695
*             END;                                                 0696
*           ELSE                                                   0697
*             DO;                                                  0697
         B     @RC00691                                            0697
@RF00691 DS    0H                                                  0698
*               MSGCODE='08'X;      /* ERROR CONDITION               */
         MVI   MSGCODE,X'08'                                       0698
*               KEYWDERR=DUMP;      /* TERM LENGTH ERROR             */
         MVI   KEYWDERR+4,C' '                                     0699
         MVC   KEYWDERR+5(3),KEYWDERR+4                            0699
         MVC   KEYWDERR(4),DUMP                                    0699
*             END;                                                 0700
*         END;                      /*                        @YM2729*/
*       ELSE                                                       0702
*         ;                         /*                        @YM2729*/
@RF00689 DS    0H                                                  0703
*     END;                                                         0703
*   ELSE                                                           0704
*     DO;                                                          0704
         B     @RC00684                                            0704
@RF00684 DS    0H                                                  0705
*       MSGCODE='3D'X;              /* ERROR CONDITION               */
         MVI   MSGCODE,X'3D'                                       0705
*       KEYWDERR=STOR;              /* INVALID KEYWORD               */
         MVI   KEYWDERR+4,C' '                                     0706
         MVC   KEYWDERR+5(3),KEYWDERR+4                            0706
         MVC   KEYWDERR(4),STOR                                    0706
*     END;                                                         0707
*   REG14=R14SA14;                  /* RESTORE RETURN ADDR           */
@RC00684 L     REG14,R14SA14                                       0708
*   END;                                                           0709
@EL00012 DS    0H                                                  0709
@EF00012 DS    0H                                                  0709
@ER00012 BR    @14                                                 0709
*IDCHECK:                                                          0710
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0710
*                                                                  0710
IDCHECK  DS    0H                                                  0711
*/* ******************************************************************/
*/*                                                                  */
*/*                THE DUMP COMMAND IS INVALID. THE                  */
*/*                CONSOLE ISSUING THE COMMAND IS NOT                */
*/*                THE MASTER CONSOLE                                */
*/*                                                                  */
*/* ******************************************************************/
*                                                                  0711
*   R14SA16=REG14;                  /* SAVE RETURN ADDRESS           */
         ST    REG14,R14SA16                                       0711
*   MSGCODE='29'X;                  /* ERROR CONDITION               */
         MVI   MSGCODE,X'29'                                       0712
*   KEYWDERR=DUMP;                  /* NOT MASTER CONSOLE            */
         MVI   KEYWDERR+4,C' '                                     0713
         MVC   KEYWDERR+5(3),KEYWDERR+4                            0713
         MVC   KEYWDERR(4),DUMP                                    0713
*   CALL CSCBFREE;                  /* FREE THE CSCB                 */
         BAL   @14,CSCBFREE                                        0714
*   REG14=R14SA16;                  /* RESTORE RETURN ADDR           */
         L     REG14,R14SA16                                       0715
*   END;                                                           0716
@EL00013 DS    0H                                                  0716
@EF00013 DS    0H                                                  0716
@ER00013 BR    @14                                                 0716
*CONFLICT:                                                         0717
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0717
*                                                                  0717
CONFLICT DS    0H                                                  0718
*/* ******************************************************************/
*/*                                                                  */
*/*                THE DUMP COMMAND IS INVALID. THE                  */
*/*                KEYWORD OPERAND(S) HAVE BEEN SPECIFIED            */
*/*                PREVIOUSLY                                        */
*/*                                                                  */
*/* ******************************************************************/
*                                                                  0718
*   R14SA16=REG14;                  /* SAVE RETURN ADDRESS   @G33CPMR*/
         ST    REG14,R14SA16                                       0718
*   MSGCODE=IEE312I;                /* SET ERROR CODE        @G33CPMR*/
         MVI   MSGCODE,X'0C'                                       0719
*   KEYWDERR=DUMP;                  /* SET 'DUMP' FILLER     @G33CPMR*/
         MVI   KEYWDERR+4,C' '                                     0720
         MVC   KEYWDERR+5(3),KEYWDERR+4                            0720
         MVC   KEYWDERR(4),DUMP                                    0720
*   REG14=R14SA16;                  /* RESTORE RETURN ADDRESS      0721
*                                                            @G33CPMR*/
         L     @07,R14SA16                                         0721
         LR    REG14,@07                                           0721
*   END;                                                           0722
@EL00014 DS    0H                                                  0722
@EF00014 DS    0H                                                  0722
@ER00014 BR    @14                                                 0722
*NODUMP:                                                           0723
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0723
*                                                                  0723
NODUMP   DS    0H                                                  0724
*/* ******************************************************************/
*/*                                                                  */
*/*   THIS ROUTINE WILL BRANCH TO IEE0503D FOR AN ERROR MESSAGE      */
*/*       1.  LOAD IEE0503D                                          */
*/*       2.  BRANCH TO IEE0503D                                     */
*/*       3.  DELETE IEE0503D                                        */
*/*                                                                  */
*/* ******************************************************************/
*                                                                  0724
*   R14SA18=REG14;                  /* SAVE RETURN ADDRESS           */
         ST    REG14,R14SA18                                       0724
*   RESPECIFY                                                      0725
*    (REG2) RSTD;                                                  0725
*   XSAPTR=ADDR(STAEAREA);          /* STORAGE FOR IEE0503D          */
         LA    XSAPTR,STAEAREA                                     0726
*   STAEAREA=STAEAREA&&STAEAREA;    /* INIT STORAGE FOR XSA          */
         XC    STAEAREA(44),STAEAREA                               0727
*   XAU=SAVEUCMP;                   /* ID OF ISSUING CONSOLE @ZA14247*/
         MVC   XAU(1,XSAPTR),SAVEUCMP                              0728
*   XAA=NOASID;                     /* ASID = 0 FOR IEE0503D         */
         SLR   @07,@07                                             0729
         STH   @07,XAA(,XSAPTR)                                    0729
*   XAE=MSGCODE;                    /* ERROR CODE                    */
         MVC   XAE(1,XSAPTR),MSGCODE                               0730
*   XAV=KEYWDERR;                   /* THE KEYWORD IN ERROR          */
         MVC   XAV(8,XSAPTR),KEYWDERR                              0731
*   REG2=ADDR(XSA);                 /* DUMMY XSA ADDRESS             */
         LR    REG2,XSAPTR                                         0732
*   GEN(LOAD EP=IEE0503D);          /* LOAD MESSAGE MODULE           */
         LOAD EP=IEE0503D
*   RESPECIFY                                                      0734
*    (REG0) RSTD;                                                  0734
*   REG15=REG0;                     /* ENTRY ADDR IN REG15           */
         LR    REG15,REG0                                          0735
*   RESPECIFY                                                      0736
*    (REG0) UNRSTD;                                                0736
*   GEN(BALR REG14,REG15);          /* BRANCH MESSAGE MODULE         */
         BALR REG14,REG15
*   GEN(DELETE EP=IEE0503D);        /* DELETE IEE0503D               */
         DELETE EP=IEE0503D
*   RESPECIFY                                                      0739
*    (REG2) UNRSTD;                                                0739
*   REG14=R14SA18;                  /* RESTORE RETURN ADDR           */
         L     REG14,R14SA18                                       0740
*   END;                                                           0741
@EL00015 DS    0H                                                  0741
@EF00015 DS    0H                                                  0741
@ER00015 BR    @14                                                 0741
*CSCBFREE:                                                         0742
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0742
*                                                                  0742
CSCBFREE DS    0H                                                  0743
*/* ******************************************************************/
*/*                                                                  */
*/*    THIS ROUTINE WILL FREE THE CSCB CHAIN IN THE FOLLOWING        */
*/*    CONDITIONS                                                    */
*/*      1.  NO STAE PROTECTION IS PROVIDED                          */
*/*          (RETURN CODE IN REG15 ^= TO ZERO FROM IEECB860          */
*/*      2.  AFTER THE DUMP COMMAND IS SCANNED IN THE                */
*/*          CMDCHECK ROUTINE.                                       */
*/*      3.  A CONSOLE OTHER THAN THE MASTER CONSOLE                 */
*/*          ISSUES THE DUMP COMMAND.                                */
*/*                                                                  */
*/* ******************************************************************/
*                                                                  0743
*   R14SA11=REG14;                  /* SAVE RETURN ADDRESS           */
         ST    REG14,R14SA11                                       0743
*   REG1=REG6;                      /* CSCB POINTER                  */
         LR    REG1,REG6                                           0744
*   CHFC=ON;                        /* FREE CSCB BIT ON              */
         L     @07,CSCBPTR                                         0745
         OI    CHFC(@07),B'00000010'                               0745
*   GEN(MGCR (1),CHAIN);            /* FREE CSCB                     */
         MGCR (1),CHAIN
*   REG14=R14SA11;                  /* RESTORE RETURN REG            */
         L     REG14,R14SA11                                       0747
*   END;                                                           0748
@EL00016 DS    0H                                                  0748
@EF00016 DS    0H                                                  0748
@ER00016 BR    @14                                                 0748
*DEFAULT:                                                          0749
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0749
*                                                                  0749
DEFAULT  DS    0H                                                  0750
*/* ******************************************************************/
*/*                                                                  */
*/*   THIS ROUTINE WILL SET THE DEFAULT SDATA OPTIONS                */
*/*                                                                  */
*/* ******************************************************************/
*                                                                  0750
*   R14SA19=REG14;                  /* SAVE RETURN ADDRESS           */
         ST    REG14,R14SA19                                       0750
*   SDUSDAT1='99'X;                 /* PSA,SQA,LSQA,TRT              */
         L     @07,SDUMPPTR                                        0751
         MVI   SDUSDAT1(@07),X'99'                                 0751
*   SDUSDAT2='E0'X;                 /* CSA, SWA AND SUM      @G33CPMR*/
         MVI   SDUSDAT2(@07),X'E0'                                 0752
*   REG14=R14SA19;                  /* RESTORE REG14                 */
         L     @07,R14SA19                                         0753
         LR    REG14,@07                                           0753
*   END;                                                           0754
@EL00017 DS    0H                                                  0754
@EF00017 DS    0H                                                  0754
@ER00017 BR    @14                                                 0754
*SDATAOPS:                                                         0755
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0755
*                                                                  0755
SDATAOPS DS    0H                                                  0756
*/* ******************************************************************/
*/*                                                                  */
*/*   THIS ROUTINE WILL DETERMINE THE SDATA OPTIONS                  */
*/*                                                                  */
*/* ******************************************************************/
*                                                                  0756
*   R14SAV4=REG14;                  /* SAVE RETURN ADDRESS           */
         ST    REG14,R14SAV4                                       0756
*   I=BEGIN;                        /* SET INDEX TO START    @G33CPMR*/
         LH    I,BEGIN                                             0757
*   DUMPOPTS=DUMPOPTS&&DUMPOPTS;    /* CLEAR OPTION BITS     @G33CPMR*/
         L     @07,SDUMPPTR                                        0758
         XC    DUMPOPTS(2,@07),DUMPOPTS(@07)                       0758
*   DO UNTIL((REPLY(I)=RTPRN)×(MSGCODE^=0));/* SET LOOP END  @G33CPMR*/
*                                                                  0759
@DL00759 DS    0H                                                  0760
*     /***************************************************************/
*     /*                                                             */
*     /* LOOP TO FIND LENGTH OF OPTION                       @G33CPMR*/
*     /*                                                             */
*     /***************************************************************/
*                                                                  0760
*     DO I2=I BY ONE WHILE((REPLY(I2)^=COMMA)&(REPLY(I2)^=RTPRN)); 0760
         LR    @07,I                                               0760
         ST    @07,I2                                              0760
         B     @DE00760                                            0760
@DL00760 DS    0H                                                  0761
*     END;                          /*                       @G33CPMR*/
*                                                                  0761
         LA    @07,1                                               0761
         AL    @07,I2                                              0761
         ST    @07,I2                                              0761
@DE00760 L     @07,I2                                              0761
         LA    @02,REPLY-1(@07)                                    0761
         CLI   0(@02),C','                                         0761
         BE    @DC00760                                            0761
         LA    @02,REPLY-1(@07)                                    0761
         CLI   0(@02),C')'                                         0761
         BNE   @DL00760                                            0761
@DC00760 DS    0H                                                  0762
*     /***************************************************************/
*     /*                                                             */
*     /* PROCESSING FOR A THREE CHARACTER NAME               @G33CPMR*/
*     /*                                                             */
*     /***************************************************************/
*                                                                  0762
*     IF I2-I=THREE THEN            /* THREE CHARACTER OPTION?     0762
*                                                            @G33CPMR*/
         L     @07,I2                                              0762
         SLR   @07,I                                               0762
         CH    @07,@CH00074                                        0762
         BNE   @RF00762                                            0762
*       DO;                         /* YES                   @G33CPMR*/
*         IF REPLY(I:I+TWO)=PSA THEN/* PSA?                  @G33CPMR*/
         LA    @07,REPLY-1(I)                                      0764
         CLC   0(3,@07),PSA                                        0764
         BNE   @RF00764                                            0764
*           DO;                     /* YES                   @G33CPMR*/
*             IF((SDUNAPSA=ON)×(SDUALPSA=ON)) THEN/* PSA BIT ON?   0766
*                                                            @G33CPMR*/
         L     @07,SDUMPPTR                                        0766
         TM    SDUNAPSA(@07),B'00001000'                           0766
         BO    @RT00766                                            0766
         TM    SDUALPSA(@07),B'10000000'                           0766
         BNO   @RF00766                                            0766
@RT00766 DS    0H                                                  0767
*               CALL CONFLICT;      /* YES                   @G33CPMR*/
         BAL   @14,CONFLICT                                        0767
*             ELSE                  /* NO                    @G33CPMR*/
*               SDUALPSA=ON;        /* SET PSA BIT           @G33CPMR*/
         B     @RC00766                                            0768
@RF00766 L     @07,SDUMPPTR                                        0768
         OI    SDUALPSA(@07),B'10000000'                           0768
*           END;                    /*                       @G33CPMR*/
*         ELSE                      /*                       @G33CPMR*/
*           IF REPLY(I:I+TWO)=SUM THEN/* SUM?                @G33CPMR*/
         B     @RC00764                                            0770
@RF00764 LA    @07,REPLY-1(I)                                      0770
         CLC   0(3,@07),SUM                                        0770
         BNE   @RF00770                                            0770
*             DO;                   /* YES                   @G33CPMR*/
*               IF((SDUNSMDP=ON)×(SDUSMDMP=ON)) THEN/* SUM BIT ON? 0772
*                                                            @G33CPMR*/
         L     @07,SDUMPPTR                                        0772
         TM    SDUNSMDP(@07),B'00110000'                           0772
         BZ    @RF00772                                            0772
*                 CALL CONFLICT;    /* YES                   @G33CPMR*/
         BAL   @14,CONFLICT                                        0773
*               ELSE                /* NO                    @G33CPMR*/
*                 SDUSMDMP=ON;      /* SET SUM BIT           @G33CPMR*/
         B     @RC00772                                            0774
@RF00772 L     @07,SDUMPPTR                                        0774
         OI    SDUSMDMP(@07),B'00100000'                           0774
*             END;                  /*                       @G33CPMR*/
*           ELSE                    /*                       @G33CPMR*/
*             IF REPLY(I:I+TWO)=SQA THEN/* SQA?              @G33CPMR*/
         B     @RC00770                                            0776
@RF00770 LA    @07,REPLY-1(I)                                      0776
         CLC   0(3,@07),SQA                                        0776
         BNE   @RF00776                                            0776
*               DO;                 /* YES                   @G33CPMR*/
*                 IF((SDUNASQA=ON)×(SDUSQA=ON)) THEN/* SQA BIT ON? 0778
*                                                            @G33CPMR*/
         L     @07,SDUMPPTR                                        0778
         TM    SDUNASQA(@07),B'00000100'                           0778
         BO    @RT00778                                            0778
         TM    SDUSQA(@07),B'00010000'                             0778
         BNO   @RF00778                                            0778
@RT00778 DS    0H                                                  0779
*                   CALL CONFLICT;  /* YES                   @G33CPMR*/
         BAL   @14,CONFLICT                                        0779
*                 ELSE              /* NO                    @G33CPMR*/
*                   SDUSQA=ON;      /* SET SQA BIT           @G33CPMR*/
         B     @RC00778                                            0780
@RF00778 L     @07,SDUMPPTR                                        0780
         OI    SDUSQA(@07),B'00010000'                             0780
*               END;                /*                       @G33CPMR*/
*             ELSE                  /*                       @G33CPMR*/
*               IF REPLY(I:I+TWO)=NUC THEN/* NUC?            @G33CPMR*/
         B     @RC00776                                            0782
@RF00776 LA    @07,REPLY-1(I)                                      0782
         CLC   0(3,@07),NUC                                        0782
         BNE   @RF00782                                            0782
*                 DO;               /* YES                   @G33CPMR*/
*                   IF SDUNUC=ON THEN/* NUC BIT ON?          @G33CPMR*/
         L     @07,SDUMPPTR                                        0784
         TM    SDUNUC(@07),B'00100000'                             0784
         BNO   @RF00784                                            0784
*                     CALL CONFLICT;/* YES                   @G33CPMR*/
         BAL   @14,CONFLICT                                        0785
*                   ELSE            /* NO                    @G33CPMR*/
*                     SDUNUC=ON;    /* SET NUC BIT           @G33CMPR*/
         B     @RC00784                                            0786
@RF00784 L     @07,SDUMPPTR                                        0786
         OI    SDUNUC(@07),B'00100000'                             0786
*                 END;              /*                       @G33CPMR*/
*               ELSE                /*                       @G33CPMR*/
*                 IF REPLY(I:I+TWO)=RGN THEN/* RGN?          @G33CPMR*/
         B     @RC00782                                            0788
@RF00782 LA    @07,REPLY-1(I)                                      0788
         CLC   0(3,@07),RGN                                        0788
         BNE   @RF00788                                            0788
*                   DO;             /* YES                   @G33CPMR*/
*                     IF SDURGN=ON THEN/* RGN BIT ON?        @G33CPMR*/
         L     @07,SDUMPPTR                                        0790
         TM    SDURGN(@07),B'00000100'                             0790
         BNO   @RF00790                                            0790
*                       CALL CONFLICT;/* YES                 @G33CPMR*/
         BAL   @14,CONFLICT                                        0791
*                     ELSE          /* NO                    @G33CPMR*/
*                       SDURGN=ON;  /* SET RGN BIT           @G33CPMR*/
         B     @RC00790                                            0792
@RF00790 L     @07,SDUMPPTR                                        0792
         OI    SDURGN(@07),B'00000100'                             0792
*                   END;            /*                       @G33CPMR*/
*                 ELSE              /*                       @G33CPMR*/
*                   IF REPLY(I:I+TWO)=LPA THEN/* LPA?        @G33CPMR*/
         B     @RC00788                                            0794
@RF00788 LA    @07,REPLY-1(I)                                      0794
         CLC   0(3,@07),LPA                                        0794
         BNE   @RF00794                                            0794
*                     DO;           /* YES                   @G33CPMR*/
*                       IF SDULPA=ON THEN/* LPA BIT ON?      @G33CPMR*/
         L     @07,SDUMPPTR                                        0796
         TM    SDULPA(@07),B'00000010'                             0796
         BNO   @RF00796                                            0796
*                         CALL CONFLICT;/* YES               @G33CPMR*/
         BAL   @14,CONFLICT                                        0797
*                       ELSE        /* NO                    @G33CPMR*/
*                         SDULPA=ON;/* SET LPA BIT           @G33CPMR*/
         B     @RC00796                                            0798
@RF00796 L     @07,SDUMPPTR                                        0798
         OI    SDULPA(@07),B'00000010'                             0798
*                     END;          /*                       @G33CPMR*/
*                   ELSE            /*                       @G33CPMR*/
*                     IF REPLY(I:I+TWO)=TRT THEN/* TRT?      @G33CPMR*/
         B     @RC00794                                            0800
@RF00794 LA    @07,REPLY-1(I)                                      0800
         CLC   0(3,@07),TRT                                        0800
         BNE   @RF00800                                            0800
*                       DO;         /* YES                   @G33CPMR*/
*                         IF SDUTRT=ON THEN/* TRT BIT ON?    @G33CPMR*/
         L     @07,SDUMPPTR                                        0802
         TM    SDUTRT(@07),B'00000001'                             0802
         BNO   @RF00802                                            0802
*                           CALL CONFLICT;/* YES             @G33CPMR*/
         BAL   @14,CONFLICT                                        0803
*                         ELSE      /* NO                    @G33CPMR*/
*                           SDUTRT=ON;/* SET TRT BIT         @G33CPMR*/
         B     @RC00802                                            0804
@RF00802 L     @07,SDUMPPTR                                        0804
         OI    SDUTRT(@07),B'00000001'                             0804
*                       END;        /*                       @G33CPMR*/
*                     ELSE          /*                       @G33CPMR*/
*                       IF REPLY(I:I+TWO)=CSA THEN/* CSA?    @G33CPMR*/
         B     @RC00800                                            0806
@RF00800 LA    @07,REPLY-1(I)                                      0806
         CLC   0(3,@07),CSA                                        0806
         BNE   @RF00806                                            0806
*                         DO;       /* YES                   @G33CPMR*/
*                           IF SDUCSA=ON THEN/* CSA BIT ON?  @G33CPMR*/
         L     @07,SDUMPPTR                                        0808
         TM    SDUCSA(@07),B'10000000'                             0808
         BNO   @RF00808                                            0808
*                             CALL CONFLICT;/* YES           @G33CPMR*/
         BAL   @14,CONFLICT                                        0809
*                           ELSE    /* NO                    @G33CPMR*/
*                             SDUCSA=ON;/* SET CSA BIT       @G33CPMR*/
         B     @RC00808                                            0810
@RF00808 L     @07,SDUMPPTR                                        0810
         OI    SDUCSA(@07),B'10000000'                             0810
*                         END;      /*                       @G33CPMR*/
*                       ELSE        /*                       @G33CPMR*/
*                         IF REPLY(I:I+TWO)=SWA THEN/* SWA?  @G33CPMR*/
         B     @RC00806                                            0812
@RF00806 LA    @07,REPLY-1(I)                                      0812
         CLC   0(3,@07),SWA                                        0812
         BNE   @RF00812                                            0812
*                           DO;     /* YES                   @G33CPMR*/
*                             IF SDUSWA=ON THEN/* SWA BIT ON?      0814
*                                                            @G33CPMR*/
         L     @07,SDUMPPTR                                        0814
         TM    SDUSWA(@07),B'01000000'                             0814
         BNO   @RF00814                                            0814
*                               CALL CONFLICT;/* YES         @G33CPMR*/
         BAL   @14,CONFLICT                                        0815
*                             ELSE  /* NO                    @G33CPMR*/
*                               SDUSWA=ON;/* SET SWA BIT     @G33CPMR*/
         B     @RC00814                                            0816
@RF00814 L     @07,SDUMPPTR                                        0816
         OI    SDUSWA(@07),B'01000000'                             0816
*                           END;    /*                       @G33CPMR*/
*                         ELSE      /*                       @G33CPMR*/
*                           DO;     /*                       @G33CPMR*/
         B     @RC00812                                            0818
@RF00812 DS    0H                                                  0819
*                             MSGCODE=IEE535I;/* NONE FOUND!!      0819
*                                                            @G33CPMR*/
         MVI   MSGCODE,X'3E'                                       0819
*                             KEYWDERR=DUMP;/* SET ERROR     @G33CPMR*/
         MVI   KEYWDERR+4,C' '                                     0820
         MVC   KEYWDERR+5(3),KEYWDERR+4                            0820
         MVC   KEYWDERR(4),DUMP                                    0820
*                           END;    /*                       @G33CPMR*/
*       END;                        /*                       @G33CPMR*/
*     ELSE                          /*                       @G33CPMR*/
*                                                                  0823
*       /*************************************************************/
*       /*                                                           */
*       /* PROCESSING FOR A FOUR CHARACTER NAME              @G33CPMR*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0823
*       IF I2-I=FOUR THEN           /* FOUR CHARACTER OPTION?      0823
*                                                            @G33CPMR*/
         B     @RC00762                                            0823
@RF00762 L     @07,I2                                              0823
         SLR   @07,I                                               0823
         CH    @07,@CH00045                                        0823
         BNE   @RF00823                                            0823
*         DO;                       /* YES                   @G33CPMR*/
*           IF REPLY(I:I+THREE)=LSQA THEN/* LSQA?            @G33CPMR*/
         LA    @07,REPLY-1(I)                                      0825
         CLC   0(4,@07),LSQA                                       0825
         BNE   @RF00825                                            0825
*             DO;                   /* YES                   @G33CPMR*/
*               IF SDULSQA=ON THEN  /* LSQA BIT ON?          @G33CPMR*/
         L     @07,SDUMPPTR                                        0827
         TM    SDULSQA(@07),B'00001000'                            0827
         BNO   @RF00827                                            0827
*                 CALL CONFLICT;    /* YES                   @G33CPMR*/
         BAL   @14,CONFLICT                                        0828
*               ELSE                /* NO                    @G33CPMR*/
*                 SDULSQA=ON;       /* SET LSQA BIT          @G33CPMR*/
         B     @RC00827                                            0829
@RF00827 L     @07,SDUMPPTR                                        0829
         OI    SDULSQA(@07),B'00001000'                            0829
*             END;                  /*                       @G33CPMR*/
*           ELSE                    /*                       @G33CPMR*/
*             DO;                   /*                       @G33CPMR*/
         B     @RC00825                                            0831
@RF00825 DS    0H                                                  0832
*               MSGCODE=IEE535I;    /* NONE FOUND!!          @G33CPMR*/
         MVI   MSGCODE,X'3E'                                       0832
*               KEYWDERR=DUMP;      /* SET ERROR             @G33CPMR*/
         MVI   KEYWDERR+4,C' '                                     0833
         MVC   KEYWDERR+5(3),KEYWDERR+4                            0833
         MVC   KEYWDERR(4),DUMP                                    0833
*             END;                  /*                       @G33CPMR*/
*         END;                      /*                       @G33CPMR*/
*       ELSE                        /*                       @G33CPMR*/
*                                                                  0836
*         /***********************************************************/
*         /*                                                         */
*         /* PROCESSING FOR A FIVE CHARACTER NAME            @G33CPMR*/
*         /*                                                         */
*         /***********************************************************/
*                                                                  0836
*         IF I2-I=FIVE THEN         /* FIVE CHARACTER OPTION?      0836
*                                                            @G33CPMR*/
         B     @RC00823                                            0836
@RF00823 L     @07,I2                                              0836
         SLR   @07,I                                               0836
         CH    @07,@CH00367                                        0836
         BNE   @RF00836                                            0836
*           DO;                     /* YES                   @G33CPMR*/
*             IF REPLY(I:I+FOUR)=NOPSA THEN/* NOPSA?         @G33CPMR*/
         LA    @07,REPLY-1(I)                                      0838
         CLC   0(5,@07),NOPSA                                      0838
         BNE   @RF00838                                            0838
*               DO;                 /* YES                   @G33CPMR*/
*                 IF((SDUNAPSA=ON)×(SDUALPSA=ON)) THEN/* NOPSA BIT 0840
*                                      ON?                   @G33CPMR*/
         L     @07,SDUMPPTR                                        0840
         TM    SDUNAPSA(@07),B'00001000'                           0840
         BO    @RT00840                                            0840
         TM    SDUALPSA(@07),B'10000000'                           0840
         BNO   @RF00840                                            0840
@RT00840 DS    0H                                                  0841
*                   CALL CONFLICT;  /* YES                   @G33CPMR*/
         BAL   @14,CONFLICT                                        0841
*                 ELSE              /* NO                    @G33CPMR*/
*                   SDUNAPSA=ON;    /* SET NOPSA BIT         @G33CPMR*/
         B     @RC00840                                            0842
@RF00840 L     @07,SDUMPPTR                                        0842
         OI    SDUNAPSA(@07),B'00001000'                           0842
*               END;                /*                       @G33CPMR*/
*             ELSE                  /*                       @G33CPMR*/
*               IF REPLY(I:I+FOUR)=NOSUM THEN/* NOSUM?       @G33CPMR*/
         B     @RC00838                                            0844
@RF00838 LA    @07,REPLY-1(I)                                      0844
         CLC   0(5,@07),NOSUM                                      0844
         BNE   @RF00844                                            0844
*                 DO;               /* YES                   @G33CPMR*/
*                   IF((SDUNSMDP=ON)×(SDUSMDMP=ON)) THEN/* NOSUM BIT
*                                      ON?                   @G33CPMR*/
         L     @07,SDUMPPTR                                        0846
         TM    SDUNSMDP(@07),B'00110000'                           0846
         BZ    @RF00846                                            0846
*                     CALL CONFLICT;/* YES                   @G33CPMR*/
         BAL   @14,CONFLICT                                        0847
*                   ELSE            /* NO                    @G33CPMR*/
*                     SDUNSMDP=ON;  /* SET NOSUM BIT         @G33CPMR*/
         B     @RC00846                                            0848
@RF00846 L     @07,SDUMPPTR                                        0848
         OI    SDUNSMDP(@07),B'00010000'                           0848
*                 END;              /*                       @G33CPMR*/
*               ELSE                /*                       @G33CPMR*/
*                 IF REPLY(I:I+FOUR)=NOSQA THEN/* NOSQA?     @G33CPMR*/
         B     @RC00844                                            0850
@RF00844 LA    @07,REPLY-1(I)                                      0850
         CLC   0(5,@07),NOSQA                                      0850
         BNE   @RF00850                                            0850
*                   DO;             /* YES                   @G33CPMR*/
*                     IF((SDUNASQA=ON)×(SDUSQA=ON)) THEN/* NOSQA BIT
*                                      ON?                   @G33CPMR*/
         L     @07,SDUMPPTR                                        0852
         TM    SDUNASQA(@07),B'00000100'                           0852
         BO    @RT00852                                            0852
         TM    SDUSQA(@07),B'00010000'                             0852
         BNO   @RF00852                                            0852
@RT00852 DS    0H                                                  0853
*                       CALL CONFLICT;/* YES                 @G33CPMR*/
         BAL   @14,CONFLICT                                        0853
*                     ELSE          /* NO                    @G33CPMR*/
*                       SDUNASQA=ON;/* SET NOSQA BIT         @G33CPMR*/
         B     @RC00852                                            0854
@RF00852 L     @07,SDUMPPTR                                        0854
         OI    SDUNASQA(@07),B'00000100'                           0854
*                   END;            /*                       @G33CPMR*/
*                 ELSE              /*                       @G33CPMR*/
*                   DO;             /*                       @G33CPMR*/
         B     @RC00850                                            0856
@RF00850 DS    0H                                                  0857
*                     MSGCODE=IEE535I;/* NONE FOUND!!        @G33CPMR*/
         MVI   MSGCODE,X'3E'                                       0857
*                     KEYWDERR=DUMP;/* SET ERROR             @G33CPMR*/
         MVI   KEYWDERR+4,C' '                                     0858
         MVC   KEYWDERR+5(3),KEYWDERR+4                            0858
         MVC   KEYWDERR(4),DUMP                                    0858
*                   END;            /*                       @G33CPMR*/
*           END;                    /*                       @G33CPMR*/
*         ELSE                      /*                       @G33CPMR*/
*                                                                  0861
*           /*********************************************************/
*           /*                                                       */
*           /* AN INVALID OPTION LENGTH WAS ENCOUNTERED - ERROR      */
*           /*                                               @G33CPMR*/
*           /*                                                       */
*           /*********************************************************/
*                                                                  0861
*           DO;                     /*                       @G33CPMR*/
         B     @RC00836                                            0861
@RF00836 DS    0H                                                  0862
*             MSGCODE=IEE535I;      /* ERROR CONDITION       @G33CPMR*/
         MVI   MSGCODE,X'3E'                                       0862
*             KEYWDERR=DUMP;        /* INVALID PARAMETER     @G33CPMR*/
         MVI   KEYWDERR+4,C' '                                     0863
         MVC   KEYWDERR+5(3),KEYWDERR+4                            0863
         MVC   KEYWDERR(4),DUMP                                    0863
*           END;                    /*                       @G33CPMR*/
*     I=I2;                         /* UPDATE THE CONTROL INDEX    0865
*                                                            @G33CPMR*/
@RC00836 DS    0H                                                  0865
@RC00823 DS    0H                                                  0865
@RC00762 L     I,I2                                                0865
*     IF REPLY(I)=COMMA THEN        /* CHECK TO SEE IF AT END      0866
*                                                            @G33CPMR*/
         LA    @07,REPLY-1(I)                                      0866
         CLI   0(@07),C','                                         0866
         BNE   @RF00866                                            0866
*       DO;                         /* NO                    @G33CPMR*/
*         I=I+ONE;                  /* BUMP INDEX BY ONE     @G33CPMR*/
         AH    I,@CH00047                                          0868
*         IF REPLY(I)=RTPRN THEN    /* AN UNEXPECTED DELIMITER?    0869
*                                                            @G33CPMR*/
         LA    @07,REPLY-1(I)                                      0869
         CLI   0(@07),C')'                                         0869
         BNE   @RF00869                                            0869
*           DO;                     /* YES, FLAG IT AS AN ERROR    0870
*                                                            @G33CPMR*/
*             MSGCODE=IEE307I;      /* SET ERROR CODE        @G33CPMR*/
         MVI   MSGCODE,X'07'                                       0871
*             KEYWDERR=DUMP;        /* SET KEYWORD FILLER    @G33CPMR*/
         MVI   KEYWDERR+4,C' '                                     0872
         MVC   KEYWDERR+5(3),KEYWDERR+4                            0872
         MVC   KEYWDERR(4),DUMP                                    0872
*           END;                    /*                       @G33CPMR*/
*         ELSE                                                     0874
*           ;                       /*                       @G33CPMR*/
@RF00869 DS    0H                                                  0875
*       END;                        /*                       @G33CPMR*/
*     ELSE                                                         0876
*       ;                           /*                       @G33CPMR*/
@RF00866 DS    0H                                                  0877
*   END;                                                           0877
@DE00759 LA    @07,REPLY-1(I)                                      0877
         CLI   0(@07),C')'                                         0877
         BE    @DC00759                                            0877
         CLI   MSGCODE,0                                           0877
         BE    @DL00759                                            0877
@DC00759 DS    0H                                                  0878
*   I=I+ONE;                        /* BUMP INDEX BY ONE     @G33CPMR*/
         AH    I,@CH00047                                          0878
*   IF SDUSDAT1=ZERO&SDUSDAT2=ZERO THEN/* NO SDATA OPTIONS SPECIFIED */
         L     @07,SDUMPPTR                                        0879
         CLI   SDUSDAT1(@07),0                                     0879
         BNE   @RF00879                                            0879
         CLI   SDUSDAT2(@07),0                                     0879
         BNE   @RF00879                                            0879
*     DO;                                                          0880
*       MSGCODE='3D'X;              /* ERROR CONDITION               */
         MVI   MSGCODE,X'3D'                                       0881
*       KEYWDERR=DUMP;              /* KEYWORD ERROR                 */
         MVI   KEYWDERR+4,C' '                                     0882
         MVC   KEYWDERR+5(3),KEYWDERR+4                            0882
         MVC   KEYWDERR(4),DUMP                                    0882
*     END;                                                         0883
*   REG14=R14SAV4;                  /* RESTORE RETURN REG            */
@RF00879 L     REG14,R14SAV4                                       0884
*   END;                                                           0885
@EL00018 DS    0H                                                  0885
@EF00018 DS    0H                                                  0885
@ER00018 BR    @14                                                 0885
*FINDASID:                                                         0886
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0886
*                                                                  0886
FINDASID DS    0H                                                  0887
*/* ******************************************************************/
*/*                                                                  */
*/*  THIS ROUTINE WILL PACK AND CVB THE ASID IN THE REPLY            */
*/*                                                                  */
*/* ******************************************************************/
*                                                                  0887
*   R14SAV1=REG14;                  /* SAVE RETURN ADDRESS           */
         ST    REG14,R14SAV1                                       0887
*   DECASID=DECASID&&DECASID;       /* INIT STORAGE           @YM4489*/
         XC    DECASID(5),DECASID                                  0888
*   PKASID=PKASID&&PKASID;          /* INIT STORAGE           @YM4489*/
         XC    PKASID(8),PKASID                                    0889
*   DECASID(FIVE-I3:FIVE)=REPLY(I2:I-ONE);/*                 @G33CPMR*/
         LA    @07,5                                               0890
         LR    @02,@07                                             0890
         SL    @02,I3                                              0890
         LA    @09,DECASID-1(@02)                                  0890
         SLR   @07,@02                                             0890
         L     @02,I2                                              0890
         LA    @08,REPLY-1(@02)                                    0890
         EX    @07,@SM02047                                        0890
*   PACK(PKASID,DECASID);           /* PACK DECIMAL ASID             */
         PACK  PKASID(8),DECASID(5)                                0891
*   CVB(SDUTASID,PKASID);           /* CONVERT TO BINARY             */
         CVB   @07,PKASID                                          0892
         L     @02,SDUMPPTR                                        0892
         STH   @07,SDUTASID(,@02)                                  0892
*   RFY                                                            0893
*     ASVT BASED(CVTASVT);          /* ADDRESS THE ASVT      @G33CPMR*/
*   IF SDUTASID>ASVTMAXU THEN       /* VALID ASID NUMBER?    @G33CPMR*/
         L     @02,CVTPTR                                          0894
         L     @02,CVTASVT(,@02)                                   0894
         C     @07,ASVTMAXU(,@02)                                  0894
         BNH   @RF00894                                            0894
*     DO;                           /* NO, TOO HIGH          @G33CPMR*/
*       MSGCODE=IEE708I;            /* SET ERROR CODE        @G33CPMR*/
         MVI   MSGCODE,X'3D'                                       0896
*       KEYWDERR=NOTASID;           /* SET 'ASID' KEYWORD    @G33CPMR*/
         MVI   KEYWDERR+4,C' '                                     0897
         MVC   KEYWDERR+5(3),KEYWDERR+4                            0897
         MVC   KEYWDERR(4),NOTASID                                 0897
*     END;                          /*                       @G33CPMR*/
*   ELSE                                                           0899
*     ;                             /*                       @G33CPMR*/
@RF00894 DS    0H                                                  0900
*   REG14=R14SAV1;                  /* RESTORE RETURN ADDRESS        */
         L     REG14,R14SAV1                                       0900
*   END;                                                           0901
@EL00019 DS    0H                                                  0901
@EF00019 DS    0H                                                  0901
@ER00019 BR    @14                                                 0901
*FINDJOB:                                                          0902
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0902
*                                                                  0902
FINDJOB  DS    0H                                                  0903
*/* ******************************************************************/
*/*                                                                  */
*/*  THIS ROUTINE WILL ENQ ON THE CSCB CHAIN AND FIND THE ASID       */
*/*                                                                  */
*/* ******************************************************************/
*                                                                  0903
*   R14SAV5=REG14;                  /* SAVE RETURN REG               */
         ST    REG14,R14SAV5                                       0903
*   GEN(ENQ (SYSIEFSD,Q10,S,3,SYSTEM));/* ENQ ON CSCB CHAIN          */
         ENQ (SYSIEFSD,Q10,S,3,SYSTEM)
*   CSCBPTR=BACHN;                  /* FIRST CSCB ON CHAIN           */
         L     @07,CVTPTR                                          0905
         L     @07,CVTMSER(,@07)                                   0905
         MVC   CSCBPTR(4),BACHN(@07)                               0905
*   CSCBSW=ON;                                                     0906
         OI    CSCBSW,B'01000000'                                  0906
*   DO WHILE CSCBSW=ON;             /* SEARCH FOR JOBNAME            */
         B     @DE00907                                            0907
@DL00907 DS    0H                                                  0908
*     IF CHCLS=NAME&TSOBIT=OFE      /* JOBNAME FOUND         @ZA00880*/
*         ×CHKEY=NAME&TSOBIT=ON THEN/* TSONAME FOUND         @ZA00880*/
         L     @07,CSCBPTR                                         0908
         CLC   CHCLS(8,@07),NAME                                   0908
         BNE   @GL00047                                            0908
         TM    TSOBIT,B'00000001'                                  0908
         BZ    @RT00908                                            0908
@GL00047 L     @07,CSCBPTR                                         0908
         CLC   CHKEY(8,@07),NAME                                   0908
         BNE   @RF00908                                            0908
         TM    TSOBIT,B'00000001'                                  0908
         BNO   @RF00908                                            0908
@RT00908 DS    0H                                                  0909
*       DO;                                                        0909
*         SDUTASID=CHASID;          /* STORE JOB ASID                */
         L     @07,SDUMPPTR                                        0910
         L     @02,CSCBPTR                                         0910
         MVC   SDUTASID(2,@07),CHASID(@02)                         0910
*         CSCBSW=OFE;               /* STOP SEARCHING                */
         NI    CSCBSW,B'10111111'                                  0911
*       END;                                                       0912
*     ELSE                                                         0913
*       DO;                                                        0913
         B     @RC00908                                            0913
@RF00908 DS    0H                                                  0914
*         IF CHPTR^=0 THEN          /* NOT LAST CSCB                 */
         L     @07,CSCBPTR                                         0914
         L     @07,CHPTR(,@07)                                     0914
         LTR   @07,@07                                             0914
         BZ    @RF00914                                            0914
*           CSCBPTR=CHPTR;          /* NEXT CSCB PLEASE              */
         ST    @07,CSCBPTR                                         0915
*         ELSE                                                     0916
*           DO;                                                    0916
         B     @RC00914                                            0916
@RF00914 DS    0H                                                  0917
*             IF TSOBIT=ON THEN     /* TSO JOB ACTIVE        @ZA00880*/
         TM    TSOBIT,B'00000001'                                  0917
         BNO   @RF00917                                            0917
*               MSGCODE='35'X;      /* USERID NOT LOGGED ON  @ZA00880*/
         MVI   MSGCODE,X'35'                                       0918
*             ELSE                  /*                       @ZA00880*/
*               MSGCODE='24'X;      /* JOB NOT ACTIVE        @ZA00880*/
         B     @RC00917                                            0919
@RF00917 MVI   MSGCODE,X'24'                                       0919
*             KEYWDERR=NAME;        /* JOBNAME IN ERROR              */
@RC00917 MVC   KEYWDERR(8),NAME                                    0920
*             CSCBSW=OFE;           /* STOP SEARCH                   */
         NI    CSCBSW,B'10111111'                                  0921
*           END;                                                   0922
*       END;                                                       0923
@RC00914 DS    0H                                                  0924
*   END;                                                           0924
@RC00908 DS    0H                                                  0924
@DE00907 TM    CSCBSW,B'01000000'                                  0924
         BO    @DL00907                                            0924
*   GEN(DEQ (SYSIEFSD,Q10,3,SYSTEM));/* DEQ CSCB CHAIN               */
         DEQ (SYSIEFSD,Q10,3,SYSTEM)
*   REG14=R14SAV5;                  /* RESTORE RETURN REG            */
         L     REG14,R14SAV5                                       0926
*   END;                                                           0927
@EL00020 DS    0H                                                  0927
@EF00020 DS    0H                                                  0927
@ER00020 BR    @14                                                 0927
*STORSCAN:                                                         0928
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0928
*                                                                  0928
STORSCAN DS    0H                                                  0929
*/* ******************************************************************/
*/*                                                                  */
*/*         STORSCAN WILL DO THE FOLLOWING                           */
*/*           1.  CALL ONEADDR TO SYNTAX CHECK EACH ADDRESS          */
*/*               AND TO DETERMINE IF THE ADDRESS IS HEX OR          */
*/*               DECIMAL                                            */
*/*           2.  PACK AND CVB THE ADDRESS                           */
*/*           3.  DETERMINE IF THE ADDRESSES ARE IN PARES            */
*/*                                                                  */
*/* ******************************************************************/
*                                                                  0929
*   R14SAV2=REG14;                  /* SAVE RETURN ADDRESS           */
         ST    REG14,R14SAV2                                       0929
*   HEXSW=ON;                       /* INDICATE HEX NUMBER           */
         OI    HEXSW,B'00010000'                                   0930
*   SDUSTORA=ADDR(STORLIST);        /* START OF STORAGE LIST         */
         LA    @07,STORLIST                                        0931
         L     @02,SDUMPPTR                                        0931
         ST    @07,SDUSTORA(,@02)                                  0931
*   STORLIST=STORLIST&&STORLIST;    /* ZERO OUT THE AREA             */
         XC    STORLIST(120),STORLIST                              0932
*   DO WHILE STORSW=OFE&MSGCODE=0;  /* DETERMINE ADDRESSES           */
         B     @DE00933                                            0933
@DL00933 DS    0H                                                  0934
*     PKAREA=PKAREA&&PKAREA;        /* INIT STORAGE           @YM4489*/
         XC    PKAREA(8),PKAREA                                    0934
*     STORADR=STORADR&&STORADR;     /* INIT STORAGE           @YM4489*/
         XC    STORADR(8),STORADR                                  0935
*     STORADR(1:6)=REPLY(I+1:I+6);  /* ONE ADDRESS                   */
         LA    @07,REPLY(I)                                        0936
         MVC   STORADR(6),0(@07)                                   0936
*     CALL ONEADDR;                 /* SYNTAX CHECK ONE ADDR         */
         BAL   @14,ONEADDR                                         0937
*     IF HEXSW=OFE&MSGCODE=0 THEN   /* DECIMAL ADDRESS               */
         TM    HEXSW,B'00010000'                                   0938
         BNZ   @RF00938                                            0938
         CLI   MSGCODE,0                                           0938
         BNE   @RF00938                                            0938
*       DO;                                                        0939
*         PACK(PKAREA,STORADR(1:5));/* PACK DECIMAL                  */
         PACK  PKAREA(8),STORADR(5)                                0940
*         CVB(USERADDR,PKAREA);     /* CONVERT TO BINARY             */
         MVC   @TS00001(8),PKAREA                                  0941
         CVB   @07,@TS00001                                        0941
         ST    @07,USERADDR                                        0941
*         USERADDR=USERADDR*ONEK;   /* DEC ADDR * 1024               */
         SLA   @07,10                                              0942
         ST    @07,USERADDR                                        0942
*         HEXSW=ON;                                                0943
         OI    HEXSW,B'00010000'                                   0943
*       END;                                                       0944
*     ELSE                                                         0945
*       DO;                                                        0945
         B     @RC00938                                            0945
@RF00938 DS    0H                                                  0946
*         IF MSGCODE=0 THEN         /* HEX ADDRESS                   */
         CLI   MSGCODE,0                                           0946
         BNE   @RF00946                                            0946
*           DO;                                                    0947
*             PACK(PKAREA,STORADR(1:6));/* PACK ADDRESS              */
         PACK  PKAREA(8),STORADR(6)                                0948
*             USERADDR=PKAREA(5:8); /* STOR PACK ADDRESS             */
         MVC   @TF00001(4),PKAREA+4                                0949
         L     @07,@TF00001                                        0949
         ST    @07,USERADDR                                        0949
*             USERADDR=USERADDR/16; /* REMOVE THE SIGN               */
         LR    @04,@07                                             0950
         SRDA  @04,32                                              0950
         D     @04,@CF00157                                        0950
         ST    @05,USERADDR                                        0950
*           END;                                                   0951
*       END;                                                       0952
@RF00946 DS    0H                                                  0953
*     SDUSTORA->PUTINLIS=USERADDR;  /* PUT ADDR IN LIST              */
@RC00938 L     @07,SDUMPPTR                                        0953
         L     @02,SDUSTORA(,@07)                                  0953
         MVC   PUTINLIS(4,@02),USERADDR                            0953
*     I=I+7;                        /* NEXT ADDRESS                  */
         AH    I,@CH00100                                          0954
*     IF PARSW=OFE THEN                                            0955
         TM    PARSW,B'00100000'                                   0955
         BNZ   @RF00955                                            0955
*       DO;                                                        0956
*         IF COMMA=REPLY(I) THEN    /* MORE ADDRESSES                */
         LA    @09,REPLY-1(I)                                      0957
         CLI   0(@09),C','                                         0957
         BNE   @RF00957                                            0957
*           DO;                                                    0958
*             SDUSTORA=SDUSTORA+4;  /* ADVANCE IN STORLIST           */
         AH    @02,@CH00045                                        0959
         ST    @02,SDUSTORA(,@07)                                  0959
*             PARSW=ON;             /* NO PARE                       */
         OI    PARSW,B'00100000'                                   0960
*           END;                                                   0961
*         ELSE                                                     0962
*           DO;                                                    0962
         B     @RC00957                                            0962
@RF00957 DS    0H                                                  0963
*             KEYWDERR=DUMP;        /* ERROR CONDITION               */
         MVI   KEYWDERR+4,C' '                                     0963
         MVC   KEYWDERR+5(3),KEYWDERR+4                            0963
         MVC   KEYWDERR(4),DUMP                                    0963
*             MSGCODE='3E'X;        /* INVALID PARAMETER             */
         MVI   MSGCODE,X'3E'                                       0964
*           END;                                                   0965
*       END;                                                       0966
*     ELSE                                                         0967
*       DO;                                                        0967
         B     @RC00955                                            0967
@RF00955 DS    0H                                                  0968
*         IF FIRSTADR<SECADR THEN   /* COMPARE ADDRESSES             */
         L     @07,SDUMPPTR                                        0968
         L     @07,SDUSTORA(,@07)                                  0968
         LR    @02,@07                                             0968
         AL    @02,@CF02033                                        0968
         CLC   FIRSTADR(4,@02),SECADR(@07)                         0968
         BNL   @RF00968                                            0968
*           PARSW=OFE;              /* STOP THE COMPARE              */
         NI    PARSW,B'11011111'                                   0969
*         ELSE                                                     0970
*           DO;                                                    0970
         B     @RC00968                                            0970
@RF00968 DS    0H                                                  0971
*             MSGCODE='3E'X;        /* ERROR CONDITION               */
         MVI   MSGCODE,X'3E'                                       0971
*             KEYWDERR=STOR;        /* INVALID PARAMETER      @YM2729*/
         MVI   KEYWDERR+4,C' '                                     0972
         MVC   KEYWDERR+5(3),KEYWDERR+4                            0972
         MVC   KEYWDERR(4),STOR                                    0972
*           END;                                                   0973
*         IF RTPRN=REPLY(I) THEN    /* END OF STOR                   */
@RC00968 LA    @07,REPLY-1(I)                                      0974
         CLI   0(@07),C')'                                         0974
         BNE   @RF00974                                            0974
*           DO;                                                    0975
*             STORSW=ON;            /* STOP STOR SCAN                */
         OI    STORSW,B'00000100'                                  0976
*             HIBIT='80'X;          /* LAST ADDRESS INDICATOR        */
         L     @07,SDUMPPTR                                        0977
         L     @02,SDUSTORA(,@07)                                  0977
         MVI   HIBIT(@02),X'80'                                    0977
*             SDUSTORA=ADDR(STORLIST);/* ADDR IN PARM LIST           */
         LA    @02,STORLIST                                        0978
         ST    @02,SDUSTORA(,@07)                                  0978
*             SDUSTOR=ON;           /* STORLIST INDICATED            */
         OI    SDUSTOR(@07),B'00100000'                            0979
*           END;                                                   0980
*         ELSE                                                     0981
*           DO;                                                    0981
         B     @RC00974                                            0981
@RF00974 DS    0H                                                  0982
*             IF COMMA=REPLY(I) THEN/* MORE ADDRESSES                */
         LA    @07,REPLY-1(I)                                      0982
         CLI   0(@07),C','                                         0982
         BNE   @RF00982                                            0982
*               SDUSTORA=SDUSTORA+4;/* ADVANCE IN STORLIST           */
         L     @07,SDUMPPTR                                        0983
         LA    @02,4                                               0983
         AL    @02,SDUSTORA(,@07)                                  0983
         ST    @02,SDUSTORA(,@07)                                  0983
*             ELSE                                                 0984
*               DO;                                                0984
         B     @RC00982                                            0984
@RF00982 DS    0H                                                  0985
*                 KEYWDERR=DUMP;    /* ERROR CONDITION               */
         MVI   KEYWDERR+4,C' '                                     0985
         MVC   KEYWDERR+5(3),KEYWDERR+4                            0985
         MVC   KEYWDERR(4),DUMP                                    0985
*                 MSGCODE='07'X;    /* DELIMITER ERROR               */
         MVI   MSGCODE,X'07'                                       0986
*               END;                                               0987
*           END;                                                   0988
@RC00982 DS    0H                                                  0989
*       END;                                                       0989
@RC00974 DS    0H                                                  0990
*   END;                                                           0990
@RC00955 DS    0H                                                  0990
@DE00933 TM    STORSW,B'00000100'                                  0990
         BNZ   @DC00933                                            0990
         CLI   MSGCODE,0                                           0990
         BE    @DL00933                                            0990
@DC00933 DS    0H                                                  0991
*   REG14=R14SAV2;                  /* RESTORE RETURN ADDRESS        */
         L     REG14,R14SAV2                                       0991
*   END;                                                           0992
@EL00021 DS    0H                                                  0992
@EF00021 DS    0H                                                  0992
@ER00021 BR    @14                                                 0992
*ONEADDR:                                                          0993
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               0993
*                                                                  0993
ONEADDR  DS    0H                                                  0994
*/* ******************************************************************/
*/*                                                                  */
*/*            ONEADDR WILL DO THE FOLLOWING                         */
*/*              1.  DETERMINE IF THE ADDRESS IS HEX                 */
*/*                  OR DECIMAL                                      */
*/*              2.  SYNTAX CHECK THE ADDRESS ONE BYTE               */
*/*                  AT A TIME                                       */
*/*                                                                  */
*/* ******************************************************************/
*                                                                  0994
*   R14SA15=REG14;                  /* SAVE RETURN ADDR              */
         ST    REG14,R14SA15                                       0994
*   DO INDX=6 TO 1 BY-1 WHILE MSGCODE=0;/* CHECH EACH BYTE           */
         LA    @07,6                                               0995
         ST    @07,INDX                                            0995
@DL00995 CLI   MSGCODE,0                                           0995
         BNE   @DC00995                                            0995
*     IF INDX=6 THEN                /* FIRST BYTE CHECKED            */
         CH    @07,@CH00599                                        0996
         BNE   @RF00996                                            0996
*       DO;                                                        0997
*         IF STORADR(INDX)=KAE THEN /* DECIMAL ADDRESS               */
         LA    @02,STORADR-1(@07)                                  0998
         CLI   0(@02),C'K'                                         0998
         BNE   @RF00998                                            0998
*           DO;                                                    0999
*             HEXSW=OFE;            /* NOT HEX                       */
*             DECSW=ON;             /* DECIMAL IS INDICATED          */
         OI    DECSW,B'00001000'                                   1001
         NI    HEXSW,B'11101111'                                   1001
*           END;                                                   1002
*         ELSE                                                     1003
*           ;                                                      1003
@RF00998 DS    0H                                                  1004
*       END;                                                       1004
*     IF HEXSW=OFE THEN             /* DECIMAL ADDR RANGE            */
@RF00996 TM    HEXSW,B'00010000'                                   1005
         BNZ   @RF01005                                            1005
*       DO;                                                        1006
*         IF DECSW=OFE THEN         /* NOT DEC LETTER K              */
         TM    DECSW,B'00001000'                                   1007
         BNZ   @RF01007                                            1007
*           DO;                                                    1008
*             IF STORADR(INDX)<'0'×STORADR(INDX)>'9' THEN          1009
*                                                                  1009
         L     @07,INDX                                            1009
         LA    @02,STORADR-1(@07)                                  1009
         CLI   0(@02),C'0'                                         1009
         BL    @RT01009                                            1009
         LA    @02,STORADR-1(@07)                                  1009
         CLI   0(@02),C'9'                                         1009
         BNH   @RF01009                                            1009
@RT01009 DS    0H                                                  1010
*               /*****************************************************/
*               /*                                                   */
*               /* CHECK FOR VALID DECIMAL NUMBERS                   */
*               /*                                                   */
*               /*****************************************************/
*                                                                  1010
*               DO;                                                1010
*                 KEYWDERR=DUMP;    /* INCORRECT NUMBER              */
         MVI   KEYWDERR+4,C' '                                     1011
         MVC   KEYWDERR+5(3),KEYWDERR+4                            1011
         MVC   KEYWDERR(4),DUMP                                    1011
*                 MSGCODE='06'X;    /* ERROR CONDITION               */
         MVI   MSGCODE,X'06'                                       1012
*               END;                                               1013
*             ELSE                                                 1014
*               ;                                                  1014
@RF01009 DS    0H                                                  1015
*           END;                                                   1015
*         ELSE                                                     1016
*           DECSW=OFE;              /* SET SWITCH                    */
         B     @RC01007                                            1016
@RF01007 NI    DECSW,B'11110111'                                   1016
*       END;                                                       1017
*     ELSE                                                         1018
*       DO;                                                        1018
         B     @RC01005                                            1018
@RF01005 DS    0H                                                  1019
*         IF STORADR(INDX)>='A'&STORADR(INDX)<='F'×STORADR(INDX)>='0'&
*             STORADR(INDX)<='9' THEN/* VALID HEX NUMBER             */
         L     @07,INDX                                            1019
         LA    @02,STORADR-1(@07)                                  1019
         CLI   0(@02),C'A'                                         1019
         BL    @GL00053                                            1019
         LA    @02,STORADR-1(@07)                                  1019
         CLI   0(@02),C'F'                                         1019
         BNH   @RT01019                                            1019
@GL00053 L     @07,INDX                                            1019
         LA    @02,STORADR-1(@07)                                  1019
         CLI   0(@02),C'0'                                         1019
         BL    @RF01019                                            1019
         LA    @02,STORADR-1(@07)                                  1019
         CLI   0(@02),C'9'                                         1019
         BH    @RF01019                                            1019
@RT01019 DS    0H                                                  1020
*           DO;                                                    1020
*             IF STORADR(INDX)>='A'&STORADR(INDX)<='F' THEN        1021
*                                                                  1021
         L     @07,INDX                                            1021
         LA    @02,STORADR-1(@07)                                  1021
         CLI   0(@02),C'A'                                         1021
         BL    @RF01021                                            1021
         LA    @02,STORADR-1(@07)                                  1021
         CLI   0(@02),C'F'                                         1021
         BH    @RF01021                                            1021
*               /*****************************************************/
*               /*                                                   */
*               /* THE FOLLOWING INSTRUCTION IS CHARACTER CODE       */
*               /* DEPENDENT. IT WILL ADD 57 TO C1,C2,C3,C4, C5 OR   */
*               /* C6. THIS WILL MAKE THEM PACKABLE TO FA,FB,FC,FD,FE*/
*               /* OR FF.                                            */
*               /*                                                   */
*               /*****************************************************/
*                                                                  1022
*               STORADR(INDX)=57+STORADR(INDX);                    1022
         LA    @02,57                                              1022
         LA    @09,STORADR-1(@07)                                  1022
         MVC   @ZT00003+3(1),0(@09)                                1022
         AL    @02,@ZT00003                                        1022
         STC   @02,STORADR-1(@07)                                  1022
*             ELSE                                                 1023
*               ;                                                  1023
@RF01021 DS    0H                                                  1024
*           END;                                                   1024
*         ELSE                                                     1025
*           DO;                                                    1025
         B     @RC01019                                            1025
@RF01019 DS    0H                                                  1026
*             MSGCODE='06'X;        /* ERROR CONDITION               */
         MVI   MSGCODE,X'06'                                       1026
*             KEYWDERR=DUMP;        /* INCORRECT ADDRESS             */
         MVI   KEYWDERR+4,C' '                                     1027
         MVC   KEYWDERR+5(3),KEYWDERR+4                            1027
         MVC   KEYWDERR(4),DUMP                                    1027
*           END;                                                   1028
*       END;                                                       1029
@RC01019 DS    0H                                                  1030
*   END;                                                           1030
@RC01005 SLR   @07,@07                                             1030
         BCTR  @07,0                                               1030
         AL    @07,INDX                                            1030
         ST    @07,INDX                                            1030
         LTR   @07,@07                                             1030
         BP    @DL00995                                            1030
@DC00995 DS    0H                                                  1031
*   REG14=R14SA15;                  /* RESTORE RETURN ADDR           */
         L     REG14,R14SA15                                       1031
*   END;                                                           1032
@EL00022 DS    0H                                                  1032
@EF00022 DS    0H                                                  1032
@ER00022 BR    @14                                                 1032
*ISUSDUMP:                                                         1033
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);                               1033
*                                                                  1033
ISUSDUMP DS    0H                                                  1034
*/* ******************************************************************/
*/*                                                                  */
*/*             THIS ROUTINE WILL ISSUE THE SDUMP MACRO              */
*/*                                                                  */
*/* ******************************************************************/
*                                                                  1034
*   R14SA17=REG14;                  /* SAVE RETURN ADDRESS           */
         ST    REG14,R14SA17                                       1034
*   SDUECBAD=ADDR(DUMPECB);         /* ECB ADDR IN PARMLIST  @YM4790P*/
         LA    @07,DUMPECB                                         1035
         L     @09,SDUMPPTR                                        1035
         ST    @07,SDUECBAD(,@09)                                  1035
*   DUMPECB=0;                      /* ZERO OUT DUMPECB      @YM4790P*/
         SLR   @07,@07                                             1036
         ST    @07,DUMPECB                                         1036
*   REG1=ADDR(SDUMPLF);             /* SDUMP PARM LIST               */
*                                                                  1037
         LA    REG1,SDUMPLF                                        1037
*   /*****************************************************************/
*   /*                                                               */
*   /* MOVE LIST FORM SDUMP INTO DATA AREA                           */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1038
*   GEN(SDUMP MF=(E,(REG1)));                                      1038
         SDUMP MF=(E,(REG1))
*   IF REG15=0 THEN                 /* SRB CREATED BY SVC51  @YM4790P*/
         LTR   REG15,REG15                                         1039
         BNZ   @RF01039                                            1039
*     GEN(WAIT ECB=DUMPECB);        /* WAIT ON SVC51 ECB     @YM4790P*/
         WAIT ECB=DUMPECB
*   ELSE                            /*                       @YM4790P*/
*     ECBCODE=EIGHT;                /* SYS UNABLE TO DUMP    @YM4790P*/
         B     @RC01039                                            1041
@RF01039 MVC   ECBCODE(3),@CF00049+1                               1041
*   REG14=R14SA17;                  /* RESTORE RETURN ADDR           */
@RC01039 L     REG14,R14SA17                                       1042
*   END;                                                           1043
@EL00023 DS    0H                                                  1043
@EF00023 DS    0H                                                  1043
@ER00023 BR    @14                                                 1043
*                                                                  1044
*   /*****************************************************************/
*   /*                                                               */
*   /* GEN DATA FOR THE WTOR                                         */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1044
*   GEN;                                                           1044
WTORDATA WTOR 'IEE094D SPECIFY OPERAND(S) FOR DUMP COMMAND',          **
               WTORDATA,120,WTORDATA,DESC=2,MCSFLAG=(REG0,RESP),MF=L
*                                                                  1045
*   /*****************************************************************/
*   /*                                                               */
*   /* GEN DATA FOR SDUMP                                            */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1045
*   GEN;                                                           1045
LFSDUMP  SDUMP MF=L
*                                                                  1046
*   /*****************************************************************/
*   /*                                                               */
*   /* END CONSOLE DUMP PROCESOR                                     */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  1046
*   END IEECB866                                                   1046
*                                                                  1046
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (IEECHAIN)                                       */
*/*%INCLUDE SYSLIB  (IEECUCM )                                       */
*/*%INCLUDE SYSLIB  (IEEBASEA)                                       */
*/*%INCLUDE SYSLIB  (IEEXSA  )                                       */
*/*%INCLUDE SYSLIB  (CVT     )                                       */
*/*%INCLUDE SYSLIB  (IHASDUMP)                                       */
*/*%INCLUDE SYSLIB  (IHASUBIT)                                       */
*/*%INCLUDE SYSLIB  (IHAASVT )                                       */
*                                                                  1046
*       ;                                                          1046
         B     @EL00001                                            1046
@DATA    DS    0H
@CH00047 DC    H'1'
@CH00152 DC    H'2'
@CH00074 DC    H'3'
@CH00045 DC    H'4'
@CH00367 DC    H'5'
@CH00599 DC    H'6'
@CH00100 DC    H'7'
@CH00124 DC    H'9'
@CH00035 DC    H'11'
@CH00034 DC    H'12'
@CH00080 DC    H'15'
@CH01764 DC    H'17'
@CH01766 DC    H'120'
@CH00134 DC    H'124'
@SM02034 MVC   TEXT(0),CHBUF+6(@09)
@SM02042 MVC   NAME(0),0(@09)
@SM02047 MVC   0(0,@09),0(@08)
@DATD    DSECT
         DS    0F
@PC00001 DS    1F
@TF00001 DS    F
@ZTEMPS  DS    0F
@ZT00002 DC    F'0'
@ZT00003 DC    F'0'
@ZTEMPND EQU   *
@ZLEN    EQU   @ZTEMPND-@ZTEMPS
IEECB866 CSECT
         DS    0F
@CF00049 DC    F'8'
@CH00049 EQU   @CF00049+2
@CF00157 DC    F'16'
@CF02033 DC    F'-4'
@CF01860 DC    XL4'8000'
@DATD    DSECT
         DS    0D
CSCBPTR  DS    A
UCMEXTPT DS    A
UCMEILPT DS    A
UCMUEWPT DS    A
UCMFXPTR DS    A
UCMPXPTR DS    A
SDUMPPTR DS    A
ASVTPTR  DS    A
I2       DS    F
I3       DS    F
INDX     DS    F
USERADDR DS    F
ECB      DS    F
DUMPECB  DS    FL4
         ORG   DUMPECB
ECBPOST  DS    AL1
ECBCODE  DS    FL3
         ORG   DUMPECB+4
BEGIN    DS    H
COUNT    DS    H
LOOPCNT  DS    H
NAMELGTH DS    H
         DS    0D
@TS00001 DS    CL8
KEYWDERR DS    CL8
MSGCODE  DS    CL1
SAVEUCMP DS    CL1
DUMPHDR  DS    CL101
         ORG   DUMPHDR
TEXTLNTH DS    FL1
TEXT     DS    CL100
         ORG   DUMPHDR+101
BITSW    DS    CL2
         ORG   BITSW
BITA     DS    CL1
         ORG   BITA
REPLYCK  DS    BL1
CSCBSW   EQU   BITA+0
PARSW    EQU   BITA+0
HEXSW    EQU   BITA+0
DECSW    EQU   BITA+0
STORSW   EQU   BITA+0
REPLYEND EQU   BITA+0
TSOBIT   EQU   BITA+0
         ORG   BITSW+1
BITB     DS    CL1
         ORG   BITB
CONTINUE DS    BL1
STORDONE EQU   BITB+0
SDATDONE EQU   BITB+0
@NM00060 EQU   BITB+0
         ORG   BITSW+2
         DS    CL7
STORLIST DS    CL120
PKAREA   DS    CL8
STORADR  DS    CL8
STAEAREA DS    CL44
SDUMPLF  DS    CL40
WTORAREA DS    CL68
         ORG   WTORAREA
@NM00061 DS    CL1
RPLYAD   DS    AL3
ECBAD    DS    AL4
@NM00062 DS    CL60
         ORG   WTORAREA+68
REPLY    DS    CL121
DECASID  DS    CL5
         DS    CL2
PKASID   DS    CL8
NAME     DS    CL8
R14SAVE  DS    CL80
         ORG   R14SAVE
R14SAV1  DS    AL4
R14SAV2  DS    AL4
R14SAV3  DS    AL4
R14SAV4  DS    AL4
R14SAV5  DS    AL4
R14SAV6  DS    AL4
R14SAV7  DS    AL4
R14SAV8  DS    AL4
R14SAV9  DS    AL4
R14SA10  DS    AL4
R14SA11  DS    AL4
R14SA12  DS    AL4
R14SA13  DS    AL4
R14SA14  DS    AL4
R14SA15  DS    AL4
R14SA16  DS    AL4
R14SA17  DS    AL4
R14SA18  DS    AL4
R14SA19  DS    AL4
R14SA20  DS    AL4
         ORG   R14SAVE+80
ASIDAREA DS    15AL2
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
IEECB866 CSECT
         DS    0F
@SIZDATD DC    AL1(241)
         DC    AL3(@ENDDATD-@DATD)
         DS    0D
MASTER   DC    H'1'
@CC01736 DC    C'),END'
@CC01732 EQU   @CC01736
@CC01734 DC    C') '
@CC01980 DC    C'=('
NOTASID  DC    CL4'ASID'
UERROR   DC    CL1'U'
DUMP     DC    CL4'DUMP'
SVC51ERR DC    CL8'SYSTEM'
PATCH    DC    CL150'*******IEECB866 PATCH AREA*******'
SYSIEFSD DC    CL8'SYSIEFSD'
Q10      DC    CL3'Q10'
PSA      DC    CL3'PSA'
NUC      DC    CL3'NUC'
SQA      DC    CL3'SQA'
LSQA     DC    CL4'LSQA'
RGN      DC    CL3'RGN'
LPA      DC    CL3'LPA'
TRT      DC    CL3'TRT'
CSA      DC    CL3'CSA'
SWA      DC    CL3'SWA'
SUM      DC    CL3'SUM'
NOPSA    DC    CL5'NOPSA'
NOSQA    DC    CL5'NOSQA'
NOSUM    DC    CL5'NOSUM'
UBLANK   DC    CL2'U '
JOBNAME  DC    CL8'JOBNAME='
TSONAME  DC    CL8'TSONAME='
ASID     DC    CL5'ASID='
SDATAB   DC    CL6'SDATA '
SDATAC   DC    CL6'SDATA,'
SDATAE   DC    CL7'SDATA=('
STOR     DC    CL4'STOR'
CONT     DC    CL4'CONT'
ENDC     DC    CL3'END'
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
I        EQU   @03
CMDINDEX EQU   @03
XSAPTR   EQU   @03
REG0     EQU   @00
REG1     EQU   @01
REG2     EQU   @02
REG5     EQU   @05
REG6     EQU   @06
REG10    EQU   @10
REG11    EQU   @11
REG12    EQU   @12
REG13    EQU   @13
REG14    EQU   @14
REG15    EQU   @15
REG4     EQU   @04
CVTPTR   EQU   16
CHAIN    EQU   0
CHPTR    EQU   CHAIN
CHFLG    EQU   CHAIN+4
CHSTS    EQU   CHFLG+2
CHFC     EQU   CHSTS
CHACT    EQU   CHFLG+3
CHIFY    EQU   CHACT
CHKEY    EQU   CHAIN+8
CHPARM   EQU   CHKEY
CHCLS    EQU   CHAIN+16
CHPKE    EQU   CHAIN+28
CHUCMP   EQU   CHAIN+29
CHTJID   EQU   CHAIN+30
CHASID   EQU   CHTJID
CHPROCSN EQU   CHAIN+32
CHACT1   EQU   CHPROCSN+3
CHASM    EQU   CHAIN+40
CHCIBP   EQU   CHASM+4
CHRGNSZ  EQU   CHASM+8
CHSTEP   EQU   CHASM+24
CHSWT    EQU   CHSTEP
CHSHORT  EQU   CHASM+32
UCM2EXT  EQU   0
UCM2STA  EQU   UCM2EXT+8
UCM2SFLG EQU   UCM2STA
UCMPRFX  EQU   0
UCMMCENT EQU   UCMPRFX
UCMSAVE0 EQU   UCMPRFX+4
UCMSFLGS EQU   UCMPRFX+84
UCMSFLG1 EQU   UCMSFLGS
UCMSFLG2 EQU   UCMSFLGS+1
UCMXSA   EQU   UCMPRFX+104
UCMSDS1  EQU   UCMPRFX+156
UCMPRFXP EQU   0
UCM      EQU   0
UCMDECB  EQU   UCM+12
UCMRPYI  EQU   UCM+32
UCMPXB   EQU   UCM+68
UCMMODE  EQU   UCMPXB
UCMVDATA EQU   UCM+72
UCMRSV42 EQU   UCM+300
UCMRSV51 EQU   UCM+301
UCMEIL   EQU   0
UCMRECBA EQU   UCMEIL+24
UCMEXIT  EQU   0
UCMLIST  EQU   0
UCMSTS   EQU   UCMLIST+24
UCMATR   EQU   UCMLIST+25
UCMXA    EQU   UCMLIST+26
UCMID    EQU   UCMXA
UCMAUTH  EQU   UCMLIST+40
UCMAUTHA EQU   UCMAUTH
UCMDISP  EQU   UCMLIST+42
UCMDISP1 EQU   UCMDISP
UCMDISP2 EQU   UCMDISP+1
UCMMSG   EQU   UCMLIST+60
UCMMSG1  EQU   UCMMSG
UCMDEVC  EQU   UCMLIST+63
UCMRCT   EQU   UCMLIST+68
UCMSDS5  EQU   UCMRCT
UCMFEXTA EQU   0
UCMFMGFS EQU   UCMFEXTA+8
UCMFFLG1 EQU   UCMFMGFS
UCMPEXTA EQU   0
UCMPDM1  EQU   UCMPEXTA+4
BASE     EQU   0
BACHN    EQU   BASE
@NM00008 EQU   BASE+13
BALGSTAT EQU   BASE+24
BALOG    EQU   BALGSTAT+4
BASFL    EQU   BASE+36
BARSW    EQU   BASFL
MSLOGST  EQU   BASE+46
BASPBYTE EQU   BASE+47
BAMONITR EQU   BASE+56
@NM00030 EQU   BASE+104
MSLGCLOZ EQU   BASE+108
MSCLOSSW EQU   MSLGCLOZ
MSLGWLOG EQU   BASE+112
MSWLOGSW EQU   MSLGWLOG
MSLGWTR  EQU   BASE+116
MSWTRSW  EQU   MSLGWTR
MSLGSTRT EQU   BASE+120
MSSTRTSW EQU   MSLGSTRT
MS1BASEX EQU   BASE+136
BASES01  EQU   0
MSNTAL   EQU   BASES01
MSSSB    EQU   BASES01+1
MSBTN    EQU   MSSSB
MSPFG    EQU   BASES01+2
MSECBFL  EQU   BASES01+3
MSTUS    EQU   BASES01+4
MSSSA    EQU   MSTUS
MSINLSW  EQU   MSSSA
MSREOF   EQU   MSSSA
MSNWP    EQU   MSSSA
MSFHF    EQU   BASES01+5
XSAMAP   EQU   0
XASVRB   EQU   XSAMAP
XSA      EQU   XASVRB
XAD      EQU   XSA+4
XAX      EQU   XASVRB+8
@NM00047 EQU   XASVRB+16
XAE      EQU   @NM00047
@NM00048 EQU   XASVRB+20
XAV      EQU   XASVRB+24
XAS      EQU   XASVRB+32
XAU      EQU   XASVRB+40
XAA      EQU   XASVRB+42
XASAVLOC EQU   XSAMAP+48
XASAVLOX EQU   XASAVLOC
XASAVSTD EQU   XSAMAP+64
XASAVSTR EQU   XASAVSTD
@NM00050 EQU   XSAMAP+136
XACMFLGS EQU   @NM00050
XACMFLGA EQU   XACMFLGS
XACMFLG1 EQU   XACMFLGA
XACMFLG2 EQU   XACMFLGA+1
XACMFLGB EQU   XACMFLGS+2
XAWORK   EQU   XSAMAP+152
EEXSAS01 EQU   0
EEXSAS02 EQU   0
XADUSWIT EQU   EEXSAS02
EEXSAS03 EQU   0
XASDS    EQU   EEXSAS03+2
@NM00052 EQU   EEXSAS03+4
EEXSAS04 EQU   0
XAXMASK  EQU   EEXSAS04
EEXSAS05 EQU   0
XASOPCOD EQU   EEXSAS05
XASWITCH EQU   EEXSAS05+1
XALTCHG  EQU   XASWITCH
XACOMPMS EQU   XASWITCH
XARESV   EQU   EEXSAS05+2
EEXSAS06 EQU   0
XAAVRANG EQU   EEXSAS06
XAAVRNG2 EQU   EEXSAS06+1
CVTMAP   EQU   0
CVTDAR   EQU   CVTMAP+72
CVTFLGS1 EQU   CVTDAR
CVTCUCB  EQU   CVTMAP+100
CVTDCB   EQU   CVTMAP+116
CVTIERLC EQU   CVTMAP+144
CVTMSER  EQU   CVTMAP+148
CVTOPTA  EQU   CVTMAP+182
CVTOPTB  EQU   CVTMAP+183
CVTGTF   EQU   CVTMAP+236
CVTGTFST EQU   CVTGTF
CVTGTFS  EQU   CVTGTFST
CVTSTATE EQU   CVTGTFST
CVTTMODE EQU   CVTGTFST
CVTFORM  EQU   CVTGTFST
CVTAQAVT EQU   CVTMAP+240
CVTTCMFG EQU   CVTAQAVT
CVTVOLM2 EQU   CVTMAP+244
CVTTATA  EQU   CVTVOLM2
CVTTSKS  EQU   CVTTATA
CVTVOLF2 EQU   CVTTSKS
CVTTAT   EQU   CVTTATA+1
CVTATER  EQU   CVTMAP+248
CVTEXT1  EQU   CVTMAP+252
CVTPURG  EQU   CVTMAP+260
CVTQMSG  EQU   CVTMAP+268
CVTDMSR  EQU   CVTMAP+272
CVTRSV37 EQU   CVTDMSR
CVTDMSRF EQU   CVTRSV37
CVTERPV  EQU   CVTMAP+316
CVTINTLA EQU   CVTMAP+320
CVTAPF   EQU   CVTMAP+324
CVTEXT2  EQU   CVTMAP+328
CVTHJES  EQU   CVTMAP+332
CVTPGSIA EQU   CVTMAP+348
CVTA1F1  EQU   CVTMAP+356
CVTSYSK  EQU   CVTMAP+357
CVTVOLM1 EQU   CVTMAP+380
CVTVOLF1 EQU   CVTVOLM1
CVTXTNT1 EQU   0
CVTXTNT2 EQU   0
CVTDSSV  EQU   CVTXTNT2
CVTFLGBT EQU   CVTXTNT2+5
CVTQID   EQU   CVTXTNT2+24
CVTRV400 EQU   CVTXTNT2+52
CVTRV409 EQU   CVTXTNT2+53
CVTATCVT EQU   CVTXTNT2+64
CVTRV429 EQU   CVTXTNT2+84
CVTRV438 EQU   CVTXTNT2+85
CVTRV457 EQU   CVTXTNT2+112
CVTRV466 EQU   CVTXTNT2+113
CVTFIX   EQU   0
CVTRELNO EQU   CVTFIX+252
SDUMP    EQU   0
SDUFLAG0 EQU   SDUMP
SDUSTOR  EQU   SDUFLAG0
SDUHDR   EQU   SDUFLAG0
SDUECB   EQU   SDUFLAG0
SDUASID  EQU   SDUFLAG0
SDUFLAG1 EQU   SDUMP+1
SDUNEW   EQU   SDUFLAG1
SDUASLST EQU   SDUFLAG1
SDUSDAT1 EQU   SDUMP+2
SDUALPSA EQU   SDUSDAT1
SDUNUC   EQU   SDUSDAT1
SDUSQA   EQU   SDUSDAT1
SDULSQA  EQU   SDUSDAT1
SDURGN   EQU   SDUSDAT1
SDULPA   EQU   SDUSDAT1
SDUTRT   EQU   SDUSDAT1
SDUSDAT2 EQU   SDUMP+3
SDUCSA   EQU   SDUSDAT2
SDUSWA   EQU   SDUSDAT2
SDUSMDMP EQU   SDUSDAT2
SDUNSMDP EQU   SDUSDAT2
SDUNAPSA EQU   SDUSDAT2
SDUNASQA EQU   SDUSDAT2
SDUSTORA EQU   SDUMP+8
SDUHDRAD EQU   SDUMP+12
SDUECBAD EQU   SDUMP+16
SDUMASID EQU   SDUMP+20
SDUTASID EQU   SDUMASID+2
SDUASIDP EQU   SDUMP+24
SUBITS   EQU   0
SUBYTE1  EQU   SUBITS
SUBYTE2  EQU   SUBITS+1
SUBYTE3  EQU   SUBITS+2
SUBYTE4  EQU   SUBITS+3
SUBYTE5  EQU   SUBITS+4
SU33BIT  EQU   SUBYTE5
SUBYTE6  EQU   SUBITS+5
SUBYTE7  EQU   SUBITS+6
SUBYTE8  EQU   SUBITS+7
SUBYTE9  EQU   SUBITS+8
SUBYTE10 EQU   SUBITS+9
SUBYTE11 EQU   SUBITS+10
SUBYTE12 EQU   SUBITS+11
SUBYTE13 EQU   SUBITS+12
ASVT     EQU   0
ASVTMAXU EQU   ASVT+516
ASVTFRST EQU   ASVT+524
ASVTENTY EQU   ASVT+528
FIRSTADR EQU   0
COMPARE  EQU   0
SECADR   EQU   COMPARE
HIBIT    EQU   SECADR
PUTINLIS EQU   0
STAELIST EQU   0
CSCBADDR EQU   STAELIST
BUFPTR   EQU   STAELIST+4
STAEBUF  EQU   STAELIST+8
CMDSIZE  EQU   STAEBUF
COMMAND  EQU   STAEBUF+1
REGSAVE  EQU   STAELIST+20
REG14SAV EQU   REGSAVE
REG6SAV  EQU   REGSAVE+4
REG10SAV EQU   REGSAVE+8
REG11SAV EQU   REGSAVE+12
REG12SAV EQU   REGSAVE+16
REG13SAV EQU   REGSAVE+20
UCM2PTR  EQU   0
CSCB     EQU   0
CHAINS01 EQU   CHASM
CHBUF    EQU   CHAINS01
CHTYPE   EQU   CHAINS01+124
CHTRSTAT EQU   CHAINS01+125
CHCSYSO  EQU   CHAINS01+134
UCMMCSPT EQU   UCMPRFXP
UCMBASPT EQU   CVTCUCB
UCMIECBA EQU   UCMRECBA+4
UCMDVEPT EQU   UCMMCENT
CVTS01   EQU   CVTPGSIA
CVTLPDIA EQU   CVTS01+12
CVTDIRST EQU   CVTLPDIA
CVTSLIDA EQU   CVTS01+24
CVTCTLFG EQU   CVTS01+50
CVTASVT  EQU   CVTS01+208
CVTRV210 EQU   CVTS01+424
CVTRV219 EQU   CVTS01+425
CVTRV228 EQU   CVTS01+426
CVTRV237 EQU   CVTS01+427
CVTMFRTR EQU   CVTS01+452
CVTRV262 EQU   CVTS01+468
CVTRV271 EQU   CVTS01+469
CVTRV280 EQU   CVTS01+470
CVTRV289 EQU   CVTS01+471
CVTGSDA  EQU   CVTS01+600
CVTIHASU EQU   CVTS01+696
DUMPOPTS EQU   SDUSDAT1
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
CVTRV628 EQU   CVTS01+728
CVTRV627 EQU   CVTS01+724
CVTRV626 EQU   CVTS01+720
CVTRV625 EQU   CVTS01+716
CVTRV624 EQU   CVTS01+712
CVTRV623 EQU   CVTS01+708
CVTRV622 EQU   CVTS01+704
CVTRV621 EQU   CVTS01+700
CVTSUSP  EQU   CVTS01+692
CVTT6SVC EQU   CVTS01+688
CVTCDAL  EQU   CVTS01+684
CVTTCTL  EQU   CVTS01+680
CVTRSUME EQU   CVTS01+676
CVTJTERM EQU   CVTS01+672
CVTASMRM EQU   CVTS01+668
CVTTCASP EQU   CVTS01+664
CVT0PT03 EQU   CVTS01+660
CVT0PT0E EQU   CVTS01+656
CVTRV609 EQU   CVTS01+652
CVTCGK   EQU   CVTS01+648
CVTRAC   EQU   CVTS01+644
CVTRV606 EQU   CVTS01+640
CVTRV605 EQU   CVTS01+636
CVTRV604 EQU   CVTS01+632
CVTEFF02 EQU   CVTS01+628
CVTCBBR  EQU   CVTS01+624
CVTSSCR  EQU   CVTS01+620
CVTEVENT EQU   CVTS01+616
CVTCRCA  EQU   CVTS01+612
CVTTPIO  EQU   CVTS01+608
CVTADV   EQU   CVTS01+604
CVTGSDAB EQU   CVTGSDA
CVTQV3   EQU   CVTS01+596
CVTQV2   EQU   CVTS01+592
CVTQV1   EQU   CVTS01+588
CVTRPT   EQU   CVTS01+584
CVTSSRB  EQU   CVTS01+580
CVTCSDRL EQU   CVTS01+576
CVTEXP1  EQU   CVTS01+572
CVTRMPMT EQU   CVTS01+568
CVTRMPTT EQU   CVTS01+564
CVTVPSA  EQU   CVTS01+560
CVTVSTOP EQU   CVTS01+556
CVTGTFR8 EQU   CVTS01+552
CVTQUIT  EQU   CVTS01+548
CVTVACR  EQU   CVTS01+544
CVTWTCB  EQU   CVTS01+540
CVTSTPRS EQU   CVTS01+536
CVT0PT02 EQU   CVTS01+532
CVTDARCM EQU   CVTS01+528
CVTIRECM EQU   CVTS01+524
CVTJRECM EQU   CVTS01+520
CVTVEMS0 EQU   CVTS01+516
CVTSPFRR EQU   CVTS01+512
CVTRLSTG EQU   CVTS01+508
CVT0TC0A EQU   CVTS01+504
CVTGMBR  EQU   CVTS01+500
CVTLFRM  EQU   CVTS01+496
CVTRMBR  EQU   CVTS01+492
CVTVIOP  EQU   CVTS01+488
CVTRV307 EQU   CVTS01+486
CVTRV306 EQU   CVTS01+484
CVTRV305 EQU   CVTS01+482
CVTRV304 EQU   CVTS01+480
CVTRV303 EQU   CVTS01+478
CVTRV302 EQU   CVTS01+476
CVTTRCA  EQU   CVTS01+472
CVTRV297 EQU   CVTRV289
CVTRV296 EQU   CVTRV289
CVTRV295 EQU   CVTRV289
CVTRV294 EQU   CVTRV289
CVTRV293 EQU   CVTRV289
CVTRV292 EQU   CVTRV289
CVTRV291 EQU   CVTRV289
CVTRV290 EQU   CVTRV289
CVTRV288 EQU   CVTRV280
CVTRV287 EQU   CVTRV280
CVTRV286 EQU   CVTRV280
CVTRV285 EQU   CVTRV280
CVTRV284 EQU   CVTRV280
CVTRV283 EQU   CVTRV280
CVTRV282 EQU   CVTRV280
CVTRV281 EQU   CVTRV280
CVTRV279 EQU   CVTRV271
CVTRV278 EQU   CVTRV271
CVTRV277 EQU   CVTRV271
CVTRV276 EQU   CVTRV271
CVTRV275 EQU   CVTRV271
CVTRV274 EQU   CVTRV271
CVTRV273 EQU   CVTRV271
CVTRV272 EQU   CVTRV271
CVTRV270 EQU   CVTRV262
CVTRV269 EQU   CVTRV262
CVTRV268 EQU   CVTRV262
CVTRV267 EQU   CVTRV262
CVTRV266 EQU   CVTRV262
CVTRV265 EQU   CVTRV262
CVTRV264 EQU   CVTRV262
CVTRV263 EQU   CVTRV262
CVTVFP   EQU   CVTS01+464
CVTVSI   EQU   CVTS01+460
CVTVPSIB EQU   CVTS01+456
CVTMFACT EQU   CVTMFRTR
CVTMFCTL EQU   CVTS01+448
CVTPVBP  EQU   CVTS01+444
CVTPWI   EQU   CVTS01+440
CVTRV254 EQU   CVTS01+438
CVTRV253 EQU   CVTS01+436
CVTRV252 EQU   CVTS01+434
CVTRV251 EQU   CVTS01+433
CVTRV250 EQU   CVTS01+432
CVTRV249 EQU   CVTS01+431
CVTRV248 EQU   CVTS01+430
CVTRV247 EQU   CVTS01+429
CVTRV246 EQU   CVTS01+428
CVTRV245 EQU   CVTRV237
CVTRV244 EQU   CVTRV237
CVTRV243 EQU   CVTRV237
CVTRV242 EQU   CVTRV237
CVTRV241 EQU   CVTRV237
CVTRV240 EQU   CVTRV237
CVTRV239 EQU   CVTRV237
CVTRV238 EQU   CVTRV237
CVTRV236 EQU   CVTRV228
CVTRV235 EQU   CVTRV228
CVTRV234 EQU   CVTRV228
CVTRV233 EQU   CVTRV228
CVTRV232 EQU   CVTRV228
CVTRV231 EQU   CVTRV228
CVTRV230 EQU   CVTRV228
CVTRV229 EQU   CVTRV228
CVTRV227 EQU   CVTRV219
CVTRV226 EQU   CVTRV219
CVTRV225 EQU   CVTRV219
CVTRV224 EQU   CVTRV219
CVTRV223 EQU   CVTRV219
CVTRV222 EQU   CVTRV219
CVTRV221 EQU   CVTRV219
CVTRV220 EQU   CVTRV219
CVTRV218 EQU   CVTRV210
CVTRV217 EQU   CVTRV210
CVTRV216 EQU   CVTRV210
CVTRV215 EQU   CVTRV210
CVTRV214 EQU   CVTRV210
CVTRV213 EQU   CVTRV210
CVTRV212 EQU   CVTRV210
CVTRV211 EQU   CVTRV210
CVTLCCAT EQU   CVTS01+420
CVTPCCAT EQU   CVTS01+416
CVTIPCRP EQU   CVTS01+412
CVTIPCRI EQU   CVTS01+408
CVTIPCDS EQU   CVTS01+404
CVTAIDVT EQU   CVTS01+400
CVTSSAP  EQU   CVTS01+396
CVTEHCIR EQU   CVTS01+392
CVTEHDEF EQU   CVTS01+388
CVTDAIR  EQU   CVTS01+384
CVTPERFM EQU   CVTS01+380
CVT044R2 EQU   CVTS01+376
CVTFETCH EQU   CVTS01+372
CVTRSTWD EQU   CVTS01+368
CVTSPOST EQU   CVTS01+364
CVTIOBP  EQU   CVTS01+360
CVTASMVT EQU   CVTS01+356
CVTRECRQ EQU   CVTS01+352
CVTWSAC  EQU   CVTS01+348
CVTRV149 EQU   CVTS01+344
CVTWSAL  EQU   CVTS01+340
CVTSPSA  EQU   CVTS01+336
CVTGLMN  EQU   CVTS01+332
CVTVEAC0 EQU   CVTS01+328
CVT062R1 EQU   CVTS01+324
CVTRPOST EQU   CVTS01+320
CVTDQIQE EQU   CVTS01+316
CVTCSD   EQU   CVTS01+312
CVTLKRMA EQU   CVTS01+308
CVTRSPIE EQU   CVTS01+304
CVTRENQ  EQU   CVTS01+300
CVTLQCB  EQU   CVTS01+296
CVTFQCB  EQU   CVTS01+292
CVTQCS01 EQU   CVTS01+288
CVTAPFT  EQU   CVTS01+284
CVTPARRL EQU   CVTS01+280
CVTVWAIT EQU   CVTS01+276
CVTGSPL  EQU   CVTS01+272
CVTLSMQ  EQU   CVTS01+268
CVTGSMQ  EQU   CVTS01+264
CVTEXPRO EQU   CVTS01+260
CVTOPCTP EQU   CVTS01+256
CVTSIC   EQU   CVTS01+252
CVTTPIOS EQU   CVTS01+248
CVTRTMS  EQU   CVTS01+244
CVTSDBF  EQU   CVTS01+240
CVTSCBP  EQU   CVTS01+236
CVTSDMP  EQU   CVTS01+232
CVTSV60  EQU   CVTS01+228
CVTRTMCT EQU   CVTS01+224
CVTASCBL EQU   CVTS01+220
CVTASCBH EQU   CVTS01+216
CVTGDA   EQU   CVTS01+212
CVTVVMDI EQU   CVTS01+204
CVTAQTOP EQU   CVTS01+200
CVTIOSCS EQU   CVTS01+196
CVTSDRM  EQU   CVTS01+192
CVTOPTE  EQU   CVTS01+188
CVTSTXU  EQU   CVTS01+184
CVTQUIS  EQU   CVTS01+180
CVTPARS  EQU   CVTS01+176
CVTS1EE  EQU   CVTS01+172
CVTFRAS  EQU   CVTS01+168
CVTQSAS  EQU   CVTS01+164
CVTCRAS  EQU   CVTS01+160
CVTCRMN  EQU   CVTS01+156
CVTDELCP EQU   CVTS01+152
CVTFRECL EQU   CVTS01+148
CVTGETCL EQU   CVTS01+144
CVTBLDCP EQU   CVTS01+140
CVTAUTHL EQU   CVTS01+136
CVTSCAN  EQU   CVTS01+132
CVTRV144 EQU   CVTS01+130
CVTMAXMP EQU   CVTS01+128
CVTSTCK  EQU   CVTS01+124
CVTRV139 EQU   CVTS01+123
CVTDSSAC EQU   CVTS01+122
CVTRV513 EQU   CVTS01+121
CVTIOSPL EQU   CVTS01+120
CVTPTGT  EQU   CVTS01+116
CVTCSPIE EQU   CVTS01+112
CVTSMFEX EQU   CVTS01+108
CVTOLT0A EQU   CVTS01+104
CVTSRBRT EQU   CVTS01+100
CVTPUTL  EQU   CVTS01+96
CVTASCRL EQU   CVTS01+92
CVTASCRF EQU   CVTS01+88
CVTRV326 EQU   CVTS01+84
CVTRV325 EQU   CVTS01+80
CVTRV324 EQU   CVTS01+76
CVT0VL01 EQU   CVTS01+72
CVTSHRVM EQU   CVTS01+68
CVTRV332 EQU   CVTS01+64
CVTTAS   EQU   CVTS01+60
CVTRSCN  EQU   CVTS01+56
CVTTRAC2 EQU   CVTS01+54
CVTTRACE EQU   CVTS01+52
CVTAPG   EQU   CVTS01+51
CVTSDTRC EQU   CVTCTLFG
CVTGTRCE EQU   CVTCTLFG
CVTNOMP  EQU   CVTCTLFG
CVTRSV79 EQU   CVTCTLFG
CVTDSTAT EQU   CVTCTLFG
CVTRSV78 EQU   CVTCTLFG
CVTRV333 EQU   CVTCTLFG
CVTRV323 EQU   CVTCTLFG
CVTSPVLK EQU   CVTS01+49
CVTRSV77 EQU   CVTS01+48
CVTRV331 EQU   CVTS01+44
CVTRV330 EQU   CVTS01+40
CVTRV329 EQU   CVTS01+36
CVTRV328 EQU   CVTS01+32
CVTRV322 EQU   CVTS01+28
CVTSLID  EQU   CVTSLIDA+1
CVTSYLK  EQU   CVTSLIDA
CVTRV321 EQU   CVTS01+20
CVTRV320 EQU   CVTS01+16
CVTLPDIR EQU   CVTLPDIA+1
CVTRSV69 EQU   CVTDIRST
CVTRSV68 EQU   CVTDIRST
CVTRSV67 EQU   CVTDIRST
CVTRSV66 EQU   CVTDIRST
CVTRSV65 EQU   CVTDIRST
CVTRSV64 EQU   CVTDIRST
CVTRSV63 EQU   CVTDIRST
CVTDICOM EQU   CVTDIRST
CVTPVTP  EQU   CVTS01+8
CVTLPDSR EQU   CVTS01+4
CVTGETL  EQU   CVTS01
UCMIECBP EQU   UCMIECBA+1
UCMIECBF EQU   UCMIECBA
CHLAST   EQU   CHAINS01+136
CHSPA    EQU   CHAINS01+135
CHUSERID EQU   CHCSYSO
CHJB     EQU   CHCSYSO
CHDUMP   EQU   CHCSYSO
CHQUE    EQU   CHCSYSO
CHHOLD   EQU   CHCSYSO
CHOUT    EQU   CHCSYSO
CHINN    EQU   CHCSYSO
CHALL    EQU   CHCSYSO
CHINC    EQU   CHAINS01+132
CHPEND   EQU   CHAINS01+128
CHARID   EQU   CHAINS01+127
CHCNID   EQU   CHAINS01+126
@NM00004 EQU   CHTRSTAT
CHTSL    EQU   CHTRSTAT
CHTS     EQU   CHTRSTAT
CHINITL  EQU   CHTRSTAT
CHINIT   EQU   CHTRSTAT
CHJOBSL  EQU   CHTRSTAT
CHJOBS   EQU   CHTRSTAT
CHDEF    EQU   CHTYPE
CHHIAR   EQU   CHTYPE
CHARSV29 EQU   CHTYPE
CHARSV28 EQU   CHTYPE
CHARSV27 EQU   CHTYPE
CHARSV26 EQU   CHTYPE
CHARSV25 EQU   CHTYPE
CHDSTAT  EQU   CHTYPE
SECAD    EQU   SECADR+1
ASVTEND  EQU   ASVT+528
ASVTAVAL EQU   ASVTENTY
ASVTAVAI EQU   ASVTFRST
ASVTRS00 EQU   ASVT+520
ASVTASVT EQU   ASVT+512
ASVTBEGN EQU   ASVT+512
@NM00059 EQU   ASVT
SURV104  EQU   SUBITS+13
SURV103  EQU   SUBYTE13
SURV102  EQU   SUBYTE13
SURV101  EQU   SUBYTE13
SU100BT  EQU   SUBYTE13
SU99BIT  EQU   SUBYTE13
SU98BIT  EQU   SUBYTE13
SU97BIT  EQU   SUBYTE13
SU96BIT  EQU   SUBYTE13
SU95BIT  EQU   SUBYTE12
SU94BIT  EQU   SUBYTE12
SU93BIT  EQU   SUBYTE12
SU92BIT  EQU   SUBYTE12
SU91BIT  EQU   SUBYTE12
SU90BIT  EQU   SUBYTE12
SU89BIT  EQU   SUBYTE12
SU88BIT  EQU   SUBYTE12
SU87BIT  EQU   SUBYTE11
SU86BIT  EQU   SUBYTE11
SU85BIT  EQU   SUBYTE11
SU84BIT  EQU   SUBYTE11
SU83BIT  EQU   SUBYTE11
SU82BIT  EQU   SUBYTE11
SU81BIT  EQU   SUBYTE11
SU80BIT  EQU   SUBYTE11
SU79BIT  EQU   SUBYTE10
SU78BIT  EQU   SUBYTE10
SU77BIT  EQU   SUBYTE10
SU76BIT  EQU   SUBYTE10
SU75BIT  EQU   SUBYTE10
SU74BIT  EQU   SUBYTE10
SU73BIT  EQU   SUBYTE10
SU72BIT  EQU   SUBYTE10
SU71BIT  EQU   SUBYTE9
SU70BIT  EQU   SUBYTE9
SU69BIT  EQU   SUBYTE9
SU68BIT  EQU   SUBYTE9
SU67BIT  EQU   SUBYTE9
SU66BIT  EQU   SUBYTE9
SU65BIT  EQU   SUBYTE9
SU64BIT  EQU   SUBYTE9
SU63BIT  EQU   SUBYTE8
SU62BIT  EQU   SUBYTE8
SU61BIT  EQU   SUBYTE8
SU60BIT  EQU   SUBYTE8
SU59BIT  EQU   SUBYTE8
SU58BIT  EQU   SUBYTE8
SU57BIT  EQU   SUBYTE8
SU56BIT  EQU   SUBYTE8
SU55BIT  EQU   SUBYTE7
SU54BIT  EQU   SUBYTE7
SU53BIT  EQU   SUBYTE7
SU52BIT  EQU   SUBYTE7
SU51BIT  EQU   SUBYTE7
SU50BIT  EQU   SUBYTE7
SU49BIT  EQU   SUBYTE7
SU48BIT  EQU   SUBYTE7
SU47BIT  EQU   SUBYTE6
SU46BIT  EQU   SUBYTE6
SU45BIT  EQU   SUBYTE6
SU44BIT  EQU   SUBYTE6
SU43BIT  EQU   SUBYTE6
SU42BIT  EQU   SUBYTE6
SU41BIT  EQU   SUBYTE6
SU40BIT  EQU   SUBYTE6
SU39BIT  EQU   SUBYTE5
SU38BIT  EQU   SUBYTE5
SU37BIT  EQU   SUBYTE5
SU36BIT  EQU   SUBYTE5
SU35BIT  EQU   SUBYTE5
SU34BIT  EQU   SUBYTE5
SU32BIT  EQU   SUBYTE5
SU31BIT  EQU   SUBYTE4
SU30BIT  EQU   SUBYTE4
SU29BIT  EQU   SUBYTE4
SU28BIT  EQU   SUBYTE4
SU27BIT  EQU   SUBYTE4
SU26BIT  EQU   SUBYTE4
SU25BIT  EQU   SUBYTE4
SU24BIT  EQU   SUBYTE4
SU23BIT  EQU   SUBYTE3
SU22BIT  EQU   SUBYTE3
SU21BIT  EQU   SUBYTE3
SU20BIT  EQU   SUBYTE3
SU19BIT  EQU   SUBYTE3
SU18BIT  EQU   SUBYTE3
SU17BIT  EQU   SUBYTE3
SU16BIT  EQU   SUBYTE3
SU15BIT  EQU   SUBYTE2
SU14BIT  EQU   SUBYTE2
SU13BIT  EQU   SUBYTE2
SU12BIT  EQU   SUBYTE2
SU11BIT  EQU   SUBYTE2
SU10BIT  EQU   SUBYTE2
SU9BIT   EQU   SUBYTE2
SU8BIT   EQU   SUBYTE2
SU7BIT   EQU   SUBYTE1
SU6BIT   EQU   SUBYTE1
SU5BIT   EQU   SUBYTE1
SU4BIT   EQU   SUBYTE1
SU3BIT   EQU   SUBYTE1
SU2BIT   EQU   SUBYTE1
SU1BIT   EQU   SUBYTE1
SU0BIT   EQU   SUBYTE1
SDUSYSMC EQU   SDUMP+36
SDUSYSMS EQU   SDUMP+32
SDUSUMLP EQU   SDUMP+28
SDUCASID EQU   SDUMASID
SDUDCBAD EQU   SDUMP+4
@NM00058 EQU   SDUSDAT2
SDUPSA   EQU   SDUSDAT1
@NM00057 EQU   SDUFLAG1
SDUSLIP  EQU   SDUFLAG1
SDUSULST EQU   SDUFLAG1
SDUABEND EQU   SDUFLAG1
DUMPTYPE EQU   SDUFLAG1
SDUBRANH EQU   SDUFLAG0
SDUQUIET EQU   SDUFLAG0
SDUBUF   EQU   SDUFLAG0
SDUDCB   EQU   SDUFLAG0
CVTLEVL  EQU   CVTRELNO+2
CVTNUMB  EQU   CVTRELNO
CVTMDL   EQU   CVTFIX+250
@NM00056 EQU   CVTFIX+248
@NM00055 EQU   CVTFIX
CVTRV482 EQU   CVTXTNT2+128
CVTRV481 EQU   CVTXTNT2+124
CVTRV480 EQU   CVTXTNT2+120
CVTRV479 EQU   CVTXTNT2+118
CVTRV478 EQU   CVTXTNT2+117
CVTRV477 EQU   CVTXTNT2+116
CVTRV476 EQU   CVTXTNT2+115
CVTRV475 EQU   CVTXTNT2+114
CVTRV474 EQU   CVTRV466
CVTRV473 EQU   CVTRV466
CVTRV472 EQU   CVTRV466
CVTRV471 EQU   CVTRV466
CVTRV470 EQU   CVTRV466
CVTRV469 EQU   CVTRV466
CVTRV468 EQU   CVTRV466
CVTRV467 EQU   CVTRV466
CVTRV465 EQU   CVTRV457
CVTRV464 EQU   CVTRV457
CVTRV463 EQU   CVTRV457
CVTRV462 EQU   CVTRV457
CVTRV461 EQU   CVTRV457
CVTRV460 EQU   CVTRV457
CVTRV459 EQU   CVTRV457
CVTRV458 EQU   CVTRV457
CVTRV456 EQU   CVTXTNT2+108
CVTRV455 EQU   CVTXTNT2+104
CVTRV454 EQU   CVTXTNT2+100
CVTRV453 EQU   CVTXTNT2+96
CVTRV452 EQU   CVTXTNT2+94
CVTRV451 EQU   CVTXTNT2+92
CVTRV450 EQU   CVTXTNT2+90
CVTRV449 EQU   CVTXTNT2+88
CVTRV448 EQU   CVTXTNT2+87
CVTRV447 EQU   CVTXTNT2+86
CVTRV446 EQU   CVTRV438
CVTRV445 EQU   CVTRV438
CVTRV444 EQU   CVTRV438
CVTRV443 EQU   CVTRV438
CVTRV442 EQU   CVTRV438
CVTRV441 EQU   CVTRV438
CVTRV440 EQU   CVTRV438
CVTRV439 EQU   CVTRV438
CVTRV437 EQU   CVTRV429
CVTRV436 EQU   CVTRV429
CVTRV435 EQU   CVTRV429
CVTRV434 EQU   CVTRV429
CVTRV433 EQU   CVTRV429
CVTRV432 EQU   CVTRV429
CVTRV431 EQU   CVTRV429
CVTRV430 EQU   CVTRV429
CVTRV428 EQU   CVTXTNT2+80
CVTRV427 EQU   CVTXTNT2+76
CVTRV426 EQU   CVTXTNT2+72
CVTRV425 EQU   CVTXTNT2+68
CVTATACT EQU   CVTATCVT
CVTRV423 EQU   CVTXTNT2+62
CVTRV422 EQU   CVTXTNT2+60
CVTRV421 EQU   CVTXTNT2+58
CVTRV420 EQU   CVTXTNT2+56
CVTRV419 EQU   CVTXTNT2+55
CVTRV418 EQU   CVTXTNT2+54
CVTRV417 EQU   CVTRV409
CVTRV416 EQU   CVTRV409
CVTRV415 EQU   CVTRV409
CVTRV414 EQU   CVTRV409
CVTRV413 EQU   CVTRV409
CVTRV412 EQU   CVTRV409
CVTRV411 EQU   CVTRV409
CVTRV410 EQU   CVTRV409
CVTRV408 EQU   CVTRV400
CVTRV407 EQU   CVTRV400
CVTRV406 EQU   CVTRV400
CVTRV405 EQU   CVTRV400
CVTRV404 EQU   CVTRV400
CVTRV403 EQU   CVTRV400
CVTRV402 EQU   CVTRV400
CVTRV401 EQU   CVTRV400
CVTICB   EQU   CVTXTNT2+48
CVTSKTA  EQU   CVTXTNT2+44
CVTRSV99 EQU   CVTXTNT2+40
CVTRSV98 EQU   CVTXTNT2+36
CVTRSV97 EQU   CVTXTNT2+34
CVTRSV96 EQU   CVTXTNT2+32
CVTOLTEP EQU   CVTXTNT2+28
CVTQIDA  EQU   CVTQID+1
CVTRSV95 EQU   CVTQID
CVTRSV94 EQU   CVTXTNT2+20
CVTRSV93 EQU   CVTXTNT2+16
CVTRSV92 EQU   CVTXTNT2+12
CVTDEBVR EQU   CVTXTNT2+8
CVTRSV91 EQU   CVTXTNT2+6
CVTRSV9H EQU   CVTFLGBT
CVTRSV9G EQU   CVTFLGBT
CVTRSV9F EQU   CVTFLGBT
CVTRSV9E EQU   CVTFLGBT
CVTRSV9D EQU   CVTFLGBT
CVTBAH   EQU   CVTFLGBT
CVTVME   EQU   CVTFLGBT
CVTNPE   EQU   CVTFLGBT
CVTNUCLS EQU   CVTXTNT2+4
CVTDSSVA EQU   CVTDSSV+1
CVTRSV89 EQU   CVTDSSV
CVTRSV88 EQU   CVTXTNT1+8
CVTRSV87 EQU   CVTXTNT1+4
CVTFACHN EQU   CVTXTNT1
CVTRV488 EQU   CVTMAP+412
CVTRV487 EQU   CVTMAP+408
CVTRV486 EQU   CVTMAP+404
CVTRV485 EQU   CVTMAP+400
CVTACTAP EQU   CVTMAP+396
CVTAUTH  EQU   CVTMAP+392
CVTRV490 EQU   CVTMAP+388
CVTRSV61 EQU   CVTMAP+384
CVTVOLT1 EQU   CVTVOLM1+1
CVTVOLI1 EQU   CVTVOLF1
CVTSTOA  EQU   CVTMAP+376
CVTRSV58 EQU   CVTMAP+374
CVTRSV57 EQU   CVTMAP+372
CVTDDCE  EQU   CVTMAP+368
CVTPNWFR EQU   CVTMAP+364
CVTSMF   EQU   CVTMAP+360
CVTSULK  EQU   CVTMAP+358
CVTSLKO  EQU   CVTSYSK
CVTSLKP  EQU   CVTSYSK
CVTSLKQ  EQU   CVTSYSK
CVTSLKR  EQU   CVTSYSK
CVTRSV56 EQU   CVTSYSK
CVTRSV55 EQU   CVTSYSK
CVTRSV54 EQU   CVTSYSK
CVTRSV53 EQU   CVTSYSK
CVTRSV52 EQU   CVTA1F1
CVTRSV51 EQU   CVTA1F1
CVTRSV50 EQU   CVTA1F1
CVTRSV49 EQU   CVTA1F1
CVTRSV48 EQU   CVTA1F1
CVTRSV47 EQU   CVTA1F1
CVTSRSW  EQU   CVTA1F1
CVTPFSW  EQU   CVTA1F1
CVTPCVT  EQU   CVTMAP+352
CVTRSV46 EQU   CVTMAP+344
CVTRSV45 EQU   CVTMAP+340
CVTRSV44 EQU   CVTMAP+338
CVTRSV43 EQU   CVTMAP+336
CVTHJESA EQU   CVTHJES+1
CVTRSV42 EQU   CVTHJES
CVTEXT2A EQU   CVTEXT2+1
CVTRSV41 EQU   CVTEXT2
CVTAPFA  EQU   CVTAPF+1
CVTRSV40 EQU   CVTAPF
CVTRV518 EQU   CVTINTLA
CVTRV517 EQU   CVTERPV
CVTEORM  EQU   CVTMAP+312
CVTMCHPR EQU   CVTMAP+308
CVTTZ    EQU   CVTMAP+304
CVTJEPS  EQU   CVTMAP+300
CVTJESCT EQU   CVTMAP+296
CVTMODE  EQU   CVTMAP+292
CVTPTRV  EQU   CVTMAP+288
CVTREAL  EQU   CVTMAP+284
CVTRSV39 EQU   CVTMAP+280
CVTRSV38 EQU   CVTMAP+276
CVTDMSRA EQU   CVTDMSR+1
CVTRV634 EQU   CVTDMSRF
CVTRV633 EQU   CVTDMSRF
CVTRV632 EQU   CVTDMSRF
CVTRV631 EQU   CVTDMSRF
CVTRV630 EQU   CVTDMSRF
CVTRV629 EQU   CVTDMSRF
CVTUDUMP EQU   CVTDMSRF
CVTSDUMP EQU   CVTDMSRF
CVTQMSGA EQU   CVTQMSG+1
CVTRSV36 EQU   CVTQMSG
CVTAMFF  EQU   CVTMAP+264
CVTPURGA EQU   CVTPURG+1
CVTRSV35 EQU   CVTPURG
CVTCBSP  EQU   CVTMAP+256
CVTATERA EQU   CVTATER+1
CVTSYST  EQU   CVTATER
CVTVOLT2 EQU   CVTTAT
CVTVOLI2 EQU   CVTVOLF2
CVTAQAVB EQU   CVTAQAVT+1
CVTRSV34 EQU   CVTTCMFG
CVTRSV33 EQU   CVTTCMFG
CVTRSV32 EQU   CVTTCMFG
CVTRSV31 EQU   CVTTCMFG
CVTRSV30 EQU   CVTTCMFG
CVTRSV29 EQU   CVTTCMFG
CVTLDEV  EQU   CVTTCMFG
CVTTCRDY EQU   CVTTCMFG
CVTGTFA  EQU   CVTGTF+1
CVTRSV27 EQU   CVTGTFST
CVTRNIO  EQU   CVTGTFST
CVTUSR   EQU   CVTGTFST
CVTRV318 EQU   CVTFORM
CVTRV317 EQU   CVTTMODE
CVTRV316 EQU   CVTSTATE
CVTRV315 EQU   CVTGTFS
CVTGTFAV EQU   CVTGTFS
CVT0SCR1 EQU   CVTMAP+232
CVTRV515 EQU   CVTMAP+228
CVTRMS   EQU   CVTMAP+224
CVTPATCH EQU   CVTMAP+220
CVTTSCE  EQU   CVTMAP+216
CVTLNKSC EQU   CVTMAP+214
CVTQABST EQU   CVTMAP+212
CVTMDLDS EQU   CVTMAP+208
CVTUSER  EQU   CVTMAP+204
CVTABEND EQU   CVTMAP+200
CVTSMCA  EQU   CVTMAP+196
CVTRSV18 EQU   CVTMAP+192
CVTQLPAQ EQU   CVTMAP+188
CVTQCDSR EQU   CVTMAP+184
CVTRSV17 EQU   CVTOPTB
CVTVS1A  EQU   CVTOPTB
CVTFP    EQU   CVTOPTB
CVTAPTHR EQU   CVTOPTB
CVTNLOG  EQU   CVTOPTB
CVTTOD   EQU   CVTOPTB
CVTCTIMS EQU   CVTOPTB
CVTPROT  EQU   CVTOPTB
CVTXPFP  EQU   CVTOPTA
CVTASCII EQU   CVTOPTA
CVTRSV13 EQU   CVTOPTA
CVTRSV12 EQU   CVTOPTA
CVTNIP   EQU   CVTOPTA
CVTDDR   EQU   CVTOPTA
CVTAPR   EQU   CVTOPTA
CVTCCH   EQU   CVTOPTA
CVTSNCTR EQU   CVTMAP+180
CVTQMWR  EQU   CVTMAP+176
CVTQOCR  EQU   CVTMAP+172
CVT1EF00 EQU   CVTMAP+168
CVTMZ00  EQU   CVTMAP+164
CVTHEAD  EQU   CVTMAP+160
CVTRSV11 EQU   CVTMAP+156
CVT0PT01 EQU   CVTMAP+152
CVTRV516 EQU   CVTIERLC
CVTILCH  EQU   CVTMAP+140
CVT0DS   EQU   CVTMAP+136
CVTFBOSV EQU   CVTMAP+132
CVTNUCB  EQU   CVTMAP+128
CVTIXAVL EQU   CVTMAP+124
CVTIOQET EQU   CVTMAP+120
CVTDCBA  EQU   CVTMAP+117
CVTMVS2  EQU   CVTDCB
CVT6DAT  EQU   CVTDCB
CVT4MPS  EQU   CVTDCB
CVTRSV09 EQU   CVTDCB
CVT4MS1  EQU   CVTDCB
CVT2SPS  EQU   CVTDCB
CVT1SSS  EQU   CVTDCB
CVTRSV08 EQU   CVTDCB
CVTSTB   EQU   CVTMAP+112
CVTQTD00 EQU   CVTMAP+108
CVTQTE00 EQU   CVTMAP+104
CVTSJQ   EQU   CVTMAP+96
CVTPBLDL EQU   CVTMAP+92
CVTTPC   EQU   CVTMAP+88
CVTSVDCB EQU   CVTMAP+84
CVTBRET  EQU   CVTMAP+82
CVTEXIT  EQU   CVTMAP+80
CVT0FN00 EQU   CVTMAP+76
CVTDARA  EQU   CVTDAR+1
CVTRSV07 EQU   CVTFLGS1
CVTRSV06 EQU   CVTFLGS1
CVTRSV05 EQU   CVTFLGS1
CVTRSV04 EQU   CVTFLGS1
CVTRSV03 EQU   CVTFLGS1
CVTRSV02 EQU   CVTFLGS1
CVTRSV01 EQU   CVTFLGS1
CVTDMPLK EQU   CVTFLGS1
CVTXITP  EQU   CVTMAP+68
CVTZDTAB EQU   CVTMAP+64
CVTMSLT  EQU   CVTMAP+60
CVTDATE  EQU   CVTMAP+56
CVTBTERM EQU   CVTMAP+52
CVTSYSAD EQU   CVTMAP+48
CVTXTLER EQU   CVTMAP+44
CVTILK2  EQU   CVTMAP+40
CVTILK1  EQU   CVTMAP+36
CVTPRLTV EQU   CVTMAP+32
CVTPCNVT EQU   CVTMAP+28
CVT0VL00 EQU   CVTMAP+24
CVTXAPG  EQU   CVTMAP+20
CVTBUF   EQU   CVTMAP+16
CVTJOB   EQU   CVTMAP+12
CVTLINK  EQU   CVTMAP+8
CVT0EF00 EQU   CVTMAP+4
CVTTCBP  EQU   CVTMAP
CVT      EQU   CVTMAP
XAARNG16 EQU   XAAVRNG2
XAARNG15 EQU   XAAVRNG2
XAARNG14 EQU   XAAVRNG2
XAARNG13 EQU   XAAVRNG2
XAARNG12 EQU   XAAVRNG2
XAARNG11 EQU   XAAVRNG2
XAARNG10 EQU   XAAVRNG2
XAARNG9  EQU   XAAVRNG2
XAARNG8  EQU   XAAVRANG
XAARNG7  EQU   XAAVRANG
XAARNG6  EQU   XAAVRANG
XAARNG5  EQU   XAAVRANG
XAARNG4  EQU   XAAVRANG
XAARNG3  EQU   XAAVRANG
XAARNG2  EQU   XAAVRANG
XAARNG1  EQU   XAAVRANG
XARTCODE EQU   EEXSAS05+6
XACMDATH EQU   EEXSAS05+4
XALTPTR  EQU   EEXSAS05+3
XACRT2   EQU   XARESV
XACENDCK EQU   XARESV
XARES1   EQU   XASWITCH
XASMF44  EQU   XASWITCH
XASMF42  EQU   XASWITCH
XAHRDREQ EQU   XASWITCH
XASTHDCP EQU   XACOMPMS
XAINHDCP EQU   XALTCHG
XAHRDCMD EQU   XASWITCH
XAROUT   EQU   XASWITCH
XALTCON  EQU   XASOPCOD
XACMD    EQU   XASOPCOD
XALTCOM  EQU   XASOPCOD
XARESB   EQU   XASOPCOD
XAOFF    EQU   XASOPCOD
XAON     EQU   XASOPCOD
XARESA   EQU   XASOPCOD
XACON    EQU   XASOPCOD
XAXSACB  EQU   EEXSAS04+4
XAXUTME  EQU   EEXSAS04+2
XAXFREE  EQU   EEXSAS04+1
@NM00054 EQU   XAXMASK
XAXTSL   EQU   XAXMASK
XAXTS    EQU   XAXMASK
@NM00053 EQU   XAXMASK
XAXJOBSL EQU   XAXMASK
XAXJOBS  EQU   XAXMASK
XASOPTR  EQU   @NM00052+1
XASTSAVE EQU   @NM00052
XASPLS3  EQU   EEXSAS03+3
XASSDS8  EQU   XASDS
XASSDS7  EQU   XASDS
XASSDS6  EQU   XASDS
XASSDS5  EQU   XASDS
XASSDS4  EQU   XASDS
XASSDS3  EQU   XASDS
XASSDS2  EQU   XASDS
XASSDS1  EQU   XASDS
XASDID   EQU   EEXSAS03+1
XASCID   EQU   EEXSAS03
XACAHOLD EQU   EEXSAS02+2
XADRES1  EQU   EEXSAS02+1
XAUBLANK EQU   XADUSWIT
XAOUNIT  EQU   XADUSWIT
XAIOCOMP EQU   XADUSWIT
XARES3   EQU   XADUSWIT
XAUDVC   EQU   XADUSWIT
XARES2   EQU   XADUSWIT
XAIPAREN EQU   XADUSWIT
XAXPAREN EQU   XADUSWIT
@NM00051 EQU   EEXSAS01+44
XAT      EQU   EEXSAS01+20
XAF      EQU   EEXSAS01+12
XAI      EQU   EEXSAS01+4
XAH      EQU   EEXSAS01
XAWORKH  EQU   XAWORK+28
XAWORKG  EQU   XAWORK+24
XAWORKF  EQU   XAWORK+20
XAWORKE  EQU   XAWORK+16
XAWORKD  EQU   XAWORK+12
XAWORKC  EQU   XAWORK+8
XAWORKB  EQU   XAWORK+4
XAWORKA  EQU   XAWORK
XARESRZ  EQU   @NM00050+12
XARESRY  EQU   @NM00050+8
XARESRX  EQU   @NM00050+4
XACMFLG4 EQU   XACMFLGB+1
XACMFLG3 EQU   XACMFLGB
XACMF28  EQU   XACMFLG2
XACMF27  EQU   XACMFLG2
XACMF26  EQU   XACMFLG2
XACMF25  EQU   XACMFLG2
XACMF24  EQU   XACMFLG2
XACMF23  EQU   XACMFLG2
XACMF22  EQU   XACMFLG2
XACMF21  EQU   XACMFLG2
XACMF18  EQU   XACMFLG1
XACMF17  EQU   XACMFLG1
XACMF16  EQU   XACMFLG1
XACMF15  EQU   XACMFLG1
XACMF14  EQU   XACMFLG1
XACMF13  EQU   XACMFLG1
XACMF12  EQU   XACMFLG1
XACMF11  EQU   XACMFLG1
XASAVSDR EQU   XASAVSTR+68
XASAVSDQ EQU   XASAVSTR+64
XASAVSDP EQU   XASAVSTR+60
XASAVSDO EQU   XASAVSTR+56
XASAVSDN EQU   XASAVSTR+52
XASAVSDM EQU   XASAVSTR+48
XASAVSDL EQU   XASAVSTR+44
XASAVSDK EQU   XASAVSTR+40
XASAVSDJ EQU   XASAVSTR+36
XASAVSDI EQU   XASAVSTR+32
XASAVSDH EQU   XASAVSTR+28
XASAVSDG EQU   XASAVSTR+24
XASAVSDF EQU   XASAVSTR+20
XASAVSDE EQU   XASAVSTR+16
XASAVSDD EQU   XASAVSTR+12
XASAVSDC EQU   XASAVSTR+8
XASAVSDB EQU   XASAVSTR+4
XASAVSDA EQU   XASAVSTR
XASAVLC4 EQU   XASAVLOX+12
XASAVLC3 EQU   XASAVLOX+8
XASAVLC2 EQU   XASAVLOX+4
XASAVLC1 EQU   XASAVLOX
XAK      EQU   XASVRB+44
@NM00049 EQU   XASVRB+41
XAL      EQU   @NM00048+1
XAN      EQU   @NM00048
XAR      EQU   @NM00047+1
XAP      EQU   XSA
MSSPARE  EQU   BASES01+48
MSUCBAL  EQU   BASES01+44
MSUCBPR  EQU   BASES01+40
MSBOBECB EQU   BASES01+36
MSSJQ    EQU   BASES01+32
MSECB    EQU   BASES01+28
MSPBP    EQU   BASES01+24
MSERM    EQU   BASES01+22
MSPASS   EQU   BASES01+14
MSVRB    EQU   BASES01+6
MSQHR    EQU   MSFHF
@NM00046 EQU   MSFHF
MSPSDT   EQU   MSFHF
MSREPLYB EQU   MSFHF
MSFAX    EQU   MSFHF
MSTTT    EQU   MSFHF
MSCSD    EQU   MSFHF
MSNMF    EQU   MSFHF
MSJNF    EQU   MSSSA
MSYOUT   EQU   MSNWP
MSNRP    EQU   MSSSA
MSSRDR   EQU   MSREOF
MSWRLOG  EQU   MSSSA
MSNUPSW  EQU   MSSSA
MSWRPEN  EQU   MSSSA
MSSSSIPL EQU   MSINLSW
MSSUM    EQU   MSECBFL
MSMCR    EQU   MSECBFL
MSYSOUT  EQU   MSECBFL
MSYSIN   EQU   MSECBFL
MSATTN   EQU   MSECBFL
MSWTL    EQU   MSECBFL
MSWTO    EQU   MSECBFL
MSEXT    EQU   MSECBFL
MSCCS    EQU   MSPFG
MSBSP    EQU   MSPFG
MSSYT    EQU   MSPFG
MSSYN    EQU   MSPFG
MSICR    EQU   MSPFG
MSCMC    EQU   MSPFG
MSPNB    EQU   MSPFG
MSDATE   EQU   MSPFG
@NM00045 EQU   MSBTN
MSTN     EQU   MSBTN
@NM00044 EQU   MSBTN
@NM00043 EQU   MSBTN
MSSO     EQU   MSBTN
MSROLFLG EQU   MSBTN
MSCANFLG EQU   MSBTN
MSCONFLG EQU   MSBTN
MSPNIP   EQU   MSNTAL
MSQNIP   EQU   MSNTAL
MSCURE34 EQU   MSNTAL
@NM00042 EQU   MSNTAL
@NM00041 EQU   MSNTAL
@NM00040 EQU   MSNTAL
@NM00039 EQU   MSNTAL
MSNIP    EQU   MSNTAL
@NM00038 EQU   MS1BASEX+40
@NM00037 EQU   MS1BASEX+20
@NM00036 EQU   MS1BASEX
@NM00035 EQU   BASE+128
MSLGJSCB EQU   BASE+124
@NM00034 EQU   MSSTRTSW
MSSTRTP  EQU   MSSTRTSW
MSSTRTW  EQU   MSSTRTSW
@NM00033 EQU   MSWTRSW
MSWTRP   EQU   MSWTRSW
MSWTRW   EQU   MSWTRSW
@NM00032 EQU   MSWLOGSW
MSWLOGP  EQU   MSWLOGSW
MSWLOGW  EQU   MSWLOGSW
@NM00031 EQU   MSCLOSSW
MSCLOSP  EQU   MSCLOSSW
MSCLOSW  EQU   MSCLOSSW
MSLOGLMT EQU   @NM00030+1
MSLOGCLS EQU   @NM00030
BAASCB   EQU   BASE+100
MSSMFPRM EQU   BASE+96
MSCOMMND EQU   BASE+92
BASP12   EQU   BASE+90
BASTCNT  EQU   BASE+88
BASESCT  EQU   BASE+86
BAJNCNT  EQU   BASE+84
BASUBECB EQU   BASE+80
BALOGCOM EQU   BASE+76
BADACNT  EQU   BASE+74
BATACNT  EQU   BASE+72
BAJBNR   EQU   BASE+64
BASP11   EQU   BASE+62
BALCCNT  EQU   BASE+61
BADUMPID EQU   BASE+60
BABCMAX  EQU   BASE+58
BAMONTR2 EQU   BASE+57
@NM00029 EQU   BAMONITR
BAMACTVE EQU   BAMONITR
@NM00028 EQU   BAMONITR
@NM00027 EQU   BAMONITR
@NM00026 EQU   BAMONITR
@NM00025 EQU   BAMONITR
BASPACE  EQU   BAMONITR
BADSN    EQU   BAMONITR
BADSO    EQU   BASE+52
BALOGECB EQU   BASE+48
@NM00024 EQU   BASPBYTE
@NM00023 EQU   BASPBYTE
@NM00022 EQU   BASPBYTE
@NM00021 EQU   BASPBYTE
@NM00020 EQU   BASPBYTE
BAMASCH  EQU   BASPBYTE
BATRACE  EQU   BASPBYTE
BAMSSTAR EQU   BASPBYTE
@NM00019 EQU   MSLOGST
@NM00018 EQU   MSLOGST
MSLOGSTA EQU   MSLOGST
MSLOGIPL EQU   MSLOGST
MSLOGDAR EQU   MSLOGST
MSLOGCOM EQU   MSLOGST
MSLOGTHD EQU   MSLOGST
MSLOGENQ EQU   MSLOGST
BAMIPAR2 EQU   BASE+44
BAMINPAR EQU   BASE+42
BAPKES   EQU   BASE+40
BAICTR   EQU   BASE+38
@NM00017 EQU   BASE+37
BADSET   EQU   BARSW
BANOSET  EQU   BARSW
BAMIDNT  EQU   BARSW
BAHR     EQU   BARSW
BAVU     EQU   BARSW
BAINTSET EQU   BARSW
MSTODWTO EQU   BARSW
BAIN     EQU   BARSW
BACV     EQU   BASE+32
@NM00016 EQU   BALOG
@NM00015 EQU   BALOG
@NM00014 EQU   BALOG
@NM00013 EQU   BALOG
@NM00012 EQU   BALOG
@NM00011 EQU   BALOG
@NM00010 EQU   BALOG
BALOGINT EQU   BALOG
MSLOGSVC EQU   BALGSTAT
BAPRC    EQU   BASE+20
BAQ      EQU   BASE+16
BAIPLCC  EQU   @NM00008+2
@NM00009 EQU   @NM00008
BAIPL    EQU   BASE+12
BALAD    EQU   BASE+8
BATRM    EQU   BASE+4
UCMPRSV2 EQU   UCMPEXTA+20
UCMPRSV1 EQU   UCMPDM1+8
UCMPNMCC EQU   UCMPDM1+4
UCMPWQE  EQU   UCMPDM1
UCMPUCMP EQU   UCMPEXTA
UCMFRSV3 EQU   UCMFEXTA+20
UCMF80WQ EQU   UCMFEXTA+18
UCMF60WQ EQU   UCMFEXTA+16
UCMFRSV2 EQU   UCMFMGFS+4
UCMFRSV1 EQU   UCMFMGFS+2
UCMFFLG2 EQU   UCMFMGFS+1
UCMFBR07 EQU   UCMFFLG1
UCMFBR06 EQU   UCMFFLG1
UCMFBR05 EQU   UCMFFLG1
UCMFBR04 EQU   UCMFFLG1
UCMFBR03 EQU   UCMFFLG1
UCMFMSGN EQU   UCMFFLG1
UCMFMSGA EQU   UCMFFLG1
UCMFMSGE EQU   UCMFFLG1
UCMFPPTR EQU   UCMFEXTA+4
UCMFUCMF EQU   UCMFEXTA
UCMRCTA  EQU   UCMRCT+1
UCMRSV31 EQU   UCMSDS5
UCMSDS5G EQU   UCMSDS5
UCMSDS5F EQU   UCMSDS5
UCMRSV30 EQU   UCMSDS5
UCMRSV29 EQU   UCMSDS5
UCMSDS5C EQU   UCMSDS5
UCMSDS5B EQU   UCMSDS5
UCMSDS5A EQU   UCMSDS5
UCMMLAST EQU   UCMLIST+64
UCMVHRSN EQU   UCMDEVC
UCMDEVG  EQU   UCMDEVC
UCMDEVF  EQU   UCMDEVC
UCMDEVE  EQU   UCMDEVC
UCMDEVD  EQU   UCMDEVC
UCMDEVCC EQU   UCMDEVC
UCMDEVB  EQU   UCMDEVC
UCMDEVA  EQU   UCMDEVC
UCMXOR   EQU   UCMLIST+62
UCMMSG2  EQU   UCMMSG+1
UCMRSV27 EQU   UCMMSG1
UCMRSV26 EQU   UCMMSG1
UCMMSGF  EQU   UCMMSG1
UCMMSGE  EQU   UCMMSG1
UCMMSGD  EQU   UCMMSG1
UCMMSGC  EQU   UCMMSG1
UCMMSGB  EQU   UCMMSG1
UCMMSGA  EQU   UCMMSG1
UCMCOMPC EQU   UCMLIST+56
UCMWLAST EQU   UCMLIST+52
UCMOAOEN EQU   UCMLIST+48
UCMALTEN EQU   UCMLIST+44
UCMRV007 EQU   UCMDISP2
UCMRV006 EQU   UCMDISP2
UCMRV005 EQU   UCMDISP2
UCMRV004 EQU   UCMDISP2
UCMRV003 EQU   UCMDISP2
UCMDISPK EQU   UCMDISP2
UCMDISPJ EQU   UCMDISP2
UCMDISPI EQU   UCMDISP2
UCMDISPH EQU   UCMDISP1
UCMDISPG EQU   UCMDISP1
UCMDISPF EQU   UCMDISP1
UCMDISPE EQU   UCMDISP1
UCMDISPD EQU   UCMDISP1
UCMDISPC EQU   UCMDISP1
UCMDISPB EQU   UCMDISP1
UCMDISPA EQU   UCMDISP1
UCMAUTHB EQU   UCMAUTH+1
UCMRSV23 EQU   UCMAUTHA
UCMRSV22 EQU   UCMAUTHA
UCMRSV21 EQU   UCMAUTHA
UCMRSV20 EQU   UCMAUTHA
UCMRSV19 EQU   UCMAUTHA
UCMAUTH3 EQU   UCMAUTHA
UCMAUTH2 EQU   UCMAUTHA
UCMAUTH1 EQU   UCMAUTHA
UCMOUTQ  EQU   UCMLIST+36
UCMRSV18 EQU   UCMLIST+34
UCMRTCD  EQU   UCMLIST+32
UCMXB    EQU   UCMLIST+28
@NM00007 EQU   UCMXA+1
UCMRSV17 EQU   UCMATR
UCMRSV16 EQU   UCMATR
UCMAT04  EQU   UCMATR
UCMLF    EQU   UCMATR
UCMUF    EQU   UCMATR
UCMXF    EQU   UCMATR
UCMIF    EQU   UCMATR
UCMOF    EQU   UCMATR
UCMTC    EQU   UCMSTS
UCMTD    EQU   UCMSTS
UCMTB    EQU   UCMSTS
UCMTA    EQU   UCMSTS
UCMCF    EQU   UCMSTS
UCMBF    EQU   UCMSTS
UCMPF    EQU   UCMSTS
UCMAF    EQU   UCMSTS
UCMNAME  EQU   UCMLIST+16
UCMUCB   EQU   UCMLIST+12
UCMDCB   EQU   UCMLIST+8
UCMSBR   EQU   UCMLIST+4
UCMECB   EQU   UCMLIST
UCMTPSAV EQU   UCMEXIT+208
UCMXTSAV EQU   UCMEXIT+136
UCMDESCD EQU   UCMEXIT+132
UCMROUTC EQU   UCMEXIT+128
UCMMSTXT EQU   UCMEXIT
UCMDECBA EQU   UCMEIL+20
UCMOECBA EQU   UCMEIL+16
UCMAECBA EQU   UCMEIL+12
UCMXECBA EQU   UCMEIL+8
UCMNIPTR EQU   UCMEIL+4
UCMRSV15 EQU   UCMEIL+3
UCMRTCT  EQU   UCMEIL+2
UCMRPYL  EQU   UCMEIL+1
@NM00006 EQU   UCMEIL
UCMRSV60 EQU   UCM+302
UCMRSV59 EQU   UCMRSV51
UCMRSV58 EQU   UCMRSV51
UCMRSV57 EQU   UCMRSV51
UCMRSV56 EQU   UCMRSV51
UCMRSV55 EQU   UCMRSV51
UCMRSV54 EQU   UCMRSV51
UCMRSV53 EQU   UCMRSV51
UCMRSV52 EQU   UCMRSV51
UCMRSV50 EQU   UCMRSV42
UCMRSV49 EQU   UCMRSV42
UCMRSV48 EQU   UCMRSV42
UCMRSV47 EQU   UCMRSV42
UCMRSV46 EQU   UCMRSV42
UCMRSV45 EQU   UCMRSV42
UCMRSV44 EQU   UCMRSV42
UCMRSV43 EQU   UCMRSV42
UCMJES3T EQU   UCM+296
UCMWAKUP EQU   UCM+292
UCMFRRAD EQU   UCM+288
UCMSWCH  EQU   UCM+284
UCMASCB  EQU   UCM+280
UCMWQECP EQU   UCM+276
UCMORECP EQU   UCM+272
UCMOECBT EQU   UCM+268
UCMOECBH EQU   UCM+264
UCMWECBT EQU   UCM+260
UCMWECBH EQU   UCM+256
UCMMBEND EQU   UCM+252
UCMCTID  EQU   UCM+250
UCMRSV61 EQU   UCM+248
UCMRP2AD EQU   UCM+244
UCMCRAAD EQU   UCM+240
UCMWQLM1 EQU   UCM+238
UCMRV001 EQU   UCM+237
UCMRQLM1 EQU   UCM+236
UCMMBPTR EQU   UCM+232
UCMMQNXT EQU   UCM+228
UCMMQEND EQU   UCM+224
UCMMQPTR EQU   UCM+220
UCMTRECB EQU   UCM+216
UCMMNECB EQU   UCM+212
UCMMNTR  EQU   UCM+208
UCMR9SV  EQU   UCM+204
UCMSAVE4 EQU   UCM+140
UCMSAVE3 EQU   UCM+84
UCMVEL   EQU   UCMVDATA+8
UCMVEZ   EQU   UCMVDATA+4
UCMVEA   EQU   UCMVDATA
UCMINCR  EQU   UCM+71
UCMMODEL EQU   UCM+70
UCMCORE  EQU   UCM+69
UCMFIX   EQU   UCMMODE
UCMMCS   EQU   UCMMODE
UCMOGCE  EQU   UCMMODE
UCMAMFA  EQU   UCMMODE
UCMRSV14 EQU   UCMMODE
UCMTPUTA EQU   UCMMODE
UCMNOCON EQU   UCMMODE
UCMRSV11 EQU   UCMMODE
UCMPXA   EQU   UCM+64
UCMWQEND EQU   UCM+60
UCMWQNR  EQU   UCM+58
UCMRQNR  EQU   UCM+56
UCMWQECB EQU   UCM+52
UCMRQECB EQU   UCM+48
UCMWQLM  EQU   UCM+46
UCMRQLM  EQU   UCM+45
@NM00005 EQU   UCMRPYI
UCMRPYQ  EQU   UCM+28
UCMWTOQ  EQU   UCM+24
UCMLSTP  EQU   UCM+20
UCMARECB EQU   UCM+16
UCMLECB  EQU   UCMDECB
UCMOECB  EQU   UCM+8
UCMAECB  EQU   UCM+4
UCMXECB  EQU   UCM
UCMGMCNT EQU   UCMPRFX+158
UCMSDS2  EQU   UCMPRFX+157
UCMRSV09 EQU   UCMSDS1
UCMRSV08 EQU   UCMSDS1
UCMRSV07 EQU   UCMSDS1
UCMRSV06 EQU   UCMSDS1
UCMRSV05 EQU   UCMSDS1
UCMRSV04 EQU   UCMSDS1
UCMSDS1B EQU   UCMSDS1
UCMSDS1A EQU   UCMSDS1
UCMDTINT EQU   UCMPRFX+152
UCMLOGAD EQU   UCMPRFX+148
UCMNPECB EQU   UCMPRFX+144
UCMTPPTR EQU   UCMPRFX+140
UCMDOMRT EQU   UCMPRFX+136
UCMRUTCK EQU   UCMPRFX+132
UCMQRTN  EQU   UCMPRFX+128
UCM6WD   EQU   UCMXSA+20
UCM5WD   EQU   UCMXSA+16
UCM4WD   EQU   UCMXSA+12
UCM3WD   EQU   UCMXSA+8
UCM2WD   EQU   UCMXSA+4
UCM1WD   EQU   UCMXSA
UCMRSV03 EQU   UCMPRFX+102
UCMHRDRT EQU   UCMPRFX+100
UCMUEXIT EQU   UCMPRFX+97
UCMXCT   EQU   UCMPRFX+96
UCMHCUCM EQU   UCMPRFX+92
UCMCMID  EQU   UCMPRFX+88
UCMOWTOR EQU   UCMPRFX+86
UCMRSV02 EQU   UCMSFLG2
UCMSYSO  EQU   UCMSFLG2
UCMSYSN  EQU   UCMSFLG2
UCMSYSM  EQU   UCMSFLG2
UCMSYSL  EQU   UCMSFLG2
UCMSYSK  EQU   UCMSFLG2
UCMSYSJ  EQU   UCMSFLG2
UCMSYSI  EQU   UCMSFLG2
UCMRSV35 EQU   UCMSFLG1
UCMSYSG  EQU   UCMSFLG1
UCMSYSF  EQU   UCMSFLG1
UCMSYSE  EQU   UCMSFLG1
UCMSYSD  EQU   UCMSFLG1
UCMSYSC  EQU   UCMSFLG1
UCMSYSB  EQU   UCMSFLG1
UCMRSV01 EQU   UCMSFLG1
UCMWTOX  EQU   UCMPRFX+80
UCMDOME  EQU   UCMPRFX+76
UCMSVR0  EQU   UCMSAVE0+68
UCMSVQ0  EQU   UCMSAVE0+64
UCMSVP0  EQU   UCMSAVE0+60
UCMSVO0  EQU   UCMSAVE0+56
UCMSVN0  EQU   UCMSAVE0+52
UCMSVM0  EQU   UCMSAVE0+48
UCMSVL0  EQU   UCMSAVE0+44
UCMSVK0  EQU   UCMSAVE0+40
UCMSVJ0  EQU   UCMSAVE0+36
UCMSVI0  EQU   UCMSAVE0+32
UCMSVH0  EQU   UCMSAVE0+28
UCMSVG0  EQU   UCMSAVE0+24
UCMSVF0  EQU   UCMSAVE0+20
UCMSVE0  EQU   UCMSAVE0+16
UCMSVD0  EQU   UCMSAVE0+12
UCMSVC0  EQU   UCMSAVE0+8
UCMSVB0  EQU   UCMSAVE0+4
UCMSVA0  EQU   UCMSAVE0
UCM2FEXT EQU   UCM2EXT+12
UCM2STAA EQU   UCM2STA+1
UCMRV008 EQU   UCM2SFLG
UCMRSV34 EQU   UCM2SFLG
UCMRSV33 EQU   UCM2SFLG
UCM2WTOI EQU   UCM2SFLG
UCM2DSTR EQU   UCM2SFLG
UCM2DTAK EQU   UCM2SFLG
UCM2SENT EQU   UCM2SFLG
UCM2SDWA EQU   UCM2SFLG
UCM2PST  EQU   UCM2EXT+4
UCM2RID  EQU   UCM2EXT+2
UCM2WID  EQU   UCM2EXT
CHARSV16 EQU   CHSHORT+100
CHARSV15 EQU   CHSHORT+96
CHJSCBVS EQU   CHSHORT+92
CHUSCVS  EQU   CHSHORT+88
@NM00003 EQU   CHSHORT+84
@NM00002 EQU   CHSHORT+80
CHSQA    EQU   CHSHORT+44
CHQPA    EQU   CHSHORT+8
CHJCL    EQU   CHSHORT+4
CHSPC    EQU   CHSHORT
CHSPB    EQU   CHSTEP+4
CHTCB    EQU   CHSTEP+1
CHARSV23 EQU   CHSWT
CHARSV22 EQU   CHSWT
CHARSV21 EQU   CHSWT
CHAC     EQU   CHSWT
CHPSF    EQU   CHSWT
CHPSD    EQU   CHSWT
CHJCT    EQU   CHSWT
CHARSV20 EQU   CHSWT
CHCECB   EQU   CHASM+20
CHECB    EQU   CHASM+16
CHRGNAD  EQU   CHASM+12
CHARSV18 EQU   CHRGNSZ+1
CHRPRTY  EQU   CHRGNSZ
@NM00001 EQU   CHCIBP
CHEND    EQU   CHCIBP
CHECBP   EQU   CHASM
CHDER    EQU   CHPROCSN+4
CHARSV10 EQU   CHACT1
CHARSV09 EQU   CHACT1
CHARSV08 EQU   CHACT1
CHARSV07 EQU   CHACT1
CHARSV06 EQU   CHACT1
CHARSV05 EQU   CHACT1
CHMODIFY EQU   CHACT1
CHRDWTR  EQU   CHACT1
CHARSV30 EQU   CHPROCSN+2
CHQID    EQU   CHPROCSN
CHTRKID  EQU   CHPKE
CHCIBCTR EQU   CHAIN+27
CHUNIT   EQU   CHAIN+24
CHPCOI   EQU   CHPARM
CHAFORCE EQU   CHIFY
CHAIFX   EQU   CHACT
CHCLD    EQU   CHACT
CHCL     EQU   CHACT
CHDSI    EQU   CHACT
CHDISC   EQU   CHACT
CHTERM   EQU   CHACT
CHSWAP   EQU   CHACT
CHABTERM EQU   CHSTS
CHDL     EQU   CHSTS
CHAD     EQU   CHSTS
CHQSPC   EQU   CHSTS
CHSOUT   EQU   CHSTS
CHSYS    EQU   CHSTS
CHAP     EQU   CHSTS
CHSZE    EQU   CHFLG+1
CHVCD    EQU   CHFLG
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RF00197 EQU   @RC00186
@RF00200 EQU   @RC00186
@RF00208 EQU   @RC00182
@RC00260 EQU   @RC00258
@RC00336 EQU   @RC00318
@RC00339 EQU   @RC00318
@RC00361 EQU   @RC00359
@RC00374 EQU   @RC00372
@RC00380 EQU   @RC00378
@RC00386 EQU   @RC00384
@RC00400 EQU   @RC00398
@RC00461 EQU   @RC00459
@RC00642 EQU   @RC00602
@RC00664 EQU   @RC00661
@RC00689 EQU   @RC00684
@RC00812 EQU   @RC00762
@RC00806 EQU   @RC00762
@RC00800 EQU   @RC00762
@RC00794 EQU   @RC00762
@RC00788 EQU   @RC00762
@RC00782 EQU   @RC00762
@RC00776 EQU   @RC00762
@RC00770 EQU   @RC00762
@RC00764 EQU   @RC00762
@RC00825 EQU   @RC00823
@RC00850 EQU   @RC00836
@RC00844 EQU   @RC00836
@RC00838 EQU   @RC00836
@RC00957 EQU   @RC00955
@RC01007 EQU   @RC01005
@RC00666 EQU   @RC00664
@RC00691 EQU   @RC00689
@RC00766 EQU   @RC00764
@RC00772 EQU   @RC00770
@RC00778 EQU   @RC00776
@RC00784 EQU   @RC00782
@RC00790 EQU   @RC00788
@RC00796 EQU   @RC00794
@RC00802 EQU   @RC00800
@RC00808 EQU   @RC00806
@RC00814 EQU   @RC00812
@RC00827 EQU   @RC00825
@RC00840 EQU   @RC00838
@RC00846 EQU   @RC00844
@RC00852 EQU   @RC00850
@RC00693 EQU   @RC00691
@ENDDATA EQU   *
         END   IEECB866,(C'PLS1748',0701,77003)
