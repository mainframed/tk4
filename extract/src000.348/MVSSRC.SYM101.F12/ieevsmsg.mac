IEEVSMSG CSECT
         TITLE 'IEEVSMSG - STARTED TASK CONTROL MESSAGE MODULE'
***********************************************************************
*
*  MODULE NAME = IEEVSMSG
*
*  LOAD NAME = IEESB605, IEEVMNT2                                Y02939
*
*  DESCRIPTION = STARTED TASK CONTROL MESSAGE MODULE
*
* COPYRIGHT = NONE
*
*  STATUS = OS/VS2 RELEASE 2
*
*  FUNCTION = ISSUE MESSAGE REQUESTED BY CALLER
*
*  OPERATION = IF A MESSAGE CODE ONLY WAS PASSED IN THE INPUT
*              PARAMETER LIST, VALIDATE MESSAGE CODE, GET MESSAGE
*              CORE AND ISSUE MESSAGE.
*
*           -  IF POINTER TO TEXT TO BE INSERTED IN MESSAGE IS
*              PASSED, MOVE TEXT TO MESSAGE.
*
*           -  IF A CONSOLE ID POINTER IS PASSED, INSERT IT IN
*              REGISTER 0 BEFORE ISSUING MESSAGE.
*
*  NOTES:
*    DEPENDENCIES = NONE
*      CHARACTER CODE DEPENDENCIES = NONE
*    RESTRICTIONS = NONE
*    REGISTER CONVENTIONS = STANDARD
*    PATCH LABEL = STCPATCH (RESERVED FOR FUTURE USE)            Y02699
*
*  MODULE TYPE = CSECT
*    PROCESSOR = ASSEMBLER
*    ATTRIBUTES = REENTRANT, REFRESHABLE, LPA, KEY ZERO,
*                 SUPERVISOR STATE
*
*  ENTRY POINT = IEEVSMSG
*    PURPOSE = (SEE FUNCTION)
*    LINKAGE = CALL FROM IEESB605 FOR ERRORS DETECTED IN THE     Y02669
*              JOB SCHEDULING SUBROUTINE
*           -  CALL FROM IEEVMNT2 FOR MOUNT COMMAND ERRORS
*    INPUT =  REGISTER 1 POINTS TO AN INPUT PARAMETER LIST
*                  .IF MESSAGE IS NOT CHANGED DYNAMICALLY AND WILL XMCS
*                   NOT BE ISSUED TO REQUESTING CONSOLE - THEN
*                   REGISTER 1 CONTAINS -
*                     - X'80'- IN HIGH ORDER BIT
*                     - MESSAGE CODE IN 3 LOW ORDER BYTES          XMCS
*
*                  .IF MESSAGE DOES NOT RETURN TO REQUESTING       XMCS
*                   CONSOLE BUT MUST BE DYNAMICALLY-FILLED,
*                   REGISTER 1 POINTS TO -
*                       ********************************           XMCS
*                       *.WD1-MESSAGE CODE             *           XMCS
*                       ********************************           XMCS
*                       *.WD2-X'80'-PTR TO FILLER AREA *           XMCS
*                       ********************************
*
*                  .IF MESSAGE IS STATIC AND WILL RETURN TO        XMCS
*                   REQUESTING CONSOLE, REGISTER 1 POINTS TO -
*                       **************************                 XMCS
*                       *WD1-MESSAGE CODE        *                 XMCS
*                       **************************                 XMCS
*                       *WD2-ZEROES              *                 XMCS
*                       **************************                 XMCS
*                       *WD3-X'80'-CONSOLE ID PTR*                 XMCS
*                       **************************                 XMCS
*
*                  .IF MESSAGE MUST BE BOTH DYNAMICALLY FILLED AND XMCS
*                   ISSUED TO REQUESTING CONSOLE, REGISTER 1 POINTS TO-
*                       **************************                 XMCS
*                       *WD1-MESSAGE CODE        *                 XMCS
*                       **************************                 XMCS
*                       *WD2-PTR TO FILLER AREA  *                 XMCS
*                       **************************                 XMCS
*                       *WD3-X'80'-CONSOLE ID PTR*                 XMCS
*                       **************************                 XMCS
*
*  EXIT-NORMAL = RETURN TO CALLER
*    CONDITIONS = COMPLETION OF MESSAGE PROCESSING
*    OUTPUT = REQUESTED MESSAGE ISSUED IF VALID MESSAGE CODE
*           - NO MESSAGE ISSUED IF INVALID MESSAGE CODE          Y02939
*
*  EXIT-ERROR = NONE
*
*  EXTERNAL REFERENCES:
*    ROUTINES = NONE
*    DATA AREAS = INPUT PARAMETER LIST
*    CONTROL BLOCKS = NONE
*
*  TABLES = NONE
*
*  MACROS = SAVE, RETURN, GETMAIN, FREEMAIN, WTO
*    SERIALIZATION = NONE
*
*  CHANGE ACTIVITY = Y02669, Y02939
*
*  MESSAGES = (SEE WTO LIST FORMS)
*
*  ABEND CODES = NONE
*
***********************************************************************
         EJECT
*
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
*
HEX80    EQU   X'80'                                               XMCS
ZERO     EQU   0                                                   XMCS
TWO      EQU   2                                                   XMCS
N4       EQU   4
TWENFR   EQU   24                                                  XMCS
MSGSIZE  EQU   64                 MESSAGE AREA SIZE              Y02939
*                                                                  XMCS
***********************************************************************
         EJECT
         SAVE  (14,12)
         BALR  R9,0
         USING *,R9
         MODID BR=YES                                            Y01886
         USING PARMLIST,R4
         LR    R4,R1               SAVE PARAMETER                  XMCS
         LTR   R4,R4              IS JUST MESSAGE CODE PASSED -
         BNM   VMSG05             NO - GO GET CODE FROM PARM LIST
         LA    R2,ZERO(R4)        SET MESSAGE CODE
         B     VMSG09             GO GET MESSAGE CORE            Y02939
VMSG05   EQU   *                                                 Y02939
         L     R2,MSGCDE          GET MESSAGE CODE               Y02939
*                                                                Y02939
*  MOVE MESSAGE TO GOTTEN CORE                                   Y02939
*                                                                Y02939
*  CHECK FOR REGISTER 1 INPUT ONLY -                             Y02939
*        .IF HIGH ORDER BIT IN REGISTER 1 IS ON, LOW ORDER       Y02939
*         3 BYTES CONTAIN THE MESSAGE CODE.                      Y02939
*        .THE CHECK FOR MESSAGE FILL AND CONSOLE ID ARE BYPASSED.Y02939
*                                                                Y02939
VMSG09   EQU   *
         BAL   R10,VMSGADDR       MOVE MSG TO GOTTEN CORE IF VALID
         LTR   R1,R1              WAS MESSAGE CODE VALID -       Y02939
         BZ    VMSGRETN           NO-RETURN WITHOUT ISSUING MSG  Y02939
         LTR   R4,R4              IS JUST MESSAGE CODE PASSED -  Y02939
         BNM   VMSG11             NO - GO CHECK OTHER PARAMETERS Y02939
         SR    R0,R0              NO CONSOLE ID SPECIFIED        Y02939
         B     VMSGWTO            ISSUE MSG TO THE OPERATOR
VMSG11   EQU   *                                                   XMCS
         OC    FILL,FILL           FILLER PTR PASSED               XMCS
         BZ    VMSG22              NO - GO CHECK FOR CONSOLE ID
*                                                                Y02939
*  A POINTER TO MESSAGE TEXT TO BE INSERTED IN THE MESSAGE HAS   Y02939
*  BEEN PASSED IN THE INPUT PARAMETER LIST.                      Y02939
*                                                                Y02939
*        .CALCULATE THE DISPLACEMENT INTO MESSAGE FOR INSERTING  Y02939
*         TEXT.                                                  Y02939
*        .IF DISPLACEMENT IS ZERO, NO ATTEMPT IS MADE TO         Y02939
*         INSERT TEXT.                                           Y02939
*                                                                Y02939
         L     R2,MSGCDE           MSG CODE  TO R2                 XMCS
         LR    R5,R2               SAVE MSG CODE                   XMCS
         L     R6,PTRTOFIL                                         XMCS
         LA    R6,ZERO(R6)         PTR TO FILLER                   XMCS
         LA    R3,DISPLTAB         PTR TO DISPLACEMENT TABLE       XMCS
         BCTR  R2,ZERO             DECREMENT REG BY 1              XMCS
         AR    R2,R3               PTR  TO CORRECT DISPL FOR MSG FILLCS
         SR    R11,R11
         IC    R11,0(R2)          DISPLACEMENT OF FILLER IN MSG
         LTR   R11,R11            DISPLACEMENT = 0 -             Y02939
         BZ    VMSGFREE           YES-BYPASS ISSUING MESSAGE     Y02939
         AR    R11,R1             PTR TO AREA TO BE FILLED
         EX    R5,MOVE            MOVE PROCNAME TO MSG
*                                                                Y02939
*         DETERMINE IF THE CONSOLE ID POINTER                    Y02939
*         WAS PASSED IN THE PARAMETER LIST.                      Y02939
*                                                                Y02939
VMSG22   EQU   *                                                   XMCS
         SR    R0,R0               SET NO CONSOLE ID SPECIFIED   Y02939
         TM    DELIMIT,HEX80  IS THIS LAST PARM PASSED?            XMCS
         BO    VMSGWTO        YES,ISSUE MSG                        XMCS
         C     R0,PTRCONID         CONSOLE ID PTR PASSED           XMCS
         BE    VMSGWTO             NO - GO ISSUE MESSAGE         Y02939
         OC    CONIDPT,CONIDPT     CONSOLE ID PASSED. IS IT 0      XMCS
         BZ    VMSGWTO             YES - GO ISSUE MESSAGE        Y02939
         L     R5,PTRCONID    GET CONSOLE ID PTR                   XMCS
         LA    R5,ZERO(R5)         CLEAR HI-ORDER BYTE             XMCS
         IC    R0,ZERO(R5)         CONSOLE ID TO REG 0             XMCS
         B     VMSGWTO             GO ISSUE MESSAGE              Y02939
*                                                                  XMCS
MOVE     MVC   ZERO(ZERO,R11),ZERO(R6)
*                                                                  XMCS
         EJECT
*                                                                Y02939
*  VMSGADDR ROUTINE GETS CORE FOR THE MESSAGE TO BE ISSUED.      Y02939
*  THE MESSAGE CODE IS USED TO CALCULATE THE OFFSET INTO THE     Y02939
*  SMTAD TABLE TO OBTAIN THE ADDRESS OF THE MESSAGE TO BE        Y02939
*  ISSUED.                                                       Y02939
*  TWO CHECKS ARE MADE FOR A VALID MESSAGE CODE:                 Y02939
*        .IF THE SMTAD OFFSET IS OUTSIDE THE RANGE OF THE        Y02939
*         TABLE, CONTROL RETURNS WITH REGISTER 1 = 0.            Y02939
*        .IF THE SMTAD ENTRY = 0, CONTROL RETURNS WITH           Y02939
*         REGISTER 1 = 0.                                        Y02939
*                                                                Y02939
*        INPUT:  REGISTER 2 - MESSAGE CODE                       Y02939
*        OUTPUT: REGISTER 1 - POINTER TO MESSAGE IN GOTTEN CORE  Y02939
*                           - ZERO IF MESSAGE CODE IS INVALID    Y02939
*
VMSGADDR EQU   *                                                   XMCS
         LA    R3,SMTAD            WTO TABLE PTR                   XMCS
         BCTR  R2,ZERO             MINUS 1                         XMCS
         SLA   R2,TWO              TIMES 4                         XMCS
         AR    R2,R3               PLUS TAB ADDR                   XMCS
*
*  CHECK IF ADDRESS IS OUTSIDE THE RANGE OF TABLE -              Y02939
*
         LA    R3,TABLEND         SET END OF TABLE ADDRESS       Y02939
         CR    R2,R3              PAST END OF TABLE              Y02939
         BL    VMSGADR1           NO-GO CHECK FOR VALID MESSAGE  Y02939
         SR    R1,R1              INDICATE INVALID MESSAGE CODE  Y02939
         BR    R10                RETURN TO CALLER               Y02939
VMSGADR1 EQU   *                                                 Y02939
         L     R2,0(R2)            MSG POINTER
*
*  CHECK IF SMTAD ENTRY IS ZERO -                                Y02939
*
         LTR   R2,R2              VALID MESSAGE CODE SPECIFIED - Y02939
         BNZ   VMSGADR2           YES - GO GET MESSAGE CORE      Y02939
         SR    R1,R1              INDICATE INVALID MESSAGE CODE  Y02939
         BR    R10                RETURN TO CALLER               Y02939
VMSGADR2 EQU   *                                                 Y02939
         LA    R0,MSGSIZE          GET CORE FOR MSG              Y02939
         GETMAIN R,LV=(0)
         SPACE
         XC    ZERO(MSGSIZE,R1),ZERO(R1)                         Y02939
*                                 CLEAR MESSAGE CORE             Y02939
         LH    R3,ZERO(R2)        GET WTO TEXT LENGTH            Y02939
         LA    R3,N4(R3)          ADD LENGTH OF LENGTH FIELD     Y02939
*                                 AND MCS FLAGS FIELD            Y02939
         BCTR  R3,ZERO            DECREMENT FOR EXECUTE          Y02939
         EX    R3,MOVE1            MOVE MSG TO GOTTEN CORE
         BR    R10                 RETURN - REG 1 PTS TO MSG
*
MOVE1    MVC   0(0,R1),0(R2)       ..                              XMCS
*                                                                Y02939
*  ISSUE MESSAGE - R0 = CONSOLE ID (IF SPECIFIED)                Y02939
*                  R1 = MESSAGE POINTER                          Y02939
*                                                                Y02939
*  FREE MESSAGE CORE AND RETURN TO CALLER                        Y02939
*                                                                Y02939
VMSGWTO  EQU   *                                                   XMCS
         LR    R7,R1               SAVE PTR TO GOTTEN CORE
         WTO   MF=(E,(1))          ISSUE WTO                       XMCS
         LR    R1,R7               PTR TO GOTTEN CORE
VMSGFREE EQU   *                                                 Y02939
         LA    R0,MSGSIZE          GOTTEN CORE LENGTH
         FREEMAIN R,LV=(0),A=(1)
VMSGRETN EQU   *                                                 Y02939
         RETURN (14,12)                                            XMCS
         EJECT
*                                                                Y02939
*  TABLE OF MESSAGE ADDRESSES -                                  Y02939
*                                                                Y02939
*        THE MESSAGE CODE PASSED IN THE INPUT PARAMETER LIST TO  Y02939
*        IEEVSMSG IS USED TO CALCULATE THE OFFSET INTO THIS      Y02939
*        TABLE TO OBTAIN THE ADDRESS OF THE MESSAGE TO BE ISSUED.Y02939
*                                                                Y02939
*        AN ADDRESS CONSTANT OF ZERO INDICATES NO MESSAGE        Y02939
*        EXISTS FOR THE CORRESPONDING MESSAGE CODE.  THESE       Y02939
*        SLOTS MAY BE USED TO ADD MESSAGES.                      Y02939
*                                                                  XMCS
         DS    0F
SMTAD    EQU   *
         DC    A(0)                                              Y02939
         DC    A(0)                                              Y02939
         DC    A(WTO3)             IEE122I
         DC    A(WTO4)             IEE132I
         DC    A(WTO5)             IEE121I
         DC    A(0)                                              Y02939
         DC    A(WTO7)             IEE135I
         DC    A(WTO8)             IEE124I
         DC    A(WTO9)             IEE134I
         DC    A(0)                                              Y02939
         DC    A(0)                                              Y02939
         DC    A(0)                                              Y02939
         DC    A(0)                                              Y02939
TABLEND  EQU   *                  END OF MESSAGE ADDRESS TABLE   Y02939
         SPACE 2
*
*  TABLE OF MESSAGE FILL DISPLACEMENTS -                         Y02939
*                                                                Y02939
*        DISPLACEMENT IS USED TO CALCULATE OFFSET INTO MESSAGE   Y02939
*        WHERE TEXT IS TO BE INSERTED.  IF DISPLACEMENT IS ZERO, Y02939
*        NO MESSAGE TEXT IS TO BE INSERTED.                      Y02939
*                                                                Y02939
DISPLTAB EQU   *                                                   XMCS
         DC    AL1(0)                       WTO1
         DC    AL1(0)                        ..
         DC    AL1(0)                        ..
         DC    AL1(0)                        ..
         DC    AL1(0)                        ..
         DC    AL1(0)                        ..
         DC    AL1(0)                        ..
         DC    AL1(0)                        ..
         DC    AL1(0)                        ..
         DC    AL1(0)                        ..
         DC    AL1(0)
         DC    AL1(0)
         DC    AL1(0)                       WTO13
DISPEND  EQU   *                  END OF DISPLACEMENT TABLE      Y02939
         EJECT
WTO1     DC    F'0'                                              Y02939
WTO2     DC    F'0'                                              Y02939
         SPACE
***********BY IEESB605                                           Y02669
WTO3     WTO   'IEE122I START COMMAND JCL ERROR',                Y02939*
               MF=L,DESC=(5),MCSFLAG=(REG0,RESP)
*                                                                  XMCS
         SPACE
***********BY IEESB605                                           Y02669
WTO4     WTO   'IEE132I START COMMAND DEVICE ALLOCATION ERROR',MF=L,   *
               DESC=(5),MCSFLAG=(REG0,RESP),ROUTCDE=(10)         Y02939
*                                                                  XMCS
         SPACE
***********BY IEESB605                                           Y02669
WTO5     WTO   'IEE121I I/O ERROR DURING COMMAND EXECUTION',     Y02669*
               MF=L,ROUTCDE=(2,10),MCSFLAG=(REG0,RESP),DESC=(3)
*                                                                  XMCS
WTO6     DC    F'0'                THIS MSG ID IS NOT USED        20032
*                                                                  XMCS
***********BY IEEVMNT2                                             XMCS
WTO7     WTO   'IEE135I ERROR - REQUESTED DEVICE RESERVED',MF=L,       *
               DESC=(5),MCSFLAG=(REG0,RESP)                      Y02939
*                                                                  XMCS
         SPACE
***********BY IEESB605                                           Y02669
WTO8     WTO   'IEE124I MOUNT COMMAND JCL ERROR',MF=L,           Y02939*
               DESC=(5),MCSFLAG=(REG0,RESP)
*                                                                  XMCS
         SPACE
***********BY IEESB605                                           Y02669
WTO9     WTO   'IEE134I MOUNT COMMAND DEVICE ALLOCATION ERROR',  Y02939*
               MF=L,DESC=(5),MCSFLAG=(REG0,RESP)
*                                                                  XMCS
         SPACE
WTO10    DC    F'0'                                              Y02939
WTO11    DC    F'0'                                              Y02939
WTO12    DC    F'0'                                              Y02939
WTO13    DC    F'0'                                              Y02939
         EJECT
STCPATCH DC    CL40' '            PATCH AREA                     Y02669
         SPACE 2
PARMLIST DSECT                                                     XMCS
PARMDUMY DS    0F                                                  XMCS
MSGCDE   DS    F                   MESSAGE CODE                    XMCS
PTRTOFIL DS    F                   POINTER TO MESSAGE FILLER       XMCS
PTRCONID DS    F                   CONSOLE ID POINTER              XMCS
*                                                                  XMCS
         ORG   PTRTOFIL
DELIMIT  DS    XL1                                                 XMCS
FILL     DS    XL3                                                 XMCS
*                                                                  XMCS
         ORG   PTRCONID
DELMIT2  DS    XL1                                                 XMCS
CONIDPT  DS    XL3                                                 XMCS
*                                                                  XMCS
         END
