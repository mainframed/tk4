         TITLE 'WTO AND TPUT FOR DISPLAY AND TRACK BASE                *
                        '
IEECB801 CSECT ,                                                   0001
@MAINENT DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL1(16)                                             0001
         DC    C'IEECB801  75.325'                                 0001
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                     0001
         BALR  @11,0                                               0001
@PSTART  DS    0H                                                  0001
         USING @PSTART,@11                                         0001
         L     @00,@SIZDATD                                        0001
         GETMAIN  R,LV=(0)
         LR    @12,@01                                             0001
         USING @DATD,@12                                           0001
         LM    @00,@01,20(@13)                                     0001
         MVC   @PC00001(4),0(@01)                                  0001
*       PARMBASE = R1;               /* ESTABLISH PARMLIST BASE      */
         LR    PARMBASE,R1                                         0015
*       CSCBPTR = CSCBADDR;          /* GET THIS TASK'S CSCB ADDRESS */
         L     CSCBPTR,CSCBADDR(,PARMBASE)                         0016
*       WPLPTR = MESSADDR;           /* GET ADDR OF MSG BUFFER       */
         L     WPLPTR,MESSADDR(,PARMBASE)                          0017
*       R6 = R14;                    /* SAVE RETURN ADDRESS          */
         LR    R6,R14                                              0018
*       RESPECIFY (R14) UNRESTRICTED;                              0019
*/*********************************************************************
**                          MLWTO PROCESSING                          *
**   IF CHASID IS ZERO, THE REQUESTER IS NOT A TIME SHARING USER.     *
**   1) IF THE HI-ORDER BYTE OF THE MESSAGE ADDRESS PASSED IN THE     *
**      PARM LIST WAS X'40', THE TRACK DISPLAY COULD NOT BE UPDATED.  *
**      MESSAGE 'IEE920I NO TR UPDATE AT 00.00.00 00.000' WILL BE     *
**      ISSUED TO THE REQUESTING OR MASTER CONSOLE. (CHUCMP)          *
**         A) REGISTER 1 IS LOADED WITH THE CONTAINS OF REGISTER 4    *
**            (WPLPTR) WHICH CONTAINS THE ADDRESS OF THE MESSAGE      *
**            BUFFER LOCATED IN CHSHORT                               *
**         B) REGISTER 0 IS LOADED WITH THE CONSOLE ID OF THE         *
**            ISSUING OR MASTER CONSOLE (CHUCMP).                     *
**         C) THE SLWTO IS ISSUED VIA A CALL TO 'WTOER'.              *
**         D) REGISTER 14 IS RESTORED AND CONTROL RETURNED TO         *
**            IEECB800.                                               *
**   3) IF THE HI-ORDER BYTE OF THE MESSAGE ADDRESS PASSED IN         *
**      THE PARM LIST WAS X'80', A GETMAIN ERROR OCCURRED IN          *
**      IEECB800 AND THE MAIN HEADER AND ERROR MESSAGE HAVE BEEN      *
**      PLACED IN THE CSCB. FOR THIS CONDITION AND IF THE HI-ORDER    *
**      BYTE IS X'00', REGISTER 4 (WPLPTR) BECOMES THE BASE FOR THE   *
**      MESSAGE BUFFER WHOSE ADDRESS IS PASSED IN 'MESSADDR'.         *
**        A) INTERFACE TO WTO FOR THE FIRST ISSUANCE OF A MLWTO IS    *
**           REG 0 = 000000ID WITH THE TARGET CONSOLE ID IN THE       *
**           LOW ORDER BYTE OF REG 0.                                 *
**        B) ON RETURN THE INTERFACE IS CHANGED FOR SUBSEQUENT WTO'S. *
**           REGISTER 1 CONTAINS THE ID WHICH MUST BE IN THE HI-ORDER *
**           3 BYTES OF REGISTER 0.                                   *
**        C) REGISTER 14 WILL BE RESTORED AND CONTROL RETURNED TO     *
**           IEECB800.                                                *
**********************************************************************/
*       IF CHASID = 0 THEN        /* WAS REQUESTER A TS USER?     */
         SLR   @10,@10                                             0020
         CH    @10,CHASID(,CSCBPTR)                                0020
         BNE   @RF00020                                            0020
*          DO;                    /* NO                           */
*           IF NOUPFLAG = '1'B ×    /* IS ERR MSG BUFFER IN CSCB?   */
*              CSCBFLAG = '1'B THEN                                0022
         TM    NOUPFLAG(PARMBASE),B'11000000'                      0022
         BZ    @RF00022                                            0022
*              DO;                /* YES, NO UPDATE AT THIS TIME    */
*               MLWTOID = 0;                                       0024
         STCM  @10,7,MLWTOID(PARMBASE)                             0024
*               NOUPFLAG= '0'B; /* SET SWITCH TO ZERO        @ZA00055*/
*               CSCBFLAG = '0'B; /* SET SWITCH TO ZERO       @ZA00055*/
         NI    NOUPFLAG(PARMBASE),B'00111111'                      0026
*               CONSOLID = CHUCMP;                                 0027
         MVC   CONSOLID(1,PARMBASE),CHUCMP(CSCBPTR)                0027
*               CALL WTOER;                                        0028
         BAL   @14,WTOER                                           0028
*               GO TO GOBACK;                                      0029
         B     GOBACK                                              0029
*              END;                                                0030
*           ELSE                                                   0031
*              DO;                /* NO, ISSUE MLWTO */            0031
@RF00022 DS    0H                                                  0032
*               IF FIRSTIME = '1'B THEN/*                          0032
*                                        FIRST ISSUANCE OF MLWTO? */
         TM    FIRSTIME(PARMBASE),B'00100000'                      0032
         BNO   @RF00032                                            0032
*                  DO;                                             0033
*                   MLWTOID = 0;    /* YES, NECESSARY INITIALIZATION */
         SLR   @10,@10                                             0034
         STCM  @10,7,MLWTOID(PARMBASE)                             0034
*                   CONSOLID = CHCNID;  /* TARGET CONSOLE ID  */   0035
         MVC   CONSOLID(1,PARMBASE),CHCNID(CSCBPTR)                0035
*                  END;                                            0036
*               ELSE;               /* NO */                       0037
@RF00032 DS    0H                                                  0038
*               RESPECIFY (CSCBPTR) UNRESTRICTED;                  0038
*               CALL WTOER;         /* GO ISSUE MLWTO */           0039
         BAL   @14,WTOER                                           0039
*               IF FIRSTIME = '1'B THEN/*                          0040
*                                       FIRST ISSUANCE OF MLWTO? */
         TM    FIRSTIME(PARMBASE),B'00100000'                      0040
         BNO   @RF00040                                            0040
*                  DO;              /* YES, SAVE MLWTO ID FOR */   0041
*                   MLWTOID = R1; /* SUBSEQUENT MLWTO'S */         0042
         STCM  R1,7,MLWTOID(PARMBASE)                              0042
*                   FIRSTIME = '0'B;/*TURN OFF FIRST-TIME SWITCH */
         NI    FIRSTIME(PARMBASE),B'11011111'                      0043
*                  END;                                            0044
*               ELSE;                                              0045
@RF00040 DS    0H                                                  0046
*               GO TO GOBACK;                                      0046
         B     GOBACK                                              0046
*              END;                                                0047
*          END;                                                    0048
*/*********************************************************************
**                            TPUT PROCESSING                         *
**  IF CHASID IS NON-ZERO, THE REQUESTER WAS A TIME SHARING USER.     *
**      1) IF THE HI-ORDER BYTE OF THE MESSAGE ADDRESS PASSED IN      *
**         THE PARM LIST WAS X'40', THE TRACK DISPLAY COULD NOT BE    *
**         UPDATED. THIS CONDITION SHOULD NEVER HAPPEN SINCE THE      *
**         TRACK COMMAND IS INVALID FROM A TIME SHARING TERMINAL.     *
**           A) REGISTER 14 IS RESTORED AND CONTROL IS RETURNED TO    *
**              IEECB800.                                             *
**      2) OTHERWISE, THE ASID IS PLACED IN REGISTER 3 AS INPUT FOR THE
**         TPUT'S.                                                    *
**      3) IF THE HI-ORDER BYTE OF THE MESSAGE ADDRESS PASSED IN      *
**         THE PARM LIST WAS X'80', A GETMAIN ERROR OCCURRED IN       *
**         IEECB800 AND THE MAIN HEADER AND ERROR MESSAGE HAVE BEEN   *
**         PLACED IN THE CSCB. FOR THIS CONDITION AND IF THE HI-ORDER *
**         BYTE IS X'00', REGISTER 4 (WPLPTR) BECOMES THE BASE FOR THE
**         MESSAGE BUFFER.                                            *
**           A) REGISTER 5 (BUFPTR) IS LOADED WITH THE ADDRESS OF THE *
**              WORD PRECEEDING THE MESSAGE TEXT (TPUT INTERFACE) AND *
**              REGISTER 7 (BUFLGTH) IS LOADED WITH THE MESSAGE TEXT  *
**              LENGTH, THE MESSAGES ( NUMBER = COUNT ) ARE ISSUED    *
**              WITH INTERATIVE TPUTS.                                *
**           B) WHEN ALL THE MESSAGES HAVE BEEN ISSUED REGISTER 14    *
**              WILL BE RESTORED AND CONTROL RETURNED TO  IEECB800.   *
**           C) IF TPUT RETURNS A BAD RETURN CODE (REGISTER 15 =      *
**              NON-ZERO) CONTROL WILL BE RETURNED IMMEDIATELY TO     *
**              'GOBACK' WHICH PASSES CONTROL BACK TO IEECB800.       *
**********************************************************************/
*       ELSE                        /* REQUESTER WAS A TS USER */  0049
*          DO;                                                     0049
@RF00020 DS    0H                                                  0050
*           RESPECIFY (R3,CSCBPTR,COUNT,BUFPTR,BUFLGTH) RESTRICTED;
*           R3 = CHASID;       /* SAVE TJID FOR TPUT'S */          0051
         LH    R3,CHASID(,CSCBPTR)                                 0051
*           RESPECIFY (CSCBPTR) UNRESTRICTED;                      0052
*           BUFPTR = WPLPTR + 4;  /* ADDRESS OF MESSAGE TEXT */    0053
         LA    @10,4                                               0053
         LR    BUFPTR,WPLPTR                                       0053
         ALR   BUFPTR,@10                                          0053
*           BUFLGTH = WPLLGH - 4; /* LENGTH OF MESSAGE TEXT */     0054
         LCR   @10,@10                                             0054
         AH    @10,WPLLGH(,WPLPTR)                                 0054
         LR    BUFLGTH,@10                                         0054
*           CALL TPUTTER;         /* ISSUE FIRST TPUT */           0055
         BAL   @14,TPUTTER                                         0055
*           WPLPTR = WPLPTR + WPLLGH; /* POINT TO NEXT LINE */     0056
         AH    WPLPTR,WPLLGH(,WPLPTR)                              0056
*           IF FIRSTIME = '1'B THEN                                0057
         TM    FIRSTIME(PARMBASE),B'00100000'                      0057
         BNO   @RF00057                                            0057
*             DO;                                       /*   @ZA00055*/
*              WPLPTR = WPLPTR + 4;                                0059
         AH    WPLPTR,@CH00041                                     0059
*              FIRSTIME = '0'B;  /* TURN INDICATOR OFF       @ZA00055*/
         NI    FIRSTIME(PARMBASE),B'11011111'                      0060
*             END;                                       /*  @ZA00055*/
*           ELSE;                                                  0062
@RF00057 DS    0H                                                  0063
*           COUNT = WPLLINES - 1; /* NUMBER OF LINES TO TPUT         */
         SLR   COUNT,COUNT                                         0063
         IC    COUNT,WPLLINES(,WPLPTR)                             0063
         BCTR  COUNT,0                                             0063
*           WPLPTR = WPLPTR + 4;                                   0064
         AH    WPLPTR,@CH00041                                     0064
*           DO WHILE COUNT ^= 0;  /* TPUT REST OF LINES */         0065
         B     @DE00065                                            0065
@DL00065 DS    0H                                                  0066
*              BUFPTR = WPLPTR + 4; /* ADDRESS OF MESSAGE TEXT */  0066
         LA    @10,4                                               0066
         LR    BUFPTR,WPLPTR                                       0066
         ALR   BUFPTR,@10                                          0066
*              BUFLGTH = WPLMLLEN - 4; /* MESSAGE TEXT LENGTH */   0067
         LCR   @10,@10                                             0067
         SLR   BUFLGTH,BUFLGTH                                     0067
         IC    BUFLGTH,WPLMLLEN(,WPLPTR)                           0067
         ALR   @10,BUFLGTH                                         0067
         LR    BUFLGTH,@10                                         0067
*              CALL TPUTTER;      /* TPUT LINE */                  0068
         BAL   @14,TPUTTER                                         0068
*              WPLPTR = WPLPTR + WPLMLLEN; /* POINT TO NEXT LINE */
         SLR   @10,@10                                             0069
         IC    @10,WPLMLLEN(,WPLPTR)                               0069
         ALR   WPLPTR,@10                                          0069
*              COUNT = COUNT - 1; /* DECREMENT LINE COUNT */       0070
         BCTR  COUNT,0                                             0070
*           END;                                                   0071
@DE00065 LTR   COUNT,COUNT                                         0071
         BNZ   @DL00065                                            0071
*GOBACK:                             /* ALL DONE OR ERR CONDITION */
*           RESPECIFY (R3,BUFPTR,BUFLGTH,COUNT) UNRESTRICTED;      0072
GOBACK   DS    0H                                                  0073
*           RESPECIFY (R14) RESTRICTED;                            0073
*           R14 = R6;           /* RESTORE RETURN ADDRESS       */ 0074
         LR    R14,R6                                              0074
*           RETURN;             /* RETURN TO IEECB800 */           0075
@EL00001 DS    0H                                                  0075
@EF00001 L     @00,@SIZDATD                                        0075
         LR    @01,@12                                             0075
         FREEMAIN R,LV=(0),A=(1)
@ER00001 LM    @14,@12,12(@13)                                     0075
         BR    @14                                                 0075
*          END;                                                    0076
*/*********************************************************************
**                         TPUT SUBROUTINE                            *
**   CALLED EACH TIME A LINE IS TO BE TPUT'ED.                        *
**   INPUT TO SUBROUTINE:                                             *
**     R3 CONTAINS THE TJID                                           *
**     R5 (BUFPTR) POINTS TO THE MESSAGE TEXT                         *
**     R7 (BUFLGTH) CONTAINS MESSAGE TEXT LENGTH                      *
**   INPUT TO TPUT SVC:                                               *
**     R0 CONTAINS LENGTH OF MESSAGE TEXT (BUFLGTH)                   *
**     R1 POINTS TO BEGINNING OF MESSAGE TEXT NOT MCS FIELD (BUFPTR)  *
**   THESE REGISTERS ARE SAVED IN CASE A RETRY IS NECESSARY           *
**   ONLY ONE RETRY IS ATTEMPTED, IF IT FAILS CONTROL IS IMMEDIATELY  *
**   RETURNED TO IEECB800 FROM 'GOBACK' WITH THE RETURN CODE IN       *
**   RETCODE.                                                         *
**   AFTER THE LINE HAS BEEN PROPERLY TPUTTED CONTROL IS RETURNED TO  *
**   THE INSTRUCTION FOLLOWING THE 'CALL TPUTTER'.                    *
**********************************************************************/
*TPUTTER:   PROC OPTIONS (NOSAVE,NOSAVEAREA);                      0077
TPUTTER  DS    0H                                                  0078
*       RESPECIFY (BUFPTR,BUFLGTH) RESTRICTED;                     0078
*       R1 = BUFPTR;              /* ADDRESS OF MESSAGE TEXT         */
         LR    R1,BUFPTR                                           0079
*       R0 = BUFLGTH;             /* LENGTH OF MESSAGE TEXT          */
         LR    R0,BUFLGTH                                          0080
*       GEN(TPUT (1),(0),TJID=(3));                                0081
         TPUT (1),(0),TJID=(3)
*       RESPECIFY (R15) RESTRICTED;                                0082
*       IF R15 ^= 0 THEN          /* BAD RETURN CODE?                */
         LTR   R15,R15                                             0083
         BZ    @RF00083                                            0083
*          DO;                    /* YES                             */
*           RESPECIFY (R15) UNRESTRICTED;                          0085
*           R1 = BUFPTR;          /* REINITIALIZE FOR RETRY          */
         LR    R1,BUFPTR                                           0086
*           R0 = BUFLGTH;         /* REINITIALIZE FOR RETRY          */
         LR    R0,BUFLGTH                                          0087
*           GEN(TPUT (1),(0),TJID=(3));                            0088
         TPUT (1),(0),TJID=(3)
*           RESPECIFY (R15) RESTRICTED;                            0089
*           IF R15 ^= 0 THEN      /* BAD RETURN CODE FROM RETRY?     */
         LTR   R15,R15                                             0090
         BZ    @RF00090                                            0090
*              DO;                                                 0091
*               RETCODE = R15;    /* SAVE RETURN CODE */           0092
         ST    R15,RETCODE(,PARMBASE)                              0092
*               RETURN TO GOBACK; /* YES, IEECB800 RETURN CODE       */
         LA    @14,GOBACK                                          0093
@EL00002 DS    0H                                                  0093
@EF00002 DS    0H                                                  0093
@ER00002 BR    @14                                                 0093
*              END;                                                0094
*           ELSE;                                                  0095
@RF00090 DS    0H                                                  0096
*          END;                   /* NO, RETURN TO MAIN LINE         */
*       ELSE;                                                      0097
@RF00083 DS    0H                                                  0098
*       RETURN;                   /* NO ERROR, RETURN TO MAIN LINE   */
         B     @EL00002                                            0098
*END TPUTTER;                                                      0099
*/*********************************************************************
**                            WTO SUBROUTINE                          *
**   CALLED EACH TIME A BLOCK OF LINES OF THE MLWTO IS TO BE ISSUED.  *
**      ( 1 TO A MAXIMUM OF 10 LINES)                                 *
**   INPUT TO SUBROUTINE:                                             *
**     WPLPTR POINTS TO MESSAGE TEXT BUFFER CONTAINING THE BLOCK OF   *
**            LINES BUILD BY IEECB800                                 *
**     MLID: FIRST ENTRY: CONTAINS 000000ID (3 BYTES OF ZERO PLUS     *
**                        THE CONSOLE ID IN THE LOWER-ORDER BYTES)    *
**           SUBSEQUENT ENTRIES: MLID CONTAINS MLWTOIDXX (3 HI-ORDER  *
**                        BYTES CONTAIN MLWTO ID WITH INSIGNIFICANT   *
**                        4TH BYTE)                                   *
**   INPUT TO WTO SVC:                                                *
**     R0 CONTAINS MLID                                               *
**     R1 CONTAINS ADDRESS OF LINES TO BE ISSUED                      *
**   OUTPUT FROM WTO SVC:                                             *
**     R1 AFTER 1ST WTO WILL CONTAIN THE MLWTO ID IN LOWER-ORDER 3    *
**     BYTES                                                          *
**   IF AN ERROR OCCURS IN WTO, CONTROL IS IMMEDIATELY RETURNED TO    *
**   IEECB800 WITH THE RETURN CODE IN RETCODE. OTHERWISE CONTROL  IS  *
**   RETURNED TO IEECB800                                             *
**********************************************************************/
*WTOER:  PROC OPTIONS (NOSAVE,NOSAVEAREA);                         0100
WTOER    DS    0H                                                  0101
*        R0 = MLID;                 /* GET MLWTO ID                */
         L     R0,MLID(,PARMBASE)                                  0101
*        R1 = WPLPTR;               /* GET MESSAGE BUFFER ADDRESS  */
         LR    R1,WPLPTR                                           0102
*        GEN(WTO  MF=(E,(1)));                                     0103
         WTO  MF=(E,(1))
*        RETCODE = R15;             /* SAVE RETURN CODE FROM WTO */
         ST    R15,RETCODE(,PARMBASE)                              0104
*        RETURN;                    /* NO, RETURN TO MAIN LINE     */
@EL00003 DS    0H                                                  0105
@EF00003 DS    0H                                                  0105
@ER00003 BR    @14                                                 0105
*END WTOER;                                                        0106
*END IEECB801                                                      0107
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.      *
*/*%INCLUDE SYSLIB  (IEECHAIN)                                        *
*/*%INCLUDE SYSLIB  (IEZWPL  )                                        *
*;                                                                 0107
@DATA    DS    0H
@CH00041 DC    H'4'
@DATD    DSECT
         DS    0F
@PC00001 DS    1F
IEECB801 CSECT
         DS    0F
@DATD    DSECT
         DS    0D
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
IEECB801 CSECT
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
         DS    0D
PATCH    DC    CL50'PATCH AREA - IEECB801'
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
CSCBPTR  EQU   @02
WPLPTR   EQU   @04
R0       EQU   @00
R1       EQU   @01
R3       EQU   @03
BUFPTR   EQU   @05
R6       EQU   @06
BUFLGTH  EQU   @07
COUNT    EQU   @08
PARMBASE EQU   @09
R11      EQU   @11
R12      EQU   @12
R14      EQU   @14
R15      EQU   @15
R10      EQU   @10
R13      EQU   @13
CHAIN    EQU   0
CHFLG    EQU   CHAIN+4
CHSTS    EQU   CHFLG+2
CHACT    EQU   CHFLG+3
CHKEY    EQU   CHAIN+8
CHPKE    EQU   CHAIN+28
CHUCMP   EQU   CHAIN+29
CHTJID   EQU   CHAIN+30
CHASID   EQU   CHTJID
CHPROCSN EQU   CHAIN+32
CHACT1   EQU   CHPROCSN+3
CHASM    EQU   CHAIN+40
CHCIBP   EQU   CHASM+4
CHRGNSZ  EQU   CHASM+8
CHSTEP   EQU   CHASM+24
CHSWT    EQU   CHSTEP
CHSHORT  EQU   CHASM+32
WPLRF    EQU   0
WPLRPTR  EQU   WPLRF
WPL      EQU   0
WPLLGH   EQU   WPL
WPLMCSF  EQU   WPL+2
WPLMCSF1 EQU   WPLMCSF
WPLMCSF2 EQU   WPLMCSF+1
WPLTXT   EQU   WPL+4
WPLFLGS  EQU   0
WPLDESC  EQU   WPLFLGS
WPLDESC1 EQU   WPLDESC
WPLDESC2 EQU   WPLDESC+1
WPLROUT  EQU   WPLFLGS+2
WPLROUT1 EQU   WPLROUT
WPLROUT2 EQU   WPLROUT+1
WPLMSGTY EQU   WPLFLGS+4
WPLMSGT1 EQU   WPLMSGTY
WPLMSGT2 EQU   WPLMSGTY+1
WPLLS01  EQU   0
WPLLTF   EQU   WPLLS01
WPLLTF1  EQU   WPLLTF
WPLLINES EQU   WPLLS01+3
WPLML    EQU   0
WPLMLLEN EQU   WPLML+1
WPLMLLTF EQU   WPLML+2
WPLMLLT1 EQU   WPLMLLTF
PARMLIST EQU   0
CSCBADDR EQU   PARMLIST
MESSADDR EQU   PARMLIST+4
MLID     EQU   PARMLIST+8
MLWTOID  EQU   MLID
CONSOLID EQU   MLID+3
RETCODE  EQU   PARMLIST+12
MSGFLAGS EQU   PARMLIST+16
CSCBFLAG EQU   MSGFLAGS
NOUPFLAG EQU   MSGFLAGS
FIRSTIME EQU   MSGFLAGS
DMY      EQU   0
CHAINS01 EQU   CHASM
CHTYPE   EQU   CHAINS01+124
CHTRSTAT EQU   CHAINS01+125
CHCNID   EQU   CHAINS01+126
CHCSYSO  EQU   CHAINS01+134
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
CHLAST   EQU   CHAINS01+136
CHSPA    EQU   CHAINS01+135
CHUSERID EQU   CHCSYSO
CHJB     EQU   CHCSYSO
CHDUMP   EQU   CHCSYSO
CHQUE    EQU   CHCSYSO
CHHOLD   EQU   CHCSYSO
CHOUT    EQU   CHCSYSO
CHINN    EQU   CHCSYSO
CHALL    EQU   CHCSYSO
CHINC    EQU   CHAINS01+132
CHPEND   EQU   CHAINS01+128
CHARID   EQU   CHAINS01+127
@NM00004 EQU   CHTRSTAT
CHTSL    EQU   CHTRSTAT
CHTS     EQU   CHTRSTAT
CHINITL  EQU   CHTRSTAT
CHINIT   EQU   CHTRSTAT
CHJOBSL  EQU   CHTRSTAT
CHJOBS   EQU   CHTRSTAT
CHDEF    EQU   CHTYPE
CHHIAR   EQU   CHTYPE
CHARSV29 EQU   CHTYPE
CHARSV28 EQU   CHTYPE
CHARSV27 EQU   CHTYPE
CHARSV26 EQU   CHTYPE
CHARSV25 EQU   CHTYPE
CHDSTAT  EQU   CHTYPE
CHBUF    EQU   CHAINS01
WPLMLTXT EQU   WPLML+4
WPLMLLT2 EQU   WPLMLLTF+1
WPLRSV24 EQU   WPLMLLT1
WPLRSV23 EQU   WPLMLLT1
WPLRSV22 EQU   WPLMLLT1
WPLRSV21 EQU   WPLMLLT1
WPLMLLTD EQU   WPLMLLT1
WPLMLLTC EQU   WPLMLLT1
WPLMLLTB EQU   WPLMLLT1
WPLMLLTA EQU   WPLMLLT1
WPLML0   EQU   WPLML
WPLAREA  EQU   WPLLS01+2
WPLLTF2  EQU   WPLLTF+1
WPLRSV20 EQU   WPLLTF1
WPLRSV19 EQU   WPLLTF1
WPLRSV18 EQU   WPLLTF1
WPLRSV17 EQU   WPLLTF1
WPLLTFD  EQU   WPLLTF1
WPLLTFC  EQU   WPLLTF1
WPLLTFB  EQU   WPLLTF1
WPLLTFA  EQU   WPLLTF1
WPLQID   EQU   WPLFLGS+6
WPLRSV32 EQU   WPLMSGT2
WPLRSV31 EQU   WPLMSGT2
WPLRSV30 EQU   WPLMSGT2
WPLRSV29 EQU   WPLMSGT2
WPLRSV28 EQU   WPLMSGT2
WPLRSV27 EQU   WPLMSGT2
WPLRSV26 EQU   WPLMSGT2
WPLRSV25 EQU   WPLMSGT2
WPLRSV16 EQU   WPLMSGT1
WPLRSV15 EQU   WPLMSGT1
WPLMSGTF EQU   WPLMSGT1
WPLRSV14 EQU   WPLMSGT1
WPLMSGTD EQU   WPLMSGT1
WPLMSGTC EQU   WPLMSGT1
WPLMSGTB EQU   WPLMSGT1
WPLMSGTA EQU   WPLMSGT1
WPLRSV13 EQU   WPLROUT2
WPLROUTO EQU   WPLROUT2
WPLROUTN EQU   WPLROUT2
WPLROUTM EQU   WPLROUT2
WPLROUTL EQU   WPLROUT2
WPLROUTK EQU   WPLROUT2
WPLROUTJ EQU   WPLROUT2
WPLROUTI EQU   WPLROUT2
WPLROUTH EQU   WPLROUT1
WPLROUTG EQU   WPLROUT1
WPLROUTF EQU   WPLROUT1
WPLROUTE EQU   WPLROUT1
WPLROUTD EQU   WPLROUT1
WPLROUTC EQU   WPLROUT1
WPLROUTB EQU   WPLROUT1
WPLROUTA EQU   WPLROUT1
WPLRSV12 EQU   WPLDESC2
WPLRSV11 EQU   WPLDESC2
WPLRSV10 EQU   WPLDESC2
WPLRSV09 EQU   WPLDESC2
WPLRSV08 EQU   WPLDESC2
WPLRSV07 EQU   WPLDESC2
WPLDESCJ EQU   WPLDESC2
WPLDESCI EQU   WPLDESC2
WPLDESCH EQU   WPLDESC1
WPLDESCG EQU   WPLDESC1
WPLDESCF EQU   WPLDESC1
WPLDESCE EQU   WPLDESC1
WPLDESCD EQU   WPLDESC1
WPLDESCC EQU   WPLDESC1
WPLDESCB EQU   WPLDESC1
WPLDESCA EQU   WPLDESC1
WPLTXTL  EQU   WPLTXT+125
@NM00005 EQU   WPLTXT
WPLRSV05 EQU   WPLMCSF2
WPLRSV04 EQU   WPLMCSF2
WPLMCSFN EQU   WPLMCSF2
WPLRSV03 EQU   WPLMCSF2
WPLNOWTP EQU   WPLMCSF2
WPLMCSFK EQU   WPLMCSF2
WPLMCSFJ EQU   WPLMCSF2
WPLMCSFI EQU   WPLMCSF2
WPLMCSFH EQU   WPLMCSF1
WPLMCSFG EQU   WPLMCSF1
WPLMCSFF EQU   WPLMCSF1
WPLMCSFE EQU   WPLMCSF1
WPLMCSFD EQU   WPLMCSF1
WPLMCSFC EQU   WPLMCSF1
WPLMCSFB EQU   WPLMCSF1
WPLMCSFA EQU   WPLMCSF1
WPLRECB  EQU   WPLRF+4
WPLRPTRA EQU   WPLRPTR+1
WPLRLN   EQU   WPLRPTR
CHARSV16 EQU   CHSHORT+100
CHARSV15 EQU   CHSHORT+96
CHJSCBVS EQU   CHSHORT+92
CHUSCVS  EQU   CHSHORT+88
@NM00003 EQU   CHSHORT+84
@NM00002 EQU   CHSHORT+80
CHSQA    EQU   CHSHORT+44
CHQPA    EQU   CHSHORT+8
CHJCL    EQU   CHSHORT+4
CHSPC    EQU   CHSHORT
CHSPB    EQU   CHSTEP+4
CHTCB    EQU   CHSTEP+1
CHARSV23 EQU   CHSWT
CHARSV22 EQU   CHSWT
CHARSV21 EQU   CHSWT
CHAC     EQU   CHSWT
CHPSF    EQU   CHSWT
CHPSD    EQU   CHSWT
CHJCT    EQU   CHSWT
CHARSV20 EQU   CHSWT
CHCECB   EQU   CHASM+20
CHECB    EQU   CHASM+16
CHRGNAD  EQU   CHASM+12
CHARSV18 EQU   CHRGNSZ+1
CHRPRTY  EQU   CHRGNSZ
@NM00001 EQU   CHCIBP
CHEND    EQU   CHCIBP
CHECBP   EQU   CHASM
CHDER    EQU   CHPROCSN+4
CHARSV10 EQU   CHACT1
CHARSV09 EQU   CHACT1
CHARSV08 EQU   CHACT1
CHARSV07 EQU   CHACT1
CHARSV06 EQU   CHACT1
CHARSV05 EQU   CHACT1
CHARSV04 EQU   CHACT1
CHRDWTR  EQU   CHACT1
CHARSV30 EQU   CHPROCSN+2
CHQID    EQU   CHPROCSN
CHTRKID  EQU   CHPKE
CHCIBCTR EQU   CHAIN+27
CHUNIT   EQU   CHAIN+24
CHCLS    EQU   CHAIN+16
CHPARM   EQU   CHKEY
CHIFY    EQU   CHACT
CHAIFX   EQU   CHACT
CHCLD    EQU   CHACT
CHCL     EQU   CHACT
CHDSI    EQU   CHACT
CHDISC   EQU   CHACT
CHTERM   EQU   CHACT
CHSWAP   EQU   CHACT
CHABTERM EQU   CHSTS
CHFC     EQU   CHSTS
CHDL     EQU   CHSTS
CHAD     EQU   CHSTS
CHQSPC   EQU   CHSTS
CHSOUT   EQU   CHSTS
CHSYS    EQU   CHSTS
CHAP     EQU   CHSTS
CHSZE    EQU   CHFLG+1
CHVCD    EQU   CHFLG
CHPTR    EQU   CHAIN
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@ENDDATA EQU   *
         END   IEECB801,(C'PLS2035',0701,75325)
