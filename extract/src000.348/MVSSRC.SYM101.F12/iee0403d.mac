**********************************************************************
* MODULE NAME     = IEE0403D                                   Y02669*
*                                                              Y02669*
* DESCRIPTIVE NAME= ROUTES COMMANDS TO PROCESSOR MODULES       Y02669*
*                                                              Y02669*
* COPYRIGHT       = MISSING                                    Y02669*
*                                                              Y02669*
* STATUS          = OS/VS2 DUMPING IMPROVEMENTS              @G33CPMR*
*                                                              Y02669*
* FUNCTION        = THIS MODULE SCANS THE COMMAND, IDENTIFIES  Y02669*
*                   THE VERB AND VERIFIES THE COMMAND          Y02669*
*                   AUTHORITY.  IT THEN BRANCHES TO THE        Y02669*
*                   APPROPRIATE PROCESSING ROUTINE.            Y02669*
*                                                              Y02669*
* OPERATION       = TO FIND OUT IF THIS IS A SUBSYSTEM CMD,    Y02669*
*                   THIS MODULE CREATES A SSOB (SUBSYSTEM      Y02669*
*                   OPTION BLOCK) AND A SSIB (SUBSYSTEM        Y02669*
*                   INFORMATION BLOCK) WHICH ARE BOTH          Y02669*
*                   INITIALIZED. THE SSOB POINTS TO THE SSIB   Y02669*
*                   AND REGISTER 1 POINTS TO A FULL WORD WHICH Y02669*
*                   POINTS TO THE SSOB. REGISTER 13 POINTS TO  Y02669*
*                   A REGISTER SAVE AREA.                      Y02669*
*                                                              Y02669*
*                   THE MASTER SUBSYSTEM PROCESSOR DETERMINES  Y02669*
*                   WHETHER THE COMMAND BELONGS TO A SUBSYSTEM.Y02669*
*                   IF IT DOES, CONTROL IS GIVEN BACK TO THIS  Y02669*
*                   MODULE WHICH IMMEDIATELY RETURNS TO        Y02669*
*                   THE CALLER. IF THIS COMMAND BELONGS TO     Y02669*
*                   SVC34 WE CONTINUE PROCESSING WHEN CONTROL  Y02669*
*                   IS PASSED BACK.                            Y02669*
*                                                              Y02669*
*                   UPON RETURN FROM THE SUBSYSTEM INTERFACE  @ZA03236
*                   BIT XASSDS4 IS CHECKED TO DETERMINE IF    @ZA03236
*                   THE CMD SHOULD POSSIBLY BE HARDCOPIED NOW @ZA03236
*                   XASSDS4 IS SET BY IEE5403D IF THIS CMND   @ZA03236
*                   WAS NOT WRITTEN TO HARDCOPY BECAUSE IT    @ZA03236
*                   STARTED WITH A NUMBER. IF XASSDS4 IS ON & @ZA03236
*                   THE CMND WAS NOT CHANGED TO A REPLY CMND  @ZA03236
*                   BY THE SUBSYSTEM IT WILL BE WRITTEN TO    @ZA03236
*                   HARDCOPY NOW. IF THE COMMAND WAS CHANGED  @ZA03236
*                   TO A REPLY, IT WILL BE WRITTEN TO HARDCPY @ZA03236
*                   DURING REPLY PROCESSING.                  @ZA03236
*                                                             @ZA03236
*                   THE VERB LENGTH IS DETERMINED AND THE VERB Y02669*
*                   MOVED INTO THE XAV FIELD OF THE XSA.  THE  Y02669*
*                   XAE FIELD OF THE XSA IS CHECKED TO SEE     Y02669*
*                   IF IEE5403D FLAGGED ANY CHARACTERS AS      Y02669*
*                   INVALID. IF SO A BRANCH IS TAKEN TO MSG    Y0266J*
*                   MODULE IEE0503D WHICH PUTS OUT THE ERROR   Y02669*
*                   MESSAGE 'IEE298I (VERB) INVALID CHARACTERS'Y02669*
*                   AND THEN RETURN TO THE CALLER.             Y02669*
*                                                              Y02669*
*                   THE BUFFER IS NEXT SCANNED FOR THE         Y02669*
*                   BEGINNING OF THE PARAMETER LIST.  IF FOUND Y02669*
*                   IT'S ADDRESS IS PLACED INTO THE XAL FIELD  Y02669*
*                   OF THE XSA.  IF NOT FOUND THEN THE XAL     Y02669*
*                   IS ZEROED OUT.                             Y02669*
*                                                              Y02669*
*                   NEXT THE POSSIBLE VERB IS MATCHED WITH     Y02669*
*                   A TABLE OF VERBS.  IF THE VERB CANNOT BE   Y02669*
*                   IDENTIFIED A BRANCH IS TAKEN TO            Y02669*
*                   MODULE IEE0503D WHICH PUTS OUT THE ERROR   Y02669*
*                   MESSAGE 'IEE305I (VERB) COMMAND INVALID'.  Y02669*
*                   IT THEN RETURNS TO THE CALLER. IF THE VERB Y02669*
*                   IS VALID IT CHECKS THE COMMAND AUTHORITY.  Y02669*
*                                                              Y02669*
*                   IF THE FLAG IN THE TABLE OF VERBS        @G17SPTJ*
*                   INDICATES THAT THE COMMAND IS SU         @G17SPTJ*
*                   DEPENDENT, A TEST IS MADE TO ENSURE THAT @G17SPTJ*
*                   THE SYSTEM SUPPORTS THE COMMAND IN       @G17SPTJ*
*                   QUESTION.  IF THIS IS NOT THE CASE, AN   @G17SPTJ*
*                   'IEE026I (VERB) NOT SUPPORTED' ERROR     @G17SPTJ*
*                   MESSAGE IS ISSUED.                       @G17SPTJ*
*                                                            @G17SPTJ*
*                   IF THE COMMAND WAS ISSUED BY AN INTERNAL   Y02669*
*                   SYSTEM ROUTINE THEN NO AUTHORITY IS        Y02669*
*                   NEEDED AND WE BRANCH TO THE CORRECT        Y02669*
*                   PROCESSOR MODULE.                          Y02669*
*                                                              Y02669*
*                   IF AN UNAUTHORIZED COMMAND IS ISSUED THRU  Y02669*
*                   THE INPUT STREAM, WE BRANCH TO MESSAGE     Y02669*
*                   MODULE IEE0503D WHICH PUTS OUT THE ERROR   Y02669*
*                   MESSAGE 'IEE345I (VERB) AUTHORITY INVALID'.Y02669*
*                   THEN RETURNS TO  THE CALLER.  IF AN        Y02669*
*                   AUTHORIZED COMMAND IS ISSUED THRU THE      Y02669*
*                   INPUT STREAM  WE CHECK IF IT IS THE VARY   Y02669*
*                   COMMAND.  IF NOT, WE ZERO THE XAU FIELD    Y02669*
*                   OF THE XSA OTHERWISE WE LEAVE IT ALONE.    Y02669*
*                                                              Y02669*
*                   IF THE COMMAND WAS ISSUED WITH AN INVALID  Y02669*
*                   CONSOLE ID OR IS NOT AUTHORIZED            Y02669*
*                   TO ISSUE THE COMMAND, IT BRANCHES TO THE   Y02669*
*                   MESSAGE MODULE IEE0503D WHICH PUTS OUT THE Y02669*
*                   ERROR MESSAGE 'IEE345I (VERB) AUTHORITY    Y02669*
*                   INVALID'. IT THEN RETURNS TO THE CALLER.   Y02669*
*                                                              Y02669*
*                   IF THE USER IS AUTHORIZED TO ISSUE THE     Y02669*
*                   COMMAND, WE BRANCH TO THE APPROPRIATE      Y02669*
*                   COMMAND PROCESSOR                          Y02669*
*                                                              Y02669*
* NOTES:                                                       Y02669*
*   CHARACTER-CODE= THIS MODULE HAS BEEN WRITTEN IN SUCH A     Y02669*
*                   WAY THAT, IF THE CHARACTER CODE IS         Y02669*
*                   CHANGED FROM EBCDIC, REASSEMBLY WILL       Y02669*
*                   YIELD A VALID MODULE.                      Y02669*
*   DEPENDENCIES  = IEE5403D                                   Y02669*
*                   A SU TABLE (IHASUBIT) REFLECTING THE     @G17SPTJ*
*                   SU'S INSTALLED ON THIS SYSTEM.           @G17SPTJ*
*   RESTRICTIONS  = NONE                                       Y02669*
*   REGISTER-                                                  Y02669*
*    CONVENTIONS  = NONE                                       Y02669*
*   PATCH-LABEL   = PATCH                                      Y02669*
*                                                              Y02669*
* MODULE TYPE     = CSECT                                      Y02669*
*   PROCESSOR     = ASSEMBLER                                  Y02669*
*   MODULE SIZE   = X'586'                                   @G33CPMR*
*   ATTRIBUTES    = PAGED LPA,ZERO PSW PROTECT KEY,REFRESHABLE Y02669*
*                   SUPERVISOR MODE                            Y02669*
*                                                              Y02669*
* ENTRY POINT     = IEE0403D                                   Y02669*
*   PURPOSE       = ROUTES COMMAND TO CORRECT PROCESSOR.       Y02669*
*   LINKAGE       = BRANCH FROM IEE5403D                       Y02669*
*   INPUT DATA    = REG 1 POINTS TO COMMAND INPUT BUFFER       Y02669*
*                   REG0 CONTAINS SOURCE OF COMMAND            Y02669*
*                   REG 2 POINTS TO THE XSA                    Y02669*
*                   XAL IN XSA POINTS TO THE VERB              Y02669*
*                   XAU IN XSA CONTAINS CONSOLE ID OR X'00'    Y02669*
*                   XASSDS4 ON IF CMND STARTS WITH A NUMBER   @ZA03236
*                                                              Y02669*
* REGISTERS SAVED =                                            Y02669*
* REGISTER CONTENTS DURING                                     Y02669*
*   PROCESSING    = REG 0 - UCM POINTER                        Y02669*
*                   REG 1 - COMMAND INPUT BUFFER               Y02669*
*                   REG 2 - XSA                                Y02669*
*                   REG 3 - CVT                                Y02669*
*                   REG 4 - WORK REGISTER                      Y02669*
*                   REG 5 - WORK REGISTER                      Y02669*
*                   REG 6 - SCAN REGISTER                      Y02669*
*                   REG 7 - (OPEN)                             Y02669*
*                   REG 8 - SCAN REGISTER                      Y02669*
*                   REG 9 - WORK REGISTER                      Y02669*
*                   REG 10- (OPEN)                             Y02669*
*                   REG 11- VERB TABLE POINTER                 Y02669*
*                            AND SU TABLE POINTER            @G17SPTJ*
*                   REG 12- BASE REGISTER                      Y02669*
*                   REG 13- WORK REGISTER                      Y02669*
*                   REG 14- RETURN REGISTER                    Y02669*
*                   REG 15- LINK REGISTER                      Y02669*
* REGISTERS                                                    Y02669*
*   RESTORED      = NONE                                       Y02669*
*                                                              Y02669*
* EXIT - NORMAL   = IEE9403D - ASSIGN                         @Y30LPSZ
*                   IEE3703D - CANCEL                          Y02669*
*                   IEE7503D - CONTROL                         Y02669*
*                   IEEMB815 - CHNGDUMP                        Y02669*
*                   IEE3503D - DISPLAY                         Y02669*
*                   IEE0803D - DUMP                            Y02669*
*                   IEE3703D - FORCE                         @G17FPSS*
*                   IEE1403D - HALT                            Y02669*
*                   IEE0803D - HOLD                            Y02669*
*                   IEE1603D - LOG CM'D PROCESSOR              Y02669*
*                   IEE0803D - LOGON                           Y02669*
*                   IGF2603D - MODE                            Y02669*
*                   IEE0703D - MODIFY                          Y02669*
*                   IEE7103D - MONITOR                         Y02669*
*                   IEE0803D - MOUNT                           Y02669*
*                   IEE6303D - MSGRT                           Y02669*
*                   IEE0803D - PAGEADD                        @Z40WPSS
*                   IEE9403D - PURGE                          @Y30LPSZ
*                   IEE0803D - QUIESCE                         Y02669*
*                   IEE0803D - RELEASE                         Y02669*
*                   IEE0803D - RESET                           Y02669*
*                   IEAVVRP1 - REPLY                           Y02669*
*                   IEE0803D - START                           Y02669*
*                   IEE0603D - SET                             Y02669*
*                   IEE0803D - SLIP                          @G17SPTJ*
*                   IEE0703D - STOP                            Y02669*
*                   IEE8603D - SETDMN                        @Z40BPSV*
*                   IEE7503D - STOPTR                          Y02669*
*                   IKJ5803D - SEND                            Y02669*
*                   IEE5503D - STOPMN                          Y02669*
*                   IGF2503D - SWAP                            Y02669*
*                   IEE1403D - SWITCH                          Y02669*
*                   IEE1403D - TRACE                           Y02669*
*                   IEE3503D - TRACK                           Y02669*
*                   IEE0803D - UNLOAD                          Y02669*
*                   IEE3203D - VARY                            Y02669*
*                   IEE1603D - WRITE LOG                       Y02669*
*   CONDITIONS    = VALID VERB                                 Y02669*
*   OUTPUT DATA   = REGISTER 2 POINTS TO THE XSA               Y02669*
*                   XAL FIELD CONTAINS POINTER TO PARM LIST.   Y02669*
*                   XAU FIELD CONTAINS CONSOLE ID              Y02669*
*                   XAN FIELD CONTAINS VERB ID                 Y02669*
*                   XASSDS4 TURNED OFF                        @ZA03236
*   RETURN CODE   = NONE                                       Y02669*
*                                                              Y02669*
* EXIT - ERROR    = IEE0503D                                   Y02669*
*   CONDITIONS    = INVALID VERB     -XAE FIELD OF XSA - X'05' Y02669*
*                   INVALID AUTHORITY-XAE FIELD OF XSA - X'29' Y02669*
*                   INVALID CHARACTER-XAE FIELD OF XSA - X'2B' Y02669*
*   OUTPUT DATA   = REG 2 POINTS TO XSA                        Y02669*
*   RETURN CODE   = NONE                                       Y02669*
*                                                              Y02669*
* EXTERNAL                                                     Y02669*
*   REFERENCES    =                                            Y02669*
*   ROUTINES      = IEE0503D (MESSAGE MODULE)                  Y02669*
*   DATA AREAS    = COMMAND BUFFER                             Y02669*
*   CONTROL BLOCKS= EXTENDED SAVE AREA (XSA) - R,W,C           Y02669*
*                   UNIT CONTROL MODULE (UCM)- R,C             Y02669*
*                   SUBSYSTEM OPTION BLK (SSOB) - R,W          Y02669*
*                   SUBSYSTEM INFO BLK (SSIB)  - R,W           Y02669*
*                   JESCT - R                                  Y02669*
*                   SU TABLE (IHASUBIT) - R                  @G17SPTJ*
*   TABLES        = TABLE OF CORRECT VERBS                     Y02669*
*   MACRO         = GETMAIN/FREEMAIN,IEFSSREQ                  Y02669*
*   ENQUEUED                                                   Y02669*
*    RESOURCES    = NONE                                       Y02669*
*   LOCKS         =                                            Y02669*
*   CHANGE LEVEL  = Y02669,Y02651,Y02668,Y30LPSZ, ZA03236,           *
*                   Z40WPSS, Z40BPSV, G17FPSS, G17SPTJ       @G17SPTJ*
*                   G33CPMR                                  @G33CPMR*
*                                                              Y02669*
* SYSGEN          = THIS MODULE IS INCLUDED IN LOAD MODULE     Y02669*
*                   IGC0003D AND LOADED INTO LPALIB. IT IS     Y02669*
*                   INCLUDED AT SYSGEN TIME FROM DLIB AOSB3    Y02669*
*                   USING SYSGEN MACRO SGIEF441.               Y02669*
*                                                              Y02669*
* SYSTEM LIBRARIES= NONE                                       Y02669*
* MESSAGES        = IEE345I (VERB) AUTHORITY INVALID           Y02669*
*                   IEE305I (VERB) COMMAND INVALID             Y02669*
*                   IEE298I (VERB) INVALID CHARACTERS          Y02669*
*                   IEE026I (VERB) NOT SUPPORTED             @G17SPTJ*
**********************************************************************
         TITLE ' EXTENDED SAVE AREA'
DSXSA    DSECT
         IEEXSA
         TITLE ' COMMAND SCHEDULER , INITIATION'
CVT      DSECT                                                   Y01012
         CVT
         TITLE ' UNIT CONTROL MODULE'                              SMCS
UUCM     DSECT                                                   Y01012
         IEECUCM
         TITLE 'SSIB'
         IEFJSSIB                                                Y02669
         TITLE 'SSOB'
         IEFJSSOB  CM                                            Y02669
         TITLE 'IEFJESCT'
         IEFJESCT                                                Y02669
         TITLE 'IHASUBIT'
         IHASUBIT
         TITLE 'IEE0403D ROUTER ROUTINE'                         Y02669
IEE0403D CSECT
         SPACE
* D 048655-048661                                              @YM6321P
* A 048680-048727,049303-049323                                @YM6321P
R        EQU   2   XSA ADDRESSABILITY REGISTER
R3       EQU   3    BASE REGISTER FOR MODULE
RX       EQU   4   WORK REGISTER
RV       EQU   5   WORK REGISTER
RNCA     EQU   6    INCREMENTING REG
RND      EQU   7   PTR TO END OF BUFFER
RNCB     EQU   8                                                  21002
RLN      EQU   9                                                  21002
RCORE    EQU   10                                                 21002
R11      EQU   11                                                 21002
R12      EQU   12   REG 12
R13      EQU   13   REG 13
R2       EQU   2                                                  21002
RD       EQU   13                                                 21002
R14      EQU   14   REG14
R15      EQU   15   REG 15
REG1     EQU   1   PASSREG PTR TO PARAMETER LIST
REG0     EQU   0    PASSREG0 FOR FREEMAIN
REG2     EQU   2
REG3     EQU   3
REG4     EQU   4
REG5     EQU   5
REG6     EQU   6
REG7     EQU   7
REG8     EQU   8
REG9     EQU   9
REG10    EQU   10
REG11    EQU   11
REG12    EQU   12
REG13    EQU   13
REG14    EQU   14
REG15    EQU   15
R1       EQU   1
R8       EQU   8
R9       EQU   9
         SPACE
X0       EQU   0                        USED FOR OFFSETS,LENGTHS,ETC.
X1       EQU   1                        *
X2       EQU   2                        *
X3       EQU   3                        *
X8       EQU   8                        *
D0       EQU   0                                                   I272
D1       EQU   1                                                 Y01120
D3       EQU   3                                                   I272
D4       EQU   4
D2       EQU   2                                                  21002
X5       EQU   5                                                  21002
X15      EQU   15        USED TO TURN OFF ABREV BITS              21002
LENSSIB  EQU   20
LENSSOB  EQU   20
D28      EQU   28
FUNCTION EQU   10
AUTHERR  EQU   41        ILLEGAL AUTHORITY ERROR INDICATION        SMCS
INVALID  EQU   X'2B'     MESSAGE CODE FOR IEE298I                Y01120
LOBYTES  EQU   7         MASK FOR ICM TO LOAD LOW ORDER TWO      Y01120
*                        BYTES OF REGISTER                       Y01120
MGCR     EQU   8         OFFSET OF HASP MGCR PROCESSOR           Y01120
*                        ENTRY POINT ADDR IN HASP CVT            Y01120
IEE707I  EQU   X'3C'     MESSAGE CODE FOR IEE707I                Y01120
         SPACE
VERBERR  EQU   5         ILLEGAL VERB ERROR INDIC.
BLANK    EQU   C' '      HEXADECIMAL 'BLANK' BYTE
CONID    EQU   X'00'                                               SMCS
XZERO    EQU   X'00'                                               SMCS
XEIGTY   EQU   X'80'                                               SMCS
XTWTY8   EQU   X'28'               VARY INDEX CODE                 TMCS
ERRCODE  EQU   43                       INVALID CHARACTER MSG CODE21432
REMOVE   EQU   X'0F'                   REMOVE SIGN FROM NO        21002
ABREV    EQU   X'C0'                   INDICATES TWO BYTE ABREV   21002
ONE      EQU   1                       INDICATES ONE BYTE ABREV   21002
PTR      EQU   4
HYBITON  EQU   X'80'
NEWCORE  EQU   SSIBSIZE+SSOBLEN7+PTR   CORE TO BE ZEROED         Y02669
HCPYFLG  EQU   X'0200'            WPL FLAGS FOR HCPY ONLY      @ZA03236
ALL      EQU   X'FF'              TURN OFF BITS                @ZA03236
SUTEST   EQU   X'20'              SU DEPENDENCY MASK BIT       @G17SPTJ
IEE026I  EQU   X'1A'              MESSAGE CODE FOR IEE026I     @G17SPTJ
         EJECT
         BALR  R12,0              ESTABLISH . . .                Y01120
         USING *,R12              . . .ADDRESSIBILITY            Y01120
         MODID BRANCH=YES                                        Y01886
         SPACE
         USING XSA,REG2
         EJECT
* CONTROL IS PASSED TO THE MASTER                                Y02669
* SUBSYSTEM PROCESSOR TO DETERMINE                               Y02669
* IF THE ENTERED COMMAND BELONGS                                 Y02669
* TO A SUBSYSTEM.                                                Y02669
*                                                                Y02669
* TO PASS CONTROL THE IEFSSREQ                                   Y02669
* MACRO IS ISSUED WITH REG 1                                     Y02669
* CONTAINING A POINTER TO AN SSOB.                               Y02669
* REGISTER 13 POINTS TO A REGISTER                               Y02669
* SAVE AREA.                                                     Y02669
         SPACE
GOJES2   EQU   *                                                 Y02669
         SPACE
* CORE IS GOTTEN FOR THE SUBSYSTEM                               Y02669
* OPTION BLOCK (SSOB) AND SUBSYSTEM                              Y02669
* INFORMATION BLOCK (SSIB).                                      Y02669
         SPACE
         LR    REG4,REG1               SAVE PTR TO INPUT BUF     Y02669
         LR    REG6,REG0               SAVE CONSOLE ID           Y02669
         LR    REG7,REG14              SAVE CALLERS RETURN ADDR  Y02669
         XC    XAD(D4),XAD             CLEAR OUT ADDR RETURN LOC Y02669
         LA    REG1,XASAVSTD           GET ADDR TO MOVE GETMAIN  Y02669
*                                      LIST INTO                 Y02669
         MVC   D0(LISTLEN,REG1),LISTFORM MOVE IN LIST            Y02669
         LA    REG3,XAD                RETURN CORE ADDR HERE     Y02669
         ST    REG3,D4(REG1)           SAVE ADDR IN PARM LIST    Y02669
         GETMAIN MF=(E,(1))            GETCORE FROM SUBPOOL 255  Y02669
         LTR   REG15,REG15             DID WE GET THE CORE?      Y02669
         L     REG1,XAD                GET ADDR OF CORE IN REG1  Y02669
         BZ    GOTCORE                 ZERO RC MEANS OK          Y02669
         GETMAIN R,LV=NEWCORE,SP=245   TRY AGAIN FROM SP 245     Y02669
         EJECT
*    CLEAR GOTTEN CORE AND SET UP POINTERS   *
         SPACE
GOTCORE  EQU  *                                                  Y02669
         LR    REG0,REG6               RESTORE CONSOLE ID        Y02669
         XC    D0(NEWCORE,REG1),D0(REG1) ZERO OUT GOTTEN CORE    Y02669
         LA    REG3,D4(REG1)           POINT TO SSOB             Y02669
         ST    REG3,D0(REG1)           SAVE PTR TO SSOB          Y02669
         OI    D0(REG1),HYBITON        TURN ON HIGH ORDER BIT    Y02669
         USING SSOB,REG3               USE REG3 TO ADDRESS       Y02669
*                                      SSOB                      Y02669
         LA    REG6,SSOBLEN7(REG3)     GET ADDRESS OF SSIB       Y02669
*     INITIALIZE THE SSOB         *                              Y02669
         SPACE
         USING SSIB,REG6               ADDRESS SSIB WITH REG 6   Y02669
         ST    REG6,SSOBSSIB           SAVE SSIB PTR IN SSOB     Y02669
         MVC   SSOBID,SSOBNAME         MOVE THE NAME 'SSOB'      Y02669
*                                      INTO THE SSOB             Y02669
         MVI   SSOBLEN+1,SSOBHSIZ      MOVE IN LENGTH OF SSOB    Y02669
         MVI   SSOBFUNC+1,SSOBCMND     MOVE FUNCTION DESIRED     Y02669
*                                      INTO SSOB                 Y02669
         LA    REG10,SSCMBGN           GET ADDR OF SUB-SSOB      Y02669
*                                      BLOCK(FUNCTION BLOCK)     Y02669
         ST    REG0,SSCMSCID           PLACE UCM ID IN SSOB      Y02669
         ST    REG10,SSOBINDV          PLACE THIS PTR INTO       Y02669
*                                      THE SSOB                  Y02669
         ST    REG4,SSCMBUFF           PUT INPUT BUF PTR IN SSOB Y02669
         MVI   SSCMLEN+1,SSCMSIZE      MOVE IN LENGTH OF SUB BLK Y02669
         EJECT
*       INITIALIZE THE SSIB       *                              Y02669
         SPACE
         MVI   SSIBLEN+1,SSIBSIZE      MOVE IN LENGTH OF SSIB    Y02669
         MVC   SSIBSSNM,SUBNAME        MOVE SUBSYSTEM NAME       Y02669
         MVC   SSIBID,SSIBNAME         MOVE IN 'SSIB' INTO SSIB  Y02669
         ST    REG1,XASAVLOC           SAVE CORE LOCATION IN XSA Y02669
         LA    REG13,XASAVSTD          GET SAVEAREA PTR          Y02669
         IEFSSREQ                      ISSUE MACRO INTERFACE     Y02669
         EJECT
*       SET UP FOR FREEING CORE        *                         Y02669
         LR    REG6,REG15              SAVE RC IN REG 6        @ZA03236
         TM    XASSDS,XASSDS4          CMND NOT HARDCOPIED IN  @ZA03236
*                                       5403D BECAUSE NUMERIC? @ZA03236
         BNO   NOHCPY                  NO, DONT HARDCOPY NOW   @ZA03236
         NI    XASSDS,ALL-XASSDS4      RESET FLAG              @ZA03236
         CLC   D4(L'R,REG4),RBLK       CMND CHANGED TO REPLY   @ZA03236
*                                       BY SUBSYSTEM           @ZA03236
         BE    NOHCPY                  YES, DONT HARDCOPY      @ZA03236
         BAL   REG14,DOHCPY            HARDCOPY THE COMMAND    @ZA03236
NOHCPY   EQU   *                                               @ZA03236
         SPACE
         L     REG1,XASAVLOC           RESTORE ADDRESS OF CORE   Y02669
         LR    REG14,REG7              RESTORE CALLERS ADDR      Y02669
         L     REG3,SSOBRETN           SAVE RC FROM SSOB         Y02669
         L     REG0,SP255              GET LENGTH AND SP IN R0   Y02669
         L     REG15,XAD               IF SP255 THEN XAD         Y02669
*                                      CONTAINS CORE ADDR        Y02669
         LTR   REG15,REG15             IS IT SP255?              Y02669
         BNZ   FREECORE                IF ADDR FOUND THEN IT     Y02669
*                                      IS SUBPOOL 255            Y02669
         L     REG0,SP245              IF NOT FOUND THEN MUST    Y02669
*                                      BE SUBPOOL 245            Y02669
FREECORE EQU   *                                                 Y02669
         FREEMAIN R,LV=(0),A=(1)       FREE SSOB AND SSIB        Y02669
         SPACE
*        CHECK RETURN CODES            *                         Y02669
         SPACE
         LTR   REG6,REG6               CK FOR ZERO IN REG6       Y02669
         BNZ   SVC34CMD                IF NOT THEN SUBSYSTEM     Y02669
*                                      IS OUT SEE IF IT IS OURS  Y02669
*                                      IF 0 SUBSYSTEM IS         Y02669
*                                      FUNCTIONING, CK FURTHER   Y02669
*                                      TO DETERMINE ITS ACTION   Y02669
         B     TABLE(REG3)             USE BRANCH TABLE FOR RC   Y02669
TABLE    EQU   *                                                 Y02669
         B     SVC34CMD                NOT SUBSYSTEM CMD, OURS   Y02669
         B     D0(REG14)               SUBSYSTEM CMD WERE DONE   Y02669
         MVI   XAE,IEE707I             INVALID SUBSYSTEM CMD     Y02669
*                                      SETUP FOR ERROR MSG       Y02669
         EJECT
* SCAN VERB FOR BLANK DELIMITER
         SPACE
SVC34CMD EQU   *
         LR    REG1,REG4               RESTORE INPUT BUF PTR     Y02669
         L     REG4,XAL                GET PTR TO VERB           Y02669
         USING CVT,REG3               .CVT                       Y01120
         L     REG3,CVTPTR        . . .ADDRESSIBILITY            Y01120
         L     REG10,CVTMSER           INIT REG 10 WITH BASEA      SMCS
         L     REG7,XAP                GET ADDR OF BUF END +1    Y02669
         BCTR  REG7,0                  GET END OF BUFFER         Y02669
         SPACE
         LR    REG5,REG4               SAVE POINTER TO VERB      Y01012
         LA    REG8,X1                 INCREMENTING FACTOR       Y01012
         LR    REG6,REG8               USE FOR OPERAND SCAN      Y01012
         LA    REG9,8(REG4)        GET MAXIMUM VERB EXTENT ADDRESS
         CR    REG9,REG7           MAX. VERB EXT. ADDR. EXCEED BUFFER
         BNH   BTEST1              IF NOT, CONTINUE SCAN FOR BLANK
         LR    REG9,REG7           IF SO, LIMIT EXTENT TO BUFFER
BTEST1   CLI   D0(REG4),BLANK      IS THIS CHARACTER BLANK       I272
         BE    XDISCAN             IF SO, DISCONTINUE SCAN
         BXLE  REG4,REG8,BTEST1    IF NOT, GET NEXT BYTE
         EJECT
* MOVE THE VERB TO THE XSA VERB SLOT
         SPACE
XDISCAN  EQU   *
         LR    REG9,REG4               COMPUTE LENGTH OF VERB
         SR    REG9,REG5
         LR    REG1,REG9               LENGTH OF VERB             21002
         BCTR  REG1,0                  LENGTH OF VERB MINUS ONE   21002
         EX    REG1,XMVC               MOVE VERB TO XSA           21002
         EJECT
* CHECK IF ANY INVALID CHARACTERS WERE FOUND
         SPACE
         CLI   XAE,INVALID             INV CHAR FOUND BY 5403D   Y01120
         BE    GETMSG                  IF NOT THEN CONTINUE.     Y02669
         SPACE
*   CHECK IF AN INVALID SUBSYSTEM COMMAND
         SPACE
         CLI   XAE,IEE707I             COULD SUBSYSTEM PROCESS   Y02669
         BNE   TCOMP                   IF NOT THEN ALL IS WELL   Y02669
         SPACE
GETMSG   EQU   *                                                 Y02669
         L     REG15,VCON05            GET ADDRESS OF MSG MOD    Y02669
         BR    REG15                   BRANCH TO ISSUE MSG       Y02669
         SPACE
* CHECK IF AT END OF BUFFER OR A COMMENT
         SPACE
TCOMP    EQU   *
         CR    REG4,REG7               AT END OF THE BUFFER?      21432
         BNL   ENDBUF                  YES, THEN BRANCH
TBLANK2  EQU   *
         CLI   D0(REG4),BLANK          IS THIS CHARACTER BLANK     I272
         BNE   COMMENT                 NON-BLANK PARM FLD -       23321
         BXLE  REG4,REG6,TBLANK2       IF SO, CONTINUE SCAN
ENDBUF   EQU   *
         XR    REG15,REG15             ZERO PARM PTR              21002
*                                      (EITHER NULL PARM FLD      23321
*                                      OR JUST A COMMENT)         23321
         EJECT
*  SCAN TO APPROPRIATE VERB
         SPACE
STPTR    EQU   *                                                  21002
         ST    REG15,XAL               STORE PTR TO PARM LIST     21002
         XR    REG15,REG15             INITIALIZE FOR INDEXING   Y02669
         LA    REG11,VERBLEN           BEGINING OF TABLE          21002
         USING VERBLEN,R11                                        21002
         XR    REG6,REG6               LENGTH OF VERB ENTRY       21002
         LA    REG13,X15               USED TO TURN OFF ABREV BITS21002
XNDX     EQU   *
         IC    REG6,VERBLEN            LENGTH OF VERB ENTRY       21002
         NR    REG6,REG13              TURN OFF ABREV BITS        21002
         LTR   REG6,REG6               REACHED END OF TABLE       21002
         BZ    XERR                    AND NO ENTRY WAS FOUND     21002
         XR    REG8,REG8               INDICATOR FOR AVREV LEN    21002
         CR    REG9,REG6               IS THIS THE VERB ENTRY     21002
         BNE   ABREVIA                 NO, LENGTHS ARE NOT EQUAL  21002
         EX    REG1,VERBCOMP           IS THIS THE VERB           21002
         BE    XAUTH                   YES, CHECK CMD AUTHORITY   21002
ABREVIA  EQU   *
         AR    REG6,REG11              ADDRESS OF ABREVIATION     21002
         TM    VERBLEN,ABREV           FIND LEN OF ABREV          21002
         BZ    INCRMT                  NO ABREVIATION             21002
         BM    ABREVONE                ONE BYTE ABREV             21002
         LA    REG8,ONE                TWO BYTE ABREVIATION       21002
ABREVONE EQU   *
         LA    REG8,ONE(REG8)                                     21002
         CR    REG8,REG9               THIS THE LENGTH WE NEED   A60893
         BNE   INCRMT                  NO, DONT COMPARE,         A60893
*                                      GET NEXT TABLE ENTRY      A60893
         EX    R1,ABRECOMP             IS THIS THE ABREVIATION    21002
         BE    XAUTHA                  YES, CHECK AUTHORITY    @G17SPTJ
INCRMT   EQU   *
         TM    VERBLEN,SUTEST          COMMAND SU-DEPENDENT?   @G17SPTJ
         BNO   NOSUTEST                NO, SKIP NEXT INSTR.    @G17SPTJ
         LA    REG8,ONE(REG8)          YES, INCREMENT INDEX    @G17SPTJ
NOSUTEST EQU   *                                               @G17SPTJ
         LA    R11,X3(REG6,REG8)       ADDRESS OF NEXT ENTRY      21002
         LA    REG15,D4(REG15)         INCREMENT FOR INDEX       Y02669
         B     XNDX                    CHECK NEXT ENTRY            SMCS
COMMENT  EQU   *                       CHECK IF NON-BLANK PARM    23321
*                                      FIELD IS JUST A COMMENT    23321
         CLC   X0(X2,REG4),COMMAB      IS IT COMMA-BLANK          23321
         BE    ENDBUF                  YES, JUST A COMMENT        21002
         LR    REG15,REG4              SAVE PARM PTR              21002
         B     STPTR                   THERE MUST BE A PRRM       21002
* INVALID VERB ERROR FACILITY
         SPACE
XERR     EQU   *
         MVI   XAE,VERBERR             INSERT 1 BYTE ERROR
*                                      CODE IN XSA
         L     REG15,VCON05            GET MSG MOD ADDRESS       Y02669
         BR    REG15                   BRANCH TO ISSUE INVALID   Y02669
*                                      VERB MSG                  Y02669
         EJECT
*  COMMAND SOURCE AUTHORIZATION CHECKING
         SPACE
XAUTHA   EQU   *                                               @G17SPTJ
         TM    VERBLEN,SUTEST          COMMAND SU-DEPENDENT?   @G17SPTJ
         BNO   SUTESTED                NO, AVOID SU TESTING    @G17SPTJ
         B     SUCHECK                 YES, GET SU BIT         @G17SPTJ
XAUTH    EQU   *                                                 Y02669
         TM    VERBLEN,SUTEST          COMMAND SU-DEPENDENT?   @G17SPTJ
         BNO   SUTESTED                NO, AVOID SU TESTING    @G17SPTJ
         LA    REG8,VERBLEN            YES, SAVE COMMAND ADDR. @G17SPTJ
         TM    VERBLEN,ABREV           LENGTH OF ABBREVIATION? @G17SPTJ
         BZ    SUCHECK                 NONE, LEAVE ADDR. ALONE @G17SPTJ
         BM    ONEABREV                ONE, SKIP TO INDEX ONE  @G17SPTJ
         LA    REG8,ONE(REG8)          TWO, INDEX ONE NOW      @G17SPTJ
ONEABREV EQU   *                                               @G17SPTJ
         LA    REG8,ONE(REG8)          INDEX ADDRESS BY ONE    @G17SPTJ
SUCHECK  EQU   *                                               @G17SPTJ
         XR    REG4,REG4               CLEAR REGISTER          @G17SPTJ
         IC    REG4,X3(REG6,REG8)      GET THE SU NUMBER       @G17SPTJ
         L     R1,CVTIHASU             SET SU ADDRESSABILITY   @G17SPTJ
         USING SUBITS,R1                                       @G17SPTJ
         C     REG4,SIXFOUR            IS SU NUMBER BELOW 64?  @G17SPTJ
         BL    BELOW64                 YES, SKIP REDUCTION     @G17SPTJ
         LM    REG8,REG9,SUBYTE9       NO, SET 2ND 2 SU WORDS  @G17SPTJ
         S     REG4,SIXFOUR            REDUCE SU NUMBER BY 64  @G17SPTJ
         B     SHIFT                   SKIP NEXT INSTRUCTION   @G17SPTJ
BELOW64  EQU   *                                               @G17SPTJ
         LM    REG8,REG9,SUBYTE1       GET 1ST 2 SU WORDS      @G17SPTJ
SHIFT    EQU   *                                               @G17SPTJ
         LTR   REG4,REG4               IS IT SU 0 OR SU 64?    @G17SPTJ
         BZ    SHIFTED                 YES, AVOID SHIFTING     @G17SPTJ
LOOP     EQU   *                       NO, LOOP ACCORDING TO   @G17SPTJ
         SLDL  REG8,ONE                 SU NUMBER              @G17SPTJ
         BCT   REG4,LOOP               STOP SHIFTING WHEN ZERO @G17SPTJ
SHIFTED  EQU   *                                               @G17SPTJ
         LTR   REG8,REG8               SU INSTALLED ON SYSTEM? @G17SPTJ
         BM    SUTESTED                YES, VALID - PROCEED    @G17SPTJ
         MVI   XAE,IEE026I             NO, SET ERROR MSG. CODE @G17SPTJ
         B     GETMSG                  EXIT VIA MESSAGE MODULE @G17SPTJ
SUTESTED EQU   *                                               @G17SPTJ
         XR    REG4,REG4               CLEAR REGISTER            Y02669
         USING VERBLEN,R11                                       Y02669
         IC    REG4,VERBAUT            GET VERB AUTHORITY        Y02669
*                                      FROM VERB TABLE.          Y02669
         DROP  R11                                               Y02669
*
         IC    REG1,XAU                INSERT COMMAND SOURCE     Y02669
*                                      INDICATOR
         SLL   REG1,24                 SHIFT TO HIGH ORDER BYTE  Y02669
         LTR   REG1,REG1               SET CONDITION CODE        Y02669
*                                      ACCORDING TO THE SOURCE   Y02669
         BP    CONSOLE                 POSITIVE, MUST BE CONSOLE Y02669
         BM    ISORRES                 NEGATIVE: INPUT STREAM    Y02669
         B     SETXAN                  ZERO: INTERNAL COMMAND:   Y02669
*                                      ALL COMMANDS ARE VALID.   Y02669
         EJECT
*    INPUT STREAM  AUTHORITY CHECK     *                         Y02669
         SPACE 2
ISORRES  EQU   *
         LTR   REG4,REG4               INFORMATIONAL MSG       @YM6321P
         BZ    CKVARY                  YES, ALL AUTHORIZED     @YM6321P
         XR    REG5,REG5               CLEAR REGISTER            Y02669
         IC    REG5,XAS                SOURCE AUTHORITY FROM     Y02669
*                                      XAS FIELD OF XSA          Y02669
         NR    REG5,REG4               'AND' SOURCE WITH VERB    Y02669
*                                      AUTHORITY                 Y02669
         BZ    XERRA                   NO RESIDUE INDICATES      Y02669
*                                      INVALID SOURCE            Y02669
         USING VERBLEN,R11                                       Y02669
CKVARY   EQU   *                                               @YM6321P
         CLI   VERBIND,XTWTY8          IS THE VERB 'VARY' ?      Y02669
         DROP  R11                                               Y02669
         BE    SETXAN                  YES: LEAVE INPUT STREAM   Y02669
*                                      INDICATOR IN XAU          Y02669
         MVI   XAU,X0                  NOT 'VARY' CLEAR XAU      Y02669
*                                      OF THE XSA                Y02669
         B     SETXAN                                            Y02669
         EJECT
*    CONSOLE AUTHORITY CHECK      *                              Y02669
         SPACE 2
CONSOLE  EQU   *
         LTR   REG4,REG4               INFORMATIONAL MSG       @YM6321P
         BZ    SETXAN                  YES, ALL AUTHORIZED     @YM6321P
         LR    REG0,REG4               SAVE VERB AUTHORITY       Y02669
         XR    REG5,REG5               CLEAR REGISTER            Y02669
         IC    REG5,XAU                GET CONSOLE ID FROM XAU   Y02669
         BCTR  REG5,X0                 DECREMENT CONSOLE ID      Y02669
*                                      VALUE FOR CALCULATION     Y02669
         USING UUCM,REG13              SETUP UCM ADDRESSABILITY  Y02669
         L     REG13,CVTCUCB           SET UCM POINTER FROM CVT  Y02669
         LM    REG7,REG9,UCMVEA        LOAD START, LENGTH AND    Y02669
*                                      LAST UCM LIST             Y02669
         MR    REG4,REG8               MULTIPLY (CONSOLE-1) BY   Y02669
*                                      UCM ENTRY LENGTH          Y02669
         AR    REG5,REG7               ADD STARTING UCMLIST      Y02669
*                                      ENTRY ADDRESS             Y02669
         CR    REG5,REG9               COMPARE CALCULATED ADDR   Y02669
*                                      WITH LAST VALID CONSOLE IDY02669
         BH    XERRA                   INVALID CONSOLE ID:       Y02669
*                                      PUT OUT ERROR MSG         Y02669
         USING UCMLIST,REG5            CONSOLE ENTRY             Y02669
*                                      ADDRESSABILITY            Y02669
         MVC   XAS(2),UCMAUTH          STORE CONSOLE AUTH IN   @Y30LPSZ
*                                      XSA                     @Y30LPSZ
         IC    REG5,UCMAUTH            INSERT CONSOLE            Y02669
*                                      AUTHORITY FROM UCM LIST   Y02669
         NR    REG5,REG0               'AND' SOURCE WITH         Y02669
*                                      VERB AUTHORITY            Y02669
         BNZ   SETXAN                  RESIDUE INDICATES         Y02669
*                                      VALID SOURCE              Y02669
         EJECT
XERRA    EQU   *  INVALID SOURCE AUTHORITY FOR VERB: DIAGNOSTIC  Y02669
         SPACE
         MVI   XAE,AUTHERR             INSERT DIAGNOSTIC CODE    Y02669
         L     R15,VCON05              GET MSG MOD ADDRESS       Y02669
         BR    R15                     BR TO MSG MOD TO ISSUE    Y02669
*                                      MESSAGE                   Y02669
         SPACE 2
SETXAN   EQU   *  VALID SOURCE/VERB AUTHORITY COMBINATION        Y02669
         SPACE
         USING VERBLEN,R11                                       Y02669
         SPACE
         MVC   XAN(X1),VERBIND         INSERT VERB CODE INTO     Y02669
*                                      XAN FIELD OF THE XSA      Y02669
         DROP  R11                                               Y02669
         L     R15,VCONTAB(R15)        LOAD PROCESSOR ADDRESS    Y02669
         BR    R15                     BR  TO COMMAND PROCESSOR  Y02669
         EJECT
*    SUBROUTINE TO HARDCOPY A COMMAND                          @ZA03236
DOHCPY   LH    REG15,D0(REG4)        LENGTH OF CIB             @ZA03236
         L     REG10,D0(REG4)        SAVE FIRST WORD OF CIB    @ZA03236
         AR    REG15,REG4            ONE PAST BUFFER END       @ZA03236
TRSCAN   EQU   *                     SCAN FOR LAST NON-BLANK   @ZA03236
         BCTR  REG15,D0              BACK UP ONE CHARACTER     @ZA03236
         CLI   D0(REG15),BLANK       NON-BLANK YET             @ZA03236
         BE    TRSCAN                NO, LOOK AT NEXT CHAR     @ZA03236
         SR    REG15,REG4            LENGTH MINUS ONE          @ZA03236
         LA    REG15,D1(REG15)       GET REAL LENGTH FOR WTO   @ZA03236
         STH   REG15,D0(REG4)        STORE IN CIB FOR WTO      @ZA03236
         LA    REG15,HCPYFLG         Q-TO-HARDCPY FLAG         @ZA03236
         STH   REG15,D2(REG4)        STORE IN CIB FOR WTO      @ZA03236
         LR    REG1,REG4             ADDR OF WPL FOR WTO       @ZA03236
         WTO   MF=(E,(1))            HARDCOPY THE COMMAND      @ZA03236
         ST    REG10,D0(REG4)        RESTORE FIRST WD OF CIB   @ZA03236
         BR    REG14                 RETURN TO MAINLINE        @ZA03236
         EJECT
COMMAB   DC    C', '                   COMMENT INDICATOR ON       23321
SSOBNAME DC    C'SSOB'                                           Y02669
SSIBNAME DC    C'SSIB'                                           Y02669
SUBNAME  DC    C'MSTR'                                           Y02669
RBLK     DC    CL2'R'                  REPLY COMMAND           @ZA03236
*                                      NULL OPERAND FIELD         23321
*
XMVC     MVC   XAV(D0),D0(REG5)        SAVE VERB IN XSA           21002
ABRECOMP CLC   X3(D0,REG6),XAV         COMPARE VERB ABREVIATION   21002
         USING VERBLEN,REG11
VERBCOMP CLC   VERB(D0),XAV            COMPARE VERB NAME          21002
         DROP  REG11
VCON05   DC    V(IEE0503D)             ADDRESS OF MSG MOD
SP255    DC    AL1(255)                SUBPOOL 255               Y02669
         DC    AL3(NEWCORE)            LENGTH TO FREE UP         Y02669
SP245    DC    AL1(245)                SUBPOOL 245               Y02669
         DC    AL3(NEWCORE)            LENGTH TO FREE UP         Y02669
LISTFORM GETMAIN EC,LV=NEWCORE,A=0,SP=255,MF=L                   Y02669
LISTLEN  EQU   *-LISTFORM              LENGTH OF LIST            Y02669
SIXFOUR  DC    F'00000064'             COMPARAND OF 64         @G17SPTJ
         TITLE ' VERB INDEX TABLE'
VERBLEN  EQU   *                                                  21002
*         BITS 0-1 OFF INDICATES NO ABREV                         21002
*                  BOTH ON INDICATES TWO BYTE ABREVIATION         21002
*                  0 ON, 1 OFF INDICATES ONE BYTE ABREVIATION     21002
*         BIT 2 ON INDICATES A SU NUMBER EXISTS TO INDICATE A  @G17SPTJ
*                  NEED TO TEST TO VERIFY SUCH SU IS INSTALLED @G17SPTJ
*                  IN THE SYSTEM                               @G17SPTJ
         DC    X'85'                                              21002
VERBIND  EQU   *                                                  21002
         DC    AL1(16)                                            21002
VERBAUT  EQU   *                                                  21002
         DC    X'00'                                              21002
*                                 COMMAND AUTHORITY               21002
*                                 X'00' INFORMATIONAL             21002
*                                 X'80' SYSTEM                    21002
*                                 X'40' I/O                       21002
*                                 X'20' CONSOLES                  21002
VERB     EQU   *                                                  21002
         DC    C'REPLY'                                           21002
VERBABR  EQU   *                                                  21002
         DC    CL1'R'                                             21002
         SPACE
***********************************************************************
         SPACE
         DC    X'85'                                              21002
         DC    AL1(4)                                             21002
         DC    X'80'                                              21002
         DC    C'START'                                           21002
         DC    CL1'S'                                             21002
         SPACE
***********************************************************************
         SPACE
         DC    X'85'                                              21002
         DC    AL1(12)                                            21002
         DC    X'40'                                              21002
         DC    C'MOUNT'                                           21002
         DC    CL1'M'                                             21002
         SPACE
***********************************************************************
         SPACE
         DC    X'83'                                              21002
         DC    AL1(28)                                            21002
         DC    X'00'                                              21002
         DC    C'LOG'                                             21002
         DC    CL1'L'                                             21002
         SPACE
***********************************************************************
         EJECT
***********************************************************************
         SPACE
         DC    X'88'                                              21002
         DC    AL1(32)                                            21002
         DC    X'80'                                              21002
         DC    C'WRITELOG'                                        21002
         DC    CL1'W'                                             21002
         SPACE
***********************************************************************
         SPACE
         DC    X'83'                                              21002
         DC    AL1(36)                                            21002
         DC    X'80'                                              21002
         DC    C'SET'                                             21002
         DC    CL1'T'                                             21002
         SPACE
***********************************************************************
         SPACE
         DC    X'84'                                              21002
         DC    AL1(40)                                            21002
         DC    X'60'                                             Y02669
         DC    C'VARY'                                            21002
         DC    CL1'V'                                             21002
         SPACE
***********************************************************************
         SPACE
         DC    X'86'                                              21002
         DC    AL1(44)                                            21002
         DC    X'40'                                              21002
         DC    C'UNLOAD'                                          21002
         DC    CL1'U'                                             21002
         SPACE
***********************************************************************
         SPACE
         DC    X'84'                                              21002
         DC    AL1(60)                                            21002
         DC    X'80'                                              21002
         DC    C'HALT'                                            21002
         DC    CL1'Z'                                             21002
         SPACE
***********************************************************************
         SPACE
         DC    X'84'                                              21002
         DC    AL1(64)                                            21002
         DC    X'80'                                             Y02669
         DC    C'STOP'                                            21002
         DC    CL1'P'                                             21002
         SPACE
***********************************************************************
         EJECT
***********************************************************************
         SPACE
         DC    X'86'                                              21002
         DC    AL1(68)                                            21002
         DC    X'80'                                             Y02669
         DC    C'MODIFY'                                          21002
         DC    CL1'F'                                             21002
         SPACE
***********************************************************************
         SPACE
         DC    X'86'                                              21002
         DC    AL1(72)                                            21002
         DC    X'80'                                             Y02669
         DC    C'CANCEL'                                          21002
         DC    CL1'C'                                             21002
         SPACE
***********************************************************************
         SPACE
         DC    X'C7'                                              21002
         DC    AL1(100)                                           21002
         DC    X'00'                                              21002
         DC    C'MONITOR'                                         21002
         DC    CL2'MN'                                            21002
         SPACE
***********************************************************************
         SPACE
         DC    X'C4'                                              21002
         DC    AL1(160)                                           21002
         DC    X'00'                                              21002
         DC    C'SEND'                                            21002
         DC    CL2'SE'                                            21002
         SPACE
***********************************************************************
         SPACE
         DC    X'87'                                              21002
         DC    AL1(104)                                           21002
         DC    X'00'                                              21002
         DC    C'DISPLAY'                                         21002
         DC    CL1'D'                                             21002
         SPACE
***********************************************************************
         EJECT
***********************************************************************
         SPACE
         DC    X'84'                                              21002
         DC    AL1(108)                                           21002
         DC    X'80'                                             Y02669
         DC    C'HOLD'                                            21002
         DC    CL1'H'                                             21002
         SPACE
***********************************************************************
         SPACE
         DC    X'87'                                              21002
         DC    AL1(112)                                           21002
         DC    X'80'                                             Y02669
         DC    C'RELEASE'                                         21002
         DC    CL1'A'                                             21002
         SPACE
***********************************************************************
         SPACE
         DC    X'85'                                              21002
         DC    AL1(116)                                           21002
         DC    X'80'                                             Y02669
         DC    C'RESET'                                           21002
         DC    CL1'E'                                             21002
         SPACE
***********************************************************************
         SPACE
         DC    X'87'                                              21002
         DC    AL1(144)                                           21002
         DC    X'00'                                             Y02669
         DC    C'CONTROL'                                         21002
         DC    CL1'K'                                             21002
         SPACE
***********************************************************************
         SPACE
         DC    X'C5'                                              21002
         DC    AL1(148)                                           21002
         DC    X'00'                                             Y02669
         DC    C'MSGRT'                                           21002
         DC    CL2'MR'                                            21002
         SPACE
***********************************************************************
         EJECT
***********************************************************************
         SPACE
         DC    X'C6'                                              21002
         DC    AL1(56)                                            21002
         DC    X'00'                                              21002
         DC    C'STOPMN'                                          21002
         DC    CL2'PM'                                            21002
         SPACE
***********************************************************************
         SPACE
         DC    X'05'                                             Y02669
         DC    AL1(152)                                          Y02669
         DC    X'10'                                             Y02669
         DC    C'LOGON'                                          Y02669
*              NO ABBREVIATION                                   Y02669
         SPACE
***********************************************************************
         SPACE
         DC    X'04'                                             Y02669
         DC    AL1(172)                                          Y02669
         DC    X'80'                                             Y02669
         DC    C'DUMP'                                           Y02669
*        NO ABBREVIATION                                         Y02669
         SPACE
***********************************************************************
         SPACE
         DC    X'C5'                                             Y02669
         DC    AL1(196)                                          Y02669
         DC    X'00'                                             Y02669
         DC    C'TRACK'                                          Y02669
         DC    C'TR'                                             Y02669
         SPACE
***********************************************************************
         EJECT
***********************************************************************
         SPACE
         DC    X'C6'                                             Y02669
         DC    AL1(200)                                          Y02669
         DC    X'00'                                             Y02669
         DC    C'STOPTR'                                         Y02669
         DC    C'PT'                                             Y02669
         SPACE
***********************************************************************
         SPACE
         DC    X'C8'                                             Y02669
         DC    AL1(158)                                          Y02669
         DC    X'80'                                             Y02669
         DC    C'CHNGDUMP'                                       Y02669
         DC    C'CD'                                             Y02669
         SPACE
***********************************************************************
         SPACE
         DC    X'07'                                             Y02669
         DC    AL1(96)                                           Y02669
         DC    X'80'                                             Y02669
         DC    C'QUIESCE'                                        Y02669
*       NO ABBREVIATION                                          Y02669
         SPACE
***********************************************************************
         SPACE
         DC    X'86'                                             Y02669
         DC    AL1(52)                                           Y02669
         DC    X'80'                                             Y02669
         DC    C'SWITCH'                                         Y02669
         DC    C'I'                                              Y02669
         SPACE
***********************************************************************
         SPACE
         DC    X'04'                                             Y02669
         DC    AL1(76)                                           Y02669
         DC    X'80'                                             Y02669
         DC    C'MODE'                                           Y02669
         SPACE
***********************************************************************
         SPACE
         DC    X'84'                                             Y02669
         DC    AL1(48)                                           Y02669
         DC    X'40'                                             Y02669
         DC    C'SWAP'                                           Y02669
         DC    C'G'                                              Y02669
         SPACE
***********************************************************************
         EJECT
***********************************************************************
         SPACE
         DC    X'05'                                           @Y02669P
         DC    AL1(20)                                         @Y02669P
         DC    X'80'                                           @Y02669P
         DC    C'TRACE'                                        @Y02669P
*       NO ABBREVIATION                                        @Y02669P
         SPACE
***********************************************************************
         SPACE
         DC    X'05'                                           @Y30LPSZ
         DC    AL1(164)                                        @Y30LPSZ
         DC    X'40'                                           @Y30LPSZ
         DC    C'PURGE'                                        @Y30LPSZ
*       NO ABBREVIATION                                        @Y30LPSZ
         SPACE
***********************************************************************
         SPACE
         DC    X'06'                                           @Y30LPSZ
         DC    AL1(140)                                        @Y30LPSZ
         DC    X'40'                                           @Y30LPSZ
         DC    C'ASSIGN'                                       @Y30LPSZ
*       NO ABBREVIATION                                        @Y30LPSZ
         SPACE
***********************************************************************
         SPACE 2
***********************************************************************
*                                                                     *
*    ADD NON-SU-DEPENDENT COMMANDS ABOVE THIS COMMENT BLOCK           *
*                                                                     *
***********************************************************************
         EJECT
***********************************************************************
*                                                                     *
*    THE FOLLOWING COMMANDS (WITHIN THE TABLE) ARE SU         @G17SPTJ*
*    DEPENDENT.  WITHIN EACH COMMAND, THERE IS AN EXTRA BYTE  @G17SPTJ*
*    CONTAINING THE SU NUMBER.  ITS PRESENCE IS INDICATED BY  @G17SPTJ*
*    THE NUMBER 2 BIT BEING ON IN THE FIRST BYTE OF THE       @G17SPTJ*
*    COMMAND'S TABLE ENTRY.                                   @G17SPTJ*
*                                                                     *
***********************************************************************
         SPACE
***********************************************************************
         SPACE
         DC    X'E6'         ABBREVIATION LENGTH CODE (E) &    @G17SPTJ
*                            LENGTH OF VERB (6)                @Z40BPSV
         DC    AL1(156)      VERB CODE                         @Z40BPSV
         DC    X'80'         VERB AUTHORITY                    @Z40BPSV
         DC    C'SETDMN'     VERB                              @Z40BPSV
         DC    C'SD'         VERB ABBREVIATION                 @Z40BPSV
         DC    AL1(7)        SYSTEM SU NUMBER (7)              @G17SPTJ
         SPACE
***********************************************************************
         SPACE 1                                               @Z40WPSS
         DC    X'E7'                                           @G17SPTJ
         DC    AL1(124)                                        @Z40WPSS
         DC    X'80'                                           @Z40WPSS
         DC    C'PAGEADD'                                      @Z40WPSS
         DC    C'PA'                                           @Z40WPSS
         DC    AL1(7)                                          @G17SPTJ
         SPACE 1
***********************************************************************
         SPACE 1
         DC    X'25'                                           @G17FPSS
         DC    AL1(132)                                        @G17FPSS
         DC    X'80'                                           @G17FPSS
         DC    C'FORCE'                                        @G17FPSS
*        NO ABBREVIATION                                       @G17FPSS
         DC    AL1(17)                                         @G17FPSS
         SPACE 1
***********************************************************************
         SPACE 1
         DC    X'E4'                                           @G17SPTJ
         DC    AL1(128)                                        @G17SPTJ
         DC    X'80'                                           @G17SPTJ
         DC    C'SLIP'                                         @G17SPTJ
         DC    C'SL'                                           @G17SPTJ
         DC    AL1(17)                                         @G17SPTJ
         SPACE 1
***********************************************************************
         EJECT
***********************************************************************
         SPACE
         DC    X'0000'  VERB TABLE DELIMITER                      21016
         SPACE
***********************************************************************
         EJECT
*  ADDITIONAL VERB CODES ASSIGNED BUT NOT USED BY THIS MODULE    Y02669
         SPACE
***********************************************************************
         SPACE
*        DC    AL1(82)                                           Y02669
*        DC    C'DISPLAY UNITS'                                  Y02669
         SPACE
***********************************************************************
         SPACE
*        DC    AL1(46)                                           Y02669
*        DC    C'DISPLAY C,K'                                    Y02669
         SPACE
***********************************************************************
         SPACE
*        DC    AL1(62)                                           Y02669
*        DC    C'DISPLAY CONSOLES'                               Y02669
         SPACE
***********************************************************************
         SPACE
*        DC    AL1(136)                                        @Z40BPSV
*        DC    C'DISPLAY DMN'                                  @Z40BPSV
         SPACE
***********************************************************************
         SPACE
*        DC    AL1(50)                                           Y02669
*        DC    C'DISPLAY MATRIX'                                 Y02669
         SPACE
***********************************************************************
         SPACE
*        DC    AL1(54)                                           Y02669
*        DC    C'DISPLAY PFK'                                    Y02669
         SPACE
***********************************************************************
         SPACE
*        DC    AL1(66)                                           Y02669
*        DC    C'DISPLAY R'                                      Y02669
         SPACE
***********************************************************************
         SPACE
*        DC    AL1(168)                                        @G17SPTJ
*        DC    C'DISPLAY SLIP'                                 @G17SPTJ
         SPACE
***********************************************************************
           SPACE 1
*        DC    AL1(243)                                        @Z40LPTA
*        DC    C'DISPLAY 3850'                                 @Z40LPTA
         SPACE
***********************************************************************
         EJECT
***********************************************************************
         SPACE
*        DC    AL1(176)                                        @G33CPMR
*        DC    C'DISPLAY DUMP'                                 @G33CPMR
         SPACE
***********************************************************************
         SPACE
*        DC    AL1(84)                                           Y02669
*        DC    C'VARY CPU'                                       Y02669
         SPACE
***********************************************************************
         SPACE 1
*        DC    AL1(80)                                           Y02669
*        DC    C'VARY PATH'                                      Y02669
         SPACE 1
***********************************************************************
         SPACE 1
*        DC    AL1(88)                                           Y02669
*        DC    C'VARY CHANNEL'                                   Y02669
         SPACE
***********************************************************************
         SPACE
*        DC    AL1(92)                                           Y02669
*        DC    C'VARY STORAGE'                                   Y02669
         SPACE
***********************************************************************
         SPACE
*        DC    AL1(34)                                           Y02669
*        DC    C'JES2'                                           Y02669
         SPACE
***********************************************************************
         SPACE
*        DC    AL1(120)                                        @Y02668P
*        DC    C'VARY CN'                                      @Y02668P
         SPACE
***********************************************************************
         EJECT
*** ******************************************************* ***  Y02669
***                                                         ***  Y02669
***               ENTRIES IN THIS COMMAND PROCESSOR VCON    ***  Y02669
***                TABLE MUST BE POSITIONAL ACCORDING TO    ***  Y02669
***               THEIR CORRESPONDING VERB TABLE ENTRIES    ***  Y02669
***                                                         ***  Y02669
*** ******************************************************* ***  Y02669
         SPACE 2
VCONTAB  DS    0F
         DC    V(IEAVVRP1)  REPLY    R                           Y02669
         DC    V(IEE0803D)  START    S                           Y02669
         DC    V(IEE0803D)  MOUNT    M                           Y02669
         DC    V(IEE1603D)  LOG      L                           Y02669
         DC    V(IEE1603D)  WRITELOG W                           Y02669
         SPACE
         DC    V(IEE0603D)  SET      T                           Y02669
         DC    V(IEE3203D)  VARY     V                           Y02669
         DC    V(IEE0803D)  UNLOAD   U                           Y02669
         DC    V(IEE1403D)  HALT     Z                           Y02669
         DC    V(IEE0703D)  STOP     P                           Y02669
         SPACE
         DC    V(IEE0703D)  MODIFY   F                           Y02669
         DC    V(IEE3703D)  CANCEL   C                           Y02669
         DC    V(IEE7103D)  MONITOR  MN                          Y02669
         DC    V(IKJ5803D)  SEND     SE                          Y02669
         DC    V(IEE3503D)  DISPLAY  D                           Y02669
         SPACE
         DC    V(IEE0803D)  HOLD     H                           Y02669
         DC    V(IEE0803D)  RELEASE  A                           Y02669
         DC    V(IEE0803D)  RESET    E                           Y02669
         DC    V(IEE7503D)  CONTROL  K                           Y02669
         DC    V(IEE6303D)  MSGRT    MR                          Y02669
         SPACE
         DC    V(IEE5503D)  STOPMN   PM                          Y02669
         DC    V(IEE0803D)  LOGON    ** (NO ABBREVIATION)        Y02669
         DC    V(IEE0803D)  DUMP                                 Y02669
         SPACE
         DC    V(IEE3503D)  TRACK    TR                          Y02669
         DC    V(IEE7503D)  STOPTR   PT                          Y02669
         DC    V(IEEMB815)  CHNGDUMP CD                          Y02669
         DC    V(IEE0803D)  QUIESCE  *                           Y02669
         DC    V(IEE1403D)  SWITCH   I                           Y02669
         SPACE
         DC    V(IGF2603D)  MODE     *                           Y02669
         DC    V(IGF2503D)  SWAP     G                           Y02669
         DC    V(IEE1403D)  TRACE    *                         @Y02669P
         DC    V(IEE9403D)  PURGE    *                         @Y30LPSZ
         DC    V(IEE9403D)  ASSIGN   *                         @Y30LPSZ
         SPACE
         DC    V(IEE8603D)  SETDMN   SD                        @Z40BPSV
         DC    V(IEE0803D)  PAGEADD  PA                        @Z40WPSS
         DC    V(IEE3703D)  FORCE    *                         @G17FPSS
         DC    V(IEE0803D)  SLIP     SL                        @G17SPTJ
         EJECT
PATCH    DC    CL50' *** IEE0403D PATCH AREA *** '
         END
