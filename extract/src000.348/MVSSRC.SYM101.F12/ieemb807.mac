         TITLE 'IEEMB807 - SYSTEM LOG MESSAGE PROCESSOR                *
                        '
IEEMB807 CSECT ,                                                   0001
@MAINENT DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL1(16)                                             0001
         DC    C'IEEMB807  76.167'                                 0001
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                     0001
         BALR  @11,0                                               0001
@PSTART  DS    0H                                                  0001
         USING @PSTART,@11                                         0001
         L     @00,@SIZDATD                                        0001
         GETMAIN  R,LV=(0)
         LR    @12,@01                                             0001
         USING @DATD,@12                                           0001
         LM    @00,@01,20(@13)                                     0001
         MVC   @PC00001(4),0(@01)                                  0001
*                                                                  0050
*   /*****************************************************************/
*   /*                                                               */
*   /* SET UP INITIAL REGISTER VALUES.                               */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0050
*   REG2=REG1;                      /* PARM PTR TO WORK REG          */
         LR    REG2,REG1                                           0050
*   MSGCNT=REG2->NUMMSGS;           /* SET UP LOOP VALUE FOR WTOS    */
         SLR   MSGCNT,MSGCNT                                       0051
         IC    MSGCNT,NUMMSGS(,REG2)                               0051
*   REG6=REG2;                      /* PTR TO FIRST MSG CODE         */
         LR    REG6,REG2                                           0052
*   DO WHILE(MSGCNT>ZERO);                                         0053
         B     @DE00053                                            0053
@DL00053 DS    0H                                                  0054
*     MSGCDE=REG6->MSGONE;          /* SET TABLE INDEX VALUE         */
         SLR   MSGCDE,MSGCDE                                       0054
         IC    MSGCDE,MSGONE(,REG6)                                0054
*     REG0=ADDR(LENTAB)+MSGCDE;     /* PTR TO MESSAGE LENGTH TABLE   */
         LA    REG0,LENTAB                                         0055
         ALR   REG0,MSGCDE                                         0055
*     REG4=ADDR(MSGTAB)+MSGCDE;     /* PTR TO MESSAGE TEXT ADDR TABLE*/
         LA    REG4,MSGTAB                                         0056
         ALR   REG4,MSGCDE                                         0056
*     REG4=REG4->MSGPTR;            /* POINT TO MSG TEXT             */
         L     REG4,MSGPTR(,REG4)                                  0057
*     REG5=MLENGTH;                 /* LENGTH OF MESSAGE TO MOVE     */
         LR    @10,REG0                                            0058
         L     REG5,MLENGTH(,@10)                                  0058
*     REG1=ADDR(MSGAREA);           /* PTR TO WTO BUFFER             */
         LA    REG1,MSGAREA                                        0059
*     REG1->MSGMAP(1:REG5)=REG4->MSGMAP(1:REG5);/* MOVE MSG TEXT     */
         LR    @10,REG5                                            0060
         BCTR  @10,0                                               0060
         EX    @10,@SM00132                                        0060
*     IF MSGCDE=FOUR THEN           /* VARIABLE MSG IEE043I          */
         SLR   @10,@10                                             0061
         IC    @10,FOUR                                            0061
         CR    MSGCDE,@10                                          0061
         BNE   @RF00061                                            0061
*       REG1->QUEDCLS=REG2->MSGCLS; /* SET OUTPUT CLASS              */
         IC    @10,MSGCLS(,REG2)                                   0062
         STC   @10,QUEDCLS(,REG1)                                  0062
*     IF MSGCDE=EIGHT THEN          /* VARIABLE MSG IEE531I          */
@RF00061 SLR   @10,@10                                             0063
         IC    @10,EIGHT                                           0063
         CR    MSGCDE,@10                                          0063
         BNE   @RF00063                                            0063
*       REG1->FAILCLS=REG2->MSGCLS; /* UNALLOCATION FAILURE CLASS    */
         IC    @10,MSGCLS(,REG2)                                   0064
         STC   @10,FAILCLS(,REG1)                                  0064
*     GEN( WTO MF=(E,(1)));         /* ISSUE WTO                     */
@RF00063 DS    0H                                                  0065
          WTO MF=(E,(1))
*     MSGCNT=MSGCNT-ONE;            /* DECREMENT LOOP CONTROL        */
         SLR   @10,@10                                             0066
         IC    @10,ONE                                             0066
         SLR   MSGCNT,@10                                          0066
*     REG6=REG6+ONE;                /* BUMP PTR TO NEXT CODE         */
         ALR   REG6,@10                                            0067
*   END;                                                           0068
@DE00053 SLR   @10,@10                                             0068
         IC    @10,ZERO                                            0068
         CR    MSGCNT,@10                                          0068
         BH    @DL00053                                            0068
*   RFY                                                            0069
*     MSGPARM BASED(REG2);                                         0069
*   MSGPARM=MSGPARM&&MSGPARM;       /* CLEAR PARM CORE               */
         XC    MSGPARM(4,REG2),MSGPARM(REG2)                       0070
*   RETURN;                                                        0071
@EL00001 DS    0H                                                  0071
@EF00001 L     @00,@SIZDATD                                        0071
         LR    @01,@12                                             0071
         FREEMAIN R,LV=(0),A=(1)
@ER00001 LM    @14,@12,12(@13)                                     0071
         BR    @14                                                 0071
*   GEN;                                                           0072
MSG1    WTO    'IEE043I A SYSTEM LOG DATA SET HAS BEEN QUEUED TO SYSOUTT
                CLASS A',MF=L,DESC=(4),ROUTCDE=(2)
MSG1LEN EQU   *
MSG2    WTO    'IEE531I LOG DATA SET UNALLOCATION FAILED-TENTATIVE DATAA
                LOSS-CLASS=A',MF=L,DESC=(4),ROUTCDE=(2)
MSG2LEN EQU   *
MSG3    WTO   'IEE037I LOG NOT ACTIVE',                               **
               MF=L,DESC=(4),ROUTCDE=(2)
MSG3LEN EQU   *
MSG4    WTO   'IEE041I THE SYSTEM LOG IS NOW ACTIVE',MF=L,DESC=(4),   **
               ROUTCDE=(2)
MSG4LEN EQU   *
MSG5    WTO   'IEE533I SYSTEM LOG INITIALIZATION HAS FAILED',         **
               MF=L,DESC=(4),ROUTCDE=(2)
MSG5LEN EQU   *
MSG6    WTO    'IEE534I LOG DATA SET SWITCH FAILED-CURRENT LOG DATA SETT
                RECORDING',MF=L,DESC=(4),ROUTCDE=(2)
MSG6LEN EQU   *
MSG7    WTO   'IEE769I SYSTEM ERROR IN SYSTEM LOG',MF=L,DESC=(4),     **
               ROUTCDE=(2)                                    @YM03372
MSG7LEN EQU   *
MSG8    WTO    'IEE775I STORAGE UNAVAILABLE FOR SYSTEM LOG BUFFER - LOGG
                CLOSE IN PROCESS',MF=L,DESC=(4),ROUTCDE=(2)   @YM06135
MSG8LEN EQU   *                                               @YM06135
MSG9    WTO    'IEE795I SYSTEM LOG - DATA LOSS, TEMPORARILY INACTIVE, II
               N RECOVERY',MF=L,DESC=(4),ROUTCDE=(2)          @ZA07784
MSG9LEN EQU   *                                               @ZA07784
*   END IEEMB807;                                                  0073
         B     @EL00001                                            0073
@DATA    DS    0H
@SM00132 MVC   MSGMAP(0,REG1),MSGMAP(REG4)
@DATD    DSECT
         DS    0F
@PC00001 DS    1F
IEEMB807 CSECT
         DS    0F
@DATD    DSECT
         DS    0D
MSGAREA  DS    CL80
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
IEEMB807 CSECT
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
         DS    0D
ZERO     DC    XL1'00'
ONE      DC    XL1'1'
FOUR     DC    XL1'4'
EIGHT    DC    XL1'8'
MSGTAB   DS    CL40
         ORG   MSGTAB
MSGADR0  DC    C'0000'
MSGADR1  DC    AL4(MSG1)
MSGADR2  DC    AL4(MSG2)
MSGADR3  DC    AL4(MSG3)
MSGADR4  DC    AL4(MSG4)
MSGADR5  DC    AL4(MSG5)
MSGADR6  DC    AL4(MSG6)
MSGADR7  DC    AL4(MSG7)
MSGADR8  DC    AL4(MSG8)
MSGADR9  DC    AL4(MSG9)
         ORG   MSGTAB+40
LENTAB   DS    CL40
         ORG   LENTAB
MSGLEN0  DC    C'0000'
MSGLEN1  DC    AL4(MSG1LEN-MSG1)
MSGLEN2  DC    AL4(MSG2LEN-MSG2)
MSGLEN3  DC    AL4(MSG3LEN-MSG3)
MSGLEN4  DC    AL4(MSG4LEN-MSG4)
MSGLEN5  DC    AL4(MSG5LEN-MSG5)
MSGLEN6  DC    AL4(MSG6LEN-MSG6)
MSGLEN7  DC    AL4(MSG7LEN-MSG7)
MSGLEN8  DC    AL4(MSG8LEN-MSG8)
MSGLEN9  DC    AL4(MSG9LEN-MSG9)
         ORG   LENTAB+40
PATCH    DC    CL50'IEEMB807PATCH'
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
MSGCNT   EQU   @09
MSGCDE   EQU   @08
REG0     EQU   @00
REG1     EQU   @01
REG2     EQU   @02
REG4     EQU   @04
REG5     EQU   @05
REG6     EQU   @06
REG10    EQU   @10
REG11    EQU   @11
REG12    EQU   @12
REG13    EQU   @13
REG14    EQU   @14
REG15    EQU   @15
REG3     EQU   @03
REG7     EQU   @07
REG8     EQU   @08
REG9     EQU   @09
MSGPTR   EQU   0
MSGPARM  EQU   0
NUMMSGS  EQU   MSGPARM
MSGONE   EQU   MSGPARM+1
MSGCLS   EQU   MSGPARM+3
MSGMAP   EQU   0
QUEDCLS  EQU   MSGMAP+66
FAILCLS  EQU   MSGMAP+71
MLENGTH  EQU   0
PARM     EQU   0
*                                      START UNREFERENCED COMPONENTS
@NM00003 EQU   MSGMAP+72
@NM00002 EQU   MSGMAP+67
@NM00001 EQU   MSGMAP+4
HEADER   EQU   MSGMAP
MSGTWO   EQU   MSGPARM+2
*                                      END UNREFERENCED COMPONENTS
@ENDDATA EQU   *
         END   IEEMB807,(C'PLS2045',0701,76167)
