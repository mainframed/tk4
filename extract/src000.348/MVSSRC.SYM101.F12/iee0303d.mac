IEE0303D TITLE 'TRANSLATE AND CHAIN DESCRIPTION'
***********************************************************************
*                                                                     *
* MODULE NAME =     IEE0303D                                          *
*                                                                     *
* DESCRIPTIVE NAME =                                                  *
*                   CHAIN MANIPULATION: QEDIT MACRO FUNCTION          *
*                   MGCR MACRO FUNCTION.                              *
* COPYRIGHT =       N/A                                               *
*                                                                     *
* STATUS =          OS/VS2 - RELEASE 3                        @ZA08456*
*                                                                     *
* FUNCTION =        THIS MODULE PERFORMS CSCB AND CIB CHAIN           *
*                   MANIPULATION PROCESSING. IF COMMANDS ARE          *
*                   BEING PROCESSED, THIS MODULE BRANCHES TO          *
*                   IEE5403D TO TRANSLATE THE COMMAND. BLOCKS         *
*                   CAN BE ADDED TO CHAIN, DELETED FROM CHAIN         *
*                   OR THE CIB COUNT CAN BE MODIFIED, OR AN           *
*                   ABTERM REQUEST CAN BE COMMUNICATED TO ABTERM      *
*                   BY THIS MODULE.                                   *
*                                                                     *
* OPERATION =       THE PROCESSING METHODS USED IN THIS MODULE        *
*                   ARE MAINLY SUBROUTINES.  COMMON ROUTINES          *
*                   ARE USED FOR CHAIN MANIPULATION OF BOTH           *
*                   CIB AND CSCB CHAINS, AND SPECIALIZED SUB-         *
*                   ROUTINES HANDLE UNIQUE SITUATIONS SUCH            *
*                   AS THE ABTERM ENTRY.  INITIAL PROCESSING          *
*                   VALIDITY CHECKS ISSUER FOR A SYSTEM PRO-          *
*                   TECT KEY (LESS THAN EIGHT). IF SVC34 IS BEING     *
*                   CALLED BY A PROBLEM PROGRAM, A BIT IS             *
*                   SET IN THE XSA, TO BE TESTED WHEN SVC34           *
*                   OR QEDIT FUNCTIONS ARE BEING CALLED.              *
*                   A PROBLEM PROGRAM IS ALLOWED ONLY A SUBSET        *
*                   OF THESE FUNCTIONS. PARM VALUES                   *
*                   IN R0 AND R1 ARE EXAMINED. IF COMMAND             *
*                   TRANSLATION IS NEEDED, A BRANCH IS TAKEN          *
*                   TO IEE5403D.                                      *
*                   IF INPUT INDICATES TASK TO BE DONE IS             *
*                   CSCB CHAIN MANIPULATION, FLAGS IN THE CSCB        *
*                   INDICATE ACTION TO BE TAKEN.                      *
*                       CHABT = INDICATE ENTRY TO ABTERM.             *
*                       CHAD  = ADD CSCB TO CHAIN.                    *
*                       CHDL  = DELETE CSCB FROM CHAIN.               *
*                       CHFC  = FREE CORE FOR CSCB.                   *
*                   IF ABTERM BIT IS ON, XAV+D4 WILL CONTAIN A        *
*                   POINTER TO THE ABTERM PARAMETERS.                 *
*                   THE PARAMETERS TO ABTERM ARE THE TCB POINTER      *
*                   OF THE TASK TO BE TERMINATED AND THE              *
*                   COMPLETION CODE.  ABTERM IS INVOKED AND THE       *
*                   PARAMETERS PASSED VIA THE CALLRTM MACRO,          *
*                   TYPE=ABTERM.                                      *
          EJECT
*                   IF THE INPUT INDICATES ACTION TO BE TAKEN         *
*                   IS CIB CHAIN MANIPULATION, NO FLAGS ARE SET       *
*                   IN THE CONTROL BLOCKS.  IF THE BLOCK IS ON        *
*                   THE CHAIN IT IS REMOVED AND THE CORE IS           *
*                   FREED.  IF IT IS NOT ON THE CHAIN, IT IS          *
*                   ADDED.                                            *
*                   FOR SETTING CIB COUNT IN THE CSCB, R1             *
*                   CONTAINS THE COMPLEMENT OF THE COUNT.             *
*                   R0 CONTAINS THE COMPLEMENT OF THE ORIGIN          *
*                   ADDRESS, (I.E. CHCIBP IN CSCB).                   *
*                   IF CIB IS TO BE PROCESSED, THE ORIGIN             *
*                   POINTER IS TESTED FOR VALIDITY. IF THE            *
*                   ORIGIN IS INVALID, AN ERROR CODE IS               *
*                   RETURNED.                                         *
*                   FOR CHAIN MANIPULATION, R1 CONTAINS THE           *
*                   COMPLEMENTED BLOCK ADDRESS. R0, IF POSI-          *
*                   TIVE CONTAINS THE ORIGIN ADDRESS.  IF R0          *
*                   IS ZERO ONLY CSCB PROCESSING IS PERFORMED.        *
*                                                                     *
* CHARACTER CODE DEPENDENCIES =                                       *
*                   ANY CHARACTER CODE OTHER THAN EBCDIC WILL         *
*                   REQUIRE REASSEMBLY OF MODULE.                     *
*                                                                     *
* DEPENDENCIES =    CALLRTM: TYPE=ABTERM                              *
*                                                                     *
* REGISTER CONVENTIONS =                                              *
*                   R0  = INPUT PARM REG: SEE INPUT SECTION           *
*                   R1  = INPUT PARM REG: SEE INPUT SECTION           *
*                   R14 = RETURN REGISTER                             *
*                   R15 = RETURN CODE REGISTER                        *
*                                                                     *
* PATCH LABEL =     PATCH: RESERVED PATCH AREA                        *
*                                                                     *
* MODULE TYPE =     CSECT                                             *
*                                                                     *
* MODULE SIZE =     FORMER DESIGN POINT CONSTRAINTS OF 1K             *
*                   LOADS FOR SVCS HAVE BEEN REMOVED.                 *
*                   SIZE = HEX 35F                                    *
*                                                                     *
* ATTRIBUTES =      REENTRANT, PAGED LPA, ZERO PSW KEY, SUP-          *
*                   ERVISOR MODE.                                     *
*                                                                     *
* ENTRY POINT =     IEE0303D FROM IEE0003D.                           *
*                                                                     *
* PURPOSE =         CSCB, CIB CHAIN MANIPULATION AND ABTERM           *
*                   ENTRY.                                            *
*                                                                     *
* LINKAGE =         BRANCH FROM IEE0003D.                             *
         EJECT
* INPUT DATA =      FOR SYSTEM TASKS ISSUING SVC34                    *
*                                                                     *
*                   R1    R0     FUNCTION ACTION                      *
*                                                                     *
*                   POS   N/A    PROCESS COMMAND:TO IEE5403D.         *
*                   ZERO  POS    FREE CIB CHAIN                       *
*                   ZERO  ZERO   ERROR: RC/8 BR14                     *
*                   ZERO  NEG    SET CHCIBCT TO ZERO                  *
*                   NEG   POS    CIB CHAIN ADD OR DELETE              *
*                   NEG   ZERO   CSCB PROCESSING                      *
*                   NEG   NEG    STORE R1 IN CHCIBCT                  *
*                                                                     *
*                   FOR A PROBLEM PROGRAM ISSUING SVC34.              *
*                                                                     *
*                   POS   N/A    RC/8 BR14                            *
*                   ZERO  POS    RC/8 BR14                            *
*                   ZERO  ZERO   RC/8 BR14                            *
*                   ZERO  NEG    SET CHCIBCT TO ZERO                  *
*                   NEG   POS    DELETE CIB                           *
*                   NEG   ZERO   CSCB PROCESSING                      *
*                   NEG   NEG    STORE R1 IN CHCIBCT                  *
*                                                                     *
*                   THE QEDIT OR MGCR MACROS CAN BE USED              *
*                   TO ISSUE SVC34.                                   *
*                   R5 CONTAINS PTR TO CALLERS RB.                    *
*                   R14 CONTAINS RETURN ADDRESS.                      *
*                   XAN CONTAINS PTR TO ABTERM PARM LIST.             *
*                                                                     *
* REGISTERS SAVED = R1,R2,R14: DURING PROCESSING.                     *
*                                                                     *
* REGISTER CONTENTS DURING PROCESSING =                               *
*                   R2  = ADDRESSIBILITY FOR CHAINS                   *
*                   R3  = ADDRESSIBILITY FOR PROGRAM.                 *
*                   R4  = CHAIN MANIPULATION REG.                     *
*                   R5  = PTR TO CALLERS RB.                          *
*                         CHAIN MANIPULATION                          *
*                   R6  = CIBCT REG.                                  *
*                   R7  = CHAIN MANIPULATION REG.                     *
*                   R8  = CVT ADDRESSIBILITY.                         *
*                         CIB CHAIN MANIPULATION.                     *
*                         SAVEREG FOR R1 DURING ABTERM.               *
*                   R9  = XSA ADDRESSIBILITY                          *
*                   R10 = BASEA ADDRESSIBILITY                        *
*                         CSCB ORIGIN POINTER.                        *
*                   R11 = SETLOCK.                                    *
*                   R12 = BAL REG FOR SUBROUTINES                     *
*                   R13 = PTR TO ABTERM PARMS.                        *
         EJECT
* EXIT - NORMAL =   TRBRANCH                                          *
* CONDITIONS =      SVC34 IS ISSUED FOR COMMAND TRANSLATION           *
*                   AND COMMAND PROCESSING. A BRANCH IS TAKEN         *
*                   TO IEE5403D.                                      *
* OUTPUT DATA =     SAME AS INPUT.                                    *
* RETURN CODE =     NONE.                                             *
*                                                                     *
* EXIT - NORMAL =   XENABLE                                           *
* CONDITIONS =      SUCCESSFUL COMPLETION OF CHAIN MANIPULATION       *
* OUTPUT DATA =     CSCB OR CIB ADDED OR DELETED FROM CHAIN.          *
*                   CHCIBCT FIELD IN CSCB UPDATED.                    *
* RETURN CODE =     R15 = 0.                                          *
*                                                                     *
* EXIT - ERROR =    XERR.                                             *
* CONDITIONS =      1. INPUT CSCB PTR NOT EQUAL TO ANY CSCB           *
*                   ON CSCB CHAIN FOR DELETE CSCB ENTRY.              *
*                   2. INPUT CIB PTR NOT EQUAL TO ANY CHCIBP          *
*                   ON CSCB CHAIN.                                    *
* OUTPUT DATA =     NONE.                                             *
* RETURN CODE =     R15 = FOUR.                                       *
*                                                                     *
* EXIT - ERROR =    ERRORHER.                                         *
* CONDITIONS =      1. P/P ISSUES SVC34 WITH COMMAND PROCES-          *
*                   SING INDICATED. (R1 POSITIVE.)                    *
*                   2. P/P ISSUES SVC34 WITH FREE CIB CHAIN           *
*                   (R1 = 0 AND R0 POSITIVE.)                         *
*                   3. R1 AND R0 ARE BOTH EQUAL ZERO.                 *
* OUTPUT DATA =     NONE.                                             *
* RETURN CODE =     R15 = EIGHT.                                      *
*                                                                     *
* EXIT - ERROR=     ERROROUT                                          *
* CONDITIONS =      1. P/P ISSUES SVC34 TO GO TO ABTERM.              *
*                   2. P/P ISSUES SVC34 TO ADD CSCB.                  *
* OUTPUT DATA =     NONE.                                             *
* RETURN CODE =     R15 = EIGHT.                                      *
*                                                                     *
*                                                                     *
* EXIT - ERROR =    XENABLE                                           *
* CONDITIONS =      CIB TO BE ADDED EXCEEDS LIMIT COUNT IN            *
*                   CHCIBCT FIELD IN CSCB.                            *
* OUTPUT DATA =     NONE.                                             *
* RETURN CODE =     R15 = EIGHT.                                      *
         EJECT
* EXTERNAL REFERENCES =                                               *
* ROUTINES =        IEE5403D: COMMAND TRANSLATION MODULE.             *
* DATA AREAS =      NONE.                                             *
* CONTROL BLOCKS =  IEECHAIN  CSCB                                    *
*                   IEEBASEA  MASTER RESIDENT CORE                    *
*                   IEZCIB    COMMAND INPUT BUFFER                    *
*                   CVT                                               *
*                   IEEXSA    EXTENDED SAVE AREA                      *
*                   IHAPSA    PREFIX STORAGE AREA                     *
* TABLES =          NONE.                                             *
* MACROS =          FREEMAIN, MODID, CALLRTM: TYPE=ABTERM,            *
*                   TESTAUTH, ENQ, SETLOCK, SYSEVENT, SPOST,          *
*                   AND DEQ.                                          *
*                   DURING CHAIN MANIPULATION ROUTINES, THE           *
*                   CSCB AND CIB ARE PROTECTED VIA ENQ.               *
*                   THE ENQ IS EXCLUSIVE.                             *
*                   MAJOR NAME=SYSIEFSD. MINOR NAME=Q10.              *
* CHANGE ACTIVITY                                             @ZA08456*
*            OZ08456                                          @ZA08456*
* MESSAGES =        NONE.                                             *
*                                                                     *
* SYSGEN =          THIS MODULE IS INCLUDED IN LOAD MODULE            *
*                   IGC0003D, IN DLIB AOSB3 AND IS GENERATED          *
*                   VIA SYSGEN MACRO SGIEF441. IT RESIDES IN          *
*                   LPALIB.                                           *
* LIBRARIES =       NONE.                                             *
***********************************************************************
* NOTES - A ROUTINE THAT ISSUES AN SVC 34 MUST HAVE PROTECT KEY       *
*        OF LESS THAN EIGHT; I.E. SYSTEM KEY.                         *
*       - FLAGS WERE NOT USED TO INDICATE WHAT PROCESSING SHOULD BE   *
*         PERFORMED ON A CIB TO ALLOW FUTURE NON-ZERO PROTECT KEY     *
*         ROUTINES CERTAIN CIB PROCESSING(DELETE ONE CIB,SET MAX CNT) *
*         THIS WOULD NOT BE POSSIBLE IF ROUTINE HAD TO SET FLAGS      *
*         IN A CIB WHICH IS IN PROTECTED STORAGE(S.P.245)             *
*                                                                     *
***********************************************************************
         TITLE ' CSCB'
DSCHAIN  DSECT
         IEECHAIN
         TITLE ' PREFIX STORAGE AREA'
         IHAPSA
         TITLE ' MASTER RESIDENT CORE'
         IEEBASEA
         TITLE ' COMMUNICATIONS VECTOR TABLE'
CVT      DSECT                                                   Y02669
         CVT
         TITLE ' EXTENDED SAVE AREA'
TRXSA    DSECT
         IEEXSA
         TITLE ' COMMAND INPUT BUFFER'
CIBD     DSECT
CIB      IEZCIB
         TITLE 'IEE0303D QEDIT'
IEE0303D CSECT
* A 480620-480640                                                YM1157
* D 481500-481800                                                YM1157
* A 428020-428040                                              @YM08433
* A 428070-428150,429000,861250-861270                         @YM07259
* C 884000                                                     @YM07259
* CODE ADDED TO ENQRTN                                         @ZA08456
         SPACE
* R E G I S T E R   A S S I G N M E N T S
         SPACE
R0       EQU   0     UCM INDICATOR                                 IMCS
R1       EQU   1    INPUT REG, PTR TO BUFFER
R2       EQU   2    XSA BASE REG
R3       EQU   3    MODULE BASE REG
R4       EQU   4    XSA WORKREG
R5       EQU   5    TRANSLATE WORK REG
R6       EQU   6    TRANSLATE WORK REG
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15   XCTL PARA-REG
CHABT    EQU   X'01'                   ABTERM BIT OF CHAIN ELEMENT
FOXZERO  EQU   X'F0'                                               SMCS
D0       EQU   0                        USED FOR OFFSETS,LENGTHS,ETC.
D2       EQU   2                        *
D3       EQU   3                        *                        Y02651
D4       EQU   4                        *                        Y02669
D8       EQU   8                        *                        Y02669
D17      EQU   17
D28      EQU   28                                                 20030
D96      EQU   96                                                 20002
X00      EQU   X'00'                                              20002
PKNOTO   EQU   X'01'              CALLER A PROBLEM PROGRAM       E02669
DONTDEQ  EQU   X'02'              IF CALLER HOLDS ENQ            Y02651
SIXTEEN  EQU   X'16'              LENGTH OF CSCB (DW) FOR CMD     M5390
         EJECT
         BALR  R3,0
         USING *,R3
         MODID BRANCH=YES                                        Y01886
         SPACE
* BASE THE XSA AND TEST FOR CALLING ROUTINE HAVING SYSTEM        Y02669
* PROTECT KEY.                                                   Y02669
         SPACE
RCORE    EQU   R10
         SPACE
         USING CVT,R8                                            Y02669
         L     R8,CVTPTR           ADDRESS CVT
         L     RCORE,CVTMSER       ADDRESS MASTER RESIDENT CORE
         USING BASE,RCORE
         USING TRXSA,R9                                          Y02669
         LR    R9,R2               SAVE PTR TO XSA                20002
         MVI   XAE,X00             CLEAR FLAG(S) BYTE            Y02669
         EJECT
***********************************************************************
*
*     THE FOLLOWING BRANCH TABLE PROCESSES RETURN CODES FROM     Y02669
*     THE TESTAUTH MACRO ISSUED IN IEE0303D. THE RETURN CODES    Y02669
*     ARE EXPLAINED BELOW.                                       Y02669
*
***********************************************************************
         ST    R14,XAP              SAVE RETURN ADDRESS REG      Y02669
         STM   R0,R1,XAX            SAVE INPUT REGISTERS         Y02669
         TESTAUTH KEY=YES           QUERY QEDIT/MGCR CALLER      Y02669
         LM    R0,R1,XAX            RESTORE INPUT REGISTERS      Y02669
***********************************************************************
         B     TABLE(R15)           PROCESS RETURN CODE          Y02669
TABLE    EQU   *
         B     PROCESS              R/C=0: SYSTEM KEY            Y02669
         B     TSTR1                R/C=4: PROBLEM PROGRAM KEY   Y02669
         B     ERRORHER             R/C=8: TESTAUTH CALLER ERROR Y02669
***********************************************************************
*     ABOVE INSTRUCTION SEQUENCE DEPENDENT ON TESTAUTH RETURN    Y02669
*     CODES.                                                     Y02669
***********************************************************************
*     THE FOLLOWING CODE VALIDITY CHECKS A P/P CALLER.           YM5130
*     IT WILL ALLOW A P/P TO SET A CIBCT TO ZERO, BUT            YM5130
*     WILL EDIT OUT AN INPUT OF ZEROES IN REG ONE AND            YM5130
*     IN REG ZERO PLUS AN INPUT OF FREEING THE CIB               YM5130
*     CHAIN ENTIRELY.                                            YM5130
***********************************************************************
TSTR1    EQU   *
         LTR   R1,R1               DELETE CIB OR UP CIB CT.       M5694
         BP    ERRORHER            ALLOW P/P TO SET CIBCOUNT     A56067
*                                  TO ZERO                       A56067
*                                  IF R1 IS ZERO, RO CANNOT BE   YM5130
*                                  ZERO OR POS. FOR P/P          YM5130
         BM    CONT                IF MINUS, BYPASS NEXT CHECK   YM5130
         LTR   R0,R0               INSURE R0 IS NEGATIVE.        YM5130
         BM    CONT                IF SO, CONTINUE               YM5130
         B     ERRORHER            IF NOT, SET BAD RET CODE      YM5130
CONT     EQU   *                                                 YM5130
         OI    XAE,PKNOTO          PREVENT ADDING A CIB          Y02669
         B     XCHAIN              CONTINUE                       M5694
PROCESS  EQU   *                                                   AAAA
         LTR   R1,R1               IF NEG, CHAIN MANIPULATION
         BM    XCHAIN
         BP    TRBRANCH            IF POS.GO TO TRANSLATE CMD.   Y02669
*                                                                  CIB
* IF REG.1 IS ZERO,PROCESSING COULD EITHER BE FREEING OF CIB CHAIN CIB
* OR SETTING A MAX CIB COUNT OF ZERO IN CSCB.                      CIB
* TO DETERMINE FUNCTION REG.0 MUST BE EXAMINED                     CIB
*                                                                  CIB
         XR    R15,R15             INITIALLY SET NORMAL RETURN
         LTR   REG0,REG0                IF REG.0 IS NEGATIVE       CIB
         BM    XSETCNT1                    SET MAX CIB CNT OF ZERO CIB
         BP    XFREECHN                 IF POS., FREE CIB CHAIN    CIB
*                                                                  CIB
* IF NONE OF ABOVE CONDITIONS EXIST, BOTH REGS ARE ZERO            CIB
*                                                                  CIB
ERRORHER EQU   *                                                  20002
         LA    R15,8               P/P TRYING TO ISSUE CMD        M5694
         L     R14,XAP             RESTORE RETURN ADDRESS        Y02669
         BR    R14                 RETURN                          AAAA
TRBRANCH EQU   *
         L     R15,VCON54          SET UP BRANCH TO IEE5403D     Y02669
         BR    R15                 GO TO TRANSLATE COMMAND       Y02669
         TITLE ' CHAIN MANIPULATION'
         SPACE
REG0     EQU   R0
REG1     EQU   R1
RX       EQU   R4
RV       EQU   R5
F        EQU   X'FF'
         SPACE
XCHAIN   EQU  *
         USING CHAIN,REG1
         LPR   REG1,REG1           MAKE REG1 POINTER POSITIVE
         LTR   REG0,REG0           TEST FOR CSCB PROCESSING    @YM08433
         BNZ   ISSUEENQ            IF NOT THEN ISSUE ENQ       @YM08433
         TM    CHSTS,CHABT         IS THIS AN ABTERM REQ       @YM07259
         BO    NOENQ               NO ENQ FOR ABTERM           @YM07259
ISSUEENQ EQU   *
         BAL   R12,ENQRTN          GO TO ENQ ON CSCB RECOURSE    Y02651
NOENQ    EQU   *                                               @YM07259
         SR    R15,R15             INITIALLY SET NORMAL RETURN     CIB
*                                                                  CIB
         LTR   REG0,REG0           TEST FOR SETTING MAX CIB COUNT  CIB
         BM    XSETCNT             IF NEGATIVE,SET COUNT IN CSCB   CIB
         BZ    XCSCBCHN            IF ZERO,CSCB CHAIN PROCESSING   CIB
XCIBCHN  EQU   *                                                  20030
         BAL   R12,XCHKCSCB        VALIDITY CHECK ORIGIN ADDRESS   CIB
         BAL   R12,XFRST                INITIALIZE REGISTERS       CIB
         BAL   R12,XSCHN           ATTEMPT TO REMOVE FROM CHAIN    CIB
         BAL   R12,XCFC                 FREE CORE                  CIB
         B     XRSTECB                  TEST FOR EMPTY CIB CHAIN   CIB
XCSCBCHN LR    R0,RCORE                 SET ORIGIN POINTER         CIB
         BAL   R12,XFRST                INITIALIZE REGISTERS       CIB
         TM    CHSTS,CHABT             IS SVC 34 FOR ABTERM
         BO    XEOT                    YES. GO TO GO TO ABTERM
         TM    CHSTS,CHAD          ADDITION TO THE CHAIN
         BO    XCHAD
         TM    CHSTS,CHDL+CHFC     IS THIS DELETE OR FREE BLOCK    CIB
         BZ    XENABLE                  IF NOT,ENABLE AND RETURN   CIB
         BAL   R12,XSCHN                REMOVE BLOCK IF IN CHAIN   CIB
XCHKFR   TM    CHSTS,CHFC               IS FREE BIT ON             CIB
         BZ    XENABLE                  IF NOT,ENABLE AND RETURN   CIB
         STM   R0,R1,XAX          SAVE REG PARMS AROUND POST     YM0402
*                                 PURGE OUTSTANDING POSTS        Y02651
         SPOST
         LM    R0,R1,XAX          RESTORE REG INPUT PARMS        YM0402
         TM    CHSZE,SIXTEEN      DETERMINE IF CSCB FOR CMD       M5390
         BO    JUSTCSCB           YES- NO CIB TO FREE             M5390
         LR    R7,R1              SAVE CSCB PTR                   M4603
         L     R1,CHCIBP          PTR TO CIB                      M4603
         CL    R1,BLANK           CIB POINTER IN CSCB BLANK?     YM1157
         BE    FREECSCB           YES, FREE THE CSCB             YM1157
         LA    R1,D0(R1)          CLEAR HIGH ORDER BYTE           M1878
         LTR   R1,R1              CIB PTR IN CSCB ZERO            M4603
         BZ    FREECSCB           YES-FREE CSCB                   M4603
BACK     L     R8,0(R1)           SAVE PTR TO NEXT CIB            M4603
         LA    R8,D0(R8)          CLEAR HIGH ORDER BYTE           M1878
         BAL   R12,FREECIB        BRANCH TO FREE THIS CIB         M4603
         LTR   R1,R8              ANY MORE CIB'S                  M4603
         BP    BACK               YES-CONTINUE FREEING            M4603
FREECSCB LR    R1,R7              RESTORE CSCB PTR                M4603
JUSTCSCB BAL   R12,XCFC           FREE CSCB CORE                  M5390
         B     XENABLE                  ENABLE AND RETURN          CIB
*
         SPACE
* ADD THE ELEMENT TO THE CHAIN
         SPACE
XCHAD    EQU   *
XCHNSC   EQU   *
         LTR   RX,RX               IS THE CURRENT PTR = 0
         BZ    XCHND               IF SO, END OF CHAIN HAS BEEN REACHED
         LR    RV,RX               IF NOT, SAVE THAT POINTER
         L     RX,0(RX)            GET NEXT POINTER
         B     XCHNSC              CONTINUE CHAIN SCAN
XCHND    EQU   *
         TM    XAE,PKNOTO          CHECK FOR PROTECT KEY NOT 0   Y02669
         BO    ERROROUT            ERROR IF KEY NOT 0            Y02651
         ST    REG1,0(RV)          INSERT ELEMENT PNTER IN CHAIN
         NI    CHSTS,F-CHAD        TURN OFF CHAIN ADDITION SWITCH
         ST    RX,CHPTR            STORE ZERO IN PTR OF ADDED ELEMENT
         CR    REG0,RCORE          IS ORIGIN CSCB CHAIN ORIGIN     CIB
         BNE   XENABLE             IF NOT,RETURN(ENABLE AND EXIT)  CIB
* DELETE THE ELEMENT FROM THE CHAIN
XSCHN    EQU   *
         LTR   RX,RX                    END OF CHAIN OR CHAIN EMPTY
         BZ    XCHER                    CHECK FOR POSSIBLE ERROR
         CLR   REG1,RX                  IS THIS THE ELEMENT
         BE    XCHFND                   IF SO,REMOVE
         LR    RV,RX                    IF NOT,SAVE POINTER
         L     RX,0(RX)                 GET NEXT POINTER
         B     XSCHN                    CONTINUE SCAN
XCHFND   EQU   *
         MVC   0(4,RV),CHPTR            REMOVE ELMT FROM CHAIN
         NI    CHSTS,F-CHDL             TURN OFF DELETION SWITCH
         BR    R12                      RETURN TO PROPER SECTION   CIB
*
XCFC     EQU   *
         NI    CHSTS,F-CHFC             TURN OFF FREE SWITCH
         LR    RX,REG0                 SAVE ORIGIN PTR             CIB
FREECIB  SR    REG0,REG0                                          M4603
         IC    REG0,CHSZE               BLOCK SIZE IN DBL WORDS
         SLL   REG0,3                   CONVERT TO BYTES FOR FREEMAIN
         O     REG0,X245M               INSERT POOL NUMBER        20030
         FREEMAIN R,LV=(0),A=(1)
         LR    R0,RX                    RESTORE ORIGIN PTR         CIB
         SR    R15,R15             SET NORMAL RETURN              M3480
         BR    R12                      RETURN TO PROPER SECTION   CIB
*                                                                  CIB
XCHER    EQU   *                                                   CIB
         CR    REG0,RCORE               IS THIS CSCB               CIB
         BNE   XCHNDTST                 IF NOT,CAN BLOCK BE ADDED  CIB
*                                                                  CIB
         TM    CHSTS,CHDL               IS THIS DELETE BLOCK       CIB
         BZ    XCHKFR                   IF NOT,TEST FOR FREE CORE  CIB
         B     XERR                     SYSTEM ERROR               CIB
*
         EJECT
***********************************************************************
*                                                                     *
*              INTERNAL SUBROUTINES FOR CIB CHAIN MANIPULATION        *
*                                                                     *
***********************************************************************
         SPACE 3
*
* ROUTINE TO SET WORK REGS WITH ORIGIN AND BLOCK POINTERS
*
XFRST    EQU   *                                                   CIB
         LR    RV,R0                    MOVE ORIGIN POINTER        CIB
         L     RX,0(RV)                 GET FIRST BLOCK POINTER    CIB
         LA    RX,0(RX)                 CLEAR HIGH ORDER BYTE      CIB
         BR    R12                      RETURN                     CIB
         SPACE 3                                                   CIB
*                                                                 M4385
******************************************************************M4385
*                                                                 M4385
* THIS ROUTINE IS ENTERED TO CLEAR THE COMMUNICATIONS ECB WHEN    M4385
* THE CIB CHAIN IS EMPTY.                                        Y02669
*                                                                 M4385
******************************************************************M4385
*                                                                 M4385
XRSTECB  EQU   *                                                   CIB
         BAL   R12,XFRST                INITIALIZE REGISTERS       CIB
         LTR   RX,RX                    IS CHAIN EMPTY             CIB
         BNZ   XENABLE                  IF NOT,ENABLE AND RETURN   CIB
         SH    RV,FOUR                  SET POINTER TO ECB ADDRESS CIB
         L     RV,0(RV)                 GET ADDRESS OF ECB         CIB
         XC    0(4,RV),0(RV)            CLEAR COMMUNICATIONS ECB   CIB
         B     XENABLE                  ENABLE AND RETURN          CIB
         EJECT                                                    CIB
***********************************************************************
*     AN EXCLUSIVE ENQ IS DONE ON THE CSCB RECOURSE IN THIS      Y02651
*     SUBROUTINE.  IT IS ENTERED FROM LABELS XCHAIN, XSETCNT1,   Y02651
*     AND XFREECHN.                                              Y02651
***********************************************************************
ENQRTN   EQU   *
         STM   R0,R1,XAX          SAVE REG PARMS AROUND ENQ      Y02651
         SYSEVENT DONTSWAP        MAKE MEMORY NON=SWAPPABLE      YM0405
         MVC   XASAVSTD(ENQLNG),ENQLIST                          Y02651
         LA    R1,XASAVSTD        LIST FORM OF MACRO             Y02651
         ENQ   ,MF=(E,(1))        ISSUE EXCLUSIVE ENQ            Y02651
         LTR   R15,R15            IS RETURN CODE ZERO?         @ZA08456
         BZ    RESTORE            CONTINUE IF YES              @ZA08456
         CLI   D3(R15),D8         RESOURCE ALREADY HELD?         Y02651
         BNE   RESTORE            CONTINUE IF NO                 Y02651
         OI    XAE,DONTDEQ        IF ENQ HELD, SET BIT TO        Y02651
*                                 BYPASS DEQ ROUTINE AT EXIT.    Y02651
RESTORE  EQU   *                                                 Y02651
         LM    R0,R1,XAX          RESTORE R1 PARMS               Y02651
         BR    R12                RETURN TO MAINLINE             Y02651
*                                                                  CIB
* ROUTINE TO FREE ALL CIB BLOCKS WHEN TASK TERMINATES              CIB
* ANY REMAINING CIB CORE IS FREED WHEN THE STARTED TASK TERMINATES CIB
*                                                                  CIB
XFREECHN EQU   *                                                   CIB
         BAL   R12,ENQRTN               GO ENQ ON CSCB RECOURSE  Y02651
         SR    R15,R15                  SET NORMAL RETURN CODE     CIB
         BAL   R12,XFRST                INITIALIZE REGISTERS       CIB
XTEST    LTR   REG1,RX                  END OF CIB CHAIN?          CIB
         BZ    XRSTECB                  IF YES,CLEAR ECB,RETURN    CIB
         BAL   R12,XSCHN                DELETE FROM CHAIN          CIB
         L     R2,0(REG1)               GET NEXT PTR. BEFORE FREE  CIB
         BAL   R12,XCFC                 FREE CORE OF CIB           CIB
         LR    RX,R2                    MOVE NEXT BLOCK POINTER    CIB
         B     XTEST                    CHECK POINTER              CIB
*                                                                  CIB
         SPACE 3                                                   CIB
*                                                                  CIB
* ROUTINE TO SET THE MAXIMUM CIB COUNT IN THE CSCB                 CIB
* THE COUNT IS INITIALLY SET TO ZERO BY L-SHAPE AND MAY BE CHANGED CIB
* BY AUTHORIZED PROGRAMS                                           CIB
*                                                                  CIB
XSETCNT1 EQU   *
         BAL   R12,ENQRTN               GO ENQ ON CSCB RECOURSE  Y02651
XSETCNT  EQU   *                                                   CIB
         LPR   REG0,REG0                MAKE ORIGIN PTR.POSITIVE   CIB
         BAL   R12,XNOGCB               GO TO FIND CSCB            CIB
         DROP  REG1                                                CIB
         USING CHAIN,R2                                            CIB
         STC   REG1,CHCIBCTR            INSERT COUNT INTO CSCB     CIB
         DROP  R2                                                  CIB
         USING CHAIN,REG1                                          CIB
         B     XENABLE                  ENABLE AND RETURN          CIB
*                                                                  CIB
*                                                                  CIB
         SPACE 3                                                   CIB
*                                                                  CIB
* ROUTINE TO DETERMINE WHETHER OR NOT ANOTHER CIB MAY BE ADDED     CIB
* A STOP COMMAND IS ADDED AUTOMATICALLY * THE COUNT IS NOT CHECKED CIB
*                                                                  CIB
XCHNDTST EQU   *                                                   CIB
         DROP  REG1                                                CIB
         USING CIBD,REG1                                           CIB
         CLI   CIBVERB,CIBSTOP          IS THIS STOP COMMAND       CIB
         BE    XCHND                    IF YES, ADD COMMAND        CIB
         SR    R6,R6                    CLEAR COUNT REGISTER       CIB
         LR    R7,REG0                  MOVE ORIGIN POINTER        CIB
XTEST3   L     R7,0(R7)                 GET ADDRESS OF FIRST BLOCK CIB
         LA    R7,0(R7)                CLEAR HIGH ORDER BIT        CIB
         LTR   R7,R7                    IS PTR ZERO                CIB
         BZ    XENDCNT                  IF END OF CHAIN,CHECK COUNTCIB
         LA    R6,1(R6)                 INCR.CT.OF CIB'S ON CHAIN  CIB
         B     XTEST3                   CONTINUE SCAN              CIB
*                                                                  CIB
         DROP  R1                                                  CIB
         USING CHAIN,R2                                            CIB
XENDCNT  EQU   *                                                   CIB
         BAL   R12,XNOGCB               FIND CORRECT CSCB          CIB
         SR    R7,R7                    CLEAR COUNT REGISTER       CIB
         IC    R7,CHCIBCTR              GET MAX.COUNT FROM CSCB    CIB
         CR    R6,R7                    IS LIMIT EXCEEDED          CIB
         BL    XCHND                    IF NOT, ADD CIB            CIB
         LA    R15,8                    IF YES,REJECT COMMAND      CIB
         B     XENABLE                  ENABLE AND RETURN          CIB
         DROP  R2                                                  CIB
         SPACE 3                                                   CIB
*                                                                  CIB
* ROUTINE TO VALIDITY CHECK ORIGIN POINTERS                        CIB
* THE CHECK IS PERFORMED ONLY FOR CIB ORIGIN POINTER               CIB
*                                                                  CIB
XCHKCSCB EQU   *                                                   CIB
         USING CHAIN,R2                                            CIB
XNOGCB   L     R2,BACHN                 GET ADDRESS FIRST CSCB     CIB
XTEST2   LTR   R2,R2                    TEST FOR END OF CHAIN      CIB
         BZ    XERR                     IF NO CSCB FOUND,ERROR     CIB
         LA    R7,CHCIBP                GET ADDRESS CIB ORIGIN     CIB
         CR    REG0,R7                  IS THIS CORRECT CSCB       CIB
         BNE   XNEXT                    IF NOT,CONTINUE SCAN       CIB
         BR    R12                      IF YES,RETRN WITH CSCB PTR CIB
XNEXT    L     R2,CHPTR                 GET NEXT BLOCK ADDRESS     CIB
         B     XTEST2                   TEST FOR END OF CHAIN      CIB
         DROP  R2                                                  CIB
         USING CHAIN,REG1                                          CIB
ERROROUT EQU   *
         LA    R15,D8             SET ERROR CODE OF EIGHT        Y02669
         B    XENABLE             GO TO DEQ AND RETURN           Y02669
XERR     EQU   *                                                   CIB
         LA    15,4                     SET ERROR CODE             CIB
XENABLE  EQU   *
         TM    XAE,DONTDEQ        DID SVC34 CALLER DO ENQ?       Y02651
         BO    RETURN             IF YES, LET HIM DO DEQ.        Y02651
         ST    R15,XAD            SAVE RETURN CODES              Y02651
         MVC   XASAVSTD(DEQLNG),DEQLIST                          Y02651
         LA    R1,XASAVSTD        LIST FORM DEQ MACRO            Y02651
         DEQ   ,MF=(E,(1))        ISSUE DEQ FOR CSCB RECOURSE    Y02651
         SYSEVENT OKSWAP          MAKE MEMORY SWAPPABLE          Y02651
         L     R15,XAD            RESTORE RETURN CODES           Y02651
RETURN   EQU   *                                                 Y02651
         L     R14,XAP            RESTORE RETURN ADDRESS         Y02651
         BR    14                 RETURN TO SYSTEM               Y02651
         EJECT
***********************************************************************
*     THE FOLLOWING ROUTINE INVOKES ABTERM. IT IS ENTERED        Y02669
*     WHEN SVC34 IS CALLED BY A SYSTEM TASK WITH CHABT ON        Y02669
*     IN THE CSCB.  INPUT PARAMETERS CONSIST OF TWO WORDS        Y02669
*     POINTED TO NOW IN XAN. THEY ARE THE TCB OF THE TASK        Y02669
*     TO BE TERMINATED AND THE COMPLETION CODE. CURRENT          Y02669
*     KNOWN CALLER IS THE INITIATOR AFTER GETTING CONTROL        Y02669
*     FROM SVC34 WHEN A CANCEL COMMAND IS ISSUED.                Y02669
*     LOCAL LOCK IS OBTAINED AS REQUIRED BY CALLRTM MACRO WITH   Y02669
*     TYPE=ABTERM SPECIFIED.  LOCK IS RELEASD AT LABEL CLRLOCK.  Y02669
***********************************************************************
XEOT     EQU   *                                                 Y02669
         TM    XAE,PKNOTO              SVC34 CALLED BY P/P?      Y02669
         BNO   NOABTERM                YES, SET BAD RETURN CODE  Y02669
         LA    R15,D8                  RC = 8 INTO REG 15      @YM07259
         B     RETURN                  RETURN TO CALLER        @YM07259
NOABTERM EQU   *                                               @YM07259
         NI    CHSTS,F-CHABTERM        NO, TURN OFF ABTERM BIT   Y02669
         LR    R8,R1                   SAVE R1 BEFORE LOCKING    Y02651
GETLOCK  EQU   *
         SETLOCK OBTAIN,TYPE=LOCAL,MODE=UNCOND,                        *
               RELATED=(CALLRTM,IEE0303D(CLRLOCK))
         L     R13,XAN                 GET  PTR TO ABTERM PRMS   Y02669
         LA    R13,D0(R13)             CLEAR HIGH ORDER BYTE     Y02669
         L     R11,D0(R13)             GET TCB PTR FOR MACRO     Y02669
         L     R5,D4(R13)              GET COMPLETION CODE       Y02669
         CLC   D4(D4,R13),DUMP         IS DUMP REQUESTED?        Y02669
         BNE   NODUMP                  NO, REQUEST NO DUMP.      Y02669
***********************************************************************
*     GO TO ABTERM REQUESTING DUMP                               Y02669
***********************************************************************
         CALLRTM TYPE=ABTERM,COMPCOD=(R5),TCB=(R11),DUMP=YES,STEP=YES
         B     CLRLOCK                 GO RELEASE LOCK           Y02651
***********************************************************************
*     GO TO ABTERM REQUESTING NO DUMP                            Y02669
***********************************************************************
NODUMP   EQU   *                                                 Y02669
         CALLRTM TYPE=ABTERM,COMPCOD=(R5),TCB=(R11),DUMP=NO,STEP=YES
CLRLOCK   EQU   *                                                Y02651
         SETLOCK RELEASE,TYPE=LOCAL,RELATED=(CALLRTM,IEE0303D(GETLOCK))
         LR    R1,R8                   RESTORE REG 1
         B     RETURN                 RETURN TO CALLER         @YM07259
         EJECT
         DS    0F
X245M    DC    X'F5000000'              SUBPOOL 245 MASK          20030
DUMP     DC    X'00000122'             DUMP COMPLETION CODE      Y02669
FOUR     DC    H'4'
         DS    0F
VCON54   DC    V(IEE5403D)        COMMAND PROCESSING MODULE      Y02669
BLANK    DC    X'40404040'        TEST ABSENCE OF CIB IN CSCB     M4603
         DS    0D
ENQLIST  ENQ   (SYSNAME,RNAME,E,3,SYSTEM),RET=HAVE,MF=L          Y02651
ENQEND   EQU   *                  LABEL TO CALCULATE LENGTH      Y02651
         DS    0D
DEQLIST  DEQ   (SYSNAME,RNAME,3,SYSTEM),RET=HAVE,MF=L            Y02651
DEQEND   EQU   *                  LABEL TO CALCULATE LENGTH      Y02651
ENQLNG   EQU   ENQEND-ENQLIST     LENGTH OF ENQLIST FOR MOVE     Y02651
DEQLNG   EQU   DEQEND-DEQLIST     LENGTH OF DEQLIST FOR MOVE     Y02651
         DS    0F                                                Y02651
SYSNAME  DC    C'SYSIEFSD'        MAJOR NAME                     Y02651
RNAME    DC    C'Q10'             MINOR NAME                     Y02651
         DS    0F                                              @ZA08456
PATCH    DC    CL50'***IEE0303D PATCH AREA***'                 @ZA08456
         END
