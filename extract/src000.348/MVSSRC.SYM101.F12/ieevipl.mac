         TITLE '(IEEVIPL) MASTER SCHEDULE BASE INITIALIZATION'   Y02669
IEEVIPL  CSECT
         EJECT
***********************************************************************
* MODULE NAME   = IEEVIPL                                             *
*                                                                     *
* CSECT NAME    = IEEVIPL                                             *
*                                                                     *
* DESCRIPTION   = MASTER SCHEDULER BASE INITIALIZATION                *
*                                                                     *
* COPY RIGHT    = NONE                                                *
*                                                                     *
* STATUS        = OS-VS2 RELEASE 037                          @ZA30544*
*                                                                     *
* FUNCTION      = THIS IS THE FIRST MODULE OF MASTER SCHEDULER.       *
*                 IT IS RESPONSIBLE FOR SCHEDULER INITIALIZATION.     *
*                 IT WILL INVOKE THE SUBSYSTEM INTERFACE INITIAL-     *
*                 IZATION FUNCTION, COMMUNICATION TASK                *
*                 INITIALIZATION, TIME OF DAY CLOCK PROCESSOR, AND    *
*                 VARIABLE INITIALIZATION.                            *
*                                                                     *
* OPERATION     = THE MASTER SCHEDULER INITIALIZATION ROUTINE         *
*                 (IEEVIPL) RECEIVES CONTROL FROM THE NIP             *
*                 PROCESSOR VIA A LINK MACRO INSTRUCTION AND          *
*                 OPERATES IN ITS OWN REGION.                         *
*                 IEEVIPL OPERATES UNDER THE PROTECTION OF A          *
*                 ESTAE ENVIRONMENT.  ESTAE PROVIDES INTER-           *
*                 VENTION IN CASE OF AN ABEND CONDITION.  IF          *
*                 AN ABEND CONDITION OCCURS, ABEND PROCESSES          *
*                 NORMALLY UNTIL THE ESTAE INTERFACE ROUTINE          *
*                 SYNCHES TO THE EXIT ROUTINE (IPSTAR). WHEN          *
*                 THE EXIT ROUTINE COMPLETES, IT WILL ENTER           *
*                 A PERMANENT WAIT STATE VIA LOADING A WAIT           *
*                 STATE PSW OR A WAIT SVC.                            *
*                 THE OPERATION OF THIS MODULE IS AS FOLLOWS:         *
*                   . GET CORE FOR THE ESTAE PARAMETER AREA           *
*                   . CREATE A ESTAE ENVIRONMENT                      *
*                   . GET CORE FOR THE JSCB                           *
*                   . GET CORE FOR THE CSCB                           *
*                   . GET CORE FOR THE SSIB                           *
*                   . GET CORE FOR THE IEL                            *
*                   . GET ADDRESS OF IKJEFLF AND PUT IT IN CVTSIC     *
*                   . GET ADDRESS OF IEFQB550 AND PUT IT IN JESCT     *
*                   . GET ADDRESS OF IEFQB555 AND PUT IT IN JESCT     *
*                   . GET ADDRESS OF IEFQB580 AND PUT IT IN JESCT     *
*                   . GET ADDRESS OF IEFW21SD AND PUT IT IN JESCT     *
*                                                             @Z40FPPJ*
*                   . GET ADDRESS OF IEFBB410 AND PUT IT IN JESCT     *
*                                                             @Z40FPPJ*
*                   . GET ADDRESS OF IEFAB4F5 AND PUT IT IN JESCT     *
*                                                             @Z40FPPJ*
*                   . CALC NUMBER OF UCB'S IN SYSTEM          @Z40FPPJ*
*                   . GET ADDRESS OF IEFJRECM AND PUT IT IN CVT       *
*                   . GET ADDRESS OF IEFIRECM AND PUT IT IN CVT       *
*                   . GET ADDRESS OF IEFAB4E5 AND PUT IT IN CVT       *
*                   . INITIALIZE AND CHAIN THE ABOVE BLOCKS           *
*                   . MOVE THE ASCB ADDRESS TO BASEA                  *
*                   . GET A REGISTER SAVE AREA                        *
*                   . INVOKE SUBSYSTEM INTERFACE INITIALIZATION       *
*                   . INVOKE COMMUNICATION TASK INITIALIZATION        *
*                   . POST COMMUNICATION TASK COMPLETE                *
*                   . INVOKE MASTER SCHEDULER VARIABLE INITIALIZATION *
*                   . INVOKE TSO SERVICE ROUTINE               @YM2225P
*                   . LOAD TOD CLOCK CONVERSION ROUTINE               *
*                   . INVOKE TOD CLOCK CONVERSION ROUTINE             *
*                   . DELETE TOD CLOCK CONVERSION ROUTINE             *
*                   . FREE THE REGISTER SAVE AREA                     *
*                   . IF TOD WAS SUCCESSFUL, INVOKE THE INITIATOR     *
*                   . IF TOD FAILED, INFORM OPERATOR AND WAIT         *
*                 THE OPERATION OF THE ESTAE ROUTINE IS:              *
*                   . TAKE DUMP IF NOT PERCOLATION OR MCH CHK  @YM3509P
*                   . INFORM OPERATOR OF FAILURE AND DUMP STATUS      *
*                   . ISSUE WAIT                                      *
*                                                                     *
* NOTES:                                                              *
*  CHARACTER-                                                         *
*  CODE         = MODULE MAY BE REASSEMBLED WITH A NEW CODE SET       *
*  DEPENDENCIES = NONE                                                *
*  RESTRICTIONS = NONE                                                *
*  REGISTER-                                                          *
*  CONVENTIONS  = NONE                                                *
*  PATCH-LABEL  = VPATCH                                              *
*                                                                     *
* MODULE TYPE:                                                        *
*  PROCESSOR    = ASSEMBLER                                           *
*  MODULE SIZE  = X'628'                                              *
*  ATTRIBUTES   = REENTRANT                                           *
*                 REFRESHABLE                                         *
*                 SUPERVISOR MODE                                     *
*                 ZERO PSW PROTECT KEY                                *
*                 MASTER SCHEDULER REGION                             *
*                                                                     *
* ENTRY POINT   = IEEVIPL                                             *
*  PURPOSE      = MASTER INITIALIZATION                               *
*  LINKAGE      = LINK                                                *
*  INPUT DATA   = NONE                                                *
*                                                                     *
* ENTRY POINT   = IPSTAR                                              *
*  PURPOSE      = MASTER INITIALIZATION RECOVERY FUNCTION             *
*  LINKAGE      = SYNCH                                               *
*  INPUT DATA   = ESTAE WORKAREA (REGISTER 1)                         *
*                 ESTAE PARAMETER LIST (ESTAE WORKAREA)               *
*                                                                     *
* ENTRY POINT   = IPSTAR1                                             *
*  PURPOSE      = MASTER INITIALIZATION RECOVERY FUNCTION (FAILURE)   *
*  LINKAGE      = BRANCH                                              *
*  INPUT DATA   = ESTAE PARAMETER LIST (REGISTER 2)                   *
*                                                                     *
* REGISTER USAGE:                                                     *
*  SAVED        = NONE                                                *
*  CONTAINED    = UNPREDICTABLE                                       *
*  RESTORED     = NONE                                                *
*                                                                     *
* PROGRAM FLOW  = .CREATE THE ESTAE ENVIRONMENT                       *
*                 .SETS UP THE INTERFACE REQUIRED TO INVOKE THE       *
*                  INITIATOR                                          *
*                 .LOAD AND SET ADDRESS OF SIC MODULE IN CVT          *
*                 .LOAD AND SET ADDRESSES OF SWA MANAGEMENT           *
*                  ROUTINES IN THE JESCT                              *
*                 .LOAD AND SET ADDRESSES OF ALLOCATION               *
*                  ROUTINES IN JESCT                          @Z40FPPJ*
*                 .CALCULATE NUMBER OF UCB'S IN SYSTEM AND SAVE       *
*                  IN JESCT                                   @Z40FPPJ*
*                 .LOAD AND SET ADDRESSES OF THE RESOURCE             *
*                  MANAGER ROUTINES IN THE CVT                        *
*                 .BALR TO SUBSYSTEM INTERFACE INITIALIZATION         *
*                  FUNCTION (IEFJSINT)                                *
*                 .LINK TO THE CONSOLE INITIALIZATION MODULE          *
*                  (IEAVVINT) AND POSTS THE COMMUNICATIONS TASK       *
*                 .LOAD THE TIME OF DAY CLOCK ROUTINE (IEAVRINT)      *
*                 .BALR TO TOD CLOCK CONVERSION ROUTINE               *
*                  TO SET THE CLOCK AND ISSUE WTOR REQUESTING         *
*                  THE PARAMETERS: ISSUE SVC 34 FOR SET COMMAND       *
*                 .DELETE THE TIME OF DAY CLOCK ROUTINE (IEAVRINT)    *
*                 .BALR TO MASTER VARIABLE INITIALIZATION (IEEMB850)  *
*                 .ATTACH THE INITIATOR TO START MASTER SCHEDULER     *
*                                                                     *
* EXIT - NORMAL  = IEFSD060                                           *
*  CONDITIONS    = NORMAL PROCESSING                                  *
*  OUTPUT DATA   = REGISTER 1 POINTS TO INITIATOR ENTRANCE LIST (IEL) *
*                  IEL CONTAINS THE FOLLOWING:                        *
*                      SIZE OF THE MASTER TIOT                        *
*                      SUBPOOL FOR MASTER SCHEDULER WORK AREA         *
*                  MASTER TCB WILL POINT TO A JSCB                    *
*                  THE JSCB WILL POINT TO: A DUMMY CSCB               *
*                                          THE SSIB                   *
*                                          THE ASCB                   *
*                  BASEA WILL CONTAIN THE ASCB                        *
*                  CVT CONTAINS ADDRESS OF SIC MODULE                 *
*                  CVT CONTAINS ADDRESSES OF RESOURCE MANAGER ROUTINES*
*                  JESCT CONTAINS ADDRESSES OF SWA MANAGEMENT ROUTINES*
*  RETURN CODE   = NONE                                               *
*                                                                     *
* EXIT - ERROR   = IPSTAR                                             *
*  CONDITIONS    = MASTER INITIALIZATION FAILURE                      *
*  OUTPUT DATA   = MESSAGE, DUMP                                      *
*                 '00B' INDICATES 'DUMP WAS TAKEN' WAIT CODE          *
*                 '00D' INDICATES 'NO DUMP WAS TAKEN' WAIT CODE       *
*  RETURN CODE   = NONE - PERMANENT WAIT STATE                        *
*                                                                     *
* EXTERNAL:                                                           *
*  REFERENCES    = NONE                                               *
*  ROUTINES      = IEFJSINT - SYBSYSTEM INTERFACE INITIALIZATION      *
*                  IEAVVINT - CONSOLE INITIALIZATION                  *
*                  IEAVRINT - TOD CLOCK CONVERSION ROUTINE            *
*                  IKJEFLF  - SYSTEM INITIATED CANCEL (SIC) ROUTINE   *
*                  IEFQB550 - SWA MANAGER MANAGEMENT ROUTINE          *
*                  IEFQB555 - SWA MANAGER MANAGEMENT ROUTINE          *
*                  IEFQB580 - SWA MANAGER MANAGEMENT ROUTINE          *
*                  IEFW21SD - DEVICE ALLOCATION ROUTINE       @Z40FPPJ*
*                  IEFBB410 - DEVICE UNALLOCATION ROUTINE     @Z40FPPJ*
*                  IEFAB4F5 - PRIVATE CATALOG ALLOC ROUTINE   @Z40FPPJ*
*                  IEFJRECM - SUBSYSTEM INTERFACE RESOURCE ROUTINE    *
*                  IEFIRECM - INITIATOR RESOURCE ROUTINE              *
*                  IEFAB4E5 - DEVICE ALLOCATION RESOURCE ROUTINE      *
*                  IEEMB850 - MASTER VARIABLE INITIALIZATION          *
*                  IEFSD060 - INITIATOR                               *
*  DATA AREAS    = ESTAE PARM AREA                                    *
*  CONTROL BLOCK = INITIATOR ENTRANCE LIST (IEL)            G,U       *
*                  ESTAE DIAGNOSTIC WORK AREA (SDWA)        R,U       *
*                  COMMUNICATION VECTOR TABLE (CVT)         R         *
*                  JOB ENTRY SUB-SYS CONTROL TABLE (JESCT)  U         *
*                  M.S. RESIDENT DATA AREA (BASEA)          R,U       *
*                  JOB STEP CONTROL BLOCK (JSCB)            G,U       *
*                  COMMAND SCHEDULING CONTROL BLOCK (CSCB)  G,U       *
*                  SUBSYSTEM IDENTIFICATION BLOCK (SSIB)    G,U       *
*                  ADDRESS SPACE VECTOR TABLE (ASVT)        R         *
*                  ADDRESS SPACE CONTROL BLOCK (ASCB)       R         *
*                  TASK CONTROL BLOCK (TCB)                 R,U       *
*                   KEY: G=GETMAIN                                    *
*                        U=UPDATE                                     *
*                        R=REFERENCE                                  *
*                        F=FREEMAIN                                   *
*  TABLES        = NONE                                               *
*  MACROS        = MODID      MODULE IDENTIFICATION                   *
*                  GETMAIN    STAE WORK AREA SIZE FROM SUBPOOL 253    *
*                  ESTAE      CREATE STAE ENVIRONMENT                 *
*                  GETMAIN    JSCB FROM SUBPOOL 241                   *
*                  GETMAIN    CSCB FROM SUBPOOL 245                   *
*                  GETMAIN    SSIB FROM SUBPOOL 241                   *
*                  GETMAIN    IEL FROM SUBPOOL 230                    *
*                  LOAD       IKJEFLF - SIC ROUTINE                   *
*                  DELETE     IKJEFLF - SIC ROUTINE                   *
*                  LOAD       IEFQB550 - SWA MANAGEMENT ROUTINE       *
*                  DELETE     IEFQB550 - SWA MANAGEMENT ROUTINE       *
*                  LOAD       IEFQB555 - SWA MANAGEMENT ROUTINE       *
*                  DELETE     IEFQB555 - SWA MANAGEMENT ROUTINE       *
*                  LOAD       IEFQB580 - SWA MANAGEMENT ROUTINE       *
*                  DELETE     IEFQB580 - SWA MANAGEMENT ROUTINE       *
*                  LOAD       IEFW21SD - DEVICE ALLOCATION ROUTINE    *
*                                                             @Z40FPPJ*
*                  DELETE     IEFW21SD - DEVICE ALLOC ROUTINE @Z40FPPJ*
*                  LOAD       IEFBB410 - DEVICE UNALLOC RTN   @Z40FPPJ*
*                  DELETE     IEFBB410 - DEVICE UNALLOC RTN   @Z40FPPJ*
*                  LOAD       IEFAB4F5 - PRIVATE CATALOG ALLOC RTN    *
*                                                             @Z40FPPJ*
*                  DELETE     IEFAB4F5 - PRIVATE CATALOG ALLOC RTN    *
*                                                             @Z40FPPJ*
*                  LOAD       IEFJRECM - SUBSYSTEM INTERFACE RESOURCE *
*                  DELETE     IEFJRECM - SUBSYSTEM INTERFACE RESOURCE *
*                  LOAD       IEFIRECM - INITIATOR RESOURCE           *
*                  DELETE     IEFIRECM - INITIATOR RESOURCE           *
*                  LOAD       IEFAB4E5 - DEVICE ALLOCATION RESOURCE   *
*                  DELETE     IEFAB4E5 - DEVICE ALLOCATION RESOURCE   *
*                  GETMAIN    COMMUNICATION TASK AREA FROM SUBPOOL 255*
*                  LINK       IEAVVINT - COMMUNICATION TASK           *
*                                                 INITIALIZATION      *
*                  POST       POST COMMUNICATION TASK COMPLETE        *
*                  LOAD       IEAVRINT - TOD CLOCK CONVERSION         *
*                  DELETE     IEAVRINT - TOD CLOCK CONVERSION         *
*                  FREEMAIN   THE COMMUNICATION TASK AREA             *
*                  ATTACH     IEFSD060 - INITIATOR                    *
*                  WAIT       ECB=WAITECB                             *
*                  SETRP    * RETURN TO ASIR                          *
*                  SDUMP    * TO SYS1.DUMP DATA SET                   *
*                  WTO      * MESSAGE IEE479W                         *
*                  WAIT     * PERMANENT WAIT STATE                    *
*                          '*' INDICATES ERROR PROCESSING             *
*  ENQUEUED-                                                          *
*   RESOURCES    = NONE                                               *
*  LOCKS         = NONE                                               *
*  CHANGE LEVEL  = Y02669, Y02653, Y02668, Z40RPSQ,@Z40FPPJ,ZA30544   *
*  SYSGEN        = IEEVIPL RESIDES IN LINKLIB                         *
*                  IEEMB850 IS IN THE IEEVIPL LOAD                    *
*                  IEFJSINT IS IN THE IEEVIPL LOAD                    *
*  LIBRARIES     = NONE                                               *
*                                                                     *
* MESSAGES       = IEE479W MASTER SCHEDULER ABEND XXX, DUMPED, REIPL  *
*                = IEE479W MASTER SCHEDULER FAILED, DUMPED, REIPL     *
*                     'XXX' IS THE ABEND CODE                         *
*                     'DUMPED' WILL APPEAR ONLY IF A DUMP WAS TAKEN   *
*                                                                Y02653
* WAIT STATE CODES= 00B - DUMP TAKEN                             Y02653
*                   00D - NO DUMP TAKEN                          Y02653
***********************************************************************
* THIS APAR SUPPORTS MERGE OF SU 4 CODE TO REL. 037 BASE       @ZA30544
         EJECT
***********************************************************************
*
*                      REGISTER EQUATES
*
***********************************************************************
R0       EQU   0                  REGISTER USED IN MACRO CALLS   Y02669
R1       EQU   1                  REGISTER USED IN MACRO CALLS   Y02669
R2       EQU   2                  PARAMETER BASE IN ESTAE EXIT   Y02653
R3       EQU   3                  USED TO CREATE THE STAE        Y02653
R4       EQU   4                  USED AS SAVE AND WORK REGISTER Y02669
R5       EQU   5                  BASE FOR IEL AND WORK REGISTER Y02669
R6       EQU   6                  USED AS A WORK REGISTER        Y02669
R7       EQU   7                  UNUSED REGISTER                Y02669
R8       EQU   8                  MODULE BASE REGISTER           Y02669
R9       EQU   9                  ABEND CODE REGISTER            Y02653
R10      EQU   10                 DUMP RETURN CODE REGISTER      Y02653
R11      EQU   11                 BASEA BASE REGISTER            Y02669
R12      EQU   12                 CVT BASE REGISTER              Y02669
R13      EQU   13                 SAVE AREA POINTER              Y02669
R14      EQU   14                 RETURN ADDRESS REGISTER        Y02669
R15      EQU   15                 RETURN CODE AND WORK REGISTER  Y02669
*
K0       EQU   0                                                 Y01043
K1       EQU   1                                                 Y02669
K2       EQU   2                                                 Y02653
K3       EQU   3                                                 Y01043
K4       EQU   4                                                 Y01043
K5       EQU   5                                                 Y01043
K8       EQU   8                                                 Y02669
K12      EQU   12                                                Y01043
K15      EQU   15                                                Y02653
K40      EQU   40                                                Y01043
K64      EQU   64                                                Y02669
*
BLANK    EQU   C' '               USED IN MESSAGE BUILDING       Y02653
COMMA    EQU   C','               USED IN MESSAGE BUILDING       Y02653
TIOTSIZE EQU   1                  # OF 4K BLOCKS FOR TIOT        Y02669
SWAPOOL  EQU   237                SWA SUBPOOL # FOR MASTER      @YM2429
COMMONSP EQU   241                CSA SUBPOOL                   @YM2429
         EJECT
***********************************************************************
*              INITIALIZE SYSTEM TO SYSTEM RESIDENCE
***********************************************************************
MODSTRT  EQU   *                                                 Y01043
         BALR  R8,0               SET BASE REGISTER                OC43
         USING *,R8                                                OC43
         MODID BR=YES                                            Y01886
         EJECT
***********************************************************************
*        THE FOLLOWING CODE WILL GET AN AREA FOR USE BY THE STAE      *
*        ROUTINE.  IT WILL SET UP AND CREATE THE STAE ENVIRONMENT.    *
*        IPL WILL CONTINUE ONLY IF THE STAE IS SUCCESSFUL.            *
***********************************************************************
         L     R0,PARMAR          SP/SIZE FOR STAE AREA          Y01043
         GETMAIN R,LV=(0)         GET AREA                       Y01043
         LR    R4,R1              SAVE PARMAREA ADDRESS          Y02653
         USING PARMAREA,R4        BASE THE PARMAREA              Y02653
         MVC   STAELIST(STAEL),LSTAE   SET UP TO ISSUE STAE      Y02653
         XC    PROSCDE(ENDAREA-STRTAREA),PROSCDE  ZERO STAE    @YM3523P*
                                                   PARM AREA   @YM3523P
         LA    R3,IPSTAR          ADDRESS OF STAE CODE           Y02653
         LA    R1,STAELIST        ADDRESS OF STAE LIST           Y02653
         ESTAE (3),RECORD=YES,PARAM=(4),MF=(E,(1))               Y02653
         LTR   R15,R15            STAE ENVIRONMENT CREATED?      Y01043
         BZ    STAEOK             YES, CONTINUE INITIALIZATION   Y02653
         OI    FLGS,PDUMP         NO, INDICATE DUMP REQUIRED     Y02653
         LR    R2,R4              SET PARAMETER AREA ADDRESS     Y02653
         B     BRENTY             INFORM OPERATOR OF FAILURE     Y02653
         EJECT
***********************************************************************
*        THE FOLLOWING CODE WILL SET UP THE ENVIRONMENT REQUIRED      *
*        TO CONTINUE WITH THE MASTER SCHEDULER INITIALIZATION.        *
*        THE FOLLOWING CONTROL BLOCKS WILL BE GOTTEN AND CHAINED:     *
*            JOB STEP CONTROL BLOCK (JSCB)                            *
*            COMMAND SCHEDULING CONTROL BLOCK (CSCB)                  *
*            SUBSYSTEM INTERFACE BLOCK (SSIB)                         *
*            INITIATOR ENTRANCE LIST (IEL)                            *
*        IN ADDITION, THE ASCB ADDRESS WILL BE FOUND AND              *
*        PUT INTO BASEA FOR USE IN POSTING THE MASTER.                *
***********************************************************************
STAEOK   EQU   *                                                 Y02669
         L     R12,CVTPTR         GET CVT POINTER                Y02669
         USING CVT,R12            SET CVT BASE                   Y02669
         L     R11,CVTMSER        GET BASEA POINTER              Y02669
         USING BASE,R11           SET BASEA BASE                 Y02669
         XC    BAMSLNK(BAPMLGTH),BAMSLNK                         Y02669*
                                  CLEAR THE NIP LINK AREA        Y02669
***********************************************************************
*        GET THE JOB STEP CONTROL BLOCK                               *
***********************************************************************
         L     R0,JSCBINF         SP/SIZE FOR GETMAIN            Y02669
         GETMAIN R,LV=(0)         GET THE JSCB                   Y02669
         XC    K0(JSCBAOS2,R1),K0(R1)  ZERO OUT THE JSCB         Y02669
         LA    R15,JSCBDISP       DISPLACE OF FIRST BYTE         Y02669
         SR    R1,R15             COMPUTE THE ADDRESS FOR TCB    Y02669
         USING IEZJSCB,R6         BASE THE JSCB                  Y02669
         LR    R6,R1              SET THE JSCB ADDRESS           Y02669
         MVI   JSCBSWSP,SWAPOOL   INDICATE SWA SUBPOOL          @YM2429
         ST    R6,JSCBACT         SET THE ACTIVE JSCB FIELD      Y02669
         L     R1,CVTTCBP         GET THE TCB POINTERS           Y02669
         USING TCBASCB,R1         BASE THE BLOCK POINTERS        Y02669
         L     R1,TCBPTR          GET THE CURRENT TCB            Y02669
         DROP  R1                 RELEASE THE BASE               Y02669
         USING TCB,R1             BASE THE TCB                   Y02669
         ST    R6,TCBJSCB         SET THE JSCB ADDRESS IN TCB    Y02669
         DROP  R1                 RELEASE THE TCB BASE REGISTER  Y02669
         EJECT
***********************************************************************
*        GET THE COMMAND SCHEDULING CONTROL BLOCK                     *
***********************************************************************
         L     R0,CSCBINF         SP/SIZE OF CSCB                Y02669
         GETMAIN R,LV=(0)         GET CORE FOR THE CSCB          Y02669
         XC    K0(CSCBLEN,R1),K0(R1)   ZERO OUT THE CSCB         Y02669
         ST    R1,JSCBCSCB        SET THE CSCB ADDRESS IN JSCB   Y02669
***********************************************************************
*        GET THE SUBSYSTEM IDENTIFICATION BLOCK                       *
***********************************************************************
         L     R0,SSIBINF         SP/SIZE OF SSIB                Y02669
         GETMAIN R,LV=(0)         GET CORE FOR THE SSIB          Y02669
         XC    K0(SSIBSIZE,R1),K0(R1)  ZERO OUT THE SSIB         Y02669
         USING SSIB,R1            BASE THE SSIB                  Y02669
         LA    R5,SSIBSIZE        GET THE LENGTH OF SSIB         Y02669
         STH   R5,SSIBLEN         SET THE LENGTH OF SSIB IN SSIB Y02669
         MVC   SSIBID(L'SSID),SSID     INDICATE SSIB BLOCK       Y02669
         MVC   SSIBSSNM(L'MINF-4),MINF INDICATE MASTER SSIB      Y02669
         MVC   SSIBJBID(L'MINF),MINF   INDICATE MASTER JOB ID    Y02669
         DROP  R1                 RELEASE THE BASE FOR SSIB      Y02669
         ST    R1,JSCBSSIB        SET THE SSIB ADDRESS IN JSCB   Y02669
         EJECT
***********************************************************************
*        GET THE INITIATOR ENTRANCE LIST                              *
***********************************************************************
         L     R0,IELINF          SP/SIZE OF THE IEL             Y02669
         GETMAIN R,LV=(0)         GET CORE FOR THE IEL           Y02669
         XC    K0(IELLLEN,R1),K0(R1)   ZERO OUT THE IEL          Y02669
         USING IEL,R5             BASE THE IEL                   Y02669
         LR    R5,R1              SET BASE REGISTER              Y02669
         MVI   IELTSIZ,TIOTSIZE   SET SIZE OF MASTER TIOT        Y02669
         MVI   IELSWAS,COMMONSP  SUBPOOL FOR MASTER SWA         @YM2429
***********************************************************************
*        INDICATE TO THE INITIATOR NOT TO USE 'DON'T SHARE SWA        *
*        OPTION' ON THE ATTACH; TO DO PROCESSING FOR ONLY ONE         *
*        JOB, AND THAT THIS IS AN INITIATOR TASK.                     *
***********************************************************************
         OI    IELOPSW1,IELDPSWA+IELONEJF+IELICMDF               Y02669
         MVC   IELCSCB(K4),JSCBCSCB    SET CSCB ADDRESS IN IEL   Y02669
         LA    R1,IELOPTS         GET ADDRESS OF OPTION LIST     Y02669
         ST    R1,IELOPLST        STICK IT IN ENTRANCE LIST      Y02669
         LA    R1,IELEXITS        GET EXIT LIST ADDRESS          Y02669
         ST    R1,IELEXIT         PUT IT IN ENTRANCE LIST        Y02669
         OI    IELEXIT,IELEND     INDICATE END OF LIST           Y02669
         LA    R1,IELOPTLN        LENGTH OF OPTION LIST          Y02669
         STH   R1,IELOPLEN        PUT IT IN THE OPTION LIST      Y02669
         DROP  R5                 RELEASE IEL BASE REGISTER      Y02669
***********************************************************************
*        GET TO THE MASTER ASCB WHICH WILL ALWAYS BE THE FIRST        *
*        ASCB POINTED TO BY THE ASVT AND COPY THE ASCB ADDRESS        *
*        INTO THE MASTER SCHEDULER DATA AREA (BASEA).                 *
***********************************************************************
         L     R1,CVTTCBP         GET ADDRESS OF BLOCKS        @YM00015
         USING TCBASCB,R1         BASE THE SYSTEM POINTERS     @YM00015
         L     R1,ASCBPTR         GET TO THE ASCB'S            @YM00015
         ST    R1,BAASCB          PUT IT IN BASEA              @YM00015
         USING ASCB,R1            BASE THE ASCB                @YM00015
         MVC   JSCBTJID(K2),ASCBASID   MOVE ASID FROM ASCB     @YM00015*
                                           INTO JSCB           @YM00015
         DROP  R1                 RELEASE BASEA BASE REGISTER  @YM00015
         DROP  R6                 RELEASE JSCB BASE REGISTER   @YM00015
         EJECT
***********************************************************************
*        THE SYSTEM INITIATED CANCEL (SIC) ROUTINE WILL BE            *
*        LOADED AND ITS ADDRESS PUT IN THE CVT.  THE SWA MANAGER      *
*        ROUTINES ARE LOADED AND THEIR ADDRESSES PUT IN THE JESCT.    *
*        THE ALLOCATION,UNALLOCATION, AND PRIVATE CATALOG RTN @Z40FPPJ*
*        ARE LOADED AND THEIR ADDRESSES PUT IN THE JESCT      @Z40FPPJ*
***********************************************************************
         LOAD  EP=IKJEFLF         LOAD THE SIC ROUTINE           Y02669
         ST    R0,CVTSIC          SET ADDRESS IN CVT             Y02669
         DELETE EP=IKJEFLF        ELIMINATE ITS CDE ENTRY        Y02669
         L     R6,CVTJESCT        ADDRESS OF THE JESCT           Y02669
         USING JESCT,R6           BASE THE JESCT                 Y02669
         MVC   JESUNITS(K4),CVTSYSAD   UCB ADDRESS TO JESCT      Y02669
         LOAD  EP=IEFQB550        GET ADDRESS OF IEFQB550        Y02669
         ST    R0,JESQMGR         PUT ITS ADDRESS IN JESCT       Y02669
         DELETE EP=IEFQB550       ELIMINATE ITS CDE ENTRY        Y02669
         LOAD  EP=IEFQB555        GET ADDRESS OF IEFQB555        Y02669
         ST    R0,JESWAA          PUT ITS ADDRESS IN JESCT       Y02669
         DELETE EP=IEFQB555       ELIMINATE ITS CDE ENTRY        Y02669
         LOAD  EP=IEFQB580        GET ADDRESS OF IEFQB580        Y02669
         ST    R0,JESRESQM        PUT ITS ADDRESS IN JESCT       Y02669
         DELETE EP=IEFQB580       ELIMINATE ITS CDE ENTRY        Y02669
         LOAD  EP=IEFW21SD        GET ADDR ALLOCATION          @Z40FPPJ
         ST    R0,JESALLOC        SAVE EP IN JESCT             @Z40FPPJ
         DELETE EP=IEFW21SD       DELETE CDE                   @Z40FPPJ
         LOAD  EP=IEFBB410        GET ADDR UNALLOCATION        @Z40FPPJ
         ST    R0,JESUNALC        SAVE EP IN JESCT             @Z40FPPJ
         DELETE EP=IEFBB410       DELETE CDE                   @Z40FPPJ
         LOAD  EP=IEFAB4F5        GET ADDR PVT CATL RTN        @Z40FPPJ
         ST    R0,JESCATL         SAVE ADDR IN JESCT           @Z40FPPJ
         DELETE EP=IEFAB4F5       DELETE CDE                   @Z40FPPJ
*** THIS SECTION OF CODE COUNTS THE NUMBER OF UCB'S IN THE     @Z40FPPJ
*** SYSTEM AND STORES IT FOR USE BY DEVICE ALLOCATION          @Z40FPPJ
         L     R1,CVTILK2        GET ADDRESS OF LUT            @Z40FPPJ
         L     R13,LUTEND        END OF LUT INDICATOR          @Z40FPPJ
         SLR   R7,R7             CLEAR COUNT REG               @Z40FPPJ
CHKNXT   L     R2,0(R1)          LOAD TWO UCB ADDRS            @Z40FPPJ
         SRL   R2,16             GET RID OF SECOND & FILL      @Z40FPPJ
*                                IN WITH LEADING ZEROS         @Z40FPPJ
         LTR   R2,R2             CHECK FOR ZERO ADDR           @Z40FPPJ
         BZ    SKIPIT            BYPASS THIS CASE              @Z40FPPJ
         CR    R13,R2            CHECK FOR END OF TABLE        @Z40FPPJ
         BE    ENDOFLUT          WE ARE FINIS                  @Z40FPPJ
         USING UCBOB,R2          MUST BE VALID UCB ADDR        @Z40FPPJ
         TM    UCBTBYT3,UCB3TAPE IS IT FOR TAPE                @Z40FPPJ
         BO    GOODONE           YES, COUNT IT                 @Z40FPPJ
         TM    UCBTBYT3,UCB3DACC IS IT FOR DIR. ACCESS         @Z40FPPJ
         BNO   SKIPIT            BYPASS IF NOT DA              @Z40FPPJ
GOODONE  LA    R7,1(R7)          INCR COUNT OF TAPE AND        @Z40FPPJ
*                                DIRECT ACCESS UCB'S           @Z40FPPJ
SKIPIT   LA    R1,2(R1)          INCR PTR TO NEXT LUT ENTRY    @Z40FPPJ
         B     CHKNXT            DO AGAIN                      @Z40FPPJ
ENDOFLUT ST    R7,JESNUCBS       SAVE COUNT IN JESCT           @Z40FPPJ
         DROP  R6                                                Y02669
         EJECT
***********************************************************************
*        THE FOLLOWING CODE WILL LOAD THE ADDRESSES OF THE            *
*        SCHEDULER RESOURCE MANAGERS INTO THE CVT.                    *
***********************************************************************
         LOAD   EP=IEFJRECM       LOAD THE SUBSYTEM INTERFACE    Y02669*
                                      RESOURCE MANAGER           Y02669
         ST     R0,CVTJRECM       PUT ITS ADDRESS INTO THE CVT   Y02669
         DELETE EP=IEFJRECM       DELETE THE CDE ENTRY           Y02669
         LOAD   EP=IEFIRECM       LOAD THE INITIATOR             Y02669*
                                      RESOURCE MANAGER           Y02669
         ST     R0,CVTIRECM       PUT ITS ADDRESS INTO THE CVT   Y02669
         DELETE EP=IEFIRECM       DELETE THE CDE ENTRY           Y02669
         LOAD   EP=IEFAB4E5       LOAD THE DEVICE ALLOCATION     Y02669*
                                      RESOURCE MANAGER           Y02669
         ST     R0,CVTDARCM       PUT ITS ADDRESS INTO THE CVT   Y02669
         DELETE EP=IEFAB4E5       DELETE THE CDE ENTRY           Y02669
         EJECT
***********************************************************************
*        THE FOLLOWING CODE WILL GET A REGISTER SAVE AREA TO BE       *
*        USED BY ROUTINES INVOKED OUT OF IEEVIPL.  THEN THE SUBSYSTEM *
*        INITIALIZATION ROUTINE (IEFJSINT) IS INVOKED.  THEN THE      *
*        VARIABLE INITIALIZATION ROUTINE (IEEMB850) IS INVOKED.       *
*        THE TSO SERVICE ROUTINE(IKJEFXSR) IS THEN LINKED TO , @YM2225P
*        WITH NO INPUT SUPPLIED TO IT.                         @YM2225P
*        THE COMMUNICATION TASK INITIALIZATION MODULE (IEAVVINT) WILL *
*        BE LINKED TO AND THERE WILL BE NO INPUT SUPPLIED TO IT.      *
***********************************************************************
         GETMAIN R,SP=255,LV=72   AREA FOR COMUNICATION TASK     Y02669
         LR    R13,R1             STANDARD SAVE POINTER          Y02669
         L     R15,IEFJSINT       LOAD ADDRESS OF SUB-ROUTINE    Y02669
         BALR  R14,R15                                           Y02669
         LINK  EP=IEAVVINT        INVOKE COMMUNICATION TASK
         SR    R0,R0              POST CODE
         LA    R1,BAIPL           ECB ADDRESS
         POST  (1),(0)            POST COMMUNICATION TASK
         NI    CVTOPTA,X'FF'-CVTNIP    COMM TASK INIT COMPLETE   Y01045
         LA    R1,K15             'F' FOR SIGN                   Y02669
         ST    R1,CVTDATE         SET IT IN CVT
         XC    BAIPL,BAIPL        CLEARED FOR SET COMMAND
         NI    BASFL,255-BAIN     CLEAR IPL SWITCH
         XC    BAQ(K8),BAQ        ZERO OUT AREA                  Y02669
         L     R15,IEEMB850       ADDRESS OF VARIABLE INITIALIZATION
         BALR  R14,R15            CALL THE ROUTINE               Y02669
         LINK  EP=IKJEFXSR        INVOKE THE TSO SERVICE RTN   @YM2225P
         EJECT
***********************************************************************
*        THE TIME OF DAY CLOCK PROCESSOR WILL BE LOADED, BRANCHED     *
*        TO, AND THEN DELETED.  REGISTER ONE WILL POINT TO BASEA.     *
*        THE TOD CLOCK PROCESSOR WILL ISSUE AN INTERNAL SET           *
*        COMMAND, AND WAIT FOR RETURN FROM SVC 34.  ON RETURN         *
*        FROM SVC 34, IF THE SET COMMAND IS INVALID, IT WILL          *
*        REISSUE THE WTOR ASKING FOR SET PARAMETERS.                  *
***********************************************************************
         LOAD  EP=IEAVRINT        LOAD TOD ROUTINE               Y02669
         LR    R1,R11             PASS BASEA ADDRESS             Y02669
         LR    R15,R0             SET TOD ROUTINE ADDRESS        Y02669
         BALR  R14,R15            INVOKE ROUTINE                 Y02669
         LR    R6,R15             SAVE RETURN CODE               Y02669
         DELETE EP=IEAVRINT       GET RID OF TOD MODULE          Y02669
         LR    R1,R13             ADDRESS OF AREA TO FREE        Y02669
         FREEMAIN R,LV=72,SP=255,A=(1)                           Y02669
         LTR   R6,R6              TOD CLOCK PROCESS OK?          Y02669
         BZ    CLOCKOK            YES, CONTINUE IPL              Y02669
         OI    FLGS,PDUMP         NO, INDICATE DUMP REQUIRED     Y02669
         LR    R2,R4              SET PARAMTER AREA ADDRESS      Y02669
         B     BRENTY             INFORM OPERATOR OF FAILURE     Y02669
         EJECT
***********************************************************************
*        THE FOLLOWING WILL INVOKE THE INITIATOR MODULE (IEFSD060)    *
*        VIA THE ATTACH MACRO INSTRUCTION, PASSING TO IT A POINTER TO *
*        THE IEL CREATED EARLIER.                                     *
*        IF CONTROL IS EVER RETURNED TO THIS ROUTINE, THEN A DUMP     *
*        WILL BE TAKEN, AND A MESSAGE ISSUED AND THE SYSTEM WILL      *
*        BE PUT INTO A WAIT STATE.                                    *
***********************************************************************
CLOCKOK  EQU   *                                                 Y02669
         OI    BASFL,BAIN         TURN ON 'NO IPL' BIT            20071
         LR    R1,R5              SET POINTER TO IEL             Y02669
         STM   R0,R15,IELLLEN(R1) SAVE REGISTERS                 Y02669
         ATTACH EP=IEFSD060,ECB=WAITECB,JSTCB=YES,SM=SUPV      @YM01706*
                                       ATTACH THE INITIATOR      Y02669
         WAIT  ECB=WAITECB        WAIT ON ECB                    Y02669
         EJECT
***********************************************************************
*        THIS CODE SHOULD NEVER RECEIVE CONTROL, SINCE THE            *
*        MASTER SCHEDULER SHOULD NEVER TERMINATE.  IF CONTROL IS      *
*        RECEIVED, IT WILL BE TREATED AS A FAILURE, AND CONTROL WILL  *
*        BE PASSED TO THE BRANCH ENTRY OF THE RECOVERY CODE, WITH     *
*        AN INDICATOR THAT A DUMP SHOULD BE TAKEN.                    *
***********************************************************************
         SPACE
         LM    R0,R15,IELLLEN(R5) RESTORE REGISTERS              Y02669
         LR    R2,R4              POINTER TO THE STAE PARAMETER  Y02653*
                                       AREA                      Y02653
         OI    FLGS,PDUMP         INDICATE DUMP REQUIRED         Y02653
         B     BRENTY             INVOKE STAE ROUTINE            Y02669
         DROP  R4                 RELEASE PARMAREA BASE          Y02653
         DROP  R11                RELEASE BASE FOR BASEA         Y02669
         DROP  R12                RELEASE BASE FOR CVT           Y02669
         EJECT
***********************************************************************
*       STAE EXIT CODE FOR THE PROTECTION OF IEEVIPL PROCESSING       *
*        THIS CODE WILL:                                              *
*              .INVOKE SVC DUMP IF NECESSARY                          *
*              .ISSUE A MESSAGE TO INFORM OPERATOR OF PROBLEM         *
*              .INFORM OPERATOR OF DUMP STATUS                        *
*              .ENTER A PERMANENT WAIT STATE                          *
*        THE MESSAGES ISSUED ARE:                                     *
*               IEE479W MASTER SCHEDULER ABEND XXX, DUMPED, REIPL     *
*                  XXX - THIS IS THE ABEND COMPLETION CODE            *
*               IEE479W MASTER SCHEDULER FAILED, DUMPED, REIPL        *
*                  THE 'DUMPED' PART OF MESSAGE WILL APPEAR ONLY IF   *
*                    THE DUMP WAS TAKEN AND WAS SUCCESSFUL.           *
***********************************************************************
IPSTAR   EQU   *                  START OF STAE CODE             Y01043
         BALR  R8,R0              SET ADDRESSABILITY             Y01043
         LA    R15,IPSTAR-MODSTRT FIND DIFFERENCE FROM BEGINNING Y01043
         SR    R8,R15             SET UP THE BASE REGISTER       Y01043
         C     R0,TWELVE          WAS WORKAREA SUPPLIED?         Y02653
         BE    IPSTAR1            NO, SKIP WORKAREA PROCESS      Y02653
         LR    R11,R1             SET BASE REGISTER FOR SDWA     Y02653
         USING SDWA,R11           SET BASE TO SDWA               Y02653
         USING PARMAREA,R2        BASE TO PARAMETER AREA         Y02653
         L     R2,SDWAPARM        ADDRESS OF PARAMETER AREA      Y02653
         L     R1,SDWAABCC        SAVE ABEND CODE                Y02653
         ST    R2,SDWASR01        SAVE PARAMETER BASE ADDRESS    Y02653
         TM    SDWAERRC,SDWAPERC  IS IT PERCOLATION?             Y02653
         BO    IPSTAR2            YES, BYPASS DUMP INDICATOR     Y02653
         TM    SDWAERRA,SDWAMCHK  ENTERED BECAUSE OF MACH CHK? @YM3509P
         BO    IPSTAR2            YES, BYPASS DUMP INDICATOR   @YM3509P
         DROP  R11
IPSTAR1  EQU   *                                                 Y02653
         OI    FLGS,PDUMP         INDICATE DUMP REQUIRED         Y02653
IPSTAR2  EQU   *                                                 Y02653
         ST    R8,PSAVER          SAVE ROUTINE BASE ADDRESS      Y02653
         OI    FLGS,PABND         INDICATE CODE SUPPLIED         Y02653
         ST    R1,PABEND          SAVE ABEND CODE                Y02653
         C     R0,TWELVE          WAS SDWA PASSED?               Y02653
         BE    IPSTAR3            NO, BYPASS SDWA SETUP          Y02653
         LR    R1,R11             RESET SDWA ADDRESS             Y02653
         SETRP RETADDR=COMMON,RETREGS=YES,RECORD=YES,                  *
               RECPARM=LRECINF,RC=4,FRESDWA=YES,DUMP=NO        @YM3510P
         BR    R14                RETURN TO ASIR                 Y02653
IPSTAR3  EQU   *                                                 Y02653
         LA    R15,K4             INDICATE RETRY                 Y02653
         LA    R0,COMMON          INDICATE RETRY ADDRESS         Y02653
         BR    R14                RETURN TO ASIR                 Y02653
COMMON   EQU   *                                                 Y01043
         LR    R2,R1              SET PARAMETER AREA ADDR        Y02653
         L     R8,PSAVER          LOAD BASE ADDRESS              Y02653
         EJECT
***********************************************************************
*        THIS IS THE BRANCH ENTRY POINT TO RECOVERY FOR               *
*        FAILURES DISCOVERED BY IEEVIPL, AS WELL AS THE               *
*        STARTING POINT FOR ESTAE RETRY PROCESSING.                   *
*                                                                     *
*        INPUT FOR THE BRANCH ENTRY SHOULD BE:                        *
*             PDUMP BIT 'ON' IN ALL CASES                             *
*                                                                     *
*        RECURSION CAN OCCUR IF A FAILURE OCCURS DURING THE           *
*        DUMP OR WRITING THE MESSAGE.  SINCE THESE FUNCTIONS ARE      *
*        PERFORMED IN RETRY CODE, THEY ARE PROTECTED BY THE           *
*        ESTAE.  THE RECURSION INDICATOR IS INCREMENTED ON ENTRY      *
*        TO EACH FUNCTION AND THE USE OF THE BRANCH TABLE AT THE      *
*        START OF RETRY PROCESSING ASSURES THAT FAILING RETRY         *
*        FUNCTIONS WILL NOT BE ATTEMPTED A SECOND TIME.               *
***********************************************************************
BRENTY   EQU   *                                                 Y02653
         LH    R4,PROSCDE         GET RECURSION INDICATOR        Y02653
         B     BRTAB1(R4)         (RE-)START PROCESSING          Y02653
BRTAB1   EQU   *                                                 Y02653
         B     TRYDUMP            DUMP SYSTEM                    Y02653
         B     TRYMSG0            ISSUE MESSAGE                  Y02653
         B     DOWAIT             KILL SYSTEM                    Y02653
         EJECT
***********************************************************************
*        DETERMINE IF A DUMP IS NECESSARY.  IF ENTERED BECAUSE        *
*        OF A SYSTEM FAILURE, OR PROGRAM CHECK, OR THE SYSTEM         *
*        RESTART KEY WAS DEPRESSED, THEN A DUMP WILL BE TAKEN.        *
***********************************************************************
TRYDUMP  EQU   *                                                 Y01043
         LH    R4,PROSCDE         OBTAIN PROCESS CODE            Y02653
         LA    R4,K4(R4)          INCREMENT BY 4                 Y02653
         STH   R4,PROSCDE         STORE NEW PROCESS CODE         Y02653
         TM    FLGS,PDUMP         IS DUMP REQUIRED?              Y02653
         BNO   TRYMSG0            NO, BYPASS DUMP                Y02653
         MVC   MSGAREA(DUMPL),DUMPPARM MOVE IN DUMP LIST         Y01043
         LA    R1,MSGAREA         ADDRESS OF LIST                Y01043
         SDUMP MF=(E,(1))         DUMP SYSTEM                    Y01043
         LR    R10,R15            SAVE RETURN CODE               Y01043
         B     TRYMSG1            GO PUT OUT MESSAGE             Y01043
TRYMSG0  EQU   *                                                 Y01043
         LA    R10,K4             INDICATE DUMP NOT TAKEN        Y02653
         EJECT
***********************************************************************
*        IF THE COMMTASK HAS NOT BEEN INITIALIZED, THE                *
*        SYSTEM IS PUT IN A DISABLED WAIT STATE VIA LPSW.             *
***********************************************************************
TRYMSG1  EQU   *                                               @YM01904
         LH    R4,PROSCDE         OBTAIN PROCESS CODE          @YM01904
         LA    R4,K4(R4)          INCREMENT BY 4               @YM01904
         STH   R4,PROSCDE         STORE NEW PROCESS CODE       @YM01904
         L     R1,CVTPTR          GET THE ADDRESS OF THE CVT   @YM01904
         USING CVT,R1             BASE THE CVT                 @YM01904
         TM    CVTOPTA,CVTNIP     COMMTASK INIT COMPLETE?      @YM01904
         BO    DOWAIT             NO, GO LOAD WAIT PSW         @YM01904
***********************************************************************
*        THE REST OF THIS ROUTINE IS TO CONSTRUCT AND ISSUE THE       *
*        MASTER SCHEDULER FAILURE MESSAGE, AFTER WHICH A WAIT         *
*        STATE WILL BE ENTERED.                                       *
***********************************************************************
         MVC   MSGAREA(LEN7),ABMSG     MOVE IN BASE MESSAGE      Y01043
         LA    R5,MSGAREA         ADDRESS OF MESSAGE BUFFER      Y01043
         LR    R6,R5              ADDRESS OF MESSAGE BUFFER      Y01043
         AH    R6,MSGLEN          BUMP TO END OF MESSAGE         Y01043
         TM    FLGS,PABND         IS THERE AN ABEND CODE?        Y01043
         BO    DOABND             YES, ABEND ENTRY               Y01043
         MVC   K0(LEN0,R6),INCERT0     MOVE IN FAILURE PART      Y01043
         LA    R6,LEN0(R6)        BUMP BUFFER POINTER            Y01043
         B     DODUMP             CONTINUE CONSTRUCTION          Y01043
DOABND   EQU   *                                                 Y01043
         MVC   K0(LEN1,R6),INCERT1     MOVE IN ABEND PART        Y01043
         LA    R6,LEN1(R6)        BUMP BUFFER POINTERS           Y01043
         L     R9,PABEND          GET THE ABEND CODE             Y02653
         N     R9,MASK1           'AND' OFF THE DUMP BIT         Y01043
         SRL   R9,K12             SHIFT TO LOW ORDER BYTE        Y01043
         STH   R9,CODE            PUT IT IN PARAMETER AREA       Y01043
         UNPK  ABEND1(K5),CODE(K3)     UNPACK ABEND INTO BUFFER  Y01043
         TR    ABEND2(K3),TABLE   TRANSLATE CODE                 Y01043
         MVI   ABEND1,BLANK       BLANK THE FIRST BYTE           Y01043
         MVI   ABEND5,COMMA       ADD COMMA TO END               Y01043
DODUMP   EQU   *                                                 Y01043
         LTR   R10,R10            DUMP SUCCESSFUL?               Y01043
         BNZ   NXTPRT             NO, BYPASS DUMPED PART         Y01043
         MVC   K0(LEN2,R6),INCERT2     MOVE IN SUCCESSFUL PART   Y01043
         LA    R6,LEN2(R6)        BUMP BUFFER POINTER            Y01043
NXTPRT   EQU   *                                                 Y01043
         MVC   K0(LEN6,R6),INCERT6     MOVE IN REIPL PART        Y01043
         LA    R6,LEN6(R6)        BUMP BUFFER POINTER            Y01043
         MVC   K0(K4,R6),RETCDE   MOVE IN WTO ROUTING CODES      Y01043
         SR    R6,R5              CALCULATE MESSAGE LENGTH       Y01043
         STH   R6,MSGLEN          PUT IT IN MESSAGE              Y01043
         LA    R1,MSGAREA         ADDRESS FOR WTO                Y01043
         WTO   MF=(E,(1))         ISSUE MESSAGE                  Y01043
         EJECT
***********************************************************************
*        IF THE COMMUNICATIONS TASK HAS BEEN INITIALIZED,             *
*        ONLY THE MASTER SCHEDULER TASK IS PUT IN A WAIT, VIA         *
*        THE WAIT SVC.  THIS IS DONE IN ORDER THAT THE OPERATOR       *
*        CAN CONTINUE TO ISSUE COMMANDS AND RECEIVE MESSAGES          *
*        BEFORE RE-IPLING THE SYSTEM.                                 *
*                                                                     *
*        IF THE COMMTASK HAS NOT BEEN INITIALIZED, THE                *
*        SYSTEM IS PUT IN A DISABLED WAIT STATE VIA LPSW.  A WAIT     *
*        STATE CODE OF X'00B' INDICATES THAT A DUMP WAS TAKEN; A      *
*        CODE OF X'00D' INDICATES THAT NO DUMP WAS TAKEN.             *
***********************************************************************
         SPACE 2
         XC    PROSCDE(K4),PROSCDE     ZERO AREA FOR WAIT        Y02653
         LA    R1,PROSCDE         SET ADDRESS OF THE AREA        Y02653
         WAIT  ECB=(1)            ENTER WAIT STATE               Y02653
DOWAIT   EQU   *                                                 Y01043
         LTR   R10,R10            WAS DUMP TAKEN?                YM2740
         BNZ   DOWAIT1            NO, ISSUE NO DUMP WAIT CODE    YM2740
         LPSW  GODUMP             INDICATE DUMP TAKEN            YM2470
DOWAIT1  EQU   *                                                 YM2740
         LPSW  NODUMP             YES, ISSUE NO DUMP WAIT CODE   YM2740
         DROP  R2                 RELEASE PARMAREA BASE REGISTER Y02653
         EJECT
***********************************************************************
*        CONSTANTS FOR STAE'S USE                                     *
***********************************************************************
         DS    D                                                 YM2740
GODUMP   DC    X'000200000000000B'     WAIT PSW, DUMP            Y02653
NODUMP   DC    X'000200000000000D'     WAIT PSW, NO DUMP         Y02653
TWELVE   DC    F'12'              ENTRY TYPE TESTER              Y02653
LRECINF  DC    CL8'IEEVIPL '      RECORD PARAMETER LIST          Y02653
         DC    CL8'IEEVIPL '                                     Y02653
         DC    CL8'        '                                     Y02653
RETCDE   DC    X'80004040'        WTO ROUTING CODES              Y01043
MASK1    DC    X'7FFFFFFF'        MASK FOR DUMP BIT              Y01043
PARMAR   DC    AL1(253)           SP/SIZE FOR PARM AREA          Y02653
         DC    AL3(ENDAREA-STRTAREA)                           @YM02606
WAITECB  DC    F'0'
LUTEND   DC    XL4'0000FFFF'    END OF IOS LOOK-UP-TABLE       @Z40FPPJ
         EJECT
***********************************************************************
*        MESSAGE PARTS FOR STAE'S USE                                 *
***********************************************************************
         SPACE 3
STRT0    EQU   *                                                 Y01043
INCERT0  DC    C'FAILED,'                                        Y01043
END0     EQU   *                                                 Y01043
STRT1    EQU   *                                                 Y01043
INCERT1  DC    C'ABEND     '                                     Y01043
END1     EQU   *                                                 Y01043
STRT2    EQU   *                                                 Y01043
INCERT2  DC    C' DUMPED,'                                       Y01043
END2     EQU   *                                                 Y01043
STRT6    EQU   *                                                 Y01043
INCERT6  DC    C' REIPL'                                         Y01043
END6     EQU   *                                                 Y01043
TABLE    EQU   *-240                                             Y01043
         DC    C'0123456789ABCDEF'                               Y01043
         EJECT
***********************************************************************
*        MACRO LIST FORMS FOR STAE'S USE                              *
***********************************************************************
         DS    0F                                                Y01043
STRT7    EQU   *                                                 Y01043
ABMSG    WTO   'IEE479W MASTER SCHEDULER ',MF=L,                       *
               ROUTCDE=(2,10),DESC=(1)                           Y02653
END7     EQU   *                                                 Y01043
         DS    0F                                                Y01043
STRT8    EQU   *                                                 Y01043
LSTAE    ESTAE MF=L                                              Y02653
END8     EQU   *                                                 Y01043
         DS    0F                                                Y01043
STRT9    EQU   *                                                 Y01043
DUMPPARM SDUMP HDR='IEEVIPL ',SDATA=(SQA,PSA,NUC,LSQA,RGN,LPA,TRT,CSA),*
               MF=L                                            @YM3599P
END9     EQU   *                                                 Y01043
VPATCH   DC    CL80'*** IEEVIPL PATCH AREA ***'
         EJECT
***********************************************************************
*        MESSAGE LENGTHS FOR STAE'S USE                               *
***********************************************************************
         SPACE 3
LEN0     EQU   END0-STRT0                                        Y01043
LEN1     EQU   END1-STRT1                                        Y01043
LEN2     EQU   END2-STRT2                                        Y01043
LEN6     EQU   END6-STRT6                                        Y01043
LEN7     EQU   END7-STRT7                                        Y01043
STAEL    EQU   END8-STRT8                                        Y01043
DUMPL    EQU   END9-STRT9                                        Y01043
         EJECT
***********************************************************************
*        MODULE CONSTANTS FOR USE BY THIS ROUTINE                     *
***********************************************************************
         DS    0F
CSCBINF  DC    AL1(245)           SUBPOOL NUMBER FOR CSCB        Y02669
         DC    AL3(CSCBLEN)       SIZE OF THE CSCB               Y02669
JSCBINF  DC    AL1(241)           SUBPOOL NUMBER FOR JSCB      @YM01566
         DC    AL3(JSCBAOS2)      SIZE OF THE JSCB               Y02669
SSIBINF  DC    AL1(241)           SUBPOOL NUMBER FOR SSIB      @YM01566
         DC    AL3(SSIBSIZE)      SIZE OF THE SSIB               Y02669
IELINF   DC    AL1(230)           SUBPOOL NUMBER FOR IEL         Y02669
         DC    AL3(IELLLEN+K64)   SIZE OF THE IEL                Y02669
MINF     DC    C'MSTR    '        NAME OF MASTER SUBSYSTEM       Y02669
SSID     DC    C'SSIB'            CONTROL BLOCK NAME             Y02669
IEFJSINT DC    V(IEFJSINT)        ADDRESS OF SUBSYSTEM MODULE    Y02669
IEEMB850 DC    V(IEEMB850)        ADDRESS OF VARIABLE INITITIALIZATION
         EJECT
***********************************************************************
*        MAPPING OF THE STAE PARAMETER LIST/AREA                      *
***********************************************************************
         SPACE 3
PARMAREA DSECT                                                   Y01043
STRTAREA EQU   *                                               @YM02606
PROSCDE  DS    H                  RECURSION INDICATOR            Y01043
FLGS     DS    C                  FLAG BYTE                      Y01043
PENTY    EQU   X'80'              BRANCH ENTRY                   Y02653
PABND    EQU   X'40'              ABEND CODE PRESENT             Y02653
PDUMP    EQU   X'20'              DUMP REQUIRED                  Y02653
         DS    C                  RESERVED                       Y01043
STAELIST DS    0F                 LIST FORM OF ESTAE             Y02653
MSGAREA  DS    0F                 MESSAGE BUFFER                 Y01043
MSGLEN   DS    H                  LENGTH OF MESSAGE              Y01043
MSGFLG   DS    H                  WTO FLAGS                      Y01043
         DS    CL30               FIRST PART OF MESSAGE          Y01043
ABEND1   DS    C                                                 Y01043
ABEND2   DS    C                                                 Y01043
ABEND3   DS    C                                                 Y01043
ABEND4   DS    C                                                 Y01043
ABEND5   DS    C                                                 Y01043
         DS    CL47               LAST PART OF MESSAGE           Y01043
PABEND   DS    F                  ABEND CODE SAVER               Y02653
PSAVER   DS    F                  BASE ADDRESS SAVER             Y02653
CODE     DS    H                  AREA FOR ABEND CODE WORK       Y01043
ENDAREA  EQU   *                                               @YM02606
         EJECT
         IEFPTRS
         EJECT
         IEEBASEA
         EJECT
CVT      DSECT
         CVT
         EJECT
JESCT    DSECT                                                   Y02669
         IEFJESCT
         EJECT
         IKJTCB
         EJECT
IEL      DSECT                                                   Y02669
         IEZIEL EXITS=RTN
IELLLEN  EQU   IELLEN+IELOPTLN+IELEXTLN                          Y02669
         EJECT
         IEFJSSIB                                                Y02668
         EJECT
CSCB     DSECT                                                   Y02669
         IEECHAIN
CSCBLEN  EQU   CHLAST-CHAIN                                      Y02669
         EJECT
         IEZJSCB
         EJECT
         IHAASCB
         EJECT
         IHASDWA
         IEFUCBOB    PREFIX=YES
         END
