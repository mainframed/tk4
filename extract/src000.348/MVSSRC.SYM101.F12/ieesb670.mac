         TITLE 'IEESB670 - JSS RECOVERY EXIT ROUTINE                 '
IEESB670 CSECT ,                                                   0001
@MAINENT DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL1(16)                                             0001
         DC    C'IEESB670  73.181'                                 0001
         DROP  @15
@PROLOG  BALR  @12,0                                               0001
@PSTART  DS    0H                                                  0001
         USING @PSTART,@12                                         0001
*   SDWAPTR=R1;                     /* POINT TO THE SDWA ON ENTRY    */
         LR    SDWAPTR,R1                                          0029
*   R7=R14;                         /* SAVE THE RETURN ADDRESS       */
         LR    R7,R14                                              0030
*   IF(R0=12)THEN                   /* IF NO SDWA                    */
         CH    R0,@CH01511                                         0031
         BNE   @RF00031                                            0031
*     R15=0;                        /* INDICATE NO RETRY             */
         SR    R15,R15                                             0032
*   ELSE                                                           0033
*     DO;                                                          0033
*                                                                  0033
         B     @RC00031                                            0033
@RF00031 DS    0H                                                  0034
*       /*************************************************************/
*       /*                                                           */
*       /* AUTOMATIC STORAGE MUST BE EXPLICITLY GOTTEN AND FREED     */
*       /* BECAUSE BOTH REGISTERS 0 ND 1 UPON ENTRY TO THIS MODULE   */
*       /* CONTAIN INPUT, AND THE PLS GETMAIN WOULD DESTROY THEN     */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0034
*       GEN;                                                       0034
     L    R0,@SIZDATD
     GETMAIN R,LV=(0)
     LR   R11,R1
     USING  @DATD,R11
     LR  R13,R11
*       STAEPTR=SDWAPARM;           /* ADDRESS THE STAE PARMETER LIST*/
         L     STAEPTR,SDWAPARM(,SDWAPTR)                          0035
*       IF(STAERTY='1'B)×(SDWAPERC='1'B)THEN/* IF PERCUALTION        */
         TM    STAERTY(STAEPTR),B'10000000'                        0036
         BO    @RT00036                                            0036
         TM    SDWAPERC(SDWAPTR),B'00010000'                       0036
         BNO   @RF00036                                            0036
@RT00036 DS    0H                                                  0037
*         DO;                                                      0037
*                                                                  0037
*           /*********************************************************/
*           /*                                                       */
*           /* ISSUE ? SETRP RECPARM(VICER) RECORD(YES) RC(0)        */
*           /* WKAREA(SDWAPTR) TO SCHEDULE NO RETRY AND RECORD THE   */
*           /* ENTRY                                                 */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0038
*           DO;                     /* SETRP RECPARM(VICER)        0038
*                                      RECORD(YES) RC(0)           0038
*                                      WKAREA(SDWAPTR)               */
*             RESPECIFY                                            0039
*              (GPR00P,                                            0039
*               GPR01P,                                            0039
*               GPR14P,                                            0039
*               GPR15P)RSTD;                                       0039
*             GPR01P=SDWAPTR;                                      0040
         LR    GPR01P,SDWAPTR                                      0040
*             GPR01P->SDWARCDE=0;   /* SAVE RC VALUE                 */
         MVI   SDWARCDE(GPR01P),X'00'                              0041
*             GPR01P->SDWARCRD='1'B;/* TURN ON RECORD INDICATOR      */
         OI    SDWARCRD(GPR01P),B'10000000'                        0042
*             GPR15P=ADDR(VICER);   /* ACCESS RECORD PARAMETER LIST  */
         LA    GPR15P,VICER                                        0043
*             GPR01P->SDWARECP=GPR15P->I256C(1:24);/* COPY RECORD  0044
*                                      PARAMETERS                    */
         MVC   SDWARECP(24,GPR01P),I256C(GPR15P)                   0044
*             RESPECIFY                                            0045
*              (GPR00P,                                            0045
*               GPR01P,                                            0045
*               GPR14P,                                            0045
*               GPR15P)UNRSTD;                                     0045
*           END;                                                   0046
*           RESPECIFY                                              0047
*             SDWA BASED(SDWAPTR);  /* REBASE THE SDWA               */
*           R15=0;                  /* INDICATE NO RETRY             */
         SR    R15,R15                                             0048
*         END;                                                     0049
*       ELSE                                                       0050
*         DO;                                                      0050
         B     @RC00036                                            0050
@RF00036 DS    0H                                                  0051
*           STAERTY='1'B;           /* TURN RECURSION BIT ON         */
         OI    STAERTY(STAEPTR),B'10000000'                        0051
*           SSDUMPC(1:SLSDUMP)=SSDUMP(1:SLSDUMP);/* MOVE IN SDUMP  0052
*                                      PARMS                         */
         L     @10,SLSDUMP                                         0052
         BCTR  @10,0                                               0052
         EX    @10,@SM01548                                        0052
*           R1=ADDR(SSDUMPC);       /* POINT R1 TO SDUMP PARMS       */
         LA    R1,SSDUMPC                                          0053
*           GEN(SDUMP MF=(E,(1)));  /* ISSUE THE SDUMP MACRO         */
         SDUMP MF=(E,(1))
*           IF R15^=0 THEN          /* IF SDUMP FAILED THEN INDICATE
*                                      IT                            */
         LTR   R15,R15                                             0055
         BZ    @RF00055                                            0055
*             STAEDUMP='1'B;        /* TURN DUMP FIALED BIT ON IN  0056
*                                      PARM LIST                     */
         OI    STAEDUMP(STAEPTR),B'01000000'                       0056
*           RESPECIFY                                              0057
*             CHAIN BASED(ASCBCSCB);/* BASE THE CSCB                 */
@RF00055 DS    0H                                                  0058
*           IF ASCBCSCB^=0 THEN                                    0058
         L     @10,CVTPTR                                          0058
         L     @10,CVTTCBP(,@10)                                   0058
         L     @10,ASCBPTR(,@10)                                   0058
         L     @10,ASCBCSCB(,@10)                                  0058
         LTR   @10,@10                                             0058
         BZ    @RF00058                                            0058
*             DO;                   /* IF THERE IS A CSCB DEQ        */
*               IF CHVCD=LOGON THEN /* CHECK FOR A LOGON             */
         CLC   CHVCD(1,@10),LOGON                                  0060
         BNE   @RF00060                                            0060
*                 DO;               /* LOGON DEQ OFF TSOQUE          */
*                   DEQCORE(1:DEQLGTH)=DEQLIST(1:DEQLGTH);/* MOVE IN
*                                      THE DEQ LIST                  */
         L     @10,DEQLGTH                                         0062
         BCTR  @10,0                                               0062
         EX    @10,@SM01551                                        0062
*                   R1=ADDR(DEQCORE);/* POINT TO THE DEQ LIST        */
         LA    R1,DEQCORE                                          0063
*                 END;                                             0064
*               ELSE                                               0065
*                 DO;               /* STC DEQ OFF STCQUE            */
         B     @RC00060                                            0065
@RF00060 DS    0H                                                  0066
*                   CALL WRITEMSG;  /* WRITE THE FAILED MSG TO THE 0066
*                                      CONSOLE                       */
         BAL   @14,WRITEMSG                                        0066
*                   DEQCORE1(1:DEQLGTH1)=DEQLIST1(1:DEQLGTH1);/* MOVE
*                                      IN THE DEQ LIST               */
         L     @10,DEQLGTH1                                        0067
         BCTR  @10,0                                               0067
         EX    @10,@SM01553                                        0067
*                   R1=ADDR(DEQCORE1);/* POINT TO THE DEQ LIST       */
         LA    R1,DEQCORE1                                         0068
*                 END;                                             0069
*               GEN( DEQ MF=(E,(1)));/* DEQ OFF THE RESOURCE         */
@RC00060 DS    0H                                                  0070
          DEQ MF=(E,(1))
*             END;                                                 0071
*           ELSE                                                   0072
*             CALL WRITEMSG;        /* WRITE MSG WITH NO CSCB        */
         B     @RC00058                                            0072
@RF00058 BAL   @14,WRITEMSG                                        0072
*                                                                  0073
*           /*********************************************************/
*           /*                                                       */
*           /* FREE THE AREAS NOT ALREADY FREED IN JSS HERE, AND FREE*/
*           /* THE JCLS IF IT EXSISTS                                */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0073
*           IF JSWAADDR^=0 THEN                                    0073
@RC00058 L     @10,JSWAADDR(,STAEPTR)                              0073
         LTR   @10,@10                                             0073
         BZ    @RF00073                                            0073
*             DO;                   /* IF THERE IS A JSWA THEN FREE
*                                      AREAS                         */
*               RESPECIFY                                          0075
*                 JSWA BASED(JSWAADDR);/* BASE THE JSWA FROM THE PARM
*                                      LIST                          */
*                                                                  0075
*               /*****************************************************/
*               /*                                                   */
*               /* INDICATE TYPE OF JSS ERROR HERE                   */
*               /*                                                   */
*               /*****************************************************/
*                                                                  0076
*               IF JSXLRCOD=0 THEN                                 0076
         L     @10,JSWAJSEL(,@10)                                  0076
         L     @10,JSELJSXL(,@10)                                  0076
         CLI   JSXLRCOD(@10),0                                     0076
         BNE   @RF00076                                            0076
*                 DO;               /* SET ERROR INDICATOR           */
*                   IF SDWACMPC=ZEROB9 THEN                        0078
         CLC   SDWACMPC(3,SDWAPTR),ZEROB9                          0078
         BNE   @RF00078                                            0078
*                     JSXLRCXT=6;   /* SUBSYSTEM                     */
         MVI   JSXLRCXT(@10),X'06'                                 0079
*                   ELSE                                           0080
*                     IF SDWACMPC=ZEROBA THEN                      0080
         B     @RC00078                                            0080
@RF00078 CLC   SDWACMPC(3,SDWAPTR),ZEROBA                          0080
         BNE   @RF00080                                            0080
*                       JSXLRCXT=5;                                0081
*                                                                  0081
         L     @10,JSWAADDR(,STAEPTR)                              0081
         L     @10,JSWAJSEL(,@10)                                  0081
         L     @10,JSELJSXL(,@10)                                  0081
         MVI   JSXLRCXT(@10),X'05'                                 0081
*                   /*************************************************/
*                   /*                                               */
*                   /* SUBSYSTEM INTERFACE ERROR                     */
*                   /*                                               */
*                   /*************************************************/
*                                                                  0082
*                     ELSE                                         0082
*                       JSXLRCXT=0; /* STC ERROR                     */
         B     @RC00080                                            0082
@RF00080 L     @10,JSWAADDR(,STAEPTR)                              0082
         L     @10,JSWAJSEL(,@10)                                  0082
         L     @10,JSELJSXL(,@10)                                  0082
         MVI   JSXLRCXT(@10),X'00'                                 0082
*                   JSXLRCOD=36;    /* SET RC INDICATOR              */
@RC00080 DS    0H                                                  0083
@RC00078 L     @10,JSWAADDR(,STAEPTR)                              0083
         L     @10,JSWAJSEL(,@10)                                  0083
         L     @10,JSELJSXL(,@10)                                  0083
         MVI   JSXLRCOD(@10),X'24'                                 0083
*                 END;                                             0084
*               RESPECIFY                                          0085
*                 JCLS BASED(PTRSAVE);/* BASE THE JCLS TO FREE IT    */
@RF00076 DS    0H                                                  0086
*               IF JSWAJCLS='1'B THEN/* IF JCLS EXISTS FEE IT        */
         L     @10,JSWAADDR(,STAEPTR)                              0086
         TM    JSWAJCLS(@10),B'10000000'                           0086
         BNO   @RF00086                                            0086
*                 DO;                                              0087
*                   JSWAJCLS='0'B;  /* INDICTE JCLS IS FREED         */
         NI    JSWAJCLS(@10),B'01111111'                           0088
*                   PTRSAVE=JSELJCL;/* POINT TO THE FIRST JCLS       */
         L     @10,JSWAJSEL(,@10)                                  0089
         L     PTRSAVE,JSELJCL(,@10)                               0089
*                   JSELJCL=0;      /* INDICATE NO JCL               */
         SR    @09,@09                                             0090
         ST    @09,JSELJCL(,@10)                                   0090
*                   DO WHILE PTRSAVE^=0;/* FREE JCLS CHAIN           */
         B     @DE00091                                            0091
@DL00091 DS    0H                                                  0092
*                     R0=LENGTH(JCLS);/* PUT LENGTH TO FREE IN R0    */
         LA    R0,88                                               0092
*                     R0=R0×'FD000000'X;/* PUT THE SUBPOOL IN R0     */
         O     R0,@CF01525                                         0093
*                     R1=PTRSAVE;   /* POINT TO THE JCLS             */
         LR    R1,PTRSAVE                                          0094
*                     PTRSAVE=JCLSJCLS;/* POINT TO NEXT JCLS         */
         L     PTRSAVE,JCLSJCLS(,PTRSAVE)                          0095
*                     GEN(FREEMAIN R,LV=(0),A=(1));/* FREE THE JCLS  */
         FREEMAIN R,LV=(0),A=(1)
*                   END;                                           0097
@DE00091 LTR   PTRSAVE,PTRSAVE                                     0097
         BNZ   @DL00091                                            0097
*                 END;                                             0098
*                                                                  0098
*               /*****************************************************/
*               /*                                                   */
*               /* FREE THE JSOL IF IT EXSISTS                       */
*               /*                                                   */
*               /*****************************************************/
*                                                                  0099
*               IF JSWAJSOL='1'B THEN                              0099
@RF00086 L     @10,JSWAADDR(,STAEPTR)                              0099
         TM    JSWAJSOL(@10),B'00001000'                           0099
         BNO   @RF00099                                            0099
*                 DO;               /* IF JSOL PRESENT FREE IT       */
*                   JSWAJSOL='0'B;  /* IT IS FREED                   */
         NI    JSWAJSOL(@10),B'11110111'                           0101
*                   R1=JSELJSOL;    /* POINT TO AREA TO FREE         */
         L     @10,JSWAJSEL(,@10)                                  0102
         L     R1,JSELJSOL(,@10)                                   0102
*                   JSELJSOL=0;     /* CLEAR THE POINTER TO IT       */
         SR    @09,@09                                             0103
         ST    @09,JSELJSOL(,@10)                                  0103
*                   R0=LENGTH(IEFVJSOL);/* PUT LENGTH IN R0          */
         LA    R0,40                                               0104
*                   R0=R0×'FD000000'X;/* PUT IN SUBPOOL 253          */
         O     R0,@CF01525                                         0105
*                   GEN(FREEMAIN R,LV=(0),A=(1));/* FREE THE JSOL    */
         FREEMAIN R,LV=(0),A=(1)
*                 END;                                             0107
*             END;                                                 0108
@RF00099 DS    0H                                                  0109
*                                                                  0109
*           /*********************************************************/
*           /*                                                       */
*           /* BUILD A RUB AREA TO TELL RTM TO RESTORE REGISTER ONE  */
*           /* AND FIFTEEN FROM THE SDWA AREA. THE RUB PARAMETER WILL*/
*           /* PUT REGISTERS CONTENTS IN THE SDWA WHEN SETRP IS      */
*           /* ISSUED.                                               */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0109
*           GEN(LOAD  EP=IEEVICER); /* LOAD ADDRESS OF IEEVICER      */
@RF00073 DS    0H                                                  0109
         LOAD  EP=IEEVICER
*           R8=R0;                  /* PUT ADDRESS IN AREA FOR USE   */
         LR    R8,R0                                               0110
*           MESSPTR=ADDR(MESCORE);  /* POINT TO AREA TO USE FOR RUB  */
         LA    MESSPTR,MESCORE                                     0111
*           RUBBITS=RUBEQU;         /* MOVE IN BIT SETTINGS FOR REGS */
         MVC   RUBBITS(2,MESSPTR),RUBEQU                           0112
*           REGONE=JSWAADDR;        /* REGISTER ONE CONTENTS FOR   0113
*                                      RETRY                         */
         MVC   REGONE(4,MESSPTR),JSWAADDR(STAEPTR)                 0113
*           REG15=R8;               /* REGISTER FIFTEEN CONTENTS     */
*                                                                  0114
         ST    R8,REG15(,MESSPTR)                                  0114
*           /*********************************************************/
*           /*                                                       */
*           /* ISSUE ?SETRP RECPARM(VICER) RETADDR(IEEVICER)         */
*           /* WKAREA(SDWAPTR) RECORD(YES) RC(4) FRESDWA(YES)        */
*           /* RETREGS(YES) RUB(RUBBITS); TO SCHEDULE RETRY OF JSS   */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0115
*           DO;                     /* SETRP RECPARM(VICER)        0115
*                                      RETADDR(IEEVICER)           0115
*                                      WKAREA(SDWAPTR) RECORD(YES) 0115
*                                      RC(4) FRESDWA(YES)          0115
*                                      RETREGS(YES) RUB(RUBBITS)     */
*             RESPECIFY                                            0116
*              (GPR00P,                                            0116
*               GPR01P,                                            0116
*               GPR14P,                                            0116
*               GPR15P)RSTD;                                       0116
*             GPR01P=SDWAPTR;                                      0117
         LR    GPR01P,SDWAPTR                                      0117
*             GPR01P->SDWARCDE=4;   /* STORE RC INTO SDWA            */
         MVI   SDWARCDE(GPR01P),X'04'                              0118
*             GPR01P->SDWARTYA=ADDR(IEEVICER);/* SAVE RETRY ADDRESS  */
         ST    R8,SDWARTYA(,GPR01P)                                0119
*             GPR01P->SDWAFREE='1'B;/* SET FLAG TO FREE SDWA         */
*             GPR01P->SDWARCRD='1'B;/* TURN ON RECORD INDICATOR      */
         OI    SDWAFREE(GPR01P),B'10000100'                        0121
*             GPR15P=ADDR(VICER);   /* ACCESS RECORD PARAMETER LIST  */
         LA    GPR15P,VICER                                        0122
*             GPR01P->SDWARECP=GPR15P->I256C(1:24);/* COPY RECORD  0123
*                                      PARAMETERS                    */
         MVC   SDWARECP(24,GPR01P),I256C(GPR15P)                   0123
*             GPR01P->SDWAUPRG='1'B;/* TURN ON RETREGS INDICATOR     */
         OI    SDWAUPRG(GPR01P),B'00001000'                        0124
*             GPR15P=ADDR(RUBBITS); /* GET PTR TO REG UPDATE BLOCK   */
         LA    GPR15P,RUBBITS(,MESSPTR)                            0125
*             GPR00P=GPR15P->I015F; /* ACCESS REGISTER BIT PATTERN   */
         LH    GPR00P,I015F(,GPR15P)                               0126
*             GPR15P=GPR15P+2;      /* CREATE PTR TO USER REG VALUES */
         AH    GPR15P,@CH00062                                     0127
*             GPR14P=ADDR(GPR01P->SDWASRSV);/* CREATE PTR TO SDWA  0128
*                                      SAVE AREA                     */
         LA    GPR14P,SDWASRSV(,GPR01P)                            0128
*             GEN(SLL   0,16);      /* SHIFT BIT PATTERN TO HIGH   0129
*                                      ORDER                         */
         SLL   0,16
*R0004:                                                            0130
*             GEN FLOWS(I0004);                                    0130
R0004    DS    0H                                                  0130
        ALR   0,0                    SHIFT BIT TO SIGN POSITION
        BC    12,I0004               BRANCH IF BIT NOT ON
        MVC   0(4,14),0(15)          MODIFY REGISTER IN SDWA
        LA    15,4(15)               UPDATE POINTER
*I0004:                                                            0131
*             GENERATE FLOWS(R0004);                               0131
I0004    DS    0H                                                  0131
        LA    14,4(14)               UPDATE PTR IN SDWA
        BC    5,R0004                TEST ALR CONDITION CODE TO TEST
*                                    IF ALL BITS EXHAUSTED
*             RESPECIFY                                            0132
*              (GPR00P,                                            0132
*               GPR01P,                                            0132
*               GPR14P,                                            0132
*               GPR15P)UNRSTD;                                     0132
*           END;                                                   0133
*           RESPECIFY                                              0134
*             SDWA BASED(SDWAPTR);  /* REBASE THE SDWA               */
*         END;                      /* RETURN TO CALLER              */
*                                                                  0136
*       /*************************************************************/
*       /*                                                           */
*       /* THE PLS GOTTEN AREA MUST BE FREED ON EXIT                 */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0136
*       GEN;                                                       0136
@RC00036 DS    0H                                                  0136
     L   R0,@SIZDATD
     FREEMAIN R,LV=(0),A=(R11)
*     END;                                                         0137
*   R14=R7;                         /* RESTORE RETURN ADDRESS        */
@RC00031 LR    R14,R7                                              0138
*   GEN( BR  14);                   /* RETURN TO CALLER              */
          BR  14
*                                                                  0140
*   /*****************************************************************/
*   /*                                                               */
*   /* WRITE THE STC FAILED MSG TO THE OPERATOR                      */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0140
*WRITEMSG:                                                         0140
*   PROC OPTIONS(NOSAVEAREA);                                      0140
         B     @PB00002                                            0140
WRITEMSG STM   @14,@12,12(@13)                                     0140
*   RESPECIFY                                                      0141
*     MESAREA BASED(MESSPTR);       /* BASE THE MESSAGE AREA         */
*   MESSPTR=ADDR(MESCORE);          /* ADDRESS THE MESSAGE AREA      */
         LA    MESSPTR,MESCORE                                     0142
*   MESAREA=MESAREA&&MESAREA;       /* CLEAR THE MESSAGE AREA        */
         XC    MESAREA(55,MESSPTR),MESAREA(MESSPTR)                0143
*   MESFLGS=MCSFLGS;                /* SET MCS FLAGS IN WTO AREA     */
         MVC   MESFLGS(2,MESSPTR),MCSFLGS                          0144
*   MESID=IEE824I;                  /* PUT MESSAGE ID IN MESSAGE     */
         MVC   MESID(8,MESSPTR),IEE824I                            0145
*   MESLEN=LENGTH(IEE824I)+4;       /* UPDATE LENGTH OF MESSAGE      */
         LA    @10,12                                              0146
         STH   @10,MESLEN(,MESSPTR)                                0146
*   IF ASCBCSCB=0 THEN              /* IF NO CSCB USE STC NAME       */
         L     @09,CVTPTR                                          0147
         L     @09,CVTTCBP(,@09)                                   0147
         L     @09,ASCBPTR(,@09)                                   0147
         ICM   @15,15,ASCBCSCB(@09)                                0147
         BNZ   @RF00147                                            0147
*     DO;                                                          0148
*       STCNAME=STARTED;            /* PUT STC NAME IN MESSAGE       */
         MVC   STCNAME(13,MESSPTR),STARTED                         0149
*       BASEPTR=ADDR(BUILDA);       /* POINT TO MIDDLE OF MESSAGE    */
         LA    @09,BUILDA(,MESSPTR)                                0150
         ST    @09,BASEPTR                                         0150
*       MESLEN=MESLEN+LENGTH(STARTED);/* UPDATE THE LENGTH OF MESSAGE*/
         AH    @10,@CH01423                                        0151
         STH   @10,MESLEN(,MESSPTR)                                0151
*     END;                                                         0152
*   ELSE                                                           0153
*     DO;                           /* IF CSCB PRESENT THE USE THE 0153
*                                      NAME IN IT                    */
         B     @RC00147                                            0153
@RF00147 DS    0H                                                  0154
*       TASKNAME=CHCLS;             /* PUT TASK NAME IN MESSAGE      */
         L     @10,CVTPTR                                          0154
         L     @10,CVTTCBP(,@10)                                   0154
         L     @10,ASCBPTR(,@10)                                   0154
         L     @10,ASCBCSCB(,@10)                                  0154
         MVC   TASKNAME(8,MESSPTR),CHCLS(@10)                      0154
*       BASEPTR=ADDR(NEXT);         /* POINT TO MIDDLE OF MESSAGE    */
         LA    @10,NEXT(,MESSPTR)                                  0155
         ST    @10,BASEPTR                                         0155
*       MESLEN=MESLEN+LENGTH(CHCLS)+LENGTH(BLANK);/* UPDATE THE    0156
*                                      LENGTH                        */
         LA    @10,9                                               0156
         AH    @10,MESLEN(,MESSPTR)                                0156
         STH   @10,MESLEN(,MESSPTR)                                0156
*     END;                                                         0157
*   FAILAREA=FAILED;                /* PUT FAILED IN THE MESSAGE     */
@RC00147 L     @10,BASEPTR                                         0158
         MVC   FAILAREA(8,@10),FAILED                              0158
*   MESLEN=MESLEN+LENGTH(FAILED);   /* UPDATE THE MESSAGE LENGTH     */
         LA    @09,8                                               0159
         AH    @09,MESLEN(,MESSPTR)                                0159
         STH   @09,MESLEN(,MESSPTR)                                0159
*   IF STAEDUMP='0'B THEN           /* IF SDUMP O.K. PUT DUMPED IN 0160
*                                      MESSAGE                       */
         TM    STAEDUMP(STAEPTR),B'01000000'                       0160
         BNZ   @RF00160                                            0160
*     DO;                                                          0161
*       TERMITA=TERMITEA;           /* MOVE TERMINTED AND DUM IN   0162
*                                      MESSAGE                       */
         MVC   TERMITA(15,@10),TERMITEA                            0162
*       MESLEN=MESLEN+LENGTH(PED)+LENGTH(TERMITEA);/* UPDATE LENGTH  */
         AH    @09,@CH01545                                        0163
         STH   @09,MESLEN(,MESSPTR)                                0163
*       PEDPART=PED;                /* PUT THE PED ON DUM FOR DUMPED */
         MVI   PEDPART+3(@10),C' '                                 0164
         MVC   PEDPART+4(3,@10),PEDPART+3(@10)                     0164
         MVC   PEDPART(3,@10),PED                                  0164
*       DESFGS=DESCDS;              /* MOVE IN THE DESCRIPTOR FLAGS  */
         MVC   DESFGS(2,@10),DESCDS                                0165
*       ROUFLGS=ROUTCDS;            /* MOVE IN THE ROUTING CODE      */
         MVC   ROUFLGS(2,@10),ROUTCDS                              0166
*     END;                                                         0167
*   ELSE                                                           0168
*     DO;                                                          0168
         B     @RC00160                                            0168
@RF00160 DS    0H                                                  0169
*       TERMITC=TERMITE;            /* MOVE IN TERMINATED            */
         L     @10,BASEPTR                                         0169
         MVC   TERMITC(10,@10),TERMITE                             0169
*       MESLEN=MESLEN+LENGTH(TERMITE);/* UPDATE MESSAGE LENGTH       */
         LA    @09,10                                              0170
         AH    @09,MESLEN(,MESSPTR)                                0170
         STH   @09,MESLEN(,MESSPTR)                                0170
*       DESCFGS=DESCDS;             /* MOVE IN THE DESCRIPTOR FLAGS  */
         MVC   DESCFGS(2,@10),DESCDS                               0171
*       ROUTFLGS=ROUTCDS;           /* MOVE IN THE ROUTDING CODES    */
         MVC   ROUTFLGS(2,@10),ROUTCDS                             0172
*     END;                                                         0173
*   R1=MESSPTR;                     /* POINT TO THE MESSAGE          */
@RC00160 LR    R1,MESSPTR                                          0174
*   GEN(WTO  MF=(E,(1)));           /* ISSUE THE WTO                 */
         WTO  MF=(E,(1))
*   END;                                                           0176
@EL00002 DS    0H                                                  0176
@EF00002 DS    0H                                                  0176
@ER00002 LM    @14,@12,12(@13)                                     0176
         BR    @14                                                 0176
@PB00002 DS    0H                                                  0177
*   DCL                                                            0177
*     PATCHLOC FIXED(31)STATIC;                                    0177
*   GEN DATA DEFS(PATCHLOC);                                       0178
*   DECLARE                         /* GENERAL PURPOSE REGISTERS     */
*     GPR00P PTR(31)REG(0),                                        0179
*     GPR01P PTR(31)REG(1),                                        0179
*     GPR14P PTR(31)REG(14),                                       0179
*     GPR15P PTR(31)REG(15);                                       0179
*   DECLARE                         /* COMMON VARIABLES              */
*     I256C CHAR(256)BASED,                                        0180
*     I031F FIXED(31)BASED,                                        0180
*     I031P PTR(31)BASED,                                          0180
*     I015F FIXED(15)BASED,                                        0180
*     I015P PTR(15)BASED,                                          0180
*     I008P PTR(8)BASED,                                           0180
*     I001C CHAR(1)BASED;                                          0180
*   END                                                            0181
*                                                                  0181
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (IHASDWA )                                       */
*/*%INCLUDE SYSLIB  (IHAASCB )                                       */
*/*%INCLUDE SYSLIB  (IEEZB820)                                       */
*/*%INCLUDE SYSLIB  (IEECHAIN)                                       */
*/*%INCLUDE SYSLIB  (IEFVJSWA)                                       */
*/*%INCLUDE SYSLIB  (IEFVJSEL)                                       */
*/*%INCLUDE SYSLIB  (IEFJCLS )                                       */
*/*%INCLUDE SYSLIB  (IEFVJSOL)                                       */
*/*%INCLUDE SYSLIB  (IEFVJSXL)                                       */
*/*%INCLUDE SYSLIB  (CVT     )                                       */
*/*%INCLUDE SYSLIB  (IEFPTRS )                                       */
*                                                                  0181
*       ;                                                          0181
@EL00001 L     @13,4(,@13)                                         0181
@EF00001 DS    0H                                                  0181
@ER00001 BR    @14                                                 0181
@DATA    DS    0H
@CH00062 DC    H'2'
@CH01511 DC    H'12'
@CH01423 DC    H'13'
@CH01545 DC    H'18'
@SM01548 MVC   SSDUMPC(0),SSDUMP
@SM01551 MVC   DEQCORE(0),DEQLIST
@SM01553 MVC   DEQCORE1(0),DEQLIST1
@DATD    DSECT
         DS    0F
@SA00001 DS    18F
IEESB670 CSECT
         DS    0F
@CF01525 DC    XL4'FD000000'
@DATD    DSECT
         DS    0D
CSCBPTR  DS    A
JSWAPTR  DS    A
BASEPTR  DS    A
MESCORE  DS    CL55
IEESB670 CSECT
         DS    0F
@SIZDATD DC    AL1(230)
         DC    AL3(@ENDDATD-@DATD)
         DS    0D
         DS    CL1
ZEROB9   DC    XL3'0B9000'
         DS    CL1
ZEROBA   DC    XL3'0BA000'
SSMAJ    DC    CL8'SYSIEFSD'
SSMIN    DC    CL6'TSOQUE'
SSMIN1   DC    CL6'STCQUE'
IEE824I  DC    CL8'IEE824I '
STARTED  DC    CL13'STARTED TASK '
PED      DC    CL3'PED'
TERMITEA DC    CL15'TERMINATED, DUM'
TERMITE  DC    CL10'TERMINATED'
VICER    DC    CL24'                IEESB670'
FAILED   DC    CL8'FAILED, '
LOGON    DC    X'98'
RUBEQU   DC    X'4001'
IEESB670 CSECT
LABEL1  WTO ' ',ROUTCDE=2,DESC=(4,6),MF=L
IEESB670 CSECT
SSDUMP SDUMP HDR='STARTED TASK CONTROL',SDATA=(SQA,PSA,LSQA,RGN,      **
               LPA,TRT,CSA,NUC),MF=L
SSLGH  EQU  *
SLSDUMP DC    A(SSLGH-SSDUMP)
@DATD    DSECT
SSDUMPC SDUMP HDR='STARTED TASK CONTROL',SDATA=(SQA,PSA,LSQA,RGN,     **
               LPA,TRT,CSA,NUC),MF=L
IEESB670 CSECT
DEQLIST ENQ  (SSMAJ,SSMIN,E,6,SYSTEM),RET=HAVE,MF=L
DEQLGTH DC  A(*-DEQLIST)
@DATD    DSECT
DEQCORE ENQ  (SSMAJ,SSMIN,E,6,SYSTEM),RET=HAVE,MF=L
IEESB670 CSECT
DEQLIST1 ENQ  (SSMAJ,SSMIN1,E,6,SYSTEM),RET=HAVE,MF=L
DEQLGTH1 DC  A(*-DEQLIST1)
@DATD    DSECT
DEQCORE1 ENQ  (SSMAJ,SSMIN1,E,6,SYSTEM),RET=HAVE,MF=L
IEESB670 CSECT
         DS   0H
PATCHLOC DC ((@DATA-@PSTART)/20)X'00'
@DATD    DSECT
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
IEESB670 CSECT
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
PTRSAVE  EQU   @03
MESSPTR  EQU   @03
STAEPTR  EQU   @06
SDWAPTR  EQU   @02
R0       EQU   @00
R1       EQU   @01
R7       EQU   @07
R8       EQU   @08
R14      EQU   @14
R11      EQU   @11
R13      EQU   @13
R15      EQU   @15
GPR00P   EQU   @00
GPR01P   EQU   @01
GPR14P   EQU   @14
GPR15P   EQU   @15
CVTPTR   EQU   16
SDWA     EQU   0
SDWAPARM EQU   SDWA
SDWAFIOB EQU   SDWA+4
SDWAABCC EQU   SDWAFIOB
SDWACMPF EQU   SDWAABCC
SDWACMPC EQU   SDWAABCC+1
SDWACTL1 EQU   SDWA+8
SDWACMKA EQU   SDWACTL1
SDWAMWPA EQU   SDWACTL1+1
SDWAPMKA EQU   SDWACTL1+4
SDWACTL2 EQU   SDWA+16
SDWACMKP EQU   SDWACTL2
SDWAMWPP EQU   SDWACTL2+1
SDWAPMKP EQU   SDWACTL2+4
SDWAGRSV EQU   SDWA+24
SDWANAME EQU   SDWA+88
SDWAEC1  EQU   SDWA+104
SDWAEMK1 EQU   SDWAEC1
SDWAMWP1 EQU   SDWAEC1+1
SDWAINT1 EQU   SDWAEC1+2
SDWANXT1 EQU   SDWAEC1+4
SDWAAEC1 EQU   SDWA+112
SDWAILC1 EQU   SDWAAEC1+1
SDWAINC1 EQU   SDWAAEC1+2
SDWAICD1 EQU   SDWAINC1+1
SDWAEC2  EQU   SDWA+120
SDWAEMK2 EQU   SDWAEC2
SDWAMWP2 EQU   SDWAEC2+1
SDWAINT2 EQU   SDWAEC2+2
SDWANXT2 EQU   SDWAEC2+4
SDWAAEC2 EQU   SDWA+128
SDWAILC2 EQU   SDWAAEC2+1
SDWAINC2 EQU   SDWAAEC2+2
SDWAICD2 EQU   SDWAINC2+1
SDWASRSV EQU   SDWA+136
SDWAIDNT EQU   SDWA+200
SDWAMCH  EQU   SDWA+204
SDWASTCK EQU   SDWAMCH
SDWAMCHI EQU   SDWAMCH+8
SDWAMCHS EQU   SDWAMCHI
SDWAMCHD EQU   SDWAMCHI+1
SDWARSR1 EQU   SDWAMCH+12
SDWARSR2 EQU   SDWAMCH+13
SDWAFLGS EQU   SDWA+232
SDWAERRA EQU   SDWAFLGS
SDWAERRB EQU   SDWAFLGS+1
SDWAERRC EQU   SDWAFLGS+2
SDWAPERC EQU   SDWAERRC
SDWAERRD EQU   SDWAFLGS+3
SDWAIOFS EQU   SDWA+238
SDWARTYA EQU   SDWA+240
SDWAPARQ EQU   SDWA+252
SDWARCDE EQU   SDWAPARQ
SDWAACF2 EQU   SDWAPARQ+1
SDWARCRD EQU   SDWAACF2
SDWAUPRG EQU   SDWAACF2
SDWAFREE EQU   SDWAACF2
SDWAACF3 EQU   SDWAPARQ+2
SDWAACF4 EQU   SDWAPARQ+3
SDWALKWA EQU   SDWA+256
SDWALKWS EQU   SDWALKWA
SDWARECP EQU   SDWA+292
SDWASNPA EQU   SDWA+320
SDWADUMP EQU   SDWASNPA
SDWADPFS EQU   SDWADUMP+1
SDWADDAT EQU   SDWASNPA+4
SDWASDAT EQU   SDWADDAT
SDWAPDAT EQU   SDWADDAT+2
SDWADPSA EQU   SDWA+328
SDWADPSL EQU   SDWADPSA
SDWARA   EQU   SDWA+400
SDWADPVA EQU   SDWARA+2
ASCB     EQU   0
ASCBCSCB EQU   ASCB+56
ASCBFW1  EQU   ASCB+100
ASCBRCTF EQU   ASCBFW1+2
ASCBFLG1 EQU   ASCBFW1+3
ASCBDSP1 EQU   ASCB+114
ASCBFLG2 EQU   ASCB+115
STAELST  EQU   0
JSWAADDR EQU   STAELST
PARMINFO EQU   STAELST+4
@NM00048 EQU   STAELST+8
STAEFLG  EQU   @NM00048
STAERTY  EQU   STAEFLG
STAEDUMP EQU   STAEFLG
CHAIN    EQU   0
CHFLG    EQU   CHAIN+4
CHVCD    EQU   CHFLG
CHSTS    EQU   CHFLG+2
CHACT    EQU   CHFLG+3
CHKEY    EQU   CHAIN+8
CHCLS    EQU   CHAIN+16
CHPKE    EQU   CHAIN+28
CHTJID   EQU   CHAIN+30
CHACT1   EQU   CHAIN+35
CHASM    EQU   CHAIN+40
CHCIBP   EQU   CHASM+4
CHRGNSZ  EQU   CHASM+8
CHSHORT  EQU   CHASM+24
CHSWT    EQU   CHSHORT
JSWA     EQU   0
JSWAOPT  EQU   JSWA+2
JSWAJSSR EQU   JSWA+3
JSWAJCLS EQU   JSWAJSSR
JSWAJSOL EQU   JSWAJSSR
JSWAJSEL EQU   JSWA+4
@NM00058 EQU   JSWA+32
JSEL     EQU   0
JSELJSOL EQU   JSEL+4
JSELJCL  EQU   JSEL+12
JSELJSXL EQU   JSEL+16
JSELASCB EQU   JSEL+20
JCLS     EQU   0
JCLSHDR  EQU   JCLS
JCLSJCLS EQU   JCLSHDR
JCLSCARD EQU   JCLS+8
IEFVJSOL EQU   0
JSOLFLAG EQU   IEFVJSOL+2
JSOLOPTS EQU   IEFVJSOL+3
JSOLTPR  EQU   IEFVJSOL+16
JSXL     EQU   0
JSXLHDR  EQU   JSXL
JSXLRCOD EQU   JSXLHDR+2
JSXLRCXT EQU   JSXLHDR+3
JSXLLDEF EQU   JSXL+8
JSXLID   EQU   JSXLLDEF+1
CVTMAP   EQU   0
CVTTCBP  EQU   CVTMAP
CVTDAR   EQU   CVTMAP+72
CVTFLGS1 EQU   CVTDAR
CVTDCB   EQU   CVTMAP+116
CVTOPTA  EQU   CVTMAP+182
CVTOPTB  EQU   CVTMAP+183
CVTTSCVT EQU   CVTMAP+228
CVTTSFLG EQU   CVTTSCVT
CVTGTF   EQU   CVTMAP+236
CVTGTFST EQU   CVTGTF
CVTGTFS  EQU   CVTGTFST
CVTSTATE EQU   CVTGTFST
CVTTMODE EQU   CVTGTFST
CVTFORM  EQU   CVTGTFST
CVTUSR   EQU   CVTGTFST
CVTAQAVT EQU   CVTMAP+240
CVTTCMFG EQU   CVTAQAVT
CVTVOLM2 EQU   CVTMAP+244
CVTTATA  EQU   CVTVOLM2
CVTATER  EQU   CVTMAP+248
CVTEXT1  EQU   CVTMAP+252
CVTPURG  EQU   CVTMAP+260
CVTQMSG  EQU   CVTMAP+268
CVTDMSR  EQU   CVTMAP+272
CVTAPF   EQU   CVTMAP+324
CVTEXT2  EQU   CVTMAP+328
CVTHJES  EQU   CVTMAP+332
CVTPGSIA EQU   CVTMAP+348
CVTA1F1  EQU   CVTMAP+356
CVTSYSK  EQU   CVTMAP+357
CVTATMCT EQU   CVTMAP+388
CVTXTNT1 EQU   0
CVTXTNT2 EQU   0
CVTDSSV  EQU   CVTXTNT2
CVTRSV90 EQU   CVTXTNT2+5
CVTQID   EQU   CVTXTNT2+24
CVTRV400 EQU   CVTXTNT2+52
CVTRV409 EQU   CVTXTNT2+53
CVTATCVT EQU   CVTXTNT2+64
CVTRV429 EQU   CVTXTNT2+84
CVTRV438 EQU   CVTXTNT2+85
CVTRV457 EQU   CVTXTNT2+112
CVTRV466 EQU   CVTXTNT2+113
CVTFIX   EQU   0
CVTRELNO EQU   CVTFIX+252
TCBASCB  EQU   0
ASCBPTR  EQU   TCBASCB+12
IEEVICER EQU   0
MESAREA  EQU   0
MESLEN   EQU   MESAREA
MESFLGS  EQU   MESAREA+2
MESSAGE  EQU   MESAREA+4
MESID    EQU   MESSAGE
STCNAME  EQU   MESSAGE+8
TASKNAME EQU   STCNAME
BLANK    EQU   STCNAME+8
NEXT     EQU   STCNAME+9
BUILDA   EQU   MESSAGE+21
DUMPTERM EQU   0
FAILAREA EQU   DUMPTERM
DUMPAREA EQU   DUMPTERM+8
TERMITA  EQU   DUMPAREA
TERMITB  EQU   TERMITA
TERMITC  EQU   TERMITB
DESCFGS  EQU   TERMITB+10
ROUTFLGS EQU   TERMITB+12
PEDPART  EQU   DUMPAREA+15
DESFGS   EQU   PEDPART+3
ROUFLGS  EQU   PEDPART+5
RUBAREA  EQU   0
RUBBITS  EQU   RUBAREA+2
REGONE   EQU   RUBAREA+4
REG15    EQU   RUBAREA+8
I256C    EQU   0
I015F    EQU   0
I001C    EQU   0
I008P    EQU   0
I015P    EQU   0
I031F    EQU   0
I031P    EQU   0
CHAINS01 EQU   CHASM
CHTYPE   EQU   CHAINS01+124
CHTRSTAT EQU   CHAINS01+125
CHCSYSO  EQU   CHAINS01+134
CVTS01   EQU   CVTPGSIA
CVTLPDIA EQU   CVTS01+12
CVTDIRST EQU   CVTLPDIA
CVTSLIDA EQU   CVTS01+24
CVTCTLFG EQU   CVTS01+50
CVTRV100 EQU   CVTS01+116
CVTRV109 EQU   CVTS01+117
CVTRV118 EQU   CVTS01+118
CVTRV127 EQU   CVTS01+119
CVTRV157 EQU   CVTS01+376
CVTRV166 EQU   CVTS01+377
CVTRV175 EQU   CVTS01+378
CVTRV184 EQU   CVTS01+379
CVTRV210 EQU   CVTS01+424
CVTRV219 EQU   CVTS01+425
CVTRV228 EQU   CVTS01+426
CVTRV237 EQU   CVTS01+427
CVTMFRTR EQU   CVTS01+452
CVTRV262 EQU   CVTS01+468
CVTRV271 EQU   CVTS01+469
CVTRV280 EQU   CVTS01+470
CVTRV289 EQU   CVTS01+471
CVTGSDA  EQU   CVTS01+600
WTOMAP   EQU   LABEL1
MCSFLGS  EQU   WTOMAP+2
DESCDS   EQU   WTOMAP+5
ROUTCDS  EQU   WTOMAP+7
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
@NM00072 EQU   WTOMAP+4
@NM00071 EQU   WTOMAP
CVTRV512 EQU   CVTS01+608
CVTADV   EQU   CVTS01+604
CVTGSDAB EQU   CVTGSDA
CVTQV3   EQU   CVTS01+596
CVTQV2   EQU   CVTS01+592
CVTQV1   EQU   CVTS01+588
CVTRPT   EQU   CVTS01+584
CVTSSRB  EQU   CVTS01+580
CVTCSDRL EQU   CVTS01+576
CVTEXP1  EQU   CVTS01+572
CVTRMPMT EQU   CVTS01+568
CVTRMPTT EQU   CVTS01+564
CVTVPSA  EQU   CVTS01+560
CVTVSTOP EQU   CVTS01+556
CVTGTFR8 EQU   CVTS01+552
CVTQUIT  EQU   CVTS01+548
CVTVACR  EQU   CVTS01+544
CVTWTCB  EQU   CVTS01+540
CVTSTPRS EQU   CVTS01+536
CVT0PT02 EQU   CVTS01+532
CVTDARCM EQU   CVTS01+528
CVTIRECM EQU   CVTS01+524
CVTJRECM EQU   CVTS01+520
CVTVEMS0 EQU   CVTS01+516
CVTSPFRR EQU   CVTS01+512
CVTRLSTG EQU   CVTS01+508
CVT0TC0A EQU   CVTS01+504
CVTGMBR  EQU   CVTS01+500
CVTLFRM  EQU   CVTS01+496
CVTRMBR  EQU   CVTS01+492
CVTVIOP  EQU   CVTS01+488
CVTRV307 EQU   CVTS01+486
CVTRV306 EQU   CVTS01+484
CVTRV305 EQU   CVTS01+482
CVTRV304 EQU   CVTS01+480
CVTRV303 EQU   CVTS01+478
CVTRV302 EQU   CVTS01+476
CVTRV301 EQU   CVTS01+475
CVTRV300 EQU   CVTS01+474
CVTRV299 EQU   CVTS01+473
CVTRV298 EQU   CVTS01+472
CVTRV297 EQU   CVTRV289
CVTRV296 EQU   CVTRV289
CVTRV295 EQU   CVTRV289
CVTRV294 EQU   CVTRV289
CVTRV293 EQU   CVTRV289
CVTRV292 EQU   CVTRV289
CVTRV291 EQU   CVTRV289
CVTRV290 EQU   CVTRV289
CVTRV288 EQU   CVTRV280
CVTRV287 EQU   CVTRV280
CVTRV286 EQU   CVTRV280
CVTRV285 EQU   CVTRV280
CVTRV284 EQU   CVTRV280
CVTRV283 EQU   CVTRV280
CVTRV282 EQU   CVTRV280
CVTRV281 EQU   CVTRV280
CVTRV279 EQU   CVTRV271
CVTRV278 EQU   CVTRV271
CVTRV277 EQU   CVTRV271
CVTRV276 EQU   CVTRV271
CVTRV275 EQU   CVTRV271
CVTRV274 EQU   CVTRV271
CVTRV273 EQU   CVTRV271
CVTRV272 EQU   CVTRV271
CVTRV270 EQU   CVTRV262
CVTRV269 EQU   CVTRV262
CVTRV268 EQU   CVTRV262
CVTRV267 EQU   CVTRV262
CVTRV266 EQU   CVTRV262
CVTRV265 EQU   CVTRV262
CVTRV264 EQU   CVTRV262
CVTRV263 EQU   CVTRV262
CVTVFP   EQU   CVTS01+464
CVTVSI   EQU   CVTS01+460
CVTVPSIB EQU   CVTS01+456
CVTMFACT EQU   CVTMFRTR
CVTMFCTL EQU   CVTS01+448
CVTPVBP  EQU   CVTS01+444
CVTPWI   EQU   CVTS01+440
CVTRV254 EQU   CVTS01+438
CVTRV253 EQU   CVTS01+436
CVTRV252 EQU   CVTS01+434
CVTRV251 EQU   CVTS01+433
CVTRV250 EQU   CVTS01+432
CVTRV249 EQU   CVTS01+431
CVTRV248 EQU   CVTS01+430
CVTRV247 EQU   CVTS01+429
CVTRV246 EQU   CVTS01+428
CVTRV245 EQU   CVTRV237
CVTRV244 EQU   CVTRV237
CVTRV243 EQU   CVTRV237
CVTRV242 EQU   CVTRV237
CVTRV241 EQU   CVTRV237
CVTRV240 EQU   CVTRV237
CVTRV239 EQU   CVTRV237
CVTRV238 EQU   CVTRV237
CVTRV236 EQU   CVTRV228
CVTRV235 EQU   CVTRV228
CVTRV234 EQU   CVTRV228
CVTRV233 EQU   CVTRV228
CVTRV232 EQU   CVTRV228
CVTRV231 EQU   CVTRV228
CVTRV230 EQU   CVTRV228
CVTRV229 EQU   CVTRV228
CVTRV227 EQU   CVTRV219
CVTRV226 EQU   CVTRV219
CVTRV225 EQU   CVTRV219
CVTRV224 EQU   CVTRV219
CVTRV223 EQU   CVTRV219
CVTRV222 EQU   CVTRV219
CVTRV221 EQU   CVTRV219
CVTRV220 EQU   CVTRV219
CVTRV218 EQU   CVTRV210
CVTRV217 EQU   CVTRV210
CVTRV216 EQU   CVTRV210
CVTRV215 EQU   CVTRV210
CVTRV214 EQU   CVTRV210
CVTRV213 EQU   CVTRV210
CVTRV212 EQU   CVTRV210
CVTRV211 EQU   CVTRV210
CVTLCCAT EQU   CVTS01+420
CVTPCCAT EQU   CVTS01+416
CVTIPCRP EQU   CVTS01+412
CVTIPCRI EQU   CVTS01+408
CVTIPCDS EQU   CVTS01+404
CVTAIDVT EQU   CVTS01+400
CVTSSAP  EQU   CVTS01+396
CVTRV202 EQU   CVTS01+394
CVTRV201 EQU   CVTS01+392
CVTRV200 EQU   CVTS01+390
CVTRV199 EQU   CVTS01+388
CVTRV198 EQU   CVTS01+386
CVTRV197 EQU   CVTS01+384
CVTRV196 EQU   CVTS01+383
CVTRV195 EQU   CVTS01+382
CVTRV194 EQU   CVTS01+381
CVTRV193 EQU   CVTS01+380
CVTRV192 EQU   CVTRV184
CVTRV191 EQU   CVTRV184
CVTRV190 EQU   CVTRV184
CVTRV189 EQU   CVTRV184
CVTRV188 EQU   CVTRV184
CVTRV187 EQU   CVTRV184
CVTRV186 EQU   CVTRV184
CVTRV185 EQU   CVTRV184
CVTRV183 EQU   CVTRV175
CVTRV182 EQU   CVTRV175
CVTRV181 EQU   CVTRV175
CVTRV180 EQU   CVTRV175
CVTRV179 EQU   CVTRV175
CVTRV178 EQU   CVTRV175
CVTRV177 EQU   CVTRV175
CVTRV176 EQU   CVTRV175
CVTRV174 EQU   CVTRV166
CVTRV173 EQU   CVTRV166
CVTRV172 EQU   CVTRV166
CVTRV171 EQU   CVTRV166
CVTRV170 EQU   CVTRV166
CVTRV169 EQU   CVTRV166
CVTRV168 EQU   CVTRV166
CVTRV167 EQU   CVTRV166
CVTRV165 EQU   CVTRV157
CVTRV164 EQU   CVTRV157
CVTRV163 EQU   CVTRV157
CVTRV162 EQU   CVTRV157
CVTRV161 EQU   CVTRV157
CVTRV160 EQU   CVTRV157
CVTRV159 EQU   CVTRV157
CVTRV158 EQU   CVTRV157
CVTRV156 EQU   CVTS01+372
CVTRSTWD EQU   CVTS01+368
CVTSPOST EQU   CVTS01+364
CVTIOBP  EQU   CVTS01+360
CVTASMVT EQU   CVTS01+356
CVTRECRQ EQU   CVTS01+352
CVTWSAC  EQU   CVTS01+348
CVTWSAG  EQU   CVTS01+344
CVTWSAL  EQU   CVTS01+340
CVTSPSA  EQU   CVTS01+336
CVTGLMN  EQU   CVTS01+332
CVTVEAC0 EQU   CVTS01+328
CVT062R1 EQU   CVTS01+324
CVTRPOST EQU   CVTS01+320
CVTDQIQE EQU   CVTS01+316
CVTCSD   EQU   CVTS01+312
CVTLKRMA EQU   CVTS01+308
CVTRSPIE EQU   CVTS01+304
CVTRENQ  EQU   CVTS01+300
CVTLQCB  EQU   CVTS01+296
CVTFQCB  EQU   CVTS01+292
CVTQCS01 EQU   CVTS01+288
CVTAPFT  EQU   CVTS01+284
CVTPARRL EQU   CVTS01+280
CVTVWAIT EQU   CVTS01+276
CVTGSPL  EQU   CVTS01+272
CVTLSMQ  EQU   CVTS01+268
CVTGSMQ  EQU   CVTS01+264
CVTEXPRO EQU   CVTS01+260
CVTOPCTP EQU   CVTS01+256
CVTSIC   EQU   CVTS01+252
CVTTPIOS EQU   CVTS01+248
CVTRTMS  EQU   CVTS01+244
CVTSDBF  EQU   CVTS01+240
CVTSCBP  EQU   CVTS01+236
CVTSDMP  EQU   CVTS01+232
CVTSV60  EQU   CVTS01+228
CVTRTMCT EQU   CVTS01+224
CVTASCBL EQU   CVTS01+220
CVTASCBH EQU   CVTS01+216
CVTGDA   EQU   CVTS01+212
CVTASVT  EQU   CVTS01+208
CVTVVMDI EQU   CVTS01+204
CVTAQTOP EQU   CVTS01+200
CVTIOSCS EQU   CVTS01+196
CVTSDRM  EQU   CVTS01+192
CVTOPTE  EQU   CVTS01+188
CVTSTXU  EQU   CVTS01+184
CVTQUIS  EQU   CVTS01+180
CVTQREC  EQU   CVTS01+176
CVTS1EE  EQU   CVTS01+172
CVTFRAS  EQU   CVTS01+168
CVTQSAS  EQU   CVTS01+164
CVTCRAS  EQU   CVTS01+160
CVTCRMN  EQU   CVTS01+156
CVTDELCP EQU   CVTS01+152
CVTFRECL EQU   CVTS01+148
CVTGETCL EQU   CVTS01+144
CVTBLDCP EQU   CVTS01+140
CVTAUTHL EQU   CVTS01+136
CVTRV146 EQU   CVTS01+134
CVTRV145 EQU   CVTS01+132
CVTRV144 EQU   CVTS01+130
CVTMAXMP EQU   CVTS01+128
CVTRV142 EQU   CVTS01+126
CVTRV141 EQU   CVTS01+125
CVTRV140 EQU   CVTS01+124
CVTRV139 EQU   CVTS01+123
CVTDSSAC EQU   CVTS01+122
CVTRV513 EQU   CVTS01+121
CVTIOSPL EQU   CVTS01+120
CVTRV135 EQU   CVTRV127
CVTRV134 EQU   CVTRV127
CVTRV133 EQU   CVTRV127
CVTRV132 EQU   CVTRV127
CVTRV131 EQU   CVTRV127
CVTRV130 EQU   CVTRV127
CVTRV129 EQU   CVTRV127
CVTRV128 EQU   CVTRV127
CVTRV126 EQU   CVTRV118
CVTRV125 EQU   CVTRV118
CVTRV124 EQU   CVTRV118
CVTRV123 EQU   CVTRV118
CVTRV122 EQU   CVTRV118
CVTRV121 EQU   CVTRV118
CVTRV120 EQU   CVTRV118
CVTRV119 EQU   CVTRV118
CVTRV117 EQU   CVTRV109
CVTRV116 EQU   CVTRV109
CVTRV115 EQU   CVTRV109
CVTRV114 EQU   CVTRV109
CVTRV113 EQU   CVTRV109
CVTRV112 EQU   CVTRV109
CVTRV111 EQU   CVTRV109
CVTRV110 EQU   CVTRV109
CVTRV108 EQU   CVTRV100
CVTRV107 EQU   CVTRV100
CVTRV106 EQU   CVTRV100
CVTRV105 EQU   CVTRV100
CVTRV104 EQU   CVTRV100
CVTRV103 EQU   CVTRV100
CVTRV102 EQU   CVTRV100
CVTRV101 EQU   CVTRV100
CVTCSPIE EQU   CVTS01+112
CVTSMFEX EQU   CVTS01+108
CVTOLT0A EQU   CVTS01+104
CVTSRBRT EQU   CVTS01+100
CVTRSV82 EQU   CVTS01+98
CVTRSV81 EQU   CVTS01+96
CVTSYSWT EQU   CVTS01+92
CVTRV327 EQU   CVTS01+88
CVTRV326 EQU   CVTS01+84
CVTRV325 EQU   CVTS01+80
CVTRV324 EQU   CVTS01+76
CVT0VL01 EQU   CVTS01+72
CVTSHRVM EQU   CVTS01+68
CVTRV332 EQU   CVTS01+64
CVTTAS   EQU   CVTS01+60
CVTRSCN  EQU   CVTS01+56
CVTTRAC2 EQU   CVTS01+54
CVTTRACE EQU   CVTS01+52
CVTAPG   EQU   CVTS01+51
CVTSDTRC EQU   CVTCTLFG
CVTGTRCE EQU   CVTCTLFG
CVTNOMP  EQU   CVTCTLFG
CVTRSV79 EQU   CVTCTLFG
CVTDSTAT EQU   CVTCTLFG
CVTRSV78 EQU   CVTCTLFG
CVTRV333 EQU   CVTCTLFG
CVTRV323 EQU   CVTCTLFG
CVTSPVLK EQU   CVTS01+49
CVTRSV77 EQU   CVTS01+48
CVTRV331 EQU   CVTS01+44
CVTRV330 EQU   CVTS01+40
CVTRV329 EQU   CVTS01+36
CVTRV328 EQU   CVTS01+32
CVTRV322 EQU   CVTS01+28
CVTSLID  EQU   CVTSLIDA+1
CVTSYLK  EQU   CVTSLIDA
CVTRV321 EQU   CVTS01+20
CVTRV320 EQU   CVTS01+16
CVTLPDIR EQU   CVTLPDIA+1
CVTRSV69 EQU   CVTDIRST
CVTRSV68 EQU   CVTDIRST
CVTRSV67 EQU   CVTDIRST
CVTRSV66 EQU   CVTDIRST
CVTRSV65 EQU   CVTDIRST
CVTRSV64 EQU   CVTDIRST
CVTRSV63 EQU   CVTDIRST
CVTDICOM EQU   CVTDIRST
CVTPVTP  EQU   CVTS01+8
CVTLPDSR EQU   CVTS01+4
CVTRSVA2 EQU   CVTS01
CHLAST   EQU   CHAINS01+136
CHSPA    EQU   CHAINS01+135
CHUSERID EQU   CHCSYSO
CHJB     EQU   CHCSYSO
CHDUMP   EQU   CHCSYSO
CHQUE    EQU   CHCSYSO
CHHOLD   EQU   CHCSYSO
CHOUT    EQU   CHCSYSO
CHINN    EQU   CHCSYSO
CHALL    EQU   CHCSYSO
CHINC    EQU   CHAINS01+132
CHPEND   EQU   CHAINS01+128
CHARID   EQU   CHAINS01+127
CHCNID   EQU   CHAINS01+126
@NM00055 EQU   CHTRSTAT
CHTSL    EQU   CHTRSTAT
CHTS     EQU   CHTRSTAT
CHINITL  EQU   CHTRSTAT
CHINIT   EQU   CHTRSTAT
CHJOBSL  EQU   CHTRSTAT
CHJOBS   EQU   CHTRSTAT
CHDEF    EQU   CHTYPE
CHHIAR   EQU   CHTYPE
CHARSV29 EQU   CHTYPE
CHARSV28 EQU   CHTYPE
CHARSV27 EQU   CHTYPE
CHARSV26 EQU   CHTYPE
CHARSV25 EQU   CHTYPE
CHDSTAT  EQU   CHTYPE
CHBUF    EQU   CHAINS01
@NM00073 EQU   RUBAREA
PEDDED   EQU   PEDPART
@NM00070 EQU   TERMITA+14
ASCBNEXT EQU   TCBASCB+8
TCBPTR   EQU   TCBASCB+4
TCBNEXT  EQU   TCBASCB
CVTLEVL  EQU   CVTRELNO+2
CVTNUMB  EQU   CVTRELNO
CVTMDL   EQU   CVTFIX+250
@NM00069 EQU   CVTFIX+248
@NM00068 EQU   CVTFIX
CVTRV482 EQU   CVTXTNT2+128
CVTRV481 EQU   CVTXTNT2+124
CVTRV480 EQU   CVTXTNT2+120
CVTRV479 EQU   CVTXTNT2+118
CVTRV478 EQU   CVTXTNT2+117
CVTRV477 EQU   CVTXTNT2+116
CVTRV476 EQU   CVTXTNT2+115
CVTRV475 EQU   CVTXTNT2+114
CVTRV474 EQU   CVTRV466
CVTRV473 EQU   CVTRV466
CVTRV472 EQU   CVTRV466
CVTRV471 EQU   CVTRV466
CVTRV470 EQU   CVTRV466
CVTRV469 EQU   CVTRV466
CVTRV468 EQU   CVTRV466
CVTRV467 EQU   CVTRV466
CVTRV465 EQU   CVTRV457
CVTRV464 EQU   CVTRV457
CVTRV463 EQU   CVTRV457
CVTRV462 EQU   CVTRV457
CVTRV461 EQU   CVTRV457
CVTRV460 EQU   CVTRV457
CVTRV459 EQU   CVTRV457
CVTRV458 EQU   CVTRV457
CVTRV456 EQU   CVTXTNT2+108
CVTRV455 EQU   CVTXTNT2+104
CVTRV454 EQU   CVTXTNT2+100
CVTRV453 EQU   CVTXTNT2+96
CVTRV452 EQU   CVTXTNT2+94
CVTRV451 EQU   CVTXTNT2+92
CVTRV450 EQU   CVTXTNT2+90
CVTRV449 EQU   CVTXTNT2+88
CVTRV448 EQU   CVTXTNT2+87
CVTRV447 EQU   CVTXTNT2+86
CVTRV446 EQU   CVTRV438
CVTRV445 EQU   CVTRV438
CVTRV444 EQU   CVTRV438
CVTRV443 EQU   CVTRV438
CVTRV442 EQU   CVTRV438
CVTRV441 EQU   CVTRV438
CVTRV440 EQU   CVTRV438
CVTRV439 EQU   CVTRV438
CVTRV437 EQU   CVTRV429
CVTRV436 EQU   CVTRV429
CVTRV435 EQU   CVTRV429
CVTRV434 EQU   CVTRV429
CVTRV433 EQU   CVTRV429
CVTRV432 EQU   CVTRV429
CVTRV431 EQU   CVTRV429
CVTRV430 EQU   CVTRV429
CVTRV428 EQU   CVTXTNT2+80
CVTRV427 EQU   CVTXTNT2+76
CVTRV426 EQU   CVTXTNT2+72
CVTRV425 EQU   CVTXTNT2+68
CVTATACT EQU   CVTATCVT
CVTRV423 EQU   CVTXTNT2+62
CVTRV422 EQU   CVTXTNT2+60
CVTRV421 EQU   CVTXTNT2+58
CVTRV420 EQU   CVTXTNT2+56
CVTRV419 EQU   CVTXTNT2+55
CVTRV418 EQU   CVTXTNT2+54
CVTRV417 EQU   CVTRV409
CVTRV416 EQU   CVTRV409
CVTRV415 EQU   CVTRV409
CVTRV414 EQU   CVTRV409
CVTRV413 EQU   CVTRV409
CVTRV412 EQU   CVTRV409
CVTRV411 EQU   CVTRV409
CVTRV410 EQU   CVTRV409
CVTRV408 EQU   CVTRV400
CVTRV407 EQU   CVTRV400
CVTRV406 EQU   CVTRV400
CVTRV405 EQU   CVTRV400
CVTRV404 EQU   CVTRV400
CVTRV403 EQU   CVTRV400
CVTRV402 EQU   CVTRV400
CVTRV401 EQU   CVTRV400
CVTRSVA1 EQU   CVTXTNT2+48
CVTRSVA0 EQU   CVTXTNT2+44
CVTRSV99 EQU   CVTXTNT2+40
CVTRSV98 EQU   CVTXTNT2+36
CVTRSV97 EQU   CVTXTNT2+34
CVTRSV96 EQU   CVTXTNT2+32
CVTOLTEP EQU   CVTXTNT2+28
CVTQIDA  EQU   CVTQID+1
CVTRSV95 EQU   CVTQID
CVTRSV94 EQU   CVTXTNT2+20
CVTRSV93 EQU   CVTXTNT2+16
CVTRAP   EQU   CVTXTNT2+12
CVTDEBVR EQU   CVTXTNT2+8
CVTRSV91 EQU   CVTXTNT2+6
CVTRSV9H EQU   CVTRSV90
CVTRSV9G EQU   CVTRSV90
CVTRSV9F EQU   CVTRSV90
CVTRSV9E EQU   CVTRSV90
CVTRSV9D EQU   CVTRSV90
CVTRSV9C EQU   CVTRSV90
CVTRSV9B EQU   CVTRSV90
CVTRSV9A EQU   CVTRSV90
CVTNUCLS EQU   CVTXTNT2+4
CVTDSSVA EQU   CVTDSSV+1
CVTRSV89 EQU   CVTDSSV
CVTRSV88 EQU   CVTXTNT1+8
CVTRSV87 EQU   CVTXTNT1+4
CVTFACHN EQU   CVTXTNT1
CVTRV488 EQU   CVTMAP+412
CVTRV487 EQU   CVTMAP+408
CVTRV486 EQU   CVTMAP+404
CVTRV485 EQU   CVTMAP+400
CVTRV484 EQU   CVTMAP+396
CVTAUTH  EQU   CVTMAP+392
CVTATMCA EQU   CVTATMCT+1
CVTATMST EQU   CVTATMCT
CVTRSV61 EQU   CVTMAP+384
CVTVOLM1 EQU   CVTMAP+380
CVTSTOA  EQU   CVTMAP+376
CVTRSV58 EQU   CVTMAP+374
CVTRSV57 EQU   CVTMAP+372
CVTDDCE  EQU   CVTMAP+368
CVTPNWFR EQU   CVTMAP+364
CVTSMF   EQU   CVTMAP+360
CVTSULK  EQU   CVTMAP+358
CVTSLKO  EQU   CVTSYSK
CVTSLKP  EQU   CVTSYSK
CVTSLKQ  EQU   CVTSYSK
CVTSLKR  EQU   CVTSYSK
CVTRSV56 EQU   CVTSYSK
CVTRSV55 EQU   CVTSYSK
CVTRSV54 EQU   CVTSYSK
CVTRSV53 EQU   CVTSYSK
CVTRSV52 EQU   CVTA1F1
CVTRSV51 EQU   CVTA1F1
CVTRSV50 EQU   CVTA1F1
CVTRSV49 EQU   CVTA1F1
CVTRSV48 EQU   CVTA1F1
CVTRSV47 EQU   CVTA1F1
CVTSRSW  EQU   CVTA1F1
CVTPFSW  EQU   CVTA1F1
CVTPCVT  EQU   CVTMAP+352
CVTRSV46 EQU   CVTMAP+344
CVTRSV45 EQU   CVTMAP+340
CVTRSV44 EQU   CVTMAP+338
CVTRSV43 EQU   CVTMAP+336
CVTHJESA EQU   CVTHJES+1
CVTRSV42 EQU   CVTHJES
CVTEXT2A EQU   CVTEXT2+1
CVTRSV41 EQU   CVTEXT2
CVTAPFA  EQU   CVTAPF+1
CVTRSV40 EQU   CVTAPF
CVTINTLA EQU   CVTMAP+320
CVTERPV  EQU   CVTMAP+316
CVTEORM  EQU   CVTMAP+312
CVTMCHPR EQU   CVTMAP+308
CVTTZ    EQU   CVTMAP+304
CVTJEPS  EQU   CVTMAP+300
CVTJESCT EQU   CVTMAP+296
CVTMODE  EQU   CVTMAP+292
CVTPTRV  EQU   CVTMAP+288
CVTREAL  EQU   CVTMAP+284
CVTRSV39 EQU   CVTMAP+280
CVTRSV38 EQU   CVTMAP+276
CVTDMSRA EQU   CVTDMSR+1
CVTRSV37 EQU   CVTDMSR
CVTQMSGA EQU   CVTQMSG+1
CVTRSV36 EQU   CVTQMSG
CVTAMFF  EQU   CVTMAP+264
CVTPURGA EQU   CVTPURG+1
CVTRSV35 EQU   CVTPURG
CVTCBSP  EQU   CVTMAP+256
CVTATERA EQU   CVTATER+1
CVTSYST  EQU   CVTATER
CVTTAT   EQU   CVTTATA+1
CVTTSKS  EQU   CVTTATA
CVTAQAVB EQU   CVTAQAVT+1
CVTRSV34 EQU   CVTTCMFG
CVTRSV33 EQU   CVTTCMFG
CVTRSV32 EQU   CVTTCMFG
CVTRSV31 EQU   CVTTCMFG
CVTRSV30 EQU   CVTTCMFG
CVTRSV29 EQU   CVTTCMFG
CVTRSV28 EQU   CVTTCMFG
CVTTCRDY EQU   CVTTCMFG
CVTGTFA  EQU   CVTGTF+1
CVTRSV27 EQU   CVTGTFST
CVTRNIO  EQU   CVTGTFST
CVTRV319 EQU   CVTUSR
CVTRV318 EQU   CVTFORM
CVTRV317 EQU   CVTTMODE
CVTRV316 EQU   CVTSTATE
CVTRV315 EQU   CVTGTFS
CVTGTFAV EQU   CVTGTFS
CVT0SCR1 EQU   CVTMAP+232
CVTTSCVB EQU   CVTTSCVT+1
CVTRSV25 EQU   CVTTSFLG
CVTRSV24 EQU   CVTTSFLG
CVTRSV23 EQU   CVTTSFLG
CVTRSV22 EQU   CVTTSFLG
CVTRSV21 EQU   CVTTSFLG
CVTRSV20 EQU   CVTTSFLG
CVTRSV19 EQU   CVTTSFLG
CVTTSRDY EQU   CVTTSFLG
CVTRMS   EQU   CVTMAP+224
CVTPATCH EQU   CVTMAP+220
CVTTSCE  EQU   CVTMAP+216
CVTLNKSC EQU   CVTMAP+214
CVTQABST EQU   CVTMAP+212
CVTMDLDS EQU   CVTMAP+208
CVTUSER  EQU   CVTMAP+204
CVTABEND EQU   CVTMAP+200
CVTSMCA  EQU   CVTMAP+196
CVTRSV18 EQU   CVTMAP+192
CVTQLPAQ EQU   CVTMAP+188
CVTQCDSR EQU   CVTMAP+184
CVTRSV17 EQU   CVTOPTB
CVTRSV16 EQU   CVTOPTB
CVTFP    EQU   CVTOPTB
CVTAPTHR EQU   CVTOPTB
CVTNLOG  EQU   CVTOPTB
CVTTOD   EQU   CVTOPTB
CVTCTIMS EQU   CVTOPTB
CVTPROT  EQU   CVTOPTB
CVTXPFP  EQU   CVTOPTA
CVTASCII EQU   CVTOPTA
CVTRSV13 EQU   CVTOPTA
CVTRSV12 EQU   CVTOPTA
CVTNIP   EQU   CVTOPTA
CVTDDR   EQU   CVTOPTA
CVTAPR   EQU   CVTOPTA
CVTCCH   EQU   CVTOPTA
CVTSNCTR EQU   CVTMAP+180
CVTQMWR  EQU   CVTMAP+176
CVTQOCR  EQU   CVTMAP+172
CVT1EF00 EQU   CVTMAP+168
CVTMZ00  EQU   CVTMAP+164
CVTHEAD  EQU   CVTMAP+160
CVTRSV11 EQU   CVTMAP+156
CVT0PT01 EQU   CVTMAP+152
CVTMSER  EQU   CVTMAP+148
CVTIERLC EQU   CVTMAP+144
CVTILCH  EQU   CVTMAP+140
CVT0DS   EQU   CVTMAP+136
CVTFBOSV EQU   CVTMAP+132
CVTNUCB  EQU   CVTMAP+128
CVTIXAVL EQU   CVTMAP+124
CVTIOQET EQU   CVTMAP+120
CVTDCBA  EQU   CVTMAP+117
CVTMVS2  EQU   CVTDCB
CVT6DAT  EQU   CVTDCB
CVT4MPS  EQU   CVTDCB
CVTRSV09 EQU   CVTDCB
CVT4MS1  EQU   CVTDCB
CVT2SPS  EQU   CVTDCB
CVT1SSS  EQU   CVTDCB
CVTRSV08 EQU   CVTDCB
CVTSTB   EQU   CVTMAP+112
CVTQTD00 EQU   CVTMAP+108
CVTQTE00 EQU   CVTMAP+104
CVTCUCB  EQU   CVTMAP+100
CVTSJQ   EQU   CVTMAP+96
CVTPBLDL EQU   CVTMAP+92
CVTTPC   EQU   CVTMAP+88
CVTSVDCB EQU   CVTMAP+84
CVTBRET  EQU   CVTMAP+82
CVTEXIT  EQU   CVTMAP+80
CVT0FN00 EQU   CVTMAP+76
CVTDARA  EQU   CVTDAR+1
CVTRSV07 EQU   CVTFLGS1
CVTRSV06 EQU   CVTFLGS1
CVTRSV05 EQU   CVTFLGS1
CVTRSV04 EQU   CVTFLGS1
CVTRSV03 EQU   CVTFLGS1
CVTRSV02 EQU   CVTFLGS1
CVTRSV01 EQU   CVTFLGS1
CVTDMPLK EQU   CVTFLGS1
CVTXITP  EQU   CVTMAP+68
CVTZDTAB EQU   CVTMAP+64
CVTMSLT  EQU   CVTMAP+60
CVTDATE  EQU   CVTMAP+56
CVTBTERM EQU   CVTMAP+52
CVTSYSAD EQU   CVTMAP+48
CVTXTLER EQU   CVTMAP+44
CVTILK2  EQU   CVTMAP+40
CVTILK1  EQU   CVTMAP+36
CVTPRLTV EQU   CVTMAP+32
CVTPCNVT EQU   CVTMAP+28
CVT0VL00 EQU   CVTMAP+24
CVTXAPG  EQU   CVTMAP+20
CVTBUF   EQU   CVTMAP+16
CVTJOB   EQU   CVTMAP+12
CVTLINK  EQU   CVTMAP+8
CVT0EF00 EQU   CVTMAP+4
CVT      EQU   CVTMAP
JSXLDATA EQU   JSXLLDEF+2
@NM00067 EQU   JSXLID
JSXPRFRE EQU   JSXLID
JSXPTINI EQU   JSXLID
JSXPRINI EQU   JSXLID
JSXPOST  EQU   JSXLID
JSXLLINK EQU   JSXLLDEF
JSXLCOMM EQU   JSXLHDR+4
JSXLLGTH EQU   JSXLHDR
JSOLTPRO EQU   JSOLTPR+16
JSOLTSTE EQU   JSOLTPR+8
JSOLTJOB EQU   JSOLTPR
JSOLDEST EQU   IEFVJSOL+8
@NM00066 EQU   IEFVJSOL+4
@NM00065 EQU   JSOLOPTS
JSOLENQU EQU   JSOLOPTS
@NM00064 EQU   JSOLOPTS
JSOLRCVY EQU   JSOLOPTS
@NM00063 EQU   JSOLFLAG
JSOLSMS1 EQU   JSOLFLAG
@NM00062 EQU   JSOLFLAG
JSOLNSYS EQU   JSOLFLAG
JSOLLGTH EQU   IEFVJSOL
JCLSSEQ  EQU   JCLSCARD+72
JCLSCNTN EQU   JCLSCARD+71
JCLSBODY EQU   JCLSCARD+15
JCLSTYPE EQU   JCLSCARD+10
JCLSLABL EQU   JCLSCARD+2
JCLSLASH EQU   JCLSCARD
@NM00061 EQU   JCLSHDR+4
JSELEOL  EQU   JSELASCB
JSELCSCB EQU   JSEL+8
@NM00060 EQU   JSEL
JSWASIBP EQU   JSWA+36
@NM00059 EQU   @NM00058+1
JSWASWSP EQU   @NM00058
JSWAPARM EQU   JSWA+28
JSWAB601 EQU   JSWA+24
JSWASOBP EQU   JSWA+20
JSWAIELP EQU   JSWA+16
JSWAJSCB EQU   JSWA+12
JSWATIOT EQU   JSWA+8
@NM00057 EQU   JSWAJSSR
JSWASSOB EQU   JSWAJSSR
JSWAIEL  EQU   JSWAJSSR
JSWASWA  EQU   JSWAJSSR
@NM00056 EQU   JSWAOPT
JSWASMS1 EQU   JSWAOPT
JSWASUBS EQU   JSWAOPT
JSWALGTH EQU   JSWA
CHARSV16 EQU   CHSHORT+108
CHARSV15 EQU   CHSHORT+104
CHJSCBVS EQU   CHSHORT+100
CHUSCVS  EQU   CHSHORT+96
@NM00054 EQU   CHSHORT+92
@NM00053 EQU   CHSHORT+88
CHSQA    EQU   CHSHORT+52
CHQPA    EQU   CHSHORT+16
CHJCL    EQU   CHSHORT+12
CHSPC    EQU   CHSHORT+8
CHSPB    EQU   CHSHORT+4
CHTCB    EQU   CHSHORT+1
CHARSV23 EQU   CHSWT
CHARSV22 EQU   CHSWT
CHARSV21 EQU   CHSWT
CHAC     EQU   CHSWT
CHPSF    EQU   CHSWT
CHPSD    EQU   CHSWT
CHJCT    EQU   CHSWT
CHARSV20 EQU   CHSWT
CHCECB   EQU   CHASM+20
CHECB    EQU   CHASM+16
CHRGNAD  EQU   CHASM+12
CHARSV18 EQU   CHRGNSZ+1
CHRPRTY  EQU   CHRGNSZ
@NM00052 EQU   CHCIBP
CHEND    EQU   CHCIBP
CHECBP   EQU   CHASM
CHDER    EQU   CHAIN+36
CHARSV10 EQU   CHACT1
CHARSV09 EQU   CHACT1
CHARSV08 EQU   CHACT1
CHARSV07 EQU   CHACT1
CHARSV06 EQU   CHACT1
CHARSV05 EQU   CHACT1
CHARSV04 EQU   CHACT1
CHRDWTR  EQU   CHACT1
CHARSV30 EQU   CHAIN+34
CHQID    EQU   CHAIN+32
CHASID   EQU   CHTJID
CHUCMP   EQU   CHAIN+29
CHTRKID  EQU   CHPKE
CHCIBCTR EQU   CHAIN+27
CHUNIT   EQU   CHAIN+24
CHPARM   EQU   CHKEY
CHIFY    EQU   CHACT
CHAIFX   EQU   CHACT
CHCLD    EQU   CHACT
CHCL     EQU   CHACT
CHDSI    EQU   CHACT
CHDISC   EQU   CHACT
CHTERM   EQU   CHACT
CHSWAP   EQU   CHACT
CHABTERM EQU   CHSTS
CHFC     EQU   CHSTS
CHDL     EQU   CHSTS
CHAD     EQU   CHSTS
CHQSPC   EQU   CHSTS
CHSOUT   EQU   CHSTS
CHSYS    EQU   CHSTS
CHAP     EQU   CHSTS
CHSZE    EQU   CHFLG+1
CHPTR    EQU   CHAIN
@NM00051 EQU   STAELST+12
@NM00050 EQU   @NM00048+1
@NM00049 EQU   STAEFLG
SUPOOL   EQU   PARMINFO+1
SUBNUM   EQU   PARMINFO
SAVEASCB EQU   JSWAADDR
ASCBEND  EQU   ASCB+208
ASCBSRBT EQU   ASCB+200
ASCBSWTL EQU   ASCB+196
ASCBRS14 EQU   ASCB+195
ASCBSMCT EQU   ASCB+194
ASCBRS12 EQU   ASCB+192
ASCBPCTT EQU   ASCB+188
ASCBVGTT EQU   ASCB+184
ASCBLGCB EQU   ASCB+180
ASCBJBNS EQU   ASCB+176
ASCBJBNI EQU   ASCB+172
ASCBMCC  EQU   ASCB+168
ASCBRTWA EQU   ASCB+164
ASCBIQEA EQU   ASCB+160
ASCBXMPQ EQU   ASCB+156
ASCBRS01 EQU   ASCB+154
ASCBFMCT EQU   ASCB+152
ASCBOUXB EQU   ASCB+148
ASCBOUCB EQU   ASCB+144
ASCBMECB EQU   ASCB+140
ASCBQECB EQU   ASCB+136
ASCBCMSB EQU   ASCB+132
ASCBCMSF EQU   ASCB+128
ASCBTCBS EQU   ASCB+124
ASCBNVSC EQU   ASCB+122
ASCBVSC  EQU   ASCB+120
ASCBSRBS EQU   ASCB+118
ASCBSSRB EQU   ASCB+116
ASCBRV06 EQU   ASCBFLG2
ASCBRV05 EQU   ASCBFLG2
ASCBRV04 EQU   ASCBFLG2
ASCBSNQS EQU   ASCBFLG2
ASCBS2S  EQU   ASCBFLG2
ASCBCEXT EQU   ASCBFLG2
ASCBPXMT EQU   ASCBFLG2
ASCBXMPT EQU   ASCBFLG2
ASCBRF07 EQU   ASCBDSP1
ASCBRF06 EQU   ASCBDSP1
ASCBRF05 EQU   ASCBDSP1
ASCBRF04 EQU   ASCBDSP1
ASCBRF03 EQU   ASCBDSP1
ASCBRF02 EQU   ASCBDSP1
ASCBFAIL EQU   ASCBDSP1
ASCBNOQ  EQU   ASCBDSP1
ASCBSWCT EQU   ASCB+112
ASCBASXB EQU   ASCB+108
ASCBTMCH EQU   ASCB+104
ASCBNSWP EQU   ASCBFLG1
ASCBTYP1 EQU   ASCBFLG1
ASCBSTND EQU   ASCBFLG1
ASCBABNT EQU   ASCBFLG1
ASCBTERM EQU   ASCBFLG1
ASCBS3S  EQU   ASCBFLG1
ASCBCMSH EQU   ASCBFLG1
ASCBTOFF EQU   ASCBFLG1
ASCBRF01 EQU   ASCBRCTF
ASCBTMLW EQU   ASCBRCTF
ASCBOUT  EQU   ASCBRCTF
ASCBWAIT EQU   ASCBRCTF
ASCBFND  EQU   ASCBRCTF
ASCBFQU  EQU   ASCBRCTF
ASCBFRS  EQU   ASCBRCTF
ASCBTMNO EQU   ASCBRCTF
ASCBAFFN EQU   ASCBFW1
ASCBDUMP EQU   ASCB+96
ASCBQSVC EQU   ASCB+92
ASCBUBET EQU   ASCB+88
ASCBECB  EQU   ASCB+84
ASCBJSTL EQU   ASCB+80
ASCBEWST EQU   ASCB+72
ASCBEJST EQU   ASCB+64
ASCBTSB  EQU   ASCB+60
ASCBRSM  EQU   ASCB+52
ASCBLDA  EQU   ASCB+48
ASCBSTOR EQU   ASCB+44
ASCBDP   EQU   ASCB+43
ASCBRV07 EQU   ASCB+42
ASCBIOSM EQU   ASCB+40
ASCBSEQN EQU   ASCB+38
ASCBASID EQU   ASCB+36
ASCBCPUS EQU   ASCB+32
ASCBSPL  EQU   ASCB+28
ASCBLSLQ EQU   ASCB+24
ASCBFSLQ EQU   ASCB+20
ASCBIOSP EQU   ASCB+16
ASCBLOCK EQU   ASCB+12
ASCBBWDP EQU   ASCB+8
ASCBFWDP EQU   ASCB+4
ASCBASCB EQU   ASCB
ASCBEGIN EQU   ASCB
@NM00047 EQU   SDWA+512
SDWAVRA  EQU   SDWARA+4
SDWAURAL EQU   SDWARA+3
@NM00046 EQU   SDWADPVA
SDWAEBC  EQU   SDWADPVA
SDWAHEX  EQU   SDWADPVA
SDWAVRAL EQU   SDWARA
@NM00045 EQU   SDWA+396
SDWACOMP EQU   SDWA+392
SDWARCPL EQU   SDWA+364
@NM00044 EQU   SDWADPSA+32
SDWATO4  EQU   SDWADPSL+28
SDWAFRM4 EQU   SDWADPSL+24
SDWATO3  EQU   SDWADPSL+20
SDWAFRM3 EQU   SDWADPSL+16
SDWATO2  EQU   SDWADPSL+12
SDWAFRM2 EQU   SDWADPSL+8
SDWATO1  EQU   SDWADPSL+4
SDWAFRM1 EQU   SDWADPSL
@NM00043 EQU   SDWADDAT+3
@NM00042 EQU   SDWAPDAT
SDWAUSPL EQU   SDWAPDAT
SDWADPSW EQU   SDWAPDAT
SDWATJPA EQU   SDWAPDAT
SDWATLPA EQU   SDWAPDAT
SDWADREG EQU   SDWAPDAT
SDWADSAH EQU   SDWAPDAT
SDWADSAS EQU   SDWAPDAT
@NM00041 EQU   SDWADDAT+1
@NM00040 EQU   SDWASDAT
SDWAQQS  EQU   SDWASDAT
SDWACBS  EQU   SDWASDAT
SDWAGTF  EQU   SDWASDAT
SDWASWA  EQU   SDWASDAT
SDWALSQA EQU   SDWASDAT
SDWASQA  EQU   SDWASDAT
SDWANUC  EQU   SDWASDAT
@NM00039 EQU   SDWADUMP+2
@NM00038 EQU   SDWADPFS
SDWASLST EQU   SDWADPFS
@NM00037 EQU   SDWADPFS
SDWADLST EQU   SDWADPFS
SDWADPT  EQU   SDWADPFS
SDWADPID EQU   SDWADUMP
SDWADPLA EQU   SDWA+316
SDWAREXN EQU   SDWARECP+16
SDWACSCT EQU   SDWARECP+8
SDWAMODN EQU   SDWARECP
@NM00036 EQU   SDWALKWA+32
SDWATALW EQU   SDWALKWS+28
SDWATDLW EQU   SDWALKWS+24
SDWATNLW EQU   SDWALKWS+20
SDWAAPLW EQU   SDWALKWS+16
SDWAIPLW EQU   SDWALKWS+12
SDWAILLW EQU   SDWALKWS+8
SDWAIULW EQU   SDWALKWS+4
SDWAICLW EQU   SDWALKWS
SDWAFLLK EQU   SDWAACF4
SDWACMS  EQU   SDWAACF4
SDWAOPTM EQU   SDWAACF4
SDWATADB EQU   SDWAACF4
SDWATDNB EQU   SDWAACF4
SDWATNCB EQU   SDWAACF4
SDWAILCH EQU   SDWAACF4
SDWAIUCB EQU   SDWAACF4
SDWAICAT EQU   SDWAACF3
SDWAIPRG EQU   SDWAACF3
SDWASALL EQU   SDWAACF3
SDWAASMP EQU   SDWAACF3
SDWADISP EQU   SDWAACF3
@NM00035 EQU   SDWAACF3
@NM00034 EQU   SDWAACF2
@NM00033 EQU   SDWAACF2
SDWASPIN EQU   SDWAACF2
@NM00032 EQU   SDWAACF2
SDWACPUA EQU   SDWA+248
SDWARECA EQU   SDWA+244
@NM00031 EQU   SDWA+239
@NM00030 EQU   SDWAIOFS
SDWANIOP EQU   SDWAIOFS
SDWANOIO EQU   SDWAIOFS
SDWAIOHT EQU   SDWAIOFS
SDWAIOQR EQU   SDWAIOFS
SDWAFMID EQU   SDWA+236
@NM00029 EQU   SDWAERRD
SDWAMCIV EQU   SDWAERRD
SDWARPIV EQU   SDWAERRD
SDWAMABD EQU   SDWAERRD
SDWACTS  EQU   SDWAERRD
SDWASTAE EQU   SDWAERRD
SDWANRBE EQU   SDWAERRD
SDWACLUP EQU   SDWAERRD
@NM00028 EQU   SDWAERRC
SDWAEAS  EQU   SDWAERRC
SDWAIRB  EQU   SDWAERRC
SDWASTAI EQU   SDWAERRC
SDWASTAF EQU   SDWAERRC
SDWASRBM EQU   SDWAERRB
SDWALDIS EQU   SDWAERRB
SDWAENRB EQU   SDWAERRB
SDWATYP1 EQU   SDWAERRB
@NM00027 EQU   SDWAERRB
SDWAPGIO EQU   SDWAERRA
SDWATEXC EQU   SDWAERRA
SDWASVCE EQU   SDWAERRA
SDWAABTM EQU   SDWAERRA
SDWASVCD EQU   SDWAERRA
SDWARKEY EQU   SDWAERRA
SDWAPCHK EQU   SDWAERRA
SDWAMCHK EQU   SDWAERRA
SDWATIME EQU   SDWAMCH+20
SDWARFSA EQU   SDWAMCH+16
@NM00026 EQU   SDWAMCH+14
SDWAVEQR EQU   SDWARSR2
SDWAPGFX EQU   SDWARSR2
SDWAFLSQ EQU   SDWARSR2
SDWAFSQA EQU   SDWARSR2
SDWANUCL EQU   SDWARSR2
SDWASPER EQU   SDWARSR2
SDWAINTC EQU   SDWARSR2
SDWAOFLN EQU   SDWARSR2
SDWACHNG EQU   SDWARSR1
SDWAMSER EQU   SDWARSR1
@NM00025 EQU   SDWARSR1
SDWACPID EQU   SDWAMCH+10
SDWATERR EQU   SDWAMCHD
SDWAFPRX EQU   SDWAMCHD
SDWAINSF EQU   SDWAMCHD
SDWAACR  EQU   SDWAMCHD
SDWASCK  EQU   SDWAMCHD
SDWAPSWU EQU   SDWAMCHD
SDWAREGU EQU   SDWAMCHD
SDWASKYF EQU   SDWAMCHD
@NM00024 EQU   SDWAMCHS
SDWARSRF EQU   SDWAMCHS
SDWARSRC EQU   SDWAMCHS
SDWAINVP EQU   SDWAMCHS
SDWATSVL EQU   SDWAMCHS
SDWARCDF EQU   SDWAMCHS
SDWASRVL EQU   SDWAMCHS
SDWASCKE EQU   SDWASTCK+4
SDWASCKB EQU   SDWASTCK
SDWALNTH EQU   SDWAIDNT+1
SDWASPID EQU   SDWAIDNT
SDWASR15 EQU   SDWASRSV+60
SDWASR14 EQU   SDWASRSV+56
SDWASR13 EQU   SDWASRSV+52
SDWASR12 EQU   SDWASRSV+48
SDWASR11 EQU   SDWASRSV+44
SDWASR10 EQU   SDWASRSV+40
SDWASR09 EQU   SDWASRSV+36
SDWASR08 EQU   SDWASRSV+32
SDWASR07 EQU   SDWASRSV+28
SDWASR06 EQU   SDWASRSV+24
SDWASR05 EQU   SDWASRSV+20
SDWASR04 EQU   SDWASRSV+16
SDWASR03 EQU   SDWASRSV+12
SDWASR02 EQU   SDWASRSV+8
SDWASR01 EQU   SDWASRSV+4
SDWASR00 EQU   SDWASRSV
SDWATRN2 EQU   SDWAAEC2+4
SDWAIPC2 EQU   SDWAICD2
SDWAIMC2 EQU   SDWAICD2
SDWAIPR2 EQU   SDWAICD2
@NM00023 EQU   SDWAINC2
@NM00022 EQU   SDWAILC2
SDWAIL2  EQU   SDWAILC2
@NM00021 EQU   SDWAILC2
@NM00020 EQU   SDWAAEC2
SDWAADD2 EQU   SDWANXT2+1
@NM00019 EQU   SDWANXT2
@NM00018 EQU   SDWAEC2+3
SDWASGN2 EQU   SDWAINT2
SDWAEXP2 EQU   SDWAINT2
SDWADEC2 EQU   SDWAINT2
SDWAFPO2 EQU   SDWAINT2
SDWACC2  EQU   SDWAINT2
@NM00017 EQU   SDWAINT2
SDWAPGM2 EQU   SDWAMWP2
SDWAWAT2 EQU   SDWAMWP2
SDWAMCK2 EQU   SDWAMWP2
SDWAECT2 EQU   SDWAMWP2
SDWAKEY2 EQU   SDWAMWP2
SDWAEXT2 EQU   SDWAEMK2
SDWAIO2  EQU   SDWAEMK2
SDWATRM2 EQU   SDWAEMK2
@NM00016 EQU   SDWAEMK2
SDWAPER2 EQU   SDWAEMK2
@NM00015 EQU   SDWAEMK2
SDWATRAN EQU   SDWAAEC1+4
SDWAIPC1 EQU   SDWAICD1
SDWAIMC1 EQU   SDWAICD1
SDWAIPR1 EQU   SDWAICD1
@NM00014 EQU   SDWAINC1
@NM00013 EQU   SDWAILC1
SDWAIL1  EQU   SDWAILC1
@NM00012 EQU   SDWAILC1
@NM00011 EQU   SDWAAEC1
SDWAADD1 EQU   SDWANXT1+1
@NM00010 EQU   SDWANXT1
@NM00009 EQU   SDWAEC1+3
SDWASGN1 EQU   SDWAINT1
SDWAEXP1 EQU   SDWAINT1
SDWADEC1 EQU   SDWAINT1
SDWAFPO1 EQU   SDWAINT1
SDWACC1  EQU   SDWAINT1
@NM00008 EQU   SDWAINT1
SDWAPGM1 EQU   SDWAMWP1
SDWAWAT1 EQU   SDWAMWP1
SDWAMCK1 EQU   SDWAMWP1
SDWAECT1 EQU   SDWAMWP1
SDWAKEY1 EQU   SDWAMWP1
SDWAEXT1 EQU   SDWAEMK1
SDWAIO1  EQU   SDWAEMK1
SDWATRM1 EQU   SDWAEMK1
@NM00007 EQU   SDWAEMK1
SDWAPER1 EQU   SDWAEMK1
@NM00006 EQU   SDWAEMK1
SDWAIOBR EQU   SDWA+100
SDWAEPA  EQU   SDWA+96
@NM00005 EQU   SDWANAME+4
SDWARBAD EQU   SDWANAME
SDWAGR15 EQU   SDWAGRSV+60
SDWAGR14 EQU   SDWAGRSV+56
SDWAGR13 EQU   SDWAGRSV+52
SDWAGR12 EQU   SDWAGRSV+48
SDWAGR11 EQU   SDWAGRSV+44
SDWAGR10 EQU   SDWAGRSV+40
SDWAGR09 EQU   SDWAGRSV+36
SDWAGR08 EQU   SDWAGRSV+32
SDWAGR07 EQU   SDWAGRSV+28
SDWAGR06 EQU   SDWAGRSV+24
SDWAGR05 EQU   SDWAGRSV+20
SDWAGR04 EQU   SDWAGRSV+16
SDWAGR03 EQU   SDWAGRSV+12
SDWAGR02 EQU   SDWAGRSV+8
SDWAGR01 EQU   SDWAGRSV+4
SDWAGR00 EQU   SDWAGRSV
SDWANXTP EQU   SDWACTL2+5
SDWASGP  EQU   SDWAPMKP
SDWAEUP  EQU   SDWAPMKP
SDWADOP  EQU   SDWAPMKP
SDWAFPP  EQU   SDWAPMKP
SDWACCP  EQU   SDWAPMKP
SDWAILP  EQU   SDWAPMKP
SDWAINTP EQU   SDWACTL2+2
SDWASPVP EQU   SDWAMWPP
SDWAWATP EQU   SDWAMWPP
SDWAMCKP EQU   SDWAMWPP
@NM00004 EQU   SDWAMWPP
SDWAKEYP EQU   SDWAMWPP
SDWAEXTP EQU   SDWACMKP
SDWAIOP  EQU   SDWACMKP
SDWANXTA EQU   SDWACTL1+5
SDWASGA  EQU   SDWAPMKA
SDWAEUA  EQU   SDWAPMKA
SDWADOA  EQU   SDWAPMKA
SDWAFPA  EQU   SDWAPMKA
SDWACCA  EQU   SDWAPMKA
SDWAILA  EQU   SDWAPMKA
SDWAINTA EQU   SDWACTL1+2
SDWASPVA EQU   SDWAMWPA
SDWAWATA EQU   SDWAMWPA
SDWAMCKA EQU   SDWAMWPA
@NM00003 EQU   SDWAMWPA
SDWAKEYA EQU   SDWAMWPA
SDWAEXTA EQU   SDWACMKA
SDWAIOA  EQU   SDWACMKA
@NM00002 EQU   SDWACMPF
SDWASTCC EQU   SDWACMPF
@NM00001 EQU   SDWACMPF
SDWASTEP EQU   SDWACMPF
SDWAREQ  EQU   SDWACMPF
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@ENDDATA EQU   *
         END   IEESB670
