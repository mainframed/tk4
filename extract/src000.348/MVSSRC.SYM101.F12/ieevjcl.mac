         TITLE 'IEEVJCL--JOB CONTROL LANGUAGE SET BUILD'
***********************************************************************
*
* MODULE NAME= IEEVJCL
*
* DESCRIPTIVE NAME= JOB CONTROL LANGUAGE BUILD
*
* COPYRIGHT= N/A
*
* STATUS= OS/VS2 RELEASE 037                                   @ZA30542
*
* FUNCTION= 1. TO CONVERT JCL INTO COMPATIBLE JCLS TEXT
*           2. GET AND INITIALIZE JOB SCHEDULING MACRO'S
*              (IEFVJSEL,IEFVJSOL,IEFVJSXL)
*
*   OPERATION= 1) ON ENTRY IEEVJCL WILL BUILD JCLS FROM THE
*                 JCL PASSED IN THE SDT.  EACH JCLS WILL BE
*                 88 BYTES LONG AND LOOK LIKE:
*
*                *********************************************
*                *NEXT*0000* //JCL TEXT                      *
*                *********************************************
*
*                .ISSUE FREEMAIN FOR STC INIT PARM AREA          Y02669
*                .GET 88 BYTES FOR JOB CARD
*                .MOVE JOB CARD IMAGE INTO JCLS
*                .STORE PTR TO GOTTEN AREA IN CSCB
*                 THIS IS THE PTR TO THE JCLS CHAIN
*                .SAVE THE PTR FOR CHAINING
*                .GET 88 BYTES FOR EXEC JCL
*                .CHAIN W/LAST JCLS AND SAVE NEW PTR
*                 FOR FURTHER CHAINING
*                .MOVE EXEC CARD IMAGE INTO JCLS
*                .CHECK FOR EXEC CARD CONTINUATION
*                 IF FOUND
*                 -SET CONTINUATION FLAG
*                 -GET 88 BYTES FOR CONTINUATION
*                 -CHAIN W/LAST JCLS
*                 -MOVE CONTINUATION IMAGE INTO JCLS
*                .CHECK FOR DD JCL
*                 IF FOUND
*                 -GET 88 BYTES FOR DD JCL
*                 -CHAIN W/LAST JCLS
*                 -MOVE DD JCL IMAGE INTO JCLS
*                .CHECK FOR DD JCL CONTINUATION
*                 IF FOUND
*                 -SET CONTINUATION FLAG
*                 -GET 88 BYTES FOR CONTINUATION
*                 -CHAIN W/LAST JCLS
*                 -MOVE CONTINUATION IMAGE INTO JCLS
*              2) AFTER THE JCLS IS BUILT IEEVJCL WILL GET
*                 AND INITIALIZE THE JOB SCHEDULING MACRO'S
*                .ISSUE GETMAIN FOR JOB SCHEDULING ENTRANCE
*                 LIST (JSEL) AND JOB SCHEDULING EXIT LIST
*                 (JSXL) FROM SP 253 AND INIT.
*                 -SET ADDR OF JSXL IN JSEL
*                 -SET PTR TO JCLS IN JSEL
*                 -SET PTR TO CSCB IN JSEL
*                 -SET PTR TO ASCB IN JSEL                       Y02669
*                .ISSUE GETMAIN FOR JOB SCHEDULING OPTION
*                 LIST (JSOL) FROM SP 253 AND INIT.
*                 -SET THE LENGTH OF JSOL IN JSOLLGTH
*                 -SET ADDR OF JSOL IN JSEL
*                 -MOVE IN JOB NAME
*                 -MOVE IN EXEC NAME
*                 -MOVE IN PROC NAME
*                 -IF MOUNT COMMAND SET BYPASS RACINIT        @Z40RPSQ
*                .ISSUE FREEMAIN FOR SDT
*                .SET R1 POINTING TO JSEL
*                .XCTL TO IEESB605                              Y02669
*
* NOTES
*
* CHARACTER CODE DEPENDENCIES= NONE
*
*   DEPENDENCIES= NONE
*
*   RESTRICTIONS= NONE
*
*   REGISTER CONVENTIONS= R0=REG0,R1=REG1...ETC
*
*   PATCH-LABEL=PATCH
*
* MODULE TYPE= CSECT
*
*   PROCESSOR= ASSEM
*
*   MODULE SIZE= 1C8 HEX
*
*   ATTRIBUTES= LIST,NCAL,XREF,REFR,RENT,REUS
*
* ENTRY POINT= IEEVJCL
*
*   PURPOSE= SAME AS FUNCTION
*
*   LINKAGE= VIA XCTL
*
*   INPUT DATA= R1 POINTS TO STC PARM AREA, THE 2ND WORD OF THE  Y02669
*               PARM AREA POINTS TO THE ASCB,THE 3RD WORD POINTS Y02669
*               TO THE SDT.                                      Y02669
*
*   REGISTERS SAVED= NONE
*
*   REGISTER CONTENTS DURING PROCESSING= N/A
*
*   REGISTERS RESTORED= NONE
*
* EXIT NORMAL= IEESB605
*
*   CONDITIONS=  ALWAYS
*
*   OUTPUT DATA= 1) R1 POINTS TO JSEL
*                2) THE JSEL HAS POINTER TO JCLS
*                3) JCLS CHAINED TOGETHER
*                4) THE JSEL HAS POINTER TO JSXL
*                5) A JSOL
*
* EXIT ERROR= NONE
*
*   CONDITIONS= NONE
*
*   OUTPUT DATA= NONE
*
*   RETURN CODE= NONE
*
* EXTERNAL REFERENCES
*
*   ROUTINES= IEESB605                                           Y02669
*
*   DATA AREAS= NONE
*
*   CONTROL BLOCKS= SDT,CVT,ASCB,CSCB,JSEL,JSOL,JSXL            Y02669
*
*   TABLE= NONE
*
*   MACRO= GETMAIN,FREEMAIN,XCTL
*
*   ENQUEUE RESOURCES= N/A
*
*   CHANGE LEVEL= Y02669, @Z40RPSQ, ZA30542
*
* MESSAGES= NONE
*
***********************************************************************
         TITLE 'JOB CONTROL LANGUAGE SET'
VJCLS    DSECT
         DS    0D
VJCLSHD  DS    1F                 POINTER TO NEXT JCLS.
         DS    1F                 SPARE.
VJCLSIM  DS    15C                IMAGE.
VJCLS16  DS    56C                COLUMN 16.
VJCLSCN  DS    1C                 CONTINUE COLUMN.
         DS    8C                 TO MAKE 80.
         TITLE 'ADDRESS SPACE CONTROL BLOCK'
         IHAASCB
         TITLE 'STC INTERNAL PARM AREA MAPPING'
         IEEZB800
         TITLE 'COMMAND SCHEDULING CONTROL BLOCKS'
IEECHAIN DSECT
         IEECHAIN
         TITLE 'START DESCRIPTER TABLE'
SDTVTR1  DSECT
         IEESDT
JCVT     DSECT                                                    20032
         CVT
         TITLE 'JCL BUILD ROUTINE'
IEEVJCL  CSECT
         SPACE 2
* THIS APAR SUPPORTS MERGE OF SU 4 CODE TO REL. 037 BASE       @ZA30542
***********************************************************************
*
*  REGISTER ASSIGNMENTS
*
***********************************************************************
R0       EQU   0
R1       EQU   1                  PTS TO CSCB -
R2       EQU   2
R3       EQU   3                  WORK REGISTER.
R4       EQU   4                  WORK REGISTER.
R5       EQU   5                  WORK REGISTER.
R6       EQU   6                  POINTS AT CURRENT STORE FROM POS.
R7       EQU   7                  POINTS AT CURRENT STORE POSITION.
R8       EQU   8                  HOLDS POINTER TO LAST GOTTEN JCLS.
R9       EQU   9                  LINK TO GETMAIN REG.
R10      EQU   10                 SDTBASE REGISTER.
R11      EQU   11                 CSCB BASE REGISTER.
R12      EQU   12                 BASE REGISTER
MNT      EQU   X'0C'
D1       EQU   1                                                  20032
D2       EQU   2
D3       EQU   3                                                  20032
D4       EQU   4                                                  20032
D6       EQU   6                                                  20032
D8       EQU   8
         EJECT
         SPACE 2
         BALR  R12,0              BASE
         USING *,R12                   REGISTER.
         MODID BR=YES                                            Y01886
STARTA   DS    0H                                                 20032
         SPACE
         USING STCPARM,R8          R1 PTS TO STC INIT PARM AREA  Y02669
         LR R8,R1              ON ENTRY, HOLDS PTRS TO ASCB,SDT  Y02669
         L  R2,STCASCB             GET ASCB POINTER              Y02669
         L  R10,STCSDT             GET SDT POINTER               Y02669
         L   R0,STCSPNUM           SIZE & SP OF STCPARM IN R0    Y02669
         FREEMAIN R,LV=(0),A=(1)   FREE STCPARM                  Y02669
         DROP R8                                                 Y02669
         USING ASCB,R2             ASCB BASE REG                 Y02669
         L  R11,ASCBCSCB           GET CSCB PTR                  Y02669
         USING CHAIN,R11           CSCB BASE REGISTER.
         SPACE
         USING SDTVTR1,R10         SDT BASE REGISTER.
         ST R2,SDTWORK             SAVE THE PTR TO THE ASCB      Y02669
         DROP R2                                                 Y02669
         SPACE
***********************************************************************
*
*  BRANCH AND LINK TO ROUTINE TO GETMAIN FOR THE JOB CONTROL
*  LANGUAGE SET (JCLS) - A GETMAIN IS ISSUED FOR 88 BYTES IN
*  THE ROUTINE TO WHICH CONTROL IS GIVEN
*  WHEN STORAGE FOR THE JCLS HAS BEEN ACQUIRED, THE JOB IMAGE
*  IS MOVED TO THE JCLS FROM THE SDT-                             19774
*
***********************************************************************
         BAL   R9,VJCGET          GET 88 BYTES FOR JOB JCLS.
         USING VJCLSHD,R1
         SPACE
***********************************************************************
*
*  SCAN THE START DESCRIPTOR TABLE FOR THE JOB STATEMENT JCL
*  WHEN FOUND, MOVE IT TO THE JCLS
*
***********************************************************************
         SPACE
         LA    R3,SDTJCLS1        POINT REG 3 AT FIRST JCL STATEMENT
         LA    R4,D4              SET LOOP CONTROL FOR JOB JCL    20032
         LA    R2,VJC03
VJC00B   EQU   *
         TM    0(R3),VJCJOB       IS IT THE JOB JCL
         BO    VJC00C             YES, MOVE JOB JCL TO JOB JCLS
         LA    R3,74(R3)          POINT REG 3 AT NEXT SDT JCL STATEMNT
         BCT   R4,VJC00B          LOOK AT NEXT JCL IMMAGE         20032
VJC00C   EQU   *
         LA    R5,D2(R3)          POINT REG 5 AT JCL IN SDT
         MVC   8(72,R1),0(R5)     MOVE JCL STATEMENT              20032
         BR    R2                 BRANCH REG 2
***********************************************************************
*
*  STORE THE ADDRESS OF THE JOB CONTROL LANGUAGE SET IN THE CSCB
*  THIS ADDRESS IS ALSO SAVED IN REGISTER 8 FOR CHAINING
*
***********************************************************************
VJC03    EQU   *              CARRY ON POINT
         ST    R1,CHJCL           STORE ADDR OF JCLS FOR CSCB     20032
         LR    R8,R1              SAVE ADDRESS FOR CHAINING.
         SPACE
***********************************************************************
*
*  THIS ROUTINE BRANCHES AND LINKS TO THE GET ROUTINE WHERE
*  88 BYTES IS ACQUIRED FOR THE EXEC JCLS
*  THE JOB CONTROL LANGUAGE SETS ARE CHAINED AND THE ADDRESS
*  OF THE EXEC JCLS IS SAVED IN REGISTER 8
*
***********************************************************************
         SPACE
         BAL   R9,VJCGET          GET 88 BYTES FOR EXEC JCLS.
         ST    R1,0(R8)           CHAIN JCLS.
         LR    R8,R1              SAVE ADDRESS FOR CHAINING.
         SPACE
***********************************************************************
*                                                                     *
*  SCAN THE START DESCRIPTOR TABLE FOR THE EXEC STATEMENT JCL
*  WHEN LOCATED, MOVE IT TO THE JCLS
*  THE PROCEDURE NAME FROM THE START DESCRIPTOR TABLE IS MOVED
*  TO THE JCLS
*
***********************************************************************
         SPACE
         LA    R2,VJC00E   ADDRESS OF EXEC CONT. CHECK          OCIP39A
         LA    R3,SDTJCLS1        POINT REG 3 AT FIRST JCL STATEMENT
         LA    R4,D4              SET LOOP CONTROL FOR EXEC JCL   20032
VJC00D   EQU   *
         TM    0(R3),VJCEXEC      IS IT THE EXEC JCL
         BO    VJC00C             YES, MOVE EXEC JCL TO EXEC JCLS
         LA    R3,74(R3)          POINT REG 3 AT NEXT SDT JCL STATEMNT
         BCT   R4,VJC00D          LOOK AT NEXT JCL IMMAGE         20032
         B     VJC00C             GO TO MOVE JCL TO JCLS          20032
************************************************************    OCIP39A
*                                                               OCIP39A
* SCAN THE START DESCRIPTOR TABLE FOR AN EXEC CONTINUATION STMT OCIP39A
* IF FOUND,GETMAIN 88 BYTES FOR A CONTINUATION EXEC JCLS,CHAIN  OCIP39A
*       JCLS AND MOVE EXEC JCL FROM THE SDT TO THE JCLS         OCIP39A
* IF NOT PRESENT, BRANCH TO SCAN FOR DD STATEMENTS              OCIP39A
*                                                               OCIP39A
************************************************************    OCIP39A
VJC00E   EQU   *                                                OCIP39A
         LA    R3,SDTJCLS7  POINT R3 AT LAST JCL STMT.IN SDT    OCIP39A
         LA    R4,D3        SET LOOP CONTROL FOR EXEC CONTIN      20032
VJC00E1  EQU   *                                                OCIP39A
         TM    0(R3),VJCEXCON     IS IT THE EXEC CONT.STMT      OCIP39A
         BO    VJC00E2             YES,GETMAIN FOR EXEC CONT    OCIP39A
         LA    R1,74               POINT R3 AT NEXT SDT JCL     OCIP39A
         SR    R3,R1                                            OCIP39A
         BCT   R4,VJC00E1         LOOK AT NEXT JCL IMMAGE         20032
         SPACE
***********************************************************************
*
*  SCAN THE START DESCRIPTOR TABLE FOR THE DD STATEMENT JCL
*  IF FOUND, GETMAIN FOR DD JCLS, CHAIN JCLS AND MOVE JCL TO JCLS
*  IF NOT PRESENT, BRANCH TO EXIT ROUTINE AND XCTL TO IEEVRCTL
*    WITHOUT A DD JOB CONTROL LANGUAGE ENTRY
*
***********************************************************************
         SPACE
VJC00F   EQU   *
         LA    R2,VJC00I          SET BRANCH REG FOR DD CONTINUATION
         LA    R3,SDTJCLS1        POINT REG 3 AT FIRST JCL STATEMENT
         LA    R4,D6              SET LOOP CONTROL FOR DD STMNT   20032
VJC00G   EQU   *
         TM    0(R3),VJCDD        IS IT THE DD JCL
         BO    VJC00H             YES, GETMAIN FOR DD JCLS
         LA    R3,74(R3)          POINT REG 3 AT NEXT SDT JCL STATEMNT
         BCT   R4,VJC00G          LOOK AT NEXT JCL IMMAGE         20032
         B     VJC8               NO DD STMNTS PRESENT            20032
         SPACE
************************************************************   OCIP39A
*                                                          *   OCIP39A
*  TURN OFF CONTINUATION EXEC STMNT FLAG IN SDT FOR STMNT  *   OCIP39A
*                     ALREADY PROCESSED                    *   OCIP39A
*                                                          *   OCIP39A
************************************************************   OCIP39A
         SPACE
VJC00E2  EQU   *                                               OCIP39A
         NI    0(R3),255-VJCEXCON TURN OFF EXEC.COND.IND.      OCIP39A
         SPACE
***********************************************************************
*
*  GETMAIN 88 BYTES FOR THE DD JOB CONTROL LANGUAGE SET
*  CHAIN THIS JCLS TO THE PREVIOUS JCLS
*  SAVE ITS ADDRESS IN CASE A DD CONTINUATION STATEMENT IS PRESENT
*          OR AN EXEC CONTINUATION IS PRESENT                   OCIP39A
*    IN THE START DESCRIPTOR TABLE (SDT)
*
***********************************************************************
         SPACE
VJC00H   EQU   *
         BAL   R9,VJCGET          GET 88 BYTES FOR JCLS
         ST    R1,0(R8)           CHAIN JCLS
         LR    R8,R1              SAVE ADDRESS FOR CHAINING PURPOSES
         B     VJC00C             MOVE DD STATEMENT FROM SDT TO JCLS
*      OR EXEC CONTINUATION STATEMENT                           OCIP39A
         SPACE
***********************************************************************
*
*  SCAN THE START DESCRIPTOR TABLE FOR A DD CONTINUATION STATEMENT
*  IF FOUND, GETMAIN 88 BYTES FOR A CONTINUATION DD JCLS, CHAIN THE
*    JCLS AND MOVE DD JCL FROM THE SDT TO THE JCLS
*  IF NOT PRESENT, BRANCH TO EXIT ROUTINE AND XCTL TO IEEVRCTL
*    WITHOUT A DD JOB CONTROL LANGUAGE CONTINUATION ENTRY
*
***********************************************************************
     SPACE
VJC00I   EQU   *
         LA    R3,SDTJCLS1        POINT REG 3 AT FIRST JCL STATEMENT
         LA    R4,D6              SET LOOP CONTROL FOR DD CONTIN. 20032
VJC00J   EQU   *
         TM    0(R3),VJCCONT      IS IT THE DD CONTINUATION
         BO    VJC00K             YES, GETMAIN FOR DD CONTINUATION JCLS
         LA    R3,74(R3)          POINT REG 3 AT NEXT SDT JCL STATEMNT
         BCT   R4,VJC00J          LOOK AT NEXT JCL IMMAGE         20032
***********************************************************************
*
*  THIS IS THE EXIT ROUTINE. IT -
*                   -FREES THE START DESCRIPTOR TABLE (SDT)
*                   -ISSUES AN XCTL TO IEESB605(THE INTER-       Y02669
*                    PRETER CONTROL ROUTINE)
*
***********************************************************************
VJC8     EQU   *
         L     R8,CVTPTR          SET ADDR OF CVT                 20032
         USING JCVT,R8                                            20032
         L     R0,LENJSEL         SET LENGTH SP NUMBER OF JSEL    20032
         GETMAIN R,LV=(0)         GET CORE IN 253 FOR JSEL & JSXL 20032
         LR    R5,R1              SET ADDRISIBILITY FOR JSEL      20032
         USING IEFVJSEL,R5                                        20032
         LA    R1,L'JSEL(R1)      GET ADDR OF JSXL FOR JSEL       20032
         ST    R1,JSELJSXL        PUT ADDR OF JSXL IN JSEL        20032
         MVC   0(L'JSXL,R1),JSXL  MOVE IN EXIT NAME               20032
         DROP  R1                                                 20032
         MVC   JSELJCL,CHJCL      SET PTR TO JCLS IN JSEL         20032
         L     R1,SDTWORK         GET THE ASCB PTR FROM SDTWORK  Y02669
         ST    R1,JSELASCB        SET PTR TO ASCB IN JSEL        Y02669
         ST    R11,JSELCSCB       SET PTR TO CSCB IN JSEL         20032
         L     R0,LENLST          SET LENGTH & SP NUMBER OF LISTS 20032
         GETMAIN R,LV=(0)         GET JSOL AND OPT LISTS          20032
         USING IEFVJSOL,R1                                        20032
         XC    0(L'JSOL,R1),0(R1) ZERO OUT LIST                   20032
         LA    R6,L'JSOL          SET LENGTH OF JSOL FOR FREE     20032
         STH   R6,JSOLLGTH        PUT LENGTH IN JSOL              20032
         ST    R1,JSELJSOL        PUT ADDR OF JSOL IN JSEL        20032
         DROP  R5                                                 20032
         MVC   JSOLTJOB(D8),SDTJCL1+D2 MOVE IN JOB NAME FOR RCTL  20032
         MVC   JSOLTSTE(D8),SDTJCL2+D2 MOVE IN EXEC NAME FOR RCTL 20032
         MVC   JSOLTPRO(D8),PROCSTP    MOVE IN PROC NAME FOR RCTL 20032
         CLI   CHVCD,MNT               IS THIS A MOUNT COMMAND @Z40RPSQ
         BNE   VJSOL                   IF YES                  @Z40RPSQ
         OI    JSOLFLAG,JSOLRAC        TURN ON BYPASS RACINIT  @Z40RPSQ
VJSOL    EQU   *
         DROP  R1                                                 20032
         LR    R1,R10             SDT ADDRESS TO R1.              20032
         LH    R0,SDTSIZE         MOVE SIZE OF THIS SDT TO REG 0  20032
         FREEMAIN R,LV=(0),A=(1)  FREE THE START DESCRIPTOR TABLE 20032
         DROP  R10                                                20032
         LR    R1,R5            SET PTR TO JSEL FOR SB605        Y02669
         XCTL  EP=IEESB605                                       Y02669
         SPACE                                                    20032
***************************************************************** 20032
*                                                               * 20032
*  TURN OF CONTINUATION DD STMNT FLAG IN SDT FOR STATEMENT      * 20032
*                        ALREADY PROCESSED                      * 20032
*                                                               * 20032
***************************************************************** 20032
         SPACE
VJC00K   EQU   *                                                  20032
         NI    0(R3),255-VJCCONT  TURN OFF CONTIN INDICATOR       20032
         B     VJC00H             GETMAIN FOR DD CONTIN FOUND     20032
***********************************************************************
*
*  THIS IS THE GETMAIN ROUTINE FOR THE JOB CONTROL LANGUAGE
*  SET JCLS. IT-
*                   -ISSUES A GETMAIN FOR 88 BYTES FOR THE
*                    JOB CONTROL LANGUAGE SET
*                   -ZEROES THE WORD OF THE JCLS WHICH
*                    IS USED AS A POINTER TO THE NEXT JCLS
*                   -BLANKS OUT THE CARD IMAGE IN THE
*                    JOB CONTROL LANGUAGE SET (JCLS)
*
***********************************************************************
VJCGET   EQU   *                  GETMAIN 88 BYTES FOR JCLS.
         GETMAIN R,LV=88,SP=253
         SPACE
         USING VJCLSHD,R1
         XC    VJCLSHD(8),VJCLSHD ZERO OUT HEADER.
         MVI   VJCLSIM,C' '
         MVC   VJCLSIM+1(79),VJCLSIM   BLANK CARD IMAGE.
         BR    R9                 RETURN.
         SPACE
VJCJOB   EQU   X'80'
VJCEXEC  EQU   X'40'
VJCDD    EQU   X'20'
VJCCONT  EQU   X'10'
VJCEXCON EQU   X'08'                                            OCIP39A
         DS    0F                                                 20032
LENJSEL  DC    AL1(253)           SUBPOOL NUMBER FOR JSEL         20032
         DC    AL3(L'JSEL+L'JSXL)  LENGTH OF JSEL & JSXL          20032
LENLST   DC    AL1(253)             SUBPOOL NUMBER FOR LISTS      20032
         DC    AL3(L'JSOL) LENGTH OF LISTS                        20032
PROCSTP  DC    C'STARTING'        PROC STEP NAME                  20032
         IEFVJSXL JSX,0,(XCTL,IEERGN,POST)
IEFVJSEL DSECT                                                    20032
         IEFVJSEL
IEFVJSOL DSECT                                                    20032
         IEFVJSOL
         END
