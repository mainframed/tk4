         TITLE 'MASTER REGION INITIALIZATION ROUTINE-IEEMB860          *
                        '
IEEMB860 CSECT ,                                                   0001
@MAINENT DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL1(16)                                             0001
         DC    C'IEEMB860  76.336'                                 0001
         DROP  @15
@PROLOG  BALR  @11,0                                               0001
@PSTART  DS    0H                                                  0001
         USING @PSTART,@11                                         0001
         L     @00,@SIZDATD                                        0001
         GETMAIN  R,LV=(0)
         LR    @12,@01                                             0001
         USING @DATD,@12                                           0001
         ST    @13,@SA00001+4                                      0001
         LR    @13,@12                                             0001
JSCBDISP EQU 188
JSCBAOS1 EQU  72
JSCBAOS2 EQU 192
*                                                                  0104
*/*                                                                0104
*       ×  THE FOLLOWING SECTION OF CODE IS THE INITIALIZATION     0104
*       ×  PORTION OF THIS MODULE.  IT WILL DO THE FOLLOWING:      0104
*       ×    . CHECK TO SEE IF MASTER SCHEDULER IS ALREADY UP      0104
*       ×          IF MASTER SCHEDULER ALREADY EXISTS, RETURN      0104
*       ×          WITH RETURN CODE OF 4                           0104
*       ×          IF NOT UP, TURN ON THE M/S UP BIT AND           0104
*       ×          CONTINUE                                        0104
*       ×    . ENTER A SUPERVISOR STATE VIA THE MODESET MACRO.     0104
*       ×    . GETMAIN AN AREA TO BE USED AS INPUT TO THE ESTAE    0104
*       ×      EXIT ROUTINE.                                       0104
*       ×    . INITIALIZE THIS AREA WITH INFORMATION REQUIRED      0104
*       ×      IN THE ESTAE EXIT ROUTINE.                          0104
*       ×       ZERO THE AREA                                      0104
*       ×       PASS THE MODULE BASE ADDRESS                       0104
*       ×       PASS THE DATA BASE ADDRESS                         0104
*       ×    . SET UP THE REGISTERS TO CREATE THE ESTAE.           0104
*       ×       MOVE LIST FORM OF ESTAE TO AREA                    0104
*       ×       POINTER TO THE ESTAE ROUTINE                       0104
*       ×       POINTER TO THE PARM AREA                           0104
*       ×       POINTER TO STAE LIST FORM                          0104
*       ×    . CREATE THE ESTAE ENVORONMENT.                       0104
*       ×    . IF THE ESTAE WAS SUCCESSFUL CONTINUE.               0104
*       ×    . IF THE ESTAE FAILED DO FAILURE PROCESSING.          0104
*                                                                    */
*                                                                  0104
*   IF BAMASCH='1'B THEN            /*                       @YM3520P*/
         L     @10,CVTPTR                                          0104
         L     @10,CVTMSER(,@10)                                   0104
         TM    BAMASCH(@10),B'00100000'                            0104
         BNO   @RF00104                                            0104
*     RETURN CODE(4);               /*                       @YM3520P*/
         L     @13,4(,@13)                                         0105
         L     @00,@SIZDATD                                        0105
         LR    @01,@12                                             0105
         FREEMAIN R,LV=(0),A=(1)
         LA    @15,4                                               0105
         BR    @14                                                 0105
*   ELSE                                                           0106
*     BAMASCH='1'B;                 /*                       @YM3520P*/
@RF00104 L     @10,CVTPTR                                          0106
         L     @10,CVTMSER(,@10)                                   0106
         OI    BAMASCH(@10),B'00100000'                            0106
*   GEN(MODESET MODE=SUP);                                         0107
         MODESET MODE=SUP
*   RESPECIFY                                                      0108
*    (R1,                                                          0108
*     R11,                                                         0108
*     R12) RESTRICTED;                                             0108
*   DO;                             /* GETMAIN (R)                 0109
*                                      LV(LENGTH(PARM))SP(230)       */
*     RESPECIFY                                                    0110
*      (GPR01F,                                                    0110
*       GPR00F) RESTRICTED;                                        0110
*     GPR00F=LENGTH(PARM);          /* LENGTH REQUESTED              */
         LA    GPR00F,160                                          0111
*     GPR01F=230;                   /* SP IN REG 1                   */
         LA    GPR01F,230                                          0112
*     GEN(SLL   GPR01F,24)                                         0113
*     NODEFS NOREFS NOSETS NOEXIT NOFLOWS SEQFLOW;                 0113
         SLL   GPR01F,24
*     GPR00F=GPR00F×GPR01F;         /* SP IN HIGH BYTE               */
         OR    GPR00F,GPR01F                                       0114
*     GPR01F=-1;                    /* INDICATE A GETMAIN REQUEST    */
         SLR   GPR01F,GPR01F                                       0115
         BCTR  GPR01F,0                                            0115
*     SVC(10);                      /* R-FORM OF GETMAIN             */
         SVC   10                                                  0116
*     RESPECIFY                                                    0117
*      (GPR01F,                                                    0117
*       GPR00F) UNRESTRICTED;                                      0117
*   END;                            /* GETMAIN (R)                 0118
*                                      LV(LENGTH(PARM))SP(230)     0118
*                                                            @G29ANSS*/
*   PARMPTR=R1;                                                    0119
         ST    R1,PARMPTR                                          0119
*   PARM=''B;                                                      0120
         L     @10,PARMPTR                                         0120
         XC    PARM(160,@10),PARM(@10)                             0120
*   PARMREGB=R11;                                                  0121
         ST    R11,PARMREGB(,@10)                                  0121
*   PARMREGC=R12;                                                  0122
         ST    R12,PARMREGC(,@10)                                  0122
*   RESPECIFY                                                      0123
*    (R11,                                                         0123
*     R12) UNRESTRICTED;                                           0123
*   RESPECIFY                                                      0124
*    (R2,                                                          0124
*     R3) RESTRICTED;                                              0124
*   PARMAREA(1:ELEN)=ELIST(1:ELEN);                                0125
         LH    @15,ELEN                                            0125
         BCTR  @15,0                                               0125
         EX    @15,@SM02224                                        0125
*   R3=ADDR(STAE00);                                               0126
         LA    R3,STAE00                                           0126
*   R2=PARMPTR;                                                    0127
         LR    R2,@10                                              0127
*   R1=ADDR(PARMAREA);                                             0128
         LA    R1,PARMAREA(,@10)                                   0128
*   GENERATE FLOWS(STAE00);                                        0129
*                                               /*           @G29ANSS*/
        ESTAE (3),CT,RECORD=YES,PARAM=(2),MF=(E,(1))
*   RESPECIFY                                                      0130
*    (R1,                                                          0130
*     R2,                                                          0130
*     R3) UNRESTRICTED;                                            0130
*   RESPECIFY                                                      0131
*    (R15) RESTRICTED;                                             0131
*   IF R15=0 THEN                                                  0132
         SLR   @14,@14                                             0132
         CR    R15,@14                                             0132
         BNE   @RF00132                                            0132
*     DO;                                                          0133
*                                                                  0134
*/*                                                                0134
*           ×  THE FOLLOWING SECTION OF CODE WILL COPY THE JSCB    0134
*           ×  CREATED BY THE INITIATOR FOR THE MASTER SCHEULER    0134
*           ×  INTO THE JSCB CREATED BY THE MASTER.  THE REASON    0134
*           ×  THIS IS BEING DONE BECAUSE THE INITIATOR GOT THE    0134
*           ×  JSCB OUT OF THE MASTER MEMORY(LSQA) AND THE JSCB    0134
*           ×  OF THE MASTER MUST BE IN COMMON CORE(CSA).          0134
*                                                                    */
*                                                                  0134
*       RESPECIFY                                                  0134
*        (R4,                                                      0134
*         R5) RESTRICTED;                                          0134
*       R5=TCBOTC;                                                 0135
         L     @10,CVTPTR                                          0135
         L     @10,CVTTCBP(,@10)                                   0135
         L     @10,TCBPTR(,@10)                                    0135
         L     R5,TCBOTC(,@10)                                     0135
*       R4=R5->TCBJSCB;                                            0136
         L     R4,TCBJSCB(,R5)                                     0136
*       JSCBTCBP=0;                                                0137
         L     @07,TCBJSCB(,@10)                                   0137
         ST    @14,JSCBTCBP(,@07)                                  0137
*       R4->JSCBSEC1=JSCBSEC1;                                     0138
         MVC   JSCBSEC1(72,R4),JSCBSEC1(@07)                       0138
*       R4->JSCBSEC3=JSCBSEC3;                                     0139
         MVC   JSCBSEC3(120,R4),JSCBSEC3(@07)                      0139
*       TCBJSCB=R4;                                                0140
         ST    R4,TCBJSCB(,@10)                                    0140
*       R4->JSCBACT=R4;                                            0141
         ST    R4,JSCBACT(,R4)                                     0141
*       RESPECIFY                                                  0142
*        (R4,                                                      0142
*         R5) UNRESTRICTED;                                        0142
*                                                                  0143
*/*                                                                0143
*           ×  THE FOLLOWING SECTION OF CODE WILL PERFORM THE      0143
*           ×  INITIALIZATION OF THE MASTER REGION.  IT WILL DO    0143
*           ×  THE FOLLOWING:                                      0143
*           ×    . GET AND INITIALIZE THE SMF PARM AREA            0143
*           ×    . ATTACH THE SMF WTR IN A NON-DISPATCHABLE STATE. 0143
*           ×    . ATTACH SMF INITIALIZATION PASSING IT A POINTER  0143
*           ×      TO THE SMF PARM LIST.                           0143
*           ×    . SAVE THE POINTER TO THE INITIALIZATION TCB.     0143
*           ×    . ATTACH THE MISSING DEVICE END HANDLER.          0143
*                                                                    */
*                                                                  0143
*       RESPECIFY                                                  0143
*        (R1,                                                      0143
*         R5) RESTRICTED;                                          0143
*       GEN(GETMAIN R,LV=20);                                      0144
         GETMAIN R,LV=20
*       SMFPTR=R1;                                                 0145
         LR    SMFPTR,R1                                           0145
*       SMFWECB=0;                                                 0146
         SLR   @14,@14                                             0146
         ST    @14,SMFWECB(,SMFPTR)                                0146
*       SMFIECB=0;                                                 0147
         ST    @14,SMFIECB(,SMFPTR)                                0147
*       SMFWECBP=ADDR(SMFWECB);                                    0148
         LA    @14,SMFWECB(,SMFPTR)                                0148
         ST    @14,SMFWECBP(,SMFPTR)                               0148
*       SMFIECBP=ADDR(SMFIECB);                                    0149
         LA    @10,SMFIECB(,SMFPTR)                                0149
         ST    @10,SMFIECBP(,SMFPTR)                               0149
*       PARMAREA(1:ALEN)=ALIST(1:ALEN);                            0150
         L     @10,PARMPTR                                         0150
         LH    @07,ALEN                                            0150
         BCTR  @07,0                                               0150
         EX    @07,@SM02226                                        0150
*       R15=ADDR(PARMAREA);                                        0151
         LA    R15,PARMAREA(,@10)                                  0151
*       R5=ADDR(SMFWECB);                                          0152
         LR    R5,@14                                              0152
*       GENERATE;                                                  0153
            ATTACH EP=IEEMB829,ECB=(5),DISP=NO,SF=(E,(15))
*       SMFTCBP=R1;                                                0154
         ST    R1,SMFTCBP(,SMFPTR)                                 0154
*       R1=ADDR(SMFPARM);                                          0155
         LR    R1,SMFPTR                                           0155
*       PARMAREA(1:ALEN)=ALIST(1:ALEN);                            0156
         L     @14,PARMPTR                                         0156
         LH    @10,ALEN                                            0156
         BCTR  @10,0                                               0156
         EX    @10,@SM02228                                        0156
*       R15=ADDR(PARMAREA);                                        0157
         LA    R15,PARMAREA(,@14)                                  0157
*       R5=ADDR(SMFIECB);                                          0158
         LA    R5,SMFIECB(,SMFPTR)                                 0158
*       GENERATE;                                                  0159
            ATTACH EP=IEEMB820,ECB=(5),DISP=YES,MF=(E,(1)),SF=(E,(15))
*       SMFTCB=R1;                                                 0160
         ST    R1,SMFTCB                                           0160
*       RESPECIFY                                                  0161
*        (R1,                                                      0161
*         R5) UNRESTRICTED;                                        0161
*       PARMAREA(1:ALEN)=ALIST(1:ALEN);                            0162
         L     @14,PARMPTR                                         0162
         LH    @10,ALEN                                            0162
         BCTR  @10,0                                               0162
         EX    @10,@SM02228                                        0162
*       R15=ADDR(PARMAREA);                                        0163
         LA    R15,PARMAREA(,@14)                                  0163
*       GENERATE;                                                  0164
            ATTACH EP=IGFTMCHK,DISP=YES,SF=(E,(15))
*                                                                  0165
*/*                                                                0165
*           ×  THE FOLLOWING SECTION OF CODE WILL PERFORM THE      0165
*           ×  PROCESSING REQUIRED TO ISSUE THE INTERNAL START     0165
*           ×  FOR EACH COMMAND IN THE CHAIN CREATED BY THE MASTER 0165
*           ×  RIM, FROM A USER CREATED PARMLIB MEMBER WHICH IS    0165
*           ×  POINTED TO BY BASEA. THEN IT WILL FREE THE BUFFER.  0165
*                                                                    */
*                                                                  0165
*       RESPECIFY                                                  0165
*        (R0,                                                      0165
*         R1,                                                      0165
*         R2,                                                      0165
*         R3,                                                      0165
*         R4) RESTRICTED;                                          0165
*       R2=MSCOMMND;                                               0166
         L     @14,CVTPTR                                          0166
         L     @14,CVTMSER(,@14)                                   0166
         L     R2,MSCOMMND(,@14)                                   0166
*       DO WHILE R2^=0;                                            0167
         B     @DE00167                                            0167
@DL00167 DS    0H                                                  0168
*         R0=0;                                                    0168
         SLR   R0,R0                                               0168
*         R1=ADDR(COMMLEN);                                        0169
         LA    R1,COMMLEN(,R2)                                     0169
*         R3=COMMNEXT;                                             0170
         L     R3,COMMNEXT(,R2)                                    0170
*         GEN(MGCR  (1));                                          0171
         MGCR  (1)
*         R1=R2;                                                   0172
         LR    R1,R2                                               0172
*         R4=COMMLEN;                                              0173
         LH    R4,COMMLEN(,R2)                                     0173
*         R4=R4+4;                                                 0174
         AL    R4,@CF00094                                         0174
*         GEN(FREEMAIN R,LV=(4),A=(1),SP=245);                     0175
         FREEMAIN R,LV=(4),A=(1),SP=245
*         R2=R3;                                                   0176
         LR    R2,R3                                               0176
*       END;                                                       0177
@DE00167 LTR   R2,R2                                               0177
         BNZ   @DL00167                                            0177
*                                                                  0178
*/*                                                                0178
*           ×  THE FOLLOWING SECTION OF CODE WILL DO:              0178
*           ×    . LINK TO THE RECOVERY TERMINATION FUNCTION.      0178
*           ×    . IF RECOVERY TERMINATION IS SUCCESSFUL CONTINUE  0178
*           ×    . IF RECOVERY TERMINATION FAILED THEN DO FAILURE  0178
*           ×      PROCESSING.                                     0178
*                                                                    */
*                                                                  0178
*       GEN(LINK  EP=IEAVTMSI);                                    0178
         LINK  EP=IEAVTMSI
*       IF R15=0 THEN                                              0179
         LTR   R15,R15                                             0179
         BNZ   @RF00179                                            0179
*         DO;                                                      0180
*           CALL ICFBIE00;                                         0181
         L     @15,@CV00035                                        0181
         BALR  @14,@15                                             0181
*                                                                  0182
*/*                                                                0182
*               ×  THE FOLLOWING SECTION OF CODE WILL PERFORM THE  0182
*               ×  CLEAN-UP AND EXIT PROCESSING OF THIS MODULE. IT 0182
*               ×  WILL DO THE FOLLOWING:                          0182
*               ×    . WAIT FOR COMPLETION OF SMF INITIALIZATION.  0182
*               ×    . DETACH THE SMF INITIALIZATION TASK.         0182
*               ×    . FREEMAIN FRONT END OF SMF PARMAREA.         0182
*                                                                    */
*                                                                  0182
*           R1=ADDR(SMFIECB);                                      0182
         LA    R1,SMFIECB(,SMFPTR)                                 0182
*           GEN(WAIT ECB=(1));                                     0183
         WAIT ECB=(1)
*           R1=ADDR(SMFTCB);                                       0184
         LA    R1,SMFTCB                                           0184
*           GEN(DETACH (1));                                       0185
         DETACH (1)
*           R1=SMFPTR;                                             0186
         LR    R1,SMFPTR                                           0186
*           GEN(FREEMAIN R,LV=12,A=(1));                           0187
         FREEMAIN R,LV=12,A=(1)
*           IF CVTICB^=0 THEN       /*                       @Y30LPSU*/
         L     @14,CVTPTR                                          0188
         L     @14,CVTEXT2(,@14)                                   0188
         L     @14,CVTICB(,@14)                                    0188
         LTR   @14,@14                                             0188
         BZ    @RF00188                                            0188
*             GEN(LINK EP=ICBINIT); /*                       @Y30LPSU*/
         LINK EP=ICBINIT
         EJECT
*                                                                  0190
*/*                                                                0190
*               ×  THE FOLLOWING SECTION OF CODE WILL DO:          0190
*               ×    . SET UP THE PARM LIST TO PASS TO ASM INIT.   0190
*               ×    . ATTACH ASM INIT ROUTINE                     0190
*               ×    . WAIT FOR ASM TO FINISH                  @Z40WPSS
*                                                                    */
*                                                                  0190
*           ASMPARM=ADDR(ASMECB);   /* SET UP PARM LIST      @Z40WPSS*/
@RF00188 LA    @14,ASMECB                                          0190
         ST    @14,ASMPARM                                         0190
*           ASMHIFLG=ASMHIFLG×HEX80;/* MARK END OF LIST      @Z40WPSS*/
         SLR   @14,@14                                             0191
         IC    @14,ASMHIFLG                                        0191
         O     @14,@CF00097                                        0191
         STC   @14,ASMHIFLG                                        0191
*           R1=ADDR(ASMPARM);       /* SET UP LIST FOR ATTACH      0192
*                                                            @Z40WPSS*/
         LA    R1,ASMPARM                                          0192
*           PARMAREA(1:ALEN)=ALIST(1:ALEN);/* SET UP ATTACH LIST   0193
*                                                            @Z40WPSS*/
         L     @14,PARMPTR                                         0193
         LH    @10,ALEN                                            0193
         BCTR  @10,0                                               0193
         EX    @10,@SM02228                                        0193
*           R15=ADDR(PARMAREA);     /*                       @Z40WPSS*/
         LA    R15,PARMAREA(,@14)                                  0194
*           ASMECB=0;               /* ZERO OUT THE ECB      @Z40WPSS*/
         SLR   @14,@14                                             0195
         ST    @14,ASMECB                                          0195
*           GENERATE REFS(R15,ASMECB);                             0196
*                                         /* ATTACH AND WAIT @Z40WPSS*/
         ATTACH EP=ILRTMRLG,JSTCB=YES,SM=SUPV,SVAREA=NO,KEY=PROP,      X
               SZERO=YES,SF=(E,(15))                           @Z40WPSS
         WAIT  ECB=ASMECB               WAIT FOR ASM TO FINISH @Z40WPSS
         EJECT
*                                                                  0197
*/*                                                                0197
*           ×  THE FOLLOWING SECTION OF CODE WILL DO:          @Z40RPPJ
*           ×    . ATTACH THE SYSTEM SECURITY INITIALIZATION ROUTINE
*           ×                                                  @Z40RPPJ
*           ×      (ICHSEC00)                                 @Z40RPPJ
*           ×    . WAIT FOR THE SYSTEM SECURITY INIT TO FINSIH     0197
*           ×                                                 @Z40RPPJ
*                                                                    */
*                                                                  0197
*           PARMAREA(1:ALEN)=ALIST(1:ALEN);/* MOVE ATTACH LIST FORM
*                                                            @Z40RPPJ*/
         L     @14,PARMPTR                                         0197
         LH    @10,ALEN                                            0197
         BCTR  @10,0                                               0197
         EX    @10,@SM02228                                        0197
*           RACECB=0;               /* ZERO OUT THE ECB      @Z40RPPJ*/
         SLR   @10,@10                                             0198
         ST    @10,RACECB                                          0198
*           R2=ADDR(PARMAREA);      /* REG 2 = ADDR OF ATTACH@Z40RPPJ
*                                      LIST FORM             @Z40RPPJ*/
         LA    R2,PARMAREA(,@14)                                   0199
*           GEN SETS(RACECB,RACTCB);                               0200
*                                      /* ATT SECURITY TASK  @Z40RPPJ*/
         ATTACH EP=ICHSEC00,SZERO=YES,SF=(E,(2)),ECB=RACECB  ATTACH THE*
                                 SECURITY INIT ROUTINE         @Z40RPPJ
         ST    R1,RACTCB         SAVE TCB ADDR FOR DETACH      @Z40RPPJ
         WAIT  ECB=RACECB        WAIT FOR SYSTEM SECURITY INIT TO      X
                                 FINISH                        @Z40RPPJ
         DETACH RACTCB           DETACH SECURITY INIT TASK     @Z40RPPJ
         EJECT
*                                                                  0201
*/*                                                                0201
*  ×  THE FOLLOWING SECTION OF CODE WILL DO THE                @G29ANSS
*  ×  FOLLOWING IF THIS IS AN SU29 SYSTEM                      @G29ANSS
*  ×    . SETUP AND ISSUE A BLDL MACRO FOR THE                 @G29ANSS
*  ×      SUBSYSTEM INITIALIZATION NAMES TABLE LOCATED         @G29ANSS
*  ×      IN LOAD MODULE IEFJSSNT.  IF THE TABLE IS            @G29ANSS
*  ×      FOUND THEN ISSUE A LOAD MACRO, OTHERWISE             @G29ANSS
*  ×      ISSUE MESSAGE IEE858I.                               @G29ANSS
*  ×    . FOR EACH NON-DUMMY SUBSYSTEM NAME ENTRY(A BLANK IN   @G29ANSS
*  ×      THE FIRST POSITION) THE FOLLOWING IS DONE:           @G29ANSS
*  ×      1. DETERMINE IF THE INITIALIZATION ENTRY NAME        @G29ANSS
*  ×         CONTAINS A NULL INDICATION(A BLANK IN THE FIRST   @G29ANSS
*  ×         POSITION), IF SO THEN GET THE NEXT SUBSYSTEM      @G29ANSS
*  ×         NAME.                                             @G29ANSS
*  ×      2. IF THE INITIALIZATION ENTRY NAME IS NOT           @G29ANSS
*  ×         NULL OR IF IT IS THE PRIMARY JES OR THE MSTR      @G29ANSS
*  ×         THEN CALL SUBSINIT TO PASS CONTROL TO THE         @G29ANSS
*  ×         SUBSYSTEM'S INITIALIZATION ROUTINE.               @G29ANSS
*  ×              - INITIALIZE AN SSIB AND ISSUE THE SSREQ     @G29ANSS
*  ×                MACRO TO GET THE ADDRESS OF THE SUBSYSTEM'S@G29ANSS
*  ×                SSCVT.                                     @G29ANSS
*  ×              - CHECK TO SEE IF THE SUBSYSTEM HAS ALREADY  @G29ANSS
*  ×                BENN INITIALIZED.                          @G29ANSS
*  ×                IF SO THEN ISSUE MESSAGE IEE730I. GET THE  @G29ANSS
*  ×                NEXT NAME IN THE TABLE.                    @G29ANSS
*  ×              - IF NO SUBSYSTEM INITIALIZATION WAS DONE    @G29ANSS
*  ×                THEN ISSUE A BLDL FOR THE INITIALIZATION   @G29ANSS
*  ×                ROUTINE. IF THE BLDL WAS UNSUCCESSFUL THEN @G29ANSS
*  ×                ISSUE IEE859I AND GET THE NEXT SUBSYSTEM   @G29ANSS
*  ×                NAME FROM THE TABLE.                       @G29ANSS
*  ×                IF THE BLDL MACRO WAS SUCCESSFUL THEN      @G29ANSS
*  ×                ISSUE A LINK FOR THE SUBSYSTEM'S           @G29ANSS
*  ×                ENTRY NAME PASSING THE SUBSYSTEM'S SSCVT   @G29ANSS
*  ×                AS A PARAMETER.                            @G29ANSS
*  ×    . ISSUE A DELETE MACRO FOR LOAD MODULE IEFJSSNT.       @G29ANSS
*  ×                                                           @G29ANSS
*                                                                    */
*                                                                  0201
*           IF SU29BIT=ON THEN      /* IS THIS AN SU29 SYSTEM?     0201
*                                                            @G29ANSS*/
         L     @14,CVTPTR                                          0201
         L     @14,CVTIHASU(,@14)                                  0201
         TM    SU29BIT(@14),B'00000100'                            0201
         BNO   @RF00201                                            0201
*             DO;                   /* YES, FIND IEFJSSNT    @G29ANSS*/
*                                                                  0202
*               /*****************************************************/
*               /*                                                   */
*               /* FIND MODULE IEFJSSNT IN CONCATENATED SYS1.LINKLIB */
*               /*                                           @G29ANSS*/
*               /*                                                   */
*               /*****************************************************/
*                                                                  0203
*               BLDLNUM=1;          /* NUM ENTRIES IN BLDL LIST    0203
*                                                            @G29ANSS*/
         MVC   BLDLNUM(2),@CH00047                                 0203
*               BLDLLEN=LENGTH(BLDLENTR);/* LEN OF ENTRY     @G29ANSS*/
         MVC   BLDLLEN(2),@CH00194                                 0204
*               BLDLNAME=JSSNT;     /* THE NAME TO LOCATE    @G29ANSS*/
         MVC   BLDLNAME(8),@CC00111                                0205
*               BLDLDATA=BLDLDATA&&BLDLDATA;/* CLEAR FIELDS  @G29ANSS*/
         XC    BLDLDATA(52),BLDLDATA                               0206
*               GEN REFS(BLDLLIST) SETS(BLDLDATA);                 0207
*                                            /* FIND JSSNT   @G29ANSS*/
         BLDL 0,BLDLLIST         FIND MODULE IEFJSSNT          @G29ANSS
*               RFY                                                0208
*                 R15 RSTD;         /*                       @G29ANSS*/
*               IF R15=0 THEN       /* WAS IEFJSSNT FOUND?   @G29ANSS*/
         LTR   R15,R15                                             0209
         BNZ   @RF00209                                            0209
*                 DO;               /* YES, LOAD IT.         @G29ANSS*/
*                                                                  0210
*                   /*************************************************/
*                   /*                                               */
*                   /* LOAD MODULE IEFJSSNT                  @G29ANSS*/
*                   /*                                               */
*                   /*************************************************/
*                                                                  0211
*                   RFY                                            0211
*                     R0 RSTD;      /*                       @G29ANSS*/
*                   DO;             /* LOAD DE(BLDLENTR)           0212
*                                      ERRET(LOADERR)                */
*                     RESPECIFY                                    0213
*                      (GPR00P,                                    0213
*                       GPR01P,                                    0213
*                       GPR15F) RESTRICTED;                        0213
*                     GPR00P=-ADDR(BLDLENTR);/* LOAD NEGATIVE OF LIST
*                                      ENTRY ADDR                    */
         LA    GPR00P,BLDLENTR                                     0214
         LCR   GPR00P,GPR00P                                       0214
*                     GPR01P=0;     /* JOBLIB OR LINKLIB DCB         */
         SLR   GPR01P,GPR01P                                       0215
*                     GPR01P=GPR01P×'80000000'X;/* ERROR RETURN LABEL
*                                      SPECIFIED                     */
         O     GPR01P,@CF02148                                     0216
*                     SVC(8);       /* ISSUE LOAD SVC                */
         SVC   8                                                   0217
*                     IF GPR15F^=0 THEN/* LOAD WAS UNSUCCESSFUL      */
         LTR   GPR15F,GPR15F                                       0218
         BNZ   @RT00218                                            0218
*                       GOTO LOADERR;/* BRANCH TO ERROR LOCATION     */
*                     RESPECIFY                                    0220
*                      (GPR00P,                                    0220
*                       GPR01P,                                    0220
*                       GPR15F) UNRESTRICTED;                      0220
*                   END;            /* LOAD DE(BLDLENTR)           0221
*                                      ERRET(LOADERR) THE ERRET LABEL
*                                      SHOULD NOT RECEIVE CONTROL  0221
*                                      FROM AN ERROR CAUSED BY THIS
*                                      LOAD. THE ERRET EXISTS TO   0221
*                                      PREVENT MB860 FROM ABENDING IN
*                                      CASE SOMETHING DOES GO WRONG.
*                                                            @G29ANSS*/
*                   JSSNTPTR=R0;    /* ADDR OF 1ST SUBSYSTEM NAME IN
*                                      IEFJSSNT              @G29ANSS*/
         LR    JSSNTPTR,R0                                         0222
*                   RFY                                            0223
*                    (R0,                                          0223
*                     R15) UNRSTD;  /*                       @G29ANSS*/
*                                                                  0224
*                   /*************************************************/
*                   /*                                               */
*                   /* SETUP AND PASS CONTROL TO THE INITIALIZATION  */
*                   /* ROUTINES FOR EACH SUBSYSTEM           @G29ANSS*/
*                   /*                                               */
*                   /*************************************************/
*                                                                  0224
*                   CALL SSINTBLK;  /* INIT SSIB, SSOB AND SSOB    0224
*                                      EXTENSION             @G29ANSS*/
         BAL   @14,SSINTBLK                                        0224
*                   DO WHILE JSSNTNAM^=JSSNTEND;/* LOOP UNTIL END OF
*                                      IEFJSSNT FOUND        @G29ANSS*/
         B     @DE00225                                            0225
@DL00225 DS    0H                                                  0226
*                     IF JSSNTNAM=JESPJESN×/* IS NAME THE PRIMARY  0226
*                                      SUBSYSTEM NAME OR     @G29ANSS*/
*                         JSSNTNAM=IDMSTR THEN/* THE NAME OF THE   0226
*                                      MASTER SUBSYSTEM?     @G29ANSS*/
         L     @10,CVTPTR                                          0226
         L     @10,CVTJESCT(,@10)                                  0226
         CLC   JSSNTNAM(4,JSSNTPTR),JESPJESN(@10)                  0226
         BE    @RT00226                                            0226
         CLC   JSSNTNAM(4,JSSNTPTR),@CC00101                       0226
         BNE   @RF00226                                            0226
@RT00226 DS    0H                                                  0227
*                       CALL ISSUE730;/* YES, ISSUE DUPLICATE      0227
*                                      SUBSYSTEM MSG IEE730I.      0227
*                                                            @G29ANSS*/
         BAL   @14,ISSUE730                                        0227
*                     ELSE          /* NO, CHECK FOR VALID ENTRY   0228
*                                                            @G29ANSS*/
*                       IF JSSNTNAM(1:1)^=BLANK&/* CHECK FOR DUMMY 0228
*                                      ENTRY AND             @G29ANSS*/
*                           JSSNTINT(1:1)^=BLANK THEN/* NULL INIT  0228
*                                      ROUTINE NAME SPECIFIED      0228
*                                                            @G29ANSS*/
         B     @RC00226                                            0228
@RF00226 CLI   JSSNTNAM(JSSNTPTR),C' '                             0228
         BE    @RF00228                                            0228
         CLI   JSSNTINT(JSSNTPTR),C' '                             0228
         BE    @RF00228                                            0228
*                         CALL SUBSINIT;/* NO, INIT THE SUBSYSTEM  0229
*                                                            @G29ANSS*/
         BAL   @14,SUBSINIT                                        0229
*                     JSSNTPTR=JSSNTPTR+LENGTH(JSSNTENT);/* GET NEXT
*                                      ENTRY IN IEFJSSNT     @G29ANSS*/
@RF00228 DS    0H                                                  0230
@RC00226 AL    JSSNTPTR,@CF00131                                   0230
*                   END;            /* OF DO WHILE           @G29ANSS*/
@DE00225 CLC   JSSNTNAM(4,JSSNTPTR),@CB00206                       0231
         BNE   @DL00225                                            0231
*                   DO;             /* DELETE EP(JSSNT)              */
*                     RESPECIFY                                    0233
*                      (GPR00P) RESTRICTED;                        0233
*                     GPR00P=ADDR(JSSNT);/* ->ENTRY NAME             */
         LA    GPR00P,@CC00111                                     0234
*                     SVC(9);       /* DELETE SVC                    */
         SVC   9                                                   0235
*                     RESPECIFY                                    0236
*                      (GPR00P) UNRESTRICTED;                      0236
*                   END;            /* DELETE EP(JSSNT) DELETE     0237
*                                      IEFJSSNT              @G29ANSS*/
*LOADERR:                                                          0238
*                   ;               /* THIS LABEL IS THE ERRET     0238
*                                      ROUTINE IF THE LOAD FOR     0238
*                                      IEFJSSNT FAILS. CONTROL SHOULD
*                                      NEVER BE PASSED TO THIS LABEL.
*                                                            @G29ANSS*/
LOADERR  DS    0H                                                  0239
*                 END;              /* OF IEFJSSNT FOUND     @G29ANSS*/
         EJECT
*                                                                  0240
*               /*****************************************************/
*               /*                                                   */
*               /* MODULE IEFJSSNT NOT FOUND. ISSUE MESSAGE IEE858I  */
*               /*                                           @G29ANSS*/
*               /*                                                   */
*               /*****************************************************/
*                                                                  0240
*               ELSE                /* IEFJSSNT NOT FOUND.   @G29ANSS*/
*                 DO;               /* WTO('IEE858I ONLY SYSGENED  0240
*                                      SUBSYSTEMS AVALIABLE -      0240
*                                      IEFJSSNT NOT FOUND') DESC(4)
*                                      ROUTCDE(2)                    */
         B     @RC00209                                            0240
@RF00209 DS    0H                                                  0241
*                   RFY                                            0241
*                     GPR01P RSTD;  /* RESTRICT REG 1                */
*                   GPR01P=ADDR(I03508);/* ADDRESS CONTROL PROGRAM 0242
*                                      LIST                          */
         LA    GPR01P,I03508                                       0242
*                   SVC(35);        /* ISSUE WTO SVC                 */
         SVC   35                                                  0243
*                   RFY                                            0244
*                     GPR01P UNRSTD;/* RELEASE REG 1                 */
*                 END;              /* WTO('IEE858I ONLY SYSGENED  0245
*                                      SUBSYSTEMS AVALIABLE -      0245
*                                      IEFJSSNT NOT FOUND') DESC(4)
*                                      ROUTCDE(2)                    */
*               DECLARE             /* WTO PARAMETER LIST            */
*                 1 I03508 STATIC BDY(WORD),                       0246
*                  2 I0350801 FIXED(15) INIT(67),/* TEXT LENGTH      */
*                  2 I0350802 BIT(16) INIT('1000000000000000'B),/* 0246
*                                      MCS FLAG                      */
*                  2 I0350803 CHAR(63) INIT(                       0246
*'IEE858I ONLY SYSGENED SUBSYSTEMS AVALIABLE - IEFJSSNT NOT FOUND'),
*                                   /* MESSAGE TEXT                  */
*                  2 I0350804 BIT(16) INIT('0001000000000000'B),/* 0246
*                                      DESCRIPTOR CODES              */
*                  2 I0350805 BIT(16) INIT('0100000000000000'B);/* 0246
*                                      ROUTING CODES ISSUE MSG     0246
*                                      IEE858I               @G29ANSS*/
@RC00209 DS    0H                                                  0247
*             END;                  /* OF SU29 PROCESSING    @G29ANSS*/
         EJECT
*                                                                  0248
*/*                                                                0248
*               ×  THE FOLLOWING SECTION OF CODE WILL DO:          0248
*               ×    . FREEMAIN THE ESTAE PARM AREA.               0248
*               ×    . CANCEL THE ESTAE ENVIRONMENT.               0248
*               ×    . XCTL THE MASTER WAIT ROUTINE.               0248
*                                                                    */
*                                                                  0248
*           DO;                     /* FREEMAIN(R)                 0248
*                                      LV(LENGTH(PARM))SP(230)A(PARM)*/
@RF00201 DS    0H                                                  0249
*             RESPECIFY                                            0249
*              (GPR01F,                                            0249
*               GPR00F) RESTRICTED;                                0249
*             GPR00F=LENGTH(PARM);  /* LENGTH REQUESTED              */
         LA    GPR00F,160                                          0250
*             GPR01F=230;           /* SP IN REG 1                   */
         LA    GPR01F,230                                          0251
*             GEN(SLL   GPR01F,24)                                 0252
*             NODEFS NOREFS NOSETS NOEXIT NOFLOWS SEQFLOW;         0252
         SLL   GPR01F,24
*             GPR00F=GPR00F×GPR01F; /* SP IN HI BYTE                 */
         OR    GPR00F,GPR01F                                       0253
*             GPR01F=ADDR(PARM);    /* SET REGISTER ONE              */
         L     GPR01F,PARMPTR                                      0254
*             SVC(10);              /* R-FORM OF GETMAIN             */
         SVC   10                                                  0255
*             RESPECIFY                                            0256
*              (GPR01F,                                            0256
*               GPR00F) UNRESTRICTED;                              0256
*           END;                    /* FREEMAIN(R)                 0257
*                                      LV(LENGTH(PARM))SP(230)A(PARM)
*                                                            @G29ANSS*/
*           GEN(ESTAE 0);                                          0258
         ESTAE 0
*           RESPECIFY                                              0259
*            (R0,                                                  0259
*             R1,                                                  0259
*             R2,                                                  0259
*             R3,                                                  0259
*             R4) UNRESTRICTED;                                    0259
*           RETURN TO MB860N;                                      0260
         L     @13,4(,@13)                                         0260
         L     @00,@SIZDATD                                        0260
         LR    @01,@12                                             0260
         FREEMAIN R,LV=(0),A=(1)
         LA    @14,MB860N                                          0260
         BR    @14                                                 0260
*MB860N:                                                           0261
*           GEN(XCTL EP=IEEVWAIT);                                 0261
MB860N   XCTL EP=IEEVWAIT
*         END;                                                     0262
*     END;                                                         0263
@RF00179 DS    0H                                                  0264
*                                                                  0264
*/*                                                                0264
*       ×  THE FOLLOWING SECTION OF CODE WILL SET UP FOR           0264
*       ×  ENTRY INTO THE STAE ROUTINE TO PERFORM FAILURE          0264
*       ×  PROCESSING IF EITHER ESTAE OR RECOVERY TERMINATION      0264
*       ×  SETUP FAILED. THE STAE ROUTINE AT COMPLETION WILL       0264
*       ×  PUT THE SYSTEM INTO A PERMINANT WAIT STATE.             0264
*       ×  THIS CODE WILL INDICATE THAT A DUMP IS REQUIRED,        0264
*       ×  THAT THIS IS A BRANCH ENTRY AND THAT R1 WILL CONTAIN    0264
*       ×  THE ADDRESS OF THE STAE PARM AREA.                      0264
*                                                                    */
*                                                                  0264
*   RESPECIFY                                                      0264
*    (R15) UNRESTRICTED;                                           0264
@RF00132 DS    0H                                                  0265
*   RESPECIFY                                                      0265
*    (R1) RESTRICTED;                                              0265
*   PARMBRCH='1'B;                                                 0266
*   PARMDUMP='1'B;                                                 0267
         L     @10,PARMPTR                                         0267
         OI    PARMBRCH(@10),B'10100000'                           0267
*   R1=PARMPTR;                                                    0268
         LR    R1,@10                                              0268
*   GOTO STAE10;                                                   0269
         B     STAE10                                              0269
*                                                                  0270
*/*                                                                0270
*       ×  THE FOLLOWING SECTION OF CODE IS THE ESTAE ENTRY CODE.  0270
*       ×  IT WILL DO THE FOLLOWING TO CREATE THE ENVIRONMENT      0270
*       ×  REQUIRED TO DO ITS PROCESSING.                          0270
*       ×    . DETERMINE IF INVOKED WITH A SDWA.                   0270
*       ×    . IF INVOKED WITHOUT THE SDWA THEN THE INFORMATION    0270
*       ×      REQUIRED IS IN REGISTERS. IT WILL BE PUT IN THE     0270
*       ×      PARM AREA, ALSO DUMP AND ABEND PROCESSING WILL BE   0270
*       ×      REQUESTED. THEN RETRY WILL BE DONE.                 0270
*       ×      NOTE: REGISTER 0 WILL CONTAIN A TWELVE.             0270
*       ×            REGISTER 1 WILL CONTAIN THE ABEND CODE.       0270
*       ×            REGISTER 2 WILL CONTAIN THE PARM AREA POINTER.
*       ×    . IF INVOKED WITH AN SDWA THEN THE INFORMATION        0270
*       ×      REQUIRED WILL BE MOVED FROM THE SDWA TO THE         0270
*       ×      STAE PARM AREA. SET UP FOR RETRY WILL BE DONE       0270
*       ×      AND RETRY PERFORMED. A DUMP WILL NOT BE TAKEN IF    0270
*       ×      ENTERED BECAUSE OF PERCOLATION OR MACHINE CHECK @YM3504P
*                                                                    */
*                                                                  0270
*   RESPECIFY                                                      0270
*    (R0,                                                          0270
*     R2,                                                          0270
*     R4,                                                          0270
*     R11,                                                         0270
*     R12,                                                         0270
*     R14,                                                         0270
*     R15) RESTRICTED;                                             0270
*STAE00:                                                           0271
*   ;                               /*                       @G29ANSS*/
STAE00   DS    0H                                                  0272
*   GEN(USING STAE00,15);           /*                       @G29ANSS*/
         USING STAE00,15
*   R4=R14;                                                        0273
         LR    R4,R14                                              0273
*   IF R0^=12 THEN                                                 0274
         C     R0,@CF00033                                         0274
         BE    @RF00274                                            0274
*     DO;                                                          0275
*       R2=R1->SDWAPARM;                                           0276
         L     R2,SDWAPARM(,R1)                                    0276
*       IF R1->SDWAPERC^='1'B&R1->SDWAMCHK^='1'B THEN/*      @YM3504P*/
         TM    SDWAPERC(R1),B'00010000'                            0277
         BO    @RF00277                                            0277
         TM    SDWAMCHK(R1),B'10000000'                            0277
         BO    @RF00277                                            0277
*         R2->PARMDUMP='1'B;                                       0278
         OI    PARMDUMP(R2),B'10000000'                            0278
*       R2->PARMACDE=R1->SDWAABCC;                                 0279
@RF00277 L     @10,SDWAABCC(,R1)                                   0279
         ST    @10,PARMACDE(,R2)                                   0279
*       R2->PARMABND='1'B;                                         0280
         OI    PARMABND(R2),B'01000000'                            0280
*       R1->SDWASR01=R2;                                           0281
         ST    R2,SDWASR01(,R1)                                    0281
*       DO;                         /* SETRP RETADDR(STAE10)RETREGS(Y
*                                      ES)RECORD(YES)RC(4)RECPARM(LRE
*                                      CINF)FRESDWA(YES)DUMP(NO)     */
*         RESPECIFY                                                0283
*          (GPR00P,                                                0283
*           GPR01P,                                                0283
*           GPR14P,                                                0283
*           GPR15P) RSTD;                                          0283
*         GPR01P->SDWARCDE=4;       /* STORE RC INTO SDWA            */
         MVI   SDWARCDE(GPR01P),X'04'                              0284
*         GPR01P->SDWARTYA=ADDR(STAE10);/* SAVE RETRY ADDRESS        */
         LA    @10,STAE10                                          0285
         ST    @10,SDWARTYA(,GPR01P)                               0285
*         GPR01P->SDWAFREE='1'B;    /* SET FLAG TO FREE SDWA         */
*         GPR01P->SDWARCRD='1'B;    /* TURN ON RECORD INDICATOR      */
         OI    SDWAFREE(GPR01P),B'10000100'                        0287
*         GPR15P=ADDR(LRECINF);     /* ACCESS RECORD PARAMETER LIST  */
         LA    GPR15P,LRECINF                                      0288
*         GPR01P->SDWARECP=GPR15P->I256C(1:24);/* COPY RECORD      0289
*                                      PARAMETERS                    */
         MVC   SDWARECP(24,GPR01P),I256C(GPR15P)                   0289
*         GPR01P->SDWAREQ='0'B;     /* TURN OFF DUMP INDICATOR       */
         NI    SDWAREQ(GPR01P),B'01111111'                         0290
*         GPR01P->SDWAUPRG='1'B;    /* TURN ON RETREGS INDICATOR     */
         OI    SDWAUPRG(GPR01P),B'00001000'                        0291
*         RESPECIFY                                                0292
*          (GPR00P,                                                0292
*           GPR01P,                                                0292
*           GPR14P,                                                0292
*           GPR15P) UNRSTD;                                        0292
*       END;                        /*                       @YM3506P*/
*       R14=R4;                                                    0294
         LR    R14,R4                                              0294
*       GO TO ASIR;                                                0295
         BR    R14                                                 0295
*     END;                                                         0296
*   R2->PARMDUMP='1'B;                                             0297
@RF00274 OI    PARMDUMP(R2),B'10000000'                            0297
*   R2->PARMACDE=R1;                                               0298
         ST    R1,PARMACDE(,R2)                                    0298
*   R2->PARMABND='1'B;                                             0299
         OI    PARMABND(R2),B'01000000'                            0299
*   R0=ADDR(STAE10);                                               0300
         LA    R0,STAE10                                           0300
*   R15=4;                                                         0301
         LA    R15,4                                               0301
*   GEN(DROP  15);                  /*                       @G29ANSS*/
         DROP  15
*   GO TO ASIR;                                                    0303
         BR    R14                                                 0303
         EJECT
*                                                                  0304
*/*                                                                0304
*       ×  THE FOLLOWING SECTION OF CODE IS THE RETRY ENTRY        0304
*       ×  POINT IT WILL SET UP THE ENVIRONMENT NECESSARY TO       0304
*       ×  RUN THE RECOVERY CODE, BY RELOADING CODEREG             0304
*       ×  (REGISTER 11) AND DATA REG (REGISTER 12).               0304
*                                                                    */
*                                                                  0304
*STAE10:                                                           0304
*   R11=R1->PARMREGB;                                              0304
STAE10   L     R11,PARMREGB(,R1)                                   0304
*   R12=R1->PARMREGC;                                              0305
*                                                                  0305
         L     R12,PARMREGC(,R1)                                   0305
*   /*****************************************************************/
*   /*                                                               */
*   /* IF ERROR OCCURED WHILE A SUBSYSTEM INITIALIZATION ROUTINE HAD */
*   /* CONTROL THEN SET UP REGISTERS AND CONTINUE INITIALIZING THE   */
*   /* SUBSYSTEMS.                                           @G29ANSS*/
*   /* NOTE: A GOTO IS ISSUED HERE TO CONTINUE SUBSYSTEM             */
*   /* INITIALIZATION PROCESSING.                            @G29ANSS*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0306
*   IF SU29BIT=ON&                  /* IS THIS AN SU29 SYSTEM      0306
*                                                            @G29ANSS*/
*       R1->PARMSSI=ON THEN         /* AND THE ERROR OCCURRED LINKING
*                                      TO THE SUBSYSTEM INIT ROUTINE
*                                      ?                     @G29ANSS*/
         L     @10,CVTPTR                                          0306
         L     @10,CVTIHASU(,@10)                                  0306
         TM    SU29BIT(@10),B'00000100'                            0306
         BNO   @RF00306                                            0306
         TM    PARMSSI(R1),B'00010000'                             0306
         BNO   @RF00306                                            0306
*     DO;                           /* YES TO ALL THE ABOVE  @G29ANSS*/
*       R1->PARMFLGS=0;             /* CLEAR ESTAE PARM FLAGS      0308
*                                                            @G29ANSS*/
         MVI   PARMFLGS(R1),X'00'                                  0308
*       RFY                                                        0309
*        (R10,                                                     0309
*         R13) RSTD;                /*                       @G29ANSS*/
*       LM(R13,R15,R1->RG13TO15);   /* RESTORE REGS TO       @G29ANSS*/
         LM    R13,R15,RG13TO15(R1)                                0310
*       LM(R0,R10,R1->RG0TO10);     /* WHAT THEY WERE BEFORE THE LINK
*                                      WAS ISSUED.           @G29ANSS*/
         LM    R0,R10,RG0TO10(R1)                                  0311
*       GOTO CONTSSIT;              /* GO CONT INIT SUBSYSTEMS     0312
*                                                            @G29ANSS*/
         B     CONTSSIT                                            0312
*     END;                          /*                       @G29ANSS*/
*   RESPECIFY                                                      0314
*    (R0,                                                          0314
*     R1,                                                          0314
*     R2,                                                          0314
*     R4,                                                          0314
*     R10,                                                         0314
*     R11,                                                         0314
*     R12,                                                         0314
*     R13,                                                         0314
*     R14,                                                         0314
*     R15) UNRESTRICTED;            /*                       @G29ANSS*/
@RF00306 DS    0H                                                  0315
         EJECT
*                                                                  0315
*/*                                                                0315
*       ×  THE FOLLOWING SECTION OF CODE WILL DETERMINE IF A       0315
*       ×  DUMP SHOULD BE ATTEMPTED TO THE SYS1.DUMP DATA SET.     0315
*       ×  UPON COMPLETION OF THE DUMP ITS RETURN CODE IS SAVED    0315
*       ×  FOR USE IN MESSAGE CONSTRUCTION.                        0315
*       ×  IF THIS CODE HAS BEEN PREVIOUSLY ATTEMPTED, THE         0315
*       ×  RECURSION AND DUMP NOT TAKEN INDICATORS ARE SET.        0315
*                                                                    */
*                                                                  0315
*   RESPECIFY                                                      0315
*    (R1,                                                          0315
*     R15) RESTRICTED;                                             0315
*   IF PARMCODE=0&                  /* NO DUMP IF RECURSION          */
*       PARMDUMP='1'B THEN                                         0316
         L     @14,PARMPTR                                         0316
         L     @10,PARMCODE(,@14)                                  0316
         LTR   @10,@10                                             0316
         BNZ   @RF00316                                            0316
         TM    PARMDUMP(@14),B'10000000'                           0316
         BNO   @RF00316                                            0316
*     DO;                                                          0317
*       PARMCODE=PARMCODE+4;        /* BUMP RECURSION INDICATOR      */
         AL    @10,@CF00094                                        0318
         ST    @10,PARMCODE(,@14)                                  0318
*       PARMAREA(1:SLEN)=SLIST(1:SLEN);                            0319
         LH    @10,SLEN                                            0319
         BCTR  @10,0                                               0319
         EX    @10,@SM02234                                        0319
*       R1=ADDR(PARMAREA);                                         0320
         LA    R1,PARMAREA(,@14)                                   0320
*       GENERATE;                                                  0321
            SDUMP MF=(E,(1))
*       PARMDRTN=R15;               /* SAVE DUMP RETURN CODE         */
         L     @14,PARMPTR                                         0322
         ST    R15,PARMDRTN(,@14)                                  0322
*       RESPECIFY                                                  0323
*        (R1,                                                      0323
*         R15) UNRESTRICTED;                                       0323
*     END;                                                         0324
*   ELSE                                                           0325
*     DO;                                                          0325
         B     @RC00316                                            0325
@RF00316 DS    0H                                                  0326
*       PARMCODE=PARMCODE+4;        /* BUMP RECURSION INDICATOR      */
         L     @10,PARMPTR                                         0326
         LA    @15,4                                               0326
         L     @14,PARMCODE(,@10)                                  0326
         ALR   @14,@15                                             0326
         ST    @14,PARMCODE(,@10)                                  0326
*       PARMDRTN=4;                 /* SET DUMP FAIL RETURN CODE     */
         ST    @15,PARMDRTN(,@10)                                  0327
*     END;                                                         0328
*                                                                  0329
*/*                                                                0329
*       ×  THE FOLLOWING SECTION OF CODE WILL BUILD THE BASE       0329
*       ×  SECTION OF THE ERROR MESSAGE TO BE SENT TO THE          0329
*       ×  SYSTEM OPERATOR.  IT WILL DO THE FOLLOWING:             0329
*       ×    1. SET THE FLAGS INDICATORS FOR THE MESSAGE.          0329
*       ×    2. SET UP THE MESSAGE NUMBER.(IEE479W)                0329
*       ×    3. INDICATE THAT IT IS THE MASTER SCHEDULER.          0329
*       ×    4. INDICATE WHETHER IT WAS FAILURE OR ABEND.          0329
*       ×       (FAILURE IS INDICATED BY BRANCH ENTRY)             0329
*       ×    5. IF IT WAS AN ABEND ENTRY IT WILL DO:               0329
*       ×       (A). SET UP THE CODE FOR CONVERSION.               0329
*       ×       (B). UNPACK THE ABEND CODE.                        0329
*       ×       (C). TRANSLATE THE ABEND CODE.                     0329
*       ×       (D). MOVE THE PRINTABLE CODE TO MESSAGE.           0329
*       ×  NOTE: IF THIS CODE WAS PREVIOUSLY ATTEMPTED THAN        0329
*       ×        MESSAGE CONSTRUCTION WILL BE BYPASSED.            0329
*                                                                    */
*                                                                  0329
*   IF PARMCODE=4 THEN                                             0329
@RC00316 LA    @10,4                                               0329
         L     @15,PARMPTR                                         0329
         L     @14,PARMCODE(,@15)                                  0329
         CR    @14,@10                                             0329
         BNE   @RF00329                                            0329
*     DO;                                                          0330
*       PARMCODE=PARMCODE+4;                                       0331
         ALR   @14,@10                                             0331
         ST    @14,PARMCODE(,@15)                                  0331
*       MSGST=ADDR(MSGBAS)-ADDR(PARMAREA)+1;                       0332
         LA    MSGST,5                                             0332
*       MSGFLG='8000'X;                                            0333
         MVC   MSGFLG(2,@15),@CH02185                              0333
*       PARMAREA(MSGST:MSGST+LENGTH(INC2))=INC2;                   0334
         LR    @10,@15                                             0334
         ALR   @10,MSGST                                           0334
         MVI   PARMAREA+24(@10),C' '                               0334
         MVC   PARMAREA-1(25,@10),INC2                             0334
*       MSGST=MSGST+LENGTH(INC2);                                  0335
         AL    MSGST,@CF00077                                      0335
*       IF PARMBRCH='1'B THEN                                      0336
         TM    PARMBRCH(@15),B'00100000'                           0336
         BNO   @RF00336                                            0336
*         DO;                                                      0337
*           PARMAREA(MSGST:MSGST+LENGTH(INC3))=INC3;               0338
         ALR   @15,MSGST                                           0338
         MVI   PARMAREA+6(@15),C' '                                0338
         MVC   PARMAREA-1(7,@15),INC3                              0338
*           MSGST=MSGST+LENGTH(INC3);                              0339
         AL    MSGST,@CF00082                                      0339
*         END;                                                     0340
*       ELSE                                                       0341
*         DO;                                                      0341
         B     @RC00336                                            0341
@RF00336 DS    0H                                                  0342
*           PARMAREA(MSGST:MSGST+LENGTH(INC4))=INC4;               0342
         L     @10,PARMPTR                                         0342
         LR    @01,@10                                             0342
         ALR   @01,MSGST                                           0342
         MVI   PARMAREA+4(@01),C' '                                0342
         MVC   PARMAREA-1(5,@01),INC4                              0342
*           MSGST=MSGST+LENGTH(INC4);                              0343
         AL    MSGST,@CF00085                                      0343
*           ABENDPTR=ADDR(PARMAREA)+MSGST-1;                       0344
         LA    ABENDPTR,PARMAREA(,@10)                             0344
         ALR   ABENDPTR,MSGST                                      0344
         BCTR  ABENDPTR,0                                          0344
*           PARMACDE=PARMACDE&'7FFFFFFF'X;                         0345
         L     @15,PARMACDE(,@10)                                  0345
         N     @15,@CF02186                                        0345
         ST    @15,PARMACDE(,@10)                                  0345
*           PARMACDE=PARMACDE/4096; /* SHIFT RIGHT 12 BITS           */
         LR    @00,@15                                             0346
         SRDA  @00,32                                              0346
         D     @00,@CF02187                                        0346
         ST    @01,PARMACDE(,@10)                                  0346
*           RESPECIFY                                              0347
*            (R6,                                                  0347
*             R7) RESTRICTED;                                      0347
*           R6=ABENDPTR;                                           0348
         LR    R6,ABENDPTR                                         0348
*           R7=ADDR(PARMACDE);                                     0349
         LA    R7,PARMACDE(,@10)                                   0349
*           GEN(UNPK  0(5,6),2(3,7));                              0350
         UNPK  0(5,6),2(3,7)
*           GEN(TR    1(3,6),TABLE);                               0351
         TR    1(3,6),TABLE
*           RESPECIFY                                              0352
*            (R6,                                                  0352
*             R7) UNRESTRICTED;                                    0352
*           ABENDPTR->PARMAB1=' ';                                 0353
         MVI   PARMAB1(ABENDPTR),C' '                              0353
*           ABENDPTR->PARMAB5=',';                                 0354
         MVI   PARMAB5(ABENDPTR),C','                              0354
*           MSGST=MSGST+ADDR(ABENDPTR->PARMAB5)-ADDR(ABENDPTR->PARMAB1)
*               +1;                                                0355
         LA    @10,PARMAB5(,ABENDPTR)                              0355
         ALR   @10,MSGST                                           0355
         SLR   @10,ABENDPTR                                        0355
         AL    @10,@CF00047                                        0355
         LR    MSGST,@10                                           0355
*         END;                                                     0356
*                                                                  0357
*/*                                                                0357
*           ×  THE FOLLOWING SECTION OF CODE WILL COMPLETE         0357
*           ×  MESSAGE CONSTRUCTION AND ISSUE THE MESSAGE TO       0357
*           ×  THE SYSTEM OPERATOR. IT WILL DO THE FOLLOWING:      0357
*           ×    1. INDICATE IF A DUMP WAS SUCCESSFULLY TAKEN.     0357
*           ×    2. INDICATE THAT REIPL IS NECESSARY.              0357
*           ×    3. SET UP THE LENGTH OF THE MESSAGE.              0357
*           ×    4. SET UP THE ROUT AND DESC CODES.                0357
*           ×    5. ISSUE THE WTO.                                 0357
*                                                                    */
*                                                                  0357
*       IF PARMDRTN=0 THEN                                         0357
@RC00336 L     @10,PARMPTR                                         0357
         L     @03,PARMDRTN(,@10)                                  0357
         LTR   @03,@03                                             0357
         BNZ   @RF00357                                            0357
*         DO;                                                      0358
*           PARMAREA(MSGST:MSGST+LENGTH(INC5))=INC5;               0359
         ALR   @10,MSGST                                           0359
         MVI   PARMAREA+7(@10),C' '                                0359
         MVC   PARMAREA-1(8,@10),INC5                              0359
*           MSGST=MSGST+LENGTH(INC5);                              0360
         AL    MSGST,@CF00088                                      0360
*         END;                                                     0361
*       PARMAREA(MSGST:MSGST+LENGTH(INC6))=INC6;                   0362
@RF00357 L     @10,PARMPTR                                         0362
         LR    @03,@10                                             0362
         ALR   @03,MSGST                                           0362
         MVI   PARMAREA+5(@03),C' '                                0362
         MVC   PARMAREA-1(6,@03),INC6                              0362
*       MSGST=MSGST+LENGTH(INC6);                                  0363
         AL    MSGST,@CF00091                                      0363
*       PARMAREA(MSGST:MSGST+LENGTH(INC7))=INC7;                   0364
         LR    @03,@10                                             0364
         ALR   @03,MSGST                                           0364
         MVI   PARMAREA+3(@03),C' '                                0364
         MVC   PARMAREA-1(4,@03),INC7                              0364
*       MSGST=MSGST-1;                                             0365
         BCTR  MSGST,0                                             0365
*       MSGLEN=MSGST;                                              0366
         STH   MSGST,MSGLEN(,@10)                                  0366
*       RESPECIFY                                                  0367
*        (R1) RESTRICTED;                                          0367
*       R1=ADDR(PARMAREA);                                         0368
         LA    R1,PARMAREA(,@10)                                   0368
*       GEN(WTO  MF=(E,(1)));                                      0369
         WTO  MF=(E,(1))
*       RESPECIFY                                                  0370
*        (R1) UNRESTRICTED;                                        0370
*     END;                                                         0371
*                                                                  0372
*/*                                                                0372
*       ×  THE FOLLOWING IS THE DEATH ROUTINE FOR MASTER REGION    0372
*       ×  INITIALIZATION.  IT WILL PUT THE MASTER SCHEDULER INTO A
*       ×  PERMANENT WAIT STATE. ALL OTHER TASKS, INCLUDING THE    0372
*       ×  COMMUNICATIONS TASK WILL REMAIN ACTIVE. THIS WILL       0372
*       ×  PERMIT THE MESSAGE JUST ISSUED TO REACH THE OPERATOR.   0372
*                                                                    */
*                                                                  0372
*   RESPECIFY                                                      0372
*    (R1) RESTRICTED;                                              0372
@RF00329 DS    0H                                                  0373
*   R1=ADDR(PARM);                                                 0373
         L     R1,PARMPTR                                          0373
*   R1->PARMCODE=0;                                                0374
         SLR   @10,@10                                             0374
         ST    @10,PARMCODE(,R1)                                   0374
*   GEN(WAIT  ECB=(1));                                            0375
         WAIT  ECB=(1)
*   RESPECIFY                                                      0376
*    (R1) UNRESTRICTED;                                            0376
         EJECT
*                                                                  0377
*/********************************************************************/
*/*                                                          @G29ANSS*/
*/* PROCEDURE - SSINTBLK                                     @G29ANSS*/
*/*                                                          @G29ANSS*/
*/* FUNCTION  - INITIALIZE THE SUBSYSTEM INTERFACE CONTROL   @G29ANSS*/
*/*             BLOCKS. (SSIB,SSOB,SSOB EXTENSION).          @G29ANSS*/
*/*             A SUBSYSTEM VERIFICATION FUNCTION CODE IS    @G29ANSS*/
*/*             USED.                                        @G29ANSS*/
*/*                                                          @G29ANSS*/
*/* INPUT     - SSIB,SSOB AND THE SSOB EXTENSION             @G29ANSS*/
*/*                                                          @G29ANSS*/
*/* OUTPUT    - SSIB,SSOB AND THE SSOB EXTENSION INITIALIZED @G29ANSS*/
*/*                                                          @G29ANSS*/
*/********************************************************************/
*                                                                  0377
*SSINTBLK:                                                         0377
*   PROC OPTIONS(NOSAVE,NOSAVEAREA);/*                       @G29ANSS*/
*                                                                  0377
@EL00001 L     @13,4(,@13)                                         0377
@EF00001 L     @00,@SIZDATD                                        0377
         LR    @01,@12                                             0377
         FREEMAIN R,LV=(0),A=(1)
@ER00001 BR    @14                                                 0377
SSINTBLK DS    0H                                                  0378
*   /*****************************************************************/
*   /*                                                               */
*   /* INITIALIZE THE SSIB                                   @G29ANSS*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0378
*   SSIBPTR=ADDR(SSIBAREA);         /* SET PTR TO SSIB       @G29ANSS*/
         LA    SSIBPTR,SSIBAREA                                    0378
*   SSIB=SSIB&&SSIB;                /* CLEAR THE SSIB        @G29ANSS*/
         XC    SSIB(36,SSIBPTR),SSIB(SSIBPTR)                      0379
*   SSIBLEN=LENGTH(SSIB);           /* LEN OF SSIB           @G29ANSS*/
         MVC   SSIBLEN(2,SSIBPTR),@CH01923                         0380
*   SSIBID=IDSSIB;                  /* CNTL BLOCK ID         @G29ANSS*/
*                                                                  0381
         MVC   SSIBID(4,SSIBPTR),@CC00105                          0381
*   /*****************************************************************/
*   /*                                                               */
*   /* INITIALIZE THE SSOB                                   @G29ANSS*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0382
*   SSOBINDV=ADDR(SSVS);            /* ADDR OF THE SSOB EXTEN      0382
*                                                            @G29ANSS*/
         LA    @10,SSVS                                            0382
         ST    @10,SSOBINDV                                        0382
*   SSOBID=IDSSOB;                  /* CNTL BLOCK ID         @G29ANSS*/
         MVC   SSOBID(4),@CC00103                                  0383
*   SSOBLEN=LENGTH(SSOB);           /* LEN OF SSOB           @G29ANSS*/
         MVC   SSOBLEN(2),@CH00964                                 0384
*   SSOBFUNC=SSOBVERS;              /* SUBSYSTEM VERIFICATION      0385
*                                      FUNCTION CODE         @G29ANSS*/
         MVC   SSOBFUNC(2),@CH00133                                0385
*   SSOBSSIB=SSIBPTR;               /* PTR TO SSIB           @G29ANSS*/
         ST    SSIBPTR,SSOBSSIB                                    0386
*   SSOBRETN=0;                     /* RET CODE FROM SUBSYSTEM     0387
*                                                            @G29ANSS*/
*                                                                  0387
         SLR   @10,@10                                             0387
         ST    @10,SSOBRETN                                        0387
*   /*****************************************************************/
*   /*                                                               */
*   /* INITIALIZE THE SSOB EXTENSION                         @G29ANSS*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0388
*   SSVS=SSVS&&SSVS;                /* CLEAR THE SSOB EXTEN  @G29ANSS*/
         XC    SSVS(8),SSVS                                        0388
*   SSVSLEN=LENGTH(SSVS);           /* LEN OF EXTEN          @G29ANSS*/
         MVC   SSVSLEN(2),@CH00088                                 0389
*   END SSINTBLK;                   /*                       @G29ANSS*/
@EL00002 DS    0H                                                  0390
@EF00002 DS    0H                                                  0390
@ER00002 BR    @14                                                 0390
         EJECT
*                                                                  0391
*/********************************************************************/
*/*                                                          @G29ANSS*/
*/* PROCEDURE - SUBSINIT                                     @G29ANSS*/
*/*                                                          @G29ANSS*/
*/* FUNCTION  - CALL THE SUBSYSTEM INTERFACE WHICH WILL      @G29ANSS*/
*/*             RETURN THE ADDRESS OF THE SUBSYSTEM'S SSCVT. @G29ANSS*/
*/*                                                          @G29ANSS*/
*/*             CHECK TO SEE IF THE SUBSYSTEM HAS BEEN       @G29ANSS*/
*/*             INITIALIZED YET. IF SO THEN ISSUE MESSAGE    @G29ANSS*/
*/*             IEE730I, THEN RETURN                         @G29ANSS*/
*/*                                                          @G29ANSS*/
*/*             ISSUE A BLDL MACRO TO SEE IF THE INIT ROUTINE@G29ANSS*/
*/*             FOR THE SUBSYSTEM CAN BE FOUND. MODULE       @G29ANSS*/
*/*             IEFJSSNT CONTAINS A LIST OF THE SUBSYSTEMS   @G29ANSS*/
*/*             AND THEIR INIT ROUTINES.                     @G29ANSS*/
*/*             IF THE ROUTINE CAN NOT BE FOUND THEN ISSUE   @G29ANSS*/
*/*             MESSAGE IEE859I.                             @G29ANSS*/
*/*                                                          @G29ANSS*/
*/*             CALL LINKINIT WHICH PASSES CONTROL TO THE    @G29ANSS*/
*/*             SUBSYSTEM INIT ROUTINE FOR EACH SUBSYSTEM.   @G29ANSS*/
*/*             PASS THE SUBSYSTEMS SSCVT TO THE INIT        @G29ANSS*/
*/*             ROUTINE.                                     @G29ANSS*/
*/*                                                          @G29ANSS*/
*/* INPUT     - BLDLLIST, SSIB, SSOB, SSOB EXTENSION,        @G29ANSS*/
*/*             PARM(THE ESTAE PARM LIST)                    @G29ANSS*/
*/*             JSSNTPTR - POINTS TO AN ENTRY IN IEFJSSNT.   @G29ANSS*/
*/*                                                          @G29ANSS*/
*/* OUTPUT    - THE SUBSYSTEM IS INITIALIZED OR MESSAGES     @G29ANSS*/
*/*             IEE730I AND IEE859I ARE ISSUED.              @G29ANSS*/
*/*                                                          @G29ANSS*/
*/********************************************************************/
*                                                                  0391
*SUBSINIT:                                                         0391
*   PROC OPTIONS(SAVE,SAVEAREA);    /*                       @G29ANSS*/
*                                                                  0391
SUBSINIT STM   @14,@12,12(@13)                                     0391
         ST    @13,@SA00003+4                                      0391
         LA    @14,@SA00003                                        0391
         ST    @14,8(,@13)                                         0391
         LR    @13,@14                                             0391
*   /*****************************************************************/
*   /*                                                               */
*   /* FILL IN THE SSIB                                      @G29ANSS*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0392
*   SSIBJBID=JSSNTNAM;              /* PUT NAME OF SUBSYSTEM IN SSIB
*                                                            @G29ANSS*/
         MVI   SSIBJBID+4(SSIBPTR),C' '                            0392
         MVC   SSIBJBID+5(3,SSIBPTR),SSIBJBID+4(SSIBPTR)           0392
         MVC   SSIBJBID(4,SSIBPTR),JSSNTNAM(JSSNTPTR)              0392
*   SSIBSSNM=IDMSTR;                /* PUT MASTERS NAME IN SSIB.   0393
*                                      COMMUNICATION IS WANTED WITH
*                                      THE MASTER SUBSYSTEM  @G29ANSS*/
         MVC   SSIBSSNM(4,SSIBPTR),@CC00101                        0393
*   RFY                                                            0394
*     R15 RSTD;                     /*                       @G29ANSS*/
*                                                                  0395
*   /*****************************************************************/
*   /*                                                               */
*   /* CALL SUBSYSTEM INTERFACE TO RETURN THE ADDRESS OF THE SSCVT SO*/
*   /* IT CAN BE PASSED TO THE SUBSYSTEM INITIALIZATION ROUTINE.     */
*   /*                                                       @G29ANSS*/
*   /* ? IEFSSREQ (SSOB);                                            */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0395
*/*                                                                  */
*/*  PASS CONTROL TO JOB ENTRY SUBSYSTEM TO                          */
*/*  PROCESS REQUEST -                                               */
*/*                                                                  */
*/*    INPUT - REGISTER 1 POINTS TO A ONE-                           */
*/*            WORD PARAMETER LIST WHICH                             */
*/*            POINTS TO THE SSOB                                    */
*/*                                                                  */
*                                                                  0395
*   CALL SSREQ(SSOB);               /*                       @G29ANSS*/
         LA    @14,SSOB                                            0395
         ST    @14,@AL00001                                        0395
         MVI   @AL00001,X'80'                                      0395
         L     @10,CVTPTR                                          0395
         L     @10,CVTJESCT(,@10)                                  0395
         L     @15,JESSSREQ(,@10)                                  0395
         LA    @01,@AL00001                                        0395
         BALR  @14,@15                                             0395
*   IF R15=SSRTOK&                  /* GOOD RETURN FROM SSI AND    0396
*                                                            @G29ANSS*/
*       SSOBRETN=SSVSSNAM THEN      /* GOOD RETURN FROM SUBSYSTEM? 0396
*                                                            @G29ANSS*/
         SLR   @14,@14                                             0396
         CR    R15,@14                                             0396
         BNE   @RF00396                                            0396
         C     @14,SSOBRETN                                        0396
         BNE   @RF00396                                            0396
*     DO;                           /* BOTH GOOD RETURN CODES      0397
*                                                            @G29ANSS*/
*       RFY                                                        0398
*         R15 UNRSTD;               /*                       @G29ANSS*/
*       SSCTPTR=SSVSSCTP;           /* ADDR OF SSCVT         @G29ANSS*/
*                                                                  0399
         L     SSCTPTR,SSVSSCTP                                    0399
*       /*************************************************************/
*       /*                                                           */
*       /* CHECK TO SEE IF THE SUBSYSTEM HAS ALREADY BEEN            */
*       /* INITITALIZED YET.                                 @G29ANSS*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0400
*       IF                          /* IS THE SUBSYSTEM INIT YET?  0400
*                                                            @G29ANSS*/
*           SSCTSSVT^=0×            /* IS THE SSVT PTR NON ZERO?   0400
*                                                            @G29ANSS*/
*           SSVSUPSS=ON             /* OR IS THIS SUBSYSTEM USING THE
*                                      PRIMARY / JES'S SERVICES?   0400
*                                                            @G29ANSS*/
*         THEN                      /*                       @G29ANSS*/
         C     @14,SSCTSSVT(,SSCTPTR)                              0400
         BNE   @RT00400                                            0400
         TM    SSVSUPSS,B'10000000'                                0400
         BNO   @RF00400                                            0400
@RT00400 DS    0H                                                  0401
*         CALL ISSUE730;            /* YES, ISSUE MSG IEE730I      0401
*                                                            @G29ANSS*/
         BAL   @14,ISSUE730                                        0401
*       ELSE                        /*                       @G29ANSS*/
*         DO;                       /*                       @G29ANSS*/
*                                                                  0402
         B     @RC00400                                            0402
@RF00400 DS    0H                                                  0403
*           /*********************************************************/
*           /*                                                       */
*           /* FIND THE SUBSYSTEM INITIALIZATION ROUTINE     @G29ANSS*/
*           /*                                                       */
*           /*********************************************************/
*                                                                  0403
*           BLDLNAME=JSSNTINT;      /* NAME OF SUBSYSTEM INIT ROUTINE
*                                                            @G29ANSS*/
         MVC   BLDLNAME(8),JSSNTINT(JSSNTPTR)                      0403
*           BLDLDATA=BLDLDATA&&BLDLDATA;/* CLEAR DATA FIELDS @G29ANSS*/
         XC    BLDLDATA(52),BLDLDATA                               0404
*           RFY                                                    0405
*             R15 RSTD;             /*                       @G29ANSS*/
*           GEN REFS(BLDLLIST) SETS(BLDLDATA);                     0406
*                                        /*                  @G29ANSS*/
         BLDL  0,BLDLLIST         FIND THE INIT ROUITNE        @G29ANSS
*           IF R15=0 THEN           /* WAS ROUTINE FOUND ?   @G29ANSS*/
         LTR   R15,R15                                             0407
         BNZ   @RF00407                                            0407
*             CALL LINKINIT;        /* YES, LINK TO THE INIT ROUTINE
*                                                            @G29ANSS*/
*                                                                  0408
         BAL   @14,LINKINIT                                        0408
*           /*********************************************************/
*           /*                                                       */
*           /* THE SUBSYSTEM INITIALIZATION ROUTINE WAS NOT FOUND.   */
*           /* ISSUE MESSAGE IEE859I.                        @G29ANSS*/
*           /*                                                       */
*           /*********************************************************/
*                                                                  0409
*           ELSE                    /* INIT ROUTINE NOT FOUND      0409
*                                                            @G29ANSS*/
*             DO;                   /* SET UP & ISSUE IEE859I      0409
*                                                            @G29ANSS*/
         B     @RC00407                                            0409
@RF00407 DS    0H                                                  0410
*               PARMAREA(1:LEN859)=WTO859(1:LEN859);/* MOVE MSG    0410
*                                                            @G29ANSS*/
         L     @14,PARMPTR                                         0410
         LH    @10,LEN859                                          0410
         BCTR  @10,0                                               0410
         EX    @10,@SM02236                                        0410
*               MSG859SS=JSSNTNAM;  /* PUT SUBSYSTEM NAME IN MSG   0411
*                                                            @G29ANSS*/
         MVC   MSG859SS(4,@14),JSSNTNAM(JSSNTPTR)                  0411
*               MSG859IM=JSSNTINT;  /* PUT SUBSYSTEM INITIALIZATION
*                                      ROUTINE NAME IN MESSAGE     0412
*                                                            @G29ANSS*/
         MVC   MSG859IM(8,@14),JSSNTINT(JSSNTPTR)                  0412
*               DO;                 /* WTOP MF(E,PARMAREA)           */
*                 RFY                                              0414
*                   GPR01P RSTD;    /* RESTRICT REG 1                */
*                 GPR01P=ADDR(PARMAREA);/* ADDRESS CONTROL PROGRAM 0415
*                                      LIST                          */
         LA    GPR01P,PARMAREA(,@14)                               0415
*                 SVC(35);          /* ISSUE WTO SVC                 */
         SVC   35                                                  0416
*                 RFY                                              0417
*                   GPR01P UNRSTD;  /* RELEASE REG 1                 */
*               END;                /* WTOP MF(E,PARMAREA) ISSUE MSG
*                                      IEE859I               @G29ANSS*/
*             END;                  /* OF INIT ROUTINE FOUND @G29ANSS*/
*         END;                      /* OF SUBSYSTEM NOT INIT YET   0420
*                                                            @G29ANSS*/
*     END;                          /* OF GOOD RET CODES FROM SSI  0421
*                                                            @G29ANSS*/
*   ELSE                                                           0422
*     ;                             /* THIS ELSE SHOULD NEVER      0422
*                                      EXECUTE. ONLY GOOD RETURN   0422
*                                      CODES ARE EXPECTED FROM SSI 0422
*                                      SINCE MODULE IEFJSINT JUST  0422
*                                      BUILT THE CNTRL BLKS THAT SSI
*                                      CHECKS                @G29ANSS*/
@RF00396 DS    0H                                                  0423
*   END SUBSINIT;                   /*                       @G29ANSS*/
@EL00003 L     @13,4(,@13)                                         0423
@EF00003 DS    0H                                                  0423
@ER00003 LM    @14,@12,12(@13)                                     0423
         BR    @14                                                 0423
         EJECT
*                                                                  0424
*/********************************************************************/
*/*                                                          @G29ANSS*/
*/* PROCEDURE - LINKINIT                                     @G29ANSS*/
*/*                                                          @G29ANSS*/
*/* FUNCTION  - . LINK TO THE SUBSYSTEM INITIALIZATION       @G29ANSS*/
*/*               ROUTINE PASSING THE SUBSYSTEM'S SSCVT.     @G29ANSS*/
*/*             . REGISTERS ARE SAVED IN THE ESTAE PARM LIST @G29ANSS*/
*/*               SO THEY CAN BE RESTORED ON RETRY IF THE    @G29ANSS*/
*/*               INIT ROUTINE ABENDS. ON RETRY, CONTINUE AS @G29ANSS*/
*/*               IF NOTHING HAPPENED. REGISTERS ARE         @G29ANSS*/
*/*               RESTORED BEFORE RETRY.                     @G29ANSS*/
*/*                                                          @G29ANSS*/
*/* INPUT     - BLDLLIST                                     @G29ANSS*/
*/*             PARM(THE ESTAE PARM LIST)                    @G29ANSS*/
*/*             JSSNTPTR - POINTS TO AN ENTRY IN IEFJSSNT.   @G29ANSS*/
*/*                                                          @G29ANSS*/
*/* OUTPUT    - THE SUBSYSTEM IS INITIALIZED OR MESSAGE      @G29ANSS*/
*/*             IEE730I IS ISSUED.                           @G29ANSS*/
*/*                                                          @G29ANSS*/
*/********************************************************************/
*                                                                  0424
*LINKINIT:                                                         0424
*   PROC OPTIONS(SAVE,SAVEAREA);    /*                       @G29ANSS*/
*                                                                  0424
LINKINIT STM   @14,@12,12(@13)                                     0424
         ST    @13,@SA00004+4                                      0424
         LA    @14,@SA00004                                        0424
         ST    @14,8(,@13)                                         0424
         LR    @13,@14                                             0424
*   /*****************************************************************/
*   /*                                                               */
*   /* LINK TO SUBSYSTEM INIT ROUTINE PASSING THE SUBSYSTEMS SSCVT.  */
*   /* SET UP FOR ERROR RECOVERY. R13 POINTS TO THE SAVE AREA BUILT  */
*   /* BY PLS. THE SUBSYSTEM INIT ROUTINE REQUIRES A SAVE AREA.      */
*   /*                                                       @G29ANSS*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0425
*   RFY                                                            0425
*    (R0,                                                          0425
*     R10,                                                         0425
*     R13,                                                         0425
*     R15) RSTD;                    /*                       @G29ANSS*/
*   STM(R0,R10,RG0TO10);            /* SAVE REGS IN ESTAE -  @G29ANSS*/
         L     @14,PARMPTR                                         0426
         STM   R0,R10,RG0TO10(@14)                                 0426
*   STM(R13,R15,RG13TO15);          /* PARM LIST             @G29ANSS*/
         STM   R13,R15,RG13TO15(@14)                               0427
*   RFY                                                            0428
*    (R0,                                                          0428
*     R10,                                                         0428
*     R13,                                                         0428
*     R15) UNRSTD;                  /*                       @G29ANSS*/
*   PARMSSI=ON;                     /* SET FOOTPRINT         @G29ANSS*/
         OI    PARMSSI(@14),B'00010000'                            0429
*   DO;                             /* LINK DE(BLDLNAME) DCB(0)    0430
*                                      PARAM(SSCT) ERRET(CONTSSIT)   */
*     I00601='80'X;                 /* EP/DE FLAG                    */
         MVI   I00601,X'80'                                        0431
*     I00602=ADDR(BLDLNAME);        /* ADDR OF EP/DE                 */
         LA    @10,BLDLNAME                                        0432
         STCM  @10,7,I00602                                        0432
*     I00604=0;                     /* DCB PTR                       */
         SLR   @10,@10                                             0433
         STCM  @10,7,I00604                                        0433
*     I00603='80'X;                 /* ERRET FLAG                    */
         MVI   I00603,X'80'                                        0434
*     I00605=ADDR(CONTSSIT);        /* ERRET PTR                     */
         LA    @10,CONTSSIT                                        0435
         ST    @10,I00605                                          0435
*     IOPTLIST(1)=ADDR(SSCT);       /* ADDR OF PROB PROG PARM        */
         ST    SSCTPTR,IOPTLIST                                    0436
*     IOPTLIST(1)=IOPTLIST(1)×'80000000'X;/* SET VL BIT              */
         L     @10,IOPTLIST                                        0437
         O     @10,@CF02148                                        0437
         ST    @10,IOPTLIST                                        0437
*     RESPECIFY                                                    0438
*      (GPR01P) RESTRICTED;                                        0438
*     GPR01P=ADDR(IOPTLIST);        /* ADDR OF OPTLIST               */
         LA    GPR01P,IOPTLIST                                     0439
*     RESPECIFY                                                    0440
*      (GPR15P) RESTRICTED;                                        0440
*     GPR15P=ADDR(I006);            /* ADDR OF LINK LIST             */
         LA    GPR15P,I006                                         0441
*     SVC(6);                       /* ISSUE LINK SVC                */
         SVC   6                                                   0442
*     RESPECIFY                                                    0443
*      (GPR01P) UNRESTRICTED;                                      0443
*     RESPECIFY                                                    0444
*      (GPR15P) UNRESTRICTED;                                      0444
*   END;                            /* LINK DE(BLDLNAME) DCB(0)    0445
*                                      PARAM(SSCT) ERRET(CONTSSIT) 0445
*                                      LINK TO THE SUBSYSTEM INIT  0445
*                                      ROUTINE               @G29ANSS*/
*                                                                  0445
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS IS THE RETRY POINT IF THE SUBSYSTEM INIT ROUTINE ABENDS. */
*   /* STAE10 PASSES CONTROL HERE. ENTRY POINT FROM LINK IF ANY      */
*   /* ERRORS OCCUR DOING THE LINK(I.E. MODULE NOT FOUND). ENTRY FROM*/
*   /* THE LINK SHOULD NEVER OCCUR SINCE THE BLDL HAS ALREADY FOUND  */
*   /* THE MODULE.                                           @G29ANSS*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0446
*CONTSSIT:                                                         0446
*   ;                               /*                       @G29ANSS*/
CONTSSIT DS    0H                                                  0447
*   PARMSSI=OFF;                    /* REMOVE THE FOOTPRINT  @G29ANSS*/
         L     @10,PARMPTR                                         0447
         NI    PARMSSI(@10),B'11101111'                            0447
*   END LINKINIT;                   /*                       @G29ANSS*/
@EL00004 L     @13,4(,@13)                                         0448
@EF00004 DS    0H                                                  0448
@ER00004 LM    @14,@12,12(@13)                                     0448
         BR    @14                                                 0448
         EJECT
*                                                                  0449
*/********************************************************************/
*/*                                                          @G29ANSS*/
*/* PROCEDURE - ISSUE730                                     @G29ANSS*/
*/*                                                          @G29ANSS*/
*/* FUNCTION  - ISSUE MESSAGE IEE730I                        @G29ANSS*/
*/*                                                          @G29ANSS*/
*/* INPUT     - PARMAREA - AREA TO HOLD THE MESSAGE          @G29ANSS*/
*/*             WTO730   - THE MESSAGE TEXT                  @G29ANSS*/
*/*             JSSNTPTR - POINTS TO AN ENTRY IN IEFJSSNT.   @G29ANSS*/
*/*                                                          @G29ANSS*/
*/* OUTPUT    - MESSAGE IEE730I IS ISSUED.                   @G29ANSS*/
*/*                                                          @G29ANSS*/
*/********************************************************************/
*                                                                  0449
*ISSUE730:                                                         0449
*   PROC OPTIONS(SAVE,NOSAVEAREA);  /*                       @G29ANSS*/
ISSUE730 STM   @14,@12,12(@13)                                     0449
*   PARMAREA(1:LEN730)=WTO730(1:LEN730);/* MOVE MSG          @G29ANSS*/
         L     @10,PARMPTR                                         0450
         LH    @04,LEN730                                          0450
         BCTR  @04,0                                               0450
         EX    @04,@SM02240                                        0450
*   MSG730SS=JSSNTNAM;              /* PUT SUBSYSTEM NAME IN MSG   0451
*                                                            @G29ANSS*/
         MVC   MSG730SS(4,@10),JSSNTNAM(JSSNTPTR)                  0451
*   DO;                             /* WTOP MF(E,PARMAREA)           */
*     RFY                                                          0453
*       GPR01P RSTD;                /* RESTRICT REG 1                */
*     GPR01P=ADDR(PARMAREA);        /* ADDRESS CONTROL PROGRAM LIST  */
         LA    GPR01P,PARMAREA(,@10)                               0454
*     SVC(35);                      /* ISSUE WTO SVC                 */
         SVC   35                                                  0455
*     RFY                                                          0456
*       GPR01P UNRSTD;              /* RELEASE REG 1                 */
*   END;                            /* WTOP MF(E,PARMAREA) ISSUE MSG
*                                      IEE730I               @G29ANSS*/
*   END ISSUE730;                   /*                       @G29ANSS*/
@EL00005 DS    0H                                                  0458
@EF00005 DS    0H                                                  0458
@ER00005 LM    @14,@12,12(@13)                                     0458
         BR    @14                                                 0458
         EJECT
*   DECLARE                         /* GENERAL PURPOSE REGISTERS     */
*     GPR00F FIXED(31) REG(0),                                     0459
*     GPR01F FIXED(31) REG(1),                                     0459
*     GPR15F FIXED(31) REG(15),                                    0459
*     GPR00P PTR(31) REG(0),                                       0459
*     GPR01P PTR(31) REG(1),                                       0459
*     GPR14P PTR(31) REG(14),                                      0459
*     GPR15P PTR(31) REG(15);                                      0459
*   DCL                                                            0460
*     1 I006 DEF(ILIST),            /* DEFINE LIST                   */
*      2 I00601 CHAR(1),            /* EP/DE FLAG                    */
*      2 I00602 PTR(24),            /* EP/DE PTR                     */
*      2 I00603 CHAR(1),            /* ERRET FLAG                    */
*      2 I00604 PTR(24),            /* DCB PTR                       */
*      2 I00605 PTR(31);            /* ERRET PTR                     */
*   DECLARE                                                        0461
*     ILIST CHAR(12) BDY(DWORD);    /* STANDARD LIST                 */
*   DECLARE                         /* COMMON VARIABLES              */
*     I256C CHAR(256) BASED,                                       0462
*     I031F FIXED(31) BASED,                                       0462
*     I031P PTR(31) BASED,                                         0462
*     I015F FIXED(15) BASED,                                       0462
*     I015P PTR(15) BASED,                                         0462
*     I008P PTR(8) BASED,                                          0462
*     I001C CHAR(1) BASED;                                         0462
*   DECLARE                                                        0463
*     IOPTLIST(1) PTR(31) BDY(WORD);/* OPTION LIST ARRAY             */
*   END IEEMB860                    /*                       @G29ANSS*/
*                                                                  0464
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (CVT     )                                       */
*/*%INCLUDE SYSLIB  (IEEBASEA)                                       */
*/*%INCLUDE SYSLIB  (IEFPTRS )                                       */
*/*%INCLUDE SYSLIB  (IKJTCB  )                                       */
*/*%INCLUDE SYSLIB  (IEZJSCB )                                       */
*/*%INCLUDE SYSLIB  (IHASDWA )                                       */
*/*%INCLUDE SYSLIB  (IHASUBIT)                                       */
*/*%INCLUDE SYSLIB  (IEFJSSIB)                                       */
*/*%INCLUDE SYSLIB  (IEFJESCT)                                       */
*/*%INCLUDE SYSLIB  (IEFJSSOB)                                       */
*/*%INCLUDE SYSLIB  (IEFJSCVT)                                       */
*                                                                  0464
*       ;                                                          0464
@DATA    DS    0H
@CH00133 DC    H'15'
@CH00964 DC    H'20'
@CH01923 DC    H'36'
@CH00194 DC    H'60'
@CH02185 DC    XL2'8000'
@SM02224 MVC   PARMAREA(0,@10),ELIST
@SM02226 MVC   PARMAREA(0,@10),ALIST
@SM02228 MVC   PARMAREA(0,@14),ALIST
@SM02234 MVC   PARMAREA(0,@14),SLIST
@SM02236 MVC   PARMAREA(0,@14),WTO859
@SM02240 MVC   PARMAREA(0,@10),WTO730
@DATD    DSECT
         DS    0F
@SA00001 DS    18F
@SA00003 DS    18F
@SA00004 DS    18F
@AL00001 DS    1A
IEEMB860 CSECT
         DS    0F
@CF00047 DC    F'1'
@CH00047 EQU   @CF00047+2
@CF00094 DC    F'4'
@CF00085 DC    F'5'
@CF00091 DC    F'6'
@CF00082 DC    F'7'
@CF00088 DC    F'8'
@CH00088 EQU   @CF00088+2
@CF00033 DC    F'12'
@CF00077 DC    F'25'
@CF00131 DC    F'80'
@CF00097 DC    F'128'
@CF02187 DC    F'4096'
@CF02148 DC    XL4'80000000'
@CF02186 DC    XL4'7FFFFFFF'
@DATD    DSECT
         DS    0D
RACECB   DS    F
RACTCB   DS    A
ASMECB   DS    F
ASMPARM  DS    AL4
         ORG   ASMPARM
ASMHIFLG DS    CL1
@NM00001 DS    CL3
         ORG   ASMPARM+4
SDWAPTR  DS    A
PARMPTR  DS    A
SMFTCB   DS    A
BLDLLIST DS    CL64
         ORG   BLDLLIST
BLDLNUM  DS    FL2
BLDLLEN  DS    FL2
BLDLENTR DS    CL60
         ORG   BLDLENTR
BLDLNAME DS    CL8
BLDLDATA DS    CL52
         ORG   BLDLLIST+64
SSIBAREA DS    CL36
SSOB     DS    CL20
         ORG   SSOB
SSOBID   DS    CL4
SSOBLEN  DS    FL2
SSOBFUNC DS    FL2
SSOBSSIB DS    AL4
SSOBRETN DS    AL4
SSOBINDV DS    AL4
         ORG   SSOB+20
SSVS     DS    CL8
         ORG   SSVS
SSVSLEN  DS    FL2
SSVSFLG1 DS    BL1
         ORG   SSVSFLG1
SSVSUPSS DS    BL1
@NM00107 EQU   SSVSFLG1+0
         ORG   SSVS+3
SSVSFLG2 DS    BL1
SSVSSCTP DS    AL4
         ORG   SSVS+8
         DS    CL4
ILIST    DS    CL12
IOPTLIST DS    1A
IEEMB860 CSECT
         DS    0F
@SIZDATD DC    AL1(230)
         DC    AL3(@ENDDATD-@DATD)
@CV00035 DC    V(ICFBIE00)
         DS    0D
@CC00111 DC    C'IEFJSSNT'
@CC00101 DC    C'MSTR'
@CC00103 DC    C'SSOB'
@CC00105 DC    C'SSIB'
@CB00206 DC    X'FFFFFFFF'
PATCH    DC    CL130'*** IEEMB860 PATCH AREA ***'
INC2     DC    CL25'IEE479W MASTER SCHEDULER '
INC3     DC    CL7'FAILED,'
INC4     DC    CL5'ABEND'
INC5     DC    CL8' DUMPED,'
INC6     DC    CL6' REIPL'
INC7     DC    X'80004040'
         DS    CL3
I03508   DS    CL71
         ORG   I03508
I0350801 DC    H'67'
I0350802 DC    B'1000000000000000'
I0350803 DC    CL63'IEE858I ONLY SYSGENED SUBSYSTEMS AVALIABLE - IEFJSSC
               NT NOT FOUND'
I0350804 DC    B'0001000000000000'
I0350805 DC    B'0100000000000000'
         ORG   I03508+71
IEEMB860 CSECT
*                                                         /* @G29ANSS*/
ELIST    ESTAE MF=L
         DS    0H
ELEN     DC    AL2(*-ELIST)
ALIST    ATTACH SZERO=NO,JSTCB=YES,KEY=0,SM=SUPV,SVAREA=YES,SF=L
         DS    0H
ALEN     DC    AL2(*-ALIST)
SLIST    SDUMP HDR='IEEMB860',SDATA=(SQA,PSA,NUC,LSQA,RGN,LPA,TRT,CSA),*
               MF=L                                            @YM3522P
         DS    0H
SLEN     DC    AL2(*-SLIST)
PLIST    POST  ASCB=0,ERRET=0,MF=L                             @G29ANSS
         DS    0H                                              @G29ANSS
PLEN     DC    AL2(*-PLIST)                                    @G29ANSS
WTO859   WTO   'IEE859I SUBSYSTEM      NOT INITIALIZED -          NOT FX
               OUND',DESC=(4),ROUTCDE=(2),MF=L                 @G29ANSS
         DS    0H                                              @G29ANSS
LEN859   DC    AL2(*-WTO859)                                   @G29ANSS
WTO730   WTO   'IEE730I DUPLICATE      SUBSYSTEM NOT INITIALIZED',     X
               DESC=(4),ROUTCDE=(2),MF=L                       @G29ANSS
         DS    0H                                              @G29ANSS
LEN730   DC    AL2(*-WTO730)                                   @G29ANSS
         DS    0F
LRECINF  DC    CL8'IEEMB860'
         DC    CL8'IEEMB860'
         DC    CL8'        '
TABLE    EQU   *-240
         DC    C'0123456789ABCDEF'
@DATD    DSECT
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
IEEMB860 CSECT
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
SSIBPTR  EQU   @06
JSSNTPTR EQU   @05
SSCTPTR  EQU   @02
SMFPTR   EQU   @06
ABENDPTR EQU   @03
MSGST    EQU   @02
R14      EQU   @14
R0       EQU   @00
R1       EQU   @01
R2       EQU   @02
R3       EQU   @03
R4       EQU   @04
R5       EQU   @05
R6       EQU   @06
R7       EQU   @07
R10      EQU   @10
R11      EQU   @11
R12      EQU   @12
R13      EQU   @13
R15      EQU   @15
GPR01F   EQU   @01
GPR00F   EQU   @00
GPR00P   EQU   @00
GPR01P   EQU   @01
GPR15F   EQU   @15
GPR14P   EQU   @14
GPR15P   EQU   @15
CVTPTR   EQU   16
ASIR     EQU   0
PARM     EQU   0
PARMCODE EQU   PARM
PARMACDE EQU   PARM+4
PARMDRTN EQU   PARM+8
PARMREGB EQU   PARM+12
PARMREGC EQU   PARM+16
PARMFLGS EQU   PARM+20
PARMDUMP EQU   PARMFLGS
PARMABND EQU   PARMFLGS
PARMBRCH EQU   PARMFLGS
PARMSSI  EQU   PARMFLGS
PARMREGS EQU   PARM+24
RG0TO10  EQU   PARMREGS
RG13TO15 EQU   PARMREGS+44
PARMAREA EQU   PARM+80
MSGLEN   EQU   PARMAREA
MSGFLG   EQU   PARMAREA+2
MSGBAS   EQU   PARMAREA+4
MSG859SS EQU   MSGBAS+18
MSG730SS EQU   MSG859SS
MSG859IM EQU   MSGBAS+41
ABND     EQU   0
PARMAB1  EQU   ABND
PARMAB5  EQU   ABND+4
COMMBUFF EQU   0
COMMNEXT EQU   COMMBUFF
COMMLEN  EQU   COMMBUFF+4
SMFPARM  EQU   0
SMFTCBP  EQU   SMFPARM
SMFWECBP EQU   SMFPARM+4
SMFIECBP EQU   SMFPARM+8
SMFWECB  EQU   SMFPARM+12
SMFIECB  EQU   SMFPARM+16
JSSNTENT EQU   0
JSSNTNAM EQU   JSSNTENT
JSSNTINT EQU   JSSNTENT+4
CVTMAP   EQU   0
CVTTCBP  EQU   CVTMAP
CVTDAR   EQU   CVTMAP+72
CVTFLGS1 EQU   CVTDAR
CVTDCB   EQU   CVTMAP+116
CVTIERLC EQU   CVTMAP+144
CVTMSER  EQU   CVTMAP+148
CVTOPTA  EQU   CVTMAP+182
CVTOPTB  EQU   CVTMAP+183
CVTGTF   EQU   CVTMAP+236
CVTGTFST EQU   CVTGTF
CVTGTFS  EQU   CVTGTFST
CVTSTATE EQU   CVTGTFST
CVTTMODE EQU   CVTGTFST
CVTFORM  EQU   CVTGTFST
CVTAQAVT EQU   CVTMAP+240
CVTTCMFG EQU   CVTAQAVT
CVTVOLM2 EQU   CVTMAP+244
CVTTATA  EQU   CVTVOLM2
CVTTSKS  EQU   CVTTATA
CVTVOLF2 EQU   CVTTSKS
CVTTAT   EQU   CVTTATA+1
CVTATER  EQU   CVTMAP+248
CVTEXT1  EQU   CVTMAP+252
CVTPURG  EQU   CVTMAP+260
CVTQMSG  EQU   CVTMAP+268
CVTDMSR  EQU   CVTMAP+272
CVTRSV37 EQU   CVTDMSR
CVTDMSRF EQU   CVTRSV37
CVTJESCT EQU   CVTMAP+296
CVTERPV  EQU   CVTMAP+316
CVTINTLA EQU   CVTMAP+320
CVTAPF   EQU   CVTMAP+324
CVTEXT2  EQU   CVTMAP+328
CVTHJES  EQU   CVTMAP+332
CVTPGSIA EQU   CVTMAP+348
CVTA1F1  EQU   CVTMAP+356
CVTSYSK  EQU   CVTMAP+357
CVTVOLM1 EQU   CVTMAP+380
CVTVOLF1 EQU   CVTVOLM1
CVTATMCT EQU   CVTMAP+388
CVTXTNT1 EQU   0
CVTXTNT2 EQU   0
CVTDSSV  EQU   CVTXTNT2
CVTFLGBT EQU   CVTXTNT2+5
CVTQID   EQU   CVTXTNT2+24
CVTICB   EQU   CVTXTNT2+48
CVTRV400 EQU   CVTXTNT2+52
CVTRV409 EQU   CVTXTNT2+53
CVTATCVT EQU   CVTXTNT2+64
CVTRV429 EQU   CVTXTNT2+84
CVTRV438 EQU   CVTXTNT2+85
CVTRV457 EQU   CVTXTNT2+112
CVTRV466 EQU   CVTXTNT2+113
CVTFIX   EQU   0
CVTRELNO EQU   CVTFIX+252
BASE     EQU   0
@NM00010 EQU   BASE+13
BALGSTAT EQU   BASE+24
BALOG    EQU   BALGSTAT+4
BASFL    EQU   BASE+36
BARSW    EQU   BASFL
MSLOGST  EQU   BASE+46
BASPBYTE EQU   BASE+47
BAMASCH  EQU   BASPBYTE
BAMONITR EQU   BASE+56
MSCOMMND EQU   BASE+92
@NM00032 EQU   BASE+104
MSLGCLOZ EQU   BASE+108
MSCLOSSW EQU   MSLGCLOZ
MSLGWLOG EQU   BASE+112
MSWLOGSW EQU   MSLGWLOG
MSLGWTR  EQU   BASE+116
MSWTRSW  EQU   MSLGWTR
MSLGSTRT EQU   BASE+120
MSSTRTSW EQU   MSLGSTRT
MS1BASEX EQU   BASE+136
BASES01  EQU   0
MSNTAL   EQU   BASES01
MSSSB    EQU   BASES01+1
MSBTN    EQU   MSSSB
MSPFG    EQU   BASES01+2
MSECBFL  EQU   BASES01+3
MSTUS    EQU   BASES01+4
MSSSA    EQU   MSTUS
MSINLSW  EQU   MSSSA
MSREOF   EQU   MSSSA
MSNWP    EQU   MSSSA
MSFHF    EQU   BASES01+5
TCBASCB  EQU   0
TCBPTR   EQU   TCBASCB+4
TCBFIX   EQU   0
TCBFRS   EQU   TCBFIX
TCB      EQU   0
TCBPIE   EQU   TCB+4
TCBPMASK EQU   TCBPIE
TCBCMP   EQU   TCB+16
TCBCMPF  EQU   TCBCMP
TCBCPP   EQU   TCBCMPF
TCBSTCC  EQU   TCBCMPF
TCBCDBL  EQU   TCBCMPF
TCBCWTO  EQU   TCBCMPF
TCBCIND  EQU   TCBCMPF
TCBCMSG  EQU   TCBCMPF
TCBTRN   EQU   TCB+20
TCBABF   EQU   TCBTRN
TCBMSS   EQU   TCB+24
TCBPKF   EQU   TCB+28
TCBFLGS  EQU   TCB+29
TCBFLGS1 EQU   TCBFLGS
TCBFLGS2 EQU   TCBFLGS+1
TCBFLGS3 EQU   TCBFLGS+2
TCBFLGS4 EQU   TCBFLGS+3
TCBFLGS5 EQU   TCBFLGS+4
TCBABWF  EQU   TCBFLGS5
TCBJPQ   EQU   TCB+44
TCBPURGE EQU   TCBJPQ
TCBGRS   EQU   TCB+48
TCBFSA   EQU   TCB+112
TCBTME   EQU   TCB+120
TCBJSTCB EQU   TCB+124
TCBOTC   EQU   TCB+132
TCBTSFLG EQU   TCB+148
TCBTSTSK EQU   TCBTSFLG
TCBSTAB  EQU   TCB+160
TCBNSTAE EQU   TCBSTAB
TCBTCT   EQU   TCB+164
TCBTCTGF EQU   TCBTCT
TCBSCNDY EQU   TCB+172
TCBNDSP  EQU   TCBSCNDY
TCBNDSP1 EQU   TCBNDSP+1
TCBNDSP2 EQU   TCBNDSP+2
TCBNDSP3 EQU   TCBNDSP+3
TCBJSCB  EQU   TCB+180
TCBRECDE EQU   TCBJSCB
TCBEXT1  EQU   TCB+196
TCBBITS  EQU   TCB+200
TCBNDSP4 EQU   TCBBITS
TCBNDSP5 EQU   TCBBITS+1
TCBFLGS6 EQU   TCBBITS+2
TCBFLGS7 EQU   TCBBITS+3
TCBDAR   EQU   TCB+204
TCBDARC  EQU   TCBDAR
TCBEXT2  EQU   TCB+208
TCBXSCT  EQU   TCB+240
TCBXSCT1 EQU   TCBXSCT
TCBFOE   EQU   TCB+244
TCBESTAE EQU   TCB+264
TCBESTRM EQU   TCBESTAE+1
TCBFBYT1 EQU   TCB+276
TCBFBYT2 EQU   TCB+277
TCBRV124 EQU   TCB+278
TCBRV133 EQU   TCB+279
TCBXTNT2 EQU   0
TCBGTF   EQU   TCBXTNT2
TCBTFLG  EQU   TCBGTF
TCBRV146 EQU   TCBXTNT2+28
TCBRV155 EQU   TCBXTNT2+29
TCBRV164 EQU   TCBXTNT2+30
TCBRV173 EQU   TCBXTNT2+31
IEZJSCB  EQU   0
JSCBSEC1 EQU   IEZJSCB+188
JSCHPCE  EQU   JSCBSEC1+4
JSCBTCBP EQU   JSCBSEC1+20
JSCBDCB  EQU   JSCBSEC1+36
JSCBOPTS EQU   JSCBSEC1+48
JSCBSWT1 EQU   JSCBSEC1+55
JSCBWTP  EQU   JSCBSEC1+64
JSCBWTFG EQU   JSCBWTP
JSCBEND1 EQU   IEZJSCB+260
SDWA     EQU   0
SDWAPARM EQU   SDWA
SDWAFIOB EQU   SDWA+4
SDWAABCC EQU   SDWAFIOB
SDWACMPF EQU   SDWAABCC
SDWAREQ  EQU   SDWACMPF
SDWACTL1 EQU   SDWA+8
SDWACMKA EQU   SDWACTL1
SDWAMWPA EQU   SDWACTL1+1
SDWAPMKA EQU   SDWACTL1+4
SDWACTL2 EQU   SDWA+16
SDWACMKP EQU   SDWACTL2
SDWAMWPP EQU   SDWACTL2+1
SDWAPMKP EQU   SDWACTL2+4
SDWAGRSV EQU   SDWA+24
SDWANAME EQU   SDWA+88
SDWAEC1  EQU   SDWA+104
SDWAEMK1 EQU   SDWAEC1
SDWAMWP1 EQU   SDWAEC1+1
SDWAINT1 EQU   SDWAEC1+2
SDWANXT1 EQU   SDWAEC1+4
SDWAAEC1 EQU   SDWA+112
SDWAILC1 EQU   SDWAAEC1+1
SDWAINC1 EQU   SDWAAEC1+2
SDWAICD1 EQU   SDWAINC1+1
SDWAEC2  EQU   SDWA+120
SDWAEMK2 EQU   SDWAEC2
SDWAMWP2 EQU   SDWAEC2+1
SDWAINT2 EQU   SDWAEC2+2
SDWANXT2 EQU   SDWAEC2+4
SDWAAEC2 EQU   SDWA+128
SDWAILC2 EQU   SDWAAEC2+1
SDWAINC2 EQU   SDWAAEC2+2
SDWAICD2 EQU   SDWAINC2+1
SDWASRSV EQU   SDWA+136
SDWASR01 EQU   SDWASRSV+4
SDWAIDNT EQU   SDWA+200
SDWAMCH  EQU   SDWA+204
SDWASTCK EQU   SDWAMCH
SDWAMCHI EQU   SDWAMCH+8
SDWAMCHS EQU   SDWAMCHI
SDWAMCHD EQU   SDWAMCHI+1
SDWARSR1 EQU   SDWAMCH+12
SDWARSR2 EQU   SDWAMCH+13
SDWAFLGS EQU   SDWA+232
SDWAERRA EQU   SDWAFLGS
SDWAMCHK EQU   SDWAERRA
SDWAERRB EQU   SDWAFLGS+1
SDWAERRC EQU   SDWAFLGS+2
SDWAPERC EQU   SDWAERRC
SDWAERRD EQU   SDWAFLGS+3
SDWAIOFS EQU   SDWA+238
SDWARTYA EQU   SDWA+240
SDWACPUA EQU   SDWA+248
SDWAPARQ EQU   SDWA+252
SDWARCDE EQU   SDWAPARQ
SDWAACF2 EQU   SDWAPARQ+1
SDWARCRD EQU   SDWAACF2
SDWAUPRG EQU   SDWAACF2
SDWAFREE EQU   SDWAACF2
SDWAACF3 EQU   SDWAPARQ+2
SDWAACF4 EQU   SDWAPARQ+3
SDWALKWA EQU   SDWA+256
SDWALKWS EQU   SDWALKWA
SDWARECP EQU   SDWA+292
SDWASNPA EQU   SDWA+320
SDWADUMP EQU   SDWASNPA
SDWADPFS EQU   SDWADUMP+1
SDWADDAT EQU   SDWASNPA+4
SDWASDAT EQU   SDWADDAT
SDWAPDAT EQU   SDWADDAT+2
SDWADPSA EQU   SDWA+328
SDWADPSL EQU   SDWADPSA
SDWARA   EQU   SDWA+400
SDWADPVA EQU   SDWARA+2
SUBITS   EQU   0
SUBYTE1  EQU   SUBITS
SUBYTE2  EQU   SUBITS+1
SUBYTE3  EQU   SUBITS+2
SUBYTE4  EQU   SUBITS+3
SU29BIT  EQU   SUBYTE4
SUBYTE5  EQU   SUBITS+4
SUBYTE6  EQU   SUBITS+5
SUBYTE7  EQU   SUBITS+6
SUBYTE8  EQU   SUBITS+7
SUBYTE9  EQU   SUBITS+8
SUBYTE10 EQU   SUBITS+9
SUBYTE11 EQU   SUBITS+10
SUBYTE12 EQU   SUBITS+11
SUBYTE13 EQU   SUBITS+12
SSIB     EQU   0
SSIBID   EQU   SSIB
SSIBLEN  EQU   SSIB+4
SSIBFLG1 EQU   SSIB+6
SSIBSSNM EQU   SSIB+8
SSIBJBID EQU   SSIB+12
JESCT    EQU   0
JESWAA   EQU   JESCT+8
JESSSREQ EQU   JESCT+20
JESPJESN EQU   JESCT+28
JESALLOC EQU   JESCT+32
JESUNALC EQU   JESCT+36
JESCATL  EQU   JESCT+40
SSREQ    EQU   0
SSCT     EQU   0
SSCTFLG1 EQU   SSCT+12
SSCTSSVT EQU   SSCT+16
I256C    EQU   0
IEFAB4F5 EQU   0
IEFBB410 EQU   0
IEFW21SD EQU   0
I001C    EQU   0
I008P    EQU   0
I015F    EQU   0
I015P    EQU   0
I031F    EQU   0
I031P    EQU   0
SWAMGR   EQU   0
CVTS01   EQU   CVTPGSIA
CVTLPDIA EQU   CVTS01+12
CVTDIRST EQU   CVTLPDIA
CVTSLIDA EQU   CVTS01+24
CVTCTLFG EQU   CVTS01+50
CVTASVT  EQU   CVTS01+208
CVTRV210 EQU   CVTS01+424
CVTRV219 EQU   CVTS01+425
CVTRV228 EQU   CVTS01+426
CVTRV237 EQU   CVTS01+427
CVTMFRTR EQU   CVTS01+452
CVTRV262 EQU   CVTS01+468
CVTRV271 EQU   CVTS01+469
CVTRV280 EQU   CVTS01+470
CVTRV289 EQU   CVTS01+471
CVTGSDA  EQU   CVTS01+600
CVTIHASU EQU   CVTS01+696
JSCBSEC2 EQU   JSCBEND1
JSCBSEC3 EQU   JSCBEND1
JSCBJCT  EQU   JSCBSEC3
JSCBJCTA EQU   JSCBJCT+1
JSCBASID EQU   JSCBSEC3+8
JSCBFBYT EQU   JSCBSEC3+10
JSCBJNL  EQU   JSCBSEC3+28
JSCBJJSB EQU   JSCBJNL
JSCBSUB  EQU   JSCBSEC3+40
JSCSCT   EQU   JSCBSEC3+68
JSCBACT  EQU   JSCBSEC3+88
JSCRSV45 EQU   JSCBSEC3+112
JSCRSV46 EQU   JSCRSV45
JSCRSV47 EQU   JSCRSV45+2
I006     EQU   ILIST
I00601   EQU   I006
I00602   EQU   I006+1
I00603   EQU   I006+4
I00604   EQU   I006+5
I00605   EQU   I006+8
ASVTPTR  EQU   CVTASVT
*                                      START UNREFERENCED COMPONENTS
JSCBEND3 EQU   JSCBSEC3+120
JSCRSV52 EQU   JSCBSEC3+116
JSCRSV51 EQU   JSCRSV47+1
JSCRSV50 EQU   JSCRSV47
JSCRSV49 EQU   JSCRSV46+1
JSCRSV48 EQU   JSCRSV46
JSCRSV44 EQU   JSCBSEC3+108
JSCRSV43 EQU   JSCBSEC3+104
JSCRSV42 EQU   JSCBSEC3+100
JSCBASWA EQU   JSCBSEC3+96
JSCBUFPT EQU   JSCBSEC3+92
JSCBSWSP EQU   JSCBSEC3+87
JSCRSV33 EQU   JSCBSEC3+86
JSCDDNUM EQU   JSCBSEC3+84
JSCRSV53 EQU   JSCBSEC3+82
JSCDDNNO EQU   JSCBSEC3+80
JSCBVATA EQU   JSCBSEC3+76
JSCTMCOR EQU   JSCBSEC3+72
JSCSCTP  EQU   JSCSCT+1
JSCRSV55 EQU   JSCSCT
JSCRSV54 EQU   JSCBSEC3+64
JSCDSABQ EQU   JSCBSEC3+60
JSCBSSIB EQU   JSCBSEC3+56
JSCBFRBA EQU   JSCBSEC3+48
JSCRSV28 EQU   JSCBSEC3+46
JSCBSONO EQU   JSCBSEC3+44
JSCBSUBA EQU   JSCBSUB+1
JSCRSV31 EQU   JSCBSUB
JSCBSMLR EQU   JSCBSEC3+36
JSCBJNLR EQU   JSCBSEC3+32
JSCBJNLA EQU   JSCBJNL+1
JSCBJSBT EQU   JSCBJJSB
JSCBJSBX EQU   JSCBJJSB
JSCBJSBA EQU   JSCBJJSB
JSCBJSBI EQU   JSCBJJSB
@NM00056 EQU   JSCBJJSB
JSCBJNLE EQU   JSCBJJSB
JSCBJNLF EQU   JSCBJJSB
JSCBJNLN EQU   JSCBJJSB
@NM00055 EQU   JSCBSEC3+24
JSCBJRBA EQU   JSCBSEC3+16
JSCBIECB EQU   JSCBSEC3+12
JSCBRV08 EQU   JSCBSEC3+11
JSCBRV07 EQU   JSCBFBYT
JSCBRV06 EQU   JSCBFBYT
JSCBRV05 EQU   JSCBFBYT
JSCBRV04 EQU   JSCBFBYT
JSCBRV03 EQU   JSCBFBYT
JSCBRV02 EQU   JSCBFBYT
JSCBADSP EQU   JSCBFBYT
JSCBRV01 EQU   JSCBFBYT
JSCBTJID EQU   JSCBASID
JSCBPSCB EQU   JSCBSEC3+4
JSCJCTP  EQU   JSCBJCTA
JSCRSV24 EQU   JSCBJCT
JSCBEND2 EQU   JSCBSEC2
CVTRV628 EQU   CVTS01+728
CVTRV627 EQU   CVTS01+724
CVTRV626 EQU   CVTS01+720
CVTRV625 EQU   CVTS01+716
CVTRV624 EQU   CVTS01+712
CVTRV623 EQU   CVTS01+708
CVTRV622 EQU   CVTS01+704
CVTRV621 EQU   CVTS01+700
CVTSUSP  EQU   CVTS01+692
CVTT6SVC EQU   CVTS01+688
CVTCDAL  EQU   CVTS01+684
CVTTCTL  EQU   CVTS01+680
CVTRSUME EQU   CVTS01+676
CVTJTERM EQU   CVTS01+672
CVTASMRM EQU   CVTS01+668
CVTTCASP EQU   CVTS01+664
CVT0PT03 EQU   CVTS01+660
CVT0PT0E EQU   CVTS01+656
CVTRV609 EQU   CVTS01+652
CVTCGK   EQU   CVTS01+648
CVTRAC   EQU   CVTS01+644
CVTRV606 EQU   CVTS01+640
CVTRV605 EQU   CVTS01+636
CVTRV604 EQU   CVTS01+632
CVTEFF02 EQU   CVTS01+628
CVTCBBR  EQU   CVTS01+624
CVTSSCR  EQU   CVTS01+620
CVTEVENT EQU   CVTS01+616
CVTCRCA  EQU   CVTS01+612
CVTTPIO  EQU   CVTS01+608
CVTADV   EQU   CVTS01+604
CVTGSDAB EQU   CVTGSDA
CVTQV3   EQU   CVTS01+596
CVTQV2   EQU   CVTS01+592
CVTQV1   EQU   CVTS01+588
CVTRPT   EQU   CVTS01+584
CVTSSRB  EQU   CVTS01+580
CVTCSDRL EQU   CVTS01+576
CVTEXP1  EQU   CVTS01+572
CVTRMPMT EQU   CVTS01+568
CVTRMPTT EQU   CVTS01+564
CVTVPSA  EQU   CVTS01+560
CVTVSTOP EQU   CVTS01+556
CVTGTFR8 EQU   CVTS01+552
CVTQUIT  EQU   CVTS01+548
CVTVACR  EQU   CVTS01+544
CVTWTCB  EQU   CVTS01+540
CVTSTPRS EQU   CVTS01+536
CVT0PT02 EQU   CVTS01+532
CVTDARCM EQU   CVTS01+528
CVTIRECM EQU   CVTS01+524
CVTJRECM EQU   CVTS01+520
CVTVEMS0 EQU   CVTS01+516
CVTSPFRR EQU   CVTS01+512
CVTRLSTG EQU   CVTS01+508
CVT0TC0A EQU   CVTS01+504
CVTGMBR  EQU   CVTS01+500
CVTLFRM  EQU   CVTS01+496
CVTRMBR  EQU   CVTS01+492
CVTVIOP  EQU   CVTS01+488
CVTRV307 EQU   CVTS01+486
CVTRV306 EQU   CVTS01+484
CVTRV305 EQU   CVTS01+482
CVTRV304 EQU   CVTS01+480
CVTRV303 EQU   CVTS01+478
CVTRV302 EQU   CVTS01+476
CVTTRCA  EQU   CVTS01+472
CVTRV297 EQU   CVTRV289
CVTRV296 EQU   CVTRV289
CVTRV295 EQU   CVTRV289
CVTRV294 EQU   CVTRV289
CVTRV293 EQU   CVTRV289
CVTRV292 EQU   CVTRV289
CVTRV291 EQU   CVTRV289
CVTRV290 EQU   CVTRV289
CVTRV288 EQU   CVTRV280
CVTRV287 EQU   CVTRV280
CVTRV286 EQU   CVTRV280
CVTRV285 EQU   CVTRV280
CVTRV284 EQU   CVTRV280
CVTRV283 EQU   CVTRV280
CVTRV282 EQU   CVTRV280
CVTRV281 EQU   CVTRV280
CVTRV279 EQU   CVTRV271
CVTRV278 EQU   CVTRV271
CVTRV277 EQU   CVTRV271
CVTRV276 EQU   CVTRV271
CVTRV275 EQU   CVTRV271
CVTRV274 EQU   CVTRV271
CVTRV273 EQU   CVTRV271
CVTRV272 EQU   CVTRV271
CVTRV270 EQU   CVTRV262
CVTRV269 EQU   CVTRV262
CVTRV268 EQU   CVTRV262
CVTRV267 EQU   CVTRV262
CVTRV266 EQU   CVTRV262
CVTRV265 EQU   CVTRV262
CVTRV264 EQU   CVTRV262
CVTRV263 EQU   CVTRV262
CVTVFP   EQU   CVTS01+464
CVTVSI   EQU   CVTS01+460
CVTVPSIB EQU   CVTS01+456
CVTMFACT EQU   CVTMFRTR
CVTMFCTL EQU   CVTS01+448
CVTPVBP  EQU   CVTS01+444
CVTPWI   EQU   CVTS01+440
CVTRV254 EQU   CVTS01+438
CVTRV253 EQU   CVTS01+436
CVTRV252 EQU   CVTS01+434
CVTRV251 EQU   CVTS01+433
CVTRV250 EQU   CVTS01+432
CVTRV249 EQU   CVTS01+431
CVTRV248 EQU   CVTS01+430
CVTRV247 EQU   CVTS01+429
CVTRV246 EQU   CVTS01+428
CVTRV245 EQU   CVTRV237
CVTRV244 EQU   CVTRV237
CVTRV243 EQU   CVTRV237
CVTRV242 EQU   CVTRV237
CVTRV241 EQU   CVTRV237
CVTRV240 EQU   CVTRV237
CVTRV239 EQU   CVTRV237
CVTRV238 EQU   CVTRV237
CVTRV236 EQU   CVTRV228
CVTRV235 EQU   CVTRV228
CVTRV234 EQU   CVTRV228
CVTRV233 EQU   CVTRV228
CVTRV232 EQU   CVTRV228
CVTRV231 EQU   CVTRV228
CVTRV230 EQU   CVTRV228
CVTRV229 EQU   CVTRV228
CVTRV227 EQU   CVTRV219
CVTRV226 EQU   CVTRV219
CVTRV225 EQU   CVTRV219
CVTRV224 EQU   CVTRV219
CVTRV223 EQU   CVTRV219
CVTRV222 EQU   CVTRV219
CVTRV221 EQU   CVTRV219
CVTRV220 EQU   CVTRV219
CVTRV218 EQU   CVTRV210
CVTRV217 EQU   CVTRV210
CVTRV216 EQU   CVTRV210
CVTRV215 EQU   CVTRV210
CVTRV214 EQU   CVTRV210
CVTRV213 EQU   CVTRV210
CVTRV212 EQU   CVTRV210
CVTRV211 EQU   CVTRV210
CVTLCCAT EQU   CVTS01+420
CVTPCCAT EQU   CVTS01+416
CVTIPCRP EQU   CVTS01+412
CVTIPCRI EQU   CVTS01+408
CVTIPCDS EQU   CVTS01+404
CVTAIDVT EQU   CVTS01+400
CVTSSAP  EQU   CVTS01+396
CVTEHCIR EQU   CVTS01+392
CVTEHDEF EQU   CVTS01+388
CVTDAIR  EQU   CVTS01+384
CVTPERFM EQU   CVTS01+380
CVT044R2 EQU   CVTS01+376
CVTFETCH EQU   CVTS01+372
CVTRSTWD EQU   CVTS01+368
CVTSPOST EQU   CVTS01+364
CVTIOBP  EQU   CVTS01+360
CVTASMVT EQU   CVTS01+356
CVTRECRQ EQU   CVTS01+352
CVTWSAC  EQU   CVTS01+348
CVTRV149 EQU   CVTS01+344
CVTWSAL  EQU   CVTS01+340
CVTSPSA  EQU   CVTS01+336
CVTGLMN  EQU   CVTS01+332
CVTVEAC0 EQU   CVTS01+328
CVT062R1 EQU   CVTS01+324
CVTRPOST EQU   CVTS01+320
CVTDQIQE EQU   CVTS01+316
CVTCSD   EQU   CVTS01+312
CVTLKRMA EQU   CVTS01+308
CVTRSPIE EQU   CVTS01+304
CVTRENQ  EQU   CVTS01+300
CVTLQCB  EQU   CVTS01+296
CVTFQCB  EQU   CVTS01+292
CVTQCS01 EQU   CVTS01+288
CVTAPFT  EQU   CVTS01+284
CVTPARRL EQU   CVTS01+280
CVTVWAIT EQU   CVTS01+276
CVTGSPL  EQU   CVTS01+272
CVTLSMQ  EQU   CVTS01+268
CVTGSMQ  EQU   CVTS01+264
CVTEXPRO EQU   CVTS01+260
CVTOPCTP EQU   CVTS01+256
CVTSIC   EQU   CVTS01+252
CVTTPIOS EQU   CVTS01+248
CVTRTMS  EQU   CVTS01+244
CVTSDBF  EQU   CVTS01+240
CVTSCBP  EQU   CVTS01+236
CVTSDMP  EQU   CVTS01+232
CVTSV60  EQU   CVTS01+228
CVTRTMCT EQU   CVTS01+224
CVTASCBL EQU   CVTS01+220
CVTASCBH EQU   CVTS01+216
CVTGDA   EQU   CVTS01+212
CVTVVMDI EQU   CVTS01+204
CVTAQTOP EQU   CVTS01+200
CVTIOSCS EQU   CVTS01+196
CVTSDRM  EQU   CVTS01+192
CVTOPTE  EQU   CVTS01+188
CVTSTXU  EQU   CVTS01+184
CVTQUIS  EQU   CVTS01+180
CVTPARS  EQU   CVTS01+176
CVTS1EE  EQU   CVTS01+172
CVTFRAS  EQU   CVTS01+168
CVTQSAS  EQU   CVTS01+164
CVTCRAS  EQU   CVTS01+160
CVTCRMN  EQU   CVTS01+156
CVTDELCP EQU   CVTS01+152
CVTFRECL EQU   CVTS01+148
CVTGETCL EQU   CVTS01+144
CVTBLDCP EQU   CVTS01+140
CVTAUTHL EQU   CVTS01+136
CVTSCAN  EQU   CVTS01+132
CVTRV144 EQU   CVTS01+130
CVTMAXMP EQU   CVTS01+128
CVTSTCK  EQU   CVTS01+124
CVTRV139 EQU   CVTS01+123
CVTDSSAC EQU   CVTS01+122
CVTRV513 EQU   CVTS01+121
CVTIOSPL EQU   CVTS01+120
CVTPTGT  EQU   CVTS01+116
CVTCSPIE EQU   CVTS01+112
CVTSMFEX EQU   CVTS01+108
CVTOLT0A EQU   CVTS01+104
CVTSRBRT EQU   CVTS01+100
CVTPUTL  EQU   CVTS01+96
CVTASCRL EQU   CVTS01+92
CVTASCRF EQU   CVTS01+88
CVTRV326 EQU   CVTS01+84
CVTRV325 EQU   CVTS01+80
CVTRV324 EQU   CVTS01+76
CVT0VL01 EQU   CVTS01+72
CVTSHRVM EQU   CVTS01+68
CVTRV332 EQU   CVTS01+64
CVTTAS   EQU   CVTS01+60
CVTRSCN  EQU   CVTS01+56
CVTTRAC2 EQU   CVTS01+54
CVTTRACE EQU   CVTS01+52
CVTAPG   EQU   CVTS01+51
CVTSDTRC EQU   CVTCTLFG
CVTGTRCE EQU   CVTCTLFG
CVTNOMP  EQU   CVTCTLFG
CVTRSV79 EQU   CVTCTLFG
CVTDSTAT EQU   CVTCTLFG
CVTRSV78 EQU   CVTCTLFG
CVTRV333 EQU   CVTCTLFG
CVTRV323 EQU   CVTCTLFG
CVTSPVLK EQU   CVTS01+49
CVTRSV77 EQU   CVTS01+48
CVTRV331 EQU   CVTS01+44
CVTRV330 EQU   CVTS01+40
CVTRV329 EQU   CVTS01+36
CVTRV328 EQU   CVTS01+32
CVTRV322 EQU   CVTS01+28
CVTSLID  EQU   CVTSLIDA+1
CVTSYLK  EQU   CVTSLIDA
CVTRV321 EQU   CVTS01+20
CVTRV320 EQU   CVTS01+16
CVTLPDIR EQU   CVTLPDIA+1
CVTRSV69 EQU   CVTDIRST
CVTRSV68 EQU   CVTDIRST
CVTRSV67 EQU   CVTDIRST
CVTRSV66 EQU   CVTDIRST
CVTRSV65 EQU   CVTDIRST
CVTRSV64 EQU   CVTDIRST
CVTRSV63 EQU   CVTDIRST
CVTDICOM EQU   CVTDIRST
CVTPVTP  EQU   CVTS01+8
CVTLPDSR EQU   CVTS01+4
CVTGETL  EQU   CVTS01
SSCTSUSE EQU   SSCT+20
SSCTRSV1 EQU   SSCT+13
@NM00108 EQU   SSCTFLG1
SSCTUPSS EQU   SSCTFLG1
SSCTSFOR EQU   SSCTFLG1
SSCTSNAM EQU   SSCT+8
SSCTSCTA EQU   SSCT+4
SSCTID   EQU   SSCT
JESSASTA EQU   JESCT+48
JESNUCBS EQU   JESCT+44
JESSSCT  EQU   JESCT+24
JESRESQM EQU   JESCT+16
JESQMGR  EQU   JESCT+12
JESUNITS EQU   JESCT+4
@NM00106 EQU   JESCT
SSIBSUSE EQU   SSIB+32
SSIBRSV1 EQU   SSIB+28
SSIBDEST EQU   SSIB+20
SSIBRESV EQU   SSIB+7
@NM00105 EQU   SSIBFLG1
SSIBPJES EQU   SSIBFLG1
SURV104  EQU   SUBITS+13
SURV103  EQU   SUBYTE13
SURV102  EQU   SUBYTE13
SURV101  EQU   SUBYTE13
SU100BT  EQU   SUBYTE13
SU99BIT  EQU   SUBYTE13
SU98BIT  EQU   SUBYTE13
SU97BIT  EQU   SUBYTE13
SU96BIT  EQU   SUBYTE13
SU95BIT  EQU   SUBYTE12
SU94BIT  EQU   SUBYTE12
SU93BIT  EQU   SUBYTE12
SU92BIT  EQU   SUBYTE12
SU91BIT  EQU   SUBYTE12
SU90BIT  EQU   SUBYTE12
SU89BIT  EQU   SUBYTE12
SU88BIT  EQU   SUBYTE12
SU87BIT  EQU   SUBYTE11
SU86BIT  EQU   SUBYTE11
SU85BIT  EQU   SUBYTE11
SU84BIT  EQU   SUBYTE11
SU83BIT  EQU   SUBYTE11
SU82BIT  EQU   SUBYTE11
SU81BIT  EQU   SUBYTE11
SU80BIT  EQU   SUBYTE11
SU79BIT  EQU   SUBYTE10
SU78BIT  EQU   SUBYTE10
SU77BIT  EQU   SUBYTE10
SU76BIT  EQU   SUBYTE10
SU75BIT  EQU   SUBYTE10
SU74BIT  EQU   SUBYTE10
SU73BIT  EQU   SUBYTE10
SU72BIT  EQU   SUBYTE10
SU71BIT  EQU   SUBYTE9
SU70BIT  EQU   SUBYTE9
SU69BIT  EQU   SUBYTE9
SU68BIT  EQU   SUBYTE9
SU67BIT  EQU   SUBYTE9
SU66BIT  EQU   SUBYTE9
SU65BIT  EQU   SUBYTE9
SU64BIT  EQU   SUBYTE9
SU63BIT  EQU   SUBYTE8
SU62BIT  EQU   SUBYTE8
SU61BIT  EQU   SUBYTE8
SU60BIT  EQU   SUBYTE8
SU59BIT  EQU   SUBYTE8
SU58BIT  EQU   SUBYTE8
SU57BIT  EQU   SUBYTE8
SU56BIT  EQU   SUBYTE8
SU55BIT  EQU   SUBYTE7
SU54BIT  EQU   SUBYTE7
SU53BIT  EQU   SUBYTE7
SU52BIT  EQU   SUBYTE7
SU51BIT  EQU   SUBYTE7
SU50BIT  EQU   SUBYTE7
SU49BIT  EQU   SUBYTE7
SU48BIT  EQU   SUBYTE7
SU47BIT  EQU   SUBYTE6
SU46BIT  EQU   SUBYTE6
SU45BIT  EQU   SUBYTE6
SU44BIT  EQU   SUBYTE6
SU43BIT  EQU   SUBYTE6
SU42BIT  EQU   SUBYTE6
SU41BIT  EQU   SUBYTE6
SU40BIT  EQU   SUBYTE6
SU39BIT  EQU   SUBYTE5
SU38BIT  EQU   SUBYTE5
SU37BIT  EQU   SUBYTE5
SU36BIT  EQU   SUBYTE5
SU35BIT  EQU   SUBYTE5
SU34BIT  EQU   SUBYTE5
SU33BIT  EQU   SUBYTE5
SU32BIT  EQU   SUBYTE5
SU31BIT  EQU   SUBYTE4
SU30BIT  EQU   SUBYTE4
SU28BIT  EQU   SUBYTE4
SU27BIT  EQU   SUBYTE4
SU26BIT  EQU   SUBYTE4
SU25BIT  EQU   SUBYTE4
SU24BIT  EQU   SUBYTE4
SU23BIT  EQU   SUBYTE3
SU22BIT  EQU   SUBYTE3
SU21BIT  EQU   SUBYTE3
SU20BIT  EQU   SUBYTE3
SU19BIT  EQU   SUBYTE3
SU18BIT  EQU   SUBYTE3
SU17BIT  EQU   SUBYTE3
SU16BIT  EQU   SUBYTE3
SU15BIT  EQU   SUBYTE2
SU14BIT  EQU   SUBYTE2
SU13BIT  EQU   SUBYTE2
SU12BIT  EQU   SUBYTE2
SU11BIT  EQU   SUBYTE2
SU10BIT  EQU   SUBYTE2
SU9BIT   EQU   SUBYTE2
SU8BIT   EQU   SUBYTE2
SU7BIT   EQU   SUBYTE1
SU6BIT   EQU   SUBYTE1
SU5BIT   EQU   SUBYTE1
SU4BIT   EQU   SUBYTE1
SU3BIT   EQU   SUBYTE1
SU2BIT   EQU   SUBYTE1
SU1BIT   EQU   SUBYTE1
SU0BIT   EQU   SUBYTE1
@NM00104 EQU   SDWA+512
SDWAVRA  EQU   SDWARA+4
SDWAURAL EQU   SDWARA+3
@NM00103 EQU   SDWADPVA
SDWAEBC  EQU   SDWADPVA
SDWAHEX  EQU   SDWADPVA
SDWAVRAL EQU   SDWARA
@NM00102 EQU   SDWA+396
SDWACOMP EQU   SDWA+392
SDWARCPL EQU   SDWA+364
@NM00101 EQU   SDWADPSA+32
SDWATO4  EQU   SDWADPSL+28
SDWAFRM4 EQU   SDWADPSL+24
SDWATO3  EQU   SDWADPSL+20
SDWAFRM3 EQU   SDWADPSL+16
SDWATO2  EQU   SDWADPSL+12
SDWAFRM2 EQU   SDWADPSL+8
SDWATO1  EQU   SDWADPSL+4
SDWAFRM1 EQU   SDWADPSL
@NM00100 EQU   SDWADDAT+3
@NM00099 EQU   SDWAPDAT
SDWAUSPL EQU   SDWAPDAT
SDWADPSW EQU   SDWAPDAT
SDWATJPA EQU   SDWAPDAT
SDWATLPA EQU   SDWAPDAT
SDWADREG EQU   SDWAPDAT
SDWADSAH EQU   SDWAPDAT
SDWADSAS EQU   SDWAPDAT
@NM00098 EQU   SDWADDAT+1
@NM00097 EQU   SDWASDAT
SDWAQQS  EQU   SDWASDAT
SDWACBS  EQU   SDWASDAT
SDWAGTF  EQU   SDWASDAT
SDWASWA  EQU   SDWASDAT
SDWALSQA EQU   SDWASDAT
SDWASQA  EQU   SDWASDAT
SDWANUC  EQU   SDWASDAT
@NM00096 EQU   SDWADUMP+2
@NM00095 EQU   SDWADPFS
SDWASLST EQU   SDWADPFS
@NM00094 EQU   SDWADPFS
SDWADLST EQU   SDWADPFS
SDWADPT  EQU   SDWADPFS
SDWADPID EQU   SDWADUMP
SDWADPLA EQU   SDWA+316
SDWAREXN EQU   SDWARECP+16
SDWACSCT EQU   SDWARECP+8
SDWAMODN EQU   SDWARECP
@NM00093 EQU   SDWA+290
SDWAASID EQU   SDWA+288
SDWATALW EQU   SDWALKWS+28
SDWATDLW EQU   SDWALKWS+24
SDWATNLW EQU   SDWALKWS+20
SDWAAPLW EQU   SDWALKWS+16
SDWAIPLW EQU   SDWALKWS+12
SDWAILLW EQU   SDWALKWS+8
SDWAIULW EQU   SDWALKWS+4
SDWAICLW EQU   SDWALKWS
SDWAFLLK EQU   SDWAACF4
SDWACMS  EQU   SDWAACF4
SDWAOPTM EQU   SDWAACF4
SDWATADB EQU   SDWAACF4
SDWATDNB EQU   SDWAACF4
SDWATNCB EQU   SDWAACF4
SDWAILCH EQU   SDWAACF4
SDWAIUCB EQU   SDWAACF4
SDWAICAT EQU   SDWAACF3
SDWAIPRG EQU   SDWAACF3
SDWASALL EQU   SDWAACF3
SDWAASMP EQU   SDWAACF3
SDWADISP EQU   SDWAACF3
@NM00092 EQU   SDWAACF3
@NM00091 EQU   SDWAACF2
@NM00090 EQU   SDWAACF2
SDWASPIN EQU   SDWAACF2
@NM00089 EQU   SDWAACF2
SDWALCPU EQU   SDWACPUA+2
@NM00088 EQU   SDWACPUA
SDWARECA EQU   SDWA+244
@NM00087 EQU   SDWA+239
@NM00086 EQU   SDWAIOFS
SDWANIOP EQU   SDWAIOFS
SDWANOIO EQU   SDWAIOFS
SDWAIOHT EQU   SDWAIOFS
SDWAIOQR EQU   SDWAIOFS
SDWAFMID EQU   SDWA+236
@NM00085 EQU   SDWAERRD
SDWAMCIV EQU   SDWAERRD
SDWARPIV EQU   SDWAERRD
SDWAMABD EQU   SDWAERRD
SDWACTS  EQU   SDWAERRD
SDWASTAE EQU   SDWAERRD
SDWANRBE EQU   SDWAERRD
SDWACLUP EQU   SDWAERRD
@NM00084 EQU   SDWAERRC
SDWAEAS  EQU   SDWAERRC
SDWAIRB  EQU   SDWAERRC
SDWASTAI EQU   SDWAERRC
SDWASTAF EQU   SDWAERRC
SDWASRBM EQU   SDWAERRB
SDWALDIS EQU   SDWAERRB
SDWAENRB EQU   SDWAERRB
SDWATYP1 EQU   SDWAERRB
@NM00083 EQU   SDWAERRB
SDWAPGIO EQU   SDWAERRA
SDWATEXC EQU   SDWAERRA
SDWASVCE EQU   SDWAERRA
SDWAABTM EQU   SDWAERRA
SDWASVCD EQU   SDWAERRA
SDWARKEY EQU   SDWAERRA
SDWAPCHK EQU   SDWAERRA
SDWATIME EQU   SDWAMCH+20
SDWARFSA EQU   SDWAMCH+16
@NM00082 EQU   SDWAMCH+14
SDWAVEQR EQU   SDWARSR2
SDWAPGFX EQU   SDWARSR2
SDWAFLSQ EQU   SDWARSR2
SDWAFSQA EQU   SDWARSR2
SDWANUCL EQU   SDWARSR2
SDWASPER EQU   SDWARSR2
SDWAINTC EQU   SDWARSR2
SDWAOFLN EQU   SDWARSR2
SDWACHNG EQU   SDWARSR1
SDWAMSER EQU   SDWARSR1
@NM00081 EQU   SDWARSR1
SDWACPID EQU   SDWAMCH+10
SDWATERR EQU   SDWAMCHD
SDWAFPRX EQU   SDWAMCHD
SDWAINSF EQU   SDWAMCHD
SDWAACR  EQU   SDWAMCHD
SDWASCK  EQU   SDWAMCHD
SDWAPSWU EQU   SDWAMCHD
SDWAREGU EQU   SDWAMCHD
SDWASKYF EQU   SDWAMCHD
@NM00080 EQU   SDWAMCHS
SDWARSRF EQU   SDWAMCHS
SDWARSRC EQU   SDWAMCHS
SDWAINVP EQU   SDWAMCHS
SDWATSVL EQU   SDWAMCHS
SDWARCDF EQU   SDWAMCHS
SDWASRVL EQU   SDWAMCHS
SDWASCKE EQU   SDWASTCK+4
SDWASCKB EQU   SDWASTCK
SDWALNTH EQU   SDWAIDNT+1
SDWASPID EQU   SDWAIDNT
SDWASR15 EQU   SDWASRSV+60
SDWASR14 EQU   SDWASRSV+56
SDWASR13 EQU   SDWASRSV+52
SDWASR12 EQU   SDWASRSV+48
SDWASR11 EQU   SDWASRSV+44
SDWASR10 EQU   SDWASRSV+40
SDWASR09 EQU   SDWASRSV+36
SDWASR08 EQU   SDWASRSV+32
SDWASR07 EQU   SDWASRSV+28
SDWASR06 EQU   SDWASRSV+24
SDWASR05 EQU   SDWASRSV+20
SDWASR04 EQU   SDWASRSV+16
SDWASR03 EQU   SDWASRSV+12
SDWASR02 EQU   SDWASRSV+8
SDWASR00 EQU   SDWASRSV
SDWATRN2 EQU   SDWAAEC2+4
SDWAIPC2 EQU   SDWAICD2
SDWAIMC2 EQU   SDWAICD2
SDWAIPR2 EQU   SDWAICD2
@NM00079 EQU   SDWAINC2
@NM00078 EQU   SDWAILC2
SDWAIL2  EQU   SDWAILC2
@NM00077 EQU   SDWAILC2
@NM00076 EQU   SDWAAEC2
SDWAADD2 EQU   SDWANXT2+1
@NM00075 EQU   SDWANXT2
@NM00074 EQU   SDWAEC2+3
SDWASGN2 EQU   SDWAINT2
SDWAEXP2 EQU   SDWAINT2
SDWADEC2 EQU   SDWAINT2
SDWAFPO2 EQU   SDWAINT2
SDWACC2  EQU   SDWAINT2
@NM00073 EQU   SDWAINT2
SDWAPGM2 EQU   SDWAMWP2
SDWAWAT2 EQU   SDWAMWP2
SDWAMCK2 EQU   SDWAMWP2
SDWAECT2 EQU   SDWAMWP2
SDWAKEY2 EQU   SDWAMWP2
SDWAEXT2 EQU   SDWAEMK2
SDWAIO2  EQU   SDWAEMK2
SDWATRM2 EQU   SDWAEMK2
@NM00072 EQU   SDWAEMK2
SDWAPER2 EQU   SDWAEMK2
@NM00071 EQU   SDWAEMK2
SDWATRAN EQU   SDWAAEC1+4
SDWAIPC1 EQU   SDWAICD1
SDWAIMC1 EQU   SDWAICD1
SDWAIPR1 EQU   SDWAICD1
@NM00070 EQU   SDWAINC1
@NM00069 EQU   SDWAILC1
SDWAIL1  EQU   SDWAILC1
@NM00068 EQU   SDWAILC1
@NM00067 EQU   SDWAAEC1
SDWAADD1 EQU   SDWANXT1+1
@NM00066 EQU   SDWANXT1
@NM00065 EQU   SDWAEC1+3
SDWASGN1 EQU   SDWAINT1
SDWAEXP1 EQU   SDWAINT1
SDWADEC1 EQU   SDWAINT1
SDWAFPO1 EQU   SDWAINT1
SDWACC1  EQU   SDWAINT1
@NM00064 EQU   SDWAINT1
SDWAPGM1 EQU   SDWAMWP1
SDWAWAT1 EQU   SDWAMWP1
SDWAMCK1 EQU   SDWAMWP1
SDWAECT1 EQU   SDWAMWP1
SDWAKEY1 EQU   SDWAMWP1
SDWAEXT1 EQU   SDWAEMK1
SDWAIO1  EQU   SDWAEMK1
SDWATRM1 EQU   SDWAEMK1
@NM00063 EQU   SDWAEMK1
SDWAPER1 EQU   SDWAEMK1
@NM00062 EQU   SDWAEMK1
SDWAIOBR EQU   SDWA+100
SDWAEPA  EQU   SDWA+96
@NM00061 EQU   SDWANAME+4
SDWARBAD EQU   SDWANAME
SDWAGR15 EQU   SDWAGRSV+60
SDWAGR14 EQU   SDWAGRSV+56
SDWAGR13 EQU   SDWAGRSV+52
SDWAGR12 EQU   SDWAGRSV+48
SDWAGR11 EQU   SDWAGRSV+44
SDWAGR10 EQU   SDWAGRSV+40
SDWAGR09 EQU   SDWAGRSV+36
SDWAGR08 EQU   SDWAGRSV+32
SDWAGR07 EQU   SDWAGRSV+28
SDWAGR06 EQU   SDWAGRSV+24
SDWAGR05 EQU   SDWAGRSV+20
SDWAGR04 EQU   SDWAGRSV+16
SDWAGR03 EQU   SDWAGRSV+12
SDWAGR02 EQU   SDWAGRSV+8
SDWAGR01 EQU   SDWAGRSV+4
SDWAGR00 EQU   SDWAGRSV
SDWANXTP EQU   SDWACTL2+5
SDWASGP  EQU   SDWAPMKP
SDWAEUP  EQU   SDWAPMKP
SDWADOP  EQU   SDWAPMKP
SDWAFPP  EQU   SDWAPMKP
SDWACCP  EQU   SDWAPMKP
SDWAILP  EQU   SDWAPMKP
SDWAINTP EQU   SDWACTL2+2
SDWASPVP EQU   SDWAMWPP
SDWAWATP EQU   SDWAMWPP
SDWAMCKP EQU   SDWAMWPP
@NM00060 EQU   SDWAMWPP
SDWAKEYP EQU   SDWAMWPP
SDWAEXTP EQU   SDWACMKP
SDWAIOP  EQU   SDWACMKP
SDWANXTA EQU   SDWACTL1+5
SDWASGA  EQU   SDWAPMKA
SDWAEUA  EQU   SDWAPMKA
SDWADOA  EQU   SDWAPMKA
SDWAFPA  EQU   SDWAPMKA
SDWACCA  EQU   SDWAPMKA
SDWAILA  EQU   SDWAPMKA
SDWAINTA EQU   SDWACTL1+2
SDWASPVA EQU   SDWAMWPA
SDWAWATA EQU   SDWAMWPA
SDWAMCKA EQU   SDWAMWPA
@NM00059 EQU   SDWAMWPA
SDWAKEYA EQU   SDWAMWPA
SDWAEXTA EQU   SDWACMKA
SDWAIOA  EQU   SDWACMKA
SDWACMPC EQU   SDWAABCC+1
@NM00058 EQU   SDWACMPF
SDWASTCC EQU   SDWACMPF
@NM00057 EQU   SDWACMPF
SDWASTEP EQU   SDWACMPF
JSCBCSCB EQU   JSCBSEC1+68
JSCBPMG  EQU   JSCBWTP+2
JSCBWTSP EQU   JSCBWTP+1
JSCRSV23 EQU   JSCBWTFG
JSCRSV22 EQU   JSCBWTFG
JSCRSV21 EQU   JSCBWTFG
JSCRSV20 EQU   JSCBWTFG
JSCRSV19 EQU   JSCBWTFG
JSCRSV18 EQU   JSCBWTFG
JSCBRET  EQU   JSCBWTFG
JSCBIOFG EQU   JSCBWTFG
@NM00054 EQU   JSCBSEC1+60
JSCBQMPI EQU   JSCBSEC1+56
JSCBPMSG EQU   JSCBSWT1
JSCRSV16 EQU   JSCBSWT1
JSCRSV15 EQU   JSCBSWT1
JSCRSV14 EQU   JSCBSWT1
JSCRSV13 EQU   JSCBSWT1
JSCRSV12 EQU   JSCBSWT1
JSCRSV11 EQU   JSCBSWT1
JSCBPASS EQU   JSCBSWT1
JSCBTTTR EQU   JSCBSEC1+52
JSCRSV10 EQU   JSCBSEC1+49
JSCBAUTH EQU   JSCBOPTS
JSCSIOTS EQU   JSCBOPTS
JSCRSV08 EQU   JSCBOPTS
JSCRSV07 EQU   JSCBOPTS
JSCRSV06 EQU   JSCBOPTS
JSCBLONG EQU   JSCBOPTS
JSCRSV05 EQU   JSCBOPTS
JSCRSV04 EQU   JSCBOPTS
JSCBSECB EQU   JSCBSEC1+44
JSCRSV03 EQU   JSCBSEC1+41
JSCBSTEP EQU   JSCBSEC1+40
JSCBDCBA EQU   JSCBDCB+1
JSCRSV02 EQU   JSCBDCB
JSCBID   EQU   JSCBSEC1+32
JSCBDBTB EQU   JSCBSEC1+28
JSCBIJSC EQU   JSCBSEC1+24
JSCBPCC  EQU   JSCBSEC1+16
JSCBTCP  EQU   JSCBSEC1+12
JSCBSHR  EQU   JSCBSEC1+8
JSCHPCEA EQU   JSCHPCE+1
JSCRSV32 EQU   JSCHPCE
JSCRSV01 EQU   JSCBSEC1
@NM00053 EQU   IEZJSCB
@NM00052 EQU   TCBXTNT2+32
TCBRV181 EQU   TCBRV173
TCBRV180 EQU   TCBRV173
TCBRV179 EQU   TCBRV173
TCBRV178 EQU   TCBRV173
TCBRV177 EQU   TCBRV173
TCBRV176 EQU   TCBRV173
TCBRV175 EQU   TCBRV173
TCBRV174 EQU   TCBRV173
TCBRV172 EQU   TCBRV164
TCBRV171 EQU   TCBRV164
TCBRV170 EQU   TCBRV164
TCBRV169 EQU   TCBRV164
TCBRV168 EQU   TCBRV164
TCBRV167 EQU   TCBRV164
TCBRV166 EQU   TCBRV164
TCBRV165 EQU   TCBRV164
TCBRV163 EQU   TCBRV155
TCBRV162 EQU   TCBRV155
TCBRV161 EQU   TCBRV155
TCBRV160 EQU   TCBRV155
TCBRV159 EQU   TCBRV155
TCBRV158 EQU   TCBRV155
TCBRV157 EQU   TCBRV155
TCBRV156 EQU   TCBRV155
TCBRV154 EQU   TCBRV146
TCBRV153 EQU   TCBRV146
TCBRV152 EQU   TCBRV146
TCBRV151 EQU   TCBRV146
TCBRV150 EQU   TCBRV146
TCBRV149 EQU   TCBRV146
TCBRV148 EQU   TCBRV146
TCBRV147 EQU   TCBRV146
TCBRV145 EQU   TCBXTNT2+26
TCBRV144 EQU   TCBXTNT2+24
TCBRV143 EQU   TCBXTNT2+20
TCBRV142 EQU   TCBXTNT2+16
TCBRSV49 EQU   TCBXTNT2+12
TCBEVENT EQU   TCBXTNT2+8
TCBRCMP  EQU   TCBXTNT2+5
TCBRSVAB EQU   TCBXTNT2+4
TCBGTFA  EQU   TCBGTF+1
TCBRSV47 EQU   TCBTFLG
TCBRSV46 EQU   TCBTFLG
TCBRSV45 EQU   TCBTFLG
TCBRSV44 EQU   TCBTFLG
TCBRSV43 EQU   TCBTFLG
TCBDSPIT EQU   TCBTFLG
TCBERRTN EQU   TCBTFLG
TCBASYNC EQU   TCBTFLG
@NM00051 EQU   TCB+296
TCBSVCA2 EQU   TCB+292
TCBSWASA EQU   TCB+288
TCBDBTB  EQU   TCB+284
TCBRPT   EQU   TCB+280
TCBRV141 EQU   TCBRV133
TCBRV140 EQU   TCBRV133
TCBRV139 EQU   TCBRV133
TCBRV138 EQU   TCBRV133
TCBRV137 EQU   TCBRV133
TCBRV136 EQU   TCBRV133
TCBRV135 EQU   TCBRV133
TCBRV134 EQU   TCBRV133
TCBRV132 EQU   TCBRV124
TCBRV131 EQU   TCBRV124
TCBRV130 EQU   TCBRV124
TCBRV129 EQU   TCBRV124
TCBRV128 EQU   TCBRV124
TCBRV127 EQU   TCBRV124
TCBRV126 EQU   TCBRV124
TCBRV125 EQU   TCBRV124
TCBRV123 EQU   TCBFBYT2
TCBRV122 EQU   TCBFBYT2
TCBECBNV EQU   TCBFBYT2
TCBSSSYN EQU   TCBFBYT2
TCBFPRAP EQU   TCBFBYT2
TCBFDW   EQU   TCBFBYT2
TCBFMW   EQU   TCBFBYT2
TCBCNCB  EQU   TCBFBYT2
TCBLLH   EQU   TCBFBYT1
TCBRV113 EQU   TCBFBYT1
TCBEOT   EQU   TCBFBYT1
TCBRTM2  EQU   TCBFBYT1
TCBPGNLY EQU   TCBFBYT1
TCBNDIOS EQU   TCBFBYT1
TCBRV327 EQU   TCBFBYT1
TCBEOTFM EQU   TCBFBYT1
TCBAFFN  EQU   TCB+274
TCBRV326 EQU   TCB+272
TCBUKYSP EQU   TCB+268
TCBMODE  EQU   TCBESTAE+3
TCBERTYP EQU   TCBESTAE+2
TCBRV314 EQU   TCBESTRM
TCBRV313 EQU   TCBESTRM
TCBRV312 EQU   TCBESTRM
TCBRV311 EQU   TCBESTRM
TCBRV310 EQU   TCBESTRM
TCBRV309 EQU   TCBESTRM
TCBRV308 EQU   TCBESTRM
TCBETERM EQU   TCBESTRM
TCBSCBKY EQU   TCBESTAE
TCBRTM12 EQU   TCB+260
TCBTCBID EQU   TCB+256
TCBSTAWA EQU   TCB+252
TCBSWA   EQU   TCB+248
TCBFOEA  EQU   TCBFOE+1
TCBRSV42 EQU   TCBFOE
TCBCCPVI EQU   TCBXSCT+2
TCBRV325 EQU   TCBXSCT+1
TCBRV324 EQU   TCBXSCT1
TCBRV323 EQU   TCBXSCT1
TCBRV322 EQU   TCBXSCT1
TCBRV321 EQU   TCBXSCT1
TCBRV320 EQU   TCBXSCT1
TCBRV319 EQU   TCBXSCT1
TCBS3A   EQU   TCBXSCT1
TCBACTIV EQU   TCBXSCT1
TCBRSV41 EQU   TCB+239
TCBTID   EQU   TCB+238
TCBRSVAA EQU   TCB+237
TCBABCUR EQU   TCB+236
TCBTMSAV EQU   TCB+232
TCBIOTIM EQU   TCB+228
TCBRTWA  EQU   TCB+224
TCBBACK  EQU   TCB+220
TCBTIRB  EQU   TCB+216
TCBAECB  EQU   TCB+212
TCBEXT2A EQU   TCBEXT2+1
TCBRSV39 EQU   TCBEXT2
TCBSTMCT EQU   TCB+207
TCBSYSCT EQU   TCB+206
TCBRSV37 EQU   TCB+205
TCBEXSVC EQU   TCBDAR
TCBDARMS EQU   TCBDAR
TCBDARWT EQU   TCBDAR
TCBDARO  EQU   TCBDAR
TCBDARMC EQU   TCBDARC
TCBDARD  EQU   TCBDAR
TCBDARS  EQU   TCBDAR
TCBDARP  EQU   TCBDAR
TCBGTOFM EQU   TCBFLGS7
TCBADMP  EQU   TCBFLGS7
TCBRSTSK EQU   TCBFLGS7
TCBSVCS  EQU   TCBFLGS7
TCBSTACK EQU   TCBFLGS7
TCBRSV34 EQU   TCBFLGS7
TCBRSV33 EQU   TCBFLGS7
TCBGPECB EQU   TCBFLGS7
TCBNTJS  EQU   TCBFLGS6
TCBAPG   EQU   TCBFLGS6
TCBMIGR  EQU   TCBFLGS6
TCBRV303 EQU   TCBFLGS6
TCBSPVLK EQU   TCBFLGS6
TCBCPU   EQU   TCBFLGS6
TCBPIE17 EQU   TCBFLGS6
TCBRV    EQU   TCBFLGS6
TCBRSV79 EQU   TCBNDSP5
TCBRSV78 EQU   TCBNDSP5
TCBRSV77 EQU   TCBNDSP5
TCBRSV76 EQU   TCBNDSP5
TCBRSV75 EQU   TCBNDSP5
TCBRSV74 EQU   TCBNDSP5
TCBRSV95 EQU   TCBNDSP5
TCBRSV94 EQU   TCBNDSP5
TCBRSV93 EQU   TCBNDSP4
TCBRSV92 EQU   TCBNDSP4
TCBRSV91 EQU   TCBNDSP4
TCBRSV90 EQU   TCBNDSP4
TCBRSV89 EQU   TCBNDSP4
TCBRSV88 EQU   TCBNDSP4
TCBRSV87 EQU   TCBNDSP4
TCBRSV86 EQU   TCBNDSP4
TCBEXT1A EQU   TCBEXT1+1
TCBRSV32 EQU   TCBEXT1
TCBEXCPD EQU   TCB+192
TCBIOBRC EQU   TCB+188
TCBDDWTC EQU   TCB+186
TCBDDEXC EQU   TCB+184
TCBJSCBB EQU   TCBJSCB+1
@NM00050 EQU   TCBRECDE
TCBREC   EQU   TCBRECDE
TCBMDIDS EQU   TCB+176
TCBNDINT EQU   TCBNDSP3
TCBRSV27 EQU   TCBNDSP3
TCBRSV26 EQU   TCBNDSP3
TCBRSV25 EQU   TCBNDSP3
TCBRSV24 EQU   TCBNDSP3
TCBSRBND EQU   TCBNDSP3
TCBRV302 EQU   TCBNDSP3
TCBLJSND EQU   TCBNDSP3
TCBABE   EQU   TCBNDSP2
TCBDSS   EQU   TCBNDSP2
TCBOWAIT EQU   TCBNDSP2
TCBIWAIT EQU   TCBNDSP2
TCBNDTS  EQU   TCBNDSP2
TCBNDSVC EQU   TCBNDSP2
TCBSTPP  EQU   TCBNDSP2
TCBABD   EQU   TCBNDSP2
TCBRSV22 EQU   TCBNDSP1
TCBPIEND EQU   TCBNDSP1
TCBTPSP  EQU   TCBNDSP1
TCBDDRND EQU   TCBNDSP1
TCBRSPND EQU   TCBNDSP1
TCBRSTND EQU   TCBNDSP1
TCBDARPN EQU   TCBNDSP1
TCBDARTN EQU   TCBNDSP1
TCBNDSP0 EQU   TCBNDSP
TCBUSER  EQU   TCB+168
TCBTCTB  EQU   TCBTCT+1
TCBRSV9C EQU   TCBTCTGF
TCBRSV9B EQU   TCBTCTGF
TCBRSV9A EQU   TCBTCTGF
TCBRSV99 EQU   TCBTCTGF
TCBRSV98 EQU   TCBTCTGF
TCBRSV97 EQU   TCBTCTGF
TCBRSV20 EQU   TCBTCTGF
TCBSMFGF EQU   TCBTCTGF
TCBSTABB EQU   TCBSTAB+1
TCBSTCUR EQU   TCBNSTAE
TCBRV301 EQU   TCBNSTAE
TCBSYNCH EQU   TCBNSTAE
TCBHALT  EQU   TCBNSTAE
TCBPPSUP EQU   TCBNSTAE
TCB33E   EQU   TCBNSTAE
TCBQUIES EQU   TCBNSTAE
TCBSTABE EQU   TCBNSTAE
TCBAQE   EQU   TCB+156
TCBPQE   EQU   TCB+152
TCBTSDP  EQU   TCB+151
TCBTSLP  EQU   TCB+150
TCBSTPCT EQU   TCB+149
TCBCPUBN EQU   TCBTSFLG
TCBDYDSP EQU   TCBTSFLG
TCBRSV18 EQU   TCBTSFLG
TCBRSV17 EQU   TCBTSFLG
TCBTIOTG EQU   TCBTSFLG
TCBATT   EQU   TCBTSFLG
TCBSTPPR EQU   TCBTSFLG
TCBRV300 EQU   TCBTSTSK
TCBECB   EQU   TCB+144
TCBIQE   EQU   TCB+140
TCBLTC   EQU   TCB+136
TCBNTC   EQU   TCB+128
TCBJSTCA EQU   TCBJSTCB+1
TCBRSV16 EQU   TCBJSTCB
TCBTQET  EQU   TCBTME
TCBTCB   EQU   TCB+116
TCBFSAB  EQU   TCBFSA+1
TCBQEL   EQU   TCBFSA
TCBGRS15 EQU   TCBGRS+60
TCBGRS14 EQU   TCBGRS+56
TCBGRS13 EQU   TCBGRS+52
TCBGRS12 EQU   TCBGRS+48
TCBGRS11 EQU   TCBGRS+44
TCBGRS10 EQU   TCBGRS+40
TCBGRS9  EQU   TCBGRS+36
TCBGRS8  EQU   TCBGRS+32
TCBGRS7  EQU   TCBGRS+28
TCBGRS6  EQU   TCBGRS+24
TCBGRS5  EQU   TCBGRS+20
TCBGRS4  EQU   TCBGRS+16
TCBGRS3  EQU   TCBGRS+12
TCBGRS2  EQU   TCBGRS+8
TCBGRS1  EQU   TCBGRS+4
TCBGRS0  EQU   TCBGRS
TCBJPQB  EQU   TCBJPQ+1
TCBRSV15 EQU   TCBPURGE
TCBRSV14 EQU   TCBPURGE
TCBRSV13 EQU   TCBPURGE
TCBRSV12 EQU   TCBPURGE
TCBRSV11 EQU   TCBPURGE
TCBRSV10 EQU   TCBPURGE
TCBRSV09 EQU   TCBPURGE
TCBJPQF  EQU   TCBPURGE
TCBJLB   EQU   TCB+40
TCBLLS   EQU   TCB+36
TCBDSP   EQU   TCB+35
TCBLMP   EQU   TCB+34
TCBPNDSP EQU   TCBFLGS5
TCBFCD1  EQU   TCBFLGS5
TCBSTP   EQU   TCBFLGS5
TCBSYS   EQU   TCBFLGS5
TCBANDSP EQU   TCBFLGS5
TCBPAGE  EQU   TCBFLGS5
TCBUXNDF EQU   TCBABWF
TCBFC    EQU   TCBFLGS5
TCBONDSP EQU   TCBFLGS4
TCBMPCND EQU   TCBFLGS4
TCBMPCVQ EQU   TCBFLGS4
TCBUXNDV EQU   TCBFLGS4
TCBHNDSP EQU   TCBFLGS4
TCBRQENA EQU   TCBFLGS4
TCBSER   EQU   TCBFLGS4
TCBNDUMP EQU   TCBFLGS4
TCBDWSTA EQU   TCBFLGS3
TCBRSV08 EQU   TCBFLGS3
TCBRSV07 EQU   TCBFLGS3
TCBRSV06 EQU   TCBFLGS3
TCBABGM  EQU   TCBFLGS3
TCBABTRM EQU   TCBFLGS3
TCBADINP EQU   TCBFLGS3
TCBFSM   EQU   TCBFLGS3
TCBFTS   EQU   TCBFLGS2
TCBFETXR EQU   TCBFLGS2
TCBFDSOP EQU   TCBFLGS2
TCBFJMC  EQU   TCBFLGS2
TCBFSMC  EQU   TCBFLGS2
TCBFABOP EQU   TCBFLGS2
TCBFSTI  EQU   TCBFLGS2
TCBFOINP EQU   TCBFLGS2
TCBFX    EQU   TCBFLGS1
TCBFS    EQU   TCBFLGS1
TCBFT    EQU   TCBFLGS1
TCBPDUMP EQU   TCBFLGS1
TCBNONPR EQU   TCBFLGS1
TCBFERA  EQU   TCBFLGS1
TCBFE    EQU   TCBFLGS1
TCBFA    EQU   TCBFLGS1
TCBZERO  EQU   TCBPKF
TCBFLAG  EQU   TCBPKF
TCBMSSB  EQU   TCBMSS+1
TCBRSV03 EQU   TCBMSS
TCBTRNB  EQU   TCBTRN+1
TCBRSV02 EQU   TCBABF
TCBOLTEP EQU   TCBABF
TCBTCP   EQU   TCBABF
TCBTCPP  EQU   TCBABF
TCBRSV01 EQU   TCBABF
TCBGRPH  EQU   TCBABF
TCBNOCHK EQU   TCBABF
TCBMOD91 EQU   TCBABF
TCBCMPC  EQU   TCBCMP+1
TCBRV318 EQU   TCBCMSG
TCBRV317 EQU   TCBCIND
TCBRV316 EQU   TCBCWTO
TCBCASID EQU   TCBCDBL
TCBNOCC  EQU   TCBSTCC
TCBDMPO  EQU   TCBCPP
TCBCSTEP EQU   TCBCMPF
TCBCREQ  EQU   TCBCMPF
TCBTIO   EQU   TCB+12
TCBDEB   EQU   TCB+8
TCBPIEA  EQU   TCBPIE+1
TCBPM    EQU   TCBPMASK
@NM00049 EQU   TCBPMASK
TCBRBP   EQU   TCB
TCBFRS6  EQU   TCBFRS+24
TCBFRS4  EQU   TCBFRS+16
TCBFRS2  EQU   TCBFRS+8
TCBFRS0  EQU   TCBFRS
ASCBPTR  EQU   TCBASCB+12
ASCBNEXT EQU   TCBASCB+8
TCBNEXT  EQU   TCBASCB
MSSPARE  EQU   BASES01+48
MSUCBAL  EQU   BASES01+44
MSUCBPR  EQU   BASES01+40
MSBOBECB EQU   BASES01+36
MSSJQ    EQU   BASES01+32
MSECB    EQU   BASES01+28
MSPBP    EQU   BASES01+24
MSERM    EQU   BASES01+22
MSPASS   EQU   BASES01+14
MSVRB    EQU   BASES01+6
MSQHR    EQU   MSFHF
@NM00048 EQU   MSFHF
MSPSDT   EQU   MSFHF
MSREPLYB EQU   MSFHF
MSFAX    EQU   MSFHF
MSTTT    EQU   MSFHF
MSCSD    EQU   MSFHF
MSNMF    EQU   MSFHF
MSJNF    EQU   MSSSA
MSYOUT   EQU   MSNWP
MSNRP    EQU   MSSSA
MSSRDR   EQU   MSREOF
MSWRLOG  EQU   MSSSA
MSNUPSW  EQU   MSSSA
MSWRPEN  EQU   MSSSA
MSSSSIPL EQU   MSINLSW
MSSUM    EQU   MSECBFL
MSMCR    EQU   MSECBFL
MSYSOUT  EQU   MSECBFL
MSYSIN   EQU   MSECBFL
MSATTN   EQU   MSECBFL
MSWTL    EQU   MSECBFL
MSWTO    EQU   MSECBFL
MSEXT    EQU   MSECBFL
MSCCS    EQU   MSPFG
MSBSP    EQU   MSPFG
MSSYT    EQU   MSPFG
MSSYN    EQU   MSPFG
MSICR    EQU   MSPFG
MSCMC    EQU   MSPFG
MSPNB    EQU   MSPFG
MSDATE   EQU   MSPFG
@NM00047 EQU   MSBTN
MSTN     EQU   MSBTN
@NM00046 EQU   MSBTN
@NM00045 EQU   MSBTN
MSSO     EQU   MSBTN
MSROLFLG EQU   MSBTN
MSCANFLG EQU   MSBTN
MSCONFLG EQU   MSBTN
MSPNIP   EQU   MSNTAL
MSQNIP   EQU   MSNTAL
MSCURE34 EQU   MSNTAL
@NM00044 EQU   MSNTAL
@NM00043 EQU   MSNTAL
@NM00042 EQU   MSNTAL
@NM00041 EQU   MSNTAL
MSNIP    EQU   MSNTAL
@NM00040 EQU   MS1BASEX+40
@NM00039 EQU   MS1BASEX+20
@NM00038 EQU   MS1BASEX
@NM00037 EQU   BASE+128
MSLGJSCB EQU   BASE+124
@NM00036 EQU   MSSTRTSW
MSSTRTP  EQU   MSSTRTSW
MSSTRTW  EQU   MSSTRTSW
@NM00035 EQU   MSWTRSW
MSWTRP   EQU   MSWTRSW
MSWTRW   EQU   MSWTRSW
@NM00034 EQU   MSWLOGSW
MSWLOGP  EQU   MSWLOGSW
MSWLOGW  EQU   MSWLOGSW
@NM00033 EQU   MSCLOSSW
MSCLOSP  EQU   MSCLOSSW
MSCLOSW  EQU   MSCLOSSW
MSLOGLMT EQU   @NM00032+1
MSLOGCLS EQU   @NM00032
BAASCB   EQU   BASE+100
MSSMFPRM EQU   BASE+96
BASP12   EQU   BASE+90
BASTCNT  EQU   BASE+88
BASESCT  EQU   BASE+86
BAJNCNT  EQU   BASE+84
BASUBECB EQU   BASE+80
BALOGCOM EQU   BASE+76
BADACNT  EQU   BASE+74
BATACNT  EQU   BASE+72
BAJBNR   EQU   BASE+64
BASP11   EQU   BASE+62
BALCCNT  EQU   BASE+61
BADUMPID EQU   BASE+60
BABCMAX  EQU   BASE+58
BAMONTR2 EQU   BASE+57
@NM00031 EQU   BAMONITR
BAMACTVE EQU   BAMONITR
@NM00030 EQU   BAMONITR
@NM00029 EQU   BAMONITR
@NM00028 EQU   BAMONITR
@NM00027 EQU   BAMONITR
BASPACE  EQU   BAMONITR
BADSN    EQU   BAMONITR
BADSO    EQU   BASE+52
BALOGECB EQU   BASE+48
@NM00026 EQU   BASPBYTE
@NM00025 EQU   BASPBYTE
@NM00024 EQU   BASPBYTE
@NM00023 EQU   BASPBYTE
@NM00022 EQU   BASPBYTE
BATRACE  EQU   BASPBYTE
BAMSSTAR EQU   BASPBYTE
@NM00021 EQU   MSLOGST
@NM00020 EQU   MSLOGST
MSLOGSTA EQU   MSLOGST
MSLOGIPL EQU   MSLOGST
MSLOGDAR EQU   MSLOGST
MSLOGCOM EQU   MSLOGST
MSLOGTHD EQU   MSLOGST
MSLOGENQ EQU   MSLOGST
BAMIPAR2 EQU   BASE+44
BAMINPAR EQU   BASE+42
BAPKES   EQU   BASE+40
BAICTR   EQU   BASE+38
@NM00019 EQU   BASE+37
BADSET   EQU   BARSW
BANOSET  EQU   BARSW
BAMIDNT  EQU   BARSW
BAHR     EQU   BARSW
BAVU     EQU   BARSW
BAINTSET EQU   BARSW
MSTODWTO EQU   BARSW
BAIN     EQU   BARSW
BACV     EQU   BASE+32
@NM00018 EQU   BALOG
@NM00017 EQU   BALOG
@NM00016 EQU   BALOG
@NM00015 EQU   BALOG
@NM00014 EQU   BALOG
@NM00013 EQU   BALOG
@NM00012 EQU   BALOG
BALOGINT EQU   BALOG
MSLOGSVC EQU   BALGSTAT
BAPRC    EQU   BASE+20
BAQ      EQU   BASE+16
BAIPLCC  EQU   @NM00010+2
@NM00011 EQU   @NM00010
BAIPL    EQU   BASE+12
BALAD    EQU   BASE+8
BATRM    EQU   BASE+4
BACHN    EQU   BASE
CVTLEVL  EQU   CVTRELNO+2
CVTNUMB  EQU   CVTRELNO
CVTMDL   EQU   CVTFIX+250
@NM00009 EQU   CVTFIX+248
@NM00008 EQU   CVTFIX
CVTRV482 EQU   CVTXTNT2+128
CVTRV481 EQU   CVTXTNT2+124
CVTRV480 EQU   CVTXTNT2+120
CVTRV479 EQU   CVTXTNT2+118
CVTRV478 EQU   CVTXTNT2+117
CVTRV477 EQU   CVTXTNT2+116
CVTRV476 EQU   CVTXTNT2+115
CVTRV475 EQU   CVTXTNT2+114
CVTRV474 EQU   CVTRV466
CVTRV473 EQU   CVTRV466
CVTRV472 EQU   CVTRV466
CVTRV471 EQU   CVTRV466
CVTRV470 EQU   CVTRV466
CVTRV469 EQU   CVTRV466
CVTRV468 EQU   CVTRV466
CVTRV467 EQU   CVTRV466
CVTRV465 EQU   CVTRV457
CVTRV464 EQU   CVTRV457
CVTRV463 EQU   CVTRV457
CVTRV462 EQU   CVTRV457
CVTRV461 EQU   CVTRV457
CVTRV460 EQU   CVTRV457
CVTRV459 EQU   CVTRV457
CVTRV458 EQU   CVTRV457
CVTRV456 EQU   CVTXTNT2+108
CVTRV455 EQU   CVTXTNT2+104
CVTRV454 EQU   CVTXTNT2+100
CVTRV453 EQU   CVTXTNT2+96
CVTRV452 EQU   CVTXTNT2+94
CVTRV451 EQU   CVTXTNT2+92
CVTRV450 EQU   CVTXTNT2+90
CVTRV449 EQU   CVTXTNT2+88
CVTRV448 EQU   CVTXTNT2+87
CVTRV447 EQU   CVTXTNT2+86
CVTRV446 EQU   CVTRV438
CVTRV445 EQU   CVTRV438
CVTRV444 EQU   CVTRV438
CVTRV443 EQU   CVTRV438
CVTRV442 EQU   CVTRV438
CVTRV441 EQU   CVTRV438
CVTRV440 EQU   CVTRV438
CVTRV439 EQU   CVTRV438
CVTRV437 EQU   CVTRV429
CVTRV436 EQU   CVTRV429
CVTRV435 EQU   CVTRV429
CVTRV434 EQU   CVTRV429
CVTRV433 EQU   CVTRV429
CVTRV432 EQU   CVTRV429
CVTRV431 EQU   CVTRV429
CVTRV430 EQU   CVTRV429
CVTRV428 EQU   CVTXTNT2+80
CVTRV427 EQU   CVTXTNT2+76
CVTRV426 EQU   CVTXTNT2+72
CVTRV425 EQU   CVTXTNT2+68
CVTATACT EQU   CVTATCVT
CVTRV423 EQU   CVTXTNT2+62
CVTRV422 EQU   CVTXTNT2+60
CVTRV421 EQU   CVTXTNT2+58
CVTRV420 EQU   CVTXTNT2+56
CVTRV419 EQU   CVTXTNT2+55
CVTRV418 EQU   CVTXTNT2+54
CVTRV417 EQU   CVTRV409
CVTRV416 EQU   CVTRV409
CVTRV415 EQU   CVTRV409
CVTRV414 EQU   CVTRV409
CVTRV413 EQU   CVTRV409
CVTRV412 EQU   CVTRV409
CVTRV411 EQU   CVTRV409
CVTRV410 EQU   CVTRV409
CVTRV408 EQU   CVTRV400
CVTRV407 EQU   CVTRV400
CVTRV406 EQU   CVTRV400
CVTRV405 EQU   CVTRV400
CVTRV404 EQU   CVTRV400
CVTRV403 EQU   CVTRV400
CVTRV402 EQU   CVTRV400
CVTRV401 EQU   CVTRV400
CVTSKTA  EQU   CVTXTNT2+44
CVTRSV99 EQU   CVTXTNT2+40
CVTRSV98 EQU   CVTXTNT2+36
CVTRSV97 EQU   CVTXTNT2+34
CVTRSV96 EQU   CVTXTNT2+32
CVTOLTEP EQU   CVTXTNT2+28
CVTQIDA  EQU   CVTQID+1
CVTRSV95 EQU   CVTQID
CVTRSV94 EQU   CVTXTNT2+20
CVTRSV93 EQU   CVTXTNT2+16
CVTRSV92 EQU   CVTXTNT2+12
CVTDEBVR EQU   CVTXTNT2+8
CVTRSV91 EQU   CVTXTNT2+6
CVTRSV9H EQU   CVTFLGBT
CVTRSV9G EQU   CVTFLGBT
CVTRSV9F EQU   CVTFLGBT
CVTRSV9E EQU   CVTFLGBT
CVTRSV9D EQU   CVTFLGBT
CVTRSV9C EQU   CVTFLGBT
CVTVME   EQU   CVTFLGBT
CVTNPE   EQU   CVTFLGBT
CVTNUCLS EQU   CVTXTNT2+4
CVTDSSVA EQU   CVTDSSV+1
CVTRSV89 EQU   CVTDSSV
CVTRSV88 EQU   CVTXTNT1+8
CVTRSV87 EQU   CVTXTNT1+4
CVTFACHN EQU   CVTXTNT1
CVTRV488 EQU   CVTMAP+412
CVTRV487 EQU   CVTMAP+408
CVTRV486 EQU   CVTMAP+404
CVTRV485 EQU   CVTMAP+400
CVTACTAP EQU   CVTMAP+396
CVTAUTH  EQU   CVTMAP+392
CVTATMCA EQU   CVTATMCT+1
CVTATMST EQU   CVTATMCT
CVTRSV61 EQU   CVTMAP+384
CVTVOLT1 EQU   CVTVOLM1+1
CVTVOLI1 EQU   CVTVOLF1
CVTSTOA  EQU   CVTMAP+376
CVTRSV58 EQU   CVTMAP+374
CVTRSV57 EQU   CVTMAP+372
CVTDDCE  EQU   CVTMAP+368
CVTPNWFR EQU   CVTMAP+364
CVTSMF   EQU   CVTMAP+360
CVTSULK  EQU   CVTMAP+358
CVTSLKO  EQU   CVTSYSK
CVTSLKP  EQU   CVTSYSK
CVTSLKQ  EQU   CVTSYSK
CVTSLKR  EQU   CVTSYSK
CVTRSV56 EQU   CVTSYSK
CVTRSV55 EQU   CVTSYSK
CVTRSV54 EQU   CVTSYSK
CVTRSV53 EQU   CVTSYSK
CVTRSV52 EQU   CVTA1F1
CVTRSV51 EQU   CVTA1F1
CVTRSV50 EQU   CVTA1F1
CVTRSV49 EQU   CVTA1F1
CVTRSV48 EQU   CVTA1F1
CVTRSV47 EQU   CVTA1F1
CVTSRSW  EQU   CVTA1F1
CVTPFSW  EQU   CVTA1F1
CVTPCVT  EQU   CVTMAP+352
CVTRSV46 EQU   CVTMAP+344
CVTRSV45 EQU   CVTMAP+340
CVTRSV44 EQU   CVTMAP+338
CVTRSV43 EQU   CVTMAP+336
CVTHJESA EQU   CVTHJES+1
CVTRSV42 EQU   CVTHJES
CVTEXT2A EQU   CVTEXT2+1
CVTRSV41 EQU   CVTEXT2
CVTAPFA  EQU   CVTAPF+1
CVTRSV40 EQU   CVTAPF
CVTRV518 EQU   CVTINTLA
CVTRV517 EQU   CVTERPV
CVTEORM  EQU   CVTMAP+312
CVTMCHPR EQU   CVTMAP+308
CVTTZ    EQU   CVTMAP+304
CVTJEPS  EQU   CVTMAP+300
CVTMODE  EQU   CVTMAP+292
CVTPTRV  EQU   CVTMAP+288
CVTREAL  EQU   CVTMAP+284
CVTRSV39 EQU   CVTMAP+280
CVTRSV38 EQU   CVTMAP+276
CVTDMSRA EQU   CVTDMSR+1
CVTRV634 EQU   CVTDMSRF
CVTRV633 EQU   CVTDMSRF
CVTRV632 EQU   CVTDMSRF
CVTRV631 EQU   CVTDMSRF
CVTRV630 EQU   CVTDMSRF
CVTRV629 EQU   CVTDMSRF
CVTUDUMP EQU   CVTDMSRF
CVTSDUMP EQU   CVTDMSRF
CVTQMSGA EQU   CVTQMSG+1
CVTRSV36 EQU   CVTQMSG
CVTAMFF  EQU   CVTMAP+264
CVTPURGA EQU   CVTPURG+1
CVTRSV35 EQU   CVTPURG
CVTCBSP  EQU   CVTMAP+256
CVTATERA EQU   CVTATER+1
CVTSYST  EQU   CVTATER
CVTVOLT2 EQU   CVTTAT
CVTVOLI2 EQU   CVTVOLF2
CVTAQAVB EQU   CVTAQAVT+1
CVTRSV34 EQU   CVTTCMFG
CVTRSV33 EQU   CVTTCMFG
CVTRSV32 EQU   CVTTCMFG
CVTRSV31 EQU   CVTTCMFG
CVTRSV30 EQU   CVTTCMFG
CVTRSV29 EQU   CVTTCMFG
CVTLDEV  EQU   CVTTCMFG
CVTTCRDY EQU   CVTTCMFG
CVTGTFA  EQU   CVTGTF+1
CVTRSV27 EQU   CVTGTFST
CVTRNIO  EQU   CVTGTFST
CVTUSR   EQU   CVTGTFST
CVTRV318 EQU   CVTFORM
CVTRV317 EQU   CVTTMODE
CVTRV316 EQU   CVTSTATE
CVTRV315 EQU   CVTGTFS
CVTGTFAV EQU   CVTGTFS
CVT0SCR1 EQU   CVTMAP+232
CVTRV515 EQU   CVTMAP+228
CVTRMS   EQU   CVTMAP+224
CVTPATCH EQU   CVTMAP+220
CVTTSCE  EQU   CVTMAP+216
CVTLNKSC EQU   CVTMAP+214
CVTQABST EQU   CVTMAP+212
CVTMDLDS EQU   CVTMAP+208
CVTUSER  EQU   CVTMAP+204
CVTABEND EQU   CVTMAP+200
CVTSMCA  EQU   CVTMAP+196
CVTRSV18 EQU   CVTMAP+192
CVTQLPAQ EQU   CVTMAP+188
CVTQCDSR EQU   CVTMAP+184
CVTRSV17 EQU   CVTOPTB
CVTRSV16 EQU   CVTOPTB
CVTFP    EQU   CVTOPTB
CVTAPTHR EQU   CVTOPTB
CVTNLOG  EQU   CVTOPTB
CVTTOD   EQU   CVTOPTB
CVTCTIMS EQU   CVTOPTB
CVTPROT  EQU   CVTOPTB
CVTXPFP  EQU   CVTOPTA
CVTASCII EQU   CVTOPTA
CVTRSV13 EQU   CVTOPTA
CVTRSV12 EQU   CVTOPTA
CVTNIP   EQU   CVTOPTA
CVTDDR   EQU   CVTOPTA
CVTAPR   EQU   CVTOPTA
CVTCCH   EQU   CVTOPTA
CVTSNCTR EQU   CVTMAP+180
CVTQMWR  EQU   CVTMAP+176
CVTQOCR  EQU   CVTMAP+172
CVT1EF00 EQU   CVTMAP+168
CVTMZ00  EQU   CVTMAP+164
CVTHEAD  EQU   CVTMAP+160
CVTRSV11 EQU   CVTMAP+156
CVT0PT01 EQU   CVTMAP+152
CVTRV516 EQU   CVTIERLC
CVTILCH  EQU   CVTMAP+140
CVT0DS   EQU   CVTMAP+136
CVTFBOSV EQU   CVTMAP+132
CVTNUCB  EQU   CVTMAP+128
CVTIXAVL EQU   CVTMAP+124
CVTIOQET EQU   CVTMAP+120
CVTDCBA  EQU   CVTMAP+117
CVTMVS2  EQU   CVTDCB
CVT6DAT  EQU   CVTDCB
CVT4MPS  EQU   CVTDCB
CVTRSV09 EQU   CVTDCB
CVT4MS1  EQU   CVTDCB
CVT2SPS  EQU   CVTDCB
CVT1SSS  EQU   CVTDCB
CVTRSV08 EQU   CVTDCB
CVTSTB   EQU   CVTMAP+112
CVTQTD00 EQU   CVTMAP+108
CVTQTE00 EQU   CVTMAP+104
CVTCUCB  EQU   CVTMAP+100
CVTSJQ   EQU   CVTMAP+96
CVTPBLDL EQU   CVTMAP+92
CVTTPC   EQU   CVTMAP+88
CVTSVDCB EQU   CVTMAP+84
CVTBRET  EQU   CVTMAP+82
CVTEXIT  EQU   CVTMAP+80
CVT0FN00 EQU   CVTMAP+76
CVTDARA  EQU   CVTDAR+1
CVTRSV07 EQU   CVTFLGS1
CVTRSV06 EQU   CVTFLGS1
CVTRSV05 EQU   CVTFLGS1
CVTRSV04 EQU   CVTFLGS1
CVTRSV03 EQU   CVTFLGS1
CVTRSV02 EQU   CVTFLGS1
CVTRSV01 EQU   CVTFLGS1
CVTDMPLK EQU   CVTFLGS1
CVTXITP  EQU   CVTMAP+68
CVTZDTAB EQU   CVTMAP+64
CVTMSLT  EQU   CVTMAP+60
CVTDATE  EQU   CVTMAP+56
CVTBTERM EQU   CVTMAP+52
CVTSYSAD EQU   CVTMAP+48
CVTXTLER EQU   CVTMAP+44
CVTILK2  EQU   CVTMAP+40
CVTILK1  EQU   CVTMAP+36
CVTPRLTV EQU   CVTMAP+32
CVTPCNVT EQU   CVTMAP+28
CVT0VL00 EQU   CVTMAP+24
CVTXAPG  EQU   CVTMAP+20
CVTBUF   EQU   CVTMAP+16
CVTJOB   EQU   CVTMAP+12
CVTLINK  EQU   CVTMAP+8
CVT0EF00 EQU   CVTMAP+4
CVT      EQU   CVTMAP
JSSNTCOM EQU   JSSNTENT+12
@NM00007 EQU   COMMBUFF+6
PARMAB4  EQU   ABND+3
PARMAB3  EQU   ABND+2
PARMAB2  EQU   ABND+1
@NM00006 EQU   MSGBAS+49
@NM00005 EQU   MSGBAS+22
@NM00004 EQU   MSGBAS
@NM00003 EQU   PARM+21
@NM00002 EQU   PARMFLGS
*                                      END UNREFERENCED COMPONENTS
@RT00218 EQU   LOADERR
@RC00396 EQU   @EL00003
@PB00005 EQU   @EL00001
@RC00400 EQU   @RC00396
@RC00407 EQU   @RC00396
@PB00004 EQU   @PB00005
@PB00003 EQU   @PB00004
@PB00002 EQU   @PB00003
@ENDDATA EQU   *
         END   IEEMB860,(C'PLS2014',0701,76336)
