TJJ0     TITLE 'IGTJJ0 - SUBSYSTEM UNALLOCATION INTERFACE ROUTINE.     *
                        '
*                                 DEFINE INITIAL GETMAIN MACRO
         MACRO
&LABEL   IGTDGSV &R,&LV=,&SP=,&INITIAL=YES
         L       APCTPTR,20(,@13)  SSCVT POINTER TO APCTREG FROM SAVE
         L       APCTPTR,SSCTSUSE-SSCT(,APCTPTR) POINTER TO APCT INITED
&LABEL   IGTYGSV &R,INITIAL=&INITIAL,SP=&SP,LV=&LV
         MEND
IGTJJ0   CSECT ,                                                01S0002
@MAINENT DS    0H                                               01S0002
         USING *,@15                                            01S0002
         B     @PROLOG                                          01S0002
         DC    AL1(16)                                          01S0002
         DC    C'IGTJJ0    77.092'                              01S0002
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                  01S0002
         BALR  @07,0                                            01S0002
@PSTART  DS    0H                                               01S0002
         USING @PSTART,@07                                      01S0002
         L     @00,@SIZDATD                                     01S0002
         IGTDGSV  R,LV=(0)
         LR    @06,@01                                          01S0002
         USING @DATD,@06                                        01S0002
         ST    @13,@SA00001+4                                   01S0002
         LM    @00,@01,20(@13)                                  01S0002
         ST    @06,8(,@13)                                      01S0002
         LR    @13,@06                                          01S0002
*                                 /* REFERENCED IN MACRO GENED PROLOG*/
*                                                               01S0098
*/*  ESTABLISH SUBSYSTEM INTERFACE CONTROL BLOCK POINTERS            */
*                                                               01S0098
*   SSOBPTR=R1P;                    /* POINTER TO THE BASIC SSOB     */
         ST    R1P,SSOBPTR                                      01S0098
*   SSCTPTR=R0P;                    /* POINTER TO SSCVT FOR SUBSYS   */
         LR    SSCTPTR,R0P                                      01S0099
*   APDSPTR=SSALSSCM;               /* POINTER TO APDS TO BE    01S0100
*                                      UNALOCATED                    */
         L     @15,SSOBPTR                                      01S0100
         L     @14,SSOBINDV(,@15)                               01S0100
         L     APDSPTR,SSALSSCM(,@14)                           01S0100
*   RFY                                                         01S0101
*    (R0P,                                                      01S0101
*     R1P) UNRSTD;                  /* NO LONGER NEED THESE REGISTERS*/
*   ALLSTAT=0;                      /* INITIALIZE STATUS INDICATORS  */
         SLR   @14,@14                                          01S0102
         ST    @14,ALLSTAT                                      01S0102
*   ALLRSRCE=0;                     /* INITIALIZE ENQ RESOURCE STATUS*/
         MVI   ALLRSRCE,X'00'                                   01S0103
*                                                               02S0104
*   /*****************************************************************/
*   /*                                                               */
*   /* VALIDATE SUSBSYSTEM REQUEST. INSURE THAT VPSS ALLOCATION      */
*   /* RECEIVED CONTROL FROM COMMON ALLOCATION.                      */
*   /*                                                               */
*   /*****************************************************************/
*                                                               02S0104
*   IF SSOBID^='SSOB' THEN          /* INVALID ENTRY - BUT           */
         CLC   SSOBID(4,@15),@CC02959                           02S0104
         BE    @RF00104                                         02S0104
*     DO;                           /* NOWHERE TO GO                 */
*       ALLFAIL=BON;                /* INDICATE ALLOCATION FAILS     */
         OI    ALLFAIL,B'10000000'                              02S0106
*       RETCODE=SSRTLERR;           /* INDICATE INVALID REQUEST VIA  */
         MVC   RETCODE(4),@CF00193                              02S0107
*     END;                          /* REGISTER 15 RETURN CODE,NOT
*                                      RETN                          */
*   ELSE                                                        02S0109
*     IF SSOBFUNC^=SSOBUNAL THEN    /* IF NOT THE SSOB FOR      02S0109
*                                      UNALLOCATION                  */
         B     @RC00104                                         02S0109
@RF00104 L     @01,SSOBPTR                                      02S0109
         CLC   SSOBFUNC(2,@01),@CH00056                         02S0109
         BE    @RF00109                                         02S0109
*       DO;                         /* UNALLOCATION FAILS            */
*         ALLFAIL=BON;              /* INDICATE FAILURE AND          */
         OI    ALLFAIL,B'10000000'                              02S0111
*         RETCODE=SSRTLERR;         /* VIA R15 RETURN CODE INFORM
*                                      ALLOC                         */
         MVC   RETCODE(4),@CF00193                              02S0112
*       END;                        /* OF FAILURE TO INTERFACE  02S0113
*                                      PROPERLY                      */
*     ELSE                          /* OTHERWISE, REQUEST APPEARS
*                                      VALID                         */
*       ALLRQVAL='1'B;              /* INDICATE THAT REQUEST IS VALID*/
         B     @RC00109                                         02S0114
@RF00109 OI    ALLRQVAL,B'01000000'                             02S0114
*   IF ALLRQVAL='1'B THEN           /* REQUEST IS VALID - SO FAR     */
@RC00109 DS    0H                                               01S0115
@RC00104 TM    ALLRQVAL,B'01000000'                             01S0115
         BNO   @RF00115                                         01S0115
*     DO;                           /* PROCEED TO                    */
*       DO;                         /* START OF CODE SEGMENT         */
*         SSOBRETN=SSALRTOK;        /* ALLOCATION SUCCESSFUL         */
         SLR   @15,@15                                          02S0118
         L     @14,SSOBPTR                                      02S0118
         ST    @15,SSOBRETN(,@14)                               02S0118
*         RETCODE=0;                /* SET REGISTER RETURN CODE 0    */
*                                                               02S0119
         ST    @15,RETCODE                                      02S0119
*         /***********************************************************/
*         /*                                                         */
*         /* ESTABLISH ERROR RECOVERY ENVIRONMENT. SUBSYSTEM         */
*         /* ALLOCATION REQUIRES THAT AN ERROR RECOVERY ENVIRONMENT  */
*         /* BE ESTABLISHED PRIOR TO ANY ACQUISTITON OF SYSTEM OR    */
*         /* SUBSYSTEM RESOURCES.                                    */
*         /*                                                         */
*         /***********************************************************/
*                                                               02S0120
*                                                               02S0120
*         /***********************************************************/
*         /*                                                         */
*         /* ESTABLISH RECOVERY ENVIRONMENT. THE ERROR RECOVERY EXIT */
*         /* WILL GAIN CONTROL IF AN ABEND OCCURS. A DUMP IS TAKEN,  */
*         /* THE APPROPRIATE ERROR FLAGS SET, AND CONTROL PASSED TO  */
*         /* THE CLEANUP ROUTINE TO RELEASE RESOURCES BEFORE         */
*         /* RETURNING TO THE CALLER.                                */
*         /*                                                         */
*         /***********************************************************/
*                                                               02S0120
*                                                               02S0120
*         /***********************************************************/
*         /*                                                         */
*         /* BUILD ESTAE/FRR EXIT PARAMETER LIST                     */
*         /*                                                         */
*         /***********************************************************/
*                                                               02S0120
*         GEN REFS(ESTAEL2,ESTAEL2L) SETS(ESTAEL);              02S0120
*                                   /*
         MVC   ESTAEL(L'ESTAEL2L),ESTAEL2 MOVE LIST TO THE DYN AREA
*         APESPTR=ADDR(DAPES1);     /* POINT TO THE APES             */
         LA    @15,DAPES1                                       02S0121
         ST    @15,APESPTR                                      02S0121
*         RFY                                                   02S0122
*           R5P RSTD;               /* WILL TEMPORARILY USE FOR APES */
*         RFY                                                   02S0123
*           APES BASED(R5P);        /* PROVIDE TEMP BASING EXPRESSION*/
*         R5P=APESPTR;              /* INITIALIZE THE POINTER        */
         LR    R5P,@15                                          02S0124
*         RFY                                                   02S0125
*          (R0P,                                                02S0125
*           R1F,                                                02S0125
*           R14P,                                               02S0125
*           R15F) RSTD;             /* INITIALIZE APES BLOCK         */
*         R0P=ADDR(APES);           /* TO ZEROS                      */
         LR    R0P,R5P                                          02S0126
*         R1F=LENGTH(APES);         /* USE MVCL TO                   */
         LA    R1F,648                                          02S0127
*         R15F=0;                   /* CLEAR, SINCE FIELD            */
         SLR   R15F,R15F                                        02S0128
*         MVCL(R0P,R14P);           /* MORE THAN 216 BYTES LONG      */
         MVCL  R0P,R14P                                         02S0129
*         RFY                                                   02S0130
*          (R0P,                                                02S0130
*           R1F,                                                02S0130
*           R14P,                                               02S0130
*           R15F) UNRSTD;           /* FINISHED WITH MVCL REGS       */
*         APESID=APESIDC;           /* IN-CORE ID                    */
         MVC   APESID(4,R5P),@CC02588                           02S0131
*         APESADDR=ADDR(APES);      /* ESTAE PARM VALUE              */
         ST    R5P,APESADDR(,R5P)                               02S0132
*         APESAPMV=ADDR(CMBRXZZZ);  /* MESSAGE INDEX TABLE           */
         LA    @04,CMBRXZZZ                                     02S0133
         ST    @04,APESAPMV(,R5P)                               02S0133
*         APESMXCD=CERRN99;         /* MAXIMUM APESCODE VALUE        */
         MVI   APESMXCD(R5P),X'01'                              02S0134
*         APESFREC=BON;             /* RECORD ON LOGREC              */
*         APESFSDP=BON;             /* SDUMP ON ERROR                */
         OI    APESFREC(R5P),B'01100000'                        02S0136
*         APESMOD='IGTJJ0  ';       /* MODULE IN CONTROL             */
         MVC   APESMOD(8,R5P),@CC02967                          02S0137
*         APESPROC='IGTJJ0  ';      /* CSECT IN CONTROL              */
         MVC   APESPROC(8,R5P),@CC02967                         02S0138
*         APESFRR='        ';       /* NO FRR ID                     */
         MVC   APESFRR(8,R5P),@CC02968                          02S0139
*         APESREGP=ADDR(APESREGZ);  /* DEFAULT REGISTER SAVEAREA     */
         LA    @04,APESREGZ(,R5P)                               02S0140
         ST    @04,APESREGP(,R5P)                               02S0140
*         STM(R0F,R14F,APESREGZ);   /* SAVE REGISTERS FOR RETRY      */
         STM   R0F,R14F,APESREGZ(R5P)                           02S0141
*         APESCODE=CERRN99;         /* 'UNKNOWN' ERROR               */
         MVI   APESCODE(R5P),X'01'                              02S0142
*         RFY                                                   02S0143
*           R2P RSTD;               /* POINTS TO EXIT ROUTINE        */
*         R2P=ADDR(APCVZUKA);       /* (IGTUKA).                     */
         L     R2P,APCTZUKA(,APCTPTR)                           02S0144
*         APESEXRA=ADDR(JJ0EXR);    /* PROVIDE EXTENDED RECOVERY EXIT*/
         LA    @03,JJ0EXR                                       02S0145
         ST    @03,APESEXRA(,R5P)                               02S0145
*         APESFEXR=BON;             /* INDICATE EXTENDED EXIT FOR USE*/
         OI    APESFEXR(R5P),B'00000100'                        02S0146
*         APESRTRY=ADDR(IGTJJX);    /* PROVIDE (E)STAE RETRY ROUTINE */
         LA    @03,IGTJJX                                       02S0147
         ST    @03,APESRTRY(,@04)                               02S0147
*         GEN REFS(APESADDR,APES,R5P,APSVPTR,ESTAEL,R2P,FLCCVT,PSA,
*             CVTSV60,CVTMAP) SETS(ESTAEL);                     02S0148
*                                   /*
         IGTYSTAE (R2P),           IGTUKA IS EXIT ROUTINE              *
               PARAM=APESADDR-APES(R5P), ADDR OF APES IS PARM LIST     *
               BRANCH=NO,          SVC ENTRY                           *
               MF=(E,ESTAEL)       EXECUTE FORM OF THE MACRO
*         RFY                                                   02S0149
*          (R2P,                                                02S0149
*           R5P) UNRSTD;            /* DONE WITH EXIT PTR & TEMP APES*/
*         RFY                                                   02S0150
*           APES BASED(APESPTR);    /* REVERT TO NORMAL BASING EXP   */
*         RFY                                                   02S0151
*           R15F RSTD;              /* REGISTER USED FOR RETURN CODE */
*         IF R15F=0 THEN            /* IF ERR RECOVERY ENV ESTABLISHD*/
         LTR   R15F,R15F                                        02S0152
         BNZ   @RF00152                                         02S0152
*           ALLERREN=BON;           /* INDICATE SUCCESS .            */
         OI    ALLERREN,B'00100000'                             02S0153
*         ELSE                      /* ERROR RECOVERY ENVIRONMENT NOT*/
*           DO;                     /* ESTABLISHED. INDICATE ERROR.  */
         B     @RC00152                                         02S0154
@RF00152 DS    0H                                               02S0155
*             RFY                                               02S0155
*               R15F UNRSTD;        /* DONE WITH REGISTER            */
*             ALLFAIL=BON;          /* JOB FAILS ALLOCATION          */
         OI    ALLFAIL,B'10000000'                              02S0156
*             SSOBRETN=SSALUNAL;    /* PROVIDE NON ZERO RETURN CODE  */
         L     @01,SSOBPTR                                      02S0157
         MVC   SSOBRETN(4,@01),@CF00193                         02S0157
*           END;                                                02S0158
*       END;                        /* ESTAE ENVIRONMENT SET         */
@RC00152 DS    0H                                               02S0160
*       IF ALLERREN='1'B THEN       /* ERROR RECOVERY ENV ESTABLISHED*/
         TM    ALLERREN,B'00100000'                             01S0160
         BNO   @RF00160                                         01S0160
*         DO;                       /* SERIALIZE ACCESS TO      01S0161
*                                      APUBS/APDSS                   */
*           APESRTRY=ADDR(FINDAPDS);/* ADVANCE POINT OF RETRY        */
         L     @01,APESPTR                                      01S0162
         L     @01,APESREGP(,@01)                               01S0162
         LA    @00,FINDAPDS                                     01S0162
         ST    @00,APESRTRY(,@01)                               01S0162
*           ENQECB=0;               /* CLEAR ENQ ECB                 */
         SLR   @15,@15                                          02S0163
         ST    @15,ENQECB                                       02S0163
*           RFY                                                 02S0164
*             R15P RSTD;            /* NEED REGISTER FOR ENQ RET CODE*/
*           GEN REFS(APCTENQM,APUBENQR,NQLISTEL,ENQLISTE) SETS(DYNQLIST
*               );                                              02S0165
*                                   /*
         MVC   DYNQLIST(L'NQLISTEL),ENQLISTE INIT ENQ DYN LIST AREA
         ENQ   (APCTENQM-APCT(,APCTPTR),APUBENQR,E,4,SYSTEM),          *
               ECB=ENQECB,MF=(E,DYNQLIST)
*           IF R15P^=0&ENQRC^=8 THEN/* IF TASK DOES NOT HAVE SHR'D   */
         LTR   R15P,R15P                                        02S0166
         BZ    @RF00166                                         02S0166
         CLI   ENQRC(R15P),8                                    02S0166
         BE    @RF00166                                         02S0166
*             DO;                   /* CONTROL OR RESOURCE THEN WAIT */
*               RFY                                             02S0168
*                 R15P UNRSTD;      /* THROUGH WITH ENQ RETURN CODE  */
*               DO;                 /* IGTYWAIT ECB(ENQECB)LONG(NO)  */
*                 RFY                                           02S0170
*                  (GPR00F,                                     02S0170
*                   GPR01P) RSTD;   /* REGISTERS USED                */
*                 DCL                                           02S0171
*                   BIT0015X BIT(8) BASED(ADDR(ENQECB));/* OVERLAY
*                                      BYTE-0 OF ECB                 */
*                 IF BIT0015X(2)='0'B THEN/* IF ECB NOT ALREADY 02S0172
*                                      POSTED                        */
         LA    @15,ENQECB                                       02S0172
         TM    BIT0015X(@15),B'01000000'                        02S0172
         BNZ   @RF00172                                         02S0172
*                   DO;             /* THEN ISSUE WAIT SVC           */
*                     GPR01P=ADDR(ENQECB);/* POINT TO ECB            */
         LR    GPR01P,@15                                       02S0174
*                     GPR00F=1;     /* WAIT COUNT                    */
         LA    GPR00F,1                                         02S0175
*                     SVC(1);       /* WAIT FOR ECB POSTING          */
         SVC   1                                                02S0176
*                   END;            /* ECB WAIT COMPLETE             */
*                 RFY                                           02S0178
*                  (GPR00F,                                     02S0178
*                   GPR01P) UNRSTD; /* FINISHED WITH REGISTERS       */
@RF00172 DS    0H                                               02S0179
*               END;                /* ECB WAIT COMPLETE WAIT FOR
*                                      APUB ENQ TO COMPLETE          */
*             END;                                              02S0180
*           ALLAPUB=BON;            /* INDICATE ENQ RES (TO BE) OWNED*/
@RF00166 OI    ALLAPUB,B'00100000'                              02S0181
*           IF ALLAPUB=BON THEN     /* CURRENT TASK CONTROLS RESOURCE*/
         TM    ALLAPUB,B'00100000'                              01S0182
         BNO   @RF00182                                         01S0182
*             DO;                   /* LOOK FOR APDS ON APDS QUEUE   */
*                                                               01S0183
*               /*****************************************************/
*               /*                                                   */
*               /* WAITING IN SS ALLOC FOR 3838 RESOURCES            */
*               /*                                                   */
*               /*****************************************************/
*                                                               01S0184
*               DO;                 /* BEGIN CODE SEGMENT            */
*                 RFY                                           02S0185
*                  (R0RSTD,                                     02S0185
*                   R1RSTD,                                     02S0185
*                   R2RSTD,                                     02S0185
*                   R3RSTD,                                     02S0185
*                   R4RSTD,                                     02S0185
*                   R5RSTD,         /* 6 & 7 BASES                   */
*                   R8RSTD,                                     02S0185
*                   R9RSTD,                                     02S0185
*                   R10RSTD,                                    02S0185
*                   R12RSTD,                                    02S0185
*                   R14RSTD,                                    02S0185
*                   R15RSTD) RSTD;                              02S0185
*                 RFY                                           02S0186
*                  (R0RSTD,                                     02S0186
*                   R1RSTD,                                     02S0186
*                   R2RSTD,                                     02S0186
*                   R3RSTD,                                     02S0186
*                   R4RSTD,                                     02S0186
*                   R5RSTD,         /* 6 & 7 BASES                   */
*                   R8RSTD,                                     02S0186
*                   R9RSTD,                                     02S0186
*                   R10RSTD,                                    02S0186
*                   R12RSTD,                                    02S0186
*                   R14RSTD,                                    02S0186
*                   R15RSTD) UNRSTD;                            02S0186
*               END;                /* END OF CODE SEGMENT           */
*FINDAPDS:                                                      01S0188
*               APESRTRY=ADDR(FIXQUEUE);/* ADVANCE RETRY POINT       */
FINDAPDS L     @15,APESPTR                                      01S0188
         L     @01,APESREGP(,@15)                               01S0188
         LA    @00,FIXQUEUE                                     01S0188
         ST    @00,APESRTRY(,@01)                               01S0188
*               DO;                 /* ERROR RECOVERY COMPLETE       */
*                 APESFPRV=BOFF;    /* RESET RECURSION FLAG.         */
         NI    APESFPRV(@15),B'10111111'                        02S0190
*                 APESCODE=CERRN99; /* RESET ERROR CODE              */
         MVI   APESCODE(@15),X'01'                              02S0191
*                 APESFDMP=BON;     /* RESET DUMP/LOG FLAGS          */
*                 APESFREC=BON;     /* TO THEIR NORMAL VALUES        */
*                 APESFSDP=BON;     /* (ALL ON)                      */
         OI    APESFDMP(@15),B'11100000'                        02S0194
*               END;                /* ALL INDICATORS RESET          */
*               DO;                 /* INSURE ENTIRE SEGMENT INCLUDED*/
*                 RFY                                           02S0197
*                  (R1P,                                        02S0197
*                   R2P) RSTD;      /* USES REGS FOR APDS QUE, ASCB  */
*                 R1P=APCTAPDS;     /* START SCAN FOR APDS WITH FIRST*/
         L     R1P,APCTAPDS(,APCTPTR)                           02S0198
*                 R2P=APDSASCB;     /* ASCB TO WHICH 3838 IS ALLOCATD*/
         L     R2P,APDSASCB(,APDSPTR)                           02S0199
*                 DO WHILE R1P^=0;  /* DO ONCE FOR EACH APDS ON QUEUE*/
         B     @DE00200                                         02S0200
@DL00200 DS    0H                                               02S0201
*                   IF R1P=APDSPTR THEN/* IF WE'VE LOCATED THE APDS
*                                      THEN                          */
         CR    R1P,APDSPTR                                      02S0201
         BNE   @RF00201                                         02S0201
*                     DO;           /* WE CAN                        */
*                       ALLQUE=BON; /* INDICATE THAT IT'S ON THE QUE */
         OI    ALLQUE,B'01000000'                               02S0203
*                       ALLAPDS=BON;/* AND THAT THE STORAGE EXISTS   */
         OI    ALLAPDS,B'00010000'                              02S0204
*                     END;          /* DO IF R1P = APDSPTR           */
*                   ELSE            /* OTHERWISE, IF CURRENT APDS IS */
*                     IF R2P=R1P->APDSASCB THEN/* ALLOCATED TO THE
*                                      SAME ADDRESS                  */
         B     @RC00201                                         02S0206
@RF00201 C     R2P,APDSASCB(,R1P)                               02S0206
         BNE   @RF00206                                         02S0206
*                       ALLNLAA=BON;/* SPACE, INDICATE NOT LAST APDS
*                                      ALLOCATED TO ADDRESS SPACE    */
         OI    ALLNLAA,B'10000000'                              02S0207
*                   R1P=R1P->APDSAPDS;/* ADVANCE TO NEXT APDS OR DONE*/
@RF00206 DS    0H                                               02S0208
@RC00201 L     R1P,APDSAPDS(,R1P)                               02S0208
*                 END;              /* DO WHILE APDSS TO LOOK AT     */
@DE00200 LTR   R1P,R1P                                          02S0209
         BNZ   @DL00200                                         02S0209
*                 ALLSRCH=BON;      /* INDICATE SEARCH FOR APDS DONE */
         OI    ALLSRCH,B'00000100'                              02S0210
*               END;                /* END OF SEGMENT                */
*               GOTO UNALLOC;       /* ON TO NEXT SEGMENT            */
         B     UNALLOC                                          01S0212
*               DO;                 /* BEGIN CODE SEGMENT            */
*                 RFY                                           02S0214
*                  (R0RSTD,                                     02S0214
*                   R1RSTD,                                     02S0214
*                   R2RSTD,                                     02S0214
*                   R3RSTD,                                     02S0214
*                   R4RSTD,                                     02S0214
*                   R5RSTD,         /* 6 & 7 BASES                   */
*                   R8RSTD,                                     02S0214
*                   R9RSTD,                                     02S0214
*                   R10RSTD,                                    02S0214
*                   R12RSTD,                                    02S0214
*                   R14RSTD,                                    02S0214
*                   R15RSTD) RSTD;                              02S0214
*                 RFY                                           02S0215
*                  (R0RSTD,                                     02S0215
*                   R1RSTD,                                     02S0215
*                   R2RSTD,                                     02S0215
*                   R3RSTD,                                     02S0215
*                   R4RSTD,                                     02S0215
*                   R5RSTD,         /* 6 & 7 BASES                   */
*                   R8RSTD,                                     02S0215
*                   R9RSTD,                                     02S0215
*                   R10RSTD,                                    02S0215
*                   R12RSTD,                                    02S0215
*                   R14RSTD,                                    02S0215
*                   R15RSTD) UNRSTD;                            02S0215
*               END;                /* END OF CODE SEGMENT           */
*FIXQUEUE:                                                      01S0217
*               APESRTRY=ADDR(UNALLOC);/* ADVANCE RETRY POINT        */
FIXQUEUE L     @03,APESPTR                                      01S0217
         L     @15,APESREGP(,@03)                               01S0217
         LA    @00,UNALLOC                                      01S0217
         ST    @00,APESRTRY(,@15)                               01S0217
*               DO;                 /* ERROR RECOVERY COMPLETE       */
*                 APESFPRV=BOFF;    /* RESET RECURSION FLAG.         */
         NI    APESFPRV(@03),B'10111111'                        02S0219
*                 APESCODE=CERRN99; /* RESET ERROR CODE              */
         MVI   APESCODE(@03),X'01'                              02S0220
*                 APESFDMP=BON;     /* RESET DUMP/LOG FLAGS          */
*                 APESFREC=BON;     /* TO THEIR NORMAL VALUES        */
*                 APESFSDP=BON;     /* (ALL ON)                      */
         OI    APESFDMP(@03),B'11100000'                        02S0223
*               END;                /* ALL INDICATORS RESET          */
*               CALL APDSQREP;      /* REPAIR THE QUEUE              */
         BAL   @14,APDSQREP                                     01S0225
*               DO;                 /* BEGIN CODE SEGMENT            */
*                 RFY                                           02S0227
*                  (R0RSTD,                                     02S0227
*                   R1RSTD,                                     02S0227
*                   R2RSTD,                                     02S0227
*                   R3RSTD,                                     02S0227
*                   R4RSTD,                                     02S0227
*                   R5RSTD,         /* 6 & 7 BASES                   */
*                   R8RSTD,                                     02S0227
*                   R9RSTD,                                     02S0227
*                   R10RSTD,                                    02S0227
*                   R12RSTD,                                    02S0227
*                   R14RSTD,                                    02S0227
*                   R15RSTD) RSTD;                              02S0227
*                 RFY                                           02S0228
*                  (R0RSTD,                                     02S0228
*                   R1RSTD,                                     02S0228
*                   R2RSTD,                                     02S0228
*                   R3RSTD,                                     02S0228
*                   R4RSTD,                                     02S0228
*                   R5RSTD,         /* 6 & 7 BASES                   */
*                   R8RSTD,                                     02S0228
*                   R9RSTD,                                     02S0228
*                   R10RSTD,                                    02S0228
*                   R12RSTD,                                    02S0228
*                   R14RSTD,                                    02S0228
*                   R15RSTD) UNRSTD;                            02S0228
*               END;                /* END OF CODE SEGMENT           */
*UNALLOC:                                                       01S0230
*               APESRTRY=ADDR(DEQAPDS);/* ADVANCE RETRY POINT        */
UNALLOC  L     @03,APESPTR                                      01S0230
         L     @15,APESREGP(,@03)                               01S0230
         LA    @00,DEQAPDS                                      01S0230
         ST    @00,APESRTRY(,@15)                               01S0230
*               DO;                 /* ERROR RECOVERY COMPLETE       */
*                 APESFPRV=BOFF;    /* RESET RECURSION FLAG.         */
         NI    APESFPRV(@03),B'10111111'                        02S0232
*                 APESCODE=CERRN99; /* RESET ERROR CODE              */
         MVI   APESCODE(@03),X'01'                              02S0233
*                 APESFDMP=BON;     /* RESET DUMP/LOG FLAGS          */
*                 APESFREC=BON;     /* TO THEIR NORMAL VALUES        */
*                 APESFSDP=BON;     /* (ALL ON)                      */
         OI    APESFDMP(@03),B'11100000'                        02S0236
*               END;                /* ALL INDICATORS RESET          */
*               IF ALLQUE=BON THEN  /* IF APDS LOCATED ON APDS QUEUE */
         TM    ALLQUE,B'01000000'                               01S0238
         BNO   @RF00238                                         01S0238
*                 DO;               /* IT CAN BE REMOVED FROM QUEUE  */
*                   IF APDSARS=BON THEN/* IF IT IS A SATISFIED REQUST*/
         TM    APDSARS(APDSPTR),B'00001000'                     01S0240
         BNO   @RF00240                                         01S0240
*                     DO;           /* IT MUST BE UNALLOCATED        */
*                       IF APDSOWN=EXC&/* IF EXCLUSIVE PORT ALLOCATED*/
*                           APDSAPUB^=0 THEN/* AND NOT UNALLOCATED
*                                      YET                           */
         TM    APDSOWN(APDSPTR),B'10000000'                     01S0242
         BNO   @RF00242                                         01S0242
         L     @03,APDSAPUB(,APDSPTR)                           01S0242
         LTR   @03,@03                                          01S0242
         BZ    @RF00242                                         01S0242
*                         DO;       /* PUT APUB BACK ON SHARED QUEUE */
*                           APUBPTR=APDSAPUB;/* POINT TO PROPER APUB */
         LR    APUBPTR,@03                                      01S0244
*                           APUBOWN=SHR;/* INDICATE AVAILABILITY OF
*                                      APUB                          */
         L     @03,APUBOWN(,APUBPTR)                            01S0245
@GL00003 LR    @00,@03                                          01S0245
         N     @00,@CF03125                                     01S0245
         CS    @03,@00,APUBOWN(APUBPTR)                         01S0245
         BNE   @GL00003                                         01S0245
*                           APUBIEXC=BOFF;/* INDICATE NO LONGER OWNED*/
         L     @03,APUBIEXC-2(,APUBPTR)                         01S0246
@GL00004 LR    @00,@03                                          01S0246
         N     @00,@CF03128                                     01S0246
         CS    @03,@00,APUBIEXC-2(APUBPTR)                      01S0246
         BNE   @GL00004                                         01S0246
*                           APUBISHR=BON;/* INDICATE NOW AVAIL FOR
*                                      SHR                           */
         L     @03,APUBISHR-3(,APUBPTR)                         01S0247
@GL00005 LR    @00,@03                                          01S0247
         O     @00,@CF03131                                     01S0247
         CS    @03,@00,APUBISHR-3(APUBPTR)                      01S0247
         BNE   @GL00005                                         01S0247
*                           APDSAPUB=0;/* INDICATE RESOURCE     01S0248
*                                      UNALLOCATED                   */
         SLR   @03,@03                                          01S0248
         ST    @03,APDSAPUB(,APDSPTR)                           01S0248
*                         END;      /* DONE WITH EXC PORTION UNALLOC */
*                       ELSE                                    01S0250
*                         ;         /* SHARED PORT ALLOCATION        */
@RF00242 DS    0H                                               01S0251
*                       APDSARS=BOFF;/* INDICATE NO LONGER ALLOCATED */
         NI    APDSARS(APDSPTR),B'11110111'                     01S0251
*                     END;          /* IF APDSARS = BON              */
*                   ELSE                                        01S0253
*                     ;             /* REQUEST NOT SATISFIED         */
@RF00240 DS    0H                                               01S0254
*                   DO;             /* BEGIN CODE SEGMENT            */
*                     RFY                                       02S0255
*                      (R0RSTD,                                 02S0255
*                       R1RSTD,                                 02S0255
*                       R2RSTD,                                 02S0255
*                       R3RSTD,                                 02S0255
*                       R4RSTD,                                 02S0255
*                       R5RSTD,     /* 6 & 7 BASES                   */
*                       R8RSTD,                                 02S0255
*                       R9RSTD,                                 02S0255
*                       R10RSTD,                                02S0255
*                       R12RSTD,                                02S0255
*                       R14RSTD,                                02S0255
*                       R15RSTD) RSTD;                          02S0255
*                     RFY                                       02S0256
*                      (R0RSTD,                                 02S0256
*                       R1RSTD,                                 02S0256
*                       R2RSTD,                                 02S0256
*                       R3RSTD,                                 02S0256
*                       R4RSTD,                                 02S0256
*                       R5RSTD,     /* 6 & 7 BASES                   */
*                       R8RSTD,                                 02S0256
*                       R9RSTD,                                 02S0256
*                       R10RSTD,                                02S0256
*                       R12RSTD,                                02S0256
*                       R14RSTD,                                02S0256
*                       R15RSTD) UNRSTD;                        02S0256
*                   END;            /* END OF CODE SEGMENT           */
*DEQAPDS:                                                       01S0258
*                   APESRTRY=ADDR(DOVUSE);/* ADVANCE RETRY POINT     */
DEQAPDS  L     @03,APESPTR                                      01S0258
         L     @15,APESREGP(,@03)                               01S0258
         LA    @00,DOVUSE                                       01S0258
         ST    @00,APESRTRY(,@15)                               01S0258
*                   DO;             /* ERROR RECOVERY COMPLETE       */
*                     APESFPRV=BOFF;/* RESET RECURSION FLAG.         */
         NI    APESFPRV(@03),B'10111111'                        02S0260
*                     APESCODE=CERRN99;/* RESET ERROR CODE           */
         MVI   APESCODE(@03),X'01'                              02S0261
*                     APESFDMP=BON; /* RESET DUMP/LOG FLAGS          */
*                     APESFREC=BON; /* TO THEIR NORMAL VALUES        */
*                     APESFSDP=BON; /* (ALL ON)                      */
         OI    APESFDMP(@03),B'11100000'                        02S0264
*                   END;            /* ALL INDICATORS RESET          */
*                   IF ALLAPUB=BON THEN/* ONLY IF WE HAVE APUB DO WE */
         TM    ALLAPUB,B'00100000'                              01S0266
         BNO   @RF00266                                         01S0266
*DQAPDSDO:                          /* APDS TO BE DEQUEUED HAS PTR   */
*                     DO;           /* IN APDSPTR                    */
DQAPDSDO DS    0H                                               02S0268
*                       FIRSAPDS=APDSDSAP;/* OUR APDS'S PREVIOUS     */
         L     @03,APDSDSAP(,APDSPTR)                           02S0268
         LR    FIRSAPDS,@03                                     02S0268
*                       LASTAPDS=APDSAPDS;/* OUR APDS'S NEXT         */
         L     @15,APDSAPDS(,APDSPTR)                           02S0269
         LR    LASTAPDS,@15                                     02S0269
*                       APESRTRY=ADDR(FINSQRMV);/* FINISH QUEUE 02S0270
*                                      REMOVAL OPERATION             */
         L     @14,APESPTR                                      02S0270
         L     @14,APESREGP(,@14)                               02S0270
         LA    @00,FINSQRMV                                     02S0270
         ST    @00,APESRTRY(,@14)                               02S0270
*                       ALLQRMV=BON;/* INDICATE REMOVAL BEGUN        */
*                       ALLQUE=BOFF;/* INDICATE QUEUE POSSIBLEY NOT
*                                      INTACT OR BL0CK NOT ON QUEUE  */
         OI    ALLQRMV,B'00100000'                              02S0272
         NI    ALLQUE,B'10111111'                               02S0272
*                       IF APDSAPDS=0 THEN/* THIS IS LAST BLK ON
*                                      QUEUE                         */
         SLR   @14,@14                                          02S0273
         CR    @15,@14                                          02S0273
         BNE   @RF00273                                         02S0273
*                         IF APDSDSAP=0 THEN/* THIS IS ONLY BLK ON
*                                      QUEUE                         */
         CR    @03,@14                                          02S0274
         BNE   @RF00274                                         02S0274
*                           DO;     /* RESET FIRST AND LAST POINTERS */
*                             APCTAPDS=0;/* FIRST = 0                */
         ST    @14,APCTAPDS(,APCTPTR)                           02S0276
*                             APCTDSAP=0;/* LAST = 0                 */
         ST    @14,APCTDSAP(,APCTPTR)                           02S0277
*                           END;                                02S0278
*                         ELSE      /* (OTHERS BEFORE THIS ONE)      */
*                           DO;                                 02S0279
         B     @RC00274                                         02S0279
@RF00274 DS    0H                                               02S0280
*                             APDSDSAP->APDSAPDS=0;/* NEW LAST HAS 0
*                                      NEXT                          */
         L     @03,APDSDSAP(,APDSPTR)                           02S0280
         SLR   @00,@00                                          02S0280
         ST    @00,APDSAPDS(,@03)                               02S0280
*                             APCTDSAP=APDSDSAP;/* NEW LAST POINTER  */
         ST    @03,APCTDSAP(,APCTPTR)                           02S0281
*                           END;                                02S0282
*                       ELSE        /* (FIRST OR INTERIOR QUE BLK &  */
*                         IF APDSDSAP=0 THEN/* OTHERS FOLLOW. IF PTR
*                                      TO PREV                       */
         B     @RC00273                                         02S0283
@RF00273 SLR   @03,@03                                          02S0283
         C     @03,APDSDSAP(,APDSPTR)                           02S0283
         BNE   @RF00283                                         02S0283
*                           DO;     /* IOUS IS ZERO THEN THIS IS 1ST */
*                             APCTAPDS=APDSAPDS;/* NEW FIRST POINTER */
         L     @15,APDSAPDS(,APDSPTR)                           02S0285
         ST    @15,APCTAPDS(,APCTPTR)                           02S0285
*                             APDSAPDS->APDSDSAP=0;/* NEW FIRST HAS
*                                      NO PREVIOUS                   */
         ST    @03,APDSDSAP(,@15)                               02S0286
*                           END;                                02S0287
*                         ELSE      /* (INTERIOR QUEUE BLK)          */
*                           DO;     /*                               */
         B     @RC00283                                         02S0288
@RF00283 DS    0H                                               02S0289
*                             APDSDSAP->APDSAPDS=APDSAPDS;/* PREVIOUS
*                                      POINTS TO NEXT                */
         L     @03,APDSDSAP(,APDSPTR)                           02S0289
         L     @15,APDSAPDS(,APDSPTR)                           02S0289
         ST    @15,APDSAPDS(,@03)                               02S0289
*                             APDSAPDS->APDSDSAP=APDSDSAP;/* NEXT
*                                      POINTS BACK TO PREV           */
         ST    @03,APDSDSAP(,@15)                               02S0290
*                           END;                                02S0291
*                       ALLQRMV=BOFF;/* INDICATE REMOVAL OPERATION
*                                      DUN                           */
@RC00283 DS    0H                                               02S0292
@RC00273 NI    ALLQRMV,B'11011111'                              02S0292
*                     END DQAPDSDO;                             02S0293
*                   DO;             /* BEGIN CODE SEGMENT            */
@RF00266 DS    0H                                               02S0295
*                     RFY                                       02S0295
*                      (R0RSTD,                                 02S0295
*                       R1RSTD,                                 02S0295
*                       R2RSTD,                                 02S0295
*                       R3RSTD,                                 02S0295
*                       R4RSTD,                                 02S0295
*                       R5RSTD,     /* 6 & 7 BASES                   */
*                       R8RSTD,                                 02S0295
*                       R9RSTD,                                 02S0295
*                       R10RSTD,                                02S0295
*                       R12RSTD,                                02S0295
*                       R14RSTD,                                02S0295
*                       R15RSTD) RSTD;                          02S0295
*                     RFY                                       02S0296
*                      (R0RSTD,                                 02S0296
*                       R1RSTD,                                 02S0296
*                       R2RSTD,                                 02S0296
*                       R3RSTD,                                 02S0296
*                       R4RSTD,                                 02S0296
*                       R5RSTD,     /* 6 & 7 BASES                   */
*                       R8RSTD,                                 02S0296
*                       R9RSTD,                                 02S0296
*                       R10RSTD,                                02S0296
*                       R12RSTD,                                02S0296
*                       R14RSTD,                                02S0296
*                       R15RSTD) UNRSTD;                        02S0296
*                   END;            /* END OF CODE SEGMENT           */
*DOVUSE:                                                        01S0298
*                   APESRTRY=ADDR(APUBDEQ);/* ADVANCE RETRY POINT    */
DOVUSE   L     @03,APESPTR                                      01S0298
         L     @15,APESREGP(,@03)                               01S0298
         LA    @00,APUBDEQ                                      01S0298
         ST    @00,APESRTRY(,@15)                               01S0298
*                   DO;             /* ERROR RECOVERY COMPLETE       */
*                     APESFPRV=BOFF;/* RESET RECURSION FLAG.         */
         NI    APESFPRV(@03),B'10111111'                        02S0300
*                     APESCODE=CERRN99;/* RESET ERROR CODE           */
         MVI   APESCODE(@03),X'01'                              02S0301
*                     APESFDMP=BON; /* RESET DUMP/LOG FLAGS          */
*                     APESFREC=BON; /* TO THEIR NORMAL VALUES        */
*                     APESFSDP=BON; /* (ALL ON)                      */
         OI    APESFDMP(@03),B'11100000'                        02S0304
*                   END;            /* ALL INDICATORS RESET          */
*                   IF ALLNLAA=BOFF THEN/* IF LAST ALLOCATD THEN ADDR
*                                      SPACE HAS NO SUBSYS RESOURCES
*                                      SO INDICATE IN APVU.          */
         TM    ALLNLAA,B'10000000'                              01S0306
         BNZ   @RF00306                                         01S0306
*                     APVUVUSE(PSAAOLD->ASCBASID)=BOFF;/* NO    01S0307
*                                      RESOURCES                     */
         L     @09,PSAAOLD                                      01S0307
         LH    @09,ASCBASID(,@09)                               01S0307
         N     @09,@CF03140                                     01S0307
         SLA   @09,2                                            01S0307
         L     @08,APCTAPVU(,APCTPTR)                           01S0307
         ALR   @08,@09                                          01S0307
         LA    @15,APVUVUSE-4(,@08)                             01S0307
         LR    @14,@15                                          01S0307
         LA    @03,3                                            01S0307
         NR    @14,@03                                          01S0307
         LCR   @14,@14                                          01S0307
         ALR   @15,@14                                          01S0307
         L     @03,0(,@15)                                      01S0307
@GL00006 LR    @00,@03                                          01S0307
         N     @00,@CB03136+3(@14)                              01S0307
         CS    @03,@00,0(@15)                                   01S0307
         BNE   @GL00006                                         01S0307
*                   DO;             /* BEGIN CODE SEGMENT            */
@RF00306 DS    0H                                               02S0309
*                     RFY                                       02S0309
*                      (R0RSTD,                                 02S0309
*                       R1RSTD,                                 02S0309
*                       R2RSTD,                                 02S0309
*                       R3RSTD,                                 02S0309
*                       R4RSTD,                                 02S0309
*                       R5RSTD,     /* 6 & 7 BASES                   */
*                       R8RSTD,                                 02S0309
*                       R9RSTD,                                 02S0309
*                       R10RSTD,                                02S0309
*                       R12RSTD,                                02S0309
*                       R14RSTD,                                02S0309
*                       R15RSTD) RSTD;                          02S0309
*                     RFY                                       02S0310
*                      (R0RSTD,                                 02S0310
*                       R1RSTD,                                 02S0310
*                       R2RSTD,                                 02S0310
*                       R3RSTD,                                 02S0310
*                       R4RSTD,                                 02S0310
*                       R5RSTD,     /* 6 & 7 BASES                   */
*                       R8RSTD,                                 02S0310
*                       R9RSTD,                                 02S0310
*                       R10RSTD,                                02S0310
*                       R12RSTD,                                02S0310
*                       R14RSTD,                                02S0310
*                       R15RSTD) UNRSTD;                        02S0310
*                   END;            /* END OF CODE SEGMENT           */
*APUBDEQ:                                                       01S0312
*                   APESRTRY=ADDR(NOTIFY);/* ADVANCE RETRY POINT     */
APUBDEQ  L     @03,APESPTR                                      01S0312
         L     @15,APESREGP(,@03)                               01S0312
         LA    @00,NOTIFY                                       01S0312
         ST    @00,APESRTRY(,@15)                               01S0312
*                   DO;             /* ERROR RECOVERY COMPLETE       */
*                     APESFPRV=BOFF;/* RESET RECURSION FLAG.         */
         NI    APESFPRV(@03),B'10111111'                        02S0314
*                     APESCODE=CERRN99;/* RESET ERROR CODE           */
         MVI   APESCODE(@03),X'01'                              02S0315
*                     APESFDMP=BON; /* RESET DUMP/LOG FLAGS          */
*                     APESFREC=BON; /* TO THEIR NORMAL VALUES        */
*                     APESFSDP=BON; /* (ALL ON)                      */
         OI    APESFDMP(@03),B'11100000'                        02S0318
*                   END;            /* ALL INDICATORS RESET          */
*                   IF ALLAPUB=BON THEN/* IF RESOURCE IS OWNED, FREE */
         TM    ALLAPUB,B'00100000'                              01S0320
         BNO   @RF00320                                         01S0320
*                     DO;           /* BEGIN CODE SEGMENT            */
*                       ALLAPUB=BOFF;/* NO LONGER CONTROL APUB ENQ
*                                      RES                           */
         NI    ALLAPUB,B'11011111'                              02S0322
*                       GEN REFS(APCTENQM,APUBENQR,DEQLIST1,DQLIST1L)
*                           SETS(DYNDEQLA);                     02S0323
*                                   /*
         MVC   DYNDEQLA(L'DQLIST1L),DEQLIST1 INIT ENQ LIST DYN AREA
         DEQ  (APCTENQM-APCT(,APCTPTR),APUBENQR,4,SYSTEM),             *
               RET=HAVE,           COULD HAVE BEEN CANCELLED IN ECBENQ *
               MF=(E,DYNDEQLA)
*                     END;          /* END CODE SEGMENT              */
*                                                               01S0325
*                   /*************************************************/
*                   /*                                               */
*                   /* NOTIFY JOBS WAITING IN ALLOCATION, IF ANY.    */
*                   /*                                               */
*                   /*************************************************/
*                                                               01S0325
*                   DO;             /* BEGIN CODE SEGMENT            */
@RF00320 DS    0H                                               02S0326
*                     RFY                                       02S0326
*                      (R0RSTD,                                 02S0326
*                       R1RSTD,                                 02S0326
*                       R2RSTD,                                 02S0326
*                       R3RSTD,                                 02S0326
*                       R4RSTD,                                 02S0326
*                       R5RSTD,     /* 6 & 7 BASES                   */
*                       R8RSTD,                                 02S0326
*                       R9RSTD,                                 02S0326
*                       R10RSTD,                                02S0326
*                       R12RSTD,                                02S0326
*                       R14RSTD,                                02S0326
*                       R15RSTD) RSTD;                          02S0326
*                     RFY                                       02S0327
*                      (R0RSTD,                                 02S0327
*                       R1RSTD,                                 02S0327
*                       R2RSTD,                                 02S0327
*                       R3RSTD,                                 02S0327
*                       R4RSTD,                                 02S0327
*                       R5RSTD,     /* 6 & 7 BASES                   */
*                       R8RSTD,                                 02S0327
*                       R9RSTD,                                 02S0327
*                       R10RSTD,                                02S0327
*                       R12RSTD,                                02S0327
*                       R14RSTD,                                02S0327
*                       R15RSTD) UNRSTD;                        02S0327
*                   END;            /* END OF CODE SEGMENT           */
*NOTIFY:                                                        01S0329
*                   APESRTRY=ADDR(ALLOCDEQ);/* ADVANCE RETRY POINT   */
NOTIFY   L     @03,APESPTR                                      01S0329
         L     @15,APESREGP(,@03)                               01S0329
         LA    @00,ALLOCDEQ                                     01S0329
         ST    @00,APESRTRY(,@15)                               01S0329
*                   DO;             /* ERROR RECOVERY COMPLETE       */
*                     APESFPRV=BOFF;/* RESET RECURSION FLAG.         */
         NI    APESFPRV(@03),B'10111111'                        02S0331
*                     APESCODE=CERRN99;/* RESET ERROR CODE           */
         MVI   APESCODE(@03),X'01'                              02S0332
*                     APESFDMP=BON; /* RESET DUMP/LOG FLAGS          */
*                     APESFREC=BON; /* TO THEIR NORMAL VALUES        */
*                     APESFSDP=BON; /* (ALL ON)                      */
         OI    APESFDMP(@03),B'11100000'                        02S0335
*                   END;            /* ALL INDICATORS RESET          */
*                   DO;             /* BEGIN CODE SEGMENT            */
*                     RFY                                       02S0338
*                      (R2F,                                    02S0338
*                       R3F) RSTD;  /* NEED THESE REGISTERS          */
*                     R2F=APCTACTR; /* PRESENT VALUE THE COMPARAND   */
         L     R2F,APCTACTR(,APCTPTR)                           02S0339
*ACTRUPDT:                                                      02S0340
*                     R3F=R2F+1;    /* NEW VALUE TO REPLACE CURRENT  */
ACTRUPDT LA    R3F,1                                            02S0340
         ALR   R3F,R2F                                          02S0340
*                     CS(R2F,R3F,APCTACTR);/* INCREMENT APCTACTR BY
*                                      ONE                           */
         CS    R2F,@03,APCTACTR(APCTPTR)                        02S0341
*                     BC(7,ACTRUPDT);/* TRY AGAIN IF NECESSARY       */
         BC    7,ACTRUPDT                                       02S0342
*                     RFY                                       02S0343
*                      (R2F,                                    02S0343
*                       R3F) UNRSTD;/* DON'T NEED THEM NOW           */
*                   END;            /* CODE SEGMENT                  */
*                   DO;             /* IGTYPOST                 01S0345
*                                      ECB(APCTEALP)ASCBLOC(APCTAALP)*/
*                     RFY                                       01S0346
*                      (GPR00P,                                 01S0346
*                       GPR01P,                                 01S0346
*                       GPR14F,                                 01S0346
*                       GPR15F) RSTD;/* REGISTERS USED               */
*                     GPR15F=APCTEALP;/* CURRENT ECB CONTENTS        */
         L     GPR15F,APCTEALP(,APCTPTR)                        01S0347
*LTR0017X:                                                      01S0348
*                     IF GPR15F<0 THEN/* IF ECB ALREADY              */
LTR0017X LTR   GPR15F,GPR15F                                    01S0348
         BNM   @RF00348                                         01S0348
*                       DO;         /* WAITED UPON, MUST ISSUE POST  */
*                         GPR01P=ADDR(APCTEALP);/* ADDRESS OF ECB TO
*                                      POST                          */
         LA    GPR01P,APCTEALP(,APCTPTR)                        01S0350
*                         GPR00P=APCTAALP;/* ADDR OF ASCB FOR MEMORY
*                                      TO BE POSTED                  */
         L     GPR00P,APCTAALP(,APCTPTR)                        01S0351
*                         CALL APCVZUBB;/* ISSUE CROSS-MEMORY POST   */
         L     @15,APCTZUBB(,APCTPTR)                           01S0352
         BALR  @14,@15                                          01S0352
*                       END;        /* ECB POSTED                    */
*                     ELSE          /* ECB NOT YET POSTED            */
*                       DO;         /* SO TRY 'COMPARE-AND-SWAP' POST*/
         B     @RC00348                                         01S0354
@RF00348 DS    0H                                               01S0355
*                         GPR14F='40000000'X;/* POST CODE            */
         L     GPR14F,@CF03022                                  01S0355
*                         CS(GPR15F,GPR14F,APCTEALP);/* POST THE ECB */
         CS    GPR15F,@14,APCTEALP(APCTPTR)                     01S0356
*                         BC(7,LTR0017X);/* RETRY IF 'CS' FAILED     */
         BC    7,LTR0017X                                       01S0357
*                       END;        /* ECB POSTED VIA 'CS'           */
*                     RFY                                       01S0359
*                      (GPR00P,                                 01S0359
*                       GPR01P,                                 01S0359
*                       GPR14F,                                 01S0359
*                       GPR15F) UNRSTD;/* DONE WITH REGS             */
@RC00348 DS    0H                                               01S0360
*                   END;            /* POST LOGIC COMPLETE           */
*                                                               01S0360
*                   /*************************************************/
*                   /*                                               */
*                   /* NOTIFY MONITOR OF UNALLOCATION, IF IT IS      */
*                   /* WAITING.                                      */
*                   /*                                               */
*                   /*************************************************/
*                                                               01S0361
*                   IF APCTAPST=BON THEN/* POST MONITOR ROUTINES     */
         TM    APCTAPST(APCTPTR),B'01000000'                    01S0361
         BNO   @RF00361                                         01S0361
*                     DO;           /* IGTYPOST                 01S0362
*                                      ECB(APCTEULD)ASCBLOC(APCTASCB)*/
*                       RFY                                     01S0363
*                        (GPR00P,                               01S0363
*                         GPR01P,                               01S0363
*                         GPR14F,                               01S0363
*                         GPR15F) RSTD;/* REGISTERS USED             */
*                       GPR15F=APCTEULD;/* CURRENT ECB CONTENTS      */
         L     GPR15F,APCTEULD(,APCTPTR)                        01S0364
*LTR0019X:                                                      01S0365
*                       IF GPR15F<0 THEN/* IF ECB ALREADY            */
LTR0019X LTR   GPR15F,GPR15F                                    01S0365
         BNM   @RF00365                                         01S0365
*                         DO;       /* WAITED UPON, MUST ISSUE POST  */
*                           GPR01P=ADDR(APCTEULD);/* ADDRESS OF ECB
*                                      TO POST                       */
         LA    GPR01P,APCTEULD(,APCTPTR)                        01S0367
*                           GPR00P=APCTASCB;/* ADDR OF ASCB FOR 01S0368
*                                      MEMORY TO BE POSTED           */
         L     GPR00P,APCTASCB(,APCTPTR)                        01S0368
*                           CALL APCVZUBB;/* ISSUE CROSS-MEMORY POST */
         L     @15,APCTZUBB(,APCTPTR)                           01S0369
         BALR  @14,@15                                          01S0369
*                         END;      /* ECB POSTED                    */
*                       ELSE        /* ECB NOT YET POSTED            */
*                         DO;       /* SO TRY 'COMPARE-AND-SWAP' POST*/
         B     @RC00365                                         01S0371
@RF00365 DS    0H                                               01S0372
*                           GPR14F='40000000'X;/* POST CODE          */
         L     GPR14F,@CF03022                                  01S0372
*                           CS(GPR15F,GPR14F,APCTEULD);/* POST THE
*                                      ECB                           */
         CS    GPR15F,@14,APCTEULD(APCTPTR)                     01S0373
*                           BC(7,LTR0019X);/* RETRY IF 'CS' FAILED   */
         BC    7,LTR0019X                                       01S0374
*                         END;      /* ECB POSTED VIA 'CS'           */
*                       RFY                                     01S0376
*                        (GPR00P,                               01S0376
*                         GPR01P,                               01S0376
*                         GPR14F,                               01S0376
*                         GPR15F) UNRSTD;/* DONE WITH REGS           */
@RC00365 DS    0H                                               01S0377
*                     END;          /* POST LOGIC COMPLETE           */
*                   DO;             /* BEGIN CODE SEGMENT            */
@RF00361 DS    0H                                               02S0379
*                     RFY                                       02S0379
*                      (R0RSTD,                                 02S0379
*                       R1RSTD,                                 02S0379
*                       R2RSTD,                                 02S0379
*                       R3RSTD,                                 02S0379
*                       R4RSTD,                                 02S0379
*                       R5RSTD,     /* 6 & 7 BASES                   */
*                       R8RSTD,                                 02S0379
*                       R9RSTD,                                 02S0379
*                       R10RSTD,                                02S0379
*                       R12RSTD,                                02S0379
*                       R14RSTD,                                02S0379
*                       R15RSTD) RSTD;                          02S0379
*                     RFY                                       02S0380
*                      (R0RSTD,                                 02S0380
*                       R1RSTD,                                 02S0380
*                       R2RSTD,                                 02S0380
*                       R3RSTD,                                 02S0380
*                       R4RSTD,                                 02S0380
*                       R5RSTD,     /* 6 & 7 BASES                   */
*                       R8RSTD,                                 02S0380
*                       R9RSTD,                                 02S0380
*                       R10RSTD,                                02S0380
*                       R12RSTD,                                02S0380
*                       R14RSTD,                                02S0380
*                       R15RSTD) UNRSTD;                        02S0380
*                   END;            /* END OF CODE SEGMENT           */
*ALLOCDEQ:                                                      01S0382
*                   APESRTRY=ADDR(FREEAPDS);/* ADVANCE RETRY POINT   */
ALLOCDEQ L     @03,APESPTR                                      01S0382
         L     @15,APESREGP(,@03)                               01S0382
         LA    @00,FREEAPDS                                     01S0382
         ST    @00,APESRTRY(,@15)                               01S0382
*                   DO;             /* ERROR RECOVERY COMPLETE       */
*                     APESFPRV=BOFF;/* RESET RECURSION FLAG.         */
         NI    APESFPRV(@03),B'10111111'                        02S0384
*                     APESCODE=CERRN99;/* RESET ERROR CODE           */
         MVI   APESCODE(@03),X'01'                              02S0385
*                     APESFDMP=BON; /* RESET DUMP/LOG FLAGS          */
*                     APESFREC=BON; /* TO THEIR NORMAL VALUES        */
*                     APESFSDP=BON; /* (ALL ON)                      */
         OI    APESFDMP(@03),B'11100000'                        02S0388
*                   END;            /* ALL INDICATORS RESET          */
*                   IF ALLNLAA=BOFF THEN/* IF LAST ALLOCATD THEN ADDR
*                                      SPACE HAS NO SUBSYS RESOURCES
*                                      DEQ ALLOCATE SO MONITR CAN HLT*/
         TM    ALLNLAA,B'10000000'                              01S0390
         BNZ   @RF00390                                         01S0390
*                     DO;           /* LAST SUBSYSTEM RESOURCE THEN  */
*                       INITTCB=APDSITCB;/* STC INIT TCB ADDR FOR
*                                      DIRECTED DEQ                  */
         L     @03,APDSITCB(,APDSPTR)                           02S0392
         ST    @03,INITTCB                                      02S0392
*                       ALLALL=BOFF;/* TASK NO LONGER CONTROLS RESRCE*/
         NI    ALLALL,B'10111111'                               02S0393
*                       GEN REFS(APCTENQM,ALLOCATE,INITTCB,DEQLISTT,
*                           DQLISTTL) SETS(DYNDEQLA);           02S0394
*                                   /*
         MVC   DYNDEQLA(L'DQLISTTL),DEQLISTT INIT DEQ DYNAMIC LIST AREA
         DEQ   (APCTENQM-APCT(,APCTPTR),ALLOCATE,8,SYSTEM),            *
               RET=HAVE,             UNALLOC USED BY EOM AS WELL       *
               TCB=INITTCB,MF=(E,DYNDEQLA)
*                     END;          /* END DO IF ADDR SPACE HAS FREED*/
*                 END;              /* DO IF ALLQUE = BON            */
*               ELSE                                            01S0397
*                 ;                 /* APDS NOT ON APDS QUEUE        */
@RF00238 DS    0H                                               01S0398
*               APESRTRY=ADDR(FREEAPDS);/* ADVANCE RETRY POINT       */
@RC00238 L     @03,APESPTR                                      01S0398
         L     @03,APESREGP(,@03)                               01S0398
         LA    @00,FREEAPDS                                     01S0398
         ST    @00,APESRTRY(,@03)                               01S0398
*               DO;                 /* BEGIN CODE SEGMENT            */
*                 ALLAPUB=BOFF;     /* NO LONGER CONTROL APUB ENQ RES*/
         NI    ALLAPUB,B'11011111'                              02S0400
*                 GEN REFS(APCTENQM,APUBENQR,DEQLIST1,DQLIST1L) SETS(
*                     DYNDEQLA);                                02S0401
*                                   /*
         MVC   DYNDEQLA(L'DQLIST1L),DEQLIST1 INIT ENQ LIST DYN AREA
         DEQ  (APCTENQM-APCT(,APCTPTR),APUBENQR,4,SYSTEM),             *
               RET=HAVE,           COULD HAVE BEEN CANCELLED IN ECBENQ *
               MF=(E,DYNDEQLA)
*               END;                /* END CODE SEGMENT              */
*             END;                  /* DO IF ALLAPUB = BON           */
*           ELSE                                                01S0404
*             ;                     /* CURRENT TASK DOES NOT CONTROL
*                                      THE APUB RESOURCE             */
@RF00182 DS    0H                                               01S0405
*           DO;                     /* BEGIN CODE SEGMENT            */
*             RFY                                               02S0406
*              (R0RSTD,                                         02S0406
*               R1RSTD,                                         02S0406
*               R2RSTD,                                         02S0406
*               R3RSTD,                                         02S0406
*               R4RSTD,                                         02S0406
*               R5RSTD,             /* 6 & 7 BASES                   */
*               R8RSTD,                                         02S0406
*               R9RSTD,                                         02S0406
*               R10RSTD,                                        02S0406
*               R12RSTD,                                        02S0406
*               R14RSTD,                                        02S0406
*               R15RSTD) RSTD;                                  02S0406
*             RFY                                               02S0407
*              (R0RSTD,                                         02S0407
*               R1RSTD,                                         02S0407
*               R2RSTD,                                         02S0407
*               R3RSTD,                                         02S0407
*               R4RSTD,                                         02S0407
*               R5RSTD,             /* 6 & 7 BASES                   */
*               R8RSTD,                                         02S0407
*               R9RSTD,                                         02S0407
*               R10RSTD,                                        02S0407
*               R12RSTD,                                        02S0407
*               R14RSTD,                                        02S0407
*               R15RSTD) UNRSTD;                                02S0407
*           END;                    /* END OF CODE SEGMENT           */
*FREEAPDS:                                                      01S0409
*           APESRTRY=ADDR(CANESTAE);/* ADVANCE RETRY POINT           */
FREEAPDS L     @03,APESPTR                                      01S0409
         L     @15,APESREGP(,@03)                               01S0409
         LA    @00,CANESTAE                                     01S0409
         ST    @00,APESRTRY(,@15)                               01S0409
*           DO;                     /* ERROR RECOVERY COMPLETE       */
*             APESFPRV=BOFF;        /* RESET RECURSION FLAG.         */
         NI    APESFPRV(@03),B'10111111'                        02S0411
*             APESCODE=CERRN99;     /* RESET ERROR CODE              */
         MVI   APESCODE(@03),X'01'                              02S0412
*             APESFDMP=BON;         /* RESET DUMP/LOG FLAGS          */
*             APESFREC=BON;         /* TO THEIR NORMAL VALUES        */
*             APESFSDP=BON;         /* (ALL ON)                      */
         OI    APESFDMP(@03),B'11100000'                        02S0415
*           END;                    /* ALL INDICATORS RESET          */
*           IF ALLAPDS=BON THEN     /* IF APDS WAS LOCATED THEN IT   */
         TM    ALLAPDS,B'00010000'                              01S0417
         BNO   @RF00417                                         01S0417
*                                                               02S0418
*             /*******************************************************/
*             /*                                                     */
*             /* SEGMENT WHICH FREES STORAGE OCCUPIED BY APDS WHICH  */
*             /* HAS JUST BEEN UNALLOCATED.                          */
*             /*                                                     */
*             /*******************************************************/
*                                                               02S0418
*             DO;                   /* BEGIN CODE SEGMENT            */
*               RFY                                             02S0419
*                 APGF BASED(ADDR(DAPGF));/* IGTUAG INPUT PARMS 02S0419
*                                      FORMAT                        */
*               APGF=APGF&&APGF;    /* INITIALIZE UNUSED FIELDS      */
         LA    @03,DAPGF                                        02S0420
         XC    APGF(16,@03),APGF(@03)                           02S0420
*               APGFXADR=APDSPTR;   /* STORAGE ADDRESS               */
         ST    APDSPTR,APGFXADR(,@03)                           02S0421
*               APGFXSP=APDSSP;     /* STORAGE SUBPOOL               */
         MVI   APGFXSP(@03),X'F1'                               02S0422
*               APGFXKEY=APDSKEY;   /* STORAGE KEY                   */
         MVI   APGFXKEY(@03),X'01'                              02S0423
*               APGFXLN=APDSSIZE;   /* ONE APDS                      */
         LH    @00,APDSSIZE(,APDSPTR)                           02S0424
         ST    @00,APGFXLN(,@03)                                02S0424
*               APGFSFRE=BON;       /* SIGNAL FREEMAIN               */
         OI    APGFSFRE(@03),B'00000001'                        02S0425
*               RFY                                             02S0426
*                 R1P RSTD;         /* INPUT POINTER                 */
*               R1P=ADDR(APGF);     /* POINT TO INPUT PARM LIST      */
         LR    R1P,@03                                          02S0427
*               CALL APCVZUAG;      /* FREE STORAGE - CONDITIONAL    */
         L     @15,APCTZUAG(,APCTPTR)                           02S0428
         BALR  @14,@15                                          02S0428
*               RFY                                             02S0429
*                 R1P UNRSTD;       /* FINISHED WITH REGISTER        */
*               ALLAPDS=BOFF;       /* STORAGE HAS BEEN FREED        */
         NI    ALLAPDS,B'11101111'                              02S0430
*             END;                  /* CODE SEGMENT                  */
*           DO;                     /* BEGIN CODE SEGMENT            */
@RF00417 DS    0H                                               02S0433
*             RFY                                               02S0433
*              (R0RSTD,                                         02S0433
*               R1RSTD,                                         02S0433
*               R2RSTD,                                         02S0433
*               R3RSTD,                                         02S0433
*               R4RSTD,                                         02S0433
*               R5RSTD,             /* 6 & 7 BASES                   */
*               R8RSTD,                                         02S0433
*               R9RSTD,                                         02S0433
*               R10RSTD,                                        02S0433
*               R12RSTD,                                        02S0433
*               R14RSTD,                                        02S0433
*               R15RSTD) RSTD;                                  02S0433
*             RFY                                               02S0434
*              (R0RSTD,                                         02S0434
*               R1RSTD,                                         02S0434
*               R2RSTD,                                         02S0434
*               R3RSTD,                                         02S0434
*               R4RSTD,                                         02S0434
*               R5RSTD,             /* 6 & 7 BASES                   */
*               R8RSTD,                                         02S0434
*               R9RSTD,                                         02S0434
*               R10RSTD,                                        02S0434
*               R12RSTD,                                        02S0434
*               R14RSTD,                                        02S0434
*               R15RSTD) UNRSTD;                                02S0434
*           END;                    /* END OF CODE SEGMENT           */
*CANESTAE:                                                      01S0436
*           APESRTRY=ADDR(JJ0RET);  /* ADVANCE RETRY POINT           */
CANESTAE L     @03,APESPTR                                      01S0436
         L     @01,APESREGP(,@03)                               01S0436
         LA    @00,JJ0RET                                       01S0436
         ST    @00,APESRTRY(,@01)                               01S0436
*           DO;                     /* ERROR RECOVERY COMPLETE       */
*             APESFPRV=BOFF;        /* RESET RECURSION FLAG.         */
         NI    APESFPRV(@03),B'10111111'                        02S0438
*             APESCODE=CERRN99;     /* RESET ERROR CODE              */
         MVI   APESCODE(@03),X'01'                              02S0439
*             APESFDMP=BON;         /* RESET DUMP/LOG FLAGS          */
*             APESFREC=BON;         /* TO THEIR NORMAL VALUES        */
*             APESFSDP=BON;         /* (ALL ON)                      */
         OI    APESFDMP(@03),B'11100000'                        02S0442
*           END;                    /* ALL INDICATORS RESET          */
*           GEN REFS(ESTAEL);                                   01S0444
*                                   /*
         ESTAE 0,MF=(E,ESTAEL)        CANCEL ERR RECOVRY ENVIRONMENT
*         END;                      /* END DO IF ERROR RECOV ENV EST */
*       ELSE                                                    01S0446
*         ;                         /* NO ERROR RECOVERY ENVIRONMENT */
@RF00160 DS    0H                                               01S0447
*     END;                          /* END DO IF REQUEST VALID       */
*   ELSE                                                        01S0448
*     ;                             /* REQUEST NOT VALID             */
@RF00115 DS    0H                                               01S0449
*   DO;                             /* BEGIN CODE SEGMENT            */
*     RFY                                                       02S0450
*      (R0RSTD,                                                 02S0450
*       R1RSTD,                                                 02S0450
*       R2RSTD,                                                 02S0450
*       R3RSTD,                                                 02S0450
*       R4RSTD,                                                 02S0450
*       R5RSTD,                     /* 6 & 7 BASES                   */
*       R8RSTD,                                                 02S0450
*       R9RSTD,                                                 02S0450
*       R10RSTD,                                                02S0450
*       R12RSTD,                                                02S0450
*       R14RSTD,                                                02S0450
*       R15RSTD) RSTD;                                          02S0450
*     RFY                                                       02S0451
*      (R0RSTD,                                                 02S0451
*       R1RSTD,                                                 02S0451
*       R2RSTD,                                                 02S0451
*       R3RSTD,                                                 02S0451
*       R4RSTD,                                                 02S0451
*       R5RSTD,                     /* 6 & 7 BASES                   */
*       R8RSTD,                                                 02S0451
*       R9RSTD,                                                 02S0451
*       R10RSTD,                                                02S0451
*       R12RSTD,                                                02S0451
*       R14RSTD,                                                02S0451
*       R15RSTD) UNRSTD;                                        02S0451
*   END;                            /* END OF CODE SEGMENT           */
*JJ0RET:                                                        01S0453
*   ;                               /* SEGMENT RETURNS TO CALLER     */
JJ0RET   DS    0H                                               01S0454
*   IF ALLERRN2=BON THEN            /* THIS CODE IS BEING USED AS AN */
         TM    ALLERRN2,B'00001000'                             01S0454
         BO    @RT00454                                         01S0454
*     GOTO JJXRET;                  /* ESTAE EXIT ROUTINE -          */
*   ELSE                            /* OTHERWISE, NORMAL RETURN      */
*     RETURN CODE(RETCODE);                                     01S0456
         L     @03,RETCODE                                      01S0456
         L     @13,4(,@13)                                      01S0456
         L     @00,@SIZDATD                                     01S0456
         LR    @01,@06                                          01S0456
         IGTYFSV  R,LV=(0),A=(1)
         LR    @15,@03                                          01S0456
         L     @14,12(,@13)                                     01S0456
         LM    @00,@12,20(@13)                                  01S0456
         BR    @14                                              01S0456
         EJECT
*JJ0EXR:                                                        01S0457
*   ;                               /* SS UNALLOCATION EXTENDED ESTAE*/
*                                                               01S0457
JJ0EXR   DS    0H                                               01S0458
*   /*****************************************************************/
*   /*                                                               */
*   /* EXIT ROUTINE                                                  */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S0458
*/* SS UNALLOCATION EXTENDED ESTAE EXIT ROUTINE.  THIS ROUTINE RECEIVES
*   CONTROL FROM AND GIVES UP CONTROL TO THE (E)STAE EXIT ROUTINE
*   IGTUKA.  THE REASON FOR THIS SPECIAL EXTENDED EXIT ROUTINE IS
*   TO HANDLE ERRORS/CONDITIONS WHICH WOULD TERMINATE DYNAMIC  UN-
*   ALLOCATION UNDER CIRCUMSTANCES WHEN RETRY WOULD NOT BE PER- 01S0458
*   MITTED. (SDWACLUP = BON).                                        */
*                                                               01S0458
*   DCL                                                         01S0458
*     UKASREGS CHAR(64) AUTO        /* SAVE AREA FOR CALLER'S REGS   */
*         BDY(WORD);                /* WILL SAVE ALL BUT R15         */
*   DCL                                                         01S0459
*     RETRY FIXED(08) CONSTANT(04), /* RETURN CODE VALUE             */
*     NORETRY FIXED(08) CONSTANT(00),/* RETURN CODE VALUE            */
*     RCODE FIXED(31);              /* RETURN CODE FROM JJ0EXRS      */
*   GEN( MODESET EXTKEY=SCHED)      /* REINSTATE USUAL KEY           */
*   NOREFS NOSETS;                  /* FOR EXTENDED EXIT ROUTINE     */
          MODESET EXTKEY=SCHED
*   STM(R0F,R14F,UKASREGS);         /* SAVE IGTUKA'S REGISTERS       */
         STM   R0F,R14F,UKASREGS                                01S0461
*   RFY                                                         01S0462
*     SDWA BASED(SDWAPTR);          /* NEW BASING EXPRESSION FOR SDWA*/
*   RFY                                                         01S0463
*     R1P RSTD;                     /* IT'S A PARMREG                */
*   SDWAPTR=R1P;                    /* SAVE THE POINTER TO THE SDWA  */
         LR    SDWAPTR,R1P                                      01S0464
*   RFY                                                         01S0465
*     R1P UNRSTD;                   /* IT'S NOT A PARMREG            */
*   IF SDWACLUP=BON THEN            /* IF ONLY CLEANUP IS PERMITTED -*/
         TM    SDWACLUP(SDWAPTR),B'10000000'                    01S0466
         BNO   @RF00466                                         01S0466
*     DO;                           /* RETRY NOT ALLOWED, THEN ...DO */
*       ALLERRN2=BON;               /* INDICATE SECOND ESTAE EFFECTV */
         OI    ALLERRN2,B'00001000'                             01S0468
*       APESPTR=ADDR(DAPES2);       /* ADDRESS OF SECOND APES FOR RET*/
         LA    @03,DAPES2                                       01S0469
         ST    @03,APESPTR                                      01S0469
*       RFY                                                     01S0470
*         R5P RSTD;                 /* WILL USE FOR APES TEMPORARILY */
*       RFY                                                     01S0471
*         APDS BASED(R5P);          /* PROVIDE BASING EXPRESSION     */
*       R5P=APESPTR;                /* INIT THE NEW POINTER          */
         LR    R5P,@03                                          01S0472
*                                                               01S0473
*       /*************************************************************/
*       /*                                                           */
*       /* BUILD ESTAE/FRR EXIT PARAMETER LIST                       */
*       /*                                                           */
*       /*************************************************************/
*                                                               01S0473
*       GEN REFS(ESTAEL,ESTAEL2,ESTAEL2L);                      01S0473
*                                            /*
         MVC   ESTAEL(L'ESTAEL2L),ESTAEL2 MOVE LIST TO THE DYN AREA
*       RFY                                                     01S0474
*        (R0P,                                                  01S0474
*         R1F,                                                  01S0474
*         R14P,                                                 01S0474
*         R15F) RSTD;               /* INITIALIZE APES BLOCK         */
*       R0P=ADDR(APES);             /* TO ZEROS                      */
         L     R0P,APESPTR                                      01S0475
*       R1F=LENGTH(APES);           /* USE MVCL TO                   */
         LA    R1F,648                                          01S0476
*       R15F=0;                     /* CLEAR, SINCE FIELD            */
         SLR   R15F,R15F                                        01S0477
*       MVCL(R0P,R14P);             /* MORE THAN 216 BYTES LONG      */
         MVCL  R0P,R14P                                         01S0478
*       RFY                                                     01S0479
*        (R0P,                                                  01S0479
*         R1F,                                                  01S0479
*         R14P,                                                 01S0479
*         R15F) UNRSTD;             /* FINISHED WITH MVCL REGS       */
*       APESID=APESIDC;             /* IN-CORE ID                    */
         L     @04,APESPTR                                      01S0480
         MVC   APESID(4,@04),@CC02588                           01S0480
*       APESADDR=ADDR(APES);        /* ESTAE PARM VALUE              */
         ST    @04,APESADDR(,@04)                               01S0481
*       APESAPMV=ADDR(CMBRXZZZ);    /* MESSAGE INDEX TABLE           */
         LA    @03,CMBRXZZZ                                     01S0482
         ST    @03,APESAPMV(,@04)                               01S0482
*       APESMXCD=CERRN99;           /* MAXIMUM APESCODE VALUE        */
         MVI   APESMXCD(@04),X'01'                              01S0483
*       APESFREC=BON;               /* RECORD ON LOGREC              */
*       APESFSDP=BON;               /* SDUMP ON ERROR                */
         OI    APESFREC(@04),B'01100000'                        01S0485
*       APESMOD='IGTJJ0  ';         /* MODULE IN CONTROL             */
         MVC   APESMOD(8,@04),@CC02967                          01S0486
*       APESPROC='IGTJJ0  ';        /* CSECT IN CONTROL              */
         MVC   APESPROC(8,@04),@CC02967                         01S0487
*       APESREGP=ADDR(APESREGZ);    /* DEFAULT REGISTER SAVEAREA     */
         LA    @03,APESREGZ(,@04)                               01S0488
         ST    @03,APESREGP(,@04)                               01S0488
*       STM(R0F,R14F,APESREGZ);     /* SAVE REGISTERS FOR RETRY      */
         STM   R0F,R14F,APESREGZ(@04)                           01S0489
*       APESCODE=CERRN99;           /* 'UNKNOWN' ERROR               */
         MVI   APESCODE(@04),X'01'                              01S0490
*       RFY                                                     01S0491
*         R2P RSTD;                 /* POINTS TO EXIT ROUTINE        */
*       R2P=ADDR(APCVZUKA);         /* (IGTUKA).                     */
*                                                               01S0492
         L     R2P,APCTZUKA(,APCTPTR)                           01S0492
*       /*************************************************************/
*       /*                                                           */
*       /* APESEXRA = 0 FOR THE TIME BEING. WE DON'T WANT TO HAVE AN */
*       /* EXIT ROUTINE RECEIVE CONTROL ANY MORE -- JUST KEEP        */
*       /* RETRYING AS NECESSARY UNTIL DONE.                         */
*       /*                                                           */
*       /*************************************************************/
*                                                               01S0493
*       APESRTRY=ADDR(IGTJJX);      /* PROVIDE (E)STAE RETRY ROUTINE */
         LA    @04,IGTJJX                                       01S0493
         ST    @04,APESRTRY(,@03)                               01S0493
*       GEN REFS(APESADDR,APES,R5P,APSVPTR,ESTAEL,R2P,FLCCVT,PSA,
*           CVTSV60,CVTMAP) SETS(ESTAEL);                       01S0494
*                                   /*
         IGTYSTAE (R2P),           IGTUKA IS EXIT ROUTINE              *
               PARAM=APESADDR-APES(R5P), ADDR OF APES IS PARM LIST     *
               BRANCH=NO,          SVC ENTRY                           *
               MF=(E,ESTAEL)       EXECUTE FORM OF THE MACRO
*       RFY                                                     01S0495
*        (R2P,                                                  01S0495
*         R5P) UNRSTD;              /* DONE WITH EXIT PTR & TEMP APES*/
*       RFY                                                     01S0496
*         APES BASED(APESPTR);      /* REVERT TO USUAL BASING EXPRESS*/
*       CALL IGTJJX;                /* INVOKE RETRY ROUTINE          */
         BAL   @14,IGTJJX                                       01S0497
*       ALLERRN2=BOFF;              /* IGTJJX CANCELLED SECOND ESTAE */
         NI    ALLERRN2,B'11110111'                             01S0498
*       RCODE=NORETRY;              /* INDICATE NO RETRY TO BE PERFMD*/
         SLR   RCODE,RCODE                                      01S0499
*     END;                          /* DO IF CLEANUP ONLY OR BAD SDWA*/
*   ELSE                            /* RETRY WILL BE ALLOWED IF NECES*/
*     RCODE=RETRY;                  /* AND IT WILL BE NECESSARY      */
         B     @RC00466                                         01S0501
@RF00466 LA    RCODE,4                                          01S0501
*   GEN(MODESET EXTKEY=ZERO)        /* RESUME KEY 0 FOR IGTUKA       */
*   NOREFS NOSETS;                                              01S0502
@RC00466 DS    0H                                               01S0502
         MODESET EXTKEY=ZERO
*   RFY                                                         01S0503
*    (R14P,                                                     01S0503
*     R15F) RSTD;                   /* WILL USE FOR RETURN CODE      */
*   R15F=RCODE;                     /* SET RETRY/NO RETRY            */
         LR    R15F,RCODE                                       01S0504
*   LM(R0F,R14F,UKASREGS);          /* RESTORE IGTUKA'S REGISTERS    */
         LM    R0F,R14F,UKASREGS                                01S0505
*   GEN( BR  R14P )                                             01S0506
*   REFS(R14P) NOSETS;              /* RETURN TO IGTUKA              */
          BR  R14P
*   RFY                                                         01S0507
*    (R15F,                                                     01S0507
*     R14P) UNRSTD;                 /* DONE WITH REGISTER            */
*JJ0EXR2:                                                       01S0508
*   ;                               /* THIS IS A SECONDARY ENTRY PT
*                                      USED IN ERROR RECOVERY        */
JJ0EXR2  DS    0H                                               01S0509
*   RFY                                                         01S0509
*    (R14P,                                                     01S0509
*     R15F) RSTD;                   /* WILL USE FOR RETURN & CODE    */
*   R15F=RETRY;                     /* SET RETRY/NO RETRY            */
         LA    R15F,4                                           01S0510
*   GEN( BR  R14P )                                             01S0511
*   REFS(R14P) NOSETS;              /* RETURN TO IGTUKA              */
          BR  R14P
*   RFY                                                         01S0512
*    (R14P,                                                     01S0512
*     R15F) UNRSTD;                 /* DONE WITH REGISTER            */
         EJECT
*FINSQRMV:                                                      01S0513
*   PROC;                           /* SEGMENT COMPLETES REMOVAL OF
*                                      APDS QUEUE ELEMENTS           */
         B     @PB00002                                         01S0513
FINSQRMV STM   @14,@12,12(@13)                                  01S0513
*   DO;                             /* COMPLETE THE REMOVAL OF OUR   */
*     IF FIRSAPDS=0 THEN            /* OUR FIRST IS FIRST ON QUEUE   */
         SLR   @15,@15                                          01S0515
         CR    FIRSAPDS,@15                                     01S0515
         BNE   @RF00515                                         01S0515
*       IF LASTAPDS=0 THEN          /* OUR LAST IS LAST ON QUEUE     */
         CR    LASTAPDS,@15                                     01S0516
         BNE   @RF00516                                         01S0516
*         DO;                       /* THERE WILL BE A NULL QUEUE    */
*           APCTAPDS=0;             /* NO FIRST APDS                 */
         ST    @15,APCTAPDS(,APCTPTR)                           01S0518
*           APCTDSAP=0;             /* NO LAST APDS                  */
         ST    @15,APCTDSAP(,APCTPTR)                           01S0519
*           ALLQRMV=BOFF;           /* REMOVAL IS COMPLETE           */
         NI    ALLQRMV,B'11011111'                              01S0520
*         END;                      /* DO IF LASTAPDS = 0            */
*       ELSE                        /* OUR LAST IS NOT LAST ON QUEUE */
*         DO;                       /* HAVE TO DO IT ANYWAY          */
         B     @RC00516                                         01S0522
@RF00516 DS    0H                                               01S0523
*           RFY                                                 01S0523
*            (R2P,                                              01S0523
*             R3P) RSTD;            /* WILL USE THIS FOR NEW FIRST   */
*           R3P=0;                  /* USE FOR NEW FIRST'S PREVIOUS  */
         SLR   R3P,R3P                                          01S0524
*           R2P=LASTAPDS;           /* POINTER IS IN REGISTER        */
         LR    R2P,LASTAPDS                                     01S0525
*           R2P->APDSDSAP=R3P;      /* FIRST HAS NO PREVIOUS         */
         ST    R3P,APDSDSAP(,R2P)                               01S0526
*           APCTAPDS=R2P;           /* OUR LAST'S NEXT IS NEW FIRST  */
         ST    R2P,APCTAPDS(,APCTPTR)                           01S0527
*           RFY                                                 01S0528
*            (R2P,                                              01S0528
*             R3P) UNRSTD;          /* THROUGH WITH REGS             */
*           ALLQRMV=BOFF;           /* COMPLETED REMOVAL OF APDS(S)  */
         NI    ALLQRMV,B'11011111'                              01S0529
*         END;                      /* DO IF OUR LAST IS ^ LAST ON Q */
*     ELSE                          /* OUR FIRST IS NOT ON QUEUE     */
*       IF LASTAPDS=0 THEN          /* OUR LAST IS LAST ON QUEUE     */
         B     @RC00515                                         01S0531
@RF00515 LTR   LASTAPDS,LASTAPDS                                01S0531
         BNZ   @RF00531                                         01S0531
*         DO;                       /* THERE WILL NOT BE A NULL QUEUE*/
*           RFY                                                 01S0533
*            (R2P,                                              01S0533
*             R3P) RSTD;            /* WILL USE REGISTERS TO COMPLETE*/
*           R2P=FIRSAPDS;           /* PREVIOU TO OUR FIRST IS NEW   */
         LR    R2P,FIRSAPDS                                     01S0534
*           R3P=0;                  /* LAST AND WILL HAVE NO NEXT    */
         SLR   R3P,R3P                                          01S0535
*           APCTDSAP=R2P;           /* NEW LAST POINTER              */
         ST    R2P,APCTDSAP(,APCTPTR)                           01S0536
*           R2P->APDSAPDS=R3P;      /* NO NEXT FOR FOR NEW LAST      */
         ST    R3P,APDSAPDS(,R2P)                               01S0537
*           ALLQRMV=BOFF;           /* COMPLETED REMOVAL OF APDS(S)  */
         NI    ALLQRMV,B'11011111'                              01S0538
*           RFY                                                 01S0539
*            (R2P,                                              01S0539
*             R3P) UNRSTD;          /* THROUGH WITH REGS             */
*         END;                      /* DO IF LASTAPDS = 0            */
*       ELSE                        /* OUR APDS(S) ARE INTERIOR Q BLK*/
*         DO;                       /* NO NEW FIRST OR LAST          */
         B     @RC00531                                         01S0541
@RF00531 DS    0H                                               01S0542
*           RFY                                                 01S0542
*            (R2P,                                              01S0542
*             R3P) RSTD;            /* WILL USE REGS AGAIN           */
*           R2P=FIRSAPDS;           /* PREVIOUS TO OUR FIRST         */
         LR    R2P,FIRSAPDS                                     01S0543
*           R3P=LASTAPDS;           /* NEXT TO OUR LAST              */
         LR    R3P,LASTAPDS                                     01S0544
*           R2P->APDSAPDS=R3P;      /* NEW NEXT FOR OUR FIRST'S PREV */
         ST    R3P,APDSAPDS(,R2P)                               01S0545
*           R3P->APDSDSAP=R2P;      /* NEW PREV FOR OUR LAST'S NEXT  */
         ST    R2P,APDSDSAP(,R3P)                               01S0546
*           ALLQRMV=BOFF;           /* DONE WITH REMOVAL             */
         NI    ALLQRMV,B'11011111'                              01S0547
*           RFY                                                 01S0548
*            (R2P,                                              01S0548
*             R3P) UNRSTD;          /* AND REGS..                    */
*         END;                      /* DO IF NO NEW FIRST OR LAST    */
*   END;                            /* PROCESS OF REMOVAL            */
*   RETURN;                         /* TO CALLER                     */
@EL00002 DS    0H                                               01S0551
@EF00002 DS    0H                                               01S0551
@ER00002 LM    @14,@12,12(@13)                                  01S0551
         BR    @14                                              01S0551
*   END FINSQRMV;                   /* END OF PROGRAM SEGMENT        */
         B     @EL00002                                         01S0552
*IGTJJX:                                                        01S0553
*   PROC;                           /* SS UNALLOCATION (E)STAE RETRY
*                                      ROUTINE                       */
IGTJJX   STM   @14,@12,@SA00003                                 01S0553
*   RFY                                                         01S0554
*    (R15P) RSTD;                   /* NEED REG                      */
*   R15P=APESRTRY;                  /* ADDRESS TO FROM WHICH TO RETRY*/
         L     @01,APESPTR                                      01S0555
         L     @01,APESREGP(,@01)                               01S0555
         L     R15P,APESRTRY(,@01)                              01S0555
*   GEN( BR  R15P )                                             01S0556
*   REFS(R15P) NOSETS;              /* BEGIN CLEANUP                 */
          BR  R15P
*   RFY                                                         01S0557
*     R15P UNRSTD;                  /* THROUGH WITH REGISTER         */
*JJXRET:                                                        01S0558
*   RETURN;                         /* RETURN TO JJXER               */
@EL00003 DS    0H                                               01S0558
@EF00003 DS    0H                                               01S0558
@ER00003 LM    @14,@12,@SA00003                                 01S0558
         BR    @14                                              01S0558
*   END IGTJJX;                                                 01S0559
         B     @EL00003                                         01S0559
*APDSQREP:                                                      01S0560
*   PROC;                                                       01S0560
APDSQREP STM   @14,@12,12(@13)                                  01S0560
*   IF ALLAPUB=BON THEN             /* ONLY IF APUB IS OWNED IS THE  */
         TM    ALLAPUB,B'00100000'                              01S0561
         BNO   @RF00561                                         01S0561
*     DO;                           /* QUEUE "REPAIRED"              */
*       APCTAPDS='';                /* REMOVE APDSS FROM QUEUE       */
         SLR   @15,@15                                          01S0563
         ST    @15,APCTAPDS(,APCTPTR)                           01S0563
*       APCTDSAP='';                /* COMPLETE REMOVAL              */
         ST    @15,APCTDSAP(,APCTPTR)                           01S0564
*     END;                          /* DO IF ALLAPUB = BON           */
*   RETURN;                         /* TO CALLER                     */
@EL00004 DS    0H                                               01S0566
@EF00004 DS    0H                                               01S0566
@ER00004 LM    @14,@12,12(@13)                                  01S0566
         BR    @14                                              01S0566
*   END APDSQREP;                   /* IGTXEPLG                      */
         B     @EL00004                                         01S0567
@PB00004 DS    0H                                               01S0568
*                                                               01S0568
*   /*****************************************************************/
*   /*                                                               */
*   /* SYSTEM DECLARES                                               */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S0568
*   DECLARE                         /* GENERAL PURPOSE REGISTERS     */
*     GPR00F FIXED(31) REG(0),                                  01S0568
*     GPR14F FIXED(31) REG(14),                                 01S0568
*     GPR15F FIXED(31) REG(15),                                 01S0568
*     GPR00P PTR(31) REG(0),                                    01S0568
*     GPR01P PTR(31) REG(1);                                    01S0568
*   DECLARE                         /* COMMON VARIABLES              */
*     I256C CHAR(256) BASED,                                    01S0569
*     I031F FIXED(31) BASED,                                    01S0569
*     I031P PTR(31) BASED,                                      01S0569
*     I015F FIXED(15) BASED,                                    01S0569
*     I015P PTR(15) BASED,                                      01S0569
*     I008P PTR(8) BASED,                                       01S0569
*     I001C CHAR(1) BASED;                                      01S0569
*                                                               01S0570
*/*   MODULE PATCH AREA                                              */
*                                                               01S0570
*   DCL                                                         01S0570
*     APPATCH CHAR(*) INT STATIC LOCAL GEND;                    01S0570
*   GENERATE DATA DEFS(APPATCH);                                01S0571
*                                                               01S0572
*   /*****************************************************************/
*   /*                                                               */
*   /* GENERAL REGISTER DECLARES                                     */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S0572
*   DCL                                                         01S0572
*     R0F FIXED(31) REG(0),                                     01S0572
*     R0P PTR(24) REG(0),                                       01S0572
*     R0RSTD PTR(31) REG(0),                                    01S0572
*     R1F FIXED(31) REG(1),                                     01S0572
*     R1P PTR(24) REG(1),                                       01S0572
*     R1RSTD PTR(31) REG(1),                                    01S0572
*     R2F FIXED(31) REG(2),                                     01S0572
*     R2P PTR(24) REG(2),                                       01S0572
*     R2RSTD PTR(31) REG(2),                                    01S0572
*     R3F FIXED(31) REG(3),                                     01S0572
*     R3P PTR(24) REG(3),                                       01S0572
*     R3RSTD PTR(31) REG(3),                                    01S0572
*     R4F FIXED(31) REG(4),                                     01S0572
*     R4P PTR(24) REG(4),                                       01S0572
*     R4RSTD PTR(31) REG(4),                                    01S0572
*     R5F FIXED(31) REG(5),                                     01S0572
*     R5P PTR(24) REG(5),                                       01S0572
*     R5RSTD PTR(31) REG(5),                                    01S0572
*     R6F FIXED(31) REG(6),                                     01S0572
*     R6P PTR(24) REG(6),                                       01S0572
*     R6RSTD PTR(31) REG(6),                                    01S0572
*     R7F FIXED(31) REG(7),                                     01S0572
*     R7P PTR(24) REG(7),                                       01S0572
*     R7RSTD PTR(31) REG(7),                                    01S0572
*     R8F FIXED(31) REG(8),                                     01S0572
*     R8P PTR(24) REG(8),                                       01S0572
*     R8RSTD PTR(31) REG(8),                                    01S0572
*     R9F FIXED(31) REG(9),                                     01S0572
*     R9P PTR(24) REG(9),                                       01S0572
*     R9RSTD PTR(31) REG(9),                                    01S0572
*     R10F FIXED(31) REG(10),                                   01S0572
*     R10P PTR(24) REG(10),                                     01S0572
*     R10RSTD PTR(31) REG(10),                                  01S0572
*     R11F FIXED(31) REG(11),                                   01S0572
*     R11P PTR(24) REG(11),                                     01S0572
*     R11RSTD PTR(31) REG(11),                                  01S0572
*     R12F FIXED(31) REG(12),                                   01S0572
*     R12P PTR(24) REG(12),                                     01S0572
*     R12RSTD PTR(31) REG(12),                                  01S0572
*     R13F FIXED(31) REG(13),                                   01S0572
*     R13P PTR(24) REG(13),                                     01S0572
*     R13RSTD PTR(31) REG(13),                                  01S0572
*     R14F FIXED(31) REG(14),                                   01S0572
*     R14P PTR(24) REG(14),                                     01S0572
*     R14RSTD PTR(31) REG(14),                                  01S0572
*     R15F FIXED(31) REG(15),                                   01S0572
*     R15P PTR(24) REG(15),                                     01S0572
*     R15RSTD PTR(31) REG(15),                                  01S0572
*                                                               01S0572
*     /***************************************************************/
*     /*                                                             */
*     /* VPSS CONTROL BLOCK POINTER DECLARES                         */
*     /*                                                             */
*     /***************************************************************/
*                                                               01S0572
*     APSMPTR PTR(24) REG(01),      /* STORAGE MANAGEMENT BLOCK 01S0572
*                                      (SUGGESTED POINTER)           */
*     APSCPTR PTR(24) REG(01),      /* STORAGE MANAGEMENT CONTROL
*                                      WORD (SUGGESTED POINTER)      */
*     APINPTR PTR(24) REG(01),      /* USER'S INPUT PARAMETER LIST
*                                      (SUGGESTED POINTER)           */
*/*                                                                  */
*                                                               01S0572
*     APDATA PTR(24) REG(06),       /* ADDRESS OF DYNAMIC DATA  01S0572
*                                      WORKAREA (DATAREG)            */
*     APCODE PTR(24) REG(07),       /* PROGRAM CODE BASE REGISTER
*                                      (CODEREG)                     */
*     APDEBPTR PTR(24) REG(08),     /* VPSS DEB (SUGGESTED POINTER)  */
*     APNPPTR PTR(24) REG(08),      /* SUBSYSTEM INITIALIZATION 01S0572
*                                      WORKAREA BLOCK (ONLY USED BY
*                                      SUBSYSTEM INITIALIZATION)     */
*     APRLPTR PTR(24) REG(08),      /* VPSS ACB REQUEST LIST    01S0572
*                                      (SUGGESTED POINTER)           */
*     APCIPTR PTR(24) REG(08),      /* 3838 CONTROL TABLE (SUGGESTED
*                                      POINTER)                      */
*     APCWPTR PTR(24) REG(08),      /* CALL INTERFACE WORKAREA  01S0572
*                                      (SUGGESTED POINTER)           */
*     APERPTR PTR(24) REG(08),      /* ERP/IO APPENDAGE WORKAREA
*                                      (SUGGESTED POINTER)           */
*     APACBPTR PTR(24) REG(09),     /* VPSS ACB (SUGGESTED POINTER)  */
*     APCQPTR PTR(24) REG(09),      /* COMMAND QUEUE ELEMENT    01S0572
*                                      (SUGGESTED POINTER)           */
*     APOTPTR PTR(24) REG(09),      /* OPTION TABLE (SUGGESTED  01S0572
*                                      POINTER)                      */
*     APIOPTR PTR(24) REG(10),      /* I/O ELEMENT (SUGGESTED   01S0572
*                                      POINTER)                      */
*     APEXLPTR PTR(24) REG(10),     /* VPSS EXLST (SUGGESTED POINTER)*/
*     APUBPTR PTR(24) REG(10),      /* UNIT BLOCK (SUGGESTED POINTER)*/
*     APAXPTR PTR(24) REG(10),      /* VPSS ACB EXTENSION (SUGGESTED
*                                      POINTER)                      */
*     APCPPTR PTR(24) REG(10),      /* VPSS CALL PROCESSING     01S0572
*                                      INDICATORS (SUGGESTED POINTER)*/
*     APOCPTR PTR(24) REG(10),      /* VPSS OPEN/CLOSE SUBSYSTEM
*                                      WORKAREA (REQUIRED POINTER)   */
*     APATPTR PTR(24) REG(11),      /* VPSS ACB TABLE (SUGGESTED
*                                      POINTER)                      */
*     APLBPTR PTR(24) REG(11),      /* LABEL RESOLUTION TABLE   01S0572
*                                      (SUGGESTED POINTER)           */
*     APUTPTR PTR(24) REG(11),      /* USER TABLE (SUGGESTED POINTER)*/
*     APDSPTR PTR(24) REG(11),      /* VPSS DATASET ENTRY (SUGGESTED
*                                      POINTER)                      */
*     APXLPTR PTR(24) REG(11),      /* TRANSLATION TABLE (SUGGESTED
*                                      POINTER)                      */
*     APDXPTR PTR(24) REG(11),      /* VPSS DEB EXTENSION (SUGGESTED
*                                      POINTER)                      */
*     APCTPTR PTR(24) REG(12) RSTD, /* CONTROL TABLE (REQUIRED  01S0572
*                                      POINTER)                      */
*     APSVPTR PTR(24) REG(13) RSTD, /* OS/VPSS SAVEAREA/WORKAREA
*                                      (REQUIRED POINTER)            */
*     APRETURN PTR(24) REG(14),     /* RETURN ADDRESS FOR SUBROUTINE
*                                      LINKAGE                       */
*     APENTRY PTR(24) REG(15),      /* SUBROUTINE ENTRY POINT LINKAGE*/
*     APRCODE PTR(24) REG(15);      /* CONTAINS SUBROUTINE RETURN
*                                      CODE                          */
*                                                               01S0573
*   /*****************************************************************/
*   /*                                                               */
*   /* USER REGISTER DECLARES                                        */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S0573
*   END IGTJJ0                                                  01S0573
*                                                               01S0573
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (IGTXAPCC)                                       */
*/*%INCLUDE SYSLIB  (IGTXSYSI)                                       */
*/*%INCLUDE SYSLIB  (IGTXSYSI)                                       */
*/*%INCLUDE SYSLIB  (IGTXSYSI)                                       */
*/*%INCLUDE SYSLIB  (IGTXSYSI)                                       */
*/*%INCLUDE SYSLIB  (IGTXSYSI)                                       */
*/*%INCLUDE SYSLIB  (IGTXSYSI)                                       */
*/*%INCLUDE SYSLIB  (IGTXSYSI)                                       */
*/*%INCLUDE SYSLIB  (IGTXSYSI)                                       */
*/*%INCLUDE SYSLIB  (IGTXSYSI)                                       */
*/*%INCLUDE SYSLIB  (IGTXSYSI)                                       */
*/*%INCLUDE SYSLIB  (IGTXAPCM)                                       */
*/*%INCLUDE SYSLIB  (IGTXAPCT)                                       */
*/*%INCLUDE SYSLIB  (IGTXAPDS)                                       */
*/*%INCLUDE SYSLIB  (IGTXAPUB)                                       */
*/*%INCLUDE SYSLIB  (IGTXAPSV)                                       */
*/*%INCLUDE SYSLIB  (IGTXAPCV)                                       */
*/*%INCLUDE SYSLIB  (IGTXAPGF)                                       */
*/*%INCLUDE SYSLIB  (IGTXAPVU)                                       */
*/*%INCLUDE SYSLIB  (CVT     )                                       */
*/*%INCLUDE SYSLIB  (IEFJSCVT)                                       */
*/*%INCLUDE SYSLIB  (IEFJSSOB)                                       */
*/*%INCLUDE SYSLIB  (IHAASCB )                                       */
*/*%INCLUDE SYSLIB  (IHAECB  )                                       */
*/*%INCLUDE SYSLIB  (IHAPSA  )                                       */
*/*%INCLUDE SYSLIB  (IGTXAPES)                                       */
*/*%INCLUDE SYSLIB  (IHASDWA )                                       */
*/*%INCLUDE SYSUT5  (IGTJHV  )                                       */
*/*%INCLUDE SYSUT5  (IGTJJX  )                                       */
*/*%INCLUDE SYSUT5  (APUBENQ )                                       */
*/*%INCLUDE SYSUT5  (RSTREGS )                                       */
*/*%INCLUDE SYSUT5  (RSTREGS )                                       */
*/*%INCLUDE SYSUT5  (RSTREGS )                                       */
*/*%INCLUDE SYSUT5  (RSTREGS )                                       */
*/*%INCLUDE SYSUT5  (RSTREGS )                                       */
*/*%INCLUDE SYSUT5  (RSTREGS )                                       */
*/*%INCLUDE SYSUT5  (RSTREGS )                                       */
*/*%INCLUDE SYSUT5  (RSTREGS )                                       */
*/*%INCLUDE SYSUT5  (RSTREGS )                                       */
*/*%INCLUDE SYSUT5  (RSTREGS )                                       */
*/*%INCLUDE SYSUT5  (RSTREGS )                                       */
*/*%INCLUDE SYSUT5  (CLRSTAE )                                       */
*/*%INCLUDE SYSUT5  (CLRSTAE )                                       */
*/*%INCLUDE SYSUT5  (CLRSTAE )                                       */
*/*%INCLUDE SYSUT5  (CLRSTAE )                                       */
*/*%INCLUDE SYSUT5  (CLRSTAE )                                       */
*/*%INCLUDE SYSUT5  (CLRSTAE )                                       */
*/*%INCLUDE SYSUT5  (CLRSTAE )                                       */
*/*%INCLUDE SYSUT5  (CLRSTAE )                                       */
*/*%INCLUDE SYSUT5  (CLRSTAE )                                       */
*/*%INCLUDE SYSUT5  (CLRSTAE )                                       */
*/*%INCLUDE SYSUT5  (FINDAPDS)                                       */
*/*%INCLUDE SYSUT5  (DEQAPDS )                                       */
*/*%INCLUDE SYSUT5  (APUBDEQ )                                       */
*/*%INCLUDE SYSUT5  (APUBDEQ )                                       */
*/*%INCLUDE SYSUT5  (ACTRUPDT)                                       */
*/*%INCLUDE SYSUT5  (ALLOCDEQ)                                       */
*/*%INCLUDE SYSUT5  (FREEAPDS)                                       */
*                                                               01S0573
*       ;                                                       01S0573
@EL00001 L     @13,4(,@13)                                      01S0573
@EF00001 L     @00,@SIZDATD                                     01S0573
         LR    @01,@06                                          01S0573
         IGTYFSV  R,LV=(0),A=(1)
@ER00001 LM    @14,@12,12(@13)                                  01S0573
         BR    @14                                              01S0573
@DATA    DS    0H
@CH00056 DC    H'7'
@DATD    DSECT
         DS    0F
@SA00001 DS    20F
@SA00003 DS    15F
IGTJJ0   CSECT
         DS    0F
@CF00193 DC    F'20'
@CF03022 DC    XL4'40000000'
@CF03140 DC    XL4'0000FFFF'
@CF03125 DC    BL4'10111111111111111111111111111111'
@CF03128 DC    BL4'11111111111111110111111111111111'
@CF03131 DC    BL4'00000000000000000000000001000000'
@DATD    DSECT
         DS    0D
APESPTR  DS    A
INITTCB  DS    A
RETCODE  DS    F
ENQECB   DS    A
UNALWA   DS    CL12
         ORG   UNALWA
SSOBPTR  DS    AL4
ALLSTAT  DS    BL4
         ORG   ALLSTAT
ALLSTAT0 DS    BL1
         ORG   ALLSTAT0
ALLFAIL  DS    BL1
ALLRQVAL EQU   ALLSTAT0+0
ALLERREN EQU   ALLSTAT0+0
ALLAPDS  EQU   ALLSTAT0+0
@NM00001 EQU   ALLSTAT0+0
         ORG   ALLSTAT+1
ALLSTAT1 DS    BL1
         ORG   ALLSTAT1
ALLNLAA  DS    BL1
@NM00002 EQU   ALLSTAT1+0
         ORG   ALLSTAT+2
ALLSTAT2 DS    BL1
         ORG   ALLSTAT2
ALLDYN   DS    BL1
ALLQUE   EQU   ALLSTAT2+0
ALLQRMV  EQU   ALLSTAT2+0
ALLRES   EQU   ALLSTAT2+0
ALLERRN2 EQU   ALLSTAT2+0
ALLSRCH  EQU   ALLSTAT2+0
@NM00003 EQU   ALLSTAT2+0
         ORG   ALLSTAT+3
ALLSTAT3 DS    BL1
         ORG   ALLSTAT3
@NM00004 DS    BL1
         ORG   UNALWA+8
ALLRSRCE DS    BL1
         ORG   ALLRSRCE
@NM00005 DS    BL1
ALLALL   EQU   ALLRSRCE+0
ALLAPUB  EQU   ALLRSRCE+0
@NM00006 EQU   ALLRSRCE+0
         ORG   UNALWA+9
@NM00007 DS    CL3
         ORG   UNALWA+12
DAPGF    DS    CL16
DAPES1   DS    CL648
DAPES2   DS    CL648
UKASREGS DS    CL64
IGTJJ0   CSECT
         DS    0F
@SIZDATD DC    AL1(230)
         DC    AL3(@ENDDATD-@DATD)
         DS    0D
@CC02967 DC    C'IGTJJ0  '
@CC02968 DC    C'        '
@CC02588 DC    C'APES'
@CC02959 DC    C'SSOB'
@CB03136 DC    B'111111111111111111111111011111111111111111111111111111C
               11'
ALLOCATE DC    CL8'ALLOCATE'
APUBENQR DC    CL4'APUB'
         DS    CL1
CMBRXZZZ DS    CL8
         ORG   CMBRXZZZ
@NM00010 DS    CL8
         ORG   @NM00010
@NM00011 DC    H'36'
@NM00012 DC    H'0'
@NM00013 DC    AL1(0)
@NM00014 DC    AL1(8)
@NM00015 DC    H'79'
         ORG   CMBRXZZZ+8
IGTJJ0   CSECT
ENQLISTE ENQ   (*-*,*-*,E,0,SYSTEM),ECB=*-*,MF=L
NQLISTEL EQU   ENQLISTE,*-ENQLISTE,C'C' LENGTH OF STATIC PARM LIST
@DATD    DSECT
*                                 /* DEFINES THE ESTAE LIST FORM
ESTAEL   ESTAE PURGE=NONE,RECORD=YES,TERM=YES,ASYNCH=YES,MF=L
IGTJJ0   CSECT
*                                        /* DEFINES THE ESTAE DYN AREA
ESTAEL2  ESTAE PURGE=NONE,RECORD=YES,TERM=YES,ASYNCH=YES,MF=L
ESTAEL2L EQU   ESTAEL2,*-ESTAEL2,C'C'
@DATD    DSECT
DYNQLIST ENQ   (*-*,*-*,E,0,SYSTEM),ECB=*-*,MF=L
IGTJJ0   CSECT
*                                                          /*
DEQLIST1 DEQ   (*-*,*-*,0,SYSTEM),MF=L
DQLIST1L EQU   DEQLIST1,*-DEQLIST1,C'C'
DEQLISTT DEQ   (*-*,*-*,0,SYSTEM),TCB=0,MF=L
DQLISTTL EQU   DEQLISTT,*-DEQLISTT,C'C'
@DATD    DSECT
*                                   /*
DYNDEQLA DEQ   (*-*,*-*,0,SYSTEM),TCB=0,MF=L
IGTJJ0   CSECT
*                                /* GENERATE PATCH
         IGTXZAP ,                 GENERATE PATCH AREA
@DATD    DSECT
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
IGTJJ0   CSECT
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
RCODE    EQU   @02
SDWAPTR  EQU   @03
LASTAPDS EQU   @04
FIRSAPDS EQU   @05
SSCTPTR  EQU   @02
APDATA   EQU   @06
APCODE   EQU   @07
R15P     EQU   @15
APCTPTR  EQU   @12
APSVPTR  EQU   @13
R0P      EQU   @00
R1P      EQU   @01
APDSPTR  EQU   @11
APUBPTR  EQU   @10
R5P      EQU   @05
R1F      EQU   @01
R14P     EQU   @14
R15F     EQU   @15
R0F      EQU   @00
R14F     EQU   @14
R2P      EQU   @02
GPR00F   EQU   @00
GPR01P   EQU   @01
R0RSTD   EQU   @00
R1RSTD   EQU   @01
R2RSTD   EQU   @02
R3RSTD   EQU   @03
R4RSTD   EQU   @04
R5RSTD   EQU   @05
R8RSTD   EQU   @08
R9RSTD   EQU   @09
R10RSTD  EQU   @10
R12RSTD  EQU   @12
R14RSTD  EQU   @14
R15RSTD  EQU   @15
R2F      EQU   @02
R3F      EQU   @03
GPR00P   EQU   @00
GPR14F   EQU   @14
GPR15F   EQU   @15
R3P      EQU   @03
APACBPTR EQU   @09
APATPTR  EQU   @11
APAXPTR  EQU   @10
APCIPTR  EQU   @08
APCPPTR  EQU   @10
APCQPTR  EQU   @09
APCWPTR  EQU   @08
APDEBPTR EQU   @08
APDXPTR  EQU   @11
APENTRY  EQU   @15
APERPTR  EQU   @08
APEXLPTR EQU   @10
APINPTR  EQU   @01
APIOPTR  EQU   @10
APLBPTR  EQU   @11
APNPPTR  EQU   @08
APOCPTR  EQU   @10
APOTPTR  EQU   @09
APRCODE  EQU   @15
APRETURN EQU   @14
APRLPTR  EQU   @08
APSCPTR  EQU   @01
APSMPTR  EQU   @01
APUTPTR  EQU   @11
APXLPTR  EQU   @11
R10F     EQU   @10
R10P     EQU   @10
R11F     EQU   @11
R11P     EQU   @11
R11RSTD  EQU   @11
R12F     EQU   @12
R12P     EQU   @12
R13F     EQU   @13
R13P     EQU   @13
R13RSTD  EQU   @13
R4F      EQU   @04
R4P      EQU   @04
R5F      EQU   @05
R6F      EQU   @06
R6P      EQU   @06
R6RSTD   EQU   @06
R7F      EQU   @07
R7P      EQU   @07
R7RSTD   EQU   @07
R8F      EQU   @08
R8P      EQU   @08
R9F      EQU   @09
R9P      EQU   @09
PSA      EQU   0
FLCRNPSW EQU   PSA
FLCROPSW EQU   PSA+8
FLCICCW2 EQU   PSA+16
FLCCVT   EQU   FLCICCW2
PSAEEPSW EQU   PSA+132
PSAESPSW EQU   PSA+136
FLCSVILC EQU   PSAESPSW+1
PSAEPPSW EQU   PSA+140
FLCPIILC EQU   PSAEPPSW+1
FLCPICOD EQU   PSAEPPSW+2
PSAPICOD EQU   FLCPICOD+1
FLCTEA   EQU   PSAEPPSW+4
FLCPER   EQU   PSA+152
FLCMCLA  EQU   PSA+168
FLCIOEL  EQU   FLCMCLA+4
FLCIOA   EQU   FLCMCLA+16
FLCFSA   EQU   FLCMCLA+80
PSAAOLD  EQU   PSA+548
PSASUPER EQU   PSA+552
PSASUP1  EQU   PSASUPER
PSASUP2  EQU   PSASUPER+1
PSASUP3  EQU   PSASUPER+2
PSASUP4  EQU   PSASUPER+3
PSACLHT  EQU   PSA+640
PSALKSA  EQU   PSA+696
PSAHLHI  EQU   PSA+760
PSADSSFL EQU   PSA+836
PSADSSF1 EQU   PSADSSFL
PSADSSF3 EQU   PSADSSFL+2
PSADSSF4 EQU   PSADSSFL+3
PSARSVT  EQU   PSA+896
ASCBPTR  EQU   0
ECBPTR   EQU   0
TASKINFO EQU   0
@NM00008 EQU   0
ENQRC    EQU   @NM00008+3
APCT     EQU   0
APCTENQM EQU   APCT+12
APCTSMIN EQU   APCT+32
APCTSMAD EQU   APCT+36
APCTZ@@@ EQU   APCT+40
APCTU@@@ EQU   APCT+440
APCTBR14 EQU   APCT+840
APCTAPDS EQU   APCT+860
APCTDSAP EQU   APCT+872
APCTERRS EQU   APCT+876
APCTASCB EQU   APCT+920
@NM00029 EQU   APCT+936
APCTSTAT EQU   @NM00029
APCTPRSW EQU   @NM00029+1
APCTAPST EQU   APCTPRSW
APCTAPCQ EQU   APCT+944
APCTCQAQ EQU   APCT+952
APCTEULD EQU   APCT+972
APCTEALP EQU   APCT+1016
APCTAALP EQU   APCT+1020
APCTACTR EQU   APCT+1112
APCTZ@@1 EQU   APCT+1120
APCTAPVU EQU   APCT+1520
APDS     EQU   0
APDSAPDS EQU   APDS+4
APDSTD   EQU   APDS+16
APDSAPUB EQU   APDS+48
APDSASCB EQU   APDS+52
APDSDSAP EQU   APDS+60
APDSFLGS EQU   APDS+64
APDSFLG0 EQU   APDSFLGS
APDSOWN  EQU   APDSFLG0
APDSARS  EQU   APDSFLG0
APDSFLG1 EQU   APDSFLGS+1
APDSITCB EQU   APDS+80
APDSSIZE EQU   APDS+92
APUB     EQU   0
APUBERRS EQU   APUB+52
APUBALFG EQU   APUB+80
APUBALF0 EQU   APUBALFG
APUBOWN  EQU   APUBALF0
APUBALF1 EQU   APUBALFG+1
APUBALF2 EQU   APUBALFG+2
APUBALF3 EQU   APUBALFG+3
APUBSTAT EQU   APUB+84
APUBIOFG EQU   APUB+88
APUBIOF0 EQU   APUBIOFG
APUBIOF1 EQU   APUBIOFG+1
APUBIOF2 EQU   APUBIOFG+2
APUBIEXC EQU   APUBIOF2
APUBIOF3 EQU   APUBIOFG+3
APUBISHR EQU   APUBIOF3
APUBDCB  EQU   APUB+96
APSV     EQU   0
APSVREGS EQU   APSV+12
APCVZUAG EQU   0
APCVZUBB EQU   0
APCVZUKA EQU   0
APGF     EQU   0
APGFSW   EQU   APGF
APGFSFRE EQU   APGFSW
APGFXSP  EQU   APGF+2
APGFXKEY EQU   APGF+3
APGFXADR EQU   APGF+4
APGFXLN  EQU   APGF+8
APVU     EQU   0
APVUSPLN EQU   APVU+8
APVUAUSE EQU   APVU+3040
APVUVUSE EQU   APVUAUSE
CVTMAP   EQU   0
CVTTCBP  EQU   CVTMAP
CVTDAR   EQU   CVTMAP+72
CVTFLGS1 EQU   CVTDAR
CVTDCB   EQU   CVTMAP+116
CVTIERLC EQU   CVTMAP+144
CVTOPTA  EQU   CVTMAP+182
CVTOPTB  EQU   CVTMAP+183
CVTGTF   EQU   CVTMAP+236
CVTGTFST EQU   CVTGTF
CVTGTFS  EQU   CVTGTFST
CVTSTATE EQU   CVTGTFST
CVTTMODE EQU   CVTGTFST
CVTFORM  EQU   CVTGTFST
CVTAQAVT EQU   CVTMAP+240
CVTTCMFG EQU   CVTAQAVT
CVTVOLM2 EQU   CVTMAP+244
CVTTATA  EQU   CVTVOLM2
CVTTSKS  EQU   CVTTATA
CVTVOLF2 EQU   CVTTSKS
CVTTAT   EQU   CVTTATA+1
CVTATER  EQU   CVTMAP+248
CVTEXT1  EQU   CVTMAP+252
CVTPURG  EQU   CVTMAP+260
CVTQMSG  EQU   CVTMAP+268
CVTDMSR  EQU   CVTMAP+272
CVTRSV37 EQU   CVTDMSR
CVTDMSRF EQU   CVTRSV37
CVTERPV  EQU   CVTMAP+316
CVTINTLA EQU   CVTMAP+320
CVTAPF   EQU   CVTMAP+324
CVTEXT2  EQU   CVTMAP+328
CVTHJES  EQU   CVTMAP+332
CVTPGSIA EQU   CVTMAP+348
CVTA1F1  EQU   CVTMAP+356
CVTSYSK  EQU   CVTMAP+357
CVTVOLM1 EQU   CVTMAP+380
CVTVOLF1 EQU   CVTVOLM1
CVTATMCT EQU   CVTMAP+388
CVTXTNT1 EQU   0
CVTXTNT2 EQU   0
CVTDSSV  EQU   CVTXTNT2
CVTFLGBT EQU   CVTXTNT2+5
CVTQID   EQU   CVTXTNT2+24
CVTRV400 EQU   CVTXTNT2+52
CVTRV409 EQU   CVTXTNT2+53
CVTATCVT EQU   CVTXTNT2+64
CVTRV429 EQU   CVTXTNT2+84
CVTRV438 EQU   CVTXTNT2+85
CVTRV457 EQU   CVTXTNT2+112
CVTRV466 EQU   CVTXTNT2+113
CVTFIX   EQU   0
CVTRELNO EQU   CVTFIX+252
SSCT     EQU   0
SSCTFLG1 EQU   SSCT+12
SSCTSUSE EQU   SSCT+20
SSOB     EQU   0
SSOBID   EQU   SSOB
SSOBFUNC EQU   SSOB+6
SSOBRETN EQU   SSOB+12
SSOBINDV EQU   SSOB+16
SSAL     EQU   0
SSALFLG1 EQU   SSAL+2
SSALSSCM EQU   SSAL+56
ASCB     EQU   0
ASCBSUPC EQU   ASCB+16
ASCBASID EQU   ASCB+36
ASCBFW1  EQU   ASCB+100
ASCBRCTF EQU   ASCBFW1+2
ASCBFLG1 EQU   ASCBFW1+3
ASCBDSP1 EQU   ASCB+114
ASCBFLG2 EQU   ASCB+115
ASCBLKGP EQU   ASCB+128
ASCBSRQ  EQU   ASCB+180
ASCBSRQ1 EQU   ASCBSRQ
ASCBSRQ2 EQU   ASCBSRQ+1
ASCBSRQ3 EQU   ASCBSRQ+2
ASCBSRQ4 EQU   ASCBSRQ+3
ECB      EQU   0
ECBRB    EQU   ECB
ECBEVTB  EQU   ECBRB
ECBEXTB  EQU   ECBEVTB
ECBCC    EQU   ECBEXTB
ECBCCCNT EQU   ECBEXTB+1
ECBRBA   EQU   ECBCCCNT
ECBEVTBA EQU   ECBRBA
ECBEXTBA EQU   ECBEVTBA
ECBBYTE3 EQU   ECBEXTBA+2
ECBEXTND EQU   ECBBYTE3
APES     EQU   0
APESID   EQU   APES
APESADDR EQU   APES+8
APESAPMV EQU   APES+12
APESFLGS EQU   APES+16
APESFLG0 EQU   APESFLGS
APESFDMP EQU   APESFLG0
APESFREC EQU   APESFLG0
APESFSDP EQU   APESFLG0
APESFEXR EQU   APESFLG0
APESFLG1 EQU   APESFLGS+1
APESFPRV EQU   APESFLG1
APESSUID EQU   APES+18
APESCODE EQU   APES+19
APESMXCD EQU   APES+22
APESEXRA EQU   APES+36
APESREGP EQU   APES+44
APESREGZ EQU   APES+48
APESMOD  EQU   APES+112
APESPROC EQU   APES+120
APESFRR  EQU   APES+128
APESREGS EQU   0
APESREGF EQU   APESREGS+60
APESRTRY EQU   APESREGF
APESMV   EQU   0
SDWA     EQU   0
SDWAFIOB EQU   SDWA+4
SDWAABCC EQU   SDWAFIOB
SDWACMPF EQU   SDWAABCC
SDWACTL1 EQU   SDWA+8
SDWACMKA EQU   SDWACTL1
SDWAMWPA EQU   SDWACTL1+1
SDWAPMKA EQU   SDWACTL1+4
SDWACTL2 EQU   SDWA+16
SDWACMKP EQU   SDWACTL2
SDWAMWPP EQU   SDWACTL2+1
SDWAPMKP EQU   SDWACTL2+4
SDWAGRSV EQU   SDWA+24
SDWANAME EQU   SDWA+88
SDWAEC1  EQU   SDWA+104
SDWAEMK1 EQU   SDWAEC1
SDWAMWP1 EQU   SDWAEC1+1
SDWAINT1 EQU   SDWAEC1+2
SDWANXT1 EQU   SDWAEC1+4
SDWAAEC1 EQU   SDWA+112
SDWAILC1 EQU   SDWAAEC1+1
SDWAINC1 EQU   SDWAAEC1+2
SDWAICD1 EQU   SDWAINC1+1
SDWAEC2  EQU   SDWA+120
SDWAEMK2 EQU   SDWAEC2
SDWAMWP2 EQU   SDWAEC2+1
SDWAINT2 EQU   SDWAEC2+2
SDWANXT2 EQU   SDWAEC2+4
SDWAAEC2 EQU   SDWA+128
SDWAILC2 EQU   SDWAAEC2+1
SDWAINC2 EQU   SDWAAEC2+2
SDWAICD2 EQU   SDWAINC2+1
SDWASRSV EQU   SDWA+136
SDWAIDNT EQU   SDWA+200
SDWAMCH  EQU   SDWA+204
SDWASTCK EQU   SDWAMCH
SDWAMCHI EQU   SDWAMCH+8
SDWAMCHS EQU   SDWAMCHI
SDWAMCHD EQU   SDWAMCHI+1
SDWARSR1 EQU   SDWAMCH+12
SDWARSR2 EQU   SDWAMCH+13
SDWAFLGS EQU   SDWA+232
SDWAERRA EQU   SDWAFLGS
SDWAERRB EQU   SDWAFLGS+1
SDWAERRC EQU   SDWAFLGS+2
SDWAERRD EQU   SDWAFLGS+3
SDWACLUP EQU   SDWAERRD
SDWAIOFS EQU   SDWA+238
SDWACPUA EQU   SDWA+248
SDWAPARQ EQU   SDWA+252
SDWAACF2 EQU   SDWAPARQ+1
SDWAACF3 EQU   SDWAPARQ+2
SDWAACF4 EQU   SDWAPARQ+3
SDWALKWA EQU   SDWA+256
SDWALKWS EQU   SDWALKWA
SDWARECP EQU   SDWA+292
SDWASNPA EQU   SDWA+320
SDWADUMP EQU   SDWASNPA
SDWADPFS EQU   SDWADUMP+1
SDWADDAT EQU   SDWASNPA+4
SDWASDAT EQU   SDWADDAT
SDWASDA0 EQU   SDWASDAT
SDWASDA1 EQU   SDWASDAT+1
SDWAPDAT EQU   SDWADDAT+2
SDWADPSA EQU   SDWA+328
SDWADPSL EQU   SDWADPSA
SDWARA   EQU   SDWA+400
SDWADPVA EQU   SDWARA+2
BIT0015X EQU   0
APCVZDAL EQU   0
APCVZDAP EQU   0
APCVZDBK EQU   0
APCVZDDA EQU   0
APCVZDDQ EQU   0
APCVZDEQ EQU   0
APCVZDID EQU   0
APCVZDIO EQU   0
APCVZDIP EQU   0
APCVZDMD EQU   0
APCVZDMM EQU   0
APCVZDQR EQU   0
APCVZDRI EQU   0
APCVZDUA EQU   0
APCVZDUL EQU   0
APCVZDWI EQU   0
APCVZDWT EQU   0
APCVZDX1 EQU   0
APCVZDX2 EQU   0
APCVZDX3 EQU   0
APCVZDX4 EQU   0
APCVZD10 EQU   0
APCVZD20 EQU   0
APCVZD4E EQU   0
APCVZD40 EQU   0
APCVZD41 EQU   0
APCVZD42 EQU   0
APCVZD43 EQU   0
APCVZD44 EQU   0
APCVZD45 EQU   0
APCVZD46 EQU   0
APCVZD47 EQU   0
APCVZD48 EQU   0
APCVZD49 EQU   0
APCVZD60 EQU   0
APCVZD80 EQU   0
APCVZD81 EQU   0
APCVZD82 EQU   0
APCVZD83 EQU   0
APCVZJAA EQU   0
APCVZJAD EQU   0
APCVZJAG EQU   0
APCVZJAJ EQU   0
APCVZJAM EQU   0
APCVZJAP EQU   0
APCVZJAX EQU   0
APCVZJAY EQU   0
APCVZJBA EQU   0
APCVZJBD EQU   0
APCVZJBG EQU   0
APCVZJBJ EQU   0
APCVZJBM EQU   0
APCVZJDA EQU   0
APCVZJDD EQU   0
APCVZJDG EQU   0
APCVZJDJ EQU   0
APCVZJDM EQU   0
APCVZJHC EQU   0
APCVZJHE EQU   0
APCVZJHF EQU   0
APCVZJHO EQU   0
APCVZJHQ EQU   0
APCVZJHR EQU   0
APCVZJHT EQU   0
APCVZJHW EQU   0
APCVZJH0 EQU   0
APCVZJH6 EQU   0
APCVZJI0 EQU   0
APCVZJI3 EQU   0
APCVZJJ0 EQU   0
APCVZKAA EQU   0
APCVZKBA EQU   0
APCVZKBB EQU   0
APCVZKBC EQU   0
APCVZKBD EQU   0
APCVZKBE EQU   0
APCVZKBF EQU   0
APCVZKCA EQU   0
APCVZKDA EQU   0
APCVZKGA EQU   0
APCVZKGB EQU   0
APCVZKGC EQU   0
APCVZKGD EQU   0
APCVZLCA EQU   0
APCVZLCB EQU   0
APCVZMBA EQU   0
APCVZMBD EQU   0
APCVZMBG EQU   0
APCVZMBH EQU   0
APCVZMBK EQU   0
APCVZMBM EQU   0
APCVZMIB EQU   0
APCVZMIC EQU   0
APCVZMIF EQU   0
APCVZMJB EQU   0
APCVZMJC EQU   0
APCVZMJH EQU   0
APCVZMJI EQU   0
APCVZMMA EQU   0
APCVZUAA EQU   0
APCVZUAB EQU   0
APCVZUAC EQU   0
APCVZUAD EQU   0
APCVZUAE EQU   0
APCVZUAF EQU   0
APCVZUFA EQU   0
APCVZUHA EQU   0
APCVZUHB EQU   0
APCVZUJA EQU   0
APCV1CMD EQU   0
APCV1JAA EQU   0
APCV1JBJ EQU   0
APCV1JHC EQU   0
APCV1JHL EQU   0
APCV1JHT EQU   0
APCV1MAB EQU   0
APCV1MBD EQU   0
APCV2JHC EQU   0
APCV2JHL EQU   0
APCV2MBD EQU   0
I001C    EQU   0
I008P    EQU   0
I015F    EQU   0
I015P    EQU   0
I031F    EQU   0
I031P    EQU   0
I256C    EQU   0
CVTPTR   EQU   FLCCVT
CMBRX    EQU   CMBRXZZZ
APCTZ    EQU   APCTZ@@@
APCTZUAA EQU   APCTZ
APCTZUAB EQU   APCTZ+4
APCTZUAC EQU   APCTZ+8
APCTZUAD EQU   APCTZ+12
APCTZUAE EQU   APCTZ+16
APCTZUBB EQU   APCTZ+24
APCTZD10 EQU   APCTZ+28
APCTZD20 EQU   APCTZ+32
APCTZD40 EQU   APCTZ+36
APCTZD41 EQU   APCTZ+40
APCTZD42 EQU   APCTZ+44
APCTZD43 EQU   APCTZ+48
APCTZD44 EQU   APCTZ+52
APCTZD45 EQU   APCTZ+56
APCTZD46 EQU   APCTZ+60
APCTZD47 EQU   APCTZ+64
APCTZD48 EQU   APCTZ+68
APCTZD49 EQU   APCTZ+72
APCTZD60 EQU   APCTZ+76
APCTZD80 EQU   APCTZ+80
APCTZD4E EQU   APCTZ+84
APCTZMBA EQU   APCTZ+88
APCTZMBD EQU   APCTZ+92
APCTZMBG EQU   APCTZ+96
APCTZDX1 EQU   APCTZ+104
APCTZDX2 EQU   APCTZ+108
APCTZDX3 EQU   APCTZ+112
APCTZDX4 EQU   APCTZ+116
APCTZMBH EQU   APCTZ+120
APCTZMBK EQU   APCTZ+124
APCTZMBM EQU   APCTZ+128
APCTZMJB EQU   APCTZ+132
APCTZMJC EQU   APCTZ+136
APCTZMJH EQU   APCTZ+140
APCTZMMA EQU   APCTZ+144
APCTZDMD EQU   APCTZ+148
APCTZD81 EQU   APCTZ+152
APCTZDID EQU   APCTZ+156
APCTZDRI EQU   APCTZ+160
APCTZMJI EQU   APCTZ+164
APCTZDWT EQU   APCTZ+168
APCTZDMM EQU   APCTZ+172
APCTZDAL EQU   APCTZ+176
APCTZDBK EQU   APCTZ+180
APCTZDIP EQU   APCTZ+184
APCTZDDA EQU   APCTZ+188
APCTZDUL EQU   APCTZ+192
APCTZDEQ EQU   APCTZ+196
APCTZDDQ EQU   APCTZ+200
APCTZDUA EQU   APCTZ+204
APCTZUAF EQU   APCTZ+208
APCTZUAG EQU   APCTZ+212
APCTZDIO EQU   APCTZ+216
APCTZUHA EQU   APCTZ+220
APCTZUHB EQU   APCTZ+224
APCTZJAA EQU   APCTZ+232
APCTZJAD EQU   APCTZ+236
APCTZJAG EQU   APCTZ+240
APCTZJAJ EQU   APCTZ+244
APCTZJAM EQU   APCTZ+248
APCTZJAP EQU   APCTZ+252
APCTZJAY EQU   APCTZ+256
APCTZUFA EQU   APCTZ+260
APCTZUJA EQU   APCTZ+264
APCTZDAP EQU   APCTZ+268
APCTZKAA EQU   APCTZ+272
APCTZD82 EQU   APCTZ+276
APCTZMIB EQU   APCTZ+280
APCTZMIC EQU   APCTZ+284
APCTZD83 EQU   APCTZ+288
APCTZMIF EQU   APCTZ+296
APCTZJH0 EQU   APCTZ+300
APCTZJI0 EQU   APCTZ+304
APCTZJI3 EQU   APCTZ+308
APCTZJJ0 EQU   APCTZ+312
APCTZJBA EQU   APCTZ+316
APCTZJBD EQU   APCTZ+320
APCTZJBG EQU   APCTZ+324
APCTZJBJ EQU   APCTZ+328
APCTZJBM EQU   APCTZ+332
APCTZKCA EQU   APCTZ+340
APCTZKDA EQU   APCTZ+344
APCTZJDA EQU   APCTZ+356
APCTZJDJ EQU   APCTZ+360
APCTZJH6 EQU   APCTZ+364
APCTZJHO EQU   APCTZ+368
APCTZJHF EQU   APCTZ+372
APCTZJHE EQU   APCTZ+376
APCTZDQR EQU   APCTZ+380
APCTZJHR EQU   APCTZ+384
APCTZJHT EQU   APCTZ+388
APCTZJHW EQU   APCTZ+392
APCTZ1   EQU   APCTZ@@1
APCTZKBA EQU   APCTZ1
APCTZKBC EQU   APCTZ1+4
APCTZKBB EQU   APCTZ1+8
APCTZJHC EQU   APCTZ1+20
APCTZJHQ EQU   APCTZ1+24
APCTZKBD EQU   APCTZ1+28
APCTZKBE EQU   APCTZ1+40
APCTZUKA EQU   APCTZ1+56
APCTZKBF EQU   APCTZ1+60
APCTZJDD EQU   APCTZ1+64
APCTZJDG EQU   APCTZ1+68
APCTZJDM EQU   APCTZ1+72
APCTZLCA EQU   APCTZ1+76
APCTZLCB EQU   APCTZ1+80
APCTZDWI EQU   APCTZ1+84
APCTZJAX EQU   APCTZ1+88
APCTZKGA EQU   APCTZ1+92
APCTZKGB EQU   APCTZ1+96
APCTZKGC EQU   APCTZ1+100
APCTZKGD EQU   APCTZ1+104
APCTU    EQU   APCTU@@@
APCT1MAB EQU   APCTU
APCT1MBD EQU   APCTU+4
APCT2MBD EQU   APCTU+8
APCT1CMD EQU   APCTU+12
APCT1JAA EQU   APCTU+20
APCT1JHC EQU   APCTU+24
APCT2JHC EQU   APCTU+28
APCT1JHT EQU   APCTU+32
APCT1JHL EQU   APCTU+36
APCT2JHL EQU   APCTU+40
APCT1JBJ EQU   APCTU+44
CVTS01   EQU   CVTPGSIA
CVTLPDIA EQU   CVTS01+12
CVTDIRST EQU   CVTLPDIA
CVTSLIDA EQU   CVTS01+24
CVTCTLFG EQU   CVTS01+50
CVTSV60  EQU   CVTS01+228
CVTRV210 EQU   CVTS01+424
CVTRV219 EQU   CVTS01+425
CVTRV228 EQU   CVTS01+426
CVTRV237 EQU   CVTS01+427
CVTMFRTR EQU   CVTS01+452
CVTRV262 EQU   CVTS01+468
CVTRV271 EQU   CVTS01+469
CVTRV280 EQU   CVTS01+470
CVTRV289 EQU   CVTS01+471
CVTGSDA  EQU   CVTS01+600
PSARSVTE EQU   PSARSVT
FLC      EQU   PSA
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
PSARSAV  EQU   PSARSVTE+60
PSARSTK  EQU   PSARSVTE+56
PSAESAV3 EQU   PSARSVTE+52
PSAESTK3 EQU   PSARSVTE+48
PSAESAV2 EQU   PSARSVTE+44
PSAESTK2 EQU   PSARSVTE+40
PSAESAV1 EQU   PSARSVTE+36
PSAESTK1 EQU   PSARSVTE+32
PSAPSAV  EQU   PSARSVTE+28
PSAPSTK  EQU   PSARSVTE+24
PSAMSAV  EQU   PSARSVTE+20
PSAMSTK  EQU   PSARSVTE+16
PSASSAV  EQU   PSARSVTE+12
PSASSTK  EQU   PSARSVTE+8
PSANSTK  EQU   PSARSVTE+4
PSACSTK  EQU   PSARSVTE
CVTRV628 EQU   CVTS01+728
CVTRV627 EQU   CVTS01+724
CVTRV626 EQU   CVTS01+720
CVTRV625 EQU   CVTS01+716
CVTRV624 EQU   CVTS01+712
CVTRV623 EQU   CVTS01+708
CVTRV622 EQU   CVTS01+704
CVTRV621 EQU   CVTS01+700
CVTIHASU EQU   CVTS01+696
CVTSUSP  EQU   CVTS01+692
CVTT6SVC EQU   CVTS01+688
CVTCDAL  EQU   CVTS01+684
CVTTCTL  EQU   CVTS01+680
CVTRSUME EQU   CVTS01+676
CVTJTERM EQU   CVTS01+672
CVTASMRM EQU   CVTS01+668
CVTTCASP EQU   CVTS01+664
CVT0PT03 EQU   CVTS01+660
CVT0PT0E EQU   CVTS01+656
CVTRV609 EQU   CVTS01+652
CVTCGK   EQU   CVTS01+648
CVTRAC   EQU   CVTS01+644
CVTRV606 EQU   CVTS01+640
CVTRV605 EQU   CVTS01+636
CVTRV604 EQU   CVTS01+632
CVTEFF02 EQU   CVTS01+628
CVTCBBR  EQU   CVTS01+624
CVTSSCR  EQU   CVTS01+620
CVTEVENT EQU   CVTS01+616
CVTCRCA  EQU   CVTS01+612
CVTTPIO  EQU   CVTS01+608
CVTADV   EQU   CVTS01+604
CVTGSDAB EQU   CVTGSDA
CVTQV3   EQU   CVTS01+596
CVTQV2   EQU   CVTS01+592
CVTQV1   EQU   CVTS01+588
CVTRPT   EQU   CVTS01+584
CVTSSRB  EQU   CVTS01+580
CVTCSDRL EQU   CVTS01+576
CVTEXP1  EQU   CVTS01+572
CVTRMPMT EQU   CVTS01+568
CVTRMPTT EQU   CVTS01+564
CVTVPSA  EQU   CVTS01+560
CVTVSTOP EQU   CVTS01+556
CVTGTFR8 EQU   CVTS01+552
CVTQUIT  EQU   CVTS01+548
CVTVACR  EQU   CVTS01+544
CVTWTCB  EQU   CVTS01+540
CVTSTPRS EQU   CVTS01+536
CVT0PT02 EQU   CVTS01+532
CVTDARCM EQU   CVTS01+528
CVTIRECM EQU   CVTS01+524
CVTJRECM EQU   CVTS01+520
CVTVEMS0 EQU   CVTS01+516
CVTSPFRR EQU   CVTS01+512
CVTRLSTG EQU   CVTS01+508
CVT0TC0A EQU   CVTS01+504
CVTGMBR  EQU   CVTS01+500
CVTLFRM  EQU   CVTS01+496
CVTRMBR  EQU   CVTS01+492
CVTVIOP  EQU   CVTS01+488
CVTRV307 EQU   CVTS01+486
CVTRV306 EQU   CVTS01+484
CVTRV305 EQU   CVTS01+482
CVTRV304 EQU   CVTS01+480
CVTRV303 EQU   CVTS01+478
CVTRV302 EQU   CVTS01+476
CVTTRCA  EQU   CVTS01+472
CVTRV297 EQU   CVTRV289
CVTRV296 EQU   CVTRV289
CVTRV295 EQU   CVTRV289
CVTRV294 EQU   CVTRV289
CVTRV293 EQU   CVTRV289
CVTRV292 EQU   CVTRV289
CVTRV291 EQU   CVTRV289
CVTRV290 EQU   CVTRV289
CVTRV288 EQU   CVTRV280
CVTRV287 EQU   CVTRV280
CVTRV286 EQU   CVTRV280
CVTRV285 EQU   CVTRV280
CVTRV284 EQU   CVTRV280
CVTRV283 EQU   CVTRV280
CVTRV282 EQU   CVTRV280
CVTRV281 EQU   CVTRV280
CVTRV279 EQU   CVTRV271
CVTRV278 EQU   CVTRV271
CVTRV277 EQU   CVTRV271
CVTRV276 EQU   CVTRV271
CVTRV275 EQU   CVTRV271
CVTRV274 EQU   CVTRV271
CVTRV273 EQU   CVTRV271
CVTRV272 EQU   CVTRV271
CVTRV270 EQU   CVTRV262
CVTRV269 EQU   CVTRV262
CVTRV268 EQU   CVTRV262
CVTRV267 EQU   CVTRV262
CVTRV266 EQU   CVTRV262
CVTRV265 EQU   CVTRV262
CVTRV264 EQU   CVTRV262
CVTRV263 EQU   CVTRV262
CVTVFP   EQU   CVTS01+464
CVTVSI   EQU   CVTS01+460
CVTVPSIB EQU   CVTS01+456
CVTMFACT EQU   CVTMFRTR
CVTMFCTL EQU   CVTS01+448
CVTPVBP  EQU   CVTS01+444
CVTPWI   EQU   CVTS01+440
CVTRV254 EQU   CVTS01+438
CVTRV253 EQU   CVTS01+436
CVTRV252 EQU   CVTS01+434
CVTRV251 EQU   CVTS01+433
CVTRV250 EQU   CVTS01+432
CVTRV249 EQU   CVTS01+431
CVTRV248 EQU   CVTS01+430
CVTRV247 EQU   CVTS01+429
CVTRV246 EQU   CVTS01+428
CVTRV245 EQU   CVTRV237
CVTRV244 EQU   CVTRV237
CVTRV243 EQU   CVTRV237
CVTRV242 EQU   CVTRV237
CVTRV241 EQU   CVTRV237
CVTRV240 EQU   CVTRV237
CVTRV239 EQU   CVTRV237
CVTRV238 EQU   CVTRV237
CVTRV236 EQU   CVTRV228
CVTRV235 EQU   CVTRV228
CVTRV234 EQU   CVTRV228
CVTRV233 EQU   CVTRV228
CVTRV232 EQU   CVTRV228
CVTRV231 EQU   CVTRV228
CVTRV230 EQU   CVTRV228
CVTRV229 EQU   CVTRV228
CVTRV227 EQU   CVTRV219
CVTRV226 EQU   CVTRV219
CVTRV225 EQU   CVTRV219
CVTRV224 EQU   CVTRV219
CVTRV223 EQU   CVTRV219
CVTRV222 EQU   CVTRV219
CVTRV221 EQU   CVTRV219
CVTRV220 EQU   CVTRV219
CVTRV218 EQU   CVTRV210
CVTRV217 EQU   CVTRV210
CVTRV216 EQU   CVTRV210
CVTRV215 EQU   CVTRV210
CVTRV214 EQU   CVTRV210
CVTRV213 EQU   CVTRV210
CVTRV212 EQU   CVTRV210
CVTRV211 EQU   CVTRV210
CVTLCCAT EQU   CVTS01+420
CVTPCCAT EQU   CVTS01+416
CVTIPCRP EQU   CVTS01+412
CVTIPCRI EQU   CVTS01+408
CVTIPCDS EQU   CVTS01+404
CVTAIDVT EQU   CVTS01+400
CVTSSAP  EQU   CVTS01+396
CVTEHCIR EQU   CVTS01+392
CVTEHDEF EQU   CVTS01+388
CVTDAIR  EQU   CVTS01+384
CVTPERFM EQU   CVTS01+380
CVT044R2 EQU   CVTS01+376
CVTFETCH EQU   CVTS01+372
CVTRSTWD EQU   CVTS01+368
CVTSPOST EQU   CVTS01+364
CVTIOBP  EQU   CVTS01+360
CVTASMVT EQU   CVTS01+356
CVTRECRQ EQU   CVTS01+352
CVTWSAC  EQU   CVTS01+348
CVTRV149 EQU   CVTS01+344
CVTWSAL  EQU   CVTS01+340
CVTSPSA  EQU   CVTS01+336
CVTGLMN  EQU   CVTS01+332
CVTVEAC0 EQU   CVTS01+328
CVT062R1 EQU   CVTS01+324
CVTRPOST EQU   CVTS01+320
CVTDQIQE EQU   CVTS01+316
CVTCSD   EQU   CVTS01+312
CVTLKRMA EQU   CVTS01+308
CVTRSPIE EQU   CVTS01+304
CVTRENQ  EQU   CVTS01+300
CVTLQCB  EQU   CVTS01+296
CVTFQCB  EQU   CVTS01+292
CVTQCS01 EQU   CVTS01+288
CVTAPFT  EQU   CVTS01+284
CVTPARRL EQU   CVTS01+280
CVTVWAIT EQU   CVTS01+276
CVTGSPL  EQU   CVTS01+272
CVTLSMQ  EQU   CVTS01+268
CVTGSMQ  EQU   CVTS01+264
CVTEXPRO EQU   CVTS01+260
CVTOPCTP EQU   CVTS01+256
CVTSIC   EQU   CVTS01+252
CVTTPIOS EQU   CVTS01+248
CVTRTMS  EQU   CVTS01+244
CVTSDBF  EQU   CVTS01+240
CVTSCBP  EQU   CVTS01+236
CVTSDMP  EQU   CVTS01+232
CVTRTMCT EQU   CVTS01+224
CVTASCBL EQU   CVTS01+220
CVTASCBH EQU   CVTS01+216
CVTGDA   EQU   CVTS01+212
CVTASVT  EQU   CVTS01+208
CVTVVMDI EQU   CVTS01+204
CVTAQTOP EQU   CVTS01+200
CVTIOSCS EQU   CVTS01+196
CVTSDRM  EQU   CVTS01+192
CVTOPTE  EQU   CVTS01+188
CVTSTXU  EQU   CVTS01+184
CVTQUIS  EQU   CVTS01+180
CVTPARS  EQU   CVTS01+176
CVTS1EE  EQU   CVTS01+172
CVTFRAS  EQU   CVTS01+168
CVTQSAS  EQU   CVTS01+164
CVTCRAS  EQU   CVTS01+160
CVTCRMN  EQU   CVTS01+156
CVTDELCP EQU   CVTS01+152
CVTFRECL EQU   CVTS01+148
CVTGETCL EQU   CVTS01+144
CVTBLDCP EQU   CVTS01+140
CVTAUTHL EQU   CVTS01+136
CVTSCAN  EQU   CVTS01+132
CVTRV144 EQU   CVTS01+130
CVTMAXMP EQU   CVTS01+128
CVTSTCK  EQU   CVTS01+124
CVTRV139 EQU   CVTS01+123
CVTDSSAC EQU   CVTS01+122
CVTRV513 EQU   CVTS01+121
CVTIOSPL EQU   CVTS01+120
CVTPTGT  EQU   CVTS01+116
CVTCSPIE EQU   CVTS01+112
CVTSMFEX EQU   CVTS01+108
CVTOLT0A EQU   CVTS01+104
CVTSRBRT EQU   CVTS01+100
CVTPUTL  EQU   CVTS01+96
CVTASCRL EQU   CVTS01+92
CVTASCRF EQU   CVTS01+88
CVTRV326 EQU   CVTS01+84
CVTRV325 EQU   CVTS01+80
CVTRV324 EQU   CVTS01+76
CVT0VL01 EQU   CVTS01+72
CVTSHRVM EQU   CVTS01+68
CVTRV332 EQU   CVTS01+64
CVTTAS   EQU   CVTS01+60
CVTRSCN  EQU   CVTS01+56
CVTTRAC2 EQU   CVTS01+54
CVTTRACE EQU   CVTS01+52
CVTAPG   EQU   CVTS01+51
CVTSDTRC EQU   CVTCTLFG
CVTGTRCE EQU   CVTCTLFG
CVTNOMP  EQU   CVTCTLFG
CVTRSV79 EQU   CVTCTLFG
CVTDSTAT EQU   CVTCTLFG
CVTRSV78 EQU   CVTCTLFG
CVTRV333 EQU   CVTCTLFG
CVTRV323 EQU   CVTCTLFG
CVTSPVLK EQU   CVTS01+49
CVTRSV77 EQU   CVTS01+48
CVTRV331 EQU   CVTS01+44
CVTRV330 EQU   CVTS01+40
CVTRV329 EQU   CVTS01+36
CVTRV328 EQU   CVTS01+32
CVTRV322 EQU   CVTS01+28
CVTSLID  EQU   CVTSLIDA+1
CVTSYLK  EQU   CVTSLIDA
CVTRV321 EQU   CVTS01+20
CVTRV320 EQU   CVTS01+16
CVTLPDIR EQU   CVTLPDIA+1
CVTRSV69 EQU   CVTDIRST
CVTRSV68 EQU   CVTDIRST
CVTRSV67 EQU   CVTDIRST
CVTRSV66 EQU   CVTDIRST
CVTRSV65 EQU   CVTDIRST
CVTRSV64 EQU   CVTDIRST
CVTRSV63 EQU   CVTDIRST
CVTDICOM EQU   CVTDIRST
CVTPVTP  EQU   CVTS01+8
CVTLPDSR EQU   CVTS01+4
CVTGETL  EQU   CVTS01
@NM00061 EQU   APCTU+48
APCT1MBM EQU   APCTU+16
@NM00060 EQU   APCTZ1+108
@NM00059 EQU   APCTZ1+52
@NM00058 EQU   APCTZ1+48
@NM00057 EQU   APCTZ1+44
@NM00056 EQU   APCTZ1+36
@NM00055 EQU   APCTZ1+32
@NM00054 EQU   APCTZ1+16
@NM00053 EQU   APCTZ1+12
@NM00052 EQU   APCTZ+396
@NM00051 EQU   APCTZ+352
@NM00050 EQU   APCTZ+348
@NM00049 EQU   APCTZ+336
@NM00048 EQU   APCTZ+292
APCTZJFA EQU   APCTZ+228
APCTZMBR EQU   APCTZ+100
@NM00047 EQU   APCTZ+20
CMBXRCN  EQU   CMBRX+6
CMBXRCT  EQU   CMBRX+5
@NM00016 EQU   CMBRX+4
CMBRKT   EQU   CMBRX+2
CMBRMT   EQU   CMBRX
@NM00172 EQU   SDWA+512
SDWAVRA  EQU   SDWARA+4
SDWAURAL EQU   SDWARA+3
@NM00171 EQU   SDWADPVA
SDWAEBC  EQU   SDWADPVA
SDWAHEX  EQU   SDWADPVA
SDWAVRAL EQU   SDWARA
SDWAERTM EQU   SDWA+396
SDWACOMP EQU   SDWA+392
SDWARCPL EQU   SDWA+364
@NM00170 EQU   SDWADPSA+32
SDWATO4  EQU   SDWADPSL+28
SDWAFRM4 EQU   SDWADPSL+24
SDWATO3  EQU   SDWADPSL+20
SDWAFRM3 EQU   SDWADPSL+16
SDWATO2  EQU   SDWADPSL+12
SDWAFRM2 EQU   SDWADPSL+8
SDWATO1  EQU   SDWADPSL+4
SDWAFRM1 EQU   SDWADPSL
@NM00169 EQU   SDWADDAT+3
@NM00168 EQU   SDWAPDAT
SDWAUSPL EQU   SDWAPDAT
SDWADPSW EQU   SDWAPDAT
SDWATJPA EQU   SDWAPDAT
SDWATLPA EQU   SDWAPDAT
SDWADREG EQU   SDWAPDAT
SDWADSAH EQU   SDWAPDAT
SDWADSAS EQU   SDWAPDAT
@NM00167 EQU   SDWASDA1
SDWAERR  EQU   SDWASDA1
SDWAIO   EQU   SDWASDA1
SDWADM   EQU   SDWASDA0
SDWAQQS  EQU   SDWASDA0
SDWACBS  EQU   SDWASDA0
SDWAGTF  EQU   SDWASDA0
SDWASWA  EQU   SDWASDA0
SDWALSQA EQU   SDWASDA0
SDWASQA  EQU   SDWASDA0
SDWANUC  EQU   SDWASDA0
@NM00166 EQU   SDWADUMP+2
@NM00165 EQU   SDWADPFS
SDWASLST EQU   SDWADPFS
@NM00164 EQU   SDWADPFS
SDWAENSN EQU   SDWADPFS
SDWADLST EQU   SDWADPFS
SDWADPT  EQU   SDWADPFS
SDWADPID EQU   SDWADUMP
SDWADPLA EQU   SDWA+316
SDWAREXN EQU   SDWARECP+16
SDWACSCT EQU   SDWARECP+8
SDWAMODN EQU   SDWARECP
SDWASEQ# EQU   SDWA+290
SDWAASID EQU   SDWA+288
SDWATALW EQU   SDWALKWS+28
SDWATDLW EQU   SDWALKWS+24
SDWATNLW EQU   SDWALKWS+20
SDWAAPLW EQU   SDWALKWS+16
SDWAIPLW EQU   SDWALKWS+12
SDWAILLW EQU   SDWALKWS+8
SDWAIULW EQU   SDWALKWS+4
SDWAICLW EQU   SDWALKWS
SDWAFLLK EQU   SDWAACF4
SDWACMS  EQU   SDWAACF4
SDWAOPTM EQU   SDWAACF4
SDWATADB EQU   SDWAACF4
SDWATDNB EQU   SDWAACF4
SDWATNCB EQU   SDWAACF4
SDWAILCH EQU   SDWAACF4
SDWAIUCB EQU   SDWAACF4
SDWAICAT EQU   SDWAACF3
SDWAIPRG EQU   SDWAACF3
SDWASALL EQU   SDWAACF3
SDWAASMP EQU   SDWAACF3
SDWADISP EQU   SDWAACF3
@NM00163 EQU   SDWAACF3
@NM00162 EQU   SDWAACF2
SDWAFREE EQU   SDWAACF2
SDWAUPRG EQU   SDWAACF2
@NM00161 EQU   SDWAACF2
SDWASPIN EQU   SDWAACF2
@NM00160 EQU   SDWAACF2
SDWARCRD EQU   SDWAACF2
SDWARCDE EQU   SDWAPARQ
SDWALCPU EQU   SDWACPUA+2
@NM00159 EQU   SDWACPUA
SDWARECA EQU   SDWA+244
SDWARTYA EQU   SDWA+240
SDWACPUI EQU   SDWA+239
@NM00158 EQU   SDWAIOFS
SDWANIOP EQU   SDWAIOFS
SDWANOIO EQU   SDWAIOFS
SDWAIOHT EQU   SDWAIOFS
SDWAIOQR EQU   SDWAIOFS
SDWAFMID EQU   SDWA+236
SDWAERFL EQU   SDWAERRD
SDWAMCIV EQU   SDWAERRD
SDWARPIV EQU   SDWAERRD
SDWAMABD EQU   SDWAERRD
SDWACTS  EQU   SDWAERRD
SDWASTAE EQU   SDWAERRD
SDWANRBE EQU   SDWAERRD
@NM00157 EQU   SDWAERRC
SDWAEAS  EQU   SDWAERRC
SDWAPERC EQU   SDWAERRC
SDWAIRB  EQU   SDWAERRC
SDWASTAI EQU   SDWAERRC
SDWASTAF EQU   SDWAERRC
SDWASRBM EQU   SDWAERRB
SDWALDIS EQU   SDWAERRB
SDWAENRB EQU   SDWAERRB
SDWATYP1 EQU   SDWAERRB
@NM00156 EQU   SDWAERRB
SDWAPGIO EQU   SDWAERRA
SDWATEXC EQU   SDWAERRA
SDWASVCE EQU   SDWAERRA
SDWAABTM EQU   SDWAERRA
SDWASVCD EQU   SDWAERRA
SDWARKEY EQU   SDWAERRA
SDWAPCHK EQU   SDWAERRA
SDWAMCHK EQU   SDWAERRA
SDWATIME EQU   SDWAMCH+20
SDWARFSA EQU   SDWAMCH+16
@NM00155 EQU   SDWAMCH+14
SDWAVEQR EQU   SDWARSR2
SDWAPGFX EQU   SDWARSR2
SDWAFLSQ EQU   SDWARSR2
SDWAFSQA EQU   SDWARSR2
SDWANUCL EQU   SDWARSR2
SDWASPER EQU   SDWARSR2
SDWAINTC EQU   SDWARSR2
SDWAOFLN EQU   SDWARSR2
SDWACHNG EQU   SDWARSR1
SDWAMSER EQU   SDWARSR1
@NM00154 EQU   SDWARSR1
SDWACPID EQU   SDWAMCH+10
SDWATERR EQU   SDWAMCHD
SDWAFPRX EQU   SDWAMCHD
SDWAINSF EQU   SDWAMCHD
SDWAACR  EQU   SDWAMCHD
SDWASCK  EQU   SDWAMCHD
SDWAPSWU EQU   SDWAMCHD
SDWAREGU EQU   SDWAMCHD
SDWASKYF EQU   SDWAMCHD
@NM00153 EQU   SDWAMCHS
SDWARSRF EQU   SDWAMCHS
SDWARSRC EQU   SDWAMCHS
SDWAINVP EQU   SDWAMCHS
SDWATSVL EQU   SDWAMCHS
SDWARCDF EQU   SDWAMCHS
SDWASRVL EQU   SDWAMCHS
SDWASCKE EQU   SDWASTCK+4
SDWASCKB EQU   SDWASTCK
SDWALNTH EQU   SDWAIDNT+1
SDWASPID EQU   SDWAIDNT
SDWASR15 EQU   SDWASRSV+60
SDWASR14 EQU   SDWASRSV+56
SDWASR13 EQU   SDWASRSV+52
SDWASR12 EQU   SDWASRSV+48
SDWASR11 EQU   SDWASRSV+44
SDWASR10 EQU   SDWASRSV+40
SDWASR09 EQU   SDWASRSV+36
SDWASR08 EQU   SDWASRSV+32
SDWASR07 EQU   SDWASRSV+28
SDWASR06 EQU   SDWASRSV+24
SDWASR05 EQU   SDWASRSV+20
SDWASR04 EQU   SDWASRSV+16
SDWASR03 EQU   SDWASRSV+12
SDWASR02 EQU   SDWASRSV+8
SDWASR01 EQU   SDWASRSV+4
SDWASR00 EQU   SDWASRSV
SDWATRN2 EQU   SDWAAEC2+4
SDWAIPC2 EQU   SDWAICD2
SDWAIMC2 EQU   SDWAICD2
SDWAIPR2 EQU   SDWAICD2
@NM00152 EQU   SDWAINC2
@NM00151 EQU   SDWAILC2
SDWAIL2  EQU   SDWAILC2
@NM00150 EQU   SDWAILC2
@NM00149 EQU   SDWAAEC2
SDWAADD2 EQU   SDWANXT2+1
@NM00148 EQU   SDWANXT2
@NM00147 EQU   SDWAEC2+3
SDWASGN2 EQU   SDWAINT2
SDWAEXP2 EQU   SDWAINT2
SDWADEC2 EQU   SDWAINT2
SDWAFPO2 EQU   SDWAINT2
SDWACC2  EQU   SDWAINT2
@NM00146 EQU   SDWAINT2
SDWAPGM2 EQU   SDWAMWP2
SDWAWAT2 EQU   SDWAMWP2
SDWAMCK2 EQU   SDWAMWP2
SDWAECT2 EQU   SDWAMWP2
SDWAKEY2 EQU   SDWAMWP2
SDWAEXT2 EQU   SDWAEMK2
SDWAIO2  EQU   SDWAEMK2
SDWATRM2 EQU   SDWAEMK2
@NM00145 EQU   SDWAEMK2
SDWAPER2 EQU   SDWAEMK2
@NM00144 EQU   SDWAEMK2
SDWATRAN EQU   SDWAAEC1+4
SDWAIPC1 EQU   SDWAICD1
SDWAIMC1 EQU   SDWAICD1
SDWAIPR1 EQU   SDWAICD1
@NM00143 EQU   SDWAINC1
@NM00142 EQU   SDWAILC1
SDWAIL1  EQU   SDWAILC1
@NM00141 EQU   SDWAILC1
@NM00140 EQU   SDWAAEC1
SDWAADD1 EQU   SDWANXT1+1
@NM00139 EQU   SDWANXT1
@NM00138 EQU   SDWAEC1+3
SDWASGN1 EQU   SDWAINT1
SDWAEXP1 EQU   SDWAINT1
SDWADEC1 EQU   SDWAINT1
SDWAFPO1 EQU   SDWAINT1
SDWACC1  EQU   SDWAINT1
@NM00137 EQU   SDWAINT1
SDWAPGM1 EQU   SDWAMWP1
SDWAWAT1 EQU   SDWAMWP1
SDWAMCK1 EQU   SDWAMWP1
SDWAECT1 EQU   SDWAMWP1
SDWAKEY1 EQU   SDWAMWP1
SDWAEXT1 EQU   SDWAEMK1
SDWAIO1  EQU   SDWAEMK1
SDWATRM1 EQU   SDWAEMK1
@NM00136 EQU   SDWAEMK1
SDWAPER1 EQU   SDWAEMK1
@NM00135 EQU   SDWAEMK1
SDWAIOBR EQU   SDWA+100
SDWAEPA  EQU   SDWA+96
@NM00134 EQU   SDWANAME+4
SDWARBAD EQU   SDWANAME
SDWAGR15 EQU   SDWAGRSV+60
SDWAGR14 EQU   SDWAGRSV+56
SDWAGR13 EQU   SDWAGRSV+52
SDWAGR12 EQU   SDWAGRSV+48
SDWAGR11 EQU   SDWAGRSV+44
SDWAGR10 EQU   SDWAGRSV+40
SDWAGR09 EQU   SDWAGRSV+36
SDWAGR08 EQU   SDWAGRSV+32
SDWAGR07 EQU   SDWAGRSV+28
SDWAGR06 EQU   SDWAGRSV+24
SDWAGR05 EQU   SDWAGRSV+20
SDWAGR04 EQU   SDWAGRSV+16
SDWAGR03 EQU   SDWAGRSV+12
SDWAGR02 EQU   SDWAGRSV+8
SDWAGR01 EQU   SDWAGRSV+4
SDWAGR00 EQU   SDWAGRSV
SDWANXTP EQU   SDWACTL2+5
SDWASGP  EQU   SDWAPMKP
SDWAEUP  EQU   SDWAPMKP
SDWADOP  EQU   SDWAPMKP
SDWAFPP  EQU   SDWAPMKP
SDWACCP  EQU   SDWAPMKP
SDWAILP  EQU   SDWAPMKP
SDWAINTP EQU   SDWACTL2+2
SDWASPVP EQU   SDWAMWPP
SDWAWATP EQU   SDWAMWPP
SDWAMCKP EQU   SDWAMWPP
@NM00133 EQU   SDWAMWPP
SDWAKEYP EQU   SDWAMWPP
SDWAEXTP EQU   SDWACMKP
SDWAIOP  EQU   SDWACMKP
SDWANXTA EQU   SDWACTL1+5
SDWASGA  EQU   SDWAPMKA
SDWAEUA  EQU   SDWAPMKA
SDWADOA  EQU   SDWAPMKA
SDWAFPA  EQU   SDWAPMKA
SDWACCA  EQU   SDWAPMKA
SDWAILA  EQU   SDWAPMKA
SDWAINTA EQU   SDWACTL1+2
SDWASPVA EQU   SDWAMWPA
SDWAWATA EQU   SDWAMWPA
SDWAMCKA EQU   SDWAMWPA
@NM00132 EQU   SDWAMWPA
SDWAKEYA EQU   SDWAMWPA
SDWAEXTA EQU   SDWACMKA
SDWAIOA  EQU   SDWACMKA
SDWACMPC EQU   SDWAABCC+1
@NM00131 EQU   SDWACMPF
SDWASTCC EQU   SDWACMPF
@NM00130 EQU   SDWACMPF
SDWASTEP EQU   SDWACMPF
SDWAREQ  EQU   SDWACMPF
SDWAPARM EQU   SDWA
@NM00129 EQU   APESMV+6
@NM00128 EQU   APESMV+4
APESMVKW EQU   APESMV+2
APESMVMS EQU   APESMV
APESREGE EQU   APESREGS+56
APESREGD EQU   APESREGS+52
APESREGC EQU   APESREGS+48
APESREGB EQU   APESREGS+44
APESREGA EQU   APESREGS+40
APESREG9 EQU   APESREGS+36
APESREG8 EQU   APESREGS+32
APESREG7 EQU   APESREGS+28
APESREG6 EQU   APESREGS+24
APESREG5 EQU   APESREGS+20
APESREG4 EQU   APESREGS+16
APESREG3 EQU   APESREGS+12
APESREG2 EQU   APESREGS+8
APESREG1 EQU   APESREGS+4
APESREG0 EQU   APESREGS
APESSDWA EQU   APES+136
APESR14S EQU   APES+40
@NM00127 EQU   APES+32
@NM00126 EQU   APES+28
@NM00125 EQU   APES+24
@NM00124 EQU   APES+23
APESCNTR EQU   APES+21
APESCOD1 EQU   APES+20
@NM00123 EQU   APESSUID
APESSU33 EQU   APESSUID
@NM00122 EQU   APESFLG1
APESFSTE EQU   APESFLG1
APESFSDI EQU   APESFLG1
APESFGM  EQU   APESFLG1
APESFXLK EQU   APESFLG1
APESFLLK EQU   APESFLG1
APESFFRR EQU   APESFLG1
@NM00121 EQU   APESFLG0
APESFRTY EQU   APESFLG0
@NM00120 EQU   APESFLG0
APESUSER EQU   APES+4
ECBEVNT  EQU   ECBEXTND
@NM00095 EQU   ECBEXTND
@NM00094 EQU   ECBBYTE3
@NM00093 EQU   ECBEXTBA
@NM00092 EQU   ECBCC
ECBPOSTB EQU   ECBCC
ECBWAITB EQU   ECBCC
ASCBEND  EQU   ASCB+208
ASCBSRBT EQU   ASCB+200
ASCBSWTL EQU   ASCB+196
ASCBRS14 EQU   ASCB+195
ASCBSMCT EQU   ASCB+194
ASCBRS12 EQU   ASCB+192
ASCBPCTT EQU   ASCB+188
ASCBVGTT EQU   ASCB+184
ASCBRV43 EQU   ASCBSRQ4
ASCBRV42 EQU   ASCBSRQ4
ASCBRV41 EQU   ASCBSRQ4
ASCBRV40 EQU   ASCBSRQ4
ASCBRV39 EQU   ASCBSRQ4
ASCBRV38 EQU   ASCBSRQ4
ASCBRV37 EQU   ASCBSRQ4
ASCBRV36 EQU   ASCBSRQ4
ASCBRV35 EQU   ASCBSRQ3
ASCBRV34 EQU   ASCBSRQ3
ASCBRV33 EQU   ASCBSRQ3
ASCBRV32 EQU   ASCBSRQ3
ASCBRV31 EQU   ASCBSRQ3
ASCBRV30 EQU   ASCBSRQ3
ASCBRV29 EQU   ASCBSRQ3
ASCBRV28 EQU   ASCBSRQ3
ASCBRV27 EQU   ASCBSRQ2
ASCBRV26 EQU   ASCBSRQ2
ASCBRV25 EQU   ASCBSRQ2
ASCBRV24 EQU   ASCBSRQ2
ASCBRV23 EQU   ASCBSRQ2
ASCBRV22 EQU   ASCBSRQ2
ASCBRV21 EQU   ASCBSRQ2
ASCBRV20 EQU   ASCBSRQ2
ASCBRV19 EQU   ASCBSRQ1
ASCBRV18 EQU   ASCBSRQ1
ASCBRV17 EQU   ASCBSRQ1
ASCBRV16 EQU   ASCBSRQ1
ASCBRV15 EQU   ASCBSRQ1
ASCBRV14 EQU   ASCBSRQ1
ASCBRV13 EQU   ASCBSRQ1
ASCBSTA  EQU   ASCBSRQ1
ASCBJBNS EQU   ASCB+176
ASCBJBNI EQU   ASCB+172
ASCBMCC  EQU   ASCB+168
ASCBRTWA EQU   ASCB+164
ASCBIQEA EQU   ASCB+160
ASCBXMPQ EQU   ASCB+156
ASCBRS01 EQU   ASCB+154
ASCBFMCT EQU   ASCB+152
ASCBOUXB EQU   ASCB+148
ASCBOUCB EQU   ASCB+144
ASCBMECB EQU   ASCB+140
ASCBQECB EQU   ASCB+136
ASCBLSQH EQU   ASCBLKGP+4
ASCBLOCK EQU   ASCBLKGP
ASCBTCBS EQU   ASCB+124
ASCBNVSC EQU   ASCB+122
ASCBVSC  EQU   ASCB+120
ASCBSRBS EQU   ASCB+118
ASCBSSRB EQU   ASCB+116
ASCBRV06 EQU   ASCBFLG2
ASCBRV05 EQU   ASCBFLG2
ASCBRV04 EQU   ASCBFLG2
ASCBSNQS EQU   ASCBFLG2
ASCBS2S  EQU   ASCBFLG2
ASCBCEXT EQU   ASCBFLG2
ASCBPXMT EQU   ASCBFLG2
ASCBXMPT EQU   ASCBFLG2
ASCBRF07 EQU   ASCBDSP1
ASCBRF06 EQU   ASCBDSP1
ASCBRF05 EQU   ASCBDSP1
ASCBRF04 EQU   ASCBDSP1
ASCBRF03 EQU   ASCBDSP1
ASCBRF02 EQU   ASCBDSP1
ASCBFAIL EQU   ASCBDSP1
ASCBNOQ  EQU   ASCBDSP1
ASCBSWCT EQU   ASCB+112
ASCBASXB EQU   ASCB+108
ASCBTMCH EQU   ASCB+104
ASCBNSWP EQU   ASCBFLG1
ASCBTYP1 EQU   ASCBFLG1
ASCBSTND EQU   ASCBFLG1
ASCBABNT EQU   ASCBFLG1
ASCBTERM EQU   ASCBFLG1
ASCBS3S  EQU   ASCBFLG1
ASCBCMSH EQU   ASCBFLG1
ASCBTOFF EQU   ASCBFLG1
ASCBRF01 EQU   ASCBRCTF
ASCBTMLW EQU   ASCBRCTF
ASCBOUT  EQU   ASCBRCTF
ASCBWAIT EQU   ASCBRCTF
ASCBRV08 EQU   ASCBRCTF
ASCBFQU  EQU   ASCBRCTF
ASCBFRS  EQU   ASCBRCTF
ASCBTMNO EQU   ASCBRCTF
ASCBAFFN EQU   ASCBFW1
ASCBDUMP EQU   ASCB+96
ASCBRV44 EQU   ASCB+92
ASCBUBET EQU   ASCB+88
ASCBECB  EQU   ASCB+84
ASCBJSTL EQU   ASCB+80
ASCBEWST EQU   ASCB+72
ASCBEJST EQU   ASCB+64
ASCBTSB  EQU   ASCB+60
ASCBCSCB EQU   ASCB+56
ASCBRSM  EQU   ASCB+52
ASCBLDA  EQU   ASCB+48
ASCBSTOR EQU   ASCB+44
ASCBDP   EQU   ASCB+43
ASCBRV07 EQU   ASCB+42
ASCBIOSM EQU   ASCB+40
ASCBSEQN EQU   ASCB+38
ASCBCPUS EQU   ASCB+32
ASCBSPL  EQU   ASCB+28
ASCBIOSP EQU   ASCB+24
ASCBSYNC EQU   ASCBSUPC+4
ASCBSVRB EQU   ASCBSUPC
ASCBCMSF EQU   ASCB+12
ASCBBWDP EQU   ASCB+8
ASCBFWDP EQU   ASCB+4
ASCBASCB EQU   ASCB
ASCBEGIN EQU   ASCB
SSALCNCL EQU   SSAL+60
SSALJFCB EQU   SSAL+52
SSALSSNM EQU   SSAL+48
SSALCOPY EQU   SSAL+44
SSALADSP EQU   SSAL+40
SSALCLAS EQU   SSAL+36
SSALFORM EQU   SSAL+32
SSALPGMN EQU   SSAL+28
SSALUNIT EQU   SSAL+24
SSALSOUT EQU   SSAL+20
SSALDUMY EQU   SSAL+16
SSALDISP EQU   SSAL+12
SSALDEST EQU   SSAL+8
SSALDDNM EQU   SSAL+4
@NM00091 EQU   SSAL+3
SSALKEEP EQU   SSALFLG1
SSALASNM EQU   SSALFLG1
SSALSPIN EQU   SSALFLG1
SSALTRKM EQU   SSALFLG1
SSALWAIT EQU   SSALFLG1
SSALNHLD EQU   SSALFLG1
SSALHOLD EQU   SSALFLG1
SSALDELT EQU   SSALFLG1
SSALLEN  EQU   SSAL
SSOBSSIB EQU   SSOB+8
SSOBLEN  EQU   SSOB+4
SSCTSSVT EQU   SSCT+16
SSCTRSV1 EQU   SSCT+13
@NM00090 EQU   SSCTFLG1
SSCTUPSS EQU   SSCTFLG1
SSCTSFOR EQU   SSCTFLG1
SSCTSNAM EQU   SSCT+8
SSCTSCTA EQU   SSCT+4
SSCTID   EQU   SSCT
CVTLEVL  EQU   CVTRELNO+2
CVTNUMB  EQU   CVTRELNO
CVTMDL   EQU   CVTFIX+250
@NM00089 EQU   CVTFIX+248
@NM00088 EQU   CVTFIX
CVTRV482 EQU   CVTXTNT2+128
CVTRV481 EQU   CVTXTNT2+124
CVTRV480 EQU   CVTXTNT2+120
CVTRV479 EQU   CVTXTNT2+118
CVTRV478 EQU   CVTXTNT2+117
CVTRV477 EQU   CVTXTNT2+116
CVTRV476 EQU   CVTXTNT2+115
CVTRV475 EQU   CVTXTNT2+114
CVTRV474 EQU   CVTRV466
CVTRV473 EQU   CVTRV466
CVTRV472 EQU   CVTRV466
CVTRV471 EQU   CVTRV466
CVTRV470 EQU   CVTRV466
CVTRV469 EQU   CVTRV466
CVTRV468 EQU   CVTRV466
CVTRV467 EQU   CVTRV466
CVTRV465 EQU   CVTRV457
CVTRV464 EQU   CVTRV457
CVTRV463 EQU   CVTRV457
CVTRV462 EQU   CVTRV457
CVTRV461 EQU   CVTRV457
CVTRV460 EQU   CVTRV457
CVTRV459 EQU   CVTRV457
CVTRV458 EQU   CVTRV457
CVTRV456 EQU   CVTXTNT2+108
CVTRV455 EQU   CVTXTNT2+104
CVTRV454 EQU   CVTXTNT2+100
CVTRV453 EQU   CVTXTNT2+96
CVTRV452 EQU   CVTXTNT2+94
CVTRV451 EQU   CVTXTNT2+92
CVTRV450 EQU   CVTXTNT2+90
CVTRV449 EQU   CVTXTNT2+88
CVTRV448 EQU   CVTXTNT2+87
CVTRV447 EQU   CVTXTNT2+86
CVTRV446 EQU   CVTRV438
CVTRV445 EQU   CVTRV438
CVTRV444 EQU   CVTRV438
CVTRV443 EQU   CVTRV438
CVTRV442 EQU   CVTRV438
CVTRV441 EQU   CVTRV438
CVTRV440 EQU   CVTRV438
CVTRV439 EQU   CVTRV438
CVTRV437 EQU   CVTRV429
CVTRV436 EQU   CVTRV429
CVTRV435 EQU   CVTRV429
CVTRV434 EQU   CVTRV429
CVTRV433 EQU   CVTRV429
CVTRV432 EQU   CVTRV429
CVTRV431 EQU   CVTRV429
CVTRV430 EQU   CVTRV429
CVTRV428 EQU   CVTXTNT2+80
CVTRV427 EQU   CVTXTNT2+76
CVTRV426 EQU   CVTXTNT2+72
CVTRV425 EQU   CVTXTNT2+68
CVTATACT EQU   CVTATCVT
CVTRV423 EQU   CVTXTNT2+62
CVTRV422 EQU   CVTXTNT2+60
CVTRV421 EQU   CVTXTNT2+58
CVTRV420 EQU   CVTXTNT2+56
CVTRV419 EQU   CVTXTNT2+55
CVTRV418 EQU   CVTXTNT2+54
CVTRV417 EQU   CVTRV409
CVTRV416 EQU   CVTRV409
CVTRV415 EQU   CVTRV409
CVTRV414 EQU   CVTRV409
CVTRV413 EQU   CVTRV409
CVTRV412 EQU   CVTRV409
CVTRV411 EQU   CVTRV409
CVTRV410 EQU   CVTRV409
CVTRV408 EQU   CVTRV400
CVTRV407 EQU   CVTRV400
CVTRV406 EQU   CVTRV400
CVTRV405 EQU   CVTRV400
CVTRV404 EQU   CVTRV400
CVTRV403 EQU   CVTRV400
CVTRV402 EQU   CVTRV400
CVTRV401 EQU   CVTRV400
CVTICB   EQU   CVTXTNT2+48
CVTSKTA  EQU   CVTXTNT2+44
CVTRSV99 EQU   CVTXTNT2+40
CVTRSV98 EQU   CVTXTNT2+36
CVTRSV97 EQU   CVTXTNT2+34
CVTRSV96 EQU   CVTXTNT2+32
CVTOLTEP EQU   CVTXTNT2+28
CVTQIDA  EQU   CVTQID+1
CVTRSV95 EQU   CVTQID
CVTRSV94 EQU   CVTXTNT2+20
CVTRSV93 EQU   CVTXTNT2+16
CVTRSV92 EQU   CVTXTNT2+12
CVTDEBVR EQU   CVTXTNT2+8
CVTRSV91 EQU   CVTXTNT2+6
CVTRSV9H EQU   CVTFLGBT
CVTRSV9G EQU   CVTFLGBT
CVTRSV9F EQU   CVTFLGBT
CVTRSV9E EQU   CVTFLGBT
CVTRSV9D EQU   CVTFLGBT
CVTRSV9C EQU   CVTFLGBT
CVTVME   EQU   CVTFLGBT
CVTNPE   EQU   CVTFLGBT
CVTNUCLS EQU   CVTXTNT2+4
CVTDSSVA EQU   CVTDSSV+1
CVTRSV89 EQU   CVTDSSV
CVTRSV88 EQU   CVTXTNT1+8
CVTRSV87 EQU   CVTXTNT1+4
CVTFACHN EQU   CVTXTNT1
CVTRV488 EQU   CVTMAP+412
CVTRV487 EQU   CVTMAP+408
CVTRV486 EQU   CVTMAP+404
CVTRV485 EQU   CVTMAP+400
CVTACTAP EQU   CVTMAP+396
CVTAUTH  EQU   CVTMAP+392
CVTATMCA EQU   CVTATMCT+1
CVTATMST EQU   CVTATMCT
CVTRSV61 EQU   CVTMAP+384
CVTVOLT1 EQU   CVTVOLM1+1
CVTVOLI1 EQU   CVTVOLF1
CVTSTOA  EQU   CVTMAP+376
CVTRSV58 EQU   CVTMAP+374
CVTRSV57 EQU   CVTMAP+372
CVTDDCE  EQU   CVTMAP+368
CVTPNWFR EQU   CVTMAP+364
CVTSMF   EQU   CVTMAP+360
CVTSULK  EQU   CVTMAP+358
CVTSLKO  EQU   CVTSYSK
CVTSLKP  EQU   CVTSYSK
CVTSLKQ  EQU   CVTSYSK
CVTSLKR  EQU   CVTSYSK
CVTRSV56 EQU   CVTSYSK
CVTRSV55 EQU   CVTSYSK
CVTRSV54 EQU   CVTSYSK
CVTRSV53 EQU   CVTSYSK
CVTRSV52 EQU   CVTA1F1
CVTRSV51 EQU   CVTA1F1
CVTRSV50 EQU   CVTA1F1
CVTRSV49 EQU   CVTA1F1
CVTRSV48 EQU   CVTA1F1
CVTRSV47 EQU   CVTA1F1
CVTSRSW  EQU   CVTA1F1
CVTPFSW  EQU   CVTA1F1
CVTPCVT  EQU   CVTMAP+352
CVTRSV46 EQU   CVTMAP+344
CVTRSV45 EQU   CVTMAP+340
CVTRSV44 EQU   CVTMAP+338
CVTRSV43 EQU   CVTMAP+336
CVTHJESA EQU   CVTHJES+1
CVTRSV42 EQU   CVTHJES
CVTEXT2A EQU   CVTEXT2+1
CVTRSV41 EQU   CVTEXT2
CVTAPFA  EQU   CVTAPF+1
CVTRSV40 EQU   CVTAPF
CVTRV518 EQU   CVTINTLA
CVTRV517 EQU   CVTERPV
CVTEORM  EQU   CVTMAP+312
CVTMCHPR EQU   CVTMAP+308
CVTTZ    EQU   CVTMAP+304
CVTJEPS  EQU   CVTMAP+300
CVTJESCT EQU   CVTMAP+296
CVTMODE  EQU   CVTMAP+292
CVTPTRV  EQU   CVTMAP+288
CVTREAL  EQU   CVTMAP+284
CVTRSV39 EQU   CVTMAP+280
CVTRSV38 EQU   CVTMAP+276
CVTDMSRA EQU   CVTDMSR+1
CVTRV634 EQU   CVTDMSRF
CVTRV633 EQU   CVTDMSRF
CVTRV632 EQU   CVTDMSRF
CVTRV631 EQU   CVTDMSRF
CVTRV630 EQU   CVTDMSRF
CVTRV629 EQU   CVTDMSRF
CVTUDUMP EQU   CVTDMSRF
CVTSDUMP EQU   CVTDMSRF
CVTQMSGA EQU   CVTQMSG+1
CVTRSV36 EQU   CVTQMSG
CVTAMFF  EQU   CVTMAP+264
CVTPURGA EQU   CVTPURG+1
CVTRSV35 EQU   CVTPURG
CVTCBSP  EQU   CVTMAP+256
CVTATERA EQU   CVTATER+1
CVTSYST  EQU   CVTATER
CVTVOLT2 EQU   CVTTAT
CVTVOLI2 EQU   CVTVOLF2
CVTAQAVB EQU   CVTAQAVT+1
CVTRSV34 EQU   CVTTCMFG
CVTRSV33 EQU   CVTTCMFG
CVTRSV32 EQU   CVTTCMFG
CVTRSV31 EQU   CVTTCMFG
CVTRSV30 EQU   CVTTCMFG
CVTRSV29 EQU   CVTTCMFG
CVTLDEV  EQU   CVTTCMFG
CVTTCRDY EQU   CVTTCMFG
CVTGTFA  EQU   CVTGTF+1
CVTRSV27 EQU   CVTGTFST
CVTRNIO  EQU   CVTGTFST
CVTUSR   EQU   CVTGTFST
CVTRV318 EQU   CVTFORM
CVTRV317 EQU   CVTTMODE
CVTRV316 EQU   CVTSTATE
CVTRV315 EQU   CVTGTFS
CVTGTFAV EQU   CVTGTFS
CVT0SCR1 EQU   CVTMAP+232
CVTRV515 EQU   CVTMAP+228
CVTRMS   EQU   CVTMAP+224
CVTPATCH EQU   CVTMAP+220
CVTTSCE  EQU   CVTMAP+216
CVTLNKSC EQU   CVTMAP+214
CVTQABST EQU   CVTMAP+212
CVTMDLDS EQU   CVTMAP+208
CVTUSER  EQU   CVTMAP+204
CVTABEND EQU   CVTMAP+200
CVTSMCA  EQU   CVTMAP+196
CVTRSV18 EQU   CVTMAP+192
CVTQLPAQ EQU   CVTMAP+188
CVTQCDSR EQU   CVTMAP+184
CVTRSV17 EQU   CVTOPTB
CVTRSV16 EQU   CVTOPTB
CVTFP    EQU   CVTOPTB
CVTAPTHR EQU   CVTOPTB
CVTNLOG  EQU   CVTOPTB
CVTTOD   EQU   CVTOPTB
CVTCTIMS EQU   CVTOPTB
CVTPROT  EQU   CVTOPTB
CVTXPFP  EQU   CVTOPTA
CVTASCII EQU   CVTOPTA
CVTRSV13 EQU   CVTOPTA
CVTRSV12 EQU   CVTOPTA
CVTNIP   EQU   CVTOPTA
CVTDDR   EQU   CVTOPTA
CVTAPR   EQU   CVTOPTA
CVTCCH   EQU   CVTOPTA
CVTSNCTR EQU   CVTMAP+180
CVTQMWR  EQU   CVTMAP+176
CVTQOCR  EQU   CVTMAP+172
CVT1EF00 EQU   CVTMAP+168
CVTMZ00  EQU   CVTMAP+164
CVTHEAD  EQU   CVTMAP+160
CVTRSV11 EQU   CVTMAP+156
CVT0PT01 EQU   CVTMAP+152
CVTMSER  EQU   CVTMAP+148
CVTRV516 EQU   CVTIERLC
CVTILCH  EQU   CVTMAP+140
CVT0DS   EQU   CVTMAP+136
CVTFBOSV EQU   CVTMAP+132
CVTNUCB  EQU   CVTMAP+128
CVTIXAVL EQU   CVTMAP+124
CVTIOQET EQU   CVTMAP+120
CVTDCBA  EQU   CVTMAP+117
CVTMVS2  EQU   CVTDCB
CVT6DAT  EQU   CVTDCB
CVT4MPS  EQU   CVTDCB
CVTRSV09 EQU   CVTDCB
CVT4MS1  EQU   CVTDCB
CVT2SPS  EQU   CVTDCB
CVT1SSS  EQU   CVTDCB
CVTRSV08 EQU   CVTDCB
CVTSTB   EQU   CVTMAP+112
CVTQTD00 EQU   CVTMAP+108
CVTQTE00 EQU   CVTMAP+104
CVTCUCB  EQU   CVTMAP+100
CVTSJQ   EQU   CVTMAP+96
CVTPBLDL EQU   CVTMAP+92
CVTTPC   EQU   CVTMAP+88
CVTSVDCB EQU   CVTMAP+84
CVTBRET  EQU   CVTMAP+82
CVTEXIT  EQU   CVTMAP+80
CVT0FN00 EQU   CVTMAP+76
CVTDARA  EQU   CVTDAR+1
CVTRSV07 EQU   CVTFLGS1
CVTRSV06 EQU   CVTFLGS1
CVTRSV05 EQU   CVTFLGS1
CVTRSV04 EQU   CVTFLGS1
CVTRSV03 EQU   CVTFLGS1
CVTRSV02 EQU   CVTFLGS1
CVTRSV01 EQU   CVTFLGS1
CVTDMPLK EQU   CVTFLGS1
CVTXITP  EQU   CVTMAP+68
CVTZDTAB EQU   CVTMAP+64
CVTMSLT  EQU   CVTMAP+60
CVTDATE  EQU   CVTMAP+56
CVTBTERM EQU   CVTMAP+52
CVTSYSAD EQU   CVTMAP+48
CVTXTLER EQU   CVTMAP+44
CVTILK2  EQU   CVTMAP+40
CVTILK1  EQU   CVTMAP+36
CVTPRLTV EQU   CVTMAP+32
CVTPCNVT EQU   CVTMAP+28
CVT0VL00 EQU   CVTMAP+24
CVTXAPG  EQU   CVTMAP+20
CVTBUF   EQU   CVTMAP+16
CVTJOB   EQU   CVTMAP+12
CVTLINK  EQU   CVTMAP+8
CVT0EF00 EQU   CVTMAP+4
CVT      EQU   CVTMAP
@NM00087 EQU   APVU+3040
@NM00086 EQU   APVUAUSE
APVUAPIO EQU   APVUAUSE
APVUMON  EQU   APVUAUSE
APVUWORK EQU   APVU+40
@NM00085 EQU   APVU+16
@NM00084 EQU   APVU+14
APVUANUM EQU   APVU+12
APVULEN  EQU   APVUSPLN+1
APVUSPNO EQU   APVUSPLN
APVUUSER EQU   APVU+4
APVUID   EQU   APVU
@NM00083 EQU   APGF+16
APGFTCB  EQU   APGF+12
APGFINIT EQU   APGF+1
APGFSUNC EQU   APGFSW
APGFSTCB EQU   APGFSW
APGFSLCK EQU   APGFSW
APGFSPGE EQU   APGFSW
APGFSCLR EQU   APGFSW
APGFSINL EQU   APGFSW
APGFSINA EQU   APGFSW
APSVWORK EQU   APSV+80
@NM00082 EQU   APSV+80
APSVFREE EQU   APSV+76
APSVAPSM EQU   APSV+72
APSVRG12 EQU   APSVREGS+56
APSVRG11 EQU   APSVREGS+52
APSVRG10 EQU   APSVREGS+48
APSVRG9  EQU   APSVREGS+44
APSVRG8  EQU   APSVREGS+40
APSVRG7  EQU   APSVREGS+36
APSVRG6  EQU   APSVREGS+32
APSVRG5  EQU   APSVREGS+28
APSVRG4  EQU   APSVREGS+24
APSVRG3  EQU   APSVREGS+20
APSVRG2  EQU   APSVREGS+16
APSVRG1  EQU   APSVREGS+12
APSVRG0  EQU   APSVREGS+8
APSVRG15 EQU   APSVREGS+4
APSVRG14 EQU   APSVREGS
APSVNEXT EQU   APSV+8
APSVPREV EQU   APSV+4
APSVAPSC EQU   APSV
@NM00081 EQU   APUB+120
@NM00080 EQU   APUB+112
APUBJBNM EQU   APUB+104
APUBSIZE EQU   APUB+102
APUBRSVD EQU   APUB+100
APUBASCB EQU   APUBDCB
@NM00079 EQU   APUBIOFG+4
@NM00078 EQU   APUBIOF3
APUBIRIP EQU   APUBIOF3
@NM00077 EQU   APUBIOF2
@NM00076 EQU   APUBIOF1
APUBIIPL EQU   APUBIOF1
APUBIERR EQU   APUBIOF1
@NM00075 EQU   APUBIOF0
APUBICNL EQU   APUBIOF0
APUBINRG EQU   APUBIOF0
APUBIDAB EQU   APUBIOF0
APUBIDWN EQU   APUBIOF0
@NM00074 EQU   APUB+85
@NM00073 EQU   APUBSTAT
APUBQISC EQU   APUBSTAT
APUBPDMP EQU   APUBSTAT
APUBFDMP EQU   APUBSTAT
APUBRIPL EQU   APUBSTAT
@NM00072 EQU   APUBALF3
APUBSCAL EQU   APUBALF3
APUBSCAV EQU   APUBALF3
APUBBIST EQU   APUBALF3
APUBBTST EQU   APUBALF3
@NM00071 EQU   APUBALF2
APUBBOPT EQU   APUBALF2
APUBBREQ EQU   APUBALF2
APUBBYT1 EQU   APUBALF2
@NM00070 EQU   APUBALF1
APUBUNLP EQU   APUBALF1
APUBDSBP EQU   APUBALF1
APUBBERR EQU   APUBALF1
APUBUNLD EQU   APUBALF1
APUBDSBL EQU   APUBALF1
APUBZRGN EQU   APUBALF1
@NM00069 EQU   APUBALF0
APUBSBCH EQU   APUBALF0
APUBCPU  EQU   APUB+78
APUBINIT EQU   APUB+76
APUBIPL  EQU   APUB+74
APUBERRJ EQU   APUBERRS+20
APUBERRD EQU   APUBERRS+18
APUBERRC EQU   APUBERRS+16
APUBERRB EQU   APUBERRS+14
APUBERRA EQU   APUBERRS+12
APUBERR9 EQU   APUBERRS+10
APUBERR3 EQU   APUBERRS+8
APUBERR2 EQU   APUBERRS+6
APUBERR1 EQU   APUBERRS+4
APUBERR0 EQU   APUBERRS+2
@NM00068 EQU   APUBERRS
@NM00067 EQU   APUB+50
APUBRGN  EQU   APUB+48
APUBERRT EQU   APUB+44
APUBMSTP EQU   APUB+40
APUBUBAP EQU   APUB+36
APUBAPDS EQU   APUB+32
APUBUCB  EQU   APUB+28
APUBIOCT EQU   APUB+24
APUBAPCT EQU   APUB+20
APUBUSER EQU   APUB+16
APUBNXIO EQU   APUB+12
APUBMSTR EQU   APUB+8
APUBAPUB EQU   APUB+4
APUBID   EQU   APUB
@NM00066 EQU   APDS+144
@NM00065 EQU   APDS+100
APDSAPEP EQU   APDS+96
@NM00064 EQU   APDS+94
APDSJBNM EQU   APDS+84
APDSMSK  EQU   APDS+72
@NM00063 EQU   APDS+69
APDSIOFS EQU   APDS+68
APDSDUMP EQU   APDS+67
APDSPGFX EQU   APDS+66
@NM00062 EQU   APDSFLG1
APDSFRST EQU   APDSFLG1
APDSSLPS EQU   APDSFLG0
APDSLSR  EQU   APDSFLG0
APDSIER  EQU   APDSFLG0
APDSVPER EQU   APDSFLG0
APDSVLER EQU   APDSFLG0
APDSTPGM EQU   APDSFLG0
APDSREG  EQU   APDS+56
APDSPERR EQU   APDS+40
APDSLERR EQU   APDS+32
APDSDDNM EQU   APDS+24
APDSDEB  EQU   APDSTD+4
APDSTCB  EQU   APDSTD
APDSAPCT EQU   APDS+12
APDSUSER EQU   APDS+8
APDSID   EQU   APDS
@NM00046 EQU   APCT+1556
APCTSVCT EQU   APCT+1552
APCTDAVT EQU   APCT+1548
APCTLOGL EQU   APCT+1544
@NM00045 EQU   APCT+1540
APCTDMPU EQU   APCT+1536
APCTDMPM EQU   APCT+1532
APCTNDMP EQU   APCT+1530
APCTASID EQU   APCT+1528
APCTLGPG EQU   APCT+1526
APCTLGLN EQU   APCT+1524
APCTABR  EQU   APCT+1116
APCTLOGD EQU   APCT+1108
APCTDCLD EQU   APCT+1104
APCTIOAP EQU   APCT+1100
@NM00044 EQU   APCT+1080
@NM00043 EQU   APCT+1078
APCTKCAX EQU   APCT+1076
APCTABND EQU   APCT+1072
@NM00042 EQU   APCT+1068
APCTAPIO EQU   APCT+1064
APCTCSCT EQU   APCT+1060
APCTSTDF EQU   APCT+1056
APCTSTMX EQU   APCT+1052
APCTRGMX EQU   APCT+1048
APCTSIZE EQU   APCT+1046
APCTCTUB EQU   APCT+1045
APCTMFID EQU   APCT+1044
APCTMFSZ EQU   APCT+1040
APCTCRTN EQU   APCT+1036
APCTAPCP EQU   APCT+1032
APCTAMNA EQU   APCT+1028
APCTEMNA EQU   APCT+1024
@NM00041 EQU   APCT+1012
@NM00040 EQU   APCT+1008
@NM00039 EQU   APCT+1004
APCTEIPL EQU   APCT+1000
@NM00038 EQU   APCT+996
@NM00037 EQU   APCT+992
@NM00036 EQU   APCT+988
@NM00035 EQU   APCT+984
@NM00034 EQU   APCT+980
APCTECPW EQU   APCT+976
APCTECPT EQU   APCT+968
APCTEALC EQU   APCT+964
APCTECBL EQU   APCT+960
APCTECIT EQU   APCT+956
APCTCQAF EQU   APCTCQAQ
APCTCQL  EQU   APCTAPCQ+4
APCTCQF  EQU   APCTAPCQ
APCTCQLK EQU   APCT+940
@NM00033 EQU   @NM00029+2
@NM00032 EQU   APCTPRSW
@NM00031 EQU   APCTPRSW
@NM00030 EQU   APCTSTAT
APCTWARM EQU   APCTSTAT
APCTTERM EQU   APCTSTAT
APCTHALT EQU   APCTSTAT
APCTQSCE EQU   APCTSTAT
APCTSTRT EQU   APCTSTAT
APCTACT  EQU   APCTSTAT
@NM00028 EQU   APCT+935
APCTSOUT EQU   APCT+934
APCTDAID EQU   APCT+933
APCTSV34 EQU   APCT+932
APCTMJOB EQU   APCT+928
APCTTCB  EQU   APCT+924
APCTDCNW EQU   APCT+918
APCTDCNR EQU   APCT+916
@NM00027 EQU   APCT+912
@NM00026 EQU   APCT+908
@NM00025 EQU   APCT+904
@NM00024 EQU   APCT+900
@NM00023 EQU   APCTERRS+22
APCTERTJ EQU   APCTERRS+20
APCTERTD EQU   APCTERRS+18
APCTERTC EQU   APCTERRS+16
APCTERTB EQU   APCTERRS+14
APCTERTA EQU   APCTERRS+12
APCTERT9 EQU   APCTERRS+10
APCTERT3 EQU   APCTERRS+8
APCTERT2 EQU   APCTERRS+6
APCTERT1 EQU   APCTERRS+4
APCTERT0 EQU   APCTERRS+2
APCTERTT EQU   APCTERRS
APCTISUB EQU   APCT+868
APCTUBAP EQU   APCT+864
APCTUBIC EQU   APCT+856
APCTUBIS EQU   APCT+852
APCTAPUB EQU   APCT+848
APCTUBLK EQU   APCT+844
APCTBR1A EQU   APCTBR14+2
@NM00022 EQU   APCTBR14
APCTSMSZ EQU   APCTSMAD+2
@NM00021 EQU   APCTSMAD+1
@NM00020 EQU   APCTSMAD
APCTSMIS EQU   APCTSMIN+2
@NM00019 EQU   APCTSMIN+1
APCTSMSP EQU   APCTSMIN
@NM00018 EQU   APCT+30
APCTLINE EQU   APCT+28
APCTLBSZ EQU   APCT+24
APCTREG  EQU   APCT+20
APCTSSID EQU   APCTENQM+4
@NM00017 EQU   APCTENQM
APCTSSVT EQU   APCT+8
APCTUSER EQU   APCT+4
APCTID   EQU   APCT
@NM00009 EQU   @NM00008
CURASCB  EQU   TASKINFO+12
NEXTASCB EQU   TASKINFO+8
CURTCB   EQU   TASKINFO+4
NEXTTCB  EQU   TASKINFO
@NM00119 EQU   PSA+3668
PSASTAK  EQU   PSA+3072
@NM00118 EQU   PSA+1048
PSAUSEND EQU   PSA+1048
PSARV062 EQU   PSA+1044
PSACDAL  EQU   PSA+1040
PSAWTCOD EQU   PSA+1036
PSAATCVT EQU   PSA+1032
PSAPCPSW EQU   PSA+1024
PSAPIR2  EQU   PSA+1020
PSARV059 EQU   PSA+1018
PSASVC13 EQU   PSA+1016
PSALSFCC EQU   PSA+1012
PSASFACC EQU   PSA+1008
PSASTOP  EQU   PSA+992
PSASTART EQU   PSA+976
PSARSPSW EQU   PSA+968
PSASRPSW EQU   PSA+960
PSARV045 EQU   PSA+892
PSARV044 EQU   PSA+888
PSARV043 EQU   PSA+884
PSARV042 EQU   PSA+880
PSARV041 EQU   PSA+876
PSARV040 EQU   PSA+872
PSARV025 EQU   PSA+868
PSADSSED EQU   PSA+868
PSADSSPR EQU   PSA+864
PSADSSFW EQU   PSA+860
PSADSS14 EQU   PSA+856
PSADSSPP EQU   PSA+848
PSADSSRP EQU   PSA+840
PSADSS05 EQU   PSADSSF4
PSADSS10 EQU   PSADSSF4
PSADSSVE EQU   PSADSSF4
PSADSSDE EQU   PSADSSF4
PSADSSC0 EQU   PSADSSF4
PSADSSIE EQU   PSADSSF4
PSADSS12 EQU   PSADSSF4
PSADSSRC EQU   PSADSSF4
PSARV057 EQU   PSADSSF3
PSARV056 EQU   PSADSSF3
PSARV055 EQU   PSADSSF3
PSADSSMC EQU   PSADSSF3
PSADSSRW EQU   PSADSSF3
PSADSSNM EQU   PSADSSF3
PSADSSES EQU   PSADSSF3
PSADSSGP EQU   PSADSSF3
PSADSSF2 EQU   PSADSSFL+1
PSADSSPI EQU   PSADSSF1
PSADSSOI EQU   PSADSSF1
PSADSSSP EQU   PSADSSF1
PSADSSTP EQU   PSADSSF1
PSADSSDW EQU   PSADSSF1
PSADSSDD EQU   PSADSSF1
PSADSSDM EQU   PSADSSF1
PSADSSMV EQU   PSADSSF1
PSADSSTS EQU   PSA+816
PSADSSWK EQU   PSA+812
PSADSSR3 EQU   PSA+808
PSADSSR2 EQU   PSA+804
PSADSSRS EQU   PSA+800
PSASTOR  EQU   PSA+796
PSACPUSA EQU   PSA+794
PSAVSTAP EQU   PSA+792
PSAWKVAP EQU   PSA+788
PSAWKRAP EQU   PSA+784
PSAMCHIC EQU   PSA+783
PSARV061 EQU   PSA+782
PSASYMSK EQU   PSA+781
PSAMCHFL EQU   PSA+780
PSACR0   EQU   PSA+776
PSAPSWSV EQU   PSA+768
PSALITA  EQU   PSA+764
PSACLHS  EQU   PSAHLHI
PSALKR15 EQU   PSALKSA+60
PSALKR14 EQU   PSALKSA+56
PSALKR13 EQU   PSALKSA+52
PSALKR12 EQU   PSALKSA+48
PSALKR11 EQU   PSALKSA+44
PSALKR10 EQU   PSALKSA+40
PSALKR9  EQU   PSALKSA+36
PSALKR8  EQU   PSALKSA+32
PSALKR7  EQU   PSALKSA+28
PSALKR6  EQU   PSALKSA+24
PSALKR5  EQU   PSALKSA+20
PSALKR4  EQU   PSALKSA+16
PSALKR3  EQU   PSALKSA+12
PSALKR2  EQU   PSALKSA+8
PSALKR1  EQU   PSALKSA+4
PSALKR0  EQU   PSALKSA
PSARV023 EQU   PSACLHT+52
PSALOCAL EQU   PSACLHT+48
PSACMSL  EQU   PSACLHT+44
PSAOPTL  EQU   PSACLHT+40
PSATPACL EQU   PSACLHT+36
PSATPDNL EQU   PSACLHT+32
PSATPNCL EQU   PSACLHT+28
PSAIOSLL EQU   PSACLHT+24
PSAIOSUL EQU   PSACLHT+20
PSAIOSCL EQU   PSACLHT+16
PSAIOSSL EQU   PSACLHT+12
PSASALCL EQU   PSACLHT+8
PSAASML  EQU   PSACLHT+4
PSADISPL EQU   PSACLHT
PSASRSA  EQU   PSA+636
PSARV050 EQU   PSA+634
PSADSSGO EQU   PSA+633
PSARECUR EQU   PSA+632
PSAHLHIS EQU   PSA+628
PSAIPCSA EQU   PSA+624
@NM00117 EQU   PSA+621
PSAIPCDM EQU   PSA+620
PSAIPCD  EQU   PSA+616
@NM00116 EQU   PSA+613
PSAIPCRM EQU   PSA+612
PSAIPCR  EQU   PSA+608
PSAMCHEX EQU   PSA+600
PSAMPSW  EQU   PSA+592
PSAEXPS2 EQU   PSA+584
PSAEXPS1 EQU   PSA+576
PSAPIREG EQU   PSA+572
PSARSREG EQU   PSA+568
PSAGPREG EQU   PSA+556
PSARV022 EQU   PSASUP4
PSARV021 EQU   PSASUP4
PSARV020 EQU   PSASUP4
PSARV019 EQU   PSASUP4
PSARV018 EQU   PSASUP4
PSARV017 EQU   PSASUP4
PSARV016 EQU   PSASUP4
PSARV015 EQU   PSASUP4
PSARV014 EQU   PSASUP3
PSARV013 EQU   PSASUP3
PSARV012 EQU   PSASUP3
PSAESTA  EQU   PSASUP3
PSASPR   EQU   PSASUP3
PSAPSREG EQU   PSASUP3
PSAPI2   EQU   PSASUP3
PSAIOSUP EQU   PSASUP3
PSALCR   EQU   PSASUP2
PSARTM   EQU   PSASUP2
PSAACR   EQU   PSASUP2
PSAIPCE2 EQU   PSASUP2
PSAIPCES EQU   PSASUP2
PSAIPCEC EQU   PSASUP2
PSAGTF   EQU   PSASUP2
PSAIPCRI EQU   PSASUP2
PSATYPE6 EQU   PSASUP1
PSATCTL  EQU   PSASUP1
PSADISP  EQU   PSASUP1
PSALOCK  EQU   PSASUP1
PSAPI    EQU   PSASUP1
PSAEXT   EQU   PSASUP1
PSASVC   EQU   PSASUP1
PSAIO    EQU   PSASUP1
PSAANEW  EQU   PSA+544
PSATOLD  EQU   PSA+540
PSATNEW  EQU   PSA+536
PSALCCAR EQU   PSA+532
PSALCCAV EQU   PSA+528
PSAPCCAR EQU   PSA+524
PSAPCCAV EQU   PSA+520
PSACPULA EQU   PSA+518
PSACPUPA EQU   PSA+516
PSAPSA   EQU   PSA+512
FLCHDEND EQU   PSA+512
FLCCRSAV EQU   FLCMCLA+280
FLCGRSAV EQU   FLCMCLA+216
FLCFPSAV EQU   FLCMCLA+184
FLCFLA   EQU   FLCMCLA+88
FLCRGNCD EQU   FLCMCLA+84
FLCFSAA  EQU   FLCFSA+1
@NM00115 EQU   FLCFSA
@NM00114 EQU   FLCMCLA+72
FLCMCIC  EQU   FLCMCLA+64
@NM00113 EQU   FLCMCLA+20
FLCIOAA  EQU   FLCIOA+1
@NM00112 EQU   FLCIOA
@NM00111 EQU   FLCMCLA+15
@NM00110 EQU   FLCMCLA+14
@NM00109 EQU   FLCMCLA+12
FLCLCL   EQU   FLCMCLA+8
FLCIOELA EQU   FLCIOEL+1
@NM00108 EQU   FLCIOEL
FLCCHNID EQU   FLCMCLA
@NM00107 EQU   PSA+160
FLCMTRCD EQU   PSA+157
@NM00106 EQU   PSA+156
FLCPERA  EQU   FLCPER+1
@NM00105 EQU   FLCPER
@NM00104 EQU   PSA+151
FLCPERCD EQU   PSA+150
FLCMCNUM EQU   PSA+149
@NM00103 EQU   PSA+148
FLCTEAA  EQU   FLCTEA+1
@NM00102 EQU   FLCTEA
PSAPIPC  EQU   PSAPICOD
PSAPIMC  EQU   PSAPICOD
PSAPIPER EQU   PSAPICOD
PSARV049 EQU   FLCPICOD
FLCPILCB EQU   FLCPIILC
@NM00101 EQU   FLCPIILC
@NM00100 EQU   PSAEPPSW
FLCSVCN  EQU   PSAESPSW+2
FLCSILCB EQU   FLCSVILC
@NM00099 EQU   FLCSVILC
@NM00098 EQU   PSAESPSW
FLCEICOD EQU   PSAEEPSW+2
PSASPAD  EQU   PSAEEPSW
@NM00097 EQU   PSA+128
FLCINPSW EQU   PSA+120
FLCMNPSW EQU   PSA+112
FLCPNPSW EQU   PSA+104
FLCSNPSW EQU   PSA+96
FLCENPSW EQU   PSA+88
FLCTRACE EQU   PSA+84
FLCTIMER EQU   PSA+80
FLCCVT2  EQU   PSA+76
FLCCAW   EQU   PSA+72
FLCCSW   EQU   PSA+64
FLCIOPSW EQU   PSA+56
FLCMOPSW EQU   PSA+48
FLCPOPSW EQU   PSA+40
FLCSOPSW EQU   PSA+32
FLCEOPSW EQU   PSA+24
@NM00096 EQU   FLCICCW2+4
FLCICCW1 EQU   FLCROPSW
FLCIPPSW EQU   FLCRNPSW
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RC00274 EQU   @RC00273
@RF00390 EQU   @RC00238
@RC00531 EQU   @EL00002
@RC00515 EQU   @EL00002
JJXRET   EQU   @EL00003
@PB00003 EQU   @PB00004
@RF00561 EQU   @EL00004
@RT00454 EQU   JJXRET
@RC00516 EQU   @RC00515
@PB00002 EQU   @PB00003
@ENDDATA EQU   *
         END   IGTJJ0,(C'PLS2139',0701,77092)
