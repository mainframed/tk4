TJHR     TITLE 'IGTJHR - 3838 SS ALLOCATION RECOVERY RETRY ROUTINE.    *
                        '
IGTJHR   CSECT ,                                                01S0001
@MAINENT DS    0H                                               01S0001
         USING *,@15                                            01S0001
         B     @PROLOG                                          01S0001
         DC    AL1(16)                                          01S0001
         DC    C'IGTJHR    77.092'                              01S0001
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                  01S0001
         BALR  @07,0                                            01S0001
@PSTART  DS    0H                                               01S0001
         USING @PSTART,@07                                      01S0001
         L     @00,@SIZDATD                                     01S0001
         IGTYGSV  R,LV=(0)
         LR    @06,@01                                          01S0001
         USING @DATD,@06                                        01S0001
         ST    @13,@SA00001+4                                   01S0001
         LM    @00,@01,20(@13)                                  01S0001
         ST    @06,8(,@13)                                      01S0001
         LR    @13,@06                                          01S0001
*                                                               02S0086
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS SEGMENT CREATES AN ECB LIST FOR USE FOLLOWING AN ENQ WITH*/
*   /* ECB OPTION.                                                   */
*   /*                                                               */
*   /*****************************************************************/
*                                                               02S0086
*   DO;                             /* INSURE ENTIRE SEGMENT IS INCLD*/
*     THEECBP=ADDR(ENQECB);         /* POINTER TO ENQ ECB            */
         LA    @10,ENQECB                                       02S0087
         ST    @10,THEECBP                                      02S0087
*     CNCLECBP=ACNCLECB;            /* POINTER TO CANCEL ECB OR DUMMY*/
         L     @10,ACNCLECB(,ALLCWAPT)                          02S0088
         ST    @10,CNCLECBP                                     02S0088
*     LASTECBI=BON;                 /* ADDRESSES SET, INDICATE LAST  */
         OI    LASTECBI,B'10000000'                             02S0089
*   END;                            /* END OF SEGMENT.               */
*   DO;                             /* INSURE ENTIRE SEGMENT INCLUDED*/
*     GEN REFS(DEQLIST1,DQLIST1L,APCTENQM,APUBENQR) SETS(DYNDEQLA);
*                                   /*
         MVC   DYNDEQLA(L'DQLIST1L),DEQLIST1 INIT DYN DEQ AREA
         DEQ   (APCTENQM-APCT(,APCTPTR),APUBENQR,4,SYSTEM),            *
               MF=(E,DYNDEQLA)
*     ALLAPUB=BOFF;                 /* INDICATE TASK NO LONGER  02S0093
*                                      CONTROLS RESOURCE             */
         NI    ALLAPUB(ALLCWAPT),B'11011111'                    02S0093
*   END;                                                        02S0094
*   DO;                             /* INCLUDE ENTIRE SEGMENT.       */
*     J=1;                          /* INDEX TO INITIAL WTO          */
*                                                               02S0096
         LA    @10,1                                            02S0096
         LR    J,@10                                            02S0096
*     /***************************************************************/
*     /*                                                             */
*     /* THESE NEXT TWO STATEMENTS WILL HAVE TO BE CHANGED AFTER THE */
*     /* INITIAL ASSEMBLY REVEALS THE PROPER DISPLACEMENTS.          */
*     /*                                                             */
*     /***************************************************************/
*                                                               02S0097
*     WTON(1)=ADDR(WTOL)+'59'X;     /* INDEX TO FIRST VARIABLE DATA  */
         LA    @03,WTOL                                         02S0097
         LA    @15,89                                           02S0097
         ALR   @15,@03                                          02S0097
         ST    @15,WTON                                         02S0097
*     WTON(2)=ADDR(WTOL)+'07'X;     /* INDEX TO SECND VARIABLE DATA  */
         AL    @03,@CF00809                                     02S0098
         ST    @03,WTON+4                                       02S0098
*     I=1;                          /* INDEX TO FIRST VARIABLE DATA  */
         LR    I,@10                                            02S0099
*     GEN REFS(WTOL1,WTOL1L) SETS(WTOL);                        02S0100
*                                   /* SET UP INITIAL WTO
         MVC   WTOL(L'WTOL1L),WTOL1 INIT WTO DYNAMIC AREA
*     CSSID=APCTSSID;               /* SUBSYS ID TO MSG HEADER       */
         MVC   CSSID(4),APCTSSID(APCTPTR)                       02S0101
*     CJOBNAME=JOBNAME;             /* JOBNAME TO MSG HEADER         */
         L     @10,SSOBPTR(,ALLCWAPT)                           02S0102
         L     @10,SSOBINDV(,@10)                               02S0102
         L     @10,SSAGJBNM(,@10)                               02S0102
         MVC   CJOBNAME(8),JOBNAME(@10)                         02S0102
*     DO;                           /* INCLUDE ENTIRE SEGMENT        */
*       LSP=0;                      /* PTR TO APDS REPRESENTING LAR-
*                                      UNSATISFIED SHARED REQUEST.   */
         SLR   LSP,LSP                                          03S0104
*       LSR=0;                      /* REGION SIZE ASSOCIATED WITH
*                                      LARGEST UNSATISFIED SHARED
*                                      REQUEST.                      */
         SLR   LSR,LSR                                          03S0105
*       NPN=0;                      /* INIT NUMBER OF PORTS NEEDED   */
         SLR   NPN,NPN                                          03S0106
*       SSDDRPTR=FIRSTARB;          /* START WITH THE FIRST REQUEST  */
         L     SSDDRPTR,FIRSTARB(,ALLCWAPT)                     03S0107
*       DO WHILE SSDDRPTR^=0;       /* DO ONCE FOR EACH REQUEST      */
         B     @DE00108                                         03S0108
@DL00108 DS    0H                                               03S0109
*         APDSPTR=SSAGSSCM;         /* POINTER TO APDS               */
         L     APDSPTR,SSAGSSCM(,SSDDRPTR)                      03S0109
*         IF APDSARS=BOFF THEN      /* IF REQUEST IS NOT SATISFIED   */
         TM    APDSARS(APDSPTR),B'00001000'                     03S0110
         BNZ   @RF00110                                         03S0110
*           IF APDSOWN=SHR THEN     /* IF REQUEST IS FOR SHRD PORT   */
         TM    APDSOWN(APDSPTR),B'10000000'                     03S0111
         BNZ   @RF00111                                         03S0111
*             IF APDSREG>LSR THEN   /* IF LARGEST SUCH REQUEST SO FAR*/
         L     @15,APDSREG(,APDSPTR)                            03S0112
         CR    @15,LSR                                          03S0112
         BNH   @RF00112                                         03S0112
*               DO;                 /* SAVE THE INFO                 */
*                 LSP=APDSPTR;      /* ADDRESS OF APDS               */
         LR    LSP,APDSPTR                                      03S0114
*                 LSR=APDSREG;      /* REGION SIZE                   */
         LR    LSR,@15                                          03S0115
*               END;                /* ENDDO                         */
*             ELSE                                              03S0117
*               ;                   /* ANOTHER SHARED REQUEST        */
@RF00112 DS    0H                                               03S0118
*           ELSE                    /* REQUEST IS FOR EXCLUSIVE PORT */
*             NPN=NPN+1;            /* NEED ONE PORT FOR EACH UNSA-
*                                      TISFIED EXCLUSIVE REQUEST     */
         B     @RC00111                                         03S0118
@RF00111 AL    NPN,@CF00041                                     03S0118
*         SSDDRPTR=SSAGNRBP;        /* ADVANCE TO NEXT OR DONE       */
@RC00111 DS    0H                                               03S0119
@RF00110 L     SSDDRPTR,SSAGNRBP(,SSDDRPTR)                     03S0119
*       END;                        /* ENDDO WHILE MORE REQUESTS     */
@DE00108 SLR   @15,@15                                          03S0120
         CR    SSDDRPTR,@15                                     03S0120
         BNE   @DL00108                                         03S0120
*       IF LSP^=0 THEN              /* IF ONE OR MORE SHARED REQUESTS*/
         CR    LSP,@15                                          03S0121
         BE    @RF00121                                         03S0121
*         NPN=NPN+1;                /* UNSATISFIED, ADD ONE FOR LRGST*/
         AL    NPN,@CF00041                                     03S0122
*       CVD(NPN,WORK(2:3));         /* FROM BINARY TO DECIMAL PACKED */
@RF00121 CVD   NPN,@TS00001                                     03S0123
         MVC   WORK+1(2),@TS00001+6                             03S0123
*       UNPK(WORK(1:3),WORK(2:3));  /* DECIMAL PACKED TO UNPACKED    */
         UNPK  WORK(3),WORK+1(2)                                03S0124
*       WORK(3)=WORK(3)×'F0'X;      /* COMPLETED ZONES               */
         OI    WORK+2,X'F0'                                     03S0125
*       CNPN=WORK(1:3);             /* MOVE TO MESSAGE               */
         MVC   CNPN(3),WORK                                     03S0126
*     END;                          /* END OF SEGMENT                */
*                                                               02S0128
*     /***************************************************************/
*     /*                                                             */
*     /* MSG HEADER IS COMPLETE. EXAMINE REQUESTS TO DETERMINE WHICH */
*     /* SHOULD BE INCLUDED.                                         */
*     /*                                                             */
*     /***************************************************************/
*                                                               02S0128
*     APDSPTR=LSP;                  /* POINTER TO LARGEST UNSATISFIED
*                                      SHARED APDS OR 0              */
         LR    APDSPTR,LSP                                      02S0128
*     IF LSP^=0 THEN                /* IF THERE IS AT LEAST ONE SHR'D*/
         LTR   LSP,LSP                                          02S0129
         BZ    @RF00129                                         02S0129
*       CALL TRANS;                 /* REQUEST UNSATISFIED INCLUDE IT*/
         BAL   @14,TRANS                                        02S0130
*     SSDDRPTR=FIRSTARB;            /* START WITH FIRST REQUEST      */
@RF00129 L     SSDDRPTR,FIRSTARB(,ALLCWAPT)                     02S0131
*     DO WHILE SSDDRPTR^=0;         /* DO ONCE FOR EACH REQUEST      */
         B     @DE00132                                         02S0132
@DL00132 DS    0H                                               02S0133
*       APDSPTR=SSAGSSCM;           /* POINT TO APDS IN QUESTION     */
         L     APDSPTR,SSAGSSCM(,SSDDRPTR)                      02S0133
*       IF APDSOWN=EXC&APDSARS=BOFF THEN/* IF EXCLUSIVE REQUEST &    */
         TM    APDSOWN(APDSPTR),B'10000000'                     02S0134
         BNO   @RF00134                                         02S0134
         TM    APDSARS(APDSPTR),B'00001000'                     02S0134
         BNZ   @RF00134                                         02S0134
*         CALL TRANS;               /* UNSATISFIED, INCLUDE IT IN MSG*/
         BAL   @14,TRANS                                        02S0135
*       SSDDRPTR=SSAGNRBP;          /* ADVANCE TO NEXT REQUEST / DONE*/
@RF00134 L     SSDDRPTR,SSAGNRBP(,SSDDRPTR)                     02S0136
*     END;                          /* DO WHILE STILL REQUESTS       */
@DE00132 LTR   SSDDRPTR,SSDDRPTR                                02S0137
         BNZ   @DL00132                                         02S0137
*     APDSPTR=0;                    /* INDICATE FINAL CALL TO TRANS  */
         SLR   APDSPTR,APDSPTR                                  02S0138
*     CALL TRANS;                   /* COMPLETE THE MLWTO SEQUENCE   */
         BAL   @14,TRANS                                        02S0139
*   END;                            /* END OF SEGMENT                */
*   GEN REFS(WTORL1,WTORL1L) SETS(WTORL);                       01S0141
*                                   /*
         MVC   WTORL(L'WTORL1L),WTORL1 INITIALIZE WTOR DYNAMIC AREA
*   RMSSID=APCTSSID;                /* SUBSYS ID TO MESSAGE          */
         MVC   RMSSID(4),APCTSSID(APCTPTR)                      01S0142
*   RMJBNM=JOBNAME;                 /* JOBNAME TO MESSAGE            */
         L     @10,SSOBPTR(,ALLCWAPT)                           01S0143
         L     @10,SSOBINDV(,@10)                               01S0143
         L     @10,SSAGJBNM(,@10)                               01S0143
         MVC   RMJBNM(8),JOBNAME(@10)                           01S0143
*   DO UNTIL WTOREPLY(1)='W'×       /* DO UNTIL REPLY IS ACCEPTABLE  */
*         WTOREPLY(1)='U'×          /* A REPLY OF U WILL RESULT IN A */
*         WTOREPLY(1)='C';          /* WAIT RATHER THAN A CANCEL     */
@DL00144 DS    0H                                               01S0145
*     DO;                           /* INSURE ENTIRE SEGMENT INCLUDED*/
*       WTORECB=''X;                /* CLEAR WTOR ECB                */
         SLR   @10,@10                                          02S0146
         ST    @10,WTORECB                                      02S0146
*       WTOREPLY='';                /* CLEAR REPLY AREA              */
         MVI   WTOREPLY,C' '                                    02S0147
         MVC   WTOREPLY+1(5),WTOREPLY                           02S0147
*       GEN REFS(WTORECB,WTOREPLY,WTORL);                       02S0148
*                                   /*
         WTOR  ,WTOREPLY,6,WTORECB,MF=(E,WTORL) ASK HIM
*       DO;                         /* IGTYWAIT ECB(WTORECB)LONG(YES)*/
*         RFY                                                   02S0150
*          (GPR00F,                                             02S0150
*           GPR01P) RSTD;           /* REGISTERS USED                */
*         DCL                                                   02S0151
*           BIT0029X BIT(8) BASED(ADDR(WTORECB));/* OVERLAY BYTE-0 OF
*                                      ECB                           */
*         IF BIT0029X(2)='0'B THEN  /* IF ECB NOT ALREADY POSTED     */
         LA    @10,WTORECB                                      02S0152
         TM    BIT0029X(@10),B'01000000'                        02S0152
         BNZ   @RF00152                                         02S0152
*           DO;                     /* THEN ISSUE WAIT SVC           */
*             GPR01P=ADDR(WTORECB); /* POINT TO ECB                  */
         LR    GPR01P,@10                                       02S0154
*             GPR00F=1×'80000000'X; /* WAIT COUNT                    */
         L     GPR00F,@CF00919                                  02S0155
*             SVC(1);               /* WAIT FOR ECB POSTING          */
         SVC   1                                                02S0156
*           END;                    /* ECB WAIT COMPLETE             */
*         RFY                                                   02S0158
*          (GPR00F,                                             02S0158
*           GPR01P) UNRSTD;         /* FINISHED WITH REGISTERS       */
@RF00152 DS    0H                                               02S0159
*       END;                        /* ECB WAIT COMPLETE WAIT FOR
*                                      REPLY                         */
*     END;                          /* END OF SEGMENT                */
*   END;                            /* DO UNTIL REPLY ACCEPTABLE     */
@DE00144 CLI   WTOREPLY,C'W'                                    01S0161
         BE    @DC00144                                         01S0161
         CLI   WTOREPLY,C'U'                                    01S0161
         BE    @DC00144                                         01S0161
         CLI   WTOREPLY,C'C'                                    01S0161
         BNE   @DL00144                                         01S0161
@DC00144 DS    0H                                               01S0162
*   IF WTOREPLY(1)='W'×             /* IF REPLY IS EXPLICITY OR      */
*       WTOREPLY(1)='U' THEN        /* IMPLICITLY WAIT THEN          */
         CLI   WTOREPLY,C'W'                                    01S0162
         BE    @RT00162                                         01S0162
         CLI   WTOREPLY,C'U'                                    01S0162
         BNE   @RF00162                                         01S0162
@RT00162 DS    0H                                               01S0163
*     DO;                           /* CONTINUE                      */
*       ALLWAIT=BON;                /* INDICATE ALLOCATION TO WAIT   */
         OI    ALLWAIT(ALLCWAPT),B'01000000'                    01S0164
*       GEN REFS(WTORL2,WTORL2L) SETS(WTORL);                   01S0165
*                                   /*
         MVC   WTORL(L'WTORL2L),WTORL2 INITIALIZE WTOR DYNAMIC AREA
*       RMSSID=APCTSSID;            /* SUBSYSTEM ID TO MESSAGE       */
         MVC   RMSSID(4),APCTSSID(APCTPTR)                      01S0166
*       RMJBNM=JOBNAME;             /* JOBNAME TO MESSAGE            */
         L     @10,SSOBPTR(,ALLCWAPT)                           01S0167
         L     @10,SSOBINDV(,@10)                               01S0167
         L     @10,SSAGJBNM(,@10)                               01S0167
         MVC   RMJBNM(8),JOBNAME(@10)                           01S0167
*       DO UNTIL WTOREPLY(1)='H'×   /* DO UNTIL REPLY IS ACCEPTABLE  */
*             WTOREPLY(1)='N'×      /* EITHER "HOLD", OR "NOHOLD" OR */
*             WTOREPLY(1)='U';      /* IMPLICIT "NOHOLD"             */
@DL00168 DS    0H                                               01S0169
*         DO;                       /* INSURE ENTIRE SEGMENT INCLUDED*/
*           WTORECB=''X;            /* CLEAR WTOR ECB                */
         SLR   @10,@10                                          02S0170
         ST    @10,WTORECB                                      02S0170
*           WTOREPLY='';            /* CLEAR REPLY AREA              */
         MVI   WTOREPLY,C' '                                    02S0171
         MVC   WTOREPLY+1(5),WTOREPLY                           02S0171
*           GEN REFS(WTORECB,WTOREPLY,WTORL);                   02S0172
*                                   /*
         WTOR  ,WTOREPLY,6,WTORECB,MF=(E,WTORL) ASK HIM
*           DO;                     /* IGTYWAIT ECB(WTORECB)LONG(YES)*/
*             RFY                                               02S0174
*              (GPR00F,                                         02S0174
*               GPR01P) RSTD;       /* REGISTERS USED                */
*             DCL                                               02S0175
*               BIT0031X BIT(8) BASED(ADDR(WTORECB));/* OVERLAY 02S0175
*                                      BYTE-0 OF ECB                 */
*             IF BIT0031X(2)='0'B THEN/* IF ECB NOT ALREADY POSTED   */
         LA    @10,WTORECB                                      02S0176
         TM    BIT0031X(@10),B'01000000'                        02S0176
         BNZ   @RF00176                                         02S0176
*               DO;                 /* THEN ISSUE WAIT SVC           */
*                 GPR01P=ADDR(WTORECB);/* POINT TO ECB               */
         LR    GPR01P,@10                                       02S0178
*                 GPR00F=1×'80000000'X;/* WAIT COUNT                 */
         L     GPR00F,@CF00919                                  02S0179
*                 SVC(1);           /* WAIT FOR ECB POSTING          */
         SVC   1                                                02S0180
*               END;                /* ECB WAIT COMPLETE             */
*             RFY                                               02S0182
*              (GPR00F,                                         02S0182
*               GPR01P) UNRSTD;     /* FINISHED WITH REGISTERS       */
@RF00176 DS    0H                                               02S0183
*           END;                    /* ECB WAIT COMPLETE WAIT FOR
*                                      REPLY                         */
*         END;                      /* END OF SEGMENT                */
*       END;                        /* DO UNTIL REPLY IS ACCEPTABLE  */
@DE00168 CLI   WTOREPLY,C'H'                                    01S0185
         BE    @DC00168                                         01S0185
         CLI   WTOREPLY,C'N'                                    01S0185
         BE    @DC00168                                         01S0185
         CLI   WTOREPLY,C'U'                                    01S0185
         BNE   @DL00168                                         01S0185
@DC00168 DS    0H                                               01S0186
*       IF WTOREPLY(1)='N'×         /* IF REPLY IS EXPLICITLY OR     */
*           WTOREPLY(1)='U' THEN    /* IMPLICITLY "NOHOLD" THEN      */
         CLI   WTOREPLY,C'N'                                    01S0186
         BE    @RT00186                                         01S0186
         CLI   WTOREPLY,C'U'                                    01S0186
         BE    @RT00186                                         01S0186
*         ;                         /* DEFAULT IS NOHOLD             */
*       ELSE                        /* REPLY IS HOLD                 */
*         ALLHOLD=BON;              /* INDICATE WAIT HOLD SELECTED   */
         OI    ALLHOLD(ALLCWAPT),B'01000000'                    01S0188
*     END;                          /* DO IF REPLY = WAIT            */
*   ELSE                            /* OTHERWISE,                    */
*     DO;                           /* REPLY IS CANCEL               */
         B     @RC00162                                         01S0190
@RF00162 DS    0H                                               01S0191
*       ALLFAIL=BON;                /* JOB FAILS ALLOCATION          */
*                                                               01S0191
         OI    ALLFAIL(ALLCWAPT),B'10000000'                    01S0191
*       /*************************************************************/
*       /*                                                           */
*       /* IGTYJHE ERR(498)                                          */
*       /*                                                           */
*       /*************************************************************/
*                                                               01S0192
*       RFY                                                     01S0192
*         R1F RSTD;                                             01S0192
*       R1F=18;                     /* PROVIDE INDEX                 */
         LA    R1F,18                                           01S0193
*       CALL APCVZJHE;              /* SPECIFY ERROR INFORMATION
*                                      PRIOR TO RETURN               */
         L     @15,APCTZJHE(,APCTPTR)                           01S0194
         BALR  @14,@15                                          01S0194
*       RFY                                                     01S0195
*         R1F UNRSTD;               /* DONE WITH REG PROVIDE ERROR
*                                      INFORMATION                   */
*     END;                          /* END OF SEG                    */
*   ENQECB=0;                       /* CLEAR ENQ ECB                 */
@RC00162 SLR   @10,@10                                          02S0197
         ST    @10,ENQECB                                       02S0197
*   RFY                                                         02S0198
*     R15P RSTD;                    /* NEED REG 15 FOR ENQ RETCODE   */
*   GEN REFS(APCTENQM,APUBENQR,ENQECB,ENQLISTE,NQLISTEL) SETS(DYNQLIST)
*       ;                                                       02S0199
*                                   /*
         MVC   DYNQLIST(L'NQLISTEL),ENQLISTE INIT ENQ DYN LIST AREA
         ENQ   (APCTENQM-APCT(,APCTPTR),APUBENQR,E,4,SYSTEM),          *
               ECB=ENQECB,MF=(E,DYNQLIST)
*   ALLAPUB=BON;                    /* INDICATE ENQ RES (TO BE) OWNED*/
         OI    ALLAPUB(ALLCWAPT),B'00100000'                    02S0200
*   IF R15P^=0&ENQRC^=8 THEN        /* IF TASK DOES NOT HAVE SHR'D   */
         LTR   R15P,R15P                                        02S0201
         BZ    @RF00201                                         02S0201
         CLI   ENQRC(R15P),8                                    02S0201
         BE    @RF00201                                         02S0201
*     DO;                           /* CONTROL OR RESOURCE THEN WAIT */
*       RFY                                                     02S0203
*         R15P UNRSTD;              /* NO LONGER NEED IT             */
*       DO;                         /* IGTYWAIT                 02S0204
*                                      (1)ECBLIST(ECBLIST)LONG(NO)   */
*         RFY                                                   02S0205
*          (GPR00F,                                             02S0205
*           GPR01P) RSTD;           /* REGISTERS USED                */
*         GPR01P=-ADDR(ECBLIST);    /* POINT TO ECB LIST             */
         LA    GPR01P,ECBLIST                                   02S0206
         LCR   GPR01P,GPR01P                                    02S0206
*         GPR00F=1;                 /* WAIT COUNT                    */
         LA    GPR00F,1                                         02S0207
*         SVC(1);                   /* WAIT FOR ECB POSTING          */
         SVC   1                                                02S0208
*         RFY                                                   02S0209
*          (GPR00F,                                             02S0209
*           GPR01P) UNRSTD;         /* FINISHED WITH REGISTERS       */
*       END;                        /* ECB WAIT COMPLETE NOT SO LONG
*                                      WAIT WAIT FOR ONE TO COMPLETE */
*       IF CNCLECBP->ECBPOSTB=BON THEN/* IF POSTED,                  */
         L     @10,CNCLECBP                                     02S0211
         TM    ECBPOSTB(@10),B'01000000'                        02S0211
         BNO   @RF00211                                         02S0211
*         DO;                       /* CANCELED. SO INDICATE.        */
*           ALLFAIL=BON;            /* ALLOCATION & JOB FAIL         */
*                                                               02S0213
         OI    ALLFAIL(ALLCWAPT),B'10000000'                    02S0213
*           /*********************************************************/
*           /*                                                       */
*           /* IGTYJHE ERR(490)                                      */
*           /*                                                       */
*           /*********************************************************/
*                                                               02S0214
*           RFY                                                 02S0214
*             R1F RSTD;                                         02S0214
*           R1F=9;                  /* PROVIDE INDEX                 */
         LA    R1F,9                                            02S0215
*           CALL APCVZJHE;          /* SPECIFY ERROR INFORMATION
*                                      PRIOR TO RETURN               */
         L     @15,APCTZJHE(,APCTPTR)                           02S0216
         BALR  @14,@15                                          02S0216
*           RFY                                                 02S0217
*             R1F UNRSTD;           /* DONE WITH REG PROVIDE ERR INFO*/
*         END;                                                  02S0218
*     END;                                                      02S0219
*   RETURN;                         /* RETURN TO CALLER              */
@EL00001 L     @13,4(,@13)                                      01S0220
@EF00001 L     @00,@SIZDATD                                     01S0220
         LR    @01,@06                                          01S0220
         IGTYFSV  R,LV=(0),A=(1)
@ER00001 LM    @14,@12,12(@13)                                  01S0220
         BR    @14                                              01S0220
*TRANS:                                                         01S0221
*   PROC;                                                       01S0221
TRANS    STM   @14,@01,@SA00002                                 01S0221
         STM   @03,@04,@SA00002+16                              01S0221
         STM   @06,@12,@SA00002+24                              01S0221
*   IF APDSPTR=0 THEN               /* INDICATES LAST CALL - WRITE
*                                      ANY REMAINING INFO            */
         LTR   APDSPTR,APDSPTR                                  01S0222
         BNZ   @RF00222                                         01S0222
*     IF J=1 THEN                   /* IF INITIAL SEMENT IS UNWRITTEN*/
         C     J,@CF00041                                       01S0223
         BNE   @RF00223                                         01S0223
*       I=3;                        /* FORCE IT TO BE WRITTEN        */
         LA    I,3                                              01S0224
*     ELSE                          /* INITIAL SEGMENT WRITTEN       */
*       IF I^=1 THEN                /* IF DATA REMAINS FOR INTERMED- */
         B     @RC00223                                         01S0225
@RF00223 C     I,@CF00041                                       01S0225
         BE    @RF00225                                         01S0225
*         I=3;                      /* SEGMENT, THEN WRITE IT.       */
         LA    I,3                                              01S0226
*       ELSE                                                    01S0227
*         ;                         /* NULL CLAUSE                   */
@RF00225 DS    0H                                               01S0228
*   ELSE                            /* NORMAL CALL W/ CATA FOR MSG   */
*     DO;                           /* TRANSLATE INFO FROM APDS TO MS*/
         B     @RC00222                                         01S0228
@RF00222 DS    0H                                               01S0229
*       CDDNAME(I,1:8)=APDSDDNM;    /* DDNAME TO ARRAY               */
         LR    @10,I                                            01S0229
         MH    @10,@CH00134                                     01S0229
         LR    @03,J                                            01S0229
         SLA   @03,2                                            01S0229
         L     @03,WTON-4(@03)                                  01S0229
         ST    @10,@TF00001                                     01S0229
         ALR   @10,@03                                          01S0229
         AL    @10,@CF00925                                     01S0229
         MVC   CDDNAME(8,@10),APDSDDNM(APDSPTR)                 01S0229
*       CDDNAME(I,9)='/';           /* SEPARATOR TO MESSAGE AREA     */
         LR    @10,@03                                          01S0230
         AL    @10,@TF00001                                     01S0230
         AL    @10,@CF00926                                     01S0230
         MVI   CDDNAME(@10),C'/'                                01S0230
*       IF APDSOWN=EXC THEN         /* IF EXCLUSIVE REQUEST THEN     */
         TM    APDSOWN(APDSPTR),B'10000000'                     01S0231
         BNO   @RF00231                                         01S0231
*         COWN(I)='EXC/';           /* INDICATE EXC                  */
         AL    @03,@TF00001                                     01S0232
         AL    @03,@CF00927                                     01S0232
         MVC   COWN-9(4,@03),@CC00833                           01S0232
*       ELSE                        /* OTHERWISE IT'S SHARED         */
*         COWN(I)='SHR/';           /* INDICATE SHR                  */
         B     @RC00231                                         01S0233
@RF00231 LR    @10,I                                            01S0233
         MH    @10,@CH00134                                     01S0233
         LR    @03,J                                            01S0233
         SLA   @03,2                                            01S0233
         L     @03,WTON-4(@03)                                  01S0233
         ALR   @03,@10                                          01S0233
         AL    @03,@CF00927                                     01S0233
         MVC   COWN-9(4,@03),@CC00834                           01S0233
*       CVD(APDSREG,WORK(1:3));     /* REGION PARM FROM BIN TO PKDEC */
@RC00231 L     @10,APDSREG(,APDSPTR)                            01S0234
         CVD   @10,@TS00001                                     01S0234
         MVC   WORK(3),@TS00001+5                               01S0234
*       UNPK(WORK(1:4),WORK(1:3));  /* PACKED DECIMAL TO UNPACKED    */
         UNPK  WORK(4),WORK(3)                                  01S0235
*       WORK(4:5)=WORK(4:5)×'0K';   /* LAST ZONE & "K" TO REGION     */
         OC    WORK+3(2),@CC00835                               01S0236
*       CREG(I)=WORK;               /* NNNNK TO ARRAY                */
         LR    @10,I                                            01S0237
         MH    @10,@CH00134                                     01S0237
         LR    @03,J                                            01S0237
         SLA   @03,2                                            01S0237
         L     @03,WTON-4(@03)                                  01S0237
         ALR   @03,@10                                          01S0237
         AL    @03,@CF00928                                     01S0237
         MVC   CREG-13(5,@03),WORK                              01S0237
*     END;                          /* OF TRANSLATE SEGMENT          */
*   IF I//3=0 THEN                  /* IF SUFFICIENT DATA TO WRITE   */
@RC00222 LR    @00,I                                            01S0239
         SRDA  @00,32                                           01S0239
         D     @00,@CF00069                                     01S0239
         LTR   @00,@00                                          01S0239
         BNZ   @RF00239                                         01S0239
*     DO;                           /* MSG THEN DO SO.               */
*       IF J=1 THEN                 /* IF THIS IS INITIAL MSG THEN   */
         C     J,@CF00041                                       01S0241
         BNE   @RF00241                                         01S0241
*         DO;                       /* WRITE IT                      */
*           ALLMLWTO=BON;           /* INDICATE FOR ERROR RECOVERY
*                                      THAT AN MLWTO HAS BEEN STARTED*/
         OI    ALLMLWTO(ALLCWAPT),B'00000100'                   01S0243
*           RFY                                                 01S0244
*            (R0F,                                              01S0244
*             R1F) RSTD;            /* NEED BOTH REGS FOR INITIAL WTO*/
*           R0F=0;                  /* INDICATE "NEW" MLWTO          */
         SLR   R0F,R0F                                          01S0245
*           GEN REFS(WTOL);                                     01S0246
*                                   /*
         WTO   MF=(E,WTOL)         WRITE INITIAL SEGMENT OF MSG
*           SLL(R1F,8);             /* MSG ID TO HI-ORDER 3 BYTES    */
         SLL   R1F,8                                            01S0247
*           ALLMSGID=R1F;           /* SAVE FOR SUBSEQUENT WTOS & IN
*                                      WORKAREA FOR ERROR RECOVERY   */
         ST    R1F,ALLMSGID(,ALLCWAPT)                          01S0248
*           RFY                                                 01S0249
*            (R0F,                                              01S0249
*             R1F) UNRSTD;          /* DON'T NEED THEM NOW           */
*           J=2;                    /* NEXT WILL BE INTERMEDIATE TYPE*/
         LA    J,2                                              01S0250
*         END;                      /* WTO - DATA ONLY.              */
*       ELSE                        /* INTERMEDIATE TYPE WTO -       */
*         DO;                       /* CONTAINS REQUEST RELATED DATA */
         B     @RC00241                                         01S0252
@RF00241 DS    0H                                               01S0253
*           RFY                                                 01S0253
*             R0F RSTD;             /* NEED REG FOR MSG ID           */
*           R0F=ALLMSGID;           /* PROVIDE IT WTO                */
         L     R0F,ALLMSGID(,ALLCWAPT)                          01S0254
*           GEN REFS(WTOL);                                     01S0255
*                                   /*
         WTO   MF=(E,WTOL)         WRITE INTERMEDIATE TYPE MESSAGE   */
*           RFY                                                 01S0256
*             R0F UNRSTD;           /* NO LONGER NEED IT             */
*         END;                      /* OF INTERMEDIATE WTO SEGMENT   */
*       I=1;                        /* RESET ARRAY INDEX             */
@RC00241 LA    I,1                                              01S0258
*       GEN REFS(WTOL2,WTOL2L) SETS(WTOL);                      01S0259
*                                   /*
         MVC   WTOL(L'WTOL2L),WTOL2 INIT WTO DYNAMIC AREA
*     END;                          /* DO IF I // 3 = 0              */
*   ELSE                            /* "BUFFER" NOT FULL             */
*     I=I+1;                        /* ADVANCE INDEX                 */
         B     @RC00239                                         01S0261
@RF00239 AL    I,@CF00041                                       01S0261
*   IF APDSPTR=0 THEN               /* IF FINAL CALL THEN            */
@RC00239 LTR   APDSPTR,APDSPTR                                  01S0262
         BNZ   @RF00262                                         01S0262
*     DO;                           /* DO FINAL WTO TYPE "E"         */
*       RFY                                                     01S0264
*         R0F RSTD;                 /* NEED REG FOR MSG ID           */
*       R0F=ALLMSGID;               /* PROVIDE IT TO WTO             */
         L     R0F,ALLMSGID(,ALLCWAPT)                          01S0265
*       GEN REFS(WTOL3,WTOL3L) SETS(WTOL);                      01S0266
*                                   /*
         MVC   WTOL(L'WTOL3L),WTOL3 INITIALIZE WTO DYNAMIC AREA
         WTO   MF=(E,WTOL)         WRITE FINAL SEGMENT
*       ALLMLWTO=BOFF;              /* INDICATE MLWTO NO LONGER IN
*                                      PROCESS OF BEING COMPLETED    */
         NI    ALLMLWTO(ALLCWAPT),B'11111011'                   01S0267
*       RFY                                                     01S0268
*         R0F UNRSTD;               /* NO LONGER NEED IT             */
*     END;                          /* OF FINAL WRITE SEGMENT        */
*   END TRANS;                      /* INTERNAL SUBROUTINE IGTXEPLG  */
@EL00002 DS    0H                                               01S0270
@EF00002 DS    0H                                               01S0270
@ER00002 LM    @14,@01,@SA00002                                 01S0270
         LM    @03,@04,@SA00002+16                              01S0270
         LM    @06,@12,@SA00002+24                              01S0270
         BR    @14                                              01S0270
*                                                               01S0271
*   /*****************************************************************/
*   /*                                                               */
*   /* SYSTEM DECLARES                                               */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S0271
*   DECLARE                         /* GENERAL PURPOSE REGISTERS     */
*     GPR00F FIXED(31) REG(0),                                  01S0271
*     GPR01P PTR(31) REG(1);                                    01S0271
*   DECLARE                         /* COMMON VARIABLES              */
*     I256C CHAR(256) BASED,                                    01S0272
*     I031F FIXED(31) BASED,                                    01S0272
*     I031P PTR(31) BASED,                                      01S0272
*     I015F FIXED(15) BASED,                                    01S0272
*     I015P PTR(15) BASED,                                      01S0272
*     I008P PTR(8) BASED,                                       01S0272
*     I001C CHAR(1) BASED;                                      01S0272
*                                                               01S0273
*/*   MODULE PATCH AREA                                              */
*                                                               01S0273
*   DCL                                                         01S0273
*     APPATCH CHAR(*) INT STATIC LOCAL GEND;                    01S0273
*   GENERATE DATA DEFS(APPATCH);                                01S0274
*                                                               01S0275
*   /*****************************************************************/
*   /*                                                               */
*   /* GENERAL REGISTER DECLARES                                     */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S0275
*   DCL                                                         01S0275
*     R0F FIXED(31) REG(0),                                     01S0275
*     R0P PTR(24) REG(0),                                       01S0275
*     R0RSTD PTR(31) REG(0),                                    01S0275
*     R1F FIXED(31) REG(1),                                     01S0275
*     R1P PTR(24) REG(1),                                       01S0275
*     R1RSTD PTR(31) REG(1),                                    01S0275
*     R2F FIXED(31) REG(2),                                     01S0275
*     R2P PTR(24) REG(2),                                       01S0275
*     R2RSTD PTR(31) REG(2),                                    01S0275
*     R3F FIXED(31) REG(3),                                     01S0275
*     R3P PTR(24) REG(3),                                       01S0275
*     R3RSTD PTR(31) REG(3),                                    01S0275
*     R4F FIXED(31) REG(4),                                     01S0275
*     R4P PTR(24) REG(4),                                       01S0275
*     R4RSTD PTR(31) REG(4),                                    01S0275
*     R5F FIXED(31) REG(5),                                     01S0275
*     R5P PTR(24) REG(5),                                       01S0275
*     R5RSTD PTR(31) REG(5),                                    01S0275
*     R6F FIXED(31) REG(6),                                     01S0275
*     R6P PTR(24) REG(6),                                       01S0275
*     R6RSTD PTR(31) REG(6),                                    01S0275
*     R7F FIXED(31) REG(7),                                     01S0275
*     R7P PTR(24) REG(7),                                       01S0275
*     R7RSTD PTR(31) REG(7),                                    01S0275
*     R8F FIXED(31) REG(8),                                     01S0275
*     R8P PTR(24) REG(8),                                       01S0275
*     R8RSTD PTR(31) REG(8),                                    01S0275
*     R9F FIXED(31) REG(9),                                     01S0275
*     R9P PTR(24) REG(9),                                       01S0275
*     R9RSTD PTR(31) REG(9),                                    01S0275
*     R10F FIXED(31) REG(10),                                   01S0275
*     R10P PTR(24) REG(10),                                     01S0275
*     R10RSTD PTR(31) REG(10),                                  01S0275
*     R11F FIXED(31) REG(11),                                   01S0275
*     R11P PTR(24) REG(11),                                     01S0275
*     R11RSTD PTR(31) REG(11),                                  01S0275
*     R12F FIXED(31) REG(12),                                   01S0275
*     R12P PTR(24) REG(12),                                     01S0275
*     R12RSTD PTR(31) REG(12),                                  01S0275
*     R13F FIXED(31) REG(13),                                   01S0275
*     R13P PTR(24) REG(13),                                     01S0275
*     R13RSTD PTR(31) REG(13),                                  01S0275
*     R14F FIXED(31) REG(14),                                   01S0275
*     R14P PTR(24) REG(14),                                     01S0275
*     R14RSTD PTR(31) REG(14),                                  01S0275
*     R15F FIXED(31) REG(15),                                   01S0275
*     R15P PTR(24) REG(15),                                     01S0275
*     R15RSTD PTR(31) REG(15),                                  01S0275
*                                                               01S0275
*     /***************************************************************/
*     /*                                                             */
*     /* VPSS CONTROL BLOCK POINTER DECLARES                         */
*     /*                                                             */
*     /***************************************************************/
*                                                               01S0275
*     APSMPTR PTR(24) REG(01),      /* STORAGE MANAGEMENT BLOCK 01S0275
*                                      (SUGGESTED POINTER)           */
*     APSCPTR PTR(24) REG(01),      /* STORAGE MANAGEMENT CONTROL
*                                      WORD (SUGGESTED POINTER)      */
*     APINPTR PTR(24) REG(01),      /* USER'S INPUT PARAMETER LIST
*                                      (SUGGESTED POINTER)           */
*/*                                                                  */
*                                                               01S0275
*     APDATA PTR(24) REG(06),       /* ADDRESS OF DYNAMIC DATA  01S0275
*                                      WORKAREA (DATAREG)            */
*     APCODE PTR(24) REG(07),       /* PROGRAM CODE BASE REGISTER
*                                      (CODEREG)                     */
*     APDEBPTR PTR(24) REG(08),     /* VPSS DEB (SUGGESTED POINTER)  */
*     APNPPTR PTR(24) REG(08),      /* SUBSYSTEM INITIALIZATION 01S0275
*                                      WORKAREA BLOCK (ONLY USED BY
*                                      SUBSYSTEM INITIALIZATION)     */
*     APRLPTR PTR(24) REG(08),      /* VPSS ACB REQUEST LIST    01S0275
*                                      (SUGGESTED POINTER)           */
*     APCIPTR PTR(24) REG(08),      /* 3838 CONTROL TABLE (SUGGESTED
*                                      POINTER)                      */
*     APCWPTR PTR(24) REG(08),      /* CALL INTERFACE WORKAREA  01S0275
*                                      (SUGGESTED POINTER)           */
*     APERPTR PTR(24) REG(08),      /* ERP/IO APPENDAGE WORKAREA
*                                      (SUGGESTED POINTER)           */
*     APACBPTR PTR(24) REG(09),     /* VPSS ACB (SUGGESTED POINTER)  */
*     APCQPTR PTR(24) REG(09),      /* COMMAND QUEUE ELEMENT    01S0275
*                                      (SUGGESTED POINTER)           */
*     APOTPTR PTR(24) REG(09),      /* OPTION TABLE (SUGGESTED  01S0275
*                                      POINTER)                      */
*     APIOPTR PTR(24) REG(10),      /* I/O ELEMENT (SUGGESTED   01S0275
*                                      POINTER)                      */
*     APEXLPTR PTR(24) REG(10),     /* VPSS EXLST (SUGGESTED POINTER)*/
*     APUBPTR PTR(24) REG(10),      /* UNIT BLOCK (SUGGESTED POINTER)*/
*     APAXPTR PTR(24) REG(10),      /* VPSS ACB EXTENSION (SUGGESTED
*                                      POINTER)                      */
*     APCPPTR PTR(24) REG(10),      /* VPSS CALL PROCESSING     01S0275
*                                      INDICATORS (SUGGESTED POINTER)*/
*     APOCPTR PTR(24) REG(10),      /* VPSS OPEN/CLOSE SUBSYSTEM
*                                      WORKAREA (REQUIRED POINTER)   */
*     APATPTR PTR(24) REG(11),      /* VPSS ACB TABLE (SUGGESTED
*                                      POINTER)                      */
*     APLBPTR PTR(24) REG(11),      /* LABEL RESOLUTION TABLE   01S0275
*                                      (SUGGESTED POINTER)           */
*     APUTPTR PTR(24) REG(11),      /* USER TABLE (SUGGESTED POINTER)*/
*     APDSPTR PTR(24) REG(11),      /* VPSS DATASET ENTRY (SUGGESTED
*                                      POINTER)                      */
*     APXLPTR PTR(24) REG(11),      /* TRANSLATION TABLE (SUGGESTED
*                                      POINTER)                      */
*     APDXPTR PTR(24) REG(11),      /* VPSS DEB EXTENSION (SUGGESTED
*                                      POINTER)                      */
*     APCTPTR PTR(24) REG(12) RSTD, /* CONTROL TABLE (REQUIRED  01S0275
*                                      POINTER)                      */
*     APSVPTR PTR(24) REG(13) RSTD, /* OS/VPSS SAVEAREA/WORKAREA
*                                      (REQUIRED POINTER)            */
*     APRETURN PTR(24) REG(14),     /* RETURN ADDRESS FOR SUBROUTINE
*                                      LINKAGE                       */
*     APENTRY PTR(24) REG(15),      /* SUBROUTINE ENTRY POINT LINKAGE*/
*     APRCODE PTR(24) REG(15);      /* CONTAINS SUBROUTINE RETURN
*                                      CODE                          */
*                                                               01S0276
*   /*****************************************************************/
*   /*                                                               */
*   /* USER REGISTER DECLARES                                        */
*   /*                                                               */
*   /*****************************************************************/
*                                                               01S0276
*   DCL                                                         01S0276
*     ALLCWAPT PTR(24) REG(04) RSTD;/* POINTER TO SUBSYS ALLC WORK
*                                      AREA                          */
*   END IGTJHR                                                  01S0277
*                                                               01S0277
*/* THE FOLLOWING INCLUDE STATEMENTS WERE FOUND IN THIS PROGRAM.     */
*/*%INCLUDE SYSLIB  (IGTXAPAW)                                       */
*/*%INCLUDE SYSLIB  (IGTXSYSI)                                       */
*/*%INCLUDE SYSLIB  (IGTXSYSI)                                       */
*/*%INCLUDE SYSLIB  (IGTXSYSI)                                       */
*/*%INCLUDE SYSLIB  (IGTXSYSI)                                       */
*/*%INCLUDE SYSLIB  (IGTXSYSI)                                       */
*/*%INCLUDE SYSLIB  (IGTJHM  )                                       */
*/*%INCLUDE SYSLIB  (IGTXAPCT)                                       */
*/*%INCLUDE SYSLIB  (IGTXAPSV)                                       */
*/*%INCLUDE SYSLIB  (IGTXAPCV)                                       */
*/*%INCLUDE SYSLIB  (IGTXAPDS)                                       */
*/*%INCLUDE SYSLIB  (IEFJSSOB)                                       */
*/*%INCLUDE SYSLIB  (IEFSSARB)                                       */
*/*%INCLUDE SYSLIB  (IHAECB  )                                       */
*/*%INCLUDE SYSUT5  (BLDNQECB)                                       */
*/*%INCLUDE SYSUT5  (APUBDEQ )                                       */
*/*%INCLUDE SYSUT5  (WRTWTO  )                                       */
*/*%INCLUDE SYSUT5  (COUNTNPN)                                       */
*/*%INCLUDE SYSUT5  (DOWTOR  )                                       */
*/*%INCLUDE SYSUT5  (DOWTOR  )                                       */
*/*%INCLUDE SYSUT5  (APUBENQ )                                       */
*                                                               01S0277
*       ;                                                       01S0277
         B     @EL00001                                         01S0277
@DATA    DS    0H
@CH00134 DC    H'23'
@DATD    DSECT
         DS    0F
@SA00001 DS    20F
@SA00002 DS    13F
@TF00001 DS    F
IGTJHR   CSECT
         DS    0F
@CF00041 DC    F'1'
@CF00069 DC    F'3'
@CF00919 DC    F'-2147483647'
@CF00925 DC    F'-23'
@CF00926 DC    F'-15'
@CF00927 DC    F'-14'
@CF00928 DC    F'-10'
@CF00809 DC    XL4'07'
@DATD    DSECT
         DS    0D
WTORECB  DS    A
         DS    0D
@TS00001 DS    CL8
ECBLIST  DS    CL12
         ORG   ECBLIST
THEECBP  DS    AL4
CNCLECBP DS    AL4
         ORG   CNCLECBP
@NM00001 DS    BL1
         ORG   @NM00001
LASTECBI DS    BL1
@NM00002 EQU   @NM00001+0
         ORG   ECBLIST+8
ENQECB   DS    AL4
         ORG   ECBLIST+12
WORK     DS    CL5
WTOREPLY DS    CL6
         DS    CL1
WTON     DS    2A
IGTJHR   CSECT
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
         DS    0D
@CC00833 DC    C'EXC/'
@CC00834 DC    C'SHR/'
@CC00835 DC    C'0K'
APUBENQR DC    CL4'APUB'
IGTJHR   CSECT
*                                     /*
ENQLISTE ENQ   (*-*,*-*,E,0,SYSTEM),ECB=*-*,MF=L
NQLISTEL EQU   ENQLISTE,*-ENQLISTE,C'C' LENGTH OF STATIC PARM LIST
@DATD    DSECT
*                                   /*
DYNQLIST ENQ   (*-*,*-*,E,0,SYSTEM),ECB=*-*,MF=L
IGTJHR   CSECT
*                                                        /*
DEQLIST1 DEQ   (*-*,*-*,0,SYSTEM),MF=L
DQLIST1L EQU   DEQLIST1,*-DEQLIST1,C'C'
DEQLIST2 DEQ   (*-*,*-*,0,SYSTEM,                                      *
               *-*,*-*,0,SYSTEM),MF=L
DQLIST2L EQU   DEQLIST2,*-DEQLIST2,C'C'
@DATD    DSECT
*                                   /*
DYNDEQLA DEQ   (*-*,*-*,0,SYSTEM,                                      *
               *-*,*-*,0,SYSTEM),                                      *
               TCB=0,MF=L
IGTJHR   CSECT
*                                                           /*
WTOL1    WTO   ('IGT487I .... SUBSYSTEM ALLOCATION-',C),               *
               ('   XXXXXXXX - NNN PORT(S) NEEDED',D),                 *
               ('                                                      *
                               ',D),                                   *
               ROUTCDE=(2,11),            MASTCONS INFO & PROGMR INFO  *
               DESC=(6),           JOB STATUS                          *
               MF=L
WTOL1L   EQU   WTOL1,*-WTOL1,C'C'         LENGTH FOR DYN AREA INIT
WTOL2    WTO   ('                                                      *
                               ',D),                                   *
               MF=L
WTOL2L   EQU   WTOL2,*-WTOL2,C'C'         LENGTH FOR DYN AREA INIT
WTOL3    WTO   (,E),                                                   *
               MF=L
WTOL3L   EQU   WTOL3,*-WTOL3,C'C'         LENGTH FOR DYN AREA INIT
@DATD    DSECT
*                                   /*
WTOL     WTO   ('IGT487I .... SUBSYSTEM ALLOCATION-',C),               *
               ('   XXXXXXXX - NNN PORT(S) NEEDED',D),                 *
               ('                                                      *
                               ',D),                                   *
               ROUTCDE=(2,11),            MASTCONS INFO & PROGMR INFO  *
               DESC=(6),           JOB STATUS                          *
               MF=L
IGTJHR   CSECT
*                                                  /*
WTORL1   WTOR  'IGT488D ....  ........ -- REPLY ''''WAIT'''' OR ''''CAN*
               CEL''''.',          MESSAGE TEXT                        *
               *-*,                REPLY ADDRESS                       *
               *-*,                ECB ADDRESS                         *
               ROUTCDE=(1,11),     MASTCONS ACTION & PROGMR INFO       *
               DESC=(7),           WTOR DESC IS ALWAYS 7               *
               MF=L
WTORL1L  EQU   WTORL1,*-WTORL1,C'C' LENGTH FOR DYN AREA INIT
WTORL2   WTOR  'IGT489D ....  ........ - WAIT REQUESTED -- REPLY ''''HO*
               LD'''' OR ''''NOHOLD''''.', MESSAGE TEXT                *
               *-*,                REPLY ADDRESS                       *
               *-*,                ECB ADDRESS                         *
               ROUTCDE=(1,11),     MASTCONS ACTION & PROGMR INFO       *
               DESC=(7),           WTOR DESC IS ALWAYS 7               *
               MF=L
WTORL2L  EQU   WTORL2,*-WTORL2,C'C' LENGTH FOR DYN AREA INIT
@DATD    DSECT
*                                   /*
WTORL    WTOR  'IGT489D ....  ........ - WAIT REQUESTED -- REPLY ''''HO*
               LD'''' OR ''''NOHOLD''''.', MESSAGE TEXT                *
               *-*,                REPLY ADDRESS                       *
               *-*,                ECB ADDRESS                         *
               ROUTCDE=(1,11),     MASTCONS ACTION & PROGMR INFO       *
               DESC=(7),           WTOR DESC IS ALWAYS 7               *
               MF=L
IGTJHR   CSECT
*                                /* GENERATE PATCH
         IGTXZAP ,                 GENERATE PATCH AREA
@DATD    DSECT
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
IGTJHR   CSECT
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
NPN      EQU   @08
LSR      EQU   @10
LSP      EQU   @09
J        EQU   @05
I        EQU   @02
SSDDRPTR EQU   @03
APDATA   EQU   @06
APCODE   EQU   @07
R15P     EQU   @15
ALLCWAPT EQU   @04
APCTPTR  EQU   @12
APSVPTR  EQU   @13
APDSPTR  EQU   @11
GPR00F   EQU   @00
GPR01P   EQU   @01
R1F      EQU   @01
R0F      EQU   @00
APACBPTR EQU   @09
APATPTR  EQU   @11
APAXPTR  EQU   @10
APCIPTR  EQU   @08
APCPPTR  EQU   @10
APCQPTR  EQU   @09
APCWPTR  EQU   @08
APDEBPTR EQU   @08
APDXPTR  EQU   @11
APENTRY  EQU   @15
APERPTR  EQU   @08
APEXLPTR EQU   @10
APINPTR  EQU   @01
APIOPTR  EQU   @10
APLBPTR  EQU   @11
APNPPTR  EQU   @08
APOCPTR  EQU   @10
APOTPTR  EQU   @09
APRCODE  EQU   @15
APRETURN EQU   @14
APRLPTR  EQU   @08
APSCPTR  EQU   @01
APSMPTR  EQU   @01
APUBPTR  EQU   @10
APUTPTR  EQU   @11
APXLPTR  EQU   @11
R0P      EQU   @00
R0RSTD   EQU   @00
R1P      EQU   @01
R1RSTD   EQU   @01
R10F     EQU   @10
R10P     EQU   @10
R10RSTD  EQU   @10
R11F     EQU   @11
R11P     EQU   @11
R11RSTD  EQU   @11
R12F     EQU   @12
R12P     EQU   @12
R12RSTD  EQU   @12
R13F     EQU   @13
R13P     EQU   @13
R13RSTD  EQU   @13
R14F     EQU   @14
R14P     EQU   @14
R14RSTD  EQU   @14
R15F     EQU   @15
R15RSTD  EQU   @15
R2F      EQU   @02
R2P      EQU   @02
R2RSTD   EQU   @02
R3F      EQU   @03
R3P      EQU   @03
R3RSTD   EQU   @03
R4F      EQU   @04
R4P      EQU   @04
R4RSTD   EQU   @04
R5F      EQU   @05
R5P      EQU   @05
R5RSTD   EQU   @05
R6F      EQU   @06
R6P      EQU   @06
R6RSTD   EQU   @06
R7F      EQU   @07
R7P      EQU   @07
R7RSTD   EQU   @07
R8F      EQU   @08
R8P      EQU   @08
R8RSTD   EQU   @08
R9F      EQU   @09
R9P      EQU   @09
R9RSTD   EQU   @09
SSARBPTR EQU   0
ECBPTR   EQU   0
@NM00003 EQU   0
ENQRC    EQU   @NM00003+3
JOBNAME  EQU   0
INFOARR  EQU   0
GROUP    EQU   INFOARR
CDDNAME  EQU   GROUP
COWN     EQU   GROUP+9
CREG     EQU   GROUP+13
APAW     EQU   0
SSOBPTR  EQU   APAW
FIRSTARB EQU   APAW+4
ALLSTAT  EQU   APAW+8
ALLSTAT0 EQU   ALLSTAT
ALLFAIL  EQU   ALLSTAT0
ALLWAIT  EQU   ALLSTAT0
ALLSTAT1 EQU   ALLSTAT+1
ALLHOLD  EQU   ALLSTAT1
ALLSTAT2 EQU   ALLSTAT+2
ALLMLWTO EQU   ALLSTAT2
ALLSTAT3 EQU   ALLSTAT+3
ALLRSRCE EQU   APAW+12
ALLAPUB  EQU   ALLRSRCE
ACNCLECB EQU   APAW+28
EXITINFO EQU   APAW+48
EXITINF0 EQU   EXITINFO
EXITINF1 EQU   EXITINFO+1
ALLMSGID EQU   APAW+60
APCT     EQU   0
APCTENQM EQU   APCT+12
APCTSSID EQU   APCTENQM+4
APCTSMIN EQU   APCT+32
APCTSMAD EQU   APCT+36
APCTZ@@@ EQU   APCT+40
APCTU@@@ EQU   APCT+440
APCTBR14 EQU   APCT+840
APCTERRS EQU   APCT+876
@NM00025 EQU   APCT+936
APCTSTAT EQU   @NM00025
APCTPRSW EQU   @NM00025+1
APCTAPCQ EQU   APCT+944
APCTCQAQ EQU   APCT+952
APCTZ@@1 EQU   APCT+1120
APSV     EQU   0
APSVREGS EQU   APSV+12
APCVZJHE EQU   0
APDS     EQU   0
APDSTD   EQU   APDS+16
APDSDDNM EQU   APDS+24
APDSREG  EQU   APDS+56
APDSFLGS EQU   APDS+64
APDSFLG0 EQU   APDSFLGS
APDSOWN  EQU   APDSFLG0
APDSARS  EQU   APDSFLG0
APDSFLG1 EQU   APDSFLGS+1
SSOB     EQU   0
SSOBINDV EQU   SSOB+16
SSAG     EQU   0
SSAGEHDR EQU   SSAG
SSAGFLGS EQU   SSAGEHDR+2
SSAGJBNM EQU   SSAGEHDR+16
SSAGGMGP EQU   SSAGEHDR+24
SSAGARBK EQU   0
SSAGNRBP EQU   SSAGARBK+12
SSAGSSCM EQU   SSAGARBK+52
SSAGDMGP EQU   SSAGARBK+56
SSAGDMBK EQU   0
SSAGGMBK EQU   0
ECB      EQU   0
ECBRB    EQU   ECB
ECBEVTB  EQU   ECBRB
ECBEXTB  EQU   ECBEVTB
ECBCC    EQU   ECBEXTB
ECBPOSTB EQU   ECBCC
ECBCCCNT EQU   ECBEXTB+1
ECBRBA   EQU   ECBCCCNT
ECBEVTBA EQU   ECBRBA
ECBEXTBA EQU   ECBEVTBA
ECBBYTE3 EQU   ECBEXTBA+2
ECBEXTND EQU   ECBBYTE3
BIT0029X EQU   0
BIT0031X EQU   0
APCVZDAL EQU   0
APCVZDAP EQU   0
APCVZDBK EQU   0
APCVZDDA EQU   0
APCVZDDQ EQU   0
APCVZDEQ EQU   0
APCVZDID EQU   0
APCVZDIO EQU   0
APCVZDIP EQU   0
APCVZDMD EQU   0
APCVZDMM EQU   0
APCVZDQR EQU   0
APCVZDRI EQU   0
APCVZDUA EQU   0
APCVZDUL EQU   0
APCVZDWI EQU   0
APCVZDWT EQU   0
APCVZDX1 EQU   0
APCVZDX2 EQU   0
APCVZDX3 EQU   0
APCVZDX4 EQU   0
APCVZD10 EQU   0
APCVZD20 EQU   0
APCVZD4E EQU   0
APCVZD40 EQU   0
APCVZD41 EQU   0
APCVZD42 EQU   0
APCVZD43 EQU   0
APCVZD44 EQU   0
APCVZD45 EQU   0
APCVZD46 EQU   0
APCVZD47 EQU   0
APCVZD48 EQU   0
APCVZD49 EQU   0
APCVZD60 EQU   0
APCVZD80 EQU   0
APCVZD81 EQU   0
APCVZD82 EQU   0
APCVZD83 EQU   0
APCVZJAA EQU   0
APCVZJAD EQU   0
APCVZJAG EQU   0
APCVZJAJ EQU   0
APCVZJAM EQU   0
APCVZJAP EQU   0
APCVZJAX EQU   0
APCVZJAY EQU   0
APCVZJBA EQU   0
APCVZJBD EQU   0
APCVZJBG EQU   0
APCVZJBJ EQU   0
APCVZJBM EQU   0
APCVZJDA EQU   0
APCVZJDD EQU   0
APCVZJDG EQU   0
APCVZJDJ EQU   0
APCVZJDM EQU   0
APCVZJHC EQU   0
APCVZJHF EQU   0
APCVZJHO EQU   0
APCVZJHQ EQU   0
APCVZJHR EQU   0
APCVZJHT EQU   0
APCVZJHW EQU   0
APCVZJH0 EQU   0
APCVZJH6 EQU   0
APCVZJI0 EQU   0
APCVZJI3 EQU   0
APCVZJJ0 EQU   0
APCVZKAA EQU   0
APCVZKBA EQU   0
APCVZKBB EQU   0
APCVZKBC EQU   0
APCVZKBD EQU   0
APCVZKBE EQU   0
APCVZKBF EQU   0
APCVZKCA EQU   0
APCVZKDA EQU   0
APCVZKGA EQU   0
APCVZKGB EQU   0
APCVZKGC EQU   0
APCVZKGD EQU   0
APCVZLCA EQU   0
APCVZLCB EQU   0
APCVZMBA EQU   0
APCVZMBD EQU   0
APCVZMBG EQU   0
APCVZMBH EQU   0
APCVZMBK EQU   0
APCVZMBM EQU   0
APCVZMIB EQU   0
APCVZMIC EQU   0
APCVZMIF EQU   0
APCVZMJB EQU   0
APCVZMJC EQU   0
APCVZMJH EQU   0
APCVZMJI EQU   0
APCVZMMA EQU   0
APCVZUAA EQU   0
APCVZUAB EQU   0
APCVZUAC EQU   0
APCVZUAD EQU   0
APCVZUAE EQU   0
APCVZUAF EQU   0
APCVZUAG EQU   0
APCVZUBB EQU   0
APCVZUFA EQU   0
APCVZUHA EQU   0
APCVZUHB EQU   0
APCVZUJA EQU   0
APCVZUKA EQU   0
APCV1CMD EQU   0
APCV1JAA EQU   0
APCV1JBJ EQU   0
APCV1JHC EQU   0
APCV1JHL EQU   0
APCV1JHT EQU   0
APCV1MAB EQU   0
APCV1MBD EQU   0
APCV2JHC EQU   0
APCV2JHL EQU   0
APCV2MBD EQU   0
CNCLECB  EQU   0
I001C    EQU   0
I008P    EQU   0
I015F    EQU   0
I015P    EQU   0
I031F    EQU   0
I031P    EQU   0
I256C    EQU   0
SSWAPTR  EQU   0
RMSSID   EQU   WTORL+20
RMJBNM   EQU   WTORL+26
CSSID    EQU   WTOL+12
CJOBNAME EQU   WTOL+53
CNPN     EQU   WTOL+64
APCTZ    EQU   APCTZ@@@
APCTZUAA EQU   APCTZ
APCTZUAB EQU   APCTZ+4
APCTZUAC EQU   APCTZ+8
APCTZUAD EQU   APCTZ+12
APCTZUAE EQU   APCTZ+16
APCTZUBB EQU   APCTZ+24
APCTZD10 EQU   APCTZ+28
APCTZD20 EQU   APCTZ+32
APCTZD40 EQU   APCTZ+36
APCTZD41 EQU   APCTZ+40
APCTZD42 EQU   APCTZ+44
APCTZD43 EQU   APCTZ+48
APCTZD44 EQU   APCTZ+52
APCTZD45 EQU   APCTZ+56
APCTZD46 EQU   APCTZ+60
APCTZD47 EQU   APCTZ+64
APCTZD48 EQU   APCTZ+68
APCTZD49 EQU   APCTZ+72
APCTZD60 EQU   APCTZ+76
APCTZD80 EQU   APCTZ+80
APCTZD4E EQU   APCTZ+84
APCTZMBA EQU   APCTZ+88
APCTZMBD EQU   APCTZ+92
APCTZMBG EQU   APCTZ+96
APCTZDX1 EQU   APCTZ+104
APCTZDX2 EQU   APCTZ+108
APCTZDX3 EQU   APCTZ+112
APCTZDX4 EQU   APCTZ+116
APCTZMBH EQU   APCTZ+120
APCTZMBK EQU   APCTZ+124
APCTZMBM EQU   APCTZ+128
APCTZMJB EQU   APCTZ+132
APCTZMJC EQU   APCTZ+136
APCTZMJH EQU   APCTZ+140
APCTZMMA EQU   APCTZ+144
APCTZDMD EQU   APCTZ+148
APCTZD81 EQU   APCTZ+152
APCTZDID EQU   APCTZ+156
APCTZDRI EQU   APCTZ+160
APCTZMJI EQU   APCTZ+164
APCTZDWT EQU   APCTZ+168
APCTZDMM EQU   APCTZ+172
APCTZDAL EQU   APCTZ+176
APCTZDBK EQU   APCTZ+180
APCTZDIP EQU   APCTZ+184
APCTZDDA EQU   APCTZ+188
APCTZDUL EQU   APCTZ+192
APCTZDEQ EQU   APCTZ+196
APCTZDDQ EQU   APCTZ+200
APCTZDUA EQU   APCTZ+204
APCTZUAF EQU   APCTZ+208
APCTZUAG EQU   APCTZ+212
APCTZDIO EQU   APCTZ+216
APCTZUHA EQU   APCTZ+220
APCTZUHB EQU   APCTZ+224
APCTZJAA EQU   APCTZ+232
APCTZJAD EQU   APCTZ+236
APCTZJAG EQU   APCTZ+240
APCTZJAJ EQU   APCTZ+244
APCTZJAM EQU   APCTZ+248
APCTZJAP EQU   APCTZ+252
APCTZJAY EQU   APCTZ+256
APCTZUFA EQU   APCTZ+260
APCTZUJA EQU   APCTZ+264
APCTZDAP EQU   APCTZ+268
APCTZKAA EQU   APCTZ+272
APCTZD82 EQU   APCTZ+276
APCTZMIB EQU   APCTZ+280
APCTZMIC EQU   APCTZ+284
APCTZD83 EQU   APCTZ+288
APCTZMIF EQU   APCTZ+296
APCTZJH0 EQU   APCTZ+300
APCTZJI0 EQU   APCTZ+304
APCTZJI3 EQU   APCTZ+308
APCTZJJ0 EQU   APCTZ+312
APCTZJBA EQU   APCTZ+316
APCTZJBD EQU   APCTZ+320
APCTZJBG EQU   APCTZ+324
APCTZJBJ EQU   APCTZ+328
APCTZJBM EQU   APCTZ+332
APCTZKCA EQU   APCTZ+340
APCTZKDA EQU   APCTZ+344
APCTZJDA EQU   APCTZ+356
APCTZJDJ EQU   APCTZ+360
APCTZJH6 EQU   APCTZ+364
APCTZJHO EQU   APCTZ+368
APCTZJHF EQU   APCTZ+372
APCTZJHE EQU   APCTZ+376
APCTZDQR EQU   APCTZ+380
APCTZJHR EQU   APCTZ+384
APCTZJHT EQU   APCTZ+388
APCTZJHW EQU   APCTZ+392
APCTZ1   EQU   APCTZ@@1
APCTZKBA EQU   APCTZ1
APCTZKBC EQU   APCTZ1+4
APCTZKBB EQU   APCTZ1+8
APCTZJHC EQU   APCTZ1+20
APCTZJHQ EQU   APCTZ1+24
APCTZKBD EQU   APCTZ1+28
APCTZKBE EQU   APCTZ1+40
APCTZUKA EQU   APCTZ1+56
APCTZKBF EQU   APCTZ1+60
APCTZJDD EQU   APCTZ1+64
APCTZJDG EQU   APCTZ1+68
APCTZJDM EQU   APCTZ1+72
APCTZLCA EQU   APCTZ1+76
APCTZLCB EQU   APCTZ1+80
APCTZDWI EQU   APCTZ1+84
APCTZJAX EQU   APCTZ1+88
APCTZKGA EQU   APCTZ1+92
APCTZKGB EQU   APCTZ1+96
APCTZKGC EQU   APCTZ1+100
APCTZKGD EQU   APCTZ1+104
APCTU    EQU   APCTU@@@
APCT1MAB EQU   APCTU
APCT1MBD EQU   APCTU+4
APCT2MBD EQU   APCTU+8
APCT1CMD EQU   APCTU+12
APCT1JAA EQU   APCTU+20
APCT1JHC EQU   APCTU+24
APCT2JHC EQU   APCTU+28
APCT1JHT EQU   APCTU+32
APCT1JHL EQU   APCTU+36
APCT2JHL EQU   APCTU+40
APCT1JBJ EQU   APCTU+44
ALLCWA   EQU   APAW
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
@NM00057 EQU   APCTU+48
APCT1MBM EQU   APCTU+16
@NM00056 EQU   APCTZ1+108
@NM00055 EQU   APCTZ1+52
@NM00054 EQU   APCTZ1+48
@NM00053 EQU   APCTZ1+44
@NM00052 EQU   APCTZ1+36
@NM00051 EQU   APCTZ1+32
@NM00050 EQU   APCTZ1+16
@NM00049 EQU   APCTZ1+12
@NM00048 EQU   APCTZ+396
@NM00047 EQU   APCTZ+352
@NM00046 EQU   APCTZ+348
@NM00045 EQU   APCTZ+336
@NM00044 EQU   APCTZ+292
APCTZJFA EQU   APCTZ+228
APCTZMBR EQU   APCTZ+100
@NM00043 EQU   APCTZ+20
ECBEVNT  EQU   ECBEXTND
@NM00069 EQU   ECBEXTND
@NM00068 EQU   ECBBYTE3
@NM00067 EQU   ECBEXTBA
@NM00066 EQU   ECBCC
ECBWAITB EQU   ECBCC
SSAGGMSG EQU   SSAGGMBK+2
SSAGGMGL EQU   SSAGGMBK
SSAGDMSG EQU   SSAGDMBK+2
SSAGDMGL EQU   SSAGDMBK
SSAGSSWA EQU   SSAGARBK+48
SSAGJFCB EQU   SSAGARBK+44
SSAGSSNM EQU   SSAGARBK+40
SSAGADSP EQU   SSAGARBK+36
SSAGUNIT EQU   SSAGARBK+32
SSAGSOUT EQU   SSAGARBK+28
SSAGDUMY EQU   SSAGARBK+24
SSAGDISP EQU   SSAGARBK+20
SSAGDDNM EQU   SSAGARBK+16
@NM00065 EQU   SSAGARBK+10
SSAGDMLN EQU   SSAGARBK+8
SSAGRBIC EQU   SSAGARBK+6
SSAGRBEC EQU   SSAGARBK+4
SSAGRBFL EQU   SSAGARBK+2
SSAGRBLN EQU   SSAGARBK
SSAGGMLN EQU   SSAGEHDR+20
SSAGCNCL EQU   SSAGEHDR+12
SSAGARBP EQU   SSAGEHDR+8
SSAGGPIC EQU   SSAGEHDR+6
SSAGGPEC EQU   SSAGEHDR+4
@NM00064 EQU   SSAGFLGS
SSAGSMSG EQU   SSAGFLGS
SSAGWAIT EQU   SSAGFLGS
SSAGLEN  EQU   SSAGEHDR
SSOBRETN EQU   SSOB+12
SSOBSSIB EQU   SSOB+8
SSOBFUNC EQU   SSOB+6
SSOBLEN  EQU   SSOB+4
SSOBID   EQU   SSOB
@NM00063 EQU   APDS+144
@NM00062 EQU   APDS+100
APDSAPEP EQU   APDS+96
@NM00061 EQU   APDS+94
APDSSIZE EQU   APDS+92
APDSJBNM EQU   APDS+84
APDSITCB EQU   APDS+80
APDSMSK  EQU   APDS+72
@NM00060 EQU   APDS+69
APDSIOFS EQU   APDS+68
APDSDUMP EQU   APDS+67
APDSPGFX EQU   APDS+66
@NM00059 EQU   APDSFLG1
APDSFRST EQU   APDSFLG1
APDSSLPS EQU   APDSFLG0
APDSLSR  EQU   APDSFLG0
APDSIER  EQU   APDSFLG0
APDSVPER EQU   APDSFLG0
APDSVLER EQU   APDSFLG0
APDSTPGM EQU   APDSFLG0
APDSDSAP EQU   APDS+60
APDSASCB EQU   APDS+52
APDSAPUB EQU   APDS+48
APDSPERR EQU   APDS+40
APDSLERR EQU   APDS+32
APDSDEB  EQU   APDSTD+4
APDSTCB  EQU   APDSTD
APDSAPCT EQU   APDS+12
APDSUSER EQU   APDS+8
APDSAPDS EQU   APDS+4
APDSID   EQU   APDS
APSVWORK EQU   APSV+80
@NM00058 EQU   APSV+80
APSVFREE EQU   APSV+76
APSVAPSM EQU   APSV+72
APSVRG12 EQU   APSVREGS+56
APSVRG11 EQU   APSVREGS+52
APSVRG10 EQU   APSVREGS+48
APSVRG9  EQU   APSVREGS+44
APSVRG8  EQU   APSVREGS+40
APSVRG7  EQU   APSVREGS+36
APSVRG6  EQU   APSVREGS+32
APSVRG5  EQU   APSVREGS+28
APSVRG4  EQU   APSVREGS+24
APSVRG3  EQU   APSVREGS+20
APSVRG2  EQU   APSVREGS+16
APSVRG1  EQU   APSVREGS+12
APSVRG0  EQU   APSVREGS+8
APSVRG15 EQU   APSVREGS+4
APSVRG14 EQU   APSVREGS
APSVNEXT EQU   APSV+8
APSVPREV EQU   APSV+4
APSVAPSC EQU   APSV
@NM00042 EQU   APCT+1556
APCTSVCT EQU   APCT+1552
APCTDAVT EQU   APCT+1548
APCTLOGL EQU   APCT+1544
@NM00041 EQU   APCT+1540
APCTDMPU EQU   APCT+1536
APCTDMPM EQU   APCT+1532
APCTNDMP EQU   APCT+1530
APCTASID EQU   APCT+1528
APCTLGPG EQU   APCT+1526
APCTLGLN EQU   APCT+1524
APCTAPVU EQU   APCT+1520
APCTABR  EQU   APCT+1116
APCTACTR EQU   APCT+1112
APCTLOGD EQU   APCT+1108
APCTDCLD EQU   APCT+1104
APCTIOAP EQU   APCT+1100
@NM00040 EQU   APCT+1080
@NM00039 EQU   APCT+1078
APCTKCAX EQU   APCT+1076
APCTABND EQU   APCT+1072
@NM00038 EQU   APCT+1068
APCTAPIO EQU   APCT+1064
APCTCSCT EQU   APCT+1060
APCTSTDF EQU   APCT+1056
APCTSTMX EQU   APCT+1052
APCTRGMX EQU   APCT+1048
APCTSIZE EQU   APCT+1046
APCTCTUB EQU   APCT+1045
APCTMFID EQU   APCT+1044
APCTMFSZ EQU   APCT+1040
APCTCRTN EQU   APCT+1036
APCTAPCP EQU   APCT+1032
APCTAMNA EQU   APCT+1028
APCTEMNA EQU   APCT+1024
APCTAALP EQU   APCT+1020
APCTEALP EQU   APCT+1016
@NM00037 EQU   APCT+1012
@NM00036 EQU   APCT+1008
@NM00035 EQU   APCT+1004
APCTEIPL EQU   APCT+1000
@NM00034 EQU   APCT+996
@NM00033 EQU   APCT+992
@NM00032 EQU   APCT+988
@NM00031 EQU   APCT+984
@NM00030 EQU   APCT+980
APCTECPW EQU   APCT+976
APCTEULD EQU   APCT+972
APCTECPT EQU   APCT+968
APCTEALC EQU   APCT+964
APCTECBL EQU   APCT+960
APCTECIT EQU   APCT+956
APCTCQAF EQU   APCTCQAQ
APCTCQL  EQU   APCTAPCQ+4
APCTCQF  EQU   APCTAPCQ
APCTCQLK EQU   APCT+940
@NM00029 EQU   @NM00025+2
@NM00028 EQU   APCTPRSW
APCTAPST EQU   APCTPRSW
@NM00027 EQU   APCTPRSW
@NM00026 EQU   APCTSTAT
APCTWARM EQU   APCTSTAT
APCTTERM EQU   APCTSTAT
APCTHALT EQU   APCTSTAT
APCTQSCE EQU   APCTSTAT
APCTSTRT EQU   APCTSTAT
APCTACT  EQU   APCTSTAT
@NM00024 EQU   APCT+935
APCTSOUT EQU   APCT+934
APCTDAID EQU   APCT+933
APCTSV34 EQU   APCT+932
APCTMJOB EQU   APCT+928
APCTTCB  EQU   APCT+924
APCTASCB EQU   APCT+920
APCTDCNW EQU   APCT+918
APCTDCNR EQU   APCT+916
@NM00023 EQU   APCT+912
@NM00022 EQU   APCT+908
@NM00021 EQU   APCT+904
@NM00020 EQU   APCT+900
@NM00019 EQU   APCTERRS+22
APCTERTJ EQU   APCTERRS+20
APCTERTD EQU   APCTERRS+18
APCTERTC EQU   APCTERRS+16
APCTERTB EQU   APCTERRS+14
APCTERTA EQU   APCTERRS+12
APCTERT9 EQU   APCTERRS+10
APCTERT3 EQU   APCTERRS+8
APCTERT2 EQU   APCTERRS+6
APCTERT1 EQU   APCTERRS+4
APCTERT0 EQU   APCTERRS+2
APCTERTT EQU   APCTERRS
APCTDSAP EQU   APCT+872
APCTISUB EQU   APCT+868
APCTUBAP EQU   APCT+864
APCTAPDS EQU   APCT+860
APCTUBIC EQU   APCT+856
APCTUBIS EQU   APCT+852
APCTAPUB EQU   APCT+848
APCTUBLK EQU   APCT+844
APCTBR1A EQU   APCTBR14+2
@NM00018 EQU   APCTBR14
APCTSMSZ EQU   APCTSMAD+2
@NM00017 EQU   APCTSMAD+1
@NM00016 EQU   APCTSMAD
APCTSMIS EQU   APCTSMIN+2
@NM00015 EQU   APCTSMIN+1
APCTSMSP EQU   APCTSMIN
@NM00014 EQU   APCT+30
APCTLINE EQU   APCT+28
APCTLBSZ EQU   APCT+24
APCTREG  EQU   APCT+20
@NM00013 EQU   APCTENQM
APCTSSVT EQU   APCT+8
APCTUSER EQU   APCT+4
APCTID   EQU   APCT
@NM00012 EQU   APAW+68
LASTARB  EQU   APAW+64
BSRTOT   EQU   APAW+56
NUMIER   EQU   APAW+54
NPNTOT   EQU   APAW+52
EXITINF3 EQU   EXITINFO+3
EXITINF2 EQU   EXITINFO+2
@NM00011 EQU   EXITINF1
EXITHOLD EQU   EXITINF1
EXITCANC EQU   EXITINF1
EXITCOMM EQU   EXITINF1
EXITREJ  EQU   EXITINF1
@NM00010 EQU   EXITINF0
EXITRCON EQU   EXITINF0
EXITENRQ EQU   EXITINF0
EXITALOK EQU   EXITINF0
EXITIMPS EQU   EXITINF0
EXITIMPP EQU   EXITINF0
@NM00009 EQU   APAW+46
BSAVAIL  EQU   APAW+44
BSUNLD   EQU   APAW+42
USCAVAIL EQU   APAW+40
USCUNLD  EQU   APAW+38
NUMNTSAT EQU   APAW+36
NUMALREQ EQU   APAW+32
ALLOCNTR EQU   APAW+24
@NM00008 EQU   APAW+21
ALLENQRC EQU   APAW+20
INITTCB  EQU   APAW+16
ALLCWAIT EQU   ALLRSRCE
ALLSTART EQU   ALLRSRCE
ALLALL   EQU   ALLRSRCE
ALLSER   EQU   ALLRSRCE
@NM00007 EQU   ALLSTAT3
ALLQUE2  EQU   ALLSTAT2
ALLERRN2 EQU   ALLSTAT2
ALLRES   EQU   ALLSTAT2
ALLQRMV  EQU   ALLSTAT2
ALLQADD  EQU   ALLSTAT2
ALLQUE   EQU   ALLSTAT2
ALLDYN   EQU   ALLSTAT2
@NM00006 EQU   ALLSTAT1
ALLMARK  EQU   ALLSTAT1
ALLINST  EQU   ALLSTAT1
ALLNLAA  EQU   ALLSTAT1
ALLAPDS  EQU   ALLSTAT0
ALLERREN EQU   ALLSTAT0
ALLRQVAL EQU   ALLSTAT0
ALLMONWT EQU   ALLSTAT0
ALLJCLOK EQU   ALLSTAT0
ALLMONUP EQU   ALLSTAT0
@NM00005 EQU   GROUP+18
@NM00004 EQU   @NM00003
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RT00186 EQU   @RC00162
@RF00201 EQU   @EL00001
@RF00211 EQU   @EL00001
@RC00223 EQU   @RC00222
@RF00262 EQU   @EL00002
@ENDDATA EQU   *
         END   IGTJHR,(C'PLS2128',0701,77092)
