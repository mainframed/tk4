         TITLE 'TABLE SEARCH - ISTCC015'
* IBM DISK OPERATING SYSTEM
* TOLTEP - 5745-SCT-TLT
         ISEQ 73,80
ISTCC015 CSECT ,                                                   0002
@MAINENT DS    0H                                                  0002
         USING *,@15                                               0002
         B     @PROLOG                                             0002
         DC    AL1(16)                                             0002
         DC    C'ISTCC015  80.232'                                 0002
         DROP  @15
@PROLOG  ST    @14,12(,@13)                                        0002
         STM   @02,@12,28(@13)                                     0002
         BALR  @12,0                                               0002
@PSTART  DS    0H                                                  0002
         USING @PSTART,@12                                         0002
         USING @DATD,R8
*   TPQINPUT=TPQ1;                  /* INIT PARAM REGISTER           */
         LR    TPQINPUT,TPQ1                                       0043
*   RCAPTR=TPQRCA;                  /* INIT RCAPTR                   */
         L     RCAPTR,TPQRCA(,TPQINPUT)                            0044
*   REGSAV=WAPTR;                   /* SAVE CURRENT TWA PTR          */
         LR    REGSAV,WAPTR                                        0045
*   IF FSTAREA^=0                   /* INIT WORK AREA PTR            */
*     THEN                                                         0046
         L     @15,FSTAREA(,RCAPTR)                                0046
         LTR   @15,@15                                             0046
         BZ    @RF00046                                            0046
*     WAPTR=FSTAREA;                                               0047
*                                                                  0047
         LR    WAPTR,@15                                           0047
*   /*****************************************************************/
*   /*                                                               */
*   /* CHECK INPUT CODE TO TABLE SEARCH                              */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0048
*   R8=ADDR($TBSDATA);              /* SET UP COMPILER COVER REG     */
@RF00046 LA    R8,$TBSDATA(,WAPTR)                                 0048
*   CODREG=TPCODE;                                                 0049
         SLR   CODREG,CODREG                                       0049
         IC    CODREG,TPCODE(,TPQINPUT)                            0049
*   IF CODREG>5                     /* CODE INVALID?                 */
*     THEN                                                         0050
         C     CODREG,@CF00381                                     0050
         BNH   @RF00050                                            0050
*     RETURN CODE(8);                                              0051
         LA    @15,8                                               0051
@EL00001 DS    0H                                                  0051
@EF00001 DS    0H                                                  0051
@ER00001 L     @14,12(,@13)                                        0051
         LM    @02,@12,28(@13)                                     0051
         BR    @14                                                 0051
*   IF CODREG<3×                    /* CHECK CID AND SYMBOL CODES    */
*       CODREG>4 THEN                                              0052
@RF00050 C     CODREG,@CF00112                                     0052
         BL    @RT00052                                            0052
         C     CODREG,@CF00100                                     0052
         BNH   @RF00052                                            0052
@RT00052 DS    0H                                                  0053
*     IF FSTAREA=0×                 /* FOR VALID CASES               */
*         DAF=0 THEN                                               0053
         SLR   @15,@15                                             0053
         CL    @15,FSTAREA(,RCAPTR)                                0053
         BE    @RT00053                                            0053
         L     @14,TPQDATA(,TPQINPUT)                              0053
         SLR   @11,@11                                             0053
         ICM   @11,3,DAF(@14)                                      0053
         CR    @15,@11                                             0053
         BNE   @RF00053                                            0053
@RT00053 DS    0H                                                  0054
*       RETURN CODE(4);                                            0054
         LA    @15,4                                               0054
         L     @14,12(,@13)                                        0054
         LM    @02,@12,28(@13)                                     0054
         BR    @14                                                 0054
*   CODREG=CODREG+1;                /* USE BRANCHING TABLE           */
@RF00053 DS    0H                                                  0055
@RF00052 AL    CODREG,@CF00033                                     0055
*   GOTO TAB(CODREG);               /* GOTO SUBROUTINE               */
         LR    @15,CODREG                                          0056
         SLA   @15,2                                               0056
         L     @15,TAB-4(@15)                                      0056
         BR    @15                                                 0056
*                                                                  0057
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS SUBROUTINE SEARCHES FOR A MATCH ON $SYMNAM. IT IS INVOKED*/
*   /* BY PASSING A CODE OF 0                                        */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0057
*C15C0000:                                                         0057
*   ;                                                              0057
C15C0000 DS    0H                                                  0058
*C15C0002:                                                         0058
*   ;                                                              0058
C15C0002 DS    0H                                                  0059
*   I=$DEVCNTS;                     /* INITIALIZE COUNTER            */
         LH    I,$DEVCNTS(,WAPTR)                                  0059
*C15C0005:                                                         0060
*   ;                                                              0060
C15C0005 DS    0H                                                  0061
*   IF I=0                          /* IF 0 NO MORE DEVICES          */
*     THEN                                                         0061
         LTR   I,I                                                 0061
         BZ    @RT00061                                            0061
*     GOTO C15C0010;                /* CK NEXT WORK AREA             */
*   IF $NOTDEV(I)='1'B              /* IS THIS A DEVICE TO CHECK     */
*     THEN                                                         0063
         LR    @15,I                                               0063
         MH    @15,@CH00406                                        0063
         ST    @15,@TF00001                                        0063
         ALR   @15,WAPTR                                           0063
         TM    $NOTDEV-68(@15),B'10000000'                         0063
         BO    @RT00063                                            0063
*     GOTO C15C0007;                                               0064
*   IF SYM=$SYSMN(I)                /* SYMBOL FOUND?                 */
*     THEN                                                         0065
         L     @15,TPQDATA(,TPQINPUT)                              0065
         LR    @14,WAPTR                                           0065
         AL    @14,@TF00001                                        0065
         CLC   SYM(8,@15),$SYSMN-68(@14)                           0065
         BNE   @RF00065                                            0065
*     DO;                           /* YES                           */
*C15C0RT0:                                                         0067
*       ;                                                          0067
C15C0RT0 DS    0H                                                  0068
*       TPQ1=WAPTR;                 /* R1 PTS TO WORK AREA           */
         LR    TPQ1,WAPTR                                          0068
*       RETURN CODE(0);             /* RETURN CODE = 0               */
         SLR   @15,@15                                             0069
         L     @14,12(,@13)                                        0069
         LM    @02,@12,28(@13)                                     0069
         BR    @14                                                 0069
*     END;                                                         0070
*   ELSE                                                           0071
*     DO;                                                          0071
@RF00065 DS    0H                                                  0072
*C15C0007:                                                         0072
*       ;                                                          0072
C15C0007 DS    0H                                                  0073
*       I=I-1;                      /* INCREMENT COUNTER             */
         BCTR  I,0                                                 0073
*       GOTO C15C0005;                                             0074
         B     C15C0005                                            0074
*     END;                                                         0075
*C15C0010:                                                         0076
*   ;                                                              0076
C15C0010 DS    0H                                                  0077
*   IF TFWDPTR=0                    /* ANY MORE WORK AREAS ?         */
*     THEN                                                         0077
         L     @15,TFWDPTR(,WAPTR)                                 0077
         LTR   @15,@15                                             0077
         BNZ   @RF00077                                            0077
*     RETURN CODE(4);               /* NO                            */
         LA    @15,4                                               0078
         L     @14,12(,@13)                                        0078
         LM    @02,@12,28(@13)                                     0078
         BR    @14                                                 0078
*   WAPTR=TFWDPTR;                  /* UPDATE WORK PTR               */
@RF00077 L     WAPTR,TFWDPTR(,WAPTR)                               0079
*   GOTO C15C0002;                                                 0080
         B     C15C0002                                            0080
*                                                                  0081
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS SUBROUTINE SEARCHES FOR A MATCH ON $CID. IT IS INVOKED BY*/
*   /* PASSING A CODE OF 1                                           */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0081
*C15C0100:                                                         0081
*   ;                                                              0081
C15C0100 DS    0H                                                  0082
*   RETURN CODE(8);                 /* NOT SUPPORTED         @D32JPPW*/
*                                                                  0082
         LA    @15,8                                               0082
         L     @14,12(,@13)                                        0082
         LM    @02,@12,28(@13)                                     0082
         BR    @14                                                 0082
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS SUBROUTINE SEARCHES FOR A MATCH ON $SYSMN. IF THE WORK   */
*   /* AREA IS THE CURRENT USER'S, THE NEXT WORK AREA WILL BE        */
*   /* SEARCHED FOR A MATCH                                          */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0083
*C15C0200:                                                         0083
*   ;                                                              0083
C15C0200 DS    0H                                                  0084
*   IF LNAME^=BLANKS                /* IF LOCAL DO NOT TEST          */
*     THEN                                                         0084
         L     @15,TPQDATA(,TPQINPUT)                              0084
         CLC   LNAME(8,@15),BLANKS                                 0084
         BE    @RF00084                                            0084
*     DO;                           /* FOR LINE CONFLICT             */
*       WAPTR=REGSAV;               /* POINT TO CURRENT TWA          */
         LR    WAPTR,REGSAV                                        0086
*       IF $CTEQTT='0'B THEN        /* IF CT NOT = TT                */
         TM    $CTEQTT(WAPTR),B'00010000'                          0087
         BNZ   @RF00087                                            0087
*         DO;                       /* TEST FOR LINE CONFLICT        */
*           WAPTR=FSTAREA;          /* PNT TO 1ST TWA                */
         L     WAPTR,FSTAREA(,RCAPTR)                              0089
*           DO WHILE WAPTR^=0;      /* LOOP THRU ALL TWAS            */
         B     @DE00090                                            0090
@DL00090 DS    0H                                                  0091
*             IF WAPTR^=REGSAV THEN /* SKIP TEST FOR CURR TWA        */
         CR    WAPTR,REGSAV                                        0091
         BE    @RF00091                                            0091
*               DO;                                                0092
*                 IF LNAME=$LINENME(1)/* REQUESTED TT ON SAME        */
*                   THEN            /* ANOTHER USER CT               */
         L     @15,TPQDATA(,TPQINPUT)                              0093
         CLC   LNAME(8,@15),$LINENME(WAPTR)                        0093
         BNE   @RF00093                                            0093
*                   DO;                                            0094
*                     IF $CTEQTT^='0'B/* THAT IS NOT CT=TT           */
*                       THEN                                       0095
         TM    $CTEQTT(WAPTR),B'00010000'                          0095
         BZ    @RF00095                                            0095
*                       RETURN CODE(12);                           0096
         LA    @15,12                                              0096
         L     @14,12(,@13)                                        0096
         LM    @02,@12,28(@13)                                     0096
         BR    @14                                                 0096
*                   END;            /* FLAG REQUEST WITH RC 12       */
@RF00095 DS    0H                                                  0098
*               END;                                               0098
@RF00093 DS    0H                                                  0099
*             WAPTR=$TFWDPTR;       /* POINT TO NEXT TWA             */
@RF00091 L     WAPTR,$TFWDPTR(,WAPTR)                              0099
*           END;                                                   0100
@DE00090 LTR   WAPTR,WAPTR                                         0100
         BNZ   @DL00090                                            0100
*         END;                      /* NO LINE CONFLICT              */
*       WAPTR=FSTAREA;              /* POINT TO FIRST TWA            */
@RF00087 L     WAPTR,FSTAREA(,RCAPTR)                              0102
*     END;                                                         0103
*C15C0202:                                                         0104
*   I=$DEVCNTS;                     /* INITIALIZE COUNTER            */
@RF00084 DS    0H                                                  0104
C15C0202 LH    I,$DEVCNTS(,WAPTR)                                  0104
*   IF WAPTR=REGSAV                 /* IF CURRENT WORK AREA          */
*     THEN                                                         0105
         CR    WAPTR,REGSAV                                        0105
         BE    @RT00105                                            0105
*     GOTO C15C0210;                /* SKIP IT                       */
*C15C0205:                                                         0107
*   IF I=0                          /* IF 0 NO MORE DEVICES          */
*     THEN                                                         0107
C15C0205 LTR   I,I                                                 0107
         BZ    @RT00107                                            0107
*     GOTO C15C0210;                /* CK NEXT WORK AREA             */
*   IF $NOTDEV(I)='1'B THEN                                        0109
         LR    @15,I                                               0109
         MH    @15,@CH00406                                        0109
         ST    @15,@TF00001                                        0109
         ALR   @15,WAPTR                                           0109
         TM    $NOTDEV-68(@15),B'10000000'                         0109
         BO    @RT00109                                            0109
*     GOTO C15C0207;                                               0110
*   IF SYM=$SYSMN(I)                /* SYMBOL FOUND?                 */
*     THEN                                                         0111
         L     @15,TPQDATA(,TPQINPUT)                              0111
         LR    @14,WAPTR                                           0111
         AL    @14,@TF00001                                        0111
         CLC   SYM(8,@15),$SYSMN-68(@14)                           0111
         BE    @RT00111                                            0111
*     GOTO C15C0RT0;                /* YES                           */
*   ELSE                                                           0113
*     DO;                                                          0113
*C15C0207:                                                         0114
*       I=I-1;                                                     0114
C15C0207 BCTR  I,0                                                 0114
*       GOTO C15C0205;                                             0115
         B     C15C0205                                            0115
*     END;                                                         0116
*C15C0210:                                                         0117
*   IF TFWDPTR=0                    /* ANY MORE WORK AREAS ?         */
*     THEN                                                         0117
C15C0210 L     @15,TFWDPTR(,WAPTR)                                 0117
         LTR   @15,@15                                             0117
         BNZ   @RF00117                                            0117
*     RETURN CODE(4);               /* NO                            */
         LA    @15,4                                               0118
         L     @14,12(,@13)                                        0118
         LM    @02,@12,28(@13)                                     0118
         BR    @14                                                 0118
*   WAPTR=TFWDPTR;                  /* UPDATE WKPTR                  */
@RF00117 L     WAPTR,TFWDPTR(,WAPTR)                               0119
*   GOTO C15C0202;                  /* CONTINUE SEARCH               */
         B     C15C0202                                            0120
*                                                                  0121
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS SUBROUTINE ADDS A WORK AREA ONTO THE QUEUE. IT IS INVOKED*/
*   /* BY PASSING A CODE OF 3                                        */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0121
*C15C0300:                                                         0121
*   IF FSTAREA=0                    /* IF NO AREAS ON QUEUE          */
*     THEN                                                         0121
C15C0300 SLR   @15,@15                                             0121
         CL    @15,FSTAREA(,RCAPTR)                                0121
         BNE   @RF00121                                            0121
*     DO;                           /* THEN BUILD 1ST ENTRY          */
*       FSTAREA=TPQDATA;            /* FORWARD QUEUE PTR             */
         L     @14,TPQDATA(,TPQINPUT)                              0123
         ST    @14,FSTAREA(,RCAPTR)                                0123
*       LSTAREA=TPQDATA;            /* BACKWARD QUEUE PTR            */
         ST    @14,LSTAREA(,RCAPTR)                                0124
*       WAPTR=TPQDATA;              /* INIT WORK PTR                 */
         LR    WAPTR,@14                                           0125
*       TFWDPTR=0;                  /* BACKWARD QUEUE PTR            */
         ST    @15,TFWDPTR(,WAPTR)                                 0126
*       TBWDPTR=0;                  /* BACKWARD PTR = 0              */
         ST    @15,TBWDPTR(,WAPTR)                                 0127
*C15C0RT2:                                                         0128
*       TPQ1=TPQDATA;               /* R1 = TPQDATA                  */
C15C0RT2 L     TPQ1,TPQDATA(,TPQINPUT)                             0128
*       RETURN CODE(0);                                            0129
         SLR   @15,@15                                             0129
         L     @14,12(,@13)                                        0129
         LM    @02,@12,28(@13)                                     0129
         BR    @14                                                 0129
*     END;                                                         0130
*   IF LSTAREA=0                    /* IF BACKWARD PTR = 0           */
*     THEN                                                         0131
@RF00121 L     @15,LSTAREA(,RCAPTR)                                0131
         LTR   @15,@15                                             0131
         BNZ   @RF00131                                            0131
*     RETURN CODE(8);               /* ERROR!                        */
*                                                                  0132
         LA    @15,8                                               0132
         L     @14,12(,@13)                                        0132
         LM    @02,@12,28(@13)                                     0132
         BR    @14                                                 0132
*   /*****************************************************************/
*   /*                                                               */
*   /* ADD ENTRY TO AN EXISTING QUEUE                                */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0133
*   WAPTR=LSTAREA;                  /* PTR TO LAST ELEMENT ON Q      */
@RF00131 L     WAPTR,LSTAREA(,RCAPTR)                              0133
*   TFWDPTR=TPQDATA;                /* ADD TO END OF Q               */
         L     @15,TPQDATA(,TPQINPUT)                              0134
         ST    @15,TFWDPTR(,WAPTR)                                 0134
*   WAPTR=TPQDATA;                  /* INITIALIZE FIELDS IN WORK     */
         LR    WAPTR,@15                                           0135
*   TFWDPTR=0;                      /* AREA                          */
         SLR   @14,@14                                             0136
         ST    @14,TFWDPTR(,WAPTR)                                 0136
*   TBWDPTR=LSTAREA;                                               0137
         MVC   TBWDPTR(4,WAPTR),LSTAREA(RCAPTR)                    0137
*   LSTAREA=TPQDATA;                                               0138
         ST    @15,LSTAREA(,RCAPTR)                                0138
*   GOTO C15C0RT2;                  /* RETURN CODE = 0               */
         B     C15C0RT2                                            0139
*                                                                  0140
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS SUBROUTINE DELETES AN AREA FROM THE CHAIN. IT IS INVOKED */
*   /* BY PASSING A CODE OF 4                                        */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0140
*C15C0400:                                                         0140
*   DELAD=TPQDATA;                  /* R7 HAS ADDRESS                */
C15C0400 L     DELAD,TPQDATA(,TPQINPUT)                            0140
*C15C0402:                                                         0141
*   IF DELAD=WAPTR                  /* MATCH?                        */
*     THEN                                                         0141
C15C0402 CR    DELAD,WAPTR                                         0141
         BE    @RT00141                                            0141
*     GOTO C15C0S04;                                               0142
*   IF TFWDPTR=0                    /* IF NO FORWARD PTR             */
*     THEN                                                         0143
         L     @15,TFWDPTR(,WAPTR)                                 0143
         LTR   @15,@15                                             0143
         BNZ   @RF00143                                            0143
*     RETURN CODE(4);               /* NOT FOUND                     */
         LA    @15,4                                               0144
         L     @14,12(,@13)                                        0144
         LM    @02,@12,28(@13)                                     0144
         BR    @14                                                 0144
*   WAPTR=TFWDPTR;                                                 0145
@RF00143 L     WAPTR,TFWDPTR(,WAPTR)                               0145
*   GOTO C15C0402;                                                 0146
*                                                                  0146
         B     C15C0402                                            0146
*   /*****************************************************************/
*   /*                                                               */
*   /* A MATCH HAS BEEN FOUND                                        */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0147
*C15C0S04:                                                         0147
*   IF DELAD^=LSTAREA               /* LAST AREA ON CHAIN ?          */
*     THEN                                                         0147
C15C0S04 CL    DELAD,LSTAREA(,RCAPTR)                              0147
         BNE   @RT00147                                            0147
*     GOTO C15C0S24;                                               0148
*                                                                  0148
*   /*****************************************************************/
*   /*                                                               */
*   /* LAST AREA ON Q IS TO BE DELETED                               */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0149
*   IF FSTAREA=LSTAREA THEN                                        0149
         CLC   FSTAREA(4,RCAPTR),LSTAREA(RCAPTR)                   0149
         BNE   @RF00149                                            0149
*     DO;                                                          0150
*       LSTAREA=0;                  /* NONE LEFT                     */
         SLR   @15,@15                                             0151
         ST    @15,LSTAREA(,RCAPTR)                                0151
*       FSTAREA=0;                  /* ON Q                          */
         ST    @15,FSTAREA(,RCAPTR)                                0152
*       GOTO C15C0D04;              /* GOTO WRAP UP                  */
         B     C15C0D04                                            0153
*     END;                                                         0154
*   ELSE                                                           0155
*     DO;                           /* REMOVE ONLY LAST ELEMENT      */
@RF00149 DS    0H                                                  0156
*       LSTAREA=TBWDPTR;            /* ZERO OUT NEW                  */
         MVC   LSTAREA(4,RCAPTR),TBWDPTR(WAPTR)                    0156
*       WAPTR=TBWDPTR;              /* LAST ELEMENT'S                */
         L     WAPTR,TBWDPTR(,WAPTR)                               0157
*       TFWDPTR=0;                  /* FORWARD PTR                   */
         SLR   @15,@15                                             0158
         ST    @15,TFWDPTR(,WAPTR)                                 0158
*       GOTO C15C0D04;              /* GOTO WRAP UP                  */
         B     C15C0D04                                            0159
*     END;                                                         0160
*                                                                  0160
*   /*****************************************************************/
*   /*                                                               */
*   /* CHECK TO SEE IF ELEMENT IS FIRST ON Q                         */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0161
*C15C0S24:                                                         0161
*   IF DELAD=FSTAREA THEN                                          0161
C15C0S24 CL    DELAD,FSTAREA(,RCAPTR)                              0161
         BNE   @RF00161                                            0161
*     DO;                                                          0162
*       FSTAREA=TFWDPTR;            /* INIT FSTAREA PTR              */
         MVC   FSTAREA(4,RCAPTR),TFWDPTR(WAPTR)                    0163
*       WAPTR=TFWDPTR;                                             0164
         L     WAPTR,TFWDPTR(,WAPTR)                               0164
*       TBWDPTR=0;                  /* ZERO OUT 2ND ELEM BK PTR      */
         SLR   @15,@15                                             0165
         ST    @15,TBWDPTR(,WAPTR)                                 0165
*       GOTO C15C0D04;              /* GOTO TO WRAP UP               */
         B     C15C0D04                                            0166
*     END;                                                         0167
*                                                                  0167
*   /*****************************************************************/
*   /*                                                               */
*   /* ELEMENT IS NOT FIRST ON QUEUE                                 */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0168
*   $TFWDPTR->TBWDPTR=              /* RE-CHAIN ELEMENTS             */
*       TBWDPTR;                                                   0168
@RF00161 L     @15,$TFWDPTR(,WAPTR)                                0168
         MVC   TBWDPTR(4,@15),TBWDPTR(WAPTR)                       0168
*   $TBWDPTR->TFWDPTR=TFWDPTR;                                     0169
         L     @15,$TBWDPTR(,WAPTR)                                0169
         MVC   TFWDPTR(4,@15),TFWDPTR(WAPTR)                       0169
*C15C0D04:                                                         0170
*   TPQ1=DELAD;                     /* SET R1                        */
C15C0D04 LR    TPQ1,DELAD                                          0170
*   RETURN CODE(0);                                                0171
         SLR   @15,@15                                             0171
         L     @14,12(,@13)                                        0171
         LM    @02,@12,28(@13)                                     0171
         BR    @14                                                 0171
*                                                                  0172
*   /*****************************************************************/
*   /*                                                               */
*   /* THIS SUBROUTINE SEARCHES FOR A MATCH ON $TESTCID. IT IS       */
*   /* INVOKED BY PASSING A CODE OF 5                                */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0172
*C15C0500:                                                         0172
*   RETURN CODE(8);                 /* NOT SUPPORTED         @D32JPPW*/
C15C0500 LA    @15,8                                               0172
         L     @14,12(,@13)                                        0172
         LM    @02,@12,28(@13)                                     0172
         BR    @14                                                 0172
*   DO;                             /* ATDSPLY                       */
*   END;                            /* ATDSPLY                       */
*   END ISTCC015;                                                  0175
@DATA    DS    0H
@CH00406 DC    H'68'
@DATD    DSECT
         DS    0F
@TF00001 DS    F
ISTCC015 CSECT
         DS    0F
@CF00033 DC    F'1'
@CF00112 DC    F'3'
@CF00100 DC    F'4'
@CF00381 DC    F'5'
@DATD    DSECT
         DS    0D
         ORG   *+1-(*-@DATD)/(*-@DATD) INSURE DSECT DATA
@ENDDATD EQU   *
ISTCC015 CSECT
         DS    0F
@SIZDATD DC    AL1(0)
         DC    AL3(@ENDDATD-@DATD)
         DS    0D
BLANKS   DC    CL8'        '
PATCH    DC    10F'0'
TAB      DC    AL4(C15C0000)
         DC    AL4(C15C0100)
         DC    AL4(C15C0200)
         DC    AL4(C15C0300)
         DC    AL4(C15C0400)
         DC    AL4(C15C0500)
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
RCAPTR   EQU   @04
TPQINPUT EQU   @03
TPQ1     EQU   @01
R0       EQU   @00
R8       EQU   @08
I        EQU   @05
CODREG   EQU   @06
REGSAV   EQU   @09
DELAD    EQU   @07
WAPTR    EQU   @02
TPQUIN   EQU   0
TPQRCA   EQU   TPQUIN
TPQDATA  EQU   TPQUIN+4
TPCODE   EQU   TPQUIN+8
DAF      EQU   0
DTAFLD   EQU   0
SYM      EQU   DTAFLD
LNAME    EQU   DTAFLD+8
$RCAAREA EQU   0
$POINTER EQU   $RCAAREA+100
$FSTAREA EQU   $POINTER+8
$LSTAREA EQU   $POINTER+12
$TRTBLA  EQU   $POINTER+124
$CONSTNT EQU   $RCAAREA+244
$RCAFLG  EQU   $RCAAREA+604
TOLTEPWA EQU   0
$SCTTBLE EQU   TOLTEPWA
$TESTOPT EQU   $SCTTBLE+2
$ERROPT  EQU   $SCTTBLE+3
$PDEVFLG EQU   $SCTTBLE+10
$CDSFLGS EQU   $SCTTBLE+11
$CDS8T19 EQU   $SCTTBLE+20
$EXECFLG EQU   $SCTTBLE+33
$OLTFLGS EQU   $SCTTBLE+36
$OLTFLG2 EQU   $SCTTBLE+37
$TOTFLG1 EQU   $SCTTBLE+38
$CTEQTT  EQU   $TOTFLG1
$ROUTMSK EQU   $SCTTBLE+40
$CDA     EQU   TOLTEPWA+100
$TFWDPTR EQU   $CDA+8
$TBWDPTR EQU   $CDA+12
$RCA     EQU   $CDA+44
$OLTPTR  EQU   $CDA+52
$HIMOREC EQU   $CDA+60
$COMMFLG EQU   TOLTEPWA+224
$FLAG1   EQU   $COMMFLG
$FLAG2   EQU   $COMMFLG+1
$FLAG3   EQU   $COMMFLG+2
$FLAG4   EQU   $COMMFLG+3
$FLAG5   EQU   $COMMFLG+4
$EOJ     EQU   $FLAG5
$CANCEL  EQU   $EOJ
$FLAG6   EQU   $COMMFLG+5
$ABNDBIT EQU   $FLAG6
$FLAG7   EQU   $COMMFLG+6
$FLAG8   EQU   $COMMFLG+7
$FLAG9   EQU   $COMMFLG+8
$FLAG10  EQU   $COMMFLG+9
$FLAG11  EQU   $COMMFLG+10
$FLAG12  EQU   $COMMFLG+11
$FLAG13  EQU   $COMMFLG+12
$DEVTBLE EQU   TOLTEPWA+240
$DEVCDS  EQU   $DEVTBLE
$DEVUNAD EQU   $DEVCDS
@NM00039 EQU   $DEVUNAD+2
$DEVFEAT EQU   $DEVCDS+4
$DEVCDSF EQU   $DEVCDS+9
$DEVSDCF EQU   $DEVCDS+10
$$SYMNME EQU   $DEVCDS+12
$DEVFLG1 EQU   $DEVTBLE+20
$EVNCPLT EQU   $DEVFLG1
$ATTNEXP EQU   $DEVFLG1
$INTOCC  EQU   $DEVFLG1
$DEVFLG2 EQU   $DEVTBLE+21
$DEVTECB EQU   $DEVTBLE+22
$OPIS    EQU   $DEVTECB
$OPND    EQU   $DEVTECB+2
$DEVFLG3 EQU   $DEVTBLE+27
$NOTDEV  EQU   $DEVFLG3
$SIOFLG  EQU   $DEVFLG3
$SYSMN   EQU   $DEVTBLE+28
$IFTOUT  EQU   $DEVTBLE+36
$DEVSESP EQU   $IFTOUT
$SSCPDAF EQU   $IFTOUT+6
$LDNCBPT EQU   $DEVTBLE+48
$RNINFO  EQU   $DEVTBLE+56
$LINENME EQU   $RNINFO
$DEVFLG5 EQU   $RNINFO+8
$DEVFLG4 EQU   $DEVTBLE+65
$DEVCNTS EQU   TOLTEPWA+1464
$SLTBL   EQU   TOLTEPWA+1468
$RUNTEST EQU   $SLTBL+13
$TESTFLG EQU   $SLTBL+21
$SECLST  EQU   $SLTBL+22
#EXITA   EQU   TOLTEPWA+2632
$CCOMDAT EQU   TOLTEPWA+2644
$CFLGS   EQU   $CCOMDAT+16
$24FEMSG EQU   TOLTEPWA+2681
$24CATMG EQU   $24FEMSG+11
@NM00048 EQU   TOLTEPWA+2776
$OUNTPTR EQU   @NM00048+4
$NSPTR   EQU   $OUNTPTR
$NSCNT   EQU   @NM00048+10
$ENXX    EQU   @NM00048+15
$IMITX   EQU   $ENXX
$TBSDATA EQU   TOLTEPWA+2796
SVESC033 EQU   TOLTEPWA+3160
SVECC013 EQU   TOLTEPWA+3232
SVEIC003 EQU   TOLTEPWA+3592
SVESC022 EQU   TOLTEPWA+3736
SVECC011 EQU   TOLTEPWA+4024
$TRTBL   EQU   0
#EXIT    EQU   0
FSTAREA  EQU   $FSTAREA
LSTAREA  EQU   $LSTAREA
TBWDPTR  EQU   $TBWDPTR
TFWDPTR  EQU   $TFWDPTR
SVECC012 EQU   SVESC022
SVEIC00A EQU   SVEIC003
SVEIC004 EQU   SVEIC003
SVEIC005 EQU   SVEIC003
SVESC02A EQU   SVESC022
SVESC02B EQU   SVESC022
SVESC02D EQU   SVESC022
SVESC02E EQU   SVESC022
SVESC02F EQU   SVECC013
SVESC024 EQU   SVESC022
SVESC027 EQU   SVESC022
SVESC029 EQU   SVESC033
SVESC031 EQU   SVECC013
SVESC032 EQU   SVECC011
SVETC037 EQU   SVEIC003
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
SVECC010 EQU   TOLTEPWA+3952
SVETC035 EQU   TOLTEPWA+3880
SVESC030 EQU   TOLTEPWA+3808
SVESC020 EQU   TOLTEPWA+3664
SVEIC002 EQU   TOLTEPWA+3520
SVECC014 EQU   TOLTEPWA+3376
SVESC120 EQU   TOLTEPWA+3304
SVESC025 EQU   TOLTEPWA+3088
@NM00050 EQU   TOLTEPWA+2980
$RPLERR  EQU   TOLTEPWA+2977
@NM00049 EQU   TOLTEPWA+2976
$R13PR3  EQU   TOLTEPWA+2972
$CEINT2  EQU   TOLTEPWA+2968
$CEINT1  EQU   TOLTEPWA+2964
$MSGGET  EQU   TOLTEPWA+2960
$ACQLIST EQU   TOLTEPWA+2956
$R4SAVE1 EQU   TOLTEPWA+2952
$CLSISS  EQU   TOLTEPWA+2950
$CLSCNT  EQU   TOLTEPWA+2948
$CUTABLE EQU   TOLTEPWA+2868
$BUFSZ2  EQU   TOLTEPWA+2864
$RESID2  EQU   TOLTEPWA+2860
$OLTCCW2 EQU   TOLTEPWA+2856
$ENDBFR2 EQU   TOLTEPWA+2852
$1STBFR2 EQU   TOLTEPWA+2848
$TECB2   EQU   TOLTEPWA+2844
$BUFSZ1  EQU   TOLTEPWA+2840
$RESID1  EQU   TOLTEPWA+2836
$OLTCCW1 EQU   TOLTEPWA+2832
$ENDBFR1 EQU   TOLTEPWA+2828
$1STBFR1 EQU   TOLTEPWA+2824
$TECB1   EQU   TOLTEPWA+2820
$WAITIME EQU   TOLTEPWA+2816
$TRTN#   EQU   TOLTEPWA+2815
$WIODEV  EQU   TOLTEPWA+2814
$RQSTSZE EQU   TOLTEPWA+2812
$RQSTPTR EQU   TOLTEPWA+2808
$R4SAVE  EQU   TOLTEPWA+2804
$PARTADR EQU   TOLTEPWA+2800
$CTWIDTH EQU   TOLTEPWA+2795
$CTLINE  EQU   TOLTEPWA+2794
$APWIDTH EQU   TOLTEPWA+2793
$APLINE  EQU   TOLTEPWA+2792
$INDEX   EQU   $IMITX
$UMXX    EQU   @NM00048+14
$NSXX    EQU   @NM00048+12
$ATACNT  EQU   $NSCNT
$CTR     EQU   @NM00048+8
$ATAPTR  EQU   $NSPTR
$DDRPTR  EQU   @NM00048
$DTORESP EQU   TOLTEPWA+2712
$APNAME  EQU   TOLTEPWA+2704
$24SYMNE EQU   $24CATMG+4
$24DEVAD EQU   $24CATMG
$24RTN#  EQU   $24FEMSG+8
$ESECTID EQU   $24FEMSG
$24FLGS  EQU   TOLTEPWA+2680
$24SAVE2 EQU   TOLTEPWA+2676
$24SAVE1 EQU   TOLTEPWA+2672
$24UNADR EQU   TOLTEPWA+2668
$24SAV13 EQU   TOLTEPWA+2664
$24RETCD EQU   TOLTEPWA+2663
$MACID   EQU   TOLTEPWA+2661
$CSPARE  EQU   $CFLGS
$C2WAY   EQU   $CFLGS
$CINCT   EQU   $CCOMDAT+12
$CINADR  EQU   $CCOMDAT+8
$COUTCT  EQU   $CCOMDAT+4
$COUTAD  EQU   $CCOMDAT
ROOTLOC  EQU   TOLTEPWA+2640
$RETREG  EQU   TOLTEPWA+2636
$WORK    EQU   TOLTEPWA+2376
$EXTA    EQU   TOLTEPWA+2320
$PASSONA EQU   TOLTEPWA+2264
$TRMINPT EQU   TOLTEPWA+2184
$INBUFR  EQU   TOLTEPWA+2104
$BUFFER  EQU   TOLTEPWA+1976
$TLTRPL3 EQU   TOLTEPWA+1856
$TLTRPL2 EQU   TOLTEPWA+1736
$TLTRPL1 EQU   TOLTEPWA+1616
@NM00047 EQU   $SLTBL+135
$HIGHRTN EQU   $SLTBL+134
$PRIMADR EQU   $SLTBL+130
$CTSTPT  EQU   $SLTBL+128
$TSTCNT  EQU   $SLTBL+126
$SECFLGS EQU   $SECLST+3
$SECTION EQU   $SECLST
$SECACT  EQU   $TESTFLG
$CANTRUN EQU   $TESTFLG
$FINAL   EQU   $TESTFLG
$TESTSUF EQU   $RUNTEST+5
$TESTNUM EQU   $RUNTEST+1
$LETPRF  EQU   $RUNTEST
$SYMBOLC EQU   $SLTBL+5
$FAMILY  EQU   $SLTBL
$CDEVPT  EQU   TOLTEPWA+1466
$FEEDBCK EQU   $DEVTBLE+66
$WTISUED EQU   $DEVFLG4
$EXIOISD EQU   $DEVFLG4
$REMWRIT EQU   $DEVFLG4
$REMDONE EQU   $DEVFLG4
$2NDUSED EQU   $DEVFLG4
$1STUSED EQU   $DEVFLG4
$IGLXIFB EQU   $DEVFLG4
$EXIOLV3 EQU   $DEVFLG4
@NM00046 EQU   $DEVFLG5
$DVBASIC EQU   $DEVFLG5
$ASCII   EQU   $DEVFLG5
$DEVLU   EQU   $DEVFLG5
$OPNDFAL EQU   $DEVFLG5
$ACQNCB  EQU   $DEVFLG5
$REMOTE  EQU   $DEVFLG5
$ENDNODE EQU   $DEVFLG5
$CID     EQU   $DEVTBLE+52
$DVCOL   EQU   $LDNCBPT+2
$DVROW   EQU   $LDNCBPT
$NCSPLP  EQU   $DEVTBLE+44
$DVLN    EQU   $SSCPDAF
$DAF     EQU   $DEVSESP+4
$VARYPAB EQU   $DEVSESP
@NM00045 EQU   $DEVFLG3
$CLRSNT  EQU   $DEVFLG3
$OLTERR  EQU   $DEVFLG3
$SRTEST  EQU   $DEVFLG3
$DVSNDOK EQU   $SIOFLG
$POLLREQ EQU   $DEVFLG3
$ACQRED  EQU   $DEVFLG3
$DVINCT  EQU   $DEVTBLE+26
$DVBRKST EQU   $OPND+1
$DVBRKSN EQU   $OPND
$DVSEQNO EQU   $OPIS
$CEINTRP EQU   $DEVFLG2
$TESTMDE EQU   $DEVFLG2
$DEVALOC EQU   $DEVFLG2
$ALLDATA EQU   $DEVFLG2
$ENDCNTL EQU   $DEVFLG2
$CTLDEV  EQU   $DEVFLG2
$NOCDS   EQU   $DEVFLG2
$DATAIN  EQU   $DEVFLG2
$PRIMARY EQU   $DEVFLG1
$DVCTBYT EQU   $INTOCC
$DEVACT  EQU   $DEVFLG1
$DVLGMDE EQU   $ATTNEXP
$DVSPRM  EQU   $EVNCPLT
$GRABBED EQU   $DEVFLG1
$CATASTR EQU   $DEVFLG1
$LETGO   EQU   $DEVFLG1
$CURELEM EQU   $$SYMNME+4
$MSGOTSD EQU   $$SYMNME
$EXTDEV  EQU   $DEVCDS+11
@NM00044 EQU   $DEVSDCF
$NOTPRIM EQU   $DEVSDCF
@NM00043 EQU   $DEVCDSF
@NM00042 EQU   $DEVCDSF
@NM00041 EQU   $DEVCDSF
$CDSNAME EQU   $DEVCDSF
$EXTRN   EQU   $DEVCDSF
$CEVOLUM EQU   $DEVCDSF
$SHARD   EQU   $DEVCDSF
$DEVFPM  EQU   $DEVCDSF
$DEVCNT  EQU   $DEVCDS+8
$DEVTYPE EQU   $DEVFEAT+3
$DEVCLAS EQU   $DEVFEAT+2
$DEVFRRS EQU   $DEVFEAT+1
$DEVMOD  EQU   $DEVFEAT
$DEVRDGT EQU   @NM00039+1
$DEVCTLU EQU   @NM00039+1
$DEVCHAN EQU   @NM00039
@NM00040 EQU   @NM00039
$CTINDX  EQU   $DEVUNAD
$FLAG16  EQU   $COMMFLG+15
$FLAG15  EQU   $COMMFLG+14
$FLAG14  EQU   $COMMFLG+13
$TEP2ND  EQU   $FLAG13
$TEP1ST  EQU   $FLAG13
$CATMSG  EQU   $FLAG13
$PRMPTSW EQU   $FLAG13
$DEVENT  EQU   $FLAG13
$OLTMACC EQU   $FLAG13
$LGON    EQU   $FLAG13
$CTLOGON EQU   $FLAG13
@NM00038 EQU   $FLAG12
$VARYINP EQU   $FLAG12
$ENDTEST EQU   $FLAG12
$VRYHRD  EQU   $FLAG12
$VRYSFT  EQU   $FLAG12
$POSTFLG EQU   $FLAG12
$OPTMSG  EQU   $FLAG12
$FEORCAT EQU   $FLAG11
@NM00037 EQU   $FLAG11
@NM00036 EQU   $FLAG10
$INBND   EQU   $FLAG10
$WAITFLG EQU   $FLAG10
$DPRINT  EQU   $FLAG10
$HOLD    EQU   $FLAG9
$NOTRRCH EQU   $FLAG9
@NM00035 EQU   $FLAG9
$COPY    EQU   $FLAG9
$LSTLNSW EQU   $FLAG9
$MULLNSW EQU   $FLAG9
$REMSW   EQU   $FLAG9
$IGRES   EQU   $FLAG9
$TCECM   EQU   $FLAG8
$VS2     EQU   $FLAG8
$VS1     EQU   $FLAG8
$EDOS    EQU   $FLAG8
@NM00034 EQU   $FLAG8
$TWOWAY  EQU   $FLAG8
@NM00033 EQU   $FLAG8
$RCVMSG  EQU   $FLAG7
$RCVRFLG EQU   $FLAG7
$SNDRFLG EQU   $FLAG7
$LDOIS   EQU   $FLAG7
$DCONTCT EQU   $FLAG7
$EXIOWAT EQU   $FLAG7
$2NDDATA EQU   $FLAG7
$1STDATA EQU   $FLAG7
$CIREQ   EQU   $FLAG6
$ABTERM  EQU   $ABNDBIT
$FSTMCIS EQU   $FLAG6
$DISCREQ EQU   $FLAG6
$DISCISS EQU   $FLAG6
$CHANGE  EQU   $FLAG6
$CTERROR EQU   $FLAG6
$RECAL11 EQU   $FLAG6
@NM00032 EQU   $FLAG5
$PROGCK  EQU   $CANCEL
$PRINTAP EQU   $FLAG5
@NM00031 EQU   $FLAG5
$MSG922  EQU   $FLAG5
$CT924   EQU   $FLAG5
$FSTCAT  EQU   $FLAG5
$FSTFE   EQU   $FLAG5
$ACTOPND EQU   $FLAG4
$ACQCUTT EQU   $FLAG4
$CLSSACT EQU   $FLAG4
$BACKINT EQU   $FLAG4
$DMSGSW  EQU   $FLAG4
$TSTDEVP EQU   $FLAG4
$APRQPER EQU   $FLAG4
$OPCOM   EQU   $FLAG4
$NEWAP   EQU   $FLAG3
$ALTPRTR EQU   $FLAG3
$OPTERR  EQU   $FLAG3
$PRTONLY EQU   $FLAG3
$REQSTOR EQU   $FLAG3
$LOGOFFE EQU   $FLAG3
$TSTERR  EQU   $FLAG3
$DEVERR  EQU   $FLAG3
$PARTIAL EQU   $FLAG2
$NRMTERM EQU   $FLAG2
$VALDTST EQU   $FLAG2
$VALDDEV EQU   $FLAG2
$DBLSLSH EQU   $FLAG2
$NDR     EQU   $FLAG2
@NM00030 EQU   $FLAG2
$FTTHR   EQU   $FLAG2
$OLTACT  EQU   $FLAG1
$NORELDV EQU   $FLAG1
@NM00029 EQU   $FLAG1
$OPTCHNG EQU   $FLAG1
$DEVCHNG EQU   $FLAG1
$TESTCNG EQU   $FLAG1
$CNSLFG  EQU   $FLAG1
$TEP3RD  EQU   $FLAG1
@NM00028 EQU   $CDA+120
$CUCNT   EQU   $CDA+118
@NM00027 EQU   $CDA+117
$PRTFORM EQU   $CDA+116
$OPISCNT EQU   $CDA+114
$OPNDCNT EQU   $CDA+112
$GETMSZE EQU   $CDA+110
$GRCNTS  EQU   $CDA+108
$CTLCNT  EQU   $CDA+106
$ACTLVL  EQU   $CDA+105
$PRNTLVL EQU   $CDA+104
$ERRCNTA EQU   $CDA+102
$TLCNT   EQU   $CDA+100
$TIMEALW EQU   $CDA+96
$PTRAREA EQU   $CDA+92
$GETMPTR EQU   $CDA+88
$R13PTRT EQU   $CDA+84
$R13PTR  EQU   $CDA+80
$TEPEND  EQU   $CDA+76
$PLINKDL EQU   $CDA+72
$TEPBEGN EQU   $CDA+68
$FRELPTR EQU   $CDA+64
$HIGHADR EQU   $HIMOREC
$LOMOREC EQU   $CDA+56
$LOWADDR EQU   $OLTPTR
$ENDCOMM EQU   $CDA+48
$COMMON  EQU   $RCA
$SLASHAD EQU   $CDA+32
$PASSON  EQU   $CDA+28
$TOLBRTB EQU   $CDA+24
$SCTPTR8 EQU   $CDA+20
$SCTPTR  EQU   $CDA+16
@NM00026 EQU   $CDA
@NM00025 EQU   $SCTTBLE+98
$SCTLWTC EQU   $SCTTBLE+96
$SCTLWTA EQU   $SCTTBLE+92
#EXT     EQU   $SCTTBLE+88
#PASS    EQU   $SCTTBLE+84
#TABLE   EQU   $SCTTBLE+80
#MSGIDAC EQU   $SCTTBLE+78
@NM00024 EQU   $SCTTBLE+71
$RETMASK EQU   $SCTTBLE+70
$R249255 EQU   $ROUTMSK+29
$R241248 EQU   $ROUTMSK+28
$R233240 EQU   $ROUTMSK+27
$R225232 EQU   $ROUTMSK+26
$R217224 EQU   $ROUTMSK+25
$R209216 EQU   $ROUTMSK+24
$R201208 EQU   $ROUTMSK+23
$R193200 EQU   $ROUTMSK+22
$R185192 EQU   $ROUTMSK+21
$R177184 EQU   $ROUTMSK+20
$R169176 EQU   $ROUTMSK+19
$R161168 EQU   $ROUTMSK+18
$R153160 EQU   $ROUTMSK+17
$R145152 EQU   $ROUTMSK+16
$R137144 EQU   $ROUTMSK+15
$R129136 EQU   $ROUTMSK+14
$R121128 EQU   $ROUTMSK+13
$R113120 EQU   $ROUTMSK+12
$R105112 EQU   $ROUTMSK+11
$R097104 EQU   $ROUTMSK+10
$R089096 EQU   $ROUTMSK+9
$R081088 EQU   $ROUTMSK+8
$R073080 EQU   $ROUTMSK+7
$R065072 EQU   $ROUTMSK+6
$R057064 EQU   $ROUTMSK+5
$R049056 EQU   $ROUTMSK+4
$R041048 EQU   $ROUTMSK+3
$R033040 EQU   $ROUTMSK+2
$R025032 EQU   $ROUTMSK+1
$R017024 EQU   $ROUTMSK
$TOTFLG2 EQU   $SCTTBLE+39
@NM00023 EQU   $TOTFLG1
@NM00022 EQU   $TOTFLG1
@NM00021 EQU   $TOTFLG1
$CURELOD EQU   $TOTFLG1
@NM00020 EQU   $TOTFLG1
@NM00019 EQU   $TOTFLG1
$LINESHR EQU   $TOTFLG1
@NM00018 EQU   $OLTFLG2
@NM00017 EQU   $OLTFLG2
@NM00016 EQU   $OLTFLG2
@NM00015 EQU   $OLTFLG2
@NM00014 EQU   $OLTFLG2
@NM00013 EQU   $OLTFLG2
@NM00012 EQU   $OLTFLG2
$TALK    EQU   $OLTFLG2
$DYCOM   EQU   $OLTFLGS
@NM00011 EQU   $OLTFLGS
$TRACE   EQU   $OLTFLGS
$RETCODE EQU   $OLTFLGS
$CONTCB  EQU   $OLTFLGS
$RETAIN  EQU   $OLTFLGS
$CLEANRT EQU   $OLTFLGS
$MANINTV EQU   $OLTFLGS
$OLTSIZE EQU   $SCTTBLE+34
$QSCTMOD EQU   $EXECFLG
$CTRLMOD EQU   $EXECFLG
$CLEANUP EQU   $EXECFLG
$LSTPDEV EQU   $EXECFLG
$ERRCNT  EQU   $EXECFLG
$RTNSLCT EQU   $EXECFLG
$MULTDEV EQU   $EXECFLG
@NM00010 EQU   $EXECFLG
$RMSKCNT EQU   $SCTTBLE+32
$SYNAME  EQU   $CDS8T19+4
$EXTSIG  EQU   $CDS8T19+3
$CDFLGS  EQU   $CDS8T19+1
$CDSCNT  EQU   $CDS8T19
$PDEVDSC EQU   $SCTTBLE+16
$PDEVADR EQU   $SCTTBLE+12
$COMMCN  EQU   $CDSFLGS
$CUSTSYM EQU   $CDSFLGS
$TWOCHSW EQU   $CDSFLGS
$SYMNAME EQU   $CDSFLGS
$EXTINTC EQU   $CDSFLGS
$CEVOL   EQU   $CDSFLGS
$SHARED  EQU   $CDSFLGS
$FPM     EQU   $CDSFLGS
$LASTSUB EQU   $PDEVFLG
@NM00009 EQU   $PDEVFLG
@NM00008 EQU   $PDEVFLG
@NM00007 EQU   $PDEVFLG
$LASTDEV EQU   $PDEVFLG
@NM00006 EQU   $PDEVFLG
$EXFILPT EQU   $PDEVFLG
$FPMOLD  EQU   $PDEVFLG
$TSSSYM  EQU   $SCTTBLE+8
$SCTLEVL EQU   $SCTTBLE+7
$DRIVER  EQU   $SCTTBLE+6
$RT0916  EQU   $SCTTBLE+5
$RT0108  EQU   $SCTTBLE+4
$LOOPTST EQU   $ERROPT
$LOOPERR EQU   $ERROPT
$NERRPRT EQU   $ERROPT
$NOCNTRL EQU   $ERROPT
$ALTPRNT EQU   $ERROPT
$CATERR  EQU   $ERROPT
$ASTERIK EQU   $ERROPT
$TESTERR EQU   $ERROPT
$FSTCOMM EQU   $TESTOPT
$INDEFLP EQU   $TESTOPT
$NOPRT   EQU   $TESTOPT
$PARAPRT EQU   $TESTOPT
@NM00005 EQU   $TESTOPT
$ERRLPCT EQU   $SCTTBLE
$TLTEND  EQU   $RCAAREA+945
$CNSLID  EQU   $RCAAREA+936
$EXITSAV EQU   $RCAAREA+864
$TRASCII EQU   $RCAAREA+608
@NM00004 EQU   $RCAAREA+605
$VTAMEND EQU   $RCAFLG
$TPPOSTD EQU   $RCAFLG
$NEWCT   EQU   $RCAFLG
$ABNDALL EQU   $RCAFLG
$CUTESTB EQU   $RCAFLG
$CONSOLE EQU   $RCAFLG
$TPLOGON EQU   $RCAFLG
$UPDATE  EQU   $RCAFLG
$DEVAREA EQU   $RCAAREA+600
$CTDVAR  EQU   $RCAAREA+596
$BUFFS   EQU   $RCAAREA+464
$TLTNIB  EQU   $CONSTNT+140
$TLTPRPL EQU   $CONSTNT+20
@NM00003 EQU   $CONSTNT+4
@NM00002 EQU   $CONSTNT+2
$USECNT  EQU   $CONSTNT
$CURRTWA EQU   $POINTER+140
$CTNAME  EQU   $POINTER+132
$CTARGX  EQU   $POINTER+128
$COMINT  EQU   $POINTER+120
$QUEHNDL EQU   $POINTER+116
@NM00001 EQU   $POINTER+36
$RTNPTR  EQU   $POINTER+32
$TLTECB2 EQU   $POINTER+28
$TLTECB1 EQU   $POINTER+24
$CLEANP  EQU   $POINTER+20
$ABEND   EQU   $POINTER+16
$CVTSAVE EQU   $POINTER+4
$TOLTEP  EQU   $POINTER
$TLTACB  EQU   $RCAAREA
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RT00061 EQU   C15C0010
@RT00063 EQU   C15C0007
@RT00105 EQU   C15C0210
@RT00107 EQU   C15C0210
@RT00109 EQU   C15C0207
@RT00111 EQU   C15C0RT0
@RT00141 EQU   C15C0S04
@RT00147 EQU   C15C0S24
@ENDDATA EQU   *
         END   ISTCC015,(C'PLS2034',0702,80232)
