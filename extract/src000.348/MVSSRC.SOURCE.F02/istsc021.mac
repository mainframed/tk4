         TITLE 'ISTSC021,CONVERT. CONVERTS DATA TO HEX OR EBCDIC'
ISTSC021 CSECT ,                                                   0001
@MAINENT DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL1(16)                                             0001
         DC    C'ISTSC021  80.232'                                 0001
         DROP  @15
@PROLOG  ST    @14,12(,@13)                                        0001
         ST    @00,20(,@13)                                        0001
         STM   @02,@12,28(@13)                                     0001
         BALR  @04,0                                               0001
@PSTART  DS    0H                                                  0001
         USING @PSTART,@04                                         0001
*                                                                  0029
*/********************************************************************/
*/*      SETUP TO PERFORM CONVERSION                                 */
*/********************************************************************/
*                                                                  0030
*S21C0000:                                                         0030
*   ;                                                              0030
S21C0000 DS    0H                                                  0031
*   R5=$CNVFROM;                    /* GET FROM ADDR INTO REG.5      */
         L     R5,$CNVFROM(,CONMAP)                                0031
*   R6=$CNVTO;                      /* GET TO ADDR INTO REG.6        */
         L     R6,$CNVTO(,CONMAP)                                  0032
*   R7=CNVCT;                       /* GET COUNT INTO REG.7          */
         LA    @14,12                                              0033
         ALR   @14,CONMAP                                          0033
         SLR   R7,R7                                               0033
         IC    R7,CNVCT(,@14)                                      0033
*   IF R7=0                         /* IF COUNT=0, RETURN TO         */
*     THEN                                                         0034
         LTR   R7,R7                                               0034
         BZ    @RT00034                                            0034
*     GOTO S21C0006;                /* CALLER. OTHERWISE CONVERT     */
*   AXFLGA='00'X;                   /* CLEAR FLAG                    */
         MVI   AXFLGA,X'00'                                        0036
*   R10=R5+R7;                      /* PUT END ADDR IN REG.10        */
         LR    R10,R5                                              0037
         ALR   R10,R7                                              0037
*   R3=ADDR(AXATBL);                /* SET PTR TO CHAR TABLE         */
         LA    R3,AXATBL                                           0038
*   IF HEXBIT='1'B                  /* IS CONVERT HEX TO EBCDIC      */
*     THEN                                                         0039
         TM    HEXBIT(@14),B'10000000'                             0039
         BO    @RT00039                                            0039
*     GOTO S21C0005;                /* YES, GOTO H-E ROUTINE         */
*/********************************************************************/
*/*      EBCDIC  TO  HEX  CONVERSION                                 */
*/********************************************************************/
*                                                                  0041
*S21C0001:                                                         0041
*   ;                                                              0041
S21C0001 DS    0H                                                  0042
*   DO R9=16 TO 1 BY-1;             /* LOOP THRU CHAR TABLE          */
         LA    R9,16                                               0042
@DL00042 DS    0H                                                  0043
*     IF INBUF=AXATBL(R9)           /* COMPARE HEX NUMBER TO EQU1    */
*       THEN                                                       0043
         LA    @14,AXATBL-1(R9)                                    0043
         CLC   INBUF(1,R5),0(@14)                                  0043
         BE    @RT00043                                            0043
*       GOTO IST0002;               /* IF FOUND, TAKE BRANCH         */
*   END;                            /* IF NOT FOUND IN TABLE, SET    */
         BCTR  R9,0                                                0045
         LTR   R9,R9                                               0045
         BP    @DL00042                                            0045
*   R15=8;                          /* REGISTER 15 TO 8              */
         LA    R15,8                                               0046
*   CONMAP=R5;                      /* PUT ADDRESS OF FAILING CHAR 0047
*                                      INTO REG1                     */
         LR    CONMAP,R5                                           0047
*   GOTO S21C0007;                  /*                               */
         B     S21C0007                                            0048
*IST0002:                                                          0049
*   ;                               /*                               */
IST0002  DS    0H                                                  0050
*   R11=R9-1;                       /* SAVE EQUIVALENT HEX CHAR      */
         LR    R11,R9                                              0050
         BCTR  R11,0                                               0050
*   IF AXFLGA^='00'X                /* IF 2ND BYTE, GO OUTPUT IT     */
*     THEN                                                         0051
         CLI   AXFLGA,X'00'                                        0051
         BNE   @RT00051                                            0051
*     GOTO S21C0003;                /*                               */
*   R12=R11*16;                     /* PUT 1ST CHAR IN REG 12        */
         LR    R12,R11                                             0053
         SLA   R12,4                                               0053
*   AXFLGA='F0'X;                   /* SET FLAG TO NON-ZERO VALUE    */
         MVI   AXFLGA,X'F0'                                        0054
*   GOTO S21C0004;                  /*                               */
         B     S21C0004                                            0055
*/********************************************************************/
*/*     OUTPUT  ROUTINE  FOR  EBCDIC  TO  HEX  CONVERSION            */
*/********************************************************************/
*                                                                  0056
*S21C0003:                                                         0056
*   ;                                                              0056
S21C0003 DS    0H                                                  0057
*   R12=R12×R11;                    /* COMBINE 2 HEX CHAR            */
         OR    R12,R11                                             0057
*   GEN( STC  R12,0(R6));           /* PUT CHAR INTO OUTPUT BUFF     */
          STC  R12,0(R6)
*   R6=R6+1;                        /* UP OUTPUT ADDRESS BY 1        */
         AL    R6,@CF00033                                         0059
*   AXFLGA='00'X;                   /* SET FLAG TO 0                 */
         MVI   AXFLGA,X'00'                                        0060
*/********************************************************************/
*/*      TEST  TO  DETERMINE  IF  CONVERSION  IS  COMPLETE           */
*/********************************************************************/
*                                                                  0061
*S21C0004:                                                         0061
*   ;                                                              0061
S21C0004 DS    0H                                                  0062
*   R5=R5+1;                        /* MOVE FROM ADDR UP BY 1        */
         AL    R5,@CF00033                                         0062
*   IF R5<R10                       /* HAS LAST CHAR BEEN CONVERT    */
*     THEN                                                         0063
         CR    R5,R10                                              0063
         BL    @RT00063                                            0063
*     GOTO S21C0001;                /* BRANCH IF NO                  */
*   IF LSTCNT='1'B                  /* WAS EH CONVERSION FOR ODD     */
*     THEN                                                         0065
         TM    LSTCNT+12(CONMAP),B'00000001'                       0065
         BNO   @RF00065                                            0065
*     GEN( STC  R12,0(R6));         /* COUNT                         */
          STC  R12,0(R6)
*   GOTO S21C0006;                  /* TO SET RC=0                   */
         B     S21C0006                                            0067
*/********************************************************************/
*/*      HEX  TO  EBCDIC  CONVERSION                                 */
*/********************************************************************/
*                                                                  0068
*S21C0005:                                                         0068
*   ;                                                              0068
S21C0005 DS    0H                                                  0069
*   R9=INBUF;                       /* PUT INPUT CHAR INTO REG.9     */
         SLR   R9,R9                                               0069
         IC    R9,INBUF(,R5)                                       0069
*   R11=R9/16;                      /* PUT BITS 0-3 INTO REG.11      */
         LR    R11,R9                                              0070
         SRL   R11,4                                               0070
*   R9=R9&15;                       /* PUT BITS 4-7 INTO REG.9       */
         N     R9,@CF00034                                         0071
*   R7=R3+R11;                      /* SET PTR TO CHAR TABLE         */
         LR    R7,R3                                               0072
         ALR   R7,R11                                              0072
*   OUTBUF=AXATBLEL;                /* STORE 1ST EBCDIC CHAR         */
         MVC   OUTBUF(1,R6),AXATBLEL(R7)                           0073
*   R7=R3+R9;                       /* SET PTR TO CHAR TABLE         */
         LR    R7,R3                                               0074
         ALR   R7,R9                                               0074
*   OUTBUF1=AXATBLEL;               /* STORE 2ND EBCDIC CHAR         */
         MVC   OUTBUF1(1,R6),AXATBLEL(R7)                          0075
*   R6=R6+2;                        /* STEP TO ADDR BY 2             */
         AL    R6,@CF00057                                         0076
*   R5=R5+1;                        /* SETP FROM ADDR BY 1           */
         AL    R5,@CF00033                                         0077
*   IF R5<R10                       /* HAS LAST CHAR BEEN CONVERT    */
*     THEN                                                         0078
         CR    R5,R10                                              0078
         BL    @RT00078                                            0078
*     GOTO S21C0005;                /* NO,GO DO IT AGAIN             */
*/********************************************************************/
*/*      SET  RETURN CODE  AND  RETURN                               */
*/********************************************************************/
*                                                                  0080
*S21C0006:                                                         0080
*   ;                                                              0080
S21C0006 DS    0H                                                  0081
*   R15=0;                          /* SET SUCCESSFUL RETURN CODE    */
         SLR   R15,R15                                             0081
*S21C0007:                                                         0082
*   ;                                                              0082
*   RETURN;                         /* RETURN TO CALLER              */
@EL00001 DS    0H                                                  0083
@EF00001 DS    0H                                                  0083
@ER00001 L     @14,12(,@13)                                        0083
         L     @00,20(,@13)                                        0083
         LM    @02,@12,28(@13)                                     0083
         BR    @14                                                 0083
*   DO;                             /* ATDSPLY                       */
*   END;                            /* ATDSPLY                       */
*   END;                                                           0086
         B     @EL00001                                            0086
@DATA    DS    0H
         DS    0F
         DS    0F
@CF00033 DC    F'1'
@CF00057 DC    F'2'
@CF00034 DC    F'15'
         DS    0D
AXATBL   DC    CL16'0123456789ABCDEF'
AXFLGA   DS    CL1
         DS    CL3
PATCH    DC    10F'0'
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
WAPTR    EQU   @02
CONMAP   EQU   @01
R3       EQU   @03
R5       EQU   @05
R6       EQU   @06
R7       EQU   @07
R9       EQU   @09
R10      EQU   @10
R11      EQU   @11
R12      EQU   @12
R15      EQU   @15
R0       EQU   @00
R1       EQU   @01
R13      EQU   @13
R14      EQU   @14
R2       EQU   @02
R4       EQU   @04
R8       EQU   @08
TOLTEPWA EQU   0
CONVMAP  EQU   0
$CNVFROM EQU   CONVMAP+4
$CNVTO   EQU   CONVMAP+8
$CNVCT   EQU   CONVMAP+12
@NM00002 EQU   0
HEXBIT   EQU   @NM00002
CNVCT    EQU   @NM00002+1
LSTCNT   EQU   CNVCT
INBUF    EQU   0
OUTAREA  EQU   0
OUTBUF   EQU   OUTAREA
OUTBUF1  EQU   OUTAREA+1
AXATBLEL EQU   0
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
@NM00004 EQU   CNVCT
@NM00003 EQU   @NM00002
$CNVIDNT EQU   CONVMAP+2
$CNVLEVL EQU   CONVMAP+1
$CNVTRMG EQU   CONVMAP
$WORKARA EQU   TOLTEPWA+1616
$SLTBL   EQU   TOLTEPWA+1468
@NM00001 EQU   TOLTEPWA+1464
$DEVTBLE EQU   TOLTEPWA+240
$COMMFLG EQU   TOLTEPWA+224
$CDA     EQU   TOLTEPWA+100
$SCTTBLE EQU   TOLTEPWA
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RT00034 EQU   S21C0006
@RT00039 EQU   S21C0005
@RT00043 EQU   IST0002
@RT00051 EQU   S21C0003
@RT00063 EQU   S21C0001
@RF00065 EQU   S21C0006
@RT00078 EQU   S21C0005
S21C0007 EQU   @EL00001
@ENDDATA EQU   *
         END   ISTSC021,(C'PLS2134',0702,80232)
