         TITLE 'DUMP FUNCTION - ISTTC037'
ISTTC037 CSECT ,                                                   0001
@MAINENT DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL1(16)                                             0001
         DC    C'ISTTC037  80.232'                                 0001
         DROP  @15
@PROLOG  STM   @14,@12,12(@13)                                     0001
         BALR  @12,0                                               0001
@PSTART  DS    0H                                                  0001
         USING @PSTART,@12                                         0001
*   R15=R13;                        /* SET BACKSAVE POINTER          */
         LR    R15,R13                                             0056
*   R13=ADDR(SVESC02D);             /* SET POINTER TO SAVE AREA      */
         LA    R13,SVESC02D(,WAPTR)                                0057
*   BACKSAVE(3)=R13;                /* CHAIN AREAS TOGETHER          */
         ST    R13,BACKSAVE+8(,R15)                                0058
*   SVESC02D(2)=R15;                                               0059
*                                                                  0059
         ST    R15,SVESC02D+4(,WAPTR)                              0059
*/********************************************************************/
*/*            CHECK FOR ABEND PROCESSING IN PROGRESS                */
*/********************************************************************/
*                                                                  0060
*   IF $ABNDBIT=ON THEN             /* CHECK FOR ABEND IN PROGRESS   */
         TM    $ABNDBIT(WAPTR),B'00000010'                         0060
         BNO   @RF00060                                            0060
*     DO;                                                          0061
*T37C0020:                                                         0062
*       ABNDPTR=R5;                 /* POINTER TO ABEND SAVE AREA    */
T37C0020 LR    ABNDPTR,R5                                          0062
*/********************************************************************/
*/*                 OUTPUT   ABEND   MESSAGE                         */
*/********************************************************************/
*                                                                  0063
*       /*************************************************************/
*       /*                                                           */
*       /* TCEC MSGN(540)CKABEND(YES)DIR(NET) INVOKED                */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0063
*       $TCECM='1'B;                /* SET TCEC SW IN RCA            */
         OI    $TCECM(WAPTR),B'00000001'                           0063
*       R1=ADDR($TCA05);            /* SET UP PARM LIST $TR          */
         LA    R1,$TCA05                                           0064
*       IF $ABTERM='1'B             /* IS ABEND OCCURING             */
*         THEN                                                     0065
         TM    $ABTERM(WAPTR),B'00000010'                          0065
         BNO   @RF00065                                            0065
*         CALL ISTSC020;            /* YES- CALL CECOM (TCEC) DIRECT */
         L     @15,@CV00422                                        0066
         BALR  @14,@15                                             0066
*       ELSE                                                       0067
*         CALL #EXIT;               /* NO- CALL CECOM VIA RES MGR    */
         B     @RC00065                                            0067
@RF00065 L     @15,#EXITA(,WAPTR)                                  0067
         BALR  @14,@15                                             0067
*       DCL                                                        0068
*         1 $TCA05,                 /* TCEC PARM LIST                */
*          2 $TCB05 FIXED(32) INIT(540),/* MSG NUMBER                */
*          2 $TCC05 FIXED(32) INIT(0),/* INCT LEN                    */
*          2 $TCD05 BIT(8) INIT('00001100'B),/* FLAG                 */
*          2 $TCE05 CHAR(4) INIT('FFFFFFFF'X);/* MSSAGE MASK         */
@RC00065 DS    0H                                                  0069
*/********************************************************************/
*/*                 FORMAT ABEND PSW MESSAGE                         */
*/********************************************************************/
*                                                                  0069
*       /*************************************************************/
*       /*                                                           */
*       /* ITACONV FROM(LPSW)TO(PSWL)V INVOKED                       */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0069
*       DCL                                                        0069
*        (ITATCF,                                                  0069
*         ITATCT) CHAR(*) BASED;    /* GENERATE WORK VARABLES        */
*       DCL                                                        0070
*         ITATCTS FIXED;            /* TEMP SPOT FOR ALTERED BYTE    */
*       RFY                                                        0071
*         ITATCF BASED(ADDR(LPSW)); /* MAP VARIABLE OVER FROM        */
*       RFY                                                        0072
*         ITATCT BASED(ADDR(PSWL)); /* MAP VARIBABLE OVER TO         */
*       UNPK(ITATCT(1:LENGTH(PSWL)+1),ITATCF(1:LENGTH(LPSW)+1));/* 0073
*                                      EXPAND HEX TO EBCDIC          */
         LA    @14,2104                                            0073
         ALR   @14,WAPTR                                           0073
         UNPK  ITATCT(9,@14),ITATCF(5,ABNDPTR)                     0073
*       TR(ITATCT(1:LENGTH(PSWL)),$TRTBL);/* CONVERT FA-FF TO C1-C6  */
         L     @03,RCAPTR(,WAPTR)                                  0074
         L     @03,$TRTBLA(,@03)                                   0074
         TR    ITATCT(8,@14),$TRTBL(@03)                           0074
*       PSWD=' ';                   /* INSERT BLANK SEPERATOR.       */
*                                                                  0075
         MVI   PSWD(WAPTR),C' '                                    0075
*       /*************************************************************/
*       /*                                                           */
*       /* ITACONV FROM(RPSW)TO(PSWR)V INVOKED                       */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0076
*       RFY                                                        0076
*         ITATCF BASED(ADDR(RPSW)); /* MAP VARIABLE OVER FROM        */
*       RFY                                                        0077
*         ITATCT BASED(ADDR(PSWR)); /* MAP VARIBABLE OVER TO         */
*       UNPK(ITATCT(1:LENGTH(PSWR)+1),ITATCF(1:LENGTH(RPSW)+1));/* 0078
*                                      EXPAND HEX TO EBCDIC          */
         LA    @14,2113                                            0078
         ALR   @14,WAPTR                                           0078
         UNPK  ITATCT(9,@14),ITATCF+4(5,ABNDPTR)                   0078
*       TR(ITATCT(1:LENGTH(PSWR)),$TRTBL);/* CONVERT FA-FF TO C1-C6  */
*                                                                  0079
         TR    ITATCT(8,@14),$TRTBL(@03)                           0079
*       /*************************************************************/
*       /*                                                           */
*       /* TCEC                                                      */
*       /* MSGN(540)CKABEND(YES)DIR(NET)MSGMSK('02000000'X)SUB(YES)  */
*       /* INVOKED                                                   */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0080
*       $TCECM='1'B;                /* SET TCEC SW IN RCA            */
         OI    $TCECM(WAPTR),B'00000001'                           0080
*       R1=ADDR($TCA08);            /* SET UP PARM LIST $TR          */
         LA    R1,$TCA08                                           0081
*       CALL S20CEC03;              /* CALL TCEC-MULTIPLE LN         */
         L     @15,@CV00446                                        0082
         BALR  @14,@15                                             0082
*       DCL                                                        0083
*         1 $TCA08,                 /* TCEC PARM LIST                */
*          2 $TCB08 FIXED(32) INIT(540),/* MSG NUMBER                */
*          2 $TCC08 FIXED(32) INIT(0),/* INCT LEN                    */
*          2 $TCD08 BIT(8) INIT('10001100'B),/* FLAG                 */
*          2 $TCE08 CHAR(4) INIT('02000000'X);/* MSSAGE MASK         */
*/********************************************************************/
*/*                 FORMAT GR 0-3 MESSAGE                            */
*/********************************************************************/
*                                                                  0084
*       DO I=1 TO 4;                                               0084
         LA    I,1                                                 0084
@DL00084 DS    0H                                                  0085
*         GRMSG=GMSG(I);            /* INSERT MESSAGE IDENTIFIER     */
*                                                                  0085
         LR    @14,I                                               0085
         ALR   @14,@14                                             0085
         LA    @11,GMSG-2(@14)                                     0085
         MVC   GRMSG(2,WAPTR),0(@11)                               0085
*         /***********************************************************/
*         /*                                                         */
*         /* ITACONV FROM(GPR)TO(TBUFF)TYPE(HE)COUNT(16) INVOKED     */
*         /*                                                         */
*         /***********************************************************/
*                                                                  0086
*         DCL                                                      0086
*           1 ITATCPRM BDY(WORD),   /* CONVERT PARAMETER LIST        */
*            2 * CHAR(4) INIT('0102F4F1'X),                        0086
*            2 ITATCFR PTR,         /* ADDRESS OF FROM FIELD         */
*            2 ITATCTO PTR,         /* ADDRESS OF TO FIELD           */
*            2 * BIT(8) INIT(0),    /* FLAGS FOR CONVERT MODULE      */
*             3 ITATCTP BIT(1),     /* TYPE OF CONVERT REQUIRED      */
*            2 ITATCNT FIXED(8);    /* NUMBER OF BYTES TO CONVERT    */
*         ITATCFR=ADDR(GPR);        /* SET THE FROM ADDRESS          */
         LA    @14,GPR(,ABNDPTR)                                   0087
         ST    @14,ITATCFR                                         0087
*         ITATCTO=ADDR(TBUFF);      /* SET THE TO ADDRESS            */
         LA    @14,TBUFF(,WAPTR)                                   0088
         ST    @14,ITATCTO                                         0088
*         ITATCTP='1'B;             /* SET THE TYPE OF CONVERT BIT   */
         OI    ITATCTP,B'10000000'                                 0089
*         ITATCNT=16;               /* GIVE THE CONVERT BYTE COUNT   */
         MVI   ITATCNT,X'10'                                       0090
*         R1=ADDR(ITATCPRM);        /* POINT TO CONVERT PARM LIST    */
         LA    R1,ITATCPRM                                         0091
*         CALL ISTSC021;            /* CALL CONVERT DIRECTLY         */
*                                                                  0092
         L     @15,@CV00461                                        0092
         BALR  @14,@15                                             0092
*         /***********************************************************/
*         /*                                                         */
*         /* TCEC                                                    */
*         /* MSGN(540)CKABEND(YES)DIR(NET)MSGMSK('01000000'X)SUB(YES)*/
*         /* INVOKED                                                 */
*         /*                                                         */
*         /***********************************************************/
*                                                                  0093
*         $TCECM='1'B;              /* SET TCEC SW IN RCA            */
         OI    $TCECM(WAPTR),B'00000001'                           0093
*         R1=ADDR($TCA10);          /* SET UP PARM LIST $TR          */
         LA    R1,$TCA10                                           0094
*         CALL S20CEC03;            /* CALL TCEC-MULTIPLE LN         */
         L     @15,@CV00446                                        0095
         BALR  @14,@15                                             0095
*         DCL                                                      0096
*           1 $TCA10,               /* TCEC PARM LIST                */
*            2 $TCB10 FIXED(32) INIT(540),/* MSG NUMBER              */
*            2 $TCC10 FIXED(32) INIT(0),/* INCT LEN                  */
*            2 $TCD10 BIT(8) INIT('10001100'B),/* FLAG               */
*            2 $TCE10 CHAR(4) INIT('01000000'X);/* MSSAGE MASK       */
*         ABNDPTR=ABNDPTR+16;       /* UPDATE STORAGE POINTER.       */
         AL    ABNDPTR,@CF00061                                    0097
*       END;                                                       0098
         AL    I,@CF00072                                          0098
         C     I,@CF00068                                          0098
         BNH   @DL00084                                            0098
*     END;                          /* END OF ABEND ONLY SECTION     */
*/********************************************************************/
*/*   OUTPUT START AND ENDING ADDRESS MESSAGE HEADER.                */
*/********************************************************************/
*                                                                  0100
*T37C0040:                                                         0100
*   IF $ABNDBIT=OFF                 /* IF ABNDING MSG TO NET OPR     */
*     THEN                                                         0100
@RF00060 DS    0H                                                  0100
T37C0040 TM    $ABNDBIT(WAPTR),B'00000010'                         0100
         BNZ   @RF00100                                            0100
*     DO;                                                          0101
*                                                                  0101
*       /*************************************************************/
*       /*                                                           */
*       /* TCEC MSGN(540)MSGMSK('40000000'X) INVOKED                 */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0102
*       $TCECM='1'B;                /* SET TCEC SW IN RCA            */
         OI    $TCECM(WAPTR),B'00000001'                           0102
*       R1=ADDR($TCA11);            /* SET UP PARM LIST $TR          */
         LA    R1,$TCA11                                           0103
*       CALL S20CEC03;              /* CALL TCEC-MULTIPLE LN         */
         L     @15,@CV00446                                        0104
         BALR  @14,@15                                             0104
*       DCL                                                        0105
*         1 $TCA11,                 /* TCEC PARM LIST                */
*          2 $TCB11 FIXED(32) INIT(540),/* MSG NUMBER                */
*          2 $TCC11 FIXED(32) INIT(0),/* INCT LEN                    */
*          2 $TCD11 BIT(8) INIT('00000000'B),/* FLAG                 */
*          2 $TCE11 CHAR(4) INIT('40000000'X);/* MSSAGE MASK         */
*     END;                                                         0106
*   ELSE                                                           0107
*     DO;                                                          0107
*                                                                  0107
         B     @RC00100                                            0107
@RF00100 DS    0H                                                  0108
*       /*************************************************************/
*       /*                                                           */
*       /* TCEC MSGN(540)CKABEND(YES)DIR(NET)MSGMSK('40000000'X)     */
*       /* INVOKED                                                   */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0108
*       $TCECM='1'B;                /* SET TCEC SW IN RCA            */
         OI    $TCECM(WAPTR),B'00000001'                           0108
*       R1=ADDR($TCA12);            /* SET UP PARM LIST $TR          */
         LA    R1,$TCA12                                           0109
*       CALL S20CEC03;              /* CALL TCEC-MULTIPLE LN         */
         L     @15,@CV00446                                        0110
         BALR  @14,@15                                             0110
*       DCL                                                        0111
*         1 $TCA12,                 /* TCEC PARM LIST                */
*          2 $TCB12 FIXED(32) INIT(540),/* MSG NUMBER                */
*          2 $TCC12 FIXED(32) INIT(0),/* INCT LEN                    */
*          2 $TCD12 BIT(8) INIT('00001100'B),/* FLAG                 */
*          2 $TCE12 CHAR(4) INIT('40000000'X);/* MSSAGE MASK         */
*     END;                                                         0112
*                                                                  0112
*/********************************************************************/
*/* ASSEMBLE & CONVERT TO EBCDIC ALL START & END ADDRESSES.          */
*/********************************************************************/
*                                                                  0113
*   ADAREA(1)=$RCA;                 /* ADDRESS OF RES COMN START     */
@RC00100 L     @14,$RCA(,WAPTR)                                    0113
         ST    @14,ADAREA(,WAPTR)                                  0113
*   ADAREA(2)=$ENDCOMM;             /* ADDRESS OF WORK AREA END.     */
*                                                                  0114
         L     @14,$ENDCOMM(,WAPTR)                                0114
         ST    @14,ADAREA+4(,WAPTR)                                0114
*   /*****************************************************************/
*   /*                                                               */
*   /* ITACONV FROM(STMSG)TO($INBUFR)TYPE(HE)COUNT(8) INVOKED        */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0115
*   ITATCFR=ADDR(STMSG);            /* SET THE FROM ADDRESS          */
         LA    @14,STMSG(,WAPTR)                                   0115
         ST    @14,ITATCFR                                         0115
*   ITATCTO=ADDR($INBUFR);          /* SET THE TO ADDRESS            */
         LA    @14,$INBUFR(,WAPTR)                                 0116
         ST    @14,ITATCTO                                         0116
*   ITATCTP='1'B;                   /* SET THE TYPE OF CONVERT BIT   */
         OI    ITATCTP,B'10000000'                                 0117
*   ITATCNT=8;                      /* GIVE THE CONVERT BYTE COUNT   */
         MVI   ITATCNT,X'08'                                       0118
*   R1=ADDR(ITATCPRM);              /* POINT TO CONVERT PARM LIST    */
         LA    R1,ITATCPRM                                         0119
*   CALL ISTSC021;                  /* CALL CONVERT DIRECTLY         */
         L     @15,@CV00461                                        0120
         BALR  @14,@15                                             0120
*   IF $ABNDBIT=OFF                 /* IF ABNDING MSG TO NET OPR     */
*     THEN                                                         0121
         TM    $ABNDBIT(WAPTR),B'00000010'                         0121
         BNZ   @RF00121                                            0121
*     DO;                                                          0122
*                                                                  0122
*       /*************************************************************/
*       /*                                                           */
*       /* TCEC MSGN(540)MSGMSK('20000000'X)SUB(YES) INVOKED         */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0123
*       $TCECM='1'B;                /* SET TCEC SW IN RCA            */
         OI    $TCECM(WAPTR),B'00000001'                           0123
*       R1=ADDR($TCA14);            /* SET UP PARM LIST $TR          */
         LA    R1,$TCA14                                           0124
*       CALL S20CEC03;              /* CALL TCEC-MULTIPLE LN         */
         L     @15,@CV00446                                        0125
         BALR  @14,@15                                             0125
*       DCL                                                        0126
*         1 $TCA14,                 /* TCEC PARM LIST                */
*          2 $TCB14 FIXED(32) INIT(540),/* MSG NUMBER                */
*          2 $TCC14 FIXED(32) INIT(0),/* INCT LEN                    */
*          2 $TCD14 BIT(8) INIT('10000000'B),/* FLAG                 */
*          2 $TCE14 CHAR(4) INIT('20000000'X);/* MSSAGE MASK         */
*     END;                                                         0127
*   ELSE                                                           0128
*     DO;                                                          0128
*                                                                  0128
         B     @RC00121                                            0128
@RF00121 DS    0H                                                  0129
*       /*************************************************************/
*       /*                                                           */
*       /* TCEC                                                      */
*       /* MSGN(540)CKABEND(YES)DIR(NET)MSGMSK('20000000'X)SUB(YES)  */
*       /* INVOKED                                                   */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0129
*       $TCECM='1'B;                /* SET TCEC SW IN RCA            */
         OI    $TCECM(WAPTR),B'00000001'                           0129
*       R1=ADDR($TCA15);            /* SET UP PARM LIST $TR          */
         LA    R1,$TCA15                                           0130
*       CALL S20CEC03;              /* CALL TCEC-MULTIPLE LN         */
         L     @15,@CV00446                                        0131
         BALR  @14,@15                                             0131
*       DCL                                                        0132
*         1 $TCA15,                 /* TCEC PARM LIST                */
*          2 $TCB15 FIXED(32) INIT(540),/* MSG NUMBER                */
*          2 $TCC15 FIXED(32) INIT(0),/* INCT LEN                    */
*          2 $TCD15 BIT(8) INIT('10001100'B),/* FLAG                 */
*          2 $TCE15 CHAR(4) INIT('20000000'X);/* MSSAGE MASK         */
*     END;                                                         0133
*   ADAREA(1)=$TEPBEGN;             /* ADDRESS OF TOLTEP START.      */
@RC00121 L     @14,$TEPBEGN(,WAPTR)                                0134
         ST    @14,ADAREA(,WAPTR)                                  0134
*   ADAREA(2)=$TEPEND;              /* ADDRESS OF TOLTEP END.        */
*                                                                  0135
         L     @14,$TEPEND(,WAPTR)                                 0135
         ST    @14,ADAREA+4(,WAPTR)                                0135
*   /*****************************************************************/
*   /*                                                               */
*   /* ITACONV FROM(STMSG)TO($INBUFR)TYPE(HE)COUNT(8) INVOKED        */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0136
*   ITATCFR=ADDR(STMSG);            /* SET THE FROM ADDRESS          */
         LA    @14,STMSG(,WAPTR)                                   0136
         ST    @14,ITATCFR                                         0136
*   ITATCTO=ADDR($INBUFR);          /* SET THE TO ADDRESS            */
         LA    @14,$INBUFR(,WAPTR)                                 0137
         ST    @14,ITATCTO                                         0137
*   ITATCTP='1'B;                   /* SET THE TYPE OF CONVERT BIT   */
         OI    ITATCTP,B'10000000'                                 0138
*   ITATCNT=8;                      /* GIVE THE CONVERT BYTE COUNT   */
         MVI   ITATCNT,X'08'                                       0139
*   R1=ADDR(ITATCPRM);              /* POINT TO CONVERT PARM LIST    */
         LA    R1,ITATCPRM                                         0140
*   CALL ISTSC021;                  /* CALL CONVERT DIRECTLY         */
         L     @15,@CV00461                                        0141
         BALR  @14,@15                                             0141
*   IF $ABNDBIT=OFF                 /* IF ABNDING MSG TO NET OPR     */
*     THEN                                                         0142
         TM    $ABNDBIT(WAPTR),B'00000010'                         0142
         BNZ   @RF00142                                            0142
*     DO;                                                          0143
*                                                                  0143
*       /*************************************************************/
*       /*                                                           */
*       /* TCEC MSGN(540)MSGMSK('10000000'X)SUB(YES) INVOKED         */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0144
*       $TCECM='1'B;                /* SET TCEC SW IN RCA            */
         OI    $TCECM(WAPTR),B'00000001'                           0144
*       R1=ADDR($TCA17);            /* SET UP PARM LIST $TR          */
         LA    R1,$TCA17                                           0145
*       CALL S20CEC03;              /* CALL TCEC-MULTIPLE LN         */
         L     @15,@CV00446                                        0146
         BALR  @14,@15                                             0146
*       DCL                                                        0147
*         1 $TCA17,                 /* TCEC PARM LIST                */
*          2 $TCB17 FIXED(32) INIT(540),/* MSG NUMBER                */
*          2 $TCC17 FIXED(32) INIT(0),/* INCT LEN                    */
*          2 $TCD17 BIT(8) INIT('10000000'B),/* FLAG                 */
*          2 $TCE17 CHAR(4) INIT('10000000'X);/* MSSAGE MASK         */
*     END;                                                         0148
*   ELSE                                                           0149
*     DO;                                                          0149
*                                                                  0149
         B     @RC00142                                            0149
@RF00142 DS    0H                                                  0150
*       /*************************************************************/
*       /*                                                           */
*       /* TCEC                                                      */
*       /* MSGN(540)CKABEND(YES)DIR(NET)MSGMSK('10000000'X)SUB(YES)  */
*       /* INVOKED                                                   */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0150
*       $TCECM='1'B;                /* SET TCEC SW IN RCA            */
         OI    $TCECM(WAPTR),B'00000001'                           0150
*       R1=ADDR($TCA18);            /* SET UP PARM LIST $TR          */
         LA    R1,$TCA18                                           0151
*       CALL S20CEC03;              /* CALL TCEC-MULTIPLE LN         */
         L     @15,@CV00446                                        0152
         BALR  @14,@15                                             0152
*       DCL                                                        0153
*         1 $TCA18,                 /* TCEC PARM LIST                */
*          2 $TCB18 FIXED(32) INIT(540),/* MSG NUMBER                */
*          2 $TCC18 FIXED(32) INIT(0),/* INCT LEN                    */
*          2 $TCD18 BIT(8) INIT('10001100'B),/* FLAG                 */
*          2 $TCE18 CHAR(4) INIT('10000000'X);/* MSSAGE MASK         */
*     END;                                                         0154
*   ADAREA(1)=$LOWADDR;             /* ADDRESS OF OLT AREA START.    */
@RC00142 L     @14,$LOWADDR(,WAPTR)                                0155
         ST    @14,ADAREA(,WAPTR)                                  0155
*   ADAREA(2)=$HIGHADR;             /* ADDRESS OF OLT AREA END.      */
*                                                                  0156
         L     @14,$HIGHADR(,WAPTR)                                0156
         ST    @14,ADAREA+4(,WAPTR)                                0156
*   /*****************************************************************/
*   /*                                                               */
*   /* ITACONV FROM(STMSG)TO($INBUFR)TYPE(HE)COUNT(8) INVOKED        */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0157
*   ITATCFR=ADDR(STMSG);            /* SET THE FROM ADDRESS          */
         LA    @14,STMSG(,WAPTR)                                   0157
         ST    @14,ITATCFR                                         0157
*   ITATCTO=ADDR($INBUFR);          /* SET THE TO ADDRESS            */
         LA    @14,$INBUFR(,WAPTR)                                 0158
         ST    @14,ITATCTO                                         0158
*   ITATCTP='1'B;                   /* SET THE TYPE OF CONVERT BIT   */
         OI    ITATCTP,B'10000000'                                 0159
*   ITATCNT=8;                      /* GIVE THE CONVERT BYTE COUNT   */
         MVI   ITATCNT,X'08'                                       0160
*   R1=ADDR(ITATCPRM);              /* POINT TO CONVERT PARM LIST    */
         LA    R1,ITATCPRM                                         0161
*   CALL ISTSC021;                  /* CALL CONVERT DIRECTLY         */
         L     @15,@CV00461                                        0162
         BALR  @14,@15                                             0162
*   IF $ABNDBIT=OFF                 /* IF ABNDING MSG TO NET OPR     */
*     THEN                                                         0163
         TM    $ABNDBIT(WAPTR),B'00000010'                         0163
         BNZ   @RF00163                                            0163
*     DO;                                                          0164
*                                                                  0164
*       /*************************************************************/
*       /*                                                           */
*       /* TCEC MSGN(540)MSGMSK('08000000'X)SUB(YES) INVOKED         */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0165
*       $TCECM='1'B;                /* SET TCEC SW IN RCA            */
         OI    $TCECM(WAPTR),B'00000001'                           0165
*       R1=ADDR($TCA20);            /* SET UP PARM LIST $TR          */
         LA    R1,$TCA20                                           0166
*       CALL S20CEC03;              /* CALL TCEC-MULTIPLE LN         */
         L     @15,@CV00446                                        0167
         BALR  @14,@15                                             0167
*       DCL                                                        0168
*         1 $TCA20,                 /* TCEC PARM LIST                */
*          2 $TCB20 FIXED(32) INIT(540),/* MSG NUMBER                */
*          2 $TCC20 FIXED(32) INIT(0),/* INCT LEN                    */
*          2 $TCD20 BIT(8) INIT('10000000'B),/* FLAG                 */
*          2 $TCE20 CHAR(4) INIT('08000000'X);/* MSSAGE MASK         */
*     END;                                                         0169
*   ELSE                                                           0170
*     DO;                                                          0170
*                                                                  0170
         B     @RC00163                                            0170
@RF00163 DS    0H                                                  0171
*       /*************************************************************/
*       /*                                                           */
*       /* TCEC                                                      */
*       /* MSGN(540)CKABEND(YES)DIR(NET)MSGMSK('08000000'X)SUB(YES)  */
*       /* INVOKED                                                   */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0171
*       $TCECM='1'B;                /* SET TCEC SW IN RCA            */
         OI    $TCECM(WAPTR),B'00000001'                           0171
*       R1=ADDR($TCA21);            /* SET UP PARM LIST $TR          */
         LA    R1,$TCA21                                           0172
*       CALL S20CEC03;              /* CALL TCEC-MULTIPLE LN         */
         L     @15,@CV00446                                        0173
         BALR  @14,@15                                             0173
*       DCL                                                        0174
*         1 $TCA21,                 /* TCEC PARM LIST                */
*          2 $TCB21 FIXED(32) INIT(540),/* MSG NUMBER                */
*          2 $TCC21 FIXED(32) INIT(0),/* INCT LEN                    */
*          2 $TCD21 BIT(8) INIT('10001100'B),/* FLAG                 */
*          2 $TCE21 CHAR(4) INIT('08000000'X);/* MSSAGE MASK         */
*     END;                                                         0175
*   ADAREA(1)=WAPTR;                /* ADDRESS OF WORK AREA START    */
@RC00163 ST    WAPTR,ADAREA(,WAPTR)                                0176
*   ADAREA(2)=EVAL(WAPTR+4096);     /* END OF TWA                    */
*                                                                  0177
         LR    @14,WAPTR                                           0177
         AL    @14,@CF00092                                        0177
         ST    @14,ADAREA+4(,WAPTR)                                0177
*   /*****************************************************************/
*   /*                                                               */
*   /* ITACONV FROM(STMSG)TO($INBUFR)TYPE(HE)COUNT(8) INVOKED        */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0178
*   ITATCFR=ADDR(STMSG);            /* SET THE FROM ADDRESS          */
         LA    @14,STMSG(,WAPTR)                                   0178
         ST    @14,ITATCFR                                         0178
*   ITATCTO=ADDR($INBUFR);          /* SET THE TO ADDRESS            */
         LA    @14,$INBUFR(,WAPTR)                                 0179
         ST    @14,ITATCTO                                         0179
*   ITATCTP='1'B;                   /* SET THE TYPE OF CONVERT BIT   */
         OI    ITATCTP,B'10000000'                                 0180
*   ITATCNT=8;                      /* GIVE THE CONVERT BYTE COUNT   */
         MVI   ITATCNT,X'08'                                       0181
*   R1=ADDR(ITATCPRM);              /* POINT TO CONVERT PARM LIST    */
         LA    R1,ITATCPRM                                         0182
*   CALL ISTSC021;                  /* CALL CONVERT DIRECTLY         */
         L     @15,@CV00461                                        0183
         BALR  @14,@15                                             0183
*/********************************************************************/
*/* OUTPUT AREA NAME, START & ENDING ADDRESSES.                      */
*/********************************************************************/
*                                                                  0184
*   IF $ABNDBIT=OFF                 /* IF ABNDING MSG TO NET OPR     */
*     THEN                                                         0184
         TM    $ABNDBIT(WAPTR),B'00000010'                         0184
         BNZ   @RF00184                                            0184
*     DO;                                                          0185
*                                                                  0185
*       /*************************************************************/
*       /*                                                           */
*       /* TCEC MSGMSK('04000000'X)MSGN(540)SUB(YES) INVOKED         */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0186
*       $TCECM='1'B;                /* SET TCEC SW IN RCA            */
         OI    $TCECM(WAPTR),B'00000001'                           0186
*       R1=ADDR($TCA23);            /* SET UP PARM LIST $TR          */
         LA    R1,$TCA23                                           0187
*       CALL S20CEC03;              /* CALL TCEC-MULTIPLE LN         */
         L     @15,@CV00446                                        0188
         BALR  @14,@15                                             0188
*       DCL                                                        0189
*         1 $TCA23,                 /* TCEC PARM LIST                */
*          2 $TCB23 FIXED(32) INIT(540),/* MSG NUMBER                */
*          2 $TCC23 FIXED(32) INIT(0),/* INCT LEN                    */
*          2 $TCD23 BIT(8) INIT('10000000'B),/* FLAG                 */
*          2 $TCE23 CHAR(4) INIT('04000000'X);/* MSSAGE MASK         */
*     END;                                                         0190
*   ELSE                                                           0191
*     DO;                                                          0191
*                                                                  0191
         B     @RC00184                                            0191
@RF00184 DS    0H                                                  0192
*       /*************************************************************/
*       /*                                                           */
*       /* TCEC                                                      */
*       /* MSGN(540)CKABEND(YES)DIR(NET)MSGMSK('04000000'X)SUB(YES)  */
*       /* INVOKED                                                   */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0192
*       $TCECM='1'B;                /* SET TCEC SW IN RCA            */
         OI    $TCECM(WAPTR),B'00000001'                           0192
*       R1=ADDR($TCA24);            /* SET UP PARM LIST $TR          */
         LA    R1,$TCA24                                           0193
*       CALL S20CEC03;              /* CALL TCEC-MULTIPLE LN         */
         L     @15,@CV00446                                        0194
         BALR  @14,@15                                             0194
*       DCL                                                        0195
*         1 $TCA24,                 /* TCEC PARM LIST                */
*          2 $TCB24 FIXED(32) INIT(540),/* MSG NUMBER                */
*          2 $TCC24 FIXED(32) INIT(0),/* INCT LEN                    */
*          2 $TCD24 BIT(8) INIT('10001100'B),/* FLAG                 */
*          2 $TCE24 CHAR(4) INIT('04000000'X);/* MSSAGE MASK         */
*     END;                                                         0196
*                                                                  0196
*/********************************************************************/
*/*              OUTPUT DUMP REQUEST MESSAGE.                        */
*/********************************************************************/
*                                                                  0197
*T37C0050:                                                         0197
*   IF $ABNDBIT=ON                  /* IF ABENDING ALL DONE          */
*     THEN                          /* EXIT TO CALLER                */
@RC00184 DS    0H                                                  0197
T37C0050 TM    $ABNDBIT(WAPTR),B'00000010'                         0197
         BO    @RT00197                                            0197
*     GOTO T37C0370;                                               0198
*   IF $OPCOM=ON                    /* IF NETWORK CONTROLLER IS AT 0199
*                                      SYSTEM CONSOLE                */
*       &$ALTPRTR=OFF               /* AND NO ALTERNATE PTR          */
*     THEN                                                         0199
         TM    $OPCOM(WAPTR),B'10000000'                           0199
         BNO   @RF00199                                            0199
         TM    $ALTPRTR(WAPTR),B'00000010'                         0199
         BNZ   @RF00199                                            0199
*     DO;                                                          0200
*                                                                  0200
*       /*************************************************************/
*       /*                                                           */
*       /* TCEC MSGN(546) INVOKED                                    */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0201
*       $TCECM='1'B;                /* SET TCEC SW IN RCA            */
         OI    $TCECM(WAPTR),B'00000001'                           0201
*       R1=ADDR($TCA25);            /* SET UP PARM LIST $TR          */
         LA    R1,$TCA25                                           0202
*       CALL #EXIT;                 /* CALL CECOM                    */
         L     @15,#EXITA(,WAPTR)                                  0203
         BALR  @14,@15                                             0203
*       DCL                                                        0204
*         1 $TCA25,                 /* TCEC PARM LIST                */
*          2 $TCB25 FIXED(32) INIT(546),/* MSG NUMBER                */
*          2 $TCC25 FIXED(32) INIT(0),/* INCT LEN                    */
*          2 $TCD25 BIT(8) INIT('00000000'B),/* FLAG                 */
*          2 $TCE25 CHAR(4) INIT('FFFFFFFF'X);/* MSSAGE MASK         */
*       GO TO T37C0370;             /* RETURN TO CALLER              */
         B     T37C0370                                            0205
*     END;                                                         0206
*                                                                  0206
*   /*****************************************************************/
*   /*                                                               */
*   /* TCEC MSGN(541)INCT(19) INVOKED                                */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0207
*   $TCECM='1'B;                    /* SET TCEC SW IN RCA            */
@RF00199 OI    $TCECM(WAPTR),B'00000001'                           0207
*   R1=ADDR($TCA26);                /* SET UP PARM LIST $TR          */
         LA    R1,$TCA26                                           0208
*   CALL #EXIT;                     /* CALL CECOM                    */
         L     @15,#EXITA(,WAPTR)                                  0209
         BALR  @14,@15                                             0209
*   DCL                                                            0210
*     1 $TCA26,                     /* TCEC PARM LIST                */
*      2 $TCB26 FIXED(32) INIT(541),/* MSG NUMBER                    */
*      2 $TCC26 FIXED(32) INIT(19), /* INCT LEN                      */
*      2 $TCD26 BIT(8) INIT('01000000'B),/* FLAG                     */
*      2 $TCE26 CHAR(4) INIT('FFFFFFFF'X);/* MSSAGE MASK             */
*T37C0051:                                                         0211
*                                                                  0211
*/********************************************************************/
*/*    INTERPRET RESPONSE FROM DUMP REQUEST MESSAGE.                 */
*/********************************************************************/
*                                                                  0211
*   IF INCT=1 THEN                  /* CHECK RESPONSES WITH COUNT    */
T37C0051 CLI   INCT(WAPTR),1                                       0211
         BNE   @RF00211                                            0211
*/****************************************************************** */
*/* CHECK RESPONSES WITH COUNT EQUAL TO ONE.                         */
*/********************************************************************/
*                                                                  0212
*     DO;                           /* OF 1.                         */
*       IF INCHAR='P' THEN          /* CHECK FOR PROMPT REQUEST      */
         CLI   INCHAR(WAPTR),C'P'                                  0213
         BNE   @RF00213                                            0213
*         DO;                                                      0214
*                                                                  0214
*/********************************************************************/
*/*                 ISSUE DUMP PROMPT MESSAGES                       */
*/********************************************************************/
*                                                                  0215
*           /*********************************************************/
*           /*                                                       */
*           /* TCEC MSGN(542)MSGMSK('FFFFFFFF'X) INVOKED             */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0215
*           $TCECM='1'B;            /* SET TCEC SW IN RCA            */
         OI    $TCECM(WAPTR),B'00000001'                           0215
*           R1=ADDR($TCA27);        /* SET UP PARM LIST $TR          */
         LA    R1,$TCA27                                           0216
*           CALL S20CEC03;          /* CALL TCEC-MULTIPLE LN         */
         L     @15,@CV00446                                        0217
         BALR  @14,@15                                             0217
*           DCL                                                    0218
*             1 $TCA27,             /* TCEC PARM LIST                */
*              2 $TCB27 FIXED(32) INIT(542),/* MSG NUMBER            */
*              2 $TCC27 FIXED(32) INIT(0),/* INCT LEN                */
*              2 $TCD27 BIT(8) INIT('00000000'B),/* FLAG             */
*              2 $TCE27 CHAR(4) INIT('FFFFFFFF'X);/* MSSAGE MASK     */
*           GO TO T37C0050;         /* GO ASK FOR NEXT REQUEST       */
         B     T37C0050                                            0219
*         END;                                                     0220
*       IF INCHAR='W' THEN          /* CHECK FOR REQUEST TO DUMP   0221
*                                      COMMON AREA.                  */
@RF00213 CLI   INCHAR(WAPTR),C'W'                                  0221
         BNE   @RF00221                                            0221
*         DO;                                                      0222
*                                                                  0222
*/********************************************************************/
*/*            FORMAT AND DUMP ALL OF COMMON WORK AREA               */
*/********************************************************************/
*                                                                  0223
*           /*********************************************************/
*           /*                                                       */
*           /* TCEC MSGN(545)MSGMSK('20000000'X) INVOKED             */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0223
*           $TCECM='1'B;            /* SET TCEC SW IN RCA            */
         OI    $TCECM(WAPTR),B'00000001'                           0223
*           R1=ADDR($TCA28);        /* SET UP PARM LIST $TR          */
         LA    R1,$TCA28                                           0224
*           CALL S20CEC03;          /* CALL TCEC-MULTIPLE LN         */
         L     @15,@CV00446                                        0225
         BALR  @14,@15                                             0225
*           DCL                                                    0226
*             1 $TCA28,             /* TCEC PARM LIST                */
*              2 $TCB28 FIXED(32) INIT(545),/* MSG NUMBER            */
*              2 $TCC28 FIXED(32) INIT(0),/* INCT LEN                */
*              2 $TCD28 BIT(8) INIT('00000000'B),/* FLAG             */
*              2 $TCE28 CHAR(4) INIT('20000000'X);/* MSSAGE MASK     */
*/********************************************************************/
*/*  PASS START & END ADDRESSES OF COMMON TO STORAGE FORMAT ROUTINE. */
*/********************************************************************/
*                                                                  0227
*           S=WAPTR;                /* START OF COMMON AREA          */
         LR    S,WAPTR                                             0227
*           E=EVAL(WAPTR+4096);     /* END OF COMMON AREA            */
         LR    E,WAPTR                                             0228
         AL    E,@CF00092                                          0228
*           GO TO T37C0300;         /* CALL STORAGE FORMAT ROUTINE   */
         B     T37C0300                                            0229
*         END;                                                     0230
*       ELSE                                                       0231
*         ;                                                        0231
@RF00221 DS    0H                                                  0232
*       IF INCHAR='R' THEN          /* CHECK FOR REQUEST TO DUMP     */
         CLI   INCHAR(WAPTR),C'R'                                  0232
         BNE   @RF00232                                            0232
*         DO;                       /* RESIDENT COMMON AREA          */
*/********************************************************************/
*/*FORMAT AND DUMP ALL OF RESIDENT COMMON AREA                       */
*/********************************************************************/
*                                                                  0234
*           /*********************************************************/
*           /*                                                       */
*           /* TCEC MSGN(545)MSGMSK('80000000'X) INVOKED             */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0234
*           $TCECM='1'B;            /* SET TCEC SW IN RCA            */
         OI    $TCECM(WAPTR),B'00000001'                           0234
*           R1=ADDR($TCA29);        /* SET UP PARM LIST $TR          */
         LA    R1,$TCA29                                           0235
*           CALL S20CEC03;          /* CALL TCEC-MULTIPLE LN         */
         L     @15,@CV00446                                        0236
         BALR  @14,@15                                             0236
*           DCL                                                    0237
*             1 $TCA29,             /* TCEC PARM LIST                */
*              2 $TCB29 FIXED(32) INIT(545),/* MSG NUMBER            */
*              2 $TCC29 FIXED(32) INIT(0),/* INCT LEN                */
*              2 $TCD29 BIT(8) INIT('00000000'B),/* FLAG             */
*              2 $TCE29 CHAR(4) INIT('80000000'X);/* MSSAGE MASK     */
*/********************************************************************/
*/* PASS START AND END ADDRESSES OF RCA TO STORAGE FORMAT ROUTINE    */
*/********************************************************************/
*                                                                  0238
*           S=$RCA;                 /* START ADDRESS OF RCA          */
         L     S,$RCA(,WAPTR)                                      0238
*           E=$ENDCOMM;             /* RCA END ADDRESS               */
         L     E,$ENDCOMM(,WAPTR)                                  0239
*           GO TO T37C0300;         /* CALL STORAGE FORMAT ROUTINE   */
         B     T37C0300                                            0240
*         END;                                                     0241
*       ELSE                                                       0242
*         ;                                                        0242
@RF00232 DS    0H                                                  0243
*       IF INCHAR='T' THEN          /* CHECK FOR REQUEST TO DUMP     */
         CLI   INCHAR(WAPTR),C'T'                                  0243
         BNE   @RF00243                                            0243
*         DO;                       /* TOLTEP AREA.                  */
*/********************************************************************/
*/*             FORMAT AND DUMP ALL OF TOLTEP AREA                   */
*/********************************************************************/
*                                                                  0245
*           /*********************************************************/
*           /*                                                       */
*           /* TCEC MSGN(545)MSGMSK('40000000'X) INVOKED             */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0245
*           $TCECM='1'B;            /* SET TCEC SW IN RCA            */
         OI    $TCECM(WAPTR),B'00000001'                           0245
*           R1=ADDR($TCA30);        /* SET UP PARM LIST $TR          */
         LA    R1,$TCA30                                           0246
*           CALL S20CEC03;          /* CALL TCEC-MULTIPLE LN         */
         L     @15,@CV00446                                        0247
         BALR  @14,@15                                             0247
*           DCL                                                    0248
*             1 $TCA30,             /* TCEC PARM LIST                */
*              2 $TCB30 FIXED(32) INIT(545),/* MSG NUMBER            */
*              2 $TCC30 FIXED(32) INIT(0),/* INCT LEN                */
*              2 $TCD30 BIT(8) INIT('00000000'B),/* FLAG             */
*              2 $TCE30 CHAR(4) INIT('40000000'X);/* MSSAGE MASK     */
*/********************************************************************/
*/*  PASS START & END ADDRESSES OF TOLTEP TO STORAGE FORMAT ROUTINE. */
*/********************************************************************/
*                                                                  0249
*           S=$TEPBEGN;             /* TOLTEP STARTING ADDRESS       */
         L     S,$TEPBEGN(,WAPTR)                                  0249
*           E=$TEPEND;              /* TOLTEP ENDING ADDRESS         */
         L     E,$TEPEND(,WAPTR)                                   0250
*           GO TO T37C0300;         /* CALL STORAGE FORMAT ROUTINE   */
         B     T37C0300                                            0251
*         END;                                                     0252
*       ELSE                                                       0253
*         ;                                                        0253
@RF00243 DS    0H                                                  0254
*       IF INCHAR='O' THEN          /* CHECK FOR REQUEST TO DUMP     */
         CLI   INCHAR(WAPTR),C'O'                                  0254
         BNE   @RF00254                                            0254
*         DO;                       /* ALL OF OLT AREA.              */
*/********************************************************************/
*/*                 FORMAT AND DUMP ALL OF OLT AREA                  */
*/********************************************************************/
*                                                                  0256
*           /*********************************************************/
*           /*                                                       */
*           /* TCEC MSGN(545)MSGMSK('10000000'X) INVOKED             */
*           /*                                                       */
*           /*********************************************************/
*                                                                  0256
*           $TCECM='1'B;            /* SET TCEC SW IN RCA            */
         OI    $TCECM(WAPTR),B'00000001'                           0256
*           R1=ADDR($TCA31);        /* SET UP PARM LIST $TR          */
         LA    R1,$TCA31                                           0257
*           CALL S20CEC03;          /* CALL TCEC-MULTIPLE LN         */
         L     @15,@CV00446                                        0258
         BALR  @14,@15                                             0258
*           DCL                                                    0259
*             1 $TCA31,             /* TCEC PARM LIST                */
*              2 $TCB31 FIXED(32) INIT(545),/* MSG NUMBER            */
*              2 $TCC31 FIXED(32) INIT(0),/* INCT LEN                */
*              2 $TCD31 BIT(8) INIT('00000000'B),/* FLAG             */
*              2 $TCE31 CHAR(4) INIT('10000000'X);/* MSSAGE MASK     */
*/********************************************************************/
*/*    PASS START & END ADDRESSES OF OLT TO STORAGE FORMAT ROUTINE   */
*/********************************************************************/
*                                                                  0260
*           S=$LOWADDR;             /* OLT STARTING ADDRESS          */
         L     S,$LOWADDR(,WAPTR)                                  0260
*           E=$HIGHADR;             /* HIGHEST OLT AREA ADDRESS      */
         L     E,$HIGHADR(,WAPTR)                                  0261
*           GO TO T37C0300;         /* CALL STORAGE FORMAT ROUTINE   */
         B     T37C0300                                            0262
*         END;                                                     0263
*       ELSE                                                       0264
*         ;                                                        0264
@RF00254 DS    0H                                                  0265
*     END;                          /* END OF INCT=1 TESTS           */
*   ELSE                                                           0266
*     ;                                                            0266
*                                                                  0266
@RF00211 DS    0H                                                  0267
*/********************************************************************/
*/*            CHECK FOR REQUEST TO END DUMP                         */
*/********************************************************************/
*                                                                  0267
*   IF DFINB='CANCEL'&INCT=6 THEN                                  0267
         CLC   DFINB(6,WAPTR),@CC00581                             0267
         BNE   @RF00267                                            0267
         CLI   INCT(WAPTR),6                                       0267
         BNE   @RF00267                                            0267
*     DO;                                                          0268
*T37C0070:                                                         0269
*                                                                  0269
*       /*************************************************************/
*       /*                                                           */
*       /* TCEC MSGN(544) INVOKED                                    */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0269
*       $TCECM='1'B;                /* SET TCEC SW IN RCA            */
T37C0070 OI    $TCECM(WAPTR),B'00000001'                           0269
*       R1=ADDR($TCA32);            /* SET UP PARM LIST $TR          */
         LA    R1,$TCA32                                           0270
*       CALL #EXIT;                 /* CALL CECOM                    */
         L     @15,#EXITA(,WAPTR)                                  0271
         BALR  @14,@15                                             0271
*       DCL                                                        0272
*         1 $TCA32,                 /* TCEC PARM LIST                */
*          2 $TCB32 FIXED(32) INIT(544),/* MSG NUMBER                */
*          2 $TCC32 FIXED(32) INIT(0),/* INCT LEN                    */
*          2 $TCD32 BIT(8) INIT('00000000'B),/* FLAG                 */
*          2 $TCE32 CHAR(4) INIT('FFFFFFFF'X);/* MSSAGE MASK         */
*       GO TO T37C0370;             /* RETURN TO CALLER              */
         B     T37C0370                                            0273
*     END;                                                         0274
*   ELSE                                                           0275
*     ;                                                            0275
*                                                                  0275
@RF00267 DS    0H                                                  0276
*/********************************************************************/
*/********************************************************************/
*/* CHECK FOR REQUEST TO DISPLAY AREA OF STORAGE SELECTED BY ADDRESS */
*/********************************************************************/
*                                                                  0276
*   IF DFORMA^='D ' THEN                                           0276
         CLC   DFORMA(2,WAPTR),@CC00590                            0276
         BNE   @RT00276                                            0276
*     GO TO T37C0080;               /* GO ISSUE INCORRECT REPLY MSG  */
*   ELSE                                                           0278
*     DO I=4 TO 13 WHILE $INBUFR(I)^='-';                          0278
         LA    I,4                                                 0278
@DL00278 LR    @14,WAPTR                                           0278
         ALR   @14,I                                               0278
         CLI   $INBUFR-1(@14),C'-'                                 0278
         BE    @DC00278                                            0278
*     END;                                                         0279
         AL    I,@CF00072                                          0279
         C     I,@CF00592                                          0279
         BNH   @DL00278                                            0279
@DC00278 DS    0H                                                  0280
*   IF I>12 THEN                                                   0280
         C     I,@CF00231                                          0280
         BH    @RT00280                                            0280
*     GO TO T37C0080;               /* ISSUE INCORRECT REPLY MSG.    */
*   ELSE                                                           0282
*     ;                                                            0282
*   DFORMC='0000000000000000';                                     0283
         MVC   DFORMC(16,WAPTR),@CC00594                           0283
*   DFORMB((13-I):8)=$INBUFR(4:(I-1));                             0284
         LA    @14,13                                              0284
         SLR   @14,I                                               0284
         ST    @14,@TF00001                                        0284
         ALR   @14,WAPTR                                           0284
         LA    @11,8                                               0284
         LR    @03,@11                                             0284
         SL    @03,@TF00001                                        0284
         MVC   @TS00001(8),$INBUFR+3(WAPTR)                        0284
         EX    @03,@SM00644                                        0284
*   Z=$INBUFR(1:1);                                                0285
         SLR   Z,Z                                                 0285
         IC    Z,$INBUFR(,WAPTR)                                   0285
*   DFORMD((8-(Z-I)):8)=$INBUFR((I+1):(Z+1));                      0286
*                                                                  0286
         LR    @14,I                                               0286
         SLR   @14,Z                                               0286
         ALR   @14,@11                                             0286
         ST    @14,@TF00001                                        0286
         ALR   @14,WAPTR                                           0286
         SL    @11,@TF00001                                        0286
         LR    @03,WAPTR                                           0286
         ALR   @03,I                                               0286
         MVC   @TS00001(8),$INBUFR(@03)                            0286
         EX    @11,@SM00646                                        0286
*/********************************************************************/
*/*      SET UP ADDRESSES FOR DISPLAY OF SELECTED STORAGE AREA       */
*/********************************************************************/
*                                                                  0287
*   /*****************************************************************/
*   /*                                                               */
*   /* ITACONV FROM(DFORMB)TO(DF)TYPE(EH)COUNT(8) INVOKED            */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0287
*   ITATCFR=ADDR(DFORMB);           /* SET THE FROM ADDRESS          */
         LA    @14,DFORMB(,WAPTR)                                  0287
         ST    @14,ITATCFR                                         0287
*   ITATCTO=ADDR(DF);               /* SET THE TO ADDRESS            */
         LA    @14,DF                                              0288
         ST    @14,ITATCTO                                         0288
*   ITATCTP='0'B;                   /* SET THE TYPE OF CONVERT BIT   */
         NI    ITATCTP,B'01111111'                                 0289
*   ITATCNT=8;                      /* GIVE THE CONVERT BYTE COUNT   */
         MVI   ITATCNT,X'08'                                       0290
*   R1=ADDR(ITATCPRM);              /* POINT TO CONVERT PARM LIST    */
         LA    R1,ITATCPRM                                         0291
*   CALL ISTSC021;                  /* CALL CONVERT DIRECTLY         */
         L     @15,@CV00461                                        0292
         BALR  @14,@15                                             0292
*/********************************************************************/
*/*                      CHECK FOR BAD RETURN CODE                   */
*/********************************************************************/
*                                                                  0293
*   IF R15^=0 THEN                  /* CHECK FOR NON-ZERO            */
         LTR   R15,R15                                             0293
         BZ    @RF00293                                            0293
*     DO;                                                          0294
*                                                                  0294
*/********************************************************************/
*/*OUTPUT INCORRECT REPLY MESSAGE, THEN GO RE-ISSUE DUMP REQUEST MSG */
*/********************************************************************/
*                                                                  0295
*T37C0080:                                                         0295
*                                                                  0295
*       /*************************************************************/
*       /*                                                           */
*       /* TCEC MSGN(299)INCT(19) INVOKED                            */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0295
*       $TCECM='1'B;                /* SET TCEC SW IN RCA            */
T37C0080 OI    $TCECM(WAPTR),B'00000001'                           0295
*       R1=ADDR($TCA34);            /* SET UP PARM LIST $TR          */
         LA    R1,$TCA34                                           0296
*       CALL #EXIT;                 /* CALL CECOM                    */
         L     @15,#EXITA(,WAPTR)                                  0297
         BALR  @14,@15                                             0297
*       DCL                                                        0298
*         1 $TCA34,                 /* TCEC PARM LIST                */
*          2 $TCB34 FIXED(32) INIT(299),/* MSG NUMBER                */
*          2 $TCC34 FIXED(32) INIT(19),/* INCT LEN                   */
*          2 $TCD34 BIT(8) INIT('01000000'B),/* FLAG                 */
*          2 $TCE34 CHAR(4) INIT('FFFFFFFF'X);/* MSSAGE MASK         */
*       GO TO T37C0051;             /* GO RE-ISSUE,TWO-WAY MESSAGE   */
         B     T37C0051                                            0299
*     END;                                                         0300
*   ELSE                                                           0301
*     ;                                                            0301
@RF00293 DS    0H                                                  0302
*   DO;                                                            0302
*                                                                  0302
*/********************************************************************/
*/*      SET UP END ADDRESS FOR CONVERSION FROM EBCDIC TO HEX.       */
*/********************************************************************/
*                                                                  0303
*     /***************************************************************/
*     /*                                                             */
*     /* ITACONV FROM(DFORMD)TO(DT)TYPE(EH)COUNT(8) INVOKED          */
*     /*                                                             */
*     /***************************************************************/
*                                                                  0303
*     ITATCFR=ADDR(DFORMD);         /* SET THE FROM ADDRESS          */
         LA    @14,DFORMD(,WAPTR)                                  0303
         ST    @14,ITATCFR                                         0303
*     ITATCTO=ADDR(DT);             /* SET THE TO ADDRESS            */
         LA    @14,DT                                              0304
         ST    @14,ITATCTO                                         0304
*     ITATCTP='0'B;                 /* SET THE TYPE OF CONVERT BIT   */
         NI    ITATCTP,B'01111111'                                 0305
*     ITATCNT=8;                    /* GIVE THE CONVERT BYTE COUNT   */
         MVI   ITATCNT,X'08'                                       0306
*     R1=ADDR(ITATCPRM);            /* POINT TO CONVERT PARM LIST    */
         LA    R1,ITATCPRM                                         0307
*     CALL ISTSC021;                /* CALL CONVERT DIRECTLY         */
         L     @15,@CV00461                                        0308
         BALR  @14,@15                                             0308
*/********************************************************************/
*/*                    CHECK FOR BAD RETURN CODE                     */
*/********************************************************************/
*                                                                  0309
*     IF R15^=0 THEN                                               0309
         LTR   R15,R15                                             0309
         BNZ   @RT00309                                            0309
*       GO TO T37C0080;             /* ISSUE INCORRECT REPLY MSG     */
*     ELSE                                                         0311
*       ;                                                          0311
*                                                                  0311
*/********************************************************************/
*/* SET UP ADDRESSES FOR CALL TO STORAGE FORMAT ROUTINE.             */
*/********************************************************************/
*                                                                  0312
*     S=DF;                         /* STARTING ADDRESS IS DF.       */
         L     S,DF                                                0312
*     E=DT;                         /* ENDING ADDRESS IS DT.         */
         L     E,DT                                                0313
*     GO TO T37C0300;               /* STORAGE FORMAT ROUTINE        */
         B     T37C0300                                            0314
*   END;                                                           0315
*                                                                  0316
*/********************************************************************/
*/*          S T O R A G E   F O R M A T   R O U T I N E             */
*/********************************************************************/
*                                                                  0316
*T37C0300:                                                         0316
*                                                                  0316
*/********************************************************************/
*/* DETERMINE IF START ADDRESS IS LESS THAN END ADDRESS              */
*/********************************************************************/
*                                                                  0316
*   IF S>=E THEN                                                   0316
T37C0300 CR    S,E                                                 0316
         BNL   @RT00316                                            0316
*     GO TO T37C0330;               /* OUTPUT-INCORRECT ADR    SELECT*/
*   ELSE                                                           0318
*     ;                                                            0318
*                                                                  0318
*/********************************************************************/
*/* DETERMINE IF START ADDRESS IS VALID (WITHIN ONE OF THE ALLOWED   */
*/* AREAS)                                                           */
*/********************************************************************/
*                                                                  0319
*   IF S>=$RCA&S<$ENDCOMM THEN      /* CHECK RANGE IN RCA            */
         L     @14,$RCA(,WAPTR)                                    0319
         CR    S,@14                                               0319
         BL    @RF00319                                            0319
         L     @03,$ENDCOMM(,WAPTR)                                0319
         CR    S,@03                                               0319
         BNL   @RF00319                                            0319
*     DO;                                                          0320
*                                                                  0320
*/********************************************************************/
*/*      DETERMINE LENGTH OF DISPLAY WITHIN RCA AREA                 */
*/********************************************************************/
*                                                                  0321
*       IF E>$RCA&E<=$ENDCOMM THEN  /* IF END IS WITHIN RCA          */
         CR    E,@14                                               0321
         BNH   @RF00321                                            0321
         CR    E,@03                                               0321
         BNH   @RT00321                                            0321
*         GO TO T37C0340;           /* GO FORMAT STORAGE DUMP        */
*     END;                                                         0323
*   ELSE                                                           0324
*     ;                                                            0324
@RF00319 DS    0H                                                  0325
*   IF S>=$TEPBEGN&S<$TEPEND THEN   /* CHECK RANGE IN TOLTEP AREA    */
@RC00319 L     @14,$TEPBEGN(,WAPTR)                                0325
         CR    S,@14                                               0325
         BL    @RF00325                                            0325
         L     @03,$TEPEND(,WAPTR)                                 0325
         CR    S,@03                                               0325
         BNL   @RF00325                                            0325
*     DO;                                                          0326
*                                                                  0326
*/********************************************************************/
*/* DETERMINE LENGTH OF DISPLAY WITHIN TOLTEP AREA                   */
*/********************************************************************/
*                                                                  0327
*       IF E>$TEPBEGN&E<=$TEPEND THEN                              0327
         CR    E,@14                                               0327
         BNH   @RF00327                                            0327
         CR    E,@03                                               0327
         BNH   @RT00327                                            0327
*         GO TO T37C0340;           /* ADDRESS OK AS IS              */
*     END;                                                         0329
*   ELSE                                                           0330
*     ;                                                            0330
@RF00325 DS    0H                                                  0331
*   IF S>=$LOWADDR&                 /* CHECK FOR START ADDRESS       */
*       S<$HIGHADR THEN             /* WITHIN TOLTEP AREA.           */
@RC00325 L     @14,$LOWADDR(,WAPTR)                                0331
         CR    S,@14                                               0331
         BL    @RF00331                                            0331
         L     @03,$HIGHADR(,WAPTR)                                0331
         CR    S,@03                                               0331
         BNL   @RF00331                                            0331
*     DO;                                                          0332
*                                                                  0332
*/********************************************************************/
*/*      DETERMINE LENGTH OF DISPLAY WITHIN OLT AREA                 */
*/********************************************************************/
*                                                                  0333
*       IF E>$LOWADDR&E<=$HIGHADR THEN                             0333
         CR    E,@14                                               0333
         BNH   @RF00333                                            0333
         CR    E,@03                                               0333
         BNH   @RT00333                                            0333
*         GO TO T37C0340;           /* ADDRESS OK AS IS              */
*     END;                                                         0335
*   ELSE                                                           0336
*     ;                                                            0336
@RF00331 DS    0H                                                  0337
*   IF S>=WAPTR&S<EVAL(WAPTR+4096) THEN/* CHECK RANGE IN TWA         */
@RC00331 CR    S,WAPTR                                             0337
         BL    @RF00337                                            0337
         LR    @14,WAPTR                                           0337
         AL    @14,@CF00092                                        0337
         CR    S,@14                                               0337
         BNL   @RF00337                                            0337
*     DO;                                                          0338
*                                                                  0338
*/********************************************************************/
*/*         DETERMINE LENGTH OF DISPLAY WITHIN TEST WORK AREA        */
*/********************************************************************/
*                                                                  0339
*       IF E>WAPTR&E<=EVAL(WAPTR+4096) THEN                        0339
         CR    E,WAPTR                                             0339
         BNH   @RF00339                                            0339
         CR    E,@14                                               0339
         BNH   @RT00339                                            0339
*         GO TO T37C0340;           /* ADDRESS OK AS IS              */
*     END;                                                         0341
*   ELSE                                                           0342
*     DO;                                                          0342
*                                                                  0342
         B     @RC00337                                            0342
@RF00337 DS    0H                                                  0343
*/********************************************************************/
*/*            AN INCORRECT ADDRESS RANGE HAS BEEN SELECTED          */
*/********************************************************************/
*                                                                  0343
*T37C0330:                                                         0343
*                                                                  0343
*       /*************************************************************/
*       /*                                                           */
*       /* TCEC MSGN(543) INVOKED                                    */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0343
*       $TCECM='1'B;                /* SET TCEC SW IN RCA            */
T37C0330 OI    $TCECM(WAPTR),B'00000001'                           0343
*       R1=ADDR($TCA36);            /* SET UP PARM LIST $TR          */
         LA    R1,$TCA36                                           0344
*       CALL #EXIT;                 /* CALL CECOM                    */
         L     @15,#EXITA(,WAPTR)                                  0345
         BALR  @14,@15                                             0345
*       DCL                                                        0346
*         1 $TCA36,                 /* TCEC PARM LIST                */
*          2 $TCB36 FIXED(32) INIT(543),/* MSG NUMBER                */
*          2 $TCC36 FIXED(32) INIT(0),/* INCT LEN                    */
*          2 $TCD36 BIT(8) INIT('00000000'B),/* FLAG                 */
*          2 $TCE36 CHAR(4) INIT('FFFFFFFF'X);/* MSSAGE MASK         */
*       GO TO T37C0050;             /* GET NEXT DUMP REQUEST         */
         B     T37C0050                                            0347
*     END;                                                         0348
*T37C0340:                                                         0349
*   $BACKINT=OFF;                   /* RESET CONTROL SWITCH          */
@RC00337 DS    0H                                                  0349
T37C0340 NI    $BACKINT(WAPTR),B'11110111'                         0349
*/********************************************************************/
*/*        ROUND DOWN START ADDRESS TO A DOUBLE WORD BOUNDARY        */
*/********************************************************************/
*                                                                  0350
*   S=(S/8)*8;                                                     0350
         LR    @14,S                                               0350
         SRL   @14,3                                               0350
         SLA   @14,3                                               0350
         LR    S,@14                                               0350
*   $DMSGSW=OFF;                    /* RESET MESSAGE SWITCH          */
         NI    $DMSGSW(WAPTR),B'11101111'                          0351
*/********************************************************************/
*/*        ROUND UP END ADDRESS TO NEXT DOUBLE WORD BOUNDARY         */
*/********************************************************************/
*                                                                  0352
*   E=((E+7)/8)*8;                                                 0352
         LA    @10,7                                               0352
         ALR   @10,E                                               0352
         SRDA  @10,32                                              0352
         D     @10,@CF00054                                        0352
         SLA   @11,3                                               0352
         LR    E,@11                                               0352
*T37C0345:                                                         0353
*   IF $OPCOM=ON&$ALTPRTR=OFF THEN                                 0353
T37C0345 TM    $OPCOM(WAPTR),B'10000000'                           0353
         BNO   @RF00353                                            0353
         TM    $ALTPRTR(WAPTR),B'00000010'                         0353
         BZ    @RT00353                                            0353
*     GO TO T37C0370;                                              0354
*   IF $CIREQ=ON THEN               /* CHECK FOR COMMUNICATIONS      */
@RF00353 TM    $CIREQ(WAPTR),B'00000001'                           0355
         BO    @RT00355                                            0355
*     GO TO T37C0050;               /* GO RE-ISSUE 541D MESSAGE.     */
*   ELSE                                                           0357
*     ;                                                            0357
*                                                                  0357
*/********************************************************************/
*/* CHECK FOR START ADDRESS LESS THAN END ADDRESS                    */
*/********************************************************************/
*                                                                  0358
*   IF S>=E THEN                                                   0358
         CR    S,E                                                 0358
         BNL   @RT00358                                            0358
*     GO TO T37C0050;               /* GET NEXT DUMP REQUEST         */
*   Y=S;                                                           0360
*                                                                  0360
         ST    S,Y                                                 0360
*   /*****************************************************************/
*   /*                                                               */
*   /* ITACONV FROM(Y)TO(ADR) INVOKED                                */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0361
*   RFY                                                            0361
*     ITATCF BASED(ADDR(Y));        /* MAP VARIABLE OVER FROM        */
*   RFY                                                            0362
*     ITATCT BASED(ADDR(ADR));      /* MAP VARIBABLE OVER TO         */
*   ITATCTS=ITATCT(LENGTH(ADR)+1:LENGTH(ADR)+1);/* SAVE BYTE PAST TO
*                                      FIELD                         */
         LA    @14,2104                                            0363
         ALR   @14,WAPTR                                           0363
         SLR   ITATCTS,ITATCTS                                     0363
         IC    ITATCTS,ITATCT+8(,@14)                              0363
*   UNPK(ITATCT(1:LENGTH(ADR)+1),ITATCF(1:LENGTH(Y)+1));/* EXPAND HEX
*                                      TO EBCDIC                     */
         LA    @11,Y                                               0364
         UNPK  ITATCT(9,@14),ITATCF(5,@11)                         0364
*   TR(ITATCT(1:LENGTH(ADR)),$TRTBL);/* CONVERT FA-FF TO C1-C6       */
         L     @11,RCAPTR(,WAPTR)                                  0365
         L     @11,$TRTBLA(,@11)                                   0365
         TR    ITATCT(8,@14),$TRTBL(@11)                           0365
*   ITATCT(LENGTH(ADR)+1:LENGTH(ADR)+1)=ITATCTS;/* RESTORE BYTE PAST
*                                      TO FIELD CONVERT ADDRESS TO 0366
*                                      EBCDIC                        */
         STC   ITATCTS,ITATCT+8(,@14)                              0366
*   DADR='=';                       /* EQUAL ONE CHAR SPACER         */
         MVI   DADR(WAPTR),C'='                                    0367
*/********************************************************************/
*/*            GET FIRST DOUBLE WORD (LEFT HALF OF DISPLAY)          */
*/********************************************************************/
*                                                                  0368
*   LDATA=STG(1);                   /* GET 8 BYTES DATA FOR LEFT     */
         MVC   LDATA(8,WAPTR),STG(S)                               0368
*   S=S+8;                          /* HALF OF DISPLAY LINE          */
         AL    S,@CF00054                                          0369
*   IF S>=E THEN                    /* CHECK FOR LIMIT REACHED       */
         CR    S,E                                                 0370
         BL    @RF00370                                            0370
*     DO;                                                          0371
*       RDATA='        ';           /* BLANK RIGHT HALF OUTPUT       */
         MVC   RDATA(8,WAPTR),@CC00621                             0372
*       EDATAR='                ';                                 0373
*                                                                  0373
         MVC   EDATAR(16,WAPTR),@CC00622                           0373
*/********************************************************************/
*/* ADDRESS OF AREA TO BE DISPLAYED HAS REACHED END ADDRESS AND ONLY */
*/* THE LEFT DOUBLE WORD IS TO BE CONVERTED TO EBCDIC AND OUTPUT     */
*/********************************************************************/
*                                                                  0374
*       /*************************************************************/
*       /*                                                           */
*       /* ITACONV FROM(LDATA)TO(EDATAL)TYPE(HE)COUNT(8) INVOKED     */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0374
*       ITATCFR=ADDR(LDATA);        /* SET THE FROM ADDRESS          */
         LA    @14,LDATA(,WAPTR)                                   0374
         ST    @14,ITATCFR                                         0374
*       ITATCTO=ADDR(EDATAL);       /* SET THE TO ADDRESS            */
         LA    @14,EDATAL(,WAPTR)                                  0375
         ST    @14,ITATCTO                                         0375
*       ITATCTP='1'B;               /* SET THE TYPE OF CONVERT BIT   */
         OI    ITATCTP,B'10000000'                                 0376
*       ITATCNT=8;                  /* GIVE THE CONVERT BYTE COUNT   */
         MVI   ITATCNT,X'08'                                       0377
*       R1=ADDR(ITATCPRM);          /* POINT TO CONVERT PARM LIST    */
         LA    R1,ITATCPRM                                         0378
*       CALL ISTSC021;              /* CALL CONVERT DIRECTLY         */
         L     @15,@CV00461                                        0379
         BALR  @14,@15                                             0379
*       GO TO T37C0360;             /* GO OUTPUT THIS LAST LINE      */
         B     T37C0360                                            0380
*     END;                                                         0381
*   ELSE                                                           0382
*     DO;                                                          0382
*                                                                  0382
@RF00370 DS    0H                                                  0383
*/********************************************************************/
*/* CONVERT 8 BYTES OF DATA FOR RIGHT HALF OF LINE TO BE DISPLAYED   */
*/********************************************************************/
*                                                                  0383
*       RDATA=STG(1);               /* 8 BYTES RIGHT STORAGE DWORD   */
         MVC   RDATA(8,WAPTR),STG(S)                               0383
*       S=S+8;                                                     0384
         AL    S,@CF00054                                          0384
*       IF $BACKINT=ON              /* CHECK FOR INITIALIZATION OF   */
*         THEN                      /* BACKUP BUFFER                 */
         TM    $BACKINT(WAPTR),B'00001000'                         0385
         BNO   @RF00385                                            0385
*         DO;                                                      0386
*                                                                  0386
*/********************************************************************/
*/* CHECK FOR CASE WHERE THE CURRENT LINE IS EQUAL TO LAST LINE OUT. */
*/********************************************************************/
*                                                                  0387
*           IF CURSTG=BUBACK THEN                                  0387
         L     @14,Y                                               0387
         CLC   CURSTG(16,@14),BUBACK(BDATAPTR)                     0387
         BNE   @RF00387                                            0387
*             DO;                                                  0388
*                                                                  0388
*/********************************************************************/
*/* CHECK FOR NEED TO OUTPUT -SAME AS ABOVE- MESSAGE                 */
*/********************************************************************/
*                                                                  0389
*               IF $DMSGSW=ON THEN                                 0389
         TM    $DMSGSW(WAPTR),B'00010000'                          0389
         BO    @RT00389                                            0389
*                 GO TO T37C0345;                                  0390
*               ELSE                                               0391
*                 DO;                                              0391
*                   $INBUFR='SAME AS ABOVE';                       0392
         MVI   $INBUFR+13(WAPTR),C' '                              0392
         MVC   $INBUFR+14(66,WAPTR),$INBUFR+13(WAPTR)              0392
         MVC   $INBUFR(13,WAPTR),@CC00625                          0392
*                   $DMSGSW=ON;     /* INDICATE MSG OUT              */
         OI    $DMSGSW(WAPTR),B'00010000'                          0393
*                   $PRTONLY=ON;                                   0394
*                                                                  0394
         OI    $PRTONLY(WAPTR),B'00001000'                         0394
*                   /*************************************************/
*                   /*                                               */
*                   /* TCEC                                          */
*                   /* MSGN(247)MSGMSK('40000000'X)SUB(YES)NOID(YES) */
*                   /* INVOKED                                       */
*                   /*                                               */
*                   /*************************************************/
*                                                                  0395
*                   $TCECM='1'B;    /* SET TCEC SW IN RCA            */
         OI    $TCECM(WAPTR),B'00000001'                           0395
*                   R1=ADDR($TCA39);/* SET UP PARM LIST $TR          */
         LA    R1,$TCA39                                           0396
*                   CALL S20CEC03;  /* CALL TCEC-MULTIPLE LN         */
         L     @15,@CV00446                                        0397
         BALR  @14,@15                                             0397
*                   DCL                                            0398
*                     1 $TCA39,     /* TCEC PARM LIST                */
*                      2 $TCB39 FIXED(32) INIT(247),/* MSG NUMBER    */
*                      2 $TCC39 FIXED(32) INIT(0),/* INCT LEN        */
*                      2 $TCD39 BIT(8) INIT('10100000'B),/* FLAG     */
*                      2 $TCE39 CHAR(4) INIT('40000000'X);/* MSSAGE
*                                      MASK                          */
*                   GO TO T37C0345; /* GET NEXT LINE                 */
         B     T37C0345                                            0399
*                 END;                                             0400
*             END;                                                 0401
*           ELSE                                                   0402
*             ;                                                    0402
@RF00387 DS    0H                                                  0403
*         END;                                                     0403
*       $BACKINT=ON;                                               0404
@RF00385 OI    $BACKINT(WAPTR),B'00001000'                         0404
*       BDATAPTR=Y;                                                0405
*                                                                  0405
         L     BDATAPTR,Y                                          0405
*/********************************************************************/
*/*  CONVERT TO EBCDIC BOTH LEFT & RIGHT DOUBLE WORDS & OUTPUT BOTH  */
*/********************************************************************/
*                                                                  0406
*       /*************************************************************/
*       /*                                                           */
*       /* ITACONV FROM(UDATA)TO(EDATA)TYPE(HE)COUNT(16) INVOKED     */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0406
*       ITATCFR=ADDR(UDATA);        /* SET THE FROM ADDRESS          */
         LA    @14,UDATA(,WAPTR)                                   0406
         ST    @14,ITATCFR                                         0406
*       ITATCTO=ADDR(EDATA);        /* SET THE TO ADDRESS            */
         LA    @14,EDATA(,WAPTR)                                   0407
         ST    @14,ITATCTO                                         0407
*       ITATCTP='1'B;               /* SET THE TYPE OF CONVERT BIT   */
         OI    ITATCTP,B'10000000'                                 0408
*       ITATCNT=16;                 /* GIVE THE CONVERT BYTE COUNT   */
         MVI   ITATCNT,X'10'                                       0409
*       R1=ADDR(ITATCPRM);          /* POINT TO CONVERT PARM LIST    */
         LA    R1,ITATCPRM                                         0410
*       CALL ISTSC021;              /* CALL CONVERT DIRECTLY         */
         L     @15,@CV00461                                        0411
         BALR  @14,@15                                             0411
*       $DMSGSW=OFF;                /* RESET MSG OUTPUT SWITCH       */
         NI    $DMSGSW(WAPTR),B'11101111'                          0412
*T37C0360:                                                         0413
*       DO I=1 TO 4;                                               0413
T37C0360 LA    I,1                                                 0413
@DL00413 DS    0H                                                  0414
*         BUF(I)=EDAT(I);           /* MOVE TO PRINT BUFFER          */
         LR    @14,I                                               0414
         MH    @14,@CH00087                                        0414
         ST    @14,@TF00001                                        0414
         ALR   @14,WAPTR                                           0414
         LR    @11,I                                               0414
         SLA   @11,3                                               0414
         ALR   @11,WAPTR                                           0414
         MVC   BUF-9(8,@14),EDAT-8(@11)                            0414
*         DBUF(I)=' ';              /* SINGLE BLANK BETWEEN WORDS    */
         LR    @14,WAPTR                                           0415
         AL    @14,@TF00001                                        0415
         MVI   DBUF-9(@14),C' '                                    0415
*       END;                                                       0416
*                                                                  0416
         AL    I,@CF00072                                          0416
         C     I,@CF00068                                          0416
         BNH   @DL00413                                            0416
*/********************************************************************/
*/*TRANSLATE ANY UNPRINTABLE CHARACTERS TO PRINTABLE BLANKS          */
*/********************************************************************/
*                                                                  0417
*       TR(UDATA,TRTAB(1));                                        0417
         TR    UDATA(16,WAPTR),TRTAB                               0417
*       FILCHAR=' ';                /* BLANK ONE CHAR SPACER         */
         MVI   FILCHAR(WAPTR),C' '                                 0418
*       $PRTONLY=ON;                /* DESTINATION ALTERNATE PTR     */
*                                                                  0419
         OI    $PRTONLY(WAPTR),B'00001000'                         0419
*       /*************************************************************/
*       /*                                                           */
*       /* TCEC MSGN(247)MSGMSK('40000000'X)SUB(YES)NOID(YES) INVOKED*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0420
*       $TCECM='1'B;                /* SET TCEC SW IN RCA            */
         OI    $TCECM(WAPTR),B'00000001'                           0420
*       R1=ADDR($TCA41);            /* SET UP PARM LIST $TR          */
         LA    R1,$TCA41                                           0421
*       CALL S20CEC03;              /* CALL TCEC-MULTIPLE LN         */
         L     @15,@CV00446                                        0422
         BALR  @14,@15                                             0422
*       DCL                                                        0423
*         1 $TCA41,                 /* TCEC PARM LIST                */
*          2 $TCB41 FIXED(32) INIT(247),/* MSG NUMBER                */
*          2 $TCC41 FIXED(32) INIT(0),/* INCT LEN                    */
*          2 $TCD41 BIT(8) INIT('10100000'B),/* FLAG                 */
*          2 $TCE41 CHAR(4) INIT('40000000'X);/* MSSAGE MASK         */
*       GO TO T37C0345;             /* GO GET NEXT LINE OF OUTPUT    */
         B     T37C0345                                            0424
*     END;                                                         0425
*T37C0370:                                                         0426
*   R13=SVESC02D(2);                                               0426
T37C0370 L     R13,SVESC02D+4(,WAPTR)                              0426
*   DO;                             /* ATDSPLY                       */
*   END;                            /* ATDSPLY                       */
*   END ISTTC037;                                                  0429
@EL00001 DS    0H                                                  0429
@EF00001 DS    0H                                                  0429
@ER00001 LM    @14,@12,12(@13)                                     0429
         BR    @14                                                 0429
@DATA    DS    0H
@CH00087 DC    H'9'
@SM00644 MVC   DFORMB-1(0,@14),@TS00001
@SM00646 MVC   DFORMD-1(0,@14),@TS00001
         DS    0F
@TF00001 DS    F
         DS    0F
@CF00072 DC    F'1'
@CF00068 DC    F'4'
@CF00054 DC    F'8'
@CF00231 DC    F'12'
@CF00592 DC    F'13'
@CF00061 DC    F'16'
@CF00092 DC    F'4096'
@CV00422 DC    V(ISTSC020)
@CV00446 DC    V(S20CEC03)
@CV00461 DC    V(ISTSC021)
         DS    0D
Y        DS    F
DF       DC    F'0'
         ORG   DF
DFA      DS    CL1
DFROM    DS    CL3
         ORG   DF+4
DT       DC    F'0'
         ORG   DT
DTA      DS    CL1
DTO      DS    CL3
         ORG   DT+4
@TS00001 DS    CL8
@CC00594 DC    C'0000000000000000'
@CC00622 DC    C'                '
@CC00625 DC    C'SAME AS ABOVE'
@CC00621 EQU   @CC00622
@CC00581 DC    C'CANCEL'
@CC00590 DC    C'D '
         DS    CL3
$TCA05   DS    CL13
         ORG   $TCA05
$TCB05   DC    A(540)
$TCC05   DC    A(0)
$TCD05   DC    B'00001100'
$TCE05   DC    X'FFFFFFFF'
         ORG   $TCA05+13
         DS    CL3
$TCA08   DS    CL13
         ORG   $TCA08
$TCB08   DC    A(540)
$TCC08   DC    A(0)
$TCD08   DC    B'10001100'
$TCE08   DC    X'02000000'
         ORG   $TCA08+13
         DS    CL3
ITATCPRM DS    CL14
         ORG   ITATCPRM
@NM00026 DC    X'0102F4F1'
ITATCFR  DS    AL4
ITATCTO  DS    AL4
@NM00027 DC    AL1(0)
         ORG   @NM00027
ITATCTP  DS    BL1
         ORG   ITATCPRM+13
ITATCNT  DS    FL1
         ORG   ITATCPRM+14
         DS    CL2
$TCA10   DS    CL13
         ORG   $TCA10
$TCB10   DC    A(540)
$TCC10   DC    A(0)
$TCD10   DC    B'10001100'
$TCE10   DC    X'01000000'
         ORG   $TCA10+13
         DS    CL3
$TCA11   DS    CL13
         ORG   $TCA11
$TCB11   DC    A(540)
$TCC11   DC    A(0)
$TCD11   DC    B'00000000'
$TCE11   DC    X'40000000'
         ORG   $TCA11+13
         DS    CL3
$TCA12   DS    CL13
         ORG   $TCA12
$TCB12   DC    A(540)
$TCC12   DC    A(0)
$TCD12   DC    B'00001100'
$TCE12   DC    X'40000000'
         ORG   $TCA12+13
         DS    CL3
$TCA14   DS    CL13
         ORG   $TCA14
$TCB14   DC    A(540)
$TCC14   DC    A(0)
$TCD14   DC    B'10000000'
$TCE14   DC    X'20000000'
         ORG   $TCA14+13
         DS    CL3
$TCA15   DS    CL13
         ORG   $TCA15
$TCB15   DC    A(540)
$TCC15   DC    A(0)
$TCD15   DC    B'10001100'
$TCE15   DC    X'20000000'
         ORG   $TCA15+13
         DS    CL3
$TCA17   DS    CL13
         ORG   $TCA17
$TCB17   DC    A(540)
$TCC17   DC    A(0)
$TCD17   DC    B'10000000'
$TCE17   DC    X'10000000'
         ORG   $TCA17+13
         DS    CL3
$TCA18   DS    CL13
         ORG   $TCA18
$TCB18   DC    A(540)
$TCC18   DC    A(0)
$TCD18   DC    B'10001100'
$TCE18   DC    X'10000000'
         ORG   $TCA18+13
         DS    CL3
$TCA20   DS    CL13
         ORG   $TCA20
$TCB20   DC    A(540)
$TCC20   DC    A(0)
$TCD20   DC    B'10000000'
$TCE20   DC    X'08000000'
         ORG   $TCA20+13
         DS    CL3
$TCA21   DS    CL13
         ORG   $TCA21
$TCB21   DC    A(540)
$TCC21   DC    A(0)
$TCD21   DC    B'10001100'
$TCE21   DC    X'08000000'
         ORG   $TCA21+13
         DS    CL3
$TCA23   DS    CL13
         ORG   $TCA23
$TCB23   DC    A(540)
$TCC23   DC    A(0)
$TCD23   DC    B'10000000'
$TCE23   DC    X'04000000'
         ORG   $TCA23+13
         DS    CL3
$TCA24   DS    CL13
         ORG   $TCA24
$TCB24   DC    A(540)
$TCC24   DC    A(0)
$TCD24   DC    B'10001100'
$TCE24   DC    X'04000000'
         ORG   $TCA24+13
         DS    CL3
$TCA25   DS    CL13
         ORG   $TCA25
$TCB25   DC    A(546)
$TCC25   DC    A(0)
$TCD25   DC    B'00000000'
$TCE25   DC    X'FFFFFFFF'
         ORG   $TCA25+13
         DS    CL3
$TCA26   DS    CL13
         ORG   $TCA26
$TCB26   DC    A(541)
$TCC26   DC    A(19)
$TCD26   DC    B'01000000'
$TCE26   DC    X'FFFFFFFF'
         ORG   $TCA26+13
         DS    CL3
$TCA27   DS    CL13
         ORG   $TCA27
$TCB27   DC    A(542)
$TCC27   DC    A(0)
$TCD27   DC    B'00000000'
$TCE27   DC    X'FFFFFFFF'
         ORG   $TCA27+13
         DS    CL3
$TCA28   DS    CL13
         ORG   $TCA28
$TCB28   DC    A(545)
$TCC28   DC    A(0)
$TCD28   DC    B'00000000'
$TCE28   DC    X'20000000'
         ORG   $TCA28+13
         DS    CL3
$TCA29   DS    CL13
         ORG   $TCA29
$TCB29   DC    A(545)
$TCC29   DC    A(0)
$TCD29   DC    B'00000000'
$TCE29   DC    X'80000000'
         ORG   $TCA29+13
         DS    CL3
$TCA30   DS    CL13
         ORG   $TCA30
$TCB30   DC    A(545)
$TCC30   DC    A(0)
$TCD30   DC    B'00000000'
$TCE30   DC    X'40000000'
         ORG   $TCA30+13
         DS    CL3
$TCA31   DS    CL13
         ORG   $TCA31
$TCB31   DC    A(545)
$TCC31   DC    A(0)
$TCD31   DC    B'00000000'
$TCE31   DC    X'10000000'
         ORG   $TCA31+13
         DS    CL3
$TCA32   DS    CL13
         ORG   $TCA32
$TCB32   DC    A(544)
$TCC32   DC    A(0)
$TCD32   DC    B'00000000'
$TCE32   DC    X'FFFFFFFF'
         ORG   $TCA32+13
         DS    CL3
$TCA34   DS    CL13
         ORG   $TCA34
$TCB34   DC    A(299)
$TCC34   DC    A(19)
$TCD34   DC    B'01000000'
$TCE34   DC    X'FFFFFFFF'
         ORG   $TCA34+13
         DS    CL3
$TCA36   DS    CL13
         ORG   $TCA36
$TCB36   DC    A(543)
$TCC36   DC    A(0)
$TCD36   DC    B'00000000'
$TCE36   DC    X'FFFFFFFF'
         ORG   $TCA36+13
         DS    CL3
$TCA39   DS    CL13
         ORG   $TCA39
$TCB39   DC    A(247)
$TCC39   DC    A(0)
$TCD39   DC    B'10100000'
$TCE39   DC    X'40000000'
         ORG   $TCA39+13
         DS    CL3
$TCA41   DS    CL13
         ORG   $TCA41
$TCB41   DC    A(247)
$TCC41   DC    A(0)
$TCD41   DC    B'10100000'
$TCE41   DC    X'40000000'
         ORG   $TCA41+13
TRTAB    DC    4CL16'................'
         DC    CL16'.............(+.'
         DC    CL16'&&..........$*)..'
         DC    CL16'-/.........,....'
         DC    CL16'...........#@''=.'
         DC    4CL16'................'
         DC    CL16'.ABCDEFGHI......'
         DC    CL16'.JKLMNOPQR......'
         DC    CL16'..STUVWXYZ......'
         DC    CL16'0123456789......'
         DS    CL3
PATCH    DC    32F'0'
GMSG     DC    CL2'03'
         DC    CL2'47'
         DC    CL2'8B'
         DC    CL2'CF'
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
ITATCTS  EQU   @10
I        EQU   @10
WAPTR    EQU   @02
R1       EQU   @01
ABNDPTR  EQU   @04
R5       EQU   @05
BDATAPTR EQU   @06
Z        EQU   @07
S        EQU   @08
E        EQU   @09
R13      EQU   @13
R15      EQU   @15
$RCAAREA EQU   0
$POINTER EQU   $RCAAREA+100
$TRTBLA  EQU   $POINTER+124
$CONSTNT EQU   $RCAAREA+244
$RCAFLG  EQU   $RCAAREA+604
$TRTBL   EQU   0
TOLTEPWA EQU   0
$CDA     EQU   TOLTEPWA+100
$RCA     EQU   $CDA+44
$ENDCOMM EQU   $CDA+48
$OLTPTR  EQU   $CDA+52
$LOWADDR EQU   $OLTPTR
$HIMOREC EQU   $CDA+60
$HIGHADR EQU   $HIMOREC
$TEPBEGN EQU   $CDA+68
$TEPEND  EQU   $CDA+76
$COMMFLG EQU   TOLTEPWA+224
$FLAG3   EQU   $COMMFLG+2
$PRTONLY EQU   $FLAG3
$ALTPRTR EQU   $FLAG3
$FLAG4   EQU   $COMMFLG+3
$OPCOM   EQU   $FLAG4
$DMSGSW  EQU   $FLAG4
$BACKINT EQU   $FLAG4
$FLAG6   EQU   $COMMFLG+5
$ABNDBIT EQU   $FLAG6
$ABTERM  EQU   $ABNDBIT
$CIREQ   EQU   $FLAG6
$FLAG8   EQU   $COMMFLG+7
$TCECM   EQU   $FLAG8
$FLAG12  EQU   $COMMFLG+11
$BUFFER  EQU   TOLTEPWA+1976
$INBUFR  EQU   TOLTEPWA+2104
#EXITA   EQU   TOLTEPWA+2632
$CCOMDAT EQU   TOLTEPWA+2644
$CFLGS   EQU   $CCOMDAT+16
$24FEMSG EQU   TOLTEPWA+2681
$24CATMG EQU   $24FEMSG+11
@NM00023 EQU   TOLTEPWA+2776
$OUNTPTR EQU   @NM00023+4
$NSPTR   EQU   $OUNTPTR
$NSCNT   EQU   @NM00023+10
$ENXX    EQU   @NM00023+15
$IMITX   EQU   $ENXX
SVESC033 EQU   TOLTEPWA+3160
SVECC013 EQU   TOLTEPWA+3232
SVEIC003 EQU   TOLTEPWA+3592
SVESC022 EQU   TOLTEPWA+3736
SVECC011 EQU   TOLTEPWA+4024
#EXIT    EQU   0
STG      EQU   0
BACKSAVE EQU   0
PSW      EQU   0
LPSW     EQU   PSW
RPSW     EQU   PSW+4
GPR      EQU   PSW+8
BUBACK   EQU   0
CURSTG   EQU   0
ITATCF   EQU   0
ITATCT   EQU   0
RCAPTR   EQU   $RCA
SVESC02D EQU   SVESC022
BUFFER   EQU   $INBUFR
ADR2     EQU   BUFFER
ADR      EQU   ADR2
DADR     EQU   ADR2+8
ABUF     EQU   BUFFER+9
BUF      EQU   ABUF
DBUF     EQU   ABUF+8
FILCHAR  EQU   BUFFER+45
UDATA    EQU   BUFFER+46
LDATA    EQU   UDATA
RDATA    EQU   UDATA+8
EDATA    EQU   $BUFFER
EDAT     EQU   EDATA
ELRD     EQU   $BUFFER
EDATAL   EQU   ELRD
EDATAR   EQU   ELRD+16
PSWLOC   EQU   $INBUFR
PSWL     EQU   PSWLOC
PSWD     EQU   PSWLOC+8
PSWR     EQU   PSWLOC+9
DFORM    EQU   $INBUFR
DFORMA   EQU   DFORM+1
INCHAR   EQU   DFORMA
DFORMC   EQU   DFORM+30
DFORMB   EQU   DFORMC
DFORMD   EQU   DFORMC+8
DFIN     EQU   $INBUFR
DFINB    EQU   DFIN+1
GRCON    EQU   $INBUFR
GRMSG    EQU   GRCON
TBUFF    EQU   GRCON+2
STMSG    EQU   $BUFFER
ADAREA   EQU   $BUFFER
INCT     EQU   $INBUFR
SVECC012 EQU   SVESC022
SVEIC00A EQU   SVEIC003
SVEIC004 EQU   SVEIC003
SVEIC005 EQU   SVEIC003
SVESC02A EQU   SVESC022
SVESC02B EQU   SVESC022
SVESC02E EQU   SVESC022
SVESC02F EQU   SVECC013
SVESC024 EQU   SVESC022
SVESC027 EQU   SVESC022
SVESC029 EQU   SVESC033
SVESC031 EQU   SVECC013
SVESC032 EQU   SVECC011
SVETC037 EQU   SVEIC003
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
DFINA    EQU   DFIN
DDUMA    EQU   DFORM+3
DDUM     EQU   DFORM
SVECC010 EQU   TOLTEPWA+3952
SVETC035 EQU   TOLTEPWA+3880
SVESC030 EQU   TOLTEPWA+3808
SVESC020 EQU   TOLTEPWA+3664
SVEIC002 EQU   TOLTEPWA+3520
SVECC014 EQU   TOLTEPWA+3376
SVESC120 EQU   TOLTEPWA+3304
SVESC025 EQU   TOLTEPWA+3088
@NM00025 EQU   TOLTEPWA+2980
$RPLERR  EQU   TOLTEPWA+2977
@NM00024 EQU   TOLTEPWA+2976
$R13PR3  EQU   TOLTEPWA+2972
$CEINT2  EQU   TOLTEPWA+2968
$CEINT1  EQU   TOLTEPWA+2964
$MSGGET  EQU   TOLTEPWA+2960
$ACQLIST EQU   TOLTEPWA+2956
$R4SAVE1 EQU   TOLTEPWA+2952
$CLSISS  EQU   TOLTEPWA+2950
$CLSCNT  EQU   TOLTEPWA+2948
$CUTABLE EQU   TOLTEPWA+2868
$BUFSZ2  EQU   TOLTEPWA+2864
$RESID2  EQU   TOLTEPWA+2860
$OLTCCW2 EQU   TOLTEPWA+2856
$ENDBFR2 EQU   TOLTEPWA+2852
$1STBFR2 EQU   TOLTEPWA+2848
$TECB2   EQU   TOLTEPWA+2844
$BUFSZ1  EQU   TOLTEPWA+2840
$RESID1  EQU   TOLTEPWA+2836
$OLTCCW1 EQU   TOLTEPWA+2832
$ENDBFR1 EQU   TOLTEPWA+2828
$1STBFR1 EQU   TOLTEPWA+2824
$TECB1   EQU   TOLTEPWA+2820
$WAITIME EQU   TOLTEPWA+2816
$TRTN#   EQU   TOLTEPWA+2815
$WIODEV  EQU   TOLTEPWA+2814
$RQSTSZE EQU   TOLTEPWA+2812
$RQSTPTR EQU   TOLTEPWA+2808
$R4SAVE  EQU   TOLTEPWA+2804
$PARTADR EQU   TOLTEPWA+2800
$TBSDATA EQU   TOLTEPWA+2796
$CTWIDTH EQU   TOLTEPWA+2795
$CTLINE  EQU   TOLTEPWA+2794
$APWIDTH EQU   TOLTEPWA+2793
$APLINE  EQU   TOLTEPWA+2792
$INDEX   EQU   $IMITX
$UMXX    EQU   @NM00023+14
$NSXX    EQU   @NM00023+12
$ATACNT  EQU   $NSCNT
$CTR     EQU   @NM00023+8
$ATAPTR  EQU   $NSPTR
$DDRPTR  EQU   @NM00023
$DTORESP EQU   TOLTEPWA+2712
$APNAME  EQU   TOLTEPWA+2704
$24SYMNE EQU   $24CATMG+4
$24DEVAD EQU   $24CATMG
$24RTN#  EQU   $24FEMSG+8
$ESECTID EQU   $24FEMSG
$24FLGS  EQU   TOLTEPWA+2680
$24SAVE2 EQU   TOLTEPWA+2676
$24SAVE1 EQU   TOLTEPWA+2672
$24UNADR EQU   TOLTEPWA+2668
$24SAV13 EQU   TOLTEPWA+2664
$24RETCD EQU   TOLTEPWA+2663
$MACID   EQU   TOLTEPWA+2661
$CSPARE  EQU   $CFLGS
$C2WAY   EQU   $CFLGS
$CINCT   EQU   $CCOMDAT+12
$CINADR  EQU   $CCOMDAT+8
$COUTCT  EQU   $CCOMDAT+4
$COUTAD  EQU   $CCOMDAT
ROOTLOC  EQU   TOLTEPWA+2640
$RETREG  EQU   TOLTEPWA+2636
$WORK    EQU   TOLTEPWA+2376
$EXTA    EQU   TOLTEPWA+2320
$PASSONA EQU   TOLTEPWA+2264
$TRMINPT EQU   TOLTEPWA+2184
$TLTRPL3 EQU   TOLTEPWA+1856
$TLTRPL2 EQU   TOLTEPWA+1736
$TLTRPL1 EQU   TOLTEPWA+1616
$SLTBL   EQU   TOLTEPWA+1468
@NM00022 EQU   TOLTEPWA+1464
$DEVTBLE EQU   TOLTEPWA+240
@NM00021 EQU   $COMMFLG+15
@NM00020 EQU   $COMMFLG+14
@NM00019 EQU   $COMMFLG+13
@NM00018 EQU   $COMMFLG+12
@NM00017 EQU   $FLAG12
$VARYINP EQU   $FLAG12
$ENDTEST EQU   $FLAG12
$VRYHRD  EQU   $FLAG12
$VRYSFT  EQU   $FLAG12
$POSTFLG EQU   $FLAG12
$OPTMSG  EQU   $FLAG12
@NM00016 EQU   $COMMFLG+10
@NM00015 EQU   $COMMFLG+9
@NM00014 EQU   $COMMFLG+8
$VS2     EQU   $FLAG8
$VS1     EQU   $FLAG8
$EDOS    EQU   $FLAG8
@NM00013 EQU   $FLAG8
$TWOWAY  EQU   $FLAG8
@NM00012 EQU   $FLAG8
@NM00011 EQU   $COMMFLG+6
$FSTMCIS EQU   $FLAG6
$DISCREQ EQU   $FLAG6
$DISCISS EQU   $FLAG6
$CHANGE  EQU   $FLAG6
$CTERROR EQU   $FLAG6
$RECAL11 EQU   $FLAG6
@NM00010 EQU   $COMMFLG+4
$ACTOPND EQU   $FLAG4
$ACQCUTT EQU   $FLAG4
$CLSSACT EQU   $FLAG4
$TSTDEVP EQU   $FLAG4
$APRQPER EQU   $FLAG4
$NEWAP   EQU   $FLAG3
$OPTERR  EQU   $FLAG3
$REQSTOR EQU   $FLAG3
$LOGOFFE EQU   $FLAG3
$TSTERR  EQU   $FLAG3
$DEVERR  EQU   $FLAG3
@NM00009 EQU   $COMMFLG+1
@NM00008 EQU   $COMMFLG
@NM00007 EQU   $CDA+120
$CUCNT   EQU   $CDA+118
@NM00006 EQU   $CDA+117
$PRTFORM EQU   $CDA+116
$OPISCNT EQU   $CDA+114
$OPNDCNT EQU   $CDA+112
$GETMSZE EQU   $CDA+110
$GRCNTS  EQU   $CDA+108
$CTLCNT  EQU   $CDA+106
$ACTLVL  EQU   $CDA+105
$PRNTLVL EQU   $CDA+104
$ERRCNTA EQU   $CDA+102
$TLCNT   EQU   $CDA+100
$TIMEALW EQU   $CDA+96
$PTRAREA EQU   $CDA+92
$GETMPTR EQU   $CDA+88
$R13PTRT EQU   $CDA+84
$R13PTR  EQU   $CDA+80
$PLINKDL EQU   $CDA+72
$FRELPTR EQU   $CDA+64
$LOMOREC EQU   $CDA+56
$COMMON  EQU   $RCA
$SLASHAD EQU   $CDA+32
$PASSON  EQU   $CDA+28
$TOLBRTB EQU   $CDA+24
$SCTPTR8 EQU   $CDA+20
$SCTPTR  EQU   $CDA+16
$TBWDPTR EQU   $CDA+12
$TFWDPTR EQU   $CDA+8
@NM00005 EQU   $CDA
$SCTTBLE EQU   TOLTEPWA
$TLTEND  EQU   $RCAAREA+945
$CNSLID  EQU   $RCAAREA+936
$EXITSAV EQU   $RCAAREA+864
$TRASCII EQU   $RCAAREA+608
@NM00004 EQU   $RCAAREA+605
$VTAMEND EQU   $RCAFLG
$TPPOSTD EQU   $RCAFLG
$NEWCT   EQU   $RCAFLG
$ABNDALL EQU   $RCAFLG
$CUTESTB EQU   $RCAFLG
$CONSOLE EQU   $RCAFLG
$TPLOGON EQU   $RCAFLG
$UPDATE  EQU   $RCAFLG
$DEVAREA EQU   $RCAAREA+600
$CTDVAR  EQU   $RCAAREA+596
$BUFFS   EQU   $RCAAREA+464
$TLTNIB  EQU   $CONSTNT+140
$TLTPRPL EQU   $CONSTNT+20
@NM00003 EQU   $CONSTNT+4
@NM00002 EQU   $CONSTNT+2
$USECNT  EQU   $CONSTNT
$CURRTWA EQU   $POINTER+140
$CTNAME  EQU   $POINTER+132
$CTARGX  EQU   $POINTER+128
$COMINT  EQU   $POINTER+120
$QUEHNDL EQU   $POINTER+116
@NM00001 EQU   $POINTER+36
$RTNPTR  EQU   $POINTER+32
$TLTECB2 EQU   $POINTER+28
$TLTECB1 EQU   $POINTER+24
$CLEANP  EQU   $POINTER+20
$ABEND   EQU   $POINTER+16
$LSTAREA EQU   $POINTER+12
$FSTAREA EQU   $POINTER+8
$CVTSAVE EQU   $POINTER+4
$TOLTEP  EQU   $POINTER
$TLTACB  EQU   $RCAAREA
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RT00197 EQU   T37C0370
@RT00276 EQU   T37C0080
@RT00280 EQU   T37C0080
@RT00309 EQU   T37C0080
@RT00316 EQU   T37C0330
@RT00321 EQU   T37C0340
@RF00321 EQU   @RC00319
@RT00327 EQU   T37C0340
@RF00327 EQU   @RC00325
@RT00333 EQU   T37C0340
@RF00333 EQU   @RC00331
@RT00339 EQU   T37C0340
@RF00339 EQU   @RC00337
@RT00353 EQU   T37C0370
@RT00355 EQU   T37C0050
@RT00358 EQU   T37C0050
@RT00389 EQU   T37C0345
@ENDDATA EQU   *
         END   ISTTC037,(C'PLS2202',0702,80232)
