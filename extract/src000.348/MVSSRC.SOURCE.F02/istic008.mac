         TITLE 'ISTIC008,ADD - ADDS A NEW CDS TO LIBRARY'
ISTIC008 CSECT ,                                                   0001
@MAINENT DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL1(16)                                             0001
         DC    C'ISTIC008  80.232'                                 0001
         DROP  @15
@PROLOG  ST    @14,12(,@13)                                        0001
         STM   @00,@12,20(@13)                                     0001
         BALR  @11,0                                               0001
@PSTART  DS    0H                                                  0001
         USING @PSTART,@11                                         0001
         ST    @13,@SA00001+4                                      0001
         LA    @12,@SA00001                                        0001
         ST    @12,8(,@13)                                         0001
         LR    @13,@12                                             0001
         EJECT
OPENFLAG EQU  48
GOODOPEN EQU  16
         EJECT
I008C01  DS    0H                                                  0069
*   I008CWK=$LOWADDR;               /* SET UP BASE FOR WK AREA       */
         L     @15,$LOWADDR(,WAPTR)                                0069
         ST    @15,I008CWK                                         0069
*   CDSWKPTR=I008CWK+80;            /* SET UP BASE FOR CDS WK AREA   */
         AH    @15,@CH00078                                        0070
         ST    @15,CDSWKPTR                                        0070
*   IF $REMSW='1'B                  /* IF THIS IS A REMOTE REQ       */
*     THEN                                                         0071
         TM    $REMSW(WAPTR),B'01000000'                           0071
         BNO   @RF00071                                            0071
*     DO;                                                          0072
*       CDSSYMB='1'B;               /* TURN ON SYMBOLIC NAME BIT     */
*       CDSREMSY='1'B;              /* TURN ON REMOTE FLAG           */
         OI    CDSSYMB(@15),B'00001010'                            0074
*     END;                                                         0075
*   ELSE                                                           0076
*     DO;                                                          0076
         B     @RC00071                                            0076
@RF00071 DS    0H                                                  0077
*       CDSSYMBN(1:8)=''B;          /* ZERO OUT SYMBOLIC NME AREA  0077
*                                                            @ZA35829*/
         L     @15,CDSWKPTR                                        0077
         XC    CDSSYMBN(8,@15),CDSSYMBN(@15)                       0077
*     END;                                                         0078
*I008C01A:                                                         0079
*   DCL                                                            0079
*     1 ZZZGTPRM BDY(WORD),         /* GETCONFG PARAMETER LIST       */
*      2 * CHAR(4) INIT('0102F1F6'X),                              0079
*      2 ZZZGTCD PTR,               /* POINTER TO BASIC CDS INFO     */
*      2 ZZZGTAD PTR,               /* POINTER TO RECEIVING BUFFER   */
*      2 ZZZGTCT FIXED(8);          /* NUMBER OF CDS BYTES NEEDED    */
@RC00071 DS    0H                                                  0079
I008C01A DS    0H                                                  0080
*   ZZZGTAD=ADDR(CDSUA);            /* POINTER TO RECEIVING BUFFER   */
         L     @15,CDSWKPTR                                        0080
         ST    @15,ZZZGTAD                                         0080
*   ZZZGTCD=ADDR(CDSUA);            /* POINTER TO BASIC CDS INFO     */
         ST    @15,ZZZGTCD                                         0081
*   ZZZGTCT=20;                     /* NUMBER OF BYTES NEEDED        */
         MVI   ZZZGTCT,X'14'                                       0082
*   R1=ADDR(ZZZGTPRM);              /* POINT TO THE PARM LIST        */
         LA    R1,ZZZGTPRM                                         0083
*   CALL ISTSC029;                  /* CALL THE GETCONFG FUNCTION    */
         L     @15,@CV00791                                        0084
         BALR  @14,@15                                             0084
*   IF R15=12 THEN                  /* IF NAME DOES NOT EXIST        */
         CH    R15,@CH00237                                        0085
         BE    @RT00085                                            0085
*     GOTO I008C01B;                /* THEN ADD T                    */
*                                                                  0086
*   /*****************************************************************/
*   /*                                                               */
*   /* TCEC MSGN(576)MSGMSK('80000000'X) INVOKED                     */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0087
*   $TCECM='1'B;                    /* SET TCEC SW IN RCA            */
         OI    $TCECM(WAPTR),B'00000001'                           0087
*   R1=ADDR($TCA10);                /* SET UP PARM LIST $TR          */
         LA    R1,$TCA10                                           0088
*   CALL S20CEC03;                  /* CALL TCEC-MULTIPLE LN         */
         L     @15,@CV00794                                        0089
         BALR  @14,@15                                             0089
*   DCL                                                            0090
*     1 $TCA10,                     /* TCEC PARM LIST                */
*      2 $TCB10 FIXED(32) INIT(576),/* MSG NUMBER                    */
*      2 $TCC10 FIXED(32) INIT(0),  /* INCT LEN                      */
*      2 $TCD10 BIT(8) INIT('00000000'B),/* FLAG                     */
*      2 $TCE10 CHAR(4) INIT('80000000'X);/* MSSAGE MASK CDS ALREADY
*                                      EXISTS                        */
*   GOTO I008CRET;                  /* RETURN TO CONTROL MODULE      */
         B     I008CRET                                            0091
*I008C01B:                                                         0092
*   R1=ADDR(CDSEXARA);              /* PTR TO EXTRA CDS AREA         */
I008C01B L     @15,CDSWKPTR                                        0092
         LA    R1,CDSEXARA(,@15)                                   0092
*   R5=ADDR(CDSMODEL);              /* PTR TO MODEL FLD              */
         LA    R5,CDSMODEL(,@15)                                   0093
*   GEN;                                                           0094
*                                       /*
         XC    0(8,R5),0(R5)              ZERO M,F,C,T,BC, + FLG FLD
         XC    0(235,R1),0(R1)            ZERO OUT CDS AREA          */
*I008C02:                                                          0095
*   CALL ISTIC00A;                  /* GO CONFIGURE DATA SET         */
I008C02  L     @15,@CV00805                                        0095
         BALR  @14,@15                                             0095
*   IF $REMSW='1'B                  /* IF THIS IS A REMOTE REQUEST   */
*     THEN                                                         0096
         TM    $REMSW(WAPTR),B'01000000'                           0096
         BNO   @RF00096                                            0096
*     DO;                           /* IF THE SYMBOLIC BIT ANDTHE    */
*                                                                  0097
*       /*************************************************************/
*       /*                                                           */
*       /* IF CDSSYMB='1'B & CDSREMSY='1'B &                         */
*       /* CDSSYMBN(1:1)^=BLANK@ZA35683 THEN GOTO I008C03; REMOTE BIT*/
*       /* ARE ON ITS OK                                     @ZA35683*/
*       /* AND THERE IS A SYMBOLIC NME                       @ZA35683*/
*       /* GOTO I008C02A; OTHERWISE ITS AN ERROR             @ZA35683*/
*       /*                                                           */
*       /*************************************************************/
*                                                                  0098
*       CDSSYMB='1'B;               /* SYMBOLIC NAME PROVIDED      0098
*                                                            @ZA35683*/
*       CDSREMSY='1'B;              /* INDICATE ITS A REMOTE @ZA35683*/
         L     @15,CDSWKPTR                                        0099
         OI    CDSSYMB(@15),B'00001010'                            0099
*     END;                                                         0100
*                                                                  0100
*   /*****************************************************************/
*   /*                                                               */
*   /* ELSE IF ITS NOT A REMOTE REQUEST@ZA35683 DO; AND THE SYMBOLIC */
*   /* BIT IS ON                                             @ZA35683*/
*   /* IF CDSSYMB='1'B AND THERE IS A SYMBOLIC NME@ZA35683 THEN      */
*   /*                                                       @ZA35683*/
*   /* DO;                                                   @ZA35683*/
*   /* IF CDSSYMBN^=BLANK THEN                               @ZA35683*/
*   /* GOTO I008C03; IT OK-CONTINUE                          @ZA35683*/
*   /* GOTO I008C02A; INVALID SYM NME OF FLAG                @ZA35683*/
*   /* END;                                                  @ZA35683*/
*   /* ELSE IF SYMBOLIC BIT IS OFF                           @ZA35683*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0101
*   GOTO I008C03;                   /* OK-CONTINUE ON                */
*                                                                  0101
         B     I008C03                                             0101
*   /*****************************************************************/
*   /*                                                               */
*   /* END;                                                  @ZA35683*/
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0102
*I008C02A:                                                         0102
*                                                                  0102
*   /*****************************************************************/
*   /*                                                               */
*   /* TCEC MSGN(581)MSGMSK('00400000'X) INVOKED                     */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0102
*   $TCECM='1'B;                    /* SET TCEC SW IN RCA            */
I008C02A OI    $TCECM(WAPTR),B'00000001'                           0102
*   R1=ADDR($TCA11);                /* SET UP PARM LIST $TR          */
         LA    R1,$TCA11                                           0103
*   CALL S20CEC03;                  /* CALL TCEC-MULTIPLE LN         */
         L     @15,@CV00794                                        0104
         BALR  @14,@15                                             0104
*   DCL                                                            0105
*     1 $TCA11,                     /* TCEC PARM LIST                */
*      2 $TCB11 FIXED(32) INIT(581),/* MSG NUMBER                    */
*      2 $TCC11 FIXED(32) INIT(0),  /* INCT LEN                      */
*      2 $TCD11 BIT(8) INIT('00000000'B),/* FLAG                     */
*      2 $TCE11 CHAR(4) INIT('00400000'X);/* MSSAGE MASK INV SYM NME
*                                      OR FLAG                       */
*   GOTO I008C02;                   /* GO RE-CONFIGURE               */
         B     I008C02                                             0106
*I008C03:                                                          0107
*   IF $REMSW^='1'B THEN            /* IF THIS IS NOT A REMOTE REQ   */
I008C03  TM    $REMSW(WAPTR),B'01000000'                           0107
         BO    @RF00107                                            0107
*     UASW='1'B;                    /* THEN TURN ON UNIT ADDR SW     */
         L     @15,I008CWK                                         0108
         OI    UASW(@15),B'00001000'                               0108
*   IF CLASSSW='1'B&TYPESW='1'B&FLAGSW='1'B&UASW='1'B THEN/* IF ALL
*                                      THE REQ SW ARE                */
@RF00107 L     @15,I008CWK                                         0109
         TM    CLASSSW(@15),B'01111000'                            0109
         BNO   @RF00109                                            0109
*     DO;                           /* SET THEN DO THE FOLLOWING     */
*       CLASSSW='0'B;               /* RESET CLASS REQUIRED SW       */
*       TYPESW='0'B;                /* RESET TYPE REQUIRED SW        */
*       FLAGSW='0'B;                /* RESET FLAG REQUIRED SW        */
*       UASW='0'B;                  /* RESET UNIT ADR REQUIRED SW    */
         NI    CLASSSW(@15),B'10000111'                            0114
*     END;                                                         0115
*   ELSE                            /* OTHERWISE PRINT               */
*     DO;                           /* ERROR MSG                     */
*                                                                  0116
         B     @RC00109                                            0116
@RF00109 DS    0H                                                  0117
*       /*************************************************************/
*       /*                                                           */
*       /* TCEC MSGN(581)MSGMSK('00200000'X) INVOKED                 */
*       /*                                                           */
*       /*************************************************************/
*                                                                  0117
*       $TCECM='1'B;                /* SET TCEC SW IN RCA            */
         OI    $TCECM(WAPTR),B'00000001'                           0117
*       R1=ADDR($TCA12);            /* SET UP PARM LIST $TR          */
         LA    R1,$TCA12                                           0118
*       CALL S20CEC03;              /* CALL TCEC-MULTIPLE LN         */
         L     @15,@CV00794                                        0119
         BALR  @14,@15                                             0119
*       DCL                                                        0120
*         1 $TCA12,                 /* TCEC PARM LIST                */
*          2 $TCB12 FIXED(32) INIT(581),/* MSG NUMBER                */
*          2 $TCC12 FIXED(32) INIT(0),/* INCT LEN                    */
*          2 $TCD12 BIT(8) INIT('00000000'B),/* FLAG                 */
*          2 $TCE12 CHAR(4) INIT('00200000'X);/* MSSAGE MASK INVALID
*                                      REQ FLD                       */
*       GOTO I008C02;               /* RE-CONFIGURE REQ FLD ONLY     */
         B     I008C02                                             0121
*     END;                                                         0122
*   IF $REMSW='1'B THEN             /* IF REMOTE REQUEST THEN GO     */
@RC00109 TM    $REMSW(WAPTR),B'01000000'                           0123
         BO    @RT00123                                            0123
*     GOTO I008CADR;                /* ADD REMOTE DATA SET TO PDS    */
*   GOTO I008CADL;                  /* OTHERWISE ADD LOCAL TO PDS    */
         B     I008CADL                                            0125
*   GEN(EJECT);                                                    0126
*                                                                  0126
         EJECT
*/********************************************************************/
*/*                                                                  */
*/* A D D  R E M O T E  C D S  T O  P D S                            */
*/*                                                                  */
*/********************************************************************/
*                                                                  0127
*I008CADR:                                                         0127
*   GEN;                                                           0127
I008CADR DS    0H                                                  0127
*                                       /*
         OPEN  (REMCDS,(OUTPUT))          OPEN REMOTE DATA SET
         LA    WKREG1,REMCDS              SET UP BASE
         TM    OPENFLAG(WKREG1),GOODOPEN  WAS OPEN OK
         BZ    I008CER1                   NO-BR + PRT OPEN ERROR     */
*   ESDNME1=CDSSYMBN;               /* MOVE NAME TO CDS ESD REC      */
         L     @15,CDSWKPTR                                        0128
         MVC   ESDNME1(8),CDSSYMBN(@15)                            0128
*   DCBPTR=ADDR(REMCDS);            /* SET UP DCB POINTER            */
         LA    DCBPTR,REMCDS                                       0129
*   GEN(BAL LINKR,I008CWRT);        /* GO WRITE MEMBER               */
         BAL LINKR,I008CWRT
*   STOWNAME=CDSSYMBN;              /* MOVE NAME TO DIRECTY ENTRY    */
         L     @15,CDSWKPTR                                        0131
         MVC   STOWNAME(8),CDSSYMBN(@15)                           0131
*   STOWTTR=TTRZSAVE(1:3);          /* PUT TTR OF MEMBER IN DIRCTY   */
         MVC   STOWTTR(3),TTRZSAVE                                 0132
*   GEN;                                                           0133
*                                       /*
         STOW  REMCDS,STOWCON,R           WRITE DIRECTORY ENTRY      */
*   GOTO I008CKRC;                  /* GO CHECK RETURN CODES         */
         B     I008CKRC                                            0134
*   GEN(EJECT);                                                    0135
         EJECT
*                                                                  0136
*/********************************************************************/
*/*                                                                  */
*/* A D D  L O C A L  C D S  T O  P D S                              */
*/*                                                                  */
*/********************************************************************/
*                                                                  0136
*I008CADL:                                                         0136
*   GEN;                                                           0136
I008CADL DS    0H                                                  0136
*                                       /*
         OPEN  (LOCCDS,(OUTPUT))          OPEN LOCAL DATA SET
         LA    WKREG1,LOCCDS              SET UP BASE
         TM    OPENFLAG(WKREG1),GOODOPEN  WAS OPEN OK
         BZ    I008CE1A                   NO-BR + PRT OPEN ERROR     */
*   DCBPTR=ADDR(LOCCDS);            /* SET UP PTR TO DCB CONVERT UNIT
*                                      ADDR TO EBCDIC                */
*                                                                  0137
         LA    DCBPTR,LOCCDS                                       0137
*   /*****************************************************************/
*   /*                                                               */
*   /* ITACONV FROM(CDSUA)TO(WKAREA)COUNT(4)TYPE(HE) INVOKED         */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0138
*   DCL                                                            0138
*     1 ITATCPRM BDY(WORD),         /* CONVERT PARAMETER LIST        */
*      2 * CHAR(4) INIT('0102F4F1'X),                              0138
*      2 ITATCFR PTR,               /* ADDRESS OF FROM FIELD         */
*      2 ITATCTO PTR,               /* ADDRESS OF TO FIELD           */
*      2 * BIT(8) INIT(0),          /* FLAGS FOR CONVERT MODULE      */
*       3 ITATCTP BIT(1),           /* TYPE OF CONVERT REQUIRED      */
*      2 ITATCNT FIXED(8);          /* NUMBER OF BYTES TO CONVERT    */
*   ITATCFR=ADDR(CDSUA);            /* SET THE FROM ADDRESS          */
         MVC   ITATCFR(4),CDSWKPTR                                 0139
*   ITATCTO=ADDR(WKAREA);           /* SET THE TO ADDRESS            */
         LA    @15,WKAREA                                          0140
         ST    @15,ITATCTO                                         0140
*   ITATCTP='1'B;                   /* SET THE TYPE OF CONVERT BIT   */
         OI    ITATCTP,B'10000000'                                 0141
*   ITATCNT=4;                      /* GIVE THE CONVERT BYTE COUNT   */
         MVI   ITATCNT,X'04'                                       0142
*   R1=ADDR(ITATCPRM);              /* POINT TO CONVERT PARM LIST    */
         LA    R1,ITATCPRM                                         0143
*   CALL ISTSC021;                  /* CALL CONVERT DIRECTLY         */
         L     @15,@CV00838                                        0144
         BALR  @14,@15                                             0144
*   GEN(MVC   WKAREA(1),UANAME);    /* BUILD UNIT ADDR NAME          */
         MVC   WKAREA(1),UANAME
*   ESDNME1=WKAREA;                 /* SET UP ESD NAME               */
         MVC   ESDNME1(8),WKAREA                                   0146
*   GEN(BAL LINKR,I008CWRT);        /* GO WRT MEMBER                 */
         BAL LINKR,I008CWRT
*   STOWNAME=WKAREA;                /* MOVE NAME TO DIRCTY ENTRY     */
         MVC   STOWNAME(8),WKAREA                                  0148
*   STOWTTR=TTRZSAVE(1:3);          /* PUT TTR OF MEMBER IN DIRCTY   */
         MVC   STOWTTR(3),TTRZSAVE                                 0149
*   GEN;                                                           0150
*                                       /*
         STOW  LOCCDS,STOWCON,R           WRITE DIRECTORY ENTRY      */
*   GOTO I008CKRC;                  /* GO CHECK RETURN CODES         */
         B     I008CKRC                                            0151
*   GEN(EJECT);                                                    0152
         EJECT
*I008CKRC:                                                         0153
*   IF R15=12 THEN                  /* IF RET CODE EQUAL 12 THEN     */
I008CKRC LA    @12,12                                              0153
         CR    R15,@12                                             0153
         BE    @RT00153                                            0153
*     GOTO I008CER2;                /* GO PRINT ERROR -NO SPACE      */
*   IF R15>12 THEN                  /* IF RET CODE IS GREATER 12     */
         CR    R15,@12                                             0155
         BH    @RT00155                                            0155
*     GOTO I008CER3;                /* THEN GO PRT I/O ERROR         */
*                                                                  0156
*   /*****************************************************************/
*   /*                                                               */
*   /* TCEC MSGN(562) INVOKED                                        */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0157
*   $TCECM='1'B;                    /* SET TCEC SW IN RCA            */
         OI    $TCECM(WAPTR),B'00000001'                           0157
*   R1=ADDR($TCA14);                /* SET UP PARM LIST $TR          */
         LA    R1,$TCA14                                           0158
*   CALL #EXIT;                     /* CALL CECOM                    */
         L     @15,#EXITA(,WAPTR)                                  0159
         BALR  @14,@15                                             0159
*   DCL                                                            0160
*     1 $TCA14,                     /* TCEC PARM LIST                */
*      2 $TCB14 FIXED(32) INIT(562),/* MSG NUMBER                    */
*      2 $TCC14 FIXED(32) INIT(0),  /* INCT LEN                      */
*      2 $TCD14 BIT(8) INIT('00000000'B),/* FLAG                     */
*      2 $TCE14 CHAR(4) INIT('FFFFFFFF'X);/* MSSAGE MASK CDS ADDED TO
*                                      LIBRARY                       */
*   GOTO I008CRET;                  /* RETURN TO CONTROL MODULE      */
         B     I008CRET                                            0161
*   GEN(EJECT);                                                    0162
         EJECT
*I008CER1:                                                         0163
*   $INBUFR=CDSSYMBN;               /* SET UP SYMBOLIC NAME          */
I008CER1 MVI   $INBUFR+8(WAPTR),C' '                               0163
         MVC   $INBUFR+9(71,WAPTR),$INBUFR+8(WAPTR)                0163
         L     @15,CDSWKPTR                                        0163
         MVC   $INBUFR(8,WAPTR),CDSSYMBN(@15)                      0163
*   GOTO I008CE1B;                                                 0164
         B     I008CE1B                                            0164
*I008CE1A:                                                         0165
*   $INBUFR=CDSLOCDD;               /* SET UP LOC DCB NAME           */
I008CE1A MVI   $INBUFR+8(WAPTR),C' '                               0165
         MVC   $INBUFR+9(71,WAPTR),$INBUFR+8(WAPTR)                0165
         MVC   $INBUFR(8,WAPTR),CDSLOCDD                           0165
*I008CE1B:                                                         0166
*                                                                  0166
*   /*****************************************************************/
*   /*                                                               */
*   /* TCEC MSGN(901)SUB(YES) INVOKED                                */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0166
*   $TCECM='1'B;                    /* SET TCEC SW IN RCA            */
I008CE1B OI    $TCECM(WAPTR),B'00000001'                           0166
*   R1=ADDR($TCA15);                /* SET UP PARM LIST $TR          */
         LA    R1,$TCA15                                           0167
*   CALL #EXIT;                     /* CALL CECOM                    */
         L     @15,#EXITA(,WAPTR)                                  0168
         BALR  @14,@15                                             0168
*   DCL                                                            0169
*     1 $TCA15,                     /* TCEC PARM LIST                */
*      2 $TCB15 FIXED(32) INIT(901),/* MSG NUMBER                    */
*      2 $TCC15 FIXED(32) INIT(0),  /* INCT LEN                      */
*      2 $TCD15 BIT(8) INIT('10000000'B),/* FLAG                     */
*      2 $TCE15 CHAR(4) INIT('FFFFFFFF'X);/* MSSAGE MASK XXXXX DD  0169
*                                      FAILED TO OPEN                */
*   GOTO I008CRET;                  /* RETURN TO CALLER              */
         B     I008CRET                                            0170
*I008CER2:                                                         0171
*                                                                  0171
*   /*****************************************************************/
*   /*                                                               */
*   /* TCEC MSGN(571) INVOKED                                        */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0171
*   $TCECM='1'B;                    /* SET TCEC SW IN RCA            */
I008CER2 OI    $TCECM(WAPTR),B'00000001'                           0171
*   R1=ADDR($TCA16);                /* SET UP PARM LIST $TR          */
         LA    R1,$TCA16                                           0172
*   CALL #EXIT;                     /* CALL CECOM                    */
         L     @15,#EXITA(,WAPTR)                                  0173
         BALR  @14,@15                                             0173
*   DCL                                                            0174
*     1 $TCA16,                     /* TCEC PARM LIST                */
*      2 $TCB16 FIXED(32) INIT(571),/* MSG NUMBER                    */
*      2 $TCC16 FIXED(32) INIT(0),  /* INCT LEN                      */
*      2 $TCD16 BIT(8) INIT('00000000'B),/* FLAG                     */
*      2 $TCE16 CHAR(4) INIT('FFFFFFFF'X);/* MSSAGE MASK LIBRARY FULL*/
*   GOTO I008CRET;                                                 0175
         B     I008CRET                                            0175
*I008CER3:                                                         0176
*                                                                  0176
*   /*****************************************************************/
*   /*                                                               */
*   /* TCEC MSGN(570) INVOKED                                        */
*   /*                                                               */
*   /*****************************************************************/
*                                                                  0176
*   $TCECM='1'B;                    /* SET TCEC SW IN RCA            */
I008CER3 OI    $TCECM(WAPTR),B'00000001'                           0176
*   R1=ADDR($TCA17);                /* SET UP PARM LIST $TR          */
         LA    R1,$TCA17                                           0177
*   CALL #EXIT;                     /* CALL CECOM                    */
         L     @15,#EXITA(,WAPTR)                                  0178
         BALR  @14,@15                                             0178
*   DCL                                                            0179
*     1 $TCA17,                     /* TCEC PARM LIST                */
*      2 $TCB17 FIXED(32) INIT(570),/* MSG NUMBER                    */
*      2 $TCC17 FIXED(32) INIT(0),  /* INCT LEN                      */
*      2 $TCD17 BIT(8) INIT('00000000'B),/* FLAG                     */
*      2 $TCE17 CHAR(4) INIT('FFFFFFFF'X);/* MSSAGE MASK I/O ERROR   */
*   GOTO I008CRET;                  /* GO RETURN TO CALLER           */
         B     I008CRET                                            0180
*   GEN(EJECT);                                                    0181
         EJECT
*I008CRET:                                                         0182
*   GEN;                                                           0182
I008CRET DS    0H                                                  0182
*                                       /*
         CLOSE REMCDS                     CLOSE REMOTE CDS
         CLOSE LOCCDS                     CLOSE LOCAL CDS            */
*   I008CSW='0'X;                   /* ZERO OUT INTERNAL SW          */
         L     @15,I008CWK                                         0183
         MVI   I008CSW(@15),X'00'                                  0183
*   $REMSW='0'B;                    /* RESET REMOTE SWITCH           */
         NI    $REMSW(WAPTR),B'10111111'                           0184
*   RETURN;                         /* RETURN TO CONTROL MODULE      */
@EL00001 L     @13,4(,@13)                                         0185
@EF00001 DS    0H                                                  0185
@ER00001 L     @14,12(,@13)                                        0185
         LM    @00,@12,20(@13)                                     0185
         BR    @14                                                 0185
*   GEN(EJECT);                                                    0186
*                                                                  0186
         EJECT
*/********************************************************************/
*/*                      W R I T E  R O U T I N E                    */
*/*                                                                  */
*/*  THIS ROUTINE WILL WRITE THE ESD RECORD, TXTHDR RECORD, CDS      */
*/*   RECORD AND THE END RECORD                                      */
*/*                                                                  */
*/********************************************************************/
*                                                                  0187
*I008CWRT:                                                         0187
*   RETSAV=LINKR;                   /* SAVE RETURN ADDR PTR          */
I008CWRT ST    LINKR,RETSAV                                        0187
*   ESDSIZE=CDSBYTCT;               /* PUT CDS BYTE COUNT IN ESD     */
         L     @15,CDSWKPTR                                        0188
         SLR   @12,@12                                             0188
         IC    @12,CDSBYTCT(,@15)                                  0188
         STC   @12,ESDSIZE                                         0188
*   TXTHCNT(3:3)=CDSBYTCT;          /* PUT CDS BYTE CNT IN TXTHDR    */
         STC   @12,TXTHCNT+2                                       0189
*   CDSRECL=CDSBYTCT;               /* SET UP CDSREC LEN FOR WRITE   */
         STH   @12,CDSRECL                                         0190
*   IF $REMSW='1'B                  /* IF THIS A REMOTE ADD          */
*     THEN                          /* THEN SET UP REMOTE ID         */
         TM    $REMSW(WAPTR),B'01000000'                           0191
         BNO   @RF00191                                            0191
*     DO;                           /* IN THE #CTL ID                */
*       ESDNME3(5:5)=REMOTEID;                                     0193
         MVC   ESDNME3+4(1),REMOTEID                               0193
*     END;                                                         0194
*   ELSE                            /* OTHERWISE SET UP A LOCAL      */
*     DO;                           /* ID IN #CTL ID                 */
         B     @RC00191                                            0195
@RF00191 DS    0H                                                  0196
*       ESDNME3(5:5)=LOCALID;                                      0196
         MVC   ESDNME3+4(1),LOCALID                                0196
*     END;                                                         0197
*   GEN;                                                           0198
@RC00191 DS    0H                                                  0198
*                                       /*
         WRITE CDSDECB,SF,(DCBPTR),ESDREC,80,MF=E  WRITE ESD RECORD
         CHECK CDSDECB                    WAIT FOR I/O COMPLETION
         NOTE  (DCBPTR)                   SAVE BEGINNING ADDRESS IN
         ST    PARMREG1,TTRZSAVE          CASE OF AN ERROR
         WRITE CDSDECB,SF,(DCBPTR),TXTHDR,80,MF=E  WRITE TXTHDR RECORD
         CHECK CDSDECB                    WAIT FOR I/O COMPLETION
*   CDSRPTR=ADDR(CDSUA);            /* GET ADDR IF CDS               */
         L     CDSRPTR,CDSWKPTR                                    0199
*   GEN;                                                           0200
*                                       /*
         LH CDSRLREG,CDSRECL              PUT CDS REC LN IN REG
         WRITE CDSDECB,SF,(DCBPTR),(CDSRPTR),(CDSRLREG),MF=E WRT CDSREC
         CHECK CDSDECB                    WAIT FOR I/O COMPLETION
         WRITE CDSDECB,SF,(DCBPTR),ENDREC,80,MF=E  WRITE END RECORD
         CHECK CDSDECB                    WAIT FOR I/O COMPLETION
         L     LINKR,RETSAV               RETURN TO
         BR    LINKR                        CALLER                   */
         EJECT
*                                                                  0201
*/********************************************************************/
*/*       D A T A  C O N T R O L  B L O C K S                        */
*/********************************************************************/
*                                                                  0201
*   GEN;                                                           0201
REMCDS   DS    0F
         DCB   DDNAME=SYMSYM,DSORG=PO,RECFM=UT,MACRF=(R,W),            X
               LRECL=80,BLKSIZE=3600,SYNAD=I008CER3
          SPACE
LOCCDS   DS    0F
         DCB   DDNAME=OLTCDSDD,DSORG=PO,RECFM=UT,MACRF=(R,W),          X
               LRECL=80,BLKSIZE=3600,SYNAD=I008CER3
          SPACE
         WRITE CDSDECB,SF,MF=L
*   DO;                             /* ATDSPLY                       */
*   END;                            /* ATDSPLY                       */
*   END ISTIC008;                                                  0204
         B     @EL00001                                            0204
@DATA    DS    0H
@CH00237 DC    H'12'
@CH00078 DC    H'80'
         DS    0F
@SA00001 DS    18F
         DS    0F
@CV00791 DC    V(ISTSC029)
@CV00794 DC    V(S20CEC03)
@CV00805 DC    V(ISTIC00A)
@CV00838 DC    V(ISTSC021)
         DS    0D
CDSWKPTR DS    A
I008CWK  DS    A
RCAPTR   DS    A
CECMAP   DS    A
RETSAV   DS    CL4
BLANK    DC    CL1' '
REMOTEID DC    CL1'D'
LOCALID  DC    CL1'C'
CDSLOCDD DC    CL8'OLTCDSDD'
         DS    CL1
TTRZSAVE DS    CL4
CDSRECL  DS    CL2
WKAREA   DS    CL8
UANAME   DC    CL1'G'
STOWCON  DS    CL32
         ORG   STOWCON
STOWNAME DS    CL8
STOWTTR  DS    CL3
STOWUSSZ DC    X'0A'
STOWUSRI DC    20X'00'
         ORG   STOWCON+32
ESDREC   DS    CL80
         ORG   ESDREC
@NM00002 DC    X'02'
@NM00003 DC    CL3'ESD'
@NM00004 DC    CL6' '
@NM00005 DC    X'0030'
@NM00006 DC    CL2'  '
@NM00007 DC    X'0001'
ESDNME1  DS    CL8
@NM00008 DC    X'00'
         DC    XL3'0'
@NM00009 DC    CL1' '
@NM00010 DC    X'00'
         DC    XL1'0'
ESDSIZE  DS    CL1
ESDNME2  DC    CL8'#OLT00  '
@NM00011 DC    X'02'
@NM00012 DC    X'00'
         DC    XL2'0'
@NM00013 DC    CL4'    '
ESDNME3  DC    CL8'#CTLXXXX'
@NM00014 DC    X'02'
@NM00015 DC    X'00'
         DC    XL2'0'
@NM00016 DC    CL16' '
@NM00017 DC    CL4'0001'
         ORG   ESDREC+80
TXTHDR   DS    CL80
         ORG   TXTHDR
@NM00018 DC    X'02'
@NM00019 DC    CL6'TXTHDR'
@NM00020 DC    CL9'VS TOLTEP'
TXTHCCW  DS    CL8
         ORG   TXTHCCW
@NM00021 DC    X'02'
TXTHRADR DC    X'000000'
@NM00022 DC    X'20'
TXTHCNT  DC    X'000000'
         ORG   TXTHDR+24
@NM00023 DC    CL56' '
         ORG   TXTHDR+80
ENDREC   DS    CL80
         ORG   ENDREC
@NM00024 DC    X'02'
@NM00025 DC    CL3'END'
@NM00026 DC    X'00'
         DC    XL75'0'
         ORG   ENDREC+80
         DS    CL1
ZZZGTPRM DS    CL13
         ORG   ZZZGTPRM
@NM00079 DC    X'0102F1F6'
ZZZGTCD  DS    AL4
ZZZGTAD  DS    AL4
ZZZGTCT  DS    FL1
         ORG   ZZZGTPRM+13
         DS    CL3
$TCA10   DS    CL13
         ORG   $TCA10
$TCB10   DC    A(576)
$TCC10   DC    A(0)
$TCD10   DC    B'00000000'
$TCE10   DC    X'80000000'
         ORG   $TCA10+13
         DS    CL3
$TCA11   DS    CL13
         ORG   $TCA11
$TCB11   DC    A(581)
$TCC11   DC    A(0)
$TCD11   DC    B'00000000'
$TCE11   DC    X'00400000'
         ORG   $TCA11+13
         DS    CL3
$TCA12   DS    CL13
         ORG   $TCA12
$TCB12   DC    A(581)
$TCC12   DC    A(0)
$TCD12   DC    B'00000000'
$TCE12   DC    X'00200000'
         ORG   $TCA12+13
         DS    CL3
ITATCPRM DS    CL14
         ORG   ITATCPRM
@NM00080 DC    X'0102F4F1'
ITATCFR  DS    AL4
ITATCTO  DS    AL4
@NM00081 DC    AL1(0)
         ORG   @NM00081
ITATCTP  DS    BL1
         ORG   ITATCPRM+13
ITATCNT  DS    FL1
         ORG   ITATCPRM+14
         DS    CL2
$TCA14   DS    CL13
         ORG   $TCA14
$TCB14   DC    A(562)
$TCC14   DC    A(0)
$TCD14   DC    B'00000000'
$TCE14   DC    X'FFFFFFFF'
         ORG   $TCA14+13
         DS    CL3
$TCA15   DS    CL13
         ORG   $TCA15
$TCB15   DC    A(901)
$TCC15   DC    A(0)
$TCD15   DC    B'10000000'
$TCE15   DC    X'FFFFFFFF'
         ORG   $TCA15+13
         DS    CL3
$TCA16   DS    CL13
         ORG   $TCA16
$TCB16   DC    A(571)
$TCC16   DC    A(0)
$TCD16   DC    B'00000000'
$TCE16   DC    X'FFFFFFFF'
         ORG   $TCA16+13
         DS    CL3
$TCA17   DS    CL13
         ORG   $TCA17
$TCB17   DC    A(570)
$TCC17   DC    A(0)
$TCD17   DC    B'00000000'
$TCE17   DC    X'FFFFFFFF'
         ORG   $TCA17+13
         DS    CL3
PATCH    DC    40F'0'
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
WKREG1   EQU   @04
CDSRPTR  EQU   @04
DCBPTR   EQU   @05
CDSRLREG EQU   @06
LINKR    EQU   @14
WAPTR    EQU   @02
R1       EQU   @01
R5       EQU   @05
R15      EQU   @15
PARMREG1 EQU   @01
R0       EQU   @00
R10      EQU   @10
R11      EQU   @11
R12      EQU   @12
R13      EQU   @13
R14      EQU   @14
R2       EQU   @02
R3       EQU   @03
R4       EQU   @04
R6       EQU   @06
R7       EQU   @07
R8       EQU   @08
R9       EQU   @09
@NM00001 EQU   0
I008CSW  EQU   @NM00001
CLASSSW  EQU   I008CSW
TYPESW   EQU   I008CSW
FLAGSW   EQU   I008CSW
UASW     EQU   I008CSW
$RCAAREA EQU   0
$POINTER EQU   $RCAAREA+100
$TRTBLA  EQU   $POINTER+124
$CONSTNT EQU   $RCAAREA+244
$RCAFLG  EQU   $RCAAREA+604
TOLTEPWA EQU   0
$SCTTBLE EQU   TOLTEPWA
$TESTOPT EQU   $SCTTBLE+2
$ERROPT  EQU   $SCTTBLE+3
$PDEVFLG EQU   $SCTTBLE+10
$CDSFLGS EQU   $SCTTBLE+11
$CDS8T19 EQU   $SCTTBLE+20
$EXECFLG EQU   $SCTTBLE+33
$OLTFLGS EQU   $SCTTBLE+36
$OLTFLG2 EQU   $SCTTBLE+37
$TOTFLG1 EQU   $SCTTBLE+38
$ROUTMSK EQU   $SCTTBLE+40
$CDA     EQU   TOLTEPWA+100
$RCA     EQU   $CDA+44
$OLTPTR  EQU   $CDA+52
$LOWADDR EQU   $OLTPTR
$HIMOREC EQU   $CDA+60
$COMMFLG EQU   TOLTEPWA+224
$FLAG1   EQU   $COMMFLG
$FLAG2   EQU   $COMMFLG+1
$FLAG3   EQU   $COMMFLG+2
$FLAG4   EQU   $COMMFLG+3
$FLAG5   EQU   $COMMFLG+4
$EOJ     EQU   $FLAG5
$CANCEL  EQU   $EOJ
$FLAG6   EQU   $COMMFLG+5
$ABNDBIT EQU   $FLAG6
$FLAG7   EQU   $COMMFLG+6
$FLAG8   EQU   $COMMFLG+7
$TCECM   EQU   $FLAG8
$FLAG9   EQU   $COMMFLG+8
$REMSW   EQU   $FLAG9
$FLAG10  EQU   $COMMFLG+9
$FLAG11  EQU   $COMMFLG+10
$FLAG12  EQU   $COMMFLG+11
$FLAG13  EQU   $COMMFLG+12
$DEVTBLE EQU   TOLTEPWA+240
$DEVCDS  EQU   $DEVTBLE
$DEVUNAD EQU   $DEVCDS
@NM00065 EQU   $DEVUNAD+2
$DEVFEAT EQU   $DEVCDS+4
$DEVCDSF EQU   $DEVCDS+9
$DEVSDCF EQU   $DEVCDS+10
$$SYMNME EQU   $DEVCDS+12
$DEVFLG1 EQU   $DEVTBLE+20
$EVNCPLT EQU   $DEVFLG1
$ATTNEXP EQU   $DEVFLG1
$INTOCC  EQU   $DEVFLG1
$DEVFLG2 EQU   $DEVTBLE+21
$DEVTECB EQU   $DEVTBLE+22
$OPIS    EQU   $DEVTECB
$OPND    EQU   $DEVTECB+2
$DEVFLG3 EQU   $DEVTBLE+27
$SIOFLG  EQU   $DEVFLG3
$IFTOUT  EQU   $DEVTBLE+36
$DEVSESP EQU   $IFTOUT
$SSCPDAF EQU   $IFTOUT+6
$LDNCBPT EQU   $DEVTBLE+48
$RNINFO  EQU   $DEVTBLE+56
$DEVFLG5 EQU   $RNINFO+8
$DEVFLG4 EQU   $DEVTBLE+65
$SLTBL   EQU   TOLTEPWA+1468
$RUNTEST EQU   $SLTBL+13
$TESTFLG EQU   $SLTBL+21
$SECLST  EQU   $SLTBL+22
$INBUFR  EQU   TOLTEPWA+2104
#EXITA   EQU   TOLTEPWA+2632
$CCOMDAT EQU   TOLTEPWA+2644
$CFLGS   EQU   $CCOMDAT+16
$24FEMSG EQU   TOLTEPWA+2681
$24CATMG EQU   $24FEMSG+11
@NM00074 EQU   TOLTEPWA+2776
$OUNTPTR EQU   @NM00074+4
$NSPTR   EQU   $OUNTPTR
$NSCNT   EQU   @NM00074+10
$ENXX    EQU   @NM00074+15
$IMITX   EQU   $ENXX
SVESC033 EQU   TOLTEPWA+3160
SVECC013 EQU   TOLTEPWA+3232
SVEIC003 EQU   TOLTEPWA+3592
SVESC022 EQU   TOLTEPWA+3736
SVECC011 EQU   TOLTEPWA+4024
#EXIT    EQU   0
CECOMMAP EQU   0
CDSMAP   EQU   0
CDSUA    EQU   CDSMAP
CDSMFCT  EQU   CDSMAP+4
CDSMODEL EQU   CDSMFCT
CDSFEAT  EQU   CDSMFCT+1
CDSBYTCT EQU   CDSMAP+8
CDSFLAG  EQU   CDSMAP+9
CDSSYMB  EQU   CDSFLAG
CDSREMSY EQU   CDSFLAG
CDSSYMBN EQU   CDSMAP+12
CDSEXARA EQU   CDSMAP+20
$TRTBL   EQU   0
SVECC012 EQU   SVESC022
SVEIC00A EQU   SVEIC003
SVEIC004 EQU   SVEIC003
SVEIC005 EQU   SVEIC003
SVESC02A EQU   SVESC022
SVESC02B EQU   SVESC022
SVESC02D EQU   SVESC022
SVESC02E EQU   SVESC022
SVESC02F EQU   SVECC013
SVESC024 EQU   SVESC022
SVESC027 EQU   SVESC022
SVESC029 EQU   SVESC033
SVESC031 EQU   SVECC013
SVESC032 EQU   SVECC011
SVETC037 EQU   SVEIC003
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
CDSEXTM  EQU   CDSFLAG+2
CDSEXTB  EQU   CDSFLAG+2
CDSTMERB EQU   CDSFLAG+2
@NM00078 EQU   CDSFLAG+1
CDSDVPRO EQU   CDSFLAG+1
CDSNTPRI EQU   CDSFLAG+1
CDSLINCN EQU   CDSFLAG
CDS2CHAN EQU   CDSFLAG
CDSEXTPR EQU   CDSFLAG
CDSFEVOL EQU   CDSFLAG
CDSSHAR  EQU   CDSFLAG
CDSFPMD  EQU   CDSFLAG
CDSTYPE  EQU   CDSMFCT+3
CDSCLASS EQU   CDSMFCT+2
@NM00077 EQU   CDSFEAT
CDSDEVM  EQU   CDSFEAT
CDSDEVT  EQU   CDSFEAT
CDSASCII EQU   CDSFEAT
$CECFLAG EQU   CECOMMAP+20
$CEINCT  EQU   CECOMMAP+16
$CEINADR EQU   CECOMMAP+12
$CEOUTCT EQU   CECOMMAP+8
$CEOUTAD EQU   CECOMMAP+4
$CECIDNT EQU   CECOMMAP+2
$CECLEVL EQU   CECOMMAP+1
$CECTRMG EQU   CECOMMAP
SVECC010 EQU   TOLTEPWA+3952
SVETC035 EQU   TOLTEPWA+3880
SVESC030 EQU   TOLTEPWA+3808
SVESC020 EQU   TOLTEPWA+3664
SVEIC002 EQU   TOLTEPWA+3520
SVECC014 EQU   TOLTEPWA+3376
SVESC120 EQU   TOLTEPWA+3304
SVESC025 EQU   TOLTEPWA+3088
@NM00076 EQU   TOLTEPWA+2980
$RPLERR  EQU   TOLTEPWA+2977
@NM00075 EQU   TOLTEPWA+2976
$R13PR3  EQU   TOLTEPWA+2972
$CEINT2  EQU   TOLTEPWA+2968
$CEINT1  EQU   TOLTEPWA+2964
$MSGGET  EQU   TOLTEPWA+2960
$ACQLIST EQU   TOLTEPWA+2956
$R4SAVE1 EQU   TOLTEPWA+2952
$CLSISS  EQU   TOLTEPWA+2950
$CLSCNT  EQU   TOLTEPWA+2948
$CUTABLE EQU   TOLTEPWA+2868
$BUFSZ2  EQU   TOLTEPWA+2864
$RESID2  EQU   TOLTEPWA+2860
$OLTCCW2 EQU   TOLTEPWA+2856
$ENDBFR2 EQU   TOLTEPWA+2852
$1STBFR2 EQU   TOLTEPWA+2848
$TECB2   EQU   TOLTEPWA+2844
$BUFSZ1  EQU   TOLTEPWA+2840
$RESID1  EQU   TOLTEPWA+2836
$OLTCCW1 EQU   TOLTEPWA+2832
$ENDBFR1 EQU   TOLTEPWA+2828
$1STBFR1 EQU   TOLTEPWA+2824
$TECB1   EQU   TOLTEPWA+2820
$WAITIME EQU   TOLTEPWA+2816
$TRTN#   EQU   TOLTEPWA+2815
$WIODEV  EQU   TOLTEPWA+2814
$RQSTSZE EQU   TOLTEPWA+2812
$RQSTPTR EQU   TOLTEPWA+2808
$R4SAVE  EQU   TOLTEPWA+2804
$PARTADR EQU   TOLTEPWA+2800
$TBSDATA EQU   TOLTEPWA+2796
$CTWIDTH EQU   TOLTEPWA+2795
$CTLINE  EQU   TOLTEPWA+2794
$APWIDTH EQU   TOLTEPWA+2793
$APLINE  EQU   TOLTEPWA+2792
$INDEX   EQU   $IMITX
$UMXX    EQU   @NM00074+14
$NSXX    EQU   @NM00074+12
$ATACNT  EQU   $NSCNT
$CTR     EQU   @NM00074+8
$ATAPTR  EQU   $NSPTR
$DDRPTR  EQU   @NM00074
$DTORESP EQU   TOLTEPWA+2712
$APNAME  EQU   TOLTEPWA+2704
$24SYMNE EQU   $24CATMG+4
$24DEVAD EQU   $24CATMG
$24RTN#  EQU   $24FEMSG+8
$ESECTID EQU   $24FEMSG
$24FLGS  EQU   TOLTEPWA+2680
$24SAVE2 EQU   TOLTEPWA+2676
$24SAVE1 EQU   TOLTEPWA+2672
$24UNADR EQU   TOLTEPWA+2668
$24SAV13 EQU   TOLTEPWA+2664
$24RETCD EQU   TOLTEPWA+2663
$MACID   EQU   TOLTEPWA+2661
$CSPARE  EQU   $CFLGS
$C2WAY   EQU   $CFLGS
$CINCT   EQU   $CCOMDAT+12
$CINADR  EQU   $CCOMDAT+8
$COUTCT  EQU   $CCOMDAT+4
$COUTAD  EQU   $CCOMDAT
ROOTLOC  EQU   TOLTEPWA+2640
$RETREG  EQU   TOLTEPWA+2636
$WORK    EQU   TOLTEPWA+2376
$EXTA    EQU   TOLTEPWA+2320
$PASSONA EQU   TOLTEPWA+2264
$TRMINPT EQU   TOLTEPWA+2184
$BUFFER  EQU   TOLTEPWA+1976
$TLTRPL3 EQU   TOLTEPWA+1856
$TLTRPL2 EQU   TOLTEPWA+1736
$TLTRPL1 EQU   TOLTEPWA+1616
@NM00073 EQU   $SLTBL+135
$HIGHRTN EQU   $SLTBL+134
$PRIMADR EQU   $SLTBL+130
$CTSTPT  EQU   $SLTBL+128
$TSTCNT  EQU   $SLTBL+126
$SECFLGS EQU   $SECLST+3
$SECTION EQU   $SECLST
$SECACT  EQU   $TESTFLG
$CANTRUN EQU   $TESTFLG
$FINAL   EQU   $TESTFLG
$TESTSUF EQU   $RUNTEST+5
$TESTNUM EQU   $RUNTEST+1
$LETPRF  EQU   $RUNTEST
$SYMBOLC EQU   $SLTBL+5
$FAMILY  EQU   $SLTBL
$CDEVPT  EQU   TOLTEPWA+1466
$DEVCNTS EQU   TOLTEPWA+1464
$FEEDBCK EQU   $DEVTBLE+66
$WTISUED EQU   $DEVFLG4
$EXIOISD EQU   $DEVFLG4
$REMWRIT EQU   $DEVFLG4
$REMDONE EQU   $DEVFLG4
$2NDUSED EQU   $DEVFLG4
$1STUSED EQU   $DEVFLG4
$IGLXIFB EQU   $DEVFLG4
$EXIOLV3 EQU   $DEVFLG4
@NM00072 EQU   $DEVFLG5
$DVBASIC EQU   $DEVFLG5
$ASCII   EQU   $DEVFLG5
$DEVLU   EQU   $DEVFLG5
$OPNDFAL EQU   $DEVFLG5
$ACQNCB  EQU   $DEVFLG5
$REMOTE  EQU   $DEVFLG5
$ENDNODE EQU   $DEVFLG5
$LINENME EQU   $RNINFO
$CID     EQU   $DEVTBLE+52
$DVCOL   EQU   $LDNCBPT+2
$DVROW   EQU   $LDNCBPT
$NCSPLP  EQU   $DEVTBLE+44
$DVLN    EQU   $SSCPDAF
$DAF     EQU   $DEVSESP+4
$VARYPAB EQU   $DEVSESP
$SYSMN   EQU   $DEVTBLE+28
@NM00071 EQU   $DEVFLG3
$CLRSNT  EQU   $DEVFLG3
$OLTERR  EQU   $DEVFLG3
$SRTEST  EQU   $DEVFLG3
$DVSNDOK EQU   $SIOFLG
$POLLREQ EQU   $DEVFLG3
$ACQRED  EQU   $DEVFLG3
$NOTDEV  EQU   $DEVFLG3
$DVINCT  EQU   $DEVTBLE+26
$DVBRKST EQU   $OPND+1
$DVBRKSN EQU   $OPND
$DVSEQNO EQU   $OPIS
$CEINTRP EQU   $DEVFLG2
$TESTMDE EQU   $DEVFLG2
$DEVALOC EQU   $DEVFLG2
$ALLDATA EQU   $DEVFLG2
$ENDCNTL EQU   $DEVFLG2
$CTLDEV  EQU   $DEVFLG2
$NOCDS   EQU   $DEVFLG2
$DATAIN  EQU   $DEVFLG2
$PRIMARY EQU   $DEVFLG1
$DVCTBYT EQU   $INTOCC
$DEVACT  EQU   $DEVFLG1
$DVLGMDE EQU   $ATTNEXP
$DVSPRM  EQU   $EVNCPLT
$GRABBED EQU   $DEVFLG1
$CATASTR EQU   $DEVFLG1
$LETGO   EQU   $DEVFLG1
$CURELEM EQU   $$SYMNME+4
$MSGOTSD EQU   $$SYMNME
$EXTDEV  EQU   $DEVCDS+11
@NM00070 EQU   $DEVSDCF
$NOTPRIM EQU   $DEVSDCF
@NM00069 EQU   $DEVCDSF
@NM00068 EQU   $DEVCDSF
@NM00067 EQU   $DEVCDSF
$CDSNAME EQU   $DEVCDSF
$EXTRN   EQU   $DEVCDSF
$CEVOLUM EQU   $DEVCDSF
$SHARD   EQU   $DEVCDSF
$DEVFPM  EQU   $DEVCDSF
$DEVCNT  EQU   $DEVCDS+8
$DEVTYPE EQU   $DEVFEAT+3
$DEVCLAS EQU   $DEVFEAT+2
$DEVFRRS EQU   $DEVFEAT+1
$DEVMOD  EQU   $DEVFEAT
$DEVRDGT EQU   @NM00065+1
$DEVCTLU EQU   @NM00065+1
$DEVCHAN EQU   @NM00065
@NM00066 EQU   @NM00065
$CTINDX  EQU   $DEVUNAD
$FLAG16  EQU   $COMMFLG+15
$FLAG15  EQU   $COMMFLG+14
$FLAG14  EQU   $COMMFLG+13
$TEP2ND  EQU   $FLAG13
$TEP1ST  EQU   $FLAG13
$CATMSG  EQU   $FLAG13
$PRMPTSW EQU   $FLAG13
$DEVENT  EQU   $FLAG13
$OLTMACC EQU   $FLAG13
$LGON    EQU   $FLAG13
$CTLOGON EQU   $FLAG13
@NM00064 EQU   $FLAG12
$VARYINP EQU   $FLAG12
$ENDTEST EQU   $FLAG12
$VRYHRD  EQU   $FLAG12
$VRYSFT  EQU   $FLAG12
$POSTFLG EQU   $FLAG12
$OPTMSG  EQU   $FLAG12
$FEORCAT EQU   $FLAG11
@NM00063 EQU   $FLAG11
@NM00062 EQU   $FLAG10
$INBND   EQU   $FLAG10
$WAITFLG EQU   $FLAG10
$DPRINT  EQU   $FLAG10
$HOLD    EQU   $FLAG9
$NOTRRCH EQU   $FLAG9
@NM00061 EQU   $FLAG9
$COPY    EQU   $FLAG9
$LSTLNSW EQU   $FLAG9
$MULLNSW EQU   $FLAG9
$IGRES   EQU   $FLAG9
$VS2     EQU   $FLAG8
$VS1     EQU   $FLAG8
$EDOS    EQU   $FLAG8
@NM00060 EQU   $FLAG8
$TWOWAY  EQU   $FLAG8
@NM00059 EQU   $FLAG8
$RCVMSG  EQU   $FLAG7
$RCVRFLG EQU   $FLAG7
$SNDRFLG EQU   $FLAG7
$LDOIS   EQU   $FLAG7
$DCONTCT EQU   $FLAG7
$EXIOWAT EQU   $FLAG7
$2NDDATA EQU   $FLAG7
$1STDATA EQU   $FLAG7
$CIREQ   EQU   $FLAG6
$ABTERM  EQU   $ABNDBIT
$FSTMCIS EQU   $FLAG6
$DISCREQ EQU   $FLAG6
$DISCISS EQU   $FLAG6
$CHANGE  EQU   $FLAG6
$CTERROR EQU   $FLAG6
$RECAL11 EQU   $FLAG6
@NM00058 EQU   $FLAG5
$PROGCK  EQU   $CANCEL
$PRINTAP EQU   $FLAG5
@NM00057 EQU   $FLAG5
$MSG922  EQU   $FLAG5
$CT924   EQU   $FLAG5
$FSTCAT  EQU   $FLAG5
$FSTFE   EQU   $FLAG5
$ACTOPND EQU   $FLAG4
$ACQCUTT EQU   $FLAG4
$CLSSACT EQU   $FLAG4
$BACKINT EQU   $FLAG4
$DMSGSW  EQU   $FLAG4
$TSTDEVP EQU   $FLAG4
$APRQPER EQU   $FLAG4
$OPCOM   EQU   $FLAG4
$NEWAP   EQU   $FLAG3
$ALTPRTR EQU   $FLAG3
$OPTERR  EQU   $FLAG3
$PRTONLY EQU   $FLAG3
$REQSTOR EQU   $FLAG3
$LOGOFFE EQU   $FLAG3
$TSTERR  EQU   $FLAG3
$DEVERR  EQU   $FLAG3
$PARTIAL EQU   $FLAG2
$NRMTERM EQU   $FLAG2
$VALDTST EQU   $FLAG2
$VALDDEV EQU   $FLAG2
$DBLSLSH EQU   $FLAG2
$NDR     EQU   $FLAG2
@NM00056 EQU   $FLAG2
$FTTHR   EQU   $FLAG2
$OLTACT  EQU   $FLAG1
$NORELDV EQU   $FLAG1
@NM00055 EQU   $FLAG1
$OPTCHNG EQU   $FLAG1
$DEVCHNG EQU   $FLAG1
$TESTCNG EQU   $FLAG1
$CNSLFG  EQU   $FLAG1
$TEP3RD  EQU   $FLAG1
@NM00054 EQU   $CDA+120
$CUCNT   EQU   $CDA+118
@NM00053 EQU   $CDA+117
$PRTFORM EQU   $CDA+116
$OPISCNT EQU   $CDA+114
$OPNDCNT EQU   $CDA+112
$GETMSZE EQU   $CDA+110
$GRCNTS  EQU   $CDA+108
$CTLCNT  EQU   $CDA+106
$ACTLVL  EQU   $CDA+105
$PRNTLVL EQU   $CDA+104
$ERRCNTA EQU   $CDA+102
$TLCNT   EQU   $CDA+100
$TIMEALW EQU   $CDA+96
$PTRAREA EQU   $CDA+92
$GETMPTR EQU   $CDA+88
$R13PTRT EQU   $CDA+84
$R13PTR  EQU   $CDA+80
$TEPEND  EQU   $CDA+76
$PLINKDL EQU   $CDA+72
$TEPBEGN EQU   $CDA+68
$FRELPTR EQU   $CDA+64
$HIGHADR EQU   $HIMOREC
$LOMOREC EQU   $CDA+56
$ENDCOMM EQU   $CDA+48
$COMMON  EQU   $RCA
$SLASHAD EQU   $CDA+32
$PASSON  EQU   $CDA+28
$TOLBRTB EQU   $CDA+24
$SCTPTR8 EQU   $CDA+20
$SCTPTR  EQU   $CDA+16
$TBWDPTR EQU   $CDA+12
$TFWDPTR EQU   $CDA+8
@NM00052 EQU   $CDA
@NM00051 EQU   $SCTTBLE+98
$SCTLWTC EQU   $SCTTBLE+96
$SCTLWTA EQU   $SCTTBLE+92
#EXT     EQU   $SCTTBLE+88
#PASS    EQU   $SCTTBLE+84
#TABLE   EQU   $SCTTBLE+80
#MSGIDAC EQU   $SCTTBLE+78
@NM00050 EQU   $SCTTBLE+71
$RETMASK EQU   $SCTTBLE+70
$R249255 EQU   $ROUTMSK+29
$R241248 EQU   $ROUTMSK+28
$R233240 EQU   $ROUTMSK+27
$R225232 EQU   $ROUTMSK+26
$R217224 EQU   $ROUTMSK+25
$R209216 EQU   $ROUTMSK+24
$R201208 EQU   $ROUTMSK+23
$R193200 EQU   $ROUTMSK+22
$R185192 EQU   $ROUTMSK+21
$R177184 EQU   $ROUTMSK+20
$R169176 EQU   $ROUTMSK+19
$R161168 EQU   $ROUTMSK+18
$R153160 EQU   $ROUTMSK+17
$R145152 EQU   $ROUTMSK+16
$R137144 EQU   $ROUTMSK+15
$R129136 EQU   $ROUTMSK+14
$R121128 EQU   $ROUTMSK+13
$R113120 EQU   $ROUTMSK+12
$R105112 EQU   $ROUTMSK+11
$R097104 EQU   $ROUTMSK+10
$R089096 EQU   $ROUTMSK+9
$R081088 EQU   $ROUTMSK+8
$R073080 EQU   $ROUTMSK+7
$R065072 EQU   $ROUTMSK+6
$R057064 EQU   $ROUTMSK+5
$R049056 EQU   $ROUTMSK+4
$R041048 EQU   $ROUTMSK+3
$R033040 EQU   $ROUTMSK+2
$R025032 EQU   $ROUTMSK+1
$R017024 EQU   $ROUTMSK
$TOTFLG2 EQU   $SCTTBLE+39
@NM00049 EQU   $TOTFLG1
@NM00048 EQU   $TOTFLG1
@NM00047 EQU   $TOTFLG1
$CURELOD EQU   $TOTFLG1
$CTEQTT  EQU   $TOTFLG1
@NM00046 EQU   $TOTFLG1
@NM00045 EQU   $TOTFLG1
$LINESHR EQU   $TOTFLG1
@NM00044 EQU   $OLTFLG2
@NM00043 EQU   $OLTFLG2
@NM00042 EQU   $OLTFLG2
@NM00041 EQU   $OLTFLG2
@NM00040 EQU   $OLTFLG2
@NM00039 EQU   $OLTFLG2
@NM00038 EQU   $OLTFLG2
$TALK    EQU   $OLTFLG2
$DYCOM   EQU   $OLTFLGS
@NM00037 EQU   $OLTFLGS
$TRACE   EQU   $OLTFLGS
$RETCODE EQU   $OLTFLGS
$CONTCB  EQU   $OLTFLGS
$RETAIN  EQU   $OLTFLGS
$CLEANRT EQU   $OLTFLGS
$MANINTV EQU   $OLTFLGS
$OLTSIZE EQU   $SCTTBLE+34
$QSCTMOD EQU   $EXECFLG
$CTRLMOD EQU   $EXECFLG
$CLEANUP EQU   $EXECFLG
$LSTPDEV EQU   $EXECFLG
$ERRCNT  EQU   $EXECFLG
$RTNSLCT EQU   $EXECFLG
$MULTDEV EQU   $EXECFLG
@NM00036 EQU   $EXECFLG
$RMSKCNT EQU   $SCTTBLE+32
$SYNAME  EQU   $CDS8T19+4
$EXTSIG  EQU   $CDS8T19+3
$CDFLGS  EQU   $CDS8T19+1
$CDSCNT  EQU   $CDS8T19
$PDEVDSC EQU   $SCTTBLE+16
$PDEVADR EQU   $SCTTBLE+12
$COMMCN  EQU   $CDSFLGS
$CUSTSYM EQU   $CDSFLGS
$TWOCHSW EQU   $CDSFLGS
$SYMNAME EQU   $CDSFLGS
$EXTINTC EQU   $CDSFLGS
$CEVOL   EQU   $CDSFLGS
$SHARED  EQU   $CDSFLGS
$FPM     EQU   $CDSFLGS
$LASTSUB EQU   $PDEVFLG
@NM00035 EQU   $PDEVFLG
@NM00034 EQU   $PDEVFLG
@NM00033 EQU   $PDEVFLG
$LASTDEV EQU   $PDEVFLG
@NM00032 EQU   $PDEVFLG
$EXFILPT EQU   $PDEVFLG
$FPMOLD  EQU   $PDEVFLG
$TSSSYM  EQU   $SCTTBLE+8
$SCTLEVL EQU   $SCTTBLE+7
$DRIVER  EQU   $SCTTBLE+6
$RT0916  EQU   $SCTTBLE+5
$RT0108  EQU   $SCTTBLE+4
$LOOPTST EQU   $ERROPT
$LOOPERR EQU   $ERROPT
$NERRPRT EQU   $ERROPT
$NOCNTRL EQU   $ERROPT
$ALTPRNT EQU   $ERROPT
$CATERR  EQU   $ERROPT
$ASTERIK EQU   $ERROPT
$TESTERR EQU   $ERROPT
$FSTCOMM EQU   $TESTOPT
$INDEFLP EQU   $TESTOPT
$NOPRT   EQU   $TESTOPT
$PARAPRT EQU   $TESTOPT
@NM00031 EQU   $TESTOPT
$ERRLPCT EQU   $SCTTBLE
$TLTEND  EQU   $RCAAREA+945
$CNSLID  EQU   $RCAAREA+936
$EXITSAV EQU   $RCAAREA+864
$TRASCII EQU   $RCAAREA+608
@NM00030 EQU   $RCAAREA+605
$VTAMEND EQU   $RCAFLG
$TPPOSTD EQU   $RCAFLG
$NEWCT   EQU   $RCAFLG
$ABNDALL EQU   $RCAFLG
$CUTESTB EQU   $RCAFLG
$CONSOLE EQU   $RCAFLG
$TPLOGON EQU   $RCAFLG
$UPDATE  EQU   $RCAFLG
$DEVAREA EQU   $RCAAREA+600
$CTDVAR  EQU   $RCAAREA+596
$BUFFS   EQU   $RCAAREA+464
$TLTNIB  EQU   $CONSTNT+140
$TLTPRPL EQU   $CONSTNT+20
@NM00029 EQU   $CONSTNT+4
@NM00028 EQU   $CONSTNT+2
$USECNT  EQU   $CONSTNT
$CURRTWA EQU   $POINTER+140
$CTNAME  EQU   $POINTER+132
$CTARGX  EQU   $POINTER+128
$COMINT  EQU   $POINTER+120
$QUEHNDL EQU   $POINTER+116
@NM00027 EQU   $POINTER+36
$RTNPTR  EQU   $POINTER+32
$TLTECB2 EQU   $POINTER+28
$TLTECB1 EQU   $POINTER+24
$CLEANP  EQU   $POINTER+20
$ABEND   EQU   $POINTER+16
$LSTAREA EQU   $POINTER+12
$FSTAREA EQU   $POINTER+8
$CVTSAVE EQU   $POINTER+4
$TOLTEP  EQU   $POINTER
$TLTACB  EQU   $RCAAREA
DATASW   EQU   I008CSW
DBSW     EQU   I008CSW
EBCDICSW EQU   I008CSW
CONTSCAN EQU   I008CSW
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RT00085 EQU   I008C01B
@RF00096 EQU   I008C03
@RT00123 EQU   I008CADR
@RT00153 EQU   I008CER2
@RT00155 EQU   I008CER3
@ENDDATA EQU   *
         END   ISTIC008,(C'PLS2108',0702,80232)
