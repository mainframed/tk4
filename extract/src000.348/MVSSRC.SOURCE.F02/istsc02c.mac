         TITLE 'ISTSC02C-MORECORE'
ISTSC02C CSECT ,                                                   0001
@MAINENT DS    0H                                                  0001
         USING *,@15                                               0001
         B     @PROLOG                                             0001
         DC    AL1(16)                                             0001
         DC    C'ISTSC02C  80.232'                                 0001
         DROP  @15
@PROLOG  ST    @14,12(,@13)                                        0001
         STM   @02,@12,28(@13)                                     0001
         BALR  @12,0                                               0001
@PSTART  DS    0H                                                  0001
         USING @PSTART,@12                                         0001
         ST    @13,@SA00001+4                                      0001
         LA    @14,@SA00001                                        0001
         ST    @14,8(,@13)                                         0001
         LR    @13,@14                                             0001
         EJECT
*                                                                  0051
*/********************************************************************/
*/*      FIRST TIME INITIALIZATION                                   */
*/********************************************************************/
*                                                                  0052
*   R15=0;                          /* SET RTN CODE REG TO 0         */
         SLR   R15,R15                                             0052
*   MINPTR=0;                       /* SET CONSTANTS TO ZERO         */
         SLR   @14,@14                                             0053
         ST    @14,MINPTR                                          0053
*   MAXPTR=0;                                                      0054
         ST    @14,MAXPTR                                          0054
*   IF $FSTMCIS='1'B                /* HAS A MORE CORE BEEN          */
*     THEN                          /* ISSUIED                       */
         TM    $FSTMCIS(WAPTR),B'00000100'                         0055
         BO    @RT00055                                            0055
*     GOTO S2CC0001;                /* BR-YES SWITCH IS ON ELSE NO   */
*   R7=$OLTPTR;                     /* PICK UP PTR TO OLT            */
         L     R7,$OLTPTR(,WAPTR)                                  0057
*   R6=((R7+$RTSIZE+15)&'FFFFFFF8'X);/* COMPUTE PTR FREE + 8         */
         L     @09,$LOWADDR(,WAPTR)                                0058
         LH    @11,RTNDISP(,@09)                                   0058
         ALR   @11,@09                                             0058
         LR    R6,R7                                               0058
         AL    R6,$RTSIZE(,@11)                                    0058
         AL    R6,@CF00034                                         0058
         N     R6,@CF00708                                         0058
*   IF R6>$HIMOREC                  /* ANY CORE TO USE               */
*     THEN                          /* BR-NO TO RTN CODE 8 ROUTIN    */
         L     @09,$HIMOREC(,WAPTR)                                0059
         CR    R6,@09                                              0059
         BH    @RT00059                                            0059
*     GOTO S2CC0090;                /* ELSE YES                      */
*   $FSTMCIS='1'B;                  /* SET FLAG TO IND 1ST TIM DN    */
         OI    $FSTMCIS(WAPTR),B'00000100'                         0061
*   R6=R6-8;                        /* SET FREE PTR IN TWA           */
         SL    R6,@CF00074                                         0062
*   $FRELPTR=R6;                                                   0063
         ST    R6,$FRELPTR(,WAPTR)                                 0063
*   COREFWD=0;                      /* SET FWD PTR TO ZERO           */
         ST    @14,COREFWD(,R6)                                    0064
*   CORESZE=($HIMOREC-R6);          /* SET SIZE OF FREE AREA         */
         SLR   @09,R6                                              0065
         ST    @09,CORESZE(,R6)                                    0065
*   FREE='1'B;                      /* SET INDICATOR AREA FREE       */
         OI    FREE(R6),B'00000001'                                0066
*/********************************************************************/
*                                                                  0067
*   GEN(EJECT);                                                    0067
         EJECT
*                                                                  0068
*/********************************************************************/
*/*      COMMON INITIALIZE                                           */
*/********************************************************************/
*                                                                  0068
*S2CC0001:                                                         0068
*   ;                                                              0068
S2CC0001 DS    0H                                                  0069
*   R5=$MORCMAX+8;                  /* ADD 8 TO MIN & MAX SIZES      */
         LA    @14,8                                               0069
         L     R5,$MORCMAX(,MORMAP)                                0069
         ALR   R5,@14                                              0069
*   R4=$MORCMIN+8;                  /*                               */
         AL    @14,$MORCMIN(,MORMAP)                               0070
         LR    R4,@14                                              0070
*   R7=0;                           /* SET WORK REGS TO ZERO         */
         SLR   R7,R7                                               0071
*   R8=0;                           /*                               */
         SLR   R8,R8                                               0072
*   R6=$FRELPTR;                    /* SET R6 FOR MANAG AREA         */
         L     R6,$FRELPTR(,WAPTR)                                 0073
*/********************************************************************/
*/*      SEARCH FOR POTENTIAL MAX & MIN/BTWN AREAS                   */
*/********************************************************************/
*                                                                  0074
*S2CC0002:                                                         0074
*   ;                                                              0074
S2CC0002 DS    0H                                                  0075
*   IF FREE='0'B                    /* TEST FOR FREE AREA            */
*     THEN                          /* IF BIT ON AREA FREE           */
         TM    FREE(R6),B'00000001'                                0075
         BZ    @RT00075                                            0075
*     GOTO S2CC0008;                /* BIT OFF AREA IN USE           */
*   R3=(CORESZE&'FFFFFFFE'X);       /* SET R3 WITH SIZE OF FREE      */
         L     R3,CORESZE(,R6)                                     0077
         N     R3,@CF00715                                         0077
*   IF R7=0                         /* TEST FOR ANY MAX FOUND        */
*     THEN                          /* YET IF NOT CHECK 1ST MAX      */
         LTR   R7,R7                                               0078
         BZ    @RT00078                                            0078
*     GOTO S2CC0003;                /* IS THIS AREA LESS THAN        */
*   IF R3^<R7                       /* ONE FOUND MAX                 */
*     THEN                          /* BR- NO TO CHECK FOR MIN       */
         CR    R3,R7                                               0080
         BNL   @RT00080                                            0080
*     GOTO S2CC0004;                /*                               */
*S2CC0003:                                                         0082
*   ;                               /* CHECK MAX                     */
S2CC0003 DS    0H                                                  0083
*   IF R5^>R3                       /* IF REQUESTED MAX NOT          */
*     THEN                          /* GTR THAN AREA AVAIBLE         */
         CR    R5,R3                                               0083
         BNH   @RT00083                                            0083
*     GOTO S2CC0005;                /* SAVE PTR                      */
*S2CC0004:                                                         0085
*   ;                               /* CHECK MIN                     */
S2CC0004 DS    0H                                                  0086
*   IF R4>R3                        /* IF REQUESTED MIN GTR THAN     */
*     THEN                          /* AREA AVAILABLE GOTO           */
         CR    R4,R3                                               0086
         BH    @RT00086                                            0086
*     GOTO S2CC0008;                /* CHECK NXT AREA                */
*   IF $MORLEVL='03'X               /* TEST FOR LEVEL 3 MACRO        */
*     THEN                          /* IF YES TRY BTWEEN             */
         CLI   $MORLEVL(MORMAP),X'03'                              0088
         BE    @RT00088                                            0088
*     GOTO S2CC0006;                /*                               */
*   IF R8=0                         /* ANY PREVIOUS MIN'S FOUND      */
*     THEN                          /* NO GO SAVE POTENTIAL MINS     */
         LTR   R8,R8                                               0090
         BZ    @RT00090                                            0090
*     GOTO S2CC0007;                /*                               */
*   IF R8>R3                        /* IS MINIMUM GTR THAN AREA      */
*     THEN                          /* REQUESTED                     */
         CR    R8,R3                                               0092
         BH    @RT00092                                            0092
*     GOTO S2CC0007;                /* SAVE PTR                      */
*   GOTO S2CC0008;                  /* IF NO CHECK NXT AREA          */
         B     S2CC0008                                            0094
*S2CC0005:                                                         0095
*   ;                               /* POTENTIAL MAX                 */
S2CC0005 DS    0H                                                  0096
*   MAXPTR=R6;                      /* SAVE PTR FOR POTENT. MAX      */
         ST    R6,MAXPTR                                           0096
*   R7=R3;                          /* SAVE SIZE OF POT. MAX         */
         LR    R7,R3                                               0097
*   GOTO S2CC0008;                  /* GO CHECK NXT AREA             */
         B     S2CC0008                                            0098
*S2CC0006:                                                         0099
*   ;                               /*                               */
S2CC0006 DS    0H                                                  0100
*   IF R8^<R3                       /* IS REQ SIZE GTR THAN          */
*     THEN                          /* FOUND MINIMUM                 */
         CR    R8,R3                                               0100
         BNL   @RT00100                                            0100
*     GOTO S2CC0008;                /* YES GO TRY NXT AREA           */
*S2CC0007:                                                         0102
*   ;                               /*                               */
S2CC0007 DS    0H                                                  0103
*   MINPTR=R6;                      /* SAVE POTENTIAL MIN PTR        */
         ST    R6,MINPTR                                           0103
*   R8=R3;                          /* SAVE POT SIZE                 */
         LR    R8,R3                                               0104
*S2CC0008:                          /*                               */
*   IF COREFWD=0                    /* IF COREFWD=0 WE ARE AT END    */
*     THEN                          /* OF LOOP MAX-MIN SET           */
S2CC0008 L     @14,COREFWD(,R6)                                    0105
         LTR   @14,@14                                             0105
         BZ    @RT00105                                            0105
*     GOTO S2CC0010;                /* IF NOT PICK UP PTR AND        */
*   R6=COREFWD;                     /* RE LOOP                       */
         LR    R6,@14                                              0107
*   GOTO S2CC0002;                  /*                               */
         B     S2CC0002                                            0108
*/********************************************************************/
*                                                                  0109
*   GEN(EJECT);                                                    0109
         EJECT
*                                                                  0110
*/********************************************************************/
*/*      GIVE  MAX OR MIN OR BETWEEN  CORE                           */
*/********************************************************************/
*                                                                  0110
*S2CC0010:                                                         0110
*   ;                               /* ANY MAX FOUND                 */
S2CC0010 DS    0H                                                  0111
*   IF R7=0                         /* BR-NO                         */
*     THEN                          /*                               */
         LTR   R7,R7                                               0111
         BZ    @RT00111                                            0111
*     GOTO S2CC0011;                /*                               */
*   R0=$MORCMAX;                    /* YES SET SIZE FOR CALLER       */
         L     R0,$MORCMAX(,MORMAP)                                0113
*   R1=MAXPTR+8;                    /* YES SET PTR FOR CALLER        */
         L     @14,MAXPTR                                          0114
         LA    R1,8                                                0114
         ALR   R1,@14                                              0114
*   R7=MAXPTR;                                                     0115
         LR    R7,@14                                              0115
*   GOTO S2CC0013;                  /*                               */
         B     S2CC0013                                            0116
*S2CC0011:                                                         0117
*   ;                               /*                               */
S2CC0011 DS    0H                                                  0118
*   IF R8=0                         /* ANY MIN/BTWEEN FOUND          */
*     THEN                          /* BR-NO TO RTN CODE 8           */
         LTR   R8,R8                                               0118
         BZ    @RT00118                                            0118
*     GOTO S2CC0090;                /*                               */
*   R7=MINPTR;                      /* SET UP FOR NEW MOREC PTR      */
         L     R7,MINPTR                                           0120
*   MINPTR=R7+8;                    /* SET UP ADDR+8                 */
         LA    @14,8                                               0121
         LR    @09,R7                                              0121
         ALR   @09,@14                                             0121
         ST    @09,MINPTR                                          0121
*   IF $MORLEVL^='03'X              /* IS MACRO LEVEL 3              */
*     THEN                          /* BR-NO-GIVE MIN                */
         CLI   $MORLEVL(MORMAP),X'03'                              0122
         BNE   @RT00122                                            0122
*     GOTO S2CC0012;                /*                               */
*   R0=R8-8;                        /* GET SIZE FOR CALLER           */
         LR    R0,R8                                               0124
         SLR   R0,@14                                              0124
*   R1=MINPTR;                      /* SET UP ADDRESS + 8            */
         LR    R1,@09                                              0125
*   R6=R1-8;                        /* SET POINTER FOR FREE BIT      */
         LCR   @14,@14                                             0126
         ALR   @14,R1                                              0126
         LR    R6,@14                                              0126
*   GOTO S2CC0021;                  /*                               */
         B     S2CC0021                                            0127
*S2CC0012:                                                         0128
*   ;                               /*                               */
S2CC0012 DS    0H                                                  0129
*   R1=MINPTR;                      /* SET UP ADDRESS + 8            */
         L     R1,MINPTR                                           0129
*   R5=R4;                          /* GET NEW MORE CORE REQ         */
         LR    R5,R4                                               0130
*   R0=$MORCMIN;                    /* GET MIN LENGTH                */
         L     R0,$MORCMIN(,MORMAP)                                0131
*S2CC0013:                                                         0132
*   ;                               /*                               */
S2CC0013 DS    0H                                                  0133
*   R6=R7;                          /* GET OLD FREE PTR INTO R6      */
         LR    R6,R7                                               0133
*   R7=CORESZE;                     /* PICK UP OLD FREE SIZE         */
         L     R7,CORESZE(,R6)                                     0134
*   R5=(((R5+7)/8)*8);              /* ROUND SIZE UPTO DWORD         */
         LA    @14,8                                               0135
         LA    @10,7                                               0135
         ALR   @10,R5                                              0135
         SRDA  @10,32                                              0135
         DR    @10,@14                                             0135
         SLA   @11,3                                               0135
         LR    R5,@11                                              0135
*   IF 8>(R7-R5)                    /* ANY SIZE LEFT FOR MORECORE    */
*     THEN                          /* BR-NONE LEFT                  */
         LR    @09,R7                                              0136
         SLR   @09,R5                                              0136
         CR    @09,@14                                             0136
         BL    @RT00136                                            0136
*     GOTO S2CC0021;                /*                               */
*/********************************************************************/
*/*           UPDATE MORE/FREE CORE CHAIN                            */
*/********************************************************************/
*                                                                  0138
*S2CC0020:                                                         0138
*   ;                                                              0138
S2CC0020 DS    0H                                                  0139
*   R8=R6+R5;                       /* SET PTR TO NEW FREE AREA      */
         LR    R8,R6                                               0139
         ALR   R8,R5                                               0139
*   COREFWDN=COREFWD;               /* SET UP CHAIN IN NEW FREE      */
         L     @14,COREFWD(,R6)                                    0140
         ST    @14,COREFWDN(,R8)                                   0140
*   CORESZEN=CORESZE-R5;            /* AND JUST GOTTEN AREA          */
         L     @14,CORESZE(,R6)                                    0141
         SLR   @14,R5                                              0141
         ST    @14,CORESZEN(,R8)                                   0141
*   FREEN='1'B;                     /* SET FLAGS IN NEW FOR FREE     */
         OI    FREEN(R8),B'00000001'                               0142
*   CORESZE=R5;                     /* SET SIZE                      */
         ST    R5,CORESZE(,R6)                                     0143
*   COREFWD=R8;                     /* SET CHAIN PTR IN GOTTEN       */
         ST    R8,COREFWD(,R6)                                     0144
*S2CC0021:                                                         0145
*   ;                               /* TO NEW FREE                   */
S2CC0021 DS    0H                                                  0146
*   FREE='0'B;                      /* SET GOTTEN AREA NOT FREE      */
         NI    FREE(R6),B'11111110'                                0146
*   GOTO S2CC0092;                  /* GOTO RTN CODE 0               */
         B     S2CC0092                                            0147
*/********************************************************************/
*                                                                  0148
*   GEN(EJECT);                                                    0148
         EJECT
*                                                                  0149
*/********************************************************************/
*/*      RETURN                                                      */
*/********************************************************************/
*                                                                  0149
*S2CC0090:                                                         0149
*   ;                                                              0149
S2CC0090 DS    0H                                                  0150
*   R15=R15+4;                      /* RTN CODE =8                   */
         AL    R15,@CF00087                                        0150
*S2CC0091:                                                         0151
*   ;                                                              0151
S2CC0091 DS    0H                                                  0152
*   R15=R15+4;                      /* RTN CODE =4                   */
         AL    R15,@CF00087                                        0152
*S2CC0092:                                                         0153
*   ;                                                              0153
S2CC0092 DS    0H                                                  0154
*   DO;                             /* ATDSPLY                       */
*   END;                            /* ATDSPLY                       */
*   END;                            /* RTN CODE =0                   */
@EL00001 L     @13,4(,@13)                                         0156
@EF00001 DS    0H                                                  0156
@ER00001 L     @14,12(,@13)                                        0156
         LM    @02,@12,28(@13)                                     0156
         BR    @14                                                 0156
@DATA    DS    0H
         DS    0F
@SA00001 DS    18F
         DS    0F
@CF00087 DC    F'4'
@CF00074 DC    F'8'
@CF00034 DC    F'15'
@CF00708 DC    XL4'FFFFFFF8'
@CF00715 DC    XL4'FFFFFFFE'
         DS    0D
MAXPTR   DC    F'0'
MINPTR   DC    F'0'
PATCH    DC    15F'0'
@00      EQU   00                      EQUATES FOR REGISTERS 0-15
@01      EQU   01
@02      EQU   02
@03      EQU   03
@04      EQU   04
@05      EQU   05
@06      EQU   06
@07      EQU   07
@08      EQU   08
@09      EQU   09
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
@14      EQU   14
@15      EQU   15
R0       EQU   @00
R1       EQU   @01
R2       EQU   @02
R3       EQU   @03
R4       EQU   @04
R5       EQU   @05
R6       EQU   @06
R7       EQU   @07
R8       EQU   @08
R15      EQU   @15
RCAPTR   EQU   @03
WAPTR    EQU   @02
MORMAP   EQU   @01
FREMAP   EQU   @01
R10      EQU   @10
R11      EQU   @11
R12      EQU   @12
R13      EQU   @13
R14      EQU   @14
R9       EQU   @09
$RCAAREA EQU   0
$POINTER EQU   $RCAAREA+100
$TRTBLA  EQU   $POINTER+124
$CONSTNT EQU   $RCAAREA+244
$RCAFLG  EQU   $RCAAREA+604
TOLTEPWA EQU   0
$SCTTBLE EQU   TOLTEPWA
$TESTOPT EQU   $SCTTBLE+2
$ERROPT  EQU   $SCTTBLE+3
$PDEVFLG EQU   $SCTTBLE+10
$CDSFLGS EQU   $SCTTBLE+11
$CDS8T19 EQU   $SCTTBLE+20
$EXECFLG EQU   $SCTTBLE+33
$OLTFLGS EQU   $SCTTBLE+36
$OLTFLG2 EQU   $SCTTBLE+37
$TOTFLG1 EQU   $SCTTBLE+38
$ROUTMSK EQU   $SCTTBLE+40
$CDA     EQU   TOLTEPWA+100
$RCA     EQU   $CDA+44
$OLTPTR  EQU   $CDA+52
$LOWADDR EQU   $OLTPTR
$HIMOREC EQU   $CDA+60
$FRELPTR EQU   $CDA+64
$COMMFLG EQU   TOLTEPWA+224
$FLAG1   EQU   $COMMFLG
$FLAG2   EQU   $COMMFLG+1
$FLAG3   EQU   $COMMFLG+2
$FLAG4   EQU   $COMMFLG+3
$FLAG5   EQU   $COMMFLG+4
$EOJ     EQU   $FLAG5
$CANCEL  EQU   $EOJ
$FLAG6   EQU   $COMMFLG+5
$FSTMCIS EQU   $FLAG6
$ABNDBIT EQU   $FLAG6
$FLAG7   EQU   $COMMFLG+6
$FLAG8   EQU   $COMMFLG+7
$FLAG9   EQU   $COMMFLG+8
$FLAG10  EQU   $COMMFLG+9
$FLAG11  EQU   $COMMFLG+10
$FLAG12  EQU   $COMMFLG+11
$FLAG13  EQU   $COMMFLG+12
$DEVTBLE EQU   TOLTEPWA+240
$DEVCDS  EQU   $DEVTBLE
$DEVUNAD EQU   $DEVCDS
@NM00039 EQU   $DEVUNAD+2
$DEVFEAT EQU   $DEVCDS+4
$DEVCDSF EQU   $DEVCDS+9
$DEVSDCF EQU   $DEVCDS+10
$$SYMNME EQU   $DEVCDS+12
$DEVFLG1 EQU   $DEVTBLE+20
$EVNCPLT EQU   $DEVFLG1
$ATTNEXP EQU   $DEVFLG1
$INTOCC  EQU   $DEVFLG1
$DEVFLG2 EQU   $DEVTBLE+21
$DEVTECB EQU   $DEVTBLE+22
$OPIS    EQU   $DEVTECB
$OPND    EQU   $DEVTECB+2
$DEVFLG3 EQU   $DEVTBLE+27
$SIOFLG  EQU   $DEVFLG3
$IFTOUT  EQU   $DEVTBLE+36
$DEVSESP EQU   $IFTOUT
$SSCPDAF EQU   $IFTOUT+6
$LDNCBPT EQU   $DEVTBLE+48
$RNINFO  EQU   $DEVTBLE+56
$DEVFLG5 EQU   $RNINFO+8
$DEVFLG4 EQU   $DEVTBLE+65
$SLTBL   EQU   TOLTEPWA+1468
$RUNTEST EQU   $SLTBL+13
$TESTFLG EQU   $SLTBL+21
$SECLST  EQU   $SLTBL+22
#EXITA   EQU   TOLTEPWA+2632
$CCOMDAT EQU   TOLTEPWA+2644
$CFLGS   EQU   $CCOMDAT+16
$24FEMSG EQU   TOLTEPWA+2681
$24CATMG EQU   $24FEMSG+11
@NM00048 EQU   TOLTEPWA+2776
$OUNTPTR EQU   @NM00048+4
$NSPTR   EQU   $OUNTPTR
$NSCNT   EQU   @NM00048+10
$ENXX    EQU   @NM00048+15
$IMITX   EQU   $ENXX
SVESC033 EQU   TOLTEPWA+3160
SVECC013 EQU   TOLTEPWA+3232
SVEIC003 EQU   TOLTEPWA+3592
SVESC022 EQU   TOLTEPWA+3736
SVECC011 EQU   TOLTEPWA+4024
MORECMAP EQU   0
$MORLEVL EQU   MORECMAP+1
$MORCMAX EQU   MORECMAP+4
$MORCMIN EQU   MORECMAP+8
FREEMAP  EQU   0
@NM00051 EQU   0
RTNDISP  EQU   @NM00051+10
INST     EQU   @NM00051+12
$NEWSPRF EQU   0
#FLAGS   EQU   $NEWSPRF+16
$RTSIZE  EQU   $NEWSPRF+20
COREMANG EQU   0
CORESZE  EQU   COREMANG
@NM00056 EQU   CORESZE+3
FREE     EQU   @NM00056
COREFWD  EQU   COREMANG+4
@NM00058 EQU   0
CORESZEN EQU   @NM00058
@NM00060 EQU   CORESZEN+3
FREEN    EQU   @NM00060
COREFWDN EQU   @NM00058+4
$TRTBL   EQU   0
#EXIT    EQU   0
OLTENTRY EQU   0
SVECC012 EQU   SVESC022
SVEIC00A EQU   SVEIC003
SVEIC004 EQU   SVEIC003
SVEIC005 EQU   SVEIC003
SVESC02A EQU   SVESC022
SVESC02B EQU   SVESC022
SVESC02D EQU   SVESC022
SVESC02E EQU   SVESC022
SVESC02F EQU   SVECC013
SVESC024 EQU   SVESC022
SVESC027 EQU   SVESC022
SVESC029 EQU   SVESC033
SVESC031 EQU   SVECC013
SVESC032 EQU   SVECC011
SVETC037 EQU   SVEIC003
         AGO   .@UNREFD                START UNREFERENCED COMPONENTS
@NM00061 EQU   @NM00060
@NM00059 EQU   CORESZEN
@NM00057 EQU   @NM00056
@NM00055 EQU   CORESZE
$RME     EQU   $NEWSPRF+36
@NM00054 EQU   $NEWSPRF+35
$ECA     EQU   $NEWSPRF+32
$DCHB    EQU   $NEWSPRF+28
$MOSIZE  EQU   $NEWSPRF+24
$COUNT   EQU   $NEWSPRF+18
$REFNUM  EQU   $NEWSPRF+17
@NM00053 EQU   #FLAGS
#MSGIDRQ EQU   #FLAGS
#PLKMCOR EQU   #FLAGS
@NM00052 EQU   #FLAGS
$VIRTUAL EQU   #FLAGS
$PLINK$  EQU   $NEWSPRF+12
$SCTREQ  EQU   $NEWSPRF+11
$RM      EQU   $NEWSPRF+9
$CTYPE   EQU   $NEWSPRF+8
$CCLASS  EQU   $NEWSPRF+7
$CFEAT   EQU   $NEWSPRF+6
$CMODEL  EQU   $NEWSPRF+5
$TYPE    EQU   $NEWSPRF+4
$CLASS   EQU   $NEWSPRF+3
$FEAT    EQU   $NEWSPRF+2
$MODEL   EQU   $NEWSPRF+1
$RTN#    EQU   $NEWSPRF
#MSGID   EQU   @NM00051+16
LEVEL    EQU   @NM00051+8
SECTID   EQU   @NM00051
$FREEPTR EQU   FREEMAP+4
$FREIDNT EQU   FREEMAP+2
$FRELEVL EQU   FREEMAP+1
$FRETRMG EQU   FREEMAP
$MORIDNT EQU   MORECMAP+2
$MORTRMG EQU   MORECMAP
SVECC010 EQU   TOLTEPWA+3952
SVETC035 EQU   TOLTEPWA+3880
SVESC030 EQU   TOLTEPWA+3808
SVESC020 EQU   TOLTEPWA+3664
SVEIC002 EQU   TOLTEPWA+3520
SVECC014 EQU   TOLTEPWA+3376
SVESC120 EQU   TOLTEPWA+3304
SVESC025 EQU   TOLTEPWA+3088
@NM00050 EQU   TOLTEPWA+2980
$RPLERR  EQU   TOLTEPWA+2977
@NM00049 EQU   TOLTEPWA+2976
$R13PR3  EQU   TOLTEPWA+2972
$CEINT2  EQU   TOLTEPWA+2968
$CEINT1  EQU   TOLTEPWA+2964
$MSGGET  EQU   TOLTEPWA+2960
$ACQLIST EQU   TOLTEPWA+2956
$R4SAVE1 EQU   TOLTEPWA+2952
$CLSISS  EQU   TOLTEPWA+2950
$CLSCNT  EQU   TOLTEPWA+2948
$CUTABLE EQU   TOLTEPWA+2868
$BUFSZ2  EQU   TOLTEPWA+2864
$RESID2  EQU   TOLTEPWA+2860
$OLTCCW2 EQU   TOLTEPWA+2856
$ENDBFR2 EQU   TOLTEPWA+2852
$1STBFR2 EQU   TOLTEPWA+2848
$TECB2   EQU   TOLTEPWA+2844
$BUFSZ1  EQU   TOLTEPWA+2840
$RESID1  EQU   TOLTEPWA+2836
$OLTCCW1 EQU   TOLTEPWA+2832
$ENDBFR1 EQU   TOLTEPWA+2828
$1STBFR1 EQU   TOLTEPWA+2824
$TECB1   EQU   TOLTEPWA+2820
$WAITIME EQU   TOLTEPWA+2816
$TRTN#   EQU   TOLTEPWA+2815
$WIODEV  EQU   TOLTEPWA+2814
$RQSTSZE EQU   TOLTEPWA+2812
$RQSTPTR EQU   TOLTEPWA+2808
$R4SAVE  EQU   TOLTEPWA+2804
$PARTADR EQU   TOLTEPWA+2800
$TBSDATA EQU   TOLTEPWA+2796
$CTWIDTH EQU   TOLTEPWA+2795
$CTLINE  EQU   TOLTEPWA+2794
$APWIDTH EQU   TOLTEPWA+2793
$APLINE  EQU   TOLTEPWA+2792
$INDEX   EQU   $IMITX
$UMXX    EQU   @NM00048+14
$NSXX    EQU   @NM00048+12
$ATACNT  EQU   $NSCNT
$CTR     EQU   @NM00048+8
$ATAPTR  EQU   $NSPTR
$DDRPTR  EQU   @NM00048
$DTORESP EQU   TOLTEPWA+2712
$APNAME  EQU   TOLTEPWA+2704
$24SYMNE EQU   $24CATMG+4
$24DEVAD EQU   $24CATMG
$24RTN#  EQU   $24FEMSG+8
$ESECTID EQU   $24FEMSG
$24FLGS  EQU   TOLTEPWA+2680
$24SAVE2 EQU   TOLTEPWA+2676
$24SAVE1 EQU   TOLTEPWA+2672
$24UNADR EQU   TOLTEPWA+2668
$24SAV13 EQU   TOLTEPWA+2664
$24RETCD EQU   TOLTEPWA+2663
$MACID   EQU   TOLTEPWA+2661
$CSPARE  EQU   $CFLGS
$C2WAY   EQU   $CFLGS
$CINCT   EQU   $CCOMDAT+12
$CINADR  EQU   $CCOMDAT+8
$COUTCT  EQU   $CCOMDAT+4
$COUTAD  EQU   $CCOMDAT
ROOTLOC  EQU   TOLTEPWA+2640
$RETREG  EQU   TOLTEPWA+2636
$WORK    EQU   TOLTEPWA+2376
$EXTA    EQU   TOLTEPWA+2320
$PASSONA EQU   TOLTEPWA+2264
$TRMINPT EQU   TOLTEPWA+2184
$INBUFR  EQU   TOLTEPWA+2104
$BUFFER  EQU   TOLTEPWA+1976
$TLTRPL3 EQU   TOLTEPWA+1856
$TLTRPL2 EQU   TOLTEPWA+1736
$TLTRPL1 EQU   TOLTEPWA+1616
@NM00047 EQU   $SLTBL+135
$HIGHRTN EQU   $SLTBL+134
$PRIMADR EQU   $SLTBL+130
$CTSTPT  EQU   $SLTBL+128
$TSTCNT  EQU   $SLTBL+126
$SECFLGS EQU   $SECLST+3
$SECTION EQU   $SECLST
$SECACT  EQU   $TESTFLG
$CANTRUN EQU   $TESTFLG
$FINAL   EQU   $TESTFLG
$TESTSUF EQU   $RUNTEST+5
$TESTNUM EQU   $RUNTEST+1
$LETPRF  EQU   $RUNTEST
$SYMBOLC EQU   $SLTBL+5
$FAMILY  EQU   $SLTBL
$CDEVPT  EQU   TOLTEPWA+1466
$DEVCNTS EQU   TOLTEPWA+1464
$FEEDBCK EQU   $DEVTBLE+66
$WTISUED EQU   $DEVFLG4
$EXIOISD EQU   $DEVFLG4
$REMWRIT EQU   $DEVFLG4
$REMDONE EQU   $DEVFLG4
$2NDUSED EQU   $DEVFLG4
$1STUSED EQU   $DEVFLG4
$IGLXIFB EQU   $DEVFLG4
$EXIOLV3 EQU   $DEVFLG4
@NM00046 EQU   $DEVFLG5
$DVBASIC EQU   $DEVFLG5
$ASCII   EQU   $DEVFLG5
$DEVLU   EQU   $DEVFLG5
$OPNDFAL EQU   $DEVFLG5
$ACQNCB  EQU   $DEVFLG5
$REMOTE  EQU   $DEVFLG5
$ENDNODE EQU   $DEVFLG5
$LINENME EQU   $RNINFO
$CID     EQU   $DEVTBLE+52
$DVCOL   EQU   $LDNCBPT+2
$DVROW   EQU   $LDNCBPT
$NCSPLP  EQU   $DEVTBLE+44
$DVLN    EQU   $SSCPDAF
$DAF     EQU   $DEVSESP+4
$VARYPAB EQU   $DEVSESP
$SYSMN   EQU   $DEVTBLE+28
@NM00045 EQU   $DEVFLG3
$CLRSNT  EQU   $DEVFLG3
$OLTERR  EQU   $DEVFLG3
$SRTEST  EQU   $DEVFLG3
$DVSNDOK EQU   $SIOFLG
$POLLREQ EQU   $DEVFLG3
$ACQRED  EQU   $DEVFLG3
$NOTDEV  EQU   $DEVFLG3
$DVINCT  EQU   $DEVTBLE+26
$DVBRKST EQU   $OPND+1
$DVBRKSN EQU   $OPND
$DVSEQNO EQU   $OPIS
$CEINTRP EQU   $DEVFLG2
$TESTMDE EQU   $DEVFLG2
$DEVALOC EQU   $DEVFLG2
$ALLDATA EQU   $DEVFLG2
$ENDCNTL EQU   $DEVFLG2
$CTLDEV  EQU   $DEVFLG2
$NOCDS   EQU   $DEVFLG2
$DATAIN  EQU   $DEVFLG2
$PRIMARY EQU   $DEVFLG1
$DVCTBYT EQU   $INTOCC
$DEVACT  EQU   $DEVFLG1
$DVLGMDE EQU   $ATTNEXP
$DVSPRM  EQU   $EVNCPLT
$GRABBED EQU   $DEVFLG1
$CATASTR EQU   $DEVFLG1
$LETGO   EQU   $DEVFLG1
$CURELEM EQU   $$SYMNME+4
$MSGOTSD EQU   $$SYMNME
$EXTDEV  EQU   $DEVCDS+11
@NM00044 EQU   $DEVSDCF
$NOTPRIM EQU   $DEVSDCF
@NM00043 EQU   $DEVCDSF
@NM00042 EQU   $DEVCDSF
@NM00041 EQU   $DEVCDSF
$CDSNAME EQU   $DEVCDSF
$EXTRN   EQU   $DEVCDSF
$CEVOLUM EQU   $DEVCDSF
$SHARD   EQU   $DEVCDSF
$DEVFPM  EQU   $DEVCDSF
$DEVCNT  EQU   $DEVCDS+8
$DEVTYPE EQU   $DEVFEAT+3
$DEVCLAS EQU   $DEVFEAT+2
$DEVFRRS EQU   $DEVFEAT+1
$DEVMOD  EQU   $DEVFEAT
$DEVRDGT EQU   @NM00039+1
$DEVCTLU EQU   @NM00039+1
$DEVCHAN EQU   @NM00039
@NM00040 EQU   @NM00039
$CTINDX  EQU   $DEVUNAD
$FLAG16  EQU   $COMMFLG+15
$FLAG15  EQU   $COMMFLG+14
$FLAG14  EQU   $COMMFLG+13
$TEP2ND  EQU   $FLAG13
$TEP1ST  EQU   $FLAG13
$CATMSG  EQU   $FLAG13
$PRMPTSW EQU   $FLAG13
$DEVENT  EQU   $FLAG13
$OLTMACC EQU   $FLAG13
$LGON    EQU   $FLAG13
$CTLOGON EQU   $FLAG13
@NM00038 EQU   $FLAG12
$VARYINP EQU   $FLAG12
$ENDTEST EQU   $FLAG12
$VRYHRD  EQU   $FLAG12
$VRYSFT  EQU   $FLAG12
$POSTFLG EQU   $FLAG12
$OPTMSG  EQU   $FLAG12
$FEORCAT EQU   $FLAG11
@NM00037 EQU   $FLAG11
@NM00036 EQU   $FLAG10
$INBND   EQU   $FLAG10
$WAITFLG EQU   $FLAG10
$DPRINT  EQU   $FLAG10
$HOLD    EQU   $FLAG9
$NOTRRCH EQU   $FLAG9
@NM00035 EQU   $FLAG9
$COPY    EQU   $FLAG9
$LSTLNSW EQU   $FLAG9
$MULLNSW EQU   $FLAG9
$REMSW   EQU   $FLAG9
$IGRES   EQU   $FLAG9
$TCECM   EQU   $FLAG8
$VS2     EQU   $FLAG8
$VS1     EQU   $FLAG8
$EDOS    EQU   $FLAG8
@NM00034 EQU   $FLAG8
$TWOWAY  EQU   $FLAG8
@NM00033 EQU   $FLAG8
$RCVMSG  EQU   $FLAG7
$RCVRFLG EQU   $FLAG7
$SNDRFLG EQU   $FLAG7
$LDOIS   EQU   $FLAG7
$DCONTCT EQU   $FLAG7
$EXIOWAT EQU   $FLAG7
$2NDDATA EQU   $FLAG7
$1STDATA EQU   $FLAG7
$CIREQ   EQU   $FLAG6
$ABTERM  EQU   $ABNDBIT
$DISCREQ EQU   $FLAG6
$DISCISS EQU   $FLAG6
$CHANGE  EQU   $FLAG6
$CTERROR EQU   $FLAG6
$RECAL11 EQU   $FLAG6
@NM00032 EQU   $FLAG5
$PROGCK  EQU   $CANCEL
$PRINTAP EQU   $FLAG5
@NM00031 EQU   $FLAG5
$MSG922  EQU   $FLAG5
$CT924   EQU   $FLAG5
$FSTCAT  EQU   $FLAG5
$FSTFE   EQU   $FLAG5
$ACTOPND EQU   $FLAG4
$ACQCUTT EQU   $FLAG4
$CLSSACT EQU   $FLAG4
$BACKINT EQU   $FLAG4
$DMSGSW  EQU   $FLAG4
$TSTDEVP EQU   $FLAG4
$APRQPER EQU   $FLAG4
$OPCOM   EQU   $FLAG4
$NEWAP   EQU   $FLAG3
$ALTPRTR EQU   $FLAG3
$OPTERR  EQU   $FLAG3
$PRTONLY EQU   $FLAG3
$REQSTOR EQU   $FLAG3
$LOGOFFE EQU   $FLAG3
$TSTERR  EQU   $FLAG3
$DEVERR  EQU   $FLAG3
$PARTIAL EQU   $FLAG2
$NRMTERM EQU   $FLAG2
$VALDTST EQU   $FLAG2
$VALDDEV EQU   $FLAG2
$DBLSLSH EQU   $FLAG2
$NDR     EQU   $FLAG2
@NM00030 EQU   $FLAG2
$FTTHR   EQU   $FLAG2
$OLTACT  EQU   $FLAG1
$NORELDV EQU   $FLAG1
@NM00029 EQU   $FLAG1
$OPTCHNG EQU   $FLAG1
$DEVCHNG EQU   $FLAG1
$TESTCNG EQU   $FLAG1
$CNSLFG  EQU   $FLAG1
$TEP3RD  EQU   $FLAG1
@NM00028 EQU   $CDA+120
$CUCNT   EQU   $CDA+118
@NM00027 EQU   $CDA+117
$PRTFORM EQU   $CDA+116
$OPISCNT EQU   $CDA+114
$OPNDCNT EQU   $CDA+112
$GETMSZE EQU   $CDA+110
$GRCNTS  EQU   $CDA+108
$CTLCNT  EQU   $CDA+106
$ACTLVL  EQU   $CDA+105
$PRNTLVL EQU   $CDA+104
$ERRCNTA EQU   $CDA+102
$TLCNT   EQU   $CDA+100
$TIMEALW EQU   $CDA+96
$PTRAREA EQU   $CDA+92
$GETMPTR EQU   $CDA+88
$R13PTRT EQU   $CDA+84
$R13PTR  EQU   $CDA+80
$TEPEND  EQU   $CDA+76
$PLINKDL EQU   $CDA+72
$TEPBEGN EQU   $CDA+68
$HIGHADR EQU   $HIMOREC
$LOMOREC EQU   $CDA+56
$ENDCOMM EQU   $CDA+48
$COMMON  EQU   $RCA
$SLASHAD EQU   $CDA+32
$PASSON  EQU   $CDA+28
$TOLBRTB EQU   $CDA+24
$SCTPTR8 EQU   $CDA+20
$SCTPTR  EQU   $CDA+16
$TBWDPTR EQU   $CDA+12
$TFWDPTR EQU   $CDA+8
@NM00026 EQU   $CDA
@NM00025 EQU   $SCTTBLE+98
$SCTLWTC EQU   $SCTTBLE+96
$SCTLWTA EQU   $SCTTBLE+92
#EXT     EQU   $SCTTBLE+88
#PASS    EQU   $SCTTBLE+84
#TABLE   EQU   $SCTTBLE+80
#MSGIDAC EQU   $SCTTBLE+78
@NM00024 EQU   $SCTTBLE+71
$RETMASK EQU   $SCTTBLE+70
$R249255 EQU   $ROUTMSK+29
$R241248 EQU   $ROUTMSK+28
$R233240 EQU   $ROUTMSK+27
$R225232 EQU   $ROUTMSK+26
$R217224 EQU   $ROUTMSK+25
$R209216 EQU   $ROUTMSK+24
$R201208 EQU   $ROUTMSK+23
$R193200 EQU   $ROUTMSK+22
$R185192 EQU   $ROUTMSK+21
$R177184 EQU   $ROUTMSK+20
$R169176 EQU   $ROUTMSK+19
$R161168 EQU   $ROUTMSK+18
$R153160 EQU   $ROUTMSK+17
$R145152 EQU   $ROUTMSK+16
$R137144 EQU   $ROUTMSK+15
$R129136 EQU   $ROUTMSK+14
$R121128 EQU   $ROUTMSK+13
$R113120 EQU   $ROUTMSK+12
$R105112 EQU   $ROUTMSK+11
$R097104 EQU   $ROUTMSK+10
$R089096 EQU   $ROUTMSK+9
$R081088 EQU   $ROUTMSK+8
$R073080 EQU   $ROUTMSK+7
$R065072 EQU   $ROUTMSK+6
$R057064 EQU   $ROUTMSK+5
$R049056 EQU   $ROUTMSK+4
$R041048 EQU   $ROUTMSK+3
$R033040 EQU   $ROUTMSK+2
$R025032 EQU   $ROUTMSK+1
$R017024 EQU   $ROUTMSK
$TOTFLG2 EQU   $SCTTBLE+39
@NM00023 EQU   $TOTFLG1
@NM00022 EQU   $TOTFLG1
@NM00021 EQU   $TOTFLG1
$CURELOD EQU   $TOTFLG1
$CTEQTT  EQU   $TOTFLG1
@NM00020 EQU   $TOTFLG1
@NM00019 EQU   $TOTFLG1
$LINESHR EQU   $TOTFLG1
@NM00018 EQU   $OLTFLG2
@NM00017 EQU   $OLTFLG2
@NM00016 EQU   $OLTFLG2
@NM00015 EQU   $OLTFLG2
@NM00014 EQU   $OLTFLG2
@NM00013 EQU   $OLTFLG2
@NM00012 EQU   $OLTFLG2
$TALK    EQU   $OLTFLG2
$DYCOM   EQU   $OLTFLGS
@NM00011 EQU   $OLTFLGS
$TRACE   EQU   $OLTFLGS
$RETCODE EQU   $OLTFLGS
$CONTCB  EQU   $OLTFLGS
$RETAIN  EQU   $OLTFLGS
$CLEANRT EQU   $OLTFLGS
$MANINTV EQU   $OLTFLGS
$OLTSIZE EQU   $SCTTBLE+34
$QSCTMOD EQU   $EXECFLG
$CTRLMOD EQU   $EXECFLG
$CLEANUP EQU   $EXECFLG
$LSTPDEV EQU   $EXECFLG
$ERRCNT  EQU   $EXECFLG
$RTNSLCT EQU   $EXECFLG
$MULTDEV EQU   $EXECFLG
@NM00010 EQU   $EXECFLG
$RMSKCNT EQU   $SCTTBLE+32
$SYNAME  EQU   $CDS8T19+4
$EXTSIG  EQU   $CDS8T19+3
$CDFLGS  EQU   $CDS8T19+1
$CDSCNT  EQU   $CDS8T19
$PDEVDSC EQU   $SCTTBLE+16
$PDEVADR EQU   $SCTTBLE+12
$COMMCN  EQU   $CDSFLGS
$CUSTSYM EQU   $CDSFLGS
$TWOCHSW EQU   $CDSFLGS
$SYMNAME EQU   $CDSFLGS
$EXTINTC EQU   $CDSFLGS
$CEVOL   EQU   $CDSFLGS
$SHARED  EQU   $CDSFLGS
$FPM     EQU   $CDSFLGS
$LASTSUB EQU   $PDEVFLG
@NM00009 EQU   $PDEVFLG
@NM00008 EQU   $PDEVFLG
@NM00007 EQU   $PDEVFLG
$LASTDEV EQU   $PDEVFLG
@NM00006 EQU   $PDEVFLG
$EXFILPT EQU   $PDEVFLG
$FPMOLD  EQU   $PDEVFLG
$TSSSYM  EQU   $SCTTBLE+8
$SCTLEVL EQU   $SCTTBLE+7
$DRIVER  EQU   $SCTTBLE+6
$RT0916  EQU   $SCTTBLE+5
$RT0108  EQU   $SCTTBLE+4
$LOOPTST EQU   $ERROPT
$LOOPERR EQU   $ERROPT
$NERRPRT EQU   $ERROPT
$NOCNTRL EQU   $ERROPT
$ALTPRNT EQU   $ERROPT
$CATERR  EQU   $ERROPT
$ASTERIK EQU   $ERROPT
$TESTERR EQU   $ERROPT
$FSTCOMM EQU   $TESTOPT
$INDEFLP EQU   $TESTOPT
$NOPRT   EQU   $TESTOPT
$PARAPRT EQU   $TESTOPT
@NM00005 EQU   $TESTOPT
$ERRLPCT EQU   $SCTTBLE
$TLTEND  EQU   $RCAAREA+945
$CNSLID  EQU   $RCAAREA+936
$EXITSAV EQU   $RCAAREA+864
$TRASCII EQU   $RCAAREA+608
@NM00004 EQU   $RCAAREA+605
$VTAMEND EQU   $RCAFLG
$TPPOSTD EQU   $RCAFLG
$NEWCT   EQU   $RCAFLG
$ABNDALL EQU   $RCAFLG
$CUTESTB EQU   $RCAFLG
$CONSOLE EQU   $RCAFLG
$TPLOGON EQU   $RCAFLG
$UPDATE  EQU   $RCAFLG
$DEVAREA EQU   $RCAAREA+600
$CTDVAR  EQU   $RCAAREA+596
$BUFFS   EQU   $RCAAREA+464
$TLTNIB  EQU   $CONSTNT+140
$TLTPRPL EQU   $CONSTNT+20
@NM00003 EQU   $CONSTNT+4
@NM00002 EQU   $CONSTNT+2
$USECNT  EQU   $CONSTNT
$CURRTWA EQU   $POINTER+140
$CTNAME  EQU   $POINTER+132
$CTARGX  EQU   $POINTER+128
$COMINT  EQU   $POINTER+120
$QUEHNDL EQU   $POINTER+116
@NM00001 EQU   $POINTER+36
$RTNPTR  EQU   $POINTER+32
$TLTECB2 EQU   $POINTER+28
$TLTECB1 EQU   $POINTER+24
$CLEANP  EQU   $POINTER+20
$ABEND   EQU   $POINTER+16
$LSTAREA EQU   $POINTER+12
$FSTAREA EQU   $POINTER+8
$CVTSAVE EQU   $POINTER+4
$TOLTEP  EQU   $POINTER
$TLTACB  EQU   $RCAAREA
.@UNREFD ANOP                          END UNREFERENCED COMPONENTS
@RT00055 EQU   S2CC0001
@RT00059 EQU   S2CC0090
@RT00075 EQU   S2CC0008
@RT00078 EQU   S2CC0003
@RT00080 EQU   S2CC0004
@RT00083 EQU   S2CC0005
@RT00086 EQU   S2CC0008
@RT00088 EQU   S2CC0006
@RT00090 EQU   S2CC0007
@RT00092 EQU   S2CC0007
@RT00100 EQU   S2CC0008
@RT00105 EQU   S2CC0010
@RT00111 EQU   S2CC0011
@RT00118 EQU   S2CC0090
@RT00122 EQU   S2CC0012
@RT00136 EQU   S2CC0021
@ENDDATA EQU   *
         END   ISTSC02C,(C'PLS2128',0702,80232)
