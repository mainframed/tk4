         TITLE 'IEDQGQ - QUEUE RESET EXECUTOR'
IEDQGQ   CSECT
*CHANGE ACTIVITY AS FOLLOWS:
*D338000-339000                                                 SA51078
*A338000-339200                                                 SA51078
*A028200-029200,125000,159000,183000                            SA51783
*D449000-456000                                                 SA51783
*A449000-453000,457300-457600                                   SA51783
*C587000                                                        SA51783
*A587020-587780,642200-642800                                   SA51783
*A014500-015500,024400-025600,074000-078000,090600-091200,108200-Y02027
*A109800,125500,173000,201000,224100-225900,226100-228000,228200-Y02027
*A2311008230300-232400,319500,331200-331600,362500,562020-562090,Y02027
*A562110-562190,562210-562290,562310-562390,562410-562490,562510-Y02027
*A562570,563100-563700,564860-564880,613500,614500,615500,616500,Y02027
*A634100-634700,303500,326600-327200,355500,392500,506500,586030-Y02027
*A586930,618500,634330-634360                                    Y02027
*C034000,072000-074000,108000,216000,224000-234000,256000-260000,Y02027
*C346000,354000,391000,562000-562500,562900,613000-616000        Y02027
*C303000,355000,392000                                           Y02027
*D036000-042000,046000-052000,074700-081700,234000,242000-244000,Y02027
*D262000-263000,302000,327000,390000,528300-558000,562000-562500,Y02027
*D563000-564000,592000,597000-599000,604000,607000,611000,624300-Y02027
*D633000                                                         Y02027
*A448000                                                       @SA74546
*C508200-508400                                                @SA74546
*A406000                                                       @YA09721
*C407000,413000,448200                                         @YA09721
*A335000,485000                                                @YA11164
*A250000,560000                                                @YA11498
*C562560                                                       @OZ07798
*C508200-508400                                                @OS76519
*A600000                                                       @OS76519
*A224800,624000                                                @OZ24656
*A562570,625000                                                @OZ26305
***********************************************************************
* MODULE NAME -- IEDQGQ                                               *
*                                                                     *
* DESCRIPTIVE NAME -- QUEUE RESET EXECUTOR                            *
*                                                                     *
* COPYRIGHT -- NONE                                                   *
*                                                                     *
* STATUS --                                                           *
*    CHANGE LEVEL 6                                              Y02027
*                                                                     *
* FUNCTION --                                                         *
*   THIS ROUTINE DOES VALITITY CHECKING ON USER INPUT THAT HAS        *
*   BEEN STORED IN THE AIB. IF THE REQUEST IS VALID THE WORKAREA      *
*   IN THE AIB IS SET UP AS AN LCB-SCB.                               *
*    RECALLS 'SERVICED' HEADER RECORDS FROM THE DISK MESSAGE QUEUE    *
*    LOOKING FOR THE USER SPECIFIED OUTPUT SEQUENCE NUMBER AND        *
*    SCHEDULES IEDQFA TO MARK 'UNSERVICED' THOSE MESSAGES FOUND WITH  *
*    SEQUENCE NUMBERS HIGHER THAN OR EQUAL TO THE REQUESTED ONE.      *
*                                                                     *
*   AFTER THE ECB IN THE APPLICATION PROGRAM HAS BEEN POSTED          *
*   COMPLETE, A CHECKPOINT IS SCHEDULED TO RECORD CHANGES. IF         *
*   THE QUEUE WAS RESET FOR A LINE, THE SEND SCHEDULER IS PUT         *
*   IN LCB TO PRIME IT.                                               *
* ENTRY POINT --                                                      *
*         IEDQGQ                                                      *
*         BUILDCPB - IS A SUBROUTINE BRANCHED TO OUT IEDQFA     SA51783
*         AFTER AN 'EE' REQUEST FOR A CPB BY IEDQGQ HAS BEEN    SA51783
*         SATISFIED.  THIS SUBROUTINE BUILDS THE CPB PASSED TO  SA51783
*         IT BY IEDQFA TO MARK A MESSAGE UNSERVICED AND RETURNS SA51783
*         CONTROL TO IEDQFA TO EXECUTE THE WRITE TO DISK        SA51783
*                                                               SA51783
*                                                                     *
* INPUT --                                                            *
*   FROM IEDQEB-QRESET FUNCTION CODE, REGISTER 1 POINTS TO            *
*   ELEMENT IN AIB.                                                   *
*                                                                     *
*    FROM IEDQFA - THE ADDRESS OF THE RECALLED BUFFER IN THE WORK     *
*    AREA'S LCB                                                       *
*                                                                     *
* OUTPUT --                                                           *
*    QCBFFEFO IS CHANGED TO DISK RECORD ADDRESS OF THE MESSAGE WITH   *
*    THE REQUESTED SEQUENCE NUMBER OR THE MESSAGE WITH THE NEXT       *
*    HIGHEST SEQUENCE NUMBER FOUND                                    *
*                                                                     *
*         PASSED TO IEDQEB ARE:                                       *
*         AIBMSGNO CONTAINS NUMBER OF MESSAGES SUCESSFULLY            *
*         PROCESSED ON RETURN CODE OF 4, 8, OR 1C.                    *
*         AIBRETCD CONTAINS RETURN CODE                               *
*                                                                     *
* EXTERNAL REFERENCES --                                              *
*         IEDQFA                                                      *
*         IGC102 - AQCTL SVC                                          *
*         IGG019R4 - SEND SCHEDULER                                   *
*         OS POST - CROSS MEMORY                                      *
*         IEDQA1                                                      *
*                                                                     *
*                                                                     *
* EXITS,NORMAL --                                                     *
*         DSPDISP                                                     *
*                                                                     *
*                                                                     *
*                                                                     *
* EXITS,ERROR --                                                      *
*         THE FOLLOWING RETURN CODES ARE PASSED TO IEDQEB             *
*         X'04' - SEQUENCE NUMBER NOT FOUND                           *
*         X'08' - REUSABLE DISK IN PROGRESS                           *
*         X'0C' - REQUESTED SEQUENCE # INVALID                        *
*         X'10' - PROC DCB NOT CLOSED                                 *
*         X'14' - INVALID TERMNAME                                    *
*                 INVALID TERM ENTRY                                  *
*                 TERMINAL HELD                                       *
*         X'18' - QUEUING ERROR                                       *
*         X'1C' - POSSIBLE LOGICAL READ ERROR                         *
*                                                                     *
* TABLES/WORKAREAS --                                                 *
*    AVT                                                              *
*    BUFFER PREFIX                                                    *
*    LCB                                                              *
*    QCB                                                              *
*    SCB                                                              *
*    TERMINAL TABLE                                                   *
*    CPB                                                        SA51783
*   AIB                                                               *
*                                                                     *
* ATTRIBUTES --                                                       *
*    REENTERANT,REFRESHABLE,RESIDENT,ENABLED,PROBLEM PROGRAM MODE     *
*                                                                     *
* CHARACTER CODE DEPENDENCY --                                        *
*    THE OPERATION OF THIS MODULE DEPENDS UPON AN INTERNAL REPRESENTA-*
*    TION OF AN EXTERNAL CHARACTER SET.  THE CODING HAS BEEN ARRANGED *
*    SO THAT REDEFINITION OF 'CHARACTER' CONSTANTS, BY REASSEMBLY,    *
*    WILL RESULT IN A CORRECT MODULE FOR THE NEW DEFINITIONS.         *
***********************************************************************
         SPACE 5
***********************************************************************
*              REGISTER EQUATES
***********************************************************************
RZERO    EQU   0
R1       EQU   1                        REG ONE
RONE     EQU   1
R2       EQU   2
RDAT     EQU   2                        DATA FIELDS POINTER     SA51783
RELEM    EQU   3                        SPECIAL ELEMENT POINTER
RLCB     EQU   4                        LCB BASE REGISTER
RWORK    EQU   5                        GENERAL WORK REGISTER
RBFR     EQU   6                        RETURNED BUFFER POINTER
RQCB     EQU   7                        QCB BASE
RTERM    EQU   8                        TERMINAL ENTRY BASE
RSCB     EQU   9                        SCB BASE
RAIB     EQU   10                                                Y02027
RDISP    EQU   11                       DISPATCHER BASE
RBASE    EQU   12                       MODULE BASE
RAVT     EQU   13                       AVT BASE
R14      EQU   14
RENTRY   EQU   15
RCPB     EQU   15                       CPB REG FOR BUILD SBRTN SA51783
***********************************************************************
         SPACE 2
         USING IEDQDISP,RDISP
         USING AVTSAVE2,RAVT
         USING IEDQQCB,RQCB
         USING IEDQTRM,RTERM
         USING IEDQPRF,RBFR
         USING IEDQLCB,RLCB
         USING IEDQSCB,RSCB
         USING IEDQAIB,RAIB             AIB ADDRESSABILITY       Y02027
         SPACE 2
IEDQGQ   IEDHJN
         DC    AL1(DSPMCPL4)            STCB
         DC    AL3(*-1)                  ENTRY
         SPACE 1
BEGIN    LR    RBASE,RENTRY             SET UP BASE REGISTER
         USING BEGIN,RBASE              ESTABLISH ADDRESSIBILITY
         LR    RLCB,RONE                GET ELEMENT POINTER      Y02027
         CLI   FOUR(RONE),PRIRTBFR      IS THIS A RESET REQUEST OR
*                                       AN ERB FROM IEDQFA
         BNE   ERBRET                   BRANCH IF ERB FROM IEDQFA
         LR    RAIB,RONE                GET RCB ADDR AND         Y02027
         SH    RAIB,AVTHA16             BACK UP TO AIB           Y02027
         XC    AIBMSGNO(4),AIBMSGNO     CLEAR MSG # AND RET CODE Y02027
*                                                                Y02027
*              CHECK FOR VALID TERM NAME                         Y02027
*                                                                Y02027
         LA    RZERO,EIGHT              LOAD MAXIMUM SIZE        Y02027
         LA    RONE,AIBDESTN            LOAD ADDRESS OF          Y02027
*                                       TERMNAME IN REG 1        Y02027
         LA    RENTRY,SEVEN(RONE)       ADDR OF LAST CHAR      @OZ24656
NAMELOOP EQU   *                                               @OZ24656
         CLI   ZERO(RENTRY),BLANK       END OF NAME            @OZ24656
         BNE   SEARCH                   BR IF YES              @OZ24656
         BCTR  RENTRY,ZERO              DEC NAME PTR           @OZ24656
         BCT   RZERO,NAMELOOP           LOOK AT NEXT CHAR      @OZ24656
         LA    RWORK,TERMERR            SET RC='14'            @OZ24656
         B     XMPOST                     AND RETURN           @OZ24656
SEARCH   EQU   *                                               @OZ24656
         L     RENTRY,AVTMSGS-ONE       GET VCON TABLE ADDR      Y02027
         L     RENTRY,EIGHT(RENTRY)     LOAD ADDR OF IEDQA1      Y02027
         BAL   R14,FOUR(RENTRY)         BRANCH TO SEARCH ROUTINE Y02027
*                                       AT SECOND ENTRY POINT    Y02027
         LA    RWORK,TERMERR            POSSIBLE ERROR CODE      Y02027
         LTR   RENTRY,RENTRY            VALID TERM NAME          Y02027
         BZ    XMPOST                   BRANCH IF NO RC= X'14'   Y02027
         STH   RENTRY,AIBINDEX          STORE TERMNAME TABLE     Y02027
*                                       OFFSET IN AIB            Y02027
         LR    RONE,RENTRY              TERMNAME TABLE OFFSET    Y02027
         L     RENTRY,AVTRNMPT          OFFSET CONVERSION LOGIC  Y02027
         BALR  R14,RENTRY               GET ADDR OF TERM ENTRY   Y02027
         LR    RTERM,RONE               TT BASE                  Y02027
         ST    RTERM,AIBTTPTR           STORE IN AIB             Y02027
*                                                                Y02027
*              TEST FOR VALID ENTRY                              Y02027
*                                                                Y02027
         L     RQCB,TRMDESTQ-ONE        GET QCB ADDRESS          Y02027
         TM    TRMSTATE,TRMLINE+TRMLIST IS THIS LIST OR LINE     Y02027
         BNZ   XMPOST                   BRANCH IF EITHER RC=X'14'Y02027
         TM    TRMSTATE,TRMPROC         IS THIS A PROCESS ENTRY  Y02027
         BO    CKSTATUS                 BRANCH IF YES            Y02027
         TM    TRMSTATE,TRMHELDN        TERMINAL HELD            Y02027
         BO    XMPOST                   BRANCH IF YES RC= X'14'  Y02027
         B     CKTYPE                   BRANCH TO AVOID TEST     Y02027
CKSTATUS EQU   *                                                 Y02027
         LA    RWORK,PROCERR            POSSIBLE ERROR           Y02027
         NC    TRMSTAT(3),TRMSTAT       DCB FOR ENTRY CLOSED     Y02027
         BNZ   XMPOST                   BRANCH IF NO RC = X'10'  Y02027
*                                       PROCESS ENTRY MUST BE    Y02027
*                                       CLOSED FOR QRESET        Y02027
CKTYPE   EQU   *                                                 Y02027
*                                                                Y02027
*              CHECK FOR CORRECT QUEUING                         Y02027
*                                                                Y02027
         LA    RWORK,QERR               SET POSSIBLE ERROR       Y02027
         TM    QCBFLAG,QCBPROC+QCBTERMQ CHECK Q BY TERMINAL OR   Y02027
*                                       PROCESS ENTRY            Y02027
         BZ    XMPOST                   BRANCH IF NEITHER RC='18'Y02027
         TM    QCBPRIPQ,AVTEFF          PRIORITY LEVEL USED      Y02027
         BNZ   XMPOST                   BRANCH IF YES RC = X'18' Y02027
         TM    QCBDSFLG,QCBDISK         TERMINAL HAVE DISK QUEUESY02027
         BZ    XMPOST                   BRANCH IF NO  RC = X'18' Y02027
         TM    QCBDSFLG,QCBDRQQ         CONC DATA READY QUEUE    Y02027
         BO    XMPOST                   BRANCH IF YES RC = X'18' Y02027
         SR    RONE,RONE                CLEAR FOR INSERT         Y02027
         ICM   RONE,ADDR,QCBQBACK       POINTER TO LAST MSG QUED Y02027
         BZ    XMPOST                   QUEUE EMTRY, BRANCH      Y02027
*                                                                Y02027
*              CHECK FOR SEQUENCE NUMBER ERRORS                  Y02027
*                                                                Y02027
         LA    RWORK,SEQERR             POSSIBLE ERROR           Y02027
         LH    RONE,AIBOSEQN            SEQ # TO RESET TO        Y02027
         LH    R2,TRMOUTSQ              GET NEXT SEQ. OUT NO.    Y02027
         L     RZERO,AIBMAXNO           GET THE VALVE OF MAX BY  Y02027
*                                       WHICH QUEUE CAN BE       Y02027
*                                       BACKED UP                Y02027
         SR    R2,RONE                  FIND DIFFERENCE BETWEEN  Y02027
*                                       LAST SEQ OUT NUMBER AND  Y02027
*                                       REQUESTED SEQ. NUMBER    Y02027
         BNP   XMPOST                   BRANCH IF REQUESTED SEQ. Y02027
*                                       NO. HIGHER THAN LAST     Y02027
*                                       OUTPUT NUMBER, RC='0C'   Y02027
         CR    R2,RZERO                 DIFFERENCE GREATER THAN  Y02027
*                                       MAX ALLOWED              Y02027
         BH    XMPOST                   BRANCH IF YES RC = X'0C' Y02027
*                                                                Y02027
*              REQUEST IS VALID SO SET UP WORKAREA AS LCB AND SCBY02027
*                                                                Y02027
         L     RELEM,AIBQPEWA           GET PEWA ADDRESS         Y02027
         OI    PEWAGSW+ONE-IEDQPEWA(RELEM),RESETACT TURN ON      Y02027
*                                       RESET ACTIVE FLAG        Y02027
         L     RELEM,AIBWAPTR           AIBS WORKAREA            Y02027
         XC    ZERO(D238,RELEM),ZERO(RELEM) CLEAR WORKAREA FOR   Y02027
*                                       LCB & SCB                Y02027
         LA    RLCB,ZERO(RELEM)         GET ADDR OF LCB          Y02027
         LA    RSCB,LCBCPA-IEDQLCB(0,RLCB)     GET SCB ADDRESS
         ST    RSCB,LCBSCBDA-1          SET CURRENT SCB ADDRESS
         ST    RSCB,LCBSCBA-1           SET CURRENT SCB ADDRESS
*                                       QCB ADDRESS
         LA    RQCB,0(0,RQCB)           CLEAR HIGH ORDER BYTE
         ST    RQCB,SCBDESTQ-1          SET SCB DEST QUEUE ADDRESS
         OI    TRMSTATE,TRMHELDN        SET TERMINAL ENTRY     @YA11498
*                                       HELD TO PREVENT HOLD   @YA11498
*                                       DURING QRESET          @YA11498
         OI    QCBSTAT,QCBTRMHO         MARK TERMINAL'S QCB 'HELD'
         MVC   SCBDEOB+1(3),QCBQBACK    GET QBACK CHAIN POINTER
         STH   R2,LCBTPCD+TWO           SAVE COUNTER             Y02027
         STH   R2,LCBTPCD+FOUR          SAVE COUNTER             Y02027
         EJECT
         SPACE 2
***********************************************************************
*                       CONTINUE SEARCH                               *
***********************************************************************
         SPACE 1
CONT     EQU   *
         LH    RWORK,LCBTPCD+2          GET NUMBER OF MESSAGES LEFT
*                                       TO BE MARKED UNSERVICED
         LTR   RWORK,RWORK              HAVE ALL BEEN MARKED UNSERVICED
         BZ    GOTEM                    BRANCH IF YES
         MVC   LCBTPCD+6(3),LCBINVPT    SAVE DISK POINTER
         LA    RWORK,NOTALL             SET POSSIBLE RETURN CODE
         NC    SCBDEOB+1(3),SCBDEOB+1   WAS RECALLED PRFHQBCK EMPTY
         BZ    GOTEM1                   BRANCH IF YES
         MVC   SCBSCHDR(3),SCBDEOB+1    SET DISK RECORD NUMBER FOR
*                                       NEXT BUFFER TO BE RECALLED
         XC    SCBXTRA(3),SCBXTRA       SET UP
         XC    SCBNTXT(3),SCBNTXT       FIELDS
         NI    SCBQTYPE,XOF             FOR IEDQFA
         MVI   SCBDEOB,AVTEZERO         CLEAR HI-ORDER BYTE
         SPACE 1
***********************************************************************
*              POST REQUEST FOR DISK I/O TO RECALL BUFFER             *
***********************************************************************
         SPACE 1
POSTERB  EQU   *
         LA    RWORK,REUSGO             SET RETURN CODE = REUS IS GOING
         TM    QCBDSFLG,QCBHELD         IS REUSABILITY ACTIVE ON
*                                       THIS QUEUE
         BNO   GOPOST                   BRANCH IF NO
         LA    R14,ABORT                SET RETURN CODE          Y02027
         B     POSTAIB                  POST AIB                 Y02027
GOPOST   EQU   *
         ST    RELEM,LCBERCCW           SAVE REGISTERS ACROSS POST
         STM   RQCB,RTERM,LCBERCCW+4    TO IEDQFA
         LA    RWORK,AVTDSIOB           GET ADDRESS OF DISK I/O QCB
         ST    RWORK,LCBERBQB-1         STORE IT IN ERB QCB FIELD
         XC    LCBERBLK,LCBERBLK        SET LINK FIELD TO ZERO
         MVI   LCBERBST,AVTEZERO        CLEAR ERBST
         XC    LCBERBCH(3),LCBERBCH     CLEAR POINTER TO LAST BUFFER
         MVI   LCBERBPY,PRIAPBFR        SET PRIORITY
         MVI   LCBERBCT,ONE             SET BUFFER REQUEST COUNT
         OI    LCBSTAT1,LCBRCLLN+LCBSENDN   SET RECALL FLAGS
         XC    LCBTTCIN(2),LCBTTCIN     CLEAR INDEX TO TERM CURR CONN
         LR    RWORK,RBASE              GET ENTRY ADDRESS
         SH    RWORK,MODBKUP
         ST    RWORK,LCBRCQCB           AND SAVE IT
         LA    RONE,LCBERB              ERB ADDRESS FOR POST
         BAL   R14,DSPPOST              POST ERB TO DISK IO QCB@G36XRRU
         EJECT
         SPACE 2
***********************************************************************
* RESTORE BASE REGISTERS FROM POST TO IEDQFA AND CHECK FOR A RETURNED *
* BUFFER                                                              *
***********************************************************************
         SPACE 1
ERBRET   EQU   *
         CLI   FOUR(RONE),PRIQGQRN      PURGE ELEMENT            Y02027
         BE    AIBRETRN                 YES, BRANCH              Y02027
         LA    RLCB,0(0,RLCB)           CLEAR HIGH ORDER BYTE
         SH    RLCB,LCBBKUP             GET LCB BASE
         L     RSCB,LCBSCBDA-1          SET SCB BASE
         L     RELEM,LCBERCCW           RESTORE REGISTER
         LA    RQCB,AIBWAQR-AIBSTATE    GET OFFSET FROM WORKAREA Y02027
         LR    RAIB,RELEM               TO START OF AIB          Y02027
         SR    RAIB,RQCB                SUBTRACT FOR AIB BASE    Y02027
         LM    RQCB,RTERM,LCBERCCW+4    RESTORE REGISTERS
         NC    LCBERBCH(3),LCBERBCH     HAS BUFFER BEEN RETURNED
         BZ    ABORTQR                  BRANCH IF NO
         L     RBFR,LCBERBCH-1          GET ADDRESS OF RECALLED BUFFER
         TM    PRFCRCD+2,CPBQTYPE       MSG READ FROM DISK     @YA11164
         BNZ   NOTMNMR                  BRANCH IF YES          @YA11164
         L     RBFR,PRFCORE-1           GET COPY OF BUFFER     @YA11164
*                                       FROM CORE QUEUE        @YA11164
NOTMNMR  EQU   *                                               @YA11164
         TM    PRFSTAT1,PRFNHDRN        IS THIS A HEADER BUFFER
         BO    NTHDR                    BRANCH IF NO
         LH    RONE,PRFDEST             LOAD DEST OFFSET        SA51078
         N     RONE,AVTCLRHI            CLEAR HI-ORDER HALF     SA51078
         L     RENTRY,AVTRNMPT          TERM NAME ROUTINE       SA51078
         BALR  R14,RENTRY               LINK TO IT              SA51078
         CLC   TRMDESTQ-IEDQTRM(,RONE),SCBDESTQ                 SA51078
*                                       SAME DEST QCB           SA51078
         BNE   WRNGDEST                 BRANCH IF NO            SA51078
         SPACE 2
***********************************************************************
*    SAVE POINTERS FOR NEXT RECALL AND BEGIN CHECKING FOR ERRORS      *
***********************************************************************
         SPACE 1
         MVC   SCBDEOB+1(3),PRFHQBCK    SET UP TO RECALL NEXT UNIT
         CLC   SCBOSEQ,AIBOSEQN         IS THIS THE SEQUENCE #   Y02027
*                                       WE'RE LOOKING FOR
         BE    CHKSVCD                  BRANCH IF YES
         BL    RETBUF                   BRANCH IF RECALLED NUM IS LOWER
         BH    CHKREUS                  BRANCH IF HIGHER
         SPACE 1
CHKSVCD  EQU   *
         TM    ZERO(RBFR),SRVCD         HAS THIS MESSAGE BEEN SERVICED
         LA    RWORK,SEQERR             SET UP RETURN CODE       Y02027
         LA    R14,ABORT                SET RETURN CODE          Y02027
         BZ    POSTAIB                  POST AIB                 Y02027
         SPACE 1
CHKREUS  EQU   *
         SPACE 2
         TM    QCBDSFLG,QCBREUS         IS THIS QUEUE ON REUSABLE DISK
         BNO   CHKFEFO                  BRANCH IF NO
         EJECT
         SPACE 1
***********************************************************************
* IF RECALLED HEADER ( POINTED TO BY PRFCRCD) RESIDES IN A DISK ZONE  *
* THAT HAS BEEN REORGANIZED BY REUSABILITY, QRESET TERMINATES.        *
***********************************************************************
         SPACE 1
         L     RWORK,AVTTOTNR           GET TOTAL NUM OF DISK RECORDS
         SRL   RWORK,DIV2               GET NUMBER OF RECORDS ON 1/2
         LR    RONE,RWORK               THE DISK AND THEN FIND THE NUM
         SRL   RONE,DIV4                OF RECORDS ON 1/8 DISK
         AR    RWORK,RONE               TOTAL RECORDS ON 5/8 DISK
         MVC   LCBERCCW+X11(3),PRFCRCD  SET UP PTR TO CURRENT HDR UNIT
         L     RONE,LCBERCCW+X10        FOR REGISTER LOAD
         L     R2,AVTLODPT              GET RADDR THAT WILL TRIGGER
*                                       REUSABILITY
         LA    RONE,3(RONE)             ROUND DISK RECORD ADDRESSES
         LA    R2,3(R2)                 TO A MULTIPLE OF FOUR
         SRL   RONE,DIV4                GET NUMBER OF DISK RECORDS
*                                       REPRESENTED BY AVTLODPT
         SRL   R2,DIV4                  AND BY PRFCRCD
         SR    R2,RONE                  GET THE NUMBER OF RECORDS
*                                       BETWEEN AVTLODPT AND CURRENT
*                                       UNIT
         CR    R2,RWORK                 IS CURRENT HDR 2 1/2 ZONES
*                                       BEHIND AVTLODPT
         BNH   CHKTEXT                  BRANCH IF NO
ABORTQR  EQU   *
         LA    RWORK,LRERR              SET RETURN CODE          Y02027
         LA    R14,ABORT                SET RETURN CODE          Y02027
         B     POSTAIB                  PREPARE TO EXIT WITHOUT  Y02027
*                                       RESETTING QCBFFEFO
         SPACE 1
***********************************************************************
* CHECK TEXT AND/OR XTRA UNIT TO SEE IF IT LIES WITHIN AN ENDANGERED  *
* ZONE.  IF IT DOES, RETURN HEADER WITHOUT MARKING IT UNSERVICED AND  *
* CONTINUE SEARCH.                                                    *
*        RONE CONTAINS # OF RECORDS REPRESENTED BY PRFCRCD            *
*        RWORK CONTAINS # OF RECORDS WITHIN 5/8 OF TOTAL DISK         *
***********************************************************************
         SPACE 1
CHKTEXT  EQU   *
         CLC   PRFNTXT,PRFCRCD          IS THERE A TEXT BUFFER
         BNL   CHKXTRA                  BRANCH IF NO TEXT UNIT OR IF
*                                       TEXT FOLLOWS HEADER
         TM    PRFSTAT1,PRFNLSTN        EOM BUFFER             @YA09721
         BNO   CHKXTRA                  BRANCH IF YES          @YA09721
         MVC   LCBERCCW+X11(3),PRFNTXT  SET UP DISK ADDRESS FOR@YA09721
         L     R2,LCBERCCW+X10          REGISTER LOAD
         BAL   R14,COMPR                GO CHECK DISTANCE BETWEEN HDR
*                                       AND TEXT
         SPACE 1
CHKXTRA  EQU   *
         MVC   LCBERCCW+X11(3),PRFXTRA  SET UP DISK ADDRESS FOR@YA09721
         L     R2,LCBERCCW+X10          REGISTER LOAD
         LTR   R2,R2                    ARE THERE ANY XTRA UNITS
         BZ    CHKFEFO                  BRANCH IF NO
         CLC   PRFXTRA,PRFCRCD          COMPARE XTRA AND HDR
         BH    CHKFEFO                  BRANCH IF XTRA IS AHEAD OF HDR
         LA    R14,CHKFEFO              SET SUBROUTINE EXIT ADDRESS
         SPACE 1
COMPR    EQU   *
         LA    R2,3(R2)                 ROUND TO MULTIPLE OF FOUR
         SRL   R2,DIV4                  CONVERT ADDRESS TO NUMBER
*                                       OF RECORDS IT REPRESENTS
         SR    RONE,R2                  GET DIFFERENCE BETWEEN HEADER
*                                       AND TEXT OR XTRA UNIT
         CR    RONE,RWORK               IS UNIT 2 1/2 ZONES BEHIND HDR
         BH    SKIPONE                  GO UPDATE COUNTER AND RETURN
*                                       UNIT.  THE UNIT IS TOO FAR
*                                       BEHIND HEADER. DO NOT RISK A
*                                       LOGICAL READ ERR
         BR    R14                      RETURN FROM SUBROUTINE
         SPACE 1
***********************************************************************
* IF RECALLED DATFEFO IS ZERO AND THIS IS NOT THE LAST MESSAGE        *
* QUEUED, SKIP UNSERVICING, RETURN UNIT AND CONTINUE SEARCH           *
***********************************************************************
         SPACE 1
CHKFEFO  EQU   *
         L     RWORK,ZERO(RBFR)         GET DATFEFO POINTER
         LA    RWORK,ZERO(RWORK)
         LTR   RWORK,RWORK              IS DATFEFO ZERO
         BNZ   UNSRV                    BRANCH IF NO
         CLC   PRFCRCD,QCBLFEFO         IS THIS THE LAST MSG QUEUED
*                                       FOR THIS TERMINAL
         BNE   SKIPONE                  GO UPDATE COUNTER, RETURN UNIT
*                                       CONTINUE SEARCH
UNSRV    EQU   *
         TM    ZERO(RBFR),SRVCD         MESSAGE MARKED SERVICED@SA74546
         BNO   SKIPONE                  BRANCH IF NO           @YA09721
         MVC   LCBINVPT,PRFCRCD         SAVE DISK POINTER TO THIS UNIT
         LH    R2,LCBTPCD+2             GET COUNT OF MESSAGES LEFT TO
*                                       BE HANDLED
         BCTR  R2,ZERO                  DECREMENT BY ONE
         STH   R2,LCBTPCD+2             SAVE BACK
         MVC   PRFSVFLG,AVTEZERO(RBFR)  SAVE DATA FLAGS         SA51783
         MVC   PRFSVFFO,ONE(RBFR)       SAVE FEFO PTR           SA51783
         MVC   PRFSVSEQ,SCBOSEQ         SAVE SEQ OUT NUMBER     SA51783
         MVI   PRFPRI,PRIFEFO           PUT PRIORITY INTO BUFFER
         LA    R14,BUILDCPB             ADDR OF CPB BUILD SBRTN SA51783
         ST    R14,PRFTIC               PASS IT TO IEDQFA       SA51783
         MVI   PRFTIC,TIC               MARK IT AS BUFFER
         LA    RENTRY,AVTDSIOB          GET ADDRESS OF DISK I/O QCB
         B     WRTBUF                   GO POST RECALLED BUFFER TO
*                                       IEDQFA TO MARK MESSAGE
*                                       UNSERVICED
         SPACE 1
***********************************************************************
* KEEP A COUNT OF THOSE MESSAGES THAT HAVE BEEN FOUND BUT SHOULD NOT  *
* BE MARKED UNSERVICED.  E.G., TEXT OR XTRA UNITS IN ENDANGERED ZONE  *
* ON REUSABLE DISK OR MESSAGE WAS ORIGINALLY SENT IN INITIATE OR      *
* LOCK MODE.                                                          *
***********************************************************************
         SPACE 1
SKIPONE  EQU   *
         LH    RWORK,LCBTPCD+XA         GET COUNT OF MESSAGES SKIPPED
         LA    RWORK,ONE(RWORK)         BUMP BY ONE
         STH   RWORK,LCBTPCD+XA         SAVE BACK
         B     RETBUF                   GO RETURN BUFFER
         SPACE 2
***********************************************************************
*                  RETURN RECALLED UNIT                               *
***********************************************************************
         SPACE 1
NTHDR    EQU   *
WRNGDEST EQU   *
         MVC   SCBDEOB+1(3),PRFNTXT     PICK UP PROPER Q-BACK PTR
RETBUF   EQU   *
         L     RBFR,LCBERBCH-1          GET ADDRESS OF         @YA11164
*                                       RECALLED BUFFER        @YA11164
         MVI   PRFPRI,PRIBFRTB          SET EMPTY BUFFER PRIORITY
         LA    RENTRY,AVTBFRTB          GET BUFFER RETURN QCB ADDRESS
         SPACE 5
WRTBUF   EQU   *
         ST    RENTRY,PRFQCBA-1         STORE IN BUFFER QCB
         XC    PRFLINK(3),PRFLINK       ZERO THE LINK FIELD
         LR    RONE,RBFR                SET PARM REG FOR DISPATCHER
         BAL   R14,DSPPOSTR             PUT BUFFER ON THE READY QUEUE
         L     RELEM,LCBERCCW           RESTORE REG FROM DISPATCHER
         LM    RQCB,RTERM,LCBERCCW+4    RESTORE REGISTERS
         B     CONT                     GO REQUEST READ OF HEADER
         SPACE 2
***********************************************************************
*          SET RETURN CODE AND, IF NECESSARY, UPDATE QCBFFEFO         *
***********************************************************************
         SPACE 1
         SPACE 1
GOTEM    EQU   *
         SR    RWORK,RWORK              ZERO REGISTER
         SPACE 1
GOTEM1   EQU   *
         BAL   R14,POSTAIB              POST AIB                 Y02027
         MVC   QCBFFEFO,LCBINVPT        UPDATE THE FEFO POINTER FOR THE
*                                       SEND SCHEDULER
         MVC   QCBPFEFO(THREE),LCBINVPT  AND SET UP OTHER QCB  @OS76519
         MVC   QCBPREVF(THREE),LCBINVPT  MESSAGE POINTERS      @OS76519
         SPACE 1
ABORT    EQU   *
         LH    R2,LCBTPCD+4             ORIGINAL NUM OF MESSAGES TO
*                                       BE MARKED UNSERVICED
         SH    R2,LCBTPCD+2             SUBTRACT NUMBER NOT FOUND
         LR    RONE,R2                  SAVE NUM OF MESSAGES RESET
         AH    RONE,QCBMSGCT            ADD NUM OF MESSAGES ON QUEUE
         STH   RONE,QCBMSGCT            UPDATE MESSAGE COUNT
         LH    RONE,LCBTPCD+XA          CHECK FOR SKIPPED MESSAGES
         LTR   RONE,RONE                ARE THERE ANY
         BZ    SAVCNT                   BRANCH IF NO
         SR    R2,RONE                  SUBTRACT SKIPPED MESSAGES FROM
*                                       TOTAL HANDLED
         LTR   RWORK,RWORK              IS THERE AN ERROR CODE
         BNZ   SAVCNT                   BRANCH IF YES
         LA    RWORK,FOUR               SET RETURN CODE INDICATING THAT
*                                       SOME OF THE REQUESTED MESSAGES
*                                       HAVE NOT BEEN MARKED UNSERVICED
         SPACE 1
SAVCNT   EQU   *
         STH   R2,LCBTPCD+2             SAVE # MESSAGES HANDLED -
*                                       INCLUDES THOSE 'UNSERVICED AND
*                                       THOSE SKIPPED DUE TO CERTAIN
*                                       ERROR CONDITIONS
         SPACE 1
         SPACE 1
         NI    TRMSTATE,TRMHELDF        RELEASE TERMINAL ENTRY @YA11498
         NI    QCBSTAT,AVTEFF-QCBTRMHO  RELEASE TERMINAL'S QCB
         L     RELEM,AIBQPEWA           GET PEWA ADDRESS         Y02027
         NI    PEWAGSW+ONE-IEDQPEWA(RELEM),AVTEFF-RESETACT  TURN Y02027
*                                       OFF ACIVE FLAG           Y02027
         LTR   RWORK,RWORK              RETURN CODE 0            Y02027
         BE    SETRET                   LEAVE AIBMSGNO=0         Y02027
         LA    RZERO,SEQERR             SEQUENCE ERROR           Y02027
         CR    RWORK,RZERO              RETURN CODE SET RC=0C    Y02027
         BE    SETRET                   LEAVE AIBMSGNO=0         Y02027
*                                                                Y02027
*              FOR RETURN CODE OF 4, 8, 1C SET NUMBER OF         Y02027
*              HANDLED MESSAGES                                  Y02027
*                                                                Y02027
         STH   R2,AIBMSGNO              STORE NO OF MESSAGES     Y02027
*                                       HANDLED - FOR REG 2      Y02027
         LA    RZERO,NOTALL             CHECK FOR                Y02027
         CR    RWORK,RZERO              RETURN CODE = 4          Y02027
         BE    SETRET                   BRANCH IF YES            Y02027
         EJECT
*                                                                Y02027
*              CROSS MEMORY POST TO RETURN TO QRESET FUNCTION    Y02027
*                                                                Y02027
XMPOST   EQU   *                                                 Y02027
         LA    RSCB,LEAVE               SET RETURN TO AVOID CHECKY02027
*                                       POINT                    Y02027
XMPOST1  EQU   *                                                 Y02027
         SR    RZERO,RZERO              SET COMPLETION CODE      Y02027
         L     RELEM,AIBQPEWA           GET PEWA ADDRESS         Y02027
         TM    PEWAFLG-IEDQPEWA(RELEM),CFLG CLOSEDOWN IN PROGRESSY02027
         BO    CLOSE                    BRANCH IF YES - NO POST  Y02027
         STC   RWORK,AIBRETCD+ONE       PUT RETURN CODE IN AIB   Y02027
         MVC   AIBCMPTQ(4),AIBECBA      GET ECB ADDR             Y02027
         L     RWORK,AIBPCBAD           GET PCB ADDRESS          Y02027
         L     RWORK,PCBPEBAD-IEDQPCB(RWORK) GET PEB ADDRESS     Y02027
         LTR   RWORK,RWORK              TEST IF AP IS ACTIVE     Y02027
         BZR   RSCB                     BRANCH TO AVOID XMPOST   Y02027
         L     RWORK,PEBASCB-IEDQPEB(RWORK) GET ASCB ADDRESS     Y02027
         LTR   RWORK,RWORK              TEST IF FLAG HAS         Y02027
*                                       INVALIDATED ASCB ADDR    Y02027
         BMR   RSCB                     BRANCH IF NEGATIVE FLAG  Y02027
*                                       ON - AVOID XMPOST        Y02027
         ST    RWORK,AIBCMPTQ+FOUR      ASCB AND STORE IN LIST   Y02027
         L     RWORK,CVTPTR             ADDRESS OF CVT           Y02027
         LA    RWORK,CVTBRET-CVTMAP(RWORK) GET ERROR ADDRESS     Y02027
         ST    RWORK,AIBCMPTQ+EIGHT     AND STORE IN LIST        Y02027
         LA    R1,AIBCMPTQ              GET LIST ADDRESS         Y02027
         POST  ,(0),MF=(E,(1))                                   Y02027
         BR    RSCB                     BRANCH TO LEAVE          Y02027
*                                       OR CHECK POINT           Y02027
*                                                                Y02027
*              FOR RETURN CODE OF 0, 4, C SET RETURN FROM POST   Y02027
*              TO TAKE CHECKPOINT                                Y02027
*                                                                Y02027
SETRET   EQU   *                                                 Y02027
         LA    RSCB,CKPT                SET RETURN FROM POST     Y02027
         B     XMPOST1                  BRANCH TO POST           Y02027
CLOSE    EQU   *                                                 Y02027
         L     RONE,PEWARCB-IEDQPEWA(RELEM)    ADDR OF CLOSE   @OZ07798
*                                       RCB AS SET UP BY CLOSE   Y02027
         TS    FORTY7(RONE)             SET RCB POSTED FLAG    @OZ26305
         BCR   4,RSCB                   RCB ON RDY Q, CONT     @OZ26305
         LR    R2,RQCB                  SAVE REG
         BAL   R14,DSPPOSTR             POST CLOSE ELEMENT
         LR    RQCB,R2                  RESTORE REG
         BR    RSCB                     BRANCH TO LEAVE          Y02027
*                                       OR FALL THROUGH          Y02027
CKPT     EQU   *                                                 Y02027
*              TAKE CHECKPOINT TO RECORD CHANGES                 Y02027
*                                                                Y02027
         TM    AVTCKFLG,AVTCKTAC        CHECKPOINT IN SYSTEM   @G36XRRU
         BZ    NOCKPT                   BRANCH IF NO
         LA    R1,AVTCKELE              CKPT ELE
         L     RENTRY,AVTHG02           TIME Q DELINK ROUTINE
         BALR  R14,RENTRY               REMOVE CKPT ELE
         TM    AVTCKELF,AVTCRTLN        CKPT ELE ALREADY POSTED
         BO    NOCKPT                   BRANCH IF YES
         TM    AVTCKELF,AVTCPIPN        CKPT IN PROGRESS
         BO    REQCKPT                  BRANCH IF YES
         MVC   AVTCKELE+1(3),AVTCKQAD   CKPT QCB ADDR
         LA    R1,AVTCKELE              CKPT ELEMENT ADDR
         MVI   AVTCKELE+FOUR,PRICKPT    SET PRIORITY
         LR    R2,RQCB                  SAVE REG
         BAL   R14,DSPPOSTR             POST CKPT ELE
         LR    RQCB,R2                  RESTORE REG
REQCKPT  EQU   *
         OI    AVTCKELF,AVTCRTLN        SET CKPT REQUESTED
*                                                                Y02027
*              PUT SEND SCHEDULER IN THE LCB                     Y02027
*                                                                Y02027
NOCKPT   EQU   *
         TM    TRMSTATE,TRMPROC         IS RESET FOR A PROCESS ENTRY
         BO    LEAVE                    BRANCH IF PROCESS ENTRY
         LA    RWORK,QCBSTVTO           GET ADDRESS OF STCB
         L     R2,QCBSTCHN-1            GET ADDRESS OF FIRST STCB
*                                       IN CHAIN
         LA    R2,ZERO(,R2)             CLEAR HIGH ORDER BYTE
         CR    RWORK,R2                 IS SEND SCHEDULER STCB IN QCB
         BNE   LEAVE                    BRANCH IF NO
         SR    RENTRY,RENTRY            CLEAR REGISTER
         IC    RENTRY,QCBSTVTO          GET SCHEDULER'S SUBTASK VECTOR
         AR    RENTRY,RENTRY            TABLE ENTRY AND GO TO THE
         L     R2,AVTDISP-24(RENTRY)    SPECIAL ENTRY IN THE
         SH    R2,AVTHA2                SEND SCHEDULER TO
         LH    RENTRY,ZERO(,R2)         INSERT ITS
         AR    RENTRY,R2                STCB
         BALR  R14,RENTRY               IN TERMINAL'S LCB
         SPACE 1
***********************************************************************
*                        EXIT TO THE DISPATCHER                       *
***********************************************************************
LEAVE    EQU   *
         B     DSPDISP                  EXIT
         EJECT
POSTAIB  EQU   *                                                 Y02027
*****************************************************************Y02027
*                                                                Y02027
*        THIS SUBROUTINE POSTS THE AIB BACK TO IEDQGQ TO ENSURE  Y02027
*        THAT ALL USEAGE OF THE AIB IS COMPLETE BEFORE POSTING   Y02027
*        THE APPLICATION PROGRAM.                                Y02027
*                                                                Y02027
*****************************************************************Y02027
         SPACE 1                                                 Y02027
         ST    R14,LCBERCCW             SAVE RETURN REG          Y02027
         STM   RQCB,RTERM,LCBERCCW+FOUR SAVE REGISTERS           Y02027
         STC   RWORK,AIBRETCD+ONE       SAVE RETURN CODE         Y02027
         L     RWORK,CVTPTR             ADDRESS OF CVT           Y02027
         L     RWORK,CVTAQAVT-CVTMAP(,RWORK) ADDRESS OF TCX      Y02027
         L     RWORK,TCXQRQ-IEDQTCX(,RWORK) IEDQGQ ADDRESS       Y02027
         ST    RWORK,AIBKEY             PUT IN ELEMENT           Y02027
         MVI   AIBPRI,PRIQGQRN          SET PRIORITY             Y02027
         XC    AIBLINK,AIBLINK          CLEAR LINK FIELD         Y02027
         LA    RONE,AIBKEY              SET DISP PARM            Y02027
         B     DSPPOST                  POST ELEMENT             Y02027
         SPACE 1                                                 Y02027
AIBRETRN EQU   *                                                 Y02027
         LA    RAIB,ZERO(,RONE)         SET AIB                  Y02027
         SH    RAIB,AVTHA16             ADDRESSABILITY           Y02027
         L     RLCB,AIBWAPTR            GET LCB ADDRESS          Y02027
         L     R14,LCBERCCW             GET RETURN ADDRESS       Y02027
         LM    RQCB,RTERM,LCBERCCW+FOUR RESTORE ERGISTERS        Y02027
         SR    RWORK,RWORK              CLEAR REGISTER           Y02027
         IC    RWORK,AIBRETCD+ONE       GET SAVED RETURN CODE    Y02027
         BR    R14                      RETURN TO INLINE         Y02027
         EJECT
****************************************************************SA51783
*                                                              *SA51783
* THIS SUBROUTINE IS BRANCHED TO OUT OF IEDQFA AFTER A REQUEST *SA51783
* FOR A CPB BY IEDQGQ HAS BEEN FULFILLED.  IT BUILDS THE CPB   *SA51783
* AND DATA FIELDS NECESSARY TO MARK A MESSAGE UNSERVICED,      *SA51783
* RETURNS THE RECALLED BUFFER TO BUFFER RETURN, AND RETURNS    *SA51783
* TO IEDQFA ON A BRANCH TO DSPPOSTR SINCE R14 CONTAINS THE     *SA51783
* RETURN ADDRESS TO IEDQFA.                                    *SA51783
*                                                              *SA51783
****************************************************************SA51783
         SPACE 3
         DROP  RBASE                    SUBROUTINE HAS NO BASE  SA51783
         USING IEDQDATA,RDAT            DATA FIELD              SA51783
         USING IEDQCPB,RCPB             CPB                     SA51783
         SPACE 3
BUILDCPB EQU   *                                                SA51783
         L     RCPB,PRFTIC              ADDR OF CPB FROM IEDQFA SA51783
         L     RDAT,CPBXREAF            UNIT ADDR FOR WRT DATA  SA51783
         L     RQCB,PRFQCBA-1           QCB ADDR STORED BY FA   SA51783
         MVI   CPBRDWR,CPBWRC           WRITE DATA COMMAND      SA51783
         MVI   CPBXDWR,CPBNOPC          NOP COMMAND CODE        SA51783
         MVC   CPBADDR+1(3),PRFCRCD     SET ADDR OF BUFFER      SA51783
         MVC   DATFLAGS,PRFSVFLG        SET SAVED DATA FLAGS    SA51783
         NI    DATFLAGS,X'FF'-DATSENT   TURN OFF SERVICED FLAG  SA51783
         MVC   DATFEFO,PRFSVFFO         SET SAVED FEFO PTR      SA51783
         MVC   DATSEQOT,PRFSVSEQ        SET SAVED SEQ OUT NUM   SA51783
         MVI   PRFPRI,PRIBFRTB          SET RETURN BFR PRIORITY SA51783
         LA    R2,AVTBFRTB              BFR RETURN QCB ADDRESS  SA51783
         ST    R2,PRFQCBA-1             SET IT IN BUFFER        SA51783
         LR    R1,RBFR                  SET BFR AS ELEMENT      SA51783
         CLC   QCBLFEFO,PRFCRCD         LAST MSG QUEUED FOR TRM SA51783
         BNE   DSPPOSTR                 BR NO - POST BFR TO     SA51783
*                                       BFR RETURN AND RETURN   SA51783
*                                       ON R14 TO IEDQFA        SA51783
         MVC   QCBDATFL,DATFLAGS        UPDATE QCB FLAG FOR MSG SA51783
         B     DSPPOSTR                 POST BFR TO BFR RETURN  SA51783
*                                       QUEUE AND RETURN ON     SA51783
*                                       REGISTER 14 TO IEDQFA   SA51783
         EJECT
***********************************************************************
*                       EQUATES AND CONSTANTS                         *
***********************************************************************
         SPACE 1
         DS    0H
LCBBKUP  DC    AL2(LCBERB-IEDQLCB)      USED TO ADJUST LCB BASE
MODBKUP  DC    AL2(12)                  USED TO LOCATE IEDQGQ'S QCB
RETELLEN DC    H'0006'                  LENGTH OF ELEMENT FOR RETURN
FOUR     EQU   4
THREE    EQU   3                        LENGTH FOR MVC         @OS76519
NOTALL   EQU   X'04'                    RETURN CODE = PARTIAL RETRIEVAL
ONE      EQU   1
PRIRTBFR EQU   X'D4'                    RETRIEVE PRIORITY
EIGHT    EQU   8
REUSGO   EQU   8
TIC      EQU   X'08'                    FLAG = BUFFER FOR DISK I/O
XOF      EQU   X'0F'                    QUEUE TYPE MASK
ZERO     EQU   0
XA       EQU   10
TWO      EQU   2                        CONSTANT OF TWO          Y02027
ADDR     EQU   7                        ICM/STCM MASK            Y02027
D238     EQU   238                      LENGTH OF WORK AREA      Y02027
SEQERR   EQU   X'0C'                    SEQUENCE RETURN CODE     Y02027
PROCERR  EQU   X'10'                    PROCEDURAL ERROR         Y02027
TERMERR  EQU   X'14'                    INVALID TERM ENTRY       Y02027
QERR     EQU   X'18'                    QUEUING ERROR            Y02027
LRERR    EQU   X'1C'                    RET. CODE FOR ABORT FUNC-Y02027
*                                       TION TO AVOID POSSIBLE LOGICAL
*                                       READ ERROR
PRIQGQRN EQU   X'E3'                    PRIORITY                 Y02027
SRVCD    EQU   X'40'                    FLAG = MESSAGE SERVICED
DIV4     EQU   2
DIV2     EQU   1
X40      EQU   X'40'
X11      EQU   17
X10      EQU   16
SEVEN    EQU   7                        OFFSET                 @OZ24656
BLANK    EQU   X'40'                    CONSTANT               @OZ24656
FORTY7   EQU   47                       RCB POSTED FLAG OFFSET @OZ26305
         EJECT
*                        D S E C T S
*
         TAIBD EXT=(QRESET)
         EJECT
         TTCXD
         TPEWAD
         TPEBD
CVTMAP   CVT   DSECT=YES
         TPCBD
         TDISPD
         TPRIOR
         TSCBD
         TQCBD
         TPRFD
         TLCBD
         TTRMD
         TAVTD
         EJECT
         TCPBD 3330                                             SA51783
         EJECT
         TDATAD                                                 SA51783
         END
         EJECT
         TDISPD
         TPRIOR
         TSCBD
         TQCBD
         TPRFD
         TLCBD
         TTRMD
         TAVTD
         END
