         TITLE 'IEDQNR-NO CORE ROUTINE'
IEDQNR   CSECT
         SPACE 3
* CHANGE ACTIVITY AS FOLLOWS;
******************** MICROFICHE FLAGS *********************** SUPT CODE
*C810000                                                        SA54155
         SPACE 3
***********************************************************************
*                                                                     *
*TITLE:'IEDQNR'-NO AVAILABLE CORE ROUTINE                             *
*
*  MODULE NAME = IEDQNR                                               *
*                                                                     *
*  DESCRIPTIVE NAME = NO CORE ROUTINE                                 *
*                                                                     *
*        COPYRIGHT='NONE'                                             *
*                                                                     *
*STATUS:CHANGE LEVEL 0                                                *
*                                                                     *
*FUNCTION:THIS MODULE GETS CONTROL WHEN A CONDITIONAL GETMAIN FOR     *
*   A CHECKPOINT RECORD CANNOT BE SATISFIED. IT CHECKS FOR OTHER      *
*   GETMAIN RECORDS ON THE CHECKPOINT DISK I/O QUEUE;IF THERE ARE     *
*   SOME,IT RETURNS TO THE EXECUTOR TO WAIT FOR THE RECORDS TO BE     *
*   FREED;IF THERE ARE NO RECORDS,IT CONVERTS THE LENGTH OF THE       *
*   GETMAIN REQUEST,BUILDS AN ERROR MESSAGE,AND INDICATES NO DISK     *
*   RECORD BUILT FOR THE REQUEST ELEMENT.                             *
*                                                                     *
*ENTRY POINT:                                                         *
*                                                                     *
*        IEDQNR                                                       *
*                                                                     *
*INPUT:REGISTERS 2,3,9,12,14,15 CONTAIN THE FOLLOWING VALUES:         *
*                                                                     *
*   2-ADDRESS OF CHECKPOINT WORK AREA                                 *
*   3-ADDRESS OF REQUEST ELEMENT                                      *
*   9-ADDRESS OF AVT                                                  *
*   12-BASE REGISTER FOR CHECKPOINT EXECUTOR-IEDQNF                   *
*   14-RETURN POINT IN IEDQNF                                         *
*   15-ENTRY POINT FOR THIS MODULE                                    *
*                                                                     *
*OUTPUT:NONE                                                          *
*                                                                     *
*EXTERNAL ROUTINES:NONE                                               *
*                                                                     *
*EXITS-NORMAL:THIS MODULE RETURNS TO 8 PLUS THE ADDRESS IN R14.       *
*                                                                     *
*EXITS-ERROR:THIS MODULE ISSUES AN ERROR MESSAGE VIA WTO AND          *
*   BRANCHES TO THE ADDRESS IN R14 WITH THE OFFSET FOR THE NOTIFI-    *
*   CATION-DISPOSITION ROUTINE IN R15.                                *
*                                                                     *
*TABLES/WORK AREAS:                                                   *
*                                                                     *
*   AVT(AVTCLRHI,AVTRNMPT)                                            *
*   CHECKPOINT WORK AREA                                              *
*   TERMNAME TABLE                                                    *
*                                                                     *
*ATTRIBUTES:REENTERABLE                                               *
*                                                                     *
*NOTES:THE OPERATION OF THIS MODULE DEPENDS UPON AN INTERNAL REPRE-   *
*   SENTATION OF THE EXTERNAL CHARACTER SET WHICH IS EQUIVALENT TO    *
*   THE ONE USED AT ASSEMBLY TIME. THE CODING HAS BEEN ARRANGED SO    *
*   THAT REDEFINITION OF 'CHARACTER' CONSTANTS,BY REASSEMBLY, WILL    *
*   RESULT IN A CORRECT MODULE FOR THE NEW DEFINITIONS.               *
*                                                                     *
***********************************************************************
         SPACE 3
*REGISTER ASSIGNMENTS
         SPACE
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3                        ADDRESS OF REQUEST ELEMENT
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8                        ADDRESS OF TERMNAME TABLE
RAVT     EQU   9                        ADDRESS OF AVT
R10      EQU   10                       LENGTH OF TERM NAME
R11      EQU   11
R12      EQU   12                       BASE FOR CHECKPOINT UXECUTR
R13      EQU   13
R14      EQU   14                       RETURN ADDRESS-IN IEDQNF
R15      EQU   15                       ENTRY POINT-FOR THIS MODULE
         SPACE 3
         USING *,R15
         USING IEDQAVTD,RAVT            BASE FOR AVT
         USING IEDQCKPD,R2              BASE FOR CHECKPT WORK AREA
         USING IEDQCRED,R3              BASE FOR REQUEST ELEMENT
         SPACE
         B     QNR00
         DC    CL8'IEDQNR'
         DC    CL6'042171'
QNR00    EQU   *
         NC    CKPEXCP,CKPEXCP          CHECK FOR EXCP IN PROGRESS
         BNZ   8(R14)                   RETURN TO EXECUTOR IF EXCP     X
                                        IS IN PROGRESS-WAIT FOR I/O
         SPACE
         OI    CKPLREB,CKPNDRB          INDICATE NO DISK RECORD        X
                                        BUILT FOR REQUEST ELEMENT
         SPACE
*BUILD ERROR MESSAGE FOR WTO
         SPACE 3
         L     R1,CKPGETML              GET LENGTH FROM GETMAIN        X
                                        PARAMETER LIST
         CVD   R1,CKPCNVRT              CONVERT LENGTH TO DECIMAL
         UNPK   CKPMSGGL(4),CKPCNVRT(8) UNPACK
         OI    CKPMSGGL+3,X'F0'         SET UP LAST ZONE FIELD
         CLI   CREKEY,CRECKREQ          CHECK KEY OF REQUEST ELEMNT    X
                                        FOR TYPE OF RECORD
         BL    QNR20                    BRANCH IF INCIDENT
         BE    QNR30                    BRANCH IF CKREQ
         SPACE
         MVC   CKPMSGTP,QNRENVRN        MOVE 'ENVIRONMENT' TO MSG
         B     QNR40                    WTO
QNR20    EQU   *
         MVC   CKPMSGTP,QNRINCDT        MOVE 'INCIDENT' TO MSG
         B     QNR40                    WTO
         SPACE
*A CKREQ RECORD IS INVOLVED,GET NAME OF PRECESS ENTRY
         SPACE 3
QNR30    EQU   *
         MVC   CKPMSGTP,QNRCKREQ        MOVE 'CKREQ' TO MSG
         LH    R0,CREOFFS               GET TERMNAME OFFSET FROM       X
                                        REQUEST ELEMENT
         N     R0,AVTCLRHI              CLEAR HIGH ORDER BYTE
         BCTR  R0,0                     SUBTRACT ONE
         SR    R1,R1                    CLEAR
         L     R8,AVTRNMPT              ADDRESS OF TERMNAME TABLE
         USING IEDQTNTD,R8              BASE
         IC    R1,TNTENLEN              LENGTH OF TERM NAME
         LR    R10,R1                   SAVE
         LA    R1,3(0,R1)               GET LENGTH OF TERNAMEENTRY
         MR    R0,R1
         LA    R1,TNTFIRST(R1)          GET ADDR OF ENTRY
         BCTR  R10,0                    SUBTRACT ONE FOR EXECUTE
         EX    R10,QNRMOVE              MOVE PROCESS NAME TO MSG
QNR40    EQU   *
         MVC   CKPMSGTX,QNRTEXT         MOVE TEXT TO MESSAGE
         LA    R1,CKPMSG                ADDR OF MSG
         WTO   MF=(E,(1))
         LA    R15,CKPNOTIF             OFFSET FOR NOTIFICATION RTN
         BR    R14                      RETURN TO EXECUTOR
         SPACE 3
QNRTEXT  DC    CL37'IED010I CHECKPOINT-INSUFFICIENT CORE-'
QNRENVRN DC    CL20'ENVIRONMENT'
QNRINCDT DC    CL20'INCIDENT'
QNRCKREQ DC    CL20'CKREQ,'
QNRMOVE  MVC   CKPMSGPN(0),0(R1)
         SPACE 3
         PRINT NOGEN
         TAVTD
         TCKPD 3330                     MERLIN VERSION             0421
         TTNTD
         END
