DQGA    TITLE '''IEDQGA''   BUFFER MANAGEMENT'
IEDQGA   CSECT
*A000000-999999                                                @X31X8P0
         SPACE 3
*  CHANGE ACTIVITY AS FOLLOWS
******************** MICROFICHE FLAGS *********************** SUPT CODE
*A145080-145880,635880-639260,722030-722750,789000,809500        S99228
*C599400-599560                                                  S99228
*D599200,785600                                                  S99228
*C318000-319000,322000                                           S22029
*D654000-657000                                                  S22029
*C185000,319000,587000-589000                                    S21101
*D789000                                                         S21101
*A593000                                                         A42379
*C185000                                                         A42379
*A594000                                                         A47126
*C185000,599100                                                  A47126
*D567500-570000                                                  A47126
*D494000-495000                                                  S22026
*C149000,150000                                                  S22025
*A250000                                                         S22025
*D516000-518000,521000-527000                                    S22025
*A194800-195600,226300-226600,408500,787500                      S22026
*C194000-194400                                                  S22026
*A490200-490800,552100-552800,559500,562500,576300-576600        S22026
*A614500,617500                                                  S22025
*A785100-785800                                                  S22026
*C012000,318000                                                  S22025
*A096500                                                         S22025
*A675000                                                        SA61743
*A192000,248000,257000,308000,492000,566400,787000               S22024
*C007000,182000,199300,211000,229000-231000,363000-366000,378000 S22024
*C384000-385000,388000-390000,409000,425000,432000-433000,       S22024
*C490000,492000,500000                                           S22024
*A085100-085700,151180-151660,151720-151840,151900,572200-572600,X01004
*A574300-574600,575150,575700,576500,578100-578900,580500,581500,X01004
*A582100-582360,582460-582600,585100-585600,587020-587420,       X01004
*A587520-587820,588030-588360,591500,597020-597040,597080-597100,X01004
*A706070-706910                                                  X01004
*C302000,375000-376000,499000-500000,502000,576000,577000,578000,X01004
*C580000,581000,587500,588000,601000,605000,706000               X01004
*D501000,582000,588500,602000-603000,787000                      X01004
*A039300-039600,096700,145500-145700,151060-151120,151690,151870,Y01004
*A174090-174900,192100-192600,402100-402600,405500,442500,       Y01004
*A478300-478600,484600,485200,490700,529700,530400,531100,534600,Y01004
*A535200-535800,536400,566600-567000,575050-575120,575200-575650,Y01004
*A575750-575870,577300-577600,579500,580520-580600,582430,       Y01004
*A582620-582900,                                                 Y01004
*A584300-584600,593300,593600,594800,597060,597130-597420,       Y01004
*A668100-668900,672500,764500,777120-777880,778020-778980,       Y01004
*A779040-779940,780060-781980,782080,782220-782340,782460-782580,Y01004
*A782640-782760,782820-783060,783120-783360,783420-783600,803500,Y01004
*A804500,805500,806500,807500,808500                             Y01004
*C019000,085500,096500,192000,296000-297000,377000,402000,405000,Y01004
*C439000,442000,469000,478000,482000,484000,490600,529000,534000,Y01004
*C537000,539000-540000,566400,584000,587000,587640,587680,591000,Y01004
*C593000,594600,597000,598200,668000,780000,782400,802000        Y01004
*D182000,298000,395000,440000,456000-461000,485000,530000,531000,Y01004
*D535000,536000,576300-576600,579000,593500,745000,763000,768000,Y01004
*D778000,779000,782000,782200,782600,782800,783100,783400,       Y01004
*D783700-785800                                                  Y01004
*C636760-636840                                                  Y01948
*C575120,A575125-575135,C575540-575580,A588480-589920,           Y05331
*C777200,A777210-777230,C777720,A777730-777740,D780090           Y05331
*A780081-780097
*A184000,575080-575530,597240-597560,777120-777720,780340-781640,Y02027
*A794100-794200                                                  Y02027
*C085100-085300,591000-591500,594600-594800,780150,780250        Y02027
*D174060-174840,575080-575640,582240-582320,582720-582880,       Y02027
*D597240-597510,777120-777840,778440-778480,778680-778720,       Y02027
*D780340-780460                                                  Y02027
*
*C583000                                                        OX02203
*A144800,575240                                                 OY00507
*D575260                                                        OY00507
* A579300,599592                                                OX03966
* C599480                                                       OX03966
*C636360,636440                                                 OX05279
*A000800,192060                                                @Z30X8PM
*C007600                                                       @Z30X8PM
*C598740,A599040                                               @ZA00219
*D257650                                                       @Z30X8PM
*C588080-588160                                                @XA07478
*C595000,600300,780290                                         @YA08099
*A330000,363000                                                @YA07705
*A151000,579300                                                @YA08774
*D722030,722720                                                @YA08773
*D585300,585600-585900                                         @ZA04004
*A493000,C499000,C593000,A575660,D003187,D600220-600280        @YA10024
*C566400-566550,C574000-574600,A783610,A777960                 @YA10024
*C494000                                                       @YA10687
*C709000                                                       @XA11334
*A585400                                                       @OX11963
*D145940,599568-599576                                         @YA12276
*C595000,599506-599512,600300,780290                           @YA12276
*C702000,C709000                                               @OX12526
*A600600                                                       @OS77863
* A019000,113000,214000,305500,307000,364000,                  @G36XRPV
* A789000,808000                                               @G36XRPV
* C007600,214000,257000                                        @G36XRPV
* D365000                                                      @G36XRPV
*A256000,272000,274000,277000,282000,283600                    @OY19124
*
***********************************************************************
*                                                                     *
*TITLE -- 'IEDQGA' BUFFER MANAGEMENT                                  *
*                                                                     *
*  MODULE NAME = IEDQGA                                               *
*                                                                     *
*  DESCRIPTIVE NAME = BUFFER MANAGEMENT                               *
*                                                                     *
*  COPYRIGHT = 'NONE'                                                 *
*                                                                     *
*  STATUS:  CHANGE LEVEL 10                                    @G36XRPV
*                                                                     *
*FUNCTION -- THIS ROUTINE PERFORMS THREE FUNCTIONS -                  *
*   1. ASSIGN REQUESTED BUFFER(S) OR QUEUE A REQUEST TO BE SATISFIED  *
*      LATER.                                                         *
*   2. RETURN BUFFER UNITS TO THE BUFFER POOL                    S22025
*   3. BUILD CCWS FOR DATA TRANSFER IN EACH UNIT OF A BUFFER          *
*                                                                     *
*ENTRY POINTS -- THIS ROUTINE HAS THREE SEPARATE ENTRY POINTS         *
*   1. IEDQGA - BUFFER REQUEST - FROM THE DISPATCHER                  *
*   2. IEDQGB - BUFFER RETURN - FROM THE DISPATCHER                   *
*   3. IEDQGD - BUFFER ASSOCIATION - FROM THE OUTMSG MACRO EXPANSION  *
*      IN MH, OR FROM THE CTBFORM MODULE (IEDQGH).               Y01004
*   4. IEDQGA02 - BUFFER STEAL - CALLED USING AVTSTEAL         @G36XRPV
*                                                                     *
*   CALLING SEQUENCE                                                  *
*      FOR GA AND GB FROM THE DISPATCHER                              *
*             L    R15,QCBSTCHN         ADDR OF FIRST STCB            *
*             L    R1,BFRADDRESS                                      *
*             B    2(R15)                                             *
*      FOR GD IT IS                                                   *
*             LA   R15,IEDQGD                                         *
*                       L     R6,BFRADDR                              *
*             LA   R1,AVTPARM                                         *
*             BALR  R14,R15                                           *
*                                                                     *
*INPUT -- INPUT IS DIFFERENT FOR THE DIFFERENT SERVICES               *
*   1. GA, GB - R1 HAS THE BUFFER ADDRESS (GB) OF ERB                 *
*      ADDRESS (GA)                                                   *
*L              R15 HAS THE ENTRY POINT ADDRESS                       *
*               R7 HAS THE QCB ADDRESS                                *
*        2.  GD - R15 HAS ENTRY POINT ADDR                            *
*              R14 - RETURN ADDR                                      *
*             R13 - AVTSAVE2                                          *
*               R3 - CURRENT SCB ADDRESS (WHEN ENTERED FROM MH   Y01004
*                    OR FROM CTBFORM)                            Y01004
*                                                                     *
*OUTPUT -- THIS ROUTINE PERFORMS THREE DIFFERENT FUNCTIONS AND        *
*   OUTPUT IS DIFFERENT IN ALL THREE CASES.                           *
*   U9 BUFFER REQUEST(GA)                                             *
*      A. INITIAL REQUEST FROM A LINE - IS UNITS ARE AVAILABLE,       *
*         THEY WILL BE CHAINED TOGETHER TO FORM BUFFERS.  CCWS WILL   *
*         BE BUILT FOR EACH INIT, AND THE ERB POSTED TO THE           *
*         ACTIVATE QCB.  EXIT IS TO THE DISPATCHER.                   *
*         IF UNITS ARE NOT AVAILABLE, THE ERB IS PLACED BY PRIORITY   *
*         INTO THE ELEMENT CHAIN OF THE BUFFER RETURN QCB.            *
*      B. ERB FROM A PROCESS PROGRAM - IF AVAILABLE, UNITS ARE        *
*         CHAINED TO FORM BUFFERS AND THE ERB IS POSTED TO THE        *
*         PROCESS PROGRAM QCB.                                        *
*         IF UNITS ARE NOT AVAILABLE - SEE 1.A                        *
*      C. FIRST PCI REQUEST - IS AVAILABLE, UNITS ARE CHAINED INTO    *
*         BUFFERS.  CCWS ARE BUILT IN EACH UNIT.  EXEIT IS TO THE     *
*         DISPATCHER                                                  *
*         IS NO UNITS ARE AVAILABLE - SEE 1.A                         *
*      D. SUBSEQUENT PCI REQUEST - THE ERB IS CHAINED BY PRIORITY     *
*         INTO THE ELEMENT CHAIN OF THE BUFFER RETURN QCB.  EXIT      *
*         IS TO THE DISPATCHER.                                       *
*   2. BUFFER RETURN(GB)                                              *
*      A. IF THERE ARE NO ERBS WAITING FOR A BUFFER, THE UNITS        *
*         WHICH MAKE UP THE BUFFER ARE PLACED INTO THE CHAIN OF       *
*         AVAILABLE UNITS FROM THE BUFFER REQUEST QCB.  EXIT IS TO    *
*         THE DISPATCHER.                                             *
*      B. IF AN ERB IS WAITING, UNITS ARE CHAINED TOGETHER TO FORM    *
*         A BUFFER.  IF THE ERB HAS A LOW PRIORITY (NOT INITIAL,      *
*         FIRST PCI, OF DISK REQUESTE, CCWS WILL BE BUILT FOR EACH    *
*         UNIT OF THE BUFFER AND IT WILL BE INCLUDED IN THE CHANNEL   *
*         PROGRAM FOR THE LINE.  IS THE REQUEST WAS SATISFIED, THE    *
*         ERB IS DROPPED FROM THE BUFFER RETURN QCB ELEMENT CHAIN.    *
*         IF THE REQUEST WAS NOT SATISFIED, THE ERB IS RECHAINED BY   *
*         PRIORITY.                                                   *
*         IF THE ERB HAD A HIGHER PRIORITY ACTION IS TAKEN AS IN      *
*         1.A, B, OR C ABOVE.                                         *
*      3. BUFFER ASSOCIATION - ALL UNITS OF THE BUFFER(S) WILL        *
*         HAVE A READ OR WRITE AND TIC CCWS BUILT IN THE FIRST        *
*         THREE WORDS OF THE UNIT.  IF THE REQUEST IS OTHER THAN AN   *
*         INITIAL REQUEST FOR RECEIVING, THE BUFFER(S) WILL BE        *
*         INCLUDED IN THE CHANNEL PROGRAM FOR THE LINE.               *
*                                                                     *
*EXTERNAL ROUTINES -- IEDQDISP, INSERT BY PRIORITY, EITHER ON THE     *
*   READY QUEUE(DSPPOSTR) IN TO THE ELEMENT CHAIN OF A SPECIFIED      *
*   QCB(DSPPRIOR),                                                    *
*                  -- IEDQEB
*                  -- SETLOCK IS ISSUED TO ALLOW SERIALIZED      Y02027
*   EXECUTION OF CERTAIN CODE IN SUPERVISOR MODE,SUPERVISOR STATEY02027
*   THIS IS NESCESSARY TO CONVERT REAL AND VIRTUAL ADDRESSES.    Y02027
*                                                                X01004
*                 --IEAPTRV - VS REAL-TO-VIRTUAL SUBROUTINE - TO Y01004
*   TRANSLATE REAL TIC ADDRESSES IN BUFFER UNITS TO VIRTUAL.     X01004
*                                                                X01004
*EXITS-NORMAL -- EXIT IS THE DISPATCHER 3R THE CALLING ROUTINE AS     *
*   FOLLOWS                                                           *
*   1. BUFFER REQUEST AND BUFFER RETURN - EXIT IS TH THE DISPATCHER   *
*      A. AN ERB OR UNIT TO POST - DSPPOST                            *
*      B. NOTHING TO POST - DSPDISP                                   *
*      AN ERB TO BE INSERTED INTO THE BUFFER RETURN QCB ELEMENT       *
*         CHAIN - DSPPRIO                                             *
*   2. BUFFER ASSOCIATION - EXIT TO THE CALLING ROUTINE               *
*      A. MH MACRO EXPANSION OF OUTMSG                                *
*      B. BUFFER REQUEST                                              *
*      C. BUFFER RETURN                                               *
*      D. FOR CONCENTRATOR BUFFERS, EXIT IS TO THE DISPATCHER -  Y01004
*         DSPDISP                                                Y01004
*                                                                     *
*EXITS-ERROR -- NONE                                                  *
*                                                                     *
*TABLES/WORKAREAS -- TDISPD,DCBD,TPRFD,TLCBD,TQCBD,TAVTD 2            *
*   AVTFIELDS USED - AVTACTIB,AVTAVFCT,AVTBFREB,AVTBFRTB,AVTCPBCB,    *
*   AVTDELAD,AVTDOUBL,AVTDSKCT,AVTEA,AVTEINPR,AVTHDRSZ,AVTKEYLE,      *
*   AVTSVSIZ,AVTTXTSZ.                                                *
*
*ATTRIBUTES -- REUSEABLE, REFRESHABLE, ENABLED, RESIDENT              *
*                                                                     *
*NOTES -- THE OPERATION OF THIS MODULE DOES NOT DEPEND UPON A         *
*    PARTICULAR INTERNAL REPRESENTATION OF THE EXTERNAL CHARACTER     *
*    SET.                                                             *
*                                                                     *
***********************************************************************
         ENTRY IEDQGB
         ENTRY IEDQGD
         ENTRY IEDQGA02                                        @G36XRPV
***********************************************************************
R0        EQU  0                         WORK REGISTER
R1       EQU   1                         ELEMENT ADDRESS FORM
*                                        DISPATCHER
*                                        ADDRESS OF PARM LIST
R2        EQU  2                         DCB UNIT COUNT
*                                       ADDRESS OF THE LAST UNIT
*                                        OF THE LAST BUFFER
RSCB     EQU   3                        SCB BASE
R3        EQU  3                        WORK REGISTER
*                                        LAST UNIT IN THIS BUFFER
RLCB      EQU  4                        LCB ADDRESS
R5        EQU  5                         COUNT OF AVAILABLE BUFFERS
*                                        USED RD SK/WR ID LOOP
R6       EQU   6                        WORK REGISTER            Y05331
RPREFIX   EQU  6                         BUFFER ADDRESS
R7       EQU   7                        WORK REGISTER
RQCB      EQU  7                        QCB ADDRESS
R8        EQU  8                        COUNT RESERVED FOR DISK
R9       EQU   9                        WORK REGISTER
RDCB      EQU  10                        DCB ADDRESS
R11       EQU  11                        DISPATCHER BASE REGISTER
*                                        ERB BUFFER REQ. CT
*                                       UNUSED RD SK/WR ID LOOP
RBASE     EQU  12                       PROGRAM BASE REGISTER
RAVT      EQU  13                        BASE REGISTER FOR AVT 2
*                                        SAVE AREA ADDRESS
R14      EQU   14                        RETURN ADDRESS AND WORK
R15       EQU  15                       ENTRY POINT ADDRESS
*                                        WORK REGIS TER
***********************************************************************
ONE      EQU   1                        OFFSET                   S22024
TWO      EQU   2                        OFFSET                   S22024
ZEERO    EQU   0                        OFFSET                   S22024
THREE    EQU   3                        OFFSET                   S22024
FOUR     EQU   4                        OFFSET                   S22024
NOTEQ    EQU   7                        CC = NOT EQUAL          OY00507
ONESIX   EQU   16                       OFFSET TO UCBTYP FIELD   S99228
TWOFOUR  EQU   24                       OFFSET                   S22024
LAST     EQU   X'02'                    LAST UNIT OF BUFFER FLAG Y01004
OBAKER   EQU   X'0B'                    3270 SELECT CMD OPCODE   S99228
APCIRCV  EQU   X'20'                    A TYPE PCI ON RECEIVE    S99228
LRSCHED  EQU   X'1E'                    LOCAL RECEIVE SCHED MASK S99228
DEV2260  EQU   X'03'                    2260 DEVICE TYPE         S99228
COMCHAIN EQU   X'40'                    DATA CHAINING INDIC      S99228
EAUCOM   EQU   X'0F'                    3270 EAU COMMAND CODE    S99228
XXXINHIB EQU   X'0A'                    HEX 0A                   S22024
XXXUSED  EQU   X'20'                    HEX 20                   S22024
XXXCNCL  EQU   X'02'                   &H0702                   S22024
XXXPCISD EQU   X'51'                    HEX 51                   S22024
XXXPCIRV EQU   X'A2'                    HEX A2                   S22024
XXCTUSED EQU   X'80'                    DISABLED CT IS BEING REFER'D
NOTTIC   EQU   X'07'                    MASK FOR TEST          @YA08774
CPASTART EQU   X'04'                    LCBSTART VALID FLAG    @YA06893
CVTADDR  EQU   16                       ABSOLUTE LOCATION OF CVT Y01004
*                                       ADDRESS.                 Y01004
CVTPTRV  EQU   X'120'                   OFFSET INTO CVT OF ADDR. X01004
*                                          OF REAL-TO-VIRTUAL    X01004
*                                          SUBROUTINE.           X01004
ALL      EQU   15                       4-BYTE ICM MASK.         X01004
NILL     EQU   0                         CONSTANT                X01004
AD       EQU   7                        3-BYTE ICM MASK.         X01004
EIGHT    EQU   8                        CCW LENGTH.              X01004
NINE     EQU   9                        CONSTANT.                Y01004
ELEVEN   EQU   11                       CONSTANT                 X01004
TWELVE   EQU   12                       CONSTANT                 X01004
THIRTEEN EQU   13                       CONSTANT                 X01004
TWENTY   EQU   20                       CONSTANT.                Y01004
NO       EQU   14                       CONDITION CODE           X01004
         USING AVTSAVE2,RAVT            AVT BASE                 S22025
         USING IEDQQCB,RQCB
         USING IEDQLCB,RLCB
         USING IHADCB,RDCB
         USING IEDQPRF,RPREFIX
         USING  IEDQDISP,R11
         USING  IEDQSCB,RSCB
         TITLE  '''IEDQGA'' - BUFFER REQUEST'
***********************************************************************
*TITLE -  BUFFER REQUEST                                              *
*    THIS ROUTINE IS ENTERED AS A RESULT OF RECEIVE SCHEDULER OR      *
*    LINE PCI POSTING AN ERB TO THE BUFFER REQUEST QCB.  IF THE ERB   *
*    IS FOR AM INITIAL REQUEST, THE NUMBER OF UNITS REQUIRED ARE      *
*    REMOVED FROM THE AVAILABLE CHAIN TO FROM THE REQUESTED NUMBER    *
*    OF BUFFERS.  A BAL TO THE ASSOCIATION SUBROUTINE WILL BUILD      *
*    THE REQUIRED CCWS AND THE ERB WILL BE POSTED TO THE ACTIVATE     *
*    QCB. IF THE REQUESTED WAS A PROCESS PROGRAM, THE ERB WILL BE     *
*    POSTED TO THE SPECIFIED QCB.                                     *
*                                                                     *
*    IF THE REQUEST IS NOT INITIAL REQUEST, THE ERB IS CHAINED        *
*    BY THE PRIORITY INTO THE ELEMENT CHAIN OF THE BUFFER RETURN QCB. *
*                                                                     *
***********************************************************************
         SPACE 2
         DC    AL1(DSPMCPL2)            STCB
         DC    X'00'                    STCB
         SPACE 2
         USING *,RBASE                  DECLARE BASE REGISTER
BFRREQ   EQU   *                        BEGINNING OF CODE
         LR    RBASE,R15                SET ADDRESSABILITY
IEDQGA   IEDHJN GASTART
         LR    RLCB,R1                  ADDR OF ERB FROM DISP
         LA    R0,LCBERBFS              AMT TO SUBTR FOR START LCB
         SLR   RLCB,R0                 BACK UP TO LCB
         TM    LCBERBST,LCBERROR        ERROR ON THE LINE
         BNO   NOERROR                  BRANCH IF NO.            Y01004
         NI    LCBERBST,AVTEFF-LCBERROR SET ERROR BIT OFF.       Y01004
         OI    LCBERBST,LCBDLNKN        SET DELINK SWITCH ON FOR Y01004
*                                       BUFFER DISPOSITION.      Y01004
         B     DSPDISP                  EXIT TO DISPATCHER TO    Y01004
*                                       STOP ASSIGNING BUFFERS.  Y01004
NOERROR  EQU   *                                                 Y01004
         TM    LCBERBST,LCBPRCPG        APPL PROG BUFFER REQ   @Z30X8PM
         L     RDCB,LCBDCBPT            ADDRESS OF DCB         @Z30X8PM
         BO    NOINIT1                  YES, SKIP PCI LOCK MP  @Z30X8PM
NOINIT   EQU   *                                               @Z30X8PM
         TS    LCBPCILK                 PCI ACTIVE ON THIS LINE  Y02027
         BNE   NOINIT                   YES, LOOP FOR MP TILL    Y02027
*                                       PCI COMPLETE             Y02027
NOINIT1  EQU   *                                                 Y02027
         XC    LCBERBCH(3),LCBERBCH     UNCHAIN ERB
REENTRY  EQU   *                                                 S22025
         CLI   LCBERBPY,PRISBPCI        SUBSEQUENT POST OF ERB   S22025
         BNE   INITIAL                  NO,BRANCH                S22025
         L     RDCB,LCBDCBPT            DCB ADDRESS              S22025
         TM    DCBPCI,PCIADDXR          PCI=X ON INPUT           S22025
         BZ    PRINSERT                 NO,  INSERT PRIORITY     S22025
         MVI   LCBERBPY,PRIFSPCI        TREAT PCI=X THE SAME AS  S22025
*                                         FIRST PCI, I.E. ASSIGN S22025
*                                         BUFFERS AND LEAVE ERB  S22025
*                                         POSTABLE               S22025
INITIAL  EQU   *
         BAL   R14,SETRSVD              GET BUFFERS
         LA    RQCB,AVTBFREB            ADDR OF AVAIL BFR QCB
         L     RPREFIX,QCBELCHN-1       ELEMENT CHAIN            S22024
         LR    R15,RPREFIX              ADDRESS OF FIRST BUFFER
         BAL   R14,DCBCT                GET BUFFERS
         LR    R0,R2                    SAVE NO. U ITS
         CR    R5,R8                    DOES RSVD CT EXCEED AVAIL.
         BH    BFRTHERE                 CT  BR  IF AVAIL IS HIGH
LINK     EQU   *
         NC    LCBERBCH(3),LCBERBCH    WERE ANY BFRS ASSIGNED
         BZ    LINK2                   NO, GO ENQUEUE ERB
         BAL   R9,FREEBFRS             GO FREE ASSIGNED BFRS
LINK2    EQU   *
         STC    R11,LCBERBCT            RESTORE ERB RQ CT
PRINSERT EQU   *
         TM    LCBERBST,LCBPRCPG        APPL PROG. REQUEST       Y02027
         BO    PCILK01                  YES, BYPASS LOCK CLEARINGY02027
         MVI   LCBPCILK,ZEERO           CLEAR PCI LOCK FOR MP    Y02027
PCILK01  EQU   *                                                 Y02027
         NI   LCBERBST,LCBDLNKF         SET DLNK OFF FOR PCI
         LA    R1,LCBERB                LCBERB ADDR              S22024
         LA    RQCB,AVTBFRTB            BFR RTN QCB
         L     R11,AVTEA                DISP BASE REG
         BAL   R14,DSPPRIO              PRIORITY INSERT        @G36XRPV
*                                         AND DISPATCH         @G36XRPV
         SPACE 1
BFRTHERE EQU   *
         CR    R5,R2                    ENOUGH FOR FIRST BFR
         BL    LINK                     BR NO
         LA    RPREFIX,0(0,RPREFIX)     CLEAR HI ORDER BYTE
         LTR   RPREFIX,RPREFIX          IS IT ZERO
         BZ    LINK                     CHECK ON BUFFERS
         LA    R14,LCBERBCH-5           *
         BAL   R1,NC                    ENTER LOOP AND SET LOOP REG
         L     R14,PRFLINK-1-IEDQPRF(R14) PICK UP LINK           S22024
NC       EQU   *                                                 S22024
         NC    PRFLINK-IEDQPRF(THREE,R14),PRFLINK-IEDQPRF(R14) CHECK
*                                       LAST                     S22024
         BCR   7,R1                     BR IF NOT LAST ASSIGNED
         LA    R14,0(,R14)              INITIALIZE FOR LOOP
         SH    R14,AVTHA4               SUBTRACT
         BAL   R9,UNIT                  MANIPULATE BUFFERS
         LA    R9,SETCT                 SET EXIT ADDR FOR COMMON CODE
         LA    R8,INITIAL               SET RETURN ADDR
         CLI   LCBERBPY,PRIFSPCI       IS THIS FIRST PCI REQUEST
         BE    RECOUNT                  YES, GO SEE IF OTHERS NOW
         LR    R14,R8                   SET COMMON CODE EXIT POINT
         BCTR  R11,R9                   IS THE REQ, COMPLETE - BR NO
         OI   LCBERBST,LCBDLNKN         SET DLNK ON FOR PCI AND DISP
         STC   R11,LCBERBCT
*     CHECK FOR A PROCESS PGM - BR IF YES
*   GET ADDR OF PROCESS QCB FROM LCB
         L     R8,LCBRCQCB
         TM    LCBERBST,LCBPRCPG        APPL PROG BUFFER REQ
         BO    POSTA                    BRANCH IF YES
         BAL   R8,ASSOCIAT              IF NOT MPP ASSOCIATE BFR(S)
*                                       WITH LINE
NOASSOC  EQU   *                                                 S22024
         TM    LCBSTAT1,LCBCONT         CONTINUE FROM LMD        S22025
         BZ    FIRSTIME                 BRANCH NO                S22025
         SPACE
         L     RSCB,LCBSCBA-1           SET SCB BASE
         MVC   SCBDEOB+1(3),LCBLSPCI    SET NEXT EOB RECORD      S22025
         MVC   LCBCPA+13(3),LCBLSPCI    SET CURRENT CCW ADDRESS  S22025
         MVC   LCBCPA+16(8),PRFOPCDE-IEDQPRF(R2)  SET THE CCW IN S22025
*                                         CASE OF A CONTINUE OPR S22025
FIRSTIME EQU   *                                                 S22025
         LA    R8,AVTACTIB
         MVI   LCBPCILK,ZEERO           CLEAR PCI LOCK FOR MP    Y02027
POSTA    EQU   *
         ST   R8,LCBERBQB-1            FOR POST
         LA    R1,LCBERB
         MVI    LCBERBPY,PRIACTIV
         L     R11,AVTEA
         L     R15,LCBERBCH-1           LOAD FIRST UNIT ADDR   @OY19124
         BAL   R14,DSPPOST              POST AND DISPATCH      @G36XRPV
         SPACE 1
FREELAST EQU   *
         LA    R9,LINK2                 LOAD EXIT POINT ADDR
         SR    R0,R2                   GET NUMBER OF UNITS ASSIGNED
*                                           FOR THIS BUFFER
         STC   R0,PRFNBUNT             SET NUMBER UNITS IN PARTIAL BFR
         BCTR  R11,0                   DECREMENT TEMP REQUEST COUNT
FREEBFRS EQU   *
         BALR  R1,0                    SET LOOP RETURN ADDRESS
         SPACE 1
         NC    LCBERBCH(3),LCBERBCH     WERE ANY ASSIGNED
         BCR   8,R9                    NO, GO RE-LINK REQUEST
         LA    R11,1(,R11)             ADD ONE TO NUMBER REQUESTED
*                                           FOR THIS BUFFER
         L     RPREFIX,LCBERBCH-1      GET FIRST ASSIGNED BFR ADDR
         MVC   LCBERBCH(3),PRFLINK     DE-LINK BUFFER
         IC    R2,PRFNBUNT             GET NUMBER OF UNITS
NEXTONE  EQU   *
         TM    AVTBFRFG,AVTBFRTN        RETURN UNITS HI OR LO  @OY19124
         BNO   ONTOP                    BRANCH RETURN HI       @OY19124
         NC    AVTBFREB+1(3),AVTBFREB+1 UNITS AVAILABLE        @ZM48772
         BZ    NOCOR                    BRANCH NO              @OY19124
         L     R5,AVTSELCH-1            LOAD ADDRESS LAST UNIT @OY19124
         STCM  RPREFIX,7,PRFLINK-IEDQPRF(R5) ADD NEW LAST UNIT @OY19124
NOCOR    EQU   *                                               @OY19124
         STCM  RPREFIX,7,AVTSELCH       SET ADDRESS LAST UNIT  @OY19124
         XC    PRFLINK,PRFLINK          CLEAR LINK FIELD       @OY19124
         NC    AVTBFREB+1(3),AVTBFREB+1 ANYTHING AVAILABLE     @ZM48772
         BNZ   ONTOPOFF                 BRANCH YES             @OY19124
ONTOP    EQU   *                                               @OY19124
         MVC   PRFLINK(3),AVTBFREB+1   LINK UNIT INTO CHAIN
         ST    RPREFIX,AVTBFREB
ONTOPOFF EQU   *                                               @OY19124
         TM    AVTSAVTF,AVTVTMCP      8 BYTE NEG PREFIX ? @ZM46639
         BNO   BYPCLEAR               NO                  @ZM46639
         LA    R15,EIGHT              SET PREFIX SIZE     @ZM46639
         LNR   R15,R15                MAKE NEGATIVE       @ZM46639
         AR    R15,RPREFIX            POINT TO PREFIX     @ZM46639
         XC    0(EIGHT,R15),0(R15)    CLEAR PREFIX        @ZM46639
BYPCLEAR EQU   *                                          @ZM46639
         OI    PRFTIC+3,X'01'          SET 'FREE' FLAG
         L     RPREFIX,PRFTIC          GET NEXT UNIT ADDRESS
         BCTR  RPREFIX,0               TURN OFF 'FREE' FLAG IN REG
         LH    R5,AVTAVFCT              GET AVAILABLE COUNT    @OY19124
         LA    R5,1(0,R5)               INCREASE AVAIL. BFR CT
         STH   R5,AVTAVFCT              RESET AVAILABLE COUNT  @OY19124
         BCT   R2,NEXTONE               GET NEXT UNIT
         BR    R1                      EXIT FROM LOOP
         SPACE 1
DCBCT    EQU   *
         SR    R2,R2                    CLEAR FOR IC
         IC    R2,LCBERBCT+1            GET NO UNITS
         TM    LCBERBST,LCBPRCPG        IS THIS AN APPL PGM
         BCR   1,R14                   BR YES
         L     RDCB,LCBDCBPT            ADDR OF DCB
         IC    R2,DCBUNTCT              GET UNIT COUNT
         BR    R14                      RETURN
         SPACE
UNIT     EQU   *                        UNIT
         ICM   R15,AD,QCBELCHN          ADDRESS OF NEXT UNIT.    Y01004
         BZ    FREELAST                 BRANCH IF NO MORE UNITS. Y01004
         CR    R5,R8                    DOES AVAIL CT EXCEED RSVD
         BNH   FREELAST                 BR NO
         BCTR  R5,0                     DECR AVAIL. CT
         STCM  R15,AD,PRFTIC+ONE-IEDQPRF(R14)                    X01004
*                      LINK PREV. UNIT TO THIS ONE
         MVC   QCBELCHN(3),PRFLINK-IEDQPRF(R15)
*                       NEXT UNIT INTO AVAILABLE BFR QCB
         XC    PRFLINK-IEDQPRF(7,R15),PRFLINK-IEDQPRF(R15)
         MVI   PRFTICC-IEDQPRF(R15),PRFTICON SET TIC COMMAND   @G36XRPV
         LR    R14,R15                  ADDR OF UNIT JUST ASSIGNED
         BCT   R2,UNIT                  DECR CT OF UNITS PER BFR
         MVC   PRFTICC-IEDQPRF(L'TIC02,R15),TIC02 INVALID TIC  @G36XRPV
*                                         IN LAST BUFFER UNIT  @G36XRPV
         STH   R5,AVTAVFCT              SAVE AVAILABLE COUNT
         ST    RLCB,PRFLCB-1
         STH   R2,PRFSRCE               SET SRCE OFFSET TO 0
         STH   R2,PRFSIZE               SIZE TO 0
         MVI   PRFSTAT1,PRFNHDRN+PRFNLSTN
*              SET FLAGS FOR STATUS OF BFR
         STC   R0,PRFNBUNT              SET NO. UNITS
         XC    PRFCORE(PRFSHDR+4-PRFCORE),PRFCORE ZERO PREFIX    S22029
         TM    LCBTSOB,LCBTSBUF         IS THIS A TS BUFFER         TSO
         BCR   EIGHT,R9                 IF NO, RETURN.              TSO
         OI    PRFSTAT1,PRFTSMSG       FLAG TSO MESSAGE          S22029
         BR    R9                       RETURN
         SPACE 1
SETRSVD  EQU   *
         SR    R11,R11
         IC    R11,LCBERBCT             NO. BFRS REQUESTED(EN)
         LH    R8,AVTDSKCT
*                       DISK OPERATION IN PROGRESS
         LH    R5,AVTAVFCT              CT OF AVAILABLE BFRS
         N     R5,AVTCLRHI              CLEAR HIGH BYTES       @YA07705
         BR    R14                      RETURN
         EJECT
*                                                                     *
***********************************************************************
*    THIS ROUTINE RECEIVES CONTROL AS A RESULT OF LINE PCI, DISK I/O  *
*    OR DISPOSITION POSTING A FREE BUFFER.  IF AN ERB IS NOT WAITING  *
*    FOR A BUFFER, THE UNIT OF THIS BUFFER ARE PLACED IN THE          *
*    AVAILABLE CHAIN.                                                 *
*    IF AN ERB IS WAITING AND DOES NOT REPRESENT AN INITIAL REQUEST   *
*    OR A DISK REQUEST, A BUFFER IS CONSTRUCTED AND (VIA A BAL TO     *
*    THE ASSOCIATE SUBROUTINE), CCWS ARE BUILT FOR THE UNTIS          *
*    INVOLVED.                                                        *
*    IF THE ERB REPRESENTS A DISK REQUEST, THE BUFFER IS BUILT AND    *
*    POSTED TO THE CPR CLEANUP QCB.                                   *
*    IF THE ERB REPRESENTS AN INITIAL REQUEST, A BUFFER IS BUILT      *
*    AND CHAINED INTO THE ERB'S BUFFER CHAIN.  IF THE REQUEST IS      *
*    NOT SATISIFIED, RETURN IS TO THE DISPATCHER.  IF THE REQUEST IS  *
*    SATISFIED, THE ERB IS POSTED TO THE ACTIVATE QCB, AFTER THE      *
*    CCWS (VIA ASSOCIATION SUBROUTINE) ARE BUILT FOR UNITS.           *
*                                                                     *
***********************************************************************
         DS    0H
IEDQGB   EQU   *
         SPACE 2
         DC    AL1(DSPMCPL2)            STCB
         DC    X'00'                    STCB
         SPACE 2
         USING *,15                     DECLARE TEMPORARY BASE REG
         L     RBASE,BASE               SET UP MODULE BASE
         DROP  15                       DROP TEMPORARY BASE
         LR    RPREFIX,R1               BFR ADDR
         LA    RQCB,AVTBFREB            BFR REQ. QCB
         LH    R5,AVTAVFCT              NO. OF BFRS IN POOL      S22024
         N     R5,AVTCLRHI              CLEAR HIGH BYTES       @YA07705
         SR    R2,R2                    CLEAR REG 2              S22024
         ICM   R2,ONE,PRFNBUNT          GET NO. OF UNITS       @G36XRPV
         BNZ   CNTOK                    IF ZERO MUST FIND FIRST@G36XRPV
NEXTUT   EQU   *                         TIC02 ADDRESS         @G36XRPV
         LA    R2,1(,R2)                UP UNIT COUNTER        @G36XRPV
         DROP  RPREFIX                                         @G36XRPV
         USING IEDQPRF,R1                                      @G36XRPV
         TM    PRFTIC+3,2               TEST FOR LAST UNIT     @G36XRPV
         BO    CNTSTC                   LAST UNIT              @G36XRPV
         L     R1,PRFTIC                GET NEXT UNIT          @G36XRPV
         B     NEXTUT                   CONTINUE SEARCH        @G36XRPV
         DROP  R1                                              @G36XRPV
         USING IEDQPRF,RPREFIX                                 @G36XRPV
CNTSTC   STC   R2,PRFNBUNT              CORRECT PRFNBUNT       @G36XRPV
CNTOK    EQU   *                                               @G36XRPV
         LR    R0,R2                    SAVE NO. OF UNITS        S22024
         BAL   R1,NEXTONE              GO FREE UNITS OF BUFFER
         LR    R2,R0                    RESTORE NO. OF UNITS
BFRASIGN EQU   *
         L     RPREFIX,AVTBFREB+QCBELCHN-1-IEDQQCB GET AVAILABLE UNIT
*                                           ADDRESS
         LA    RQCB,AVTBFRTB            BFR RTN QCB
         L     RLCB,QCBELCHN-ONE        ADDRESS OF FIRST ERB     X01004
         CLM   RLCB,AD,AVTDELAD+ONE     ARE ANY ERB'S WAITING    X01004
         BE    RETURN1                  BRANCH IF NO             Y02027
         LA    R0,LCBERB-IEDQLCB        LOAD LCBERB PTR          S22024
         SR    RLCB,R0                  ADDR OF ERB
         CLI   LCBERBPY,PRIDSKRQ        ERB PRIORITY
         BL    XRSVDCT                  BRANCH IF LOW
         ST    RLCB,PRFLCB-1            SAVE
         MVC   QCBELCHN(3),LCBERBLK     REOMVE
         LA    R1,AVTCPBCB              CLEANUP QCB              S22024
         ST    R1,PRFQCBA-1             TO BUFFER                S22024
         MVC   AVTBFREB+QCBELCHN-IEDQQCB(3),PRFLINK REMOVE BUFFER FROM
*                                           AVAILABLE QUEUE
         MVI   PRFNBUNT,ONE             NO. OF UNITS             S22024
         XC    PRFTIC+ONE(THREE),PRFTIC+ONE CLEAR LINK FIELD     S22024
         LR    R1,RPREFIX               LOAD UNIT ADDR           S22024
         L    R11,AVTEA                 RESTORE DISP ADDR
         MVI   PRFPRI,PRIDSKBF          MOVE PRIORITY
         BAL   R14,DSPPOSTR             POST
         BCT   R2,BFRASIGN              ASSIGN BUFFER
         B     RETURN1                  EXIT TO DISPATCHER       Y02027
RETURN   EQU   *                        *
         TM    LCBERBST,LCBPRCPG        APPL PROG REQUEST        Y02027
         BO    RETURN1                  YES, SKIP PCI SWITCH     Y02027
         MVI   LCBPCILK,ZEERO           CLEAR PCI LOCK FOR MP    Y02027
RETURN1  EQU   *                                                 Y02027
         L     R11,AVTEA                GET ADDR OF TCAM DISPATCHER
         B     DSPDISP                  RETURN TO DISPATCHER
         SPACE 1
XRSVDCT  EQU   *
         TM    LCBERBST,LCBERROR        ERROR ON THIS LINE
         BNO   NOTERROR                 BRANCH IF NO.            Y01004
         NI    LCBERBST,AVTEFF-LCBERROR RESET ERROR FLAG.        Y01004
         OI    LCBERBST,LCBDLNKN        SET DELINK SWITCH ON FOR Y01004
*                                       BUFFER DISPOSITION.      Y01004
         MVC   QCBELCHN(THREE),LCBERBLK REMOVE ERB.              Y01004
         B     BFRASIGN                 STOP BUFFER ASSIGNMENT.  Y01004
NOTERROR EQU   *                                                 Y01004
         BAL   R14,SETRSVD              GET BUFFERS
         CR    R5,R8                    IS THE AVAILABLE CT LESS
*                                       THAN RESERVED COUNT      Y01004
         BNH   RETURN1                  BRANCH IF YES            Y02027
         BAL   R14,DCBCT                GET COUNT
         LR    R0,R2                    SAVE NO. U ITS
         MVC   QCBELCHN(3),LCBERBLK     REMOVE ERB
         LA    RQCB,AVTBFREB            AVAILABLE BFR            S22024
         CLI   LCBERBPY,PRISBPCI       IS THIS SUBSEQUENT PCI REQ
         BNE   INITIAL                 NO, GO HANDLE IT AS INITIAL
         LA    R14,LCBERBCH-9           SET SO ERB CHAIN LOOKS LIKE TIC
*                                            OF PREVIOUS UNIT
         BAL   R9,UNIT                  MANIPULATE BUFFERS
         LA    R9,RECHAIN               SET EXIT ADDR FROM COMMON CODE
RECOUNT  EQU   *
         LA    R14,ASSOC2               SET EXIT POINT
         BCTR  R11,R9                   IF THE ENABLED CT IS NOT
*                       ZERO, RECHAIN THE ERB. IF IT IS 0, CHECK
*                       THE DISABLED CT.
         STC    R11,LCBERBCT
         OI    LCBERBCT+1,XXCTUSED      FLAG THE DISABLED COUNT
         CLI   LCBERBCT+1,XXCTUSED      IS DISABLED ZERO
         BE    MORETEST                 YES, GO RELEASE ERB
         IC    R0,LCBERBCT+ONE          PICKUP COUNT             S22024
         LA    R1,AVTE80-1              SET FOR NR TO COEAR
         NR    R0,R1                    THE FLAG FROM DISA. CT
*        THE DISABLED COUNT SHOULD BE ADDED TO THE ENABLED COUNT
*        THE FLAG FOR THE DISABLED COUNT SHOULD BE OFF AND THE
*        DISABLED COUNT SHOULD BE SET TO ZERO
         MVI   LCBERBCT+1,AVTEZERO      CLEAR FLAG AND DISA. CT 0
         IC    R11,LCBERBCT             GET COUNT                S22024
         AR    R11,R0                   ADD TO COUNT             S22024
         BR    R9                       GO EXIT FROM ROUTINE
         SPACE 1
MORETEST EQU   *
         OI    LCBERBST,LCBDLNKN        SET DELINK FOR PCI
         NI    LCBERBCT+1,X'FF'-XXCTUSED TURN OFF DISABLED FLAG
         ICM   R8,THREE,LCBERBCT        GET COUNT FIELDS.        Y01004
         LA    R8,RETURN                SET RTN ADDR
         BCR   EIGHT,R14                BRANCH IF BOTH COUNTS    Y01004
*                                       ARE ZERO.                Y01004
         TM    LCBERBST,LCBDLNKN
         BCR   14,R14                   SEE COMMENT BELOW
*        IF THE DELINK SW IS OFF THE ERB HAS BEEN
*                                       REPOSTED. IF IT IS NOT ON
*                                       IT MUST BE RECHAINED
         NI    LCBERBST,X'FF'-LCBDLNKN  TURN OFF 'POSTABLE' FLAG S22025
         LA    R8,REENTRY               SET RETURN ADDR          S22025
         BR    R14                      RETURN
         SPACE 1
RECHAIN  EQU   *
         LA    R8,PRINSERT              SET EXIT REG
SETCT    EQU   *
         STC   R11,LCBERBCT
         BR    R14                      EXIT
         TITLE   '''IEDQGA'' - BUFFER ASSOCIATION'
*
*
********************************************************************
*                       BUFFER ASSOCIATION                            *
*                                                                     *
*        THIS ROUTINE MAY BE PASSED A BUFFER OR AN ERB WITH           *
*   BUFFERS IN THE BUFFER CHAIN.  THIS ROUTINE WILL BUILD             *
*   CCW'S IN THE FIRST 3 WORDS OF THE BUFFER UNIT(S) FOR EACH         *
*   BUFFER.  THE LAST BUFFER UNIT WILL TIC TO AN ADDRESS OF 2 TO      *
*   CAUSE A CHANNEL PROGRAM CHECK.  IF THIS BUFFER IS NOT THE FIRST,  *
*   THE LAST UNIT OF THE PREVIOUS BUFFER WILL BE MADE TO TIC TO       *
*   THE FIRST UNIT OF THIS ONE.  IF A CHANNEL PROGRAM CHECK HAS       *
*   OCCURRED, THE WRITE IDLE/READ SKIP LOOP WILL TIC TO THE BUFFER.   *
*   IF THIS IS A FIRST BUFFER FOR A WRITE, THE WRITE IDLE LOOP        *
*   WILL TIC TO THE BUFFER.                                           *
*        A PORTION OF THIS ROUTINE RUNS IN SUPERVISOR MODE AND   Y01004
*   KEY ZERO.  SUPERVISOR MODE IS NECESSARY TO PERFORM ADDRESS   Y01004
*   TRANSLATION.  KEY ZERO IS NECESSARY FOR SYSTEM INTEGRITY.    Y01004
*
********************************************************************
*
IEDQGD   DS    0H                                                Y01004
*
*        THIS ENTRY POINT IS USED BY MH WITH A FULL BUFFER TO    Y01004
*        WRITE, OR BY THE CTBFORM MODULE (IEDQGH) WITH A         Y01004
*        CONCENTRATED END-OF-MESSAGE BUFFER TO WRITE.            Y01004
*
         USING *,15                     SET TEMP. BASE
         L     RBASE,BASE               SET PGM BASE
         DROP  15
         LA    R8,RETURN                PICK UP RETURN LOC       S22024
         TM    SCBQTYPE,SCBCONC         CONC SCB ?               S22026
         BZ    NOCONC                   NO                       S22026
         LA    R8,GDCONC                SET UP RETURN TO CON-    Y01004
*                                       CENTRATOR CODE.          Y01004
NOCONC   EQU   *                                                 S22026
         L     RLCB,PRFLCB-1            ADDR OF LCB
         L     RDCB,LCBDCBPT            ADDR OF DCB              S22024
         LA    R14,ASSOC3               SET EXIT ADDR
         MVC   AVTPARM+1(3),LCBLSPCI    SET PCI WORKAREA       @YA10687
         NC    LCBLSPCI(3),LCBLSPCI     IS THIS THE FIRST
         BCR   7,R14                    BR NO
SETLSPCI EQU   *
         STCM  RPREFIX,AD,AVTPARM+1     INITIALIZE WORKAREA TO @YA10024
*                                       ADDRESS OF FIRST BUFFER. X01004
         STCM  RPREFIX,AD,LCBCPA+THIRTEEN                        X01004
         BR    R14                      RETURN
*
*        THIS ENTRY IS USED ONLY BY BUFFER REQUEST WITH AN ERB.
*        BUFFERS TO BE READ ARE ASSOCIATED WITH THIS ERB.
*
*        WHEN ENTERED ADDRESSES FOR LCB AND BUFFER DSECTS ALREADY
*        EXIST.
*
*        WHEN ENTERED WITH AN ERB, READ SKIP LOOP A HAS NOT BEEN
*        BUILT.
*
*
ASSOCIAT EQU   *
         L     RPREFIX,LCBERBCH-1
         BAL   R14,SETLSPCI             SET
         BAL   R14,SETCCWS              GO SET UP CCW
         SR    RPREFIX,RPREFIX          CLEAR FOR ICM.           Y01004
         ICM   RPREFIX,AD,LCBERBCH      GET FIRST BUFFER ADDRESS Y01004
         ST    RPREFIX,AVTDOUBL+FOUR    SAVE FIRST BUFFER ADDR.  Y01004
*                                       AND SET A ZERO FLAG BYTE Y01004
ASSOC1   EQU   *
         L     R9,AVTDOUBL+4            ADDR FIRST BFR
         SR    R14,R14                  CLEAR FOR ICM.           Y01004
         ICM   R14,AD,PRFLINK           GET LINK FIELD OF BUFFER Y01004
         BZ    ASSOC5                   BRANCH IF THERE ARE NO   Y01004
*                                       MORE BUFFERS, TO ASSIGN  Y01004
*                                       A BUFFER.                Y01004
         LR    R9,R14                   PUT BUFFER ADDRESS IN R9 Y01004
         BAL   R14,BLDCCWS              BUILD THE CCW
         STCM  R9,AD,PRFTIC+ONE-IEDQPRF(R3)  STORE BUFFER ADDR.  Y01004
*                                       IN TIC FIELD.            Y01004
         LR    RPREFIX,R9               SAVE LINK FIELD
         B     ASSOC1                   TRY NEXT BUFFER
         SPACE 2
*        THIS ENTRY IS FROM A PCI WITH ONE BUFFER TO READ
         SPACE 1
ASSOC2   EQU   *
         XC    LCBERBCH(3),LCBERBCH
ASSOC3   EQU   *
         LR    R9,RPREFIX
         BAL   R14,SETCCWS              SET UP CCW
ASSOC5   EQU   *                        *
         LA    R9,0(R9)                 CLEAR HI ORDER BYTE
         L     RSCB,LCBSCBA-1           LOAD SCB REG             S22026
         TM    SCBQTYPE,SCBCONC         CONCENTRATOR             S22026
         BZ    NOCONC1                  NO SKIP BRANCH TO LNR9   S22026
         L     R1,LCBSCBDA-1            GET LINE SCB ADDR        S22026
         TM    SCBSTAT1-IEDQSCB(R1),SCBCEND                      S22026
*                                       CONCENTRATED EOM         S22026
         BZ    GOAHEAD                  NO SKIP EOM FLAG SET     S22026
         B     LNR9                     ASSIGN BUFFER
NOCONC1  EQU   *                        *
         TM    PRFSTAT1,PRFNLSTN        LAST BUFFER OF MESSAGE
         BO    GOAHEAD                  BRANCH NO
*        SET A FLAG TO REMEMBER THAT THE LAST UNIT OF THIS
*        BUFFER IS THE LAST UNIT THAT WILL BE RECEIVED FOR THIS
*        WRITE OPERATION - THE DC FLAG SOULD BE OFF.  R9 HAS
*        THE ADDRESS OF THE FIRST UNIT OF THE FIRST BUFFER TO BE
*        TO BE ASSIGNED THIS TIME.
LNR9     EQU   *                                                 S22026
         LNR   R9,R9                    INSURE NEGATIVE REGISTER
GOAHEAD  EQU   *                        *
         BAL   R14,BLDCCWS              GO BUILD CCW
         L     RSCB,LCBSCBA-1           RESTORE SCB BASE         S22026
         L     R2,AVTPARM               ADDR OF FIRST BFR      @YA10024
         CLI   LCBERBPY,PRIINTRQ        CHECK ERB PRIORITY
         BNE   CHECKIT                  NO CHECK DEVICE TYPE
         TM    LCBSTAT1,LCBRECVN        RECEIVE OPERATION
         BO    SETUP                    BRANCH-YES             @YA10024
CHECKIT  EQU   *                        CHECK DEVICE TYPE
         TM    LCBCPA+12,XXXCNCL        THIS AN ERB RETRY
         BNO   NOTRY                    BR NO
*                                       CHECK TO SEE IF CURRENT  X01004
*                                       BUFFER IS THE FIRST ONE  X01004
*                                       TO BE RE-TRANSMITTED     X01004
         TM    PRFSTAT1-IEDQPRF(R9),PRFCNCLN+PRFNLSTN THIS THE BFR
         BO    SETUP                    BRANCH-YES             @YA10024
NOTRY    EQU   *
         TM    SCBQTYPE,SCBCONC         CONCENTRATOR BUFFER      S22026
         BO    GDCONC                   IF YES, EXECUTE SPECIAL  Y01004
*                                       CONCENTRATOR CODE.       Y01004
         MODESET MODE=SUP
*                                       GET INTO SUPERVISOR MODE Y02027
         MODESET EXTKEY=SUPR
*                                       GET INTO SUPERVISOR KEY  Y02027
         LR    R15,RAVT                 SAVE AVT ADDRESS         Y02027
         L     R14,AVTSAVTP             SECONDARY AVT POINTER    Y05331
         L     R14,SAVTDIAG-IEDNSVTD(0,R14)  VM DIAG ROUTINE     Y05331
         STM   R11,R14,AVTSAVE2         SAVE REGISTERS USED BY   Y02027
*                                       SETLOCK ROUTINE          Y02027
SETASSC  SETLOCK OBTAIN,TYPE=LOCAL,MODE=UNCOND,RELATED=CHANNEL PROGRAM,X
               IGE0004G(SETERP),IGE0004H(SETERP),IGG019QE(SETERP),     X
               IEDQGT(SETTRAN), 'PCI LINEEND AND START I/O APPENDAGES  X
               ARE LOCKED ON THIS REAOURCE THRU THE EXCP PROCESSOR     X
               ISSUING SETLOCK (ERP,BUFFER ASSOCIATION AND TRANSPARENT X
               CCW BUILD MUST ISSUE SETLOCK'
         LR    RAVT,R15                 RESTORE AVT ADDRESS      Y02027
         LM    R11,R14,AVTSAVE2         RESTORE REGISTERS USED   Y02027
*                                       BY SETLOCK ROUTINE       Y02027
         LA    RDCB,SETBFTIC            LOOP ENTRY ADDRESS.      Y01004
         NC    LCBLSPCI(3),LCBLSPCI     FIRST TIME             @YA10024
         BNZ   NOTFIRST                 BRANCH-NO              @YA10024
         MVC   LCBLSPCI(3),AVTPARM+1    SET LAST PCI           @YA10024
NOTFIRST EQU   *                                               @YA10024
         CLM   R9,AD,LCBLSPCI           DOES LCBLSPCI POINT TO   X01004
*                                          THE 1ST UNIT OF THE   X01004
*                                       FIRST BUFFER             X01004
         BE    SETR2                    BRANCH IF YES - THIS IS  X01004
*                                          THE 1ST BUFFER IN THE X01004
*                                          CHAIN.                X01004
         L     R1,LCBLSPCI-ONE          R1 NOW HAS ADDR OF       X01004
*                                          THE LAST BUFFER       X01004
*                                          SERVICED BY PCI.      X01004
         LR    R2,R1                    COPY BUFFER ADDRESS      Y01004
LOOKATIT EQU   *                                                 Y01004
         TM    LCBCPA+TWELVE,XXXUSED+XXXCNCL CHANL PGM CHK       Y01004
         BNM   OPOK                     BRANCH NO                Y01004
         TM    LCBCPA+EIGHT,NOTTIC      IS THIS A TIC COMMAND  @YA08774
         BNZ   OPOK                     BRANCH-NO              @YA08774
         CLI   LCBCPA+ONESIX,OBAKER     3270 LOCAL DEVICE ?     OX03966
         BE    OPOK                     YES, BRANCH             OX03966
         MVI   PRFOPCDE-IEDQPRF(R2),AVTEZERO SET 0 OP CODE       Y01004
OPOK     EQU   *
         EX    R1,TESTEND               CHECK FOR END OF CHAIN   X01004
         BNZ   FOUNDIT                  BRANCH IF FOUND          X01004
         LR    R2,R1                    ADDRESS TO R2            X01004
         ICM   R1,ALL,PRFTIC-IEDQPRF(R1) ADDRESS OF NEXT UNIT    X01004
         BNM   LOOKATIT                 BRANCH IF TIC OP CODE IS X01004
*                                       VIRTUAL - DON'T CONVERT. X01004
         LA    R1,0(,R1)                CLEAR HIGH ORDER FOR VS2 X01004
         L     R15,CVTADDR              CVT ADDRESS              X01004
         L     R15,CVTPTRV(,R15)        REAL TO VIRTUAL SUBROUT  X01004
*                                          VIRTUAL SUBROUTINE    X01004
         BALR  R14,R15                  CONVERT REAL TO VIRTUAL  X01004
         B     OPOK                     FIND LAST UNIT          OX02203
*                                                                Y01004
TESTEND  TM    TWOXX,0                  EXECUTED TM FOR END OF   Y01004
*                                       BUFFER CHAIN             Y01004
FOUNDIT  EQU   *
         TM    LCBCPA+TWELVE,XXXUSED+XXXCNCL  IS THERE A PREVIOUSX01004
*                                       BUFFER TO LINK IN        X01004
         BNM   SETBFTIC                 BRANCH NOT CHANNEL PGM CHY01004
         CLI   LCBCPA+ONESIX,EAUCOM     3270 EAU COMMAND?      @OX11963
         BE    ENDLOOP                  YES-LINK IN VIRTUAL    @OX11963
         OI    PRFTIC-IEDQPRF(R2),CCWREAL SET REAL OP CODE
SETBFTIC EQU   *
         TM    PRFTIC-IEDQPRF(R2),CCWREAL ARE REAL ADDRESSES IN  Y01004
         BZ    ENDLOOP                  BRANCH IF NO - DON'T     Y01004
*                                          CONVERT ADDRESSES IN  X01004
*                                          NEW BUFFER EITHER.    X01004
         LR    R5,R9                    SET UP ADDRESS OF FIRST  X01004
*                                          BUFFER UNIT FOR LOOP. X01004
         TM    LCBCPA+TWELVE,XXXUSED+XXXCNCL  IS THERE A PRE-    X01004
*                                       VIOUS BUFFER TO LINK IN  X01004
         BNO   LOOPREAL                 BRANCH IF NO.            X01004
         L     R5,LCBLSPCI-1            R5 = LCBLSPCI (FIRST     X01004
*                                       BUFFER TO TRANSLATE).    X01004
LOOPREAL EQU   *                        LOOP - INSERT REAL ADDRS X01004
         L     R7,AVTEZERO(,R5)         CONVERT PRFIOADR TO REAL X01004
         LRA   R7,AVTEZERO(,R7)            AND STORE IN LO-ORDER X01004
         STCM  R7,AD,ONE(R5)               THREE BYTES OF FIELD. X01004
         TM    PRFFLAGS-IEDQPRF(R5),CCWCC+CCWCD CHAINING SET     Y01004
         BZ    ENDLOOPR                 BRANCH NO DO NOT SET TIC Y01004
         L     R7,EIGHT(R5)             PUT REAL ADDRESS OF NEXT X01004
         LRA   R0,0(,R7)                REAL ADDRESS             Y01004
         STCM  R0,AD,PRFTIC+1-IEDQPRF(R5) LINK BUFFER IN CHAIN   Y01004
         OI    PRFTIC-IEDQPRF(R5),CCWREAL SET TIC OP CODE - REAL Y01004
         LR    R5,R7                    ADDRESS OF NEXT UNIT     Y01004
         EX    R5,TESTEND               IS THIS LAST UNIT        Y01004
         BZ    LOOPREAL                 BRANCH NO - CONTINUE     Y01004
ENDLOOPR EQU   *                                                 Y01004
         BALR  RDCB,0                   REAL ADDRS HAVE BEEN     Y01004
*                                       INSERTED                 Y01004
ENDLOOP  EQU   *                                                 Y01004
         LRA   R5,0(,R9)                CONVERT TO REAL          Y01004
         TM    PRFTIC-IEDQPRF(R2),CCWREAL ARE ADDRS REAL         Y01004
         BO    CHAINBUF                 BRANCH YES               Y01004
         LR    R5,R9                    USE VIRTUAL ADDRESS      Y01004
CHAINBUF EQU   *                                                 Y01004
         ICM   R5,EIGHT,PRFTIC-IEDQPRF(R2)  VIRT OR REAL TIC   @XA07478
*                                       VALUE                  @XA07478
         ST    R5,PRFTIC-IEDQPRF(R2)    UPDATE ENTIRE TIC CCW  @XA07478
*                                          LAST UNIT OF PREVIOUS X01004
*                                          BUFFER OR TIC OF      X01004
*                                          CHANNEL PGM. IN LCB.  X01004
         TM    PRFTIC-IEDQPRF(R2),CCWREAL CHAN PGM ACTIVE?           VM
         BNO   NOVIRT                   NO,BRANCH                    VM
         L     R15,AVTSAVTP             SECONDARY AVT POINTER        VM
         L     R15,SAVTDIAG-IEDNSVTD(0,R15) VM DIAG ROUTINE          VM
         LTR   R15,R15                  IN VM MACHINE ?              VM
         BZ    NOVIRT                   NO,BRANCH                    VM
         ST    R14,AVTSAVE2+TWELVE      SAVE REG 14                  VM
         LA    R0,PRFTIC-IEDQPRF(,R2)   ADDR OF TIC,                 VM
*                                       AN IEDQDA PARAMETER          VM
         ST    RLCB,AVTSAVE2            IEDQDA PARAMETER             VM
         BALR  R14,R15                  LET VM CHANGE REAL TIC       VM
*                                       SAME WAY AS VIRTUAL TIC      VM
*                                       WAS CHANGED                  VM
         L     R14,AVTSAVE2+TWELVE      RESTORE R14
NOVIRT   EQU   *
         TM    LCBCPA+12,XXXUSED+XXXCNCL     CHNL PGM CK AND TRETRY
         BZ    RSETLOCK                 IF NEITHER IS SET,CHANNL Y02027
*                                       PGM TRANSLATION COMPLETE Y02027
         BM    SETR2                    BR IF JUST CNL PGM CK
         SR    R9,R9                    CLEAR FOR ICM.           Y01004
         ICM   R9,AD,LCBLSPCI           GET ADDRESS OF BUFFER TO Y01004
*                                       LINK INTO THE LCB.       Y01004
SETR2    EQU   *
         TM    LCBCHAIN,LCBEXCP         IS THIS A DEVICE WITH    A47126
*              NO WRITE IDLES/SYNC LOOP                          A47126
         BO    RSETLOCK                 IF LOCAL DEVICE, CHANNEL Y02027
*                                       PGM TRANSLATION COMPLETE Y02027
         NI    LCBCPA+12,AVTEFF-XXXUSED-XXXCNCL-CPASTART       @YA12276
*                                       CLEAR REF BITS         @YA08099
         LA    R2,LCBCPA                INITIALIZE
         BR    RDCB                     BRANCH TO "SETBFTIC" IF  Y01004
*                                       REAL ADDRESSES HAVE NOT  X01004
*                                       BEEN INSERTED IN UNITS   X01004
*                                       BRANCH TO "ENDLOOPR" IF  Y01004
*                                          REAL ADDRS HAVE BEEN  X01004
*                                          INSERTED.             X01004
TWOXX    DC    X'02'                    MASK FOR EXECUTED TM     Y01004
         DS    0H                       BOUNDARY ALIGNMENT.      Y01004
RSETLOCK EQU   *                                                 Y02027
         STM   R11,R14,AVTSAVE2         SAVE REGISTERS USED BY   Y02027
*                                       SETLOCK ROUTINE          Y02027
         LR    R15,RAVT                 SAVE AVT ADDRESS         Y02027
RSETASSC SETLOCK RELEASE,TYPE=LOCAL,RELATED=CHANNEL PROGRAM,           X
               IEDQGA(SETASSC)
         LR    RAVT,R15                 RESTORE AVT ADDRESS      Y02027
         LM    R11,R14,AVTSAVE2         RESTORE REGISTERS USED   Y02027
*                                       BY SETLOCK ROUTINE       Y02027
         MODESET EXTKEY=TCAM
*                                       RESET KEY TO TCAM'S KEY  Y02027
         MODESET MODE=PROB
*                                       RESET TO PROBLEM PROGRAM Y02027
*                                       MODE                     Y02027
         TM    LCBCHAIN,LCBEXCP         IS THIS A LOCAL DEVICE   Y02027
         BO    NOLOCAL                  YES BRANCH             @ZA00219
         CLI   LCBINCAM,AVTEFF          EXCP NEEDED             OY00507
         BCR   NOTEQ,R8                 NO, RETURN              OY00507
         MVI   LCBINCAM,AVTEZERO        RESET EXCP INDICATOR    OY00507
         B     BFREXCP                  GO DO EXCP              OY00507
NOLOCAL  EQU   *                                               @ZA00219
         TM    LCBCPA+12,XXXUSED        CHANNEL PROGRAM CHECK
         BCR   NO,R8                    BRANCH NO.               A47126
         LR    R2,R9                    SET BFR ADDR FOR EXCP    A47126
         SPACE
         CLI   LCBCPA+ONESIX,OBAKER     SELECT CMD PRESENT?      S99228
         BE    YESOB                    YES, 3270 LOCAL DEVICE   S99228
         CLI   LCBCPA+ONESIX,EAUCOM     3270 EAU COMMAND?        S99228
         BE    NOOBAKER                 BRANCH YES               S99228
         TM    LCBCHAIN,LCBSCRNN        SCREEN REQUEST FOR 2260? S99228
         BNO   BFREXCP                  BRANCH IF NO             S99228
         B     DYNEXCP                  PERFORM EXCP            OX03966
YESOB    EQU   *                                                 S99228
         L     R2,LCBLSPCI-1            SET LCBSTART TO FIRST  @YA12276
*                                       BUFFER                 @YA12276
         ST    R2,LCBCPA+TWOFOUR        SET BUFFER ADDR IN TIC   S99228
         MVI   LCBCPA+TWOFOUR,XXXTIC    SET TIC OPCODE IN TIC    S99228
NOOBAKER EQU   *                                                 S99228
         TM    PRFSTAT1-IEDQPRF(R9),PRFNLSTN  LAST BUFFER       SA59970
         BCR   ONE,R8                   NO RETURN               SA59970
DYNEXCP  EQU   *                                                OX03966
         SPACE
         LA    R2,LCBCPA+ONESIX         ADDR OF SELECT, NO-OP OR S99228
*                                         MODIFIED WRITE
BFREXCP  EQU   *
         NI    LCBCPA+12,AVTEFF-XXXUSED-XXXCNCL-CPASTART       @YA12276
*                                       RESET CPC BIT          @YA08099
         NI    LCBCHAIN,AVTEFF-LCBSCRNN RESET SCREEN REQUEST BIT
         NI    SCBERR1,AVTEFF-SCBNOBFN  RESET INSUFFICIENT BUF @OS77863
         STCM  R2,AD,LCBSTART           SET START ADDRESS.       X01004
         LA    R1,LCBFLAG1              IOB ADDR
         EXCPVR (1),SUBSYS                                       X01004
         BR    R8                       EXIT
         SPACE 3
*        THIS SUBROUTINE SETS UP CCW'S TO READ OR WRITE WITH
*        THE PROPER FLAGS SET (PCI, SLI, DC)
         SPACE 1
*        PCI OPTIONS ARE DEFINED AS FOLLOWS IN THE DCB.
*        BL1'00001000'                  PCI RCV = N -- NO PIC
*        BL1'00000010'                  PCI RCV = R -- FREE ONLY
*        BL1'00100000'                  PCI RCV = A -- ADD BFRS
*        BL1'10000000'                  PCI RCV = X -- ADD ONLY  S22025
*        BL1'00000100'                  PCI SND = N
*        BL1'00000001'                  PCI SND = R -- FREE ONLY
*        BL1'00010000'                  PCI SND = A -- ADD BFRS
*        BL1'01000000'                  PCI SND = X -- ADD ONLY  S22025
         SPACE 2
SETCCWS  EQU   *
         XC    AVTDOUBL+2(3),AVTDOUBL+2 CLEAR WORK AREA
         MVI   AVTDOUBL+3,CCWCD+CCWSLI  SET CCW FLAGS
         TM    LCBSTAT1,LCBSENDN        LINE SENDING
         BNO   BUILDRD                  BR NO
         MVI   AVTDOUBL,XXXWRITE
         TM    DCBPCI,XXXPCISD          PCI ON SEND SPECIFIED
         BNZ   SETPCI                   BR YES
NOPCI    EQU   *
         MVI   AVTDOUBL+1,XXXDCH+XXXSLI
         BR    R14                      RETURN
         SPACE 1
BUILDRD  EQU   *
         MVI   AVTDOUBL,XXXREAD
         TM    LCBTSOB,LCBTSBUF         NON-TSO NEVER USE INHIBIT READ
         BZ    BUR                      CHECK FOR PCI SPECIFIED
         TM    LCBTSOB,LCBINHBN+LCB2741N CAN WE USE RD INHIBIT?     TSO
         BZ    BUR                      NO CHECK PCI                TSO
         MVI   AVTDOUBL,XXXINHIB        YES, MOVE IT INTO THE AVT   TSO
BUR      EQU   *                        CHECK FOR PCI SPECIFIED     TSO
         CLI   LCBRSKEY,LRSCHED         LOCAL RECEIVE SCHEDULER? S99228
         BNE   REGPCI                   NO LOCAL -NORMAL PCI SET S99228
         L     R2,LCBDCBPT              LOAD DCB POINTER         S99228
         L     R2,DCBDEBAD-IHADCB(R0,R2)    LOAD DEB ADDR        S99228
         L     R2,DEBUCBAD-DEBNMSUB(R0,R2)  LOAD UCB ADDR        S99228
         LA    R2,ONESIX(R0,R2)         INDEX TO UCBTYP FIELD    S99228
         CLI   THREE(R2),DEV2260        2260 DEVICE             OX05279
         BE    REGPCI                   YES, SET PCI            OX05279
         L     R3,LCBINVPT-ONE          LOAD INVLIST ADDR        S99228
         MVC   AVTDOUBL(ONE),ZEERO(R3)  SET READ COMMAND         S99228
         TM    DCBPCI,APCIRCV           A TYPE PCI ON RECEIVE?   S99228
         BO    NOPCI                    BRANCH IF YES - DON'T SETY01948
*                                       PCI FLAG FOR 3270 LOCAL. Y01948
REGPCI   EQU   *                                                 S99228
         TM    DCBPCI,XXXPCIRV           PCI ON RECV SPECIFIED
         BZ    NOPCI                    BR NO
SETPCI   EQU   *
         MVI   AVTDOUBL+1,XXXDCH+XXXSLI+XXXPCI
*                       SET FLAGS WITH PCI
         BR    R14                      RETURN
         SPACE 3
*        THIS SUBROUTINE BUILDS CCWS IN THE FIRST 3 WORDS OF THE
*        BUFFER - ALL UNITS - AND WILL SET UP READ/WRITE COMMAND
*        CODE, THE ADDRESS TO START, FLAGS, COUNTS, AND THE TIC
*        TO THE NEXT UNIT IF THERE IS ONE.
         SPACE 2
BLDCCWS  EQU   *
         LA    R15,AVTDOUBL+1
         LH    R11,AVTKEYLE             LENGTH OF A UNIT - 12 BYTES
         SR    R7,R7
         IC    R7,PRFNBUNT              NO. UNITS THIS BUFFER
         TM    PRFSTAT1,PRFCNCLN        IS THIS EOB RESTATR
         BO    EOBRETRY                 BR YES TO EOB ERROR
        LA    R2,PRFSHDR
         LA    R0,AVTHDRSZ
         TM    PRFSTAT1,PRFNHDRN        IS THIS A HDR
         BNO   FLAGS                    BR YES
         LA    R2,PRFSTXT               ADDR TO START TD WR
         LA    R0,AVTTXTSZ              LENGTH- TXT PRF SIZE = CNT
FLAGS    EQU   *                        *
         SR    R11,R0                   SUBTRACT LENGTH
         SR    R0,R0                    CLEAR FOR IC.            Y01004
         TM    LCBTSOB,LCBTSBUF         TSO BUFFER               X02004
         BO    NOIDLES                  BRANCH IF YES - NO IDLES X02004
         TM    LCBSTAT1,LCBSENDN        IS LINE SENDING          Y01004
         BNO   RCVIDLE                  BRANCH IF NO.            Y01004
         TM    PRFSTAT1,PRFNHDRN        IS IT A HEADER BUFFER    Y01004
         BO    NOIDLES                  BRANCH IF NO - NO IDLES. Y01004
         IC    R0,LCBISZE               GET IDLES COUNT FROM LCB Y01004
         B     ADDSIZE                  GO ADD IT TO START ADDR. Y01004
RCVIDLE  EQU   *                        LINE NOT SENDING.        Y01004
         IC    R0,DCBRESER+ONE          GET IDLES COUNT FROM DCB Y01004
*                                       (ASSUME TEXT BUFFER).    Y01004
ADDSIZE  EQU   *                        ADD IT
         AR    R2,R0                    ADD NO IDLES TO ADDRESS
         SR    R11,R0
NOIDLES  EQU   *                                                 Y01004
         IC    R1,AVTDOUBL              OP CODE
         TM    LCBSTAT1,LCBSENDN        SEND OPERATION
         BNO   SETADDR                  IF NOT SEND - NO SCREEN
         TM    LCBCHAIN,LCBSCRNN        SCREEN FUNCTION NEEDED
         BNO   SETADDR                  BR NO
         TM    PRFSTAT1,PRFNHDRN        IS THIS A HEADER        SA61743
         BO    SETADDR                  NO, USE CURRENT OP CODE SA61743
         IC    R1,PRFKEY                GET NEW OP CODE
SETADDR  EQU   *                        GET BUFFER ADDRESS
         ST    R2,PRFIOADR-1            STORE IN BUFFER PREFIX
         LR    R3,RPREFIX               SAVE ADDRESS
         B     FLAGS2                   BUILD BUFFER PREFIX
*
ADDUNITS EQU   *                        *
         MVI   PRFTIC-IEDQPRF(R3),XXXTIC SET UP FOR TIC
         L     R3,PRFTIC-IEDQPRF(R3)    PICK IT UP
         LA    R2,PRFSUNIT-IEDQPRF(R3)  ADDR TO START RD WR
         LA    R15,AVTDOUBL+3           SET FOR CCW FLAGS
         LH    R11,AVTKEYLE             GET KEY LENGTH
         B     STORE2                   SET UP PRF
*
EOBRETRY EQU   *                        RETRY
         OI    LCBCPA+12,XXXCNCL        SET EOBRETRY FLAG
         LR    R2,RPREFIX               BUFFER ADDRESS
         L     RSCB,LCBSCBA-1           ADDR OF SCB
         LH    R0,PRFSIZE               GET BUFFER LENGTH        S22025
         BCTR R0,0                      SET ONE CHAR TO BE SENT  S22025
         CLC   SCBEOB(2),PRFSIZE        RECALLED SHORTER THAN ORGS22025
         BH    TRUEOB                   YES, USE ONE CHAR COUNT  S22025
         LH    R0,SCBEOB                COUNT TO EOB
TRUEOB   EQU   *                                                 S22025
         CH    R0,AVTKEYLE              MORE THAN 1 UNIT
         BNL   SKIPBCT                  NOT LOW DON'T DECREMENT
         LA    R2,AVTUMALN(R2)          UPDATE
         B     ADDSIZE                  ADD NO IDLES TO ADDRESS
*
SUBTR1   EQU   *                        *
         BCT   R7,MOREUNIT              BRANCH IF MORE UNITS   @OX12526
         B     CPC                      OUT OF BUFFERS         @OX12526
MOREUNIT EQU   *                                               @OX12526
         L     R2,PRFTIC-IEDQPRF(R2)      TIC ADDR
         SH    R0,AVTKEYLE
SKIPBCT    EQU   *
* COPY WRITE IDLES OR READ SKIP CCW INTO BUFFER.                 X01004
         MVC   PRFOPCDE-IEDQPRF(EIGHT,R2),LCBCPA                 X01004
         SR    R1,R1                    CLEAR FOR IC.            X01004
         L     RDCB,DCBSCTAD-ONE        RDCB = ADDRESS OF SCT.   X01004
* ASSUME WRITE IDLES, SINCE READ HAS SKIP FLAG ON ANYWAY.        X01004
         IC    R1,THREE(,RDCB)          R1 = OFFSET OF IDLES IN  X01004
*                                          SCT.                  X01004
         LA    R1,ONE(R1,RDCB)          R1 = VIRTUAL ADDRESS OF  X01004
*                                          IDLES.                X01004
         STCM  R1,AD,PRFIOADR-IEDQPRF(R2)  PUT ADDRESS OF IDLES  X01004
*                                          INTO CCW.             X01004
         NI    PRFFLAGS-IEDQPRF(R2),AVTEFF-CCWCC  SET OFF COM-   X01004
*                                          MAND CHAINING IN CCW. X01004
         L     RDCB,LCBDCBPT            RESTORE DCB POINTER.     X01004
         MVI   PRFTIC-IEDQPRF(R2),CCWTIC
         CH    R0,AVTKEYLE
         BNL   SUBTR1                   BRANCH FOR NEXT UNIT   @OX12526
CPC      EQU   *                                               @OX12526
         LR    R1,R2
         AR    R2,R0                    ADDRESS OF ETB -12
         LA    R2,AVTUMALN(R2)          + 12
         CLC   PRFSIZE(2),SCBEOB        IS EOB THE LAST CHAR. OF BFR
         LR    R3,R1                    UNIT ADDR IN 3
         BE    NOFIX                    BR YES                   S22025
          IC    R1,AVTDOUBL             OP CODE
         SR    R11,R0                   NEW COUNT
STORE2   EQU   *                        *
         ST    R2,PRFIOADR-1-IEDQPRF(R3) STORE IT
FLAGS2   EQU   *                        *
         STH   R11,PRFCOUNT-IEDQPRF(R3) STORE COUNT
         STC   R1,PRFOPCDE-IEDQPRF(R3)  STORE OP CODE
         MVC   PRFFLAGS-IEDQPRF(2,R3),0(R15) MOVE IT
SAMEFLAG EQU   *                                                 S99228
         BCT   R7,ADDUNITS              IS THERE ANOTHER UNIT
         LH    R2,PRFSIZE               SIZE OF DATA
         CLI   AVTDOUBL,XXXWRITE
         BE    SUBTR                    BR IF WRITE
         SPACE 1
         LH    R2,DCBBUFSI              GET BUFFER SIZE
*
SUBTR    EQU   *                        *
         SH    R2,AVTKEYLE              SUBTRACT KEY LENGTH
         BP    SUBTR                    IF HIGH, TRY IT AGAIN
         BZ    NOFIX                    THIS IS THE ONE
         LH    R11,AVTKEYLE
         AR    R2,R11                   ADJUST COUNT OF DATA.    Y01004
         SR    R11,R2                   AMOUNT NOT TO WRITE
         LH    R2,PRFCOUNT-IEDQPRF(R3)   AMOUNT TO WRITE NOW
         SR    R2,R11                   NEW AMOUNT TO WIRTE
         STC    R2,PRFCOUNT+1-IEDQPRF(R3)
NOFIX    EQU   *
         MVI    PRFTIC+3-IEDQPRF(R3),2
         MVI   PRFTIC-IEDQPRF(R3),XXXTIC
         LTR   R9,R9                    DO WE HAVE ONE
         BCR   2,R14                    BRANCH IF SO
         MVI    PRFFLAGS-IEDQPRF(R3),CCWSLI   YES-FLAGS OFF
         LPR   R9,R9                    INSURE POSITIVE VALUE
         BR    R14                      RETURN
         SPACE 2
GDCONC   EQU   *                        CONCENTRATOR CODE.       Y01004
         MODESET MODE=SUP
*                                       GET INTO SUPERVISOR MODE Y02027
         MODESET EXTKEY=SUPR
*                                       GET INTO SUPERVISOR KEY  Y02027
         L     R14,AVTSAVTP             SECONDARY AVT POINTER    Y05331
         L     R14,SAVTDIAG-IEDNSVTD(0,R14)  VM DIAGNOSE ROUTINE Y05331
         LR    R0,R14                   SAVE DIAGNISE ROUTNE ADDRY05331
         STM   R11,R14,AVTSAVE2         SAVE REGISTERS USED BY   Y02027
*                                       SETLOCK ROUTINE          Y02027
         LR    R15,RAVT                 SAVE AVT ADDRESS         Y02027
SETCONC  SETLOCK OBTAIN,TYPE=LOCAL,MODE=UNCOND,RELATED=CHANNEL PROGRAM,X
               IGE0004G(SETERP),IGE0004H(SETERP),IGG019QE(SETERP),     X
               IEDQGT(SETTRAN), 'PCI LINEEND AND START I/O APPENDAGES  X
               ARE LOCKED ON THIS REAOURCE THRU THE EXCP PROCESSOR     X
               ISSUING SETLOCK (ERP,BUFFER ASSOCIATION AND TRANSPARENT X
               CCW BUILD MUST ISSUE SETLOCK'
         LR    RAVT,R15                 RESTORE AVT ADDRESS      Y02027
         LM    R11,R14,AVTSAVE2         RESTORE REGISTERS USED   Y02027
*                                       BY SETLOCK ROUTINE       Y02027
         LR    R11,R9                   FIRST BUFFER ADDR IN R11 Y01004
         LA    R2,LCBCPA                ASSUME CURRENT BUFFER IS Y01004
*                                       THE FIRST BUFFER.        Y01004
         NC    LCBLSPCI(3),LCBLSPCI     FIRST TIME             @YA10024
         BNZ   NOTFIRS2                 BRANCH-NO              @YA10024
         MVC   LCBLSPCI(3),AVTPARM+1    SET LAST PCI           @YA10024
NOTFIRS2 EQU   *                                               @YA10024
         CLM   R9,AD,LCBLSPCI           IS CURRENT BUFFER THE    Y01004
*                                       FIRST BUFFER             Y01004
         BE    CHAIN                    BRANCH IF YES            Y01004
         L     R1,LCBLSPCI-1            R1 = ADDR. OF FIRST BUFFEY01004
LOOK     EQU   *                                                 Y01004
         EX    R1,CNCTM                 PREVIOUS UNIT END OF CHN.Y01004
         BO    FOUND                    BRANCH IF YES            Y01004
         LR    R2,R1                    COPY CURRENT UNIT ADDR.  Y01004
         ICM   R1,ALL,PRFTIC-IEDQPRF(R1) ADDRESS OF NEXT UNIT    Y01004
         BNM   LOOK                     BRANCH IF TIC IS VIRTUAL Y01004
         LA    R1,0(,R1)                CLEAR HIGH ORDER FOR VS2 Y01004
         L     R15,CVTADDR              CVT ADDRESS              Y01004
         L     R15,CVTPTRV(,R15)        REAL TO VIRTUAL SUBROUT  Y01004
*                                       FROM CVT.                Y01004
         BALR  R14,R15                  CONVERT REAL TO VIRTUAL. Y01004
         B     LOOK                     GO FIND LAST UNIT.       Y01004
FOUND    EQU   *                                                 Y01004
         TM    PRFTIC-IEDQPRF(R2),CCWREAL ARE ADDRS REAL         Y01004
         BZ    INCHAIN                  BRANCH NO - VIRTUAL      Y01004
         LR    R5,R11                   ADDRESS OF FIRST UNIT.   Y01004
CONCLOOP EQU   *                                                 Y01004
         L     R1,PRFOPCDE-IEDQPRF(,R5)  GET VIRTUAL I/O ADDRESS Y01004
         LRA   R1,NILL(,R1)             MAKE IT A REAL ADDRESS.  Y01004
         STCM  R1,AD,PRFIOADR-IEDQPRF(R5)  PUT REAL ADDR IN UNIT Y01004
         TM    PRFFLAGS-IEDQPRF(R5),CCWCC+CCWCD CHAINING SET     Y01004
         BZ    TICTO                    BRANCH NO DO NOT SET TIC Y01004
         OI    PRFTIC-IEDQPRF(R5),CCWREAL SET REAL OP CODE       Y01004
         L     RDCB,PRFTIC-IEDQPRF(,R5) SAVE VIRTUAL TIC ADDRESS Y01004
         LRA   R1,NILL(,RDCB)           MAKE TIC ADDRESS REAL.   Y01004
         STCM  R1,AD,PRFTIC+1-IEDQPRF(R5) SET REAL ADDR          Y01004
         LR    R5,RDCB                  GET VIRTUAL ADDRESS OF   Y01004
*                                       NEXT UNIT.               Y01004
         EX    R5,CNCTM                 END OF BUFFER CHAIN      Y01004
         BZ    CONCLOOP                 BRANCH NO - CONTINUE     Y01004
TICTO    EQU   *                                                 Y01004
         TM    PRFTIC-IEDQPRF(R2),CCWREAL ARE ADDRS REAL         Y01004
         BZ    INCHAIN                  BRANCH NO - USE VIRTUAL  Y01004
         LRA   R11,0(,R11)              CONVERT TO REAL          Y01004
INCHAIN  EQU   *                                                 Y01004
         STCM  R11,AD,PRFTIC+1-IEDQPRF(R2)  CHAIN BUFFER         Y01004
*                                       CHANNEL PROGRAM          Y01004
         TM    PRFTIC-IEDQPRF(R2),CCWREAL IS CHAN PROG ACTIVE?       VM
         BZ    CHAIN                    NO,BRANCH                    VM
         L     R15,AVTSAVTP             SECONDARY AVT PTR            VM
         L     R15,SAVTDIAG-IEDNSVTD(0,R15) VM DIAG ROUTINE          VM
         LTR   R15,R15                  IN VM MACHINE ?              VM
         BZ    CHAIN                    NO,BRANCH                    VM
         LR    R5,R14                   SAVE REG 14                  VM
         LA    R0,PRFTIC-IEDQPRF(,R2)   TIC ADDR,IEDQDA PARAMETER    VM
         ST    RLCB,AVTSAVE2            CURRENT LCB ADDR  ''         VM
         BALR  R14,R15                  LET VM CHANGE REAL TIC       VM
*                                       SAME WAY AS VIRTUAL TIC      VM
*                                       WAS CHANGED                  VM
         LR    R14,R5                   RESTORE REG 14               VM
CHAIN    EQU   *                                                 Y01004
         L     R5,LCBSCBDA-ONE          GET LINE SCB ADDRESS.    Y01004
         TM    SCBSTAT1-IEDQSCB(R5),SCBNIDLE  ARE WE READY TO    Y01004
*                                       LINK BUFFERS TO WRITE    Y01004
*                                       IDLES LOOP               Y01004
         BO    RESETLOK                 IF NO, RESET LOCAL LOCK  Y02027
         LA    R2,LCBCPA                ADDR OF WRITE IDLES LOOP Y01004
         LR    R1,R2                    COPY IT INTO R1.         Y01004
         TM    LCBCPA+FOUR,CCWCC+CCWCD  IS WRITE IDLES LOOP REAL Y01004
         BNO   CHKLOOP                  BRANCH IF NO.            Y01004
         LRA   R1,NILL(,R2)             MAKE LCBCPA ADDRESS REAL Y01004
CHKLOOP  EQU   *                                                 Y01004
         CLM   R1,AD,LCBCPA+NINE        DOES WRITE IDLES LOOP    Y01004
*                                       TIC TO A BUFFER OR TO    Y01004
*                                       ITSELF                   Y01004
         BNZ   RESETLOK                 RESET LOCAL LOCK IF IT   Y02027
*                                       TIC'S TO A BUFFER.       Y01004
         ICM   R11,AD,LCBLSPCI          GET ADDR. OF 1ST BUFFER. Y01004
         ICM   R9,AD,AVTFZERO           CLEAR CURRENT BUFFER ADDRY01004
         NI    LCBCPA+12,AVTEFF-XXXUSED-XXXCNCL-CPASTART       @YA12276
*                                       CLEAR RET BITS         @YA08099
         B     FOUND                    GO CHAIN IN BUFFER(S).   Y01004
CNCTM    TM    CCTWO,0                  TEST FOR END OF CHAIN    Y01004
CCTWO    DC    X'02'                    FOR EXECUTED TM          Y01004
         SPACE
RESETLOK DS    0H                                                Y02027
         LR    R15,RAVT                 SAVE AVT ADDRESS         Y02027
         STM   R11,R14,AVTSAVE2         SAVE REGISTERS USED BY   Y02027
*                                       SETLOCK ROUTINE          Y02027
RSETCONC SETLOCK RELEASE,TYPE=LOCAL,RELATED=CHANNEL PROGRAM,           X
               IEDQGA(SETCONC)
         LR    RAVT,R15                 RESTORE AVT ADDRESS      Y02027
         LM    R11,R14,AVTSAVE2         RESTORE REGISTERS USED   Y02027
*                                       BY SETLOCK ROUTINE       Y02027
         MODESET EXTKEY=TCAM
*                                       REAET KEY TO TCAM'S KEY  Y02027
         MODESET MODE=PROB
*                                       RESET TO PROBLEM PROGRAM Y02027
*                                       MODE                     Y02027
         L     R5,LCBSCBDA-ONE          GET LINE SCB ADDRESS.    Y01004
         SR    R1,R1                    CLEAR FOR IC.            S22026
         IC    R1,AVTCSCH               GET OFFSET TO IEDQGH.    S22026
         L     R8,AVTMSGS-ONE           GET POINTER TO OPTIONAL  S22026
*                                       VCON TABLE.              S22026
         L     R8,NILL(R1,R8)           GET ADDRESS OF IEDQGH.   S22026
         AH    R8,FOUR(,R8)             ADD OFFSET TO SCBEOB     Y01004
*                                       SAVE AREA WITHIN IEDQGH. Y01004
         LH    R1,NILL(,R8)             GET NEW SCBEOB OFFSET    Y01004
*                                       SAVED IN IEDQGH.         Y01004
         AH    R1,SCBCTBAC              ADD AMOUNT OF DATA       Y01004
*                                       INSERTED.                Y01004
         STH   R1,SCBEOB                UPDATE SCBEOB.           Y01004
         XC    SCBCTBAC,SCBCTBAC        CLEAR COUNT OF DATA      Y01004
*                                       INSERTED.                Y01004
         XC    NILL(TWO,R8),NILL(R8)    CLEAR SCBEOB OFFSET IN   Y01004
*                                       IEDQGH.                  Y01004
         NI    SCBSTAT1-IEDQSCB(R5),AVTEFF-SCBCBGN  RESET CONC.  Y01004
*                                       MESSAGE BEGIN FLAG.      Y01004
         NI    SCBCTBFL,AVTEFF-SCBCTBND  RESET CTB END FLAG.     Y01004
         NI    SCBQTYPE-IEDQSCB(R5),SCBCONC  RESET TEMPORARY     Y01004
*                                       CONCENTRATOR FLAG IN     Y01004
*                                       LINE SCB.                Y01004
         L     R11,AVTEA                GET DISPATCHER ADDRESS.  Y01004
         MVI   LCBPCILK,ZEERO           CLEAR PCI LOCK FOR MP    Y02027
         B     DSPDISP                  EXIT TO DISPATCHER.      Y01004
SETUP    EQU   *                                               @YA10024
         NC    LCBLSPCI(3),LCBLSPCI     FIRST TIME             @YA10024
         BCR   7,R8                     BRANCH-NO              @YA10024
         MVC   LCBLSPCI(3),AVTPARM+1    SET LAST PCI           @YA10024
         BR    R8                       RETURN                 @YA10024
         SPACE 3
PCIADDXR EQU   X'80'                    PCI = X ON RECEIVE       S22025
BASE     DC    A(BFRREQ)                BASE OF MODULE
WRTCOM   DC    X'01'                    WRT CMD FOR 3270         S99228
         DROP  RPREFIX                                         @G36XRPV
         EJECT
         TITLE '''IEDQGA02'' -  BUFFER STEAL ROUINE'           @G36XRPV
IEDQGA02 DS    0H                                              @G36XRPV
***********************************************************************
*                                                                     *
* MODULE NAME        IEDQGA02                                         *
* DSCRIPTIVE NAME    BUFFER STEAL ROUTINE                             *
* COPYRIGHT          NONE                                             *
* STATUS             VERSION I.0 CHANGE LEVEL 10                      *
*                                                                     *
* FUNCTION  THIS ROUTINE IS LINKED TO BY TCAM MODULES WHICH REQUIRE   *
*   BUFFERS WITHOUT POSTING AN ERB TO THE BUFFER REQUEST QUEUE.       *
*           THE NUMBER OF UNITS/BUFFER ARE PASSED IN REISTER 0 AND    *
*   THE NUMBER OF BUFFERS IN REGISTER 1.  IF THE REQUESTED AMOUNT     *
*   OF UNITS ARE NOT AVAILABLE, A BAD RETURN CODE IS PASSED.  EACH    *
*   BUFFER HAS PRFNBUNT, PRFNHDRN, PRFNLSTN, PRFLINK, AND PRFTIC      *
*   SET TO THE APPROPRIATE VALUE.  THE LAST UNIT OF EACH BUFFER HAS   *
*   AN INVALID LINK FIELD TO THE NEXT UNIT.                           *
*                                                                     *
* REGISTER CONVENTIONS: SEE EQUATES                                   *
*                                                                     *
* ENTRY POINT: IEDQGA02                                               *
*                                                                     *
* LINKAGE: LINKED TO VIA USE OF ADDRESS IN AVT (AVTSTEAL)             *
*                                                                     *
* INPUT:  R0  NUMBER OF UNITS PER BUFFER                              *
*         R1  NUMBER OF BUFFER REQUIRED                               *
*         R13 REG SAVE AREA ADDRESS                                   *
*         R14 RETURN ADDRESS                                          *
*         R15 ROUTINE ADDRESS                                         *
*                                                                     *
* OUTPUT: ALL REGISTER ARE RESTORED EXCEPT FOR R15                    *
*         R15 = ADDRESS OF BUFFER CHAIN REQUESTED                     *
*             = 0 IF NUMBER OF UNITS REQUESTED ARE NOT AVAILABLE      *
*                                                                     *
* EXIT:   NORMAL - R14                                                *
*                                                                     *
* ROUTINES: NONE                                                      *
*                                                                     *
* CONTROL BLOCKS: AVT, TCX, QCB, PRF                                  *
*                                                                     *
***********************************************************************
         EJECT
*R0      EQU   0                        NUM OF UNITS PER BUFF  @G36XRPV
*R1      EQU   1                        NUMBER OF BUFFERS      @G36XRPV
RUNT     EQU   2                        ADDRESS TO CURRENT UNIT@G36XRPV
RUNTP    EQU   3                        ADDRESS TO PREVIOUS UNT@G36XRPV
RUNTC    EQU   4                        COUNTER FOR NUM OF UNTS@G36XRPV
RBUF     EQU   5                        ADRESS TO CURRENT BUFF @G36XRPV
RBUFP    EQU   6                        ADRESS TO PREVIOUS BUFF@G36XRPV
*R6      EQU   6                        WORK REG               @G36XRPV
RBUFC    EQU   7                        CNT FOR NUMBER OF BUF  @G36XRPV
*R7      EQU   7                        WORK REG               @G36XRPV
RRQCB    EQU   8                        ADDRESS TO QCB         @G36XRPV
RRAVT    EQU   8                        ADDRESS TO AVT         @G36XRPV
RTCX     EQU   8                        ADDRESS TO TCX         @G36XRPV
R13      EQU   13                       REG SAVE AREA ADDR     @G36XRPV
*R14     EQU   14                       RETURN ADDR            @G36XRPV
RR15     EQU   15                       RETURN CODE OR BUF ADDR@G36XRPV
         SPACE 1                                               @G36XRPV
ADDR     EQU   7                        ADDRESS INDICATOR      @G36XRPV
         EJECT                                                 @G36XRPV
         USING IEDQGA02,RBASE                                  @G36XRPV
         STM   14,12,12(R13)            SAVE REGISTERS         @G36XRPV
         LR    RBASE,RR15               SET BASE               @G36XRPV
IEDQGA02 IEDHJN START                   IDENTIFICATION MACRO   @G36XRPV
         SPACE 1                                               @G36XRPV
*                                                              @G36XRPV
*        GET AVT ADDRESS                                       @G36XRPV
*                                                              @G36XRPV
         L     RTCX,CVTADDR             GET TCX ADDR           @G36XRPV
         L     RTCX,AVTCVTPT(RTCX)       VIA CVT               @G36XRPV
         USING IEDQTCX,RTCX                                    @G36XRPV
         L     RRAVT,TCXAVT             GET AVT ADDR FROM TCX  @G36XRPV
         DROP  RTCX                                            @G36XRPV
         SPACE 1                                               @G36XRPV
*                                                              @G36XRPV
*        CHECK AVAILABILTY OF UNITS                            @G36XRPV
*                                                              @G36XRPV
         DROP  RAVT                                            @G36XRPV
         USING IEDQAVTD,RRAVT                                  @G36XRPV
         SLR   RR15,RR15                SET ERROR RETURN CODE  @G36XRPV
         LR    R7,R0                    R6 = NO. UNIT/BUFFER   @G36XRPV
         MR    R6,R1                    R7 = TOTAL UNITS       @G36XRPV
         LTR   R6,R6                    IF TOTAL IS NEG OR TOO @G36XRPV
         BNZ   RSETNLST                 BIG, GIVE BAD RTN CODE @G36XRPV
         LH    R6,AVTAVFCT              R6 = NUM OF FREE UNITS @G36XRPV
         SR    R6,R7                    IF NUM REQ IS GREATER  @G36XRPV
         BNP   RSETNLST                  THAN AVAIL BUFF MINUS @G36XRPV
         CH    R6,AVTDSKCT               NUM OF CPB, GIVE BAD  @G36XRPV
         BL    RSETNLST                  RETURN CODE           @G36XRPV
         SPACE 1                                               @G36XRPV
*                                                              @G36XRPV
*        GET ADDRESS OF FIRST FREE UNIT                        @G36XRPV
*                                                              @G36XRPV
         STH   6,AVTAVFCT               UPDATE AVAILABLE UNITS @G36XRPV
         LA    RRQCB,AVTBFREB           GET ADDR TO BUFFER POOL@G36XRPV
         DROP  RRAVT                                           @G36XRPV
         USING IEDQQCB,RRQCB                                   @G36XRPV
         ICM   RR15,ADDR,QCBELCHN       GET ADDR TO 1ST FREE UT@G36XRPV
         EJECT                                                 @G36XRPV
*                                                              @G36XRPV
*        BUILD THE BUFFER CHAIN                                @G36XRPV
*                                                              @G36XRPV
         LR    RUNT,RR15                UPDATE UNIT ADDR REG   @G36XRPV
         LR    RBUFC,R1                 UPDATE BUFFER CTR REG  @G36XRPV
         SR    RBUFP,RBUFP              INITIAL PREV UNT ADDR  @G36XRPV
CHKBCNT  EQU   *                                               @G36XRPV
         BAL   R14,GETBUF               GO RETREIVE A BUFFER   @G36XRPV
         USING IEDQPRF,RBUF                                    @G36XRPV
         STC   R0,PRFNBUNT              STORE NUMBER OF UNITS  @G36XRPV
         SR    R14,R14                  ZERO REGISTER          @G36XRPV
         STH   R14,PRFSRCE              CLEAR PRFSRCE          @G36XRPV
         STH   R14,PRFSIZE              CLEAR PRFSIZE          @G36XRPV
         MVI   PRFSTAT1,PRFNHDRN+PRFNLSTN NOT A HDR BUFFER OR T@G36XRPV
*                                           LAST BUFFER        @G36XRPV
         DROP  RBUF                                            @G36XRPV
         SPACE 1                                               @G36XRPV
         LTR   RBUFP,RBUFP              DOES A PREV BUF EXIST  @G36XRPV
         BZ    RSETBUFP                 IF NOT, BRANCH         @G36XRPV
         USING IEDQPRF,RBUFP                                   @G36XRPV
         STCM  RBUF,ADDR,PRFLINK        PLACE CURRENT BUF ADDR @G36XRPV
*                                        IN PREV BUFFER HEADER @G36XRPV
         DROP  RBUFP                                           @G36XRPV
RSETBUFP EQU   *                                               @G36XRPV
         LR    RBUFP,RBUF               UPDATE PREV BUF ADDR   @G36XRPV
         BCT   RBUFC,CHKBCNT            BRANCH TO BUILD MORE   @G36XRPV
         SPACE 1                                               @G36XRPV
*                                                              @G36XRPV
*        FINISH REQUEST FOR BUFFERS                            @G36XRPV
*                                                              @G36XRPV
RSETNLST EQU   *                                               @G36XRPV
         L     14,12(R13)               RELOAD REGISTER 14     @G36XRPV
         LM    0,12,20(R13)             REMAINING REGS         @G36XRPV
         BR    R14                      RETURN TO REQUESTOR    @G36XRPV
         EJECT                                                 @G36XRPV
*                                                              @G36XRPV
*        BUILD A BUFFER                                        @G36XRPV
*                                                              @G36XRPV
GETBUF   EQU   *                                               @G36XRPV
         LR    RBUF,RUNT                INIT ADDR TO BUFFER    @G36XRPV
         LR    RUNTC,R0                 SET UNIT COUNTER       @G36XRPV
CHKUCNT  EQU   *                                               @G36XRPV
         USING IEDQPRF,RUNT                                    @G36XRPV
         MVC   QCBELCHN,PRFLINK         UPDATE UNIT FREE QCB   @G36XRPV
         DROP  RUNT                                            @G36XRPV
         LR    RUNTP,RUNT               UPDATE PREV UNIT ADDR  @G36XRPV
         USING IEDQPRF,RUNTP                                   @G36XRPV
         ICM   RUNT,ADDR,PRFLINK        UPDATE CURR UNIT ADDR  @G36XRPV
         XC    PRFLINK,PRFLINK          INITIALIZE BUF LINKAGE @G36XRPV
         ST    RUNT,PRFTIC              SET UNIT LINKAGE       @G36XRPV
         MVI   PRFTICC,PRFTICON         SET TIC COMMAND        @G36XRPV
         BCT   RUNTC,CHKUCNT            DECREMENT UNIT COUNTER @G36XRPV
*                                        AND BRCH IF MORE REQ  @G36XRPV
MAKTIC02 EQU   *                                               @G36XRPV
         MVC   PRFTIC,TIC02             MAKE UNIT LINK INVALID @G36XRPV
         DROP  RUNTP                                           @G36XRPV
         BR    R14                      RETURN TO MAIN ROUTINE @G36XRPV
         DS    0F .                                            @G36XRPV
TIC02    DC    XL4'08000002' .          INVALID TIC VALUE      @G36XRPV
         EJECT
******** DSECTS ********
         SPACE 3
         TPRIOR
         EJECT
         IHAPSA
         EJECT
         TCCWD
XXXDCH   EQU   CCWCD
XXXSLI   EQU   CCWSLI
XXXPCI   EQU   CCWPCI
XXXTIC   EQU   CCWTIC
XXXWRITE EQU   CCWWRITE
XXXREAD  EQU   CCWREAD
         EJECT
         DCBD  DSORG=TX
         EJECT
         TQCBD
         EJECT
         TDISPD
         EJECT
         TPRFD
         EJECT
         TLCBD
         EJECT
         TSCBD
         EJECT                                                 @G36XRPV
         TTCXD                                                 @G36XRPV
         EJECT
         TAVTD
         TDEBD                                                   S99228
         END
