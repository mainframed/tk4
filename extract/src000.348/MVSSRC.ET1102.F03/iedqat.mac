AT01     TITLE '''IEDQAT'' -- ERROR MESSAGE ROUTINE'
IEDQAT   CSECT
         SPACE 3
* CHANGE ACTIVITY AS FOLLOWS
******************** MICROFICHE FLAGS *********************** SUPT CODE
*C238000                                                         A42411
*A312000,323600                                                  A42411
*D724000-752000                                                  A42411
*A496000                                                       @SA71533
*D300000-304000                                                @SA71533
*A720000                                                       @OX12500
*A194000,313500,468000,832000                                  @Y17XANQ
*C276000,380000-388000,424000-432000                           @Y17XANQ
*D588000-592000,756000-760000                                  @Y17XANQ
*A292000,782400                                                @OY19844
*A313500,314400                                                @OY20756
         SPACE
***********************************************************************
*  MODULE NAME = IEDQAT                                               *
*                                                                     *
*  DESCRIPTIVE NAME = ERROR MESSAGE ROUTINE                           *
*                                                                     *
*  COPYRIGHT = 'NONE'                                                 *
*                                                                     *
*  STATUS:  VERSION 10.0                                       @Y17XARX
*                                                                     *
*FUNCTION -- BUILDS AN ERROR MESSAGE IN THE BUFFER AND POSTS THE      *
*   BUFFER TO THE DESTINATION.                                        *
*                                                                     *
*   ON ENTRY,  THE ROUTINE DETERMINES IF THIS MESSAGE ALREADY CON-    *
*   TAINS AN ERROR MESSAGE.  IF SO,  THE FUNCTION IS NOT PERFORMED.   *
*   EXIT IS MADE BY POSTING THE ERB    BACK TO BUFFER DISPOSITION.    *
*                                                                     *
*   THE LENGTH OF THE ERROR MESSAGE IS ACCESSED FROM THE PARAMETER    *
*   LIST OR,  IF THAT BYTE IS ZERO,  FROM THE FIRST BYTE OF THE       *
*   ERROR MESSAGE ITSELF.  IN THE LATTER CASE,  THE LENGTH IS         *
*   STORED IN THE PARAMETER LIST AND THE ADDRESS IN THE PARAMETER     *
*   LIST IS INCREMENTED BY ONE.                                       *
*                                                                     *
*   THE ROUTINE DETERMINES IF THE ERROR MESSAGE WILL FIT BETWEEN      *
*   THE SCAN POINTER (END OF HEADER) AND THE END OF THE BUFFER.       *
*   IF IT WILL NOT,  THE ROUTINE DETERMINES IF IT WILL FIT IN THAT    *
*   SPACE PLUS ONE ADDITIONAL UNIT.  IF IT WILL NOT,  THE ERROR       *
*   MESSAGE IS TRUNCATED TO FIT.                                      *
*                                                                     *
*   AN EMPTY UNIT (IF NEEDED) IS THEN ACCESSED BY POSTING THE ERB     *
*   TO THE BUFFER REQUEST QCB.  ON RETURN THE NEW UNIT IS LINKED      *
*   INTO THE BUFFER.                                                  *
*                                                                     *
*   AFTER THE NEW UNIT IS LINKED IN,  OR IF NO NEW UNIT IS NEEDED,    *
*   A LINK IS MADE TO THE INSERT DATA ROUTINE (IEDQAF) TO INSERT      *
*   THE ERROR MESSAGE INTO THE BUFFER.  IF THE USER HAS SPECIFIED     *
*   A USER-WRITTEN ROUTINE,  A LINK IS MADE TO IT.  EXIT IS THEN      *
*   MADE BY POSTING THE BUFFER TO THE DESTINATION.                    *
*                                                                     *
*   NOTE: THE DESTINATION IS DETERMINED BY THE REDIRECT SUBTASK,      *
*   WHICH IS DISPATCHED FROM BUFFER DISPOSITION AND ENTERS THE        *
*   ERROR MESSAGE VIA A BRANCH AFTER A VALID DESTINATION IS FOUND.    *
*                                                                     *
*ENTRY POINTS,  ERROR MESSAGE ROUTINE --                              *
*       'IEDQAT01' TO BUILD AN ERROR MESSAGE AND POST IT TO THE       *
*   DESTINATION.  THE ROUTINE IS ENTERED BY A BRANCH FROM THE         *
*   REDIRECT SUBTASK.                                                 *
*       'INSERT' TO PERFORM THE LINK TO THE INSERT DATA ROUTINE       *
*   (IEDQAF).  ENTRY IS FROM THE ERROR MESSAGE SUBTASK.               *
*                                                                     *
*ENTRY POINTS,  ERROR MESSAGE SUBTASK --                              *
*       'STCBAT' + 2 WHEN AN EXTRA UNIT IS RETURNED VIA A POST OF     *
*   THE ERB TO AN ERROR MESSAGE QCB BUILT IN THE BUFFER.              *
*                                                                     *
*INPUT,  ERROR MESSAGE ROUTINE --                                     *
*   REGISTER 3 -  SCB ADDRESS                                         *
*                                                                     *
*   REGISTER 4 - LCB ADDRESS                                          *
*                                                                     *
*   REGISTER 6 - BUFFER ADDRESS                                       *
*                                                                     *
*   REGISTER 8 - ADDRESS OF ERROR MESSAGE PARAMETER LIST.             *
*   PARAMETER LIST FORMAT IS:                                         *
*                                                                     *
*        *********************************                            *
*        * INDEX * PARAM * INDEX * INDEX *                            *
*        *  TO   * LIST  *  TO   *  TO   *                            *
*        *   AT  * LNGTH *   AF  *   AO  *                            *
*        *********************************                            *
*        *       *                       *                            *
*        *       *  ADDRESS OF MESSAGE   *                            *
*        *       *                       *                            *
*        *********************************                            *
*        *          ADDRESS OF           *                            *
*        *       USER EXIT ROUTINE       *                            *
*        *           (OPTIONAL)          *                            *
*        *********************************                            *
*                                                                     *
*   REGISTER 11 - ADDRESS OF THE DISPATCHER                           *
*                                                                     *
*   REGISTER 12 - ENTRY POINT ADDRESS AND BASE REGISTER FOR THIS      *
*   ROUTINE.                                                          *
*                                                                     *
*   REGISTER 13 - ADDRESS OF SAVE AREA AND BASE FOR AVT               *
*   ADDRESSABILITY.                                                   *
*                                                                     *
*INPUT,  ERROR MESSAGE SUBTASK --                                     *
*   REGISTER 7 - ADDRESS OF THE ERROR MESSAGE QCB                     *
*                                                                     *
*   REGISTER 8 - ADDRESS OF THE ERROR MESSAGE PARAMETER LIST          *
*                                                                     *
*   REGISTER 11 - ADDRESS OF THE DISPATCHER                           *
*                                                                     *
*   REGISTER 15 - ENTRY POINT ADDRESS AND BASE REGISTER FOR THE       *
*   SUBTASK.                                                          *
*                                                                     *
*   LCB ERB CHAIN FIELD (LCBERBCH) - ADDRESS OF THE NEW UNIT          *
*                                                                     *
*OUTPUT,  EXIT ROUTINE                                                *
*   IF A LU IS CONNECTED, REG 6 CONTAINS THE RH AND REG 7 CONTAINS    *
*   THE SENSE INFO IF PRESENT.                                 @Y17XAMF
*                                                                     *
*OUTPUT,  ERROR MESSAGE SUBTASK --                                    *
*   IN ORDER TO RESET SCBDESTQ WHEN THE PARM LIST INDICATES HEADER=NO,*
*   AN ERB (ATQCB) IS POSTED IN ORDER TO GAIN CONTROL AFTER THE       *
*   BUFFER IS ADDED TO THE POST LIST.  UPON RENTERING IEDQAT          *
*   SCBDESTQ IS UPDATED WITH LCBSTART WHICH WAS SET BY IEDQAZ. @Y17XAMF
*                                                                     *
*OUTPUT,  ERROR MESSAGE SUBTASK --                                    *
*   THE ERROR MESSAGE SUBTASK LINKS THE NEW UNIT INTO THE BUFFER      *
*   AND RE-ENTERS THE ERROR MESSAGE ROUTINE CODE.  THE OUTPUT FROM    *
*   THE SUBTASK IS THE SAME AS THE INPUT FOR THE ROUTINE.             *
*                                                                     *
*OUTPUT,  ERROR MESSAGE ROUTINE --                                    *
*   WHEN EXIT IS TO REQUEST A NEW UNIT,  AN ERROR MESSAGE QCB IS      *
*   BUILT IN THE BUFFER.  THE ADDRESS OF THIS QCB IS SET IN THE       *
*   LCB RETURN-CONTROL QCB FIELD (LCBRCQCB).  THE LCB ERB CHAIN       *
*   FIELD (LCBERBCH) IS CLEARED TO ZEROES AND A REQUEST FOR ONE       *
*   UNIT IS SET IN THE LCB ERB COUNT FIELD (LCBERBCT).                *
*                                                                     *
*EXTERNAL REFERENCES --                                               *
*   'IEDQAF' - INSERT DATA ROUTINE TO INSERT THE ERROR MESSAGE INTO   *
*   THE BUFFER                                                        *
*                                                                     *
*   AVT - ADDRESS VECTOR TABLE                                        *
*                                                                     *
*   BUFFER CURRENTLY BEING PROCESSED                                  *
*                                                                     *
*   LCB - LINE CONTROL BLOCK                                          *
*                                                                     *
*   SCB - STATION CONTROL BLOCK                                       *
*                                                                     *
*EXITS,  NORMAL,  ERROR MESSAGE ROUTINE --                            *
*   THE ERROR MESSAGE REQUESTED DOES NOT FIT INTO THE SPACE AVAIL-    *
*   ABLE IN THE BUFFER.  THE ERB IS POSTED TO THE BUFFER RETURN       *
*   QCB.                                                              *
*                                                                     *
*   THE ERROR MESSAGE HAS BEEN INSERTED INTO THE BUFFER.  THE         *
*   BUFFER IS POSTED TO THE DESTINATION.                              *
*                                                                     *
*EXITS, NORMAL,  ERROR MESSAGE SUBTASK --                             *
*   A NEW UNIT HAS BEEN LINKED INTO THE CURRENT BUFFER.  ENTRY IS     *
*   MADE TO THE ERROR MESSAGE ROUTINE.                                *
*                                                                     *
*EXITS,  TO USER ROUTINE,                                             *
*   IF A USER EXIT IS TAKEN AND THE CONNECTED RESOURCE IS A LU,       *
*   REGISTER 6 WILL CONTAIN THE RH, AND REGISTER 7 WILL CONTAIN       *
*   SENSE INFORMATION IF PRESENT.                              @Y17XAMF
*                                                                     *
*EXITS,  ERROR --N/A                                                  *
*                                                                     *
*TABLES/WORK AREAS -- N/A                                             *
*                                                                     *
*ATTRIBUTES -- SERIALLY REUSABLE,  REFRESHABLE,  ENABLED,             *
*   RESIDENT,  PROBLEM PROGRAM MODE.                                  *
*                                                                     *
*NOTES -- THE OPERATION OF THIS MODULE DOES NOT DEPEND UPON AN        *
*   INTERNAL REPRESENTATION OF THE EXTERNAL CHARACTER SET.            *
*                                                                     *
***********************************************************************
         EJECT
********* REGISTER EQUATES *********
         SPACE
R0       EQU   0                        WORK REGISTER
         SPACE
R1       EQU   1                        ADDR OF BFR BRING PROCESSED
         SPACE
RWORK2   EQU   2                        WORK REGISTER
         SPACE
RSCB3    EQU   3                        SCB ADDRESS
         SPACE
RLCB4    EQU   4                        LCB ADDRESS
         SPACE
RMSG5    EQU   5                        ADDRESS OF ERROR MESSAGE
         SPACE
RPREFIX  EQU   6                        BUFFER ADDRESS
         SPACE
RLNG7    EQU   7                        LNG OF DATA TO BE INSERTED
         SPACE
R8       EQU   8
RPARM8   EQU   8                        PARAMETER LIST ADDRESS
         SPACE
R9       EQU   9
R10      EQU   10
RDISP    EQU   11                       ADDRESS OF DISPATCHER
         SPACE
RBASE    EQU   12                       BASE REGISTER
         SPACE
R13      EQU   13                       SAVE AREA ADDRESS
R14      EQU   14                       RETURN REGISTER
R15      EQU   15                       LINK REGISTER
         SPACE
********* OTHER EQUATES *********
         SPACE
PARMAF   EQU   2                        IEDQAF INDEX
PARMMLEN EQU   4                        LENGTH OF ERROR MESSAGE
PARMMSG  EQU   5                        ERROR MESSAGE ADDRESS
         SPACE
INRTFLAG EQU   X'02'                    INSERT-AND-RETURN REQ FLAG
STAT02   EQU   X'02'                    ERB STATUS TO GET BUFFER
BUF1UNT1 EQU   X'0101'                  ONE-BUFFER-ONE-UNIT REQUEST
         SPACE
INSOFF   EQU   4                        INSERT OFFSET
         SPACE
ONE      EQU   1                        INCREMENT VALUE OF ONE
EIGHT    EQU   8                        FAKE QCB'S OFFSET FROM BFR
         SPACE
REG2OFF  EQU   28                       OFFSET TO R2 IN SAVE AREA
ADDR     EQU   7                        MASK FOR ICM, STCM     @Y17XANQ
ALL      EQU   15                       MASK FOR ICM           @Y17XANQ
HDRNO    EQU   1                        HEADER=NO FLAG         @Y17XANQ
         EJECT
         USING AVTSAVE2,R13
         USING IEDQDISP,RDISP
         USING IEDQLCB,RLCB4
         USING IEDQPRF,RPREFIX
         USING IEDQSCB,RSCB3
         USING IEDQAT,RBASE
         SPACE
IEDQAT01 EQU   *
IEDQAT   IEDHJN ERRORMSG
         LR    R10,R1                   SAVE POST LIST
*
         L     RMSG5,PARMMSG-1(,RPARM8) GET ADDR OF ERROR MESSAGE
         SR    RLNG7,RLNG7              (CLEAR FOR INSERT)
         ICM   RLNG7,ONE,PARMMLEN(RPARM8) IS LENGTH ZERO       @Y17XANQ
         BNZ   ICSCAN                   NO, PARM LIST IS RIGHT
         SPACE
         IC    RLNG7,AVTEZERO(,RMSG5)   YES, GET LNG FROM MESSAGE
         LTR   RLNG7,RLNG7              IS LENGTH ZERO         @OY19844
         BZ    NOLNGTH                  YES, IGNORE ERRORMSG   @OY19844
         LA    RMSG5,ONE(,RMSG5)        POINT TO REAL MSG START
         SPACE
ICSCAN   EQU   *
         CLI   ONE(RPARM8),EIGHT        WAS AN EXIT SPECIFIED
         BE    NOEXIT                   BRANCH NO
*
         ST    RPREFIX,AVTADBUF         SETUP FOR POSSIBLE     @Y17XANQ
*                                       IEDSHOW                @Y17XANQ
         LR    R1,RPREFIX               BUFFER ADDRESS TO PARAMETER REG
         STM   RWORK2,RBASE,REG2OFF(R13) SAVE REGISTERS
         LR    RPREFIX,R13              SAVE CURRENT SA ADDRESS@OY20756
         LA    R13,AVTSAVE3-AVTSAVE2(,R13)  NEXT SAVE AREA ADD @OY20756
         ST    RPREFIX,INSOFF(,R13)     SAVE CURRENT ADDRESS   @OY20756
         ST    R13,EIGHT(,RPREFIX)      SAVE NEXT SAVE ADDRESS @OY20756
         LH    RPREFIX,AVTHFF           INDICATE NOT SNA LU IS @Y17XANQ
*                                         CONNECTED            @Y17XANQ
         CLI   LCBFLAG1,0               IS THIS A PLCB         @Y17XANQ
         BNE   GOEXIT                     BRANCH NO - EXIT     @Y17XANQ
         SPACE
         TM    LCBSTAT5,LCBLUNIT        SNA LU CONNECTED       @Y17XANQ
         BZ    GOEXIT                     BRANCH NO            @Y17XANQ
         SPACE
         SR    RPREFIX,RPREFIX         INIT TO ZERO            @YM07705
         SR    RLNG7,RLNG7             INIT TO ZERO            @YM07705
         TM    LCBRSPFG,LCBRSRH        HAS EXCEPTION RESPONSE BEEN
*                                      GENERATED               @YM07705
         BNO   GOEXIT                  NO BRANCH               @YM07705
         ICM   RPREFIX,ADDR,LCBRHSV    GET THE RH OF THE REQUEST WHICH
*                                      WAS OR IS TO BE RESPONDED TO
*                                                              @YM07705
         O     RPREFIX,EXCPRH          CONVERT THIS REQUEST RH TO AN
*                                      EXCEPTION RESPONSE RH   @YM07705
         ICM   RLNG7,ALL,LCBLUSNS      GET THE SNA SENSE BYTES
*                                      ASSOCIATED WITH THE EXCEPTION
*                                      RESPONSE                @YM07705
         SPACE
GOEXIT   EQU   *                                               @Y17XANQ
         L     R15,EIGHT(RPARM8)        ADDRESS OF USER EXIT
         BALR  R14,R15                  EXIT TO USER ROUTINE
*
         L     R13,INSOFF(,R13)         BACK UP TO PREVIOUS    @OY20756
         LM    RWORK2,RBASE,REG2OFF(R13) RESTORE REGISTERS
         SPACE
NOEXIT   EQU   *
         SR    RWORK2,RWORK2            PICK UP SCAN
         IC    RWORK2,PRFSCAN             POINTER FROM PREFIX
         SR    R1,R1                    PICK UP NO. OF
         IC    R1,PRFSCAN+1               RESERVES FROM PREFIX
         LA    R1,AVTHDRSZ(,R1)         ADD SIZE OF HEADER PREFIX
         CR    R1,RWORK2                IS SCAN POINTER VALID
         BNH   BUFSIZE                  YES, BRANCH
         SPACE
         LR    RWORK2,R1                NO, RESET IT
         SPACE
BUFSIZE  EQU   *
         SR    R15,R15                  CLEAR FOR IC             A42411
         SPACE
         IC    R15,PRFNBUNT             PICK UP NO. OF UNITS
         LH    R14,AVTKEYLE             GET LENGTH OF ONE UNIT
         MR    R14,R15-1                MULTIPLY TO GET BUFFER SIZE
         CR    RWORK2,R15               SCAN BEYOND END OF BUFFER
         BNH   TESTFRST                 NO, GO TEST FIT IN FIRST
         SPACE
         CH    RLNG7,AVTKEYLE           WILL MSG FIT IN NEW UNIT
         BNH   NEWUNIT                  YES, GO GET NEW UNIT
         SPACE
         LH    RLNG7,AVTKEYLE           NO, SET LNG = UNIT LENGTH
         B     NEWUNIT                     AND GO GET NEW UNIT
         SPACE
TESTFRST EQU   *
         SR    R15,RWORK2               GET SIZE BEYOND SCAN PTR
         CR    RLNG7,R15                WILL ERROR MSG FIT IN FIRST
         BNH   INSERT2                  YES, GO INSERT IT
         SPACE
         AH    R15,AVTKEYLE             WILL ERROR MSG FIT IN FIRST
         CR    RLNG7,R15                  BUFFER PLUS ONE UNIT
         BNH   NEWUNIT                  YES, GO GET NEW UNIT
         SPACE
         LR    RLNG7,R15                NO, SET LNG = WHAT WILL FIT
*        B     NEWUNIT                  NO, FALL THROUGH
         EJECT
NEWUNIT  EQU   *
         XC    LCBERBCH,LCBERBCH        CLEAR CHAIN FIELD      @Y17XANQ
         MVI   LCBERBST,STAT02          SET ERB STATUS
         LA    RWORK2,BUF1UNT1          REQUEST ONE BUFFER,
         STH   RWORK2,LCBERBCT            ONE UNIT LONG
         SPACE
         LA    RWORK2,STCBAT            GET ADDR OF OUR STCB
         ST    RWORK2,PRFRCB            SET IT IN BUFFER PREFIX
         STC   RLNG7,PRFKEY             SAVE MESSAGE LENGTH
         LA    RWORK2,EIGHT             GET ADDRESS OF SIMULATED
         SR    RPREFIX,RWORK2             QCB IN BUFFER
         STCM  RPREFIX,ADDR,LCBRCQCB+1  SET UP LCB RTN-CTL     @Y17XANQ
         SPACE
         LA    R8,AVTBFREB              ADDRESS OF BUFFER RETURN
         LA    R9,PRIINTRQ              PRIORITY FOR INITIAL REQUEST
         B     ERBPST                   POST ERB
         EJECT
STCBAT   EQU   *
         DC    AL1(DSPMCPL2),AL1(0)
         SPACE
         USING *,R15
         L     RBASE,BASEAT             RESET BASE             @Y17XANQ
         DROP R15                                              @Y17XANQ
         SR    R10,R10                  INDICATE END OF POST LIST
         LA    RPREFIX,EIGHT(,RLNG7)    INITIALIZE OLD BUFFER ADDR
         L     RLCB4,PRFLCB-1           GET LCB ADDRESS
         L     RSCB3,LCBSCBA-1          GET SCB ADDRESS
         SPACE
         L     RPARM8,SCBMACR-1         GET PARAMETER LIST
         L     RMSG5,PARMMSG-1(,RPARM8) GET ADDR OF ERROR MESSAGE
         CLI   PARMMLEN(RPARM8),AVTEZERO TEST FOR ZERO LENGTH  @SA71533
         BNE   ADDRFIX                  NO, BRANCH             @SA71533
         LA    RMSG5,ONE(,RMSG5)        INCREMENT PAST LENGTH  @SA71533
ADDRFIX  EQU   *                                               @SA71533
         SR    RLNG7,RLNG7              (CLEAR FOR INSERT)
         IC    RLNG7,PRFKEY             GET LNG OF ERROR MESSAGE
         SPACE
         SR    R1,R1                    (CLEAR FOR INSERT)
         IC    R1,PRFNBUNT              PICK UP NUMBER OF UNITS
         LA    R0,ONE(,R1)              ADD ONE
         STC   R0,PRFNBUNT              STORE IT BACK
         LR    RWORK2,RPREFIX           GET ADDRESS OF FIRST UNIT
         BAL   R14,ENTER                ENTER LOOP
         SPACE
         L     RWORK2,PRFTIC-IEDQPRF(,RWORK2) GET ADDR OF NEXT UNIT
         SPACE
ENTER    EQU   *
         BCTR  R1,R14                   LOOP TILL POINTING TO LAST
         SPACE
         MVC   PRFTIC+1-IEDQPRF(3,RWORK2),LCBERBCH  LINK IN NEW UNIT
         EJECT
         SR    RWORK2,RWORK2            RESET INSERT POINT
         IC    RWORK2,PRFSCAN             AT SCAN POINTER
         SPACE
INSERT2  EQU   *
         SPACE
         STH   RWORK2,AVTPARM           STORE SCAN PTR FOR COMPARE
         CLC   AVTPARM(2),PRFSIZE       SCAN PTR BEYOND END OF BFR
         BNH   INCR                     NO, INSERT PAST SCAN PTR
         SPACE
         TM    PRFSTAT1,PRFNLSTN        YES, IS THIS LAST BUFFER
         BO    LINKAF                   IT IS NOT, INSERT AT SCAN
         SPACE
         BCT   RWORK2,LINKAF            IT IS, INSERT BEFORE EOT
         SPACE
INCR     EQU   *
         LA    RWORK2,ONE(,RWORK2)      POINT PAST SCAN POINTER
         SPACE
LINKAF   EQU   *
         IC    R0,PARMAF(,RPARM8)       PICK UP IEDQAF OFFSET
         STC   R0,AVTPARM               SET IT IN PARAMETER LIST
         OI    AVTPARM,INRTFLAG         REQUEST INSERT AND RETURN
         MVI   AVTPARM+1,AVTEZERO       SET DATA TYPE FLAG
         SPACE
         ST    RPREFIX,AVTADBUF         PASS BUFFER ADDRESS
         ST    RWORK2,INSOFF(,RPREFIX)   SET INSERT OFFSET
         ST    RMSG5,AVTPARM3           SET MESSAGE ADDRESS
         STC   RLNG7,AVTPARM3           SET MESSAGE LENGTH
         LA    R1,AVTPARM               POINT TO IEDQAF PARM LIST
         L     R15,AVTUI                GET USER INTERFACE ADDRESS
         BALR  R14,R15                  LINK TO INSERT ERROR MSG
         SPACE
         AR    RWORK2,RLNG7             ADD SCAN POINTER & LENGTH
*                                         OF MESSAGE DATA INSERTED
         BCTR  RWORK2,AVTEZERO          POINT TO LAST BYTE
         STH   RWORK2,PRFSIZE           SET NEW DATA SIZE
         SPACE
         MVI   PRFSTAT1,PRFERMGN        SET PREFIX STATUS
         XC    PRFISEQ,PRFISEQ          CLEAR INPUT SEQUENCE NO@OX12500
         L     R8,SCBDESTQ-1            DESTINATION QCB ADDRESS
         SPACE 1
         LR    R1,RPREFIX               BUFFER TO BE POSTED
         LA    R9,PRIDESTQ              PRIORITY
         BAL   R14,POSTSUB              ADD BUFFER TO POST LIST
         LR    R10,R1                   NEW POST LIST
         TM    LCBSTART+2,HDRNO         IS IT                  @OY14053
         BZ    ERBTOBD                  BRANCH NO              @OY14053
         SPACE 1
         LA    R9,PRIDESTQ-1            INSURE LOWER PRIORITY  @OY14053
         LA    R8,ATQCB                 POST ERB TO ATSTCB     @OY14053
         NI    LCBSTART+2,X'FF'-HDRNO   RESET HEADER=FLAG      @OY14053
         B     ERBPST                   POST ERB               @OY14053
         DS    0F                                              @OY14053
NOLNGTH  EQU   *                                               @OY19844
         LA    R8,AVTBFRTB              BUFFER RETURN          @OY19844
         LR    R1,RPREFIX               BUFFER ADDRESS         @OY19844
         LA    R9,PRIDESTQ              PRIORITY               @OY19844
         BAL   R14,POSTSUB              ADD BFR TO POST LIST   @OY19844
         LR    R10,R1                   NEW POST LIST          @OY19844
         B     ERBTOBD                  POST ERB TO QBD        @OY19844
         ORG   *-8                                             @OY14053
ATQCB    EQU   *                        DUMMY QCB FOR HEADER=NO@OY14053
         ORG
ATSTCB   DC    AL1(DSPMCPL4),AL3(ATSTCB)                       @OY14053
         DROP  RBASE                                           @OY14053
         LR    RLCB4,R1                 ERB ADDRESS            @Y176025
         LA    RSCB3,LCBERB-IEDQLCB     LCB SIZE PRIOR TO ERB  @Y17XANQ
         SLR   RLCB4,RSCB3              LCB ADDRESS            @OY14053
         L     RSCB3,LCBSCBA-1          SCB ADDRESS            @OY14053
         MVC   SCBDESTQ,LCBSTART        RESTORE SCBDESTQ       @OY14053
         SR    R10,R10                  ZERO POST LIST         @OY14053
ERBTOBD  EQU   *                                               @OY14053
         L     R8,AVTMSGS-1             ADDRESS OF IEDQBD
         L     R8,0(,R8)
         LA    R9,PRIRCQCB              PRIORITY
ERBPST   EQU   *
         NI    LCBSTAT1,X'FF'-LCBRCLLN  RESET RECALL BIT
         LA    R1,LCBERB                ERB TO BE POSTED
         LA    R14,DSPCHAIN             EXIT TO SISPATCHER
POSTSUB  EQU   *
         ST    R8,0(R1)                 QCB ADDRESS TO ELEMENT
         ST    R10,4(R1)                LINK IN POST LIST
         STC   R9,4(R1)                 SET PRIORITY
         BALR  R14,R14                  RETURN                 @Y17XAMX
         SPACE 4
BASEAT   DC    A(IEDQAT)                ENTRY POINT ADDRESS    @Y17XANQ
EXCPRH   DC    X'00871000'              REQUIRED BITS FOR EXCEPTION
*                                       RESPONSE               @YM07705
         EJECT
********* DSECTS *********
         SPACE
         TAVTD
         EJECT
         TDISPD
         EJECT
         TLCBD
         EJECT
         TPRFD
         EJECT
         TPRIOR
         EJECT
         TSCBD
         SPACE
         END
