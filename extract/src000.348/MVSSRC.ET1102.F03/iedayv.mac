         TITLE 'IEDAYV OUTPUT EDIT ROUTINE FOR 3705 TERMINALS'
IEDAYV   CSECT
         SPACE 3
***********************************************************************
*                                                                     *
* MODULE NAME=IEDAYV  (TCAM,TSO)                               @Y17XAYP
*                                                                     *
* DESCRIPTIVE NAME = TSO 3705 OUTPUT EDIT                             *
*                                                                     *
* COPYRIGHT = NONE                                                    *
*                                                                     *
* STATUS = VERSION 10.0                                        @G36XRYP
*                                                                     *
* FUNCTION = IEDAYV MOVES DATA FROM TIOC BUFFERS OR MSGGEN DATA AREAS *
*            INTO TCAM BUFFERS FOR START/STOP TERMINALS(2741,1050,TWX)*
*            THAT ARE CONNECTED TO TSO VIA A 3705 CONTROL UNIT.       *
*            IEDAYV CAN BE DIVIDED INTO SEVERAL SEPARATE FUNCTIONAL   *
*            PARTS:                                                   *
*            1. TSO MESSAGE SET UP.                                   *
*            2. MSGGEN MESSAGE SET UP.                                *
*            3. CALCULATIONS BEFORE DATA MOVEMENT.                    *
*            4. DATA MOVEMENT, INSPECTION, AND EDITING.               *
*            5. CLEANUP AFTER DATA MOVEMENT.                          *
*            6. SUBROUTINES:                                          *
*            A.  INSERTNL- USED TO ADD ENDING CONTROL CHARACTERS.     *
*            B.  SIMATTN-  USED TO COUNT LINES.                       *
*            C.  QTIPRET-  USED TO UPDATE INPUT BUFFER COUNTS.        *
*            D.  IDLES010- USED TO INSERT IDLES WHERE NEEDED.         *
*            E.  MSGGEN18- USED TO PREVENT MULTI-LINE MSGGENS.        *
*            CONTROL IS RECEIVED IN IEDAYV FROM IEDAYE AS A RESULT OF *
*            AN OUTPUT EDIT REQUEST FROM EITHER MSGGEN(IEDAYM) OR     *
*            TSOUTPUT(IEDAYO).                                        *
*            PROCESSING BEGINS BY DETERMINING WHETHER THE EDIT REQUEST*
*            IS FROM MSGGEN(IEDAYM) OR TSOUTPUT(IEDAYO). ONCE THIS IS *
*            DECIDED CONTROL IS THEN PASSED TO THE APPROPRIATE SET-UP *
*            ROUTINE. THE TWO SET-UP ROTTINES PERFORM THE SAME JOB.   *
*            THEY SET UP THE PROPER COUNTS, POINTERS, AND FLAGS SO THE*
*            RIGHT AMOUNT OF DATA CAN BE MOVED TO THE TCAM BUFFER AND *
*            THE PROPER ACTION WILL BE TAKEN WHEN A TCAM BUFFER IS    *
*            FILLED OR AN END OF LINE IS REACHED.                     *
*            AFTER THE SET UP IS COMPLETED, CONTROL IS PASSED TO A    *
*            ROUTINE THAT DECIDES WHETHER OR NOT THERE WILL BE ROOM IN*
*            THE CURRENT TCAM BUFFER AND ON THE CURRENT LINE TO MOVE  *
*            ALL THE DATA. A SWITCH IN THE EDIT WORK AREA(GMAIN) IS   *
*            SET TO INDICATE FOLLOWING:                               *
*            X'04' - ENTIRE MESSAGE MOVED.                            *
*            X'08' - TCAM BUFFER FILLED.                              *
*            X'0C' - TERMINAL LINE FILLED.                            *
*            ONCE THE SWITCH IS SET THE ACTUAL EDIT FUNCTION IS DONE  *
*            AND THE DATA IS ACTUALLY MOVED FROM THE INPUT AREA INTO  *
*            THE TCAM BUFFERS.                                        *
*            AFTER THE DATA HAS BEEE MOVED, ONE OF THE CLEAN-UP       *
*            ROUTINES WILL GET CONTROL BASED ON THE SETTING OF THE    *
*            SWITCH IN GMAIN. THESE ROUTINES WILL ADD THE NECESSARY   *
*            CARRAIGE CONTROL CHARACTERS AND DETERMINE WHICH OF THE   *
*            FOLLOWING EXITS TO TAKE:                                 *
*            X'00' - MESSAGE COMPLETELY MOVED. TSOUTPUT AND MSGGEN.   *
*            X'0C' - TCAM BUFFER FILLED.       TSOUTPUT AND MSGGEN.   *
*            X'10' - TERMINAL LINE FILLED.     TSOUTPUT ONLY.         *
*                                                                     *
* NOTES = IF THIS ROUTINE DETERMINES THAT THE MSGGEN REQUEST IS LONGER*
*         THAN ONE PHYSICAL LINE FOR THE TERMINAL THE MSGGEN DATA WILL*
*         BE TRUNCATED AND THE MSGGEN ROUTINE(IEDAYM) WILL RECEIVE    *
*         CONTROL BACK WITH A X'00' RETURN CODE INSTEAD OF A X'10'.   *
*                                                                     *
*    DEPENDENCIES = THE OPERATION OF THIS MODULE DOES NOT DEPEND UPON *
*                   A PARTICULAR REPRESENTATION OF THE                *
*                   EXTERNAL CHARACTER SET.                           *
*                                                                     *
*    RESTRICTIONS = NONE.                                             *
*                                                                     *
*    REGISTER CONVENTIONS = REGISTER 2 POINTS TO THE INPUT DATA AREA  *
*                           REGISTER 3 POINTS TO THE SCB              *
*                           REGISTER 4 POINTS TO THE LCB              *
*                           REGISTER 5 POINTS TO THE QCB              *
*                           REGISTER 7 POINTS TO THE OUTPUT DATA AREA *
*                           REGISTER B POINTS TO THE EDIT WORK AREA   *
*                           REGISTER D POINTS TO AVTSAVE2             *
*                                                                     *
*    PATCH LABEL = AYVPATCH                                           *
*                                                                     *
* MODULE TYPE = EDIT                                                  *
*                                                                     *
*    PROCESSOR = ASSEMBLER XF                                         *
*                                                                     *
*    MODULE SIZE = 1000 HEX BYTES                                     *
*                                                                     *
*    ATTRIBUTES = SERIALLY REUSABLE, REFRESHABLE, ENABLED, RESIDENT,  *
*                 PROBLEM PROGRAM MODE                                *
*                                                                     *
* ENTRY POINT = IEDAYV                                                *
*                                                                     *
*    PURPOSE = SEE FUNCTION.                                          *
*                                                                     *
*    LINKAGE = SEE INPUT AND OUTPUT BELOW.                            *
*                                                                     *
* INPUT = REGISTER 2 POINTS TO THE INPUT DATA AREA.                   *
*         REGISTER 3 POINTS TO THE SCB.                               *
*         REGISTER 4 POINTS TO THE LCB.                               *
*         REGISTER 5 POINTS TO THE QCB.                               *
*         REGISTER 6 POINTS TO THE INPUT DATA AREA.                   *
*         REGISTER 7 POINTS TO THE OUTPUT DATA AREA.                  *
*         REGISTER B POINTS TO THE EDIT WORK AREA(GMAIN).             *
*         REGISTER C POINTS TO THE BASE OF IEDAYE.                    *
*         REGISTER D POINTS TO AVTSAVE2.                              *
*         REGISTER F POINTS TO THE ENTRY POINT OF IEDAYV.             *
*                                                                     *
* OUTPUT = REGISTER 1 CONTAINS A COUNT OF THE DATA MOVED.             *
*                   E CONTAINS THE RETURN ADDRESS IN TSOUTPUT OR MSGGE*
*                   F CONTAINS THE RETURN CODE.                       *
*                   ***************************************************
*                   * IF THE RETURN CODE IS ZERO FOR MSGGENS THE LEFT *
*                   * HALF OF REGISTER F CONTAINS THE TOTAL COUNT OF  *
*                   * THE DATA MOVED TO THA TCAM BUFFERS.             *
*                   ***************************************************
*                                                                     *
* EXIT-NORMAL = TO THE TSOUTPUT ROUTINE(IEDAYO).                      *
*               TO THE MSGGEN ROUTINE(IEDAYM).                        *
*                                                                     *
* EXIT-ERROR = NONE.                                                  *
*                                                                     *
* EXTERNAL REFERENCES = SEE BELOW.                                    *
*                                                                     *
*    ROUTINES = SVC 101(QTIP).                                        *
*               IEDAYS(SIMULATED ATTENTION).                          *
*                                                                     *
*    DATA AREAS = TIOC BUFFER.                                        *
*                 MSGGEN INPUT DATA.                                  *
*                 TCAM BUFFER.                                        *
*                                                                     *
*    CONTROL BLOCK = AVT.                                             *
*                    TIOC BUFFER PREFIX.                              *
*                    LCB.                                             *
*                    TCAM BUFFER PREFIX.                              *
*                    QCB.                                             *
*                    SCB.                                             *
*                    TRM.                                             *
*                    TSINPUT QCB.                                     *
*                                                                     *
*    MACROS = IEDHJN.                                                 *
*             QTIP.                                                   *
*                                                                     *
*CHANGE ACTIVITY AS FOLLOWS                                           *
*                                                                     *
*C327600,330400,331800                                         @SA69640
* C510300-511000                                               @YA06291
*C631400                                                       @YA08763
*A632800                                                       @YA08763
*C631400-631800                                                @YA09299
*D633100                                                       @YA09299
*A863100                                                       @SA75159
*A606200-607600                                                @Y17XAYP
*C186200,187600,441700,443100,593600,606200                    @Y17XAYP
*                                                              @G36XRYP
*A890400,596400                                                @G36XRYP
*A268800                                                       @OY15612
*C171500,198100,209300,253400,273700,387100,443800,483700      @G36XRYP
*C528500,536900,543200,609700,665700                           @G36XRYP
*D147000,597100                                                @G36XRYP
*C520800                                                       @OZ31891
*                                                                     *
***********************************************************************
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
* * * * *     R E G I S T E R  E Q U A T E S  * * * * * * * * * * * * *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
RZERO    EQU   0                        REGISTER ZERO
RNDX     EQU   1                        REGISTER 1
RTIOC    EQU   2                        TSO BUFFER
RTHREE   EQU   3                        REGISTER THREE
RLCB     EQU   4                        LCB
RQCB     EQU   5                        QCB
RTSBUF   EQU   6                        TSO BUFFER ADDRESS
RTCBUF   EQU   7                        TCAM BUFFER ADDRESS
RTEMP    EQU   8                        RTEMP/RTEMPA MUST BE EVN/ODD
RTEMPA   EQU   9                        WORK REGISTER
RDCB     EQU   10                       DCB
RMAIN    EQU   11                       SAVE AREA
RBASE    EQU   12                       BASE REGISTER
RAVT     EQU   13                       AVT SAVE AREA
RLINK    EQU   14                       LINK REGISTER
RRTN     EQU   15                       RETURN REGISTER
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
* * * * * * * * *  M I S C E L L A N E O U S  E Q U A T E S * * * * * *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
ZERO     EQU   0                        ZERO                     S21903
ONE      EQU   1                        ONE                      S21903
TWO      EQU   2                        TWO                      S21903
THREE    EQU   3                        THREE
FOUR     EQU   4                        FOUR                     S21903
EIGHT    EQU   8                        EIGHT                    S21903
ELEVEN   EQU   11                       ELEVEN
TWELVE   EQU   12                       TWELVE                   S21903
THIRTEEN EQU   13                       THIRTEEN
FIFTEEN  EQU   15                       FIFTEEN
SIXTEEN  EQU   16                       SIXTEEN                  S21903
TWENTY   EQU   20                       TWENTY
BSP      EQU   X'16'                    BACKSPACE
BYP      EQU   X'24'                    BYPASS CHAR
COLON    EQU   C':'                     COLON
CNTLCHAR EQU   X'3F'                    CONTROL CHARACTER DELIMITER
CR       EQU   X'0D'                    CARR RTN
EOB      EQU   X'26'                    CIRCLE B
EOT      EQU   X'37'                    CIRCLE C
HTAB     EQU   X'05'                    HORIZ TAB
ICMASK   EQU   12                       INSERT CHARACTER MASK
IDLECHAR EQU   X'17'                    IDLE
NULLCHAR EQU   0                        NULL FOR SNA           @Y17XAYP
IDLEFLAG EQU   X'F0'                    IDLE FLAG
LC       EQU   X'06'                    DOWN SHIFT
LF       EQU   X'25'                    TTY LINE FEED
NEEDBOTH EQU   X'E2'                    NEED LINE FEED AND CARR RETURN
NEEDLF   EQU   X'C2'                    LINE FEED NEEDED
NLCHAR   EQU   X'15'                    NEW LINE
NOBFCODE EQU   X'F8'                    MSGGEN NO BUFFER RETURN CODE
PRE      EQU   X'27'                    PREFIX
RC0      EQU   0                        RETURN CODE 0
RC12     EQU   12                       RETURN CODE X'C'
RC16     EQU   16                       RETURN CODE X'10'
RES      EQU   X'14'                    RESTORE CHAR
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
* * * * * *  A D D R E S S A B I L I T Y  * * * * * * * *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         USING IEDAYV,RBASE             ESTABLISH BASE           Y06327
         USING AVTSAVE2,RAVT            ESTABLISH SAVE AREA      S21903
         USING IEDQQCB,RQCB             ESTABLISH QCB ADDRESS    S21903
         USING IEDQLCB,RLCB             ESTABLISH LCB ADDRESS    S21903
         USING IEDQSCB,RTHREE           SCB ADDRESSABILITY
         USING IHADCB,RDCB              ESTABLISH DCB ADDRESS    S21903
         USING TIOCBUF,RTIOC            TSO BUFFER DSECT         S21903
         USING TSBUFR,RMAIN             SAVE AREA ADDRESS        S21903
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         EJECT
         LR    RBASE,RRTN                SET BASE REGISTER
IEDAYV   IEDHJN AYV00000
         TM    WFLGS,TSOASIS+CONTROLM   IS THIS A FULL SCREEN TPUT
         BNO   AYV00010                 NO, CONTINUE
         NI    WFLGS,AVTEFF-CONTROLM    MAKE IT ASIS MODE
         SPACE 2
AYV00010 EQU   *
         TM    WFLGS,TSOMSG             IS THIS A MSGGEN
         BZ    MSGGEN00                 YES, BRANCH TO SET UP FOR IT
         LTR   RTSBUF,RTSBUF            IS THERE ANY INPUT DATA
         BNZ   AYV00030                 YES, GO SET UP TO MOVE IT
         TM    QCBRETCT,QCBNL           ARE NEW LINE BITS ON
         BNZ   AYV00020                 YES, NO NEED TO CHECK CARR. CNT
         LA    RLINK,AYV00020           SET RETURN REGISTER
         CLC   QCBCARCT,LINESV+ONE      DOES CARRIAGE COUNT EQUAL LINE
         BE    INSERTNL                 YES, GO PUT IN A NEW LINE
         SPACE 2
AYV00020 EQU   *
         LA    RLINK,AYV90000           SET RETURN REGISTER
         TM    AVTPARM3+TWO,DCTTWX      IS THIS A TWX          @G36XRYP
         BZ    IDLES010                 NO, BRANCH TO INSERT IDLES
         LA    RTEMPA,ONE               PREVENT RETURN COUNT OF ZERO
         B     IDLES080                 GO PUT IN ONE IDLE
         SPACE 2
AYV00030 EQU   *
         L     RLINK,BUFFTRLR-ONE       PICK TSO BUFFER TRAILER ADDR
         LA    RLINK,AVTEZERO(,RLINK)   CLEAR FLAG BYTE
         LTR   RLINK,RLINK              SEE IF ANY TRAILER BUFFER
         BNZ   AYV00100                 BRANCH IF TRAILER EXISTS
         NI    FLAG1,AVTEFF-TRAILER     INDICATE NO TRAILER
         B     AYV00200                 CONTINUE PROCESSING
         SPACE 2
AYV00100 EQU   *
         OI    FLAG1,TRAILER            INDICATE TRAILER EXISTS
         SPACE 2
AYV00200 EQU    *
         SR    RTEMP,RTEMP              CLEAR REGISTER
         IC    RTEMP,BUFFOFST           GET OFFSET TO DATA
         AR    RTSBUF,RTEMP             POINT TO FIRST BYTE OF DATA
         MVC   BLNTH+ONE(ONE),BUFFLNTH  SET AMOUNT OF DATA IN BUFFER
         TM    QCBRETCT,QCBEND          ENTRY TO INSERT NEW LN @Y17XAYP
         BZ    AYV00300                 NO, BRANCH
         NI    QCBRETCT,AVTEFF-QCBEND   TURN OFF BIT           @Y17XAYP
         MVI   MOVED+ONE,ONE            UPDATE MOVED COUNT
         BAL   RLINK,QTIPRET            GO UPDATE BUFFER
         TM    FLAG1,TRAILER            IS THERE A TRAILER BUFFER
         BZ    AYV00250                 BRANCH IF NOT
         BAL   RLINK,INSERTNL           GO INSERT NEW LINE CHAR
         XC    CARCT,CARCT              CLEAR OUT CARRAIGE COUNT
         BAL   RLINK,SIMATTN            GO CALL SIM ATTN ROUTINE
         L     RTSBUF,BUFFTRLR-ONE      YES, GET ITS ADDRESS
         LA    RTSBUF,ZERO(,RTSBUF)     CLEAR HIGH BYTE
         ST    RTSBUF,TSCURR            SET UP AS CURRENT BUFFER
         LR    RTIOC,RTSBUF             SAVE START ADDRESS OF BUFFER
         B     AYV00030                 CONTINUE EDITING
         SPACE 2
AYV00250 EQU   *
         TM    AVTPARM3+TWO,DCTTWX      IS THIS DEVICE A TWX   @G36XRYP
         BZ    AYV00260                 NO, BRANCH
         NI    QCBRETCT,QCBNL           TURN OFF THE NEW LINE IND
         MVI   ZERO(RTCBUF),CR          PUT IN A CARRAIGE RETURN
         BAL   RLINK,INSRTNL1           GO COUNT IT
         B     AYV00270                 GO TO LINE COUNTING EXIT
         SPACE 2
AYV00260 EQU   *
         BAL   RLINK,INSERTNL           GO INSERT A NEW LINE CHAR
         SPACE 2
AYV00270 EQU   *
         BAL   RLINK,SIMATTN            GO COUNT A LINE
         XC    CARCT,CARCT              CLEAR OUT CARRAIGE COUNT
         B     AYV90000                 EXIT
         SPACE 2
AYV00300 EQU   *
         TM    AVTPARM3+TWO,DCTTWX      IS THIS A TWX          @G36XRYP
         BO    AYV00350                 YES, BRANCH
         NI    QCBRETCT,AVTEFF-QCBNL    RESET NEW LINE INDICATOR
         SPACE 2
AYV00350 EQU   *
         CLI   CARCT+ONE,AVTEFF         MISSING CR OR LF ON INPUT
         BE    AYV00500                 YES, GO SEE WHAT IS NEEDED
         LA    RLINK,AYV00400           SET UP RETURN ADDRESS
         CLI   CARCT+ONE,NEEDLF         LINE FEED NEEDED
         BE    INSRTNL0                 YES, GO INSERT IT
         CLI   CARCT+ONE,NEEDBOTH       CR AND LF BOTH NEEDED
         BE    AYV00800                 YES, GO INSERT THEM
         SPACE 2
AYV00400 EQU   *
         LH    RLINK,LINESV             GET LINE SIZE
         SH    RLINK,CARCT              COMPUTE ROOM LEFT ON LINE
         BP    AYV00900                 BRANCH POSITIVE
         TM    WFLGS,CONTROLM           CONTROL MODE
         BZ    AYV00800                 NO, BRANCH
         LH    RLINK,LINESV             RESTORE TERMINAL LINE SIZE
         B     AYV00900                 CONTINUE
         SPACE 2
AYV00500 EQU   *
         XC    CARCT,CARCT              CLEAR OUT CARRAIGE COUNT
         TM    QCBRETCT,QCBCR+QCBLF     CHECK FOR CR OR LF NEEDED
         BZ    AYV00800                 GO INSERT BOTH
         TM    QCBRETCT,QCBCR           WAS CR RECEIVED
         BO    AYV00700                 YES GO ADD LINE FEED
         MVI   ZERO(RTCBUF),CR          INSERT CARRAIGE RETURN
         BAL   RLINK,INSRTNL1           GO COUNT IT
         NI    QCBRETCT,AVTEFF-QCBNL    TURN OFF NEW LINE
         B     AYV00400                 CONTINUE
         SPACE 2
AYV00700 EQU   *
         LA    RLINK,AYV00400           SET UP RETURN ADDRESS
         NI    QCBRETCT,AVTEFF-QCBNL    RESET NEW LINE FLAGS
         B     INSRTNL0                 GO PUT IN LINE FEED
         SPACE 2
AYV00800 EQU   *
         BAL   RLINK,INSERTNL           INSERT NEW LINE
         XC    CARCT,CARCT              CLEAR OUT CARRAIGE COUNT
         TM    WFLGS+ONE,ONE            WAS THERE ROOM FOR THE NEW LINE
         BO    AYV90200                 NO, BRANCH
         LH    RLINK,LINESV             YES, START COUNT AT ZERO AGAIN
         SPACE 2
AYV00900 EQU   *
         STH   RLINK,LINE               SET REMAINING LINE SIZE
         SPACE 2
CALC0100 EQU   *
         NC    WBUFSZ,WBUFSZ            ANY ROOM LEFT IN TCAM
         BZ    AYV90200                NO ROOM LEFT, BRANCH
         LH    RNDX,BLNTH               GET CURRENT TSO BUFFER SIZE
         BCTR  RNDX,ZERO                SUBTRACT ONE
         IC    RDCB,ZERO(RNDX,RTSBUF)   PICK UP LAST CHARACTER
         STC   RDCB,SAVX2               SAVE IT
         CLC   BLNTH,MSGLEN             BUFFER LENGTH EQ MSG LENGTH
         BNE   CALC0300                 NO, BRANCH
         TM    WFLGS,TSOMSG             IS THIS A MSGGEN
         BZ    CALC0150                 YES, BRANCH
         TM    BUFFFL1,BUFFNLCR         IS THIS THE LAST BUFFER
         BZ    CALC0300                 NO, BRANCH
         SPACE 2
CALC0150 EQU   *
         TM    AVTPARM3+TWO,DCTTWX      IS THIS A TWX          @G36XRYP
         BZ    CALC0200                 NO, BRANCH
         LH    RNDX,WBUFSZ              GET SIZE OF TCAM BUFFER
         BCTR  RNDX,ZERO                REDUCE BY ONE
         CH    RNDX,MSGLEN              IS MSG LENGTH EQ TO BUF-1
         BE    CALC0400                 YES, BRANCH
         SPACE 2
CALC0200 EQU   *
         CLC   MSGLEN,WBUFSZ            MESSAGE SIZE EQ TO TCAM BUFFER
         BE    CALC0400                 YES, BRANCH
         SPACE 2
CALC0300 EQU   *
         CLC   BLNTH,WBUFSZ             COMPARE SPACE AVAILABLE TO MSG
         BH    CALC0600                 BRANCH IF HIGH
         LH    RNDX,BLNTH               LET ENTIRE MSG GO
         CH    RNDX,LINE                CHECK FOR ENOUGH ROOM ON LINE
         BH    CALC0500                 BRANCH IF LINE WILL BE FILLED
         MVI   SWT2,FOUR                SET BRANCH SWITCH
         B     CALC0800                 CONTINUE
         SPACE 2
CALC0400 EQU   *
         TM    WFLGS,TSOASIS+CONTROLM   IS THIS ASIS OR CONTROL MODE
         BM    CALC0300                 YES, BRANCH
         TM    WFLGS,TSOMSG             MSGGEN?                @OY15612
         BZ    CALC0300                 YES                    @OY15612
         TM    FLAG1,TRAILER            IS A TRAILER BUFFER PRESENT
         BO    CALC0300                  YES, BRANCH
         CLC   MSGLEN,LINE              IS THE MESSAGE LONGER THAN LINE
         BH    CALC0300                 YES, BRANCH
         TM    BUFFFL1,BUFFNLCR         IS THIS END OF MESSAGE
         BZ    CALC0300                 NO, BRANCH
         TM    AVTPARM3+TWO,DCTTWX      IS THIS A TWX          @G36XRYP
         BO    CALC0450                 YES, BRANCH
         OI    QCBRETCT,QCBEND          SET SPECIAL RETURN FLG @Y17XAYP
         LH    RNDX,WBUFSZ              GET TCAM BUFFER SIZE
         BCTR  RNDX,ZERO                REDUCE BY ONE
         STH   RNDX,WBUFSZ              STORE IT BACK
         OI    SAVX1,TWO                INDICATE REDUCTION HAS OCCURED
         B     CALC0300                 CONTINUE CALCULATIONS
         SPACE 2
CALC0450 EQU   *
         CLC   MSGLEN,WBUFSZ            IS MESSAGE EQUAL TO BUF SIZE
         BE    CALC0475                 YES, BRANCH
         L     RNDX,TOR                 GET MOVED TO COUNT
         LA    RNDX,TWO(,RNDX)          ADD TWO TO IT
         ST    RNDX,TOR                 STORE IT BACK
         LH    RNDX,WBUFSZ              GET TCAM BUFFER SIZE
         BCTR  RNDX,ZERO                REDUCE IT BY ONE
         BCTR  RNDX,ZERO                REDUCE IT BY ANOTHER ONE
         STH   RNDX,WBUFSZ              STORE IT BACK
         LTR   RNDX,RNDX                DID BUFFER SIZE GO TO ZERO
         BZ    AYV90200                 YES, GO GET ANOTHER ONE
         LA    RDCB,ZERO(RTCBUF,RNDX)   POINT TO NEW END OF BUFFER
         MVI   ZERO(RDCB),IDLECHAR      PUT IN AN IDLE
         MVI   ONE(RDCB),IDLECHAR       PUT IN ANOTHER IDLE
         B     CALC0300                 CONTINUE CALCULATIONS
         SPACE 2
CALC0475 EQU   *
         L     RNDX,TOR                  GET MOVED TO COUNT
         LA    RNDX,ONE(,RNDX)          ADD ONE TO IT
         ST    RNDX,TOR                 STORE IT BACK
         LH    RNDX,WBUFSZ              GET CURRENT BUFFER SIZE
         BCTR  RNDX,ZERO                REDUCE IT BY ONE
         STH   RNDX,WBUFSZ              STORE IT BACK
         LTR   RNDX,RNDX                WAS IT REDUCED TO ZERO
         BZ    AYV90200                 YES GO GET ANOTHER BUFFER
         LA    RDCB,ZERO(RTCBUF,RNDX)   POINT TO NEW END OF BUFFER
         MVI   ZERO(RDCB),IDLECHAR      MOVE IN AN IDLE
         B     CALC0300                 CONTINUE CALCULATION
         SPACE 2
CALC0500 EQU   *
         MVI   SWT2,TWELVE              SET SWITCH TO TWELVE
         LH    RNDX,LINE                SET COUNT TO LINE SIZE
         B     CALC0800                 CONTINUE
         SPACE 2
CALC0600 EQU   *
         LH    RNDX,WBUFSZ              SET COUNT TO TCAM BUFFER SIZE
         CH    RNDX,LINE                COMPARE COUNT TO LINE SIZE
         BNL   CALC0500                 INDICATE PARTIAL LINE/MESSAGE
         MVI   SWT2,EIGHT               SET SWITCH TO EIGHT
         SPACE 2
CALC0800 EQU   *
         TM    QCBRETCT,QCBEND          SPECIAL ENTRY FLAG ON  @Y17XAYP
         BZ    EDIT0200                 NO,BRANCH
         LA    RNDX,ONE(,RNDX)          ADD ONE BACK TO AMT OF DATA TO
*                                       BE MOVED
         SPACE 2
EDIT0200 EQU   *
         LR    RTEMP,RNDX               SAVE COUNT
         XC    DEND(FOUR),DEND          CLEAR FIELD
         BCTR  RNDX,ZERO                REDUCE COUNT FOR EXECUTE
         EX    RNDX,MOVDATA             EXECUTE MOVE CHARACTERS INS.
*                                       WITH RNDX CONTAINING THE LENGTH
         LR    RTEMPA,RTCBUF            SET SCAN ADDRESS
         TM    WFLGS,CONTROLM           IS THIS CONTROL MODE
         BO    EDIT0900                 YES, BRANCH
         TM    WFLGS,TSOMSG             IS THIS A MSGGEN
         BO    EDIT0300                 NO, EDIT THE DATA
         AR    RTEMPA,RTEMP             POINT PAST ALL THE DATA
         SR    RTEMP,RTEMP              CLEAR REGISTER
         B     EDIT0800                 GO UPDATE THE COUNTS
         SPACE 2
EDIT0300 EQU   *
         CLI   ZERO(RTEMPA),CNTLCHAR    IS CHARACTER IN CONTROL RANGE
         BH    EDIT0700                 NO,BRANCH
         CLI   ZERO(RTEMPA),EOT         IS CHARACTER AN EOT
         BE    EDIT0600                 YES, REPLACE WITH A COLON
         CLI   ZERO(RTEMPA),LC          IS CHARACTER A DOWN SHIFT
         BE    EDIT1550                 YES, BUMP NON-PRINT    @SA69640
         TM    WFLGS,TSOASIS            IS THIS ASIS MODE
         BZ    EDIT0500                 NO, BRANCH
         CLI   ZERO(RTEMPA),IDLECHAR    IS CHARACTER AN IDLE
         BE    EDIT1550                 YES, BUMP NON-PRINT    @SA69640
         CLI   ZERO(RTEMPA),LF          IS CHARACTER A LINE FEED
         BE    EDIT1550                 YES, BUMP NON-PRINT    @SA69640
         CLI   ZERO(RTEMPA),RES         IS CHARACTER A RESTORE
         BE    EDIT1550                 YES, BRANCH
         CLI   ZERO(RTEMPA),BYP         IS CHARACTER A BYPASS
         BE    EDIT1550                 YES, BRANCH
         CLI   ZERO(RTEMPA),PRE         IS CHARACTER AN ESCAPE
         BE    EDIT1550                 YES, BRANCH
         CLI   ZERO(RTEMPA),HTAB        IS CHARACTER A HORIZONTAL TAB
         BE    EDIT0700                 YES, BRANCH
         SPACE 2
EDIT0500 EQU   *
         CLI   ZERO(RTEMPA),BSP         IS CHARACTER A BACKSPACE
         BE    EDIT1400                 YES, BRANCH
         CLI   ZERO(RTEMPA),CR          IS CHARACTER A CARRIAGE RETURN
         BE    EDIT1600                 YES, BRANCH
         CLI   ZERO(RTEMPA),NLCHAR      IS CHARACTER A NEW LINE CHAR
         BE    EDIT1700                 YES, BRANCH
         SPACE 2
EDIT0600 EQU   *
         MVI   ZERO(RTEMPA),COLON       REPLACE CHARACTER WITH A COLON
         SPACE 2
EDIT0700 EQU   *
         LA    RTEMPA,ONE(,RTEMPA)      SCAN TO NEXT CHARACTER
         BCT   RTEMP,EDIT0300           CONTINUE IF MORE DATA TO SCAN
         SPACE 2
EDIT0800 EQU   *
         IC    RTEMP,ZERO(RNDX,RTSBUF)  GET LAST CHARACTER MOVED
         STC   RTEMP,TSBUFR             SAVE IT FOR LATER
         LA    RNDX,ONE(,RNDX)          RESTORE MOVED COUNT
         AR    RTCBUF,RNDX              UPDATE TCAM POINTER
         LH    RDCB,LINE                GET AVAILABLE LINE SIZE
         SR    RDCB,RNDX                SUBTRACT MESSAGE LENGTH
         AH    RDCB,DEND+TWO            SUBTRACT NON-PRINT COUNT
         STH   RDCB,LINE                UPDATE LINE SIZE
         LH    RDCB,WBUFSZ              GET CURRENT TCAM BUFFER SIZE
         SR    RDCB,RNDX                SUBTRACT NUMBER OF CHARS. MOVED
         STH   RDCB,WBUFSZ              UPDATE CURRENT TCAM BUFFER SIZE
         L     RDCB,TOR                 GET 'TO' COUNT
         AR    RDCB,RNDX                ADD NUMBER MOVED THIS TIME
         ST    RDCB,TOR                 UPDATE 'TO' COUNT
         LH    RDCB,CARCT               GET CURRENT CARRAIGE COUNT
         AR    RDCB,RNDX                ADD NUMBER MOVED THIS TIME
         SH    RDCB,DEND+TWO            SUBTRACT NON-PRINT COUNT
         BP    EDIT0850                 BRANCH IF POSITIVE COUNT
         SR    RDCB,RDCB                FORCE COUNT TO ZERO
         SPACE 2
EDIT0850 EQU   *
         STH   RDCB,CARCT               UPDATE CARRAIGE COUNT
         AR    RTSBUF,RNDX              UPDATE TSO BUFFER POINTER
         LH    RDCB,MSGLEN              GET ORIGINAL MESSAGE LENGTH
         SR    RDCB,RNDX                SUBTRACT NUMBER OF CHARS. MOVED
         STH   RDCB,MSGLEN              UPDATE MESSAGE LENGTH
         L     RDCB,FROMR               GET NUMBER MOVED FROM TS BUFFER
         AR    RDCB,RNDX                ADD NUMBER MOVED THIS TIME
         ST    RDCB,FROMR               UPDATE NUMBER MOVED FROM TS BUF
         LH    RDCB,BLNTH               GET NUMBER OF CHARS. IN TS BUF.
         SR    RDCB,RNDX                SUBTRACT NUMBER MOVED
         STH   RDCB,BLNTH               UPDATE NUMBER OF CHARS IN BUF
         LH    RDCB,MOVED               GET TOTAL MOVED COUNT
         AR    RDCB,RNDX                ADD NUMBER MOVED THIS TIME
         STH   RDCB,MOVED               UPDATE TOTAL MOVED COUNT
         B     CALC0900                 CONTINUE PROCESSING
         SPACE 2
EDIT0900 EQU   *
         EX    RNDX,CNTLTRAN            TRANSLATE AND TEST CONT.CHARS.
         LR    RRTN,RTEMP               GET CHARACTER COUNT
         SPACE 2
EDIT1000 EQU   *
         CLI   ZERO(RTEMPA),COLON       IS CHARACTER A COLON
         BNE   EDIT1100                 NO, BRANCH
         BCTR  RRTN,ZERO                DECREMENT NON-PRINT COUNT
         SPACE 2
EDIT1100 EQU   *
         LA    RTEMPA,ONE(,RTEMPA)      SCAN TO NEXT CHARACTER
         BCT   RTEMP,EDIT1000           BRANCH IF MORE DATA TO SCAN
         STH   RRTN,DEND+TWO            STORE NON-PRINT COUNT
         B     EDIT0800                 GO TO RETURN TO CALLER
         SPACE 2
EDIT1400 EQU   *
         TM    AVTPARM3+TWO,DCTTWX      IS THIS DEVICE A TWX   @G36XRYP
         BO    EDIT1500                 YES, BRANCH
         LH    RLINK,DEND+TWO           PICK NON PRINT COUNT
         LA    RLINK,TWO(,RLINK)        UPDATE COUNT BY TWO
         STH   RLINK,DEND+TWO           STORE BACK NEW COUNT
         B     EDIT0700                 GO TO SCAN NEXT CHARACTER
         SPACE 2
EDIT1500 EQU   *
         MVI   ZERO(RTEMPA),IDLECHAR    REPLACE BACKSPACE WITH IDLE
         SPACE 2
EDIT1550 EQU   *
         LH    RLINK,DEND+TWO           GET NON-PRINT COUNT
         LA    RLINK,ONE(,RLINK)        ADD ONE TO IT
         STH   RLINK,DEND+TWO           STORE BACK NON-PRINT COUNT
         B     EDIT0700                 GO TO SCAN NEXT CHARACTER
         SPACE 2
EDIT1600 EQU   *
         MVI   ZERO(RTEMPA),NLCHAR      REPLACE CARR. RET. WITH NEWLINE
         SPACE 2
EDIT1700 EQU   *
         CH    RTEMP,HALFONE            IS THIS THE LAST CHARACTER
         BNE   EDIT0600                 NO, BRANCH
         CLI   SWT2,TWELVE              END OF LINE
         BE    EDIT0700                 YES, BRANCH
         LH    RLINK,BLNTH              GET DATA LENGTH
         SR    RLINK,RNDX               SUBTRACT AMOUNT MOVED
         BCTR  RLINK,ZERO               SUBTRACT ONE MORE
         LTR   RLINK,RLINK              IS THIS THE LAST CHARACTER
         BNZ   EDIT0600                 NO, BRANCH
         L     RLINK,TSBUFR             GET ADDRESS OF TSO BUFFER
         TM    BUFFFL1-BUFFFL1(RLINK),BUFFHDR WAS IT A HEADER
         BZ    EDIT0600                 NO, BRANCH
         TM    BUFFFL2-BUFFFL1(RLINK),BUFFPART WAS IT A PARTIAL MESSAGE
         BZ    EDIT1800                 NO, BRANCH
         NI    WFLGS,AVTEFF-TSOASIS     RESET FLAG
         B     EDIT0700                 GO SCAN NEXT CHARACTER
         SPACE 2
EDIT1800 EQU   *
         TM    BUFFFL1,BUFFNLCR         END OF MESSAGE
         BO    EDIT0700                 YES, BRANCH
         B     EDIT0600                 CONTINUE
         SPACE 2
CALC0900 EQU   *
         BAL   RLINK,QTIPRET            UPDATE TSO BUFFER FIELDS
         SR    RTEMP,RTEMP              CLEAR REGISTER
         IC    RTEMP,SWT2               PICK WTG INDEX
         SPACE 2
AYV01000 EQU   *
         B     AYV01000(RTEMP)          BRANCH ON THE INDEX
         B     AYV01200                 EMPTIED INPUT BUFFER
         B     AYV02600                 FILLED OUTPUT BUFFER
         B     AYV02700                 FILLED TERMINAL LINE
         SPACE 2
***********************************************************************
*  THIS SECTION OF CODE IS ENTERED VIA THE BRANCH TABLE AT AYV01000 IF*
*  SWT2 HAS BEEN SET TO X'04' INDICATING THAT THE CURRENT INPUT BUFFER*
*  HAS PROBABLY BEEN EMPTIED                                          *
***********************************************************************
AYV01200 EQU   *
         NC    LINE,LINE                HAS END OF LINE BEEN REACHED
         BNZ   AYV01300                 NO, BRANCH
         CLI   WBUFSZ+ONE,ZERO          ANY ROOM LEFT IN TCAM BUFFER
         BNE   AYV01300                 YES,BRANCH
         OI    QCBRETCT,QCBEND          SET SPECIAL RETURN     @Y17XAYP
         B     AYV90200                 GO GET ANOTHER TCAM BUFFER
         SPACE 2
AYV01300 EQU   *
         LH    RTEMP,MSGLEN             GET REMAINING INPUT COUNT
         LTR   RTEMP,RTEMP              ANY CHARACTERS LEFT
         BZ    AYV01350                 NO, BRANCH
         NC    LINE,LINE                ANY MORE ROOM ON THE LINE
         BNZ   AYV01310                 YES, BRANCH
         BAL   RLINK,SIMATTN            GO COUNT A LINE
         XC    CARCT,CARCT              CLEAR OUT CARRAIGE COUNT
         BAL   RLINK,INSERTNL           GO INSERT A NEW LINE
         B     AYV90100                 TAKE LINE FULL EXIT
         SPACE 2
AYV01310 EQU   *
         TM    QCBRETCT,QCBEND          SPECIAL CASE FLAG ON   @Y17XAYP
         BZ    AYV01320                 NO, BRANCH
         NI    QCBRETCT,AVTEFF-QCBEND   TURN OFF FLAG          @Y17XAYP
         TM    AVTPARM3+TWO,DCTTWX      IS THIS A TWX          @G36XRYP
         BZ    AYV90200                 NO, GO GET ANOTHER TCAM BUFFER
         MVI   ZERO(RTCBUF),LF          PUT LINE FEED IN BUFFER
         BAL   RLINK,INSRTNL1           GO COUNT LINE FEED CHARACTER
         B     AYV90200                 GO GET ANOTHER TCAM BUFFER
         SPACE 2
AYV01320 EQU   *
         NC    WBUFSZ,WBUFSZ            ANY ROOM LEFT IN TCAM BUFFER
         BZ    AYV90200                 NO, GO GET ANOTHER TCAM BUFFER
         TM    FLAG1,TRAILER            IS A TSO TRAILER BFR PRESENT
         BZ    AYV90200                 NO, GO GET ANOTHER TCAM BUFFER
         L     RTSBUF,BUFFTRLR-ONE      GET THE TRAILER BUFFER ADDRESS
         LA    RTSBUF,ZERO(,RTSBUF)     CLEAR FLAG BYTE
         ST    RTSBUF,TSCURR            SET UP AS CURRENT BUFFER
         LR    RTIOC,RTSBUF             SAVE NEW START ADDRESS
         B     AYV00030                 CONTINUE EDIT
         SPACE 2
AYV01350 EQU   *
         TM    WFLGS,TSOMSG             IS THIS A MSGGEN
         BZ    AYV01400                 YES, BRANCH
         TM    BUFFFL1,BUFFNLCR         IS THIS THE LAST TSO BUFFER
         BO    AYV01400                 YES,BRANCH
         NC    LINE,LINE                ANY MORE ROOM ON THE LINE
         BZ    AYV01400                 NO, BRANCH
         NI    QCBRETCT,AVTEFF-QCBNL    TURN OFF NL/CR BITS
         B     AYV01500                 BYPASS LINE COUNTING
         SPACE 2
AYV01400 EQU   *
         TM    WFLGS,CONTROLM+TSOASIS   IS THIS CONTROL OR ASIS MODE
         BM    AYV01800                 YES, DONT COUNT A LINE
         BAL   RLINK,SIMATTN            COUNT A LINE
         SPACE 2
AYV01500 EQU   *
         CLI   TSBUFR,NLCHAR            IS LAST CHARACTER A NEW LINE
         BE    AYV01700                 YES, BRANCH
         TM    SCBERR2,SCBALN           IS THIS AUTO LINE NUMBERING
*                                       OR AUTO PROMPTING
         BZ    AYV01600                 NO, BRANCH
         DROP  RTHREE                   DROP ADDRESSABOLITY
         CLI   MSGLEN+ONE,EIGHT         IS THIS THE LINE NUMBER
*                                       YES BRANCH
         BNH   AYV90000                 YES, EXIT
         SPACE 2
AYV01600 EQU   *
         TM    WFLGS,TSOMSG             IS THIS A MSGGEN
         BZ    AYV90000                 YES, BRANCH
         TM    BUFFFL1,BUFFNLCR         IS THIS END OF MESSAGE
         BZ    AYV90000                 NO, EXIT SUCCESSFULLY
         NC    WBUFSZ,WBUFSZ            ANY ROOM LEFT IN TCAM BUFFER
         BZ    AYV90100                 NO, TAKE LINE FULL EXIT
         BAL   RLINK,INSRTNL3           GO INSERT A NEW LINE CHARACTER
         TM    WFLGS+ONE,ONE            WAS INSERTION SUCCESSFUL
         BO    AYV90200                 NO, GO GET ANOTHER BUFFER
         B     AYV90000                 EXIT
         SPACE 2
AYV01700 EQU   *
         XC    CARCT,CARCT              CLEAR CARRIAGE COUNT
         TM    AVTPARM3+TWO,DCTTWX      IS THIS A TWX          @G36XRYP
         BZ    AYV90000                 NO, EXIT
         BCTR  RTCBUF,ZERO              BACK UP ONE POSITION
         MVI   ZERO(RTCBUF),CR          PUT IN CARRIAGE RETURN
         LA    RTCBUF,ONE(,RTCBUF)      RE-POSITION TCAM BUFFER POINTER
         NC    WBUFSZ,WBUFSZ            ANY ROOM LEFT IN TCAM BUFFER
         BZ    AYV01750                 NO BRANCH
         LA    RLINK,AYV90000           GET EXIT ADDRESS
         B     INSRTNL0                 GO INSERT NEW LINE
         SPACE 2
AYV01750 EQU   *
         MVI   CARCT+ONE,NEEDLF         SET INCOMPLETE MOVE FLAG.
         B     AYV90000                 EXIT
         SPACE 2
AYV01800 EQU   *
         CLI   TSBUFR,NLCHAR            IS THE LAST CHAR A NEW LINE
         BNE   AYV90000                 NO LEAVE IT ALONE
         B     AYV01700                 GO FIX UP THE N.L. IF TWX
         EJECT
***********************************************************************
*  THIS SECTION OF CODE IS ENTERED VIA THE BRANCH TABLE AT AYV01000 IF*
*  SWT2 HAS BEEN SET TO X'08' INDICATING THAT THE CURRENT TCAM BUFFER *
*  UNIT HAS BEEN FILLED                                               *
***********************************************************************
AYV02600 EQU   *
         TM    SAVX1,TWO                WAS BUFFER SIZE REDUCED
         BO    AYV90200                 YES, GO GET ANOTHER ONE
         NC    LINE,LINE                HAS LINE BEEN FILLED
         BNZ   AYV90200                 NO, GO GET ANOTHER TCAM BUFFER
         BAL   RLINK,SIMATTN            GO COUNT A LINE
         B     AYV90100                 EXIT WITH LINE FULL INDICATION
         EJECT
***********************************************************************
*  THIS SECTION OF CODE IS ENTERED VIA THE BRANCH TABLE AT AYV01000 IF*
*  SWT2 HAS BEEN SET TO X'0C' INDICATING THAT THE TERMINAL OUTPUT LINE*
*  HAS PROBABLY BEEN FILLED                                           *
***********************************************************************
AYV02700 EQU   *
         TM    SAVX1,TWO                WAS BUFFER SIZE REDUCED@YA06291
         BO    AYV90200                 YES, GO GET ANOTHER TCAM BUFFER
         NC    LINE,LINE                ANY ROOM LEFT ON THE LINE
         BZ    AYV02800                 NO, BRANCH
         NC    WBUFSZ,WBUFSZ            ANY ROOM LEFT IN THE TCAM BUF
         BNZ   CALC0100                 YES, GO SEE HOW MUCH
         B     AYV90200                 GO GET ANOTHER TCAM BUFFER
         SPACE 2
AYV02800 EQU   *
         BAL   RLINK,SIMATTN            GO COUNT A LINE
         CLI   TSBUFR,NLCHAR            WAS THE LAST CHAR. A NEW LINE
         BE    AYV03100                 YES, BRANCH
         TM    WFLGS,TSOMSG             IS THIS A MSGGEN
         BZ    AYV90100                 YES, EXIT
         LA    RLINK,AYV90100           GET EXIT ADDRESS       @OZ31891
         NC    WBUFSZ,WBUFSZ            ANY ROOM LEFT IN TCAM BUFFER
         BZ    AYV03000                 NO DONT TRY TO INSERT NL
         B     INSRTNL3                 YES, BRANCH
         SPACE 2
AYV03000 EQU   *
         MVI   CARCT+ONE,AVTEFF         CAUSE A NEW LINE NEXT TIME
         NI    QCBRETCT,AVTEFF-QCBNL    INDICATE NO NEW LINE YET
         B     AYV90100                 EXIT WITH LINE FULL INDICATION
         SPACE 2
AYV03100 EQU   *
         TM    AVTPARM3+TWO,DCTTWX      IS THIS A TWX          @G36XRYP
         BZ    AYV90100                 NO, BRANCH TO LINE FULL EXIT
         BCTR  RTCBUF,ZERO              BACK UP ONE IN TCAM BUFFER
         MVI   ZERO(RTCBUF),CR          PUT IN CARRAIGE RETURN
         LA    RTCBUF,ONE(,RTCBUF)      RE-POSITION TCAM BUFFER POINTER
         LA    RLINK,AYV90100           GET EXIT ADDRESS
         NC    WBUFSZ,WBUFSZ            ANY ROOM LEFT IN TCAM BUFFER
         BNZ   INSRTNL0                 GO INSERT LINE FEED
         MVI   CARCT+ONE,NEEDLF         INDICATE LINE FEED NEEDED
         B     AYV90100                 EXIT WITH LINE FULL INDICATION
         EJECT
INSERTNL EQU   *
         TM    AVTPARM3+TWO,DCTTWX      IS THIS A TWX          @G36XRYP
         BZ    INSRTNL4                 NO, BRANCH
         MVI   CARCT+ONE,NEEDBOTH       SET TO IND NO ROOM FOR CR/LF
         SPACE 2
INSRTNL4 EQU   *
         NC    WBUFSZ,WBUFSZ            TEST TCAM BUFFER SIZE
         BZ    INSRTNL5                 IF EMPTY GO TO RETURN
         SPACE 2
INSRTNL3 EQU   *
         TM    AVTPARM3+TWO,DCTTWX      IS THIS A TWX          @G36XRYP
         BO    INSRTNL2                 YES, BRANCH
         MVI   0(RTCBUF),NLCHAR         INSERT NEW LINE CHARACTER
         B     INSRTNL1                 GO COUNT IT AND RETURN
         SPACE 2
INSRTNL0 EQU   *
         MVI   ZERO(RTCBUF),LF          INSERT LINE FEED CHARCATER
         SPACE 2
INSRTNL1 EQU   *
         XC    CARCT,CARCT              CLEAR OUT CARRAIGE COUNT
         LA    RTCBUF,ONE(,RTCBUF)      INCREMENT TCAM BUFFER POINTER
         L     RTEMP,TOR                GET 'TO' COUNT
         LA    RTEMP,ONE(,RTEMP)        ADD ONE
         ST    RTEMP,TOR                STORE IT BACK
         TM    WFLGS,TSOMSG             IS THIS A MSGGEN
         BO    INSRTNL6                 NO, BRANCH
         LTR   RTSBUF,RTSBUF            IS THIS THE CARR ADJUST MSGGEN
         BNZ   INSRTNL6                 NO, DONT COUNT CR OR LF NOW
         LH    RTEMP,MSGNLNTH           GET TOTAL MOVED COUNT
         LA    RTEMP,ONE(,RTEMP)        ADD ONE
         STH   RTEMP,MSGNLNTH           STORE IT BACK
         SPACE 2
INSRTNL6 EQU   *
         LH    RTEMP,WBUFSZ             GET SIZE OF TCAM BUFFER
         BCTR  RTEMP,ZERO               DECR FOR NEW LINE CHARACTER
         STH   RTEMP,WBUFSZ             UPDATE TCAM BUFFER SIZE
         BR    RLINK                    RETURN
         SPACE 2
INSRTNL2 EQU   *
         MVI   ZERO(RTCBUF),CR          INSERT CARRAIGE RETURN
         LR    RNDX,RLINK               SAVE RETURN REGISTER
         BAL   RLINK,INSRTNL1           UPDATE COUNT ETC.
         LR    RLINK,RNDX               RETRIEVE RETURN REGISTER
         NC    WBUFSZ,WBUFSZ            ANY ROOM LEFT
         BNZ   INSRTNL0                 YES, BRANCH
         MVI   CARCT+ONE,NEEDLF         INDICATE LF STILL NEEDED
         SPACE 2
INSRTNL5 EQU   *
         OI    WFLGS+ONE,ONE            INDICATE INCOMPLETE REQUEST
         BR    RLINK                    RETURN
         EJECT
SIMATTN  EQU   *
         STM   RLINK,RRTN,AVTDOUBL      SAVE LINK REGISTERS
         TM    WFLGS,TSOMSG             IS THIS A MSGGEN
         BZ    SIMATTN1                 YES DONT GO COUNT THE LINE
         L     RRTN,AVTTSOPT            POINT TO WORK AREA
         USING IEDQTSI,RRTN             ESTABLISH ADDRESSABILITY
         L     RRTN,TSISIMAT            GET ADDRESS OF IEDAYS
         DROP  RRTN
         LA    RRTN,ZERO(,RRTN)         CLEAR HIGH BYTE
         LTR   RRTN,RRTN                SEE IF SIM ATTN USED
         BZ    SIMATTN1                 BRANCH IF NOT
         BAL   RLINK,SIXTEEN(RRTN)      GO TO IEDAYS
         SPACE 2
SIMATTN1 EQU   *
         LM    RLINK,RRTN,AVTDOUBL      RESTORE LINK REGISTERS
         BR    RLINK                    RETURN
         EJECT
QTIPRET  EQU   *
         STM   RZERO,RNDX,AVTDOUBL      SAVE PARM REGISTERS
         STM   RLINK,RRTN,AVTSAVE2      SAVE LINK REGISTERS
         TM    WFLGS,TSOMSG             IS THIS A MSGGEN
         BO    QTIPRET1                 NO, GO ISSUE THE REAL QTIP
         L     RRTN,TOR                 GET COUNT OF DATA MOVED TO TCAM
         SR    RZERO,RZERO              CLEAR REGISTER
         LH    RZERO,MSGNLNTH           GET CURRENT LENGTH OF MESSAGE
         AR    RZERO,RRTN               UPDATE THE LENGTH
         STH   RZERO,MSGNLNTH           STORE BACK THE NEW LENGTH
         B     QTIPRET3                 GO TO RETURN
         SPACE 2
QTIPRET1 EQU   *
         LH    RRTN,MOVED               GET MOVED COUNT
         TM    QCBRETCT,QCBEND          DOES MESSAGE EQUAL BFR @Y17XAYP
         BZ    QTIPRET2                 NO, BRANCH
         BCTR  RRTN,ZERO                DECREMENT BY ONE
         SPACE 2
QTIPRET2 EQU   *
************************************************************** @G36XRYP
*    CHANGE DATA OFFSET AND LENGTH FIELD IN TSO BUFFER         @G36XRYP
************************************************************** @G36XRYP
         SR    RZERO,RZERO              CLEAR FOR IC           @G36XRYP
         IC    RZERO,BUFFOFST           GET OFFSET TO DATA     @G36XRYP
         AR    RZERO,RRTN               ADD AMOUNT MOVED       @G36XRYP
         STC   RZERO,BUFFOFST           UPDATE DATA OFFSET     @G36XRYP
         IC    RZERO,BUFFLNTH           GET DATA LENGTH        @G36XRYP
         SR    RZERO,RRTN               SUBTRACT AMOUNT MOVED  @G36XRYP
         STC   RZERO,BUFFLNTH           UPDATE DATA LENGTH     @ZM46789
         SPACE 2
QTIPRET3 EQU   *
         XC    MOVED,MOVED
         LM    RZERO,RNDX,AVTDOUBL      RESTORE PARM REGISTERS
         LM    RLINK,RRTN,AVTSAVE2      RESTORE LINK REGISTERS
         BR    RLINK                    RETURN
         EJECT
MSGGEN00 EQU   *
         LH    RLINK,AVTKEYLE           GET TCAM UNIT SIZE
         TM    WFLGS,FRSTMGEN           IS THIS FIRST MSGGEN PASS
         BZ    MSGGEN10                 NO, BRANCH
         XC    MSGNLNTH(TWO),MSGNLNTH   CLEAR OUT MSGGEN COUNTER
         XC    FROMR,FROMR              CLEAR OUT FROM COUNT
         LA    RNDX,AVTHDRSZ            GET SIZE OF HDR PREFIX @Y17XAYP
         SR    RLINK,RNDX               GET USEABLE SIZE       @Y17XAYP
         SPACE 2
MSGGEN10 EQU   *
         STH   RLINK,WBUFSZ             SET UP TCAM BUFFER SIZE
         NI    QCBRETCT,AVTEFF-QCBFLGS  TURN OFF SPECIAL OUTPUT FLAGS
         TM    AVTPARM3+TWO,DCTTWX      IS THIS A TWX          @G36XRYP
         BZ    MSGGEN30                 NO, BRANCH
         TM    QCBRETCT,QCBNL           CHECK FOR LINE FEED CARR.RET.
         BZ    MSGGEN40                 NEITHER RECEIVED BRANCH
         BO    MSGGEN30                 BOTH RECEIVED BRANCH
         MVI   ZERO(RTCBUF),LF          PUT LINE FEED IN THE BUFFER
         TM    QCBRETCT,QCBCR           DO WE NEED CARR RET INSTEAD
         BO    MSGGEN20                NO, BRANCH
         MVI   ZERO(RTCBUF),CR          REPLACE LF WITH CR
         SPACE 2
MSGGEN20 EQU   *
         LA    RLINK,MSGGEN50           SET UP RETURN POINT
         B     INSRTNL1                 GO COUNT THE ONE MOVED IN
         SPACE 2
MSGGEN30 EQU   *
         LTR   RTSBUF,RTSBUF            IS THIS ENTRY FOR LEFT ADJUST
         BNZ   MSGGEN40                 NO, BRANCH
         CLI   CARCT+ONE,AVTEZERO       IS LEFT ADJUSTMENT NEEDED
         BE    MSGGEN35                 NO BRANCH
         BAL   RLINK,INSERTNL           GO ADD NEW LINE
         CLI   CARCT+ONE,AVTEFF         REQUEST TO RETURN CARRAIGE
         BE    MSGGEN60                 YES, LEAVE MOVE COUNT ALONE
         LA    RLINK,MSGGEN60           SET UP RETURN ADDRESS
         B     SIMATTN                  GO COUNT A LINE
         SPACE 2
MSGGEN35 EQU   *
         MVI   TOR+THREE,ZERO           SET RETURN COUNT TO ZERO
         B     MSGGEN60                 CONTINUE PROCESSING
         SPACE 2
MSGGEN40 EQU   *
         CLI   CARCT+ONE,AVTEZERO       IS LEFT ADJUSTMENT NEEDED
         BE    MSGGEN50                 NO, BRANCH             @YA09299
         CLI   CARCT+ONE,AVTEFF         REQUEST TO RETURN CARRIAGE
         BNE    MSGGEN45                NO, BRANCH
         BAL   RLINK,INSERTNL           GO ADD NEW LINE
MSGGEN45 EQU   *
         BAL   RLINK,SIMATTN            GO COUNT A LINE
         SPACE 2
MSGGEN50 EQU   *
         NI    QCBRETCT,AVTEFF-QCBNL    TURN OFF NEW LINE FLAGS
         XC    CARCT,CARCT              CLEAR OUT CARRAIGE COUNT
         LTR   RTSBUF,RTSBUF            IS THIS ENTRY FOR LEFT ADJUST
         BZ    MSGGEN60                 YES, BRANCH
         SR    RLINK,RLINK              CLEAR REGISTER
         SR    RNDX,RNDX                CLEAR REGISTER
         MVC   LINE,LINESV              SET UP LINE SIZE
         IC    RLINK,ZERO(RTSBUF)       GET MESSAGE COUNT
         TM    WFLGS,FRSTMGEN           IS THIS FIRST MSGGEN PASS
         BO    MSGGEN55                 YES, DONT ADD IN MOVED COUNT
         L     RNDX,FROMR               GET COUNT OF DATA ALREADY MOVED
         SR    RLINK,RNDX               SUBTRACT FROM TOTAL LENGTH
MSGGEN55 EQU   *
         CLI   ONE(RTSBUF),LC           IS THIS A LOWER CASE   @YM07292
*                                       SHIFT CHARACTER        @YM07292
         BNE   NOLCS                    NO BRANCH              @YM07292
         LA    RTSBUF,ONE(RTSBUF)       SKIP LOWER CASE SHIFT  @YM07292
         BCTR  RLINK,RZERO              REDUCE THE MSGGEN LNGTH@YM07292
*                                       TO SKIP LOWER CASE     @YM07292
NOLCS    EQU   *                                               @YM07292
         STC   RLINK,BLNTH+ONE          SET UP INPUT BUFFER SIZE
         STC   RLINK,MSGLEN+ONE         SET UP MESSAGE SIZE
         LA    RTSBUF,ONE(RTSBUF)       SKIP TO FIRST BYTE OF DATA
         AR    RTSBUF,RNDX              ADD AMOUNT MOVED TO GET OFFSET
         L     RLINK,LCBSCBA-ONE        GET SCB ADDRESS
         USING IEDQSCB,RLINK            SET ADDRESSABILITY
         TM    SCBERR2,SCBALN           AUTO LINE NUMBERING
         BZ    CALC0100                 NO, BRANCH
         CLI   MSGLEN+ONE,EIGHT         IS THIS THE LINE NUMBER
         BH    CALC0100                 NO, BRANCH
         MVC   DEND+EIGHT(EIGHT),ZERO(RTSBUF) SAVE LINE NUMBER
         LA    RTSBUF,DEND+EIGHT        POINT TO NEW LOCATION OF DATA
         B     CALC0100                 GO PERFORM SIZE CALCULATIONS
         SPACE 2
MSGGEN60 EQU   *
         L     RLINK,TOR                GET NUMBER OF CHARS MOVED
         ST    RLINK,FROMR              REARRANGE RETURN REGISTERS
         MVC   MSGNLNTH(TWO),TOR+TWO    SET UP MOVED COUNT FOR EXIT
         B     AYV90000                 EXIT
         SPACE 2
MSGGEN18 EQU   *
         L     RTCBUF,DEND+EIGHT        PICK UP TCAM BUFFER POSITION
         SPACE 2
MSGGEN25 EQU   *
         LH    RTHREE,MSGNLNTH          GET DATA COUNT ALREADY MOVED
         LH    RTEMP,WBUFSZ             GET ROOM LEFT IN TCAM BUFFER
         LA    RLINK,AYV90000           POINT TO SUCCESSFUL EXIT
         BCTR  RTCBUF,RZERO             POINT TO LAST CHAR IN TCAM BUF
         TM    AVTPARM3+TWO,DCTTWX      IS THIS A TWX          @G36XRYP
         BZ    MSGGEN22                 NO, BRANCH
         BCTR  RTCBUF,RZERO             BACK UP ONE MORE CHARACTER
         CLI   CARCT+ONE,NEEDLF         IS CARR RET ALREADY IN BUFFER
         BNE   MSGGEN23                 NO, BRANCH
         XC    CARCT,CARCT              CLEAR OUT CARRAIGE COUNT
         B     MSGGEN24                 GO PUT CARR RET/LINE FEED IN
         SPACE 2
MSGGEN23 EQU   *
         CLC   ZERO(TWO,RTCBUF),CRLFCR  ARE LAST TWO CHARS CR AND LF
         BCR   EIGHT,RLINK              IF YES EXIT SUCCESSFULLY
         CLC   ZERO(TWO,RTCBUF),CRLFCR+ONE ARE LAST TWO CHARS LF AND CR
         BCR   EIGHT,RLINK              IF YES EXIT SUCCESSFULLY
         CH    RTEMP,AVTHA2             IS REMAINING BUFSIZE LT TWO
         BL    MSGGEN19                 NO, BRANCH
         LA    RTCBUF,TWO(RZERO,RTCBUF) POINT TO NEXT POS IN TCAM BUF
         LA    RTHREE,TWO(RZERO,RTHREE) ADD TWO TO TOTAL MOVED COUNT
         STH   RTHREE,MSGNLNTH          UPDATE TOTAL MOVED COUNT
         B     INSERTNL                 GO PUT IN LINE FEED CARR RET
         SPACE 2
MSGGEN19 EQU   *
         LTR   RTEMP,RTEMP              ANY ROOM AT ALL IN TCAM
         BNZ   MSGGEN26                 YES, MUST BE ONLY ONE SPACE
         SPACE 2
MSGGEN24 EQU   *
         AH    RTEMP,AVTHA2             ADD TWO TO TCAM BUFSIZE LEFT
         STH   RTEMP,WBUFSZ             UPDATE TCAM BUFFER SIZE LEFT
         B     INSERTNL                 GO PUT IN LF/CR OR NEWLINE
         SPACE 2
MSGGEN26 EQU   *
         LA    RTHREE,ONE(RZERO,RTHREE) ADD ONE TO TOTAL MOVED COUNT
         STH   RTHREE,MSGNLNTH          UPDATE TOTAL MOVED COUNT
         LA    RTCBUF,ONE(RZERO,RTCBUF) RE-POSITION TCAM BUF POINTER
         SPACE 2
MSGGEN21 EQU   *
         LA    RTEMP,ONE(RZERO,RTEMP)   ADD ONE TO SPACE LEFT IN TCAM
         STH   RTEMP,WBUFSZ             UPDATE SPACE LEFT IN TCAM
         B     INSERTNL                 GO UP IN LF/CR OR NEWLINE
         SPACE 2
MSGGEN22 EQU   *
         CLI   ZERO(RTCBUF),NLCHAR      IS LAST CHAR A NEW LINE
         BCR   EIGHT,RLINK              IF YES EXIT SUCCESSFULLY
         CLI   WBUFSZ+ONE,ONE           IS THERE ROOM IN TCAM FOR A NL
         BNL   MSGGEN26                 YES, GO PUT IT IN
         B     MSGGEN21                 NO, GO MAKE ROOM THEN PUT IT IN
         EJECT
IDLES010 EQU   *
         TM    SAVX1,ONE                WERE ANY HORIZONTAL TABS FOUND
*                                       BY THE EDIT ROUTINE
         BZ    IDLES020                 NO, BRANCH
         MVC   CARCT,LINESV             SET TO USE MAXIMUM IDLES
         NI    SAVX1,AVTEFF-ONE         RESET INDICATOR
         SPACE 2
IDLES020 EQU   *
         NC    WBUFSZ,WBUFSZ            ANY ROOM LEFT IN TCAM
         BNZ   IDLES050                 YES, BRANCH
         OI    WFLGS+ONE,ONE            INDICATE NOT ENOUGH ROOM
         LH    RTEMPA,CARCT             GET CURRENT CARRIAGE POSITION
         SR    RTEMP,RTEMP              CLEAR REGISTER
         LA    RDCB,ELEVEN              SET UP THE DIVISOR
         DR    RTEMP,RDCB               DIVIDE THE NUMBER OF CHARACTERS
*                                       ON THE LINE BY ELEVEN TO FIND
*                                       OUT HOW MANY IDLES ARE NEEDED
         LTR   RTEMP,RTEMP              DID THE DIVIDE PRODUCE A
*                                       REMAINDER
         BZ    IDLES030                 NO, THEN NO NEED TO ROUND UP
         LA    RTEMPA,ONE(,RTEMPA)      ROUND UP FOR THE REMAINDER
         SPACE 2
IDLES030 EQU   *
         LA    RTEMP,FIFTEEN            SET REGISTER FOR COMPARE
         CR    RTEMPA,RTEMP             ARE MORE THAN FIFTEEN IDLES
*                                       INDICATED
         BNH   IDLES040                 NO, BRANCH
         LR    RTEMPA,RTEMP             YES, ONLY ALLOW FIFTEEN
         SPACE 2
IDLES040 EQU   *
         STH   RTEMPA,CARCT             PUT NUMBER OF IDLES INTO CARR.
         OI    CARCT+ONE,IDLEFLAG       INDICATE THE CARRIAGE COUNT
*                                       IS NUMBER OF IDLES
         BR    RLINK                    RETURN
         SPACE 2
IDLES050 EQU   *
         TM    FLAG2,X1050              IS THE DEVICE A 1050
         BZ    IDLES060                 NO, MUST BE A 2741
         LTR   RTIOC,RTIOC              IF 1050 IS IT ENTRY TO RETURN
*                                       CARRIAGE
         BNZ   IDLES060                 NO, TREAT NORMALLY
         MVI   ZERO(RTCBUF),IDLECHAR    PUT IN ONE IDLE
         MVC   ONE(ELEVEN,RTCBUF),ZERO(RTCBUF) PUT IN ELEVEN MORE
         MVI   TWELVE(RTCBUF),EOT       FINISH UP WITH EOT
         LA    RNDX,THIRTEEN            SET TOTAL COUNT MOVED
         B     IDLES130                 GO UPDATE COUNTS AND POINTERS
         SPACE 2
IDLES060 EQU   *
         LH    RTEMPA,CARCT             GET CURRENT CARRIAGE COUNT
         SR    RNDX,RNDX                CLEAR COUNT REGISTER
         CLI   CARCT+ONE,IDLEFLAG       IS THIS A FLAG OR A COUNT
         BE    IDLES130                 BRANCH IF A FLAG
         BH    IDLES080                 BRANCH IF BOTH
         LTR   RTEMPA,RTEMPA            ARE ANY IDLES NEEDED
         BZ    IDLES130                 NO, BRANCH
         SR    RTEMP,RTEMP              CLEAR REGISTER
         LA    RDCB,ELEVEN              SET UP THE DIVISOR
         DR    RTEMP,RDCB               DIVIDE THE NUMBER OF CHARACTERS
*                                       ON THE LINE BY ELEVEN TO FIND
*                                       OUT HOW MANY IDLES ARE NEEDED
         LTR   RTEMP,RTEMP              DID THE DIVIDE PRODUCE A
*                                       REMAINDER
         BZ    IDLES070                 NO, THEN NO NEED TO ROUND UP
         LA    RTEMPA,ONE(,RTEMPA)      ROUND UP ONE FOR REMAINDER
         SPACE 2
IDLES070 EQU   *
         LA    RTEMP,FIFTEEN            SET REGISTER FOR COMPARE
         CR    RTEMPA,RTEMP             ARE MORE THAN FIFTEEN IDLES
*                                       INDICATED
         BNH   IDLES080                 NO, BRANCH
         LR    RTEMPA,RTEMP             YES, ONLY ALLOW FIFTEEN
         SPACE 2
IDLES080 EQU   *
         N     RTEMPA,FULLWD15          GET ACTUAL NUMBER OF IDLES
         LR    RNDX,RTEMPA              SAVE IDLES COUNT
         CH    RNDX,WBUFSZ              IS THERE ROOM IN THE CURRENT
*                                       TCAM BUFFER FOR ALL THE IDLES
         BH    IDLES100                 NO, ONLY SEND SOME OF THEM
         NI    WFLGS+ONE,AVTEFF-ONE     INDICATE THAT ALL WILL FIT
         SPACE 2
IDLES090 EQU   *
         MVI   ZERO(RTCBUF),IDLECHAR    INSERT FIRST IDLE
         TM    LCBSTAT5,LCBLUNIT        LU?                    @YM06885
         BNO   IDLES091                 SEND IDLES             @Y17XAYP
         MVI   ZERO(RTCBUF),NULLCHAR    INSERT NULL FOR SNA    @Y17XAYP
IDLES091 EQU   *                                               @Y17XAYP
         BCT   RNDX,IDLES110            BRANCH IF MORE THAN ONE NEEDED
         B     IDLES120                 MUST NEED ONLY ONE
         SPACE 2
IDLES100 EQU   *
         OI    WFLGS+ONE,ONE            INDICATE NOT ROOM FOR ALL
         LH    RNDX,WBUFSZ              SET TO FILL UP CURRENT BUFFER
         B     IDLES090                 GO PUT THEM IN
         SPACE 2
IDLES110 EQU   *
         BCTR  RNDX,RZERO               DECREMENT COUNT FOR MOVE
         EX    RNDX,INSRTIDL            PUT IN REMAINING IDLES
         LA    RNDX,ONE(,RNDX)          RESTORE ACCURATE COUNT
         SPACE 2
IDLES120 EQU   *
         LA    RNDX,ONE(,RNDX)          ADD ONE FOR THE FIRST ONE
         AR    RTCBUF,RNDX              POINT PAST THE IDLES
         SR    RTEMPA,RNDX              WAS THERE ROOM
         LTR   RTEMPA,RTEMPA            FOR ALL OF THEM
         BZ    IDLES130                 YES, BRANCH
         STC   RTEMPA,CARCT+ONE         STORE NUMBER OF IDLES NOT MOVED
         OI    CARCT+ONE,IDLEFLAG       INDICATE THAT COUNT IS IDLES
         B     IDLES140                 DONT CLEAR CARRIAGE COUNT
         SPACE 2
IDLES130 EQU   *
         XC    CARCT,CARCT              CLEAR OUT CARRIAGE COUNT
         SPACE 2
IDLES140 EQU   *
         LH    RTEMPA,WBUFSZ
         LH    RTEMPA,WBUFSZ            GET TCAM BUFFER SIZE
         SR    RTEMPA,RNDX              SUBTRACT NUMBER OF IDLES MOVED
         STH   RTEMPA,WBUFSZ            STORE BACK UPDATED COUNT
         L     RTEMPA,TOR               GET NUMBER OF CHARACTERS MOVED
         AR    RTEMPA,RNDX              ADD NUMBER OF IDLES MOVED
         ST    RTEMPA,TOR               STORE BACK TOTAL MOVED
         BR    RLINK                    RETURN
         EJECT
AYV90000 EQU   *
         L     RRTN,TOR                 GET MOVED TO COUNT
         CH    RRTN,MSGNLNTH            IS IT GREATER THAN MSGGEN COUNT
         BNH   AYV90001                 NO, CONTINUE
         STH   RRTN,MSGNLNTH            YES, MUST HAVE ADDED SOME MORE
         SPACE 2
AYV90001 EQU   *
         LA    RRTN,RC0                 SUCCESS RETURN CODE
         TM    WFLGS,TSOMSG             IS THIS A MSGGEN
         BO    AYV99900                 NO, EXIT
         ICM   RRTN,ICMASK,MSGNLNTH     SET UP MOVED COUNT
         B     AYV99900                 GO TO EXIT
         SPACE 2
AYV90100 EQU   *
         TM    WFLGS,TSOMSG             IS THIS A MSGGEN
         BZ    MSGGEN25                 YES DONT EXIT WITH LINE FULL
         LA    RRTN,RC16                END OF LINE RETURN CODE
         B     AYV99900                 GO TO EXIT
         SPACE 2
AYV90200 EQU   *
         LA    RRTN,RC12                INCOMPLETE MOVE RETURN CODE
         ST    RTCBUF,DEND+EIGHT        SAVE TCAM BUFFER POSITION
         SPACE 2
AYV99900 EQU   *
         MVC   QCBCARCT,CARCT+ONE       RESTORE CARRIAGE COUNT
         MVC   TWENTY(TWELVE,RAVT),TOR  SAVE LINK REG
         ST    RRTN,SIXTEEN(RAVT)       SAVE RETURN CODE
         RETURN (14,12)
         EJECT
CNTLTRAN TR    ZERO(ZERO,RTEMPA),CTLTAB TRANSLATE INSTRUCTION
MOVDATA  MVC   ZERO(ZERO,RTCBUF),ZERO(RTSBUF) TCAM FROM TIOC
INSRTIDL MVC   ONE(ZERO,RTCBUF),ZERO(RTCBUF) PROPAGATE THE IDLES
CTLTAB   EQU   *                        *
         DC    CL1':'                   *
         DC    XL4'01020304'            *
         DC    CL1':'                   *
         DC    XL2'0607'                T
         DC    6CL1':'                  R
         DC    XL2'0E0F'                A
         DC    CL1':'                   N
         DC    XL1'11'                  S
         DC    2CL1':'                  L
         DC    XL1'14'                  A
         DC    2CL1':'                  T
         DC    XL1'17'                  E
         DC    12CL1':'                 *
         DC    XL1'24'                  T
         DC    2CL1':'                  A
         DC    XL1'27'                  B
         DC    7CL1':'                  L
         DC    XL1'2F'                  E
         DC    4CL1':'                  *
         DC    XL3'343536'              *
         DC    201CL1':'                *
CRLFCR   DC    X'0D250D'                TWX ENDING POSSIBILITIES
AYVPATCH DC    20F'0'                   PATCH AREA
HALFONE  DC    H'0001'                  HALFWORD ONE
BTULNGTH DC    H'0019'                  BTU AND OFFSET LENGTH IN BUF
FULLWD15 DC    F'15'                    FULL WORD OF FIFTEEN
         EJECT
GMAIN    DSECT
TSBUFR   DS    F                        TSO BUF OR MSGGEN ADDRESS
TCBUFR   DS    F                        TCAM/SCB ADDRESS
MOVED    DS    H                        DATA MOVED
LINE     DS    H                        LINE SIZE REMAINING
BLNTH    DS    H                        TSO BUFFER DATA SIZE
MSGLEN   DS    H                        MESSAGE SIZE
WBUFSZ   DS    H                        TCAM BUFFER SIZE
*                                                                     *
CARCT    DS    H                        QCBCARCT
*                             BIT DEFINITIONS                         *
SBASCND  EQU   X'F0'                    SECOND ENTRY OFFSET
CUR1SCND EQU   X'F1'                    SECOND ENTRY OFFSET
CUR2SCND EQU   X'F2'                    SECOND ENTRY OFFSET
STFDSCND EQU   X'F3'                    SECOND ENTRY OFFSET
RDATSCND EQU   X'F4'                    SECOND ENTRY OFFSET
INCSCND  EQU   X'F5'                    SECOND ENTRY OFFSET
ETXSCND  EQU   X'F6'                    SECOND ENTRY OFFSET
EOTSCND  EQU   X'F7'                    SECOND ENTRY OFFSET
*                                                                     *
LINESV   DS    H                        FROM TSB OR DEFAULT
*                                                                     *
LINENUM  EQU   LINESV                   DISPLAY NUMBER OF LINES
LINESIZE EQU   LINESV+1                 DISPLAY LINE SIZE
*                                                                     *
SWT1     DS    X                        SWITCH 1
*                             BIT DEFINITIONS                         *
CUR2FLAG EQU   X'80'                    SECOND CURSOR FLAG
CUR1FLAG EQU   X'40'                    FIRST CURSOR FLAG
RDATTNLF EQU   X'20'                    READ ATTRIBUTE BYTE FLAG
SFATTSW  EQU   X'10'                    START FIELD FLAG
BYPFLAG  EQU   X'08'                    BYPASS FLAG
CRNL     EQU   X'04'                    CARRIAGE RETURN/NEWLINE FLAG
SBAENDSW EQU   X'02'                    SET BUFFER ADDRESS FLAG
INCSW    EQU   X'01'                    INSERT CURSOR FLAG
*                                                                     *
SWT2     DS    X                        SWITCH 2
*                             BIT DEFINITIONS                         *
RETCOD4  EQU   4                        CALCSIZE RETURN CODE 4
RETCOD8  EQU   8                        CALCSIZE RETURN CODE OF 8
RETCOD12 EQU   12                       CALCSIZE RETURN CODE OF 12
RETCOD16 EQU   16                       CALCSIZE RETURN CODE OF 16
RETCOD40 EQU   40                       CALCSIZE RETURN CODE NO ROOM
*                                                                     *
WFLGS    DS    H                        TSO FLAGS
*                             BIT DEFINITIONS                         *
TSOMSG   EQU   X'80'                    TSO ENTRY
CONTROLM EQU   X'40'                    CONTROL MODE
TSOASIS  EQU   X'20'                    TSO TPUT ASIS
FRSTMGEN EQU   X'10'                    FIRST TIME IN EDIT ON MSGGEN
NOLEFT   EQU   X'06'                    NO LEFT JUSTIFICATION REQUEST
LEFT     EQU   X'05'                    LEFT JUSTIFICATION REQUEST
*                                                                     *
SAVX1    DS    H                        SCREEN CURSOR ADDRESS
*                                                                     *
FLAG1    DS    X                        FLAG BYTE 1
*                             BIT DEFINITIONS                         *
TRAILER  EQU   X'80'                    TRAILER BUFFER FLAG
FLASHBCK EQU   X'40'                    FLASHBACK REQUESTED FLAG
RESTSW   EQU   X'20'                    RESTORE CHAR FLAG      @SA73817
RECALC   EQU   X'10'                    USED LOCALLY IN AYB.   @SA75159
*                                       BYPASS CODE AND RESET  @SA75159
EOTSW    EQU   X'02'                    EOT FLAG
ETXSW    EQU   X'01'                    ETX FLAG
*                                                                     *
FLAG2    DS    X                        FLAG BYTE 2
*                             BIT DEFINITIONS                         *
X3705    EQU   X'80'                    TERMINAL ON A 3705       Y06327
X1050    EQU   X'40'                    DEVICE IS A 1050         Y06237
NLCRFLAG EQU   X'10'                    NL/CR COUNT FLAG
NWLNCNT  EQU   X'08'                    LINE COUNT FLAG
CARRDATT EQU   X'04'                    READ ATTRIBUTE LINE POS FLAG
HEADERFG EQU   X'02'                    FIRST BASIC UNIT FLAG
NOMOVECT EQU   X'01'                    NO MOVECOUNT FLAG
*                                                                     *
SAVX2    DS    H                        FIRST/LAST CHARACTER
TOR      DS    F                        DATA COUNT
FROMR    DS    F                        DATA COUNT MOVED
TSCURR   DS    F                        CURRENT TSO BUFFER
MSGNLNTH DS    H                        LENGTH OF MSGGEN DATA
DEND     DS    D                        DOUBLE SAVE
SIZE     EQU   *-GMAIN                  GMAIN LENGTH
         EJECT
         TTNTD
         EJECT
         TTRMD
         EJECT
         TTSID
         EJECT
         TPRFD
         EJECT
         TLCBD
         EJECT
         TQCBD
QCBFLGS  EQU   QCBIEND+QCBEND           SPECIAL QCB FLAGS      @Y17XAYP
         EJECT
         TSCBD
AYOSRCE  EQU   SCBSRCE+16               CONFORM WITH IEDAYO      A56230
         EJECT
         TTSWD
         EJECT
         TAVTD
         EJECT
         DCBD  DSORG=TX
         EJECT
         TDCTD
         EJECT
         IKJTSB
         EJECT
         TPRIOR                                                  A53617
         EJECT
         IKJTIOCB
         EJECT
         IKJTIOCP
         EJECT
         END
