AYA      TITLE 'IEDAYA   - TSO/TIOC/TCAM ATTENTION ROUTINE'
IEDAYA   CSECT
***********************************************************************
***********************************************************************
*
*        TCAM VERSION 10.0 CHANGES                             @G36XRYP
*A332000,501000                                                @G36XRYP
*C277000,293000,328000-336000,409000,254000,269000,313000      @G36XRYP
*C315000-316000                                                @G36XRYP
*D118000,128000,304000,306000,296000-297000,300000-307000      @G36XRYP
*D491000,497000                                                @G36XRYP
*
*        RA0034 CHANGES                                        @OY14092
*                                                              @OY14092
*A281000,432000                                                @OY14092
*C173000                                                       @OY14092
*                                                                     *
*         RELEASE 21.8 CHANGES                                        *
*0000198000,222000,222700                                      @YA12590
*0000195000,198000,216352,216353,498100,498150,512950-512980   @YA11542
*A230800,230820-230840                                          SA67806
*C000600,230900,512980                                          SA67806
*         RELEASE 21 DELETIONS                                        *
*0000222300,222600                                              SA59964
*1198                                                            A44839
*1198424000                                                      M0104
*1198023800-025800,028800,285000-489000                          S21008
*1198003600,283000                                               M0891
*         RELEASE 20 DELETIONS                                        *
*                                                                 M2297
*0000149000-150000,215500,215600,215800,216160,229600-231000,    M0029
*0000242000,305000,377000,405000,521000-999999                   M0029
*                                                                 M5113
*                                                                M3658
*                                                                 M6123
*                                                                     *
************************************************************** @Y17XAYP
* MODULE NAME = IEDAYE (TCAM,TSO)                              @Y17XAYP
*                                                              @Y17XAYP
* DESCRIPTIVE NAME = TIME SHARING ATTENTION ROUTINE            @Y17XAYP
*                                                              @Y17XAYP
* COPYRIGHT = NONE                                             @Y17XAYP
*                                                              @Y17XAYP
* STATUS = VERSION 10.0                                        @Y17XAYP
*                                                              @Y17XAYP
* FUNCTION -                                                          *
*    IF THE ERB IS ENQUEUED WHEN THIS MODULE IS ENTERED, IT IS DEQUEUE*
*    AND ANY ASSOCIATED BASIC UNITS ARE TPOSTED TO BUFFER RETURN. THE *
*    MODULE THEN LOCATES THE NECESSARY CONTROL BLOCKS AND DETERMINES  *
*    WHETHER HARDWARE OR SIMULATED ATTENTION HAS OCCURRED. IF AN HARD-*
*    WARE ATTENTION INTERRUPT HAS OCCURRED, TESTS ARE MADE TO DETERMIN*
*    WHETHER LINE DELETE IS INDICATED (SIMULATED ATTENTION CANNOT BE  *
*    USED FOR LINE DELETE). IF LINE DELETE IS INDICATED, THE SCBXPD   *
*    BIT IS SET TO TELL THE MSGGEN RTN TO WRITE THE DELETE MESSAGE AND*
*    A BRANCH RETURN IS MADE TO THE TCAM DISPATCHER. IF THE ATTENTION *
*    INTERRUPT WAS NOT FOR LINE DELTE (OR IF SIMULATED ATTENTION WAS  *
*    RECEIVED) QTIP 0 IS ISSUED.  ERROR BITS
*    ARE RESET IN THE SCB TO TELL MSGGEN TO WRITE THE ATTENTION       *
*    ACCEPTED MESSAGE AND A BRANCH IS MADE TO MSGGEN RTN. IF NO       *
*    EXITS ARE AVAILABLE, SCBXPI IS SET TO TELL
*    MSGGEN TO WRITE THE ATTENTION IGNORED MESSAGE AND BRANCH IS MADE *
*    TO MSGGEN RTN.                                                   *
*                                                                     *
* ENTRY POINTS -                                                      *
*         ENTRY 1 - IEDAYA - BALR FROM TCAM DISPATCHER WITH SCBATTN   *
*         AND/OR SCBSATTN ON                                          *
*         ENTRY 2 - IEDAYA+12 - BALR FROM TCAM DISPATCHER WHEN ATTN   *
*         INTERRUPT IS RECEIVED ON A SINGLE PREPARE CCW               *
*                                                                     *
* INPUT -                                                             *
*    R1  - LCB                                                        *
*    R3  - SCB                                                        *
*    R12 - ENTRY POINT                                                *
*    SCBATTN ON IN SCB IF HARDWARE ATTN DETECTED                      *
*    SCBSATTN ON IN SCB IF SIMULATED ATTN DETECTED                    *
*                                                                     *
* OUTPUT -                                                            *
*    SCBXPD ON IN SCB IF 'DELETE' MESSAGE REQUIRED                    *
*    SCBXPI ON IN SCB IF 'IGNORE' MESSAGE REQUIRED                    *
*    BOTH OFF IF 'ACCEPTED' MESSAGE REQUIRED                          *
* EXTERNAL REFERENCES -                                               *
*         IEDAYAA - TIOC ATTN ROUTINE VIA QTIP SVC                    *
*         IEDQTNT - TERM NAME TABLE CODE                              *
*         DSPPOSTR - TCAM DISPATCHER                                  *
*                                                                     *
* EXITS,NORMAL -                                                      *
*         BRANCH RETURN TO TCAM DISPATCHER,DSPCHAIN                   *
*         BRANCH TO MSGGEN ROUTINE                                    *
*                                                                     *
* EXITS,ERROR - NONE                                                  *
*                                                                     *
* TABLES/WORKAREAS - NONE                                             *
*                                                                     *
* ATTRIBUTES - REENTRANT,ENABLED                                      *
*                                                                     *
* CHARACTER CODE DEPENDENCIES - NONE                                  *
*                                                                     *
* NOTES - NONE                                                        *
*                                                                     *
***********************************************************************
***********************************************************************
         EJECT
***********************************************************************
***********************************************************************
*                                                                     *
*   E Q U A T E S                                                     *
*                                                                     *
***********************************************************************
***********************************************************************
R0       EQU   0                        REGISTER 0
R1       EQU   1                        REGISTER 1
R2       EQU   2                        REGISTER 2
R3       EQU   3                        REGISTER 3
RSCB     EQU   3                        SCB REGISTER
R4       EQU   4                        REGISTER 4
RLCB     EQU   4                        LCB REGISTER
R5       EQU   5                        REGISTER 5
R6       EQU   6                        REGISTER 6
RTSB     EQU   6                        TSB REGISTER
R7       EQU   7                        REGISTER 7
RQCB     EQU   7                        QCB REGISTER
R8       EQU   8                        REGISTER 8
RRCB     EQU   8                        RCB REGISTER
R9       EQU   9                        REGISTER 9
RAVT     EQU   9                        AVT REGISTER
R10      EQU   10                       REGISTER 10
R11      EQU   11                       REGISTER 11
R12      EQU   12                       REGISTER 12
RBASE    EQU   12                       BASE REGISTER
R13      EQU   13                       REGISTER 13
R14      EQU   14                       REGISTER 14
R15      EQU   15                       REGISTER 15
EZERO    EQU   0                        LENGTH/DISPLACEMENT CONSTANT
EONE     EQU   1                        LENGTH/DISPLACEMENT CONSTANT
E2       EQU   2                        LENGTH/DISPLACEMENT CONSTANT
L3       EQU   3                        LENGTH/DISPLACEMENT CONSTANT
NOT      EQU   X'FF'                    TO TURN OFF BITS
QTIP     EQU   101                      QUICK TERMINAL INTERFACE M0104
*                                       PROGRAM
         EJECT
         USING IEDAYA,RBASE             ABSOLUTE ADDRESSABILITY
         USING IEDQLCB,RLCB
         USING IEDQSCB,RSCB
         USING AVTSAVE2,R13
         USING CVT,R10
         USING IEDQDISP,R11
         USING IEDQQCB,RQCB
         B     SAVE                     NORMAL ENTRY (QCB WORD 1)
         DC    F'0'                     QCB FILLER   (QCB WORD 2)
         DC    AL1(DSPMCPL4),AL3(*-EONE)  STB PTR TO SELF (QCB WRD 3)
*
* ENTRY 2 ENTERED WHEN AN ATTENTION INTERRUPT HAS BEEN RECEIVED
*          ON A SINGLE PREPARE CCW.
*
*          INPUT: R1- LCB
*                 R3- STCB
*                 R15 ENTRY POINT
*
*
ENTRY@12 EQU   *
         DROP  RBASE
         USING ENTRY@12,R15
         LR    RBASE,R15                LOAD ENTRY ADDR
         SH    RBASE,ADJCNST            ADJUST BASE TO IEDAYA
         DROP  R15
         USING IEDAYA,RBASE
         LR    RLCB,R1                  LCB INTO RLCB
         L     RSCB,LCBSCBA-EONE        LOAD ADDRESS OF SCB
         SR    R5,R5                    INDICATE ENTRY 2
         B     QCB                      GET QCB
IEDAYA   IEDHJN ,                                              @OY14092
         SPACE
***********************************************************************
*   QCB                                 REG 7                         *
***********************************************************************
SAVE     DS    0H
         LA    R5,EONE                  INDICATE ENTRY 1
QCB      EQU   *
         SPACE 2
***********************************************************************
*                                                                     *
*   WHEN HANGUP OR ATTENTION TERMINATES AN OUTPUT OPERATION AND THE   *
*   ERB FOR THAT LINE IS IN THE BUFFER RETURN QUEUE, THE ERB MUST BE  *
*   DEQUEUED AND ANY ASSOCIATED BASIC UNITS MUST BE TPOSTED TO BUFFER *
*   RETURN.                                                           *
*                                                                     *
***********************************************************************
         SPACE 2
         TM    LCBERBST,LCBINQ          IS ERB ENQUEUED
         BNO   DEQEXIT                  NO,NO NEED TO REMOVE
*
*   SCAN BUFFER RETURN QUEUE TO FIND ERB
*
         LA    R0,LCBERB                GET THIS LINES ERB ADDR
         LA    R14,AVTBFRTB             GET ADDR OF ERB CHAIN
DEQSRCH  EQU   *
         CLC   EONE(L3,R14),AVTDELAD+EONE  IS THIS END OF QUEUE
         BZ    DEQRESET                 YES,ERB NOT FOUND
         L     R15,EZERO(R14)           GET ADDR OF ERB (IF ANY)
         LA    R15,EZERO(R15)           CLEAR HIGH ORDER BYTE
         CR    R15,R0                   IS THIS THE ERB FOR THIS LINE
         BE    DEQDEQ                   YES,GO DEQUEUE IT
         LA    R14,LCBERBLK-EONE-LCBERB(R15)  GET ERB POINTER
         B     DEQSRCH                  CONTINUE SEARCHING
*
*   DEQUEUE ERB AND RETURN BASIC UNITS
*
DEQDEQ   EQU   *
         MVC   EONE(L3,R14),LCBERBLK    REMOVE ERB FROM CHAIN
         NC    LCBERBCH,LCBERBCH        ANY BASIC UNITS TO FREE
         BZ    DEQRESET                 NO,GO SHOW ERB DQUED
         L     R1,LCBERBCH-EONE         GET ADDR OF BUFFR FRAG.
         USING IEDQPRF,R1               TCAM BFR ADDRESSABLE
         XC    LCBERBCH,LCBERBCH        CLEAR CHAIN POINTER
DEQLOOP  EQU   *
         LA    R14,AVTBFRTB             GET BUFF RETN QCB ADDR
         ST    R14,PRFQCBA-EONE         PUT QCB ADDR IN ELEM.
         MVI   PRFPRI,PRIBFRTB          SET TPOST PRIORITY
         L     R6,PRFLINK-EONE          GET NEXT BFR'S ADDR
         XC    PRFLINK,PRFLINK          CLEAR BUFFER POINTER
*
*   GO TPOST BASIC UNITS TO BUFFER RETURN
*   AT RETURN, REGISTERS 3 AND 7 MAY BE ALTERED.
*
         LR    R2,R3                    SAVE SCB ADDR
         BAL   R14,DSPPOSTR             GO TPOST
         LR    R3,R2                    RESTORE SCB ADDR
         LA    R6,EZERO(,R6)            CLEAR BYTE ZERO
         LTR   R1,R6                    TEST FOR MORE UNITS
         BNZ   DEQLOOP                  BR IF MORE TO TPOST
DEQRESET EQU   *
         NI    LCBERBST,NOT-LCBINQ      SHOW ERB DEQUEUED
DEQEXIT  EQU   *
         DROP  R1
         SPACE
         LH    R1,LCBTTCIN              GET INDEX TO TNT
         N     R1,AVTCLRHI              CLEAR LEFT 2 BYTES OF REGISTER
         L     R15,AVTRNMPT             GET ADDRESS OF TNT
         BALR  R14,R15                  BRANCH TO CODE AT BEGINNING OF
*                                       TNT
         LR    R2,R1                    GET ADDR OF TERM ENTRY TABLE
         LA    R6,TRMPRFSZ              GET TRM PREFIX SIZE    @Y17XAYP
         SR    R2,R6                    BACK UP TO PREFIX      @Y17XAYP
         USING IEDNTRM,R2               TRM PREFIX             @Y17XAYP
*                                       ADDRESSABILITY         @Y17XAYP
         L     RQCB,TRMDESTQ-EONE       GET DESTINATION QCB
         TM    QCBFLAG,QCBTSSES         TEST IF TSO IN SESSION
         BZ    TSONOTUP                IF NOT,RETURN             M0029
         TM    AVTBIT3,AVTTSAB          TEST FOR TSO HAS ABENDED A44839
         BO    TSONOTUP                 YES, RETURN              A44839
         TM    LCBSTAT1,LCBRECVN       IS LINE IN RECEIVE MODE   M0029
         BO    SIMREAD                 YES,IEDAYC HAS CKD ATTN @G36XRYP
*                                       FEATURE                  M0029
         SR    R6,R6                   NO,CLEAR REGISTER         M0029
         IC    R6,TRMCHCIN             GET INDEX TO DEVICE CHAR. M0029
*                                       TABLE                    M0029
         BCTR  R6,R0                   DECREMENT BY 1            M0029
         MH    R6,AVTDCTLN              MULTIPLY BY SIZE OF 1  @Y17XAYP
*                                       ENTRY FOR OFFSET       @Y17XAYP
         A     R6,AVTCSTCS             GET ADDR OF PROPER ENTRY  M0029
         USING IEDDCT,R6                DCT ADDRESSABILITY     @Y17XAYP
         TM    DCTBYTE1,DCTATTEN        DOES TERMINAL HAVE     @Y17XAYP
*                                       ATTENION FEATURE       @Y17XAYP
         BZ    TSONOTUP                IF NOT,RETURN             M0029
         OI    SCBERR3,SCBATTN         YES,SET ATTN FROM         M0029
*                                       HARDWARE                 M0029
         B     SIMREAD                 GO GET ASCB ADDR        @G36XRYP
*
*   WHEN TSO IS NOT IN SESSION RETURN TO TCAM
*
TSONOTUP EQU   *                                                 M0029
         LTR   R5,R5                   WHICH ENTRY               M0029
         BZ    POSTERB                  ENTRY 2,RETURN
         LA    R1,LCBERB                LCBERB IN R1
         BAL   R14,DSPCHAIN             RETURN                 @G36XRYP
POSTERB  EQU   *
         TM    LCBSTAT2,LCBMSGNN        IS MSGGEN IN PROGRESS
         BO    NOSET                    YES,DO NOT RESET LINE
         NI    LCBSTAT1,LCBOCNI+LCBOCWTN CLEAR STATUS          @OY14092
         OI    LCBSTAT1,LCBRECVN        SET RECEIVE STATE      @YA11542
NOSET    EQU   *
         LA    R14,X0100                .INDICATE
         IC    R0,SCBRCVCT              .END
         ST    R14,SCBMACR-1            .OF
         STC   R0,SCBRCVCT              .MESSAGE
         XC    LCBERBLK,LCBERBLK        CLEAR LINK FIELD
         MVI   LCBERBPY,PRIRCQCB        SET PRIORITY
         L     R1,AVTMSGS-1             .POST THE
         MVC   LCBERBQB,EONE(R1)        .ERB
         LA    R1,LCBERB                .TO
         BAL   R14,DSPCHAIN             .BUFFER DISPOSITION    @G36XRYP
*
         SPACE
SIMREAD  EQU   *                                               @G36XRYP
         NI    QCBTSOF1,NOT-QCBSATRD    RESET SIM ATTN READ
         SPACE
***********************************************************************
*   ASCB                                REG 5                         *
***********************************************************************
         SPACE
         TM    QCBTSOF1,QCBDELAY        IS QCB ON DELAY Q
         BO    ASCBARND                 GET ASID FROM QCBLINK  @G36XRYP
         LH    R6,QCBTJID               GET ASID               @G36XRYP
         B     ASIDSKIP                 GET ASCB ADDR          @G36XRYP
ASCBARND LH    R6,QCBLINK+EONE          GET ASID FROM LINK FLD @G36XRYP
         LR    R1,RQCB                 ENTRY 2-PUT QCB IN PARM   M0029
*                                       REG.                     M0029
         L     R15,AVTHG02             LOCATE RTN TO REMOVE QCB  M0029
*                                       FROM                     M0029
         BALR  R14,R15                 TIME DELAY QUE AND GO     M0029
*                                       THERE                    M0029
ASIDSKIP EQU   *                                                SA67806
         LTR   R6,R6                    CHECK FOR ZERO ASID    @G36XRYP
         BNP   TSONOTUP                 ZERO OR NEGATIVE, QUIT  SA67806
         LR    R14,R5                  ENTRY INDICATOR IN R14   SA67806
         LR    R15,R6                   SAVE ASID              @G36XRYP
         L     R10,CVTPTR               GET CVT ADDRESS        @G36XRYP
         L     R5,CVTASVT-CVT(R10)      GET ASVT ADDRESS       @G36XRYP
         BCTR  R6,AVTEZERO              DECREMENT ASID BY ONE  @G36XRYP
         SLL   R6,2                     MULTIPLY BY FOUR  FOR  @G36XRYP
*                                       INDEX TO ASCB PTR IN   @G36XRYP
*                                       ASVT                   @G36XRYP
         L     R5,ASVTENTY-ASVT(R5,R6)  GET ADDRESS OF CORRECT @ZM46782
*                                       ASCB                   @G36XRYP
         SPACE
************************************************************** @G36XRYP
*        TIOCRPT                        REG 10                 @G36XRYP
************************************************************** @G36XRYP
         L     R10,CVTAQAVT-CVT(,R10)   GET TCX ADDRESS        @G36XRYP
         L     R10,TCXRPT-IEDQTCX(,R10) GET TIOCRPT ADDRESS    @G36XRYP
         SPACE
***********************************************************************
*   TSB                                 REG 6                         *
***********************************************************************
         SPACE
         L     RTSB,ASCBTSB-ASCB(,R5)   GET PTR TO TSB         @G36XRYP
         USING TSB,RTSB
***********************************************************************
*                                                                     *
*   BEGIN ROUTINE LOGIC                                               *
*                                                                     *
***********************************************************************
         TM    TRMSTATE,TRMPREF         IS THERE A PREFIX      @Y17XAYP
         BZ    SKIPSNA                  NO,DON'T MAKE SNA CHK  @Y17XAYP
         TM    TRMBYTE0,TRMSNA          IS THIS A SNA TERMINAL @Y17XAYP
         BZ    SKIPSNA                  NO,BRANCH              @Y17XAYP
************************************************************** @Y17XAYP
*                                                              @Y17XAYP
*        CHECK FOR SNA OUTPUT CANCEL FOR LINE DELETE           @Y17XAYP
*                                                              @Y17XAYP
************************************************************** @Y17XAYP
         TM    LCBSTAT1,LCBSENDN        OUTPUT MH PROCESSING   @Y17XAYP
         BNO   SKIPSNA                  DON'T CHECK FOR CANCEL @Y17XAYP
         TM    SCBERR2,SCBRRJN          REQUEST REJECTED       @Y17XAYP
         BNO   SKIPSNA                  DON'T CHECK SENSE      @Y17XAYP
         CLI   LCBSMIN,SNSCNCL          CANCEL SENSE REC'D     @Y17XAYP
         BNE   SKIPSNA                  NOT CANCEL OUTPUT      @Y17XAYP
         OI    SCBERR3,SCBATTN          INDICATE CANCEL OUTPUT @Y17XAYP
SKIPSNA  EQU   *                                               @Y17XAYP
         SPACE
         NI    SCBERR1,NOT-SCBNOBFN-SCBCUTFN  RESET ERROR
         NI    SCBERR4,SCBTXTTF               INDICATORS
         LTR   R14,R14                  TEST IF ENTRY TO '2'
         BZ    TESTSTAX                 YES, GOTO TEST STAX EXIT
BEGIN    TM    SCBERR3,SCBATTN          HARDWARE ATTN RECEIVED
         BZ    SIMATTN                  NO, BR TO SIM-ATTN CODE
HARDATTN EQU   *
         TM    LCBSTAT1,LCBRECVN        INPUT MODE
         BZ    TESTSTAX                 NO, BR TO TEST EXIT AVAIL.
         TM    TSBSTAT,TSBATNLD         ATTN FOR INPUT LINE DELETE
         BZ    TESTSTAX                 NO, BR TO TEST EXIT AVAIL.
         TM    SCBERR3,SCBSATTN         TEST IF NULL LINE INDICATOR ON
         BNO   DELETE                   NO,GOTO DELETE THE LINE
*
         NI    SCBERR3,NOT-SCBSATTN     RESET NULL LINE INDICATOR
         B     TESTSTAX                 GOTO TEST STAX EXIT
         SPACE
DELETE   EQU   *
         OI    SCBERR3,SCBXPD           SETUP LINE DELETE MSG.
         NI    SCBERR3,NOT-SCBXPI-SCBSATTN-SCBATTN  RESET BITS
         SPACE
         SPACE
         B     RETURN                   BR TO RETURN TO MH RTN
         SPACE
SIMATTN  EQU   *
         TM    SCBERR3,SCBSATTN         SIMULATED ATTN RECEIVED
         BZ    RETURN                   NO, RETURN, NOT ATTN ENTRY
         CLI   SCBSALEV,EZERO           SIM-ATTN VALUE ENTERED
         BH    TESTSTAX                 YES, BR TO TEST EXIT AVAIL.
         MVI   SCBSALEV,AVTECD16        SET ATTN LEVEL = 1       M0891
TESTSTAX EQU   *
         SPACE 1                                                 S21008
*        QTIP  0,(13)
*
         LR    R1,R13                   SAVE AREA                S21008
         SR    R0,R0                    ENTRY CODE               S21008
         STM   R2,R13,AVTEZERO(R1)      SAVE REGISTERS TO PASS   S21008
         SVC   QTIP                     ISSUE QTIP SVC           M0104
         SPACE 1                                                 S21008
RETURN   EQU   *
         MVI   SCBSALEV,EZERO           CLEAR ATTN LEVEL ENTERED
         LTR   R14,R14                  TEST IF ENTRY IS '2'
         BZ    EXIT2                    YES,GOTO EXIT-2
*
*   EXIT FOR ENTRY-1
*
         LA    R1,LCBERB                LOAD ADDR OF ERB
         BAL   R14,DSPCHAIN             RETURN TO DISPATCHER   @G36XRYP
*
EXIT2    EQU   *
*
*   EXIT FOR ENTRY-2
*
         SR    R1,R1                    RESET R1 TO '0'
         L     R2,AVTTSOPT              LOAD ADDR OF TSI
         USING IEDQTSI,R2
         LA    R14,X0100                LOAD ADDR OF X0100
         IC    R0,SCBRCVCT              SAVE MSG LIMIT
         ST    R14,SCBMACR-EONE         STORE ADDRESS IN SCB
         STC   R0,SCBRCVCT              RESTORE MSG LIMIT
*
         TM    SCBERR3,SCBXPI           TEST IF IGNORE MSG
         BO    SENDIGR                  BRANCH TO SEND IGNORE MESSAGE
*
*   SEND '!'
*
         LA    R8,ATTNACC               LOAD ADDR OF ACCEPT MSG
RETURN1  EQU   *
         TM    LCBSTAT2,LCBMSGNN        IS MSGGEN ON
         BO    RETURN2                 BRANCH IF ON
         NI    LCBSTAT1,LCBOCNI+LCBOCWTN CLEAR STATUS          @OY14092
         OI    LCBSTAT1,LCBRECVN       SET RECEIVE STATE       @YA11542
RETURN2  EQU   *
         L     R12,TSIMSGEN             LOAD ADDR OF MSSGEN ROTUINE
         MVC   LCBTTCIN,TSBASRCE        SET TERM CURR. CONNECTED INDEX
         BR    R12                      GOTO MSSGEN ROUTINE
SENDIGR  EQU   *
         LA    R8,ATTNIGNR              LOAD ADDR OF IGNORE MSG
         B     RETURN1                  GO SEND MESSAGE
         SPACE 5
***********************************************************************
*                                                                     *
*   CONSTANTS                                                         *
*                                                                     *
***********************************************************************
         SPACE
         DS    0F
K4       DC    X'04'                    CODE 4
K35      DC    X'23'                    CODE 35
K38      DC    X'26'                    CODE 38
         DS    0F
ATTNACC  DC    X'000C800000120000',A(MSGACCPT)    ACCEPT ERROR MASK
ATTNIGNR DC    X'000C800000800000',A(MSGIGNRE)    IGNORE ERROR MASK
X0100    DC    X'0100'                  END OF MESSAGE INDICATOR
MSGACCPT DC    X'03145A15'              ACCEPT MESSGEN
MSGIGNRE DC    X'04145AC915'            IGNORE MESSGEN
         DS    0H                       HALF-WORD ALIGN
ADJCNST  DC    AL2(ENTRY@12-IEDAYA)     OFFSET TO ENTRY 2
PATCHIT  DC    20F'0'                  PATCH AREA              @YA11542
         EJECT
***********************************************************************
*                                                                     *
*   DSECTS                                                            *
*                                                                     *
***********************************************************************
         SPACE
***********************************************************************
         SPACE 2                                               @G36XRYP
         IHAASCB
         SPACE 2
         IHAASVT                                               @ZM46782
         SPACE 2                                                 M0029
         TAVTD 2                                                 M0029
         SPACE 2                                                 M0029
CVT      DSECT
         CVT
         SPACE 2                                               @Y17XAYP
         TDCTD
         SPACE 2                                                 M0029
         TDISPD
         SPACE 2                                                 M0029
         TLCBD
         SPACE 2                                                 M0029
         TPRFD
         SPACE 2
         TPRIOR
         SPACE 2
         TQCBD
         SPACE 2                                                 M0029
         TSCBD
         SPACE 2                                               @Y17XAYP
         TSNSD
         SPACE 2                                                 M0029
         TTCXD
         SPACE 2                                               @G36XRYP
         TTRMD
         SPACE 2                                                 M0029
         IKJTSB
         SPACE 2                                                 M0029
         TTSID
         SPACE 2                                                 M0029
         END
