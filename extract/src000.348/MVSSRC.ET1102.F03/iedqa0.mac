A001     TITLE '''IEDQA0'' - SKIP BACKWARDS ROUTINE'
IEDQA0   CSECT
         SPACE 3                                                OX01439
*  CHANGE ACTIVITY AS FOLLOWS
******************** MICROFICHE FLAGS *********************** SUPT CODE
*A502000,774000,832000,886000,900300-903000                      S22025
*C056000,096000,616000,776000,836000,888000                      S22025
*D320000,324000,332000,336000,620000,624000                      S22025
*C684000,756000-772000,856000                                   OX01439
*D764000                                                        0X03938
*A768000                                                        0X03938
*A760000                                                       @OX13514
*D771000                                                       @OX13514
*C764000-768000                                                @OZ25452
*A796000                                                       @OZ25452
*C797000                                                       @OZ28855
         SPACE
***********************************************************************
*                                                                     *
*TITLE:  'IEDQA0' -- SKIP BACKWARDS ROUTINE                           *
*                                                                     *
*  MODULE NAME = IEDQA0                                               *
*                                                                     *
*  DESCRIPTIVE NAME = SKIP BACKWARDS ROUTINE                          *
*                                                                     *
*  COPYRIGHT = 'NONE'                                                 *
*                                                                     *
*  STATUS CHANGE LEVEL 5                                              *
*                                                                     *
*FUNCTION --                                                          *
*   MOVES THE SCAN POINTER BACKWARDS IN THE HEADER A SPECIFIED        *
*   NUMBER OF BYTES.                                                  *
*                                                                     *
*   THE PREFIX SCAN POINTER OFFSET (PRFSCAN) IS ACCESSED.  A LINK     *
*   IS MADE TO A SUBROUTINE (NEWSOU) WHICH LINKS TO THE ADDRESS       *
*   FINDER ROUTINE TO GET THE ADDRESS  OF  THE  SCAN POINTER     S22025
*   AND OF THE UNIT IN WHICH IT IS LOCATED AND SETS THE ADDRESS OF    *
*   THE LAST BYTE OF THE UNIT'S RECB IN A START-OF-UNIT REGISTER.     *
*   THE SKIP COUNT SPECIFIED IN THE PARAMETER LIST IS SET IN A        *
*   COUNT REGISTER.                                                   *
*                                                                     *
*   THE MAIN LOOP IS ENTERED AT THE LABEL DECLOOP.  THE SCAN          *
*   POINTER OFFSET REGISTER IS DECREMENTED BY ONE.  IF IT GOES TO     *
*   ZERO,  THE BACKWARDS SKIP IS INTO THE PREFIX:  AN ERROR CODE OF   *
*   X'04' IS SET IN REGISTER 15 AND RETURN IS MADE TO THE CALLER      *
*   VIA THE RETURN INTERFACE ROUTINE.                            S22025
*                                                                     *
*   THE SCAN POINTER ADDRESS REGISTER IS DECREMENTED BY ONE AND       *
*   COMPARED TO THE START-OF-UNIT REGISTER.  IF THE SCAN POINTER      *
*   ADDRESS REGISTER IS HIGH,  NORMAL PROCESSING CONTINUES.           *
*   OTHERWISE A LINK IS MADE TO THE SUBROUTINE NEWSOU TO GET A NEW    *
*   SCAN POINTER ADDRESS AND A NEW START-OF-UNIT ADDRESS IN THE       *
*   PRECEDING UNIT.                                                   *
*                                                                     *
*   IF THE BYTE LOCATED AT THE SCAN POINTER IS A BLANK,  THE          *
*   ROUTINE RETURNS TO THE MAIN LOOP AT THE LABEL DECLOOP.  IF IT     *
*   IS NOT A BLANK,  THE COUNT REGISTER IS DECREMENTED BY ONE.  IF    *
*   THE COUNT REGISTER DOES NOT GO TO ZERO,  THE ROUTINE RETURNS TO   *
*   THE MAIN LOOP AT THE LABEL DECLOOP.                               *
*                                                                     *
*   IF THE COUNT REGISTER DOES GO TO ZERO,  THE SKIP BACKWARDS IS     *
*   COMPLETE.  THE PREFIX SCAN POINTER IS UPDATED FROM THE SCAN       *
*   POINTER OFFSET REGISTER.  A RETURN CODE OF X'00' IS SET IN        *
*   REGISTER 15 AND RETURN IS MADE TO THE CALLER VIA THE RETURN       *
*   INTERFACE ROUTINE.                                                *
*                                                                     *
*ENTRY POINTS --                                                      *
*   'IEDQA0' TO SKIP BACKWARDS A SPECIFIED LENGTH.  CALLING           *
*   SEQUENCE FROM USER INTERFACE IS:                                  *
*                                                                     *
*        L     R12,AVTMSGS-1            GET ADDR OF VCON TABLE        *
*        IC    R15,AVTEZERO(,R1)        GET INDEX TO ROUTINE ADDR     *
*        L     R12,AVTEZERO(R12,R15)    GET ROUTINE ADDRESS           *
*        BR    R12                      EXIT TO ROUTINE               *
*                                                                     *
*INPUT --                                                             *
*   REGISTER 1 -- THE ADDRESS OF A PARAMETER LIST BUILT BY THE        *
*   SETSCAN MACRO EXPANSION.  PARAMETER LIST FORMAT IS:               *
*                                                                     *
*        *********************************                            *
*        *       * PARAM *               *                            *
*        * INDEX * LIST  *  SKIP COUNT   *                            *
*        *       * LNGTH *               *                            *
*        *********************************                            *
*                                                                     *
*   REGISTER 6 -- THE ADDRESS OF THE CURRENT BUFFER.                  *
*                                                                     *
*   REGISTER 9 -- THE ADDRESS OF THE AVT.                             *
*                                                                     *
*   REGISTER 12 -- THE ENTRY POINT ADDRESS AND BASE REGISTER FOR      *
*   THIS ROUTINE.                                                     *
*                                                                     *
*OUTPUT --                                                            *
*   REGISTER 15 -- RETURN CODE.  ITS VALUE IS X'00' FOR SUCCESSFUL    *
*   COMPLETION OR X'04' IF THE SKIP BACKWARDS RUNS INTO THE PREFIX.   *
*                                                                     *
*   PREFIX SCAN POINTER OFFSET (PRFSCAN) -- ON SUCCESSFUL             *
*   COMPLETION,  UPDATED TO POINT TO A LOCATION THE SPECIFIED         *
*   NUMBER OF DATA BYTES BEFORE ITS FORMER LOCATION.                  *
*                                                                     *
*EXTERNAL REFERENCES --                                               *
*                                                                     *
*   AVT -- ADDRESS VECTOR TABLE.                                      *
*                                                                     *
*   BUFFER CURRENTLY BEING PROCESSED.                                 *
*                                                                     *
*EXITS,  NORMAL -- SUCCESSFUL COMPLETION.  THE PREFIX SCAN POINTER    *
*   (PRFSCAN) POINTS TO A LOCATION THE SPECIFIED NUMBER OF DATA       *
*   BYTES BEFORE ITS FORMER LOCATION.  REGISTER 15 CONTAINS A         *
*   RETURN CODE OF X'00'.                                             *
*                                                                     *
*EXITS,  ERROR -- SKIP BACKWARDS ATTEMPTED TO RUN INTO THE PREFIX.    *
*   REGISTER 15 CONTAINS A RETURN CODE OF X'04'.                      *
*                                                                     *
*TABLES/WORK AREAS -- N/A.                                            *
*                                                                     *
*ATTRIBUTES -- SERIALLY REUSABLE,ENABLED,RESIDENT,PROBLEM PROGRAM MODE*
*                                                                     *
*NOTES -- THE OPERATION OF THIS MODULE DOES NOT DEPEND UPON AN        *
*   INTERNAL REPRESENTATION OF THE EXTERNAL CHARACTER SET.            *
*                                                                     *
***********************************************************************
         EJECT
********* REGISTER EQUATES *********
         SPACE
R1       EQU   1                        PARAMETER LIST REG
         SPACE 1                                                 S22025
RWORK2   EQU   2                        WORK REGISTER            S22025
         SPACE
REOPOFF  EQU   3                        END-OF-PREFIX OFFSET
         SPACE
RLCB4    EQU   4                        ADDRESS OF LCB
         SPACE
RSCAN    EQU   5                        SCAN POINTER ADDRESS
         SPACE
RPREFIX  EQU   6                        ADDR OF BUFFER
         SPACE
RSCANOFF EQU   7                        SCAN POINTER OFFSET
         SPACE
RBLANK8  EQU   8                        BLANK CHARACTER
         SPACE
RAVT     EQU   9                        ADDRESS OF AVT
         SPACE
RPARLEN  EQU   10                       LENGTH OF SKIP REQUESTED
         SPACE 1                                                 S22025
REOUAD   EQU   11                       ADDR OF CURRENT END OF UNS22025
         SPACE
RBASE    EQU   12                       BASE REGISTER
         SPACE
R13      EQU   13                       ADDR OF SAVE AREA
R14      EQU   14                       RETURN REGISTER
R15      EQU   15                       BRANCH REGISTER &
*                                         RETURN CODE REGISTER
         SPACE
********* PARAMETER LIST OFFSETS *********
         SPACE
PARMINDX EQU   0                        INDEX BYTE
PARMLEN  EQU   1                        PARAMETER LIST LENGTH
PARMSKIP EQU   2                        LENGTH OF SKIP
PARMBLNK EQU   4                        BLANK CHARACTER
         SPACE
********* OTHER EQUATES *********
         SPACE
NOBLANKN EQU   X'02'                    'NO BLANK' FLAG
FOUR     EQU   4                        PARAMETER LIST LENGTH
*                                         IF EBCDIC BLANK
         EJECT
         USING IEDQAVTD,RAVT
         USING IEDQLCB,RLCB4
         USING IEDQPRF,RPREFIX
         USING IEDQA001,RBASE
         SPACE
IEDQA001 EQU   *
IEDQA0   IEDHJN SKIPBACK
         LA    R15,AVTECD4              SET MBH RETURN CODE
         LNR   R15,R15                    FOR THIS TEST
         CLC   PRFSCAN,PRFSIZE          SCAN PT BEYOND END OF BFR
         BH    EXIT                     YES, RETURN IMMEDIATELY
         SPACE
         LH    RSCANOFF,PRFSCAN         GET SCAN POINTER
         N     RSCANOFF,AVTCLRHI        CLEAR TOP HALF OF REGISTER
         LH    RPARLEN,PARMSKIP(,R1)    GET SKIP LENGTH
         N     RPARLEN,AVTCLRHI         CLEAR TOP HALF OF REGISTER
         BZ    ADDRONLY                 RETURN ADDR ONLY IF ZERO
         SPACE
         SR    REOPOFF,REOPOFF          (CLEAR FOR INSERT)
         IC    REOPOFF,LCBISZE          PICK UP NO. OF RESERVES
         LA    REOPOFF,AVTTXTSZ(,REOPOFF)  ADD TEXT PREFIX SIZE OX01439
*                                         OF TEXT PREFIX
         TM    PRFSTAT1,PRFNHDRN        IS THIS A HEADER BUFFER
         BO    TESTBLNK                 NO, EOP OFFSET IS RIGHT
         SPACE
         LA    REOPOFF,AVTHDRSZ-AVTTXTSZ(,REOPOFF) YES, ADD EXTRA
         SPACE
TESTBLNK EQU   *
         TM    PARMINDX(R1),NOBLANKN    IS BLANK DEFINED
         BO    SKIPSUBT                 NO, SUBTRACT DIRECTLY
         SPACE
         CLI   PARMLEN(R1),FOUR         IS IT EBCDIC BLANK
         LA    RBLANK8,AVTEBLNK         ASSUME YES
         BE    LOOP                     YES, IT IS SET RIGHT
         SPACE
         IC    RBLANK8,PARMBLNK(,R1)    NO, PICK UP FROM PARM LIST
         SPACE
LOOP     EQU   *
         CR    RSCANOFF,REOPOFF         TEST IF INTO PREFIX     OX01439
         BNH   ERROR                    YES,ERROR,BRANCH        OX01439
         BCTR  RSCANOFF,AVTEZERO        DECREMENT SCAN OFFSET  @OZ25452
         LR    RSCAN,RSCANOFF           SAVE CURRENT OFFSET    @OZ25452
         LR    RWORK2,RPREFIX           LOAD PREFIX ADDR         S22025
         BAL   R14,ENTERLOP             GET ADDR OF SCAN POINTER S22025
         SPACE
         EX    RBLANK8,CLIX             IS BYTE A BLANK
         BE    LOOP                     YES, DON'T COUNT IT, LOOP
         SPACE
         BCT   RPARLEN,LOOP             NO, COUNT, LOOP IF NOT ZERO
         CR    RSCANOFF,REOPOFF         SCAN INOT PREFIX       @OZ25452
         BL    ERROR                    YES, DONT UPDATE       @OZ28855
         SPACE
SETSCAN  EQU   *
         STH   RSCANOFF,PRFSCAN         RESET SCAN POINTER
         SPACE
GOODRTN  EQU   *
         SR    R15,R15                  SET GOOD RETURN CODE
         SPACE
EXIT     EQU   *
         L     RBASE,AVTUI              GET RET INTERFACE ADDR   S22025
         B     FOUR(RBASE)              BRANCH TO RETURN ROUTINE S22025
         SPACE
SKIPSUBT EQU   *
         SR    RSCANOFF,RPARLEN         SUBTRACT REQUESTED SKIP LNG
         CR    RSCANOFF,REOPOFF         TEST IF INTO PREFIX
         BNL   SETSCAN                  NO,GO SET SCAN PTR      OX01439
         SPACE
ERROR    EQU   *
         LA    R15,AVTECD4              SET ERROR RETURN CODE
         B     EXIT                     RETURN TO CALLER
         SPACE
ADDRONLY EQU   *
         LR    RSCAN,RSCANOFF           PASS SCAN POINTER OFFSET
         LR    RWORK2,RPREFIX           LOAD PREFIX ADDR         S22025
         BAL   R14,ENTERLOP             GET ADDR OF SCAN POINTER S22025
         SPACE
         LR    R1,RSCAN                 RETURN IT IN REGISTER 1
         B     GOODRTN                  SET GOOD RETURN AND EXIT
ADDRLOOP EQU   *                                                 S22025
         L     RWORK2,PRFTIC-IEDQPRF(,RWORK2) POINT TO NEXT UNIT S22025
         SH    RSCAN,AVTKEYLE           SUBT NO OF BYTES PASSED  S22025
ENTERLOP EQU   *                                                 S22025
         CH    RSCAN,AVTKEYLE           IS ITEM IN THIS UNIT     S22025
         BH    ADDRLOOP                 NO, TEST NEXT UNIT       S22025
         LA    RSCAN,AVTUMALN-1(RSCAN,RWORK2) YES, UNIT ADDR     S22025
         LH    REOUAD,AVTKEYLE          GET KEY LENGTH           S22025
         LA    REOUAD,AVTUMALN(RWORK2,REOUAD) END OF UNIT ADDR   S22025
         BR    R14                      RETURN TO CALLER         S22025
         SPACE
********* EXECUTED INSTRUCTIONS *********
         SPACE
CLIX     CLI   AVTEZERO(RSCAN),AVTEZERO TEST FOR BLANK IN BUFFER
         EJECT
********* DSECTS *********
         SPACE
         TAVTD
         EJECT
         TLCBD
         EJECT
         TPRFD
         SPACE
         END
