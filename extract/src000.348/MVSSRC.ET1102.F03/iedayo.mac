         TITLE 'IEDAYO  -  TSO TIOC TSOUTPUT ROUTINE'
IEDAYO   CSECT
*
         ENTRY IEDAYO02
*
***********************************************************************
*        TCAM VERSION 10.0 CHANGES                             @G36XRYP
*A206500,899500,930500,963000,929500                           @G36XRYP
*C884500,891000,636000,636500                                  @G36XRYP
*D900000-903000,941500,945500,633500-634500                    @G36XRYP
*A216000,216500                                                @ZM45391
*A029500,066000,209500,213000,401000,749500,750000,925000      @Y17XAYP
*C141000,210000,213000,214500,235000,328000,663500,665500      @Y17XAYP
*C689500,727000-725000,730000
*D085500,663000,664000,665000,666000,111500-113000             @Y17XAYP
*D582000-582500                                                @OZ27272
*A903500                                                       @OZ32380
*                                                              @Y17XAYP
*        RA0034 CHANGES                                        @OY14092
*                                                              @OY14092
*                                                              @OY14092
*C694500                                                       @OY14092
*A831000                                                       @OY14089
*A207500                                                       @OY15030
*
*        VS2-017    PTF
*0000466376,466616-466856                                      @YA13248
*0000474300-474600,477900-478300                               @YA11950
*0000478300                                                    @YA11722
*
*A780100-780200                                                 YA02104
*D596030-596110,596590-596630,596710-596990                     YM2814
*D669000                                                        YM2865
*                                                                     *
*          RELEASE 20 DELETIONS
*                                                                M3659
*                                                                M0271
*                                                                M1202
*0000                                                            TS1638
*                                                                TS1628
*                                                                M2655
*                                                                 M2701
*                                                                M3381
*                                                                M3546
*                                                                M4041
*                                                                 M4033
*                                                                M4694
*                                                                M4681
*                                                                 M4665
*                                                                 M1599
*                                                                 M5316
*                                                                 M5301
*                                                                 M6361
*          RELEASE 21 DELETIONS
*1332026000-026200,048000-049000,093100,101500-103700,104000-    S22029
*1332104600,200500-201500,203500-206000,207500,211000-265000,    S22029
*1332401500-402000,403000,405500-406000,407000,409500,412000-    S22029
*1332412500,441500,664300,690000-696000,740500-741500,756000,    S22029
*1332756200-756500,757500-758000,759000-760500,762000-764500,    S22029
*1332767000-768500,782000,902500                                 S22029
*1332210570-210920                                               M1193
*1332093100,594520-597000,610650-610670                          M0141
*1332093100,169400-169950,342000-342200,486200,669000            A44839
*1332                                                            A52381
*                        RELEASE 01 OF VS2 CHANGES              YA00526
*A513200-513420,516400-518060,529800-530280                     YA00526
*D516400-517600                                                 YA00526
*C530700                                                        YA00526
*
*        POST VS2-1.6 CHANGES
*0000093100,625500,625510                                      @YA11542
*D001200,003060,003240,176200-176700,176800,177700,186700       YA06038
*D346100,346400,346530,346890,675500,678100,873100,873400       YA06038
*C093100,475600                                                 YA06038
*0000787700                                                    @YA07902
*0000474010-474020,477710-477730                               @YA10025
*
************************************************************** @Y17XAYP
* MODULE NAME = IEDAYO (TCAM,TSO)                              @Y17XAYP
*                                                              @Y17XAYP
* DESCRIPTIVE NAME = TIME SHARING OUTPUT ROUTINE               @Y17XAYP
*                                                              @Y17XAYP
* COPYRIGHT = NONE                                             @Y17XAYP
*                                                              @Y17XAYP
* STATUS = VERSION 10.0                                        @G36XRYP
*
* FUNCTION -- THIS ROUTINE IS RESPONSIBLE FOR SUPERVISING THE
*    MOVEMENT OF DATA FROM TSO BUFFERS TO TCAM BUFFERS.  IT MUST
*    OBTAIN AND FILL TCAM BUFFERS AS REQUIRED BY THE DATA.  AFTER
*    THE DATA IS SUCCESSFULLY SENT, THIS ROUTINE IS RESPONSIBLE
*    FOR RETURNING THE TSO BUFFERS TO THE AVAILABLE BUFFER QUEUE.
*
* ENTRY POINTS --
*         IEDAYO - ENTERED FOR ONE OF THE FOLLOWING PURPOSES
*    (1) AN INITIAL REQUEST FOR TCAM BUFFER(S).
*    (2) THE FIRST REQUEST ON THIS MESSAGE FROM THE PCI ROUTINE
*    FOR TCAM BUFFER(S).
*    (3) A SUBSEQUENT REQUEST FROM THE PCI ROUTINE FOR A TCAM BUFFER.
*    (4) A REQUEST TO REBUILD AND RESEND THE LAST OUTPUT MESSAGE
*    BECAUSE AN ERROR HAS OCCURRED.
*    (5) A REQUEST TO FREE TSO AND TCAM BUFFERS BECAUSE THE
*    ASSOCIATED MESSAGE HAS BEEN SUCCESSFULLY SENT.
*
*         IEDAYO02 - ENTERED WHEN A REQUEST FOR A TCAM BASIC UNIT
*    BY THIS MODULE HAS BEEN SATISFIED.
*
* INPUT --
*         IEDAYO -
*    REG. 1 - ADDR OF ERB (PURPOSES 1 THRU 4 ABOVE) OR TCAM
*             BUFFER (PURPOSE 5 ABOVE).
*    REG. 3  - ADDR OF STCB
*    REG. 7  - ADDR OF DISK I/O QCB
*    REG. 11 - ADDR OF TCAM DISPATCHER
*    REG. 13 - ADDR OF AVTSAVE2
*    REG. 15 - ENTRY POINT ADDRESS
*
*         IEDAYO02 -
*    REG. 1  - ADDR OF BASIC UNIT OR QCB
*    REG. 3  - ADDR OF STCB
*    REG. 7  - ADDR OF CPB CLEANUP QCB
*    REG. 11 - ADDR OF TCAM DISPATCHER
*    REG. 13 - ADDR OF AVTSAVE2
*    REG. 15 - ENTRY POINT ADDRESS
*
* OUTPUT - WHEN A REQUEST FOR TCAM BUFFERS HAS BEEN SATISFIED,
*    TCAM BUFFER(S) CONTAINING OUTPUT DATA ARE TPOSTED TO THE ACTIVATE
*    ROUTINE (FOR INITIAL REQUESTS) OR TO THE MESSAGE HANDLER
*    (PCI REQUESTS).
*
* EXTERNAL REFERENCES --
*         IEDAYOO - THIS IS THE MODULE CONTAINING THE QTIP ROUTINES
*    FOR TSOUTPUT.  THESE ROUTINES PERFORM FUNCTIONS WHICH MUST BE
*    DONE WITH A ZERO PROTECTION KEY OR DISABLED FOR INTERRUPTS.
*         IEDQFA - WHEN IEDAYO GAINS CONTROL AND THE TERMINAL INVOLVED
*    IS NOT IN A TIME-SHARING SESSION, CONTROL IS PASSED TO IEDQFA.
*         IEDQFQ - WHEN IEDAYO GAINS CONTROL AT ENTRY IEDAYO02 AND THE
*    TERMINAL INVOLVED IS NOT IN A TIME-SHARING SESSION, CONTROL IS
*    PASSED TO IEDQFQ.
*         MSGGEN - IEDAYO EXITS TO MSGGEN TO PUT OUT TS ABENDING
*    LOGOFF AND AUTOMATIC PROMPTING MESSAGES.
*         IEDAYE - IEDAYO BRANCHES TO IEDAYE TO EDIT THE OUTPUT
*    DATA AND TO DO THE ACTUAL MOVE OF THE DATA FROM TS TO TCAM
*    BUFFERS.  IEDAYE RETURNS TO IEDAYO WHEN DONE.
*
* EXITS,NORMAL -- (NOTE, 'DSP-----' LABELS REFER TO ENTRY POINTS
*    IN THE TCAM DISPATCHER, SEE TDISPD DSECT).
*         MSGGEN - TO PUT OUT TS ABENDING OR AUTOMATIC LINE
*    NUMBERING PROMPT MESSAGES.
*         DSPBYPAS - WHEN THIS MODULE GAINS CONTROL AND THE TERMINAL
*    IS NOT IN A TIME SHARING SESSION.
*         DSPDISP - WHEN IEDAYO GAINS CONTROL WITH A PCI REQUEST FOR
*    BUFFERS AND A HARDWARE ATTENTION HAS OCCURRED.
*         DSPDISP - WHEN THERE IS NO OUTPUT.
*         DSPPOST - WHEN INITIAL REQUEST FOR BUFFERS SATISFIED,
*    (ERB TPOSTED TO ACTIVATE QCB).
*         DSPPOST - WHEN PCI REQUEST FOR BUFFER(S) SATISFIED,
*    (ERB TPOSTED TO DATA NIR GENERATOR QCB)                   @Y17XAYP
*         DSPPOST - WHEN TCAM OUTPUT BUFFERS HAVE BEEN EDITED  @Y17XAYP
*    (TCAM BUFFER(S) TPOSTED TO THE MESSAGE HANDLER).
*         DSPPOST - WHEN MESSAGE SUCCESSFULLY SENT AND EMPTIED TS
*    BUFFER(S) FREED, (TCAM BUFFER TPOSTED TO BUFFER RETURN QCB).
*         DSPDISP - WHEN TCAM BASIC UNITS ARE NOT AVAILABLE AND
*    THE ERB IS PUT IN ELEMENT CHAIN OF BUFFER RETURN QCB.
*
* EXITS,ERROR --
*         DSPCHAIN - WHEN BASIC UNIT IS TPOSTED TO IEDAYO02
*    AND LCBERROR IS ON, (ERB POSTED TO RECALL, BASIC UNITS
*    TPOSTED TO BUFFER RETURN).
*         DSPCHAIN - WHEN BASIC UNIT TPOSTED TO IEDAYO02 AND
*    SCBATTN ON, (BASIC UNITS TPOSTED TO BUFFER RETURN).
*
* TABLES/WORK AREAS -- SEE REMARKS ACCOMPANYING DATA DEFINITION
*    STATEMENTS.
*
* ATTRIBUTES - REUSABLE, REFRESHABLE
*
* CHARACTER CODE DEPENDENCY -- EXECUTION CHARACTER SET MUST BE SAME
*    AS CHARACTER SET USED AT ASSEMBLY TIME.  IN ADDITION, THE EBCDIC
*    REPRESENTATION OF THE 'NL' CHARACTER (X'15') IS USED IN CONSTANTS
*    IN THE CONSTANT SECTION.  EACH SUCH CONSTANT IS REMARKED
*    'NEW LINE CHARACTER'.
*
* NOTES -- NONE
*
*
***********************************************************************
*
*   REGISTER EQUATES
*
***********************************************************************
*
R0       EQU   0                        PARAMETER REGISTER
R1       EQU   1                        PARAMETER REGISTER
R2       EQU   2                        WORK REGISTER
RBTU     EQU   2                        BTU POINTER
*                                       RESOURCE I.D. IN TRM TABLE
R3       EQU   3                        REGISTER 3
RSCB     EQU   3                        SCB REGISTER
RLCB     EQU   4                        LCB REGISTER
R5       EQU   5
RPREF    EQU   6                        BUFFER REGISTER
R6       EQU   6
RQCB     EQU   7                        QCB REGISTER
RTSB     EQU   8                        TSB REG.
R8       EQU   8
RPQ      EQU   9                        PRIORITY DESTINATION QCB
R9       EQU   9
RDCB     EQU   10                       DCB REGISTER
R10      EQU   10                       WORK REGISTER
R11      EQU   11
RBASE    EQU   12                       BASE REGISTER
R12      EQU   12
RSAVE    EQU   13                       ADDR OF AVTSAVE2
R14      EQU   14                       RETURN ADDRESS REGISTER
R15      EQU   15                       ENTRY POINT AND RETURN CODE
*                                       REGISTER
*
***********************************************************************
*
*   STCB FOR TSOUTPUT
*
         DC    AL1(DSPMCPL8),AL3(0),A(0)  STCB FIELDS            S22029
*
***********************************************************************
*
*   MASKS,EQU AND DISPLACEMENT
*
***********************************************************************
*
NULL     EQU   0                        '0'
TICCCW   EQU   X'08'                    COMMAND CODE = TIC
ONE      EQU   1                        '1'
E2       EQU   2                        '2'
E3       EQU   3                        '3'
E4       EQU   4                        '4'
TRMBUFSZ EQU   X'80'                    INDICATES BFR SIZE SPECIFIED
TWOIDLE  EQU   X'F2'                    CARRIAGE COUNT FOR 2 IDLES
E41      EQU   41                       '41'
XXCTUSED EQU   X'80'                    INDICATE DISABLED COUNT IN USE
QCBNLCR  EQU   X'30'                    CARRIAGE POSITION FLAGS
QTIP1ST  EQU   11                       FIRST QTIP ENTRY CODE
QTIP2ND  EQU   12                       SECOND QTIP ENTRY CODE
QTIP3RD  EQU   13                       THIRD QTIP ENTRY CODE
QTIP4TH  EQU   14                       FOURTH QTIP ENTRY CODE
QTIP5TH  EQU   15                       FIFTH QTIP ENTRY CODE
QTIP6TH  EQU   16                       SIXTH QTIP ENTRY CODE
NOT      EQU   X'FF'
BTUINHBN EQU   X'10'                    MODE BIT FOR 3705
STMONITR EQU   X'02'                    MODE BIT FOR 3705       YS06327
DYNMBFFR EQU   X'10'                    PCI (DYNAMIC BUFFERING)
E48      EQU   48                       DISPLACEMENT OF DECIMAL 48
DOEOM    EQU   X'08'                    IN QCBRETCT TO TELL EDT SA61765
*                                       TO PROCESS END OF MSG
E1       EQU   1                        CONSTANT                YS6327
ELEVEN   EQU   11                       NUMBER OF BITS TO TEST
*
***********************************************************************
*
*   INITIALIZE DSECT ADDRESSABILITY
*
***********************************************************************
*
         USING AVTSAVE2,RSAVE           INITIALIZE AVT ADDRESSABILITY
         USING IEDQLCB,RLCB             INITIALIZE LCB
         USING IEDQSCB,RSCB             INITIALIZE SCB
         USING IEDQPRF,RPREF            INITIALIZE BUFFER PREFIX
         USING IEDQPQCB,RPQ             INITIALIZE PRIORITY QCB
         USING IEDQDISP,R11             INITIALIZE DISPATCHER
         USING IEDQQCB,RQCB             INITIALIZE QCB
         USING IEDQSTCB,R15             STCB
         USING TSB,RTSB                 INITIALIZE TSB
*
***********************************************************************
*
TSOUTPUT EQU   *
*
***********************************************************************
*
*   FIRST ENTRY POINT
*
*        INPUT - REG.1  - ADDR OF BFFR OR ERB
*                REG.3  - ADDR OF STCB
*                REG.7  - ADDR OF DISK I/O QCB
*                REG.11 - ADDR OF DISPATCHER
*                REG.13 - ADDR OF AVTSAVE2
*                REG.15 - ENTRY POINT
*
*        ELEMENT IS BFFR
*              1 - PRI=PRIDKSRV - NORMAL END OF SEND OPERATION
*              2 - PRFERMGN ON - REQUEST TO REBUILD MESSAGE THAT HAD
*                  ERROR DURING SEND OPERATION
*        ELEMENT IS ERB
*              3 - PRI=PRIINTRQ - INITIAL REQUEST
*              4 - PRI=PRIFSPCI - FIRST PCI
*              5 - PRI=PRISBPCI - SUBSEQUENT PCI
*
***********************************************************************
*
         USING TSOUTPUT,RBASE           INITIALIZE BASE
         LR    RBASE,R15                LOAD BASE ADDR
*
IEDAYO   IEDHJN AYO000                                         @Y17XAYP
         LR    RPREF,R1                 LOAD ELEMENT ADDR
         LA    RPREF,NULL(RPREF)        CLEAR HI-ORDER BYTE
         TM    PRFTIC,TICCCW            IS THIS A BFR?           S22029
         BNO   ERBTOLCB                 NO. SETUP LCB FROM ERB.  S22029
         TM    PRFSTAT1,PRFTSMSG        IS THIS A TSO MESSAGE    S22029
         BNO   CPBINIT                  NO, GIVE CTL TO TCAM CPB S22029
*                                       INITIALIZATION ROUTINE
         L     RLCB,PRFLCB-1            SETUP LCB FROM BFR PRFX  S22029
         B     SETUP                    CONTINUE CTL BLK SETUP   S22029
ERBTOLCB EQU   *                                                 S22029
         LR    RLCB,RPREF               LOAD ERB ADDR IN LCB REG S22029
         LA    R2,LCBERB-IEDQLCB        PICKUP ERB TO LCB OFFSET S22029
         SR    RLCB,R2                  BACKUP TO LCB.           S22029
SETUP    EQU   *                                                 S22029
         L     RSCB,LCBSCBA-1           PICKUP SCB               S22029
********
******** PICK UP THE DESTINATION QCB FOR THIS LINE
********
         LH    R2,LCBTTCIN              GET CONNECT INDEX        S22029
         LTR   R2,R2                    IS INDEX ZERO            S22029
         BZ    CPBINIT                  YES, BYPASS TO TCAM      S22029
         LR    R1,R2                    USE INDEX TO PICKUP      S22029
         L     R15,AVTRNMPT             TERMINAL TABLE ENTRY.    S22029
         BALR  R14,R15                                           S22029
         USING IEDQTRM,R1                                        S22029
         L     RQCB,TRMDESTQ-1          PICKUP DESTINATION QCB   S22029
         DROP  R1                                                S22029
         LR    R1,RPREF                 RESTORE INPUT ELEMENT    S22029
         TM    PRFTIC,TICCCW            TEST IF THIS IS A BFFR
         BNO   ERBCHECK                 NO,GOTO CHECK ERB
*
***********************************************************************
*
BUFFER   EQU   *
*
***********************************************************************
*
*   A TCAM BUFFER HAS BEEN TPOSTED TO TSOUTPUT AFTER A MESSAGE
*   HAS BEEN SENT.
*
         NC    QCBTJID,QCBTJID          IS TJID PRESENT
         BZ    RETBFR                   NO, GO RETURN BUFFER
         TM    AVTBIT3,AVTTSAB          TEST IF TSO HAS ABENDED  A44839
         BO    RETBFR                   YES, GO RETURN BUFFERS   A44839
         BAL   R14,TSBADDR              GO GET TSB & TIOCRPT ADDRS
*
***********************************************************************
*
BFFRTN   EQU   *
         TM    PRFSTAT1,PRFERMGN        DID OUTPUT ERRORS OCCUR SA70323
         BNO   SUCCSEND                 NO, PROCESS NORMALLY    SA70323
         SPACE 2
***********************************************************************
*
*        ELEMENT IS BUFFER, PFRERMGN IS ON - ERROR DURING SEND
*        OPERATION.  CALL QTIP13 TO REBUILD MESSAGE.  SINCE WE
*        DON'T TURN OFF QCBTPUT, WE WILL GET CONTROL AGAIN TO
*        SEND OUT THIS REBUILT MESSAGE.
***********************************************************************
         QTIP  QTIP3RD,(RSAVE)          CALL QTIP TO REBUILD    SA70323
         B     RETBFR                   GO RETURN TCAM BUFFER   SA70323
         SPACE 3
SUCCSEND EQU   *                                                SA70323
***********************************************************************
*
*   ELEMENT IS BFFR AND PRI=PRIDKSRV - NORMAL END OF SEND OPERATION
*        1 - RETURN TS BFFR TO FREE Q
*        2 - REMOVE WAIT CONDITION
*        3 - FREE TCAM BFFR
*
***********************************************************************
*
*   ISSUE QTIP SVC TO FREE TSO BFR & REMOVE WAITS IF APPROPRIATE
*
         QTIP  QTIP2ND,(RSAVE)
         TM    TIOCFLG-TIOCRPT(R10),TIOCSYLW  IS SYSTEM IN LWAIT
         BNO   RETBFR                   NO, NO NEED TO LOCK KEYBOARD
         OI    QCBTSOF1,QCBNOBUF        LOCK USER'S KEYBOARD
*
*   TPOST TCAM BUFFER TO BUFFER RETURN
*
RETBFR   EQU   *
         LR    R1,RPREF                 LOAD ELEMENT ADDR
         LA    R2,AVTBFRTB              LOAD ADDR OF BFR RETURN QCB
         MVI   PRFPRI,PRIBFRTB          SET TPOST PRIORITY = BFR RETURN
         B     POST                     GO SET UP TO GO TO DISPATCHER
*
***********************************************************************
*
SESCLEAN EQU   *
*
***********************************************************************
*
*   THIS ROUTINE CLEANS UP TCAM CONTROL BLOCKS FOR LOGOFF,
*   AND TS ABENDING SITUATIONS.
*
*   IT USES REGISTERS 0,1,2,5,6,14,15
*
***********************************************************************
*
         TM    LCBINSRC+2,QCBDELAY      IS LCB ON DELAY QUEUE
         BNO   PASTRLCB                 NO, DON'T REMOVE IT
         LR    R1,RLCB                  ADDR LCB TO BE REMOVED
         L     R15,AVTHG02              REMOVAL ROUTINE ADDR
         BALR  R14,R15                  GO REMOVE LCB
*
         LR    R2,R3                    SAVE REGISTER CONTENTS
         LR    R6,RQCB                  SAVE REGISTER CONTENTS
*
         LA    RQCB,LCBRSKEY            LOAD STCB ADDR
         LR    R1,RQCB                  LOAD STCB ADDR
         BAL   R14,DSPPRIOR             PUT RECEIVE SCHEDULER
*                                       IN STCB CHAIN
         LR    R3,R2                    RESTORE REGISTER CONTENTS
         LR    RQCB,R6                  RESTORE REGISTER CONTENTS
*
PASTRLCB EQU   *
         TM    AYOSW2,AYODRPL           SHOULD LINE BE         @G36XRYP
*                                       DROPPED                @G36XRYP
         BZ    RESETLCB                 NO, DON'T DISCONNECT   @G36XRYP
         OI    LCBSTAT2,LCBNEGRP        REQUEST DISCONNECT     @G36XRYP
         MVI   LCBTSTSW,AVTEFF          REQUEST DISABLE/ENABLE @G36XRYP
         NI    LCBSTAT2,NOT-LCBRESP     TRM NEEDS NO RESPONSE  @G36XRYP
RESETLCB EQU   *                                               @G36XRYP
         NI    LCBTSOB,NOT-LCBTSBUF-LCBSATRD-LCBCIRCD  RESET FLAG
         MVI   LCBSENS0,NULL            RESET SENSE BYTE
         MVI   LCBTPCD+ELEVEN,AVTEZERO  CLEAR TP OP CODE       @OY15030
         XC    SCBERRST(SCBSRCE-SCBERRST),SCBERRST  RESET SCB
*
         NI    QCBFLAG,NOT-QCBREAD-QCBNOBRK   RESET BITS         S22029
*              QCBTSSES WILL BE TURNED OFF BY IEDAYZ             S22029
         NI    QCBDSFLG,NOT-QCBALTMH    RESET ALTERNATE MH PATH  S22029
         MVI   QCBRETCT,NULL            CLEAR ERROR RETRY COUNT
         MVI   QCBCARCT,NULL            CLEAR CARRIAGE COUNT
         XC    QCBTJID,QCBTJID          CLEAR TJID
*
         LH    R1,AYOSRCE               GET TERMINAL INDEX       A44839
         L     R15,AVTRNMPT             LOAD ADDR OF TERM NAME ENTRY
*
         BALR  R14,R15                  GOTO TERM NAME ROUTINE
         LA    R15,TRMPRFSZ             GET TRM PREFIX SIZE    @Y17XAYP
         SR    R1,R15                   BACK UP TO TRM PREFIX  @Y17XAYP
         USING IEDNTRM,R1               ESTABLISH BASE         @Y17XAYP
         TM    TRMSTATE,TRMPREF         DOES PREFIX EXIST      @ZM45391
         BNO   NOPREFIX                 BR NO                  @ZM45391
         TM    TRMBYTE0,TRMSNA          IS IT SNA TERM         @ZM45391
         BO    NOPREFIX                 BR YES                 @ZM45391
         OI    TRMPRE,TRMCMODE          INDICATE DEVICE MODE   @Y17XAYP
*                                       FIELDS SHOULD BE RESET @Y17XAYP
NOPREFIX EQU   *                                               @ZM45391
         XC    QCBINSRC,QCBINSRC        CLEAR STATUS BYTES
*
         SR    R15,R15                  CLEAR REG.15
         IC    R15,TRMCHCIN
         BCTR  R15,NULL                 DECREMENT BY '1'
         MH    R15,AVTDCTLN             MULTIPLY BY THE SIZE   @Y17XAYP
*                                       OF A DCT ENTRY         @Y17XAYP
         A     R15,AVTCSTCS             ADD BASE FOR DEVICE CHAR TABLE
*
         TM    DCTBYTE1-IEDDCT(R15),DCTBREAK  BREAK FEATURE    @Y17XAYP
         BO    NOBRK                    YES, DON'T SET NO-BREAK
*
         OI    QCBFLAG,QCBNOBRK         SET 'NO BREAK' ON
NOBRK    EQU   *                                                YS6327
*
*   IF THIS TERMINAL IS CONNECTED VIA A 3705, SET DEVICE MODE
*   BITS IN THE TTE.  THIS WILL RESET THE 3705'S DEVICE
*   MODE INDICATORS TO MATCH THE SETTINGS IN THE TCAM DCT.
*
         TM    TRMDEVFL+1,TRMRNTRM      IS TERM ON A 3705       YS6327
         BNOR  R5                       NO, RETURN TO CALLER    YS6327
         TM    TRMSTATE,TRMOPTFN        ARE THERE ANY OPTN FLDS YS6327
         LA    R2,TRMOPNO               ASSUME NONE             YS6327
         BNO   NOPTION                  BRANCH ON NO OPTN FLDS  YS6327
         SR    R14,R14                  CLEAR REGISTER FOR IC   YS6327
         IC    R14,TRMOPNO              NUMBER OF OPTION FIELDS YS6327
         LA    R2,TRMOPT(R14)           SKIP OPTION FIELDS
NOPTION  EQU   *                                                YS6327
         LH    R14,TRMDEVFL             GET DEVICE DEP FLAGS    YS6327
         LA    R10,ELEVEN               SET FOR BIT SEARCH      YS6327
         SLL   R14,16                   SHIFT BITS TO HI ORDER  YS6327
*                                       TWO BYTES               YS6327
         DROP R1                                               @Y17XAYP
         SR    R1,R1                    CLEAR REGISTER          YS6327
SHIFT    EQU   *                                                YS6327
         LTR   R14,R14                  IS BIT PRESENT          YS6327
         BNM   CHKCOUNT                 BRANCH ON NO            YS6327
         LA    R1,E1(R1)                NUMBER OF BITS FOUND    YS6327
CHKCOUNT EQU   *                                                YS6327
         SLL   R14,1                    SHIFT TO CHECK NEXT BIT YS6327
         BCT   R10,SHIFT                HAVE ALL BITS BEEN CHKD YS6327
         LTR   R1,R1                    ANY DEV DEP FIELDS      YS6327
         BZ    SETMODE                  NO GO SET DEV MODE FLDS YS6327
         SR    R14,R14                  CLEAR REGISTER FOR IC   YS6327
SKIP     EQU   *                                                YS6327
         IC    R14,AVTEZERO(,R2)        GET DEV DEP FLD LENGTH  YS6327
         LA    R2,E1(R14,R2)            SKIP OVER FIELD         YS6327
         BCT   R1,SKIP                  SKIP TO NEXT FIELD      YS6327
SETMODE  EQU   *                                                YS6327
         LA    R2,E3(R2)                GET DEV DEP FOR SETMODE YS6327
         NI    E1(R2),NOT-STMONITR      TURN OFF MONITOR MODE   YS06327
         TM    DCTBYTE1-IEDDCT(R15),DCTINHIB   READ-INHIBITS   @Y17XAYP
         BNO   OFFINHBN                 NO, GO TURN BIT OFF     YS6327
         OI    E1(R2),BTUINHBN          INHIBIT T.O. MODE BIT   YS6327
         BR    R5                       RETURN TO SUBRTN CALLER
OFFINHBN EQU   *
         NI    E1(R2),NOT-BTUINHBN      ALLOW TIMEOUTS
         BR    R5                       RETURN TO SUBROUTINE CALLER
*
***********************************************************************
*
ERBCHECK EQU   *
*
***********************************************************************
*
*   WHEN ERB IS POSTED
*        1 - PRI=PRINTRQ - INITIAL REQUEST
*        2 - PRI=PRIFSPCI - FIRST PCI
*        3 - LCBRCLLN/LCBSENDN - REBUILD OUTPUT BFFR
*
***********************************************************************
*
         TM    LCBSTAT1,LCBRCLLN        RECALLED BUFFER REQUEST SS22029
         BO    CPBINIT                  YES, GO RECALL BUFFER   SS22029
         L     RQCB,SCBDESTQ-1          NO, USE DESTINATION      S22029
*                                       TERMINAL'S QCB.
*
         TM    QCBFLAG,QCBTSSES         TEST IF TSO IN SESSION
         BNO   CPBINIT                  NO, GIVE CTL TO TCAM CPB S22029
*                                       INITIALIZATION RTN
*
*   SET LCBDLNKN SWTCH OFF TO INDICATE THIS ERB IS BEING USED
*
         NI    LCBERBST,LCBDLNKF        SET DLINK SWITCH OF ERB OFF
         XC    LCBERBCH,LCBERBCH        CLEAR ERB CHAIN FIELD
         XC    AYOSWTCH(AYOWRKL),AYOSWTCH  CLEAR TSOUTPUT'S WORK AREA
         STH   R2,AYOSRCE               SAVE TERMINAL INDEX      S22029
***********************************************************************
*
*   CHECK PRIORITY TO DETERMINE
*        1 - INITIAL REQUEST
*        2 - INITIAL PCI
*        3 - SUBSEQUENT PCI
*
***********************************************************************
*
         CLI   LCBERBPY,PRIINTRQ        TEST IF INITIAL REQUEST
         BE    INTLRQST                 YES,GOTO HANDLE INITIAL REQUEST
*
*   IF NOT INITIAL REQUEST,CHECK IF LCBERROR IS ON
*        YES - POST ERB TO ADDRESS IN LCBRCQCB
*            - CHECK IF ATTENTION HAS BEEN HIT
*
         TM    LCBERBST,LCBERROR        TEST IF ANY ERROR
         BNO   CHKATTN                  NO,GOTO CHECK ATTENTION
*
*   WHEN LCBERROR BIT IS ON
*        1.- ZERO LCBERBCH
*        2 - SET PRI=PRIRCQCB
*        3 - POST ERB TO ADDR IN LCBRCQCB
*
         XC    LCBERBCH,LCBERBCH        ZERO ERB CHAIN FIELD
         LA    R1,LCBERB                LOAD ADDR OF ERB
         MVI   PRFPRI-IEDQPRF(R1),PRIRCQCB   SET PRI=PRIRCQCB
         L     R2,LCBRCQCB              LOAD ADDR IN LCBRCQCB
         B     POST                     GOTO TCAM/DSPPOST
*
CHKATTN  EQU   *
         TM    SCBERR3,SCBATTN          TEST IF ATTENTION BEEN HIT
         BO    DISP                     YES, EXIT TO TCAM DISPATCHER
         CLI   LCBERBPY,PRIFSPCI        TEST IF INITIAL PCI
         BE    FIRSTPCI                 YES,GOTO PROCESS INITIAL PCI
*
***********************************************************************
*
*   THIS IS SUBSEQUENT PCI
*
*               1 - BUILD ONE TCAM BFFR
*               2 - POST TO MH (PRI=PRIMHBFR)
*               3 - IF ERB COUNT IS NOT '0',POST AVTDSIOB -PRI=PRISBPCI
*               4 - IF NO MSG TO SEND,SET END OF MSG AND POST TO MH
*
*
***********************************************************************
*
         OI    AYOSWTCH,SUBPCI          SET SUBSEQUENT PCI BIT 'ON'
         B     CHKTSAB                  GO CHECK FOR TSO ABENDING
*
***********************************************************************
*
FIRSTPCI EQU   *
*
***********************************************************************
*
*   THIS IS THE FIRST PCI REQUEST
*        1 - BUILD NO. OF TCAM BFFR REQUESTED IN ERB COUNT
*        2 - POST EACH BFFR TO MH (PRI=PRIMHBFR)
*        3 - IF NO MSG TO SEND,SET END OF MSG AND POST TO MH
*
***********************************************************************
*
         OI    AYOSWTCH,INTLPCI         SET INITIAL PCI REQUEST
         B     CHKTSAB                  GO CHECK FOR TSO ABENDING
*
***********************************************************************
*
INTLRQST EQU   *
*
***********************************************************************
*
*   THIS IS AN INITIAL REQUEST FOR TCAM BUFFERS
*
***********************************************************************
*
         OI    AYOSWTCH,INTLRQ          SET THIS IS A INITIAL REQUEST
         MVI   LCBERBCT+1,NULL          CLEAR DISABLED COUNT
*
CHKTSAB  EQU   *
*
         TM    AVTBIT3,AVTTSAB          TEST IF TSO HAS ABENDED
         BNO   GETADDRS                 NO, GET TSB, TIOCRPT ADDRS
         DROP  R15                                               A52381
         USING IEDQTNTD,R15             ADDRESSABILITY FOR TNT   A52381
         USING IEDQTRM,R1               ADDRESSABILITT FOR TRM   A52381
         L     R15,AVTRNMPT             GET TNT ADDRESS          A52381
         LH    R2,TNTLEN                HIGHEST TERMINAL INDEX   A52381
TTABLE   EQU   *                                                 A52381
         LR    R1,R2                    PUT INDEX IN REG 1       A52381
         BALR  R14,R15                  GO GET TTABLE ENTRY ADDR A52381
         CLC   TRMDESTQ,SCBDESTQ        ARE ADDRESSES THE SAME   A52381
         BE    RAYOSRCE                 YES, TERMINAL INDEX IS   A52381
*                                       CORRECT                  A52381
         BCT   R2,TTABLE                TRY WITH NEW INDEX VALUE A52381
         LH    R2,LCBTTCIN              GET INDEX FROM LCB       A52381
RAYOSRCE EQU   *                                                 A52381
         STH   R2,AYOSRCE               RESET TERMINAL INDEX     A52381
         DROP  R1                                                A52381
         DROP  R15                                               A52381
         TM    AYOSWTCH,INTLRQ          IS THIS AN INITIAL REQUEST
         BO    TSABEND                  YES,GOTO TSO ABEND RTN
         B     NOTINTL                  BRANCH TO SEND 1 IDLE CHARACTER
*
GETADDRS EQU   *
*
         BAL   R14,TSBADDR              GET TSB,TIOCRPT ADDRS
*
         TM    TSBFLG2,TSBBRKIN         COULD THIS BE FLASHBACK REQUEST
         BZ    BUILDBFF                 NO, GO BUILD TCAM BFR
         TM    TSBSTAT,TSBDSPLY         IS THIS A FLASHBACK REQUEST?
         BZ    BUILDBFF                 NO, GO BUILD TCAM BFR
*
         TM    TSBFLG3,TSBSPIT          IS TCLEARQ IN PROGRESS
         BO    BUILDBFF                 YES, DON'T FLASHBACK
         CLC   TSBOTBFP,AVTFZERO        IS TRAILER QUEUE EMPTY
         BE    CHKBRKIN                 YES, GO SET UP TO FLASH BACK
*
***********************************************************************
*
BUILDBFF EQU   *
*
***********************************************************************
*
*    BUILD TCAM BUFFER
*
***********************************************************************
*
*        NOTE -- THE TERM 'HEADER BASIC UNIT', AS USED IN COMMENTS
*        IN THIS LISTING, REFERS TO THE FIRST BASIC UNIT IN A BUFFER,
*        THAT IS, THE BASIC UNIT WHICH CONTAINS THE BUFFER PREFIX.
*
**********************************************************************
*
*   CALCULATE NO. OF BASIC UNITS PER BUFFER
*
***********************************************************************
*
         LH    R1,AYOSRCE               GET INDEX TO TERMINAL  @YA13248
*                                       TABLE                    A44839
         L     R15,AVTRNMPT             LOAD ADDR OF TERM. NAME TABLE
         BALR  R14,R15                  GO GET TTABLE ENTRY ADDR
*
*   TERM TABLE ENTRY ADDR IS IN R1,IF BUFFER SIZE IS SPECIFIED IN
*   TTABLE, PUT IT IN LCBERBQP+1.  IF NOT, USE DCBBFSZE
*
         USING IEDQTRM,R1
         TM    TRMDEVFL,TRMBUFSZ        IS A BUFFER SIZE SPECIFIED
         BO    USETRM                   YES, USE TRM FIELD      YS6327
         TM    TRMSTATE,TRMPREF         IS THERE A PREFIX      @Y17XAYP
         BNO   USEDCB                   NO,GOTO USE DCB         YS6327
*                                                               YS6327
*   FOR 3705 LINE GROUPS, OBTAIN BUFFER SIZE FROM LGB           YS6327
*                                                               YS6327
         L     RDCB,LCBDCBPT            GET LGB ADDR            YS6327
         USING IEDNLGB,RDCB             LGB ADDRESSABLE         YS6327
         LH    R1,LGBBUFSI              GET BUFFER SIZE         YS6327
         STH   R1,LCBERBQB+ONE          SAVE IT IN THE ERB      YS6327
         DROP  RDCB                     LGB NOT ADDRESSABLE     YS6327
         SR    R10,R10                  CLEAR REG.              YS6327
         B     CNTBFUNT                 GO COUNT NO. OF UNITS   YS6327
*
*   OBTAIN BUFFER SIZE & NO. OF BASIC UNITS FROM TERMINAL TABLE
*
USETRM   EQU   *
         USING TIOCBUF,R2
         SR    R10,R10                  ZERO R10
         LA    R5,TRMOPNO+1             LOCATION BFFR SIZE OF NO OPTION
         TM    TRMSTATE,TRMOPTFN        TEST IF OPTION SPECIFIED
         BNO   NOOPTION                 NO,GOTO OBTAIN QCB FROM ERB
*
         LR    R5,R10                   ZERO R5
         IC    R5,TRMOPNO               NO OF OPTION FIELDS
         LA    R5,TRMOPT+1(R5)          ADDR OF OPT FLD + 1 + NO. OF
*                                       OPT FLD = LOCATION OF BFR SIZE
         DROP  R1
*
NOOPTION EQU   *
*
         MVC   LCBERBQB+1(E2),NULL(R5)  SET SIZE OF BFR IN ERBQB+1
         LH    R1,LCBERBQB+1            LOAD SIZE OF BFFR
*
CNTBFUNT EQU   *
*
         LA    R10,ONE(R10)             INCREMENT R10 BY '1'
         SH    R1,AVTKEYLE              SUBTRACT (B.U. - PREFIX)
         BP    CNTBFUNT                 IF THERE ARE REMAINING,REPEAT
         B     SIZEDONE                 END OF B.U. COUNT
*
USEDCB   EQU   *
*
         USING IHADCB,RDCB
         L     RDCB,LCBDCBPT            LOAD DCB ADDR
         LH    R1,DCBBUFSI              OBTAIN BUFFER SIZE
         STH   R1,LCBERBQB+1            STORE IT IN LCB
         IC    R10,DCBUNTCT
*
SIZEDONE EQU   *
*
         STC   R10,LCBERBQB             STORE NO. B.U. IN LCB
         MVI   LCBERBKY,AVTEZERO        SET PRIORITY KEY TO '0'
*
*        LCBERBQB+1 - SIZE OF BUFFER
*        LCBERBQB   - NO. OF B.U. PER BUFFER
*
***********************************************************************
*
CHAINBUF EQU   *
*
***********************************************************************
*
*   ISSUE QTIP SVC TO MOVE A TSO MESSAGE FROM THE OUTPUT HEADER
*   QUEUE TO THE OUTPUT TRAILER QUEUE UNLESS THERE IS ALREADY
*   SOMETHING ON THE TRAILER QUEUE.
*
         QTIP  QTIP1ST,(RSAVE)
*
         L     R2,TSBOTBFP-1            LOAD TS BFFR AADR
         LTR   R15,R15                  ANY DATA TO MOVE        SA70323
         BZ    NOOUTPUT                 NO, GO TO 'NO OUTPUT' ROUTINE
         ST    R2,AYOTSBFF              STORE TS MSSG ADDR
         SPACE 2                                                YS6327
WATSLEFT EQU   *                                                YS6327
*                                                               YS6327
         SR    R15,R15                  CLEAR FOR COMPARISON    YS6327
         CH    R15,AYOBULEN             IS THERE SPACE LEFT     YS6327
         BNZ   MOVEDATA                 YES, DON'T GET NEW BU   YS6327
*                                                               YS6327
GETBASIC EQU   *
*
         NC    AVTBFREB+1(E3),AVTBFREB+1  ARE ANY B.U.'S AVAILABLE
         BZ    NOBFRS                   NO,GOTO CHAIN ERB TO BFF RTN
*                                       QCB
*
*   WHEN B.U. IS AVAILABLE,GET ONE
*
         LH    R5,AVTAVFCT              LOAD NO. OF B.U. IN POOL
         BCTR  R5,NULL                  SUBTRACT '1'
         STH   R5,AVTAVFCT              STORE NEW BUFFER NO.
         L     R5,AVTBFREB              LOAD ADDR OF AVAILABLE UNIT
         L     R1,PRFLINK-1-IEDQPRF(R5) LOAD ADDR OF NEXT B.U,
         ST    R1,AVTBFREB              STORE IT AS 1ST AVAILABLE
*
CHKCHAIN EQU   *
*
*   CHECK IF THERE ARE ANY B.U. IN BUFFER CHAIN
*      YES - TIC LAST B.U. TO THIS B.U.
*      NO  - START TO BUILD BUFFER PREFIX
*
         XC    NULL(PREFL,R5),NULL(R5)  CLEAR B.U. PREFIX AREA
         L     R1,AYOLSTBU              GET ADDR OF LAST B.U. IN CHAIN
         LA    R5,NULL(R5)              RESET HI-ORDER BYTE
         ST    R5,AYOLSTBU              SAVE B.U. ADDR IN SCB
         NC    LCBERBCH,LCBERBCH        TEST IF ANY BUFFER IN CHAIN
         BZ    BUILDPRF                 NO,GOTO BUILD HEADER BUFFER
*
         L     R9,AYOHDRBU              GET ADDR OF LAST BFR PREFIX
         CLC   LCBERBQB(ONE),PRFNBUNT-IEDQPRF(R9)  TEST IF THIS BASIC
*                                       UNIT STARTS A NEW BUFFER
         BE    LINKBFR                  YES, GO LINK BFR INTO CHAIN
*
         ST    R5,PRFTIC-IEDQPRF(,R1)   TIC LAST B.U. TO THIS
         MVI   PRFTIC-IEDQPRF(R1),TICCCW  SET TIC COMMAND
         B     ADDBUCT                  GO UPDATE B.U. COUNT
*
LINKBFR  EQU   *
*
*   WHEN THIS B.U. STARTS A NEW BUFFER,LINK THIS BUFFER TO THE BUFFER
*   CHAIN.
*
         OI    PRFSTAT1-IEDQPRF(R5),PRFNHDRN+PRFNLSTN+PRFTSMSG   S22029
*                                       SET 'NOT HDR','NOT LAST'
*                                       , AND 'TS MESSAGE'
         ST    R5,PRFLINK-1-IEDQPRF(R9)  LINK LAST BFR TO THIS BFR
         B     INITPRF                  SET UP BFR PREFIX        S22029
*
BUILDPRF EQU   *
*
         ST    R5,LCBERBCH-1            STOREB.U. ADDR IN ERB
         OI    PRFSTAT1-IEDQPRF(R5),PRFNLSTN+PRFTSMSG SET 'NOT   S22029
*                                       LAST' AND 'TS MESSAGE'
         TM    AYOSWTCH,INTLRQ          TEST IF INITIAL REQUEST
         BO    INITPRF                  YES, DON'T SET 'NOT HDR' S22029
*
         OI    PRFSTAT1-IEDQPRF(R5),PRFNHDRN SET 'NOT HDR' FOR
*                                       SUBSEQUENT REQUEST
*
INITPRF  EQU   *                                                 S22029
*
         LR    R9,R5                    LD ADDR OF LATEST BFR PREFIX
         LA    R9,NULL(R9)              RESET HI-ORDER BYTE
         ST    R9,AYOHDRBU
         TM    PRFSTAT1-IEDQPRF(R9),PRFNHDRN HEADER BFR          S22029
         BO    TXTSIZE                  NO, USE TEXT SIZE        S22029
         MVI   PRFSIZE+1-IEDQPRF(R9),AVTHDRSZ  UPDATE PRFX WITH  S22029
*                                       HEADER PREFIX SIZE
         MVC   PRFDEST-IEDQPRF(2,R9),LCBTTCIN SET UP DEST INDX @Y17XAYP
*                                                              @Y17XAYP
         B     INITPRF1                 CONTINUE PREFIX SETUP    S22029
TXTSIZE  EQU   *                                                 S22029
         MVI   PRFSIZE+1-IEDQPRF(R9),AVTTXTSZ  UPDATE PRFX WITH  S22029
*                                       TEXT PREFIX SIZE
INITPRF1 EQU   *                        CONTINUE UPDATING PREFIX S22029
         LA    RLCB,NULL(RLCB)          CLEAR HI-ORDER BYTE
         ST    RLCB,PRFLCB-1-IEDQPRF(R9)  STORE LCB ADDR INTO PREF
*
ADDBUCT  EQU   *
*
         MVC   PRFTIC-IEDQPRF(,R5),INVLDTIC  SET INVALID TIC
         SR    R1,R1                    RESET R1
         IC    R1,PRFNBUNT-IEDQPRF(R9)  INSERT NO OF B.U. IN BUFFER
         LA    R1,ONE(R1)               INCREMENT NO. OF B.U.
         STC   R1,PRFNBUNT-IEDQPRF(R9)  STORE UPDATED NO. OF B.U.
*
***********************************************************************
*
MOVEDATA EQU   *
*
***********************************************************************
*
*   ENTRY TO OUTPUT EDIT ROUTINE
*
*   ENTRY--  REG.0 - HI-ORDER 2 BYTES
*                    SIZE OF FIELD TO WHICH DATA IS TO BE MOVED-INTO
*
*                  - LOW-ORDER 2 BYTES
*                    SIZE OF THE MSSG TO BE MOVED
*
*            REG.1 - HI-ORDER BYTE
*                    BIT 0 - TSO MESSAGE
*                    BIT 1 - CONTROL OPTION
*                    BIT 2 - ASIS OPTION
*                    BITS 1&2 TOGETHER - FULL SCREEN OPTION
*
*                  - LOW-ORDER 3 BYTES
*                    ADDR OF FIELD TO WHICH DATA IS TO BE MOVED INTO
*
*            REG.2 - ADDR OF MSSG TO BE MOVED
*                     ZERO MEANS SEND IDLES ONLY UNLESS CARRIAGE
*                     COUNT EQUALS LINE SIZE, IN WHICH CASE
*                     RETURN CARRIAGE.
*
*                    WHEN QCBRETCT HAS X'08' ON, OUTPUT EDIT PERFORMS
*                     ONLY SPECIAL END OF MESSAGE PROCESSING.  IN THIS
*                     CASE, REG. 2 NEED ONLY BE NONZERO.
*
*            REG.3  - ADDR OF SCB
*            REG.4  - ADDR OF LCB
*            REG.8  - ADDR OF TSB
*            REG.11 - ADDR OF TCAM DISPATCHER
*            REG.13 - ADDR OF AVT
*            REG.14 - RETURN ADDR
*            REG.15 - ENTRY ADDR
*
***********************************************************************
*
         L     R1,AYONXTCH              GET PT TO NEXT SPACE
         LH    R0,AYOBULEN              GET LENGTH OF SPACE
         LTR   R0,R0                    ANY SPACE LEFT IN BU
         BNZ   SHIFTSIZ                 YES, SKIP SIZING CODE
         SPACE 1
         L     R1,AYOLSTBU              LOAD ADDR OF CURRENT B.U.
         LA    R1,PRFSUNIT-IEDQPRF(R1)  NOW R1 POINTS TO 'TO-FIELD' TO
*                                       WHICH DATA MOVEMENT STARTS
*                                       UNLESS THIS IS A HDR B.U.
         LR    R0,R1                    SAVE START OF UNIT ADDR
         CLC   AYOHDRBU+1(E3),AYOLSTBU+1  TEST IF HDR B.U.
         BNE   GTBUSIZE                 NO, GO TO GET DATA LENGTH
*
         TM    PRFSTAT1-IEDQPRF(R9),PRFNHDRN HEADER PREFIX       S22029
         BO    TXTPRFX                  NO, ADJUST FOR TEXT PRF  S22029
         LA    R1,AVTHDRSZ(R1)          ADJUST FOR HEADER PRF    S22029
         B     GTBUSIZE                                          S22029
TXTPRFX  EQU   *                                                 S22029
         LA    R1,AVTTXTSZ(R1)          ADJUST FOR TEXT PRF      S22029
*
GTBUSIZE EQU   *
*
         ST    R1,AYONXTCH              STORE STARTING POSITION
         AH    R0,AVTKEYLE              GET END OF B.U. ADDR(+1)
         SR    R0,R1                    OBTAIN AVAILABLE BYTES
         STH   R0,AYOBULEN              STORE AVAILABLE LENGTH
         SPACE 2
SHIFTSIZ EQU   *
         SLL   R0,16                    SHIFT TO-LENGTH TO HI-ORDER
*
         TM    AYOSWTCH,SENDNL          SHOULD ONLY IDLES BE SENT?
         BNZ   ENDOFBFF                 YES, GO TO END OF BFFR RTN
         TM    AYOSWTCH,CHAINEND        IS THIS END OF 3270 CHN SA61765
         BNO   NOTCHEND           NO, PROCESS NORMALLY          SA61765
         SPACE 2                                                SA61765
*   THIS IS THE END OF A 3270 CHAIN.  THERE IS NOTHING ON THE Q
*   SO WE MUST FAKE A TS BUFFER ADDRESS AND SKIP LENGTH CHECKING
         LA    R2,1                     ANY NONZERO VALUE IS OK SA61765
         ST    R2,AYOTSBFF              STORE 'ADDR' IN W.A.    SA61765
         OR    R0,R2                    LENGTH MUST BE NONZERO  SA61765
         B     ENDOFBFF                 GO SET BITS FOR EDIT    SA61765
         SPACE 2                                                SA61765
NOTCHEND EQU   *                                                SA61765
         L     R2,AYOTSBFF              LOAD ADDR OF CURRENT TSO BFFR
         IC    R0,BUFFLNTH-TIOCBUF(R2)  INSERT LENGTH OF TSO MSG
         SR    R15,R15                  RESET R15 TO '0'
*
TSTHDRBF EQU   *
*
         CLC   BUFFTRLR,ZEROS           TEST IF ANY MORE IN CHAIN
         BE    ENDOFBFF                 NO, GOTO END OF BFF
*
         L     R2,BUFFTRLR-1-TIOCBUF(R2) LOAD NEXT BUFFER ADDR
*
*   UPDATE CURRENT TS BUFFER POINTER IF THIS TS BUFFER HAS
*   BEEN EMPTIED.
*
         LR    R14,R0                   MOVE R0 FOR DESTRUCTIVE TEST
         N     R14,AVTCLRHI             IS THERE ANY DATA TO BE MOVED?
         BNZ   INSRTLNG                 YES,GOTO INSERT DATA LENGTH
         LA    R2,NULL(R2)              CLEAR HI-ORDER BYTE
         ST    R2,AYOTSBFF              UPDATE TS BFFR POINTER
*
INSRTLNG EQU   *
*
         IC    R15,BUFFLNTH-TIOCBUF(R2) INSERT TEXT LENGTH
         AR    R0,R15                   ADD TEXT LENGTH TO TSO MSG LNTH
         B     TSTHDRBF                 GO BACK TO CHECK NEXT BUFFER
*
CLEARQ   EQU   *
         BAL   R14,TSBADDR              GET TSB AND TIOCPT       TS1638
*                                       ADDR'S                   TS1638
         STM   R0,R1,AVTSAVE2+E48       SAVE REGS. ACROSS QTIP
         SR    R15,R15                  INDICATE Q FLUSH ALLOWED
         QTIP  QTIP2ND,(RSAVE)          CLEAR OUTPUT TRAILER QUEUE
*
         LM    R0,R1,AVTSAVE2+E48       RESTORE REGS. AFTER QTIP
         CLI   QCBCARCT,NULL            IS CARRIAGE AT LEFT MARGIN
         BE    TEST3270                 YES, NO NEED TO RETURN @YA13248
         MVC   QCBCARCT,TSBLNSZ         TELL OUTPUT EDIT...
         NI    QCBRETCT,NOT-QCBNLCR     ...TO RETURN CARRIAGE
TEST3270 TM    TSBSTAT,TSB3270          3270 TERMINAL?         @YA13248
         BNO   SENDIDLE                 NO, GO SEND IDLES      @YA13248
         SR    R9,R9                    YES, DON'T SEND IDLES  @YA13248
         B     POSTLCB                  FOR 2370.              @YA13248
*
ENDOFBFF EQU   *
*
         L     R2,AYOTSBFF              LOAD ADDR OF CURRENT TS BUFFER
*
         LA    R1,NULL(R1)              CLEAR HI-ORDER BYTE
         O     R1,TSOMSGC               SET TSO MSG BIT 'ON'
*
         LR    R15,R0                   MOVE FIELD LENGTHS FOR TESTING
         N     R15,AVTCLRHI             IS THERE ANY OUTPUT MESSAGE?
         BZ    SENDIDLE                 NO, GO SEND IDLES ONLY
*
         TM    AYOSWTCH,SENDNL          TEST IF TO SEND ONLY IDLES
         BNO   CHCKEDIT                 NO, GO CHECK EDIT OPTION
*
SENDIDLE EQU   *
         SR    R2,R2                    INDICATE SEND IDLES ONLY
*
         CLI   QCBCARCT,E41             ENOUGH IN CARRIAGE COUNT
         BH    PASTFLSH                 YES, DONT SET IT UP     YA06038
         MVI   QCBCARCT,TWOIDLE         SET CARRIAGE POSITION TO
*                                       CAUSE IDLES
         B     PASTFLSH                 GO TO OUTPUT EDIT        A44839
*
CHCKEDIT EQU   *
*
         TM    AYOSWTCH,CHAINEND        END OF 3270 MSG CHAIN   SA61765
         BO    PASTFLSH                 YES, SKIP CHECKS        SA61765
*
*        SET BITS IN REGISTER ACCORDING TO TPUT OPTION -
*        TSOASISC MEANS ASIS, TSOCNTLC MEANS CONTROL, BOTH MEANS
*        FULL SCREEN
*
         TM    BUFFFL1,BUFFEDIT+BUFFCNTL TEST FOR BOTH, NEITHER SA60002
         BO    SETFULLS                 BOTH ON, FULL SCREEN    SA60002
         BZ    SETASIS                  NEITHER, MUST BE ASIS   SA60002
         SPACE 2                                                SA60002
*        MUST BE EDIT OR CONTROL                                SA60002
*
         TM    BUFFFL1,BUFFEDIT         CHECK FOR EDIT          SA60002
         BO    GOEDIT                   SET NO BITS FOR EDIT    SA60002
         O     R1,TSOCNTLC              SET CONTROL BIT         SA60002
         B     GOEDIT                   GO CALL EDIT RTN        SA60002
         SPACE 2                                                SA60002
SETASIS  EQU   *                                                SA60002
         O     R1,TSOASISC              SET ASIS BIT            SA60002
         B     GOEDIT                   GO CALL EDIT RTN        SA60002
         SPACE 2                                                SA60002
SETFULLS EQU   *                                                SA60002
         O     R1,TSOASISC              SET ASIS FOR FULLSCR,   SA60002
         O     R1,TSOCNTLC              AND ALSO SET CNTL       SA60002
*
GOEDIT   EQU   *
*
         TM    TSBFLG3,TSBTJMSG         IS MESSAGE NON-FLUSHABLE?
         BO    PASTFLSH                 YES, SKIP FLUSH CHECK
         TM    TSBFLG1,TSBOFLSH         SHOULD OUTPUT TRAILER QUEUE
*                                       BE CLEARED?
         BO    CLEARQ                   YES, DON'T SEND REST OF MSG
*
PASTFLSH EQU   *
*          REG.2  - ADDR OF LAST TS BUFFER FROM WHICH DATA WAS MOVED
         L     R15,AVTTSOPT             LOAD ADDR OF TSINPUT QCB
         USING IEDQTSI,R15
         L     R15,TSIEDIT              LOAD ADDR OF EDIT ROUTINE
         TM    AYOSWTCH,INTLRQ          INITIAL REQUEST?        YM2865
         BNO   DONTINIT                 IF NOT, DON'T TOUCH     YM2865
*                                       LCBTTBIN (ERP'S USE IT) YM2865
         MVC   LCBTTBIN,AYOSRCE         SET INDEX TO TNT         A44839
DONTINIT EQU   *                                                YM2865
*
         BALR  R14,R15                  GOTO EDIT ROUTINE
*
         DROP  R15
*
***********************************************************************
*
*   RETURN FROM OUTPUT EDIT ROUTINE
*
*   EXIT - REG.0  - NO. OF CHARACTERS MOVED INTO TO-FIELD
*          REG.1  - LENGTH OF DATA MOVED FROM FROM-FIELD
*          REG.2  - ADDR OF LAST TS BUFFER FROM WHCICH DATA WAS MOVED
*          REG.15 - RETURN CODE
*                   X'00' - COMPLETE MSSG HAS BEEN MOVED
*                           (AND 3270 SCREEN IS FULL)
*                   X'08' - COMPLETE MSG HAS BEEN MOVED, BUT
*                           SCREEN IS NOT FULL
*                   X'0C' - ONLY PART OF MSSG HAS BEEN MOVED
*                           AND LINE (OR, FOR 3270, SCREEN)
*                           ONLY PARTLY FILLED.
*                   X'10' - ONLY PART OF TS MSG MOVED BUT TERMINAL
*                           LINE (OR SCREEN) IS FULL.
*
***********************************************************************
*
         LA    R2,NULL(R2)              CLEAR HI-ORDER BYTE
         ST    R2,AYOTSBFF              STORE IT IN WORK AREA
*
         L     RPREF,AYOHDRBU           LOAD ADDR OF HDR B.U.
         LH    R14,AYOBULEN             GET PREV NO. AVAILABLE  YS6327
         SR    R14,R0                   SUBTRACT AMOUNT JUST    YS6327
*                                       MOVED                   YS6327
         STH   R14,AYOBULEN             STORE NEW AVAIL SPACE   YS6327
         L     R14,AYONXTCH             PREV. POINTER           YS6327
         AR    R14,R0                   ADD AMOUNT MOVED        YS6327
         ST    R14,AYONXTCH             STORE UPDATED POINTER   YS6327
         AH    R0,PRFSIZE               GET UPDATED DATA LENGTH YS6327
         STH   R0,PRFSIZE               STORE UPDATED LENGTH    YS6327
         DROP  R2                                               YS6327
*
***********************************************************************
*
*   IF THIS LATEST BASIC UNIT IS THE LAST IN A TCAM BUFFER, DECREMENT
*   THE COUNT OF TCAM BUFFERS PERMITTED ON THIS REQUEST (LCBERBCT).
*   IF THE COUNT HAS BEEN EXHAUSTED, TCAM BUFFER BUILDING MUST STOP
*   FOR THIS REQUEST.
*
***********************************************************************
*
         LA    R14,AVTECD12             RETURN CODE COMPARISON VALUE
         LTR   R15,R15                  WAS RETURN CODE = X'00'?YA00526
         BZ    CANT                     YES, ALL IS OK, SENDMSG YA00526
         CR    R15,R14                  COMPARE RC WITH X'0C'   YA00526
         BH    CANT                     GREATER,(10=SCREEN FULL)YA00526
*
*   TEST IF A BUFFER HAS BEEN CONSTRUCTED
*
         L     R9,AYOHDRBU              LOAD ADDR OF HDR B.U.
         CLC   AYOBULEN(2),ZEROS        IS CURRENT BU FULL?     YA00526
         BNE   OVER                     NO, DONT CHECK ERBCNT   YA00526
         CLC   LCBERBQB(ONE),PRFNBUNT-IEDQPRF(R9) LAST BU IN    YA00526
*                                                TCAM BUFFER?   YA00526
         BE    BFRBUILT                 YES, DECREMENT ERBCNT   YA00526
OVER     CR    R15,R14                  COMPARE RC WITH X'0C'   YA00526
         BE    GETBASIC                 EQUAL, GET ANOTHER BU   YA00526
         B     NEXTMSG                  NOTEQUAL (X'08') GET    YA00526
*                                       GET NEXT TS MESSAGE     YA00526
*
BFRBUILT EQU   *
         SLR   R0,R0                    CLEAR FOR IC
         IC    R0,LCBERBCT              INSERT ENABLED COUNT
         BCTR  R0,0                     DECREMENT
         STC   R0,LCBERBCT              STORE UPDATED ENABLED COUNT
*
         LTR   R0,R0                    IS ENABLED COUNT EXHAUSTED?
         BNZ   CAN                      NO, BFR BUILDING MAY CONTINUE
*
*   NOTE.  WHEN THE HI-ORDER BIT IS ON IN THE DISABLED COUNT, THE
*   PCI APPENDAGE WILL UPDATE THE ENABLED COUNT RATHER THAN THE
*   DISABLED COUNT.
*
         OI    LCBERBCT+1,XXCTUSED      SHOW DISABLED COUNT IN USE
         CLI   LCBERBCT+1,XXCTUSED      WAS DISABLED COUNT ZERO
         BNE   MERGCNTS                 NO, GO MERGE COUNTS
         OI    LCBERBST,LCBDLNKN        MAKE ERB POSTABLE
         NI    LCBERBCT+1,NOT-XXCTUSED  MAKE DISABLED COUNT USABLE
         NC    LCBERBCT,LCBERBCT        IS ERB COUNT STILL ZERO
         BZ    CANNOT                   YES, BFR BUILDING MUST CEASE
*
*   ARRIVAL AT THIS POINT MEANS AN INTERRUPTION OCCURRED DURING
*   EXECUTION OF THE PREVIOUS 7 INSTRUCTIONS.  LCBDLNKN IS TESTED
*   TO SEE WHEN THE INTERRUPTION OCCURRED.
*   -----IF OFF, THIS MEANS THE INTERRUPT OCCURRED AFTER THE ERB
*        WAS MARKED POSTABLE.  THE PCI APPENDAGE HAS POSTED THE
*        ERB TO TSOUTPUT AGAIN.  BUFFER BUILDING SHOULD STOP FOR
*        THIS REQUEST.
*   -----IF ON, PCI APPENDAGE COULDN'T POST THE ERB.  BUFFER BUILDING
*        MAY CONTINUE.  NOTE THAT THE ERB COUNTS NEEDN'T BE
*        MERGED SINCE THE PCI APPENDAGE UPDATED THE ENABLED COUNT.
*
         TM    LCBERBST,LCBDLNKN        HAS ERB BEEN REPOSTED
         BNO   CANNOT                   YES, CEASE BFR BUILDING
         NI    LCBERBST,LCBDLNKF        MAKE ERB NON-POSTABLE
         B     CAN                      MAY CONTINUE BFR BUILDING
*
*   MERGE DISABLED & ENABLED ERB COUNTS
*
MERGCNTS EQU   *
         IC    R0,LCBERBCT+1            PICK UP DISABLED COUNT
         MVI   LCBERBCT+1,NULL          DISABLED COUNT NOW 0 & USABLE
         LA    R1,NOT-XXCTUSED          LOAD MASK TO RESTORE COUNT
         NR    R0,R1                    CLEAR IN USE BIT
         IC    R1,LCBERBCT              GET ANYTHING PUT IN ENABLED
*                                       CNT WHILE DISABLED COUNT
*                                       WAS IN USE
         AR    R0,R1                    MERGE COUNTS
         STC   R0,LCBERBCT              STORE MERGED COUNT
*
CAN      EQU   *
*                                                               YA00526
*     AT THIS POINT, THE RETURN CODE FROM THE OUTPUT EDIT       YA00526
*     MUST HAVE BEEN EITHER                                     YA00526
*                         X'08' -- MEANING ANOTHER TSO MESSAGE  YA00526
*                                  SHOULD BE OBTAINED AND PACKEDYA00526
*                                  INTO THE TCAM BUFFERS        YA00526
*                         X'0C' -- MEANING ANOTHER BASIC UNIT   YA00526
*                                  IS NEEDED                    YA00526
*                                                               YA00526
         CR    R15,R14                  IS ANOTHER BASIC UNIT NEEDED
         BNE   NEXTMSG                  NO, GET ANOTHER TSO MSG YA00526
         B     GETBASIC                 NO, GO CONTINUE BFR BUILDING
*
CANT     EQU   *
         OI    LCBERBST,LCBDLNKN        MAKE ERB 'POSTABLE'
CANNOT   EQU   *
         CR    R15,R14                  BFR ALLOCATION ALL USED UP?
         BE    SENDMSG                  YES, GO SEND MESSAGE
*
*   SET END OF MESSAGE CONDITION FOR THE TCAM MESSAGE
*
         NI    PRFSTAT1,PRFNLSTF        INDICATE BFR IS LAST
         OI    LCBERBST,LCBEOMSG        INDICATE END OF MESSAGE
         MVI   LCBERBCT+1,NULL          CLEAR DISABLED COUNT
*
         LTR   R15,R15                  WAS WHOLE TS MSG MOVED INTO
*                                       TCAM BUFFERS?
         BNZ   SENDMSG                  NO, SKIP END OF MSG PROCESSING
*
***********************************************************************
*
*   ONE COMPLETE TS MSG HAS BEEN MOVED INTO TCAM BUFFER
*
***********************************************************************
*
*   IF THIS MESSAGE IS A PARTIAL INPUT LINE CAUSED BY BREAK-IN, GIVE
*   PRIORITY TO INPUT ON THIS TERMINAL IN ORDER TO READ REST OF
*   INPUT MESSAGE.
*
         TM    TSBFLG2,TSBBIPI          IS THIS A PARTIAL LINE?
         BNO   MOREBFF                  NO, GO CHK FOR MORE MSG'S
         TM    TSBSTAT,TSBDSPLY         IS THIS A FLASHBACK MSG
         BO    MOREBFF                  YES, GO CHK FOR MORE MSG'S
         OI    QCBFLAG,QCBREAD          GIVE READ PRIORITY ON TERM
         B     SENDMSG                  GO SEND MESSAGE
*
MOREBFF  EQU   *
*
         CLC   TSBOBFP,ZEROS            TEST IF ANY MORE TS MSG
         BNE   SENDMSG                  YES,GOTO SEND THIS TS MSG
*
         TM    TSBFLG2,TSBAUTON         IS AUTO PROMPTING REQUESTED?
         BZ    SENDMSG                  NO, GO SEND MESSAGE
*
         TM    QCBTSOF1,QCBPARTO        IS REST OF MSG YET TO    TS1638
*                                       COME                     TS1638
         BO    SENDMSG                  YES, DON'T AUTO PROMPT   TS1638
*                                       YET                      TS1638
*
         TM    TSBFLG3,TSBSPIT          IS TCLEARQ IN PROGRESS
         BO    SENDMSG                  YES, DON'T AUTO PROMPT
         OI    SCBERR2,SCBALN           REQUEST AUTO PROMPTING
*                                       BY MSGGEN
         B     SENDMSG                  GO SEND MESSAGE
*
***********************************************************************
*
NEXTMSG  EQU   *                                                SA61765
*
***********************************************************************
*
*   FOR 3270, OUTPUT EDIT HAS INDICATED THAT A COMPLETE TS MESSAGE
*    HAS BEEN PUT INTO TCAM BUFFERS, BUT THE SCREEN IS NOT FULL, SO
*    BRANCH BACK TO GET ANY MORE TS MESSAGES AND BLOCK THEM IN THE
*    TCAM BUFFERS.
*
***********************************************************************
         BAL   R14,TSBADDR              SET UP ADDRESSES FOR QTPSA61765
         OI    AYOSWTCH,MSGCHAIN        SHOW A CHAIN HAS BEGUN  SA61765
         B     CHAINBUF                 GO CHECK FOR MORE MSGS  SA61765
         SPACE 2                                                SA61765
***********************************************************************
*
NOOUTPUT EQU   *
*
***********************************************************************
*
*   NO OUTPUT TO SEND
*        1 - CHECK FOR END OF 3270 MESSAGE CHAIN AND HANDLE IF SO
*        2 - CHECK EXCEPTIONAL CONDITIONS AND HANDLE, OTHERWISE
*            POST LCB TO ITSELF
*        3 - INITIAL OR SUBSEQUENT PCI
*            COMPLETE REQUEST BY SENDING ONE IDLE CHARACTER
*
***********************************************************************
*
         TM    AYOSWTCH,MSGCHAIN        WAS A 3270 CHAIN BEGUN  SA61765
         BNO   REALLYNO                 NO, GO DO NOOUTPUT      SA61765
         SPACE 2                                                SA61765
***********************************************************************
*
         OI    QCBRETCT,DOEOM           SIGNAL EOM TO EDIT      SA61765
         OI    AYOSWTCH,CHAINEND        SIGNAL EOM TO TSOUTPUT  SA61765
         B     WATSLEFT                 USE CURRENT BU IF POSS  YS6327
         SPACE 2                                                SA61765
REALLYNO EQU   *                                                SA61765
         TM    AYOSWTCH,INTLRQ          IS THIS AN INITIAL REQUEST
         BNO   NOTINTL                  NO, SET UP TO SEND 1 IDLE
*
         SR    R9,R9                    CLEAR MSGGEN MASK REG    M0141
         TM    TSBSTAT,TSBDISC          USER BEING LOGGED OFF?
         BNO   CKBRK1                   NO, DON'T CK SPECIAL MSG M0141
*
*   TEST FOR SPECIAL MESSAGES TO BE SENT
*
         TM    TSBFLG4,TSBOCAB          OUT-OF-CORE ABEND      @G36XRYP
         BZ    POSTLCB                  NO, POST LCB           @G36XRYP
         LA    R9,MSKOCAB               SET MSGGEN MASK          M0141
         B     PASTLCB                  GO CHECK FOR CLEANUP     M0141
*
CKBRK1   EQU   *                                                 M0141
         TM    QCBTSOF2,QCBBUFQ         IS TSINPUT HOLDING BFRS  M0141
         BO    POSTLCB                  YES, POST LCB            M0141
*
         TM    TSBFLG3,TSBSPIT          IS TCLEARQ IN PROGRESS   M0141
         BO    POSTLCB                  YES, DON'T WORRY BREAKIN M0141
*
         TM    QCBTSOF1,QCBPARTO        MORE MSGS TO COME        M0141
         BO    POSTLCB                  YES, DON'T PROMPT IN     M0141
*                                       MIDDLE OF MESSAGE
         TM    TSBFLG2,TSBBRKIN         DID BREAKIN OCCUR        M0141
         BO    PASTLCB                  YES, DON'T FREE LINE     M0141
*
POSTLCB  EQU   *                                                 M0141
*
*   ISSUE QTIP SVC TO RESET QCBTPUT AND QCBWRBRK, AND TPOST THE
*   LCB TO ITSELF, ALL WHILE DISABLED.
*
         QTIP  QTIP6TH,(RSAVE)                                   M0141
*
         STC   R15,AYORC                SAVE RETURN CODE        YM2814
         BCTR  R9,R0                    MAKE REG NEG, TO SHOW   YM2814
*                                       THAT QTIP WAS CALLED    YM2814
*
PASTLCB  EQU   *                                                 M0141
*
*   CLEAN UP TCAM AND TSO CONTROL BLOCKS IF REQUESTED
*
         TM    TSBSTAT,TSBDISC          CLEANUP REQUESTED        M0141
         BNO   CKBRK2                   NO, GO SEE WHAT ELSE TO  M0141
*                                       DO
         QTIP  QTIP4TH,(RSAVE)          CLEAN UP TSO CONTROL BLK M0141
*
         BAL   R5,SESCLEAN              CLEAN UP TCAM CNTRL BLKS M0141
CKBRK2   EQU   *                                                 M0141
         CLI   AYORC,NULL               WAS RETURN FROM OO ZERO YM2814
         BNE   AUTOPRMT                 NO, GO START AUTO PRMPT YM2814
         LTR   R9,R9                    DID WE CALL QTIP TO     YM2814
*                                       TPOST LCB, ETC.         YM2814
         BP    GOMSGGEN                 NO, THERE IS A LOGOFF   YM2814
*                                       MESSAGE TO SEND         YM2814
         BZ    CHKBRKIN                 NO CALL, NO MSG, CK BRK YM2814
*
*
*   THERE IS NO OUTPUT TO SEND SO CLEAN-UP TCAM STATUS INDICATORS
*   WHICH WERE SET UP FOR OUTPUT
*
CLEANOUT EQU   *
         SR    R0,R0                    CLEAR REGISTER
         ST    R0,SCBERRST              ZERO ERROR INDICATORS
         ST    R0,SCBDEOB               ZERO SCB STATUS
         STH   R0,SCBEOB                ZERO SCB FIELD
         MVI   LCBSENS0,NULL            ZERO SENSE BYTE
         ST    R0,LCBERBCH-1            CLEAR ERB STATUS & CHAIN
         XC    LCBLSPCI,LCBLSPCI        LAST SERVICED PCI
         NI    LCBCHAIN,NOT-LCBBFRSZ-LCBABRTN-LCBEXCP
         NI    LCBTSOB,NOT-LCBTSBUF-LCBINHBN-LCBWRBRK
         NI    LCBSTAT2,LCBMSGNF        RESET MSGGEN BIT
         NI    LCBSTAT1,NOT-LCBRCLLN    RESET RECALL BIT
*
         LA    R1,X0100                 GET MASK ADDRESS
         STCM  R1,7,SCBMACR             STORE MASK ADDRESS     @Y17XAYP
         LA    R1,AVTBFRTB              GET ADDR OF BFR RET Q
         STCM  R1,7,SCBDESTQ            STORE BFR RET Q ADDR   @Y17XAYP
         B     DISP                     GO EXIT TO TCAM DISPATCHER
*
***********************************************************************
*
TSABEND  EQU   *
*
***********************************************************************
*
*   TS HAS ABENDED
*        -- CLEAN UP TCAM CONTROL BLOCKS
*        -- SEND TS ABEND MESSAGE USING MSGGEN INTERFACE
*
         BAL   R5,SESCLEAN              GO CLEAN-UP TCAM BLOCKS
         LA    R9,ABNDMSK               PT TO PROPER MSGGEN MASK
         B     GOMSGGEN                 GO PUT OUT MESSAGE
*
***********************************************************************
*
AUTOPRMT EQU   *
*
*   USE MSGGEN INTERFACE TO SEND AUTO PROMPT SEQUENCE
*
         OI    SCBERR2,SCBALN           ASK MSGGEN FOR AUTO LINE NO.
         LA    R9,AUTOMSK               PT TO PROPER MSGGEN MASK
*
***********************************************************************
*
*   THIS ROUTINE IS AN INTERFACE TO GO TO MSGGEN TO SEND A MESSAGE
*
*        REGISTERS AT EXIT TO MSGGEN--
*          REG 1 = 0
*          REG 3 = ADDR OF SCB
*          REG 4 = ADDR OF LCB
*          REG 8 = ADDR OF MSSGEN MASK
*          REG 9 = IC REG
*          REG 11= ADDR OF DISPATCHER
*          REG 12= ADDR IN TSIMSGEN
*          REG 13= ADDR OF AVTSAVE2
*
GOMSGGEN EQU   *
*
         MVC   LCBTTCIN,AYOSRCE         MOVE IN TERMINAL INDEX
         NI    LCBSTAT1,LCBOCNI+LCBOCWTN CLEAR STATUS          @OY14092
         OI    LCBSTAT1,LCBRECVN        SET RECEIVE STATE      @YA11542
         LA    R15,X0100                LOAD ADDR OF X0100
         STCM  R15,7,SCBMACR            STORE IT IN SCB        @Y17XAYP
         LR    R8,R9                    GET MSGGEN MASK POINTER
*
         L     R2,AVTTSOPT              LOAD ADDR OF TSI
         USING IEDQTSI,R2
         L     R12,TSIMSGEN             LOAD ADDR OF MSSGEN RTN
         SR    R1,R1                    SET R1=0
         L     R11,AVTEA                LOAD DISPATCHER ADDR
         BR    R12                      GOTO MSSGEN ROUTINE
*
         DROP  R2
*
***********************************************************************
*
NOTINTL  EQU   *
*
***********************************************************************
*
*   THERE IS NO OUTPUT FOR INITIAL AND SUBSEQUENT PCI
*        1 - TO TERMINATE SEND OPERATION,SET-UP TO SEND 1 IDLE
*        2 - THEN TREAT LIKE A NORMAL OPERATION
*
***********************************************************************
*
         XC    AYOTSBFF(E4),AYOTSBFF    RESET TS BUFFER POINTER
*
         OI    AYOSWTCH,SENDNL          SET TO SEND 1 DUMMY IDLE CHAR
         B     GETBASIC                 GOTO GET BASIC UNIT
*
***********************************************************************
*
CHKBRKIN EQU   *
*
***********************************************************************
*
*   'TSBBRKIN' ON CAUSED ARRIVAL AT THIS POINT.  THIS MEANS ONE OF
*   THE FOLLOWING--
*        --THE USER WAS INTERRUPTED BY A BREAK-IN MESSAGE WHILE
*          ENTERING INPUT AND NEEDS TO HAVE THAT INPUT SENT OUT TO HIM
*          TO PROMPT HIM TO COMPLETE HIS MESSAGE.
*        --THE USER'S SCREEN FILLED UP AND WAS ERASED WHILE HE WAS
*          ENTERING INPUT, SO THE LAST PART OF HIS INPUT NEEDS TO BE
*          SENT TO REORIENT HIM.
*
***********************************************************************
*
*  ISSUE QTIP CALL TO PUT MSG ON TRAILER QUEUE
*
         QTIP  QTIP5TH,(RSAVE)          PUT PARTIAL MSG ON TRLR Q
*
         B     BUILDBFF                 GO SEND REPROMPT
*
***********************************************************************
*
SENDMSG  EQU   *
*
***********************************************************************
*
*   ON AN INITIAL REQUEST TPOST THE ERB TO THE ACTIVATE ROUTINE.
*   ON A PCI REQUEST TPOST THE BUFFER TO THE MESSAGE HANDLER.
*   ADDITIONALLY, ON A SUBSEQUENT PCI REQUEST, TPOST ERB TO
*   TSOUTPUT IF LCBERBCT IS NOT EXHAUSTED.
*
***********************************************************************
*
         MVC   PRFLINK,ZEROS            CLEAR LINK FIELD
         L     R2,LCBERBCH-1            LOAD ADDR OF 1ST BFFR
*
         ST    RQCB,SCBSCSEG-1          STORE DESTINATION QCB ADDR
         OI    LCBTSOB,LCBTSBUF         SET THIS IS A TSBUF BIT
         L     RDCB,LCBDCBPT            LOAD DCB ADDR
*
         LA    R1,LCBERB                LOAD ADDR OF ERB
         TM    AYOSWTCH,INTLRQ          TEST IF INTIAL REQUEST
         BNO   POSTMH                   NO ,POST TO MH
*
*   WHEN IT IS INITIAL REQUEST
*        1 - IF DYNAMIC BFFRING IS NOT SPECIFIED,MAKE THIS AS END OF
*            TCAM MSG
*        2 - POST ERB TO ACTIVATE (PRI=PRIACTIV)
*
         MVC   LCBTTBIN(R2),AYOSRCE     SET INDEX TO TNT         YM2865
         TM    DCBPCI,DYNMBFFR          TEST IF DYNAMIC BFFRING SPEC.
         BO    DYNAMIC                  YES,DYNAMIC BFFRING SPECIFIED
*
*   WHEN DYNAMIC BFFRING IS NOT SPECIFIED - TREAT THIS MSG AS END OF
*        1 - TURN 'NOT LAST BFFR' BIT OFF              TCAM MSG
*        2 - SET LCBEOMSG 'ON'
*
         NI    PRFSTAT1,PRFNLSTF        RESET 'NOT LAST BFR' BIT
         OI    LCBERBST,LCBEOMSG        SET END OF MSG BIT
         MVI   LCBERBCT+1,NULL          CLEAR DISABLED COUNT
*
DYNAMIC  EQU   *
*
*
*   WHEN INITIAL REQUEST - POST ERB TO ACTIVATE
*
         LA    R2,AVTACTIB              LOAD ADDR OF ACTIVATE QCB
         CLI   LCBFLAG1,LCBPLCB         PLCB                   @YM07794
         BNE   POSTERB                  BR NO                  @YM07794
         L     R2,AVTSAVTP              GET SAVT ADDR          @YM07794
         USING IEDNSVTD,R2              SAVT ADDRESSABILITY    @YM07794
         L     R2,SAVTCNIR              IEDNKA QCB ADDR        @YM07794
         DROP  R2                                              @YM07794
*
POSTERB  EQU   *
         MVI   LCBERBPY,PRIACTIV        SET PRI=PRIACTIV
         B     POST                     GOTO DSPPOST
*
POSTMH   EQU   *
*
         XC    LCBERBCH,LCBERBCH        CLEAR LCB CHAIN FIELD
         LR    R1,RPREF                 LOAD BUFFER ADDR
         L     R2,LCBMHA-1              ASSUME PLCB AND GET    @Y17XAYP
*                                       MH ADDRESS             @Y17XAYP
         CLI   LCBFLAG1,LCBPLCB         PLCB                   @Y17XAYP
         BE    SETPRI                   BR YES                 @Y17XAYP
         L     R2,DCBMH-1               LOAD MH QCB ADDR
SETPRI   EQU   *                                               @Y17XAYP
         MVI   PRFPRI,PRIMHBFR          SET PRIORITY
*
         NC    LCBERBCT,LCBERBCT        IS ERB COUNT EXHAUSTED?
         BZ    POST                     YES, GO TPOST TO MH
*
         BAL   R14,POSTR                TPOST TO MH & COME BACK
         TM    LCBERBST,LCBEOMSG        IS IT END OF MSG
         BO    DISP                     YES, TSOUTPUT NEEDN'T REGAIN
*                                       CONTROL
         L     RSCB,LCBSCBA-1           RESTORE RSCB AFTER DSPPOSTR
*
         TM    AYOSWTCH,SUBPCI          TEST IF SUBSEQUENT PCI
         BO    POSTAYO                  YES, GO TPOST TSOUTPUT
*
         L     RQCB,SCBDESTQ-1          RESTORE RQCB AFTER DSPPOSTR
         B     GETBASIC                 GO BUILD ANOTHER TCAM BFR
*
POSTAYO  EQU   *
         LA    R2,AVTDSIOB              LOAD ADDR OF TSOUTPUT'S QCB
         LA    R1,LCBERB                LOAD ADDR OF ERB
         MVI   LCBERBPY,PRISBPCI        SET PRIORITY
         B     POST                     GO TPOST ERB TO TSOUTPUT
*
***********************************************************************
*
NOBFRS   EQU   *
*
***********************************************************************
*
*   IF TSOUTPUT RUNS OUT OF BASIC UNITS WHILE BUILDING TCAM BUFFERS,
*   IT PUTS THE ERB IN THE TOP OF THE ELEMENT CHAIN OF THE BUFFER
*   RETURN QCB TO WAIT FOR A BASIC UNIT TO BECOME AVAILABLE.  WHEN
*   ONE DOES, IT WILL BE TPOSTED TO TSOUTPUT AT ITS SECONDARY ENTRY
*   POINT, IEDAYO02.
*
***********************************************************************
*
         TM    LCBERBST,LCBINQ          TEST IF ERB ALREADY IN Q
         BO    CHCKBFF                  YES, DON'T PUT IN AGAIN
*
         OI    LCBERBST,LCBINQ          SHOW ERB ENQUEUED
         MVI   LCBERBPY,PRIDSKBF        SET PRI TO OBTAIN BFF FROM BFFR
*                                       RETURN
*
         MVC   LCBERBLK(E3),AVTBFRTB+1  LINK ERB TO CURRENT FIRST ON Q
         LA    R1,LCBERB                LOAD ADDR OF THIS ERB
         ST    R1,AVTBFRTB              STORE IT INTO BFF RTN QCB
*
CHCKBFF  EQU   *
*
DISP     EQU   *
         L     R11,AVTEA                LOAD ADDR OF DISPATCHER
         B     DSPDISP                  EXIT TO TCAM DISPATCHER
*
***********************************************************************
*
         CNOP  0,4
*
***********************************************************************
*
***********************************************************************
*
IEDAYO02 EQU   *
*
***********************************************************************
*
*   STCB FOR SECOND ENTRY
*
         DC    AL1(DSPMCPL8),AL3(0),A(0)  STCB FIELDS            S22029
*
***********************************************************************
*
*   SECOND ENTRY POINT
*
*        INPUT - REG.1 - ADDR OF BASIC UNIT OR QCB
*                REG.3 - ADDR OF STCB
*                REG.7 - ADDR OF CPB CLEAN-UP QCB
*                REG.11 - ADDR OF DISPATCHER
*                REG.13 - ADDR OF AVTSAVE2
*                REG.15 - ENTRY ADDR
*
*        ELEMENT IS QCB - EXIT TO DSPBYPAS
*
*        ELEMENT IS BASIC UNIT
*                A - IF LCBERROR IS 'ON' - POST THE BASIC UNIT AND
*                                          OTHER TCAM BUFFER TO BUFFER
*                                          RETURN.
*                                  'OFF' - CONTINUE TO BUILD BUFFER
*
*        IF LCBTSBUF IS NOT 'ON' - EXIT TO DSPBYPAS
*
***********************************************************************
*
         USING *,R15
         L     RBASE,BASE               INITIALIZE BASE
         DROP  R15
*
         LA    RQCB,0(RQCB)                                      S22029
         LA    R1,0(R1)                                          S22029
         LTR   R1,R1                    IS ELEMENT ADDRESS ZERO
         BZ    CPBCLNUP                 YES, GIVE CTL TO TCAM    S22029
*                                       CPB CLEANUP RTN
         CLR   RQCB,R1                  IS ELEMENT CPB CLEANUP'S S22029
*                                       QCB
         BNE   MUSTBEBU                 NO,MUST BE BASIC UNIT
*                                       WHEN CPB CLEANUP'S QCB
*                                       IS POSTED, EXIT TO CPB
*                                       CLEANUP
*
***********************************************************************
*
*   EXIT TO TCAM CPB CLEANUP/INIT ROUTINE
*
***********************************************************************
*
         DROP  R3
         USING IEDQTSI,R3                                        S22029
CPBCLNUP EQU   *                                                 S22029
         L     R3,AVTTSOPT              PICKUP TSINPUT QCB       S22029
         L     R3,TSICPBC               PICKUP STCB ADDRESS OF   S22029
*                                       TCAM CPB CLEANUP RTN
         B     DSPBYPAS                 GO TO CPB CLEANUP        S22029
*
CPBINIT  EQU   *                                                 S22029
         L     R3,AVTTSOPT              PICKUP TSINPUT QCB       S22029
         L     R3,TSICPBI               PICKUP STCB ADDRESS OF   S22029
*                                       CPB INITIALIZATION RTN
         L     RQCB,0(,R1)              INSURE QCB POINTER OK   SS22029
         B     DSPBYPAS                 GO TO CPB INITIALIZATION S22029
*
***********************************************************************
*
MUSTBEBU EQU   *
*
***********************************************************************
*
*
*   WHEN BASIC UNIT IS PASSED
*
*              1 - IF QCBTSSES IS 'OFF' - EXIT TO DSPBYPAS
*              2 - IF QCBTSSES IS 'ON'
*                   A - IF LCBERROR 'ON' - POST THE BASIC UNIT AND BFFR
*                                          IN CHAIN TO BFFR RETURN
*                   B - IF LCBERROR 'OFF'- CONTINUE TO BUILD BFFR
*
***********************************************************************
*
         DROP  R3
         USING IEDQSCB,R3
         LR    RPREF,R1                 LOAD ELEMENT ADDR
         L     RLCB,PRFLCB-1            LOAD ADDR OF LCB
         L     RSCB,LCBSCBA-1           LOAD SCB ADDR
         TM    LCBSTAT1,LCBRCLLN+LCBRECVN RECALLING OR RECVING  YA02104
         BNZ   CPBCLNUP                 YES, TREAT AS NON-TSO   YA02104
         L     RQCB,SCBDESTQ-1          LOAD QCB ADDR
*
         TM    QCBFLAG,QCBTSSES         TEST IF TSO IN SESSION
         BNO   CPBCLNUP                 GO TO CPB CLEANUP        S22029
*
         LH    R14,AVTAVFCT             GET AVAILABLE COUNT    @YM09096
         BCTR  R14,0                    REDUCE                 @YM09096
         STH   R14,AVTAVFCT             RESTORE COUNT          @YM09096
         NI    LCBERBST,NOT-LCBINQ      ERB NO LONGER ENQUEUED
         TM    LCBERBST,LCBERROR        TEST IF ANY I/O ERROR OCCURRED
         BNO   BUGOTTEN                 NO,GOTO PROCESS THE BASIC UNIT
*
*   TPOST ERB TO RECALL, TPOST BASIC UNITS TO BUFFER RETURN.
*
         MVC   LCBERBQB,LCBRCQCB+1      GET RECALL QCB ADDR
         ST    RPREF,LCBERBLK-1         LINK ERB TO BASIC UNIT
         MVI   LCBERBPY,PRIDSPLB-1      SET RECALL PRIORITY    @YA07902
         LA    R1,LCBERB                POINT ELEMENT POINTER AT ERB
*
RETURNBU EQU   *
         LA    R2,AVTBFRTB              GET ADDR OF BFR RETURN QCB
         ST    R2,PRFQCBA-1             PUT QCB ADDR IN ELEMENT
         MVI   PRFPRI,PRIBFRTB          SET PRIORITY
*
         MVC   PRFLINK,LCBERBCH         LINK BFR CHAIN WITH B.U.
         NC    LCBERBCH,LCBERBCH        ANYTHING IN CHAIN
         BZ    CHAIN                    GO TPOST IF NOTHING IN CHAIN
*
         XC    LCBERBCH,LCBERBCH        CLEAR BFR CHAIN POINTER
*
RDYELEM  EQU   *
         L     RPREF,PRFLINK-1          POINT AT NEXT BFR
         ST    R2,PRFQCBA-1             PUT QCB ADDR IN ELEM
         MVI   PRFPRI,PRIBFRTB          SET TPOST PRIORITY
*
         NC    PRFLINK,PRFLINK          LAST BFR IN CHAIN
         BZ    CHAIN                    YES, GO TPOST
         B     RDYELEM                  CONTINUE MAKING ELEMENTS
*                                       READY TO TPOST
*
***********************************************************************
*
BUGOTTEN EQU   *
*
*   IF ATTENTION HAS BEEN HIT, FREE ALL BASIC UNITS ASSOCIATED
*   WITH THIS REQUEST.
*
         TM    SCBERR3,SCBATTN          TEST IF ATTN HIT
         BO    RETURNBU                 YES, GO RETURN ALL BASIC UNITS
*
         TM    AVTBIT3,AVTTSAB          TEST IF TSO HAS ABENDED  A44839
         BO    TESTRQST                 YES, CHECK FOR INIT      A44839
*                                       REQUEST                  A44839
         BAL   R14,TSBADDR              GOTO GET TSB ADDR
*
         LR    R5,RPREF                 POINT TO NEWEST BASIC UNIT
         B     CHKCHAIN                 GOTO BUILD TCAM BFFR RTN
*
*   WHEN TSO HAS ABENDED, IF IT IS AN INITIAL REQUEST, FREE ALL BASIC
*   UNITS, IF IT IS A PCI REQUEST, TERMINATE SEND OPERATION AND SET
*   UP TO SEND 1 IDLE
*
TESTRQST EQU   *                                                 A44839
         TM    AYOSWTCH,INTLRQ          CHECK FOR INITIAL        A44839
*                                       REQUEST                  A44839
         BO    RETURNBU                 YES, RETURN ALL BASIC    A44839
*                                       UNITS                    A44839
         XC    AYOTSBFF(E4),AYOTSBFF    RESET TS BUFFER POINTER  A44839
         OI    AYOSWTCH,SENDNL          SET TO SEND 1 DUMMY IDLE A44839
*                                       CHAR                     A44839
         B     CHKCHAIN                 GOTO BUILD TCAM BFR RTN  A44839
***********************************************************************
*
*
***********************************************************************
*
POSTR    EQU   *
*
***********************************************************************
*
*   EXIT TO TCAM - DSPPOSTR (SEE TDISPD DSECT)
*
*        AT RETURN REG.3 AND 7 MAY BE DESTROYED
*
***********************************************************************
*
         ST    R2,PRFQCBA-1-IEDQPRF(R1) STORE QCB ADDR
         L     R11,AVTEA                LOAD ADDR OF DISPATCHER
         B     DSPPOSTR                 GOTO DISPATCHER TO POST AND RTN
*
***********************************************************************
*
*
***********************************************************************
*
POST     EQU   *
*
***********************************************************************
*
*   EXIT TO TCAM - DSPPOST (SEE TDISPD DSECT)
*
***********************************************************************
*
         ST    R2,PRFQCBA-1-IEDQPRF(R1) STORE QCB ADDR
         L     R11,AVTEA                LOAD ADDR OF DISPATCHER
         BAL   R14,DSPPOST              GOTO TCAM DSPPOST      @G36XRYP
*
***********************************************************************
*
CHAIN    EQU   *
*
***********************************************************************
*
*   EXIT TO TCAM - DSPCHAIN (SEE TDISPD DSECT)
*
***********************************************************************
*
         L     R11,AVTEA                LOAD ADDR OF DISPATCHER
         BAL   R14,DSPCHAIN             GOTO TCAM DSPCHAIN     @G36XRYP
*
***********************************************************************
*
*
***********************************************************************
*
TSBADDR  EQU   *
*
***********************************************************************
*
*   OBTAIN TSB ADDR IN RTSB & TIOCRPT ADDR IN R10
*
***********************************************************************
*
         L     R10,CVTPTR               LOAD CVT ADDR
         DROP  R10
         USING CVT,R10
         L     R15,CVTASVT              GET ASVT ADDRESS       @G36XRYP
         USING ASVT,R15                 ASVT ADDRESSABILITY    @G36XRYP
         L     R10,CVTAQAVT             GET TCX ADDRESS        @G36XRYP
         DROP  R10                                             @G36XRYP
         USING IEDQTCX,R10              TCX ADDRESSABILITY     @G36XRYP
         L     R10,TCXRPT               GET TIOCRPT ADDRESS    @G36XRYP
         DROP  R10                                             @G36XRYP
         USING TIOCRPT,R10              RPT ADDRESSABILITY     @G26XRYP
         LH    RTSB,QCBTJID             GET ASID               @G36XRYP
         BCTR  RTSB,0                   DECREMENT ASID FOR     @G36XRYP
*                                       ZERO ORIGIN            @G36XRYP
         SLL   RTSB,2                   MULTIPLY BY 4          @G36XRYP
         L     RTSB,ASVTENTY-ASVT(RTSB,R15)  GET ASCB ADDR     @ZM46782
         L     RTSB,ASCBTSB-ASCB(RTSB)  GET TSB ADDRESS        @G36XRYP
         MVC   AYOSRCE,TSBASRCE         SAVE TERMINAL INDEX      M1193
         TM    TSBFLG4,TSBHLDL          HOLD LINE AFTER LOGOFF @OZ32380
         BOR   R14                      BRANCH YES             @OZ32380
         OI    AYOSW2,AYODRPL           DROP LINE              @OZ32380
         BR    R14                      RETURN TO CALLER
*
***********************************************************************
*
*
***********************************************************************
*
*   CONSTANTS
*
***********************************************************************
*
BASE     DC    A(TSOUTPUT)              BASE ADDR OF IEDAYO
*
*   MASKS TO SET INDICATORS FOR CALL TO IEDAYE (OUTPUT EDIT).
*
TSOMSGC  DC    X'80000000'              INDICATES A TSO MESSAGE
TSOASISC DC    X'20000000'              INDICATES ASIS OPTION
TSOCNTLC DC    X'40000000'              INDICATES CONTROL OPTION
*
*
ZEROS    DC    F'0'                     CONSTANT = '0'
AYOPATCH DC    20F'0'                                            S22029
         DS    0F
INVLDTIC DC    X'08000002'              INVALID TIC CCW
*
AUTOMSK  DC    X'01088000',A(AUTOLNNO)  MSGGEN MASK FOR AUTO LINE NO.
ABNDMSK  DC    X'01088000',A(ABENDMSG)  MSGGEN MASK FOR ABEND MSG
MSKOCAB  DC    X'01088000',A(MSGOCAB)   MSGGEN MASK
MSKRNAV  DC    X'01088000',A(MSGRNAV)   MSGGEN MASK
*
X0100    DC    X'0100'                  MSGGEN INDICATOR
*
MSGOCAB  DC    AL1(L'MOCAB+1)           MESSAGE LENGTH
MOCAB    DC    C'IKJ54003I SYSTEM FAILURE - PLEASE LOGON AGAIN'  MSG
         DC    X'15'                    NEW LINE CHARACTER
MSGRNAV  DC    AL1(L'MRNAV+1)           MESSAGE LENGTH
MRNAV    DC    C'IKJ54002I LOGON FAILED - RESOURCES NOT NOW AVAILABLE'
         DC    X'15'                    NEW LINE CHARACTER
AUTOLNNO DC    X'01FF'                  AUTO LINE NO.
ABENDMSG DC    AL1(L'MABEND+1)          MESSAGE LENGTH
MABEND   DC    C'IKJ54001I SYSTEM FAILURE - ALL USERS TERMINATED' MSG
         DC    X'15'                    NEW LINE CHARACTER
*
***********************************************************************
*
         EJECT
         TAVTD
         EJECT
         IKJTIOCB
         EJECT
CVT      DSECT
         CVT
         EJECT
         TTCXD
         EJECT
         DCBD  DSORG=TX
         EJECT
         IHAASCB
         EJECT
         IHAASVT
         EJECT
         TDCTD
         EJECT
         TDISPD
         EJECT                                                  YS6327
         TLGBD                                                  YS6327
         EJECT
         TLCBD
         EJECT
         TPRFD
         EJECT
         TPRIOR
         EJECT
         TQCBD
         EJECT
         TSCBD
         EJECT
         TSTCBD
         EJECT
         IKJTIOCP
         EJECT
         TTNTD
         EJECT
         TTRMD
         EJECT
         IKJTSB
         EJECT
         TTSID
         EJECT
*
*******************************************************************
*
*   TSOUTPUT'S WORK AREA
*
*******************************************************************
AYOWRKL  EQU   24                       LENGTH OF WORK AREA
AYOSWTCH EQU   SCBSRCE                  SWITCHES
*
MSGCHAIN EQU   X'80'                    3270 MSG-CHAIN IN PROG. SA61765
STAUT    EQU   X'40'                    START AUTMOATIC PRMPTING M0141
CHAINEND EQU   X'20'                    3270 MSG-CHAIN ENDED    SA61765
SENDNL   EQU   X'10'                    SEND 'NL' AND 'EOT'
SUBPCI   EQU   X'08'                    SUBSEQUENT PCI REQUEST
INTLRQ   EQU   X'04'                    THIS IS INTIAL REQUEST
INTLPCI  EQU   X'02'                    INITIAL PCI REQUEST
*
AYORC    EQU   SCBSRCE+1                SAVE AREA FOR RETURN    YM2814
*                                       CODE                    YM2814
*
AYOBULEN EQU   SCBSRCE+2                NO. OF BYTES AVAILABLE  YS6327
*                                       IN CURRENT BASIC UNIT   YS6327
*
AYOTSBFF EQU   SCBSRCE+4                ADDR OF LAST TS BUFFER FROM
*                                       WHICH A DATA HAS BEEN MOVED
*
AYOHDRBU EQU   SCBSRCE+8                ADDR OF LAST HDR B.U. IN CHAIN
*
AYOLSTBU EQU   SCBSRCE+12               ADDR OF B.U. IN CHAIN
*
AYOSRCE  EQU   SCBSRCE+16               TERMINAL INDEX
*
AYOSW2    EQU  SCBSRCE+18               SWITCHES               @G36XRYP
AYODRPL  EQU   X'80'                    DROP LINE AFTER LOGOFF @G36XRYP
*
AYONXTCH EQU   SCBSRCE+20               POINTER TO NEXT AVAIL   YS6327
*                                       BYTE IN CURRENT B.U.    YS6327
*
PREFL    EQU   PRFSHDR-IEDQPRF          LENGTH OF BUFFER PREFIX  S22029
*
***********************************************************************
*
         END
