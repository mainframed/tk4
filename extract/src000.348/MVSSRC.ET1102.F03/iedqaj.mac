AJ01     TITLE '''IEDQAJ'' - SKIP TO CHARACTER SET ROUTINE'
IEDQAJ   CSECT
         SPACE 3
*  CHANGE ACTIVITY AS FOLLOWS
******************** MICROFICHE FLAGS *********************** SUPT CODE
*A 508600,509200,556000-592000,615000,637000,763000,779000,841000S22025
*A 847000                                                       S22025
*C 540000,610000,630000,638000,642000,644000,658000-734000      S22025
*C 766000-768000,772000,776000,858000-860000                    S22025
*D 554000-602000,616000,652600-653200,658000,868000-870000      S22025
*D 882000                                                       S22025
*A675200-675800,676200                                          SA55932
*C676000                                                        SA55932
*C675000-676500                                                 SA59187
*C532000,772000,776000                                          SA48255
*A692000                                                        SA61803
*A592000,641000,695000,699000,794000                           @SA73795
*D678000                                                       @SA73795
*A695400                                                       @OY11979
*C610000,656000                                                @OZ14170
*A647000                                                       @OZ14170
*A584000,746000,7958000                                        @OY15007
         SPACE 3
***********************************************************************
*                                                                     *
*TITLE:  'IEDQAJ' - SKIP TO CHARACTER SET ROUTINE                     *
*                                                                     *
*  MODULE NAME = IEDQAJ                                               *
*                                                                     *
*  DESCRIPTIVE NAME = SKIP TO CHARACTER SET ROUTINE                   *
*                                                                     *
*  COPYRIGHT = 'NONE'                                                 *
*                                                                     *
*  STATUS:  CHANGE LEVEL 5                                            *
*                                                                     *
*FUNCTION -- ADVANCES THE SCAN POINTER TO THE END OF A SPECIFIED      *
*   CHARACTER STRING.                                                 *
*                                                                     *
*   THE SCAN POINTER OFFSET FROM THE PREFIX IS PASSED TO THE          *
*   ADDRESS FINDER ROUTINE TO GET ITS ADDRESS AND TO INITIALIZE THE   *
*   CURRENT-UNIT AND END-OF-UNIT REGISTERS.                           *
*                                                                     *
*   NORMAL ENTRY --                                                   *
*   THE ROUTINE LOOPS TO THE BUFFER STEP ROUTINE,  WHICH RETURNS      *
*   THE ADDRESS OF EACH SUBSEQUENT BYTE.  WHEN A NON-BLANK            *
*   CHARACTER IS FOUND,  IT IS INSERTED INTO THE AVT WORK AREA        *
*   (AVTDOUBL) AND A COUNTER OF DATA BYTES ACCESSED IS INCREMENTED    *
*   BY ONE.  THE CHARACTER FOUND IS COMPARED WITH THE FIRST           *
*   CHARACTER OF THE CHARACTER STRING PASSED.  IF THEY ARE EQUAL,     *
*   THE COUNTER IS COMPARED WITH THE LENGTH OF THE CHARACTER STRING   *
*   PASSED.  IF THE COUNT IS THE SAME,  THE CHARACTER STRING HAS      *
*   BEEN FOUND.  THE NORMAL EXIT IS TAKEN.                            *
*                                                                     *
*   IF THE COUNT IS NOT THE SAME,  THE ROUTINE LOOPS TO THE BUFFER    *
*   STEP ROUTINE TO GET THE NEXT DATA BYTE,  WHICH IS INSERTED INTO   *
*   THE AVT WORK AREA,  AND COMPARISON IS AGAIN MADE WITH THE         *
*   CHARACTER STRING PASSED.                                          *
*                                                                     *
*   IF THE CHARACTERS ACCESSED FROM THE BUFFER DO NOT MATCH THE       *
*   CHARACTER STRING PASSED,  THE CONTENTS OF THE AVT WORK AREA ARE   *
*   SUCCESSIVELY SHIFTED LEFT,  DROPPING ONE BYTE AT A TIME,  AND     *
*   COMPARED (TO A SUCCESSIVELY DIMINISHING LENGTH) TO THE            *
*   CHARACTER STRING.  THIS PROCEDURE CONTINUES UNTIL (1) AN EQUAL    *
*   COMPARE IS FOUND OR (2) THE CHARACTERS ACCESSED ARE EXHAUSTED.    *
*   AT THIS POINT THE ROUTINE RESUMES LOOPING TO THE BUFFER STEP      *
*   ROUTINE TO ACCESS THE NEXT DATA BYTE.                             *
*                                                                     *
*   NORMAL EXIT --                                                    *
*   THE ROUTINE RETURNS THE OFFSET TO THE LAST BYTE OF THE            *
*   CHARACTER STRING EITHER IN THE PREFIX SCAN POINTER (PRFSCAN)      *
*   OR IN A REGISTER SPECIFIED.  A RETURN CODE OF ZERO IS SET IN      *
*   REGISTER 15,  EXCEPT WHEN REGISTER 15 IS ITSELF SPECIFIED AS      *
*   THE PARAMETER RETURN REGISTER.  EXIT IS MADE TO THE RETURN        *
*   INTERFACE ROUTINE.                                                *
*                                                                     *
*   IF RETURN FROM THE BUFFER STEP ROUTINE INDICATES THAT THE END     *
*   OF THE BUFFER HAS BEEN PASSED,  THE ROUTINE TESTS IF A            *
*   PARAMETER RETURN REGISTER WAS SPECIFIED.  IF SO,  A RETURN CODE   *
*   OF X'04' IS SET IN REGISTER 15,  UNLESS REGISTER 15 IS ITSELF     *
*   THE PARAMETER RETURN REGISTER SPECIFIED,  IN WHICH CASE IT IS     *
*   SET TO ZERO.  EXIT IS MADE TO THE RETURN INTERFACE ROUTINE.       *
*                                                                     *
*   MULTIPLE BUFFER HEADER EXIT --                                    *
*   IF A PARAMETER RETURN REGISTER WAS NOT SPECIFIED,  THE DATA       *
*   ACCESSED FROM THE BUFFER IS MOVED FROM THE AVT WORK AREA TO THE   *
*   SCB SAVE AREA (SCBMBSSA).  THE PARAMETER LIST ADDRESS IS SAVED    *
*   IN THE SCB MULTIPLE BUFFER HEADER ENTRY FIELD (SCBMBHEN).  THE    *
*   USER'S REGISTERS,  SAVED IN THE AVT,  ARE MOVED TO THE SCB        *
*   REGISTER SAVE AREA (SCBRGSAV).  THE PREFIX SCAN POINTER           *
*   IS UPDATED TO POINT BEYOND THE END OF THE BUFFER.  A NEGATIVE     *
*   RETURN CODE IS SET IN REGISTER 15 AND EXIT IS MADE TO THE         *
*   RETURN INTERFACE ROUTINE.                                         *
*                                                                     *
*   MULTIPLE BUFFER HEADER ENTRY --                                   *
*   THE ROUTINE MAY BE ENTERED DIRECTLY FROM THE START MH ROUTINE     *
*   TO COMPLETE A SKIP INTERRUPTED BY A MULTIPLE BUFFER HEADER        *
*   SITUATION.  THE DATA ACCESSED FROM THE PREVIOUS BUFFER IS MOVED   *
*   BACK FROM THE SCB SAVE AREA TO THE AVT WORK AREA.  THE NUMBER     *
*   OF BYTES FOUND IS CALCULATED AND PROCESSING RESUMES AT THE        *
*   NORMAL ENTRY.                                                     *
*                                                                     *
*ENTRY POINTS --                                                      *
*       'IEDQAJ' TO ADVANCE THE SCAN POINTER TO THE END OF A          *
*   SPECIFIED FIELD.  CALLING SEQUENCE FROM USER INTERFACE IS:        *
*                                                                     *
*        L     R12,AVTMSGS-1            GET ADDR OF VCON TABLE        *
*        IC    R15,AVTEZERO(,R1)        GET INDEX TO ROUTINE ADDR     *
*        L     R12,AVTEZERO(R12,R15)    GET ROUTINE ADDRESS           *
*        BR    R12                      EXIT TO ROUTINE               *
*                                                                     *
*INPUT --                                                             *
*   REGISTER 0 - ENTRY CODE.  ITS VALUE IS X'00' ON INITIAL ENTRY     *
*   AND X'01' ON REENTRY FOR PROCESSING OF MULTIPLE BUFFER HEADERS.   *
*                                                                     *
*   REGISTER 1 - THE ADDRESS OF A PARAMETER LIST BUILT BY THE         *
*   CALLER (EITHER THE SETSCAN MACRO EXPANSION OR A HIGHER LEVEL MH   *
*   ROUTINE).  PARAMETER LIST FORMAT IS:                              *
*                                                                     *
*        *********************************                            *
*        *       * PARAM *  SET  *  REG  *                            *
*        * INDEX *  LIST *  FLAG * OFFST *                            *
*        *       * LNGTH *       *       *                            *
*        *********************************                            *
*        *       *                       *                            *
*        *       *  ADDR OF CHAR STRING  *                            *
*        *       *                       *                            *
*        *********************************                            *
*                                                                     *
*                                                                     *
*   REGISTER 3 - THE ADDRESS OF THE SCB.                              *
*                                                                     *
*   REGISTER 4 - THE ADDRESS OF THE LCB.                              *
*                                                                     *
*   REGISTER 6 - THE ADDRESS OF THE CURRENT BUFFER.                   *
*                                                                     *
*   REGISTER 9 - THE ADDRESS OF THE AVT.                              *
*                                                                     *
*   REGISTER 12 - THE ENTRY POINT ADDRESS AND BASE REGISTER FOR       *
*   THIS ROUTINE.                                                     *
*                                                                     *
*   REGISTER 13 - THE ADDRESS OF THE CALLING ROUTINE'S SAVE AREA.     *
*                                                                     *
*OUTPUT --                                                            *
*   REGISTER 15 - RETURN CODE.  ON SUCCESSFUL COMPLETION,  ITS        *
*   VALUE IS X'00' OR,  IF REGISTER 15 IS SPECIFIED AS THE            *
*   PARAMETER RETURN REGISTER,  THE OFFSET TO THE LAST BYTE OF THE    *
*   CHARACTER STRING.  IF THE SKIP FAILS TO COMPLETE AND A            *
*   PARAMETER RETURN REGISTER IS SPECIFIED,  ITS VALUE IS X'04' OR,   *
*   IF REGISTER 15 IS ITSELF SPECIFIED AS THE PARAMETER RETURN        *
*   REGISTER,  X'00'.  IF THE SKIP FAILS TO COMPLETE AND NO           *
*   PARAMETER RETURN REGISTER WAS SPECIFIED (MULTIPLE BUFFER HEADER   *
*   SITUATION),  ITS VALUE IS NEGATIVE.                               *
*                                                                     *
*   BUFFER PREFIX SCAN POINTER (PRFSCAN) - ON SUCCESSFUL COMPLETION   *
*   WITH NO PARAMETER RETURN REGISTER SPECIFIED,  THE OFFSET IN THE   *
*   BUFFER TO THE LAST BYTE OF THE CHARACTER STRING.  ON A MULTIPLE   *
*   BUFFER HEADER EXIT,  THE OFFSET TO A POINT ONE BYTE BEYOND THE    *
*   END OF DATA IN THE BUFFER.                                        *
*                                                                     *
*   SCB SAVE AREA (SCBMBSSA) - ON A MULTIPLE BUFFER HEADER EXIT,      *
*   THE DATA BYTES FROM THIS BUFFER ON WHICH A SUCCESSFUL COMPARE     *
*   WAS MADE,  PADDED WITH BLANKS (IF NECESSARY TO FILL SCBMBSSA)     *
*   AT THE HIGH-ORDER END.                                            *
*                                                                     *
*   SCB MULTIPLE BUFFER HEADER ENTRY FIELD (SCBMBHEN) - ON A          *
*   MULTIPLE BUFFER HEADER EXIT,  THE ADDRESS OF THE PARAMETER LIST   *
*                                                                     *
*   SCB REGISTER SAVE AREA (SCBRGSAV) (IF DEFINED) - ON A MULTIPLE    *
*   BUFFER HEADER EXIT,  THE USER'S REGISTERS.                        *
*                                                                     *
*EXTERNAL REFERENCES --                                               *
*    ' IEDQAX - SCAN BUFFER ROUTINE TO FIND CHARS AND PUT IN AVTDOUBL *
*                                                                     *
*   AVT - ADDRESS VECTOR TABLE.                                       *
*                                                                     *
*   SCB - STATION CONTROL BLOCK FOR CURRENT STATION.                  *
*                                                                     *
*   BUFFER CURRENTLY BEING PROCESSED.                                 *
*                                                                     *
*EXITS, NORMAL -- THE CHARACTER STRING IS FOUND IN THE BUFFER.  NO    *
*   PARAMETER RETURN REGISTER IS SPECIFIED.  THE OFFSET IN THE        *
*   BUFFER TO THE LAST BYTE OF THE CHARACTER STRING IS STORED IN      *
*   THE BUFFER PREFIX SCAN POINTER (PRFSCAN).  REGISTER 15 CONTAINS   *
*   A RETURN CODE OF X'00'.                                           *
*                                                                     *
*   THE CHARACTER STRING IS FOUND IN THE BUFFER.  A PARAMETER         *
*   RETURN REGISTER IS SPECIFIED.  THE OFFSET IN THE BUFFER TO THE    *
*   LAST BYTE OF THE CHARACTER STRING IS RETURNED IN THE REGISTER     *
*   SPECIFIED.  REGISTER 15 CONTAINS A RETURN CODE OF X'00'.          *
*                                                                     *
*   THE CHARACTER STRING IS FOUND IN THE BUFFER.  REGISTER 15 IS      *
*   SPECIFIED AS THE PARAMETER RETURN REGISTER.  THE OFFSET IN THE    *
*   BUFFER TO THE LAST BYTE OF THE CHARACTER STRING IS RETURNED IN    *
*   REGISTER 15.                                                      *
*                                                                     *
*EXITS,  ERROR -- THE CHARACTER STRING IS NOT FOUND IN THE BUFFER.    *
*   NO PARAMETER RETURN REGISTER IS SPECIFIED.  THE SCB SAVE AREA     *
*   (SCBMBSSA) CONTAINS EITHER BLANKS OR DATA BYTES ACCESSED FROM     *
*   THE BUFFER THAT MATCH PART OF THE LENGTH OF THE CHARACTER         *
*   STRING PASSED.  THE SCB MULTIPLE BUFFER HEADER ENTRY FIELD        *
*   (SCBMBHEN) CONTAINS THE ADDRESS OF THE PARAMETER LIST.  THE SCB   *
*   REGISTER SAVE AREA (SCBRGSAV),  IF DEFINED,  CONTAINS THE         *
*   CALLER'S REGISTERS.  THE PREFIX SCAN POINTER (PRFSCAN) POINTS     *
*   ONE BYTE BEYOND THE END OF DATA IN THE BUFFER.  REGISTER 15       *
*   CONTAINS A NEGATIVE RETURN CODE.                                  *
*                                                                     *
*   THE CHARACTER STRING IS NOT FOUND IN THE BUFFER.  A PARAMETER     *
*   RETURN REGISTER IS SPECIFIED.  REGISTER 15 CONTAINS A RETURN      *
*   CODE OF X'04'.                                                    *
*                                                                     *
*   THE CHARACTER STRING IS NOT FOUND IN THE BUFFER.  REGISTER 15     *
*   IS SPECIFIED AS THE PARAMETER RETURN REGISTER.  REGISTER 15       *
*   CONTAINS A RETURN CODE OF X'00'.                                  *
*                                                                     *
*TABLES/WORK AREAS -- N/A.                                            *
*                                                                     *
*ATTRIBUTES -- SERIALLY REUSABLE, REFRESHABLE, ENABLED, RESIDENT,     *
*   PROBLEM PROGRAM MODE.
*                                                                     *
*NOTES -- THE OPERATION OF THIS MODULE DOES NOT DEPEND UPON AN        *
*   INTERNAL REPRESENTATION OF THE EXTERNAL CHARACTER SET.            *
*                                                                     *
***********************************************************************
         EJECT
********* REGISTER EQUATES *********
         SPACE
R0       EQU   0                        WORK REGISTER
         SPACE
R1       EQU   1                        PARAMETER LIST REGISTER
         SPACE
RWORK2   EQU   2                        WORK REGISTER
RBLANK2  EQU   2                        BLANK COMPARE REGISTER
         SPACE
RSCB     EQU   3                        SCB ADDRESS
         SPACE
RUNIT    EQU   4                         ADDR OF CURRENT UNIT
        SPACE
RSCAN    EQU   5                        ADDR OF SCAN POINTER
         SPACE
RPREFIX  EQU   6                        ADDR OF BUFFER
         SPACE
RSCANOFF EQU   7                        OFFSET TO SCAN POINTER
         SPACE
RCHAR8   EQU   8                        CHARACTER SET ADDRESS
         SPACE
RAVT     EQU   9                        ADDRESS OF AVT
         SPACE
RCOMP     EQU  10                       COMPARE REGISTER
         SPACE
REOUAD   EQU   11                       ADDR OF END OF CURRENT UNIT
         SPACE
RBASE    EQU   12                       BASE REGISTER
         SPACE
R13      EQU   13                       ADDR OF SAVE AREA
R14      EQU   14                       RETURN REGISTER
R15      EQU   15                       RETURN CODE REGISTER
         SPACE
********* OTHER EQUATES *********
         SPACE
ONE      EQU   1                        MOVE LENGTH OF ONE
TWO      EQU   2                        LENGTH OF A HALFWORD
FOUR     EQU   4                        LENGTH OF A FULLWORD
SEVEN    EQU   7                        MOVE LENGTH OF SEVEN
TWENTY4  EQU   24                       SHIFT LENGTH FOR COUNT   S22025
         SPACE
PARMLEN  EQU   1                        PARAMETER LIST LENGTH
SETFLAG  EQU   2                        OFFSET TO SET FLAG
REGOFF   EQU   3                        OFFSET TO REGISTER OFFSET
PARMBLNK EQU   4                        BLANK CHARACTER
LBALR    EQU   6                        LNG OF LOAD + BALR
         SPACE
REG14OFF EQU   12                       OFFSET TO REG 14
REG15OFF EQU   16                       OFFSET TO REG 15 IN SAVEAREA
         SPACE
SETSCAN  EQU   X'01'                    SETSCAN ENTRY FLAG
PREVSAVE EQU   4                        PREVIOUS SAVE AREA ADDR  S22025
NEXTSAVE EQU   8                        NEXT SAVE AREA ADDRESS   S22025
NOBLANKN EQU   X'02'                    'NO BLANK' FLAG
         SPACE
CLERZONE EQU   X'0F'                    MASK TO CLEAR BYTES-FOUND
         EJECT
         USING IEDQPRF,RPREFIX
         USING IEDQAVTD,RAVT
         USING IEDQSCB,RSCB
         USING IEDQLCB,RUNIT                                     S22025
         USING IEDQAJ,RBASE
         SPACE
IEDQAJ01 EQU   *
IEDQAJ   IEDHJN  IDPASS
         LR    RCHAR8,R1                SAVE PARM ADDRESS        S22025
         CLC   PRFSCAN,PRFSIZE          RUNOUT FROM PREVIOUS MACRO
         BNH   MULTBUFN                 NO, ENTER SCAN ROUTINE   S22025
         SPACE
         CLI   SETFLAG(R1),AVTEZERO     IS RETURN IN REG REQUESTED
         BNE   MINUS4                   YES, RETURN CODE = -4
         SPACE
         B     INITMBH                  NO, GO SELECT RETURN
         SPACE
         SPACE
*                                                                     *
* IF SCBMBHEN DOES NOT POINT TO DUMMY END (X'0100'), THIS IS   * S22025
* A CONTINUATION OF A CHARACTER SCAN BEGUN IN THE PREVIOUS     * S22025
* BUFFER.  RESET FIELDS AND REGISTERS AS ON ORIGINAL ENTRY     * S22025
*                                                              * S22025
         SPACE
MULTBUFN EQU   *                                                 S22025
         CLI   PARMLEN(R1),FOUR         IS THIS LOCATE LAST    @OY15007
         BE    LOCLAST                  BRANCH YES             @OY15007
         SR    R0,R0                    CLEAR FOR INSERT         S22025
         L     R1,FOUR(,R1)             LOAD CHAR STRING ADDR    S22025
         LA    RCOMP,RETCHK             SET BRNCH REG AND SCAN @SA73795
         L     R15,AVTAX                  ROUTINE FOR NORMAL   @SA73795
         SPACE
         L     R14,SCBMBHEN-1           GET POINTER FROM MBH FIELD
         CLC   AVTINOUT,AVTEZERO(R14)   DOES IT POINT TO X'0100'
         BE    PRELOOP                  YES,SET UP FOR MAINLOOP@OZ14170
*                                       NO, IT IS MBH ENTRY,
         LR    RWORK2,R13               SAVE CONTENTS OF R13     S22025
         LA    R13,AVTSAVE2             LOAD MH REGS ADDRESS     S22025
         LA    R14,AVTINOUT             GET ADDR OF DUMMY INEND-
         IC    R0,SCBMBHEN-1              OUTEND PARM LIST AND
         ST    R14,SCBMBHEN-1             SET IT INTO SCB
         STC   R0,SCBMBHEN-1
         EX    AVTEZERO,AVTEXS2A        MOVE SAVED REGS TO AVT
         SPACE
         SR    R14,R14                  INITIALIZE REGISTER      S22025
         IC    R14,PARMLEN(,RCHAR8)     PICK UP PARM LIST LNG    S22025
         LA    R14,LBALR(R14,RCHAR8)    ADD TO RETURN ADDRESS    S22025
         ST    R14,REG14OFF(,R13)       SET AS RETURN ADDRESS
         LR    R13,RWORK2               RESTORE CONTENTS OF R13  S22025
         SR    RWORK2,RWORK2            INITIALIZE REGISTER      S22025
         IC    RWORK2,SCBDESTL          PICK UP PREV BYTES FOUND S22025
         SRA   RWORK2,FOUR              SHIFT TO ALIGN COUNT     S22025
         LTR   RWORK2,RWORK2            ANY PREVIOUS COUNT     @SA73795
         BZ    LOOP                     PROCEED NORMALLY IF NO @SA73795
         SPACE
* SET BRANCH REG TO RESCAN BUFFER IF NO MATCH AT SCAN POINTER *@SA73795
* AND R15 TO ADDRESS OF SUBROUTINE TO SWITCH PARMS FOR IEDQAL *@SA73795
         LA    RCOMP,MULTBUFN           SET BRANCH REGS FOR A  @SA73795
         LA    R15,ALPARMS                CONTINUATION SCAN    @SA73795
         SPACE
         SR    RSCAN,RSCAN              INITIALIZE REGISTER      S22025
         IC    RSCAN,0(,R1)             GET CHAR COUNT           S22025
         SR    RSCAN,RWORK2             SUBT NO BUTES FOUND      S22025
         LA    R1,ONE(RWORK2,R1)        BUMP TO NEXT CHAR        S22025
         LR    R0,RSCAN                 LOAD REMAINING COUNT     S22025
         SLL   R0,TWENTY4               SHIFT FOR SCAN ROUTINE   S22025
         B     LOOP                     PROCEED NORMALLY       @OZ14170
         EJECT
PRELOOP  EQU   *                                               @OZ14170
         NI    SCBDESTL,CLERZONE        RESET FIELD TO ZERO    @OZ14170
LOOP     EQU   *                                               @OZ14170
         SPACE
*                                                              * S22025
* INITIALIZE PARAMETERS FOR BUFFER SCAN SUBROUTINE             * S22025
* R0 - HIGH BYTE LENGHT OF CHAR STRING / LOW TWO BYTES OFFSET *  S22025
* R1 - ADDRESS OF CHARACTER STRING                             * S22025
* R2 - BLANK CHARACTER OR NEGATIVE                            *  S22025
*                                                              * S22025
         SPACE
         SR    RBLANK2,RBLANK2          INITILIAZE REGISTER      S22025
         IC    RBLANK2,PARMBLNK(,RCHAR8) INSERT BLANK CHARACTER  S22025
         SPACE
         TM    AVTEZERO(RCHAR8),NOBLANKN ARE BLANKS BYPASSED     S22025
         BNO   LINKSCAN                 NO, BRANCH TO LINK SCAN  S22025
         SPACE
         LNR   RBLANK2,RBASE            YES, INSURE R2 NEG       S22025
         SPACE
LINKSCAN EQU   *                                                 S22025
         SR    RSCANOFF,RSCANOFF        INITIALIZE REGISTER      S22025
         LH    RSCANOFF,TWENTY4(,RPREFIX)  LOAD SCAN PTR        SA59187
         ALR   R0,RSCANOFF              ADD OFFSET TO R0         S22025
         BALR  R14,R15                  LINK TO SCAN ROUTINE     S22025
         SPACE
*                                                              * S22025
* RETURN FROM AX - BUFFER SCAN                                 * S22025
* R15 - NUMBER OF CHARACTERS FOUND                             * S22025
* R0 - SCAN POINTER OFFSET TO LAST CHARACTER FOUND             * S22025
* R1 - CORE ADDRESS OF LAST CHARACTER FOUND                    * S22025
* AVTDOUBL - ACTUAL CHARS FOUND EXCLUDING BLANKS               * S22025
*                                                              * S22025
         SPACE
         LR    RSCAN,R1                 SET ADDRESS OF SCAN PTR  S22025
         LR    R1,RCHAR8                RESTORE PARAMETER ADDR   S22025
         LR    RSCANOFF,R0              SET SCAN PTR OFFSET      S22025
         L     RCHAR8,FOUR(,R1)         GET ADDR OF CHAR STRING  S22025
         SR    R0,R0                    CLEAR FOR CHAR FOUND CT SA61803
         IC    R0,SCBDESTL              PICK UP NO OF PREV FOUND S22025
         SRA   R0,FOUR                  ALIGN FOR ADDING         S22025
         AR    R15,R0                   ADD TO COUNT JUST FOUND  S22025
         NI    SCBDESTL,CLERZONE        RESET FIELD TO ZERO      S22025
         SPACE
         EX    R15,CLIX                 ENTIRE STRING FOUND      S22025
         BE    GOODRTN                  YES, SET RETURN CODE     S22025
         SPACE
* BRANCH TO RETCHK IF NORMAL OR MULTBUFN IF CONTINUATION      *@SA73795
         LR    RCHAR8,R1                RESTORE PARAMETER ADDR @OY11979
         BR    RCOMP                    PROCEED                @SA73795
         SPACE
*                                                              * S22025
* PARTIAL STRING FOUND - SET SCB FOR RE-ENTRY ON NEXT BUFFER   * S22025
*                                                              * S22025
RETCHK   EQU   *                                               @SA73795
         SPACE
         CLI   SETFLAG(R1),AVTEZERO     IS RETURN IN REG REQUESTED
         BNE   MBHPROC                  NO, PROCEED
*                                       YES, THIS IS AN ERROR
INITMBH  EQU   *
         CLI   REGOFF(R1),REG15OFF      IS RETURN REG 15
         BE    ZERORTN                  YES, SET IT TO ZERO
         CLI   PARMLEN(R1),FOUR         IS THIS LOCATE LAST    @OY15007
         BE    MINUS4                   BRANCH YES             @OY15007
         SPACE
         LA    R15,AVTECD4              NO, SET ERROR RTN CODE
         B     RETURN                     AND EXIT
         SPACE
MBHPROC  EQU   *
         TM    PRFSTAT1,PRFNLSTN        IS IT LAST BUFFER
         BNO   BADRTN                   YES, BYPASS MBH PROCESSING
         SPACE
         LR    RWORK2,R13               SAVE CONTENTS OF R13     S22025
         LA    R13,AVTSAVE2             LOAD MH REGS ADDRESS     S22025
         SLL   R15,FOUR                 ALIGN COUNT TO SAVE      S22025
         EX    R15,OIX                  SET CORRECT BITS         S22025
         LA    R1,ONE(,R1)              SET MBH-ENTRY BIT
         IC    R0,SCBSNDCT              SAVE HIGH ORDER BYTE     A48255
         ST    R1,SCBMBHEN-1            SAVE PARAM LIST ADDR IN SCB
         STC   R0,SCBSNDCT              RESTORE HIGH ORDER BYTE  A48255
         EX    AVTEZERO,AVTEXA2S        MOVE REGS FROM AVT TO SCB
         LR    R13,RWORK2               RESTORE CONTENTS OF R13  S22025
         SPACE
BADRTN   EQU   *
         LA    RSCANOFF,ONE(RSCANOFF)   BUMP FOR OUT-OF-BFR
         STH   RSCANOFF,PRFSCAN         STORE OFFSET IN PFX SCAN PT
         SPACE
MINUS4   EQU   *
         LA    R15,AVTECD4              SET MULT BUFFER HEADER
         LNR   R15,R15                    RETURN CODE
         B     RETURN                   RETURN TO CALLER
         SPACE 2
* THIS ROUTINE WILL SWITCH PARAMETER REGS 0 AND 1 FOR IEDQAL  *@SA73795
ALPARMS  EQU   *                                               @SA73795
         LR    R15,R1                   SAVE ADDR OF STRING    @SA73795
         LR    R1,R0                    SWITCH COUNT AND SCAN  @SA73795
*                                         OFFSET TO R1         @SA73795
         LR    R0,R15                   CHAR STRING ADDR TO R0 @SA73795
         L     R15,AVTAL                ADDRESS OF IEDQAL      @SA73795
         BR    R15                      BRANCH TO QAL          @SA73795
*  THIS ROUTINE WILL LOCATE THE LAST CHAR OF A MSG AND EITHER  @OY15007
*  UPDATE THE SCAN POINTER OR RETURN THE CORE ADDRESS          @OY15007
LOCLAST  EQU   *                                               @OY15007
         TM    PRFSTAT1,PRFNLSTN        LAST BUFFER            @OY15007
         BO    MINUS4                   RETURN IF NOT          @OY15007
         LH    RWORK2,PRFSIZE           SIZE OF DATA IN BUFFER @OY15007
         LR    RCHAR8,RPREFIX           PICKUP BUFFER ADDR     @OY15007
CHECK    EQU   *                                               @OY15007
         CH    RWORK2,AVTKEYLE          IS LAST CHAR THIS UNIT @OY15007
         BNH   GETADDR                  BRANCH IF YES          @OY15007
         SH    RWORK2,AVTKEYLE          SUBTRACT UNIT SIZE     @OY15007
         L     RCHAR8,PRFTIC-IEDQPRF(,RCHAR8) UNIT ADDRESS     @OY15007
         B     CHECK                    CHECK FOR LAST         @OY15007
GETADDR  EQU   *                                               @OY15007
         LA    RSCAN,AVTUMALN-ONE(RWORK2,RCHAR8) LAST CHAR ADDR@OY15007
         CLI   SETFLAG(R1),AVTEZERO     RETURN ADDR IN REG?    @OY15007
         BE    TESTREG                  BRANCH YES             @OY15007
         BCTR  RWORK2,AVTEZERO          PRFSIZE MINUS ONE      @OY15007
         STH   RWORK2,PRFSCAN           UPDATE SCAN POINTER    @OY15007
         B     ZERORTN                  RETURN TO CALLER       @OY15007
         EJECT
GOODRTN  EQU   *
         CLI   SETFLAG(R1),AVTEZERO     IS RETURN IN REG REQUESTED
         BE    REGRTN                   YES, GO PROCESS
         SPACE
         STH   RSCANOFF,PRFSCAN         STORE OFFSET IN PFX SCAN PT
         B     ZERORTN                  GO SET ZERO RETURN CODE
         SPACE
REGRTN   EQU   *
         TM    AVTEZERO(R1),SETSCAN     IS ENTRY FROM SETSCAN MACRO
         BO    TESTREG                  YES, GO SELECT WHICH REG
         SPACE
         LR    R15,RSCANOFF             SET OFFSET IN REG 15
         B     RETURN                   RETURN TO CALLER
         SPACE
TESTREG  EQU   *
         CLI   REGOFF(R1),REG15OFF      IS RETURN REQ IN REG 15
         BNE   SETSAVE                  NO, GO SET ADDR IN SAVEAREA
         SPACE
         LR    R15,RSCAN                YES, PASS ADDRESS IN REG 15
         B     RETURN                   RETURN TO MH
         SPACE
SETSAVE  EQU   *
         L     R13,PREVSAVE(R13)        POINT TO PREV SAVE AREA  S22025
         SR    RWORK2,RWORK2            CLEAR FOR INSERT
         IC    RWORK2,REGOFF(,R1)       INSERT REGISTER OFFSET
         ST    RSCAN,AVTEZERO(RWORK2,R13) STORE ADDR IN SAVE AREA
         L     R13,NEXTSAVE(R13)        CURRENT SAVE AREA        S22025
         SPACE
ZERORTN  EQU   *
         SR    R15,R15                  SET GOOD RETURN CODE
         SPACE
RETURN   EQU   *
         L     RBASE,AVTUI              GET RET INTERFACE ADDR   S22025
         B     FOUR(RBASE)              BRANCH TO RETURN ROUTINE S22025
         SPACE 3
********* EXECUTED INSTRUCTIONS *********
         SPACE
         SPACE
CLIX     CLI   AVTEZERO(RCHAR8),AVTEZERO COMPARE COUNT OF MATCHING
*                                         CHARS WITH COUNT OF
*                                         PASSED CHARS
         SPACE
         SPACE
OIX      OI    SCBDESTL,AVTEZERO        SAVE SCB BYTES-FOUND COUNT
         EJECT
********* DSECTS *********
         SPACE
         TAVTD
         TPRFD
         TLCBD
         TSCBD
         PRINT GEN
         END
