         TITLE ' IEDQOT01 - TCAM RESOURCE TERMINATION MANAGER '
IEDQOT01 CSECT
*A-000000-999999                                               @Y02X6B0
         SPACE 3
*  CHANGE ACTIVITY AS FOLLOWS
******************** MICROFICHE FLAGS *********************** SUPT CODE
*A596000,612000                                                 SA51771
*D548000-572000,576000-596000,597800,600000-612000               Y01004
*A572000,5984000                                                SA62368
*C304000                                                        SA62368
*D308000-316000,598400-599000,614000-668000,676000-692000       SA62368
*C292000-304000,597200                                           Y05330
*D060000-068000,232000-236000,244000,268000,7599600-672000,      Y05330
*D708000-712000,724000-732000                                    Y05330
*A778100                                                       @Z30AABG
*C418802                                                       @Z30AABG
*D761600                                                       @Z30AABG
*D345676                                                       @ZA02643
*C344160,344004-344616,345000-345336,345363-345372,345393      @ZA02601
*D287000,346395,346480-346780                                  @ZA02601
*A340000,344622,344760-344770,345480,547802,574000             @ZA02601
*C345417-345423,345503-345676,345710-345750,345860             @ZA02601
*C346170-346200,346340-346365,346450-346455                    @ZA02601
*C424802,587000,590000,602000,605000,607112-607126             @ZA02601
*C607450-607750,618000,626300-626600,628640-628992             @ZA02601
*A614000,758000,777000,788000,791200                           @ZA02601
*C637090-670000                                                @ZA02601
*C345315-345370                                                @ZA03055
*A346160                                                       @ZA04027
*C649090                                                       @ZA04027
*A547802,759500,778200,798000                                  @Z40X9BG
*C038000,346460,424802,593000                                  @Z40X9BG
*C346345-346390                                                @Z40X9BG
*D345427,345432                                                @ZA07067
*D345365-345367                                                @ZA07078
*A345370                                                       @ZA07078
*A345452,345480                                                @ZA07083
*C607550-607600                                                @OZ08086
*C670690                                                       @OZ07798
*A344180                                                       @OZ07816
*C344780-344820                                                @OZ07816
*D345048-345056,614300-614600                                  @OZ07816
*C758500                                                       @OZ09293
*C345437-345452                                                @OZ08374
*C346377                                                       @OZ08384
*A676290                                                       @OZ16542
*C656290                                                       @OZ17630
*A651490,652290,655490,656690,778100                           @OZ17630
*C346680                                                       @G36XRBB
*A541862                                                       @G36XRBB
*                                       PEWA DSECT CHG         @OZ27843
*A554102                                                       @OZ26963
*C554102-554312                                                @OZ29317
*A652690                                                       @OZ32424
*C543122                                                       @OZ33173
         SPACE 3
************************START OF SPECFICATIONS*************************
*                                                                     *
*                                                                     *
* MODULE NAME = IEDQOT01                                              *
*                                                                     *
* DESCRIPTIVE NAME = RESOURCE TERMINATION MANAGER (RTM)               *
*                                                                     *
* COPYRIGHT = NONE                                                    *
*                                                                     *
* STATUS = LEVEL 9                                             @Z40X9BG
*                                                                     *
* FUNCTION = CLEAN UP TCAM RESOURCES                                  *
*                                                                     *
* NOTES = SEE BELOW                                                   *
*                                                                     *
*    DEPENDENCIES = NONE                                              *
*                                                                     *
*    RESTRICTIONS = NONE                                              *
*                                                                     *
*    REGISTER CONVENTIONS = R2  BRANCH AND LINK REGISTER              *
*                           R3  POINTER TO CVT                        *
*                           R5  POINTER TO RTM WORK AREA              *
*                           R6  POINTER TO TCX                        *
*                           R7  ADDRESS SPACE ID REGISTER             *
*                           R8  POINTER TO RMPL                       *
*                           R9  BASE REGISTER                         *
*                           R10 POINTER TO PEB                        *
*                           R11 POINTER TO AIB                        *
*                           R12 POINTER TO PEWA                       *
*                           R13 SAVE AREA POINTER                     *
*                                                                     *
*    PATCH LABEL = PATCH                                              *
*                                                                     *
* MODULE TYPE = PROCEDURE                                             *
*                                                                     *
*    PROCESSOR = ASSEMBLER XF                                         *
*                                                                     *
*    ATTRIBUTES = REENTRANT, SUPERVISOR STATE, KEY 0                  *
*                                                                     *
* ENTRY POINT = IEDQOT01                                              *
*                                                                     *
*    PURPOSE = SEE FUNCTION                                           *
*                                                                     *
*    LINKAGE = CONTROL PASSED TO THIS MODULE FROM IGC0001C VIA        *
*              A CALL MACRO                                           *
*                                                                     *
* INPUT = R1  LOADED WITH THE PARAMETER LIST ADDRESS                  *
*         R13 POINTS TO STANDARD SAVE AREA                            *
*         R14 CONTAINS RETURN ADDRESS                                 *
*         R15 CONTAINS ENTRY POINT OF THIS MODULE                     *
*                                                                     *
* OUTPUT = NONE                                                       *
*                                                                     *
* EXIT-NORMAL = RETURN TO IGC0001C VIA RETURN MACRO WITH R15 = 0      *
*                                                                     *
* EXIT-ERROR = NONE                                                   *
*                                                                     *
* EXTERNAL REFERENCES = SEE BELOW                                     *
*                                                                     *
*    ROUTINES = NONE                                                  *
*                                                                     *
*    DATA AREAS = RESOURCE MANAGER WORK AREA ADDRESSED BY             *
*                 RMPLRMWA.                                           *
*                                                                     *
*    CONTROL BLOCKS = AIB (APPLICATION INTERFACE BLOCK)               *
*                     AVT (TCAM'S ADDRESS VECTOR TABLE)               *
*                     CVT                                             *
*                     PEB (PROCESS EXTENSION BLOCK)                   *
*                     PEWA (PROCESS ENTRY WORK AREA)                  *
*                     PSA (PREFIXED SAVE AREA)                        *
*                     RECB (RESOURCE ELEMENT CONTROL BLOCK)           *
*                     RMPL (RESOURCE MANGER PARAMETER LIST)           *
*                     TCX (TCAM CVT EXTENSION)                        *
*                                                                     *
* TABLES = NONE                                                       *
*                                                                     *
* MACROS = CALLRTM                                                    *
*          FREEMAIN                                                   *
*          GETMAIN                                                    *
*          IOSGEN                                                     *
*          MODESET                                                    *
*          SETLOCK                                                    *
*          TCABEND                                                    *
*                                                                     *
* CHANGE ACTIVITY = NONE                                              *
*                                                                     *
*************************END OF SPECIFICATIONS*************************
         EJECT
*        REGISTER USAGE
*
RZERO    EQU   0                        WORK REGISTER            Y02027
RONE     EQU   1                        WORK REGISTER            Y02027
RBRANCH  EQU   2                        BRANCH REGISTER          Y02027
RCVT     EQU   3                        CVT DSECT BASE REGISTER
RPEBF    EQU   4                        POINTER TO PEB PRECEDING Y02027
*                                       THE CURRENT PEB          Y02027
RRTMWA   EQU   5                        POINTER TO RTM WORK AREA Y02027
RTCX     EQU   6                        THE TCX BASE REGISTER    Y02027
RASID    EQU   7                        ADDRESS SPACE ID REG     Y02027
RUCB     EQU   7                        UCB REGISTER             Y02027
RRMPL    EQU   8                        ADDR OF RESOURCE MANAGER Y02027
*                                       PARAMETER LIST           Y02027
RBASE    EQU   9                        IEDQOT01 BASE REGISTER   Y02027
RPEB     EQU   10                       PROCESS ENTRY BLOCK ADDR Y02027
RAIB     EQU   11                       AIB BASE REGISTER        Y02027
RTCB     EQU   11                       TCB BASE REGISTER        Y02027
RLOOKUP  EQU   11                       UCB LOOKUP TABLE POINTER Y02027
RUCBEXT  EQU   12                       UCB EXTENSION            Y02027
RPEWA    EQU   12                       BASE REG FOR PEWA        Y02027
RSAVE    EQU   13                       SAVE AREA POINTER        Y02027
RRECB    EQU   14                       RECB BASE REGISTER       Y02027
R15      EQU   15                       REGISTER 15              Y02027
         SPACE 3
*        REGISTER EQUATES USED ONLY FOR CROSS MEMORY POST        Y02027
         SPACE 1
RPOST9   EQU   9                        REG SAVE AREA FOR POST   Y02027
RPOST10  EQU   10                       COMPLETION CODE          Y02027
RPOST11  EQU   11                       ECB ADDRESS              Y02027
RPOST12  EQU   12                       ERRET ENTRY POINT        Y02027
RPOST13  EQU   13                       ASCB ADDRESS             Y02027
RPOST14  EQU   14                       RETURN ADDRESS           Y02027
RPOST15  EQU   15                       POST ENTRY POINT         Y02027
         SPACE 2
*
         USING CVT,RCVT                 CVT DSECT
         USING RTMWA,RRTMWA             WORK AREA DSECT          Y02027
         USING IEDQPEB,RPEB             PROCESS ENTRY BLOCK ADDR Y02027
         USING RMPL,RRMPL               RECOVERY PARAMETER LIST  Y02027
         USING IEDQTCX,RTCX             TCX DSECT                Y02027
         USING IEDQPEWA,RPEWA           PROCESS ENTRY WORK AREA  Y02027
         USING IEDQAIB,RAIB             AIB DSECT                Y02027
         EJECT
***************************************************************  Y02027
*                                                             *  Y02027
*        SET UP BASE REGISTER AND PARAMETER LIST              *  Y02027
*        ADDRESSABILITY                                       *  Y02027
*                                                             *  Y02027
***************************************************************  Y02027
         SAVE  (14,12)                  SAVE THE CALLER'S REGS   Y02027
         SPACE 2
         LR    RBASE,R15                SET BASE REGISTER        Y02027
         USING IEDQOT01,RBASE           ADDRESSABILITY           Y02027
         SPACE 2
IEDQOT01 IEDHJN START                   SET DATE                 Y02027
         SPACE 2
         L     RRMPL,ZERO(RONE)         LOAD THE PARAMETER LIST  Y02027
*                                       ADDRESS                  Y02027
         L     RRTMWA,RMPLRMWA          GET ADDR OF RTM WORK AREAY02027
         ST    RSAVE,SAVE13             SAVE CALLER'S REG 13 IN  Y02027
*                                       WORK AREA                Y02027
         SR    RCVT,RCVT                CLEAR FOR STORE        @ZA02601
         ST    RCVT,PTRSA               CLEAR SAVE AREA POINTER@ZA02601
         L     RCVT,CVTPTR              LOAD THE CVT ADDRESS
         EJECT
***************************************************************  Y02027
*                                                             *  Y02027
*        IF TCAM IS NOT IN THE SYSTEM, THEN SKIP IEDQOT01     *  Y02027
*                                                             *  Y02027
***************************************************************  Y02027
         ICM   RTCX,ADDR,CVTAQAVT+ONE   GET TCX ADDRESS          Y02027
         BZ    RETURN1                  IF TCX ADDR IS 0, THEN @ZA02601
*                                       BRANCH                   Y02027
         BAL   RBRANCH,GETSA            GET SAVE AREA          @OZ07816
         BAL   RBRANCH,LOCK             GET LOCAL & CMS LOCK   @OZ07816
         CLM   RTCX,ADDR,CVTAQAVT+ONE   TCX STILL VALID        @OZ07816
         BNE   RETURN                   NO, RETURN             @OZ07816
         SPACE 3                                                 Y02027
***************************************************************  Y02027
*                                                             *  Y02027
*        DETERMINE IF THE TERMINATING TASK OR MEMORY IS TCAM  *  Y02027
*                                                             *  Y02027
***************************************************************  Y02027
         TM    RMPLFLG1,RMPLTERM        IS THIS A MEMORY         Y02027
*                                         TERMINATION            Y02027
         BO    TASKTEST                 YES, BRANCH              Y02027
         CLC   RMPLTCBA+ONE(L3),TCXTCB+ONE DOES TCAM'S TCB ADDR  Y02027
*                                       MATCH THAT OF THE        Y02027
*                                       TERMINATING TASK         Y02027
         BNE   PROCTERM                 NO, BRANCH               Y02027
TASKTEST EQU   *                                                 Y02027
         CLC   RMPLASCB+ONE(L3),TCXASCB+ONE DOES TCAM'S ASCB ADDRY02027
*                                       MATCH THAT OF THE        Y02027
*                                       TERMINATING MEMORY OR    Y02027
*                                       THE MEMORY OF THE        Y02027
*                                       TERMINATING TASK         Y02027
         BNE   PROCTERM                 NO, BRANCH               Y02027
         SPACE 2
***************************************************************  Y02027
*                                                             *  Y02027
*        CHECK TCXRTM. IF THE FLAG IS SET, THEN IEDQOT01 HAS  *  Y02027
*        ALREADY BEEN CALLED FOR TCAM MCP TERMINATION  --     *  Y02027
*        RETURN TO CALLER. IF TCXRTM IS NOT SET, CONTINUE.    *  Y02027
*                                                             *  Y02027
***************************************************************  Y02027
         OI    TCXFLAG1,TCXMCPCD        INDICATE THAT TCAM IS  @ZA02601
*                                       TERMINATING AND THAT     Y02027
*                                       RTM HAS BEEN CALLED      Y02027
         OI    TCXFLAG1,TCXMCPCD        AGAIN FOR MP           @ZA02601
         EJECT
***************************************************************  Y02027
*                                                             *  Y02027
*        ISSUE TCABEND IF TSO IS ACTIVE                       *  Y02027
*                                                             *  Y02027
***************************************************************  Y02027
         ICM   RONE,ALL,TCXRPT          IS TSO ACTIVE            Y02027
         BZ    CHKPEB                   NO, BRANCH               Y02027
         TM    TCXFLAG1,TCXRTM          RECURRSION ON MCP ABEND@ZA02601
         BO    CHKPEB                   YES, BRANCH            @ZA02601
         BAL   RBRANCH,UNLOCK           RELEASE LOCKS          @OZ07816
         TCABEND ,                      ABEND TSO                Y02027
         BAL   RBRANCH,GETSA            GET SAVE AREA          @OZ07816
         BAL   RBRANCH,LOCK             GET LOCAL & CMS LOCK   @OZ07816
         CLM   RTCX,ADDR,CVTAQAVT+ONE   TCX STILL VALID        @OZ07816
         BNE   RETURN                   NO, RETURN             @OZ07816
         EJECT
***************************************************************@ZA02601
*                                                              @ZA02601
*        CHECK FOR APPLICATION WAITING ON MCP                  @ZA02601
*                                                              @ZA02601
***************************************************************@ZA02601
CHKPEB   EQU   *                                               @ZA02601
         LA    RAIB,TCXAIBC             PTR TO AIBS            @ZA02601
LOOPAIB  EQU   *                                               @ZA02601
         ICM   RAIB,ADDR,AIBCHAIN       GET AIB                @ZA02601
         BZ    CHKPEB1                  END OF CHAIN           @ZA02601
         TM    AIBSTATE-IEDQAIB(RAIB),ABEND AIB IN USE         @ZA02601
         BNO   LOOPAIB                  NO, SKIP TO NEXT       @ZA02601
         L     RRECB,AIBECBA-IEDQAIB(RAIB) GET OPEN/CLOSE FLAG @ZA02601
         CLM   RRECB,ALL,OPEN           OPEN IN PROGRESS       @ZA02601
         BNE   CLOSEAIB                 NO, CHECK CLOSE        @ZA02601
         MVI   RCBERR-IEDQRECB+AIBKEY-IEDQAIB(RAIB),NOTCAM     @ZA02601
*                                       SET TCAM NOT IN SYSTEM @ZA02601
         B     APPLPOST                 POST APPL OPEN         @ZA02601
CLOSEAIB EQU   *                                               @ZA02601
         CLM   RRECB,ALL,CLOS           CLOSE IN PROGRESS      @ZA02601
         BE    APPLPOST                 YES, POST APPL COMPLETE@ZA02601
         B     LOOPAIB                  CHECK NEXT AIB         @ZA02601
CHKPEB1  EQU   *                                               @ZA02601
         LA    RPEB,TCXPEBC             DUMMY FIRST PEB        @ZA02601
LOOPPEB  EQU   *                                               @ZA02601
         LTR   RPEBF,RPEB               COPY PEB ADDRESS       @ZA02601
         BZ    FREESA                   END OF PEB CHAIN       @ZA02601
         ICM   RPEB,ALL,PEBLINK         GET NEXT PEB           @ZA02601
         BZ    FREESA                   END OF PEB CHAIN       @ZA02601
         CLC   PEBASCB,QOT1             RTM ALREADY TRIED PEB  @ZA02601
         BNE   CALLRTM                  PEB NOT PROCESSED BY   @ZA02601
*                                       RTM                    @ZA02601
RMVPEB   EQU   *                                               @ZA02601
         BAL   RRECB,DLKPEWA            DELINK PEWA AND PEB    @ZA02601
         B     LOOPPEB                  CHECK NEXT PEB         @ZA02601
APPLPOST EQU   *                                               @ZA02601
         XC    AIBECBA-IEDQAIB(FOUR,RAIB),AIBECBA-IEDQAIB(RAIB) ZA02601
*                                       CLEAR SPECIAL FLAG     @ZA02601
***************************************************************  Y02027
*                                                             *  Y02027
*        SAVE REGISTERS AND SET UP FOR BRANCH ENTRY INTO      *  Y02027
*        CROSS MEMORY POST TO POST APPLICATION PROGRAM CLOSE  *  Y02027
*                                                             *  Y02027
***************************************************************  Y02027
         L     RONE,PTRSA               GET POINTER TO SAVE AREA Y02027
         STM   RZERO,R15,ZERO(RONE)     SAVE ALL REGISTERS       Y02027
         L     RPOST13,RCBASCB-IEDQRECB+AIBKEY-IEDQAIB(RAIB)   @ZA02601
*                                       GET ASCB ADDRESS       @ZA02601
         SR    RPOST10,RPOST10          CLEAR FOR COMP CODE    @ZA02601
         IC    RPOST10,RCBERR-IEDQRECB+AIBKEY-IEDQAIB(RAIB) SET@ZA02601
*                                       COMPLETION CODE        @ZA02601
         L     RPOST11,RCBPECB-IEDQRECB+AIBKEY-IEDQAIB(RAIB)   @ZA07078
*                                        ECB ADDRESS           @ZA07078
         ICM   RPOST11,HIGHORDR,HIBIT   SET CROSS MEM POST     @ZA07078
         LA    RPOST12,CVTBRET          LOAD BR 14 AS ERRET ADDR Y02027
         L     RPOST15,CVT0PT01         POST ENTRY PT IEA0PT01   Y02027
         LR    RPOST9,RONE              SAVE AREA ADDR           Y02027
         BALR  RPOST14,RPOST15          POST ECB                 Y02027
         SPACE 1
         LM    RZERO,R15,ZERO(RPOST9)   RESTORE REGISTERS        Y02027
         B     LOOPAIB                  CHECK NEXT AIB         @ZA02601
         EJECT
***************************************************************  Y02027
*                                                             *  Y02027
*        ISSUE CALLRTM FOR APPLICATION PROGRAM                *  Y02027
*                                                             *  Y02027
***************************************************************  Y02027
CALLRTM  EQU   *                                                 Y02027
         ICM   RTCB,ALL,PEBTCB          TCB ADDRESS            @ZA02601
         BZ    RMVPEB                   BRANCH NO TCB          @ZA02601
         TM    PEBFLAG,PEBTERM          APPL ALREADY TERMINTED @OZ08374
         BO    RMVPEB                   YES, DELINK PEB & PEWAS@OZ08374
         L     RASID,PEBASID            ASID FOR APPL          @OZ08374
         L     RSAVE,PTRSA              GET SAVE AREA ADDRESS  @OZ08374
         CLC   PEBASCB+1(L3),PSAAOLD+1-PSA(RZERO) IS A.P. A    @OZ08374
*                                       SUBTASK OF THE MCP     @OZ08374
         BNE   DUMP                     BR, NO                 @OZ08374
         TM    TCBFLGS-IEDQTCB(RTCB),TERM  IS A.P. TERMINATING @OZ08374
         BNZ   DUMPED                   YES,SET TERMINATING BIT@OZ08374
DUMP     EQU   *                                               @OZ08374
         TM    TCXFLAG1,TCXAPDMP        IS APPL DUMP REQUESTED @OZ08374
         BZ    NODUMP                   NO, DON'T REQUEST DUMP @OZ08374
         CALLRTM TYPE=ABTERM,COMPCOD=X'046',TCB=(RTCB),ASID=(RASID),   *
               DUMP=YES                                        @ZA07083
         B     DUMPED                   DUMP REQUESTED         @ZA07083
NODUMP   EQU   *                                               @ZA07083
         CALLRTM TYPE=ABTERM,COMPCOD=X'046',TCB=(RTCB),ASID=(RASID),   *
               DUMP=NO                                           Y02027
DUMPED   EQU   *                                               @ZA07083
         OI    PEBFLAG,PEBTERM          MARK APPL TERMINATED   @ZA02601
         B     LOOPPEB                  PROCESS NEXT PEB       @ZA02601
         EJECT                                                   Y02027
FREESA   EQU   *                                               @ZA02601
         TM    TCXFLAG1,TCXRTM          RECURRSION             @ZA02601
         BO    PEBFREE                  YES, BRANCH            @ZA02601
         OI    TCXFLAG1,TCXRTM          SET RECURRSION FLAG    @ZA02601
         TM    RMPLFLG1,RMPLTERM        IS THIS MCP MEMORY     @ZA02601
*                                       TERMINATION            @ZA02601
         BO    PEBFREE                  YES, FREE CNTRL BLOCKS @ZA02601
         ICM   RPEB,ALL,TCXPEBC         FIRST PEB ON CHAIN     @ZA02601
         BNZ   RETURN                   CHAIN NOT EMPTY        @ZA02601
PEBFREE  EQU   *                                               @ZA02601
         L     RPEB,TCXPEBC             FIRST PEB ON CHAIN     @ZA02601
         SR    RONE,RONE                CLEAR FOR CS           @ZA02601
PEBFREE1 EQU   *                                               @ZA02601
         CS    RPEB,RONE,TCXPEBC        REMOVE PEBS FROM CHAIN @ZA02601
         BNE   PEBFREE1                 RETRY IF FAILED        @ZA02601
FRPEBS   EQU   *                                               @ZA02601
         LTR   RPEB,RPEB                END OF CHAIN           @ZA02601
         BZ    FREEPEWA                 YES, BRANCH            @ZA02601
         LR    RONE,RPEB                COPY PEB ADDRESS       @ZA02601
         L     RPEB,PEBLINK             NEXT PEB               @ZA02601
         LA    RZERO,PEBSIZE            LENGTH OF PEB          @ZA02601
         BAL   RBRANCH,FREE231          FREE PEB               @ZA02601
         B     FRPEBS                   FREE NEXT PEB          @ZA02601
         EJECT
***********************************************************************
*                                                                     *
*        FREE PROCESS ENTRY WORK AREAS (PEWA'S)                  Y02027
*                                                                     *
***********************************************************************
FREEPEWA EQU   *                                                 Y02027
         SR    RONE,RONE                CLEAR FOR CS           @ZA02601
         L     RPEWA,TCXPEWAC           PEWA CHAIN             @ZA02601
FRPEWA1  EQU   *                                               @ZA02601
         CS    RPEWA,RONE,TCXPEWAC      REMOVE PEWAS FOR CHAIN @ZA02601
         BNE   FRPEWA1                  RETRY IF FAILED        @ZA02601
FRPEWA   EQU   *                                                 Y02027
         LTR   RPEWA,RPEWA              IS THERE A PEWA          Y02027
         BZ    FREEAIBS                 NO, BRANCH               Y02027
         LR    RONE,RPEWA               LOAD THE PEWA ADDRESS    Y02027
         ICM   RPEWA,ADDR,PEWALINK+ONE  GET ADDR OF NEXT PEWA    Y02027
         SR    RBRANCH,RBRANCH          CLEAR REG              @ZA02601
         IC    RBRANCH,TCXSCBSZ         SCB SIZE               @ZA02601
         LA    RBRANCH,PEWASIZE(RBRANCH) ADD PEWA SIZE         @ZA02601
         TM    PEWAOPT2-IEDQPEWA(RONE),PEWAIN  INPUT DCB       @ZA02601
         BNO   FRPEWAS                  NO, BRANCH             @ZA02601
         LA    RBRANCH,TRT(RBRANCH)     ADD TRT SIZE           @ZA02601
FRPEWAS  EQU   *                                               @ZA02601
         LA    RZERO,LCBCHAIN-IEDQLCB+FOUR ADJUST FOR LCB      @ZA02601
         SR    RONE,RZERO               SET ADDR FOR FREEMAIN  @ZA02601
         AR    RZERO,RBRANCH            SET LENGTH FOR FREEMAIN@ZA02601
         BAL   RBRANCH,FREE231          FREE PEWA IN SUBPOOL 231 Y02027
         SPACE 1                                                 Y02027
         B     FRPEWA                   TEST FOR ANOTHER PEWA    Y02027
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *  Y02027
*                                                             *  Y02027
*        THIS SECTION OF CODE WILL SEARCH THE TCX APPLICATION    Y02027
*        INTERFACE BLOCK (AIB) CHAIN AND FREE ANY AIB'S          Y02027
*        REMAINING ON THE CHAIN.                                 Y02027
*                                                             *  Y02027
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *  Y02027
FREEAIBS EQU   *                                                 Y02027
         TM    TCXFLAG1,TCXMCPCD        MCP TERMINATED         @ZA04027
         BNO   RETURN                   NO EXIT                @ZA04027
         SR    RONE,RONE                CLEAR FOR CS           @ZA02601
         L     RAIB,TCXAIBC             CHAIN OF AIBS          @ZA02601
FRAIBS1  EQU   *                                               @ZA02601
         CS    RAIB,RONE,TCXAIBC        REMOVE AIBS FROM CHAIN @ZA02601
         BNE   FRAIBS1                  RETRY IF FAILED        @ZA02601
FRAIBS   EQU   *                                                 Y02027
         LTR   RAIB,RAIB                IS THERE AN AIB          Y02027
         BZ    FREESRBS                 NO, BRANCH             @Z49X9BG
         LR    RONE,RAIB                COPY THE AIB ADDRESS     Y02027
         ICM   RAIB,ADDR,AIBCHAIN       GET ADDR OF NEXT AIB     Y02027
         LH    RZERO,TCXSZAIB           GET AIB SIZE             Y02027
         BAL   RBRANCH,FREE231          FREE AIB IN SUBPOOL 231  Y02027
         B     FRAIBS                   TEST FOR ANOTHER AIB   @ZA02601
         EJECT                                                 @Z40X9BG
************************************************************** @Z40X9BG
*                                                            * @Z40X9BG
*        FREE SRB'S USED FOR POST FUNCTION                   * @Z40X9BG
*                                                            * @Z40X9BG
************************************************************** @Z40X9BG
FREESRBS EQU   *                                               @Z40X9BG
         SLR   RZERO,RZERO              CLEAR FOR CS           @Z40X9BG
         L     RONE,TCXSRBS             GET PTR TO SRB'S       @Z40X9BG
FRSRB1   EQU   *                                               @Z40X9BG
         LTR   RONE,RONE                ANY SRB'S TO FREE      @Z40X9BG
         BZ    RESTAB                   NO, BRANCH             @Z40X9BG
         CS    RONE,RZERO,TCXSRBS       DECHAIN SRB'S          @Z40X9BG
         BNE   FRSRB1                   BRANCH IF DECHAIN      @Z40X9BG
*                                       UNSUCESSFUL            @Z40X9BG
         SPACE 2                                               @Z40X9BG
************************************************************** @Z40X9BG
*                                                            * @Z40X9BG
*        BRANCH ENTER FREEMAIN - ENTRY EXPECTS TCB ADDRESS   * @Z40X9BG
*        IN REG 4 AND ASCB ADDRESS IN REG 7. EXPANSION       * @Z40X9BG
*        DESTROYS REGS 3,14 AND 15 AND CODE USES REG 7.      * @Z40X9BG
*                                                            * @Z40X9BG
************************************************************** @Z40X9BG
FREES    EQU   *                                               @Z40X9BG
         LA    RPEB,SRBBLKSZ-SIZESRB(,RONE) POINT TO LAST      @Z40X9BG
*                                       SRB IN THE BLOCK       @Z40X9BG
         ICM   RPEB,ADDR,ONE(RPEB)      SAVE ADDR OF FIRST SRB @Z40X9BG
*                                       IN NEXT BLOCK          @Z40X9BG
         L     RSAVE,PTRSA              GET SAVE AREA POINTER  @Z40X9BG
         STM   RBRANCH,R15,ZERO(RSAVE)  SAVE REGISTERS         @Z40X9BG
         L     RPEBF,PSATOLD-PSA(,RZERO) SET TCB ADDRESS       @VS41904
         L     RASID,PSAAOLD-PSA(,RZERO) SET ASCB ADDRESS      @VS41904
         LA    RZERO,SRBBLKSZ           GET SRB BLOCK SIZE     @OZ08384
         FREEMAIN RU,LV=(0),A=(1),SP=SQA,KEY=KEY0,BRANCH=YES   @Z40X9BG
         LM    RBRANCH,R15,ZERO(RSAVE)  RESTORE REGISTERS      @Z40X9BG
         LTR   RONE,RPEB                POINT TO NEXT SRB BLK  @Z40X9BG
         BNZ   FREES                    FREE NEXT BLOCK OF SRBS@Z40X9BG
         EJECT
RESTAB   EQU   *                                               @ZA02601
         TM    TCXFLAG1,TCXMCPCD+TCXRTM MCP TERMINATED         @ZA02601
         BNO   RETURN                   NO EXIT                @ZA02601
         SPACE 2                                               @Z49X9BG
***************************************************************  Y02027
*                                                             *  Y02027
*        RESTORE ATTENTION TABLE POINTER SAVED BY TCAM OPEN   *  Y02027
*                                                             *  Y02027
***************************************************************  Y02027
         L     RONE,CVTIXAVL            GET POINTER TO IOCOM   @Z49X9BG
         USING IOCOM,RONE               IOCOM ADDRESSABILITY   @Z49X9BG
         L     RONE,IOCATTBL            GET ATTN TABLE POINTER   Y02027
         USING ATB,RONE                 ATTN TABLE ADDRESSABILITYY02027
         LA    RONE,TCAM(RONE)          INCREMENT ATTN TABLE ADDRY02027
         MVC   ATBRTN,TCXSATTN          RESTORE INITIAL VALUE OF Y02027
*                                       ATTN ROUTINE POINTER     Y02027
*                                       FOR TCAM                 Y02027
         SR    RBRANCH,RBRANCH          CLEAR FOR STH          @ZA02601
         STH   RBRANCH,ATBASID          CLEAR ASID VALUE       @ZA02601
         DROP  RONE                                            @ZA02601
         SPACE 4                                               @Z40X9BG
************************************************************** @Z40X9BG
*                                                            * @Z40X9BG
*        RESET TCAM'S PURGE ENTRY IN THE VECTOR OF IOS       * @Z40X9BG
*        DRIVERS (VOID)                                      * @Z40X9BG
*                                                            * @Z40X9BG
************************************************************** @Z40X9BG
         L     RONE,CVTIXAVL            GET POINTER TO IOCM    @Z40X9BG
         USING IOCOM,RONE               IOCOM ADDRESSABILITY   @Z40X9BG
         L     RONE,IOCVOID             GET ADDR OF VOID       @Z40X9BG
         USING VOID,RONE                VOID ADDRESSABILITY    @Z40X9BG
         LA    RONE,VOIEL*IOSTCMID(,RONE) GET ADDR OF TCAM'S   @G36XRBB
*                                       SLOT IN THE VOID       @Z40X9BG
         MVC   VOIPRG,VOIRSTR           RESET PURGE ADDR TO    @Z40X9BG
*                                       SAME NO-OP ADDRESS     @Z40X9BG
*                                       USED FOR RESTORE ADDR  @Z40X9BG
         DROP  RONE                                            @Z40X9BG
         EJECT                                                   Y02027
***************************************************************  Y02027
*                                                             *  Y02027
*        RESET TABS IN TCAM UCB'S                             *  Y02027
*                                                             *  Y02027
***************************************************************  Y02027
         USING UCB,RUCB                 UCB ADDRESSABILITY       Y02027
         USING UCBCMEXT,RUCBEXT         UCB EXTENSION            Y02027
*                                       ADDRESSABILITY           Y02027
         L     RLOOKUP,CVTILK2          LOAD THE ADDRESS OF THE  Y02027
*                                       UCB HALFWORD ADDRESS LISTY02027
*                                       SECTION IN THE UCB       Y02027
*                                       LOOKUP TABLE             Y02027
         SR    RUCB,RUCB                CLEAR FOR INSERT         Y02027
         SPACE 3
***************************************************************  Y02027
*                                                             *  Y02027
*        RESET THE ERROR TAB IN ANY NON-BISC UCB'S MODIFIED   *  Y02027
*        BY TCAM                                              *  Y02027
*                                                             *  Y02027
***************************************************************  Y02027
GETUCBAD EQU   *                                                 Y02027
         ICM   RUCB,HALF,ZERO(RLOOKUP)  GET THE ADDR OF THE      Y02027
*                                       FIRST/NEXT UCB           Y02027
         BZ    NEXTUCB                  IF ADDR IS 0, BRANCH     Y02027
         CLM   RUCB,HALF,ENDUCB         IS THIS THE END OF THE @Z30AABG
*                                       UCB LOOKUP TABLE         Y02027
         BE    FREEIOSB                 YES, BRANCH            @Z40X9BG
         L     RUCBEXT,UCBEXTPT         GET UCB EXTENSION ADDR   Y02027
         CLI   UCBETI,NONBISC           IS THIS A NON-BISC LINE  Y02027
         BNE   TESTBISC                 NO, BRANCH               Y02027
         LR    R15,RUCB                 SET UCB ADDR             Y02027
         IOSGEN TP,VAR=29,UCB=(R15)     RESET THE ERROR TAB      Y02027
         SPACE 3
         B     TESTATTN                 GO CHECK ATTN TAB        Y02027
         EJECT
***************************************************************  Y02027
*                                                             *  Y02027
*        RESET THE ERROR TAB IN ANY BISC UCB'S MODIFIED       *  Y02027
*        BY TCAM                                              *  Y02027
*                                                             *  Y02027
***************************************************************  Y02027
TESTBISC EQU   *                                                 Y02027
         CLI   UCBETI,BISC              IS THIS A BISC LINE      Y02027
         BNE   NEXTUCB                  NO, BRANCH               Y02027
         LR    R15,RUCB                 SET UCB ADDR             Y02027
         IOSGEN TP,VAR=2B,UCB=(R15)     RESET BISC ERROR TAB     Y02027
         EJECT
***************************************************************  Y02027
*                                                             *  Y02027
*        RESET THE ATTENTION TAB IN ANY GRAPHICS OR 3705      *  Y02027
*        UCB'S MODIFIED BY TCAM                               *  Y02027
*                                                             *  Y02027
***************************************************************  Y02027
TESTATTN EQU   *                                                 Y02027
         CLI   UCBATI,ATTNTAB           HAS THE ATTENTION TAB    Y02027
*                                       BEEN MODIFIED            Y02027
         BNE   NEXTUCB                  NO, BRANCH               Y02027
         SPACE 2
*        CHECK UCB FOR TYPE OF DEVICE                            Y02027
         SPACE 1
         CLI   UCBDVCLS,DISPLAY         IS THIS A DISPLAY DEVICE Y02027
         BNE   RN                       NO, ASSUME 3705          Y02027
         SPACE 1
         CLI   UCBUNTYP,L2260           IS DEVICE A LOCAL 2260   Y02027
         BNE   TEST3270                 NO, BRANCH               Y02027
         SPACE 1
         MVI   UCBATI,ATI2260           SET ATTN TAB FOR 2260L   Y02027
         B     NEXTUCB                  SET UP FOR NEXT UCB      Y02027
         SPACE 2
TEST3270 EQU   *                                                 Y02027
         CLI   UCBUNTYP,TUBE            IS THIS A 3270 TUBE      Y02027
         BE    TYP3270                  YES, RESET ATTN TAB      Y02027
         CLI   UCBUNTYP,PRT1            IS THIS A 3270 PRINTER   Y02027
         BE    TYP3270                  YES, RESET ATTN TAB      Y02027
         CLI   UCBUNTYP,PRT2            IS THIS A 3270 PRINTER   Y02027
         BNE   RN                       NO, DEFAULT TO 3705      Y02027
         SPACE 1                                                 Y02027
TYP3270  EQU   *                                                 Y02027
         MVI   UCBATI,ATI3270           SET ATTN TAB FOR 3270L   Y02027
         B     NEXTUCB                  SET UP FOR NEXT UCB      Y02027
         SPACE 2                                                 Y02027
RN       EQU   *                                                 Y02027
         MVI   UCBATI,ATI3705           SET ATTN TAB FOR 3705    Y02027
         SPACE 3
NEXTUCB  EQU   *                                                 Y02027
         LA    RLOOKUP,TWO(RLOOKUP)     INCREMENT THE UCB LOOKUP Y02027
*                                       POINTER                  Y02027
         B     GETUCBAD                 GET NEXT UCB ADDR        Y02027
         EJECT                                                 @G36XRBB
************************************************************** @G36XRBB
*                                                            * @G36XRBB
*        FREE THE SRB/IOSB BLOCKS USED BY 3705 I/O           * @G36XRBB
*                                                            * @G36XRBB
************************************************************** @G36XRBB
FREEIOSB EQU   *                                               @G36XRBB
         L     RTCX,CVTAQAVT            GET TCX ADDRESS        @G36XRBB
         SLR   RPEB,RPEB                CLEAR FOR CS           @G36XRBB
         L     RONE,TCXNCPIO            GET ADDR OF 1ST BLOCK  @G36XRBB
*                                       OF SRB/IOSB'S          @G36XRBB
         ST    RPEB,TCXNCPIO            CLEAR PTR              @G36XRBB
FRLOOP   EQU   *                                               @G36XRBB
         LTR   RONE,RONE                IS THERE A BLK TO FREE @G36XRBB
         BZ    FREEMORE                 NO, BRANCH             @G36XRBB
         L     RPEB,0(RONE)             SAVE PTR TO NEXT BLOCK @G36XRBB
         LA    RBRANCH,SRBSIZE+IOSEND-IOSB+CONTROL GET LENGTH  @G36XRBB
         AR    RBRANCH,RONE             CALCULATE END ADDRESS  @G36XRBB
         ICM   RONE,HIGHORDR,PGFLG1     SET PAGE ...           @G36XRBB
         ICM   RBRANCH,HIGHORDR,PGFLG2  ... FREE VSL FLAGS     @G36XRBB
         LA    RPEBF,RZERO              SET TCB PTR            @OZ33173
         SLR   RZERO,RZERO              NO ECB ADDRESS         @G36XRBB
         L     R15,CVTVPSIB             GET BRANCH ENTRY PT    @G36XRBB
*                                       ADDR FOR PGFREE        @G36XRBB
         BALR  RRECB,R15                BRANCH TO PAGE FREE    @G36XRBB
         SPACE 1                                               @G36XRBB
         L     RSAVE,PTRSA              GET SAVE AREA ADDR     @G36XRBB
         STM   RBRANCH,R15,ZERO(RSAVE)  SAVE REGS              @Z40X9BG
         L     RPEBF,PSATOLD-PSA(,RZERO) SET TCB ADDRESS       @G36XRBB
         L     RASID,PSAAOLD-PSA(,RZERO) SET ASCB ADDRESS      @G36XRBB
         LA    RZERO,SRBSIZE+IOSEND-IOSB+CONTROL GET LENGTH    @G36XRBB
         LA    RONE,ZERO(,RONE)         CLEAR HIGH BYTE        @G36XRBB
         FREEMAIN RU,LV=(0),A=(1),SP=241,KEY=KEY0,BRANCH=YES   @G36XRBB
         LM    RBRANCH,R15,ZERO(RSAVE)  RESTORE REGS           @G36XRBB
         LR    RONE,RPEB                GET PTR TO NEXT BLOCK  @G36XRBB
         B     FRLOOP                   TEST FOR ANOTHER BLOCK @G36XRBB
         EJECT                                                 @Z40X9BG
************************************************************** @Z40X9BG
*                                                            * @Z40X9BG
*        FREE THE SRB/IOSB BLOCKS USED BY MESSAGE QUEUES     * @Z40X9BG
*        DISK I/O.                                           * @Z40X9BG
*                                                            * @Z40X9BG
************************************************************** @Z40X9BG
FREEMORE EQU   *                                               @Z40X9BB
         SLR   RPEB,RPEB                CLEAR FOR CS           @Z40X9BG
         L     RONE,TCXSIOSB            GET ADDR OF 1ST BLOCK  @Z40X9BG
*                                       OF SRB/IOSB'S          @Z40X9BG
FRIOSBCS EQU   *                                               @Z40X9BG
         CS    RONE,RPEB,TCXSIOSB       DECHAIN SRB/IOSB'S     @Z40X9BG
         BNE   FRIOSBCS                 RETRY IF UNSUCCESSFUL  @Z40X9BG
FRSIOSB  EQU   *                                               @Z40X9BG
         LTR   RONE,RONE                IS THERE A BLK TO FREE @Z40X9BG
         BZ    FREETCX                  NO, BRANCH             @Z40X9BG
         L     RPEB,FOUR(,RONE)         SAVE PTR TO NEXT BLOCK @Z40X9BG
         L     RAIB,ZERO(,RONE)         SAVE THE LENGTH        @Z40X9BG
         LA    RBRANCH,ZERO(,RAIB)      GET LENGTH             @Z40X9BG
         AR    RBRANCH,RONE             CALCULATE END ADDRESS  @Z40X9BG
         ICM   RONE,HIGHORDR,PGFLG1     SET PAGE ...           @Z40X9BG
         ICM   RBRANCH,HIGHORDR,PGFLG2  ... FREE VSL FLAGS     @Z40X9BG
         LA    RPEBF,RZERO              SET TCB ADDR TO ZERO   @OZ29317
         SLR   RZERO,RZERO              NO ECB ADDRESS         @Z40X9BG
         L     R15,CVTVPSIB             GET BRANCH ENTRY PT    @Z40X9BG
*                                       ADDR FOR PGFREE        @Z40X9BG
         BALR  RRECB,R15                BRANCH TO PAGE FREE    @Z40X9BG
         SPACE 1                                               @Z40X9BG
         L     RSAVE,PTRSA              GET SAVE AREA ADDR     @Z40X9BG
         STM   RBRANCH,R15,ZERO(RSAVE)  SAVE REGS              @Z40X9BG
         L     RPEBF,PSATOLD-PSA(,RZERO) SET TCB ADDRESS       @VS41904
         L     RASID,PSAAOLD-PSA(,RZERO) SET ASCB ADDRESS      @VS41904
         LA    RZERO,ZERO(,RAIB)        GET LENGTH             @Z40X9BG
         LA    RONE,ZERO(,RONE)         CLEAR HIGH BYTE        @VS41085
         FREEMAIN RU,LV=(0),A=(1),SP=241,KEY=KEY0,BRANCH=YES   @VS41091
         LM    RBRANCH,R15,ZERO(RSAVE)  RESTORE REGS           @Z40X9BG
         LA    RONE,ZERO(,RPEB)         GET PTR TO NEXT BLOCK  @Z40X9BG
         B     FRSIOSB                  TEST FOR ANOTHER BLOCK @Z40X9BG
         EJECT                                                 @ZA02601
***************************************************************@ZA02601
*                                                              @ZA02601
*              THIS SECTION OF CODE WILL REMOVE THE TCX FROM   @ZA02601
*              THE SYSTEM.                                     @ZA02601
*                                                              @ZA02601
***************************************************************@ZA02601
FREETCX  EQU   *                                               @ZA02601
         L     RTCX,CVTAQAVT            TCX ADDRESS            @ZA02601
         SR    RONE,RONE                CLEAR FOR CS           @ZA02601
         CS    RTCX,RONE,CVTAQAVT       REMOVE TCX             @ZA02601
         BNE   FREETCX                  RETRY IF FAILED        @ZA02601
         BAL   RBRANCH,UNLOCK           RELEASE LOCKS HELD     @ZA02601
         BAL   RBRANCH,SAFREE           FREE SAVE AREA         @ZA02601
         LR    RONE,RTCX                COPY TCX ADDRESS       @ZA02601
         LA    R15,TCXSIZE(,RONE)       END OF TCX             @ZA02601
         PGFREE R,A=(1),EA=(15)         PAGE FREE THE TCX      @ZA02601
         LR    RONE,RTCX                COPY TCX ADDRESS       @ZA02601
         LA    RZERO,TCXSIZE            LENGTH OF TCX          @ZA02601
         ICM   RZERO,HIGHORDR,SP231     SET SUBPOOL VALUE      @ZA02601
         MODESET EXTKEY=TCAM            GET INTO TCAM KEY      @ZA02601
         FREEMAIN R,LV=(0),A=(1)        FREE THE TCX           @ZA02601
         MODESET EXTKEY=SUPR            RETURN TO KEY 0        @ZA02601
         B     RETURN1                  EXIT                   @ZA02601
         EJECT
***************************************************************  Y02027
*                                                             *  Y02027
*        RETURN TO CALLER OF IEDQOT01                         *  Y02027
*                                                             *  Y02027
***************************************************************  Y02027
RETURN   EQU   *                                                 Y02027
         BAL   RBRANCH,UNLOCK           RELEASE LOCKS HELD     @ZA02601
         BAL   RBRANCH,SAFREE           FREE SAVE AREA         @ZA02601
RETURN1  EQU   *                                               @ZA02601
         L     RSAVE,SAVE13             RESTORE CALLER'S REG 13  Y02027
         SPACE 1
         RETURN (14,12),T,RC=0          RETURN WITH CODE 0       Y02027
         EJECT
***************************************************************  Y02027
*                                                             *  Y02027
*        OBTAIN LOCAL AND CMS LOCKS                           *  Y02027
*        (REGISTERS 11,12,13, AND 14 ARE DESTROYED)           *  Y02027
*                                                             *  Y02027
***************************************************************  Y02027
LOCK     EQU   *                                                 Y02027
         SPACE 1
LOCALGET SETLOCK OBTAIN,TYPE=LOCAL,MODE=UNCOND,                        X
               RELATED=(PEBPEWA,IEDQEU(LOCALREL),IEDQOT01(LOCALREL),IGGX
               02046(LOCALREL))                                @ZA02601
         SPACE 1
CMSGET   SETLOCK OBTAIN,TYPE=CMS,MODE=UNCOND,                          *
               RELATED=(PEBPEWA,IEDQEU(CMSREL),IEDQOT01(CMSREL),IGG0204X
               6(CMSREL))                                      @ZA02601
         SPACE 1
         BR    RBRANCH                  RETURN                   Y02027
         SPACE 2                                               @Z40X9BG
***************************************************************  Y02027
*                                                             *  Y02027
*        RELEASE CMS AND LOCAL LOCKS                          *  Y02027
*        (REGISTERS 11,12,13, AND 14 ARE DESTROYED)           *  Y02027
*                                                             *  Y02027
***************************************************************  Y02027
UNLOCK   EQU   *                                                 Y02027
         SPACE 1
CMSREL   SETLOCK RELEASE,TYPE=CMS,                                     *
               RELATED=(PEBPEWA,IEDQEU(CMSGET),IEDQOT01(CMSGET),IGG0204X
               6(CMSGET))                                      @ZA02601
         SPACE 1
LOCALREL SETLOCK RELEASE,TYPE=LOCAL,                                   X
               RELATED=(PEBPEWA,IEDQEU(LOCALGET),IEDQOT01(LOCALGET),IGGX
               02046(LOCALGET))                                @ZA02601
         SPACE 1
         BR    RBRANCH                  RETURN                   Y02027
         EJECT                                                   Y02027
***************************************************************  Y02027
*                                                             *  Y02027
*        DELINK PEB AND FREE IT.                              *  Y02027
*                                                             *  Y02027
***************************************************************  Y02027
FREEPEB  EQU   *                                                 Y02027
         LR    RONE,RPEB                COPY PEB FOR CS        @ZA02601
         L     RPEB,PEBLINK             ADDRESS OF NEXT PEB    @ZA02601
         CS    RONE,RPEB,PEBLINK-IEDQPEB(RPEBF) DELINK PEB     @ZA02601
         BZ    FREEPEB1                 BYPASS RECOVERY CS O K @ZA02601
         LA    RPEB,TCXPEBC             START AGAIN AT TOP     @ZA02601
FREEPEB1 EQU   *                                               @ZA02601
         LR    RPEB,RPEBF               COPY OLD PEB ADDR      @ZA02601
         LA    RZERO,PEBSIZE            GET SIZE OF THE PEB      Y02027
         SPACE 2
***************************************************************  Y02027
*                                                             *  Y02027
*        FREE CORE IN SUBPOOL 231 IN KEY OF TCAM              *  Y02027
*                                                             *  Y02027
***************************************************************  Y02027
FREE231  EQU   *                                                 Y02027
         L     RSAVE,PTRSA              GET SAVE AREA ADDRESS  @ZA02601
         STM   RBRANCH,R15,ZERO(RSAVE)  SAVE REGS              @ZA02601
         L     RPEBF,PSATOLD-PSA        TCB ADDRESS            @OZ08086
         L     RASID,PSAAOLD-PSA        ASCB ADDRESS           @OZ08086
         FREEMAIN RU,LV=(0),A=(1),SP=CSA,KEY=KEY6,BRANCH=YES   @ZA02601
         LM    RBRANCH,R15,ZERO(RSAVE)  RESTORE REGS           @ZA02601
         SPACE 1                                                 Y02027
         BR    RBRANCH                  RETURN TO CALLER         Y02027
         EJECT
***************************************************************  Y02027
*                                                             *  Y02027
*        DETERMINE IF THE TERMINATING TASK OR MEMORY IS A     *  Y02027
*        TCAM APPLICATION PROGRAM                             *  Y02027
*                                                             *  Y02027
***************************************************************  Y02027
PROCTERM EQU   *                                                 Y02027
         SR    RPEB,RPEB                CLEAR FOR INSERT         Y02027
         ICM   RPEB,ADDR,TCXPEBC+ONE    GET ADDR OF 1ST PEB      Y02027
         BZ    TSTCHAIN                 IF ADDR IS 0, BRANCH   @ZA02601
         LA    RPEBF,FIRSTPEB(,RTCX)    POINT TO TCXPEBC AS DUMMYY02027
*                                       FIRST PEB                Y02027
PEBTEST  EQU   *                                                 Y02027
         TM    RMPLFLG1,RMPLTERM        IS THIS MEMORY TERM      Y02027
         BO    TESTASCB                 YES, BRANCH              Y02027
         CLC   RMPLTCBA+ONE(L3),PEBTCB+ONE DOES APPL. PGM. TCB   Y02027
*                                       ADDR MATCH THAT OF THE   Y02027
*                                       TERMINATING TASK         Y02027
         BNE   NEXTPEB                  NO, BRANCH               Y02027
TESTASCB EQU   *                                                 Y02027
         CLC   RMPLASCB+ONE(L3),PEBASCB+ONE DOES THE APPL. PGM.  Y02027
*                                       ASCB ADDR MATCH THAT OF  Y02027
*                                       THE TERMINATING MEMORY   Y02027
*                                       OR THE MEMORY OF THE     Y02027
*                                       TERMINATING TASK         Y02027
         BE    POSTPEB                  YES, BRANCH              Y02027
NEXTPEB  EQU   *                                                 Y02027
         LTR   RPEBF,RPEB               SAVE OLD PEB ADDR      @ZA02601
         BZ    TSTCHAIN                 END OF CHAIN           @ZA02601
         ICM   RPEB,ADDR,PEBLINK+ONE    GET ADDR OF NEXT PEB     Y02027
         BNZ   PEBTEST                  IF ADDR IS NOT 0, BRANCH Y02027
*                                       TO PEBTEST               Y02027
         EJECT
***************************************************************  Y02027
*                                                             *  Y02027
*        CHECK FOR EMPTY PEB CHAIN                            *  Y02027
*                                                             *  Y02027
***************************************************************  Y02027
TSTCHAIN EQU   *                                                 Y02027
         ICM   RPEB,ADDR,TCXPEBC+ONE    IS PEB CHAIN EMPTY       Y02027
         BZ    PEBFREE                  YES, CLEAN UP          @ZA02601
         B     RETURN                   EXIT                   @ZA02601
***************************************************************@ZA02601
*                                                              @ZA02601
*        DELINK THE PEWA'S AND THE PEB. CONTINUE SEARCH IF     @ZA02601
*        THIS IS MEMORY TERMINATION                            @ZA02601
*                                                              @ZA02601
***************************************************************@ZA02601
DLKPEWA  EQU   *                                               @ZA02601
         LA    RPEWA,TCXPEWAC-PEWALINK+IEDQPEWA DUMMY PEWA     @ZA02601
DLKPEWA1 EQU   *                                               @ZA02601
         LTR   RAIB,RPEWA               COPY OLD PEWA          @ZA02601
         BZ    DELINK1                  BRANCH END OF CHAIN    @ZA02601
         ICM   RPEWA,ALL,PEWALINK-IEDQPEWA(RPEWA) GET NEXT PEWA@ZA02601
         BZ    DELINK1                  BRANCH END OF CHAIN    @ZA02601
         CLC   PEPCBAD+ONE-IEDQPEWA(L3,RPEWA),PEBPCB+ONE PEWA  @ZA02601
*                                       FOR THIS PEB           @ZA02601
         BNE   DLKPEWA1                 NO, BRANCH             @ZA02601
         LR    RONE,RPEWA               COPY PEWA FOR CS       @ZA02601
         L     RPEWA,PEWALINK-IEDQPEWA(RPEWA) NEXT PEWA        @ZA02601
         CS    RONE,RPEWA,PEWALINK-IEDQPEWA(RAIB) UNCHAIN PEWA @ZA02601
         BNE   DLKPEWA                  RETRY IF FAILED        @ZA02601
         SR    R15,R15                  CLEAR REG              @ZA02601
         IC    R15,TCXSCBSZ             SCB SIZE               @ZA02601
         LA    R15,PEWASIZE(R15)        ADD PEWA SIZE          @ZA02601
         TM    PEWAOPT2-IEDQPEWA(RONE),PEWAIN INPUT DCB        @ZA02601
         BNO   DLKPEWA2                 NO, BRANCH             @ZA02601
         LA    R15,TRT(R15)             ADD TRT SIZE           @ZA02601
DLKPEWA2 EQU   *                                               @ZA02601
         LA    RZERO,LCBCHAIN-IEDQLCB+FOUR ADJUST FOR LCB      @ZA02601
         SR    RONE,RZERO               SET ADDR FOR FREEMAIN  @ZA02601
         AR    RZERO,R15                SET LENGTH FOR FREEMAIN@ZA02601
         BAL   RBRANCH,FREE231          FREE THE PEWA          @ZA02601
         B     DLKPEWA1                 CHECK NEXT PEWA        @ZA02601
DELINK1  EQU   *                                               @ZA02601
         BAL   RBRANCH,FREEPEB          DELINK AND FREE PEB    @ZA02601
         BR    RRECB                    RETURN TO CALLER       @ZA02601
DELINK   EQU   *                                               @ZA02601
         BAL   RRECB,DLKPEWA            DELINK PEWA AND PEB    @ZA02601
         B     NEXTPEB                  CONT SEARCH FOR PEBS   @ZA02601
TERMPEB  EQU   *                                               @ZA02601
         OI    PEBFLAG,PEBTERM          FLAG AS TERMINATED     @ZA02601
         B     NEXTPEB                  CHECK NEXT PEB         @ZA02601
         EJECT
***************************************************************  Y02027
*                                                             *  Y02027
*        DETERMINE IF PEB SHOULD BE PUT ON READY QUEUE        *  Y02027
*                                                             *  Y02027
***************************************************************  Y02027
POSTPEB  EQU   *                                                 Y02027
         TM    TCXFLAG1,TCXMCPCD        IS TCAM TERMINATING      Y02027
         BO    DELINK                   YES, DO NOT POST PEB TO  Y02027
*                                       TCAM - GO DELINK PEB     Y02027
         CLC   PEBASID,TCXASID          APPL A SUBTASK OF MCP  @ZA02601
         BNE   MCPOK                    NO, BRANCH             @ZA02601
         L     RTCB,TCXTCB              GET MCP TCB ADDRESS    @ZA02601
         TM    TCBFLGS-IEDQTCB(RTCB),TERM MCP TERMINATING      @ZA02601
         BNZ   DELINK                   YES, DELINK PEB        @ZA02601
MCPOK    EQU   *                                               @ZA02601
         TM    PEBFLAG,PEBCLOSE         ALREADY PROCESSED PEB  @ZA02601
         BO    NEXTPEB                  YES, CHECK NEXT PEB    @ZA02601
CKPEWA   EQU   *                                               @ZA02601
         LA    RPEWA,TCXPEWAC-PEWALINK+IEDQPEWA                @ZA02601
LOOPPEWA EQU   *                                               @ZA02601
         ICM   RPEWA,ALL,PEWALINK-IEDQPEWA(RPEWA) GET PEWA     @ZA02601
         BZ    TERMPEB                  CHECK NEXT PEB         @ZA02601
         CLC   PEPCBAD+ONE-IEDQPEWA(L3,RPEWA),PEBPCB+ONE  PEWA @ZA02601
*                                       FOR THIS PEB           @ZA02601
         BNE   LOOPPEWA                 NO , BRANCH            @ZA02601
         LA    RONE,TCXAIBC             ADDRESS OF AIBS        @ZA02601
ALOOPAIB EQU   *                                               @ZA02601
         ICM   RONE,ADDR,AIBCHAIN-IEDQAIB(RONE) GET AIB        @ZA02601
         BZ    PROSPEB                  PROCESS THE PEBS       @ZA02601
         TM    AIBSTATE-IEDQAIB(RONE),ABEND AIB IN USE         @ZA02601
         BNE   ALOOPAIB                 NO, BRANCH             @ZA02601
         CLM   RPEWA,ALL,RCBDSNM-IEDQRECB+AIBKEY-IEDQAIB(RONE) @ZA02601
*                                       AIB FOR THIS PEWA      @ZA02601
         BNE   ALOOPAIB                 NO, BRANCH             @ZA02601
         L     RZERO,AIBECBA-IEDQAIB(RONE) GET SPECIAL FLAG    @ZA02601
         CLM   RZERO,ALL,CLOS           CLOSE HUNG UP          @ZA02601
         BNE   ALOOPAIB                 NO, BRANCH             @ZA02601
         TM    RCBERR-IEDQRECB+AIBKEY-IEDQAIB(RONE),ABEND      @ZA02601
*                                       HAS QEU SEEN REQUEST   @ZA02601
         BO    LOOPPEWA                 YES, SEARCH PEWAS      @ZA04027
         B     GOTAIB                   POST APPL CLOSEDOWN    @ZA02601
PROSPEB  EQU   *                                               @ZA02601
         LA    RONE,TCXAIBC             TCX AIB POINTER        @ZA02601
AIBGET   EQU   *                                               @ZA02601
         ICM   RONE,ADDR,AIBCHAIN-IEDQAIB(RONE) ANY AIB'S AVAIL@ZA02601
         BNZ   GOTAIBS                  YES, GET ONE           @ZA02601
         LH    RZERO,TCXSZAIB           GET SIZE OF AIB        @OZ17630
         CH    RZERO,FOURK              SIZE GREATER THAN 4K   @OZ17630
         BH    GETCORE                  YES, BRANCH            @OZ17630
         LA    RZERO,HPAGE              2K VALUE               @ZA02601
         AR    RZERO,RZERO              DOUBLE TO PAGE SIZE    @ZA02601
GETCORE  EQU   *                                               @OZ17630
         L     RSAVE,PTRSA              GET SAVE AREA ADDRESS  @ZA02601
         STM   RBRANCH,R15,ZERO(RSAVE)  SAVE REGS              @ZA02601
         ICM   RPEBF,ADDR,RMPLTCBA+ONE  TCB ADDRESS            @ZA02601
         BNZ   TASKTERM                 BR NOT ZERO            @OZ32424
         ICM   RPEBF,ADDR,PEBTCB+ONE    GET TCB ADDR           @OZ32424
TASKTERM EQU   *                                               @OZ32424
         ICM   RASID,ADDR,RMPLASCB+ONE  ASCB ADDRESS           @ZA02601
*                                       GETMAIN CSA KEY6       @ZA02601
         GETMAIN RU,LV=(0),SP=CSA,KEY=KEY6,BNDRY=PAGE,BRANCH=YES
         LM    RBRANCH,R15,ZERO(RSAVE)  RESTORE REGS           @ZA02601
         LH    RRECB,TCXSZAIB           SIZE OF AIB            @ZA02601
         CH    RRECB,FOURK              SIZE GREATER THAN 4K   @OZ17630
         BNH   SMALLAIB                 NO, BRANCH             @OZ17630
         LR    R15,RONE                 GET ADDR OF ONLY AIB   @OZ17630
         B     CLRBYTE                  BRANCH TO CLEAR BYTE   @OZ17630
SMALLAIB EQU   *                                               @OZ17630
         LA    R15,HPAGE                2K VALUE               @ZA02601
         LA    R15,HPAGE(R15,RONE)      ADDR OF END OF AIBS    @OZ17630
         SR    R15,RRECB                ADDR OF LAST AIB       @ZA02601
CLRBYTE  EQU   *                                               @OZ17630
         LA    RZERO,ZERO(RONE)         CLEAR HI ORDER BYTE    @ZA02601
         B     BXLE                     BRANCH TO INITIALIZE   @ZA02601
CHAINAIB EQU   *                                               @ZA02601
         ST    RZERO,AIBCHAIN-ONE-IEDQAIB(RONE)  STORE AIB PTR @ZA02601
         LR    RONE,RZERO               SAVE CURRENT PTR       @ZA02601
BXLE     EQU   *                                               @ZA02601
         BXLE  RZERO,RRECB,CHAINAIB     LOOP THRU NEW CORE     @ZA02601
*                                       TILL ALL AIBS LINKED   @ZA02601
         LR    R15,RONE                 LAST AIB PTR           @ZA02601
         N     RONE,CLRLOW              START OF GOTTEN CORE   @ZA02601
         L     RZERO,TCXAIBC            GET CURRENT AIB PTR    @ZA02601
AIBLOOP  EQU   *                                               @ZA02601
         ST    RZERO,AIBCHAIN-ONE-IEDQAIB(R15) LINK AIBS       @ZA02601
         CS    RZERO,RONE,TCXAIBC       CHAIN AIBS             @ZA02601
         BNE   AIBLOOP                  RETRY IF CS FAILED     @ZA02601
GOTAIBS  EQU   *                                               @ZA02601
         TS    AIBSTATE-IEDQAIB(RONE)   ALLOCATE AIB           @ZA02601
         BNZ   AIBGET                   IN USE, RETRY          @ZA02601
GOTAIB   EQU   *                                               @ZA02601
         MVC   AIBECBA-IEDQAIB(FOUR,RONE),QOT1 SET ID FOR      @ZA02601
*                                       FAILURE                @ZA02601
         LA    RONE,AIBKEY-IEDQAIB(RONE) BUMP TO RCB           @ZA02601
         XC    ZERO(RCBSIZE,RONE),ZERO(RONE) CLEAR RCB         @ZA02601
***************************************************************@ZA02601
*                                                              @ZA02601
*        PUT RCB ON ASYNCHRONOUS READY QUEUE FOR MCP CLEANUP   @ZA02601
*                                                              @ZA02601
***************************************************************@ZA02601
         USING IEDQRECB,RONE                                   @ZA02601
         MVC   RECBKEY(FOUR),TCXOCQ     SET OPEN/CLOSE QCB     @ZA02601
         MVI   RECBPRI,PRIORITY         SET PRIORITY           @ZA02601
         MVI   RCBTCBFL,TERM            SET TERMINATION KEY    @ZA02601
         MVC   RCBTCB+ONE(L3),RMPLTCBA+ONE MOVE TCB ADDRESS    @ZA02601
         ST    RPEWA,RCBDSNM            PASS PEWA ADDRESS      @ZA02601
         ST    RONE,PEWARCB-IEDQPEWA(RPEWA)  RCB ADDR IN PEWA  @OZ07798
         MVC   PEBASCB,QOT1             INVALIDATE ASCB        @ZA02601
         OI    PEWAFLG-IEDQPEWA(RPEWA),TERMKEY SET CLOSE REQ   @ZA02601
         OI    PEWAFLG-IEDQPEWA(RPEWA),TERMKEY AGAIN FOR MP    @ZA02601
         OI    PEBFLAG,PEBCLOSE         FLAG PEB AS POCESSED   @ZA02601
         TM    PEWAOPT2-IEDQPEWA(RPEWA),PEWAIN INPUT OPENED    @ZA02601
         BNO   NOTBUSY                  NO, BRANCH             @ZA02601
         MVI   RCBDCBMA,PEWAIN          SET FOR INPUT          @ZA02601
         TM    PEWAFLG-IEDQPEWA(RPEWA),ERBBUSY ERB BUSY        @ZA02601
         BO    LOOPPEWA                 YES, SKIP POST         @ZA02601
NOTBUSY  EQU   *                                               @ZA02601
         L     RRECB,TCXREADY           GET FIRST ELEMENT ON   @ZA02601
*                                       ASYNCHRONOUS RDY QUEUE @ZA02601
SWAP     EQU   *                        CHAIN READY QUEUE      @ZA02601
*                                       ELEMENT TO THE RCB     @ZA02601
         STCM  RRECB,ADDR,RECBLINK      SET UP LINK POINTER    @OZ16542
         CS    RRECB,RONE,TCXREADY      PUT RCB ON QUEUE       @ZA02601
         BNE   SWAP                     RETRY IF CS FAILED     @ZA02601
         L     RONE,PTRSA               GET SAVE AREA ADDRESS  @ZA02601
         STM   RZERO,R15,ZERO(RONE)     SAVE REGS              @ZA02601
         L     RPOST13,TCXASCB          ASCB ADDR FOR MCP      @ZA02601
         L     RPOST11,TCXAVT           AVT ADDRESS            @ZA02601
         LA    RPOST11,AVTOSECB-IEDQAVTD(RPOST11) ECB ADDRESS  @ZA02601
         ICM   RPOST11,HIGHORDR,HIBIT SET CROSS MEM POST       @ZA02601
         SR    RPOST10,RPOST10          SET COMPLETION CODE    @ZA02601
         LA    RPOST12,CVTBRET          SET ERROR RETURN       @ZA02601
         L     RPOST15,CVT0PT01         ADDRESS OF POST        @ZA02601
         LR    RPOST9,RONE              SAVE ADDR OF REGS      @ZA02601
         BALR  RPOST14,RPOST15          POST MCP               @ZA02601
         LM    RZERO,R15,ZERO(RPOST9)   RESTORE REGS           @ZA02601
         B     LOOPPEWA                 GET NEXT PEWA          @ZA02601
         SPACE 5                                               @ZA02601
GETSA    EQU   *                                               @ZA02601
         ICM   RONE,ALL,PTRSA           ALREADY HAVE SAVE AREA @ZA02601
         BNZR  RBRANCH                  YES, SKIP GETMAIN      @ZA02601
         L     RZERO,GETPARM            SUBPOOL AND LENGTH     @ZA02601
         GETMAIN R,LV=(0)               GET SAVE AREA          @ZA02601
         ST    RONE,PTRSA               SAVE ADDR OF SAVE AREA @ZA02601
         BR    RBRANCH                  RETURN TO MAINLINE CODE@ZA02601
         SPACE 3                                               @ZA02601
SAFREE   EQU   *                                               @ZA02601
         ICM   RONE,ALL,PTRSA           SAVE AREA ADDRESS      @ZA02601
         BZR   RBRANCH                  NONE TO FREE, RETURN   @ZA02601
         L     RZERO,GETPARM            SUBPOOL AND LENGTH     @ZA02601
         FREEMAIN R,LV=(0),A=(1)        FREE SAVE AREA         @ZA02601
         BR    RBRANCH                  RETURN TO CALLER       @ZA02601
         EJECT
***********************************************************************
*                                                                     *
*        EQUATES                                                 Y02027
*                                                                     *
***********************************************************************
ZERO     EQU   0                        OFFSET                   Y02027
ONE      EQU   1                        OFFSET                   Y02027
TWO      EQU   2                        OFFSET                   Y02027
FOUR     EQU   4                        OFFSET                   Y02027
FIVE     EQU   5                        OFFSET                   Y02027
         SPACE 2                                                 Y02027
L3       EQU   3                        COMPARE LENGTH OF 3      Y02027
L4       EQU   4                        ADDRESS LENGTH           Y02027
HALF     EQU   3                        ICM/STCM MASK            Y02027
ADDR     EQU   7                        MASK FOR ADDRESS INSERTS Y02027
HIGHORDR EQU   8                        MASK FOR HIGH ORDER      Y02027
*                                       BYTE INSERTS             Y02027
ALL      EQU   15                       ICM/STCM MASK            Y02027
         SPACE 2                                                 Y02027
TERMKEY  EQU   X'40'                    TERMINATOR KEY FOR CLOSE Y02027
TERM     EQU   X'C0'                    NORMAL OR ABNORMAL       Y02027
*                                       TERMINATION              Y02027
PRIORITY EQU   X'C0'                    PRIORITY                 Y02027
TRT      EQU   256                      LEN OF TRT TABLE       @OZ09293
NOTCAM   EQU   4                        TCAM NOT IN SYSTEM     @ZA02601
HPAGE    EQU   2048                     HALF PAGE SIZE         @ZA02601
KEY0     EQU   0                        KEY 0                  @Z40X9BG
SQA      EQU   245                      SRB SUBPOOL            @Z40X9BG
KEY6     EQU   6                        KEY 6                  @ZA02601
CSA      EQU   231                      SUBPOOL FOR AIB'S      @ZA02601
ABEND    EQU   X'FF'                    ABEND CODE FOR CLEANUP   Y02027
NONBISC  EQU   X'2F'                    NON-BISC LINE            Y02027
ATTNTAB  EQU   X'14'                    ATTENTION TAB            Y02027
TCAM     EQU   ATTNTAB*TWO              OFFSET OF TCAM'S ENTRY   Y02027
*                                       IN ATTENTION TABLE       Y02027
BISC     EQU   X'30'                    BISC LINE                Y02027
         SPACE 1                                                 Y02027
DISPLAY  EQU   X'10'                    GRAPHICS DEVICE          Y02027
L2260    EQU   X'03'                    2260 LOCAL               Y02027
TUBE     EQU   X'09'                    3270 TUBE                Y02027
PRT1     EQU   X'0A'                    3270 PRINTER             Y02027
PRT2     EQU   X'0B'                    3270 PRINTER             Y02027
         SPACE 1                                                 Y02027
ATI2260  EQU   X'10'                    ATTENTION TAB FOR 2260L  Y02027
ATI3270  EQU   X'1C'                    ATTENTION TAB FOR 3270L  Y02027
ATI3705  EQU   X'00'                    ATTENTION TAB FOR 3705   Y02027
CONTROL  EQU   4                        LEN OF CONTROL WORD    @G36XRBB
         EJECT
***********************************************************************
*                                                                     *
*        STORAGE DEFINITIONS                                     Y02027
*                                                                     *
***********************************************************************
         DS    0F                                                Y02027
GETPARM  DC    AL1(253)                 SUBPOOL NUMBER           Y02027
         DC    AL3(72)                  LENGTH OF SAVE AREA      Y02027
         SPACE 1                                                 Y02027
OPEN     DC    C'OPEN'                  OPEN KEY               @ZA02601
CLOS     DC    C'CLOS'                  CLOSE KEY              @ZA02601
QOT1     DC    C'QOT1'                  RTM CALL KEY           @ZA02601
CLRLOW   DS    0F                       MASK USED TO           @ZA02601
         DC    X'FFFFF000'              CLEAR 3 LOW BYTES      @ZA02601
SP231    DC    AL1(231)                 SUBPOOL 231              Y02027
HIBIT    DC    X'80'                    HIGH-ORDER BIT           Y02027
FOURK    DC    H'4096'                  LENGTH OF A PAGE       @OZ17630
ENDUCB   DC    X'FFFF'                  END-OF-UCB INDICATOR   @Z30AABG
         SPACE 1                                                 Y02027
PGFLG1   DC    XL1'20'                  PERFORM PGFREE         @Z40X9BG
PGFLG2   DC    XL1'80'                  LAST ENTRY             @Z40X9BG
         SPACE 1                                               @Z40X9BG
PATCH    DC    14H'0'                   PATCH AREA               Y02027
         EJECT                                                   Y02027
***************************************************************  Y02027
*                                                             *  Y02027
*        DSECT FOR RESOURCE MANAGER WORK AREA ADDRESSED BY    *  Y02027
*        RMPLRMWA IN THE RESOURCE MANAGER PARAMETER LIST.     *  Y02027
*                                                             *  Y02027
***************************************************************  Y02027
RTMWA    DSECT                          DSECT NAME               Y02027
SAVE13   DS    A                        SAVE AREA FOR CALLER'S   Y02027
*                                       REGISTER 13              Y02027
PTRSA    DS    A                        POINTER TO SAVE AREA     Y02027
         DS    6F                       UNUSED                   Y02027
         EJECT
CVT      DSECT
         CVT
         EJECT                                                 @ZA02601
         TLCBD                                                 @ZA02601
         EJECT
         IHARMPL
         EJECT
         IHAPSA
         EJECT
         TTCXD                                                   Y02027
         SPACE 3                                                 Y02027
         EJECT
         TPEBD
         SPACE 3
FIRSTPEB EQU   TCXPEBC-IEDQTCX-PEBLINK+IEDQPEB OFFSET IN TCX TO  Y02027
*                                       MAKE TCXPEBC THE PEBLINK Y02027
*                                       FIELD IN A DUMMY PEB     Y02027
         EJECT
         TAVTD                                                   Y02027
         EJECT
         TPEWAD                                                  Y02027
         EJECT
         TAIBD
         EJECT
         TRECBD                                                  Y02027
***************************************************************@ZA02601
*****    RCB EXTENSION FOR TCAM APPLICATION OPEN/CLOSE.        @ZA02601
***************************************************************@ZA02601
RCBPECB  DS    F                        APPLIC. PGM PECB ADDR. @ZA02601
RCBASCB  DS    F                        APPLIC. PGM ASCB ADDR. @ZA02601
RCBERRET DS    0F                       ERROR RTN ADDR         @ZA02601
RCBASID  DS    F                        APPLIC. PGM ASID ADDR. @ZA02601
RCBTCB   DS    F                        APPLIC. PGM TCB ADDR.  @ZA02601
RCBDCBMA DS    H                        DCBMACRF FROM APPLIC.  @ZA02601
RCBTCBFL DS    0X                       APPLIC. TCB FLAGS.     @ZA02601
RCBDCBDS DS    H                        DCBDSORG FROM APPLIC.  @ZA02601
RCBDSNM  DS    CL8                      PROCESS QUEUE NAME.    @ZA02601
RCBDEBAD DS    F                        DEB ADDR FOR APPL DCB  @ZA02601
RCBDCBBU DS    H                        DCBBUFL FROM APPLIC.   @ZA02601
RCBDCBLR DS    H                        DCBLRECL FROM APPLIC.  @ZA02601
RCBDCBOP DS    X                        DCBOPTCD FROM APPLIC.  @ZA02601
RCBDCBRF DS    X                        DCBRECFM FROM APPLIC   @ZA02601
RCBDCBF1 DS    X                        DCBFLAG1 FROM APPLIC   @ZA02601
RCBERR   DS    X                        ERROR INDICATOR        @ZA02601
RCBJOBNM DS    CL8                      JOBNAME                @ZA02601
RCBSAVE  DS    18F                      SAVE AREA FOR IEDQEU   @ZA02601
RCBEND   DS    0X                       END OF DSECT.          @ZA02601
         ORG   RCBTCB                                          @ZA02601
RCBDEBTA DS    H                        OFFSET IN T.T. FOR     @ZA02601
*                                       ENTRY                  @ZA02601
RCBOPECB DS    0AL3                     OPCTL ECB ADDRESS      @ZA02601
RCBDEBPW DS    AL3                      ADDR. OF PEWA.         @ZA02601
RCBDEBPC DS    AL3                      ADDR. OF PCB.          @ZA02601
         DS    2F                       QNAME                  @ZA02601
RCBSQ    DS    0X                       SECURE QUEUE FLAG      @ZA02601
RCBAVTBT DS    X                        AVTBIT1 ON RETURN      @ZA02601
*                                       FROM IEDQEU            @ZA02601
RCBPEBAD DS    AL3                      READ-AHEAD QCB ADDR.   @ZA02601
RCBSIZE  EQU   RCBEND-RECBKEY           SIZE OF DSECT.         @ZA02601
         EJECT
         TTCBD                                                   Y02027
         EJECT
UCB      DSECT                                                   Y02027
         IEFUCBOB                                                Y02027
         EJECT                                                 @Z40X9BG
         IECDVOID                                              @Z40X9BG
         EJECT                                                 @Z40X9DG
         IECDIOSB                                              @G36XRBB
         EJECT                                                 @G36XRBB
*        SRB DSECT                                             @Z40X9DG
         SPACE 2                                               @Z40X9DG
         IHASRB                                                @Z40X9DG
         EJECT                                                 @Z40X9DG
*        DSECT FOR FOUR-BYTE PREFIX TO SRB                     @Z40X9DG
         SPACE 1                                               @Z40X9DG
PSRBSECT DSECT                                                 @Z40X9DG
PSRBTSFL DS    XL1                      TEST AND SET FLAG      @Z40X9DG
PSRBLINK DS    AL3                      LINK TO NEXT SRB       @Z40X9DG
PSRBSRB  EQU   *                        START OF SRB           @Z40X9DG
PSRBSIZE EQU   *-PSRBSECT               SIZE OF PREFIX         @Z40X9DG
         SPACE 4                                               @Z40X9BG
NUMSRBS  EQU   8                        NUMBER OF SRB'S WITH   @Z40X9BG
*                                       PREFIX IN ONE BLOCK    @Z40X9BG
SIZESRB  EQU   SRBSIZE+PSRBSIZE         SIZE OF ONE SRB +      @Z40X9BG
*                                       PREFIX                 @Z40X9BG
SRBBLKSZ EQU   NUMSRBS*SIZESRB          SIZE OF SRB BLOCK      @Z40X9BG
         EJECT
         IECDIOCM ,                                              Y02027
         EJECT
         IECDATB ,                                               Y02027
         SPACE 3
         END
