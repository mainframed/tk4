HI    TITLE '''IEDQHI'' - SYSTEM DELAY SUBTASK'
IEDQHI   CSECT
*A212000,242000,366000,380000                                    S22025
*C304000                                                         S22025
*C303000,318000,796000                                           S22025
*C692000                                                        SA59011
*A412000,896500,898000                                           Y05330
*C367470,376000,412000,426000,534000,548000,570000               Y05330
*D230000,258000,367500,428000-444000,536000-538000,550000-552000 Y05330
*D880000-884000                                                  Y05330
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
*TITLE   'IEDQHI' - SYSTEM DELAY SUBTASK                              *
*                                                                     *
*FUNCTION -- THIS SUBTASK CAUSES THE SYSTEM TO DELAY (REFERENCE,      *
*   INTRO MACRO, INTVAL=INTEGER) ACCORDING TO A SPECIFIED NUMBER      *
*   OF SECONDS BY HOLDING LCBS PASSED TO IT ON A DELAY Q UNTIL ALL    *
*   LCBS ARE THUS HELD, AT WHICH TIME A REQUEST FOR THE SPECIFIED     *
*   INTERVAL IS PASSED TO TIME DELAY.  AT END OF TIME INTERVAL,       *
*   THE LCBS ARE REMOVED FROM THE SYSDELAY Q AND EACH LCB IS POSTED   *
*   TO ITSELF TO ACTIVATE EACH LINE.                                  *
*                                                                     *
*ENTRY POINTS -- THERE IS ONLY ONE ENTRY POINT, CALLED BY DISPATCHER. *
*        'IEDQHI' - ACTIVATED BY OPERATOR CONTROL WHEN IT RECEIVES    *
*   A REQUEST FOR A SYSTEM DELAY.                                     *
*                                                                     *
*INPUT -- WHEN CALLED FROM THE DISPATCHER, R13 MUST HAVE THE ADDRESS  *
*   OF AVTSAVE2, R1 HAS THE ADDRESS OF AN ELEMENT, AND R7 HAS THE     *
*   ADDRESS OF THE SYSDELAY QCB.                                      *
*                                                                     *
*   THERE ARE 3 TYPES OF ELEMENTS PASSED IN R1. --                    *
*                                                                     *
*   IF PRIORITY FIELD IS 'PRISYSDL' (REFERENCE, TPRIOR MACRO), THE    *
*   ELEMENT IS THE SYSTEM DELAY REQUEST ELEMENT (WHICH IS ACTUALLY    *
*   IN THE OPERATOR COLTROL 'LITTLE AVT').  NO OTHER ELEMENT          *
*   BEING PASSED TO THIS SUBTASK MAY HAVE THIS PRIORITY.              *
*                                                                     *
*   THE ELEMENT IN R1 MAY BE THE SYSTEM DELAY QCB.  THIS WAS          *
*   ORIGINALLY POSTED BY SYSDELAY TO THE TIME Q TO INITIATE TIMING    *
*   OF THE SYSTEM INTERVAL.  WHEN THE TIME HAS ELAPSED, TIME DELAY    *
*   POSTS THE SYSTEM DELAY QCB BACK TO SYSTEM DELAY.  WHEN THIS QCB   *
*   IS RECEIVED, THE LCBS ARE TO BE ACTIVATED.                        *
*                                                                     *
*   THE ELEMENT IN R1 MAY BE A SINGLE LCB.  THIS LCB MUST HAVE        *
*   BEEN ACTIVE WHEN THE ORIGINAL REQUEST FOR SYSTEM DELAY CAME IN.   *
*   RECEIVE SCHEDULER POSTS THIS LCB TO SYSDELAY WHEN IT FINDS        *
*   THE SYSDELAY BIT ON (AVTBIT1,AVTDLAYN) TO HAVE THE LINE SHUT      *
*   DOWN AND THE LCB KEPT ON THE SYSDELAY QUEUE.  WHEN ALL            *
*   APPROPRIATE LCBS HAVE THUS BEEN SURRENDERED TO THE SYSDELAY Q,    *
*   THE QCB IS POSTED TO TIME DELAY TO START TIMIMG THE SYSTEM        *
*   INTERVAL.                                                         *
*                                                                     *
*OUTPUT -- TWO MESSAGES ARE DISPLAYED ON THE OPERATOR'S CONSOLE.      *
*                                                                     *
*   'IED080I START OF TCAM SYSTEM DELAY', INDICATES WHEN ALL NON-     *
*   DIAL LINES ARE HELD FOR THE INTERVAL SPECIFIED ON INTRO MACRO     *
*   INTVAL KEYWORD.                                                   *
*                                                                     *
*   'IED081I END OF TCAM SYSTEM DELAY', INDICATES ALL NON-DIAL        *
*   LINES ARE BEING REACTIVATED TO RESUME NORMAL TRAFFIC.             *
*                                                                     *
*EXTERNAL ROUTINES -- CALLS ARE MADE TO TWO ROUTINES --               *
*        'IEDQHG01' - ADD ELEMENT TO TIME DELAY Q                     *
*        'IEDQHG02' - REMOVE ELEMENT FROM TIME DELAY Q                *
*                                                                     *
*EXITS-NORMAL -- EXIT IS ALWAYS TO DISPATCHER, 'DSPDISP', EXCEPT      *
*   WHEN POSTING ALL LCBS TO THEMSELVES AT 'DSPCHAIN'.                *
*                                                                     *
*EXITS-ERROR -- N/A                                                   *
*                                                                     *
*TABLES/WORK AREAS -- SYSTEM DELAY QCB IS INCLUDED AT START OF MODULE.*
*   THE LCBLINK FIELD OF THE LCB IS MODIFIED TO CHAIN LCB ONTO        *
*   SYSDELAY Q.  AVT IS REFERENCED TO GET ADDR OF IEDQHG01 AND 02.    *
*                                                                     *
*ATTRIBUTES -- REUSABLE, OPTIONALLY RESIDENT, PROBLEM PROGRAM MODE,   *
*   NON-REFRESHABLE                                                   *
*                                                                     *
*NOTES -- THE OPERATION OF THIS MODULE DOES NOT DEPEND UPON A         *
*   PARTICULAR INTERNAL REPRESENTATION OF THE EXTERNAL CHARACTER SET. *
*                                                                     *
*   THIS MODULE IS OPTIONALLY LOADED AT INTRO EXECUTION TIME BY       *
*   IEDQOS IF AVTINTLV IS NON-ZERO.  AVTINTLV CONTAINS THE VALUE      *
*   SPECIFIED ON INTRO WITH 'INTVAL=INTEGER' OPERAND.                 *
*                                                                     *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
R15      EQU   15                       TEMPORARY REG
R14      EQU   14                       RETURN ADDR
R13      EQU   13                       SAVEAREA POINTER (SAVE2)
RAVT     EQU   13                       AVT DSECT BASE
R12      EQU   12
RBASE    EQU   12                       PROGRAM BASE
R11      EQU   11
RDISP    EQU   11                       DISPATCHER ENTRY
R10      EQU   10
RDCB     EQU   10                       DCB DSECT BASE
R9       EQU   9                        UNUSED
R8       EQU   8
RSW      EQU   8                        BRANCH SWITCH
R7       EQU   7
RQCB     EQU   7                        QCB DSECT BASE
R6       EQU   6
REXIT    EQU   6                        SUBROUTINE RETURN ADDRESS
R5       EQU   5
RDEB     EQU   5                        DEB DSECT BASE
R4       EQU   4
RLCB     EQU   4                        LCB DSECT BASE
R3       EQU   3
RTCB     EQU   3                        TCB DSECT BASE
R2       EQU   2                        UNUSED
R1       EQU   1                        PARAMETER PASSER
R0       EQU   0                        TEMPORARY
*
COUNT    EQU   4                                                 S22025
EIGHT    EQU   8                                                 S22025
ONE      EQU   1                                                 S22025
ENDILIST EQU   X'FE'                    END OF INVITATION LIST   S22025
         USING DELAYQCB,RBASE           PROGRAM BASE
         USING IEDQLCB,RLCB
         USING IEDQDEB,RDEB
         USING IEDQQCB,RQCB
         USING IHADCB,RDCB
         USING IEDQTCB,RTCB
         USING IEDQDISP,RDISP
         USING IEDQAVTD,RAVT
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
IEDQHI   CSECT
*
*                       SYSTEM DELAY QCB
*
DELAYQCB DC    X'02',AL3(*-1)           KEY + QCBADDR
PRI      DC    X'00',AL3(0)             PRIORITY + LINK
         DC    A(SYSDSTCB-DELAYQCB)     STCB ADDRESS
NOEXTENT DC    H'0'                     NUMBER OF EXTENTS
LCBFIXR  DC    AL2(LCBFLAG1-IEDQLCB)    OFFSET INTO LCB OF IOB
TIME     DC    H'0'                     TIME INTERVAL OF SYS DELAY
         DC    X'00'                    INDEX - INDICATES QCB TO TIME
*                                         DELAY SUBTASK
         DC    4X'00'                   UNUSED
TIMEFLAG DC    X'00'                    X'02' BIT ON, QCB ON TIME Q
SYSDELQ  DC    A(0)                     CHAIN OF LCBS ON SYSDELAY Q
         DC    A(0)                     TIME Q LINK FIELD
*
IEDQHI   IEDHJN ,                                                S22025
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
*                       SYSTEM DELAY STCB
*
         DS    0H                       HALFWORD BOUNDARY FOR STCB
SYSDSTCB DC    AL1(DSPMCPL2),AL1(0)     STCB FOR SYSTEM DELAY    S22025
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
*                       SYSTEM DELAY SUBTASK ENTRY POINT
*
         LA    RBASE,0(,RQCB)           SET PROGRAM BASE, AND CLEAR
*                                         HIGH BYTE FOR
*                                         ADDRESS COMPARE
         LA    RLCB,0(,R1)              CLEAR HIGH BYTE OF ELE ADDR
         L     RDISP,AVTEA              ADDRESS OF DISPATCHER
*
* WHAT KIND OF ELEMENT WAS PASSED IN R1 -
*   SYSTEM DELAY REQUEST ELEMENT FROM OPERATOR CONTROL
*   SYSTEM DELAY QCB BEING RETURNED FROM TIME Q AT END OF SYSTEM
*     INTERVAL.
*   AN LCB THAT NEEDS SHUTTING DOWN, FROM SCHEDULER
*
         CLI   LCBPRI-IEDQLCB(R1),PRISYSDL IS THIS THE SYSTEM DELAY
*                                         ELEMENT FROM OPERATOR CTL
         BE    OPCTL                      YES, START SYSTEM DELAY
*                                         NO, SOMETHING ELSE
         CR    RBASE,RLCB               IS ELE MY OWN QCB FROM TIME Q
         BE    MYQCB                      YES, END OF SYSTEM INTERVAL
*                                         NO, MUST BE AN LCB
         TM    LCBSTAT1,LCBFREEN        IS LCB FREE              S22025
         BZ    CONTDELY                 NO-BR                    S22025
         SR    R3,R3                    CLEAR REG FOR INDEXING   S22025
         IC    R3,LCBUCBX               REL LINE-1               S22025
         SLL   R3,2                     MULTIPLY BY FOUR         S22025
         L     R6,LCBDCBPT              LOAS THE DCB ASDRESS     S22025
         L     R6,DCBINVLI-IHADCB(R6,R3) GET INVITATION LIST ADDRS22025
*                                       FOR THIS LINE            S22025
         CLI   COUNT(R6),AVTEZERO       CURRENTLY SENDING        S22025
         BNE   NOSET01                  YES DONT SET SYSDELAY    S22025
         TM    LCBSTAT2,LCBSNDPR        RECIEVE SIDE STOPPED     S22025
         BO    NOSET01                  YES-BR                   S22025
         LA    R3,EIGHT(R6)             GET THE ADDRESS OF THE   S22025
*                                       FIRST INVITATION LIST ENTS22025
         SR    R5,R5                    CLEAR WORK REG           S22025
         IC    R5,TWO(R6)               GET THE SIZE OF EACH ENTYS22025
FNDILST  EQU   *                                                 S22025
         LR    R8,R5                    COPY SIZE                S22025
         BCTR  R8,0                     REDUCE THE ZIZE BY 1     S22025
         IC    R8,AVTEZERO(R8,R3)       PICK UP THE INDEX TO THE S22025
*                                       TNT OFFSET               S22025
         AR    R8,R8                    DOUBLE TO COMPUTE THE    S22025
*                                       ILIST OFFSET             S22025
         LR    R3,R6                    COPY ADDRESS OF THE ILISTS22025
         SR    R3,R8                    SUBTRACT THE INDEX FROM  S22025
*                                       THE BEGINNING ADDRESS    S22025
         LR    R10,R1                   SAVE REG 1 ACROSS TNT    S22025
         LH    R1,AVTEZERO(R3)          GET THE TNT OFFSET       S22025
         L     R15,AVTRNMPT             GET THE TNT CONVERSION   S22025
*                                       ROITINE ADDR             S22025
         BALR  R14,R15                  LINK TO IT               S22025
         L     RQCB,AVTEZERO(R1)        LOAD DESTINATION QCB ADDRS22025
         SR    R0,R0                    CLEAR                    S22025
         SR    R1,R1                    WORK REGS                S22025
         SR    R15,R15                  WORK REGS                S22025
         IC    R1,QCBSCBOF              GET SCB OFFSET           S22025
         IC    R0,AVTSCBSZ              GET SCB SIZE             S22025
         MR    R0,R0                    SIZE X OFFSET            S22025
         L     R15,LCBSCBDA-1           SCB DIRECTORY            S22025
         LA    R15,AVTEZERO(R1,R15)     GET SCB ADDR             S22025
         LR    R1,R10                   RESTORE 1                S22025
         TM    SCBQTYPE-IEDQSCB(R15),SCBBFMM MIDDLE OF MSG ON    S22025
         BO    NOSET01                  YES DONT SET SYS DELAY   S22025
         AR    R8,R5                    INCREMENT CURRENT ILIST  S22025
*                                       POINTER                  S22025
         CLI   AVTEZERO(R8),ENDILIST    END OF INVITATION LIST   S22025
         BE    CONTDELY                 YES BRANCH               S22025
         CLI   ONE(R8),ENDILIST         ENE OF INVITATION LIST   S22025
         BNE   FNDILST                  COMPUTE NEXT SCB ADDR    Y05330
CONTDELY EQU   *                                                 S22025
         NI    LCBSTAT1,AVTEFF-(LCBRECVN+LCBSENDN) MARK LCB AS STOPPED
         BAL   REXIT,HANGLCB            GO HANG LCB ON SYSDEL Q
*
EXIT     EQU   *
         ICM   R15,HLF,AVTOPCNT         HAVE ALL LCB'S STOPPED   Y05330
         BZ    CALLTIME                   YES, WAIT ON TIME Q
*                                         NO, NOT ALL LCBS IN YET
NOSET01  EQU   *                                                 S22025
         B     DSPDISP                  RETURN TO DISPATCHER
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
* A SYSTEM DELAY REQUEST ELEMENT IS RECEIVED FROM OPERATOR CONTROL
* START GRABBING LCBS.
*
OPCTL    EQU   *
         XC    AVTOPCNT,AVTOPCNT        CLEAR COUNTER
         OI    AVTBIT1,AVTDLAYN         TURN ON SYSTEM DELAY BIT
*
* HUNT FOR LCBS. TCB POINTS TO DEB CHAIN, DEB POINTS TO DCB, DCB
* POINTS TO SERIES OF LCBS.  GO FIND THEM.
*
         L     RTCB,AVTTCB              GET ADDR OF TCAM TCB
         LA    RDEB,TCBDEB-DEBOFF       SET FOR LOOP START       Y05330
BUMPDEB  EQU   *                                                 Y05330
         ICM   RDEB,AD,DEBDEBAD-DEBFIXR+ONE FIRST/NEXT DEB       Y05330
         BZ    EXIT                     BRANCH IF END OF CHAIN   Y05330
DEBLOOP  EQU   *
         L     RDCB,DEBDCBAD-DEBFIXR    GET ADDR OF DCB
         TM    DCBOFLGS,OPENDCB         IS DCB OPEN
         BZ    BUMPDEB                    NO, FORGET THIS DCB
*                                         YES, CONTINUE
         TM    DCBDSORG+1,LINEDCB       IS THIS A LINE DCB DSORG=TX
         BZ    BUMPDEB                  BRANCH NOT LINE DCB      Y05330
*
* A LINE DCB HAS BEEN FOUND.  FIND ITS LCBS.
*
ISLINE   EQU   *
         L     RLCB,DCBIOBAD            GET ADDR OF PSEUDO IOB
         SH    RLCB,LCBFIXR             GET ADDR OF PSEUDO LCB
         MVC   NOEXTENT+1(1),DEBNMEXT-DEBFIXR GET NO. EXTENTS
LCBLOOP  EQU   *
         SR    R15,R15
         IC    R15,DCBEIOBX             GET SIZE OF AN LCB
         AR    RLCB,R15                 BUMP FROM PSEUDO TO 1ST
*                                         (OR NEXT) LCB
         CLI   LCBRSKEY,RECSCHED        IS RECEIV SCHEDULER AT TOP
         BE    LEASED                     YES, LINE IS LEASED
*                                         NO, GUESS AGAIN
         CLI   LCBRSKEY,BUFSCHED        IS BUFFERED SCHEDULER AT TOP
         BE    LEASED                     YES, LINE IS LEASED
*                                         NO, NOT LEASED
*
NEXTLCB  EQU   *
* FINISHED ONE LCB ON THIS DCB.  FIND OTHER LCBS OFF THIS SAME DCB.
*
         LH    R15,NOEXTENT             GET NO. OF LCBS REMAINING
         BCT   R15,LCBLOOPR             SUBTRACT THE ONE LCB JUST DONE
*                                       IS THERE ANOTHER LCB TO DO
*                                         YES, BRANCH
*                                         NO, CONTINUE
         B     BUMPDEB                  DONE ALL LCBS ON THIS DEB
*                                       GO GET NEXT DEB ON DEB CHAIN
LCBLOOPR EQU   *
         STH   R15,NOEXTENT             SAVE DECREMENTED LCB COUNTER
         B     LCBLOOP                  GO GET NEXT LCB
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
* SYSTEM DELAY QCB HAS BEEN RETURNED FROM TIME DELAY Q.  THIS SYSTEM
* INTERVAL IS UP.  FIND ALL LCBS ON SYSDELAY Q, REMOVE THEM, POST
* THEM TO THEMSELVES, REACTIVATING THE SYSTEM.
*
MYQCB    EQU   *
         NI    AVTBIT1,AVTDLAYF         TURN OFF SYSTEM DELAY BIT
         WTO   'IED081I END OF TCAM SYSTEM DELAY',                     *
               ROUTCDE=2,DESC=6
*
         ICM   RLCB,AD,SYSDELQ+ONE      ANY LCB'S ON QUEUE       Y05330
         BZ    DSPDISP                    NO, NONE HERE, RETURN TO
*                                           DISPATCHER
*                                         YES, SYSDELAY Q HAS LCBS
ANOTLCB  EQU   *                        GO GET LCBS
         STCM  RLCB,AD,LCBQCBA          POST LCB TO SELF
         MVI   LCBPRI,PRILNFRE          SET PRIORITY
         LR    R1,RLCB                  REMEMBER WHICH LCB THIS ONE
*                                         WAS, INCASE IT IS THE LAST
         ICM   RLCB,AD,LCBLINK          NEXT LCB ADDRESS IF ONE  Y05330
         BNZ   ANOTLCB                    YES, GO POST NEW LCB
*                                         NO, NO MORE LCBS
         STCM  RLCB,AD,LCBLINK-IEDQLCB(R1) CLEAR LINK
*                                         FIELD IN LAST LCB FROM Q
         L     R1,SYSDELQ               GET FIRST LCB OF A CHAIN,
*                                         ALL TO BE POSTED TO DISPATCH
         XC    SYSDELQ,SYSDELQ          CLEAR DELAY QUEUE
         BAL   R14,DSPCHAIN     POST ALL LCBS TO THEMSELVES    @Y17XARX
*                                       EXIT TO DISPATCHER
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
* LAST LCB HAS BEEN FOUND AND STOPPED.  ALL ARE ON SYSDELAY Q.
* PICK UP LENGTH OF SYSTEM INTERVAL FROM AVT, POST MY QCB TO TIME
* DELAY, REQUESTING NOTIFICATION OF WHEN TIME INTERVAL IS UP.
*
CALLTIME EQU   *
         WTO   'IED080I START OF TCAM SYSTEM DELAY',                   *
               ROUTCDE=2,DESC=6
*
         MVC   TIME,AVTINTLV            GET NUMBER OF SECONDS OF
*                                         SYSTEM DELAY INTERVAL
         L     R15,AVTHG01              GET ADDR OF TIME DELAY
         LR    R1,RBASE                 PASS ADDR OF MY QCB TO TIME Q
         MVI   PRI,PRISYSDL-4           POST MY QCB TO TIME DELAY
*                                         USING LOWER PRIORITY THAN
*                                         WHEN REQUESTING SYS DELAY
*                                       (CANNOT USE SAME PRI, THAT IS
*                                       HOW I TELL THE SYSDELAY
*                                       REQUEST ELE FROM OTHERS)
         BALR  R14,R15                  PUT MY QCB ON TIME DELAY Q
*
         B     DSPDISP                  RETURN TO DISPATCHER.  SYSTEM
*                                         WAITS FOR THIS QCB TO COME
*                                         BACK FROM TIME DELAY
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
* REXIT HAS RETURN ADDRESS
HANGLCB  EQU   *
         NI    LCBSTAT1,X'FF'-LCBFREEN  LCB NO LONGER FREE
         MVI   LCBPRI,PRILCBDL          MARK LCB AS BEING ON
*                                         SYSTEM DELAY QUEUE
         MVC   LCBLINK,SYSDELQ+1        HANG LCB ONTO
         ST    RLCB,SYSDELQ               SYSTEM DELAY QUEUE
DECCOUNT EQU   *
         LH    R15,AVTOPCNT             GET NUMBER OF LCBS TO BE
         BCTR  R15,0                      PUT ON SYSDELAY Q, SUB-
*                                         TRACT ONE FOR LCB JUST
*                                         PUT ON Q, AND RESTORE
         STH   R15,AVTOPCNT               REMAINING COUNT
         BR    REXIT                    LCB PROCESSED, RETURN TO
*                                         MAIN ROUTINE
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
LEASED   EQU   *
         LH    R15,AVTOPCNT             GET PREVIOUS COUNT
         LA    R15,1(,R15)              BUMP IT BY ONE
         STH   R15,AVTOPCNT             SAVE BUMPED COUNT
         TM    LCBSTAT1,LCBFREEN        IS LINE FREE
         BO    FREE                       YES, LINE IS FREE
*                                         NO, LINE IS NOT FREE
         TM    LCBSTAT1,LCBRECVN+LCBSENDN IS LINE SENDING OR
*                                         RECEIVING, OR STOPPED
         BNM   STOPPED                  LINE IS STOPPED IF ZERO SA59011
*                                        OR CU NOT-OPERATIONAL
*                                        WAS REC'D ON OPEN - IF 03
*                                       LINE IS NOT STOPPED.CONTINUE
         TM    LCBSTAT1,LCBOCNI         IS A STOPLINE BEEN REQUESTED
         BO    STOPPED                    YES, ASSUME LINE STOPPED
*                                         NO, LINE IS NOT STOPPED
         CLI   LCBCPA+24,CCWPOLL        IS LINE AUTOPOLL
         BE    AUTOPOLL                   YES, LINE IS AUTOPOLL
*                                         NO, LINE IS NOT AUTOPOLL
         CLI   LCBCPA+32,CCWSENSE       IS LINE STOP/START CONTENTION
         BE    STARTSTP                   YES, START/STOP
*                                         NO, NOT START/STOP
         CLI   LCBCPA+24,CCWSENSE       IS TERMINAL WORLD TRADE
         BE    STARTSTP                   YES, IT IS.            X01004
*                                         NO, GUESS AGAIN
         TM    LCBSTAT2,LCBSYNC         IS LINE BISYNC
         BO    BISYNC                     YES, BISYNC
*                                         NO, NOT BISYNC
         B     NEXTLCB                  NONE OF ABOVE, FORGET THIS LCB
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
FREE     EQU   *
         TM    TIMEBYTE(RLCB),TIMEBIT   IS LCB ON TIME Q
         BZ    HANGLCBX                   NO, LCB IS NOT ON TIME Q
*                                         YES, LCB IS ON TIME Q
         L     R15,AVTHG02              GET TIME DELAY REMOVE ENTRY
         LR    R1,RLCB                  PASS ADDR OF LCB TO BE REMOVED
         BALR  R14,R15                  REMOVE LCB FROM TIME Q
*
         CLI   LCBRSKEY,RECSCHED        IS IT A LEASED LCB
         BNE   NOMOVE                     NO, SKIP MOVE SCHEDULER
*                                         YES, LEASED LCB
         LA    R7,LCBRSKEY              LINK RECEIVE SCHEDULER BACK
         LR    R1,R7                      INTO STCB CHAIN
         BAL   R14,DSPPRIOR             MOVE SCHEDULER
*
NOMOVE   EQU   *
HANGLCBX EQU   *
         BAL   REXIT,HANGLCB            GO PUT LCB ON SYSDELAY Q
*
         B     NEXTLCB                  GO PROCESS THE NEXT LCB
*
AUTOPOLL EQU   *
         MVI   LCBCPA+32,CCWNOP         KILL POLL WITH PAIR OF
         MVI   LCBCPA+56,CCWNOP           NO-OP CCWS
         B     NEXTLCB                  FORGET LCB FOR NOW, IT WILL
*                                         COME THRU AGAIN LATER
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
STARTSTP EQU   *
         CLI   LCBCSWSV,AVTEFF          IS TERMINAL ACTIVE       X01004
         BE    IOHALT                     NO, STOP I/O
*                                         YES, FORGET LCB FOR NOW,
*                                           IT WILL COME THRU AGAIN
         B     NEXTLCB                  GO PRECESS NEXT LCB
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
BISYNC   EQU   *
         CLI   LCBCPA+16,CCWPREP        PREPARE
         BNE   NEXTLCB                    NO, FORGET FOR NOW
*                                         YES, CONTINUE
         TS    LCBTSTSW                 IS LINE FREE
         BNZ   NEXTLCB                    NO, BUSY,WAIT TILL NEXT TIME
*                                         YES, FREE
IOHALT   EQU   *
         SR    R15,R15                  CLEAR INDEX REG
         IC    R15,LCBUCBX              GET INDEX TO UCB
         SLL   R15,TIMES4               MULTIPLY BY 4, THE NO. BYTES
*                                         IN EACH DEB EXTENT WHICH
*                                         HAS ADDR OF UCB
         L     R1,LCBDCBPT              GET ADDR OF DCB
         L     R1,DCBDEBAD-IHADCB(R1)   GET ADDR OF BASIC DEB
         L     R1,DEBUCBAD-DEBFIXR-IEDQDEB(R1,R15) GET UCB ADDR
         LA    R1,0(,R1)                CLEAR HIGH BYTE
         IOHALT (1)                     STOP THAT LINE
*
*                                       FORGET LCB FOR NOW, IT WILL
*                                         COME THRU AGAIN LATER
         B     NEXTLCB                  GO PRECESS NEXT LCB
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
STOPPED  EQU   *
         BAL   REXIT,DECCOUNT           DO NOT COUNT IT
*
         B     NEXTLCB                  GO PROCESS NEXT LCB
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
*                       EQUATES
*
RECSCHED EQU   X'0C'
BUFSCHED EQU   X'1A'
TIMES4   EQU   2                        SHIFT COUNT
LINEDCB  EQU   X'40'                    DCBDSORG+1, DSORG=TX
OPENDCB  EQU   X'10'                    CHECK FOR OPEN DCB
TWO      EQU   2                        SWITCH
TIMEBYTE EQU   X'17'                    OFFSET INTO TIME DELAY ELE
*                                         OF FLAG BYTE
TIMEBIT  EQU   X'02'                    BIT ON, ELE ON TIME Q
HLF      EQU   3                        MASK TO ICM 2 BYTES      Y05330
AD       EQU   7                        MASK TO ICM/STCM ADDRESS Y05330
         EJECT
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
*                       DSECTS
*
         TTCBD
         TSCBD                                                   S22025
         TDEBD
         TQCBD
         TLCBD
         TDISPD
         DCBD DSORG=TX
         TPRIOR
         TCCWD
         TAVTD 2
DEBFIXR  EQU   DEBNMSUB-IEDQDEB         ADJUST TCAM DEB TO OS    Y05330
DEBOFF   EQU   DEBDEBAD-DEBNMSUB        LOOP CONTROL             Y05330
         END
