         TITLE 'IEDAYN - TSOUTPUT SUBTASK'
IEDAYN   CSECT
***********************************************************************
*A860000,913000,894000                                         @G36XRYP
*C195000,216000,241000,246000,530000,546000,710000,715000      @G36XRYP
*C789000,805000,211000,681000                                  @G36XRYP
*D859000,861000-869000,920000-921000,923000-924000,125000      @G36XRYP
*A142500                                                       @OZ27604
*A394240,398500,402740,407200                                  @Z37XBYK
*D430500                                                       @Z37XBYK
*C020500,442500                                                @OZ28765
*A286500                                                       @OZ30295
*C288500                                                       @OZ30295
*D290000-292500                                                @OZ30295
*A215500                                                       @OZ30811
*C171500-174500                                                @OY20542
*A054500                                                       @OY20501
*C154500-155500                                                @OY20501
***********************************************************************
*                                                                     *
* MODULE NAME = IEDAYN          (TCAM,TSO)                     @G36XRYP
*                                                                     *
* DESCRIPTIVE NAME = TSOUTPUT SUBTASK FOR 3270 TERMINALS              *
*                                                                     *
* COPYRIGHT = NONE                                                    *
*                                                                     *
* STATUS = VERSION 10.0                                        @G36XRYP
*                                                                     *
* FUNCTION = IEDAYN COMMUNICATES WITH TSO TO RECEIVE DATA READY       *
*            FOR TRANSMISSION TO 3270 TERMINALS.  DATA RECEIVED IS    *
*            POSTED TO THE CORRECT QCB FOR TRANSMISSION AFTER         *
*            BEING EDITED.                                            *
*                                                                     *
* NOTES = SEE BELOW                                                   *
*                                                                     *
*   DEPENDENCIES = NONE                                               *
*                                                                     *
*   RESTRICTIONS = NONE                                               *
*                                                                     *
*   REGISTER CONVENTIONS = 2  GMAIN BASE                              *
*                          3  SCB BASE                                *
*                          4  LCB BASE                                *
*                          6  BUFFER BASE                             *
*                          7  QCB BASE                                *
*                          8  TCB BASE                                *
*                          9  DCB BASE                                *
*                          11 DISPATCHER BASE                         *
*                          12 IEDAYN BASE                             *
*                          13 SAVE AREA BASE                          *
*                          14 RETURN REGISTER                         *
*                                                                     *
*   PATCH LABEL = PATCH                                        @OZ28765
*                                                                     *
* MODULE TYPE = CONTROL                                               *
*                                                                     *
*   PROCESSOR = ASSEMBLER F                                           *
*                                                                     *
*   MODULE SIZE = N/A                                                 *
*                                                                     *
*   ATTRIBUTES = SERIALLY REUSEABLE                                   *
*                                                                     *
* ENTRY POINT = IEDAYN                                                *
*   PURPOSE = ENTRY WITH BUFFER TO CAUSE TSO MESSAGE TO BE MARKED     *
*             SENT OR ERB TO REQUEST TSO MESSAGE BUFFERS              *
*   LINKAGE = STANDARD LINKAGE FROM THE TCAM DISPATCHER               *
* ENTRY POINT = IEDAYN02                                              *
*   PURPOSE = ENTRY WITH BUFFER FROM IEDQGB                           *
*   LINKAGE = STANDARD LINKAGE FROM THE TCAM DISPATCHER               *
*                                                                     *
* INPUT = BUFFER TO CAUSE TSO MESSAGE TO BE MARKED SENT               *
*         ERB TO REQUEST TSO MESSAGE BUFFERS                          *
*         BUFFER FROM IEDQGB FOR ADDITION TO BUFFERS ALREADY          *
*         CHAINED                                                     *
*                                                                     *
* OUTPUT = TSO MESSAGE MARKED SENT                                    *
*          TCAM BUFFER CHAIN OF BUFFERS TO BE TRANSMITTED             *
*                                                                     *
* EXIT-NORMAL = TO TCAM DISPATCHER                                    *
*               TO IEDAYM                                             *
*                                                                     *
* EXIT-ERROR = NONE                                                   *
*                                                                     *
* EXTERNAL REFERENCES = SEE BELOW                                     *
*                                                                     *
*   ROUTINES = IEDAYOO (VIA SVC 65) TO COMMUNICATE WITH TSO           *
*   DATA AREAS = TCAM BUFFER                                          *
*                TSO BUFFER                                           *
*                GMAIN EDIT WORK AREA                                 *
*   CONTROL BLOCKS = AVT                                              *
*                    LCB                                              *
*                    QCB                                              *
*                    SCB                                              *
*                    TIOCRPT                                          *
*                    TJB                                              *
*                    TSB                                              *
*                    TSCVT                                            *
*                                                                     *
* TABLES = NONE                                                       *
*                                                                     *
* MACROS = NONE                                                       *
*                                                                     *
***********************************************************************
         ENTRY IEDAYN02
         USING AVTSAVE2,R13
         USING IEDQTSI,RTSI
         USING IEDQDISP,RDISP
         USING IEDQLCB,RLCB
         USING IEDQSCB,RSCB
         USING IEDQQCB,RQCB
R0       EQU   0
R1       EQU   1                        TERMINAL ENTRY BASE
R3       EQU   3
R5       EQU   5
R8       EQU   8
R9       EQU   9
R10      EQU   10
R12      EQU   12                       IEDAYN BASE
R13      EQU   13                       SAVE AREA BASE
R14      EQU   14                       RETURN REGISTER
R15      EQU   15
ONE      EQU   1                        INCREMENT VALUE        @OY20501
RTSI     EQU   2                        TSINPUT BASE
RSCB     EQU   3                        SCB BASE
RLCB     EQU   4                        LCB BASE
RPRF     EQU   6                        BUFFER BASE
RQCB     EQU   7                        QCB BASE
RTSB     EQU   8                        TSB BASE
RDCB     EQU   10                       DCB BASE
RDISP    EQU   11                       DISPATCHER BASE
RBASE    EQU   12                       IEDAYO BASE
BAKER    EQU   11                       QTIP ENTRY CODE
CHARLIE  EQU   12                       QTIP ENTRY CODE
DOG      EQU   13                       QTIP ENTRY CODE
EASY     EQU   14                       QTIP ENTRY CODE
FOX      EQU   15                       QTIP ENTRY CODE
TEN      EQU   16                       QTIP ENTRY CODE
TRMBUFSZ EQU   X'80'                    BUFSIZE SPECIFIED
XXCTUSED EQU   X'80'                    DISABLED COUNT IN USE
DELAY    EQU   X'02'                    TIME DELAY FLAG TEST
DYNMBFR  EQU   X'10'                    PCI TEST
C3270    EQU   X'04'                    3270 DCT FLAG
TICOPCD  EQU   X'08'                    TIC COMMAND CODE
         EJECT
         DC    AL1(DSPMCPL8),AL3(0),A(0)
         USING *,RBASE
         LR    RBASE,R15
IEDAYN   IEDHJN IEDAYN01
         BAL   R14,ELEMENT              DETERMINE ELEMENT TYPE
*                                       BEGIN EDIT IF ERB, INDICATE
*                                       MESSAGE IS SENT IF BUFFER
NEWBFR   EQU   *
         BAL   R14,BUFFERS              ALLOCATE REQUESTED BUFFERS
*                                       AND LINK BUFFERS POSTED BY
*                                       BUFFER RETURN
         BAL   R14,MESSAGES             REQUEST TPUTS FROM TSO
*                                       AND EDIT DATA INTO TCAM BUFFERS
         B     NEWBFR                   RETURN TO DETERMINE IF MORE
*                                       OF THE MESSAGE WAS REQUESTED
*                                       BY PCI
         DS    0F
IEDAYN02 EQU   *
         DC    AL1(DSPMCPL8),AL3(0),A(0)
         L     RBASE,AVTDSIOB+8         LOAD BASE
         LA    RBASE,8(,RBASE)          REGISTER
         BAL   R14,CLEANUP              PROCESS BUFFERS RETURNED
*                                       BY IEDQGB
         B     NEWBFR                   REATTEMPT TO GET REQUIRED
*                                       NUMBER OF BUFFERS
         EJECT
ELEMENT  EQU   *
         USING IEDQTRM,R1
         USING IEDQPRF,RPRF
         ST    R14,AVTSAVE3             SAVE RETURN REGISTER
         L     RTSI,AVTTSOPT            GET TSINPUT QCB
         ST    RQCB,AVTDOUBL            SAVE QCB AND
         ST    R1,AVTDOUBL+4            ELEMENT ADDRESS
         TM    PRFTIC-IEDQPRF(R1),CCWTIC BUFFER OR ERB
         BNO   ERB                      BRANCH NO
         LR    RPRF,R1                  LOAD BUFFER BASE
         TM    PRFSTAT1,PRFTSMSG        TSO BUFFER
         BNO   CPBINIT                  NO, INVOKE IEDQFA
         L     RLCB,PRFLCB-1            LOAD LCB ADDR
         LH    R1,LCBTTCIN              GET CONNECT INDEX
         N     R1,AVTCLRHI              CLEAR HIGH ORDER BYTES
         LTR   R1,R1                    INDEX ZERO
         BZ    CPBINIT                  YES, INVOKE IEDQFA
         L     R15,AVTRNMPT             GET ADDRESS TNT CODE
         BALR  R14,R15                  LOCATE TERMINAL ENTRY
         L     RQCB,TRMDESTQ-1          GET QCB ADDRESS
         NC    QCBTJID,QCBTJID          VALID TJID
         BZ    RETBFR                   BRANCH NO
         TM    AVTBIT3,AVTTSAB          TSO ABENDING
         BO    RETBFR                   BRANCH YES
         BAL   R14,TSBADDR              GET TSB ADDRESS
         TM    PRFSTAT1,PRFERMGN        ERROR ON THIS MSG
         BNO   SUCCSEND                 BRANCH NO
         QTIP  DOG,(R13)                INDICATE MESSAGE NOT SENT
*                                       REBUILD TSO BUFFER
         B     RETBFR                   RETURN BUFFER
SUCCSEND EQU   *
         QTIP  CHARLIE,(R13)            INDICATE MESSAGE SENT
*                                       FREE TSO BUFFER, CLEAR WAITS
         TM    TIOCFLG-TIOCRPT(R10),TIOCSYLW  TSO IN LWAIT
         BNO   RETBFR                   BRANCH NO
         OI    QCBTSOF1,QCBNOBUF        SET OUT OF BUFFERS
RETBFR   EQU   *
         LA    R1,AVTBFRTB              SET ADDRESS BUFFER
         ST    R1,PRFQCBA-1             RETURN QCB
         MVI   PRFPRI,PRIBFRTB          SET RETURN PRIORITY
         LR    R1,RPRF                  SET BUFFER ADDRESS
         BAL   R14,DSPPOST              POST BUFFER            @G36XRYP
         EJECT
ERB      EQU   *
         ST    R14,AVTSAVE3             SAVE RETURN ADDRESS
         SR    RPRF,RPRF                INDICATE ERB ENTRY
         LA    RLCB,AVTEZERO(,R1)       CALCULATE
         LA    R15,LCBERB-IEDQLCB       LCB
         SR    RLCB,R15                 ADDRESS
         L     RSCB,LCBSCBA-1           LOAD SCB BASE
         TM    LCBSTAT1,LCBRCLLN        RECALLING
         BO    CPBINIT                  YES, INVOKE IEDQFA
         L     RQCB,SCBDESTQ-1          LOAD QCB ADDRESS
         TM    QCBFLAG,QCBTSSES         TSO SESSION
         BZ    CPBINIT                  NO, INVOKE IEDQFA
         BAL   R14,PREGMAIN             SET CONNECTED INDEX AND
*                                       DCT FIELD OF GMAIN
         TM    GMDEVCH+1,DCT3270        3270 TERMINAL          @G36XRYP
         BO    NEWAYO                   BRANCH YES
         L     R3,TSIAYO                LOAD IEDAYO ADDRESS
         L     R1,AVTDOUBL+4            RESTORE ELEMENT AND
         L     RQCB,AVTDOUBL            QCB ADDRESS
         BAL   R14,DSPBYPAS             BYPASS TO IEDAYO       @G36XRYP
NEWAYO   EQU   *
         BAL   R14,SETGMAIN             INITIALIZE REST OF GMAIN
         MVI   LCBERBKY,AVTEZERO        CLEAR ERB KEY
         NI    LCBERBST,LCBDLNKF        SET ERB NON POSTABLE
         XC    LCBERBCH,LCBERBCH        CLEAR ERB CHAIN
         CLI   LCBERBPY,PRIINTRQ        INITIAL ERB POST
         BE    INITIAL                  BRANCH YES
         TM    LCBERBST,LCBERROR        ERRORS ON OUTPUT
         BO    ERROR                    BRANCH NO ERRORS
         L     R14,AVTSAVE3             RESTORE RETURN ADDRESS
         TM    AVTBIT3,AVTTSAB          TSO ABENDING
         BNO   CKATTN                   BRANCH NO
         MVI   GMFLAG,GMENCON           ORDER ENDING CONTROL
         BR    R14                      RETURN
CKATTN   EQU   *
         TM    SCBERR3,SCBATTN          ATTENTION
         BNOR  R14                      NO, RETURN
         MVI   GMFLAG,GMENCON           ORDER ENDING CONTROL
         BR    R14                      RETURN
ERROR    EQU   *
         L     R1,LCBRCQCB              ERRORS HAVE OCCURRED
         ST    R1,LCBERB                SO POST ERB
         MVI   LCBERBPY,PRIRCQCB        TO RETURN QCB
         LA    R1,LCBERB                ADDRESS
         BAL   R14,DSPPOST              DISPATCHER             @G36XRYP
CPBINIT  EQU   *
         L     R3,TSICPBI               LOAD IEDQFA ADDRESS
         L     R1,AVTDOUBL+4            RESTORE ELEMENT AND
         L     RQCB,AVTDOUBL            QCB ADDRESS
         BAL   R14,DSPBYPAS             BYPASS TO CPB INIT     @G36XRYP
         EJECT
INITIAL  EQU   *
         TM    AVTBIT3,AVTTSAB          TSO ABENDED
         BNO   STILLRUN                 BRANCH NO
         TM    LCBINSRC+2,DELAY         LCB ON TIME DELAY QUEUE
         BNO   ACTLCB                   BRANCH NO
         LR    R1,RLCB                  LOAD ADDRESS LCB
         L     R15,AVTHG02              TIME DELAY REMOVAL
         BALR  R14,R15                  REMOVE LCB
         LR    R15,R3                   SAVE
         LR    RPRF,RQCB                REGISTERS
         LA    RQCB,LCBRSKEY            LOAD STCB ADDRESS
         LR    R1,RQCB                  LOAD STCB ADDRESS
         BAL   R14,DSPPRIOR             PUT RECEIVE SCHEDULER IN LCB
         LR    R3,R15                   RESTORE
         LR    RQCB,RPRF                REGISTERS
ACTLCB   EQU   *
         NI    LCBTSOB,AVTEFF-LCBTSBUF-LCBSATRD-LCBCIRCD RESET
         MVI   LCBSENS0,AVTEZERO        LCB FIELDS
         NI    QCBFLAG,AVTEFF-QCBREAD   RESET
         NI    QCBDSFLG,AVTEFF-QCBALTMH QCB
         MVI   QCBRETCT,AVTEZERO        FIELDS
         MVI   QCBCARCT,AVTEZERO        TO END
         XC    QCBTJID,QCBTJID          TSO
         XC    QCBINSRC,QCBINSRC        SESSION
         LA    R9,ABNDMSK               TSO HAS ABENDED
         MVI   LCBSTAT1,LCBRECVN        SO INITIALIZE
         LA    R15,AVTINOUT             TO SEND
         STCM  R15,7,SCBMACR            ABEND MSGGEN
         LR    R8,R9                    AND EXIT
         L     R12,TSIMSGEN             TO IEDAYM
         SR    R1,R1                    FOR
         BR    R12                      OUTPUT
         EJECT
STILLRUN  EQU  *
         XC    SCBSRCE(1),SCBSRCE       CLEAR WORK AREA TO BE  @OZ27604
*                                       USED IF DATA CONTAINS  @OZ27604
*                                       BYPASS OR RESTORE CHAR @OZ27604
         USING TSB,RTSB
         BAL   R14,TSBADDR              GET TSB ADDRESS
         L     R14,AVTSAVE3             RESTORE RETURN REGISTER
         TM    TSBFLG2,TSBBRKIN         FLASHBACK REQUEST
         BZR   R14                      NO, RETURN
         TM    TSBSTAT,TSBDSPLY         FLASHBACK
         BZR   R14                      NO, RETURN
         TM    TSBFLG3,TSBSPIT          TCLEARQ IN PROGRESS
         BOR   R14                      YES, RETURN
         CLC   TSBOTBFP,AVTFZERO        TRAILER QUEUE EMPTY
         BNER  R14                      NO, RETURN
         QTIP  FOX,(R13)                TSO MESSAGE TO TRAILER QUEUE
         BR    R14                      RETURN
         DROP  RTSB
         DROP  R1
         DROP  RPRF
         EJECT
BUFFERS  EQU   *
         USING IEDQSCB,RSCB
         USING IEDQPRF,RPRF
         ST    R14,AVTSAVE3             SAVE RETURN REGISTER
         LTR   RPRF,RPRF                BUFFER PASSED
         BZ    NOBUFFER                 BRANCH NO
         LA    R8,AVTBFRTB              BFR RETURN QCB ADDRESS @OY20501
         ST    R8,PRFQCBA-1             PUT POINTER IN BUFFER  @OY20501
         MVI   PRFNBUNT,ONE             SET UNIT COUNT         @OY20501
         MVI   PRFPRI,PRIBFRTB          SET POST PRIORITY      @OY20501
         LR    R1,RPRF                  BUFFER ADDR TO POST    @OY20501
         BAL   R14,DSPPOSTR             BRANCH TO POST BUFFER  @OY20501
NOBUFFER EQU   *
         SR    R8,R8                    CLEAR WORK REGISTER
         IC    R8,LCBERBCT              GET REQUEST COUNT
         NC    LCBLSPCI,LCBLSPCI        FIRST OR PCI ERB POST
         BZ    FRSTPOST                 BRANCH INITIAL
         OI    LCBERBCT+1,XXCTUSED      RESTRICT DISABLED COUNT
         CLI   LCBERBCT+1,XXCTUSED      DISABLED COUNT ADJUSTED
         BNE   MERGE                    BRANCH YES
         OI    LCBERBST,LCBDLNKN        MAKE ERB POSTABLE
         NI    LCBERBCT+1,AVTEFF-XXCTUSED CLEAR FLAG
         NC    LCBERBCT,LCBERBCT        COUNT CHANGED BY PCI
         BZ    DSPDISP                  BRANCH NO
         TM    LCBERBST,LCBDLNKN        ERB POSTED BY PCI
         BNO   DSPDISP                  BRANCH YES
         NI    LCBERBST,LCBDLNKF        MAKE ERB UNPOSTABLE
MERGE    EQU   *
         IC    R8,LCBERBCT+1            GET DISABLED COUNT
         MVI   LCBERBCT+1,AVTEZERO      CLEAR DISABLED COUNT
         LA    R5,AVTEFF-XXCTUSED       SET REGISTER FOR AND
         NR    R8,R5                    CLEAR USED FLAG
         SR    R5,R5                    CLEAR WORK REGISTER
         IC    R5,LCBERBCT              GET ENABLED COUNT
         AR    R8,R5                    GET TOTAL COUNT
         STC   R8,LCBERBCT              AND STORE
         EJECT
FRSTPOST EQU   *
         STH   R8,GMBFRS                SET TOTAL BUFFERS AND
         MH    R8,GMBFUNIT              NUMBER OF UNITS REQUESTED
         LA    R14,DSPDISP              LOAD NOMORE RETURN ADDRESS
         SR    R9,R9                    CLEAR COUNT REGISTER
         LA    RPRF,AVTBFREB-4          SET UNIT ADDRESS
         LH    R9,AVTAVFCT              NO. UNITS AVAILABLE    @OY20542
         NC    LCBLSPCI,LCBLSPCI        INITIAL OR PCI REQUEST
         BNZ   PCIALOC                  BRANCH PCI
         CR    R9,R8                    ENOUGH UNITS AVAILABLE
         BL    NOMORE                   BRANCH NO
         LH    R9,GMBFRS                SET NUMBER AND
         B     REMOVE                   ALLOCATE BUFFERS
PCIALOC  EQU   *
         SR    R8,R8                    CLEAR EVEN DIVIDE REGISTER
         LH    R1,GMBFUNIT              GET UNITS REQUIRED
         DR    R8,R1                    GET NUMBER OF COMPLETE
*                                       BUFFERS ALLOCATEABLE
         LTR   R9,R9                    ENOUGH FOR 1 BUFFER
         BZ    NOMORE                   BRANCH NO
         LA    R14,REMOVE               SET NOMORE RETURN ADDRESS
         CH    R9,GMBFRS                ENOUGH UNITS FOR REQUEST
         BL    NOMORE                   BRANCH NO
         LH    R9,GMBFRS                SET MAXIMUM REQUEST
         EJECT
REMOVE   EQU   *
         LH    R15,AVTAVFCT             LOAD AVAILABLE COUNT
         L     RPRF,AVTBFREB            GET FIRST UNIT TO BUILD
         STCM  RPRF,7,LCBERBCH          SAVE FIRST UNIT ADDRESS
PREFIX   EQU   *
         SR    R1,R1                    CLEAR WORK REGISTER
         IC    R1,LCBERBCT              REDUCE
         BCTR  R1,0                     ERB
         STC   R1,LCBERBCT              COUNT
         LH    R5,GMBFUNIT              GET UNITS PER BUFFER
         LR    R8,RPRF                  SAVE PREFIX REGISTER
         ST    RLCB,PRFLCB-1            INITIALIZE
         XC    PRFSIZE,PRFSIZE          BUFFER
         XC    PRFSRCE,PRFSRCE          PREFIX
         XC    PRFCORE(PRFSHDR+4-PRFCORE),PRFCORE FIELDS
         MVI   PRFSTAT1,PRFNHDRN+PRFNLSTN+PRFTSMSG AND FLAGS
EXTRA    EQU   *
         BCTR  R15,0                    REDUCE AVAILABLE COUNTER
         MVC   AVTBFREB+1(3),PRFLINK    REMOVE UNIT            @ZM48772
         MVC   PRFTIC+1(3),PRFLINK      SET TIC ADDRESS
         MVI   PRFTIC,TICOPCD           AND COMMAND CODE
         XC    PRFLINK,PRFLINK          CLEAR LINK
         ST    RPRF,AVTDOUBL+4          SAVE LAST UNIT ADDRESS
         L     RPRF,PRFTIC              GET NEXT UNIT
         BCT   R5,EXTRA                 CONTINUE TO BUILD EXTRAS
         MVC   PRFNBUNT-IEDQPRF(,R8),GMBFUNIT+1 SET NUMBER OF UNITS
         ST    RPRF,PRFLINK-1-IEDQPRF(,R8) LINK BUFFERS
         BCT   R9,PREFIX                BUILD NEXT PREFIX SEGMENT
         XC    PRFLINK-IEDQPRF(3,R8),PRFLINK-IEDQPRF(R8) CLEAR LINK
         STH   R15,AVTAVFCT             RESET AVAILABLE COUNT
         L     RPRF,AVTDOUBL+4          GET LAST UNIT ADDRESS
         MVC   PRFTIC,INVLDTIC          SET INVALID TIC
         L     R14,AVTSAVE3             RESTORE RETURN REGISTER
         BR    R14                      RETURN
         EJECT
NOMORE   EQU   *
         TM    LCBERBST,LCBDLNKN+LCBINQ ERB POSTABLE
         BNZR  R14                      BRANCH NO
         OI    LCBERBST,LCBINQ          SET ERB ENQUEUED
         MVI   LCBERBPY,PRIDSKBF        AND PRIORITY
         LA    R1,LCBERB                SET ADDRESS ELEMENT TO
         LA    RQCB,AVTBFRTB            BE ENQUEUED AND CHAIN
         B     DSPPRIOR                 ENQUEUE ERB ON BUFFER
*                                       RETURN QCB AND RETURN TO
*                                       ADDRESS IN R14
         EJECT
MESSAGES EQU   *
         USING TSB,RTSB
         ST    R14,AVTSAVE3             SAVE RETURN REGISTER
         L     RSCB,LCBSCBA-1           LOAD SCB ADDRESS
         L     RQCB,SCBDESTQ-1          AND QCB ADDRESS
         BAL   R14,TSBADDR              GET TSB-TJB ADDRESS
         TM    GMFLAG,GMENCON           INSERT ENDING CONTROL ONLY
         BO    EDITPREP                 BRANCH YES
         NC    LCBLSPCI,LCBLSPCI        INITIAL ERB POST
         BNZ   GETTPUT                  BRANCH NO
         MVI   LCBERBPY,PRIINTRQ        RESET INITIAL PRIORITY
         OI    GMFLAG,GMINIT            AND INITIAL ENTRY FOR EDIT
GETTPUT  EQU   *
         USING TIOCBUF,R5
         QTIP  BAKER,(R13)              TSO MESSAGE TO TRAILER QUEUE
         L     R5,TSBOTBFP-1            LOAD TSBUFFER ADDRESS
         LTR   R15,R15                  ANY TPUT AVAILABLE
         BZ    PREEND                   BRANCH NONE
         L     RSCB,LCBSCBA-1           LOAD SCB ADDRESS       @OZ30811
         NI    SCBSRCE-IEDQSCB(RSCB),X'3F' TURN OFF NOINC & BYP@OZ30811
         LA    R5,AVTEZERO(,R5)         CLEAR HIGH ORDER BYTE
         ST    R5,GMTSBUF               SAVE TSO BUFFER ADDRESS
         SR    R0,R0                    CLEAR WORK
         SR    R15,R15                  REGISTERS
         IC    R0,BUFFLNTH              GET DATA LENGTH
QUESCAN  EQU   *
         CLC   BUFFTRLR,AVTFZERO        END OF TRAILER QUEUE
         BE    SENDON                   BRANCH YES
         L     R5,BUFFTRLR-1            GET NEXT BUFFER
         LTR   R0,R0                    TEST ACCUMULATED LENGTH
         BNZ   SKIPSET                  BRANCH NOT ZERO
         LA    R5,AVTEZERO(,R5)         CLEAR HIGH ORDER BYTE
         ST    R5,GMTSBUF               SET TRANSMIT BUFFER ADDRESS
SKIPSET  EQU   *
         IC    R15,BUFFLNTH             GET CURRENT DATA LENGTH
         AR    R0,R15                   ADD TO ACCUMULATED COUNT
         B     QUESCAN                  CONTINUE QUEUE SCAN
         DROP  R5
         EJECT
SENDON   EQU   *
         TM    TSBFLG3,TSBTJMSG         MESSAGE NONFLUSHABLE
         BO    EDITPREP                 BRANCH YES
         TM    TSBFLG1,TSBOFLSH         CLEAR OUTPUT TRAILER QUEUE
         BNO   EDITPREP                 BRANCH NO
         SR    R15,R15                  CLEAR RETURN REGISTER
         QTIP  CHARLIE,(R13)            CLEAR OUTPUT TRAILER QUEUE
         LA    R0,AVTBFRTB              LOAD BUFFER RETURN
         ST    R0,AVTDOUBL+4            ADDRESS
         MVC   AVTDOUBL+4(3),AVTDOUBL+5 JUSTIFY
         MVI   AVTDOUBL+7,PRIBFRTB      SET PRIORITY
         BAL   R14,POSTALL              FREE ALL BUFFERS
         B     POSTLCB                  POST LCB TO ITSELF
         EJECT
EOSCREEN EQU   *
         TM    TSBFLG2,TSBBIPI          PARTIAL LINE
         BNO   PREEND                   BRANCH NO
         TM    TSBSTAT,TSBDSPLY         FLASHBACK MESSAGE
         BO    PREEND                   BRANCH YES
         OI    QCBFLAG,QCBREAD          SET READ PRIORITY
         B     ENDCON                   START SENDING
PREEND   EQU   *
         CLC   TSBOBFP,AVTFZERO         MORE TSO MESSAGES
         BNE   ENDCON                   BRANCH YES
         TM    TSBFLG2,TSBAUTON         AUTOPROMPT REQUESTED
         BZ    ENDCON                   BRANCH NO
         TM    QCBTSOF1,QCBPARTO        REST OF MESSAGE COMING
         BO    ENDCON                   BRANCH YES
         TM    TSBFLG3,TSBSPIT          TCLEARQ IN PROGRESS
         BO    ENDCON                   BRANCH YES
         OI    SCBERR2,SCBALN           REQUEST AUTO PROMPTING
         SPACE 5
ENDCON   EQU   *
         USING IHADCB,RDCB
         CLI   LCBERBPY,PRIINTRQ        INITIAL OR PCI ERB
         BE    INITIALL                 BRANCH INITIAL
         OI    GMFLAG,GMENCON           ORDER ENDING CONTROL
         B     EDITPREP                 INSERTION
INITIALL EQU   *
         TM    GMFLAG,GMINIT            FIRST PASS
         BO    NOTPUTS                  BRANCH NO
         L     RDCB,LCBDCBPT            LOAD DCB ADDRESS
         MVI   LCBERBCT+1,AVTEZERO      CLEAR REQUESTED COUNT
         OI    GMFLAG,GMENCON           ORDER ENDING CONTROL
         EJECT
EDITPREP EQU   *
         L     R15,TSI3270              LOAD ADDRESS IEDAYQ
         BALR  R14,R15                  AND GO EDIT DATA
         NI    GMFLAG,AVTEFF-GMINIT     RESET INITIAL FLAG
         OI    LCBERBST,LCBEOMSG        SET END OF MESSAGE
         TM    GMFLAG,GMENCIN           ENDING CONTROL INSERTED
         BO    SENDMSG                  BRANCH YES
         NI    LCBERBST,AVTEFF-LCBEOMSG RESET END OF MESSAGE
         LTR   R15,R15                  END OF SCREEN REACHED
         BZ    EOSCREEN                 BRANCH YES
         BP    GETTPUT                  BRANCH TO GET NEW TPUT
*                                       SINCE BUFFERS NOT FULL
*                                       IF BUFFERS FULL, SEND
         EJECT
SENDMSG  EQU   *
         USING IEDQPRF,RPRF
         L     RDCB,LCBDCBPT            LOAD DCB ADDRESS
         OI    LCBTSOB,LCBTSBUF         SET TSO TRANSMISSION
         TM    DCBDSORG,TRMLGB          NCP CONNECTED TERMINAL
         BNO   NOTLGB                   BRANCH NO
         XC    AVTDOUBL+4(4),AVTDOUBL+4 RETURN
         BAL   R14,POSTALL              UNFILLED BUFFERS
         CLI   LCBERBPY,PRIINTRQ        INITIAL ERB POST
         BNE   NCPPOST                  BRANCH NO
         TM    DCBPCI,DYNMBFR           PCI ON SEND
         BO    NCPPOST                  BRANCH YES
         L     RPRF,GMCRBUF             GET FINAL BUFFER
         NI    PRFSTAT1,PRFNLSTF        SET BUFFER AS LAST
NCPPOST  EQU   *
         L     R9,AVTSAVTP              GET SECONDARY AVT
         USING IEDNSVTD,R9
         L     R9,SAVTCNIR              LOAD OUTPUT DATA
         DROP  R9                       HANDLER QCB
         MVI   LCBERBPY,PRIACTIV        SET POST PRIORITY
         ST    R9,LCBERB                STORE QCB ADDRESS
         LA    R1,LCBERB                SET ELEMENT ADDRESS
         OI    LCBERBST,LCBDLNKN        ERB POSTABLE
         BAL   R14,DSPPOST              POST ERB               @G36XRYP
NOTLGB   EQU   *
         L     RPRF,LCBERBCH-1          GET MESSAGE ADDRESS
         CLI   LCBERBPY,PRIINTRQ        INITIAL OR PCI POST
         BNE   PCIERB                   BRANCH PCI
         XC    AVTDOUBL+4(4),AVTDOUBL+4 RETURN
         BAL   R14,POSTALL              UNFILLED BUFFERS
         TM    DCBPCI,DYNMBFR           PCI ON SEND
         BO    POSTERB                  BRANCH YES
         L     RPRF,GMCRBUF             GET FINAL BUFFER
         NI    PRFSTAT1,PRFNLSTF        SET BUFFER AS LAST
POSTERB  EQU   *
         LA    R9,AVTACTIB              GET ADDRESS ACTIVATE
         ST    R9,LCBERB                QCB
         MVI   LCBERBPY,PRIACTIV        SET POST PRIORITY
         LA    R1,LCBERB                SET ELEMENT ADDRESS
         OI    LCBERBST,LCBDLNKN        ERB POSTABLE
         BAL   R14,DSPPOST              POST ERB TO ACTIVATE   @G36XRYP
PCIERB   EQU   *
         MVC   AVTDOUBL+4(3),DCBMH      LOAD QCB ADDRESS
         MVI   AVTDOUBL+7,PRIMHBFR      LOAD POST PRIORITY
         BAL   R14,POSTALL              POST ALL BUFFERS TO
*                                       THE STARTMH QCB AND
*                                       FREE UNUSED BUFFER UNITS
         XC    LCBERBCH,LCBERBCH        CLEAR ERBCHAIN
         TM    LCBERBST,LCBEOMSG+LCBINQ IF EOM OR ERB ENQUEUED NO
         BNZ   DSPDISP                  NEED TO CHECK ERB COUNT
         BAL   R14,TERMMAIN             CLEAR EDIT
         BAL   R14,SETGMAIN             WORK AREA
         SR    RPRF,RPRF                CLEAR BUFFER BASE
         L     R14,AVTSAVE3             LOAD RETURN ADDRESS
         BR    R14                      RETURN
         EJECT
NOTPUTS  EQU   *
         LA    R0,AVTBFRTB              LOAD BUFFER RETURN
         ST    R0,AVTDOUBL+4            QCB ADDRESS
         MVC   AVTDOUBL+4(3),AVTDOUBL+5 JUSTIFY ADDRESS
         MVI   AVTDOUBL+7,PRIBFRTB      AND PRIORITY
         BAL   R14,POSTALL              RETURN BUFFERS
         BAL   R14,TSBADDR              GET TSB ADDRESS
         SR    R9,R9                    CLEAR RETURN REGISTER
         ST    R9,AVTDOUBL+4            CLEAR RETURN CODE      @OZ30295
         TM    TSBSTAT,TSBDISC          USER BEING LOGGED OFF
         BNO   BREAK                    BRANCH NO
         TM    TSBFLG4,TSBOCAB          OUT OF CORE ABEND      @G36XRYP
         BZ    BREAK                    BRANCH NO              @OZ30295
         LA    R9,OCABMSK               SET OUTOFCORE MASK
         B     PASTLCB                  CHECK FOR CLEANUP
BREAK    EQU   *
         TM    QCBTSOF2,QCBBUFQ         TSINPUT HOLDING BUFFERS
         BO    POSTLCB                  BRANCH YES
         TM    TSBFLG3,TSBSPIT          TCLEARQ IN PROGRESS
         BO    POSTLCB                  BRANCH YES
         TM    QCBTSOF1,QCBPARTO        MORE MESSAGES
         BO    POSTLCB                  BRANCH YES
         TM    TSBFLG2,TSBBRKIN         BREAKIN
         BO    PASTLCB                  BRANCH YES
POSTLCB  EQU   *
         QTIP  TEN,(R13)                RESET QCBTPUT AND QCBWRBRK
*                                       POST THE LCB TO ITSELF
         ST    R15,AVTDOUBL+4           SAVE RETURN CODE
         BCTR  R9,0                     INDICATE QTIP 10
PASTLCB  EQU   *
         TM    TSBSTAT,TSBDISC          USER BEING LOGGED OFF
         BNO   BREAKER                  BRANCH NO
         QTIP  EASY,(R13)               CLEAR TSO CONTROL BLOCKS
         TM    LCBINSRC+2,DELAY         LCB ON TIME DELAY QUEUE
         BNO   PASTRLCB                 BRANCH NO
         LR    R1,RLCB                  LOAD ADDRESS LCB
         L     R15,AVTHG02              TIME DELAY REMOVAL
         BALR  R14,R15                  REMOVE LCB
         LR    R15,R3                   SAVE
         LR    RPRF,RQCB                REGISTERS
         LA    RQCB,LCBRSKEY            LOAD STCB ADDRESS
         LR    R1,RQCB                  LOAD STCB ADDRESS
         BAL   R14,DSPPRIOR             PUT RECEIVE SCHEDULER IN LCB
         LR    R3,R15                   RESTORE
         LR    RQCB,RPRF                REGISTERS
PASTRLCB EQU   *
         NI    LCBTSOB,AVTEFF-LCBTSBUF-LCBSATRD-LCBCIRCD RESET
         MVI   LCBSENS0,AVTEZERO        LCB FIELDS
         NI    QCBFLAG,AVTEFF-QCBREAD   RESET
         NI    QCBDSFLG,AVTEFF-QCBALTMH QCB
         MVI   QCBRETCT,AVTEZERO        FIELDS
         MVI   QCBCARCT,AVTEZERO        TO END
         XC    QCBTJID,QCBTJID          TSO
         XC    QCBINSRC,QCBINSRC        SESSION
BREAKER  EQU   *
         L     R15,AVTDOUBL+4           RESTORE RETURN CODE
         LTR   R15,R15                  RETURN CODE ZERO
         BNZ   AUTOPRMT                 BRANCH NO
         LTR   R9,R9                    QTIP POST LCB
         BP    GOMSGGEN                 NO, SEND LOGOFF MESSAGE
         BZ    CHKBRKIN                 BRANCH TO CHECK BREAK
         SR    R0,R0                    CLEAR
         ST    R0,SCBERRST              ALL
         ST    R0,SCBDEOB               CONTROL
         STH   R0,SCBEOB                BLOCKS
         MVI   LCBSENS0,AVTEZERO        AND
         ST    R0,LCBERBCH-1            FIELDS
         XC    LCBLSPCI,LCBLSPCI        BEFORE
         NI    LCBCHAIN,AVTEFF-LCBBFRSZ-LCBABRTN-LCBEXCP
         NI    LCBTSOB,AVTEFF-LCBTSBUF-LCBINHBN-LCBWRBRK
         NI    LCBSTAT2,LCBMSGNF        RETURNING
         NI    LCBSTAT1,AVTEFF-LCBRCLLN TO
         LA    R1,AVTINOUT              THE
         STCM  R1,7,SCBMACR             DISPATCHER
         LA    R1,AVTBFRTB              TERMINATING
         STCM  R1,7,SCBDESTQ            THE SEND OPERATION
         B     DSPDISP                  BRANCH TO DISPATCHER
         EJECT
CHKBRKIN EQU   *
         QTIP  FOX,(R13)                TSO MESSAGE TO TRAILER QUEUE
         B     GETTPUT                  SEND REPROMPT
         SPACE 5
AUTOPRMT EQU   *
         OI    SCBERR2,SCBALN           SET AUTO
         LA    R9,AUTOMSK               LINE NUMBERING
GOMSGGEN EQU   *
         MVI   LCBSTAT1,LCBRECVN        SET FIELDS
         LA    R1,AVTINOUT              TO
         STCM  R1,7,SCBMACR             EXIT TO IEDAYM
         LR    R8,R9                    TO OUTPUT
         L     R12,TSIMSGEN             THE
         SR    R1,R1                    REQUIRED
         BR    R12                      TEXT
         DROP  RTSB
         EJECT
CLEANUP  EQU   *
         ST    R14,AVTSAVE3             SAVE RETURN REGISTER
         L     RTSI,AVTTSOPT            GET TSINPUT QCB ADDRESS
         ST    RQCB,AVTDOUBL            SAVE QCB AND
         ST    R1,AVTDOUBL+4            ELEMENT ADDRESS
         LA    RQCB,AVTEZERO(,RQCB)     CLEAR HIGH ORDER
         LA    R1,AVTEZERO(,R1)         FOR COMPARE
         CR    RQCB,R1                  CPB CLEANUP QCB
         BE    CPBCLNUP                 BRANCH CPB CLEANUP QCB
         LR    RPRF,R1                  SET BUFFER ADDRESS
         L     RLCB,PRFLCB-1            LCB
         L     RSCB,LCBSCBA-1           SCB
         L     RQCB,SCBDESTQ-1          AND QCB
         TM    LCBSTAT1,LCBRCLLN+LCBRECVN RECALLING OR RECEIVING
         BNZ   CPBCLNUP                 BRANCH YES
         TM    QCBFLAG,QCBTSSES         TERMINAL IN TSO SESSION
         BNO   CPBCLNUP                 BRANCH NO
         BAL   R14,TERMMAIN             GET DCT AND SET IN GMAIN
         TM    GMDEVCH+1,DCT3270        3270 TERMINAL          @G36XRYP
         BO    NEWCLEAN                 BRANCH YES
         L     R3,TSIAYO02              LOAD IEDAYO02 ADDRESS
         L     R1,AVTDOUBL+4            RESTORE ELEMENT AND
         L     RQCB,AVTDOUBL            QCB ADDRESS
         BAL   R14,DSPBYPAS             BYPASS TO IEDAYOO2     @G36XRYP
NEWCLEAN EQU   *
         BAL   R14,SETGMAIN             INITIALIZE REST OF GMAIN
         NI    LCBERBST,AVTEFF-LCBINQ   MARK ERB NOT ENQUEUED
         TM    LCBERBST,LCBERROR        I/O ERROR
         BO    RETURN                   BRANCH YES
         TM    SCBERR3,SCBATTN          ATTENTION RECEIVED
         BO    RETURN                   BRANCH YES
         L     R14,AVTSAVE3             RESTORE RETURN REGISTER
         TM    AVTBIT3,AVTTSAB          TSO ABENDING
         BNOR  R14                      BRANCH NO
         NC    LCBLSPCI,LCBLSPCI        INITIAL ERB POST
         BZ    RETURN                   BRANCH YES
         OI    GMFLAG,GMENCON           SET FOR ENDING CONTROL
         BR    R14                      GO TO EDIT FOR ENDING CONTROL
RETURN   EQU   *
         MVC   LCBERBQB,LCBRCQCB+1      SET RECALL QCB ADDRESS
         ST    RPRF,LCBERBLK-1          LINK BUFFER TO ERB
         MVI   LCBERBPY,PRIRCQCB        SET ERB PRIORITY
         LA    R1,AVTBFRTB              LOAD BUFFER RETURN QCB
         ST    R1,PRFQCBA-1             ADDRESS
         MVI   PRFPRI,PRIBFRTB          SET POST PRIORITY
         XC    PRFLINK,PRFLINK          CLEAR LINK FOR POST
         LA    R1,LCBERB                LOAD ELEMENT ADDRESS
         BAL   R14,DSPCHAIN             POST ELEMENTS          @G36XRYP
CPBCLNUP EQU   *
         L     R3,TSICPBC               GET CPB CLEANUP STCB
         L     R1,AVTDOUBL+4            RESTORE ELEMENT AND
         L     RQCB,AVTDOUBL            QCB ADDRESS
         BAL   R14,DSPBYPAS             BYPASS TO CPB CLEANUP  @G36XRYP
         EJECT
POSTALL  EQU   *
         ST    R14,AVTSAVE3+4           SAVE RETURN ADDRESS
         ST    RQCB,AVTSAVE3+8          SAVE QCB AND
         ST    RSCB,AVTSAVE3+12         SCB BASES
         LA    R15,DSPPOSTR             SET DESTINATION FOR
         NC    AVTDOUBL+4(4),AVTDOUBL+4 RETURN OF UNFILLED BUFFERS
         BNZ   POSTMOST                 FOR ERB AND BUFFER
         LA    R15,COMEBACK             POSTS
POSTMOST EQU   *
         L     RPRF,LCBERBCH-1          GET FIRST BUFFER UNIT
NEWPREF  EQU   *
         SR    R0,R0                    CLEAR COUNT REGISTER
         IC    R0,PRFNBUNT              GET BUFFER UNIT COUNT
         LR    R1,RPRF                  SAVE PREFIX ADDRESS
         MVC   PRFQCBA(4),AVTDOUBL+4    SET QCB ADDRESS AND PRIORITY
NEWUNIT  EQU   *
         LR    R5,RPRF                  SAVE LAST UNIT ADDRESS
         L     RPRF,PRFTIC              GET NEXT
         BCT   R0,NEWUNIT               UNIT
         N     R5,FOXDOG                REMOVE TIC AND 02
         MVC   8(4,R5),INVLDTIC         SET INVALID TIC
         N     RPRF,FOXDOG              REMOVE TIC AND 02
         BALR  R14,R15                  POST BUFFER OR BRANCH
COMEBACK EQU   *
         LTR   RPRF,RPRF                END OF CHAIN
         BZ    ALLBUF                   BRANCH YES
         C     R5,GMCRUNT               REACH CURRENT BUFFER
         BNE   NEWPREF                  BRANCH NO
         LA    R15,DSPPOSTR             SET DESTINATION TO POST
         LA    R0,AVTBFRTB              LOAD BUFFER RETURN
         ST    R0,AVTDOUBL+4            QCB ADDRESS
         MVC   AVTDOUBL+4(3),AVTDOUBL+5 JUSTIFY ADDRESS
         MVI   AVTDOUBL+7,PRIBFRTB      SET POST PRIORITY
         B     NEWPREF                  POST REST OF BUFFERS
ALLBUF   EQU   *
         L     RQCB,AVTSAVE3+8          RELOAD QCB AND
         L     RSCB,AVTSAVE3+12         SCB BASES
         L     R14,AVTSAVE3+4           RESTORE RETURN ADDRESS
         BR    R14                      RETURN
         EJECT
PREGMAIN EQU   *
         USING TSB,RTSB
         USING IEDQSCB,RSCB
         USING IEDQTRM,R1
         USING IEDQTNTD,R15
         ST    R14,AVTSAVE3+4           SAVE RETURN REGISTER
         XC    TSIGMAIN(GMXTNT),TSIGMAIN CLEAR EDIT WORK AREA
         TM    AVTBIT3,AVTTSAB          TSO ABENDING
         BO    ABGONE                   BRANCH YES
         BAL   R14,TSBADDR              GET TSB ADDRESS
         LH    R5,TSBASRCE              GET CONNECTED INDEX
         LR    R1,R5                    SET CONNECTED REGISTER
         N     R1,AVTCLRHI              CLEAR HIGH ORDER BYTES
         L     R15,AVTRNMPT             LOAD TNT ADDRESS
         BALR  R14,R15                  GET TTE ADDRESS
         B     CONNECT                  SET CONNECTED TERMINAL
ABGONE   EQU   *
         L     R15,AVTRNMPT             LOAD TNT ADDRESS
         LH    R5,TNTLEN                GET LARGEST INDEX
         N     R5,AVTCLRHI              CLEAR HIGH ORDER BYTES
TTABLE   EQU   *
         LR    R1,R5                    LOAD INDEX
         BALR  R14,R15                  GET TTE ADDRESS
         CLC   TRMDESTQ,SCBDESTQ        CORRECT TERMINAL
         BE    CONNECT                  BRANCH YES
         BCT   R5,TTABLE                CONTINUE SEARCHING
CONNECT  EQU   *
         STH   R5,LCBTTBIN              STORE CONNECTED
         STH   R5,LCBTTCIN              INDEX
         LA    R15,TRMPRFSZ             TTE PREFIX SIZE        @ZM47738
         LR    R14,R1                   COPY TTE ADDRESS       @ZM47738
         SLR   R14,R15                  POINT TO TTE PREFIX    @ZM47738
         USING IEDNTRM,R14              SET ADDRESSABILITY     @ZM47738
         L     R15,AVTSAVTP             GET SECONDARY AVT      @Z37XBYK
         USING IEDNSVTD,R15                                    @Z37XBYK
**********     COPY DCT ENTRY FOR THIS DEVICE                  @ZM47738
         IEDDCT REG=R5,FLD=GMDEVCH,LEN=6                       @ZM47738
         SPACE
         L     R14,AVTSAVE3+4           RESTORE RETURN REGISTER
         BR    R14                      RETURN
         DROP  R15                                             @Z37XBYK
         EJECT
TERMMAIN EQU   *
         ST    R14,AVTSAVE3+4           SAVE RETURN REGISTER
         XC    TSIGMAIN(GMXTNT),TSIGMAIN CLEAR EDIT WORK AREA
         LH    R1,LCBTTCIN              LOAD CONNECTED INDEX
         N     R1,AVTCLRHI              CLEAR HIGH ORDER BYTES
         L     R15,AVTRNMPT             LOAD TNT ADDRESS
         BALR  R14,R15                  GET TTE ADDRESS
         LA    R15,TRMPRFSZ             TTE PREFIX SIZE        @ZM47738
         LR    R14,R1                   COPY TTE ADDRESS       @ZM47738
         SLR   R14,R15                  TTE PREFIX             @ZM47738
         L     R15,AVTSAVTP             GET SECONDARY AVT      @Z37XBYK
         USING IEDNSVTD,R15                                    @Z37XBYK
**********     COPY DCT FOR THIS DEVICE                        @ZM47738
         IEDDCT REG=R5,FLD=GMDEVCH,LEN=6                       @ZM47738
         L     R14,AVTSAVE3+4           RESTORE RETURN ADDRESS
         BR    R14                      RETURN
         DROP  R14                                             @ZM47738
         DROP  R15                                             @Z37XBYK
         EJECT
SETGMAIN EQU   *
         USING IHADCB,RDCB
         ST    R14,AVTSAVE3+4           SAVE RETURN ADDRESS
         TM    TRMDEVFL,TRMBUFSZ        BUFSIZE ON TERMINAL
         BO    USETERM                  BRANCH YES
         L     RDCB,LCBDCBPT            LOAD DCB ADDRESS
         LH    R5,DCBBUFSI              GET BUFSIZE
         STH   R5,GMBFSIZE              AND SAVE IN GMAIN
         B     CNTBFUNT                 COUNT UNITS
USETERM  EQU   *
         LA    R5,TRMOPNO+1             LOCATE
         TM    TRMSTATE,TRMOPTFN        BUFSIZE
         BNO   NOOPTION                 IN
         SR    R5,R5                    TERMINAL
         IC    R5,TRMOPNO               ENTRY DEVICE
         LA    R5,TRMOPT+1(R5)          DEPENDENT FIELD
NOOPTION EQU   *
         MVC   GMBFSIZE(2),AVTEZERO(R5) SAVE BUFSIZE IN GMAIN
         LH    R5,GMBFSIZE              LOAD BUFSIZE
CNTBFUNT EQU   *
         SR    R15,R15                  CLEAR WORK REGISTER
COUNTON  EQU   *
         LA    R15,1(,R15)              COUNT ONE UNIT
         SH    R5,AVTKEYLE              REDUCE BY KEYLENGTH
         BP    COUNTON                  BUFFER > KEYLENGTH
         STH   R15,GMBFUNIT             SAVE UNITS PER BUFFER
         MVC   GMCARCT+1(1),QCBCARCT    SAVE CARRIAGE COUNT
         MVC   GMSATCT+1(1),QCBSATCT    AND LINE COUNT
         BAL   R14,TSBADDR              GET TSB ADDRESS
         SR    R5,R5                    CLEAR WORK REGISTER
         IC    R5,TSBLNSZ               GET LINE SIZE
         LTR   R5,R5                    LINE SIZE SPECIFIED
         BNZ   SPCLNSZ                  BRANCH YES
         LA    R5,40                    USE DEFAULT LINE SIZE
SPCLNSZ  EQU   *
         STC   R5,GMLNSZ                SAVE LINE SIZE
         IC    R5,TSBLNNO               NUMBER OF LINES
         LTR   R5,R5                    SPECIFIED
         BNZ   SPCLNNO                  BRANCH YES
         LA    R5,12                    USE DEFAULT NUMBER OF LINES
SPCLNNO  EQU   *
         STC   R5,GMLNNO                SAVE NUMBER OF LINES
         L     R14,AVTSAVE3+4           RESTORE RETURN ADDRESS
         BR    R14                      RETURN
         DROP  RDCB
         EJECT
TSBADDR  EQU   *
         USING CVT,R10
         L     R10,CVTPTR               LOAD CVT ADDRESS
         L     RTSB,CVTASVT             GET ASVT ADDRESS       @G36XRYP
         DROP  RTSB                                            @G36XRYP
         USING ASVT,RTSB                ASVT ADDRESSABILITY    @G36XRYP
         LH    R15,QCBTJID              GET ASID               @G36XRYP
         BCTR  R15,0                    DECREMENT BY 1 FOR     @G36XRYP
*                                       ZERO ORIGIN            @G36XRYP
         SLL   R15,2                    MULTIPLY BY 4 FOR      @G36XRYP
*                                       INTO ASCB ADDR LIST    @G36XRYP
         LA    RTSB,ASVTENTY            GET ASCB LIST ADDRESS  @ZM47673
         L     RTSB,AVTEZERO(R15,RTSB)  GET ASCB ADDRESS       @ZM47673
         DROP  RTSB                                            @G36XRYP
         USING ASCB,RTSB                ASCB ADDRESSABILITY    @G36XRYP
         L     RTSB,ASCBTSB             GET TSB ADDRESS        @G36XRYP
         L     R15,CVTAQAVT             GET TCX ADDRESS        @G36XRYP
         USING IEDQTCX,R15              TCX ADDRESSABILITY     @G36XRYP
         L     R10,TCXRPT               GET TIOCRPT ADDRESS    @G36XRYP
         DROP  RTSB                                            @G36XRYP
         DROP  R15                                             @G36XRYP
         BR    R14                      RETURN TO CALLER
         EJECT
PATCH    DC    30F'0'                   PATCH AREA             @OZ28765
FOXDOG   DC    X'00FFFFFD'              MASK TO AND OFF INVALID TIC
INVLDTIC DC    X'08000002'              INVALID TIC CCW
AUTOMSK  DC    X'01088000',A(AUTOLNNO)  AUTOLINENO MASK
ABNDMSK  DC    X'01088000',A(ABENDMSG)  ABEND MESSAGE MASK
OCABMSK  DC    X'01088000',A(OCABMSG)   OUT OF CORE ABEND MASK
RNAVMSK  DC    X'01088000',A(RNAVMSG)   REGION NOT AVAILABLE MASK
AUTOLNNO DC    X'01FF'                  AUTO LINE NUMBER
ABENDMSG DC    AL1(L'MABEND+1)          ABEND MESSAGE LENGTH
MABEND   DC    C'IKJ54001I SYSTEM FAILURE - ALL USERS TERMINATED'
         DC    X'15'                    NEW LINE
OCABMSG  DC    AL1(L'MOCAB+1)
MOCAB    DC    C'IKJ54003I SYSTEM FAILURE - PLEASE LOGON AGAIN'
         DC    X'15'                    NEW LINE
RNAVMSG  DC    AL1(L'MRNAV+1)           RNAV MESSAGE LENGTH
MRNAV    DC    C'IKJ54002I LOGON FAILED - RESOURCES NOT AVAILABLE NOW'
         DC    X'15'                    NEW LINE
         EJECT
         TAVTD
         EJECT
         TCCWD
         EJECT
         DCBD  DSORG=TX
         EJECT
         TDCTD
         EJECT
         TDISPD
         EJECT
         TLCBD
         EJECT
         TTNTD
         EJECT
         TTSID
         EJECT
         TPRFD
         EJECT
         TPRIOR
         EJECT
         TQCBD
         EJECT
         TSCBD
         EJECT
         TTCXD
         EJECT
         TTRMD
         EJECT
         CVT   DSECT=YES
         EJECT
         IHAASCB
         EJECT
         IHAASVT
         EJECT
         IKJTIOCB
         EJECT
         IKJTIOCP
         EJECT
         IKJTSB
         EJECT
         TSIBD                                                 @ZM47738
         END
