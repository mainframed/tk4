         TITLE 'IEDQNJ  -BUILT INCIDENT CKPT RECORD FOR OP. CONTROL'
IEDQNJ   CSECT
         SPACE 3
***********************************************************************
*                                                                     *
*                                                               SA65381
*MODULE-NAME: IEDQNJ (TCAM, CHECKPOINT/RESTART)                @Y17XACX
*                                                               SA65381
*DESCRIPTIVE-NAME: OPERATOR CONTROL INCIDENT CHECKPOINT RECORD  SA65381
*   BUILDER                                                     SA65381
*                                                               SA65381
*COPYRIGHT: 'NONE'                                              SA65381
*                                                                     *
*STATUS: VERSION 10.0                                          @Y17XACX
*                                                                     *
*FUNCTION:THIS MODULE BUILDS AN INCIDENT RECORD WHEN THE REQUEST      *
*   ELEMENT ON THE CHECKPOINT QCB IS FROM OPERATOR CONTROL. THE       *
*   INCIDENT RECORD IS A FORM OF THE OPERATOR CONTROL COMMAND         *
*   ITSELF RATHER THAN THE TABLES WHICH ARE CHANGED AS A RESULT OF    *
*   THE COMMAND.                                                      *
*        IF THE INCIDENT RECORD IS THE RESULT OF AN ICHNG MACRO,      *
*   OTHER THAN ACTIVATE OR DEACTIVATE ILIST, THE INVITATION LIST      *
*   IS MOVED INTO CONTINUATION SEGMENTS TO BE PLACED ON THE DISK      *
*   I/O QUEUE FOLLOWING THE RECORD CONTAINING THE ICHNG COMMAND.      *
*   THE OPTION FIELD TO BE CHANGED BY A MODIFY OPTIONS CONTROL        *
*   COMMAND IS CHECKPOINTED IN THE SAME MANNER.                       *
*                                                                     *
*ENTRY POINT:                                                         *
*                                                                     *
*        IEDQNJ                                                       *
*                                                                     *
*INPUT:REGISTERS 2,3,9,12,14,15 CONTAIN THE FOLLOWING:                *
*                                                                     *
*   2-ADDRESS OF THE CHECKPOINT WORK AREA                             *
*   3-ADDRESS OF REQUEST ELEMENT THIS MODULE IS TO PROCESS            *
*   9-ADDRESS OF AVT                                                  *
*   12-BASE REGISTER FOR IEDQNF-CHECKPOINT EXECUTOR                   *
*   14-RETURN ADDRESS-IN IEDQNF                                       *
*   15-ENTRY POINT FOR THIS MODULE                                    *
*                                                                     *
*   THE REQUEST ELEMENT POINTED TO BY R3                              *
*   THE OPERATOR CONTROL COMMAND ELEMENT POINTED TO BE THE            *
*     OPERATOR CONTROL AVT (OPCCOPCE).                                *
*                                                                     *
*OUTPUT:THE ABOVE REGISTERS 2-14 REMAIN UNCHANGED. R15 HAS A RETURN   *
*   CODE OFFSET.                                                      *
*                                                                     *
*   THIS MODULE BUILDS INCIDENT DISK RECORDS IN GETMAIN AREAS.        *
*   THE ADDRESS OF THE FIRST RECORD IS IN CKPLDRB.                    *
*                                                                     *
*EXTERNAL ROUTINES:                                                   *
*        SVC 4 (GETMAIN)                                              *
*        SVC 5 (FREEMAIN)                                             *
*                                                                     *
*EXITS-NORMAL:THIS MODULE BRANCHES TO THE ADDRESS IN R14. R15         *
*   CONTAINS THE OFFSET OF THE CHECKPOINT QUEUE MANAGER OR OF THE     *
*   INCIDENT OVERFLOW ROUTINE.                                        *
*                                                                     *
*EXITS-ERROR:THIS MODULE BRANCHES TO THE ADDRESS IN R14. R15          *
*   CONTAINS THE OFFSET OF THE NO CORE ROUTINE                        *
*                                                                     *
*TABLES/WORK AREAS:                                                   *
*                                                                     *
*        AVT                                                          *
*        CHECKPOINT WORK AREA                                         *
*        OPERATOR CONTROL AVT                                         *
*        OPERATOR CONTROL ELEMENT                                     *
*                                                                     *
*ATTRIBUTES:REENTERABLE                                               *
*                                                                     *
*NOTES:THE OPERATION OF THIS MODULE DEPENDS UPON AN INTERNAL REPRE-   *
*   SENTATION OF THE EXTERNAL CHARACTER SET WHICH IS EQUIVALENT TO    *
*   THE ONE USED AT ASSEMBLY TIME. THE CODING HAS BEEN ARRANGED SO    *
*   THAT REDEFINITION OF 'CHARACTER' CONSTANTS,BY REASSEMBLY, WILL    *
*   RESULT IN A CORRECT MODULE FOR THE NEW DEFINITIONS.               *
*                                                                     *
*CHANGE ACTIVITY                                               @Y17XACX
*A000000-999999                                                @Y16X5C0
*C024000,032000                                                 SA65381
*A318000                                                        SA65381
*C726000                                                        SA65381
*A008000,236000                                                @Y17XACX
*C024500,032000,472000,722790                                  @Y17XACX
*D008001-008003                                                @Y17XACX
*A370400,704000                                                @Y17XACL
*A319000,720720,721620                                         @Y17XACL
*A356000,704900                                                @YM06459
*C268000                                                       @YM06459
*A705800                                                       @OZ26268
***********************************************************************
         EJECT
*REGISTER ASSIGNMENTS
         SPACE
R0       EQU   0
R1       EQU   1                        PARM REG
R2       EQU   2                        ADDRESS OF CKPT WORK AREA
R3       EQU   3                        REQUEST ELEMENT BASE   @YM06459
R4       EQU   4                        ADDRESS OF DISK RECORD
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
RAVT     EQU   9                        ADDRESS OF AVT
R10      EQU   10
R11      EQU   11                       ADDRESS OF OP CNTRL WRKAREA
RBASE    EQU   12                       BASE REG
R13      EQU   13                       SAVE AREA
R14      EQU   14                       RETURN REG
R15      EQU   15                       ENTRY POINT OR RETURN CODE
TXDCB    EQU   X'40'                    TCAM DCB TEST
DATAOFF  EQU   5                        OFFSET TO ILIST DATA    SA65381
         SPACE 3
LEASW    EQU   X'01'                    LEASED OR SWITCHED     @Y17XACL
*                                       LINE INDICATOR         @Y17XACL
MULTI    EQU   X'02'                    MULTIPOINT LINE        @Y17XACL
*                                       INDICATOR              @Y17XACL
UCASIZE  EQU   12                       UNIT CONTROL SIZE      @Y17XACL
NUMOFF   EQU   12                       OFFSET TO NUMBER OF TNT@Y17XACL
*                                       IN THE UNIT            @Y17XACL
         EJECT                                                 @Y17XACL
*STANDARD LINKAGE
         SPACE
         USING *,R15                    TEMP BASE
IEDQNJ   IEDHJN QNJ00                                            S99240
         USING IEDQAVTD,RAVT
         USING IEDQCKPD,R2
         USING IEDQCRED,R3              REQUEST ELEMENT BASE   @YM06459
         SPACE 3
         L     R11,AVTOCGET             BASE FOR OP CNTRL WORK AREA
         USING IEDQOPCD,R11             BASE FOR OP CONTROL AVT  S99240
         XC    CKPLDRB(4),CKPLDRB       ZERO GETMAIN POINTER     S99240
         LA    R10,QNJ07                SET RETURN ADDRESS       S99240
         LA    R4,CKPLDRB               ADDR FOR GETMAIN POINTER S99240
         TM    AVTCKFLG,AVTCKENV        SHOULD AN ENVIRONMENT  @Y17XACL
*                                       CKPT BE FORCED VIA AN  @Y17XACL
*                                       INCIDENT OVERFLOW      @Y17XACL
         BO    QNJ38                    YES, BRANCH            @Y17XACL
QNJ03    EQU   *                                                 S99240
         SPACE 3
*CHECK FOR AN AVAILABLE INCIDENT DISK RECORD
         SPACE
         SR    R0,R0                    CLEAR
         IC    R0,CKPINCNO              GET NO OF AVAIL INCIDENTS
         LTR   R0,R0                    CHECK THE NO.
         BZ    QNJ40                    BRANCH IF NONE AVAILABLE
         BCTR  R0,0                     SUBTRACT ONE FROM COUNT
         STC   R0,CKPINCNO              RESTORE COUNT
         SPACE 3
*ISSUE GETMAIN FOR OPERATOR CONTROL INCIDENT RECORD
         SPACE
         LR    R6,R15                   SAVE REG
         LH    R5,CKPINCLN              LENGTH OF INCIDENT
         GETMAIN EC,LV=(R5),A=(R4),MF=(E,CKPGETML)
         LTR   R15,R15                  CHECK RETURN CODE
         LR    R15,R6                   RESTORE REG
         BNZ   QNJ30                    BRANCH IF CORE NOT AVAIL.
         SPACE 3
*BUILD DISK RECORD
         SPACE
         L     R4,AVTEZERO(R4)          ADDRESS OF DISK RECORD   S99240
         USING IEDQCDRD,R4              BASE FOR DISK RECORD
         XC    CDRDATE(CDRDATA-IEDQCDRD),CDRDATE CLEAR PREFIX    S99240
         MVI   CDRKEY,CDROPC
         BR    R10                      RETURN TO CALLING ROUTINES99240
QNJ07    EQU   *                        RETURN IS HERE IF NOT    S99240
*                                        A CONTINUATION SEGMENT  S99240
         L     R6,OPCCKPTF              GET CURRENT ELEMENT    @Y17XACX
*                                       ADDR.                  @Y17XACX
         USING IEDQOPCE,R6              BASE FOR OP CTL ELEMENT  S99240
         MVC   CDROPCB(CDROPCBL),OCOPTCDE MOVE OPC ELEMENT TO    S99240
*                                        DISK RECORD             S99240
         SPACE 3
*CHECK FOR UCB ADDRESS  IN START LINE OR STOP LINE COMMAND AND CONVERT
*TO DDNAME AND RELATIVE LINE NUMBER FOR RESTART.
         SPACE
OCTERM   EQU   X'40'                    COMMAND IS FOR TERMINAL  S99240
         NI    CDROPCB+CKPOCSWC,OCFOXES-OCTERM TURN OFF TERMINAL S99240
*                                        INDICATOR               S99240
         TM    CDROPCB+CKPOCFLG,OCLINE  DOES COMMAND CONTAIN LINES99240
*                                        NUMBER                  S99240
         BZ    QNJ23                    NO, DON'T CONVERT        S99240
         L     R5,AVTTCB                GET TCB ADDR               0629
         USING IEDQTCB,R5               BASE FOR TCB               0629
         L     R6,TCBDEB                GET DEB CHAIN              0629
         USING IEDQDEB,R6               BASE FOR DEB               0629
QNJ15    EQU   *                                                   0629
         L     R10,DEBDCBAD             GET DCB ADDRESS            0629
         USING IHADCB,R10
         TM    DCBDSORG+1,TXDCB         IS THIS A TCAM DCB
         BZ    QNJ21                    BRANCH, IF NOT
         IC    R7,DEBNMEXT              NUMBER OF EXTENTS-LINES    0714
         LA    R8,1                     INITIALIZE RELATIVE LINE NO0629
QNJ20    EQU   *                                                   0629
         LR    R1,R8                    RELATIVE LINE NUMBER       0629
         SLL   R1,2                     MULTIPLY BY 4              0629
         L     R13,DEBUCBAD-5(R1)       GET UCB ADDRESS            0629
         USING IEDQUCB,R13              BASE FOR DEB               0629
         MVC   CDROPCB+CKPOCNAM(2),UCBCHA MOVE UNIT ADDRESS TO   S99240
*                                        WORK AREA               S99240
         NI    CDROPCB+CKPOCNAM,7       TURN OFF UCB STATUS BITS S99240
         CLC   CDROPCB+CKPOCLNO(2),CDROPCB+CKPOCNAM  COMPARE     S99240
*                                        UCB ADDRESSES           S99240
         BE    QNJ22                    BRANCH IF EQUAL            0629
         LA    R8,1(,R8)                ADD 1 TO RELATIVE LINE A   0629
         BCT   R7,QNJ20                 SUB FROM NO. LINES FOR DCB 0629
QNJ21    EQU   *
         L     R6,DEBDEBAD-1            GET NEXT DEB IN TCB CHAIN  0629
         LA    R6,0(,R6)                CLEAR HIGH ORDER BYTE      0629
         LTR   R6,R6                    CHECK FOR END OF CHAIN     0629
         BNZ   QNJ15                    BRANCH IF NOT END OF CHAIN 0629
QNJ22    EQU   *                                                   0629
         LH    R7,DCBTIOT               GET TIOT ADDR              0629
         A     R7,TCBTIO                ADD OFFSET FOR EXTENT      0629
         MVC   CDROPCB+CKPOCNAM(8),4(R7)  MOVE DDNAME TO INCIDENT R0629
         NI    CDROPCB+CKPOCFLG,OCFOXES-OCLINE TURN OFF LINE NO. S99240
*                                        INDICATOR               S99240
         STC   R8,CDROPCB+CKPOCREL      SAVE RELATIVE LINE NO.     0629
QNJ23    CLI   CDROPCB+CKPOCODE,OCICHNG ICHNG COMMAND            S99240
         BE    QNJ50                    YES, CHECK TYPE          S99240
         CLC   CDROPCB+CKPOCODE(2),QNJMODOP MODIFY OPTIONS       S99240
         BE    QNJ80                    YES, CHECK FOR           S99240
*                                        CONTINUATION SEGMENTS   S99240
QNJ24    OI    CDRTTRLI+2,2             SET TO SHOW LAST SEGMENT S99240
         SPACE 3
*RETURN TO CKPT EXECUTOR
         SPACE
QNJ25    EQU   *                                                   0629
         LA    R15,CKPIOQM              ADDRESS OF I/O QUEUE MANAGR
         BR    R14                      RETURN TO EXECUTOR
         SPACE 3
*SET RETURN CODE TO LOAD NO CORE ROUTINE
         SPACE
QNJ30    EQU   *
         LA    R10,QNJ35                SET RETURN ADDRESS       S99240
QNJ33    L     R4,CKPLDRB               GET FIRST SEGMENT ADDR.  S99240
         LTR   R4,R4                    WAS GETMAIN PARTIALLY    S99240
*                                        SUCCESSFUL              S99240
         BCR   8,R10                    NO FREEMAIN NEEDED       S99240
         LA    R5,CKPLDRB               POINTER TO ADDR OF AREA  S99240
         ST    R5,CKPGETML+4            PUT POINTER IN PARM LIST S99240
         L     R4,CDRDATE               GET POINTER TO CONTINUED S99240
*                                        SEGMENT                 S99240
         LR    R6,R15                   SAVE BASE REGISTER       S99240
         FREEMAIN E,MF=(E,CKPGETML),SP=0 FREE I/O BUFFER         S99240
         LR    R15,R6                   RESTORE BASE             S99240
         ST    R4,CKPLDRB               SAVE ADDR OF NEXT SEGMENTS99240
         B     QNJ33                    CHECK FOR MORE TO FREE   S99240
QNJ35    EQU   *                                                 S99240
         LA    R15,CKPNOCOR             OFFSET FOR RTN NAME
         BR    R14                      RETURN TO EXECUTOR
         EJECT                                                 @Y17XACL
*SET RETURN CODE TO LOAD NO INCIDENTS ROUTINE
         SPACE 2                                               @Y17XACL
QNJ38    EQU   *                                               @Y17XACL
         USING IEDQOPCE,R8                                     @Y17XACL
         NI    AVTCKFLG,AVTEFF-AVTCKENV  RESET ENVIRONMENT     @YM06459
*                                       CHECKPOINT REQUEST     @YM06459
         OI    CREKEY,CREINCOF          SET INCIDENT OVERFLOW  @YM06459
         L     R8,OPCCKPTF              GET OPCE ADDRESS       @Y17XACL
         CLI   OCOPTCDE,OCHALT          HALT COMMAND           @Y17XACL
         BE    QNJCMCPN                 YES, BRANCH            @OZ26268
         CLI   OCOPTCDE,OCCLOSEQ        MPP CLOSE QUICK        @OZ26268
         BE    QNJCMCPN                 YES, BRANCH            @OZ26268
         CLI   OCOPTCDE,OCCLOSEF        MPP CLOSE FLUSH        @OZ26268
         BNE   QNJ40                    NO, BRANCH             @OZ26268
QNJCMCPN EQU   *                                               @OZ26268
         OI    AVTCKELF,AVTCMCPN        INDICATE THAT MCPCLOSE @Y17XACL
*                                       REQUESTED CHECKPOINT   @Y17XACL
         OI    AVTCKFLG,AVTCKHLT        INDICATE THAT A HALT   @Y17XACL
*                                       CMD HAS CAUSED AN      @Y17XACL
*                                       ENVIRONMENT CKPT       @Y17XACL
         SPACE
QNJ40    EQU   *
         BAL   R10,QNJ33                GO CHECK FOR FREEMAIN    S99240
         LA    R15,CKPNOINC             OFFSET FOR RTN NAME
         BR    R14                      RETURN TO EXECUTOR
         EJECT                                                 @Y17XACL
************************************************************** @Y71XACL
*                                                            * @Y71XACL
*        DETERMINE TYPE OF ICHNG COMMAND. COMMAND IS ICHNG   * @Y71XACL
*        ACT OR ICHNG DEACT IF CNROPCB IS 0 OR 1,            * @Y71XACL
*        RESPECTIVELY.                                       * @Y71XACL
*                                                            * @Y71XACL
************************************************************** @Y71XACL
QNJ50    LM    R7,R8,CDROPCB+CKPOCLST   PICK UP ILIST ADDR AND   S99240
*                                        ILIST LENGTH            S99240
         LA    R7,0(R7)                 CLEAR HIGH ORDER BYTE    S99240
         CH    R7,AVTHA2                ILIST ADDR OF ZERO OR    S99240
         BL    QNJ24                     ONE INDICATES ACTIVATE  S99240
*                                        OR DEACT ILIST - DO NOT S99240
*                                        MOVE ILIST INTO RECORD  S99240
*                                        TO BE CHECKPOINTED      S99240
         EJECT                                                 @Y71XACL
************************************************************** @Y71XACL
*                                                            * @Y71XACL
*        DETERMINE TYPE IF ICHNG MOVE. CKPTRMAD WILL CONTAIN * @Y71XACL
*        THE DATA FROM OCICTYPE IN THE ICHNG OPCE. IF        * @Y71XACL
*        CKPTRMAD=0, THEN THIS IS AN ICHNG MOVE FOR A 270X   * @Y71XACL
*        LINE. IF CKPTRMAD=1, THEN THIS IS ICHNG MOVE FOR    * @Y71XACL
*        A 3705 LEASED LINE. IF CKPTRMAD=2, THEN THIS IS     * @Y71XACL
*        ICHNG MOVE FOR A 3705 MULTIPOINT LINE.              * @Y71XACL
*                                                            * @Y71XACL
************************************************************** @Y71XACL
         MVC   CKPTRMAD(1),CDROPCB+CKPOCLST SAVE ICHNG TYPE    @Y71XACL
         CLI   CKPTRMAD,LEASW           IS ICHNG FOR A LEASED  @Y71XACL
*                                       OR A SWITCHED LINE ON  @Y71XACL
*                                       A 3705                 @Y71XACL
         BE    QNJ24                    YES, BRANCH            @Y71XACL
         SPACE 1                                               @Y71XACL
         CLI   CKPTRMAD,MULTI           IS ICHNG FOR MULTIPOINT@Y71XACL
*                                       3705 LINE              @Y71XACL
         BNE   QNJ55                    NO, BRANCH             @Y71XACL
         LA    R7,CKPSAVE2+8            GET ADDRESS OF PARM    @Y71XACL
*                                       LIST FOR MOVE BUFFER   @Y71XACL
         USING IEDPLMV,R7               ADDRESSABILITY         @Y71XACL
         L     R8,OPCCKPTF              GET OPCE ADDRESS       @Y71XACL
         L     R6,OCUNIT                GET ADDR OF UNITS TO   @Y71XACL
*                                       CHECKPOINT             @Y71XACL
         ST    R6,PLMVSU                SAVE ADDR OF SOURCE    @Y71XACL
*                                       UNIT                   @Y71XACL
         LA    R8,UCASIZE(,R6)          GET ADDR OF START OF   @Y71XACL
*                                       DATA IN THE UNIT       @Y71XACL
         ST    R8,PLMVSD                SAVE ADDRESS           @Y71XACL
         LH    R8,NUMOFF(,R6)           GET NUMBER OF TNT      @Y71XACL
*                                       OFFSET ENTRIES         @Y71XACL
         LA    R8,1(,R8)                ADD 1 FOR THE CONTROL  @Y71XACL
*                                       ENTRY                  @Y71XACL
         MH    R8,ENTLEN                CALCULATE LENGTH OF    @Y71XACL
*                                       ALL TNT OFFSET ENTRIES @Y71XACL
         MVI   PLMVFLG1,PLMVTCTG        TARGET IS CONTIGUOUS   @Y71XACL
         MVI   PLMVFLG2,0               CLEAR UNUSED FLAGS     @Y71XACL
         SLR   R6,R6                    CLEAR FOR STORE        @Y71XACL
         ST    R6,PLMVUNCA              CLEAR CHAIN FIELD      @Y71XACL
         EJECT                                                 @Y71XACL
QNJ55    EQU   *                                               @Y71XACL
         SR    R11,R11                  INITIALIZE OFFSET TO ZEROS99240
QNJ60    LA    R4,CDRDATE               ADDR FOR GETMAIN POINTER S99240
         BAL   R10,QNJ03                ISSUE GETMAIN            S99240
         OI    CDRTTRLI+2,1             FLAG CONTINUATION SEGMENTS99240
         MVI   CDROPCB+CKPOCODE,OCICHNG SET ICHNG CODE           S99240
         LA    R5,CDROPCBL-5            SET UP LENGTH FOR MOVE   S99240
         SR    R8,R5                    GET REMAINING LENGTH     S99240
         BP    QNJ70                    POSITIVE REMAINDER       S99240
         AR    R5,R8                    ELSE PUT AMOUNT OF DATA  S99240
*                                        TO MOVE IN R5           S99240
QNJ70    EQU   *                                               @Y71XACL
         CLI   CKPTRMAD,MULTI           3705 MULTIPOINT LINE   @Y71XACL
         BNE   QNJ75                    NO, BRANCH             @Y71XACL
         SPACE 1                                               @Y71XACL
         LA    R1,CDROPCB+DATAOFF       GET TARGET ADDRESS FOR @Y71XACL
*                                       MOVE BUFFER            @Y71XACL
         ST    R1,PLMVSU                SET SOURCE ...         @Y71XACL
         ST    R1,PLMVSD                ... ADDRESSES          @Y71XACL
         STH   R5,PLMVLNTH              SET LENGTH TO MOVE     @Y71XACL
         STM   R14,R15,CKPSAVE2         SAVE RETURN ADDRESS    @Y71XACL
*                                       AND BASE REGISTER      @Y71XACL
         LR    R1,R7                    GET ADDR OF PARM LIST  @Y71XACL
         LA    R13,SAVEAREA             GET ADDR OF SAVE AREA  @Y71XACL
         L     R15,AVTSAVTP             GET ADDR OF SEC. AVT   @Y71XACL
         L     R15,SAVTMVBF-IEDNSVTD(,R15) GET ADDR OF MOVE    @Y71XACL
*                                       BUFFER ROUTINE         @Y71XACL
         BALR  R14,R15                  CALL MOVE BUFFER       @Y71XACL
         LM    R14,R15,CKPSAVE2         RESTORE RETURN ADDRESS @Y71XACL
*                                       AND BASE REGISTER      @Y71XACL
         B     QNJ77                    GO CHECK FOR MORE DATA @Y71XACL
         EJECT                                                 @Y71XACL
QNJ75    EQU   *                                               @Y71XACL
         BCTR  R5,0                     SUBTRACT ONE FOR EXECUTE S99240
         EX    R5,QNJMOVEI              MOVE ILIST TO RECORD     S99240
         LA    R7,CDROPCBL-5(,R7)       INCREMENT ILIST ADDRESS@Y71XACL
         SPACE 2                                               @Y71XACL
QNJ77    EQU   *                                               @Y71XACL
         STH   R11,CDROPCB+CKPOCFLG     PUT OFFSET INTO ILIST    S99240
         STC   R5,CDROPCB+CKPOCFLG+2    INSERT DATA LENGTH - 1   S99240
*                                       (DATA LENGTH FOR 3705) @Y71XACL
         LA    R11,CDROPCBL-5(R11)      BUMP OFFSET BY LENGTH    S99240
*                                        OF DATA IN SEGMENT      S99240
         LTR   R8,R8                    ANY DATA LEFT            S99240
         BP    QNJ60                    YES, RELOOP              S99240
         B     QNJ24                    ELSE EXIT TO I/O Q MGR   S99240
         EJECT                                                 @Y17XACL
         USING IEDQOPCE,R8              BASE FOR OPC ELEMENT     S99240
QNJ80    L     R8,OPCCKPTF              RELOAD FIRST ELEMENT   @Y17XACX
*                                       ADDR                   @Y17XACX
QNJ90    TM    OCUNIT+3,2               IS THERE ANOTHER RECORD  S99240
         BO    QNJ24                    NO, EXIT TO QUEUE MANAGERS99240
         LA    R4,CDRDATE               ADDR FOR GETMAIN POINTER S99240
         BAL   R10,QNJ03                ISSUE GETMAIN            S99240
         L     R8,OCUNIT                GET ADDR OF NEXT ELEMENT S99240
         OI    CDRTTRLI+2,1             FLAG AS CONTINUATION SEG S99240
         MVC   CDROPCB(CDROPCBL),OCOPTCDE MOVE SEGMENT TO OUTPUT S99240
*                                        BUFFER                  S99240
         B     QNJ90                    AND RELOOP               S99240
         EJECT                                                 @Y71XACL
QNJMODOP DC    X'4415'                  MODIFY OPTIONS           S99240
QNJMOVEI MVC   CDROPCB+DATAOFF(AVTEZERO),AVTEZERO(R7) MOVE ILISTSA65381
*                                        TO DISK RECORD         SA65381
         SPACE 3                                               @Y71XACL
SAVEAREA DC    18F'0'                   SAVEAREA               @Y71XACL
         SPACE 1                                               @Y71XACL
ENTLEN   DC    H'3'                     LENGTH OF TNT OFFSET   @Y71XACL
*                                       ENTRY                  @Y71XACL
         EJECT                                                 @Y17XACL
         TAVTD
         EJECT                                                 @Y17XACL
         TCKPD 3330
         EJECT
         TOPCAVTD
         EJECT
         TOPCED
         EJECT
         TPLMVD                                                @Y71XACL
         EJECT                                                 @Y71XACL
         DCBD  DSORG=TX
         EJECT                                                 @Y71XACL
IEDQTCB  DSECT                                             -       0629
         ORG   IEDQTCB+8                                   -       0629
TCBDEB   DS    F                        ADDRESS OF E DEB CHAIN     0629
TCBTIO   DS    F                        ADDRESS OF TIOT BEGINNING  0629
         EJECT                                                 @Y71XACL
IEDQDEB  DSECT                                                     0629
         ORG   IEDQDEB+5                OFFSET TO NEXT DEB ADDR. S99240
DEBDEBAD DS    XL3                      ADDRESS OF NEXT DEB      S99240
         ORG   IEDQDEB+16               OFFSET TO NO. OF EXTENTS S99240
DEBNMEXT DS    X                        DEB NUMBER OF EXTENTS    S99240
         ORG   IEDQDEB+24               OFFSET TO DCB ADDR.      S99240
DEBDCBAD DS    F                        ADDRESS OF DCB           S99240
         ORG   IEDQDEB+33               OFFSET TO FIRST UCB ADDR.S99240
DEBUCBAD DS    XL3                      ADDRESS OF UCB             0629
         EJECT                                                 @Y71XACL
IEDQUCB  DSECT                                                     0629
         ORG   IEDQUCB+4                OFFSET TO UNIT ADDR.     S99240
UCBCHA   DS    XL2                      BINARY CHANNEL/UNIT ADDR.S99240
         ORG   IEDQUCB+13               OFFSET TO EBCDIC LINE NO.S99240
UCBNAME  DS    XL8                      NAME OF LINE -ADDRESS      0629
         SPACE 3                                               @Y71XACL
         END
